# id;timestamp;commentText;codeText;commentWords;codeWords
RequestMapping -> String name() default ""_;1399404473;Assign a name to this mapping._<p><b>Supported at the method and also at type level!</b>_When used on both levels, a combined name is derived by_concatenation with "#" as separator.__@see org.springframework.web.servlet.mvc.method.annotation.MvcUriComponentsBuilder_@see org.springframework.web.servlet.handler.HandlerMethodMappingNamingStrategy;String name() default ""_;assign,a,name,to,this,mapping,p,b,supported,at,the,method,and,also,at,type,level,b,when,used,on,both,levels,a,combined,name,is,derived,by,concatenation,with,as,separator,see,org,springframework,web,servlet,mvc,method,annotation,mvc,uri,components,builder,see,org,springframework,web,servlet,handler,handler,method,mapping,naming,strategy;string,name,default
RequestMapping -> String name() default ""_;1403791284;Assign a name to this mapping._<p><b>Supported at the type level as well as at the method level!</b>_When used on both levels, a combined name is derived by concatenation_with "#" as separator._@see org.springframework.web.servlet.mvc.method.annotation.MvcUriComponentsBuilder_@see org.springframework.web.servlet.handler.HandlerMethodMappingNamingStrategy;String name() default ""_;assign,a,name,to,this,mapping,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,on,both,levels,a,combined,name,is,derived,by,concatenation,with,as,separator,see,org,springframework,web,servlet,mvc,method,annotation,mvc,uri,components,builder,see,org,springframework,web,servlet,handler,handler,method,mapping,naming,strategy;string,name,default
RequestMapping -> String name() default ""_;1411403899;Assign a name to this mapping._<p><b>Supported at the type level as well as at the method level!</b>_When used on both levels, a combined name is derived by concatenation_with "#" as separator._@see org.springframework.web.servlet.mvc.method.annotation.MvcUriComponentsBuilder_@see org.springframework.web.servlet.handler.HandlerMethodMappingNamingStrategy;String name() default ""_;assign,a,name,to,this,mapping,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,on,both,levels,a,combined,name,is,derived,by,concatenation,with,as,separator,see,org,springframework,web,servlet,mvc,method,annotation,mvc,uri,components,builder,see,org,springframework,web,servlet,handler,handler,method,mapping,naming,strategy;string,name,default
RequestMapping -> String name() default ""_;1411728985;Assign a name to this mapping._<p><b>Supported at the type level as well as at the method level!</b>_When used on both levels, a combined name is derived by concatenation_with "#" as separator._@see org.springframework.web.servlet.mvc.method.annotation.MvcUriComponentsBuilder_@see org.springframework.web.servlet.handler.HandlerMethodMappingNamingStrategy;String name() default ""_;assign,a,name,to,this,mapping,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,on,both,levels,a,combined,name,is,derived,by,concatenation,with,as,separator,see,org,springframework,web,servlet,mvc,method,annotation,mvc,uri,components,builder,see,org,springframework,web,servlet,handler,handler,method,mapping,naming,strategy;string,name,default
RequestMapping -> String name() default ""_;1414097580;Assign a name to this mapping._<p><b>Supported at the type level as well as at the method level!</b>_When used on both levels, a combined name is derived by concatenation_with "#" as separator._@see org.springframework.web.servlet.mvc.method.annotation.MvcUriComponentsBuilder_@see org.springframework.web.servlet.handler.HandlerMethodMappingNamingStrategy;String name() default ""_;assign,a,name,to,this,mapping,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,on,both,levels,a,combined,name,is,derived,by,concatenation,with,as,separator,see,org,springframework,web,servlet,mvc,method,annotation,mvc,uri,components,builder,see,org,springframework,web,servlet,handler,handler,method,mapping,naming,strategy;string,name,default
RequestMapping -> String name() default ""_;1414155598;Assign a name to this mapping._<p><b>Supported at the type level as well as at the method level!</b>_When used on both levels, a combined name is derived by concatenation_with "#" as separator._@see org.springframework.web.servlet.mvc.method.annotation.MvcUriComponentsBuilder_@see org.springframework.web.servlet.handler.HandlerMethodMappingNamingStrategy;String name() default ""_;assign,a,name,to,this,mapping,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,on,both,levels,a,combined,name,is,derived,by,concatenation,with,as,separator,see,org,springframework,web,servlet,mvc,method,annotation,mvc,uri,components,builder,see,org,springframework,web,servlet,handler,handler,method,mapping,naming,strategy;string,name,default
RequestMapping -> String name() default ""_;1422572109;Assign a name to this mapping._<p><b>Supported at the type level as well as at the method level!</b>_When used on both levels, a combined name is derived by concatenation_with "#" as separator._@see org.springframework.web.servlet.mvc.method.annotation.MvcUriComponentsBuilder_@see org.springframework.web.servlet.handler.HandlerMethodMappingNamingStrategy;String name() default ""_;assign,a,name,to,this,mapping,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,on,both,levels,a,combined,name,is,derived,by,concatenation,with,as,separator,see,org,springframework,web,servlet,mvc,method,annotation,mvc,uri,components,builder,see,org,springframework,web,servlet,handler,handler,method,mapping,naming,strategy;string,name,default
RequestMapping -> String name() default ""_;1427139532;Assign a name to this mapping._<p><b>Supported at the type level as well as at the method level!</b>_When used on both levels, a combined name is derived by concatenation_with "#" as separator._@see org.springframework.web.servlet.mvc.method.annotation.MvcUriComponentsBuilder_@see org.springframework.web.servlet.handler.HandlerMethodMappingNamingStrategy;String name() default ""_;assign,a,name,to,this,mapping,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,on,both,levels,a,combined,name,is,derived,by,concatenation,with,as,separator,see,org,springframework,web,servlet,mvc,method,annotation,mvc,uri,components,builder,see,org,springframework,web,servlet,handler,handler,method,mapping,naming,strategy;string,name,default
RequestMapping -> String name() default ""_;1429532371;Assign a name to this mapping._<p><b>Supported at the type level as well as at the method level!</b>_When used on both levels, a combined name is derived by concatenation_with "#" as separator._@see org.springframework.web.servlet.mvc.method.annotation.MvcUriComponentsBuilder_@see org.springframework.web.servlet.handler.HandlerMethodMappingNamingStrategy;String name() default ""_;assign,a,name,to,this,mapping,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,on,both,levels,a,combined,name,is,derived,by,concatenation,with,as,separator,see,org,springframework,web,servlet,mvc,method,annotation,mvc,uri,components,builder,see,org,springframework,web,servlet,handler,handler,method,mapping,naming,strategy;string,name,default
RequestMapping -> String name() default ""_;1429886024;Assign a name to this mapping._<p><b>Supported at the type level as well as at the method level!</b>_When used on both levels, a combined name is derived by concatenation_with "#" as separator._@see org.springframework.web.servlet.mvc.method.annotation.MvcUriComponentsBuilder_@see org.springframework.web.servlet.handler.HandlerMethodMappingNamingStrategy;String name() default ""_;assign,a,name,to,this,mapping,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,on,both,levels,a,combined,name,is,derived,by,concatenation,with,as,separator,see,org,springframework,web,servlet,mvc,method,annotation,mvc,uri,components,builder,see,org,springframework,web,servlet,handler,handler,method,mapping,naming,strategy;string,name,default
RequestMapping -> String name() default ""_;1432246071;Assign a name to this mapping._<p><b>Supported at the type level as well as at the method level!</b>_When used on both levels, a combined name is derived by concatenation_with "#" as separator._@see org.springframework.web.servlet.mvc.method.annotation.MvcUriComponentsBuilder_@see org.springframework.web.servlet.handler.HandlerMethodMappingNamingStrategy;String name() default ""_;assign,a,name,to,this,mapping,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,on,both,levels,a,combined,name,is,derived,by,concatenation,with,as,separator,see,org,springframework,web,servlet,mvc,method,annotation,mvc,uri,components,builder,see,org,springframework,web,servlet,handler,handler,method,mapping,naming,strategy;string,name,default
RequestMapping -> String name() default ""_;1438176426;Assign a name to this mapping._<p><b>Supported at the type level as well as at the method level!</b>_When used on both levels, a combined name is derived by concatenation_with "#" as separator._@see org.springframework.web.servlet.mvc.method.annotation.MvcUriComponentsBuilder_@see org.springframework.web.servlet.handler.HandlerMethodMappingNamingStrategy;String name() default ""_;assign,a,name,to,this,mapping,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,on,both,levels,a,combined,name,is,derived,by,concatenation,with,as,separator,see,org,springframework,web,servlet,mvc,method,annotation,mvc,uri,components,builder,see,org,springframework,web,servlet,handler,handler,method,mapping,naming,strategy;string,name,default
RequestMapping -> String name() default ""_;1444666351;Assign a name to this mapping._<p><b>Supported at the type level as well as at the method level!</b>_When used on both levels, a combined name is derived by concatenation_with "#" as separator._@see org.springframework.web.servlet.mvc.method.annotation.MvcUriComponentsBuilder_@see org.springframework.web.servlet.handler.HandlerMethodMappingNamingStrategy;String name() default ""_;assign,a,name,to,this,mapping,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,on,both,levels,a,combined,name,is,derived,by,concatenation,with,as,separator,see,org,springframework,web,servlet,mvc,method,annotation,mvc,uri,components,builder,see,org,springframework,web,servlet,handler,handler,method,mapping,naming,strategy;string,name,default
RequestMapping -> String name() default ""_;1446446882;Assign a name to this mapping._<p><b>Supported at the type level as well as at the method level!</b>_When used on both levels, a combined name is derived by concatenation_with "#" as separator._@see org.springframework.web.servlet.mvc.method.annotation.MvcUriComponentsBuilder_@see org.springframework.web.servlet.handler.HandlerMethodMappingNamingStrategy;String name() default ""_;assign,a,name,to,this,mapping,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,on,both,levels,a,combined,name,is,derived,by,concatenation,with,as,separator,see,org,springframework,web,servlet,mvc,method,annotation,mvc,uri,components,builder,see,org,springframework,web,servlet,handler,handler,method,mapping,naming,strategy;string,name,default
RequestMapping -> String name() default ""_;1453844264;Assign a name to this mapping._<p><b>Supported at the type level as well as at the method level!</b>_When used on both levels, a combined name is derived by concatenation_with "#" as separator._@see org.springframework.web.servlet.mvc.method.annotation.MvcUriComponentsBuilder_@see org.springframework.web.servlet.handler.HandlerMethodMappingNamingStrategy;String name() default ""_;assign,a,name,to,this,mapping,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,on,both,levels,a,combined,name,is,derived,by,concatenation,with,as,separator,see,org,springframework,web,servlet,mvc,method,annotation,mvc,uri,components,builder,see,org,springframework,web,servlet,handler,handler,method,mapping,naming,strategy;string,name,default
RequestMapping -> String name() default ""_;1453844270;Assign a name to this mapping._<p><b>Supported at the type level as well as at the method level!</b>_When used on both levels, a combined name is derived by concatenation_with "#" as separator._@see org.springframework.web.servlet.mvc.method.annotation.MvcUriComponentsBuilder_@see org.springframework.web.servlet.handler.HandlerMethodMappingNamingStrategy;String name() default ""_;assign,a,name,to,this,mapping,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,on,both,levels,a,combined,name,is,derived,by,concatenation,with,as,separator,see,org,springframework,web,servlet,mvc,method,annotation,mvc,uri,components,builder,see,org,springframework,web,servlet,handler,handler,method,mapping,naming,strategy;string,name,default
RequestMapping -> String name() default ""_;1456522551;Assign a name to this mapping._<p><b>Supported at the type level as well as at the method level!</b>_When used on both levels, a combined name is derived by concatenation_with "#" as separator._@see org.springframework.web.servlet.mvc.method.annotation.MvcUriComponentsBuilder_@see org.springframework.web.servlet.handler.HandlerMethodMappingNamingStrategy;String name() default ""_;assign,a,name,to,this,mapping,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,on,both,levels,a,combined,name,is,derived,by,concatenation,with,as,separator,see,org,springframework,web,servlet,mvc,method,annotation,mvc,uri,components,builder,see,org,springframework,web,servlet,handler,handler,method,mapping,naming,strategy;string,name,default
RequestMapping -> String name() default ""_;1456766757;Assign a name to this mapping._<p><b>Supported at the type level as well as at the method level!</b>_When used on both levels, a combined name is derived by concatenation_with "#" as separator._@see org.springframework.web.servlet.mvc.method.annotation.MvcUriComponentsBuilder_@see org.springframework.web.servlet.handler.HandlerMethodMappingNamingStrategy;String name() default ""_;assign,a,name,to,this,mapping,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,on,both,levels,a,combined,name,is,derived,by,concatenation,with,as,separator,see,org,springframework,web,servlet,mvc,method,annotation,mvc,uri,components,builder,see,org,springframework,web,servlet,handler,handler,method,mapping,naming,strategy;string,name,default
RequestMapping -> String name() default ""_;1467668027;Assign a name to this mapping._<p><b>Supported at the type level as well as at the method level!</b>_When used on both levels, a combined name is derived by concatenation_with "#" as separator._@see org.springframework.web.servlet.mvc.method.annotation.MvcUriComponentsBuilder_@see org.springframework.web.servlet.handler.HandlerMethodMappingNamingStrategy;String name() default ""_;assign,a,name,to,this,mapping,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,on,both,levels,a,combined,name,is,derived,by,concatenation,with,as,separator,see,org,springframework,web,servlet,mvc,method,annotation,mvc,uri,components,builder,see,org,springframework,web,servlet,handler,handler,method,mapping,naming,strategy;string,name,default
RequestMapping -> String name() default ""_;1467677340;Assign a name to this mapping._<p><b>Supported at the type level as well as at the method level!</b>_When used on both levels, a combined name is derived by concatenation_with "#" as separator._@see org.springframework.web.servlet.mvc.method.annotation.MvcUriComponentsBuilder_@see org.springframework.web.servlet.handler.HandlerMethodMappingNamingStrategy;String name() default ""_;assign,a,name,to,this,mapping,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,on,both,levels,a,combined,name,is,derived,by,concatenation,with,as,separator,see,org,springframework,web,servlet,mvc,method,annotation,mvc,uri,components,builder,see,org,springframework,web,servlet,handler,handler,method,mapping,naming,strategy;string,name,default
RequestMapping -> String name() default ""_;1491341544;Assign a name to this mapping._<p><b>Supported at the type level as well as at the method level!</b>_When used on both levels, a combined name is derived by concatenation_with "#" as separator._@see org.springframework.web.servlet.mvc.method.annotation.MvcUriComponentsBuilder_@see org.springframework.web.servlet.handler.HandlerMethodMappingNamingStrategy;String name() default ""_;assign,a,name,to,this,mapping,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,on,both,levels,a,combined,name,is,derived,by,concatenation,with,as,separator,see,org,springframework,web,servlet,mvc,method,annotation,mvc,uri,components,builder,see,org,springframework,web,servlet,handler,handler,method,mapping,naming,strategy;string,name,default
RequestMapping -> String name() default ""_;1491599707;Assign a name to this mapping._<p><b>Supported at the type level as well as at the method level!</b>_When used on both levels, a combined name is derived by concatenation_with "#" as separator._@see org.springframework.web.servlet.mvc.method.annotation.MvcUriComponentsBuilder_@see org.springframework.web.servlet.handler.HandlerMethodMappingNamingStrategy;String name() default ""_;assign,a,name,to,this,mapping,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,on,both,levels,a,combined,name,is,derived,by,concatenation,with,as,separator,see,org,springframework,web,servlet,mvc,method,annotation,mvc,uri,components,builder,see,org,springframework,web,servlet,handler,handler,method,mapping,naming,strategy;string,name,default
RequestMapping -> String name() default ""_;1506454198;Assign a name to this mapping._<p><b>Supported at the type level as well as at the method level!</b>_When used on both levels, a combined name is derived by concatenation_with "#" as separator._@see org.springframework.web.servlet.mvc.method.annotation.MvcUriComponentsBuilder_@see org.springframework.web.servlet.handler.HandlerMethodMappingNamingStrategy;String name() default ""_;assign,a,name,to,this,mapping,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,on,both,levels,a,combined,name,is,derived,by,concatenation,with,as,separator,see,org,springframework,web,servlet,mvc,method,annotation,mvc,uri,components,builder,see,org,springframework,web,servlet,handler,handler,method,mapping,naming,strategy;string,name,default
RequestMapping -> String name() default ""_;1515421792;Assign a name to this mapping._<p><b>Supported at the type level as well as at the method level!</b>_When used on both levels, a combined name is derived by concatenation_with "#" as separator._@see org.springframework.web.servlet.mvc.method.annotation.MvcUriComponentsBuilder_@see org.springframework.web.servlet.handler.HandlerMethodMappingNamingStrategy;String name() default ""_;assign,a,name,to,this,mapping,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,on,both,levels,a,combined,name,is,derived,by,concatenation,with,as,separator,see,org,springframework,web,servlet,mvc,method,annotation,mvc,uri,components,builder,see,org,springframework,web,servlet,handler,handler,method,mapping,naming,strategy;string,name,default
RequestMapping -> String name() default ""_;1523268197;Assign a name to this mapping._<p><b>Supported at the type level as well as at the method level!</b>_When used on both levels, a combined name is derived by concatenation_with "#" as separator._@see org.springframework.web.servlet.mvc.method.annotation.MvcUriComponentsBuilder_@see org.springframework.web.servlet.handler.HandlerMethodMappingNamingStrategy;String name() default ""_;assign,a,name,to,this,mapping,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,on,both,levels,a,combined,name,is,derived,by,concatenation,with,as,separator,see,org,springframework,web,servlet,mvc,method,annotation,mvc,uri,components,builder,see,org,springframework,web,servlet,handler,handler,method,mapping,naming,strategy;string,name,default
RequestMapping -> String name() default ""_;1528795693;Assign a name to this mapping._<p><b>Supported at the type level as well as at the method level!</b>_When used on both levels, a combined name is derived by concatenation_with "#" as separator._@see org.springframework.web.servlet.mvc.method.annotation.MvcUriComponentsBuilder_@see org.springframework.web.servlet.handler.HandlerMethodMappingNamingStrategy;String name() default ""_;assign,a,name,to,this,mapping,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,on,both,levels,a,combined,name,is,derived,by,concatenation,with,as,separator,see,org,springframework,web,servlet,mvc,method,annotation,mvc,uri,components,builder,see,org,springframework,web,servlet,handler,handler,method,mapping,naming,strategy;string,name,default
RequestMapping -> RequestMethod[] method() default {}_;1328020251;The HTTP request methods to map to, narrowing the primary mapping:_GET, POST, HEAD, OPTIONS, PUT, DELETE, TRACE._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this HTTP method restriction (i.e. the type-level restriction_gets checked before the handler method is even resolved)._<p>Supported for Servlet environments as well as Portlet 2.0 environments.;RequestMethod[] method() default {}_;the,http,request,methods,to,map,to,narrowing,the,primary,mapping,get,post,head,options,put,delete,trace,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,http,method,restriction,i,e,the,type,level,restriction,gets,checked,before,the,handler,method,is,even,resolved,p,supported,for,servlet,environments,as,well,as,portlet,2,0,environments;request,method,method,default
RequestMapping -> RequestMethod[] method() default {}_;1329142650;The HTTP request methods to map to, narrowing the primary mapping:_GET, POST, HEAD, OPTIONS, PUT, DELETE, TRACE._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this HTTP method restriction (i.e. the type-level restriction_gets checked before the handler method is even resolved)._<p>Supported for Servlet environments as well as Portlet 2.0 environments.;RequestMethod[] method() default {}_;the,http,request,methods,to,map,to,narrowing,the,primary,mapping,get,post,head,options,put,delete,trace,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,http,method,restriction,i,e,the,type,level,restriction,gets,checked,before,the,handler,method,is,even,resolved,p,supported,for,servlet,environments,as,well,as,portlet,2,0,environments;request,method,method,default
RequestMapping -> RequestMethod[] method() default {}_;1334781369;The HTTP request methods to map to, narrowing the primary mapping:_GET, POST, HEAD, OPTIONS, PUT, DELETE, TRACE._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this HTTP method restriction (i.e. the type-level restriction_gets checked before the handler method is even resolved)._<p>Supported for Servlet environments as well as Portlet 2.0 environments.;RequestMethod[] method() default {}_;the,http,request,methods,to,map,to,narrowing,the,primary,mapping,get,post,head,options,put,delete,trace,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,http,method,restriction,i,e,the,type,level,restriction,gets,checked,before,the,handler,method,is,even,resolved,p,supported,for,servlet,environments,as,well,as,portlet,2,0,environments;request,method,method,default
RequestMapping -> RequestMethod[] method() default {}_;1335774711;The HTTP request methods to map to, narrowing the primary mapping:_GET, POST, HEAD, OPTIONS, PUT, DELETE, TRACE._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this HTTP method restriction (i.e. the type-level restriction_gets checked before the handler method is even resolved)._<p>Supported for Servlet environments as well as Portlet 2.0 environments.;RequestMethod[] method() default {}_;the,http,request,methods,to,map,to,narrowing,the,primary,mapping,get,post,head,options,put,delete,trace,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,http,method,restriction,i,e,the,type,level,restriction,gets,checked,before,the,handler,method,is,even,resolved,p,supported,for,servlet,environments,as,well,as,portlet,2,0,environments;request,method,method,default
RequestMapping -> RequestMethod[] method() default {}_;1337025676;The HTTP request methods to map to, narrowing the primary mapping:_GET, POST, HEAD, OPTIONS, PUT, DELETE, TRACE._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this HTTP method restriction (i.e. the type-level restriction_gets checked before the handler method is even resolved)._<p>Supported for Servlet environments as well as Portlet 2.0 environments.;RequestMethod[] method() default {}_;the,http,request,methods,to,map,to,narrowing,the,primary,mapping,get,post,head,options,put,delete,trace,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,http,method,restriction,i,e,the,type,level,restriction,gets,checked,before,the,handler,method,is,even,resolved,p,supported,for,servlet,environments,as,well,as,portlet,2,0,environments;request,method,method,default
RequestMapping -> RequestMethod[] method() default {}_;1340018565;The HTTP request methods to map to, narrowing the primary mapping:_GET, POST, HEAD, OPTIONS, PUT, DELETE, TRACE._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this HTTP method restriction (i.e. the type-level restriction_gets checked before the handler method is even resolved)._<p>Supported for Servlet environments as well as Portlet 2.0 environments.;RequestMethod[] method() default {}_;the,http,request,methods,to,map,to,narrowing,the,primary,mapping,get,post,head,options,put,delete,trace,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,http,method,restriction,i,e,the,type,level,restriction,gets,checked,before,the,handler,method,is,even,resolved,p,supported,for,servlet,environments,as,well,as,portlet,2,0,environments;request,method,method,default
RequestMapping -> RequestMethod[] method() default {}_;1340398642;The HTTP request methods to map to, narrowing the primary mapping:_GET, POST, HEAD, OPTIONS, PUT, PATCH, DELETE, TRACE._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this HTTP method restriction (i.e. the type-level restriction_gets checked before the handler method is even resolved)._<p>Supported for Servlet environments as well as Portlet 2.0 environments.;RequestMethod[] method() default {}_;the,http,request,methods,to,map,to,narrowing,the,primary,mapping,get,post,head,options,put,patch,delete,trace,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,http,method,restriction,i,e,the,type,level,restriction,gets,checked,before,the,handler,method,is,even,resolved,p,supported,for,servlet,environments,as,well,as,portlet,2,0,environments;request,method,method,default
RequestMapping -> RequestMethod[] method() default {}_;1345574045;The HTTP request methods to map to, narrowing the primary mapping:_GET, POST, HEAD, OPTIONS, PUT, PATCH, DELETE, TRACE._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this HTTP method restriction (i.e. the type-level restriction_gets checked before the handler method is even resolved)._<p>Supported for Servlet environments as well as Portlet 2.0 environments.;RequestMethod[] method() default {}_;the,http,request,methods,to,map,to,narrowing,the,primary,mapping,get,post,head,options,put,patch,delete,trace,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,http,method,restriction,i,e,the,type,level,restriction,gets,checked,before,the,handler,method,is,even,resolved,p,supported,for,servlet,environments,as,well,as,portlet,2,0,environments;request,method,method,default
RequestMapping -> RequestMethod[] method() default {}_;1346174472;The HTTP request methods to map to, narrowing the primary mapping:_GET, POST, HEAD, OPTIONS, PUT, PATCH, DELETE, TRACE._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this HTTP method restriction (i.e. the type-level restriction_gets checked before the handler method is even resolved)._<p>Supported for Servlet environments as well as Portlet 2.0 environments.;RequestMethod[] method() default {}_;the,http,request,methods,to,map,to,narrowing,the,primary,mapping,get,post,head,options,put,patch,delete,trace,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,http,method,restriction,i,e,the,type,level,restriction,gets,checked,before,the,handler,method,is,even,resolved,p,supported,for,servlet,environments,as,well,as,portlet,2,0,environments;request,method,method,default
RequestMapping -> RequestMethod[] method() default {}_;1355313310;The HTTP request methods to map to, narrowing the primary mapping:_GET, POST, HEAD, OPTIONS, PUT, PATCH, DELETE, TRACE._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this HTTP method restriction (i.e. the type-level restriction_gets checked before the handler method is even resolved)._<p>Supported for Servlet environments as well as Portlet 2.0 environments.;RequestMethod[] method() default {}_;the,http,request,methods,to,map,to,narrowing,the,primary,mapping,get,post,head,options,put,patch,delete,trace,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,http,method,restriction,i,e,the,type,level,restriction,gets,checked,before,the,handler,method,is,even,resolved,p,supported,for,servlet,environments,as,well,as,portlet,2,0,environments;request,method,method,default
RequestMapping -> RequestMethod[] method() default {}_;1356735495;The HTTP request methods to map to, narrowing the primary mapping:_GET, POST, HEAD, OPTIONS, PUT, PATCH, DELETE, TRACE._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this HTTP method restriction (i.e. the type-level restriction_gets checked before the handler method is even resolved)._<p>Supported for Servlet environments as well as Portlet 2.0 environments.;RequestMethod[] method() default {}_;the,http,request,methods,to,map,to,narrowing,the,primary,mapping,get,post,head,options,put,patch,delete,trace,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,http,method,restriction,i,e,the,type,level,restriction,gets,checked,before,the,handler,method,is,even,resolved,p,supported,for,servlet,environments,as,well,as,portlet,2,0,environments;request,method,method,default
RequestMapping -> RequestMethod[] method() default {}_;1362408075;The HTTP request methods to map to, narrowing the primary mapping:_GET, POST, HEAD, OPTIONS, PUT, PATCH, DELETE, TRACE._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this HTTP method restriction (i.e. the type-level restriction_gets checked before the handler method is even resolved)._<p>Supported for Servlet environments as well as Portlet 2.0 environments.;RequestMethod[] method() default {}_;the,http,request,methods,to,map,to,narrowing,the,primary,mapping,get,post,head,options,put,patch,delete,trace,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,http,method,restriction,i,e,the,type,level,restriction,gets,checked,before,the,handler,method,is,even,resolved,p,supported,for,servlet,environments,as,well,as,portlet,2,0,environments;request,method,method,default
RequestMapping -> RequestMethod[] method() default {}_;1367955086;The HTTP request methods to map to, narrowing the primary mapping:_GET, POST, HEAD, OPTIONS, PUT, PATCH, DELETE, TRACE._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this HTTP method restriction (i.e. the type-level restriction_gets checked before the handler method is even resolved)._<p>Supported for Servlet environments as well as Portlet 2.0 environments.;RequestMethod[] method() default {}_;the,http,request,methods,to,map,to,narrowing,the,primary,mapping,get,post,head,options,put,patch,delete,trace,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,http,method,restriction,i,e,the,type,level,restriction,gets,checked,before,the,handler,method,is,even,resolved,p,supported,for,servlet,environments,as,well,as,portlet,2,0,environments;request,method,method,default
RequestMapping -> RequestMethod[] method() default {}_;1372363092;The HTTP request methods to map to, narrowing the primary mapping:_GET, POST, HEAD, OPTIONS, PUT, PATCH, DELETE, TRACE._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this HTTP method restriction (i.e. the type-level restriction_gets checked before the handler method is even resolved)._<p>Supported for Servlet environments as well as Portlet 2.0 environments.;RequestMethod[] method() default {}_;the,http,request,methods,to,map,to,narrowing,the,primary,mapping,get,post,head,options,put,patch,delete,trace,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,http,method,restriction,i,e,the,type,level,restriction,gets,checked,before,the,handler,method,is,even,resolved,p,supported,for,servlet,environments,as,well,as,portlet,2,0,environments;request,method,method,default
RequestMapping -> RequestMethod[] method() default {}_;1385501137;The HTTP request methods to map to, narrowing the primary mapping:_GET, POST, HEAD, OPTIONS, PUT, PATCH, DELETE, TRACE._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this HTTP method restriction (i.e. the type-level restriction_gets checked before the handler method is even resolved)._<p>Supported for Servlet environments as well as Portlet 2.0 environments.;RequestMethod[] method() default {}_;the,http,request,methods,to,map,to,narrowing,the,primary,mapping,get,post,head,options,put,patch,delete,trace,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,http,method,restriction,i,e,the,type,level,restriction,gets,checked,before,the,handler,method,is,even,resolved,p,supported,for,servlet,environments,as,well,as,portlet,2,0,environments;request,method,method,default
RequestMapping -> RequestMethod[] method() default {}_;1390272537;The HTTP request methods to map to, narrowing the primary mapping:_GET, POST, HEAD, OPTIONS, PUT, PATCH, DELETE, TRACE._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this HTTP method restriction (i.e. the type-level restriction_gets checked before the handler method is even resolved)._<p>Supported for Servlet environments as well as Portlet 2.0 environments.;RequestMethod[] method() default {}_;the,http,request,methods,to,map,to,narrowing,the,primary,mapping,get,post,head,options,put,patch,delete,trace,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,http,method,restriction,i,e,the,type,level,restriction,gets,checked,before,the,handler,method,is,even,resolved,p,supported,for,servlet,environments,as,well,as,portlet,2,0,environments;request,method,method,default
RequestMapping -> RequestMethod[] method() default {}_;1392311784;The HTTP request methods to map to, narrowing the primary mapping:_GET, POST, HEAD, OPTIONS, PUT, PATCH, DELETE, TRACE._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this HTTP method restriction (i.e. the type-level restriction_gets checked before the handler method is even resolved)._<p>Supported for Servlet environments as well as Portlet 2.0 environments.;RequestMethod[] method() default {}_;the,http,request,methods,to,map,to,narrowing,the,primary,mapping,get,post,head,options,put,patch,delete,trace,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,http,method,restriction,i,e,the,type,level,restriction,gets,checked,before,the,handler,method,is,even,resolved,p,supported,for,servlet,environments,as,well,as,portlet,2,0,environments;request,method,method,default
RequestMapping -> RequestMethod[] method() default {}_;1398737597;The HTTP request methods to map to, narrowing the primary mapping:_GET, POST, HEAD, OPTIONS, PUT, PATCH, DELETE, TRACE._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this HTTP method restriction (i.e. the type-level restriction_gets checked before the handler method is even resolved)._<p>Supported for Servlet environments as well as Portlet 2.0 environments.;RequestMethod[] method() default {}_;the,http,request,methods,to,map,to,narrowing,the,primary,mapping,get,post,head,options,put,patch,delete,trace,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,http,method,restriction,i,e,the,type,level,restriction,gets,checked,before,the,handler,method,is,even,resolved,p,supported,for,servlet,environments,as,well,as,portlet,2,0,environments;request,method,method,default
RequestMapping -> RequestMethod[] method() default {}_;1398961739;The HTTP request methods to map to, narrowing the primary mapping:_GET, POST, HEAD, OPTIONS, PUT, PATCH, DELETE, TRACE._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this HTTP method restriction (i.e. the type-level restriction_gets checked before the handler method is even resolved)._<p>Supported for Servlet environments as well as Portlet 2.0 environments.;RequestMethod[] method() default {}_;the,http,request,methods,to,map,to,narrowing,the,primary,mapping,get,post,head,options,put,patch,delete,trace,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,http,method,restriction,i,e,the,type,level,restriction,gets,checked,before,the,handler,method,is,even,resolved,p,supported,for,servlet,environments,as,well,as,portlet,2,0,environments;request,method,method,default
RequestMapping -> RequestMethod[] method() default {}_;1399404473;The HTTP request methods to map to, narrowing the primary mapping:_GET, POST, HEAD, OPTIONS, PUT, PATCH, DELETE, TRACE._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this HTTP method restriction (i.e. the type-level restriction_gets checked before the handler method is even resolved)._<p>Supported for Servlet environments as well as Portlet 2.0 environments.;RequestMethod[] method() default {}_;the,http,request,methods,to,map,to,narrowing,the,primary,mapping,get,post,head,options,put,patch,delete,trace,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,http,method,restriction,i,e,the,type,level,restriction,gets,checked,before,the,handler,method,is,even,resolved,p,supported,for,servlet,environments,as,well,as,portlet,2,0,environments;request,method,method,default
RequestMapping -> RequestMethod[] method() default {}_;1403791284;The HTTP request methods to map to, narrowing the primary mapping:_GET, POST, HEAD, OPTIONS, PUT, PATCH, DELETE, TRACE._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this HTTP method restriction (i.e. the type-level restriction_gets checked before the handler method is even resolved)._<p>Supported for Servlet environments as well as Portlet 2.0 environments.;RequestMethod[] method() default {}_;the,http,request,methods,to,map,to,narrowing,the,primary,mapping,get,post,head,options,put,patch,delete,trace,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,http,method,restriction,i,e,the,type,level,restriction,gets,checked,before,the,handler,method,is,even,resolved,p,supported,for,servlet,environments,as,well,as,portlet,2,0,environments;request,method,method,default
RequestMapping -> RequestMethod[] method() default {}_;1411403899;The HTTP request methods to map to, narrowing the primary mapping:_GET, POST, HEAD, OPTIONS, PUT, PATCH, DELETE, TRACE._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this HTTP method restriction (i.e. the type-level restriction_gets checked before the handler method is even resolved)._<p>Supported for Servlet environments as well as Portlet 2.0 environments.;RequestMethod[] method() default {}_;the,http,request,methods,to,map,to,narrowing,the,primary,mapping,get,post,head,options,put,patch,delete,trace,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,http,method,restriction,i,e,the,type,level,restriction,gets,checked,before,the,handler,method,is,even,resolved,p,supported,for,servlet,environments,as,well,as,portlet,2,0,environments;request,method,method,default
RequestMapping -> RequestMethod[] method() default {}_;1411728985;The HTTP request methods to map to, narrowing the primary mapping:_GET, POST, HEAD, OPTIONS, PUT, PATCH, DELETE, TRACE._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this HTTP method restriction (i.e. the type-level restriction_gets checked before the handler method is even resolved)._<p>Supported for Servlet environments as well as Portlet 2.0 environments.;RequestMethod[] method() default {}_;the,http,request,methods,to,map,to,narrowing,the,primary,mapping,get,post,head,options,put,patch,delete,trace,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,http,method,restriction,i,e,the,type,level,restriction,gets,checked,before,the,handler,method,is,even,resolved,p,supported,for,servlet,environments,as,well,as,portlet,2,0,environments;request,method,method,default
RequestMapping -> RequestMethod[] method() default {}_;1414097580;The HTTP request methods to map to, narrowing the primary mapping:_GET, POST, HEAD, OPTIONS, PUT, PATCH, DELETE, TRACE._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this HTTP method restriction (i.e. the type-level restriction_gets checked before the handler method is even resolved)._<p>Supported for Servlet environments as well as Portlet 2.0 environments.;RequestMethod[] method() default {}_;the,http,request,methods,to,map,to,narrowing,the,primary,mapping,get,post,head,options,put,patch,delete,trace,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,http,method,restriction,i,e,the,type,level,restriction,gets,checked,before,the,handler,method,is,even,resolved,p,supported,for,servlet,environments,as,well,as,portlet,2,0,environments;request,method,method,default
RequestMapping -> RequestMethod[] method() default {}_;1414155598;The HTTP request methods to map to, narrowing the primary mapping:_GET, POST, HEAD, OPTIONS, PUT, PATCH, DELETE, TRACE._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this HTTP method restriction (i.e. the type-level restriction_gets checked before the handler method is even resolved)._<p>Supported for Servlet environments as well as Portlet 2.0 environments.;RequestMethod[] method() default {}_;the,http,request,methods,to,map,to,narrowing,the,primary,mapping,get,post,head,options,put,patch,delete,trace,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,http,method,restriction,i,e,the,type,level,restriction,gets,checked,before,the,handler,method,is,even,resolved,p,supported,for,servlet,environments,as,well,as,portlet,2,0,environments;request,method,method,default
RequestMapping -> RequestMethod[] method() default {}_;1422572109;The HTTP request methods to map to, narrowing the primary mapping:_GET, POST, HEAD, OPTIONS, PUT, PATCH, DELETE, TRACE._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this HTTP method restriction (i.e. the type-level restriction_gets checked before the handler method is even resolved)._<p>Supported for Servlet environments as well as Portlet 2.0 environments.;RequestMethod[] method() default {}_;the,http,request,methods,to,map,to,narrowing,the,primary,mapping,get,post,head,options,put,patch,delete,trace,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,http,method,restriction,i,e,the,type,level,restriction,gets,checked,before,the,handler,method,is,even,resolved,p,supported,for,servlet,environments,as,well,as,portlet,2,0,environments;request,method,method,default
RequestMapping -> RequestMethod[] method() default {}_;1427139532;The HTTP request methods to map to, narrowing the primary mapping:_GET, POST, HEAD, OPTIONS, PUT, PATCH, DELETE, TRACE._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this HTTP method restriction (i.e. the type-level restriction_gets checked before the handler method is even resolved)._<p>Supported for Servlet environments as well as Portlet 2.0 environments.;RequestMethod[] method() default {}_;the,http,request,methods,to,map,to,narrowing,the,primary,mapping,get,post,head,options,put,patch,delete,trace,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,http,method,restriction,i,e,the,type,level,restriction,gets,checked,before,the,handler,method,is,even,resolved,p,supported,for,servlet,environments,as,well,as,portlet,2,0,environments;request,method,method,default
RequestMapping -> RequestMethod[] method() default {}_;1429532371;The HTTP request methods to map to, narrowing the primary mapping:_GET, POST, HEAD, OPTIONS, PUT, PATCH, DELETE, TRACE._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this HTTP method restriction (i.e. the type-level restriction_gets checked before the handler method is even resolved)._<p>Supported for Servlet environments as well as Portlet 2.0 environments.;RequestMethod[] method() default {}_;the,http,request,methods,to,map,to,narrowing,the,primary,mapping,get,post,head,options,put,patch,delete,trace,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,http,method,restriction,i,e,the,type,level,restriction,gets,checked,before,the,handler,method,is,even,resolved,p,supported,for,servlet,environments,as,well,as,portlet,2,0,environments;request,method,method,default
RequestMapping -> RequestMethod[] method() default {}_;1429886024;The HTTP request methods to map to, narrowing the primary mapping:_GET, POST, HEAD, OPTIONS, PUT, PATCH, DELETE, TRACE._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this HTTP method restriction (i.e. the type-level restriction_gets checked before the handler method is even resolved)._<p>Supported for Servlet environments as well as Portlet 2.0 environments.;RequestMethod[] method() default {}_;the,http,request,methods,to,map,to,narrowing,the,primary,mapping,get,post,head,options,put,patch,delete,trace,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,http,method,restriction,i,e,the,type,level,restriction,gets,checked,before,the,handler,method,is,even,resolved,p,supported,for,servlet,environments,as,well,as,portlet,2,0,environments;request,method,method,default
RequestMapping -> RequestMethod[] method() default {}_;1432246071;The HTTP request methods to map to, narrowing the primary mapping:_GET, POST, HEAD, OPTIONS, PUT, PATCH, DELETE, TRACE._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this HTTP method restriction (i.e. the type-level restriction_gets checked before the handler method is even resolved)._<p>Supported for Servlet environments as well as Portlet 2.0 environments.;RequestMethod[] method() default {}_;the,http,request,methods,to,map,to,narrowing,the,primary,mapping,get,post,head,options,put,patch,delete,trace,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,http,method,restriction,i,e,the,type,level,restriction,gets,checked,before,the,handler,method,is,even,resolved,p,supported,for,servlet,environments,as,well,as,portlet,2,0,environments;request,method,method,default
RequestMapping -> RequestMethod[] method() default {}_;1438176426;The HTTP request methods to map to, narrowing the primary mapping:_GET, POST, HEAD, OPTIONS, PUT, PATCH, DELETE, TRACE._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this HTTP method restriction (i.e. the type-level restriction_gets checked before the handler method is even resolved)._<p>Supported for Servlet environments as well as Portlet 2.0 environments.;RequestMethod[] method() default {}_;the,http,request,methods,to,map,to,narrowing,the,primary,mapping,get,post,head,options,put,patch,delete,trace,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,http,method,restriction,i,e,the,type,level,restriction,gets,checked,before,the,handler,method,is,even,resolved,p,supported,for,servlet,environments,as,well,as,portlet,2,0,environments;request,method,method,default
RequestMapping -> RequestMethod[] method() default {}_;1444666351;The HTTP request methods to map to, narrowing the primary mapping:_GET, POST, HEAD, OPTIONS, PUT, PATCH, DELETE, TRACE._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this HTTP method restriction (i.e. the type-level restriction_gets checked before the handler method is even resolved)._<p>Supported for Servlet environments as well as Portlet 2.0 environments.;RequestMethod[] method() default {}_;the,http,request,methods,to,map,to,narrowing,the,primary,mapping,get,post,head,options,put,patch,delete,trace,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,http,method,restriction,i,e,the,type,level,restriction,gets,checked,before,the,handler,method,is,even,resolved,p,supported,for,servlet,environments,as,well,as,portlet,2,0,environments;request,method,method,default
RequestMapping -> RequestMethod[] method() default {}_;1446446882;The HTTP request methods to map to, narrowing the primary mapping:_GET, POST, HEAD, OPTIONS, PUT, PATCH, DELETE, TRACE._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this HTTP method restriction (i.e. the type-level restriction_gets checked before the handler method is even resolved)._<p>Supported for Servlet environments as well as Portlet 2.0 environments.;RequestMethod[] method() default {}_;the,http,request,methods,to,map,to,narrowing,the,primary,mapping,get,post,head,options,put,patch,delete,trace,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,http,method,restriction,i,e,the,type,level,restriction,gets,checked,before,the,handler,method,is,even,resolved,p,supported,for,servlet,environments,as,well,as,portlet,2,0,environments;request,method,method,default
RequestMapping -> RequestMethod[] method() default {}_;1453844264;The HTTP request methods to map to, narrowing the primary mapping:_GET, POST, HEAD, OPTIONS, PUT, PATCH, DELETE, TRACE._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this HTTP method restriction (i.e. the type-level restriction_gets checked before the handler method is even resolved)._<p>Supported for Servlet environments as well as Portlet 2.0 environments.;RequestMethod[] method() default {}_;the,http,request,methods,to,map,to,narrowing,the,primary,mapping,get,post,head,options,put,patch,delete,trace,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,http,method,restriction,i,e,the,type,level,restriction,gets,checked,before,the,handler,method,is,even,resolved,p,supported,for,servlet,environments,as,well,as,portlet,2,0,environments;request,method,method,default
RequestMapping -> RequestMethod[] method() default {}_;1453844270;The HTTP request methods to map to, narrowing the primary mapping:_GET, POST, HEAD, OPTIONS, PUT, PATCH, DELETE, TRACE._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this HTTP method restriction (i.e. the type-level restriction_gets checked before the handler method is even resolved)._<p>Supported for Servlet environments as well as Portlet 2.0 environments.;RequestMethod[] method() default {}_;the,http,request,methods,to,map,to,narrowing,the,primary,mapping,get,post,head,options,put,patch,delete,trace,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,http,method,restriction,i,e,the,type,level,restriction,gets,checked,before,the,handler,method,is,even,resolved,p,supported,for,servlet,environments,as,well,as,portlet,2,0,environments;request,method,method,default
RequestMapping -> RequestMethod[] method() default {}_;1456522551;The HTTP request methods to map to, narrowing the primary mapping:_GET, POST, HEAD, OPTIONS, PUT, PATCH, DELETE, TRACE._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this HTTP method restriction (i.e. the type-level restriction_gets checked before the handler method is even resolved)._<p>Supported for Servlet environments as well as Portlet 2.0 environments.;RequestMethod[] method() default {}_;the,http,request,methods,to,map,to,narrowing,the,primary,mapping,get,post,head,options,put,patch,delete,trace,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,http,method,restriction,i,e,the,type,level,restriction,gets,checked,before,the,handler,method,is,even,resolved,p,supported,for,servlet,environments,as,well,as,portlet,2,0,environments;request,method,method,default
RequestMapping -> RequestMethod[] method() default {}_;1456766757;The HTTP request methods to map to, narrowing the primary mapping:_GET, POST, HEAD, OPTIONS, PUT, PATCH, DELETE, TRACE._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this HTTP method restriction (i.e. the type-level restriction_gets checked before the handler method is even resolved)._<p>Supported for Servlet environments as well as Portlet 2.0 environments.;RequestMethod[] method() default {}_;the,http,request,methods,to,map,to,narrowing,the,primary,mapping,get,post,head,options,put,patch,delete,trace,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,http,method,restriction,i,e,the,type,level,restriction,gets,checked,before,the,handler,method,is,even,resolved,p,supported,for,servlet,environments,as,well,as,portlet,2,0,environments;request,method,method,default
RequestMapping -> RequestMethod[] method() default {}_;1467668027;The HTTP request methods to map to, narrowing the primary mapping:_GET, POST, HEAD, OPTIONS, PUT, PATCH, DELETE, TRACE._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this HTTP method restriction (i.e. the type-level restriction_gets checked before the handler method is even resolved).;RequestMethod[] method() default {}_;the,http,request,methods,to,map,to,narrowing,the,primary,mapping,get,post,head,options,put,patch,delete,trace,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,http,method,restriction,i,e,the,type,level,restriction,gets,checked,before,the,handler,method,is,even,resolved;request,method,method,default
RequestMapping -> RequestMethod[] method() default {}_;1467677340;The HTTP request methods to map to, narrowing the primary mapping:_GET, POST, HEAD, OPTIONS, PUT, PATCH, DELETE, TRACE._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this HTTP method restriction (i.e. the type-level restriction_gets checked before the handler method is even resolved).;RequestMethod[] method() default {}_;the,http,request,methods,to,map,to,narrowing,the,primary,mapping,get,post,head,options,put,patch,delete,trace,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,http,method,restriction,i,e,the,type,level,restriction,gets,checked,before,the,handler,method,is,even,resolved;request,method,method,default
RequestMapping -> RequestMethod[] method() default {}_;1491341544;The HTTP request methods to map to, narrowing the primary mapping:_GET, POST, HEAD, OPTIONS, PUT, PATCH, DELETE, TRACE._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this HTTP method restriction (i.e. the type-level restriction_gets checked before the handler method is even resolved).;RequestMethod[] method() default {}_;the,http,request,methods,to,map,to,narrowing,the,primary,mapping,get,post,head,options,put,patch,delete,trace,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,http,method,restriction,i,e,the,type,level,restriction,gets,checked,before,the,handler,method,is,even,resolved;request,method,method,default
RequestMapping -> RequestMethod[] method() default {}_;1491599707;The HTTP request methods to map to, narrowing the primary mapping:_GET, POST, HEAD, OPTIONS, PUT, PATCH, DELETE, TRACE._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this HTTP method restriction (i.e. the type-level restriction_gets checked before the handler method is even resolved).;RequestMethod[] method() default {}_;the,http,request,methods,to,map,to,narrowing,the,primary,mapping,get,post,head,options,put,patch,delete,trace,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,http,method,restriction,i,e,the,type,level,restriction,gets,checked,before,the,handler,method,is,even,resolved;request,method,method,default
RequestMapping -> RequestMethod[] method() default {}_;1506454198;The HTTP request methods to map to, narrowing the primary mapping:_GET, POST, HEAD, OPTIONS, PUT, PATCH, DELETE, TRACE._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this HTTP method restriction (i.e. the type-level restriction_gets checked before the handler method is even resolved).;RequestMethod[] method() default {}_;the,http,request,methods,to,map,to,narrowing,the,primary,mapping,get,post,head,options,put,patch,delete,trace,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,http,method,restriction,i,e,the,type,level,restriction,gets,checked,before,the,handler,method,is,even,resolved;request,method,method,default
RequestMapping -> RequestMethod[] method() default {}_;1515421792;The HTTP request methods to map to, narrowing the primary mapping:_GET, POST, HEAD, OPTIONS, PUT, PATCH, DELETE, TRACE._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this HTTP method restriction (i.e. the type-level restriction_gets checked before the handler method is even resolved).;RequestMethod[] method() default {}_;the,http,request,methods,to,map,to,narrowing,the,primary,mapping,get,post,head,options,put,patch,delete,trace,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,http,method,restriction,i,e,the,type,level,restriction,gets,checked,before,the,handler,method,is,even,resolved;request,method,method,default
RequestMapping -> RequestMethod[] method() default {}_;1523268197;The HTTP request methods to map to, narrowing the primary mapping:_GET, POST, HEAD, OPTIONS, PUT, PATCH, DELETE, TRACE._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this HTTP method restriction (i.e. the type-level restriction_gets checked before the handler method is even resolved).;RequestMethod[] method() default {}_;the,http,request,methods,to,map,to,narrowing,the,primary,mapping,get,post,head,options,put,patch,delete,trace,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,http,method,restriction,i,e,the,type,level,restriction,gets,checked,before,the,handler,method,is,even,resolved;request,method,method,default
RequestMapping -> RequestMethod[] method() default {}_;1528795693;The HTTP request methods to map to, narrowing the primary mapping:_GET, POST, HEAD, OPTIONS, PUT, PATCH, DELETE, TRACE._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this HTTP method restriction (i.e. the type-level restriction_gets checked before the handler method is even resolved).;RequestMethod[] method() default {}_;the,http,request,methods,to,map,to,narrowing,the,primary,mapping,get,post,head,options,put,patch,delete,trace,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,http,method,restriction,i,e,the,type,level,restriction,gets,checked,before,the,handler,method,is,even,resolved;request,method,method,default
RequestMapping -> String[] consumes() default {}_;1328020251;The consumable media types of the mapped request, narrowing the primary mapping._<p>The format is a sequence of media types ("text/plain", "application/*),_with a request only mapped if the {@code Content-Type} matches one of these media types._Expressions can be negated by using the "!" operator, as in "!text/plain", which matches_all requests with a {@code Content-Type} other than "text/plain"._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings override_this consumes restriction._@see org.springframework.http.MediaType_@see javax.servlet.http.HttpServletRequest#getContentType();String[] consumes() default {}_;the,consumable,media,types,of,the,mapped,request,narrowing,the,primary,mapping,p,the,format,is,a,sequence,of,media,types,text,plain,application,with,a,request,only,mapped,if,the,code,content,type,matches,one,of,these,media,types,expressions,can,be,negated,by,using,the,operator,as,in,text,plain,which,matches,all,requests,with,a,code,content,type,other,than,text,plain,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,override,this,consumes,restriction,see,org,springframework,http,media,type,see,javax,servlet,http,http,servlet,request,get,content,type;string,consumes,default
RequestMapping -> String[] consumes() default {}_;1329142650;The consumable media types of the mapped request, narrowing the primary mapping._<p>The format is a sequence of media types ("text/plain", "application/*),_with a request only mapped if the {@code Content-Type} matches one of these media types._Expressions can be negated by using the "!" operator, as in "!text/plain", which matches_all requests with a {@code Content-Type} other than "text/plain"._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings override_this consumes restriction._@see org.springframework.http.MediaType_@see javax.servlet.http.HttpServletRequest#getContentType();String[] consumes() default {}_;the,consumable,media,types,of,the,mapped,request,narrowing,the,primary,mapping,p,the,format,is,a,sequence,of,media,types,text,plain,application,with,a,request,only,mapped,if,the,code,content,type,matches,one,of,these,media,types,expressions,can,be,negated,by,using,the,operator,as,in,text,plain,which,matches,all,requests,with,a,code,content,type,other,than,text,plain,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,override,this,consumes,restriction,see,org,springframework,http,media,type,see,javax,servlet,http,http,servlet,request,get,content,type;string,consumes,default
RequestMapping -> String[] consumes() default {}_;1334781369;The consumable media types of the mapped request, narrowing the primary mapping._<p>The format is a sequence of media types ("text/plain", "application/*),_with a request only mapped if the {@code Content-Type} matches one of these media types._Expressions can be negated by using the "!" operator, as in "!text/plain", which matches_all requests with a {@code Content-Type} other than "text/plain"._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings override_this consumes restriction._@see org.springframework.http.MediaType_@see javax.servlet.http.HttpServletRequest#getContentType();String[] consumes() default {}_;the,consumable,media,types,of,the,mapped,request,narrowing,the,primary,mapping,p,the,format,is,a,sequence,of,media,types,text,plain,application,with,a,request,only,mapped,if,the,code,content,type,matches,one,of,these,media,types,expressions,can,be,negated,by,using,the,operator,as,in,text,plain,which,matches,all,requests,with,a,code,content,type,other,than,text,plain,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,override,this,consumes,restriction,see,org,springframework,http,media,type,see,javax,servlet,http,http,servlet,request,get,content,type;string,consumes,default
RequestMapping -> String[] consumes() default {}_;1335774711;The consumable media types of the mapped request, narrowing the primary mapping._<p>The format is a sequence of media types ("text/plain", "application/*),_with a request only mapped if the {@code Content-Type} matches one of these media types._Expressions can be negated by using the "!" operator, as in "!text/plain", which matches_all requests with a {@code Content-Type} other than "text/plain"._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings override_this consumes restriction._@see org.springframework.http.MediaType_@see javax.servlet.http.HttpServletRequest#getContentType();String[] consumes() default {}_;the,consumable,media,types,of,the,mapped,request,narrowing,the,primary,mapping,p,the,format,is,a,sequence,of,media,types,text,plain,application,with,a,request,only,mapped,if,the,code,content,type,matches,one,of,these,media,types,expressions,can,be,negated,by,using,the,operator,as,in,text,plain,which,matches,all,requests,with,a,code,content,type,other,than,text,plain,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,override,this,consumes,restriction,see,org,springframework,http,media,type,see,javax,servlet,http,http,servlet,request,get,content,type;string,consumes,default
RequestMapping -> String[] consumes() default {}_;1337025676;The consumable media types of the mapped request, narrowing the primary mapping._<p>The format is a sequence of media types ("text/plain", "application/*),_with a request only mapped if the {@code Content-Type} matches one of these media types._Expressions can be negated by using the "!" operator, as in "!text/plain", which matches_all requests with a {@code Content-Type} other than "text/plain"._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings override_this consumes restriction._@see org.springframework.http.MediaType_@see javax.servlet.http.HttpServletRequest#getContentType();String[] consumes() default {}_;the,consumable,media,types,of,the,mapped,request,narrowing,the,primary,mapping,p,the,format,is,a,sequence,of,media,types,text,plain,application,with,a,request,only,mapped,if,the,code,content,type,matches,one,of,these,media,types,expressions,can,be,negated,by,using,the,operator,as,in,text,plain,which,matches,all,requests,with,a,code,content,type,other,than,text,plain,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,override,this,consumes,restriction,see,org,springframework,http,media,type,see,javax,servlet,http,http,servlet,request,get,content,type;string,consumes,default
RequestMapping -> String[] consumes() default {}_;1340018565;The consumable media types of the mapped request, narrowing the primary mapping._<p>The format is a single media type or a sequence of media types,_with a request only mapped if the {@code Content-Type} matches one of these media types._Examples:_<pre>_consumes = "text/plain"_consumes = {"text/plain", "application/*"}_</pre>_Expressions can be negated by using the "!" operator, as in "!text/plain", which matches_all requests with a {@code Content-Type} other than "text/plain"._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings override_this consumes restriction._@see org.springframework.http.MediaType_@see javax.servlet.http.HttpServletRequest#getContentType();String[] consumes() default {}_;the,consumable,media,types,of,the,mapped,request,narrowing,the,primary,mapping,p,the,format,is,a,single,media,type,or,a,sequence,of,media,types,with,a,request,only,mapped,if,the,code,content,type,matches,one,of,these,media,types,examples,pre,consumes,text,plain,consumes,text,plain,application,pre,expressions,can,be,negated,by,using,the,operator,as,in,text,plain,which,matches,all,requests,with,a,code,content,type,other,than,text,plain,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,override,this,consumes,restriction,see,org,springframework,http,media,type,see,javax,servlet,http,http,servlet,request,get,content,type;string,consumes,default
RequestMapping -> String[] consumes() default {}_;1340398642;The consumable media types of the mapped request, narrowing the primary mapping._<p>The format is a single media type or a sequence of media types,_with a request only mapped if the {@code Content-Type} matches one of these media types._Examples:_<pre>_consumes = "text/plain"_consumes = {"text/plain", "application/*"}_</pre>_Expressions can be negated by using the "!" operator, as in "!text/plain", which matches_all requests with a {@code Content-Type} other than "text/plain"._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings override_this consumes restriction._@see org.springframework.http.MediaType_@see javax.servlet.http.HttpServletRequest#getContentType();String[] consumes() default {}_;the,consumable,media,types,of,the,mapped,request,narrowing,the,primary,mapping,p,the,format,is,a,single,media,type,or,a,sequence,of,media,types,with,a,request,only,mapped,if,the,code,content,type,matches,one,of,these,media,types,examples,pre,consumes,text,plain,consumes,text,plain,application,pre,expressions,can,be,negated,by,using,the,operator,as,in,text,plain,which,matches,all,requests,with,a,code,content,type,other,than,text,plain,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,override,this,consumes,restriction,see,org,springframework,http,media,type,see,javax,servlet,http,http,servlet,request,get,content,type;string,consumes,default
RequestMapping -> String[] consumes() default {}_;1345574045;The consumable media types of the mapped request, narrowing the primary mapping._<p>The format is a single media type or a sequence of media types,_with a request only mapped if the {@code Content-Type} matches one of these media types._Examples:_<pre>_consumes = "text/plain"_consumes = {"text/plain", "application/*"}_</pre>_Expressions can be negated by using the "!" operator, as in "!text/plain", which matches_all requests with a {@code Content-Type} other than "text/plain"._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings override_this consumes restriction._@see org.springframework.http.MediaType_@see javax.servlet.http.HttpServletRequest#getContentType();String[] consumes() default {}_;the,consumable,media,types,of,the,mapped,request,narrowing,the,primary,mapping,p,the,format,is,a,single,media,type,or,a,sequence,of,media,types,with,a,request,only,mapped,if,the,code,content,type,matches,one,of,these,media,types,examples,pre,consumes,text,plain,consumes,text,plain,application,pre,expressions,can,be,negated,by,using,the,operator,as,in,text,plain,which,matches,all,requests,with,a,code,content,type,other,than,text,plain,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,override,this,consumes,restriction,see,org,springframework,http,media,type,see,javax,servlet,http,http,servlet,request,get,content,type;string,consumes,default
RequestMapping -> String[] consumes() default {}_;1346174472;The consumable media types of the mapped request, narrowing the primary mapping._<p>The format is a single media type or a sequence of media types,_with a request only mapped if the {@code Content-Type} matches one of these media types._Examples:_<pre>_consumes = "text/plain"_consumes = {"text/plain", "application/*"}_</pre>_Expressions can be negated by using the "!" operator, as in "!text/plain", which matches_all requests with a {@code Content-Type} other than "text/plain"._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings override_this consumes restriction._@see org.springframework.http.MediaType_@see javax.servlet.http.HttpServletRequest#getContentType();String[] consumes() default {}_;the,consumable,media,types,of,the,mapped,request,narrowing,the,primary,mapping,p,the,format,is,a,single,media,type,or,a,sequence,of,media,types,with,a,request,only,mapped,if,the,code,content,type,matches,one,of,these,media,types,examples,pre,consumes,text,plain,consumes,text,plain,application,pre,expressions,can,be,negated,by,using,the,operator,as,in,text,plain,which,matches,all,requests,with,a,code,content,type,other,than,text,plain,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,override,this,consumes,restriction,see,org,springframework,http,media,type,see,javax,servlet,http,http,servlet,request,get,content,type;string,consumes,default
RequestMapping -> String[] consumes() default {}_;1355313310;The consumable media types of the mapped request, narrowing the primary mapping._<p>The format is a single media type or a sequence of media types,_with a request only mapped if the {@code Content-Type} matches one of these media types._Examples:_<pre>_consumes = "text/plain"_consumes = {"text/plain", "application/*"}_</pre>_Expressions can be negated by using the "!" operator, as in "!text/plain", which matches_all requests with a {@code Content-Type} other than "text/plain"._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings override_this consumes restriction._@see org.springframework.http.MediaType_@see javax.servlet.http.HttpServletRequest#getContentType();String[] consumes() default {}_;the,consumable,media,types,of,the,mapped,request,narrowing,the,primary,mapping,p,the,format,is,a,single,media,type,or,a,sequence,of,media,types,with,a,request,only,mapped,if,the,code,content,type,matches,one,of,these,media,types,examples,pre,consumes,text,plain,consumes,text,plain,application,pre,expressions,can,be,negated,by,using,the,operator,as,in,text,plain,which,matches,all,requests,with,a,code,content,type,other,than,text,plain,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,override,this,consumes,restriction,see,org,springframework,http,media,type,see,javax,servlet,http,http,servlet,request,get,content,type;string,consumes,default
RequestMapping -> String[] consumes() default {}_;1356735495;The consumable media types of the mapped request, narrowing the primary mapping._<p>The format is a single media type or a sequence of media types,_with a request only mapped if the {@code Content-Type} matches one of these media types._Examples:_<pre>_consumes = "text/plain"_consumes = {"text/plain", "application/*"}_</pre>_Expressions can be negated by using the "!" operator, as in "!text/plain", which matches_all requests with a {@code Content-Type} other than "text/plain"._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings override_this consumes restriction._@see org.springframework.http.MediaType_@see javax.servlet.http.HttpServletRequest#getContentType();String[] consumes() default {}_;the,consumable,media,types,of,the,mapped,request,narrowing,the,primary,mapping,p,the,format,is,a,single,media,type,or,a,sequence,of,media,types,with,a,request,only,mapped,if,the,code,content,type,matches,one,of,these,media,types,examples,pre,consumes,text,plain,consumes,text,plain,application,pre,expressions,can,be,negated,by,using,the,operator,as,in,text,plain,which,matches,all,requests,with,a,code,content,type,other,than,text,plain,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,override,this,consumes,restriction,see,org,springframework,http,media,type,see,javax,servlet,http,http,servlet,request,get,content,type;string,consumes,default
RequestMapping -> String[] consumes() default {}_;1362408075;The consumable media types of the mapped request, narrowing the primary mapping._<p>The format is a single media type or a sequence of media types,_with a request only mapped if the {@code Content-Type} matches one of these media types._Examples:_<pre>_consumes = "text/plain"_consumes = {"text/plain", "application/*"}_</pre>_Expressions can be negated by using the "!" operator, as in "!text/plain", which matches_all requests with a {@code Content-Type} other than "text/plain"._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings override_this consumes restriction._@see org.springframework.http.MediaType_@see javax.servlet.http.HttpServletRequest#getContentType();String[] consumes() default {}_;the,consumable,media,types,of,the,mapped,request,narrowing,the,primary,mapping,p,the,format,is,a,single,media,type,or,a,sequence,of,media,types,with,a,request,only,mapped,if,the,code,content,type,matches,one,of,these,media,types,examples,pre,consumes,text,plain,consumes,text,plain,application,pre,expressions,can,be,negated,by,using,the,operator,as,in,text,plain,which,matches,all,requests,with,a,code,content,type,other,than,text,plain,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,override,this,consumes,restriction,see,org,springframework,http,media,type,see,javax,servlet,http,http,servlet,request,get,content,type;string,consumes,default
RequestMapping -> String[] consumes() default {}_;1367955086;The consumable media types of the mapped request, narrowing the primary mapping._<p>The format is a single media type or a sequence of media types,_with a request only mapped if the {@code Content-Type} matches one of these media types._Examples:_<pre class="code">_consumes = "text/plain"_consumes = {"text/plain", "application/*"}_</pre>_Expressions can be negated by using the "!" operator, as in "!text/plain", which matches_all requests with a {@code Content-Type} other than "text/plain"._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings override_this consumes restriction._@see org.springframework.http.MediaType_@see javax.servlet.http.HttpServletRequest#getContentType();String[] consumes() default {}_;the,consumable,media,types,of,the,mapped,request,narrowing,the,primary,mapping,p,the,format,is,a,single,media,type,or,a,sequence,of,media,types,with,a,request,only,mapped,if,the,code,content,type,matches,one,of,these,media,types,examples,pre,class,code,consumes,text,plain,consumes,text,plain,application,pre,expressions,can,be,negated,by,using,the,operator,as,in,text,plain,which,matches,all,requests,with,a,code,content,type,other,than,text,plain,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,override,this,consumes,restriction,see,org,springframework,http,media,type,see,javax,servlet,http,http,servlet,request,get,content,type;string,consumes,default
RequestMapping -> String[] consumes() default {}_;1372363092;The consumable media types of the mapped request, narrowing the primary mapping._<p>The format is a single media type or a sequence of media types,_with a request only mapped if the {@code Content-Type} matches one of these media types._Examples:_<pre class="code">_consumes = "text/plain"_consumes = {"text/plain", "application/*"}_</pre>_Expressions can be negated by using the "!" operator, as in "!text/plain", which matches_all requests with a {@code Content-Type} other than "text/plain"._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings override_this consumes restriction._@see org.springframework.http.MediaType_@see javax.servlet.http.HttpServletRequest#getContentType();String[] consumes() default {}_;the,consumable,media,types,of,the,mapped,request,narrowing,the,primary,mapping,p,the,format,is,a,single,media,type,or,a,sequence,of,media,types,with,a,request,only,mapped,if,the,code,content,type,matches,one,of,these,media,types,examples,pre,class,code,consumes,text,plain,consumes,text,plain,application,pre,expressions,can,be,negated,by,using,the,operator,as,in,text,plain,which,matches,all,requests,with,a,code,content,type,other,than,text,plain,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,override,this,consumes,restriction,see,org,springframework,http,media,type,see,javax,servlet,http,http,servlet,request,get,content,type;string,consumes,default
RequestMapping -> String[] consumes() default {}_;1385501137;The consumable media types of the mapped request, narrowing the primary mapping._<p>The format is a single media type or a sequence of media types,_with a request only mapped if the {@code Content-Type} matches one of these media types._Examples:_<pre class="code">_consumes = "text/plain"_consumes = {"text/plain", "application/*"}_</pre>_Expressions can be negated by using the "!" operator, as in "!text/plain", which matches_all requests with a {@code Content-Type} other than "text/plain"._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings override_this consumes restriction._@see org.springframework.http.MediaType_@see javax.servlet.http.HttpServletRequest#getContentType();String[] consumes() default {}_;the,consumable,media,types,of,the,mapped,request,narrowing,the,primary,mapping,p,the,format,is,a,single,media,type,or,a,sequence,of,media,types,with,a,request,only,mapped,if,the,code,content,type,matches,one,of,these,media,types,examples,pre,class,code,consumes,text,plain,consumes,text,plain,application,pre,expressions,can,be,negated,by,using,the,operator,as,in,text,plain,which,matches,all,requests,with,a,code,content,type,other,than,text,plain,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,override,this,consumes,restriction,see,org,springframework,http,media,type,see,javax,servlet,http,http,servlet,request,get,content,type;string,consumes,default
RequestMapping -> String[] consumes() default {}_;1390272537;The consumable media types of the mapped request, narrowing the primary mapping._<p>The format is a single media type or a sequence of media types,_with a request only mapped if the {@code Content-Type} matches one of these media types._Examples:_<pre class="code">_consumes = "text/plain"_consumes = {"text/plain", "application/*"}_</pre>_Expressions can be negated by using the "!" operator, as in "!text/plain", which matches_all requests with a {@code Content-Type} other than "text/plain"._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings override_this consumes restriction._@see org.springframework.http.MediaType_@see javax.servlet.http.HttpServletRequest#getContentType();String[] consumes() default {}_;the,consumable,media,types,of,the,mapped,request,narrowing,the,primary,mapping,p,the,format,is,a,single,media,type,or,a,sequence,of,media,types,with,a,request,only,mapped,if,the,code,content,type,matches,one,of,these,media,types,examples,pre,class,code,consumes,text,plain,consumes,text,plain,application,pre,expressions,can,be,negated,by,using,the,operator,as,in,text,plain,which,matches,all,requests,with,a,code,content,type,other,than,text,plain,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,override,this,consumes,restriction,see,org,springframework,http,media,type,see,javax,servlet,http,http,servlet,request,get,content,type;string,consumes,default
RequestMapping -> String[] consumes() default {}_;1392311784;The consumable media types of the mapped request, narrowing the primary mapping._<p>The format is a single media type or a sequence of media types,_with a request only mapped if the {@code Content-Type} matches one of these media types._Examples:_<pre class="code">_consumes = "text/plain"_consumes = {"text/plain", "application/*"}_</pre>_Expressions can be negated by using the "!" operator, as in "!text/plain", which matches_all requests with a {@code Content-Type} other than "text/plain"._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings override_this consumes restriction._@see org.springframework.http.MediaType_@see javax.servlet.http.HttpServletRequest#getContentType();String[] consumes() default {}_;the,consumable,media,types,of,the,mapped,request,narrowing,the,primary,mapping,p,the,format,is,a,single,media,type,or,a,sequence,of,media,types,with,a,request,only,mapped,if,the,code,content,type,matches,one,of,these,media,types,examples,pre,class,code,consumes,text,plain,consumes,text,plain,application,pre,expressions,can,be,negated,by,using,the,operator,as,in,text,plain,which,matches,all,requests,with,a,code,content,type,other,than,text,plain,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,override,this,consumes,restriction,see,org,springframework,http,media,type,see,javax,servlet,http,http,servlet,request,get,content,type;string,consumes,default
RequestMapping -> String[] consumes() default {}_;1398737597;The consumable media types of the mapped request, narrowing the primary mapping._<p>The format is a single media type or a sequence of media types,_with a request only mapped if the {@code Content-Type} matches one of these media types._Examples:_<pre class="code">_consumes = "text/plain"_consumes = {"text/plain", "application/*"}_</pre>_Expressions can be negated by using the "!" operator, as in "!text/plain", which matches_all requests with a {@code Content-Type} other than "text/plain"._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings override_this consumes restriction._@see org.springframework.http.MediaType_@see javax.servlet.http.HttpServletRequest#getContentType();String[] consumes() default {}_;the,consumable,media,types,of,the,mapped,request,narrowing,the,primary,mapping,p,the,format,is,a,single,media,type,or,a,sequence,of,media,types,with,a,request,only,mapped,if,the,code,content,type,matches,one,of,these,media,types,examples,pre,class,code,consumes,text,plain,consumes,text,plain,application,pre,expressions,can,be,negated,by,using,the,operator,as,in,text,plain,which,matches,all,requests,with,a,code,content,type,other,than,text,plain,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,override,this,consumes,restriction,see,org,springframework,http,media,type,see,javax,servlet,http,http,servlet,request,get,content,type;string,consumes,default
RequestMapping -> String[] consumes() default {}_;1398961739;The consumable media types of the mapped request, narrowing the primary mapping._<p>The format is a single media type or a sequence of media types,_with a request only mapped if the {@code Content-Type} matches one of these media types._Examples:_<pre class="code">_consumes = "text/plain"_consumes = {"text/plain", "application/*"}_</pre>_Expressions can be negated by using the "!" operator, as in "!text/plain", which matches_all requests with a {@code Content-Type} other than "text/plain"._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings override_this consumes restriction._@see org.springframework.http.MediaType_@see javax.servlet.http.HttpServletRequest#getContentType();String[] consumes() default {}_;the,consumable,media,types,of,the,mapped,request,narrowing,the,primary,mapping,p,the,format,is,a,single,media,type,or,a,sequence,of,media,types,with,a,request,only,mapped,if,the,code,content,type,matches,one,of,these,media,types,examples,pre,class,code,consumes,text,plain,consumes,text,plain,application,pre,expressions,can,be,negated,by,using,the,operator,as,in,text,plain,which,matches,all,requests,with,a,code,content,type,other,than,text,plain,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,override,this,consumes,restriction,see,org,springframework,http,media,type,see,javax,servlet,http,http,servlet,request,get,content,type;string,consumes,default
RequestMapping -> String[] consumes() default {}_;1399404473;The consumable media types of the mapped request, narrowing the primary mapping._<p>The format is a single media type or a sequence of media types,_with a request only mapped if the {@code Content-Type} matches one of these media types._Examples:_<pre class="code">_consumes = "text/plain"_consumes = {"text/plain", "application/*"}_</pre>_Expressions can be negated by using the "!" operator, as in "!text/plain", which matches_all requests with a {@code Content-Type} other than "text/plain"._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings override_this consumes restriction._@see org.springframework.http.MediaType_@see javax.servlet.http.HttpServletRequest#getContentType();String[] consumes() default {}_;the,consumable,media,types,of,the,mapped,request,narrowing,the,primary,mapping,p,the,format,is,a,single,media,type,or,a,sequence,of,media,types,with,a,request,only,mapped,if,the,code,content,type,matches,one,of,these,media,types,examples,pre,class,code,consumes,text,plain,consumes,text,plain,application,pre,expressions,can,be,negated,by,using,the,operator,as,in,text,plain,which,matches,all,requests,with,a,code,content,type,other,than,text,plain,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,override,this,consumes,restriction,see,org,springframework,http,media,type,see,javax,servlet,http,http,servlet,request,get,content,type;string,consumes,default
RequestMapping -> String[] consumes() default {}_;1403791284;The consumable media types of the mapped request, narrowing the primary mapping._<p>The format is a single media type or a sequence of media types,_with a request only mapped if the {@code Content-Type} matches one of these media types._Examples:_<pre class="code">_consumes = "text/plain"_consumes = {"text/plain", "application/*"}_</pre>_Expressions can be negated by using the "!" operator, as in "!text/plain", which matches_all requests with a {@code Content-Type} other than "text/plain"._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings override_this consumes restriction._@see org.springframework.http.MediaType_@see javax.servlet.http.HttpServletRequest#getContentType();String[] consumes() default {}_;the,consumable,media,types,of,the,mapped,request,narrowing,the,primary,mapping,p,the,format,is,a,single,media,type,or,a,sequence,of,media,types,with,a,request,only,mapped,if,the,code,content,type,matches,one,of,these,media,types,examples,pre,class,code,consumes,text,plain,consumes,text,plain,application,pre,expressions,can,be,negated,by,using,the,operator,as,in,text,plain,which,matches,all,requests,with,a,code,content,type,other,than,text,plain,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,override,this,consumes,restriction,see,org,springframework,http,media,type,see,javax,servlet,http,http,servlet,request,get,content,type;string,consumes,default
RequestMapping -> String[] consumes() default {}_;1411403899;The consumable media types of the mapped request, narrowing the primary mapping._<p>The format is a single media type or a sequence of media types,_with a request only mapped if the {@code Content-Type} matches one of these media types._Examples:_<pre class="code">_consumes = "text/plain"_consumes = {"text/plain", "application/*"}_</pre>_Expressions can be negated by using the "!" operator, as in "!text/plain", which matches_all requests with a {@code Content-Type} other than "text/plain"._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings override_this consumes restriction._@see org.springframework.http.MediaType_@see javax.servlet.http.HttpServletRequest#getContentType();String[] consumes() default {}_;the,consumable,media,types,of,the,mapped,request,narrowing,the,primary,mapping,p,the,format,is,a,single,media,type,or,a,sequence,of,media,types,with,a,request,only,mapped,if,the,code,content,type,matches,one,of,these,media,types,examples,pre,class,code,consumes,text,plain,consumes,text,plain,application,pre,expressions,can,be,negated,by,using,the,operator,as,in,text,plain,which,matches,all,requests,with,a,code,content,type,other,than,text,plain,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,override,this,consumes,restriction,see,org,springframework,http,media,type,see,javax,servlet,http,http,servlet,request,get,content,type;string,consumes,default
RequestMapping -> String[] consumes() default {}_;1411728985;The consumable media types of the mapped request, narrowing the primary mapping._<p>The format is a single media type or a sequence of media types,_with a request only mapped if the {@code Content-Type} matches one of these media types._Examples:_<pre class="code">_consumes = "text/plain"_consumes = {"text/plain", "application/*"}_</pre>_Expressions can be negated by using the "!" operator, as in "!text/plain", which matches_all requests with a {@code Content-Type} other than "text/plain"._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings override_this consumes restriction._@see org.springframework.http.MediaType_@see javax.servlet.http.HttpServletRequest#getContentType();String[] consumes() default {}_;the,consumable,media,types,of,the,mapped,request,narrowing,the,primary,mapping,p,the,format,is,a,single,media,type,or,a,sequence,of,media,types,with,a,request,only,mapped,if,the,code,content,type,matches,one,of,these,media,types,examples,pre,class,code,consumes,text,plain,consumes,text,plain,application,pre,expressions,can,be,negated,by,using,the,operator,as,in,text,plain,which,matches,all,requests,with,a,code,content,type,other,than,text,plain,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,override,this,consumes,restriction,see,org,springframework,http,media,type,see,javax,servlet,http,http,servlet,request,get,content,type;string,consumes,default
RequestMapping -> String[] consumes() default {}_;1414097580;The consumable media types of the mapped request, narrowing the primary mapping._<p>The format is a single media type or a sequence of media types,_with a request only mapped if the {@code Content-Type} matches one of these media types._Examples:_<pre class="code">_consumes = "text/plain"_consumes = {"text/plain", "application/*"}_</pre>_Expressions can be negated by using the "!" operator, as in "!text/plain", which matches_all requests with a {@code Content-Type} other than "text/plain"._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings override_this consumes restriction._@see org.springframework.http.MediaType_@see javax.servlet.http.HttpServletRequest#getContentType();String[] consumes() default {}_;the,consumable,media,types,of,the,mapped,request,narrowing,the,primary,mapping,p,the,format,is,a,single,media,type,or,a,sequence,of,media,types,with,a,request,only,mapped,if,the,code,content,type,matches,one,of,these,media,types,examples,pre,class,code,consumes,text,plain,consumes,text,plain,application,pre,expressions,can,be,negated,by,using,the,operator,as,in,text,plain,which,matches,all,requests,with,a,code,content,type,other,than,text,plain,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,override,this,consumes,restriction,see,org,springframework,http,media,type,see,javax,servlet,http,http,servlet,request,get,content,type;string,consumes,default
RequestMapping -> String[] consumes() default {}_;1414155598;The consumable media types of the mapped request, narrowing the primary mapping._<p>The format is a single media type or a sequence of media types,_with a request only mapped if the {@code Content-Type} matches one of these media types._Examples:_<pre class="code">_consumes = "text/plain"_consumes = {"text/plain", "application/*"}_</pre>_Expressions can be negated by using the "!" operator, as in "!text/plain", which matches_all requests with a {@code Content-Type} other than "text/plain"._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings override_this consumes restriction._@see org.springframework.http.MediaType_@see javax.servlet.http.HttpServletRequest#getContentType();String[] consumes() default {}_;the,consumable,media,types,of,the,mapped,request,narrowing,the,primary,mapping,p,the,format,is,a,single,media,type,or,a,sequence,of,media,types,with,a,request,only,mapped,if,the,code,content,type,matches,one,of,these,media,types,examples,pre,class,code,consumes,text,plain,consumes,text,plain,application,pre,expressions,can,be,negated,by,using,the,operator,as,in,text,plain,which,matches,all,requests,with,a,code,content,type,other,than,text,plain,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,override,this,consumes,restriction,see,org,springframework,http,media,type,see,javax,servlet,http,http,servlet,request,get,content,type;string,consumes,default
RequestMapping -> String[] consumes() default {}_;1422572109;The consumable media types of the mapped request, narrowing the primary mapping._<p>The format is a single media type or a sequence of media types,_with a request only mapped if the {@code Content-Type} matches one of these media types._Examples:_<pre class="code">_consumes = "text/plain"_consumes = {"text/plain", "application/*"}_</pre>_Expressions can be negated by using the "!" operator, as in "!text/plain", which matches_all requests with a {@code Content-Type} other than "text/plain"._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings override_this consumes restriction._@see org.springframework.http.MediaType_@see javax.servlet.http.HttpServletRequest#getContentType();String[] consumes() default {}_;the,consumable,media,types,of,the,mapped,request,narrowing,the,primary,mapping,p,the,format,is,a,single,media,type,or,a,sequence,of,media,types,with,a,request,only,mapped,if,the,code,content,type,matches,one,of,these,media,types,examples,pre,class,code,consumes,text,plain,consumes,text,plain,application,pre,expressions,can,be,negated,by,using,the,operator,as,in,text,plain,which,matches,all,requests,with,a,code,content,type,other,than,text,plain,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,override,this,consumes,restriction,see,org,springframework,http,media,type,see,javax,servlet,http,http,servlet,request,get,content,type;string,consumes,default
RequestMapping -> String[] consumes() default {}_;1427139532;The consumable media types of the mapped request, narrowing the primary mapping._<p>The format is a single media type or a sequence of media types,_with a request only mapped if the {@code Content-Type} matches one of these media types._Examples:_<pre class="code">_consumes = "text/plain"_consumes = {"text/plain", "application/*"}_</pre>_Expressions can be negated by using the "!" operator, as in "!text/plain", which matches_all requests with a {@code Content-Type} other than "text/plain"._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings override_this consumes restriction._@see org.springframework.http.MediaType_@see javax.servlet.http.HttpServletRequest#getContentType();String[] consumes() default {}_;the,consumable,media,types,of,the,mapped,request,narrowing,the,primary,mapping,p,the,format,is,a,single,media,type,or,a,sequence,of,media,types,with,a,request,only,mapped,if,the,code,content,type,matches,one,of,these,media,types,examples,pre,class,code,consumes,text,plain,consumes,text,plain,application,pre,expressions,can,be,negated,by,using,the,operator,as,in,text,plain,which,matches,all,requests,with,a,code,content,type,other,than,text,plain,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,override,this,consumes,restriction,see,org,springframework,http,media,type,see,javax,servlet,http,http,servlet,request,get,content,type;string,consumes,default
RequestMapping -> String[] consumes() default {}_;1429532371;The consumable media types of the mapped request, narrowing the primary mapping._<p>The format is a single media type or a sequence of media types,_with a request only mapped if the {@code Content-Type} matches one of these media types._Examples:_<pre class="code">_consumes = "text/plain"_consumes = {"text/plain", "application/*"}_</pre>_Expressions can be negated by using the "!" operator, as in "!text/plain", which matches_all requests with a {@code Content-Type} other than "text/plain"._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings override_this consumes restriction._@see org.springframework.http.MediaType_@see javax.servlet.http.HttpServletRequest#getContentType();String[] consumes() default {}_;the,consumable,media,types,of,the,mapped,request,narrowing,the,primary,mapping,p,the,format,is,a,single,media,type,or,a,sequence,of,media,types,with,a,request,only,mapped,if,the,code,content,type,matches,one,of,these,media,types,examples,pre,class,code,consumes,text,plain,consumes,text,plain,application,pre,expressions,can,be,negated,by,using,the,operator,as,in,text,plain,which,matches,all,requests,with,a,code,content,type,other,than,text,plain,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,override,this,consumes,restriction,see,org,springframework,http,media,type,see,javax,servlet,http,http,servlet,request,get,content,type;string,consumes,default
RequestMapping -> String[] consumes() default {}_;1429886024;The consumable media types of the mapped request, narrowing the primary mapping._<p>The format is a single media type or a sequence of media types,_with a request only mapped if the {@code Content-Type} matches one of these media types._Examples:_<pre class="code">_consumes = "text/plain"_consumes = {"text/plain", "application/*"}_</pre>_Expressions can be negated by using the "!" operator, as in "!text/plain", which matches_all requests with a {@code Content-Type} other than "text/plain"._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings override_this consumes restriction._@see org.springframework.http.MediaType_@see javax.servlet.http.HttpServletRequest#getContentType();String[] consumes() default {}_;the,consumable,media,types,of,the,mapped,request,narrowing,the,primary,mapping,p,the,format,is,a,single,media,type,or,a,sequence,of,media,types,with,a,request,only,mapped,if,the,code,content,type,matches,one,of,these,media,types,examples,pre,class,code,consumes,text,plain,consumes,text,plain,application,pre,expressions,can,be,negated,by,using,the,operator,as,in,text,plain,which,matches,all,requests,with,a,code,content,type,other,than,text,plain,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,override,this,consumes,restriction,see,org,springframework,http,media,type,see,javax,servlet,http,http,servlet,request,get,content,type;string,consumes,default
RequestMapping -> String[] consumes() default {}_;1432246071;The consumable media types of the mapped request, narrowing the primary mapping._<p>The format is a single media type or a sequence of media types,_with a request only mapped if the {@code Content-Type} matches one of these media types._Examples:_<pre class="code">_consumes = "text/plain"_consumes = {"text/plain", "application/*"}_</pre>_Expressions can be negated by using the "!" operator, as in "!text/plain", which matches_all requests with a {@code Content-Type} other than "text/plain"._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings override_this consumes restriction._@see org.springframework.http.MediaType_@see javax.servlet.http.HttpServletRequest#getContentType();String[] consumes() default {}_;the,consumable,media,types,of,the,mapped,request,narrowing,the,primary,mapping,p,the,format,is,a,single,media,type,or,a,sequence,of,media,types,with,a,request,only,mapped,if,the,code,content,type,matches,one,of,these,media,types,examples,pre,class,code,consumes,text,plain,consumes,text,plain,application,pre,expressions,can,be,negated,by,using,the,operator,as,in,text,plain,which,matches,all,requests,with,a,code,content,type,other,than,text,plain,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,override,this,consumes,restriction,see,org,springframework,http,media,type,see,javax,servlet,http,http,servlet,request,get,content,type;string,consumes,default
RequestMapping -> String[] consumes() default {}_;1438176426;The consumable media types of the mapped request, narrowing the primary mapping._<p>The format is a single media type or a sequence of media types,_with a request only mapped if the {@code Content-Type} matches one of these media types._Examples:_<pre class="code">_consumes = "text/plain"_consumes = {"text/plain", "application/*"}_</pre>_Expressions can be negated by using the "!" operator, as in "!text/plain", which matches_all requests with a {@code Content-Type} other than "text/plain"._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings override_this consumes restriction._@see org.springframework.http.MediaType_@see javax.servlet.http.HttpServletRequest#getContentType();String[] consumes() default {}_;the,consumable,media,types,of,the,mapped,request,narrowing,the,primary,mapping,p,the,format,is,a,single,media,type,or,a,sequence,of,media,types,with,a,request,only,mapped,if,the,code,content,type,matches,one,of,these,media,types,examples,pre,class,code,consumes,text,plain,consumes,text,plain,application,pre,expressions,can,be,negated,by,using,the,operator,as,in,text,plain,which,matches,all,requests,with,a,code,content,type,other,than,text,plain,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,override,this,consumes,restriction,see,org,springframework,http,media,type,see,javax,servlet,http,http,servlet,request,get,content,type;string,consumes,default
RequestMapping -> String[] consumes() default {}_;1444666351;The consumable media types of the mapped request, narrowing the primary mapping._<p>The format is a single media type or a sequence of media types,_with a request only mapped if the {@code Content-Type} matches one of these media types._Examples:_<pre class="code">_consumes = "text/plain"_consumes = {"text/plain", "application/*"}_</pre>_Expressions can be negated by using the "!" operator, as in "!text/plain", which matches_all requests with a {@code Content-Type} other than "text/plain"._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings override_this consumes restriction._@see org.springframework.http.MediaType_@see javax.servlet.http.HttpServletRequest#getContentType();String[] consumes() default {}_;the,consumable,media,types,of,the,mapped,request,narrowing,the,primary,mapping,p,the,format,is,a,single,media,type,or,a,sequence,of,media,types,with,a,request,only,mapped,if,the,code,content,type,matches,one,of,these,media,types,examples,pre,class,code,consumes,text,plain,consumes,text,plain,application,pre,expressions,can,be,negated,by,using,the,operator,as,in,text,plain,which,matches,all,requests,with,a,code,content,type,other,than,text,plain,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,override,this,consumes,restriction,see,org,springframework,http,media,type,see,javax,servlet,http,http,servlet,request,get,content,type;string,consumes,default
RequestMapping -> String[] consumes() default {}_;1446446882;The consumable media types of the mapped request, narrowing the primary mapping._<p>The format is a single media type or a sequence of media types,_with a request only mapped if the {@code Content-Type} matches one of these media types._Examples:_<pre class="code">_consumes = "text/plain"_consumes = {"text/plain", "application/*"}_</pre>_Expressions can be negated by using the "!" operator, as in "!text/plain", which matches_all requests with a {@code Content-Type} other than "text/plain"._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings override_this consumes restriction._@see org.springframework.http.MediaType_@see javax.servlet.http.HttpServletRequest#getContentType();String[] consumes() default {}_;the,consumable,media,types,of,the,mapped,request,narrowing,the,primary,mapping,p,the,format,is,a,single,media,type,or,a,sequence,of,media,types,with,a,request,only,mapped,if,the,code,content,type,matches,one,of,these,media,types,examples,pre,class,code,consumes,text,plain,consumes,text,plain,application,pre,expressions,can,be,negated,by,using,the,operator,as,in,text,plain,which,matches,all,requests,with,a,code,content,type,other,than,text,plain,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,override,this,consumes,restriction,see,org,springframework,http,media,type,see,javax,servlet,http,http,servlet,request,get,content,type;string,consumes,default
RequestMapping -> String[] consumes() default {}_;1453844264;The consumable media types of the mapped request, narrowing the primary mapping._<p>The format is a single media type or a sequence of media types,_with a request only mapped if the {@code Content-Type} matches one of these media types._Examples:_<pre class="code">_consumes = "text/plain"_consumes = {"text/plain", "application/*"}_</pre>_Expressions can be negated by using the "!" operator, as in "!text/plain", which matches_all requests with a {@code Content-Type} other than "text/plain"._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings override_this consumes restriction._@see org.springframework.http.MediaType_@see javax.servlet.http.HttpServletRequest#getContentType();String[] consumes() default {}_;the,consumable,media,types,of,the,mapped,request,narrowing,the,primary,mapping,p,the,format,is,a,single,media,type,or,a,sequence,of,media,types,with,a,request,only,mapped,if,the,code,content,type,matches,one,of,these,media,types,examples,pre,class,code,consumes,text,plain,consumes,text,plain,application,pre,expressions,can,be,negated,by,using,the,operator,as,in,text,plain,which,matches,all,requests,with,a,code,content,type,other,than,text,plain,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,override,this,consumes,restriction,see,org,springframework,http,media,type,see,javax,servlet,http,http,servlet,request,get,content,type;string,consumes,default
RequestMapping -> String[] consumes() default {}_;1453844270;The consumable media types of the mapped request, narrowing the primary mapping._<p>The format is a single media type or a sequence of media types,_with a request only mapped if the {@code Content-Type} matches one of these media types._Examples:_<pre class="code">_consumes = "text/plain"_consumes = {"text/plain", "application/*"}_</pre>_Expressions can be negated by using the "!" operator, as in "!text/plain", which matches_all requests with a {@code Content-Type} other than "text/plain"._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings override_this consumes restriction._@see org.springframework.http.MediaType_@see javax.servlet.http.HttpServletRequest#getContentType();String[] consumes() default {}_;the,consumable,media,types,of,the,mapped,request,narrowing,the,primary,mapping,p,the,format,is,a,single,media,type,or,a,sequence,of,media,types,with,a,request,only,mapped,if,the,code,content,type,matches,one,of,these,media,types,examples,pre,class,code,consumes,text,plain,consumes,text,plain,application,pre,expressions,can,be,negated,by,using,the,operator,as,in,text,plain,which,matches,all,requests,with,a,code,content,type,other,than,text,plain,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,override,this,consumes,restriction,see,org,springframework,http,media,type,see,javax,servlet,http,http,servlet,request,get,content,type;string,consumes,default
RequestMapping -> String[] consumes() default {}_;1456522551;The consumable media types of the mapped request, narrowing the primary mapping._<p>The format is a single media type or a sequence of media types,_with a request only mapped if the {@code Content-Type} matches one of these media types._Examples:_<pre class="code">_consumes = "text/plain"_consumes = {"text/plain", "application/*"}_</pre>_Expressions can be negated by using the "!" operator, as in "!text/plain", which matches_all requests with a {@code Content-Type} other than "text/plain"._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings override_this consumes restriction._@see org.springframework.http.MediaType_@see javax.servlet.http.HttpServletRequest#getContentType();String[] consumes() default {}_;the,consumable,media,types,of,the,mapped,request,narrowing,the,primary,mapping,p,the,format,is,a,single,media,type,or,a,sequence,of,media,types,with,a,request,only,mapped,if,the,code,content,type,matches,one,of,these,media,types,examples,pre,class,code,consumes,text,plain,consumes,text,plain,application,pre,expressions,can,be,negated,by,using,the,operator,as,in,text,plain,which,matches,all,requests,with,a,code,content,type,other,than,text,plain,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,override,this,consumes,restriction,see,org,springframework,http,media,type,see,javax,servlet,http,http,servlet,request,get,content,type;string,consumes,default
RequestMapping -> String[] consumes() default {}_;1456766757;The consumable media types of the mapped request, narrowing the primary mapping._<p>The format is a single media type or a sequence of media types,_with a request only mapped if the {@code Content-Type} matches one of these media types._Examples:_<pre class="code">_consumes = "text/plain"_consumes = {"text/plain", "application/*"}_</pre>_Expressions can be negated by using the "!" operator, as in "!text/plain", which matches_all requests with a {@code Content-Type} other than "text/plain"._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings override_this consumes restriction._@see org.springframework.http.MediaType_@see javax.servlet.http.HttpServletRequest#getContentType();String[] consumes() default {}_;the,consumable,media,types,of,the,mapped,request,narrowing,the,primary,mapping,p,the,format,is,a,single,media,type,or,a,sequence,of,media,types,with,a,request,only,mapped,if,the,code,content,type,matches,one,of,these,media,types,examples,pre,class,code,consumes,text,plain,consumes,text,plain,application,pre,expressions,can,be,negated,by,using,the,operator,as,in,text,plain,which,matches,all,requests,with,a,code,content,type,other,than,text,plain,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,override,this,consumes,restriction,see,org,springframework,http,media,type,see,javax,servlet,http,http,servlet,request,get,content,type;string,consumes,default
RequestMapping -> String[] consumes() default {}_;1467668027;The consumable media types of the mapped request, narrowing the primary mapping._<p>The format is a single media type or a sequence of media types,_with a request only mapped if the {@code Content-Type} matches one of these media types._Examples:_<pre class="code">_consumes = "text/plain"_consumes = {"text/plain", "application/*"}_</pre>_Expressions can be negated by using the "!" operator, as in "!text/plain", which matches_all requests with a {@code Content-Type} other than "text/plain"._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings override_this consumes restriction._@see org.springframework.http.MediaType_@see javax.servlet.http.HttpServletRequest#getContentType();String[] consumes() default {}_;the,consumable,media,types,of,the,mapped,request,narrowing,the,primary,mapping,p,the,format,is,a,single,media,type,or,a,sequence,of,media,types,with,a,request,only,mapped,if,the,code,content,type,matches,one,of,these,media,types,examples,pre,class,code,consumes,text,plain,consumes,text,plain,application,pre,expressions,can,be,negated,by,using,the,operator,as,in,text,plain,which,matches,all,requests,with,a,code,content,type,other,than,text,plain,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,override,this,consumes,restriction,see,org,springframework,http,media,type,see,javax,servlet,http,http,servlet,request,get,content,type;string,consumes,default
RequestMapping -> String[] consumes() default {}_;1467677340;The consumable media types of the mapped request, narrowing the primary mapping._<p>The format is a single media type or a sequence of media types,_with a request only mapped if the {@code Content-Type} matches one of these media types._Examples:_<pre class="code">_consumes = "text/plain"_consumes = {"text/plain", "application/*"}_</pre>_Expressions can be negated by using the "!" operator, as in "!text/plain", which matches_all requests with a {@code Content-Type} other than "text/plain"._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings override_this consumes restriction._@see org.springframework.http.MediaType_@see javax.servlet.http.HttpServletRequest#getContentType();String[] consumes() default {}_;the,consumable,media,types,of,the,mapped,request,narrowing,the,primary,mapping,p,the,format,is,a,single,media,type,or,a,sequence,of,media,types,with,a,request,only,mapped,if,the,code,content,type,matches,one,of,these,media,types,examples,pre,class,code,consumes,text,plain,consumes,text,plain,application,pre,expressions,can,be,negated,by,using,the,operator,as,in,text,plain,which,matches,all,requests,with,a,code,content,type,other,than,text,plain,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,override,this,consumes,restriction,see,org,springframework,http,media,type,see,javax,servlet,http,http,servlet,request,get,content,type;string,consumes,default
RequestMapping -> String[] consumes() default {}_;1491341544;The consumable media types of the mapped request, narrowing the primary mapping._<p>The format is a single media type or a sequence of media types,_with a request only mapped if the {@code Content-Type} matches one of these media types._Examples:_<pre class="code">_consumes = "text/plain"_consumes = {"text/plain", "application/*"}_</pre>_Expressions can be negated by using the "!" operator, as in "!text/plain", which matches_all requests with a {@code Content-Type} other than "text/plain"._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings override_this consumes restriction._@see org.springframework.http.MediaType_@see javax.servlet.http.HttpServletRequest#getContentType();String[] consumes() default {}_;the,consumable,media,types,of,the,mapped,request,narrowing,the,primary,mapping,p,the,format,is,a,single,media,type,or,a,sequence,of,media,types,with,a,request,only,mapped,if,the,code,content,type,matches,one,of,these,media,types,examples,pre,class,code,consumes,text,plain,consumes,text,plain,application,pre,expressions,can,be,negated,by,using,the,operator,as,in,text,plain,which,matches,all,requests,with,a,code,content,type,other,than,text,plain,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,override,this,consumes,restriction,see,org,springframework,http,media,type,see,javax,servlet,http,http,servlet,request,get,content,type;string,consumes,default
RequestMapping -> String[] consumes() default {}_;1491599707;The consumable media types of the mapped request, narrowing the primary mapping._<p>The format is a single media type or a sequence of media types,_with a request only mapped if the {@code Content-Type} matches one of these media types._Examples:_<pre class="code">_consumes = "text/plain"_consumes = {"text/plain", "application/*"}_</pre>_Expressions can be negated by using the "!" operator, as in "!text/plain", which matches_all requests with a {@code Content-Type} other than "text/plain"._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings override_this consumes restriction._@see org.springframework.http.MediaType_@see javax.servlet.http.HttpServletRequest#getContentType();String[] consumes() default {}_;the,consumable,media,types,of,the,mapped,request,narrowing,the,primary,mapping,p,the,format,is,a,single,media,type,or,a,sequence,of,media,types,with,a,request,only,mapped,if,the,code,content,type,matches,one,of,these,media,types,examples,pre,class,code,consumes,text,plain,consumes,text,plain,application,pre,expressions,can,be,negated,by,using,the,operator,as,in,text,plain,which,matches,all,requests,with,a,code,content,type,other,than,text,plain,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,override,this,consumes,restriction,see,org,springframework,http,media,type,see,javax,servlet,http,http,servlet,request,get,content,type;string,consumes,default
RequestMapping -> String[] consumes() default {}_;1506454198;The consumable media types of the mapped request, narrowing the primary mapping._<p>The format is a single media type or a sequence of media types,_with a request only mapped if the {@code Content-Type} matches one of these media types._Examples:_<pre class="code">_consumes = "text/plain"_consumes = {"text/plain", "application/*"}_</pre>_Expressions can be negated by using the "!" operator, as in "!text/plain", which matches_all requests with a {@code Content-Type} other than "text/plain"._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings override_this consumes restriction._@see org.springframework.http.MediaType_@see javax.servlet.http.HttpServletRequest#getContentType();String[] consumes() default {}_;the,consumable,media,types,of,the,mapped,request,narrowing,the,primary,mapping,p,the,format,is,a,single,media,type,or,a,sequence,of,media,types,with,a,request,only,mapped,if,the,code,content,type,matches,one,of,these,media,types,examples,pre,class,code,consumes,text,plain,consumes,text,plain,application,pre,expressions,can,be,negated,by,using,the,operator,as,in,text,plain,which,matches,all,requests,with,a,code,content,type,other,than,text,plain,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,override,this,consumes,restriction,see,org,springframework,http,media,type,see,javax,servlet,http,http,servlet,request,get,content,type;string,consumes,default
RequestMapping -> String[] consumes() default {}_;1515421792;The consumable media types of the mapped request, narrowing the primary mapping._<p>The format is a single media type or a sequence of media types,_with a request only mapped if the {@code Content-Type} matches one of these media types._Examples:_<pre class="code">_consumes = "text/plain"_consumes = {"text/plain", "application/*"}_</pre>_Expressions can be negated by using the "!" operator, as in "!text/plain", which matches_all requests with a {@code Content-Type} other than "text/plain"._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings override_this consumes restriction._@see org.springframework.http.MediaType_@see javax.servlet.http.HttpServletRequest#getContentType();String[] consumes() default {}_;the,consumable,media,types,of,the,mapped,request,narrowing,the,primary,mapping,p,the,format,is,a,single,media,type,or,a,sequence,of,media,types,with,a,request,only,mapped,if,the,code,content,type,matches,one,of,these,media,types,examples,pre,class,code,consumes,text,plain,consumes,text,plain,application,pre,expressions,can,be,negated,by,using,the,operator,as,in,text,plain,which,matches,all,requests,with,a,code,content,type,other,than,text,plain,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,override,this,consumes,restriction,see,org,springframework,http,media,type,see,javax,servlet,http,http,servlet,request,get,content,type;string,consumes,default
RequestMapping -> String[] consumes() default {}_;1523268197;The consumable media types of the mapped request, narrowing the primary mapping._<p>The format is a single media type or a sequence of media types,_with a request only mapped if the {@code Content-Type} matches one of these media types._Examples:_<pre class="code">_consumes = "text/plain"_consumes = {"text/plain", "application/*"}_</pre>_Expressions can be negated by using the "!" operator, as in "!text/plain", which matches_all requests with a {@code Content-Type} other than "text/plain"._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings override_this consumes restriction._@see org.springframework.http.MediaType_@see javax.servlet.http.HttpServletRequest#getContentType();String[] consumes() default {}_;the,consumable,media,types,of,the,mapped,request,narrowing,the,primary,mapping,p,the,format,is,a,single,media,type,or,a,sequence,of,media,types,with,a,request,only,mapped,if,the,code,content,type,matches,one,of,these,media,types,examples,pre,class,code,consumes,text,plain,consumes,text,plain,application,pre,expressions,can,be,negated,by,using,the,operator,as,in,text,plain,which,matches,all,requests,with,a,code,content,type,other,than,text,plain,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,override,this,consumes,restriction,see,org,springframework,http,media,type,see,javax,servlet,http,http,servlet,request,get,content,type;string,consumes,default
RequestMapping -> String[] consumes() default {}_;1528795693;The consumable media types of the mapped request, narrowing the primary mapping._<p>The format is a single media type or a sequence of media types,_with a request only mapped if the {@code Content-Type} matches one of these media types._Examples:_<pre class="code">_consumes = "text/plain"_consumes = {"text/plain", "application/*"}_</pre>_Expressions can be negated by using the "!" operator, as in "!text/plain", which matches_all requests with a {@code Content-Type} other than "text/plain"._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings override_this consumes restriction._@see org.springframework.http.MediaType_@see javax.servlet.http.HttpServletRequest#getContentType();String[] consumes() default {}_;the,consumable,media,types,of,the,mapped,request,narrowing,the,primary,mapping,p,the,format,is,a,single,media,type,or,a,sequence,of,media,types,with,a,request,only,mapped,if,the,code,content,type,matches,one,of,these,media,types,examples,pre,class,code,consumes,text,plain,consumes,text,plain,application,pre,expressions,can,be,negated,by,using,the,operator,as,in,text,plain,which,matches,all,requests,with,a,code,content,type,other,than,text,plain,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,override,this,consumes,restriction,see,org,springframework,http,media,type,see,javax,servlet,http,http,servlet,request,get,content,type;string,consumes,default
RequestMapping -> String[] produces() default {}_;1328020251;The producible media types of the mapped request, narrowing the primary mapping._<p>The format is a sequence of media types ("text/plain", "application/*),_with a request only mapped if the {@code Accept} matches one of these media types._Expressions can be negated by using the "!" operator, as in "!text/plain", which matches_all requests with a {@code Accept} other than "text/plain"._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings override_this consumes restriction._@see org.springframework.http.MediaType;String[] produces() default {}_;the,producible,media,types,of,the,mapped,request,narrowing,the,primary,mapping,p,the,format,is,a,sequence,of,media,types,text,plain,application,with,a,request,only,mapped,if,the,code,accept,matches,one,of,these,media,types,expressions,can,be,negated,by,using,the,operator,as,in,text,plain,which,matches,all,requests,with,a,code,accept,other,than,text,plain,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,override,this,consumes,restriction,see,org,springframework,http,media,type;string,produces,default
RequestMapping -> String[] produces() default {}_;1329142650;The producible media types of the mapped request, narrowing the primary mapping._<p>The format is a sequence of media types ("text/plain", "application/*),_with a request only mapped if the {@code Accept} matches one of these media types._Expressions can be negated by using the "!" operator, as in "!text/plain", which matches_all requests with a {@code Accept} other than "text/plain"._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings override_this consumes restriction._@see org.springframework.http.MediaType;String[] produces() default {}_;the,producible,media,types,of,the,mapped,request,narrowing,the,primary,mapping,p,the,format,is,a,sequence,of,media,types,text,plain,application,with,a,request,only,mapped,if,the,code,accept,matches,one,of,these,media,types,expressions,can,be,negated,by,using,the,operator,as,in,text,plain,which,matches,all,requests,with,a,code,accept,other,than,text,plain,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,override,this,consumes,restriction,see,org,springframework,http,media,type;string,produces,default
RequestMapping -> String[] produces() default {}_;1334781369;The producible media types of the mapped request, narrowing the primary mapping._<p>The format is a sequence of media types ("text/plain", "application/*),_with a request only mapped if the {@code Accept} matches one of these media types._Expressions can be negated by using the "!" operator, as in "!text/plain", which matches_all requests with a {@code Accept} other than "text/plain"._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings override_this consumes restriction._@see org.springframework.http.MediaType;String[] produces() default {}_;the,producible,media,types,of,the,mapped,request,narrowing,the,primary,mapping,p,the,format,is,a,sequence,of,media,types,text,plain,application,with,a,request,only,mapped,if,the,code,accept,matches,one,of,these,media,types,expressions,can,be,negated,by,using,the,operator,as,in,text,plain,which,matches,all,requests,with,a,code,accept,other,than,text,plain,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,override,this,consumes,restriction,see,org,springframework,http,media,type;string,produces,default
RequestMapping -> String[] produces() default {}_;1335774711;The producible media types of the mapped request, narrowing the primary mapping._<p>The format is a sequence of media types ("text/plain", "application/*),_with a request only mapped if the {@code Accept} matches one of these media types._Expressions can be negated by using the "!" operator, as in "!text/plain", which matches_all requests with a {@code Accept} other than "text/plain"._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings override_this consumes restriction._@see org.springframework.http.MediaType;String[] produces() default {}_;the,producible,media,types,of,the,mapped,request,narrowing,the,primary,mapping,p,the,format,is,a,sequence,of,media,types,text,plain,application,with,a,request,only,mapped,if,the,code,accept,matches,one,of,these,media,types,expressions,can,be,negated,by,using,the,operator,as,in,text,plain,which,matches,all,requests,with,a,code,accept,other,than,text,plain,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,override,this,consumes,restriction,see,org,springframework,http,media,type;string,produces,default
RequestMapping -> String[] produces() default {}_;1337025676;The producible media types of the mapped request, narrowing the primary mapping._<p>The format is a sequence of media types ("text/plain", "application/*),_with a request only mapped if the {@code Accept} matches one of these media types._Expressions can be negated by using the "!" operator, as in "!text/plain", which matches_all requests with a {@code Accept} other than "text/plain"._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings override_this consumes restriction._@see org.springframework.http.MediaType;String[] produces() default {}_;the,producible,media,types,of,the,mapped,request,narrowing,the,primary,mapping,p,the,format,is,a,sequence,of,media,types,text,plain,application,with,a,request,only,mapped,if,the,code,accept,matches,one,of,these,media,types,expressions,can,be,negated,by,using,the,operator,as,in,text,plain,which,matches,all,requests,with,a,code,accept,other,than,text,plain,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,override,this,consumes,restriction,see,org,springframework,http,media,type;string,produces,default
RequestMapping -> String[] produces() default {}_;1340018565;The producible media types of the mapped request, narrowing the primary mapping._<p>The format is a single media type or a sequence of media types,_with a request only mapped if the {@code Accept} matches one of these media types._Examples:_<pre>_produces = "text/plain"_produces = {"text/plain", "application/*"}_</pre>_Expressions can be negated by using the "!" operator, as in "!text/plain", which matches_all requests with a {@code Accept} other than "text/plain"._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings override_this consumes restriction._@see org.springframework.http.MediaType;String[] produces() default {}_;the,producible,media,types,of,the,mapped,request,narrowing,the,primary,mapping,p,the,format,is,a,single,media,type,or,a,sequence,of,media,types,with,a,request,only,mapped,if,the,code,accept,matches,one,of,these,media,types,examples,pre,produces,text,plain,produces,text,plain,application,pre,expressions,can,be,negated,by,using,the,operator,as,in,text,plain,which,matches,all,requests,with,a,code,accept,other,than,text,plain,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,override,this,consumes,restriction,see,org,springframework,http,media,type;string,produces,default
RequestMapping -> String[] produces() default {}_;1340398642;The producible media types of the mapped request, narrowing the primary mapping._<p>The format is a single media type or a sequence of media types,_with a request only mapped if the {@code Accept} matches one of these media types._Examples:_<pre>_produces = "text/plain"_produces = {"text/plain", "application/*"}_</pre>_Expressions can be negated by using the "!" operator, as in "!text/plain", which matches_all requests with a {@code Accept} other than "text/plain"._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings override_this consumes restriction._@see org.springframework.http.MediaType;String[] produces() default {}_;the,producible,media,types,of,the,mapped,request,narrowing,the,primary,mapping,p,the,format,is,a,single,media,type,or,a,sequence,of,media,types,with,a,request,only,mapped,if,the,code,accept,matches,one,of,these,media,types,examples,pre,produces,text,plain,produces,text,plain,application,pre,expressions,can,be,negated,by,using,the,operator,as,in,text,plain,which,matches,all,requests,with,a,code,accept,other,than,text,plain,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,override,this,consumes,restriction,see,org,springframework,http,media,type;string,produces,default
RequestMapping -> String[] produces() default {}_;1345574045;The producible media types of the mapped request, narrowing the primary mapping._<p>The format is a single media type or a sequence of media types,_with a request only mapped if the {@code Accept} matches one of these media types._Examples:_<pre>_produces = "text/plain"_produces = {"text/plain", "application/*"}_</pre>_Expressions can be negated by using the "!" operator, as in "!text/plain", which matches_all requests with a {@code Accept} other than "text/plain"._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings override_this consumes restriction._@see org.springframework.http.MediaType;String[] produces() default {}_;the,producible,media,types,of,the,mapped,request,narrowing,the,primary,mapping,p,the,format,is,a,single,media,type,or,a,sequence,of,media,types,with,a,request,only,mapped,if,the,code,accept,matches,one,of,these,media,types,examples,pre,produces,text,plain,produces,text,plain,application,pre,expressions,can,be,negated,by,using,the,operator,as,in,text,plain,which,matches,all,requests,with,a,code,accept,other,than,text,plain,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,override,this,consumes,restriction,see,org,springframework,http,media,type;string,produces,default
RequestMapping -> String[] produces() default {}_;1346174472;The producible media types of the mapped request, narrowing the primary mapping._<p>The format is a single media type or a sequence of media types,_with a request only mapped if the {@code Accept} matches one of these media types._Examples:_<pre>_produces = "text/plain"_produces = {"text/plain", "application/*"}_</pre>_Expressions can be negated by using the "!" operator, as in "!text/plain", which matches_all requests with a {@code Accept} other than "text/plain"._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings override_this consumes restriction._@see org.springframework.http.MediaType;String[] produces() default {}_;the,producible,media,types,of,the,mapped,request,narrowing,the,primary,mapping,p,the,format,is,a,single,media,type,or,a,sequence,of,media,types,with,a,request,only,mapped,if,the,code,accept,matches,one,of,these,media,types,examples,pre,produces,text,plain,produces,text,plain,application,pre,expressions,can,be,negated,by,using,the,operator,as,in,text,plain,which,matches,all,requests,with,a,code,accept,other,than,text,plain,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,override,this,consumes,restriction,see,org,springframework,http,media,type;string,produces,default
RequestMapping -> String[] produces() default {}_;1355313310;The producible media types of the mapped request, narrowing the primary mapping._<p>The format is a single media type or a sequence of media types,_with a request only mapped if the {@code Accept} matches one of these media types._Examples:_<pre>_produces = "text/plain"_produces = {"text/plain", "application/*"}_</pre>_Expressions can be negated by using the "!" operator, as in "!text/plain", which matches_all requests with a {@code Accept} other than "text/plain"._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings override_this consumes restriction._@see org.springframework.http.MediaType;String[] produces() default {}_;the,producible,media,types,of,the,mapped,request,narrowing,the,primary,mapping,p,the,format,is,a,single,media,type,or,a,sequence,of,media,types,with,a,request,only,mapped,if,the,code,accept,matches,one,of,these,media,types,examples,pre,produces,text,plain,produces,text,plain,application,pre,expressions,can,be,negated,by,using,the,operator,as,in,text,plain,which,matches,all,requests,with,a,code,accept,other,than,text,plain,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,override,this,consumes,restriction,see,org,springframework,http,media,type;string,produces,default
RequestMapping -> String[] produces() default {}_;1356735495;The producible media types of the mapped request, narrowing the primary mapping._<p>The format is a single media type or a sequence of media types,_with a request only mapped if the {@code Accept} matches one of these media types._Examples:_<pre>_produces = "text/plain"_produces = {"text/plain", "application/*"}_</pre>_Expressions can be negated by using the "!" operator, as in "!text/plain", which matches_all requests with a {@code Accept} other than "text/plain"._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings override_this consumes restriction._@see org.springframework.http.MediaType;String[] produces() default {}_;the,producible,media,types,of,the,mapped,request,narrowing,the,primary,mapping,p,the,format,is,a,single,media,type,or,a,sequence,of,media,types,with,a,request,only,mapped,if,the,code,accept,matches,one,of,these,media,types,examples,pre,produces,text,plain,produces,text,plain,application,pre,expressions,can,be,negated,by,using,the,operator,as,in,text,plain,which,matches,all,requests,with,a,code,accept,other,than,text,plain,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,override,this,consumes,restriction,see,org,springframework,http,media,type;string,produces,default
RequestMapping -> String[] produces() default {}_;1362408075;The producible media types of the mapped request, narrowing the primary mapping._<p>The format is a single media type or a sequence of media types,_with a request only mapped if the {@code Accept} matches one of these media types._Examples:_<pre>_produces = "text/plain"_produces = {"text/plain", "application/*"}_</pre>_Expressions can be negated by using the "!" operator, as in "!text/plain", which matches_all requests with a {@code Accept} other than "text/plain"._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings override_this consumes restriction._@see org.springframework.http.MediaType;String[] produces() default {}_;the,producible,media,types,of,the,mapped,request,narrowing,the,primary,mapping,p,the,format,is,a,single,media,type,or,a,sequence,of,media,types,with,a,request,only,mapped,if,the,code,accept,matches,one,of,these,media,types,examples,pre,produces,text,plain,produces,text,plain,application,pre,expressions,can,be,negated,by,using,the,operator,as,in,text,plain,which,matches,all,requests,with,a,code,accept,other,than,text,plain,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,override,this,consumes,restriction,see,org,springframework,http,media,type;string,produces,default
RequestMapping -> String[] produces() default {}_;1367955086;The producible media types of the mapped request, narrowing the primary mapping._<p>The format is a single media type or a sequence of media types,_with a request only mapped if the {@code Accept} matches one of these media types._Examples:_<pre class="code">_produces = "text/plain"_produces = {"text/plain", "application/*"}_</pre>_Expressions can be negated by using the "!" operator, as in "!text/plain", which matches_all requests with a {@code Accept} other than "text/plain"._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings override_this consumes restriction._@see org.springframework.http.MediaType;String[] produces() default {}_;the,producible,media,types,of,the,mapped,request,narrowing,the,primary,mapping,p,the,format,is,a,single,media,type,or,a,sequence,of,media,types,with,a,request,only,mapped,if,the,code,accept,matches,one,of,these,media,types,examples,pre,class,code,produces,text,plain,produces,text,plain,application,pre,expressions,can,be,negated,by,using,the,operator,as,in,text,plain,which,matches,all,requests,with,a,code,accept,other,than,text,plain,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,override,this,consumes,restriction,see,org,springframework,http,media,type;string,produces,default
RequestMapping -> String[] produces() default {}_;1372363092;The producible media types of the mapped request, narrowing the primary mapping._<p>The format is a single media type or a sequence of media types,_with a request only mapped if the {@code Accept} matches one of these media types._Examples:_<pre class="code">_produces = "text/plain"_produces = {"text/plain", "application/*"}_</pre>_Expressions can be negated by using the "!" operator, as in "!text/plain", which matches_all requests with a {@code Accept} other than "text/plain"._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings override_this consumes restriction._@see org.springframework.http.MediaType;String[] produces() default {}_;the,producible,media,types,of,the,mapped,request,narrowing,the,primary,mapping,p,the,format,is,a,single,media,type,or,a,sequence,of,media,types,with,a,request,only,mapped,if,the,code,accept,matches,one,of,these,media,types,examples,pre,class,code,produces,text,plain,produces,text,plain,application,pre,expressions,can,be,negated,by,using,the,operator,as,in,text,plain,which,matches,all,requests,with,a,code,accept,other,than,text,plain,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,override,this,consumes,restriction,see,org,springframework,http,media,type;string,produces,default
RequestMapping -> String[] produces() default {}_;1385501137;The producible media types of the mapped request, narrowing the primary mapping._<p>The format is a single media type or a sequence of media types,_with a request only mapped if the {@code Accept} matches one of these media types._Examples:_<pre class="code">_produces = "text/plain"_produces = {"text/plain", "application/*"}_</pre>_Expressions can be negated by using the "!" operator, as in "!text/plain", which matches_all requests with a {@code Accept} other than "text/plain"._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings override_this consumes restriction._@see org.springframework.http.MediaType;String[] produces() default {}_;the,producible,media,types,of,the,mapped,request,narrowing,the,primary,mapping,p,the,format,is,a,single,media,type,or,a,sequence,of,media,types,with,a,request,only,mapped,if,the,code,accept,matches,one,of,these,media,types,examples,pre,class,code,produces,text,plain,produces,text,plain,application,pre,expressions,can,be,negated,by,using,the,operator,as,in,text,plain,which,matches,all,requests,with,a,code,accept,other,than,text,plain,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,override,this,consumes,restriction,see,org,springframework,http,media,type;string,produces,default
RequestMapping -> String[] produces() default {}_;1390272537;The producible media types of the mapped request, narrowing the primary mapping._<p>The format is a single media type or a sequence of media types,_with a request only mapped if the {@code Accept} matches one of these media types._Examples:_<pre class="code">_produces = "text/plain"_produces = {"text/plain", "application/*"}_</pre>_Expressions can be negated by using the "!" operator, as in "!text/plain", which matches_all requests with a {@code Accept} other than "text/plain"._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings override_this consumes restriction._@see org.springframework.http.MediaType;String[] produces() default {}_;the,producible,media,types,of,the,mapped,request,narrowing,the,primary,mapping,p,the,format,is,a,single,media,type,or,a,sequence,of,media,types,with,a,request,only,mapped,if,the,code,accept,matches,one,of,these,media,types,examples,pre,class,code,produces,text,plain,produces,text,plain,application,pre,expressions,can,be,negated,by,using,the,operator,as,in,text,plain,which,matches,all,requests,with,a,code,accept,other,than,text,plain,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,override,this,consumes,restriction,see,org,springframework,http,media,type;string,produces,default
RequestMapping -> String[] produces() default {}_;1392311784;The producible media types of the mapped request, narrowing the primary mapping._<p>The format is a single media type or a sequence of media types,_with a request only mapped if the {@code Accept} matches one of these media types._Examples:_<pre class="code">_produces = "text/plain"_produces = {"text/plain", "application/*"}_</pre>_Expressions can be negated by using the "!" operator, as in "!text/plain", which matches_all requests with a {@code Accept} other than "text/plain"._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings override_this consumes restriction._@see org.springframework.http.MediaType;String[] produces() default {}_;the,producible,media,types,of,the,mapped,request,narrowing,the,primary,mapping,p,the,format,is,a,single,media,type,or,a,sequence,of,media,types,with,a,request,only,mapped,if,the,code,accept,matches,one,of,these,media,types,examples,pre,class,code,produces,text,plain,produces,text,plain,application,pre,expressions,can,be,negated,by,using,the,operator,as,in,text,plain,which,matches,all,requests,with,a,code,accept,other,than,text,plain,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,override,this,consumes,restriction,see,org,springframework,http,media,type;string,produces,default
RequestMapping -> String[] produces() default {}_;1398737597;The producible media types of the mapped request, narrowing the primary mapping._<p>The format is a single media type or a sequence of media types,_with a request only mapped if the {@code Accept} matches one of these media types._Examples:_<pre class="code">_produces = "text/plain"_produces = {"text/plain", "application/*"}_</pre>_Expressions can be negated by using the "!" operator, as in "!text/plain", which matches_all requests with a {@code Accept} other than "text/plain"._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings override_this produces restriction._@see org.springframework.http.MediaType;String[] produces() default {}_;the,producible,media,types,of,the,mapped,request,narrowing,the,primary,mapping,p,the,format,is,a,single,media,type,or,a,sequence,of,media,types,with,a,request,only,mapped,if,the,code,accept,matches,one,of,these,media,types,examples,pre,class,code,produces,text,plain,produces,text,plain,application,pre,expressions,can,be,negated,by,using,the,operator,as,in,text,plain,which,matches,all,requests,with,a,code,accept,other,than,text,plain,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,override,this,produces,restriction,see,org,springframework,http,media,type;string,produces,default
RequestMapping -> String[] produces() default {}_;1398961739;The producible media types of the mapped request, narrowing the primary mapping._<p>The format is a single media type or a sequence of media types,_with a request only mapped if the {@code Accept} matches one of these media types._Examples:_<pre class="code">_produces = "text/plain"_produces = {"text/plain", "application/*"}_</pre>_Expressions can be negated by using the "!" operator, as in "!text/plain", which matches_all requests with a {@code Accept} other than "text/plain"._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings override_this produces restriction._@see org.springframework.http.MediaType;String[] produces() default {}_;the,producible,media,types,of,the,mapped,request,narrowing,the,primary,mapping,p,the,format,is,a,single,media,type,or,a,sequence,of,media,types,with,a,request,only,mapped,if,the,code,accept,matches,one,of,these,media,types,examples,pre,class,code,produces,text,plain,produces,text,plain,application,pre,expressions,can,be,negated,by,using,the,operator,as,in,text,plain,which,matches,all,requests,with,a,code,accept,other,than,text,plain,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,override,this,produces,restriction,see,org,springframework,http,media,type;string,produces,default
RequestMapping -> String[] produces() default {}_;1399404473;The producible media types of the mapped request, narrowing the primary mapping._<p>The format is a single media type or a sequence of media types,_with a request only mapped if the {@code Accept} matches one of these media types._Examples:_<pre class="code">_produces = "text/plain"_produces = {"text/plain", "application/*"}_</pre>_Expressions can be negated by using the "!" operator, as in "!text/plain", which matches_all requests with a {@code Accept} other than "text/plain"._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings override_this produces restriction._@see org.springframework.http.MediaType;String[] produces() default {}_;the,producible,media,types,of,the,mapped,request,narrowing,the,primary,mapping,p,the,format,is,a,single,media,type,or,a,sequence,of,media,types,with,a,request,only,mapped,if,the,code,accept,matches,one,of,these,media,types,examples,pre,class,code,produces,text,plain,produces,text,plain,application,pre,expressions,can,be,negated,by,using,the,operator,as,in,text,plain,which,matches,all,requests,with,a,code,accept,other,than,text,plain,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,override,this,produces,restriction,see,org,springframework,http,media,type;string,produces,default
RequestMapping -> String[] produces() default {}_;1403791284;The producible media types of the mapped request, narrowing the primary mapping._<p>The format is a single media type or a sequence of media types,_with a request only mapped if the {@code Accept} matches one of these media types._Examples:_<pre class="code">_produces = "text/plain"_produces = {"text/plain", "application/*"}_</pre>_Expressions can be negated by using the "!" operator, as in "!text/plain", which matches_all requests with a {@code Accept} other than "text/plain"._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings override_this produces restriction._@see org.springframework.http.MediaType;String[] produces() default {}_;the,producible,media,types,of,the,mapped,request,narrowing,the,primary,mapping,p,the,format,is,a,single,media,type,or,a,sequence,of,media,types,with,a,request,only,mapped,if,the,code,accept,matches,one,of,these,media,types,examples,pre,class,code,produces,text,plain,produces,text,plain,application,pre,expressions,can,be,negated,by,using,the,operator,as,in,text,plain,which,matches,all,requests,with,a,code,accept,other,than,text,plain,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,override,this,produces,restriction,see,org,springframework,http,media,type;string,produces,default
RequestMapping -> String[] produces() default {}_;1411403899;The producible media types of the mapped request, narrowing the primary mapping._<p>The format is a single media type or a sequence of media types,_with a request only mapped if the {@code Accept} matches one of these media types._Examples:_<pre class="code">_produces = "text/plain"_produces = {"text/plain", "application/*"}_</pre>_Expressions can be negated by using the "!" operator, as in "!text/plain", which matches_all requests with a {@code Accept} other than "text/plain"._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings override_this produces restriction._@see org.springframework.http.MediaType;String[] produces() default {}_;the,producible,media,types,of,the,mapped,request,narrowing,the,primary,mapping,p,the,format,is,a,single,media,type,or,a,sequence,of,media,types,with,a,request,only,mapped,if,the,code,accept,matches,one,of,these,media,types,examples,pre,class,code,produces,text,plain,produces,text,plain,application,pre,expressions,can,be,negated,by,using,the,operator,as,in,text,plain,which,matches,all,requests,with,a,code,accept,other,than,text,plain,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,override,this,produces,restriction,see,org,springframework,http,media,type;string,produces,default
RequestMapping -> String[] produces() default {}_;1411728985;The producible media types of the mapped request, narrowing the primary mapping._<p>The format is a single media type or a sequence of media types,_with a request only mapped if the {@code Accept} matches one of these media types._Examples:_<pre class="code">_produces = "text/plain"_produces = {"text/plain", "application/*"}_</pre>_Expressions can be negated by using the "!" operator, as in "!text/plain", which matches_all requests with a {@code Accept} other than "text/plain"._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings override_this produces restriction._@see org.springframework.http.MediaType;String[] produces() default {}_;the,producible,media,types,of,the,mapped,request,narrowing,the,primary,mapping,p,the,format,is,a,single,media,type,or,a,sequence,of,media,types,with,a,request,only,mapped,if,the,code,accept,matches,one,of,these,media,types,examples,pre,class,code,produces,text,plain,produces,text,plain,application,pre,expressions,can,be,negated,by,using,the,operator,as,in,text,plain,which,matches,all,requests,with,a,code,accept,other,than,text,plain,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,override,this,produces,restriction,see,org,springframework,http,media,type;string,produces,default
RequestMapping -> String[] produces() default {}_;1414097580;The producible media types of the mapped request, narrowing the primary mapping._<p>The format is a single media type or a sequence of media types,_with a request only mapped if the {@code Accept} matches one of these media types._Examples:_<pre class="code">_produces = "text/plain"_produces = {"text/plain", "application/*"}_</pre>_Expressions can be negated by using the "!" operator, as in "!text/plain", which matches_all requests with a {@code Accept} other than "text/plain"._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings override_this produces restriction._@see org.springframework.http.MediaType;String[] produces() default {}_;the,producible,media,types,of,the,mapped,request,narrowing,the,primary,mapping,p,the,format,is,a,single,media,type,or,a,sequence,of,media,types,with,a,request,only,mapped,if,the,code,accept,matches,one,of,these,media,types,examples,pre,class,code,produces,text,plain,produces,text,plain,application,pre,expressions,can,be,negated,by,using,the,operator,as,in,text,plain,which,matches,all,requests,with,a,code,accept,other,than,text,plain,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,override,this,produces,restriction,see,org,springframework,http,media,type;string,produces,default
RequestMapping -> String[] produces() default {}_;1414155598;The producible media types of the mapped request, narrowing the primary mapping._<p>The format is a single media type or a sequence of media types,_with a request only mapped if the {@code Accept} matches one of these media types._Examples:_<pre class="code">_produces = "text/plain"_produces = {"text/plain", "application/*"}_</pre>_Expressions can be negated by using the "!" operator, as in "!text/plain", which matches_all requests with a {@code Accept} other than "text/plain"._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings override_this produces restriction._@see org.springframework.http.MediaType;String[] produces() default {}_;the,producible,media,types,of,the,mapped,request,narrowing,the,primary,mapping,p,the,format,is,a,single,media,type,or,a,sequence,of,media,types,with,a,request,only,mapped,if,the,code,accept,matches,one,of,these,media,types,examples,pre,class,code,produces,text,plain,produces,text,plain,application,pre,expressions,can,be,negated,by,using,the,operator,as,in,text,plain,which,matches,all,requests,with,a,code,accept,other,than,text,plain,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,override,this,produces,restriction,see,org,springframework,http,media,type;string,produces,default
RequestMapping -> String[] produces() default {}_;1422572109;The producible media types of the mapped request, narrowing the primary mapping._<p>The format is a single media type or a sequence of media types,_with a request only mapped if the {@code Accept} matches one of these media types._Examples:_<pre class="code">_produces = "text/plain"_produces = {"text/plain", "application/*"}_</pre>_Expressions can be negated by using the "!" operator, as in "!text/plain", which matches_all requests with a {@code Accept} other than "text/plain"._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings override_this produces restriction._@see org.springframework.http.MediaType;String[] produces() default {}_;the,producible,media,types,of,the,mapped,request,narrowing,the,primary,mapping,p,the,format,is,a,single,media,type,or,a,sequence,of,media,types,with,a,request,only,mapped,if,the,code,accept,matches,one,of,these,media,types,examples,pre,class,code,produces,text,plain,produces,text,plain,application,pre,expressions,can,be,negated,by,using,the,operator,as,in,text,plain,which,matches,all,requests,with,a,code,accept,other,than,text,plain,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,override,this,produces,restriction,see,org,springframework,http,media,type;string,produces,default
RequestMapping -> String[] produces() default {}_;1427139532;The producible media types of the mapped request, narrowing the primary mapping._<p>The format is a single media type or a sequence of media types,_with a request only mapped if the {@code Accept} matches one of these media types._Examples:_<pre class="code">_produces = "text/plain"_produces = {"text/plain", "application/*"}_</pre>_Expressions can be negated by using the "!" operator, as in "!text/plain", which matches_all requests with a {@code Accept} other than "text/plain"._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings override_this produces restriction._@see org.springframework.http.MediaType;String[] produces() default {}_;the,producible,media,types,of,the,mapped,request,narrowing,the,primary,mapping,p,the,format,is,a,single,media,type,or,a,sequence,of,media,types,with,a,request,only,mapped,if,the,code,accept,matches,one,of,these,media,types,examples,pre,class,code,produces,text,plain,produces,text,plain,application,pre,expressions,can,be,negated,by,using,the,operator,as,in,text,plain,which,matches,all,requests,with,a,code,accept,other,than,text,plain,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,override,this,produces,restriction,see,org,springframework,http,media,type;string,produces,default
RequestMapping -> String[] produces() default {}_;1429532371;The producible media types of the mapped request, narrowing the primary mapping._<p>The format is a single media type or a sequence of media types,_with a request only mapped if the {@code Accept} matches one of these media types._Examples:_<pre class="code">_produces = "text/plain"_produces = {"text/plain", "application/*"}_</pre>_Expressions can be negated by using the "!" operator, as in "!text/plain", which matches_all requests with a {@code Accept} other than "text/plain"._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings override_this produces restriction._@see org.springframework.http.MediaType;String[] produces() default {}_;the,producible,media,types,of,the,mapped,request,narrowing,the,primary,mapping,p,the,format,is,a,single,media,type,or,a,sequence,of,media,types,with,a,request,only,mapped,if,the,code,accept,matches,one,of,these,media,types,examples,pre,class,code,produces,text,plain,produces,text,plain,application,pre,expressions,can,be,negated,by,using,the,operator,as,in,text,plain,which,matches,all,requests,with,a,code,accept,other,than,text,plain,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,override,this,produces,restriction,see,org,springframework,http,media,type;string,produces,default
RequestMapping -> String[] produces() default {}_;1429886024;The producible media types of the mapped request, narrowing the primary mapping._<p>The format is a single media type or a sequence of media types,_with a request only mapped if the {@code Accept} matches one of these media types._Examples:_<pre class="code">_produces = "text/plain"_produces = {"text/plain", "application/*"}_</pre>_Expressions can be negated by using the "!" operator, as in "!text/plain", which matches_all requests with a {@code Accept} other than "text/plain"._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings override_this produces restriction._@see org.springframework.http.MediaType;String[] produces() default {}_;the,producible,media,types,of,the,mapped,request,narrowing,the,primary,mapping,p,the,format,is,a,single,media,type,or,a,sequence,of,media,types,with,a,request,only,mapped,if,the,code,accept,matches,one,of,these,media,types,examples,pre,class,code,produces,text,plain,produces,text,plain,application,pre,expressions,can,be,negated,by,using,the,operator,as,in,text,plain,which,matches,all,requests,with,a,code,accept,other,than,text,plain,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,override,this,produces,restriction,see,org,springframework,http,media,type;string,produces,default
RequestMapping -> String[] produces() default {}_;1432246071;The producible media types of the mapped request, narrowing the primary mapping._<p>The format is a single media type or a sequence of media types,_with a request only mapped if the {@code Accept} matches one of these media types._Examples:_<pre class="code">_produces = "text/plain"_produces = {"text/plain", "application/*"}_</pre>_Expressions can be negated by using the "!" operator, as in "!text/plain", which matches_all requests with a {@code Accept} other than "text/plain"._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings override_this produces restriction._@see org.springframework.http.MediaType;String[] produces() default {}_;the,producible,media,types,of,the,mapped,request,narrowing,the,primary,mapping,p,the,format,is,a,single,media,type,or,a,sequence,of,media,types,with,a,request,only,mapped,if,the,code,accept,matches,one,of,these,media,types,examples,pre,class,code,produces,text,plain,produces,text,plain,application,pre,expressions,can,be,negated,by,using,the,operator,as,in,text,plain,which,matches,all,requests,with,a,code,accept,other,than,text,plain,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,override,this,produces,restriction,see,org,springframework,http,media,type;string,produces,default
RequestMapping -> String[] produces() default {}_;1438176426;The producible media types of the mapped request, narrowing the primary mapping._<p>The format is a single media type or a sequence of media types,_with a request only mapped if the {@code Accept} matches one of these media types._Examples:_<pre class="code">_produces = "text/plain"_produces = {"text/plain", "application/*"}_</pre>_Expressions can be negated by using the "!" operator, as in "!text/plain", which matches_all requests with a {@code Accept} other than "text/plain"._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings override_this produces restriction._@see org.springframework.http.MediaType;String[] produces() default {}_;the,producible,media,types,of,the,mapped,request,narrowing,the,primary,mapping,p,the,format,is,a,single,media,type,or,a,sequence,of,media,types,with,a,request,only,mapped,if,the,code,accept,matches,one,of,these,media,types,examples,pre,class,code,produces,text,plain,produces,text,plain,application,pre,expressions,can,be,negated,by,using,the,operator,as,in,text,plain,which,matches,all,requests,with,a,code,accept,other,than,text,plain,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,override,this,produces,restriction,see,org,springframework,http,media,type;string,produces,default
RequestMapping -> String[] produces() default {}_;1444666351;The producible media types of the mapped request, narrowing the primary mapping._<p>The format is a single media type or a sequence of media types,_with a request only mapped if the {@code Accept} matches one of these media types._Examples:_<pre class="code">_produces = "text/plain"_produces = {"text/plain", "application/*"}_</pre>_Expressions can be negated by using the "!" operator, as in "!text/plain", which matches_all requests with a {@code Accept} other than "text/plain"._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings override_this produces restriction._@see org.springframework.http.MediaType;String[] produces() default {}_;the,producible,media,types,of,the,mapped,request,narrowing,the,primary,mapping,p,the,format,is,a,single,media,type,or,a,sequence,of,media,types,with,a,request,only,mapped,if,the,code,accept,matches,one,of,these,media,types,examples,pre,class,code,produces,text,plain,produces,text,plain,application,pre,expressions,can,be,negated,by,using,the,operator,as,in,text,plain,which,matches,all,requests,with,a,code,accept,other,than,text,plain,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,override,this,produces,restriction,see,org,springframework,http,media,type;string,produces,default
RequestMapping -> String[] produces() default {}_;1446446882;The producible media types of the mapped request, narrowing the primary mapping._<p>The format is a single media type or a sequence of media types,_with a request only mapped if the {@code Accept} matches one of these media types._Examples:_<pre class="code">_produces = "text/plain"_produces = {"text/plain", "application/*"}_produces = "application/json_ charset=UTF-8"_</pre>_<p>It affects the actual content type written, for example to produce a JSON response_with UTF-8 encoding, {@code "application/json_ charset=UTF-8"} should be used._<p>Expressions can be negated by using the "!" operator, as in "!text/plain", which matches_all requests with a {@code Accept} other than "text/plain"._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings override_this produces restriction._@see org.springframework.http.MediaType;String[] produces() default {}_;the,producible,media,types,of,the,mapped,request,narrowing,the,primary,mapping,p,the,format,is,a,single,media,type,or,a,sequence,of,media,types,with,a,request,only,mapped,if,the,code,accept,matches,one,of,these,media,types,examples,pre,class,code,produces,text,plain,produces,text,plain,application,produces,application,json,charset,utf,8,pre,p,it,affects,the,actual,content,type,written,for,example,to,produce,a,json,response,with,utf,8,encoding,code,application,json,charset,utf,8,should,be,used,p,expressions,can,be,negated,by,using,the,operator,as,in,text,plain,which,matches,all,requests,with,a,code,accept,other,than,text,plain,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,override,this,produces,restriction,see,org,springframework,http,media,type;string,produces,default
RequestMapping -> String[] produces() default {}_;1453844264;The producible media types of the mapped request, narrowing the primary mapping._<p>The format is a single media type or a sequence of media types,_with a request only mapped if the {@code Accept} matches one of these media types._Examples:_<pre class="code">_produces = "text/plain"_produces = {"text/plain", "application/*"}_produces = "application/json_ charset=UTF-8"_</pre>_<p>It affects the actual content type written, for example to produce a JSON response_with UTF-8 encoding, {@code "application/json_ charset=UTF-8"} should be used._<p>Expressions can be negated by using the "!" operator, as in "!text/plain", which matches_all requests with a {@code Accept} other than "text/plain"._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings override_this produces restriction._@see org.springframework.http.MediaType;String[] produces() default {}_;the,producible,media,types,of,the,mapped,request,narrowing,the,primary,mapping,p,the,format,is,a,single,media,type,or,a,sequence,of,media,types,with,a,request,only,mapped,if,the,code,accept,matches,one,of,these,media,types,examples,pre,class,code,produces,text,plain,produces,text,plain,application,produces,application,json,charset,utf,8,pre,p,it,affects,the,actual,content,type,written,for,example,to,produce,a,json,response,with,utf,8,encoding,code,application,json,charset,utf,8,should,be,used,p,expressions,can,be,negated,by,using,the,operator,as,in,text,plain,which,matches,all,requests,with,a,code,accept,other,than,text,plain,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,override,this,produces,restriction,see,org,springframework,http,media,type;string,produces,default
RequestMapping -> String[] produces() default {}_;1453844270;The producible media types of the mapped request, narrowing the primary mapping._<p>The format is a single media type or a sequence of media types,_with a request only mapped if the {@code Accept} matches one of these media types._Examples:_<pre class="code">_produces = "text/plain"_produces = {"text/plain", "application/*"}_produces = "application/json_ charset=UTF-8"_</pre>_<p>It affects the actual content type written, for example to produce a JSON response_with UTF-8 encoding, {@code "application/json_ charset=UTF-8"} should be used._<p>Expressions can be negated by using the "!" operator, as in "!text/plain", which matches_all requests with a {@code Accept} other than "text/plain"._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings override_this produces restriction._@see org.springframework.http.MediaType;String[] produces() default {}_;the,producible,media,types,of,the,mapped,request,narrowing,the,primary,mapping,p,the,format,is,a,single,media,type,or,a,sequence,of,media,types,with,a,request,only,mapped,if,the,code,accept,matches,one,of,these,media,types,examples,pre,class,code,produces,text,plain,produces,text,plain,application,produces,application,json,charset,utf,8,pre,p,it,affects,the,actual,content,type,written,for,example,to,produce,a,json,response,with,utf,8,encoding,code,application,json,charset,utf,8,should,be,used,p,expressions,can,be,negated,by,using,the,operator,as,in,text,plain,which,matches,all,requests,with,a,code,accept,other,than,text,plain,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,override,this,produces,restriction,see,org,springframework,http,media,type;string,produces,default
RequestMapping -> String[] produces() default {}_;1456522551;The producible media types of the mapped request, narrowing the primary mapping._<p>The format is a single media type or a sequence of media types,_with a request only mapped if the {@code Accept} matches one of these media types._Examples:_<pre class="code">_produces = "text/plain"_produces = {"text/plain", "application/*"}_produces = "application/json_ charset=UTF-8"_</pre>_<p>It affects the actual content type written, for example to produce a JSON response_with UTF-8 encoding, {@code "application/json_ charset=UTF-8"} should be used._<p>Expressions can be negated by using the "!" operator, as in "!text/plain", which matches_all requests with a {@code Accept} other than "text/plain"._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings override_this produces restriction._@see org.springframework.http.MediaType;String[] produces() default {}_;the,producible,media,types,of,the,mapped,request,narrowing,the,primary,mapping,p,the,format,is,a,single,media,type,or,a,sequence,of,media,types,with,a,request,only,mapped,if,the,code,accept,matches,one,of,these,media,types,examples,pre,class,code,produces,text,plain,produces,text,plain,application,produces,application,json,charset,utf,8,pre,p,it,affects,the,actual,content,type,written,for,example,to,produce,a,json,response,with,utf,8,encoding,code,application,json,charset,utf,8,should,be,used,p,expressions,can,be,negated,by,using,the,operator,as,in,text,plain,which,matches,all,requests,with,a,code,accept,other,than,text,plain,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,override,this,produces,restriction,see,org,springframework,http,media,type;string,produces,default
RequestMapping -> String[] produces() default {}_;1456766757;The producible media types of the mapped request, narrowing the primary mapping._<p>The format is a single media type or a sequence of media types,_with a request only mapped if the {@code Accept} matches one of these media types._Examples:_<pre class="code">_produces = "text/plain"_produces = {"text/plain", "application/*"}_produces = "application/json_ charset=UTF-8"_</pre>_<p>It affects the actual content type written, for example to produce a JSON response_with UTF-8 encoding, {@code "application/json_ charset=UTF-8"} should be used._<p>Expressions can be negated by using the "!" operator, as in "!text/plain", which matches_all requests with a {@code Accept} other than "text/plain"._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings override_this produces restriction._@see org.springframework.http.MediaType;String[] produces() default {}_;the,producible,media,types,of,the,mapped,request,narrowing,the,primary,mapping,p,the,format,is,a,single,media,type,or,a,sequence,of,media,types,with,a,request,only,mapped,if,the,code,accept,matches,one,of,these,media,types,examples,pre,class,code,produces,text,plain,produces,text,plain,application,produces,application,json,charset,utf,8,pre,p,it,affects,the,actual,content,type,written,for,example,to,produce,a,json,response,with,utf,8,encoding,code,application,json,charset,utf,8,should,be,used,p,expressions,can,be,negated,by,using,the,operator,as,in,text,plain,which,matches,all,requests,with,a,code,accept,other,than,text,plain,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,override,this,produces,restriction,see,org,springframework,http,media,type;string,produces,default
RequestMapping -> String[] produces() default {}_;1467668027;The producible media types of the mapped request, narrowing the primary mapping._<p>The format is a single media type or a sequence of media types,_with a request only mapped if the {@code Accept} matches one of these media types._Examples:_<pre class="code">_produces = "text/plain"_produces = {"text/plain", "application/*"}_produces = "application/json_ charset=UTF-8"_</pre>_<p>It affects the actual content type written, for example to produce a JSON response_with UTF-8 encoding, {@code "application/json_ charset=UTF-8"} should be used._<p>Expressions can be negated by using the "!" operator, as in "!text/plain", which matches_all requests with a {@code Accept} other than "text/plain"._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings override_this produces restriction._@see org.springframework.http.MediaType;String[] produces() default {}_;the,producible,media,types,of,the,mapped,request,narrowing,the,primary,mapping,p,the,format,is,a,single,media,type,or,a,sequence,of,media,types,with,a,request,only,mapped,if,the,code,accept,matches,one,of,these,media,types,examples,pre,class,code,produces,text,plain,produces,text,plain,application,produces,application,json,charset,utf,8,pre,p,it,affects,the,actual,content,type,written,for,example,to,produce,a,json,response,with,utf,8,encoding,code,application,json,charset,utf,8,should,be,used,p,expressions,can,be,negated,by,using,the,operator,as,in,text,plain,which,matches,all,requests,with,a,code,accept,other,than,text,plain,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,override,this,produces,restriction,see,org,springframework,http,media,type;string,produces,default
RequestMapping -> String[] produces() default {}_;1467677340;The producible media types of the mapped request, narrowing the primary mapping._<p>The format is a single media type or a sequence of media types,_with a request only mapped if the {@code Accept} matches one of these media types._Examples:_<pre class="code">_produces = "text/plain"_produces = {"text/plain", "application/*"}_produces = "application/json_ charset=UTF-8"_</pre>_<p>It affects the actual content type written, for example to produce a JSON response_with UTF-8 encoding, {@code "application/json_ charset=UTF-8"} should be used._<p>Expressions can be negated by using the "!" operator, as in "!text/plain", which matches_all requests with a {@code Accept} other than "text/plain"._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings override_this produces restriction._@see org.springframework.http.MediaType;String[] produces() default {}_;the,producible,media,types,of,the,mapped,request,narrowing,the,primary,mapping,p,the,format,is,a,single,media,type,or,a,sequence,of,media,types,with,a,request,only,mapped,if,the,code,accept,matches,one,of,these,media,types,examples,pre,class,code,produces,text,plain,produces,text,plain,application,produces,application,json,charset,utf,8,pre,p,it,affects,the,actual,content,type,written,for,example,to,produce,a,json,response,with,utf,8,encoding,code,application,json,charset,utf,8,should,be,used,p,expressions,can,be,negated,by,using,the,operator,as,in,text,plain,which,matches,all,requests,with,a,code,accept,other,than,text,plain,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,override,this,produces,restriction,see,org,springframework,http,media,type;string,produces,default
RequestMapping -> String[] produces() default {}_;1491341544;The producible media types of the mapped request, narrowing the primary mapping._<p>The format is a single media type or a sequence of media types,_with a request only mapped if the {@code Accept} matches one of these media types._Examples:_<pre class="code">_produces = "text/plain"_produces = {"text/plain", "application/*"}_produces = "application/json_ charset=UTF-8"_</pre>_<p>It affects the actual content type written, for example to produce a JSON response_with UTF-8 encoding, {@code "application/json_ charset=UTF-8"} should be used._<p>Expressions can be negated by using the "!" operator, as in "!text/plain", which matches_all requests with a {@code Accept} other than "text/plain"._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings override_this produces restriction._@see org.springframework.http.MediaType;String[] produces() default {}_;the,producible,media,types,of,the,mapped,request,narrowing,the,primary,mapping,p,the,format,is,a,single,media,type,or,a,sequence,of,media,types,with,a,request,only,mapped,if,the,code,accept,matches,one,of,these,media,types,examples,pre,class,code,produces,text,plain,produces,text,plain,application,produces,application,json,charset,utf,8,pre,p,it,affects,the,actual,content,type,written,for,example,to,produce,a,json,response,with,utf,8,encoding,code,application,json,charset,utf,8,should,be,used,p,expressions,can,be,negated,by,using,the,operator,as,in,text,plain,which,matches,all,requests,with,a,code,accept,other,than,text,plain,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,override,this,produces,restriction,see,org,springframework,http,media,type;string,produces,default
RequestMapping -> String[] produces() default {}_;1491599707;The producible media types of the mapped request, narrowing the primary mapping._<p>The format is a single media type or a sequence of media types,_with a request only mapped if the {@code Accept} matches one of these media types._Examples:_<pre class="code">_produces = "text/plain"_produces = {"text/plain", "application/*"}_produces = "application/json_ charset=UTF-8"_</pre>_<p>It affects the actual content type written, for example to produce a JSON response_with UTF-8 encoding, {@code "application/json_ charset=UTF-8"} should be used._<p>Expressions can be negated by using the "!" operator, as in "!text/plain", which matches_all requests with a {@code Accept} other than "text/plain"._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings override_this produces restriction._@see org.springframework.http.MediaType;String[] produces() default {}_;the,producible,media,types,of,the,mapped,request,narrowing,the,primary,mapping,p,the,format,is,a,single,media,type,or,a,sequence,of,media,types,with,a,request,only,mapped,if,the,code,accept,matches,one,of,these,media,types,examples,pre,class,code,produces,text,plain,produces,text,plain,application,produces,application,json,charset,utf,8,pre,p,it,affects,the,actual,content,type,written,for,example,to,produce,a,json,response,with,utf,8,encoding,code,application,json,charset,utf,8,should,be,used,p,expressions,can,be,negated,by,using,the,operator,as,in,text,plain,which,matches,all,requests,with,a,code,accept,other,than,text,plain,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,override,this,produces,restriction,see,org,springframework,http,media,type;string,produces,default
RequestMapping -> String[] produces() default {}_;1506454198;The producible media types of the mapped request, narrowing the primary mapping._<p>The format is a single media type or a sequence of media types,_with a request only mapped if the {@code Accept} matches one of these media types._Examples:_<pre class="code">_produces = "text/plain"_produces = {"text/plain", "application/*"}_produces = "application/json_ charset=UTF-8"_</pre>_<p>It affects the actual content type written, for example to produce a JSON response_with UTF-8 encoding, {@code "application/json_ charset=UTF-8"} should be used._<p>Expressions can be negated by using the "!" operator, as in "!text/plain", which matches_all requests with a {@code Accept} other than "text/plain"._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings override_this produces restriction._@see org.springframework.http.MediaType;String[] produces() default {}_;the,producible,media,types,of,the,mapped,request,narrowing,the,primary,mapping,p,the,format,is,a,single,media,type,or,a,sequence,of,media,types,with,a,request,only,mapped,if,the,code,accept,matches,one,of,these,media,types,examples,pre,class,code,produces,text,plain,produces,text,plain,application,produces,application,json,charset,utf,8,pre,p,it,affects,the,actual,content,type,written,for,example,to,produce,a,json,response,with,utf,8,encoding,code,application,json,charset,utf,8,should,be,used,p,expressions,can,be,negated,by,using,the,operator,as,in,text,plain,which,matches,all,requests,with,a,code,accept,other,than,text,plain,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,override,this,produces,restriction,see,org,springframework,http,media,type;string,produces,default
RequestMapping -> String[] produces() default {}_;1515421792;The producible media types of the mapped request, narrowing the primary mapping._<p>The format is a single media type or a sequence of media types,_with a request only mapped if the {@code Accept} matches one of these media types._Examples:_<pre class="code">_produces = "text/plain"_produces = {"text/plain", "application/*"}_produces = "application/json_ charset=UTF-8"_</pre>_<p>It affects the actual content type written, for example to produce a JSON response_with UTF-8 encoding, {@code "application/json_ charset=UTF-8"} should be used._<p>Expressions can be negated by using the "!" operator, as in "!text/plain", which matches_all requests with a {@code Accept} other than "text/plain"._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings override_this produces restriction._@see org.springframework.http.MediaType;String[] produces() default {}_;the,producible,media,types,of,the,mapped,request,narrowing,the,primary,mapping,p,the,format,is,a,single,media,type,or,a,sequence,of,media,types,with,a,request,only,mapped,if,the,code,accept,matches,one,of,these,media,types,examples,pre,class,code,produces,text,plain,produces,text,plain,application,produces,application,json,charset,utf,8,pre,p,it,affects,the,actual,content,type,written,for,example,to,produce,a,json,response,with,utf,8,encoding,code,application,json,charset,utf,8,should,be,used,p,expressions,can,be,negated,by,using,the,operator,as,in,text,plain,which,matches,all,requests,with,a,code,accept,other,than,text,plain,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,override,this,produces,restriction,see,org,springframework,http,media,type;string,produces,default
RequestMapping -> String[] produces() default {}_;1523268197;The producible media types of the mapped request, narrowing the primary mapping._<p>The format is a single media type or a sequence of media types,_with a request only mapped if the {@code Accept} matches one of these media types._Examples:_<pre class="code">_produces = "text/plain"_produces = {"text/plain", "application/*"}_produces = MediaType.APPLICATION_JSON_UTF8_VALUE_</pre>_<p>It affects the actual content type written, for example to produce a JSON response_with UTF-8 encoding, {@link org.springframework.http.MediaType#APPLICATION_JSON_UTF8_VALUE} should be used._<p>Expressions can be negated by using the "!" operator, as in "!text/plain", which matches_all requests with a {@code Accept} other than "text/plain"._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings override_this produces restriction._@see org.springframework.http.MediaType;String[] produces() default {}_;the,producible,media,types,of,the,mapped,request,narrowing,the,primary,mapping,p,the,format,is,a,single,media,type,or,a,sequence,of,media,types,with,a,request,only,mapped,if,the,code,accept,matches,one,of,these,media,types,examples,pre,class,code,produces,text,plain,produces,text,plain,application,produces,media,type,pre,p,it,affects,the,actual,content,type,written,for,example,to,produce,a,json,response,with,utf,8,encoding,link,org,springframework,http,media,type,should,be,used,p,expressions,can,be,negated,by,using,the,operator,as,in,text,plain,which,matches,all,requests,with,a,code,accept,other,than,text,plain,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,override,this,produces,restriction,see,org,springframework,http,media,type;string,produces,default
RequestMapping -> String[] produces() default {}_;1528795693;The producible media types of the mapped request, narrowing the primary mapping._<p>The format is a single media type or a sequence of media types,_with a request only mapped if the {@code Accept} matches one of these media types._Examples:_<pre class="code">_produces = "text/plain"_produces = {"text/plain", "application/*"}_produces = MediaType.APPLICATION_JSON_UTF8_VALUE_</pre>_<p>It affects the actual content type written, for example to produce a JSON response_with UTF-8 encoding, {@link org.springframework.http.MediaType#APPLICATION_JSON_UTF8_VALUE} should be used._<p>Expressions can be negated by using the "!" operator, as in "!text/plain", which matches_all requests with a {@code Accept} other than "text/plain"._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings override_this produces restriction._@see org.springframework.http.MediaType;String[] produces() default {}_;the,producible,media,types,of,the,mapped,request,narrowing,the,primary,mapping,p,the,format,is,a,single,media,type,or,a,sequence,of,media,types,with,a,request,only,mapped,if,the,code,accept,matches,one,of,these,media,types,examples,pre,class,code,produces,text,plain,produces,text,plain,application,produces,media,type,pre,p,it,affects,the,actual,content,type,written,for,example,to,produce,a,json,response,with,utf,8,encoding,link,org,springframework,http,media,type,should,be,used,p,expressions,can,be,negated,by,using,the,operator,as,in,text,plain,which,matches,all,requests,with,a,code,accept,other,than,text,plain,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,override,this,produces,restriction,see,org,springframework,http,media,type;string,produces,default
RequestMapping -> String[] value() default {}_;1328020251;The primary mapping expressed by this annotation._<p>In a Servlet environment: the path mapping URIs (e.g. "/myPath.do")._Ant-style path patterns are also supported (e.g. "/myPath/*.do")._At the method level, relative paths (e.g. "edit.do") are supported_within the primary mapping expressed at the type level._<p>In a Portlet environment: the mapped portlet modes_(i.e. "EDIT", "VIEW", "HELP" or any custom modes)._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this primary mapping, narrowing it for a specific handler method._<p>In case of Servlet-based handler methods, the method names are_taken into account for narrowing if no path was specified explicitly,_according to the specified_{@link org.springframework.web.servlet.mvc.multiaction.MethodNameResolver}_(by default an_{@link org.springframework.web.servlet.mvc.multiaction.InternalPathMethodNameResolver})._Note that this only applies in case of ambiguous annotation mappings_that do not specify a path mapping explicitly. In other words,_the method name is only used for narrowing among a set of matching_methods_ it does not constitute a primary path mapping itself._<p>If you have a single default method (without explicit path mapping),_then all requests without a more specific mapped method found will_be dispatched to it. If you have multiple such default methods, then_the method name will be taken into account for choosing between them.;String[] value() default {}_;the,primary,mapping,expressed,by,this,annotation,p,in,a,servlet,environment,the,path,mapping,uris,e,g,my,path,do,ant,style,path,patterns,are,also,supported,e,g,my,path,do,at,the,method,level,relative,paths,e,g,edit,do,are,supported,within,the,primary,mapping,expressed,at,the,type,level,p,in,a,portlet,environment,the,mapped,portlet,modes,i,e,edit,view,help,or,any,custom,modes,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,primary,mapping,narrowing,it,for,a,specific,handler,method,p,in,case,of,servlet,based,handler,methods,the,method,names,are,taken,into,account,for,narrowing,if,no,path,was,specified,explicitly,according,to,the,specified,link,org,springframework,web,servlet,mvc,multiaction,method,name,resolver,by,default,an,link,org,springframework,web,servlet,mvc,multiaction,internal,path,method,name,resolver,note,that,this,only,applies,in,case,of,ambiguous,annotation,mappings,that,do,not,specify,a,path,mapping,explicitly,in,other,words,the,method,name,is,only,used,for,narrowing,among,a,set,of,matching,methods,it,does,not,constitute,a,primary,path,mapping,itself,p,if,you,have,a,single,default,method,without,explicit,path,mapping,then,all,requests,without,a,more,specific,mapped,method,found,will,be,dispatched,to,it,if,you,have,multiple,such,default,methods,then,the,method,name,will,be,taken,into,account,for,choosing,between,them;string,value,default
RequestMapping -> String[] value() default {}_;1329142650;The primary mapping expressed by this annotation._<p>In a Servlet environment: the path mapping URIs (e.g. "/myPath.do")._Ant-style path patterns are also supported (e.g. "/myPath/*.do")._At the method level, relative paths (e.g. "edit.do") are supported_within the primary mapping expressed at the type level._<p>In a Portlet environment: the mapped portlet modes_(i.e. "EDIT", "VIEW", "HELP" or any custom modes)._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this primary mapping, narrowing it for a specific handler method.;String[] value() default {}_;the,primary,mapping,expressed,by,this,annotation,p,in,a,servlet,environment,the,path,mapping,uris,e,g,my,path,do,ant,style,path,patterns,are,also,supported,e,g,my,path,do,at,the,method,level,relative,paths,e,g,edit,do,are,supported,within,the,primary,mapping,expressed,at,the,type,level,p,in,a,portlet,environment,the,mapped,portlet,modes,i,e,edit,view,help,or,any,custom,modes,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,primary,mapping,narrowing,it,for,a,specific,handler,method;string,value,default
RequestMapping -> String[] value() default {}_;1334781369;The primary mapping expressed by this annotation._<p>In a Servlet environment: the path mapping URIs (e.g. "/myPath.do")._Ant-style path patterns are also supported (e.g. "/myPath/*.do")._At the method level, relative paths (e.g. "edit.do") are supported_within the primary mapping expressed at the type level._<p>In a Portlet environment: the mapped portlet modes_(i.e. "EDIT", "VIEW", "HELP" or any custom modes)._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this primary mapping, narrowing it for a specific handler method.;String[] value() default {}_;the,primary,mapping,expressed,by,this,annotation,p,in,a,servlet,environment,the,path,mapping,uris,e,g,my,path,do,ant,style,path,patterns,are,also,supported,e,g,my,path,do,at,the,method,level,relative,paths,e,g,edit,do,are,supported,within,the,primary,mapping,expressed,at,the,type,level,p,in,a,portlet,environment,the,mapped,portlet,modes,i,e,edit,view,help,or,any,custom,modes,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,primary,mapping,narrowing,it,for,a,specific,handler,method;string,value,default
RequestMapping -> String[] value() default {}_;1335774711;The primary mapping expressed by this annotation._<p>In a Servlet environment: the path mapping URIs (e.g. "/myPath.do")._Ant-style path patterns are also supported (e.g. "/myPath/*.do")._At the method level, relative paths (e.g. "edit.do") are supported_within the primary mapping expressed at the type level._<p>In a Portlet environment: the mapped portlet modes_(i.e. "EDIT", "VIEW", "HELP" or any custom modes)._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this primary mapping, narrowing it for a specific handler method.;String[] value() default {}_;the,primary,mapping,expressed,by,this,annotation,p,in,a,servlet,environment,the,path,mapping,uris,e,g,my,path,do,ant,style,path,patterns,are,also,supported,e,g,my,path,do,at,the,method,level,relative,paths,e,g,edit,do,are,supported,within,the,primary,mapping,expressed,at,the,type,level,p,in,a,portlet,environment,the,mapped,portlet,modes,i,e,edit,view,help,or,any,custom,modes,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,primary,mapping,narrowing,it,for,a,specific,handler,method;string,value,default
RequestMapping -> String[] value() default {}_;1337025676;The primary mapping expressed by this annotation._<p>In a Servlet environment: the path mapping URIs (e.g. "/myPath.do")._Ant-style path patterns are also supported (e.g. "/myPath/*.do")._At the method level, relative paths (e.g. "edit.do") are supported_within the primary mapping expressed at the type level._<p>In a Portlet environment: the mapped portlet modes_(i.e. "EDIT", "VIEW", "HELP" or any custom modes)._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this primary mapping, narrowing it for a specific handler method.;String[] value() default {}_;the,primary,mapping,expressed,by,this,annotation,p,in,a,servlet,environment,the,path,mapping,uris,e,g,my,path,do,ant,style,path,patterns,are,also,supported,e,g,my,path,do,at,the,method,level,relative,paths,e,g,edit,do,are,supported,within,the,primary,mapping,expressed,at,the,type,level,p,in,a,portlet,environment,the,mapped,portlet,modes,i,e,edit,view,help,or,any,custom,modes,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,primary,mapping,narrowing,it,for,a,specific,handler,method;string,value,default
RequestMapping -> String[] value() default {}_;1340018565;The primary mapping expressed by this annotation._<p>In a Servlet environment: the path mapping URIs (e.g. "/myPath.do")._Ant-style path patterns are also supported (e.g. "/myPath/*.do")._At the method level, relative paths (e.g. "edit.do") are supported_within the primary mapping expressed at the type level._<p>In a Portlet environment: the mapped portlet modes_(i.e. "EDIT", "VIEW", "HELP" or any custom modes)._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this primary mapping, narrowing it for a specific handler method.;String[] value() default {}_;the,primary,mapping,expressed,by,this,annotation,p,in,a,servlet,environment,the,path,mapping,uris,e,g,my,path,do,ant,style,path,patterns,are,also,supported,e,g,my,path,do,at,the,method,level,relative,paths,e,g,edit,do,are,supported,within,the,primary,mapping,expressed,at,the,type,level,p,in,a,portlet,environment,the,mapped,portlet,modes,i,e,edit,view,help,or,any,custom,modes,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,primary,mapping,narrowing,it,for,a,specific,handler,method;string,value,default
RequestMapping -> String[] value() default {}_;1340398642;The primary mapping expressed by this annotation._<p>In a Servlet environment: the path mapping URIs (e.g. "/myPath.do")._Ant-style path patterns are also supported (e.g. "/myPath/*.do")._At the method level, relative paths (e.g. "edit.do") are supported_within the primary mapping expressed at the type level._<p>In a Portlet environment: the mapped portlet modes_(i.e. "EDIT", "VIEW", "HELP" or any custom modes)._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this primary mapping, narrowing it for a specific handler method.;String[] value() default {}_;the,primary,mapping,expressed,by,this,annotation,p,in,a,servlet,environment,the,path,mapping,uris,e,g,my,path,do,ant,style,path,patterns,are,also,supported,e,g,my,path,do,at,the,method,level,relative,paths,e,g,edit,do,are,supported,within,the,primary,mapping,expressed,at,the,type,level,p,in,a,portlet,environment,the,mapped,portlet,modes,i,e,edit,view,help,or,any,custom,modes,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,primary,mapping,narrowing,it,for,a,specific,handler,method;string,value,default
RequestMapping -> String[] value() default {}_;1345574045;The primary mapping expressed by this annotation._<p>In a Servlet environment: the path mapping URIs (e.g. "/myPath.do")._Ant-style path patterns are also supported (e.g. "/myPath/*.do")._At the method level, relative paths (e.g. "edit.do") are supported_within the primary mapping expressed at the type level._<p>In a Portlet environment: the mapped portlet modes_(i.e. "EDIT", "VIEW", "HELP" or any custom modes)._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this primary mapping, narrowing it for a specific handler method.;String[] value() default {}_;the,primary,mapping,expressed,by,this,annotation,p,in,a,servlet,environment,the,path,mapping,uris,e,g,my,path,do,ant,style,path,patterns,are,also,supported,e,g,my,path,do,at,the,method,level,relative,paths,e,g,edit,do,are,supported,within,the,primary,mapping,expressed,at,the,type,level,p,in,a,portlet,environment,the,mapped,portlet,modes,i,e,edit,view,help,or,any,custom,modes,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,primary,mapping,narrowing,it,for,a,specific,handler,method;string,value,default
RequestMapping -> String[] value() default {}_;1346174472;The primary mapping expressed by this annotation._<p>In a Servlet environment: the path mapping URIs (e.g. "/myPath.do")._Ant-style path patterns are also supported (e.g. "/myPath/*.do")._At the method level, relative paths (e.g. "edit.do") are supported_within the primary mapping expressed at the type level._<p>In a Portlet environment: the mapped portlet modes_(i.e. "EDIT", "VIEW", "HELP" or any custom modes)._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this primary mapping, narrowing it for a specific handler method.;String[] value() default {}_;the,primary,mapping,expressed,by,this,annotation,p,in,a,servlet,environment,the,path,mapping,uris,e,g,my,path,do,ant,style,path,patterns,are,also,supported,e,g,my,path,do,at,the,method,level,relative,paths,e,g,edit,do,are,supported,within,the,primary,mapping,expressed,at,the,type,level,p,in,a,portlet,environment,the,mapped,portlet,modes,i,e,edit,view,help,or,any,custom,modes,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,primary,mapping,narrowing,it,for,a,specific,handler,method;string,value,default
RequestMapping -> String[] value() default {}_;1355313310;The primary mapping expressed by this annotation._<p>In a Servlet environment: the path mapping URIs (e.g. "/myPath.do")._Ant-style path patterns are also supported (e.g. "/myPath/*.do")._At the method level, relative paths (e.g. "edit.do") are supported_within the primary mapping expressed at the type level._<p>In a Portlet environment: the mapped portlet modes_(i.e. "EDIT", "VIEW", "HELP" or any custom modes)._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this primary mapping, narrowing it for a specific handler method.;String[] value() default {}_;the,primary,mapping,expressed,by,this,annotation,p,in,a,servlet,environment,the,path,mapping,uris,e,g,my,path,do,ant,style,path,patterns,are,also,supported,e,g,my,path,do,at,the,method,level,relative,paths,e,g,edit,do,are,supported,within,the,primary,mapping,expressed,at,the,type,level,p,in,a,portlet,environment,the,mapped,portlet,modes,i,e,edit,view,help,or,any,custom,modes,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,primary,mapping,narrowing,it,for,a,specific,handler,method;string,value,default
RequestMapping -> String[] value() default {}_;1356735495;The primary mapping expressed by this annotation._<p>In a Servlet environment: the path mapping URIs (e.g. "/myPath.do")._Ant-style path patterns are also supported (e.g. "/myPath/*.do")._At the method level, relative paths (e.g. "edit.do") are supported_within the primary mapping expressed at the type level._<p>In a Portlet environment: the mapped portlet modes_(i.e. "EDIT", "VIEW", "HELP" or any custom modes)._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this primary mapping, narrowing it for a specific handler method.;String[] value() default {}_;the,primary,mapping,expressed,by,this,annotation,p,in,a,servlet,environment,the,path,mapping,uris,e,g,my,path,do,ant,style,path,patterns,are,also,supported,e,g,my,path,do,at,the,method,level,relative,paths,e,g,edit,do,are,supported,within,the,primary,mapping,expressed,at,the,type,level,p,in,a,portlet,environment,the,mapped,portlet,modes,i,e,edit,view,help,or,any,custom,modes,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,primary,mapping,narrowing,it,for,a,specific,handler,method;string,value,default
RequestMapping -> String[] value() default {}_;1362408075;The primary mapping expressed by this annotation._<p>In a Servlet environment: the path mapping URIs (e.g. "/myPath.do")._Ant-style path patterns are also supported (e.g. "/myPath/*.do")._At the method level, relative paths (e.g. "edit.do") are supported_within the primary mapping expressed at the type level._Path mapping URIs may contain placeholders (e.g. "/${connect}")_<p>In a Portlet environment: the mapped portlet modes_(i.e. "EDIT", "VIEW", "HELP" or any custom modes)._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this primary mapping, narrowing it for a specific handler method.;String[] value() default {}_;the,primary,mapping,expressed,by,this,annotation,p,in,a,servlet,environment,the,path,mapping,uris,e,g,my,path,do,ant,style,path,patterns,are,also,supported,e,g,my,path,do,at,the,method,level,relative,paths,e,g,edit,do,are,supported,within,the,primary,mapping,expressed,at,the,type,level,path,mapping,uris,may,contain,placeholders,e,g,connect,p,in,a,portlet,environment,the,mapped,portlet,modes,i,e,edit,view,help,or,any,custom,modes,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,primary,mapping,narrowing,it,for,a,specific,handler,method;string,value,default
RequestMapping -> String[] value() default {}_;1367955086;The primary mapping expressed by this annotation._<p>In a Servlet environment: the path mapping URIs (e.g. "/myPath.do")._Ant-style path patterns are also supported (e.g. "/myPath/*.do")._At the method level, relative paths (e.g. "edit.do") are supported_within the primary mapping expressed at the type level._Path mapping URIs may contain placeholders (e.g. "/${connect}")_<p>In a Portlet environment: the mapped portlet modes_(i.e. "EDIT", "VIEW", "HELP" or any custom modes)._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this primary mapping, narrowing it for a specific handler method.;String[] value() default {}_;the,primary,mapping,expressed,by,this,annotation,p,in,a,servlet,environment,the,path,mapping,uris,e,g,my,path,do,ant,style,path,patterns,are,also,supported,e,g,my,path,do,at,the,method,level,relative,paths,e,g,edit,do,are,supported,within,the,primary,mapping,expressed,at,the,type,level,path,mapping,uris,may,contain,placeholders,e,g,connect,p,in,a,portlet,environment,the,mapped,portlet,modes,i,e,edit,view,help,or,any,custom,modes,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,primary,mapping,narrowing,it,for,a,specific,handler,method;string,value,default
RequestMapping -> String[] value() default {}_;1372363092;The primary mapping expressed by this annotation._<p>In a Servlet environment: the path mapping URIs (e.g. "/myPath.do")._Ant-style path patterns are also supported (e.g. "/myPath/*.do")._At the method level, relative paths (e.g. "edit.do") are supported_within the primary mapping expressed at the type level._Path mapping URIs may contain placeholders (e.g. "/${connect}")_<p>In a Portlet environment: the mapped portlet modes_(i.e. "EDIT", "VIEW", "HELP" or any custom modes)._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this primary mapping, narrowing it for a specific handler method.;String[] value() default {}_;the,primary,mapping,expressed,by,this,annotation,p,in,a,servlet,environment,the,path,mapping,uris,e,g,my,path,do,ant,style,path,patterns,are,also,supported,e,g,my,path,do,at,the,method,level,relative,paths,e,g,edit,do,are,supported,within,the,primary,mapping,expressed,at,the,type,level,path,mapping,uris,may,contain,placeholders,e,g,connect,p,in,a,portlet,environment,the,mapped,portlet,modes,i,e,edit,view,help,or,any,custom,modes,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,primary,mapping,narrowing,it,for,a,specific,handler,method;string,value,default
RequestMapping -> String[] value() default {}_;1385501137;The primary mapping expressed by this annotation._<p>In a Servlet environment: the path mapping URIs (e.g. "/myPath.do")._Ant-style path patterns are also supported (e.g. "/myPath/*.do")._At the method level, relative paths (e.g. "edit.do") are supported_within the primary mapping expressed at the type level._Path mapping URIs may contain placeholders (e.g. "/${connect}")_<p>In a Portlet environment: the mapped portlet modes_(i.e. "EDIT", "VIEW", "HELP" or any custom modes)._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this primary mapping, narrowing it for a specific handler method.;String[] value() default {}_;the,primary,mapping,expressed,by,this,annotation,p,in,a,servlet,environment,the,path,mapping,uris,e,g,my,path,do,ant,style,path,patterns,are,also,supported,e,g,my,path,do,at,the,method,level,relative,paths,e,g,edit,do,are,supported,within,the,primary,mapping,expressed,at,the,type,level,path,mapping,uris,may,contain,placeholders,e,g,connect,p,in,a,portlet,environment,the,mapped,portlet,modes,i,e,edit,view,help,or,any,custom,modes,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,primary,mapping,narrowing,it,for,a,specific,handler,method;string,value,default
RequestMapping -> String[] value() default {}_;1390272537;The primary mapping expressed by this annotation._<p>In a Servlet environment: the path mapping URIs (e.g. "/myPath.do")._Ant-style path patterns are also supported (e.g. "/myPath/*.do")._At the method level, relative paths (e.g. "edit.do") are supported_within the primary mapping expressed at the type level._Path mapping URIs may contain placeholders (e.g. "/${connect}")_<p>In a Portlet environment: the mapped portlet modes_(i.e. "EDIT", "VIEW", "HELP" or any custom modes)._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this primary mapping, narrowing it for a specific handler method.;String[] value() default {}_;the,primary,mapping,expressed,by,this,annotation,p,in,a,servlet,environment,the,path,mapping,uris,e,g,my,path,do,ant,style,path,patterns,are,also,supported,e,g,my,path,do,at,the,method,level,relative,paths,e,g,edit,do,are,supported,within,the,primary,mapping,expressed,at,the,type,level,path,mapping,uris,may,contain,placeholders,e,g,connect,p,in,a,portlet,environment,the,mapped,portlet,modes,i,e,edit,view,help,or,any,custom,modes,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,primary,mapping,narrowing,it,for,a,specific,handler,method;string,value,default
RequestMapping -> String[] value() default {}_;1392311784;The primary mapping expressed by this annotation._<p>In a Servlet environment: the path mapping URIs (e.g. "/myPath.do")._Ant-style path patterns are also supported (e.g. "/myPath/*.do")._At the method level, relative paths (e.g. "edit.do") are supported_within the primary mapping expressed at the type level._Path mapping URIs may contain placeholders (e.g. "/${connect}")_<p>In a Portlet environment: the mapped portlet modes_(i.e. "EDIT", "VIEW", "HELP" or any custom modes)._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this primary mapping, narrowing it for a specific handler method.;String[] value() default {}_;the,primary,mapping,expressed,by,this,annotation,p,in,a,servlet,environment,the,path,mapping,uris,e,g,my,path,do,ant,style,path,patterns,are,also,supported,e,g,my,path,do,at,the,method,level,relative,paths,e,g,edit,do,are,supported,within,the,primary,mapping,expressed,at,the,type,level,path,mapping,uris,may,contain,placeholders,e,g,connect,p,in,a,portlet,environment,the,mapped,portlet,modes,i,e,edit,view,help,or,any,custom,modes,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,primary,mapping,narrowing,it,for,a,specific,handler,method;string,value,default
RequestMapping -> String[] value() default {}_;1398737597;The primary mapping expressed by this annotation._<p>In a Servlet environment: the path mapping URIs (e.g. "/myPath.do")._Ant-style path patterns are also supported (e.g. "/myPath/*.do")._At the method level, relative paths (e.g. "edit.do") are supported_within the primary mapping expressed at the type level._Path mapping URIs may contain placeholders (e.g. "/${connect}")_<p>In a Portlet environment: the mapped portlet modes_(i.e. "EDIT", "VIEW", "HELP" or any custom modes)._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this primary mapping, narrowing it for a specific handler method.;String[] value() default {}_;the,primary,mapping,expressed,by,this,annotation,p,in,a,servlet,environment,the,path,mapping,uris,e,g,my,path,do,ant,style,path,patterns,are,also,supported,e,g,my,path,do,at,the,method,level,relative,paths,e,g,edit,do,are,supported,within,the,primary,mapping,expressed,at,the,type,level,path,mapping,uris,may,contain,placeholders,e,g,connect,p,in,a,portlet,environment,the,mapped,portlet,modes,i,e,edit,view,help,or,any,custom,modes,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,primary,mapping,narrowing,it,for,a,specific,handler,method;string,value,default
RequestMapping -> String[] value() default {}_;1398961739;The primary mapping expressed by this annotation._<p>In a Servlet environment: the path mapping URIs (e.g. "/myPath.do")._Ant-style path patterns are also supported (e.g. "/myPath/*.do")._At the method level, relative paths (e.g. "edit.do") are supported_within the primary mapping expressed at the type level._Path mapping URIs may contain placeholders (e.g. "/${connect}")_<p>In a Portlet environment: the mapped portlet modes_(i.e. "EDIT", "VIEW", "HELP" or any custom modes)._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this primary mapping, narrowing it for a specific handler method.;String[] value() default {}_;the,primary,mapping,expressed,by,this,annotation,p,in,a,servlet,environment,the,path,mapping,uris,e,g,my,path,do,ant,style,path,patterns,are,also,supported,e,g,my,path,do,at,the,method,level,relative,paths,e,g,edit,do,are,supported,within,the,primary,mapping,expressed,at,the,type,level,path,mapping,uris,may,contain,placeholders,e,g,connect,p,in,a,portlet,environment,the,mapped,portlet,modes,i,e,edit,view,help,or,any,custom,modes,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,primary,mapping,narrowing,it,for,a,specific,handler,method;string,value,default
RequestMapping -> String[] value() default {}_;1399404473;The primary mapping expressed by this annotation._<p>In a Servlet environment: the path mapping URIs (e.g. "/myPath.do")._Ant-style path patterns are also supported (e.g. "/myPath/*.do")._At the method level, relative paths (e.g. "edit.do") are supported_within the primary mapping expressed at the type level._Path mapping URIs may contain placeholders (e.g. "/${connect}")_<p>In a Portlet environment: the mapped portlet modes_(i.e. "EDIT", "VIEW", "HELP" or any custom modes)._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this primary mapping, narrowing it for a specific handler method.;String[] value() default {}_;the,primary,mapping,expressed,by,this,annotation,p,in,a,servlet,environment,the,path,mapping,uris,e,g,my,path,do,ant,style,path,patterns,are,also,supported,e,g,my,path,do,at,the,method,level,relative,paths,e,g,edit,do,are,supported,within,the,primary,mapping,expressed,at,the,type,level,path,mapping,uris,may,contain,placeholders,e,g,connect,p,in,a,portlet,environment,the,mapped,portlet,modes,i,e,edit,view,help,or,any,custom,modes,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,primary,mapping,narrowing,it,for,a,specific,handler,method;string,value,default
RequestMapping -> String[] value() default {}_;1403791284;The primary mapping expressed by this annotation._<p>In a Servlet environment: the path mapping URIs (e.g. "/myPath.do")._Ant-style path patterns are also supported (e.g. "/myPath/*.do")._At the method level, relative paths (e.g. "edit.do") are supported_within the primary mapping expressed at the type level._Path mapping URIs may contain placeholders (e.g. "/${connect}")_<p>In a Portlet environment: the mapped portlet modes_(i.e. "EDIT", "VIEW", "HELP" or any custom modes)._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this primary mapping, narrowing it for a specific handler method.;String[] value() default {}_;the,primary,mapping,expressed,by,this,annotation,p,in,a,servlet,environment,the,path,mapping,uris,e,g,my,path,do,ant,style,path,patterns,are,also,supported,e,g,my,path,do,at,the,method,level,relative,paths,e,g,edit,do,are,supported,within,the,primary,mapping,expressed,at,the,type,level,path,mapping,uris,may,contain,placeholders,e,g,connect,p,in,a,portlet,environment,the,mapped,portlet,modes,i,e,edit,view,help,or,any,custom,modes,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,primary,mapping,narrowing,it,for,a,specific,handler,method;string,value,default
RequestMapping -> String[] value() default {}_;1411403899;The primary mapping expressed by this annotation._<p>In a Servlet environment: the path mapping URIs (e.g. "/myPath.do")._Ant-style path patterns are also supported (e.g. "/myPath/*.do")._At the method level, relative paths (e.g. "edit.do") are supported_within the primary mapping expressed at the type level._Path mapping URIs may contain placeholders (e.g. "/${connect}")_<p>In a Portlet environment: the mapped portlet modes_(i.e. "EDIT", "VIEW", "HELP" or any custom modes)._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this primary mapping, narrowing it for a specific handler method._@see org.springframework.web.bind.annotation.ValueConstants.DEFAULT_NONE;String[] value() default {}_;the,primary,mapping,expressed,by,this,annotation,p,in,a,servlet,environment,the,path,mapping,uris,e,g,my,path,do,ant,style,path,patterns,are,also,supported,e,g,my,path,do,at,the,method,level,relative,paths,e,g,edit,do,are,supported,within,the,primary,mapping,expressed,at,the,type,level,path,mapping,uris,may,contain,placeholders,e,g,connect,p,in,a,portlet,environment,the,mapped,portlet,modes,i,e,edit,view,help,or,any,custom,modes,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,primary,mapping,narrowing,it,for,a,specific,handler,method,see,org,springframework,web,bind,annotation,value,constants;string,value,default
RequestMapping -> String[] value() default {}_;1411728985;The primary mapping expressed by this annotation._<p>In a Servlet environment: the path mapping URIs (e.g. "/myPath.do")._Ant-style path patterns are also supported (e.g. "/myPath/*.do")._At the method level, relative paths (e.g. "edit.do") are supported_within the primary mapping expressed at the type level._Path mapping URIs may contain placeholders (e.g. "/${connect}")_<p>In a Portlet environment: the mapped portlet modes_(i.e. "EDIT", "VIEW", "HELP" or any custom modes)._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this primary mapping, narrowing it for a specific handler method._@see org.springframework.web.bind.annotation.ValueConstants#DEFAULT_NONE;String[] value() default {}_;the,primary,mapping,expressed,by,this,annotation,p,in,a,servlet,environment,the,path,mapping,uris,e,g,my,path,do,ant,style,path,patterns,are,also,supported,e,g,my,path,do,at,the,method,level,relative,paths,e,g,edit,do,are,supported,within,the,primary,mapping,expressed,at,the,type,level,path,mapping,uris,may,contain,placeholders,e,g,connect,p,in,a,portlet,environment,the,mapped,portlet,modes,i,e,edit,view,help,or,any,custom,modes,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,primary,mapping,narrowing,it,for,a,specific,handler,method,see,org,springframework,web,bind,annotation,value,constants;string,value,default
RequestMapping -> String[] value() default {}_;1414097580;The primary mapping expressed by this annotation._<p>In a Servlet environment: the path mapping URIs (e.g. "/myPath.do")._Ant-style path patterns are also supported (e.g. "/myPath/*.do")._At the method level, relative paths (e.g. "edit.do") are supported_within the primary mapping expressed at the type level._Path mapping URIs may contain placeholders (e.g. "/${connect}")_<p>In a Portlet environment: the mapped portlet modes_(i.e. "EDIT", "VIEW", "HELP" or any custom modes)._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this primary mapping, narrowing it for a specific handler method._@see org.springframework.web.bind.annotation.ValueConstants#DEFAULT_NONE;String[] value() default {}_;the,primary,mapping,expressed,by,this,annotation,p,in,a,servlet,environment,the,path,mapping,uris,e,g,my,path,do,ant,style,path,patterns,are,also,supported,e,g,my,path,do,at,the,method,level,relative,paths,e,g,edit,do,are,supported,within,the,primary,mapping,expressed,at,the,type,level,path,mapping,uris,may,contain,placeholders,e,g,connect,p,in,a,portlet,environment,the,mapped,portlet,modes,i,e,edit,view,help,or,any,custom,modes,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,primary,mapping,narrowing,it,for,a,specific,handler,method,see,org,springframework,web,bind,annotation,value,constants;string,value,default
RequestMapping -> String[] value() default {}_;1414155598;The primary mapping expressed by this annotation._<p>In a Servlet environment: the path mapping URIs (e.g. "/myPath.do")._Ant-style path patterns are also supported (e.g. "/myPath/*.do")._At the method level, relative paths (e.g. "edit.do") are supported_within the primary mapping expressed at the type level._Path mapping URIs may contain placeholders (e.g. "/${connect}")_<p>In a Portlet environment: the mapped portlet modes_(i.e. "EDIT", "VIEW", "HELP" or any custom modes)._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this primary mapping, narrowing it for a specific handler method._@see org.springframework.web.bind.annotation.ValueConstants#DEFAULT_NONE;String[] value() default {}_;the,primary,mapping,expressed,by,this,annotation,p,in,a,servlet,environment,the,path,mapping,uris,e,g,my,path,do,ant,style,path,patterns,are,also,supported,e,g,my,path,do,at,the,method,level,relative,paths,e,g,edit,do,are,supported,within,the,primary,mapping,expressed,at,the,type,level,path,mapping,uris,may,contain,placeholders,e,g,connect,p,in,a,portlet,environment,the,mapped,portlet,modes,i,e,edit,view,help,or,any,custom,modes,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,primary,mapping,narrowing,it,for,a,specific,handler,method,see,org,springframework,web,bind,annotation,value,constants;string,value,default
RequestMapping -> String[] value() default {}_;1422572109;The primary mapping expressed by this annotation._<p>In a Servlet environment: the path mapping URIs (e.g. "/myPath.do")._Ant-style path patterns are also supported (e.g. "/myPath/*.do")._At the method level, relative paths (e.g. "edit.do") are supported_within the primary mapping expressed at the type level._Path mapping URIs may contain placeholders (e.g. "/${connect}")_<p>In a Portlet environment: the mapped portlet modes_(i.e. "EDIT", "VIEW", "HELP" or any custom modes)._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this primary mapping, narrowing it for a specific handler method._@see org.springframework.web.bind.annotation.ValueConstants#DEFAULT_NONE;String[] value() default {}_;the,primary,mapping,expressed,by,this,annotation,p,in,a,servlet,environment,the,path,mapping,uris,e,g,my,path,do,ant,style,path,patterns,are,also,supported,e,g,my,path,do,at,the,method,level,relative,paths,e,g,edit,do,are,supported,within,the,primary,mapping,expressed,at,the,type,level,path,mapping,uris,may,contain,placeholders,e,g,connect,p,in,a,portlet,environment,the,mapped,portlet,modes,i,e,edit,view,help,or,any,custom,modes,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,primary,mapping,narrowing,it,for,a,specific,handler,method,see,org,springframework,web,bind,annotation,value,constants;string,value,default
RequestMapping -> String[] value() default {}_;1427139532;The primary mapping expressed by this annotation._<p>In a Servlet environment: the path mapping URIs (e.g. "/myPath.do")._Ant-style path patterns are also supported (e.g. "/myPath/*.do")._At the method level, relative paths (e.g. "edit.do") are supported_within the primary mapping expressed at the type level._Path mapping URIs may contain placeholders (e.g. "/${connect}")_<p>In a Portlet environment: the mapped portlet modes_(i.e. "EDIT", "VIEW", "HELP" or any custom modes)._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this primary mapping, narrowing it for a specific handler method._@see org.springframework.web.bind.annotation.ValueConstants#DEFAULT_NONE;String[] value() default {}_;the,primary,mapping,expressed,by,this,annotation,p,in,a,servlet,environment,the,path,mapping,uris,e,g,my,path,do,ant,style,path,patterns,are,also,supported,e,g,my,path,do,at,the,method,level,relative,paths,e,g,edit,do,are,supported,within,the,primary,mapping,expressed,at,the,type,level,path,mapping,uris,may,contain,placeholders,e,g,connect,p,in,a,portlet,environment,the,mapped,portlet,modes,i,e,edit,view,help,or,any,custom,modes,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,primary,mapping,narrowing,it,for,a,specific,handler,method,see,org,springframework,web,bind,annotation,value,constants;string,value,default
RequestMapping -> String[] value() default {}_;1429532371;The primary mapping expressed by this annotation._<p>In a Servlet environment: the path mapping URIs (e.g. "/myPath.do")._Ant-style path patterns are also supported (e.g. "/myPath/*.do")._At the method level, relative paths (e.g. "edit.do") are supported_within the primary mapping expressed at the type level._Path mapping URIs may contain placeholders (e.g. "/${connect}")_<p>In a Portlet environment: the mapped portlet modes_(i.e. "EDIT", "VIEW", "HELP" or any custom modes)._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this primary mapping, narrowing it for a specific handler method._@see org.springframework.web.bind.annotation.ValueConstants#DEFAULT_NONE;String[] value() default {}_;the,primary,mapping,expressed,by,this,annotation,p,in,a,servlet,environment,the,path,mapping,uris,e,g,my,path,do,ant,style,path,patterns,are,also,supported,e,g,my,path,do,at,the,method,level,relative,paths,e,g,edit,do,are,supported,within,the,primary,mapping,expressed,at,the,type,level,path,mapping,uris,may,contain,placeholders,e,g,connect,p,in,a,portlet,environment,the,mapped,portlet,modes,i,e,edit,view,help,or,any,custom,modes,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,primary,mapping,narrowing,it,for,a,specific,handler,method,see,org,springframework,web,bind,annotation,value,constants;string,value,default
RequestMapping -> String[] value() default {}_;1429886024;The primary mapping expressed by this annotation._<p>In a Servlet environment this is an alias for {@link #path()}._For example {@code @RequestMapping("/foo")} is equivalent to_{@code @RequestMapping(path="/foo")}._<p>In a Portlet environment this is the mapped portlet modes_(i.e. "EDIT", "VIEW", "HELP" or any custom modes)._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this primary mapping, narrowing it for a specific handler method.;String[] value() default {}_;the,primary,mapping,expressed,by,this,annotation,p,in,a,servlet,environment,this,is,an,alias,for,link,path,for,example,code,request,mapping,foo,is,equivalent,to,code,request,mapping,path,foo,p,in,a,portlet,environment,this,is,the,mapped,portlet,modes,i,e,edit,view,help,or,any,custom,modes,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,primary,mapping,narrowing,it,for,a,specific,handler,method;string,value,default
RequestMapping -> @AliasFor("value") 	String[] path() default {}_;1438176426;In a Servlet environment only: the path mapping URIs (e.g. "/myPath.do")._Ant-style path patterns are also supported (e.g. "/myPath/*.do")._At the method level, relative paths (e.g. "edit.do") are supported within_the primary mapping expressed at the type level. Path mapping URIs may_contain placeholders (e.g. "/${connect}")_<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this primary mapping, narrowing it for a specific handler method._@see org.springframework.web.bind.annotation.ValueConstants#DEFAULT_NONE_@since 4.2;@AliasFor("value")_	String[] path() default {}_;in,a,servlet,environment,only,the,path,mapping,uris,e,g,my,path,do,ant,style,path,patterns,are,also,supported,e,g,my,path,do,at,the,method,level,relative,paths,e,g,edit,do,are,supported,within,the,primary,mapping,expressed,at,the,type,level,path,mapping,uris,may,contain,placeholders,e,g,connect,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,primary,mapping,narrowing,it,for,a,specific,handler,method,see,org,springframework,web,bind,annotation,value,constants,since,4,2;alias,for,value,string,path,default
RequestMapping -> @AliasFor("value") 	String[] path() default {}_;1444666351;In a Servlet environment only: the path mapping URIs (e.g. "/myPath.do")._Ant-style path patterns are also supported (e.g. "/myPath/*.do")._At the method level, relative paths (e.g. "edit.do") are supported within_the primary mapping expressed at the type level. Path mapping URIs may_contain placeholders (e.g. "/${connect}")_<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this primary mapping, narrowing it for a specific handler method._@see org.springframework.web.bind.annotation.ValueConstants#DEFAULT_NONE_@since 4.2;@AliasFor("value")_	String[] path() default {}_;in,a,servlet,environment,only,the,path,mapping,uris,e,g,my,path,do,ant,style,path,patterns,are,also,supported,e,g,my,path,do,at,the,method,level,relative,paths,e,g,edit,do,are,supported,within,the,primary,mapping,expressed,at,the,type,level,path,mapping,uris,may,contain,placeholders,e,g,connect,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,primary,mapping,narrowing,it,for,a,specific,handler,method,see,org,springframework,web,bind,annotation,value,constants,since,4,2;alias,for,value,string,path,default
RequestMapping -> @AliasFor("value") 	String[] path() default {}_;1446446882;In a Servlet environment only: the path mapping URIs (e.g. "/myPath.do")._Ant-style path patterns are also supported (e.g. "/myPath/*.do")._At the method level, relative paths (e.g. "edit.do") are supported within_the primary mapping expressed at the type level. Path mapping URIs may_contain placeholders (e.g. "/${connect}")_<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this primary mapping, narrowing it for a specific handler method._@see org.springframework.web.bind.annotation.ValueConstants#DEFAULT_NONE_@since 4.2;@AliasFor("value")_	String[] path() default {}_;in,a,servlet,environment,only,the,path,mapping,uris,e,g,my,path,do,ant,style,path,patterns,are,also,supported,e,g,my,path,do,at,the,method,level,relative,paths,e,g,edit,do,are,supported,within,the,primary,mapping,expressed,at,the,type,level,path,mapping,uris,may,contain,placeholders,e,g,connect,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,primary,mapping,narrowing,it,for,a,specific,handler,method,see,org,springframework,web,bind,annotation,value,constants,since,4,2;alias,for,value,string,path,default
RequestMapping -> @AliasFor("value") 	String[] path() default {}_;1453844264;In a Servlet environment only: the path mapping URIs (e.g. "/myPath.do")._Ant-style path patterns are also supported (e.g. "/myPath/*.do")._At the method level, relative paths (e.g. "edit.do") are supported within_the primary mapping expressed at the type level. Path mapping URIs may_contain placeholders (e.g. "/${connect}")_<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this primary mapping, narrowing it for a specific handler method._@see org.springframework.web.bind.annotation.ValueConstants#DEFAULT_NONE_@since 4.2;@AliasFor("value")_	String[] path() default {}_;in,a,servlet,environment,only,the,path,mapping,uris,e,g,my,path,do,ant,style,path,patterns,are,also,supported,e,g,my,path,do,at,the,method,level,relative,paths,e,g,edit,do,are,supported,within,the,primary,mapping,expressed,at,the,type,level,path,mapping,uris,may,contain,placeholders,e,g,connect,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,primary,mapping,narrowing,it,for,a,specific,handler,method,see,org,springframework,web,bind,annotation,value,constants,since,4,2;alias,for,value,string,path,default
RequestMapping -> @AliasFor("value") 	String[] path() default {}_;1453844270;In a Servlet environment only: the path mapping URIs (e.g. "/myPath.do")._Ant-style path patterns are also supported (e.g. "/myPath/*.do")._At the method level, relative paths (e.g. "edit.do") are supported within_the primary mapping expressed at the type level. Path mapping URIs may_contain placeholders (e.g. "/${connect}")_<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this primary mapping, narrowing it for a specific handler method._@see org.springframework.web.bind.annotation.ValueConstants#DEFAULT_NONE_@since 4.2;@AliasFor("value")_	String[] path() default {}_;in,a,servlet,environment,only,the,path,mapping,uris,e,g,my,path,do,ant,style,path,patterns,are,also,supported,e,g,my,path,do,at,the,method,level,relative,paths,e,g,edit,do,are,supported,within,the,primary,mapping,expressed,at,the,type,level,path,mapping,uris,may,contain,placeholders,e,g,connect,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,primary,mapping,narrowing,it,for,a,specific,handler,method,see,org,springframework,web,bind,annotation,value,constants,since,4,2;alias,for,value,string,path,default
RequestMapping -> @AliasFor("value") 	String[] path() default {}_;1456522551;In a Servlet environment only: the path mapping URIs (e.g. "/myPath.do")._Ant-style path patterns are also supported (e.g. "/myPath/*.do")._At the method level, relative paths (e.g. "edit.do") are supported within_the primary mapping expressed at the type level. Path mapping URIs may_contain placeholders (e.g. "/${connect}")_<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this primary mapping, narrowing it for a specific handler method._@see org.springframework.web.bind.annotation.ValueConstants#DEFAULT_NONE_@since 4.2;@AliasFor("value")_	String[] path() default {}_;in,a,servlet,environment,only,the,path,mapping,uris,e,g,my,path,do,ant,style,path,patterns,are,also,supported,e,g,my,path,do,at,the,method,level,relative,paths,e,g,edit,do,are,supported,within,the,primary,mapping,expressed,at,the,type,level,path,mapping,uris,may,contain,placeholders,e,g,connect,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,primary,mapping,narrowing,it,for,a,specific,handler,method,see,org,springframework,web,bind,annotation,value,constants,since,4,2;alias,for,value,string,path,default
RequestMapping -> @AliasFor("value") 	String[] path() default {}_;1456766757;In a Servlet environment only: the path mapping URIs (e.g. "/myPath.do")._Ant-style path patterns are also supported (e.g. "/myPath/*.do")._At the method level, relative paths (e.g. "edit.do") are supported within_the primary mapping expressed at the type level. Path mapping URIs may_contain placeholders (e.g. "/${connect}")_<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this primary mapping, narrowing it for a specific handler method._@see org.springframework.web.bind.annotation.ValueConstants#DEFAULT_NONE_@since 4.2;@AliasFor("value")_	String[] path() default {}_;in,a,servlet,environment,only,the,path,mapping,uris,e,g,my,path,do,ant,style,path,patterns,are,also,supported,e,g,my,path,do,at,the,method,level,relative,paths,e,g,edit,do,are,supported,within,the,primary,mapping,expressed,at,the,type,level,path,mapping,uris,may,contain,placeholders,e,g,connect,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,primary,mapping,narrowing,it,for,a,specific,handler,method,see,org,springframework,web,bind,annotation,value,constants,since,4,2;alias,for,value,string,path,default
RequestMapping -> @AliasFor("value") 	String[] path() default {}_;1467668027;In a Servlet environment only: the path mapping URIs (e.g. "/myPath.do")._Ant-style path patterns are also supported (e.g. "/myPath/*.do")._At the method level, relative paths (e.g. "edit.do") are supported within_the primary mapping expressed at the type level. Path mapping URIs may_contain placeholders (e.g. "/${connect}")_<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this primary mapping, narrowing it for a specific handler method._@see org.springframework.web.bind.annotation.ValueConstants#DEFAULT_NONE_@since 4.2;@AliasFor("value")_	String[] path() default {}_;in,a,servlet,environment,only,the,path,mapping,uris,e,g,my,path,do,ant,style,path,patterns,are,also,supported,e,g,my,path,do,at,the,method,level,relative,paths,e,g,edit,do,are,supported,within,the,primary,mapping,expressed,at,the,type,level,path,mapping,uris,may,contain,placeholders,e,g,connect,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,primary,mapping,narrowing,it,for,a,specific,handler,method,see,org,springframework,web,bind,annotation,value,constants,since,4,2;alias,for,value,string,path,default
RequestMapping -> @AliasFor("value") 	String[] path() default {}_;1467677340;In a Servlet environment only: the path mapping URIs (e.g. "/myPath.do")._Ant-style path patterns are also supported (e.g. "/myPath/*.do")._At the method level, relative paths (e.g. "edit.do") are supported within_the primary mapping expressed at the type level. Path mapping URIs may_contain placeholders (e.g. "/${connect}")_<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this primary mapping, narrowing it for a specific handler method._@see org.springframework.web.bind.annotation.ValueConstants#DEFAULT_NONE_@since 4.2;@AliasFor("value")_	String[] path() default {}_;in,a,servlet,environment,only,the,path,mapping,uris,e,g,my,path,do,ant,style,path,patterns,are,also,supported,e,g,my,path,do,at,the,method,level,relative,paths,e,g,edit,do,are,supported,within,the,primary,mapping,expressed,at,the,type,level,path,mapping,uris,may,contain,placeholders,e,g,connect,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,primary,mapping,narrowing,it,for,a,specific,handler,method,see,org,springframework,web,bind,annotation,value,constants,since,4,2;alias,for,value,string,path,default
RequestMapping -> @AliasFor("value") 	String[] path() default {}_;1491341544;In a Servlet environment only: the path mapping URIs (e.g. "/myPath.do")._Ant-style path patterns are also supported (e.g. "/myPath/*.do")._At the method level, relative paths (e.g. "edit.do") are supported within_the primary mapping expressed at the type level. Path mapping URIs may_contain placeholders (e.g. "/${connect}")_<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this primary mapping, narrowing it for a specific handler method._@see org.springframework.web.bind.annotation.ValueConstants#DEFAULT_NONE_@since 4.2;@AliasFor("value")_	String[] path() default {}_;in,a,servlet,environment,only,the,path,mapping,uris,e,g,my,path,do,ant,style,path,patterns,are,also,supported,e,g,my,path,do,at,the,method,level,relative,paths,e,g,edit,do,are,supported,within,the,primary,mapping,expressed,at,the,type,level,path,mapping,uris,may,contain,placeholders,e,g,connect,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,primary,mapping,narrowing,it,for,a,specific,handler,method,see,org,springframework,web,bind,annotation,value,constants,since,4,2;alias,for,value,string,path,default
RequestMapping -> @AliasFor("value") 	String[] path() default {}_;1491599707;In a Servlet environment only: the path mapping URIs (e.g. "/myPath.do")._Ant-style path patterns are also supported (e.g. "/myPath/*.do")._At the method level, relative paths (e.g. "edit.do") are supported within_the primary mapping expressed at the type level. Path mapping URIs may_contain placeholders (e.g. "/${connect}")_<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this primary mapping, narrowing it for a specific handler method._@see org.springframework.web.bind.annotation.ValueConstants#DEFAULT_NONE_@since 4.2;@AliasFor("value")_	String[] path() default {}_;in,a,servlet,environment,only,the,path,mapping,uris,e,g,my,path,do,ant,style,path,patterns,are,also,supported,e,g,my,path,do,at,the,method,level,relative,paths,e,g,edit,do,are,supported,within,the,primary,mapping,expressed,at,the,type,level,path,mapping,uris,may,contain,placeholders,e,g,connect,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,primary,mapping,narrowing,it,for,a,specific,handler,method,see,org,springframework,web,bind,annotation,value,constants,since,4,2;alias,for,value,string,path,default
RequestMapping -> @AliasFor("value") 	String[] path() default {}_;1506454198;In a Servlet environment only: the path mapping URIs (e.g. "/myPath.do")._Ant-style path patterns are also supported (e.g. "/myPath/*.do")._At the method level, relative paths (e.g. "edit.do") are supported within_the primary mapping expressed at the type level. Path mapping URIs may_contain placeholders (e.g. "/${connect}")_<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this primary mapping, narrowing it for a specific handler method._@see org.springframework.web.bind.annotation.ValueConstants#DEFAULT_NONE_@since 4.2;@AliasFor("value")_	String[] path() default {}_;in,a,servlet,environment,only,the,path,mapping,uris,e,g,my,path,do,ant,style,path,patterns,are,also,supported,e,g,my,path,do,at,the,method,level,relative,paths,e,g,edit,do,are,supported,within,the,primary,mapping,expressed,at,the,type,level,path,mapping,uris,may,contain,placeholders,e,g,connect,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,primary,mapping,narrowing,it,for,a,specific,handler,method,see,org,springframework,web,bind,annotation,value,constants,since,4,2;alias,for,value,string,path,default
RequestMapping -> @AliasFor("value") 	String[] path() default {}_;1515421792;In a Servlet environment only: the path mapping URIs (e.g. "/myPath.do")._Ant-style path patterns are also supported (e.g. "/myPath/*.do")._At the method level, relative paths (e.g. "edit.do") are supported within_the primary mapping expressed at the type level. Path mapping URIs may_contain placeholders (e.g. "/${connect}")_<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this primary mapping, narrowing it for a specific handler method._@see org.springframework.web.bind.annotation.ValueConstants#DEFAULT_NONE_@since 4.2;@AliasFor("value")_	String[] path() default {}_;in,a,servlet,environment,only,the,path,mapping,uris,e,g,my,path,do,ant,style,path,patterns,are,also,supported,e,g,my,path,do,at,the,method,level,relative,paths,e,g,edit,do,are,supported,within,the,primary,mapping,expressed,at,the,type,level,path,mapping,uris,may,contain,placeholders,e,g,connect,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,primary,mapping,narrowing,it,for,a,specific,handler,method,see,org,springframework,web,bind,annotation,value,constants,since,4,2;alias,for,value,string,path,default
RequestMapping -> @AliasFor("value") 	String[] path() default {}_;1523268197;In a Servlet environment only: the path mapping URIs (e.g. "/myPath.do")._Ant-style path patterns are also supported (e.g. "/myPath/*.do")._At the method level, relative paths (e.g. "edit.do") are supported within_the primary mapping expressed at the type level. Path mapping URIs may_contain placeholders (e.g. "/${connect}")_<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this primary mapping, narrowing it for a specific handler method._@see org.springframework.web.bind.annotation.ValueConstants#DEFAULT_NONE_@since 4.2;@AliasFor("value")_	String[] path() default {}_;in,a,servlet,environment,only,the,path,mapping,uris,e,g,my,path,do,ant,style,path,patterns,are,also,supported,e,g,my,path,do,at,the,method,level,relative,paths,e,g,edit,do,are,supported,within,the,primary,mapping,expressed,at,the,type,level,path,mapping,uris,may,contain,placeholders,e,g,connect,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,primary,mapping,narrowing,it,for,a,specific,handler,method,see,org,springframework,web,bind,annotation,value,constants,since,4,2;alias,for,value,string,path,default
RequestMapping -> @AliasFor("value") 	String[] path() default {}_;1528795693;The path mapping URIs (e.g. "/myPath.do")._Ant-style path patterns are also supported (e.g. "/myPath/*.do")._At the method level, relative paths (e.g. "edit.do") are supported_within the primary mapping expressed at the type level._Path mapping URIs may contain placeholders (e.g. "/${connect}")._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this primary mapping, narrowing it for a specific handler method._@see org.springframework.web.bind.annotation.ValueConstants#DEFAULT_NONE_@since 4.2;@AliasFor("value")_	String[] path() default {}_;the,path,mapping,uris,e,g,my,path,do,ant,style,path,patterns,are,also,supported,e,g,my,path,do,at,the,method,level,relative,paths,e,g,edit,do,are,supported,within,the,primary,mapping,expressed,at,the,type,level,path,mapping,uris,may,contain,placeholders,e,g,connect,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,primary,mapping,narrowing,it,for,a,specific,handler,method,see,org,springframework,web,bind,annotation,value,constants,since,4,2;alias,for,value,string,path,default
RequestMapping -> String[] params() default {}_;1328020251;The parameters of the mapped request, narrowing the primary mapping._<p>Same format for any environment: a sequence of "myParam=myValue" style_expressions, with a request only mapped if each such parameter is found_to have the given value. Expressions can be negated by using the "!=" operator,_as in "myParam!=myValue". "myParam" style expressions are also supported,_with such parameters having to be present in the request (allowed to have_any value). Finally, "!myParam" style expressions indicate that the_specified parameter is <i>not</i> supposed to be present in the request._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this parameter restriction (i.e. the type-level restriction_gets checked before the handler method is even resolved)._<p>In a Servlet environment, parameter mappings are considered as restrictions_that are enforced at the type level. The primary path mapping (i.e. the_specified URI value) still has to uniquely identify the target handler, with_parameter mappings simply expressing preconditions for invoking the handler._<p>In a Portlet environment, parameters are taken into account as mapping_differentiators, i.e. the primary portlet mode mapping plus the parameter_conditions uniquely identify the target handler. Different handlers may be_mapped onto the same portlet mode, as long as their parameter mappings differ.;String[] params() default {}_;the,parameters,of,the,mapped,request,narrowing,the,primary,mapping,p,same,format,for,any,environment,a,sequence,of,my,param,my,value,style,expressions,with,a,request,only,mapped,if,each,such,parameter,is,found,to,have,the,given,value,expressions,can,be,negated,by,using,the,operator,as,in,my,param,my,value,my,param,style,expressions,are,also,supported,with,such,parameters,having,to,be,present,in,the,request,allowed,to,have,any,value,finally,my,param,style,expressions,indicate,that,the,specified,parameter,is,i,not,i,supposed,to,be,present,in,the,request,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,parameter,restriction,i,e,the,type,level,restriction,gets,checked,before,the,handler,method,is,even,resolved,p,in,a,servlet,environment,parameter,mappings,are,considered,as,restrictions,that,are,enforced,at,the,type,level,the,primary,path,mapping,i,e,the,specified,uri,value,still,has,to,uniquely,identify,the,target,handler,with,parameter,mappings,simply,expressing,preconditions,for,invoking,the,handler,p,in,a,portlet,environment,parameters,are,taken,into,account,as,mapping,differentiators,i,e,the,primary,portlet,mode,mapping,plus,the,parameter,conditions,uniquely,identify,the,target,handler,different,handlers,may,be,mapped,onto,the,same,portlet,mode,as,long,as,their,parameter,mappings,differ;string,params,default
RequestMapping -> String[] params() default {}_;1329142650;The parameters of the mapped request, narrowing the primary mapping._<p>Same format for any environment: a sequence of "myParam=myValue" style_expressions, with a request only mapped if each such parameter is found_to have the given value. Expressions can be negated by using the "!=" operator,_as in "myParam!=myValue". "myParam" style expressions are also supported,_with such parameters having to be present in the request (allowed to have_any value). Finally, "!myParam" style expressions indicate that the_specified parameter is <i>not</i> supposed to be present in the request._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this parameter restriction (i.e. the type-level restriction_gets checked before the handler method is even resolved)._<p>In a Servlet environment, parameter mappings are considered as restrictions_that are enforced at the type level. The primary path mapping (i.e. the_specified URI value) still has to uniquely identify the target handler, with_parameter mappings simply expressing preconditions for invoking the handler._<p>In a Portlet environment, parameters are taken into account as mapping_differentiators, i.e. the primary portlet mode mapping plus the parameter_conditions uniquely identify the target handler. Different handlers may be_mapped onto the same portlet mode, as long as their parameter mappings differ.;String[] params() default {}_;the,parameters,of,the,mapped,request,narrowing,the,primary,mapping,p,same,format,for,any,environment,a,sequence,of,my,param,my,value,style,expressions,with,a,request,only,mapped,if,each,such,parameter,is,found,to,have,the,given,value,expressions,can,be,negated,by,using,the,operator,as,in,my,param,my,value,my,param,style,expressions,are,also,supported,with,such,parameters,having,to,be,present,in,the,request,allowed,to,have,any,value,finally,my,param,style,expressions,indicate,that,the,specified,parameter,is,i,not,i,supposed,to,be,present,in,the,request,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,parameter,restriction,i,e,the,type,level,restriction,gets,checked,before,the,handler,method,is,even,resolved,p,in,a,servlet,environment,parameter,mappings,are,considered,as,restrictions,that,are,enforced,at,the,type,level,the,primary,path,mapping,i,e,the,specified,uri,value,still,has,to,uniquely,identify,the,target,handler,with,parameter,mappings,simply,expressing,preconditions,for,invoking,the,handler,p,in,a,portlet,environment,parameters,are,taken,into,account,as,mapping,differentiators,i,e,the,primary,portlet,mode,mapping,plus,the,parameter,conditions,uniquely,identify,the,target,handler,different,handlers,may,be,mapped,onto,the,same,portlet,mode,as,long,as,their,parameter,mappings,differ;string,params,default
RequestMapping -> String[] params() default {}_;1334781369;The parameters of the mapped request, narrowing the primary mapping._<p>Same format for any environment: a sequence of "myParam=myValue" style_expressions, with a request only mapped if each such parameter is found_to have the given value. Expressions can be negated by using the "!=" operator,_as in "myParam!=myValue". "myParam" style expressions are also supported,_with such parameters having to be present in the request (allowed to have_any value). Finally, "!myParam" style expressions indicate that the_specified parameter is <i>not</i> supposed to be present in the request._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this parameter restriction (i.e. the type-level restriction_gets checked before the handler method is even resolved)._<p>In a Servlet environment, parameter mappings are considered as restrictions_that are enforced at the type level. The primary path mapping (i.e. the_specified URI value) still has to uniquely identify the target handler, with_parameter mappings simply expressing preconditions for invoking the handler._<p>In a Portlet environment, parameters are taken into account as mapping_differentiators, i.e. the primary portlet mode mapping plus the parameter_conditions uniquely identify the target handler. Different handlers may be_mapped onto the same portlet mode, as long as their parameter mappings differ.;String[] params() default {}_;the,parameters,of,the,mapped,request,narrowing,the,primary,mapping,p,same,format,for,any,environment,a,sequence,of,my,param,my,value,style,expressions,with,a,request,only,mapped,if,each,such,parameter,is,found,to,have,the,given,value,expressions,can,be,negated,by,using,the,operator,as,in,my,param,my,value,my,param,style,expressions,are,also,supported,with,such,parameters,having,to,be,present,in,the,request,allowed,to,have,any,value,finally,my,param,style,expressions,indicate,that,the,specified,parameter,is,i,not,i,supposed,to,be,present,in,the,request,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,parameter,restriction,i,e,the,type,level,restriction,gets,checked,before,the,handler,method,is,even,resolved,p,in,a,servlet,environment,parameter,mappings,are,considered,as,restrictions,that,are,enforced,at,the,type,level,the,primary,path,mapping,i,e,the,specified,uri,value,still,has,to,uniquely,identify,the,target,handler,with,parameter,mappings,simply,expressing,preconditions,for,invoking,the,handler,p,in,a,portlet,environment,parameters,are,taken,into,account,as,mapping,differentiators,i,e,the,primary,portlet,mode,mapping,plus,the,parameter,conditions,uniquely,identify,the,target,handler,different,handlers,may,be,mapped,onto,the,same,portlet,mode,as,long,as,their,parameter,mappings,differ;string,params,default
RequestMapping -> String[] params() default {}_;1335774711;The parameters of the mapped request, narrowing the primary mapping._<p>Same format for any environment: a sequence of "myParam=myValue" style_expressions, with a request only mapped if each such parameter is found_to have the given value. Expressions can be negated by using the "!=" operator,_as in "myParam!=myValue". "myParam" style expressions are also supported,_with such parameters having to be present in the request (allowed to have_any value). Finally, "!myParam" style expressions indicate that the_specified parameter is <i>not</i> supposed to be present in the request._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this parameter restriction (i.e. the type-level restriction_gets checked before the handler method is even resolved)._<p>In a Servlet environment, parameter mappings are considered as restrictions_that are enforced at the type level. The primary path mapping (i.e. the_specified URI value) still has to uniquely identify the target handler, with_parameter mappings simply expressing preconditions for invoking the handler._<p>In a Portlet environment, parameters are taken into account as mapping_differentiators, i.e. the primary portlet mode mapping plus the parameter_conditions uniquely identify the target handler. Different handlers may be_mapped onto the same portlet mode, as long as their parameter mappings differ.;String[] params() default {}_;the,parameters,of,the,mapped,request,narrowing,the,primary,mapping,p,same,format,for,any,environment,a,sequence,of,my,param,my,value,style,expressions,with,a,request,only,mapped,if,each,such,parameter,is,found,to,have,the,given,value,expressions,can,be,negated,by,using,the,operator,as,in,my,param,my,value,my,param,style,expressions,are,also,supported,with,such,parameters,having,to,be,present,in,the,request,allowed,to,have,any,value,finally,my,param,style,expressions,indicate,that,the,specified,parameter,is,i,not,i,supposed,to,be,present,in,the,request,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,parameter,restriction,i,e,the,type,level,restriction,gets,checked,before,the,handler,method,is,even,resolved,p,in,a,servlet,environment,parameter,mappings,are,considered,as,restrictions,that,are,enforced,at,the,type,level,the,primary,path,mapping,i,e,the,specified,uri,value,still,has,to,uniquely,identify,the,target,handler,with,parameter,mappings,simply,expressing,preconditions,for,invoking,the,handler,p,in,a,portlet,environment,parameters,are,taken,into,account,as,mapping,differentiators,i,e,the,primary,portlet,mode,mapping,plus,the,parameter,conditions,uniquely,identify,the,target,handler,different,handlers,may,be,mapped,onto,the,same,portlet,mode,as,long,as,their,parameter,mappings,differ;string,params,default
RequestMapping -> String[] params() default {}_;1337025676;The parameters of the mapped request, narrowing the primary mapping._<p>Same format for any environment: a sequence of "myParam=myValue" style_expressions, with a request only mapped if each such parameter is found_to have the given value. Expressions can be negated by using the "!=" operator,_as in "myParam!=myValue". "myParam" style expressions are also supported,_with such parameters having to be present in the request (allowed to have_any value). Finally, "!myParam" style expressions indicate that the_specified parameter is <i>not</i> supposed to be present in the request._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this parameter restriction (i.e. the type-level restriction_gets checked before the handler method is even resolved)._<p>In a Servlet environment, parameter mappings are considered as restrictions_that are enforced at the type level. The primary path mapping (i.e. the_specified URI value) still has to uniquely identify the target handler, with_parameter mappings simply expressing preconditions for invoking the handler._<p>In a Portlet environment, parameters are taken into account as mapping_differentiators, i.e. the primary portlet mode mapping plus the parameter_conditions uniquely identify the target handler. Different handlers may be_mapped onto the same portlet mode, as long as their parameter mappings differ.;String[] params() default {}_;the,parameters,of,the,mapped,request,narrowing,the,primary,mapping,p,same,format,for,any,environment,a,sequence,of,my,param,my,value,style,expressions,with,a,request,only,mapped,if,each,such,parameter,is,found,to,have,the,given,value,expressions,can,be,negated,by,using,the,operator,as,in,my,param,my,value,my,param,style,expressions,are,also,supported,with,such,parameters,having,to,be,present,in,the,request,allowed,to,have,any,value,finally,my,param,style,expressions,indicate,that,the,specified,parameter,is,i,not,i,supposed,to,be,present,in,the,request,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,parameter,restriction,i,e,the,type,level,restriction,gets,checked,before,the,handler,method,is,even,resolved,p,in,a,servlet,environment,parameter,mappings,are,considered,as,restrictions,that,are,enforced,at,the,type,level,the,primary,path,mapping,i,e,the,specified,uri,value,still,has,to,uniquely,identify,the,target,handler,with,parameter,mappings,simply,expressing,preconditions,for,invoking,the,handler,p,in,a,portlet,environment,parameters,are,taken,into,account,as,mapping,differentiators,i,e,the,primary,portlet,mode,mapping,plus,the,parameter,conditions,uniquely,identify,the,target,handler,different,handlers,may,be,mapped,onto,the,same,portlet,mode,as,long,as,their,parameter,mappings,differ;string,params,default
RequestMapping -> String[] params() default {}_;1340018565;The parameters of the mapped request, narrowing the primary mapping._<p>Same format for any environment: a sequence of "myParam=myValue" style_expressions, with a request only mapped if each such parameter is found_to have the given value. Expressions can be negated by using the "!=" operator,_as in "myParam!=myValue". "myParam" style expressions are also supported,_with such parameters having to be present in the request (allowed to have_any value). Finally, "!myParam" style expressions indicate that the_specified parameter is <i>not</i> supposed to be present in the request._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this parameter restriction (i.e. the type-level restriction_gets checked before the handler method is even resolved)._<p>In a Servlet environment, parameter mappings are considered as restrictions_that are enforced at the type level. The primary path mapping (i.e. the_specified URI value) still has to uniquely identify the target handler, with_parameter mappings simply expressing preconditions for invoking the handler._<p>In a Portlet environment, parameters are taken into account as mapping_differentiators, i.e. the primary portlet mode mapping plus the parameter_conditions uniquely identify the target handler. Different handlers may be_mapped onto the same portlet mode, as long as their parameter mappings differ.;String[] params() default {}_;the,parameters,of,the,mapped,request,narrowing,the,primary,mapping,p,same,format,for,any,environment,a,sequence,of,my,param,my,value,style,expressions,with,a,request,only,mapped,if,each,such,parameter,is,found,to,have,the,given,value,expressions,can,be,negated,by,using,the,operator,as,in,my,param,my,value,my,param,style,expressions,are,also,supported,with,such,parameters,having,to,be,present,in,the,request,allowed,to,have,any,value,finally,my,param,style,expressions,indicate,that,the,specified,parameter,is,i,not,i,supposed,to,be,present,in,the,request,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,parameter,restriction,i,e,the,type,level,restriction,gets,checked,before,the,handler,method,is,even,resolved,p,in,a,servlet,environment,parameter,mappings,are,considered,as,restrictions,that,are,enforced,at,the,type,level,the,primary,path,mapping,i,e,the,specified,uri,value,still,has,to,uniquely,identify,the,target,handler,with,parameter,mappings,simply,expressing,preconditions,for,invoking,the,handler,p,in,a,portlet,environment,parameters,are,taken,into,account,as,mapping,differentiators,i,e,the,primary,portlet,mode,mapping,plus,the,parameter,conditions,uniquely,identify,the,target,handler,different,handlers,may,be,mapped,onto,the,same,portlet,mode,as,long,as,their,parameter,mappings,differ;string,params,default
RequestMapping -> String[] params() default {}_;1340398642;The parameters of the mapped request, narrowing the primary mapping._<p>Same format for any environment: a sequence of "myParam=myValue" style_expressions, with a request only mapped if each such parameter is found_to have the given value. Expressions can be negated by using the "!=" operator,_as in "myParam!=myValue". "myParam" style expressions are also supported,_with such parameters having to be present in the request (allowed to have_any value). Finally, "!myParam" style expressions indicate that the_specified parameter is <i>not</i> supposed to be present in the request._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this parameter restriction (i.e. the type-level restriction_gets checked before the handler method is even resolved)._<p>In a Servlet environment, parameter mappings are considered as restrictions_that are enforced at the type level. The primary path mapping (i.e. the_specified URI value) still has to uniquely identify the target handler, with_parameter mappings simply expressing preconditions for invoking the handler._<p>In a Portlet environment, parameters are taken into account as mapping_differentiators, i.e. the primary portlet mode mapping plus the parameter_conditions uniquely identify the target handler. Different handlers may be_mapped onto the same portlet mode, as long as their parameter mappings differ.;String[] params() default {}_;the,parameters,of,the,mapped,request,narrowing,the,primary,mapping,p,same,format,for,any,environment,a,sequence,of,my,param,my,value,style,expressions,with,a,request,only,mapped,if,each,such,parameter,is,found,to,have,the,given,value,expressions,can,be,negated,by,using,the,operator,as,in,my,param,my,value,my,param,style,expressions,are,also,supported,with,such,parameters,having,to,be,present,in,the,request,allowed,to,have,any,value,finally,my,param,style,expressions,indicate,that,the,specified,parameter,is,i,not,i,supposed,to,be,present,in,the,request,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,parameter,restriction,i,e,the,type,level,restriction,gets,checked,before,the,handler,method,is,even,resolved,p,in,a,servlet,environment,parameter,mappings,are,considered,as,restrictions,that,are,enforced,at,the,type,level,the,primary,path,mapping,i,e,the,specified,uri,value,still,has,to,uniquely,identify,the,target,handler,with,parameter,mappings,simply,expressing,preconditions,for,invoking,the,handler,p,in,a,portlet,environment,parameters,are,taken,into,account,as,mapping,differentiators,i,e,the,primary,portlet,mode,mapping,plus,the,parameter,conditions,uniquely,identify,the,target,handler,different,handlers,may,be,mapped,onto,the,same,portlet,mode,as,long,as,their,parameter,mappings,differ;string,params,default
RequestMapping -> String[] params() default {}_;1345574045;The parameters of the mapped request, narrowing the primary mapping._<p>Same format for any environment: a sequence of "myParam=myValue" style_expressions, with a request only mapped if each such parameter is found_to have the given value. Expressions can be negated by using the "!=" operator,_as in "myParam!=myValue". "myParam" style expressions are also supported,_with such parameters having to be present in the request (allowed to have_any value). Finally, "!myParam" style expressions indicate that the_specified parameter is <i>not</i> supposed to be present in the request._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this parameter restriction (i.e. the type-level restriction_gets checked before the handler method is even resolved)._<p>In a Servlet environment, parameter mappings are considered as restrictions_that are enforced at the type level. The primary path mapping (i.e. the_specified URI value) still has to uniquely identify the target handler, with_parameter mappings simply expressing preconditions for invoking the handler._<p>In a Portlet environment, parameters are taken into account as mapping_differentiators, i.e. the primary portlet mode mapping plus the parameter_conditions uniquely identify the target handler. Different handlers may be_mapped onto the same portlet mode, as long as their parameter mappings differ.;String[] params() default {}_;the,parameters,of,the,mapped,request,narrowing,the,primary,mapping,p,same,format,for,any,environment,a,sequence,of,my,param,my,value,style,expressions,with,a,request,only,mapped,if,each,such,parameter,is,found,to,have,the,given,value,expressions,can,be,negated,by,using,the,operator,as,in,my,param,my,value,my,param,style,expressions,are,also,supported,with,such,parameters,having,to,be,present,in,the,request,allowed,to,have,any,value,finally,my,param,style,expressions,indicate,that,the,specified,parameter,is,i,not,i,supposed,to,be,present,in,the,request,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,parameter,restriction,i,e,the,type,level,restriction,gets,checked,before,the,handler,method,is,even,resolved,p,in,a,servlet,environment,parameter,mappings,are,considered,as,restrictions,that,are,enforced,at,the,type,level,the,primary,path,mapping,i,e,the,specified,uri,value,still,has,to,uniquely,identify,the,target,handler,with,parameter,mappings,simply,expressing,preconditions,for,invoking,the,handler,p,in,a,portlet,environment,parameters,are,taken,into,account,as,mapping,differentiators,i,e,the,primary,portlet,mode,mapping,plus,the,parameter,conditions,uniquely,identify,the,target,handler,different,handlers,may,be,mapped,onto,the,same,portlet,mode,as,long,as,their,parameter,mappings,differ;string,params,default
RequestMapping -> String[] params() default {}_;1346174472;The parameters of the mapped request, narrowing the primary mapping._<p>Same format for any environment: a sequence of "myParam=myValue" style_expressions, with a request only mapped if each such parameter is found_to have the given value. Expressions can be negated by using the "!=" operator,_as in "myParam!=myValue". "myParam" style expressions are also supported,_with such parameters having to be present in the request (allowed to have_any value). Finally, "!myParam" style expressions indicate that the_specified parameter is <i>not</i> supposed to be present in the request._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this parameter restriction (i.e. the type-level restriction_gets checked before the handler method is even resolved)._<p>In a Servlet environment, parameter mappings are considered as restrictions_that are enforced at the type level. The primary path mapping (i.e. the_specified URI value) still has to uniquely identify the target handler, with_parameter mappings simply expressing preconditions for invoking the handler._<p>In a Portlet environment, parameters are taken into account as mapping_differentiators, i.e. the primary portlet mode mapping plus the parameter_conditions uniquely identify the target handler. Different handlers may be_mapped onto the same portlet mode, as long as their parameter mappings differ.;String[] params() default {}_;the,parameters,of,the,mapped,request,narrowing,the,primary,mapping,p,same,format,for,any,environment,a,sequence,of,my,param,my,value,style,expressions,with,a,request,only,mapped,if,each,such,parameter,is,found,to,have,the,given,value,expressions,can,be,negated,by,using,the,operator,as,in,my,param,my,value,my,param,style,expressions,are,also,supported,with,such,parameters,having,to,be,present,in,the,request,allowed,to,have,any,value,finally,my,param,style,expressions,indicate,that,the,specified,parameter,is,i,not,i,supposed,to,be,present,in,the,request,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,parameter,restriction,i,e,the,type,level,restriction,gets,checked,before,the,handler,method,is,even,resolved,p,in,a,servlet,environment,parameter,mappings,are,considered,as,restrictions,that,are,enforced,at,the,type,level,the,primary,path,mapping,i,e,the,specified,uri,value,still,has,to,uniquely,identify,the,target,handler,with,parameter,mappings,simply,expressing,preconditions,for,invoking,the,handler,p,in,a,portlet,environment,parameters,are,taken,into,account,as,mapping,differentiators,i,e,the,primary,portlet,mode,mapping,plus,the,parameter,conditions,uniquely,identify,the,target,handler,different,handlers,may,be,mapped,onto,the,same,portlet,mode,as,long,as,their,parameter,mappings,differ;string,params,default
RequestMapping -> String[] params() default {}_;1355313310;The parameters of the mapped request, narrowing the primary mapping._<p>Same format for any environment: a sequence of "myParam=myValue" style_expressions, with a request only mapped if each such parameter is found_to have the given value. Expressions can be negated by using the "!=" operator,_as in "myParam!=myValue". "myParam" style expressions are also supported,_with such parameters having to be present in the request (allowed to have_any value). Finally, "!myParam" style expressions indicate that the_specified parameter is <i>not</i> supposed to be present in the request._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this parameter restriction (i.e. the type-level restriction_gets checked before the handler method is even resolved)._<p>In a Servlet environment, parameter mappings are considered as restrictions_that are enforced at the type level. The primary path mapping (i.e. the_specified URI value) still has to uniquely identify the target handler, with_parameter mappings simply expressing preconditions for invoking the handler._<p>In a Portlet environment, parameters are taken into account as mapping_differentiators, i.e. the primary portlet mode mapping plus the parameter_conditions uniquely identify the target handler. Different handlers may be_mapped onto the same portlet mode, as long as their parameter mappings differ.;String[] params() default {}_;the,parameters,of,the,mapped,request,narrowing,the,primary,mapping,p,same,format,for,any,environment,a,sequence,of,my,param,my,value,style,expressions,with,a,request,only,mapped,if,each,such,parameter,is,found,to,have,the,given,value,expressions,can,be,negated,by,using,the,operator,as,in,my,param,my,value,my,param,style,expressions,are,also,supported,with,such,parameters,having,to,be,present,in,the,request,allowed,to,have,any,value,finally,my,param,style,expressions,indicate,that,the,specified,parameter,is,i,not,i,supposed,to,be,present,in,the,request,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,parameter,restriction,i,e,the,type,level,restriction,gets,checked,before,the,handler,method,is,even,resolved,p,in,a,servlet,environment,parameter,mappings,are,considered,as,restrictions,that,are,enforced,at,the,type,level,the,primary,path,mapping,i,e,the,specified,uri,value,still,has,to,uniquely,identify,the,target,handler,with,parameter,mappings,simply,expressing,preconditions,for,invoking,the,handler,p,in,a,portlet,environment,parameters,are,taken,into,account,as,mapping,differentiators,i,e,the,primary,portlet,mode,mapping,plus,the,parameter,conditions,uniquely,identify,the,target,handler,different,handlers,may,be,mapped,onto,the,same,portlet,mode,as,long,as,their,parameter,mappings,differ;string,params,default
RequestMapping -> String[] params() default {}_;1356735495;The parameters of the mapped request, narrowing the primary mapping._<p>Same format for any environment: a sequence of "myParam=myValue" style_expressions, with a request only mapped if each such parameter is found_to have the given value. Expressions can be negated by using the "!=" operator,_as in "myParam!=myValue". "myParam" style expressions are also supported,_with such parameters having to be present in the request (allowed to have_any value). Finally, "!myParam" style expressions indicate that the_specified parameter is <i>not</i> supposed to be present in the request._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this parameter restriction (i.e. the type-level restriction_gets checked before the handler method is even resolved)._<p>In a Servlet environment, parameter mappings are considered as restrictions_that are enforced at the type level. The primary path mapping (i.e. the_specified URI value) still has to uniquely identify the target handler, with_parameter mappings simply expressing preconditions for invoking the handler._<p>In a Portlet environment, parameters are taken into account as mapping_differentiators, i.e. the primary portlet mode mapping plus the parameter_conditions uniquely identify the target handler. Different handlers may be_mapped onto the same portlet mode, as long as their parameter mappings differ.;String[] params() default {}_;the,parameters,of,the,mapped,request,narrowing,the,primary,mapping,p,same,format,for,any,environment,a,sequence,of,my,param,my,value,style,expressions,with,a,request,only,mapped,if,each,such,parameter,is,found,to,have,the,given,value,expressions,can,be,negated,by,using,the,operator,as,in,my,param,my,value,my,param,style,expressions,are,also,supported,with,such,parameters,having,to,be,present,in,the,request,allowed,to,have,any,value,finally,my,param,style,expressions,indicate,that,the,specified,parameter,is,i,not,i,supposed,to,be,present,in,the,request,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,parameter,restriction,i,e,the,type,level,restriction,gets,checked,before,the,handler,method,is,even,resolved,p,in,a,servlet,environment,parameter,mappings,are,considered,as,restrictions,that,are,enforced,at,the,type,level,the,primary,path,mapping,i,e,the,specified,uri,value,still,has,to,uniquely,identify,the,target,handler,with,parameter,mappings,simply,expressing,preconditions,for,invoking,the,handler,p,in,a,portlet,environment,parameters,are,taken,into,account,as,mapping,differentiators,i,e,the,primary,portlet,mode,mapping,plus,the,parameter,conditions,uniquely,identify,the,target,handler,different,handlers,may,be,mapped,onto,the,same,portlet,mode,as,long,as,their,parameter,mappings,differ;string,params,default
RequestMapping -> String[] params() default {}_;1362408075;The parameters of the mapped request, narrowing the primary mapping._<p>Same format for any environment: a sequence of "myParam=myValue" style_expressions, with a request only mapped if each such parameter is found_to have the given value. Expressions can be negated by using the "!=" operator,_as in "myParam!=myValue". "myParam" style expressions are also supported,_with such parameters having to be present in the request (allowed to have_any value). Finally, "!myParam" style expressions indicate that the_specified parameter is <i>not</i> supposed to be present in the request._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this parameter restriction (i.e. the type-level restriction_gets checked before the handler method is even resolved)._<p>In a Servlet environment, parameter mappings are considered as restrictions_that are enforced at the type level. The primary path mapping (i.e. the_specified URI value) still has to uniquely identify the target handler, with_parameter mappings simply expressing preconditions for invoking the handler._<p>In a Portlet environment, parameters are taken into account as mapping_differentiators, i.e. the primary portlet mode mapping plus the parameter_conditions uniquely identify the target handler. Different handlers may be_mapped onto the same portlet mode, as long as their parameter mappings differ.;String[] params() default {}_;the,parameters,of,the,mapped,request,narrowing,the,primary,mapping,p,same,format,for,any,environment,a,sequence,of,my,param,my,value,style,expressions,with,a,request,only,mapped,if,each,such,parameter,is,found,to,have,the,given,value,expressions,can,be,negated,by,using,the,operator,as,in,my,param,my,value,my,param,style,expressions,are,also,supported,with,such,parameters,having,to,be,present,in,the,request,allowed,to,have,any,value,finally,my,param,style,expressions,indicate,that,the,specified,parameter,is,i,not,i,supposed,to,be,present,in,the,request,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,parameter,restriction,i,e,the,type,level,restriction,gets,checked,before,the,handler,method,is,even,resolved,p,in,a,servlet,environment,parameter,mappings,are,considered,as,restrictions,that,are,enforced,at,the,type,level,the,primary,path,mapping,i,e,the,specified,uri,value,still,has,to,uniquely,identify,the,target,handler,with,parameter,mappings,simply,expressing,preconditions,for,invoking,the,handler,p,in,a,portlet,environment,parameters,are,taken,into,account,as,mapping,differentiators,i,e,the,primary,portlet,mode,mapping,plus,the,parameter,conditions,uniquely,identify,the,target,handler,different,handlers,may,be,mapped,onto,the,same,portlet,mode,as,long,as,their,parameter,mappings,differ;string,params,default
RequestMapping -> String[] params() default {}_;1367955086;The parameters of the mapped request, narrowing the primary mapping._<p>Same format for any environment: a sequence of "myParam=myValue" style_expressions, with a request only mapped if each such parameter is found_to have the given value. Expressions can be negated by using the "!=" operator,_as in "myParam!=myValue". "myParam" style expressions are also supported,_with such parameters having to be present in the request (allowed to have_any value). Finally, "!myParam" style expressions indicate that the_specified parameter is <i>not</i> supposed to be present in the request._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this parameter restriction (i.e. the type-level restriction_gets checked before the handler method is even resolved)._<p>In a Servlet environment, parameter mappings are considered as restrictions_that are enforced at the type level. The primary path mapping (i.e. the_specified URI value) still has to uniquely identify the target handler, with_parameter mappings simply expressing preconditions for invoking the handler._<p>In a Portlet environment, parameters are taken into account as mapping_differentiators, i.e. the primary portlet mode mapping plus the parameter_conditions uniquely identify the target handler. Different handlers may be_mapped onto the same portlet mode, as long as their parameter mappings differ.;String[] params() default {}_;the,parameters,of,the,mapped,request,narrowing,the,primary,mapping,p,same,format,for,any,environment,a,sequence,of,my,param,my,value,style,expressions,with,a,request,only,mapped,if,each,such,parameter,is,found,to,have,the,given,value,expressions,can,be,negated,by,using,the,operator,as,in,my,param,my,value,my,param,style,expressions,are,also,supported,with,such,parameters,having,to,be,present,in,the,request,allowed,to,have,any,value,finally,my,param,style,expressions,indicate,that,the,specified,parameter,is,i,not,i,supposed,to,be,present,in,the,request,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,parameter,restriction,i,e,the,type,level,restriction,gets,checked,before,the,handler,method,is,even,resolved,p,in,a,servlet,environment,parameter,mappings,are,considered,as,restrictions,that,are,enforced,at,the,type,level,the,primary,path,mapping,i,e,the,specified,uri,value,still,has,to,uniquely,identify,the,target,handler,with,parameter,mappings,simply,expressing,preconditions,for,invoking,the,handler,p,in,a,portlet,environment,parameters,are,taken,into,account,as,mapping,differentiators,i,e,the,primary,portlet,mode,mapping,plus,the,parameter,conditions,uniquely,identify,the,target,handler,different,handlers,may,be,mapped,onto,the,same,portlet,mode,as,long,as,their,parameter,mappings,differ;string,params,default
RequestMapping -> String[] params() default {}_;1372363092;The parameters of the mapped request, narrowing the primary mapping._<p>Same format for any environment: a sequence of "myParam=myValue" style_expressions, with a request only mapped if each such parameter is found_to have the given value. Expressions can be negated by using the "!=" operator,_as in "myParam!=myValue". "myParam" style expressions are also supported,_with such parameters having to be present in the request (allowed to have_any value). Finally, "!myParam" style expressions indicate that the_specified parameter is <i>not</i> supposed to be present in the request._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this parameter restriction (i.e. the type-level restriction_gets checked before the handler method is even resolved)._<p>In a Servlet environment, parameter mappings are considered as restrictions_that are enforced at the type level. The primary path mapping (i.e. the_specified URI value) still has to uniquely identify the target handler, with_parameter mappings simply expressing preconditions for invoking the handler._<p>In a Portlet environment, parameters are taken into account as mapping_differentiators, i.e. the primary portlet mode mapping plus the parameter_conditions uniquely identify the target handler. Different handlers may be_mapped onto the same portlet mode, as long as their parameter mappings differ.;String[] params() default {}_;the,parameters,of,the,mapped,request,narrowing,the,primary,mapping,p,same,format,for,any,environment,a,sequence,of,my,param,my,value,style,expressions,with,a,request,only,mapped,if,each,such,parameter,is,found,to,have,the,given,value,expressions,can,be,negated,by,using,the,operator,as,in,my,param,my,value,my,param,style,expressions,are,also,supported,with,such,parameters,having,to,be,present,in,the,request,allowed,to,have,any,value,finally,my,param,style,expressions,indicate,that,the,specified,parameter,is,i,not,i,supposed,to,be,present,in,the,request,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,parameter,restriction,i,e,the,type,level,restriction,gets,checked,before,the,handler,method,is,even,resolved,p,in,a,servlet,environment,parameter,mappings,are,considered,as,restrictions,that,are,enforced,at,the,type,level,the,primary,path,mapping,i,e,the,specified,uri,value,still,has,to,uniquely,identify,the,target,handler,with,parameter,mappings,simply,expressing,preconditions,for,invoking,the,handler,p,in,a,portlet,environment,parameters,are,taken,into,account,as,mapping,differentiators,i,e,the,primary,portlet,mode,mapping,plus,the,parameter,conditions,uniquely,identify,the,target,handler,different,handlers,may,be,mapped,onto,the,same,portlet,mode,as,long,as,their,parameter,mappings,differ;string,params,default
RequestMapping -> String[] params() default {}_;1385501137;The parameters of the mapped request, narrowing the primary mapping._<p>Same format for any environment: a sequence of "myParam=myValue" style_expressions, with a request only mapped if each such parameter is found_to have the given value. Expressions can be negated by using the "!=" operator,_as in "myParam!=myValue". "myParam" style expressions are also supported,_with such parameters having to be present in the request (allowed to have_any value). Finally, "!myParam" style expressions indicate that the_specified parameter is <i>not</i> supposed to be present in the request._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this parameter restriction (i.e. the type-level restriction_gets checked before the handler method is even resolved)._<p>In a Servlet environment, parameter mappings are considered as restrictions_that are enforced at the type level. The primary path mapping (i.e. the_specified URI value) still has to uniquely identify the target handler, with_parameter mappings simply expressing preconditions for invoking the handler._<p>In a Portlet environment, parameters are taken into account as mapping_differentiators, i.e. the primary portlet mode mapping plus the parameter_conditions uniquely identify the target handler. Different handlers may be_mapped onto the same portlet mode, as long as their parameter mappings differ.;String[] params() default {}_;the,parameters,of,the,mapped,request,narrowing,the,primary,mapping,p,same,format,for,any,environment,a,sequence,of,my,param,my,value,style,expressions,with,a,request,only,mapped,if,each,such,parameter,is,found,to,have,the,given,value,expressions,can,be,negated,by,using,the,operator,as,in,my,param,my,value,my,param,style,expressions,are,also,supported,with,such,parameters,having,to,be,present,in,the,request,allowed,to,have,any,value,finally,my,param,style,expressions,indicate,that,the,specified,parameter,is,i,not,i,supposed,to,be,present,in,the,request,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,parameter,restriction,i,e,the,type,level,restriction,gets,checked,before,the,handler,method,is,even,resolved,p,in,a,servlet,environment,parameter,mappings,are,considered,as,restrictions,that,are,enforced,at,the,type,level,the,primary,path,mapping,i,e,the,specified,uri,value,still,has,to,uniquely,identify,the,target,handler,with,parameter,mappings,simply,expressing,preconditions,for,invoking,the,handler,p,in,a,portlet,environment,parameters,are,taken,into,account,as,mapping,differentiators,i,e,the,primary,portlet,mode,mapping,plus,the,parameter,conditions,uniquely,identify,the,target,handler,different,handlers,may,be,mapped,onto,the,same,portlet,mode,as,long,as,their,parameter,mappings,differ;string,params,default
RequestMapping -> String[] params() default {}_;1390272537;The parameters of the mapped request, narrowing the primary mapping._<p>Same format for any environment: a sequence of "myParam=myValue" style_expressions, with a request only mapped if each such parameter is found_to have the given value. Expressions can be negated by using the "!=" operator,_as in "myParam!=myValue". "myParam" style expressions are also supported,_with such parameters having to be present in the request (allowed to have_any value). Finally, "!myParam" style expressions indicate that the_specified parameter is <i>not</i> supposed to be present in the request._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this parameter restriction (i.e. the type-level restriction_gets checked before the handler method is even resolved)._<p>In a Servlet environment, parameter mappings are considered as restrictions_that are enforced at the type level. The primary path mapping (i.e. the_specified URI value) still has to uniquely identify the target handler, with_parameter mappings simply expressing preconditions for invoking the handler._<p>In a Portlet environment, parameters are taken into account as mapping_differentiators, i.e. the primary portlet mode mapping plus the parameter_conditions uniquely identify the target handler. Different handlers may be_mapped onto the same portlet mode, as long as their parameter mappings differ.;String[] params() default {}_;the,parameters,of,the,mapped,request,narrowing,the,primary,mapping,p,same,format,for,any,environment,a,sequence,of,my,param,my,value,style,expressions,with,a,request,only,mapped,if,each,such,parameter,is,found,to,have,the,given,value,expressions,can,be,negated,by,using,the,operator,as,in,my,param,my,value,my,param,style,expressions,are,also,supported,with,such,parameters,having,to,be,present,in,the,request,allowed,to,have,any,value,finally,my,param,style,expressions,indicate,that,the,specified,parameter,is,i,not,i,supposed,to,be,present,in,the,request,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,parameter,restriction,i,e,the,type,level,restriction,gets,checked,before,the,handler,method,is,even,resolved,p,in,a,servlet,environment,parameter,mappings,are,considered,as,restrictions,that,are,enforced,at,the,type,level,the,primary,path,mapping,i,e,the,specified,uri,value,still,has,to,uniquely,identify,the,target,handler,with,parameter,mappings,simply,expressing,preconditions,for,invoking,the,handler,p,in,a,portlet,environment,parameters,are,taken,into,account,as,mapping,differentiators,i,e,the,primary,portlet,mode,mapping,plus,the,parameter,conditions,uniquely,identify,the,target,handler,different,handlers,may,be,mapped,onto,the,same,portlet,mode,as,long,as,their,parameter,mappings,differ;string,params,default
RequestMapping -> String[] params() default {}_;1392311784;The parameters of the mapped request, narrowing the primary mapping._<p>Same format for any environment: a sequence of "myParam=myValue" style_expressions, with a request only mapped if each such parameter is found_to have the given value. Expressions can be negated by using the "!=" operator,_as in "myParam!=myValue". "myParam" style expressions are also supported,_with such parameters having to be present in the request (allowed to have_any value). Finally, "!myParam" style expressions indicate that the_specified parameter is <i>not</i> supposed to be present in the request._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this parameter restriction (i.e. the type-level restriction_gets checked before the handler method is even resolved)._<p>In a Servlet environment, parameter mappings are considered as restrictions_that are enforced at the type level. The primary path mapping (i.e. the_specified URI value) still has to uniquely identify the target handler, with_parameter mappings simply expressing preconditions for invoking the handler._<p>In a Portlet environment, parameters are taken into account as mapping_differentiators, i.e. the primary portlet mode mapping plus the parameter_conditions uniquely identify the target handler. Different handlers may be_mapped onto the same portlet mode, as long as their parameter mappings differ.;String[] params() default {}_;the,parameters,of,the,mapped,request,narrowing,the,primary,mapping,p,same,format,for,any,environment,a,sequence,of,my,param,my,value,style,expressions,with,a,request,only,mapped,if,each,such,parameter,is,found,to,have,the,given,value,expressions,can,be,negated,by,using,the,operator,as,in,my,param,my,value,my,param,style,expressions,are,also,supported,with,such,parameters,having,to,be,present,in,the,request,allowed,to,have,any,value,finally,my,param,style,expressions,indicate,that,the,specified,parameter,is,i,not,i,supposed,to,be,present,in,the,request,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,parameter,restriction,i,e,the,type,level,restriction,gets,checked,before,the,handler,method,is,even,resolved,p,in,a,servlet,environment,parameter,mappings,are,considered,as,restrictions,that,are,enforced,at,the,type,level,the,primary,path,mapping,i,e,the,specified,uri,value,still,has,to,uniquely,identify,the,target,handler,with,parameter,mappings,simply,expressing,preconditions,for,invoking,the,handler,p,in,a,portlet,environment,parameters,are,taken,into,account,as,mapping,differentiators,i,e,the,primary,portlet,mode,mapping,plus,the,parameter,conditions,uniquely,identify,the,target,handler,different,handlers,may,be,mapped,onto,the,same,portlet,mode,as,long,as,their,parameter,mappings,differ;string,params,default
RequestMapping -> String[] params() default {}_;1398737597;The parameters of the mapped request, narrowing the primary mapping._<p>Same format for any environment: a sequence of "myParam=myValue" style_expressions, with a request only mapped if each such parameter is found_to have the given value. Expressions can be negated by using the "!=" operator,_as in "myParam!=myValue". "myParam" style expressions are also supported,_with such parameters having to be present in the request (allowed to have_any value). Finally, "!myParam" style expressions indicate that the_specified parameter is <i>not</i> supposed to be present in the request._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this parameter restriction (i.e. the type-level restriction_gets checked before the handler method is even resolved)._<p>In a Servlet environment, parameter mappings are considered as restrictions_that are enforced at the type level. The primary path mapping (i.e. the_specified URI value) still has to uniquely identify the target handler, with_parameter mappings simply expressing preconditions for invoking the handler._<p>In a Portlet environment, parameters are taken into account as mapping_differentiators, i.e. the primary portlet mode mapping plus the parameter_conditions uniquely identify the target handler. Different handlers may be_mapped onto the same portlet mode, as long as their parameter mappings differ.;String[] params() default {}_;the,parameters,of,the,mapped,request,narrowing,the,primary,mapping,p,same,format,for,any,environment,a,sequence,of,my,param,my,value,style,expressions,with,a,request,only,mapped,if,each,such,parameter,is,found,to,have,the,given,value,expressions,can,be,negated,by,using,the,operator,as,in,my,param,my,value,my,param,style,expressions,are,also,supported,with,such,parameters,having,to,be,present,in,the,request,allowed,to,have,any,value,finally,my,param,style,expressions,indicate,that,the,specified,parameter,is,i,not,i,supposed,to,be,present,in,the,request,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,parameter,restriction,i,e,the,type,level,restriction,gets,checked,before,the,handler,method,is,even,resolved,p,in,a,servlet,environment,parameter,mappings,are,considered,as,restrictions,that,are,enforced,at,the,type,level,the,primary,path,mapping,i,e,the,specified,uri,value,still,has,to,uniquely,identify,the,target,handler,with,parameter,mappings,simply,expressing,preconditions,for,invoking,the,handler,p,in,a,portlet,environment,parameters,are,taken,into,account,as,mapping,differentiators,i,e,the,primary,portlet,mode,mapping,plus,the,parameter,conditions,uniquely,identify,the,target,handler,different,handlers,may,be,mapped,onto,the,same,portlet,mode,as,long,as,their,parameter,mappings,differ;string,params,default
RequestMapping -> String[] params() default {}_;1398961739;The parameters of the mapped request, narrowing the primary mapping._<p>Same format for any environment: a sequence of "myParam=myValue" style_expressions, with a request only mapped if each such parameter is found_to have the given value. Expressions can be negated by using the "!=" operator,_as in "myParam!=myValue". "myParam" style expressions are also supported,_with such parameters having to be present in the request (allowed to have_any value). Finally, "!myParam" style expressions indicate that the_specified parameter is <i>not</i> supposed to be present in the request._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this parameter restriction (i.e. the type-level restriction_gets checked before the handler method is even resolved)._<p>In a Servlet environment, parameter mappings are considered as restrictions_that are enforced at the type level. The primary path mapping (i.e. the_specified URI value) still has to uniquely identify the target handler, with_parameter mappings simply expressing preconditions for invoking the handler._<p>In a Portlet environment, parameters are taken into account as mapping_differentiators, i.e. the primary portlet mode mapping plus the parameter_conditions uniquely identify the target handler. Different handlers may be_mapped onto the same portlet mode, as long as their parameter mappings differ.;String[] params() default {}_;the,parameters,of,the,mapped,request,narrowing,the,primary,mapping,p,same,format,for,any,environment,a,sequence,of,my,param,my,value,style,expressions,with,a,request,only,mapped,if,each,such,parameter,is,found,to,have,the,given,value,expressions,can,be,negated,by,using,the,operator,as,in,my,param,my,value,my,param,style,expressions,are,also,supported,with,such,parameters,having,to,be,present,in,the,request,allowed,to,have,any,value,finally,my,param,style,expressions,indicate,that,the,specified,parameter,is,i,not,i,supposed,to,be,present,in,the,request,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,parameter,restriction,i,e,the,type,level,restriction,gets,checked,before,the,handler,method,is,even,resolved,p,in,a,servlet,environment,parameter,mappings,are,considered,as,restrictions,that,are,enforced,at,the,type,level,the,primary,path,mapping,i,e,the,specified,uri,value,still,has,to,uniquely,identify,the,target,handler,with,parameter,mappings,simply,expressing,preconditions,for,invoking,the,handler,p,in,a,portlet,environment,parameters,are,taken,into,account,as,mapping,differentiators,i,e,the,primary,portlet,mode,mapping,plus,the,parameter,conditions,uniquely,identify,the,target,handler,different,handlers,may,be,mapped,onto,the,same,portlet,mode,as,long,as,their,parameter,mappings,differ;string,params,default
RequestMapping -> String[] params() default {}_;1399404473;The parameters of the mapped request, narrowing the primary mapping._<p>Same format for any environment: a sequence of "myParam=myValue" style_expressions, with a request only mapped if each such parameter is found_to have the given value. Expressions can be negated by using the "!=" operator,_as in "myParam!=myValue". "myParam" style expressions are also supported,_with such parameters having to be present in the request (allowed to have_any value). Finally, "!myParam" style expressions indicate that the_specified parameter is <i>not</i> supposed to be present in the request._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this parameter restriction (i.e. the type-level restriction_gets checked before the handler method is even resolved)._<p>In a Servlet environment, parameter mappings are considered as restrictions_that are enforced at the type level. The primary path mapping (i.e. the_specified URI value) still has to uniquely identify the target handler, with_parameter mappings simply expressing preconditions for invoking the handler._<p>In a Portlet environment, parameters are taken into account as mapping_differentiators, i.e. the primary portlet mode mapping plus the parameter_conditions uniquely identify the target handler. Different handlers may be_mapped onto the same portlet mode, as long as their parameter mappings differ.;String[] params() default {}_;the,parameters,of,the,mapped,request,narrowing,the,primary,mapping,p,same,format,for,any,environment,a,sequence,of,my,param,my,value,style,expressions,with,a,request,only,mapped,if,each,such,parameter,is,found,to,have,the,given,value,expressions,can,be,negated,by,using,the,operator,as,in,my,param,my,value,my,param,style,expressions,are,also,supported,with,such,parameters,having,to,be,present,in,the,request,allowed,to,have,any,value,finally,my,param,style,expressions,indicate,that,the,specified,parameter,is,i,not,i,supposed,to,be,present,in,the,request,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,parameter,restriction,i,e,the,type,level,restriction,gets,checked,before,the,handler,method,is,even,resolved,p,in,a,servlet,environment,parameter,mappings,are,considered,as,restrictions,that,are,enforced,at,the,type,level,the,primary,path,mapping,i,e,the,specified,uri,value,still,has,to,uniquely,identify,the,target,handler,with,parameter,mappings,simply,expressing,preconditions,for,invoking,the,handler,p,in,a,portlet,environment,parameters,are,taken,into,account,as,mapping,differentiators,i,e,the,primary,portlet,mode,mapping,plus,the,parameter,conditions,uniquely,identify,the,target,handler,different,handlers,may,be,mapped,onto,the,same,portlet,mode,as,long,as,their,parameter,mappings,differ;string,params,default
RequestMapping -> String[] params() default {}_;1403791284;The parameters of the mapped request, narrowing the primary mapping._<p>Same format for any environment: a sequence of "myParam=myValue" style_expressions, with a request only mapped if each such parameter is found_to have the given value. Expressions can be negated by using the "!=" operator,_as in "myParam!=myValue". "myParam" style expressions are also supported,_with such parameters having to be present in the request (allowed to have_any value). Finally, "!myParam" style expressions indicate that the_specified parameter is <i>not</i> supposed to be present in the request._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this parameter restriction (i.e. the type-level restriction_gets checked before the handler method is even resolved)._<p>In a Servlet environment, parameter mappings are considered as restrictions_that are enforced at the type level. The primary path mapping (i.e. the_specified URI value) still has to uniquely identify the target handler, with_parameter mappings simply expressing preconditions for invoking the handler._<p>In a Portlet environment, parameters are taken into account as mapping_differentiators, i.e. the primary portlet mode mapping plus the parameter_conditions uniquely identify the target handler. Different handlers may be_mapped onto the same portlet mode, as long as their parameter mappings differ.;String[] params() default {}_;the,parameters,of,the,mapped,request,narrowing,the,primary,mapping,p,same,format,for,any,environment,a,sequence,of,my,param,my,value,style,expressions,with,a,request,only,mapped,if,each,such,parameter,is,found,to,have,the,given,value,expressions,can,be,negated,by,using,the,operator,as,in,my,param,my,value,my,param,style,expressions,are,also,supported,with,such,parameters,having,to,be,present,in,the,request,allowed,to,have,any,value,finally,my,param,style,expressions,indicate,that,the,specified,parameter,is,i,not,i,supposed,to,be,present,in,the,request,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,parameter,restriction,i,e,the,type,level,restriction,gets,checked,before,the,handler,method,is,even,resolved,p,in,a,servlet,environment,parameter,mappings,are,considered,as,restrictions,that,are,enforced,at,the,type,level,the,primary,path,mapping,i,e,the,specified,uri,value,still,has,to,uniquely,identify,the,target,handler,with,parameter,mappings,simply,expressing,preconditions,for,invoking,the,handler,p,in,a,portlet,environment,parameters,are,taken,into,account,as,mapping,differentiators,i,e,the,primary,portlet,mode,mapping,plus,the,parameter,conditions,uniquely,identify,the,target,handler,different,handlers,may,be,mapped,onto,the,same,portlet,mode,as,long,as,their,parameter,mappings,differ;string,params,default
RequestMapping -> String[] params() default {}_;1411403899;The parameters of the mapped request, narrowing the primary mapping._<p>Same format for any environment: a sequence of "myParam=myValue" style_expressions, with a request only mapped if each such parameter is found_to have the given value. Expressions can be negated by using the "!=" operator,_as in "myParam!=myValue". "myParam" style expressions are also supported,_with such parameters having to be present in the request (allowed to have_any value). Finally, "!myParam" style expressions indicate that the_specified parameter is <i>not</i> supposed to be present in the request._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this parameter restriction (i.e. the type-level restriction_gets checked before the handler method is even resolved)._<p>In a Servlet environment, parameter mappings are considered as restrictions_that are enforced at the type level. The primary path mapping (i.e. the_specified URI value) still has to uniquely identify the target handler, with_parameter mappings simply expressing preconditions for invoking the handler._<p>In a Portlet environment, parameters are taken into account as mapping_differentiators, i.e. the primary portlet mode mapping plus the parameter_conditions uniquely identify the target handler. Different handlers may be_mapped onto the same portlet mode, as long as their parameter mappings differ.;String[] params() default {}_;the,parameters,of,the,mapped,request,narrowing,the,primary,mapping,p,same,format,for,any,environment,a,sequence,of,my,param,my,value,style,expressions,with,a,request,only,mapped,if,each,such,parameter,is,found,to,have,the,given,value,expressions,can,be,negated,by,using,the,operator,as,in,my,param,my,value,my,param,style,expressions,are,also,supported,with,such,parameters,having,to,be,present,in,the,request,allowed,to,have,any,value,finally,my,param,style,expressions,indicate,that,the,specified,parameter,is,i,not,i,supposed,to,be,present,in,the,request,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,parameter,restriction,i,e,the,type,level,restriction,gets,checked,before,the,handler,method,is,even,resolved,p,in,a,servlet,environment,parameter,mappings,are,considered,as,restrictions,that,are,enforced,at,the,type,level,the,primary,path,mapping,i,e,the,specified,uri,value,still,has,to,uniquely,identify,the,target,handler,with,parameter,mappings,simply,expressing,preconditions,for,invoking,the,handler,p,in,a,portlet,environment,parameters,are,taken,into,account,as,mapping,differentiators,i,e,the,primary,portlet,mode,mapping,plus,the,parameter,conditions,uniquely,identify,the,target,handler,different,handlers,may,be,mapped,onto,the,same,portlet,mode,as,long,as,their,parameter,mappings,differ;string,params,default
RequestMapping -> String[] params() default {}_;1411728985;The parameters of the mapped request, narrowing the primary mapping._<p>Same format for any environment: a sequence of "myParam=myValue" style_expressions, with a request only mapped if each such parameter is found_to have the given value. Expressions can be negated by using the "!=" operator,_as in "myParam!=myValue". "myParam" style expressions are also supported,_with such parameters having to be present in the request (allowed to have_any value). Finally, "!myParam" style expressions indicate that the_specified parameter is <i>not</i> supposed to be present in the request._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this parameter restriction (i.e. the type-level restriction_gets checked before the handler method is even resolved)._<p>In a Servlet environment, parameter mappings are considered as restrictions_that are enforced at the type level. The primary path mapping (i.e. the_specified URI value) still has to uniquely identify the target handler, with_parameter mappings simply expressing preconditions for invoking the handler._<p>In a Portlet environment, parameters are taken into account as mapping_differentiators, i.e. the primary portlet mode mapping plus the parameter_conditions uniquely identify the target handler. Different handlers may be_mapped onto the same portlet mode, as long as their parameter mappings differ.;String[] params() default {}_;the,parameters,of,the,mapped,request,narrowing,the,primary,mapping,p,same,format,for,any,environment,a,sequence,of,my,param,my,value,style,expressions,with,a,request,only,mapped,if,each,such,parameter,is,found,to,have,the,given,value,expressions,can,be,negated,by,using,the,operator,as,in,my,param,my,value,my,param,style,expressions,are,also,supported,with,such,parameters,having,to,be,present,in,the,request,allowed,to,have,any,value,finally,my,param,style,expressions,indicate,that,the,specified,parameter,is,i,not,i,supposed,to,be,present,in,the,request,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,parameter,restriction,i,e,the,type,level,restriction,gets,checked,before,the,handler,method,is,even,resolved,p,in,a,servlet,environment,parameter,mappings,are,considered,as,restrictions,that,are,enforced,at,the,type,level,the,primary,path,mapping,i,e,the,specified,uri,value,still,has,to,uniquely,identify,the,target,handler,with,parameter,mappings,simply,expressing,preconditions,for,invoking,the,handler,p,in,a,portlet,environment,parameters,are,taken,into,account,as,mapping,differentiators,i,e,the,primary,portlet,mode,mapping,plus,the,parameter,conditions,uniquely,identify,the,target,handler,different,handlers,may,be,mapped,onto,the,same,portlet,mode,as,long,as,their,parameter,mappings,differ;string,params,default
RequestMapping -> String[] params() default {}_;1414097580;The parameters of the mapped request, narrowing the primary mapping._<p>Same format for any environment: a sequence of "myParam=myValue" style_expressions, with a request only mapped if each such parameter is found_to have the given value. Expressions can be negated by using the "!=" operator,_as in "myParam!=myValue". "myParam" style expressions are also supported,_with such parameters having to be present in the request (allowed to have_any value). Finally, "!myParam" style expressions indicate that the_specified parameter is <i>not</i> supposed to be present in the request._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this parameter restriction (i.e. the type-level restriction_gets checked before the handler method is even resolved)._<p>In a Servlet environment, parameter mappings are considered as restrictions_that are enforced at the type level. The primary path mapping (i.e. the_specified URI value) still has to uniquely identify the target handler, with_parameter mappings simply expressing preconditions for invoking the handler._<p>In a Portlet environment, parameters are taken into account as mapping_differentiators, i.e. the primary portlet mode mapping plus the parameter_conditions uniquely identify the target handler. Different handlers may be_mapped onto the same portlet mode, as long as their parameter mappings differ.;String[] params() default {}_;the,parameters,of,the,mapped,request,narrowing,the,primary,mapping,p,same,format,for,any,environment,a,sequence,of,my,param,my,value,style,expressions,with,a,request,only,mapped,if,each,such,parameter,is,found,to,have,the,given,value,expressions,can,be,negated,by,using,the,operator,as,in,my,param,my,value,my,param,style,expressions,are,also,supported,with,such,parameters,having,to,be,present,in,the,request,allowed,to,have,any,value,finally,my,param,style,expressions,indicate,that,the,specified,parameter,is,i,not,i,supposed,to,be,present,in,the,request,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,parameter,restriction,i,e,the,type,level,restriction,gets,checked,before,the,handler,method,is,even,resolved,p,in,a,servlet,environment,parameter,mappings,are,considered,as,restrictions,that,are,enforced,at,the,type,level,the,primary,path,mapping,i,e,the,specified,uri,value,still,has,to,uniquely,identify,the,target,handler,with,parameter,mappings,simply,expressing,preconditions,for,invoking,the,handler,p,in,a,portlet,environment,parameters,are,taken,into,account,as,mapping,differentiators,i,e,the,primary,portlet,mode,mapping,plus,the,parameter,conditions,uniquely,identify,the,target,handler,different,handlers,may,be,mapped,onto,the,same,portlet,mode,as,long,as,their,parameter,mappings,differ;string,params,default
RequestMapping -> String[] params() default {}_;1414155598;The parameters of the mapped request, narrowing the primary mapping._<p>Same format for any environment: a sequence of "myParam=myValue" style_expressions, with a request only mapped if each such parameter is found_to have the given value. Expressions can be negated by using the "!=" operator,_as in "myParam!=myValue". "myParam" style expressions are also supported,_with such parameters having to be present in the request (allowed to have_any value). Finally, "!myParam" style expressions indicate that the_specified parameter is <i>not</i> supposed to be present in the request._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this parameter restriction (i.e. the type-level restriction_gets checked before the handler method is even resolved)._<p>In a Servlet environment, parameter mappings are considered as restrictions_that are enforced at the type level. The primary path mapping (i.e. the_specified URI value) still has to uniquely identify the target handler, with_parameter mappings simply expressing preconditions for invoking the handler._<p>In a Portlet environment, parameters are taken into account as mapping_differentiators, i.e. the primary portlet mode mapping plus the parameter_conditions uniquely identify the target handler. Different handlers may be_mapped onto the same portlet mode, as long as their parameter mappings differ.;String[] params() default {}_;the,parameters,of,the,mapped,request,narrowing,the,primary,mapping,p,same,format,for,any,environment,a,sequence,of,my,param,my,value,style,expressions,with,a,request,only,mapped,if,each,such,parameter,is,found,to,have,the,given,value,expressions,can,be,negated,by,using,the,operator,as,in,my,param,my,value,my,param,style,expressions,are,also,supported,with,such,parameters,having,to,be,present,in,the,request,allowed,to,have,any,value,finally,my,param,style,expressions,indicate,that,the,specified,parameter,is,i,not,i,supposed,to,be,present,in,the,request,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,parameter,restriction,i,e,the,type,level,restriction,gets,checked,before,the,handler,method,is,even,resolved,p,in,a,servlet,environment,parameter,mappings,are,considered,as,restrictions,that,are,enforced,at,the,type,level,the,primary,path,mapping,i,e,the,specified,uri,value,still,has,to,uniquely,identify,the,target,handler,with,parameter,mappings,simply,expressing,preconditions,for,invoking,the,handler,p,in,a,portlet,environment,parameters,are,taken,into,account,as,mapping,differentiators,i,e,the,primary,portlet,mode,mapping,plus,the,parameter,conditions,uniquely,identify,the,target,handler,different,handlers,may,be,mapped,onto,the,same,portlet,mode,as,long,as,their,parameter,mappings,differ;string,params,default
RequestMapping -> String[] params() default {}_;1422572109;The parameters of the mapped request, narrowing the primary mapping._<p>Same format for any environment: a sequence of "myParam=myValue" style_expressions, with a request only mapped if each such parameter is found_to have the given value. Expressions can be negated by using the "!=" operator,_as in "myParam!=myValue". "myParam" style expressions are also supported,_with such parameters having to be present in the request (allowed to have_any value). Finally, "!myParam" style expressions indicate that the_specified parameter is <i>not</i> supposed to be present in the request._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this parameter restriction (i.e. the type-level restriction_gets checked before the handler method is even resolved)._<p>In a Servlet environment, parameter mappings are considered as restrictions_that are enforced at the type level. The primary path mapping (i.e. the_specified URI value) still has to uniquely identify the target handler, with_parameter mappings simply expressing preconditions for invoking the handler._<p>In a Portlet environment, parameters are taken into account as mapping_differentiators, i.e. the primary portlet mode mapping plus the parameter_conditions uniquely identify the target handler. Different handlers may be_mapped onto the same portlet mode, as long as their parameter mappings differ.;String[] params() default {}_;the,parameters,of,the,mapped,request,narrowing,the,primary,mapping,p,same,format,for,any,environment,a,sequence,of,my,param,my,value,style,expressions,with,a,request,only,mapped,if,each,such,parameter,is,found,to,have,the,given,value,expressions,can,be,negated,by,using,the,operator,as,in,my,param,my,value,my,param,style,expressions,are,also,supported,with,such,parameters,having,to,be,present,in,the,request,allowed,to,have,any,value,finally,my,param,style,expressions,indicate,that,the,specified,parameter,is,i,not,i,supposed,to,be,present,in,the,request,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,parameter,restriction,i,e,the,type,level,restriction,gets,checked,before,the,handler,method,is,even,resolved,p,in,a,servlet,environment,parameter,mappings,are,considered,as,restrictions,that,are,enforced,at,the,type,level,the,primary,path,mapping,i,e,the,specified,uri,value,still,has,to,uniquely,identify,the,target,handler,with,parameter,mappings,simply,expressing,preconditions,for,invoking,the,handler,p,in,a,portlet,environment,parameters,are,taken,into,account,as,mapping,differentiators,i,e,the,primary,portlet,mode,mapping,plus,the,parameter,conditions,uniquely,identify,the,target,handler,different,handlers,may,be,mapped,onto,the,same,portlet,mode,as,long,as,their,parameter,mappings,differ;string,params,default
RequestMapping -> String[] params() default {}_;1427139532;The parameters of the mapped request, narrowing the primary mapping._<p>Same format for any environment: a sequence of "myParam=myValue" style_expressions, with a request only mapped if each such parameter is found_to have the given value. Expressions can be negated by using the "!=" operator,_as in "myParam!=myValue". "myParam" style expressions are also supported,_with such parameters having to be present in the request (allowed to have_any value). Finally, "!myParam" style expressions indicate that the_specified parameter is <i>not</i> supposed to be present in the request._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this parameter restriction (i.e. the type-level restriction_gets checked before the handler method is even resolved)._<p>In a Servlet environment, parameter mappings are considered as restrictions_that are enforced at the type level. The primary path mapping (i.e. the_specified URI value) still has to uniquely identify the target handler, with_parameter mappings simply expressing preconditions for invoking the handler._<p>In a Portlet environment, parameters are taken into account as mapping_differentiators, i.e. the primary portlet mode mapping plus the parameter_conditions uniquely identify the target handler. Different handlers may be_mapped onto the same portlet mode, as long as their parameter mappings differ.;String[] params() default {}_;the,parameters,of,the,mapped,request,narrowing,the,primary,mapping,p,same,format,for,any,environment,a,sequence,of,my,param,my,value,style,expressions,with,a,request,only,mapped,if,each,such,parameter,is,found,to,have,the,given,value,expressions,can,be,negated,by,using,the,operator,as,in,my,param,my,value,my,param,style,expressions,are,also,supported,with,such,parameters,having,to,be,present,in,the,request,allowed,to,have,any,value,finally,my,param,style,expressions,indicate,that,the,specified,parameter,is,i,not,i,supposed,to,be,present,in,the,request,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,parameter,restriction,i,e,the,type,level,restriction,gets,checked,before,the,handler,method,is,even,resolved,p,in,a,servlet,environment,parameter,mappings,are,considered,as,restrictions,that,are,enforced,at,the,type,level,the,primary,path,mapping,i,e,the,specified,uri,value,still,has,to,uniquely,identify,the,target,handler,with,parameter,mappings,simply,expressing,preconditions,for,invoking,the,handler,p,in,a,portlet,environment,parameters,are,taken,into,account,as,mapping,differentiators,i,e,the,primary,portlet,mode,mapping,plus,the,parameter,conditions,uniquely,identify,the,target,handler,different,handlers,may,be,mapped,onto,the,same,portlet,mode,as,long,as,their,parameter,mappings,differ;string,params,default
RequestMapping -> String[] params() default {}_;1429532371;The parameters of the mapped request, narrowing the primary mapping._<p>Same format for any environment: a sequence of "myParam=myValue" style_expressions, with a request only mapped if each such parameter is found_to have the given value. Expressions can be negated by using the "!=" operator,_as in "myParam!=myValue". "myParam" style expressions are also supported,_with such parameters having to be present in the request (allowed to have_any value). Finally, "!myParam" style expressions indicate that the_specified parameter is <i>not</i> supposed to be present in the request._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this parameter restriction (i.e. the type-level restriction_gets checked before the handler method is even resolved)._<p>In a Servlet environment, parameter mappings are considered as restrictions_that are enforced at the type level. The primary path mapping (i.e. the_specified URI value) still has to uniquely identify the target handler, with_parameter mappings simply expressing preconditions for invoking the handler._<p>In a Portlet environment, parameters are taken into account as mapping_differentiators, i.e. the primary portlet mode mapping plus the parameter_conditions uniquely identify the target handler. Different handlers may be_mapped onto the same portlet mode, as long as their parameter mappings differ.;String[] params() default {}_;the,parameters,of,the,mapped,request,narrowing,the,primary,mapping,p,same,format,for,any,environment,a,sequence,of,my,param,my,value,style,expressions,with,a,request,only,mapped,if,each,such,parameter,is,found,to,have,the,given,value,expressions,can,be,negated,by,using,the,operator,as,in,my,param,my,value,my,param,style,expressions,are,also,supported,with,such,parameters,having,to,be,present,in,the,request,allowed,to,have,any,value,finally,my,param,style,expressions,indicate,that,the,specified,parameter,is,i,not,i,supposed,to,be,present,in,the,request,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,parameter,restriction,i,e,the,type,level,restriction,gets,checked,before,the,handler,method,is,even,resolved,p,in,a,servlet,environment,parameter,mappings,are,considered,as,restrictions,that,are,enforced,at,the,type,level,the,primary,path,mapping,i,e,the,specified,uri,value,still,has,to,uniquely,identify,the,target,handler,with,parameter,mappings,simply,expressing,preconditions,for,invoking,the,handler,p,in,a,portlet,environment,parameters,are,taken,into,account,as,mapping,differentiators,i,e,the,primary,portlet,mode,mapping,plus,the,parameter,conditions,uniquely,identify,the,target,handler,different,handlers,may,be,mapped,onto,the,same,portlet,mode,as,long,as,their,parameter,mappings,differ;string,params,default
RequestMapping -> String[] params() default {}_;1429886024;The parameters of the mapped request, narrowing the primary mapping._<p>Same format for any environment: a sequence of "myParam=myValue" style_expressions, with a request only mapped if each such parameter is found_to have the given value. Expressions can be negated by using the "!=" operator,_as in "myParam!=myValue". "myParam" style expressions are also supported,_with such parameters having to be present in the request (allowed to have_any value). Finally, "!myParam" style expressions indicate that the_specified parameter is <i>not</i> supposed to be present in the request._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this parameter restriction (i.e. the type-level restriction_gets checked before the handler method is even resolved)._<p>In a Servlet environment, parameter mappings are considered as restrictions_that are enforced at the type level. The primary path mapping (i.e. the_specified URI value) still has to uniquely identify the target handler, with_parameter mappings simply expressing preconditions for invoking the handler._<p>In a Portlet environment, parameters are taken into account as mapping_differentiators, i.e. the primary portlet mode mapping plus the parameter_conditions uniquely identify the target handler. Different handlers may be_mapped onto the same portlet mode, as long as their parameter mappings differ.;String[] params() default {}_;the,parameters,of,the,mapped,request,narrowing,the,primary,mapping,p,same,format,for,any,environment,a,sequence,of,my,param,my,value,style,expressions,with,a,request,only,mapped,if,each,such,parameter,is,found,to,have,the,given,value,expressions,can,be,negated,by,using,the,operator,as,in,my,param,my,value,my,param,style,expressions,are,also,supported,with,such,parameters,having,to,be,present,in,the,request,allowed,to,have,any,value,finally,my,param,style,expressions,indicate,that,the,specified,parameter,is,i,not,i,supposed,to,be,present,in,the,request,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,parameter,restriction,i,e,the,type,level,restriction,gets,checked,before,the,handler,method,is,even,resolved,p,in,a,servlet,environment,parameter,mappings,are,considered,as,restrictions,that,are,enforced,at,the,type,level,the,primary,path,mapping,i,e,the,specified,uri,value,still,has,to,uniquely,identify,the,target,handler,with,parameter,mappings,simply,expressing,preconditions,for,invoking,the,handler,p,in,a,portlet,environment,parameters,are,taken,into,account,as,mapping,differentiators,i,e,the,primary,portlet,mode,mapping,plus,the,parameter,conditions,uniquely,identify,the,target,handler,different,handlers,may,be,mapped,onto,the,same,portlet,mode,as,long,as,their,parameter,mappings,differ;string,params,default
RequestMapping -> String[] params() default {}_;1432246071;The parameters of the mapped request, narrowing the primary mapping._<p>Same format for any environment: a sequence of "myParam=myValue" style_expressions, with a request only mapped if each such parameter is found_to have the given value. Expressions can be negated by using the "!=" operator,_as in "myParam!=myValue". "myParam" style expressions are also supported,_with such parameters having to be present in the request (allowed to have_any value). Finally, "!myParam" style expressions indicate that the_specified parameter is <i>not</i> supposed to be present in the request._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this parameter restriction (i.e. the type-level restriction_gets checked before the handler method is even resolved)._<p>In a Servlet environment, parameter mappings are considered as restrictions_that are enforced at the type level. The primary path mapping (i.e. the_specified URI value) still has to uniquely identify the target handler, with_parameter mappings simply expressing preconditions for invoking the handler._<p>In a Portlet environment, parameters are taken into account as mapping_differentiators, i.e. the primary portlet mode mapping plus the parameter_conditions uniquely identify the target handler. Different handlers may be_mapped onto the same portlet mode, as long as their parameter mappings differ.;String[] params() default {}_;the,parameters,of,the,mapped,request,narrowing,the,primary,mapping,p,same,format,for,any,environment,a,sequence,of,my,param,my,value,style,expressions,with,a,request,only,mapped,if,each,such,parameter,is,found,to,have,the,given,value,expressions,can,be,negated,by,using,the,operator,as,in,my,param,my,value,my,param,style,expressions,are,also,supported,with,such,parameters,having,to,be,present,in,the,request,allowed,to,have,any,value,finally,my,param,style,expressions,indicate,that,the,specified,parameter,is,i,not,i,supposed,to,be,present,in,the,request,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,parameter,restriction,i,e,the,type,level,restriction,gets,checked,before,the,handler,method,is,even,resolved,p,in,a,servlet,environment,parameter,mappings,are,considered,as,restrictions,that,are,enforced,at,the,type,level,the,primary,path,mapping,i,e,the,specified,uri,value,still,has,to,uniquely,identify,the,target,handler,with,parameter,mappings,simply,expressing,preconditions,for,invoking,the,handler,p,in,a,portlet,environment,parameters,are,taken,into,account,as,mapping,differentiators,i,e,the,primary,portlet,mode,mapping,plus,the,parameter,conditions,uniquely,identify,the,target,handler,different,handlers,may,be,mapped,onto,the,same,portlet,mode,as,long,as,their,parameter,mappings,differ;string,params,default
RequestMapping -> String[] params() default {}_;1438176426;The parameters of the mapped request, narrowing the primary mapping._<p>Same format for any environment: a sequence of "myParam=myValue" style_expressions, with a request only mapped if each such parameter is found_to have the given value. Expressions can be negated by using the "!=" operator,_as in "myParam!=myValue". "myParam" style expressions are also supported,_with such parameters having to be present in the request (allowed to have_any value). Finally, "!myParam" style expressions indicate that the_specified parameter is <i>not</i> supposed to be present in the request._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this parameter restriction (i.e. the type-level restriction_gets checked before the handler method is even resolved)._<p>In a Servlet environment, parameter mappings are considered as restrictions_that are enforced at the type level. The primary path mapping (i.e. the_specified URI value) still has to uniquely identify the target handler, with_parameter mappings simply expressing preconditions for invoking the handler._<p>In a Portlet environment, parameters are taken into account as mapping_differentiators, i.e. the primary portlet mode mapping plus the parameter_conditions uniquely identify the target handler. Different handlers may be_mapped onto the same portlet mode, as long as their parameter mappings differ.;String[] params() default {}_;the,parameters,of,the,mapped,request,narrowing,the,primary,mapping,p,same,format,for,any,environment,a,sequence,of,my,param,my,value,style,expressions,with,a,request,only,mapped,if,each,such,parameter,is,found,to,have,the,given,value,expressions,can,be,negated,by,using,the,operator,as,in,my,param,my,value,my,param,style,expressions,are,also,supported,with,such,parameters,having,to,be,present,in,the,request,allowed,to,have,any,value,finally,my,param,style,expressions,indicate,that,the,specified,parameter,is,i,not,i,supposed,to,be,present,in,the,request,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,parameter,restriction,i,e,the,type,level,restriction,gets,checked,before,the,handler,method,is,even,resolved,p,in,a,servlet,environment,parameter,mappings,are,considered,as,restrictions,that,are,enforced,at,the,type,level,the,primary,path,mapping,i,e,the,specified,uri,value,still,has,to,uniquely,identify,the,target,handler,with,parameter,mappings,simply,expressing,preconditions,for,invoking,the,handler,p,in,a,portlet,environment,parameters,are,taken,into,account,as,mapping,differentiators,i,e,the,primary,portlet,mode,mapping,plus,the,parameter,conditions,uniquely,identify,the,target,handler,different,handlers,may,be,mapped,onto,the,same,portlet,mode,as,long,as,their,parameter,mappings,differ;string,params,default
RequestMapping -> String[] params() default {}_;1444666351;The parameters of the mapped request, narrowing the primary mapping._<p>Same format for any environment: a sequence of "myParam=myValue" style_expressions, with a request only mapped if each such parameter is found_to have the given value. Expressions can be negated by using the "!=" operator,_as in "myParam!=myValue". "myParam" style expressions are also supported,_with such parameters having to be present in the request (allowed to have_any value). Finally, "!myParam" style expressions indicate that the_specified parameter is <i>not</i> supposed to be present in the request._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this parameter restriction (i.e. the type-level restriction_gets checked before the handler method is even resolved)._<p>In a Servlet environment, parameter mappings are considered as restrictions_that are enforced at the type level. The primary path mapping (i.e. the_specified URI value) still has to uniquely identify the target handler, with_parameter mappings simply expressing preconditions for invoking the handler._<p>In a Portlet environment, parameters are taken into account as mapping_differentiators, i.e. the primary portlet mode mapping plus the parameter_conditions uniquely identify the target handler. Different handlers may be_mapped onto the same portlet mode, as long as their parameter mappings differ.;String[] params() default {}_;the,parameters,of,the,mapped,request,narrowing,the,primary,mapping,p,same,format,for,any,environment,a,sequence,of,my,param,my,value,style,expressions,with,a,request,only,mapped,if,each,such,parameter,is,found,to,have,the,given,value,expressions,can,be,negated,by,using,the,operator,as,in,my,param,my,value,my,param,style,expressions,are,also,supported,with,such,parameters,having,to,be,present,in,the,request,allowed,to,have,any,value,finally,my,param,style,expressions,indicate,that,the,specified,parameter,is,i,not,i,supposed,to,be,present,in,the,request,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,parameter,restriction,i,e,the,type,level,restriction,gets,checked,before,the,handler,method,is,even,resolved,p,in,a,servlet,environment,parameter,mappings,are,considered,as,restrictions,that,are,enforced,at,the,type,level,the,primary,path,mapping,i,e,the,specified,uri,value,still,has,to,uniquely,identify,the,target,handler,with,parameter,mappings,simply,expressing,preconditions,for,invoking,the,handler,p,in,a,portlet,environment,parameters,are,taken,into,account,as,mapping,differentiators,i,e,the,primary,portlet,mode,mapping,plus,the,parameter,conditions,uniquely,identify,the,target,handler,different,handlers,may,be,mapped,onto,the,same,portlet,mode,as,long,as,their,parameter,mappings,differ;string,params,default
RequestMapping -> String[] params() default {}_;1446446882;The parameters of the mapped request, narrowing the primary mapping._<p>Same format for any environment: a sequence of "myParam=myValue" style_expressions, with a request only mapped if each such parameter is found_to have the given value. Expressions can be negated by using the "!=" operator,_as in "myParam!=myValue". "myParam" style expressions are also supported,_with such parameters having to be present in the request (allowed to have_any value). Finally, "!myParam" style expressions indicate that the_specified parameter is <i>not</i> supposed to be present in the request._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this parameter restriction (i.e. the type-level restriction_gets checked before the handler method is even resolved)._<p>In a Servlet environment, parameter mappings are considered as restrictions_that are enforced at the type level. The primary path mapping (i.e. the_specified URI value) still has to uniquely identify the target handler, with_parameter mappings simply expressing preconditions for invoking the handler._<p>In a Portlet environment, parameters are taken into account as mapping_differentiators, i.e. the primary portlet mode mapping plus the parameter_conditions uniquely identify the target handler. Different handlers may be_mapped onto the same portlet mode, as long as their parameter mappings differ.;String[] params() default {}_;the,parameters,of,the,mapped,request,narrowing,the,primary,mapping,p,same,format,for,any,environment,a,sequence,of,my,param,my,value,style,expressions,with,a,request,only,mapped,if,each,such,parameter,is,found,to,have,the,given,value,expressions,can,be,negated,by,using,the,operator,as,in,my,param,my,value,my,param,style,expressions,are,also,supported,with,such,parameters,having,to,be,present,in,the,request,allowed,to,have,any,value,finally,my,param,style,expressions,indicate,that,the,specified,parameter,is,i,not,i,supposed,to,be,present,in,the,request,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,parameter,restriction,i,e,the,type,level,restriction,gets,checked,before,the,handler,method,is,even,resolved,p,in,a,servlet,environment,parameter,mappings,are,considered,as,restrictions,that,are,enforced,at,the,type,level,the,primary,path,mapping,i,e,the,specified,uri,value,still,has,to,uniquely,identify,the,target,handler,with,parameter,mappings,simply,expressing,preconditions,for,invoking,the,handler,p,in,a,portlet,environment,parameters,are,taken,into,account,as,mapping,differentiators,i,e,the,primary,portlet,mode,mapping,plus,the,parameter,conditions,uniquely,identify,the,target,handler,different,handlers,may,be,mapped,onto,the,same,portlet,mode,as,long,as,their,parameter,mappings,differ;string,params,default
RequestMapping -> String[] params() default {}_;1453844264;The parameters of the mapped request, narrowing the primary mapping._<p>Same format for any environment: a sequence of "myParam=myValue" style_expressions, with a request only mapped if each such parameter is found_to have the given value. Expressions can be negated by using the "!=" operator,_as in "myParam!=myValue". "myParam" style expressions are also supported,_with such parameters having to be present in the request (allowed to have_any value). Finally, "!myParam" style expressions indicate that the_specified parameter is <i>not</i> supposed to be present in the request._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this parameter restriction (i.e. the type-level restriction_gets checked before the handler method is even resolved)._<p>In a Servlet environment, parameter mappings are considered as restrictions_that are enforced at the type level. The primary path mapping (i.e. the_specified URI value) still has to uniquely identify the target handler, with_parameter mappings simply expressing preconditions for invoking the handler._<p>In a Portlet environment, parameters are taken into account as mapping_differentiators, i.e. the primary portlet mode mapping plus the parameter_conditions uniquely identify the target handler. Different handlers may be_mapped onto the same portlet mode, as long as their parameter mappings differ.;String[] params() default {}_;the,parameters,of,the,mapped,request,narrowing,the,primary,mapping,p,same,format,for,any,environment,a,sequence,of,my,param,my,value,style,expressions,with,a,request,only,mapped,if,each,such,parameter,is,found,to,have,the,given,value,expressions,can,be,negated,by,using,the,operator,as,in,my,param,my,value,my,param,style,expressions,are,also,supported,with,such,parameters,having,to,be,present,in,the,request,allowed,to,have,any,value,finally,my,param,style,expressions,indicate,that,the,specified,parameter,is,i,not,i,supposed,to,be,present,in,the,request,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,parameter,restriction,i,e,the,type,level,restriction,gets,checked,before,the,handler,method,is,even,resolved,p,in,a,servlet,environment,parameter,mappings,are,considered,as,restrictions,that,are,enforced,at,the,type,level,the,primary,path,mapping,i,e,the,specified,uri,value,still,has,to,uniquely,identify,the,target,handler,with,parameter,mappings,simply,expressing,preconditions,for,invoking,the,handler,p,in,a,portlet,environment,parameters,are,taken,into,account,as,mapping,differentiators,i,e,the,primary,portlet,mode,mapping,plus,the,parameter,conditions,uniquely,identify,the,target,handler,different,handlers,may,be,mapped,onto,the,same,portlet,mode,as,long,as,their,parameter,mappings,differ;string,params,default
RequestMapping -> String[] params() default {}_;1453844270;The parameters of the mapped request, narrowing the primary mapping._<p>Same format for any environment: a sequence of "myParam=myValue" style_expressions, with a request only mapped if each such parameter is found_to have the given value. Expressions can be negated by using the "!=" operator,_as in "myParam!=myValue". "myParam" style expressions are also supported,_with such parameters having to be present in the request (allowed to have_any value). Finally, "!myParam" style expressions indicate that the_specified parameter is <i>not</i> supposed to be present in the request._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this parameter restriction (i.e. the type-level restriction_gets checked before the handler method is even resolved)._<p>In a Servlet environment, parameter mappings are considered as restrictions_that are enforced at the type level. The primary path mapping (i.e. the_specified URI value) still has to uniquely identify the target handler, with_parameter mappings simply expressing preconditions for invoking the handler._<p>In a Portlet environment, parameters are taken into account as mapping_differentiators, i.e. the primary portlet mode mapping plus the parameter_conditions uniquely identify the target handler. Different handlers may be_mapped onto the same portlet mode, as long as their parameter mappings differ.;String[] params() default {}_;the,parameters,of,the,mapped,request,narrowing,the,primary,mapping,p,same,format,for,any,environment,a,sequence,of,my,param,my,value,style,expressions,with,a,request,only,mapped,if,each,such,parameter,is,found,to,have,the,given,value,expressions,can,be,negated,by,using,the,operator,as,in,my,param,my,value,my,param,style,expressions,are,also,supported,with,such,parameters,having,to,be,present,in,the,request,allowed,to,have,any,value,finally,my,param,style,expressions,indicate,that,the,specified,parameter,is,i,not,i,supposed,to,be,present,in,the,request,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,parameter,restriction,i,e,the,type,level,restriction,gets,checked,before,the,handler,method,is,even,resolved,p,in,a,servlet,environment,parameter,mappings,are,considered,as,restrictions,that,are,enforced,at,the,type,level,the,primary,path,mapping,i,e,the,specified,uri,value,still,has,to,uniquely,identify,the,target,handler,with,parameter,mappings,simply,expressing,preconditions,for,invoking,the,handler,p,in,a,portlet,environment,parameters,are,taken,into,account,as,mapping,differentiators,i,e,the,primary,portlet,mode,mapping,plus,the,parameter,conditions,uniquely,identify,the,target,handler,different,handlers,may,be,mapped,onto,the,same,portlet,mode,as,long,as,their,parameter,mappings,differ;string,params,default
RequestMapping -> String[] params() default {}_;1456522551;The parameters of the mapped request, narrowing the primary mapping._<p>Same format for any environment: a sequence of "myParam=myValue" style_expressions, with a request only mapped if each such parameter is found_to have the given value. Expressions can be negated by using the "!=" operator,_as in "myParam!=myValue". "myParam" style expressions are also supported,_with such parameters having to be present in the request (allowed to have_any value). Finally, "!myParam" style expressions indicate that the_specified parameter is <i>not</i> supposed to be present in the request._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this parameter restriction (i.e. the type-level restriction_gets checked before the handler method is even resolved)._<p>In a Servlet environment, parameter mappings are considered as restrictions_that are enforced at the type level. The primary path mapping (i.e. the_specified URI value) still has to uniquely identify the target handler, with_parameter mappings simply expressing preconditions for invoking the handler._<p>In a Portlet environment, parameters are taken into account as mapping_differentiators, i.e. the primary portlet mode mapping plus the parameter_conditions uniquely identify the target handler. Different handlers may be_mapped onto the same portlet mode, as long as their parameter mappings differ.;String[] params() default {}_;the,parameters,of,the,mapped,request,narrowing,the,primary,mapping,p,same,format,for,any,environment,a,sequence,of,my,param,my,value,style,expressions,with,a,request,only,mapped,if,each,such,parameter,is,found,to,have,the,given,value,expressions,can,be,negated,by,using,the,operator,as,in,my,param,my,value,my,param,style,expressions,are,also,supported,with,such,parameters,having,to,be,present,in,the,request,allowed,to,have,any,value,finally,my,param,style,expressions,indicate,that,the,specified,parameter,is,i,not,i,supposed,to,be,present,in,the,request,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,parameter,restriction,i,e,the,type,level,restriction,gets,checked,before,the,handler,method,is,even,resolved,p,in,a,servlet,environment,parameter,mappings,are,considered,as,restrictions,that,are,enforced,at,the,type,level,the,primary,path,mapping,i,e,the,specified,uri,value,still,has,to,uniquely,identify,the,target,handler,with,parameter,mappings,simply,expressing,preconditions,for,invoking,the,handler,p,in,a,portlet,environment,parameters,are,taken,into,account,as,mapping,differentiators,i,e,the,primary,portlet,mode,mapping,plus,the,parameter,conditions,uniquely,identify,the,target,handler,different,handlers,may,be,mapped,onto,the,same,portlet,mode,as,long,as,their,parameter,mappings,differ;string,params,default
RequestMapping -> String[] params() default {}_;1456766757;The parameters of the mapped request, narrowing the primary mapping._<p>Same format for any environment: a sequence of "myParam=myValue" style_expressions, with a request only mapped if each such parameter is found_to have the given value. Expressions can be negated by using the "!=" operator,_as in "myParam!=myValue". "myParam" style expressions are also supported,_with such parameters having to be present in the request (allowed to have_any value). Finally, "!myParam" style expressions indicate that the_specified parameter is <i>not</i> supposed to be present in the request._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this parameter restriction (i.e. the type-level restriction_gets checked before the handler method is even resolved)._<p>In a Servlet environment, parameter mappings are considered as restrictions_that are enforced at the type level. The primary path mapping (i.e. the_specified URI value) still has to uniquely identify the target handler, with_parameter mappings simply expressing preconditions for invoking the handler._<p>In a Portlet environment, parameters are taken into account as mapping_differentiators, i.e. the primary portlet mode mapping plus the parameter_conditions uniquely identify the target handler. Different handlers may be_mapped onto the same portlet mode, as long as their parameter mappings differ.;String[] params() default {}_;the,parameters,of,the,mapped,request,narrowing,the,primary,mapping,p,same,format,for,any,environment,a,sequence,of,my,param,my,value,style,expressions,with,a,request,only,mapped,if,each,such,parameter,is,found,to,have,the,given,value,expressions,can,be,negated,by,using,the,operator,as,in,my,param,my,value,my,param,style,expressions,are,also,supported,with,such,parameters,having,to,be,present,in,the,request,allowed,to,have,any,value,finally,my,param,style,expressions,indicate,that,the,specified,parameter,is,i,not,i,supposed,to,be,present,in,the,request,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,parameter,restriction,i,e,the,type,level,restriction,gets,checked,before,the,handler,method,is,even,resolved,p,in,a,servlet,environment,parameter,mappings,are,considered,as,restrictions,that,are,enforced,at,the,type,level,the,primary,path,mapping,i,e,the,specified,uri,value,still,has,to,uniquely,identify,the,target,handler,with,parameter,mappings,simply,expressing,preconditions,for,invoking,the,handler,p,in,a,portlet,environment,parameters,are,taken,into,account,as,mapping,differentiators,i,e,the,primary,portlet,mode,mapping,plus,the,parameter,conditions,uniquely,identify,the,target,handler,different,handlers,may,be,mapped,onto,the,same,portlet,mode,as,long,as,their,parameter,mappings,differ;string,params,default
RequestMapping -> String[] params() default {}_;1467668027;The parameters of the mapped request, narrowing the primary mapping._<p>Same format for any environment: a sequence of "myParam=myValue" style_expressions, with a request only mapped if each such parameter is found_to have the given value. Expressions can be negated by using the "!=" operator,_as in "myParam!=myValue". "myParam" style expressions are also supported,_with such parameters having to be present in the request (allowed to have_any value). Finally, "!myParam" style expressions indicate that the_specified parameter is <i>not</i> supposed to be present in the request._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this parameter restriction (i.e. the type-level restriction_gets checked before the handler method is even resolved)._<p>Parameter mappings are considered as restrictions that are enforced at_the type level. The primary path mapping (i.e. the specified URI value)_still has to uniquely identify the target handler, with parameter mappings_simply expressing preconditions for invoking the handler.;String[] params() default {}_;the,parameters,of,the,mapped,request,narrowing,the,primary,mapping,p,same,format,for,any,environment,a,sequence,of,my,param,my,value,style,expressions,with,a,request,only,mapped,if,each,such,parameter,is,found,to,have,the,given,value,expressions,can,be,negated,by,using,the,operator,as,in,my,param,my,value,my,param,style,expressions,are,also,supported,with,such,parameters,having,to,be,present,in,the,request,allowed,to,have,any,value,finally,my,param,style,expressions,indicate,that,the,specified,parameter,is,i,not,i,supposed,to,be,present,in,the,request,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,parameter,restriction,i,e,the,type,level,restriction,gets,checked,before,the,handler,method,is,even,resolved,p,parameter,mappings,are,considered,as,restrictions,that,are,enforced,at,the,type,level,the,primary,path,mapping,i,e,the,specified,uri,value,still,has,to,uniquely,identify,the,target,handler,with,parameter,mappings,simply,expressing,preconditions,for,invoking,the,handler;string,params,default
RequestMapping -> String[] params() default {}_;1467677340;The parameters of the mapped request, narrowing the primary mapping._<p>Same format for any environment: a sequence of "myParam=myValue" style_expressions, with a request only mapped if each such parameter is found_to have the given value. Expressions can be negated by using the "!=" operator,_as in "myParam!=myValue". "myParam" style expressions are also supported,_with such parameters having to be present in the request (allowed to have_any value). Finally, "!myParam" style expressions indicate that the_specified parameter is <i>not</i> supposed to be present in the request._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this parameter restriction (i.e. the type-level restriction_gets checked before the handler method is even resolved)._<p>Parameter mappings are considered as restrictions that are enforced at_the type level. The primary path mapping (i.e. the specified URI value)_still has to uniquely identify the target handler, with parameter mappings_simply expressing preconditions for invoking the handler.;String[] params() default {}_;the,parameters,of,the,mapped,request,narrowing,the,primary,mapping,p,same,format,for,any,environment,a,sequence,of,my,param,my,value,style,expressions,with,a,request,only,mapped,if,each,such,parameter,is,found,to,have,the,given,value,expressions,can,be,negated,by,using,the,operator,as,in,my,param,my,value,my,param,style,expressions,are,also,supported,with,such,parameters,having,to,be,present,in,the,request,allowed,to,have,any,value,finally,my,param,style,expressions,indicate,that,the,specified,parameter,is,i,not,i,supposed,to,be,present,in,the,request,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,parameter,restriction,i,e,the,type,level,restriction,gets,checked,before,the,handler,method,is,even,resolved,p,parameter,mappings,are,considered,as,restrictions,that,are,enforced,at,the,type,level,the,primary,path,mapping,i,e,the,specified,uri,value,still,has,to,uniquely,identify,the,target,handler,with,parameter,mappings,simply,expressing,preconditions,for,invoking,the,handler;string,params,default
RequestMapping -> String[] params() default {}_;1491341544;The parameters of the mapped request, narrowing the primary mapping._<p>Same format for any environment: a sequence of "myParam=myValue" style_expressions, with a request only mapped if each such parameter is found_to have the given value. Expressions can be negated by using the "!=" operator,_as in "myParam!=myValue". "myParam" style expressions are also supported,_with such parameters having to be present in the request (allowed to have_any value). Finally, "!myParam" style expressions indicate that the_specified parameter is <i>not</i> supposed to be present in the request._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this parameter restriction (i.e. the type-level restriction_gets checked before the handler method is even resolved)._<p>Parameter mappings are considered as restrictions that are enforced at_the type level. The primary path mapping (i.e. the specified URI value)_still has to uniquely identify the target handler, with parameter mappings_simply expressing preconditions for invoking the handler.;String[] params() default {}_;the,parameters,of,the,mapped,request,narrowing,the,primary,mapping,p,same,format,for,any,environment,a,sequence,of,my,param,my,value,style,expressions,with,a,request,only,mapped,if,each,such,parameter,is,found,to,have,the,given,value,expressions,can,be,negated,by,using,the,operator,as,in,my,param,my,value,my,param,style,expressions,are,also,supported,with,such,parameters,having,to,be,present,in,the,request,allowed,to,have,any,value,finally,my,param,style,expressions,indicate,that,the,specified,parameter,is,i,not,i,supposed,to,be,present,in,the,request,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,parameter,restriction,i,e,the,type,level,restriction,gets,checked,before,the,handler,method,is,even,resolved,p,parameter,mappings,are,considered,as,restrictions,that,are,enforced,at,the,type,level,the,primary,path,mapping,i,e,the,specified,uri,value,still,has,to,uniquely,identify,the,target,handler,with,parameter,mappings,simply,expressing,preconditions,for,invoking,the,handler;string,params,default
RequestMapping -> String[] params() default {}_;1491599707;The parameters of the mapped request, narrowing the primary mapping._<p>Same format for any environment: a sequence of "myParam=myValue" style_expressions, with a request only mapped if each such parameter is found_to have the given value. Expressions can be negated by using the "!=" operator,_as in "myParam!=myValue". "myParam" style expressions are also supported,_with such parameters having to be present in the request (allowed to have_any value). Finally, "!myParam" style expressions indicate that the_specified parameter is <i>not</i> supposed to be present in the request._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this parameter restriction (i.e. the type-level restriction_gets checked before the handler method is even resolved)._<p>Parameter mappings are considered as restrictions that are enforced at_the type level. The primary path mapping (i.e. the specified URI value)_still has to uniquely identify the target handler, with parameter mappings_simply expressing preconditions for invoking the handler.;String[] params() default {}_;the,parameters,of,the,mapped,request,narrowing,the,primary,mapping,p,same,format,for,any,environment,a,sequence,of,my,param,my,value,style,expressions,with,a,request,only,mapped,if,each,such,parameter,is,found,to,have,the,given,value,expressions,can,be,negated,by,using,the,operator,as,in,my,param,my,value,my,param,style,expressions,are,also,supported,with,such,parameters,having,to,be,present,in,the,request,allowed,to,have,any,value,finally,my,param,style,expressions,indicate,that,the,specified,parameter,is,i,not,i,supposed,to,be,present,in,the,request,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,parameter,restriction,i,e,the,type,level,restriction,gets,checked,before,the,handler,method,is,even,resolved,p,parameter,mappings,are,considered,as,restrictions,that,are,enforced,at,the,type,level,the,primary,path,mapping,i,e,the,specified,uri,value,still,has,to,uniquely,identify,the,target,handler,with,parameter,mappings,simply,expressing,preconditions,for,invoking,the,handler;string,params,default
RequestMapping -> String[] params() default {}_;1506454198;The parameters of the mapped request, narrowing the primary mapping._<p>Same format for any environment: a sequence of "myParam=myValue" style_expressions, with a request only mapped if each such parameter is found_to have the given value. Expressions can be negated by using the "!=" operator,_as in "myParam!=myValue". "myParam" style expressions are also supported,_with such parameters having to be present in the request (allowed to have_any value). Finally, "!myParam" style expressions indicate that the_specified parameter is <i>not</i> supposed to be present in the request._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this parameter restriction (i.e. the type-level restriction_gets checked before the handler method is even resolved)._<p>Parameter mappings are considered as restrictions that are enforced at_the type level. The primary path mapping (i.e. the specified URI value)_still has to uniquely identify the target handler, with parameter mappings_simply expressing preconditions for invoking the handler.;String[] params() default {}_;the,parameters,of,the,mapped,request,narrowing,the,primary,mapping,p,same,format,for,any,environment,a,sequence,of,my,param,my,value,style,expressions,with,a,request,only,mapped,if,each,such,parameter,is,found,to,have,the,given,value,expressions,can,be,negated,by,using,the,operator,as,in,my,param,my,value,my,param,style,expressions,are,also,supported,with,such,parameters,having,to,be,present,in,the,request,allowed,to,have,any,value,finally,my,param,style,expressions,indicate,that,the,specified,parameter,is,i,not,i,supposed,to,be,present,in,the,request,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,parameter,restriction,i,e,the,type,level,restriction,gets,checked,before,the,handler,method,is,even,resolved,p,parameter,mappings,are,considered,as,restrictions,that,are,enforced,at,the,type,level,the,primary,path,mapping,i,e,the,specified,uri,value,still,has,to,uniquely,identify,the,target,handler,with,parameter,mappings,simply,expressing,preconditions,for,invoking,the,handler;string,params,default
RequestMapping -> String[] params() default {}_;1515421792;The parameters of the mapped request, narrowing the primary mapping._<p>Same format for any environment: a sequence of "myParam=myValue" style_expressions, with a request only mapped if each such parameter is found_to have the given value. Expressions can be negated by using the "!=" operator,_as in "myParam!=myValue". "myParam" style expressions are also supported,_with such parameters having to be present in the request (allowed to have_any value). Finally, "!myParam" style expressions indicate that the_specified parameter is <i>not</i> supposed to be present in the request._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this parameter restriction (i.e. the type-level restriction_gets checked before the handler method is even resolved)._<p>Parameter mappings are considered as restrictions that are enforced at_the type level. The primary path mapping (i.e. the specified URI value)_still has to uniquely identify the target handler, with parameter mappings_simply expressing preconditions for invoking the handler.;String[] params() default {}_;the,parameters,of,the,mapped,request,narrowing,the,primary,mapping,p,same,format,for,any,environment,a,sequence,of,my,param,my,value,style,expressions,with,a,request,only,mapped,if,each,such,parameter,is,found,to,have,the,given,value,expressions,can,be,negated,by,using,the,operator,as,in,my,param,my,value,my,param,style,expressions,are,also,supported,with,such,parameters,having,to,be,present,in,the,request,allowed,to,have,any,value,finally,my,param,style,expressions,indicate,that,the,specified,parameter,is,i,not,i,supposed,to,be,present,in,the,request,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,parameter,restriction,i,e,the,type,level,restriction,gets,checked,before,the,handler,method,is,even,resolved,p,parameter,mappings,are,considered,as,restrictions,that,are,enforced,at,the,type,level,the,primary,path,mapping,i,e,the,specified,uri,value,still,has,to,uniquely,identify,the,target,handler,with,parameter,mappings,simply,expressing,preconditions,for,invoking,the,handler;string,params,default
RequestMapping -> String[] params() default {}_;1523268197;The parameters of the mapped request, narrowing the primary mapping._<p>Same format for any environment: a sequence of "myParam=myValue" style_expressions, with a request only mapped if each such parameter is found_to have the given value. Expressions can be negated by using the "!=" operator,_as in "myParam!=myValue". "myParam" style expressions are also supported,_with such parameters having to be present in the request (allowed to have_any value). Finally, "!myParam" style expressions indicate that the_specified parameter is <i>not</i> supposed to be present in the request._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this parameter restriction (i.e. the type-level restriction_gets checked before the handler method is even resolved)._<p>Parameter mappings are considered as restrictions that are enforced at_the type level. The primary path mapping (i.e. the specified URI value)_still has to uniquely identify the target handler, with parameter mappings_simply expressing preconditions for invoking the handler.;String[] params() default {}_;the,parameters,of,the,mapped,request,narrowing,the,primary,mapping,p,same,format,for,any,environment,a,sequence,of,my,param,my,value,style,expressions,with,a,request,only,mapped,if,each,such,parameter,is,found,to,have,the,given,value,expressions,can,be,negated,by,using,the,operator,as,in,my,param,my,value,my,param,style,expressions,are,also,supported,with,such,parameters,having,to,be,present,in,the,request,allowed,to,have,any,value,finally,my,param,style,expressions,indicate,that,the,specified,parameter,is,i,not,i,supposed,to,be,present,in,the,request,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,parameter,restriction,i,e,the,type,level,restriction,gets,checked,before,the,handler,method,is,even,resolved,p,parameter,mappings,are,considered,as,restrictions,that,are,enforced,at,the,type,level,the,primary,path,mapping,i,e,the,specified,uri,value,still,has,to,uniquely,identify,the,target,handler,with,parameter,mappings,simply,expressing,preconditions,for,invoking,the,handler;string,params,default
RequestMapping -> String[] params() default {}_;1528795693;The parameters of the mapped request, narrowing the primary mapping._<p>Same format for any environment: a sequence of "myParam=myValue" style_expressions, with a request only mapped if each such parameter is found_to have the given value. Expressions can be negated by using the "!=" operator,_as in "myParam!=myValue". "myParam" style expressions are also supported,_with such parameters having to be present in the request (allowed to have_any value). Finally, "!myParam" style expressions indicate that the_specified parameter is <i>not</i> supposed to be present in the request._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this parameter restriction (i.e. the type-level restriction_gets checked before the handler method is even resolved)._<p>Parameter mappings are considered as restrictions that are enforced at_the type level. The primary path mapping (i.e. the specified URI value)_still has to uniquely identify the target handler, with parameter mappings_simply expressing preconditions for invoking the handler.;String[] params() default {}_;the,parameters,of,the,mapped,request,narrowing,the,primary,mapping,p,same,format,for,any,environment,a,sequence,of,my,param,my,value,style,expressions,with,a,request,only,mapped,if,each,such,parameter,is,found,to,have,the,given,value,expressions,can,be,negated,by,using,the,operator,as,in,my,param,my,value,my,param,style,expressions,are,also,supported,with,such,parameters,having,to,be,present,in,the,request,allowed,to,have,any,value,finally,my,param,style,expressions,indicate,that,the,specified,parameter,is,i,not,i,supposed,to,be,present,in,the,request,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,parameter,restriction,i,e,the,type,level,restriction,gets,checked,before,the,handler,method,is,even,resolved,p,parameter,mappings,are,considered,as,restrictions,that,are,enforced,at,the,type,level,the,primary,path,mapping,i,e,the,specified,uri,value,still,has,to,uniquely,identify,the,target,handler,with,parameter,mappings,simply,expressing,preconditions,for,invoking,the,handler;string,params,default
RequestMapping -> @AliasFor("path") 	String[] value() default {}_;1438176426;The primary mapping expressed by this annotation._<p>In a Servlet environment this is an alias for {@link #path}._For example {@code @RequestMapping("/foo")} is equivalent to_{@code @RequestMapping(path="/foo")}._<p>In a Portlet environment this is the mapped portlet modes_(i.e. "EDIT", "VIEW", "HELP" or any custom modes)._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this primary mapping, narrowing it for a specific handler method.;@AliasFor("path")_	String[] value() default {}_;the,primary,mapping,expressed,by,this,annotation,p,in,a,servlet,environment,this,is,an,alias,for,link,path,for,example,code,request,mapping,foo,is,equivalent,to,code,request,mapping,path,foo,p,in,a,portlet,environment,this,is,the,mapped,portlet,modes,i,e,edit,view,help,or,any,custom,modes,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,primary,mapping,narrowing,it,for,a,specific,handler,method;alias,for,path,string,value,default
RequestMapping -> @AliasFor("path") 	String[] value() default {}_;1444666351;The primary mapping expressed by this annotation._<p>In a Servlet environment this is an alias for {@link #path}._For example {@code @RequestMapping("/foo")} is equivalent to_{@code @RequestMapping(path="/foo")}._<p>In a Portlet environment this is the mapped portlet modes_(i.e. "EDIT", "VIEW", "HELP" or any custom modes)._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this primary mapping, narrowing it for a specific handler method.;@AliasFor("path")_	String[] value() default {}_;the,primary,mapping,expressed,by,this,annotation,p,in,a,servlet,environment,this,is,an,alias,for,link,path,for,example,code,request,mapping,foo,is,equivalent,to,code,request,mapping,path,foo,p,in,a,portlet,environment,this,is,the,mapped,portlet,modes,i,e,edit,view,help,or,any,custom,modes,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,primary,mapping,narrowing,it,for,a,specific,handler,method;alias,for,path,string,value,default
RequestMapping -> @AliasFor("path") 	String[] value() default {}_;1446446882;The primary mapping expressed by this annotation._<p>In a Servlet environment this is an alias for {@link #path}._For example {@code @RequestMapping("/foo")} is equivalent to_{@code @RequestMapping(path="/foo")}._<p>In a Portlet environment this is the mapped portlet modes_(i.e. "EDIT", "VIEW", "HELP" or any custom modes)._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this primary mapping, narrowing it for a specific handler method.;@AliasFor("path")_	String[] value() default {}_;the,primary,mapping,expressed,by,this,annotation,p,in,a,servlet,environment,this,is,an,alias,for,link,path,for,example,code,request,mapping,foo,is,equivalent,to,code,request,mapping,path,foo,p,in,a,portlet,environment,this,is,the,mapped,portlet,modes,i,e,edit,view,help,or,any,custom,modes,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,primary,mapping,narrowing,it,for,a,specific,handler,method;alias,for,path,string,value,default
RequestMapping -> @AliasFor("path") 	String[] value() default {}_;1453844264;The primary mapping expressed by this annotation._<p>In a Servlet environment this is an alias for {@link #path}._For example {@code @RequestMapping("/foo")} is equivalent to_{@code @RequestMapping(path="/foo")}._<p>In a Portlet environment this is the mapped portlet modes_(i.e. "EDIT", "VIEW", "HELP" or any custom modes)._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this primary mapping, narrowing it for a specific handler method.;@AliasFor("path")_	String[] value() default {}_;the,primary,mapping,expressed,by,this,annotation,p,in,a,servlet,environment,this,is,an,alias,for,link,path,for,example,code,request,mapping,foo,is,equivalent,to,code,request,mapping,path,foo,p,in,a,portlet,environment,this,is,the,mapped,portlet,modes,i,e,edit,view,help,or,any,custom,modes,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,primary,mapping,narrowing,it,for,a,specific,handler,method;alias,for,path,string,value,default
RequestMapping -> @AliasFor("path") 	String[] value() default {}_;1453844270;The primary mapping expressed by this annotation._<p>In a Servlet environment this is an alias for {@link #path}._For example {@code @RequestMapping("/foo")} is equivalent to_{@code @RequestMapping(path="/foo")}._<p>In a Portlet environment this is the mapped portlet modes_(i.e. "EDIT", "VIEW", "HELP" or any custom modes)._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this primary mapping, narrowing it for a specific handler method.;@AliasFor("path")_	String[] value() default {}_;the,primary,mapping,expressed,by,this,annotation,p,in,a,servlet,environment,this,is,an,alias,for,link,path,for,example,code,request,mapping,foo,is,equivalent,to,code,request,mapping,path,foo,p,in,a,portlet,environment,this,is,the,mapped,portlet,modes,i,e,edit,view,help,or,any,custom,modes,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,primary,mapping,narrowing,it,for,a,specific,handler,method;alias,for,path,string,value,default
RequestMapping -> @AliasFor("path") 	String[] value() default {}_;1456522551;The primary mapping expressed by this annotation._<p>In a Servlet environment this is an alias for {@link #path}._For example {@code @RequestMapping("/foo")} is equivalent to_{@code @RequestMapping(path="/foo")}._<p>In a Portlet environment this is the mapped portlet modes_(i.e. "EDIT", "VIEW", "HELP" or any custom modes)._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this primary mapping, narrowing it for a specific handler method.;@AliasFor("path")_	String[] value() default {}_;the,primary,mapping,expressed,by,this,annotation,p,in,a,servlet,environment,this,is,an,alias,for,link,path,for,example,code,request,mapping,foo,is,equivalent,to,code,request,mapping,path,foo,p,in,a,portlet,environment,this,is,the,mapped,portlet,modes,i,e,edit,view,help,or,any,custom,modes,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,primary,mapping,narrowing,it,for,a,specific,handler,method;alias,for,path,string,value,default
RequestMapping -> @AliasFor("path") 	String[] value() default {}_;1456766757;The primary mapping expressed by this annotation._<p>In a Servlet environment this is an alias for {@link #path}._For example {@code @RequestMapping("/foo")} is equivalent to_{@code @RequestMapping(path="/foo")}._<p>In a Portlet environment this is the mapped portlet modes_(i.e. "EDIT", "VIEW", "HELP" or any custom modes)._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this primary mapping, narrowing it for a specific handler method.;@AliasFor("path")_	String[] value() default {}_;the,primary,mapping,expressed,by,this,annotation,p,in,a,servlet,environment,this,is,an,alias,for,link,path,for,example,code,request,mapping,foo,is,equivalent,to,code,request,mapping,path,foo,p,in,a,portlet,environment,this,is,the,mapped,portlet,modes,i,e,edit,view,help,or,any,custom,modes,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,primary,mapping,narrowing,it,for,a,specific,handler,method;alias,for,path,string,value,default
RequestMapping -> @AliasFor("path") 	String[] value() default {}_;1467668027;The primary mapping expressed by this annotation._<p>This is an alias for {@link #path}. For example_{@code @RequestMapping("/foo")} is equivalent to_{@code @RequestMapping(path="/foo")}._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this primary mapping, narrowing it for a specific handler method.;@AliasFor("path")_	String[] value() default {}_;the,primary,mapping,expressed,by,this,annotation,p,this,is,an,alias,for,link,path,for,example,code,request,mapping,foo,is,equivalent,to,code,request,mapping,path,foo,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,primary,mapping,narrowing,it,for,a,specific,handler,method;alias,for,path,string,value,default
RequestMapping -> @AliasFor("path") 	String[] value() default {}_;1467677340;The primary mapping expressed by this annotation._<p>This is an alias for {@link #path}. For example_{@code @RequestMapping("/foo")} is equivalent to_{@code @RequestMapping(path="/foo")}._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this primary mapping, narrowing it for a specific handler method.;@AliasFor("path")_	String[] value() default {}_;the,primary,mapping,expressed,by,this,annotation,p,this,is,an,alias,for,link,path,for,example,code,request,mapping,foo,is,equivalent,to,code,request,mapping,path,foo,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,primary,mapping,narrowing,it,for,a,specific,handler,method;alias,for,path,string,value,default
RequestMapping -> @AliasFor("path") 	String[] value() default {}_;1491341544;The primary mapping expressed by this annotation._<p>This is an alias for {@link #path}. For example_{@code @RequestMapping("/foo")} is equivalent to_{@code @RequestMapping(path="/foo")}._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this primary mapping, narrowing it for a specific handler method.;@AliasFor("path")_	String[] value() default {}_;the,primary,mapping,expressed,by,this,annotation,p,this,is,an,alias,for,link,path,for,example,code,request,mapping,foo,is,equivalent,to,code,request,mapping,path,foo,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,primary,mapping,narrowing,it,for,a,specific,handler,method;alias,for,path,string,value,default
RequestMapping -> @AliasFor("path") 	String[] value() default {}_;1491599707;The primary mapping expressed by this annotation._<p>This is an alias for {@link #path}. For example_{@code @RequestMapping("/foo")} is equivalent to_{@code @RequestMapping(path="/foo")}._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this primary mapping, narrowing it for a specific handler method.;@AliasFor("path")_	String[] value() default {}_;the,primary,mapping,expressed,by,this,annotation,p,this,is,an,alias,for,link,path,for,example,code,request,mapping,foo,is,equivalent,to,code,request,mapping,path,foo,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,primary,mapping,narrowing,it,for,a,specific,handler,method;alias,for,path,string,value,default
RequestMapping -> @AliasFor("path") 	String[] value() default {}_;1506454198;The primary mapping expressed by this annotation._<p>This is an alias for {@link #path}. For example_{@code @RequestMapping("/foo")} is equivalent to_{@code @RequestMapping(path="/foo")}._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this primary mapping, narrowing it for a specific handler method.;@AliasFor("path")_	String[] value() default {}_;the,primary,mapping,expressed,by,this,annotation,p,this,is,an,alias,for,link,path,for,example,code,request,mapping,foo,is,equivalent,to,code,request,mapping,path,foo,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,primary,mapping,narrowing,it,for,a,specific,handler,method;alias,for,path,string,value,default
RequestMapping -> @AliasFor("path") 	String[] value() default {}_;1515421792;The primary mapping expressed by this annotation._<p>This is an alias for {@link #path}. For example_{@code @RequestMapping("/foo")} is equivalent to_{@code @RequestMapping(path="/foo")}._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this primary mapping, narrowing it for a specific handler method.;@AliasFor("path")_	String[] value() default {}_;the,primary,mapping,expressed,by,this,annotation,p,this,is,an,alias,for,link,path,for,example,code,request,mapping,foo,is,equivalent,to,code,request,mapping,path,foo,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,primary,mapping,narrowing,it,for,a,specific,handler,method;alias,for,path,string,value,default
RequestMapping -> @AliasFor("path") 	String[] value() default {}_;1523268197;The primary mapping expressed by this annotation._<p>This is an alias for {@link #path}. For example_{@code @RequestMapping("/foo")} is equivalent to_{@code @RequestMapping(path="/foo")}._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this primary mapping, narrowing it for a specific handler method.;@AliasFor("path")_	String[] value() default {}_;the,primary,mapping,expressed,by,this,annotation,p,this,is,an,alias,for,link,path,for,example,code,request,mapping,foo,is,equivalent,to,code,request,mapping,path,foo,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,primary,mapping,narrowing,it,for,a,specific,handler,method;alias,for,path,string,value,default
RequestMapping -> @AliasFor("path") 	String[] value() default {}_;1528795693;The primary mapping expressed by this annotation._<p>This is an alias for {@link #path}. For example_{@code @RequestMapping("/foo")} is equivalent to_{@code @RequestMapping(path="/foo")}._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this primary mapping, narrowing it for a specific handler method.;@AliasFor("path")_	String[] value() default {}_;the,primary,mapping,expressed,by,this,annotation,p,this,is,an,alias,for,link,path,for,example,code,request,mapping,foo,is,equivalent,to,code,request,mapping,path,foo,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,primary,mapping,narrowing,it,for,a,specific,handler,method;alias,for,path,string,value,default
RequestMapping -> String[] headers() default {}_;1328020251;The headers of the mapped request, narrowing the primary mapping._<p>Same format for any environment: a sequence of "My-Header=myValue" style_expressions, with a request only mapped if each such header is found_to have the given value. Expressions can be negated by using the "!=" operator,_as in "My-Header!=myValue". "My-Header" style expressions are also supported,_with such headers having to be present in the request (allowed to have_any value). Finally, "!My-Header" style expressions indicate that the_specified header is <i>not</i> supposed to be present in the request._<p>Also supports media type wildcards (*), for headers such as Accept_and Content-Type. For instance,_<pre>_&#064_RequestMapping(value = "/something", headers = "content-type=text/*")_</pre>_will match requests with a Content-Type of "text/html", "text/plain", etc._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this header restriction (i.e. the type-level restriction_gets checked before the handler method is even resolved)._<p>Maps against HttpServletRequest headers in a Servlet environment,_and against PortletRequest properties in a Portlet 2.0 environment._@see org.springframework.http.MediaType;String[] headers() default {}_;the,headers,of,the,mapped,request,narrowing,the,primary,mapping,p,same,format,for,any,environment,a,sequence,of,my,header,my,value,style,expressions,with,a,request,only,mapped,if,each,such,header,is,found,to,have,the,given,value,expressions,can,be,negated,by,using,the,operator,as,in,my,header,my,value,my,header,style,expressions,are,also,supported,with,such,headers,having,to,be,present,in,the,request,allowed,to,have,any,value,finally,my,header,style,expressions,indicate,that,the,specified,header,is,i,not,i,supposed,to,be,present,in,the,request,p,also,supports,media,type,wildcards,for,headers,such,as,accept,and,content,type,for,instance,pre,064,request,mapping,value,something,headers,content,type,text,pre,will,match,requests,with,a,content,type,of,text,html,text,plain,etc,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,header,restriction,i,e,the,type,level,restriction,gets,checked,before,the,handler,method,is,even,resolved,p,maps,against,http,servlet,request,headers,in,a,servlet,environment,and,against,portlet,request,properties,in,a,portlet,2,0,environment,see,org,springframework,http,media,type;string,headers,default
RequestMapping -> String[] headers() default {}_;1329142650;The headers of the mapped request, narrowing the primary mapping._<p>Same format for any environment: a sequence of "My-Header=myValue" style_expressions, with a request only mapped if each such header is found_to have the given value. Expressions can be negated by using the "!=" operator,_as in "My-Header!=myValue". "My-Header" style expressions are also supported,_with such headers having to be present in the request (allowed to have_any value). Finally, "!My-Header" style expressions indicate that the_specified header is <i>not</i> supposed to be present in the request._<p>Also supports media type wildcards (*), for headers such as Accept_and Content-Type. For instance,_<pre>_&#064_RequestMapping(value = "/something", headers = "content-type=text/*")_</pre>_will match requests with a Content-Type of "text/html", "text/plain", etc._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this header restriction (i.e. the type-level restriction_gets checked before the handler method is even resolved)._<p>Maps against HttpServletRequest headers in a Servlet environment,_and against PortletRequest properties in a Portlet 2.0 environment._@see org.springframework.http.MediaType;String[] headers() default {}_;the,headers,of,the,mapped,request,narrowing,the,primary,mapping,p,same,format,for,any,environment,a,sequence,of,my,header,my,value,style,expressions,with,a,request,only,mapped,if,each,such,header,is,found,to,have,the,given,value,expressions,can,be,negated,by,using,the,operator,as,in,my,header,my,value,my,header,style,expressions,are,also,supported,with,such,headers,having,to,be,present,in,the,request,allowed,to,have,any,value,finally,my,header,style,expressions,indicate,that,the,specified,header,is,i,not,i,supposed,to,be,present,in,the,request,p,also,supports,media,type,wildcards,for,headers,such,as,accept,and,content,type,for,instance,pre,064,request,mapping,value,something,headers,content,type,text,pre,will,match,requests,with,a,content,type,of,text,html,text,plain,etc,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,header,restriction,i,e,the,type,level,restriction,gets,checked,before,the,handler,method,is,even,resolved,p,maps,against,http,servlet,request,headers,in,a,servlet,environment,and,against,portlet,request,properties,in,a,portlet,2,0,environment,see,org,springframework,http,media,type;string,headers,default
RequestMapping -> String[] headers() default {}_;1334781369;The headers of the mapped request, narrowing the primary mapping._<p>Same format for any environment: a sequence of "My-Header=myValue" style_expressions, with a request only mapped if each such header is found_to have the given value. Expressions can be negated by using the "!=" operator,_as in "My-Header!=myValue". "My-Header" style expressions are also supported,_with such headers having to be present in the request (allowed to have_any value). Finally, "!My-Header" style expressions indicate that the_specified header is <i>not</i> supposed to be present in the request._<p>Also supports media type wildcards (*), for headers such as Accept_and Content-Type. For instance,_<pre>_&#064_RequestMapping(value = "/something", headers = "content-type=text/*")_</pre>_will match requests with a Content-Type of "text/html", "text/plain", etc._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this header restriction (i.e. the type-level restriction_gets checked before the handler method is even resolved)._<p>Maps against HttpServletRequest headers in a Servlet environment,_and against PortletRequest properties in a Portlet 2.0 environment._@see org.springframework.http.MediaType;String[] headers() default {}_;the,headers,of,the,mapped,request,narrowing,the,primary,mapping,p,same,format,for,any,environment,a,sequence,of,my,header,my,value,style,expressions,with,a,request,only,mapped,if,each,such,header,is,found,to,have,the,given,value,expressions,can,be,negated,by,using,the,operator,as,in,my,header,my,value,my,header,style,expressions,are,also,supported,with,such,headers,having,to,be,present,in,the,request,allowed,to,have,any,value,finally,my,header,style,expressions,indicate,that,the,specified,header,is,i,not,i,supposed,to,be,present,in,the,request,p,also,supports,media,type,wildcards,for,headers,such,as,accept,and,content,type,for,instance,pre,064,request,mapping,value,something,headers,content,type,text,pre,will,match,requests,with,a,content,type,of,text,html,text,plain,etc,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,header,restriction,i,e,the,type,level,restriction,gets,checked,before,the,handler,method,is,even,resolved,p,maps,against,http,servlet,request,headers,in,a,servlet,environment,and,against,portlet,request,properties,in,a,portlet,2,0,environment,see,org,springframework,http,media,type;string,headers,default
RequestMapping -> String[] headers() default {}_;1335774711;The headers of the mapped request, narrowing the primary mapping._<p>Same format for any environment: a sequence of "My-Header=myValue" style_expressions, with a request only mapped if each such header is found_to have the given value. Expressions can be negated by using the "!=" operator,_as in "My-Header!=myValue". "My-Header" style expressions are also supported,_with such headers having to be present in the request (allowed to have_any value). Finally, "!My-Header" style expressions indicate that the_specified header is <i>not</i> supposed to be present in the request._<p>Also supports media type wildcards (*), for headers such as Accept_and Content-Type. For instance,_<pre>_&#064_RequestMapping(value = "/something", headers = "content-type=text/*")_</pre>_will match requests with a Content-Type of "text/html", "text/plain", etc._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this header restriction (i.e. the type-level restriction_gets checked before the handler method is even resolved)._<p>Maps against HttpServletRequest headers in a Servlet environment,_and against PortletRequest properties in a Portlet 2.0 environment._@see org.springframework.http.MediaType;String[] headers() default {}_;the,headers,of,the,mapped,request,narrowing,the,primary,mapping,p,same,format,for,any,environment,a,sequence,of,my,header,my,value,style,expressions,with,a,request,only,mapped,if,each,such,header,is,found,to,have,the,given,value,expressions,can,be,negated,by,using,the,operator,as,in,my,header,my,value,my,header,style,expressions,are,also,supported,with,such,headers,having,to,be,present,in,the,request,allowed,to,have,any,value,finally,my,header,style,expressions,indicate,that,the,specified,header,is,i,not,i,supposed,to,be,present,in,the,request,p,also,supports,media,type,wildcards,for,headers,such,as,accept,and,content,type,for,instance,pre,064,request,mapping,value,something,headers,content,type,text,pre,will,match,requests,with,a,content,type,of,text,html,text,plain,etc,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,header,restriction,i,e,the,type,level,restriction,gets,checked,before,the,handler,method,is,even,resolved,p,maps,against,http,servlet,request,headers,in,a,servlet,environment,and,against,portlet,request,properties,in,a,portlet,2,0,environment,see,org,springframework,http,media,type;string,headers,default
RequestMapping -> String[] headers() default {}_;1337025676;The headers of the mapped request, narrowing the primary mapping._<p>Same format for any environment: a sequence of "My-Header=myValue" style_expressions, with a request only mapped if each such header is found_to have the given value. Expressions can be negated by using the "!=" operator,_as in "My-Header!=myValue". "My-Header" style expressions are also supported,_with such headers having to be present in the request (allowed to have_any value). Finally, "!My-Header" style expressions indicate that the_specified header is <i>not</i> supposed to be present in the request._<p>Also supports media type wildcards (*), for headers such as Accept_and Content-Type. For instance,_<pre>_&#064_RequestMapping(value = "/something", headers = "content-type=text/*")_</pre>_will match requests with a Content-Type of "text/html", "text/plain", etc._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this header restriction (i.e. the type-level restriction_gets checked before the handler method is even resolved)._<p>Maps against HttpServletRequest headers in a Servlet environment,_and against PortletRequest properties in a Portlet 2.0 environment._@see org.springframework.http.MediaType;String[] headers() default {}_;the,headers,of,the,mapped,request,narrowing,the,primary,mapping,p,same,format,for,any,environment,a,sequence,of,my,header,my,value,style,expressions,with,a,request,only,mapped,if,each,such,header,is,found,to,have,the,given,value,expressions,can,be,negated,by,using,the,operator,as,in,my,header,my,value,my,header,style,expressions,are,also,supported,with,such,headers,having,to,be,present,in,the,request,allowed,to,have,any,value,finally,my,header,style,expressions,indicate,that,the,specified,header,is,i,not,i,supposed,to,be,present,in,the,request,p,also,supports,media,type,wildcards,for,headers,such,as,accept,and,content,type,for,instance,pre,064,request,mapping,value,something,headers,content,type,text,pre,will,match,requests,with,a,content,type,of,text,html,text,plain,etc,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,header,restriction,i,e,the,type,level,restriction,gets,checked,before,the,handler,method,is,even,resolved,p,maps,against,http,servlet,request,headers,in,a,servlet,environment,and,against,portlet,request,properties,in,a,portlet,2,0,environment,see,org,springframework,http,media,type;string,headers,default
RequestMapping -> String[] headers() default {}_;1340018565;The headers of the mapped request, narrowing the primary mapping._<p>Same format for any environment: a sequence of "My-Header=myValue" style_expressions, with a request only mapped if each such header is found_to have the given value. Expressions can be negated by using the "!=" operator,_as in "My-Header!=myValue". "My-Header" style expressions are also supported,_with such headers having to be present in the request (allowed to have_any value). Finally, "!My-Header" style expressions indicate that the_specified header is <i>not</i> supposed to be present in the request._<p>Also supports media type wildcards (*), for headers such as Accept_and Content-Type. For instance,_<pre>_&#064_RequestMapping(value = "/something", headers = "content-type=text/*")_</pre>_will match requests with a Content-Type of "text/html", "text/plain", etc._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this header restriction (i.e. the type-level restriction_gets checked before the handler method is even resolved)._<p>Maps against HttpServletRequest headers in a Servlet environment,_and against PortletRequest properties in a Portlet 2.0 environment._@see org.springframework.http.MediaType;String[] headers() default {}_;the,headers,of,the,mapped,request,narrowing,the,primary,mapping,p,same,format,for,any,environment,a,sequence,of,my,header,my,value,style,expressions,with,a,request,only,mapped,if,each,such,header,is,found,to,have,the,given,value,expressions,can,be,negated,by,using,the,operator,as,in,my,header,my,value,my,header,style,expressions,are,also,supported,with,such,headers,having,to,be,present,in,the,request,allowed,to,have,any,value,finally,my,header,style,expressions,indicate,that,the,specified,header,is,i,not,i,supposed,to,be,present,in,the,request,p,also,supports,media,type,wildcards,for,headers,such,as,accept,and,content,type,for,instance,pre,064,request,mapping,value,something,headers,content,type,text,pre,will,match,requests,with,a,content,type,of,text,html,text,plain,etc,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,header,restriction,i,e,the,type,level,restriction,gets,checked,before,the,handler,method,is,even,resolved,p,maps,against,http,servlet,request,headers,in,a,servlet,environment,and,against,portlet,request,properties,in,a,portlet,2,0,environment,see,org,springframework,http,media,type;string,headers,default
RequestMapping -> String[] headers() default {}_;1340398642;The headers of the mapped request, narrowing the primary mapping._<p>Same format for any environment: a sequence of "My-Header=myValue" style_expressions, with a request only mapped if each such header is found_to have the given value. Expressions can be negated by using the "!=" operator,_as in "My-Header!=myValue". "My-Header" style expressions are also supported,_with such headers having to be present in the request (allowed to have_any value). Finally, "!My-Header" style expressions indicate that the_specified header is <i>not</i> supposed to be present in the request._<p>Also supports media type wildcards (*), for headers such as Accept_and Content-Type. For instance,_<pre>_&#064_RequestMapping(value = "/something", headers = "content-type=text/*")_</pre>_will match requests with a Content-Type of "text/html", "text/plain", etc._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this header restriction (i.e. the type-level restriction_gets checked before the handler method is even resolved)._<p>Maps against HttpServletRequest headers in a Servlet environment,_and against PortletRequest properties in a Portlet 2.0 environment._@see org.springframework.http.MediaType;String[] headers() default {}_;the,headers,of,the,mapped,request,narrowing,the,primary,mapping,p,same,format,for,any,environment,a,sequence,of,my,header,my,value,style,expressions,with,a,request,only,mapped,if,each,such,header,is,found,to,have,the,given,value,expressions,can,be,negated,by,using,the,operator,as,in,my,header,my,value,my,header,style,expressions,are,also,supported,with,such,headers,having,to,be,present,in,the,request,allowed,to,have,any,value,finally,my,header,style,expressions,indicate,that,the,specified,header,is,i,not,i,supposed,to,be,present,in,the,request,p,also,supports,media,type,wildcards,for,headers,such,as,accept,and,content,type,for,instance,pre,064,request,mapping,value,something,headers,content,type,text,pre,will,match,requests,with,a,content,type,of,text,html,text,plain,etc,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,header,restriction,i,e,the,type,level,restriction,gets,checked,before,the,handler,method,is,even,resolved,p,maps,against,http,servlet,request,headers,in,a,servlet,environment,and,against,portlet,request,properties,in,a,portlet,2,0,environment,see,org,springframework,http,media,type;string,headers,default
RequestMapping -> String[] headers() default {}_;1345574045;The headers of the mapped request, narrowing the primary mapping._<p>Same format for any environment: a sequence of "My-Header=myValue" style_expressions, with a request only mapped if each such header is found_to have the given value. Expressions can be negated by using the "!=" operator,_as in "My-Header!=myValue". "My-Header" style expressions are also supported,_with such headers having to be present in the request (allowed to have_any value). Finally, "!My-Header" style expressions indicate that the_specified header is <i>not</i> supposed to be present in the request._<p>Also supports media type wildcards (*), for headers such as Accept_and Content-Type. For instance,_<pre>_&#064_RequestMapping(value = "/something", headers = "content-type=text/*")_</pre>_will match requests with a Content-Type of "text/html", "text/plain", etc._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this header restriction (i.e. the type-level restriction_gets checked before the handler method is even resolved)._<p>Maps against HttpServletRequest headers in a Servlet environment,_and against PortletRequest properties in a Portlet 2.0 environment._@see org.springframework.http.MediaType;String[] headers() default {}_;the,headers,of,the,mapped,request,narrowing,the,primary,mapping,p,same,format,for,any,environment,a,sequence,of,my,header,my,value,style,expressions,with,a,request,only,mapped,if,each,such,header,is,found,to,have,the,given,value,expressions,can,be,negated,by,using,the,operator,as,in,my,header,my,value,my,header,style,expressions,are,also,supported,with,such,headers,having,to,be,present,in,the,request,allowed,to,have,any,value,finally,my,header,style,expressions,indicate,that,the,specified,header,is,i,not,i,supposed,to,be,present,in,the,request,p,also,supports,media,type,wildcards,for,headers,such,as,accept,and,content,type,for,instance,pre,064,request,mapping,value,something,headers,content,type,text,pre,will,match,requests,with,a,content,type,of,text,html,text,plain,etc,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,header,restriction,i,e,the,type,level,restriction,gets,checked,before,the,handler,method,is,even,resolved,p,maps,against,http,servlet,request,headers,in,a,servlet,environment,and,against,portlet,request,properties,in,a,portlet,2,0,environment,see,org,springframework,http,media,type;string,headers,default
RequestMapping -> String[] headers() default {}_;1346174472;The headers of the mapped request, narrowing the primary mapping._<p>Same format for any environment: a sequence of "My-Header=myValue" style_expressions, with a request only mapped if each such header is found_to have the given value. Expressions can be negated by using the "!=" operator,_as in "My-Header!=myValue". "My-Header" style expressions are also supported,_with such headers having to be present in the request (allowed to have_any value). Finally, "!My-Header" style expressions indicate that the_specified header is <i>not</i> supposed to be present in the request._<p>Also supports media type wildcards (*), for headers such as Accept_and Content-Type. For instance,_<pre>_&#064_RequestMapping(value = "/something", headers = "content-type=text/*")_</pre>_will match requests with a Content-Type of "text/html", "text/plain", etc._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this header restriction (i.e. the type-level restriction_gets checked before the handler method is even resolved)._<p>Maps against HttpServletRequest headers in a Servlet environment,_and against PortletRequest properties in a Portlet 2.0 environment._@see org.springframework.http.MediaType;String[] headers() default {}_;the,headers,of,the,mapped,request,narrowing,the,primary,mapping,p,same,format,for,any,environment,a,sequence,of,my,header,my,value,style,expressions,with,a,request,only,mapped,if,each,such,header,is,found,to,have,the,given,value,expressions,can,be,negated,by,using,the,operator,as,in,my,header,my,value,my,header,style,expressions,are,also,supported,with,such,headers,having,to,be,present,in,the,request,allowed,to,have,any,value,finally,my,header,style,expressions,indicate,that,the,specified,header,is,i,not,i,supposed,to,be,present,in,the,request,p,also,supports,media,type,wildcards,for,headers,such,as,accept,and,content,type,for,instance,pre,064,request,mapping,value,something,headers,content,type,text,pre,will,match,requests,with,a,content,type,of,text,html,text,plain,etc,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,header,restriction,i,e,the,type,level,restriction,gets,checked,before,the,handler,method,is,even,resolved,p,maps,against,http,servlet,request,headers,in,a,servlet,environment,and,against,portlet,request,properties,in,a,portlet,2,0,environment,see,org,springframework,http,media,type;string,headers,default
RequestMapping -> String[] headers() default {}_;1355313310;The headers of the mapped request, narrowing the primary mapping._<p>Same format for any environment: a sequence of "My-Header=myValue" style_expressions, with a request only mapped if each such header is found_to have the given value. Expressions can be negated by using the "!=" operator,_as in "My-Header!=myValue". "My-Header" style expressions are also supported,_with such headers having to be present in the request (allowed to have_any value). Finally, "!My-Header" style expressions indicate that the_specified header is <i>not</i> supposed to be present in the request._<p>Also supports media type wildcards (*), for headers such as Accept_and Content-Type. For instance,_<pre>_&#064_RequestMapping(value = "/something", headers = "content-type=text/*")_</pre>_will match requests with a Content-Type of "text/html", "text/plain", etc._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this header restriction (i.e. the type-level restriction_gets checked before the handler method is even resolved)._<p>Maps against HttpServletRequest headers in a Servlet environment,_and against PortletRequest properties in a Portlet 2.0 environment._@see org.springframework.http.MediaType;String[] headers() default {}_;the,headers,of,the,mapped,request,narrowing,the,primary,mapping,p,same,format,for,any,environment,a,sequence,of,my,header,my,value,style,expressions,with,a,request,only,mapped,if,each,such,header,is,found,to,have,the,given,value,expressions,can,be,negated,by,using,the,operator,as,in,my,header,my,value,my,header,style,expressions,are,also,supported,with,such,headers,having,to,be,present,in,the,request,allowed,to,have,any,value,finally,my,header,style,expressions,indicate,that,the,specified,header,is,i,not,i,supposed,to,be,present,in,the,request,p,also,supports,media,type,wildcards,for,headers,such,as,accept,and,content,type,for,instance,pre,064,request,mapping,value,something,headers,content,type,text,pre,will,match,requests,with,a,content,type,of,text,html,text,plain,etc,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,header,restriction,i,e,the,type,level,restriction,gets,checked,before,the,handler,method,is,even,resolved,p,maps,against,http,servlet,request,headers,in,a,servlet,environment,and,against,portlet,request,properties,in,a,portlet,2,0,environment,see,org,springframework,http,media,type;string,headers,default
RequestMapping -> String[] headers() default {}_;1356735495;The headers of the mapped request, narrowing the primary mapping._<p>Same format for any environment: a sequence of "My-Header=myValue" style_expressions, with a request only mapped if each such header is found_to have the given value. Expressions can be negated by using the "!=" operator,_as in "My-Header!=myValue". "My-Header" style expressions are also supported,_with such headers having to be present in the request (allowed to have_any value). Finally, "!My-Header" style expressions indicate that the_specified header is <i>not</i> supposed to be present in the request._<p>Also supports media type wildcards (*), for headers such as Accept_and Content-Type. For instance,_<pre>_&#064_RequestMapping(value = "/something", headers = "content-type=text/*")_</pre>_will match requests with a Content-Type of "text/html", "text/plain", etc._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this header restriction (i.e. the type-level restriction_gets checked before the handler method is even resolved)._<p>Maps against HttpServletRequest headers in a Servlet environment,_and against PortletRequest properties in a Portlet 2.0 environment._@see org.springframework.http.MediaType;String[] headers() default {}_;the,headers,of,the,mapped,request,narrowing,the,primary,mapping,p,same,format,for,any,environment,a,sequence,of,my,header,my,value,style,expressions,with,a,request,only,mapped,if,each,such,header,is,found,to,have,the,given,value,expressions,can,be,negated,by,using,the,operator,as,in,my,header,my,value,my,header,style,expressions,are,also,supported,with,such,headers,having,to,be,present,in,the,request,allowed,to,have,any,value,finally,my,header,style,expressions,indicate,that,the,specified,header,is,i,not,i,supposed,to,be,present,in,the,request,p,also,supports,media,type,wildcards,for,headers,such,as,accept,and,content,type,for,instance,pre,064,request,mapping,value,something,headers,content,type,text,pre,will,match,requests,with,a,content,type,of,text,html,text,plain,etc,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,header,restriction,i,e,the,type,level,restriction,gets,checked,before,the,handler,method,is,even,resolved,p,maps,against,http,servlet,request,headers,in,a,servlet,environment,and,against,portlet,request,properties,in,a,portlet,2,0,environment,see,org,springframework,http,media,type;string,headers,default
RequestMapping -> String[] headers() default {}_;1362408075;The headers of the mapped request, narrowing the primary mapping._<p>Same format for any environment: a sequence of "My-Header=myValue" style_expressions, with a request only mapped if each such header is found_to have the given value. Expressions can be negated by using the "!=" operator,_as in "My-Header!=myValue". "My-Header" style expressions are also supported,_with such headers having to be present in the request (allowed to have_any value). Finally, "!My-Header" style expressions indicate that the_specified header is <i>not</i> supposed to be present in the request._<p>Also supports media type wildcards (*), for headers such as Accept_and Content-Type. For instance,_<pre>_&#064_RequestMapping(value = "/something", headers = "content-type=text/*")_</pre>_will match requests with a Content-Type of "text/html", "text/plain", etc._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this header restriction (i.e. the type-level restriction_gets checked before the handler method is even resolved)._<p>Maps against HttpServletRequest headers in a Servlet environment,_and against PortletRequest properties in a Portlet 2.0 environment._@see org.springframework.http.MediaType;String[] headers() default {}_;the,headers,of,the,mapped,request,narrowing,the,primary,mapping,p,same,format,for,any,environment,a,sequence,of,my,header,my,value,style,expressions,with,a,request,only,mapped,if,each,such,header,is,found,to,have,the,given,value,expressions,can,be,negated,by,using,the,operator,as,in,my,header,my,value,my,header,style,expressions,are,also,supported,with,such,headers,having,to,be,present,in,the,request,allowed,to,have,any,value,finally,my,header,style,expressions,indicate,that,the,specified,header,is,i,not,i,supposed,to,be,present,in,the,request,p,also,supports,media,type,wildcards,for,headers,such,as,accept,and,content,type,for,instance,pre,064,request,mapping,value,something,headers,content,type,text,pre,will,match,requests,with,a,content,type,of,text,html,text,plain,etc,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,header,restriction,i,e,the,type,level,restriction,gets,checked,before,the,handler,method,is,even,resolved,p,maps,against,http,servlet,request,headers,in,a,servlet,environment,and,against,portlet,request,properties,in,a,portlet,2,0,environment,see,org,springframework,http,media,type;string,headers,default
RequestMapping -> String[] headers() default {}_;1367955086;The headers of the mapped request, narrowing the primary mapping._<p>Same format for any environment: a sequence of "My-Header=myValue" style_expressions, with a request only mapped if each such header is found_to have the given value. Expressions can be negated by using the "!=" operator,_as in "My-Header!=myValue". "My-Header" style expressions are also supported,_with such headers having to be present in the request (allowed to have_any value). Finally, "!My-Header" style expressions indicate that the_specified header is <i>not</i> supposed to be present in the request._<p>Also supports media type wildcards (*), for headers such as Accept_and Content-Type. For instance,_<pre class="code">_&#064_RequestMapping(value = "/something", headers = "content-type=text/*")_</pre>_will match requests with a Content-Type of "text/html", "text/plain", etc._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this header restriction (i.e. the type-level restriction_gets checked before the handler method is even resolved)._<p>Maps against HttpServletRequest headers in a Servlet environment,_and against PortletRequest properties in a Portlet 2.0 environment._@see org.springframework.http.MediaType;String[] headers() default {}_;the,headers,of,the,mapped,request,narrowing,the,primary,mapping,p,same,format,for,any,environment,a,sequence,of,my,header,my,value,style,expressions,with,a,request,only,mapped,if,each,such,header,is,found,to,have,the,given,value,expressions,can,be,negated,by,using,the,operator,as,in,my,header,my,value,my,header,style,expressions,are,also,supported,with,such,headers,having,to,be,present,in,the,request,allowed,to,have,any,value,finally,my,header,style,expressions,indicate,that,the,specified,header,is,i,not,i,supposed,to,be,present,in,the,request,p,also,supports,media,type,wildcards,for,headers,such,as,accept,and,content,type,for,instance,pre,class,code,064,request,mapping,value,something,headers,content,type,text,pre,will,match,requests,with,a,content,type,of,text,html,text,plain,etc,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,header,restriction,i,e,the,type,level,restriction,gets,checked,before,the,handler,method,is,even,resolved,p,maps,against,http,servlet,request,headers,in,a,servlet,environment,and,against,portlet,request,properties,in,a,portlet,2,0,environment,see,org,springframework,http,media,type;string,headers,default
RequestMapping -> String[] headers() default {}_;1372363092;The headers of the mapped request, narrowing the primary mapping._<p>Same format for any environment: a sequence of "My-Header=myValue" style_expressions, with a request only mapped if each such header is found_to have the given value. Expressions can be negated by using the "!=" operator,_as in "My-Header!=myValue". "My-Header" style expressions are also supported,_with such headers having to be present in the request (allowed to have_any value). Finally, "!My-Header" style expressions indicate that the_specified header is <i>not</i> supposed to be present in the request._<p>Also supports media type wildcards (*), for headers such as Accept_and Content-Type. For instance,_<pre class="code">_&#064_RequestMapping(value = "/something", headers = "content-type=text/*")_</pre>_will match requests with a Content-Type of "text/html", "text/plain", etc._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this header restriction (i.e. the type-level restriction_gets checked before the handler method is even resolved)._<p>Maps against HttpServletRequest headers in a Servlet environment,_and against PortletRequest properties in a Portlet 2.0 environment._@see org.springframework.http.MediaType;String[] headers() default {}_;the,headers,of,the,mapped,request,narrowing,the,primary,mapping,p,same,format,for,any,environment,a,sequence,of,my,header,my,value,style,expressions,with,a,request,only,mapped,if,each,such,header,is,found,to,have,the,given,value,expressions,can,be,negated,by,using,the,operator,as,in,my,header,my,value,my,header,style,expressions,are,also,supported,with,such,headers,having,to,be,present,in,the,request,allowed,to,have,any,value,finally,my,header,style,expressions,indicate,that,the,specified,header,is,i,not,i,supposed,to,be,present,in,the,request,p,also,supports,media,type,wildcards,for,headers,such,as,accept,and,content,type,for,instance,pre,class,code,064,request,mapping,value,something,headers,content,type,text,pre,will,match,requests,with,a,content,type,of,text,html,text,plain,etc,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,header,restriction,i,e,the,type,level,restriction,gets,checked,before,the,handler,method,is,even,resolved,p,maps,against,http,servlet,request,headers,in,a,servlet,environment,and,against,portlet,request,properties,in,a,portlet,2,0,environment,see,org,springframework,http,media,type;string,headers,default
RequestMapping -> String[] headers() default {}_;1385501137;The headers of the mapped request, narrowing the primary mapping._<p>Same format for any environment: a sequence of "My-Header=myValue" style_expressions, with a request only mapped if each such header is found_to have the given value. Expressions can be negated by using the "!=" operator,_as in "My-Header!=myValue". "My-Header" style expressions are also supported,_with such headers having to be present in the request (allowed to have_any value). Finally, "!My-Header" style expressions indicate that the_specified header is <i>not</i> supposed to be present in the request._<p>Also supports media type wildcards (*), for headers such as Accept_and Content-Type. For instance,_<pre class="code">_&#064_RequestMapping(value = "/something", headers = "content-type=text/*")_</pre>_will match requests with a Content-Type of "text/html", "text/plain", etc._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this header restriction (i.e. the type-level restriction_gets checked before the handler method is even resolved)._<p>Maps against HttpServletRequest headers in a Servlet environment,_and against PortletRequest properties in a Portlet 2.0 environment._@see org.springframework.http.MediaType;String[] headers() default {}_;the,headers,of,the,mapped,request,narrowing,the,primary,mapping,p,same,format,for,any,environment,a,sequence,of,my,header,my,value,style,expressions,with,a,request,only,mapped,if,each,such,header,is,found,to,have,the,given,value,expressions,can,be,negated,by,using,the,operator,as,in,my,header,my,value,my,header,style,expressions,are,also,supported,with,such,headers,having,to,be,present,in,the,request,allowed,to,have,any,value,finally,my,header,style,expressions,indicate,that,the,specified,header,is,i,not,i,supposed,to,be,present,in,the,request,p,also,supports,media,type,wildcards,for,headers,such,as,accept,and,content,type,for,instance,pre,class,code,064,request,mapping,value,something,headers,content,type,text,pre,will,match,requests,with,a,content,type,of,text,html,text,plain,etc,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,header,restriction,i,e,the,type,level,restriction,gets,checked,before,the,handler,method,is,even,resolved,p,maps,against,http,servlet,request,headers,in,a,servlet,environment,and,against,portlet,request,properties,in,a,portlet,2,0,environment,see,org,springframework,http,media,type;string,headers,default
RequestMapping -> String[] headers() default {}_;1390272537;The headers of the mapped request, narrowing the primary mapping._<p>Same format for any environment: a sequence of "My-Header=myValue" style_expressions, with a request only mapped if each such header is found_to have the given value. Expressions can be negated by using the "!=" operator,_as in "My-Header!=myValue". "My-Header" style expressions are also supported,_with such headers having to be present in the request (allowed to have_any value). Finally, "!My-Header" style expressions indicate that the_specified header is <i>not</i> supposed to be present in the request._<p>Also supports media type wildcards (*), for headers such as Accept_and Content-Type. For instance,_<pre class="code">_&#064_RequestMapping(value = "/something", headers = "content-type=text/*")_</pre>_will match requests with a Content-Type of "text/html", "text/plain", etc._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this header restriction (i.e. the type-level restriction_gets checked before the handler method is even resolved)._<p>Maps against HttpServletRequest headers in a Servlet environment,_and against PortletRequest properties in a Portlet 2.0 environment._@see org.springframework.http.MediaType;String[] headers() default {}_;the,headers,of,the,mapped,request,narrowing,the,primary,mapping,p,same,format,for,any,environment,a,sequence,of,my,header,my,value,style,expressions,with,a,request,only,mapped,if,each,such,header,is,found,to,have,the,given,value,expressions,can,be,negated,by,using,the,operator,as,in,my,header,my,value,my,header,style,expressions,are,also,supported,with,such,headers,having,to,be,present,in,the,request,allowed,to,have,any,value,finally,my,header,style,expressions,indicate,that,the,specified,header,is,i,not,i,supposed,to,be,present,in,the,request,p,also,supports,media,type,wildcards,for,headers,such,as,accept,and,content,type,for,instance,pre,class,code,064,request,mapping,value,something,headers,content,type,text,pre,will,match,requests,with,a,content,type,of,text,html,text,plain,etc,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,header,restriction,i,e,the,type,level,restriction,gets,checked,before,the,handler,method,is,even,resolved,p,maps,against,http,servlet,request,headers,in,a,servlet,environment,and,against,portlet,request,properties,in,a,portlet,2,0,environment,see,org,springframework,http,media,type;string,headers,default
RequestMapping -> String[] headers() default {}_;1392311784;The headers of the mapped request, narrowing the primary mapping._<p>Same format for any environment: a sequence of "My-Header=myValue" style_expressions, with a request only mapped if each such header is found_to have the given value. Expressions can be negated by using the "!=" operator,_as in "My-Header!=myValue". "My-Header" style expressions are also supported,_with such headers having to be present in the request (allowed to have_any value). Finally, "!My-Header" style expressions indicate that the_specified header is <i>not</i> supposed to be present in the request._<p>Also supports media type wildcards (*), for headers such as Accept_and Content-Type. For instance,_<pre class="code">_&#064_RequestMapping(value = "/something", headers = "content-type=text/*")_</pre>_will match requests with a Content-Type of "text/html", "text/plain", etc._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this header restriction (i.e. the type-level restriction_gets checked before the handler method is even resolved)._<p>Maps against HttpServletRequest headers in a Servlet environment,_and against PortletRequest properties in a Portlet 2.0 environment._@see org.springframework.http.MediaType;String[] headers() default {}_;the,headers,of,the,mapped,request,narrowing,the,primary,mapping,p,same,format,for,any,environment,a,sequence,of,my,header,my,value,style,expressions,with,a,request,only,mapped,if,each,such,header,is,found,to,have,the,given,value,expressions,can,be,negated,by,using,the,operator,as,in,my,header,my,value,my,header,style,expressions,are,also,supported,with,such,headers,having,to,be,present,in,the,request,allowed,to,have,any,value,finally,my,header,style,expressions,indicate,that,the,specified,header,is,i,not,i,supposed,to,be,present,in,the,request,p,also,supports,media,type,wildcards,for,headers,such,as,accept,and,content,type,for,instance,pre,class,code,064,request,mapping,value,something,headers,content,type,text,pre,will,match,requests,with,a,content,type,of,text,html,text,plain,etc,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,header,restriction,i,e,the,type,level,restriction,gets,checked,before,the,handler,method,is,even,resolved,p,maps,against,http,servlet,request,headers,in,a,servlet,environment,and,against,portlet,request,properties,in,a,portlet,2,0,environment,see,org,springframework,http,media,type;string,headers,default
RequestMapping -> String[] headers() default {}_;1398737597;The headers of the mapped request, narrowing the primary mapping._<p>Same format for any environment: a sequence of "My-Header=myValue" style_expressions, with a request only mapped if each such header is found_to have the given value. Expressions can be negated by using the "!=" operator,_as in "My-Header!=myValue". "My-Header" style expressions are also supported,_with such headers having to be present in the request (allowed to have_any value). Finally, "!My-Header" style expressions indicate that the_specified header is <i>not</i> supposed to be present in the request._<p>Also supports media type wildcards (*), for headers such as Accept_and Content-Type. For instance,_<pre class="code">_&#064_RequestMapping(value = "/something", headers = "content-type=text/*")_</pre>_will match requests with a Content-Type of "text/html", "text/plain", etc._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this header restriction (i.e. the type-level restriction_gets checked before the handler method is even resolved)._<p>Maps against HttpServletRequest headers in a Servlet environment,_and against PortletRequest properties in a Portlet 2.0 environment._@see org.springframework.http.MediaType;String[] headers() default {}_;the,headers,of,the,mapped,request,narrowing,the,primary,mapping,p,same,format,for,any,environment,a,sequence,of,my,header,my,value,style,expressions,with,a,request,only,mapped,if,each,such,header,is,found,to,have,the,given,value,expressions,can,be,negated,by,using,the,operator,as,in,my,header,my,value,my,header,style,expressions,are,also,supported,with,such,headers,having,to,be,present,in,the,request,allowed,to,have,any,value,finally,my,header,style,expressions,indicate,that,the,specified,header,is,i,not,i,supposed,to,be,present,in,the,request,p,also,supports,media,type,wildcards,for,headers,such,as,accept,and,content,type,for,instance,pre,class,code,064,request,mapping,value,something,headers,content,type,text,pre,will,match,requests,with,a,content,type,of,text,html,text,plain,etc,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,header,restriction,i,e,the,type,level,restriction,gets,checked,before,the,handler,method,is,even,resolved,p,maps,against,http,servlet,request,headers,in,a,servlet,environment,and,against,portlet,request,properties,in,a,portlet,2,0,environment,see,org,springframework,http,media,type;string,headers,default
RequestMapping -> String[] headers() default {}_;1398961739;The headers of the mapped request, narrowing the primary mapping._<p>Same format for any environment: a sequence of "My-Header=myValue" style_expressions, with a request only mapped if each such header is found_to have the given value. Expressions can be negated by using the "!=" operator,_as in "My-Header!=myValue". "My-Header" style expressions are also supported,_with such headers having to be present in the request (allowed to have_any value). Finally, "!My-Header" style expressions indicate that the_specified header is <i>not</i> supposed to be present in the request._<p>Also supports media type wildcards (*), for headers such as Accept_and Content-Type. For instance,_<pre class="code">_&#064_RequestMapping(value = "/something", headers = "content-type=text/*")_</pre>_will match requests with a Content-Type of "text/html", "text/plain", etc._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this header restriction (i.e. the type-level restriction_gets checked before the handler method is even resolved)._<p>Maps against HttpServletRequest headers in a Servlet environment,_and against PortletRequest properties in a Portlet 2.0 environment._@see org.springframework.http.MediaType;String[] headers() default {}_;the,headers,of,the,mapped,request,narrowing,the,primary,mapping,p,same,format,for,any,environment,a,sequence,of,my,header,my,value,style,expressions,with,a,request,only,mapped,if,each,such,header,is,found,to,have,the,given,value,expressions,can,be,negated,by,using,the,operator,as,in,my,header,my,value,my,header,style,expressions,are,also,supported,with,such,headers,having,to,be,present,in,the,request,allowed,to,have,any,value,finally,my,header,style,expressions,indicate,that,the,specified,header,is,i,not,i,supposed,to,be,present,in,the,request,p,also,supports,media,type,wildcards,for,headers,such,as,accept,and,content,type,for,instance,pre,class,code,064,request,mapping,value,something,headers,content,type,text,pre,will,match,requests,with,a,content,type,of,text,html,text,plain,etc,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,header,restriction,i,e,the,type,level,restriction,gets,checked,before,the,handler,method,is,even,resolved,p,maps,against,http,servlet,request,headers,in,a,servlet,environment,and,against,portlet,request,properties,in,a,portlet,2,0,environment,see,org,springframework,http,media,type;string,headers,default
RequestMapping -> String[] headers() default {}_;1399404473;The headers of the mapped request, narrowing the primary mapping._<p>Same format for any environment: a sequence of "My-Header=myValue" style_expressions, with a request only mapped if each such header is found_to have the given value. Expressions can be negated by using the "!=" operator,_as in "My-Header!=myValue". "My-Header" style expressions are also supported,_with such headers having to be present in the request (allowed to have_any value). Finally, "!My-Header" style expressions indicate that the_specified header is <i>not</i> supposed to be present in the request._<p>Also supports media type wildcards (*), for headers such as Accept_and Content-Type. For instance,_<pre class="code">_&#064_RequestMapping(value = "/something", headers = "content-type=text/*")_</pre>_will match requests with a Content-Type of "text/html", "text/plain", etc._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this header restriction (i.e. the type-level restriction_gets checked before the handler method is even resolved)._<p>Maps against HttpServletRequest headers in a Servlet environment,_and against PortletRequest properties in a Portlet 2.0 environment._@see org.springframework.http.MediaType;String[] headers() default {}_;the,headers,of,the,mapped,request,narrowing,the,primary,mapping,p,same,format,for,any,environment,a,sequence,of,my,header,my,value,style,expressions,with,a,request,only,mapped,if,each,such,header,is,found,to,have,the,given,value,expressions,can,be,negated,by,using,the,operator,as,in,my,header,my,value,my,header,style,expressions,are,also,supported,with,such,headers,having,to,be,present,in,the,request,allowed,to,have,any,value,finally,my,header,style,expressions,indicate,that,the,specified,header,is,i,not,i,supposed,to,be,present,in,the,request,p,also,supports,media,type,wildcards,for,headers,such,as,accept,and,content,type,for,instance,pre,class,code,064,request,mapping,value,something,headers,content,type,text,pre,will,match,requests,with,a,content,type,of,text,html,text,plain,etc,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,header,restriction,i,e,the,type,level,restriction,gets,checked,before,the,handler,method,is,even,resolved,p,maps,against,http,servlet,request,headers,in,a,servlet,environment,and,against,portlet,request,properties,in,a,portlet,2,0,environment,see,org,springframework,http,media,type;string,headers,default
RequestMapping -> String[] headers() default {}_;1403791284;The headers of the mapped request, narrowing the primary mapping._<p>Same format for any environment: a sequence of "My-Header=myValue" style_expressions, with a request only mapped if each such header is found_to have the given value. Expressions can be negated by using the "!=" operator,_as in "My-Header!=myValue". "My-Header" style expressions are also supported,_with such headers having to be present in the request (allowed to have_any value). Finally, "!My-Header" style expressions indicate that the_specified header is <i>not</i> supposed to be present in the request._<p>Also supports media type wildcards (*), for headers such as Accept_and Content-Type. For instance,_<pre class="code">_&#064_RequestMapping(value = "/something", headers = "content-type=text/*")_</pre>_will match requests with a Content-Type of "text/html", "text/plain", etc._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this header restriction (i.e. the type-level restriction_gets checked before the handler method is even resolved)._<p>Maps against HttpServletRequest headers in a Servlet environment,_and against PortletRequest properties in a Portlet 2.0 environment._@see org.springframework.http.MediaType;String[] headers() default {}_;the,headers,of,the,mapped,request,narrowing,the,primary,mapping,p,same,format,for,any,environment,a,sequence,of,my,header,my,value,style,expressions,with,a,request,only,mapped,if,each,such,header,is,found,to,have,the,given,value,expressions,can,be,negated,by,using,the,operator,as,in,my,header,my,value,my,header,style,expressions,are,also,supported,with,such,headers,having,to,be,present,in,the,request,allowed,to,have,any,value,finally,my,header,style,expressions,indicate,that,the,specified,header,is,i,not,i,supposed,to,be,present,in,the,request,p,also,supports,media,type,wildcards,for,headers,such,as,accept,and,content,type,for,instance,pre,class,code,064,request,mapping,value,something,headers,content,type,text,pre,will,match,requests,with,a,content,type,of,text,html,text,plain,etc,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,header,restriction,i,e,the,type,level,restriction,gets,checked,before,the,handler,method,is,even,resolved,p,maps,against,http,servlet,request,headers,in,a,servlet,environment,and,against,portlet,request,properties,in,a,portlet,2,0,environment,see,org,springframework,http,media,type;string,headers,default
RequestMapping -> String[] headers() default {}_;1411403899;The headers of the mapped request, narrowing the primary mapping._<p>Same format for any environment: a sequence of "My-Header=myValue" style_expressions, with a request only mapped if each such header is found_to have the given value. Expressions can be negated by using the "!=" operator,_as in "My-Header!=myValue". "My-Header" style expressions are also supported,_with such headers having to be present in the request (allowed to have_any value). Finally, "!My-Header" style expressions indicate that the_specified header is <i>not</i> supposed to be present in the request._<p>Also supports media type wildcards (*), for headers such as Accept_and Content-Type. For instance,_<pre class="code">_&#064_RequestMapping(value = "/something", headers = "content-type=text/*")_</pre>_will match requests with a Content-Type of "text/html", "text/plain", etc._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this header restriction (i.e. the type-level restriction_gets checked before the handler method is even resolved)._<p>Maps against HttpServletRequest headers in a Servlet environment,_and against PortletRequest properties in a Portlet 2.0 environment._@see org.springframework.http.MediaType;String[] headers() default {}_;the,headers,of,the,mapped,request,narrowing,the,primary,mapping,p,same,format,for,any,environment,a,sequence,of,my,header,my,value,style,expressions,with,a,request,only,mapped,if,each,such,header,is,found,to,have,the,given,value,expressions,can,be,negated,by,using,the,operator,as,in,my,header,my,value,my,header,style,expressions,are,also,supported,with,such,headers,having,to,be,present,in,the,request,allowed,to,have,any,value,finally,my,header,style,expressions,indicate,that,the,specified,header,is,i,not,i,supposed,to,be,present,in,the,request,p,also,supports,media,type,wildcards,for,headers,such,as,accept,and,content,type,for,instance,pre,class,code,064,request,mapping,value,something,headers,content,type,text,pre,will,match,requests,with,a,content,type,of,text,html,text,plain,etc,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,header,restriction,i,e,the,type,level,restriction,gets,checked,before,the,handler,method,is,even,resolved,p,maps,against,http,servlet,request,headers,in,a,servlet,environment,and,against,portlet,request,properties,in,a,portlet,2,0,environment,see,org,springframework,http,media,type;string,headers,default
RequestMapping -> String[] headers() default {}_;1411728985;The headers of the mapped request, narrowing the primary mapping._<p>Same format for any environment: a sequence of "My-Header=myValue" style_expressions, with a request only mapped if each such header is found_to have the given value. Expressions can be negated by using the "!=" operator,_as in "My-Header!=myValue". "My-Header" style expressions are also supported,_with such headers having to be present in the request (allowed to have_any value). Finally, "!My-Header" style expressions indicate that the_specified header is <i>not</i> supposed to be present in the request._<p>Also supports media type wildcards (*), for headers such as Accept_and Content-Type. For instance,_<pre class="code">_&#064_RequestMapping(value = "/something", headers = "content-type=text/*")_</pre>_will match requests with a Content-Type of "text/html", "text/plain", etc._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this header restriction (i.e. the type-level restriction_gets checked before the handler method is even resolved)._<p>Maps against HttpServletRequest headers in a Servlet environment,_and against PortletRequest properties in a Portlet 2.0 environment._@see org.springframework.http.MediaType;String[] headers() default {}_;the,headers,of,the,mapped,request,narrowing,the,primary,mapping,p,same,format,for,any,environment,a,sequence,of,my,header,my,value,style,expressions,with,a,request,only,mapped,if,each,such,header,is,found,to,have,the,given,value,expressions,can,be,negated,by,using,the,operator,as,in,my,header,my,value,my,header,style,expressions,are,also,supported,with,such,headers,having,to,be,present,in,the,request,allowed,to,have,any,value,finally,my,header,style,expressions,indicate,that,the,specified,header,is,i,not,i,supposed,to,be,present,in,the,request,p,also,supports,media,type,wildcards,for,headers,such,as,accept,and,content,type,for,instance,pre,class,code,064,request,mapping,value,something,headers,content,type,text,pre,will,match,requests,with,a,content,type,of,text,html,text,plain,etc,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,header,restriction,i,e,the,type,level,restriction,gets,checked,before,the,handler,method,is,even,resolved,p,maps,against,http,servlet,request,headers,in,a,servlet,environment,and,against,portlet,request,properties,in,a,portlet,2,0,environment,see,org,springframework,http,media,type;string,headers,default
RequestMapping -> String[] headers() default {}_;1414097580;The headers of the mapped request, narrowing the primary mapping._<p>Same format for any environment: a sequence of "My-Header=myValue" style_expressions, with a request only mapped if each such header is found_to have the given value. Expressions can be negated by using the "!=" operator,_as in "My-Header!=myValue". "My-Header" style expressions are also supported,_with such headers having to be present in the request (allowed to have_any value). Finally, "!My-Header" style expressions indicate that the_specified header is <i>not</i> supposed to be present in the request._<p>Also supports media type wildcards (*), for headers such as Accept_and Content-Type. For instance,_<pre class="code">_&#064_RequestMapping(value = "/something", headers = "content-type=text/*")_</pre>_will match requests with a Content-Type of "text/html", "text/plain", etc._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this header restriction (i.e. the type-level restriction_gets checked before the handler method is even resolved)._<p>Maps against HttpServletRequest headers in a Servlet environment,_and against PortletRequest properties in a Portlet 2.0 environment._@see org.springframework.http.MediaType;String[] headers() default {}_;the,headers,of,the,mapped,request,narrowing,the,primary,mapping,p,same,format,for,any,environment,a,sequence,of,my,header,my,value,style,expressions,with,a,request,only,mapped,if,each,such,header,is,found,to,have,the,given,value,expressions,can,be,negated,by,using,the,operator,as,in,my,header,my,value,my,header,style,expressions,are,also,supported,with,such,headers,having,to,be,present,in,the,request,allowed,to,have,any,value,finally,my,header,style,expressions,indicate,that,the,specified,header,is,i,not,i,supposed,to,be,present,in,the,request,p,also,supports,media,type,wildcards,for,headers,such,as,accept,and,content,type,for,instance,pre,class,code,064,request,mapping,value,something,headers,content,type,text,pre,will,match,requests,with,a,content,type,of,text,html,text,plain,etc,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,header,restriction,i,e,the,type,level,restriction,gets,checked,before,the,handler,method,is,even,resolved,p,maps,against,http,servlet,request,headers,in,a,servlet,environment,and,against,portlet,request,properties,in,a,portlet,2,0,environment,see,org,springframework,http,media,type;string,headers,default
RequestMapping -> String[] headers() default {}_;1414155598;The headers of the mapped request, narrowing the primary mapping._<p>Same format for any environment: a sequence of "My-Header=myValue" style_expressions, with a request only mapped if each such header is found_to have the given value. Expressions can be negated by using the "!=" operator,_as in "My-Header!=myValue". "My-Header" style expressions are also supported,_with such headers having to be present in the request (allowed to have_any value). Finally, "!My-Header" style expressions indicate that the_specified header is <i>not</i> supposed to be present in the request._<p>Also supports media type wildcards (*), for headers such as Accept_and Content-Type. For instance,_<pre class="code">_&#064_RequestMapping(value = "/something", headers = "content-type=text/*")_</pre>_will match requests with a Content-Type of "text/html", "text/plain", etc._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this header restriction (i.e. the type-level restriction_gets checked before the handler method is even resolved)._<p>Maps against HttpServletRequest headers in a Servlet environment,_and against PortletRequest properties in a Portlet 2.0 environment._@see org.springframework.http.MediaType;String[] headers() default {}_;the,headers,of,the,mapped,request,narrowing,the,primary,mapping,p,same,format,for,any,environment,a,sequence,of,my,header,my,value,style,expressions,with,a,request,only,mapped,if,each,such,header,is,found,to,have,the,given,value,expressions,can,be,negated,by,using,the,operator,as,in,my,header,my,value,my,header,style,expressions,are,also,supported,with,such,headers,having,to,be,present,in,the,request,allowed,to,have,any,value,finally,my,header,style,expressions,indicate,that,the,specified,header,is,i,not,i,supposed,to,be,present,in,the,request,p,also,supports,media,type,wildcards,for,headers,such,as,accept,and,content,type,for,instance,pre,class,code,064,request,mapping,value,something,headers,content,type,text,pre,will,match,requests,with,a,content,type,of,text,html,text,plain,etc,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,header,restriction,i,e,the,type,level,restriction,gets,checked,before,the,handler,method,is,even,resolved,p,maps,against,http,servlet,request,headers,in,a,servlet,environment,and,against,portlet,request,properties,in,a,portlet,2,0,environment,see,org,springframework,http,media,type;string,headers,default
RequestMapping -> String[] headers() default {}_;1422572109;The headers of the mapped request, narrowing the primary mapping._<p>Same format for any environment: a sequence of "My-Header=myValue" style_expressions, with a request only mapped if each such header is found_to have the given value. Expressions can be negated by using the "!=" operator,_as in "My-Header!=myValue". "My-Header" style expressions are also supported,_with such headers having to be present in the request (allowed to have_any value). Finally, "!My-Header" style expressions indicate that the_specified header is <i>not</i> supposed to be present in the request._<p>Also supports media type wildcards (*), for headers such as Accept_and Content-Type. For instance,_<pre class="code">_&#064_RequestMapping(value = "/something", headers = "content-type=text/*")_</pre>_will match requests with a Content-Type of "text/html", "text/plain", etc._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this header restriction (i.e. the type-level restriction_gets checked before the handler method is even resolved)._<p>Maps against HttpServletRequest headers in a Servlet environment,_and against PortletRequest properties in a Portlet 2.0 environment._@see org.springframework.http.MediaType;String[] headers() default {}_;the,headers,of,the,mapped,request,narrowing,the,primary,mapping,p,same,format,for,any,environment,a,sequence,of,my,header,my,value,style,expressions,with,a,request,only,mapped,if,each,such,header,is,found,to,have,the,given,value,expressions,can,be,negated,by,using,the,operator,as,in,my,header,my,value,my,header,style,expressions,are,also,supported,with,such,headers,having,to,be,present,in,the,request,allowed,to,have,any,value,finally,my,header,style,expressions,indicate,that,the,specified,header,is,i,not,i,supposed,to,be,present,in,the,request,p,also,supports,media,type,wildcards,for,headers,such,as,accept,and,content,type,for,instance,pre,class,code,064,request,mapping,value,something,headers,content,type,text,pre,will,match,requests,with,a,content,type,of,text,html,text,plain,etc,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,header,restriction,i,e,the,type,level,restriction,gets,checked,before,the,handler,method,is,even,resolved,p,maps,against,http,servlet,request,headers,in,a,servlet,environment,and,against,portlet,request,properties,in,a,portlet,2,0,environment,see,org,springframework,http,media,type;string,headers,default
RequestMapping -> String[] headers() default {}_;1427139532;The headers of the mapped request, narrowing the primary mapping._<p>Same format for any environment: a sequence of "My-Header=myValue" style_expressions, with a request only mapped if each such header is found_to have the given value. Expressions can be negated by using the "!=" operator,_as in "My-Header!=myValue". "My-Header" style expressions are also supported,_with such headers having to be present in the request (allowed to have_any value). Finally, "!My-Header" style expressions indicate that the_specified header is <i>not</i> supposed to be present in the request._<p>Also supports media type wildcards (*), for headers such as Accept_and Content-Type. For instance,_<pre class="code">_&#064_RequestMapping(value = "/something", headers = "content-type=text/*")_</pre>_will match requests with a Content-Type of "text/html", "text/plain", etc._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this header restriction (i.e. the type-level restriction_gets checked before the handler method is even resolved)._<p>Maps against HttpServletRequest headers in a Servlet environment,_and against PortletRequest properties in a Portlet 2.0 environment._@see org.springframework.http.MediaType;String[] headers() default {}_;the,headers,of,the,mapped,request,narrowing,the,primary,mapping,p,same,format,for,any,environment,a,sequence,of,my,header,my,value,style,expressions,with,a,request,only,mapped,if,each,such,header,is,found,to,have,the,given,value,expressions,can,be,negated,by,using,the,operator,as,in,my,header,my,value,my,header,style,expressions,are,also,supported,with,such,headers,having,to,be,present,in,the,request,allowed,to,have,any,value,finally,my,header,style,expressions,indicate,that,the,specified,header,is,i,not,i,supposed,to,be,present,in,the,request,p,also,supports,media,type,wildcards,for,headers,such,as,accept,and,content,type,for,instance,pre,class,code,064,request,mapping,value,something,headers,content,type,text,pre,will,match,requests,with,a,content,type,of,text,html,text,plain,etc,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,header,restriction,i,e,the,type,level,restriction,gets,checked,before,the,handler,method,is,even,resolved,p,maps,against,http,servlet,request,headers,in,a,servlet,environment,and,against,portlet,request,properties,in,a,portlet,2,0,environment,see,org,springframework,http,media,type;string,headers,default
RequestMapping -> String[] headers() default {}_;1429532371;The headers of the mapped request, narrowing the primary mapping._<p>Same format for any environment: a sequence of "My-Header=myValue" style_expressions, with a request only mapped if each such header is found_to have the given value. Expressions can be negated by using the "!=" operator,_as in "My-Header!=myValue". "My-Header" style expressions are also supported,_with such headers having to be present in the request (allowed to have_any value). Finally, "!My-Header" style expressions indicate that the_specified header is <i>not</i> supposed to be present in the request._<p>Also supports media type wildcards (*), for headers such as Accept_and Content-Type. For instance,_<pre class="code">_&#064_RequestMapping(value = "/something", headers = "content-type=text/*")_</pre>_will match requests with a Content-Type of "text/html", "text/plain", etc._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this header restriction (i.e. the type-level restriction_gets checked before the handler method is even resolved)._<p>Maps against HttpServletRequest headers in a Servlet environment,_and against PortletRequest properties in a Portlet 2.0 environment._@see org.springframework.http.MediaType;String[] headers() default {}_;the,headers,of,the,mapped,request,narrowing,the,primary,mapping,p,same,format,for,any,environment,a,sequence,of,my,header,my,value,style,expressions,with,a,request,only,mapped,if,each,such,header,is,found,to,have,the,given,value,expressions,can,be,negated,by,using,the,operator,as,in,my,header,my,value,my,header,style,expressions,are,also,supported,with,such,headers,having,to,be,present,in,the,request,allowed,to,have,any,value,finally,my,header,style,expressions,indicate,that,the,specified,header,is,i,not,i,supposed,to,be,present,in,the,request,p,also,supports,media,type,wildcards,for,headers,such,as,accept,and,content,type,for,instance,pre,class,code,064,request,mapping,value,something,headers,content,type,text,pre,will,match,requests,with,a,content,type,of,text,html,text,plain,etc,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,header,restriction,i,e,the,type,level,restriction,gets,checked,before,the,handler,method,is,even,resolved,p,maps,against,http,servlet,request,headers,in,a,servlet,environment,and,against,portlet,request,properties,in,a,portlet,2,0,environment,see,org,springframework,http,media,type;string,headers,default
RequestMapping -> String[] headers() default {}_;1429886024;The headers of the mapped request, narrowing the primary mapping._<p>Same format for any environment: a sequence of "My-Header=myValue" style_expressions, with a request only mapped if each such header is found_to have the given value. Expressions can be negated by using the "!=" operator,_as in "My-Header!=myValue". "My-Header" style expressions are also supported,_with such headers having to be present in the request (allowed to have_any value). Finally, "!My-Header" style expressions indicate that the_specified header is <i>not</i> supposed to be present in the request._<p>Also supports media type wildcards (*), for headers such as Accept_and Content-Type. For instance,_<pre class="code">_&#064_RequestMapping(value = "/something", headers = "content-type=text/*")_</pre>_will match requests with a Content-Type of "text/html", "text/plain", etc._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this header restriction (i.e. the type-level restriction_gets checked before the handler method is even resolved)._<p>Maps against HttpServletRequest headers in a Servlet environment,_and against PortletRequest properties in a Portlet 2.0 environment._@see org.springframework.http.MediaType;String[] headers() default {}_;the,headers,of,the,mapped,request,narrowing,the,primary,mapping,p,same,format,for,any,environment,a,sequence,of,my,header,my,value,style,expressions,with,a,request,only,mapped,if,each,such,header,is,found,to,have,the,given,value,expressions,can,be,negated,by,using,the,operator,as,in,my,header,my,value,my,header,style,expressions,are,also,supported,with,such,headers,having,to,be,present,in,the,request,allowed,to,have,any,value,finally,my,header,style,expressions,indicate,that,the,specified,header,is,i,not,i,supposed,to,be,present,in,the,request,p,also,supports,media,type,wildcards,for,headers,such,as,accept,and,content,type,for,instance,pre,class,code,064,request,mapping,value,something,headers,content,type,text,pre,will,match,requests,with,a,content,type,of,text,html,text,plain,etc,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,header,restriction,i,e,the,type,level,restriction,gets,checked,before,the,handler,method,is,even,resolved,p,maps,against,http,servlet,request,headers,in,a,servlet,environment,and,against,portlet,request,properties,in,a,portlet,2,0,environment,see,org,springframework,http,media,type;string,headers,default
RequestMapping -> String[] headers() default {}_;1432246071;The headers of the mapped request, narrowing the primary mapping._<p>Same format for any environment: a sequence of "My-Header=myValue" style_expressions, with a request only mapped if each such header is found_to have the given value. Expressions can be negated by using the "!=" operator,_as in "My-Header!=myValue". "My-Header" style expressions are also supported,_with such headers having to be present in the request (allowed to have_any value). Finally, "!My-Header" style expressions indicate that the_specified header is <i>not</i> supposed to be present in the request._<p>Also supports media type wildcards (*), for headers such as Accept_and Content-Type. For instance,_<pre class="code">_&#064_RequestMapping(value = "/something", headers = "content-type=text/*")_</pre>_will match requests with a Content-Type of "text/html", "text/plain", etc._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this header restriction (i.e. the type-level restriction_gets checked before the handler method is even resolved)._<p>Maps against HttpServletRequest headers in a Servlet environment,_and against PortletRequest properties in a Portlet 2.0 environment._@see org.springframework.http.MediaType;String[] headers() default {}_;the,headers,of,the,mapped,request,narrowing,the,primary,mapping,p,same,format,for,any,environment,a,sequence,of,my,header,my,value,style,expressions,with,a,request,only,mapped,if,each,such,header,is,found,to,have,the,given,value,expressions,can,be,negated,by,using,the,operator,as,in,my,header,my,value,my,header,style,expressions,are,also,supported,with,such,headers,having,to,be,present,in,the,request,allowed,to,have,any,value,finally,my,header,style,expressions,indicate,that,the,specified,header,is,i,not,i,supposed,to,be,present,in,the,request,p,also,supports,media,type,wildcards,for,headers,such,as,accept,and,content,type,for,instance,pre,class,code,064,request,mapping,value,something,headers,content,type,text,pre,will,match,requests,with,a,content,type,of,text,html,text,plain,etc,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,header,restriction,i,e,the,type,level,restriction,gets,checked,before,the,handler,method,is,even,resolved,p,maps,against,http,servlet,request,headers,in,a,servlet,environment,and,against,portlet,request,properties,in,a,portlet,2,0,environment,see,org,springframework,http,media,type;string,headers,default
RequestMapping -> String[] headers() default {}_;1438176426;The headers of the mapped request, narrowing the primary mapping._<p>Same format for any environment: a sequence of "My-Header=myValue" style_expressions, with a request only mapped if each such header is found_to have the given value. Expressions can be negated by using the "!=" operator,_as in "My-Header!=myValue". "My-Header" style expressions are also supported,_with such headers having to be present in the request (allowed to have_any value). Finally, "!My-Header" style expressions indicate that the_specified header is <i>not</i> supposed to be present in the request._<p>Also supports media type wildcards (*), for headers such as Accept_and Content-Type. For instance,_<pre class="code">_&#064_RequestMapping(value = "/something", headers = "content-type=text/*")_</pre>_will match requests with a Content-Type of "text/html", "text/plain", etc._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this header restriction (i.e. the type-level restriction_gets checked before the handler method is even resolved)._<p>Maps against HttpServletRequest headers in a Servlet environment,_and against PortletRequest properties in a Portlet 2.0 environment._@see org.springframework.http.MediaType;String[] headers() default {}_;the,headers,of,the,mapped,request,narrowing,the,primary,mapping,p,same,format,for,any,environment,a,sequence,of,my,header,my,value,style,expressions,with,a,request,only,mapped,if,each,such,header,is,found,to,have,the,given,value,expressions,can,be,negated,by,using,the,operator,as,in,my,header,my,value,my,header,style,expressions,are,also,supported,with,such,headers,having,to,be,present,in,the,request,allowed,to,have,any,value,finally,my,header,style,expressions,indicate,that,the,specified,header,is,i,not,i,supposed,to,be,present,in,the,request,p,also,supports,media,type,wildcards,for,headers,such,as,accept,and,content,type,for,instance,pre,class,code,064,request,mapping,value,something,headers,content,type,text,pre,will,match,requests,with,a,content,type,of,text,html,text,plain,etc,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,header,restriction,i,e,the,type,level,restriction,gets,checked,before,the,handler,method,is,even,resolved,p,maps,against,http,servlet,request,headers,in,a,servlet,environment,and,against,portlet,request,properties,in,a,portlet,2,0,environment,see,org,springframework,http,media,type;string,headers,default
RequestMapping -> String[] headers() default {}_;1444666351;The headers of the mapped request, narrowing the primary mapping._<p>Same format for any environment: a sequence of "My-Header=myValue" style_expressions, with a request only mapped if each such header is found_to have the given value. Expressions can be negated by using the "!=" operator,_as in "My-Header!=myValue". "My-Header" style expressions are also supported,_with such headers having to be present in the request (allowed to have_any value). Finally, "!My-Header" style expressions indicate that the_specified header is <i>not</i> supposed to be present in the request._<p>Also supports media type wildcards (*), for headers such as Accept_and Content-Type. For instance,_<pre class="code">_&#064_RequestMapping(value = "/something", headers = "content-type=text/*")_</pre>_will match requests with a Content-Type of "text/html", "text/plain", etc._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this header restriction (i.e. the type-level restriction_gets checked before the handler method is even resolved)._<p>Maps against HttpServletRequest headers in a Servlet environment,_and against PortletRequest properties in a Portlet 2.0 environment._@see org.springframework.http.MediaType;String[] headers() default {}_;the,headers,of,the,mapped,request,narrowing,the,primary,mapping,p,same,format,for,any,environment,a,sequence,of,my,header,my,value,style,expressions,with,a,request,only,mapped,if,each,such,header,is,found,to,have,the,given,value,expressions,can,be,negated,by,using,the,operator,as,in,my,header,my,value,my,header,style,expressions,are,also,supported,with,such,headers,having,to,be,present,in,the,request,allowed,to,have,any,value,finally,my,header,style,expressions,indicate,that,the,specified,header,is,i,not,i,supposed,to,be,present,in,the,request,p,also,supports,media,type,wildcards,for,headers,such,as,accept,and,content,type,for,instance,pre,class,code,064,request,mapping,value,something,headers,content,type,text,pre,will,match,requests,with,a,content,type,of,text,html,text,plain,etc,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,header,restriction,i,e,the,type,level,restriction,gets,checked,before,the,handler,method,is,even,resolved,p,maps,against,http,servlet,request,headers,in,a,servlet,environment,and,against,portlet,request,properties,in,a,portlet,2,0,environment,see,org,springframework,http,media,type;string,headers,default
RequestMapping -> String[] headers() default {}_;1446446882;The headers of the mapped request, narrowing the primary mapping._<p>Same format for any environment: a sequence of "My-Header=myValue" style_expressions, with a request only mapped if each such header is found_to have the given value. Expressions can be negated by using the "!=" operator,_as in "My-Header!=myValue". "My-Header" style expressions are also supported,_with such headers having to be present in the request (allowed to have_any value). Finally, "!My-Header" style expressions indicate that the_specified header is <i>not</i> supposed to be present in the request._<p>Also supports media type wildcards (*), for headers such as Accept_and Content-Type. For instance,_<pre class="code">_&#064_RequestMapping(value = "/something", headers = "content-type=text/*")_</pre>_will match requests with a Content-Type of "text/html", "text/plain", etc._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this header restriction (i.e. the type-level restriction_gets checked before the handler method is even resolved)._<p>Maps against HttpServletRequest headers in a Servlet environment,_and against PortletRequest properties in a Portlet 2.0 environment._@see org.springframework.http.MediaType;String[] headers() default {}_;the,headers,of,the,mapped,request,narrowing,the,primary,mapping,p,same,format,for,any,environment,a,sequence,of,my,header,my,value,style,expressions,with,a,request,only,mapped,if,each,such,header,is,found,to,have,the,given,value,expressions,can,be,negated,by,using,the,operator,as,in,my,header,my,value,my,header,style,expressions,are,also,supported,with,such,headers,having,to,be,present,in,the,request,allowed,to,have,any,value,finally,my,header,style,expressions,indicate,that,the,specified,header,is,i,not,i,supposed,to,be,present,in,the,request,p,also,supports,media,type,wildcards,for,headers,such,as,accept,and,content,type,for,instance,pre,class,code,064,request,mapping,value,something,headers,content,type,text,pre,will,match,requests,with,a,content,type,of,text,html,text,plain,etc,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,header,restriction,i,e,the,type,level,restriction,gets,checked,before,the,handler,method,is,even,resolved,p,maps,against,http,servlet,request,headers,in,a,servlet,environment,and,against,portlet,request,properties,in,a,portlet,2,0,environment,see,org,springframework,http,media,type;string,headers,default
RequestMapping -> String[] headers() default {}_;1453844264;The headers of the mapped request, narrowing the primary mapping._<p>Same format for any environment: a sequence of "My-Header=myValue" style_expressions, with a request only mapped if each such header is found_to have the given value. Expressions can be negated by using the "!=" operator,_as in "My-Header!=myValue". "My-Header" style expressions are also supported,_with such headers having to be present in the request (allowed to have_any value). Finally, "!My-Header" style expressions indicate that the_specified header is <i>not</i> supposed to be present in the request._<p>Also supports media type wildcards (*), for headers such as Accept_and Content-Type. For instance,_<pre class="code">_&#064_RequestMapping(value = "/something", headers = "content-type=text/*")_</pre>_will match requests with a Content-Type of "text/html", "text/plain", etc._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this header restriction (i.e. the type-level restriction_gets checked before the handler method is even resolved)._<p>Maps against HttpServletRequest headers in a Servlet environment,_and against PortletRequest properties in a Portlet 2.0 environment._@see org.springframework.http.MediaType;String[] headers() default {}_;the,headers,of,the,mapped,request,narrowing,the,primary,mapping,p,same,format,for,any,environment,a,sequence,of,my,header,my,value,style,expressions,with,a,request,only,mapped,if,each,such,header,is,found,to,have,the,given,value,expressions,can,be,negated,by,using,the,operator,as,in,my,header,my,value,my,header,style,expressions,are,also,supported,with,such,headers,having,to,be,present,in,the,request,allowed,to,have,any,value,finally,my,header,style,expressions,indicate,that,the,specified,header,is,i,not,i,supposed,to,be,present,in,the,request,p,also,supports,media,type,wildcards,for,headers,such,as,accept,and,content,type,for,instance,pre,class,code,064,request,mapping,value,something,headers,content,type,text,pre,will,match,requests,with,a,content,type,of,text,html,text,plain,etc,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,header,restriction,i,e,the,type,level,restriction,gets,checked,before,the,handler,method,is,even,resolved,p,maps,against,http,servlet,request,headers,in,a,servlet,environment,and,against,portlet,request,properties,in,a,portlet,2,0,environment,see,org,springframework,http,media,type;string,headers,default
RequestMapping -> String[] headers() default {}_;1453844270;The headers of the mapped request, narrowing the primary mapping._<p>Same format for any environment: a sequence of "My-Header=myValue" style_expressions, with a request only mapped if each such header is found_to have the given value. Expressions can be negated by using the "!=" operator,_as in "My-Header!=myValue". "My-Header" style expressions are also supported,_with such headers having to be present in the request (allowed to have_any value). Finally, "!My-Header" style expressions indicate that the_specified header is <i>not</i> supposed to be present in the request._<p>Also supports media type wildcards (*), for headers such as Accept_and Content-Type. For instance,_<pre class="code">_&#064_RequestMapping(value = "/something", headers = "content-type=text/*")_</pre>_will match requests with a Content-Type of "text/html", "text/plain", etc._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this header restriction (i.e. the type-level restriction_gets checked before the handler method is even resolved)._<p>Maps against HttpServletRequest headers in a Servlet environment,_and against PortletRequest properties in a Portlet 2.0 environment._@see org.springframework.http.MediaType;String[] headers() default {}_;the,headers,of,the,mapped,request,narrowing,the,primary,mapping,p,same,format,for,any,environment,a,sequence,of,my,header,my,value,style,expressions,with,a,request,only,mapped,if,each,such,header,is,found,to,have,the,given,value,expressions,can,be,negated,by,using,the,operator,as,in,my,header,my,value,my,header,style,expressions,are,also,supported,with,such,headers,having,to,be,present,in,the,request,allowed,to,have,any,value,finally,my,header,style,expressions,indicate,that,the,specified,header,is,i,not,i,supposed,to,be,present,in,the,request,p,also,supports,media,type,wildcards,for,headers,such,as,accept,and,content,type,for,instance,pre,class,code,064,request,mapping,value,something,headers,content,type,text,pre,will,match,requests,with,a,content,type,of,text,html,text,plain,etc,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,header,restriction,i,e,the,type,level,restriction,gets,checked,before,the,handler,method,is,even,resolved,p,maps,against,http,servlet,request,headers,in,a,servlet,environment,and,against,portlet,request,properties,in,a,portlet,2,0,environment,see,org,springframework,http,media,type;string,headers,default
RequestMapping -> String[] headers() default {}_;1456522551;The headers of the mapped request, narrowing the primary mapping._<p>Same format for any environment: a sequence of "My-Header=myValue" style_expressions, with a request only mapped if each such header is found_to have the given value. Expressions can be negated by using the "!=" operator,_as in "My-Header!=myValue". "My-Header" style expressions are also supported,_with such headers having to be present in the request (allowed to have_any value). Finally, "!My-Header" style expressions indicate that the_specified header is <i>not</i> supposed to be present in the request._<p>Also supports media type wildcards (*), for headers such as Accept_and Content-Type. For instance,_<pre class="code">_&#064_RequestMapping(value = "/something", headers = "content-type=text/*")_</pre>_will match requests with a Content-Type of "text/html", "text/plain", etc._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this header restriction (i.e. the type-level restriction_gets checked before the handler method is even resolved)._<p>Maps against HttpServletRequest headers in a Servlet environment,_and against PortletRequest properties in a Portlet 2.0 environment._@see org.springframework.http.MediaType;String[] headers() default {}_;the,headers,of,the,mapped,request,narrowing,the,primary,mapping,p,same,format,for,any,environment,a,sequence,of,my,header,my,value,style,expressions,with,a,request,only,mapped,if,each,such,header,is,found,to,have,the,given,value,expressions,can,be,negated,by,using,the,operator,as,in,my,header,my,value,my,header,style,expressions,are,also,supported,with,such,headers,having,to,be,present,in,the,request,allowed,to,have,any,value,finally,my,header,style,expressions,indicate,that,the,specified,header,is,i,not,i,supposed,to,be,present,in,the,request,p,also,supports,media,type,wildcards,for,headers,such,as,accept,and,content,type,for,instance,pre,class,code,064,request,mapping,value,something,headers,content,type,text,pre,will,match,requests,with,a,content,type,of,text,html,text,plain,etc,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,header,restriction,i,e,the,type,level,restriction,gets,checked,before,the,handler,method,is,even,resolved,p,maps,against,http,servlet,request,headers,in,a,servlet,environment,and,against,portlet,request,properties,in,a,portlet,2,0,environment,see,org,springframework,http,media,type;string,headers,default
RequestMapping -> String[] headers() default {}_;1456766757;The headers of the mapped request, narrowing the primary mapping._<p>Same format for any environment: a sequence of "My-Header=myValue" style_expressions, with a request only mapped if each such header is found_to have the given value. Expressions can be negated by using the "!=" operator,_as in "My-Header!=myValue". "My-Header" style expressions are also supported,_with such headers having to be present in the request (allowed to have_any value). Finally, "!My-Header" style expressions indicate that the_specified header is <i>not</i> supposed to be present in the request._<p>Also supports media type wildcards (*), for headers such as Accept_and Content-Type. For instance,_<pre class="code">_&#064_RequestMapping(value = "/something", headers = "content-type=text/*")_</pre>_will match requests with a Content-Type of "text/html", "text/plain", etc._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this header restriction (i.e. the type-level restriction_gets checked before the handler method is even resolved)._<p>Maps against HttpServletRequest headers in a Servlet environment,_and against PortletRequest properties in a Portlet 2.0 environment._@see org.springframework.http.MediaType;String[] headers() default {}_;the,headers,of,the,mapped,request,narrowing,the,primary,mapping,p,same,format,for,any,environment,a,sequence,of,my,header,my,value,style,expressions,with,a,request,only,mapped,if,each,such,header,is,found,to,have,the,given,value,expressions,can,be,negated,by,using,the,operator,as,in,my,header,my,value,my,header,style,expressions,are,also,supported,with,such,headers,having,to,be,present,in,the,request,allowed,to,have,any,value,finally,my,header,style,expressions,indicate,that,the,specified,header,is,i,not,i,supposed,to,be,present,in,the,request,p,also,supports,media,type,wildcards,for,headers,such,as,accept,and,content,type,for,instance,pre,class,code,064,request,mapping,value,something,headers,content,type,text,pre,will,match,requests,with,a,content,type,of,text,html,text,plain,etc,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,header,restriction,i,e,the,type,level,restriction,gets,checked,before,the,handler,method,is,even,resolved,p,maps,against,http,servlet,request,headers,in,a,servlet,environment,and,against,portlet,request,properties,in,a,portlet,2,0,environment,see,org,springframework,http,media,type;string,headers,default
RequestMapping -> String[] headers() default {}_;1467668027;The headers of the mapped request, narrowing the primary mapping._<p>Same format for any environment: a sequence of "My-Header=myValue" style_expressions, with a request only mapped if each such header is found_to have the given value. Expressions can be negated by using the "!=" operator,_as in "My-Header!=myValue". "My-Header" style expressions are also supported,_with such headers having to be present in the request (allowed to have_any value). Finally, "!My-Header" style expressions indicate that the_specified header is <i>not</i> supposed to be present in the request._<p>Also supports media type wildcards (*), for headers such as Accept_and Content-Type. For instance,_<pre class="code">_&#064_RequestMapping(value = "/something", headers = "content-type=text/*")_</pre>_will match requests with a Content-Type of "text/html", "text/plain", etc._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this header restriction (i.e. the type-level restriction_gets checked before the handler method is even resolved)._@see org.springframework.http.MediaType;String[] headers() default {}_;the,headers,of,the,mapped,request,narrowing,the,primary,mapping,p,same,format,for,any,environment,a,sequence,of,my,header,my,value,style,expressions,with,a,request,only,mapped,if,each,such,header,is,found,to,have,the,given,value,expressions,can,be,negated,by,using,the,operator,as,in,my,header,my,value,my,header,style,expressions,are,also,supported,with,such,headers,having,to,be,present,in,the,request,allowed,to,have,any,value,finally,my,header,style,expressions,indicate,that,the,specified,header,is,i,not,i,supposed,to,be,present,in,the,request,p,also,supports,media,type,wildcards,for,headers,such,as,accept,and,content,type,for,instance,pre,class,code,064,request,mapping,value,something,headers,content,type,text,pre,will,match,requests,with,a,content,type,of,text,html,text,plain,etc,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,header,restriction,i,e,the,type,level,restriction,gets,checked,before,the,handler,method,is,even,resolved,see,org,springframework,http,media,type;string,headers,default
RequestMapping -> String[] headers() default {}_;1467677340;The headers of the mapped request, narrowing the primary mapping._<p>Same format for any environment: a sequence of "My-Header=myValue" style_expressions, with a request only mapped if each such header is found_to have the given value. Expressions can be negated by using the "!=" operator,_as in "My-Header!=myValue". "My-Header" style expressions are also supported,_with such headers having to be present in the request (allowed to have_any value). Finally, "!My-Header" style expressions indicate that the_specified header is <i>not</i> supposed to be present in the request._<p>Also supports media type wildcards (*), for headers such as Accept_and Content-Type. For instance,_<pre class="code">_&#064_RequestMapping(value = "/something", headers = "content-type=text/*")_</pre>_will match requests with a Content-Type of "text/html", "text/plain", etc._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this header restriction (i.e. the type-level restriction_gets checked before the handler method is even resolved)._@see org.springframework.http.MediaType;String[] headers() default {}_;the,headers,of,the,mapped,request,narrowing,the,primary,mapping,p,same,format,for,any,environment,a,sequence,of,my,header,my,value,style,expressions,with,a,request,only,mapped,if,each,such,header,is,found,to,have,the,given,value,expressions,can,be,negated,by,using,the,operator,as,in,my,header,my,value,my,header,style,expressions,are,also,supported,with,such,headers,having,to,be,present,in,the,request,allowed,to,have,any,value,finally,my,header,style,expressions,indicate,that,the,specified,header,is,i,not,i,supposed,to,be,present,in,the,request,p,also,supports,media,type,wildcards,for,headers,such,as,accept,and,content,type,for,instance,pre,class,code,064,request,mapping,value,something,headers,content,type,text,pre,will,match,requests,with,a,content,type,of,text,html,text,plain,etc,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,header,restriction,i,e,the,type,level,restriction,gets,checked,before,the,handler,method,is,even,resolved,see,org,springframework,http,media,type;string,headers,default
RequestMapping -> String[] headers() default {}_;1491341544;The headers of the mapped request, narrowing the primary mapping._<p>Same format for any environment: a sequence of "My-Header=myValue" style_expressions, with a request only mapped if each such header is found_to have the given value. Expressions can be negated by using the "!=" operator,_as in "My-Header!=myValue". "My-Header" style expressions are also supported,_with such headers having to be present in the request (allowed to have_any value). Finally, "!My-Header" style expressions indicate that the_specified header is <i>not</i> supposed to be present in the request._<p>Also supports media type wildcards (*), for headers such as Accept_and Content-Type. For instance,_<pre class="code">_&#064_RequestMapping(value = "/something", headers = "content-type=text/*")_</pre>_will match requests with a Content-Type of "text/html", "text/plain", etc._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this header restriction (i.e. the type-level restriction_gets checked before the handler method is even resolved)._@see org.springframework.http.MediaType;String[] headers() default {}_;the,headers,of,the,mapped,request,narrowing,the,primary,mapping,p,same,format,for,any,environment,a,sequence,of,my,header,my,value,style,expressions,with,a,request,only,mapped,if,each,such,header,is,found,to,have,the,given,value,expressions,can,be,negated,by,using,the,operator,as,in,my,header,my,value,my,header,style,expressions,are,also,supported,with,such,headers,having,to,be,present,in,the,request,allowed,to,have,any,value,finally,my,header,style,expressions,indicate,that,the,specified,header,is,i,not,i,supposed,to,be,present,in,the,request,p,also,supports,media,type,wildcards,for,headers,such,as,accept,and,content,type,for,instance,pre,class,code,064,request,mapping,value,something,headers,content,type,text,pre,will,match,requests,with,a,content,type,of,text,html,text,plain,etc,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,header,restriction,i,e,the,type,level,restriction,gets,checked,before,the,handler,method,is,even,resolved,see,org,springframework,http,media,type;string,headers,default
RequestMapping -> String[] headers() default {}_;1491599707;The headers of the mapped request, narrowing the primary mapping._<p>Same format for any environment: a sequence of "My-Header=myValue" style_expressions, with a request only mapped if each such header is found_to have the given value. Expressions can be negated by using the "!=" operator,_as in "My-Header!=myValue". "My-Header" style expressions are also supported,_with such headers having to be present in the request (allowed to have_any value). Finally, "!My-Header" style expressions indicate that the_specified header is <i>not</i> supposed to be present in the request._<p>Also supports media type wildcards (*), for headers such as Accept_and Content-Type. For instance,_<pre class="code">_&#064_RequestMapping(value = "/something", headers = "content-type=text/*")_</pre>_will match requests with a Content-Type of "text/html", "text/plain", etc._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this header restriction (i.e. the type-level restriction_gets checked before the handler method is even resolved)._@see org.springframework.http.MediaType;String[] headers() default {}_;the,headers,of,the,mapped,request,narrowing,the,primary,mapping,p,same,format,for,any,environment,a,sequence,of,my,header,my,value,style,expressions,with,a,request,only,mapped,if,each,such,header,is,found,to,have,the,given,value,expressions,can,be,negated,by,using,the,operator,as,in,my,header,my,value,my,header,style,expressions,are,also,supported,with,such,headers,having,to,be,present,in,the,request,allowed,to,have,any,value,finally,my,header,style,expressions,indicate,that,the,specified,header,is,i,not,i,supposed,to,be,present,in,the,request,p,also,supports,media,type,wildcards,for,headers,such,as,accept,and,content,type,for,instance,pre,class,code,064,request,mapping,value,something,headers,content,type,text,pre,will,match,requests,with,a,content,type,of,text,html,text,plain,etc,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,header,restriction,i,e,the,type,level,restriction,gets,checked,before,the,handler,method,is,even,resolved,see,org,springframework,http,media,type;string,headers,default
RequestMapping -> String[] headers() default {}_;1506454198;The headers of the mapped request, narrowing the primary mapping._<p>Same format for any environment: a sequence of "My-Header=myValue" style_expressions, with a request only mapped if each such header is found_to have the given value. Expressions can be negated by using the "!=" operator,_as in "My-Header!=myValue". "My-Header" style expressions are also supported,_with such headers having to be present in the request (allowed to have_any value). Finally, "!My-Header" style expressions indicate that the_specified header is <i>not</i> supposed to be present in the request._<p>Also supports media type wildcards (*), for headers such as Accept_and Content-Type. For instance,_<pre class="code">_&#064_RequestMapping(value = "/something", headers = "content-type=text/*")_</pre>_will match requests with a Content-Type of "text/html", "text/plain", etc._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this header restriction (i.e. the type-level restriction_gets checked before the handler method is even resolved)._@see org.springframework.http.MediaType;String[] headers() default {}_;the,headers,of,the,mapped,request,narrowing,the,primary,mapping,p,same,format,for,any,environment,a,sequence,of,my,header,my,value,style,expressions,with,a,request,only,mapped,if,each,such,header,is,found,to,have,the,given,value,expressions,can,be,negated,by,using,the,operator,as,in,my,header,my,value,my,header,style,expressions,are,also,supported,with,such,headers,having,to,be,present,in,the,request,allowed,to,have,any,value,finally,my,header,style,expressions,indicate,that,the,specified,header,is,i,not,i,supposed,to,be,present,in,the,request,p,also,supports,media,type,wildcards,for,headers,such,as,accept,and,content,type,for,instance,pre,class,code,064,request,mapping,value,something,headers,content,type,text,pre,will,match,requests,with,a,content,type,of,text,html,text,plain,etc,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,header,restriction,i,e,the,type,level,restriction,gets,checked,before,the,handler,method,is,even,resolved,see,org,springframework,http,media,type;string,headers,default
RequestMapping -> String[] headers() default {}_;1515421792;The headers of the mapped request, narrowing the primary mapping._<p>Same format for any environment: a sequence of "My-Header=myValue" style_expressions, with a request only mapped if each such header is found_to have the given value. Expressions can be negated by using the "!=" operator,_as in "My-Header!=myValue". "My-Header" style expressions are also supported,_with such headers having to be present in the request (allowed to have_any value). Finally, "!My-Header" style expressions indicate that the_specified header is <i>not</i> supposed to be present in the request._<p>Also supports media type wildcards (*), for headers such as Accept_and Content-Type. For instance,_<pre class="code">_&#064_RequestMapping(value = "/something", headers = "content-type=text/*")_</pre>_will match requests with a Content-Type of "text/html", "text/plain", etc._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this header restriction (i.e. the type-level restriction_gets checked before the handler method is even resolved)._@see org.springframework.http.MediaType;String[] headers() default {}_;the,headers,of,the,mapped,request,narrowing,the,primary,mapping,p,same,format,for,any,environment,a,sequence,of,my,header,my,value,style,expressions,with,a,request,only,mapped,if,each,such,header,is,found,to,have,the,given,value,expressions,can,be,negated,by,using,the,operator,as,in,my,header,my,value,my,header,style,expressions,are,also,supported,with,such,headers,having,to,be,present,in,the,request,allowed,to,have,any,value,finally,my,header,style,expressions,indicate,that,the,specified,header,is,i,not,i,supposed,to,be,present,in,the,request,p,also,supports,media,type,wildcards,for,headers,such,as,accept,and,content,type,for,instance,pre,class,code,064,request,mapping,value,something,headers,content,type,text,pre,will,match,requests,with,a,content,type,of,text,html,text,plain,etc,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,header,restriction,i,e,the,type,level,restriction,gets,checked,before,the,handler,method,is,even,resolved,see,org,springframework,http,media,type;string,headers,default
RequestMapping -> String[] headers() default {}_;1523268197;The headers of the mapped request, narrowing the primary mapping._<p>Same format for any environment: a sequence of "My-Header=myValue" style_expressions, with a request only mapped if each such header is found_to have the given value. Expressions can be negated by using the "!=" operator,_as in "My-Header!=myValue". "My-Header" style expressions are also supported,_with such headers having to be present in the request (allowed to have_any value). Finally, "!My-Header" style expressions indicate that the_specified header is <i>not</i> supposed to be present in the request._<p>Also supports media type wildcards (*), for headers such as Accept_and Content-Type. For instance,_<pre class="code">_&#064_RequestMapping(value = "/something", headers = "content-type=text/*")_</pre>_will match requests with a Content-Type of "text/html", "text/plain", etc._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this header restriction (i.e. the type-level restriction_gets checked before the handler method is even resolved)._@see org.springframework.http.MediaType;String[] headers() default {}_;the,headers,of,the,mapped,request,narrowing,the,primary,mapping,p,same,format,for,any,environment,a,sequence,of,my,header,my,value,style,expressions,with,a,request,only,mapped,if,each,such,header,is,found,to,have,the,given,value,expressions,can,be,negated,by,using,the,operator,as,in,my,header,my,value,my,header,style,expressions,are,also,supported,with,such,headers,having,to,be,present,in,the,request,allowed,to,have,any,value,finally,my,header,style,expressions,indicate,that,the,specified,header,is,i,not,i,supposed,to,be,present,in,the,request,p,also,supports,media,type,wildcards,for,headers,such,as,accept,and,content,type,for,instance,pre,class,code,064,request,mapping,value,something,headers,content,type,text,pre,will,match,requests,with,a,content,type,of,text,html,text,plain,etc,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,header,restriction,i,e,the,type,level,restriction,gets,checked,before,the,handler,method,is,even,resolved,see,org,springframework,http,media,type;string,headers,default
RequestMapping -> String[] headers() default {}_;1528795693;The headers of the mapped request, narrowing the primary mapping._<p>Same format for any environment: a sequence of "My-Header=myValue" style_expressions, with a request only mapped if each such header is found_to have the given value. Expressions can be negated by using the "!=" operator,_as in "My-Header!=myValue". "My-Header" style expressions are also supported,_with such headers having to be present in the request (allowed to have_any value). Finally, "!My-Header" style expressions indicate that the_specified header is <i>not</i> supposed to be present in the request._<p>Also supports media type wildcards (*), for headers such as Accept_and Content-Type. For instance,_<pre class="code">_&#064_RequestMapping(value = "/something", headers = "content-type=text/*")_</pre>_will match requests with a Content-Type of "text/html", "text/plain", etc._<p><b>Supported at the type level as well as at the method level!</b>_When used at the type level, all method-level mappings inherit_this header restriction (i.e. the type-level restriction_gets checked before the handler method is even resolved)._@see org.springframework.http.MediaType;String[] headers() default {}_;the,headers,of,the,mapped,request,narrowing,the,primary,mapping,p,same,format,for,any,environment,a,sequence,of,my,header,my,value,style,expressions,with,a,request,only,mapped,if,each,such,header,is,found,to,have,the,given,value,expressions,can,be,negated,by,using,the,operator,as,in,my,header,my,value,my,header,style,expressions,are,also,supported,with,such,headers,having,to,be,present,in,the,request,allowed,to,have,any,value,finally,my,header,style,expressions,indicate,that,the,specified,header,is,i,not,i,supposed,to,be,present,in,the,request,p,also,supports,media,type,wildcards,for,headers,such,as,accept,and,content,type,for,instance,pre,class,code,064,request,mapping,value,something,headers,content,type,text,pre,will,match,requests,with,a,content,type,of,text,html,text,plain,etc,p,b,supported,at,the,type,level,as,well,as,at,the,method,level,b,when,used,at,the,type,level,all,method,level,mappings,inherit,this,header,restriction,i,e,the,type,level,restriction,gets,checked,before,the,handler,method,is,even,resolved,see,org,springframework,http,media,type;string,headers,default
