# id;timestamp;commentText;codeText;commentWords;codeWords
ServletPathExtensionContentNegotiationStrategy -> public MediaType getMediaTypeForResource(Resource resource);1457125561;Extends the base class_{@link PathExtensionContentNegotiationStrategy#getMediaTypeForResource}_with the ability to also look up through the ServletContext._@param resource the resource to look up_@return the MediaType for the extension or {@code null}._@since 4.3;public MediaType getMediaTypeForResource(Resource resource) {_		MediaType mediaType = super.getMediaTypeForResource(resource)__		if (mediaType == null) {_			String mimeType = this.servletContext.getMimeType(resource.getFilename())__			if (StringUtils.hasText(mimeType)) {_				mediaType = MediaType.parseMediaType(mimeType)__			}_		}_		if (MediaType.APPLICATION_OCTET_STREAM.equals(mediaType)) {_			mediaType = null__		}_		return mediaType__	};extends,the,base,class,link,path,extension,content,negotiation,strategy,get,media,type,for,resource,with,the,ability,to,also,look,up,through,the,servlet,context,param,resource,the,resource,to,look,up,return,the,media,type,for,the,extension,or,code,null,since,4,3;public,media,type,get,media,type,for,resource,resource,resource,media,type,media,type,super,get,media,type,for,resource,resource,if,media,type,null,string,mime,type,this,servlet,context,get,mime,type,resource,get,filename,if,string,utils,has,text,mime,type,media,type,media,type,parse,media,type,mime,type,if,media,type,equals,media,type,media,type,null,return,media,type
ServletPathExtensionContentNegotiationStrategy -> public MediaType getMediaTypeForResource(Resource resource);1464879764;Extends the base class_{@link PathExtensionContentNegotiationStrategy#getMediaTypeForResource}_with the ability to also look up through the ServletContext._@param resource the resource to look up_@return the MediaType for the extension or {@code null}._@since 4.3;public MediaType getMediaTypeForResource(Resource resource) {_		MediaType mediaType = super.getMediaTypeForResource(resource)__		if (mediaType == null) {_			String mimeType = this.servletContext.getMimeType(resource.getFilename())__			if (StringUtils.hasText(mimeType)) {_				mediaType = MediaType.parseMediaType(mimeType)__			}_		}_		if (MediaType.APPLICATION_OCTET_STREAM.equals(mediaType)) {_			mediaType = null__		}_		return mediaType__	};extends,the,base,class,link,path,extension,content,negotiation,strategy,get,media,type,for,resource,with,the,ability,to,also,look,up,through,the,servlet,context,param,resource,the,resource,to,look,up,return,the,media,type,for,the,extension,or,code,null,since,4,3;public,media,type,get,media,type,for,resource,resource,resource,media,type,media,type,super,get,media,type,for,resource,resource,if,media,type,null,string,mime,type,this,servlet,context,get,mime,type,resource,get,filename,if,string,utils,has,text,mime,type,media,type,media,type,parse,media,type,mime,type,if,media,type,equals,media,type,media,type,null,return,media,type
ServletPathExtensionContentNegotiationStrategy -> public MediaType getMediaTypeForResource(Resource resource);1467053815;Extends the base class_{@link PathExtensionContentNegotiationStrategy#getMediaTypeForResource}_with the ability to also look up through the ServletContext._@param resource the resource to look up_@return the MediaType for the extension or {@code null}._@since 4.3;public MediaType getMediaTypeForResource(Resource resource) {_		MediaType mediaType = null__		if (this.servletContext != null) {_			String mimeType = this.servletContext.getMimeType(resource.getFilename())__			if (StringUtils.hasText(mimeType)) {_				mediaType = MediaType.parseMediaType(mimeType)__			}_		}_		if (mediaType == null || MediaType.APPLICATION_OCTET_STREAM.equals(mediaType)) {_			MediaType superMediaType = super.getMediaTypeForResource(resource)__			if (superMediaType != null) {_				mediaType = superMediaType__			}_		}_		return mediaType__	};extends,the,base,class,link,path,extension,content,negotiation,strategy,get,media,type,for,resource,with,the,ability,to,also,look,up,through,the,servlet,context,param,resource,the,resource,to,look,up,return,the,media,type,for,the,extension,or,code,null,since,4,3;public,media,type,get,media,type,for,resource,resource,resource,media,type,media,type,null,if,this,servlet,context,null,string,mime,type,this,servlet,context,get,mime,type,resource,get,filename,if,string,utils,has,text,mime,type,media,type,media,type,parse,media,type,mime,type,if,media,type,null,media,type,equals,media,type,media,type,super,media,type,super,get,media,type,for,resource,resource,if,super,media,type,null,media,type,super,media,type,return,media,type
ServletPathExtensionContentNegotiationStrategy -> public MediaType getMediaTypeForResource(Resource resource);1490104706;Extends the base class_{@link PathExtensionContentNegotiationStrategy#getMediaTypeForResource}_with the ability to also look up through the ServletContext._@param resource the resource to look up_@return the MediaType for the extension or {@code null}._@since 4.3;public MediaType getMediaTypeForResource(Resource resource) {_		MediaType mediaType = null__		if (this.servletContext != null) {_			String mimeType = this.servletContext.getMimeType(resource.getFilename())__			if (StringUtils.hasText(mimeType)) {_				mediaType = MediaType.parseMediaType(mimeType)__			}_		}_		if (mediaType == null || MediaType.APPLICATION_OCTET_STREAM.equals(mediaType)) {_			MediaType superMediaType = super.getMediaTypeForResource(resource)__			if (superMediaType != null) {_				mediaType = superMediaType__			}_		}_		return mediaType__	};extends,the,base,class,link,path,extension,content,negotiation,strategy,get,media,type,for,resource,with,the,ability,to,also,look,up,through,the,servlet,context,param,resource,the,resource,to,look,up,return,the,media,type,for,the,extension,or,code,null,since,4,3;public,media,type,get,media,type,for,resource,resource,resource,media,type,media,type,null,if,this,servlet,context,null,string,mime,type,this,servlet,context,get,mime,type,resource,get,filename,if,string,utils,has,text,mime,type,media,type,media,type,parse,media,type,mime,type,if,media,type,null,media,type,equals,media,type,media,type,super,media,type,super,get,media,type,for,resource,resource,if,super,media,type,null,media,type,super,media,type,return,media,type
ServletPathExtensionContentNegotiationStrategy -> @Override 	protected MediaType handleNoMatch(NativeWebRequest webRequest, String extension) 			throws HttpMediaTypeNotAcceptableException;1398960186;Look up the given extension via {@link ServletContext#getMimeType(String)}_and if that doesn't help, delegate to the parent implementation.;@Override_	protected MediaType handleNoMatch(NativeWebRequest webRequest, String extension)_			throws HttpMediaTypeNotAcceptableException {__		MediaType mediaType = null__		if (this.servletContext != null) {_			String mimeType = this.servletContext.getMimeType("file." + extension)__			if (StringUtils.hasText(mimeType)) {_				mediaType = MediaType.parseMediaType(mimeType)__			}_		}_		if (mediaType == null || MediaType.APPLICATION_OCTET_STREAM.equals(mediaType)) {_			MediaType superMediaType = super.handleNoMatch(webRequest, extension)__			if (superMediaType != null) {_				mediaType = superMediaType__			}_		}_		return mediaType__	};look,up,the,given,extension,via,link,servlet,context,get,mime,type,string,and,if,that,doesn,t,help,delegate,to,the,parent,implementation;override,protected,media,type,handle,no,match,native,web,request,web,request,string,extension,throws,http,media,type,not,acceptable,exception,media,type,media,type,null,if,this,servlet,context,null,string,mime,type,this,servlet,context,get,mime,type,file,extension,if,string,utils,has,text,mime,type,media,type,media,type,parse,media,type,mime,type,if,media,type,null,media,type,equals,media,type,media,type,super,media,type,super,handle,no,match,web,request,extension,if,super,media,type,null,media,type,super,media,type,return,media,type
ServletPathExtensionContentNegotiationStrategy -> @Override 	protected MediaType handleNoMatch(NativeWebRequest webRequest, String extension) 			throws HttpMediaTypeNotAcceptableException;1413848647;Look up the given extension via {@link ServletContext#getMimeType(String)}_and if that doesn't help, delegate to the parent implementation.;@Override_	protected MediaType handleNoMatch(NativeWebRequest webRequest, String extension)_			throws HttpMediaTypeNotAcceptableException {__		MediaType mediaType = null__		if (this.servletContext != null) {_			String mimeType = this.servletContext.getMimeType("file." + extension)__			if (StringUtils.hasText(mimeType)) {_				mediaType = MediaType.parseMediaType(mimeType)__			}_		}_		if (mediaType == null || MediaType.APPLICATION_OCTET_STREAM.equals(mediaType)) {_			MediaType superMediaType = super.handleNoMatch(webRequest, extension)__			if (superMediaType != null) {_				mediaType = superMediaType__			}_		}_		return mediaType__	};look,up,the,given,extension,via,link,servlet,context,get,mime,type,string,and,if,that,doesn,t,help,delegate,to,the,parent,implementation;override,protected,media,type,handle,no,match,native,web,request,web,request,string,extension,throws,http,media,type,not,acceptable,exception,media,type,media,type,null,if,this,servlet,context,null,string,mime,type,this,servlet,context,get,mime,type,file,extension,if,string,utils,has,text,mime,type,media,type,media,type,parse,media,type,mime,type,if,media,type,null,media,type,equals,media,type,media,type,super,media,type,super,handle,no,match,web,request,extension,if,super,media,type,null,media,type,super,media,type,return,media,type
ServletPathExtensionContentNegotiationStrategy -> @Override 	protected MediaType handleNoMatch(NativeWebRequest webRequest, String extension) 			throws HttpMediaTypeNotAcceptableException;1443560917;Resolve file extension via {@link ServletContext#getMimeType(String)}_and also delegate to base class for a potential JAF lookup.;@Override_	protected MediaType handleNoMatch(NativeWebRequest webRequest, String extension)_			throws HttpMediaTypeNotAcceptableException {__		MediaType mediaType = null__		if (this.servletContext != null) {_			String mimeType = this.servletContext.getMimeType("file." + extension)__			if (StringUtils.hasText(mimeType)) {_				mediaType = MediaType.parseMediaType(mimeType)__			}_		}_		if (mediaType == null || MediaType.APPLICATION_OCTET_STREAM.equals(mediaType)) {_			MediaType superMediaType = super.handleNoMatch(webRequest, extension)__			if (superMediaType != null) {_				mediaType = superMediaType__			}_		}_		return mediaType__	};resolve,file,extension,via,link,servlet,context,get,mime,type,string,and,also,delegate,to,base,class,for,a,potential,jaf,lookup;override,protected,media,type,handle,no,match,native,web,request,web,request,string,extension,throws,http,media,type,not,acceptable,exception,media,type,media,type,null,if,this,servlet,context,null,string,mime,type,this,servlet,context,get,mime,type,file,extension,if,string,utils,has,text,mime,type,media,type,media,type,parse,media,type,mime,type,if,media,type,null,media,type,equals,media,type,media,type,super,media,type,super,handle,no,match,web,request,extension,if,super,media,type,null,media,type,super,media,type,return,media,type
ServletPathExtensionContentNegotiationStrategy -> @Override 	protected MediaType handleNoMatch(NativeWebRequest webRequest, String extension) 			throws HttpMediaTypeNotAcceptableException;1457125561;Resolve file extension via {@link ServletContext#getMimeType(String)}_and also delegate to base class for a potential JAF lookup.;@Override_	protected MediaType handleNoMatch(NativeWebRequest webRequest, String extension)_			throws HttpMediaTypeNotAcceptableException {__		MediaType mediaType = null__		if (this.servletContext != null) {_			String mimeType = this.servletContext.getMimeType("file." + extension)__			if (StringUtils.hasText(mimeType)) {_				mediaType = MediaType.parseMediaType(mimeType)__			}_		}_		if (mediaType == null || MediaType.APPLICATION_OCTET_STREAM.equals(mediaType)) {_			MediaType superMediaType = super.handleNoMatch(webRequest, extension)__			if (superMediaType != null) {_				mediaType = superMediaType__			}_		}_		return mediaType__	};resolve,file,extension,via,link,servlet,context,get,mime,type,string,and,also,delegate,to,base,class,for,a,potential,jaf,lookup;override,protected,media,type,handle,no,match,native,web,request,web,request,string,extension,throws,http,media,type,not,acceptable,exception,media,type,media,type,null,if,this,servlet,context,null,string,mime,type,this,servlet,context,get,mime,type,file,extension,if,string,utils,has,text,mime,type,media,type,media,type,parse,media,type,mime,type,if,media,type,null,media,type,equals,media,type,media,type,super,media,type,super,handle,no,match,web,request,extension,if,super,media,type,null,media,type,super,media,type,return,media,type
ServletPathExtensionContentNegotiationStrategy -> @Override 	protected MediaType handleNoMatch(NativeWebRequest webRequest, String extension) 			throws HttpMediaTypeNotAcceptableException;1464879764;Resolve file extension via {@link ServletContext#getMimeType(String)}_and also delegate to base class for a potential JAF lookup.;@Override_	protected MediaType handleNoMatch(NativeWebRequest webRequest, String extension)_			throws HttpMediaTypeNotAcceptableException {__		MediaType mediaType = null__		if (this.servletContext != null) {_			String mimeType = this.servletContext.getMimeType("file." + extension)__			if (StringUtils.hasText(mimeType)) {_				mediaType = MediaType.parseMediaType(mimeType)__			}_		}_		if (mediaType == null || MediaType.APPLICATION_OCTET_STREAM.equals(mediaType)) {_			MediaType superMediaType = super.handleNoMatch(webRequest, extension)__			if (superMediaType != null) {_				mediaType = superMediaType__			}_		}_		return mediaType__	};resolve,file,extension,via,link,servlet,context,get,mime,type,string,and,also,delegate,to,base,class,for,a,potential,jaf,lookup;override,protected,media,type,handle,no,match,native,web,request,web,request,string,extension,throws,http,media,type,not,acceptable,exception,media,type,media,type,null,if,this,servlet,context,null,string,mime,type,this,servlet,context,get,mime,type,file,extension,if,string,utils,has,text,mime,type,media,type,media,type,parse,media,type,mime,type,if,media,type,null,media,type,equals,media,type,media,type,super,media,type,super,handle,no,match,web,request,extension,if,super,media,type,null,media,type,super,media,type,return,media,type
ServletPathExtensionContentNegotiationStrategy -> @Override 	protected MediaType handleNoMatch(NativeWebRequest webRequest, String extension) 			throws HttpMediaTypeNotAcceptableException;1467053815;Resolve file extension via {@link ServletContext#getMimeType(String)}_and also delegate to base class for a potential JAF lookup.;@Override_	protected MediaType handleNoMatch(NativeWebRequest webRequest, String extension)_			throws HttpMediaTypeNotAcceptableException {__		MediaType mediaType = null__		if (this.servletContext != null) {_			String mimeType = this.servletContext.getMimeType("file." + extension)__			if (StringUtils.hasText(mimeType)) {_				mediaType = MediaType.parseMediaType(mimeType)__			}_		}_		if (mediaType == null || MediaType.APPLICATION_OCTET_STREAM.equals(mediaType)) {_			MediaType superMediaType = super.handleNoMatch(webRequest, extension)__			if (superMediaType != null) {_				mediaType = superMediaType__			}_		}_		return mediaType__	};resolve,file,extension,via,link,servlet,context,get,mime,type,string,and,also,delegate,to,base,class,for,a,potential,jaf,lookup;override,protected,media,type,handle,no,match,native,web,request,web,request,string,extension,throws,http,media,type,not,acceptable,exception,media,type,media,type,null,if,this,servlet,context,null,string,mime,type,this,servlet,context,get,mime,type,file,extension,if,string,utils,has,text,mime,type,media,type,media,type,parse,media,type,mime,type,if,media,type,null,media,type,equals,media,type,media,type,super,media,type,super,handle,no,match,web,request,extension,if,super,media,type,null,media,type,super,media,type,return,media,type
ServletPathExtensionContentNegotiationStrategy -> @Override 	protected MediaType handleNoMatch(NativeWebRequest webRequest, String extension) 			throws HttpMediaTypeNotAcceptableException;1490104706;Resolve file extension via {@link ServletContext#getMimeType(String)}_and also delegate to base class for a potential_{@link org.springframework.http.MediaTypeFactory} lookup.;@Override_	protected MediaType handleNoMatch(NativeWebRequest webRequest, String extension)_			throws HttpMediaTypeNotAcceptableException {__		MediaType mediaType = null__		if (this.servletContext != null) {_			String mimeType = this.servletContext.getMimeType("file." + extension)__			if (StringUtils.hasText(mimeType)) {_				mediaType = MediaType.parseMediaType(mimeType)__			}_		}_		if (mediaType == null || MediaType.APPLICATION_OCTET_STREAM.equals(mediaType)) {_			MediaType superMediaType = super.handleNoMatch(webRequest, extension)__			if (superMediaType != null) {_				mediaType = superMediaType__			}_		}_		return mediaType__	};resolve,file,extension,via,link,servlet,context,get,mime,type,string,and,also,delegate,to,base,class,for,a,potential,link,org,springframework,http,media,type,factory,lookup;override,protected,media,type,handle,no,match,native,web,request,web,request,string,extension,throws,http,media,type,not,acceptable,exception,media,type,media,type,null,if,this,servlet,context,null,string,mime,type,this,servlet,context,get,mime,type,file,extension,if,string,utils,has,text,mime,type,media,type,media,type,parse,media,type,mime,type,if,media,type,null,media,type,equals,media,type,media,type,super,media,type,super,handle,no,match,web,request,extension,if,super,media,type,null,media,type,super,media,type,return,media,type
ServletPathExtensionContentNegotiationStrategy -> @Override 	protected MediaType handleNoMatch(NativeWebRequest webRequest, String extension) 			throws HttpMediaTypeNotAcceptableException;1490285806;Resolve file extension via {@link ServletContext#getMimeType(String)}_and also delegate to base class for a potential_{@link org.springframework.http.MediaTypeFactory} lookup.;@Override_	protected MediaType handleNoMatch(NativeWebRequest webRequest, String extension)_			throws HttpMediaTypeNotAcceptableException {__		MediaType mediaType = null__		if (this.servletContext != null) {_			String mimeType = this.servletContext.getMimeType("file." + extension)__			if (StringUtils.hasText(mimeType)) {_				mediaType = MediaType.parseMediaType(mimeType)__			}_		}_		if (mediaType == null || MediaType.APPLICATION_OCTET_STREAM.equals(mediaType)) {_			MediaType superMediaType = super.handleNoMatch(webRequest, extension)__			if (superMediaType != null) {_				mediaType = superMediaType__			}_		}_		return mediaType__	};resolve,file,extension,via,link,servlet,context,get,mime,type,string,and,also,delegate,to,base,class,for,a,potential,link,org,springframework,http,media,type,factory,lookup;override,protected,media,type,handle,no,match,native,web,request,web,request,string,extension,throws,http,media,type,not,acceptable,exception,media,type,media,type,null,if,this,servlet,context,null,string,mime,type,this,servlet,context,get,mime,type,file,extension,if,string,utils,has,text,mime,type,media,type,media,type,parse,media,type,mime,type,if,media,type,null,media,type,equals,media,type,media,type,super,media,type,super,handle,no,match,web,request,extension,if,super,media,type,null,media,type,super,media,type,return,media,type
ServletPathExtensionContentNegotiationStrategy -> @Override 	protected MediaType handleNoMatch(NativeWebRequest webRequest, String extension) 			throws HttpMediaTypeNotAcceptableException;1495868221;Resolve file extension via {@link ServletContext#getMimeType(String)}_and also delegate to base class for a potential_{@link org.springframework.http.MediaTypeFactory} lookup.;@Override_	protected MediaType handleNoMatch(NativeWebRequest webRequest, String extension)_			throws HttpMediaTypeNotAcceptableException {__		MediaType mediaType = null__		if (this.servletContext != null) {_			String mimeType = this.servletContext.getMimeType("file." + extension)__			if (StringUtils.hasText(mimeType)) {_				mediaType = MediaType.parseMediaType(mimeType)__			}_		}_		if (mediaType == null || MediaType.APPLICATION_OCTET_STREAM.equals(mediaType)) {_			MediaType superMediaType = super.handleNoMatch(webRequest, extension)__			if (superMediaType != null) {_				mediaType = superMediaType__			}_		}_		return mediaType__	};resolve,file,extension,via,link,servlet,context,get,mime,type,string,and,also,delegate,to,base,class,for,a,potential,link,org,springframework,http,media,type,factory,lookup;override,protected,media,type,handle,no,match,native,web,request,web,request,string,extension,throws,http,media,type,not,acceptable,exception,media,type,media,type,null,if,this,servlet,context,null,string,mime,type,this,servlet,context,get,mime,type,file,extension,if,string,utils,has,text,mime,type,media,type,media,type,parse,media,type,mime,type,if,media,type,null,media,type,equals,media,type,media,type,super,media,type,super,handle,no,match,web,request,extension,if,super,media,type,null,media,type,super,media,type,return,media,type
ServletPathExtensionContentNegotiationStrategy -> @Override 	protected MediaType handleNoMatch(NativeWebRequest webRequest, String extension) 			throws HttpMediaTypeNotAcceptableException;1496837955;Resolve file extension via {@link ServletContext#getMimeType(String)}_and also delegate to base class for a potential_{@link org.springframework.http.MediaTypeFactory} lookup.;@Override_	protected MediaType handleNoMatch(NativeWebRequest webRequest, String extension)_			throws HttpMediaTypeNotAcceptableException {__		MediaType mediaType = null__		if (this.servletContext != null) {_			String mimeType = this.servletContext.getMimeType("file." + extension)__			if (StringUtils.hasText(mimeType)) {_				mediaType = MediaType.parseMediaType(mimeType)__			}_		}_		if (mediaType == null || MediaType.APPLICATION_OCTET_STREAM.equals(mediaType)) {_			MediaType superMediaType = super.handleNoMatch(webRequest, extension)__			if (superMediaType != null) {_				mediaType = superMediaType__			}_		}_		return mediaType__	};resolve,file,extension,via,link,servlet,context,get,mime,type,string,and,also,delegate,to,base,class,for,a,potential,link,org,springframework,http,media,type,factory,lookup;override,protected,media,type,handle,no,match,native,web,request,web,request,string,extension,throws,http,media,type,not,acceptable,exception,media,type,media,type,null,if,this,servlet,context,null,string,mime,type,this,servlet,context,get,mime,type,file,extension,if,string,utils,has,text,mime,type,media,type,media,type,parse,media,type,mime,type,if,media,type,null,media,type,equals,media,type,media,type,super,media,type,super,handle,no,match,web,request,extension,if,super,media,type,null,media,type,super,media,type,return,media,type
ServletPathExtensionContentNegotiationStrategy -> @Override 	protected MediaType handleNoMatch(NativeWebRequest webRequest, String extension) 			throws HttpMediaTypeNotAcceptableException;1498780456;Resolve file extension via {@link ServletContext#getMimeType(String)}_and also delegate to base class for a potential_{@link org.springframework.http.MediaTypeFactory} lookup.;@Override_	protected MediaType handleNoMatch(NativeWebRequest webRequest, String extension)_			throws HttpMediaTypeNotAcceptableException {__		MediaType mediaType = null__		String mimeType = this.servletContext.getMimeType("file." + extension)__		if (StringUtils.hasText(mimeType)) {_			mediaType = MediaType.parseMediaType(mimeType)__		}_		if (mediaType == null || MediaType.APPLICATION_OCTET_STREAM.equals(mediaType)) {_			MediaType superMediaType = super.handleNoMatch(webRequest, extension)__			if (superMediaType != null) {_				mediaType = superMediaType__			}_		}_		return mediaType__	};resolve,file,extension,via,link,servlet,context,get,mime,type,string,and,also,delegate,to,base,class,for,a,potential,link,org,springframework,http,media,type,factory,lookup;override,protected,media,type,handle,no,match,native,web,request,web,request,string,extension,throws,http,media,type,not,acceptable,exception,media,type,media,type,null,string,mime,type,this,servlet,context,get,mime,type,file,extension,if,string,utils,has,text,mime,type,media,type,media,type,parse,media,type,mime,type,if,media,type,null,media,type,equals,media,type,media,type,super,media,type,super,handle,no,match,web,request,extension,if,super,media,type,null,media,type,super,media,type,return,media,type
ServletPathExtensionContentNegotiationStrategy -> public ServletPathExtensionContentNegotiationStrategy(ServletContext context, 			Map<String, MediaType> mediaTypes);1443560917;Create an instance with the given extension-to-MediaType lookup.;public ServletPathExtensionContentNegotiationStrategy(ServletContext context,_			Map<String, MediaType> mediaTypes) {__		super(mediaTypes)__		Assert.notNull(context, "ServletContext is required!")__		this.servletContext = context__	};create,an,instance,with,the,given,extension,to,media,type,lookup;public,servlet,path,extension,content,negotiation,strategy,servlet,context,context,map,string,media,type,media,types,super,media,types,assert,not,null,context,servlet,context,is,required,this,servlet,context,context
ServletPathExtensionContentNegotiationStrategy -> public ServletPathExtensionContentNegotiationStrategy(ServletContext context, 			Map<String, MediaType> mediaTypes);1457125561;Create an instance with the given extension-to-MediaType lookup.;public ServletPathExtensionContentNegotiationStrategy(ServletContext context,_			Map<String, MediaType> mediaTypes) {__		super(mediaTypes)__		Assert.notNull(context, "ServletContext is required!")__		this.servletContext = context__	};create,an,instance,with,the,given,extension,to,media,type,lookup;public,servlet,path,extension,content,negotiation,strategy,servlet,context,context,map,string,media,type,media,types,super,media,types,assert,not,null,context,servlet,context,is,required,this,servlet,context,context
ServletPathExtensionContentNegotiationStrategy -> public ServletPathExtensionContentNegotiationStrategy( 			ServletContext servletContext, Map<String, MediaType> mediaTypes);1348666123;Create an instance with the given extension-to-MediaType lookup._@throws IllegalArgumentException if a media type string cannot be parsed;public ServletPathExtensionContentNegotiationStrategy(_			ServletContext servletContext, Map<String, MediaType> mediaTypes) {__		super(mediaTypes)__		Assert.notNull(servletContext, "ServletContext is required!")__		this.servletContext = servletContext__	};create,an,instance,with,the,given,extension,to,media,type,lookup,throws,illegal,argument,exception,if,a,media,type,string,cannot,be,parsed;public,servlet,path,extension,content,negotiation,strategy,servlet,context,servlet,context,map,string,media,type,media,types,super,media,types,assert,not,null,servlet,context,servlet,context,is,required,this,servlet,context,servlet,context
ServletPathExtensionContentNegotiationStrategy -> public ServletPathExtensionContentNegotiationStrategy( 			ServletContext servletContext, Map<String, MediaType> mediaTypes);1398960186;Create an instance with the given extension-to-MediaType lookup._@throws IllegalArgumentException if a media type string cannot be parsed;public ServletPathExtensionContentNegotiationStrategy(_			ServletContext servletContext, Map<String, MediaType> mediaTypes) {__		super(mediaTypes)__		Assert.notNull(servletContext, "ServletContext is required!")__		this.servletContext = servletContext__	};create,an,instance,with,the,given,extension,to,media,type,lookup,throws,illegal,argument,exception,if,a,media,type,string,cannot,be,parsed;public,servlet,path,extension,content,negotiation,strategy,servlet,context,servlet,context,map,string,media,type,media,types,super,media,types,assert,not,null,servlet,context,servlet,context,is,required,this,servlet,context,servlet,context
ServletPathExtensionContentNegotiationStrategy -> public ServletPathExtensionContentNegotiationStrategy( 			ServletContext servletContext, Map<String, MediaType> mediaTypes);1413848647;Create an instance with the given extension-to-MediaType lookup._@throws IllegalArgumentException if a media type string cannot be parsed;public ServletPathExtensionContentNegotiationStrategy(_			ServletContext servletContext, Map<String, MediaType> mediaTypes) {__		super(mediaTypes)__		Assert.notNull(servletContext, "ServletContext is required!")__		this.servletContext = servletContext__	};create,an,instance,with,the,given,extension,to,media,type,lookup,throws,illegal,argument,exception,if,a,media,type,string,cannot,be,parsed;public,servlet,path,extension,content,negotiation,strategy,servlet,context,servlet,context,map,string,media,type,media,types,super,media,types,assert,not,null,servlet,context,servlet,context,is,required,this,servlet,context,servlet,context
ServletPathExtensionContentNegotiationStrategy -> public ServletPathExtensionContentNegotiationStrategy( 			ServletContext servletContext, Map<String, MediaType> mediaTypes);1464879764;Create an instance with the given extension-to-MediaType lookup.;public ServletPathExtensionContentNegotiationStrategy(_			ServletContext servletContext, Map<String, MediaType> mediaTypes) {__		super(mediaTypes)__		Assert.notNull(servletContext, "ServletContext is required")__		this.servletContext = servletContext__	};create,an,instance,with,the,given,extension,to,media,type,lookup;public,servlet,path,extension,content,negotiation,strategy,servlet,context,servlet,context,map,string,media,type,media,types,super,media,types,assert,not,null,servlet,context,servlet,context,is,required,this,servlet,context,servlet,context
ServletPathExtensionContentNegotiationStrategy -> public ServletPathExtensionContentNegotiationStrategy( 			ServletContext servletContext, Map<String, MediaType> mediaTypes);1467053815;Create an instance with the given extension-to-MediaType lookup.;public ServletPathExtensionContentNegotiationStrategy(_			ServletContext servletContext, Map<String, MediaType> mediaTypes) {__		super(mediaTypes)__		Assert.notNull(servletContext, "ServletContext is required")__		this.servletContext = servletContext__	};create,an,instance,with,the,given,extension,to,media,type,lookup;public,servlet,path,extension,content,negotiation,strategy,servlet,context,servlet,context,map,string,media,type,media,types,super,media,types,assert,not,null,servlet,context,servlet,context,is,required,this,servlet,context,servlet,context
ServletPathExtensionContentNegotiationStrategy -> public ServletPathExtensionContentNegotiationStrategy( 			ServletContext servletContext, Map<String, MediaType> mediaTypes);1490104706;Create an instance with the given extension-to-MediaType lookup.;public ServletPathExtensionContentNegotiationStrategy(_			ServletContext servletContext, Map<String, MediaType> mediaTypes) {__		super(mediaTypes)__		Assert.notNull(servletContext, "ServletContext is required")__		this.servletContext = servletContext__	};create,an,instance,with,the,given,extension,to,media,type,lookup;public,servlet,path,extension,content,negotiation,strategy,servlet,context,servlet,context,map,string,media,type,media,types,super,media,types,assert,not,null,servlet,context,servlet,context,is,required,this,servlet,context,servlet,context
ServletPathExtensionContentNegotiationStrategy -> public ServletPathExtensionContentNegotiationStrategy( 			ServletContext servletContext, Map<String, MediaType> mediaTypes);1490285806;Create an instance with the given extension-to-MediaType lookup.;public ServletPathExtensionContentNegotiationStrategy(_			ServletContext servletContext, Map<String, MediaType> mediaTypes) {__		super(mediaTypes)__		Assert.notNull(servletContext, "ServletContext is required")__		this.servletContext = servletContext__	};create,an,instance,with,the,given,extension,to,media,type,lookup;public,servlet,path,extension,content,negotiation,strategy,servlet,context,servlet,context,map,string,media,type,media,types,super,media,types,assert,not,null,servlet,context,servlet,context,is,required,this,servlet,context,servlet,context
ServletPathExtensionContentNegotiationStrategy -> public ServletPathExtensionContentNegotiationStrategy( 			ServletContext servletContext, Map<String, MediaType> mediaTypes);1495868221;Create an instance with the given extension-to-MediaType lookup.;public ServletPathExtensionContentNegotiationStrategy(_			ServletContext servletContext, Map<String, MediaType> mediaTypes) {__		super(mediaTypes)__		Assert.notNull(servletContext, "ServletContext is required")__		this.servletContext = servletContext__	};create,an,instance,with,the,given,extension,to,media,type,lookup;public,servlet,path,extension,content,negotiation,strategy,servlet,context,servlet,context,map,string,media,type,media,types,super,media,types,assert,not,null,servlet,context,servlet,context,is,required,this,servlet,context,servlet,context
ServletPathExtensionContentNegotiationStrategy -> public ServletPathExtensionContentNegotiationStrategy( 			ServletContext servletContext, @Nullable Map<String, MediaType> mediaTypes);1496837955;Create an instance with the given extension-to-MediaType lookup.;public ServletPathExtensionContentNegotiationStrategy(_			ServletContext servletContext, @Nullable Map<String, MediaType> mediaTypes) {__		super(mediaTypes)__		Assert.notNull(servletContext, "ServletContext is required")__		this.servletContext = servletContext__	};create,an,instance,with,the,given,extension,to,media,type,lookup;public,servlet,path,extension,content,negotiation,strategy,servlet,context,servlet,context,nullable,map,string,media,type,media,types,super,media,types,assert,not,null,servlet,context,servlet,context,is,required,this,servlet,context,servlet,context
ServletPathExtensionContentNegotiationStrategy -> public ServletPathExtensionContentNegotiationStrategy( 			ServletContext servletContext, @Nullable Map<String, MediaType> mediaTypes);1498780456;Create an instance with the given extension-to-MediaType lookup.;public ServletPathExtensionContentNegotiationStrategy(_			ServletContext servletContext, @Nullable Map<String, MediaType> mediaTypes) {__		super(mediaTypes)__		Assert.notNull(servletContext, "ServletContext is required")__		this.servletContext = servletContext__	};create,an,instance,with,the,given,extension,to,media,type,lookup;public,servlet,path,extension,content,negotiation,strategy,servlet,context,servlet,context,nullable,map,string,media,type,media,types,super,media,types,assert,not,null,servlet,context,servlet,context,is,required,this,servlet,context,servlet,context
ServletPathExtensionContentNegotiationStrategy -> public ServletPathExtensionContentNegotiationStrategy( 			ServletContext servletContext, @Nullable Map<String, MediaType> mediaTypes);1502974979;Create an instance with the given extension-to-MediaType lookup.;public ServletPathExtensionContentNegotiationStrategy(_			ServletContext servletContext, @Nullable Map<String, MediaType> mediaTypes) {__		super(mediaTypes)__		Assert.notNull(servletContext, "ServletContext is required")__		this.servletContext = servletContext__	};create,an,instance,with,the,given,extension,to,media,type,lookup;public,servlet,path,extension,content,negotiation,strategy,servlet,context,servlet,context,nullable,map,string,media,type,media,types,super,media,types,assert,not,null,servlet,context,servlet,context,is,required,this,servlet,context,servlet,context
ServletPathExtensionContentNegotiationStrategy -> public ServletPathExtensionContentNegotiationStrategy( 			ServletContext servletContext, @Nullable Map<String, MediaType> mediaTypes);1506468851;Create an instance with the given extension-to-MediaType lookup.;public ServletPathExtensionContentNegotiationStrategy(_			ServletContext servletContext, @Nullable Map<String, MediaType> mediaTypes) {__		super(mediaTypes)__		Assert.notNull(servletContext, "ServletContext is required")__		this.servletContext = servletContext__	};create,an,instance,with,the,given,extension,to,media,type,lookup;public,servlet,path,extension,content,negotiation,strategy,servlet,context,servlet,context,nullable,map,string,media,type,media,types,super,media,types,assert,not,null,servlet,context,servlet,context,is,required,this,servlet,context,servlet,context
ServletPathExtensionContentNegotiationStrategy -> public ServletPathExtensionContentNegotiationStrategy(ServletContext servletContext);1348666123;Create an instance without any mappings to start with. Mappings may be_added later on if any extensions are resolved through_{@link ServletContext#getMimeType(String)} or through the Java Activation_framework.;public ServletPathExtensionContentNegotiationStrategy(ServletContext servletContext) {_		this(servletContext, null)__	};create,an,instance,without,any,mappings,to,start,with,mappings,may,be,added,later,on,if,any,extensions,are,resolved,through,link,servlet,context,get,mime,type,string,or,through,the,java,activation,framework;public,servlet,path,extension,content,negotiation,strategy,servlet,context,servlet,context,this,servlet,context,null
ServletPathExtensionContentNegotiationStrategy -> public ServletPathExtensionContentNegotiationStrategy(ServletContext servletContext);1398960186;Create an instance without any mappings to start with. Mappings may be_added later on if any extensions are resolved through_{@link ServletContext#getMimeType(String)} or through the Java Activation_framework.;public ServletPathExtensionContentNegotiationStrategy(ServletContext servletContext) {_		this(servletContext, null)__	};create,an,instance,without,any,mappings,to,start,with,mappings,may,be,added,later,on,if,any,extensions,are,resolved,through,link,servlet,context,get,mime,type,string,or,through,the,java,activation,framework;public,servlet,path,extension,content,negotiation,strategy,servlet,context,servlet,context,this,servlet,context,null
ServletPathExtensionContentNegotiationStrategy -> public ServletPathExtensionContentNegotiationStrategy(ServletContext servletContext);1413848647;Create an instance without any mappings to start with. Mappings may be_added later on if any extensions are resolved through_{@link ServletContext#getMimeType(String)} or through the Java Activation_framework.;public ServletPathExtensionContentNegotiationStrategy(ServletContext servletContext) {_		this(servletContext, null)__	};create,an,instance,without,any,mappings,to,start,with,mappings,may,be,added,later,on,if,any,extensions,are,resolved,through,link,servlet,context,get,mime,type,string,or,through,the,java,activation,framework;public,servlet,path,extension,content,negotiation,strategy,servlet,context,servlet,context,this,servlet,context,null
ServletPathExtensionContentNegotiationStrategy -> @Override 	public MediaType getMediaTypeForResource(Resource resource);1490285806;Extends the base class_{@link PathExtensionContentNegotiationStrategy#getMediaTypeForResource}_with the ability to also look up through the ServletContext._@param resource the resource to look up_@return the MediaType for the extension or {@code null}._@since 4.3;@Override_	public MediaType getMediaTypeForResource(Resource resource) {_		MediaType mediaType = null__		if (this.servletContext != null) {_			String mimeType = this.servletContext.getMimeType(resource.getFilename())__			if (StringUtils.hasText(mimeType)) {_				mediaType = MediaType.parseMediaType(mimeType)__			}_		}_		if (mediaType == null || MediaType.APPLICATION_OCTET_STREAM.equals(mediaType)) {_			MediaType superMediaType = super.getMediaTypeForResource(resource)__			if (superMediaType != null) {_				mediaType = superMediaType__			}_		}_		return mediaType__	};extends,the,base,class,link,path,extension,content,negotiation,strategy,get,media,type,for,resource,with,the,ability,to,also,look,up,through,the,servlet,context,param,resource,the,resource,to,look,up,return,the,media,type,for,the,extension,or,code,null,since,4,3;override,public,media,type,get,media,type,for,resource,resource,resource,media,type,media,type,null,if,this,servlet,context,null,string,mime,type,this,servlet,context,get,mime,type,resource,get,filename,if,string,utils,has,text,mime,type,media,type,media,type,parse,media,type,mime,type,if,media,type,null,media,type,equals,media,type,media,type,super,media,type,super,get,media,type,for,resource,resource,if,super,media,type,null,media,type,super,media,type,return,media,type
ServletPathExtensionContentNegotiationStrategy -> @Override 	public MediaType getMediaTypeForResource(Resource resource);1495868221;Extends the base class_{@link PathExtensionContentNegotiationStrategy#getMediaTypeForResource}_with the ability to also look up through the ServletContext._@param resource the resource to look up_@return the MediaType for the extension or {@code null}._@since 4.3;@Override_	public MediaType getMediaTypeForResource(Resource resource) {_		MediaType mediaType = null__		if (this.servletContext != null) {_			String mimeType = this.servletContext.getMimeType(resource.getFilename())__			if (StringUtils.hasText(mimeType)) {_				mediaType = MediaType.parseMediaType(mimeType)__			}_		}_		if (mediaType == null || MediaType.APPLICATION_OCTET_STREAM.equals(mediaType)) {_			MediaType superMediaType = super.getMediaTypeForResource(resource)__			if (superMediaType != null) {_				mediaType = superMediaType__			}_		}_		return mediaType__	};extends,the,base,class,link,path,extension,content,negotiation,strategy,get,media,type,for,resource,with,the,ability,to,also,look,up,through,the,servlet,context,param,resource,the,resource,to,look,up,return,the,media,type,for,the,extension,or,code,null,since,4,3;override,public,media,type,get,media,type,for,resource,resource,resource,media,type,media,type,null,if,this,servlet,context,null,string,mime,type,this,servlet,context,get,mime,type,resource,get,filename,if,string,utils,has,text,mime,type,media,type,media,type,parse,media,type,mime,type,if,media,type,null,media,type,equals,media,type,media,type,super,media,type,super,get,media,type,for,resource,resource,if,super,media,type,null,media,type,super,media,type,return,media,type
ServletPathExtensionContentNegotiationStrategy -> @Override 	public MediaType getMediaTypeForResource(Resource resource);1496837955;Extends the base class_{@link PathExtensionContentNegotiationStrategy#getMediaTypeForResource}_with the ability to also look up through the ServletContext._@param resource the resource to look up_@return the MediaType for the extension or {@code null}._@since 4.3;@Override_	public MediaType getMediaTypeForResource(Resource resource) {_		MediaType mediaType = null__		if (this.servletContext != null) {_			String mimeType = this.servletContext.getMimeType(resource.getFilename())__			if (StringUtils.hasText(mimeType)) {_				mediaType = MediaType.parseMediaType(mimeType)__			}_		}_		if (mediaType == null || MediaType.APPLICATION_OCTET_STREAM.equals(mediaType)) {_			MediaType superMediaType = super.getMediaTypeForResource(resource)__			if (superMediaType != null) {_				mediaType = superMediaType__			}_		}_		return mediaType__	};extends,the,base,class,link,path,extension,content,negotiation,strategy,get,media,type,for,resource,with,the,ability,to,also,look,up,through,the,servlet,context,param,resource,the,resource,to,look,up,return,the,media,type,for,the,extension,or,code,null,since,4,3;override,public,media,type,get,media,type,for,resource,resource,resource,media,type,media,type,null,if,this,servlet,context,null,string,mime,type,this,servlet,context,get,mime,type,resource,get,filename,if,string,utils,has,text,mime,type,media,type,media,type,parse,media,type,mime,type,if,media,type,null,media,type,equals,media,type,media,type,super,media,type,super,get,media,type,for,resource,resource,if,super,media,type,null,media,type,super,media,type,return,media,type
ServletPathExtensionContentNegotiationStrategy -> @Override 	public MediaType getMediaTypeForResource(Resource resource);1498780456;Extends the base class_{@link PathExtensionContentNegotiationStrategy#getMediaTypeForResource}_with the ability to also look up through the ServletContext._@param resource the resource to look up_@return the MediaType for the extension or {@code null}._@since 4.3;@Override_	public MediaType getMediaTypeForResource(Resource resource) {_		MediaType mediaType = null__		String mimeType = this.servletContext.getMimeType(resource.getFilename())__		if (StringUtils.hasText(mimeType)) {_			mediaType = MediaType.parseMediaType(mimeType)__		}_		if (mediaType == null || MediaType.APPLICATION_OCTET_STREAM.equals(mediaType)) {_			MediaType superMediaType = super.getMediaTypeForResource(resource)__			if (superMediaType != null) {_				mediaType = superMediaType__			}_		}_		return mediaType__	};extends,the,base,class,link,path,extension,content,negotiation,strategy,get,media,type,for,resource,with,the,ability,to,also,look,up,through,the,servlet,context,param,resource,the,resource,to,look,up,return,the,media,type,for,the,extension,or,code,null,since,4,3;override,public,media,type,get,media,type,for,resource,resource,resource,media,type,media,type,null,string,mime,type,this,servlet,context,get,mime,type,resource,get,filename,if,string,utils,has,text,mime,type,media,type,media,type,parse,media,type,mime,type,if,media,type,null,media,type,equals,media,type,media,type,super,media,type,super,get,media,type,for,resource,resource,if,super,media,type,null,media,type,super,media,type,return,media,type
ServletPathExtensionContentNegotiationStrategy -> @Override 	public MediaType getMediaTypeForResource(Resource resource);1502974979;Extends the base class_{@link PathExtensionContentNegotiationStrategy#getMediaTypeForResource}_with the ability to also look up through the ServletContext._@param resource the resource to look up_@return the MediaType for the extension or {@code null}._@since 4.3;@Override_	public MediaType getMediaTypeForResource(Resource resource) {_		MediaType mediaType = null__		String mimeType = this.servletContext.getMimeType(resource.getFilename())__		if (StringUtils.hasText(mimeType)) {_			mediaType = MediaType.parseMediaType(mimeType)__		}_		if (mediaType == null || MediaType.APPLICATION_OCTET_STREAM.equals(mediaType)) {_			MediaType superMediaType = super.getMediaTypeForResource(resource)__			if (superMediaType != null) {_				mediaType = superMediaType__			}_		}_		return mediaType__	};extends,the,base,class,link,path,extension,content,negotiation,strategy,get,media,type,for,resource,with,the,ability,to,also,look,up,through,the,servlet,context,param,resource,the,resource,to,look,up,return,the,media,type,for,the,extension,or,code,null,since,4,3;override,public,media,type,get,media,type,for,resource,resource,resource,media,type,media,type,null,string,mime,type,this,servlet,context,get,mime,type,resource,get,filename,if,string,utils,has,text,mime,type,media,type,media,type,parse,media,type,mime,type,if,media,type,null,media,type,equals,media,type,media,type,super,media,type,super,get,media,type,for,resource,resource,if,super,media,type,null,media,type,super,media,type,return,media,type
ServletPathExtensionContentNegotiationStrategy -> @Override 	public MediaType getMediaTypeForResource(Resource resource);1506468851;Extends the base class_{@link PathExtensionContentNegotiationStrategy#getMediaTypeForResource}_with the ability to also look up through the ServletContext._@param resource the resource to look up_@return the MediaType for the extension, or {@code null} if none found_@since 4.3;@Override_	public MediaType getMediaTypeForResource(Resource resource) {_		MediaType mediaType = null__		String mimeType = this.servletContext.getMimeType(resource.getFilename())__		if (StringUtils.hasText(mimeType)) {_			mediaType = MediaType.parseMediaType(mimeType)__		}_		if (mediaType == null || MediaType.APPLICATION_OCTET_STREAM.equals(mediaType)) {_			MediaType superMediaType = super.getMediaTypeForResource(resource)__			if (superMediaType != null) {_				mediaType = superMediaType__			}_		}_		return mediaType__	};extends,the,base,class,link,path,extension,content,negotiation,strategy,get,media,type,for,resource,with,the,ability,to,also,look,up,through,the,servlet,context,param,resource,the,resource,to,look,up,return,the,media,type,for,the,extension,or,code,null,if,none,found,since,4,3;override,public,media,type,get,media,type,for,resource,resource,resource,media,type,media,type,null,string,mime,type,this,servlet,context,get,mime,type,resource,get,filename,if,string,utils,has,text,mime,type,media,type,media,type,parse,media,type,mime,type,if,media,type,null,media,type,equals,media,type,media,type,super,media,type,super,get,media,type,for,resource,resource,if,super,media,type,null,media,type,super,media,type,return,media,type
ServletPathExtensionContentNegotiationStrategy -> @Override 	@Nullable 	protected MediaType handleNoMatch(NativeWebRequest webRequest, String extension) 			throws HttpMediaTypeNotAcceptableException;1502974979;Resolve file extension via {@link ServletContext#getMimeType(String)}_and also delegate to base class for a potential_{@link org.springframework.http.MediaTypeFactory} lookup.;@Override_	@Nullable_	protected MediaType handleNoMatch(NativeWebRequest webRequest, String extension)_			throws HttpMediaTypeNotAcceptableException {__		MediaType mediaType = null__		String mimeType = this.servletContext.getMimeType("file." + extension)__		if (StringUtils.hasText(mimeType)) {_			mediaType = MediaType.parseMediaType(mimeType)__		}_		if (mediaType == null || MediaType.APPLICATION_OCTET_STREAM.equals(mediaType)) {_			MediaType superMediaType = super.handleNoMatch(webRequest, extension)__			if (superMediaType != null) {_				mediaType = superMediaType__			}_		}_		return mediaType__	};resolve,file,extension,via,link,servlet,context,get,mime,type,string,and,also,delegate,to,base,class,for,a,potential,link,org,springframework,http,media,type,factory,lookup;override,nullable,protected,media,type,handle,no,match,native,web,request,web,request,string,extension,throws,http,media,type,not,acceptable,exception,media,type,media,type,null,string,mime,type,this,servlet,context,get,mime,type,file,extension,if,string,utils,has,text,mime,type,media,type,media,type,parse,media,type,mime,type,if,media,type,null,media,type,equals,media,type,media,type,super,media,type,super,handle,no,match,web,request,extension,if,super,media,type,null,media,type,super,media,type,return,media,type
ServletPathExtensionContentNegotiationStrategy -> @Override 	@Nullable 	protected MediaType handleNoMatch(NativeWebRequest webRequest, String extension) 			throws HttpMediaTypeNotAcceptableException;1506468851;Resolve file extension via {@link ServletContext#getMimeType(String)}_and also delegate to base class for a potential_{@link org.springframework.http.MediaTypeFactory} lookup.;@Override_	@Nullable_	protected MediaType handleNoMatch(NativeWebRequest webRequest, String extension)_			throws HttpMediaTypeNotAcceptableException {__		MediaType mediaType = null__		String mimeType = this.servletContext.getMimeType("file." + extension)__		if (StringUtils.hasText(mimeType)) {_			mediaType = MediaType.parseMediaType(mimeType)__		}_		if (mediaType == null || MediaType.APPLICATION_OCTET_STREAM.equals(mediaType)) {_			MediaType superMediaType = super.handleNoMatch(webRequest, extension)__			if (superMediaType != null) {_				mediaType = superMediaType__			}_		}_		return mediaType__	};resolve,file,extension,via,link,servlet,context,get,mime,type,string,and,also,delegate,to,base,class,for,a,potential,link,org,springframework,http,media,type,factory,lookup;override,nullable,protected,media,type,handle,no,match,native,web,request,web,request,string,extension,throws,http,media,type,not,acceptable,exception,media,type,media,type,null,string,mime,type,this,servlet,context,get,mime,type,file,extension,if,string,utils,has,text,mime,type,media,type,media,type,parse,media,type,mime,type,if,media,type,null,media,type,equals,media,type,media,type,super,media,type,super,handle,no,match,web,request,extension,if,super,media,type,null,media,type,super,media,type,return,media,type
ServletPathExtensionContentNegotiationStrategy -> public ServletPathExtensionContentNegotiationStrategy(ServletContext context);1443560917;Create an instance without any mappings to start with. Mappings may be_added later when extensions are resolved through_{@link ServletContext#getMimeType(String)} or via JAF.;public ServletPathExtensionContentNegotiationStrategy(ServletContext context) {_		this(context, null)__	};create,an,instance,without,any,mappings,to,start,with,mappings,may,be,added,later,when,extensions,are,resolved,through,link,servlet,context,get,mime,type,string,or,via,jaf;public,servlet,path,extension,content,negotiation,strategy,servlet,context,context,this,context,null
ServletPathExtensionContentNegotiationStrategy -> public ServletPathExtensionContentNegotiationStrategy(ServletContext context);1457125561;Create an instance without any mappings to start with. Mappings may be_added later when extensions are resolved through_{@link ServletContext#getMimeType(String)} or via JAF.;public ServletPathExtensionContentNegotiationStrategy(ServletContext context) {_		this(context, null)__	};create,an,instance,without,any,mappings,to,start,with,mappings,may,be,added,later,when,extensions,are,resolved,through,link,servlet,context,get,mime,type,string,or,via,jaf;public,servlet,path,extension,content,negotiation,strategy,servlet,context,context,this,context,null
ServletPathExtensionContentNegotiationStrategy -> public ServletPathExtensionContentNegotiationStrategy(ServletContext context);1464879764;Create an instance without any mappings to start with. Mappings may be_added later when extensions are resolved through_{@link ServletContext#getMimeType(String)} or via JAF.;public ServletPathExtensionContentNegotiationStrategy(ServletContext context) {_		this(context, null)__	};create,an,instance,without,any,mappings,to,start,with,mappings,may,be,added,later,when,extensions,are,resolved,through,link,servlet,context,get,mime,type,string,or,via,jaf;public,servlet,path,extension,content,negotiation,strategy,servlet,context,context,this,context,null
ServletPathExtensionContentNegotiationStrategy -> public ServletPathExtensionContentNegotiationStrategy(ServletContext context);1467053815;Create an instance without any mappings to start with. Mappings may be_added later when extensions are resolved through_{@link ServletContext#getMimeType(String)} or via JAF.;public ServletPathExtensionContentNegotiationStrategy(ServletContext context) {_		this(context, null)__	};create,an,instance,without,any,mappings,to,start,with,mappings,may,be,added,later,when,extensions,are,resolved,through,link,servlet,context,get,mime,type,string,or,via,jaf;public,servlet,path,extension,content,negotiation,strategy,servlet,context,context,this,context,null
ServletPathExtensionContentNegotiationStrategy -> public ServletPathExtensionContentNegotiationStrategy(ServletContext context);1490104706;Create an instance without any mappings to start with. Mappings may be_added later when extensions are resolved through_{@link ServletContext#getMimeType(String)} or via_{@link org.springframework.http.MediaTypeFactory}.;public ServletPathExtensionContentNegotiationStrategy(ServletContext context) {_		this(context, null)__	};create,an,instance,without,any,mappings,to,start,with,mappings,may,be,added,later,when,extensions,are,resolved,through,link,servlet,context,get,mime,type,string,or,via,link,org,springframework,http,media,type,factory;public,servlet,path,extension,content,negotiation,strategy,servlet,context,context,this,context,null
ServletPathExtensionContentNegotiationStrategy -> public ServletPathExtensionContentNegotiationStrategy(ServletContext context);1490285806;Create an instance without any mappings to start with. Mappings may be_added later when extensions are resolved through_{@link ServletContext#getMimeType(String)} or via_{@link org.springframework.http.MediaTypeFactory}.;public ServletPathExtensionContentNegotiationStrategy(ServletContext context) {_		this(context, null)__	};create,an,instance,without,any,mappings,to,start,with,mappings,may,be,added,later,when,extensions,are,resolved,through,link,servlet,context,get,mime,type,string,or,via,link,org,springframework,http,media,type,factory;public,servlet,path,extension,content,negotiation,strategy,servlet,context,context,this,context,null
ServletPathExtensionContentNegotiationStrategy -> public ServletPathExtensionContentNegotiationStrategy(ServletContext context);1495868221;Create an instance without any mappings to start with. Mappings may be_added later when extensions are resolved through_{@link ServletContext#getMimeType(String)} or via_{@link org.springframework.http.MediaTypeFactory}.;public ServletPathExtensionContentNegotiationStrategy(ServletContext context) {_		this(context, null)__	};create,an,instance,without,any,mappings,to,start,with,mappings,may,be,added,later,when,extensions,are,resolved,through,link,servlet,context,get,mime,type,string,or,via,link,org,springframework,http,media,type,factory;public,servlet,path,extension,content,negotiation,strategy,servlet,context,context,this,context,null
ServletPathExtensionContentNegotiationStrategy -> public ServletPathExtensionContentNegotiationStrategy(ServletContext context);1496837955;Create an instance without any mappings to start with. Mappings may be_added later when extensions are resolved through_{@link ServletContext#getMimeType(String)} or via_{@link org.springframework.http.MediaTypeFactory}.;public ServletPathExtensionContentNegotiationStrategy(ServletContext context) {_		this(context, null)__	};create,an,instance,without,any,mappings,to,start,with,mappings,may,be,added,later,when,extensions,are,resolved,through,link,servlet,context,get,mime,type,string,or,via,link,org,springframework,http,media,type,factory;public,servlet,path,extension,content,negotiation,strategy,servlet,context,context,this,context,null
ServletPathExtensionContentNegotiationStrategy -> public ServletPathExtensionContentNegotiationStrategy(ServletContext context);1498780456;Create an instance without any mappings to start with. Mappings may be_added later when extensions are resolved through_{@link ServletContext#getMimeType(String)} or via_{@link org.springframework.http.MediaTypeFactory}.;public ServletPathExtensionContentNegotiationStrategy(ServletContext context) {_		this(context, null)__	};create,an,instance,without,any,mappings,to,start,with,mappings,may,be,added,later,when,extensions,are,resolved,through,link,servlet,context,get,mime,type,string,or,via,link,org,springframework,http,media,type,factory;public,servlet,path,extension,content,negotiation,strategy,servlet,context,context,this,context,null
ServletPathExtensionContentNegotiationStrategy -> public ServletPathExtensionContentNegotiationStrategy(ServletContext context);1502974979;Create an instance without any mappings to start with. Mappings may be_added later when extensions are resolved through_{@link ServletContext#getMimeType(String)} or via_{@link org.springframework.http.MediaTypeFactory}.;public ServletPathExtensionContentNegotiationStrategy(ServletContext context) {_		this(context, null)__	};create,an,instance,without,any,mappings,to,start,with,mappings,may,be,added,later,when,extensions,are,resolved,through,link,servlet,context,get,mime,type,string,or,via,link,org,springframework,http,media,type,factory;public,servlet,path,extension,content,negotiation,strategy,servlet,context,context,this,context,null
ServletPathExtensionContentNegotiationStrategy -> public ServletPathExtensionContentNegotiationStrategy(ServletContext context);1506468851;Create an instance without any mappings to start with. Mappings may be_added later when extensions are resolved through_{@link ServletContext#getMimeType(String)} or via_{@link org.springframework.http.MediaTypeFactory}.;public ServletPathExtensionContentNegotiationStrategy(ServletContext context) {_		this(context, null)__	};create,an,instance,without,any,mappings,to,start,with,mappings,may,be,added,later,when,extensions,are,resolved,through,link,servlet,context,get,mime,type,string,or,via,link,org,springframework,http,media,type,factory;public,servlet,path,extension,content,negotiation,strategy,servlet,context,context,this,context,null
