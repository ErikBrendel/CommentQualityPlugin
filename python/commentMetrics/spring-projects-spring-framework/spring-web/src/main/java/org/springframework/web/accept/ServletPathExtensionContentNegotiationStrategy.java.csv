commented;modifiers;parameterAmount;loc;comment;code
true;protected;2;18;/**  * Resolve file extension via {@link ServletContext#getMimeType(String)}  * and also delegate to base class for a potential  * {@link org.springframework.http.MediaTypeFactory} lookup.  */ ;/**  * Resolve file extension via {@link ServletContext#getMimeType(String)}  * and also delegate to base class for a potential  * {@link org.springframework.http.MediaTypeFactory} lookup.  */ @Override @Nullable protected MediaType handleNoMatch(NativeWebRequest webRequest, String extension) throws HttpMediaTypeNotAcceptableException {     MediaType mediaType = null.     String mimeType = this.servletContext.getMimeType("file." + extension).     if (StringUtils.hasText(mimeType)) {         mediaType = MediaType.parseMediaType(mimeType).     }     if (mediaType == null || MediaType.APPLICATION_OCTET_STREAM.equals(mediaType)) {         MediaType superMediaType = super.handleNoMatch(webRequest, extension).         if (superMediaType != null) {             mediaType = superMediaType.         }     }     return mediaType. }
true;public;1;15;/**  * Extends the base class  * {@link PathExtensionContentNegotiationStrategy#getMediaTypeForResource}  * with the ability to also look up through the ServletContext.  * @param resource the resource to look up  * @return the MediaType for the extension, or {@code null} if none found  * @since 4.3  */ ;/**  * Extends the base class  * {@link PathExtensionContentNegotiationStrategy#getMediaTypeForResource}  * with the ability to also look up through the ServletContext.  * @param resource the resource to look up  * @return the MediaType for the extension, or {@code null} if none found  * @since 4.3  */ @Override public MediaType getMediaTypeForResource(Resource resource) {     MediaType mediaType = null.     String mimeType = this.servletContext.getMimeType(resource.getFilename()).     if (StringUtils.hasText(mimeType)) {         mediaType = MediaType.parseMediaType(mimeType).     }     if (mediaType == null || MediaType.APPLICATION_OCTET_STREAM.equals(mediaType)) {         MediaType superMediaType = super.getMediaTypeForResource(resource).         if (superMediaType != null) {             mediaType = superMediaType.         }     }     return mediaType. }
