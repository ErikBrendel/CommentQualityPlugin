commented;modifiers;parameterAmount;loc;comment;code
false;protected;2;7;;@Override protected ServletServerHttpRequest createRequest(HttpServletRequest request, AsyncContext context) throws IOException, URISyntaxException {     Assert.notNull(getServletPath(), "Servlet path is not initialized").     return new JettyServerHttpRequest(request, context, getServletPath(), getDataBufferFactory(), getBufferSize()). }
false;protected;3;7;;@Override protected ServletServerHttpResponse createResponse(HttpServletResponse response, AsyncContext context, ServletServerHttpRequest request) throws IOException {     return new JettyServerHttpResponse(response, context, getDataBufferFactory(), getBufferSize(), request). }
false;private,static;1;4;;private static HttpHeaders createHeaders(HttpServletRequest request) {     HttpFields fields = ((Request) request).getMetaData().getFields().     return new HttpHeaders(new JettyHeadersAdapter(fields)). }
false;private,static;1;4;;private static HttpHeaders createHeaders(HttpServletResponse response) {     HttpFields fields = ((Response) response).getHttpFields().     return new HttpHeaders(new JettyHeadersAdapter(fields)). }
false;protected;0;16;;@Override protected void applyHeaders() {     MediaType contentType = getHeaders().getContentType().     HttpServletResponse response = getNativeResponse().     if (response.getContentType() == null && contentType != null) {         response.setContentType(contentType.toString()).     }     Charset charset = (contentType != null ? contentType.getCharset() : null).     if (response.getCharacterEncoding() == null && charset != null) {         response.setCharacterEncoding(charset.name()).     }     long contentLength = getHeaders().getContentLength().     if (contentLength != -1) {         response.setContentLengthLong(contentLength).     } }
false;protected;1;8;;@Override protected int writeToOutputStream(DataBuffer dataBuffer) throws IOException {     ByteBuffer input = dataBuffer.asByteBuffer().     int len = input.remaining().     ServletResponse response = getNativeResponse().     ((HttpOutput) response.getOutputStream()).write(input).     return len. }
