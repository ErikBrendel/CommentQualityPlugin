commented;modifiers;parameterAmount;loc;comment;code
false;public;0;8;;@Before public void setUp() throws Exception {     this.resolverComposite = new HandlerMethodArgumentResolverComposite().     Method method = getClass().getDeclaredMethod("handle", Integer.class, String.class).     paramInt = new MethodParameter(method, 0).     paramStr = new MethodParameter(method, 1). }
false;public;0;7;;@Test public void supportsParameter() {     this.resolverComposite.addResolver(new StubArgumentResolver(Integer.class)).     assertTrue(this.resolverComposite.supportsParameter(paramInt)).     assertFalse(this.resolverComposite.supportsParameter(paramStr)). }
false;public;0;7;;@Test public void resolveArgument() throws Exception {     this.resolverComposite.addResolver(new StubArgumentResolver(55)).     Object resolvedValue = this.resolverComposite.resolveArgument(paramInt, null, null, null).     assertEquals(55, resolvedValue). }
false;public;0;8;;@Test public void checkArgumentResolverOrder() throws Exception {     this.resolverComposite.addResolver(new StubArgumentResolver(1)).     this.resolverComposite.addResolver(new StubArgumentResolver(2)).     Object resolvedValue = this.resolverComposite.resolveArgument(paramInt, null, null, null).     assertEquals("Didn't use the first registered resolver", 1, resolvedValue). }
false;public;0;4;;@Test(expected = IllegalArgumentException.class) public void noSuitableArgumentResolver() throws Exception {     this.resolverComposite.resolveArgument(paramStr, null, null, null). }
false;private;2;3;;@SuppressWarnings("unused") private void handle(Integer arg1, String arg2) { }
