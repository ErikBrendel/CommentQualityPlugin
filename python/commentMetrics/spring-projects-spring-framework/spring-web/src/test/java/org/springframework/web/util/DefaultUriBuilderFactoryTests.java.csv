commented;modifiers;parameterAmount;loc;comment;code
false;public;0;6;;@Test public void defaultSettings() {     DefaultUriBuilderFactory factory = new DefaultUriBuilderFactory().     URI uri = factory.uriString("/foo/{id}").build("a/b").     assertEquals("/foo/a%2Fb", uri.toString()). }
false;public;0;6;;// SPR-17465 @Test public void defaultSettingsWithBuilder() {     DefaultUriBuilderFactory factory = new DefaultUriBuilderFactory().     URI uri = factory.builder().path("/foo/{id}").build("a/b").     assertEquals("/foo/a%2Fb", uri.toString()). }
false;public;0;6;;@Test public void baseUri() {     DefaultUriBuilderFactory factory = new DefaultUriBuilderFactory("http://foo.com/v1?id=123").     URI uri = factory.uriString("/bar").port(8080).build().     assertEquals("http://foo.com:8080/v1/bar?id=123", uri.toString()). }
false;public;0;7;;@Test public void baseUriWithFullOverride() {     DefaultUriBuilderFactory factory = new DefaultUriBuilderFactory("http://foo.com/v1?id=123").     URI uri = factory.uriString("http://example.com/1/2").build().     assertEquals("Use of host should case baseUri to be completely ignored", "http://example.com/1/2", uri.toString()). }
false;public;0;6;;@Test public void baseUriWithPathOverride() {     DefaultUriBuilderFactory factory = new DefaultUriBuilderFactory("http://foo.com/v1").     URI uri = factory.builder().replacePath("/baz").build().     assertEquals("http://foo.com/baz", uri.toString()). }
false;public;0;7;;@Test public void defaultUriVars() {     DefaultUriBuilderFactory factory = new DefaultUriBuilderFactory("http://{host}/v1").     factory.setDefaultUriVariables(singletonMap("host", "foo.com")).     URI uri = factory.uriString("/{id}").build(singletonMap("id", "123")).     assertEquals("http://foo.com/v1/123", uri.toString()). }
false;public;0;7;;@Test public void defaultUriVarsWithOverride() {     DefaultUriBuilderFactory factory = new DefaultUriBuilderFactory("http://{host}/v1").     factory.setDefaultUriVariables(singletonMap("host", "spring.io")).     URI uri = factory.uriString("/bar").build(singletonMap("host", "docs.spring.io")).     assertEquals("http://docs.spring.io/v1/bar", uri.toString()). }
false;public;0;7;;@Test public void defaultUriVarsWithEmptyVarArg() {     DefaultUriBuilderFactory factory = new DefaultUriBuilderFactory("http://{host}/v1").     factory.setDefaultUriVariables(singletonMap("host", "foo.com")).     URI uri = factory.uriString("/bar").build().     assertEquals("Expected delegation to build(Map) method", "http://foo.com/v1/bar", uri.toString()). }
false;public;0;11;;@Test public void defaultUriVarsSpr14147() {     Map<String, String> defaultUriVars = new HashMap<>(2).     defaultUriVars.put("host", "api.example.com").     defaultUriVars.put("port", "443").     DefaultUriBuilderFactory factory = new DefaultUriBuilderFactory().     factory.setDefaultUriVariables(defaultUriVars).     URI uri = factory.expand("https://{host}:{port}/v42/customers/{id}", singletonMap("id", 123L)).     assertEquals("https://api.example.com:443/v42/customers/123", uri.toString()). }
false;public;0;15;;@Test public void encodeTemplateAndValues() {     DefaultUriBuilderFactory factory = new DefaultUriBuilderFactory().     factory.setEncodingMode(EncodingMode.TEMPLATE_AND_VALUES).     UriBuilder uriBuilder = factory.uriString("/hotel list/{city} specials?q={value}").     String expected = "/hotel%20list/Z%C3%BCrich%20specials?q=a%2Bb".     Map<String, Object> vars = new HashMap<>().     vars.put("city", "Z\u00fcrich").     vars.put("value", "a+b").     assertEquals(expected, uriBuilder.build("Z\u00fcrich", "a+b").toString()).     assertEquals(expected, uriBuilder.build(vars).toString()). }
false;public;0;12;;@Test public void encodingValuesOnly() {     DefaultUriBuilderFactory factory = new DefaultUriBuilderFactory().     factory.setEncodingMode(EncodingMode.VALUES_ONLY).     UriBuilder uriBuilder = factory.uriString("/foo/a%2Fb/{id}").     String id = "c/d".     String expected = "/foo/a%2Fb/c%2Fd".     assertEquals(expected, uriBuilder.build(id).toString()).     assertEquals(expected, uriBuilder.build(singletonMap("id", id)).toString()). }
false;public;0;10;;@Test public void encodingValuesOnlySpr14147() {     DefaultUriBuilderFactory factory = new DefaultUriBuilderFactory().     factory.setEncodingMode(EncodingMode.VALUES_ONLY).     factory.setDefaultUriVariables(singletonMap("host", "www.example.com")).     UriBuilder uriBuilder = factory.uriString("http://{host}/user/{userId}/dashboard").     assertEquals("http://www.example.com/user/john%3Bdoe/dashboard", uriBuilder.build(singletonMap("userId", "john.doe")).toString()). }
false;public;0;12;;@Test public void encodingNone() {     DefaultUriBuilderFactory factory = new DefaultUriBuilderFactory().     factory.setEncodingMode(EncodingMode.NONE).     UriBuilder uriBuilder = factory.uriString("/foo/a%2Fb/{id}").     String id = "c%2Fd".     String expected = "/foo/a%2Fb/c%2Fd".     assertEquals(expected, uriBuilder.build(id).toString()).     assertEquals(expected, uriBuilder.build(singletonMap("id", id)).toString()). }
false;public;0;6;;@Test public void parsePathWithDefaultSettings() {     DefaultUriBuilderFactory factory = new DefaultUriBuilderFactory("/foo/{bar}").     URI uri = factory.uriString("/baz/{id}").build("a/b", "c/d").     assertEquals("/foo/a%2Fb/baz/c%2Fd", uri.toString()). }
false;public;0;8;;@Test public void parsePathIsTurnedOff() {     DefaultUriBuilderFactory factory = new DefaultUriBuilderFactory("/foo/{bar}").     factory.setEncodingMode(EncodingMode.URI_COMPONENT).     factory.setParsePath(false).     URI uri = factory.uriString("/baz/{id}").build("a/b", "c/d").     assertEquals("/foo/a/b/baz/c/d", uri.toString()). }
false;public;0;6;;// SPR-15201 @Test public void pathWithTrailingSlash() {     DefaultUriBuilderFactory factory = new DefaultUriBuilderFactory().     URI uri = factory.expand("http://localhost:8080/spring/").     assertEquals("http://localhost:8080/spring/", uri.toString()). }
false;public;0;6;;@Test public void pathWithDuplicateSlashes() {     DefaultUriBuilderFactory factory = new DefaultUriBuilderFactory().     URI uri = factory.expand("/foo/////////bar").     assertEquals("/foo/bar", uri.toString()). }
