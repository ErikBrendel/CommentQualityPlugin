commented;modifiers;parameterAmount;loc;comment;code
false;public;0;10;;// SPR-16590 @Test public void parameterValues() {     this.multipartParams.put("key", new String[] { "p" }).     this.queryParams.add("key", "q").     String[] values = createMultipartRequest().getParameterValues("key").     assertArrayEquals(new String[] { "p", "q" }, values). }
false;public;0;16;;// SPR-16590 @Test public void parameterMap() {     this.multipartParams.put("key1", new String[] { "p1" }).     this.multipartParams.put("key2", new String[] { "p2" }).     this.queryParams.add("key1", "q1").     this.queryParams.add("key3", "q3").     Map<String, String[]> map = createMultipartRequest().getParameterMap().     assertEquals(3, map.size()).     assertArrayEquals(new String[] { "p1", "q1" }, map.get("key1")).     assertArrayEquals(new String[] { "p2" }, map.get("key2")).     assertArrayEquals(new String[] { "q3" }, map.get("key3")). }
false;private;0;5;;private DefaultMultipartHttpServletRequest createMultipartRequest() {     insertQueryParams().     return new DefaultMultipartHttpServletRequest(this.servletRequest, new LinkedMultiValueMap<>(), this.multipartParams, new HashMap<>()). }
false;private;0;10;;private void insertQueryParams() {     StringBuilder query = new StringBuilder().     for (String key : this.queryParams.keySet()) {         for (String value : this.queryParams.get(key)) {             this.servletRequest.addParameter(key, value).             query.append(query.length() > 0 ? "&" : "").append(key).append("=").append(value).         }     }     this.servletRequest.setQueryString(query.toString()). }
