commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Test public void canReadResource() {     assertTrue(converter.canRead(Resource.class, new MediaType("application", "octet-stream"))). }
false;public;0;5;;@Test public void canWriteResource() {     assertTrue(converter.canWrite(Resource.class, new MediaType("application", "octet-stream"))).     assertTrue(converter.canWrite(Resource.class, MediaType.ALL)). }
false;public;0;11;;@Test public void shouldReadImageResource() throws IOException {     byte[] body = FileCopyUtils.copyToByteArray(getClass().getResourceAsStream("logo.jpg")).     MockHttpInputMessage inputMessage = new MockHttpInputMessage(body).     inputMessage.getHeaders().setContentType(MediaType.IMAGE_JPEG).     inputMessage.getHeaders().setContentDisposition(ContentDisposition.builder("attachment").filename("yourlogo.jpg").build()).     Resource actualResource = converter.read(Resource.class, inputMessage).     assertThat(FileCopyUtils.copyToByteArray(actualResource.getInputStream()), is(body)).     assertEquals("yourlogo.jpg", actualResource.getFilename()). }
false;public;0;13;;// SPR-13443 @Test public void shouldReadInputStreamResource() throws IOException {     try (InputStream body = getClass().getResourceAsStream("logo.jpg")) {         MockHttpInputMessage inputMessage = new MockHttpInputMessage(body).         inputMessage.getHeaders().setContentType(MediaType.IMAGE_JPEG).         inputMessage.getHeaders().setContentDisposition(ContentDisposition.builder("attachment").filename("yourlogo.jpg").build()).         Resource actualResource = converter.read(InputStreamResource.class, inputMessage).         assertThat(actualResource, instanceOf(InputStreamResource.class)).         assertThat(actualResource.getInputStream(), is(body)).         assertEquals("yourlogo.jpg", actualResource.getFilename()).     } }
false;public;0;10;;// SPR-14882 @Test public void shouldNotReadInputStreamResource() throws IOException {     ResourceHttpMessageConverter noStreamConverter = new ResourceHttpMessageConverter(false).     try (InputStream body = getClass().getResourceAsStream("logo.jpg")) {         this.thrown.expect(HttpMessageNotReadableException.class).         MockHttpInputMessage inputMessage = new MockHttpInputMessage(body).         inputMessage.getHeaders().setContentType(MediaType.IMAGE_JPEG).         noStreamConverter.read(InputStreamResource.class, inputMessage).     } }
false;public;0;10;;@Test public void shouldWriteImageResource() throws IOException {     MockHttpOutputMessage outputMessage = new MockHttpOutputMessage().     Resource body = new ClassPathResource("logo.jpg", getClass()).     converter.write(body, null, outputMessage).     assertEquals("Invalid content-type", MediaType.IMAGE_JPEG, outputMessage.getHeaders().getContentType()).     assertEquals("Invalid content-length", body.getFile().length(), outputMessage.getHeaders().getContentLength()). }
false;public;0;9;;// SPR-10848 @Test public void writeByteArrayNullMediaType() throws IOException {     MockHttpOutputMessage outputMessage = new MockHttpOutputMessage().     byte[] byteArray = { 1, 2, 3 }.     Resource body = new ByteArrayResource(byteArray).     converter.write(body, null, outputMessage).     assertTrue(Arrays.equals(byteArray, outputMessage.getBodyAsBytes())). }
false;public;0;10;;// SPR-12999 @Test @SuppressWarnings("unchecked") public void writeContentNotGettingInputStream() throws Exception {     MockHttpOutputMessage outputMessage = new MockHttpOutputMessage().     Resource resource = mock(Resource.class).     given(resource.getInputStream()).willThrow(FileNotFoundException.class).     converter.write(resource, MediaType.APPLICATION_OCTET_STREAM, outputMessage).     assertEquals(0, outputMessage.getHeaders().getContentLength()). }
false;public;0;12;;// SPR-12999 @Test public void writeContentNotClosingInputStream() throws Exception {     MockHttpOutputMessage outputMessage = new MockHttpOutputMessage().     Resource resource = mock(Resource.class).     InputStream inputStream = mock(InputStream.class).     given(resource.getInputStream()).willReturn(inputStream).     given(inputStream.read(any())).willReturn(-1).     doThrow(new NullPointerException()).when(inputStream).close().     converter.write(resource, MediaType.APPLICATION_OCTET_STREAM, outputMessage).     assertEquals(0, outputMessage.getHeaders().getContentLength()). }
false;public;0;12;;// SPR-13620 @Test @SuppressWarnings("unchecked") public void writeContentInputStreamThrowingNullPointerException() throws Exception {     MockHttpOutputMessage outputMessage = new MockHttpOutputMessage().     Resource resource = mock(Resource.class).     InputStream in = mock(InputStream.class).     given(resource.getInputStream()).willReturn(in).     given(in.read(any())).willThrow(NullPointerException.class).     converter.write(resource, MediaType.APPLICATION_OCTET_STREAM, outputMessage).     assertEquals(0, outputMessage.getHeaders().getContentLength()). }
