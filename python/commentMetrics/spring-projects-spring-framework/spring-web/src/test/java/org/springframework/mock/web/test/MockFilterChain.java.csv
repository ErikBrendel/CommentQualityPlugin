# id;timestamp;commentText;codeText;commentWords;codeWords
MockFilterChain -> public void reset();1354292158;Reset the {@link MockFilterChain} allowing it to be invoked again.;public void reset() {_		this.request = null__		this.response = null__		this.iterator = null__	};reset,the,link,mock,filter,chain,allowing,it,to,be,invoked,again;public,void,reset,this,request,null,this,response,null,this,iterator,null
MockFilterChain -> public void reset();1356735495;Reset the {@link MockFilterChain} allowing it to be invoked again.;public void reset() {_		this.request = null__		this.response = null__		this.iterator = null__	};reset,the,link,mock,filter,chain,allowing,it,to,be,invoked,again;public,void,reset,this,request,null,this,response,null,this,iterator,null
MockFilterChain -> public void reset();1413848647;Reset the {@link MockFilterChain} allowing it to be invoked again.;public void reset() {_		this.request = null__		this.response = null__		this.iterator = null__	};reset,the,link,mock,filter,chain,allowing,it,to,be,invoked,again;public,void,reset,this,request,null,this,response,null,this,iterator,null
MockFilterChain -> public void reset();1486994819;Reset the {@link MockFilterChain} allowing it to be invoked again.;public void reset() {_		this.request = null__		this.response = null__		this.iterator = null__	};reset,the,link,mock,filter,chain,allowing,it,to,be,invoked,again;public,void,reset,this,request,null,this,response,null,this,iterator,null
MockFilterChain -> public void reset();1509895410;Reset the {@link MockFilterChain} allowing it to be invoked again.;public void reset() {_		this.request = null__		this.response = null__		this.iterator = null__	};reset,the,link,mock,filter,chain,allowing,it,to,be,invoked,again;public,void,reset,this,request,null,this,response,null,this,iterator,null
MockFilterChain -> public void reset();1537706655;Reset the {@link MockFilterChain} allowing it to be invoked again.;public void reset() {_		this.request = null__		this.response = null__		this.iterator = null__	};reset,the,link,mock,filter,chain,allowing,it,to,be,invoked,again;public,void,reset,this,request,null,this,response,null,this,iterator,null
MockFilterChain -> @Override 	public void doFilter(ServletRequest request, ServletResponse response) throws IOException, ServletException;1356735495;Invoke registered {@link Filter}s and/or {@link Servlet} also saving the_request and response.;@Override_	public void doFilter(ServletRequest request, ServletResponse response) throws IOException, ServletException {_		Assert.notNull(request, "Request must not be null")__		Assert.notNull(response, "Response must not be null")___		if (this.request != null) {_			 throw new IllegalStateException("This FilterChain has already been called!")__		}__		if (this.iterator == null) {_			this.iterator = this.filters.iterator()__		}__		if (this.iterator.hasNext()) {_			Filter nextFilter = this.iterator.next()__			nextFilter.doFilter(request, response, this)__		}__		this.request = request__		this.response = response__	};invoke,registered,link,filter,s,and,or,link,servlet,also,saving,the,request,and,response;override,public,void,do,filter,servlet,request,request,servlet,response,response,throws,ioexception,servlet,exception,assert,not,null,request,request,must,not,be,null,assert,not,null,response,response,must,not,be,null,if,this,request,null,throw,new,illegal,state,exception,this,filter,chain,has,already,been,called,if,this,iterator,null,this,iterator,this,filters,iterator,if,this,iterator,has,next,filter,next,filter,this,iterator,next,next,filter,do,filter,request,response,this,this,request,request,this,response,response
MockFilterChain -> @Override 	public void doFilter(ServletRequest request, ServletResponse response) throws IOException, ServletException;1413848647;Invoke registered {@link Filter}s and/or {@link Servlet} also saving the_request and response.;@Override_	public void doFilter(ServletRequest request, ServletResponse response) throws IOException, ServletException {_		Assert.notNull(request, "Request must not be null")__		Assert.notNull(response, "Response must not be null")___		if (this.request != null) {_			 throw new IllegalStateException("This FilterChain has already been called!")__		}__		if (this.iterator == null) {_			this.iterator = this.filters.iterator()__		}__		if (this.iterator.hasNext()) {_			Filter nextFilter = this.iterator.next()__			nextFilter.doFilter(request, response, this)__		}__		this.request = request__		this.response = response__	};invoke,registered,link,filter,s,and,or,link,servlet,also,saving,the,request,and,response;override,public,void,do,filter,servlet,request,request,servlet,response,response,throws,ioexception,servlet,exception,assert,not,null,request,request,must,not,be,null,assert,not,null,response,response,must,not,be,null,if,this,request,null,throw,new,illegal,state,exception,this,filter,chain,has,already,been,called,if,this,iterator,null,this,iterator,this,filters,iterator,if,this,iterator,has,next,filter,next,filter,this,iterator,next,next,filter,do,filter,request,response,this,this,request,request,this,response,response
MockFilterChain -> @Override 	public void doFilter(ServletRequest request, ServletResponse response) throws IOException, ServletException;1486994819;Invoke registered {@link Filter}s and/or {@link Servlet} also saving the_request and response.;@Override_	public void doFilter(ServletRequest request, ServletResponse response) throws IOException, ServletException {_		Assert.notNull(request, "Request must not be null")__		Assert.notNull(response, "Response must not be null")__		Assert.state(this.request == null, "This FilterChain has already been called!")___		if (this.iterator == null) {_			this.iterator = this.filters.iterator()__		}__		if (this.iterator.hasNext()) {_			Filter nextFilter = this.iterator.next()__			nextFilter.doFilter(request, response, this)__		}__		this.request = request__		this.response = response__	};invoke,registered,link,filter,s,and,or,link,servlet,also,saving,the,request,and,response;override,public,void,do,filter,servlet,request,request,servlet,response,response,throws,ioexception,servlet,exception,assert,not,null,request,request,must,not,be,null,assert,not,null,response,response,must,not,be,null,assert,state,this,request,null,this,filter,chain,has,already,been,called,if,this,iterator,null,this,iterator,this,filters,iterator,if,this,iterator,has,next,filter,next,filter,this,iterator,next,next,filter,do,filter,request,response,this,this,request,request,this,response,response
MockFilterChain -> @Override 	public void doFilter(ServletRequest request, ServletResponse response) throws IOException, ServletException;1509895410;Invoke registered {@link Filter}s and/or {@link Servlet} also saving the_request and response.;@Override_	public void doFilter(ServletRequest request, ServletResponse response) throws IOException, ServletException {_		Assert.notNull(request, "Request must not be null")__		Assert.notNull(response, "Response must not be null")__		Assert.state(this.request == null, "This FilterChain has already been called!")___		if (this.iterator == null) {_			this.iterator = this.filters.iterator()__		}__		if (this.iterator.hasNext()) {_			Filter nextFilter = this.iterator.next()__			nextFilter.doFilter(request, response, this)__		}__		this.request = request__		this.response = response__	};invoke,registered,link,filter,s,and,or,link,servlet,also,saving,the,request,and,response;override,public,void,do,filter,servlet,request,request,servlet,response,response,throws,ioexception,servlet,exception,assert,not,null,request,request,must,not,be,null,assert,not,null,response,response,must,not,be,null,assert,state,this,request,null,this,filter,chain,has,already,been,called,if,this,iterator,null,this,iterator,this,filters,iterator,if,this,iterator,has,next,filter,next,filter,this,iterator,next,next,filter,do,filter,request,response,this,this,request,request,this,response,response
MockFilterChain -> @Override 	public void doFilter(ServletRequest request, ServletResponse response) throws IOException, ServletException;1537706655;Invoke registered {@link Filter Filters} and/or {@link Servlet} also saving the_request and response.;@Override_	public void doFilter(ServletRequest request, ServletResponse response) throws IOException, ServletException {_		Assert.notNull(request, "Request must not be null")__		Assert.notNull(response, "Response must not be null")__		Assert.state(this.request == null, "This FilterChain has already been called!")___		if (this.iterator == null) {_			this.iterator = this.filters.iterator()__		}__		if (this.iterator.hasNext()) {_			Filter nextFilter = this.iterator.next()__			nextFilter.doFilter(request, response, this)__		}__		this.request = request__		this.response = response__	};invoke,registered,link,filter,filters,and,or,link,servlet,also,saving,the,request,and,response;override,public,void,do,filter,servlet,request,request,servlet,response,response,throws,ioexception,servlet,exception,assert,not,null,request,request,must,not,be,null,assert,not,null,response,response,must,not,be,null,assert,state,this,request,null,this,filter,chain,has,already,been,called,if,this,iterator,null,this,iterator,this,filters,iterator,if,this,iterator,has,next,filter,next,filter,this,iterator,next,next,filter,do,filter,request,response,this,this,request,request,this,response,response
MockFilterChain -> public MockFilterChain();1354292158;Register a single do-nothing {@link Filter} implementation. The first_invocation saves the request and response. Subsequent invocations raise_an {@link IllegalStateException} unless {@link #reset()} is called.;public MockFilterChain() {_		this.filters = Collections.emptyList()__	};register,a,single,do,nothing,link,filter,implementation,the,first,invocation,saves,the,request,and,response,subsequent,invocations,raise,an,link,illegal,state,exception,unless,link,reset,is,called;public,mock,filter,chain,this,filters,collections,empty,list
MockFilterChain -> public MockFilterChain();1356735495;Register a single do-nothing {@link Filter} implementation. The first_invocation saves the request and response. Subsequent invocations raise_an {@link IllegalStateException} unless {@link #reset()} is called.;public MockFilterChain() {_		this.filters = Collections.emptyList()__	};register,a,single,do,nothing,link,filter,implementation,the,first,invocation,saves,the,request,and,response,subsequent,invocations,raise,an,link,illegal,state,exception,unless,link,reset,is,called;public,mock,filter,chain,this,filters,collections,empty,list
MockFilterChain -> public MockFilterChain();1413848647;Register a single do-nothing {@link Filter} implementation. The first_invocation saves the request and response. Subsequent invocations raise_an {@link IllegalStateException} unless {@link #reset()} is called.;public MockFilterChain() {_		this.filters = Collections.emptyList()__	};register,a,single,do,nothing,link,filter,implementation,the,first,invocation,saves,the,request,and,response,subsequent,invocations,raise,an,link,illegal,state,exception,unless,link,reset,is,called;public,mock,filter,chain,this,filters,collections,empty,list
MockFilterChain -> public MockFilterChain();1486994819;Register a single do-nothing {@link Filter} implementation. The first_invocation saves the request and response. Subsequent invocations raise_an {@link IllegalStateException} unless {@link #reset()} is called.;public MockFilterChain() {_		this.filters = Collections.emptyList()__	};register,a,single,do,nothing,link,filter,implementation,the,first,invocation,saves,the,request,and,response,subsequent,invocations,raise,an,link,illegal,state,exception,unless,link,reset,is,called;public,mock,filter,chain,this,filters,collections,empty,list
MockFilterChain -> public MockFilterChain();1509895410;Register a single do-nothing {@link Filter} implementation. The first_invocation saves the request and response. Subsequent invocations raise_an {@link IllegalStateException} unless {@link #reset()} is called.;public MockFilterChain() {_		this.filters = Collections.emptyList()__	};register,a,single,do,nothing,link,filter,implementation,the,first,invocation,saves,the,request,and,response,subsequent,invocations,raise,an,link,illegal,state,exception,unless,link,reset,is,called;public,mock,filter,chain,this,filters,collections,empty,list
MockFilterChain -> public MockFilterChain();1537706655;Register a single do-nothing {@link Filter} implementation. The first_invocation saves the request and response. Subsequent invocations raise_an {@link IllegalStateException} unless {@link #reset()} is called.;public MockFilterChain() {_		this.filters = Collections.emptyList()__	};register,a,single,do,nothing,link,filter,implementation,the,first,invocation,saves,the,request,and,response,subsequent,invocations,raise,an,link,illegal,state,exception,unless,link,reset,is,called;public,mock,filter,chain,this,filters,collections,empty,list
MockFilterChain -> public MockFilterChain(Servlet servlet);1354292158;Create a FilterChain with a Servlet.__@param servlet the Servlet to invoke_@since 3.2;public MockFilterChain(Servlet servlet) {_		this.filters = initFilterList(servlet)__	};create,a,filter,chain,with,a,servlet,param,servlet,the,servlet,to,invoke,since,3,2;public,mock,filter,chain,servlet,servlet,this,filters,init,filter,list,servlet
MockFilterChain -> public MockFilterChain(Servlet servlet);1356735495;Create a FilterChain with a Servlet.__@param servlet the Servlet to invoke_@since 3.2;public MockFilterChain(Servlet servlet) {_		this.filters = initFilterList(servlet)__	};create,a,filter,chain,with,a,servlet,param,servlet,the,servlet,to,invoke,since,3,2;public,mock,filter,chain,servlet,servlet,this,filters,init,filter,list,servlet
MockFilterChain -> public MockFilterChain(Servlet servlet);1413848647;Create a FilterChain with a Servlet.__@param servlet the Servlet to invoke_@since 3.2;public MockFilterChain(Servlet servlet) {_		this.filters = initFilterList(servlet)__	};create,a,filter,chain,with,a,servlet,param,servlet,the,servlet,to,invoke,since,3,2;public,mock,filter,chain,servlet,servlet,this,filters,init,filter,list,servlet
MockFilterChain -> public MockFilterChain(Servlet servlet);1486994819;Create a FilterChain with a Servlet.__@param servlet the Servlet to invoke_@since 3.2;public MockFilterChain(Servlet servlet) {_		this.filters = initFilterList(servlet)__	};create,a,filter,chain,with,a,servlet,param,servlet,the,servlet,to,invoke,since,3,2;public,mock,filter,chain,servlet,servlet,this,filters,init,filter,list,servlet
MockFilterChain -> public MockFilterChain(Servlet servlet);1509895410;Create a FilterChain with a Servlet._@param servlet the Servlet to invoke_@since 3.2;public MockFilterChain(Servlet servlet) {_		this.filters = initFilterList(servlet)__	};create,a,filter,chain,with,a,servlet,param,servlet,the,servlet,to,invoke,since,3,2;public,mock,filter,chain,servlet,servlet,this,filters,init,filter,list,servlet
MockFilterChain -> public MockFilterChain(Servlet servlet);1537706655;Create a FilterChain with a Servlet._@param servlet the Servlet to invoke_@since 3.2;public MockFilterChain(Servlet servlet) {_		this.filters = initFilterList(servlet)__	};create,a,filter,chain,with,a,servlet,param,servlet,the,servlet,to,invoke,since,3,2;public,mock,filter,chain,servlet,servlet,this,filters,init,filter,list,servlet
MockFilterChain -> public MockFilterChain(Servlet servlet, Filter... filters);1354292158;Create a {@code FilterChain} with Filter's and a Servlet.__@param servlet the {@link Servlet} to invoke in this {@link FilterChain}_@param filters the {@link Filter}'s to invoke in this {@link FilterChain}_@since 3.2;public MockFilterChain(Servlet servlet, Filter... filters) {_		Assert.notNull(filters, "filters cannot be null")__		Assert.noNullElements(filters, "filters cannot contain null values")__		this.filters = initFilterList(servlet, filters)__	};create,a,code,filter,chain,with,filter,s,and,a,servlet,param,servlet,the,link,servlet,to,invoke,in,this,link,filter,chain,param,filters,the,link,filter,s,to,invoke,in,this,link,filter,chain,since,3,2;public,mock,filter,chain,servlet,servlet,filter,filters,assert,not,null,filters,filters,cannot,be,null,assert,no,null,elements,filters,filters,cannot,contain,null,values,this,filters,init,filter,list,servlet,filters
MockFilterChain -> public MockFilterChain(Servlet servlet, Filter... filters);1356735495;Create a {@code FilterChain} with Filter's and a Servlet.__@param servlet the {@link Servlet} to invoke in this {@link FilterChain}_@param filters the {@link Filter}'s to invoke in this {@link FilterChain}_@since 3.2;public MockFilterChain(Servlet servlet, Filter... filters) {_		Assert.notNull(filters, "filters cannot be null")__		Assert.noNullElements(filters, "filters cannot contain null values")__		this.filters = initFilterList(servlet, filters)__	};create,a,code,filter,chain,with,filter,s,and,a,servlet,param,servlet,the,link,servlet,to,invoke,in,this,link,filter,chain,param,filters,the,link,filter,s,to,invoke,in,this,link,filter,chain,since,3,2;public,mock,filter,chain,servlet,servlet,filter,filters,assert,not,null,filters,filters,cannot,be,null,assert,no,null,elements,filters,filters,cannot,contain,null,values,this,filters,init,filter,list,servlet,filters
MockFilterChain -> public MockFilterChain(Servlet servlet, Filter... filters);1413848647;Create a {@code FilterChain} with Filter's and a Servlet.__@param servlet the {@link Servlet} to invoke in this {@link FilterChain}_@param filters the {@link Filter}'s to invoke in this {@link FilterChain}_@since 3.2;public MockFilterChain(Servlet servlet, Filter... filters) {_		Assert.notNull(filters, "filters cannot be null")__		Assert.noNullElements(filters, "filters cannot contain null values")__		this.filters = initFilterList(servlet, filters)__	};create,a,code,filter,chain,with,filter,s,and,a,servlet,param,servlet,the,link,servlet,to,invoke,in,this,link,filter,chain,param,filters,the,link,filter,s,to,invoke,in,this,link,filter,chain,since,3,2;public,mock,filter,chain,servlet,servlet,filter,filters,assert,not,null,filters,filters,cannot,be,null,assert,no,null,elements,filters,filters,cannot,contain,null,values,this,filters,init,filter,list,servlet,filters
MockFilterChain -> public MockFilterChain(Servlet servlet, Filter... filters);1486994819;Create a {@code FilterChain} with Filter's and a Servlet.__@param servlet the {@link Servlet} to invoke in this {@link FilterChain}_@param filters the {@link Filter}'s to invoke in this {@link FilterChain}_@since 3.2;public MockFilterChain(Servlet servlet, Filter... filters) {_		Assert.notNull(filters, "filters cannot be null")__		Assert.noNullElements(filters, "filters cannot contain null values")__		this.filters = initFilterList(servlet, filters)__	};create,a,code,filter,chain,with,filter,s,and,a,servlet,param,servlet,the,link,servlet,to,invoke,in,this,link,filter,chain,param,filters,the,link,filter,s,to,invoke,in,this,link,filter,chain,since,3,2;public,mock,filter,chain,servlet,servlet,filter,filters,assert,not,null,filters,filters,cannot,be,null,assert,no,null,elements,filters,filters,cannot,contain,null,values,this,filters,init,filter,list,servlet,filters
MockFilterChain -> public MockFilterChain(Servlet servlet, Filter... filters);1509895410;Create a {@code FilterChain} with Filter's and a Servlet._@param servlet the {@link Servlet} to invoke in this {@link FilterChain}_@param filters the {@link Filter}'s to invoke in this {@link FilterChain}_@since 3.2;public MockFilterChain(Servlet servlet, Filter... filters) {_		Assert.notNull(filters, "filters cannot be null")__		Assert.noNullElements(filters, "filters cannot contain null values")__		this.filters = initFilterList(servlet, filters)__	};create,a,code,filter,chain,with,filter,s,and,a,servlet,param,servlet,the,link,servlet,to,invoke,in,this,link,filter,chain,param,filters,the,link,filter,s,to,invoke,in,this,link,filter,chain,since,3,2;public,mock,filter,chain,servlet,servlet,filter,filters,assert,not,null,filters,filters,cannot,be,null,assert,no,null,elements,filters,filters,cannot,contain,null,values,this,filters,init,filter,list,servlet,filters
MockFilterChain -> public MockFilterChain(Servlet servlet, Filter... filters);1537706655;Create a {@code FilterChain} with Filter's and a Servlet._@param servlet the {@link Servlet} to invoke in this {@link FilterChain}_@param filters the {@link Filter}'s to invoke in this {@link FilterChain}_@since 3.2;public MockFilterChain(Servlet servlet, Filter... filters) {_		Assert.notNull(filters, "filters cannot be null")__		Assert.noNullElements(filters, "filters cannot contain null values")__		this.filters = initFilterList(servlet, filters)__	};create,a,code,filter,chain,with,filter,s,and,a,servlet,param,servlet,the,link,servlet,to,invoke,in,this,link,filter,chain,param,filters,the,link,filter,s,to,invoke,in,this,link,filter,chain,since,3,2;public,mock,filter,chain,servlet,servlet,filter,filters,assert,not,null,filters,filters,cannot,be,null,assert,no,null,elements,filters,filters,cannot,contain,null,values,this,filters,init,filter,list,servlet,filters
MockFilterChain -> public ServletResponse getResponse();1354292158;Return the response that {@link #doFilter} has been called with.;public ServletResponse getResponse() {_		return this.response__	};return,the,response,that,link,do,filter,has,been,called,with;public,servlet,response,get,response,return,this,response
MockFilterChain -> public ServletResponse getResponse();1356735495;Return the response that {@link #doFilter} has been called with.;public ServletResponse getResponse() {_		return this.response__	};return,the,response,that,link,do,filter,has,been,called,with;public,servlet,response,get,response,return,this,response
MockFilterChain -> public ServletResponse getResponse();1413848647;Return the response that {@link #doFilter} has been called with.;public ServletResponse getResponse() {_		return this.response__	};return,the,response,that,link,do,filter,has,been,called,with;public,servlet,response,get,response,return,this,response
MockFilterChain -> public ServletResponse getResponse();1486994819;Return the response that {@link #doFilter} has been called with.;public ServletResponse getResponse() {_		return this.response__	};return,the,response,that,link,do,filter,has,been,called,with;public,servlet,response,get,response,return,this,response
MockFilterChain -> public ServletResponse getResponse();1509895410;Return the response that {@link #doFilter} has been called with.;public ServletResponse getResponse() {_		return this.response__	};return,the,response,that,link,do,filter,has,been,called,with;public,servlet,response,get,response,return,this,response
MockFilterChain -> public ServletRequest getRequest();1354292158;Return the request that {@link #doFilter} has been called with.;public ServletRequest getRequest() {_		return this.request__	};return,the,request,that,link,do,filter,has,been,called,with;public,servlet,request,get,request,return,this,request
MockFilterChain -> public ServletRequest getRequest();1356735495;Return the request that {@link #doFilter} has been called with.;public ServletRequest getRequest() {_		return this.request__	};return,the,request,that,link,do,filter,has,been,called,with;public,servlet,request,get,request,return,this,request
MockFilterChain -> public ServletRequest getRequest();1413848647;Return the request that {@link #doFilter} has been called with.;public ServletRequest getRequest() {_		return this.request__	};return,the,request,that,link,do,filter,has,been,called,with;public,servlet,request,get,request,return,this,request
MockFilterChain -> public ServletRequest getRequest();1486994819;Return the request that {@link #doFilter} has been called with.;public ServletRequest getRequest() {_		return this.request__	};return,the,request,that,link,do,filter,has,been,called,with;public,servlet,request,get,request,return,this,request
MockFilterChain -> public ServletRequest getRequest();1509895410;Return the request that {@link #doFilter} has been called with.;public ServletRequest getRequest() {_		return this.request__	};return,the,request,that,link,do,filter,has,been,called,with;public,servlet,request,get,request,return,this,request
