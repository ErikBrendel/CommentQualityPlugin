commented;modifiers;parameterAmount;loc;comment;code
false;public;0;20;;@Test public void testCompositeFilter() throws ServletException, IOException {     ServletContext sc = new MockServletContext().     MockFilter targetFilter = new MockFilter().     MockFilterConfig proxyConfig = new MockFilterConfig(sc).     CompositeFilter filterProxy = new CompositeFilter().     filterProxy.setFilters(Arrays.asList(targetFilter)).     filterProxy.init(proxyConfig).     MockHttpServletRequest request = new MockHttpServletRequest().     MockHttpServletResponse response = new MockHttpServletResponse().     filterProxy.doFilter(request, response, null).     assertNotNull(targetFilter.filterConfig).     assertEquals(Boolean.TRUE, request.getAttribute("called")).     filterProxy.destroy().     assertNull(targetFilter.filterConfig). }
false;public;1;4;;@Override public void init(FilterConfig filterConfig) throws ServletException {     this.filterConfig = filterConfig. }
false;public;3;4;;@Override public void doFilter(ServletRequest request, ServletResponse response, FilterChain filterChain) {     request.setAttribute("called", Boolean.TRUE). }
false;public;0;4;;@Override public void destroy() {     this.filterConfig = null. }
