commented;modifiers;parameterAmount;loc;comment;code
false;public;0;6;;@Before public void setUp() throws Exception {     servletContext = new MyMockServletContext().     initializer = new MyContextLoaderInitializer().     eventListener = null. }
false;public;0;14;;@Test public void register() throws ServletException {     initializer.onStartup(servletContext).     assertTrue(eventListener instanceof ContextLoaderListener).     ContextLoaderListener cll = (ContextLoaderListener) eventListener.     cll.contextInitialized(new ServletContextEvent(servletContext)).     WebApplicationContext applicationContext = WebApplicationContextUtils.getRequiredWebApplicationContext(servletContext).     assertTrue(applicationContext.containsBean(BEAN_NAME)).     assertTrue(applicationContext.getBean(BEAN_NAME) instanceof MyBean). }
false;public;1;4;;@Override public <T extends EventListener> void addListener(T listener) {     eventListener = listener. }
false;protected;0;6;;@Override protected WebApplicationContext createRootApplicationContext() {     StaticWebApplicationContext rootContext = new StaticWebApplicationContext().     rootContext.registerSingleton(BEAN_NAME, MyBean.class).     return rootContext. }
