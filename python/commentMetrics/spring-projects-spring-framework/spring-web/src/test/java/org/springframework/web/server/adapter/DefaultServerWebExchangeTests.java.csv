commented;modifiers;parameterAmount;loc;comment;code
false;public;0;5;;@Test public void transformUrlDefault() {     ServerWebExchange exchange = createExchange().     assertEquals("/foo", exchange.transformUrl("/foo")). }
false;public;0;6;;@Test public void transformUrlWithEncoder() {     ServerWebExchange exchange = createExchange().     exchange.addUrlTransformer(s -> s + "?nonce=123").     assertEquals("/foo?nonce=123", exchange.transformUrl("/foo")). }
false;public;0;7;;@Test public void transformUrlWithMultipleEncoders() {     ServerWebExchange exchange = createExchange().     exchange.addUrlTransformer(s -> s + ".p=abc").     exchange.addUrlTransformer(s -> s + "?q=123").     assertEquals("/foo.p=abc?q=123", exchange.transformUrl("/foo")). }
false;private;0;4;;private DefaultServerWebExchange createExchange() {     MockServerHttpRequest request = MockServerHttpRequest.get("http://example.com").build().     return createExchange(request). }
false;private;1;5;;private DefaultServerWebExchange createExchange(MockServerHttpRequest request) {     return new DefaultServerWebExchange(request, new MockServerHttpResponse(), new DefaultWebSessionManager(), ServerCodecConfigurer.create(), new AcceptHeaderLocaleContextResolver()). }
