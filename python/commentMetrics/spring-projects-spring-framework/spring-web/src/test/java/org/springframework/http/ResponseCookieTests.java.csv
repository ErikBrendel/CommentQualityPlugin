commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Test public void defaultValues() {     assertEquals("id=1fWa", ResponseCookie.from("id", "1fWa").build().toString()). }
false;public;0;6;;@Test public void httpOnlyStrictSecureWithDomainAndPath() {     assertEquals("id=1fWa. Path=/projects. Domain=spring.io. Secure. HttpOnly. SameSite=strict", ResponseCookie.from("id", "1fWa").domain("spring.io").path("/projects").httpOnly(true).secure(true).sameSite("strict").build().toString()). }
false;public;0;15;;@Test public void maxAge() {     Duration maxAge = Duration.ofDays(365).     String expires = HttpHeaders.formatDate(System.currentTimeMillis() + maxAge.toMillis()).     expires = expires.substring(0, expires.indexOf(":") + 1).     assertThat(ResponseCookie.from("id", "1fWa").maxAge(maxAge).build().toString(), allOf(startsWith("id=1fWa. Max-Age=31536000. Expires=" + expires), endsWith(" GMT"))).     assertThat(ResponseCookie.from("id", "1fWa").maxAge(maxAge.getSeconds()).build().toString(), allOf(startsWith("id=1fWa. Max-Age=31536000. Expires=" + expires), endsWith(" GMT"))). }
false;public;0;8;;@Test public void maxAge0() {     assertEquals("id=1fWa. Max-Age=0. Expires=Thu, 1 Jan 1970 00:00:00 GMT", ResponseCookie.from("id", "1fWa").maxAge(Duration.ofSeconds(0)).build().toString()).     assertEquals("id=1fWa. Max-Age=0. Expires=Thu, 1 Jan 1970 00:00:00 GMT", ResponseCookie.from("id", "1fWa").maxAge(0).build().toString()). }
