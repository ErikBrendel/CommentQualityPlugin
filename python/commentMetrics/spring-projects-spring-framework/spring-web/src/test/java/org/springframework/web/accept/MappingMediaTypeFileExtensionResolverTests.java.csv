commented;modifiers;parameterAmount;loc;comment;code
false;public;0;9;;@Test public void resolveExtensions() {     Map<String, MediaType> mapping = Collections.singletonMap("json", MediaType.APPLICATION_JSON).     MappingMediaTypeFileExtensionResolver resolver = new MappingMediaTypeFileExtensionResolver(mapping).     List<String> extensions = resolver.resolveFileExtensions(MediaType.APPLICATION_JSON).     assertEquals(1, extensions.size()).     assertEquals("json", extensions.get(0)). }
false;public;0;8;;@Test public void resolveExtensionsNoMatch() {     Map<String, MediaType> mapping = Collections.singletonMap("json", MediaType.APPLICATION_JSON).     MappingMediaTypeFileExtensionResolver resolver = new MappingMediaTypeFileExtensionResolver(mapping).     List<String> extensions = resolver.resolveFileExtensions(MediaType.TEXT_HTML).     assertTrue(extensions.isEmpty()). }
true;public;0;8;/**  * Unit test for SPR-13747 - ensures that reverse lookup of media type from media  * type key is case-insensitive.  */ ;/**  * Unit test for SPR-13747 - ensures that reverse lookup of media type from media  * type key is case-insensitive.  */ @Test public void lookupMediaTypeCaseInsensitive() {     Map<String, MediaType> mapping = Collections.singletonMap("json", MediaType.APPLICATION_JSON).     MappingMediaTypeFileExtensionResolver resolver = new MappingMediaTypeFileExtensionResolver(mapping).     MediaType mediaType = resolver.lookupMediaType("JSON").     assertEquals(MediaType.APPLICATION_JSON, mediaType). }
