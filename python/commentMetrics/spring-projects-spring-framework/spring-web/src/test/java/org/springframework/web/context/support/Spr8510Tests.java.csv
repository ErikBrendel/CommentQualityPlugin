# id;timestamp;commentText;codeText;commentWords;codeWords
Spr8510Tests -> @Test 	public void genericWAC();1328020251;Ensure that ContextLoaderListener and GenericWebApplicationContext interact nicely.;@Test_	public void genericWAC() {_		GenericWebApplicationContext ctx = new GenericWebApplicationContext()__		ContextLoaderListener cll = new ContextLoaderListener(ctx)___		ClassPathBeanDefinitionScanner scanner = new ClassPathBeanDefinitionScanner(ctx)__		scanner.scan("bogus.pkg")___		cll.contextInitialized(new ServletContextEvent(new MockServletContext()))__	};ensure,that,context,loader,listener,and,generic,web,application,context,interact,nicely;test,public,void,generic,wac,generic,web,application,context,ctx,new,generic,web,application,context,context,loader,listener,cll,new,context,loader,listener,ctx,class,path,bean,definition,scanner,scanner,new,class,path,bean,definition,scanner,ctx,scanner,scan,bogus,pkg,cll,context,initialized,new,servlet,context,event,new,mock,servlet,context
Spr8510Tests -> @Test 	public void genericWAC();1354292158;Ensure that ContextLoaderListener and GenericWebApplicationContext interact nicely.;@Test_	public void genericWAC() {_		GenericWebApplicationContext ctx = new GenericWebApplicationContext()__		ContextLoaderListener cll = new ContextLoaderListener(ctx)___		ClassPathBeanDefinitionScanner scanner = new ClassPathBeanDefinitionScanner(ctx)__		scanner.scan("bogus.pkg")___		cll.contextInitialized(new ServletContextEvent(new MockServletContext()))__	};ensure,that,context,loader,listener,and,generic,web,application,context,interact,nicely;test,public,void,generic,wac,generic,web,application,context,ctx,new,generic,web,application,context,context,loader,listener,cll,new,context,loader,listener,ctx,class,path,bean,definition,scanner,scanner,new,class,path,bean,definition,scanner,ctx,scanner,scan,bogus,pkg,cll,context,initialized,new,servlet,context,event,new,mock,servlet,context
Spr8510Tests -> @Test 	public void genericWAC();1413848647;Ensure that ContextLoaderListener and GenericWebApplicationContext interact nicely.;@Test_	public void genericWAC() {_		GenericWebApplicationContext ctx = new GenericWebApplicationContext()__		ContextLoaderListener cll = new ContextLoaderListener(ctx)___		ClassPathBeanDefinitionScanner scanner = new ClassPathBeanDefinitionScanner(ctx)__		scanner.scan("bogus.pkg")___		cll.contextInitialized(new ServletContextEvent(new MockServletContext()))__	};ensure,that,context,loader,listener,and,generic,web,application,context,interact,nicely;test,public,void,generic,wac,generic,web,application,context,ctx,new,generic,web,application,context,context,loader,listener,cll,new,context,loader,listener,ctx,class,path,bean,definition,scanner,scanner,new,class,path,bean,definition,scanner,ctx,scanner,scan,bogus,pkg,cll,context,initialized,new,servlet,context,event,new,mock,servlet,context
Spr8510Tests -> @Test 	public void genericWAC();1458843770;Ensure that ContextLoaderListener and GenericWebApplicationContext interact nicely.;@Test_	public void genericWAC() {_		GenericWebApplicationContext ctx = new GenericWebApplicationContext()__		ContextLoaderListener cll = new ContextLoaderListener(ctx)___		ClassPathBeanDefinitionScanner scanner = new ClassPathBeanDefinitionScanner(ctx)__		scanner.scan("bogus.pkg")___		cll.contextInitialized(new ServletContextEvent(new MockServletContext()))__	};ensure,that,context,loader,listener,and,generic,web,application,context,interact,nicely;test,public,void,generic,wac,generic,web,application,context,ctx,new,generic,web,application,context,context,loader,listener,cll,new,context,loader,listener,ctx,class,path,bean,definition,scanner,scanner,new,class,path,bean,definition,scanner,ctx,scanner,scan,bogus,pkg,cll,context,initialized,new,servlet,context,event,new,mock,servlet,context
Spr8510Tests -> @Test 	public void customAbstractRefreshableWAC_fallsBackToInitParam();1328020251;Ensure that any custom default locations are still respected.;@Test_	public void customAbstractRefreshableWAC_fallsBackToInitParam() {_		XmlWebApplicationContext ctx = new XmlWebApplicationContext() {_			@Override_			protected String[] getDefaultConfigLocations() {_				return new String[] { "/WEB-INF/custom.xml" }__			}_		}__		_		ContextLoaderListener cll = new ContextLoaderListener(ctx)___		MockServletContext sc = new MockServletContext()__		sc.addInitParameter(ContextLoader.CONFIG_LOCATION_PARAM, "from-init-param.xml")___		try {_			cll.contextInitialized(new ServletContextEvent(sc))__			fail("expected exception")__		} catch (Throwable t) {_			_			System.out.println(t.getMessage())__			assertTrue(t.getMessage().endsWith(_					"Could not open ServletContext resource [/from-init-param.xml]"))__		}_	};ensure,that,any,custom,default,locations,are,still,respected;test,public,void,xml,web,application,context,ctx,new,xml,web,application,context,override,protected,string,get,default,config,locations,return,new,string,web,inf,custom,xml,context,loader,listener,cll,new,context,loader,listener,ctx,mock,servlet,context,sc,new,mock,servlet,context,sc,add,init,parameter,context,loader,from,init,param,xml,try,cll,context,initialized,new,servlet,context,event,sc,fail,expected,exception,catch,throwable,t,system,out,println,t,get,message,assert,true,t,get,message,ends,with,could,not,open,servlet,context,resource,from,init,param,xml
Spr8510Tests -> @Test 	public void customAbstractRefreshableWAC_fallsBackToInitParam();1354292158;Ensure that any custom default locations are still respected.;@Test_	public void customAbstractRefreshableWAC_fallsBackToInitParam() {_		XmlWebApplicationContext ctx = new XmlWebApplicationContext() {_			@Override_			protected String[] getDefaultConfigLocations() {_				return new String[] { "/WEB-INF/custom.xml" }__			}_		}__		_		ContextLoaderListener cll = new ContextLoaderListener(ctx)___		MockServletContext sc = new MockServletContext()__		sc.addInitParameter(ContextLoader.CONFIG_LOCATION_PARAM, "from-init-param.xml")___		try {_			cll.contextInitialized(new ServletContextEvent(sc))__			fail("expected exception")__		} catch (Throwable t) {_			_			System.out.println(t.getMessage())__			assertTrue(t.getMessage().endsWith(_					"Could not open ServletContext resource [/from-init-param.xml]"))__		}_	};ensure,that,any,custom,default,locations,are,still,respected;test,public,void,xml,web,application,context,ctx,new,xml,web,application,context,override,protected,string,get,default,config,locations,return,new,string,web,inf,custom,xml,context,loader,listener,cll,new,context,loader,listener,ctx,mock,servlet,context,sc,new,mock,servlet,context,sc,add,init,parameter,context,loader,from,init,param,xml,try,cll,context,initialized,new,servlet,context,event,sc,fail,expected,exception,catch,throwable,t,system,out,println,t,get,message,assert,true,t,get,message,ends,with,could,not,open,servlet,context,resource,from,init,param,xml
Spr8510Tests -> @Test 	public void customAbstractRefreshableWAC_fallsBackToInitParam();1413848647;Ensure that any custom default locations are still respected.;@Test_	public void customAbstractRefreshableWAC_fallsBackToInitParam() {_		XmlWebApplicationContext ctx = new XmlWebApplicationContext() {_			@Override_			protected String[] getDefaultConfigLocations() {_				return new String[] { "/WEB-INF/custom.xml" }__			}_		}__		_		ContextLoaderListener cll = new ContextLoaderListener(ctx)___		MockServletContext sc = new MockServletContext()__		sc.addInitParameter(ContextLoader.CONFIG_LOCATION_PARAM, "from-init-param.xml")___		try {_			cll.contextInitialized(new ServletContextEvent(sc))__			fail("expected exception")__		} catch (Throwable t) {_			_			System.out.println(t.getMessage())__			assertTrue(t.getMessage().endsWith(_					"Could not open ServletContext resource [/from-init-param.xml]"))__		}_	};ensure,that,any,custom,default,locations,are,still,respected;test,public,void,xml,web,application,context,ctx,new,xml,web,application,context,override,protected,string,get,default,config,locations,return,new,string,web,inf,custom,xml,context,loader,listener,cll,new,context,loader,listener,ctx,mock,servlet,context,sc,new,mock,servlet,context,sc,add,init,parameter,context,loader,from,init,param,xml,try,cll,context,initialized,new,servlet,context,event,sc,fail,expected,exception,catch,throwable,t,system,out,println,t,get,message,assert,true,t,get,message,ends,with,could,not,open,servlet,context,resource,from,init,param,xml
Spr8510Tests -> @Test 	public void customAbstractRefreshableWAC_fallsBackToInitParam();1458843770;Ensure that any custom default locations are still respected.;@Test_	public void customAbstractRefreshableWAC_fallsBackToInitParam() {_		XmlWebApplicationContext ctx = new XmlWebApplicationContext() {_			@Override_			protected String[] getDefaultConfigLocations() {_				return new String[] { "/WEB-INF/custom.xml" }__			}_		}__		_		ContextLoaderListener cll = new ContextLoaderListener(ctx)___		MockServletContext sc = new MockServletContext()__		sc.addInitParameter(ContextLoader.CONFIG_LOCATION_PARAM, "from-init-param.xml")___		try {_			cll.contextInitialized(new ServletContextEvent(sc))__			fail("expected exception")__		}_		catch (Throwable t) {_			_			System.out.println(t.getMessage())__			assertTrue(t.getMessage().endsWith(_					"Could not open ServletContext resource [/from-init-param.xml]"))__		}_	};ensure,that,any,custom,default,locations,are,still,respected;test,public,void,xml,web,application,context,ctx,new,xml,web,application,context,override,protected,string,get,default,config,locations,return,new,string,web,inf,custom,xml,context,loader,listener,cll,new,context,loader,listener,ctx,mock,servlet,context,sc,new,mock,servlet,context,sc,add,init,parameter,context,loader,from,init,param,xml,try,cll,context,initialized,new,servlet,context,event,sc,fail,expected,exception,catch,throwable,t,system,out,println,t,get,message,assert,true,t,get,message,ends,with,could,not,open,servlet,context,resource,from,init,param,xml
Spr8510Tests -> @Test 	public void abstractRefreshableWAC_fallsBackToConventionBasedNaming();1328020251;If context config locations have been specified neither against the application_context nor the context loader listener, then fall back to default values.;@Test_	public void abstractRefreshableWAC_fallsBackToConventionBasedNaming() {_		XmlWebApplicationContext ctx = new XmlWebApplicationContext()__		_		ContextLoaderListener cll = new ContextLoaderListener(ctx)___		MockServletContext sc = new MockServletContext()__		_		__		try {_			cll.contextInitialized(new ServletContextEvent(sc))__			fail("expected exception")__		} catch (Throwable t) {_			_			System.out.println(t.getMessage())__			assertTrue(t.getMessage().endsWith(_					"Could not open ServletContext resource [/WEB-INF/applicationContext.xml]"))__		}_	};if,context,config,locations,have,been,specified,neither,against,the,application,context,nor,the,context,loader,listener,then,fall,back,to,default,values;test,public,void,xml,web,application,context,ctx,new,xml,web,application,context,context,loader,listener,cll,new,context,loader,listener,ctx,mock,servlet,context,sc,new,mock,servlet,context,try,cll,context,initialized,new,servlet,context,event,sc,fail,expected,exception,catch,throwable,t,system,out,println,t,get,message,assert,true,t,get,message,ends,with,could,not,open,servlet,context,resource,web,inf,application,context,xml
Spr8510Tests -> @Test 	public void abstractRefreshableWAC_fallsBackToConventionBasedNaming();1354292158;If context config locations have been specified neither against the application_context nor the context loader listener, then fall back to default values.;@Test_	public void abstractRefreshableWAC_fallsBackToConventionBasedNaming() {_		XmlWebApplicationContext ctx = new XmlWebApplicationContext()__		_		ContextLoaderListener cll = new ContextLoaderListener(ctx)___		MockServletContext sc = new MockServletContext()__		_		__		try {_			cll.contextInitialized(new ServletContextEvent(sc))__			fail("expected exception")__		} catch (Throwable t) {_			_			System.out.println(t.getMessage())__			assertTrue(t.getMessage().endsWith(_					"Could not open ServletContext resource [/WEB-INF/applicationContext.xml]"))__		}_	};if,context,config,locations,have,been,specified,neither,against,the,application,context,nor,the,context,loader,listener,then,fall,back,to,default,values;test,public,void,xml,web,application,context,ctx,new,xml,web,application,context,context,loader,listener,cll,new,context,loader,listener,ctx,mock,servlet,context,sc,new,mock,servlet,context,try,cll,context,initialized,new,servlet,context,event,sc,fail,expected,exception,catch,throwable,t,system,out,println,t,get,message,assert,true,t,get,message,ends,with,could,not,open,servlet,context,resource,web,inf,application,context,xml
Spr8510Tests -> @Test 	public void abstractRefreshableWAC_fallsBackToConventionBasedNaming();1413848647;If context config locations have been specified neither against the application_context nor the context loader listener, then fall back to default values.;@Test_	public void abstractRefreshableWAC_fallsBackToConventionBasedNaming() {_		XmlWebApplicationContext ctx = new XmlWebApplicationContext()__		_		ContextLoaderListener cll = new ContextLoaderListener(ctx)___		MockServletContext sc = new MockServletContext()__		_		__		try {_			cll.contextInitialized(new ServletContextEvent(sc))__			fail("expected exception")__		} catch (Throwable t) {_			_			System.out.println(t.getMessage())__			assertTrue(t.getMessage().endsWith(_					"Could not open ServletContext resource [/WEB-INF/applicationContext.xml]"))__		}_	};if,context,config,locations,have,been,specified,neither,against,the,application,context,nor,the,context,loader,listener,then,fall,back,to,default,values;test,public,void,xml,web,application,context,ctx,new,xml,web,application,context,context,loader,listener,cll,new,context,loader,listener,ctx,mock,servlet,context,sc,new,mock,servlet,context,try,cll,context,initialized,new,servlet,context,event,sc,fail,expected,exception,catch,throwable,t,system,out,println,t,get,message,assert,true,t,get,message,ends,with,could,not,open,servlet,context,resource,web,inf,application,context,xml
Spr8510Tests -> @Test 	public void abstractRefreshableWAC_fallsBackToConventionBasedNaming();1458843770;If context config locations have been specified neither against the application_context nor the context loader listener, then fall back to default values.;@Test_	public void abstractRefreshableWAC_fallsBackToConventionBasedNaming() {_		XmlWebApplicationContext ctx = new XmlWebApplicationContext()__		_		ContextLoaderListener cll = new ContextLoaderListener(ctx)___		MockServletContext sc = new MockServletContext()__		_		__		try {_			cll.contextInitialized(new ServletContextEvent(sc))__			fail("expected exception")__		}_		catch (Throwable t) {_			_			System.out.println(t.getMessage())__			assertTrue(t.getMessage().endsWith(_					"Could not open ServletContext resource [/WEB-INF/applicationContext.xml]"))__		}_	};if,context,config,locations,have,been,specified,neither,against,the,application,context,nor,the,context,loader,listener,then,fall,back,to,default,values;test,public,void,xml,web,application,context,ctx,new,xml,web,application,context,context,loader,listener,cll,new,context,loader,listener,ctx,mock,servlet,context,sc,new,mock,servlet,context,try,cll,context,initialized,new,servlet,context,event,sc,fail,expected,exception,catch,throwable,t,system,out,println,t,get,message,assert,true,t,get,message,ends,with,could,not,open,servlet,context,resource,web,inf,application,context,xml
Spr8510Tests -> @Test 	public void abstractRefreshableWAC_respectsInitParam_overProgrammaticConfigLocations();1328020251;If a contextConfigLocation init-param has been specified for the ContextLoaderListener,_then it should take precedence. This is generally not a recommended practice, but_when it does happen, the init-param should be considered more specific than the_programmatic configuration, given that it still quite possibly externalized in_hybrid web.xml + WebApplicationInitializer cases.;@Test_	public void abstractRefreshableWAC_respectsInitParam_overProgrammaticConfigLocations() {_		XmlWebApplicationContext ctx = new XmlWebApplicationContext()__		ctx.setConfigLocation("programmatic.xml")__		ContextLoaderListener cll = new ContextLoaderListener(ctx)___		MockServletContext sc = new MockServletContext()__		sc.addInitParameter(ContextLoader.CONFIG_LOCATION_PARAM, "from-init-param.xml")___		try {_			cll.contextInitialized(new ServletContextEvent(sc))__			fail("expected exception")__		} catch (Throwable t) {_			_			assertTrue(t.getMessage(), t.getMessage().endsWith(_					"Could not open ServletContext resource [/from-init-param.xml]"))__		}_	};if,a,context,config,location,init,param,has,been,specified,for,the,context,loader,listener,then,it,should,take,precedence,this,is,generally,not,a,recommended,practice,but,when,it,does,happen,the,init,param,should,be,considered,more,specific,than,the,programmatic,configuration,given,that,it,still,quite,possibly,externalized,in,hybrid,web,xml,web,application,initializer,cases;test,public,void,xml,web,application,context,ctx,new,xml,web,application,context,ctx,set,config,location,programmatic,xml,context,loader,listener,cll,new,context,loader,listener,ctx,mock,servlet,context,sc,new,mock,servlet,context,sc,add,init,parameter,context,loader,from,init,param,xml,try,cll,context,initialized,new,servlet,context,event,sc,fail,expected,exception,catch,throwable,t,assert,true,t,get,message,t,get,message,ends,with,could,not,open,servlet,context,resource,from,init,param,xml
Spr8510Tests -> @Test 	public void abstractRefreshableWAC_respectsInitParam_overProgrammaticConfigLocations();1354292158;If a contextConfigLocation init-param has been specified for the ContextLoaderListener,_then it should take precedence. This is generally not a recommended practice, but_when it does happen, the init-param should be considered more specific than the_programmatic configuration, given that it still quite possibly externalized in_hybrid web.xml + WebApplicationInitializer cases.;@Test_	public void abstractRefreshableWAC_respectsInitParam_overProgrammaticConfigLocations() {_		XmlWebApplicationContext ctx = new XmlWebApplicationContext()__		ctx.setConfigLocation("programmatic.xml")__		ContextLoaderListener cll = new ContextLoaderListener(ctx)___		MockServletContext sc = new MockServletContext()__		sc.addInitParameter(ContextLoader.CONFIG_LOCATION_PARAM, "from-init-param.xml")___		try {_			cll.contextInitialized(new ServletContextEvent(sc))__			fail("expected exception")__		} catch (Throwable t) {_			_			assertTrue(t.getMessage(), t.getMessage().endsWith(_					"Could not open ServletContext resource [/from-init-param.xml]"))__		}_	};if,a,context,config,location,init,param,has,been,specified,for,the,context,loader,listener,then,it,should,take,precedence,this,is,generally,not,a,recommended,practice,but,when,it,does,happen,the,init,param,should,be,considered,more,specific,than,the,programmatic,configuration,given,that,it,still,quite,possibly,externalized,in,hybrid,web,xml,web,application,initializer,cases;test,public,void,xml,web,application,context,ctx,new,xml,web,application,context,ctx,set,config,location,programmatic,xml,context,loader,listener,cll,new,context,loader,listener,ctx,mock,servlet,context,sc,new,mock,servlet,context,sc,add,init,parameter,context,loader,from,init,param,xml,try,cll,context,initialized,new,servlet,context,event,sc,fail,expected,exception,catch,throwable,t,assert,true,t,get,message,t,get,message,ends,with,could,not,open,servlet,context,resource,from,init,param,xml
Spr8510Tests -> @Test 	public void abstractRefreshableWAC_respectsInitParam_overProgrammaticConfigLocations();1413848647;If a contextConfigLocation init-param has been specified for the ContextLoaderListener,_then it should take precedence. This is generally not a recommended practice, but_when it does happen, the init-param should be considered more specific than the_programmatic configuration, given that it still quite possibly externalized in_hybrid web.xml + WebApplicationInitializer cases.;@Test_	public void abstractRefreshableWAC_respectsInitParam_overProgrammaticConfigLocations() {_		XmlWebApplicationContext ctx = new XmlWebApplicationContext()__		ctx.setConfigLocation("programmatic.xml")__		ContextLoaderListener cll = new ContextLoaderListener(ctx)___		MockServletContext sc = new MockServletContext()__		sc.addInitParameter(ContextLoader.CONFIG_LOCATION_PARAM, "from-init-param.xml")___		try {_			cll.contextInitialized(new ServletContextEvent(sc))__			fail("expected exception")__		} catch (Throwable t) {_			_			assertTrue(t.getMessage(), t.getMessage().endsWith(_					"Could not open ServletContext resource [/from-init-param.xml]"))__		}_	};if,a,context,config,location,init,param,has,been,specified,for,the,context,loader,listener,then,it,should,take,precedence,this,is,generally,not,a,recommended,practice,but,when,it,does,happen,the,init,param,should,be,considered,more,specific,than,the,programmatic,configuration,given,that,it,still,quite,possibly,externalized,in,hybrid,web,xml,web,application,initializer,cases;test,public,void,xml,web,application,context,ctx,new,xml,web,application,context,ctx,set,config,location,programmatic,xml,context,loader,listener,cll,new,context,loader,listener,ctx,mock,servlet,context,sc,new,mock,servlet,context,sc,add,init,parameter,context,loader,from,init,param,xml,try,cll,context,initialized,new,servlet,context,event,sc,fail,expected,exception,catch,throwable,t,assert,true,t,get,message,t,get,message,ends,with,could,not,open,servlet,context,resource,from,init,param,xml
Spr8510Tests -> @Test 	public void abstractRefreshableWAC_respectsInitParam_overProgrammaticConfigLocations();1458843770;If a contextConfigLocation init-param has been specified for the ContextLoaderListener,_then it should take precedence. This is generally not a recommended practice, but_when it does happen, the init-param should be considered more specific than the_programmatic configuration, given that it still quite possibly externalized in_hybrid web.xml + WebApplicationInitializer cases.;@Test_	public void abstractRefreshableWAC_respectsInitParam_overProgrammaticConfigLocations() {_		XmlWebApplicationContext ctx = new XmlWebApplicationContext()__		ctx.setConfigLocation("programmatic.xml")__		ContextLoaderListener cll = new ContextLoaderListener(ctx)___		MockServletContext sc = new MockServletContext()__		sc.addInitParameter(ContextLoader.CONFIG_LOCATION_PARAM, "from-init-param.xml")___		try {_			cll.contextInitialized(new ServletContextEvent(sc))__			fail("expected exception")__		}_		catch (Throwable t) {_			_			assertTrue(t.getMessage(), t.getMessage().endsWith(_					"Could not open ServletContext resource [/from-init-param.xml]"))__		}_	};if,a,context,config,location,init,param,has,been,specified,for,the,context,loader,listener,then,it,should,take,precedence,this,is,generally,not,a,recommended,practice,but,when,it,does,happen,the,init,param,should,be,considered,more,specific,than,the,programmatic,configuration,given,that,it,still,quite,possibly,externalized,in,hybrid,web,xml,web,application,initializer,cases;test,public,void,xml,web,application,context,ctx,new,xml,web,application,context,ctx,set,config,location,programmatic,xml,context,loader,listener,cll,new,context,loader,listener,ctx,mock,servlet,context,sc,new,mock,servlet,context,sc,add,init,parameter,context,loader,from,init,param,xml,try,cll,context,initialized,new,servlet,context,event,sc,fail,expected,exception,catch,throwable,t,assert,true,t,get,message,t,get,message,ends,with,could,not,open,servlet,context,resource,from,init,param,xml
Spr8510Tests -> @Test 	public void abstractRefreshableWAC_fallsBackToInitParam();1328020251;If setConfigLocation has not been called explicitly against the application context,_then fall back to the ContextLoaderListener init-param if present.;@Test_	public void abstractRefreshableWAC_fallsBackToInitParam() {_		XmlWebApplicationContext ctx = new XmlWebApplicationContext()__		_		ContextLoaderListener cll = new ContextLoaderListener(ctx)___		MockServletContext sc = new MockServletContext()__		sc.addInitParameter(ContextLoader.CONFIG_LOCATION_PARAM, "from-init-param.xml")___		try {_			cll.contextInitialized(new ServletContextEvent(sc))__			fail("expected exception")__		} catch (Throwable t) {_			_			assertTrue(t.getMessage().endsWith(_					"Could not open ServletContext resource [/from-init-param.xml]"))__		}_	};if,set,config,location,has,not,been,called,explicitly,against,the,application,context,then,fall,back,to,the,context,loader,listener,init,param,if,present;test,public,void,xml,web,application,context,ctx,new,xml,web,application,context,context,loader,listener,cll,new,context,loader,listener,ctx,mock,servlet,context,sc,new,mock,servlet,context,sc,add,init,parameter,context,loader,from,init,param,xml,try,cll,context,initialized,new,servlet,context,event,sc,fail,expected,exception,catch,throwable,t,assert,true,t,get,message,ends,with,could,not,open,servlet,context,resource,from,init,param,xml
Spr8510Tests -> @Test 	public void abstractRefreshableWAC_fallsBackToInitParam();1354292158;If setConfigLocation has not been called explicitly against the application context,_then fall back to the ContextLoaderListener init-param if present.;@Test_	public void abstractRefreshableWAC_fallsBackToInitParam() {_		XmlWebApplicationContext ctx = new XmlWebApplicationContext()__		_		ContextLoaderListener cll = new ContextLoaderListener(ctx)___		MockServletContext sc = new MockServletContext()__		sc.addInitParameter(ContextLoader.CONFIG_LOCATION_PARAM, "from-init-param.xml")___		try {_			cll.contextInitialized(new ServletContextEvent(sc))__			fail("expected exception")__		} catch (Throwable t) {_			_			assertTrue(t.getMessage().endsWith(_					"Could not open ServletContext resource [/from-init-param.xml]"))__		}_	};if,set,config,location,has,not,been,called,explicitly,against,the,application,context,then,fall,back,to,the,context,loader,listener,init,param,if,present;test,public,void,xml,web,application,context,ctx,new,xml,web,application,context,context,loader,listener,cll,new,context,loader,listener,ctx,mock,servlet,context,sc,new,mock,servlet,context,sc,add,init,parameter,context,loader,from,init,param,xml,try,cll,context,initialized,new,servlet,context,event,sc,fail,expected,exception,catch,throwable,t,assert,true,t,get,message,ends,with,could,not,open,servlet,context,resource,from,init,param,xml
Spr8510Tests -> @Test 	public void abstractRefreshableWAC_fallsBackToInitParam();1413848647;If setConfigLocation has not been called explicitly against the application context,_then fall back to the ContextLoaderListener init-param if present.;@Test_	public void abstractRefreshableWAC_fallsBackToInitParam() {_		XmlWebApplicationContext ctx = new XmlWebApplicationContext()__		_		ContextLoaderListener cll = new ContextLoaderListener(ctx)___		MockServletContext sc = new MockServletContext()__		sc.addInitParameter(ContextLoader.CONFIG_LOCATION_PARAM, "from-init-param.xml")___		try {_			cll.contextInitialized(new ServletContextEvent(sc))__			fail("expected exception")__		} catch (Throwable t) {_			_			assertTrue(t.getMessage().endsWith(_					"Could not open ServletContext resource [/from-init-param.xml]"))__		}_	};if,set,config,location,has,not,been,called,explicitly,against,the,application,context,then,fall,back,to,the,context,loader,listener,init,param,if,present;test,public,void,xml,web,application,context,ctx,new,xml,web,application,context,context,loader,listener,cll,new,context,loader,listener,ctx,mock,servlet,context,sc,new,mock,servlet,context,sc,add,init,parameter,context,loader,from,init,param,xml,try,cll,context,initialized,new,servlet,context,event,sc,fail,expected,exception,catch,throwable,t,assert,true,t,get,message,ends,with,could,not,open,servlet,context,resource,from,init,param,xml
Spr8510Tests -> @Test 	public void abstractRefreshableWAC_fallsBackToInitParam();1458843770;If setConfigLocation has not been called explicitly against the application context,_then fall back to the ContextLoaderListener init-param if present.;@Test_	public void abstractRefreshableWAC_fallsBackToInitParam() {_		XmlWebApplicationContext ctx = new XmlWebApplicationContext()__		_		ContextLoaderListener cll = new ContextLoaderListener(ctx)___		MockServletContext sc = new MockServletContext()__		sc.addInitParameter(ContextLoader.CONFIG_LOCATION_PARAM, "from-init-param.xml")___		try {_			cll.contextInitialized(new ServletContextEvent(sc))__			fail("expected exception")__		}_		catch (Throwable t) {_			_			assertTrue(t.getMessage().endsWith(_					"Could not open ServletContext resource [/from-init-param.xml]"))__		}_	};if,set,config,location,has,not,been,called,explicitly,against,the,application,context,then,fall,back,to,the,context,loader,listener,init,param,if,present;test,public,void,xml,web,application,context,ctx,new,xml,web,application,context,context,loader,listener,cll,new,context,loader,listener,ctx,mock,servlet,context,sc,new,mock,servlet,context,sc,add,init,parameter,context,loader,from,init,param,xml,try,cll,context,initialized,new,servlet,context,event,sc,fail,expected,exception,catch,throwable,t,assert,true,t,get,message,ends,with,could,not,open,servlet,context,resource,from,init,param,xml
Spr8510Tests -> @Test 	public void annotationConfigWAC();1328020251;Ensure that ContextLoaderListener and AnnotationConfigApplicationContext interact nicely.;@Test_	public void annotationConfigWAC() {_		AnnotationConfigWebApplicationContext ctx = new AnnotationConfigWebApplicationContext()___		ctx.scan("does.not.matter")___		ContextLoaderListener cll = new ContextLoaderListener(ctx)__		cll.contextInitialized(new ServletContextEvent(new MockServletContext()))__	};ensure,that,context,loader,listener,and,annotation,config,application,context,interact,nicely;test,public,void,annotation,config,wac,annotation,config,web,application,context,ctx,new,annotation,config,web,application,context,ctx,scan,does,not,matter,context,loader,listener,cll,new,context,loader,listener,ctx,cll,context,initialized,new,servlet,context,event,new,mock,servlet,context
Spr8510Tests -> @Test 	public void annotationConfigWAC();1354292158;Ensure that ContextLoaderListener and AnnotationConfigApplicationContext interact nicely.;@Test_	public void annotationConfigWAC() {_		AnnotationConfigWebApplicationContext ctx = new AnnotationConfigWebApplicationContext()___		ctx.scan("does.not.matter")___		ContextLoaderListener cll = new ContextLoaderListener(ctx)__		cll.contextInitialized(new ServletContextEvent(new MockServletContext()))__	};ensure,that,context,loader,listener,and,annotation,config,application,context,interact,nicely;test,public,void,annotation,config,wac,annotation,config,web,application,context,ctx,new,annotation,config,web,application,context,ctx,scan,does,not,matter,context,loader,listener,cll,new,context,loader,listener,ctx,cll,context,initialized,new,servlet,context,event,new,mock,servlet,context
Spr8510Tests -> @Test 	public void annotationConfigWAC();1413848647;Ensure that ContextLoaderListener and AnnotationConfigApplicationContext interact nicely.;@Test_	public void annotationConfigWAC() {_		AnnotationConfigWebApplicationContext ctx = new AnnotationConfigWebApplicationContext()___		ctx.scan("does.not.matter")___		ContextLoaderListener cll = new ContextLoaderListener(ctx)__		cll.contextInitialized(new ServletContextEvent(new MockServletContext()))__	};ensure,that,context,loader,listener,and,annotation,config,application,context,interact,nicely;test,public,void,annotation,config,wac,annotation,config,web,application,context,ctx,new,annotation,config,web,application,context,ctx,scan,does,not,matter,context,loader,listener,cll,new,context,loader,listener,ctx,cll,context,initialized,new,servlet,context,event,new,mock,servlet,context
Spr8510Tests -> @Test 	public void annotationConfigWAC();1458843770;Ensure that ContextLoaderListener and AnnotationConfigApplicationContext interact nicely.;@Test_	public void annotationConfigWAC() {_		AnnotationConfigWebApplicationContext ctx = new AnnotationConfigWebApplicationContext()___		ctx.scan("does.not.matter")___		ContextLoaderListener cll = new ContextLoaderListener(ctx)__		cll.contextInitialized(new ServletContextEvent(new MockServletContext()))__	};ensure,that,context,loader,listener,and,annotation,config,application,context,interact,nicely;test,public,void,annotation,config,wac,annotation,config,web,application,context,ctx,new,annotation,config,web,application,context,ctx,scan,does,not,matter,context,loader,listener,cll,new,context,loader,listener,ctx,cll,context,initialized,new,servlet,context,event,new,mock,servlet,context
