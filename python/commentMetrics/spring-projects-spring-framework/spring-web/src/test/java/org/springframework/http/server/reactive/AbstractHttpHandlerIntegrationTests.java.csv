# id;timestamp;commentText;codeText;commentWords;codeWords
AbstractHttpHandlerIntegrationTests -> public static Flux<Long> interval(Duration period, int count);1517932879;Return an interval stream of with n number of ticks and buffer the_emissions to avoid back pressure failures (e.g. on slow CI server).;public static Flux<Long> interval(Duration period, int count) {_		return Flux.interval(period).take(count).onBackpressureBuffer(2)__	};return,an,interval,stream,of,with,n,number,of,ticks,and,buffer,the,emissions,to,avoid,back,pressure,failures,e,g,on,slow,ci,server;public,static,flux,long,interval,duration,period,int,count,return,flux,interval,period,take,count,on,backpressure,buffer,2
AbstractHttpHandlerIntegrationTests -> public static Flux<Long> interval(Duration period, int count);1517934233;Return an interval stream of with n number of ticks and buffer the_emissions to avoid back pressure failures (e.g. on slow CI server).__<p>Use this method as follows:_<ul>_<li>Tests that verify N number of items followed by verifyOnComplete()_should set the number of emissions to N._<li>Tests that verify N number of items followed by thenCancel() should_set the number of buffered to an arbitrary number greater than N._</ul>;public static Flux<Long> interval(Duration period, int count) {_		return Flux.interval(period).take(count).onBackpressureBuffer(2)__	};return,an,interval,stream,of,with,n,number,of,ticks,and,buffer,the,emissions,to,avoid,back,pressure,failures,e,g,on,slow,ci,server,p,use,this,method,as,follows,ul,li,tests,that,verify,n,number,of,items,followed,by,verify,on,complete,should,set,the,number,of,emissions,to,n,li,tests,that,verify,n,number,of,items,followed,by,then,cancel,should,set,the,number,of,buffered,to,an,arbitrary,number,greater,than,n,ul;public,static,flux,long,interval,duration,period,int,count,return,flux,interval,period,take,count,on,backpressure,buffer,2
AbstractHttpHandlerIntegrationTests -> public static Flux<Long> interval(Duration period, int count);1517949785;Return an interval stream of N number of ticks and buffer the emissions_to avoid back pressure failures (e.g. on slow CI server).__<p>Use this method as follows:_<ul>_<li>Tests that verify N number of items followed by verifyOnComplete()_should set the number of emissions to N._<li>Tests that verify N number of items followed by thenCancel() should_set the number of buffered to an arbitrary number greater than N._</ul>;public static Flux<Long> interval(Duration period, int count) {_		return Flux.interval(period).take(count).onBackpressureBuffer(count)__	};return,an,interval,stream,of,n,number,of,ticks,and,buffer,the,emissions,to,avoid,back,pressure,failures,e,g,on,slow,ci,server,p,use,this,method,as,follows,ul,li,tests,that,verify,n,number,of,items,followed,by,verify,on,complete,should,set,the,number,of,emissions,to,n,li,tests,that,verify,n,number,of,items,followed,by,then,cancel,should,set,the,number,of,buffered,to,an,arbitrary,number,greater,than,n,ul;public,static,flux,long,interval,duration,period,int,count,return,flux,interval,period,take,count,on,backpressure,buffer,count
