# id;timestamp;commentText;codeText;commentWords;codeWords
MockClientHttpResponse -> public Mono<String> getBodyAsString();1484338986;Return the response body aggregated and converted to a String using the_charset of the Content-Type response or otherwise as "UTF-8".;public Mono<String> getBodyAsString() {_		Charset charset = getCharset()__		return Flux.from(getBody())_				.reduce(bufferFactory.allocateBuffer(), (previous, current) -> {_					previous.write(current)__					DataBufferUtils.release(current)__					return previous__				})_				.map(buffer -> dumpString(buffer, charset))__	};return,the,response,body,aggregated,and,converted,to,a,string,using,the,charset,of,the,content,type,response,or,otherwise,as,utf,8;public,mono,string,get,body,as,string,charset,charset,get,charset,return,flux,from,get,body,reduce,buffer,factory,allocate,buffer,previous,current,previous,write,current,data,buffer,utils,release,current,return,previous,map,buffer,dump,string,buffer,charset
MockClientHttpResponse -> public Mono<String> getBodyAsString();1504711758;Return the response body aggregated and converted to a String using the_charset of the Content-Type response or otherwise as "UTF-8".;public Mono<String> getBodyAsString() {_		Charset charset = getCharset()__		return Flux.from(getBody())_				.reduce(bufferFactory.allocateBuffer(), (previous, current) -> {_					previous.write(current)__					DataBufferUtils.release(current)__					return previous__				})_				.map(buffer -> dumpString(buffer, charset))__	};return,the,response,body,aggregated,and,converted,to,a,string,using,the,charset,of,the,content,type,response,or,otherwise,as,utf,8;public,mono,string,get,body,as,string,charset,charset,get,charset,return,flux,from,get,body,reduce,buffer,factory,allocate,buffer,previous,current,previous,write,current,data,buffer,utils,release,current,return,previous,map,buffer,dump,string,buffer,charset
MockClientHttpResponse -> public Mono<String> getBodyAsString();1506553118;Return the response body aggregated and converted to a String using the_charset of the Content-Type response or otherwise as "UTF-8".;public Mono<String> getBodyAsString() {_		Charset charset = getCharset()__		return Flux.from(getBody())_				.reduce(bufferFactory.allocateBuffer(), (previous, current) -> {_					previous.write(current)__					DataBufferUtils.release(current)__					return previous__				})_				.map(buffer -> dumpString(buffer, charset))__	};return,the,response,body,aggregated,and,converted,to,a,string,using,the,charset,of,the,content,type,response,or,otherwise,as,utf,8;public,mono,string,get,body,as,string,charset,charset,get,charset,return,flux,from,get,body,reduce,buffer,factory,allocate,buffer,previous,current,previous,write,current,data,buffer,utils,release,current,return,previous,map,buffer,dump,string,buffer,charset
MockClientHttpResponse -> public Mono<String> getBodyAsString();1509466098;Return the response body aggregated and converted to a String using the_charset of the Content-Type response or otherwise as "UTF-8".;public Mono<String> getBodyAsString() {_		Charset charset = getCharset()__		return Flux.from(getBody())_				.reduce(bufferFactory.allocateBuffer(), (previous, current) -> {_					previous.write(current)__					DataBufferUtils.release(current)__					return previous__				})_				.map(buffer -> dumpString(buffer, charset))__	};return,the,response,body,aggregated,and,converted,to,a,string,using,the,charset,of,the,content,type,response,or,otherwise,as,utf,8;public,mono,string,get,body,as,string,charset,charset,get,charset,return,flux,from,get,body,reduce,buffer,factory,allocate,buffer,previous,current,previous,write,current,data,buffer,utils,release,current,return,previous,map,buffer,dump,string,buffer,charset
MockClientHttpResponse -> public Mono<String> getBodyAsString();1524846311;Return the response body aggregated and converted to a String using the_charset of the Content-Type response or otherwise as "UTF-8".;public Mono<String> getBodyAsString() {_		Charset charset = getCharset()__		return Flux.from(getBody())_				.reduce(bufferFactory.allocateBuffer(), (previous, current) -> {_					previous.write(current)__					DataBufferUtils.release(current)__					return previous__				})_				.map(buffer -> dumpString(buffer, charset))__	};return,the,response,body,aggregated,and,converted,to,a,string,using,the,charset,of,the,content,type,response,or,otherwise,as,utf,8;public,mono,string,get,body,as,string,charset,charset,get,charset,return,flux,from,get,body,reduce,buffer,factory,allocate,buffer,previous,current,previous,write,current,data,buffer,utils,release,current,return,previous,map,buffer,dump,string,buffer,charset
