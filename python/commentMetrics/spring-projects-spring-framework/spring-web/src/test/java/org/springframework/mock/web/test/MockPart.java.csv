# id;timestamp;commentText;codeText;commentWords;codeWords
MockPart -> public MockPart(String name, String filename, byte[] content);1505897706;Constructor for a part with a filename and byte[] content._@see #getHeaders();public MockPart(String name, String filename, byte[] content) {_		Assert.hasLength(name, "Name must not be null")__		this.name = name__		this.filename = filename__		this.content = (content != null ? content : new byte[0])__		this.headers.setContentDispositionFormData(name, filename)__	};constructor,for,a,part,with,a,filename,and,byte,content,see,get,headers;public,mock,part,string,name,string,filename,byte,content,assert,has,length,name,name,must,not,be,null,this,name,name,this,filename,filename,this,content,content,null,content,new,byte,0,this,headers,set,content,disposition,form,data,name,filename
MockPart -> public MockPart(String name, String filename, byte[] content);1524664746;Constructor for a part with a filename and byte[] content._@see #getHeaders();public MockPart(String name, String filename, byte[] content) {_		Assert.hasLength(name, "'name' must not be empty")__		this.name = name__		this.filename = filename__		this.content = (content != null ? content : new byte[0])__		this.headers.setContentDispositionFormData(name, filename)__	};constructor,for,a,part,with,a,filename,and,byte,content,see,get,headers;public,mock,part,string,name,string,filename,byte,content,assert,has,length,name,name,must,not,be,empty,this,name,name,this,filename,filename,this,content,content,null,content,new,byte,0,this,headers,set,content,disposition,form,data,name,filename
MockPart -> public MockPart(String name, String contentType, InputStream contentStream) 			throws IOException;1354292158;Create a new MockPart with the given content._@param name the name of the file_@param contentType the content type (if known)_@param contentStream the content of the part as stream_@throws IOException if reading from the stream failed;public MockPart(String name, String contentType, InputStream contentStream)_			throws IOException {__		this(name, contentType, FileCopyUtils.copyToByteArray(contentStream))__	};create,a,new,mock,part,with,the,given,content,param,name,the,name,of,the,file,param,content,type,the,content,type,if,known,param,content,stream,the,content,of,the,part,as,stream,throws,ioexception,if,reading,from,the,stream,failed;public,mock,part,string,name,string,content,type,input,stream,content,stream,throws,ioexception,this,name,content,type,file,copy,utils,copy,to,byte,array,content,stream
MockPart -> public MockPart(String name, String contentType, InputStream contentStream) 			throws IOException;1356735495;Create a new MockPart with the given content._@param name the name of the file_@param contentType the content type (if known)_@param contentStream the content of the part as stream_@throws IOException if reading from the stream failed;public MockPart(String name, String contentType, InputStream contentStream)_			throws IOException {__		this(name, contentType, FileCopyUtils.copyToByteArray(contentStream))__	};create,a,new,mock,part,with,the,given,content,param,name,the,name,of,the,file,param,content,type,the,content,type,if,known,param,content,stream,the,content,of,the,part,as,stream,throws,ioexception,if,reading,from,the,stream,failed;public,mock,part,string,name,string,content,type,input,stream,content,stream,throws,ioexception,this,name,content,type,file,copy,utils,copy,to,byte,array,content,stream
MockPart -> public MockPart(String name, String contentType, InputStream contentStream) 			throws IOException;1413848647;Create a new MockPart with the given content._@param name the name of the file_@param contentType the content type (if known)_@param contentStream the content of the part as stream_@throws IOException if reading from the stream failed;public MockPart(String name, String contentType, InputStream contentStream)_			throws IOException {__		this(name, contentType, FileCopyUtils.copyToByteArray(contentStream))__	};create,a,new,mock,part,with,the,given,content,param,name,the,name,of,the,file,param,content,type,the,content,type,if,known,param,content,stream,the,content,of,the,part,as,stream,throws,ioexception,if,reading,from,the,stream,failed;public,mock,part,string,name,string,content,type,input,stream,content,stream,throws,ioexception,this,name,content,type,file,copy,utils,copy,to,byte,array,content,stream
MockPart -> public MockPart(String name, String contentType, InputStream contentStream) 			throws IOException;1468513835;Create a new MockPart with the given content._@param name the name of the file_@param contentType the content type (if known)_@param contentStream the content of the part as stream_@throws IOException if reading from the stream failed;public MockPart(String name, String contentType, InputStream contentStream)_			throws IOException {__		this(name, contentType, FileCopyUtils.copyToByteArray(contentStream))__	};create,a,new,mock,part,with,the,given,content,param,name,the,name,of,the,file,param,content,type,the,content,type,if,known,param,content,stream,the,content,of,the,part,as,stream,throws,ioexception,if,reading,from,the,stream,failed;public,mock,part,string,name,string,content,type,input,stream,content,stream,throws,ioexception,this,name,content,type,file,copy,utils,copy,to,byte,array,content,stream
MockPart -> public MockPart(String name, byte[] content);1354292158;Create a new MockPart with the given content._@param name the name of the part_@param content the content for the part;public MockPart(String name, byte[] content) {_		this(name, "", content)__	};create,a,new,mock,part,with,the,given,content,param,name,the,name,of,the,part,param,content,the,content,for,the,part;public,mock,part,string,name,byte,content,this,name,content
MockPart -> public MockPart(String name, byte[] content);1356735495;Create a new MockPart with the given content._@param name the name of the part_@param content the content for the part;public MockPart(String name, byte[] content) {_		this(name, "", content)__	};create,a,new,mock,part,with,the,given,content,param,name,the,name,of,the,part,param,content,the,content,for,the,part;public,mock,part,string,name,byte,content,this,name,content
MockPart -> public MockPart(String name, byte[] content);1413848647;Create a new MockPart with the given content._@param name the name of the part_@param content the content for the part;public MockPart(String name, byte[] content) {_		this(name, "", content)__	};create,a,new,mock,part,with,the,given,content,param,name,the,name,of,the,part,param,content,the,content,for,the,part;public,mock,part,string,name,byte,content,this,name,content
MockPart -> public MockPart(String name, byte[] content);1468513835;Create a new MockPart with the given content._@param name the name of the part_@param content the content for the part;public MockPart(String name, byte[] content) {_		this(name, "", content)__	};create,a,new,mock,part,with,the,given,content,param,name,the,name,of,the,part,param,content,the,content,for,the,part;public,mock,part,string,name,byte,content,this,name,content
MockPart -> public MockPart(String name, byte[] content);1485381925;Constructor for a part with byte[] content only.;public MockPart(String name, byte[] content) {_		this(name, null, content)__	};constructor,for,a,part,with,byte,content,only;public,mock,part,string,name,byte,content,this,name,null,content
MockPart -> public MockPart(String name, byte[] content);1504882582;Constructor for a part with byte[] content only._@see #getHeaders();public MockPart(String name, byte[] content) {_		this(name, null, content)__	};constructor,for,a,part,with,byte,content,only,see,get,headers;public,mock,part,string,name,byte,content,this,name,null,content
MockPart -> public MockPart(String name, byte[] content);1505897706;Constructor for a part with byte[] content only._@see #getHeaders();public MockPart(String name, byte[] content) {_		this(name, null, content)__	};constructor,for,a,part,with,byte,content,only,see,get,headers;public,mock,part,string,name,byte,content,this,name,null,content
MockPart -> public MockPart(String name, byte[] content);1524664746;Constructor for a part with byte[] content only._@see #getHeaders();public MockPart(String name, byte[] content) {_		this(name, null, content)__	};constructor,for,a,part,with,byte,content,only,see,get,headers;public,mock,part,string,name,byte,content,this,name,null,content
MockPart -> public HttpHeaders getHeaders();1485381925;Return the {@link HttpHeaders} backing header related accessor methods.;public HttpHeaders getHeaders() {_		return this.headers__	};return,the,link,http,headers,backing,header,related,accessor,methods;public,http,headers,get,headers,return,this,headers
MockPart -> public HttpHeaders getHeaders();1504882582;Return the {@link HttpHeaders} backing header related accessor methods.;public HttpHeaders getHeaders() {_		return this.headers__	};return,the,link,http,headers,backing,header,related,accessor,methods;public,http,headers,get,headers,return,this,headers
MockPart -> public MockPart(String name, InputStream contentStream) throws IOException;1354292158;Create a new MockPart with the given content._@param name the name of the part_@param contentStream the content of the part as stream_@throws IOException if reading from the stream failed;public MockPart(String name, InputStream contentStream) throws IOException {_		this(name, "", FileCopyUtils.copyToByteArray(contentStream))__	};create,a,new,mock,part,with,the,given,content,param,name,the,name,of,the,part,param,content,stream,the,content,of,the,part,as,stream,throws,ioexception,if,reading,from,the,stream,failed;public,mock,part,string,name,input,stream,content,stream,throws,ioexception,this,name,file,copy,utils,copy,to,byte,array,content,stream
MockPart -> public MockPart(String name, InputStream contentStream) throws IOException;1356735495;Create a new MockPart with the given content._@param name the name of the part_@param contentStream the content of the part as stream_@throws IOException if reading from the stream failed;public MockPart(String name, InputStream contentStream) throws IOException {_		this(name, "", FileCopyUtils.copyToByteArray(contentStream))__	};create,a,new,mock,part,with,the,given,content,param,name,the,name,of,the,part,param,content,stream,the,content,of,the,part,as,stream,throws,ioexception,if,reading,from,the,stream,failed;public,mock,part,string,name,input,stream,content,stream,throws,ioexception,this,name,file,copy,utils,copy,to,byte,array,content,stream
MockPart -> public MockPart(String name, InputStream contentStream) throws IOException;1413848647;Create a new MockPart with the given content._@param name the name of the part_@param contentStream the content of the part as stream_@throws IOException if reading from the stream failed;public MockPart(String name, InputStream contentStream) throws IOException {_		this(name, "", FileCopyUtils.copyToByteArray(contentStream))__	};create,a,new,mock,part,with,the,given,content,param,name,the,name,of,the,part,param,content,stream,the,content,of,the,part,as,stream,throws,ioexception,if,reading,from,the,stream,failed;public,mock,part,string,name,input,stream,content,stream,throws,ioexception,this,name,file,copy,utils,copy,to,byte,array,content,stream
MockPart -> public MockPart(String name, InputStream contentStream) throws IOException;1468513835;Create a new MockPart with the given content._@param name the name of the part_@param contentStream the content of the part as stream_@throws IOException if reading from the stream failed;public MockPart(String name, InputStream contentStream) throws IOException {_		this(name, "", FileCopyUtils.copyToByteArray(contentStream))__	};create,a,new,mock,part,with,the,given,content,param,name,the,name,of,the,part,param,content,stream,the,content,of,the,part,as,stream,throws,ioexception,if,reading,from,the,stream,failed;public,mock,part,string,name,input,stream,content,stream,throws,ioexception,this,name,file,copy,utils,copy,to,byte,array,content,stream
MockPart -> public MockPart(String name, String filename, InputStream content) throws IOException;1485381925;Constructor for a part with a filename.;public MockPart(String name, String filename, InputStream content) throws IOException {_		this(name, filename, FileCopyUtils.copyToByteArray(content))__	};constructor,for,a,part,with,a,filename;public,mock,part,string,name,string,filename,input,stream,content,throws,ioexception,this,name,filename,file,copy,utils,copy,to,byte,array,content
MockPart -> public MockPart(String name, String filename, InputStream content) throws IOException;1504882582;Constructor for a part with a filename and streamed content._@see #getHeaders();public MockPart(String name, String filename, InputStream content) throws IOException {_		this(name, filename, FileCopyUtils.copyToByteArray(content))__	};constructor,for,a,part,with,a,filename,and,streamed,content,see,get,headers;public,mock,part,string,name,string,filename,input,stream,content,throws,ioexception,this,name,filename,file,copy,utils,copy,to,byte,array,content
MockPart -> public final HttpHeaders getHeaders();1505897706;Return the {@link HttpHeaders} backing header related accessor methods,_allowing for populating selected header entries.;public final HttpHeaders getHeaders() {_		return this.headers__	};return,the,link,http,headers,backing,header,related,accessor,methods,allowing,for,populating,selected,header,entries;public,final,http,headers,get,headers,return,this,headers
MockPart -> public final HttpHeaders getHeaders();1524664746;Return the {@link HttpHeaders} backing header related accessor methods,_allowing for populating selected header entries.;public final HttpHeaders getHeaders() {_		return this.headers__	};return,the,link,http,headers,backing,header,related,accessor,methods,allowing,for,populating,selected,header,entries;public,final,http,headers,get,headers,return,this,headers
MockPart -> public final HttpHeaders getHeaders();1537706655;Return the {@link HttpHeaders} backing header related accessor methods,_allowing for populating selected header entries.;public final HttpHeaders getHeaders() {_		return this.headers__	};return,the,link,http,headers,backing,header,related,accessor,methods,allowing,for,populating,selected,header,entries;public,final,http,headers,get,headers,return,this,headers
MockPart -> public MockPart(String name, String contentType, byte[] content);1354292158;Create a new MockPart with the given content._@param name the name of the file_@param contentType the content type (if known)_@param content the content of the file;public MockPart(String name, String contentType, byte[] content) {_		Assert.hasLength(name, "Name must not be null")__		this.name = name__		this.contentType = contentType__		this.content = (content != null ? content : new byte[0])__	};create,a,new,mock,part,with,the,given,content,param,name,the,name,of,the,file,param,content,type,the,content,type,if,known,param,content,the,content,of,the,file;public,mock,part,string,name,string,content,type,byte,content,assert,has,length,name,name,must,not,be,null,this,name,name,this,content,type,content,type,this,content,content,null,content,new,byte,0
MockPart -> public MockPart(String name, String contentType, byte[] content);1356735495;Create a new MockPart with the given content._@param name the name of the file_@param contentType the content type (if known)_@param content the content of the file;public MockPart(String name, String contentType, byte[] content) {_		Assert.hasLength(name, "Name must not be null")__		this.name = name__		this.contentType = contentType__		this.content = (content != null ? content : new byte[0])__	};create,a,new,mock,part,with,the,given,content,param,name,the,name,of,the,file,param,content,type,the,content,type,if,known,param,content,the,content,of,the,file;public,mock,part,string,name,string,content,type,byte,content,assert,has,length,name,name,must,not,be,null,this,name,name,this,content,type,content,type,this,content,content,null,content,new,byte,0
MockPart -> public MockPart(String name, String contentType, byte[] content);1413848647;Create a new MockPart with the given content._@param name the name of the file_@param contentType the content type (if known)_@param content the content of the file;public MockPart(String name, String contentType, byte[] content) {_		Assert.hasLength(name, "Name must not be null")__		this.name = name__		this.contentType = contentType__		this.content = (content != null ? content : new byte[0])__	};create,a,new,mock,part,with,the,given,content,param,name,the,name,of,the,file,param,content,type,the,content,type,if,known,param,content,the,content,of,the,file;public,mock,part,string,name,string,content,type,byte,content,assert,has,length,name,name,must,not,be,null,this,name,name,this,content,type,content,type,this,content,content,null,content,new,byte,0
MockPart -> public MockPart(String name, String contentType, byte[] content);1468513835;Create a new MockPart with the given content._@param name the name of the file_@param contentType the content type (if known)_@param content the content of the file;public MockPart(String name, String contentType, byte[] content) {_		Assert.hasLength(name, "Name must not be null")__		this.name = name__		this.contentType = contentType__		this.content = (content != null ? content : new byte[0])__	};create,a,new,mock,part,with,the,given,content,param,name,the,name,of,the,file,param,content,type,the,content,type,if,known,param,content,the,content,of,the,file;public,mock,part,string,name,string,content,type,byte,content,assert,has,length,name,name,must,not,be,null,this,name,name,this,content,type,content,type,this,content,content,null,content,new,byte,0
MockPart -> private MockPart(String name, String filename, byte[] content);1485381925;Constructor for a part with byte[] content only._@see #getHeaders();private MockPart(String name, String filename, byte[] content) {_		Assert.hasLength(name, "Name must not be null")__		this.name = name__		this.filename = filename__		this.content = (content != null ? content : new byte[0])__		this.headers.setContentDispositionFormData(name, filename)__	};constructor,for,a,part,with,byte,content,only,see,get,headers;private,mock,part,string,name,string,filename,byte,content,assert,has,length,name,name,must,not,be,null,this,name,name,this,filename,filename,this,content,content,null,content,new,byte,0,this,headers,set,content,disposition,form,data,name,filename
MockPart -> private MockPart(String name, String filename, byte[] content);1504882582;Constructor for a part with a filename and byte[] content._@see #getHeaders();private MockPart(String name, String filename, byte[] content) {_		Assert.hasLength(name, "Name must not be null")__		this.name = name__		this.filename = filename__		this.content = (content != null ? content : new byte[0])__		this.headers.setContentDispositionFormData(name, filename)__	};constructor,for,a,part,with,a,filename,and,byte,content,see,get,headers;private,mock,part,string,name,string,filename,byte,content,assert,has,length,name,name,must,not,be,null,this,name,name,this,filename,filename,this,content,content,null,content,new,byte,0,this,headers,set,content,disposition,form,data,name,filename
