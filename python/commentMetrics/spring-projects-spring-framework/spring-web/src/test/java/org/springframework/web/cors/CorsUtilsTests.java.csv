commented;modifiers;parameterAmount;loc;comment;code
false;public;0;6;;@Test public void isCorsRequest() {     MockHttpServletRequest request = new MockHttpServletRequest().     request.addHeader(HttpHeaders.ORIGIN, "http://domain.com").     assertTrue(CorsUtils.isCorsRequest(request)). }
false;public;0;5;;@Test public void isNotCorsRequest() {     MockHttpServletRequest request = new MockHttpServletRequest().     assertFalse(CorsUtils.isCorsRequest(request)). }
false;public;0;8;;@Test public void isPreFlightRequest() {     MockHttpServletRequest request = new MockHttpServletRequest().     request.setMethod(HttpMethod.OPTIONS.name()).     request.addHeader(HttpHeaders.ORIGIN, "http://domain.com").     request.addHeader(HttpHeaders.ACCESS_CONTROL_REQUEST_METHOD, "GET").     assertTrue(CorsUtils.isPreFlightRequest(request)). }
false;public;0;15;;@Test public void isNotPreFlightRequest() {     MockHttpServletRequest request = new MockHttpServletRequest().     assertFalse(CorsUtils.isPreFlightRequest(request)).     request = new MockHttpServletRequest().     request.setMethod(HttpMethod.OPTIONS.name()).     request.addHeader(HttpHeaders.ORIGIN, "http://domain.com").     assertFalse(CorsUtils.isPreFlightRequest(request)).     request = new MockHttpServletRequest().     request.setMethod(HttpMethod.OPTIONS.name()).     request.addHeader(HttpHeaders.ACCESS_CONTROL_REQUEST_METHOD, "GET").     assertFalse(CorsUtils.isPreFlightRequest(request)). }
