# id;timestamp;commentText;codeText;commentWords;codeWords
MockHttpSession -> public void clearAttributes();1354292158;Clear all of this session's attributes.;public void clearAttributes() {_		for (Iterator<Map.Entry<String, Object>> it = this.attributes.entrySet().iterator()_ it.hasNext()_) {_			Map.Entry<String, Object> entry = it.next()__			String name = entry.getKey()__			Object value = entry.getValue()__			it.remove()__			if (value instanceof HttpSessionBindingListener) {_				((HttpSessionBindingListener) value).valueUnbound(new HttpSessionBindingEvent(this, name, value))__			}_		}_	};clear,all,of,this,session,s,attributes;public,void,clear,attributes,for,iterator,map,entry,string,object,it,this,attributes,entry,set,iterator,it,has,next,map,entry,string,object,entry,it,next,string,name,entry,get,key,object,value,entry,get,value,it,remove,if,value,instanceof,http,session,binding,listener,http,session,binding,listener,value,value,unbound,new,http,session,binding,event,this,name,value
MockHttpSession -> public void clearAttributes();1356735495;Clear all of this session's attributes.;public void clearAttributes() {_		for (Iterator<Map.Entry<String, Object>> it = this.attributes.entrySet().iterator()_ it.hasNext()_) {_			Map.Entry<String, Object> entry = it.next()__			String name = entry.getKey()__			Object value = entry.getValue()__			it.remove()__			if (value instanceof HttpSessionBindingListener) {_				((HttpSessionBindingListener) value).valueUnbound(new HttpSessionBindingEvent(this, name, value))__			}_		}_	};clear,all,of,this,session,s,attributes;public,void,clear,attributes,for,iterator,map,entry,string,object,it,this,attributes,entry,set,iterator,it,has,next,map,entry,string,object,entry,it,next,string,name,entry,get,key,object,value,entry,get,value,it,remove,if,value,instanceof,http,session,binding,listener,http,session,binding,listener,value,value,unbound,new,http,session,binding,event,this,name,value
MockHttpSession -> public void clearAttributes();1383216675;Clear all of this session's attributes.;public void clearAttributes() {_		for (Iterator<Map.Entry<String, Object>> it = this.attributes.entrySet().iterator()_ it.hasNext()_) {_			Map.Entry<String, Object> entry = it.next()__			String name = entry.getKey()__			Object value = entry.getValue()__			it.remove()__			if (value instanceof HttpSessionBindingListener) {_				((HttpSessionBindingListener) value).valueUnbound(new HttpSessionBindingEvent(this, name, value))__			}_		}_	};clear,all,of,this,session,s,attributes;public,void,clear,attributes,for,iterator,map,entry,string,object,it,this,attributes,entry,set,iterator,it,has,next,map,entry,string,object,entry,it,next,string,name,entry,get,key,object,value,entry,get,value,it,remove,if,value,instanceof,http,session,binding,listener,http,session,binding,listener,value,value,unbound,new,http,session,binding,event,this,name,value
MockHttpSession -> public void clearAttributes();1391877039;Clear all of this session's attributes.;public void clearAttributes() {_		for (Iterator<Map.Entry<String, Object>> it = this.attributes.entrySet().iterator()_ it.hasNext()_) {_			Map.Entry<String, Object> entry = it.next()__			String name = entry.getKey()__			Object value = entry.getValue()__			it.remove()__			if (value instanceof HttpSessionBindingListener) {_				((HttpSessionBindingListener) value).valueUnbound(new HttpSessionBindingEvent(this, name, value))__			}_		}_	};clear,all,of,this,session,s,attributes;public,void,clear,attributes,for,iterator,map,entry,string,object,it,this,attributes,entry,set,iterator,it,has,next,map,entry,string,object,entry,it,next,string,name,entry,get,key,object,value,entry,get,value,it,remove,if,value,instanceof,http,session,binding,listener,http,session,binding,listener,value,value,unbound,new,http,session,binding,event,this,name,value
MockHttpSession -> public void clearAttributes();1393608497;Clear all of this session's attributes.;public void clearAttributes() {_		for (Iterator<Map.Entry<String, Object>> it = this.attributes.entrySet().iterator()_ it.hasNext()_) {_			Map.Entry<String, Object> entry = it.next()__			String name = entry.getKey()__			Object value = entry.getValue()__			it.remove()__			if (value instanceof HttpSessionBindingListener) {_				((HttpSessionBindingListener) value).valueUnbound(new HttpSessionBindingEvent(this, name, value))__			}_		}_	};clear,all,of,this,session,s,attributes;public,void,clear,attributes,for,iterator,map,entry,string,object,it,this,attributes,entry,set,iterator,it,has,next,map,entry,string,object,entry,it,next,string,name,entry,get,key,object,value,entry,get,value,it,remove,if,value,instanceof,http,session,binding,listener,http,session,binding,listener,value,value,unbound,new,http,session,binding,event,this,name,value
MockHttpSession -> public void clearAttributes();1437330231;Clear all of this session's attributes.;public void clearAttributes() {_		for (Iterator<Map.Entry<String, Object>> it = this.attributes.entrySet().iterator()_ it.hasNext()_) {_			Map.Entry<String, Object> entry = it.next()__			String name = entry.getKey()__			Object value = entry.getValue()__			it.remove()__			if (value instanceof HttpSessionBindingListener) {_				((HttpSessionBindingListener) value).valueUnbound(new HttpSessionBindingEvent(this, name, value))__			}_		}_	};clear,all,of,this,session,s,attributes;public,void,clear,attributes,for,iterator,map,entry,string,object,it,this,attributes,entry,set,iterator,it,has,next,map,entry,string,object,entry,it,next,string,name,entry,get,key,object,value,entry,get,value,it,remove,if,value,instanceof,http,session,binding,listener,http,session,binding,listener,value,value,unbound,new,http,session,binding,event,this,name,value
MockHttpSession -> public void clearAttributes();1467730834;Clear all of this session's attributes.;public void clearAttributes() {_		for (Iterator<Map.Entry<String, Object>> it = this.attributes.entrySet().iterator()_ it.hasNext()_) {_			Map.Entry<String, Object> entry = it.next()__			String name = entry.getKey()__			Object value = entry.getValue()__			it.remove()__			if (value instanceof HttpSessionBindingListener) {_				((HttpSessionBindingListener) value).valueUnbound(new HttpSessionBindingEvent(this, name, value))__			}_		}_	};clear,all,of,this,session,s,attributes;public,void,clear,attributes,for,iterator,map,entry,string,object,it,this,attributes,entry,set,iterator,it,has,next,map,entry,string,object,entry,it,next,string,name,entry,get,key,object,value,entry,get,value,it,remove,if,value,instanceof,http,session,binding,listener,http,session,binding,listener,value,value,unbound,new,http,session,binding,event,this,name,value
MockHttpSession -> public void clearAttributes();1486994819;Clear all of this session's attributes.;public void clearAttributes() {_		for (Iterator<Map.Entry<String, Object>> it = this.attributes.entrySet().iterator()_ it.hasNext()_) {_			Map.Entry<String, Object> entry = it.next()__			String name = entry.getKey()__			Object value = entry.getValue()__			it.remove()__			if (value instanceof HttpSessionBindingListener) {_				((HttpSessionBindingListener) value).valueUnbound(new HttpSessionBindingEvent(this, name, value))__			}_		}_	};clear,all,of,this,session,s,attributes;public,void,clear,attributes,for,iterator,map,entry,string,object,it,this,attributes,entry,set,iterator,it,has,next,map,entry,string,object,entry,it,next,string,name,entry,get,key,object,value,entry,get,value,it,remove,if,value,instanceof,http,session,binding,listener,http,session,binding,listener,value,value,unbound,new,http,session,binding,event,this,name,value
MockHttpSession -> public void clearAttributes();1518810557;Clear all of this session's attributes.;public void clearAttributes() {_		for (Iterator<Map.Entry<String, Object>> it = this.attributes.entrySet().iterator()_ it.hasNext()_) {_			Map.Entry<String, Object> entry = it.next()__			String name = entry.getKey()__			Object value = entry.getValue()__			it.remove()__			if (value instanceof HttpSessionBindingListener) {_				((HttpSessionBindingListener) value).valueUnbound(new HttpSessionBindingEvent(this, name, value))__			}_		}_	};clear,all,of,this,session,s,attributes;public,void,clear,attributes,for,iterator,map,entry,string,object,it,this,attributes,entry,set,iterator,it,has,next,map,entry,string,object,entry,it,next,string,name,entry,get,key,object,value,entry,get,value,it,remove,if,value,instanceof,http,session,binding,listener,http,session,binding,listener,value,value,unbound,new,http,session,binding,event,this,name,value
MockHttpSession -> public void clearAttributes();1533121661;Clear all of this session's attributes.;public void clearAttributes() {_		for (Iterator<Map.Entry<String, Object>> it = this.attributes.entrySet().iterator()_ it.hasNext()_) {_			Map.Entry<String, Object> entry = it.next()__			String name = entry.getKey()__			Object value = entry.getValue()__			it.remove()__			if (value instanceof HttpSessionBindingListener) {_				((HttpSessionBindingListener) value).valueUnbound(new HttpSessionBindingEvent(this, name, value))__			}_		}_	};clear,all,of,this,session,s,attributes;public,void,clear,attributes,for,iterator,map,entry,string,object,it,this,attributes,entry,set,iterator,it,has,next,map,entry,string,object,entry,it,next,string,name,entry,get,key,object,value,entry,get,value,it,remove,if,value,instanceof,http,session,binding,listener,http,session,binding,listener,value,value,unbound,new,http,session,binding,event,this,name,value
MockHttpSession -> public void clearAttributes();1533121895;Clear all of this session's attributes.;public void clearAttributes() {_		for (Iterator<Map.Entry<String, Object>> it = this.attributes.entrySet().iterator()_ it.hasNext()_) {_			Map.Entry<String, Object> entry = it.next()__			String name = entry.getKey()__			Object value = entry.getValue()__			it.remove()__			if (value instanceof HttpSessionBindingListener) {_				((HttpSessionBindingListener) value).valueUnbound(new HttpSessionBindingEvent(this, name, value))__			}_		}_	};clear,all,of,this,session,s,attributes;public,void,clear,attributes,for,iterator,map,entry,string,object,it,this,attributes,entry,set,iterator,it,has,next,map,entry,string,object,entry,it,next,string,name,entry,get,key,object,value,entry,get,value,it,remove,if,value,instanceof,http,session,binding,listener,http,session,binding,listener,value,value,unbound,new,http,session,binding,event,this,name,value
MockHttpSession -> public void clearAttributes();1537706655;Clear all of this session's attributes.;public void clearAttributes() {_		for (Iterator<Map.Entry<String, Object>> it = this.attributes.entrySet().iterator()_ it.hasNext()_) {_			Map.Entry<String, Object> entry = it.next()__			String name = entry.getKey()__			Object value = entry.getValue()__			it.remove()__			if (value instanceof HttpSessionBindingListener) {_				((HttpSessionBindingListener) value).valueUnbound(new HttpSessionBindingEvent(this, name, value))__			}_		}_	};clear,all,of,this,session,s,attributes;public,void,clear,attributes,for,iterator,map,entry,string,object,it,this,attributes,entry,set,iterator,it,has,next,map,entry,string,object,entry,it,next,string,name,entry,get,key,object,value,entry,get,value,it,remove,if,value,instanceof,http,session,binding,listener,http,session,binding,listener,value,value,unbound,new,http,session,binding,event,this,name,value
MockHttpSession -> @Override 	public void invalidate();1356735495;Invalidates this session then unbinds any objects bound to it.__@throws IllegalStateException if this method is called on an already invalidated session;@Override_	public void invalidate() {_		if (this.invalid) {_			throw new IllegalStateException("The session has already been invalidated")__		}__		_		this.invalid = true__		clearAttributes()__	};invalidates,this,session,then,unbinds,any,objects,bound,to,it,throws,illegal,state,exception,if,this,method,is,called,on,an,already,invalidated,session;override,public,void,invalidate,if,this,invalid,throw,new,illegal,state,exception,the,session,has,already,been,invalidated,this,invalid,true,clear,attributes
MockHttpSession -> @Override 	public void invalidate();1383216675;Invalidates this session then unbinds any objects bound to it.__@throws IllegalStateException if this method is called on an already invalidated session;@Override_	public void invalidate() {_		assertIsValid()__		this.invalid = true__		clearAttributes()__	};invalidates,this,session,then,unbinds,any,objects,bound,to,it,throws,illegal,state,exception,if,this,method,is,called,on,an,already,invalidated,session;override,public,void,invalidate,assert,is,valid,this,invalid,true,clear,attributes
MockHttpSession -> @Override 	public void invalidate();1391877039;Invalidates this session then unbinds any objects bound to it.__@throws IllegalStateException if this method is called on an already invalidated session;@Override_	public void invalidate() {_		assertIsValid()__		this.invalid = true__		clearAttributes()__	};invalidates,this,session,then,unbinds,any,objects,bound,to,it,throws,illegal,state,exception,if,this,method,is,called,on,an,already,invalidated,session;override,public,void,invalidate,assert,is,valid,this,invalid,true,clear,attributes
MockHttpSession -> @Override 	public void invalidate();1393608497;Invalidates this session then unbinds any objects bound to it.__@throws IllegalStateException if this method is called on an already invalidated session;@Override_	public void invalidate() {_		assertIsValid()__		this.invalid = true__		clearAttributes()__	};invalidates,this,session,then,unbinds,any,objects,bound,to,it,throws,illegal,state,exception,if,this,method,is,called,on,an,already,invalidated,session;override,public,void,invalidate,assert,is,valid,this,invalid,true,clear,attributes
MockHttpSession -> @Override 	public void invalidate();1437330231;Invalidates this session then unbinds any objects bound to it.__@throws IllegalStateException if this method is called on an already invalidated session;@Override_	public void invalidate() {_		assertIsValid()__		this.invalid = true__		clearAttributes()__	};invalidates,this,session,then,unbinds,any,objects,bound,to,it,throws,illegal,state,exception,if,this,method,is,called,on,an,already,invalidated,session;override,public,void,invalidate,assert,is,valid,this,invalid,true,clear,attributes
MockHttpSession -> @Override 	public void invalidate();1467730834;Invalidates this session then unbinds any objects bound to it.__@throws IllegalStateException if this method is called on an already invalidated session;@Override_	public void invalidate() {_		assertIsValid()__		this.invalid = true__		clearAttributes()__	};invalidates,this,session,then,unbinds,any,objects,bound,to,it,throws,illegal,state,exception,if,this,method,is,called,on,an,already,invalidated,session;override,public,void,invalidate,assert,is,valid,this,invalid,true,clear,attributes
MockHttpSession -> @Override 	public void invalidate();1486994819;Invalidates this session then unbinds any objects bound to it._@throws IllegalStateException if this method is called on an already invalidated session;@Override_	public void invalidate() {_		assertIsValid()__		this.invalid = true__		clearAttributes()__	};invalidates,this,session,then,unbinds,any,objects,bound,to,it,throws,illegal,state,exception,if,this,method,is,called,on,an,already,invalidated,session;override,public,void,invalidate,assert,is,valid,this,invalid,true,clear,attributes
MockHttpSession -> @Override 	public void invalidate();1518810557;Invalidates this session then unbinds any objects bound to it._@throws IllegalStateException if this method is called on an already invalidated session;@Override_	public void invalidate() {_		assertIsValid()__		this.invalid = true__		clearAttributes()__	};invalidates,this,session,then,unbinds,any,objects,bound,to,it,throws,illegal,state,exception,if,this,method,is,called,on,an,already,invalidated,session;override,public,void,invalidate,assert,is,valid,this,invalid,true,clear,attributes
MockHttpSession -> @Override 	public void invalidate();1533121661;Invalidates this session then unbinds any objects bound to it._@throws IllegalStateException if this method is called on an already invalidated session;@Override_	public void invalidate() {_		assertIsValid()__		this.invalid = true__		clearAttributes()__	};invalidates,this,session,then,unbinds,any,objects,bound,to,it,throws,illegal,state,exception,if,this,method,is,called,on,an,already,invalidated,session;override,public,void,invalidate,assert,is,valid,this,invalid,true,clear,attributes
MockHttpSession -> @Override 	public void invalidate();1533121895;Invalidates this session then unbinds any objects bound to it._@throws IllegalStateException if this method is called on an already invalidated session;@Override_	public void invalidate() {_		assertIsValid()__		this.invalid = true__		clearAttributes()__	};invalidates,this,session,then,unbinds,any,objects,bound,to,it,throws,illegal,state,exception,if,this,method,is,called,on,an,already,invalidated,session;override,public,void,invalidate,assert,is,valid,this,invalid,true,clear,attributes
MockHttpSession -> @Override 	public void invalidate();1537706655;Invalidates this session then unbinds any objects bound to it._@throws IllegalStateException if this method is called on an already invalidated session;@Override_	public void invalidate() {_		assertIsValid()__		this.invalid = true__		clearAttributes()__	};invalidates,this,session,then,unbinds,any,objects,bound,to,it,throws,illegal,state,exception,if,this,method,is,called,on,an,already,invalidated,session;override,public,void,invalidate,assert,is,valid,this,invalid,true,clear,attributes
MockHttpSession -> public MockHttpSession(ServletContext servletContext, String id);1354292158;Create a new MockHttpSession.__@param servletContext the ServletContext that the session runs in_@param id a unique identifier for this session;public MockHttpSession(ServletContext servletContext, String id) {_		this.servletContext = (servletContext != null ? servletContext : new MockServletContext())__		this.id = (id != null ? id : Integer.toString(nextId++))__	};create,a,new,mock,http,session,param,servlet,context,the,servlet,context,that,the,session,runs,in,param,id,a,unique,identifier,for,this,session;public,mock,http,session,servlet,context,servlet,context,string,id,this,servlet,context,servlet,context,null,servlet,context,new,mock,servlet,context,this,id,id,null,id,integer,to,string,next,id
MockHttpSession -> public MockHttpSession(ServletContext servletContext, String id);1356735495;Create a new MockHttpSession.__@param servletContext the ServletContext that the session runs in_@param id a unique identifier for this session;public MockHttpSession(ServletContext servletContext, String id) {_		this.servletContext = (servletContext != null ? servletContext : new MockServletContext())__		this.id = (id != null ? id : Integer.toString(nextId++))__	};create,a,new,mock,http,session,param,servlet,context,the,servlet,context,that,the,session,runs,in,param,id,a,unique,identifier,for,this,session;public,mock,http,session,servlet,context,servlet,context,string,id,this,servlet,context,servlet,context,null,servlet,context,new,mock,servlet,context,this,id,id,null,id,integer,to,string,next,id
MockHttpSession -> public MockHttpSession(ServletContext servletContext, String id);1383216675;Create a new MockHttpSession.__@param servletContext the ServletContext that the session runs in_@param id a unique identifier for this session;public MockHttpSession(ServletContext servletContext, String id) {_		this.servletContext = (servletContext != null ? servletContext : new MockServletContext())__		this.id = (id != null ? id : Integer.toString(nextId++))__	};create,a,new,mock,http,session,param,servlet,context,the,servlet,context,that,the,session,runs,in,param,id,a,unique,identifier,for,this,session;public,mock,http,session,servlet,context,servlet,context,string,id,this,servlet,context,servlet,context,null,servlet,context,new,mock,servlet,context,this,id,id,null,id,integer,to,string,next,id
MockHttpSession -> public MockHttpSession(ServletContext servletContext, String id);1391877039;Create a new MockHttpSession.__@param servletContext the ServletContext that the session runs in_@param id a unique identifier for this session;public MockHttpSession(ServletContext servletContext, String id) {_		this.servletContext = (servletContext != null ? servletContext : new MockServletContext())__		this.id = (id != null ? id : Integer.toString(nextId++))__	};create,a,new,mock,http,session,param,servlet,context,the,servlet,context,that,the,session,runs,in,param,id,a,unique,identifier,for,this,session;public,mock,http,session,servlet,context,servlet,context,string,id,this,servlet,context,servlet,context,null,servlet,context,new,mock,servlet,context,this,id,id,null,id,integer,to,string,next,id
MockHttpSession -> public MockHttpSession(ServletContext servletContext, String id);1393608497;Create a new MockHttpSession.__@param servletContext the ServletContext that the session runs in_@param id a unique identifier for this session;public MockHttpSession(ServletContext servletContext, String id) {_		this.servletContext = (servletContext != null ? servletContext : new MockServletContext())__		this.id = (id != null ? id : Integer.toString(nextId++))__	};create,a,new,mock,http,session,param,servlet,context,the,servlet,context,that,the,session,runs,in,param,id,a,unique,identifier,for,this,session;public,mock,http,session,servlet,context,servlet,context,string,id,this,servlet,context,servlet,context,null,servlet,context,new,mock,servlet,context,this,id,id,null,id,integer,to,string,next,id
MockHttpSession -> public MockHttpSession(ServletContext servletContext, String id);1437330231;Create a new MockHttpSession.__@param servletContext the ServletContext that the session runs in_@param id a unique identifier for this session;public MockHttpSession(ServletContext servletContext, String id) {_		this.servletContext = (servletContext != null ? servletContext : new MockServletContext())__		this.id = (id != null ? id : Integer.toString(nextId++))__	};create,a,new,mock,http,session,param,servlet,context,the,servlet,context,that,the,session,runs,in,param,id,a,unique,identifier,for,this,session;public,mock,http,session,servlet,context,servlet,context,string,id,this,servlet,context,servlet,context,null,servlet,context,new,mock,servlet,context,this,id,id,null,id,integer,to,string,next,id
MockHttpSession -> public MockHttpSession(ServletContext servletContext, String id);1467730834;Create a new MockHttpSession.__@param servletContext the ServletContext that the session runs in_@param id a unique identifier for this session;public MockHttpSession(ServletContext servletContext, String id) {_		this.servletContext = (servletContext != null ? servletContext : new MockServletContext())__		this.id = (id != null ? id : Integer.toString(nextId++))__	};create,a,new,mock,http,session,param,servlet,context,the,servlet,context,that,the,session,runs,in,param,id,a,unique,identifier,for,this,session;public,mock,http,session,servlet,context,servlet,context,string,id,this,servlet,context,servlet,context,null,servlet,context,new,mock,servlet,context,this,id,id,null,id,integer,to,string,next,id
MockHttpSession -> public MockHttpSession(ServletContext servletContext, String id);1486994819;Create a new MockHttpSession._@param servletContext the ServletContext that the session runs in_@param id a unique identifier for this session;public MockHttpSession(ServletContext servletContext, String id) {_		this.servletContext = (servletContext != null ? servletContext : new MockServletContext())__		this.id = (id != null ? id : Integer.toString(nextId++))__	};create,a,new,mock,http,session,param,servlet,context,the,servlet,context,that,the,session,runs,in,param,id,a,unique,identifier,for,this,session;public,mock,http,session,servlet,context,servlet,context,string,id,this,servlet,context,servlet,context,null,servlet,context,new,mock,servlet,context,this,id,id,null,id,integer,to,string,next,id
MockHttpSession -> public MockHttpSession(ServletContext servletContext, String id);1518810557;Create a new MockHttpSession._@param servletContext the ServletContext that the session runs in_@param id a unique identifier for this session;public MockHttpSession(ServletContext servletContext, String id) {_		this.servletContext = (servletContext != null ? servletContext : new MockServletContext())__		this.id = (id != null ? id : Integer.toString(nextId++))__	};create,a,new,mock,http,session,param,servlet,context,the,servlet,context,that,the,session,runs,in,param,id,a,unique,identifier,for,this,session;public,mock,http,session,servlet,context,servlet,context,string,id,this,servlet,context,servlet,context,null,servlet,context,new,mock,servlet,context,this,id,id,null,id,integer,to,string,next,id
MockHttpSession -> public MockHttpSession(ServletContext servletContext, String id);1533121661;Create a new MockHttpSession._@param servletContext the ServletContext that the session runs in_@param id a unique identifier for this session;public MockHttpSession(ServletContext servletContext, String id) {_		this.servletContext = (servletContext != null ? servletContext : new MockServletContext())__		this.id = (id != null ? id : Integer.toString(nextId++))__	};create,a,new,mock,http,session,param,servlet,context,the,servlet,context,that,the,session,runs,in,param,id,a,unique,identifier,for,this,session;public,mock,http,session,servlet,context,servlet,context,string,id,this,servlet,context,servlet,context,null,servlet,context,new,mock,servlet,context,this,id,id,null,id,integer,to,string,next,id
MockHttpSession -> public MockHttpSession(ServletContext servletContext, String id);1533121895;Create a new MockHttpSession._@param servletContext the ServletContext that the session runs in_@param id a unique identifier for this session;public MockHttpSession(ServletContext servletContext, String id) {_		this.servletContext = (servletContext != null ? servletContext : new MockServletContext())__		this.id = (id != null ? id : Integer.toString(nextId++))__	};create,a,new,mock,http,session,param,servlet,context,the,servlet,context,that,the,session,runs,in,param,id,a,unique,identifier,for,this,session;public,mock,http,session,servlet,context,servlet,context,string,id,this,servlet,context,servlet,context,null,servlet,context,new,mock,servlet,context,this,id,id,null,id,integer,to,string,next,id
MockHttpSession -> public MockHttpSession(ServletContext servletContext);1354292158;Create a new MockHttpSession.__@param servletContext the ServletContext that the session runs in;public MockHttpSession(ServletContext servletContext) {_		this(servletContext, null)__	};create,a,new,mock,http,session,param,servlet,context,the,servlet,context,that,the,session,runs,in;public,mock,http,session,servlet,context,servlet,context,this,servlet,context,null
MockHttpSession -> public MockHttpSession(ServletContext servletContext);1356735495;Create a new MockHttpSession.__@param servletContext the ServletContext that the session runs in;public MockHttpSession(ServletContext servletContext) {_		this(servletContext, null)__	};create,a,new,mock,http,session,param,servlet,context,the,servlet,context,that,the,session,runs,in;public,mock,http,session,servlet,context,servlet,context,this,servlet,context,null
MockHttpSession -> public MockHttpSession(ServletContext servletContext);1383216675;Create a new MockHttpSession.__@param servletContext the ServletContext that the session runs in;public MockHttpSession(ServletContext servletContext) {_		this(servletContext, null)__	};create,a,new,mock,http,session,param,servlet,context,the,servlet,context,that,the,session,runs,in;public,mock,http,session,servlet,context,servlet,context,this,servlet,context,null
MockHttpSession -> public MockHttpSession(ServletContext servletContext);1391877039;Create a new MockHttpSession.__@param servletContext the ServletContext that the session runs in;public MockHttpSession(ServletContext servletContext) {_		this(servletContext, null)__	};create,a,new,mock,http,session,param,servlet,context,the,servlet,context,that,the,session,runs,in;public,mock,http,session,servlet,context,servlet,context,this,servlet,context,null
MockHttpSession -> public MockHttpSession(ServletContext servletContext);1393608497;Create a new MockHttpSession.__@param servletContext the ServletContext that the session runs in;public MockHttpSession(ServletContext servletContext) {_		this(servletContext, null)__	};create,a,new,mock,http,session,param,servlet,context,the,servlet,context,that,the,session,runs,in;public,mock,http,session,servlet,context,servlet,context,this,servlet,context,null
MockHttpSession -> public MockHttpSession(ServletContext servletContext);1437330231;Create a new MockHttpSession.__@param servletContext the ServletContext that the session runs in;public MockHttpSession(ServletContext servletContext) {_		this(servletContext, null)__	};create,a,new,mock,http,session,param,servlet,context,the,servlet,context,that,the,session,runs,in;public,mock,http,session,servlet,context,servlet,context,this,servlet,context,null
MockHttpSession -> public MockHttpSession(ServletContext servletContext);1467730834;Create a new MockHttpSession.__@param servletContext the ServletContext that the session runs in;public MockHttpSession(ServletContext servletContext) {_		this(servletContext, null)__	};create,a,new,mock,http,session,param,servlet,context,the,servlet,context,that,the,session,runs,in;public,mock,http,session,servlet,context,servlet,context,this,servlet,context,null
MockHttpSession -> public MockHttpSession(ServletContext servletContext);1486994819;Create a new MockHttpSession._@param servletContext the ServletContext that the session runs in;public MockHttpSession(ServletContext servletContext) {_		this(servletContext, null)__	};create,a,new,mock,http,session,param,servlet,context,the,servlet,context,that,the,session,runs,in;public,mock,http,session,servlet,context,servlet,context,this,servlet,context,null
MockHttpSession -> public MockHttpSession(ServletContext servletContext);1518810557;Create a new MockHttpSession._@param servletContext the ServletContext that the session runs in;public MockHttpSession(ServletContext servletContext) {_		this(servletContext, null)__	};create,a,new,mock,http,session,param,servlet,context,the,servlet,context,that,the,session,runs,in;public,mock,http,session,servlet,context,servlet,context,this,servlet,context,null
MockHttpSession -> public MockHttpSession(ServletContext servletContext);1533121661;Create a new MockHttpSession._@param servletContext the ServletContext that the session runs in;public MockHttpSession(ServletContext servletContext) {_		this(servletContext, null)__	};create,a,new,mock,http,session,param,servlet,context,the,servlet,context,that,the,session,runs,in;public,mock,http,session,servlet,context,servlet,context,this,servlet,context,null
MockHttpSession -> public MockHttpSession(ServletContext servletContext);1533121895;Create a new MockHttpSession._@param servletContext the ServletContext that the session runs in;public MockHttpSession(ServletContext servletContext) {_		this(servletContext, null)__	};create,a,new,mock,http,session,param,servlet,context,the,servlet,context,that,the,session,runs,in;public,mock,http,session,servlet,context,servlet,context,this,servlet,context,null
MockHttpSession -> @SuppressWarnings("unchecked") 	public void deserializeState(Serializable state);1354292158;Deserialize the attributes of this session from a state object created by_{@link #serializeState()}.__@param state a representation of this session's serialized state;@SuppressWarnings("unchecked")_	public void deserializeState(Serializable state) {_		Assert.isTrue(state instanceof Map, "Serialized state needs to be of type [java.util.Map]")__		this.attributes.putAll((Map<String, Object>) state)__	};deserialize,the,attributes,of,this,session,from,a,state,object,created,by,link,serialize,state,param,state,a,representation,of,this,session,s,serialized,state;suppress,warnings,unchecked,public,void,deserialize,state,serializable,state,assert,is,true,state,instanceof,map,serialized,state,needs,to,be,of,type,java,util,map,this,attributes,put,all,map,string,object,state
MockHttpSession -> @SuppressWarnings("unchecked") 	public void deserializeState(Serializable state);1356735495;Deserialize the attributes of this session from a state object created by_{@link #serializeState()}.__@param state a representation of this session's serialized state;@SuppressWarnings("unchecked")_	public void deserializeState(Serializable state) {_		Assert.isTrue(state instanceof Map, "Serialized state needs to be of type [java.util.Map]")__		this.attributes.putAll((Map<String, Object>) state)__	};deserialize,the,attributes,of,this,session,from,a,state,object,created,by,link,serialize,state,param,state,a,representation,of,this,session,s,serialized,state;suppress,warnings,unchecked,public,void,deserialize,state,serializable,state,assert,is,true,state,instanceof,map,serialized,state,needs,to,be,of,type,java,util,map,this,attributes,put,all,map,string,object,state
MockHttpSession -> @SuppressWarnings("unchecked") 	public void deserializeState(Serializable state);1383216675;Deserialize the attributes of this session from a state object created by_{@link #serializeState()}.__@param state a representation of this session's serialized state;@SuppressWarnings("unchecked")_	public void deserializeState(Serializable state) {_		Assert.isTrue(state instanceof Map, "Serialized state needs to be of type [java.util.Map]")__		this.attributes.putAll((Map<String, Object>) state)__	};deserialize,the,attributes,of,this,session,from,a,state,object,created,by,link,serialize,state,param,state,a,representation,of,this,session,s,serialized,state;suppress,warnings,unchecked,public,void,deserialize,state,serializable,state,assert,is,true,state,instanceof,map,serialized,state,needs,to,be,of,type,java,util,map,this,attributes,put,all,map,string,object,state
MockHttpSession -> @SuppressWarnings("unchecked") 	public void deserializeState(Serializable state);1391877039;Deserialize the attributes of this session from a state object created by_{@link #serializeState()}.__@param state a representation of this session's serialized state;@SuppressWarnings("unchecked")_	public void deserializeState(Serializable state) {_		Assert.isTrue(state instanceof Map, "Serialized state needs to be of type [java.util.Map]")__		this.attributes.putAll((Map<String, Object>) state)__	};deserialize,the,attributes,of,this,session,from,a,state,object,created,by,link,serialize,state,param,state,a,representation,of,this,session,s,serialized,state;suppress,warnings,unchecked,public,void,deserialize,state,serializable,state,assert,is,true,state,instanceof,map,serialized,state,needs,to,be,of,type,java,util,map,this,attributes,put,all,map,string,object,state
MockHttpSession -> @SuppressWarnings("unchecked") 	public void deserializeState(Serializable state);1393608497;Deserialize the attributes of this session from a state object created by_{@link #serializeState()}.__@param state a representation of this session's serialized state;@SuppressWarnings("unchecked")_	public void deserializeState(Serializable state) {_		Assert.isTrue(state instanceof Map, "Serialized state needs to be of type [java.util.Map]")__		this.attributes.putAll((Map<String, Object>) state)__	};deserialize,the,attributes,of,this,session,from,a,state,object,created,by,link,serialize,state,param,state,a,representation,of,this,session,s,serialized,state;suppress,warnings,unchecked,public,void,deserialize,state,serializable,state,assert,is,true,state,instanceof,map,serialized,state,needs,to,be,of,type,java,util,map,this,attributes,put,all,map,string,object,state
MockHttpSession -> @SuppressWarnings("unchecked") 	public void deserializeState(Serializable state);1437330231;Deserialize the attributes of this session from a state object created by_{@link #serializeState()}.__@param state a representation of this session's serialized state;@SuppressWarnings("unchecked")_	public void deserializeState(Serializable state) {_		Assert.isTrue(state instanceof Map, "Serialized state needs to be of type [java.util.Map]")__		this.attributes.putAll((Map<String, Object>) state)__	};deserialize,the,attributes,of,this,session,from,a,state,object,created,by,link,serialize,state,param,state,a,representation,of,this,session,s,serialized,state;suppress,warnings,unchecked,public,void,deserialize,state,serializable,state,assert,is,true,state,instanceof,map,serialized,state,needs,to,be,of,type,java,util,map,this,attributes,put,all,map,string,object,state
MockHttpSession -> @SuppressWarnings("unchecked") 	public void deserializeState(Serializable state);1467730834;Deserialize the attributes of this session from a state object created by_{@link #serializeState()}.__@param state a representation of this session's serialized state;@SuppressWarnings("unchecked")_	public void deserializeState(Serializable state) {_		Assert.isTrue(state instanceof Map, "Serialized state needs to be of type [java.util.Map]")__		this.attributes.putAll((Map<String, Object>) state)__	};deserialize,the,attributes,of,this,session,from,a,state,object,created,by,link,serialize,state,param,state,a,representation,of,this,session,s,serialized,state;suppress,warnings,unchecked,public,void,deserialize,state,serializable,state,assert,is,true,state,instanceof,map,serialized,state,needs,to,be,of,type,java,util,map,this,attributes,put,all,map,string,object,state
MockHttpSession -> @SuppressWarnings("unchecked") 	public void deserializeState(Serializable state);1486994819;Deserialize the attributes of this session from a state object created by_{@link #serializeState()}._@param state a representation of this session's serialized state;@SuppressWarnings("unchecked")_	public void deserializeState(Serializable state) {_		Assert.isTrue(state instanceof Map, "Serialized state needs to be of type [java.util.Map]")__		this.attributes.putAll((Map<String, Object>) state)__	};deserialize,the,attributes,of,this,session,from,a,state,object,created,by,link,serialize,state,param,state,a,representation,of,this,session,s,serialized,state;suppress,warnings,unchecked,public,void,deserialize,state,serializable,state,assert,is,true,state,instanceof,map,serialized,state,needs,to,be,of,type,java,util,map,this,attributes,put,all,map,string,object,state
MockHttpSession -> @SuppressWarnings("unchecked") 	public void deserializeState(Serializable state);1518810557;Deserialize the attributes of this session from a state object created by_{@link #serializeState()}._@param state a representation of this session's serialized state;@SuppressWarnings("unchecked")_	public void deserializeState(Serializable state) {_		Assert.isTrue(state instanceof Map, "Serialized state needs to be of type [java.util.Map]")__		this.attributes.putAll((Map<String, Object>) state)__	};deserialize,the,attributes,of,this,session,from,a,state,object,created,by,link,serialize,state,param,state,a,representation,of,this,session,s,serialized,state;suppress,warnings,unchecked,public,void,deserialize,state,serializable,state,assert,is,true,state,instanceof,map,serialized,state,needs,to,be,of,type,java,util,map,this,attributes,put,all,map,string,object,state
MockHttpSession -> @SuppressWarnings("unchecked") 	public void deserializeState(Serializable state);1533121661;Deserialize the attributes of this session from a state object created by_{@link #serializeState()}._@param state a representation of this session's serialized state;@SuppressWarnings("unchecked")_	public void deserializeState(Serializable state) {_		Assert.isTrue(state instanceof Map, "Serialized state needs to be of type [java.util.Map]")__		this.attributes.putAll((Map<String, Object>) state)__	};deserialize,the,attributes,of,this,session,from,a,state,object,created,by,link,serialize,state,param,state,a,representation,of,this,session,s,serialized,state;suppress,warnings,unchecked,public,void,deserialize,state,serializable,state,assert,is,true,state,instanceof,map,serialized,state,needs,to,be,of,type,java,util,map,this,attributes,put,all,map,string,object,state
MockHttpSession -> @SuppressWarnings("unchecked") 	public void deserializeState(Serializable state);1533121895;Deserialize the attributes of this session from a state object created by_{@link #serializeState()}._@param state a representation of this session's serialized state;@SuppressWarnings("unchecked")_	public void deserializeState(Serializable state) {_		Assert.isTrue(state instanceof Map, "Serialized state needs to be of type [java.util.Map]")__		this.attributes.putAll((Map<String, Object>) state)__	};deserialize,the,attributes,of,this,session,from,a,state,object,created,by,link,serialize,state,param,state,a,representation,of,this,session,s,serialized,state;suppress,warnings,unchecked,public,void,deserialize,state,serializable,state,assert,is,true,state,instanceof,map,serialized,state,needs,to,be,of,type,java,util,map,this,attributes,put,all,map,string,object,state
MockHttpSession -> @SuppressWarnings("unchecked") 	public void deserializeState(Serializable state);1537706655;Deserialize the attributes of this session from a state object created by_{@link #serializeState()}._@param state a representation of this session's serialized state;@SuppressWarnings("unchecked")_	public void deserializeState(Serializable state) {_		Assert.isTrue(state instanceof Map, "Serialized state needs to be of type [java.util.Map]")__		this.attributes.putAll((Map<String, Object>) state)__	};deserialize,the,attributes,of,this,session,from,a,state,object,created,by,link,serialize,state,param,state,a,representation,of,this,session,s,serialized,state;suppress,warnings,unchecked,public,void,deserialize,state,serializable,state,assert,is,true,state,instanceof,map,serialized,state,needs,to,be,of,type,java,util,map,this,attributes,put,all,map,string,object,state
MockHttpSession -> public String changeSessionId();1393608497;As of Servlet 3.1 the id of a session can be changed._@return the new session id._@since 4.0.3;public String changeSessionId() {_		this.id = Integer.toString(nextId++)__		return this.id__	};as,of,servlet,3,1,the,id,of,a,session,can,be,changed,return,the,new,session,id,since,4,0,3;public,string,change,session,id,this,id,integer,to,string,next,id,return,this,id
MockHttpSession -> public String changeSessionId();1437330231;As of Servlet 3.1 the id of a session can be changed._@return the new session id._@since 4.0.3;public String changeSessionId() {_		this.id = Integer.toString(nextId++)__		return this.id__	};as,of,servlet,3,1,the,id,of,a,session,can,be,changed,return,the,new,session,id,since,4,0,3;public,string,change,session,id,this,id,integer,to,string,next,id,return,this,id
MockHttpSession -> public String changeSessionId();1467730834;As of Servlet 3.1 the id of a session can be changed._@return the new session id._@since 4.0.3;public String changeSessionId() {_		this.id = Integer.toString(nextId++)__		return this.id__	};as,of,servlet,3,1,the,id,of,a,session,can,be,changed,return,the,new,session,id,since,4,0,3;public,string,change,session,id,this,id,integer,to,string,next,id,return,this,id
MockHttpSession -> public String changeSessionId();1486994819;As of Servlet 3.1, the id of a session can be changed._@return the new session id_@since 4.0.3;public String changeSessionId() {_		this.id = Integer.toString(nextId++)__		return this.id__	};as,of,servlet,3,1,the,id,of,a,session,can,be,changed,return,the,new,session,id,since,4,0,3;public,string,change,session,id,this,id,integer,to,string,next,id,return,this,id
MockHttpSession -> public String changeSessionId();1518810557;As of Servlet 3.1, the id of a session can be changed._@return the new session id_@since 4.0.3;public String changeSessionId() {_		this.id = Integer.toString(nextId++)__		return this.id__	};as,of,servlet,3,1,the,id,of,a,session,can,be,changed,return,the,new,session,id,since,4,0,3;public,string,change,session,id,this,id,integer,to,string,next,id,return,this,id
MockHttpSession -> public String changeSessionId();1533121661;As of Servlet 3.1, the id of a session can be changed._@return the new session id_@since 4.0.3;public String changeSessionId() {_		this.id = Integer.toString(nextId++)__		return this.id__	};as,of,servlet,3,1,the,id,of,a,session,can,be,changed,return,the,new,session,id,since,4,0,3;public,string,change,session,id,this,id,integer,to,string,next,id,return,this,id
MockHttpSession -> public String changeSessionId();1533121895;As of Servlet 3.1, the id of a session can be changed._@return the new session id_@since 4.0.3;public String changeSessionId() {_		this.id = Integer.toString(nextId++)__		return this.id__	};as,of,servlet,3,1,the,id,of,a,session,can,be,changed,return,the,new,session,id,since,4,0,3;public,string,change,session,id,this,id,integer,to,string,next,id,return,this,id
MockHttpSession -> public String changeSessionId();1537706655;As of Servlet 3.1, the id of a session can be changed._@return the new session id_@since 4.0.3;public String changeSessionId() {_		this.id = Integer.toString(nextId++)__		return this.id__	};as,of,servlet,3,1,the,id,of,a,session,can,be,changed,return,the,new,session,id,since,4,0,3;public,string,change,session,id,this,id,integer,to,string,next,id,return,this,id
MockHttpSession -> public MockHttpSession();1354292158;Create a new MockHttpSession with a default {@link MockServletContext}.__@see MockServletContext;public MockHttpSession() {_		this(null)__	};create,a,new,mock,http,session,with,a,default,link,mock,servlet,context,see,mock,servlet,context;public,mock,http,session,this,null
MockHttpSession -> public MockHttpSession();1356735495;Create a new MockHttpSession with a default {@link MockServletContext}.__@see MockServletContext;public MockHttpSession() {_		this(null)__	};create,a,new,mock,http,session,with,a,default,link,mock,servlet,context,see,mock,servlet,context;public,mock,http,session,this,null
MockHttpSession -> public MockHttpSession();1383216675;Create a new MockHttpSession with a default {@link MockServletContext}.__@see MockServletContext;public MockHttpSession() {_		this(null)__	};create,a,new,mock,http,session,with,a,default,link,mock,servlet,context,see,mock,servlet,context;public,mock,http,session,this,null
MockHttpSession -> public MockHttpSession();1391877039;Create a new MockHttpSession with a default {@link MockServletContext}.__@see MockServletContext;public MockHttpSession() {_		this(null)__	};create,a,new,mock,http,session,with,a,default,link,mock,servlet,context,see,mock,servlet,context;public,mock,http,session,this,null
MockHttpSession -> public MockHttpSession();1393608497;Create a new MockHttpSession with a default {@link MockServletContext}.__@see MockServletContext;public MockHttpSession() {_		this(null)__	};create,a,new,mock,http,session,with,a,default,link,mock,servlet,context,see,mock,servlet,context;public,mock,http,session,this,null
MockHttpSession -> public MockHttpSession();1437330231;Create a new MockHttpSession with a default {@link MockServletContext}.__@see MockServletContext;public MockHttpSession() {_		this(null)__	};create,a,new,mock,http,session,with,a,default,link,mock,servlet,context,see,mock,servlet,context;public,mock,http,session,this,null
MockHttpSession -> public MockHttpSession();1467730834;Create a new MockHttpSession with a default {@link MockServletContext}.__@see MockServletContext;public MockHttpSession() {_		this(null)__	};create,a,new,mock,http,session,with,a,default,link,mock,servlet,context,see,mock,servlet,context;public,mock,http,session,this,null
MockHttpSession -> public MockHttpSession();1486994819;Create a new MockHttpSession with a default {@link MockServletContext}._@see MockServletContext;public MockHttpSession() {_		this(null)__	};create,a,new,mock,http,session,with,a,default,link,mock,servlet,context,see,mock,servlet,context;public,mock,http,session,this,null
MockHttpSession -> public MockHttpSession();1518810557;Create a new MockHttpSession with a default {@link MockServletContext}._@see MockServletContext;public MockHttpSession() {_		this(null)__	};create,a,new,mock,http,session,with,a,default,link,mock,servlet,context,see,mock,servlet,context;public,mock,http,session,this,null
MockHttpSession -> public MockHttpSession();1533121661;Create a new MockHttpSession with a default {@link MockServletContext}._@see MockServletContext;public MockHttpSession() {_		this(null)__	};create,a,new,mock,http,session,with,a,default,link,mock,servlet,context,see,mock,servlet,context;public,mock,http,session,this,null
MockHttpSession -> public MockHttpSession();1533121895;Create a new MockHttpSession with a default {@link MockServletContext}._@see MockServletContext;public MockHttpSession() {_		this(null)__	};create,a,new,mock,http,session,with,a,default,link,mock,servlet,context,see,mock,servlet,context;public,mock,http,session,this,null
MockHttpSession -> public MockHttpSession();1537706655;Create a new MockHttpSession with a default {@link MockServletContext}._@see MockServletContext;public MockHttpSession() {_		this(null)__	};create,a,new,mock,http,session,with,a,default,link,mock,servlet,context,see,mock,servlet,context;public,mock,http,session,this,null
MockHttpSession -> public Serializable serializeState();1354292158;Serialize the attributes of this session into an object that can be_turned into a byte array with standard Java serialization.__@return a representation of this session's serialized state;public Serializable serializeState() {_		HashMap<String, Serializable> state = new HashMap<String, Serializable>()__		for (Iterator<Map.Entry<String, Object>> it = this.attributes.entrySet().iterator()_ it.hasNext()_) {_			Map.Entry<String, Object> entry = it.next()__			String name = entry.getKey()__			Object value = entry.getValue()__			it.remove()__			if (value instanceof Serializable) {_				state.put(name, (Serializable) value)__			}_			else {_				_				_				if (value instanceof HttpSessionBindingListener) {_					((HttpSessionBindingListener) value).valueUnbound(new HttpSessionBindingEvent(this, name, value))__				}_			}_		}_		return state__	};serialize,the,attributes,of,this,session,into,an,object,that,can,be,turned,into,a,byte,array,with,standard,java,serialization,return,a,representation,of,this,session,s,serialized,state;public,serializable,serialize,state,hash,map,string,serializable,state,new,hash,map,string,serializable,for,iterator,map,entry,string,object,it,this,attributes,entry,set,iterator,it,has,next,map,entry,string,object,entry,it,next,string,name,entry,get,key,object,value,entry,get,value,it,remove,if,value,instanceof,serializable,state,put,name,serializable,value,else,if,value,instanceof,http,session,binding,listener,http,session,binding,listener,value,value,unbound,new,http,session,binding,event,this,name,value,return,state
MockHttpSession -> public Serializable serializeState();1356735495;Serialize the attributes of this session into an object that can be_turned into a byte array with standard Java serialization.__@return a representation of this session's serialized state;public Serializable serializeState() {_		HashMap<String, Serializable> state = new HashMap<String, Serializable>()__		for (Iterator<Map.Entry<String, Object>> it = this.attributes.entrySet().iterator()_ it.hasNext()_) {_			Map.Entry<String, Object> entry = it.next()__			String name = entry.getKey()__			Object value = entry.getValue()__			it.remove()__			if (value instanceof Serializable) {_				state.put(name, (Serializable) value)__			}_			else {_				_				_				if (value instanceof HttpSessionBindingListener) {_					((HttpSessionBindingListener) value).valueUnbound(new HttpSessionBindingEvent(this, name, value))__				}_			}_		}_		return state__	};serialize,the,attributes,of,this,session,into,an,object,that,can,be,turned,into,a,byte,array,with,standard,java,serialization,return,a,representation,of,this,session,s,serialized,state;public,serializable,serialize,state,hash,map,string,serializable,state,new,hash,map,string,serializable,for,iterator,map,entry,string,object,it,this,attributes,entry,set,iterator,it,has,next,map,entry,string,object,entry,it,next,string,name,entry,get,key,object,value,entry,get,value,it,remove,if,value,instanceof,serializable,state,put,name,serializable,value,else,if,value,instanceof,http,session,binding,listener,http,session,binding,listener,value,value,unbound,new,http,session,binding,event,this,name,value,return,state
MockHttpSession -> public Serializable serializeState();1383216675;Serialize the attributes of this session into an object that can be_turned into a byte array with standard Java serialization.__@return a representation of this session's serialized state;public Serializable serializeState() {_		HashMap<String, Serializable> state = new HashMap<String, Serializable>()__		for (Iterator<Map.Entry<String, Object>> it = this.attributes.entrySet().iterator()_ it.hasNext()_) {_			Map.Entry<String, Object> entry = it.next()__			String name = entry.getKey()__			Object value = entry.getValue()__			it.remove()__			if (value instanceof Serializable) {_				state.put(name, (Serializable) value)__			}_			else {_				_				_				if (value instanceof HttpSessionBindingListener) {_					((HttpSessionBindingListener) value).valueUnbound(new HttpSessionBindingEvent(this, name, value))__				}_			}_		}_		return state__	};serialize,the,attributes,of,this,session,into,an,object,that,can,be,turned,into,a,byte,array,with,standard,java,serialization,return,a,representation,of,this,session,s,serialized,state;public,serializable,serialize,state,hash,map,string,serializable,state,new,hash,map,string,serializable,for,iterator,map,entry,string,object,it,this,attributes,entry,set,iterator,it,has,next,map,entry,string,object,entry,it,next,string,name,entry,get,key,object,value,entry,get,value,it,remove,if,value,instanceof,serializable,state,put,name,serializable,value,else,if,value,instanceof,http,session,binding,listener,http,session,binding,listener,value,value,unbound,new,http,session,binding,event,this,name,value,return,state
MockHttpSession -> public Serializable serializeState();1391877039;Serialize the attributes of this session into an object that can be_turned into a byte array with standard Java serialization.__@return a representation of this session's serialized state;public Serializable serializeState() {_		HashMap<String, Serializable> state = new HashMap<String, Serializable>()__		for (Iterator<Map.Entry<String, Object>> it = this.attributes.entrySet().iterator()_ it.hasNext()_) {_			Map.Entry<String, Object> entry = it.next()__			String name = entry.getKey()__			Object value = entry.getValue()__			it.remove()__			if (value instanceof Serializable) {_				state.put(name, (Serializable) value)__			}_			else {_				_				_				if (value instanceof HttpSessionBindingListener) {_					((HttpSessionBindingListener) value).valueUnbound(new HttpSessionBindingEvent(this, name, value))__				}_			}_		}_		return state__	};serialize,the,attributes,of,this,session,into,an,object,that,can,be,turned,into,a,byte,array,with,standard,java,serialization,return,a,representation,of,this,session,s,serialized,state;public,serializable,serialize,state,hash,map,string,serializable,state,new,hash,map,string,serializable,for,iterator,map,entry,string,object,it,this,attributes,entry,set,iterator,it,has,next,map,entry,string,object,entry,it,next,string,name,entry,get,key,object,value,entry,get,value,it,remove,if,value,instanceof,serializable,state,put,name,serializable,value,else,if,value,instanceof,http,session,binding,listener,http,session,binding,listener,value,value,unbound,new,http,session,binding,event,this,name,value,return,state
MockHttpSession -> public Serializable serializeState();1393608497;Serialize the attributes of this session into an object that can be_turned into a byte array with standard Java serialization.__@return a representation of this session's serialized state;public Serializable serializeState() {_		HashMap<String, Serializable> state = new HashMap<String, Serializable>()__		for (Iterator<Map.Entry<String, Object>> it = this.attributes.entrySet().iterator()_ it.hasNext()_) {_			Map.Entry<String, Object> entry = it.next()__			String name = entry.getKey()__			Object value = entry.getValue()__			it.remove()__			if (value instanceof Serializable) {_				state.put(name, (Serializable) value)__			}_			else {_				_				_				if (value instanceof HttpSessionBindingListener) {_					((HttpSessionBindingListener) value).valueUnbound(new HttpSessionBindingEvent(this, name, value))__				}_			}_		}_		return state__	};serialize,the,attributes,of,this,session,into,an,object,that,can,be,turned,into,a,byte,array,with,standard,java,serialization,return,a,representation,of,this,session,s,serialized,state;public,serializable,serialize,state,hash,map,string,serializable,state,new,hash,map,string,serializable,for,iterator,map,entry,string,object,it,this,attributes,entry,set,iterator,it,has,next,map,entry,string,object,entry,it,next,string,name,entry,get,key,object,value,entry,get,value,it,remove,if,value,instanceof,serializable,state,put,name,serializable,value,else,if,value,instanceof,http,session,binding,listener,http,session,binding,listener,value,value,unbound,new,http,session,binding,event,this,name,value,return,state
MockHttpSession -> public Serializable serializeState();1437330231;Serialize the attributes of this session into an object that can be_turned into a byte array with standard Java serialization.__@return a representation of this session's serialized state;public Serializable serializeState() {_		HashMap<String, Serializable> state = new HashMap<String, Serializable>()__		for (Iterator<Map.Entry<String, Object>> it = this.attributes.entrySet().iterator()_ it.hasNext()_) {_			Map.Entry<String, Object> entry = it.next()__			String name = entry.getKey()__			Object value = entry.getValue()__			it.remove()__			if (value instanceof Serializable) {_				state.put(name, (Serializable) value)__			}_			else {_				_				_				if (value instanceof HttpSessionBindingListener) {_					((HttpSessionBindingListener) value).valueUnbound(new HttpSessionBindingEvent(this, name, value))__				}_			}_		}_		return state__	};serialize,the,attributes,of,this,session,into,an,object,that,can,be,turned,into,a,byte,array,with,standard,java,serialization,return,a,representation,of,this,session,s,serialized,state;public,serializable,serialize,state,hash,map,string,serializable,state,new,hash,map,string,serializable,for,iterator,map,entry,string,object,it,this,attributes,entry,set,iterator,it,has,next,map,entry,string,object,entry,it,next,string,name,entry,get,key,object,value,entry,get,value,it,remove,if,value,instanceof,serializable,state,put,name,serializable,value,else,if,value,instanceof,http,session,binding,listener,http,session,binding,listener,value,value,unbound,new,http,session,binding,event,this,name,value,return,state
MockHttpSession -> public Serializable serializeState();1467730834;Serialize the attributes of this session into an object that can be_turned into a byte array with standard Java serialization.__@return a representation of this session's serialized state;public Serializable serializeState() {_		HashMap<String, Serializable> state = new HashMap<>()__		for (Iterator<Map.Entry<String, Object>> it = this.attributes.entrySet().iterator()_ it.hasNext()_) {_			Map.Entry<String, Object> entry = it.next()__			String name = entry.getKey()__			Object value = entry.getValue()__			it.remove()__			if (value instanceof Serializable) {_				state.put(name, (Serializable) value)__			}_			else {_				_				_				if (value instanceof HttpSessionBindingListener) {_					((HttpSessionBindingListener) value).valueUnbound(new HttpSessionBindingEvent(this, name, value))__				}_			}_		}_		return state__	};serialize,the,attributes,of,this,session,into,an,object,that,can,be,turned,into,a,byte,array,with,standard,java,serialization,return,a,representation,of,this,session,s,serialized,state;public,serializable,serialize,state,hash,map,string,serializable,state,new,hash,map,for,iterator,map,entry,string,object,it,this,attributes,entry,set,iterator,it,has,next,map,entry,string,object,entry,it,next,string,name,entry,get,key,object,value,entry,get,value,it,remove,if,value,instanceof,serializable,state,put,name,serializable,value,else,if,value,instanceof,http,session,binding,listener,http,session,binding,listener,value,value,unbound,new,http,session,binding,event,this,name,value,return,state
MockHttpSession -> public Serializable serializeState();1486994819;Serialize the attributes of this session into an object that can be_turned into a byte array with standard Java serialization._@return a representation of this session's serialized state;public Serializable serializeState() {_		HashMap<String, Serializable> state = new HashMap<>()__		for (Iterator<Map.Entry<String, Object>> it = this.attributes.entrySet().iterator()_ it.hasNext()_) {_			Map.Entry<String, Object> entry = it.next()__			String name = entry.getKey()__			Object value = entry.getValue()__			it.remove()__			if (value instanceof Serializable) {_				state.put(name, (Serializable) value)__			}_			else {_				_				_				if (value instanceof HttpSessionBindingListener) {_					((HttpSessionBindingListener) value).valueUnbound(new HttpSessionBindingEvent(this, name, value))__				}_			}_		}_		return state__	};serialize,the,attributes,of,this,session,into,an,object,that,can,be,turned,into,a,byte,array,with,standard,java,serialization,return,a,representation,of,this,session,s,serialized,state;public,serializable,serialize,state,hash,map,string,serializable,state,new,hash,map,for,iterator,map,entry,string,object,it,this,attributes,entry,set,iterator,it,has,next,map,entry,string,object,entry,it,next,string,name,entry,get,key,object,value,entry,get,value,it,remove,if,value,instanceof,serializable,state,put,name,serializable,value,else,if,value,instanceof,http,session,binding,listener,http,session,binding,listener,value,value,unbound,new,http,session,binding,event,this,name,value,return,state
MockHttpSession -> public Serializable serializeState();1518810557;Serialize the attributes of this session into an object that can be_turned into a byte array with standard Java serialization._@return a representation of this session's serialized state;public Serializable serializeState() {_		HashMap<String, Serializable> state = new HashMap<>()__		for (Iterator<Map.Entry<String, Object>> it = this.attributes.entrySet().iterator()_ it.hasNext()_) {_			Map.Entry<String, Object> entry = it.next()__			String name = entry.getKey()__			Object value = entry.getValue()__			it.remove()__			if (value instanceof Serializable) {_				state.put(name, (Serializable) value)__			}_			else {_				_				_				if (value instanceof HttpSessionBindingListener) {_					((HttpSessionBindingListener) value).valueUnbound(new HttpSessionBindingEvent(this, name, value))__				}_			}_		}_		return state__	};serialize,the,attributes,of,this,session,into,an,object,that,can,be,turned,into,a,byte,array,with,standard,java,serialization,return,a,representation,of,this,session,s,serialized,state;public,serializable,serialize,state,hash,map,string,serializable,state,new,hash,map,for,iterator,map,entry,string,object,it,this,attributes,entry,set,iterator,it,has,next,map,entry,string,object,entry,it,next,string,name,entry,get,key,object,value,entry,get,value,it,remove,if,value,instanceof,serializable,state,put,name,serializable,value,else,if,value,instanceof,http,session,binding,listener,http,session,binding,listener,value,value,unbound,new,http,session,binding,event,this,name,value,return,state
MockHttpSession -> public Serializable serializeState();1533121661;Serialize the attributes of this session into an object that can be_turned into a byte array with standard Java serialization._@return a representation of this session's serialized state;public Serializable serializeState() {_		HashMap<String, Serializable> state = new HashMap<>()__		for (Iterator<Map.Entry<String, Object>> it = this.attributes.entrySet().iterator()_ it.hasNext()_) {_			Map.Entry<String, Object> entry = it.next()__			String name = entry.getKey()__			Object value = entry.getValue()__			it.remove()__			if (value instanceof Serializable) {_				state.put(name, (Serializable) value)__			}_			else {_				_				_				if (value instanceof HttpSessionBindingListener) {_					((HttpSessionBindingListener) value).valueUnbound(new HttpSessionBindingEvent(this, name, value))__				}_			}_		}_		return state__	};serialize,the,attributes,of,this,session,into,an,object,that,can,be,turned,into,a,byte,array,with,standard,java,serialization,return,a,representation,of,this,session,s,serialized,state;public,serializable,serialize,state,hash,map,string,serializable,state,new,hash,map,for,iterator,map,entry,string,object,it,this,attributes,entry,set,iterator,it,has,next,map,entry,string,object,entry,it,next,string,name,entry,get,key,object,value,entry,get,value,it,remove,if,value,instanceof,serializable,state,put,name,serializable,value,else,if,value,instanceof,http,session,binding,listener,http,session,binding,listener,value,value,unbound,new,http,session,binding,event,this,name,value,return,state
MockHttpSession -> public Serializable serializeState();1533121895;Serialize the attributes of this session into an object that can be_turned into a byte array with standard Java serialization._@return a representation of this session's serialized state;public Serializable serializeState() {_		HashMap<String, Serializable> state = new HashMap<>()__		for (Iterator<Map.Entry<String, Object>> it = this.attributes.entrySet().iterator()_ it.hasNext()_) {_			Map.Entry<String, Object> entry = it.next()__			String name = entry.getKey()__			Object value = entry.getValue()__			it.remove()__			if (value instanceof Serializable) {_				state.put(name, (Serializable) value)__			}_			else {_				_				_				if (value instanceof HttpSessionBindingListener) {_					((HttpSessionBindingListener) value).valueUnbound(new HttpSessionBindingEvent(this, name, value))__				}_			}_		}_		return state__	};serialize,the,attributes,of,this,session,into,an,object,that,can,be,turned,into,a,byte,array,with,standard,java,serialization,return,a,representation,of,this,session,s,serialized,state;public,serializable,serialize,state,hash,map,string,serializable,state,new,hash,map,for,iterator,map,entry,string,object,it,this,attributes,entry,set,iterator,it,has,next,map,entry,string,object,entry,it,next,string,name,entry,get,key,object,value,entry,get,value,it,remove,if,value,instanceof,serializable,state,put,name,serializable,value,else,if,value,instanceof,http,session,binding,listener,http,session,binding,listener,value,value,unbound,new,http,session,binding,event,this,name,value,return,state
MockHttpSession -> public Serializable serializeState();1537706655;Serialize the attributes of this session into an object that can be_turned into a byte array with standard Java serialization._@return a representation of this session's serialized state;public Serializable serializeState() {_		HashMap<String, Serializable> state = new HashMap<>()__		for (Iterator<Map.Entry<String, Object>> it = this.attributes.entrySet().iterator()_ it.hasNext()_) {_			Map.Entry<String, Object> entry = it.next()__			String name = entry.getKey()__			Object value = entry.getValue()__			it.remove()__			if (value instanceof Serializable) {_				state.put(name, (Serializable) value)__			}_			else {_				_				_				if (value instanceof HttpSessionBindingListener) {_					((HttpSessionBindingListener) value).valueUnbound(new HttpSessionBindingEvent(this, name, value))__				}_			}_		}_		return state__	};serialize,the,attributes,of,this,session,into,an,object,that,can,be,turned,into,a,byte,array,with,standard,java,serialization,return,a,representation,of,this,session,s,serialized,state;public,serializable,serialize,state,hash,map,string,serializable,state,new,hash,map,for,iterator,map,entry,string,object,it,this,attributes,entry,set,iterator,it,has,next,map,entry,string,object,entry,it,next,string,name,entry,get,key,object,value,entry,get,value,it,remove,if,value,instanceof,serializable,state,put,name,serializable,value,else,if,value,instanceof,http,session,binding,listener,http,session,binding,listener,value,value,unbound,new,http,session,binding,event,this,name,value,return,state
MockHttpSession -> private void assertIsValid();1383216675;Convenience method for asserting that this session has not been_{@linkplain #invalidate() invalidated}.__@throws IllegalStateException if this session has been invalidated;private void assertIsValid() {_		if (isInvalid()) {_			throw new IllegalStateException("The session has already been invalidated")__		}_	};convenience,method,for,asserting,that,this,session,has,not,been,linkplain,invalidate,invalidated,throws,illegal,state,exception,if,this,session,has,been,invalidated;private,void,assert,is,valid,if,is,invalid,throw,new,illegal,state,exception,the,session,has,already,been,invalidated
MockHttpSession -> private void assertIsValid();1391877039;Convenience method for asserting that this session has not been_{@linkplain #invalidate() invalidated}.__@throws IllegalStateException if this session has been invalidated;private void assertIsValid() {_		if (isInvalid()) {_			throw new IllegalStateException("The session has already been invalidated")__		}_	};convenience,method,for,asserting,that,this,session,has,not,been,linkplain,invalidate,invalidated,throws,illegal,state,exception,if,this,session,has,been,invalidated;private,void,assert,is,valid,if,is,invalid,throw,new,illegal,state,exception,the,session,has,already,been,invalidated
MockHttpSession -> private void assertIsValid();1393608497;Convenience method for asserting that this session has not been_{@linkplain #invalidate() invalidated}.__@throws IllegalStateException if this session has been invalidated;private void assertIsValid() {_		if (isInvalid()) {_			throw new IllegalStateException("The session has already been invalidated")__		}_	};convenience,method,for,asserting,that,this,session,has,not,been,linkplain,invalidate,invalidated,throws,illegal,state,exception,if,this,session,has,been,invalidated;private,void,assert,is,valid,if,is,invalid,throw,new,illegal,state,exception,the,session,has,already,been,invalidated
MockHttpSession -> private void assertIsValid();1437330231;Convenience method for asserting that this session has not been_{@linkplain #invalidate() invalidated}.__@throws IllegalStateException if this session has been invalidated;private void assertIsValid() {_		if (isInvalid()) {_			throw new IllegalStateException("The session has already been invalidated")__		}_	};convenience,method,for,asserting,that,this,session,has,not,been,linkplain,invalidate,invalidated,throws,illegal,state,exception,if,this,session,has,been,invalidated;private,void,assert,is,valid,if,is,invalid,throw,new,illegal,state,exception,the,session,has,already,been,invalidated
MockHttpSession -> private void assertIsValid();1467730834;Convenience method for asserting that this session has not been_{@linkplain #invalidate() invalidated}.__@throws IllegalStateException if this session has been invalidated;private void assertIsValid() {_		if (isInvalid()) {_			throw new IllegalStateException("The session has already been invalidated")__		}_	};convenience,method,for,asserting,that,this,session,has,not,been,linkplain,invalidate,invalidated,throws,illegal,state,exception,if,this,session,has,been,invalidated;private,void,assert,is,valid,if,is,invalid,throw,new,illegal,state,exception,the,session,has,already,been,invalidated
MockHttpSession -> private void assertIsValid();1486994819;Convenience method for asserting that this session has not been_{@linkplain #invalidate() invalidated}._@throws IllegalStateException if this session has been invalidated;private void assertIsValid() {_		Assert.state(!isInvalid(), "The session has already been invalidated")__	};convenience,method,for,asserting,that,this,session,has,not,been,linkplain,invalidate,invalidated,throws,illegal,state,exception,if,this,session,has,been,invalidated;private,void,assert,is,valid,assert,state,is,invalid,the,session,has,already,been,invalidated
MockHttpSession -> private void assertIsValid();1518810557;Convenience method for asserting that this session has not been_{@linkplain #invalidate() invalidated}._@throws IllegalStateException if this session has been invalidated;private void assertIsValid() {_		Assert.state(!isInvalid(), "The session has already been invalidated")__	};convenience,method,for,asserting,that,this,session,has,not,been,linkplain,invalidate,invalidated,throws,illegal,state,exception,if,this,session,has,been,invalidated;private,void,assert,is,valid,assert,state,is,invalid,the,session,has,already,been,invalidated
MockHttpSession -> private void assertIsValid();1533121661;Convenience method for asserting that this session has not been_{@linkplain #invalidate() invalidated}._@throws IllegalStateException if this session has been invalidated;private void assertIsValid() {_		Assert.state(!isInvalid(), "The session has already been invalidated")__	};convenience,method,for,asserting,that,this,session,has,not,been,linkplain,invalidate,invalidated,throws,illegal,state,exception,if,this,session,has,been,invalidated;private,void,assert,is,valid,assert,state,is,invalid,the,session,has,already,been,invalidated
MockHttpSession -> private void assertIsValid();1533121895;Convenience method for asserting that this session has not been_{@linkplain #invalidate() invalidated}._@throws IllegalStateException if this session has been invalidated;private void assertIsValid() {_		Assert.state(!isInvalid(), "The session has already been invalidated")__	};convenience,method,for,asserting,that,this,session,has,not,been,linkplain,invalidate,invalidated,throws,illegal,state,exception,if,this,session,has,been,invalidated;private,void,assert,is,valid,assert,state,is,invalid,the,session,has,already,been,invalidated
MockHttpSession -> private void assertIsValid();1537706655;Convenience method for asserting that this session has not been_{@linkplain #invalidate() invalidated}._@throws IllegalStateException if this session has been invalidated;private void assertIsValid() {_		Assert.state(!isInvalid(), "The session has already been invalidated")__	};convenience,method,for,asserting,that,this,session,has,not,been,linkplain,invalidate,invalidated,throws,illegal,state,exception,if,this,session,has,been,invalidated;private,void,assert,is,valid,assert,state,is,invalid,the,session,has,already,been,invalidated
