commented;modifiers;parameterAmount;loc;comment;code
false;public;0;8;;@Test public void createBinder() throws Exception {     WebDataBinderFactory factory = createFactory("initBinder", WebDataBinder.class).     WebDataBinder dataBinder = factory.createBinder(this.webRequest, null, null).     assertNotNull(dataBinder.getDisallowedFields()).     assertEquals("id", dataBinder.getDisallowedFields()[0]). }
false;public;0;10;;@Test public void createBinderWithGlobalInitialization() throws Exception {     ConversionService conversionService = new DefaultFormattingConversionService().     bindingInitializer.setConversionService(conversionService).     WebDataBinderFactory factory = createFactory("initBinder", WebDataBinder.class).     WebDataBinder dataBinder = factory.createBinder(this.webRequest, null, null).     assertSame(conversionService, dataBinder.getConversionService()). }
false;public;0;8;;@Test public void createBinderWithAttrName() throws Exception {     WebDataBinderFactory factory = createFactory("initBinderWithAttributeName", WebDataBinder.class).     WebDataBinder dataBinder = factory.createBinder(this.webRequest, null, "foo").     assertNotNull(dataBinder.getDisallowedFields()).     assertEquals("id", dataBinder.getDisallowedFields()[0]). }
false;public;0;7;;@Test public void createBinderWithAttrNameNoMatch() throws Exception {     WebDataBinderFactory factory = createFactory("initBinderWithAttributeName", WebDataBinder.class).     WebDataBinder dataBinder = factory.createBinder(this.webRequest, null, "invalidName").     assertNull(dataBinder.getDisallowedFields()). }
false;public;0;7;;@Test public void createBinderNullAttrName() throws Exception {     WebDataBinderFactory factory = createFactory("initBinderWithAttributeName", WebDataBinder.class).     WebDataBinder dataBinder = factory.createBinder(this.webRequest, null, null).     assertNull(dataBinder.getDisallowedFields()). }
false;public;0;5;;@Test(expected = IllegalStateException.class) public void returnValueNotExpected() throws Exception {     WebDataBinderFactory factory = createFactory("initBinderReturnValue", WebDataBinder.class).     factory.createBinder(this.webRequest, null, "invalidName"). }
false;public;0;11;;@Test public void createBinderTypeConversion() throws Exception {     this.webRequest.getNativeRequest(MockHttpServletRequest.class).setParameter("requestParam", "22").     this.argumentResolvers.addResolver(new RequestParamMethodArgumentResolver(null, false)).     WebDataBinderFactory factory = createFactory("initBinderTypeConversion", WebDataBinder.class, int.class).     WebDataBinder dataBinder = factory.createBinder(this.webRequest, null, "foo").     assertNotNull(dataBinder.getDisallowedFields()).     assertEquals("requestParam-22", dataBinder.getDisallowedFields()[0]). }
false;private;2;14;;private WebDataBinderFactory createFactory(String methodName, Class<?>... parameterTypes) throws Exception {     Object handler = new InitBinderHandler().     Method method = handler.getClass().getMethod(methodName, parameterTypes).     InvocableHandlerMethod handlerMethod = new InvocableHandlerMethod(handler, method).     handlerMethod.setHandlerMethodArgumentResolvers(this.argumentResolvers).     handlerMethod.setDataBinderFactory(new DefaultDataBinderFactory(null)).     handlerMethod.setParameterNameDiscoverer(new LocalVariableTableParameterNameDiscoverer()).     return new InitBinderDataBinderFactory(Collections.singletonList(handlerMethod), this.bindingInitializer). }
false;public;1;4;;@InitBinder public void initBinder(WebDataBinder dataBinder) {     dataBinder.setDisallowedFields("id"). }
false;public;1;4;;@InitBinder(value = "foo") public void initBinderWithAttributeName(WebDataBinder dataBinder) {     dataBinder.setDisallowedFields("id"). }
false;public;1;4;;@InitBinder public String initBinderReturnValue(WebDataBinder dataBinder) {     return "invalid". }
false;public;2;4;;@InitBinder public void initBinderTypeConversion(WebDataBinder dataBinder, @RequestParam int requestParam) {     dataBinder.setDisallowedFields("requestParam-" + requestParam). }
