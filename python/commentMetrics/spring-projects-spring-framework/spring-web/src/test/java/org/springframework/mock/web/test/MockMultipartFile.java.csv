# id;timestamp;commentText;codeText;commentWords;codeWords
MockMultipartFile -> public MockMultipartFile(String name, InputStream contentStream) throws IOException;1354292158;Create a new MockMultipartFile with the given content._@param name the name of the file_@param contentStream the content of the file as stream_@throws IOException if reading from the stream failed;public MockMultipartFile(String name, InputStream contentStream) throws IOException {_		this(name, "", null, FileCopyUtils.copyToByteArray(contentStream))__	};create,a,new,mock,multipart,file,with,the,given,content,param,name,the,name,of,the,file,param,content,stream,the,content,of,the,file,as,stream,throws,ioexception,if,reading,from,the,stream,failed;public,mock,multipart,file,string,name,input,stream,content,stream,throws,ioexception,this,name,null,file,copy,utils,copy,to,byte,array,content,stream
MockMultipartFile -> public MockMultipartFile(String name, InputStream contentStream) throws IOException;1356735495;Create a new MockMultipartFile with the given content._@param name the name of the file_@param contentStream the content of the file as stream_@throws IOException if reading from the stream failed;public MockMultipartFile(String name, InputStream contentStream) throws IOException {_		this(name, "", null, FileCopyUtils.copyToByteArray(contentStream))__	};create,a,new,mock,multipart,file,with,the,given,content,param,name,the,name,of,the,file,param,content,stream,the,content,of,the,file,as,stream,throws,ioexception,if,reading,from,the,stream,failed;public,mock,multipart,file,string,name,input,stream,content,stream,throws,ioexception,this,name,null,file,copy,utils,copy,to,byte,array,content,stream
MockMultipartFile -> public MockMultipartFile(String name, InputStream contentStream) throws IOException;1413848647;Create a new MockMultipartFile with the given content._@param name the name of the file_@param contentStream the content of the file as stream_@throws IOException if reading from the stream failed;public MockMultipartFile(String name, InputStream contentStream) throws IOException {_		this(name, "", null, FileCopyUtils.copyToByteArray(contentStream))__	};create,a,new,mock,multipart,file,with,the,given,content,param,name,the,name,of,the,file,param,content,stream,the,content,of,the,file,as,stream,throws,ioexception,if,reading,from,the,stream,failed;public,mock,multipart,file,string,name,input,stream,content,stream,throws,ioexception,this,name,null,file,copy,utils,copy,to,byte,array,content,stream
MockMultipartFile -> public MockMultipartFile(String name, InputStream contentStream) throws IOException;1509895410;Create a new MockMultipartFile with the given content._@param name the name of the file_@param contentStream the content of the file as stream_@throws IOException if reading from the stream failed;public MockMultipartFile(String name, InputStream contentStream) throws IOException {_		this(name, "", null, FileCopyUtils.copyToByteArray(contentStream))__	};create,a,new,mock,multipart,file,with,the,given,content,param,name,the,name,of,the,file,param,content,stream,the,content,of,the,file,as,stream,throws,ioexception,if,reading,from,the,stream,failed;public,mock,multipart,file,string,name,input,stream,content,stream,throws,ioexception,this,name,null,file,copy,utils,copy,to,byte,array,content,stream
MockMultipartFile -> public MockMultipartFile(String name, InputStream contentStream) throws IOException;1537706655;Create a new MockMultipartFile with the given content._@param name the name of the file_@param contentStream the content of the file as stream_@throws IOException if reading from the stream failed;public MockMultipartFile(String name, InputStream contentStream) throws IOException {_		this(name, "", null, FileCopyUtils.copyToByteArray(contentStream))__	};create,a,new,mock,multipart,file,with,the,given,content,param,name,the,name,of,the,file,param,content,stream,the,content,of,the,file,as,stream,throws,ioexception,if,reading,from,the,stream,failed;public,mock,multipart,file,string,name,input,stream,content,stream,throws,ioexception,this,name,null,file,copy,utils,copy,to,byte,array,content,stream
MockMultipartFile -> public MockMultipartFile(String name, InputStream contentStream) throws IOException;1537741670;Create a new MockMultipartFile with the given content._@param name the name of the file_@param contentStream the content of the file as stream_@throws IOException if reading from the stream failed;public MockMultipartFile(String name, InputStream contentStream) throws IOException {_		this(name, "", null, FileCopyUtils.copyToByteArray(contentStream))__	};create,a,new,mock,multipart,file,with,the,given,content,param,name,the,name,of,the,file,param,content,stream,the,content,of,the,file,as,stream,throws,ioexception,if,reading,from,the,stream,failed;public,mock,multipart,file,string,name,input,stream,content,stream,throws,ioexception,this,name,null,file,copy,utils,copy,to,byte,array,content,stream
MockMultipartFile -> public MockMultipartFile(String name, byte[] content);1354292158;Create a new MockMultipartFile with the given content._@param name the name of the file_@param content the content of the file;public MockMultipartFile(String name, byte[] content) {_		this(name, "", null, content)__	};create,a,new,mock,multipart,file,with,the,given,content,param,name,the,name,of,the,file,param,content,the,content,of,the,file;public,mock,multipart,file,string,name,byte,content,this,name,null,content
MockMultipartFile -> public MockMultipartFile(String name, byte[] content);1356735495;Create a new MockMultipartFile with the given content._@param name the name of the file_@param content the content of the file;public MockMultipartFile(String name, byte[] content) {_		this(name, "", null, content)__	};create,a,new,mock,multipart,file,with,the,given,content,param,name,the,name,of,the,file,param,content,the,content,of,the,file;public,mock,multipart,file,string,name,byte,content,this,name,null,content
MockMultipartFile -> public MockMultipartFile(String name, byte[] content);1413848647;Create a new MockMultipartFile with the given content._@param name the name of the file_@param content the content of the file;public MockMultipartFile(String name, byte[] content) {_		this(name, "", null, content)__	};create,a,new,mock,multipart,file,with,the,given,content,param,name,the,name,of,the,file,param,content,the,content,of,the,file;public,mock,multipart,file,string,name,byte,content,this,name,null,content
MockMultipartFile -> public MockMultipartFile(String name, byte[] content);1509895410;Create a new MockMultipartFile with the given content._@param name the name of the file_@param content the content of the file;public MockMultipartFile(String name, byte[] content) {_		this(name, "", null, content)__	};create,a,new,mock,multipart,file,with,the,given,content,param,name,the,name,of,the,file,param,content,the,content,of,the,file;public,mock,multipart,file,string,name,byte,content,this,name,null,content
MockMultipartFile -> public MockMultipartFile(String name, @Nullable byte[] content);1537706655;Create a new MockMultipartFile with the given content._@param name the name of the file_@param content the content of the file;public MockMultipartFile(String name, @Nullable byte[] content) {_		this(name, "", null, content)__	};create,a,new,mock,multipart,file,with,the,given,content,param,name,the,name,of,the,file,param,content,the,content,of,the,file;public,mock,multipart,file,string,name,nullable,byte,content,this,name,null,content
MockMultipartFile -> public MockMultipartFile(String name, @Nullable byte[] content);1537741670;Create a new MockMultipartFile with the given content._@param name the name of the file_@param content the content of the file;public MockMultipartFile(String name, @Nullable byte[] content) {_		this(name, "", null, content)__	};create,a,new,mock,multipart,file,with,the,given,content,param,name,the,name,of,the,file,param,content,the,content,of,the,file;public,mock,multipart,file,string,name,nullable,byte,content,this,name,null,content
MockMultipartFile -> public MockMultipartFile(String name, String originalFilename, String contentType, byte[] content);1354292158;Create a new MockMultipartFile with the given content._@param name the name of the file_@param originalFilename the original filename (as on the client's machine)_@param contentType the content type (if known)_@param content the content of the file;public MockMultipartFile(String name, String originalFilename, String contentType, byte[] content) {_		Assert.hasLength(name, "Name must not be null")__		this.name = name__		this.originalFilename = (originalFilename != null ? originalFilename : "")__		this.contentType = contentType__		this.content = (content != null ? content : new byte[0])__	};create,a,new,mock,multipart,file,with,the,given,content,param,name,the,name,of,the,file,param,original,filename,the,original,filename,as,on,the,client,s,machine,param,content,type,the,content,type,if,known,param,content,the,content,of,the,file;public,mock,multipart,file,string,name,string,original,filename,string,content,type,byte,content,assert,has,length,name,name,must,not,be,null,this,name,name,this,original,filename,original,filename,null,original,filename,this,content,type,content,type,this,content,content,null,content,new,byte,0
MockMultipartFile -> public MockMultipartFile(String name, String originalFilename, String contentType, byte[] content);1356735495;Create a new MockMultipartFile with the given content._@param name the name of the file_@param originalFilename the original filename (as on the client's machine)_@param contentType the content type (if known)_@param content the content of the file;public MockMultipartFile(String name, String originalFilename, String contentType, byte[] content) {_		Assert.hasLength(name, "Name must not be null")__		this.name = name__		this.originalFilename = (originalFilename != null ? originalFilename : "")__		this.contentType = contentType__		this.content = (content != null ? content : new byte[0])__	};create,a,new,mock,multipart,file,with,the,given,content,param,name,the,name,of,the,file,param,original,filename,the,original,filename,as,on,the,client,s,machine,param,content,type,the,content,type,if,known,param,content,the,content,of,the,file;public,mock,multipart,file,string,name,string,original,filename,string,content,type,byte,content,assert,has,length,name,name,must,not,be,null,this,name,name,this,original,filename,original,filename,null,original,filename,this,content,type,content,type,this,content,content,null,content,new,byte,0
MockMultipartFile -> public MockMultipartFile(String name, String originalFilename, String contentType, byte[] content);1413848647;Create a new MockMultipartFile with the given content._@param name the name of the file_@param originalFilename the original filename (as on the client's machine)_@param contentType the content type (if known)_@param content the content of the file;public MockMultipartFile(String name, String originalFilename, String contentType, byte[] content) {_		Assert.hasLength(name, "Name must not be null")__		this.name = name__		this.originalFilename = (originalFilename != null ? originalFilename : "")__		this.contentType = contentType__		this.content = (content != null ? content : new byte[0])__	};create,a,new,mock,multipart,file,with,the,given,content,param,name,the,name,of,the,file,param,original,filename,the,original,filename,as,on,the,client,s,machine,param,content,type,the,content,type,if,known,param,content,the,content,of,the,file;public,mock,multipart,file,string,name,string,original,filename,string,content,type,byte,content,assert,has,length,name,name,must,not,be,null,this,name,name,this,original,filename,original,filename,null,original,filename,this,content,type,content,type,this,content,content,null,content,new,byte,0
MockMultipartFile -> public MockMultipartFile(String name, String originalFilename, String contentType, byte[] content);1509895410;Create a new MockMultipartFile with the given content._@param name the name of the file_@param originalFilename the original filename (as on the client's machine)_@param contentType the content type (if known)_@param content the content of the file;public MockMultipartFile(String name, String originalFilename, String contentType, byte[] content) {_		Assert.hasLength(name, "Name must not be null")__		this.name = name__		this.originalFilename = (originalFilename != null ? originalFilename : "")__		this.contentType = contentType__		this.content = (content != null ? content : new byte[0])__	};create,a,new,mock,multipart,file,with,the,given,content,param,name,the,name,of,the,file,param,original,filename,the,original,filename,as,on,the,client,s,machine,param,content,type,the,content,type,if,known,param,content,the,content,of,the,file;public,mock,multipart,file,string,name,string,original,filename,string,content,type,byte,content,assert,has,length,name,name,must,not,be,null,this,name,name,this,original,filename,original,filename,null,original,filename,this,content,type,content,type,this,content,content,null,content,new,byte,0
MockMultipartFile -> public MockMultipartFile(String name, String originalFilename, String contentType, InputStream contentStream) 			throws IOException;1354292158;Create a new MockMultipartFile with the given content._@param name the name of the file_@param originalFilename the original filename (as on the client's machine)_@param contentType the content type (if known)_@param contentStream the content of the file as stream_@throws IOException if reading from the stream failed;public MockMultipartFile(String name, String originalFilename, String contentType, InputStream contentStream)_			throws IOException {__		this(name, originalFilename, contentType, FileCopyUtils.copyToByteArray(contentStream))__	};create,a,new,mock,multipart,file,with,the,given,content,param,name,the,name,of,the,file,param,original,filename,the,original,filename,as,on,the,client,s,machine,param,content,type,the,content,type,if,known,param,content,stream,the,content,of,the,file,as,stream,throws,ioexception,if,reading,from,the,stream,failed;public,mock,multipart,file,string,name,string,original,filename,string,content,type,input,stream,content,stream,throws,ioexception,this,name,original,filename,content,type,file,copy,utils,copy,to,byte,array,content,stream
MockMultipartFile -> public MockMultipartFile(String name, String originalFilename, String contentType, InputStream contentStream) 			throws IOException;1356735495;Create a new MockMultipartFile with the given content._@param name the name of the file_@param originalFilename the original filename (as on the client's machine)_@param contentType the content type (if known)_@param contentStream the content of the file as stream_@throws IOException if reading from the stream failed;public MockMultipartFile(String name, String originalFilename, String contentType, InputStream contentStream)_			throws IOException {__		this(name, originalFilename, contentType, FileCopyUtils.copyToByteArray(contentStream))__	};create,a,new,mock,multipart,file,with,the,given,content,param,name,the,name,of,the,file,param,original,filename,the,original,filename,as,on,the,client,s,machine,param,content,type,the,content,type,if,known,param,content,stream,the,content,of,the,file,as,stream,throws,ioexception,if,reading,from,the,stream,failed;public,mock,multipart,file,string,name,string,original,filename,string,content,type,input,stream,content,stream,throws,ioexception,this,name,original,filename,content,type,file,copy,utils,copy,to,byte,array,content,stream
MockMultipartFile -> public MockMultipartFile(String name, String originalFilename, String contentType, InputStream contentStream) 			throws IOException;1413848647;Create a new MockMultipartFile with the given content._@param name the name of the file_@param originalFilename the original filename (as on the client's machine)_@param contentType the content type (if known)_@param contentStream the content of the file as stream_@throws IOException if reading from the stream failed;public MockMultipartFile(String name, String originalFilename, String contentType, InputStream contentStream)_			throws IOException {__		this(name, originalFilename, contentType, FileCopyUtils.copyToByteArray(contentStream))__	};create,a,new,mock,multipart,file,with,the,given,content,param,name,the,name,of,the,file,param,original,filename,the,original,filename,as,on,the,client,s,machine,param,content,type,the,content,type,if,known,param,content,stream,the,content,of,the,file,as,stream,throws,ioexception,if,reading,from,the,stream,failed;public,mock,multipart,file,string,name,string,original,filename,string,content,type,input,stream,content,stream,throws,ioexception,this,name,original,filename,content,type,file,copy,utils,copy,to,byte,array,content,stream
MockMultipartFile -> public MockMultipartFile(String name, String originalFilename, String contentType, InputStream contentStream) 			throws IOException;1509895410;Create a new MockMultipartFile with the given content._@param name the name of the file_@param originalFilename the original filename (as on the client's machine)_@param contentType the content type (if known)_@param contentStream the content of the file as stream_@throws IOException if reading from the stream failed;public MockMultipartFile(String name, String originalFilename, String contentType, InputStream contentStream)_			throws IOException {__		this(name, originalFilename, contentType, FileCopyUtils.copyToByteArray(contentStream))__	};create,a,new,mock,multipart,file,with,the,given,content,param,name,the,name,of,the,file,param,original,filename,the,original,filename,as,on,the,client,s,machine,param,content,type,the,content,type,if,known,param,content,stream,the,content,of,the,file,as,stream,throws,ioexception,if,reading,from,the,stream,failed;public,mock,multipart,file,string,name,string,original,filename,string,content,type,input,stream,content,stream,throws,ioexception,this,name,original,filename,content,type,file,copy,utils,copy,to,byte,array,content,stream
MockMultipartFile -> public MockMultipartFile( 			String name, @Nullable String originalFilename, @Nullable String contentType, InputStream contentStream) 			throws IOException;1537706655;Create a new MockMultipartFile with the given content._@param name the name of the file_@param originalFilename the original filename (as on the client's machine)_@param contentType the content type (if known)_@param contentStream the content of the file as stream_@throws IOException if reading from the stream failed;public MockMultipartFile(_			String name, @Nullable String originalFilename, @Nullable String contentType, InputStream contentStream)_			throws IOException {__		this(name, originalFilename, contentType, FileCopyUtils.copyToByteArray(contentStream))__	};create,a,new,mock,multipart,file,with,the,given,content,param,name,the,name,of,the,file,param,original,filename,the,original,filename,as,on,the,client,s,machine,param,content,type,the,content,type,if,known,param,content,stream,the,content,of,the,file,as,stream,throws,ioexception,if,reading,from,the,stream,failed;public,mock,multipart,file,string,name,nullable,string,original,filename,nullable,string,content,type,input,stream,content,stream,throws,ioexception,this,name,original,filename,content,type,file,copy,utils,copy,to,byte,array,content,stream
MockMultipartFile -> public MockMultipartFile( 			String name, @Nullable String originalFilename, @Nullable String contentType, InputStream contentStream) 			throws IOException;1537741670;Create a new MockMultipartFile with the given content._@param name the name of the file_@param originalFilename the original filename (as on the client's machine)_@param contentType the content type (if known)_@param contentStream the content of the file as stream_@throws IOException if reading from the stream failed;public MockMultipartFile(_			String name, @Nullable String originalFilename, @Nullable String contentType, InputStream contentStream)_			throws IOException {__		this(name, originalFilename, contentType, FileCopyUtils.copyToByteArray(contentStream))__	};create,a,new,mock,multipart,file,with,the,given,content,param,name,the,name,of,the,file,param,original,filename,the,original,filename,as,on,the,client,s,machine,param,content,type,the,content,type,if,known,param,content,stream,the,content,of,the,file,as,stream,throws,ioexception,if,reading,from,the,stream,failed;public,mock,multipart,file,string,name,nullable,string,original,filename,nullable,string,content,type,input,stream,content,stream,throws,ioexception,this,name,original,filename,content,type,file,copy,utils,copy,to,byte,array,content,stream
MockMultipartFile -> public MockMultipartFile( 			String name, @Nullable String originalFilename, @Nullable String contentType, @Nullable byte[] content);1537706655;Create a new MockMultipartFile with the given content._@param name the name of the file_@param originalFilename the original filename (as on the client's machine)_@param contentType the content type (if known)_@param content the content of the file;public MockMultipartFile(_			String name, @Nullable String originalFilename, @Nullable String contentType, @Nullable byte[] content) {__		Assert.hasLength(name, "Name must not be null")__		this.name = name__		this.originalFilename = (originalFilename != null ? originalFilename : "")__		this.contentType = contentType__		this.content = (content != null ? content : new byte[0])__	};create,a,new,mock,multipart,file,with,the,given,content,param,name,the,name,of,the,file,param,original,filename,the,original,filename,as,on,the,client,s,machine,param,content,type,the,content,type,if,known,param,content,the,content,of,the,file;public,mock,multipart,file,string,name,nullable,string,original,filename,nullable,string,content,type,nullable,byte,content,assert,has,length,name,name,must,not,be,null,this,name,name,this,original,filename,original,filename,null,original,filename,this,content,type,content,type,this,content,content,null,content,new,byte,0
MockMultipartFile -> public MockMultipartFile( 			String name, @Nullable String originalFilename, @Nullable String contentType, @Nullable byte[] content);1537741670;Create a new MockMultipartFile with the given content._@param name the name of the file_@param originalFilename the original filename (as on the client's machine)_@param contentType the content type (if known)_@param content the content of the file;public MockMultipartFile(_			String name, @Nullable String originalFilename, @Nullable String contentType, @Nullable byte[] content) {__		Assert.hasLength(name, "Name must not be null")__		this.name = name__		this.originalFilename = (originalFilename != null ? originalFilename : "")__		this.contentType = contentType__		this.content = (content != null ? content : new byte[0])__	};create,a,new,mock,multipart,file,with,the,given,content,param,name,the,name,of,the,file,param,original,filename,the,original,filename,as,on,the,client,s,machine,param,content,type,the,content,type,if,known,param,content,the,content,of,the,file;public,mock,multipart,file,string,name,nullable,string,original,filename,nullable,string,content,type,nullable,byte,content,assert,has,length,name,name,must,not,be,null,this,name,name,this,original,filename,original,filename,null,original,filename,this,content,type,content,type,this,content,content,null,content,new,byte,0
