# id;timestamp;commentText;codeText;commentWords;codeWords
MockCookie -> public MockCookie(String name, String value);1533303854;Constructs a {@code MockCookie} instance with the specified name and value.__@param name  the cookie name_@param value the cookie value_@see Cookie#Cookie(String, String);public MockCookie(String name, String value) {_		super(name, value)__	};constructs,a,code,mock,cookie,instance,with,the,specified,name,and,value,param,name,the,cookie,name,param,value,the,cookie,value,see,cookie,cookie,string,string;public,mock,cookie,string,name,string,value,super,name,value
MockCookie -> public MockCookie(String name, String value);1533307298;Constructor with the cookie name and value._@param name  the name_@param value the value_@see Cookie#Cookie(String, String);public MockCookie(String name, String value) {_		super(name, value)__	};constructor,with,the,cookie,name,and,value,param,name,the,name,param,value,the,value,see,cookie,cookie,string,string;public,mock,cookie,string,name,string,value,super,name,value
MockCookie -> public MockCookie(String name, String value);1539119598;Constructor with the cookie name and value._@param name  the name_@param value the value_@see Cookie#Cookie(String, String);public MockCookie(String name, String value) {_		super(name, value)__	};constructor,with,the,cookie,name,and,value,param,name,the,name,param,value,the,value,see,cookie,cookie,string,string;public,mock,cookie,string,name,string,value,super,name,value
MockCookie -> public void setSameSite(@Nullable String sameSite);1533303854;Add the "SameSite" attribute to the cookie._<p>_This limits the scope of the cookie such that it will only be attached to same site_requests if {@code "Strict"} or cross-site requests if {@code "Lax"}.__@see <a href="https://tools.ietf.org/html/draft-ietf-httpbis-rfc6265bis#section-4.1.2.7">RFC6265 bis</a>;public void setSameSite(@Nullable String sameSite) {_		this.sameSite = sameSite__	};add,the,same,site,attribute,to,the,cookie,p,this,limits,the,scope,of,the,cookie,such,that,it,will,only,be,attached,to,same,site,requests,if,code,strict,or,cross,site,requests,if,code,lax,see,a,href,https,tools,ietf,org,html,draft,ietf,httpbis,rfc6265bis,section,4,1,2,7,rfc6265,bis,a;public,void,set,same,site,nullable,string,same,site,this,same,site,same,site
MockCookie -> public void setSameSite(@Nullable String sameSite);1533307298;Add the "SameSite" attribute to the cookie._<p>This limits the scope of the cookie such that it will only be attached_to same site requests if {@code "Strict"} or cross-site requests if_{@code "Lax"}._@see <a href="https://tools.ietf.org/html/draft-ietf-httpbis-rfc6265bis#section-4.1.2.7">RFC6265 bis</a>;public void setSameSite(@Nullable String sameSite) {_		this.sameSite = sameSite__	};add,the,same,site,attribute,to,the,cookie,p,this,limits,the,scope,of,the,cookie,such,that,it,will,only,be,attached,to,same,site,requests,if,code,strict,or,cross,site,requests,if,code,lax,see,a,href,https,tools,ietf,org,html,draft,ietf,httpbis,rfc6265bis,section,4,1,2,7,rfc6265,bis,a;public,void,set,same,site,nullable,string,same,site,this,same,site,same,site
MockCookie -> public void setSameSite(@Nullable String sameSite);1539119598;Add the "SameSite" attribute to the cookie._<p>This limits the scope of the cookie such that it will only be attached_to same site requests if {@code "Strict"} or cross-site requests if_{@code "Lax"}._@see <a href="https://tools.ietf.org/html/draft-ietf-httpbis-rfc6265bis#section-4.1.2.7">RFC6265 bis</a>;public void setSameSite(@Nullable String sameSite) {_		this.sameSite = sameSite__	};add,the,same,site,attribute,to,the,cookie,p,this,limits,the,scope,of,the,cookie,such,that,it,will,only,be,attached,to,same,site,requests,if,code,strict,or,cross,site,requests,if,code,lax,see,a,href,https,tools,ietf,org,html,draft,ietf,httpbis,rfc6265bis,section,4,1,2,7,rfc6265,bis,a;public,void,set,same,site,nullable,string,same,site,this,same,site,same,site
MockCookie -> @Nullable 	public String getSameSite();1533303854;Return the cookie "SameSite" attribute, or {@code null} if not set._<p>_This limits the scope of the cookie such that it will only be attached to same site_requests if {@code "Strict"} or cross-site requests if {@code "Lax"}.__@see <a href="https://tools.ietf.org/html/draft-ietf-httpbis-rfc6265bis#section-4.1.2.7">RFC6265 bis</a>;@Nullable_	public String getSameSite() {_		return this.sameSite__	};return,the,cookie,same,site,attribute,or,code,null,if,not,set,p,this,limits,the,scope,of,the,cookie,such,that,it,will,only,be,attached,to,same,site,requests,if,code,strict,or,cross,site,requests,if,code,lax,see,a,href,https,tools,ietf,org,html,draft,ietf,httpbis,rfc6265bis,section,4,1,2,7,rfc6265,bis,a;nullable,public,string,get,same,site,return,this,same,site
MockCookie -> @Nullable 	public String getSameSite();1533307298;Return the "SameSite" attribute, or {@code null} if not set.;@Nullable_	public String getSameSite() {_		return this.sameSite__	};return,the,same,site,attribute,or,code,null,if,not,set;nullable,public,string,get,same,site,return,this,same,site
MockCookie -> @Nullable 	public String getSameSite();1539119598;Return the "SameSite" attribute, or {@code null} if not set.;@Nullable_	public String getSameSite() {_		return this.sameSite__	};return,the,same,site,attribute,or,code,null,if,not,set;nullable,public,string,get,same,site,return,this,same,site
MockCookie -> public static MockCookie parse(String setCookieHeader);1533303854;Factory method create {@code MockCookie} instance from Set-Cookie header value.__@param setCookieHeader the Set-Cookie header value_@return the created cookie instance;public static MockCookie parse(String setCookieHeader) {_		String[] cookieParts = setCookieHeader.split("\\s*=\\s*", 2)__		if (cookieParts.length != 2) {_			throw new IllegalArgumentException("Invalid Set-Cookie header value")__		}_		String name = cookieParts[0]__		String[] valueAndDirectives = cookieParts[1].split("\\s*_\\s*", 2)__		String value = valueAndDirectives[0]__		String[] directives = valueAndDirectives[1].split("\\s*_\\s*")__		String domain = null__		int maxAge = -1__		String path = null__		boolean secure = false__		boolean httpOnly = false__		String sameSite = null__		for (String directive : directives) {_			if (directive.startsWith("Domain")) {_				domain = directive.split("=")[1]__			}_			else if (directive.startsWith("Max-Age")) {_				maxAge = Integer.parseInt(directive.split("=")[1])__			}_			else if (directive.startsWith("Path")) {_				path = directive.split("=")[1]__			}_			else if (directive.startsWith("Secure")) {_				secure = true__			}_			else if (directive.startsWith("HttpOnly")) {_				httpOnly = true__			}_			else if (directive.startsWith("SameSite")) {_				sameSite = directive.split("=")[1]__			}_		}_		MockCookie cookie = new MockCookie(name, value)__		if (domain != null) {_			cookie.setDomain(domain)__		}_		cookie.setMaxAge(maxAge)__		cookie.setPath(path)__		cookie.setSecure(secure)__		cookie.setHttpOnly(httpOnly)__		cookie.setSameSite(sameSite)__		return cookie__	};factory,method,create,code,mock,cookie,instance,from,set,cookie,header,value,param,set,cookie,header,the,set,cookie,header,value,return,the,created,cookie,instance;public,static,mock,cookie,parse,string,set,cookie,header,string,cookie,parts,set,cookie,header,split,s,s,2,if,cookie,parts,length,2,throw,new,illegal,argument,exception,invalid,set,cookie,header,value,string,name,cookie,parts,0,string,value,and,directives,cookie,parts,1,split,s,s,2,string,value,value,and,directives,0,string,directives,value,and,directives,1,split,s,s,string,domain,null,int,max,age,1,string,path,null,boolean,secure,false,boolean,http,only,false,string,same,site,null,for,string,directive,directives,if,directive,starts,with,domain,domain,directive,split,1,else,if,directive,starts,with,max,age,max,age,integer,parse,int,directive,split,1,else,if,directive,starts,with,path,path,directive,split,1,else,if,directive,starts,with,secure,secure,true,else,if,directive,starts,with,http,only,http,only,true,else,if,directive,starts,with,same,site,same,site,directive,split,1,mock,cookie,cookie,new,mock,cookie,name,value,if,domain,null,cookie,set,domain,domain,cookie,set,max,age,max,age,cookie,set,path,path,cookie,set,secure,secure,cookie,set,http,only,http,only,cookie,set,same,site,same,site,return,cookie
MockCookie -> public static MockCookie parse(String setCookieHeader);1533307298;Factory method that parses the value of a "Set-Cookie" header._@param setCookieHeader the "Set-Cookie" value_@return the created cookie;public static MockCookie parse(String setCookieHeader) {_		String[] cookieParts = setCookieHeader.split("\\s*=\\s*", 2)__		Assert.isTrue(cookieParts.length == 2, "Invalid Set-Cookie header value")___		String name = cookieParts[0]__		String[] valueAndDirectives = cookieParts[1].split("\\s*_\\s*", 2)__		String value = valueAndDirectives[0]__		String[] directives = valueAndDirectives[1].split("\\s*_\\s*")___		MockCookie cookie = new MockCookie(name, value)__		for (String directive : directives) {_			if (directive.startsWith("Domain")) {_				cookie.setDomain(extractDirectiveValue(directive))__			}_			else if (directive.startsWith("Max-Age")) {_				cookie.setMaxAge(Integer.parseInt(extractDirectiveValue(directive)))__			}_			else if (directive.startsWith("Path")) {_				cookie.setPath(extractDirectiveValue(directive))__			}_			else if (directive.startsWith("Secure")) {_				cookie.setSecure(true)__			}_			else if (directive.startsWith("HttpOnly")) {_				cookie.setHttpOnly(true)__			}_			else if (directive.startsWith("SameSite")) {_				cookie.setSameSite(extractDirectiveValue(directive))__			}_		}_		return cookie__	};factory,method,that,parses,the,value,of,a,set,cookie,header,param,set,cookie,header,the,set,cookie,value,return,the,created,cookie;public,static,mock,cookie,parse,string,set,cookie,header,string,cookie,parts,set,cookie,header,split,s,s,2,assert,is,true,cookie,parts,length,2,invalid,set,cookie,header,value,string,name,cookie,parts,0,string,value,and,directives,cookie,parts,1,split,s,s,2,string,value,value,and,directives,0,string,directives,value,and,directives,1,split,s,s,mock,cookie,cookie,new,mock,cookie,name,value,for,string,directive,directives,if,directive,starts,with,domain,cookie,set,domain,extract,directive,value,directive,else,if,directive,starts,with,max,age,cookie,set,max,age,integer,parse,int,extract,directive,value,directive,else,if,directive,starts,with,path,cookie,set,path,extract,directive,value,directive,else,if,directive,starts,with,secure,cookie,set,secure,true,else,if,directive,starts,with,http,only,cookie,set,http,only,true,else,if,directive,starts,with,same,site,cookie,set,same,site,extract,directive,value,directive,return,cookie
MockCookie -> public static MockCookie parse(String setCookieHeader);1539119598;Factory method that parses the value of a "Set-Cookie" header._@param setCookieHeader the "Set-Cookie" value_ never {@code null} or empty_@return the created cookie;public static MockCookie parse(String setCookieHeader) {_		Assert.notNull(setCookieHeader, "Set-Cookie header must not be null")__		String[] cookieParts = setCookieHeader.split("\\s*=\\s*", 2)__		Assert.isTrue(cookieParts.length == 2, () -> "Invalid Set-Cookie header '" + setCookieHeader + "'")___		String name = cookieParts[0]__		String[] valueAndAttributes = cookieParts[1].split("\\s*_\\s*", 2)__		String value = valueAndAttributes[0]__		String[] attributes =_				(valueAndAttributes.length > 1 ? valueAndAttributes[1].split("\\s*_\\s*") : new String[0])___		MockCookie cookie = new MockCookie(name, value)__		for (String attribute : attributes) {_			if (attribute.startsWith("Domain")) {_				cookie.setDomain(extractAttributeValue(attribute, setCookieHeader))__			}_			else if (attribute.startsWith("Max-Age")) {_				cookie.setMaxAge(Integer.parseInt(extractAttributeValue(attribute, setCookieHeader)))__			}_			else if (attribute.startsWith("Path")) {_				cookie.setPath(extractAttributeValue(attribute, setCookieHeader))__			}_			else if (attribute.startsWith("Secure")) {_				cookie.setSecure(true)__			}_			else if (attribute.startsWith("HttpOnly")) {_				cookie.setHttpOnly(true)__			}_			else if (attribute.startsWith("SameSite")) {_				cookie.setSameSite(extractAttributeValue(attribute, setCookieHeader))__			}_		}_		return cookie__	};factory,method,that,parses,the,value,of,a,set,cookie,header,param,set,cookie,header,the,set,cookie,value,never,code,null,or,empty,return,the,created,cookie;public,static,mock,cookie,parse,string,set,cookie,header,assert,not,null,set,cookie,header,set,cookie,header,must,not,be,null,string,cookie,parts,set,cookie,header,split,s,s,2,assert,is,true,cookie,parts,length,2,invalid,set,cookie,header,set,cookie,header,string,name,cookie,parts,0,string,value,and,attributes,cookie,parts,1,split,s,s,2,string,value,value,and,attributes,0,string,attributes,value,and,attributes,length,1,value,and,attributes,1,split,s,s,new,string,0,mock,cookie,cookie,new,mock,cookie,name,value,for,string,attribute,attributes,if,attribute,starts,with,domain,cookie,set,domain,extract,attribute,value,attribute,set,cookie,header,else,if,attribute,starts,with,max,age,cookie,set,max,age,integer,parse,int,extract,attribute,value,attribute,set,cookie,header,else,if,attribute,starts,with,path,cookie,set,path,extract,attribute,value,attribute,set,cookie,header,else,if,attribute,starts,with,secure,cookie,set,secure,true,else,if,attribute,starts,with,http,only,cookie,set,http,only,true,else,if,attribute,starts,with,same,site,cookie,set,same,site,extract,attribute,value,attribute,set,cookie,header,return,cookie
