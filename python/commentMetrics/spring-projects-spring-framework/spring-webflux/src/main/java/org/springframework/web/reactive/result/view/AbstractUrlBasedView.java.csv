commented;modifiers;parameterAmount;loc;comment;code
true;public;1;3;/**  * Set the URL of the resource that this view wraps.  * The URL must be appropriate for the concrete View implementation.  */ ;/**  * Set the URL of the resource that this view wraps.  * The URL must be appropriate for the concrete View implementation.  */ public void setUrl(@Nullable String url) {     this.url = url. }
true;public;0;4;/**  * Return the URL of the resource that this view wraps.  */ ;/**  * Return the URL of the resource that this view wraps.  */ @Nullable public String getUrl() {     return this.url. }
false;public;0;6;;@Override public void afterPropertiesSet() throws Exception {     if (getUrl() == null) {         throw new IllegalArgumentException("Property 'url' is required").     } }
true;public,abstract;1;1;/**  * Check whether the resource for the configured URL actually exists.  * @param locale the desired Locale that we're looking for  * @return {@code false} if the resource exists  * {@code false} if we know that it does not exist  * @throws Exception if the resource exists but is invalid (e.g. could not be parsed)  */ ;/**  * Check whether the resource for the configured URL actually exists.  * @param locale the desired Locale that we're looking for  * @return {@code false} if the resource exists  * {@code false} if we know that it does not exist  * @throws Exception if the resource exists but is invalid (e.g. could not be parsed)  */ public abstract boolean checkResourceExists(Locale locale) throws Exception.
false;public;0;4;;@Override public String toString() {     return super.toString() + ". URL [" + getUrl() + "]". }
