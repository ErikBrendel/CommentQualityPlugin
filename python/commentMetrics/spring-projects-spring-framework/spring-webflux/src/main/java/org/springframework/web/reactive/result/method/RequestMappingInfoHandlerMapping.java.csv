# id;timestamp;commentText;codeText;commentWords;codeWords
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public boolean hasProducesMismatch();1485986572;Any partial matches for "methods", "consumes", and "produces"?;public boolean hasProducesMismatch() {_			return !this.partialMatches.stream()._					filter(PartialMatch::hasProducesMatch).findAny().isPresent()__		};any,partial,matches,for,methods,consumes,and,produces;public,boolean,has,produces,mismatch,return,this,partial,matches,stream,filter,partial,match,has,produces,match,find,any,is,present
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public boolean hasProducesMismatch();1486635693;Any partial matches for "methods", "consumes", and "produces"?;public boolean hasProducesMismatch() {_			return !this.partialMatches.stream()._					filter(PartialMatch::hasProducesMatch).findAny().isPresent()__		};any,partial,matches,for,methods,consumes,and,produces;public,boolean,has,produces,mismatch,return,this,partial,matches,stream,filter,partial,match,has,produces,match,find,any,is,present
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public boolean hasProducesMismatch();1486674586;Any partial matches for "methods", "consumes", and "produces"?;public boolean hasProducesMismatch() {_			return !this.partialMatches.stream()._					filter(PartialMatch::hasProducesMatch).findAny().isPresent()__		};any,partial,matches,for,methods,consumes,and,produces;public,boolean,has,produces,mismatch,return,this,partial,matches,stream,filter,partial,match,has,produces,match,find,any,is,present
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public boolean hasProducesMismatch();1486747801;Any partial matches for "methods", "consumes", and "produces"?;public boolean hasProducesMismatch() {_			return !this.partialMatches.stream()._					filter(PartialMatch::hasProducesMatch).findAny().isPresent()__		};any,partial,matches,for,methods,consumes,and,produces;public,boolean,has,produces,mismatch,return,this,partial,matches,stream,filter,partial,match,has,produces,match,find,any,is,present
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public boolean hasProducesMismatch();1489852683;Any partial matches for "methods", "consumes", and "produces"?;public boolean hasProducesMismatch() {_			return !this.partialMatches.stream()._					filter(PartialMatch::hasProducesMatch).findAny().isPresent()__		};any,partial,matches,for,methods,consumes,and,produces;public,boolean,has,produces,mismatch,return,this,partial,matches,stream,filter,partial,match,has,produces,match,find,any,is,present
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public boolean hasProducesMismatch();1490197121;Any partial matches for "methods", "consumes", and "produces"?;public boolean hasProducesMismatch() {_			return this.partialMatches.stream()._					noneMatch(PartialMatch::hasProducesMatch)__		};any,partial,matches,for,methods,consumes,and,produces;public,boolean,has,produces,mismatch,return,this,partial,matches,stream,none,match,partial,match,has,produces,match
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public boolean hasProducesMismatch();1495639183;Any partial matches for "methods", "consumes", and "produces"?;public boolean hasProducesMismatch() {_			return this.partialMatches.stream()._					noneMatch(PartialMatch::hasProducesMatch)__		};any,partial,matches,for,methods,consumes,and,produces;public,boolean,has,produces,mismatch,return,this,partial,matches,stream,none,match,partial,match,has,produces,match
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public boolean hasProducesMismatch();1496334664;Any partial matches for "methods", "consumes", and "produces"?;public boolean hasProducesMismatch() {_			return this.partialMatches.stream()._					noneMatch(PartialMatch::hasProducesMatch)__		};any,partial,matches,for,methods,consumes,and,produces;public,boolean,has,produces,mismatch,return,this,partial,matches,stream,none,match,partial,match,has,produces,match
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public boolean hasProducesMismatch();1496433164;Any partial matches for "methods", "consumes", and "produces"?;public boolean hasProducesMismatch() {_			return this.partialMatches.stream()._					noneMatch(PartialMatch::hasProducesMatch)__		};any,partial,matches,for,methods,consumes,and,produces;public,boolean,has,produces,mismatch,return,this,partial,matches,stream,none,match,partial,match,has,produces,match
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public boolean hasProducesMismatch();1497039338;Any partial matches for "methods", "consumes", and "produces"?;public boolean hasProducesMismatch() {_			return this.partialMatches.stream()._					noneMatch(PartialMatch::hasProducesMatch)__		};any,partial,matches,for,methods,consumes,and,produces;public,boolean,has,produces,mismatch,return,this,partial,matches,stream,none,match,partial,match,has,produces,match
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public boolean hasProducesMismatch();1497039338;Any partial matches for "methods", "consumes", and "produces"?;public boolean hasProducesMismatch() {_			return this.partialMatches.stream()._					noneMatch(PartialMatch::hasProducesMatch)__		};any,partial,matches,for,methods,consumes,and,produces;public,boolean,has,produces,mismatch,return,this,partial,matches,stream,none,match,partial,match,has,produces,match
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public boolean hasProducesMismatch();1497286385;Any partial matches for "methods", "consumes", and "produces"?;public boolean hasProducesMismatch() {_			return this.partialMatches.stream()._					noneMatch(PartialMatch::hasProducesMatch)__		};any,partial,matches,for,methods,consumes,and,produces;public,boolean,has,produces,mismatch,return,this,partial,matches,stream,none,match,partial,match,has,produces,match
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public boolean hasProducesMismatch();1498756719;Any partial matches for "methods", "consumes", and "produces"?;public boolean hasProducesMismatch() {_			return this.partialMatches.stream()._					noneMatch(PartialMatch::hasProducesMatch)__		};any,partial,matches,for,methods,consumes,and,produces;public,boolean,has,produces,mismatch,return,this,partial,matches,stream,none,match,partial,match,has,produces,match
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public boolean hasProducesMismatch();1498861175;Any partial matches for "methods", "consumes", and "produces"?;public boolean hasProducesMismatch() {_			return this.partialMatches.stream()._					noneMatch(PartialMatch::hasProducesMatch)__		};any,partial,matches,for,methods,consumes,and,produces;public,boolean,has,produces,mismatch,return,this,partial,matches,stream,none,match,partial,match,has,produces,match
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public boolean hasProducesMismatch();1498861175;Any partial matches for "methods", "consumes", and "produces"?;public boolean hasProducesMismatch() {_			return this.partialMatches.stream()._					noneMatch(PartialMatch::hasProducesMatch)__		};any,partial,matches,for,methods,consumes,and,produces;public,boolean,has,produces,mismatch,return,this,partial,matches,stream,none,match,partial,match,has,produces,match
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public boolean hasProducesMismatch();1498953917;Any partial matches for "methods", "consumes", and "produces"?;public boolean hasProducesMismatch() {_			return this.partialMatches.stream()._					noneMatch(PartialMatch::hasProducesMatch)__		};any,partial,matches,for,methods,consumes,and,produces;public,boolean,has,produces,mismatch,return,this,partial,matches,stream,none,match,partial,match,has,produces,match
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public boolean hasProducesMismatch();1501237594;Any partial matches for "methods", "consumes", and "produces"?;public boolean hasProducesMismatch() {_			return this.partialMatches.stream()._					noneMatch(PartialMatch::hasProducesMatch)__		};any,partial,matches,for,methods,consumes,and,produces;public,boolean,has,produces,mismatch,return,this,partial,matches,stream,none,match,partial,match,has,produces,match
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public boolean hasProducesMismatch();1501676476;Any partial matches for "methods", "consumes", and "produces"?;public boolean hasProducesMismatch() {_			return this.partialMatches.stream()._					noneMatch(PartialMatch::hasProducesMatch)__		};any,partial,matches,for,methods,consumes,and,produces;public,boolean,has,produces,mismatch,return,this,partial,matches,stream,none,match,partial,match,has,produces,match
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public boolean hasProducesMismatch();1501679128;Any partial matches for "methods", "consumes", and "produces"?;public boolean hasProducesMismatch() {_			return this.partialMatches.stream()._					noneMatch(PartialMatch::hasProducesMatch)__		};any,partial,matches,for,methods,consumes,and,produces;public,boolean,has,produces,mismatch,return,this,partial,matches,stream,none,match,partial,match,has,produces,match
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public boolean hasProducesMismatch();1518987682;Any partial matches for "methods", "consumes", and "produces"?;public boolean hasProducesMismatch() {_			return this.partialMatches.stream()._					noneMatch(PartialMatch::hasProducesMatch)__		};any,partial,matches,for,methods,consumes,and,produces;public,boolean,has,produces,mismatch,return,this,partial,matches,stream,none,match,partial,match,has,produces,match
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public boolean hasProducesMismatch();1526303103;Any partial matches for "methods", "consumes", and "produces"?;public boolean hasProducesMismatch() {_			return this.partialMatches.stream()._					noneMatch(PartialMatch::hasProducesMatch)__		};any,partial,matches,for,methods,consumes,and,produces;public,boolean,has,produces,mismatch,return,this,partial,matches,stream,none,match,partial,match,has,produces,match
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public boolean hasProducesMismatch();1530174524;Any partial matches for "methods", "consumes", and "produces"?;public boolean hasProducesMismatch() {_			return this.partialMatches.stream()._					noneMatch(PartialMatch::hasProducesMatch)__		};any,partial,matches,for,methods,consumes,and,produces;public,boolean,has,produces,mismatch,return,this,partial,matches,stream,none,match,partial,match,has,produces,match
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public boolean hasConsumesMismatch();1485986572;Any partial matches for "methods" and "consumes"?;public boolean hasConsumesMismatch() {_			return !this.partialMatches.stream()._					filter(PartialMatch::hasConsumesMatch).findAny().isPresent()__		};any,partial,matches,for,methods,and,consumes;public,boolean,has,consumes,mismatch,return,this,partial,matches,stream,filter,partial,match,has,consumes,match,find,any,is,present
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public boolean hasConsumesMismatch();1486635693;Any partial matches for "methods" and "consumes"?;public boolean hasConsumesMismatch() {_			return !this.partialMatches.stream()._					filter(PartialMatch::hasConsumesMatch).findAny().isPresent()__		};any,partial,matches,for,methods,and,consumes;public,boolean,has,consumes,mismatch,return,this,partial,matches,stream,filter,partial,match,has,consumes,match,find,any,is,present
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public boolean hasConsumesMismatch();1486674586;Any partial matches for "methods" and "consumes"?;public boolean hasConsumesMismatch() {_			return !this.partialMatches.stream()._					filter(PartialMatch::hasConsumesMatch).findAny().isPresent()__		};any,partial,matches,for,methods,and,consumes;public,boolean,has,consumes,mismatch,return,this,partial,matches,stream,filter,partial,match,has,consumes,match,find,any,is,present
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public boolean hasConsumesMismatch();1486747801;Any partial matches for "methods" and "consumes"?;public boolean hasConsumesMismatch() {_			return !this.partialMatches.stream()._					filter(PartialMatch::hasConsumesMatch).findAny().isPresent()__		};any,partial,matches,for,methods,and,consumes;public,boolean,has,consumes,mismatch,return,this,partial,matches,stream,filter,partial,match,has,consumes,match,find,any,is,present
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public boolean hasConsumesMismatch();1489852683;Any partial matches for "methods" and "consumes"?;public boolean hasConsumesMismatch() {_			return !this.partialMatches.stream()._					filter(PartialMatch::hasConsumesMatch).findAny().isPresent()__		};any,partial,matches,for,methods,and,consumes;public,boolean,has,consumes,mismatch,return,this,partial,matches,stream,filter,partial,match,has,consumes,match,find,any,is,present
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public boolean hasConsumesMismatch();1490197121;Any partial matches for "methods" and "consumes"?;public boolean hasConsumesMismatch() {_			return this.partialMatches.stream()._					noneMatch(PartialMatch::hasConsumesMatch)__		};any,partial,matches,for,methods,and,consumes;public,boolean,has,consumes,mismatch,return,this,partial,matches,stream,none,match,partial,match,has,consumes,match
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public boolean hasConsumesMismatch();1495639183;Any partial matches for "methods" and "consumes"?;public boolean hasConsumesMismatch() {_			return this.partialMatches.stream()._					noneMatch(PartialMatch::hasConsumesMatch)__		};any,partial,matches,for,methods,and,consumes;public,boolean,has,consumes,mismatch,return,this,partial,matches,stream,none,match,partial,match,has,consumes,match
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public boolean hasConsumesMismatch();1496334664;Any partial matches for "methods" and "consumes"?;public boolean hasConsumesMismatch() {_			return this.partialMatches.stream()._					noneMatch(PartialMatch::hasConsumesMatch)__		};any,partial,matches,for,methods,and,consumes;public,boolean,has,consumes,mismatch,return,this,partial,matches,stream,none,match,partial,match,has,consumes,match
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public boolean hasConsumesMismatch();1496433164;Any partial matches for "methods" and "consumes"?;public boolean hasConsumesMismatch() {_			return this.partialMatches.stream()._					noneMatch(PartialMatch::hasConsumesMatch)__		};any,partial,matches,for,methods,and,consumes;public,boolean,has,consumes,mismatch,return,this,partial,matches,stream,none,match,partial,match,has,consumes,match
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public boolean hasConsumesMismatch();1497039338;Any partial matches for "methods" and "consumes"?;public boolean hasConsumesMismatch() {_			return this.partialMatches.stream()._					noneMatch(PartialMatch::hasConsumesMatch)__		};any,partial,matches,for,methods,and,consumes;public,boolean,has,consumes,mismatch,return,this,partial,matches,stream,none,match,partial,match,has,consumes,match
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public boolean hasConsumesMismatch();1497039338;Any partial matches for "methods" and "consumes"?;public boolean hasConsumesMismatch() {_			return this.partialMatches.stream()._					noneMatch(PartialMatch::hasConsumesMatch)__		};any,partial,matches,for,methods,and,consumes;public,boolean,has,consumes,mismatch,return,this,partial,matches,stream,none,match,partial,match,has,consumes,match
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public boolean hasConsumesMismatch();1497286385;Any partial matches for "methods" and "consumes"?;public boolean hasConsumesMismatch() {_			return this.partialMatches.stream()._					noneMatch(PartialMatch::hasConsumesMatch)__		};any,partial,matches,for,methods,and,consumes;public,boolean,has,consumes,mismatch,return,this,partial,matches,stream,none,match,partial,match,has,consumes,match
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public boolean hasConsumesMismatch();1498756719;Any partial matches for "methods" and "consumes"?;public boolean hasConsumesMismatch() {_			return this.partialMatches.stream()._					noneMatch(PartialMatch::hasConsumesMatch)__		};any,partial,matches,for,methods,and,consumes;public,boolean,has,consumes,mismatch,return,this,partial,matches,stream,none,match,partial,match,has,consumes,match
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public boolean hasConsumesMismatch();1498861175;Any partial matches for "methods" and "consumes"?;public boolean hasConsumesMismatch() {_			return this.partialMatches.stream()._					noneMatch(PartialMatch::hasConsumesMatch)__		};any,partial,matches,for,methods,and,consumes;public,boolean,has,consumes,mismatch,return,this,partial,matches,stream,none,match,partial,match,has,consumes,match
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public boolean hasConsumesMismatch();1498861175;Any partial matches for "methods" and "consumes"?;public boolean hasConsumesMismatch() {_			return this.partialMatches.stream()._					noneMatch(PartialMatch::hasConsumesMatch)__		};any,partial,matches,for,methods,and,consumes;public,boolean,has,consumes,mismatch,return,this,partial,matches,stream,none,match,partial,match,has,consumes,match
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public boolean hasConsumesMismatch();1498953917;Any partial matches for "methods" and "consumes"?;public boolean hasConsumesMismatch() {_			return this.partialMatches.stream()._					noneMatch(PartialMatch::hasConsumesMatch)__		};any,partial,matches,for,methods,and,consumes;public,boolean,has,consumes,mismatch,return,this,partial,matches,stream,none,match,partial,match,has,consumes,match
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public boolean hasConsumesMismatch();1501237594;Any partial matches for "methods" and "consumes"?;public boolean hasConsumesMismatch() {_			return this.partialMatches.stream()._					noneMatch(PartialMatch::hasConsumesMatch)__		};any,partial,matches,for,methods,and,consumes;public,boolean,has,consumes,mismatch,return,this,partial,matches,stream,none,match,partial,match,has,consumes,match
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public boolean hasConsumesMismatch();1501676476;Any partial matches for "methods" and "consumes"?;public boolean hasConsumesMismatch() {_			return this.partialMatches.stream()._					noneMatch(PartialMatch::hasConsumesMatch)__		};any,partial,matches,for,methods,and,consumes;public,boolean,has,consumes,mismatch,return,this,partial,matches,stream,none,match,partial,match,has,consumes,match
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public boolean hasConsumesMismatch();1501679128;Any partial matches for "methods" and "consumes"?;public boolean hasConsumesMismatch() {_			return this.partialMatches.stream()._					noneMatch(PartialMatch::hasConsumesMatch)__		};any,partial,matches,for,methods,and,consumes;public,boolean,has,consumes,mismatch,return,this,partial,matches,stream,none,match,partial,match,has,consumes,match
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public boolean hasConsumesMismatch();1518987682;Any partial matches for "methods" and "consumes"?;public boolean hasConsumesMismatch() {_			return this.partialMatches.stream()._					noneMatch(PartialMatch::hasConsumesMatch)__		};any,partial,matches,for,methods,and,consumes;public,boolean,has,consumes,mismatch,return,this,partial,matches,stream,none,match,partial,match,has,consumes,match
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public boolean hasConsumesMismatch();1526303103;Any partial matches for "methods" and "consumes"?;public boolean hasConsumesMismatch() {_			return this.partialMatches.stream()._					noneMatch(PartialMatch::hasConsumesMatch)__		};any,partial,matches,for,methods,and,consumes;public,boolean,has,consumes,mismatch,return,this,partial,matches,stream,none,match,partial,match,has,consumes,match
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public boolean hasConsumesMismatch();1530174524;Any partial matches for "methods" and "consumes"?;public boolean hasConsumesMismatch() {_			return this.partialMatches.stream()._					noneMatch(PartialMatch::hasConsumesMatch)__		};any,partial,matches,for,methods,and,consumes;public,boolean,has,consumes,mismatch,return,this,partial,matches,stream,none,match,partial,match,has,consumes,match
RequestMappingInfoHandlerMapping -> @Override 	protected HandlerMethod handleNoMatch(Set<RequestMappingInfo> infos, 			ServerWebExchange exchange) throws Exception;1498953917;Iterate all RequestMappingInfos once again, look if any match by URL at_least and raise exceptions accordingly._@throws MethodNotAllowedException for matches by URL but not by HTTP method_@throws UnsupportedMediaTypeStatusException if there are matches by URL_and HTTP method but not by consumable media types_@throws NotAcceptableStatusException if there are matches by URL and HTTP_method but not by producible media types_@throws ServerWebInputException if there are matches by URL and HTTP_method but not by query parameter conditions;@Override_	protected HandlerMethod handleNoMatch(Set<RequestMappingInfo> infos,_			ServerWebExchange exchange) throws Exception {__		PartialMatchHelper helper = new PartialMatchHelper(infos, exchange)___		if (helper.isEmpty()) {_			return null__		}__		ServerHttpRequest request = exchange.getRequest()___		if (helper.hasMethodsMismatch()) {_			String httpMethod = request.getMethodValue()__			Set<HttpMethod> methods = helper.getAllowedMethods()__			if (HttpMethod.OPTIONS.matches(httpMethod)) {_				HttpOptionsHandler handler = new HttpOptionsHandler(methods)__				return new HandlerMethod(handler, HTTP_OPTIONS_HANDLE_METHOD)__			}_			throw new MethodNotAllowedException(httpMethod, methods)__		}__		if (helper.hasConsumesMismatch()) {_			Set<MediaType> mediaTypes = helper.getConsumableMediaTypes()__			MediaType contentType__			try {_				contentType = request.getHeaders().getContentType()__			}_			catch (InvalidMediaTypeException ex) {_				throw new UnsupportedMediaTypeStatusException(ex.getMessage())__			}_			throw new UnsupportedMediaTypeStatusException(contentType, new ArrayList<>(mediaTypes))__		}__		if (helper.hasProducesMismatch()) {_			Set<MediaType> mediaTypes = helper.getProducibleMediaTypes()__			throw new NotAcceptableStatusException(new ArrayList<>(mediaTypes))__		}__		if (helper.hasParamsMismatch()) {_			throw new ServerWebInputException(_					"Unsatisfied query parameter conditions: " + helper.getParamConditions() +_							", actual parameters: " + request.getQueryParams())__		}__		return null__	};iterate,all,request,mapping,infos,once,again,look,if,any,match,by,url,at,least,and,raise,exceptions,accordingly,throws,method,not,allowed,exception,for,matches,by,url,but,not,by,http,method,throws,unsupported,media,type,status,exception,if,there,are,matches,by,url,and,http,method,but,not,by,consumable,media,types,throws,not,acceptable,status,exception,if,there,are,matches,by,url,and,http,method,but,not,by,producible,media,types,throws,server,web,input,exception,if,there,are,matches,by,url,and,http,method,but,not,by,query,parameter,conditions;override,protected,handler,method,handle,no,match,set,request,mapping,info,infos,server,web,exchange,exchange,throws,exception,partial,match,helper,helper,new,partial,match,helper,infos,exchange,if,helper,is,empty,return,null,server,http,request,request,exchange,get,request,if,helper,has,methods,mismatch,string,http,method,request,get,method,value,set,http,method,methods,helper,get,allowed,methods,if,http,method,options,matches,http,method,http,options,handler,handler,new,http,options,handler,methods,return,new,handler,method,handler,throw,new,method,not,allowed,exception,http,method,methods,if,helper,has,consumes,mismatch,set,media,type,media,types,helper,get,consumable,media,types,media,type,content,type,try,content,type,request,get,headers,get,content,type,catch,invalid,media,type,exception,ex,throw,new,unsupported,media,type,status,exception,ex,get,message,throw,new,unsupported,media,type,status,exception,content,type,new,array,list,media,types,if,helper,has,produces,mismatch,set,media,type,media,types,helper,get,producible,media,types,throw,new,not,acceptable,status,exception,new,array,list,media,types,if,helper,has,params,mismatch,throw,new,server,web,input,exception,unsatisfied,query,parameter,conditions,helper,get,param,conditions,actual,parameters,request,get,query,params,return,null
RequestMappingInfoHandlerMapping -> @Override 	protected HandlerMethod handleNoMatch(Set<RequestMappingInfo> infos, 			ServerWebExchange exchange) throws Exception;1501237594;Iterate all RequestMappingInfos once again, look if any match by URL at_least and raise exceptions accordingly._@throws MethodNotAllowedException for matches by URL but not by HTTP method_@throws UnsupportedMediaTypeStatusException if there are matches by URL_and HTTP method but not by consumable media types_@throws NotAcceptableStatusException if there are matches by URL and HTTP_method but not by producible media types_@throws ServerWebInputException if there are matches by URL and HTTP_method but not by query parameter conditions;@Override_	protected HandlerMethod handleNoMatch(Set<RequestMappingInfo> infos,_			ServerWebExchange exchange) throws Exception {__		PartialMatchHelper helper = new PartialMatchHelper(infos, exchange)___		if (helper.isEmpty()) {_			return null__		}__		ServerHttpRequest request = exchange.getRequest()___		if (helper.hasMethodsMismatch()) {_			String httpMethod = request.getMethodValue()__			Set<HttpMethod> methods = helper.getAllowedMethods()__			if (HttpMethod.OPTIONS.matches(httpMethod)) {_				HttpOptionsHandler handler = new HttpOptionsHandler(methods)__				return new HandlerMethod(handler, HTTP_OPTIONS_HANDLE_METHOD)__			}_			throw new MethodNotAllowedException(httpMethod, methods)__		}__		if (helper.hasConsumesMismatch()) {_			Set<MediaType> mediaTypes = helper.getConsumableMediaTypes()__			MediaType contentType__			try {_				contentType = request.getHeaders().getContentType()__			}_			catch (InvalidMediaTypeException ex) {_				throw new UnsupportedMediaTypeStatusException(ex.getMessage())__			}_			throw new UnsupportedMediaTypeStatusException(contentType, new ArrayList<>(mediaTypes))__		}__		if (helper.hasProducesMismatch()) {_			Set<MediaType> mediaTypes = helper.getProducibleMediaTypes()__			throw new NotAcceptableStatusException(new ArrayList<>(mediaTypes))__		}__		if (helper.hasParamsMismatch()) {_			throw new ServerWebInputException(_					"Unsatisfied query parameter conditions: " + helper.getParamConditions() +_							", actual parameters: " + request.getQueryParams())__		}__		return null__	};iterate,all,request,mapping,infos,once,again,look,if,any,match,by,url,at,least,and,raise,exceptions,accordingly,throws,method,not,allowed,exception,for,matches,by,url,but,not,by,http,method,throws,unsupported,media,type,status,exception,if,there,are,matches,by,url,and,http,method,but,not,by,consumable,media,types,throws,not,acceptable,status,exception,if,there,are,matches,by,url,and,http,method,but,not,by,producible,media,types,throws,server,web,input,exception,if,there,are,matches,by,url,and,http,method,but,not,by,query,parameter,conditions;override,protected,handler,method,handle,no,match,set,request,mapping,info,infos,server,web,exchange,exchange,throws,exception,partial,match,helper,helper,new,partial,match,helper,infos,exchange,if,helper,is,empty,return,null,server,http,request,request,exchange,get,request,if,helper,has,methods,mismatch,string,http,method,request,get,method,value,set,http,method,methods,helper,get,allowed,methods,if,http,method,options,matches,http,method,http,options,handler,handler,new,http,options,handler,methods,return,new,handler,method,handler,throw,new,method,not,allowed,exception,http,method,methods,if,helper,has,consumes,mismatch,set,media,type,media,types,helper,get,consumable,media,types,media,type,content,type,try,content,type,request,get,headers,get,content,type,catch,invalid,media,type,exception,ex,throw,new,unsupported,media,type,status,exception,ex,get,message,throw,new,unsupported,media,type,status,exception,content,type,new,array,list,media,types,if,helper,has,produces,mismatch,set,media,type,media,types,helper,get,producible,media,types,throw,new,not,acceptable,status,exception,new,array,list,media,types,if,helper,has,params,mismatch,throw,new,server,web,input,exception,unsatisfied,query,parameter,conditions,helper,get,param,conditions,actual,parameters,request,get,query,params,return,null
RequestMappingInfoHandlerMapping -> @Override 	protected HandlerMethod handleNoMatch(Set<RequestMappingInfo> infos, 			ServerWebExchange exchange) throws Exception;1501676476;Iterate all RequestMappingInfos once again, look if any match by URL at_least and raise exceptions accordingly._@throws MethodNotAllowedException for matches by URL but not by HTTP method_@throws UnsupportedMediaTypeStatusException if there are matches by URL_and HTTP method but not by consumable media types_@throws NotAcceptableStatusException if there are matches by URL and HTTP_method but not by producible media types_@throws ServerWebInputException if there are matches by URL and HTTP_method but not by query parameter conditions;@Override_	protected HandlerMethod handleNoMatch(Set<RequestMappingInfo> infos,_			ServerWebExchange exchange) throws Exception {__		PartialMatchHelper helper = new PartialMatchHelper(infos, exchange)___		if (helper.isEmpty()) {_			return null__		}__		ServerHttpRequest request = exchange.getRequest()___		if (helper.hasMethodsMismatch()) {_			String httpMethod = request.getMethodValue()__			Set<HttpMethod> methods = helper.getAllowedMethods()__			if (HttpMethod.OPTIONS.matches(httpMethod)) {_				HttpOptionsHandler handler = new HttpOptionsHandler(methods)__				return new HandlerMethod(handler, HTTP_OPTIONS_HANDLE_METHOD)__			}_			throw new MethodNotAllowedException(httpMethod, methods)__		}__		if (helper.hasConsumesMismatch()) {_			Set<MediaType> mediaTypes = helper.getConsumableMediaTypes()__			MediaType contentType__			try {_				contentType = request.getHeaders().getContentType()__			}_			catch (InvalidMediaTypeException ex) {_				throw new UnsupportedMediaTypeStatusException(ex.getMessage())__			}_			throw new UnsupportedMediaTypeStatusException(contentType, new ArrayList<>(mediaTypes))__		}__		if (helper.hasProducesMismatch()) {_			Set<MediaType> mediaTypes = helper.getProducibleMediaTypes()__			throw new NotAcceptableStatusException(new ArrayList<>(mediaTypes))__		}__		if (helper.hasParamsMismatch()) {_			throw new ServerWebInputException(_					"Unsatisfied query parameter conditions: " + helper.getParamConditions() +_							", actual parameters: " + request.getQueryParams())__		}__		return null__	};iterate,all,request,mapping,infos,once,again,look,if,any,match,by,url,at,least,and,raise,exceptions,accordingly,throws,method,not,allowed,exception,for,matches,by,url,but,not,by,http,method,throws,unsupported,media,type,status,exception,if,there,are,matches,by,url,and,http,method,but,not,by,consumable,media,types,throws,not,acceptable,status,exception,if,there,are,matches,by,url,and,http,method,but,not,by,producible,media,types,throws,server,web,input,exception,if,there,are,matches,by,url,and,http,method,but,not,by,query,parameter,conditions;override,protected,handler,method,handle,no,match,set,request,mapping,info,infos,server,web,exchange,exchange,throws,exception,partial,match,helper,helper,new,partial,match,helper,infos,exchange,if,helper,is,empty,return,null,server,http,request,request,exchange,get,request,if,helper,has,methods,mismatch,string,http,method,request,get,method,value,set,http,method,methods,helper,get,allowed,methods,if,http,method,options,matches,http,method,http,options,handler,handler,new,http,options,handler,methods,return,new,handler,method,handler,throw,new,method,not,allowed,exception,http,method,methods,if,helper,has,consumes,mismatch,set,media,type,media,types,helper,get,consumable,media,types,media,type,content,type,try,content,type,request,get,headers,get,content,type,catch,invalid,media,type,exception,ex,throw,new,unsupported,media,type,status,exception,ex,get,message,throw,new,unsupported,media,type,status,exception,content,type,new,array,list,media,types,if,helper,has,produces,mismatch,set,media,type,media,types,helper,get,producible,media,types,throw,new,not,acceptable,status,exception,new,array,list,media,types,if,helper,has,params,mismatch,throw,new,server,web,input,exception,unsatisfied,query,parameter,conditions,helper,get,param,conditions,actual,parameters,request,get,query,params,return,null
RequestMappingInfoHandlerMapping -> @Override 	protected HandlerMethod handleNoMatch(Set<RequestMappingInfo> infos, 			ServerWebExchange exchange) throws Exception;1501679128;Iterate all RequestMappingInfos once again, look if any match by URL at_least and raise exceptions accordingly._@throws MethodNotAllowedException for matches by URL but not by HTTP method_@throws UnsupportedMediaTypeStatusException if there are matches by URL_and HTTP method but not by consumable media types_@throws NotAcceptableStatusException if there are matches by URL and HTTP_method but not by producible media types_@throws ServerWebInputException if there are matches by URL and HTTP_method but not by query parameter conditions;@Override_	protected HandlerMethod handleNoMatch(Set<RequestMappingInfo> infos,_			ServerWebExchange exchange) throws Exception {__		PartialMatchHelper helper = new PartialMatchHelper(infos, exchange)___		if (helper.isEmpty()) {_			return null__		}__		ServerHttpRequest request = exchange.getRequest()___		if (helper.hasMethodsMismatch()) {_			String httpMethod = request.getMethodValue()__			Set<HttpMethod> methods = helper.getAllowedMethods()__			if (HttpMethod.OPTIONS.matches(httpMethod)) {_				HttpOptionsHandler handler = new HttpOptionsHandler(methods)__				return new HandlerMethod(handler, HTTP_OPTIONS_HANDLE_METHOD)__			}_			throw new MethodNotAllowedException(httpMethod, methods)__		}__		if (helper.hasConsumesMismatch()) {_			Set<MediaType> mediaTypes = helper.getConsumableMediaTypes()__			MediaType contentType__			try {_				contentType = request.getHeaders().getContentType()__			}_			catch (InvalidMediaTypeException ex) {_				throw new UnsupportedMediaTypeStatusException(ex.getMessage())__			}_			throw new UnsupportedMediaTypeStatusException(contentType, new ArrayList<>(mediaTypes))__		}__		if (helper.hasProducesMismatch()) {_			Set<MediaType> mediaTypes = helper.getProducibleMediaTypes()__			throw new NotAcceptableStatusException(new ArrayList<>(mediaTypes))__		}__		if (helper.hasParamsMismatch()) {_			throw new ServerWebInputException(_					"Unsatisfied query parameter conditions: " + helper.getParamConditions() +_							", actual parameters: " + request.getQueryParams())__		}__		return null__	};iterate,all,request,mapping,infos,once,again,look,if,any,match,by,url,at,least,and,raise,exceptions,accordingly,throws,method,not,allowed,exception,for,matches,by,url,but,not,by,http,method,throws,unsupported,media,type,status,exception,if,there,are,matches,by,url,and,http,method,but,not,by,consumable,media,types,throws,not,acceptable,status,exception,if,there,are,matches,by,url,and,http,method,but,not,by,producible,media,types,throws,server,web,input,exception,if,there,are,matches,by,url,and,http,method,but,not,by,query,parameter,conditions;override,protected,handler,method,handle,no,match,set,request,mapping,info,infos,server,web,exchange,exchange,throws,exception,partial,match,helper,helper,new,partial,match,helper,infos,exchange,if,helper,is,empty,return,null,server,http,request,request,exchange,get,request,if,helper,has,methods,mismatch,string,http,method,request,get,method,value,set,http,method,methods,helper,get,allowed,methods,if,http,method,options,matches,http,method,http,options,handler,handler,new,http,options,handler,methods,return,new,handler,method,handler,throw,new,method,not,allowed,exception,http,method,methods,if,helper,has,consumes,mismatch,set,media,type,media,types,helper,get,consumable,media,types,media,type,content,type,try,content,type,request,get,headers,get,content,type,catch,invalid,media,type,exception,ex,throw,new,unsupported,media,type,status,exception,ex,get,message,throw,new,unsupported,media,type,status,exception,content,type,new,array,list,media,types,if,helper,has,produces,mismatch,set,media,type,media,types,helper,get,producible,media,types,throw,new,not,acceptable,status,exception,new,array,list,media,types,if,helper,has,params,mismatch,throw,new,server,web,input,exception,unsatisfied,query,parameter,conditions,helper,get,param,conditions,actual,parameters,request,get,query,params,return,null
RequestMappingInfoHandlerMapping -> @Override 	protected HandlerMethod handleNoMatch(Set<RequestMappingInfo> infos, 			ServerWebExchange exchange) throws Exception;1518987682;Iterate all RequestMappingInfos once again, look if any match by URL at_least and raise exceptions accordingly._@throws MethodNotAllowedException for matches by URL but not by HTTP method_@throws UnsupportedMediaTypeStatusException if there are matches by URL_and HTTP method but not by consumable media types_@throws NotAcceptableStatusException if there are matches by URL and HTTP_method but not by producible media types_@throws ServerWebInputException if there are matches by URL and HTTP_method but not by query parameter conditions;@Override_	protected HandlerMethod handleNoMatch(Set<RequestMappingInfo> infos,_			ServerWebExchange exchange) throws Exception {__		PartialMatchHelper helper = new PartialMatchHelper(infos, exchange)___		if (helper.isEmpty()) {_			return null__		}__		ServerHttpRequest request = exchange.getRequest()___		if (helper.hasMethodsMismatch()) {_			String httpMethod = request.getMethodValue()__			Set<HttpMethod> methods = helper.getAllowedMethods()__			if (HttpMethod.OPTIONS.matches(httpMethod)) {_				HttpOptionsHandler handler = new HttpOptionsHandler(methods)__				return new HandlerMethod(handler, HTTP_OPTIONS_HANDLE_METHOD)__			}_			throw new MethodNotAllowedException(httpMethod, methods)__		}__		if (helper.hasConsumesMismatch()) {_			Set<MediaType> mediaTypes = helper.getConsumableMediaTypes()__			MediaType contentType__			try {_				contentType = request.getHeaders().getContentType()__			}_			catch (InvalidMediaTypeException ex) {_				throw new UnsupportedMediaTypeStatusException(ex.getMessage())__			}_			throw new UnsupportedMediaTypeStatusException(contentType, new ArrayList<>(mediaTypes))__		}__		if (helper.hasProducesMismatch()) {_			Set<MediaType> mediaTypes = helper.getProducibleMediaTypes()__			throw new NotAcceptableStatusException(new ArrayList<>(mediaTypes))__		}__		if (helper.hasParamsMismatch()) {_			throw new ServerWebInputException(_					"Unsatisfied query parameter conditions: " + helper.getParamConditions() +_							", actual parameters: " + request.getQueryParams())__		}__		return null__	};iterate,all,request,mapping,infos,once,again,look,if,any,match,by,url,at,least,and,raise,exceptions,accordingly,throws,method,not,allowed,exception,for,matches,by,url,but,not,by,http,method,throws,unsupported,media,type,status,exception,if,there,are,matches,by,url,and,http,method,but,not,by,consumable,media,types,throws,not,acceptable,status,exception,if,there,are,matches,by,url,and,http,method,but,not,by,producible,media,types,throws,server,web,input,exception,if,there,are,matches,by,url,and,http,method,but,not,by,query,parameter,conditions;override,protected,handler,method,handle,no,match,set,request,mapping,info,infos,server,web,exchange,exchange,throws,exception,partial,match,helper,helper,new,partial,match,helper,infos,exchange,if,helper,is,empty,return,null,server,http,request,request,exchange,get,request,if,helper,has,methods,mismatch,string,http,method,request,get,method,value,set,http,method,methods,helper,get,allowed,methods,if,http,method,options,matches,http,method,http,options,handler,handler,new,http,options,handler,methods,return,new,handler,method,handler,throw,new,method,not,allowed,exception,http,method,methods,if,helper,has,consumes,mismatch,set,media,type,media,types,helper,get,consumable,media,types,media,type,content,type,try,content,type,request,get,headers,get,content,type,catch,invalid,media,type,exception,ex,throw,new,unsupported,media,type,status,exception,ex,get,message,throw,new,unsupported,media,type,status,exception,content,type,new,array,list,media,types,if,helper,has,produces,mismatch,set,media,type,media,types,helper,get,producible,media,types,throw,new,not,acceptable,status,exception,new,array,list,media,types,if,helper,has,params,mismatch,throw,new,server,web,input,exception,unsatisfied,query,parameter,conditions,helper,get,param,conditions,actual,parameters,request,get,query,params,return,null
RequestMappingInfoHandlerMapping -> @Override 	protected HandlerMethod handleNoMatch(Set<RequestMappingInfo> infos, 			ServerWebExchange exchange) throws Exception;1526303103;Iterate all RequestMappingInfos once again, look if any match by URL at_least and raise exceptions accordingly._@throws MethodNotAllowedException for matches by URL but not by HTTP method_@throws UnsupportedMediaTypeStatusException if there are matches by URL_and HTTP method but not by consumable media types_@throws NotAcceptableStatusException if there are matches by URL and HTTP_method but not by producible media types_@throws ServerWebInputException if there are matches by URL and HTTP_method but not by query parameter conditions;@Override_	protected HandlerMethod handleNoMatch(Set<RequestMappingInfo> infos,_			ServerWebExchange exchange) throws Exception {__		PartialMatchHelper helper = new PartialMatchHelper(infos, exchange)___		if (helper.isEmpty()) {_			return null__		}__		ServerHttpRequest request = exchange.getRequest()___		if (helper.hasMethodsMismatch()) {_			String httpMethod = request.getMethodValue()__			Set<HttpMethod> methods = helper.getAllowedMethods()__			if (HttpMethod.OPTIONS.matches(httpMethod)) {_				HttpOptionsHandler handler = new HttpOptionsHandler(methods)__				return new HandlerMethod(handler, HTTP_OPTIONS_HANDLE_METHOD)__			}_			throw new MethodNotAllowedException(httpMethod, methods)__		}__		if (helper.hasConsumesMismatch()) {_			Set<MediaType> mediaTypes = helper.getConsumableMediaTypes()__			MediaType contentType__			try {_				contentType = request.getHeaders().getContentType()__			}_			catch (InvalidMediaTypeException ex) {_				throw new UnsupportedMediaTypeStatusException(ex.getMessage())__			}_			throw new UnsupportedMediaTypeStatusException(contentType, new ArrayList<>(mediaTypes))__		}__		if (helper.hasProducesMismatch()) {_			Set<MediaType> mediaTypes = helper.getProducibleMediaTypes()__			throw new NotAcceptableStatusException(new ArrayList<>(mediaTypes))__		}__		if (helper.hasParamsMismatch()) {_			throw new ServerWebInputException(_					"Unsatisfied query parameter conditions: " + helper.getParamConditions() +_							", actual parameters: " + request.getQueryParams())__		}__		return null__	};iterate,all,request,mapping,infos,once,again,look,if,any,match,by,url,at,least,and,raise,exceptions,accordingly,throws,method,not,allowed,exception,for,matches,by,url,but,not,by,http,method,throws,unsupported,media,type,status,exception,if,there,are,matches,by,url,and,http,method,but,not,by,consumable,media,types,throws,not,acceptable,status,exception,if,there,are,matches,by,url,and,http,method,but,not,by,producible,media,types,throws,server,web,input,exception,if,there,are,matches,by,url,and,http,method,but,not,by,query,parameter,conditions;override,protected,handler,method,handle,no,match,set,request,mapping,info,infos,server,web,exchange,exchange,throws,exception,partial,match,helper,helper,new,partial,match,helper,infos,exchange,if,helper,is,empty,return,null,server,http,request,request,exchange,get,request,if,helper,has,methods,mismatch,string,http,method,request,get,method,value,set,http,method,methods,helper,get,allowed,methods,if,http,method,options,matches,http,method,http,options,handler,handler,new,http,options,handler,methods,return,new,handler,method,handler,throw,new,method,not,allowed,exception,http,method,methods,if,helper,has,consumes,mismatch,set,media,type,media,types,helper,get,consumable,media,types,media,type,content,type,try,content,type,request,get,headers,get,content,type,catch,invalid,media,type,exception,ex,throw,new,unsupported,media,type,status,exception,ex,get,message,throw,new,unsupported,media,type,status,exception,content,type,new,array,list,media,types,if,helper,has,produces,mismatch,set,media,type,media,types,helper,get,producible,media,types,throw,new,not,acceptable,status,exception,new,array,list,media,types,if,helper,has,params,mismatch,throw,new,server,web,input,exception,unsatisfied,query,parameter,conditions,helper,get,param,conditions,actual,parameters,request,get,query,params,return,null
RequestMappingInfoHandlerMapping -> @Override 	protected HandlerMethod handleNoMatch(Set<RequestMappingInfo> infos, 			ServerWebExchange exchange) throws Exception;1530174524;Iterate all RequestMappingInfos once again, look if any match by URL at_least and raise exceptions accordingly._@throws MethodNotAllowedException for matches by URL but not by HTTP method_@throws UnsupportedMediaTypeStatusException if there are matches by URL_and HTTP method but not by consumable media types_@throws NotAcceptableStatusException if there are matches by URL and HTTP_method but not by producible media types_@throws ServerWebInputException if there are matches by URL and HTTP_method but not by query parameter conditions;@Override_	protected HandlerMethod handleNoMatch(Set<RequestMappingInfo> infos,_			ServerWebExchange exchange) throws Exception {__		PartialMatchHelper helper = new PartialMatchHelper(infos, exchange)___		if (helper.isEmpty()) {_			return null__		}__		ServerHttpRequest request = exchange.getRequest()___		if (helper.hasMethodsMismatch()) {_			String httpMethod = request.getMethodValue()__			Set<HttpMethod> methods = helper.getAllowedMethods()__			if (HttpMethod.OPTIONS.matches(httpMethod)) {_				HttpOptionsHandler handler = new HttpOptionsHandler(methods)__				return new HandlerMethod(handler, HTTP_OPTIONS_HANDLE_METHOD)__			}_			throw new MethodNotAllowedException(httpMethod, methods)__		}__		if (helper.hasConsumesMismatch()) {_			Set<MediaType> mediaTypes = helper.getConsumableMediaTypes()__			MediaType contentType__			try {_				contentType = request.getHeaders().getContentType()__			}_			catch (InvalidMediaTypeException ex) {_				throw new UnsupportedMediaTypeStatusException(ex.getMessage())__			}_			throw new UnsupportedMediaTypeStatusException(contentType, new ArrayList<>(mediaTypes))__		}__		if (helper.hasProducesMismatch()) {_			Set<MediaType> mediaTypes = helper.getProducibleMediaTypes()__			throw new NotAcceptableStatusException(new ArrayList<>(mediaTypes))__		}__		if (helper.hasParamsMismatch()) {_			throw new ServerWebInputException(_					"Unsatisfied query parameter conditions: " + helper.getParamConditions() +_							", actual parameters: " + request.getQueryParams())__		}__		return null__	};iterate,all,request,mapping,infos,once,again,look,if,any,match,by,url,at,least,and,raise,exceptions,accordingly,throws,method,not,allowed,exception,for,matches,by,url,but,not,by,http,method,throws,unsupported,media,type,status,exception,if,there,are,matches,by,url,and,http,method,but,not,by,consumable,media,types,throws,not,acceptable,status,exception,if,there,are,matches,by,url,and,http,method,but,not,by,producible,media,types,throws,server,web,input,exception,if,there,are,matches,by,url,and,http,method,but,not,by,query,parameter,conditions;override,protected,handler,method,handle,no,match,set,request,mapping,info,infos,server,web,exchange,exchange,throws,exception,partial,match,helper,helper,new,partial,match,helper,infos,exchange,if,helper,is,empty,return,null,server,http,request,request,exchange,get,request,if,helper,has,methods,mismatch,string,http,method,request,get,method,value,set,http,method,methods,helper,get,allowed,methods,if,http,method,options,matches,http,method,http,options,handler,handler,new,http,options,handler,methods,return,new,handler,method,handler,throw,new,method,not,allowed,exception,http,method,methods,if,helper,has,consumes,mismatch,set,media,type,media,types,helper,get,consumable,media,types,media,type,content,type,try,content,type,request,get,headers,get,content,type,catch,invalid,media,type,exception,ex,throw,new,unsupported,media,type,status,exception,ex,get,message,throw,new,unsupported,media,type,status,exception,content,type,new,array,list,media,types,if,helper,has,produces,mismatch,set,media,type,media,types,helper,get,producible,media,types,throw,new,not,acceptable,status,exception,new,array,list,media,types,if,helper,has,params,mismatch,throw,new,server,web,input,exception,unsatisfied,query,parameter,conditions,helper,get,param,conditions,actual,parameters,request,get,query,params,return,null
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public Set<MediaType> getProducibleMediaTypes();1485986572;Return declared "producible" types but only among those that also_match the "methods" and "consumes" conditions.;public Set<MediaType> getProducibleMediaTypes() {_			return this.partialMatches.stream().filter(PartialMatch::hasConsumesMatch)._					flatMap(m -> m.getInfo().getProducesCondition().getProducibleMediaTypes().stream())._					collect(Collectors.toCollection(LinkedHashSet::new))__		};return,declared,producible,types,but,only,among,those,that,also,match,the,methods,and,consumes,conditions;public,set,media,type,get,producible,media,types,return,this,partial,matches,stream,filter,partial,match,has,consumes,match,flat,map,m,m,get,info,get,produces,condition,get,producible,media,types,stream,collect,collectors,to,collection,linked,hash,set,new
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public Set<MediaType> getProducibleMediaTypes();1486635693;Return declared "producible" types but only among those that also_match the "methods" and "consumes" conditions.;public Set<MediaType> getProducibleMediaTypes() {_			return this.partialMatches.stream().filter(PartialMatch::hasConsumesMatch)._					flatMap(m -> m.getInfo().getProducesCondition().getProducibleMediaTypes().stream())._					collect(Collectors.toCollection(LinkedHashSet::new))__		};return,declared,producible,types,but,only,among,those,that,also,match,the,methods,and,consumes,conditions;public,set,media,type,get,producible,media,types,return,this,partial,matches,stream,filter,partial,match,has,consumes,match,flat,map,m,m,get,info,get,produces,condition,get,producible,media,types,stream,collect,collectors,to,collection,linked,hash,set,new
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public Set<MediaType> getProducibleMediaTypes();1486674586;Return declared "producible" types but only among those that also_match the "methods" and "consumes" conditions.;public Set<MediaType> getProducibleMediaTypes() {_			return this.partialMatches.stream().filter(PartialMatch::hasConsumesMatch)._					flatMap(m -> m.getInfo().getProducesCondition().getProducibleMediaTypes().stream())._					collect(Collectors.toCollection(LinkedHashSet::new))__		};return,declared,producible,types,but,only,among,those,that,also,match,the,methods,and,consumes,conditions;public,set,media,type,get,producible,media,types,return,this,partial,matches,stream,filter,partial,match,has,consumes,match,flat,map,m,m,get,info,get,produces,condition,get,producible,media,types,stream,collect,collectors,to,collection,linked,hash,set,new
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public Set<MediaType> getProducibleMediaTypes();1486747801;Return declared "producible" types but only among those that also_match the "methods" and "consumes" conditions.;public Set<MediaType> getProducibleMediaTypes() {_			return this.partialMatches.stream().filter(PartialMatch::hasConsumesMatch)._					flatMap(m -> m.getInfo().getProducesCondition().getProducibleMediaTypes().stream())._					collect(Collectors.toCollection(LinkedHashSet::new))__		};return,declared,producible,types,but,only,among,those,that,also,match,the,methods,and,consumes,conditions;public,set,media,type,get,producible,media,types,return,this,partial,matches,stream,filter,partial,match,has,consumes,match,flat,map,m,m,get,info,get,produces,condition,get,producible,media,types,stream,collect,collectors,to,collection,linked,hash,set,new
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public Set<MediaType> getProducibleMediaTypes();1489852683;Return declared "producible" types but only among those that also_match the "methods" and "consumes" conditions.;public Set<MediaType> getProducibleMediaTypes() {_			return this.partialMatches.stream().filter(PartialMatch::hasConsumesMatch)._					flatMap(m -> m.getInfo().getProducesCondition().getProducibleMediaTypes().stream())._					collect(Collectors.toCollection(LinkedHashSet::new))__		};return,declared,producible,types,but,only,among,those,that,also,match,the,methods,and,consumes,conditions;public,set,media,type,get,producible,media,types,return,this,partial,matches,stream,filter,partial,match,has,consumes,match,flat,map,m,m,get,info,get,produces,condition,get,producible,media,types,stream,collect,collectors,to,collection,linked,hash,set,new
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public Set<MediaType> getProducibleMediaTypes();1490197121;Return declared "producible" types but only among those that also_match the "methods" and "consumes" conditions.;public Set<MediaType> getProducibleMediaTypes() {_			return this.partialMatches.stream().filter(PartialMatch::hasConsumesMatch)._					flatMap(m -> m.getInfo().getProducesCondition().getProducibleMediaTypes().stream())._					collect(Collectors.toCollection(LinkedHashSet::new))__		};return,declared,producible,types,but,only,among,those,that,also,match,the,methods,and,consumes,conditions;public,set,media,type,get,producible,media,types,return,this,partial,matches,stream,filter,partial,match,has,consumes,match,flat,map,m,m,get,info,get,produces,condition,get,producible,media,types,stream,collect,collectors,to,collection,linked,hash,set,new
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public Set<MediaType> getProducibleMediaTypes();1495639183;Return declared "producible" types but only among those that also_match the "methods" and "consumes" conditions.;public Set<MediaType> getProducibleMediaTypes() {_			return this.partialMatches.stream().filter(PartialMatch::hasConsumesMatch)._					flatMap(m -> m.getInfo().getProducesCondition().getProducibleMediaTypes().stream())._					collect(Collectors.toCollection(LinkedHashSet::new))__		};return,declared,producible,types,but,only,among,those,that,also,match,the,methods,and,consumes,conditions;public,set,media,type,get,producible,media,types,return,this,partial,matches,stream,filter,partial,match,has,consumes,match,flat,map,m,m,get,info,get,produces,condition,get,producible,media,types,stream,collect,collectors,to,collection,linked,hash,set,new
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public Set<MediaType> getProducibleMediaTypes();1496334664;Return declared "producible" types but only among those that also_match the "methods" and "consumes" conditions.;public Set<MediaType> getProducibleMediaTypes() {_			return this.partialMatches.stream().filter(PartialMatch::hasConsumesMatch)._					flatMap(m -> m.getInfo().getProducesCondition().getProducibleMediaTypes().stream())._					collect(Collectors.toCollection(LinkedHashSet::new))__		};return,declared,producible,types,but,only,among,those,that,also,match,the,methods,and,consumes,conditions;public,set,media,type,get,producible,media,types,return,this,partial,matches,stream,filter,partial,match,has,consumes,match,flat,map,m,m,get,info,get,produces,condition,get,producible,media,types,stream,collect,collectors,to,collection,linked,hash,set,new
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public Set<MediaType> getProducibleMediaTypes();1496433164;Return declared "producible" types but only among those that also_match the "methods" and "consumes" conditions.;public Set<MediaType> getProducibleMediaTypes() {_			return this.partialMatches.stream().filter(PartialMatch::hasConsumesMatch)._					flatMap(m -> m.getInfo().getProducesCondition().getProducibleMediaTypes().stream())._					collect(Collectors.toCollection(LinkedHashSet::new))__		};return,declared,producible,types,but,only,among,those,that,also,match,the,methods,and,consumes,conditions;public,set,media,type,get,producible,media,types,return,this,partial,matches,stream,filter,partial,match,has,consumes,match,flat,map,m,m,get,info,get,produces,condition,get,producible,media,types,stream,collect,collectors,to,collection,linked,hash,set,new
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public Set<MediaType> getProducibleMediaTypes();1497039338;Return declared "producible" types but only among those that also_match the "methods" and "consumes" conditions.;public Set<MediaType> getProducibleMediaTypes() {_			return this.partialMatches.stream().filter(PartialMatch::hasConsumesMatch)._					flatMap(m -> m.getInfo().getProducesCondition().getProducibleMediaTypes().stream())._					collect(Collectors.toCollection(LinkedHashSet::new))__		};return,declared,producible,types,but,only,among,those,that,also,match,the,methods,and,consumes,conditions;public,set,media,type,get,producible,media,types,return,this,partial,matches,stream,filter,partial,match,has,consumes,match,flat,map,m,m,get,info,get,produces,condition,get,producible,media,types,stream,collect,collectors,to,collection,linked,hash,set,new
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public Set<MediaType> getProducibleMediaTypes();1497039338;Return declared "producible" types but only among those that also_match the "methods" and "consumes" conditions.;public Set<MediaType> getProducibleMediaTypes() {_			return this.partialMatches.stream().filter(PartialMatch::hasConsumesMatch)._					flatMap(m -> m.getInfo().getProducesCondition().getProducibleMediaTypes().stream())._					collect(Collectors.toCollection(LinkedHashSet::new))__		};return,declared,producible,types,but,only,among,those,that,also,match,the,methods,and,consumes,conditions;public,set,media,type,get,producible,media,types,return,this,partial,matches,stream,filter,partial,match,has,consumes,match,flat,map,m,m,get,info,get,produces,condition,get,producible,media,types,stream,collect,collectors,to,collection,linked,hash,set,new
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public Set<MediaType> getProducibleMediaTypes();1497286385;Return declared "producible" types but only among those that also_match the "methods" and "consumes" conditions.;public Set<MediaType> getProducibleMediaTypes() {_			return this.partialMatches.stream().filter(PartialMatch::hasConsumesMatch)._					flatMap(m -> m.getInfo().getProducesCondition().getProducibleMediaTypes().stream())._					collect(Collectors.toCollection(LinkedHashSet::new))__		};return,declared,producible,types,but,only,among,those,that,also,match,the,methods,and,consumes,conditions;public,set,media,type,get,producible,media,types,return,this,partial,matches,stream,filter,partial,match,has,consumes,match,flat,map,m,m,get,info,get,produces,condition,get,producible,media,types,stream,collect,collectors,to,collection,linked,hash,set,new
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public Set<MediaType> getProducibleMediaTypes();1498756719;Return declared "producible" types but only among those that also_match the "methods" and "consumes" conditions.;public Set<MediaType> getProducibleMediaTypes() {_			return this.partialMatches.stream().filter(PartialMatch::hasConsumesMatch)._					flatMap(m -> m.getInfo().getProducesCondition().getProducibleMediaTypes().stream())._					collect(Collectors.toCollection(LinkedHashSet::new))__		};return,declared,producible,types,but,only,among,those,that,also,match,the,methods,and,consumes,conditions;public,set,media,type,get,producible,media,types,return,this,partial,matches,stream,filter,partial,match,has,consumes,match,flat,map,m,m,get,info,get,produces,condition,get,producible,media,types,stream,collect,collectors,to,collection,linked,hash,set,new
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public Set<MediaType> getProducibleMediaTypes();1498861175;Return declared "producible" types but only among those that also_match the "methods" and "consumes" conditions.;public Set<MediaType> getProducibleMediaTypes() {_			return this.partialMatches.stream().filter(PartialMatch::hasConsumesMatch)._					flatMap(m -> m.getInfo().getProducesCondition().getProducibleMediaTypes().stream())._					collect(Collectors.toCollection(LinkedHashSet::new))__		};return,declared,producible,types,but,only,among,those,that,also,match,the,methods,and,consumes,conditions;public,set,media,type,get,producible,media,types,return,this,partial,matches,stream,filter,partial,match,has,consumes,match,flat,map,m,m,get,info,get,produces,condition,get,producible,media,types,stream,collect,collectors,to,collection,linked,hash,set,new
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public Set<MediaType> getProducibleMediaTypes();1498861175;Return declared "producible" types but only among those that also_match the "methods" and "consumes" conditions.;public Set<MediaType> getProducibleMediaTypes() {_			return this.partialMatches.stream().filter(PartialMatch::hasConsumesMatch)._					flatMap(m -> m.getInfo().getProducesCondition().getProducibleMediaTypes().stream())._					collect(Collectors.toCollection(LinkedHashSet::new))__		};return,declared,producible,types,but,only,among,those,that,also,match,the,methods,and,consumes,conditions;public,set,media,type,get,producible,media,types,return,this,partial,matches,stream,filter,partial,match,has,consumes,match,flat,map,m,m,get,info,get,produces,condition,get,producible,media,types,stream,collect,collectors,to,collection,linked,hash,set,new
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public Set<MediaType> getProducibleMediaTypes();1498953917;Return declared "producible" types but only among those that also_match the "methods" and "consumes" conditions.;public Set<MediaType> getProducibleMediaTypes() {_			return this.partialMatches.stream().filter(PartialMatch::hasConsumesMatch)._					flatMap(m -> m.getInfo().getProducesCondition().getProducibleMediaTypes().stream())._					collect(Collectors.toCollection(LinkedHashSet::new))__		};return,declared,producible,types,but,only,among,those,that,also,match,the,methods,and,consumes,conditions;public,set,media,type,get,producible,media,types,return,this,partial,matches,stream,filter,partial,match,has,consumes,match,flat,map,m,m,get,info,get,produces,condition,get,producible,media,types,stream,collect,collectors,to,collection,linked,hash,set,new
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public Set<MediaType> getProducibleMediaTypes();1501237594;Return declared "producible" types but only among those that also_match the "methods" and "consumes" conditions.;public Set<MediaType> getProducibleMediaTypes() {_			return this.partialMatches.stream().filter(PartialMatch::hasConsumesMatch)._					flatMap(m -> m.getInfo().getProducesCondition().getProducibleMediaTypes().stream())._					collect(Collectors.toCollection(LinkedHashSet::new))__		};return,declared,producible,types,but,only,among,those,that,also,match,the,methods,and,consumes,conditions;public,set,media,type,get,producible,media,types,return,this,partial,matches,stream,filter,partial,match,has,consumes,match,flat,map,m,m,get,info,get,produces,condition,get,producible,media,types,stream,collect,collectors,to,collection,linked,hash,set,new
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public Set<MediaType> getProducibleMediaTypes();1501676476;Return declared "producible" types but only among those that also_match the "methods" and "consumes" conditions.;public Set<MediaType> getProducibleMediaTypes() {_			return this.partialMatches.stream().filter(PartialMatch::hasConsumesMatch)._					flatMap(m -> m.getInfo().getProducesCondition().getProducibleMediaTypes().stream())._					collect(Collectors.toCollection(LinkedHashSet::new))__		};return,declared,producible,types,but,only,among,those,that,also,match,the,methods,and,consumes,conditions;public,set,media,type,get,producible,media,types,return,this,partial,matches,stream,filter,partial,match,has,consumes,match,flat,map,m,m,get,info,get,produces,condition,get,producible,media,types,stream,collect,collectors,to,collection,linked,hash,set,new
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public Set<MediaType> getProducibleMediaTypes();1501679128;Return declared "producible" types but only among those that also_match the "methods" and "consumes" conditions.;public Set<MediaType> getProducibleMediaTypes() {_			return this.partialMatches.stream().filter(PartialMatch::hasConsumesMatch)._					flatMap(m -> m.getInfo().getProducesCondition().getProducibleMediaTypes().stream())._					collect(Collectors.toCollection(LinkedHashSet::new))__		};return,declared,producible,types,but,only,among,those,that,also,match,the,methods,and,consumes,conditions;public,set,media,type,get,producible,media,types,return,this,partial,matches,stream,filter,partial,match,has,consumes,match,flat,map,m,m,get,info,get,produces,condition,get,producible,media,types,stream,collect,collectors,to,collection,linked,hash,set,new
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public Set<MediaType> getProducibleMediaTypes();1518987682;Return declared "producible" types but only among those that also_match the "methods" and "consumes" conditions.;public Set<MediaType> getProducibleMediaTypes() {_			return this.partialMatches.stream().filter(PartialMatch::hasConsumesMatch)._					flatMap(m -> m.getInfo().getProducesCondition().getProducibleMediaTypes().stream())._					collect(Collectors.toCollection(LinkedHashSet::new))__		};return,declared,producible,types,but,only,among,those,that,also,match,the,methods,and,consumes,conditions;public,set,media,type,get,producible,media,types,return,this,partial,matches,stream,filter,partial,match,has,consumes,match,flat,map,m,m,get,info,get,produces,condition,get,producible,media,types,stream,collect,collectors,to,collection,linked,hash,set,new
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public Set<MediaType> getProducibleMediaTypes();1526303103;Return declared "producible" types but only among those that also_match the "methods" and "consumes" conditions.;public Set<MediaType> getProducibleMediaTypes() {_			return this.partialMatches.stream().filter(PartialMatch::hasConsumesMatch)._					flatMap(m -> m.getInfo().getProducesCondition().getProducibleMediaTypes().stream())._					collect(Collectors.toCollection(LinkedHashSet::new))__		};return,declared,producible,types,but,only,among,those,that,also,match,the,methods,and,consumes,conditions;public,set,media,type,get,producible,media,types,return,this,partial,matches,stream,filter,partial,match,has,consumes,match,flat,map,m,m,get,info,get,produces,condition,get,producible,media,types,stream,collect,collectors,to,collection,linked,hash,set,new
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public Set<MediaType> getProducibleMediaTypes();1530174524;Return declared "producible" types but only among those that also_match the "methods" and "consumes" conditions.;public Set<MediaType> getProducibleMediaTypes() {_			return this.partialMatches.stream().filter(PartialMatch::hasConsumesMatch)._					flatMap(m -> m.getInfo().getProducesCondition().getProducibleMediaTypes().stream())._					collect(Collectors.toCollection(LinkedHashSet::new))__		};return,declared,producible,types,but,only,among,those,that,also,match,the,methods,and,consumes,conditions;public,set,media,type,get,producible,media,types,return,this,partial,matches,stream,filter,partial,match,has,consumes,match,flat,map,m,m,get,info,get,produces,condition,get,producible,media,types,stream,collect,collectors,to,collection,linked,hash,set,new
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> PartialMatch -> public PartialMatch(RequestMappingInfo info, ServerWebExchange exchange);1485986572;@param info RequestMappingInfo that matches the URL path_@param exchange the current exchange;public PartialMatch(RequestMappingInfo info, ServerWebExchange exchange) {_				this.info = info__				this.methodsMatch = info.getMethodsCondition().getMatchingCondition(exchange) != null__				this.consumesMatch = info.getConsumesCondition().getMatchingCondition(exchange) != null__				this.producesMatch = info.getProducesCondition().getMatchingCondition(exchange) != null__				this.paramsMatch = info.getParamsCondition().getMatchingCondition(exchange) != null__			};param,info,request,mapping,info,that,matches,the,url,path,param,exchange,the,current,exchange;public,partial,match,request,mapping,info,info,server,web,exchange,exchange,this,info,info,this,methods,match,info,get,methods,condition,get,matching,condition,exchange,null,this,consumes,match,info,get,consumes,condition,get,matching,condition,exchange,null,this,produces,match,info,get,produces,condition,get,matching,condition,exchange,null,this,params,match,info,get,params,condition,get,matching,condition,exchange,null
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> PartialMatch -> public PartialMatch(RequestMappingInfo info, ServerWebExchange exchange);1486635693;@param info RequestMappingInfo that matches the URL path_@param exchange the current exchange;public PartialMatch(RequestMappingInfo info, ServerWebExchange exchange) {_				this.info = info__				this.methodsMatch = info.getMethodsCondition().getMatchingCondition(exchange) != null__				this.consumesMatch = info.getConsumesCondition().getMatchingCondition(exchange) != null__				this.producesMatch = info.getProducesCondition().getMatchingCondition(exchange) != null__				this.paramsMatch = info.getParamsCondition().getMatchingCondition(exchange) != null__			};param,info,request,mapping,info,that,matches,the,url,path,param,exchange,the,current,exchange;public,partial,match,request,mapping,info,info,server,web,exchange,exchange,this,info,info,this,methods,match,info,get,methods,condition,get,matching,condition,exchange,null,this,consumes,match,info,get,consumes,condition,get,matching,condition,exchange,null,this,produces,match,info,get,produces,condition,get,matching,condition,exchange,null,this,params,match,info,get,params,condition,get,matching,condition,exchange,null
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> PartialMatch -> public PartialMatch(RequestMappingInfo info, ServerWebExchange exchange);1486674586;@param info RequestMappingInfo that matches the URL path_@param exchange the current exchange;public PartialMatch(RequestMappingInfo info, ServerWebExchange exchange) {_				this.info = info__				this.methodsMatch = info.getMethodsCondition().getMatchingCondition(exchange) != null__				this.consumesMatch = info.getConsumesCondition().getMatchingCondition(exchange) != null__				this.producesMatch = info.getProducesCondition().getMatchingCondition(exchange) != null__				this.paramsMatch = info.getParamsCondition().getMatchingCondition(exchange) != null__			};param,info,request,mapping,info,that,matches,the,url,path,param,exchange,the,current,exchange;public,partial,match,request,mapping,info,info,server,web,exchange,exchange,this,info,info,this,methods,match,info,get,methods,condition,get,matching,condition,exchange,null,this,consumes,match,info,get,consumes,condition,get,matching,condition,exchange,null,this,produces,match,info,get,produces,condition,get,matching,condition,exchange,null,this,params,match,info,get,params,condition,get,matching,condition,exchange,null
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> PartialMatch -> public PartialMatch(RequestMappingInfo info, ServerWebExchange exchange);1486747801;@param info RequestMappingInfo that matches the URL path_@param exchange the current exchange;public PartialMatch(RequestMappingInfo info, ServerWebExchange exchange) {_				this.info = info__				this.methodsMatch = info.getMethodsCondition().getMatchingCondition(exchange) != null__				this.consumesMatch = info.getConsumesCondition().getMatchingCondition(exchange) != null__				this.producesMatch = info.getProducesCondition().getMatchingCondition(exchange) != null__				this.paramsMatch = info.getParamsCondition().getMatchingCondition(exchange) != null__			};param,info,request,mapping,info,that,matches,the,url,path,param,exchange,the,current,exchange;public,partial,match,request,mapping,info,info,server,web,exchange,exchange,this,info,info,this,methods,match,info,get,methods,condition,get,matching,condition,exchange,null,this,consumes,match,info,get,consumes,condition,get,matching,condition,exchange,null,this,produces,match,info,get,produces,condition,get,matching,condition,exchange,null,this,params,match,info,get,params,condition,get,matching,condition,exchange,null
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> PartialMatch -> public PartialMatch(RequestMappingInfo info, ServerWebExchange exchange);1489852683;@param info RequestMappingInfo that matches the URL path_@param exchange the current exchange;public PartialMatch(RequestMappingInfo info, ServerWebExchange exchange) {_				this.info = info__				this.methodsMatch = info.getMethodsCondition().getMatchingCondition(exchange) != null__				this.consumesMatch = info.getConsumesCondition().getMatchingCondition(exchange) != null__				this.producesMatch = info.getProducesCondition().getMatchingCondition(exchange) != null__				this.paramsMatch = info.getParamsCondition().getMatchingCondition(exchange) != null__			};param,info,request,mapping,info,that,matches,the,url,path,param,exchange,the,current,exchange;public,partial,match,request,mapping,info,info,server,web,exchange,exchange,this,info,info,this,methods,match,info,get,methods,condition,get,matching,condition,exchange,null,this,consumes,match,info,get,consumes,condition,get,matching,condition,exchange,null,this,produces,match,info,get,produces,condition,get,matching,condition,exchange,null,this,params,match,info,get,params,condition,get,matching,condition,exchange,null
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> PartialMatch -> public PartialMatch(RequestMappingInfo info, ServerWebExchange exchange);1490197121;@param info RequestMappingInfo that matches the URL path_@param exchange the current exchange;public PartialMatch(RequestMappingInfo info, ServerWebExchange exchange) {_				this.info = info__				this.methodsMatch = info.getMethodsCondition().getMatchingCondition(exchange) != null__				this.consumesMatch = info.getConsumesCondition().getMatchingCondition(exchange) != null__				this.producesMatch = info.getProducesCondition().getMatchingCondition(exchange) != null__				this.paramsMatch = info.getParamsCondition().getMatchingCondition(exchange) != null__			};param,info,request,mapping,info,that,matches,the,url,path,param,exchange,the,current,exchange;public,partial,match,request,mapping,info,info,server,web,exchange,exchange,this,info,info,this,methods,match,info,get,methods,condition,get,matching,condition,exchange,null,this,consumes,match,info,get,consumes,condition,get,matching,condition,exchange,null,this,produces,match,info,get,produces,condition,get,matching,condition,exchange,null,this,params,match,info,get,params,condition,get,matching,condition,exchange,null
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> PartialMatch -> public PartialMatch(RequestMappingInfo info, ServerWebExchange exchange);1495639183;@param info RequestMappingInfo that matches the URL path_@param exchange the current exchange;public PartialMatch(RequestMappingInfo info, ServerWebExchange exchange) {_				this.info = info__				this.methodsMatch = info.getMethodsCondition().getMatchingCondition(exchange) != null__				this.consumesMatch = info.getConsumesCondition().getMatchingCondition(exchange) != null__				this.producesMatch = info.getProducesCondition().getMatchingCondition(exchange) != null__				this.paramsMatch = info.getParamsCondition().getMatchingCondition(exchange) != null__			};param,info,request,mapping,info,that,matches,the,url,path,param,exchange,the,current,exchange;public,partial,match,request,mapping,info,info,server,web,exchange,exchange,this,info,info,this,methods,match,info,get,methods,condition,get,matching,condition,exchange,null,this,consumes,match,info,get,consumes,condition,get,matching,condition,exchange,null,this,produces,match,info,get,produces,condition,get,matching,condition,exchange,null,this,params,match,info,get,params,condition,get,matching,condition,exchange,null
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> PartialMatch -> public PartialMatch(RequestMappingInfo info, ServerWebExchange exchange);1496334664;@param info RequestMappingInfo that matches the URL path_@param exchange the current exchange;public PartialMatch(RequestMappingInfo info, ServerWebExchange exchange) {_				this.info = info__				this.methodsMatch = info.getMethodsCondition().getMatchingCondition(exchange) != null__				this.consumesMatch = info.getConsumesCondition().getMatchingCondition(exchange) != null__				this.producesMatch = info.getProducesCondition().getMatchingCondition(exchange) != null__				this.paramsMatch = info.getParamsCondition().getMatchingCondition(exchange) != null__			};param,info,request,mapping,info,that,matches,the,url,path,param,exchange,the,current,exchange;public,partial,match,request,mapping,info,info,server,web,exchange,exchange,this,info,info,this,methods,match,info,get,methods,condition,get,matching,condition,exchange,null,this,consumes,match,info,get,consumes,condition,get,matching,condition,exchange,null,this,produces,match,info,get,produces,condition,get,matching,condition,exchange,null,this,params,match,info,get,params,condition,get,matching,condition,exchange,null
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> PartialMatch -> public PartialMatch(RequestMappingInfo info, ServerWebExchange exchange);1496433164;@param info RequestMappingInfo that matches the URL path_@param exchange the current exchange;public PartialMatch(RequestMappingInfo info, ServerWebExchange exchange) {_				this.info = info__				this.methodsMatch = info.getMethodsCondition().getMatchingCondition(exchange) != null__				this.consumesMatch = info.getConsumesCondition().getMatchingCondition(exchange) != null__				this.producesMatch = info.getProducesCondition().getMatchingCondition(exchange) != null__				this.paramsMatch = info.getParamsCondition().getMatchingCondition(exchange) != null__			};param,info,request,mapping,info,that,matches,the,url,path,param,exchange,the,current,exchange;public,partial,match,request,mapping,info,info,server,web,exchange,exchange,this,info,info,this,methods,match,info,get,methods,condition,get,matching,condition,exchange,null,this,consumes,match,info,get,consumes,condition,get,matching,condition,exchange,null,this,produces,match,info,get,produces,condition,get,matching,condition,exchange,null,this,params,match,info,get,params,condition,get,matching,condition,exchange,null
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> PartialMatch -> public PartialMatch(RequestMappingInfo info, ServerWebExchange exchange);1497039338;@param info RequestMappingInfo that matches the URL path_@param exchange the current exchange;public PartialMatch(RequestMappingInfo info, ServerWebExchange exchange) {_				this.info = info__				this.methodsMatch = info.getMethodsCondition().getMatchingCondition(exchange) != null__				this.consumesMatch = info.getConsumesCondition().getMatchingCondition(exchange) != null__				this.producesMatch = info.getProducesCondition().getMatchingCondition(exchange) != null__				this.paramsMatch = info.getParamsCondition().getMatchingCondition(exchange) != null__			};param,info,request,mapping,info,that,matches,the,url,path,param,exchange,the,current,exchange;public,partial,match,request,mapping,info,info,server,web,exchange,exchange,this,info,info,this,methods,match,info,get,methods,condition,get,matching,condition,exchange,null,this,consumes,match,info,get,consumes,condition,get,matching,condition,exchange,null,this,produces,match,info,get,produces,condition,get,matching,condition,exchange,null,this,params,match,info,get,params,condition,get,matching,condition,exchange,null
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> PartialMatch -> public PartialMatch(RequestMappingInfo info, ServerWebExchange exchange);1497039338;@param info RequestMappingInfo that matches the URL path_@param exchange the current exchange;public PartialMatch(RequestMappingInfo info, ServerWebExchange exchange) {_				this.info = info__				this.methodsMatch = info.getMethodsCondition().getMatchingCondition(exchange) != null__				this.consumesMatch = info.getConsumesCondition().getMatchingCondition(exchange) != null__				this.producesMatch = info.getProducesCondition().getMatchingCondition(exchange) != null__				this.paramsMatch = info.getParamsCondition().getMatchingCondition(exchange) != null__			};param,info,request,mapping,info,that,matches,the,url,path,param,exchange,the,current,exchange;public,partial,match,request,mapping,info,info,server,web,exchange,exchange,this,info,info,this,methods,match,info,get,methods,condition,get,matching,condition,exchange,null,this,consumes,match,info,get,consumes,condition,get,matching,condition,exchange,null,this,produces,match,info,get,produces,condition,get,matching,condition,exchange,null,this,params,match,info,get,params,condition,get,matching,condition,exchange,null
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> PartialMatch -> public PartialMatch(RequestMappingInfo info, ServerWebExchange exchange);1497286385;@param info RequestMappingInfo that matches the URL path_@param exchange the current exchange;public PartialMatch(RequestMappingInfo info, ServerWebExchange exchange) {_				this.info = info__				this.methodsMatch = info.getMethodsCondition().getMatchingCondition(exchange) != null__				this.consumesMatch = info.getConsumesCondition().getMatchingCondition(exchange) != null__				this.producesMatch = info.getProducesCondition().getMatchingCondition(exchange) != null__				this.paramsMatch = info.getParamsCondition().getMatchingCondition(exchange) != null__			};param,info,request,mapping,info,that,matches,the,url,path,param,exchange,the,current,exchange;public,partial,match,request,mapping,info,info,server,web,exchange,exchange,this,info,info,this,methods,match,info,get,methods,condition,get,matching,condition,exchange,null,this,consumes,match,info,get,consumes,condition,get,matching,condition,exchange,null,this,produces,match,info,get,produces,condition,get,matching,condition,exchange,null,this,params,match,info,get,params,condition,get,matching,condition,exchange,null
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> PartialMatch -> public PartialMatch(RequestMappingInfo info, ServerWebExchange exchange);1498756719;@param info RequestMappingInfo that matches the URL path_@param exchange the current exchange;public PartialMatch(RequestMappingInfo info, ServerWebExchange exchange) {_				this.info = info__				this.methodsMatch = info.getMethodsCondition().getMatchingCondition(exchange) != null__				this.consumesMatch = info.getConsumesCondition().getMatchingCondition(exchange) != null__				this.producesMatch = info.getProducesCondition().getMatchingCondition(exchange) != null__				this.paramsMatch = info.getParamsCondition().getMatchingCondition(exchange) != null__			};param,info,request,mapping,info,that,matches,the,url,path,param,exchange,the,current,exchange;public,partial,match,request,mapping,info,info,server,web,exchange,exchange,this,info,info,this,methods,match,info,get,methods,condition,get,matching,condition,exchange,null,this,consumes,match,info,get,consumes,condition,get,matching,condition,exchange,null,this,produces,match,info,get,produces,condition,get,matching,condition,exchange,null,this,params,match,info,get,params,condition,get,matching,condition,exchange,null
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> PartialMatch -> public PartialMatch(RequestMappingInfo info, ServerWebExchange exchange);1498861175;@param info RequestMappingInfo that matches the URL path_@param exchange the current exchange;public PartialMatch(RequestMappingInfo info, ServerWebExchange exchange) {_				this.info = info__				this.methodsMatch = info.getMethodsCondition().getMatchingCondition(exchange) != null__				this.consumesMatch = info.getConsumesCondition().getMatchingCondition(exchange) != null__				this.producesMatch = info.getProducesCondition().getMatchingCondition(exchange) != null__				this.paramsMatch = info.getParamsCondition().getMatchingCondition(exchange) != null__			};param,info,request,mapping,info,that,matches,the,url,path,param,exchange,the,current,exchange;public,partial,match,request,mapping,info,info,server,web,exchange,exchange,this,info,info,this,methods,match,info,get,methods,condition,get,matching,condition,exchange,null,this,consumes,match,info,get,consumes,condition,get,matching,condition,exchange,null,this,produces,match,info,get,produces,condition,get,matching,condition,exchange,null,this,params,match,info,get,params,condition,get,matching,condition,exchange,null
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> PartialMatch -> public PartialMatch(RequestMappingInfo info, ServerWebExchange exchange);1498861175;@param info RequestMappingInfo that matches the URL path_@param exchange the current exchange;public PartialMatch(RequestMappingInfo info, ServerWebExchange exchange) {_				this.info = info__				this.methodsMatch = info.getMethodsCondition().getMatchingCondition(exchange) != null__				this.consumesMatch = info.getConsumesCondition().getMatchingCondition(exchange) != null__				this.producesMatch = info.getProducesCondition().getMatchingCondition(exchange) != null__				this.paramsMatch = info.getParamsCondition().getMatchingCondition(exchange) != null__			};param,info,request,mapping,info,that,matches,the,url,path,param,exchange,the,current,exchange;public,partial,match,request,mapping,info,info,server,web,exchange,exchange,this,info,info,this,methods,match,info,get,methods,condition,get,matching,condition,exchange,null,this,consumes,match,info,get,consumes,condition,get,matching,condition,exchange,null,this,produces,match,info,get,produces,condition,get,matching,condition,exchange,null,this,params,match,info,get,params,condition,get,matching,condition,exchange,null
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> PartialMatch -> public PartialMatch(RequestMappingInfo info, ServerWebExchange exchange);1498953917;@param info RequestMappingInfo that matches the URL path_@param exchange the current exchange;public PartialMatch(RequestMappingInfo info, ServerWebExchange exchange) {_				this.info = info__				this.methodsMatch = info.getMethodsCondition().getMatchingCondition(exchange) != null__				this.consumesMatch = info.getConsumesCondition().getMatchingCondition(exchange) != null__				this.producesMatch = info.getProducesCondition().getMatchingCondition(exchange) != null__				this.paramsMatch = info.getParamsCondition().getMatchingCondition(exchange) != null__			};param,info,request,mapping,info,that,matches,the,url,path,param,exchange,the,current,exchange;public,partial,match,request,mapping,info,info,server,web,exchange,exchange,this,info,info,this,methods,match,info,get,methods,condition,get,matching,condition,exchange,null,this,consumes,match,info,get,consumes,condition,get,matching,condition,exchange,null,this,produces,match,info,get,produces,condition,get,matching,condition,exchange,null,this,params,match,info,get,params,condition,get,matching,condition,exchange,null
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> PartialMatch -> public PartialMatch(RequestMappingInfo info, ServerWebExchange exchange);1501237594;@param info RequestMappingInfo that matches the URL path_@param exchange the current exchange;public PartialMatch(RequestMappingInfo info, ServerWebExchange exchange) {_				this.info = info__				this.methodsMatch = info.getMethodsCondition().getMatchingCondition(exchange) != null__				this.consumesMatch = info.getConsumesCondition().getMatchingCondition(exchange) != null__				this.producesMatch = info.getProducesCondition().getMatchingCondition(exchange) != null__				this.paramsMatch = info.getParamsCondition().getMatchingCondition(exchange) != null__			};param,info,request,mapping,info,that,matches,the,url,path,param,exchange,the,current,exchange;public,partial,match,request,mapping,info,info,server,web,exchange,exchange,this,info,info,this,methods,match,info,get,methods,condition,get,matching,condition,exchange,null,this,consumes,match,info,get,consumes,condition,get,matching,condition,exchange,null,this,produces,match,info,get,produces,condition,get,matching,condition,exchange,null,this,params,match,info,get,params,condition,get,matching,condition,exchange,null
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> PartialMatch -> public PartialMatch(RequestMappingInfo info, ServerWebExchange exchange);1501676476;@param info RequestMappingInfo that matches the URL path_@param exchange the current exchange;public PartialMatch(RequestMappingInfo info, ServerWebExchange exchange) {_				this.info = info__				this.methodsMatch = info.getMethodsCondition().getMatchingCondition(exchange) != null__				this.consumesMatch = info.getConsumesCondition().getMatchingCondition(exchange) != null__				this.producesMatch = info.getProducesCondition().getMatchingCondition(exchange) != null__				this.paramsMatch = info.getParamsCondition().getMatchingCondition(exchange) != null__			};param,info,request,mapping,info,that,matches,the,url,path,param,exchange,the,current,exchange;public,partial,match,request,mapping,info,info,server,web,exchange,exchange,this,info,info,this,methods,match,info,get,methods,condition,get,matching,condition,exchange,null,this,consumes,match,info,get,consumes,condition,get,matching,condition,exchange,null,this,produces,match,info,get,produces,condition,get,matching,condition,exchange,null,this,params,match,info,get,params,condition,get,matching,condition,exchange,null
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> PartialMatch -> public PartialMatch(RequestMappingInfo info, ServerWebExchange exchange);1501679128;@param info RequestMappingInfo that matches the URL path_@param exchange the current exchange;public PartialMatch(RequestMappingInfo info, ServerWebExchange exchange) {_				this.info = info__				this.methodsMatch = info.getMethodsCondition().getMatchingCondition(exchange) != null__				this.consumesMatch = info.getConsumesCondition().getMatchingCondition(exchange) != null__				this.producesMatch = info.getProducesCondition().getMatchingCondition(exchange) != null__				this.paramsMatch = info.getParamsCondition().getMatchingCondition(exchange) != null__			};param,info,request,mapping,info,that,matches,the,url,path,param,exchange,the,current,exchange;public,partial,match,request,mapping,info,info,server,web,exchange,exchange,this,info,info,this,methods,match,info,get,methods,condition,get,matching,condition,exchange,null,this,consumes,match,info,get,consumes,condition,get,matching,condition,exchange,null,this,produces,match,info,get,produces,condition,get,matching,condition,exchange,null,this,params,match,info,get,params,condition,get,matching,condition,exchange,null
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> PartialMatch -> public PartialMatch(RequestMappingInfo info, ServerWebExchange exchange);1518987682;@param info RequestMappingInfo that matches the URL path_@param exchange the current exchange;public PartialMatch(RequestMappingInfo info, ServerWebExchange exchange) {_				this.info = info__				this.methodsMatch = info.getMethodsCondition().getMatchingCondition(exchange) != null__				this.consumesMatch = info.getConsumesCondition().getMatchingCondition(exchange) != null__				this.producesMatch = info.getProducesCondition().getMatchingCondition(exchange) != null__				this.paramsMatch = info.getParamsCondition().getMatchingCondition(exchange) != null__			};param,info,request,mapping,info,that,matches,the,url,path,param,exchange,the,current,exchange;public,partial,match,request,mapping,info,info,server,web,exchange,exchange,this,info,info,this,methods,match,info,get,methods,condition,get,matching,condition,exchange,null,this,consumes,match,info,get,consumes,condition,get,matching,condition,exchange,null,this,produces,match,info,get,produces,condition,get,matching,condition,exchange,null,this,params,match,info,get,params,condition,get,matching,condition,exchange,null
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> PartialMatch -> public PartialMatch(RequestMappingInfo info, ServerWebExchange exchange);1526303103;@param info RequestMappingInfo that matches the URL path_@param exchange the current exchange;public PartialMatch(RequestMappingInfo info, ServerWebExchange exchange) {_				this.info = info__				this.methodsMatch = info.getMethodsCondition().getMatchingCondition(exchange) != null__				this.consumesMatch = info.getConsumesCondition().getMatchingCondition(exchange) != null__				this.producesMatch = info.getProducesCondition().getMatchingCondition(exchange) != null__				this.paramsMatch = info.getParamsCondition().getMatchingCondition(exchange) != null__			};param,info,request,mapping,info,that,matches,the,url,path,param,exchange,the,current,exchange;public,partial,match,request,mapping,info,info,server,web,exchange,exchange,this,info,info,this,methods,match,info,get,methods,condition,get,matching,condition,exchange,null,this,consumes,match,info,get,consumes,condition,get,matching,condition,exchange,null,this,produces,match,info,get,produces,condition,get,matching,condition,exchange,null,this,params,match,info,get,params,condition,get,matching,condition,exchange,null
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> PartialMatch -> public PartialMatch(RequestMappingInfo info, ServerWebExchange exchange);1530174524;Create a new {@link PartialMatch} instance._@param info the RequestMappingInfo that matches the URL path_@param exchange the current exchange;public PartialMatch(RequestMappingInfo info, ServerWebExchange exchange) {_				this.info = info__				this.methodsMatch = info.getMethodsCondition().getMatchingCondition(exchange) != null__				this.consumesMatch = info.getConsumesCondition().getMatchingCondition(exchange) != null__				this.producesMatch = info.getProducesCondition().getMatchingCondition(exchange) != null__				this.paramsMatch = info.getParamsCondition().getMatchingCondition(exchange) != null__			};create,a,new,link,partial,match,instance,param,info,the,request,mapping,info,that,matches,the,url,path,param,exchange,the,current,exchange;public,partial,match,request,mapping,info,info,server,web,exchange,exchange,this,info,info,this,methods,match,info,get,methods,condition,get,matching,condition,exchange,null,this,consumes,match,info,get,consumes,condition,get,matching,condition,exchange,null,this,produces,match,info,get,produces,condition,get,matching,condition,exchange,null,this,params,match,info,get,params,condition,get,matching,condition,exchange,null
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public boolean hasMethodsMismatch();1485986572;Any partial matches for "methods"?;public boolean hasMethodsMismatch() {_			return !this.partialMatches.stream()._					filter(PartialMatch::hasMethodsMatch).findAny().isPresent()__		};any,partial,matches,for,methods;public,boolean,has,methods,mismatch,return,this,partial,matches,stream,filter,partial,match,has,methods,match,find,any,is,present
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public boolean hasMethodsMismatch();1486635693;Any partial matches for "methods"?;public boolean hasMethodsMismatch() {_			return !this.partialMatches.stream()._					filter(PartialMatch::hasMethodsMatch).findAny().isPresent()__		};any,partial,matches,for,methods;public,boolean,has,methods,mismatch,return,this,partial,matches,stream,filter,partial,match,has,methods,match,find,any,is,present
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public boolean hasMethodsMismatch();1486674586;Any partial matches for "methods"?;public boolean hasMethodsMismatch() {_			return !this.partialMatches.stream()._					filter(PartialMatch::hasMethodsMatch).findAny().isPresent()__		};any,partial,matches,for,methods;public,boolean,has,methods,mismatch,return,this,partial,matches,stream,filter,partial,match,has,methods,match,find,any,is,present
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public boolean hasMethodsMismatch();1486747801;Any partial matches for "methods"?;public boolean hasMethodsMismatch() {_			return !this.partialMatches.stream()._					filter(PartialMatch::hasMethodsMatch).findAny().isPresent()__		};any,partial,matches,for,methods;public,boolean,has,methods,mismatch,return,this,partial,matches,stream,filter,partial,match,has,methods,match,find,any,is,present
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public boolean hasMethodsMismatch();1489852683;Any partial matches for "methods"?;public boolean hasMethodsMismatch() {_			return !this.partialMatches.stream()._					filter(PartialMatch::hasMethodsMatch).findAny().isPresent()__		};any,partial,matches,for,methods;public,boolean,has,methods,mismatch,return,this,partial,matches,stream,filter,partial,match,has,methods,match,find,any,is,present
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public boolean hasMethodsMismatch();1490197121;Any partial matches for "methods"?;public boolean hasMethodsMismatch() {_			return this.partialMatches.stream()._					noneMatch(PartialMatch::hasMethodsMatch)__		};any,partial,matches,for,methods;public,boolean,has,methods,mismatch,return,this,partial,matches,stream,none,match,partial,match,has,methods,match
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public boolean hasMethodsMismatch();1495639183;Any partial matches for "methods"?;public boolean hasMethodsMismatch() {_			return this.partialMatches.stream()._					noneMatch(PartialMatch::hasMethodsMatch)__		};any,partial,matches,for,methods;public,boolean,has,methods,mismatch,return,this,partial,matches,stream,none,match,partial,match,has,methods,match
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public boolean hasMethodsMismatch();1496334664;Any partial matches for "methods"?;public boolean hasMethodsMismatch() {_			return this.partialMatches.stream()._					noneMatch(PartialMatch::hasMethodsMatch)__		};any,partial,matches,for,methods;public,boolean,has,methods,mismatch,return,this,partial,matches,stream,none,match,partial,match,has,methods,match
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public boolean hasMethodsMismatch();1496433164;Any partial matches for "methods"?;public boolean hasMethodsMismatch() {_			return this.partialMatches.stream()._					noneMatch(PartialMatch::hasMethodsMatch)__		};any,partial,matches,for,methods;public,boolean,has,methods,mismatch,return,this,partial,matches,stream,none,match,partial,match,has,methods,match
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public boolean hasMethodsMismatch();1497039338;Any partial matches for "methods"?;public boolean hasMethodsMismatch() {_			return this.partialMatches.stream()._					noneMatch(PartialMatch::hasMethodsMatch)__		};any,partial,matches,for,methods;public,boolean,has,methods,mismatch,return,this,partial,matches,stream,none,match,partial,match,has,methods,match
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public boolean hasMethodsMismatch();1497039338;Any partial matches for "methods"?;public boolean hasMethodsMismatch() {_			return this.partialMatches.stream()._					noneMatch(PartialMatch::hasMethodsMatch)__		};any,partial,matches,for,methods;public,boolean,has,methods,mismatch,return,this,partial,matches,stream,none,match,partial,match,has,methods,match
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public boolean hasMethodsMismatch();1497286385;Any partial matches for "methods"?;public boolean hasMethodsMismatch() {_			return this.partialMatches.stream()._					noneMatch(PartialMatch::hasMethodsMatch)__		};any,partial,matches,for,methods;public,boolean,has,methods,mismatch,return,this,partial,matches,stream,none,match,partial,match,has,methods,match
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public boolean hasMethodsMismatch();1498756719;Any partial matches for "methods"?;public boolean hasMethodsMismatch() {_			return this.partialMatches.stream()._					noneMatch(PartialMatch::hasMethodsMatch)__		};any,partial,matches,for,methods;public,boolean,has,methods,mismatch,return,this,partial,matches,stream,none,match,partial,match,has,methods,match
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public boolean hasMethodsMismatch();1498861175;Any partial matches for "methods"?;public boolean hasMethodsMismatch() {_			return this.partialMatches.stream()._					noneMatch(PartialMatch::hasMethodsMatch)__		};any,partial,matches,for,methods;public,boolean,has,methods,mismatch,return,this,partial,matches,stream,none,match,partial,match,has,methods,match
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public boolean hasMethodsMismatch();1498861175;Any partial matches for "methods"?;public boolean hasMethodsMismatch() {_			return this.partialMatches.stream()._					noneMatch(PartialMatch::hasMethodsMatch)__		};any,partial,matches,for,methods;public,boolean,has,methods,mismatch,return,this,partial,matches,stream,none,match,partial,match,has,methods,match
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public boolean hasMethodsMismatch();1498953917;Any partial matches for "methods"?;public boolean hasMethodsMismatch() {_			return this.partialMatches.stream()._					noneMatch(PartialMatch::hasMethodsMatch)__		};any,partial,matches,for,methods;public,boolean,has,methods,mismatch,return,this,partial,matches,stream,none,match,partial,match,has,methods,match
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public boolean hasMethodsMismatch();1501237594;Any partial matches for "methods"?;public boolean hasMethodsMismatch() {_			return this.partialMatches.stream()._					noneMatch(PartialMatch::hasMethodsMatch)__		};any,partial,matches,for,methods;public,boolean,has,methods,mismatch,return,this,partial,matches,stream,none,match,partial,match,has,methods,match
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public boolean hasMethodsMismatch();1501676476;Any partial matches for "methods"?;public boolean hasMethodsMismatch() {_			return this.partialMatches.stream()._					noneMatch(PartialMatch::hasMethodsMatch)__		};any,partial,matches,for,methods;public,boolean,has,methods,mismatch,return,this,partial,matches,stream,none,match,partial,match,has,methods,match
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public boolean hasMethodsMismatch();1501679128;Any partial matches for "methods"?;public boolean hasMethodsMismatch() {_			return this.partialMatches.stream()._					noneMatch(PartialMatch::hasMethodsMatch)__		};any,partial,matches,for,methods;public,boolean,has,methods,mismatch,return,this,partial,matches,stream,none,match,partial,match,has,methods,match
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public boolean hasMethodsMismatch();1518987682;Any partial matches for "methods"?;public boolean hasMethodsMismatch() {_			return this.partialMatches.stream()._					noneMatch(PartialMatch::hasMethodsMatch)__		};any,partial,matches,for,methods;public,boolean,has,methods,mismatch,return,this,partial,matches,stream,none,match,partial,match,has,methods,match
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public boolean hasMethodsMismatch();1526303103;Any partial matches for "methods"?;public boolean hasMethodsMismatch() {_			return this.partialMatches.stream()._					noneMatch(PartialMatch::hasMethodsMatch)__		};any,partial,matches,for,methods;public,boolean,has,methods,mismatch,return,this,partial,matches,stream,none,match,partial,match,has,methods,match
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public boolean hasMethodsMismatch();1530174524;Any partial matches for "methods"?;public boolean hasMethodsMismatch() {_			return this.partialMatches.stream()._					noneMatch(PartialMatch::hasMethodsMatch)__		};any,partial,matches,for,methods;public,boolean,has,methods,mismatch,return,this,partial,matches,stream,none,match,partial,match,has,methods,match
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public boolean hasParamsMismatch();1485986572;Any partial matches for "methods", "consumes", "produces", and "params"?;public boolean hasParamsMismatch() {_			return !this.partialMatches.stream()._					filter(PartialMatch::hasParamsMatch).findAny().isPresent()__		};any,partial,matches,for,methods,consumes,produces,and,params;public,boolean,has,params,mismatch,return,this,partial,matches,stream,filter,partial,match,has,params,match,find,any,is,present
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public boolean hasParamsMismatch();1486635693;Any partial matches for "methods", "consumes", "produces", and "params"?;public boolean hasParamsMismatch() {_			return !this.partialMatches.stream()._					filter(PartialMatch::hasParamsMatch).findAny().isPresent()__		};any,partial,matches,for,methods,consumes,produces,and,params;public,boolean,has,params,mismatch,return,this,partial,matches,stream,filter,partial,match,has,params,match,find,any,is,present
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public boolean hasParamsMismatch();1486674586;Any partial matches for "methods", "consumes", "produces", and "params"?;public boolean hasParamsMismatch() {_			return !this.partialMatches.stream()._					filter(PartialMatch::hasParamsMatch).findAny().isPresent()__		};any,partial,matches,for,methods,consumes,produces,and,params;public,boolean,has,params,mismatch,return,this,partial,matches,stream,filter,partial,match,has,params,match,find,any,is,present
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public boolean hasParamsMismatch();1486747801;Any partial matches for "methods", "consumes", "produces", and "params"?;public boolean hasParamsMismatch() {_			return !this.partialMatches.stream()._					filter(PartialMatch::hasParamsMatch).findAny().isPresent()__		};any,partial,matches,for,methods,consumes,produces,and,params;public,boolean,has,params,mismatch,return,this,partial,matches,stream,filter,partial,match,has,params,match,find,any,is,present
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public boolean hasParamsMismatch();1489852683;Any partial matches for "methods", "consumes", "produces", and "params"?;public boolean hasParamsMismatch() {_			return !this.partialMatches.stream()._					filter(PartialMatch::hasParamsMatch).findAny().isPresent()__		};any,partial,matches,for,methods,consumes,produces,and,params;public,boolean,has,params,mismatch,return,this,partial,matches,stream,filter,partial,match,has,params,match,find,any,is,present
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public boolean hasParamsMismatch();1490197121;Any partial matches for "methods", "consumes", "produces", and "params"?;public boolean hasParamsMismatch() {_			return this.partialMatches.stream()._					noneMatch(PartialMatch::hasParamsMatch)__		};any,partial,matches,for,methods,consumes,produces,and,params;public,boolean,has,params,mismatch,return,this,partial,matches,stream,none,match,partial,match,has,params,match
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public boolean hasParamsMismatch();1495639183;Any partial matches for "methods", "consumes", "produces", and "params"?;public boolean hasParamsMismatch() {_			return this.partialMatches.stream()._					noneMatch(PartialMatch::hasParamsMatch)__		};any,partial,matches,for,methods,consumes,produces,and,params;public,boolean,has,params,mismatch,return,this,partial,matches,stream,none,match,partial,match,has,params,match
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public boolean hasParamsMismatch();1496334664;Any partial matches for "methods", "consumes", "produces", and "params"?;public boolean hasParamsMismatch() {_			return this.partialMatches.stream()._					noneMatch(PartialMatch::hasParamsMatch)__		};any,partial,matches,for,methods,consumes,produces,and,params;public,boolean,has,params,mismatch,return,this,partial,matches,stream,none,match,partial,match,has,params,match
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public boolean hasParamsMismatch();1496433164;Any partial matches for "methods", "consumes", "produces", and "params"?;public boolean hasParamsMismatch() {_			return this.partialMatches.stream()._					noneMatch(PartialMatch::hasParamsMatch)__		};any,partial,matches,for,methods,consumes,produces,and,params;public,boolean,has,params,mismatch,return,this,partial,matches,stream,none,match,partial,match,has,params,match
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public boolean hasParamsMismatch();1497039338;Any partial matches for "methods", "consumes", "produces", and "params"?;public boolean hasParamsMismatch() {_			return this.partialMatches.stream()._					noneMatch(PartialMatch::hasParamsMatch)__		};any,partial,matches,for,methods,consumes,produces,and,params;public,boolean,has,params,mismatch,return,this,partial,matches,stream,none,match,partial,match,has,params,match
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public boolean hasParamsMismatch();1497039338;Any partial matches for "methods", "consumes", "produces", and "params"?;public boolean hasParamsMismatch() {_			return this.partialMatches.stream()._					noneMatch(PartialMatch::hasParamsMatch)__		};any,partial,matches,for,methods,consumes,produces,and,params;public,boolean,has,params,mismatch,return,this,partial,matches,stream,none,match,partial,match,has,params,match
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public boolean hasParamsMismatch();1497286385;Any partial matches for "methods", "consumes", "produces", and "params"?;public boolean hasParamsMismatch() {_			return this.partialMatches.stream()._					noneMatch(PartialMatch::hasParamsMatch)__		};any,partial,matches,for,methods,consumes,produces,and,params;public,boolean,has,params,mismatch,return,this,partial,matches,stream,none,match,partial,match,has,params,match
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public boolean hasParamsMismatch();1498756719;Any partial matches for "methods", "consumes", "produces", and "params"?;public boolean hasParamsMismatch() {_			return this.partialMatches.stream()._					noneMatch(PartialMatch::hasParamsMatch)__		};any,partial,matches,for,methods,consumes,produces,and,params;public,boolean,has,params,mismatch,return,this,partial,matches,stream,none,match,partial,match,has,params,match
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public boolean hasParamsMismatch();1498861175;Any partial matches for "methods", "consumes", "produces", and "params"?;public boolean hasParamsMismatch() {_			return this.partialMatches.stream()._					noneMatch(PartialMatch::hasParamsMatch)__		};any,partial,matches,for,methods,consumes,produces,and,params;public,boolean,has,params,mismatch,return,this,partial,matches,stream,none,match,partial,match,has,params,match
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public boolean hasParamsMismatch();1498861175;Any partial matches for "methods", "consumes", "produces", and "params"?;public boolean hasParamsMismatch() {_			return this.partialMatches.stream()._					noneMatch(PartialMatch::hasParamsMatch)__		};any,partial,matches,for,methods,consumes,produces,and,params;public,boolean,has,params,mismatch,return,this,partial,matches,stream,none,match,partial,match,has,params,match
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public boolean hasParamsMismatch();1498953917;Any partial matches for "methods", "consumes", "produces", and "params"?;public boolean hasParamsMismatch() {_			return this.partialMatches.stream()._					noneMatch(PartialMatch::hasParamsMatch)__		};any,partial,matches,for,methods,consumes,produces,and,params;public,boolean,has,params,mismatch,return,this,partial,matches,stream,none,match,partial,match,has,params,match
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public boolean hasParamsMismatch();1501237594;Any partial matches for "methods", "consumes", "produces", and "params"?;public boolean hasParamsMismatch() {_			return this.partialMatches.stream()._					noneMatch(PartialMatch::hasParamsMatch)__		};any,partial,matches,for,methods,consumes,produces,and,params;public,boolean,has,params,mismatch,return,this,partial,matches,stream,none,match,partial,match,has,params,match
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public boolean hasParamsMismatch();1501676476;Any partial matches for "methods", "consumes", "produces", and "params"?;public boolean hasParamsMismatch() {_			return this.partialMatches.stream()._					noneMatch(PartialMatch::hasParamsMatch)__		};any,partial,matches,for,methods,consumes,produces,and,params;public,boolean,has,params,mismatch,return,this,partial,matches,stream,none,match,partial,match,has,params,match
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public boolean hasParamsMismatch();1501679128;Any partial matches for "methods", "consumes", "produces", and "params"?;public boolean hasParamsMismatch() {_			return this.partialMatches.stream()._					noneMatch(PartialMatch::hasParamsMatch)__		};any,partial,matches,for,methods,consumes,produces,and,params;public,boolean,has,params,mismatch,return,this,partial,matches,stream,none,match,partial,match,has,params,match
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public boolean hasParamsMismatch();1518987682;Any partial matches for "methods", "consumes", "produces", and "params"?;public boolean hasParamsMismatch() {_			return this.partialMatches.stream()._					noneMatch(PartialMatch::hasParamsMatch)__		};any,partial,matches,for,methods,consumes,produces,and,params;public,boolean,has,params,mismatch,return,this,partial,matches,stream,none,match,partial,match,has,params,match
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public boolean hasParamsMismatch();1526303103;Any partial matches for "methods", "consumes", "produces", and "params"?;public boolean hasParamsMismatch() {_			return this.partialMatches.stream()._					noneMatch(PartialMatch::hasParamsMatch)__		};any,partial,matches,for,methods,consumes,produces,and,params;public,boolean,has,params,mismatch,return,this,partial,matches,stream,none,match,partial,match,has,params,match
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public boolean hasParamsMismatch();1530174524;Any partial matches for "methods", "consumes", "produces", and "params"?;public boolean hasParamsMismatch() {_			return this.partialMatches.stream()._					noneMatch(PartialMatch::hasParamsMatch)__		};any,partial,matches,for,methods,consumes,produces,and,params;public,boolean,has,params,mismatch,return,this,partial,matches,stream,none,match,partial,match,has,params,match
RequestMappingInfoHandlerMapping -> @Override 	protected Set<String> getMappingPathPatterns(RequestMappingInfo info);1485986572;Get the URL path patterns associated with this {@link RequestMappingInfo}.;@Override_	protected Set<String> getMappingPathPatterns(RequestMappingInfo info) {_		return info.getPatternsCondition().getPatterns()__	};get,the,url,path,patterns,associated,with,this,link,request,mapping,info;override,protected,set,string,get,mapping,path,patterns,request,mapping,info,info,return,info,get,patterns,condition,get,patterns
RequestMappingInfoHandlerMapping -> @Override 	protected Set<String> getMappingPathPatterns(RequestMappingInfo info);1486674586;Get the URL path patterns associated with this {@link RequestMappingInfo}.;@Override_	protected Set<String> getMappingPathPatterns(RequestMappingInfo info) {_		return info.getPatternsCondition().getPatterns().stream()_				.map(p -> p.getPatternString())_				.collect(Collectors.toSet())__	};get,the,url,path,patterns,associated,with,this,link,request,mapping,info;override,protected,set,string,get,mapping,path,patterns,request,mapping,info,info,return,info,get,patterns,condition,get,patterns,stream,map,p,p,get,pattern,string,collect,collectors,to,set
RequestMappingInfoHandlerMapping -> @Override 	protected Set<String> getMappingPathPatterns(RequestMappingInfo info);1486747801;Get the URL path patterns associated with this {@link RequestMappingInfo}.;@Override_	protected Set<String> getMappingPathPatterns(RequestMappingInfo info) {_		return info.getPatternsCondition().getPatterns()__	};get,the,url,path,patterns,associated,with,this,link,request,mapping,info;override,protected,set,string,get,mapping,path,patterns,request,mapping,info,info,return,info,get,patterns,condition,get,patterns
RequestMappingInfoHandlerMapping -> @Override 	protected Set<String> getMappingPathPatterns(RequestMappingInfo info);1489852683;Get the URL path patterns associated with this {@link RequestMappingInfo}.;@Override_	protected Set<String> getMappingPathPatterns(RequestMappingInfo info) {_		return info.getPatternsCondition().getPatterns()__	};get,the,url,path,patterns,associated,with,this,link,request,mapping,info;override,protected,set,string,get,mapping,path,patterns,request,mapping,info,info,return,info,get,patterns,condition,get,patterns
RequestMappingInfoHandlerMapping -> @Override 	protected Set<String> getMappingPathPatterns(RequestMappingInfo info);1490197121;Get the URL path patterns associated with this {@link RequestMappingInfo}.;@Override_	protected Set<String> getMappingPathPatterns(RequestMappingInfo info) {_		return info.getPatternsCondition().getPatterns()__	};get,the,url,path,patterns,associated,with,this,link,request,mapping,info;override,protected,set,string,get,mapping,path,patterns,request,mapping,info,info,return,info,get,patterns,condition,get,patterns
RequestMappingInfoHandlerMapping -> @Override 	protected Set<String> getMappingPathPatterns(RequestMappingInfo info);1495639183;Get the URL path patterns associated with this {@link RequestMappingInfo}.;@Override_	protected Set<String> getMappingPathPatterns(RequestMappingInfo info) {_		return info.getPatternsCondition().getPatterns()__	};get,the,url,path,patterns,associated,with,this,link,request,mapping,info;override,protected,set,string,get,mapping,path,patterns,request,mapping,info,info,return,info,get,patterns,condition,get,patterns
RequestMappingInfoHandlerMapping -> @Override 	protected Set<String> getMappingPathPatterns(RequestMappingInfo info);1496334664;Get the URL path patterns associated with this {@link RequestMappingInfo}.;@Override_	protected Set<String> getMappingPathPatterns(RequestMappingInfo info) {_		return info.getPatternsCondition().getPatterns()__	};get,the,url,path,patterns,associated,with,this,link,request,mapping,info;override,protected,set,string,get,mapping,path,patterns,request,mapping,info,info,return,info,get,patterns,condition,get,patterns
RequestMappingInfoHandlerMapping -> @Override 	protected Set<String> getMappingPathPatterns(RequestMappingInfo info);1496433164;Get the URL path patterns associated with this {@link RequestMappingInfo}.;@Override_	protected Set<String> getMappingPathPatterns(RequestMappingInfo info) {_		return info.getPatternsCondition().getPatterns()__	};get,the,url,path,patterns,associated,with,this,link,request,mapping,info;override,protected,set,string,get,mapping,path,patterns,request,mapping,info,info,return,info,get,patterns,condition,get,patterns
RequestMappingInfoHandlerMapping -> @Override 	protected Set<String> getMappingPathPatterns(RequestMappingInfo info);1497039338;Get the URL path patterns associated with this {@link RequestMappingInfo}.;@Override_	protected Set<String> getMappingPathPatterns(RequestMappingInfo info) {_		return info.getPatternsCondition().getPatterns()__	};get,the,url,path,patterns,associated,with,this,link,request,mapping,info;override,protected,set,string,get,mapping,path,patterns,request,mapping,info,info,return,info,get,patterns,condition,get,patterns
RequestMappingInfoHandlerMapping -> @Override 	protected Set<String> getMappingPathPatterns(RequestMappingInfo info);1497039338;Get the URL path patterns associated with this {@link RequestMappingInfo}.;@Override_	protected Set<String> getMappingPathPatterns(RequestMappingInfo info) {_		return info.getPatternsCondition().getPatterns()__	};get,the,url,path,patterns,associated,with,this,link,request,mapping,info;override,protected,set,string,get,mapping,path,patterns,request,mapping,info,info,return,info,get,patterns,condition,get,patterns
RequestMappingInfoHandlerMapping -> @Override 	protected Set<String> getMappingPathPatterns(RequestMappingInfo info);1497286385;Get the URL path patterns associated with this {@link RequestMappingInfo}.;@Override_	protected Set<String> getMappingPathPatterns(RequestMappingInfo info) {_		return info.getPatternsCondition().getPatternStrings()__	};get,the,url,path,patterns,associated,with,this,link,request,mapping,info;override,protected,set,string,get,mapping,path,patterns,request,mapping,info,info,return,info,get,patterns,condition,get,pattern,strings
RequestMappingInfoHandlerMapping -> @Override 	protected Set<String> getMappingPathPatterns(RequestMappingInfo info);1498756719;Get the URL path patterns associated with this {@link RequestMappingInfo}.;@Override_	protected Set<String> getMappingPathPatterns(RequestMappingInfo info) {_		return info.getPatternsCondition().getPatternStrings()__	};get,the,url,path,patterns,associated,with,this,link,request,mapping,info;override,protected,set,string,get,mapping,path,patterns,request,mapping,info,info,return,info,get,patterns,condition,get,pattern,strings
RequestMappingInfoHandlerMapping -> @Override 	protected Set<String> getMappingPathPatterns(RequestMappingInfo info);1498861175;Get the URL path patterns associated with this {@link RequestMappingInfo}.;@Override_	protected Set<String> getMappingPathPatterns(RequestMappingInfo info) {_		return info.getPatternsCondition().getPatternStrings()__	};get,the,url,path,patterns,associated,with,this,link,request,mapping,info;override,protected,set,string,get,mapping,path,patterns,request,mapping,info,info,return,info,get,patterns,condition,get,pattern,strings
RequestMappingInfoHandlerMapping -> @Override 	protected RequestMappingInfo getMatchingMapping(RequestMappingInfo info, ServerWebExchange exchange);1485986572;Check if the given RequestMappingInfo matches the current request and_return a (potentially new) instance with conditions that match the_current request -- for example with a subset of URL patterns._@return an info in case of a match_ or {@code null} otherwise.;@Override_	protected RequestMappingInfo getMatchingMapping(RequestMappingInfo info, ServerWebExchange exchange) {_		return info.getMatchingCondition(exchange)__	};check,if,the,given,request,mapping,info,matches,the,current,request,and,return,a,potentially,new,instance,with,conditions,that,match,the,current,request,for,example,with,a,subset,of,url,patterns,return,an,info,in,case,of,a,match,or,code,null,otherwise;override,protected,request,mapping,info,get,matching,mapping,request,mapping,info,info,server,web,exchange,exchange,return,info,get,matching,condition,exchange
RequestMappingInfoHandlerMapping -> @Override 	protected RequestMappingInfo getMatchingMapping(RequestMappingInfo info, ServerWebExchange exchange);1486635693;Check if the given RequestMappingInfo matches the current request and_return a (potentially new) instance with conditions that match the_current request -- for example with a subset of URL patterns._@return an info in case of a match_ or {@code null} otherwise.;@Override_	protected RequestMappingInfo getMatchingMapping(RequestMappingInfo info, ServerWebExchange exchange) {_		return info.getMatchingCondition(exchange)__	};check,if,the,given,request,mapping,info,matches,the,current,request,and,return,a,potentially,new,instance,with,conditions,that,match,the,current,request,for,example,with,a,subset,of,url,patterns,return,an,info,in,case,of,a,match,or,code,null,otherwise;override,protected,request,mapping,info,get,matching,mapping,request,mapping,info,info,server,web,exchange,exchange,return,info,get,matching,condition,exchange
RequestMappingInfoHandlerMapping -> @Override 	protected RequestMappingInfo getMatchingMapping(RequestMappingInfo info, ServerWebExchange exchange);1486674586;Check if the given RequestMappingInfo matches the current request and_return a (potentially new) instance with conditions that match the_current request -- for example with a subset of URL patterns._@return an info in case of a match_ or {@code null} otherwise.;@Override_	protected RequestMappingInfo getMatchingMapping(RequestMappingInfo info, ServerWebExchange exchange) {_		return info.getMatchingCondition(exchange)__	};check,if,the,given,request,mapping,info,matches,the,current,request,and,return,a,potentially,new,instance,with,conditions,that,match,the,current,request,for,example,with,a,subset,of,url,patterns,return,an,info,in,case,of,a,match,or,code,null,otherwise;override,protected,request,mapping,info,get,matching,mapping,request,mapping,info,info,server,web,exchange,exchange,return,info,get,matching,condition,exchange
RequestMappingInfoHandlerMapping -> @Override 	protected RequestMappingInfo getMatchingMapping(RequestMappingInfo info, ServerWebExchange exchange);1486747801;Check if the given RequestMappingInfo matches the current request and_return a (potentially new) instance with conditions that match the_current request -- for example with a subset of URL patterns._@return an info in case of a match_ or {@code null} otherwise.;@Override_	protected RequestMappingInfo getMatchingMapping(RequestMappingInfo info, ServerWebExchange exchange) {_		return info.getMatchingCondition(exchange)__	};check,if,the,given,request,mapping,info,matches,the,current,request,and,return,a,potentially,new,instance,with,conditions,that,match,the,current,request,for,example,with,a,subset,of,url,patterns,return,an,info,in,case,of,a,match,or,code,null,otherwise;override,protected,request,mapping,info,get,matching,mapping,request,mapping,info,info,server,web,exchange,exchange,return,info,get,matching,condition,exchange
RequestMappingInfoHandlerMapping -> @Override 	protected RequestMappingInfo getMatchingMapping(RequestMappingInfo info, ServerWebExchange exchange);1489852683;Check if the given RequestMappingInfo matches the current request and_return a (potentially new) instance with conditions that match the_current request -- for example with a subset of URL patterns._@return an info in case of a match_ or {@code null} otherwise.;@Override_	protected RequestMappingInfo getMatchingMapping(RequestMappingInfo info, ServerWebExchange exchange) {_		return info.getMatchingCondition(exchange)__	};check,if,the,given,request,mapping,info,matches,the,current,request,and,return,a,potentially,new,instance,with,conditions,that,match,the,current,request,for,example,with,a,subset,of,url,patterns,return,an,info,in,case,of,a,match,or,code,null,otherwise;override,protected,request,mapping,info,get,matching,mapping,request,mapping,info,info,server,web,exchange,exchange,return,info,get,matching,condition,exchange
RequestMappingInfoHandlerMapping -> @Override 	protected RequestMappingInfo getMatchingMapping(RequestMappingInfo info, ServerWebExchange exchange);1490197121;Check if the given RequestMappingInfo matches the current request and_return a (potentially new) instance with conditions that match the_current request -- for example with a subset of URL patterns._@return an info in case of a match_ or {@code null} otherwise.;@Override_	protected RequestMappingInfo getMatchingMapping(RequestMappingInfo info, ServerWebExchange exchange) {_		return info.getMatchingCondition(exchange)__	};check,if,the,given,request,mapping,info,matches,the,current,request,and,return,a,potentially,new,instance,with,conditions,that,match,the,current,request,for,example,with,a,subset,of,url,patterns,return,an,info,in,case,of,a,match,or,code,null,otherwise;override,protected,request,mapping,info,get,matching,mapping,request,mapping,info,info,server,web,exchange,exchange,return,info,get,matching,condition,exchange
RequestMappingInfoHandlerMapping -> @Override 	protected RequestMappingInfo getMatchingMapping(RequestMappingInfo info, ServerWebExchange exchange);1495639183;Check if the given RequestMappingInfo matches the current request and_return a (potentially new) instance with conditions that match the_current request -- for example with a subset of URL patterns._@return an info in case of a match_ or {@code null} otherwise.;@Override_	protected RequestMappingInfo getMatchingMapping(RequestMappingInfo info, ServerWebExchange exchange) {_		return info.getMatchingCondition(exchange)__	};check,if,the,given,request,mapping,info,matches,the,current,request,and,return,a,potentially,new,instance,with,conditions,that,match,the,current,request,for,example,with,a,subset,of,url,patterns,return,an,info,in,case,of,a,match,or,code,null,otherwise;override,protected,request,mapping,info,get,matching,mapping,request,mapping,info,info,server,web,exchange,exchange,return,info,get,matching,condition,exchange
RequestMappingInfoHandlerMapping -> @Override 	protected RequestMappingInfo getMatchingMapping(RequestMappingInfo info, ServerWebExchange exchange);1496334664;Check if the given RequestMappingInfo matches the current request and_return a (potentially new) instance with conditions that match the_current request -- for example with a subset of URL patterns._@return an info in case of a match_ or {@code null} otherwise.;@Override_	protected RequestMappingInfo getMatchingMapping(RequestMappingInfo info, ServerWebExchange exchange) {_		return info.getMatchingCondition(exchange)__	};check,if,the,given,request,mapping,info,matches,the,current,request,and,return,a,potentially,new,instance,with,conditions,that,match,the,current,request,for,example,with,a,subset,of,url,patterns,return,an,info,in,case,of,a,match,or,code,null,otherwise;override,protected,request,mapping,info,get,matching,mapping,request,mapping,info,info,server,web,exchange,exchange,return,info,get,matching,condition,exchange
RequestMappingInfoHandlerMapping -> @Override 	protected RequestMappingInfo getMatchingMapping(RequestMappingInfo info, ServerWebExchange exchange);1496433164;Check if the given RequestMappingInfo matches the current request and_return a (potentially new) instance with conditions that match the_current request -- for example with a subset of URL patterns._@return an info in case of a match_ or {@code null} otherwise.;@Override_	protected RequestMappingInfo getMatchingMapping(RequestMappingInfo info, ServerWebExchange exchange) {_		return info.getMatchingCondition(exchange)__	};check,if,the,given,request,mapping,info,matches,the,current,request,and,return,a,potentially,new,instance,with,conditions,that,match,the,current,request,for,example,with,a,subset,of,url,patterns,return,an,info,in,case,of,a,match,or,code,null,otherwise;override,protected,request,mapping,info,get,matching,mapping,request,mapping,info,info,server,web,exchange,exchange,return,info,get,matching,condition,exchange
RequestMappingInfoHandlerMapping -> @Override 	protected RequestMappingInfo getMatchingMapping(RequestMappingInfo info, ServerWebExchange exchange);1497039338;Check if the given RequestMappingInfo matches the current request and_return a (potentially new) instance with conditions that match the_current request -- for example with a subset of URL patterns._@return an info in case of a match_ or {@code null} otherwise.;@Override_	protected RequestMappingInfo getMatchingMapping(RequestMappingInfo info, ServerWebExchange exchange) {_		return info.getMatchingCondition(exchange)__	};check,if,the,given,request,mapping,info,matches,the,current,request,and,return,a,potentially,new,instance,with,conditions,that,match,the,current,request,for,example,with,a,subset,of,url,patterns,return,an,info,in,case,of,a,match,or,code,null,otherwise;override,protected,request,mapping,info,get,matching,mapping,request,mapping,info,info,server,web,exchange,exchange,return,info,get,matching,condition,exchange
RequestMappingInfoHandlerMapping -> @Override 	protected RequestMappingInfo getMatchingMapping(RequestMappingInfo info, ServerWebExchange exchange);1497039338;Check if the given RequestMappingInfo matches the current request and_return a (potentially new) instance with conditions that match the_current request -- for example with a subset of URL patterns._@return an info in case of a match_ or {@code null} otherwise.;@Override_	protected RequestMappingInfo getMatchingMapping(RequestMappingInfo info, ServerWebExchange exchange) {_		return info.getMatchingCondition(exchange)__	};check,if,the,given,request,mapping,info,matches,the,current,request,and,return,a,potentially,new,instance,with,conditions,that,match,the,current,request,for,example,with,a,subset,of,url,patterns,return,an,info,in,case,of,a,match,or,code,null,otherwise;override,protected,request,mapping,info,get,matching,mapping,request,mapping,info,info,server,web,exchange,exchange,return,info,get,matching,condition,exchange
RequestMappingInfoHandlerMapping -> @Override 	protected RequestMappingInfo getMatchingMapping(RequestMappingInfo info, ServerWebExchange exchange);1497286385;Check if the given RequestMappingInfo matches the current request and_return a (potentially new) instance with conditions that match the_current request -- for example with a subset of URL patterns._@return an info in case of a match_ or {@code null} otherwise.;@Override_	protected RequestMappingInfo getMatchingMapping(RequestMappingInfo info, ServerWebExchange exchange) {_		return info.getMatchingCondition(exchange)__	};check,if,the,given,request,mapping,info,matches,the,current,request,and,return,a,potentially,new,instance,with,conditions,that,match,the,current,request,for,example,with,a,subset,of,url,patterns,return,an,info,in,case,of,a,match,or,code,null,otherwise;override,protected,request,mapping,info,get,matching,mapping,request,mapping,info,info,server,web,exchange,exchange,return,info,get,matching,condition,exchange
RequestMappingInfoHandlerMapping -> @Override 	protected RequestMappingInfo getMatchingMapping(RequestMappingInfo info, ServerWebExchange exchange);1498756719;Check if the given RequestMappingInfo matches the current request and_return a (potentially new) instance with conditions that match the_current request -- for example with a subset of URL patterns._@return an info in case of a match_ or {@code null} otherwise.;@Override_	protected RequestMappingInfo getMatchingMapping(RequestMappingInfo info, ServerWebExchange exchange) {_		return info.getMatchingCondition(exchange)__	};check,if,the,given,request,mapping,info,matches,the,current,request,and,return,a,potentially,new,instance,with,conditions,that,match,the,current,request,for,example,with,a,subset,of,url,patterns,return,an,info,in,case,of,a,match,or,code,null,otherwise;override,protected,request,mapping,info,get,matching,mapping,request,mapping,info,info,server,web,exchange,exchange,return,info,get,matching,condition,exchange
RequestMappingInfoHandlerMapping -> @Override 	protected RequestMappingInfo getMatchingMapping(RequestMappingInfo info, ServerWebExchange exchange);1498861175;Check if the given RequestMappingInfo matches the current request and_return a (potentially new) instance with conditions that match the_current request -- for example with a subset of URL patterns._@return an info in case of a match_ or {@code null} otherwise.;@Override_	protected RequestMappingInfo getMatchingMapping(RequestMappingInfo info, ServerWebExchange exchange) {_		return info.getMatchingCondition(exchange)__	};check,if,the,given,request,mapping,info,matches,the,current,request,and,return,a,potentially,new,instance,with,conditions,that,match,the,current,request,for,example,with,a,subset,of,url,patterns,return,an,info,in,case,of,a,match,or,code,null,otherwise;override,protected,request,mapping,info,get,matching,mapping,request,mapping,info,info,server,web,exchange,exchange,return,info,get,matching,condition,exchange
RequestMappingInfoHandlerMapping -> @Override 	protected RequestMappingInfo getMatchingMapping(RequestMappingInfo info, ServerWebExchange exchange);1498861175;Check if the given RequestMappingInfo matches the current request and_return a (potentially new) instance with conditions that match the_current request -- for example with a subset of URL patterns._@return an info in case of a match_ or {@code null} otherwise.;@Override_	protected RequestMappingInfo getMatchingMapping(RequestMappingInfo info, ServerWebExchange exchange) {_		return info.getMatchingCondition(exchange)__	};check,if,the,given,request,mapping,info,matches,the,current,request,and,return,a,potentially,new,instance,with,conditions,that,match,the,current,request,for,example,with,a,subset,of,url,patterns,return,an,info,in,case,of,a,match,or,code,null,otherwise;override,protected,request,mapping,info,get,matching,mapping,request,mapping,info,info,server,web,exchange,exchange,return,info,get,matching,condition,exchange
RequestMappingInfoHandlerMapping -> @Override 	protected RequestMappingInfo getMatchingMapping(RequestMappingInfo info, ServerWebExchange exchange);1498953917;Check if the given RequestMappingInfo matches the current request and_return a (potentially new) instance with conditions that match the_current request -- for example with a subset of URL patterns._@return an info in case of a match_ or {@code null} otherwise.;@Override_	protected RequestMappingInfo getMatchingMapping(RequestMappingInfo info, ServerWebExchange exchange) {_		return info.getMatchingCondition(exchange)__	};check,if,the,given,request,mapping,info,matches,the,current,request,and,return,a,potentially,new,instance,with,conditions,that,match,the,current,request,for,example,with,a,subset,of,url,patterns,return,an,info,in,case,of,a,match,or,code,null,otherwise;override,protected,request,mapping,info,get,matching,mapping,request,mapping,info,info,server,web,exchange,exchange,return,info,get,matching,condition,exchange
RequestMappingInfoHandlerMapping -> @Override 	protected RequestMappingInfo getMatchingMapping(RequestMappingInfo info, ServerWebExchange exchange);1501237594;Check if the given RequestMappingInfo matches the current request and_return a (potentially new) instance with conditions that match the_current request -- for example with a subset of URL patterns._@return an info in case of a match_ or {@code null} otherwise.;@Override_	protected RequestMappingInfo getMatchingMapping(RequestMappingInfo info, ServerWebExchange exchange) {_		return info.getMatchingCondition(exchange)__	};check,if,the,given,request,mapping,info,matches,the,current,request,and,return,a,potentially,new,instance,with,conditions,that,match,the,current,request,for,example,with,a,subset,of,url,patterns,return,an,info,in,case,of,a,match,or,code,null,otherwise;override,protected,request,mapping,info,get,matching,mapping,request,mapping,info,info,server,web,exchange,exchange,return,info,get,matching,condition,exchange
RequestMappingInfoHandlerMapping -> @Override 	protected RequestMappingInfo getMatchingMapping(RequestMappingInfo info, ServerWebExchange exchange);1501676476;Check if the given RequestMappingInfo matches the current request and_return a (potentially new) instance with conditions that match the_current request -- for example with a subset of URL patterns._@return an info in case of a match_ or {@code null} otherwise.;@Override_	protected RequestMappingInfo getMatchingMapping(RequestMappingInfo info, ServerWebExchange exchange) {_		return info.getMatchingCondition(exchange)__	};check,if,the,given,request,mapping,info,matches,the,current,request,and,return,a,potentially,new,instance,with,conditions,that,match,the,current,request,for,example,with,a,subset,of,url,patterns,return,an,info,in,case,of,a,match,or,code,null,otherwise;override,protected,request,mapping,info,get,matching,mapping,request,mapping,info,info,server,web,exchange,exchange,return,info,get,matching,condition,exchange
RequestMappingInfoHandlerMapping -> @Override 	protected RequestMappingInfo getMatchingMapping(RequestMappingInfo info, ServerWebExchange exchange);1501679128;Check if the given RequestMappingInfo matches the current request and_return a (potentially new) instance with conditions that match the_current request -- for example with a subset of URL patterns._@return an info in case of a match_ or {@code null} otherwise.;@Override_	protected RequestMappingInfo getMatchingMapping(RequestMappingInfo info, ServerWebExchange exchange) {_		return info.getMatchingCondition(exchange)__	};check,if,the,given,request,mapping,info,matches,the,current,request,and,return,a,potentially,new,instance,with,conditions,that,match,the,current,request,for,example,with,a,subset,of,url,patterns,return,an,info,in,case,of,a,match,or,code,null,otherwise;override,protected,request,mapping,info,get,matching,mapping,request,mapping,info,info,server,web,exchange,exchange,return,info,get,matching,condition,exchange
RequestMappingInfoHandlerMapping -> @Override 	protected RequestMappingInfo getMatchingMapping(RequestMappingInfo info, ServerWebExchange exchange);1518987682;Check if the given RequestMappingInfo matches the current request and_return a (potentially new) instance with conditions that match the_current request -- for example with a subset of URL patterns._@return an info in case of a match_ or {@code null} otherwise.;@Override_	protected RequestMappingInfo getMatchingMapping(RequestMappingInfo info, ServerWebExchange exchange) {_		return info.getMatchingCondition(exchange)__	};check,if,the,given,request,mapping,info,matches,the,current,request,and,return,a,potentially,new,instance,with,conditions,that,match,the,current,request,for,example,with,a,subset,of,url,patterns,return,an,info,in,case,of,a,match,or,code,null,otherwise;override,protected,request,mapping,info,get,matching,mapping,request,mapping,info,info,server,web,exchange,exchange,return,info,get,matching,condition,exchange
RequestMappingInfoHandlerMapping -> @Override 	protected RequestMappingInfo getMatchingMapping(RequestMappingInfo info, ServerWebExchange exchange);1526303103;Check if the given RequestMappingInfo matches the current request and_return a (potentially new) instance with conditions that match the_current request -- for example with a subset of URL patterns._@return an info in case of a match_ or {@code null} otherwise.;@Override_	protected RequestMappingInfo getMatchingMapping(RequestMappingInfo info, ServerWebExchange exchange) {_		return info.getMatchingCondition(exchange)__	};check,if,the,given,request,mapping,info,matches,the,current,request,and,return,a,potentially,new,instance,with,conditions,that,match,the,current,request,for,example,with,a,subset,of,url,patterns,return,an,info,in,case,of,a,match,or,code,null,otherwise;override,protected,request,mapping,info,get,matching,mapping,request,mapping,info,info,server,web,exchange,exchange,return,info,get,matching,condition,exchange
RequestMappingInfoHandlerMapping -> @Override 	protected RequestMappingInfo getMatchingMapping(RequestMappingInfo info, ServerWebExchange exchange);1530174524;Check if the given RequestMappingInfo matches the current request and_return a (potentially new) instance with conditions that match the_current request -- for example with a subset of URL patterns._@return an info in case of a match_ or {@code null} otherwise.;@Override_	protected RequestMappingInfo getMatchingMapping(RequestMappingInfo info, ServerWebExchange exchange) {_		return info.getMatchingCondition(exchange)__	};check,if,the,given,request,mapping,info,matches,the,current,request,and,return,a,potentially,new,instance,with,conditions,that,match,the,current,request,for,example,with,a,subset,of,url,patterns,return,an,info,in,case,of,a,match,or,code,null,otherwise;override,protected,request,mapping,info,get,matching,mapping,request,mapping,info,info,server,web,exchange,exchange,return,info,get,matching,condition,exchange
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public boolean isEmpty();1485986572;Whether there any partial matches.;public boolean isEmpty() {_			return this.partialMatches.isEmpty()__		};whether,there,any,partial,matches;public,boolean,is,empty,return,this,partial,matches,is,empty
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public boolean isEmpty();1486635693;Whether there any partial matches.;public boolean isEmpty() {_			return this.partialMatches.isEmpty()__		};whether,there,any,partial,matches;public,boolean,is,empty,return,this,partial,matches,is,empty
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public boolean isEmpty();1486674586;Whether there any partial matches.;public boolean isEmpty() {_			return this.partialMatches.isEmpty()__		};whether,there,any,partial,matches;public,boolean,is,empty,return,this,partial,matches,is,empty
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public boolean isEmpty();1486747801;Whether there any partial matches.;public boolean isEmpty() {_			return this.partialMatches.isEmpty()__		};whether,there,any,partial,matches;public,boolean,is,empty,return,this,partial,matches,is,empty
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public boolean isEmpty();1489852683;Whether there any partial matches.;public boolean isEmpty() {_			return this.partialMatches.isEmpty()__		};whether,there,any,partial,matches;public,boolean,is,empty,return,this,partial,matches,is,empty
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public boolean isEmpty();1490197121;Whether there any partial matches.;public boolean isEmpty() {_			return this.partialMatches.isEmpty()__		};whether,there,any,partial,matches;public,boolean,is,empty,return,this,partial,matches,is,empty
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public boolean isEmpty();1495639183;Whether there any partial matches.;public boolean isEmpty() {_			return this.partialMatches.isEmpty()__		};whether,there,any,partial,matches;public,boolean,is,empty,return,this,partial,matches,is,empty
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public boolean isEmpty();1496334664;Whether there any partial matches.;public boolean isEmpty() {_			return this.partialMatches.isEmpty()__		};whether,there,any,partial,matches;public,boolean,is,empty,return,this,partial,matches,is,empty
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public boolean isEmpty();1496433164;Whether there any partial matches.;public boolean isEmpty() {_			return this.partialMatches.isEmpty()__		};whether,there,any,partial,matches;public,boolean,is,empty,return,this,partial,matches,is,empty
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public boolean isEmpty();1497039338;Whether there any partial matches.;public boolean isEmpty() {_			return this.partialMatches.isEmpty()__		};whether,there,any,partial,matches;public,boolean,is,empty,return,this,partial,matches,is,empty
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public boolean isEmpty();1497039338;Whether there any partial matches.;public boolean isEmpty() {_			return this.partialMatches.isEmpty()__		};whether,there,any,partial,matches;public,boolean,is,empty,return,this,partial,matches,is,empty
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public boolean isEmpty();1497286385;Whether there any partial matches.;public boolean isEmpty() {_			return this.partialMatches.isEmpty()__		};whether,there,any,partial,matches;public,boolean,is,empty,return,this,partial,matches,is,empty
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public boolean isEmpty();1498756719;Whether there any partial matches.;public boolean isEmpty() {_			return this.partialMatches.isEmpty()__		};whether,there,any,partial,matches;public,boolean,is,empty,return,this,partial,matches,is,empty
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public boolean isEmpty();1498861175;Whether there any partial matches.;public boolean isEmpty() {_			return this.partialMatches.isEmpty()__		};whether,there,any,partial,matches;public,boolean,is,empty,return,this,partial,matches,is,empty
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public boolean isEmpty();1498861175;Whether there any partial matches.;public boolean isEmpty() {_			return this.partialMatches.isEmpty()__		};whether,there,any,partial,matches;public,boolean,is,empty,return,this,partial,matches,is,empty
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public boolean isEmpty();1498953917;Whether there any partial matches.;public boolean isEmpty() {_			return this.partialMatches.isEmpty()__		};whether,there,any,partial,matches;public,boolean,is,empty,return,this,partial,matches,is,empty
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public boolean isEmpty();1501237594;Whether there any partial matches.;public boolean isEmpty() {_			return this.partialMatches.isEmpty()__		};whether,there,any,partial,matches;public,boolean,is,empty,return,this,partial,matches,is,empty
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public boolean isEmpty();1501676476;Whether there any partial matches.;public boolean isEmpty() {_			return this.partialMatches.isEmpty()__		};whether,there,any,partial,matches;public,boolean,is,empty,return,this,partial,matches,is,empty
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public boolean isEmpty();1501679128;Whether there any partial matches.;public boolean isEmpty() {_			return this.partialMatches.isEmpty()__		};whether,there,any,partial,matches;public,boolean,is,empty,return,this,partial,matches,is,empty
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public boolean isEmpty();1518987682;Whether there any partial matches.;public boolean isEmpty() {_			return this.partialMatches.isEmpty()__		};whether,there,any,partial,matches;public,boolean,is,empty,return,this,partial,matches,is,empty
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public boolean isEmpty();1526303103;Whether there any partial matches.;public boolean isEmpty() {_			return this.partialMatches.isEmpty()__		};whether,there,any,partial,matches;public,boolean,is,empty,return,this,partial,matches,is,empty
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public boolean isEmpty();1530174524;Whether there any partial matches.;public boolean isEmpty() {_			return this.partialMatches.isEmpty()__		};whether,there,any,partial,matches;public,boolean,is,empty,return,this,partial,matches,is,empty
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public Set<HttpMethod> getAllowedMethods();1490197121;Return declared HTTP methods.;public Set<HttpMethod> getAllowedMethods() {_			return this.partialMatches.stream()._					flatMap(m -> m.getInfo().getMethodsCondition().getMethods().stream())._					map(requestMethod -> HttpMethod.resolve(requestMethod.name()))._					collect(Collectors.toSet())__		};return,declared,http,methods;public,set,http,method,get,allowed,methods,return,this,partial,matches,stream,flat,map,m,m,get,info,get,methods,condition,get,methods,stream,map,request,method,http,method,resolve,request,method,name,collect,collectors,to,set
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public Set<HttpMethod> getAllowedMethods();1495639183;Return declared HTTP methods.;public Set<HttpMethod> getAllowedMethods() {_			return this.partialMatches.stream()._					flatMap(m -> m.getInfo().getMethodsCondition().getMethods().stream())._					map(requestMethod -> HttpMethod.resolve(requestMethod.name()))._					collect(Collectors.toSet())__		};return,declared,http,methods;public,set,http,method,get,allowed,methods,return,this,partial,matches,stream,flat,map,m,m,get,info,get,methods,condition,get,methods,stream,map,request,method,http,method,resolve,request,method,name,collect,collectors,to,set
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public Set<HttpMethod> getAllowedMethods();1496334664;Return declared HTTP methods.;public Set<HttpMethod> getAllowedMethods() {_			return this.partialMatches.stream()._					flatMap(m -> m.getInfo().getMethodsCondition().getMethods().stream())._					map(requestMethod -> HttpMethod.resolve(requestMethod.name()))._					collect(Collectors.toSet())__		};return,declared,http,methods;public,set,http,method,get,allowed,methods,return,this,partial,matches,stream,flat,map,m,m,get,info,get,methods,condition,get,methods,stream,map,request,method,http,method,resolve,request,method,name,collect,collectors,to,set
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public Set<HttpMethod> getAllowedMethods();1496433164;Return declared HTTP methods.;public Set<HttpMethod> getAllowedMethods() {_			return this.partialMatches.stream()._					flatMap(m -> m.getInfo().getMethodsCondition().getMethods().stream())._					map(requestMethod -> HttpMethod.resolve(requestMethod.name()))._					collect(Collectors.toSet())__		};return,declared,http,methods;public,set,http,method,get,allowed,methods,return,this,partial,matches,stream,flat,map,m,m,get,info,get,methods,condition,get,methods,stream,map,request,method,http,method,resolve,request,method,name,collect,collectors,to,set
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public Set<HttpMethod> getAllowedMethods();1497039338;Return declared HTTP methods.;public Set<HttpMethod> getAllowedMethods() {_			return this.partialMatches.stream()._					flatMap(m -> m.getInfo().getMethodsCondition().getMethods().stream())._					map(requestMethod -> HttpMethod.resolve(requestMethod.name()))._					collect(Collectors.toSet())__		};return,declared,http,methods;public,set,http,method,get,allowed,methods,return,this,partial,matches,stream,flat,map,m,m,get,info,get,methods,condition,get,methods,stream,map,request,method,http,method,resolve,request,method,name,collect,collectors,to,set
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public Set<HttpMethod> getAllowedMethods();1497039338;Return declared HTTP methods.;public Set<HttpMethod> getAllowedMethods() {_			return this.partialMatches.stream()._					flatMap(m -> m.getInfo().getMethodsCondition().getMethods().stream())._					map(requestMethod -> HttpMethod.resolve(requestMethod.name()))._					collect(Collectors.toSet())__		};return,declared,http,methods;public,set,http,method,get,allowed,methods,return,this,partial,matches,stream,flat,map,m,m,get,info,get,methods,condition,get,methods,stream,map,request,method,http,method,resolve,request,method,name,collect,collectors,to,set
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public Set<HttpMethod> getAllowedMethods();1497286385;Return declared HTTP methods.;public Set<HttpMethod> getAllowedMethods() {_			return this.partialMatches.stream()._					flatMap(m -> m.getInfo().getMethodsCondition().getMethods().stream())._					map(requestMethod -> HttpMethod.resolve(requestMethod.name()))._					collect(Collectors.toSet())__		};return,declared,http,methods;public,set,http,method,get,allowed,methods,return,this,partial,matches,stream,flat,map,m,m,get,info,get,methods,condition,get,methods,stream,map,request,method,http,method,resolve,request,method,name,collect,collectors,to,set
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public Set<HttpMethod> getAllowedMethods();1498756719;Return declared HTTP methods.;public Set<HttpMethod> getAllowedMethods() {_			return this.partialMatches.stream()._					flatMap(m -> m.getInfo().getMethodsCondition().getMethods().stream())._					map(requestMethod -> HttpMethod.resolve(requestMethod.name()))._					collect(Collectors.toSet())__		};return,declared,http,methods;public,set,http,method,get,allowed,methods,return,this,partial,matches,stream,flat,map,m,m,get,info,get,methods,condition,get,methods,stream,map,request,method,http,method,resolve,request,method,name,collect,collectors,to,set
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public Set<HttpMethod> getAllowedMethods();1498861175;Return declared HTTP methods.;public Set<HttpMethod> getAllowedMethods() {_			return this.partialMatches.stream()._					flatMap(m -> m.getInfo().getMethodsCondition().getMethods().stream())._					map(requestMethod -> HttpMethod.resolve(requestMethod.name()))._					collect(Collectors.toSet())__		};return,declared,http,methods;public,set,http,method,get,allowed,methods,return,this,partial,matches,stream,flat,map,m,m,get,info,get,methods,condition,get,methods,stream,map,request,method,http,method,resolve,request,method,name,collect,collectors,to,set
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public Set<HttpMethod> getAllowedMethods();1498861175;Return declared HTTP methods.;public Set<HttpMethod> getAllowedMethods() {_			return this.partialMatches.stream()._					flatMap(m -> m.getInfo().getMethodsCondition().getMethods().stream())._					map(requestMethod -> HttpMethod.resolve(requestMethod.name()))._					collect(Collectors.toSet())__		};return,declared,http,methods;public,set,http,method,get,allowed,methods,return,this,partial,matches,stream,flat,map,m,m,get,info,get,methods,condition,get,methods,stream,map,request,method,http,method,resolve,request,method,name,collect,collectors,to,set
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public Set<HttpMethod> getAllowedMethods();1498953917;Return declared HTTP methods.;public Set<HttpMethod> getAllowedMethods() {_			return this.partialMatches.stream()._					flatMap(m -> m.getInfo().getMethodsCondition().getMethods().stream())._					map(requestMethod -> HttpMethod.resolve(requestMethod.name()))._					collect(Collectors.toSet())__		};return,declared,http,methods;public,set,http,method,get,allowed,methods,return,this,partial,matches,stream,flat,map,m,m,get,info,get,methods,condition,get,methods,stream,map,request,method,http,method,resolve,request,method,name,collect,collectors,to,set
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public Set<HttpMethod> getAllowedMethods();1501237594;Return declared HTTP methods.;public Set<HttpMethod> getAllowedMethods() {_			return this.partialMatches.stream()._					flatMap(m -> m.getInfo().getMethodsCondition().getMethods().stream())._					map(requestMethod -> HttpMethod.resolve(requestMethod.name()))._					collect(Collectors.toSet())__		};return,declared,http,methods;public,set,http,method,get,allowed,methods,return,this,partial,matches,stream,flat,map,m,m,get,info,get,methods,condition,get,methods,stream,map,request,method,http,method,resolve,request,method,name,collect,collectors,to,set
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public Set<HttpMethod> getAllowedMethods();1501676476;Return declared HTTP methods.;public Set<HttpMethod> getAllowedMethods() {_			return this.partialMatches.stream()._					flatMap(m -> m.getInfo().getMethodsCondition().getMethods().stream())._					map(requestMethod -> HttpMethod.resolve(requestMethod.name()))._					collect(Collectors.toSet())__		};return,declared,http,methods;public,set,http,method,get,allowed,methods,return,this,partial,matches,stream,flat,map,m,m,get,info,get,methods,condition,get,methods,stream,map,request,method,http,method,resolve,request,method,name,collect,collectors,to,set
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public Set<HttpMethod> getAllowedMethods();1501679128;Return declared HTTP methods.;public Set<HttpMethod> getAllowedMethods() {_			return this.partialMatches.stream()._					flatMap(m -> m.getInfo().getMethodsCondition().getMethods().stream())._					map(requestMethod -> HttpMethod.resolve(requestMethod.name()))._					collect(Collectors.toSet())__		};return,declared,http,methods;public,set,http,method,get,allowed,methods,return,this,partial,matches,stream,flat,map,m,m,get,info,get,methods,condition,get,methods,stream,map,request,method,http,method,resolve,request,method,name,collect,collectors,to,set
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public Set<HttpMethod> getAllowedMethods();1518987682;Return declared HTTP methods.;public Set<HttpMethod> getAllowedMethods() {_			return this.partialMatches.stream()._					flatMap(m -> m.getInfo().getMethodsCondition().getMethods().stream())._					map(requestMethod -> HttpMethod.resolve(requestMethod.name()))._					collect(Collectors.toSet())__		};return,declared,http,methods;public,set,http,method,get,allowed,methods,return,this,partial,matches,stream,flat,map,m,m,get,info,get,methods,condition,get,methods,stream,map,request,method,http,method,resolve,request,method,name,collect,collectors,to,set
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public Set<HttpMethod> getAllowedMethods();1526303103;Return declared HTTP methods.;public Set<HttpMethod> getAllowedMethods() {_			return this.partialMatches.stream()._					flatMap(m -> m.getInfo().getMethodsCondition().getMethods().stream())._					map(requestMethod -> HttpMethod.resolve(requestMethod.name()))._					collect(Collectors.toSet())__		};return,declared,http,methods;public,set,http,method,get,allowed,methods,return,this,partial,matches,stream,flat,map,m,m,get,info,get,methods,condition,get,methods,stream,map,request,method,http,method,resolve,request,method,name,collect,collectors,to,set
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public Set<HttpMethod> getAllowedMethods();1530174524;Return declared HTTP methods.;public Set<HttpMethod> getAllowedMethods() {_			return this.partialMatches.stream()._					flatMap(m -> m.getInfo().getMethodsCondition().getMethods().stream())._					map(requestMethod -> HttpMethod.resolve(requestMethod.name()))._					collect(Collectors.toSet())__		};return,declared,http,methods;public,set,http,method,get,allowed,methods,return,this,partial,matches,stream,flat,map,m,m,get,info,get,methods,condition,get,methods,stream,map,request,method,http,method,resolve,request,method,name,collect,collectors,to,set
RequestMappingInfoHandlerMapping -> @Override 	protected void handleMatch(RequestMappingInfo info, HandlerMethod handlerMethod, String lookupPath, 			ServerWebExchange exchange);1498756719;Expose URI template variables, matrix variables, and producible media types in the request._@see HandlerMapping#URI_TEMPLATE_VARIABLES_ATTRIBUTE_@see HandlerMapping#MATRIX_VARIABLES_ATTRIBUTE_@see HandlerMapping#PRODUCIBLE_MEDIA_TYPES_ATTRIBUTE;@Override_	protected void handleMatch(RequestMappingInfo info, HandlerMethod handlerMethod, String lookupPath,_			ServerWebExchange exchange) {__		super.handleMatch(info, handlerMethod, lookupPath, exchange)___		PathPattern bestPattern__		Map<String, String> uriVariables___		Set<PathPattern> patterns = info.getPatternsCondition().getPatterns()__		if (patterns.isEmpty()) {_			bestPattern = getPathPatternParser().parse(lookupPath)__			uriVariables = Collections.emptyMap()__		}_		else {_			bestPattern = patterns.iterator().next()__			uriVariables = bestPattern.matchAndExtract(lookupPath)__		}__		_		Map<String, MultiValueMap<String, String>> matrixVars = extractMatrixVariables(exchange, uriVariables)__		exchange.getAttributes().put(MATRIX_VARIABLES_ATTRIBUTE, matrixVars)___		_		if (!uriVariables.isEmpty()) {_			uriVariables = uriVariables.entrySet().stream().collect(Collectors.toMap(_					Entry::getKey, e -> StringUtils.uriDecode(e.getValue(), StandardCharsets.UTF_8)_			))__		}__		exchange.getAttributes().put(BEST_MATCHING_HANDLER_ATTRIBUTE, handlerMethod)__		exchange.getAttributes().put(BEST_MATCHING_PATTERN_ATTRIBUTE, bestPattern)__		exchange.getAttributes().put(URI_TEMPLATE_VARIABLES_ATTRIBUTE, uriVariables)___		if (!info.getProducesCondition().getProducibleMediaTypes().isEmpty()) {_			Set<MediaType> mediaTypes = info.getProducesCondition().getProducibleMediaTypes()__			exchange.getAttributes().put(PRODUCIBLE_MEDIA_TYPES_ATTRIBUTE, mediaTypes)__		}_	};expose,uri,template,variables,matrix,variables,and,producible,media,types,in,the,request,see,handler,mapping,see,handler,mapping,see,handler,mapping;override,protected,void,handle,match,request,mapping,info,info,handler,method,handler,method,string,lookup,path,server,web,exchange,exchange,super,handle,match,info,handler,method,lookup,path,exchange,path,pattern,best,pattern,map,string,string,uri,variables,set,path,pattern,patterns,info,get,patterns,condition,get,patterns,if,patterns,is,empty,best,pattern,get,path,pattern,parser,parse,lookup,path,uri,variables,collections,empty,map,else,best,pattern,patterns,iterator,next,uri,variables,best,pattern,match,and,extract,lookup,path,map,string,multi,value,map,string,string,matrix,vars,extract,matrix,variables,exchange,uri,variables,exchange,get,attributes,put,matrix,vars,if,uri,variables,is,empty,uri,variables,uri,variables,entry,set,stream,collect,collectors,to,map,entry,get,key,e,string,utils,uri,decode,e,get,value,standard,charsets,exchange,get,attributes,put,handler,method,exchange,get,attributes,put,best,pattern,exchange,get,attributes,put,uri,variables,if,info,get,produces,condition,get,producible,media,types,is,empty,set,media,type,media,types,info,get,produces,condition,get,producible,media,types,exchange,get,attributes,put,media,types
RequestMappingInfoHandlerMapping -> @Override 	protected void handleMatch(RequestMappingInfo info, HandlerMethod handlerMethod, String lookupPath, 			ServerWebExchange exchange);1498861175;Expose URI template variables, matrix variables, and producible media types in the request._@see HandlerMapping#URI_TEMPLATE_VARIABLES_ATTRIBUTE_@see HandlerMapping#MATRIX_VARIABLES_ATTRIBUTE_@see HandlerMapping#PRODUCIBLE_MEDIA_TYPES_ATTRIBUTE;@Override_	protected void handleMatch(RequestMappingInfo info, HandlerMethod handlerMethod, String lookupPath,_			ServerWebExchange exchange) {__		super.handleMatch(info, handlerMethod, lookupPath, exchange)___		PathPattern bestPattern__		Map<String, String> uriVariables__		Map<String, MultiValueMap<String, String>> matrixVariables___		Set<PathPattern> patterns = info.getPatternsCondition().getPatterns()__		if (patterns.isEmpty()) {_			bestPattern = getPathPatternParser().parse(lookupPath)__			uriVariables = Collections.emptyMap()__			matrixVariables = Collections.emptyMap()__		}_		else {_			bestPattern = patterns.iterator().next()__			PathPattern.PathMatchResult result = bestPattern.matchAndExtract(lookupPath)__			uriVariables = result.getUriVariables()__			matrixVariables = result.getMatrixVariables()__		}__		exchange.getAttributes().put(BEST_MATCHING_HANDLER_ATTRIBUTE, handlerMethod)__		exchange.getAttributes().put(BEST_MATCHING_PATTERN_ATTRIBUTE, bestPattern)__		exchange.getAttributes().put(URI_TEMPLATE_VARIABLES_ATTRIBUTE, uriVariables)__		exchange.getAttributes().put(MATRIX_VARIABLES_ATTRIBUTE, matrixVariables)___		if (!info.getProducesCondition().getProducibleMediaTypes().isEmpty()) {_			Set<MediaType> mediaTypes = info.getProducesCondition().getProducibleMediaTypes()__			exchange.getAttributes().put(PRODUCIBLE_MEDIA_TYPES_ATTRIBUTE, mediaTypes)__		}_	};expose,uri,template,variables,matrix,variables,and,producible,media,types,in,the,request,see,handler,mapping,see,handler,mapping,see,handler,mapping;override,protected,void,handle,match,request,mapping,info,info,handler,method,handler,method,string,lookup,path,server,web,exchange,exchange,super,handle,match,info,handler,method,lookup,path,exchange,path,pattern,best,pattern,map,string,string,uri,variables,map,string,multi,value,map,string,string,matrix,variables,set,path,pattern,patterns,info,get,patterns,condition,get,patterns,if,patterns,is,empty,best,pattern,get,path,pattern,parser,parse,lookup,path,uri,variables,collections,empty,map,matrix,variables,collections,empty,map,else,best,pattern,patterns,iterator,next,path,pattern,path,match,result,result,best,pattern,match,and,extract,lookup,path,uri,variables,result,get,uri,variables,matrix,variables,result,get,matrix,variables,exchange,get,attributes,put,handler,method,exchange,get,attributes,put,best,pattern,exchange,get,attributes,put,uri,variables,exchange,get,attributes,put,matrix,variables,if,info,get,produces,condition,get,producible,media,types,is,empty,set,media,type,media,types,info,get,produces,condition,get,producible,media,types,exchange,get,attributes,put,media,types
RequestMappingInfoHandlerMapping -> @Override 	protected void handleMatch(RequestMappingInfo info, HandlerMethod handlerMethod, String lookupPath, 			ServerWebExchange exchange);1498861175;Expose URI template variables, matrix variables, and producible media types in the request._@see HandlerMapping#URI_TEMPLATE_VARIABLES_ATTRIBUTE_@see HandlerMapping#MATRIX_VARIABLES_ATTRIBUTE_@see HandlerMapping#PRODUCIBLE_MEDIA_TYPES_ATTRIBUTE;@Override_	protected void handleMatch(RequestMappingInfo info, HandlerMethod handlerMethod, String lookupPath,_			ServerWebExchange exchange) {__		super.handleMatch(info, handlerMethod, lookupPath, exchange)___		PathPattern bestPattern__		Map<String, String> uriVariables__		Map<String, MultiValueMap<String, String>> matrixVariables___		Set<PathPattern> patterns = info.getPatternsCondition().getPatterns()__		if (patterns.isEmpty()) {_			bestPattern = getPathPatternParser().parse(lookupPath)__			uriVariables = Collections.emptyMap()__			matrixVariables = Collections.emptyMap()__		}_		else {_			bestPattern = patterns.iterator().next()__			PathPattern.PathMatchResult result = bestPattern.matchAndExtract(lookupPath)__			uriVariables = result.getUriVariables()__			matrixVariables = result.getMatrixVariables()__		}__		exchange.getAttributes().put(BEST_MATCHING_HANDLER_ATTRIBUTE, handlerMethod)__		exchange.getAttributes().put(BEST_MATCHING_PATTERN_ATTRIBUTE, bestPattern)__		exchange.getAttributes().put(URI_TEMPLATE_VARIABLES_ATTRIBUTE, uriVariables)__		exchange.getAttributes().put(MATRIX_VARIABLES_ATTRIBUTE, matrixVariables)___		if (!info.getProducesCondition().getProducibleMediaTypes().isEmpty()) {_			Set<MediaType> mediaTypes = info.getProducesCondition().getProducibleMediaTypes()__			exchange.getAttributes().put(PRODUCIBLE_MEDIA_TYPES_ATTRIBUTE, mediaTypes)__		}_	};expose,uri,template,variables,matrix,variables,and,producible,media,types,in,the,request,see,handler,mapping,see,handler,mapping,see,handler,mapping;override,protected,void,handle,match,request,mapping,info,info,handler,method,handler,method,string,lookup,path,server,web,exchange,exchange,super,handle,match,info,handler,method,lookup,path,exchange,path,pattern,best,pattern,map,string,string,uri,variables,map,string,multi,value,map,string,string,matrix,variables,set,path,pattern,patterns,info,get,patterns,condition,get,patterns,if,patterns,is,empty,best,pattern,get,path,pattern,parser,parse,lookup,path,uri,variables,collections,empty,map,matrix,variables,collections,empty,map,else,best,pattern,patterns,iterator,next,path,pattern,path,match,result,result,best,pattern,match,and,extract,lookup,path,uri,variables,result,get,uri,variables,matrix,variables,result,get,matrix,variables,exchange,get,attributes,put,handler,method,exchange,get,attributes,put,best,pattern,exchange,get,attributes,put,uri,variables,exchange,get,attributes,put,matrix,variables,if,info,get,produces,condition,get,producible,media,types,is,empty,set,media,type,media,types,info,get,produces,condition,get,producible,media,types,exchange,get,attributes,put,media,types
RequestMappingInfoHandlerMapping -> @Override 	protected Comparator<RequestMappingInfo> getMappingComparator(final ServerWebExchange exchange);1485986572;Provide a Comparator to sort RequestMappingInfos matched to a request.;@Override_	protected Comparator<RequestMappingInfo> getMappingComparator(final ServerWebExchange exchange) {_		return (info1, info2) -> info1.compareTo(info2, exchange)__	};provide,a,comparator,to,sort,request,mapping,infos,matched,to,a,request;override,protected,comparator,request,mapping,info,get,mapping,comparator,final,server,web,exchange,exchange,return,info1,info2,info1,compare,to,info2,exchange
RequestMappingInfoHandlerMapping -> @Override 	protected Comparator<RequestMappingInfo> getMappingComparator(final ServerWebExchange exchange);1486635693;Provide a Comparator to sort RequestMappingInfos matched to a request.;@Override_	protected Comparator<RequestMappingInfo> getMappingComparator(final ServerWebExchange exchange) {_		return (info1, info2) -> info1.compareTo(info2, exchange)__	};provide,a,comparator,to,sort,request,mapping,infos,matched,to,a,request;override,protected,comparator,request,mapping,info,get,mapping,comparator,final,server,web,exchange,exchange,return,info1,info2,info1,compare,to,info2,exchange
RequestMappingInfoHandlerMapping -> @Override 	protected Comparator<RequestMappingInfo> getMappingComparator(final ServerWebExchange exchange);1486674586;Provide a Comparator to sort RequestMappingInfos matched to a request.;@Override_	protected Comparator<RequestMappingInfo> getMappingComparator(final ServerWebExchange exchange) {_		return (info1, info2) -> info1.compareTo(info2, exchange)__	};provide,a,comparator,to,sort,request,mapping,infos,matched,to,a,request;override,protected,comparator,request,mapping,info,get,mapping,comparator,final,server,web,exchange,exchange,return,info1,info2,info1,compare,to,info2,exchange
RequestMappingInfoHandlerMapping -> @Override 	protected Comparator<RequestMappingInfo> getMappingComparator(final ServerWebExchange exchange);1486747801;Provide a Comparator to sort RequestMappingInfos matched to a request.;@Override_	protected Comparator<RequestMappingInfo> getMappingComparator(final ServerWebExchange exchange) {_		return (info1, info2) -> info1.compareTo(info2, exchange)__	};provide,a,comparator,to,sort,request,mapping,infos,matched,to,a,request;override,protected,comparator,request,mapping,info,get,mapping,comparator,final,server,web,exchange,exchange,return,info1,info2,info1,compare,to,info2,exchange
RequestMappingInfoHandlerMapping -> @Override 	protected Comparator<RequestMappingInfo> getMappingComparator(final ServerWebExchange exchange);1489852683;Provide a Comparator to sort RequestMappingInfos matched to a request.;@Override_	protected Comparator<RequestMappingInfo> getMappingComparator(final ServerWebExchange exchange) {_		return (info1, info2) -> info1.compareTo(info2, exchange)__	};provide,a,comparator,to,sort,request,mapping,infos,matched,to,a,request;override,protected,comparator,request,mapping,info,get,mapping,comparator,final,server,web,exchange,exchange,return,info1,info2,info1,compare,to,info2,exchange
RequestMappingInfoHandlerMapping -> @Override 	protected Comparator<RequestMappingInfo> getMappingComparator(final ServerWebExchange exchange);1490197121;Provide a Comparator to sort RequestMappingInfos matched to a request.;@Override_	protected Comparator<RequestMappingInfo> getMappingComparator(final ServerWebExchange exchange) {_		return (info1, info2) -> info1.compareTo(info2, exchange)__	};provide,a,comparator,to,sort,request,mapping,infos,matched,to,a,request;override,protected,comparator,request,mapping,info,get,mapping,comparator,final,server,web,exchange,exchange,return,info1,info2,info1,compare,to,info2,exchange
RequestMappingInfoHandlerMapping -> @Override 	protected Comparator<RequestMappingInfo> getMappingComparator(final ServerWebExchange exchange);1495639183;Provide a Comparator to sort RequestMappingInfos matched to a request.;@Override_	protected Comparator<RequestMappingInfo> getMappingComparator(final ServerWebExchange exchange) {_		return (info1, info2) -> info1.compareTo(info2, exchange)__	};provide,a,comparator,to,sort,request,mapping,infos,matched,to,a,request;override,protected,comparator,request,mapping,info,get,mapping,comparator,final,server,web,exchange,exchange,return,info1,info2,info1,compare,to,info2,exchange
RequestMappingInfoHandlerMapping -> @Override 	protected Comparator<RequestMappingInfo> getMappingComparator(final ServerWebExchange exchange);1496334664;Provide a Comparator to sort RequestMappingInfos matched to a request.;@Override_	protected Comparator<RequestMappingInfo> getMappingComparator(final ServerWebExchange exchange) {_		return (info1, info2) -> info1.compareTo(info2, exchange)__	};provide,a,comparator,to,sort,request,mapping,infos,matched,to,a,request;override,protected,comparator,request,mapping,info,get,mapping,comparator,final,server,web,exchange,exchange,return,info1,info2,info1,compare,to,info2,exchange
RequestMappingInfoHandlerMapping -> @Override 	protected Comparator<RequestMappingInfo> getMappingComparator(final ServerWebExchange exchange);1496433164;Provide a Comparator to sort RequestMappingInfos matched to a request.;@Override_	protected Comparator<RequestMappingInfo> getMappingComparator(final ServerWebExchange exchange) {_		return (info1, info2) -> info1.compareTo(info2, exchange)__	};provide,a,comparator,to,sort,request,mapping,infos,matched,to,a,request;override,protected,comparator,request,mapping,info,get,mapping,comparator,final,server,web,exchange,exchange,return,info1,info2,info1,compare,to,info2,exchange
RequestMappingInfoHandlerMapping -> @Override 	protected Comparator<RequestMappingInfo> getMappingComparator(final ServerWebExchange exchange);1497039338;Provide a Comparator to sort RequestMappingInfos matched to a request.;@Override_	protected Comparator<RequestMappingInfo> getMappingComparator(final ServerWebExchange exchange) {_		return (info1, info2) -> info1.compareTo(info2, exchange)__	};provide,a,comparator,to,sort,request,mapping,infos,matched,to,a,request;override,protected,comparator,request,mapping,info,get,mapping,comparator,final,server,web,exchange,exchange,return,info1,info2,info1,compare,to,info2,exchange
RequestMappingInfoHandlerMapping -> @Override 	protected Comparator<RequestMappingInfo> getMappingComparator(final ServerWebExchange exchange);1497039338;Provide a Comparator to sort RequestMappingInfos matched to a request.;@Override_	protected Comparator<RequestMappingInfo> getMappingComparator(final ServerWebExchange exchange) {_		return (info1, info2) -> info1.compareTo(info2, exchange)__	};provide,a,comparator,to,sort,request,mapping,infos,matched,to,a,request;override,protected,comparator,request,mapping,info,get,mapping,comparator,final,server,web,exchange,exchange,return,info1,info2,info1,compare,to,info2,exchange
RequestMappingInfoHandlerMapping -> @Override 	protected Comparator<RequestMappingInfo> getMappingComparator(final ServerWebExchange exchange);1497286385;Provide a Comparator to sort RequestMappingInfos matched to a request.;@Override_	protected Comparator<RequestMappingInfo> getMappingComparator(final ServerWebExchange exchange) {_		return (info1, info2) -> info1.compareTo(info2, exchange)__	};provide,a,comparator,to,sort,request,mapping,infos,matched,to,a,request;override,protected,comparator,request,mapping,info,get,mapping,comparator,final,server,web,exchange,exchange,return,info1,info2,info1,compare,to,info2,exchange
RequestMappingInfoHandlerMapping -> @Override 	protected Comparator<RequestMappingInfo> getMappingComparator(final ServerWebExchange exchange);1498756719;Provide a Comparator to sort RequestMappingInfos matched to a request.;@Override_	protected Comparator<RequestMappingInfo> getMappingComparator(final ServerWebExchange exchange) {_		return (info1, info2) -> info1.compareTo(info2, exchange)__	};provide,a,comparator,to,sort,request,mapping,infos,matched,to,a,request;override,protected,comparator,request,mapping,info,get,mapping,comparator,final,server,web,exchange,exchange,return,info1,info2,info1,compare,to,info2,exchange
RequestMappingInfoHandlerMapping -> @Override 	protected Comparator<RequestMappingInfo> getMappingComparator(final ServerWebExchange exchange);1498861175;Provide a Comparator to sort RequestMappingInfos matched to a request.;@Override_	protected Comparator<RequestMappingInfo> getMappingComparator(final ServerWebExchange exchange) {_		return (info1, info2) -> info1.compareTo(info2, exchange)__	};provide,a,comparator,to,sort,request,mapping,infos,matched,to,a,request;override,protected,comparator,request,mapping,info,get,mapping,comparator,final,server,web,exchange,exchange,return,info1,info2,info1,compare,to,info2,exchange
RequestMappingInfoHandlerMapping -> @Override 	protected Comparator<RequestMappingInfo> getMappingComparator(final ServerWebExchange exchange);1498861175;Provide a Comparator to sort RequestMappingInfos matched to a request.;@Override_	protected Comparator<RequestMappingInfo> getMappingComparator(final ServerWebExchange exchange) {_		return (info1, info2) -> info1.compareTo(info2, exchange)__	};provide,a,comparator,to,sort,request,mapping,infos,matched,to,a,request;override,protected,comparator,request,mapping,info,get,mapping,comparator,final,server,web,exchange,exchange,return,info1,info2,info1,compare,to,info2,exchange
RequestMappingInfoHandlerMapping -> @Override 	protected Comparator<RequestMappingInfo> getMappingComparator(final ServerWebExchange exchange);1498953917;Provide a Comparator to sort RequestMappingInfos matched to a request.;@Override_	protected Comparator<RequestMappingInfo> getMappingComparator(final ServerWebExchange exchange) {_		return (info1, info2) -> info1.compareTo(info2, exchange)__	};provide,a,comparator,to,sort,request,mapping,infos,matched,to,a,request;override,protected,comparator,request,mapping,info,get,mapping,comparator,final,server,web,exchange,exchange,return,info1,info2,info1,compare,to,info2,exchange
RequestMappingInfoHandlerMapping -> @Override 	protected Comparator<RequestMappingInfo> getMappingComparator(final ServerWebExchange exchange);1501237594;Provide a Comparator to sort RequestMappingInfos matched to a request.;@Override_	protected Comparator<RequestMappingInfo> getMappingComparator(final ServerWebExchange exchange) {_		return (info1, info2) -> info1.compareTo(info2, exchange)__	};provide,a,comparator,to,sort,request,mapping,infos,matched,to,a,request;override,protected,comparator,request,mapping,info,get,mapping,comparator,final,server,web,exchange,exchange,return,info1,info2,info1,compare,to,info2,exchange
RequestMappingInfoHandlerMapping -> @Override 	protected Comparator<RequestMappingInfo> getMappingComparator(final ServerWebExchange exchange);1501676476;Provide a Comparator to sort RequestMappingInfos matched to a request.;@Override_	protected Comparator<RequestMappingInfo> getMappingComparator(final ServerWebExchange exchange) {_		return (info1, info2) -> info1.compareTo(info2, exchange)__	};provide,a,comparator,to,sort,request,mapping,infos,matched,to,a,request;override,protected,comparator,request,mapping,info,get,mapping,comparator,final,server,web,exchange,exchange,return,info1,info2,info1,compare,to,info2,exchange
RequestMappingInfoHandlerMapping -> @Override 	protected Comparator<RequestMappingInfo> getMappingComparator(final ServerWebExchange exchange);1501679128;Provide a Comparator to sort RequestMappingInfos matched to a request.;@Override_	protected Comparator<RequestMappingInfo> getMappingComparator(final ServerWebExchange exchange) {_		return (info1, info2) -> info1.compareTo(info2, exchange)__	};provide,a,comparator,to,sort,request,mapping,infos,matched,to,a,request;override,protected,comparator,request,mapping,info,get,mapping,comparator,final,server,web,exchange,exchange,return,info1,info2,info1,compare,to,info2,exchange
RequestMappingInfoHandlerMapping -> @Override 	protected Comparator<RequestMappingInfo> getMappingComparator(final ServerWebExchange exchange);1518987682;Provide a Comparator to sort RequestMappingInfos matched to a request.;@Override_	protected Comparator<RequestMappingInfo> getMappingComparator(final ServerWebExchange exchange) {_		return (info1, info2) -> info1.compareTo(info2, exchange)__	};provide,a,comparator,to,sort,request,mapping,infos,matched,to,a,request;override,protected,comparator,request,mapping,info,get,mapping,comparator,final,server,web,exchange,exchange,return,info1,info2,info1,compare,to,info2,exchange
RequestMappingInfoHandlerMapping -> @Override 	protected Comparator<RequestMappingInfo> getMappingComparator(final ServerWebExchange exchange);1526303103;Provide a Comparator to sort RequestMappingInfos matched to a request.;@Override_	protected Comparator<RequestMappingInfo> getMappingComparator(final ServerWebExchange exchange) {_		return (info1, info2) -> info1.compareTo(info2, exchange)__	};provide,a,comparator,to,sort,request,mapping,infos,matched,to,a,request;override,protected,comparator,request,mapping,info,get,mapping,comparator,final,server,web,exchange,exchange,return,info1,info2,info1,compare,to,info2,exchange
RequestMappingInfoHandlerMapping -> @Override 	protected Comparator<RequestMappingInfo> getMappingComparator(final ServerWebExchange exchange);1530174524;Provide a Comparator to sort RequestMappingInfos matched to a request.;@Override_	protected Comparator<RequestMappingInfo> getMappingComparator(final ServerWebExchange exchange) {_		return (info1, info2) -> info1.compareTo(info2, exchange)__	};provide,a,comparator,to,sort,request,mapping,infos,matched,to,a,request;override,protected,comparator,request,mapping,info,get,mapping,comparator,final,server,web,exchange,exchange,return,info1,info2,info1,compare,to,info2,exchange
RequestMappingInfoHandlerMapping -> @Override 	protected HandlerMethod handleNoMatch(Set<RequestMappingInfo> infos, LookupPath lookupPath, 			ServerWebExchange exchange) throws Exception;1496334664;Iterate all RequestMappingInfos once again, look if any match by URL at_least and raise exceptions accordingly._@throws MethodNotAllowedException for matches by URL but not by HTTP method_@throws UnsupportedMediaTypeStatusException if there are matches by URL_and HTTP method but not by consumable media types_@throws NotAcceptableStatusException if there are matches by URL and HTTP_method but not by producible media types_@throws ServerWebInputException if there are matches by URL and HTTP_method but not by query parameter conditions;@Override_	protected HandlerMethod handleNoMatch(Set<RequestMappingInfo> infos, LookupPath lookupPath,_			ServerWebExchange exchange) throws Exception {__		PartialMatchHelper helper = new PartialMatchHelper(infos, exchange)___		if (helper.isEmpty()) {_			return null__		}__		ServerHttpRequest request = exchange.getRequest()___		if (helper.hasMethodsMismatch()) {_			String httpMethod = request.getMethodValue()__			Set<HttpMethod> methods = helper.getAllowedMethods()__			if (HttpMethod.OPTIONS.matches(httpMethod)) {_				HttpOptionsHandler handler = new HttpOptionsHandler(methods)__				return new HandlerMethod(handler, HTTP_OPTIONS_HANDLE_METHOD)__			}_			throw new MethodNotAllowedException(httpMethod, methods)__		}__		if (helper.hasConsumesMismatch()) {_			Set<MediaType> mediaTypes = helper.getConsumableMediaTypes()__			MediaType contentType__			try {_				contentType = request.getHeaders().getContentType()__			}_			catch (InvalidMediaTypeException ex) {_				throw new UnsupportedMediaTypeStatusException(ex.getMessage())__			}_			throw new UnsupportedMediaTypeStatusException(contentType, new ArrayList<>(mediaTypes))__		}__		if (helper.hasProducesMismatch()) {_			Set<MediaType> mediaTypes = helper.getProducibleMediaTypes()__			throw new NotAcceptableStatusException(new ArrayList<>(mediaTypes))__		}__		if (helper.hasParamsMismatch()) {_			throw new ServerWebInputException(_					"Unsatisfied query parameter conditions: " + helper.getParamConditions() +_							", actual parameters: " + request.getQueryParams())__		}__		return null__	};iterate,all,request,mapping,infos,once,again,look,if,any,match,by,url,at,least,and,raise,exceptions,accordingly,throws,method,not,allowed,exception,for,matches,by,url,but,not,by,http,method,throws,unsupported,media,type,status,exception,if,there,are,matches,by,url,and,http,method,but,not,by,consumable,media,types,throws,not,acceptable,status,exception,if,there,are,matches,by,url,and,http,method,but,not,by,producible,media,types,throws,server,web,input,exception,if,there,are,matches,by,url,and,http,method,but,not,by,query,parameter,conditions;override,protected,handler,method,handle,no,match,set,request,mapping,info,infos,lookup,path,lookup,path,server,web,exchange,exchange,throws,exception,partial,match,helper,helper,new,partial,match,helper,infos,exchange,if,helper,is,empty,return,null,server,http,request,request,exchange,get,request,if,helper,has,methods,mismatch,string,http,method,request,get,method,value,set,http,method,methods,helper,get,allowed,methods,if,http,method,options,matches,http,method,http,options,handler,handler,new,http,options,handler,methods,return,new,handler,method,handler,throw,new,method,not,allowed,exception,http,method,methods,if,helper,has,consumes,mismatch,set,media,type,media,types,helper,get,consumable,media,types,media,type,content,type,try,content,type,request,get,headers,get,content,type,catch,invalid,media,type,exception,ex,throw,new,unsupported,media,type,status,exception,ex,get,message,throw,new,unsupported,media,type,status,exception,content,type,new,array,list,media,types,if,helper,has,produces,mismatch,set,media,type,media,types,helper,get,producible,media,types,throw,new,not,acceptable,status,exception,new,array,list,media,types,if,helper,has,params,mismatch,throw,new,server,web,input,exception,unsatisfied,query,parameter,conditions,helper,get,param,conditions,actual,parameters,request,get,query,params,return,null
RequestMappingInfoHandlerMapping -> @Override 	protected HandlerMethod handleNoMatch(Set<RequestMappingInfo> infos, LookupPath lookupPath, 			ServerWebExchange exchange) throws Exception;1496433164;Iterate all RequestMappingInfos once again, look if any match by URL at_least and raise exceptions accordingly._@throws MethodNotAllowedException for matches by URL but not by HTTP method_@throws UnsupportedMediaTypeStatusException if there are matches by URL_and HTTP method but not by consumable media types_@throws NotAcceptableStatusException if there are matches by URL and HTTP_method but not by producible media types_@throws ServerWebInputException if there are matches by URL and HTTP_method but not by query parameter conditions;@Override_	protected HandlerMethod handleNoMatch(Set<RequestMappingInfo> infos, LookupPath lookupPath,_			ServerWebExchange exchange) throws Exception {__		PartialMatchHelper helper = new PartialMatchHelper(infos, exchange)___		if (helper.isEmpty()) {_			return null__		}__		ServerHttpRequest request = exchange.getRequest()___		if (helper.hasMethodsMismatch()) {_			String httpMethod = request.getMethodValue()__			Set<HttpMethod> methods = helper.getAllowedMethods()__			if (HttpMethod.OPTIONS.matches(httpMethod)) {_				HttpOptionsHandler handler = new HttpOptionsHandler(methods)__				return new HandlerMethod(handler, HTTP_OPTIONS_HANDLE_METHOD)__			}_			throw new MethodNotAllowedException(httpMethod, methods)__		}__		if (helper.hasConsumesMismatch()) {_			Set<MediaType> mediaTypes = helper.getConsumableMediaTypes()__			MediaType contentType__			try {_				contentType = request.getHeaders().getContentType()__			}_			catch (InvalidMediaTypeException ex) {_				throw new UnsupportedMediaTypeStatusException(ex.getMessage())__			}_			throw new UnsupportedMediaTypeStatusException(contentType, new ArrayList<>(mediaTypes))__		}__		if (helper.hasProducesMismatch()) {_			Set<MediaType> mediaTypes = helper.getProducibleMediaTypes()__			throw new NotAcceptableStatusException(new ArrayList<>(mediaTypes))__		}__		if (helper.hasParamsMismatch()) {_			throw new ServerWebInputException(_					"Unsatisfied query parameter conditions: " + helper.getParamConditions() +_							", actual parameters: " + request.getQueryParams())__		}__		return null__	};iterate,all,request,mapping,infos,once,again,look,if,any,match,by,url,at,least,and,raise,exceptions,accordingly,throws,method,not,allowed,exception,for,matches,by,url,but,not,by,http,method,throws,unsupported,media,type,status,exception,if,there,are,matches,by,url,and,http,method,but,not,by,consumable,media,types,throws,not,acceptable,status,exception,if,there,are,matches,by,url,and,http,method,but,not,by,producible,media,types,throws,server,web,input,exception,if,there,are,matches,by,url,and,http,method,but,not,by,query,parameter,conditions;override,protected,handler,method,handle,no,match,set,request,mapping,info,infos,lookup,path,lookup,path,server,web,exchange,exchange,throws,exception,partial,match,helper,helper,new,partial,match,helper,infos,exchange,if,helper,is,empty,return,null,server,http,request,request,exchange,get,request,if,helper,has,methods,mismatch,string,http,method,request,get,method,value,set,http,method,methods,helper,get,allowed,methods,if,http,method,options,matches,http,method,http,options,handler,handler,new,http,options,handler,methods,return,new,handler,method,handler,throw,new,method,not,allowed,exception,http,method,methods,if,helper,has,consumes,mismatch,set,media,type,media,types,helper,get,consumable,media,types,media,type,content,type,try,content,type,request,get,headers,get,content,type,catch,invalid,media,type,exception,ex,throw,new,unsupported,media,type,status,exception,ex,get,message,throw,new,unsupported,media,type,status,exception,content,type,new,array,list,media,types,if,helper,has,produces,mismatch,set,media,type,media,types,helper,get,producible,media,types,throw,new,not,acceptable,status,exception,new,array,list,media,types,if,helper,has,params,mismatch,throw,new,server,web,input,exception,unsatisfied,query,parameter,conditions,helper,get,param,conditions,actual,parameters,request,get,query,params,return,null
RequestMappingInfoHandlerMapping -> private static MultiValueMap<String, String> parseMatrixVariables(String matrixVariables);1485986572;Parse the given string with matrix variables. An example string would look_like this {@code "q1=a_q1=b_q2=a,b,c"}. The resulting map would contain_keys {@code "q1"} and {@code "q2"} with values {@code ["a","b"]} and_{@code ["a","b","c"]} respectively._@param matrixVariables the unparsed matrix variables string_@return a map with matrix variable names and values (never {@code null});private static MultiValueMap<String, String> parseMatrixVariables(String matrixVariables) {_		MultiValueMap<String, String> result = new LinkedMultiValueMap<>()__		if (!StringUtils.hasText(matrixVariables)) {_			return result__		}_		StringTokenizer pairs = new StringTokenizer(matrixVariables, "_")__		while (pairs.hasMoreTokens()) {_			String pair = pairs.nextToken()__			int index = pair.indexOf('=')__			if (index != -1) {_				String name = pair.substring(0, index)__				String rawValue = pair.substring(index + 1)__				for (String value : StringUtils.commaDelimitedListToStringArray(rawValue)) {_					result.add(name, value)__				}_			}_			else {_				result.add(pair, "")__			}_		}_		return result__	};parse,the,given,string,with,matrix,variables,an,example,string,would,look,like,this,code,q1,a,q1,b,q2,a,b,c,the,resulting,map,would,contain,keys,code,q1,and,code,q2,with,values,code,a,b,and,code,a,b,c,respectively,param,matrix,variables,the,unparsed,matrix,variables,string,return,a,map,with,matrix,variable,names,and,values,never,code,null;private,static,multi,value,map,string,string,parse,matrix,variables,string,matrix,variables,multi,value,map,string,string,result,new,linked,multi,value,map,if,string,utils,has,text,matrix,variables,return,result,string,tokenizer,pairs,new,string,tokenizer,matrix,variables,while,pairs,has,more,tokens,string,pair,pairs,next,token,int,index,pair,index,of,if,index,1,string,name,pair,substring,0,index,string,raw,value,pair,substring,index,1,for,string,value,string,utils,comma,delimited,list,to,string,array,raw,value,result,add,name,value,else,result,add,pair,return,result
RequestMappingInfoHandlerMapping -> private static MultiValueMap<String, String> parseMatrixVariables(String matrixVariables);1486635693;Parse the given string with matrix variables. An example string would look_like this {@code "q1=a_q1=b_q2=a,b,c"}. The resulting map would contain_keys {@code "q1"} and {@code "q2"} with values {@code ["a","b"]} and_{@code ["a","b","c"]} respectively._@param matrixVariables the unparsed matrix variables string_@return a map with matrix variable names and values (never {@code null});private static MultiValueMap<String, String> parseMatrixVariables(String matrixVariables) {_		MultiValueMap<String, String> result = new LinkedMultiValueMap<>()__		if (!StringUtils.hasText(matrixVariables)) {_			return result__		}_		StringTokenizer pairs = new StringTokenizer(matrixVariables, "_")__		while (pairs.hasMoreTokens()) {_			String pair = pairs.nextToken()__			int index = pair.indexOf('=')__			if (index != -1) {_				String name = pair.substring(0, index)__				String rawValue = pair.substring(index + 1)__				for (String value : StringUtils.commaDelimitedListToStringArray(rawValue)) {_					result.add(name, value)__				}_			}_			else {_				result.add(pair, "")__			}_		}_		return result__	};parse,the,given,string,with,matrix,variables,an,example,string,would,look,like,this,code,q1,a,q1,b,q2,a,b,c,the,resulting,map,would,contain,keys,code,q1,and,code,q2,with,values,code,a,b,and,code,a,b,c,respectively,param,matrix,variables,the,unparsed,matrix,variables,string,return,a,map,with,matrix,variable,names,and,values,never,code,null;private,static,multi,value,map,string,string,parse,matrix,variables,string,matrix,variables,multi,value,map,string,string,result,new,linked,multi,value,map,if,string,utils,has,text,matrix,variables,return,result,string,tokenizer,pairs,new,string,tokenizer,matrix,variables,while,pairs,has,more,tokens,string,pair,pairs,next,token,int,index,pair,index,of,if,index,1,string,name,pair,substring,0,index,string,raw,value,pair,substring,index,1,for,string,value,string,utils,comma,delimited,list,to,string,array,raw,value,result,add,name,value,else,result,add,pair,return,result
RequestMappingInfoHandlerMapping -> private static MultiValueMap<String, String> parseMatrixVariables(String matrixVariables);1486674586;Parse the given string with matrix variables. An example string would look_like this {@code "q1=a_q1=b_q2=a,b,c"}. The resulting map would contain_keys {@code "q1"} and {@code "q2"} with values {@code ["a","b"]} and_{@code ["a","b","c"]} respectively._@param matrixVariables the unparsed matrix variables string_@return a map with matrix variable names and values (never {@code null});private static MultiValueMap<String, String> parseMatrixVariables(String matrixVariables) {_		MultiValueMap<String, String> result = new LinkedMultiValueMap<>()__		if (!StringUtils.hasText(matrixVariables)) {_			return result__		}_		StringTokenizer pairs = new StringTokenizer(matrixVariables, "_")__		while (pairs.hasMoreTokens()) {_			String pair = pairs.nextToken()__			int index = pair.indexOf('=')__			if (index != -1) {_				String name = pair.substring(0, index)__				String rawValue = pair.substring(index + 1)__				for (String value : StringUtils.commaDelimitedListToStringArray(rawValue)) {_					result.add(name, value)__				}_			}_			else {_				result.add(pair, "")__			}_		}_		return result__	};parse,the,given,string,with,matrix,variables,an,example,string,would,look,like,this,code,q1,a,q1,b,q2,a,b,c,the,resulting,map,would,contain,keys,code,q1,and,code,q2,with,values,code,a,b,and,code,a,b,c,respectively,param,matrix,variables,the,unparsed,matrix,variables,string,return,a,map,with,matrix,variable,names,and,values,never,code,null;private,static,multi,value,map,string,string,parse,matrix,variables,string,matrix,variables,multi,value,map,string,string,result,new,linked,multi,value,map,if,string,utils,has,text,matrix,variables,return,result,string,tokenizer,pairs,new,string,tokenizer,matrix,variables,while,pairs,has,more,tokens,string,pair,pairs,next,token,int,index,pair,index,of,if,index,1,string,name,pair,substring,0,index,string,raw,value,pair,substring,index,1,for,string,value,string,utils,comma,delimited,list,to,string,array,raw,value,result,add,name,value,else,result,add,pair,return,result
RequestMappingInfoHandlerMapping -> private static MultiValueMap<String, String> parseMatrixVariables(String matrixVariables);1486747801;Parse the given string with matrix variables. An example string would look_like this {@code "q1=a_q1=b_q2=a,b,c"}. The resulting map would contain_keys {@code "q1"} and {@code "q2"} with values {@code ["a","b"]} and_{@code ["a","b","c"]} respectively._@param matrixVariables the unparsed matrix variables string_@return a map with matrix variable names and values (never {@code null});private static MultiValueMap<String, String> parseMatrixVariables(String matrixVariables) {_		MultiValueMap<String, String> result = new LinkedMultiValueMap<>()__		if (!StringUtils.hasText(matrixVariables)) {_			return result__		}_		StringTokenizer pairs = new StringTokenizer(matrixVariables, "_")__		while (pairs.hasMoreTokens()) {_			String pair = pairs.nextToken()__			int index = pair.indexOf('=')__			if (index != -1) {_				String name = pair.substring(0, index)__				String rawValue = pair.substring(index + 1)__				for (String value : StringUtils.commaDelimitedListToStringArray(rawValue)) {_					result.add(name, value)__				}_			}_			else {_				result.add(pair, "")__			}_		}_		return result__	};parse,the,given,string,with,matrix,variables,an,example,string,would,look,like,this,code,q1,a,q1,b,q2,a,b,c,the,resulting,map,would,contain,keys,code,q1,and,code,q2,with,values,code,a,b,and,code,a,b,c,respectively,param,matrix,variables,the,unparsed,matrix,variables,string,return,a,map,with,matrix,variable,names,and,values,never,code,null;private,static,multi,value,map,string,string,parse,matrix,variables,string,matrix,variables,multi,value,map,string,string,result,new,linked,multi,value,map,if,string,utils,has,text,matrix,variables,return,result,string,tokenizer,pairs,new,string,tokenizer,matrix,variables,while,pairs,has,more,tokens,string,pair,pairs,next,token,int,index,pair,index,of,if,index,1,string,name,pair,substring,0,index,string,raw,value,pair,substring,index,1,for,string,value,string,utils,comma,delimited,list,to,string,array,raw,value,result,add,name,value,else,result,add,pair,return,result
RequestMappingInfoHandlerMapping -> private static MultiValueMap<String, String> parseMatrixVariables(String matrixVariables);1489852683;Parse the given string with matrix variables. An example string would look_like this {@code "q1=a_q1=b_q2=a,b,c"}. The resulting map would contain_keys {@code "q1"} and {@code "q2"} with values {@code ["a","b"]} and_{@code ["a","b","c"]} respectively._@param matrixVariables the unparsed matrix variables string_@return a map with matrix variable names and values (never {@code null});private static MultiValueMap<String, String> parseMatrixVariables(String matrixVariables) {_		MultiValueMap<String, String> result = new LinkedMultiValueMap<>()__		if (!StringUtils.hasText(matrixVariables)) {_			return result__		}_		StringTokenizer pairs = new StringTokenizer(matrixVariables, "_")__		while (pairs.hasMoreTokens()) {_			String pair = pairs.nextToken()__			int index = pair.indexOf('=')__			if (index != -1) {_				String name = pair.substring(0, index)__				String rawValue = pair.substring(index + 1)__				for (String value : StringUtils.commaDelimitedListToStringArray(rawValue)) {_					result.add(name, value)__				}_			}_			else {_				result.add(pair, "")__			}_		}_		return result__	};parse,the,given,string,with,matrix,variables,an,example,string,would,look,like,this,code,q1,a,q1,b,q2,a,b,c,the,resulting,map,would,contain,keys,code,q1,and,code,q2,with,values,code,a,b,and,code,a,b,c,respectively,param,matrix,variables,the,unparsed,matrix,variables,string,return,a,map,with,matrix,variable,names,and,values,never,code,null;private,static,multi,value,map,string,string,parse,matrix,variables,string,matrix,variables,multi,value,map,string,string,result,new,linked,multi,value,map,if,string,utils,has,text,matrix,variables,return,result,string,tokenizer,pairs,new,string,tokenizer,matrix,variables,while,pairs,has,more,tokens,string,pair,pairs,next,token,int,index,pair,index,of,if,index,1,string,name,pair,substring,0,index,string,raw,value,pair,substring,index,1,for,string,value,string,utils,comma,delimited,list,to,string,array,raw,value,result,add,name,value,else,result,add,pair,return,result
RequestMappingInfoHandlerMapping -> private static MultiValueMap<String, String> parseMatrixVariables(String matrixVariables);1490197121;Parse the given string with matrix variables. An example string would look_like this {@code "q1=a_q1=b_q2=a,b,c"}. The resulting map would contain_keys {@code "q1"} and {@code "q2"} with values {@code ["a","b"]} and_{@code ["a","b","c"]} respectively._@param matrixVariables the unparsed matrix variables string_@return a map with matrix variable names and values (never {@code null});private static MultiValueMap<String, String> parseMatrixVariables(String matrixVariables) {_		MultiValueMap<String, String> result = new LinkedMultiValueMap<>()__		if (!StringUtils.hasText(matrixVariables)) {_			return result__		}_		StringTokenizer pairs = new StringTokenizer(matrixVariables, "_")__		while (pairs.hasMoreTokens()) {_			String pair = pairs.nextToken()__			int index = pair.indexOf('=')__			if (index != -1) {_				String name = pair.substring(0, index)__				String rawValue = pair.substring(index + 1)__				for (String value : StringUtils.commaDelimitedListToStringArray(rawValue)) {_					result.add(name, value)__				}_			}_			else {_				result.add(pair, "")__			}_		}_		return result__	};parse,the,given,string,with,matrix,variables,an,example,string,would,look,like,this,code,q1,a,q1,b,q2,a,b,c,the,resulting,map,would,contain,keys,code,q1,and,code,q2,with,values,code,a,b,and,code,a,b,c,respectively,param,matrix,variables,the,unparsed,matrix,variables,string,return,a,map,with,matrix,variable,names,and,values,never,code,null;private,static,multi,value,map,string,string,parse,matrix,variables,string,matrix,variables,multi,value,map,string,string,result,new,linked,multi,value,map,if,string,utils,has,text,matrix,variables,return,result,string,tokenizer,pairs,new,string,tokenizer,matrix,variables,while,pairs,has,more,tokens,string,pair,pairs,next,token,int,index,pair,index,of,if,index,1,string,name,pair,substring,0,index,string,raw,value,pair,substring,index,1,for,string,value,string,utils,comma,delimited,list,to,string,array,raw,value,result,add,name,value,else,result,add,pair,return,result
RequestMappingInfoHandlerMapping -> private static MultiValueMap<String, String> parseMatrixVariables(String matrixVariables);1495639183;Parse the given string with matrix variables. An example string would look_like this {@code "q1=a_q1=b_q2=a,b,c"}. The resulting map would contain_keys {@code "q1"} and {@code "q2"} with values {@code ["a","b"]} and_{@code ["a","b","c"]} respectively._@param matrixVariables the unparsed matrix variables string_@return a map with matrix variable names and values (never {@code null});private static MultiValueMap<String, String> parseMatrixVariables(String matrixVariables) {_		MultiValueMap<String, String> result = new LinkedMultiValueMap<>()__		if (!StringUtils.hasText(matrixVariables)) {_			return result__		}_		StringTokenizer pairs = new StringTokenizer(matrixVariables, "_")__		while (pairs.hasMoreTokens()) {_			String pair = pairs.nextToken()__			int index = pair.indexOf('=')__			if (index != -1) {_				String name = pair.substring(0, index)__				String rawValue = pair.substring(index + 1)__				for (String value : StringUtils.commaDelimitedListToStringArray(rawValue)) {_					result.add(name, value)__				}_			}_			else {_				result.add(pair, "")__			}_		}_		return result__	};parse,the,given,string,with,matrix,variables,an,example,string,would,look,like,this,code,q1,a,q1,b,q2,a,b,c,the,resulting,map,would,contain,keys,code,q1,and,code,q2,with,values,code,a,b,and,code,a,b,c,respectively,param,matrix,variables,the,unparsed,matrix,variables,string,return,a,map,with,matrix,variable,names,and,values,never,code,null;private,static,multi,value,map,string,string,parse,matrix,variables,string,matrix,variables,multi,value,map,string,string,result,new,linked,multi,value,map,if,string,utils,has,text,matrix,variables,return,result,string,tokenizer,pairs,new,string,tokenizer,matrix,variables,while,pairs,has,more,tokens,string,pair,pairs,next,token,int,index,pair,index,of,if,index,1,string,name,pair,substring,0,index,string,raw,value,pair,substring,index,1,for,string,value,string,utils,comma,delimited,list,to,string,array,raw,value,result,add,name,value,else,result,add,pair,return,result
RequestMappingInfoHandlerMapping -> @Override 	protected void handleMatch(RequestMappingInfo info, HandlerMethod handlerMethod, 			ServerWebExchange exchange);1498953917;Expose URI template variables, matrix variables, and producible media types in the request._@see HandlerMapping#URI_TEMPLATE_VARIABLES_ATTRIBUTE_@see HandlerMapping#MATRIX_VARIABLES_ATTRIBUTE_@see HandlerMapping#PRODUCIBLE_MEDIA_TYPES_ATTRIBUTE;@Override_	protected void handleMatch(RequestMappingInfo info, HandlerMethod handlerMethod,_			ServerWebExchange exchange) {__		super.handleMatch(info, handlerMethod, exchange)___		PathContainer lookupPath = exchange.getRequest().getPath().pathWithinApplication()___		PathPattern bestPattern__		Map<String, String> uriVariables__		Map<String, MultiValueMap<String, String>> matrixVariables___		Set<PathPattern> patterns = info.getPatternsCondition().getPatterns()__		if (patterns.isEmpty()) {_			bestPattern = getPathPatternParser().parse(lookupPath.value())__			uriVariables = Collections.emptyMap()__			matrixVariables = Collections.emptyMap()__		}_		else {_			bestPattern = patterns.iterator().next()__			PathPattern.PathMatchResult result = bestPattern.matchAndExtract(lookupPath)__			uriVariables = result.getUriVariables()__			matrixVariables = result.getMatrixVariables()__		}__		exchange.getAttributes().put(BEST_MATCHING_HANDLER_ATTRIBUTE, handlerMethod)__		exchange.getAttributes().put(BEST_MATCHING_PATTERN_ATTRIBUTE, bestPattern)__		exchange.getAttributes().put(URI_TEMPLATE_VARIABLES_ATTRIBUTE, uriVariables)__		exchange.getAttributes().put(MATRIX_VARIABLES_ATTRIBUTE, matrixVariables)___		if (!info.getProducesCondition().getProducibleMediaTypes().isEmpty()) {_			Set<MediaType> mediaTypes = info.getProducesCondition().getProducibleMediaTypes()__			exchange.getAttributes().put(PRODUCIBLE_MEDIA_TYPES_ATTRIBUTE, mediaTypes)__		}_	};expose,uri,template,variables,matrix,variables,and,producible,media,types,in,the,request,see,handler,mapping,see,handler,mapping,see,handler,mapping;override,protected,void,handle,match,request,mapping,info,info,handler,method,handler,method,server,web,exchange,exchange,super,handle,match,info,handler,method,exchange,path,container,lookup,path,exchange,get,request,get,path,path,within,application,path,pattern,best,pattern,map,string,string,uri,variables,map,string,multi,value,map,string,string,matrix,variables,set,path,pattern,patterns,info,get,patterns,condition,get,patterns,if,patterns,is,empty,best,pattern,get,path,pattern,parser,parse,lookup,path,value,uri,variables,collections,empty,map,matrix,variables,collections,empty,map,else,best,pattern,patterns,iterator,next,path,pattern,path,match,result,result,best,pattern,match,and,extract,lookup,path,uri,variables,result,get,uri,variables,matrix,variables,result,get,matrix,variables,exchange,get,attributes,put,handler,method,exchange,get,attributes,put,best,pattern,exchange,get,attributes,put,uri,variables,exchange,get,attributes,put,matrix,variables,if,info,get,produces,condition,get,producible,media,types,is,empty,set,media,type,media,types,info,get,produces,condition,get,producible,media,types,exchange,get,attributes,put,media,types
RequestMappingInfoHandlerMapping -> @Override 	protected void handleMatch(RequestMappingInfo info, HandlerMethod handlerMethod, 			ServerWebExchange exchange);1501237594;Expose URI template variables, matrix variables, and producible media types in the request._@see HandlerMapping#URI_TEMPLATE_VARIABLES_ATTRIBUTE_@see HandlerMapping#MATRIX_VARIABLES_ATTRIBUTE_@see HandlerMapping#PRODUCIBLE_MEDIA_TYPES_ATTRIBUTE;@Override_	protected void handleMatch(RequestMappingInfo info, HandlerMethod handlerMethod,_			ServerWebExchange exchange) {__		super.handleMatch(info, handlerMethod, exchange)___		PathContainer lookupPath = exchange.getRequest().getPath().pathWithinApplication()___		PathPattern bestPattern__		Map<String, String> uriVariables__		Map<String, MultiValueMap<String, String>> matrixVariables___		Set<PathPattern> patterns = info.getPatternsCondition().getPatterns()__		if (patterns.isEmpty()) {_			bestPattern = getPathPatternParser().parse(lookupPath.value())__			uriVariables = Collections.emptyMap()__			matrixVariables = Collections.emptyMap()__		}_		else {_			bestPattern = patterns.iterator().next()__			PathPattern.PathMatchResult result = bestPattern.matchAndExtract(lookupPath)__			uriVariables = result.getUriVariables()__			matrixVariables = result.getMatrixVariables()__		}__		exchange.getAttributes().put(BEST_MATCHING_HANDLER_ATTRIBUTE, handlerMethod)__		exchange.getAttributes().put(BEST_MATCHING_PATTERN_ATTRIBUTE, bestPattern)__		exchange.getAttributes().put(URI_TEMPLATE_VARIABLES_ATTRIBUTE, uriVariables)__		exchange.getAttributes().put(MATRIX_VARIABLES_ATTRIBUTE, matrixVariables)___		if (!info.getProducesCondition().getProducibleMediaTypes().isEmpty()) {_			Set<MediaType> mediaTypes = info.getProducesCondition().getProducibleMediaTypes()__			exchange.getAttributes().put(PRODUCIBLE_MEDIA_TYPES_ATTRIBUTE, mediaTypes)__		}_	};expose,uri,template,variables,matrix,variables,and,producible,media,types,in,the,request,see,handler,mapping,see,handler,mapping,see,handler,mapping;override,protected,void,handle,match,request,mapping,info,info,handler,method,handler,method,server,web,exchange,exchange,super,handle,match,info,handler,method,exchange,path,container,lookup,path,exchange,get,request,get,path,path,within,application,path,pattern,best,pattern,map,string,string,uri,variables,map,string,multi,value,map,string,string,matrix,variables,set,path,pattern,patterns,info,get,patterns,condition,get,patterns,if,patterns,is,empty,best,pattern,get,path,pattern,parser,parse,lookup,path,value,uri,variables,collections,empty,map,matrix,variables,collections,empty,map,else,best,pattern,patterns,iterator,next,path,pattern,path,match,result,result,best,pattern,match,and,extract,lookup,path,uri,variables,result,get,uri,variables,matrix,variables,result,get,matrix,variables,exchange,get,attributes,put,handler,method,exchange,get,attributes,put,best,pattern,exchange,get,attributes,put,uri,variables,exchange,get,attributes,put,matrix,variables,if,info,get,produces,condition,get,producible,media,types,is,empty,set,media,type,media,types,info,get,produces,condition,get,producible,media,types,exchange,get,attributes,put,media,types
RequestMappingInfoHandlerMapping -> @Override 	protected void handleMatch(RequestMappingInfo info, HandlerMethod handlerMethod, 			ServerWebExchange exchange);1501676476;Expose URI template variables, matrix variables, and producible media types in the request._@see HandlerMapping#URI_TEMPLATE_VARIABLES_ATTRIBUTE_@see HandlerMapping#MATRIX_VARIABLES_ATTRIBUTE_@see HandlerMapping#PRODUCIBLE_MEDIA_TYPES_ATTRIBUTE;@Override_	protected void handleMatch(RequestMappingInfo info, HandlerMethod handlerMethod,_			ServerWebExchange exchange) {__		super.handleMatch(info, handlerMethod, exchange)___		PathContainer lookupPath = exchange.getRequest().getPath().pathWithinApplication()___		PathPattern bestPattern__		Map<String, String> uriVariables__		Map<String, MultiValueMap<String, String>> matrixVariables___		Set<PathPattern> patterns = info.getPatternsCondition().getPatterns()__		if (patterns.isEmpty()) {_			bestPattern = getPathPatternParser().parse(lookupPath.value())__			uriVariables = Collections.emptyMap()__			matrixVariables = Collections.emptyMap()__		}_		else {_			bestPattern = patterns.iterator().next()__			PathPattern.PathMatchInfo result = bestPattern.matchAndExtract(lookupPath)__			uriVariables = result.getUriVariables()__			matrixVariables = result.getMatrixVariables()__		}__		exchange.getAttributes().put(BEST_MATCHING_HANDLER_ATTRIBUTE, handlerMethod)__		exchange.getAttributes().put(BEST_MATCHING_PATTERN_ATTRIBUTE, bestPattern)__		exchange.getAttributes().put(URI_TEMPLATE_VARIABLES_ATTRIBUTE, uriVariables)__		exchange.getAttributes().put(MATRIX_VARIABLES_ATTRIBUTE, matrixVariables)___		if (!info.getProducesCondition().getProducibleMediaTypes().isEmpty()) {_			Set<MediaType> mediaTypes = info.getProducesCondition().getProducibleMediaTypes()__			exchange.getAttributes().put(PRODUCIBLE_MEDIA_TYPES_ATTRIBUTE, mediaTypes)__		}_	};expose,uri,template,variables,matrix,variables,and,producible,media,types,in,the,request,see,handler,mapping,see,handler,mapping,see,handler,mapping;override,protected,void,handle,match,request,mapping,info,info,handler,method,handler,method,server,web,exchange,exchange,super,handle,match,info,handler,method,exchange,path,container,lookup,path,exchange,get,request,get,path,path,within,application,path,pattern,best,pattern,map,string,string,uri,variables,map,string,multi,value,map,string,string,matrix,variables,set,path,pattern,patterns,info,get,patterns,condition,get,patterns,if,patterns,is,empty,best,pattern,get,path,pattern,parser,parse,lookup,path,value,uri,variables,collections,empty,map,matrix,variables,collections,empty,map,else,best,pattern,patterns,iterator,next,path,pattern,path,match,info,result,best,pattern,match,and,extract,lookup,path,uri,variables,result,get,uri,variables,matrix,variables,result,get,matrix,variables,exchange,get,attributes,put,handler,method,exchange,get,attributes,put,best,pattern,exchange,get,attributes,put,uri,variables,exchange,get,attributes,put,matrix,variables,if,info,get,produces,condition,get,producible,media,types,is,empty,set,media,type,media,types,info,get,produces,condition,get,producible,media,types,exchange,get,attributes,put,media,types
RequestMappingInfoHandlerMapping -> @Override 	protected void handleMatch(RequestMappingInfo info, HandlerMethod handlerMethod, 			ServerWebExchange exchange);1501679128;Expose URI template variables, matrix variables, and producible media types in the request._@see HandlerMapping#URI_TEMPLATE_VARIABLES_ATTRIBUTE_@see HandlerMapping#MATRIX_VARIABLES_ATTRIBUTE_@see HandlerMapping#PRODUCIBLE_MEDIA_TYPES_ATTRIBUTE;@Override_	protected void handleMatch(RequestMappingInfo info, HandlerMethod handlerMethod,_			ServerWebExchange exchange) {__		super.handleMatch(info, handlerMethod, exchange)___		PathContainer lookupPath = exchange.getRequest().getPath().pathWithinApplication()___		PathPattern bestPattern__		Map<String, String> uriVariables__		Map<String, MultiValueMap<String, String>> matrixVariables___		Set<PathPattern> patterns = info.getPatternsCondition().getPatterns()__		if (patterns.isEmpty()) {_			bestPattern = getPathPatternParser().parse(lookupPath.value())__			uriVariables = Collections.emptyMap()__			matrixVariables = Collections.emptyMap()__		}_		else {_			bestPattern = patterns.iterator().next()__			PathPattern.PathMatchInfo result = bestPattern.matchAndExtract(lookupPath)__			Assert.notNull(result, () ->_					"Expected bestPattern: " + bestPattern + " to match lookupPath " + lookupPath)__			uriVariables = result.getUriVariables()__			matrixVariables = result.getMatrixVariables()__		}__		exchange.getAttributes().put(BEST_MATCHING_HANDLER_ATTRIBUTE, handlerMethod)__		exchange.getAttributes().put(BEST_MATCHING_PATTERN_ATTRIBUTE, bestPattern)__		exchange.getAttributes().put(URI_TEMPLATE_VARIABLES_ATTRIBUTE, uriVariables)__		exchange.getAttributes().put(MATRIX_VARIABLES_ATTRIBUTE, matrixVariables)___		if (!info.getProducesCondition().getProducibleMediaTypes().isEmpty()) {_			Set<MediaType> mediaTypes = info.getProducesCondition().getProducibleMediaTypes()__			exchange.getAttributes().put(PRODUCIBLE_MEDIA_TYPES_ATTRIBUTE, mediaTypes)__		}_	};expose,uri,template,variables,matrix,variables,and,producible,media,types,in,the,request,see,handler,mapping,see,handler,mapping,see,handler,mapping;override,protected,void,handle,match,request,mapping,info,info,handler,method,handler,method,server,web,exchange,exchange,super,handle,match,info,handler,method,exchange,path,container,lookup,path,exchange,get,request,get,path,path,within,application,path,pattern,best,pattern,map,string,string,uri,variables,map,string,multi,value,map,string,string,matrix,variables,set,path,pattern,patterns,info,get,patterns,condition,get,patterns,if,patterns,is,empty,best,pattern,get,path,pattern,parser,parse,lookup,path,value,uri,variables,collections,empty,map,matrix,variables,collections,empty,map,else,best,pattern,patterns,iterator,next,path,pattern,path,match,info,result,best,pattern,match,and,extract,lookup,path,assert,not,null,result,expected,best,pattern,best,pattern,to,match,lookup,path,lookup,path,uri,variables,result,get,uri,variables,matrix,variables,result,get,matrix,variables,exchange,get,attributes,put,handler,method,exchange,get,attributes,put,best,pattern,exchange,get,attributes,put,uri,variables,exchange,get,attributes,put,matrix,variables,if,info,get,produces,condition,get,producible,media,types,is,empty,set,media,type,media,types,info,get,produces,condition,get,producible,media,types,exchange,get,attributes,put,media,types
RequestMappingInfoHandlerMapping -> @Override 	protected void handleMatch(RequestMappingInfo info, HandlerMethod handlerMethod, 			ServerWebExchange exchange);1518987682;Expose URI template variables, matrix variables, and producible media types in the request._@see HandlerMapping#URI_TEMPLATE_VARIABLES_ATTRIBUTE_@see HandlerMapping#MATRIX_VARIABLES_ATTRIBUTE_@see HandlerMapping#PRODUCIBLE_MEDIA_TYPES_ATTRIBUTE;@Override_	protected void handleMatch(RequestMappingInfo info, HandlerMethod handlerMethod,_			ServerWebExchange exchange) {__		super.handleMatch(info, handlerMethod, exchange)___		PathContainer lookupPath = exchange.getRequest().getPath().pathWithinApplication()___		PathPattern bestPattern__		Map<String, String> uriVariables__		Map<String, MultiValueMap<String, String>> matrixVariables___		Set<PathPattern> patterns = info.getPatternsCondition().getPatterns()__		if (patterns.isEmpty()) {_			bestPattern = getPathPatternParser().parse(lookupPath.value())__			uriVariables = Collections.emptyMap()__			matrixVariables = Collections.emptyMap()__		}_		else {_			bestPattern = patterns.iterator().next()__			PathPattern.PathMatchInfo result = bestPattern.matchAndExtract(lookupPath)__			Assert.notNull(result, () ->_					"Expected bestPattern: " + bestPattern + " to match lookupPath " + lookupPath)__			uriVariables = result.getUriVariables()__			matrixVariables = result.getMatrixVariables()__		}__		exchange.getAttributes().put(BEST_MATCHING_HANDLER_ATTRIBUTE, handlerMethod)__		exchange.getAttributes().put(BEST_MATCHING_PATTERN_ATTRIBUTE, bestPattern)__		exchange.getAttributes().put(URI_TEMPLATE_VARIABLES_ATTRIBUTE, uriVariables)__		exchange.getAttributes().put(MATRIX_VARIABLES_ATTRIBUTE, matrixVariables)___		if (!info.getProducesCondition().getProducibleMediaTypes().isEmpty()) {_			Set<MediaType> mediaTypes = info.getProducesCondition().getProducibleMediaTypes()__			exchange.getAttributes().put(PRODUCIBLE_MEDIA_TYPES_ATTRIBUTE, mediaTypes)__		}_	};expose,uri,template,variables,matrix,variables,and,producible,media,types,in,the,request,see,handler,mapping,see,handler,mapping,see,handler,mapping;override,protected,void,handle,match,request,mapping,info,info,handler,method,handler,method,server,web,exchange,exchange,super,handle,match,info,handler,method,exchange,path,container,lookup,path,exchange,get,request,get,path,path,within,application,path,pattern,best,pattern,map,string,string,uri,variables,map,string,multi,value,map,string,string,matrix,variables,set,path,pattern,patterns,info,get,patterns,condition,get,patterns,if,patterns,is,empty,best,pattern,get,path,pattern,parser,parse,lookup,path,value,uri,variables,collections,empty,map,matrix,variables,collections,empty,map,else,best,pattern,patterns,iterator,next,path,pattern,path,match,info,result,best,pattern,match,and,extract,lookup,path,assert,not,null,result,expected,best,pattern,best,pattern,to,match,lookup,path,lookup,path,uri,variables,result,get,uri,variables,matrix,variables,result,get,matrix,variables,exchange,get,attributes,put,handler,method,exchange,get,attributes,put,best,pattern,exchange,get,attributes,put,uri,variables,exchange,get,attributes,put,matrix,variables,if,info,get,produces,condition,get,producible,media,types,is,empty,set,media,type,media,types,info,get,produces,condition,get,producible,media,types,exchange,get,attributes,put,media,types
RequestMappingInfoHandlerMapping -> @Override 	protected void handleMatch(RequestMappingInfo info, HandlerMethod handlerMethod, 			ServerWebExchange exchange);1526303103;Expose URI template variables, matrix variables, and producible media types in the request._@see HandlerMapping#URI_TEMPLATE_VARIABLES_ATTRIBUTE_@see HandlerMapping#MATRIX_VARIABLES_ATTRIBUTE_@see HandlerMapping#PRODUCIBLE_MEDIA_TYPES_ATTRIBUTE;@Override_	protected void handleMatch(RequestMappingInfo info, HandlerMethod handlerMethod,_			ServerWebExchange exchange) {__		super.handleMatch(info, handlerMethod, exchange)___		PathContainer lookupPath = exchange.getRequest().getPath().pathWithinApplication()___		PathPattern bestPattern__		Map<String, String> uriVariables__		Map<String, MultiValueMap<String, String>> matrixVariables___		Set<PathPattern> patterns = info.getPatternsCondition().getPatterns()__		if (patterns.isEmpty()) {_			bestPattern = getPathPatternParser().parse(lookupPath.value())__			uriVariables = Collections.emptyMap()__			matrixVariables = Collections.emptyMap()__		}_		else {_			bestPattern = patterns.iterator().next()__			PathPattern.PathMatchInfo result = bestPattern.matchAndExtract(lookupPath)__			Assert.notNull(result, () ->_					"Expected bestPattern: " + bestPattern + " to match lookupPath " + lookupPath)__			uriVariables = result.getUriVariables()__			matrixVariables = result.getMatrixVariables()__		}__		exchange.getAttributes().put(BEST_MATCHING_HANDLER_ATTRIBUTE, handlerMethod)__		exchange.getAttributes().put(BEST_MATCHING_PATTERN_ATTRIBUTE, bestPattern)__		exchange.getAttributes().put(URI_TEMPLATE_VARIABLES_ATTRIBUTE, uriVariables)__		exchange.getAttributes().put(MATRIX_VARIABLES_ATTRIBUTE, matrixVariables)___		if (!info.getProducesCondition().getProducibleMediaTypes().isEmpty()) {_			Set<MediaType> mediaTypes = info.getProducesCondition().getProducibleMediaTypes()__			exchange.getAttributes().put(PRODUCIBLE_MEDIA_TYPES_ATTRIBUTE, mediaTypes)__		}_	};expose,uri,template,variables,matrix,variables,and,producible,media,types,in,the,request,see,handler,mapping,see,handler,mapping,see,handler,mapping;override,protected,void,handle,match,request,mapping,info,info,handler,method,handler,method,server,web,exchange,exchange,super,handle,match,info,handler,method,exchange,path,container,lookup,path,exchange,get,request,get,path,path,within,application,path,pattern,best,pattern,map,string,string,uri,variables,map,string,multi,value,map,string,string,matrix,variables,set,path,pattern,patterns,info,get,patterns,condition,get,patterns,if,patterns,is,empty,best,pattern,get,path,pattern,parser,parse,lookup,path,value,uri,variables,collections,empty,map,matrix,variables,collections,empty,map,else,best,pattern,patterns,iterator,next,path,pattern,path,match,info,result,best,pattern,match,and,extract,lookup,path,assert,not,null,result,expected,best,pattern,best,pattern,to,match,lookup,path,lookup,path,uri,variables,result,get,uri,variables,matrix,variables,result,get,matrix,variables,exchange,get,attributes,put,handler,method,exchange,get,attributes,put,best,pattern,exchange,get,attributes,put,uri,variables,exchange,get,attributes,put,matrix,variables,if,info,get,produces,condition,get,producible,media,types,is,empty,set,media,type,media,types,info,get,produces,condition,get,producible,media,types,exchange,get,attributes,put,media,types
RequestMappingInfoHandlerMapping -> @Override 	protected void handleMatch(RequestMappingInfo info, HandlerMethod handlerMethod, 			ServerWebExchange exchange);1530174524;Expose URI template variables, matrix variables, and producible media types in the request._@see HandlerMapping#URI_TEMPLATE_VARIABLES_ATTRIBUTE_@see HandlerMapping#MATRIX_VARIABLES_ATTRIBUTE_@see HandlerMapping#PRODUCIBLE_MEDIA_TYPES_ATTRIBUTE;@Override_	protected void handleMatch(RequestMappingInfo info, HandlerMethod handlerMethod,_			ServerWebExchange exchange) {__		super.handleMatch(info, handlerMethod, exchange)___		PathContainer lookupPath = exchange.getRequest().getPath().pathWithinApplication()___		PathPattern bestPattern__		Map<String, String> uriVariables__		Map<String, MultiValueMap<String, String>> matrixVariables___		Set<PathPattern> patterns = info.getPatternsCondition().getPatterns()__		if (patterns.isEmpty()) {_			bestPattern = getPathPatternParser().parse(lookupPath.value())__			uriVariables = Collections.emptyMap()__			matrixVariables = Collections.emptyMap()__		}_		else {_			bestPattern = patterns.iterator().next()__			PathPattern.PathMatchInfo result = bestPattern.matchAndExtract(lookupPath)__			Assert.notNull(result, () ->_					"Expected bestPattern: " + bestPattern + " to match lookupPath " + lookupPath)__			uriVariables = result.getUriVariables()__			matrixVariables = result.getMatrixVariables()__		}__		exchange.getAttributes().put(BEST_MATCHING_HANDLER_ATTRIBUTE, handlerMethod)__		exchange.getAttributes().put(BEST_MATCHING_PATTERN_ATTRIBUTE, bestPattern)__		exchange.getAttributes().put(URI_TEMPLATE_VARIABLES_ATTRIBUTE, uriVariables)__		exchange.getAttributes().put(MATRIX_VARIABLES_ATTRIBUTE, matrixVariables)___		if (!info.getProducesCondition().getProducibleMediaTypes().isEmpty()) {_			Set<MediaType> mediaTypes = info.getProducesCondition().getProducibleMediaTypes()__			exchange.getAttributes().put(PRODUCIBLE_MEDIA_TYPES_ATTRIBUTE, mediaTypes)__		}_	};expose,uri,template,variables,matrix,variables,and,producible,media,types,in,the,request,see,handler,mapping,see,handler,mapping,see,handler,mapping;override,protected,void,handle,match,request,mapping,info,info,handler,method,handler,method,server,web,exchange,exchange,super,handle,match,info,handler,method,exchange,path,container,lookup,path,exchange,get,request,get,path,path,within,application,path,pattern,best,pattern,map,string,string,uri,variables,map,string,multi,value,map,string,string,matrix,variables,set,path,pattern,patterns,info,get,patterns,condition,get,patterns,if,patterns,is,empty,best,pattern,get,path,pattern,parser,parse,lookup,path,value,uri,variables,collections,empty,map,matrix,variables,collections,empty,map,else,best,pattern,patterns,iterator,next,path,pattern,path,match,info,result,best,pattern,match,and,extract,lookup,path,assert,not,null,result,expected,best,pattern,best,pattern,to,match,lookup,path,lookup,path,uri,variables,result,get,uri,variables,matrix,variables,result,get,matrix,variables,exchange,get,attributes,put,handler,method,exchange,get,attributes,put,best,pattern,exchange,get,attributes,put,uri,variables,exchange,get,attributes,put,matrix,variables,if,info,get,produces,condition,get,producible,media,types,is,empty,set,media,type,media,types,info,get,produces,condition,get,producible,media,types,exchange,get,attributes,put,media,types
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public Set<String> getAllowedMethods();1485986572;Return declared HTTP methods.;public Set<String> getAllowedMethods() {_			return this.partialMatches.stream()._					flatMap(m -> m.getInfo().getMethodsCondition().getMethods().stream())._					map(requestMethod -> requestMethod.name())._					collect(Collectors.toCollection(LinkedHashSet::new))__		};return,declared,http,methods;public,set,string,get,allowed,methods,return,this,partial,matches,stream,flat,map,m,m,get,info,get,methods,condition,get,methods,stream,map,request,method,request,method,name,collect,collectors,to,collection,linked,hash,set,new
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public Set<String> getAllowedMethods();1486635693;Return declared HTTP methods.;public Set<String> getAllowedMethods() {_			return this.partialMatches.stream()._					flatMap(m -> m.getInfo().getMethodsCondition().getMethods().stream())._					map(requestMethod -> requestMethod.name())._					collect(Collectors.toCollection(LinkedHashSet::new))__		};return,declared,http,methods;public,set,string,get,allowed,methods,return,this,partial,matches,stream,flat,map,m,m,get,info,get,methods,condition,get,methods,stream,map,request,method,request,method,name,collect,collectors,to,collection,linked,hash,set,new
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public Set<String> getAllowedMethods();1486674586;Return declared HTTP methods.;public Set<String> getAllowedMethods() {_			return this.partialMatches.stream()._					flatMap(m -> m.getInfo().getMethodsCondition().getMethods().stream())._					map(requestMethod -> requestMethod.name())._					collect(Collectors.toCollection(LinkedHashSet::new))__		};return,declared,http,methods;public,set,string,get,allowed,methods,return,this,partial,matches,stream,flat,map,m,m,get,info,get,methods,condition,get,methods,stream,map,request,method,request,method,name,collect,collectors,to,collection,linked,hash,set,new
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public Set<String> getAllowedMethods();1486747801;Return declared HTTP methods.;public Set<String> getAllowedMethods() {_			return this.partialMatches.stream()._					flatMap(m -> m.getInfo().getMethodsCondition().getMethods().stream())._					map(requestMethod -> requestMethod.name())._					collect(Collectors.toCollection(LinkedHashSet::new))__		};return,declared,http,methods;public,set,string,get,allowed,methods,return,this,partial,matches,stream,flat,map,m,m,get,info,get,methods,condition,get,methods,stream,map,request,method,request,method,name,collect,collectors,to,collection,linked,hash,set,new
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public Set<String> getAllowedMethods();1489852683;Return declared HTTP methods.;public Set<String> getAllowedMethods() {_			return this.partialMatches.stream()._					flatMap(m -> m.getInfo().getMethodsCondition().getMethods().stream())._					map(requestMethod -> requestMethod.name())._					collect(Collectors.toCollection(LinkedHashSet::new))__		};return,declared,http,methods;public,set,string,get,allowed,methods,return,this,partial,matches,stream,flat,map,m,m,get,info,get,methods,condition,get,methods,stream,map,request,method,request,method,name,collect,collectors,to,collection,linked,hash,set,new
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public List<Set<NameValueExpression<String>>> getParamConditions();1485986572;Return declared "params" conditions but only among those that also_match the "methods", "consumes", and "params" conditions.;public List<Set<NameValueExpression<String>>> getParamConditions() {_			return this.partialMatches.stream().filter(PartialMatch::hasProducesMatch)._					map(match -> match.getInfo().getParamsCondition().getExpressions())._					collect(Collectors.toList())__		};return,declared,params,conditions,but,only,among,those,that,also,match,the,methods,consumes,and,params,conditions;public,list,set,name,value,expression,string,get,param,conditions,return,this,partial,matches,stream,filter,partial,match,has,produces,match,map,match,match,get,info,get,params,condition,get,expressions,collect,collectors,to,list
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public List<Set<NameValueExpression<String>>> getParamConditions();1486635693;Return declared "params" conditions but only among those that also_match the "methods", "consumes", and "params" conditions.;public List<Set<NameValueExpression<String>>> getParamConditions() {_			return this.partialMatches.stream().filter(PartialMatch::hasProducesMatch)._					map(match -> match.getInfo().getParamsCondition().getExpressions())._					collect(Collectors.toList())__		};return,declared,params,conditions,but,only,among,those,that,also,match,the,methods,consumes,and,params,conditions;public,list,set,name,value,expression,string,get,param,conditions,return,this,partial,matches,stream,filter,partial,match,has,produces,match,map,match,match,get,info,get,params,condition,get,expressions,collect,collectors,to,list
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public List<Set<NameValueExpression<String>>> getParamConditions();1486674586;Return declared "params" conditions but only among those that also_match the "methods", "consumes", and "params" conditions.;public List<Set<NameValueExpression<String>>> getParamConditions() {_			return this.partialMatches.stream().filter(PartialMatch::hasProducesMatch)._					map(match -> match.getInfo().getParamsCondition().getExpressions())._					collect(Collectors.toList())__		};return,declared,params,conditions,but,only,among,those,that,also,match,the,methods,consumes,and,params,conditions;public,list,set,name,value,expression,string,get,param,conditions,return,this,partial,matches,stream,filter,partial,match,has,produces,match,map,match,match,get,info,get,params,condition,get,expressions,collect,collectors,to,list
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public List<Set<NameValueExpression<String>>> getParamConditions();1486747801;Return declared "params" conditions but only among those that also_match the "methods", "consumes", and "params" conditions.;public List<Set<NameValueExpression<String>>> getParamConditions() {_			return this.partialMatches.stream().filter(PartialMatch::hasProducesMatch)._					map(match -> match.getInfo().getParamsCondition().getExpressions())._					collect(Collectors.toList())__		};return,declared,params,conditions,but,only,among,those,that,also,match,the,methods,consumes,and,params,conditions;public,list,set,name,value,expression,string,get,param,conditions,return,this,partial,matches,stream,filter,partial,match,has,produces,match,map,match,match,get,info,get,params,condition,get,expressions,collect,collectors,to,list
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public List<Set<NameValueExpression<String>>> getParamConditions();1489852683;Return declared "params" conditions but only among those that also_match the "methods", "consumes", and "params" conditions.;public List<Set<NameValueExpression<String>>> getParamConditions() {_			return this.partialMatches.stream().filter(PartialMatch::hasProducesMatch)._					map(match -> match.getInfo().getParamsCondition().getExpressions())._					collect(Collectors.toList())__		};return,declared,params,conditions,but,only,among,those,that,also,match,the,methods,consumes,and,params,conditions;public,list,set,name,value,expression,string,get,param,conditions,return,this,partial,matches,stream,filter,partial,match,has,produces,match,map,match,match,get,info,get,params,condition,get,expressions,collect,collectors,to,list
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public List<Set<NameValueExpression<String>>> getParamConditions();1490197121;Return declared "params" conditions but only among those that also_match the "methods", "consumes", and "params" conditions.;public List<Set<NameValueExpression<String>>> getParamConditions() {_			return this.partialMatches.stream().filter(PartialMatch::hasProducesMatch)._					map(match -> match.getInfo().getParamsCondition().getExpressions())._					collect(Collectors.toList())__		};return,declared,params,conditions,but,only,among,those,that,also,match,the,methods,consumes,and,params,conditions;public,list,set,name,value,expression,string,get,param,conditions,return,this,partial,matches,stream,filter,partial,match,has,produces,match,map,match,match,get,info,get,params,condition,get,expressions,collect,collectors,to,list
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public List<Set<NameValueExpression<String>>> getParamConditions();1495639183;Return declared "params" conditions but only among those that also_match the "methods", "consumes", and "params" conditions.;public List<Set<NameValueExpression<String>>> getParamConditions() {_			return this.partialMatches.stream().filter(PartialMatch::hasProducesMatch)._					map(match -> match.getInfo().getParamsCondition().getExpressions())._					collect(Collectors.toList())__		};return,declared,params,conditions,but,only,among,those,that,also,match,the,methods,consumes,and,params,conditions;public,list,set,name,value,expression,string,get,param,conditions,return,this,partial,matches,stream,filter,partial,match,has,produces,match,map,match,match,get,info,get,params,condition,get,expressions,collect,collectors,to,list
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public List<Set<NameValueExpression<String>>> getParamConditions();1496334664;Return declared "params" conditions but only among those that also_match the "methods", "consumes", and "params" conditions.;public List<Set<NameValueExpression<String>>> getParamConditions() {_			return this.partialMatches.stream().filter(PartialMatch::hasProducesMatch)._					map(match -> match.getInfo().getParamsCondition().getExpressions())._					collect(Collectors.toList())__		};return,declared,params,conditions,but,only,among,those,that,also,match,the,methods,consumes,and,params,conditions;public,list,set,name,value,expression,string,get,param,conditions,return,this,partial,matches,stream,filter,partial,match,has,produces,match,map,match,match,get,info,get,params,condition,get,expressions,collect,collectors,to,list
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public List<Set<NameValueExpression<String>>> getParamConditions();1496433164;Return declared "params" conditions but only among those that also_match the "methods", "consumes", and "params" conditions.;public List<Set<NameValueExpression<String>>> getParamConditions() {_			return this.partialMatches.stream().filter(PartialMatch::hasProducesMatch)._					map(match -> match.getInfo().getParamsCondition().getExpressions())._					collect(Collectors.toList())__		};return,declared,params,conditions,but,only,among,those,that,also,match,the,methods,consumes,and,params,conditions;public,list,set,name,value,expression,string,get,param,conditions,return,this,partial,matches,stream,filter,partial,match,has,produces,match,map,match,match,get,info,get,params,condition,get,expressions,collect,collectors,to,list
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public List<Set<NameValueExpression<String>>> getParamConditions();1497039338;Return declared "params" conditions but only among those that also_match the "methods", "consumes", and "params" conditions.;public List<Set<NameValueExpression<String>>> getParamConditions() {_			return this.partialMatches.stream().filter(PartialMatch::hasProducesMatch)._					map(match -> match.getInfo().getParamsCondition().getExpressions())._					collect(Collectors.toList())__		};return,declared,params,conditions,but,only,among,those,that,also,match,the,methods,consumes,and,params,conditions;public,list,set,name,value,expression,string,get,param,conditions,return,this,partial,matches,stream,filter,partial,match,has,produces,match,map,match,match,get,info,get,params,condition,get,expressions,collect,collectors,to,list
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public List<Set<NameValueExpression<String>>> getParamConditions();1497039338;Return declared "params" conditions but only among those that also_match the "methods", "consumes", and "params" conditions.;public List<Set<NameValueExpression<String>>> getParamConditions() {_			return this.partialMatches.stream().filter(PartialMatch::hasProducesMatch)._					map(match -> match.getInfo().getParamsCondition().getExpressions())._					collect(Collectors.toList())__		};return,declared,params,conditions,but,only,among,those,that,also,match,the,methods,consumes,and,params,conditions;public,list,set,name,value,expression,string,get,param,conditions,return,this,partial,matches,stream,filter,partial,match,has,produces,match,map,match,match,get,info,get,params,condition,get,expressions,collect,collectors,to,list
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public List<Set<NameValueExpression<String>>> getParamConditions();1497286385;Return declared "params" conditions but only among those that also_match the "methods", "consumes", and "params" conditions.;public List<Set<NameValueExpression<String>>> getParamConditions() {_			return this.partialMatches.stream().filter(PartialMatch::hasProducesMatch)._					map(match -> match.getInfo().getParamsCondition().getExpressions())._					collect(Collectors.toList())__		};return,declared,params,conditions,but,only,among,those,that,also,match,the,methods,consumes,and,params,conditions;public,list,set,name,value,expression,string,get,param,conditions,return,this,partial,matches,stream,filter,partial,match,has,produces,match,map,match,match,get,info,get,params,condition,get,expressions,collect,collectors,to,list
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public List<Set<NameValueExpression<String>>> getParamConditions();1498756719;Return declared "params" conditions but only among those that also_match the "methods", "consumes", and "params" conditions.;public List<Set<NameValueExpression<String>>> getParamConditions() {_			return this.partialMatches.stream().filter(PartialMatch::hasProducesMatch)._					map(match -> match.getInfo().getParamsCondition().getExpressions())._					collect(Collectors.toList())__		};return,declared,params,conditions,but,only,among,those,that,also,match,the,methods,consumes,and,params,conditions;public,list,set,name,value,expression,string,get,param,conditions,return,this,partial,matches,stream,filter,partial,match,has,produces,match,map,match,match,get,info,get,params,condition,get,expressions,collect,collectors,to,list
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public List<Set<NameValueExpression<String>>> getParamConditions();1498861175;Return declared "params" conditions but only among those that also_match the "methods", "consumes", and "params" conditions.;public List<Set<NameValueExpression<String>>> getParamConditions() {_			return this.partialMatches.stream().filter(PartialMatch::hasProducesMatch)._					map(match -> match.getInfo().getParamsCondition().getExpressions())._					collect(Collectors.toList())__		};return,declared,params,conditions,but,only,among,those,that,also,match,the,methods,consumes,and,params,conditions;public,list,set,name,value,expression,string,get,param,conditions,return,this,partial,matches,stream,filter,partial,match,has,produces,match,map,match,match,get,info,get,params,condition,get,expressions,collect,collectors,to,list
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public List<Set<NameValueExpression<String>>> getParamConditions();1498861175;Return declared "params" conditions but only among those that also_match the "methods", "consumes", and "params" conditions.;public List<Set<NameValueExpression<String>>> getParamConditions() {_			return this.partialMatches.stream().filter(PartialMatch::hasProducesMatch)._					map(match -> match.getInfo().getParamsCondition().getExpressions())._					collect(Collectors.toList())__		};return,declared,params,conditions,but,only,among,those,that,also,match,the,methods,consumes,and,params,conditions;public,list,set,name,value,expression,string,get,param,conditions,return,this,partial,matches,stream,filter,partial,match,has,produces,match,map,match,match,get,info,get,params,condition,get,expressions,collect,collectors,to,list
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public List<Set<NameValueExpression<String>>> getParamConditions();1498953917;Return declared "params" conditions but only among those that also_match the "methods", "consumes", and "params" conditions.;public List<Set<NameValueExpression<String>>> getParamConditions() {_			return this.partialMatches.stream().filter(PartialMatch::hasProducesMatch)._					map(match -> match.getInfo().getParamsCondition().getExpressions())._					collect(Collectors.toList())__		};return,declared,params,conditions,but,only,among,those,that,also,match,the,methods,consumes,and,params,conditions;public,list,set,name,value,expression,string,get,param,conditions,return,this,partial,matches,stream,filter,partial,match,has,produces,match,map,match,match,get,info,get,params,condition,get,expressions,collect,collectors,to,list
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public List<Set<NameValueExpression<String>>> getParamConditions();1501237594;Return declared "params" conditions but only among those that also_match the "methods", "consumes", and "params" conditions.;public List<Set<NameValueExpression<String>>> getParamConditions() {_			return this.partialMatches.stream().filter(PartialMatch::hasProducesMatch)._					map(match -> match.getInfo().getParamsCondition().getExpressions())._					collect(Collectors.toList())__		};return,declared,params,conditions,but,only,among,those,that,also,match,the,methods,consumes,and,params,conditions;public,list,set,name,value,expression,string,get,param,conditions,return,this,partial,matches,stream,filter,partial,match,has,produces,match,map,match,match,get,info,get,params,condition,get,expressions,collect,collectors,to,list
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public List<Set<NameValueExpression<String>>> getParamConditions();1501676476;Return declared "params" conditions but only among those that also_match the "methods", "consumes", and "params" conditions.;public List<Set<NameValueExpression<String>>> getParamConditions() {_			return this.partialMatches.stream().filter(PartialMatch::hasProducesMatch)._					map(match -> match.getInfo().getParamsCondition().getExpressions())._					collect(Collectors.toList())__		};return,declared,params,conditions,but,only,among,those,that,also,match,the,methods,consumes,and,params,conditions;public,list,set,name,value,expression,string,get,param,conditions,return,this,partial,matches,stream,filter,partial,match,has,produces,match,map,match,match,get,info,get,params,condition,get,expressions,collect,collectors,to,list
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public List<Set<NameValueExpression<String>>> getParamConditions();1501679128;Return declared "params" conditions but only among those that also_match the "methods", "consumes", and "params" conditions.;public List<Set<NameValueExpression<String>>> getParamConditions() {_			return this.partialMatches.stream().filter(PartialMatch::hasProducesMatch)._					map(match -> match.getInfo().getParamsCondition().getExpressions())._					collect(Collectors.toList())__		};return,declared,params,conditions,but,only,among,those,that,also,match,the,methods,consumes,and,params,conditions;public,list,set,name,value,expression,string,get,param,conditions,return,this,partial,matches,stream,filter,partial,match,has,produces,match,map,match,match,get,info,get,params,condition,get,expressions,collect,collectors,to,list
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public List<Set<NameValueExpression<String>>> getParamConditions();1518987682;Return declared "params" conditions but only among those that also_match the "methods", "consumes", and "params" conditions.;public List<Set<NameValueExpression<String>>> getParamConditions() {_			return this.partialMatches.stream().filter(PartialMatch::hasProducesMatch)._					map(match -> match.getInfo().getParamsCondition().getExpressions())._					collect(Collectors.toList())__		};return,declared,params,conditions,but,only,among,those,that,also,match,the,methods,consumes,and,params,conditions;public,list,set,name,value,expression,string,get,param,conditions,return,this,partial,matches,stream,filter,partial,match,has,produces,match,map,match,match,get,info,get,params,condition,get,expressions,collect,collectors,to,list
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public List<Set<NameValueExpression<String>>> getParamConditions();1526303103;Return declared "params" conditions but only among those that also_match the "methods", "consumes", and "params" conditions.;public List<Set<NameValueExpression<String>>> getParamConditions() {_			return this.partialMatches.stream().filter(PartialMatch::hasProducesMatch)._					map(match -> match.getInfo().getParamsCondition().getExpressions())._					collect(Collectors.toList())__		};return,declared,params,conditions,but,only,among,those,that,also,match,the,methods,consumes,and,params,conditions;public,list,set,name,value,expression,string,get,param,conditions,return,this,partial,matches,stream,filter,partial,match,has,produces,match,map,match,match,get,info,get,params,condition,get,expressions,collect,collectors,to,list
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public List<Set<NameValueExpression<String>>> getParamConditions();1530174524;Return declared "params" conditions but only among those that also_match the "methods", "consumes", and "params" conditions.;public List<Set<NameValueExpression<String>>> getParamConditions() {_			return this.partialMatches.stream().filter(PartialMatch::hasProducesMatch)._					map(match -> match.getInfo().getParamsCondition().getExpressions())._					collect(Collectors.toList())__		};return,declared,params,conditions,but,only,among,those,that,also,match,the,methods,consumes,and,params,conditions;public,list,set,name,value,expression,string,get,param,conditions,return,this,partial,matches,stream,filter,partial,match,has,produces,match,map,match,match,get,info,get,params,condition,get,expressions,collect,collectors,to,list
RequestMappingInfoHandlerMapping -> @Override 	protected void handleMatch(RequestMappingInfo info, LookupPath lookupPath, ServerWebExchange exchange);1496334664;Expose URI template variables, matrix variables, and producible media types in the request._@see HandlerMapping#URI_TEMPLATE_VARIABLES_ATTRIBUTE_@see HandlerMapping#MATRIX_VARIABLES_ATTRIBUTE_@see HandlerMapping#PRODUCIBLE_MEDIA_TYPES_ATTRIBUTE;@Override_	protected void handleMatch(RequestMappingInfo info, LookupPath lookupPath, ServerWebExchange exchange) {_		super.handleMatch(info, lookupPath, exchange)___		String bestPattern__		Map<String, String> uriVariables__		Map<String, String> decodedUriVariables___		Set<String> patterns = info.getPatternsCondition().getPatterns()__		if (patterns.isEmpty()) {_			bestPattern = lookupPath.getPath()__			uriVariables = Collections.emptyMap()__			decodedUriVariables = Collections.emptyMap()__		}_		else {_			bestPattern = patterns.iterator().next()__			uriVariables = getPathMatcher().extractUriTemplateVariables(bestPattern, lookupPath.getPath())__			decodedUriVariables = getPathHelper().decodePathVariables(exchange, uriVariables)__		}__		exchange.getAttributes().put(BEST_MATCHING_PATTERN_ATTRIBUTE, bestPattern)__		exchange.getAttributes().put(URI_TEMPLATE_VARIABLES_ATTRIBUTE, decodedUriVariables)___		Map<String, MultiValueMap<String, String>> matrixVars = extractMatrixVariables(exchange, uriVariables)__		exchange.getAttributes().put(MATRIX_VARIABLES_ATTRIBUTE, matrixVars)___		if (!info.getProducesCondition().getProducibleMediaTypes().isEmpty()) {_			Set<MediaType> mediaTypes = info.getProducesCondition().getProducibleMediaTypes()__			exchange.getAttributes().put(PRODUCIBLE_MEDIA_TYPES_ATTRIBUTE, mediaTypes)__		}_	};expose,uri,template,variables,matrix,variables,and,producible,media,types,in,the,request,see,handler,mapping,see,handler,mapping,see,handler,mapping;override,protected,void,handle,match,request,mapping,info,info,lookup,path,lookup,path,server,web,exchange,exchange,super,handle,match,info,lookup,path,exchange,string,best,pattern,map,string,string,uri,variables,map,string,string,decoded,uri,variables,set,string,patterns,info,get,patterns,condition,get,patterns,if,patterns,is,empty,best,pattern,lookup,path,get,path,uri,variables,collections,empty,map,decoded,uri,variables,collections,empty,map,else,best,pattern,patterns,iterator,next,uri,variables,get,path,matcher,extract,uri,template,variables,best,pattern,lookup,path,get,path,decoded,uri,variables,get,path,helper,decode,path,variables,exchange,uri,variables,exchange,get,attributes,put,best,pattern,exchange,get,attributes,put,decoded,uri,variables,map,string,multi,value,map,string,string,matrix,vars,extract,matrix,variables,exchange,uri,variables,exchange,get,attributes,put,matrix,vars,if,info,get,produces,condition,get,producible,media,types,is,empty,set,media,type,media,types,info,get,produces,condition,get,producible,media,types,exchange,get,attributes,put,media,types
RequestMappingInfoHandlerMapping -> @Override 	protected void handleMatch(RequestMappingInfo info, LookupPath lookupPath, ServerWebExchange exchange);1496433164;Expose URI template variables, matrix variables, and producible media types in the request._@see HandlerMapping#URI_TEMPLATE_VARIABLES_ATTRIBUTE_@see HandlerMapping#MATRIX_VARIABLES_ATTRIBUTE_@see HandlerMapping#PRODUCIBLE_MEDIA_TYPES_ATTRIBUTE;@Override_	protected void handleMatch(RequestMappingInfo info, LookupPath lookupPath, ServerWebExchange exchange) {_		super.handleMatch(info, lookupPath, exchange)___		String bestPattern__		Map<String, String> uriVariables__		Map<String, String> decodedUriVariables___		Set<String> patterns = info.getPatternsCondition().getPatterns()__		if (patterns.isEmpty()) {_			bestPattern = lookupPath.getPath()__			uriVariables = Collections.emptyMap()__			decodedUriVariables = Collections.emptyMap()__		}_		else {_			bestPattern = patterns.iterator().next()__			uriVariables = getPathMatcher().extractUriTemplateVariables(bestPattern, lookupPath.getPath())__			decodedUriVariables = getPathHelper().decodePathVariables(exchange, uriVariables)__		}__		exchange.getAttributes().put(BEST_MATCHING_PATTERN_ATTRIBUTE, bestPattern)__		exchange.getAttributes().put(URI_TEMPLATE_VARIABLES_ATTRIBUTE, decodedUriVariables)___		Map<String, MultiValueMap<String, String>> matrixVars = extractMatrixVariables(exchange, uriVariables)__		exchange.getAttributes().put(MATRIX_VARIABLES_ATTRIBUTE, matrixVars)___		if (!info.getProducesCondition().getProducibleMediaTypes().isEmpty()) {_			Set<MediaType> mediaTypes = info.getProducesCondition().getProducibleMediaTypes()__			exchange.getAttributes().put(PRODUCIBLE_MEDIA_TYPES_ATTRIBUTE, mediaTypes)__		}_	};expose,uri,template,variables,matrix,variables,and,producible,media,types,in,the,request,see,handler,mapping,see,handler,mapping,see,handler,mapping;override,protected,void,handle,match,request,mapping,info,info,lookup,path,lookup,path,server,web,exchange,exchange,super,handle,match,info,lookup,path,exchange,string,best,pattern,map,string,string,uri,variables,map,string,string,decoded,uri,variables,set,string,patterns,info,get,patterns,condition,get,patterns,if,patterns,is,empty,best,pattern,lookup,path,get,path,uri,variables,collections,empty,map,decoded,uri,variables,collections,empty,map,else,best,pattern,patterns,iterator,next,uri,variables,get,path,matcher,extract,uri,template,variables,best,pattern,lookup,path,get,path,decoded,uri,variables,get,path,helper,decode,path,variables,exchange,uri,variables,exchange,get,attributes,put,best,pattern,exchange,get,attributes,put,decoded,uri,variables,map,string,multi,value,map,string,string,matrix,vars,extract,matrix,variables,exchange,uri,variables,exchange,get,attributes,put,matrix,vars,if,info,get,produces,condition,get,producible,media,types,is,empty,set,media,type,media,types,info,get,produces,condition,get,producible,media,types,exchange,get,attributes,put,media,types
RequestMappingInfoHandlerMapping -> @Override 	protected void handleMatch(RequestMappingInfo info, String lookupPath, ServerWebExchange exchange);1485986572;Expose URI template variables, matrix variables, and producible media types in the request._@see HandlerMapping#URI_TEMPLATE_VARIABLES_ATTRIBUTE_@see HandlerMapping#MATRIX_VARIABLES_ATTRIBUTE_@see HandlerMapping#PRODUCIBLE_MEDIA_TYPES_ATTRIBUTE;@Override_	protected void handleMatch(RequestMappingInfo info, String lookupPath, ServerWebExchange exchange) {_		super.handleMatch(info, lookupPath, exchange)___		String bestPattern__		Map<String, String> uriVariables__		Map<String, String> decodedUriVariables___		Set<String> patterns = info.getPatternsCondition().getPatterns()__		if (patterns.isEmpty()) {_			bestPattern = lookupPath__			uriVariables = Collections.emptyMap()__			decodedUriVariables = Collections.emptyMap()__		}_		else {_			bestPattern = patterns.iterator().next()__			uriVariables = getPathMatcher().extractUriTemplateVariables(bestPattern, lookupPath)__			decodedUriVariables = getPathHelper().decodePathVariables(exchange, uriVariables)__		}__		exchange.getAttributes().put(BEST_MATCHING_PATTERN_ATTRIBUTE, bestPattern)__		exchange.getAttributes().put(URI_TEMPLATE_VARIABLES_ATTRIBUTE, decodedUriVariables)___		Map<String, MultiValueMap<String, String>> matrixVars = extractMatrixVariables(exchange, uriVariables)__		exchange.getAttributes().put(MATRIX_VARIABLES_ATTRIBUTE, matrixVars)___		if (!info.getProducesCondition().getProducibleMediaTypes().isEmpty()) {_			Set<MediaType> mediaTypes = info.getProducesCondition().getProducibleMediaTypes()__			exchange.getAttributes().put(PRODUCIBLE_MEDIA_TYPES_ATTRIBUTE, mediaTypes)__		}_	};expose,uri,template,variables,matrix,variables,and,producible,media,types,in,the,request,see,handler,mapping,see,handler,mapping,see,handler,mapping;override,protected,void,handle,match,request,mapping,info,info,string,lookup,path,server,web,exchange,exchange,super,handle,match,info,lookup,path,exchange,string,best,pattern,map,string,string,uri,variables,map,string,string,decoded,uri,variables,set,string,patterns,info,get,patterns,condition,get,patterns,if,patterns,is,empty,best,pattern,lookup,path,uri,variables,collections,empty,map,decoded,uri,variables,collections,empty,map,else,best,pattern,patterns,iterator,next,uri,variables,get,path,matcher,extract,uri,template,variables,best,pattern,lookup,path,decoded,uri,variables,get,path,helper,decode,path,variables,exchange,uri,variables,exchange,get,attributes,put,best,pattern,exchange,get,attributes,put,decoded,uri,variables,map,string,multi,value,map,string,string,matrix,vars,extract,matrix,variables,exchange,uri,variables,exchange,get,attributes,put,matrix,vars,if,info,get,produces,condition,get,producible,media,types,is,empty,set,media,type,media,types,info,get,produces,condition,get,producible,media,types,exchange,get,attributes,put,media,types
RequestMappingInfoHandlerMapping -> @Override 	protected void handleMatch(RequestMappingInfo info, String lookupPath, ServerWebExchange exchange);1486635693;Expose URI template variables, matrix variables, and producible media types in the request._@see HandlerMapping#URI_TEMPLATE_VARIABLES_ATTRIBUTE_@see HandlerMapping#MATRIX_VARIABLES_ATTRIBUTE_@see HandlerMapping#PRODUCIBLE_MEDIA_TYPES_ATTRIBUTE;@Override_	protected void handleMatch(RequestMappingInfo info, String lookupPath, ServerWebExchange exchange) {_		super.handleMatch(info, lookupPath, exchange)___		Map<String, String> uriVariables__		Map<String, String> decodedUriVariables___		SortedSet<PathPattern> patterns = info.getPatternsCondition().getMatchingPatterns(lookupPath)__		if (patterns.isEmpty()) {_			uriVariables = Collections.emptyMap()__			decodedUriVariables = Collections.emptyMap()__			exchange.getAttributes().put(BEST_MATCHING_PATTERN_ATTRIBUTE,_					getPatternRegistry().parsePattern(lookupPath))__		}_		else {_			PathPattern bestPattern = patterns.first()__			uriVariables = bestPattern.matchAndExtract(lookupPath)__			decodedUriVariables = getPathHelper().decodePathVariables(exchange, uriVariables)__			exchange.getAttributes().put(BEST_MATCHING_PATTERN_ATTRIBUTE, bestPattern)__		}_		exchange.getAttributes().put(URI_TEMPLATE_VARIABLES_ATTRIBUTE, decodedUriVariables)___		Map<String, MultiValueMap<String, String>> matrixVars = extractMatrixVariables(exchange, uriVariables)__		exchange.getAttributes().put(MATRIX_VARIABLES_ATTRIBUTE, matrixVars)___		if (!info.getProducesCondition().getProducibleMediaTypes().isEmpty()) {_			Set<MediaType> mediaTypes = info.getProducesCondition().getProducibleMediaTypes()__			exchange.getAttributes().put(PRODUCIBLE_MEDIA_TYPES_ATTRIBUTE, mediaTypes)__		}_	};expose,uri,template,variables,matrix,variables,and,producible,media,types,in,the,request,see,handler,mapping,see,handler,mapping,see,handler,mapping;override,protected,void,handle,match,request,mapping,info,info,string,lookup,path,server,web,exchange,exchange,super,handle,match,info,lookup,path,exchange,map,string,string,uri,variables,map,string,string,decoded,uri,variables,sorted,set,path,pattern,patterns,info,get,patterns,condition,get,matching,patterns,lookup,path,if,patterns,is,empty,uri,variables,collections,empty,map,decoded,uri,variables,collections,empty,map,exchange,get,attributes,put,get,pattern,registry,parse,pattern,lookup,path,else,path,pattern,best,pattern,patterns,first,uri,variables,best,pattern,match,and,extract,lookup,path,decoded,uri,variables,get,path,helper,decode,path,variables,exchange,uri,variables,exchange,get,attributes,put,best,pattern,exchange,get,attributes,put,decoded,uri,variables,map,string,multi,value,map,string,string,matrix,vars,extract,matrix,variables,exchange,uri,variables,exchange,get,attributes,put,matrix,vars,if,info,get,produces,condition,get,producible,media,types,is,empty,set,media,type,media,types,info,get,produces,condition,get,producible,media,types,exchange,get,attributes,put,media,types
RequestMappingInfoHandlerMapping -> @Override 	protected void handleMatch(RequestMappingInfo info, String lookupPath, ServerWebExchange exchange);1486674586;Expose URI template variables, matrix variables, and producible media types in the request._@see HandlerMapping#URI_TEMPLATE_VARIABLES_ATTRIBUTE_@see HandlerMapping#MATRIX_VARIABLES_ATTRIBUTE_@see HandlerMapping#PRODUCIBLE_MEDIA_TYPES_ATTRIBUTE;@Override_	protected void handleMatch(RequestMappingInfo info, String lookupPath, ServerWebExchange exchange) {_		super.handleMatch(info, lookupPath, exchange)___		Map<String, String> uriVariables__		Map<String, String> decodedUriVariables___		SortedSet<PathPattern> patterns = info.getPatternsCondition().getMatchingPatterns(lookupPath)__		if (patterns.isEmpty()) {_			uriVariables = Collections.emptyMap()__			decodedUriVariables = Collections.emptyMap()__			exchange.getAttributes().put(BEST_MATCHING_PATTERN_ATTRIBUTE,_					getPatternRegistry().parsePattern(lookupPath))__		}_		else {_			PathPattern bestPattern = patterns.first()__			uriVariables = bestPattern.matchAndExtract(lookupPath)__			decodedUriVariables = getPathHelper().decodePathVariables(exchange, uriVariables)__			exchange.getAttributes().put(BEST_MATCHING_PATTERN_ATTRIBUTE, bestPattern)__		}_		exchange.getAttributes().put(URI_TEMPLATE_VARIABLES_ATTRIBUTE, decodedUriVariables)___		Map<String, MultiValueMap<String, String>> matrixVars = extractMatrixVariables(exchange, uriVariables)__		exchange.getAttributes().put(MATRIX_VARIABLES_ATTRIBUTE, matrixVars)___		if (!info.getProducesCondition().getProducibleMediaTypes().isEmpty()) {_			Set<MediaType> mediaTypes = info.getProducesCondition().getProducibleMediaTypes()__			exchange.getAttributes().put(PRODUCIBLE_MEDIA_TYPES_ATTRIBUTE, mediaTypes)__		}_	};expose,uri,template,variables,matrix,variables,and,producible,media,types,in,the,request,see,handler,mapping,see,handler,mapping,see,handler,mapping;override,protected,void,handle,match,request,mapping,info,info,string,lookup,path,server,web,exchange,exchange,super,handle,match,info,lookup,path,exchange,map,string,string,uri,variables,map,string,string,decoded,uri,variables,sorted,set,path,pattern,patterns,info,get,patterns,condition,get,matching,patterns,lookup,path,if,patterns,is,empty,uri,variables,collections,empty,map,decoded,uri,variables,collections,empty,map,exchange,get,attributes,put,get,pattern,registry,parse,pattern,lookup,path,else,path,pattern,best,pattern,patterns,first,uri,variables,best,pattern,match,and,extract,lookup,path,decoded,uri,variables,get,path,helper,decode,path,variables,exchange,uri,variables,exchange,get,attributes,put,best,pattern,exchange,get,attributes,put,decoded,uri,variables,map,string,multi,value,map,string,string,matrix,vars,extract,matrix,variables,exchange,uri,variables,exchange,get,attributes,put,matrix,vars,if,info,get,produces,condition,get,producible,media,types,is,empty,set,media,type,media,types,info,get,produces,condition,get,producible,media,types,exchange,get,attributes,put,media,types
RequestMappingInfoHandlerMapping -> @Override 	protected void handleMatch(RequestMappingInfo info, String lookupPath, ServerWebExchange exchange);1486747801;Expose URI template variables, matrix variables, and producible media types in the request._@see HandlerMapping#URI_TEMPLATE_VARIABLES_ATTRIBUTE_@see HandlerMapping#MATRIX_VARIABLES_ATTRIBUTE_@see HandlerMapping#PRODUCIBLE_MEDIA_TYPES_ATTRIBUTE;@Override_	protected void handleMatch(RequestMappingInfo info, String lookupPath, ServerWebExchange exchange) {_		super.handleMatch(info, lookupPath, exchange)___		String bestPattern__		Map<String, String> uriVariables__		Map<String, String> decodedUriVariables___		Set<String> patterns = info.getPatternsCondition().getPatterns()__		if (patterns.isEmpty()) {_			bestPattern = lookupPath__			uriVariables = Collections.emptyMap()__			decodedUriVariables = Collections.emptyMap()__		}_		else {_			bestPattern = patterns.iterator().next()__			uriVariables = getPathMatcher().extractUriTemplateVariables(bestPattern, lookupPath)__			decodedUriVariables = getPathHelper().decodePathVariables(exchange, uriVariables)__		}__		exchange.getAttributes().put(BEST_MATCHING_PATTERN_ATTRIBUTE, bestPattern)__		exchange.getAttributes().put(URI_TEMPLATE_VARIABLES_ATTRIBUTE, decodedUriVariables)___		Map<String, MultiValueMap<String, String>> matrixVars = extractMatrixVariables(exchange, uriVariables)__		exchange.getAttributes().put(MATRIX_VARIABLES_ATTRIBUTE, matrixVars)___		if (!info.getProducesCondition().getProducibleMediaTypes().isEmpty()) {_			Set<MediaType> mediaTypes = info.getProducesCondition().getProducibleMediaTypes()__			exchange.getAttributes().put(PRODUCIBLE_MEDIA_TYPES_ATTRIBUTE, mediaTypes)__		}_	};expose,uri,template,variables,matrix,variables,and,producible,media,types,in,the,request,see,handler,mapping,see,handler,mapping,see,handler,mapping;override,protected,void,handle,match,request,mapping,info,info,string,lookup,path,server,web,exchange,exchange,super,handle,match,info,lookup,path,exchange,string,best,pattern,map,string,string,uri,variables,map,string,string,decoded,uri,variables,set,string,patterns,info,get,patterns,condition,get,patterns,if,patterns,is,empty,best,pattern,lookup,path,uri,variables,collections,empty,map,decoded,uri,variables,collections,empty,map,else,best,pattern,patterns,iterator,next,uri,variables,get,path,matcher,extract,uri,template,variables,best,pattern,lookup,path,decoded,uri,variables,get,path,helper,decode,path,variables,exchange,uri,variables,exchange,get,attributes,put,best,pattern,exchange,get,attributes,put,decoded,uri,variables,map,string,multi,value,map,string,string,matrix,vars,extract,matrix,variables,exchange,uri,variables,exchange,get,attributes,put,matrix,vars,if,info,get,produces,condition,get,producible,media,types,is,empty,set,media,type,media,types,info,get,produces,condition,get,producible,media,types,exchange,get,attributes,put,media,types
RequestMappingInfoHandlerMapping -> @Override 	protected void handleMatch(RequestMappingInfo info, String lookupPath, ServerWebExchange exchange);1489852683;Expose URI template variables, matrix variables, and producible media types in the request._@see HandlerMapping#URI_TEMPLATE_VARIABLES_ATTRIBUTE_@see HandlerMapping#MATRIX_VARIABLES_ATTRIBUTE_@see HandlerMapping#PRODUCIBLE_MEDIA_TYPES_ATTRIBUTE;@Override_	protected void handleMatch(RequestMappingInfo info, String lookupPath, ServerWebExchange exchange) {_		super.handleMatch(info, lookupPath, exchange)___		String bestPattern__		Map<String, String> uriVariables__		Map<String, String> decodedUriVariables___		Set<String> patterns = info.getPatternsCondition().getPatterns()__		if (patterns.isEmpty()) {_			bestPattern = lookupPath__			uriVariables = Collections.emptyMap()__			decodedUriVariables = Collections.emptyMap()__		}_		else {_			bestPattern = patterns.iterator().next()__			uriVariables = getPathMatcher().extractUriTemplateVariables(bestPattern, lookupPath)__			decodedUriVariables = getPathHelper().decodePathVariables(exchange, uriVariables)__		}__		exchange.getAttributes().put(BEST_MATCHING_PATTERN_ATTRIBUTE, bestPattern)__		exchange.getAttributes().put(URI_TEMPLATE_VARIABLES_ATTRIBUTE, decodedUriVariables)___		Map<String, MultiValueMap<String, String>> matrixVars = extractMatrixVariables(exchange, uriVariables)__		exchange.getAttributes().put(MATRIX_VARIABLES_ATTRIBUTE, matrixVars)___		if (!info.getProducesCondition().getProducibleMediaTypes().isEmpty()) {_			Set<MediaType> mediaTypes = info.getProducesCondition().getProducibleMediaTypes()__			exchange.getAttributes().put(PRODUCIBLE_MEDIA_TYPES_ATTRIBUTE, mediaTypes)__		}_	};expose,uri,template,variables,matrix,variables,and,producible,media,types,in,the,request,see,handler,mapping,see,handler,mapping,see,handler,mapping;override,protected,void,handle,match,request,mapping,info,info,string,lookup,path,server,web,exchange,exchange,super,handle,match,info,lookup,path,exchange,string,best,pattern,map,string,string,uri,variables,map,string,string,decoded,uri,variables,set,string,patterns,info,get,patterns,condition,get,patterns,if,patterns,is,empty,best,pattern,lookup,path,uri,variables,collections,empty,map,decoded,uri,variables,collections,empty,map,else,best,pattern,patterns,iterator,next,uri,variables,get,path,matcher,extract,uri,template,variables,best,pattern,lookup,path,decoded,uri,variables,get,path,helper,decode,path,variables,exchange,uri,variables,exchange,get,attributes,put,best,pattern,exchange,get,attributes,put,decoded,uri,variables,map,string,multi,value,map,string,string,matrix,vars,extract,matrix,variables,exchange,uri,variables,exchange,get,attributes,put,matrix,vars,if,info,get,produces,condition,get,producible,media,types,is,empty,set,media,type,media,types,info,get,produces,condition,get,producible,media,types,exchange,get,attributes,put,media,types
RequestMappingInfoHandlerMapping -> @Override 	protected void handleMatch(RequestMappingInfo info, String lookupPath, ServerWebExchange exchange);1490197121;Expose URI template variables, matrix variables, and producible media types in the request._@see HandlerMapping#URI_TEMPLATE_VARIABLES_ATTRIBUTE_@see HandlerMapping#MATRIX_VARIABLES_ATTRIBUTE_@see HandlerMapping#PRODUCIBLE_MEDIA_TYPES_ATTRIBUTE;@Override_	protected void handleMatch(RequestMappingInfo info, String lookupPath, ServerWebExchange exchange) {_		super.handleMatch(info, lookupPath, exchange)___		String bestPattern__		Map<String, String> uriVariables__		Map<String, String> decodedUriVariables___		Set<String> patterns = info.getPatternsCondition().getPatterns()__		if (patterns.isEmpty()) {_			bestPattern = lookupPath__			uriVariables = Collections.emptyMap()__			decodedUriVariables = Collections.emptyMap()__		}_		else {_			bestPattern = patterns.iterator().next()__			uriVariables = getPathMatcher().extractUriTemplateVariables(bestPattern, lookupPath)__			decodedUriVariables = getPathHelper().decodePathVariables(exchange, uriVariables)__		}__		exchange.getAttributes().put(BEST_MATCHING_PATTERN_ATTRIBUTE, bestPattern)__		exchange.getAttributes().put(URI_TEMPLATE_VARIABLES_ATTRIBUTE, decodedUriVariables)___		Map<String, MultiValueMap<String, String>> matrixVars = extractMatrixVariables(exchange, uriVariables)__		exchange.getAttributes().put(MATRIX_VARIABLES_ATTRIBUTE, matrixVars)___		if (!info.getProducesCondition().getProducibleMediaTypes().isEmpty()) {_			Set<MediaType> mediaTypes = info.getProducesCondition().getProducibleMediaTypes()__			exchange.getAttributes().put(PRODUCIBLE_MEDIA_TYPES_ATTRIBUTE, mediaTypes)__		}_	};expose,uri,template,variables,matrix,variables,and,producible,media,types,in,the,request,see,handler,mapping,see,handler,mapping,see,handler,mapping;override,protected,void,handle,match,request,mapping,info,info,string,lookup,path,server,web,exchange,exchange,super,handle,match,info,lookup,path,exchange,string,best,pattern,map,string,string,uri,variables,map,string,string,decoded,uri,variables,set,string,patterns,info,get,patterns,condition,get,patterns,if,patterns,is,empty,best,pattern,lookup,path,uri,variables,collections,empty,map,decoded,uri,variables,collections,empty,map,else,best,pattern,patterns,iterator,next,uri,variables,get,path,matcher,extract,uri,template,variables,best,pattern,lookup,path,decoded,uri,variables,get,path,helper,decode,path,variables,exchange,uri,variables,exchange,get,attributes,put,best,pattern,exchange,get,attributes,put,decoded,uri,variables,map,string,multi,value,map,string,string,matrix,vars,extract,matrix,variables,exchange,uri,variables,exchange,get,attributes,put,matrix,vars,if,info,get,produces,condition,get,producible,media,types,is,empty,set,media,type,media,types,info,get,produces,condition,get,producible,media,types,exchange,get,attributes,put,media,types
RequestMappingInfoHandlerMapping -> @Override 	protected void handleMatch(RequestMappingInfo info, String lookupPath, ServerWebExchange exchange);1495639183;Expose URI template variables, matrix variables, and producible media types in the request._@see HandlerMapping#URI_TEMPLATE_VARIABLES_ATTRIBUTE_@see HandlerMapping#MATRIX_VARIABLES_ATTRIBUTE_@see HandlerMapping#PRODUCIBLE_MEDIA_TYPES_ATTRIBUTE;@Override_	protected void handleMatch(RequestMappingInfo info, String lookupPath, ServerWebExchange exchange) {_		super.handleMatch(info, lookupPath, exchange)___		String bestPattern__		Map<String, String> uriVariables__		Map<String, String> decodedUriVariables___		Set<String> patterns = info.getPatternsCondition().getPatterns()__		if (patterns.isEmpty()) {_			bestPattern = lookupPath__			uriVariables = Collections.emptyMap()__			decodedUriVariables = Collections.emptyMap()__		}_		else {_			bestPattern = patterns.iterator().next()__			uriVariables = getPathMatcher().extractUriTemplateVariables(bestPattern, lookupPath)__			decodedUriVariables = getPathHelper().decodePathVariables(exchange, uriVariables)__		}__		exchange.getAttributes().put(BEST_MATCHING_PATTERN_ATTRIBUTE, bestPattern)__		exchange.getAttributes().put(URI_TEMPLATE_VARIABLES_ATTRIBUTE, decodedUriVariables)___		Map<String, MultiValueMap<String, String>> matrixVars = extractMatrixVariables(exchange, uriVariables)__		exchange.getAttributes().put(MATRIX_VARIABLES_ATTRIBUTE, matrixVars)___		if (!info.getProducesCondition().getProducibleMediaTypes().isEmpty()) {_			Set<MediaType> mediaTypes = info.getProducesCondition().getProducibleMediaTypes()__			exchange.getAttributes().put(PRODUCIBLE_MEDIA_TYPES_ATTRIBUTE, mediaTypes)__		}_	};expose,uri,template,variables,matrix,variables,and,producible,media,types,in,the,request,see,handler,mapping,see,handler,mapping,see,handler,mapping;override,protected,void,handle,match,request,mapping,info,info,string,lookup,path,server,web,exchange,exchange,super,handle,match,info,lookup,path,exchange,string,best,pattern,map,string,string,uri,variables,map,string,string,decoded,uri,variables,set,string,patterns,info,get,patterns,condition,get,patterns,if,patterns,is,empty,best,pattern,lookup,path,uri,variables,collections,empty,map,decoded,uri,variables,collections,empty,map,else,best,pattern,patterns,iterator,next,uri,variables,get,path,matcher,extract,uri,template,variables,best,pattern,lookup,path,decoded,uri,variables,get,path,helper,decode,path,variables,exchange,uri,variables,exchange,get,attributes,put,best,pattern,exchange,get,attributes,put,decoded,uri,variables,map,string,multi,value,map,string,string,matrix,vars,extract,matrix,variables,exchange,uri,variables,exchange,get,attributes,put,matrix,vars,if,info,get,produces,condition,get,producible,media,types,is,empty,set,media,type,media,types,info,get,produces,condition,get,producible,media,types,exchange,get,attributes,put,media,types
RequestMappingInfoHandlerMapping -> @Override 	protected void handleMatch(RequestMappingInfo info, String lookupPath, ServerWebExchange exchange);1497039338;Expose URI template variables, matrix variables, and producible media types in the request._@see HandlerMapping#URI_TEMPLATE_VARIABLES_ATTRIBUTE_@see HandlerMapping#MATRIX_VARIABLES_ATTRIBUTE_@see HandlerMapping#PRODUCIBLE_MEDIA_TYPES_ATTRIBUTE;@Override_	protected void handleMatch(RequestMappingInfo info, String lookupPath, ServerWebExchange exchange) {_		super.handleMatch(info, lookupPath, exchange)___		String bestPattern__		Map<String, String> uriVariables___		Set<String> patterns = info.getPatternsCondition().getPatterns()__		if (patterns.isEmpty()) {_			bestPattern = lookupPath__			uriVariables = Collections.emptyMap()__		}_		else {_			bestPattern = patterns.iterator().next()__			uriVariables = getPathMatcher().extractUriTemplateVariables(bestPattern, lookupPath)__		}__		_		Map<String, MultiValueMap<String, String>> matrixVars = extractMatrixVariables(exchange, uriVariables)__		exchange.getAttributes().put(MATRIX_VARIABLES_ATTRIBUTE, matrixVars)___		_		if (!uriVariables.isEmpty()) {_			uriVariables = getPathHelper().decodePathVariables(exchange, uriVariables)__		}__		exchange.getAttributes().put(BEST_MATCHING_PATTERN_ATTRIBUTE, bestPattern)__		exchange.getAttributes().put(URI_TEMPLATE_VARIABLES_ATTRIBUTE, uriVariables)___		if (!info.getProducesCondition().getProducibleMediaTypes().isEmpty()) {_			Set<MediaType> mediaTypes = info.getProducesCondition().getProducibleMediaTypes()__			exchange.getAttributes().put(PRODUCIBLE_MEDIA_TYPES_ATTRIBUTE, mediaTypes)__		}_	};expose,uri,template,variables,matrix,variables,and,producible,media,types,in,the,request,see,handler,mapping,see,handler,mapping,see,handler,mapping;override,protected,void,handle,match,request,mapping,info,info,string,lookup,path,server,web,exchange,exchange,super,handle,match,info,lookup,path,exchange,string,best,pattern,map,string,string,uri,variables,set,string,patterns,info,get,patterns,condition,get,patterns,if,patterns,is,empty,best,pattern,lookup,path,uri,variables,collections,empty,map,else,best,pattern,patterns,iterator,next,uri,variables,get,path,matcher,extract,uri,template,variables,best,pattern,lookup,path,map,string,multi,value,map,string,string,matrix,vars,extract,matrix,variables,exchange,uri,variables,exchange,get,attributes,put,matrix,vars,if,uri,variables,is,empty,uri,variables,get,path,helper,decode,path,variables,exchange,uri,variables,exchange,get,attributes,put,best,pattern,exchange,get,attributes,put,uri,variables,if,info,get,produces,condition,get,producible,media,types,is,empty,set,media,type,media,types,info,get,produces,condition,get,producible,media,types,exchange,get,attributes,put,media,types
RequestMappingInfoHandlerMapping -> @Override 	protected void handleMatch(RequestMappingInfo info, String lookupPath, ServerWebExchange exchange);1497039338;Expose URI template variables, matrix variables, and producible media types in the request._@see HandlerMapping#URI_TEMPLATE_VARIABLES_ATTRIBUTE_@see HandlerMapping#MATRIX_VARIABLES_ATTRIBUTE_@see HandlerMapping#PRODUCIBLE_MEDIA_TYPES_ATTRIBUTE;@Override_	protected void handleMatch(RequestMappingInfo info, String lookupPath, ServerWebExchange exchange) {_		super.handleMatch(info, lookupPath, exchange)___		String bestPattern__		Map<String, String> uriVariables___		Set<String> patterns = info.getPatternsCondition().getPatterns()__		if (patterns.isEmpty()) {_			bestPattern = lookupPath__			uriVariables = Collections.emptyMap()__		}_		else {_			bestPattern = patterns.iterator().next()__			uriVariables = getPathMatcher().extractUriTemplateVariables(bestPattern, lookupPath)__		}__		_		Map<String, MultiValueMap<String, String>> matrixVars = extractMatrixVariables(exchange, uriVariables)__		exchange.getAttributes().put(MATRIX_VARIABLES_ATTRIBUTE, matrixVars)___		_		if (!uriVariables.isEmpty()) {_			uriVariables = uriVariables.entrySet().stream().collect(Collectors.toMap(_					Entry::getKey, e -> StringUtils.uriDecode(e.getValue(), StandardCharsets.UTF_8)_			))__		}__		exchange.getAttributes().put(BEST_MATCHING_PATTERN_ATTRIBUTE, bestPattern)__		exchange.getAttributes().put(URI_TEMPLATE_VARIABLES_ATTRIBUTE, uriVariables)___		if (!info.getProducesCondition().getProducibleMediaTypes().isEmpty()) {_			Set<MediaType> mediaTypes = info.getProducesCondition().getProducibleMediaTypes()__			exchange.getAttributes().put(PRODUCIBLE_MEDIA_TYPES_ATTRIBUTE, mediaTypes)__		}_	};expose,uri,template,variables,matrix,variables,and,producible,media,types,in,the,request,see,handler,mapping,see,handler,mapping,see,handler,mapping;override,protected,void,handle,match,request,mapping,info,info,string,lookup,path,server,web,exchange,exchange,super,handle,match,info,lookup,path,exchange,string,best,pattern,map,string,string,uri,variables,set,string,patterns,info,get,patterns,condition,get,patterns,if,patterns,is,empty,best,pattern,lookup,path,uri,variables,collections,empty,map,else,best,pattern,patterns,iterator,next,uri,variables,get,path,matcher,extract,uri,template,variables,best,pattern,lookup,path,map,string,multi,value,map,string,string,matrix,vars,extract,matrix,variables,exchange,uri,variables,exchange,get,attributes,put,matrix,vars,if,uri,variables,is,empty,uri,variables,uri,variables,entry,set,stream,collect,collectors,to,map,entry,get,key,e,string,utils,uri,decode,e,get,value,standard,charsets,exchange,get,attributes,put,best,pattern,exchange,get,attributes,put,uri,variables,if,info,get,produces,condition,get,producible,media,types,is,empty,set,media,type,media,types,info,get,produces,condition,get,producible,media,types,exchange,get,attributes,put,media,types
RequestMappingInfoHandlerMapping -> @Override 	protected void handleMatch(RequestMappingInfo info, String lookupPath, ServerWebExchange exchange);1497286385;Expose URI template variables, matrix variables, and producible media types in the request._@see HandlerMapping#URI_TEMPLATE_VARIABLES_ATTRIBUTE_@see HandlerMapping#MATRIX_VARIABLES_ATTRIBUTE_@see HandlerMapping#PRODUCIBLE_MEDIA_TYPES_ATTRIBUTE;@Override_	protected void handleMatch(RequestMappingInfo info, String lookupPath, ServerWebExchange exchange) {_		super.handleMatch(info, lookupPath, exchange)___		PathPattern bestPattern__		Map<String, String> uriVariables___		Set<PathPattern> patterns = info.getPatternsCondition().getPatterns()__		if (patterns.isEmpty()) {_			bestPattern = getPathPatternParser().parse(lookupPath)__			uriVariables = Collections.emptyMap()__		}_		else {_			bestPattern = patterns.iterator().next()__			uriVariables = bestPattern.matchAndExtract(lookupPath)__		}__		_		Map<String, MultiValueMap<String, String>> matrixVars = extractMatrixVariables(exchange, uriVariables)__		exchange.getAttributes().put(MATRIX_VARIABLES_ATTRIBUTE, matrixVars)___		_		if (!uriVariables.isEmpty()) {_			uriVariables = uriVariables.entrySet().stream().collect(Collectors.toMap(_					Entry::getKey, e -> StringUtils.uriDecode(e.getValue(), StandardCharsets.UTF_8)_			))__		}__		exchange.getAttributes().put(BEST_MATCHING_PATTERN_ATTRIBUTE, bestPattern)__		exchange.getAttributes().put(URI_TEMPLATE_VARIABLES_ATTRIBUTE, uriVariables)___		if (!info.getProducesCondition().getProducibleMediaTypes().isEmpty()) {_			Set<MediaType> mediaTypes = info.getProducesCondition().getProducibleMediaTypes()__			exchange.getAttributes().put(PRODUCIBLE_MEDIA_TYPES_ATTRIBUTE, mediaTypes)__		}_	};expose,uri,template,variables,matrix,variables,and,producible,media,types,in,the,request,see,handler,mapping,see,handler,mapping,see,handler,mapping;override,protected,void,handle,match,request,mapping,info,info,string,lookup,path,server,web,exchange,exchange,super,handle,match,info,lookup,path,exchange,path,pattern,best,pattern,map,string,string,uri,variables,set,path,pattern,patterns,info,get,patterns,condition,get,patterns,if,patterns,is,empty,best,pattern,get,path,pattern,parser,parse,lookup,path,uri,variables,collections,empty,map,else,best,pattern,patterns,iterator,next,uri,variables,best,pattern,match,and,extract,lookup,path,map,string,multi,value,map,string,string,matrix,vars,extract,matrix,variables,exchange,uri,variables,exchange,get,attributes,put,matrix,vars,if,uri,variables,is,empty,uri,variables,uri,variables,entry,set,stream,collect,collectors,to,map,entry,get,key,e,string,utils,uri,decode,e,get,value,standard,charsets,exchange,get,attributes,put,best,pattern,exchange,get,attributes,put,uri,variables,if,info,get,produces,condition,get,producible,media,types,is,empty,set,media,type,media,types,info,get,produces,condition,get,producible,media,types,exchange,get,attributes,put,media,types
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public Set<MediaType> getConsumableMediaTypes();1485986572;Return declared "consumable" types but only among those that also_match the "methods" condition.;public Set<MediaType> getConsumableMediaTypes() {_			return this.partialMatches.stream().filter(PartialMatch::hasMethodsMatch)._					flatMap(m -> m.getInfo().getConsumesCondition().getConsumableMediaTypes().stream())._					collect(Collectors.toCollection(LinkedHashSet::new))__		};return,declared,consumable,types,but,only,among,those,that,also,match,the,methods,condition;public,set,media,type,get,consumable,media,types,return,this,partial,matches,stream,filter,partial,match,has,methods,match,flat,map,m,m,get,info,get,consumes,condition,get,consumable,media,types,stream,collect,collectors,to,collection,linked,hash,set,new
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public Set<MediaType> getConsumableMediaTypes();1486635693;Return declared "consumable" types but only among those that also_match the "methods" condition.;public Set<MediaType> getConsumableMediaTypes() {_			return this.partialMatches.stream().filter(PartialMatch::hasMethodsMatch)._					flatMap(m -> m.getInfo().getConsumesCondition().getConsumableMediaTypes().stream())._					collect(Collectors.toCollection(LinkedHashSet::new))__		};return,declared,consumable,types,but,only,among,those,that,also,match,the,methods,condition;public,set,media,type,get,consumable,media,types,return,this,partial,matches,stream,filter,partial,match,has,methods,match,flat,map,m,m,get,info,get,consumes,condition,get,consumable,media,types,stream,collect,collectors,to,collection,linked,hash,set,new
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public Set<MediaType> getConsumableMediaTypes();1486674586;Return declared "consumable" types but only among those that also_match the "methods" condition.;public Set<MediaType> getConsumableMediaTypes() {_			return this.partialMatches.stream().filter(PartialMatch::hasMethodsMatch)._					flatMap(m -> m.getInfo().getConsumesCondition().getConsumableMediaTypes().stream())._					collect(Collectors.toCollection(LinkedHashSet::new))__		};return,declared,consumable,types,but,only,among,those,that,also,match,the,methods,condition;public,set,media,type,get,consumable,media,types,return,this,partial,matches,stream,filter,partial,match,has,methods,match,flat,map,m,m,get,info,get,consumes,condition,get,consumable,media,types,stream,collect,collectors,to,collection,linked,hash,set,new
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public Set<MediaType> getConsumableMediaTypes();1486747801;Return declared "consumable" types but only among those that also_match the "methods" condition.;public Set<MediaType> getConsumableMediaTypes() {_			return this.partialMatches.stream().filter(PartialMatch::hasMethodsMatch)._					flatMap(m -> m.getInfo().getConsumesCondition().getConsumableMediaTypes().stream())._					collect(Collectors.toCollection(LinkedHashSet::new))__		};return,declared,consumable,types,but,only,among,those,that,also,match,the,methods,condition;public,set,media,type,get,consumable,media,types,return,this,partial,matches,stream,filter,partial,match,has,methods,match,flat,map,m,m,get,info,get,consumes,condition,get,consumable,media,types,stream,collect,collectors,to,collection,linked,hash,set,new
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public Set<MediaType> getConsumableMediaTypes();1489852683;Return declared "consumable" types but only among those that also_match the "methods" condition.;public Set<MediaType> getConsumableMediaTypes() {_			return this.partialMatches.stream().filter(PartialMatch::hasMethodsMatch)._					flatMap(m -> m.getInfo().getConsumesCondition().getConsumableMediaTypes().stream())._					collect(Collectors.toCollection(LinkedHashSet::new))__		};return,declared,consumable,types,but,only,among,those,that,also,match,the,methods,condition;public,set,media,type,get,consumable,media,types,return,this,partial,matches,stream,filter,partial,match,has,methods,match,flat,map,m,m,get,info,get,consumes,condition,get,consumable,media,types,stream,collect,collectors,to,collection,linked,hash,set,new
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public Set<MediaType> getConsumableMediaTypes();1490197121;Return declared "consumable" types but only among those that also_match the "methods" condition.;public Set<MediaType> getConsumableMediaTypes() {_			return this.partialMatches.stream().filter(PartialMatch::hasMethodsMatch)._					flatMap(m -> m.getInfo().getConsumesCondition().getConsumableMediaTypes().stream())._					collect(Collectors.toCollection(LinkedHashSet::new))__		};return,declared,consumable,types,but,only,among,those,that,also,match,the,methods,condition;public,set,media,type,get,consumable,media,types,return,this,partial,matches,stream,filter,partial,match,has,methods,match,flat,map,m,m,get,info,get,consumes,condition,get,consumable,media,types,stream,collect,collectors,to,collection,linked,hash,set,new
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public Set<MediaType> getConsumableMediaTypes();1495639183;Return declared "consumable" types but only among those that also_match the "methods" condition.;public Set<MediaType> getConsumableMediaTypes() {_			return this.partialMatches.stream().filter(PartialMatch::hasMethodsMatch)._					flatMap(m -> m.getInfo().getConsumesCondition().getConsumableMediaTypes().stream())._					collect(Collectors.toCollection(LinkedHashSet::new))__		};return,declared,consumable,types,but,only,among,those,that,also,match,the,methods,condition;public,set,media,type,get,consumable,media,types,return,this,partial,matches,stream,filter,partial,match,has,methods,match,flat,map,m,m,get,info,get,consumes,condition,get,consumable,media,types,stream,collect,collectors,to,collection,linked,hash,set,new
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public Set<MediaType> getConsumableMediaTypes();1496334664;Return declared "consumable" types but only among those that also_match the "methods" condition.;public Set<MediaType> getConsumableMediaTypes() {_			return this.partialMatches.stream().filter(PartialMatch::hasMethodsMatch)._					flatMap(m -> m.getInfo().getConsumesCondition().getConsumableMediaTypes().stream())._					collect(Collectors.toCollection(LinkedHashSet::new))__		};return,declared,consumable,types,but,only,among,those,that,also,match,the,methods,condition;public,set,media,type,get,consumable,media,types,return,this,partial,matches,stream,filter,partial,match,has,methods,match,flat,map,m,m,get,info,get,consumes,condition,get,consumable,media,types,stream,collect,collectors,to,collection,linked,hash,set,new
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public Set<MediaType> getConsumableMediaTypes();1496433164;Return declared "consumable" types but only among those that also_match the "methods" condition.;public Set<MediaType> getConsumableMediaTypes() {_			return this.partialMatches.stream().filter(PartialMatch::hasMethodsMatch)._					flatMap(m -> m.getInfo().getConsumesCondition().getConsumableMediaTypes().stream())._					collect(Collectors.toCollection(LinkedHashSet::new))__		};return,declared,consumable,types,but,only,among,those,that,also,match,the,methods,condition;public,set,media,type,get,consumable,media,types,return,this,partial,matches,stream,filter,partial,match,has,methods,match,flat,map,m,m,get,info,get,consumes,condition,get,consumable,media,types,stream,collect,collectors,to,collection,linked,hash,set,new
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public Set<MediaType> getConsumableMediaTypes();1497039338;Return declared "consumable" types but only among those that also_match the "methods" condition.;public Set<MediaType> getConsumableMediaTypes() {_			return this.partialMatches.stream().filter(PartialMatch::hasMethodsMatch)._					flatMap(m -> m.getInfo().getConsumesCondition().getConsumableMediaTypes().stream())._					collect(Collectors.toCollection(LinkedHashSet::new))__		};return,declared,consumable,types,but,only,among,those,that,also,match,the,methods,condition;public,set,media,type,get,consumable,media,types,return,this,partial,matches,stream,filter,partial,match,has,methods,match,flat,map,m,m,get,info,get,consumes,condition,get,consumable,media,types,stream,collect,collectors,to,collection,linked,hash,set,new
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public Set<MediaType> getConsumableMediaTypes();1497039338;Return declared "consumable" types but only among those that also_match the "methods" condition.;public Set<MediaType> getConsumableMediaTypes() {_			return this.partialMatches.stream().filter(PartialMatch::hasMethodsMatch)._					flatMap(m -> m.getInfo().getConsumesCondition().getConsumableMediaTypes().stream())._					collect(Collectors.toCollection(LinkedHashSet::new))__		};return,declared,consumable,types,but,only,among,those,that,also,match,the,methods,condition;public,set,media,type,get,consumable,media,types,return,this,partial,matches,stream,filter,partial,match,has,methods,match,flat,map,m,m,get,info,get,consumes,condition,get,consumable,media,types,stream,collect,collectors,to,collection,linked,hash,set,new
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public Set<MediaType> getConsumableMediaTypes();1497286385;Return declared "consumable" types but only among those that also_match the "methods" condition.;public Set<MediaType> getConsumableMediaTypes() {_			return this.partialMatches.stream().filter(PartialMatch::hasMethodsMatch)._					flatMap(m -> m.getInfo().getConsumesCondition().getConsumableMediaTypes().stream())._					collect(Collectors.toCollection(LinkedHashSet::new))__		};return,declared,consumable,types,but,only,among,those,that,also,match,the,methods,condition;public,set,media,type,get,consumable,media,types,return,this,partial,matches,stream,filter,partial,match,has,methods,match,flat,map,m,m,get,info,get,consumes,condition,get,consumable,media,types,stream,collect,collectors,to,collection,linked,hash,set,new
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public Set<MediaType> getConsumableMediaTypes();1498756719;Return declared "consumable" types but only among those that also_match the "methods" condition.;public Set<MediaType> getConsumableMediaTypes() {_			return this.partialMatches.stream().filter(PartialMatch::hasMethodsMatch)._					flatMap(m -> m.getInfo().getConsumesCondition().getConsumableMediaTypes().stream())._					collect(Collectors.toCollection(LinkedHashSet::new))__		};return,declared,consumable,types,but,only,among,those,that,also,match,the,methods,condition;public,set,media,type,get,consumable,media,types,return,this,partial,matches,stream,filter,partial,match,has,methods,match,flat,map,m,m,get,info,get,consumes,condition,get,consumable,media,types,stream,collect,collectors,to,collection,linked,hash,set,new
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public Set<MediaType> getConsumableMediaTypes();1498861175;Return declared "consumable" types but only among those that also_match the "methods" condition.;public Set<MediaType> getConsumableMediaTypes() {_			return this.partialMatches.stream().filter(PartialMatch::hasMethodsMatch)._					flatMap(m -> m.getInfo().getConsumesCondition().getConsumableMediaTypes().stream())._					collect(Collectors.toCollection(LinkedHashSet::new))__		};return,declared,consumable,types,but,only,among,those,that,also,match,the,methods,condition;public,set,media,type,get,consumable,media,types,return,this,partial,matches,stream,filter,partial,match,has,methods,match,flat,map,m,m,get,info,get,consumes,condition,get,consumable,media,types,stream,collect,collectors,to,collection,linked,hash,set,new
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public Set<MediaType> getConsumableMediaTypes();1498861175;Return declared "consumable" types but only among those that also_match the "methods" condition.;public Set<MediaType> getConsumableMediaTypes() {_			return this.partialMatches.stream().filter(PartialMatch::hasMethodsMatch)._					flatMap(m -> m.getInfo().getConsumesCondition().getConsumableMediaTypes().stream())._					collect(Collectors.toCollection(LinkedHashSet::new))__		};return,declared,consumable,types,but,only,among,those,that,also,match,the,methods,condition;public,set,media,type,get,consumable,media,types,return,this,partial,matches,stream,filter,partial,match,has,methods,match,flat,map,m,m,get,info,get,consumes,condition,get,consumable,media,types,stream,collect,collectors,to,collection,linked,hash,set,new
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public Set<MediaType> getConsumableMediaTypes();1498953917;Return declared "consumable" types but only among those that also_match the "methods" condition.;public Set<MediaType> getConsumableMediaTypes() {_			return this.partialMatches.stream().filter(PartialMatch::hasMethodsMatch)._					flatMap(m -> m.getInfo().getConsumesCondition().getConsumableMediaTypes().stream())._					collect(Collectors.toCollection(LinkedHashSet::new))__		};return,declared,consumable,types,but,only,among,those,that,also,match,the,methods,condition;public,set,media,type,get,consumable,media,types,return,this,partial,matches,stream,filter,partial,match,has,methods,match,flat,map,m,m,get,info,get,consumes,condition,get,consumable,media,types,stream,collect,collectors,to,collection,linked,hash,set,new
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public Set<MediaType> getConsumableMediaTypes();1501237594;Return declared "consumable" types but only among those that also_match the "methods" condition.;public Set<MediaType> getConsumableMediaTypes() {_			return this.partialMatches.stream().filter(PartialMatch::hasMethodsMatch)._					flatMap(m -> m.getInfo().getConsumesCondition().getConsumableMediaTypes().stream())._					collect(Collectors.toCollection(LinkedHashSet::new))__		};return,declared,consumable,types,but,only,among,those,that,also,match,the,methods,condition;public,set,media,type,get,consumable,media,types,return,this,partial,matches,stream,filter,partial,match,has,methods,match,flat,map,m,m,get,info,get,consumes,condition,get,consumable,media,types,stream,collect,collectors,to,collection,linked,hash,set,new
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public Set<MediaType> getConsumableMediaTypes();1501676476;Return declared "consumable" types but only among those that also_match the "methods" condition.;public Set<MediaType> getConsumableMediaTypes() {_			return this.partialMatches.stream().filter(PartialMatch::hasMethodsMatch)._					flatMap(m -> m.getInfo().getConsumesCondition().getConsumableMediaTypes().stream())._					collect(Collectors.toCollection(LinkedHashSet::new))__		};return,declared,consumable,types,but,only,among,those,that,also,match,the,methods,condition;public,set,media,type,get,consumable,media,types,return,this,partial,matches,stream,filter,partial,match,has,methods,match,flat,map,m,m,get,info,get,consumes,condition,get,consumable,media,types,stream,collect,collectors,to,collection,linked,hash,set,new
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public Set<MediaType> getConsumableMediaTypes();1501679128;Return declared "consumable" types but only among those that also_match the "methods" condition.;public Set<MediaType> getConsumableMediaTypes() {_			return this.partialMatches.stream().filter(PartialMatch::hasMethodsMatch)._					flatMap(m -> m.getInfo().getConsumesCondition().getConsumableMediaTypes().stream())._					collect(Collectors.toCollection(LinkedHashSet::new))__		};return,declared,consumable,types,but,only,among,those,that,also,match,the,methods,condition;public,set,media,type,get,consumable,media,types,return,this,partial,matches,stream,filter,partial,match,has,methods,match,flat,map,m,m,get,info,get,consumes,condition,get,consumable,media,types,stream,collect,collectors,to,collection,linked,hash,set,new
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public Set<MediaType> getConsumableMediaTypes();1518987682;Return declared "consumable" types but only among those that also_match the "methods" condition.;public Set<MediaType> getConsumableMediaTypes() {_			return this.partialMatches.stream().filter(PartialMatch::hasMethodsMatch)._					flatMap(m -> m.getInfo().getConsumesCondition().getConsumableMediaTypes().stream())._					collect(Collectors.toCollection(LinkedHashSet::new))__		};return,declared,consumable,types,but,only,among,those,that,also,match,the,methods,condition;public,set,media,type,get,consumable,media,types,return,this,partial,matches,stream,filter,partial,match,has,methods,match,flat,map,m,m,get,info,get,consumes,condition,get,consumable,media,types,stream,collect,collectors,to,collection,linked,hash,set,new
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public Set<MediaType> getConsumableMediaTypes();1526303103;Return declared "consumable" types but only among those that also_match the "methods" condition.;public Set<MediaType> getConsumableMediaTypes() {_			return this.partialMatches.stream().filter(PartialMatch::hasMethodsMatch)._					flatMap(m -> m.getInfo().getConsumesCondition().getConsumableMediaTypes().stream())._					collect(Collectors.toCollection(LinkedHashSet::new))__		};return,declared,consumable,types,but,only,among,those,that,also,match,the,methods,condition;public,set,media,type,get,consumable,media,types,return,this,partial,matches,stream,filter,partial,match,has,methods,match,flat,map,m,m,get,info,get,consumes,condition,get,consumable,media,types,stream,collect,collectors,to,collection,linked,hash,set,new
RequestMappingInfoHandlerMapping -> PartialMatchHelper -> public Set<MediaType> getConsumableMediaTypes();1530174524;Return declared "consumable" types but only among those that also_match the "methods" condition.;public Set<MediaType> getConsumableMediaTypes() {_			return this.partialMatches.stream().filter(PartialMatch::hasMethodsMatch)._					flatMap(m -> m.getInfo().getConsumesCondition().getConsumableMediaTypes().stream())._					collect(Collectors.toCollection(LinkedHashSet::new))__		};return,declared,consumable,types,but,only,among,those,that,also,match,the,methods,condition;public,set,media,type,get,consumable,media,types,return,this,partial,matches,stream,filter,partial,match,has,methods,match,flat,map,m,m,get,info,get,consumes,condition,get,consumable,media,types,stream,collect,collectors,to,collection,linked,hash,set,new
RequestMappingInfoHandlerMapping -> @Override 	protected HandlerMethod handleNoMatch(Set<RequestMappingInfo> infos, String lookupPath, 			ServerWebExchange exchange) throws Exception;1485986572;Iterate all RequestMappingInfos once again, look if any match by URL at_least and raise exceptions accordingly._@throws MethodNotAllowedException for matches by URL but not by HTTP method_@throws UnsupportedMediaTypeStatusException if there are matches by URL_and HTTP method but not by consumable media types_@throws NotAcceptableStatusException if there are matches by URL and HTTP_method but not by producible media types_@throws ServerWebInputException if there are matches by URL and HTTP_method but not by query parameter conditions;@Override_	protected HandlerMethod handleNoMatch(Set<RequestMappingInfo> infos, String lookupPath,_			ServerWebExchange exchange) throws Exception {__		PartialMatchHelper helper = new PartialMatchHelper(infos, exchange)___		if (helper.isEmpty()) {_			return null__		}__		ServerHttpRequest request = exchange.getRequest()___		if (helper.hasMethodsMismatch()) {_			HttpMethod httpMethod = request.getMethod()__			Set<String> methods = helper.getAllowedMethods()__			if (HttpMethod.OPTIONS.matches(httpMethod.name())) {_				HttpOptionsHandler handler = new HttpOptionsHandler(methods)__				return new HandlerMethod(handler, HTTP_OPTIONS_HANDLE_METHOD)__			}_			throw new MethodNotAllowedException(httpMethod.name(), methods)__		}__		if (helper.hasConsumesMismatch()) {_			Set<MediaType> mediaTypes = helper.getConsumableMediaTypes()__			MediaType contentType__			try {_				contentType = request.getHeaders().getContentType()__			}_			catch (InvalidMediaTypeException ex) {_				throw new UnsupportedMediaTypeStatusException(ex.getMessage())__			}_			throw new UnsupportedMediaTypeStatusException(contentType, new ArrayList<>(mediaTypes))__		}__		if (helper.hasProducesMismatch()) {_			Set<MediaType> mediaTypes = helper.getProducibleMediaTypes()__			throw new NotAcceptableStatusException(new ArrayList<>(mediaTypes))__		}__		if (helper.hasParamsMismatch()) {_			throw new ServerWebInputException(_					"Unsatisfied query parameter conditions: " + helper.getParamConditions() +_							", actual parameters: " + request.getQueryParams())__		}__		return null__	};iterate,all,request,mapping,infos,once,again,look,if,any,match,by,url,at,least,and,raise,exceptions,accordingly,throws,method,not,allowed,exception,for,matches,by,url,but,not,by,http,method,throws,unsupported,media,type,status,exception,if,there,are,matches,by,url,and,http,method,but,not,by,consumable,media,types,throws,not,acceptable,status,exception,if,there,are,matches,by,url,and,http,method,but,not,by,producible,media,types,throws,server,web,input,exception,if,there,are,matches,by,url,and,http,method,but,not,by,query,parameter,conditions;override,protected,handler,method,handle,no,match,set,request,mapping,info,infos,string,lookup,path,server,web,exchange,exchange,throws,exception,partial,match,helper,helper,new,partial,match,helper,infos,exchange,if,helper,is,empty,return,null,server,http,request,request,exchange,get,request,if,helper,has,methods,mismatch,http,method,http,method,request,get,method,set,string,methods,helper,get,allowed,methods,if,http,method,options,matches,http,method,name,http,options,handler,handler,new,http,options,handler,methods,return,new,handler,method,handler,throw,new,method,not,allowed,exception,http,method,name,methods,if,helper,has,consumes,mismatch,set,media,type,media,types,helper,get,consumable,media,types,media,type,content,type,try,content,type,request,get,headers,get,content,type,catch,invalid,media,type,exception,ex,throw,new,unsupported,media,type,status,exception,ex,get,message,throw,new,unsupported,media,type,status,exception,content,type,new,array,list,media,types,if,helper,has,produces,mismatch,set,media,type,media,types,helper,get,producible,media,types,throw,new,not,acceptable,status,exception,new,array,list,media,types,if,helper,has,params,mismatch,throw,new,server,web,input,exception,unsatisfied,query,parameter,conditions,helper,get,param,conditions,actual,parameters,request,get,query,params,return,null
RequestMappingInfoHandlerMapping -> @Override 	protected HandlerMethod handleNoMatch(Set<RequestMappingInfo> infos, String lookupPath, 			ServerWebExchange exchange) throws Exception;1486635693;Iterate all RequestMappingInfos once again, look if any match by URL at_least and raise exceptions accordingly._@throws MethodNotAllowedException for matches by URL but not by HTTP method_@throws UnsupportedMediaTypeStatusException if there are matches by URL_and HTTP method but not by consumable media types_@throws NotAcceptableStatusException if there are matches by URL and HTTP_method but not by producible media types_@throws ServerWebInputException if there are matches by URL and HTTP_method but not by query parameter conditions;@Override_	protected HandlerMethod handleNoMatch(Set<RequestMappingInfo> infos, String lookupPath,_			ServerWebExchange exchange) throws Exception {__		PartialMatchHelper helper = new PartialMatchHelper(infos, exchange)___		if (helper.isEmpty()) {_			return null__		}__		ServerHttpRequest request = exchange.getRequest()___		if (helper.hasMethodsMismatch()) {_			HttpMethod httpMethod = request.getMethod()__			Set<String> methods = helper.getAllowedMethods()__			if (HttpMethod.OPTIONS.matches(httpMethod.name())) {_				HttpOptionsHandler handler = new HttpOptionsHandler(methods)__				return new HandlerMethod(handler, HTTP_OPTIONS_HANDLE_METHOD)__			}_			throw new MethodNotAllowedException(httpMethod.name(), methods)__		}__		if (helper.hasConsumesMismatch()) {_			Set<MediaType> mediaTypes = helper.getConsumableMediaTypes()__			MediaType contentType__			try {_				contentType = request.getHeaders().getContentType()__			}_			catch (InvalidMediaTypeException ex) {_				throw new UnsupportedMediaTypeStatusException(ex.getMessage())__			}_			throw new UnsupportedMediaTypeStatusException(contentType, new ArrayList<>(mediaTypes))__		}__		if (helper.hasProducesMismatch()) {_			Set<MediaType> mediaTypes = helper.getProducibleMediaTypes()__			throw new NotAcceptableStatusException(new ArrayList<>(mediaTypes))__		}__		if (helper.hasParamsMismatch()) {_			throw new ServerWebInputException(_					"Unsatisfied query parameter conditions: " + helper.getParamConditions() +_							", actual parameters: " + request.getQueryParams())__		}__		return null__	};iterate,all,request,mapping,infos,once,again,look,if,any,match,by,url,at,least,and,raise,exceptions,accordingly,throws,method,not,allowed,exception,for,matches,by,url,but,not,by,http,method,throws,unsupported,media,type,status,exception,if,there,are,matches,by,url,and,http,method,but,not,by,consumable,media,types,throws,not,acceptable,status,exception,if,there,are,matches,by,url,and,http,method,but,not,by,producible,media,types,throws,server,web,input,exception,if,there,are,matches,by,url,and,http,method,but,not,by,query,parameter,conditions;override,protected,handler,method,handle,no,match,set,request,mapping,info,infos,string,lookup,path,server,web,exchange,exchange,throws,exception,partial,match,helper,helper,new,partial,match,helper,infos,exchange,if,helper,is,empty,return,null,server,http,request,request,exchange,get,request,if,helper,has,methods,mismatch,http,method,http,method,request,get,method,set,string,methods,helper,get,allowed,methods,if,http,method,options,matches,http,method,name,http,options,handler,handler,new,http,options,handler,methods,return,new,handler,method,handler,throw,new,method,not,allowed,exception,http,method,name,methods,if,helper,has,consumes,mismatch,set,media,type,media,types,helper,get,consumable,media,types,media,type,content,type,try,content,type,request,get,headers,get,content,type,catch,invalid,media,type,exception,ex,throw,new,unsupported,media,type,status,exception,ex,get,message,throw,new,unsupported,media,type,status,exception,content,type,new,array,list,media,types,if,helper,has,produces,mismatch,set,media,type,media,types,helper,get,producible,media,types,throw,new,not,acceptable,status,exception,new,array,list,media,types,if,helper,has,params,mismatch,throw,new,server,web,input,exception,unsatisfied,query,parameter,conditions,helper,get,param,conditions,actual,parameters,request,get,query,params,return,null
RequestMappingInfoHandlerMapping -> @Override 	protected HandlerMethod handleNoMatch(Set<RequestMappingInfo> infos, String lookupPath, 			ServerWebExchange exchange) throws Exception;1486674586;Iterate all RequestMappingInfos once again, look if any match by URL at_least and raise exceptions accordingly._@throws MethodNotAllowedException for matches by URL but not by HTTP method_@throws UnsupportedMediaTypeStatusException if there are matches by URL_and HTTP method but not by consumable media types_@throws NotAcceptableStatusException if there are matches by URL and HTTP_method but not by producible media types_@throws ServerWebInputException if there are matches by URL and HTTP_method but not by query parameter conditions;@Override_	protected HandlerMethod handleNoMatch(Set<RequestMappingInfo> infos, String lookupPath,_			ServerWebExchange exchange) throws Exception {__		PartialMatchHelper helper = new PartialMatchHelper(infos, exchange)___		if (helper.isEmpty()) {_			return null__		}__		ServerHttpRequest request = exchange.getRequest()___		if (helper.hasMethodsMismatch()) {_			HttpMethod httpMethod = request.getMethod()__			Set<String> methods = helper.getAllowedMethods()__			if (HttpMethod.OPTIONS.matches(httpMethod.name())) {_				HttpOptionsHandler handler = new HttpOptionsHandler(methods)__				return new HandlerMethod(handler, HTTP_OPTIONS_HANDLE_METHOD)__			}_			throw new MethodNotAllowedException(httpMethod.name(), methods)__		}__		if (helper.hasConsumesMismatch()) {_			Set<MediaType> mediaTypes = helper.getConsumableMediaTypes()__			MediaType contentType__			try {_				contentType = request.getHeaders().getContentType()__			}_			catch (InvalidMediaTypeException ex) {_				throw new UnsupportedMediaTypeStatusException(ex.getMessage())__			}_			throw new UnsupportedMediaTypeStatusException(contentType, new ArrayList<>(mediaTypes))__		}__		if (helper.hasProducesMismatch()) {_			Set<MediaType> mediaTypes = helper.getProducibleMediaTypes()__			throw new NotAcceptableStatusException(new ArrayList<>(mediaTypes))__		}__		if (helper.hasParamsMismatch()) {_			throw new ServerWebInputException(_					"Unsatisfied query parameter conditions: " + helper.getParamConditions() +_							", actual parameters: " + request.getQueryParams())__		}__		return null__	};iterate,all,request,mapping,infos,once,again,look,if,any,match,by,url,at,least,and,raise,exceptions,accordingly,throws,method,not,allowed,exception,for,matches,by,url,but,not,by,http,method,throws,unsupported,media,type,status,exception,if,there,are,matches,by,url,and,http,method,but,not,by,consumable,media,types,throws,not,acceptable,status,exception,if,there,are,matches,by,url,and,http,method,but,not,by,producible,media,types,throws,server,web,input,exception,if,there,are,matches,by,url,and,http,method,but,not,by,query,parameter,conditions;override,protected,handler,method,handle,no,match,set,request,mapping,info,infos,string,lookup,path,server,web,exchange,exchange,throws,exception,partial,match,helper,helper,new,partial,match,helper,infos,exchange,if,helper,is,empty,return,null,server,http,request,request,exchange,get,request,if,helper,has,methods,mismatch,http,method,http,method,request,get,method,set,string,methods,helper,get,allowed,methods,if,http,method,options,matches,http,method,name,http,options,handler,handler,new,http,options,handler,methods,return,new,handler,method,handler,throw,new,method,not,allowed,exception,http,method,name,methods,if,helper,has,consumes,mismatch,set,media,type,media,types,helper,get,consumable,media,types,media,type,content,type,try,content,type,request,get,headers,get,content,type,catch,invalid,media,type,exception,ex,throw,new,unsupported,media,type,status,exception,ex,get,message,throw,new,unsupported,media,type,status,exception,content,type,new,array,list,media,types,if,helper,has,produces,mismatch,set,media,type,media,types,helper,get,producible,media,types,throw,new,not,acceptable,status,exception,new,array,list,media,types,if,helper,has,params,mismatch,throw,new,server,web,input,exception,unsatisfied,query,parameter,conditions,helper,get,param,conditions,actual,parameters,request,get,query,params,return,null
RequestMappingInfoHandlerMapping -> @Override 	protected HandlerMethod handleNoMatch(Set<RequestMappingInfo> infos, String lookupPath, 			ServerWebExchange exchange) throws Exception;1486747801;Iterate all RequestMappingInfos once again, look if any match by URL at_least and raise exceptions accordingly._@throws MethodNotAllowedException for matches by URL but not by HTTP method_@throws UnsupportedMediaTypeStatusException if there are matches by URL_and HTTP method but not by consumable media types_@throws NotAcceptableStatusException if there are matches by URL and HTTP_method but not by producible media types_@throws ServerWebInputException if there are matches by URL and HTTP_method but not by query parameter conditions;@Override_	protected HandlerMethod handleNoMatch(Set<RequestMappingInfo> infos, String lookupPath,_			ServerWebExchange exchange) throws Exception {__		PartialMatchHelper helper = new PartialMatchHelper(infos, exchange)___		if (helper.isEmpty()) {_			return null__		}__		ServerHttpRequest request = exchange.getRequest()___		if (helper.hasMethodsMismatch()) {_			HttpMethod httpMethod = request.getMethod()__			Set<String> methods = helper.getAllowedMethods()__			if (HttpMethod.OPTIONS.matches(httpMethod.name())) {_				HttpOptionsHandler handler = new HttpOptionsHandler(methods)__				return new HandlerMethod(handler, HTTP_OPTIONS_HANDLE_METHOD)__			}_			throw new MethodNotAllowedException(httpMethod.name(), methods)__		}__		if (helper.hasConsumesMismatch()) {_			Set<MediaType> mediaTypes = helper.getConsumableMediaTypes()__			MediaType contentType__			try {_				contentType = request.getHeaders().getContentType()__			}_			catch (InvalidMediaTypeException ex) {_				throw new UnsupportedMediaTypeStatusException(ex.getMessage())__			}_			throw new UnsupportedMediaTypeStatusException(contentType, new ArrayList<>(mediaTypes))__		}__		if (helper.hasProducesMismatch()) {_			Set<MediaType> mediaTypes = helper.getProducibleMediaTypes()__			throw new NotAcceptableStatusException(new ArrayList<>(mediaTypes))__		}__		if (helper.hasParamsMismatch()) {_			throw new ServerWebInputException(_					"Unsatisfied query parameter conditions: " + helper.getParamConditions() +_							", actual parameters: " + request.getQueryParams())__		}__		return null__	};iterate,all,request,mapping,infos,once,again,look,if,any,match,by,url,at,least,and,raise,exceptions,accordingly,throws,method,not,allowed,exception,for,matches,by,url,but,not,by,http,method,throws,unsupported,media,type,status,exception,if,there,are,matches,by,url,and,http,method,but,not,by,consumable,media,types,throws,not,acceptable,status,exception,if,there,are,matches,by,url,and,http,method,but,not,by,producible,media,types,throws,server,web,input,exception,if,there,are,matches,by,url,and,http,method,but,not,by,query,parameter,conditions;override,protected,handler,method,handle,no,match,set,request,mapping,info,infos,string,lookup,path,server,web,exchange,exchange,throws,exception,partial,match,helper,helper,new,partial,match,helper,infos,exchange,if,helper,is,empty,return,null,server,http,request,request,exchange,get,request,if,helper,has,methods,mismatch,http,method,http,method,request,get,method,set,string,methods,helper,get,allowed,methods,if,http,method,options,matches,http,method,name,http,options,handler,handler,new,http,options,handler,methods,return,new,handler,method,handler,throw,new,method,not,allowed,exception,http,method,name,methods,if,helper,has,consumes,mismatch,set,media,type,media,types,helper,get,consumable,media,types,media,type,content,type,try,content,type,request,get,headers,get,content,type,catch,invalid,media,type,exception,ex,throw,new,unsupported,media,type,status,exception,ex,get,message,throw,new,unsupported,media,type,status,exception,content,type,new,array,list,media,types,if,helper,has,produces,mismatch,set,media,type,media,types,helper,get,producible,media,types,throw,new,not,acceptable,status,exception,new,array,list,media,types,if,helper,has,params,mismatch,throw,new,server,web,input,exception,unsatisfied,query,parameter,conditions,helper,get,param,conditions,actual,parameters,request,get,query,params,return,null
RequestMappingInfoHandlerMapping -> @Override 	protected HandlerMethod handleNoMatch(Set<RequestMappingInfo> infos, String lookupPath, 			ServerWebExchange exchange) throws Exception;1489852683;Iterate all RequestMappingInfos once again, look if any match by URL at_least and raise exceptions accordingly._@throws MethodNotAllowedException for matches by URL but not by HTTP method_@throws UnsupportedMediaTypeStatusException if there are matches by URL_and HTTP method but not by consumable media types_@throws NotAcceptableStatusException if there are matches by URL and HTTP_method but not by producible media types_@throws ServerWebInputException if there are matches by URL and HTTP_method but not by query parameter conditions;@Override_	protected HandlerMethod handleNoMatch(Set<RequestMappingInfo> infos, String lookupPath,_			ServerWebExchange exchange) throws Exception {__		PartialMatchHelper helper = new PartialMatchHelper(infos, exchange)___		if (helper.isEmpty()) {_			return null__		}__		ServerHttpRequest request = exchange.getRequest()___		if (helper.hasMethodsMismatch()) {_			HttpMethod httpMethod = request.getMethod()__			Set<String> methods = helper.getAllowedMethods()__			if (HttpMethod.OPTIONS.matches(httpMethod.name())) {_				HttpOptionsHandler handler = new HttpOptionsHandler(methods)__				return new HandlerMethod(handler, HTTP_OPTIONS_HANDLE_METHOD)__			}_			throw new MethodNotAllowedException(httpMethod.name(), methods)__		}__		if (helper.hasConsumesMismatch()) {_			Set<MediaType> mediaTypes = helper.getConsumableMediaTypes()__			MediaType contentType__			try {_				contentType = request.getHeaders().getContentType()__			}_			catch (InvalidMediaTypeException ex) {_				throw new UnsupportedMediaTypeStatusException(ex.getMessage())__			}_			throw new UnsupportedMediaTypeStatusException(contentType, new ArrayList<>(mediaTypes))__		}__		if (helper.hasProducesMismatch()) {_			Set<MediaType> mediaTypes = helper.getProducibleMediaTypes()__			throw new NotAcceptableStatusException(new ArrayList<>(mediaTypes))__		}__		if (helper.hasParamsMismatch()) {_			throw new ServerWebInputException(_					"Unsatisfied query parameter conditions: " + helper.getParamConditions() +_							", actual parameters: " + request.getQueryParams())__		}__		return null__	};iterate,all,request,mapping,infos,once,again,look,if,any,match,by,url,at,least,and,raise,exceptions,accordingly,throws,method,not,allowed,exception,for,matches,by,url,but,not,by,http,method,throws,unsupported,media,type,status,exception,if,there,are,matches,by,url,and,http,method,but,not,by,consumable,media,types,throws,not,acceptable,status,exception,if,there,are,matches,by,url,and,http,method,but,not,by,producible,media,types,throws,server,web,input,exception,if,there,are,matches,by,url,and,http,method,but,not,by,query,parameter,conditions;override,protected,handler,method,handle,no,match,set,request,mapping,info,infos,string,lookup,path,server,web,exchange,exchange,throws,exception,partial,match,helper,helper,new,partial,match,helper,infos,exchange,if,helper,is,empty,return,null,server,http,request,request,exchange,get,request,if,helper,has,methods,mismatch,http,method,http,method,request,get,method,set,string,methods,helper,get,allowed,methods,if,http,method,options,matches,http,method,name,http,options,handler,handler,new,http,options,handler,methods,return,new,handler,method,handler,throw,new,method,not,allowed,exception,http,method,name,methods,if,helper,has,consumes,mismatch,set,media,type,media,types,helper,get,consumable,media,types,media,type,content,type,try,content,type,request,get,headers,get,content,type,catch,invalid,media,type,exception,ex,throw,new,unsupported,media,type,status,exception,ex,get,message,throw,new,unsupported,media,type,status,exception,content,type,new,array,list,media,types,if,helper,has,produces,mismatch,set,media,type,media,types,helper,get,producible,media,types,throw,new,not,acceptable,status,exception,new,array,list,media,types,if,helper,has,params,mismatch,throw,new,server,web,input,exception,unsatisfied,query,parameter,conditions,helper,get,param,conditions,actual,parameters,request,get,query,params,return,null
RequestMappingInfoHandlerMapping -> @Override 	protected HandlerMethod handleNoMatch(Set<RequestMappingInfo> infos, String lookupPath, 			ServerWebExchange exchange) throws Exception;1490197121;Iterate all RequestMappingInfos once again, look if any match by URL at_least and raise exceptions accordingly._@throws MethodNotAllowedException for matches by URL but not by HTTP method_@throws UnsupportedMediaTypeStatusException if there are matches by URL_and HTTP method but not by consumable media types_@throws NotAcceptableStatusException if there are matches by URL and HTTP_method but not by producible media types_@throws ServerWebInputException if there are matches by URL and HTTP_method but not by query parameter conditions;@Override_	protected HandlerMethod handleNoMatch(Set<RequestMappingInfo> infos, String lookupPath,_			ServerWebExchange exchange) throws Exception {__		PartialMatchHelper helper = new PartialMatchHelper(infos, exchange)___		if (helper.isEmpty()) {_			return null__		}__		ServerHttpRequest request = exchange.getRequest()___		if (helper.hasMethodsMismatch()) {_			HttpMethod httpMethod = request.getMethod()__			Set<HttpMethod> methods = helper.getAllowedMethods()__			if (HttpMethod.OPTIONS.matches(httpMethod.name())) {_				HttpOptionsHandler handler = new HttpOptionsHandler(methods)__				return new HandlerMethod(handler, HTTP_OPTIONS_HANDLE_METHOD)__			}_			throw new MethodNotAllowedException(httpMethod, methods)__		}__		if (helper.hasConsumesMismatch()) {_			Set<MediaType> mediaTypes = helper.getConsumableMediaTypes()__			MediaType contentType__			try {_				contentType = request.getHeaders().getContentType()__			}_			catch (InvalidMediaTypeException ex) {_				throw new UnsupportedMediaTypeStatusException(ex.getMessage())__			}_			throw new UnsupportedMediaTypeStatusException(contentType, new ArrayList<>(mediaTypes))__		}__		if (helper.hasProducesMismatch()) {_			Set<MediaType> mediaTypes = helper.getProducibleMediaTypes()__			throw new NotAcceptableStatusException(new ArrayList<>(mediaTypes))__		}__		if (helper.hasParamsMismatch()) {_			throw new ServerWebInputException(_					"Unsatisfied query parameter conditions: " + helper.getParamConditions() +_							", actual parameters: " + request.getQueryParams())__		}__		return null__	};iterate,all,request,mapping,infos,once,again,look,if,any,match,by,url,at,least,and,raise,exceptions,accordingly,throws,method,not,allowed,exception,for,matches,by,url,but,not,by,http,method,throws,unsupported,media,type,status,exception,if,there,are,matches,by,url,and,http,method,but,not,by,consumable,media,types,throws,not,acceptable,status,exception,if,there,are,matches,by,url,and,http,method,but,not,by,producible,media,types,throws,server,web,input,exception,if,there,are,matches,by,url,and,http,method,but,not,by,query,parameter,conditions;override,protected,handler,method,handle,no,match,set,request,mapping,info,infos,string,lookup,path,server,web,exchange,exchange,throws,exception,partial,match,helper,helper,new,partial,match,helper,infos,exchange,if,helper,is,empty,return,null,server,http,request,request,exchange,get,request,if,helper,has,methods,mismatch,http,method,http,method,request,get,method,set,http,method,methods,helper,get,allowed,methods,if,http,method,options,matches,http,method,name,http,options,handler,handler,new,http,options,handler,methods,return,new,handler,method,handler,throw,new,method,not,allowed,exception,http,method,methods,if,helper,has,consumes,mismatch,set,media,type,media,types,helper,get,consumable,media,types,media,type,content,type,try,content,type,request,get,headers,get,content,type,catch,invalid,media,type,exception,ex,throw,new,unsupported,media,type,status,exception,ex,get,message,throw,new,unsupported,media,type,status,exception,content,type,new,array,list,media,types,if,helper,has,produces,mismatch,set,media,type,media,types,helper,get,producible,media,types,throw,new,not,acceptable,status,exception,new,array,list,media,types,if,helper,has,params,mismatch,throw,new,server,web,input,exception,unsatisfied,query,parameter,conditions,helper,get,param,conditions,actual,parameters,request,get,query,params,return,null
RequestMappingInfoHandlerMapping -> @Override 	protected HandlerMethod handleNoMatch(Set<RequestMappingInfo> infos, String lookupPath, 			ServerWebExchange exchange) throws Exception;1495639183;Iterate all RequestMappingInfos once again, look if any match by URL at_least and raise exceptions accordingly._@throws MethodNotAllowedException for matches by URL but not by HTTP method_@throws UnsupportedMediaTypeStatusException if there are matches by URL_and HTTP method but not by consumable media types_@throws NotAcceptableStatusException if there are matches by URL and HTTP_method but not by producible media types_@throws ServerWebInputException if there are matches by URL and HTTP_method but not by query parameter conditions;@Override_	protected HandlerMethod handleNoMatch(Set<RequestMappingInfo> infos, String lookupPath,_			ServerWebExchange exchange) throws Exception {__		PartialMatchHelper helper = new PartialMatchHelper(infos, exchange)___		if (helper.isEmpty()) {_			return null__		}__		ServerHttpRequest request = exchange.getRequest()___		if (helper.hasMethodsMismatch()) {_			String httpMethod = request.getMethodValue()__			Set<HttpMethod> methods = helper.getAllowedMethods()__			if (HttpMethod.OPTIONS.matches(httpMethod)) {_				HttpOptionsHandler handler = new HttpOptionsHandler(methods)__				return new HandlerMethod(handler, HTTP_OPTIONS_HANDLE_METHOD)__			}_			throw new MethodNotAllowedException(httpMethod, methods)__		}__		if (helper.hasConsumesMismatch()) {_			Set<MediaType> mediaTypes = helper.getConsumableMediaTypes()__			MediaType contentType__			try {_				contentType = request.getHeaders().getContentType()__			}_			catch (InvalidMediaTypeException ex) {_				throw new UnsupportedMediaTypeStatusException(ex.getMessage())__			}_			throw new UnsupportedMediaTypeStatusException(contentType, new ArrayList<>(mediaTypes))__		}__		if (helper.hasProducesMismatch()) {_			Set<MediaType> mediaTypes = helper.getProducibleMediaTypes()__			throw new NotAcceptableStatusException(new ArrayList<>(mediaTypes))__		}__		if (helper.hasParamsMismatch()) {_			throw new ServerWebInputException(_					"Unsatisfied query parameter conditions: " + helper.getParamConditions() +_							", actual parameters: " + request.getQueryParams())__		}__		return null__	};iterate,all,request,mapping,infos,once,again,look,if,any,match,by,url,at,least,and,raise,exceptions,accordingly,throws,method,not,allowed,exception,for,matches,by,url,but,not,by,http,method,throws,unsupported,media,type,status,exception,if,there,are,matches,by,url,and,http,method,but,not,by,consumable,media,types,throws,not,acceptable,status,exception,if,there,are,matches,by,url,and,http,method,but,not,by,producible,media,types,throws,server,web,input,exception,if,there,are,matches,by,url,and,http,method,but,not,by,query,parameter,conditions;override,protected,handler,method,handle,no,match,set,request,mapping,info,infos,string,lookup,path,server,web,exchange,exchange,throws,exception,partial,match,helper,helper,new,partial,match,helper,infos,exchange,if,helper,is,empty,return,null,server,http,request,request,exchange,get,request,if,helper,has,methods,mismatch,string,http,method,request,get,method,value,set,http,method,methods,helper,get,allowed,methods,if,http,method,options,matches,http,method,http,options,handler,handler,new,http,options,handler,methods,return,new,handler,method,handler,throw,new,method,not,allowed,exception,http,method,methods,if,helper,has,consumes,mismatch,set,media,type,media,types,helper,get,consumable,media,types,media,type,content,type,try,content,type,request,get,headers,get,content,type,catch,invalid,media,type,exception,ex,throw,new,unsupported,media,type,status,exception,ex,get,message,throw,new,unsupported,media,type,status,exception,content,type,new,array,list,media,types,if,helper,has,produces,mismatch,set,media,type,media,types,helper,get,producible,media,types,throw,new,not,acceptable,status,exception,new,array,list,media,types,if,helper,has,params,mismatch,throw,new,server,web,input,exception,unsatisfied,query,parameter,conditions,helper,get,param,conditions,actual,parameters,request,get,query,params,return,null
RequestMappingInfoHandlerMapping -> @Override 	protected HandlerMethod handleNoMatch(Set<RequestMappingInfo> infos, String lookupPath, 			ServerWebExchange exchange) throws Exception;1497039338;Iterate all RequestMappingInfos once again, look if any match by URL at_least and raise exceptions accordingly._@throws MethodNotAllowedException for matches by URL but not by HTTP method_@throws UnsupportedMediaTypeStatusException if there are matches by URL_and HTTP method but not by consumable media types_@throws NotAcceptableStatusException if there are matches by URL and HTTP_method but not by producible media types_@throws ServerWebInputException if there are matches by URL and HTTP_method but not by query parameter conditions;@Override_	protected HandlerMethod handleNoMatch(Set<RequestMappingInfo> infos, String lookupPath,_			ServerWebExchange exchange) throws Exception {__		PartialMatchHelper helper = new PartialMatchHelper(infos, exchange)___		if (helper.isEmpty()) {_			return null__		}__		ServerHttpRequest request = exchange.getRequest()___		if (helper.hasMethodsMismatch()) {_			String httpMethod = request.getMethodValue()__			Set<HttpMethod> methods = helper.getAllowedMethods()__			if (HttpMethod.OPTIONS.matches(httpMethod)) {_				HttpOptionsHandler handler = new HttpOptionsHandler(methods)__				return new HandlerMethod(handler, HTTP_OPTIONS_HANDLE_METHOD)__			}_			throw new MethodNotAllowedException(httpMethod, methods)__		}__		if (helper.hasConsumesMismatch()) {_			Set<MediaType> mediaTypes = helper.getConsumableMediaTypes()__			MediaType contentType__			try {_				contentType = request.getHeaders().getContentType()__			}_			catch (InvalidMediaTypeException ex) {_				throw new UnsupportedMediaTypeStatusException(ex.getMessage())__			}_			throw new UnsupportedMediaTypeStatusException(contentType, new ArrayList<>(mediaTypes))__		}__		if (helper.hasProducesMismatch()) {_			Set<MediaType> mediaTypes = helper.getProducibleMediaTypes()__			throw new NotAcceptableStatusException(new ArrayList<>(mediaTypes))__		}__		if (helper.hasParamsMismatch()) {_			throw new ServerWebInputException(_					"Unsatisfied query parameter conditions: " + helper.getParamConditions() +_							", actual parameters: " + request.getQueryParams())__		}__		return null__	};iterate,all,request,mapping,infos,once,again,look,if,any,match,by,url,at,least,and,raise,exceptions,accordingly,throws,method,not,allowed,exception,for,matches,by,url,but,not,by,http,method,throws,unsupported,media,type,status,exception,if,there,are,matches,by,url,and,http,method,but,not,by,consumable,media,types,throws,not,acceptable,status,exception,if,there,are,matches,by,url,and,http,method,but,not,by,producible,media,types,throws,server,web,input,exception,if,there,are,matches,by,url,and,http,method,but,not,by,query,parameter,conditions;override,protected,handler,method,handle,no,match,set,request,mapping,info,infos,string,lookup,path,server,web,exchange,exchange,throws,exception,partial,match,helper,helper,new,partial,match,helper,infos,exchange,if,helper,is,empty,return,null,server,http,request,request,exchange,get,request,if,helper,has,methods,mismatch,string,http,method,request,get,method,value,set,http,method,methods,helper,get,allowed,methods,if,http,method,options,matches,http,method,http,options,handler,handler,new,http,options,handler,methods,return,new,handler,method,handler,throw,new,method,not,allowed,exception,http,method,methods,if,helper,has,consumes,mismatch,set,media,type,media,types,helper,get,consumable,media,types,media,type,content,type,try,content,type,request,get,headers,get,content,type,catch,invalid,media,type,exception,ex,throw,new,unsupported,media,type,status,exception,ex,get,message,throw,new,unsupported,media,type,status,exception,content,type,new,array,list,media,types,if,helper,has,produces,mismatch,set,media,type,media,types,helper,get,producible,media,types,throw,new,not,acceptable,status,exception,new,array,list,media,types,if,helper,has,params,mismatch,throw,new,server,web,input,exception,unsatisfied,query,parameter,conditions,helper,get,param,conditions,actual,parameters,request,get,query,params,return,null
RequestMappingInfoHandlerMapping -> @Override 	protected HandlerMethod handleNoMatch(Set<RequestMappingInfo> infos, String lookupPath, 			ServerWebExchange exchange) throws Exception;1497039338;Iterate all RequestMappingInfos once again, look if any match by URL at_least and raise exceptions accordingly._@throws MethodNotAllowedException for matches by URL but not by HTTP method_@throws UnsupportedMediaTypeStatusException if there are matches by URL_and HTTP method but not by consumable media types_@throws NotAcceptableStatusException if there are matches by URL and HTTP_method but not by producible media types_@throws ServerWebInputException if there are matches by URL and HTTP_method but not by query parameter conditions;@Override_	protected HandlerMethod handleNoMatch(Set<RequestMappingInfo> infos, String lookupPath,_			ServerWebExchange exchange) throws Exception {__		PartialMatchHelper helper = new PartialMatchHelper(infos, exchange)___		if (helper.isEmpty()) {_			return null__		}__		ServerHttpRequest request = exchange.getRequest()___		if (helper.hasMethodsMismatch()) {_			String httpMethod = request.getMethodValue()__			Set<HttpMethod> methods = helper.getAllowedMethods()__			if (HttpMethod.OPTIONS.matches(httpMethod)) {_				HttpOptionsHandler handler = new HttpOptionsHandler(methods)__				return new HandlerMethod(handler, HTTP_OPTIONS_HANDLE_METHOD)__			}_			throw new MethodNotAllowedException(httpMethod, methods)__		}__		if (helper.hasConsumesMismatch()) {_			Set<MediaType> mediaTypes = helper.getConsumableMediaTypes()__			MediaType contentType__			try {_				contentType = request.getHeaders().getContentType()__			}_			catch (InvalidMediaTypeException ex) {_				throw new UnsupportedMediaTypeStatusException(ex.getMessage())__			}_			throw new UnsupportedMediaTypeStatusException(contentType, new ArrayList<>(mediaTypes))__		}__		if (helper.hasProducesMismatch()) {_			Set<MediaType> mediaTypes = helper.getProducibleMediaTypes()__			throw new NotAcceptableStatusException(new ArrayList<>(mediaTypes))__		}__		if (helper.hasParamsMismatch()) {_			throw new ServerWebInputException(_					"Unsatisfied query parameter conditions: " + helper.getParamConditions() +_							", actual parameters: " + request.getQueryParams())__		}__		return null__	};iterate,all,request,mapping,infos,once,again,look,if,any,match,by,url,at,least,and,raise,exceptions,accordingly,throws,method,not,allowed,exception,for,matches,by,url,but,not,by,http,method,throws,unsupported,media,type,status,exception,if,there,are,matches,by,url,and,http,method,but,not,by,consumable,media,types,throws,not,acceptable,status,exception,if,there,are,matches,by,url,and,http,method,but,not,by,producible,media,types,throws,server,web,input,exception,if,there,are,matches,by,url,and,http,method,but,not,by,query,parameter,conditions;override,protected,handler,method,handle,no,match,set,request,mapping,info,infos,string,lookup,path,server,web,exchange,exchange,throws,exception,partial,match,helper,helper,new,partial,match,helper,infos,exchange,if,helper,is,empty,return,null,server,http,request,request,exchange,get,request,if,helper,has,methods,mismatch,string,http,method,request,get,method,value,set,http,method,methods,helper,get,allowed,methods,if,http,method,options,matches,http,method,http,options,handler,handler,new,http,options,handler,methods,return,new,handler,method,handler,throw,new,method,not,allowed,exception,http,method,methods,if,helper,has,consumes,mismatch,set,media,type,media,types,helper,get,consumable,media,types,media,type,content,type,try,content,type,request,get,headers,get,content,type,catch,invalid,media,type,exception,ex,throw,new,unsupported,media,type,status,exception,ex,get,message,throw,new,unsupported,media,type,status,exception,content,type,new,array,list,media,types,if,helper,has,produces,mismatch,set,media,type,media,types,helper,get,producible,media,types,throw,new,not,acceptable,status,exception,new,array,list,media,types,if,helper,has,params,mismatch,throw,new,server,web,input,exception,unsatisfied,query,parameter,conditions,helper,get,param,conditions,actual,parameters,request,get,query,params,return,null
RequestMappingInfoHandlerMapping -> @Override 	protected HandlerMethod handleNoMatch(Set<RequestMappingInfo> infos, String lookupPath, 			ServerWebExchange exchange) throws Exception;1497286385;Iterate all RequestMappingInfos once again, look if any match by URL at_least and raise exceptions accordingly._@throws MethodNotAllowedException for matches by URL but not by HTTP method_@throws UnsupportedMediaTypeStatusException if there are matches by URL_and HTTP method but not by consumable media types_@throws NotAcceptableStatusException if there are matches by URL and HTTP_method but not by producible media types_@throws ServerWebInputException if there are matches by URL and HTTP_method but not by query parameter conditions;@Override_	protected HandlerMethod handleNoMatch(Set<RequestMappingInfo> infos, String lookupPath,_			ServerWebExchange exchange) throws Exception {__		PartialMatchHelper helper = new PartialMatchHelper(infos, exchange)___		if (helper.isEmpty()) {_			return null__		}__		ServerHttpRequest request = exchange.getRequest()___		if (helper.hasMethodsMismatch()) {_			String httpMethod = request.getMethodValue()__			Set<HttpMethod> methods = helper.getAllowedMethods()__			if (HttpMethod.OPTIONS.matches(httpMethod)) {_				HttpOptionsHandler handler = new HttpOptionsHandler(methods)__				return new HandlerMethod(handler, HTTP_OPTIONS_HANDLE_METHOD)__			}_			throw new MethodNotAllowedException(httpMethod, methods)__		}__		if (helper.hasConsumesMismatch()) {_			Set<MediaType> mediaTypes = helper.getConsumableMediaTypes()__			MediaType contentType__			try {_				contentType = request.getHeaders().getContentType()__			}_			catch (InvalidMediaTypeException ex) {_				throw new UnsupportedMediaTypeStatusException(ex.getMessage())__			}_			throw new UnsupportedMediaTypeStatusException(contentType, new ArrayList<>(mediaTypes))__		}__		if (helper.hasProducesMismatch()) {_			Set<MediaType> mediaTypes = helper.getProducibleMediaTypes()__			throw new NotAcceptableStatusException(new ArrayList<>(mediaTypes))__		}__		if (helper.hasParamsMismatch()) {_			throw new ServerWebInputException(_					"Unsatisfied query parameter conditions: " + helper.getParamConditions() +_							", actual parameters: " + request.getQueryParams())__		}__		return null__	};iterate,all,request,mapping,infos,once,again,look,if,any,match,by,url,at,least,and,raise,exceptions,accordingly,throws,method,not,allowed,exception,for,matches,by,url,but,not,by,http,method,throws,unsupported,media,type,status,exception,if,there,are,matches,by,url,and,http,method,but,not,by,consumable,media,types,throws,not,acceptable,status,exception,if,there,are,matches,by,url,and,http,method,but,not,by,producible,media,types,throws,server,web,input,exception,if,there,are,matches,by,url,and,http,method,but,not,by,query,parameter,conditions;override,protected,handler,method,handle,no,match,set,request,mapping,info,infos,string,lookup,path,server,web,exchange,exchange,throws,exception,partial,match,helper,helper,new,partial,match,helper,infos,exchange,if,helper,is,empty,return,null,server,http,request,request,exchange,get,request,if,helper,has,methods,mismatch,string,http,method,request,get,method,value,set,http,method,methods,helper,get,allowed,methods,if,http,method,options,matches,http,method,http,options,handler,handler,new,http,options,handler,methods,return,new,handler,method,handler,throw,new,method,not,allowed,exception,http,method,methods,if,helper,has,consumes,mismatch,set,media,type,media,types,helper,get,consumable,media,types,media,type,content,type,try,content,type,request,get,headers,get,content,type,catch,invalid,media,type,exception,ex,throw,new,unsupported,media,type,status,exception,ex,get,message,throw,new,unsupported,media,type,status,exception,content,type,new,array,list,media,types,if,helper,has,produces,mismatch,set,media,type,media,types,helper,get,producible,media,types,throw,new,not,acceptable,status,exception,new,array,list,media,types,if,helper,has,params,mismatch,throw,new,server,web,input,exception,unsatisfied,query,parameter,conditions,helper,get,param,conditions,actual,parameters,request,get,query,params,return,null
RequestMappingInfoHandlerMapping -> @Override 	protected HandlerMethod handleNoMatch(Set<RequestMappingInfo> infos, String lookupPath, 			ServerWebExchange exchange) throws Exception;1498756719;Iterate all RequestMappingInfos once again, look if any match by URL at_least and raise exceptions accordingly._@throws MethodNotAllowedException for matches by URL but not by HTTP method_@throws UnsupportedMediaTypeStatusException if there are matches by URL_and HTTP method but not by consumable media types_@throws NotAcceptableStatusException if there are matches by URL and HTTP_method but not by producible media types_@throws ServerWebInputException if there are matches by URL and HTTP_method but not by query parameter conditions;@Override_	protected HandlerMethod handleNoMatch(Set<RequestMappingInfo> infos, String lookupPath,_			ServerWebExchange exchange) throws Exception {__		PartialMatchHelper helper = new PartialMatchHelper(infos, exchange)___		if (helper.isEmpty()) {_			return null__		}__		ServerHttpRequest request = exchange.getRequest()___		if (helper.hasMethodsMismatch()) {_			String httpMethod = request.getMethodValue()__			Set<HttpMethod> methods = helper.getAllowedMethods()__			if (HttpMethod.OPTIONS.matches(httpMethod)) {_				HttpOptionsHandler handler = new HttpOptionsHandler(methods)__				return new HandlerMethod(handler, HTTP_OPTIONS_HANDLE_METHOD)__			}_			throw new MethodNotAllowedException(httpMethod, methods)__		}__		if (helper.hasConsumesMismatch()) {_			Set<MediaType> mediaTypes = helper.getConsumableMediaTypes()__			MediaType contentType__			try {_				contentType = request.getHeaders().getContentType()__			}_			catch (InvalidMediaTypeException ex) {_				throw new UnsupportedMediaTypeStatusException(ex.getMessage())__			}_			throw new UnsupportedMediaTypeStatusException(contentType, new ArrayList<>(mediaTypes))__		}__		if (helper.hasProducesMismatch()) {_			Set<MediaType> mediaTypes = helper.getProducibleMediaTypes()__			throw new NotAcceptableStatusException(new ArrayList<>(mediaTypes))__		}__		if (helper.hasParamsMismatch()) {_			throw new ServerWebInputException(_					"Unsatisfied query parameter conditions: " + helper.getParamConditions() +_							", actual parameters: " + request.getQueryParams())__		}__		return null__	};iterate,all,request,mapping,infos,once,again,look,if,any,match,by,url,at,least,and,raise,exceptions,accordingly,throws,method,not,allowed,exception,for,matches,by,url,but,not,by,http,method,throws,unsupported,media,type,status,exception,if,there,are,matches,by,url,and,http,method,but,not,by,consumable,media,types,throws,not,acceptable,status,exception,if,there,are,matches,by,url,and,http,method,but,not,by,producible,media,types,throws,server,web,input,exception,if,there,are,matches,by,url,and,http,method,but,not,by,query,parameter,conditions;override,protected,handler,method,handle,no,match,set,request,mapping,info,infos,string,lookup,path,server,web,exchange,exchange,throws,exception,partial,match,helper,helper,new,partial,match,helper,infos,exchange,if,helper,is,empty,return,null,server,http,request,request,exchange,get,request,if,helper,has,methods,mismatch,string,http,method,request,get,method,value,set,http,method,methods,helper,get,allowed,methods,if,http,method,options,matches,http,method,http,options,handler,handler,new,http,options,handler,methods,return,new,handler,method,handler,throw,new,method,not,allowed,exception,http,method,methods,if,helper,has,consumes,mismatch,set,media,type,media,types,helper,get,consumable,media,types,media,type,content,type,try,content,type,request,get,headers,get,content,type,catch,invalid,media,type,exception,ex,throw,new,unsupported,media,type,status,exception,ex,get,message,throw,new,unsupported,media,type,status,exception,content,type,new,array,list,media,types,if,helper,has,produces,mismatch,set,media,type,media,types,helper,get,producible,media,types,throw,new,not,acceptable,status,exception,new,array,list,media,types,if,helper,has,params,mismatch,throw,new,server,web,input,exception,unsatisfied,query,parameter,conditions,helper,get,param,conditions,actual,parameters,request,get,query,params,return,null
RequestMappingInfoHandlerMapping -> @Override 	protected HandlerMethod handleNoMatch(Set<RequestMappingInfo> infos, String lookupPath, 			ServerWebExchange exchange) throws Exception;1498861175;Iterate all RequestMappingInfos once again, look if any match by URL at_least and raise exceptions accordingly._@throws MethodNotAllowedException for matches by URL but not by HTTP method_@throws UnsupportedMediaTypeStatusException if there are matches by URL_and HTTP method but not by consumable media types_@throws NotAcceptableStatusException if there are matches by URL and HTTP_method but not by producible media types_@throws ServerWebInputException if there are matches by URL and HTTP_method but not by query parameter conditions;@Override_	protected HandlerMethod handleNoMatch(Set<RequestMappingInfo> infos, String lookupPath,_			ServerWebExchange exchange) throws Exception {__		PartialMatchHelper helper = new PartialMatchHelper(infos, exchange)___		if (helper.isEmpty()) {_			return null__		}__		ServerHttpRequest request = exchange.getRequest()___		if (helper.hasMethodsMismatch()) {_			String httpMethod = request.getMethodValue()__			Set<HttpMethod> methods = helper.getAllowedMethods()__			if (HttpMethod.OPTIONS.matches(httpMethod)) {_				HttpOptionsHandler handler = new HttpOptionsHandler(methods)__				return new HandlerMethod(handler, HTTP_OPTIONS_HANDLE_METHOD)__			}_			throw new MethodNotAllowedException(httpMethod, methods)__		}__		if (helper.hasConsumesMismatch()) {_			Set<MediaType> mediaTypes = helper.getConsumableMediaTypes()__			MediaType contentType__			try {_				contentType = request.getHeaders().getContentType()__			}_			catch (InvalidMediaTypeException ex) {_				throw new UnsupportedMediaTypeStatusException(ex.getMessage())__			}_			throw new UnsupportedMediaTypeStatusException(contentType, new ArrayList<>(mediaTypes))__		}__		if (helper.hasProducesMismatch()) {_			Set<MediaType> mediaTypes = helper.getProducibleMediaTypes()__			throw new NotAcceptableStatusException(new ArrayList<>(mediaTypes))__		}__		if (helper.hasParamsMismatch()) {_			throw new ServerWebInputException(_					"Unsatisfied query parameter conditions: " + helper.getParamConditions() +_							", actual parameters: " + request.getQueryParams())__		}__		return null__	};iterate,all,request,mapping,infos,once,again,look,if,any,match,by,url,at,least,and,raise,exceptions,accordingly,throws,method,not,allowed,exception,for,matches,by,url,but,not,by,http,method,throws,unsupported,media,type,status,exception,if,there,are,matches,by,url,and,http,method,but,not,by,consumable,media,types,throws,not,acceptable,status,exception,if,there,are,matches,by,url,and,http,method,but,not,by,producible,media,types,throws,server,web,input,exception,if,there,are,matches,by,url,and,http,method,but,not,by,query,parameter,conditions;override,protected,handler,method,handle,no,match,set,request,mapping,info,infos,string,lookup,path,server,web,exchange,exchange,throws,exception,partial,match,helper,helper,new,partial,match,helper,infos,exchange,if,helper,is,empty,return,null,server,http,request,request,exchange,get,request,if,helper,has,methods,mismatch,string,http,method,request,get,method,value,set,http,method,methods,helper,get,allowed,methods,if,http,method,options,matches,http,method,http,options,handler,handler,new,http,options,handler,methods,return,new,handler,method,handler,throw,new,method,not,allowed,exception,http,method,methods,if,helper,has,consumes,mismatch,set,media,type,media,types,helper,get,consumable,media,types,media,type,content,type,try,content,type,request,get,headers,get,content,type,catch,invalid,media,type,exception,ex,throw,new,unsupported,media,type,status,exception,ex,get,message,throw,new,unsupported,media,type,status,exception,content,type,new,array,list,media,types,if,helper,has,produces,mismatch,set,media,type,media,types,helper,get,producible,media,types,throw,new,not,acceptable,status,exception,new,array,list,media,types,if,helper,has,params,mismatch,throw,new,server,web,input,exception,unsatisfied,query,parameter,conditions,helper,get,param,conditions,actual,parameters,request,get,query,params,return,null
RequestMappingInfoHandlerMapping -> @Override 	protected HandlerMethod handleNoMatch(Set<RequestMappingInfo> infos, String lookupPath, 			ServerWebExchange exchange) throws Exception;1498861175;Iterate all RequestMappingInfos once again, look if any match by URL at_least and raise exceptions accordingly._@throws MethodNotAllowedException for matches by URL but not by HTTP method_@throws UnsupportedMediaTypeStatusException if there are matches by URL_and HTTP method but not by consumable media types_@throws NotAcceptableStatusException if there are matches by URL and HTTP_method but not by producible media types_@throws ServerWebInputException if there are matches by URL and HTTP_method but not by query parameter conditions;@Override_	protected HandlerMethod handleNoMatch(Set<RequestMappingInfo> infos, String lookupPath,_			ServerWebExchange exchange) throws Exception {__		PartialMatchHelper helper = new PartialMatchHelper(infos, exchange)___		if (helper.isEmpty()) {_			return null__		}__		ServerHttpRequest request = exchange.getRequest()___		if (helper.hasMethodsMismatch()) {_			String httpMethod = request.getMethodValue()__			Set<HttpMethod> methods = helper.getAllowedMethods()__			if (HttpMethod.OPTIONS.matches(httpMethod)) {_				HttpOptionsHandler handler = new HttpOptionsHandler(methods)__				return new HandlerMethod(handler, HTTP_OPTIONS_HANDLE_METHOD)__			}_			throw new MethodNotAllowedException(httpMethod, methods)__		}__		if (helper.hasConsumesMismatch()) {_			Set<MediaType> mediaTypes = helper.getConsumableMediaTypes()__			MediaType contentType__			try {_				contentType = request.getHeaders().getContentType()__			}_			catch (InvalidMediaTypeException ex) {_				throw new UnsupportedMediaTypeStatusException(ex.getMessage())__			}_			throw new UnsupportedMediaTypeStatusException(contentType, new ArrayList<>(mediaTypes))__		}__		if (helper.hasProducesMismatch()) {_			Set<MediaType> mediaTypes = helper.getProducibleMediaTypes()__			throw new NotAcceptableStatusException(new ArrayList<>(mediaTypes))__		}__		if (helper.hasParamsMismatch()) {_			throw new ServerWebInputException(_					"Unsatisfied query parameter conditions: " + helper.getParamConditions() +_							", actual parameters: " + request.getQueryParams())__		}__		return null__	};iterate,all,request,mapping,infos,once,again,look,if,any,match,by,url,at,least,and,raise,exceptions,accordingly,throws,method,not,allowed,exception,for,matches,by,url,but,not,by,http,method,throws,unsupported,media,type,status,exception,if,there,are,matches,by,url,and,http,method,but,not,by,consumable,media,types,throws,not,acceptable,status,exception,if,there,are,matches,by,url,and,http,method,but,not,by,producible,media,types,throws,server,web,input,exception,if,there,are,matches,by,url,and,http,method,but,not,by,query,parameter,conditions;override,protected,handler,method,handle,no,match,set,request,mapping,info,infos,string,lookup,path,server,web,exchange,exchange,throws,exception,partial,match,helper,helper,new,partial,match,helper,infos,exchange,if,helper,is,empty,return,null,server,http,request,request,exchange,get,request,if,helper,has,methods,mismatch,string,http,method,request,get,method,value,set,http,method,methods,helper,get,allowed,methods,if,http,method,options,matches,http,method,http,options,handler,handler,new,http,options,handler,methods,return,new,handler,method,handler,throw,new,method,not,allowed,exception,http,method,methods,if,helper,has,consumes,mismatch,set,media,type,media,types,helper,get,consumable,media,types,media,type,content,type,try,content,type,request,get,headers,get,content,type,catch,invalid,media,type,exception,ex,throw,new,unsupported,media,type,status,exception,ex,get,message,throw,new,unsupported,media,type,status,exception,content,type,new,array,list,media,types,if,helper,has,produces,mismatch,set,media,type,media,types,helper,get,producible,media,types,throw,new,not,acceptable,status,exception,new,array,list,media,types,if,helper,has,params,mismatch,throw,new,server,web,input,exception,unsatisfied,query,parameter,conditions,helper,get,param,conditions,actual,parameters,request,get,query,params,return,null
