# id;timestamp;commentText;codeText;commentWords;codeWords
ResourceHandlerRegistration -> public ResourceChainRegistration resourceChain(boolean cacheResources);1485986572;Configure a chain of resource resolvers and transformers to use. This_can be useful, for example, to apply a version strategy to resource URLs.__<p>If this method is not invoked, by default only a simple_{@code PathResourceResolver} is used in order to match URL paths to_resources under the configured locations.__@param cacheResources whether to cache the result of resource resolution__setting this to "true" is recommended for production (and "false" for_development, especially when applying a version strategy)_@return the same {@link ResourceHandlerRegistration} instance, for_chained method invocation;public ResourceChainRegistration resourceChain(boolean cacheResources) {_		this.resourceChainRegistration = new ResourceChainRegistration(cacheResources)__		return this.resourceChainRegistration__	};configure,a,chain,of,resource,resolvers,and,transformers,to,use,this,can,be,useful,for,example,to,apply,a,version,strategy,to,resource,urls,p,if,this,method,is,not,invoked,by,default,only,a,simple,code,path,resource,resolver,is,used,in,order,to,match,url,paths,to,resources,under,the,configured,locations,param,cache,resources,whether,to,cache,the,result,of,resource,resolution,setting,this,to,true,is,recommended,for,production,and,false,for,development,especially,when,applying,a,version,strategy,return,the,same,link,resource,handler,registration,instance,for,chained,method,invocation;public,resource,chain,registration,resource,chain,boolean,cache,resources,this,resource,chain,registration,new,resource,chain,registration,cache,resources,return,this,resource,chain,registration
ResourceHandlerRegistration -> public ResourceChainRegistration resourceChain(boolean cacheResources);1498780456;Configure a chain of resource resolvers and transformers to use. This_can be useful, for example, to apply a version strategy to resource URLs._<p>If this method is not invoked, by default only a simple_{@code PathResourceResolver} is used in order to match URL paths to_resources under the configured locations._@param cacheResources whether to cache the result of resource resolution__setting this to "true" is recommended for production (and "false" for_development, especially when applying a version strategy)_@return the same {@link ResourceHandlerRegistration} instance, for_chained method invocation;public ResourceChainRegistration resourceChain(boolean cacheResources) {_		this.resourceChainRegistration = new ResourceChainRegistration(cacheResources)__		return this.resourceChainRegistration__	};configure,a,chain,of,resource,resolvers,and,transformers,to,use,this,can,be,useful,for,example,to,apply,a,version,strategy,to,resource,urls,p,if,this,method,is,not,invoked,by,default,only,a,simple,code,path,resource,resolver,is,used,in,order,to,match,url,paths,to,resources,under,the,configured,locations,param,cache,resources,whether,to,cache,the,result,of,resource,resolution,setting,this,to,true,is,recommended,for,production,and,false,for,development,especially,when,applying,a,version,strategy,return,the,same,link,resource,handler,registration,instance,for,chained,method,invocation;public,resource,chain,registration,resource,chain,boolean,cache,resources,this,resource,chain,registration,new,resource,chain,registration,cache,resources,return,this,resource,chain,registration
ResourceHandlerRegistration -> public ResourceChainRegistration resourceChain(boolean cacheResources);1529721864;Configure a chain of resource resolvers and transformers to use. This_can be useful, for example, to apply a version strategy to resource URLs._<p>If this method is not invoked, by default only a simple_{@code PathResourceResolver} is used in order to match URL paths to_resources under the configured locations._@param cacheResources whether to cache the result of resource resolution__setting this to "true" is recommended for production (and "false" for_development, especially when applying a version strategy)_@return the same {@link ResourceHandlerRegistration} instance, for_chained method invocation;public ResourceChainRegistration resourceChain(boolean cacheResources) {_		this.resourceChainRegistration = new ResourceChainRegistration(cacheResources)__		return this.resourceChainRegistration__	};configure,a,chain,of,resource,resolvers,and,transformers,to,use,this,can,be,useful,for,example,to,apply,a,version,strategy,to,resource,urls,p,if,this,method,is,not,invoked,by,default,only,a,simple,code,path,resource,resolver,is,used,in,order,to,match,url,paths,to,resources,under,the,configured,locations,param,cache,resources,whether,to,cache,the,result,of,resource,resolution,setting,this,to,true,is,recommended,for,production,and,false,for,development,especially,when,applying,a,version,strategy,return,the,same,link,resource,handler,registration,instance,for,chained,method,invocation;public,resource,chain,registration,resource,chain,boolean,cache,resources,this,resource,chain,registration,new,resource,chain,registration,cache,resources,return,this,resource,chain,registration
ResourceHandlerRegistration -> public ResourceHandlerRegistration addResourceLocations(String... resourceLocations);1485986572;Add one or more resource locations from which to serve static content._Each location must point to a valid directory. Multiple locations may_be specified as a comma-separated list, and the locations will be checked_for a given resource in the order specified.__<p>For example, {{@code "/"},_{@code "classpath:/META-INF/public-web-resources/"}} allows resources to_be served both from the web application root and from any JAR on the_classpath that contains a {@code /META-INF/public-web-resources/} directory,_with resources in the web application root taking precedence._@return the same {@link ResourceHandlerRegistration} instance, for_chained method invocation;public ResourceHandlerRegistration addResourceLocations(String... resourceLocations) {_		for (String location : resourceLocations) {_			this.locations.add(resourceLoader.getResource(location))__		}_		return this__	};add,one,or,more,resource,locations,from,which,to,serve,static,content,each,location,must,point,to,a,valid,directory,multiple,locations,may,be,specified,as,a,comma,separated,list,and,the,locations,will,be,checked,for,a,given,resource,in,the,order,specified,p,for,example,code,code,classpath,meta,inf,public,web,resources,allows,resources,to,be,served,both,from,the,web,application,root,and,from,any,jar,on,the,classpath,that,contains,a,code,meta,inf,public,web,resources,directory,with,resources,in,the,web,application,root,taking,precedence,return,the,same,link,resource,handler,registration,instance,for,chained,method,invocation;public,resource,handler,registration,add,resource,locations,string,resource,locations,for,string,location,resource,locations,this,locations,add,resource,loader,get,resource,location,return,this
ResourceHandlerRegistration -> public ResourceHandlerRegistration addResourceLocations(String... resourceLocations);1498780456;Add one or more resource locations from which to serve static content._Each location must point to a valid directory. Multiple locations may_be specified as a comma-separated list, and the locations will be checked_for a given resource in the order specified.__<p>For example, {{@code "/"},_{@code "classpath:/META-INF/public-web-resources/"}} allows resources to_be served both from the web application root and from any JAR on the_classpath that contains a {@code /META-INF/public-web-resources/} directory,_with resources in the web application root taking precedence._@return the same {@link ResourceHandlerRegistration} instance, for_chained method invocation;public ResourceHandlerRegistration addResourceLocations(String... resourceLocations) {_		for (String location : resourceLocations) {_			this.locations.add(this.resourceLoader.getResource(location))__		}_		return this__	};add,one,or,more,resource,locations,from,which,to,serve,static,content,each,location,must,point,to,a,valid,directory,multiple,locations,may,be,specified,as,a,comma,separated,list,and,the,locations,will,be,checked,for,a,given,resource,in,the,order,specified,p,for,example,code,code,classpath,meta,inf,public,web,resources,allows,resources,to,be,served,both,from,the,web,application,root,and,from,any,jar,on,the,classpath,that,contains,a,code,meta,inf,public,web,resources,directory,with,resources,in,the,web,application,root,taking,precedence,return,the,same,link,resource,handler,registration,instance,for,chained,method,invocation;public,resource,handler,registration,add,resource,locations,string,resource,locations,for,string,location,resource,locations,this,locations,add,this,resource,loader,get,resource,location,return,this
ResourceHandlerRegistration -> public ResourceHandlerRegistration addResourceLocations(String... resourceLocations);1529721864;Add one or more resource locations from which to serve static content._Each location must point to a valid directory. Multiple locations may_be specified as a comma-separated list, and the locations will be checked_for a given resource in the order specified.__<p>For example, {{@code "/"},_{@code "classpath:/META-INF/public-web-resources/"}} allows resources to_be served both from the web application root and from any JAR on the_classpath that contains a {@code /META-INF/public-web-resources/} directory,_with resources in the web application root taking precedence._@return the same {@link ResourceHandlerRegistration} instance, for_chained method invocation;public ResourceHandlerRegistration addResourceLocations(String... resourceLocations) {_		this.locationValues.addAll(Arrays.asList(resourceLocations))__		return this__	};add,one,or,more,resource,locations,from,which,to,serve,static,content,each,location,must,point,to,a,valid,directory,multiple,locations,may,be,specified,as,a,comma,separated,list,and,the,locations,will,be,checked,for,a,given,resource,in,the,order,specified,p,for,example,code,code,classpath,meta,inf,public,web,resources,allows,resources,to,be,served,both,from,the,web,application,root,and,from,any,jar,on,the,classpath,that,contains,a,code,meta,inf,public,web,resources,directory,with,resources,in,the,web,application,root,taking,precedence,return,the,same,link,resource,handler,registration,instance,for,chained,method,invocation;public,resource,handler,registration,add,resource,locations,string,resource,locations,this,location,values,add,all,arrays,as,list,resource,locations,return,this
ResourceHandlerRegistration -> public ResourceHandlerRegistration setCacheControl(CacheControl cacheControl);1485986572;Specify the {@link CacheControl} which should be used_by the resource handler.__@param cacheControl the CacheControl configuration to use_@return the same {@link ResourceHandlerRegistration} instance, for_chained method invocation;public ResourceHandlerRegistration setCacheControl(CacheControl cacheControl) {_		this.cacheControl = cacheControl__		return this__	};specify,the,link,cache,control,which,should,be,used,by,the,resource,handler,param,cache,control,the,cache,control,configuration,to,use,return,the,same,link,resource,handler,registration,instance,for,chained,method,invocation;public,resource,handler,registration,set,cache,control,cache,control,cache,control,this,cache,control,cache,control,return,this
ResourceHandlerRegistration -> public ResourceHandlerRegistration setCacheControl(CacheControl cacheControl);1498780456;Specify the {@link CacheControl} which should be used_by the resource handler._@param cacheControl the CacheControl configuration to use_@return the same {@link ResourceHandlerRegistration} instance, for_chained method invocation;public ResourceHandlerRegistration setCacheControl(CacheControl cacheControl) {_		this.cacheControl = cacheControl__		return this__	};specify,the,link,cache,control,which,should,be,used,by,the,resource,handler,param,cache,control,the,cache,control,configuration,to,use,return,the,same,link,resource,handler,registration,instance,for,chained,method,invocation;public,resource,handler,registration,set,cache,control,cache,control,cache,control,this,cache,control,cache,control,return,this
ResourceHandlerRegistration -> public ResourceHandlerRegistration setCacheControl(CacheControl cacheControl);1529721864;Specify the {@link CacheControl} which should be used_by the resource handler._@param cacheControl the CacheControl configuration to use_@return the same {@link ResourceHandlerRegistration} instance, for_chained method invocation;public ResourceHandlerRegistration setCacheControl(CacheControl cacheControl) {_		this.cacheControl = cacheControl__		return this__	};specify,the,link,cache,control,which,should,be,used,by,the,resource,handler,param,cache,control,the,cache,control,configuration,to,use,return,the,same,link,resource,handler,registration,instance,for,chained,method,invocation;public,resource,handler,registration,set,cache,control,cache,control,cache,control,this,cache,control,cache,control,return,this
ResourceHandlerRegistration -> public ResourceChainRegistration resourceChain(boolean cacheResources, Cache cache);1485986572;Configure a chain of resource resolvers and transformers to use. This_can be useful, for example, to apply a version strategy to resource URLs.__<p>If this method is not invoked, by default only a simple_{@code PathResourceResolver} is used in order to match URL paths to_resources under the configured locations.__@param cacheResources whether to cache the result of resource resolution__setting this to "true" is recommended for production (and "false" for_development, especially when applying a version strategy_@param cache the cache to use for storing resolved and transformed resources__by default a {@link org.springframework.cache.concurrent.ConcurrentMapCache}_is used. Since Resources aren't serializable and can be dependent on the_application host, one should not use a distributed cache but rather an_in-memory cache._@return the same {@link ResourceHandlerRegistration} instance, for chained method invocation;public ResourceChainRegistration resourceChain(boolean cacheResources, Cache cache) {_		this.resourceChainRegistration = new ResourceChainRegistration(cacheResources, cache)__		return this.resourceChainRegistration__	};configure,a,chain,of,resource,resolvers,and,transformers,to,use,this,can,be,useful,for,example,to,apply,a,version,strategy,to,resource,urls,p,if,this,method,is,not,invoked,by,default,only,a,simple,code,path,resource,resolver,is,used,in,order,to,match,url,paths,to,resources,under,the,configured,locations,param,cache,resources,whether,to,cache,the,result,of,resource,resolution,setting,this,to,true,is,recommended,for,production,and,false,for,development,especially,when,applying,a,version,strategy,param,cache,the,cache,to,use,for,storing,resolved,and,transformed,resources,by,default,a,link,org,springframework,cache,concurrent,concurrent,map,cache,is,used,since,resources,aren,t,serializable,and,can,be,dependent,on,the,application,host,one,should,not,use,a,distributed,cache,but,rather,an,in,memory,cache,return,the,same,link,resource,handler,registration,instance,for,chained,method,invocation;public,resource,chain,registration,resource,chain,boolean,cache,resources,cache,cache,this,resource,chain,registration,new,resource,chain,registration,cache,resources,cache,return,this,resource,chain,registration
ResourceHandlerRegistration -> public ResourceChainRegistration resourceChain(boolean cacheResources, Cache cache);1498780456;Configure a chain of resource resolvers and transformers to use. This_can be useful, for example, to apply a version strategy to resource URLs._<p>If this method is not invoked, by default only a simple_{@code PathResourceResolver} is used in order to match URL paths to_resources under the configured locations._@param cacheResources whether to cache the result of resource resolution__setting this to "true" is recommended for production (and "false" for_development, especially when applying a version strategy_@param cache the cache to use for storing resolved and transformed resources__by default a {@link org.springframework.cache.concurrent.ConcurrentMapCache}_is used. Since Resources aren't serializable and can be dependent on the_application host, one should not use a distributed cache but rather an_in-memory cache._@return the same {@link ResourceHandlerRegistration} instance, for chained method invocation;public ResourceChainRegistration resourceChain(boolean cacheResources, Cache cache) {_		this.resourceChainRegistration = new ResourceChainRegistration(cacheResources, cache)__		return this.resourceChainRegistration__	};configure,a,chain,of,resource,resolvers,and,transformers,to,use,this,can,be,useful,for,example,to,apply,a,version,strategy,to,resource,urls,p,if,this,method,is,not,invoked,by,default,only,a,simple,code,path,resource,resolver,is,used,in,order,to,match,url,paths,to,resources,under,the,configured,locations,param,cache,resources,whether,to,cache,the,result,of,resource,resolution,setting,this,to,true,is,recommended,for,production,and,false,for,development,especially,when,applying,a,version,strategy,param,cache,the,cache,to,use,for,storing,resolved,and,transformed,resources,by,default,a,link,org,springframework,cache,concurrent,concurrent,map,cache,is,used,since,resources,aren,t,serializable,and,can,be,dependent,on,the,application,host,one,should,not,use,a,distributed,cache,but,rather,an,in,memory,cache,return,the,same,link,resource,handler,registration,instance,for,chained,method,invocation;public,resource,chain,registration,resource,chain,boolean,cache,resources,cache,cache,this,resource,chain,registration,new,resource,chain,registration,cache,resources,cache,return,this,resource,chain,registration
ResourceHandlerRegistration -> public ResourceChainRegistration resourceChain(boolean cacheResources, Cache cache);1529721864;Configure a chain of resource resolvers and transformers to use. This_can be useful, for example, to apply a version strategy to resource URLs._<p>If this method is not invoked, by default only a simple_{@code PathResourceResolver} is used in order to match URL paths to_resources under the configured locations._@param cacheResources whether to cache the result of resource resolution__setting this to "true" is recommended for production (and "false" for_development, especially when applying a version strategy_@param cache the cache to use for storing resolved and transformed resources__by default a {@link org.springframework.cache.concurrent.ConcurrentMapCache}_is used. Since Resources aren't serializable and can be dependent on the_application host, one should not use a distributed cache but rather an_in-memory cache._@return the same {@link ResourceHandlerRegistration} instance, for chained method invocation;public ResourceChainRegistration resourceChain(boolean cacheResources, Cache cache) {_		this.resourceChainRegistration = new ResourceChainRegistration(cacheResources, cache)__		return this.resourceChainRegistration__	};configure,a,chain,of,resource,resolvers,and,transformers,to,use,this,can,be,useful,for,example,to,apply,a,version,strategy,to,resource,urls,p,if,this,method,is,not,invoked,by,default,only,a,simple,code,path,resource,resolver,is,used,in,order,to,match,url,paths,to,resources,under,the,configured,locations,param,cache,resources,whether,to,cache,the,result,of,resource,resolution,setting,this,to,true,is,recommended,for,production,and,false,for,development,especially,when,applying,a,version,strategy,param,cache,the,cache,to,use,for,storing,resolved,and,transformed,resources,by,default,a,link,org,springframework,cache,concurrent,concurrent,map,cache,is,used,since,resources,aren,t,serializable,and,can,be,dependent,on,the,application,host,one,should,not,use,a,distributed,cache,but,rather,an,in,memory,cache,return,the,same,link,resource,handler,registration,instance,for,chained,method,invocation;public,resource,chain,registration,resource,chain,boolean,cache,resources,cache,cache,this,resource,chain,registration,new,resource,chain,registration,cache,resources,cache,return,this,resource,chain,registration
ResourceHandlerRegistration -> protected String[] getPathPatterns();1485986572;Returns the URL path patterns for the resource handler.;protected String[] getPathPatterns() {_		return this.pathPatterns__	};returns,the,url,path,patterns,for,the,resource,handler;protected,string,get,path,patterns,return,this,path,patterns
ResourceHandlerRegistration -> protected String[] getPathPatterns();1498780456;Returns the URL path patterns for the resource handler.;protected String[] getPathPatterns() {_		return this.pathPatterns__	};returns,the,url,path,patterns,for,the,resource,handler;protected,string,get,path,patterns,return,this,path,patterns
ResourceHandlerRegistration -> protected String[] getPathPatterns();1529721864;Returns the URL path patterns for the resource handler.;protected String[] getPathPatterns() {_		return this.pathPatterns__	};returns,the,url,path,patterns,for,the,resource,handler;protected,string,get,path,patterns,return,this,path,patterns
ResourceHandlerRegistration -> protected ResourceWebHandler getRequestHandler();1485986572;Returns a {@link ResourceWebHandler} instance.;protected ResourceWebHandler getRequestHandler() {_		ResourceWebHandler handler = new ResourceWebHandler()__		if (this.resourceChainRegistration != null) {_			handler.setResourceResolvers(this.resourceChainRegistration.getResourceResolvers())__			handler.setResourceTransformers(this.resourceChainRegistration.getResourceTransformers())__		}_		handler.setLocations(this.locations)__		if (this.cacheControl != null) {_			handler.setCacheControl(this.cacheControl)__		}_		return handler__	};returns,a,link,resource,web,handler,instance;protected,resource,web,handler,get,request,handler,resource,web,handler,handler,new,resource,web,handler,if,this,resource,chain,registration,null,handler,set,resource,resolvers,this,resource,chain,registration,get,resource,resolvers,handler,set,resource,transformers,this,resource,chain,registration,get,resource,transformers,handler,set,locations,this,locations,if,this,cache,control,null,handler,set,cache,control,this,cache,control,return,handler
ResourceHandlerRegistration -> protected ResourceWebHandler getRequestHandler();1498780456;Returns a {@link ResourceWebHandler} instance.;protected ResourceWebHandler getRequestHandler() {_		ResourceWebHandler handler = new ResourceWebHandler()__		if (this.resourceChainRegistration != null) {_			handler.setResourceResolvers(this.resourceChainRegistration.getResourceResolvers())__			handler.setResourceTransformers(this.resourceChainRegistration.getResourceTransformers())__		}_		handler.setLocations(this.locations)__		if (this.cacheControl != null) {_			handler.setCacheControl(this.cacheControl)__		}_		return handler__	};returns,a,link,resource,web,handler,instance;protected,resource,web,handler,get,request,handler,resource,web,handler,handler,new,resource,web,handler,if,this,resource,chain,registration,null,handler,set,resource,resolvers,this,resource,chain,registration,get,resource,resolvers,handler,set,resource,transformers,this,resource,chain,registration,get,resource,transformers,handler,set,locations,this,locations,if,this,cache,control,null,handler,set,cache,control,this,cache,control,return,handler
ResourceHandlerRegistration -> protected ResourceWebHandler getRequestHandler();1529721864;Returns a {@link ResourceWebHandler} instance.;protected ResourceWebHandler getRequestHandler() {_		ResourceWebHandler handler = new ResourceWebHandler()__		handler.setLocationValues(this.locationValues)__		handler.setResourceLoader(this.resourceLoader)__		if (this.resourceChainRegistration != null) {_			handler.setResourceResolvers(this.resourceChainRegistration.getResourceResolvers())__			handler.setResourceTransformers(this.resourceChainRegistration.getResourceTransformers())__		}_		if (this.cacheControl != null) {_			handler.setCacheControl(this.cacheControl)__		}_		return handler__	};returns,a,link,resource,web,handler,instance;protected,resource,web,handler,get,request,handler,resource,web,handler,handler,new,resource,web,handler,handler,set,location,values,this,location,values,handler,set,resource,loader,this,resource,loader,if,this,resource,chain,registration,null,handler,set,resource,resolvers,this,resource,chain,registration,get,resource,resolvers,handler,set,resource,transformers,this,resource,chain,registration,get,resource,transformers,if,this,cache,control,null,handler,set,cache,control,this,cache,control,return,handler
ResourceHandlerRegistration -> public ResourceHandlerRegistration(ResourceLoader resourceLoader, String... pathPatterns);1485986572;Create a {@link ResourceHandlerRegistration} instance._@param resourceLoader a resource loader for turning a String location_into a {@link Resource}_@param pathPatterns one or more resource URL path patterns;public ResourceHandlerRegistration(ResourceLoader resourceLoader, String... pathPatterns) {_		Assert.notEmpty(pathPatterns, "At least one path pattern is required for resource handling.")__		this.resourceLoader = resourceLoader__		this.pathPatterns = pathPatterns__	};create,a,link,resource,handler,registration,instance,param,resource,loader,a,resource,loader,for,turning,a,string,location,into,a,link,resource,param,path,patterns,one,or,more,resource,url,path,patterns;public,resource,handler,registration,resource,loader,resource,loader,string,path,patterns,assert,not,empty,path,patterns,at,least,one,path,pattern,is,required,for,resource,handling,this,resource,loader,resource,loader,this,path,patterns,path,patterns
ResourceHandlerRegistration -> public ResourceHandlerRegistration(ResourceLoader resourceLoader, String... pathPatterns);1498780456;Create a {@link ResourceHandlerRegistration} instance._@param resourceLoader a resource loader for turning a String location_into a {@link Resource}_@param pathPatterns one or more resource URL path patterns;public ResourceHandlerRegistration(ResourceLoader resourceLoader, String... pathPatterns) {_		Assert.notNull(resourceLoader, "ResourceLoader is required")__		Assert.notEmpty(pathPatterns, "At least one path pattern is required for resource handling")__		this.resourceLoader = resourceLoader__		this.pathPatterns = pathPatterns__	};create,a,link,resource,handler,registration,instance,param,resource,loader,a,resource,loader,for,turning,a,string,location,into,a,link,resource,param,path,patterns,one,or,more,resource,url,path,patterns;public,resource,handler,registration,resource,loader,resource,loader,string,path,patterns,assert,not,null,resource,loader,resource,loader,is,required,assert,not,empty,path,patterns,at,least,one,path,pattern,is,required,for,resource,handling,this,resource,loader,resource,loader,this,path,patterns,path,patterns
ResourceHandlerRegistration -> public ResourceHandlerRegistration(ResourceLoader resourceLoader, String... pathPatterns);1529721864;Create a {@link ResourceHandlerRegistration} instance._@param resourceLoader a resource loader for turning a String location_into a {@link Resource}_@param pathPatterns one or more resource URL path patterns;public ResourceHandlerRegistration(ResourceLoader resourceLoader, String... pathPatterns) {_		Assert.notNull(resourceLoader, "ResourceLoader is required")__		Assert.notEmpty(pathPatterns, "At least one path pattern is required for resource handling")__		this.resourceLoader = resourceLoader__		this.pathPatterns = pathPatterns__	};create,a,link,resource,handler,registration,instance,param,resource,loader,a,resource,loader,for,turning,a,string,location,into,a,link,resource,param,path,patterns,one,or,more,resource,url,path,patterns;public,resource,handler,registration,resource,loader,resource,loader,string,path,patterns,assert,not,null,resource,loader,resource,loader,is,required,assert,not,empty,path,patterns,at,least,one,path,pattern,is,required,for,resource,handling,this,resource,loader,resource,loader,this,path,patterns,path,patterns
