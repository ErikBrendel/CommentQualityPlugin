commented;modifiers;parameterAmount;loc;comment;code
false;public;1;5;;@Override public WebClient.Builder baseUrl(String baseUrl) {     this.baseUrl = baseUrl.     return this. }
false;public;1;5;;@Override public WebClient.Builder defaultUriVariables(Map<String, ?> defaultUriVariables) {     this.defaultUriVariables = defaultUriVariables.     return this. }
false;public;1;5;;@Override public WebClient.Builder uriBuilderFactory(UriBuilderFactory uriBuilderFactory) {     this.uriBuilderFactory = uriBuilderFactory.     return this. }
false;public;2;5;;@Override public WebClient.Builder defaultHeader(String header, String... values) {     initHeaders().put(header, Arrays.asList(values)).     return this. }
false;public;1;5;;@Override public WebClient.Builder defaultHeaders(Consumer<HttpHeaders> headersConsumer) {     headersConsumer.accept(initHeaders()).     return this. }
false;private;0;6;;private HttpHeaders initHeaders() {     if (this.defaultHeaders == null) {         this.defaultHeaders = new HttpHeaders().     }     return this.defaultHeaders. }
false;public;2;5;;@Override public WebClient.Builder defaultCookie(String cookie, String... values) {     initCookies().addAll(cookie, Arrays.asList(values)).     return this. }
false;public;1;5;;@Override public WebClient.Builder defaultCookies(Consumer<MultiValueMap<String, String>> cookiesConsumer) {     cookiesConsumer.accept(initCookies()).     return this. }
false;private;0;6;;private MultiValueMap<String, String> initCookies() {     if (this.defaultCookies == null) {         this.defaultCookies = new LinkedMultiValueMap<>(4).     }     return this.defaultCookies. }
false;public;1;6;;@Override public WebClient.Builder defaultRequest(Consumer<WebClient.RequestHeadersSpec<?>> defaultRequest) {     this.defaultRequest = this.defaultRequest != null ? this.defaultRequest.andThen(defaultRequest) : defaultRequest.     return this. }
false;public;1;5;;@Override public WebClient.Builder clientConnector(ClientHttpConnector connector) {     this.connector = connector.     return this. }
false;public;1;6;;@Override public WebClient.Builder filter(ExchangeFilterFunction filter) {     Assert.notNull(filter, "ExchangeFilterFunction must not be null").     initFilters().add(filter).     return this. }
false;public;1;5;;@Override public WebClient.Builder filters(Consumer<List<ExchangeFilterFunction>> filtersConsumer) {     filtersConsumer.accept(initFilters()).     return this. }
false;private;0;6;;private List<ExchangeFilterFunction> initFilters() {     if (this.filters == null) {         this.filters = new ArrayList<>().     }     return this.filters. }
false;public;1;5;;@Override public WebClient.Builder exchangeFunction(ExchangeFunction exchangeFunction) {     this.exchangeFunction = exchangeFunction.     return this. }
false;public;1;6;;@Override public WebClient.Builder exchangeStrategies(ExchangeStrategies strategies) {     Assert.notNull(strategies, "ExchangeStrategies must not be null").     this.exchangeStrategies = strategies.     return this. }
false;public;0;12;;@Override public WebClient build() {     ExchangeFunction exchange = initExchangeFunction().     ExchangeFunction filteredExchange = (this.filters != null ? this.filters.stream().reduce(ExchangeFilterFunction::andThen).map(filter -> filter.apply(exchange)).orElse(exchange) : exchange).     return new DefaultWebClient(filteredExchange, initUriBuilderFactory(), this.defaultHeaders != null ? unmodifiableCopy(this.defaultHeaders) : null, this.defaultCookies != null ? unmodifiableCopy(this.defaultCookies) : null, this.defaultRequest, new DefaultWebClientBuilder(this)). }
false;private;0;11;;private ExchangeFunction initExchangeFunction() {     if (this.exchangeFunction != null) {         return this.exchangeFunction.     } else if (this.connector != null) {         return ExchangeFunctions.create(this.connector, this.exchangeStrategies).     } else {         return ExchangeFunctions.create(new ReactorClientHttpConnector(), this.exchangeStrategies).     } }
false;private;0;9;;private UriBuilderFactory initUriBuilderFactory() {     if (this.uriBuilderFactory != null) {         return this.uriBuilderFactory.     }     DefaultUriBuilderFactory factory = this.baseUrl != null ? new DefaultUriBuilderFactory(this.baseUrl) : new DefaultUriBuilderFactory().     factory.setDefaultUriVariables(this.defaultUriVariables).     return factory. }
false;private,static;1;3;;private static HttpHeaders unmodifiableCopy(HttpHeaders headers) {     return HttpHeaders.readOnlyHttpHeaders(headers). }
false;private,static;1;3;;private static <K, V> MultiValueMap<K, V> unmodifiableCopy(MultiValueMap<K, V> map) {     return CollectionUtils.unmodifiableMultiValueMap(new LinkedMultiValueMap<>(map)). }
false;public;0;4;;@Override public WebClient.Builder clone() {     return new DefaultWebClientBuilder(this). }
false;public;1;5;;@Override public WebClient.Builder apply(Consumer<WebClient.Builder> builderConsumer) {     builderConsumer.accept(this).     return this. }
