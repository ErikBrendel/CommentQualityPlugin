# id;timestamp;commentText;codeText;commentWords;codeWords
FreeMarkerView -> protected ObjectWrapper getObjectWrapper();1485986572;Return the configured FreeMarker {@link ObjectWrapper}, or the_{@link ObjectWrapper#DEFAULT_WRAPPER default wrapper} if none specified._@see freemarker.template.Configuration#getObjectWrapper();protected ObjectWrapper getObjectWrapper() {_		ObjectWrapper ow = getConfiguration().getObjectWrapper()__		Version version = Configuration.DEFAULT_INCOMPATIBLE_IMPROVEMENTS__		return (ow != null ? ow : new DefaultObjectWrapperBuilder(version).build())__	};return,the,configured,free,marker,link,object,wrapper,or,the,link,object,wrapper,default,wrapper,if,none,specified,see,freemarker,template,configuration,get,object,wrapper;protected,object,wrapper,get,object,wrapper,object,wrapper,ow,get,configuration,get,object,wrapper,version,version,configuration,return,ow,null,ow,new,default,object,wrapper,builder,version,build
FreeMarkerView -> protected ObjectWrapper getObjectWrapper();1491909547;Return the configured FreeMarker {@link ObjectWrapper}, or the_{@link ObjectWrapper#DEFAULT_WRAPPER default wrapper} if none specified._@see freemarker.template.Configuration#getObjectWrapper();protected ObjectWrapper getObjectWrapper() {_		ObjectWrapper ow = getConfiguration().getObjectWrapper()__		Version version = Configuration.DEFAULT_INCOMPATIBLE_IMPROVEMENTS__		return (ow != null ? ow : new DefaultObjectWrapperBuilder(version).build())__	};return,the,configured,free,marker,link,object,wrapper,or,the,link,object,wrapper,default,wrapper,if,none,specified,see,freemarker,template,configuration,get,object,wrapper;protected,object,wrapper,get,object,wrapper,object,wrapper,ow,get,configuration,get,object,wrapper,version,version,configuration,return,ow,null,ow,new,default,object,wrapper,builder,version,build
FreeMarkerView -> protected ObjectWrapper getObjectWrapper();1495591054;Return the configured FreeMarker {@link ObjectWrapper}, or the_{@link ObjectWrapper#DEFAULT_WRAPPER default wrapper} if none specified._@see freemarker.template.Configuration#getObjectWrapper();protected ObjectWrapper getObjectWrapper() {_		ObjectWrapper ow = getConfiguration().getObjectWrapper()__		Version version = Configuration.DEFAULT_INCOMPATIBLE_IMPROVEMENTS__		return (ow != null ? ow : new DefaultObjectWrapperBuilder(version).build())__	};return,the,configured,free,marker,link,object,wrapper,or,the,link,object,wrapper,default,wrapper,if,none,specified,see,freemarker,template,configuration,get,object,wrapper;protected,object,wrapper,get,object,wrapper,object,wrapper,ow,get,configuration,get,object,wrapper,version,version,configuration,return,ow,null,ow,new,default,object,wrapper,builder,version,build
FreeMarkerView -> protected ObjectWrapper getObjectWrapper();1496837955;Return the configured FreeMarker {@link ObjectWrapper}, or the_{@link ObjectWrapper#DEFAULT_WRAPPER default wrapper} if none specified._@see freemarker.template.Configuration#getObjectWrapper();protected ObjectWrapper getObjectWrapper() {_		ObjectWrapper ow = obtainConfiguration().getObjectWrapper()__		Version version = Configuration.DEFAULT_INCOMPATIBLE_IMPROVEMENTS__		return (ow != null ? ow : new DefaultObjectWrapperBuilder(version).build())__	};return,the,configured,free,marker,link,object,wrapper,or,the,link,object,wrapper,default,wrapper,if,none,specified,see,freemarker,template,configuration,get,object,wrapper;protected,object,wrapper,get,object,wrapper,object,wrapper,ow,obtain,configuration,get,object,wrapper,version,version,configuration,return,ow,null,ow,new,default,object,wrapper,builder,version,build
FreeMarkerView -> protected ObjectWrapper getObjectWrapper();1497341594;Return the configured FreeMarker {@link ObjectWrapper}, or the_{@link ObjectWrapper#DEFAULT_WRAPPER default wrapper} if none specified._@see freemarker.template.Configuration#getObjectWrapper();protected ObjectWrapper getObjectWrapper() {_		ObjectWrapper ow = obtainConfiguration().getObjectWrapper()__		Version version = Configuration.DEFAULT_INCOMPATIBLE_IMPROVEMENTS__		return (ow != null ? ow : new DefaultObjectWrapperBuilder(version).build())__	};return,the,configured,free,marker,link,object,wrapper,or,the,link,object,wrapper,default,wrapper,if,none,specified,see,freemarker,template,configuration,get,object,wrapper;protected,object,wrapper,get,object,wrapper,object,wrapper,ow,obtain,configuration,get,object,wrapper,version,version,configuration,return,ow,null,ow,new,default,object,wrapper,builder,version,build
FreeMarkerView -> protected ObjectWrapper getObjectWrapper();1497359418;Return the configured FreeMarker {@link ObjectWrapper}, or the_{@link ObjectWrapper#DEFAULT_WRAPPER default wrapper} if none specified._@see freemarker.template.Configuration#getObjectWrapper();protected ObjectWrapper getObjectWrapper() {_		ObjectWrapper ow = obtainConfiguration().getObjectWrapper()__		Version version = Configuration.DEFAULT_INCOMPATIBLE_IMPROVEMENTS__		return (ow != null ? ow : new DefaultObjectWrapperBuilder(version).build())__	};return,the,configured,free,marker,link,object,wrapper,or,the,link,object,wrapper,default,wrapper,if,none,specified,see,freemarker,template,configuration,get,object,wrapper;protected,object,wrapper,get,object,wrapper,object,wrapper,ow,obtain,configuration,get,object,wrapper,version,version,configuration,return,ow,null,ow,new,default,object,wrapper,builder,version,build
FreeMarkerView -> protected ObjectWrapper getObjectWrapper();1497974922;Return the configured FreeMarker {@link ObjectWrapper}, or the_{@link ObjectWrapper#DEFAULT_WRAPPER default wrapper} if none specified._@see freemarker.template.Configuration#getObjectWrapper();protected ObjectWrapper getObjectWrapper() {_		ObjectWrapper ow = obtainConfiguration().getObjectWrapper()__		Version version = Configuration.DEFAULT_INCOMPATIBLE_IMPROVEMENTS__		return (ow != null ? ow : new DefaultObjectWrapperBuilder(version).build())__	};return,the,configured,free,marker,link,object,wrapper,or,the,link,object,wrapper,default,wrapper,if,none,specified,see,freemarker,template,configuration,get,object,wrapper;protected,object,wrapper,get,object,wrapper,object,wrapper,ow,obtain,configuration,get,object,wrapper,version,version,configuration,return,ow,null,ow,new,default,object,wrapper,builder,version,build
FreeMarkerView -> protected ObjectWrapper getObjectWrapper();1500448076;Return the configured FreeMarker {@link ObjectWrapper}, or the_{@link ObjectWrapper#DEFAULT_WRAPPER default wrapper} if none specified._@see freemarker.template.Configuration#getObjectWrapper();protected ObjectWrapper getObjectWrapper() {_		ObjectWrapper ow = obtainConfiguration().getObjectWrapper()__		Version version = Configuration.DEFAULT_INCOMPATIBLE_IMPROVEMENTS__		return (ow != null ? ow : new DefaultObjectWrapperBuilder(version).build())__	};return,the,configured,free,marker,link,object,wrapper,or,the,link,object,wrapper,default,wrapper,if,none,specified,see,freemarker,template,configuration,get,object,wrapper;protected,object,wrapper,get,object,wrapper,object,wrapper,ow,obtain,configuration,get,object,wrapper,version,version,configuration,return,ow,null,ow,new,default,object,wrapper,builder,version,build
FreeMarkerView -> protected ObjectWrapper getObjectWrapper();1506067698;Return the configured FreeMarker {@link ObjectWrapper}, or the_{@link ObjectWrapper#DEFAULT_WRAPPER default wrapper} if none specified._@see freemarker.template.Configuration#getObjectWrapper();protected ObjectWrapper getObjectWrapper() {_		ObjectWrapper ow = obtainConfiguration().getObjectWrapper()__		Version version = Configuration.DEFAULT_INCOMPATIBLE_IMPROVEMENTS__		return (ow != null ? ow : new DefaultObjectWrapperBuilder(version).build())__	};return,the,configured,free,marker,link,object,wrapper,or,the,link,object,wrapper,default,wrapper,if,none,specified,see,freemarker,template,configuration,get,object,wrapper;protected,object,wrapper,get,object,wrapper,object,wrapper,ow,obtain,configuration,get,object,wrapper,version,version,configuration,return,ow,null,ow,new,default,object,wrapper,builder,version,build
FreeMarkerView -> protected ObjectWrapper getObjectWrapper();1529721864;Return the configured FreeMarker {@link ObjectWrapper}, or the_{@link ObjectWrapper#DEFAULT_WRAPPER default wrapper} if none specified._@see freemarker.template.Configuration#getObjectWrapper();protected ObjectWrapper getObjectWrapper() {_		ObjectWrapper ow = obtainConfiguration().getObjectWrapper()__		Version version = Configuration.DEFAULT_INCOMPATIBLE_IMPROVEMENTS__		return (ow != null ? ow : new DefaultObjectWrapperBuilder(version).build())__	};return,the,configured,free,marker,link,object,wrapper,or,the,link,object,wrapper,default,wrapper,if,none,specified,see,freemarker,template,configuration,get,object,wrapper;protected,object,wrapper,get,object,wrapper,object,wrapper,ow,obtain,configuration,get,object,wrapper,version,version,configuration,return,ow,null,ow,new,default,object,wrapper,builder,version,build
FreeMarkerView -> protected ObjectWrapper getObjectWrapper();1530793633;Return the configured FreeMarker {@link ObjectWrapper}, or the_{@link ObjectWrapper#DEFAULT_WRAPPER default wrapper} if none specified._@see freemarker.template.Configuration#getObjectWrapper();protected ObjectWrapper getObjectWrapper() {_		ObjectWrapper ow = obtainConfiguration().getObjectWrapper()__		Version version = Configuration.DEFAULT_INCOMPATIBLE_IMPROVEMENTS__		return (ow != null ? ow : new DefaultObjectWrapperBuilder(version).build())__	};return,the,configured,free,marker,link,object,wrapper,or,the,link,object,wrapper,default,wrapper,if,none,specified,see,freemarker,template,configuration,get,object,wrapper;protected,object,wrapper,get,object,wrapper,object,wrapper,ow,obtain,configuration,get,object,wrapper,version,version,configuration,return,ow,null,ow,new,default,object,wrapper,builder,version,build
FreeMarkerView -> public void setConfiguration(Configuration configuration);1485986572;Set the FreeMarker Configuration to be used by this view._<p>Typically this property is not set directly. Instead a single_{@link FreeMarkerConfig} is expected in the Spring application context_which is used to obtain the FreeMarker configuration.;public void setConfiguration(Configuration configuration) {_		this.configuration = configuration__	};set,the,free,marker,configuration,to,be,used,by,this,view,p,typically,this,property,is,not,set,directly,instead,a,single,link,free,marker,config,is,expected,in,the,spring,application,context,which,is,used,to,obtain,the,free,marker,configuration;public,void,set,configuration,configuration,configuration,this,configuration,configuration
FreeMarkerView -> public void setConfiguration(Configuration configuration);1491909547;Set the FreeMarker Configuration to be used by this view._<p>Typically this property is not set directly. Instead a single_{@link FreeMarkerConfig} is expected in the Spring application context_which is used to obtain the FreeMarker configuration.;public void setConfiguration(Configuration configuration) {_		this.configuration = configuration__	};set,the,free,marker,configuration,to,be,used,by,this,view,p,typically,this,property,is,not,set,directly,instead,a,single,link,free,marker,config,is,expected,in,the,spring,application,context,which,is,used,to,obtain,the,free,marker,configuration;public,void,set,configuration,configuration,configuration,this,configuration,configuration
FreeMarkerView -> public void setConfiguration(Configuration configuration);1495591054;Set the FreeMarker Configuration to be used by this view._<p>Typically this property is not set directly. Instead a single_{@link FreeMarkerConfig} is expected in the Spring application context_which is used to obtain the FreeMarker configuration.;public void setConfiguration(Configuration configuration) {_		this.configuration = configuration__	};set,the,free,marker,configuration,to,be,used,by,this,view,p,typically,this,property,is,not,set,directly,instead,a,single,link,free,marker,config,is,expected,in,the,spring,application,context,which,is,used,to,obtain,the,free,marker,configuration;public,void,set,configuration,configuration,configuration,this,configuration,configuration
FreeMarkerView -> public void setConfiguration(Configuration configuration);1496837955;Set the FreeMarker Configuration to be used by this view._<p>Typically this property is not set directly. Instead a single_{@link FreeMarkerConfig} is expected in the Spring application context_which is used to obtain the FreeMarker configuration.;public void setConfiguration(Configuration configuration) {_		this.configuration = configuration__	};set,the,free,marker,configuration,to,be,used,by,this,view,p,typically,this,property,is,not,set,directly,instead,a,single,link,free,marker,config,is,expected,in,the,spring,application,context,which,is,used,to,obtain,the,free,marker,configuration;public,void,set,configuration,configuration,configuration,this,configuration,configuration
FreeMarkerView -> public void setConfiguration(Configuration configuration);1497341594;Set the FreeMarker Configuration to be used by this view._<p>Typically this property is not set directly. Instead a single_{@link FreeMarkerConfig} is expected in the Spring application context_which is used to obtain the FreeMarker configuration.;public void setConfiguration(Configuration configuration) {_		this.configuration = configuration__	};set,the,free,marker,configuration,to,be,used,by,this,view,p,typically,this,property,is,not,set,directly,instead,a,single,link,free,marker,config,is,expected,in,the,spring,application,context,which,is,used,to,obtain,the,free,marker,configuration;public,void,set,configuration,configuration,configuration,this,configuration,configuration
FreeMarkerView -> public void setConfiguration(Configuration configuration);1497359418;Set the FreeMarker Configuration to be used by this view._<p>Typically this property is not set directly. Instead a single_{@link FreeMarkerConfig} is expected in the Spring application context_which is used to obtain the FreeMarker configuration.;public void setConfiguration(Configuration configuration) {_		this.configuration = configuration__	};set,the,free,marker,configuration,to,be,used,by,this,view,p,typically,this,property,is,not,set,directly,instead,a,single,link,free,marker,config,is,expected,in,the,spring,application,context,which,is,used,to,obtain,the,free,marker,configuration;public,void,set,configuration,configuration,configuration,this,configuration,configuration
FreeMarkerView -> public void setConfiguration(Configuration configuration);1497974922;Set the FreeMarker Configuration to be used by this view._<p>Typically this property is not set directly. Instead a single_{@link FreeMarkerConfig} is expected in the Spring application context_which is used to obtain the FreeMarker configuration.;public void setConfiguration(Configuration configuration) {_		this.configuration = configuration__	};set,the,free,marker,configuration,to,be,used,by,this,view,p,typically,this,property,is,not,set,directly,instead,a,single,link,free,marker,config,is,expected,in,the,spring,application,context,which,is,used,to,obtain,the,free,marker,configuration;public,void,set,configuration,configuration,configuration,this,configuration,configuration
FreeMarkerView -> protected Configuration getConfiguration();1485986572;Return the FreeMarker configuration used by this view.;protected Configuration getConfiguration() {_		return this.configuration__	};return,the,free,marker,configuration,used,by,this,view;protected,configuration,get,configuration,return,this,configuration
FreeMarkerView -> protected Configuration getConfiguration();1491909547;Return the FreeMarker configuration used by this view.;protected Configuration getConfiguration() {_		return this.configuration__	};return,the,free,marker,configuration,used,by,this,view;protected,configuration,get,configuration,return,this,configuration
FreeMarkerView -> protected Configuration getConfiguration();1495591054;Return the FreeMarker configuration used by this view.;protected Configuration getConfiguration() {_		return this.configuration__	};return,the,free,marker,configuration,used,by,this,view;protected,configuration,get,configuration,return,this,configuration
FreeMarkerView -> @Nullable 	protected Configuration getConfiguration();1496837955;Return the FreeMarker configuration used by this view.;@Nullable_	protected Configuration getConfiguration() {_		return this.configuration__	};return,the,free,marker,configuration,used,by,this,view;nullable,protected,configuration,get,configuration,return,this,configuration
FreeMarkerView -> @Nullable 	protected Configuration getConfiguration();1497341594;Return the FreeMarker configuration used by this view.;@Nullable_	protected Configuration getConfiguration() {_		return this.configuration__	};return,the,free,marker,configuration,used,by,this,view;nullable,protected,configuration,get,configuration,return,this,configuration
FreeMarkerView -> @Nullable 	protected Configuration getConfiguration();1497359418;Return the FreeMarker configuration used by this view.;@Nullable_	protected Configuration getConfiguration() {_		return this.configuration__	};return,the,free,marker,configuration,used,by,this,view;nullable,protected,configuration,get,configuration,return,this,configuration
FreeMarkerView -> @Nullable 	protected Configuration getConfiguration();1497974922;Return the FreeMarker configuration used by this view.;@Nullable_	protected Configuration getConfiguration() {_		return this.configuration__	};return,the,free,marker,configuration,used,by,this,view;nullable,protected,configuration,get,configuration,return,this,configuration
FreeMarkerView -> @Nullable 	protected Configuration getConfiguration();1500448076;Return the FreeMarker configuration used by this view.;@Nullable_	protected Configuration getConfiguration() {_		return this.configuration__	};return,the,free,marker,configuration,used,by,this,view;nullable,protected,configuration,get,configuration,return,this,configuration
FreeMarkerView -> @Nullable 	protected Configuration getConfiguration();1506067698;Return the FreeMarker configuration used by this view.;@Nullable_	protected Configuration getConfiguration() {_		return this.configuration__	};return,the,free,marker,configuration,used,by,this,view;nullable,protected,configuration,get,configuration,return,this,configuration
FreeMarkerView -> @Nullable 	protected Configuration getConfiguration();1529721864;Return the FreeMarker configuration used by this view.;@Nullable_	protected Configuration getConfiguration() {_		return this.configuration__	};return,the,free,marker,configuration,used,by,this,view;nullable,protected,configuration,get,configuration,return,this,configuration
FreeMarkerView -> @Nullable 	protected Configuration getConfiguration();1530793633;Return the FreeMarker configuration used by this view.;@Nullable_	protected Configuration getConfiguration() {_		return this.configuration__	};return,the,free,marker,configuration,used,by,this,view;nullable,protected,configuration,get,configuration,return,this,configuration
FreeMarkerView -> protected String getEncoding();1485986572;Return the encoding for the FreeMarker template.;protected String getEncoding() {_		return this.encoding__	};return,the,encoding,for,the,free,marker,template;protected,string,get,encoding,return,this,encoding
FreeMarkerView -> protected String getEncoding();1491909547;Return the encoding for the FreeMarker template.;protected String getEncoding() {_		return this.encoding__	};return,the,encoding,for,the,free,marker,template;protected,string,get,encoding,return,this,encoding
FreeMarkerView -> protected String getEncoding();1495591054;Return the encoding for the FreeMarker template.;protected String getEncoding() {_		return this.encoding__	};return,the,encoding,for,the,free,marker,template;protected,string,get,encoding,return,this,encoding
FreeMarkerView -> @Override 	public boolean checkResourceExists(Locale locale) throws Exception;1485986572;Check that the FreeMarker template used for this view exists and is valid._<p>Can be overridden to customize the behavior, for example in case of_multiple templates to be rendered into a single view.;@Override_	public boolean checkResourceExists(Locale locale) throws Exception {_		try {_			_			getTemplate(locale)__			return true__		}_		catch (FileNotFoundException ex) {_			if (logger.isDebugEnabled()) {_				logger.debug("No FreeMarker view found for URL: " + getUrl())__			}_			return false__		}_		catch (ParseException ex) {_			throw new ApplicationContextException(_					"Failed to parse FreeMarker template for URL [" +  getUrl() + "]", ex)__		}_		catch (IOException ex) {_			throw new ApplicationContextException(_					"Could not load FreeMarker template for URL [" + getUrl() + "]", ex)__		}_	};check,that,the,free,marker,template,used,for,this,view,exists,and,is,valid,p,can,be,overridden,to,customize,the,behavior,for,example,in,case,of,multiple,templates,to,be,rendered,into,a,single,view;override,public,boolean,check,resource,exists,locale,locale,throws,exception,try,get,template,locale,return,true,catch,file,not,found,exception,ex,if,logger,is,debug,enabled,logger,debug,no,free,marker,view,found,for,url,get,url,return,false,catch,parse,exception,ex,throw,new,application,context,exception,failed,to,parse,free,marker,template,for,url,get,url,ex,catch,ioexception,ex,throw,new,application,context,exception,could,not,load,free,marker,template,for,url,get,url,ex
FreeMarkerView -> @Override 	public boolean checkResourceExists(Locale locale) throws Exception;1491909547;Check that the FreeMarker template used for this view exists and is valid._<p>Can be overridden to customize the behavior, for example in case of_multiple templates to be rendered into a single view.;@Override_	public boolean checkResourceExists(Locale locale) throws Exception {_		try {_			_			getTemplate(locale)__			return true__		}_		catch (FileNotFoundException ex) {_			if (logger.isDebugEnabled()) {_				logger.debug("No FreeMarker view found for URL: " + getUrl())__			}_			return false__		}_		catch (ParseException ex) {_			throw new ApplicationContextException(_					"Failed to parse FreeMarker template for URL [" +  getUrl() + "]", ex)__		}_		catch (IOException ex) {_			throw new ApplicationContextException(_					"Could not load FreeMarker template for URL [" + getUrl() + "]", ex)__		}_	};check,that,the,free,marker,template,used,for,this,view,exists,and,is,valid,p,can,be,overridden,to,customize,the,behavior,for,example,in,case,of,multiple,templates,to,be,rendered,into,a,single,view;override,public,boolean,check,resource,exists,locale,locale,throws,exception,try,get,template,locale,return,true,catch,file,not,found,exception,ex,if,logger,is,debug,enabled,logger,debug,no,free,marker,view,found,for,url,get,url,return,false,catch,parse,exception,ex,throw,new,application,context,exception,failed,to,parse,free,marker,template,for,url,get,url,ex,catch,ioexception,ex,throw,new,application,context,exception,could,not,load,free,marker,template,for,url,get,url,ex
FreeMarkerView -> @Override 	public boolean checkResourceExists(Locale locale) throws Exception;1495591054;Check that the FreeMarker template used for this view exists and is valid._<p>Can be overridden to customize the behavior, for example in case of_multiple templates to be rendered into a single view.;@Override_	public boolean checkResourceExists(Locale locale) throws Exception {_		try {_			_			getTemplate(locale)__			return true__		}_		catch (FileNotFoundException ex) {_			if (logger.isDebugEnabled()) {_				logger.debug("No FreeMarker view found for URL: " + getUrl())__			}_			return false__		}_		catch (ParseException ex) {_			throw new ApplicationContextException(_					"Failed to parse FreeMarker template for URL [" +  getUrl() + "]", ex)__		}_		catch (IOException ex) {_			throw new ApplicationContextException(_					"Could not load FreeMarker template for URL [" + getUrl() + "]", ex)__		}_	};check,that,the,free,marker,template,used,for,this,view,exists,and,is,valid,p,can,be,overridden,to,customize,the,behavior,for,example,in,case,of,multiple,templates,to,be,rendered,into,a,single,view;override,public,boolean,check,resource,exists,locale,locale,throws,exception,try,get,template,locale,return,true,catch,file,not,found,exception,ex,if,logger,is,debug,enabled,logger,debug,no,free,marker,view,found,for,url,get,url,return,false,catch,parse,exception,ex,throw,new,application,context,exception,failed,to,parse,free,marker,template,for,url,get,url,ex,catch,ioexception,ex,throw,new,application,context,exception,could,not,load,free,marker,template,for,url,get,url,ex
FreeMarkerView -> @Override 	public boolean checkResourceExists(Locale locale) throws Exception;1496837955;Check that the FreeMarker template used for this view exists and is valid._<p>Can be overridden to customize the behavior, for example in case of_multiple templates to be rendered into a single view.;@Override_	public boolean checkResourceExists(Locale locale) throws Exception {_		try {_			_			getTemplate(locale)__			return true__		}_		catch (FileNotFoundException ex) {_			if (logger.isDebugEnabled()) {_				logger.debug("No FreeMarker view found for URL: " + getUrl())__			}_			return false__		}_		catch (ParseException ex) {_			throw new ApplicationContextException(_					"Failed to parse FreeMarker template for URL [" +  getUrl() + "]", ex)__		}_		catch (IOException ex) {_			throw new ApplicationContextException(_					"Could not load FreeMarker template for URL [" + getUrl() + "]", ex)__		}_	};check,that,the,free,marker,template,used,for,this,view,exists,and,is,valid,p,can,be,overridden,to,customize,the,behavior,for,example,in,case,of,multiple,templates,to,be,rendered,into,a,single,view;override,public,boolean,check,resource,exists,locale,locale,throws,exception,try,get,template,locale,return,true,catch,file,not,found,exception,ex,if,logger,is,debug,enabled,logger,debug,no,free,marker,view,found,for,url,get,url,return,false,catch,parse,exception,ex,throw,new,application,context,exception,failed,to,parse,free,marker,template,for,url,get,url,ex,catch,ioexception,ex,throw,new,application,context,exception,could,not,load,free,marker,template,for,url,get,url,ex
FreeMarkerView -> @Override 	public boolean checkResourceExists(Locale locale) throws Exception;1497341594;Check that the FreeMarker template used for this view exists and is valid._<p>Can be overridden to customize the behavior, for example in case of_multiple templates to be rendered into a single view.;@Override_	public boolean checkResourceExists(Locale locale) throws Exception {_		try {_			_			getTemplate(locale)__			return true__		}_		catch (FileNotFoundException ex) {_			if (logger.isDebugEnabled()) {_				logger.debug("No FreeMarker view found for URL: " + getUrl())__			}_			return false__		}_		catch (ParseException ex) {_			throw new ApplicationContextException(_					"Failed to parse FreeMarker template for URL [" +  getUrl() + "]", ex)__		}_		catch (IOException ex) {_			throw new ApplicationContextException(_					"Could not load FreeMarker template for URL [" + getUrl() + "]", ex)__		}_	};check,that,the,free,marker,template,used,for,this,view,exists,and,is,valid,p,can,be,overridden,to,customize,the,behavior,for,example,in,case,of,multiple,templates,to,be,rendered,into,a,single,view;override,public,boolean,check,resource,exists,locale,locale,throws,exception,try,get,template,locale,return,true,catch,file,not,found,exception,ex,if,logger,is,debug,enabled,logger,debug,no,free,marker,view,found,for,url,get,url,return,false,catch,parse,exception,ex,throw,new,application,context,exception,failed,to,parse,free,marker,template,for,url,get,url,ex,catch,ioexception,ex,throw,new,application,context,exception,could,not,load,free,marker,template,for,url,get,url,ex
FreeMarkerView -> @Override 	public boolean checkResourceExists(Locale locale) throws Exception;1497359418;Check that the FreeMarker template used for this view exists and is valid._<p>Can be overridden to customize the behavior, for example in case of_multiple templates to be rendered into a single view.;@Override_	public boolean checkResourceExists(Locale locale) throws Exception {_		try {_			_			getTemplate(locale)__			return true__		}_		catch (FileNotFoundException ex) {_			if (logger.isDebugEnabled()) {_				logger.debug("No FreeMarker view found for URL: " + getUrl())__			}_			return false__		}_		catch (ParseException ex) {_			throw new ApplicationContextException(_					"Failed to parse FreeMarker template for URL [" +  getUrl() + "]", ex)__		}_		catch (IOException ex) {_			throw new ApplicationContextException(_					"Could not load FreeMarker template for URL [" + getUrl() + "]", ex)__		}_	};check,that,the,free,marker,template,used,for,this,view,exists,and,is,valid,p,can,be,overridden,to,customize,the,behavior,for,example,in,case,of,multiple,templates,to,be,rendered,into,a,single,view;override,public,boolean,check,resource,exists,locale,locale,throws,exception,try,get,template,locale,return,true,catch,file,not,found,exception,ex,if,logger,is,debug,enabled,logger,debug,no,free,marker,view,found,for,url,get,url,return,false,catch,parse,exception,ex,throw,new,application,context,exception,failed,to,parse,free,marker,template,for,url,get,url,ex,catch,ioexception,ex,throw,new,application,context,exception,could,not,load,free,marker,template,for,url,get,url,ex
FreeMarkerView -> @Override 	public boolean checkResourceExists(Locale locale) throws Exception;1497974922;Check that the FreeMarker template used for this view exists and is valid._<p>Can be overridden to customize the behavior, for example in case of_multiple templates to be rendered into a single view.;@Override_	public boolean checkResourceExists(Locale locale) throws Exception {_		try {_			_			getTemplate(locale)__			return true__		}_		catch (FileNotFoundException ex) {_			if (logger.isDebugEnabled()) {_				logger.debug("No FreeMarker view found for URL: " + getUrl())__			}_			return false__		}_		catch (ParseException ex) {_			throw new ApplicationContextException(_					"Failed to parse FreeMarker template for URL [" +  getUrl() + "]", ex)__		}_		catch (IOException ex) {_			throw new ApplicationContextException(_					"Could not load FreeMarker template for URL [" + getUrl() + "]", ex)__		}_	};check,that,the,free,marker,template,used,for,this,view,exists,and,is,valid,p,can,be,overridden,to,customize,the,behavior,for,example,in,case,of,multiple,templates,to,be,rendered,into,a,single,view;override,public,boolean,check,resource,exists,locale,locale,throws,exception,try,get,template,locale,return,true,catch,file,not,found,exception,ex,if,logger,is,debug,enabled,logger,debug,no,free,marker,view,found,for,url,get,url,return,false,catch,parse,exception,ex,throw,new,application,context,exception,failed,to,parse,free,marker,template,for,url,get,url,ex,catch,ioexception,ex,throw,new,application,context,exception,could,not,load,free,marker,template,for,url,get,url,ex
FreeMarkerView -> @Override 	public boolean checkResourceExists(Locale locale) throws Exception;1500448076;Check that the FreeMarker template used for this view exists and is valid._<p>Can be overridden to customize the behavior, for example in case of_multiple templates to be rendered into a single view.;@Override_	public boolean checkResourceExists(Locale locale) throws Exception {_		try {_			_			getTemplate(locale)__			return true__		}_		catch (FileNotFoundException ex) {_			if (logger.isDebugEnabled()) {_				logger.debug("No FreeMarker view found for URL: " + getUrl())__			}_			return false__		}_		catch (ParseException ex) {_			throw new ApplicationContextException(_					"Failed to parse FreeMarker template for URL [" +  getUrl() + "]", ex)__		}_		catch (IOException ex) {_			throw new ApplicationContextException(_					"Could not load FreeMarker template for URL [" + getUrl() + "]", ex)__		}_	};check,that,the,free,marker,template,used,for,this,view,exists,and,is,valid,p,can,be,overridden,to,customize,the,behavior,for,example,in,case,of,multiple,templates,to,be,rendered,into,a,single,view;override,public,boolean,check,resource,exists,locale,locale,throws,exception,try,get,template,locale,return,true,catch,file,not,found,exception,ex,if,logger,is,debug,enabled,logger,debug,no,free,marker,view,found,for,url,get,url,return,false,catch,parse,exception,ex,throw,new,application,context,exception,failed,to,parse,free,marker,template,for,url,get,url,ex,catch,ioexception,ex,throw,new,application,context,exception,could,not,load,free,marker,template,for,url,get,url,ex
FreeMarkerView -> @Override 	public boolean checkResourceExists(Locale locale) throws Exception;1506067698;Check that the FreeMarker template used for this view exists and is valid._<p>Can be overridden to customize the behavior, for example in case of_multiple templates to be rendered into a single view.;@Override_	public boolean checkResourceExists(Locale locale) throws Exception {_		try {_			_			getTemplate(locale)__			return true__		}_		catch (FileNotFoundException ex) {_			if (logger.isDebugEnabled()) {_				logger.debug("No FreeMarker view found for URL: " + getUrl())__			}_			return false__		}_		catch (ParseException ex) {_			throw new ApplicationContextException(_					"Failed to parse FreeMarker template for URL [" +  getUrl() + "]", ex)__		}_		catch (IOException ex) {_			throw new ApplicationContextException(_					"Could not load FreeMarker template for URL [" + getUrl() + "]", ex)__		}_	};check,that,the,free,marker,template,used,for,this,view,exists,and,is,valid,p,can,be,overridden,to,customize,the,behavior,for,example,in,case,of,multiple,templates,to,be,rendered,into,a,single,view;override,public,boolean,check,resource,exists,locale,locale,throws,exception,try,get,template,locale,return,true,catch,file,not,found,exception,ex,if,logger,is,debug,enabled,logger,debug,no,free,marker,view,found,for,url,get,url,return,false,catch,parse,exception,ex,throw,new,application,context,exception,failed,to,parse,free,marker,template,for,url,get,url,ex,catch,ioexception,ex,throw,new,application,context,exception,could,not,load,free,marker,template,for,url,get,url,ex
FreeMarkerView -> @Override 	public boolean checkResourceExists(Locale locale) throws Exception;1529721864;Check that the FreeMarker template used for this view exists and is valid._<p>Can be overridden to customize the behavior, for example in case of_multiple templates to be rendered into a single view.;@Override_	public boolean checkResourceExists(Locale locale) throws Exception {_		try {_			_			getTemplate(locale)__			return true__		}_		catch (FileNotFoundException ex) {_			_			return false__		}_		catch (ParseException ex) {_			throw new ApplicationContextException(_					"Failed to parse FreeMarker template for URL [" +  getUrl() + "]", ex)__		}_		catch (IOException ex) {_			throw new ApplicationContextException(_					"Could not load FreeMarker template for URL [" + getUrl() + "]", ex)__		}_	};check,that,the,free,marker,template,used,for,this,view,exists,and,is,valid,p,can,be,overridden,to,customize,the,behavior,for,example,in,case,of,multiple,templates,to,be,rendered,into,a,single,view;override,public,boolean,check,resource,exists,locale,locale,throws,exception,try,get,template,locale,return,true,catch,file,not,found,exception,ex,return,false,catch,parse,exception,ex,throw,new,application,context,exception,failed,to,parse,free,marker,template,for,url,get,url,ex,catch,ioexception,ex,throw,new,application,context,exception,could,not,load,free,marker,template,for,url,get,url,ex
FreeMarkerView -> @Override 	public boolean checkResourceExists(Locale locale) throws Exception;1530793633;Check that the FreeMarker template used for this view exists and is valid._<p>Can be overridden to customize the behavior, for example in case of_multiple templates to be rendered into a single view.;@Override_	public boolean checkResourceExists(Locale locale) throws Exception {_		try {_			_			getTemplate(locale)__			return true__		}_		catch (FileNotFoundException ex) {_			_			return false__		}_		catch (ParseException ex) {_			throw new ApplicationContextException(_					"Failed to parse FreeMarker template for URL [" +  getUrl() + "]", ex)__		}_		catch (IOException ex) {_			throw new ApplicationContextException(_					"Could not load FreeMarker template for URL [" + getUrl() + "]", ex)__		}_	};check,that,the,free,marker,template,used,for,this,view,exists,and,is,valid,p,can,be,overridden,to,customize,the,behavior,for,example,in,case,of,multiple,templates,to,be,rendered,into,a,single,view;override,public,boolean,check,resource,exists,locale,locale,throws,exception,try,get,template,locale,return,true,catch,file,not,found,exception,ex,return,false,catch,parse,exception,ex,throw,new,application,context,exception,failed,to,parse,free,marker,template,for,url,get,url,ex,catch,ioexception,ex,throw,new,application,context,exception,could,not,load,free,marker,template,for,url,get,url,ex
FreeMarkerView -> protected Template getTemplate(Locale locale) throws IOException;1485986572;Retrieve the FreeMarker template for the given locale,_to be rendering by this view._<p>By default, the template specified by the "url" bean property_will be retrieved._@param locale the current locale_@return the FreeMarker template to render;protected Template getTemplate(Locale locale) throws IOException {_		return (getEncoding() != null ?_				getConfiguration().getTemplate(getUrl(), locale, getEncoding()) :_				getConfiguration().getTemplate(getUrl(), locale))__	};retrieve,the,free,marker,template,for,the,given,locale,to,be,rendering,by,this,view,p,by,default,the,template,specified,by,the,url,bean,property,will,be,retrieved,param,locale,the,current,locale,return,the,free,marker,template,to,render;protected,template,get,template,locale,locale,throws,ioexception,return,get,encoding,null,get,configuration,get,template,get,url,locale,get,encoding,get,configuration,get,template,get,url,locale
FreeMarkerView -> protected Template getTemplate(Locale locale) throws IOException;1491909547;Retrieve the FreeMarker template for the given locale,_to be rendering by this view._<p>By default, the template specified by the "url" bean property_will be retrieved._@param locale the current locale_@return the FreeMarker template to render;protected Template getTemplate(Locale locale) throws IOException {_		return (getEncoding() != null ?_				getConfiguration().getTemplate(getUrl(), locale, getEncoding()) :_				getConfiguration().getTemplate(getUrl(), locale))__	};retrieve,the,free,marker,template,for,the,given,locale,to,be,rendering,by,this,view,p,by,default,the,template,specified,by,the,url,bean,property,will,be,retrieved,param,locale,the,current,locale,return,the,free,marker,template,to,render;protected,template,get,template,locale,locale,throws,ioexception,return,get,encoding,null,get,configuration,get,template,get,url,locale,get,encoding,get,configuration,get,template,get,url,locale
FreeMarkerView -> protected Template getTemplate(Locale locale) throws IOException;1495591054;Retrieve the FreeMarker template for the given locale,_to be rendering by this view._<p>By default, the template specified by the "url" bean property_will be retrieved._@param locale the current locale_@return the FreeMarker template to render;protected Template getTemplate(Locale locale) throws IOException {_		return (getEncoding() != null ?_				getConfiguration().getTemplate(getUrl(), locale, getEncoding()) :_				getConfiguration().getTemplate(getUrl(), locale))__	};retrieve,the,free,marker,template,for,the,given,locale,to,be,rendering,by,this,view,p,by,default,the,template,specified,by,the,url,bean,property,will,be,retrieved,param,locale,the,current,locale,return,the,free,marker,template,to,render;protected,template,get,template,locale,locale,throws,ioexception,return,get,encoding,null,get,configuration,get,template,get,url,locale,get,encoding,get,configuration,get,template,get,url,locale
FreeMarkerView -> protected Template getTemplate(Locale locale) throws IOException;1496837955;Retrieve the FreeMarker template for the given locale,_to be rendering by this view._<p>By default, the template specified by the "url" bean property_will be retrieved._@param locale the current locale_@return the FreeMarker template to render;protected Template getTemplate(Locale locale) throws IOException {_		return (getEncoding() != null ?_				obtainConfiguration().getTemplate(getUrl(), locale, getEncoding()) :_				obtainConfiguration().getTemplate(getUrl(), locale))__	};retrieve,the,free,marker,template,for,the,given,locale,to,be,rendering,by,this,view,p,by,default,the,template,specified,by,the,url,bean,property,will,be,retrieved,param,locale,the,current,locale,return,the,free,marker,template,to,render;protected,template,get,template,locale,locale,throws,ioexception,return,get,encoding,null,obtain,configuration,get,template,get,url,locale,get,encoding,obtain,configuration,get,template,get,url,locale
FreeMarkerView -> protected Template getTemplate(Locale locale) throws IOException;1497341594;Retrieve the FreeMarker template for the given locale,_to be rendering by this view._<p>By default, the template specified by the "url" bean property_will be retrieved._@param locale the current locale_@return the FreeMarker template to render;protected Template getTemplate(Locale locale) throws IOException {_		return (getEncoding() != null ?_				obtainConfiguration().getTemplate(getUrl(), locale, getEncoding()) :_				obtainConfiguration().getTemplate(getUrl(), locale))__	};retrieve,the,free,marker,template,for,the,given,locale,to,be,rendering,by,this,view,p,by,default,the,template,specified,by,the,url,bean,property,will,be,retrieved,param,locale,the,current,locale,return,the,free,marker,template,to,render;protected,template,get,template,locale,locale,throws,ioexception,return,get,encoding,null,obtain,configuration,get,template,get,url,locale,get,encoding,obtain,configuration,get,template,get,url,locale
FreeMarkerView -> protected Template getTemplate(Locale locale) throws IOException;1497359418;Retrieve the FreeMarker template for the given locale,_to be rendering by this view._<p>By default, the template specified by the "url" bean property_will be retrieved._@param locale the current locale_@return the FreeMarker template to render;protected Template getTemplate(Locale locale) throws IOException {_		return (getEncoding() != null ?_				obtainConfiguration().getTemplate(getUrl(), locale, getEncoding()) :_				obtainConfiguration().getTemplate(getUrl(), locale))__	};retrieve,the,free,marker,template,for,the,given,locale,to,be,rendering,by,this,view,p,by,default,the,template,specified,by,the,url,bean,property,will,be,retrieved,param,locale,the,current,locale,return,the,free,marker,template,to,render;protected,template,get,template,locale,locale,throws,ioexception,return,get,encoding,null,obtain,configuration,get,template,get,url,locale,get,encoding,obtain,configuration,get,template,get,url,locale
FreeMarkerView -> protected Template getTemplate(Locale locale) throws IOException;1497974922;Retrieve the FreeMarker template for the given locale,_to be rendering by this view._<p>By default, the template specified by the "url" bean property_will be retrieved._@param locale the current locale_@return the FreeMarker template to render;protected Template getTemplate(Locale locale) throws IOException {_		return (getEncoding() != null ?_				obtainConfiguration().getTemplate(getUrl(), locale, getEncoding()) :_				obtainConfiguration().getTemplate(getUrl(), locale))__	};retrieve,the,free,marker,template,for,the,given,locale,to,be,rendering,by,this,view,p,by,default,the,template,specified,by,the,url,bean,property,will,be,retrieved,param,locale,the,current,locale,return,the,free,marker,template,to,render;protected,template,get,template,locale,locale,throws,ioexception,return,get,encoding,null,obtain,configuration,get,template,get,url,locale,get,encoding,obtain,configuration,get,template,get,url,locale
FreeMarkerView -> protected Template getTemplate(Locale locale) throws IOException;1500448076;Retrieve the FreeMarker template for the given locale,_to be rendering by this view._<p>By default, the template specified by the "url" bean property_will be retrieved._@param locale the current locale_@return the FreeMarker template to render;protected Template getTemplate(Locale locale) throws IOException {_		return (getEncoding() != null ?_				obtainConfiguration().getTemplate(getUrl(), locale, getEncoding()) :_				obtainConfiguration().getTemplate(getUrl(), locale))__	};retrieve,the,free,marker,template,for,the,given,locale,to,be,rendering,by,this,view,p,by,default,the,template,specified,by,the,url,bean,property,will,be,retrieved,param,locale,the,current,locale,return,the,free,marker,template,to,render;protected,template,get,template,locale,locale,throws,ioexception,return,get,encoding,null,obtain,configuration,get,template,get,url,locale,get,encoding,obtain,configuration,get,template,get,url,locale
FreeMarkerView -> protected Template getTemplate(Locale locale) throws IOException;1506067698;Retrieve the FreeMarker template for the given locale,_to be rendering by this view._<p>By default, the template specified by the "url" bean property_will be retrieved._@param locale the current locale_@return the FreeMarker template to render;protected Template getTemplate(Locale locale) throws IOException {_		return (getEncoding() != null ?_				obtainConfiguration().getTemplate(getUrl(), locale, getEncoding()) :_				obtainConfiguration().getTemplate(getUrl(), locale))__	};retrieve,the,free,marker,template,for,the,given,locale,to,be,rendering,by,this,view,p,by,default,the,template,specified,by,the,url,bean,property,will,be,retrieved,param,locale,the,current,locale,return,the,free,marker,template,to,render;protected,template,get,template,locale,locale,throws,ioexception,return,get,encoding,null,obtain,configuration,get,template,get,url,locale,get,encoding,obtain,configuration,get,template,get,url,locale
FreeMarkerView -> protected Template getTemplate(Locale locale) throws IOException;1529721864;Retrieve the FreeMarker template for the given locale,_to be rendering by this view._<p>By default, the template specified by the "url" bean property_will be retrieved._@param locale the current locale_@return the FreeMarker template to render;protected Template getTemplate(Locale locale) throws IOException {_		return (getEncoding() != null ?_				obtainConfiguration().getTemplate(getUrl(), locale, getEncoding()) :_				obtainConfiguration().getTemplate(getUrl(), locale))__	};retrieve,the,free,marker,template,for,the,given,locale,to,be,rendering,by,this,view,p,by,default,the,template,specified,by,the,url,bean,property,will,be,retrieved,param,locale,the,current,locale,return,the,free,marker,template,to,render;protected,template,get,template,locale,locale,throws,ioexception,return,get,encoding,null,obtain,configuration,get,template,get,url,locale,get,encoding,obtain,configuration,get,template,get,url,locale
FreeMarkerView -> protected Template getTemplate(Locale locale) throws IOException;1530793633;Retrieve the FreeMarker template for the given locale,_to be rendering by this view._<p>By default, the template specified by the "url" bean property_will be retrieved._@param locale the current locale_@return the FreeMarker template to render;protected Template getTemplate(Locale locale) throws IOException {_		return (getEncoding() != null ?_				obtainConfiguration().getTemplate(getUrl(), locale, getEncoding()) :_				obtainConfiguration().getTemplate(getUrl(), locale))__	};retrieve,the,free,marker,template,for,the,given,locale,to,be,rendering,by,this,view,p,by,default,the,template,specified,by,the,url,bean,property,will,be,retrieved,param,locale,the,current,locale,return,the,free,marker,template,to,render;protected,template,get,template,locale,locale,throws,ioexception,return,get,encoding,null,obtain,configuration,get,template,get,url,locale,get,encoding,obtain,configuration,get,template,get,url,locale
FreeMarkerView -> public void setEncoding(String encoding);1485986572;Set the encoding of the FreeMarker template file._<p>By default {@link FreeMarkerConfigurer} sets the default encoding in_the FreeMarker configuration to "UTF-8". It's recommended to specify the_encoding in the FreeMarker Configuration rather than per template if all_your templates share a common encoding.;public void setEncoding(String encoding) {_		this.encoding = encoding__	};set,the,encoding,of,the,free,marker,template,file,p,by,default,link,free,marker,configurer,sets,the,default,encoding,in,the,free,marker,configuration,to,utf,8,it,s,recommended,to,specify,the,encoding,in,the,free,marker,configuration,rather,than,per,template,if,all,your,templates,share,a,common,encoding;public,void,set,encoding,string,encoding,this,encoding,encoding
FreeMarkerView -> public void setEncoding(String encoding);1491909547;Set the encoding of the FreeMarker template file._<p>By default {@link FreeMarkerConfigurer} sets the default encoding in_the FreeMarker configuration to "UTF-8". It's recommended to specify the_encoding in the FreeMarker Configuration rather than per template if all_your templates share a common encoding.;public void setEncoding(String encoding) {_		this.encoding = encoding__	};set,the,encoding,of,the,free,marker,template,file,p,by,default,link,free,marker,configurer,sets,the,default,encoding,in,the,free,marker,configuration,to,utf,8,it,s,recommended,to,specify,the,encoding,in,the,free,marker,configuration,rather,than,per,template,if,all,your,templates,share,a,common,encoding;public,void,set,encoding,string,encoding,this,encoding,encoding
FreeMarkerView -> public void setEncoding(String encoding);1495591054;Set the encoding of the FreeMarker template file._<p>By default {@link FreeMarkerConfigurer} sets the default encoding in_the FreeMarker configuration to "UTF-8". It's recommended to specify the_encoding in the FreeMarker Configuration rather than per template if all_your templates share a common encoding.;public void setEncoding(String encoding) {_		this.encoding = encoding__	};set,the,encoding,of,the,free,marker,template,file,p,by,default,link,free,marker,configurer,sets,the,default,encoding,in,the,free,marker,configuration,to,utf,8,it,s,recommended,to,specify,the,encoding,in,the,free,marker,configuration,rather,than,per,template,if,all,your,templates,share,a,common,encoding;public,void,set,encoding,string,encoding,this,encoding,encoding
FreeMarkerView -> public void setEncoding(String encoding);1496837955;Set the encoding of the FreeMarker template file._<p>By default {@link FreeMarkerConfigurer} sets the default encoding in_the FreeMarker configuration to "UTF-8". It's recommended to specify the_encoding in the FreeMarker Configuration rather than per template if all_your templates share a common encoding.;public void setEncoding(String encoding) {_		this.encoding = encoding__	};set,the,encoding,of,the,free,marker,template,file,p,by,default,link,free,marker,configurer,sets,the,default,encoding,in,the,free,marker,configuration,to,utf,8,it,s,recommended,to,specify,the,encoding,in,the,free,marker,configuration,rather,than,per,template,if,all,your,templates,share,a,common,encoding;public,void,set,encoding,string,encoding,this,encoding,encoding
FreeMarkerView -> public void setEncoding(String encoding);1497341594;Set the encoding of the FreeMarker template file._<p>By default {@link FreeMarkerConfigurer} sets the default encoding in_the FreeMarker configuration to "UTF-8". It's recommended to specify the_encoding in the FreeMarker Configuration rather than per template if all_your templates share a common encoding.;public void setEncoding(String encoding) {_		this.encoding = encoding__	};set,the,encoding,of,the,free,marker,template,file,p,by,default,link,free,marker,configurer,sets,the,default,encoding,in,the,free,marker,configuration,to,utf,8,it,s,recommended,to,specify,the,encoding,in,the,free,marker,configuration,rather,than,per,template,if,all,your,templates,share,a,common,encoding;public,void,set,encoding,string,encoding,this,encoding,encoding
FreeMarkerView -> public void setEncoding(String encoding);1497359418;Set the encoding of the FreeMarker template file._<p>By default {@link FreeMarkerConfigurer} sets the default encoding in_the FreeMarker configuration to "UTF-8". It's recommended to specify the_encoding in the FreeMarker Configuration rather than per template if all_your templates share a common encoding.;public void setEncoding(String encoding) {_		this.encoding = encoding__	};set,the,encoding,of,the,free,marker,template,file,p,by,default,link,free,marker,configurer,sets,the,default,encoding,in,the,free,marker,configuration,to,utf,8,it,s,recommended,to,specify,the,encoding,in,the,free,marker,configuration,rather,than,per,template,if,all,your,templates,share,a,common,encoding;public,void,set,encoding,string,encoding,this,encoding,encoding
FreeMarkerView -> public void setEncoding(String encoding);1497974922;Set the encoding of the FreeMarker template file._<p>By default {@link FreeMarkerConfigurer} sets the default encoding in_the FreeMarker configuration to "UTF-8". It's recommended to specify the_encoding in the FreeMarker Configuration rather than per template if all_your templates share a common encoding.;public void setEncoding(String encoding) {_		this.encoding = encoding__	};set,the,encoding,of,the,free,marker,template,file,p,by,default,link,free,marker,configurer,sets,the,default,encoding,in,the,free,marker,configuration,to,utf,8,it,s,recommended,to,specify,the,encoding,in,the,free,marker,configuration,rather,than,per,template,if,all,your,templates,share,a,common,encoding;public,void,set,encoding,string,encoding,this,encoding,encoding
FreeMarkerView -> public void setEncoding(@Nullable String encoding);1500448076;Set the encoding of the FreeMarker template file._<p>By default {@link FreeMarkerConfigurer} sets the default encoding in_the FreeMarker configuration to "UTF-8". It's recommended to specify the_encoding in the FreeMarker Configuration rather than per template if all_your templates share a common encoding.;public void setEncoding(@Nullable String encoding) {_		this.encoding = encoding__	};set,the,encoding,of,the,free,marker,template,file,p,by,default,link,free,marker,configurer,sets,the,default,encoding,in,the,free,marker,configuration,to,utf,8,it,s,recommended,to,specify,the,encoding,in,the,free,marker,configuration,rather,than,per,template,if,all,your,templates,share,a,common,encoding;public,void,set,encoding,nullable,string,encoding,this,encoding,encoding
FreeMarkerView -> public void setEncoding(@Nullable String encoding);1506067698;Set the encoding of the FreeMarker template file._<p>By default {@link FreeMarkerConfigurer} sets the default encoding in_the FreeMarker configuration to "UTF-8". It's recommended to specify the_encoding in the FreeMarker Configuration rather than per template if all_your templates share a common encoding.;public void setEncoding(@Nullable String encoding) {_		this.encoding = encoding__	};set,the,encoding,of,the,free,marker,template,file,p,by,default,link,free,marker,configurer,sets,the,default,encoding,in,the,free,marker,configuration,to,utf,8,it,s,recommended,to,specify,the,encoding,in,the,free,marker,configuration,rather,than,per,template,if,all,your,templates,share,a,common,encoding;public,void,set,encoding,nullable,string,encoding,this,encoding,encoding
FreeMarkerView -> public void setEncoding(@Nullable String encoding);1529721864;Set the encoding of the FreeMarker template file._<p>By default {@link FreeMarkerConfigurer} sets the default encoding in_the FreeMarker configuration to "UTF-8". It's recommended to specify the_encoding in the FreeMarker Configuration rather than per template if all_your templates share a common encoding.;public void setEncoding(@Nullable String encoding) {_		this.encoding = encoding__	};set,the,encoding,of,the,free,marker,template,file,p,by,default,link,free,marker,configurer,sets,the,default,encoding,in,the,free,marker,configuration,to,utf,8,it,s,recommended,to,specify,the,encoding,in,the,free,marker,configuration,rather,than,per,template,if,all,your,templates,share,a,common,encoding;public,void,set,encoding,nullable,string,encoding,this,encoding,encoding
FreeMarkerView -> public void setEncoding(@Nullable String encoding);1530793633;Set the encoding of the FreeMarker template file._<p>By default {@link FreeMarkerConfigurer} sets the default encoding in_the FreeMarker configuration to "UTF-8". It's recommended to specify the_encoding in the FreeMarker Configuration rather than per template if all_your templates share a common encoding.;public void setEncoding(@Nullable String encoding) {_		this.encoding = encoding__	};set,the,encoding,of,the,free,marker,template,file,p,by,default,link,free,marker,configurer,sets,the,default,encoding,in,the,free,marker,configuration,to,utf,8,it,s,recommended,to,specify,the,encoding,in,the,free,marker,configuration,rather,than,per,template,if,all,your,templates,share,a,common,encoding;public,void,set,encoding,nullable,string,encoding,this,encoding,encoding
FreeMarkerView -> protected FreeMarkerConfig autodetectConfiguration() throws BeansException;1485986572;Autodetect a {@link FreeMarkerConfig} object via the ApplicationContext._@return the Configuration instance to use for FreeMarkerViews_@throws BeansException if no Configuration instance could be found_@see #setConfiguration;protected FreeMarkerConfig autodetectConfiguration() throws BeansException {_		try {_			return BeanFactoryUtils.beanOfTypeIncludingAncestors(_					getApplicationContext(), FreeMarkerConfig.class, true, false)__		}_		catch (NoSuchBeanDefinitionException ex) {_			throw new ApplicationContextException(_					"Must define a single FreeMarkerConfig bean in this web application context " +_							"(may be inherited): FreeMarkerConfigurer is the usual implementation. " +_							"This bean may be given any name.", ex)__		}_	};autodetect,a,link,free,marker,config,object,via,the,application,context,return,the,configuration,instance,to,use,for,free,marker,views,throws,beans,exception,if,no,configuration,instance,could,be,found,see,set,configuration;protected,free,marker,config,autodetect,configuration,throws,beans,exception,try,return,bean,factory,utils,bean,of,type,including,ancestors,get,application,context,free,marker,config,class,true,false,catch,no,such,bean,definition,exception,ex,throw,new,application,context,exception,must,define,a,single,free,marker,config,bean,in,this,web,application,context,may,be,inherited,free,marker,configurer,is,the,usual,implementation,this,bean,may,be,given,any,name,ex
FreeMarkerView -> protected FreeMarkerConfig autodetectConfiguration() throws BeansException;1491909547;Autodetect a {@link FreeMarkerConfig} object via the ApplicationContext._@return the Configuration instance to use for FreeMarkerViews_@throws BeansException if no Configuration instance could be found_@see #setConfiguration;protected FreeMarkerConfig autodetectConfiguration() throws BeansException {_		try {_			return BeanFactoryUtils.beanOfTypeIncludingAncestors(_					getApplicationContext(), FreeMarkerConfig.class, true, false)__		}_		catch (NoSuchBeanDefinitionException ex) {_			throw new ApplicationContextException(_					"Must define a single FreeMarkerConfig bean in this web application context " +_							"(may be inherited): FreeMarkerConfigurer is the usual implementation. " +_							"This bean may be given any name.", ex)__		}_	};autodetect,a,link,free,marker,config,object,via,the,application,context,return,the,configuration,instance,to,use,for,free,marker,views,throws,beans,exception,if,no,configuration,instance,could,be,found,see,set,configuration;protected,free,marker,config,autodetect,configuration,throws,beans,exception,try,return,bean,factory,utils,bean,of,type,including,ancestors,get,application,context,free,marker,config,class,true,false,catch,no,such,bean,definition,exception,ex,throw,new,application,context,exception,must,define,a,single,free,marker,config,bean,in,this,web,application,context,may,be,inherited,free,marker,configurer,is,the,usual,implementation,this,bean,may,be,given,any,name,ex
FreeMarkerView -> protected FreeMarkerConfig autodetectConfiguration() throws BeansException;1495591054;Autodetect a {@link FreeMarkerConfig} object via the ApplicationContext._@return the Configuration instance to use for FreeMarkerViews_@throws BeansException if no Configuration instance could be found_@see #setConfiguration;protected FreeMarkerConfig autodetectConfiguration() throws BeansException {_		try {_			return BeanFactoryUtils.beanOfTypeIncludingAncestors(_					getApplicationContext(), FreeMarkerConfig.class, true, false)__		}_		catch (NoSuchBeanDefinitionException ex) {_			throw new ApplicationContextException(_					"Must define a single FreeMarkerConfig bean in this web application context " +_							"(may be inherited): FreeMarkerConfigurer is the usual implementation. " +_							"This bean may be given any name.", ex)__		}_	};autodetect,a,link,free,marker,config,object,via,the,application,context,return,the,configuration,instance,to,use,for,free,marker,views,throws,beans,exception,if,no,configuration,instance,could,be,found,see,set,configuration;protected,free,marker,config,autodetect,configuration,throws,beans,exception,try,return,bean,factory,utils,bean,of,type,including,ancestors,get,application,context,free,marker,config,class,true,false,catch,no,such,bean,definition,exception,ex,throw,new,application,context,exception,must,define,a,single,free,marker,config,bean,in,this,web,application,context,may,be,inherited,free,marker,configurer,is,the,usual,implementation,this,bean,may,be,given,any,name,ex
FreeMarkerView -> protected FreeMarkerConfig autodetectConfiguration() throws BeansException;1496837955;Autodetect a {@link FreeMarkerConfig} object via the ApplicationContext._@return the Configuration instance to use for FreeMarkerViews_@throws BeansException if no Configuration instance could be found_@see #setConfiguration;protected FreeMarkerConfig autodetectConfiguration() throws BeansException {_		try {_			return BeanFactoryUtils.beanOfTypeIncludingAncestors(_					obtainApplicationContext(), FreeMarkerConfig.class, true, false)__		}_		catch (NoSuchBeanDefinitionException ex) {_			throw new ApplicationContextException(_					"Must define a single FreeMarkerConfig bean in this web application context " +_							"(may be inherited): FreeMarkerConfigurer is the usual implementation. " +_							"This bean may be given any name.", ex)__		}_	};autodetect,a,link,free,marker,config,object,via,the,application,context,return,the,configuration,instance,to,use,for,free,marker,views,throws,beans,exception,if,no,configuration,instance,could,be,found,see,set,configuration;protected,free,marker,config,autodetect,configuration,throws,beans,exception,try,return,bean,factory,utils,bean,of,type,including,ancestors,obtain,application,context,free,marker,config,class,true,false,catch,no,such,bean,definition,exception,ex,throw,new,application,context,exception,must,define,a,single,free,marker,config,bean,in,this,web,application,context,may,be,inherited,free,marker,configurer,is,the,usual,implementation,this,bean,may,be,given,any,name,ex
FreeMarkerView -> protected FreeMarkerConfig autodetectConfiguration() throws BeansException;1497341594;Autodetect a {@link FreeMarkerConfig} object via the ApplicationContext._@return the Configuration instance to use for FreeMarkerViews_@throws BeansException if no Configuration instance could be found_@see #setConfiguration;protected FreeMarkerConfig autodetectConfiguration() throws BeansException {_		try {_			return BeanFactoryUtils.beanOfTypeIncludingAncestors(_					obtainApplicationContext(), FreeMarkerConfig.class, true, false)__		}_		catch (NoSuchBeanDefinitionException ex) {_			throw new ApplicationContextException(_					"Must define a single FreeMarkerConfig bean in this web application context " +_							"(may be inherited): FreeMarkerConfigurer is the usual implementation. " +_							"This bean may be given any name.", ex)__		}_	};autodetect,a,link,free,marker,config,object,via,the,application,context,return,the,configuration,instance,to,use,for,free,marker,views,throws,beans,exception,if,no,configuration,instance,could,be,found,see,set,configuration;protected,free,marker,config,autodetect,configuration,throws,beans,exception,try,return,bean,factory,utils,bean,of,type,including,ancestors,obtain,application,context,free,marker,config,class,true,false,catch,no,such,bean,definition,exception,ex,throw,new,application,context,exception,must,define,a,single,free,marker,config,bean,in,this,web,application,context,may,be,inherited,free,marker,configurer,is,the,usual,implementation,this,bean,may,be,given,any,name,ex
FreeMarkerView -> protected FreeMarkerConfig autodetectConfiguration() throws BeansException;1497359418;Autodetect a {@link FreeMarkerConfig} object via the ApplicationContext._@return the Configuration instance to use for FreeMarkerViews_@throws BeansException if no Configuration instance could be found_@see #setConfiguration;protected FreeMarkerConfig autodetectConfiguration() throws BeansException {_		try {_			return BeanFactoryUtils.beanOfTypeIncludingAncestors(_					obtainApplicationContext(), FreeMarkerConfig.class, true, false)__		}_		catch (NoSuchBeanDefinitionException ex) {_			throw new ApplicationContextException(_					"Must define a single FreeMarkerConfig bean in this web application context " +_							"(may be inherited): FreeMarkerConfigurer is the usual implementation. " +_							"This bean may be given any name.", ex)__		}_	};autodetect,a,link,free,marker,config,object,via,the,application,context,return,the,configuration,instance,to,use,for,free,marker,views,throws,beans,exception,if,no,configuration,instance,could,be,found,see,set,configuration;protected,free,marker,config,autodetect,configuration,throws,beans,exception,try,return,bean,factory,utils,bean,of,type,including,ancestors,obtain,application,context,free,marker,config,class,true,false,catch,no,such,bean,definition,exception,ex,throw,new,application,context,exception,must,define,a,single,free,marker,config,bean,in,this,web,application,context,may,be,inherited,free,marker,configurer,is,the,usual,implementation,this,bean,may,be,given,any,name,ex
FreeMarkerView -> protected FreeMarkerConfig autodetectConfiguration() throws BeansException;1497974922;Autodetect a {@link FreeMarkerConfig} object via the ApplicationContext._@return the Configuration instance to use for FreeMarkerViews_@throws BeansException if no Configuration instance could be found_@see #setConfiguration;protected FreeMarkerConfig autodetectConfiguration() throws BeansException {_		try {_			return BeanFactoryUtils.beanOfTypeIncludingAncestors(_					obtainApplicationContext(), FreeMarkerConfig.class, true, false)__		}_		catch (NoSuchBeanDefinitionException ex) {_			throw new ApplicationContextException(_					"Must define a single FreeMarkerConfig bean in this web application context " +_							"(may be inherited): FreeMarkerConfigurer is the usual implementation. " +_							"This bean may be given any name.", ex)__		}_	};autodetect,a,link,free,marker,config,object,via,the,application,context,return,the,configuration,instance,to,use,for,free,marker,views,throws,beans,exception,if,no,configuration,instance,could,be,found,see,set,configuration;protected,free,marker,config,autodetect,configuration,throws,beans,exception,try,return,bean,factory,utils,bean,of,type,including,ancestors,obtain,application,context,free,marker,config,class,true,false,catch,no,such,bean,definition,exception,ex,throw,new,application,context,exception,must,define,a,single,free,marker,config,bean,in,this,web,application,context,may,be,inherited,free,marker,configurer,is,the,usual,implementation,this,bean,may,be,given,any,name,ex
FreeMarkerView -> protected FreeMarkerConfig autodetectConfiguration() throws BeansException;1500448076;Autodetect a {@link FreeMarkerConfig} object via the ApplicationContext._@return the Configuration instance to use for FreeMarkerViews_@throws BeansException if no Configuration instance could be found_@see #setConfiguration;protected FreeMarkerConfig autodetectConfiguration() throws BeansException {_		try {_			return BeanFactoryUtils.beanOfTypeIncludingAncestors(_					obtainApplicationContext(), FreeMarkerConfig.class, true, false)__		}_		catch (NoSuchBeanDefinitionException ex) {_			throw new ApplicationContextException(_					"Must define a single FreeMarkerConfig bean in this web application context " +_							"(may be inherited): FreeMarkerConfigurer is the usual implementation. " +_							"This bean may be given any name.", ex)__		}_	};autodetect,a,link,free,marker,config,object,via,the,application,context,return,the,configuration,instance,to,use,for,free,marker,views,throws,beans,exception,if,no,configuration,instance,could,be,found,see,set,configuration;protected,free,marker,config,autodetect,configuration,throws,beans,exception,try,return,bean,factory,utils,bean,of,type,including,ancestors,obtain,application,context,free,marker,config,class,true,false,catch,no,such,bean,definition,exception,ex,throw,new,application,context,exception,must,define,a,single,free,marker,config,bean,in,this,web,application,context,may,be,inherited,free,marker,configurer,is,the,usual,implementation,this,bean,may,be,given,any,name,ex
FreeMarkerView -> protected FreeMarkerConfig autodetectConfiguration() throws BeansException;1506067698;Autodetect a {@link FreeMarkerConfig} object via the ApplicationContext._@return the Configuration instance to use for FreeMarkerViews_@throws BeansException if no Configuration instance could be found_@see #setConfiguration;protected FreeMarkerConfig autodetectConfiguration() throws BeansException {_		try {_			return BeanFactoryUtils.beanOfTypeIncludingAncestors(_					obtainApplicationContext(), FreeMarkerConfig.class, true, false)__		}_		catch (NoSuchBeanDefinitionException ex) {_			throw new ApplicationContextException(_					"Must define a single FreeMarkerConfig bean in this web application context " +_							"(may be inherited): FreeMarkerConfigurer is the usual implementation. " +_							"This bean may be given any name.", ex)__		}_	};autodetect,a,link,free,marker,config,object,via,the,application,context,return,the,configuration,instance,to,use,for,free,marker,views,throws,beans,exception,if,no,configuration,instance,could,be,found,see,set,configuration;protected,free,marker,config,autodetect,configuration,throws,beans,exception,try,return,bean,factory,utils,bean,of,type,including,ancestors,obtain,application,context,free,marker,config,class,true,false,catch,no,such,bean,definition,exception,ex,throw,new,application,context,exception,must,define,a,single,free,marker,config,bean,in,this,web,application,context,may,be,inherited,free,marker,configurer,is,the,usual,implementation,this,bean,may,be,given,any,name,ex
FreeMarkerView -> protected FreeMarkerConfig autodetectConfiguration() throws BeansException;1529721864;Autodetect a {@link FreeMarkerConfig} object via the ApplicationContext._@return the Configuration instance to use for FreeMarkerViews_@throws BeansException if no Configuration instance could be found_@see #setConfiguration;protected FreeMarkerConfig autodetectConfiguration() throws BeansException {_		try {_			return BeanFactoryUtils.beanOfTypeIncludingAncestors(_					obtainApplicationContext(), FreeMarkerConfig.class, true, false)__		}_		catch (NoSuchBeanDefinitionException ex) {_			throw new ApplicationContextException(_					"Must define a single FreeMarkerConfig bean in this web application context " +_							"(may be inherited): FreeMarkerConfigurer is the usual implementation. " +_							"This bean may be given any name.", ex)__		}_	};autodetect,a,link,free,marker,config,object,via,the,application,context,return,the,configuration,instance,to,use,for,free,marker,views,throws,beans,exception,if,no,configuration,instance,could,be,found,see,set,configuration;protected,free,marker,config,autodetect,configuration,throws,beans,exception,try,return,bean,factory,utils,bean,of,type,including,ancestors,obtain,application,context,free,marker,config,class,true,false,catch,no,such,bean,definition,exception,ex,throw,new,application,context,exception,must,define,a,single,free,marker,config,bean,in,this,web,application,context,may,be,inherited,free,marker,configurer,is,the,usual,implementation,this,bean,may,be,given,any,name,ex
FreeMarkerView -> protected FreeMarkerConfig autodetectConfiguration() throws BeansException;1530793633;Autodetect a {@link FreeMarkerConfig} object via the ApplicationContext._@return the Configuration instance to use for FreeMarkerViews_@throws BeansException if no Configuration instance could be found_@see #setConfiguration;protected FreeMarkerConfig autodetectConfiguration() throws BeansException {_		try {_			return BeanFactoryUtils.beanOfTypeIncludingAncestors(_					obtainApplicationContext(), FreeMarkerConfig.class, true, false)__		}_		catch (NoSuchBeanDefinitionException ex) {_			throw new ApplicationContextException(_					"Must define a single FreeMarkerConfig bean in this web application context " +_							"(may be inherited): FreeMarkerConfigurer is the usual implementation. " +_							"This bean may be given any name.", ex)__		}_	};autodetect,a,link,free,marker,config,object,via,the,application,context,return,the,configuration,instance,to,use,for,free,marker,views,throws,beans,exception,if,no,configuration,instance,could,be,found,see,set,configuration;protected,free,marker,config,autodetect,configuration,throws,beans,exception,try,return,bean,factory,utils,bean,of,type,including,ancestors,obtain,application,context,free,marker,config,class,true,false,catch,no,such,bean,definition,exception,ex,throw,new,application,context,exception,must,define,a,single,free,marker,config,bean,in,this,web,application,context,may,be,inherited,free,marker,configurer,is,the,usual,implementation,this,bean,may,be,given,any,name,ex
FreeMarkerView -> protected SimpleHash getTemplateModel(Map<String, Object> model, ServerWebExchange exchange);1485986572;Build a FreeMarker template model for the given model Map._<p>The default implementation builds a {@link SimpleHash}._@param model the model to use for rendering_@param exchange current exchange_@return the FreeMarker template model, as a {@link SimpleHash} or subclass thereof;protected SimpleHash getTemplateModel(Map<String, Object> model, ServerWebExchange exchange) {_		SimpleHash fmModel = new SimpleHash(getObjectWrapper())__		fmModel.putAll(model)__		return fmModel__	};build,a,free,marker,template,model,for,the,given,model,map,p,the,default,implementation,builds,a,link,simple,hash,param,model,the,model,to,use,for,rendering,param,exchange,current,exchange,return,the,free,marker,template,model,as,a,link,simple,hash,or,subclass,thereof;protected,simple,hash,get,template,model,map,string,object,model,server,web,exchange,exchange,simple,hash,fm,model,new,simple,hash,get,object,wrapper,fm,model,put,all,model,return,fm,model
FreeMarkerView -> protected SimpleHash getTemplateModel(Map<String, Object> model, ServerWebExchange exchange);1491909547;Build a FreeMarker template model for the given model Map._<p>The default implementation builds a {@link SimpleHash}._@param model the model to use for rendering_@param exchange current exchange_@return the FreeMarker template model, as a {@link SimpleHash} or subclass thereof;protected SimpleHash getTemplateModel(Map<String, Object> model, ServerWebExchange exchange) {_		SimpleHash fmModel = new SimpleHash(getObjectWrapper())__		fmModel.putAll(model)__		return fmModel__	};build,a,free,marker,template,model,for,the,given,model,map,p,the,default,implementation,builds,a,link,simple,hash,param,model,the,model,to,use,for,rendering,param,exchange,current,exchange,return,the,free,marker,template,model,as,a,link,simple,hash,or,subclass,thereof;protected,simple,hash,get,template,model,map,string,object,model,server,web,exchange,exchange,simple,hash,fm,model,new,simple,hash,get,object,wrapper,fm,model,put,all,model,return,fm,model
FreeMarkerView -> protected SimpleHash getTemplateModel(Map<String, Object> model, ServerWebExchange exchange);1495591054;Build a FreeMarker template model for the given model Map._<p>The default implementation builds a {@link SimpleHash}._@param model the model to use for rendering_@param exchange current exchange_@return the FreeMarker template model, as a {@link SimpleHash} or subclass thereof;protected SimpleHash getTemplateModel(Map<String, Object> model, ServerWebExchange exchange) {_		SimpleHash fmModel = new SimpleHash(getObjectWrapper())__		fmModel.putAll(model)__		return fmModel__	};build,a,free,marker,template,model,for,the,given,model,map,p,the,default,implementation,builds,a,link,simple,hash,param,model,the,model,to,use,for,rendering,param,exchange,current,exchange,return,the,free,marker,template,model,as,a,link,simple,hash,or,subclass,thereof;protected,simple,hash,get,template,model,map,string,object,model,server,web,exchange,exchange,simple,hash,fm,model,new,simple,hash,get,object,wrapper,fm,model,put,all,model,return,fm,model
FreeMarkerView -> protected SimpleHash getTemplateModel(Map<String, Object> model, ServerWebExchange exchange);1496837955;Build a FreeMarker template model for the given model Map._<p>The default implementation builds a {@link SimpleHash}._@param model the model to use for rendering_@param exchange current exchange_@return the FreeMarker template model, as a {@link SimpleHash} or subclass thereof;protected SimpleHash getTemplateModel(Map<String, Object> model, ServerWebExchange exchange) {_		SimpleHash fmModel = new SimpleHash(getObjectWrapper())__		fmModel.putAll(model)__		return fmModel__	};build,a,free,marker,template,model,for,the,given,model,map,p,the,default,implementation,builds,a,link,simple,hash,param,model,the,model,to,use,for,rendering,param,exchange,current,exchange,return,the,free,marker,template,model,as,a,link,simple,hash,or,subclass,thereof;protected,simple,hash,get,template,model,map,string,object,model,server,web,exchange,exchange,simple,hash,fm,model,new,simple,hash,get,object,wrapper,fm,model,put,all,model,return,fm,model
FreeMarkerView -> protected SimpleHash getTemplateModel(Map<String, Object> model, ServerWebExchange exchange);1497341594;Build a FreeMarker template model for the given model Map._<p>The default implementation builds a {@link SimpleHash}._@param model the model to use for rendering_@param exchange current exchange_@return the FreeMarker template model, as a {@link SimpleHash} or subclass thereof;protected SimpleHash getTemplateModel(Map<String, Object> model, ServerWebExchange exchange) {_		SimpleHash fmModel = new SimpleHash(getObjectWrapper())__		fmModel.putAll(model)__		return fmModel__	};build,a,free,marker,template,model,for,the,given,model,map,p,the,default,implementation,builds,a,link,simple,hash,param,model,the,model,to,use,for,rendering,param,exchange,current,exchange,return,the,free,marker,template,model,as,a,link,simple,hash,or,subclass,thereof;protected,simple,hash,get,template,model,map,string,object,model,server,web,exchange,exchange,simple,hash,fm,model,new,simple,hash,get,object,wrapper,fm,model,put,all,model,return,fm,model
FreeMarkerView -> protected SimpleHash getTemplateModel(Map<String, Object> model, ServerWebExchange exchange);1497359418;Build a FreeMarker template model for the given model Map._<p>The default implementation builds a {@link SimpleHash}._@param model the model to use for rendering_@param exchange current exchange_@return the FreeMarker template model, as a {@link SimpleHash} or subclass thereof;protected SimpleHash getTemplateModel(Map<String, Object> model, ServerWebExchange exchange) {_		SimpleHash fmModel = new SimpleHash(getObjectWrapper())__		fmModel.putAll(model)__		return fmModel__	};build,a,free,marker,template,model,for,the,given,model,map,p,the,default,implementation,builds,a,link,simple,hash,param,model,the,model,to,use,for,rendering,param,exchange,current,exchange,return,the,free,marker,template,model,as,a,link,simple,hash,or,subclass,thereof;protected,simple,hash,get,template,model,map,string,object,model,server,web,exchange,exchange,simple,hash,fm,model,new,simple,hash,get,object,wrapper,fm,model,put,all,model,return,fm,model
FreeMarkerView -> protected SimpleHash getTemplateModel(Map<String, Object> model, ServerWebExchange exchange);1497974922;Build a FreeMarker template model for the given model Map._<p>The default implementation builds a {@link SimpleHash}._@param model the model to use for rendering_@param exchange current exchange_@return the FreeMarker template model, as a {@link SimpleHash} or subclass thereof;protected SimpleHash getTemplateModel(Map<String, Object> model, ServerWebExchange exchange) {_		SimpleHash fmModel = new SimpleHash(getObjectWrapper())__		fmModel.putAll(model)__		return fmModel__	};build,a,free,marker,template,model,for,the,given,model,map,p,the,default,implementation,builds,a,link,simple,hash,param,model,the,model,to,use,for,rendering,param,exchange,current,exchange,return,the,free,marker,template,model,as,a,link,simple,hash,or,subclass,thereof;protected,simple,hash,get,template,model,map,string,object,model,server,web,exchange,exchange,simple,hash,fm,model,new,simple,hash,get,object,wrapper,fm,model,put,all,model,return,fm,model
FreeMarkerView -> protected SimpleHash getTemplateModel(Map<String, Object> model, ServerWebExchange exchange);1500448076;Build a FreeMarker template model for the given model Map._<p>The default implementation builds a {@link SimpleHash}._@param model the model to use for rendering_@param exchange current exchange_@return the FreeMarker template model, as a {@link SimpleHash} or subclass thereof;protected SimpleHash getTemplateModel(Map<String, Object> model, ServerWebExchange exchange) {_		SimpleHash fmModel = new SimpleHash(getObjectWrapper())__		fmModel.putAll(model)__		return fmModel__	};build,a,free,marker,template,model,for,the,given,model,map,p,the,default,implementation,builds,a,link,simple,hash,param,model,the,model,to,use,for,rendering,param,exchange,current,exchange,return,the,free,marker,template,model,as,a,link,simple,hash,or,subclass,thereof;protected,simple,hash,get,template,model,map,string,object,model,server,web,exchange,exchange,simple,hash,fm,model,new,simple,hash,get,object,wrapper,fm,model,put,all,model,return,fm,model
FreeMarkerView -> protected SimpleHash getTemplateModel(Map<String, Object> model, ServerWebExchange exchange);1506067698;Build a FreeMarker template model for the given model Map._<p>The default implementation builds a {@link SimpleHash}._@param model the model to use for rendering_@param exchange current exchange_@return the FreeMarker template model, as a {@link SimpleHash} or subclass thereof;protected SimpleHash getTemplateModel(Map<String, Object> model, ServerWebExchange exchange) {_		SimpleHash fmModel = new SimpleHash(getObjectWrapper())__		fmModel.putAll(model)__		return fmModel__	};build,a,free,marker,template,model,for,the,given,model,map,p,the,default,implementation,builds,a,link,simple,hash,param,model,the,model,to,use,for,rendering,param,exchange,current,exchange,return,the,free,marker,template,model,as,a,link,simple,hash,or,subclass,thereof;protected,simple,hash,get,template,model,map,string,object,model,server,web,exchange,exchange,simple,hash,fm,model,new,simple,hash,get,object,wrapper,fm,model,put,all,model,return,fm,model
FreeMarkerView -> protected SimpleHash getTemplateModel(Map<String, Object> model, ServerWebExchange exchange);1529721864;Build a FreeMarker template model for the given model Map._<p>The default implementation builds a {@link SimpleHash}._@param model the model to use for rendering_@param exchange current exchange_@return the FreeMarker template model, as a {@link SimpleHash} or subclass thereof;protected SimpleHash getTemplateModel(Map<String, Object> model, ServerWebExchange exchange) {_		SimpleHash fmModel = new SimpleHash(getObjectWrapper())__		fmModel.putAll(model)__		return fmModel__	};build,a,free,marker,template,model,for,the,given,model,map,p,the,default,implementation,builds,a,link,simple,hash,param,model,the,model,to,use,for,rendering,param,exchange,current,exchange,return,the,free,marker,template,model,as,a,link,simple,hash,or,subclass,thereof;protected,simple,hash,get,template,model,map,string,object,model,server,web,exchange,exchange,simple,hash,fm,model,new,simple,hash,get,object,wrapper,fm,model,put,all,model,return,fm,model
FreeMarkerView -> protected SimpleHash getTemplateModel(Map<String, Object> model, ServerWebExchange exchange);1530793633;Build a FreeMarker template model for the given model Map._<p>The default implementation builds a {@link SimpleHash}._@param model the model to use for rendering_@param exchange current exchange_@return the FreeMarker template model, as a {@link SimpleHash} or subclass thereof;protected SimpleHash getTemplateModel(Map<String, Object> model, ServerWebExchange exchange) {_		SimpleHash fmModel = new SimpleHash(getObjectWrapper())__		fmModel.putAll(model)__		return fmModel__	};build,a,free,marker,template,model,for,the,given,model,map,p,the,default,implementation,builds,a,link,simple,hash,param,model,the,model,to,use,for,rendering,param,exchange,current,exchange,return,the,free,marker,template,model,as,a,link,simple,hash,or,subclass,thereof;protected,simple,hash,get,template,model,map,string,object,model,server,web,exchange,exchange,simple,hash,fm,model,new,simple,hash,get,object,wrapper,fm,model,put,all,model,return,fm,model
FreeMarkerView -> protected Configuration obtainConfiguration();1496837955;Obtain the FreeMarker configuration for actual use._@return the FreeMarker configuration (never {@code null})_@throws IllegalStateException in case of no Configuration object set_@since 5.0;protected Configuration obtainConfiguration() {_		Configuration configuration = getConfiguration()__		Assert.state(configuration != null, "No Configuration set")__		return configuration__	};obtain,the,free,marker,configuration,for,actual,use,return,the,free,marker,configuration,never,code,null,throws,illegal,state,exception,in,case,of,no,configuration,object,set,since,5,0;protected,configuration,obtain,configuration,configuration,configuration,get,configuration,assert,state,configuration,null,no,configuration,set,return,configuration
FreeMarkerView -> protected Configuration obtainConfiguration();1497341594;Obtain the FreeMarker configuration for actual use._@return the FreeMarker configuration (never {@code null})_@throws IllegalStateException in case of no Configuration object set_@since 5.0;protected Configuration obtainConfiguration() {_		Configuration configuration = getConfiguration()__		Assert.state(configuration != null, "No Configuration set")__		return configuration__	};obtain,the,free,marker,configuration,for,actual,use,return,the,free,marker,configuration,never,code,null,throws,illegal,state,exception,in,case,of,no,configuration,object,set,since,5,0;protected,configuration,obtain,configuration,configuration,configuration,get,configuration,assert,state,configuration,null,no,configuration,set,return,configuration
FreeMarkerView -> protected Configuration obtainConfiguration();1497359418;Obtain the FreeMarker configuration for actual use._@return the FreeMarker configuration (never {@code null})_@throws IllegalStateException in case of no Configuration object set_@since 5.0;protected Configuration obtainConfiguration() {_		Configuration configuration = getConfiguration()__		Assert.state(configuration != null, "No Configuration set")__		return configuration__	};obtain,the,free,marker,configuration,for,actual,use,return,the,free,marker,configuration,never,code,null,throws,illegal,state,exception,in,case,of,no,configuration,object,set,since,5,0;protected,configuration,obtain,configuration,configuration,configuration,get,configuration,assert,state,configuration,null,no,configuration,set,return,configuration
FreeMarkerView -> protected Configuration obtainConfiguration();1497974922;Obtain the FreeMarker configuration for actual use._@return the FreeMarker configuration (never {@code null})_@throws IllegalStateException in case of no Configuration object set_@since 5.0;protected Configuration obtainConfiguration() {_		Configuration configuration = getConfiguration()__		Assert.state(configuration != null, "No Configuration set")__		return configuration__	};obtain,the,free,marker,configuration,for,actual,use,return,the,free,marker,configuration,never,code,null,throws,illegal,state,exception,in,case,of,no,configuration,object,set,since,5,0;protected,configuration,obtain,configuration,configuration,configuration,get,configuration,assert,state,configuration,null,no,configuration,set,return,configuration
FreeMarkerView -> protected Configuration obtainConfiguration();1500448076;Obtain the FreeMarker configuration for actual use._@return the FreeMarker configuration (never {@code null})_@throws IllegalStateException in case of no Configuration object set_@since 5.0;protected Configuration obtainConfiguration() {_		Configuration configuration = getConfiguration()__		Assert.state(configuration != null, "No Configuration set")__		return configuration__	};obtain,the,free,marker,configuration,for,actual,use,return,the,free,marker,configuration,never,code,null,throws,illegal,state,exception,in,case,of,no,configuration,object,set,since,5,0;protected,configuration,obtain,configuration,configuration,configuration,get,configuration,assert,state,configuration,null,no,configuration,set,return,configuration
FreeMarkerView -> protected Configuration obtainConfiguration();1506067698;Obtain the FreeMarker configuration for actual use._@return the FreeMarker configuration (never {@code null})_@throws IllegalStateException in case of no Configuration object set_@since 5.0;protected Configuration obtainConfiguration() {_		Configuration configuration = getConfiguration()__		Assert.state(configuration != null, "No Configuration set")__		return configuration__	};obtain,the,free,marker,configuration,for,actual,use,return,the,free,marker,configuration,never,code,null,throws,illegal,state,exception,in,case,of,no,configuration,object,set,since,5,0;protected,configuration,obtain,configuration,configuration,configuration,get,configuration,assert,state,configuration,null,no,configuration,set,return,configuration
FreeMarkerView -> protected Configuration obtainConfiguration();1529721864;Obtain the FreeMarker configuration for actual use._@return the FreeMarker configuration (never {@code null})_@throws IllegalStateException in case of no Configuration object set_@since 5.0;protected Configuration obtainConfiguration() {_		Configuration configuration = getConfiguration()__		Assert.state(configuration != null, "No Configuration set")__		return configuration__	};obtain,the,free,marker,configuration,for,actual,use,return,the,free,marker,configuration,never,code,null,throws,illegal,state,exception,in,case,of,no,configuration,object,set,since,5,0;protected,configuration,obtain,configuration,configuration,configuration,get,configuration,assert,state,configuration,null,no,configuration,set,return,configuration
FreeMarkerView -> protected Configuration obtainConfiguration();1530793633;Obtain the FreeMarker configuration for actual use._@return the FreeMarker configuration (never {@code null})_@throws IllegalStateException in case of no Configuration object set_@since 5.0;protected Configuration obtainConfiguration() {_		Configuration configuration = getConfiguration()__		Assert.state(configuration != null, "No Configuration set")__		return configuration__	};obtain,the,free,marker,configuration,for,actual,use,return,the,free,marker,configuration,never,code,null,throws,illegal,state,exception,in,case,of,no,configuration,object,set,since,5,0;protected,configuration,obtain,configuration,configuration,configuration,get,configuration,assert,state,configuration,null,no,configuration,set,return,configuration
FreeMarkerView -> @Nullable 	protected String getEncoding();1496837955;Return the encoding for the FreeMarker template.;@Nullable_	protected String getEncoding() {_		return this.encoding__	};return,the,encoding,for,the,free,marker,template;nullable,protected,string,get,encoding,return,this,encoding
FreeMarkerView -> @Nullable 	protected String getEncoding();1497341594;Return the encoding for the FreeMarker template.;@Nullable_	protected String getEncoding() {_		return this.encoding__	};return,the,encoding,for,the,free,marker,template;nullable,protected,string,get,encoding,return,this,encoding
FreeMarkerView -> @Nullable 	protected String getEncoding();1497359418;Return the encoding for the FreeMarker template.;@Nullable_	protected String getEncoding() {_		return this.encoding__	};return,the,encoding,for,the,free,marker,template;nullable,protected,string,get,encoding,return,this,encoding
FreeMarkerView -> @Nullable 	protected String getEncoding();1497974922;Return the encoding for the FreeMarker template.;@Nullable_	protected String getEncoding() {_		return this.encoding__	};return,the,encoding,for,the,free,marker,template;nullable,protected,string,get,encoding,return,this,encoding
FreeMarkerView -> @Nullable 	protected String getEncoding();1500448076;Return the encoding for the FreeMarker template.;@Nullable_	protected String getEncoding() {_		return this.encoding__	};return,the,encoding,for,the,free,marker,template;nullable,protected,string,get,encoding,return,this,encoding
FreeMarkerView -> @Nullable 	protected String getEncoding();1506067698;Return the encoding for the FreeMarker template.;@Nullable_	protected String getEncoding() {_		return this.encoding__	};return,the,encoding,for,the,free,marker,template;nullable,protected,string,get,encoding,return,this,encoding
FreeMarkerView -> @Nullable 	protected String getEncoding();1529721864;Return the encoding for the FreeMarker template.;@Nullable_	protected String getEncoding() {_		return this.encoding__	};return,the,encoding,for,the,free,marker,template;nullable,protected,string,get,encoding,return,this,encoding
FreeMarkerView -> @Nullable 	protected String getEncoding();1530793633;Return the encoding for the FreeMarker template.;@Nullable_	protected String getEncoding() {_		return this.encoding__	};return,the,encoding,for,the,free,marker,template;nullable,protected,string,get,encoding,return,this,encoding
FreeMarkerView -> public void setConfiguration(@Nullable Configuration configuration);1500448076;Set the FreeMarker Configuration to be used by this view._<p>Typically this property is not set directly. Instead a single_{@link FreeMarkerConfig} is expected in the Spring application context_which is used to obtain the FreeMarker configuration.;public void setConfiguration(@Nullable Configuration configuration) {_		this.configuration = configuration__	};set,the,free,marker,configuration,to,be,used,by,this,view,p,typically,this,property,is,not,set,directly,instead,a,single,link,free,marker,config,is,expected,in,the,spring,application,context,which,is,used,to,obtain,the,free,marker,configuration;public,void,set,configuration,nullable,configuration,configuration,this,configuration,configuration
FreeMarkerView -> public void setConfiguration(@Nullable Configuration configuration);1506067698;Set the FreeMarker Configuration to be used by this view._<p>Typically this property is not set directly. Instead a single_{@link FreeMarkerConfig} is expected in the Spring application context_which is used to obtain the FreeMarker configuration.;public void setConfiguration(@Nullable Configuration configuration) {_		this.configuration = configuration__	};set,the,free,marker,configuration,to,be,used,by,this,view,p,typically,this,property,is,not,set,directly,instead,a,single,link,free,marker,config,is,expected,in,the,spring,application,context,which,is,used,to,obtain,the,free,marker,configuration;public,void,set,configuration,nullable,configuration,configuration,this,configuration,configuration
FreeMarkerView -> public void setConfiguration(@Nullable Configuration configuration);1529721864;Set the FreeMarker Configuration to be used by this view._<p>Typically this property is not set directly. Instead a single_{@link FreeMarkerConfig} is expected in the Spring application context_which is used to obtain the FreeMarker configuration.;public void setConfiguration(@Nullable Configuration configuration) {_		this.configuration = configuration__	};set,the,free,marker,configuration,to,be,used,by,this,view,p,typically,this,property,is,not,set,directly,instead,a,single,link,free,marker,config,is,expected,in,the,spring,application,context,which,is,used,to,obtain,the,free,marker,configuration;public,void,set,configuration,nullable,configuration,configuration,this,configuration,configuration
FreeMarkerView -> public void setConfiguration(@Nullable Configuration configuration);1530793633;Set the FreeMarker Configuration to be used by this view._<p>Typically this property is not set directly. Instead a single_{@link FreeMarkerConfig} is expected in the Spring application context_which is used to obtain the FreeMarker configuration.;public void setConfiguration(@Nullable Configuration configuration) {_		this.configuration = configuration__	};set,the,free,marker,configuration,to,be,used,by,this,view,p,typically,this,property,is,not,set,directly,instead,a,single,link,free,marker,config,is,expected,in,the,spring,application,context,which,is,used,to,obtain,the,free,marker,configuration;public,void,set,configuration,nullable,configuration,configuration,this,configuration,configuration
