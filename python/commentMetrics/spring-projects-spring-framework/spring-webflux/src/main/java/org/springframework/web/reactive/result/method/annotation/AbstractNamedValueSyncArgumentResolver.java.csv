# id;timestamp;commentText;codeText;commentWords;codeWords
AbstractNamedValueSyncArgumentResolver -> protected abstract Optional<Object> resolveNamedValue(String name, MethodParameter param, ServerWebExchange exchange)_;1490354145;Actually resolve the value synchronously.;protected abstract Optional<Object> resolveNamedValue(String name, MethodParameter param, ServerWebExchange exchange)_;actually,resolve,the,value,synchronously;protected,abstract,optional,object,resolve,named,value,string,name,method,parameter,param,server,web,exchange,exchange
AbstractNamedValueSyncArgumentResolver -> protected abstract Optional<Object> resolveNamedValue(String name, MethodParameter param, ServerWebExchange exchange)_;1495868221;Actually resolve the value synchronously.;protected abstract Optional<Object> resolveNamedValue(String name, MethodParameter param, ServerWebExchange exchange)_;actually,resolve,the,value,synchronously;protected,abstract,optional,object,resolve,named,value,string,name,method,parameter,param,server,web,exchange,exchange
AbstractNamedValueSyncArgumentResolver -> protected AbstractNamedValueSyncArgumentResolver(@Nullable ConfigurableBeanFactory factory, ReactiveAdapterRegistry registry);1495868221;@param factory a bean factory to use for resolving  ${...}_placeholder and #{...} SpEL expressions in default values__or {@code null} if default values are not expected to have expressions_@param registry for checking reactive type wrappers;protected AbstractNamedValueSyncArgumentResolver(@Nullable ConfigurableBeanFactory factory, ReactiveAdapterRegistry registry) {_		super(factory, registry)__	};param,factory,a,bean,factory,to,use,for,resolving,placeholder,and,sp,el,expressions,in,default,values,or,code,null,if,default,values,are,not,expected,to,have,expressions,param,registry,for,checking,reactive,type,wrappers;protected,abstract,named,value,sync,argument,resolver,nullable,configurable,bean,factory,factory,reactive,adapter,registry,registry,super,factory,registry
AbstractNamedValueSyncArgumentResolver -> protected AbstractNamedValueSyncArgumentResolver(@Nullable ConfigurableBeanFactory factory, ReactiveAdapterRegistry registry);1498762530;@param factory a bean factory to use for resolving  ${...}_placeholder and #{...} SpEL expressions in default values__or {@code null} if default values are not expected to have expressions_@param registry for checking reactive type wrappers;protected AbstractNamedValueSyncArgumentResolver(@Nullable ConfigurableBeanFactory factory, ReactiveAdapterRegistry registry) {_		super(factory, registry)__	};param,factory,a,bean,factory,to,use,for,resolving,placeholder,and,sp,el,expressions,in,default,values,or,code,null,if,default,values,are,not,expected,to,have,expressions,param,registry,for,checking,reactive,type,wrappers;protected,abstract,named,value,sync,argument,resolver,nullable,configurable,bean,factory,factory,reactive,adapter,registry,registry,super,factory,registry
AbstractNamedValueSyncArgumentResolver -> protected AbstractNamedValueSyncArgumentResolver(@Nullable ConfigurableBeanFactory factory, ReactiveAdapterRegistry registry);1498771188;@param factory a bean factory to use for resolving  ${...}_placeholder and #{...} SpEL expressions in default values__or {@code null} if default values are not expected to have expressions_@param registry for checking reactive type wrappers;protected AbstractNamedValueSyncArgumentResolver(@Nullable ConfigurableBeanFactory factory, ReactiveAdapterRegistry registry) {_		super(factory, registry)__	};param,factory,a,bean,factory,to,use,for,resolving,placeholder,and,sp,el,expressions,in,default,values,or,code,null,if,default,values,are,not,expected,to,have,expressions,param,registry,for,checking,reactive,type,wrappers;protected,abstract,named,value,sync,argument,resolver,nullable,configurable,bean,factory,factory,reactive,adapter,registry,registry,super,factory,registry
AbstractNamedValueSyncArgumentResolver -> @Nullable 	protected abstract Object resolveNamedValue(String name, MethodParameter param, ServerWebExchange exchange)_;1498762530;Actually resolve the value synchronously.;@Nullable_	protected abstract Object resolveNamedValue(String name, MethodParameter param, ServerWebExchange exchange)_;actually,resolve,the,value,synchronously;nullable,protected,abstract,object,resolve,named,value,string,name,method,parameter,param,server,web,exchange,exchange
AbstractNamedValueSyncArgumentResolver -> @Nullable 	protected abstract Object resolveNamedValue(String name, MethodParameter param, ServerWebExchange exchange)_;1498771188;Actually resolve the value synchronously.;@Nullable_	protected abstract Object resolveNamedValue(String name, MethodParameter param, ServerWebExchange exchange)_;actually,resolve,the,value,synchronously;nullable,protected,abstract,object,resolve,named,value,string,name,method,parameter,param,server,web,exchange,exchange
AbstractNamedValueSyncArgumentResolver -> @Nullable 	protected abstract Object resolveNamedValue(String name, MethodParameter param, ServerWebExchange exchange)_;1508461298;Actually resolve the value synchronously.;@Nullable_	protected abstract Object resolveNamedValue(String name, MethodParameter param, ServerWebExchange exchange)_;actually,resolve,the,value,synchronously;nullable,protected,abstract,object,resolve,named,value,string,name,method,parameter,param,server,web,exchange,exchange
AbstractNamedValueSyncArgumentResolver -> @Nullable 	protected abstract Object resolveNamedValue(String name, MethodParameter param, ServerWebExchange exchange)_;1516653284;Actually resolve the value synchronously.;@Nullable_	protected abstract Object resolveNamedValue(String name, MethodParameter param, ServerWebExchange exchange)_;actually,resolve,the,value,synchronously;nullable,protected,abstract,object,resolve,named,value,string,name,method,parameter,param,server,web,exchange,exchange
AbstractNamedValueSyncArgumentResolver -> @Nullable 	protected abstract Object resolveNamedValue(String name, MethodParameter param, ServerWebExchange exchange)_;1530174524;Actually resolve the value synchronously.;@Nullable_	protected abstract Object resolveNamedValue(String name, MethodParameter param, ServerWebExchange exchange)_;actually,resolve,the,value,synchronously;nullable,protected,abstract,object,resolve,named,value,string,name,method,parameter,param,server,web,exchange,exchange
AbstractNamedValueSyncArgumentResolver -> protected abstract Optional<Object> resolveNamedValue(String name, 			MethodParameter param, ServerWebExchange exchange)_;1489433860;Actually resolve the value synchronously.;protected abstract Optional<Object> resolveNamedValue(String name,_			MethodParameter param, ServerWebExchange exchange)_;actually,resolve,the,value,synchronously;protected,abstract,optional,object,resolve,named,value,string,name,method,parameter,param,server,web,exchange,exchange
AbstractNamedValueSyncArgumentResolver -> protected abstract Optional<Object> resolveNamedValue(String name, 			MethodParameter param, ServerWebExchange exchange)_;1489535791;Actually resolve the value synchronously.;protected abstract Optional<Object> resolveNamedValue(String name,_			MethodParameter param, ServerWebExchange exchange)_;actually,resolve,the,value,synchronously;protected,abstract,optional,object,resolve,named,value,string,name,method,parameter,param,server,web,exchange,exchange
AbstractNamedValueSyncArgumentResolver -> protected AbstractNamedValueSyncArgumentResolver( 			@Nullable ConfigurableBeanFactory factory, ReactiveAdapterRegistry registry);1516653284;@param factory a bean factory to use for resolving  ${...}_placeholder and #{...} SpEL expressions in default values__or {@code null} if default values are not expected to have expressions_@param registry for checking reactive type wrappers;protected AbstractNamedValueSyncArgumentResolver(_			@Nullable ConfigurableBeanFactory factory, ReactiveAdapterRegistry registry) {__		super(factory, registry)__	};param,factory,a,bean,factory,to,use,for,resolving,placeholder,and,sp,el,expressions,in,default,values,or,code,null,if,default,values,are,not,expected,to,have,expressions,param,registry,for,checking,reactive,type,wrappers;protected,abstract,named,value,sync,argument,resolver,nullable,configurable,bean,factory,factory,reactive,adapter,registry,registry,super,factory,registry
AbstractNamedValueSyncArgumentResolver -> protected AbstractNamedValueSyncArgumentResolver( 			@Nullable ConfigurableBeanFactory factory, ReactiveAdapterRegistry registry);1530174524;Create a new {@link AbstractNamedValueSyncArgumentResolver}._@param factory a bean factory to use for resolving {@code ${...}}_placeholder and {@code #{...}} SpEL expressions in default values__or {@code null} if default values are not expected to have expressions_@param registry for checking reactive type wrappers;protected AbstractNamedValueSyncArgumentResolver(_			@Nullable ConfigurableBeanFactory factory, ReactiveAdapterRegistry registry) {__		super(factory, registry)__	};create,a,new,link,abstract,named,value,sync,argument,resolver,param,factory,a,bean,factory,to,use,for,resolving,code,placeholder,and,code,sp,el,expressions,in,default,values,or,code,null,if,default,values,are,not,expected,to,have,expressions,param,registry,for,checking,reactive,type,wrappers;protected,abstract,named,value,sync,argument,resolver,nullable,configurable,bean,factory,factory,reactive,adapter,registry,registry,super,factory,registry
