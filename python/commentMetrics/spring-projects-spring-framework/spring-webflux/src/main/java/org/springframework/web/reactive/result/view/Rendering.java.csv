commented;modifiers;parameterAmount;loc;comment;code
true;;0;2;/**  * Return the selected {@link String} view name or {@link View} object.  */ ;/**  * Return the selected {@link String} view name or {@link View} object.  */ @Nullable Object view().
true;;0;1;/**  * Return attributes to add to the model.  */ ;/**  * Return attributes to add to the model.  */ Map<String, Object> modelAttributes().
true;;0;2;/**  * Return the HTTP status to set the response to.  */ ;/**  * Return the HTTP status to set the response to.  */ @Nullable HttpStatus status().
true;;0;1;/**  * Return headers to add to the response.  */ ;/**  * Return headers to add to the response.  */ HttpHeaders headers().
true;static;1;3;/**  * Create a new builder for response rendering based on the given view name.  * @param name the view name to be resolved to a {@link View}  * @return the builder  */ ;/**  * Create a new builder for response rendering based on the given view name.  * @param name the view name to be resolved to a {@link View}  * @return the builder  */ static Builder<?> view(String name) {     return new DefaultRenderingBuilder(name). }
true;static;1;3;/**  * Create a new builder for a redirect through a {@link RedirectView}.  * @param url the redirect URL  * @return the builder  */ ;/**  * Create a new builder for a redirect through a {@link RedirectView}.  * @param url the redirect URL  * @return the builder  */ static RedirectBuilder redirectTo(String url) {     return new DefaultRenderingBuilder(new RedirectView(url)). }
true;;2;1;/**  * Add the given model attribute with the supplied name.  * @see Model#addAttribute(String, Object)  */ ;/**  * Add the given model attribute with the supplied name.  * @see Model#addAttribute(String, Object)  */ B modelAttribute(String name, Object value).
true;;1;1;/**  * Add an attribute to the model using a  * {@link org.springframework.core.Conventions#getVariableName generated name}.  * @see Model#addAttribute(Object)  */ ;/**  * Add an attribute to the model using a  * {@link org.springframework.core.Conventions#getVariableName generated name}.  * @see Model#addAttribute(Object)  */ B modelAttribute(Object value).
true;;1;1;/**  * Add all given attributes to the model using  * {@link org.springframework.core.Conventions#getVariableName generated names}.  * @see Model#addAllAttributes(Collection)  */ ;/**  * Add all given attributes to the model using  * {@link org.springframework.core.Conventions#getVariableName generated names}.  * @see Model#addAllAttributes(Collection)  */ B modelAttributes(Object... values).
true;;1;1;/**  * Add the given attributes to the model.  * @see Model#addAllAttributes(Map)  */ ;/**  * Add the given attributes to the model.  * @see Model#addAllAttributes(Map)  */ B model(Map<String, ?> map).
true;;1;1;/**  * Specify the status to use for the response.  */ ;/**  * Specify the status to use for the response.  */ B status(HttpStatus status).
true;;2;1;/**  * Specify a header to add to the response.  */ ;/**  * Specify a header to add to the response.  */ B header(String headerName, String... headerValues).
true;;1;1;/**  * Specify headers to add to the response.  */ ;/**  * Specify headers to add to the response.  */ B headers(HttpHeaders headers).
true;;0;1;/**  * Builder the {@link Rendering} instance.  */ ;/**  * Builder the {@link Rendering} instance.  */ Rendering build().
true;;1;1;/**  * Whether to the provided redirect URL should be prepended with the  * application context path (if any).  * <p>By default this is set to {@code true}.  *  * @see RedirectView#setContextRelative(boolean)  */ ;/**  * Whether to the provided redirect URL should be prepended with the  * application context path (if any).  * <p>By default this is set to {@code true}.  *  * @see RedirectView#setContextRelative(boolean)  */ RedirectBuilder contextRelative(boolean contextRelative).
true;;1;1;/**  * Whether to append the query string of the current URL to the target  * redirect URL or not.  * <p>By default this is set to {@code false}.  *  * @see RedirectView#setPropagateQuery(boolean)  */ ;/**  * Whether to append the query string of the current URL to the target  * redirect URL or not.  * <p>By default this is set to {@code false}.  *  * @see RedirectView#setPropagateQuery(boolean)  */ RedirectBuilder propagateQuery(boolean propagate).
