# id;timestamp;commentText;codeText;commentWords;codeWords
ExchangeFunction -> default ExchangeFunction filter(ExchangeFilterFunction filter);1485986572;Filters this exchange function with the given {@code ExchangeFilterFunction}, resulting in a_filtered {@code ExchangeFunction}._@param filter the filter to apply to this exchange_@return the filtered exchange_@see ExchangeFilterFunction#apply(ExchangeFunction);default ExchangeFunction filter(ExchangeFilterFunction filter) {_		Assert.notNull(filter, "'filter' must not be null")___		return filter.apply(this)__	};filters,this,exchange,function,with,the,given,code,exchange,filter,function,resulting,in,a,filtered,code,exchange,function,param,filter,the,filter,to,apply,to,this,exchange,return,the,filtered,exchange,see,exchange,filter,function,apply,exchange,function;default,exchange,function,filter,exchange,filter,function,filter,assert,not,null,filter,filter,must,not,be,null,return,filter,apply,this
ExchangeFunction -> default ExchangeFunction filter(ExchangeFilterFunction filter);1486990463;Filters this exchange function with the given {@code ExchangeFilterFunction}, resulting in a_filtered {@code ExchangeFunction}._@param filter the filter to apply to this exchange_@return the filtered exchange_@see ExchangeFilterFunction#apply(ExchangeFunction);default ExchangeFunction filter(ExchangeFilterFunction filter) {_		Assert.notNull(filter, "'filter' must not be null")___		return filter.apply(this)__	};filters,this,exchange,function,with,the,given,code,exchange,filter,function,resulting,in,a,filtered,code,exchange,function,param,filter,the,filter,to,apply,to,this,exchange,return,the,filtered,exchange,see,exchange,filter,function,apply,exchange,function;default,exchange,function,filter,exchange,filter,function,filter,assert,not,null,filter,filter,must,not,be,null,return,filter,apply,this
ExchangeFunction -> default ExchangeFunction filter(ExchangeFilterFunction filter);1487687241;Filters this exchange function with the given {@code ExchangeFilterFunction}, resulting in a_filtered {@code ExchangeFunction}._@param filter the filter to apply to this exchange_@return the filtered exchange_@see ExchangeFilterFunction#apply(ExchangeFunction);default ExchangeFunction filter(ExchangeFilterFunction filter) {_		Assert.notNull(filter, "'filter' must not be null")__		return filter.apply(this)__	};filters,this,exchange,function,with,the,given,code,exchange,filter,function,resulting,in,a,filtered,code,exchange,function,param,filter,the,filter,to,apply,to,this,exchange,return,the,filtered,exchange,see,exchange,filter,function,apply,exchange,function;default,exchange,function,filter,exchange,filter,function,filter,assert,not,null,filter,filter,must,not,be,null,return,filter,apply,this
ExchangeFunction -> default ExchangeFunction filter(ExchangeFilterFunction filter);1524865018;Filters this exchange function with the given {@code ExchangeFilterFunction}, resulting in a_filtered {@code ExchangeFunction}._@param filter the filter to apply to this exchange_@return the filtered exchange_@see ExchangeFilterFunction#apply(ExchangeFunction);default ExchangeFunction filter(ExchangeFilterFunction filter) {_		return filter.apply(this)__	};filters,this,exchange,function,with,the,given,code,exchange,filter,function,resulting,in,a,filtered,code,exchange,function,param,filter,the,filter,to,apply,to,this,exchange,return,the,filtered,exchange,see,exchange,filter,function,apply,exchange,function;default,exchange,function,filter,exchange,filter,function,filter,return,filter,apply,this
ExchangeFunction -> Mono<ClientResponse> exchange(ClientRequest request)_;1486990463;Exchange the given request for a response mono._@param request the request to exchange_@return the delayed response;Mono<ClientResponse> exchange(ClientRequest request)_;exchange,the,given,request,for,a,response,mono,param,request,the,request,to,exchange,return,the,delayed,response;mono,client,response,exchange,client,request,request
ExchangeFunction -> Mono<ClientResponse> exchange(ClientRequest request)_;1487687241;Exchange the given request for a response mono._@param request the request to exchange_@return the delayed response;Mono<ClientResponse> exchange(ClientRequest request)_;exchange,the,given,request,for,a,response,mono,param,request,the,request,to,exchange,return,the,delayed,response;mono,client,response,exchange,client,request,request
ExchangeFunction -> Mono<ClientResponse> exchange(ClientRequest request)_;1524865018;Exchange the given request for a response mono._@param request the request to exchange_@return the delayed response;Mono<ClientResponse> exchange(ClientRequest request)_;exchange,the,given,request,for,a,response,mono,param,request,the,request,to,exchange,return,the,delayed,response;mono,client,response,exchange,client,request,request
