# id;timestamp;commentText;codeText;commentWords;codeWords
AbstractHandlerMethodMapping -> protected void handleMatch(T mapping, HandlerMethod handlerMethod, String lookupPath, 			ServerWebExchange exchange);1498756719;Invoked when a matching mapping is found._@param mapping the matching mapping_@param handlerMethod the matching method_@param lookupPath the lookup path within the current mapping_@param exchange the current exchange;protected void handleMatch(T mapping, HandlerMethod handlerMethod, String lookupPath,_			ServerWebExchange exchange) {_	};invoked,when,a,matching,mapping,is,found,param,mapping,the,matching,mapping,param,handler,method,the,matching,method,param,lookup,path,the,lookup,path,within,the,current,mapping,param,exchange,the,current,exchange;protected,void,handle,match,t,mapping,handler,method,handler,method,string,lookup,path,server,web,exchange,exchange
AbstractHandlerMethodMapping -> protected void handleMatch(T mapping, HandlerMethod handlerMethod, String lookupPath, 			ServerWebExchange exchange);1498861175;Invoked when a matching mapping is found._@param mapping the matching mapping_@param handlerMethod the matching method_@param lookupPath the lookup path within the current mapping_@param exchange the current exchange;protected void handleMatch(T mapping, HandlerMethod handlerMethod, String lookupPath,_			ServerWebExchange exchange) {_	};invoked,when,a,matching,mapping,is,found,param,mapping,the,matching,mapping,param,handler,method,the,matching,method,param,lookup,path,the,lookup,path,within,the,current,mapping,param,exchange,the,current,exchange;protected,void,handle,match,t,mapping,handler,method,handler,method,string,lookup,path,server,web,exchange,exchange
AbstractHandlerMethodMapping -> protected HandlerMethod lookupHandlerMethod(String lookupPath, ServerWebExchange exchange) 			throws Exception;1485986572;Look up the best-matching handler method for the current request._If multiple matches are found, the best match is selected._@param lookupPath mapping lookup path within the current servlet mapping_@param exchange the current exchange_@return the best-matching handler method, or {@code null} if no match_@see #handleMatch(Object, String,  ServerWebExchange)_@see #handleNoMatch(Set, String, ServerWebExchange);protected HandlerMethod lookupHandlerMethod(String lookupPath, ServerWebExchange exchange)_			throws Exception {__		List<Match> matches = new ArrayList<Match>()__		List<T> directPathMatches = this.mappingRegistry.getMappingsByUrl(lookupPath)__		if (directPathMatches != null) {_			addMatchingMappings(directPathMatches, matches, exchange)__		}_		if (matches.isEmpty()) {_			_			addMatchingMappings(this.mappingRegistry.getMappings().keySet(), matches, exchange)__		}__		if (!matches.isEmpty()) {_			Comparator<Match> comparator = new MatchComparator(getMappingComparator(exchange))__			Collections.sort(matches, comparator)__			if (logger.isTraceEnabled()) {_				logger.trace("Found " + matches.size() + " matching mapping(s) for [" +_						lookupPath + "] : " + matches)__			}_			Match bestMatch = matches.get(0)__			if (matches.size() > 1) {_				if (CorsUtils.isPreFlightRequest(exchange.getRequest())) {_					return PREFLIGHT_AMBIGUOUS_MATCH__				}_				Match secondBestMatch = matches.get(1)__				if (comparator.compare(bestMatch, secondBestMatch) == 0) {_					Method m1 = bestMatch.handlerMethod.getMethod()__					Method m2 = secondBestMatch.handlerMethod.getMethod()__					throw new IllegalStateException("Ambiguous handler methods mapped for HTTP path '" +_							lookupPath + "': {" + m1 + ", " + m2 + "}")__				}_			}_			handleMatch(bestMatch.mapping, lookupPath, exchange)__			return bestMatch.handlerMethod__		}_		else {_			return handleNoMatch(this.mappingRegistry.getMappings().keySet(), lookupPath, exchange)__		}_	};look,up,the,best,matching,handler,method,for,the,current,request,if,multiple,matches,are,found,the,best,match,is,selected,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,exchange,the,current,exchange,return,the,best,matching,handler,method,or,code,null,if,no,match,see,handle,match,object,string,server,web,exchange,see,handle,no,match,set,string,server,web,exchange;protected,handler,method,lookup,handler,method,string,lookup,path,server,web,exchange,exchange,throws,exception,list,match,matches,new,array,list,match,list,t,direct,path,matches,this,mapping,registry,get,mappings,by,url,lookup,path,if,direct,path,matches,null,add,matching,mappings,direct,path,matches,matches,exchange,if,matches,is,empty,add,matching,mappings,this,mapping,registry,get,mappings,key,set,matches,exchange,if,matches,is,empty,comparator,match,comparator,new,match,comparator,get,mapping,comparator,exchange,collections,sort,matches,comparator,if,logger,is,trace,enabled,logger,trace,found,matches,size,matching,mapping,s,for,lookup,path,matches,match,best,match,matches,get,0,if,matches,size,1,if,cors,utils,is,pre,flight,request,exchange,get,request,return,match,second,best,match,matches,get,1,if,comparator,compare,best,match,second,best,match,0,method,m1,best,match,handler,method,get,method,method,m2,second,best,match,handler,method,get,method,throw,new,illegal,state,exception,ambiguous,handler,methods,mapped,for,http,path,lookup,path,m1,m2,handle,match,best,match,mapping,lookup,path,exchange,return,best,match,handler,method,else,return,handle,no,match,this,mapping,registry,get,mappings,key,set,lookup,path,exchange
AbstractHandlerMethodMapping -> protected HandlerMethod lookupHandlerMethod(String lookupPath, ServerWebExchange exchange) 			throws Exception;1486635693;Look up the best-matching handler method for the current request._If multiple matches are found, the best match is selected._@param lookupPath mapping lookup path within the current servlet mapping_@param exchange the current exchange_@return the best-matching handler method, or {@code null} if no match_@see #handleMatch(Object, String, ServerWebExchange)_@see #handleNoMatch(Set, String, ServerWebExchange);protected HandlerMethod lookupHandlerMethod(String lookupPath, ServerWebExchange exchange)_			throws Exception {__		List<Match> matches = findMatchingMappings(lookupPath, exchange)___		if (!matches.isEmpty()) {_			Comparator<Match> comparator = new MatchComparator(getMappingComparator(exchange))__			matches.sort(comparator)__			if (logger.isTraceEnabled()) {_				logger.trace("Found " + matches.size() + " matching mapping(s) for [" +_						lookupPath + "] : " + matches)__			}_			Match bestMatch = matches.get(0)__			if (matches.size() > 1) {_				if (CorsUtils.isPreFlightRequest(exchange.getRequest())) {_					return PREFLIGHT_AMBIGUOUS_MATCH__				}_				Match secondBestMatch = matches.get(1)__				if (comparator.compare(bestMatch, secondBestMatch) == 0) {_					Method m1 = bestMatch.handlerMethod.getMethod()__					Method m2 = secondBestMatch.handlerMethod.getMethod()__					throw new IllegalStateException("Ambiguous handler methods mapped for HTTP path '" +_							lookupPath + "': {" + m1 + ", " + m2 + "}")__				}_			}_			handleMatch(bestMatch.mapping, lookupPath, exchange)__			return bestMatch.handlerMethod__		}_		else {_			return handleNoMatch(this.mappingRegistry.getMappings().keySet(), lookupPath, exchange)__		}_	};look,up,the,best,matching,handler,method,for,the,current,request,if,multiple,matches,are,found,the,best,match,is,selected,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,exchange,the,current,exchange,return,the,best,matching,handler,method,or,code,null,if,no,match,see,handle,match,object,string,server,web,exchange,see,handle,no,match,set,string,server,web,exchange;protected,handler,method,lookup,handler,method,string,lookup,path,server,web,exchange,exchange,throws,exception,list,match,matches,find,matching,mappings,lookup,path,exchange,if,matches,is,empty,comparator,match,comparator,new,match,comparator,get,mapping,comparator,exchange,matches,sort,comparator,if,logger,is,trace,enabled,logger,trace,found,matches,size,matching,mapping,s,for,lookup,path,matches,match,best,match,matches,get,0,if,matches,size,1,if,cors,utils,is,pre,flight,request,exchange,get,request,return,match,second,best,match,matches,get,1,if,comparator,compare,best,match,second,best,match,0,method,m1,best,match,handler,method,get,method,method,m2,second,best,match,handler,method,get,method,throw,new,illegal,state,exception,ambiguous,handler,methods,mapped,for,http,path,lookup,path,m1,m2,handle,match,best,match,mapping,lookup,path,exchange,return,best,match,handler,method,else,return,handle,no,match,this,mapping,registry,get,mappings,key,set,lookup,path,exchange
AbstractHandlerMethodMapping -> protected HandlerMethod lookupHandlerMethod(String lookupPath, ServerWebExchange exchange) 			throws Exception;1486674586;Look up the best-matching handler method for the current request._If multiple matches are found, the best match is selected._@param lookupPath mapping lookup path within the current servlet mapping_@param exchange the current exchange_@return the best-matching handler method, or {@code null} if no match_@see #handleMatch(Object, String, ServerWebExchange)_@see #handleNoMatch(Set, String, ServerWebExchange);protected HandlerMethod lookupHandlerMethod(String lookupPath, ServerWebExchange exchange)_			throws Exception {__		List<Match> matches = findMatchingMappings(lookupPath, exchange)___		if (!matches.isEmpty()) {_			Comparator<Match> comparator = new MatchComparator(getMappingComparator(exchange))__			matches.sort(comparator)__			if (logger.isTraceEnabled()) {_				logger.trace("Found " + matches.size() + " matching mapping(s) for [" +_						lookupPath + "] : " + matches)__			}_			Match bestMatch = matches.get(0)__			if (matches.size() > 1) {_				if (CorsUtils.isPreFlightRequest(exchange.getRequest())) {_					return PREFLIGHT_AMBIGUOUS_MATCH__				}_				Match secondBestMatch = matches.get(1)__				if (comparator.compare(bestMatch, secondBestMatch) == 0) {_					Method m1 = bestMatch.handlerMethod.getMethod()__					Method m2 = secondBestMatch.handlerMethod.getMethod()__					throw new IllegalStateException("Ambiguous handler methods mapped for HTTP path '" +_							lookupPath + "': {" + m1 + ", " + m2 + "}")__				}_			}_			handleMatch(bestMatch.mapping, lookupPath, exchange)__			return bestMatch.handlerMethod__		}_		else {_			return handleNoMatch(this.mappingRegistry.getMappings().keySet(), lookupPath, exchange)__		}_	};look,up,the,best,matching,handler,method,for,the,current,request,if,multiple,matches,are,found,the,best,match,is,selected,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,exchange,the,current,exchange,return,the,best,matching,handler,method,or,code,null,if,no,match,see,handle,match,object,string,server,web,exchange,see,handle,no,match,set,string,server,web,exchange;protected,handler,method,lookup,handler,method,string,lookup,path,server,web,exchange,exchange,throws,exception,list,match,matches,find,matching,mappings,lookup,path,exchange,if,matches,is,empty,comparator,match,comparator,new,match,comparator,get,mapping,comparator,exchange,matches,sort,comparator,if,logger,is,trace,enabled,logger,trace,found,matches,size,matching,mapping,s,for,lookup,path,matches,match,best,match,matches,get,0,if,matches,size,1,if,cors,utils,is,pre,flight,request,exchange,get,request,return,match,second,best,match,matches,get,1,if,comparator,compare,best,match,second,best,match,0,method,m1,best,match,handler,method,get,method,method,m2,second,best,match,handler,method,get,method,throw,new,illegal,state,exception,ambiguous,handler,methods,mapped,for,http,path,lookup,path,m1,m2,handle,match,best,match,mapping,lookup,path,exchange,return,best,match,handler,method,else,return,handle,no,match,this,mapping,registry,get,mappings,key,set,lookup,path,exchange
AbstractHandlerMethodMapping -> protected HandlerMethod lookupHandlerMethod(String lookupPath, ServerWebExchange exchange) 			throws Exception;1486747801;Look up the best-matching handler method for the current request._If multiple matches are found, the best match is selected._@param lookupPath mapping lookup path within the current servlet mapping_@param exchange the current exchange_@return the best-matching handler method, or {@code null} if no match_@see #handleMatch(Object, String,  ServerWebExchange)_@see #handleNoMatch(Set, String, ServerWebExchange);protected HandlerMethod lookupHandlerMethod(String lookupPath, ServerWebExchange exchange)_			throws Exception {__		List<Match> matches = new ArrayList<Match>()__		List<T> directPathMatches = this.mappingRegistry.getMappingsByUrl(lookupPath)__		if (directPathMatches != null) {_			addMatchingMappings(directPathMatches, matches, exchange)__		}_		if (matches.isEmpty()) {_			_			addMatchingMappings(this.mappingRegistry.getMappings().keySet(), matches, exchange)__		}__		if (!matches.isEmpty()) {_			Comparator<Match> comparator = new MatchComparator(getMappingComparator(exchange))__			Collections.sort(matches, comparator)__			if (logger.isTraceEnabled()) {_				logger.trace("Found " + matches.size() + " matching mapping(s) for [" +_						lookupPath + "] : " + matches)__			}_			Match bestMatch = matches.get(0)__			if (matches.size() > 1) {_				if (CorsUtils.isPreFlightRequest(exchange.getRequest())) {_					return PREFLIGHT_AMBIGUOUS_MATCH__				}_				Match secondBestMatch = matches.get(1)__				if (comparator.compare(bestMatch, secondBestMatch) == 0) {_					Method m1 = bestMatch.handlerMethod.getMethod()__					Method m2 = secondBestMatch.handlerMethod.getMethod()__					throw new IllegalStateException("Ambiguous handler methods mapped for HTTP path '" +_							lookupPath + "': {" + m1 + ", " + m2 + "}")__				}_			}_			handleMatch(bestMatch.mapping, lookupPath, exchange)__			return bestMatch.handlerMethod__		}_		else {_			return handleNoMatch(this.mappingRegistry.getMappings().keySet(), lookupPath, exchange)__		}_	};look,up,the,best,matching,handler,method,for,the,current,request,if,multiple,matches,are,found,the,best,match,is,selected,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,exchange,the,current,exchange,return,the,best,matching,handler,method,or,code,null,if,no,match,see,handle,match,object,string,server,web,exchange,see,handle,no,match,set,string,server,web,exchange;protected,handler,method,lookup,handler,method,string,lookup,path,server,web,exchange,exchange,throws,exception,list,match,matches,new,array,list,match,list,t,direct,path,matches,this,mapping,registry,get,mappings,by,url,lookup,path,if,direct,path,matches,null,add,matching,mappings,direct,path,matches,matches,exchange,if,matches,is,empty,add,matching,mappings,this,mapping,registry,get,mappings,key,set,matches,exchange,if,matches,is,empty,comparator,match,comparator,new,match,comparator,get,mapping,comparator,exchange,collections,sort,matches,comparator,if,logger,is,trace,enabled,logger,trace,found,matches,size,matching,mapping,s,for,lookup,path,matches,match,best,match,matches,get,0,if,matches,size,1,if,cors,utils,is,pre,flight,request,exchange,get,request,return,match,second,best,match,matches,get,1,if,comparator,compare,best,match,second,best,match,0,method,m1,best,match,handler,method,get,method,method,m2,second,best,match,handler,method,get,method,throw,new,illegal,state,exception,ambiguous,handler,methods,mapped,for,http,path,lookup,path,m1,m2,handle,match,best,match,mapping,lookup,path,exchange,return,best,match,handler,method,else,return,handle,no,match,this,mapping,registry,get,mappings,key,set,lookup,path,exchange
AbstractHandlerMethodMapping -> protected HandlerMethod lookupHandlerMethod(String lookupPath, ServerWebExchange exchange) 			throws Exception;1489852683;Look up the best-matching handler method for the current request._If multiple matches are found, the best match is selected._@param lookupPath mapping lookup path within the current servlet mapping_@param exchange the current exchange_@return the best-matching handler method, or {@code null} if no match_@see #handleMatch(Object, String,  ServerWebExchange)_@see #handleNoMatch(Set, String, ServerWebExchange);protected HandlerMethod lookupHandlerMethod(String lookupPath, ServerWebExchange exchange)_			throws Exception {__		List<Match> matches = new ArrayList<Match>()__		List<T> directPathMatches = this.mappingRegistry.getMappingsByUrl(lookupPath)__		if (directPathMatches != null) {_			addMatchingMappings(directPathMatches, matches, exchange)__		}_		if (matches.isEmpty()) {_			_			addMatchingMappings(this.mappingRegistry.getMappings().keySet(), matches, exchange)__		}__		if (!matches.isEmpty()) {_			Comparator<Match> comparator = new MatchComparator(getMappingComparator(exchange))__			Collections.sort(matches, comparator)__			if (logger.isTraceEnabled()) {_				logger.trace("Found " + matches.size() + " matching mapping(s) for [" +_						lookupPath + "] : " + matches)__			}_			Match bestMatch = matches.get(0)__			if (matches.size() > 1) {_				if (CorsUtils.isPreFlightRequest(exchange.getRequest())) {_					return PREFLIGHT_AMBIGUOUS_MATCH__				}_				Match secondBestMatch = matches.get(1)__				if (comparator.compare(bestMatch, secondBestMatch) == 0) {_					Method m1 = bestMatch.handlerMethod.getMethod()__					Method m2 = secondBestMatch.handlerMethod.getMethod()__					throw new IllegalStateException("Ambiguous handler methods mapped for HTTP path '" +_							lookupPath + "': {" + m1 + ", " + m2 + "}")__				}_			}_			handleMatch(bestMatch.mapping, lookupPath, exchange)__			return bestMatch.handlerMethod__		}_		else {_			return handleNoMatch(this.mappingRegistry.getMappings().keySet(), lookupPath, exchange)__		}_	};look,up,the,best,matching,handler,method,for,the,current,request,if,multiple,matches,are,found,the,best,match,is,selected,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,exchange,the,current,exchange,return,the,best,matching,handler,method,or,code,null,if,no,match,see,handle,match,object,string,server,web,exchange,see,handle,no,match,set,string,server,web,exchange;protected,handler,method,lookup,handler,method,string,lookup,path,server,web,exchange,exchange,throws,exception,list,match,matches,new,array,list,match,list,t,direct,path,matches,this,mapping,registry,get,mappings,by,url,lookup,path,if,direct,path,matches,null,add,matching,mappings,direct,path,matches,matches,exchange,if,matches,is,empty,add,matching,mappings,this,mapping,registry,get,mappings,key,set,matches,exchange,if,matches,is,empty,comparator,match,comparator,new,match,comparator,get,mapping,comparator,exchange,collections,sort,matches,comparator,if,logger,is,trace,enabled,logger,trace,found,matches,size,matching,mapping,s,for,lookup,path,matches,match,best,match,matches,get,0,if,matches,size,1,if,cors,utils,is,pre,flight,request,exchange,get,request,return,match,second,best,match,matches,get,1,if,comparator,compare,best,match,second,best,match,0,method,m1,best,match,handler,method,get,method,method,m2,second,best,match,handler,method,get,method,throw,new,illegal,state,exception,ambiguous,handler,methods,mapped,for,http,path,lookup,path,m1,m2,handle,match,best,match,mapping,lookup,path,exchange,return,best,match,handler,method,else,return,handle,no,match,this,mapping,registry,get,mappings,key,set,lookup,path,exchange
AbstractHandlerMethodMapping -> protected HandlerMethod lookupHandlerMethod(String lookupPath, ServerWebExchange exchange) 			throws Exception;1492542679;Look up the best-matching handler method for the current request._If multiple matches are found, the best match is selected._@param lookupPath mapping lookup path within the current servlet mapping_@param exchange the current exchange_@return the best-matching handler method, or {@code null} if no match_@see #handleMatch(Object, String,  ServerWebExchange)_@see #handleNoMatch(Set, String, ServerWebExchange);protected HandlerMethod lookupHandlerMethod(String lookupPath, ServerWebExchange exchange)_			throws Exception {__		List<Match> matches = new ArrayList<Match>()__		List<T> directPathMatches = this.mappingRegistry.getMappingsByUrl(lookupPath)__		if (directPathMatches != null) {_			addMatchingMappings(directPathMatches, matches, exchange)__		}_		if (matches.isEmpty()) {_			_			addMatchingMappings(this.mappingRegistry.getMappings().keySet(), matches, exchange)__		}__		if (!matches.isEmpty()) {_			Comparator<Match> comparator = new MatchComparator(getMappingComparator(exchange))__			Collections.sort(matches, comparator)__			if (logger.isTraceEnabled()) {_				logger.trace("Found " + matches.size() + " matching mapping(s) for [" +_						lookupPath + "] : " + matches)__			}_			Match bestMatch = matches.get(0)__			if (matches.size() > 1) {_				if (CorsUtils.isPreFlightRequest(exchange.getRequest())) {_					return PREFLIGHT_AMBIGUOUS_MATCH__				}_				Match secondBestMatch = matches.get(1)__				if (comparator.compare(bestMatch, secondBestMatch) == 0) {_					Method m1 = bestMatch.handlerMethod.getMethod()__					Method m2 = secondBestMatch.handlerMethod.getMethod()__					throw new IllegalStateException("Ambiguous handler methods mapped for HTTP path '" +_							lookupPath + "': {" + m1 + ", " + m2 + "}")__				}_			}_			handleMatch(bestMatch.mapping, lookupPath, exchange)__			return bestMatch.handlerMethod__		}_		else {_			return handleNoMatch(this.mappingRegistry.getMappings().keySet(), lookupPath, exchange)__		}_	};look,up,the,best,matching,handler,method,for,the,current,request,if,multiple,matches,are,found,the,best,match,is,selected,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,exchange,the,current,exchange,return,the,best,matching,handler,method,or,code,null,if,no,match,see,handle,match,object,string,server,web,exchange,see,handle,no,match,set,string,server,web,exchange;protected,handler,method,lookup,handler,method,string,lookup,path,server,web,exchange,exchange,throws,exception,list,match,matches,new,array,list,match,list,t,direct,path,matches,this,mapping,registry,get,mappings,by,url,lookup,path,if,direct,path,matches,null,add,matching,mappings,direct,path,matches,matches,exchange,if,matches,is,empty,add,matching,mappings,this,mapping,registry,get,mappings,key,set,matches,exchange,if,matches,is,empty,comparator,match,comparator,new,match,comparator,get,mapping,comparator,exchange,collections,sort,matches,comparator,if,logger,is,trace,enabled,logger,trace,found,matches,size,matching,mapping,s,for,lookup,path,matches,match,best,match,matches,get,0,if,matches,size,1,if,cors,utils,is,pre,flight,request,exchange,get,request,return,match,second,best,match,matches,get,1,if,comparator,compare,best,match,second,best,match,0,method,m1,best,match,handler,method,get,method,method,m2,second,best,match,handler,method,get,method,throw,new,illegal,state,exception,ambiguous,handler,methods,mapped,for,http,path,lookup,path,m1,m2,handle,match,best,match,mapping,lookup,path,exchange,return,best,match,handler,method,else,return,handle,no,match,this,mapping,registry,get,mappings,key,set,lookup,path,exchange
AbstractHandlerMethodMapping -> protected HandlerMethod lookupHandlerMethod(String lookupPath, ServerWebExchange exchange) 			throws Exception;1493370460;Look up the best-matching handler method for the current request._If multiple matches are found, the best match is selected._@param lookupPath mapping lookup path within the current servlet mapping_@param exchange the current exchange_@return the best-matching handler method, or {@code null} if no match_@see #handleMatch(Object, String,  ServerWebExchange)_@see #handleNoMatch(Set, String, ServerWebExchange);protected HandlerMethod lookupHandlerMethod(String lookupPath, ServerWebExchange exchange)_			throws Exception {__		List<Match> matches = new ArrayList<Match>()__		List<T> directPathMatches = this.mappingRegistry.getMappingsByUrl(lookupPath)__		if (directPathMatches != null) {_			addMatchingMappings(directPathMatches, matches, exchange)__		}_		if (matches.isEmpty()) {_			_			addMatchingMappings(this.mappingRegistry.getMappings().keySet(), matches, exchange)__		}__		if (!matches.isEmpty()) {_			Comparator<Match> comparator = new MatchComparator(getMappingComparator(exchange))__			Collections.sort(matches, comparator)__			if (logger.isTraceEnabled()) {_				logger.trace("Found " + matches.size() + " matching mapping(s) for [" +_						lookupPath + "] : " + matches)__			}_			Match bestMatch = matches.get(0)__			if (matches.size() > 1) {_				if (CorsUtils.isPreFlightRequest(exchange.getRequest())) {_					return PREFLIGHT_AMBIGUOUS_MATCH__				}_				Match secondBestMatch = matches.get(1)__				if (comparator.compare(bestMatch, secondBestMatch) == 0) {_					Method m1 = bestMatch.handlerMethod.getMethod()__					Method m2 = secondBestMatch.handlerMethod.getMethod()__					throw new IllegalStateException("Ambiguous handler methods mapped for HTTP path '" +_							lookupPath + "': {" + m1 + ", " + m2 + "}")__				}_			}_			handleMatch(bestMatch.mapping, lookupPath, exchange)__			return bestMatch.handlerMethod__		}_		else {_			return handleNoMatch(this.mappingRegistry.getMappings().keySet(), lookupPath, exchange)__		}_	};look,up,the,best,matching,handler,method,for,the,current,request,if,multiple,matches,are,found,the,best,match,is,selected,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,exchange,the,current,exchange,return,the,best,matching,handler,method,or,code,null,if,no,match,see,handle,match,object,string,server,web,exchange,see,handle,no,match,set,string,server,web,exchange;protected,handler,method,lookup,handler,method,string,lookup,path,server,web,exchange,exchange,throws,exception,list,match,matches,new,array,list,match,list,t,direct,path,matches,this,mapping,registry,get,mappings,by,url,lookup,path,if,direct,path,matches,null,add,matching,mappings,direct,path,matches,matches,exchange,if,matches,is,empty,add,matching,mappings,this,mapping,registry,get,mappings,key,set,matches,exchange,if,matches,is,empty,comparator,match,comparator,new,match,comparator,get,mapping,comparator,exchange,collections,sort,matches,comparator,if,logger,is,trace,enabled,logger,trace,found,matches,size,matching,mapping,s,for,lookup,path,matches,match,best,match,matches,get,0,if,matches,size,1,if,cors,utils,is,pre,flight,request,exchange,get,request,return,match,second,best,match,matches,get,1,if,comparator,compare,best,match,second,best,match,0,method,m1,best,match,handler,method,get,method,method,m2,second,best,match,handler,method,get,method,throw,new,illegal,state,exception,ambiguous,handler,methods,mapped,for,http,path,lookup,path,m1,m2,handle,match,best,match,mapping,lookup,path,exchange,return,best,match,handler,method,else,return,handle,no,match,this,mapping,registry,get,mappings,key,set,lookup,path,exchange
AbstractHandlerMethodMapping -> protected HandlerMethod lookupHandlerMethod(String lookupPath, ServerWebExchange exchange) 			throws Exception;1493391766;Look up the best-matching handler method for the current request._If multiple matches are found, the best match is selected._@param lookupPath mapping lookup path within the current servlet mapping_@param exchange the current exchange_@return the best-matching handler method, or {@code null} if no match_@see #handleMatch(Object, String,  ServerWebExchange)_@see #handleNoMatch(Set, String, ServerWebExchange);protected HandlerMethod lookupHandlerMethod(String lookupPath, ServerWebExchange exchange)_			throws Exception {__		List<Match> matches = new ArrayList<Match>()__		List<T> directPathMatches = this.mappingRegistry.getMappingsByUrl(lookupPath)__		if (directPathMatches != null) {_			addMatchingMappings(directPathMatches, matches, exchange)__		}_		if (matches.isEmpty()) {_			_			addMatchingMappings(this.mappingRegistry.getMappings().keySet(), matches, exchange)__		}__		if (!matches.isEmpty()) {_			Comparator<Match> comparator = new MatchComparator(getMappingComparator(exchange))__			Collections.sort(matches, comparator)__			if (logger.isTraceEnabled()) {_				logger.trace("Found " + matches.size() + " matching mapping(s) for [" +_						lookupPath + "] : " + matches)__			}_			Match bestMatch = matches.get(0)__			if (matches.size() > 1) {_				if (CorsUtils.isPreFlightRequest(exchange.getRequest())) {_					return PREFLIGHT_AMBIGUOUS_MATCH__				}_				Match secondBestMatch = matches.get(1)__				if (comparator.compare(bestMatch, secondBestMatch) == 0) {_					Method m1 = bestMatch.handlerMethod.getMethod()__					Method m2 = secondBestMatch.handlerMethod.getMethod()__					throw new IllegalStateException("Ambiguous handler methods mapped for HTTP path '" +_							lookupPath + "': {" + m1 + ", " + m2 + "}")__				}_			}_			handleMatch(bestMatch.mapping, lookupPath, exchange)__			return bestMatch.handlerMethod__		}_		else {_			return handleNoMatch(this.mappingRegistry.getMappings().keySet(), lookupPath, exchange)__		}_	};look,up,the,best,matching,handler,method,for,the,current,request,if,multiple,matches,are,found,the,best,match,is,selected,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,exchange,the,current,exchange,return,the,best,matching,handler,method,or,code,null,if,no,match,see,handle,match,object,string,server,web,exchange,see,handle,no,match,set,string,server,web,exchange;protected,handler,method,lookup,handler,method,string,lookup,path,server,web,exchange,exchange,throws,exception,list,match,matches,new,array,list,match,list,t,direct,path,matches,this,mapping,registry,get,mappings,by,url,lookup,path,if,direct,path,matches,null,add,matching,mappings,direct,path,matches,matches,exchange,if,matches,is,empty,add,matching,mappings,this,mapping,registry,get,mappings,key,set,matches,exchange,if,matches,is,empty,comparator,match,comparator,new,match,comparator,get,mapping,comparator,exchange,collections,sort,matches,comparator,if,logger,is,trace,enabled,logger,trace,found,matches,size,matching,mapping,s,for,lookup,path,matches,match,best,match,matches,get,0,if,matches,size,1,if,cors,utils,is,pre,flight,request,exchange,get,request,return,match,second,best,match,matches,get,1,if,comparator,compare,best,match,second,best,match,0,method,m1,best,match,handler,method,get,method,method,m2,second,best,match,handler,method,get,method,throw,new,illegal,state,exception,ambiguous,handler,methods,mapped,for,http,path,lookup,path,m1,m2,handle,match,best,match,mapping,lookup,path,exchange,return,best,match,handler,method,else,return,handle,no,match,this,mapping,registry,get,mappings,key,set,lookup,path,exchange
AbstractHandlerMethodMapping -> protected HandlerMethod lookupHandlerMethod(String lookupPath, ServerWebExchange exchange) 			throws Exception;1493755795;Look up the best-matching handler method for the current request._If multiple matches are found, the best match is selected._@param lookupPath mapping lookup path within the current servlet mapping_@param exchange the current exchange_@return the best-matching handler method, or {@code null} if no match_@see #handleMatch(Object, String,  ServerWebExchange)_@see #handleNoMatch(Set, String, ServerWebExchange);protected HandlerMethod lookupHandlerMethod(String lookupPath, ServerWebExchange exchange)_			throws Exception {__		List<Match> matches = new ArrayList<Match>()__		List<T> directPathMatches = this.mappingRegistry.getMappingsByUrl(lookupPath)__		if (directPathMatches != null) {_			addMatchingMappings(directPathMatches, matches, exchange)__		}_		if (matches.isEmpty()) {_			_			addMatchingMappings(this.mappingRegistry.getMappings().keySet(), matches, exchange)__		}__		if (!matches.isEmpty()) {_			Comparator<Match> comparator = new MatchComparator(getMappingComparator(exchange))__			Collections.sort(matches, comparator)__			if (logger.isTraceEnabled()) {_				logger.trace("Found " + matches.size() + " matching mapping(s) for [" +_						lookupPath + "] : " + matches)__			}_			Match bestMatch = matches.get(0)__			if (matches.size() > 1) {_				if (CorsUtils.isPreFlightRequest(exchange.getRequest())) {_					return PREFLIGHT_AMBIGUOUS_MATCH__				}_				Match secondBestMatch = matches.get(1)__				if (comparator.compare(bestMatch, secondBestMatch) == 0) {_					Method m1 = bestMatch.handlerMethod.getMethod()__					Method m2 = secondBestMatch.handlerMethod.getMethod()__					throw new IllegalStateException("Ambiguous handler methods mapped for HTTP path '" +_							lookupPath + "': {" + m1 + ", " + m2 + "}")__				}_			}_			handleMatch(bestMatch.mapping, lookupPath, exchange)__			return bestMatch.handlerMethod__		}_		else {_			return handleNoMatch(this.mappingRegistry.getMappings().keySet(), lookupPath, exchange)__		}_	};look,up,the,best,matching,handler,method,for,the,current,request,if,multiple,matches,are,found,the,best,match,is,selected,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,exchange,the,current,exchange,return,the,best,matching,handler,method,or,code,null,if,no,match,see,handle,match,object,string,server,web,exchange,see,handle,no,match,set,string,server,web,exchange;protected,handler,method,lookup,handler,method,string,lookup,path,server,web,exchange,exchange,throws,exception,list,match,matches,new,array,list,match,list,t,direct,path,matches,this,mapping,registry,get,mappings,by,url,lookup,path,if,direct,path,matches,null,add,matching,mappings,direct,path,matches,matches,exchange,if,matches,is,empty,add,matching,mappings,this,mapping,registry,get,mappings,key,set,matches,exchange,if,matches,is,empty,comparator,match,comparator,new,match,comparator,get,mapping,comparator,exchange,collections,sort,matches,comparator,if,logger,is,trace,enabled,logger,trace,found,matches,size,matching,mapping,s,for,lookup,path,matches,match,best,match,matches,get,0,if,matches,size,1,if,cors,utils,is,pre,flight,request,exchange,get,request,return,match,second,best,match,matches,get,1,if,comparator,compare,best,match,second,best,match,0,method,m1,best,match,handler,method,get,method,method,m2,second,best,match,handler,method,get,method,throw,new,illegal,state,exception,ambiguous,handler,methods,mapped,for,http,path,lookup,path,m1,m2,handle,match,best,match,mapping,lookup,path,exchange,return,best,match,handler,method,else,return,handle,no,match,this,mapping,registry,get,mappings,key,set,lookup,path,exchange
AbstractHandlerMethodMapping -> @Nullable 	protected abstract T getMatchingMapping(T mapping, ServerWebExchange exchange)_;1495868221;Check if a mapping matches the current request and return a (potentially_new) mapping with conditions relevant to the current request._@param mapping the mapping to get a match for_@param exchange the current exchange_@return the match, or {@code null} if the mapping doesn't match;@Nullable_	protected abstract T getMatchingMapping(T mapping, ServerWebExchange exchange)_;check,if,a,mapping,matches,the,current,request,and,return,a,potentially,new,mapping,with,conditions,relevant,to,the,current,request,param,mapping,the,mapping,to,get,a,match,for,param,exchange,the,current,exchange,return,the,match,or,code,null,if,the,mapping,doesn,t,match;nullable,protected,abstract,t,get,matching,mapping,t,mapping,server,web,exchange,exchange
AbstractHandlerMethodMapping -> @Nullable 	protected abstract T getMatchingMapping(T mapping, ServerWebExchange exchange)_;1496334664;Check if a mapping matches the current request and return a (potentially_new) mapping with conditions relevant to the current request._@param mapping the mapping to get a match for_@param exchange the current exchange_@return the match, or {@code null} if the mapping doesn't match;@Nullable_	protected abstract T getMatchingMapping(T mapping, ServerWebExchange exchange)_;check,if,a,mapping,matches,the,current,request,and,return,a,potentially,new,mapping,with,conditions,relevant,to,the,current,request,param,mapping,the,mapping,to,get,a,match,for,param,exchange,the,current,exchange,return,the,match,or,code,null,if,the,mapping,doesn,t,match;nullable,protected,abstract,t,get,matching,mapping,t,mapping,server,web,exchange,exchange
AbstractHandlerMethodMapping -> @Nullable 	protected abstract T getMatchingMapping(T mapping, ServerWebExchange exchange)_;1496430942;Check if a mapping matches the current request and return a (potentially_new) mapping with conditions relevant to the current request._@param mapping the mapping to get a match for_@param exchange the current exchange_@return the match, or {@code null} if the mapping doesn't match;@Nullable_	protected abstract T getMatchingMapping(T mapping, ServerWebExchange exchange)_;check,if,a,mapping,matches,the,current,request,and,return,a,potentially,new,mapping,with,conditions,relevant,to,the,current,request,param,mapping,the,mapping,to,get,a,match,for,param,exchange,the,current,exchange,return,the,match,or,code,null,if,the,mapping,doesn,t,match;nullable,protected,abstract,t,get,matching,mapping,t,mapping,server,web,exchange,exchange
AbstractHandlerMethodMapping -> @Nullable 	protected abstract T getMatchingMapping(T mapping, ServerWebExchange exchange)_;1496837955;Check if a mapping matches the current request and return a (potentially_new) mapping with conditions relevant to the current request._@param mapping the mapping to get a match for_@param exchange the current exchange_@return the match, or {@code null} if the mapping doesn't match;@Nullable_	protected abstract T getMatchingMapping(T mapping, ServerWebExchange exchange)_;check,if,a,mapping,matches,the,current,request,and,return,a,potentially,new,mapping,with,conditions,relevant,to,the,current,request,param,mapping,the,mapping,to,get,a,match,for,param,exchange,the,current,exchange,return,the,match,or,code,null,if,the,mapping,doesn,t,match;nullable,protected,abstract,t,get,matching,mapping,t,mapping,server,web,exchange,exchange
AbstractHandlerMethodMapping -> @Nullable 	protected abstract T getMatchingMapping(T mapping, ServerWebExchange exchange)_;1497039338;Check if a mapping matches the current request and return a (potentially_new) mapping with conditions relevant to the current request._@param mapping the mapping to get a match for_@param exchange the current exchange_@return the match, or {@code null} if the mapping doesn't match;@Nullable_	protected abstract T getMatchingMapping(T mapping, ServerWebExchange exchange)_;check,if,a,mapping,matches,the,current,request,and,return,a,potentially,new,mapping,with,conditions,relevant,to,the,current,request,param,mapping,the,mapping,to,get,a,match,for,param,exchange,the,current,exchange,return,the,match,or,code,null,if,the,mapping,doesn,t,match;nullable,protected,abstract,t,get,matching,mapping,t,mapping,server,web,exchange,exchange
AbstractHandlerMethodMapping -> @Nullable 	protected abstract T getMatchingMapping(T mapping, ServerWebExchange exchange)_;1497232764;Check if a mapping matches the current request and return a (potentially_new) mapping with conditions relevant to the current request._@param mapping the mapping to get a match for_@param exchange the current exchange_@return the match, or {@code null} if the mapping doesn't match;@Nullable_	protected abstract T getMatchingMapping(T mapping, ServerWebExchange exchange)_;check,if,a,mapping,matches,the,current,request,and,return,a,potentially,new,mapping,with,conditions,relevant,to,the,current,request,param,mapping,the,mapping,to,get,a,match,for,param,exchange,the,current,exchange,return,the,match,or,code,null,if,the,mapping,doesn,t,match;nullable,protected,abstract,t,get,matching,mapping,t,mapping,server,web,exchange,exchange
AbstractHandlerMethodMapping -> @Nullable 	protected abstract T getMatchingMapping(T mapping, ServerWebExchange exchange)_;1497251962;Check if a mapping matches the current request and return a (potentially_new) mapping with conditions relevant to the current request._@param mapping the mapping to get a match for_@param exchange the current exchange_@return the match, or {@code null} if the mapping doesn't match;@Nullable_	protected abstract T getMatchingMapping(T mapping, ServerWebExchange exchange)_;check,if,a,mapping,matches,the,current,request,and,return,a,potentially,new,mapping,with,conditions,relevant,to,the,current,request,param,mapping,the,mapping,to,get,a,match,for,param,exchange,the,current,exchange,return,the,match,or,code,null,if,the,mapping,doesn,t,match;nullable,protected,abstract,t,get,matching,mapping,t,mapping,server,web,exchange,exchange
AbstractHandlerMethodMapping -> @Nullable 	protected abstract T getMatchingMapping(T mapping, ServerWebExchange exchange)_;1497286385;Check if a mapping matches the current request and return a (potentially_new) mapping with conditions relevant to the current request._@param mapping the mapping to get a match for_@param exchange the current exchange_@return the match, or {@code null} if the mapping doesn't match;@Nullable_	protected abstract T getMatchingMapping(T mapping, ServerWebExchange exchange)_;check,if,a,mapping,matches,the,current,request,and,return,a,potentially,new,mapping,with,conditions,relevant,to,the,current,request,param,mapping,the,mapping,to,get,a,match,for,param,exchange,the,current,exchange,return,the,match,or,code,null,if,the,mapping,doesn,t,match;nullable,protected,abstract,t,get,matching,mapping,t,mapping,server,web,exchange,exchange
AbstractHandlerMethodMapping -> @Nullable 	protected abstract T getMatchingMapping(T mapping, ServerWebExchange exchange)_;1498756719;Check if a mapping matches the current request and return a (potentially_new) mapping with conditions relevant to the current request._@param mapping the mapping to get a match for_@param exchange the current exchange_@return the match, or {@code null} if the mapping doesn't match;@Nullable_	protected abstract T getMatchingMapping(T mapping, ServerWebExchange exchange)_;check,if,a,mapping,matches,the,current,request,and,return,a,potentially,new,mapping,with,conditions,relevant,to,the,current,request,param,mapping,the,mapping,to,get,a,match,for,param,exchange,the,current,exchange,return,the,match,or,code,null,if,the,mapping,doesn,t,match;nullable,protected,abstract,t,get,matching,mapping,t,mapping,server,web,exchange,exchange
AbstractHandlerMethodMapping -> @Nullable 	protected abstract T getMatchingMapping(T mapping, ServerWebExchange exchange)_;1498861175;Check if a mapping matches the current request and return a (potentially_new) mapping with conditions relevant to the current request._@param mapping the mapping to get a match for_@param exchange the current exchange_@return the match, or {@code null} if the mapping doesn't match;@Nullable_	protected abstract T getMatchingMapping(T mapping, ServerWebExchange exchange)_;check,if,a,mapping,matches,the,current,request,and,return,a,potentially,new,mapping,with,conditions,relevant,to,the,current,request,param,mapping,the,mapping,to,get,a,match,for,param,exchange,the,current,exchange,return,the,match,or,code,null,if,the,mapping,doesn,t,match;nullable,protected,abstract,t,get,matching,mapping,t,mapping,server,web,exchange,exchange
AbstractHandlerMethodMapping -> @Nullable 	protected abstract T getMatchingMapping(T mapping, ServerWebExchange exchange)_;1498953917;Check if a mapping matches the current request and return a (potentially_new) mapping with conditions relevant to the current request._@param mapping the mapping to get a match for_@param exchange the current exchange_@return the match, or {@code null} if the mapping doesn't match;@Nullable_	protected abstract T getMatchingMapping(T mapping, ServerWebExchange exchange)_;check,if,a,mapping,matches,the,current,request,and,return,a,potentially,new,mapping,with,conditions,relevant,to,the,current,request,param,mapping,the,mapping,to,get,a,match,for,param,exchange,the,current,exchange,return,the,match,or,code,null,if,the,mapping,doesn,t,match;nullable,protected,abstract,t,get,matching,mapping,t,mapping,server,web,exchange,exchange
AbstractHandlerMethodMapping -> @Nullable 	protected abstract T getMatchingMapping(T mapping, ServerWebExchange exchange)_;1516617801;Check if a mapping matches the current request and return a (potentially_new) mapping with conditions relevant to the current request._@param mapping the mapping to get a match for_@param exchange the current exchange_@return the match, or {@code null} if the mapping doesn't match;@Nullable_	protected abstract T getMatchingMapping(T mapping, ServerWebExchange exchange)_;check,if,a,mapping,matches,the,current,request,and,return,a,potentially,new,mapping,with,conditions,relevant,to,the,current,request,param,mapping,the,mapping,to,get,a,match,for,param,exchange,the,current,exchange,return,the,match,or,code,null,if,the,mapping,doesn,t,match;nullable,protected,abstract,t,get,matching,mapping,t,mapping,server,web,exchange,exchange
AbstractHandlerMethodMapping -> @Nullable 	protected abstract T getMatchingMapping(T mapping, ServerWebExchange exchange)_;1529721864;Check if a mapping matches the current request and return a (potentially_new) mapping with conditions relevant to the current request._@param mapping the mapping to get a match for_@param exchange the current exchange_@return the match, or {@code null} if the mapping doesn't match;@Nullable_	protected abstract T getMatchingMapping(T mapping, ServerWebExchange exchange)_;check,if,a,mapping,matches,the,current,request,and,return,a,potentially,new,mapping,with,conditions,relevant,to,the,current,request,param,mapping,the,mapping,to,get,a,match,for,param,exchange,the,current,exchange,return,the,match,or,code,null,if,the,mapping,doesn,t,match;nullable,protected,abstract,t,get,matching,mapping,t,mapping,server,web,exchange,exchange
AbstractHandlerMethodMapping -> @Nullable 	protected abstract T getMatchingMapping(T mapping, ServerWebExchange exchange)_;1530174524;Check if a mapping matches the current request and return a (potentially_new) mapping with conditions relevant to the current request._@param mapping the mapping to get a match for_@param exchange the current exchange_@return the match, or {@code null} if the mapping doesn't match;@Nullable_	protected abstract T getMatchingMapping(T mapping, ServerWebExchange exchange)_;check,if,a,mapping,matches,the,current,request,and,return,a,potentially,new,mapping,with,conditions,relevant,to,the,current,request,param,mapping,the,mapping,to,get,a,match,for,param,exchange,the,current,exchange,return,the,match,or,code,null,if,the,mapping,doesn,t,match;nullable,protected,abstract,t,get,matching,mapping,t,mapping,server,web,exchange,exchange
AbstractHandlerMethodMapping -> @Nullable 	protected abstract T getMatchingMapping(T mapping, ServerWebExchange exchange)_;1530793633;Check if a mapping matches the current request and return a (potentially_new) mapping with conditions relevant to the current request._@param mapping the mapping to get a match for_@param exchange the current exchange_@return the match, or {@code null} if the mapping doesn't match;@Nullable_	protected abstract T getMatchingMapping(T mapping, ServerWebExchange exchange)_;check,if,a,mapping,matches,the,current,request,and,return,a,potentially,new,mapping,with,conditions,relevant,to,the,current,request,param,mapping,the,mapping,to,get,a,match,for,param,exchange,the,current,exchange,return,the,match,or,code,null,if,the,mapping,doesn,t,match;nullable,protected,abstract,t,get,matching,mapping,t,mapping,server,web,exchange,exchange
AbstractHandlerMethodMapping -> @Nullable 	protected abstract T getMatchingMapping(T mapping, ServerWebExchange exchange)_;1542407418;Check if a mapping matches the current request and return a (potentially_new) mapping with conditions relevant to the current request._@param mapping the mapping to get a match for_@param exchange the current exchange_@return the match, or {@code null} if the mapping doesn't match;@Nullable_	protected abstract T getMatchingMapping(T mapping, ServerWebExchange exchange)_;check,if,a,mapping,matches,the,current,request,and,return,a,potentially,new,mapping,with,conditions,relevant,to,the,current,request,param,mapping,the,mapping,to,get,a,match,for,param,exchange,the,current,exchange,return,the,match,or,code,null,if,the,mapping,doesn,t,match;nullable,protected,abstract,t,get,matching,mapping,t,mapping,server,web,exchange,exchange
AbstractHandlerMethodMapping -> @Nullable 	protected abstract T getMatchingMapping(T mapping, ServerWebExchange exchange)_;1548427561;Check if a mapping matches the current request and return a (potentially_new) mapping with conditions relevant to the current request._@param mapping the mapping to get a match for_@param exchange the current exchange_@return the match, or {@code null} if the mapping doesn't match;@Nullable_	protected abstract T getMatchingMapping(T mapping, ServerWebExchange exchange)_;check,if,a,mapping,matches,the,current,request,and,return,a,potentially,new,mapping,with,conditions,relevant,to,the,current,request,param,mapping,the,mapping,to,get,a,match,for,param,exchange,the,current,exchange,return,the,match,or,code,null,if,the,mapping,doesn,t,match;nullable,protected,abstract,t,get,matching,mapping,t,mapping,server,web,exchange,exchange
AbstractHandlerMethodMapping -> @Nullable 	protected abstract T getMatchingMapping(T mapping, ServerWebExchange exchange)_;1551093473;Check if a mapping matches the current request and return a (potentially_new) mapping with conditions relevant to the current request._@param mapping the mapping to get a match for_@param exchange the current exchange_@return the match, or {@code null} if the mapping doesn't match;@Nullable_	protected abstract T getMatchingMapping(T mapping, ServerWebExchange exchange)_;check,if,a,mapping,matches,the,current,request,and,return,a,potentially,new,mapping,with,conditions,relevant,to,the,current,request,param,mapping,the,mapping,to,get,a,match,for,param,exchange,the,current,exchange,return,the,match,or,code,null,if,the,mapping,doesn,t,match;nullable,protected,abstract,t,get,matching,mapping,t,mapping,server,web,exchange,exchange
AbstractHandlerMethodMapping -> protected abstract T getMappingForMethod(Method method, Class<?> handlerType)_;1485986572;Provide the mapping for a handler method. A method for which no_mapping can be provided is not a handler method._@param method the method to provide a mapping for_@param handlerType the handler type, possibly a sub-type of the method's_declaring class_@return the mapping, or {@code null} if the method is not mapped;protected abstract T getMappingForMethod(Method method, Class<?> handlerType)_;provide,the,mapping,for,a,handler,method,a,method,for,which,no,mapping,can,be,provided,is,not,a,handler,method,param,method,the,method,to,provide,a,mapping,for,param,handler,type,the,handler,type,possibly,a,sub,type,of,the,method,s,declaring,class,return,the,mapping,or,code,null,if,the,method,is,not,mapped;protected,abstract,t,get,mapping,for,method,method,method,class,handler,type
AbstractHandlerMethodMapping -> protected abstract T getMappingForMethod(Method method, Class<?> handlerType)_;1486635693;Provide the mapping for a handler method. A method for which no_mapping can be provided is not a handler method._@param method the method to provide a mapping for_@param handlerType the handler type, possibly a sub-type of the method's_declaring class_@return the mapping, or {@code null} if the method is not mapped;protected abstract T getMappingForMethod(Method method, Class<?> handlerType)_;provide,the,mapping,for,a,handler,method,a,method,for,which,no,mapping,can,be,provided,is,not,a,handler,method,param,method,the,method,to,provide,a,mapping,for,param,handler,type,the,handler,type,possibly,a,sub,type,of,the,method,s,declaring,class,return,the,mapping,or,code,null,if,the,method,is,not,mapped;protected,abstract,t,get,mapping,for,method,method,method,class,handler,type
AbstractHandlerMethodMapping -> protected abstract T getMappingForMethod(Method method, Class<?> handlerType)_;1486674586;Provide the mapping for a handler method. A method for which no_mapping can be provided is not a handler method._@param method the method to provide a mapping for_@param handlerType the handler type, possibly a sub-type of the method's_declaring class_@return the mapping, or {@code null} if the method is not mapped;protected abstract T getMappingForMethod(Method method, Class<?> handlerType)_;provide,the,mapping,for,a,handler,method,a,method,for,which,no,mapping,can,be,provided,is,not,a,handler,method,param,method,the,method,to,provide,a,mapping,for,param,handler,type,the,handler,type,possibly,a,sub,type,of,the,method,s,declaring,class,return,the,mapping,or,code,null,if,the,method,is,not,mapped;protected,abstract,t,get,mapping,for,method,method,method,class,handler,type
AbstractHandlerMethodMapping -> protected abstract T getMappingForMethod(Method method, Class<?> handlerType)_;1486747801;Provide the mapping for a handler method. A method for which no_mapping can be provided is not a handler method._@param method the method to provide a mapping for_@param handlerType the handler type, possibly a sub-type of the method's_declaring class_@return the mapping, or {@code null} if the method is not mapped;protected abstract T getMappingForMethod(Method method, Class<?> handlerType)_;provide,the,mapping,for,a,handler,method,a,method,for,which,no,mapping,can,be,provided,is,not,a,handler,method,param,method,the,method,to,provide,a,mapping,for,param,handler,type,the,handler,type,possibly,a,sub,type,of,the,method,s,declaring,class,return,the,mapping,or,code,null,if,the,method,is,not,mapped;protected,abstract,t,get,mapping,for,method,method,method,class,handler,type
AbstractHandlerMethodMapping -> protected abstract T getMappingForMethod(Method method, Class<?> handlerType)_;1489852683;Provide the mapping for a handler method. A method for which no_mapping can be provided is not a handler method._@param method the method to provide a mapping for_@param handlerType the handler type, possibly a sub-type of the method's_declaring class_@return the mapping, or {@code null} if the method is not mapped;protected abstract T getMappingForMethod(Method method, Class<?> handlerType)_;provide,the,mapping,for,a,handler,method,a,method,for,which,no,mapping,can,be,provided,is,not,a,handler,method,param,method,the,method,to,provide,a,mapping,for,param,handler,type,the,handler,type,possibly,a,sub,type,of,the,method,s,declaring,class,return,the,mapping,or,code,null,if,the,method,is,not,mapped;protected,abstract,t,get,mapping,for,method,method,method,class,handler,type
AbstractHandlerMethodMapping -> protected abstract T getMappingForMethod(Method method, Class<?> handlerType)_;1492542679;Provide the mapping for a handler method. A method for which no_mapping can be provided is not a handler method._@param method the method to provide a mapping for_@param handlerType the handler type, possibly a sub-type of the method's_declaring class_@return the mapping, or {@code null} if the method is not mapped;protected abstract T getMappingForMethod(Method method, Class<?> handlerType)_;provide,the,mapping,for,a,handler,method,a,method,for,which,no,mapping,can,be,provided,is,not,a,handler,method,param,method,the,method,to,provide,a,mapping,for,param,handler,type,the,handler,type,possibly,a,sub,type,of,the,method,s,declaring,class,return,the,mapping,or,code,null,if,the,method,is,not,mapped;protected,abstract,t,get,mapping,for,method,method,method,class,handler,type
AbstractHandlerMethodMapping -> protected abstract T getMappingForMethod(Method method, Class<?> handlerType)_;1493370460;Provide the mapping for a handler method. A method for which no_mapping can be provided is not a handler method._@param method the method to provide a mapping for_@param handlerType the handler type, possibly a sub-type of the method's_declaring class_@return the mapping, or {@code null} if the method is not mapped;protected abstract T getMappingForMethod(Method method, Class<?> handlerType)_;provide,the,mapping,for,a,handler,method,a,method,for,which,no,mapping,can,be,provided,is,not,a,handler,method,param,method,the,method,to,provide,a,mapping,for,param,handler,type,the,handler,type,possibly,a,sub,type,of,the,method,s,declaring,class,return,the,mapping,or,code,null,if,the,method,is,not,mapped;protected,abstract,t,get,mapping,for,method,method,method,class,handler,type
AbstractHandlerMethodMapping -> protected abstract T getMappingForMethod(Method method, Class<?> handlerType)_;1493391766;Provide the mapping for a handler method. A method for which no_mapping can be provided is not a handler method._@param method the method to provide a mapping for_@param handlerType the handler type, possibly a sub-type of the method's_declaring class_@return the mapping, or {@code null} if the method is not mapped;protected abstract T getMappingForMethod(Method method, Class<?> handlerType)_;provide,the,mapping,for,a,handler,method,a,method,for,which,no,mapping,can,be,provided,is,not,a,handler,method,param,method,the,method,to,provide,a,mapping,for,param,handler,type,the,handler,type,possibly,a,sub,type,of,the,method,s,declaring,class,return,the,mapping,or,code,null,if,the,method,is,not,mapped;protected,abstract,t,get,mapping,for,method,method,method,class,handler,type
AbstractHandlerMethodMapping -> protected abstract T getMappingForMethod(Method method, Class<?> handlerType)_;1493755795;Provide the mapping for a handler method. A method for which no_mapping can be provided is not a handler method._@param method the method to provide a mapping for_@param handlerType the handler type, possibly a sub-type of the method's_declaring class_@return the mapping, or {@code null} if the method is not mapped;protected abstract T getMappingForMethod(Method method, Class<?> handlerType)_;provide,the,mapping,for,a,handler,method,a,method,for,which,no,mapping,can,be,provided,is,not,a,handler,method,param,method,the,method,to,provide,a,mapping,for,param,handler,type,the,handler,type,possibly,a,sub,type,of,the,method,s,declaring,class,return,the,mapping,or,code,null,if,the,method,is,not,mapped;protected,abstract,t,get,mapping,for,method,method,method,class,handler,type
AbstractHandlerMethodMapping -> protected HandlerMethod handleNoMatch(Set<T> mappings, String lookupPath, ServerWebExchange exchange) 			throws Exception;1485986572;Invoked when no matching mapping is not found._@param mappings all registered mappings_@param lookupPath mapping lookup path within the current servlet mapping_@param exchange the current exchange_@return an alternative HandlerMethod or {@code null}_@throws Exception provides details that can be translated into an error status code;protected HandlerMethod handleNoMatch(Set<T> mappings, String lookupPath, ServerWebExchange exchange)_			throws Exception {__		return null__	};invoked,when,no,matching,mapping,is,not,found,param,mappings,all,registered,mappings,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,exchange,the,current,exchange,return,an,alternative,handler,method,or,code,null,throws,exception,provides,details,that,can,be,translated,into,an,error,status,code;protected,handler,method,handle,no,match,set,t,mappings,string,lookup,path,server,web,exchange,exchange,throws,exception,return,null
AbstractHandlerMethodMapping -> protected HandlerMethod handleNoMatch(Set<T> mappings, String lookupPath, ServerWebExchange exchange) 			throws Exception;1486635693;Invoked when no matching mapping is not found._@param mappings all registered mappings_@param lookupPath mapping lookup path within the current servlet mapping_@param exchange the current exchange_@return an alternative HandlerMethod or {@code null}_@throws Exception provides details that can be translated into an error status code;protected HandlerMethod handleNoMatch(Set<T> mappings, String lookupPath, ServerWebExchange exchange)_			throws Exception {__		return null__	};invoked,when,no,matching,mapping,is,not,found,param,mappings,all,registered,mappings,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,exchange,the,current,exchange,return,an,alternative,handler,method,or,code,null,throws,exception,provides,details,that,can,be,translated,into,an,error,status,code;protected,handler,method,handle,no,match,set,t,mappings,string,lookup,path,server,web,exchange,exchange,throws,exception,return,null
AbstractHandlerMethodMapping -> protected HandlerMethod handleNoMatch(Set<T> mappings, String lookupPath, ServerWebExchange exchange) 			throws Exception;1486674586;Invoked when no matching mapping is not found._@param mappings all registered mappings_@param lookupPath mapping lookup path within the current servlet mapping_@param exchange the current exchange_@return an alternative HandlerMethod or {@code null}_@throws Exception provides details that can be translated into an error status code;protected HandlerMethod handleNoMatch(Set<T> mappings, String lookupPath, ServerWebExchange exchange)_			throws Exception {__		return null__	};invoked,when,no,matching,mapping,is,not,found,param,mappings,all,registered,mappings,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,exchange,the,current,exchange,return,an,alternative,handler,method,or,code,null,throws,exception,provides,details,that,can,be,translated,into,an,error,status,code;protected,handler,method,handle,no,match,set,t,mappings,string,lookup,path,server,web,exchange,exchange,throws,exception,return,null
AbstractHandlerMethodMapping -> protected HandlerMethod handleNoMatch(Set<T> mappings, String lookupPath, ServerWebExchange exchange) 			throws Exception;1486747801;Invoked when no matching mapping is not found._@param mappings all registered mappings_@param lookupPath mapping lookup path within the current servlet mapping_@param exchange the current exchange_@return an alternative HandlerMethod or {@code null}_@throws Exception provides details that can be translated into an error status code;protected HandlerMethod handleNoMatch(Set<T> mappings, String lookupPath, ServerWebExchange exchange)_			throws Exception {__		return null__	};invoked,when,no,matching,mapping,is,not,found,param,mappings,all,registered,mappings,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,exchange,the,current,exchange,return,an,alternative,handler,method,or,code,null,throws,exception,provides,details,that,can,be,translated,into,an,error,status,code;protected,handler,method,handle,no,match,set,t,mappings,string,lookup,path,server,web,exchange,exchange,throws,exception,return,null
AbstractHandlerMethodMapping -> protected HandlerMethod handleNoMatch(Set<T> mappings, String lookupPath, ServerWebExchange exchange) 			throws Exception;1489852683;Invoked when no matching mapping is not found._@param mappings all registered mappings_@param lookupPath mapping lookup path within the current servlet mapping_@param exchange the current exchange_@return an alternative HandlerMethod or {@code null}_@throws Exception provides details that can be translated into an error status code;protected HandlerMethod handleNoMatch(Set<T> mappings, String lookupPath, ServerWebExchange exchange)_			throws Exception {__		return null__	};invoked,when,no,matching,mapping,is,not,found,param,mappings,all,registered,mappings,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,exchange,the,current,exchange,return,an,alternative,handler,method,or,code,null,throws,exception,provides,details,that,can,be,translated,into,an,error,status,code;protected,handler,method,handle,no,match,set,t,mappings,string,lookup,path,server,web,exchange,exchange,throws,exception,return,null
AbstractHandlerMethodMapping -> protected HandlerMethod handleNoMatch(Set<T> mappings, String lookupPath, ServerWebExchange exchange) 			throws Exception;1492542679;Invoked when no matching mapping is not found._@param mappings all registered mappings_@param lookupPath mapping lookup path within the current servlet mapping_@param exchange the current exchange_@return an alternative HandlerMethod or {@code null}_@throws Exception provides details that can be translated into an error status code;protected HandlerMethod handleNoMatch(Set<T> mappings, String lookupPath, ServerWebExchange exchange)_			throws Exception {__		return null__	};invoked,when,no,matching,mapping,is,not,found,param,mappings,all,registered,mappings,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,exchange,the,current,exchange,return,an,alternative,handler,method,or,code,null,throws,exception,provides,details,that,can,be,translated,into,an,error,status,code;protected,handler,method,handle,no,match,set,t,mappings,string,lookup,path,server,web,exchange,exchange,throws,exception,return,null
AbstractHandlerMethodMapping -> protected HandlerMethod handleNoMatch(Set<T> mappings, String lookupPath, ServerWebExchange exchange) 			throws Exception;1493370460;Invoked when no matching mapping is not found._@param mappings all registered mappings_@param lookupPath mapping lookup path within the current servlet mapping_@param exchange the current exchange_@return an alternative HandlerMethod or {@code null}_@throws Exception provides details that can be translated into an error status code;protected HandlerMethod handleNoMatch(Set<T> mappings, String lookupPath, ServerWebExchange exchange)_			throws Exception {__		return null__	};invoked,when,no,matching,mapping,is,not,found,param,mappings,all,registered,mappings,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,exchange,the,current,exchange,return,an,alternative,handler,method,or,code,null,throws,exception,provides,details,that,can,be,translated,into,an,error,status,code;protected,handler,method,handle,no,match,set,t,mappings,string,lookup,path,server,web,exchange,exchange,throws,exception,return,null
AbstractHandlerMethodMapping -> protected HandlerMethod handleNoMatch(Set<T> mappings, String lookupPath, ServerWebExchange exchange) 			throws Exception;1493391766;Invoked when no matching mapping is not found._@param mappings all registered mappings_@param lookupPath mapping lookup path within the current servlet mapping_@param exchange the current exchange_@return an alternative HandlerMethod or {@code null}_@throws Exception provides details that can be translated into an error status code;protected HandlerMethod handleNoMatch(Set<T> mappings, String lookupPath, ServerWebExchange exchange)_			throws Exception {__		return null__	};invoked,when,no,matching,mapping,is,not,found,param,mappings,all,registered,mappings,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,exchange,the,current,exchange,return,an,alternative,handler,method,or,code,null,throws,exception,provides,details,that,can,be,translated,into,an,error,status,code;protected,handler,method,handle,no,match,set,t,mappings,string,lookup,path,server,web,exchange,exchange,throws,exception,return,null
AbstractHandlerMethodMapping -> protected HandlerMethod handleNoMatch(Set<T> mappings, String lookupPath, ServerWebExchange exchange) 			throws Exception;1493755795;Invoked when no matching mapping is not found._@param mappings all registered mappings_@param lookupPath mapping lookup path within the current servlet mapping_@param exchange the current exchange_@return an alternative HandlerMethod or {@code null}_@throws Exception provides details that can be translated into an error status code;protected HandlerMethod handleNoMatch(Set<T> mappings, String lookupPath, ServerWebExchange exchange)_			throws Exception {__		return null__	};invoked,when,no,matching,mapping,is,not,found,param,mappings,all,registered,mappings,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,exchange,the,current,exchange,return,an,alternative,handler,method,or,code,null,throws,exception,provides,details,that,can,be,translated,into,an,error,status,code;protected,handler,method,handle,no,match,set,t,mappings,string,lookup,path,server,web,exchange,exchange,throws,exception,return,null
AbstractHandlerMethodMapping -> public void registerMapping(T mapping, Object handler, Method method);1485986572;Register the given mapping._<p>This method may be invoked at runtime after initialization has completed._@param mapping the mapping for the handler method_@param handler the handler_@param method the method;public void registerMapping(T mapping, Object handler, Method method) {_		this.mappingRegistry.register(mapping, handler, method)__	};register,the,given,mapping,p,this,method,may,be,invoked,at,runtime,after,initialization,has,completed,param,mapping,the,mapping,for,the,handler,method,param,handler,the,handler,param,method,the,method;public,void,register,mapping,t,mapping,object,handler,method,method,this,mapping,registry,register,mapping,handler,method
AbstractHandlerMethodMapping -> public void registerMapping(T mapping, Object handler, Method method);1486635693;Register the given mapping._<p>This method may be invoked at runtime after initialization has completed._@param mapping the mapping for the handler method_@param handler the handler_@param method the method;public void registerMapping(T mapping, Object handler, Method method) {_		this.readWriteLock.writeLock().lock()__		try {_			Set<PathPattern> patterns = getMappingPathPatterns(mapping)__			getPatternRegistry().addAll(patterns)__			patterns.forEach(pathPattern -> {_				this.mappingLookup.add(pathPattern, mapping)__			})__			this.mappingRegistry.register(mapping, handler, method)__		}_		finally {_			this.readWriteLock.writeLock().unlock()__		}_	};register,the,given,mapping,p,this,method,may,be,invoked,at,runtime,after,initialization,has,completed,param,mapping,the,mapping,for,the,handler,method,param,handler,the,handler,param,method,the,method;public,void,register,mapping,t,mapping,object,handler,method,method,this,read,write,lock,write,lock,lock,try,set,path,pattern,patterns,get,mapping,path,patterns,mapping,get,pattern,registry,add,all,patterns,patterns,for,each,path,pattern,this,mapping,lookup,add,path,pattern,mapping,this,mapping,registry,register,mapping,handler,method,finally,this,read,write,lock,write,lock,unlock
AbstractHandlerMethodMapping -> public void registerMapping(T mapping, Object handler, Method method);1486674586;Register the given mapping._<p>This method may be invoked at runtime after initialization has completed._@param mapping the mapping for the handler method_@param handler the handler_@param method the method;public void registerMapping(T mapping, Object handler, Method method) {_		this.readWriteLock.writeLock().lock()__		try {_			getMappingPathPatterns(mapping).forEach(pattern -> {_				getPatternRegistry().register(pattern).forEach(_						pathPattern -> this.mappingLookup.add(pathPattern, mapping)_				)__			})__			this.mappingRegistry.register(mapping, handler, method)__		}_		finally {_			this.readWriteLock.writeLock().unlock()__		}_	};register,the,given,mapping,p,this,method,may,be,invoked,at,runtime,after,initialization,has,completed,param,mapping,the,mapping,for,the,handler,method,param,handler,the,handler,param,method,the,method;public,void,register,mapping,t,mapping,object,handler,method,method,this,read,write,lock,write,lock,lock,try,get,mapping,path,patterns,mapping,for,each,pattern,get,pattern,registry,register,pattern,for,each,path,pattern,this,mapping,lookup,add,path,pattern,mapping,this,mapping,registry,register,mapping,handler,method,finally,this,read,write,lock,write,lock,unlock
AbstractHandlerMethodMapping -> public void registerMapping(T mapping, Object handler, Method method);1486747801;Register the given mapping._<p>This method may be invoked at runtime after initialization has completed._@param mapping the mapping for the handler method_@param handler the handler_@param method the method;public void registerMapping(T mapping, Object handler, Method method) {_		this.mappingRegistry.register(mapping, handler, method)__	};register,the,given,mapping,p,this,method,may,be,invoked,at,runtime,after,initialization,has,completed,param,mapping,the,mapping,for,the,handler,method,param,handler,the,handler,param,method,the,method;public,void,register,mapping,t,mapping,object,handler,method,method,this,mapping,registry,register,mapping,handler,method
AbstractHandlerMethodMapping -> public void registerMapping(T mapping, Object handler, Method method);1489852683;Register the given mapping._<p>This method may be invoked at runtime after initialization has completed._@param mapping the mapping for the handler method_@param handler the handler_@param method the method;public void registerMapping(T mapping, Object handler, Method method) {_		this.mappingRegistry.register(mapping, handler, method)__	};register,the,given,mapping,p,this,method,may,be,invoked,at,runtime,after,initialization,has,completed,param,mapping,the,mapping,for,the,handler,method,param,handler,the,handler,param,method,the,method;public,void,register,mapping,t,mapping,object,handler,method,method,this,mapping,registry,register,mapping,handler,method
AbstractHandlerMethodMapping -> public void registerMapping(T mapping, Object handler, Method method);1492542679;Register the given mapping._<p>This method may be invoked at runtime after initialization has completed._@param mapping the mapping for the handler method_@param handler the handler_@param method the method;public void registerMapping(T mapping, Object handler, Method method) {_		this.mappingRegistry.register(mapping, handler, method)__	};register,the,given,mapping,p,this,method,may,be,invoked,at,runtime,after,initialization,has,completed,param,mapping,the,mapping,for,the,handler,method,param,handler,the,handler,param,method,the,method;public,void,register,mapping,t,mapping,object,handler,method,method,this,mapping,registry,register,mapping,handler,method
AbstractHandlerMethodMapping -> public void registerMapping(T mapping, Object handler, Method method);1493370460;Register the given mapping._<p>This method may be invoked at runtime after initialization has completed._@param mapping the mapping for the handler method_@param handler the handler_@param method the method;public void registerMapping(T mapping, Object handler, Method method) {_		this.mappingRegistry.register(mapping, handler, method)__	};register,the,given,mapping,p,this,method,may,be,invoked,at,runtime,after,initialization,has,completed,param,mapping,the,mapping,for,the,handler,method,param,handler,the,handler,param,method,the,method;public,void,register,mapping,t,mapping,object,handler,method,method,this,mapping,registry,register,mapping,handler,method
AbstractHandlerMethodMapping -> public void registerMapping(T mapping, Object handler, Method method);1493391766;Register the given mapping._<p>This method may be invoked at runtime after initialization has completed._@param mapping the mapping for the handler method_@param handler the handler_@param method the method;public void registerMapping(T mapping, Object handler, Method method) {_		this.mappingRegistry.register(mapping, handler, method)__	};register,the,given,mapping,p,this,method,may,be,invoked,at,runtime,after,initialization,has,completed,param,mapping,the,mapping,for,the,handler,method,param,handler,the,handler,param,method,the,method;public,void,register,mapping,t,mapping,object,handler,method,method,this,mapping,registry,register,mapping,handler,method
AbstractHandlerMethodMapping -> public void registerMapping(T mapping, Object handler, Method method);1493755795;Register the given mapping._<p>This method may be invoked at runtime after initialization has completed._@param mapping the mapping for the handler method_@param handler the handler_@param method the method;public void registerMapping(T mapping, Object handler, Method method) {_		this.mappingRegistry.register(mapping, handler, method)__	};register,the,given,mapping,p,this,method,may,be,invoked,at,runtime,after,initialization,has,completed,param,mapping,the,mapping,for,the,handler,method,param,handler,the,handler,param,method,the,method;public,void,register,mapping,t,mapping,object,handler,method,method,this,mapping,registry,register,mapping,handler,method
AbstractHandlerMethodMapping -> public void registerMapping(T mapping, Object handler, Method method);1495868221;Register the given mapping._<p>This method may be invoked at runtime after initialization has completed._@param mapping the mapping for the handler method_@param handler the handler_@param method the method;public void registerMapping(T mapping, Object handler, Method method) {_		this.mappingRegistry.register(mapping, handler, method)__	};register,the,given,mapping,p,this,method,may,be,invoked,at,runtime,after,initialization,has,completed,param,mapping,the,mapping,for,the,handler,method,param,handler,the,handler,param,method,the,method;public,void,register,mapping,t,mapping,object,handler,method,method,this,mapping,registry,register,mapping,handler,method
AbstractHandlerMethodMapping -> public void registerMapping(T mapping, Object handler, Method method);1496334664;Register the given mapping._<p>This method may be invoked at runtime after initialization has completed._@param mapping the mapping for the handler method_@param handler the handler_@param method the method;public void registerMapping(T mapping, Object handler, Method method) {_		this.mappingRegistry.register(mapping, handler, method)__	};register,the,given,mapping,p,this,method,may,be,invoked,at,runtime,after,initialization,has,completed,param,mapping,the,mapping,for,the,handler,method,param,handler,the,handler,param,method,the,method;public,void,register,mapping,t,mapping,object,handler,method,method,this,mapping,registry,register,mapping,handler,method
AbstractHandlerMethodMapping -> public void registerMapping(T mapping, Object handler, Method method);1496430942;Register the given mapping._<p>This method may be invoked at runtime after initialization has completed._@param mapping the mapping for the handler method_@param handler the handler_@param method the method;public void registerMapping(T mapping, Object handler, Method method) {_		this.mappingRegistry.register(mapping, handler, method)__	};register,the,given,mapping,p,this,method,may,be,invoked,at,runtime,after,initialization,has,completed,param,mapping,the,mapping,for,the,handler,method,param,handler,the,handler,param,method,the,method;public,void,register,mapping,t,mapping,object,handler,method,method,this,mapping,registry,register,mapping,handler,method
AbstractHandlerMethodMapping -> public void registerMapping(T mapping, Object handler, Method method);1496837955;Register the given mapping._<p>This method may be invoked at runtime after initialization has completed._@param mapping the mapping for the handler method_@param handler the handler_@param method the method;public void registerMapping(T mapping, Object handler, Method method) {_		this.mappingRegistry.register(mapping, handler, method)__	};register,the,given,mapping,p,this,method,may,be,invoked,at,runtime,after,initialization,has,completed,param,mapping,the,mapping,for,the,handler,method,param,handler,the,handler,param,method,the,method;public,void,register,mapping,t,mapping,object,handler,method,method,this,mapping,registry,register,mapping,handler,method
AbstractHandlerMethodMapping -> public void registerMapping(T mapping, Object handler, Method method);1497039338;Register the given mapping._<p>This method may be invoked at runtime after initialization has completed._@param mapping the mapping for the handler method_@param handler the handler_@param method the method;public void registerMapping(T mapping, Object handler, Method method) {_		this.mappingRegistry.register(mapping, handler, method)__	};register,the,given,mapping,p,this,method,may,be,invoked,at,runtime,after,initialization,has,completed,param,mapping,the,mapping,for,the,handler,method,param,handler,the,handler,param,method,the,method;public,void,register,mapping,t,mapping,object,handler,method,method,this,mapping,registry,register,mapping,handler,method
AbstractHandlerMethodMapping -> public void registerMapping(T mapping, Object handler, Method method);1497232764;Register the given mapping._<p>This method may be invoked at runtime after initialization has completed._@param mapping the mapping for the handler method_@param handler the handler_@param method the method;public void registerMapping(T mapping, Object handler, Method method) {_		this.mappingRegistry.register(mapping, handler, method)__	};register,the,given,mapping,p,this,method,may,be,invoked,at,runtime,after,initialization,has,completed,param,mapping,the,mapping,for,the,handler,method,param,handler,the,handler,param,method,the,method;public,void,register,mapping,t,mapping,object,handler,method,method,this,mapping,registry,register,mapping,handler,method
AbstractHandlerMethodMapping -> public void registerMapping(T mapping, Object handler, Method method);1497251962;Register the given mapping._<p>This method may be invoked at runtime after initialization has completed._@param mapping the mapping for the handler method_@param handler the handler_@param method the method;public void registerMapping(T mapping, Object handler, Method method) {_		this.mappingRegistry.register(mapping, handler, method)__	};register,the,given,mapping,p,this,method,may,be,invoked,at,runtime,after,initialization,has,completed,param,mapping,the,mapping,for,the,handler,method,param,handler,the,handler,param,method,the,method;public,void,register,mapping,t,mapping,object,handler,method,method,this,mapping,registry,register,mapping,handler,method
AbstractHandlerMethodMapping -> public void registerMapping(T mapping, Object handler, Method method);1497286385;Register the given mapping._<p>This method may be invoked at runtime after initialization has completed._@param mapping the mapping for the handler method_@param handler the handler_@param method the method;public void registerMapping(T mapping, Object handler, Method method) {_		this.mappingRegistry.register(mapping, handler, method)__	};register,the,given,mapping,p,this,method,may,be,invoked,at,runtime,after,initialization,has,completed,param,mapping,the,mapping,for,the,handler,method,param,handler,the,handler,param,method,the,method;public,void,register,mapping,t,mapping,object,handler,method,method,this,mapping,registry,register,mapping,handler,method
AbstractHandlerMethodMapping -> public void registerMapping(T mapping, Object handler, Method method);1498756719;Register the given mapping._<p>This method may be invoked at runtime after initialization has completed._@param mapping the mapping for the handler method_@param handler the handler_@param method the method;public void registerMapping(T mapping, Object handler, Method method) {_		this.mappingRegistry.register(mapping, handler, method)__	};register,the,given,mapping,p,this,method,may,be,invoked,at,runtime,after,initialization,has,completed,param,mapping,the,mapping,for,the,handler,method,param,handler,the,handler,param,method,the,method;public,void,register,mapping,t,mapping,object,handler,method,method,this,mapping,registry,register,mapping,handler,method
AbstractHandlerMethodMapping -> public void registerMapping(T mapping, Object handler, Method method);1498861175;Register the given mapping._<p>This method may be invoked at runtime after initialization has completed._@param mapping the mapping for the handler method_@param handler the handler_@param method the method;public void registerMapping(T mapping, Object handler, Method method) {_		this.mappingRegistry.register(mapping, handler, method)__	};register,the,given,mapping,p,this,method,may,be,invoked,at,runtime,after,initialization,has,completed,param,mapping,the,mapping,for,the,handler,method,param,handler,the,handler,param,method,the,method;public,void,register,mapping,t,mapping,object,handler,method,method,this,mapping,registry,register,mapping,handler,method
AbstractHandlerMethodMapping -> public void registerMapping(T mapping, Object handler, Method method);1498953917;Register the given mapping._<p>This method may be invoked at runtime after initialization has completed._@param mapping the mapping for the handler method_@param handler the handler_@param method the method;public void registerMapping(T mapping, Object handler, Method method) {_		this.mappingRegistry.register(mapping, handler, method)__	};register,the,given,mapping,p,this,method,may,be,invoked,at,runtime,after,initialization,has,completed,param,mapping,the,mapping,for,the,handler,method,param,handler,the,handler,param,method,the,method;public,void,register,mapping,t,mapping,object,handler,method,method,this,mapping,registry,register,mapping,handler,method
AbstractHandlerMethodMapping -> public void registerMapping(T mapping, Object handler, Method method);1516617801;Register the given mapping._<p>This method may be invoked at runtime after initialization has completed._@param mapping the mapping for the handler method_@param handler the handler_@param method the method;public void registerMapping(T mapping, Object handler, Method method) {_		this.mappingRegistry.register(mapping, handler, method)__	};register,the,given,mapping,p,this,method,may,be,invoked,at,runtime,after,initialization,has,completed,param,mapping,the,mapping,for,the,handler,method,param,handler,the,handler,param,method,the,method;public,void,register,mapping,t,mapping,object,handler,method,method,this,mapping,registry,register,mapping,handler,method
AbstractHandlerMethodMapping -> public void registerMapping(T mapping, Object handler, Method method);1529721864;Register the given mapping._<p>This method may be invoked at runtime after initialization has completed._@param mapping the mapping for the handler method_@param handler the handler_@param method the method;public void registerMapping(T mapping, Object handler, Method method) {_		if (logger.isTraceEnabled()) {_			logger.trace("Register \"" + mapping + "\" to " + method.toGenericString())__		}_		this.mappingRegistry.register(mapping, handler, method)__	};register,the,given,mapping,p,this,method,may,be,invoked,at,runtime,after,initialization,has,completed,param,mapping,the,mapping,for,the,handler,method,param,handler,the,handler,param,method,the,method;public,void,register,mapping,t,mapping,object,handler,method,method,if,logger,is,trace,enabled,logger,trace,register,mapping,to,method,to,generic,string,this,mapping,registry,register,mapping,handler,method
AbstractHandlerMethodMapping -> public void registerMapping(T mapping, Object handler, Method method);1530174524;Register the given mapping._<p>This method may be invoked at runtime after initialization has completed._@param mapping the mapping for the handler method_@param handler the handler_@param method the method;public void registerMapping(T mapping, Object handler, Method method) {_		if (logger.isTraceEnabled()) {_			logger.trace("Register \"" + mapping + "\" to " + method.toGenericString())__		}_		this.mappingRegistry.register(mapping, handler, method)__	};register,the,given,mapping,p,this,method,may,be,invoked,at,runtime,after,initialization,has,completed,param,mapping,the,mapping,for,the,handler,method,param,handler,the,handler,param,method,the,method;public,void,register,mapping,t,mapping,object,handler,method,method,if,logger,is,trace,enabled,logger,trace,register,mapping,to,method,to,generic,string,this,mapping,registry,register,mapping,handler,method
AbstractHandlerMethodMapping -> public void registerMapping(T mapping, Object handler, Method method);1530793633;Register the given mapping._<p>This method may be invoked at runtime after initialization has completed._@param mapping the mapping for the handler method_@param handler the handler_@param method the method;public void registerMapping(T mapping, Object handler, Method method) {_		if (logger.isTraceEnabled()) {_			logger.trace("Register \"" + mapping + "\" to " + method.toGenericString())__		}_		this.mappingRegistry.register(mapping, handler, method)__	};register,the,given,mapping,p,this,method,may,be,invoked,at,runtime,after,initialization,has,completed,param,mapping,the,mapping,for,the,handler,method,param,handler,the,handler,param,method,the,method;public,void,register,mapping,t,mapping,object,handler,method,method,if,logger,is,trace,enabled,logger,trace,register,mapping,to,method,to,generic,string,this,mapping,registry,register,mapping,handler,method
AbstractHandlerMethodMapping -> public void registerMapping(T mapping, Object handler, Method method);1542407418;Register the given mapping._<p>This method may be invoked at runtime after initialization has completed._@param mapping the mapping for the handler method_@param handler the handler_@param method the method;public void registerMapping(T mapping, Object handler, Method method) {_		if (logger.isTraceEnabled()) {_			logger.trace("Register \"" + mapping + "\" to " + method.toGenericString())__		}_		this.mappingRegistry.register(mapping, handler, method)__	};register,the,given,mapping,p,this,method,may,be,invoked,at,runtime,after,initialization,has,completed,param,mapping,the,mapping,for,the,handler,method,param,handler,the,handler,param,method,the,method;public,void,register,mapping,t,mapping,object,handler,method,method,if,logger,is,trace,enabled,logger,trace,register,mapping,to,method,to,generic,string,this,mapping,registry,register,mapping,handler,method
AbstractHandlerMethodMapping -> public void registerMapping(T mapping, Object handler, Method method);1548427561;Register the given mapping._<p>This method may be invoked at runtime after initialization has completed._@param mapping the mapping for the handler method_@param handler the handler_@param method the method;public void registerMapping(T mapping, Object handler, Method method) {_		if (logger.isTraceEnabled()) {_			logger.trace("Register \"" + mapping + "\" to " + method.toGenericString())__		}_		this.mappingRegistry.register(mapping, handler, method)__	};register,the,given,mapping,p,this,method,may,be,invoked,at,runtime,after,initialization,has,completed,param,mapping,the,mapping,for,the,handler,method,param,handler,the,handler,param,method,the,method;public,void,register,mapping,t,mapping,object,handler,method,method,if,logger,is,trace,enabled,logger,trace,register,mapping,to,method,to,generic,string,this,mapping,registry,register,mapping,handler,method
AbstractHandlerMethodMapping -> public void registerMapping(T mapping, Object handler, Method method);1551093473;Register the given mapping._<p>This method may be invoked at runtime after initialization has completed._@param mapping the mapping for the handler method_@param handler the handler_@param method the method;public void registerMapping(T mapping, Object handler, Method method) {_		if (logger.isTraceEnabled()) {_			logger.trace("Register \"" + mapping + "\" to " + method.toGenericString())__		}_		this.mappingRegistry.register(mapping, handler, method)__	};register,the,given,mapping,p,this,method,may,be,invoked,at,runtime,after,initialization,has,completed,param,mapping,the,mapping,for,the,handler,method,param,handler,the,handler,param,method,the,method;public,void,register,mapping,t,mapping,object,handler,method,method,if,logger,is,trace,enabled,logger,trace,register,mapping,to,method,to,generic,string,this,mapping,registry,register,mapping,handler,method
AbstractHandlerMethodMapping -> MappingRegistry -> public Map<T, HandlerMethod> getMappings();1485986572;Return all mappings and handler methods. Not thread-safe._@see #acquireReadLock();public Map<T, HandlerMethod> getMappings() {_			return this.mappingLookup__		};return,all,mappings,and,handler,methods,not,thread,safe,see,acquire,read,lock;public,map,t,handler,method,get,mappings,return,this,mapping,lookup
AbstractHandlerMethodMapping -> MappingRegistry -> public Map<T, HandlerMethod> getMappings();1486635693;Return all mappings and handler methods. Not thread-safe.;public Map<T, HandlerMethod> getMappings() {_			return this.handlerMethodLookup__		};return,all,mappings,and,handler,methods,not,thread,safe;public,map,t,handler,method,get,mappings,return,this,handler,method,lookup
AbstractHandlerMethodMapping -> MappingRegistry -> public Map<T, HandlerMethod> getMappings();1486674586;Return all mappings and handler methods. Not thread-safe.;public Map<T, HandlerMethod> getMappings() {_			return this.handlerMethodLookup__		};return,all,mappings,and,handler,methods,not,thread,safe;public,map,t,handler,method,get,mappings,return,this,handler,method,lookup
AbstractHandlerMethodMapping -> MappingRegistry -> public Map<T, HandlerMethod> getMappings();1486747801;Return all mappings and handler methods. Not thread-safe._@see #acquireReadLock();public Map<T, HandlerMethod> getMappings() {_			return this.mappingLookup__		};return,all,mappings,and,handler,methods,not,thread,safe,see,acquire,read,lock;public,map,t,handler,method,get,mappings,return,this,mapping,lookup
AbstractHandlerMethodMapping -> MappingRegistry -> public Map<T, HandlerMethod> getMappings();1489852683;Return all mappings and handler methods. Not thread-safe._@see #acquireReadLock();public Map<T, HandlerMethod> getMappings() {_			return this.mappingLookup__		};return,all,mappings,and,handler,methods,not,thread,safe,see,acquire,read,lock;public,map,t,handler,method,get,mappings,return,this,mapping,lookup
AbstractHandlerMethodMapping -> MappingRegistry -> public Map<T, HandlerMethod> getMappings();1492542679;Return all mappings and handler methods. Not thread-safe._@see #acquireReadLock();public Map<T, HandlerMethod> getMappings() {_			return this.mappingLookup__		};return,all,mappings,and,handler,methods,not,thread,safe,see,acquire,read,lock;public,map,t,handler,method,get,mappings,return,this,mapping,lookup
AbstractHandlerMethodMapping -> MappingRegistry -> public Map<T, HandlerMethod> getMappings();1493370460;Return all mappings and handler methods. Not thread-safe._@see #acquireReadLock();public Map<T, HandlerMethod> getMappings() {_			return this.mappingLookup__		};return,all,mappings,and,handler,methods,not,thread,safe,see,acquire,read,lock;public,map,t,handler,method,get,mappings,return,this,mapping,lookup
AbstractHandlerMethodMapping -> MappingRegistry -> public Map<T, HandlerMethod> getMappings();1493391766;Return all mappings and handler methods. Not thread-safe._@see #acquireReadLock();public Map<T, HandlerMethod> getMappings() {_			return this.mappingLookup__		};return,all,mappings,and,handler,methods,not,thread,safe,see,acquire,read,lock;public,map,t,handler,method,get,mappings,return,this,mapping,lookup
AbstractHandlerMethodMapping -> MappingRegistry -> public Map<T, HandlerMethod> getMappings();1493755795;Return all mappings and handler methods. Not thread-safe._@see #acquireReadLock();public Map<T, HandlerMethod> getMappings() {_			return this.mappingLookup__		};return,all,mappings,and,handler,methods,not,thread,safe,see,acquire,read,lock;public,map,t,handler,method,get,mappings,return,this,mapping,lookup
AbstractHandlerMethodMapping -> MappingRegistry -> public Map<T, HandlerMethod> getMappings();1495868221;Return all mappings and handler methods. Not thread-safe._@see #acquireReadLock();public Map<T, HandlerMethod> getMappings() {_			return this.mappingLookup__		};return,all,mappings,and,handler,methods,not,thread,safe,see,acquire,read,lock;public,map,t,handler,method,get,mappings,return,this,mapping,lookup
AbstractHandlerMethodMapping -> MappingRegistry -> public Map<T, HandlerMethod> getMappings();1496334664;Return all mappings and handler methods. Not thread-safe._@see #acquireReadLock();public Map<T, HandlerMethod> getMappings() {_			return this.mappingLookup__		};return,all,mappings,and,handler,methods,not,thread,safe,see,acquire,read,lock;public,map,t,handler,method,get,mappings,return,this,mapping,lookup
AbstractHandlerMethodMapping -> MappingRegistry -> public Map<T, HandlerMethod> getMappings();1496430942;Return all mappings and handler methods. Not thread-safe._@see #acquireReadLock();public Map<T, HandlerMethod> getMappings() {_			return this.mappingLookup__		};return,all,mappings,and,handler,methods,not,thread,safe,see,acquire,read,lock;public,map,t,handler,method,get,mappings,return,this,mapping,lookup
AbstractHandlerMethodMapping -> MappingRegistry -> public Map<T, HandlerMethod> getMappings();1496837955;Return all mappings and handler methods. Not thread-safe._@see #acquireReadLock();public Map<T, HandlerMethod> getMappings() {_			return this.mappingLookup__		};return,all,mappings,and,handler,methods,not,thread,safe,see,acquire,read,lock;public,map,t,handler,method,get,mappings,return,this,mapping,lookup
AbstractHandlerMethodMapping -> MappingRegistry -> public Map<T, HandlerMethod> getMappings();1497039338;Return all mappings and handler methods. Not thread-safe._@see #acquireReadLock();public Map<T, HandlerMethod> getMappings() {_			return this.mappingLookup__		};return,all,mappings,and,handler,methods,not,thread,safe,see,acquire,read,lock;public,map,t,handler,method,get,mappings,return,this,mapping,lookup
AbstractHandlerMethodMapping -> MappingRegistry -> public Map<T, HandlerMethod> getMappings();1497232764;Return all mappings and handler methods. Not thread-safe._@see #acquireReadLock();public Map<T, HandlerMethod> getMappings() {_			return this.mappingLookup__		};return,all,mappings,and,handler,methods,not,thread,safe,see,acquire,read,lock;public,map,t,handler,method,get,mappings,return,this,mapping,lookup
AbstractHandlerMethodMapping -> MappingRegistry -> public Map<T, HandlerMethod> getMappings();1497251962;Return all mappings and handler methods. Not thread-safe._@see #acquireReadLock();public Map<T, HandlerMethod> getMappings() {_			return this.mappingLookup__		};return,all,mappings,and,handler,methods,not,thread,safe,see,acquire,read,lock;public,map,t,handler,method,get,mappings,return,this,mapping,lookup
AbstractHandlerMethodMapping -> MappingRegistry -> public Map<T, HandlerMethod> getMappings();1497286385;Return all mappings and handler methods. Not thread-safe._@see #acquireReadLock();public Map<T, HandlerMethod> getMappings() {_			return this.mappingLookup__		};return,all,mappings,and,handler,methods,not,thread,safe,see,acquire,read,lock;public,map,t,handler,method,get,mappings,return,this,mapping,lookup
AbstractHandlerMethodMapping -> MappingRegistry -> public Map<T, HandlerMethod> getMappings();1498756719;Return all mappings and handler methods. Not thread-safe._@see #acquireReadLock();public Map<T, HandlerMethod> getMappings() {_			return this.mappingLookup__		};return,all,mappings,and,handler,methods,not,thread,safe,see,acquire,read,lock;public,map,t,handler,method,get,mappings,return,this,mapping,lookup
AbstractHandlerMethodMapping -> MappingRegistry -> public Map<T, HandlerMethod> getMappings();1498861175;Return all mappings and handler methods. Not thread-safe._@see #acquireReadLock();public Map<T, HandlerMethod> getMappings() {_			return this.mappingLookup__		};return,all,mappings,and,handler,methods,not,thread,safe,see,acquire,read,lock;public,map,t,handler,method,get,mappings,return,this,mapping,lookup
AbstractHandlerMethodMapping -> MappingRegistry -> public Map<T, HandlerMethod> getMappings();1498953917;Return all mappings and handler methods. Not thread-safe._@see #acquireReadLock();public Map<T, HandlerMethod> getMappings() {_			return this.mappingLookup__		};return,all,mappings,and,handler,methods,not,thread,safe,see,acquire,read,lock;public,map,t,handler,method,get,mappings,return,this,mapping,lookup
AbstractHandlerMethodMapping -> MappingRegistry -> public Map<T, HandlerMethod> getMappings();1516617801;Return all mappings and handler methods. Not thread-safe._@see #acquireReadLock();public Map<T, HandlerMethod> getMappings() {_			return this.mappingLookup__		};return,all,mappings,and,handler,methods,not,thread,safe,see,acquire,read,lock;public,map,t,handler,method,get,mappings,return,this,mapping,lookup
AbstractHandlerMethodMapping -> MappingRegistry -> public Map<T, HandlerMethod> getMappings();1529721864;Return all mappings and handler methods. Not thread-safe._@see #acquireReadLock();public Map<T, HandlerMethod> getMappings() {_			return this.mappingLookup__		};return,all,mappings,and,handler,methods,not,thread,safe,see,acquire,read,lock;public,map,t,handler,method,get,mappings,return,this,mapping,lookup
AbstractHandlerMethodMapping -> MappingRegistry -> public Map<T, HandlerMethod> getMappings();1530174524;Return all mappings and handler methods. Not thread-safe._@see #acquireReadLock();public Map<T, HandlerMethod> getMappings() {_			return this.mappingLookup__		};return,all,mappings,and,handler,methods,not,thread,safe,see,acquire,read,lock;public,map,t,handler,method,get,mappings,return,this,mapping,lookup
AbstractHandlerMethodMapping -> MappingRegistry -> public Map<T, HandlerMethod> getMappings();1530793633;Return all mappings and handler methods. Not thread-safe._@see #acquireReadLock();public Map<T, HandlerMethod> getMappings() {_			return this.mappingLookup__		};return,all,mappings,and,handler,methods,not,thread,safe,see,acquire,read,lock;public,map,t,handler,method,get,mappings,return,this,mapping,lookup
AbstractHandlerMethodMapping -> MappingRegistry -> public Map<T, HandlerMethod> getMappings();1542407418;Return all mappings and handler methods. Not thread-safe._@see #acquireReadLock();public Map<T, HandlerMethod> getMappings() {_			return this.mappingLookup__		};return,all,mappings,and,handler,methods,not,thread,safe,see,acquire,read,lock;public,map,t,handler,method,get,mappings,return,this,mapping,lookup
AbstractHandlerMethodMapping -> MappingRegistry -> public Map<T, HandlerMethod> getMappings();1548427561;Return all mappings and handler methods. Not thread-safe._@see #acquireReadLock();public Map<T, HandlerMethod> getMappings() {_			return this.mappingLookup__		};return,all,mappings,and,handler,methods,not,thread,safe,see,acquire,read,lock;public,map,t,handler,method,get,mappings,return,this,mapping,lookup
AbstractHandlerMethodMapping -> MappingRegistry -> public Map<T, HandlerMethod> getMappings();1551093473;Return all mappings and handler methods. Not thread-safe._@see #acquireReadLock();public Map<T, HandlerMethod> getMappings() {_			return this.mappingLookup__		};return,all,mappings,and,handler,methods,not,thread,safe,see,acquire,read,lock;public,map,t,handler,method,get,mappings,return,this,mapping,lookup
AbstractHandlerMethodMapping -> MappingRegistry getMappingRegistry();1485986572;Return the internal mapping registry. Provided for testing purposes.;MappingRegistry getMappingRegistry() {_		return this.mappingRegistry__	};return,the,internal,mapping,registry,provided,for,testing,purposes;mapping,registry,get,mapping,registry,return,this,mapping,registry
AbstractHandlerMethodMapping -> MappingRegistry getMappingRegistry();1486635693;Return the internal mapping registry. Provided for testing purposes.;MappingRegistry getMappingRegistry() {_		return this.mappingRegistry__	};return,the,internal,mapping,registry,provided,for,testing,purposes;mapping,registry,get,mapping,registry,return,this,mapping,registry
AbstractHandlerMethodMapping -> MappingRegistry getMappingRegistry();1486674586;Return the internal mapping registry. Provided for testing purposes.;MappingRegistry getMappingRegistry() {_		return this.mappingRegistry__	};return,the,internal,mapping,registry,provided,for,testing,purposes;mapping,registry,get,mapping,registry,return,this,mapping,registry
AbstractHandlerMethodMapping -> MappingRegistry getMappingRegistry();1486747801;Return the internal mapping registry. Provided for testing purposes.;MappingRegistry getMappingRegistry() {_		return this.mappingRegistry__	};return,the,internal,mapping,registry,provided,for,testing,purposes;mapping,registry,get,mapping,registry,return,this,mapping,registry
AbstractHandlerMethodMapping -> MappingRegistry getMappingRegistry();1489852683;Return the internal mapping registry. Provided for testing purposes.;MappingRegistry getMappingRegistry() {_		return this.mappingRegistry__	};return,the,internal,mapping,registry,provided,for,testing,purposes;mapping,registry,get,mapping,registry,return,this,mapping,registry
AbstractHandlerMethodMapping -> MappingRegistry getMappingRegistry();1492542679;Return the internal mapping registry. Provided for testing purposes.;MappingRegistry getMappingRegistry() {_		return this.mappingRegistry__	};return,the,internal,mapping,registry,provided,for,testing,purposes;mapping,registry,get,mapping,registry,return,this,mapping,registry
AbstractHandlerMethodMapping -> MappingRegistry getMappingRegistry();1493370460;Return the internal mapping registry. Provided for testing purposes.;MappingRegistry getMappingRegistry() {_		return this.mappingRegistry__	};return,the,internal,mapping,registry,provided,for,testing,purposes;mapping,registry,get,mapping,registry,return,this,mapping,registry
AbstractHandlerMethodMapping -> MappingRegistry getMappingRegistry();1493391766;Return the internal mapping registry. Provided for testing purposes.;MappingRegistry getMappingRegistry() {_		return this.mappingRegistry__	};return,the,internal,mapping,registry,provided,for,testing,purposes;mapping,registry,get,mapping,registry,return,this,mapping,registry
AbstractHandlerMethodMapping -> MappingRegistry getMappingRegistry();1493755795;Return the internal mapping registry. Provided for testing purposes.;MappingRegistry getMappingRegistry() {_		return this.mappingRegistry__	};return,the,internal,mapping,registry,provided,for,testing,purposes;mapping,registry,get,mapping,registry,return,this,mapping,registry
AbstractHandlerMethodMapping -> MappingRegistry getMappingRegistry();1495868221;Return the internal mapping registry. Provided for testing purposes.;MappingRegistry getMappingRegistry() {_		return this.mappingRegistry__	};return,the,internal,mapping,registry,provided,for,testing,purposes;mapping,registry,get,mapping,registry,return,this,mapping,registry
AbstractHandlerMethodMapping -> MappingRegistry getMappingRegistry();1496334664;Return the internal mapping registry. Provided for testing purposes.;MappingRegistry getMappingRegistry() {_		return this.mappingRegistry__	};return,the,internal,mapping,registry,provided,for,testing,purposes;mapping,registry,get,mapping,registry,return,this,mapping,registry
AbstractHandlerMethodMapping -> MappingRegistry getMappingRegistry();1496430942;Return the internal mapping registry. Provided for testing purposes.;MappingRegistry getMappingRegistry() {_		return this.mappingRegistry__	};return,the,internal,mapping,registry,provided,for,testing,purposes;mapping,registry,get,mapping,registry,return,this,mapping,registry
AbstractHandlerMethodMapping -> MappingRegistry getMappingRegistry();1496837955;Return the internal mapping registry. Provided for testing purposes.;MappingRegistry getMappingRegistry() {_		return this.mappingRegistry__	};return,the,internal,mapping,registry,provided,for,testing,purposes;mapping,registry,get,mapping,registry,return,this,mapping,registry
AbstractHandlerMethodMapping -> MappingRegistry getMappingRegistry();1497039338;Return the internal mapping registry. Provided for testing purposes.;MappingRegistry getMappingRegistry() {_		return this.mappingRegistry__	};return,the,internal,mapping,registry,provided,for,testing,purposes;mapping,registry,get,mapping,registry,return,this,mapping,registry
AbstractHandlerMethodMapping -> MappingRegistry getMappingRegistry();1497232764;Return the internal mapping registry. Provided for testing purposes.;MappingRegistry getMappingRegistry() {_		return this.mappingRegistry__	};return,the,internal,mapping,registry,provided,for,testing,purposes;mapping,registry,get,mapping,registry,return,this,mapping,registry
AbstractHandlerMethodMapping -> MappingRegistry getMappingRegistry();1497251962;Return the internal mapping registry. Provided for testing purposes.;MappingRegistry getMappingRegistry() {_		return this.mappingRegistry__	};return,the,internal,mapping,registry,provided,for,testing,purposes;mapping,registry,get,mapping,registry,return,this,mapping,registry
AbstractHandlerMethodMapping -> MappingRegistry getMappingRegistry();1497286385;Return the internal mapping registry. Provided for testing purposes.;MappingRegistry getMappingRegistry() {_		return this.mappingRegistry__	};return,the,internal,mapping,registry,provided,for,testing,purposes;mapping,registry,get,mapping,registry,return,this,mapping,registry
AbstractHandlerMethodMapping -> MappingRegistry getMappingRegistry();1498756719;Return the internal mapping registry. Provided for testing purposes.;MappingRegistry getMappingRegistry() {_		return this.mappingRegistry__	};return,the,internal,mapping,registry,provided,for,testing,purposes;mapping,registry,get,mapping,registry,return,this,mapping,registry
AbstractHandlerMethodMapping -> MappingRegistry getMappingRegistry();1498861175;Return the internal mapping registry. Provided for testing purposes.;MappingRegistry getMappingRegistry() {_		return this.mappingRegistry__	};return,the,internal,mapping,registry,provided,for,testing,purposes;mapping,registry,get,mapping,registry,return,this,mapping,registry
AbstractHandlerMethodMapping -> MappingRegistry getMappingRegistry();1498953917;Return the internal mapping registry. Provided for testing purposes.;MappingRegistry getMappingRegistry() {_		return this.mappingRegistry__	};return,the,internal,mapping,registry,provided,for,testing,purposes;mapping,registry,get,mapping,registry,return,this,mapping,registry
AbstractHandlerMethodMapping -> MappingRegistry getMappingRegistry();1516617801;Return the internal mapping registry. Provided for testing purposes.;MappingRegistry getMappingRegistry() {_		return this.mappingRegistry__	};return,the,internal,mapping,registry,provided,for,testing,purposes;mapping,registry,get,mapping,registry,return,this,mapping,registry
AbstractHandlerMethodMapping -> MappingRegistry getMappingRegistry();1529721864;Return the internal mapping registry. Provided for testing purposes.;MappingRegistry getMappingRegistry() {_		return this.mappingRegistry__	};return,the,internal,mapping,registry,provided,for,testing,purposes;mapping,registry,get,mapping,registry,return,this,mapping,registry
AbstractHandlerMethodMapping -> MappingRegistry getMappingRegistry();1530174524;Return the internal mapping registry. Provided for testing purposes.;MappingRegistry getMappingRegistry() {_		return this.mappingRegistry__	};return,the,internal,mapping,registry,provided,for,testing,purposes;mapping,registry,get,mapping,registry,return,this,mapping,registry
AbstractHandlerMethodMapping -> MappingRegistry getMappingRegistry();1530793633;Return the internal mapping registry. Provided for testing purposes.;MappingRegistry getMappingRegistry() {_		return this.mappingRegistry__	};return,the,internal,mapping,registry,provided,for,testing,purposes;mapping,registry,get,mapping,registry,return,this,mapping,registry
AbstractHandlerMethodMapping -> MappingRegistry getMappingRegistry();1542407418;Return the internal mapping registry. Provided for testing purposes.;MappingRegistry getMappingRegistry() {_		return this.mappingRegistry__	};return,the,internal,mapping,registry,provided,for,testing,purposes;mapping,registry,get,mapping,registry,return,this,mapping,registry
AbstractHandlerMethodMapping -> MappingRegistry getMappingRegistry();1548427561;Return the internal mapping registry. Provided for testing purposes.;MappingRegistry getMappingRegistry() {_		return this.mappingRegistry__	};return,the,internal,mapping,registry,provided,for,testing,purposes;mapping,registry,get,mapping,registry,return,this,mapping,registry
AbstractHandlerMethodMapping -> MappingRegistry getMappingRegistry();1551093473;Return the internal mapping registry. Provided for testing purposes.;MappingRegistry getMappingRegistry() {_		return this.mappingRegistry__	};return,the,internal,mapping,registry,provided,for,testing,purposes;mapping,registry,get,mapping,registry,return,this,mapping,registry
AbstractHandlerMethodMapping -> protected abstract Comparator<T> getMappingComparator(ServerWebExchange exchange)_;1485986572;Return a comparator for sorting matching mappings._The returned comparator should sort 'better' matches higher._@param exchange the current exchange_@return the comparator (never {@code null});protected abstract Comparator<T> getMappingComparator(ServerWebExchange exchange)_;return,a,comparator,for,sorting,matching,mappings,the,returned,comparator,should,sort,better,matches,higher,param,exchange,the,current,exchange,return,the,comparator,never,code,null;protected,abstract,comparator,t,get,mapping,comparator,server,web,exchange,exchange
AbstractHandlerMethodMapping -> protected abstract Comparator<T> getMappingComparator(ServerWebExchange exchange)_;1486635693;Return a comparator for sorting matching mappings._The returned comparator should sort 'better' matches higher._@param exchange the current exchange_@return the comparator (never {@code null});protected abstract Comparator<T> getMappingComparator(ServerWebExchange exchange)_;return,a,comparator,for,sorting,matching,mappings,the,returned,comparator,should,sort,better,matches,higher,param,exchange,the,current,exchange,return,the,comparator,never,code,null;protected,abstract,comparator,t,get,mapping,comparator,server,web,exchange,exchange
AbstractHandlerMethodMapping -> protected abstract Comparator<T> getMappingComparator(ServerWebExchange exchange)_;1486674586;Return a comparator for sorting matching mappings._The returned comparator should sort 'better' matches higher._@param exchange the current exchange_@return the comparator (never {@code null});protected abstract Comparator<T> getMappingComparator(ServerWebExchange exchange)_;return,a,comparator,for,sorting,matching,mappings,the,returned,comparator,should,sort,better,matches,higher,param,exchange,the,current,exchange,return,the,comparator,never,code,null;protected,abstract,comparator,t,get,mapping,comparator,server,web,exchange,exchange
AbstractHandlerMethodMapping -> protected abstract Comparator<T> getMappingComparator(ServerWebExchange exchange)_;1486747801;Return a comparator for sorting matching mappings._The returned comparator should sort 'better' matches higher._@param exchange the current exchange_@return the comparator (never {@code null});protected abstract Comparator<T> getMappingComparator(ServerWebExchange exchange)_;return,a,comparator,for,sorting,matching,mappings,the,returned,comparator,should,sort,better,matches,higher,param,exchange,the,current,exchange,return,the,comparator,never,code,null;protected,abstract,comparator,t,get,mapping,comparator,server,web,exchange,exchange
AbstractHandlerMethodMapping -> protected abstract Comparator<T> getMappingComparator(ServerWebExchange exchange)_;1489852683;Return a comparator for sorting matching mappings._The returned comparator should sort 'better' matches higher._@param exchange the current exchange_@return the comparator (never {@code null});protected abstract Comparator<T> getMappingComparator(ServerWebExchange exchange)_;return,a,comparator,for,sorting,matching,mappings,the,returned,comparator,should,sort,better,matches,higher,param,exchange,the,current,exchange,return,the,comparator,never,code,null;protected,abstract,comparator,t,get,mapping,comparator,server,web,exchange,exchange
AbstractHandlerMethodMapping -> protected abstract Comparator<T> getMappingComparator(ServerWebExchange exchange)_;1492542679;Return a comparator for sorting matching mappings._The returned comparator should sort 'better' matches higher._@param exchange the current exchange_@return the comparator (never {@code null});protected abstract Comparator<T> getMappingComparator(ServerWebExchange exchange)_;return,a,comparator,for,sorting,matching,mappings,the,returned,comparator,should,sort,better,matches,higher,param,exchange,the,current,exchange,return,the,comparator,never,code,null;protected,abstract,comparator,t,get,mapping,comparator,server,web,exchange,exchange
AbstractHandlerMethodMapping -> protected abstract Comparator<T> getMappingComparator(ServerWebExchange exchange)_;1493370460;Return a comparator for sorting matching mappings._The returned comparator should sort 'better' matches higher._@param exchange the current exchange_@return the comparator (never {@code null});protected abstract Comparator<T> getMappingComparator(ServerWebExchange exchange)_;return,a,comparator,for,sorting,matching,mappings,the,returned,comparator,should,sort,better,matches,higher,param,exchange,the,current,exchange,return,the,comparator,never,code,null;protected,abstract,comparator,t,get,mapping,comparator,server,web,exchange,exchange
AbstractHandlerMethodMapping -> protected abstract Comparator<T> getMappingComparator(ServerWebExchange exchange)_;1493391766;Return a comparator for sorting matching mappings._The returned comparator should sort 'better' matches higher._@param exchange the current exchange_@return the comparator (never {@code null});protected abstract Comparator<T> getMappingComparator(ServerWebExchange exchange)_;return,a,comparator,for,sorting,matching,mappings,the,returned,comparator,should,sort,better,matches,higher,param,exchange,the,current,exchange,return,the,comparator,never,code,null;protected,abstract,comparator,t,get,mapping,comparator,server,web,exchange,exchange
AbstractHandlerMethodMapping -> protected abstract Comparator<T> getMappingComparator(ServerWebExchange exchange)_;1493755795;Return a comparator for sorting matching mappings._The returned comparator should sort 'better' matches higher._@param exchange the current exchange_@return the comparator (never {@code null});protected abstract Comparator<T> getMappingComparator(ServerWebExchange exchange)_;return,a,comparator,for,sorting,matching,mappings,the,returned,comparator,should,sort,better,matches,higher,param,exchange,the,current,exchange,return,the,comparator,never,code,null;protected,abstract,comparator,t,get,mapping,comparator,server,web,exchange,exchange
AbstractHandlerMethodMapping -> protected abstract Comparator<T> getMappingComparator(ServerWebExchange exchange)_;1496837955;Return a comparator for sorting matching mappings._The returned comparator should sort 'better' matches higher._@param exchange the current exchange_@return the comparator (never {@code null});protected abstract Comparator<T> getMappingComparator(ServerWebExchange exchange)_;return,a,comparator,for,sorting,matching,mappings,the,returned,comparator,should,sort,better,matches,higher,param,exchange,the,current,exchange,return,the,comparator,never,code,null;protected,abstract,comparator,t,get,mapping,comparator,server,web,exchange,exchange
AbstractHandlerMethodMapping -> protected abstract Comparator<T> getMappingComparator(ServerWebExchange exchange)_;1497039338;Return a comparator for sorting matching mappings._The returned comparator should sort 'better' matches higher._@param exchange the current exchange_@return the comparator (never {@code null});protected abstract Comparator<T> getMappingComparator(ServerWebExchange exchange)_;return,a,comparator,for,sorting,matching,mappings,the,returned,comparator,should,sort,better,matches,higher,param,exchange,the,current,exchange,return,the,comparator,never,code,null;protected,abstract,comparator,t,get,mapping,comparator,server,web,exchange,exchange
AbstractHandlerMethodMapping -> protected abstract Comparator<T> getMappingComparator(ServerWebExchange exchange)_;1497232764;Return a comparator for sorting matching mappings._The returned comparator should sort 'better' matches higher._@param exchange the current exchange_@return the comparator (never {@code null});protected abstract Comparator<T> getMappingComparator(ServerWebExchange exchange)_;return,a,comparator,for,sorting,matching,mappings,the,returned,comparator,should,sort,better,matches,higher,param,exchange,the,current,exchange,return,the,comparator,never,code,null;protected,abstract,comparator,t,get,mapping,comparator,server,web,exchange,exchange
AbstractHandlerMethodMapping -> protected abstract Comparator<T> getMappingComparator(ServerWebExchange exchange)_;1497251962;Return a comparator for sorting matching mappings._The returned comparator should sort 'better' matches higher._@param exchange the current exchange_@return the comparator (never {@code null});protected abstract Comparator<T> getMappingComparator(ServerWebExchange exchange)_;return,a,comparator,for,sorting,matching,mappings,the,returned,comparator,should,sort,better,matches,higher,param,exchange,the,current,exchange,return,the,comparator,never,code,null;protected,abstract,comparator,t,get,mapping,comparator,server,web,exchange,exchange
AbstractHandlerMethodMapping -> protected abstract Comparator<T> getMappingComparator(ServerWebExchange exchange)_;1497286385;Return a comparator for sorting matching mappings._The returned comparator should sort 'better' matches higher._@param exchange the current exchange_@return the comparator (never {@code null});protected abstract Comparator<T> getMappingComparator(ServerWebExchange exchange)_;return,a,comparator,for,sorting,matching,mappings,the,returned,comparator,should,sort,better,matches,higher,param,exchange,the,current,exchange,return,the,comparator,never,code,null;protected,abstract,comparator,t,get,mapping,comparator,server,web,exchange,exchange
AbstractHandlerMethodMapping -> protected abstract Comparator<T> getMappingComparator(ServerWebExchange exchange)_;1498756719;Return a comparator for sorting matching mappings._The returned comparator should sort 'better' matches higher._@param exchange the current exchange_@return the comparator (never {@code null});protected abstract Comparator<T> getMappingComparator(ServerWebExchange exchange)_;return,a,comparator,for,sorting,matching,mappings,the,returned,comparator,should,sort,better,matches,higher,param,exchange,the,current,exchange,return,the,comparator,never,code,null;protected,abstract,comparator,t,get,mapping,comparator,server,web,exchange,exchange
AbstractHandlerMethodMapping -> protected abstract Comparator<T> getMappingComparator(ServerWebExchange exchange)_;1498861175;Return a comparator for sorting matching mappings._The returned comparator should sort 'better' matches higher._@param exchange the current exchange_@return the comparator (never {@code null});protected abstract Comparator<T> getMappingComparator(ServerWebExchange exchange)_;return,a,comparator,for,sorting,matching,mappings,the,returned,comparator,should,sort,better,matches,higher,param,exchange,the,current,exchange,return,the,comparator,never,code,null;protected,abstract,comparator,t,get,mapping,comparator,server,web,exchange,exchange
AbstractHandlerMethodMapping -> protected abstract Comparator<T> getMappingComparator(ServerWebExchange exchange)_;1498953917;Return a comparator for sorting matching mappings._The returned comparator should sort 'better' matches higher._@param exchange the current exchange_@return the comparator (never {@code null});protected abstract Comparator<T> getMappingComparator(ServerWebExchange exchange)_;return,a,comparator,for,sorting,matching,mappings,the,returned,comparator,should,sort,better,matches,higher,param,exchange,the,current,exchange,return,the,comparator,never,code,null;protected,abstract,comparator,t,get,mapping,comparator,server,web,exchange,exchange
AbstractHandlerMethodMapping -> protected abstract Comparator<T> getMappingComparator(ServerWebExchange exchange)_;1516617801;Return a comparator for sorting matching mappings._The returned comparator should sort 'better' matches higher._@param exchange the current exchange_@return the comparator (never {@code null});protected abstract Comparator<T> getMappingComparator(ServerWebExchange exchange)_;return,a,comparator,for,sorting,matching,mappings,the,returned,comparator,should,sort,better,matches,higher,param,exchange,the,current,exchange,return,the,comparator,never,code,null;protected,abstract,comparator,t,get,mapping,comparator,server,web,exchange,exchange
AbstractHandlerMethodMapping -> protected abstract Comparator<T> getMappingComparator(ServerWebExchange exchange)_;1529721864;Return a comparator for sorting matching mappings._The returned comparator should sort 'better' matches higher._@param exchange the current exchange_@return the comparator (never {@code null});protected abstract Comparator<T> getMappingComparator(ServerWebExchange exchange)_;return,a,comparator,for,sorting,matching,mappings,the,returned,comparator,should,sort,better,matches,higher,param,exchange,the,current,exchange,return,the,comparator,never,code,null;protected,abstract,comparator,t,get,mapping,comparator,server,web,exchange,exchange
AbstractHandlerMethodMapping -> protected abstract Comparator<T> getMappingComparator(ServerWebExchange exchange)_;1530174524;Return a comparator for sorting matching mappings._The returned comparator should sort 'better' matches higher._@param exchange the current exchange_@return the comparator (never {@code null});protected abstract Comparator<T> getMappingComparator(ServerWebExchange exchange)_;return,a,comparator,for,sorting,matching,mappings,the,returned,comparator,should,sort,better,matches,higher,param,exchange,the,current,exchange,return,the,comparator,never,code,null;protected,abstract,comparator,t,get,mapping,comparator,server,web,exchange,exchange
AbstractHandlerMethodMapping -> protected abstract Comparator<T> getMappingComparator(ServerWebExchange exchange)_;1530793633;Return a comparator for sorting matching mappings._The returned comparator should sort 'better' matches higher._@param exchange the current exchange_@return the comparator (never {@code null});protected abstract Comparator<T> getMappingComparator(ServerWebExchange exchange)_;return,a,comparator,for,sorting,matching,mappings,the,returned,comparator,should,sort,better,matches,higher,param,exchange,the,current,exchange,return,the,comparator,never,code,null;protected,abstract,comparator,t,get,mapping,comparator,server,web,exchange,exchange
AbstractHandlerMethodMapping -> protected abstract Comparator<T> getMappingComparator(ServerWebExchange exchange)_;1542407418;Return a comparator for sorting matching mappings._The returned comparator should sort 'better' matches higher._@param exchange the current exchange_@return the comparator (never {@code null});protected abstract Comparator<T> getMappingComparator(ServerWebExchange exchange)_;return,a,comparator,for,sorting,matching,mappings,the,returned,comparator,should,sort,better,matches,higher,param,exchange,the,current,exchange,return,the,comparator,never,code,null;protected,abstract,comparator,t,get,mapping,comparator,server,web,exchange,exchange
AbstractHandlerMethodMapping -> protected abstract Comparator<T> getMappingComparator(ServerWebExchange exchange)_;1548427561;Return a comparator for sorting matching mappings._The returned comparator should sort 'better' matches higher._@param exchange the current exchange_@return the comparator (never {@code null});protected abstract Comparator<T> getMappingComparator(ServerWebExchange exchange)_;return,a,comparator,for,sorting,matching,mappings,the,returned,comparator,should,sort,better,matches,higher,param,exchange,the,current,exchange,return,the,comparator,never,code,null;protected,abstract,comparator,t,get,mapping,comparator,server,web,exchange,exchange
AbstractHandlerMethodMapping -> protected abstract Comparator<T> getMappingComparator(ServerWebExchange exchange)_;1551093473;Return a comparator for sorting matching mappings._The returned comparator should sort 'better' matches higher._@param exchange the current exchange_@return the comparator (never {@code null});protected abstract Comparator<T> getMappingComparator(ServerWebExchange exchange)_;return,a,comparator,for,sorting,matching,mappings,the,returned,comparator,should,sort,better,matches,higher,param,exchange,the,current,exchange,return,the,comparator,never,code,null;protected,abstract,comparator,t,get,mapping,comparator,server,web,exchange,exchange
AbstractHandlerMethodMapping -> @Nullable 	protected HandlerMethod lookupHandlerMethod(String lookupPath, ServerWebExchange exchange) 			throws Exception;1495868221;Look up the best-matching handler method for the current request._If multiple matches are found, the best match is selected._@param lookupPath mapping lookup path within the current servlet mapping_@param exchange the current exchange_@return the best-matching handler method, or {@code null} if no match_@see #handleMatch(Object, String,  ServerWebExchange)_@see #handleNoMatch(Set, String, ServerWebExchange);@Nullable_	protected HandlerMethod lookupHandlerMethod(String lookupPath, ServerWebExchange exchange)_			throws Exception {__		List<Match> matches = new ArrayList<Match>()__		List<T> directPathMatches = this.mappingRegistry.getMappingsByUrl(lookupPath)__		if (directPathMatches != null) {_			addMatchingMappings(directPathMatches, matches, exchange)__		}_		if (matches.isEmpty()) {_			_			addMatchingMappings(this.mappingRegistry.getMappings().keySet(), matches, exchange)__		}__		if (!matches.isEmpty()) {_			Comparator<Match> comparator = new MatchComparator(getMappingComparator(exchange))__			Collections.sort(matches, comparator)__			if (logger.isTraceEnabled()) {_				logger.trace("Found " + matches.size() + " matching mapping(s) for [" +_						lookupPath + "] : " + matches)__			}_			Match bestMatch = matches.get(0)__			if (matches.size() > 1) {_				if (CorsUtils.isPreFlightRequest(exchange.getRequest())) {_					return PREFLIGHT_AMBIGUOUS_MATCH__				}_				Match secondBestMatch = matches.get(1)__				if (comparator.compare(bestMatch, secondBestMatch) == 0) {_					Method m1 = bestMatch.handlerMethod.getMethod()__					Method m2 = secondBestMatch.handlerMethod.getMethod()__					throw new IllegalStateException("Ambiguous handler methods mapped for HTTP path '" +_							lookupPath + "': {" + m1 + ", " + m2 + "}")__				}_			}_			handleMatch(bestMatch.mapping, lookupPath, exchange)__			return bestMatch.handlerMethod__		}_		else {_			return handleNoMatch(this.mappingRegistry.getMappings().keySet(), lookupPath, exchange)__		}_	};look,up,the,best,matching,handler,method,for,the,current,request,if,multiple,matches,are,found,the,best,match,is,selected,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,exchange,the,current,exchange,return,the,best,matching,handler,method,or,code,null,if,no,match,see,handle,match,object,string,server,web,exchange,see,handle,no,match,set,string,server,web,exchange;nullable,protected,handler,method,lookup,handler,method,string,lookup,path,server,web,exchange,exchange,throws,exception,list,match,matches,new,array,list,match,list,t,direct,path,matches,this,mapping,registry,get,mappings,by,url,lookup,path,if,direct,path,matches,null,add,matching,mappings,direct,path,matches,matches,exchange,if,matches,is,empty,add,matching,mappings,this,mapping,registry,get,mappings,key,set,matches,exchange,if,matches,is,empty,comparator,match,comparator,new,match,comparator,get,mapping,comparator,exchange,collections,sort,matches,comparator,if,logger,is,trace,enabled,logger,trace,found,matches,size,matching,mapping,s,for,lookup,path,matches,match,best,match,matches,get,0,if,matches,size,1,if,cors,utils,is,pre,flight,request,exchange,get,request,return,match,second,best,match,matches,get,1,if,comparator,compare,best,match,second,best,match,0,method,m1,best,match,handler,method,get,method,method,m2,second,best,match,handler,method,get,method,throw,new,illegal,state,exception,ambiguous,handler,methods,mapped,for,http,path,lookup,path,m1,m2,handle,match,best,match,mapping,lookup,path,exchange,return,best,match,handler,method,else,return,handle,no,match,this,mapping,registry,get,mappings,key,set,lookup,path,exchange
AbstractHandlerMethodMapping -> @Nullable 	protected HandlerMethod lookupHandlerMethod(String lookupPath, ServerWebExchange exchange) 			throws Exception;1497039338;Look up the best-matching handler method for the current request._If multiple matches are found, the best match is selected._@param lookupPath the lookup path within the current mapping_@param exchange the current exchange_@return the best-matching handler method, or {@code null} if no match_@see #handleMatch(Object, String,  ServerWebExchange)_@see #handleNoMatch(Set, String, ServerWebExchange);@Nullable_	protected HandlerMethod lookupHandlerMethod(String lookupPath, ServerWebExchange exchange)_			throws Exception {__		List<Match> matches = new ArrayList<Match>()__		List<T> directPathMatches = this.mappingRegistry.getMappingsByUrl(lookupPath)__		if (directPathMatches != null) {_			addMatchingMappings(directPathMatches, matches, exchange)__		}_		if (matches.isEmpty()) {_			_			addMatchingMappings(this.mappingRegistry.getMappings().keySet(), matches, exchange)__		}__		if (!matches.isEmpty()) {_			Comparator<Match> comparator = new MatchComparator(getMappingComparator(exchange))__			Collections.sort(matches, comparator)__			if (logger.isTraceEnabled()) {_				logger.trace("Found " + matches.size() + " matching mapping(s) for [" +_						lookupPath + "] : " + matches)__			}_			Match bestMatch = matches.get(0)__			if (matches.size() > 1) {_				if (CorsUtils.isPreFlightRequest(exchange.getRequest())) {_					return PREFLIGHT_AMBIGUOUS_MATCH__				}_				Match secondBestMatch = matches.get(1)__				if (comparator.compare(bestMatch, secondBestMatch) == 0) {_					Method m1 = bestMatch.handlerMethod.getMethod()__					Method m2 = secondBestMatch.handlerMethod.getMethod()__					throw new IllegalStateException("Ambiguous handler methods mapped for HTTP path '" +_							lookupPath + "': {" + m1 + ", " + m2 + "}")__				}_			}_			handleMatch(bestMatch.mapping, lookupPath, exchange)__			return bestMatch.handlerMethod__		}_		else {_			return handleNoMatch(this.mappingRegistry.getMappings().keySet(), lookupPath, exchange)__		}_	};look,up,the,best,matching,handler,method,for,the,current,request,if,multiple,matches,are,found,the,best,match,is,selected,param,lookup,path,the,lookup,path,within,the,current,mapping,param,exchange,the,current,exchange,return,the,best,matching,handler,method,or,code,null,if,no,match,see,handle,match,object,string,server,web,exchange,see,handle,no,match,set,string,server,web,exchange;nullable,protected,handler,method,lookup,handler,method,string,lookup,path,server,web,exchange,exchange,throws,exception,list,match,matches,new,array,list,match,list,t,direct,path,matches,this,mapping,registry,get,mappings,by,url,lookup,path,if,direct,path,matches,null,add,matching,mappings,direct,path,matches,matches,exchange,if,matches,is,empty,add,matching,mappings,this,mapping,registry,get,mappings,key,set,matches,exchange,if,matches,is,empty,comparator,match,comparator,new,match,comparator,get,mapping,comparator,exchange,collections,sort,matches,comparator,if,logger,is,trace,enabled,logger,trace,found,matches,size,matching,mapping,s,for,lookup,path,matches,match,best,match,matches,get,0,if,matches,size,1,if,cors,utils,is,pre,flight,request,exchange,get,request,return,match,second,best,match,matches,get,1,if,comparator,compare,best,match,second,best,match,0,method,m1,best,match,handler,method,get,method,method,m2,second,best,match,handler,method,get,method,throw,new,illegal,state,exception,ambiguous,handler,methods,mapped,for,http,path,lookup,path,m1,m2,handle,match,best,match,mapping,lookup,path,exchange,return,best,match,handler,method,else,return,handle,no,match,this,mapping,registry,get,mappings,key,set,lookup,path,exchange
AbstractHandlerMethodMapping -> @Nullable 	protected HandlerMethod lookupHandlerMethod(String lookupPath, ServerWebExchange exchange) 			throws Exception;1497232764;Look up the best-matching handler method for the current request._If multiple matches are found, the best match is selected._@param lookupPath the lookup path within the current mapping_@param exchange the current exchange_@return the best-matching handler method, or {@code null} if no match_@see #handleMatch(Object, String,  ServerWebExchange)_@see #handleNoMatch(Set, String, ServerWebExchange);@Nullable_	protected HandlerMethod lookupHandlerMethod(String lookupPath, ServerWebExchange exchange)_			throws Exception {__		List<Match> matches = new ArrayList<Match>()__		List<T> directPathMatches = this.mappingRegistry.getMappingsByUrl(lookupPath)__		if (directPathMatches != null) {_			addMatchingMappings(directPathMatches, matches, exchange)__		}_		if (matches.isEmpty()) {_			_			addMatchingMappings(this.mappingRegistry.getMappings().keySet(), matches, exchange)__		}__		if (!matches.isEmpty()) {_			Comparator<Match> comparator = new MatchComparator(getMappingComparator(exchange))__			Collections.sort(matches, comparator)__			if (logger.isTraceEnabled()) {_				logger.trace("Found " + matches.size() + " matching mapping(s) for [" +_						lookupPath + "] : " + matches)__			}_			Match bestMatch = matches.get(0)__			if (matches.size() > 1) {_				if (CorsUtils.isPreFlightRequest(exchange.getRequest())) {_					return PREFLIGHT_AMBIGUOUS_MATCH__				}_				Match secondBestMatch = matches.get(1)__				if (comparator.compare(bestMatch, secondBestMatch) == 0) {_					Method m1 = bestMatch.handlerMethod.getMethod()__					Method m2 = secondBestMatch.handlerMethod.getMethod()__					throw new IllegalStateException("Ambiguous handler methods mapped for HTTP path '" +_							lookupPath + "': {" + m1 + ", " + m2 + "}")__				}_			}_			handleMatch(bestMatch.mapping, lookupPath, exchange)__			return bestMatch.handlerMethod__		}_		else {_			return handleNoMatch(this.mappingRegistry.getMappings().keySet(), lookupPath, exchange)__		}_	};look,up,the,best,matching,handler,method,for,the,current,request,if,multiple,matches,are,found,the,best,match,is,selected,param,lookup,path,the,lookup,path,within,the,current,mapping,param,exchange,the,current,exchange,return,the,best,matching,handler,method,or,code,null,if,no,match,see,handle,match,object,string,server,web,exchange,see,handle,no,match,set,string,server,web,exchange;nullable,protected,handler,method,lookup,handler,method,string,lookup,path,server,web,exchange,exchange,throws,exception,list,match,matches,new,array,list,match,list,t,direct,path,matches,this,mapping,registry,get,mappings,by,url,lookup,path,if,direct,path,matches,null,add,matching,mappings,direct,path,matches,matches,exchange,if,matches,is,empty,add,matching,mappings,this,mapping,registry,get,mappings,key,set,matches,exchange,if,matches,is,empty,comparator,match,comparator,new,match,comparator,get,mapping,comparator,exchange,collections,sort,matches,comparator,if,logger,is,trace,enabled,logger,trace,found,matches,size,matching,mapping,s,for,lookup,path,matches,match,best,match,matches,get,0,if,matches,size,1,if,cors,utils,is,pre,flight,request,exchange,get,request,return,match,second,best,match,matches,get,1,if,comparator,compare,best,match,second,best,match,0,method,m1,best,match,handler,method,get,method,method,m2,second,best,match,handler,method,get,method,throw,new,illegal,state,exception,ambiguous,handler,methods,mapped,for,http,path,lookup,path,m1,m2,handle,match,best,match,mapping,lookup,path,exchange,return,best,match,handler,method,else,return,handle,no,match,this,mapping,registry,get,mappings,key,set,lookup,path,exchange
AbstractHandlerMethodMapping -> @Nullable 	protected HandlerMethod lookupHandlerMethod(String lookupPath, ServerWebExchange exchange) 			throws Exception;1497251962;Look up the best-matching handler method for the current request._If multiple matches are found, the best match is selected._@param lookupPath the lookup path within the current mapping_@param exchange the current exchange_@return the best-matching handler method, or {@code null} if no match_@see #handleMatch(Object, String,  ServerWebExchange)_@see #handleNoMatch(Set, String, ServerWebExchange);@Nullable_	protected HandlerMethod lookupHandlerMethod(String lookupPath, ServerWebExchange exchange)_			throws Exception {__		List<Match> matches = new ArrayList<>()__		List<T> directPathMatches = this.mappingRegistry.getMappingsByUrl(lookupPath)__		if (directPathMatches != null) {_			addMatchingMappings(directPathMatches, matches, exchange)__		}_		if (matches.isEmpty()) {_			_			addMatchingMappings(this.mappingRegistry.getMappings().keySet(), matches, exchange)__		}__		if (!matches.isEmpty()) {_			Comparator<Match> comparator = new MatchComparator(getMappingComparator(exchange))__			Collections.sort(matches, comparator)__			if (logger.isTraceEnabled()) {_				logger.trace("Found " + matches.size() + " matching mapping(s) for [" +_						lookupPath + "] : " + matches)__			}_			Match bestMatch = matches.get(0)__			if (matches.size() > 1) {_				if (CorsUtils.isPreFlightRequest(exchange.getRequest())) {_					return PREFLIGHT_AMBIGUOUS_MATCH__				}_				Match secondBestMatch = matches.get(1)__				if (comparator.compare(bestMatch, secondBestMatch) == 0) {_					Method m1 = bestMatch.handlerMethod.getMethod()__					Method m2 = secondBestMatch.handlerMethod.getMethod()__					throw new IllegalStateException("Ambiguous handler methods mapped for HTTP path '" +_							lookupPath + "': {" + m1 + ", " + m2 + "}")__				}_			}_			handleMatch(bestMatch.mapping, lookupPath, exchange)__			return bestMatch.handlerMethod__		}_		else {_			return handleNoMatch(this.mappingRegistry.getMappings().keySet(), lookupPath, exchange)__		}_	};look,up,the,best,matching,handler,method,for,the,current,request,if,multiple,matches,are,found,the,best,match,is,selected,param,lookup,path,the,lookup,path,within,the,current,mapping,param,exchange,the,current,exchange,return,the,best,matching,handler,method,or,code,null,if,no,match,see,handle,match,object,string,server,web,exchange,see,handle,no,match,set,string,server,web,exchange;nullable,protected,handler,method,lookup,handler,method,string,lookup,path,server,web,exchange,exchange,throws,exception,list,match,matches,new,array,list,list,t,direct,path,matches,this,mapping,registry,get,mappings,by,url,lookup,path,if,direct,path,matches,null,add,matching,mappings,direct,path,matches,matches,exchange,if,matches,is,empty,add,matching,mappings,this,mapping,registry,get,mappings,key,set,matches,exchange,if,matches,is,empty,comparator,match,comparator,new,match,comparator,get,mapping,comparator,exchange,collections,sort,matches,comparator,if,logger,is,trace,enabled,logger,trace,found,matches,size,matching,mapping,s,for,lookup,path,matches,match,best,match,matches,get,0,if,matches,size,1,if,cors,utils,is,pre,flight,request,exchange,get,request,return,match,second,best,match,matches,get,1,if,comparator,compare,best,match,second,best,match,0,method,m1,best,match,handler,method,get,method,method,m2,second,best,match,handler,method,get,method,throw,new,illegal,state,exception,ambiguous,handler,methods,mapped,for,http,path,lookup,path,m1,m2,handle,match,best,match,mapping,lookup,path,exchange,return,best,match,handler,method,else,return,handle,no,match,this,mapping,registry,get,mappings,key,set,lookup,path,exchange
AbstractHandlerMethodMapping -> @Nullable 	protected HandlerMethod lookupHandlerMethod(String lookupPath, ServerWebExchange exchange) 			throws Exception;1497286385;Look up the best-matching handler method for the current request._If multiple matches are found, the best match is selected._@param lookupPath the lookup path within the current mapping_@param exchange the current exchange_@return the best-matching handler method, or {@code null} if no match_@see #handleMatch(Object, String, ServerWebExchange)_@see #handleNoMatch(Set, String, ServerWebExchange);@Nullable_	protected HandlerMethod lookupHandlerMethod(String lookupPath, ServerWebExchange exchange)_			throws Exception {__		List<Match> matches = new ArrayList<>()__		addMatchingMappings(this.mappingRegistry.getMappings().keySet(), matches, exchange)___		if (!matches.isEmpty()) {_			Comparator<Match> comparator = new MatchComparator(getMappingComparator(exchange))__			Collections.sort(matches, comparator)__			if (logger.isTraceEnabled()) {_				logger.trace("Found " + matches.size() + " matching mapping(s) for [" +_						lookupPath + "] : " + matches)__			}_			Match bestMatch = matches.get(0)__			if (matches.size() > 1) {_				if (CorsUtils.isPreFlightRequest(exchange.getRequest())) {_					return PREFLIGHT_AMBIGUOUS_MATCH__				}_				Match secondBestMatch = matches.get(1)__				if (comparator.compare(bestMatch, secondBestMatch) == 0) {_					Method m1 = bestMatch.handlerMethod.getMethod()__					Method m2 = secondBestMatch.handlerMethod.getMethod()__					throw new IllegalStateException("Ambiguous handler methods mapped for HTTP path '" +_							lookupPath + "': {" + m1 + ", " + m2 + "}")__				}_			}_			handleMatch(bestMatch.mapping, lookupPath, exchange)__			return bestMatch.handlerMethod__		}_		else {_			return handleNoMatch(this.mappingRegistry.getMappings().keySet(), lookupPath, exchange)__		}_	};look,up,the,best,matching,handler,method,for,the,current,request,if,multiple,matches,are,found,the,best,match,is,selected,param,lookup,path,the,lookup,path,within,the,current,mapping,param,exchange,the,current,exchange,return,the,best,matching,handler,method,or,code,null,if,no,match,see,handle,match,object,string,server,web,exchange,see,handle,no,match,set,string,server,web,exchange;nullable,protected,handler,method,lookup,handler,method,string,lookup,path,server,web,exchange,exchange,throws,exception,list,match,matches,new,array,list,add,matching,mappings,this,mapping,registry,get,mappings,key,set,matches,exchange,if,matches,is,empty,comparator,match,comparator,new,match,comparator,get,mapping,comparator,exchange,collections,sort,matches,comparator,if,logger,is,trace,enabled,logger,trace,found,matches,size,matching,mapping,s,for,lookup,path,matches,match,best,match,matches,get,0,if,matches,size,1,if,cors,utils,is,pre,flight,request,exchange,get,request,return,match,second,best,match,matches,get,1,if,comparator,compare,best,match,second,best,match,0,method,m1,best,match,handler,method,get,method,method,m2,second,best,match,handler,method,get,method,throw,new,illegal,state,exception,ambiguous,handler,methods,mapped,for,http,path,lookup,path,m1,m2,handle,match,best,match,mapping,lookup,path,exchange,return,best,match,handler,method,else,return,handle,no,match,this,mapping,registry,get,mappings,key,set,lookup,path,exchange
AbstractHandlerMethodMapping -> @Nullable 	protected HandlerMethod lookupHandlerMethod(String lookupPath, ServerWebExchange exchange) 			throws Exception;1498756719;Look up the best-matching handler method for the current request._If multiple matches are found, the best match is selected._@param lookupPath the lookup path within the current mapping_@param exchange the current exchange_@return the best-matching handler method, or {@code null} if no match_@see #handleMatch(Object, String, ServerWebExchange)_@see #handleNoMatch(Set, String, ServerWebExchange);@Nullable_	protected HandlerMethod lookupHandlerMethod(String lookupPath, ServerWebExchange exchange)_			throws Exception {__		List<Match> matches = new ArrayList<>()__		addMatchingMappings(this.mappingRegistry.getMappings().keySet(), matches, exchange)___		if (!matches.isEmpty()) {_			Comparator<Match> comparator = new MatchComparator(getMappingComparator(exchange))__			Collections.sort(matches, comparator)__			if (logger.isTraceEnabled()) {_				logger.trace("Found " + matches.size() + " matching mapping(s) for [" +_						lookupPath + "] : " + matches)__			}_			Match bestMatch = matches.get(0)__			if (matches.size() > 1) {_				if (CorsUtils.isPreFlightRequest(exchange.getRequest())) {_					return PREFLIGHT_AMBIGUOUS_MATCH__				}_				Match secondBestMatch = matches.get(1)__				if (comparator.compare(bestMatch, secondBestMatch) == 0) {_					Method m1 = bestMatch.handlerMethod.getMethod()__					Method m2 = secondBestMatch.handlerMethod.getMethod()__					throw new IllegalStateException("Ambiguous handler methods mapped for HTTP path '" +_							lookupPath + "': {" + m1 + ", " + m2 + "}")__				}_			}_			handleMatch(bestMatch.mapping, bestMatch.handlerMethod, lookupPath, exchange)__			return bestMatch.handlerMethod__		}_		else {_			return handleNoMatch(this.mappingRegistry.getMappings().keySet(), lookupPath, exchange)__		}_	};look,up,the,best,matching,handler,method,for,the,current,request,if,multiple,matches,are,found,the,best,match,is,selected,param,lookup,path,the,lookup,path,within,the,current,mapping,param,exchange,the,current,exchange,return,the,best,matching,handler,method,or,code,null,if,no,match,see,handle,match,object,string,server,web,exchange,see,handle,no,match,set,string,server,web,exchange;nullable,protected,handler,method,lookup,handler,method,string,lookup,path,server,web,exchange,exchange,throws,exception,list,match,matches,new,array,list,add,matching,mappings,this,mapping,registry,get,mappings,key,set,matches,exchange,if,matches,is,empty,comparator,match,comparator,new,match,comparator,get,mapping,comparator,exchange,collections,sort,matches,comparator,if,logger,is,trace,enabled,logger,trace,found,matches,size,matching,mapping,s,for,lookup,path,matches,match,best,match,matches,get,0,if,matches,size,1,if,cors,utils,is,pre,flight,request,exchange,get,request,return,match,second,best,match,matches,get,1,if,comparator,compare,best,match,second,best,match,0,method,m1,best,match,handler,method,get,method,method,m2,second,best,match,handler,method,get,method,throw,new,illegal,state,exception,ambiguous,handler,methods,mapped,for,http,path,lookup,path,m1,m2,handle,match,best,match,mapping,best,match,handler,method,lookup,path,exchange,return,best,match,handler,method,else,return,handle,no,match,this,mapping,registry,get,mappings,key,set,lookup,path,exchange
AbstractHandlerMethodMapping -> @Nullable 	protected HandlerMethod lookupHandlerMethod(String lookupPath, ServerWebExchange exchange) 			throws Exception;1498861175;Look up the best-matching handler method for the current request._If multiple matches are found, the best match is selected._@param lookupPath the lookup path within the current mapping_@param exchange the current exchange_@return the best-matching handler method, or {@code null} if no match_@see #handleMatch(Object, HandlerMethod, String, ServerWebExchange)_@see #handleNoMatch(Set, String, ServerWebExchange);@Nullable_	protected HandlerMethod lookupHandlerMethod(String lookupPath, ServerWebExchange exchange)_			throws Exception {__		List<Match> matches = new ArrayList<>()__		addMatchingMappings(this.mappingRegistry.getMappings().keySet(), matches, exchange)___		if (!matches.isEmpty()) {_			Comparator<Match> comparator = new MatchComparator(getMappingComparator(exchange))__			Collections.sort(matches, comparator)__			if (logger.isTraceEnabled()) {_				logger.trace("Found " + matches.size() + " matching mapping(s) for [" +_						lookupPath + "] : " + matches)__			}_			Match bestMatch = matches.get(0)__			if (matches.size() > 1) {_				if (CorsUtils.isPreFlightRequest(exchange.getRequest())) {_					return PREFLIGHT_AMBIGUOUS_MATCH__				}_				Match secondBestMatch = matches.get(1)__				if (comparator.compare(bestMatch, secondBestMatch) == 0) {_					Method m1 = bestMatch.handlerMethod.getMethod()__					Method m2 = secondBestMatch.handlerMethod.getMethod()__					throw new IllegalStateException("Ambiguous handler methods mapped for HTTP path '" +_							lookupPath + "': {" + m1 + ", " + m2 + "}")__				}_			}_			handleMatch(bestMatch.mapping, bestMatch.handlerMethod, lookupPath, exchange)__			return bestMatch.handlerMethod__		}_		else {_			return handleNoMatch(this.mappingRegistry.getMappings().keySet(), lookupPath, exchange)__		}_	};look,up,the,best,matching,handler,method,for,the,current,request,if,multiple,matches,are,found,the,best,match,is,selected,param,lookup,path,the,lookup,path,within,the,current,mapping,param,exchange,the,current,exchange,return,the,best,matching,handler,method,or,code,null,if,no,match,see,handle,match,object,handler,method,string,server,web,exchange,see,handle,no,match,set,string,server,web,exchange;nullable,protected,handler,method,lookup,handler,method,string,lookup,path,server,web,exchange,exchange,throws,exception,list,match,matches,new,array,list,add,matching,mappings,this,mapping,registry,get,mappings,key,set,matches,exchange,if,matches,is,empty,comparator,match,comparator,new,match,comparator,get,mapping,comparator,exchange,collections,sort,matches,comparator,if,logger,is,trace,enabled,logger,trace,found,matches,size,matching,mapping,s,for,lookup,path,matches,match,best,match,matches,get,0,if,matches,size,1,if,cors,utils,is,pre,flight,request,exchange,get,request,return,match,second,best,match,matches,get,1,if,comparator,compare,best,match,second,best,match,0,method,m1,best,match,handler,method,get,method,method,m2,second,best,match,handler,method,get,method,throw,new,illegal,state,exception,ambiguous,handler,methods,mapped,for,http,path,lookup,path,m1,m2,handle,match,best,match,mapping,best,match,handler,method,lookup,path,exchange,return,best,match,handler,method,else,return,handle,no,match,this,mapping,registry,get,mappings,key,set,lookup,path,exchange
AbstractHandlerMethodMapping -> @Override 	public void afterPropertiesSet();1485986572;Detects handler methods at initialization.;@Override_	public void afterPropertiesSet() {_		initHandlerMethods()__	};detects,handler,methods,at,initialization;override,public,void,after,properties,set,init,handler,methods
AbstractHandlerMethodMapping -> @Override 	public void afterPropertiesSet();1486635693;Detects handler methods at initialization.;@Override_	public void afterPropertiesSet() {_		initHandlerMethods()__	};detects,handler,methods,at,initialization;override,public,void,after,properties,set,init,handler,methods
AbstractHandlerMethodMapping -> @Override 	public void afterPropertiesSet();1486674586;Detects handler methods at initialization.;@Override_	public void afterPropertiesSet() {_		initHandlerMethods()__	};detects,handler,methods,at,initialization;override,public,void,after,properties,set,init,handler,methods
AbstractHandlerMethodMapping -> @Override 	public void afterPropertiesSet();1486747801;Detects handler methods at initialization.;@Override_	public void afterPropertiesSet() {_		initHandlerMethods()__	};detects,handler,methods,at,initialization;override,public,void,after,properties,set,init,handler,methods
AbstractHandlerMethodMapping -> @Override 	public void afterPropertiesSet();1489852683;Detects handler methods at initialization.;@Override_	public void afterPropertiesSet() {_		initHandlerMethods()__	};detects,handler,methods,at,initialization;override,public,void,after,properties,set,init,handler,methods
AbstractHandlerMethodMapping -> @Override 	public void afterPropertiesSet();1492542679;Detects handler methods at initialization.;@Override_	public void afterPropertiesSet() {_		initHandlerMethods()__	};detects,handler,methods,at,initialization;override,public,void,after,properties,set,init,handler,methods
AbstractHandlerMethodMapping -> @Override 	public void afterPropertiesSet();1493370460;Detects handler methods at initialization.;@Override_	public void afterPropertiesSet() {_		initHandlerMethods()__	};detects,handler,methods,at,initialization;override,public,void,after,properties,set,init,handler,methods
AbstractHandlerMethodMapping -> @Override 	public void afterPropertiesSet();1493391766;Detects handler methods at initialization.;@Override_	public void afterPropertiesSet() {_		initHandlerMethods()__	};detects,handler,methods,at,initialization;override,public,void,after,properties,set,init,handler,methods
AbstractHandlerMethodMapping -> @Override 	public void afterPropertiesSet();1493755795;Detects handler methods at initialization.;@Override_	public void afterPropertiesSet() {_		initHandlerMethods()__	};detects,handler,methods,at,initialization;override,public,void,after,properties,set,init,handler,methods
AbstractHandlerMethodMapping -> @Override 	public void afterPropertiesSet();1495868221;Detects handler methods at initialization.;@Override_	public void afterPropertiesSet() {_		initHandlerMethods()__	};detects,handler,methods,at,initialization;override,public,void,after,properties,set,init,handler,methods
AbstractHandlerMethodMapping -> @Override 	public void afterPropertiesSet();1496334664;Detects handler methods at initialization.;@Override_	public void afterPropertiesSet() {_		initHandlerMethods()__	};detects,handler,methods,at,initialization;override,public,void,after,properties,set,init,handler,methods
AbstractHandlerMethodMapping -> @Override 	public void afterPropertiesSet();1496430942;Detects handler methods at initialization.;@Override_	public void afterPropertiesSet() {_		initHandlerMethods()__	};detects,handler,methods,at,initialization;override,public,void,after,properties,set,init,handler,methods
AbstractHandlerMethodMapping -> @Override 	public void afterPropertiesSet();1496837955;Detects handler methods at initialization.;@Override_	public void afterPropertiesSet() {_		initHandlerMethods()__	};detects,handler,methods,at,initialization;override,public,void,after,properties,set,init,handler,methods
AbstractHandlerMethodMapping -> @Override 	public void afterPropertiesSet();1497039338;Detects handler methods at initialization.;@Override_	public void afterPropertiesSet() {_		initHandlerMethods()__	};detects,handler,methods,at,initialization;override,public,void,after,properties,set,init,handler,methods
AbstractHandlerMethodMapping -> @Override 	public void afterPropertiesSet();1497232764;Detects handler methods at initialization.;@Override_	public void afterPropertiesSet() {_		initHandlerMethods()__	};detects,handler,methods,at,initialization;override,public,void,after,properties,set,init,handler,methods
AbstractHandlerMethodMapping -> @Override 	public void afterPropertiesSet();1497251962;Detects handler methods at initialization.;@Override_	public void afterPropertiesSet() {_		initHandlerMethods()__	};detects,handler,methods,at,initialization;override,public,void,after,properties,set,init,handler,methods
AbstractHandlerMethodMapping -> @Override 	public void afterPropertiesSet();1497286385;Detects handler methods at initialization.;@Override_	public void afterPropertiesSet() {_		initHandlerMethods()__	};detects,handler,methods,at,initialization;override,public,void,after,properties,set,init,handler,methods
AbstractHandlerMethodMapping -> @Override 	public void afterPropertiesSet();1498756719;Detects handler methods at initialization.;@Override_	public void afterPropertiesSet() {_		initHandlerMethods()__	};detects,handler,methods,at,initialization;override,public,void,after,properties,set,init,handler,methods
AbstractHandlerMethodMapping -> @Override 	public void afterPropertiesSet();1498861175;Detects handler methods at initialization.;@Override_	public void afterPropertiesSet() {_		initHandlerMethods()__	};detects,handler,methods,at,initialization;override,public,void,after,properties,set,init,handler,methods
AbstractHandlerMethodMapping -> @Override 	public void afterPropertiesSet();1498953917;Detects handler methods at initialization.;@Override_	public void afterPropertiesSet() {_		initHandlerMethods()__	};detects,handler,methods,at,initialization;override,public,void,after,properties,set,init,handler,methods
AbstractHandlerMethodMapping -> @Override 	public void afterPropertiesSet();1516617801;Detects handler methods at initialization.;@Override_	public void afterPropertiesSet() {_		initHandlerMethods()__	};detects,handler,methods,at,initialization;override,public,void,after,properties,set,init,handler,methods
AbstractHandlerMethodMapping -> @Override 	public void afterPropertiesSet();1529721864;Detects handler methods at initialization.;@Override_	public void afterPropertiesSet() {__		initHandlerMethods()___		_		int total = this.getHandlerMethods().size()___		if ((logger.isTraceEnabled() && total == 0) || (logger.isDebugEnabled() && total > 0) ) {_			logger.debug(total + " mappings in " + formatMappingName())__		}_	};detects,handler,methods,at,initialization;override,public,void,after,properties,set,init,handler,methods,int,total,this,get,handler,methods,size,if,logger,is,trace,enabled,total,0,logger,is,debug,enabled,total,0,logger,debug,total,mappings,in,format,mapping,name
AbstractHandlerMethodMapping -> @Override 	public void afterPropertiesSet();1530174524;Detects handler methods at initialization.;@Override_	public void afterPropertiesSet() {__		initHandlerMethods()___		_		int total = this.getHandlerMethods().size()___		if ((logger.isTraceEnabled() && total == 0) || (logger.isDebugEnabled() && total > 0) ) {_			logger.debug(total + " mappings in " + formatMappingName())__		}_	};detects,handler,methods,at,initialization;override,public,void,after,properties,set,init,handler,methods,int,total,this,get,handler,methods,size,if,logger,is,trace,enabled,total,0,logger,is,debug,enabled,total,0,logger,debug,total,mappings,in,format,mapping,name
AbstractHandlerMethodMapping -> @Override 	public void afterPropertiesSet();1530793633;Detects handler methods at initialization.;@Override_	public void afterPropertiesSet() {__		initHandlerMethods()___		_		int total = this.getHandlerMethods().size()___		if ((logger.isTraceEnabled() && total == 0) || (logger.isDebugEnabled() && total > 0) ) {_			logger.debug(total + " mappings in " + formatMappingName())__		}_	};detects,handler,methods,at,initialization;override,public,void,after,properties,set,init,handler,methods,int,total,this,get,handler,methods,size,if,logger,is,trace,enabled,total,0,logger,is,debug,enabled,total,0,logger,debug,total,mappings,in,format,mapping,name
AbstractHandlerMethodMapping -> @Override 	public void afterPropertiesSet();1542407418;Detects handler methods at initialization.;@Override_	public void afterPropertiesSet() {__		initHandlerMethods()___		_		int total = this.getHandlerMethods().size()___		if ((logger.isTraceEnabled() && total == 0) || (logger.isDebugEnabled() && total > 0) ) {_			logger.debug(total + " mappings in " + formatMappingName())__		}_	};detects,handler,methods,at,initialization;override,public,void,after,properties,set,init,handler,methods,int,total,this,get,handler,methods,size,if,logger,is,trace,enabled,total,0,logger,is,debug,enabled,total,0,logger,debug,total,mappings,in,format,mapping,name
AbstractHandlerMethodMapping -> @Override 	public void afterPropertiesSet();1548427561;Detects handler methods at initialization.;@Override_	public void afterPropertiesSet() {__		initHandlerMethods()___		_		int total = this.getHandlerMethods().size()___		if ((logger.isTraceEnabled() && total == 0) || (logger.isDebugEnabled() && total > 0) ) {_			logger.debug(total + " mappings in " + formatMappingName())__		}_	};detects,handler,methods,at,initialization;override,public,void,after,properties,set,init,handler,methods,int,total,this,get,handler,methods,size,if,logger,is,trace,enabled,total,0,logger,is,debug,enabled,total,0,logger,debug,total,mappings,in,format,mapping,name
AbstractHandlerMethodMapping -> @Override 	public void afterPropertiesSet();1551093473;Detects handler methods at initialization.;@Override_	public void afterPropertiesSet() {__		initHandlerMethods()___		_		int total = this.getHandlerMethods().size()___		if ((logger.isTraceEnabled() && total == 0) || (logger.isDebugEnabled() && total > 0) ) {_			logger.debug(total + " mappings in " + formatMappingName())__		}_	};detects,handler,methods,at,initialization;override,public,void,after,properties,set,init,handler,methods,int,total,this,get,handler,methods,size,if,logger,is,trace,enabled,total,0,logger,is,debug,enabled,total,0,logger,debug,total,mappings,in,format,mapping,name
AbstractHandlerMethodMapping -> MappingRegistry -> public void acquireReadLock();1485986572;Acquire the read lock when using getMappings and getMappingsByUrl.;public void acquireReadLock() {_			this.readWriteLock.readLock().lock()__		};acquire,the,read,lock,when,using,get,mappings,and,get,mappings,by,url;public,void,acquire,read,lock,this,read,write,lock,read,lock,lock
AbstractHandlerMethodMapping -> MappingRegistry -> public void acquireReadLock();1486747801;Acquire the read lock when using getMappings and getMappingsByUrl.;public void acquireReadLock() {_			this.readWriteLock.readLock().lock()__		};acquire,the,read,lock,when,using,get,mappings,and,get,mappings,by,url;public,void,acquire,read,lock,this,read,write,lock,read,lock,lock
AbstractHandlerMethodMapping -> MappingRegistry -> public void acquireReadLock();1489852683;Acquire the read lock when using getMappings and getMappingsByUrl.;public void acquireReadLock() {_			this.readWriteLock.readLock().lock()__		};acquire,the,read,lock,when,using,get,mappings,and,get,mappings,by,url;public,void,acquire,read,lock,this,read,write,lock,read,lock,lock
AbstractHandlerMethodMapping -> MappingRegistry -> public void acquireReadLock();1492542679;Acquire the read lock when using getMappings and getMappingsByUrl.;public void acquireReadLock() {_			this.readWriteLock.readLock().lock()__		};acquire,the,read,lock,when,using,get,mappings,and,get,mappings,by,url;public,void,acquire,read,lock,this,read,write,lock,read,lock,lock
AbstractHandlerMethodMapping -> MappingRegistry -> public void acquireReadLock();1493370460;Acquire the read lock when using getMappings and getMappingsByUrl.;public void acquireReadLock() {_			this.readWriteLock.readLock().lock()__		};acquire,the,read,lock,when,using,get,mappings,and,get,mappings,by,url;public,void,acquire,read,lock,this,read,write,lock,read,lock,lock
AbstractHandlerMethodMapping -> MappingRegistry -> public void acquireReadLock();1493391766;Acquire the read lock when using getMappings and getMappingsByUrl.;public void acquireReadLock() {_			this.readWriteLock.readLock().lock()__		};acquire,the,read,lock,when,using,get,mappings,and,get,mappings,by,url;public,void,acquire,read,lock,this,read,write,lock,read,lock,lock
AbstractHandlerMethodMapping -> MappingRegistry -> public void acquireReadLock();1493755795;Acquire the read lock when using getMappings and getMappingsByUrl.;public void acquireReadLock() {_			this.readWriteLock.readLock().lock()__		};acquire,the,read,lock,when,using,get,mappings,and,get,mappings,by,url;public,void,acquire,read,lock,this,read,write,lock,read,lock,lock
AbstractHandlerMethodMapping -> MappingRegistry -> public void acquireReadLock();1495868221;Acquire the read lock when using getMappings and getMappingsByUrl.;public void acquireReadLock() {_			this.readWriteLock.readLock().lock()__		};acquire,the,read,lock,when,using,get,mappings,and,get,mappings,by,url;public,void,acquire,read,lock,this,read,write,lock,read,lock,lock
AbstractHandlerMethodMapping -> MappingRegistry -> public void acquireReadLock();1496334664;Acquire the read lock when using getMappings and getMappingsByUrl.;public void acquireReadLock() {_			this.readWriteLock.readLock().lock()__		};acquire,the,read,lock,when,using,get,mappings,and,get,mappings,by,url;public,void,acquire,read,lock,this,read,write,lock,read,lock,lock
AbstractHandlerMethodMapping -> MappingRegistry -> public void acquireReadLock();1496430942;Acquire the read lock when using getMappings and getMappingsByUrl.;public void acquireReadLock() {_			this.readWriteLock.readLock().lock()__		};acquire,the,read,lock,when,using,get,mappings,and,get,mappings,by,url;public,void,acquire,read,lock,this,read,write,lock,read,lock,lock
AbstractHandlerMethodMapping -> MappingRegistry -> public void acquireReadLock();1496837955;Acquire the read lock when using getMappings and getMappingsByUrl.;public void acquireReadLock() {_			this.readWriteLock.readLock().lock()__		};acquire,the,read,lock,when,using,get,mappings,and,get,mappings,by,url;public,void,acquire,read,lock,this,read,write,lock,read,lock,lock
AbstractHandlerMethodMapping -> MappingRegistry -> public void acquireReadLock();1497039338;Acquire the read lock when using getMappings and getMappingsByUrl.;public void acquireReadLock() {_			this.readWriteLock.readLock().lock()__		};acquire,the,read,lock,when,using,get,mappings,and,get,mappings,by,url;public,void,acquire,read,lock,this,read,write,lock,read,lock,lock
AbstractHandlerMethodMapping -> MappingRegistry -> public void acquireReadLock();1497232764;Acquire the read lock when using getMappings and getMappingsByUrl.;public void acquireReadLock() {_			this.readWriteLock.readLock().lock()__		};acquire,the,read,lock,when,using,get,mappings,and,get,mappings,by,url;public,void,acquire,read,lock,this,read,write,lock,read,lock,lock
AbstractHandlerMethodMapping -> MappingRegistry -> public void acquireReadLock();1497251962;Acquire the read lock when using getMappings and getMappingsByUrl.;public void acquireReadLock() {_			this.readWriteLock.readLock().lock()__		};acquire,the,read,lock,when,using,get,mappings,and,get,mappings,by,url;public,void,acquire,read,lock,this,read,write,lock,read,lock,lock
AbstractHandlerMethodMapping -> MappingRegistry -> public void acquireReadLock();1497286385;Acquire the read lock when using getMappings and getMappingsByUrl.;public void acquireReadLock() {_			this.readWriteLock.readLock().lock()__		};acquire,the,read,lock,when,using,get,mappings,and,get,mappings,by,url;public,void,acquire,read,lock,this,read,write,lock,read,lock,lock
AbstractHandlerMethodMapping -> MappingRegistry -> public void acquireReadLock();1498756719;Acquire the read lock when using getMappings and getMappingsByUrl.;public void acquireReadLock() {_			this.readWriteLock.readLock().lock()__		};acquire,the,read,lock,when,using,get,mappings,and,get,mappings,by,url;public,void,acquire,read,lock,this,read,write,lock,read,lock,lock
AbstractHandlerMethodMapping -> MappingRegistry -> public void acquireReadLock();1498861175;Acquire the read lock when using getMappings and getMappingsByUrl.;public void acquireReadLock() {_			this.readWriteLock.readLock().lock()__		};acquire,the,read,lock,when,using,get,mappings,and,get,mappings,by,url;public,void,acquire,read,lock,this,read,write,lock,read,lock,lock
AbstractHandlerMethodMapping -> MappingRegistry -> public void acquireReadLock();1498953917;Acquire the read lock when using getMappings and getMappingsByUrl.;public void acquireReadLock() {_			this.readWriteLock.readLock().lock()__		};acquire,the,read,lock,when,using,get,mappings,and,get,mappings,by,url;public,void,acquire,read,lock,this,read,write,lock,read,lock,lock
AbstractHandlerMethodMapping -> MappingRegistry -> public void acquireReadLock();1516617801;Acquire the read lock when using getMappings and getMappingsByUrl.;public void acquireReadLock() {_			this.readWriteLock.readLock().lock()__		};acquire,the,read,lock,when,using,get,mappings,and,get,mappings,by,url;public,void,acquire,read,lock,this,read,write,lock,read,lock,lock
AbstractHandlerMethodMapping -> MappingRegistry -> public void acquireReadLock();1529721864;Acquire the read lock when using getMappings and getMappingsByUrl.;public void acquireReadLock() {_			this.readWriteLock.readLock().lock()__		};acquire,the,read,lock,when,using,get,mappings,and,get,mappings,by,url;public,void,acquire,read,lock,this,read,write,lock,read,lock,lock
AbstractHandlerMethodMapping -> MappingRegistry -> public void acquireReadLock();1530174524;Acquire the read lock when using getMappings and getMappingsByUrl.;public void acquireReadLock() {_			this.readWriteLock.readLock().lock()__		};acquire,the,read,lock,when,using,get,mappings,and,get,mappings,by,url;public,void,acquire,read,lock,this,read,write,lock,read,lock,lock
AbstractHandlerMethodMapping -> MappingRegistry -> public void acquireReadLock();1530793633;Acquire the read lock when using getMappings and getMappingsByUrl.;public void acquireReadLock() {_			this.readWriteLock.readLock().lock()__		};acquire,the,read,lock,when,using,get,mappings,and,get,mappings,by,url;public,void,acquire,read,lock,this,read,write,lock,read,lock,lock
AbstractHandlerMethodMapping -> MappingRegistry -> public void acquireReadLock();1542407418;Acquire the read lock when using getMappings and getMappingsByUrl.;public void acquireReadLock() {_			this.readWriteLock.readLock().lock()__		};acquire,the,read,lock,when,using,get,mappings,and,get,mappings,by,url;public,void,acquire,read,lock,this,read,write,lock,read,lock,lock
AbstractHandlerMethodMapping -> MappingRegistry -> public void acquireReadLock();1548427561;Acquire the read lock when using getMappings and getMappingsByUrl.;public void acquireReadLock() {_			this.readWriteLock.readLock().lock()__		};acquire,the,read,lock,when,using,get,mappings,and,get,mappings,by,url;public,void,acquire,read,lock,this,read,write,lock,read,lock,lock
AbstractHandlerMethodMapping -> MappingRegistry -> public void acquireReadLock();1551093473;Acquire the read lock when using getMappings and getMappingsByUrl.;public void acquireReadLock() {_			this.readWriteLock.readLock().lock()__		};acquire,the,read,lock,when,using,get,mappings,and,get,mappings,by,url;public,void,acquire,read,lock,this,read,write,lock,read,lock,lock
AbstractHandlerMethodMapping -> @Nullable 	protected HandlerMethod lookupHandlerMethod(ServerWebExchange exchange) throws Exception;1516617801;Look up the best-matching handler method for the current request._If multiple matches are found, the best match is selected._@param exchange the current exchange_@return the best-matching handler method, or {@code null} if no match_@see #handleMatch_@see #handleNoMatch;@Nullable_	protected HandlerMethod lookupHandlerMethod(ServerWebExchange exchange) throws Exception {_		List<Match> matches = new ArrayList<>()__		addMatchingMappings(this.mappingRegistry.getMappings().keySet(), matches, exchange)___		if (!matches.isEmpty()) {_			Comparator<Match> comparator = new MatchComparator(getMappingComparator(exchange))__			matches.sort(comparator)__			if (logger.isTraceEnabled()) {_				logger.trace("Found " + matches.size() + " matching mapping(s) for [" +_						exchange.getRequest().getPath() + "] : " + matches)__			}_			Match bestMatch = matches.get(0)__			if (matches.size() > 1) {_				if (CorsUtils.isPreFlightRequest(exchange.getRequest())) {_					return PREFLIGHT_AMBIGUOUS_MATCH__				}_				Match secondBestMatch = matches.get(1)__				if (comparator.compare(bestMatch, secondBestMatch) == 0) {_					Method m1 = bestMatch.handlerMethod.getMethod()__					Method m2 = secondBestMatch.handlerMethod.getMethod()__					throw new IllegalStateException("Ambiguous handler methods mapped for HTTP path '" +_							exchange.getRequest().getPath() + "': {" + m1 + ", " + m2 + "}")__				}_			}_			handleMatch(bestMatch.mapping, bestMatch.handlerMethod, exchange)__			return bestMatch.handlerMethod__		}_		else {_			return handleNoMatch(this.mappingRegistry.getMappings().keySet(), exchange)__		}_	};look,up,the,best,matching,handler,method,for,the,current,request,if,multiple,matches,are,found,the,best,match,is,selected,param,exchange,the,current,exchange,return,the,best,matching,handler,method,or,code,null,if,no,match,see,handle,match,see,handle,no,match;nullable,protected,handler,method,lookup,handler,method,server,web,exchange,exchange,throws,exception,list,match,matches,new,array,list,add,matching,mappings,this,mapping,registry,get,mappings,key,set,matches,exchange,if,matches,is,empty,comparator,match,comparator,new,match,comparator,get,mapping,comparator,exchange,matches,sort,comparator,if,logger,is,trace,enabled,logger,trace,found,matches,size,matching,mapping,s,for,exchange,get,request,get,path,matches,match,best,match,matches,get,0,if,matches,size,1,if,cors,utils,is,pre,flight,request,exchange,get,request,return,match,second,best,match,matches,get,1,if,comparator,compare,best,match,second,best,match,0,method,m1,best,match,handler,method,get,method,method,m2,second,best,match,handler,method,get,method,throw,new,illegal,state,exception,ambiguous,handler,methods,mapped,for,http,path,exchange,get,request,get,path,m1,m2,handle,match,best,match,mapping,best,match,handler,method,exchange,return,best,match,handler,method,else,return,handle,no,match,this,mapping,registry,get,mappings,key,set,exchange
AbstractHandlerMethodMapping -> @Nullable 	protected HandlerMethod lookupHandlerMethod(ServerWebExchange exchange) throws Exception;1529721864;Look up the best-matching handler method for the current request._If multiple matches are found, the best match is selected._@param exchange the current exchange_@return the best-matching handler method, or {@code null} if no match_@see #handleMatch_@see #handleNoMatch;@Nullable_	protected HandlerMethod lookupHandlerMethod(ServerWebExchange exchange) throws Exception {_		List<Match> matches = new ArrayList<>()__		addMatchingMappings(this.mappingRegistry.getMappings().keySet(), matches, exchange)___		if (!matches.isEmpty()) {_			Comparator<Match> comparator = new MatchComparator(getMappingComparator(exchange))__			matches.sort(comparator)__			Match bestMatch = matches.get(0)__			if (matches.size() > 1) {_				if (logger.isTraceEnabled()) {_					logger.trace(matches.size() + " matching mappings: " + matches)__				}_				if (CorsUtils.isPreFlightRequest(exchange.getRequest())) {_					return PREFLIGHT_AMBIGUOUS_MATCH__				}_				Match secondBestMatch = matches.get(1)__				if (comparator.compare(bestMatch, secondBestMatch) == 0) {_					Method m1 = bestMatch.handlerMethod.getMethod()__					Method m2 = secondBestMatch.handlerMethod.getMethod()__					RequestPath path = exchange.getRequest().getPath()__					throw new IllegalStateException(_							"Ambiguous handler methods mapped for '" + path + "': {" + m1 + ", " + m2 + "}")__				}_			}_			handleMatch(bestMatch.mapping, bestMatch.handlerMethod, exchange)__			return bestMatch.handlerMethod__		}_		else {_			return handleNoMatch(this.mappingRegistry.getMappings().keySet(), exchange)__		}_	};look,up,the,best,matching,handler,method,for,the,current,request,if,multiple,matches,are,found,the,best,match,is,selected,param,exchange,the,current,exchange,return,the,best,matching,handler,method,or,code,null,if,no,match,see,handle,match,see,handle,no,match;nullable,protected,handler,method,lookup,handler,method,server,web,exchange,exchange,throws,exception,list,match,matches,new,array,list,add,matching,mappings,this,mapping,registry,get,mappings,key,set,matches,exchange,if,matches,is,empty,comparator,match,comparator,new,match,comparator,get,mapping,comparator,exchange,matches,sort,comparator,match,best,match,matches,get,0,if,matches,size,1,if,logger,is,trace,enabled,logger,trace,matches,size,matching,mappings,matches,if,cors,utils,is,pre,flight,request,exchange,get,request,return,match,second,best,match,matches,get,1,if,comparator,compare,best,match,second,best,match,0,method,m1,best,match,handler,method,get,method,method,m2,second,best,match,handler,method,get,method,request,path,path,exchange,get,request,get,path,throw,new,illegal,state,exception,ambiguous,handler,methods,mapped,for,path,m1,m2,handle,match,best,match,mapping,best,match,handler,method,exchange,return,best,match,handler,method,else,return,handle,no,match,this,mapping,registry,get,mappings,key,set,exchange
AbstractHandlerMethodMapping -> @Nullable 	protected HandlerMethod lookupHandlerMethod(ServerWebExchange exchange) throws Exception;1530174524;Look up the best-matching handler method for the current request._If multiple matches are found, the best match is selected._@param exchange the current exchange_@return the best-matching handler method, or {@code null} if no match_@see #handleMatch_@see #handleNoMatch;@Nullable_	protected HandlerMethod lookupHandlerMethod(ServerWebExchange exchange) throws Exception {_		List<Match> matches = new ArrayList<>()__		addMatchingMappings(this.mappingRegistry.getMappings().keySet(), matches, exchange)___		if (!matches.isEmpty()) {_			Comparator<Match> comparator = new MatchComparator(getMappingComparator(exchange))__			matches.sort(comparator)__			Match bestMatch = matches.get(0)__			if (matches.size() > 1) {_				if (logger.isTraceEnabled()) {_					logger.trace(matches.size() + " matching mappings: " + matches)__				}_				if (CorsUtils.isPreFlightRequest(exchange.getRequest())) {_					return PREFLIGHT_AMBIGUOUS_MATCH__				}_				Match secondBestMatch = matches.get(1)__				if (comparator.compare(bestMatch, secondBestMatch) == 0) {_					Method m1 = bestMatch.handlerMethod.getMethod()__					Method m2 = secondBestMatch.handlerMethod.getMethod()__					RequestPath path = exchange.getRequest().getPath()__					throw new IllegalStateException(_							"Ambiguous handler methods mapped for '" + path + "': {" + m1 + ", " + m2 + "}")__				}_			}_			handleMatch(bestMatch.mapping, bestMatch.handlerMethod, exchange)__			return bestMatch.handlerMethod__		}_		else {_			return handleNoMatch(this.mappingRegistry.getMappings().keySet(), exchange)__		}_	};look,up,the,best,matching,handler,method,for,the,current,request,if,multiple,matches,are,found,the,best,match,is,selected,param,exchange,the,current,exchange,return,the,best,matching,handler,method,or,code,null,if,no,match,see,handle,match,see,handle,no,match;nullable,protected,handler,method,lookup,handler,method,server,web,exchange,exchange,throws,exception,list,match,matches,new,array,list,add,matching,mappings,this,mapping,registry,get,mappings,key,set,matches,exchange,if,matches,is,empty,comparator,match,comparator,new,match,comparator,get,mapping,comparator,exchange,matches,sort,comparator,match,best,match,matches,get,0,if,matches,size,1,if,logger,is,trace,enabled,logger,trace,matches,size,matching,mappings,matches,if,cors,utils,is,pre,flight,request,exchange,get,request,return,match,second,best,match,matches,get,1,if,comparator,compare,best,match,second,best,match,0,method,m1,best,match,handler,method,get,method,method,m2,second,best,match,handler,method,get,method,request,path,path,exchange,get,request,get,path,throw,new,illegal,state,exception,ambiguous,handler,methods,mapped,for,path,m1,m2,handle,match,best,match,mapping,best,match,handler,method,exchange,return,best,match,handler,method,else,return,handle,no,match,this,mapping,registry,get,mappings,key,set,exchange
AbstractHandlerMethodMapping -> @Nullable 	protected HandlerMethod lookupHandlerMethod(ServerWebExchange exchange) throws Exception;1530793633;Look up the best-matching handler method for the current request._If multiple matches are found, the best match is selected._@param exchange the current exchange_@return the best-matching handler method, or {@code null} if no match_@see #handleMatch_@see #handleNoMatch;@Nullable_	protected HandlerMethod lookupHandlerMethod(ServerWebExchange exchange) throws Exception {_		List<Match> matches = new ArrayList<>()__		addMatchingMappings(this.mappingRegistry.getMappings().keySet(), matches, exchange)___		if (!matches.isEmpty()) {_			Comparator<Match> comparator = new MatchComparator(getMappingComparator(exchange))__			matches.sort(comparator)__			Match bestMatch = matches.get(0)__			if (matches.size() > 1) {_				if (logger.isTraceEnabled()) {_					logger.trace(exchange.getLogPrefix() + matches.size() + " matching mappings: " + matches)__				}_				if (CorsUtils.isPreFlightRequest(exchange.getRequest())) {_					return PREFLIGHT_AMBIGUOUS_MATCH__				}_				Match secondBestMatch = matches.get(1)__				if (comparator.compare(bestMatch, secondBestMatch) == 0) {_					Method m1 = bestMatch.handlerMethod.getMethod()__					Method m2 = secondBestMatch.handlerMethod.getMethod()__					RequestPath path = exchange.getRequest().getPath()__					throw new IllegalStateException(_							"Ambiguous handler methods mapped for '" + path + "': {" + m1 + ", " + m2 + "}")__				}_			}_			handleMatch(bestMatch.mapping, bestMatch.handlerMethod, exchange)__			return bestMatch.handlerMethod__		}_		else {_			return handleNoMatch(this.mappingRegistry.getMappings().keySet(), exchange)__		}_	};look,up,the,best,matching,handler,method,for,the,current,request,if,multiple,matches,are,found,the,best,match,is,selected,param,exchange,the,current,exchange,return,the,best,matching,handler,method,or,code,null,if,no,match,see,handle,match,see,handle,no,match;nullable,protected,handler,method,lookup,handler,method,server,web,exchange,exchange,throws,exception,list,match,matches,new,array,list,add,matching,mappings,this,mapping,registry,get,mappings,key,set,matches,exchange,if,matches,is,empty,comparator,match,comparator,new,match,comparator,get,mapping,comparator,exchange,matches,sort,comparator,match,best,match,matches,get,0,if,matches,size,1,if,logger,is,trace,enabled,logger,trace,exchange,get,log,prefix,matches,size,matching,mappings,matches,if,cors,utils,is,pre,flight,request,exchange,get,request,return,match,second,best,match,matches,get,1,if,comparator,compare,best,match,second,best,match,0,method,m1,best,match,handler,method,get,method,method,m2,second,best,match,handler,method,get,method,request,path,path,exchange,get,request,get,path,throw,new,illegal,state,exception,ambiguous,handler,methods,mapped,for,path,m1,m2,handle,match,best,match,mapping,best,match,handler,method,exchange,return,best,match,handler,method,else,return,handle,no,match,this,mapping,registry,get,mappings,key,set,exchange
AbstractHandlerMethodMapping -> @Nullable 	protected HandlerMethod lookupHandlerMethod(ServerWebExchange exchange) throws Exception;1542407418;Look up the best-matching handler method for the current request._If multiple matches are found, the best match is selected._@param exchange the current exchange_@return the best-matching handler method, or {@code null} if no match_@see #handleMatch_@see #handleNoMatch;@Nullable_	protected HandlerMethod lookupHandlerMethod(ServerWebExchange exchange) throws Exception {_		List<Match> matches = new ArrayList<>()__		addMatchingMappings(this.mappingRegistry.getMappings().keySet(), matches, exchange)___		if (!matches.isEmpty()) {_			Comparator<Match> comparator = new MatchComparator(getMappingComparator(exchange))__			matches.sort(comparator)__			Match bestMatch = matches.get(0)__			if (matches.size() > 1) {_				if (logger.isTraceEnabled()) {_					logger.trace(exchange.getLogPrefix() + matches.size() + " matching mappings: " + matches)__				}_				if (CorsUtils.isPreFlightRequest(exchange.getRequest())) {_					return PREFLIGHT_AMBIGUOUS_MATCH__				}_				Match secondBestMatch = matches.get(1)__				if (comparator.compare(bestMatch, secondBestMatch) == 0) {_					Method m1 = bestMatch.handlerMethod.getMethod()__					Method m2 = secondBestMatch.handlerMethod.getMethod()__					RequestPath path = exchange.getRequest().getPath()__					throw new IllegalStateException(_							"Ambiguous handler methods mapped for '" + path + "': {" + m1 + ", " + m2 + "}")__				}_			}_			handleMatch(bestMatch.mapping, bestMatch.handlerMethod, exchange)__			return bestMatch.handlerMethod__		}_		else {_			return handleNoMatch(this.mappingRegistry.getMappings().keySet(), exchange)__		}_	};look,up,the,best,matching,handler,method,for,the,current,request,if,multiple,matches,are,found,the,best,match,is,selected,param,exchange,the,current,exchange,return,the,best,matching,handler,method,or,code,null,if,no,match,see,handle,match,see,handle,no,match;nullable,protected,handler,method,lookup,handler,method,server,web,exchange,exchange,throws,exception,list,match,matches,new,array,list,add,matching,mappings,this,mapping,registry,get,mappings,key,set,matches,exchange,if,matches,is,empty,comparator,match,comparator,new,match,comparator,get,mapping,comparator,exchange,matches,sort,comparator,match,best,match,matches,get,0,if,matches,size,1,if,logger,is,trace,enabled,logger,trace,exchange,get,log,prefix,matches,size,matching,mappings,matches,if,cors,utils,is,pre,flight,request,exchange,get,request,return,match,second,best,match,matches,get,1,if,comparator,compare,best,match,second,best,match,0,method,m1,best,match,handler,method,get,method,method,m2,second,best,match,handler,method,get,method,request,path,path,exchange,get,request,get,path,throw,new,illegal,state,exception,ambiguous,handler,methods,mapped,for,path,m1,m2,handle,match,best,match,mapping,best,match,handler,method,exchange,return,best,match,handler,method,else,return,handle,no,match,this,mapping,registry,get,mappings,key,set,exchange
AbstractHandlerMethodMapping -> @Nullable 	protected HandlerMethod lookupHandlerMethod(ServerWebExchange exchange) throws Exception;1548427561;Look up the best-matching handler method for the current request._If multiple matches are found, the best match is selected._@param exchange the current exchange_@return the best-matching handler method, or {@code null} if no match_@see #handleMatch_@see #handleNoMatch;@Nullable_	protected HandlerMethod lookupHandlerMethod(ServerWebExchange exchange) throws Exception {_		List<Match> matches = new ArrayList<>()__		addMatchingMappings(this.mappingRegistry.getMappings().keySet(), matches, exchange)___		if (!matches.isEmpty()) {_			Comparator<Match> comparator = new MatchComparator(getMappingComparator(exchange))__			matches.sort(comparator)__			Match bestMatch = matches.get(0)__			if (matches.size() > 1) {_				if (logger.isTraceEnabled()) {_					logger.trace(exchange.getLogPrefix() + matches.size() + " matching mappings: " + matches)__				}_				if (CorsUtils.isPreFlightRequest(exchange.getRequest())) {_					return PREFLIGHT_AMBIGUOUS_MATCH__				}_				Match secondBestMatch = matches.get(1)__				if (comparator.compare(bestMatch, secondBestMatch) == 0) {_					Method m1 = bestMatch.handlerMethod.getMethod()__					Method m2 = secondBestMatch.handlerMethod.getMethod()__					RequestPath path = exchange.getRequest().getPath()__					throw new IllegalStateException(_							"Ambiguous handler methods mapped for '" + path + "': {" + m1 + ", " + m2 + "}")__				}_			}_			handleMatch(bestMatch.mapping, bestMatch.handlerMethod, exchange)__			return bestMatch.handlerMethod__		}_		else {_			return handleNoMatch(this.mappingRegistry.getMappings().keySet(), exchange)__		}_	};look,up,the,best,matching,handler,method,for,the,current,request,if,multiple,matches,are,found,the,best,match,is,selected,param,exchange,the,current,exchange,return,the,best,matching,handler,method,or,code,null,if,no,match,see,handle,match,see,handle,no,match;nullable,protected,handler,method,lookup,handler,method,server,web,exchange,exchange,throws,exception,list,match,matches,new,array,list,add,matching,mappings,this,mapping,registry,get,mappings,key,set,matches,exchange,if,matches,is,empty,comparator,match,comparator,new,match,comparator,get,mapping,comparator,exchange,matches,sort,comparator,match,best,match,matches,get,0,if,matches,size,1,if,logger,is,trace,enabled,logger,trace,exchange,get,log,prefix,matches,size,matching,mappings,matches,if,cors,utils,is,pre,flight,request,exchange,get,request,return,match,second,best,match,matches,get,1,if,comparator,compare,best,match,second,best,match,0,method,m1,best,match,handler,method,get,method,method,m2,second,best,match,handler,method,get,method,request,path,path,exchange,get,request,get,path,throw,new,illegal,state,exception,ambiguous,handler,methods,mapped,for,path,m1,m2,handle,match,best,match,mapping,best,match,handler,method,exchange,return,best,match,handler,method,else,return,handle,no,match,this,mapping,registry,get,mappings,key,set,exchange
AbstractHandlerMethodMapping -> @Nullable 	protected HandlerMethod lookupHandlerMethod(ServerWebExchange exchange) throws Exception;1551093473;Look up the best-matching handler method for the current request._If multiple matches are found, the best match is selected._@param exchange the current exchange_@return the best-matching handler method, or {@code null} if no match_@see #handleMatch_@see #handleNoMatch;@Nullable_	protected HandlerMethod lookupHandlerMethod(ServerWebExchange exchange) throws Exception {_		List<Match> matches = new ArrayList<>()__		addMatchingMappings(this.mappingRegistry.getMappings().keySet(), matches, exchange)___		if (!matches.isEmpty()) {_			Comparator<Match> comparator = new MatchComparator(getMappingComparator(exchange))__			matches.sort(comparator)__			Match bestMatch = matches.get(0)__			if (matches.size() > 1) {_				if (logger.isTraceEnabled()) {_					logger.trace(exchange.getLogPrefix() + matches.size() + " matching mappings: " + matches)__				}_				if (CorsUtils.isPreFlightRequest(exchange.getRequest())) {_					return PREFLIGHT_AMBIGUOUS_MATCH__				}_				Match secondBestMatch = matches.get(1)__				if (comparator.compare(bestMatch, secondBestMatch) == 0) {_					Method m1 = bestMatch.handlerMethod.getMethod()__					Method m2 = secondBestMatch.handlerMethod.getMethod()__					RequestPath path = exchange.getRequest().getPath()__					throw new IllegalStateException(_							"Ambiguous handler methods mapped for '" + path + "': {" + m1 + ", " + m2 + "}")__				}_			}_			handleMatch(bestMatch.mapping, bestMatch.handlerMethod, exchange)__			return bestMatch.handlerMethod__		}_		else {_			return handleNoMatch(this.mappingRegistry.getMappings().keySet(), exchange)__		}_	};look,up,the,best,matching,handler,method,for,the,current,request,if,multiple,matches,are,found,the,best,match,is,selected,param,exchange,the,current,exchange,return,the,best,matching,handler,method,or,code,null,if,no,match,see,handle,match,see,handle,no,match;nullable,protected,handler,method,lookup,handler,method,server,web,exchange,exchange,throws,exception,list,match,matches,new,array,list,add,matching,mappings,this,mapping,registry,get,mappings,key,set,matches,exchange,if,matches,is,empty,comparator,match,comparator,new,match,comparator,get,mapping,comparator,exchange,matches,sort,comparator,match,best,match,matches,get,0,if,matches,size,1,if,logger,is,trace,enabled,logger,trace,exchange,get,log,prefix,matches,size,matching,mappings,matches,if,cors,utils,is,pre,flight,request,exchange,get,request,return,match,second,best,match,matches,get,1,if,comparator,compare,best,match,second,best,match,0,method,m1,best,match,handler,method,get,method,method,m2,second,best,match,handler,method,get,method,request,path,path,exchange,get,request,get,path,throw,new,illegal,state,exception,ambiguous,handler,methods,mapped,for,path,m1,m2,handle,match,best,match,mapping,best,match,handler,method,exchange,return,best,match,handler,method,else,return,handle,no,match,this,mapping,registry,get,mappings,key,set,exchange
AbstractHandlerMethodMapping -> protected void handleMatch(T mapping, LookupPath lookupPath, ServerWebExchange exchange);1496334664;Invoked when a matching mapping is found._@param mapping the matching mapping_@param lookupPath the lookup path within the current mapping_@param exchange the current exchange;protected void handleMatch(T mapping, LookupPath lookupPath, ServerWebExchange exchange) {_	};invoked,when,a,matching,mapping,is,found,param,mapping,the,matching,mapping,param,lookup,path,the,lookup,path,within,the,current,mapping,param,exchange,the,current,exchange;protected,void,handle,match,t,mapping,lookup,path,lookup,path,server,web,exchange,exchange
AbstractHandlerMethodMapping -> protected void handleMatch(T mapping, LookupPath lookupPath, ServerWebExchange exchange);1496430942;Invoked when a matching mapping is found._@param mapping the matching mapping_@param lookupPath the lookup path within the current mapping_@param exchange the current exchange;protected void handleMatch(T mapping, LookupPath lookupPath, ServerWebExchange exchange) {_	};invoked,when,a,matching,mapping,is,found,param,mapping,the,matching,mapping,param,lookup,path,the,lookup,path,within,the,current,mapping,param,exchange,the,current,exchange;protected,void,handle,match,t,mapping,lookup,path,lookup,path,server,web,exchange,exchange
AbstractHandlerMethodMapping -> protected void handleMatch(T mapping, LookupPath lookupPath, ServerWebExchange exchange);1496837955;Invoked when a matching mapping is found._@param mapping the matching mapping_@param lookupPath the lookup path within the current mapping_@param exchange the current exchange;protected void handleMatch(T mapping, LookupPath lookupPath, ServerWebExchange exchange) {_	};invoked,when,a,matching,mapping,is,found,param,mapping,the,matching,mapping,param,lookup,path,the,lookup,path,within,the,current,mapping,param,exchange,the,current,exchange;protected,void,handle,match,t,mapping,lookup,path,lookup,path,server,web,exchange,exchange
AbstractHandlerMethodMapping -> protected abstract T getMatchingMapping(T mapping, ServerWebExchange exchange)_;1485986572;Check if a mapping matches the current request and return a (potentially_new) mapping with conditions relevant to the current request._@param mapping the mapping to get a match for_@param exchange the current exchange_@return the match, or {@code null} if the mapping doesn't match;protected abstract T getMatchingMapping(T mapping, ServerWebExchange exchange)_;check,if,a,mapping,matches,the,current,request,and,return,a,potentially,new,mapping,with,conditions,relevant,to,the,current,request,param,mapping,the,mapping,to,get,a,match,for,param,exchange,the,current,exchange,return,the,match,or,code,null,if,the,mapping,doesn,t,match;protected,abstract,t,get,matching,mapping,t,mapping,server,web,exchange,exchange
AbstractHandlerMethodMapping -> protected abstract T getMatchingMapping(T mapping, ServerWebExchange exchange)_;1486635693;Check if a mapping matches the current request and return a (potentially_new) mapping with conditions relevant to the current request._@param mapping the mapping to get a match for_@param exchange the current exchange_@return the match, or {@code null} if the mapping doesn't match;protected abstract T getMatchingMapping(T mapping, ServerWebExchange exchange)_;check,if,a,mapping,matches,the,current,request,and,return,a,potentially,new,mapping,with,conditions,relevant,to,the,current,request,param,mapping,the,mapping,to,get,a,match,for,param,exchange,the,current,exchange,return,the,match,or,code,null,if,the,mapping,doesn,t,match;protected,abstract,t,get,matching,mapping,t,mapping,server,web,exchange,exchange
AbstractHandlerMethodMapping -> protected abstract T getMatchingMapping(T mapping, ServerWebExchange exchange)_;1486674586;Check if a mapping matches the current request and return a (potentially_new) mapping with conditions relevant to the current request._@param mapping the mapping to get a match for_@param exchange the current exchange_@return the match, or {@code null} if the mapping doesn't match;protected abstract T getMatchingMapping(T mapping, ServerWebExchange exchange)_;check,if,a,mapping,matches,the,current,request,and,return,a,potentially,new,mapping,with,conditions,relevant,to,the,current,request,param,mapping,the,mapping,to,get,a,match,for,param,exchange,the,current,exchange,return,the,match,or,code,null,if,the,mapping,doesn,t,match;protected,abstract,t,get,matching,mapping,t,mapping,server,web,exchange,exchange
AbstractHandlerMethodMapping -> protected abstract T getMatchingMapping(T mapping, ServerWebExchange exchange)_;1486747801;Check if a mapping matches the current request and return a (potentially_new) mapping with conditions relevant to the current request._@param mapping the mapping to get a match for_@param exchange the current exchange_@return the match, or {@code null} if the mapping doesn't match;protected abstract T getMatchingMapping(T mapping, ServerWebExchange exchange)_;check,if,a,mapping,matches,the,current,request,and,return,a,potentially,new,mapping,with,conditions,relevant,to,the,current,request,param,mapping,the,mapping,to,get,a,match,for,param,exchange,the,current,exchange,return,the,match,or,code,null,if,the,mapping,doesn,t,match;protected,abstract,t,get,matching,mapping,t,mapping,server,web,exchange,exchange
AbstractHandlerMethodMapping -> protected abstract T getMatchingMapping(T mapping, ServerWebExchange exchange)_;1489852683;Check if a mapping matches the current request and return a (potentially_new) mapping with conditions relevant to the current request._@param mapping the mapping to get a match for_@param exchange the current exchange_@return the match, or {@code null} if the mapping doesn't match;protected abstract T getMatchingMapping(T mapping, ServerWebExchange exchange)_;check,if,a,mapping,matches,the,current,request,and,return,a,potentially,new,mapping,with,conditions,relevant,to,the,current,request,param,mapping,the,mapping,to,get,a,match,for,param,exchange,the,current,exchange,return,the,match,or,code,null,if,the,mapping,doesn,t,match;protected,abstract,t,get,matching,mapping,t,mapping,server,web,exchange,exchange
AbstractHandlerMethodMapping -> protected abstract T getMatchingMapping(T mapping, ServerWebExchange exchange)_;1492542679;Check if a mapping matches the current request and return a (potentially_new) mapping with conditions relevant to the current request._@param mapping the mapping to get a match for_@param exchange the current exchange_@return the match, or {@code null} if the mapping doesn't match;protected abstract T getMatchingMapping(T mapping, ServerWebExchange exchange)_;check,if,a,mapping,matches,the,current,request,and,return,a,potentially,new,mapping,with,conditions,relevant,to,the,current,request,param,mapping,the,mapping,to,get,a,match,for,param,exchange,the,current,exchange,return,the,match,or,code,null,if,the,mapping,doesn,t,match;protected,abstract,t,get,matching,mapping,t,mapping,server,web,exchange,exchange
AbstractHandlerMethodMapping -> protected abstract T getMatchingMapping(T mapping, ServerWebExchange exchange)_;1493370460;Check if a mapping matches the current request and return a (potentially_new) mapping with conditions relevant to the current request._@param mapping the mapping to get a match for_@param exchange the current exchange_@return the match, or {@code null} if the mapping doesn't match;protected abstract T getMatchingMapping(T mapping, ServerWebExchange exchange)_;check,if,a,mapping,matches,the,current,request,and,return,a,potentially,new,mapping,with,conditions,relevant,to,the,current,request,param,mapping,the,mapping,to,get,a,match,for,param,exchange,the,current,exchange,return,the,match,or,code,null,if,the,mapping,doesn,t,match;protected,abstract,t,get,matching,mapping,t,mapping,server,web,exchange,exchange
AbstractHandlerMethodMapping -> protected abstract T getMatchingMapping(T mapping, ServerWebExchange exchange)_;1493391766;Check if a mapping matches the current request and return a (potentially_new) mapping with conditions relevant to the current request._@param mapping the mapping to get a match for_@param exchange the current exchange_@return the match, or {@code null} if the mapping doesn't match;protected abstract T getMatchingMapping(T mapping, ServerWebExchange exchange)_;check,if,a,mapping,matches,the,current,request,and,return,a,potentially,new,mapping,with,conditions,relevant,to,the,current,request,param,mapping,the,mapping,to,get,a,match,for,param,exchange,the,current,exchange,return,the,match,or,code,null,if,the,mapping,doesn,t,match;protected,abstract,t,get,matching,mapping,t,mapping,server,web,exchange,exchange
AbstractHandlerMethodMapping -> protected abstract T getMatchingMapping(T mapping, ServerWebExchange exchange)_;1493755795;Check if a mapping matches the current request and return a (potentially_new) mapping with conditions relevant to the current request._@param mapping the mapping to get a match for_@param exchange the current exchange_@return the match, or {@code null} if the mapping doesn't match;protected abstract T getMatchingMapping(T mapping, ServerWebExchange exchange)_;check,if,a,mapping,matches,the,current,request,and,return,a,potentially,new,mapping,with,conditions,relevant,to,the,current,request,param,mapping,the,mapping,to,get,a,match,for,param,exchange,the,current,exchange,return,the,match,or,code,null,if,the,mapping,doesn,t,match;protected,abstract,t,get,matching,mapping,t,mapping,server,web,exchange,exchange
AbstractHandlerMethodMapping -> protected void registerHandlerMethod(Object handler, Method method, T mapping);1485986572;Register a handler method and its unique mapping. Invoked at startup for_each detected handler method._@param handler the bean name of the handler or the handler instance_@param method the method to register_@param mapping the mapping conditions associated with the handler method_@throws IllegalStateException if another method was already registered_under the same mapping;protected void registerHandlerMethod(Object handler, Method method, T mapping) {_		this.mappingRegistry.register(mapping, handler, method)__	};register,a,handler,method,and,its,unique,mapping,invoked,at,startup,for,each,detected,handler,method,param,handler,the,bean,name,of,the,handler,or,the,handler,instance,param,method,the,method,to,register,param,mapping,the,mapping,conditions,associated,with,the,handler,method,throws,illegal,state,exception,if,another,method,was,already,registered,under,the,same,mapping;protected,void,register,handler,method,object,handler,method,method,t,mapping,this,mapping,registry,register,mapping,handler,method
AbstractHandlerMethodMapping -> protected void registerHandlerMethod(Object handler, Method method, T mapping);1486747801;Register a handler method and its unique mapping. Invoked at startup for_each detected handler method._@param handler the bean name of the handler or the handler instance_@param method the method to register_@param mapping the mapping conditions associated with the handler method_@throws IllegalStateException if another method was already registered_under the same mapping;protected void registerHandlerMethod(Object handler, Method method, T mapping) {_		this.mappingRegistry.register(mapping, handler, method)__	};register,a,handler,method,and,its,unique,mapping,invoked,at,startup,for,each,detected,handler,method,param,handler,the,bean,name,of,the,handler,or,the,handler,instance,param,method,the,method,to,register,param,mapping,the,mapping,conditions,associated,with,the,handler,method,throws,illegal,state,exception,if,another,method,was,already,registered,under,the,same,mapping;protected,void,register,handler,method,object,handler,method,method,t,mapping,this,mapping,registry,register,mapping,handler,method
AbstractHandlerMethodMapping -> protected void registerHandlerMethod(Object handler, Method method, T mapping);1489852683;Register a handler method and its unique mapping. Invoked at startup for_each detected handler method._@param handler the bean name of the handler or the handler instance_@param method the method to register_@param mapping the mapping conditions associated with the handler method_@throws IllegalStateException if another method was already registered_under the same mapping;protected void registerHandlerMethod(Object handler, Method method, T mapping) {_		this.mappingRegistry.register(mapping, handler, method)__	};register,a,handler,method,and,its,unique,mapping,invoked,at,startup,for,each,detected,handler,method,param,handler,the,bean,name,of,the,handler,or,the,handler,instance,param,method,the,method,to,register,param,mapping,the,mapping,conditions,associated,with,the,handler,method,throws,illegal,state,exception,if,another,method,was,already,registered,under,the,same,mapping;protected,void,register,handler,method,object,handler,method,method,t,mapping,this,mapping,registry,register,mapping,handler,method
AbstractHandlerMethodMapping -> protected void registerHandlerMethod(Object handler, Method method, T mapping);1492542679;Register a handler method and its unique mapping. Invoked at startup for_each detected handler method._@param handler the bean name of the handler or the handler instance_@param method the method to register_@param mapping the mapping conditions associated with the handler method_@throws IllegalStateException if another method was already registered_under the same mapping;protected void registerHandlerMethod(Object handler, Method method, T mapping) {_		this.mappingRegistry.register(mapping, handler, method)__	};register,a,handler,method,and,its,unique,mapping,invoked,at,startup,for,each,detected,handler,method,param,handler,the,bean,name,of,the,handler,or,the,handler,instance,param,method,the,method,to,register,param,mapping,the,mapping,conditions,associated,with,the,handler,method,throws,illegal,state,exception,if,another,method,was,already,registered,under,the,same,mapping;protected,void,register,handler,method,object,handler,method,method,t,mapping,this,mapping,registry,register,mapping,handler,method
AbstractHandlerMethodMapping -> protected void registerHandlerMethod(Object handler, Method method, T mapping);1493370460;Register a handler method and its unique mapping. Invoked at startup for_each detected handler method._@param handler the bean name of the handler or the handler instance_@param method the method to register_@param mapping the mapping conditions associated with the handler method_@throws IllegalStateException if another method was already registered_under the same mapping;protected void registerHandlerMethod(Object handler, Method method, T mapping) {_		this.mappingRegistry.register(mapping, handler, method)__	};register,a,handler,method,and,its,unique,mapping,invoked,at,startup,for,each,detected,handler,method,param,handler,the,bean,name,of,the,handler,or,the,handler,instance,param,method,the,method,to,register,param,mapping,the,mapping,conditions,associated,with,the,handler,method,throws,illegal,state,exception,if,another,method,was,already,registered,under,the,same,mapping;protected,void,register,handler,method,object,handler,method,method,t,mapping,this,mapping,registry,register,mapping,handler,method
AbstractHandlerMethodMapping -> protected void registerHandlerMethod(Object handler, Method method, T mapping);1493391766;Register a handler method and its unique mapping. Invoked at startup for_each detected handler method._@param handler the bean name of the handler or the handler instance_@param method the method to register_@param mapping the mapping conditions associated with the handler method_@throws IllegalStateException if another method was already registered_under the same mapping;protected void registerHandlerMethod(Object handler, Method method, T mapping) {_		this.mappingRegistry.register(mapping, handler, method)__	};register,a,handler,method,and,its,unique,mapping,invoked,at,startup,for,each,detected,handler,method,param,handler,the,bean,name,of,the,handler,or,the,handler,instance,param,method,the,method,to,register,param,mapping,the,mapping,conditions,associated,with,the,handler,method,throws,illegal,state,exception,if,another,method,was,already,registered,under,the,same,mapping;protected,void,register,handler,method,object,handler,method,method,t,mapping,this,mapping,registry,register,mapping,handler,method
AbstractHandlerMethodMapping -> protected void registerHandlerMethod(Object handler, Method method, T mapping);1493755795;Register a handler method and its unique mapping. Invoked at startup for_each detected handler method._@param handler the bean name of the handler or the handler instance_@param method the method to register_@param mapping the mapping conditions associated with the handler method_@throws IllegalStateException if another method was already registered_under the same mapping;protected void registerHandlerMethod(Object handler, Method method, T mapping) {_		this.mappingRegistry.register(mapping, handler, method)__	};register,a,handler,method,and,its,unique,mapping,invoked,at,startup,for,each,detected,handler,method,param,handler,the,bean,name,of,the,handler,or,the,handler,instance,param,method,the,method,to,register,param,mapping,the,mapping,conditions,associated,with,the,handler,method,throws,illegal,state,exception,if,another,method,was,already,registered,under,the,same,mapping;protected,void,register,handler,method,object,handler,method,method,t,mapping,this,mapping,registry,register,mapping,handler,method
AbstractHandlerMethodMapping -> protected void registerHandlerMethod(Object handler, Method method, T mapping);1495868221;Register a handler method and its unique mapping. Invoked at startup for_each detected handler method._@param handler the bean name of the handler or the handler instance_@param method the method to register_@param mapping the mapping conditions associated with the handler method_@throws IllegalStateException if another method was already registered_under the same mapping;protected void registerHandlerMethod(Object handler, Method method, T mapping) {_		this.mappingRegistry.register(mapping, handler, method)__	};register,a,handler,method,and,its,unique,mapping,invoked,at,startup,for,each,detected,handler,method,param,handler,the,bean,name,of,the,handler,or,the,handler,instance,param,method,the,method,to,register,param,mapping,the,mapping,conditions,associated,with,the,handler,method,throws,illegal,state,exception,if,another,method,was,already,registered,under,the,same,mapping;protected,void,register,handler,method,object,handler,method,method,t,mapping,this,mapping,registry,register,mapping,handler,method
AbstractHandlerMethodMapping -> protected void registerHandlerMethod(Object handler, Method method, T mapping);1496334664;Register a handler method and its unique mapping. Invoked at startup for_each detected handler method._@param handler the bean name of the handler or the handler instance_@param method the method to register_@param mapping the mapping conditions associated with the handler method_@throws IllegalStateException if another method was already registered_under the same mapping;protected void registerHandlerMethod(Object handler, Method method, T mapping) {_		this.mappingRegistry.register(mapping, handler, method)__	};register,a,handler,method,and,its,unique,mapping,invoked,at,startup,for,each,detected,handler,method,param,handler,the,bean,name,of,the,handler,or,the,handler,instance,param,method,the,method,to,register,param,mapping,the,mapping,conditions,associated,with,the,handler,method,throws,illegal,state,exception,if,another,method,was,already,registered,under,the,same,mapping;protected,void,register,handler,method,object,handler,method,method,t,mapping,this,mapping,registry,register,mapping,handler,method
AbstractHandlerMethodMapping -> protected void registerHandlerMethod(Object handler, Method method, T mapping);1496430942;Register a handler method and its unique mapping. Invoked at startup for_each detected handler method._@param handler the bean name of the handler or the handler instance_@param method the method to register_@param mapping the mapping conditions associated with the handler method_@throws IllegalStateException if another method was already registered_under the same mapping;protected void registerHandlerMethod(Object handler, Method method, T mapping) {_		this.mappingRegistry.register(mapping, handler, method)__	};register,a,handler,method,and,its,unique,mapping,invoked,at,startup,for,each,detected,handler,method,param,handler,the,bean,name,of,the,handler,or,the,handler,instance,param,method,the,method,to,register,param,mapping,the,mapping,conditions,associated,with,the,handler,method,throws,illegal,state,exception,if,another,method,was,already,registered,under,the,same,mapping;protected,void,register,handler,method,object,handler,method,method,t,mapping,this,mapping,registry,register,mapping,handler,method
AbstractHandlerMethodMapping -> protected void registerHandlerMethod(Object handler, Method method, T mapping);1496837955;Register a handler method and its unique mapping. Invoked at startup for_each detected handler method._@param handler the bean name of the handler or the handler instance_@param method the method to register_@param mapping the mapping conditions associated with the handler method_@throws IllegalStateException if another method was already registered_under the same mapping;protected void registerHandlerMethod(Object handler, Method method, T mapping) {_		this.mappingRegistry.register(mapping, handler, method)__	};register,a,handler,method,and,its,unique,mapping,invoked,at,startup,for,each,detected,handler,method,param,handler,the,bean,name,of,the,handler,or,the,handler,instance,param,method,the,method,to,register,param,mapping,the,mapping,conditions,associated,with,the,handler,method,throws,illegal,state,exception,if,another,method,was,already,registered,under,the,same,mapping;protected,void,register,handler,method,object,handler,method,method,t,mapping,this,mapping,registry,register,mapping,handler,method
AbstractHandlerMethodMapping -> protected void registerHandlerMethod(Object handler, Method method, T mapping);1497039338;Register a handler method and its unique mapping. Invoked at startup for_each detected handler method._@param handler the bean name of the handler or the handler instance_@param method the method to register_@param mapping the mapping conditions associated with the handler method_@throws IllegalStateException if another method was already registered_under the same mapping;protected void registerHandlerMethod(Object handler, Method method, T mapping) {_		this.mappingRegistry.register(mapping, handler, method)__	};register,a,handler,method,and,its,unique,mapping,invoked,at,startup,for,each,detected,handler,method,param,handler,the,bean,name,of,the,handler,or,the,handler,instance,param,method,the,method,to,register,param,mapping,the,mapping,conditions,associated,with,the,handler,method,throws,illegal,state,exception,if,another,method,was,already,registered,under,the,same,mapping;protected,void,register,handler,method,object,handler,method,method,t,mapping,this,mapping,registry,register,mapping,handler,method
AbstractHandlerMethodMapping -> protected void registerHandlerMethod(Object handler, Method method, T mapping);1497232764;Register a handler method and its unique mapping. Invoked at startup for_each detected handler method._@param handler the bean name of the handler or the handler instance_@param method the method to register_@param mapping the mapping conditions associated with the handler method_@throws IllegalStateException if another method was already registered_under the same mapping;protected void registerHandlerMethod(Object handler, Method method, T mapping) {_		this.mappingRegistry.register(mapping, handler, method)__	};register,a,handler,method,and,its,unique,mapping,invoked,at,startup,for,each,detected,handler,method,param,handler,the,bean,name,of,the,handler,or,the,handler,instance,param,method,the,method,to,register,param,mapping,the,mapping,conditions,associated,with,the,handler,method,throws,illegal,state,exception,if,another,method,was,already,registered,under,the,same,mapping;protected,void,register,handler,method,object,handler,method,method,t,mapping,this,mapping,registry,register,mapping,handler,method
AbstractHandlerMethodMapping -> protected void registerHandlerMethod(Object handler, Method method, T mapping);1497251962;Register a handler method and its unique mapping. Invoked at startup for_each detected handler method._@param handler the bean name of the handler or the handler instance_@param method the method to register_@param mapping the mapping conditions associated with the handler method_@throws IllegalStateException if another method was already registered_under the same mapping;protected void registerHandlerMethod(Object handler, Method method, T mapping) {_		this.mappingRegistry.register(mapping, handler, method)__	};register,a,handler,method,and,its,unique,mapping,invoked,at,startup,for,each,detected,handler,method,param,handler,the,bean,name,of,the,handler,or,the,handler,instance,param,method,the,method,to,register,param,mapping,the,mapping,conditions,associated,with,the,handler,method,throws,illegal,state,exception,if,another,method,was,already,registered,under,the,same,mapping;protected,void,register,handler,method,object,handler,method,method,t,mapping,this,mapping,registry,register,mapping,handler,method
AbstractHandlerMethodMapping -> protected void registerHandlerMethod(Object handler, Method method, T mapping);1497286385;Register a handler method and its unique mapping. Invoked at startup for_each detected handler method._@param handler the bean name of the handler or the handler instance_@param method the method to register_@param mapping the mapping conditions associated with the handler method_@throws IllegalStateException if another method was already registered_under the same mapping;protected void registerHandlerMethod(Object handler, Method method, T mapping) {_		this.mappingRegistry.register(mapping, handler, method)__	};register,a,handler,method,and,its,unique,mapping,invoked,at,startup,for,each,detected,handler,method,param,handler,the,bean,name,of,the,handler,or,the,handler,instance,param,method,the,method,to,register,param,mapping,the,mapping,conditions,associated,with,the,handler,method,throws,illegal,state,exception,if,another,method,was,already,registered,under,the,same,mapping;protected,void,register,handler,method,object,handler,method,method,t,mapping,this,mapping,registry,register,mapping,handler,method
AbstractHandlerMethodMapping -> protected void registerHandlerMethod(Object handler, Method method, T mapping);1498756719;Register a handler method and its unique mapping. Invoked at startup for_each detected handler method._@param handler the bean name of the handler or the handler instance_@param method the method to register_@param mapping the mapping conditions associated with the handler method_@throws IllegalStateException if another method was already registered_under the same mapping;protected void registerHandlerMethod(Object handler, Method method, T mapping) {_		this.mappingRegistry.register(mapping, handler, method)__	};register,a,handler,method,and,its,unique,mapping,invoked,at,startup,for,each,detected,handler,method,param,handler,the,bean,name,of,the,handler,or,the,handler,instance,param,method,the,method,to,register,param,mapping,the,mapping,conditions,associated,with,the,handler,method,throws,illegal,state,exception,if,another,method,was,already,registered,under,the,same,mapping;protected,void,register,handler,method,object,handler,method,method,t,mapping,this,mapping,registry,register,mapping,handler,method
AbstractHandlerMethodMapping -> protected void registerHandlerMethod(Object handler, Method method, T mapping);1498861175;Register a handler method and its unique mapping. Invoked at startup for_each detected handler method._@param handler the bean name of the handler or the handler instance_@param method the method to register_@param mapping the mapping conditions associated with the handler method_@throws IllegalStateException if another method was already registered_under the same mapping;protected void registerHandlerMethod(Object handler, Method method, T mapping) {_		this.mappingRegistry.register(mapping, handler, method)__	};register,a,handler,method,and,its,unique,mapping,invoked,at,startup,for,each,detected,handler,method,param,handler,the,bean,name,of,the,handler,or,the,handler,instance,param,method,the,method,to,register,param,mapping,the,mapping,conditions,associated,with,the,handler,method,throws,illegal,state,exception,if,another,method,was,already,registered,under,the,same,mapping;protected,void,register,handler,method,object,handler,method,method,t,mapping,this,mapping,registry,register,mapping,handler,method
AbstractHandlerMethodMapping -> protected void registerHandlerMethod(Object handler, Method method, T mapping);1498953917;Register a handler method and its unique mapping. Invoked at startup for_each detected handler method._@param handler the bean name of the handler or the handler instance_@param method the method to register_@param mapping the mapping conditions associated with the handler method_@throws IllegalStateException if another method was already registered_under the same mapping;protected void registerHandlerMethod(Object handler, Method method, T mapping) {_		this.mappingRegistry.register(mapping, handler, method)__	};register,a,handler,method,and,its,unique,mapping,invoked,at,startup,for,each,detected,handler,method,param,handler,the,bean,name,of,the,handler,or,the,handler,instance,param,method,the,method,to,register,param,mapping,the,mapping,conditions,associated,with,the,handler,method,throws,illegal,state,exception,if,another,method,was,already,registered,under,the,same,mapping;protected,void,register,handler,method,object,handler,method,method,t,mapping,this,mapping,registry,register,mapping,handler,method
AbstractHandlerMethodMapping -> protected void registerHandlerMethod(Object handler, Method method, T mapping);1516617801;Register a handler method and its unique mapping. Invoked at startup for_each detected handler method._@param handler the bean name of the handler or the handler instance_@param method the method to register_@param mapping the mapping conditions associated with the handler method_@throws IllegalStateException if another method was already registered_under the same mapping;protected void registerHandlerMethod(Object handler, Method method, T mapping) {_		this.mappingRegistry.register(mapping, handler, method)__	};register,a,handler,method,and,its,unique,mapping,invoked,at,startup,for,each,detected,handler,method,param,handler,the,bean,name,of,the,handler,or,the,handler,instance,param,method,the,method,to,register,param,mapping,the,mapping,conditions,associated,with,the,handler,method,throws,illegal,state,exception,if,another,method,was,already,registered,under,the,same,mapping;protected,void,register,handler,method,object,handler,method,method,t,mapping,this,mapping,registry,register,mapping,handler,method
AbstractHandlerMethodMapping -> protected void registerHandlerMethod(Object handler, Method method, T mapping);1529721864;Register a handler method and its unique mapping. Invoked at startup for_each detected handler method._@param handler the bean name of the handler or the handler instance_@param method the method to register_@param mapping the mapping conditions associated with the handler method_@throws IllegalStateException if another method was already registered_under the same mapping;protected void registerHandlerMethod(Object handler, Method method, T mapping) {_		this.mappingRegistry.register(mapping, handler, method)__	};register,a,handler,method,and,its,unique,mapping,invoked,at,startup,for,each,detected,handler,method,param,handler,the,bean,name,of,the,handler,or,the,handler,instance,param,method,the,method,to,register,param,mapping,the,mapping,conditions,associated,with,the,handler,method,throws,illegal,state,exception,if,another,method,was,already,registered,under,the,same,mapping;protected,void,register,handler,method,object,handler,method,method,t,mapping,this,mapping,registry,register,mapping,handler,method
AbstractHandlerMethodMapping -> protected void registerHandlerMethod(Object handler, Method method, T mapping);1530174524;Register a handler method and its unique mapping. Invoked at startup for_each detected handler method._@param handler the bean name of the handler or the handler instance_@param method the method to register_@param mapping the mapping conditions associated with the handler method_@throws IllegalStateException if another method was already registered_under the same mapping;protected void registerHandlerMethod(Object handler, Method method, T mapping) {_		this.mappingRegistry.register(mapping, handler, method)__	};register,a,handler,method,and,its,unique,mapping,invoked,at,startup,for,each,detected,handler,method,param,handler,the,bean,name,of,the,handler,or,the,handler,instance,param,method,the,method,to,register,param,mapping,the,mapping,conditions,associated,with,the,handler,method,throws,illegal,state,exception,if,another,method,was,already,registered,under,the,same,mapping;protected,void,register,handler,method,object,handler,method,method,t,mapping,this,mapping,registry,register,mapping,handler,method
AbstractHandlerMethodMapping -> protected void registerHandlerMethod(Object handler, Method method, T mapping);1530793633;Register a handler method and its unique mapping. Invoked at startup for_each detected handler method._@param handler the bean name of the handler or the handler instance_@param method the method to register_@param mapping the mapping conditions associated with the handler method_@throws IllegalStateException if another method was already registered_under the same mapping;protected void registerHandlerMethod(Object handler, Method method, T mapping) {_		this.mappingRegistry.register(mapping, handler, method)__	};register,a,handler,method,and,its,unique,mapping,invoked,at,startup,for,each,detected,handler,method,param,handler,the,bean,name,of,the,handler,or,the,handler,instance,param,method,the,method,to,register,param,mapping,the,mapping,conditions,associated,with,the,handler,method,throws,illegal,state,exception,if,another,method,was,already,registered,under,the,same,mapping;protected,void,register,handler,method,object,handler,method,method,t,mapping,this,mapping,registry,register,mapping,handler,method
AbstractHandlerMethodMapping -> protected void registerHandlerMethod(Object handler, Method method, T mapping);1542407418;Register a handler method and its unique mapping. Invoked at startup for_each detected handler method._@param handler the bean name of the handler or the handler instance_@param method the method to register_@param mapping the mapping conditions associated with the handler method_@throws IllegalStateException if another method was already registered_under the same mapping;protected void registerHandlerMethod(Object handler, Method method, T mapping) {_		this.mappingRegistry.register(mapping, handler, method)__	};register,a,handler,method,and,its,unique,mapping,invoked,at,startup,for,each,detected,handler,method,param,handler,the,bean,name,of,the,handler,or,the,handler,instance,param,method,the,method,to,register,param,mapping,the,mapping,conditions,associated,with,the,handler,method,throws,illegal,state,exception,if,another,method,was,already,registered,under,the,same,mapping;protected,void,register,handler,method,object,handler,method,method,t,mapping,this,mapping,registry,register,mapping,handler,method
AbstractHandlerMethodMapping -> protected void registerHandlerMethod(Object handler, Method method, T mapping);1548427561;Register a handler method and its unique mapping. Invoked at startup for_each detected handler method._@param handler the bean name of the handler or the handler instance_@param method the method to register_@param mapping the mapping conditions associated with the handler method_@throws IllegalStateException if another method was already registered_under the same mapping;protected void registerHandlerMethod(Object handler, Method method, T mapping) {_		this.mappingRegistry.register(mapping, handler, method)__	};register,a,handler,method,and,its,unique,mapping,invoked,at,startup,for,each,detected,handler,method,param,handler,the,bean,name,of,the,handler,or,the,handler,instance,param,method,the,method,to,register,param,mapping,the,mapping,conditions,associated,with,the,handler,method,throws,illegal,state,exception,if,another,method,was,already,registered,under,the,same,mapping;protected,void,register,handler,method,object,handler,method,method,t,mapping,this,mapping,registry,register,mapping,handler,method
AbstractHandlerMethodMapping -> protected void registerHandlerMethod(Object handler, Method method, T mapping);1551093473;Register a handler method and its unique mapping. Invoked at startup for_each detected handler method._@param handler the bean name of the handler or the handler instance_@param method the method to register_@param mapping the mapping conditions associated with the handler method_@throws IllegalStateException if another method was already registered_under the same mapping;protected void registerHandlerMethod(Object handler, Method method, T mapping) {_		this.mappingRegistry.register(mapping, handler, method)__	};register,a,handler,method,and,its,unique,mapping,invoked,at,startup,for,each,detected,handler,method,param,handler,the,bean,name,of,the,handler,or,the,handler,instance,param,method,the,method,to,register,param,mapping,the,mapping,conditions,associated,with,the,handler,method,throws,illegal,state,exception,if,another,method,was,already,registered,under,the,same,mapping;protected,void,register,handler,method,object,handler,method,method,t,mapping,this,mapping,registry,register,mapping,handler,method
AbstractHandlerMethodMapping -> @Nullable 	protected HandlerMethod handleNoMatch(Set<T> mappings, LookupPath lookupPath, ServerWebExchange exchange) 			throws Exception;1496334664;Invoked when no matching mapping is not found._@param mappings all registered mappings_@param lookupPath the lookup path within the current mapping_@param exchange the current exchange_@return an alternative HandlerMethod or {@code null}_@throws Exception provides details that can be translated into an error status code;@Nullable_	protected HandlerMethod handleNoMatch(Set<T> mappings, LookupPath lookupPath, ServerWebExchange exchange)_			throws Exception {__		return null__	};invoked,when,no,matching,mapping,is,not,found,param,mappings,all,registered,mappings,param,lookup,path,the,lookup,path,within,the,current,mapping,param,exchange,the,current,exchange,return,an,alternative,handler,method,or,code,null,throws,exception,provides,details,that,can,be,translated,into,an,error,status,code;nullable,protected,handler,method,handle,no,match,set,t,mappings,lookup,path,lookup,path,server,web,exchange,exchange,throws,exception,return,null
AbstractHandlerMethodMapping -> @Nullable 	protected HandlerMethod handleNoMatch(Set<T> mappings, LookupPath lookupPath, ServerWebExchange exchange) 			throws Exception;1496430942;Invoked when no matching mapping is not found._@param mappings all registered mappings_@param lookupPath the lookup path within the current mapping_@param exchange the current exchange_@return an alternative HandlerMethod or {@code null}_@throws Exception provides details that can be translated into an error status code;@Nullable_	protected HandlerMethod handleNoMatch(Set<T> mappings, LookupPath lookupPath, ServerWebExchange exchange)_			throws Exception {__		return null__	};invoked,when,no,matching,mapping,is,not,found,param,mappings,all,registered,mappings,param,lookup,path,the,lookup,path,within,the,current,mapping,param,exchange,the,current,exchange,return,an,alternative,handler,method,or,code,null,throws,exception,provides,details,that,can,be,translated,into,an,error,status,code;nullable,protected,handler,method,handle,no,match,set,t,mappings,lookup,path,lookup,path,server,web,exchange,exchange,throws,exception,return,null
AbstractHandlerMethodMapping -> @Nullable 	protected HandlerMethod handleNoMatch(Set<T> mappings, LookupPath lookupPath, ServerWebExchange exchange) 			throws Exception;1496837955;Invoked when no matching mapping is not found._@param mappings all registered mappings_@param lookupPath the lookup path within the current mapping_@param exchange the current exchange_@return an alternative HandlerMethod or {@code null}_@throws Exception provides details that can be translated into an error status code;@Nullable_	protected HandlerMethod handleNoMatch(Set<T> mappings, LookupPath lookupPath, ServerWebExchange exchange)_			throws Exception {__		return null__	};invoked,when,no,matching,mapping,is,not,found,param,mappings,all,registered,mappings,param,lookup,path,the,lookup,path,within,the,current,mapping,param,exchange,the,current,exchange,return,an,alternative,handler,method,or,code,null,throws,exception,provides,details,that,can,be,translated,into,an,error,status,code;nullable,protected,handler,method,handle,no,match,set,t,mappings,lookup,path,lookup,path,server,web,exchange,exchange,throws,exception,return,null
AbstractHandlerMethodMapping -> protected CorsConfiguration initCorsConfiguration(Object handler, Method method, T mapping);1485986572;Extract and return the CORS configuration for the mapping.;protected CorsConfiguration initCorsConfiguration(Object handler, Method method, T mapping) {_		return null__	};extract,and,return,the,cors,configuration,for,the,mapping;protected,cors,configuration,init,cors,configuration,object,handler,method,method,t,mapping,return,null
AbstractHandlerMethodMapping -> protected CorsConfiguration initCorsConfiguration(Object handler, Method method, T mapping);1486635693;Extract and return the CORS configuration for the mapping.;protected CorsConfiguration initCorsConfiguration(Object handler, Method method, T mapping) {_		return null__	};extract,and,return,the,cors,configuration,for,the,mapping;protected,cors,configuration,init,cors,configuration,object,handler,method,method,t,mapping,return,null
AbstractHandlerMethodMapping -> protected CorsConfiguration initCorsConfiguration(Object handler, Method method, T mapping);1486674586;Extract and return the CORS configuration for the mapping.;protected CorsConfiguration initCorsConfiguration(Object handler, Method method, T mapping) {_		return null__	};extract,and,return,the,cors,configuration,for,the,mapping;protected,cors,configuration,init,cors,configuration,object,handler,method,method,t,mapping,return,null
AbstractHandlerMethodMapping -> protected CorsConfiguration initCorsConfiguration(Object handler, Method method, T mapping);1486747801;Extract and return the CORS configuration for the mapping.;protected CorsConfiguration initCorsConfiguration(Object handler, Method method, T mapping) {_		return null__	};extract,and,return,the,cors,configuration,for,the,mapping;protected,cors,configuration,init,cors,configuration,object,handler,method,method,t,mapping,return,null
AbstractHandlerMethodMapping -> protected CorsConfiguration initCorsConfiguration(Object handler, Method method, T mapping);1489852683;Extract and return the CORS configuration for the mapping.;protected CorsConfiguration initCorsConfiguration(Object handler, Method method, T mapping) {_		return null__	};extract,and,return,the,cors,configuration,for,the,mapping;protected,cors,configuration,init,cors,configuration,object,handler,method,method,t,mapping,return,null
AbstractHandlerMethodMapping -> protected CorsConfiguration initCorsConfiguration(Object handler, Method method, T mapping);1492542679;Extract and return the CORS configuration for the mapping.;protected CorsConfiguration initCorsConfiguration(Object handler, Method method, T mapping) {_		return null__	};extract,and,return,the,cors,configuration,for,the,mapping;protected,cors,configuration,init,cors,configuration,object,handler,method,method,t,mapping,return,null
AbstractHandlerMethodMapping -> protected CorsConfiguration initCorsConfiguration(Object handler, Method method, T mapping);1493370460;Extract and return the CORS configuration for the mapping.;protected CorsConfiguration initCorsConfiguration(Object handler, Method method, T mapping) {_		return null__	};extract,and,return,the,cors,configuration,for,the,mapping;protected,cors,configuration,init,cors,configuration,object,handler,method,method,t,mapping,return,null
AbstractHandlerMethodMapping -> protected CorsConfiguration initCorsConfiguration(Object handler, Method method, T mapping);1493391766;Extract and return the CORS configuration for the mapping.;protected CorsConfiguration initCorsConfiguration(Object handler, Method method, T mapping) {_		return null__	};extract,and,return,the,cors,configuration,for,the,mapping;protected,cors,configuration,init,cors,configuration,object,handler,method,method,t,mapping,return,null
AbstractHandlerMethodMapping -> protected CorsConfiguration initCorsConfiguration(Object handler, Method method, T mapping);1493755795;Extract and return the CORS configuration for the mapping.;protected CorsConfiguration initCorsConfiguration(Object handler, Method method, T mapping) {_		return null__	};extract,and,return,the,cors,configuration,for,the,mapping;protected,cors,configuration,init,cors,configuration,object,handler,method,method,t,mapping,return,null
AbstractHandlerMethodMapping -> protected void handleMatch(T mapping, HandlerMethod handlerMethod, ServerWebExchange exchange);1498953917;Invoked when a matching mapping is found._@param mapping the matching mapping_@param handlerMethod the matching method_@param exchange the current exchange;protected void handleMatch(T mapping, HandlerMethod handlerMethod, ServerWebExchange exchange) {_	};invoked,when,a,matching,mapping,is,found,param,mapping,the,matching,mapping,param,handler,method,the,matching,method,param,exchange,the,current,exchange;protected,void,handle,match,t,mapping,handler,method,handler,method,server,web,exchange,exchange
AbstractHandlerMethodMapping -> protected void handleMatch(T mapping, HandlerMethod handlerMethod, ServerWebExchange exchange);1516617801;Invoked when a matching mapping is found._@param mapping the matching mapping_@param handlerMethod the matching method_@param exchange the current exchange;protected void handleMatch(T mapping, HandlerMethod handlerMethod, ServerWebExchange exchange) {_	};invoked,when,a,matching,mapping,is,found,param,mapping,the,matching,mapping,param,handler,method,the,matching,method,param,exchange,the,current,exchange;protected,void,handle,match,t,mapping,handler,method,handler,method,server,web,exchange,exchange
AbstractHandlerMethodMapping -> protected void handleMatch(T mapping, HandlerMethod handlerMethod, ServerWebExchange exchange);1529721864;Invoked when a matching mapping is found._@param mapping the matching mapping_@param handlerMethod the matching method_@param exchange the current exchange;protected void handleMatch(T mapping, HandlerMethod handlerMethod, ServerWebExchange exchange) {_	};invoked,when,a,matching,mapping,is,found,param,mapping,the,matching,mapping,param,handler,method,the,matching,method,param,exchange,the,current,exchange;protected,void,handle,match,t,mapping,handler,method,handler,method,server,web,exchange,exchange
AbstractHandlerMethodMapping -> protected void handleMatch(T mapping, HandlerMethod handlerMethod, ServerWebExchange exchange);1530174524;Invoked when a matching mapping is found._@param mapping the matching mapping_@param handlerMethod the matching method_@param exchange the current exchange;protected void handleMatch(T mapping, HandlerMethod handlerMethod, ServerWebExchange exchange) {_	};invoked,when,a,matching,mapping,is,found,param,mapping,the,matching,mapping,param,handler,method,the,matching,method,param,exchange,the,current,exchange;protected,void,handle,match,t,mapping,handler,method,handler,method,server,web,exchange,exchange
AbstractHandlerMethodMapping -> protected void handleMatch(T mapping, HandlerMethod handlerMethod, ServerWebExchange exchange);1530793633;Invoked when a matching mapping is found._@param mapping the matching mapping_@param handlerMethod the matching method_@param exchange the current exchange;protected void handleMatch(T mapping, HandlerMethod handlerMethod, ServerWebExchange exchange) {_	};invoked,when,a,matching,mapping,is,found,param,mapping,the,matching,mapping,param,handler,method,the,matching,method,param,exchange,the,current,exchange;protected,void,handle,match,t,mapping,handler,method,handler,method,server,web,exchange,exchange
AbstractHandlerMethodMapping -> protected void handleMatch(T mapping, HandlerMethod handlerMethod, ServerWebExchange exchange);1542407418;Invoked when a matching mapping is found._@param mapping the matching mapping_@param handlerMethod the matching method_@param exchange the current exchange;protected void handleMatch(T mapping, HandlerMethod handlerMethod, ServerWebExchange exchange) {_	};invoked,when,a,matching,mapping,is,found,param,mapping,the,matching,mapping,param,handler,method,the,matching,method,param,exchange,the,current,exchange;protected,void,handle,match,t,mapping,handler,method,handler,method,server,web,exchange,exchange
AbstractHandlerMethodMapping -> protected void handleMatch(T mapping, HandlerMethod handlerMethod, ServerWebExchange exchange);1548427561;Invoked when a matching mapping is found._@param mapping the matching mapping_@param handlerMethod the matching method_@param exchange the current exchange;protected void handleMatch(T mapping, HandlerMethod handlerMethod, ServerWebExchange exchange) {_	};invoked,when,a,matching,mapping,is,found,param,mapping,the,matching,mapping,param,handler,method,the,matching,method,param,exchange,the,current,exchange;protected,void,handle,match,t,mapping,handler,method,handler,method,server,web,exchange,exchange
AbstractHandlerMethodMapping -> protected void handleMatch(T mapping, HandlerMethod handlerMethod, ServerWebExchange exchange);1551093473;Invoked when a matching mapping is found._@param mapping the matching mapping_@param handlerMethod the matching method_@param exchange the current exchange;protected void handleMatch(T mapping, HandlerMethod handlerMethod, ServerWebExchange exchange) {_	};invoked,when,a,matching,mapping,is,found,param,mapping,the,matching,mapping,param,handler,method,the,matching,method,param,exchange,the,current,exchange;protected,void,handle,match,t,mapping,handler,method,handler,method,server,web,exchange,exchange
AbstractHandlerMethodMapping -> @Nullable 	protected HandlerMethod handleNoMatch(Set<T> mappings, String lookupPath, ServerWebExchange exchange) 			throws Exception;1495868221;Invoked when no matching mapping is not found._@param mappings all registered mappings_@param lookupPath mapping lookup path within the current servlet mapping_@param exchange the current exchange_@return an alternative HandlerMethod or {@code null}_@throws Exception provides details that can be translated into an error status code;@Nullable_	protected HandlerMethod handleNoMatch(Set<T> mappings, String lookupPath, ServerWebExchange exchange)_			throws Exception {__		return null__	};invoked,when,no,matching,mapping,is,not,found,param,mappings,all,registered,mappings,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,exchange,the,current,exchange,return,an,alternative,handler,method,or,code,null,throws,exception,provides,details,that,can,be,translated,into,an,error,status,code;nullable,protected,handler,method,handle,no,match,set,t,mappings,string,lookup,path,server,web,exchange,exchange,throws,exception,return,null
AbstractHandlerMethodMapping -> @Nullable 	protected HandlerMethod handleNoMatch(Set<T> mappings, String lookupPath, ServerWebExchange exchange) 			throws Exception;1497039338;Invoked when no matching mapping is not found._@param mappings all registered mappings_@param lookupPath the lookup path within the current mapping_@param exchange the current exchange_@return an alternative HandlerMethod or {@code null}_@throws Exception provides details that can be translated into an error status code;@Nullable_	protected HandlerMethod handleNoMatch(Set<T> mappings, String lookupPath, ServerWebExchange exchange)_			throws Exception {__		return null__	};invoked,when,no,matching,mapping,is,not,found,param,mappings,all,registered,mappings,param,lookup,path,the,lookup,path,within,the,current,mapping,param,exchange,the,current,exchange,return,an,alternative,handler,method,or,code,null,throws,exception,provides,details,that,can,be,translated,into,an,error,status,code;nullable,protected,handler,method,handle,no,match,set,t,mappings,string,lookup,path,server,web,exchange,exchange,throws,exception,return,null
AbstractHandlerMethodMapping -> @Nullable 	protected HandlerMethod handleNoMatch(Set<T> mappings, String lookupPath, ServerWebExchange exchange) 			throws Exception;1497232764;Invoked when no matching mapping is not found._@param mappings all registered mappings_@param lookupPath the lookup path within the current mapping_@param exchange the current exchange_@return an alternative HandlerMethod or {@code null}_@throws Exception provides details that can be translated into an error status code;@Nullable_	protected HandlerMethod handleNoMatch(Set<T> mappings, String lookupPath, ServerWebExchange exchange)_			throws Exception {__		return null__	};invoked,when,no,matching,mapping,is,not,found,param,mappings,all,registered,mappings,param,lookup,path,the,lookup,path,within,the,current,mapping,param,exchange,the,current,exchange,return,an,alternative,handler,method,or,code,null,throws,exception,provides,details,that,can,be,translated,into,an,error,status,code;nullable,protected,handler,method,handle,no,match,set,t,mappings,string,lookup,path,server,web,exchange,exchange,throws,exception,return,null
AbstractHandlerMethodMapping -> @Nullable 	protected HandlerMethod handleNoMatch(Set<T> mappings, String lookupPath, ServerWebExchange exchange) 			throws Exception;1497251962;Invoked when no matching mapping is not found._@param mappings all registered mappings_@param lookupPath the lookup path within the current mapping_@param exchange the current exchange_@return an alternative HandlerMethod or {@code null}_@throws Exception provides details that can be translated into an error status code;@Nullable_	protected HandlerMethod handleNoMatch(Set<T> mappings, String lookupPath, ServerWebExchange exchange)_			throws Exception {__		return null__	};invoked,when,no,matching,mapping,is,not,found,param,mappings,all,registered,mappings,param,lookup,path,the,lookup,path,within,the,current,mapping,param,exchange,the,current,exchange,return,an,alternative,handler,method,or,code,null,throws,exception,provides,details,that,can,be,translated,into,an,error,status,code;nullable,protected,handler,method,handle,no,match,set,t,mappings,string,lookup,path,server,web,exchange,exchange,throws,exception,return,null
AbstractHandlerMethodMapping -> @Nullable 	protected HandlerMethod handleNoMatch(Set<T> mappings, String lookupPath, ServerWebExchange exchange) 			throws Exception;1497286385;Invoked when no matching mapping is not found._@param mappings all registered mappings_@param lookupPath the lookup path within the current mapping_@param exchange the current exchange_@return an alternative HandlerMethod or {@code null}_@throws Exception provides details that can be translated into an error status code;@Nullable_	protected HandlerMethod handleNoMatch(Set<T> mappings, String lookupPath, ServerWebExchange exchange)_			throws Exception {__		return null__	};invoked,when,no,matching,mapping,is,not,found,param,mappings,all,registered,mappings,param,lookup,path,the,lookup,path,within,the,current,mapping,param,exchange,the,current,exchange,return,an,alternative,handler,method,or,code,null,throws,exception,provides,details,that,can,be,translated,into,an,error,status,code;nullable,protected,handler,method,handle,no,match,set,t,mappings,string,lookup,path,server,web,exchange,exchange,throws,exception,return,null
AbstractHandlerMethodMapping -> @Nullable 	protected HandlerMethod handleNoMatch(Set<T> mappings, String lookupPath, ServerWebExchange exchange) 			throws Exception;1498756719;Invoked when no matching mapping is not found._@param mappings all registered mappings_@param lookupPath the lookup path within the current mapping_@param exchange the current exchange_@return an alternative HandlerMethod or {@code null}_@throws Exception provides details that can be translated into an error status code;@Nullable_	protected HandlerMethod handleNoMatch(Set<T> mappings, String lookupPath, ServerWebExchange exchange)_			throws Exception {__		return null__	};invoked,when,no,matching,mapping,is,not,found,param,mappings,all,registered,mappings,param,lookup,path,the,lookup,path,within,the,current,mapping,param,exchange,the,current,exchange,return,an,alternative,handler,method,or,code,null,throws,exception,provides,details,that,can,be,translated,into,an,error,status,code;nullable,protected,handler,method,handle,no,match,set,t,mappings,string,lookup,path,server,web,exchange,exchange,throws,exception,return,null
AbstractHandlerMethodMapping -> @Nullable 	protected HandlerMethod handleNoMatch(Set<T> mappings, String lookupPath, ServerWebExchange exchange) 			throws Exception;1498861175;Invoked when no matching mapping is not found._@param mappings all registered mappings_@param lookupPath the lookup path within the current mapping_@param exchange the current exchange_@return an alternative HandlerMethod or {@code null}_@throws Exception provides details that can be translated into an error status code;@Nullable_	protected HandlerMethod handleNoMatch(Set<T> mappings, String lookupPath, ServerWebExchange exchange)_			throws Exception {__		return null__	};invoked,when,no,matching,mapping,is,not,found,param,mappings,all,registered,mappings,param,lookup,path,the,lookup,path,within,the,current,mapping,param,exchange,the,current,exchange,return,an,alternative,handler,method,or,code,null,throws,exception,provides,details,that,can,be,translated,into,an,error,status,code;nullable,protected,handler,method,handle,no,match,set,t,mappings,string,lookup,path,server,web,exchange,exchange,throws,exception,return,null
AbstractHandlerMethodMapping -> protected abstract Set<String> getMappingPathPatterns(T mapping)_;1485986572;Extract and return the URL paths contained in a mapping.;protected abstract Set<String> getMappingPathPatterns(T mapping)_;extract,and,return,the,url,paths,contained,in,a,mapping;protected,abstract,set,string,get,mapping,path,patterns,t,mapping
AbstractHandlerMethodMapping -> protected abstract Set<String> getMappingPathPatterns(T mapping)_;1486674586;Extract and return the URL paths contained in a mapping.;protected abstract Set<String> getMappingPathPatterns(T mapping)_;extract,and,return,the,url,paths,contained,in,a,mapping;protected,abstract,set,string,get,mapping,path,patterns,t,mapping
AbstractHandlerMethodMapping -> protected abstract Set<String> getMappingPathPatterns(T mapping)_;1486747801;Extract and return the URL paths contained in a mapping.;protected abstract Set<String> getMappingPathPatterns(T mapping)_;extract,and,return,the,url,paths,contained,in,a,mapping;protected,abstract,set,string,get,mapping,path,patterns,t,mapping
AbstractHandlerMethodMapping -> protected abstract Set<String> getMappingPathPatterns(T mapping)_;1489852683;Extract and return the URL paths contained in a mapping.;protected abstract Set<String> getMappingPathPatterns(T mapping)_;extract,and,return,the,url,paths,contained,in,a,mapping;protected,abstract,set,string,get,mapping,path,patterns,t,mapping
AbstractHandlerMethodMapping -> protected abstract Set<String> getMappingPathPatterns(T mapping)_;1492542679;Extract and return the URL paths contained in a mapping.;protected abstract Set<String> getMappingPathPatterns(T mapping)_;extract,and,return,the,url,paths,contained,in,a,mapping;protected,abstract,set,string,get,mapping,path,patterns,t,mapping
AbstractHandlerMethodMapping -> protected abstract Set<String> getMappingPathPatterns(T mapping)_;1493370460;Extract and return the URL paths contained in a mapping.;protected abstract Set<String> getMappingPathPatterns(T mapping)_;extract,and,return,the,url,paths,contained,in,a,mapping;protected,abstract,set,string,get,mapping,path,patterns,t,mapping
AbstractHandlerMethodMapping -> protected abstract Set<String> getMappingPathPatterns(T mapping)_;1493391766;Extract and return the URL paths contained in a mapping.;protected abstract Set<String> getMappingPathPatterns(T mapping)_;extract,and,return,the,url,paths,contained,in,a,mapping;protected,abstract,set,string,get,mapping,path,patterns,t,mapping
AbstractHandlerMethodMapping -> protected abstract Set<String> getMappingPathPatterns(T mapping)_;1493755795;Extract and return the URL paths contained in a mapping.;protected abstract Set<String> getMappingPathPatterns(T mapping)_;extract,and,return,the,url,paths,contained,in,a,mapping;protected,abstract,set,string,get,mapping,path,patterns,t,mapping
AbstractHandlerMethodMapping -> protected abstract Set<String> getMappingPathPatterns(T mapping)_;1495868221;Extract and return the URL paths contained in a mapping.;protected abstract Set<String> getMappingPathPatterns(T mapping)_;extract,and,return,the,url,paths,contained,in,a,mapping;protected,abstract,set,string,get,mapping,path,patterns,t,mapping
AbstractHandlerMethodMapping -> protected abstract Set<String> getMappingPathPatterns(T mapping)_;1496334664;Extract and return the URL paths contained in a mapping.;protected abstract Set<String> getMappingPathPatterns(T mapping)_;extract,and,return,the,url,paths,contained,in,a,mapping;protected,abstract,set,string,get,mapping,path,patterns,t,mapping
AbstractHandlerMethodMapping -> protected abstract Set<String> getMappingPathPatterns(T mapping)_;1496430942;Extract and return the URL paths contained in a mapping.;protected abstract Set<String> getMappingPathPatterns(T mapping)_;extract,and,return,the,url,paths,contained,in,a,mapping;protected,abstract,set,string,get,mapping,path,patterns,t,mapping
AbstractHandlerMethodMapping -> protected abstract Set<String> getMappingPathPatterns(T mapping)_;1496837955;Extract and return the URL paths contained in a mapping.;protected abstract Set<String> getMappingPathPatterns(T mapping)_;extract,and,return,the,url,paths,contained,in,a,mapping;protected,abstract,set,string,get,mapping,path,patterns,t,mapping
AbstractHandlerMethodMapping -> protected abstract Set<String> getMappingPathPatterns(T mapping)_;1497039338;Extract and return the URL paths contained in a mapping.;protected abstract Set<String> getMappingPathPatterns(T mapping)_;extract,and,return,the,url,paths,contained,in,a,mapping;protected,abstract,set,string,get,mapping,path,patterns,t,mapping
AbstractHandlerMethodMapping -> protected abstract Set<String> getMappingPathPatterns(T mapping)_;1497232764;Extract and return the URL paths contained in a mapping.;protected abstract Set<String> getMappingPathPatterns(T mapping)_;extract,and,return,the,url,paths,contained,in,a,mapping;protected,abstract,set,string,get,mapping,path,patterns,t,mapping
AbstractHandlerMethodMapping -> protected abstract Set<String> getMappingPathPatterns(T mapping)_;1497251962;Extract and return the URL paths contained in a mapping.;protected abstract Set<String> getMappingPathPatterns(T mapping)_;extract,and,return,the,url,paths,contained,in,a,mapping;protected,abstract,set,string,get,mapping,path,patterns,t,mapping
AbstractHandlerMethodMapping -> protected abstract Set<String> getMappingPathPatterns(T mapping)_;1497286385;Extract and return the URL paths contained in a mapping.;protected abstract Set<String> getMappingPathPatterns(T mapping)_;extract,and,return,the,url,paths,contained,in,a,mapping;protected,abstract,set,string,get,mapping,path,patterns,t,mapping
AbstractHandlerMethodMapping -> protected abstract Set<String> getMappingPathPatterns(T mapping)_;1498756719;Extract and return the URL paths contained in a mapping.;protected abstract Set<String> getMappingPathPatterns(T mapping)_;extract,and,return,the,url,paths,contained,in,a,mapping;protected,abstract,set,string,get,mapping,path,patterns,t,mapping
AbstractHandlerMethodMapping -> MappingRegistry -> public CorsConfiguration getCorsConfiguration(HandlerMethod handlerMethod);1485986572;Return CORS configuration. Thread-safe for concurrent use.;public CorsConfiguration getCorsConfiguration(HandlerMethod handlerMethod) {_			HandlerMethod original = handlerMethod.getResolvedFromHandlerMethod()__			return this.corsLookup.get(original != null ? original : handlerMethod)__		};return,cors,configuration,thread,safe,for,concurrent,use;public,cors,configuration,get,cors,configuration,handler,method,handler,method,handler,method,original,handler,method,get,resolved,from,handler,method,return,this,cors,lookup,get,original,null,original,handler,method
AbstractHandlerMethodMapping -> MappingRegistry -> public CorsConfiguration getCorsConfiguration(HandlerMethod handlerMethod);1486635693;Return CORS configuration. Thread-safe for concurrent use.;public CorsConfiguration getCorsConfiguration(HandlerMethod handlerMethod) {_			HandlerMethod original = handlerMethod.getResolvedFromHandlerMethod()__			return this.corsLookup.get(original != null ? original : handlerMethod)__		};return,cors,configuration,thread,safe,for,concurrent,use;public,cors,configuration,get,cors,configuration,handler,method,handler,method,handler,method,original,handler,method,get,resolved,from,handler,method,return,this,cors,lookup,get,original,null,original,handler,method
AbstractHandlerMethodMapping -> MappingRegistry -> public CorsConfiguration getCorsConfiguration(HandlerMethod handlerMethod);1486674586;Return CORS configuration. Thread-safe for concurrent use.;public CorsConfiguration getCorsConfiguration(HandlerMethod handlerMethod) {_			HandlerMethod original = handlerMethod.getResolvedFromHandlerMethod()__			return this.corsLookup.get(original != null ? original : handlerMethod)__		};return,cors,configuration,thread,safe,for,concurrent,use;public,cors,configuration,get,cors,configuration,handler,method,handler,method,handler,method,original,handler,method,get,resolved,from,handler,method,return,this,cors,lookup,get,original,null,original,handler,method
AbstractHandlerMethodMapping -> MappingRegistry -> public CorsConfiguration getCorsConfiguration(HandlerMethod handlerMethod);1486747801;Return CORS configuration. Thread-safe for concurrent use.;public CorsConfiguration getCorsConfiguration(HandlerMethod handlerMethod) {_			HandlerMethod original = handlerMethod.getResolvedFromHandlerMethod()__			return this.corsLookup.get(original != null ? original : handlerMethod)__		};return,cors,configuration,thread,safe,for,concurrent,use;public,cors,configuration,get,cors,configuration,handler,method,handler,method,handler,method,original,handler,method,get,resolved,from,handler,method,return,this,cors,lookup,get,original,null,original,handler,method
AbstractHandlerMethodMapping -> MappingRegistry -> public CorsConfiguration getCorsConfiguration(HandlerMethod handlerMethod);1489852683;Return CORS configuration. Thread-safe for concurrent use.;public CorsConfiguration getCorsConfiguration(HandlerMethod handlerMethod) {_			HandlerMethod original = handlerMethod.getResolvedFromHandlerMethod()__			return this.corsLookup.get(original != null ? original : handlerMethod)__		};return,cors,configuration,thread,safe,for,concurrent,use;public,cors,configuration,get,cors,configuration,handler,method,handler,method,handler,method,original,handler,method,get,resolved,from,handler,method,return,this,cors,lookup,get,original,null,original,handler,method
AbstractHandlerMethodMapping -> MappingRegistry -> public CorsConfiguration getCorsConfiguration(HandlerMethod handlerMethod);1492542679;Return CORS configuration. Thread-safe for concurrent use.;public CorsConfiguration getCorsConfiguration(HandlerMethod handlerMethod) {_			HandlerMethod original = handlerMethod.getResolvedFromHandlerMethod()__			return this.corsLookup.get(original != null ? original : handlerMethod)__		};return,cors,configuration,thread,safe,for,concurrent,use;public,cors,configuration,get,cors,configuration,handler,method,handler,method,handler,method,original,handler,method,get,resolved,from,handler,method,return,this,cors,lookup,get,original,null,original,handler,method
AbstractHandlerMethodMapping -> MappingRegistry -> public CorsConfiguration getCorsConfiguration(HandlerMethod handlerMethod);1493370460;Return CORS configuration. Thread-safe for concurrent use.;public CorsConfiguration getCorsConfiguration(HandlerMethod handlerMethod) {_			HandlerMethod original = handlerMethod.getResolvedFromHandlerMethod()__			return this.corsLookup.get(original != null ? original : handlerMethod)__		};return,cors,configuration,thread,safe,for,concurrent,use;public,cors,configuration,get,cors,configuration,handler,method,handler,method,handler,method,original,handler,method,get,resolved,from,handler,method,return,this,cors,lookup,get,original,null,original,handler,method
AbstractHandlerMethodMapping -> MappingRegistry -> public CorsConfiguration getCorsConfiguration(HandlerMethod handlerMethod);1493391766;Return CORS configuration. Thread-safe for concurrent use.;public CorsConfiguration getCorsConfiguration(HandlerMethod handlerMethod) {_			HandlerMethod original = handlerMethod.getResolvedFromHandlerMethod()__			return this.corsLookup.get(original != null ? original : handlerMethod)__		};return,cors,configuration,thread,safe,for,concurrent,use;public,cors,configuration,get,cors,configuration,handler,method,handler,method,handler,method,original,handler,method,get,resolved,from,handler,method,return,this,cors,lookup,get,original,null,original,handler,method
AbstractHandlerMethodMapping -> MappingRegistry -> public CorsConfiguration getCorsConfiguration(HandlerMethod handlerMethod);1493755795;Return CORS configuration. Thread-safe for concurrent use.;public CorsConfiguration getCorsConfiguration(HandlerMethod handlerMethod) {_			HandlerMethod original = handlerMethod.getResolvedFromHandlerMethod()__			return this.corsLookup.get(original != null ? original : handlerMethod)__		};return,cors,configuration,thread,safe,for,concurrent,use;public,cors,configuration,get,cors,configuration,handler,method,handler,method,handler,method,original,handler,method,get,resolved,from,handler,method,return,this,cors,lookup,get,original,null,original,handler,method
AbstractHandlerMethodMapping -> MappingRegistry -> public CorsConfiguration getCorsConfiguration(HandlerMethod handlerMethod);1495868221;Return CORS configuration. Thread-safe for concurrent use.;public CorsConfiguration getCorsConfiguration(HandlerMethod handlerMethod) {_			HandlerMethod original = handlerMethod.getResolvedFromHandlerMethod()__			return this.corsLookup.get(original != null ? original : handlerMethod)__		};return,cors,configuration,thread,safe,for,concurrent,use;public,cors,configuration,get,cors,configuration,handler,method,handler,method,handler,method,original,handler,method,get,resolved,from,handler,method,return,this,cors,lookup,get,original,null,original,handler,method
AbstractHandlerMethodMapping -> MappingRegistry -> public CorsConfiguration getCorsConfiguration(HandlerMethod handlerMethod);1496334664;Return CORS configuration. Thread-safe for concurrent use.;public CorsConfiguration getCorsConfiguration(HandlerMethod handlerMethod) {_			HandlerMethod original = handlerMethod.getResolvedFromHandlerMethod()__			return this.corsLookup.get(original != null ? original : handlerMethod)__		};return,cors,configuration,thread,safe,for,concurrent,use;public,cors,configuration,get,cors,configuration,handler,method,handler,method,handler,method,original,handler,method,get,resolved,from,handler,method,return,this,cors,lookup,get,original,null,original,handler,method
AbstractHandlerMethodMapping -> MappingRegistry -> public CorsConfiguration getCorsConfiguration(HandlerMethod handlerMethod);1496430942;Return CORS configuration. Thread-safe for concurrent use.;public CorsConfiguration getCorsConfiguration(HandlerMethod handlerMethod) {_			HandlerMethod original = handlerMethod.getResolvedFromHandlerMethod()__			return this.corsLookup.get(original != null ? original : handlerMethod)__		};return,cors,configuration,thread,safe,for,concurrent,use;public,cors,configuration,get,cors,configuration,handler,method,handler,method,handler,method,original,handler,method,get,resolved,from,handler,method,return,this,cors,lookup,get,original,null,original,handler,method
AbstractHandlerMethodMapping -> MappingRegistry -> public CorsConfiguration getCorsConfiguration(HandlerMethod handlerMethod);1496837955;Return CORS configuration. Thread-safe for concurrent use.;public CorsConfiguration getCorsConfiguration(HandlerMethod handlerMethod) {_			HandlerMethod original = handlerMethod.getResolvedFromHandlerMethod()__			return this.corsLookup.get(original != null ? original : handlerMethod)__		};return,cors,configuration,thread,safe,for,concurrent,use;public,cors,configuration,get,cors,configuration,handler,method,handler,method,handler,method,original,handler,method,get,resolved,from,handler,method,return,this,cors,lookup,get,original,null,original,handler,method
AbstractHandlerMethodMapping -> MappingRegistry -> public CorsConfiguration getCorsConfiguration(HandlerMethod handlerMethod);1497039338;Return CORS configuration. Thread-safe for concurrent use.;public CorsConfiguration getCorsConfiguration(HandlerMethod handlerMethod) {_			HandlerMethod original = handlerMethod.getResolvedFromHandlerMethod()__			return this.corsLookup.get(original != null ? original : handlerMethod)__		};return,cors,configuration,thread,safe,for,concurrent,use;public,cors,configuration,get,cors,configuration,handler,method,handler,method,handler,method,original,handler,method,get,resolved,from,handler,method,return,this,cors,lookup,get,original,null,original,handler,method
AbstractHandlerMethodMapping -> MappingRegistry -> public CorsConfiguration getCorsConfiguration(HandlerMethod handlerMethod);1497232764;Return CORS configuration. Thread-safe for concurrent use.;public CorsConfiguration getCorsConfiguration(HandlerMethod handlerMethod) {_			HandlerMethod original = handlerMethod.getResolvedFromHandlerMethod()__			return this.corsLookup.get(original != null ? original : handlerMethod)__		};return,cors,configuration,thread,safe,for,concurrent,use;public,cors,configuration,get,cors,configuration,handler,method,handler,method,handler,method,original,handler,method,get,resolved,from,handler,method,return,this,cors,lookup,get,original,null,original,handler,method
AbstractHandlerMethodMapping -> MappingRegistry -> public CorsConfiguration getCorsConfiguration(HandlerMethod handlerMethod);1497251962;Return CORS configuration. Thread-safe for concurrent use.;public CorsConfiguration getCorsConfiguration(HandlerMethod handlerMethod) {_			HandlerMethod original = handlerMethod.getResolvedFromHandlerMethod()__			return this.corsLookup.get(original != null ? original : handlerMethod)__		};return,cors,configuration,thread,safe,for,concurrent,use;public,cors,configuration,get,cors,configuration,handler,method,handler,method,handler,method,original,handler,method,get,resolved,from,handler,method,return,this,cors,lookup,get,original,null,original,handler,method
AbstractHandlerMethodMapping -> MappingRegistry -> public CorsConfiguration getCorsConfiguration(HandlerMethod handlerMethod);1497286385;Return CORS configuration. Thread-safe for concurrent use.;public CorsConfiguration getCorsConfiguration(HandlerMethod handlerMethod) {_			HandlerMethod original = handlerMethod.getResolvedFromHandlerMethod()__			return this.corsLookup.get(original != null ? original : handlerMethod)__		};return,cors,configuration,thread,safe,for,concurrent,use;public,cors,configuration,get,cors,configuration,handler,method,handler,method,handler,method,original,handler,method,get,resolved,from,handler,method,return,this,cors,lookup,get,original,null,original,handler,method
AbstractHandlerMethodMapping -> MappingRegistry -> public CorsConfiguration getCorsConfiguration(HandlerMethod handlerMethod);1498756719;Return CORS configuration. Thread-safe for concurrent use.;public CorsConfiguration getCorsConfiguration(HandlerMethod handlerMethod) {_			HandlerMethod original = handlerMethod.getResolvedFromHandlerMethod()__			return this.corsLookup.get(original != null ? original : handlerMethod)__		};return,cors,configuration,thread,safe,for,concurrent,use;public,cors,configuration,get,cors,configuration,handler,method,handler,method,handler,method,original,handler,method,get,resolved,from,handler,method,return,this,cors,lookup,get,original,null,original,handler,method
AbstractHandlerMethodMapping -> MappingRegistry -> public CorsConfiguration getCorsConfiguration(HandlerMethod handlerMethod);1498861175;Return CORS configuration. Thread-safe for concurrent use.;public CorsConfiguration getCorsConfiguration(HandlerMethod handlerMethod) {_			HandlerMethod original = handlerMethod.getResolvedFromHandlerMethod()__			return this.corsLookup.get(original != null ? original : handlerMethod)__		};return,cors,configuration,thread,safe,for,concurrent,use;public,cors,configuration,get,cors,configuration,handler,method,handler,method,handler,method,original,handler,method,get,resolved,from,handler,method,return,this,cors,lookup,get,original,null,original,handler,method
AbstractHandlerMethodMapping -> MappingRegistry -> public CorsConfiguration getCorsConfiguration(HandlerMethod handlerMethod);1498953917;Return CORS configuration. Thread-safe for concurrent use.;public CorsConfiguration getCorsConfiguration(HandlerMethod handlerMethod) {_			HandlerMethod original = handlerMethod.getResolvedFromHandlerMethod()__			return this.corsLookup.get(original != null ? original : handlerMethod)__		};return,cors,configuration,thread,safe,for,concurrent,use;public,cors,configuration,get,cors,configuration,handler,method,handler,method,handler,method,original,handler,method,get,resolved,from,handler,method,return,this,cors,lookup,get,original,null,original,handler,method
AbstractHandlerMethodMapping -> MappingRegistry -> public CorsConfiguration getCorsConfiguration(HandlerMethod handlerMethod);1516617801;Return CORS configuration. Thread-safe for concurrent use.;public CorsConfiguration getCorsConfiguration(HandlerMethod handlerMethod) {_			HandlerMethod original = handlerMethod.getResolvedFromHandlerMethod()__			return this.corsLookup.get(original != null ? original : handlerMethod)__		};return,cors,configuration,thread,safe,for,concurrent,use;public,cors,configuration,get,cors,configuration,handler,method,handler,method,handler,method,original,handler,method,get,resolved,from,handler,method,return,this,cors,lookup,get,original,null,original,handler,method
AbstractHandlerMethodMapping -> MappingRegistry -> public CorsConfiguration getCorsConfiguration(HandlerMethod handlerMethod);1529721864;Return CORS configuration. Thread-safe for concurrent use.;public CorsConfiguration getCorsConfiguration(HandlerMethod handlerMethod) {_			HandlerMethod original = handlerMethod.getResolvedFromHandlerMethod()__			return this.corsLookup.get(original != null ? original : handlerMethod)__		};return,cors,configuration,thread,safe,for,concurrent,use;public,cors,configuration,get,cors,configuration,handler,method,handler,method,handler,method,original,handler,method,get,resolved,from,handler,method,return,this,cors,lookup,get,original,null,original,handler,method
AbstractHandlerMethodMapping -> MappingRegistry -> public CorsConfiguration getCorsConfiguration(HandlerMethod handlerMethod);1530174524;Return CORS configuration. Thread-safe for concurrent use.;public CorsConfiguration getCorsConfiguration(HandlerMethod handlerMethod) {_			HandlerMethod original = handlerMethod.getResolvedFromHandlerMethod()__			return this.corsLookup.get(original != null ? original : handlerMethod)__		};return,cors,configuration,thread,safe,for,concurrent,use;public,cors,configuration,get,cors,configuration,handler,method,handler,method,handler,method,original,handler,method,get,resolved,from,handler,method,return,this,cors,lookup,get,original,null,original,handler,method
AbstractHandlerMethodMapping -> MappingRegistry -> public CorsConfiguration getCorsConfiguration(HandlerMethod handlerMethod);1530793633;Return CORS configuration. Thread-safe for concurrent use.;public CorsConfiguration getCorsConfiguration(HandlerMethod handlerMethod) {_			HandlerMethod original = handlerMethod.getResolvedFromHandlerMethod()__			return this.corsLookup.get(original != null ? original : handlerMethod)__		};return,cors,configuration,thread,safe,for,concurrent,use;public,cors,configuration,get,cors,configuration,handler,method,handler,method,handler,method,original,handler,method,get,resolved,from,handler,method,return,this,cors,lookup,get,original,null,original,handler,method
AbstractHandlerMethodMapping -> MappingRegistry -> public CorsConfiguration getCorsConfiguration(HandlerMethod handlerMethod);1542407418;Return CORS configuration. Thread-safe for concurrent use.;public CorsConfiguration getCorsConfiguration(HandlerMethod handlerMethod) {_			HandlerMethod original = handlerMethod.getResolvedFromHandlerMethod()__			return this.corsLookup.get(original != null ? original : handlerMethod)__		};return,cors,configuration,thread,safe,for,concurrent,use;public,cors,configuration,get,cors,configuration,handler,method,handler,method,handler,method,original,handler,method,get,resolved,from,handler,method,return,this,cors,lookup,get,original,null,original,handler,method
AbstractHandlerMethodMapping -> MappingRegistry -> public CorsConfiguration getCorsConfiguration(HandlerMethod handlerMethod);1548427561;Return CORS configuration. Thread-safe for concurrent use.;public CorsConfiguration getCorsConfiguration(HandlerMethod handlerMethod) {_			HandlerMethod original = handlerMethod.getResolvedFromHandlerMethod()__			return this.corsLookup.get(original != null ? original : handlerMethod)__		};return,cors,configuration,thread,safe,for,concurrent,use;public,cors,configuration,get,cors,configuration,handler,method,handler,method,handler,method,original,handler,method,get,resolved,from,handler,method,return,this,cors,lookup,get,original,null,original,handler,method
AbstractHandlerMethodMapping -> MappingRegistry -> public CorsConfiguration getCorsConfiguration(HandlerMethod handlerMethod);1551093473;Return CORS configuration. Thread-safe for concurrent use.;public CorsConfiguration getCorsConfiguration(HandlerMethod handlerMethod) {_			HandlerMethod original = handlerMethod.getResolvedFromHandlerMethod()__			return this.corsLookup.get(original != null ? original : handlerMethod)__		};return,cors,configuration,thread,safe,for,concurrent,use;public,cors,configuration,get,cors,configuration,handler,method,handler,method,handler,method,original,handler,method,get,resolved,from,handler,method,return,this,cors,lookup,get,original,null,original,handler,method
AbstractHandlerMethodMapping -> public void unregisterMapping(T mapping);1485986572;Un-register the given mapping._<p>This method may be invoked at runtime after initialization has completed._@param mapping the mapping to unregister;public void unregisterMapping(T mapping) {_		this.mappingRegistry.unregister(mapping)__	};un,register,the,given,mapping,p,this,method,may,be,invoked,at,runtime,after,initialization,has,completed,param,mapping,the,mapping,to,unregister;public,void,unregister,mapping,t,mapping,this,mapping,registry,unregister,mapping
AbstractHandlerMethodMapping -> public void unregisterMapping(T mapping);1486635693;Un-register the given mapping._<p>This method may be invoked at runtime after initialization has completed._@param mapping the mapping to unregister;public void unregisterMapping(T mapping) {_		this.readWriteLock.writeLock().lock()__		try {_			getMappingPathPatterns(mapping)_					.forEach(pathPattern -> getPatternRegistry().remove(pathPattern))__			this.mappingRegistry.unregister(mapping)__		}_		finally {_			this.readWriteLock.writeLock().unlock()__		}_	};un,register,the,given,mapping,p,this,method,may,be,invoked,at,runtime,after,initialization,has,completed,param,mapping,the,mapping,to,unregister;public,void,unregister,mapping,t,mapping,this,read,write,lock,write,lock,lock,try,get,mapping,path,patterns,mapping,for,each,path,pattern,get,pattern,registry,remove,path,pattern,this,mapping,registry,unregister,mapping,finally,this,read,write,lock,write,lock,unlock
AbstractHandlerMethodMapping -> public void unregisterMapping(T mapping);1486674586;Un-register the given mapping._<p>This method may be invoked at runtime after initialization has completed._@param mapping the mapping to unregister;public void unregisterMapping(T mapping) {_		this.readWriteLock.writeLock().lock()__		try {_			getMappingPathPatterns(mapping).forEach(pattern -> {_				getPatternRegistry().unregister(pattern).forEach(_						pathPattern -> this.mappingLookup.remove(pathPattern, mapping)_				)__			})__			this.mappingRegistry.unregister(mapping)__		}_		finally {_			this.readWriteLock.writeLock().unlock()__		}_	};un,register,the,given,mapping,p,this,method,may,be,invoked,at,runtime,after,initialization,has,completed,param,mapping,the,mapping,to,unregister;public,void,unregister,mapping,t,mapping,this,read,write,lock,write,lock,lock,try,get,mapping,path,patterns,mapping,for,each,pattern,get,pattern,registry,unregister,pattern,for,each,path,pattern,this,mapping,lookup,remove,path,pattern,mapping,this,mapping,registry,unregister,mapping,finally,this,read,write,lock,write,lock,unlock
AbstractHandlerMethodMapping -> public void unregisterMapping(T mapping);1486747801;Un-register the given mapping._<p>This method may be invoked at runtime after initialization has completed._@param mapping the mapping to unregister;public void unregisterMapping(T mapping) {_		this.mappingRegistry.unregister(mapping)__	};un,register,the,given,mapping,p,this,method,may,be,invoked,at,runtime,after,initialization,has,completed,param,mapping,the,mapping,to,unregister;public,void,unregister,mapping,t,mapping,this,mapping,registry,unregister,mapping
AbstractHandlerMethodMapping -> public void unregisterMapping(T mapping);1489852683;Un-register the given mapping._<p>This method may be invoked at runtime after initialization has completed._@param mapping the mapping to unregister;public void unregisterMapping(T mapping) {_		this.mappingRegistry.unregister(mapping)__	};un,register,the,given,mapping,p,this,method,may,be,invoked,at,runtime,after,initialization,has,completed,param,mapping,the,mapping,to,unregister;public,void,unregister,mapping,t,mapping,this,mapping,registry,unregister,mapping
AbstractHandlerMethodMapping -> public void unregisterMapping(T mapping);1492542679;Un-register the given mapping._<p>This method may be invoked at runtime after initialization has completed._@param mapping the mapping to unregister;public void unregisterMapping(T mapping) {_		this.mappingRegistry.unregister(mapping)__	};un,register,the,given,mapping,p,this,method,may,be,invoked,at,runtime,after,initialization,has,completed,param,mapping,the,mapping,to,unregister;public,void,unregister,mapping,t,mapping,this,mapping,registry,unregister,mapping
AbstractHandlerMethodMapping -> public void unregisterMapping(T mapping);1493370460;Un-register the given mapping._<p>This method may be invoked at runtime after initialization has completed._@param mapping the mapping to unregister;public void unregisterMapping(T mapping) {_		this.mappingRegistry.unregister(mapping)__	};un,register,the,given,mapping,p,this,method,may,be,invoked,at,runtime,after,initialization,has,completed,param,mapping,the,mapping,to,unregister;public,void,unregister,mapping,t,mapping,this,mapping,registry,unregister,mapping
AbstractHandlerMethodMapping -> public void unregisterMapping(T mapping);1493391766;Un-register the given mapping._<p>This method may be invoked at runtime after initialization has completed._@param mapping the mapping to unregister;public void unregisterMapping(T mapping) {_		this.mappingRegistry.unregister(mapping)__	};un,register,the,given,mapping,p,this,method,may,be,invoked,at,runtime,after,initialization,has,completed,param,mapping,the,mapping,to,unregister;public,void,unregister,mapping,t,mapping,this,mapping,registry,unregister,mapping
AbstractHandlerMethodMapping -> public void unregisterMapping(T mapping);1493755795;Un-register the given mapping._<p>This method may be invoked at runtime after initialization has completed._@param mapping the mapping to unregister;public void unregisterMapping(T mapping) {_		this.mappingRegistry.unregister(mapping)__	};un,register,the,given,mapping,p,this,method,may,be,invoked,at,runtime,after,initialization,has,completed,param,mapping,the,mapping,to,unregister;public,void,unregister,mapping,t,mapping,this,mapping,registry,unregister,mapping
AbstractHandlerMethodMapping -> public void unregisterMapping(T mapping);1495868221;Un-register the given mapping._<p>This method may be invoked at runtime after initialization has completed._@param mapping the mapping to unregister;public void unregisterMapping(T mapping) {_		this.mappingRegistry.unregister(mapping)__	};un,register,the,given,mapping,p,this,method,may,be,invoked,at,runtime,after,initialization,has,completed,param,mapping,the,mapping,to,unregister;public,void,unregister,mapping,t,mapping,this,mapping,registry,unregister,mapping
AbstractHandlerMethodMapping -> public void unregisterMapping(T mapping);1496334664;Un-register the given mapping._<p>This method may be invoked at runtime after initialization has completed._@param mapping the mapping to unregister;public void unregisterMapping(T mapping) {_		this.mappingRegistry.unregister(mapping)__	};un,register,the,given,mapping,p,this,method,may,be,invoked,at,runtime,after,initialization,has,completed,param,mapping,the,mapping,to,unregister;public,void,unregister,mapping,t,mapping,this,mapping,registry,unregister,mapping
AbstractHandlerMethodMapping -> public void unregisterMapping(T mapping);1496430942;Un-register the given mapping._<p>This method may be invoked at runtime after initialization has completed._@param mapping the mapping to unregister;public void unregisterMapping(T mapping) {_		this.mappingRegistry.unregister(mapping)__	};un,register,the,given,mapping,p,this,method,may,be,invoked,at,runtime,after,initialization,has,completed,param,mapping,the,mapping,to,unregister;public,void,unregister,mapping,t,mapping,this,mapping,registry,unregister,mapping
AbstractHandlerMethodMapping -> public void unregisterMapping(T mapping);1496837955;Un-register the given mapping._<p>This method may be invoked at runtime after initialization has completed._@param mapping the mapping to unregister;public void unregisterMapping(T mapping) {_		this.mappingRegistry.unregister(mapping)__	};un,register,the,given,mapping,p,this,method,may,be,invoked,at,runtime,after,initialization,has,completed,param,mapping,the,mapping,to,unregister;public,void,unregister,mapping,t,mapping,this,mapping,registry,unregister,mapping
AbstractHandlerMethodMapping -> public void unregisterMapping(T mapping);1497039338;Un-register the given mapping._<p>This method may be invoked at runtime after initialization has completed._@param mapping the mapping to unregister;public void unregisterMapping(T mapping) {_		this.mappingRegistry.unregister(mapping)__	};un,register,the,given,mapping,p,this,method,may,be,invoked,at,runtime,after,initialization,has,completed,param,mapping,the,mapping,to,unregister;public,void,unregister,mapping,t,mapping,this,mapping,registry,unregister,mapping
AbstractHandlerMethodMapping -> public void unregisterMapping(T mapping);1497232764;Un-register the given mapping._<p>This method may be invoked at runtime after initialization has completed._@param mapping the mapping to unregister;public void unregisterMapping(T mapping) {_		this.mappingRegistry.unregister(mapping)__	};un,register,the,given,mapping,p,this,method,may,be,invoked,at,runtime,after,initialization,has,completed,param,mapping,the,mapping,to,unregister;public,void,unregister,mapping,t,mapping,this,mapping,registry,unregister,mapping
AbstractHandlerMethodMapping -> public void unregisterMapping(T mapping);1497251962;Un-register the given mapping._<p>This method may be invoked at runtime after initialization has completed._@param mapping the mapping to unregister;public void unregisterMapping(T mapping) {_		this.mappingRegistry.unregister(mapping)__	};un,register,the,given,mapping,p,this,method,may,be,invoked,at,runtime,after,initialization,has,completed,param,mapping,the,mapping,to,unregister;public,void,unregister,mapping,t,mapping,this,mapping,registry,unregister,mapping
AbstractHandlerMethodMapping -> public void unregisterMapping(T mapping);1497286385;Un-register the given mapping._<p>This method may be invoked at runtime after initialization has completed._@param mapping the mapping to unregister;public void unregisterMapping(T mapping) {_		this.mappingRegistry.unregister(mapping)__	};un,register,the,given,mapping,p,this,method,may,be,invoked,at,runtime,after,initialization,has,completed,param,mapping,the,mapping,to,unregister;public,void,unregister,mapping,t,mapping,this,mapping,registry,unregister,mapping
AbstractHandlerMethodMapping -> public void unregisterMapping(T mapping);1498756719;Un-register the given mapping._<p>This method may be invoked at runtime after initialization has completed._@param mapping the mapping to unregister;public void unregisterMapping(T mapping) {_		this.mappingRegistry.unregister(mapping)__	};un,register,the,given,mapping,p,this,method,may,be,invoked,at,runtime,after,initialization,has,completed,param,mapping,the,mapping,to,unregister;public,void,unregister,mapping,t,mapping,this,mapping,registry,unregister,mapping
AbstractHandlerMethodMapping -> public void unregisterMapping(T mapping);1498861175;Un-register the given mapping._<p>This method may be invoked at runtime after initialization has completed._@param mapping the mapping to unregister;public void unregisterMapping(T mapping) {_		this.mappingRegistry.unregister(mapping)__	};un,register,the,given,mapping,p,this,method,may,be,invoked,at,runtime,after,initialization,has,completed,param,mapping,the,mapping,to,unregister;public,void,unregister,mapping,t,mapping,this,mapping,registry,unregister,mapping
AbstractHandlerMethodMapping -> public void unregisterMapping(T mapping);1498953917;Un-register the given mapping._<p>This method may be invoked at runtime after initialization has completed._@param mapping the mapping to unregister;public void unregisterMapping(T mapping) {_		this.mappingRegistry.unregister(mapping)__	};un,register,the,given,mapping,p,this,method,may,be,invoked,at,runtime,after,initialization,has,completed,param,mapping,the,mapping,to,unregister;public,void,unregister,mapping,t,mapping,this,mapping,registry,unregister,mapping
AbstractHandlerMethodMapping -> public void unregisterMapping(T mapping);1516617801;Un-register the given mapping._<p>This method may be invoked at runtime after initialization has completed._@param mapping the mapping to unregister;public void unregisterMapping(T mapping) {_		this.mappingRegistry.unregister(mapping)__	};un,register,the,given,mapping,p,this,method,may,be,invoked,at,runtime,after,initialization,has,completed,param,mapping,the,mapping,to,unregister;public,void,unregister,mapping,t,mapping,this,mapping,registry,unregister,mapping
AbstractHandlerMethodMapping -> public void unregisterMapping(T mapping);1529721864;Un-register the given mapping._<p>This method may be invoked at runtime after initialization has completed._@param mapping the mapping to unregister;public void unregisterMapping(T mapping) {_		if (logger.isTraceEnabled()) {_			logger.trace("Unregister mapping \"" + mapping)__		}_		this.mappingRegistry.unregister(mapping)__	};un,register,the,given,mapping,p,this,method,may,be,invoked,at,runtime,after,initialization,has,completed,param,mapping,the,mapping,to,unregister;public,void,unregister,mapping,t,mapping,if,logger,is,trace,enabled,logger,trace,unregister,mapping,mapping,this,mapping,registry,unregister,mapping
AbstractHandlerMethodMapping -> public void unregisterMapping(T mapping);1530174524;Un-register the given mapping._<p>This method may be invoked at runtime after initialization has completed._@param mapping the mapping to unregister;public void unregisterMapping(T mapping) {_		if (logger.isTraceEnabled()) {_			logger.trace("Unregister mapping \"" + mapping)__		}_		this.mappingRegistry.unregister(mapping)__	};un,register,the,given,mapping,p,this,method,may,be,invoked,at,runtime,after,initialization,has,completed,param,mapping,the,mapping,to,unregister;public,void,unregister,mapping,t,mapping,if,logger,is,trace,enabled,logger,trace,unregister,mapping,mapping,this,mapping,registry,unregister,mapping
AbstractHandlerMethodMapping -> public void unregisterMapping(T mapping);1530793633;Un-register the given mapping._<p>This method may be invoked at runtime after initialization has completed._@param mapping the mapping to unregister;public void unregisterMapping(T mapping) {_		if (logger.isTraceEnabled()) {_			logger.trace("Unregister mapping \"" + mapping)__		}_		this.mappingRegistry.unregister(mapping)__	};un,register,the,given,mapping,p,this,method,may,be,invoked,at,runtime,after,initialization,has,completed,param,mapping,the,mapping,to,unregister;public,void,unregister,mapping,t,mapping,if,logger,is,trace,enabled,logger,trace,unregister,mapping,mapping,this,mapping,registry,unregister,mapping
AbstractHandlerMethodMapping -> public void unregisterMapping(T mapping);1542407418;Un-register the given mapping._<p>This method may be invoked at runtime after initialization has completed._@param mapping the mapping to unregister;public void unregisterMapping(T mapping) {_		if (logger.isTraceEnabled()) {_			logger.trace("Unregister mapping \"" + mapping)__		}_		this.mappingRegistry.unregister(mapping)__	};un,register,the,given,mapping,p,this,method,may,be,invoked,at,runtime,after,initialization,has,completed,param,mapping,the,mapping,to,unregister;public,void,unregister,mapping,t,mapping,if,logger,is,trace,enabled,logger,trace,unregister,mapping,mapping,this,mapping,registry,unregister,mapping
AbstractHandlerMethodMapping -> public void unregisterMapping(T mapping);1548427561;Un-register the given mapping._<p>This method may be invoked at runtime after initialization has completed._@param mapping the mapping to unregister;public void unregisterMapping(T mapping) {_		if (logger.isTraceEnabled()) {_			logger.trace("Unregister mapping \"" + mapping)__		}_		this.mappingRegistry.unregister(mapping)__	};un,register,the,given,mapping,p,this,method,may,be,invoked,at,runtime,after,initialization,has,completed,param,mapping,the,mapping,to,unregister;public,void,unregister,mapping,t,mapping,if,logger,is,trace,enabled,logger,trace,unregister,mapping,mapping,this,mapping,registry,unregister,mapping
AbstractHandlerMethodMapping -> public void unregisterMapping(T mapping);1551093473;Un-register the given mapping._<p>This method may be invoked at runtime after initialization has completed._@param mapping the mapping to unregister;public void unregisterMapping(T mapping) {_		if (logger.isTraceEnabled()) {_			logger.trace("Unregister mapping \"" + mapping)__		}_		this.mappingRegistry.unregister(mapping)__	};un,register,the,given,mapping,p,this,method,may,be,invoked,at,runtime,after,initialization,has,completed,param,mapping,the,mapping,to,unregister;public,void,unregister,mapping,t,mapping,if,logger,is,trace,enabled,logger,trace,unregister,mapping,mapping,this,mapping,registry,unregister,mapping
AbstractHandlerMethodMapping -> MappingRegistry -> @Nullable 		public List<T> getMappingsByUrl(String urlPath);1496837955;Return matches for the given URL path. Not thread-safe._@see #acquireReadLock();@Nullable_		public List<T> getMappingsByUrl(String urlPath) {_			return this.urlLookup.get(urlPath)__		};return,matches,for,the,given,url,path,not,thread,safe,see,acquire,read,lock;nullable,public,list,t,get,mappings,by,url,string,url,path,return,this,url,lookup,get,url,path
AbstractHandlerMethodMapping -> MappingRegistry -> @Nullable 		public List<T> getMappingsByUrl(String urlPath);1497039338;Return matches for the given URL path. Not thread-safe._@see #acquireReadLock();@Nullable_		public List<T> getMappingsByUrl(String urlPath) {_			return this.urlLookup.get(urlPath)__		};return,matches,for,the,given,url,path,not,thread,safe,see,acquire,read,lock;nullable,public,list,t,get,mappings,by,url,string,url,path,return,this,url,lookup,get,url,path
AbstractHandlerMethodMapping -> MappingRegistry -> @Nullable 		public List<T> getMappingsByUrl(String urlPath);1497232764;Return matches for the given URL path. Not thread-safe._@see #acquireReadLock();@Nullable_		public List<T> getMappingsByUrl(String urlPath) {_			return this.urlLookup.get(urlPath)__		};return,matches,for,the,given,url,path,not,thread,safe,see,acquire,read,lock;nullable,public,list,t,get,mappings,by,url,string,url,path,return,this,url,lookup,get,url,path
AbstractHandlerMethodMapping -> MappingRegistry -> @Nullable 		public List<T> getMappingsByUrl(String urlPath);1497251962;Return matches for the given URL path. Not thread-safe._@see #acquireReadLock();@Nullable_		public List<T> getMappingsByUrl(String urlPath) {_			return this.urlLookup.get(urlPath)__		};return,matches,for,the,given,url,path,not,thread,safe,see,acquire,read,lock;nullable,public,list,t,get,mappings,by,url,string,url,path,return,this,url,lookup,get,url,path
AbstractHandlerMethodMapping -> protected void initHandlerMethods();1485986572;Scan beans in the ApplicationContext, detect and register handler methods._@see #isHandler(Class)_@see #getMappingForMethod(Method, Class)_@see #handlerMethodsInitialized(Map);protected void initHandlerMethods() {_		if (logger.isDebugEnabled()) {_			logger.debug("Looking for request mappings in application context: " + getApplicationContext())__		}_		String[] beanNames = getApplicationContext().getBeanNamesForType(Object.class)___		for (String beanName : beanNames) {_			if (!beanName.startsWith(SCOPED_TARGET_NAME_PREFIX)) {_				Class<?> beanType = null__				try {_					beanType = getApplicationContext().getType(beanName)__				}_				catch (Throwable ex) {_					_					if (logger.isDebugEnabled()) {_						logger.debug("Could not resolve target class for bean with name '" + beanName + "'", ex)__					}_				}_				if (beanType != null && isHandler(beanType)) {_					detectHandlerMethods(beanName)__				}_			}_		}_		handlerMethodsInitialized(getHandlerMethods())__	};scan,beans,in,the,application,context,detect,and,register,handler,methods,see,is,handler,class,see,get,mapping,for,method,method,class,see,handler,methods,initialized,map;protected,void,init,handler,methods,if,logger,is,debug,enabled,logger,debug,looking,for,request,mappings,in,application,context,get,application,context,string,bean,names,get,application,context,get,bean,names,for,type,object,class,for,string,bean,name,bean,names,if,bean,name,starts,with,class,bean,type,null,try,bean,type,get,application,context,get,type,bean,name,catch,throwable,ex,if,logger,is,debug,enabled,logger,debug,could,not,resolve,target,class,for,bean,with,name,bean,name,ex,if,bean,type,null,is,handler,bean,type,detect,handler,methods,bean,name,handler,methods,initialized,get,handler,methods
AbstractHandlerMethodMapping -> protected void initHandlerMethods();1486635693;Scan beans in the ApplicationContext, detect and register handler methods._@see #isHandler(Class)_@see #getMappingForMethod(Method, Class)_@see #handlerMethodsInitialized(Map);protected void initHandlerMethods() {_		if (logger.isDebugEnabled()) {_			logger.debug("Looking for request mappings in application context: " + getApplicationContext())__		}_		String[] beanNames = getApplicationContext().getBeanNamesForType(Object.class)___		for (String beanName : beanNames) {_			if (!beanName.startsWith(SCOPED_TARGET_NAME_PREFIX)) {_				Class<?> beanType = null__				try {_					beanType = getApplicationContext().getType(beanName)__				}_				catch (Throwable ex) {_					_					if (logger.isDebugEnabled()) {_						logger.debug("Could not resolve target class for bean with name '" + beanName + "'", ex)__					}_				}_				if (beanType != null && isHandler(beanType)) {_					detectHandlerMethods(beanName)__				}_			}_		}_		handlerMethodsInitialized(getHandlerMethods())__	};scan,beans,in,the,application,context,detect,and,register,handler,methods,see,is,handler,class,see,get,mapping,for,method,method,class,see,handler,methods,initialized,map;protected,void,init,handler,methods,if,logger,is,debug,enabled,logger,debug,looking,for,request,mappings,in,application,context,get,application,context,string,bean,names,get,application,context,get,bean,names,for,type,object,class,for,string,bean,name,bean,names,if,bean,name,starts,with,class,bean,type,null,try,bean,type,get,application,context,get,type,bean,name,catch,throwable,ex,if,logger,is,debug,enabled,logger,debug,could,not,resolve,target,class,for,bean,with,name,bean,name,ex,if,bean,type,null,is,handler,bean,type,detect,handler,methods,bean,name,handler,methods,initialized,get,handler,methods
AbstractHandlerMethodMapping -> protected void initHandlerMethods();1486674586;Scan beans in the ApplicationContext, detect and register handler methods._@see #isHandler(Class)_@see #getMappingForMethod(Method, Class)_@see #handlerMethodsInitialized(Map);protected void initHandlerMethods() {_		if (logger.isDebugEnabled()) {_			logger.debug("Looking for request mappings in application context: " + getApplicationContext())__		}_		String[] beanNames = getApplicationContext().getBeanNamesForType(Object.class)___		for (String beanName : beanNames) {_			if (!beanName.startsWith(SCOPED_TARGET_NAME_PREFIX)) {_				Class<?> beanType = null__				try {_					beanType = getApplicationContext().getType(beanName)__				}_				catch (Throwable ex) {_					_					if (logger.isDebugEnabled()) {_						logger.debug("Could not resolve target class for bean with name '" + beanName + "'", ex)__					}_				}_				if (beanType != null && isHandler(beanType)) {_					detectHandlerMethods(beanName)__				}_			}_		}_		handlerMethodsInitialized(getHandlerMethods())__	};scan,beans,in,the,application,context,detect,and,register,handler,methods,see,is,handler,class,see,get,mapping,for,method,method,class,see,handler,methods,initialized,map;protected,void,init,handler,methods,if,logger,is,debug,enabled,logger,debug,looking,for,request,mappings,in,application,context,get,application,context,string,bean,names,get,application,context,get,bean,names,for,type,object,class,for,string,bean,name,bean,names,if,bean,name,starts,with,class,bean,type,null,try,bean,type,get,application,context,get,type,bean,name,catch,throwable,ex,if,logger,is,debug,enabled,logger,debug,could,not,resolve,target,class,for,bean,with,name,bean,name,ex,if,bean,type,null,is,handler,bean,type,detect,handler,methods,bean,name,handler,methods,initialized,get,handler,methods
AbstractHandlerMethodMapping -> protected void initHandlerMethods();1486747801;Scan beans in the ApplicationContext, detect and register handler methods._@see #isHandler(Class)_@see #getMappingForMethod(Method, Class)_@see #handlerMethodsInitialized(Map);protected void initHandlerMethods() {_		if (logger.isDebugEnabled()) {_			logger.debug("Looking for request mappings in application context: " + getApplicationContext())__		}_		String[] beanNames = getApplicationContext().getBeanNamesForType(Object.class)___		for (String beanName : beanNames) {_			if (!beanName.startsWith(SCOPED_TARGET_NAME_PREFIX)) {_				Class<?> beanType = null__				try {_					beanType = getApplicationContext().getType(beanName)__				}_				catch (Throwable ex) {_					_					if (logger.isDebugEnabled()) {_						logger.debug("Could not resolve target class for bean with name '" + beanName + "'", ex)__					}_				}_				if (beanType != null && isHandler(beanType)) {_					detectHandlerMethods(beanName)__				}_			}_		}_		handlerMethodsInitialized(getHandlerMethods())__	};scan,beans,in,the,application,context,detect,and,register,handler,methods,see,is,handler,class,see,get,mapping,for,method,method,class,see,handler,methods,initialized,map;protected,void,init,handler,methods,if,logger,is,debug,enabled,logger,debug,looking,for,request,mappings,in,application,context,get,application,context,string,bean,names,get,application,context,get,bean,names,for,type,object,class,for,string,bean,name,bean,names,if,bean,name,starts,with,class,bean,type,null,try,bean,type,get,application,context,get,type,bean,name,catch,throwable,ex,if,logger,is,debug,enabled,logger,debug,could,not,resolve,target,class,for,bean,with,name,bean,name,ex,if,bean,type,null,is,handler,bean,type,detect,handler,methods,bean,name,handler,methods,initialized,get,handler,methods
AbstractHandlerMethodMapping -> protected void initHandlerMethods();1489852683;Scan beans in the ApplicationContext, detect and register handler methods._@see #isHandler(Class)_@see #getMappingForMethod(Method, Class)_@see #handlerMethodsInitialized(Map);protected void initHandlerMethods() {_		if (logger.isDebugEnabled()) {_			logger.debug("Looking for request mappings in application context: " + getApplicationContext())__		}_		String[] beanNames = getApplicationContext().getBeanNamesForType(Object.class)___		for (String beanName : beanNames) {_			if (!beanName.startsWith(SCOPED_TARGET_NAME_PREFIX)) {_				Class<?> beanType = null__				try {_					beanType = getApplicationContext().getType(beanName)__				}_				catch (Throwable ex) {_					_					if (logger.isDebugEnabled()) {_						logger.debug("Could not resolve target class for bean with name '" + beanName + "'", ex)__					}_				}_				if (beanType != null && isHandler(beanType)) {_					detectHandlerMethods(beanName)__				}_			}_		}_		handlerMethodsInitialized(getHandlerMethods())__	};scan,beans,in,the,application,context,detect,and,register,handler,methods,see,is,handler,class,see,get,mapping,for,method,method,class,see,handler,methods,initialized,map;protected,void,init,handler,methods,if,logger,is,debug,enabled,logger,debug,looking,for,request,mappings,in,application,context,get,application,context,string,bean,names,get,application,context,get,bean,names,for,type,object,class,for,string,bean,name,bean,names,if,bean,name,starts,with,class,bean,type,null,try,bean,type,get,application,context,get,type,bean,name,catch,throwable,ex,if,logger,is,debug,enabled,logger,debug,could,not,resolve,target,class,for,bean,with,name,bean,name,ex,if,bean,type,null,is,handler,bean,type,detect,handler,methods,bean,name,handler,methods,initialized,get,handler,methods
AbstractHandlerMethodMapping -> protected void initHandlerMethods();1492542679;Scan beans in the ApplicationContext, detect and register handler methods._@see #isHandler(Class)_@see #getMappingForMethod(Method, Class)_@see #handlerMethodsInitialized(Map);protected void initHandlerMethods() {_		if (logger.isDebugEnabled()) {_			logger.debug("Looking for request mappings in application context: " + getApplicationContext())__		}_		String[] beanNames = getApplicationContext().getBeanNamesForType(Object.class)___		for (String beanName : beanNames) {_			if (!beanName.startsWith(SCOPED_TARGET_NAME_PREFIX)) {_				Class<?> beanType = null__				try {_					beanType = getApplicationContext().getType(beanName)__				}_				catch (Throwable ex) {_					_					if (logger.isDebugEnabled()) {_						logger.debug("Could not resolve target class for bean with name '" + beanName + "'", ex)__					}_				}_				if (beanType != null && isHandler(beanType)) {_					detectHandlerMethods(beanName)__				}_			}_		}_		handlerMethodsInitialized(getHandlerMethods())__	};scan,beans,in,the,application,context,detect,and,register,handler,methods,see,is,handler,class,see,get,mapping,for,method,method,class,see,handler,methods,initialized,map;protected,void,init,handler,methods,if,logger,is,debug,enabled,logger,debug,looking,for,request,mappings,in,application,context,get,application,context,string,bean,names,get,application,context,get,bean,names,for,type,object,class,for,string,bean,name,bean,names,if,bean,name,starts,with,class,bean,type,null,try,bean,type,get,application,context,get,type,bean,name,catch,throwable,ex,if,logger,is,debug,enabled,logger,debug,could,not,resolve,target,class,for,bean,with,name,bean,name,ex,if,bean,type,null,is,handler,bean,type,detect,handler,methods,bean,name,handler,methods,initialized,get,handler,methods
AbstractHandlerMethodMapping -> protected void initHandlerMethods();1493370460;Scan beans in the ApplicationContext, detect and register handler methods._@see #isHandler(Class)_@see #getMappingForMethod(Method, Class)_@see #handlerMethodsInitialized(Map);protected void initHandlerMethods() {_		if (logger.isDebugEnabled()) {_			logger.debug("Looking for request mappings in application context: " + getApplicationContext())__		}_		String[] beanNames = getApplicationContext().getBeanNamesForType(Object.class)___		for (String beanName : beanNames) {_			if (!beanName.startsWith(SCOPED_TARGET_NAME_PREFIX)) {_				Class<?> beanType = null__				try {_					beanType = getApplicationContext().getType(beanName)__				}_				catch (Throwable ex) {_					_					if (logger.isDebugEnabled()) {_						logger.debug("Could not resolve target class for bean with name '" + beanName + "'", ex)__					}_				}_				if (beanType != null && isHandler(beanType)) {_					detectHandlerMethods(beanName)__				}_			}_		}_		handlerMethodsInitialized(getHandlerMethods())__	};scan,beans,in,the,application,context,detect,and,register,handler,methods,see,is,handler,class,see,get,mapping,for,method,method,class,see,handler,methods,initialized,map;protected,void,init,handler,methods,if,logger,is,debug,enabled,logger,debug,looking,for,request,mappings,in,application,context,get,application,context,string,bean,names,get,application,context,get,bean,names,for,type,object,class,for,string,bean,name,bean,names,if,bean,name,starts,with,class,bean,type,null,try,bean,type,get,application,context,get,type,bean,name,catch,throwable,ex,if,logger,is,debug,enabled,logger,debug,could,not,resolve,target,class,for,bean,with,name,bean,name,ex,if,bean,type,null,is,handler,bean,type,detect,handler,methods,bean,name,handler,methods,initialized,get,handler,methods
AbstractHandlerMethodMapping -> protected void initHandlerMethods();1493391766;Scan beans in the ApplicationContext, detect and register handler methods._@see #isHandler(Class)_@see #getMappingForMethod(Method, Class)_@see #handlerMethodsInitialized(Map);protected void initHandlerMethods() {_		if (logger.isDebugEnabled()) {_			logger.debug("Looking for request mappings in application context: " + getApplicationContext())__		}_		String[] beanNames = getApplicationContext().getBeanNamesForType(Object.class)___		for (String beanName : beanNames) {_			if (!beanName.startsWith(SCOPED_TARGET_NAME_PREFIX)) {_				Class<?> beanType = null__				try {_					beanType = getApplicationContext().getType(beanName)__				}_				catch (Throwable ex) {_					_					if (logger.isDebugEnabled()) {_						logger.debug("Could not resolve target class for bean with name '" + beanName + "'", ex)__					}_				}_				if (beanType != null && isHandler(beanType)) {_					detectHandlerMethods(beanName)__				}_			}_		}_		handlerMethodsInitialized(getHandlerMethods())__	};scan,beans,in,the,application,context,detect,and,register,handler,methods,see,is,handler,class,see,get,mapping,for,method,method,class,see,handler,methods,initialized,map;protected,void,init,handler,methods,if,logger,is,debug,enabled,logger,debug,looking,for,request,mappings,in,application,context,get,application,context,string,bean,names,get,application,context,get,bean,names,for,type,object,class,for,string,bean,name,bean,names,if,bean,name,starts,with,class,bean,type,null,try,bean,type,get,application,context,get,type,bean,name,catch,throwable,ex,if,logger,is,debug,enabled,logger,debug,could,not,resolve,target,class,for,bean,with,name,bean,name,ex,if,bean,type,null,is,handler,bean,type,detect,handler,methods,bean,name,handler,methods,initialized,get,handler,methods
AbstractHandlerMethodMapping -> protected void initHandlerMethods();1493755795;Scan beans in the ApplicationContext, detect and register handler methods._@see #isHandler(Class)_@see #getMappingForMethod(Method, Class)_@see #handlerMethodsInitialized(Map);protected void initHandlerMethods() {_		if (logger.isDebugEnabled()) {_			logger.debug("Looking for request mappings in application context: " + getApplicationContext())__		}_		String[] beanNames = getApplicationContext().getBeanNamesForType(Object.class)___		for (String beanName : beanNames) {_			if (!beanName.startsWith(SCOPED_TARGET_NAME_PREFIX)) {_				Class<?> beanType = null__				try {_					beanType = getApplicationContext().getType(beanName)__				}_				catch (Throwable ex) {_					_					if (logger.isDebugEnabled()) {_						logger.debug("Could not resolve target class for bean with name '" + beanName + "'", ex)__					}_				}_				if (beanType != null && isHandler(beanType)) {_					detectHandlerMethods(beanName)__				}_			}_		}_		handlerMethodsInitialized(getHandlerMethods())__	};scan,beans,in,the,application,context,detect,and,register,handler,methods,see,is,handler,class,see,get,mapping,for,method,method,class,see,handler,methods,initialized,map;protected,void,init,handler,methods,if,logger,is,debug,enabled,logger,debug,looking,for,request,mappings,in,application,context,get,application,context,string,bean,names,get,application,context,get,bean,names,for,type,object,class,for,string,bean,name,bean,names,if,bean,name,starts,with,class,bean,type,null,try,bean,type,get,application,context,get,type,bean,name,catch,throwable,ex,if,logger,is,debug,enabled,logger,debug,could,not,resolve,target,class,for,bean,with,name,bean,name,ex,if,bean,type,null,is,handler,bean,type,detect,handler,methods,bean,name,handler,methods,initialized,get,handler,methods
AbstractHandlerMethodMapping -> protected void initHandlerMethods();1495868221;Scan beans in the ApplicationContext, detect and register handler methods._@see #isHandler(Class)_@see #getMappingForMethod(Method, Class)_@see #handlerMethodsInitialized(Map);protected void initHandlerMethods() {_		if (logger.isDebugEnabled()) {_			logger.debug("Looking for request mappings in application context: " + getApplicationContext())__		}_		String[] beanNames = getApplicationContext().getBeanNamesForType(Object.class)___		for (String beanName : beanNames) {_			if (!beanName.startsWith(SCOPED_TARGET_NAME_PREFIX)) {_				Class<?> beanType = null__				try {_					beanType = getApplicationContext().getType(beanName)__				}_				catch (Throwable ex) {_					_					if (logger.isDebugEnabled()) {_						logger.debug("Could not resolve target class for bean with name '" + beanName + "'", ex)__					}_				}_				if (beanType != null && isHandler(beanType)) {_					detectHandlerMethods(beanName)__				}_			}_		}_		handlerMethodsInitialized(getHandlerMethods())__	};scan,beans,in,the,application,context,detect,and,register,handler,methods,see,is,handler,class,see,get,mapping,for,method,method,class,see,handler,methods,initialized,map;protected,void,init,handler,methods,if,logger,is,debug,enabled,logger,debug,looking,for,request,mappings,in,application,context,get,application,context,string,bean,names,get,application,context,get,bean,names,for,type,object,class,for,string,bean,name,bean,names,if,bean,name,starts,with,class,bean,type,null,try,bean,type,get,application,context,get,type,bean,name,catch,throwable,ex,if,logger,is,debug,enabled,logger,debug,could,not,resolve,target,class,for,bean,with,name,bean,name,ex,if,bean,type,null,is,handler,bean,type,detect,handler,methods,bean,name,handler,methods,initialized,get,handler,methods
AbstractHandlerMethodMapping -> protected void initHandlerMethods();1496334664;Scan beans in the ApplicationContext, detect and register handler methods._@see #isHandler(Class)_@see #getMappingForMethod(Method, Class)_@see #handlerMethodsInitialized(Map);protected void initHandlerMethods() {_		if (logger.isDebugEnabled()) {_			logger.debug("Looking for request mappings in application context: " + getApplicationContext())__		}_		String[] beanNames = getApplicationContext().getBeanNamesForType(Object.class)___		for (String beanName : beanNames) {_			if (!beanName.startsWith(SCOPED_TARGET_NAME_PREFIX)) {_				Class<?> beanType = null__				try {_					beanType = getApplicationContext().getType(beanName)__				}_				catch (Throwable ex) {_					_					if (logger.isDebugEnabled()) {_						logger.debug("Could not resolve target class for bean with name '" + beanName + "'", ex)__					}_				}_				if (beanType != null && isHandler(beanType)) {_					detectHandlerMethods(beanName)__				}_			}_		}_		handlerMethodsInitialized(getHandlerMethods())__	};scan,beans,in,the,application,context,detect,and,register,handler,methods,see,is,handler,class,see,get,mapping,for,method,method,class,see,handler,methods,initialized,map;protected,void,init,handler,methods,if,logger,is,debug,enabled,logger,debug,looking,for,request,mappings,in,application,context,get,application,context,string,bean,names,get,application,context,get,bean,names,for,type,object,class,for,string,bean,name,bean,names,if,bean,name,starts,with,class,bean,type,null,try,bean,type,get,application,context,get,type,bean,name,catch,throwable,ex,if,logger,is,debug,enabled,logger,debug,could,not,resolve,target,class,for,bean,with,name,bean,name,ex,if,bean,type,null,is,handler,bean,type,detect,handler,methods,bean,name,handler,methods,initialized,get,handler,methods
AbstractHandlerMethodMapping -> protected void initHandlerMethods();1496430942;Scan beans in the ApplicationContext, detect and register handler methods._@see #isHandler(Class)_@see #getMappingForMethod(Method, Class)_@see #handlerMethodsInitialized(Map);protected void initHandlerMethods() {_		if (logger.isDebugEnabled()) {_			logger.debug("Looking for request mappings in application context: " + getApplicationContext())__		}_		String[] beanNames = getApplicationContext().getBeanNamesForType(Object.class)___		for (String beanName : beanNames) {_			if (!beanName.startsWith(SCOPED_TARGET_NAME_PREFIX)) {_				Class<?> beanType = null__				try {_					beanType = getApplicationContext().getType(beanName)__				}_				catch (Throwable ex) {_					_					if (logger.isDebugEnabled()) {_						logger.debug("Could not resolve target class for bean with name '" + beanName + "'", ex)__					}_				}_				if (beanType != null && isHandler(beanType)) {_					detectHandlerMethods(beanName)__				}_			}_		}_		handlerMethodsInitialized(getHandlerMethods())__	};scan,beans,in,the,application,context,detect,and,register,handler,methods,see,is,handler,class,see,get,mapping,for,method,method,class,see,handler,methods,initialized,map;protected,void,init,handler,methods,if,logger,is,debug,enabled,logger,debug,looking,for,request,mappings,in,application,context,get,application,context,string,bean,names,get,application,context,get,bean,names,for,type,object,class,for,string,bean,name,bean,names,if,bean,name,starts,with,class,bean,type,null,try,bean,type,get,application,context,get,type,bean,name,catch,throwable,ex,if,logger,is,debug,enabled,logger,debug,could,not,resolve,target,class,for,bean,with,name,bean,name,ex,if,bean,type,null,is,handler,bean,type,detect,handler,methods,bean,name,handler,methods,initialized,get,handler,methods
AbstractHandlerMethodMapping -> protected void initHandlerMethods();1496837955;Scan beans in the ApplicationContext, detect and register handler methods._@see #isHandler(Class)_@see #getMappingForMethod(Method, Class)_@see #handlerMethodsInitialized(Map);protected void initHandlerMethods() {_		if (logger.isDebugEnabled()) {_			logger.debug("Looking for request mappings in application context: " + getApplicationContext())__		}_		String[] beanNames = obtainApplicationContext().getBeanNamesForType(Object.class)___		for (String beanName : beanNames) {_			if (!beanName.startsWith(SCOPED_TARGET_NAME_PREFIX)) {_				Class<?> beanType = null__				try {_					beanType = obtainApplicationContext().getType(beanName)__				}_				catch (Throwable ex) {_					_					if (logger.isDebugEnabled()) {_						logger.debug("Could not resolve target class for bean with name '" + beanName + "'", ex)__					}_				}_				if (beanType != null && isHandler(beanType)) {_					detectHandlerMethods(beanName)__				}_			}_		}_		handlerMethodsInitialized(getHandlerMethods())__	};scan,beans,in,the,application,context,detect,and,register,handler,methods,see,is,handler,class,see,get,mapping,for,method,method,class,see,handler,methods,initialized,map;protected,void,init,handler,methods,if,logger,is,debug,enabled,logger,debug,looking,for,request,mappings,in,application,context,get,application,context,string,bean,names,obtain,application,context,get,bean,names,for,type,object,class,for,string,bean,name,bean,names,if,bean,name,starts,with,class,bean,type,null,try,bean,type,obtain,application,context,get,type,bean,name,catch,throwable,ex,if,logger,is,debug,enabled,logger,debug,could,not,resolve,target,class,for,bean,with,name,bean,name,ex,if,bean,type,null,is,handler,bean,type,detect,handler,methods,bean,name,handler,methods,initialized,get,handler,methods
AbstractHandlerMethodMapping -> protected void initHandlerMethods();1497039338;Scan beans in the ApplicationContext, detect and register handler methods._@see #isHandler(Class)_@see #getMappingForMethod(Method, Class)_@see #handlerMethodsInitialized(Map);protected void initHandlerMethods() {_		if (logger.isDebugEnabled()) {_			logger.debug("Looking for request mappings in application context: " + getApplicationContext())__		}_		String[] beanNames = obtainApplicationContext().getBeanNamesForType(Object.class)___		for (String beanName : beanNames) {_			if (!beanName.startsWith(SCOPED_TARGET_NAME_PREFIX)) {_				Class<?> beanType = null__				try {_					beanType = obtainApplicationContext().getType(beanName)__				}_				catch (Throwable ex) {_					_					if (logger.isDebugEnabled()) {_						logger.debug("Could not resolve target class for bean with name '" + beanName + "'", ex)__					}_				}_				if (beanType != null && isHandler(beanType)) {_					detectHandlerMethods(beanName)__				}_			}_		}_		handlerMethodsInitialized(getHandlerMethods())__	};scan,beans,in,the,application,context,detect,and,register,handler,methods,see,is,handler,class,see,get,mapping,for,method,method,class,see,handler,methods,initialized,map;protected,void,init,handler,methods,if,logger,is,debug,enabled,logger,debug,looking,for,request,mappings,in,application,context,get,application,context,string,bean,names,obtain,application,context,get,bean,names,for,type,object,class,for,string,bean,name,bean,names,if,bean,name,starts,with,class,bean,type,null,try,bean,type,obtain,application,context,get,type,bean,name,catch,throwable,ex,if,logger,is,debug,enabled,logger,debug,could,not,resolve,target,class,for,bean,with,name,bean,name,ex,if,bean,type,null,is,handler,bean,type,detect,handler,methods,bean,name,handler,methods,initialized,get,handler,methods
AbstractHandlerMethodMapping -> protected void initHandlerMethods();1497232764;Scan beans in the ApplicationContext, detect and register handler methods._@see #isHandler(Class)_@see #getMappingForMethod(Method, Class)_@see #handlerMethodsInitialized(Map);protected void initHandlerMethods() {_		if (logger.isDebugEnabled()) {_			logger.debug("Looking for request mappings in application context: " + getApplicationContext())__		}_		String[] beanNames = obtainApplicationContext().getBeanNamesForType(Object.class)___		for (String beanName : beanNames) {_			if (!beanName.startsWith(SCOPED_TARGET_NAME_PREFIX)) {_				Class<?> beanType = null__				try {_					beanType = obtainApplicationContext().getType(beanName)__				}_				catch (Throwable ex) {_					_					if (logger.isDebugEnabled()) {_						logger.debug("Could not resolve target class for bean with name '" + beanName + "'", ex)__					}_				}_				if (beanType != null && isHandler(beanType)) {_					detectHandlerMethods(beanName)__				}_			}_		}_		handlerMethodsInitialized(getHandlerMethods())__	};scan,beans,in,the,application,context,detect,and,register,handler,methods,see,is,handler,class,see,get,mapping,for,method,method,class,see,handler,methods,initialized,map;protected,void,init,handler,methods,if,logger,is,debug,enabled,logger,debug,looking,for,request,mappings,in,application,context,get,application,context,string,bean,names,obtain,application,context,get,bean,names,for,type,object,class,for,string,bean,name,bean,names,if,bean,name,starts,with,class,bean,type,null,try,bean,type,obtain,application,context,get,type,bean,name,catch,throwable,ex,if,logger,is,debug,enabled,logger,debug,could,not,resolve,target,class,for,bean,with,name,bean,name,ex,if,bean,type,null,is,handler,bean,type,detect,handler,methods,bean,name,handler,methods,initialized,get,handler,methods
AbstractHandlerMethodMapping -> protected void initHandlerMethods();1497251962;Scan beans in the ApplicationContext, detect and register handler methods._@see #isHandler(Class)_@see #getMappingForMethod(Method, Class)_@see #handlerMethodsInitialized(Map);protected void initHandlerMethods() {_		if (logger.isDebugEnabled()) {_			logger.debug("Looking for request mappings in application context: " + getApplicationContext())__		}_		String[] beanNames = obtainApplicationContext().getBeanNamesForType(Object.class)___		for (String beanName : beanNames) {_			if (!beanName.startsWith(SCOPED_TARGET_NAME_PREFIX)) {_				Class<?> beanType = null__				try {_					beanType = obtainApplicationContext().getType(beanName)__				}_				catch (Throwable ex) {_					_					if (logger.isDebugEnabled()) {_						logger.debug("Could not resolve target class for bean with name '" + beanName + "'", ex)__					}_				}_				if (beanType != null && isHandler(beanType)) {_					detectHandlerMethods(beanName)__				}_			}_		}_		handlerMethodsInitialized(getHandlerMethods())__	};scan,beans,in,the,application,context,detect,and,register,handler,methods,see,is,handler,class,see,get,mapping,for,method,method,class,see,handler,methods,initialized,map;protected,void,init,handler,methods,if,logger,is,debug,enabled,logger,debug,looking,for,request,mappings,in,application,context,get,application,context,string,bean,names,obtain,application,context,get,bean,names,for,type,object,class,for,string,bean,name,bean,names,if,bean,name,starts,with,class,bean,type,null,try,bean,type,obtain,application,context,get,type,bean,name,catch,throwable,ex,if,logger,is,debug,enabled,logger,debug,could,not,resolve,target,class,for,bean,with,name,bean,name,ex,if,bean,type,null,is,handler,bean,type,detect,handler,methods,bean,name,handler,methods,initialized,get,handler,methods
AbstractHandlerMethodMapping -> protected void initHandlerMethods();1497286385;Scan beans in the ApplicationContext, detect and register handler methods._@see #isHandler(Class)_@see #getMappingForMethod(Method, Class)_@see #handlerMethodsInitialized(Map);protected void initHandlerMethods() {_		if (logger.isDebugEnabled()) {_			logger.debug("Looking for request mappings in application context: " + getApplicationContext())__		}_		String[] beanNames = obtainApplicationContext().getBeanNamesForType(Object.class)___		for (String beanName : beanNames) {_			if (!beanName.startsWith(SCOPED_TARGET_NAME_PREFIX)) {_				Class<?> beanType = null__				try {_					beanType = obtainApplicationContext().getType(beanName)__				}_				catch (Throwable ex) {_					_					if (logger.isDebugEnabled()) {_						logger.debug("Could not resolve target class for bean with name '" + beanName + "'", ex)__					}_				}_				if (beanType != null && isHandler(beanType)) {_					detectHandlerMethods(beanName)__				}_			}_		}_		handlerMethodsInitialized(getHandlerMethods())__	};scan,beans,in,the,application,context,detect,and,register,handler,methods,see,is,handler,class,see,get,mapping,for,method,method,class,see,handler,methods,initialized,map;protected,void,init,handler,methods,if,logger,is,debug,enabled,logger,debug,looking,for,request,mappings,in,application,context,get,application,context,string,bean,names,obtain,application,context,get,bean,names,for,type,object,class,for,string,bean,name,bean,names,if,bean,name,starts,with,class,bean,type,null,try,bean,type,obtain,application,context,get,type,bean,name,catch,throwable,ex,if,logger,is,debug,enabled,logger,debug,could,not,resolve,target,class,for,bean,with,name,bean,name,ex,if,bean,type,null,is,handler,bean,type,detect,handler,methods,bean,name,handler,methods,initialized,get,handler,methods
AbstractHandlerMethodMapping -> protected void initHandlerMethods();1498756719;Scan beans in the ApplicationContext, detect and register handler methods._@see #isHandler(Class)_@see #getMappingForMethod(Method, Class)_@see #handlerMethodsInitialized(Map);protected void initHandlerMethods() {_		if (logger.isDebugEnabled()) {_			logger.debug("Looking for request mappings in application context: " + getApplicationContext())__		}_		String[] beanNames = obtainApplicationContext().getBeanNamesForType(Object.class)___		for (String beanName : beanNames) {_			if (!beanName.startsWith(SCOPED_TARGET_NAME_PREFIX)) {_				Class<?> beanType = null__				try {_					beanType = obtainApplicationContext().getType(beanName)__				}_				catch (Throwable ex) {_					_					if (logger.isDebugEnabled()) {_						logger.debug("Could not resolve target class for bean with name '" + beanName + "'", ex)__					}_				}_				if (beanType != null && isHandler(beanType)) {_					detectHandlerMethods(beanName)__				}_			}_		}_		handlerMethodsInitialized(getHandlerMethods())__	};scan,beans,in,the,application,context,detect,and,register,handler,methods,see,is,handler,class,see,get,mapping,for,method,method,class,see,handler,methods,initialized,map;protected,void,init,handler,methods,if,logger,is,debug,enabled,logger,debug,looking,for,request,mappings,in,application,context,get,application,context,string,bean,names,obtain,application,context,get,bean,names,for,type,object,class,for,string,bean,name,bean,names,if,bean,name,starts,with,class,bean,type,null,try,bean,type,obtain,application,context,get,type,bean,name,catch,throwable,ex,if,logger,is,debug,enabled,logger,debug,could,not,resolve,target,class,for,bean,with,name,bean,name,ex,if,bean,type,null,is,handler,bean,type,detect,handler,methods,bean,name,handler,methods,initialized,get,handler,methods
AbstractHandlerMethodMapping -> protected void initHandlerMethods();1498861175;Scan beans in the ApplicationContext, detect and register handler methods._@see #isHandler(Class)_@see #getMappingForMethod(Method, Class)_@see #handlerMethodsInitialized(Map);protected void initHandlerMethods() {_		if (logger.isDebugEnabled()) {_			logger.debug("Looking for request mappings in application context: " + getApplicationContext())__		}_		String[] beanNames = obtainApplicationContext().getBeanNamesForType(Object.class)___		for (String beanName : beanNames) {_			if (!beanName.startsWith(SCOPED_TARGET_NAME_PREFIX)) {_				Class<?> beanType = null__				try {_					beanType = obtainApplicationContext().getType(beanName)__				}_				catch (Throwable ex) {_					_					if (logger.isDebugEnabled()) {_						logger.debug("Could not resolve target class for bean with name '" + beanName + "'", ex)__					}_				}_				if (beanType != null && isHandler(beanType)) {_					detectHandlerMethods(beanName)__				}_			}_		}_		handlerMethodsInitialized(getHandlerMethods())__	};scan,beans,in,the,application,context,detect,and,register,handler,methods,see,is,handler,class,see,get,mapping,for,method,method,class,see,handler,methods,initialized,map;protected,void,init,handler,methods,if,logger,is,debug,enabled,logger,debug,looking,for,request,mappings,in,application,context,get,application,context,string,bean,names,obtain,application,context,get,bean,names,for,type,object,class,for,string,bean,name,bean,names,if,bean,name,starts,with,class,bean,type,null,try,bean,type,obtain,application,context,get,type,bean,name,catch,throwable,ex,if,logger,is,debug,enabled,logger,debug,could,not,resolve,target,class,for,bean,with,name,bean,name,ex,if,bean,type,null,is,handler,bean,type,detect,handler,methods,bean,name,handler,methods,initialized,get,handler,methods
AbstractHandlerMethodMapping -> protected void initHandlerMethods();1498953917;Scan beans in the ApplicationContext, detect and register handler methods._@see #isHandler(Class)_@see #getMappingForMethod(Method, Class)_@see #handlerMethodsInitialized(Map);protected void initHandlerMethods() {_		if (logger.isDebugEnabled()) {_			logger.debug("Looking for request mappings in application context: " + getApplicationContext())__		}_		String[] beanNames = obtainApplicationContext().getBeanNamesForType(Object.class)___		for (String beanName : beanNames) {_			if (!beanName.startsWith(SCOPED_TARGET_NAME_PREFIX)) {_				Class<?> beanType = null__				try {_					beanType = obtainApplicationContext().getType(beanName)__				}_				catch (Throwable ex) {_					_					if (logger.isDebugEnabled()) {_						logger.debug("Could not resolve target class for bean with name '" + beanName + "'", ex)__					}_				}_				if (beanType != null && isHandler(beanType)) {_					detectHandlerMethods(beanName)__				}_			}_		}_		handlerMethodsInitialized(getHandlerMethods())__	};scan,beans,in,the,application,context,detect,and,register,handler,methods,see,is,handler,class,see,get,mapping,for,method,method,class,see,handler,methods,initialized,map;protected,void,init,handler,methods,if,logger,is,debug,enabled,logger,debug,looking,for,request,mappings,in,application,context,get,application,context,string,bean,names,obtain,application,context,get,bean,names,for,type,object,class,for,string,bean,name,bean,names,if,bean,name,starts,with,class,bean,type,null,try,bean,type,obtain,application,context,get,type,bean,name,catch,throwable,ex,if,logger,is,debug,enabled,logger,debug,could,not,resolve,target,class,for,bean,with,name,bean,name,ex,if,bean,type,null,is,handler,bean,type,detect,handler,methods,bean,name,handler,methods,initialized,get,handler,methods
AbstractHandlerMethodMapping -> protected void initHandlerMethods();1516617801;Scan beans in the ApplicationContext, detect and register handler methods._@see #isHandler(Class)_@see #getMappingForMethod(Method, Class)_@see #handlerMethodsInitialized(Map);protected void initHandlerMethods() {_		if (logger.isDebugEnabled()) {_			logger.debug("Looking for request mappings in application context: " + getApplicationContext())__		}_		String[] beanNames = obtainApplicationContext().getBeanNamesForType(Object.class)___		for (String beanName : beanNames) {_			if (!beanName.startsWith(SCOPED_TARGET_NAME_PREFIX)) {_				Class<?> beanType = null__				try {_					beanType = obtainApplicationContext().getType(beanName)__				}_				catch (Throwable ex) {_					_					if (logger.isDebugEnabled()) {_						logger.debug("Could not resolve target class for bean with name '" + beanName + "'", ex)__					}_				}_				if (beanType != null && isHandler(beanType)) {_					detectHandlerMethods(beanName)__				}_			}_		}_		handlerMethodsInitialized(getHandlerMethods())__	};scan,beans,in,the,application,context,detect,and,register,handler,methods,see,is,handler,class,see,get,mapping,for,method,method,class,see,handler,methods,initialized,map;protected,void,init,handler,methods,if,logger,is,debug,enabled,logger,debug,looking,for,request,mappings,in,application,context,get,application,context,string,bean,names,obtain,application,context,get,bean,names,for,type,object,class,for,string,bean,name,bean,names,if,bean,name,starts,with,class,bean,type,null,try,bean,type,obtain,application,context,get,type,bean,name,catch,throwable,ex,if,logger,is,debug,enabled,logger,debug,could,not,resolve,target,class,for,bean,with,name,bean,name,ex,if,bean,type,null,is,handler,bean,type,detect,handler,methods,bean,name,handler,methods,initialized,get,handler,methods
AbstractHandlerMethodMapping -> protected void initHandlerMethods();1529721864;Scan beans in the ApplicationContext, detect and register handler methods._@see #isHandler(Class)_@see #getMappingForMethod(Method, Class)_@see #handlerMethodsInitialized(Map);protected void initHandlerMethods() {_		String[] beanNames = obtainApplicationContext().getBeanNamesForType(Object.class)___		for (String beanName : beanNames) {_			if (!beanName.startsWith(SCOPED_TARGET_NAME_PREFIX)) {_				Class<?> beanType = null__				try {_					beanType = obtainApplicationContext().getType(beanName)__				}_				catch (Throwable ex) {_					_					if (logger.isTraceEnabled()) {_						logger.trace("Could not resolve type for bean '" + beanName + "'", ex)__					}_				}_				if (beanType != null && isHandler(beanType)) {_					detectHandlerMethods(beanName)__				}_			}_		}_		handlerMethodsInitialized(getHandlerMethods())__	};scan,beans,in,the,application,context,detect,and,register,handler,methods,see,is,handler,class,see,get,mapping,for,method,method,class,see,handler,methods,initialized,map;protected,void,init,handler,methods,string,bean,names,obtain,application,context,get,bean,names,for,type,object,class,for,string,bean,name,bean,names,if,bean,name,starts,with,class,bean,type,null,try,bean,type,obtain,application,context,get,type,bean,name,catch,throwable,ex,if,logger,is,trace,enabled,logger,trace,could,not,resolve,type,for,bean,bean,name,ex,if,bean,type,null,is,handler,bean,type,detect,handler,methods,bean,name,handler,methods,initialized,get,handler,methods
AbstractHandlerMethodMapping -> protected void initHandlerMethods();1530174524;Scan beans in the ApplicationContext, detect and register handler methods._@see #isHandler(Class)_@see #getMappingForMethod(Method, Class)_@see #handlerMethodsInitialized(Map);protected void initHandlerMethods() {_		String[] beanNames = obtainApplicationContext().getBeanNamesForType(Object.class)___		for (String beanName : beanNames) {_			if (!beanName.startsWith(SCOPED_TARGET_NAME_PREFIX)) {_				Class<?> beanType = null__				try {_					beanType = obtainApplicationContext().getType(beanName)__				}_				catch (Throwable ex) {_					_					if (logger.isTraceEnabled()) {_						logger.trace("Could not resolve type for bean '" + beanName + "'", ex)__					}_				}_				if (beanType != null && isHandler(beanType)) {_					detectHandlerMethods(beanName)__				}_			}_		}_		handlerMethodsInitialized(getHandlerMethods())__	};scan,beans,in,the,application,context,detect,and,register,handler,methods,see,is,handler,class,see,get,mapping,for,method,method,class,see,handler,methods,initialized,map;protected,void,init,handler,methods,string,bean,names,obtain,application,context,get,bean,names,for,type,object,class,for,string,bean,name,bean,names,if,bean,name,starts,with,class,bean,type,null,try,bean,type,obtain,application,context,get,type,bean,name,catch,throwable,ex,if,logger,is,trace,enabled,logger,trace,could,not,resolve,type,for,bean,bean,name,ex,if,bean,type,null,is,handler,bean,type,detect,handler,methods,bean,name,handler,methods,initialized,get,handler,methods
AbstractHandlerMethodMapping -> protected void initHandlerMethods();1530793633;Scan beans in the ApplicationContext, detect and register handler methods._@see #isHandler(Class)_@see #getMappingForMethod(Method, Class)_@see #handlerMethodsInitialized(Map);protected void initHandlerMethods() {_		String[] beanNames = obtainApplicationContext().getBeanNamesForType(Object.class)___		for (String beanName : beanNames) {_			if (!beanName.startsWith(SCOPED_TARGET_NAME_PREFIX)) {_				Class<?> beanType = null__				try {_					beanType = obtainApplicationContext().getType(beanName)__				}_				catch (Throwable ex) {_					_					if (logger.isTraceEnabled()) {_						logger.trace("Could not resolve type for bean '" + beanName + "'", ex)__					}_				}_				if (beanType != null && isHandler(beanType)) {_					detectHandlerMethods(beanName)__				}_			}_		}_		handlerMethodsInitialized(getHandlerMethods())__	};scan,beans,in,the,application,context,detect,and,register,handler,methods,see,is,handler,class,see,get,mapping,for,method,method,class,see,handler,methods,initialized,map;protected,void,init,handler,methods,string,bean,names,obtain,application,context,get,bean,names,for,type,object,class,for,string,bean,name,bean,names,if,bean,name,starts,with,class,bean,type,null,try,bean,type,obtain,application,context,get,type,bean,name,catch,throwable,ex,if,logger,is,trace,enabled,logger,trace,could,not,resolve,type,for,bean,bean,name,ex,if,bean,type,null,is,handler,bean,type,detect,handler,methods,bean,name,handler,methods,initialized,get,handler,methods
AbstractHandlerMethodMapping -> protected void initHandlerMethods();1542407418;Scan beans in the ApplicationContext, detect and register handler methods._@see #isHandler(Class)_@see #getMappingForMethod(Method, Class)_@see #handlerMethodsInitialized(Map);protected void initHandlerMethods() {_		String[] beanNames = obtainApplicationContext().getBeanNamesForType(Object.class)___		for (String beanName : beanNames) {_			if (!beanName.startsWith(SCOPED_TARGET_NAME_PREFIX)) {_				Class<?> beanType = null__				try {_					beanType = obtainApplicationContext().getType(beanName)__				}_				catch (Throwable ex) {_					_					if (logger.isTraceEnabled()) {_						logger.trace("Could not resolve type for bean '" + beanName + "'", ex)__					}_				}_				if (beanType != null && isHandler(beanType)) {_					detectHandlerMethods(beanName)__				}_			}_		}_		handlerMethodsInitialized(getHandlerMethods())__	};scan,beans,in,the,application,context,detect,and,register,handler,methods,see,is,handler,class,see,get,mapping,for,method,method,class,see,handler,methods,initialized,map;protected,void,init,handler,methods,string,bean,names,obtain,application,context,get,bean,names,for,type,object,class,for,string,bean,name,bean,names,if,bean,name,starts,with,class,bean,type,null,try,bean,type,obtain,application,context,get,type,bean,name,catch,throwable,ex,if,logger,is,trace,enabled,logger,trace,could,not,resolve,type,for,bean,bean,name,ex,if,bean,type,null,is,handler,bean,type,detect,handler,methods,bean,name,handler,methods,initialized,get,handler,methods
AbstractHandlerMethodMapping -> protected void initHandlerMethods();1548427561;Scan beans in the ApplicationContext, detect and register handler methods._@see #isHandler(Class)_@see #getMappingForMethod(Method, Class)_@see #handlerMethodsInitialized(Map);protected void initHandlerMethods() {_		String[] beanNames = obtainApplicationContext().getBeanNamesForType(Object.class)___		for (String beanName : beanNames) {_			if (!beanName.startsWith(SCOPED_TARGET_NAME_PREFIX)) {_				Class<?> beanType = null__				try {_					beanType = obtainApplicationContext().getType(beanName)__				}_				catch (Throwable ex) {_					_					if (logger.isTraceEnabled()) {_						logger.trace("Could not resolve type for bean '" + beanName + "'", ex)__					}_				}_				if (beanType != null && isHandler(beanType)) {_					detectHandlerMethods(beanName)__				}_			}_		}_		handlerMethodsInitialized(getHandlerMethods())__	};scan,beans,in,the,application,context,detect,and,register,handler,methods,see,is,handler,class,see,get,mapping,for,method,method,class,see,handler,methods,initialized,map;protected,void,init,handler,methods,string,bean,names,obtain,application,context,get,bean,names,for,type,object,class,for,string,bean,name,bean,names,if,bean,name,starts,with,class,bean,type,null,try,bean,type,obtain,application,context,get,type,bean,name,catch,throwable,ex,if,logger,is,trace,enabled,logger,trace,could,not,resolve,type,for,bean,bean,name,ex,if,bean,type,null,is,handler,bean,type,detect,handler,methods,bean,name,handler,methods,initialized,get,handler,methods
AbstractHandlerMethodMapping -> protected void initHandlerMethods();1551093473;Scan beans in the ApplicationContext, detect and register handler methods._@see #isHandler(Class)_@see #getMappingForMethod(Method, Class)_@see #handlerMethodsInitialized(Map);protected void initHandlerMethods() {_		String[] beanNames = obtainApplicationContext().getBeanNamesForType(Object.class)___		for (String beanName : beanNames) {_			if (!beanName.startsWith(SCOPED_TARGET_NAME_PREFIX)) {_				Class<?> beanType = null__				try {_					beanType = obtainApplicationContext().getType(beanName)__				}_				catch (Throwable ex) {_					_					if (logger.isTraceEnabled()) {_						logger.trace("Could not resolve type for bean '" + beanName + "'", ex)__					}_				}_				if (beanType != null && isHandler(beanType)) {_					detectHandlerMethods(beanName)__				}_			}_		}_		handlerMethodsInitialized(getHandlerMethods())__	};scan,beans,in,the,application,context,detect,and,register,handler,methods,see,is,handler,class,see,get,mapping,for,method,method,class,see,handler,methods,initialized,map;protected,void,init,handler,methods,string,bean,names,obtain,application,context,get,bean,names,for,type,object,class,for,string,bean,name,bean,names,if,bean,name,starts,with,class,bean,type,null,try,bean,type,obtain,application,context,get,type,bean,name,catch,throwable,ex,if,logger,is,trace,enabled,logger,trace,could,not,resolve,type,for,bean,bean,name,ex,if,bean,type,null,is,handler,bean,type,detect,handler,methods,bean,name,handler,methods,initialized,get,handler,methods
AbstractHandlerMethodMapping -> protected void detectHandlerMethods(final Object handler);1485986572;Look for handler methods in a handler._@param handler the bean name of a handler or a handler instance;protected void detectHandlerMethods(final Object handler) {_		Class<?> handlerType = (handler instanceof String ?_				getApplicationContext().getType((String) handler) : handler.getClass())__		final Class<?> userType = ClassUtils.getUserClass(handlerType)___		Map<Method, T> methods = MethodIntrospector.selectMethods(userType,_				(MethodIntrospector.MetadataLookup<T>) method -> getMappingForMethod(method, userType))___		if (logger.isDebugEnabled()) {_			logger.debug(methods.size() + " request handler methods found on " + userType + ": " + methods)__		}_		for (Map.Entry<Method, T> entry : methods.entrySet()) {_			Method invocableMethod = AopUtils.selectInvocableMethod(entry.getKey(), userType)__			T mapping = entry.getValue()__			registerHandlerMethod(handler, invocableMethod, mapping)__		}_	};look,for,handler,methods,in,a,handler,param,handler,the,bean,name,of,a,handler,or,a,handler,instance;protected,void,detect,handler,methods,final,object,handler,class,handler,type,handler,instanceof,string,get,application,context,get,type,string,handler,handler,get,class,final,class,user,type,class,utils,get,user,class,handler,type,map,method,t,methods,method,introspector,select,methods,user,type,method,introspector,metadata,lookup,t,method,get,mapping,for,method,method,user,type,if,logger,is,debug,enabled,logger,debug,methods,size,request,handler,methods,found,on,user,type,methods,for,map,entry,method,t,entry,methods,entry,set,method,invocable,method,aop,utils,select,invocable,method,entry,get,key,user,type,t,mapping,entry,get,value,register,handler,method,handler,invocable,method,mapping
AbstractHandlerMethodMapping -> protected void detectHandlerMethods(final Object handler);1486635693;Look for handler methods in a handler._@param handler the bean name of a handler or a handler instance;protected void detectHandlerMethods(final Object handler) {_		Class<?> handlerType = (handler instanceof String ?_				getApplicationContext().getType((String) handler) : handler.getClass())__		final Class<?> userType = ClassUtils.getUserClass(handlerType)___		Map<Method, T> methods = MethodIntrospector.selectMethods(userType,_				(MethodIntrospector.MetadataLookup<T>) method -> getMappingForMethod(method, userType))___		if (logger.isDebugEnabled()) {_			logger.debug(methods.size() + " request handler methods found on " + userType + ": " + methods)__		}_		for (Map.Entry<Method, T> entry : methods.entrySet()) {_			Method invocableMethod = AopUtils.selectInvocableMethod(entry.getKey(), userType)__			T mapping = entry.getValue()__			registerMapping(mapping, handler, invocableMethod)__		}_	};look,for,handler,methods,in,a,handler,param,handler,the,bean,name,of,a,handler,or,a,handler,instance;protected,void,detect,handler,methods,final,object,handler,class,handler,type,handler,instanceof,string,get,application,context,get,type,string,handler,handler,get,class,final,class,user,type,class,utils,get,user,class,handler,type,map,method,t,methods,method,introspector,select,methods,user,type,method,introspector,metadata,lookup,t,method,get,mapping,for,method,method,user,type,if,logger,is,debug,enabled,logger,debug,methods,size,request,handler,methods,found,on,user,type,methods,for,map,entry,method,t,entry,methods,entry,set,method,invocable,method,aop,utils,select,invocable,method,entry,get,key,user,type,t,mapping,entry,get,value,register,mapping,mapping,handler,invocable,method
AbstractHandlerMethodMapping -> protected void detectHandlerMethods(final Object handler);1486674586;Look for handler methods in a handler._@param handler the bean name of a handler or a handler instance;protected void detectHandlerMethods(final Object handler) {_		Class<?> handlerType = (handler instanceof String ?_				getApplicationContext().getType((String) handler) : handler.getClass())__		final Class<?> userType = ClassUtils.getUserClass(handlerType)___		Map<Method, T> methods = MethodIntrospector.selectMethods(userType,_				(MethodIntrospector.MetadataLookup<T>) method -> getMappingForMethod(method, userType))___		if (logger.isDebugEnabled()) {_			logger.debug(methods.size() + " request handler methods found on " + userType + ": " + methods)__		}_		for (Map.Entry<Method, T> entry : methods.entrySet()) {_			Method invocableMethod = AopUtils.selectInvocableMethod(entry.getKey(), userType)__			T mapping = entry.getValue()__			registerMapping(mapping, handler, invocableMethod)__		}_	};look,for,handler,methods,in,a,handler,param,handler,the,bean,name,of,a,handler,or,a,handler,instance;protected,void,detect,handler,methods,final,object,handler,class,handler,type,handler,instanceof,string,get,application,context,get,type,string,handler,handler,get,class,final,class,user,type,class,utils,get,user,class,handler,type,map,method,t,methods,method,introspector,select,methods,user,type,method,introspector,metadata,lookup,t,method,get,mapping,for,method,method,user,type,if,logger,is,debug,enabled,logger,debug,methods,size,request,handler,methods,found,on,user,type,methods,for,map,entry,method,t,entry,methods,entry,set,method,invocable,method,aop,utils,select,invocable,method,entry,get,key,user,type,t,mapping,entry,get,value,register,mapping,mapping,handler,invocable,method
AbstractHandlerMethodMapping -> protected void detectHandlerMethods(final Object handler);1486747801;Look for handler methods in a handler._@param handler the bean name of a handler or a handler instance;protected void detectHandlerMethods(final Object handler) {_		Class<?> handlerType = (handler instanceof String ?_				getApplicationContext().getType((String) handler) : handler.getClass())__		final Class<?> userType = ClassUtils.getUserClass(handlerType)___		Map<Method, T> methods = MethodIntrospector.selectMethods(userType,_				(MethodIntrospector.MetadataLookup<T>) method -> getMappingForMethod(method, userType))___		if (logger.isDebugEnabled()) {_			logger.debug(methods.size() + " request handler methods found on " + userType + ": " + methods)__		}_		for (Map.Entry<Method, T> entry : methods.entrySet()) {_			Method invocableMethod = AopUtils.selectInvocableMethod(entry.getKey(), userType)__			T mapping = entry.getValue()__			registerHandlerMethod(handler, invocableMethod, mapping)__		}_	};look,for,handler,methods,in,a,handler,param,handler,the,bean,name,of,a,handler,or,a,handler,instance;protected,void,detect,handler,methods,final,object,handler,class,handler,type,handler,instanceof,string,get,application,context,get,type,string,handler,handler,get,class,final,class,user,type,class,utils,get,user,class,handler,type,map,method,t,methods,method,introspector,select,methods,user,type,method,introspector,metadata,lookup,t,method,get,mapping,for,method,method,user,type,if,logger,is,debug,enabled,logger,debug,methods,size,request,handler,methods,found,on,user,type,methods,for,map,entry,method,t,entry,methods,entry,set,method,invocable,method,aop,utils,select,invocable,method,entry,get,key,user,type,t,mapping,entry,get,value,register,handler,method,handler,invocable,method,mapping
AbstractHandlerMethodMapping -> protected void detectHandlerMethods(final Object handler);1489852683;Look for handler methods in a handler._@param handler the bean name of a handler or a handler instance;protected void detectHandlerMethods(final Object handler) {_		Class<?> handlerType = (handler instanceof String ?_				getApplicationContext().getType((String) handler) : handler.getClass())__		final Class<?> userType = ClassUtils.getUserClass(handlerType)___		Map<Method, T> methods = MethodIntrospector.selectMethods(userType,_				(MethodIntrospector.MetadataLookup<T>) method -> getMappingForMethod(method, userType))___		if (logger.isDebugEnabled()) {_			logger.debug(methods.size() + " request handler methods found on " + userType + ": " + methods)__		}_		for (Map.Entry<Method, T> entry : methods.entrySet()) {_			Method invocableMethod = AopUtils.selectInvocableMethod(entry.getKey(), userType)__			T mapping = entry.getValue()__			registerHandlerMethod(handler, invocableMethod, mapping)__		}_	};look,for,handler,methods,in,a,handler,param,handler,the,bean,name,of,a,handler,or,a,handler,instance;protected,void,detect,handler,methods,final,object,handler,class,handler,type,handler,instanceof,string,get,application,context,get,type,string,handler,handler,get,class,final,class,user,type,class,utils,get,user,class,handler,type,map,method,t,methods,method,introspector,select,methods,user,type,method,introspector,metadata,lookup,t,method,get,mapping,for,method,method,user,type,if,logger,is,debug,enabled,logger,debug,methods,size,request,handler,methods,found,on,user,type,methods,for,map,entry,method,t,entry,methods,entry,set,method,invocable,method,aop,utils,select,invocable,method,entry,get,key,user,type,t,mapping,entry,get,value,register,handler,method,handler,invocable,method,mapping
AbstractHandlerMethodMapping -> protected void detectHandlerMethods(final Object handler);1492542679;Look for handler methods in a handler._@param handler the bean name of a handler or a handler instance;protected void detectHandlerMethods(final Object handler) {_		Class<?> handlerType = (handler instanceof String ?_				getApplicationContext().getType((String) handler) : handler.getClass())__		final Class<?> userType = ClassUtils.getUserClass(handlerType)___		Map<Method, T> methods = MethodIntrospector.selectMethods(userType,_				(MethodIntrospector.MetadataLookup<T>) method -> getMappingForMethod(method, userType))___		if (logger.isDebugEnabled()) {_			logger.debug(methods.size() + " request handler methods found on " + userType + ": " + methods)__		}_		for (Map.Entry<Method, T> entry : methods.entrySet()) {_			Method invocableMethod = AopUtils.selectInvocableMethod(entry.getKey(), userType)__			T mapping = entry.getValue()__			registerHandlerMethod(handler, invocableMethod, mapping)__		}_	};look,for,handler,methods,in,a,handler,param,handler,the,bean,name,of,a,handler,or,a,handler,instance;protected,void,detect,handler,methods,final,object,handler,class,handler,type,handler,instanceof,string,get,application,context,get,type,string,handler,handler,get,class,final,class,user,type,class,utils,get,user,class,handler,type,map,method,t,methods,method,introspector,select,methods,user,type,method,introspector,metadata,lookup,t,method,get,mapping,for,method,method,user,type,if,logger,is,debug,enabled,logger,debug,methods,size,request,handler,methods,found,on,user,type,methods,for,map,entry,method,t,entry,methods,entry,set,method,invocable,method,aop,utils,select,invocable,method,entry,get,key,user,type,t,mapping,entry,get,value,register,handler,method,handler,invocable,method,mapping
AbstractHandlerMethodMapping -> protected void detectHandlerMethods(final Object handler);1493370460;Look for handler methods in a handler._@param handler the bean name of a handler or a handler instance;protected void detectHandlerMethods(final Object handler) {_		Class<?> handlerType = (handler instanceof String ?_				getApplicationContext().getType((String) handler) : handler.getClass())__		final Class<?> userType = ClassUtils.getUserClass(handlerType)___		Map<Method, T> methods = MethodIntrospector.selectMethods(userType,_				(MethodIntrospector.MetadataLookup<T>) method -> getMappingForMethod(method, userType))___		if (logger.isDebugEnabled()) {_			logger.debug(methods.size() + " request handler methods found on " + userType + ": " + methods)__		}_		methods.forEach((key, mapping) -> {_			Method invocableMethod = AopUtils.selectInvocableMethod(key, userType)__			registerHandlerMethod(handler, invocableMethod, mapping)__		})__	};look,for,handler,methods,in,a,handler,param,handler,the,bean,name,of,a,handler,or,a,handler,instance;protected,void,detect,handler,methods,final,object,handler,class,handler,type,handler,instanceof,string,get,application,context,get,type,string,handler,handler,get,class,final,class,user,type,class,utils,get,user,class,handler,type,map,method,t,methods,method,introspector,select,methods,user,type,method,introspector,metadata,lookup,t,method,get,mapping,for,method,method,user,type,if,logger,is,debug,enabled,logger,debug,methods,size,request,handler,methods,found,on,user,type,methods,methods,for,each,key,mapping,method,invocable,method,aop,utils,select,invocable,method,key,user,type,register,handler,method,handler,invocable,method,mapping
AbstractHandlerMethodMapping -> protected void detectHandlerMethods(final Object handler);1493391766;Look for handler methods in a handler._@param handler the bean name of a handler or a handler instance;protected void detectHandlerMethods(final Object handler) {_		Class<?> handlerType = (handler instanceof String ?_				getApplicationContext().getType((String) handler) : handler.getClass())__		final Class<?> userType = ClassUtils.getUserClass(handlerType)___		Map<Method, T> methods = MethodIntrospector.selectMethods(userType,_				(MethodIntrospector.MetadataLookup<T>) method -> getMappingForMethod(method, userType))___		if (logger.isDebugEnabled()) {_			logger.debug(methods.size() + " request handler methods found on " + userType + ": " + methods)__		}_		methods.forEach((key, mapping) -> {_			Method invocableMethod = AopUtils.selectInvocableMethod(key, userType)__			registerHandlerMethod(handler, invocableMethod, mapping)__		})__	};look,for,handler,methods,in,a,handler,param,handler,the,bean,name,of,a,handler,or,a,handler,instance;protected,void,detect,handler,methods,final,object,handler,class,handler,type,handler,instanceof,string,get,application,context,get,type,string,handler,handler,get,class,final,class,user,type,class,utils,get,user,class,handler,type,map,method,t,methods,method,introspector,select,methods,user,type,method,introspector,metadata,lookup,t,method,get,mapping,for,method,method,user,type,if,logger,is,debug,enabled,logger,debug,methods,size,request,handler,methods,found,on,user,type,methods,methods,for,each,key,mapping,method,invocable,method,aop,utils,select,invocable,method,key,user,type,register,handler,method,handler,invocable,method,mapping
AbstractHandlerMethodMapping -> protected void detectHandlerMethods(final Object handler);1493755795;Look for handler methods in a handler._@param handler the bean name of a handler or a handler instance;protected void detectHandlerMethods(final Object handler) {_		Class<?> handlerType = (handler instanceof String ?_				getApplicationContext().getType((String) handler) : handler.getClass())__		final Class<?> userType = ClassUtils.getUserClass(handlerType)___		Map<Method, T> methods = MethodIntrospector.selectMethods(userType,_				(MethodIntrospector.MetadataLookup<T>) method -> getMappingForMethod(method, userType))___		if (logger.isDebugEnabled()) {_			logger.debug(methods.size() + " request handler methods found on " + userType + ": " + methods)__		}_		methods.forEach((key, mapping) -> {_			Method invocableMethod = AopUtils.selectInvocableMethod(key, userType)__			registerHandlerMethod(handler, invocableMethod, mapping)__		})__	};look,for,handler,methods,in,a,handler,param,handler,the,bean,name,of,a,handler,or,a,handler,instance;protected,void,detect,handler,methods,final,object,handler,class,handler,type,handler,instanceof,string,get,application,context,get,type,string,handler,handler,get,class,final,class,user,type,class,utils,get,user,class,handler,type,map,method,t,methods,method,introspector,select,methods,user,type,method,introspector,metadata,lookup,t,method,get,mapping,for,method,method,user,type,if,logger,is,debug,enabled,logger,debug,methods,size,request,handler,methods,found,on,user,type,methods,methods,for,each,key,mapping,method,invocable,method,aop,utils,select,invocable,method,key,user,type,register,handler,method,handler,invocable,method,mapping
AbstractHandlerMethodMapping -> protected void detectHandlerMethods(final Object handler);1495868221;Look for handler methods in a handler._@param handler the bean name of a handler or a handler instance;protected void detectHandlerMethods(final Object handler) {_		Class<?> handlerType = (handler instanceof String ?_				getApplicationContext().getType((String) handler) : handler.getClass())__		final Class<?> userType = ClassUtils.getUserClass(handlerType)___		Map<Method, T> methods = MethodIntrospector.selectMethods(userType,_				(MethodIntrospector.MetadataLookup<T>) method -> getMappingForMethod(method, userType))___		if (logger.isDebugEnabled()) {_			logger.debug(methods.size() + " request handler methods found on " + userType + ": " + methods)__		}_		methods.forEach((key, mapping) -> {_			Method invocableMethod = AopUtils.selectInvocableMethod(key, userType)__			registerHandlerMethod(handler, invocableMethod, mapping)__		})__	};look,for,handler,methods,in,a,handler,param,handler,the,bean,name,of,a,handler,or,a,handler,instance;protected,void,detect,handler,methods,final,object,handler,class,handler,type,handler,instanceof,string,get,application,context,get,type,string,handler,handler,get,class,final,class,user,type,class,utils,get,user,class,handler,type,map,method,t,methods,method,introspector,select,methods,user,type,method,introspector,metadata,lookup,t,method,get,mapping,for,method,method,user,type,if,logger,is,debug,enabled,logger,debug,methods,size,request,handler,methods,found,on,user,type,methods,methods,for,each,key,mapping,method,invocable,method,aop,utils,select,invocable,method,key,user,type,register,handler,method,handler,invocable,method,mapping
AbstractHandlerMethodMapping -> protected void detectHandlerMethods(final Object handler);1496334664;Look for handler methods in a handler._@param handler the bean name of a handler or a handler instance;protected void detectHandlerMethods(final Object handler) {_		Class<?> handlerType = (handler instanceof String ?_				getApplicationContext().getType((String) handler) : handler.getClass())__		final Class<?> userType = ClassUtils.getUserClass(handlerType)___		Map<Method, T> methods = MethodIntrospector.selectMethods(userType,_				(MethodIntrospector.MetadataLookup<T>) method -> getMappingForMethod(method, userType))___		if (logger.isDebugEnabled()) {_			logger.debug(methods.size() + " request handler methods found on " + userType + ": " + methods)__		}_		methods.forEach((key, mapping) -> {_			Method invocableMethod = AopUtils.selectInvocableMethod(key, userType)__			registerHandlerMethod(handler, invocableMethod, mapping)__		})__	};look,for,handler,methods,in,a,handler,param,handler,the,bean,name,of,a,handler,or,a,handler,instance;protected,void,detect,handler,methods,final,object,handler,class,handler,type,handler,instanceof,string,get,application,context,get,type,string,handler,handler,get,class,final,class,user,type,class,utils,get,user,class,handler,type,map,method,t,methods,method,introspector,select,methods,user,type,method,introspector,metadata,lookup,t,method,get,mapping,for,method,method,user,type,if,logger,is,debug,enabled,logger,debug,methods,size,request,handler,methods,found,on,user,type,methods,methods,for,each,key,mapping,method,invocable,method,aop,utils,select,invocable,method,key,user,type,register,handler,method,handler,invocable,method,mapping
AbstractHandlerMethodMapping -> protected void detectHandlerMethods(final Object handler);1496430942;Look for handler methods in a handler._@param handler the bean name of a handler or a handler instance;protected void detectHandlerMethods(final Object handler) {_		Class<?> handlerType = (handler instanceof String ?_				getApplicationContext().getType((String) handler) : handler.getClass())__		final Class<?> userType = ClassUtils.getUserClass(handlerType)___		Map<Method, T> methods = MethodIntrospector.selectMethods(userType,_				(MethodIntrospector.MetadataLookup<T>) method -> getMappingForMethod(method, userType))___		if (logger.isDebugEnabled()) {_			logger.debug(methods.size() + " request handler methods found on " + userType + ": " + methods)__		}_		methods.forEach((key, mapping) -> {_			Method invocableMethod = AopUtils.selectInvocableMethod(key, userType)__			registerHandlerMethod(handler, invocableMethod, mapping)__		})__	};look,for,handler,methods,in,a,handler,param,handler,the,bean,name,of,a,handler,or,a,handler,instance;protected,void,detect,handler,methods,final,object,handler,class,handler,type,handler,instanceof,string,get,application,context,get,type,string,handler,handler,get,class,final,class,user,type,class,utils,get,user,class,handler,type,map,method,t,methods,method,introspector,select,methods,user,type,method,introspector,metadata,lookup,t,method,get,mapping,for,method,method,user,type,if,logger,is,debug,enabled,logger,debug,methods,size,request,handler,methods,found,on,user,type,methods,methods,for,each,key,mapping,method,invocable,method,aop,utils,select,invocable,method,key,user,type,register,handler,method,handler,invocable,method,mapping
AbstractHandlerMethodMapping -> protected void detectHandlerMethods(final Object handler);1496837955;Look for handler methods in a handler._@param handler the bean name of a handler or a handler instance;protected void detectHandlerMethods(final Object handler) {_		Class<?> handlerType = (handler instanceof String ?_				obtainApplicationContext().getType((String) handler) : handler.getClass())___		if (handlerType != null) {_			final Class<?> userType = ClassUtils.getUserClass(handlerType)__			Map<Method, T> methods = MethodIntrospector.selectMethods(userType,_					(MethodIntrospector.MetadataLookup<T>) method -> getMappingForMethod(method, userType))__			if (logger.isDebugEnabled()) {_				logger.debug(methods.size() + " request handler methods found on " + userType + ": " + methods)__			}_			methods.forEach((key, mapping) -> {_				Method invocableMethod = AopUtils.selectInvocableMethod(key, userType)__				registerHandlerMethod(handler, invocableMethod, mapping)__			})__		}_	};look,for,handler,methods,in,a,handler,param,handler,the,bean,name,of,a,handler,or,a,handler,instance;protected,void,detect,handler,methods,final,object,handler,class,handler,type,handler,instanceof,string,obtain,application,context,get,type,string,handler,handler,get,class,if,handler,type,null,final,class,user,type,class,utils,get,user,class,handler,type,map,method,t,methods,method,introspector,select,methods,user,type,method,introspector,metadata,lookup,t,method,get,mapping,for,method,method,user,type,if,logger,is,debug,enabled,logger,debug,methods,size,request,handler,methods,found,on,user,type,methods,methods,for,each,key,mapping,method,invocable,method,aop,utils,select,invocable,method,key,user,type,register,handler,method,handler,invocable,method,mapping
AbstractHandlerMethodMapping -> protected void detectHandlerMethods(final Object handler);1497039338;Look for handler methods in a handler._@param handler the bean name of a handler or a handler instance;protected void detectHandlerMethods(final Object handler) {_		Class<?> handlerType = (handler instanceof String ?_				obtainApplicationContext().getType((String) handler) : handler.getClass())___		if (handlerType != null) {_			final Class<?> userType = ClassUtils.getUserClass(handlerType)__			Map<Method, T> methods = MethodIntrospector.selectMethods(userType,_					(MethodIntrospector.MetadataLookup<T>) method -> getMappingForMethod(method, userType))__			if (logger.isDebugEnabled()) {_				logger.debug(methods.size() + " request handler methods found on " + userType + ": " + methods)__			}_			methods.forEach((key, mapping) -> {_				Method invocableMethod = AopUtils.selectInvocableMethod(key, userType)__				registerHandlerMethod(handler, invocableMethod, mapping)__			})__		}_	};look,for,handler,methods,in,a,handler,param,handler,the,bean,name,of,a,handler,or,a,handler,instance;protected,void,detect,handler,methods,final,object,handler,class,handler,type,handler,instanceof,string,obtain,application,context,get,type,string,handler,handler,get,class,if,handler,type,null,final,class,user,type,class,utils,get,user,class,handler,type,map,method,t,methods,method,introspector,select,methods,user,type,method,introspector,metadata,lookup,t,method,get,mapping,for,method,method,user,type,if,logger,is,debug,enabled,logger,debug,methods,size,request,handler,methods,found,on,user,type,methods,methods,for,each,key,mapping,method,invocable,method,aop,utils,select,invocable,method,key,user,type,register,handler,method,handler,invocable,method,mapping
AbstractHandlerMethodMapping -> protected void detectHandlerMethods(final Object handler);1497232764;Look for handler methods in a handler._@param handler the bean name of a handler or a handler instance;protected void detectHandlerMethods(final Object handler) {_		Class<?> handlerType = (handler instanceof String ?_				obtainApplicationContext().getType((String) handler) : handler.getClass())___		if (handlerType != null) {_			final Class<?> userType = ClassUtils.getUserClass(handlerType)__			Map<Method, T> methods = MethodIntrospector.selectMethods(userType,_					(MethodIntrospector.MetadataLookup<T>) method -> getMappingForMethod(method, userType))__			if (logger.isDebugEnabled()) {_				logger.debug(methods.size() + " request handler methods found on " + userType + ": " + methods)__			}_			methods.forEach((key, mapping) -> {_				Method invocableMethod = AopUtils.selectInvocableMethod(key, userType)__				registerHandlerMethod(handler, invocableMethod, mapping)__			})__		}_	};look,for,handler,methods,in,a,handler,param,handler,the,bean,name,of,a,handler,or,a,handler,instance;protected,void,detect,handler,methods,final,object,handler,class,handler,type,handler,instanceof,string,obtain,application,context,get,type,string,handler,handler,get,class,if,handler,type,null,final,class,user,type,class,utils,get,user,class,handler,type,map,method,t,methods,method,introspector,select,methods,user,type,method,introspector,metadata,lookup,t,method,get,mapping,for,method,method,user,type,if,logger,is,debug,enabled,logger,debug,methods,size,request,handler,methods,found,on,user,type,methods,methods,for,each,key,mapping,method,invocable,method,aop,utils,select,invocable,method,key,user,type,register,handler,method,handler,invocable,method,mapping
AbstractHandlerMethodMapping -> protected void detectHandlerMethods(final Object handler);1497251962;Look for handler methods in a handler._@param handler the bean name of a handler or a handler instance;protected void detectHandlerMethods(final Object handler) {_		Class<?> handlerType = (handler instanceof String ?_				obtainApplicationContext().getType((String) handler) : handler.getClass())___		if (handlerType != null) {_			final Class<?> userType = ClassUtils.getUserClass(handlerType)__			Map<Method, T> methods = MethodIntrospector.selectMethods(userType,_					(MethodIntrospector.MetadataLookup<T>) method -> getMappingForMethod(method, userType))__			if (logger.isDebugEnabled()) {_				logger.debug(methods.size() + " request handler methods found on " + userType + ": " + methods)__			}_			methods.forEach((key, mapping) -> {_				Method invocableMethod = AopUtils.selectInvocableMethod(key, userType)__				registerHandlerMethod(handler, invocableMethod, mapping)__			})__		}_	};look,for,handler,methods,in,a,handler,param,handler,the,bean,name,of,a,handler,or,a,handler,instance;protected,void,detect,handler,methods,final,object,handler,class,handler,type,handler,instanceof,string,obtain,application,context,get,type,string,handler,handler,get,class,if,handler,type,null,final,class,user,type,class,utils,get,user,class,handler,type,map,method,t,methods,method,introspector,select,methods,user,type,method,introspector,metadata,lookup,t,method,get,mapping,for,method,method,user,type,if,logger,is,debug,enabled,logger,debug,methods,size,request,handler,methods,found,on,user,type,methods,methods,for,each,key,mapping,method,invocable,method,aop,utils,select,invocable,method,key,user,type,register,handler,method,handler,invocable,method,mapping
AbstractHandlerMethodMapping -> protected void detectHandlerMethods(final Object handler);1497286385;Look for handler methods in a handler._@param handler the bean name of a handler or a handler instance;protected void detectHandlerMethods(final Object handler) {_		Class<?> handlerType = (handler instanceof String ?_				obtainApplicationContext().getType((String) handler) : handler.getClass())___		if (handlerType != null) {_			final Class<?> userType = ClassUtils.getUserClass(handlerType)__			Map<Method, T> methods = MethodIntrospector.selectMethods(userType,_					(MethodIntrospector.MetadataLookup<T>) method -> getMappingForMethod(method, userType))__			if (logger.isDebugEnabled()) {_				logger.debug(methods.size() + " request handler methods found on " + userType + ": " + methods)__			}_			methods.forEach((key, mapping) -> {_				Method invocableMethod = AopUtils.selectInvocableMethod(key, userType)__				registerHandlerMethod(handler, invocableMethod, mapping)__			})__		}_	};look,for,handler,methods,in,a,handler,param,handler,the,bean,name,of,a,handler,or,a,handler,instance;protected,void,detect,handler,methods,final,object,handler,class,handler,type,handler,instanceof,string,obtain,application,context,get,type,string,handler,handler,get,class,if,handler,type,null,final,class,user,type,class,utils,get,user,class,handler,type,map,method,t,methods,method,introspector,select,methods,user,type,method,introspector,metadata,lookup,t,method,get,mapping,for,method,method,user,type,if,logger,is,debug,enabled,logger,debug,methods,size,request,handler,methods,found,on,user,type,methods,methods,for,each,key,mapping,method,invocable,method,aop,utils,select,invocable,method,key,user,type,register,handler,method,handler,invocable,method,mapping
AbstractHandlerMethodMapping -> protected void detectHandlerMethods(final Object handler);1498756719;Look for handler methods in a handler._@param handler the bean name of a handler or a handler instance;protected void detectHandlerMethods(final Object handler) {_		Class<?> handlerType = (handler instanceof String ?_				obtainApplicationContext().getType((String) handler) : handler.getClass())___		if (handlerType != null) {_			final Class<?> userType = ClassUtils.getUserClass(handlerType)__			Map<Method, T> methods = MethodIntrospector.selectMethods(userType,_					(MethodIntrospector.MetadataLookup<T>) method -> getMappingForMethod(method, userType))__			if (logger.isDebugEnabled()) {_				logger.debug(methods.size() + " request handler methods found on " + userType + ": " + methods)__			}_			methods.forEach((key, mapping) -> {_				Method invocableMethod = AopUtils.selectInvocableMethod(key, userType)__				registerHandlerMethod(handler, invocableMethod, mapping)__			})__		}_	};look,for,handler,methods,in,a,handler,param,handler,the,bean,name,of,a,handler,or,a,handler,instance;protected,void,detect,handler,methods,final,object,handler,class,handler,type,handler,instanceof,string,obtain,application,context,get,type,string,handler,handler,get,class,if,handler,type,null,final,class,user,type,class,utils,get,user,class,handler,type,map,method,t,methods,method,introspector,select,methods,user,type,method,introspector,metadata,lookup,t,method,get,mapping,for,method,method,user,type,if,logger,is,debug,enabled,logger,debug,methods,size,request,handler,methods,found,on,user,type,methods,methods,for,each,key,mapping,method,invocable,method,aop,utils,select,invocable,method,key,user,type,register,handler,method,handler,invocable,method,mapping
AbstractHandlerMethodMapping -> protected void detectHandlerMethods(final Object handler);1498861175;Look for handler methods in a handler._@param handler the bean name of a handler or a handler instance;protected void detectHandlerMethods(final Object handler) {_		Class<?> handlerType = (handler instanceof String ?_				obtainApplicationContext().getType((String) handler) : handler.getClass())___		if (handlerType != null) {_			final Class<?> userType = ClassUtils.getUserClass(handlerType)__			Map<Method, T> methods = MethodIntrospector.selectMethods(userType,_					(MethodIntrospector.MetadataLookup<T>) method -> getMappingForMethod(method, userType))__			if (logger.isDebugEnabled()) {_				logger.debug(methods.size() + " request handler methods found on " + userType + ": " + methods)__			}_			methods.forEach((key, mapping) -> {_				Method invocableMethod = AopUtils.selectInvocableMethod(key, userType)__				registerHandlerMethod(handler, invocableMethod, mapping)__			})__		}_	};look,for,handler,methods,in,a,handler,param,handler,the,bean,name,of,a,handler,or,a,handler,instance;protected,void,detect,handler,methods,final,object,handler,class,handler,type,handler,instanceof,string,obtain,application,context,get,type,string,handler,handler,get,class,if,handler,type,null,final,class,user,type,class,utils,get,user,class,handler,type,map,method,t,methods,method,introspector,select,methods,user,type,method,introspector,metadata,lookup,t,method,get,mapping,for,method,method,user,type,if,logger,is,debug,enabled,logger,debug,methods,size,request,handler,methods,found,on,user,type,methods,methods,for,each,key,mapping,method,invocable,method,aop,utils,select,invocable,method,key,user,type,register,handler,method,handler,invocable,method,mapping
AbstractHandlerMethodMapping -> protected void detectHandlerMethods(final Object handler);1498953917;Look for handler methods in a handler._@param handler the bean name of a handler or a handler instance;protected void detectHandlerMethods(final Object handler) {_		Class<?> handlerType = (handler instanceof String ?_				obtainApplicationContext().getType((String) handler) : handler.getClass())___		if (handlerType != null) {_			final Class<?> userType = ClassUtils.getUserClass(handlerType)__			Map<Method, T> methods = MethodIntrospector.selectMethods(userType,_					(MethodIntrospector.MetadataLookup<T>) method -> getMappingForMethod(method, userType))__			if (logger.isDebugEnabled()) {_				logger.debug(methods.size() + " request handler methods found on " + userType + ": " + methods)__			}_			methods.forEach((key, mapping) -> {_				Method invocableMethod = AopUtils.selectInvocableMethod(key, userType)__				registerHandlerMethod(handler, invocableMethod, mapping)__			})__		}_	};look,for,handler,methods,in,a,handler,param,handler,the,bean,name,of,a,handler,or,a,handler,instance;protected,void,detect,handler,methods,final,object,handler,class,handler,type,handler,instanceof,string,obtain,application,context,get,type,string,handler,handler,get,class,if,handler,type,null,final,class,user,type,class,utils,get,user,class,handler,type,map,method,t,methods,method,introspector,select,methods,user,type,method,introspector,metadata,lookup,t,method,get,mapping,for,method,method,user,type,if,logger,is,debug,enabled,logger,debug,methods,size,request,handler,methods,found,on,user,type,methods,methods,for,each,key,mapping,method,invocable,method,aop,utils,select,invocable,method,key,user,type,register,handler,method,handler,invocable,method,mapping
AbstractHandlerMethodMapping -> protected void detectHandlerMethods(final Object handler);1516617801;Look for handler methods in a handler._@param handler the bean name of a handler or a handler instance;protected void detectHandlerMethods(final Object handler) {_		Class<?> handlerType = (handler instanceof String ?_				obtainApplicationContext().getType((String) handler) : handler.getClass())___		if (handlerType != null) {_			final Class<?> userType = ClassUtils.getUserClass(handlerType)__			Map<Method, T> methods = MethodIntrospector.selectMethods(userType,_					(MethodIntrospector.MetadataLookup<T>) method -> getMappingForMethod(method, userType))__			if (logger.isDebugEnabled()) {_				logger.debug(methods.size() + " request handler methods found on " + userType + ": " + methods)__			}_			methods.forEach((key, mapping) -> {_				Method invocableMethod = AopUtils.selectInvocableMethod(key, userType)__				registerHandlerMethod(handler, invocableMethod, mapping)__			})__		}_	};look,for,handler,methods,in,a,handler,param,handler,the,bean,name,of,a,handler,or,a,handler,instance;protected,void,detect,handler,methods,final,object,handler,class,handler,type,handler,instanceof,string,obtain,application,context,get,type,string,handler,handler,get,class,if,handler,type,null,final,class,user,type,class,utils,get,user,class,handler,type,map,method,t,methods,method,introspector,select,methods,user,type,method,introspector,metadata,lookup,t,method,get,mapping,for,method,method,user,type,if,logger,is,debug,enabled,logger,debug,methods,size,request,handler,methods,found,on,user,type,methods,methods,for,each,key,mapping,method,invocable,method,aop,utils,select,invocable,method,key,user,type,register,handler,method,handler,invocable,method,mapping
AbstractHandlerMethodMapping -> protected void detectHandlerMethods(final Object handler);1529721864;Look for handler methods in a handler._@param handler the bean name of a handler or a handler instance;protected void detectHandlerMethods(final Object handler) {_		Class<?> handlerType = (handler instanceof String ?_				obtainApplicationContext().getType((String) handler) : handler.getClass())___		if (handlerType != null) {_			final Class<?> userType = ClassUtils.getUserClass(handlerType)__			Map<Method, T> methods = MethodIntrospector.selectMethods(userType,_					(MethodIntrospector.MetadataLookup<T>) method -> getMappingForMethod(method, userType))__			if (logger.isTraceEnabled()) {_				logger.trace("Mapped " + methods.size() + " handler method(s) for " + userType + ": " + methods)__			}_			methods.forEach((key, mapping) -> {_				Method invocableMethod = AopUtils.selectInvocableMethod(key, userType)__				registerHandlerMethod(handler, invocableMethod, mapping)__			})__		}_	};look,for,handler,methods,in,a,handler,param,handler,the,bean,name,of,a,handler,or,a,handler,instance;protected,void,detect,handler,methods,final,object,handler,class,handler,type,handler,instanceof,string,obtain,application,context,get,type,string,handler,handler,get,class,if,handler,type,null,final,class,user,type,class,utils,get,user,class,handler,type,map,method,t,methods,method,introspector,select,methods,user,type,method,introspector,metadata,lookup,t,method,get,mapping,for,method,method,user,type,if,logger,is,trace,enabled,logger,trace,mapped,methods,size,handler,method,s,for,user,type,methods,methods,for,each,key,mapping,method,invocable,method,aop,utils,select,invocable,method,key,user,type,register,handler,method,handler,invocable,method,mapping
AbstractHandlerMethodMapping -> protected void detectHandlerMethods(final Object handler);1530174524;Look for handler methods in a handler._@param handler the bean name of a handler or a handler instance;protected void detectHandlerMethods(final Object handler) {_		Class<?> handlerType = (handler instanceof String ?_				obtainApplicationContext().getType((String) handler) : handler.getClass())___		if (handlerType != null) {_			final Class<?> userType = ClassUtils.getUserClass(handlerType)__			Map<Method, T> methods = MethodIntrospector.selectMethods(userType,_					(MethodIntrospector.MetadataLookup<T>) method -> getMappingForMethod(method, userType))__			if (logger.isTraceEnabled()) {_				logger.trace("Mapped " + methods.size() + " handler method(s) for " + userType + ": " + methods)__			}_			methods.forEach((key, mapping) -> {_				Method invocableMethod = AopUtils.selectInvocableMethod(key, userType)__				registerHandlerMethod(handler, invocableMethod, mapping)__			})__		}_	};look,for,handler,methods,in,a,handler,param,handler,the,bean,name,of,a,handler,or,a,handler,instance;protected,void,detect,handler,methods,final,object,handler,class,handler,type,handler,instanceof,string,obtain,application,context,get,type,string,handler,handler,get,class,if,handler,type,null,final,class,user,type,class,utils,get,user,class,handler,type,map,method,t,methods,method,introspector,select,methods,user,type,method,introspector,metadata,lookup,t,method,get,mapping,for,method,method,user,type,if,logger,is,trace,enabled,logger,trace,mapped,methods,size,handler,method,s,for,user,type,methods,methods,for,each,key,mapping,method,invocable,method,aop,utils,select,invocable,method,key,user,type,register,handler,method,handler,invocable,method,mapping
AbstractHandlerMethodMapping -> protected void detectHandlerMethods(final Object handler);1530793633;Look for handler methods in a handler._@param handler the bean name of a handler or a handler instance;protected void detectHandlerMethods(final Object handler) {_		Class<?> handlerType = (handler instanceof String ?_				obtainApplicationContext().getType((String) handler) : handler.getClass())___		if (handlerType != null) {_			final Class<?> userType = ClassUtils.getUserClass(handlerType)__			Map<Method, T> methods = MethodIntrospector.selectMethods(userType,_					(MethodIntrospector.MetadataLookup<T>) method -> getMappingForMethod(method, userType))__			if (logger.isTraceEnabled()) {_				logger.trace("Mapped " + methods.size() + " handler method(s) for " + userType + ": " + methods)__			}_			methods.forEach((key, mapping) -> {_				Method invocableMethod = AopUtils.selectInvocableMethod(key, userType)__				registerHandlerMethod(handler, invocableMethod, mapping)__			})__		}_	};look,for,handler,methods,in,a,handler,param,handler,the,bean,name,of,a,handler,or,a,handler,instance;protected,void,detect,handler,methods,final,object,handler,class,handler,type,handler,instanceof,string,obtain,application,context,get,type,string,handler,handler,get,class,if,handler,type,null,final,class,user,type,class,utils,get,user,class,handler,type,map,method,t,methods,method,introspector,select,methods,user,type,method,introspector,metadata,lookup,t,method,get,mapping,for,method,method,user,type,if,logger,is,trace,enabled,logger,trace,mapped,methods,size,handler,method,s,for,user,type,methods,methods,for,each,key,mapping,method,invocable,method,aop,utils,select,invocable,method,key,user,type,register,handler,method,handler,invocable,method,mapping
AbstractHandlerMethodMapping -> protected void detectHandlerMethods(final Object handler);1542407418;Look for handler methods in a handler._@param handler the bean name of a handler or a handler instance;protected void detectHandlerMethods(final Object handler) {_		Class<?> handlerType = (handler instanceof String ?_				obtainApplicationContext().getType((String) handler) : handler.getClass())___		if (handlerType != null) {_			final Class<?> userType = ClassUtils.getUserClass(handlerType)__			Map<Method, T> methods = MethodIntrospector.selectMethods(userType,_					(MethodIntrospector.MetadataLookup<T>) method -> getMappingForMethod(method, userType))__			if (logger.isTraceEnabled()) {_				logger.trace(formatMappings(userType, methods))__			}_			methods.forEach((key, mapping) -> {_				Method invocableMethod = AopUtils.selectInvocableMethod(key, userType)__				registerHandlerMethod(handler, invocableMethod, mapping)__			})__		}_	};look,for,handler,methods,in,a,handler,param,handler,the,bean,name,of,a,handler,or,a,handler,instance;protected,void,detect,handler,methods,final,object,handler,class,handler,type,handler,instanceof,string,obtain,application,context,get,type,string,handler,handler,get,class,if,handler,type,null,final,class,user,type,class,utils,get,user,class,handler,type,map,method,t,methods,method,introspector,select,methods,user,type,method,introspector,metadata,lookup,t,method,get,mapping,for,method,method,user,type,if,logger,is,trace,enabled,logger,trace,format,mappings,user,type,methods,methods,for,each,key,mapping,method,invocable,method,aop,utils,select,invocable,method,key,user,type,register,handler,method,handler,invocable,method,mapping
AbstractHandlerMethodMapping -> protected void detectHandlerMethods(final Object handler);1548427561;Look for handler methods in a handler._@param handler the bean name of a handler or a handler instance;protected void detectHandlerMethods(final Object handler) {_		Class<?> handlerType = (handler instanceof String ?_				obtainApplicationContext().getType((String) handler) : handler.getClass())___		if (handlerType != null) {_			final Class<?> userType = ClassUtils.getUserClass(handlerType)__			Map<Method, T> methods = MethodIntrospector.selectMethods(userType,_					(MethodIntrospector.MetadataLookup<T>) method -> getMappingForMethod(method, userType))__			if (logger.isTraceEnabled()) {_				logger.trace(formatMappings(userType, methods))__			}_			methods.forEach((key, mapping) -> {_				Method invocableMethod = AopUtils.selectInvocableMethod(key, userType)__				registerHandlerMethod(handler, invocableMethod, mapping)__			})__		}_	};look,for,handler,methods,in,a,handler,param,handler,the,bean,name,of,a,handler,or,a,handler,instance;protected,void,detect,handler,methods,final,object,handler,class,handler,type,handler,instanceof,string,obtain,application,context,get,type,string,handler,handler,get,class,if,handler,type,null,final,class,user,type,class,utils,get,user,class,handler,type,map,method,t,methods,method,introspector,select,methods,user,type,method,introspector,metadata,lookup,t,method,get,mapping,for,method,method,user,type,if,logger,is,trace,enabled,logger,trace,format,mappings,user,type,methods,methods,for,each,key,mapping,method,invocable,method,aop,utils,select,invocable,method,key,user,type,register,handler,method,handler,invocable,method,mapping
AbstractHandlerMethodMapping -> protected void detectHandlerMethods(final Object handler);1551093473;Look for handler methods in a handler._@param handler the bean name of a handler or a handler instance;protected void detectHandlerMethods(final Object handler) {_		Class<?> handlerType = (handler instanceof String ?_				obtainApplicationContext().getType((String) handler) : handler.getClass())___		if (handlerType != null) {_			final Class<?> userType = ClassUtils.getUserClass(handlerType)__			Map<Method, T> methods = MethodIntrospector.selectMethods(userType,_					(MethodIntrospector.MetadataLookup<T>) method -> getMappingForMethod(method, userType))__			if (logger.isTraceEnabled()) {_				logger.trace(formatMappings(userType, methods))__			}_			methods.forEach((key, mapping) -> {_				Method invocableMethod = AopUtils.selectInvocableMethod(key, userType)__				registerHandlerMethod(handler, invocableMethod, mapping)__			})__		}_	};look,for,handler,methods,in,a,handler,param,handler,the,bean,name,of,a,handler,or,a,handler,instance;protected,void,detect,handler,methods,final,object,handler,class,handler,type,handler,instanceof,string,obtain,application,context,get,type,string,handler,handler,get,class,if,handler,type,null,final,class,user,type,class,utils,get,user,class,handler,type,map,method,t,methods,method,introspector,select,methods,user,type,method,introspector,metadata,lookup,t,method,get,mapping,for,method,method,user,type,if,logger,is,trace,enabled,logger,trace,format,mappings,user,type,methods,methods,for,each,key,mapping,method,invocable,method,aop,utils,select,invocable,method,key,user,type,register,handler,method,handler,invocable,method,mapping
AbstractHandlerMethodMapping -> @Nullable 	protected HandlerMethod handleNoMatch(Set<T> mappings, ServerWebExchange exchange) throws Exception;1498953917;Invoked when no matching mapping is not found._@param mappings all registered mappings_@param exchange the current exchange_@return an alternative HandlerMethod or {@code null}_@throws Exception provides details that can be translated into an error status code;@Nullable_	protected HandlerMethod handleNoMatch(Set<T> mappings, ServerWebExchange exchange) throws Exception {_		return null__	};invoked,when,no,matching,mapping,is,not,found,param,mappings,all,registered,mappings,param,exchange,the,current,exchange,return,an,alternative,handler,method,or,code,null,throws,exception,provides,details,that,can,be,translated,into,an,error,status,code;nullable,protected,handler,method,handle,no,match,set,t,mappings,server,web,exchange,exchange,throws,exception,return,null
AbstractHandlerMethodMapping -> @Nullable 	protected HandlerMethod handleNoMatch(Set<T> mappings, ServerWebExchange exchange) throws Exception;1516617801;Invoked when no matching mapping is not found._@param mappings all registered mappings_@param exchange the current exchange_@return an alternative HandlerMethod or {@code null}_@throws Exception provides details that can be translated into an error status code;@Nullable_	protected HandlerMethod handleNoMatch(Set<T> mappings, ServerWebExchange exchange) throws Exception {_		return null__	};invoked,when,no,matching,mapping,is,not,found,param,mappings,all,registered,mappings,param,exchange,the,current,exchange,return,an,alternative,handler,method,or,code,null,throws,exception,provides,details,that,can,be,translated,into,an,error,status,code;nullable,protected,handler,method,handle,no,match,set,t,mappings,server,web,exchange,exchange,throws,exception,return,null
AbstractHandlerMethodMapping -> @Nullable 	protected HandlerMethod handleNoMatch(Set<T> mappings, ServerWebExchange exchange) throws Exception;1529721864;Invoked when no matching mapping is not found._@param mappings all registered mappings_@param exchange the current exchange_@return an alternative HandlerMethod or {@code null}_@throws Exception provides details that can be translated into an error status code;@Nullable_	protected HandlerMethod handleNoMatch(Set<T> mappings, ServerWebExchange exchange) throws Exception {_		return null__	};invoked,when,no,matching,mapping,is,not,found,param,mappings,all,registered,mappings,param,exchange,the,current,exchange,return,an,alternative,handler,method,or,code,null,throws,exception,provides,details,that,can,be,translated,into,an,error,status,code;nullable,protected,handler,method,handle,no,match,set,t,mappings,server,web,exchange,exchange,throws,exception,return,null
AbstractHandlerMethodMapping -> @Nullable 	protected HandlerMethod handleNoMatch(Set<T> mappings, ServerWebExchange exchange) throws Exception;1530174524;Invoked when no matching mapping is not found._@param mappings all registered mappings_@param exchange the current exchange_@return an alternative HandlerMethod or {@code null}_@throws Exception provides details that can be translated into an error status code;@Nullable_	protected HandlerMethod handleNoMatch(Set<T> mappings, ServerWebExchange exchange) throws Exception {_		return null__	};invoked,when,no,matching,mapping,is,not,found,param,mappings,all,registered,mappings,param,exchange,the,current,exchange,return,an,alternative,handler,method,or,code,null,throws,exception,provides,details,that,can,be,translated,into,an,error,status,code;nullable,protected,handler,method,handle,no,match,set,t,mappings,server,web,exchange,exchange,throws,exception,return,null
AbstractHandlerMethodMapping -> @Nullable 	protected HandlerMethod handleNoMatch(Set<T> mappings, ServerWebExchange exchange) throws Exception;1530793633;Invoked when no matching mapping is not found._@param mappings all registered mappings_@param exchange the current exchange_@return an alternative HandlerMethod or {@code null}_@throws Exception provides details that can be translated into an error status code;@Nullable_	protected HandlerMethod handleNoMatch(Set<T> mappings, ServerWebExchange exchange) throws Exception {_		return null__	};invoked,when,no,matching,mapping,is,not,found,param,mappings,all,registered,mappings,param,exchange,the,current,exchange,return,an,alternative,handler,method,or,code,null,throws,exception,provides,details,that,can,be,translated,into,an,error,status,code;nullable,protected,handler,method,handle,no,match,set,t,mappings,server,web,exchange,exchange,throws,exception,return,null
AbstractHandlerMethodMapping -> @Nullable 	protected HandlerMethod handleNoMatch(Set<T> mappings, ServerWebExchange exchange) throws Exception;1542407418;Invoked when no matching mapping is not found._@param mappings all registered mappings_@param exchange the current exchange_@return an alternative HandlerMethod or {@code null}_@throws Exception provides details that can be translated into an error status code;@Nullable_	protected HandlerMethod handleNoMatch(Set<T> mappings, ServerWebExchange exchange) throws Exception {_		return null__	};invoked,when,no,matching,mapping,is,not,found,param,mappings,all,registered,mappings,param,exchange,the,current,exchange,return,an,alternative,handler,method,or,code,null,throws,exception,provides,details,that,can,be,translated,into,an,error,status,code;nullable,protected,handler,method,handle,no,match,set,t,mappings,server,web,exchange,exchange,throws,exception,return,null
AbstractHandlerMethodMapping -> @Nullable 	protected HandlerMethod handleNoMatch(Set<T> mappings, ServerWebExchange exchange) throws Exception;1548427561;Invoked when no matching mapping is not found._@param mappings all registered mappings_@param exchange the current exchange_@return an alternative HandlerMethod or {@code null}_@throws Exception provides details that can be translated into an error status code;@Nullable_	protected HandlerMethod handleNoMatch(Set<T> mappings, ServerWebExchange exchange) throws Exception {_		return null__	};invoked,when,no,matching,mapping,is,not,found,param,mappings,all,registered,mappings,param,exchange,the,current,exchange,return,an,alternative,handler,method,or,code,null,throws,exception,provides,details,that,can,be,translated,into,an,error,status,code;nullable,protected,handler,method,handle,no,match,set,t,mappings,server,web,exchange,exchange,throws,exception,return,null
AbstractHandlerMethodMapping -> @Nullable 	protected HandlerMethod handleNoMatch(Set<T> mappings, ServerWebExchange exchange) throws Exception;1551093473;Invoked when no matching mapping is not found._@param mappings all registered mappings_@param exchange the current exchange_@return an alternative HandlerMethod or {@code null}_@throws Exception provides details that can be translated into an error status code;@Nullable_	protected HandlerMethod handleNoMatch(Set<T> mappings, ServerWebExchange exchange) throws Exception {_		return null__	};invoked,when,no,matching,mapping,is,not,found,param,mappings,all,registered,mappings,param,exchange,the,current,exchange,return,an,alternative,handler,method,or,code,null,throws,exception,provides,details,that,can,be,translated,into,an,error,status,code;nullable,protected,handler,method,handle,no,match,set,t,mappings,server,web,exchange,exchange,throws,exception,return,null
AbstractHandlerMethodMapping -> protected abstract boolean isHandler(Class<?> beanType)_;1485986572;Whether the given type is a handler with handler methods._@param beanType the type of the bean being checked_@return "true" if this a handler type, "false" otherwise.;protected abstract boolean isHandler(Class<?> beanType)_;whether,the,given,type,is,a,handler,with,handler,methods,param,bean,type,the,type,of,the,bean,being,checked,return,true,if,this,a,handler,type,false,otherwise;protected,abstract,boolean,is,handler,class,bean,type
AbstractHandlerMethodMapping -> protected abstract boolean isHandler(Class<?> beanType)_;1486635693;Whether the given type is a handler with handler methods._@param beanType the type of the bean being checked_@return "true" if this a handler type, "false" otherwise.;protected abstract boolean isHandler(Class<?> beanType)_;whether,the,given,type,is,a,handler,with,handler,methods,param,bean,type,the,type,of,the,bean,being,checked,return,true,if,this,a,handler,type,false,otherwise;protected,abstract,boolean,is,handler,class,bean,type
AbstractHandlerMethodMapping -> protected abstract boolean isHandler(Class<?> beanType)_;1486674586;Whether the given type is a handler with handler methods._@param beanType the type of the bean being checked_@return "true" if this a handler type, "false" otherwise.;protected abstract boolean isHandler(Class<?> beanType)_;whether,the,given,type,is,a,handler,with,handler,methods,param,bean,type,the,type,of,the,bean,being,checked,return,true,if,this,a,handler,type,false,otherwise;protected,abstract,boolean,is,handler,class,bean,type
AbstractHandlerMethodMapping -> protected abstract boolean isHandler(Class<?> beanType)_;1486747801;Whether the given type is a handler with handler methods._@param beanType the type of the bean being checked_@return "true" if this a handler type, "false" otherwise.;protected abstract boolean isHandler(Class<?> beanType)_;whether,the,given,type,is,a,handler,with,handler,methods,param,bean,type,the,type,of,the,bean,being,checked,return,true,if,this,a,handler,type,false,otherwise;protected,abstract,boolean,is,handler,class,bean,type
AbstractHandlerMethodMapping -> protected abstract boolean isHandler(Class<?> beanType)_;1489852683;Whether the given type is a handler with handler methods._@param beanType the type of the bean being checked_@return "true" if this a handler type, "false" otherwise.;protected abstract boolean isHandler(Class<?> beanType)_;whether,the,given,type,is,a,handler,with,handler,methods,param,bean,type,the,type,of,the,bean,being,checked,return,true,if,this,a,handler,type,false,otherwise;protected,abstract,boolean,is,handler,class,bean,type
AbstractHandlerMethodMapping -> protected abstract boolean isHandler(Class<?> beanType)_;1492542679;Whether the given type is a handler with handler methods._@param beanType the type of the bean being checked_@return "true" if this a handler type, "false" otherwise.;protected abstract boolean isHandler(Class<?> beanType)_;whether,the,given,type,is,a,handler,with,handler,methods,param,bean,type,the,type,of,the,bean,being,checked,return,true,if,this,a,handler,type,false,otherwise;protected,abstract,boolean,is,handler,class,bean,type
AbstractHandlerMethodMapping -> protected abstract boolean isHandler(Class<?> beanType)_;1493370460;Whether the given type is a handler with handler methods._@param beanType the type of the bean being checked_@return "true" if this a handler type, "false" otherwise.;protected abstract boolean isHandler(Class<?> beanType)_;whether,the,given,type,is,a,handler,with,handler,methods,param,bean,type,the,type,of,the,bean,being,checked,return,true,if,this,a,handler,type,false,otherwise;protected,abstract,boolean,is,handler,class,bean,type
AbstractHandlerMethodMapping -> protected abstract boolean isHandler(Class<?> beanType)_;1493391766;Whether the given type is a handler with handler methods._@param beanType the type of the bean being checked_@return "true" if this a handler type, "false" otherwise.;protected abstract boolean isHandler(Class<?> beanType)_;whether,the,given,type,is,a,handler,with,handler,methods,param,bean,type,the,type,of,the,bean,being,checked,return,true,if,this,a,handler,type,false,otherwise;protected,abstract,boolean,is,handler,class,bean,type
AbstractHandlerMethodMapping -> protected abstract boolean isHandler(Class<?> beanType)_;1493755795;Whether the given type is a handler with handler methods._@param beanType the type of the bean being checked_@return "true" if this a handler type, "false" otherwise.;protected abstract boolean isHandler(Class<?> beanType)_;whether,the,given,type,is,a,handler,with,handler,methods,param,bean,type,the,type,of,the,bean,being,checked,return,true,if,this,a,handler,type,false,otherwise;protected,abstract,boolean,is,handler,class,bean,type
AbstractHandlerMethodMapping -> protected abstract boolean isHandler(Class<?> beanType)_;1495868221;Whether the given type is a handler with handler methods._@param beanType the type of the bean being checked_@return "true" if this a handler type, "false" otherwise.;protected abstract boolean isHandler(Class<?> beanType)_;whether,the,given,type,is,a,handler,with,handler,methods,param,bean,type,the,type,of,the,bean,being,checked,return,true,if,this,a,handler,type,false,otherwise;protected,abstract,boolean,is,handler,class,bean,type
AbstractHandlerMethodMapping -> protected abstract boolean isHandler(Class<?> beanType)_;1496334664;Whether the given type is a handler with handler methods._@param beanType the type of the bean being checked_@return "true" if this a handler type, "false" otherwise.;protected abstract boolean isHandler(Class<?> beanType)_;whether,the,given,type,is,a,handler,with,handler,methods,param,bean,type,the,type,of,the,bean,being,checked,return,true,if,this,a,handler,type,false,otherwise;protected,abstract,boolean,is,handler,class,bean,type
AbstractHandlerMethodMapping -> protected abstract boolean isHandler(Class<?> beanType)_;1496430942;Whether the given type is a handler with handler methods._@param beanType the type of the bean being checked_@return "true" if this a handler type, "false" otherwise.;protected abstract boolean isHandler(Class<?> beanType)_;whether,the,given,type,is,a,handler,with,handler,methods,param,bean,type,the,type,of,the,bean,being,checked,return,true,if,this,a,handler,type,false,otherwise;protected,abstract,boolean,is,handler,class,bean,type
AbstractHandlerMethodMapping -> protected abstract boolean isHandler(Class<?> beanType)_;1496837955;Whether the given type is a handler with handler methods._@param beanType the type of the bean being checked_@return "true" if this a handler type, "false" otherwise.;protected abstract boolean isHandler(Class<?> beanType)_;whether,the,given,type,is,a,handler,with,handler,methods,param,bean,type,the,type,of,the,bean,being,checked,return,true,if,this,a,handler,type,false,otherwise;protected,abstract,boolean,is,handler,class,bean,type
AbstractHandlerMethodMapping -> protected abstract boolean isHandler(Class<?> beanType)_;1497039338;Whether the given type is a handler with handler methods._@param beanType the type of the bean being checked_@return "true" if this a handler type, "false" otherwise.;protected abstract boolean isHandler(Class<?> beanType)_;whether,the,given,type,is,a,handler,with,handler,methods,param,bean,type,the,type,of,the,bean,being,checked,return,true,if,this,a,handler,type,false,otherwise;protected,abstract,boolean,is,handler,class,bean,type
AbstractHandlerMethodMapping -> protected abstract boolean isHandler(Class<?> beanType)_;1497232764;Whether the given type is a handler with handler methods._@param beanType the type of the bean being checked_@return "true" if this a handler type, "false" otherwise.;protected abstract boolean isHandler(Class<?> beanType)_;whether,the,given,type,is,a,handler,with,handler,methods,param,bean,type,the,type,of,the,bean,being,checked,return,true,if,this,a,handler,type,false,otherwise;protected,abstract,boolean,is,handler,class,bean,type
AbstractHandlerMethodMapping -> protected abstract boolean isHandler(Class<?> beanType)_;1497251962;Whether the given type is a handler with handler methods._@param beanType the type of the bean being checked_@return "true" if this a handler type, "false" otherwise.;protected abstract boolean isHandler(Class<?> beanType)_;whether,the,given,type,is,a,handler,with,handler,methods,param,bean,type,the,type,of,the,bean,being,checked,return,true,if,this,a,handler,type,false,otherwise;protected,abstract,boolean,is,handler,class,bean,type
AbstractHandlerMethodMapping -> protected abstract boolean isHandler(Class<?> beanType)_;1497286385;Whether the given type is a handler with handler methods._@param beanType the type of the bean being checked_@return "true" if this a handler type, "false" otherwise.;protected abstract boolean isHandler(Class<?> beanType)_;whether,the,given,type,is,a,handler,with,handler,methods,param,bean,type,the,type,of,the,bean,being,checked,return,true,if,this,a,handler,type,false,otherwise;protected,abstract,boolean,is,handler,class,bean,type
AbstractHandlerMethodMapping -> protected abstract boolean isHandler(Class<?> beanType)_;1498756719;Whether the given type is a handler with handler methods._@param beanType the type of the bean being checked_@return "true" if this a handler type, "false" otherwise.;protected abstract boolean isHandler(Class<?> beanType)_;whether,the,given,type,is,a,handler,with,handler,methods,param,bean,type,the,type,of,the,bean,being,checked,return,true,if,this,a,handler,type,false,otherwise;protected,abstract,boolean,is,handler,class,bean,type
AbstractHandlerMethodMapping -> protected abstract boolean isHandler(Class<?> beanType)_;1498861175;Whether the given type is a handler with handler methods._@param beanType the type of the bean being checked_@return "true" if this a handler type, "false" otherwise.;protected abstract boolean isHandler(Class<?> beanType)_;whether,the,given,type,is,a,handler,with,handler,methods,param,bean,type,the,type,of,the,bean,being,checked,return,true,if,this,a,handler,type,false,otherwise;protected,abstract,boolean,is,handler,class,bean,type
AbstractHandlerMethodMapping -> protected abstract boolean isHandler(Class<?> beanType)_;1498953917;Whether the given type is a handler with handler methods._@param beanType the type of the bean being checked_@return "true" if this a handler type, "false" otherwise.;protected abstract boolean isHandler(Class<?> beanType)_;whether,the,given,type,is,a,handler,with,handler,methods,param,bean,type,the,type,of,the,bean,being,checked,return,true,if,this,a,handler,type,false,otherwise;protected,abstract,boolean,is,handler,class,bean,type
AbstractHandlerMethodMapping -> protected abstract boolean isHandler(Class<?> beanType)_;1516617801;Whether the given type is a handler with handler methods._@param beanType the type of the bean being checked_@return "true" if this a handler type, "false" otherwise.;protected abstract boolean isHandler(Class<?> beanType)_;whether,the,given,type,is,a,handler,with,handler,methods,param,bean,type,the,type,of,the,bean,being,checked,return,true,if,this,a,handler,type,false,otherwise;protected,abstract,boolean,is,handler,class,bean,type
AbstractHandlerMethodMapping -> protected abstract boolean isHandler(Class<?> beanType)_;1529721864;Whether the given type is a handler with handler methods._@param beanType the type of the bean being checked_@return "true" if this a handler type, "false" otherwise.;protected abstract boolean isHandler(Class<?> beanType)_;whether,the,given,type,is,a,handler,with,handler,methods,param,bean,type,the,type,of,the,bean,being,checked,return,true,if,this,a,handler,type,false,otherwise;protected,abstract,boolean,is,handler,class,bean,type
AbstractHandlerMethodMapping -> protected abstract boolean isHandler(Class<?> beanType)_;1530174524;Whether the given type is a handler with handler methods._@param beanType the type of the bean being checked_@return "true" if this a handler type, "false" otherwise.;protected abstract boolean isHandler(Class<?> beanType)_;whether,the,given,type,is,a,handler,with,handler,methods,param,bean,type,the,type,of,the,bean,being,checked,return,true,if,this,a,handler,type,false,otherwise;protected,abstract,boolean,is,handler,class,bean,type
AbstractHandlerMethodMapping -> protected abstract boolean isHandler(Class<?> beanType)_;1530793633;Whether the given type is a handler with handler methods._@param beanType the type of the bean being checked_@return "true" if this a handler type, "false" otherwise.;protected abstract boolean isHandler(Class<?> beanType)_;whether,the,given,type,is,a,handler,with,handler,methods,param,bean,type,the,type,of,the,bean,being,checked,return,true,if,this,a,handler,type,false,otherwise;protected,abstract,boolean,is,handler,class,bean,type
AbstractHandlerMethodMapping -> protected abstract boolean isHandler(Class<?> beanType)_;1542407418;Whether the given type is a handler with handler methods._@param beanType the type of the bean being checked_@return "true" if this a handler type, "false" otherwise.;protected abstract boolean isHandler(Class<?> beanType)_;whether,the,given,type,is,a,handler,with,handler,methods,param,bean,type,the,type,of,the,bean,being,checked,return,true,if,this,a,handler,type,false,otherwise;protected,abstract,boolean,is,handler,class,bean,type
AbstractHandlerMethodMapping -> protected abstract boolean isHandler(Class<?> beanType)_;1548427561;Whether the given type is a handler with handler methods._@param beanType the type of the bean being checked_@return "true" if this a handler type, "false" otherwise.;protected abstract boolean isHandler(Class<?> beanType)_;whether,the,given,type,is,a,handler,with,handler,methods,param,bean,type,the,type,of,the,bean,being,checked,return,true,if,this,a,handler,type,false,otherwise;protected,abstract,boolean,is,handler,class,bean,type
AbstractHandlerMethodMapping -> protected abstract boolean isHandler(Class<?> beanType)_;1551093473;Whether the given type is a handler with handler methods._@param beanType the type of the bean being checked_@return "true" if this a handler type, "false" otherwise.;protected abstract boolean isHandler(Class<?> beanType)_;whether,the,given,type,is,a,handler,with,handler,methods,param,bean,type,the,type,of,the,bean,being,checked,return,true,if,this,a,handler,type,false,otherwise;protected,abstract,boolean,is,handler,class,bean,type
AbstractHandlerMethodMapping -> @Nullable 	protected CorsConfiguration initCorsConfiguration(Object handler, Method method, T mapping);1495868221;Extract and return the CORS configuration for the mapping.;@Nullable_	protected CorsConfiguration initCorsConfiguration(Object handler, Method method, T mapping) {_		return null__	};extract,and,return,the,cors,configuration,for,the,mapping;nullable,protected,cors,configuration,init,cors,configuration,object,handler,method,method,t,mapping,return,null
AbstractHandlerMethodMapping -> @Nullable 	protected CorsConfiguration initCorsConfiguration(Object handler, Method method, T mapping);1496334664;Extract and return the CORS configuration for the mapping.;@Nullable_	protected CorsConfiguration initCorsConfiguration(Object handler, Method method, T mapping) {_		return null__	};extract,and,return,the,cors,configuration,for,the,mapping;nullable,protected,cors,configuration,init,cors,configuration,object,handler,method,method,t,mapping,return,null
AbstractHandlerMethodMapping -> @Nullable 	protected CorsConfiguration initCorsConfiguration(Object handler, Method method, T mapping);1496430942;Extract and return the CORS configuration for the mapping.;@Nullable_	protected CorsConfiguration initCorsConfiguration(Object handler, Method method, T mapping) {_		return null__	};extract,and,return,the,cors,configuration,for,the,mapping;nullable,protected,cors,configuration,init,cors,configuration,object,handler,method,method,t,mapping,return,null
AbstractHandlerMethodMapping -> @Nullable 	protected CorsConfiguration initCorsConfiguration(Object handler, Method method, T mapping);1496837955;Extract and return the CORS configuration for the mapping.;@Nullable_	protected CorsConfiguration initCorsConfiguration(Object handler, Method method, T mapping) {_		return null__	};extract,and,return,the,cors,configuration,for,the,mapping;nullable,protected,cors,configuration,init,cors,configuration,object,handler,method,method,t,mapping,return,null
AbstractHandlerMethodMapping -> @Nullable 	protected CorsConfiguration initCorsConfiguration(Object handler, Method method, T mapping);1497039338;Extract and return the CORS configuration for the mapping.;@Nullable_	protected CorsConfiguration initCorsConfiguration(Object handler, Method method, T mapping) {_		return null__	};extract,and,return,the,cors,configuration,for,the,mapping;nullable,protected,cors,configuration,init,cors,configuration,object,handler,method,method,t,mapping,return,null
AbstractHandlerMethodMapping -> @Nullable 	protected CorsConfiguration initCorsConfiguration(Object handler, Method method, T mapping);1497232764;Extract and return the CORS configuration for the mapping.;@Nullable_	protected CorsConfiguration initCorsConfiguration(Object handler, Method method, T mapping) {_		return null__	};extract,and,return,the,cors,configuration,for,the,mapping;nullable,protected,cors,configuration,init,cors,configuration,object,handler,method,method,t,mapping,return,null
AbstractHandlerMethodMapping -> @Nullable 	protected CorsConfiguration initCorsConfiguration(Object handler, Method method, T mapping);1497251962;Extract and return the CORS configuration for the mapping.;@Nullable_	protected CorsConfiguration initCorsConfiguration(Object handler, Method method, T mapping) {_		return null__	};extract,and,return,the,cors,configuration,for,the,mapping;nullable,protected,cors,configuration,init,cors,configuration,object,handler,method,method,t,mapping,return,null
AbstractHandlerMethodMapping -> @Nullable 	protected CorsConfiguration initCorsConfiguration(Object handler, Method method, T mapping);1497286385;Extract and return the CORS configuration for the mapping.;@Nullable_	protected CorsConfiguration initCorsConfiguration(Object handler, Method method, T mapping) {_		return null__	};extract,and,return,the,cors,configuration,for,the,mapping;nullable,protected,cors,configuration,init,cors,configuration,object,handler,method,method,t,mapping,return,null
AbstractHandlerMethodMapping -> @Nullable 	protected CorsConfiguration initCorsConfiguration(Object handler, Method method, T mapping);1498756719;Extract and return the CORS configuration for the mapping.;@Nullable_	protected CorsConfiguration initCorsConfiguration(Object handler, Method method, T mapping) {_		return null__	};extract,and,return,the,cors,configuration,for,the,mapping;nullable,protected,cors,configuration,init,cors,configuration,object,handler,method,method,t,mapping,return,null
AbstractHandlerMethodMapping -> @Nullable 	protected CorsConfiguration initCorsConfiguration(Object handler, Method method, T mapping);1498861175;Extract and return the CORS configuration for the mapping.;@Nullable_	protected CorsConfiguration initCorsConfiguration(Object handler, Method method, T mapping) {_		return null__	};extract,and,return,the,cors,configuration,for,the,mapping;nullable,protected,cors,configuration,init,cors,configuration,object,handler,method,method,t,mapping,return,null
AbstractHandlerMethodMapping -> @Nullable 	protected CorsConfiguration initCorsConfiguration(Object handler, Method method, T mapping);1498953917;Extract and return the CORS configuration for the mapping.;@Nullable_	protected CorsConfiguration initCorsConfiguration(Object handler, Method method, T mapping) {_		return null__	};extract,and,return,the,cors,configuration,for,the,mapping;nullable,protected,cors,configuration,init,cors,configuration,object,handler,method,method,t,mapping,return,null
AbstractHandlerMethodMapping -> @Nullable 	protected CorsConfiguration initCorsConfiguration(Object handler, Method method, T mapping);1516617801;Extract and return the CORS configuration for the mapping.;@Nullable_	protected CorsConfiguration initCorsConfiguration(Object handler, Method method, T mapping) {_		return null__	};extract,and,return,the,cors,configuration,for,the,mapping;nullable,protected,cors,configuration,init,cors,configuration,object,handler,method,method,t,mapping,return,null
AbstractHandlerMethodMapping -> @Nullable 	protected CorsConfiguration initCorsConfiguration(Object handler, Method method, T mapping);1529721864;Extract and return the CORS configuration for the mapping.;@Nullable_	protected CorsConfiguration initCorsConfiguration(Object handler, Method method, T mapping) {_		return null__	};extract,and,return,the,cors,configuration,for,the,mapping;nullable,protected,cors,configuration,init,cors,configuration,object,handler,method,method,t,mapping,return,null
AbstractHandlerMethodMapping -> @Nullable 	protected CorsConfiguration initCorsConfiguration(Object handler, Method method, T mapping);1530174524;Extract and return the CORS configuration for the mapping.;@Nullable_	protected CorsConfiguration initCorsConfiguration(Object handler, Method method, T mapping) {_		return null__	};extract,and,return,the,cors,configuration,for,the,mapping;nullable,protected,cors,configuration,init,cors,configuration,object,handler,method,method,t,mapping,return,null
AbstractHandlerMethodMapping -> @Nullable 	protected CorsConfiguration initCorsConfiguration(Object handler, Method method, T mapping);1530793633;Extract and return the CORS configuration for the mapping.;@Nullable_	protected CorsConfiguration initCorsConfiguration(Object handler, Method method, T mapping) {_		return null__	};extract,and,return,the,cors,configuration,for,the,mapping;nullable,protected,cors,configuration,init,cors,configuration,object,handler,method,method,t,mapping,return,null
AbstractHandlerMethodMapping -> @Nullable 	protected CorsConfiguration initCorsConfiguration(Object handler, Method method, T mapping);1542407418;Extract and return the CORS configuration for the mapping.;@Nullable_	protected CorsConfiguration initCorsConfiguration(Object handler, Method method, T mapping) {_		return null__	};extract,and,return,the,cors,configuration,for,the,mapping;nullable,protected,cors,configuration,init,cors,configuration,object,handler,method,method,t,mapping,return,null
AbstractHandlerMethodMapping -> @Nullable 	protected CorsConfiguration initCorsConfiguration(Object handler, Method method, T mapping);1548427561;Extract and return the CORS configuration for the mapping.;@Nullable_	protected CorsConfiguration initCorsConfiguration(Object handler, Method method, T mapping) {_		return null__	};extract,and,return,the,cors,configuration,for,the,mapping;nullable,protected,cors,configuration,init,cors,configuration,object,handler,method,method,t,mapping,return,null
AbstractHandlerMethodMapping -> @Nullable 	protected CorsConfiguration initCorsConfiguration(Object handler, Method method, T mapping);1551093473;Extract and return the CORS configuration for the mapping.;@Nullable_	protected CorsConfiguration initCorsConfiguration(Object handler, Method method, T mapping) {_		return null__	};extract,and,return,the,cors,configuration,for,the,mapping;nullable,protected,cors,configuration,init,cors,configuration,object,handler,method,method,t,mapping,return,null
AbstractHandlerMethodMapping -> @Nullable 	protected abstract T getMappingForMethod(Method method, Class<?> handlerType)_;1495868221;Provide the mapping for a handler method. A method for which no_mapping can be provided is not a handler method._@param method the method to provide a mapping for_@param handlerType the handler type, possibly a sub-type of the method's_declaring class_@return the mapping, or {@code null} if the method is not mapped;@Nullable_	protected abstract T getMappingForMethod(Method method, Class<?> handlerType)_;provide,the,mapping,for,a,handler,method,a,method,for,which,no,mapping,can,be,provided,is,not,a,handler,method,param,method,the,method,to,provide,a,mapping,for,param,handler,type,the,handler,type,possibly,a,sub,type,of,the,method,s,declaring,class,return,the,mapping,or,code,null,if,the,method,is,not,mapped;nullable,protected,abstract,t,get,mapping,for,method,method,method,class,handler,type
AbstractHandlerMethodMapping -> @Nullable 	protected abstract T getMappingForMethod(Method method, Class<?> handlerType)_;1496334664;Provide the mapping for a handler method. A method for which no_mapping can be provided is not a handler method._@param method the method to provide a mapping for_@param handlerType the handler type, possibly a sub-type of the method's_declaring class_@return the mapping, or {@code null} if the method is not mapped;@Nullable_	protected abstract T getMappingForMethod(Method method, Class<?> handlerType)_;provide,the,mapping,for,a,handler,method,a,method,for,which,no,mapping,can,be,provided,is,not,a,handler,method,param,method,the,method,to,provide,a,mapping,for,param,handler,type,the,handler,type,possibly,a,sub,type,of,the,method,s,declaring,class,return,the,mapping,or,code,null,if,the,method,is,not,mapped;nullable,protected,abstract,t,get,mapping,for,method,method,method,class,handler,type
AbstractHandlerMethodMapping -> @Nullable 	protected abstract T getMappingForMethod(Method method, Class<?> handlerType)_;1496430942;Provide the mapping for a handler method. A method for which no_mapping can be provided is not a handler method._@param method the method to provide a mapping for_@param handlerType the handler type, possibly a sub-type of the method's_declaring class_@return the mapping, or {@code null} if the method is not mapped;@Nullable_	protected abstract T getMappingForMethod(Method method, Class<?> handlerType)_;provide,the,mapping,for,a,handler,method,a,method,for,which,no,mapping,can,be,provided,is,not,a,handler,method,param,method,the,method,to,provide,a,mapping,for,param,handler,type,the,handler,type,possibly,a,sub,type,of,the,method,s,declaring,class,return,the,mapping,or,code,null,if,the,method,is,not,mapped;nullable,protected,abstract,t,get,mapping,for,method,method,method,class,handler,type
AbstractHandlerMethodMapping -> @Nullable 	protected abstract T getMappingForMethod(Method method, Class<?> handlerType)_;1496837955;Provide the mapping for a handler method. A method for which no_mapping can be provided is not a handler method._@param method the method to provide a mapping for_@param handlerType the handler type, possibly a sub-type of the method's_declaring class_@return the mapping, or {@code null} if the method is not mapped;@Nullable_	protected abstract T getMappingForMethod(Method method, Class<?> handlerType)_;provide,the,mapping,for,a,handler,method,a,method,for,which,no,mapping,can,be,provided,is,not,a,handler,method,param,method,the,method,to,provide,a,mapping,for,param,handler,type,the,handler,type,possibly,a,sub,type,of,the,method,s,declaring,class,return,the,mapping,or,code,null,if,the,method,is,not,mapped;nullable,protected,abstract,t,get,mapping,for,method,method,method,class,handler,type
AbstractHandlerMethodMapping -> @Nullable 	protected abstract T getMappingForMethod(Method method, Class<?> handlerType)_;1497039338;Provide the mapping for a handler method. A method for which no_mapping can be provided is not a handler method._@param method the method to provide a mapping for_@param handlerType the handler type, possibly a sub-type of the method's_declaring class_@return the mapping, or {@code null} if the method is not mapped;@Nullable_	protected abstract T getMappingForMethod(Method method, Class<?> handlerType)_;provide,the,mapping,for,a,handler,method,a,method,for,which,no,mapping,can,be,provided,is,not,a,handler,method,param,method,the,method,to,provide,a,mapping,for,param,handler,type,the,handler,type,possibly,a,sub,type,of,the,method,s,declaring,class,return,the,mapping,or,code,null,if,the,method,is,not,mapped;nullable,protected,abstract,t,get,mapping,for,method,method,method,class,handler,type
AbstractHandlerMethodMapping -> @Nullable 	protected abstract T getMappingForMethod(Method method, Class<?> handlerType)_;1497232764;Provide the mapping for a handler method. A method for which no_mapping can be provided is not a handler method._@param method the method to provide a mapping for_@param handlerType the handler type, possibly a sub-type of the method's_declaring class_@return the mapping, or {@code null} if the method is not mapped;@Nullable_	protected abstract T getMappingForMethod(Method method, Class<?> handlerType)_;provide,the,mapping,for,a,handler,method,a,method,for,which,no,mapping,can,be,provided,is,not,a,handler,method,param,method,the,method,to,provide,a,mapping,for,param,handler,type,the,handler,type,possibly,a,sub,type,of,the,method,s,declaring,class,return,the,mapping,or,code,null,if,the,method,is,not,mapped;nullable,protected,abstract,t,get,mapping,for,method,method,method,class,handler,type
AbstractHandlerMethodMapping -> @Nullable 	protected abstract T getMappingForMethod(Method method, Class<?> handlerType)_;1497251962;Provide the mapping for a handler method. A method for which no_mapping can be provided is not a handler method._@param method the method to provide a mapping for_@param handlerType the handler type, possibly a sub-type of the method's_declaring class_@return the mapping, or {@code null} if the method is not mapped;@Nullable_	protected abstract T getMappingForMethod(Method method, Class<?> handlerType)_;provide,the,mapping,for,a,handler,method,a,method,for,which,no,mapping,can,be,provided,is,not,a,handler,method,param,method,the,method,to,provide,a,mapping,for,param,handler,type,the,handler,type,possibly,a,sub,type,of,the,method,s,declaring,class,return,the,mapping,or,code,null,if,the,method,is,not,mapped;nullable,protected,abstract,t,get,mapping,for,method,method,method,class,handler,type
AbstractHandlerMethodMapping -> @Nullable 	protected abstract T getMappingForMethod(Method method, Class<?> handlerType)_;1497286385;Provide the mapping for a handler method. A method for which no_mapping can be provided is not a handler method._@param method the method to provide a mapping for_@param handlerType the handler type, possibly a sub-type of the method's_declaring class_@return the mapping, or {@code null} if the method is not mapped;@Nullable_	protected abstract T getMappingForMethod(Method method, Class<?> handlerType)_;provide,the,mapping,for,a,handler,method,a,method,for,which,no,mapping,can,be,provided,is,not,a,handler,method,param,method,the,method,to,provide,a,mapping,for,param,handler,type,the,handler,type,possibly,a,sub,type,of,the,method,s,declaring,class,return,the,mapping,or,code,null,if,the,method,is,not,mapped;nullable,protected,abstract,t,get,mapping,for,method,method,method,class,handler,type
AbstractHandlerMethodMapping -> @Nullable 	protected abstract T getMappingForMethod(Method method, Class<?> handlerType)_;1498756719;Provide the mapping for a handler method. A method for which no_mapping can be provided is not a handler method._@param method the method to provide a mapping for_@param handlerType the handler type, possibly a sub-type of the method's_declaring class_@return the mapping, or {@code null} if the method is not mapped;@Nullable_	protected abstract T getMappingForMethod(Method method, Class<?> handlerType)_;provide,the,mapping,for,a,handler,method,a,method,for,which,no,mapping,can,be,provided,is,not,a,handler,method,param,method,the,method,to,provide,a,mapping,for,param,handler,type,the,handler,type,possibly,a,sub,type,of,the,method,s,declaring,class,return,the,mapping,or,code,null,if,the,method,is,not,mapped;nullable,protected,abstract,t,get,mapping,for,method,method,method,class,handler,type
AbstractHandlerMethodMapping -> @Nullable 	protected abstract T getMappingForMethod(Method method, Class<?> handlerType)_;1498861175;Provide the mapping for a handler method. A method for which no_mapping can be provided is not a handler method._@param method the method to provide a mapping for_@param handlerType the handler type, possibly a sub-type of the method's_declaring class_@return the mapping, or {@code null} if the method is not mapped;@Nullable_	protected abstract T getMappingForMethod(Method method, Class<?> handlerType)_;provide,the,mapping,for,a,handler,method,a,method,for,which,no,mapping,can,be,provided,is,not,a,handler,method,param,method,the,method,to,provide,a,mapping,for,param,handler,type,the,handler,type,possibly,a,sub,type,of,the,method,s,declaring,class,return,the,mapping,or,code,null,if,the,method,is,not,mapped;nullable,protected,abstract,t,get,mapping,for,method,method,method,class,handler,type
AbstractHandlerMethodMapping -> @Nullable 	protected abstract T getMappingForMethod(Method method, Class<?> handlerType)_;1498953917;Provide the mapping for a handler method. A method for which no_mapping can be provided is not a handler method._@param method the method to provide a mapping for_@param handlerType the handler type, possibly a sub-type of the method's_declaring class_@return the mapping, or {@code null} if the method is not mapped;@Nullable_	protected abstract T getMappingForMethod(Method method, Class<?> handlerType)_;provide,the,mapping,for,a,handler,method,a,method,for,which,no,mapping,can,be,provided,is,not,a,handler,method,param,method,the,method,to,provide,a,mapping,for,param,handler,type,the,handler,type,possibly,a,sub,type,of,the,method,s,declaring,class,return,the,mapping,or,code,null,if,the,method,is,not,mapped;nullable,protected,abstract,t,get,mapping,for,method,method,method,class,handler,type
AbstractHandlerMethodMapping -> @Nullable 	protected abstract T getMappingForMethod(Method method, Class<?> handlerType)_;1516617801;Provide the mapping for a handler method. A method for which no_mapping can be provided is not a handler method._@param method the method to provide a mapping for_@param handlerType the handler type, possibly a sub-type of the method's_declaring class_@return the mapping, or {@code null} if the method is not mapped;@Nullable_	protected abstract T getMappingForMethod(Method method, Class<?> handlerType)_;provide,the,mapping,for,a,handler,method,a,method,for,which,no,mapping,can,be,provided,is,not,a,handler,method,param,method,the,method,to,provide,a,mapping,for,param,handler,type,the,handler,type,possibly,a,sub,type,of,the,method,s,declaring,class,return,the,mapping,or,code,null,if,the,method,is,not,mapped;nullable,protected,abstract,t,get,mapping,for,method,method,method,class,handler,type
AbstractHandlerMethodMapping -> @Nullable 	protected abstract T getMappingForMethod(Method method, Class<?> handlerType)_;1529721864;Provide the mapping for a handler method. A method for which no_mapping can be provided is not a handler method._@param method the method to provide a mapping for_@param handlerType the handler type, possibly a sub-type of the method's_declaring class_@return the mapping, or {@code null} if the method is not mapped;@Nullable_	protected abstract T getMappingForMethod(Method method, Class<?> handlerType)_;provide,the,mapping,for,a,handler,method,a,method,for,which,no,mapping,can,be,provided,is,not,a,handler,method,param,method,the,method,to,provide,a,mapping,for,param,handler,type,the,handler,type,possibly,a,sub,type,of,the,method,s,declaring,class,return,the,mapping,or,code,null,if,the,method,is,not,mapped;nullable,protected,abstract,t,get,mapping,for,method,method,method,class,handler,type
AbstractHandlerMethodMapping -> @Nullable 	protected abstract T getMappingForMethod(Method method, Class<?> handlerType)_;1530174524;Provide the mapping for a handler method. A method for which no_mapping can be provided is not a handler method._@param method the method to provide a mapping for_@param handlerType the handler type, possibly a sub-type of the method's_declaring class_@return the mapping, or {@code null} if the method is not mapped;@Nullable_	protected abstract T getMappingForMethod(Method method, Class<?> handlerType)_;provide,the,mapping,for,a,handler,method,a,method,for,which,no,mapping,can,be,provided,is,not,a,handler,method,param,method,the,method,to,provide,a,mapping,for,param,handler,type,the,handler,type,possibly,a,sub,type,of,the,method,s,declaring,class,return,the,mapping,or,code,null,if,the,method,is,not,mapped;nullable,protected,abstract,t,get,mapping,for,method,method,method,class,handler,type
AbstractHandlerMethodMapping -> @Nullable 	protected abstract T getMappingForMethod(Method method, Class<?> handlerType)_;1530793633;Provide the mapping for a handler method. A method for which no_mapping can be provided is not a handler method._@param method the method to provide a mapping for_@param handlerType the handler type, possibly a sub-type of the method's_declaring class_@return the mapping, or {@code null} if the method is not mapped;@Nullable_	protected abstract T getMappingForMethod(Method method, Class<?> handlerType)_;provide,the,mapping,for,a,handler,method,a,method,for,which,no,mapping,can,be,provided,is,not,a,handler,method,param,method,the,method,to,provide,a,mapping,for,param,handler,type,the,handler,type,possibly,a,sub,type,of,the,method,s,declaring,class,return,the,mapping,or,code,null,if,the,method,is,not,mapped;nullable,protected,abstract,t,get,mapping,for,method,method,method,class,handler,type
AbstractHandlerMethodMapping -> @Nullable 	protected abstract T getMappingForMethod(Method method, Class<?> handlerType)_;1542407418;Provide the mapping for a handler method. A method for which no_mapping can be provided is not a handler method._@param method the method to provide a mapping for_@param handlerType the handler type, possibly a sub-type of the method's_declaring class_@return the mapping, or {@code null} if the method is not mapped;@Nullable_	protected abstract T getMappingForMethod(Method method, Class<?> handlerType)_;provide,the,mapping,for,a,handler,method,a,method,for,which,no,mapping,can,be,provided,is,not,a,handler,method,param,method,the,method,to,provide,a,mapping,for,param,handler,type,the,handler,type,possibly,a,sub,type,of,the,method,s,declaring,class,return,the,mapping,or,code,null,if,the,method,is,not,mapped;nullable,protected,abstract,t,get,mapping,for,method,method,method,class,handler,type
AbstractHandlerMethodMapping -> @Nullable 	protected abstract T getMappingForMethod(Method method, Class<?> handlerType)_;1548427561;Provide the mapping for a handler method. A method for which no_mapping can be provided is not a handler method._@param method the method to provide a mapping for_@param handlerType the handler type, possibly a sub-type of the method's_declaring class_@return the mapping, or {@code null} if the method is not mapped;@Nullable_	protected abstract T getMappingForMethod(Method method, Class<?> handlerType)_;provide,the,mapping,for,a,handler,method,a,method,for,which,no,mapping,can,be,provided,is,not,a,handler,method,param,method,the,method,to,provide,a,mapping,for,param,handler,type,the,handler,type,possibly,a,sub,type,of,the,method,s,declaring,class,return,the,mapping,or,code,null,if,the,method,is,not,mapped;nullable,protected,abstract,t,get,mapping,for,method,method,method,class,handler,type
AbstractHandlerMethodMapping -> @Nullable 	protected abstract T getMappingForMethod(Method method, Class<?> handlerType)_;1551093473;Provide the mapping for a handler method. A method for which no_mapping can be provided is not a handler method._@param method the method to provide a mapping for_@param handlerType the handler type, possibly a sub-type of the method's_declaring class_@return the mapping, or {@code null} if the method is not mapped;@Nullable_	protected abstract T getMappingForMethod(Method method, Class<?> handlerType)_;provide,the,mapping,for,a,handler,method,a,method,for,which,no,mapping,can,be,provided,is,not,a,handler,method,param,method,the,method,to,provide,a,mapping,for,param,handler,type,the,handler,type,possibly,a,sub,type,of,the,method,s,declaring,class,return,the,mapping,or,code,null,if,the,method,is,not,mapped;nullable,protected,abstract,t,get,mapping,for,method,method,method,class,handler,type
AbstractHandlerMethodMapping -> protected void handlerMethodsInitialized(Map<T, HandlerMethod> handlerMethods);1485986572;Invoked after all handler methods have been detected._@param handlerMethods a read-only map with handler methods and mappings.;protected void handlerMethodsInitialized(Map<T, HandlerMethod> handlerMethods) {_	};invoked,after,all,handler,methods,have,been,detected,param,handler,methods,a,read,only,map,with,handler,methods,and,mappings;protected,void,handler,methods,initialized,map,t,handler,method,handler,methods
AbstractHandlerMethodMapping -> protected void handlerMethodsInitialized(Map<T, HandlerMethod> handlerMethods);1486635693;Invoked after all handler methods have been detected._@param handlerMethods a read-only map with handler methods and mappings.;protected void handlerMethodsInitialized(Map<T, HandlerMethod> handlerMethods) {_	};invoked,after,all,handler,methods,have,been,detected,param,handler,methods,a,read,only,map,with,handler,methods,and,mappings;protected,void,handler,methods,initialized,map,t,handler,method,handler,methods
AbstractHandlerMethodMapping -> protected void handlerMethodsInitialized(Map<T, HandlerMethod> handlerMethods);1486674586;Invoked after all handler methods have been detected._@param handlerMethods a read-only map with handler methods and mappings.;protected void handlerMethodsInitialized(Map<T, HandlerMethod> handlerMethods) {_	};invoked,after,all,handler,methods,have,been,detected,param,handler,methods,a,read,only,map,with,handler,methods,and,mappings;protected,void,handler,methods,initialized,map,t,handler,method,handler,methods
AbstractHandlerMethodMapping -> protected void handlerMethodsInitialized(Map<T, HandlerMethod> handlerMethods);1486747801;Invoked after all handler methods have been detected._@param handlerMethods a read-only map with handler methods and mappings.;protected void handlerMethodsInitialized(Map<T, HandlerMethod> handlerMethods) {_	};invoked,after,all,handler,methods,have,been,detected,param,handler,methods,a,read,only,map,with,handler,methods,and,mappings;protected,void,handler,methods,initialized,map,t,handler,method,handler,methods
AbstractHandlerMethodMapping -> protected void handlerMethodsInitialized(Map<T, HandlerMethod> handlerMethods);1489852683;Invoked after all handler methods have been detected._@param handlerMethods a read-only map with handler methods and mappings.;protected void handlerMethodsInitialized(Map<T, HandlerMethod> handlerMethods) {_	};invoked,after,all,handler,methods,have,been,detected,param,handler,methods,a,read,only,map,with,handler,methods,and,mappings;protected,void,handler,methods,initialized,map,t,handler,method,handler,methods
AbstractHandlerMethodMapping -> protected void handlerMethodsInitialized(Map<T, HandlerMethod> handlerMethods);1492542679;Invoked after all handler methods have been detected._@param handlerMethods a read-only map with handler methods and mappings.;protected void handlerMethodsInitialized(Map<T, HandlerMethod> handlerMethods) {_	};invoked,after,all,handler,methods,have,been,detected,param,handler,methods,a,read,only,map,with,handler,methods,and,mappings;protected,void,handler,methods,initialized,map,t,handler,method,handler,methods
AbstractHandlerMethodMapping -> protected void handlerMethodsInitialized(Map<T, HandlerMethod> handlerMethods);1493370460;Invoked after all handler methods have been detected._@param handlerMethods a read-only map with handler methods and mappings.;protected void handlerMethodsInitialized(Map<T, HandlerMethod> handlerMethods) {_	};invoked,after,all,handler,methods,have,been,detected,param,handler,methods,a,read,only,map,with,handler,methods,and,mappings;protected,void,handler,methods,initialized,map,t,handler,method,handler,methods
AbstractHandlerMethodMapping -> protected void handlerMethodsInitialized(Map<T, HandlerMethod> handlerMethods);1493391766;Invoked after all handler methods have been detected._@param handlerMethods a read-only map with handler methods and mappings.;protected void handlerMethodsInitialized(Map<T, HandlerMethod> handlerMethods) {_	};invoked,after,all,handler,methods,have,been,detected,param,handler,methods,a,read,only,map,with,handler,methods,and,mappings;protected,void,handler,methods,initialized,map,t,handler,method,handler,methods
AbstractHandlerMethodMapping -> protected void handlerMethodsInitialized(Map<T, HandlerMethod> handlerMethods);1493755795;Invoked after all handler methods have been detected._@param handlerMethods a read-only map with handler methods and mappings.;protected void handlerMethodsInitialized(Map<T, HandlerMethod> handlerMethods) {_	};invoked,after,all,handler,methods,have,been,detected,param,handler,methods,a,read,only,map,with,handler,methods,and,mappings;protected,void,handler,methods,initialized,map,t,handler,method,handler,methods
AbstractHandlerMethodMapping -> protected void handlerMethodsInitialized(Map<T, HandlerMethod> handlerMethods);1495868221;Invoked after all handler methods have been detected._@param handlerMethods a read-only map with handler methods and mappings.;protected void handlerMethodsInitialized(Map<T, HandlerMethod> handlerMethods) {_	};invoked,after,all,handler,methods,have,been,detected,param,handler,methods,a,read,only,map,with,handler,methods,and,mappings;protected,void,handler,methods,initialized,map,t,handler,method,handler,methods
AbstractHandlerMethodMapping -> protected void handlerMethodsInitialized(Map<T, HandlerMethod> handlerMethods);1496334664;Invoked after all handler methods have been detected._@param handlerMethods a read-only map with handler methods and mappings.;protected void handlerMethodsInitialized(Map<T, HandlerMethod> handlerMethods) {_	};invoked,after,all,handler,methods,have,been,detected,param,handler,methods,a,read,only,map,with,handler,methods,and,mappings;protected,void,handler,methods,initialized,map,t,handler,method,handler,methods
AbstractHandlerMethodMapping -> protected void handlerMethodsInitialized(Map<T, HandlerMethod> handlerMethods);1496430942;Invoked after all handler methods have been detected._@param handlerMethods a read-only map with handler methods and mappings.;protected void handlerMethodsInitialized(Map<T, HandlerMethod> handlerMethods) {_	};invoked,after,all,handler,methods,have,been,detected,param,handler,methods,a,read,only,map,with,handler,methods,and,mappings;protected,void,handler,methods,initialized,map,t,handler,method,handler,methods
AbstractHandlerMethodMapping -> protected void handlerMethodsInitialized(Map<T, HandlerMethod> handlerMethods);1496837955;Invoked after all handler methods have been detected._@param handlerMethods a read-only map with handler methods and mappings.;protected void handlerMethodsInitialized(Map<T, HandlerMethod> handlerMethods) {_	};invoked,after,all,handler,methods,have,been,detected,param,handler,methods,a,read,only,map,with,handler,methods,and,mappings;protected,void,handler,methods,initialized,map,t,handler,method,handler,methods
AbstractHandlerMethodMapping -> protected void handlerMethodsInitialized(Map<T, HandlerMethod> handlerMethods);1497039338;Invoked after all handler methods have been detected._@param handlerMethods a read-only map with handler methods and mappings.;protected void handlerMethodsInitialized(Map<T, HandlerMethod> handlerMethods) {_	};invoked,after,all,handler,methods,have,been,detected,param,handler,methods,a,read,only,map,with,handler,methods,and,mappings;protected,void,handler,methods,initialized,map,t,handler,method,handler,methods
AbstractHandlerMethodMapping -> protected void handlerMethodsInitialized(Map<T, HandlerMethod> handlerMethods);1497232764;Invoked after all handler methods have been detected._@param handlerMethods a read-only map with handler methods and mappings.;protected void handlerMethodsInitialized(Map<T, HandlerMethod> handlerMethods) {_	};invoked,after,all,handler,methods,have,been,detected,param,handler,methods,a,read,only,map,with,handler,methods,and,mappings;protected,void,handler,methods,initialized,map,t,handler,method,handler,methods
AbstractHandlerMethodMapping -> protected void handlerMethodsInitialized(Map<T, HandlerMethod> handlerMethods);1497251962;Invoked after all handler methods have been detected._@param handlerMethods a read-only map with handler methods and mappings.;protected void handlerMethodsInitialized(Map<T, HandlerMethod> handlerMethods) {_	};invoked,after,all,handler,methods,have,been,detected,param,handler,methods,a,read,only,map,with,handler,methods,and,mappings;protected,void,handler,methods,initialized,map,t,handler,method,handler,methods
AbstractHandlerMethodMapping -> protected void handlerMethodsInitialized(Map<T, HandlerMethod> handlerMethods);1497286385;Invoked after all handler methods have been detected._@param handlerMethods a read-only map with handler methods and mappings.;protected void handlerMethodsInitialized(Map<T, HandlerMethod> handlerMethods) {_	};invoked,after,all,handler,methods,have,been,detected,param,handler,methods,a,read,only,map,with,handler,methods,and,mappings;protected,void,handler,methods,initialized,map,t,handler,method,handler,methods
AbstractHandlerMethodMapping -> protected void handlerMethodsInitialized(Map<T, HandlerMethod> handlerMethods);1498756719;Invoked after all handler methods have been detected._@param handlerMethods a read-only map with handler methods and mappings.;protected void handlerMethodsInitialized(Map<T, HandlerMethod> handlerMethods) {_	};invoked,after,all,handler,methods,have,been,detected,param,handler,methods,a,read,only,map,with,handler,methods,and,mappings;protected,void,handler,methods,initialized,map,t,handler,method,handler,methods
AbstractHandlerMethodMapping -> protected void handlerMethodsInitialized(Map<T, HandlerMethod> handlerMethods);1498861175;Invoked after all handler methods have been detected._@param handlerMethods a read-only map with handler methods and mappings.;protected void handlerMethodsInitialized(Map<T, HandlerMethod> handlerMethods) {_	};invoked,after,all,handler,methods,have,been,detected,param,handler,methods,a,read,only,map,with,handler,methods,and,mappings;protected,void,handler,methods,initialized,map,t,handler,method,handler,methods
AbstractHandlerMethodMapping -> protected void handlerMethodsInitialized(Map<T, HandlerMethod> handlerMethods);1498953917;Invoked after all handler methods have been detected._@param handlerMethods a read-only map with handler methods and mappings.;protected void handlerMethodsInitialized(Map<T, HandlerMethod> handlerMethods) {_	};invoked,after,all,handler,methods,have,been,detected,param,handler,methods,a,read,only,map,with,handler,methods,and,mappings;protected,void,handler,methods,initialized,map,t,handler,method,handler,methods
AbstractHandlerMethodMapping -> protected void handlerMethodsInitialized(Map<T, HandlerMethod> handlerMethods);1516617801;Invoked after all handler methods have been detected._@param handlerMethods a read-only map with handler methods and mappings.;protected void handlerMethodsInitialized(Map<T, HandlerMethod> handlerMethods) {_	};invoked,after,all,handler,methods,have,been,detected,param,handler,methods,a,read,only,map,with,handler,methods,and,mappings;protected,void,handler,methods,initialized,map,t,handler,method,handler,methods
AbstractHandlerMethodMapping -> protected void handlerMethodsInitialized(Map<T, HandlerMethod> handlerMethods);1529721864;Invoked after all handler methods have been detected._@param handlerMethods a read-only map with handler methods and mappings.;protected void handlerMethodsInitialized(Map<T, HandlerMethod> handlerMethods) {_	};invoked,after,all,handler,methods,have,been,detected,param,handler,methods,a,read,only,map,with,handler,methods,and,mappings;protected,void,handler,methods,initialized,map,t,handler,method,handler,methods
AbstractHandlerMethodMapping -> protected void handlerMethodsInitialized(Map<T, HandlerMethod> handlerMethods);1530174524;Invoked after all handler methods have been detected._@param handlerMethods a read-only map with handler methods and mappings.;protected void handlerMethodsInitialized(Map<T, HandlerMethod> handlerMethods) {_	};invoked,after,all,handler,methods,have,been,detected,param,handler,methods,a,read,only,map,with,handler,methods,and,mappings;protected,void,handler,methods,initialized,map,t,handler,method,handler,methods
AbstractHandlerMethodMapping -> protected void handlerMethodsInitialized(Map<T, HandlerMethod> handlerMethods);1530793633;Invoked after all handler methods have been detected._@param handlerMethods a read-only map with handler methods and mappings.;protected void handlerMethodsInitialized(Map<T, HandlerMethod> handlerMethods) {_	};invoked,after,all,handler,methods,have,been,detected,param,handler,methods,a,read,only,map,with,handler,methods,and,mappings;protected,void,handler,methods,initialized,map,t,handler,method,handler,methods
AbstractHandlerMethodMapping -> protected void handlerMethodsInitialized(Map<T, HandlerMethod> handlerMethods);1542407418;Invoked after all handler methods have been detected._@param handlerMethods a read-only map with handler methods and mappings.;protected void handlerMethodsInitialized(Map<T, HandlerMethod> handlerMethods) {_	};invoked,after,all,handler,methods,have,been,detected,param,handler,methods,a,read,only,map,with,handler,methods,and,mappings;protected,void,handler,methods,initialized,map,t,handler,method,handler,methods
AbstractHandlerMethodMapping -> protected void handlerMethodsInitialized(Map<T, HandlerMethod> handlerMethods);1548427561;Invoked after all handler methods have been detected._@param handlerMethods a read-only map with handler methods and mappings.;protected void handlerMethodsInitialized(Map<T, HandlerMethod> handlerMethods) {_	};invoked,after,all,handler,methods,have,been,detected,param,handler,methods,a,read,only,map,with,handler,methods,and,mappings;protected,void,handler,methods,initialized,map,t,handler,method,handler,methods
AbstractHandlerMethodMapping -> protected void handlerMethodsInitialized(Map<T, HandlerMethod> handlerMethods);1551093473;Invoked after all handler methods have been detected._@param handlerMethods a read-only map with handler methods and mappings.;protected void handlerMethodsInitialized(Map<T, HandlerMethod> handlerMethods) {_	};invoked,after,all,handler,methods,have,been,detected,param,handler,methods,a,read,only,map,with,handler,methods,and,mappings;protected,void,handler,methods,initialized,map,t,handler,method,handler,methods
AbstractHandlerMethodMapping -> MappingRegistry -> public List<T> getMappingsByUrl(String urlPath);1485986572;Return matches for the given URL path. Not thread-safe._@see #acquireReadLock();public List<T> getMappingsByUrl(String urlPath) {_			return this.urlLookup.get(urlPath)__		};return,matches,for,the,given,url,path,not,thread,safe,see,acquire,read,lock;public,list,t,get,mappings,by,url,string,url,path,return,this,url,lookup,get,url,path
AbstractHandlerMethodMapping -> MappingRegistry -> public List<T> getMappingsByUrl(String urlPath);1486747801;Return matches for the given URL path. Not thread-safe._@see #acquireReadLock();public List<T> getMappingsByUrl(String urlPath) {_			return this.urlLookup.get(urlPath)__		};return,matches,for,the,given,url,path,not,thread,safe,see,acquire,read,lock;public,list,t,get,mappings,by,url,string,url,path,return,this,url,lookup,get,url,path
AbstractHandlerMethodMapping -> MappingRegistry -> public List<T> getMappingsByUrl(String urlPath);1489852683;Return matches for the given URL path. Not thread-safe._@see #acquireReadLock();public List<T> getMappingsByUrl(String urlPath) {_			return this.urlLookup.get(urlPath)__		};return,matches,for,the,given,url,path,not,thread,safe,see,acquire,read,lock;public,list,t,get,mappings,by,url,string,url,path,return,this,url,lookup,get,url,path
AbstractHandlerMethodMapping -> MappingRegistry -> public List<T> getMappingsByUrl(String urlPath);1492542679;Return matches for the given URL path. Not thread-safe._@see #acquireReadLock();public List<T> getMappingsByUrl(String urlPath) {_			return this.urlLookup.get(urlPath)__		};return,matches,for,the,given,url,path,not,thread,safe,see,acquire,read,lock;public,list,t,get,mappings,by,url,string,url,path,return,this,url,lookup,get,url,path
AbstractHandlerMethodMapping -> MappingRegistry -> public List<T> getMappingsByUrl(String urlPath);1493370460;Return matches for the given URL path. Not thread-safe._@see #acquireReadLock();public List<T> getMappingsByUrl(String urlPath) {_			return this.urlLookup.get(urlPath)__		};return,matches,for,the,given,url,path,not,thread,safe,see,acquire,read,lock;public,list,t,get,mappings,by,url,string,url,path,return,this,url,lookup,get,url,path
AbstractHandlerMethodMapping -> MappingRegistry -> public List<T> getMappingsByUrl(String urlPath);1493391766;Return matches for the given URL path. Not thread-safe._@see #acquireReadLock();public List<T> getMappingsByUrl(String urlPath) {_			return this.urlLookup.get(urlPath)__		};return,matches,for,the,given,url,path,not,thread,safe,see,acquire,read,lock;public,list,t,get,mappings,by,url,string,url,path,return,this,url,lookup,get,url,path
AbstractHandlerMethodMapping -> MappingRegistry -> public List<T> getMappingsByUrl(String urlPath);1493755795;Return matches for the given URL path. Not thread-safe._@see #acquireReadLock();public List<T> getMappingsByUrl(String urlPath) {_			return this.urlLookup.get(urlPath)__		};return,matches,for,the,given,url,path,not,thread,safe,see,acquire,read,lock;public,list,t,get,mappings,by,url,string,url,path,return,this,url,lookup,get,url,path
AbstractHandlerMethodMapping -> MappingRegistry -> public List<T> getMappingsByUrl(String urlPath);1495868221;Return matches for the given URL path. Not thread-safe._@see #acquireReadLock();public List<T> getMappingsByUrl(String urlPath) {_			return this.urlLookup.get(urlPath)__		};return,matches,for,the,given,url,path,not,thread,safe,see,acquire,read,lock;public,list,t,get,mappings,by,url,string,url,path,return,this,url,lookup,get,url,path
AbstractHandlerMethodMapping -> MappingRegistry -> public List<T> getMappingsByUrl(String urlPath);1496334664;Return matches for the given URL path. Not thread-safe._@see #acquireReadLock();public List<T> getMappingsByUrl(String urlPath) {_			return this.urlLookup.get(urlPath)__		};return,matches,for,the,given,url,path,not,thread,safe,see,acquire,read,lock;public,list,t,get,mappings,by,url,string,url,path,return,this,url,lookup,get,url,path
AbstractHandlerMethodMapping -> MappingRegistry -> public List<T> getMappingsByUrl(String urlPath);1496430942;Return matches for the given URL path. Not thread-safe._@see #acquireReadLock();public List<T> getMappingsByUrl(String urlPath) {_			return this.urlLookup.get(urlPath)__		};return,matches,for,the,given,url,path,not,thread,safe,see,acquire,read,lock;public,list,t,get,mappings,by,url,string,url,path,return,this,url,lookup,get,url,path
AbstractHandlerMethodMapping -> @Nullable 	protected abstract Comparator<T> getMappingComparator(ServerWebExchange exchange)_;1495868221;Return a comparator for sorting matching mappings._The returned comparator should sort 'better' matches higher._@param exchange the current exchange_@return the comparator (never {@code null});@Nullable_	protected abstract Comparator<T> getMappingComparator(ServerWebExchange exchange)_;return,a,comparator,for,sorting,matching,mappings,the,returned,comparator,should,sort,better,matches,higher,param,exchange,the,current,exchange,return,the,comparator,never,code,null;nullable,protected,abstract,comparator,t,get,mapping,comparator,server,web,exchange,exchange
AbstractHandlerMethodMapping -> @Nullable 	protected abstract Comparator<T> getMappingComparator(ServerWebExchange exchange)_;1496334664;Return a comparator for sorting matching mappings._The returned comparator should sort 'better' matches higher._@param exchange the current exchange_@return the comparator (never {@code null});@Nullable_	protected abstract Comparator<T> getMappingComparator(ServerWebExchange exchange)_;return,a,comparator,for,sorting,matching,mappings,the,returned,comparator,should,sort,better,matches,higher,param,exchange,the,current,exchange,return,the,comparator,never,code,null;nullable,protected,abstract,comparator,t,get,mapping,comparator,server,web,exchange,exchange
AbstractHandlerMethodMapping -> @Nullable 	protected abstract Comparator<T> getMappingComparator(ServerWebExchange exchange)_;1496430942;Return a comparator for sorting matching mappings._The returned comparator should sort 'better' matches higher._@param exchange the current exchange_@return the comparator (never {@code null});@Nullable_	protected abstract Comparator<T> getMappingComparator(ServerWebExchange exchange)_;return,a,comparator,for,sorting,matching,mappings,the,returned,comparator,should,sort,better,matches,higher,param,exchange,the,current,exchange,return,the,comparator,never,code,null;nullable,protected,abstract,comparator,t,get,mapping,comparator,server,web,exchange,exchange
AbstractHandlerMethodMapping -> public Map<T, HandlerMethod> getHandlerMethods();1485986572;Return a (read-only) map with all mappings and HandlerMethod's.;public Map<T, HandlerMethod> getHandlerMethods() {_		this.mappingRegistry.acquireReadLock()__		try {_			return Collections.unmodifiableMap(this.mappingRegistry.getMappings())__		}_		finally {_			this.mappingRegistry.releaseReadLock()__		}_	};return,a,read,only,map,with,all,mappings,and,handler,method,s;public,map,t,handler,method,get,handler,methods,this,mapping,registry,acquire,read,lock,try,return,collections,unmodifiable,map,this,mapping,registry,get,mappings,finally,this,mapping,registry,release,read,lock
AbstractHandlerMethodMapping -> public Map<T, HandlerMethod> getHandlerMethods();1486635693;Return a (read-only) map with all mappings and HandlerMethod's.;public Map<T, HandlerMethod> getHandlerMethods() {_		this.readWriteLock.readLock().lock()__		try {_			return Collections.unmodifiableMap(this.mappingRegistry.getMappings())__		}_		finally {_			this.readWriteLock.readLock().unlock()__		}_	};return,a,read,only,map,with,all,mappings,and,handler,method,s;public,map,t,handler,method,get,handler,methods,this,read,write,lock,read,lock,lock,try,return,collections,unmodifiable,map,this,mapping,registry,get,mappings,finally,this,read,write,lock,read,lock,unlock
AbstractHandlerMethodMapping -> public Map<T, HandlerMethod> getHandlerMethods();1486674586;Return a (read-only) map with all mappings and HandlerMethod's.;public Map<T, HandlerMethod> getHandlerMethods() {_		this.readWriteLock.readLock().lock()__		try {_			return Collections.unmodifiableMap(this.mappingRegistry.getMappings())__		}_		finally {_			this.readWriteLock.readLock().unlock()__		}_	};return,a,read,only,map,with,all,mappings,and,handler,method,s;public,map,t,handler,method,get,handler,methods,this,read,write,lock,read,lock,lock,try,return,collections,unmodifiable,map,this,mapping,registry,get,mappings,finally,this,read,write,lock,read,lock,unlock
AbstractHandlerMethodMapping -> public Map<T, HandlerMethod> getHandlerMethods();1486747801;Return a (read-only) map with all mappings and HandlerMethod's.;public Map<T, HandlerMethod> getHandlerMethods() {_		this.mappingRegistry.acquireReadLock()__		try {_			return Collections.unmodifiableMap(this.mappingRegistry.getMappings())__		}_		finally {_			this.mappingRegistry.releaseReadLock()__		}_	};return,a,read,only,map,with,all,mappings,and,handler,method,s;public,map,t,handler,method,get,handler,methods,this,mapping,registry,acquire,read,lock,try,return,collections,unmodifiable,map,this,mapping,registry,get,mappings,finally,this,mapping,registry,release,read,lock
AbstractHandlerMethodMapping -> public Map<T, HandlerMethod> getHandlerMethods();1489852683;Return a (read-only) map with all mappings and HandlerMethod's.;public Map<T, HandlerMethod> getHandlerMethods() {_		this.mappingRegistry.acquireReadLock()__		try {_			return Collections.unmodifiableMap(this.mappingRegistry.getMappings())__		}_		finally {_			this.mappingRegistry.releaseReadLock()__		}_	};return,a,read,only,map,with,all,mappings,and,handler,method,s;public,map,t,handler,method,get,handler,methods,this,mapping,registry,acquire,read,lock,try,return,collections,unmodifiable,map,this,mapping,registry,get,mappings,finally,this,mapping,registry,release,read,lock
AbstractHandlerMethodMapping -> public Map<T, HandlerMethod> getHandlerMethods();1492542679;Return a (read-only) map with all mappings and HandlerMethod's.;public Map<T, HandlerMethod> getHandlerMethods() {_		this.mappingRegistry.acquireReadLock()__		try {_			return Collections.unmodifiableMap(this.mappingRegistry.getMappings())__		}_		finally {_			this.mappingRegistry.releaseReadLock()__		}_	};return,a,read,only,map,with,all,mappings,and,handler,method,s;public,map,t,handler,method,get,handler,methods,this,mapping,registry,acquire,read,lock,try,return,collections,unmodifiable,map,this,mapping,registry,get,mappings,finally,this,mapping,registry,release,read,lock
AbstractHandlerMethodMapping -> public Map<T, HandlerMethod> getHandlerMethods();1493370460;Return a (read-only) map with all mappings and HandlerMethod's.;public Map<T, HandlerMethod> getHandlerMethods() {_		this.mappingRegistry.acquireReadLock()__		try {_			return Collections.unmodifiableMap(this.mappingRegistry.getMappings())__		}_		finally {_			this.mappingRegistry.releaseReadLock()__		}_	};return,a,read,only,map,with,all,mappings,and,handler,method,s;public,map,t,handler,method,get,handler,methods,this,mapping,registry,acquire,read,lock,try,return,collections,unmodifiable,map,this,mapping,registry,get,mappings,finally,this,mapping,registry,release,read,lock
AbstractHandlerMethodMapping -> public Map<T, HandlerMethod> getHandlerMethods();1493391766;Return a (read-only) map with all mappings and HandlerMethod's.;public Map<T, HandlerMethod> getHandlerMethods() {_		this.mappingRegistry.acquireReadLock()__		try {_			return Collections.unmodifiableMap(this.mappingRegistry.getMappings())__		}_		finally {_			this.mappingRegistry.releaseReadLock()__		}_	};return,a,read,only,map,with,all,mappings,and,handler,method,s;public,map,t,handler,method,get,handler,methods,this,mapping,registry,acquire,read,lock,try,return,collections,unmodifiable,map,this,mapping,registry,get,mappings,finally,this,mapping,registry,release,read,lock
AbstractHandlerMethodMapping -> public Map<T, HandlerMethod> getHandlerMethods();1493755795;Return a (read-only) map with all mappings and HandlerMethod's.;public Map<T, HandlerMethod> getHandlerMethods() {_		this.mappingRegistry.acquireReadLock()__		try {_			return Collections.unmodifiableMap(this.mappingRegistry.getMappings())__		}_		finally {_			this.mappingRegistry.releaseReadLock()__		}_	};return,a,read,only,map,with,all,mappings,and,handler,method,s;public,map,t,handler,method,get,handler,methods,this,mapping,registry,acquire,read,lock,try,return,collections,unmodifiable,map,this,mapping,registry,get,mappings,finally,this,mapping,registry,release,read,lock
AbstractHandlerMethodMapping -> public Map<T, HandlerMethod> getHandlerMethods();1495868221;Return a (read-only) map with all mappings and HandlerMethod's.;public Map<T, HandlerMethod> getHandlerMethods() {_		this.mappingRegistry.acquireReadLock()__		try {_			return Collections.unmodifiableMap(this.mappingRegistry.getMappings())__		}_		finally {_			this.mappingRegistry.releaseReadLock()__		}_	};return,a,read,only,map,with,all,mappings,and,handler,method,s;public,map,t,handler,method,get,handler,methods,this,mapping,registry,acquire,read,lock,try,return,collections,unmodifiable,map,this,mapping,registry,get,mappings,finally,this,mapping,registry,release,read,lock
AbstractHandlerMethodMapping -> public Map<T, HandlerMethod> getHandlerMethods();1496334664;Return a (read-only) map with all mappings and HandlerMethod's.;public Map<T, HandlerMethod> getHandlerMethods() {_		this.mappingRegistry.acquireReadLock()__		try {_			return Collections.unmodifiableMap(this.mappingRegistry.getMappings())__		}_		finally {_			this.mappingRegistry.releaseReadLock()__		}_	};return,a,read,only,map,with,all,mappings,and,handler,method,s;public,map,t,handler,method,get,handler,methods,this,mapping,registry,acquire,read,lock,try,return,collections,unmodifiable,map,this,mapping,registry,get,mappings,finally,this,mapping,registry,release,read,lock
AbstractHandlerMethodMapping -> public Map<T, HandlerMethod> getHandlerMethods();1496430942;Return a (read-only) map with all mappings and HandlerMethod's.;public Map<T, HandlerMethod> getHandlerMethods() {_		this.mappingRegistry.acquireReadLock()__		try {_			return Collections.unmodifiableMap(this.mappingRegistry.getMappings())__		}_		finally {_			this.mappingRegistry.releaseReadLock()__		}_	};return,a,read,only,map,with,all,mappings,and,handler,method,s;public,map,t,handler,method,get,handler,methods,this,mapping,registry,acquire,read,lock,try,return,collections,unmodifiable,map,this,mapping,registry,get,mappings,finally,this,mapping,registry,release,read,lock
AbstractHandlerMethodMapping -> public Map<T, HandlerMethod> getHandlerMethods();1496837955;Return a (read-only) map with all mappings and HandlerMethod's.;public Map<T, HandlerMethod> getHandlerMethods() {_		this.mappingRegistry.acquireReadLock()__		try {_			return Collections.unmodifiableMap(this.mappingRegistry.getMappings())__		}_		finally {_			this.mappingRegistry.releaseReadLock()__		}_	};return,a,read,only,map,with,all,mappings,and,handler,method,s;public,map,t,handler,method,get,handler,methods,this,mapping,registry,acquire,read,lock,try,return,collections,unmodifiable,map,this,mapping,registry,get,mappings,finally,this,mapping,registry,release,read,lock
AbstractHandlerMethodMapping -> public Map<T, HandlerMethod> getHandlerMethods();1497039338;Return a (read-only) map with all mappings and HandlerMethod's.;public Map<T, HandlerMethod> getHandlerMethods() {_		this.mappingRegistry.acquireReadLock()__		try {_			return Collections.unmodifiableMap(this.mappingRegistry.getMappings())__		}_		finally {_			this.mappingRegistry.releaseReadLock()__		}_	};return,a,read,only,map,with,all,mappings,and,handler,method,s;public,map,t,handler,method,get,handler,methods,this,mapping,registry,acquire,read,lock,try,return,collections,unmodifiable,map,this,mapping,registry,get,mappings,finally,this,mapping,registry,release,read,lock
AbstractHandlerMethodMapping -> public Map<T, HandlerMethod> getHandlerMethods();1497232764;Return a (read-only) map with all mappings and HandlerMethod's.;public Map<T, HandlerMethod> getHandlerMethods() {_		this.mappingRegistry.acquireReadLock()__		try {_			return Collections.unmodifiableMap(this.mappingRegistry.getMappings())__		}_		finally {_			this.mappingRegistry.releaseReadLock()__		}_	};return,a,read,only,map,with,all,mappings,and,handler,method,s;public,map,t,handler,method,get,handler,methods,this,mapping,registry,acquire,read,lock,try,return,collections,unmodifiable,map,this,mapping,registry,get,mappings,finally,this,mapping,registry,release,read,lock
AbstractHandlerMethodMapping -> public Map<T, HandlerMethod> getHandlerMethods();1497251962;Return a (read-only) map with all mappings and HandlerMethod's.;public Map<T, HandlerMethod> getHandlerMethods() {_		this.mappingRegistry.acquireReadLock()__		try {_			return Collections.unmodifiableMap(this.mappingRegistry.getMappings())__		}_		finally {_			this.mappingRegistry.releaseReadLock()__		}_	};return,a,read,only,map,with,all,mappings,and,handler,method,s;public,map,t,handler,method,get,handler,methods,this,mapping,registry,acquire,read,lock,try,return,collections,unmodifiable,map,this,mapping,registry,get,mappings,finally,this,mapping,registry,release,read,lock
AbstractHandlerMethodMapping -> public Map<T, HandlerMethod> getHandlerMethods();1497286385;Return a (read-only) map with all mappings and HandlerMethod's.;public Map<T, HandlerMethod> getHandlerMethods() {_		this.mappingRegistry.acquireReadLock()__		try {_			return Collections.unmodifiableMap(this.mappingRegistry.getMappings())__		}_		finally {_			this.mappingRegistry.releaseReadLock()__		}_	};return,a,read,only,map,with,all,mappings,and,handler,method,s;public,map,t,handler,method,get,handler,methods,this,mapping,registry,acquire,read,lock,try,return,collections,unmodifiable,map,this,mapping,registry,get,mappings,finally,this,mapping,registry,release,read,lock
AbstractHandlerMethodMapping -> public Map<T, HandlerMethod> getHandlerMethods();1498756719;Return a (read-only) map with all mappings and HandlerMethod's.;public Map<T, HandlerMethod> getHandlerMethods() {_		this.mappingRegistry.acquireReadLock()__		try {_			return Collections.unmodifiableMap(this.mappingRegistry.getMappings())__		}_		finally {_			this.mappingRegistry.releaseReadLock()__		}_	};return,a,read,only,map,with,all,mappings,and,handler,method,s;public,map,t,handler,method,get,handler,methods,this,mapping,registry,acquire,read,lock,try,return,collections,unmodifiable,map,this,mapping,registry,get,mappings,finally,this,mapping,registry,release,read,lock
AbstractHandlerMethodMapping -> public Map<T, HandlerMethod> getHandlerMethods();1498861175;Return a (read-only) map with all mappings and HandlerMethod's.;public Map<T, HandlerMethod> getHandlerMethods() {_		this.mappingRegistry.acquireReadLock()__		try {_			return Collections.unmodifiableMap(this.mappingRegistry.getMappings())__		}_		finally {_			this.mappingRegistry.releaseReadLock()__		}_	};return,a,read,only,map,with,all,mappings,and,handler,method,s;public,map,t,handler,method,get,handler,methods,this,mapping,registry,acquire,read,lock,try,return,collections,unmodifiable,map,this,mapping,registry,get,mappings,finally,this,mapping,registry,release,read,lock
AbstractHandlerMethodMapping -> public Map<T, HandlerMethod> getHandlerMethods();1498953917;Return a (read-only) map with all mappings and HandlerMethod's.;public Map<T, HandlerMethod> getHandlerMethods() {_		this.mappingRegistry.acquireReadLock()__		try {_			return Collections.unmodifiableMap(this.mappingRegistry.getMappings())__		}_		finally {_			this.mappingRegistry.releaseReadLock()__		}_	};return,a,read,only,map,with,all,mappings,and,handler,method,s;public,map,t,handler,method,get,handler,methods,this,mapping,registry,acquire,read,lock,try,return,collections,unmodifiable,map,this,mapping,registry,get,mappings,finally,this,mapping,registry,release,read,lock
AbstractHandlerMethodMapping -> public Map<T, HandlerMethod> getHandlerMethods();1516617801;Return a (read-only) map with all mappings and HandlerMethod's.;public Map<T, HandlerMethod> getHandlerMethods() {_		this.mappingRegistry.acquireReadLock()__		try {_			return Collections.unmodifiableMap(this.mappingRegistry.getMappings())__		}_		finally {_			this.mappingRegistry.releaseReadLock()__		}_	};return,a,read,only,map,with,all,mappings,and,handler,method,s;public,map,t,handler,method,get,handler,methods,this,mapping,registry,acquire,read,lock,try,return,collections,unmodifiable,map,this,mapping,registry,get,mappings,finally,this,mapping,registry,release,read,lock
AbstractHandlerMethodMapping -> public Map<T, HandlerMethod> getHandlerMethods();1529721864;Return a (read-only) map with all mappings and HandlerMethod's.;public Map<T, HandlerMethod> getHandlerMethods() {_		this.mappingRegistry.acquireReadLock()__		try {_			return Collections.unmodifiableMap(this.mappingRegistry.getMappings())__		}_		finally {_			this.mappingRegistry.releaseReadLock()__		}_	};return,a,read,only,map,with,all,mappings,and,handler,method,s;public,map,t,handler,method,get,handler,methods,this,mapping,registry,acquire,read,lock,try,return,collections,unmodifiable,map,this,mapping,registry,get,mappings,finally,this,mapping,registry,release,read,lock
AbstractHandlerMethodMapping -> public Map<T, HandlerMethod> getHandlerMethods();1530174524;Return a (read-only) map with all mappings and HandlerMethod's.;public Map<T, HandlerMethod> getHandlerMethods() {_		this.mappingRegistry.acquireReadLock()__		try {_			return Collections.unmodifiableMap(this.mappingRegistry.getMappings())__		}_		finally {_			this.mappingRegistry.releaseReadLock()__		}_	};return,a,read,only,map,with,all,mappings,and,handler,method,s;public,map,t,handler,method,get,handler,methods,this,mapping,registry,acquire,read,lock,try,return,collections,unmodifiable,map,this,mapping,registry,get,mappings,finally,this,mapping,registry,release,read,lock
AbstractHandlerMethodMapping -> public Map<T, HandlerMethod> getHandlerMethods();1530793633;Return a (read-only) map with all mappings and HandlerMethod's.;public Map<T, HandlerMethod> getHandlerMethods() {_		this.mappingRegistry.acquireReadLock()__		try {_			return Collections.unmodifiableMap(this.mappingRegistry.getMappings())__		}_		finally {_			this.mappingRegistry.releaseReadLock()__		}_	};return,a,read,only,map,with,all,mappings,and,handler,method,s;public,map,t,handler,method,get,handler,methods,this,mapping,registry,acquire,read,lock,try,return,collections,unmodifiable,map,this,mapping,registry,get,mappings,finally,this,mapping,registry,release,read,lock
AbstractHandlerMethodMapping -> public Map<T, HandlerMethod> getHandlerMethods();1542407418;Return a (read-only) map with all mappings and HandlerMethod's.;public Map<T, HandlerMethod> getHandlerMethods() {_		this.mappingRegistry.acquireReadLock()__		try {_			return Collections.unmodifiableMap(this.mappingRegistry.getMappings())__		}_		finally {_			this.mappingRegistry.releaseReadLock()__		}_	};return,a,read,only,map,with,all,mappings,and,handler,method,s;public,map,t,handler,method,get,handler,methods,this,mapping,registry,acquire,read,lock,try,return,collections,unmodifiable,map,this,mapping,registry,get,mappings,finally,this,mapping,registry,release,read,lock
AbstractHandlerMethodMapping -> public Map<T, HandlerMethod> getHandlerMethods();1548427561;Return a (read-only) map with all mappings and HandlerMethod's.;public Map<T, HandlerMethod> getHandlerMethods() {_		this.mappingRegistry.acquireReadLock()__		try {_			return Collections.unmodifiableMap(this.mappingRegistry.getMappings())__		}_		finally {_			this.mappingRegistry.releaseReadLock()__		}_	};return,a,read,only,map,with,all,mappings,and,handler,method,s;public,map,t,handler,method,get,handler,methods,this,mapping,registry,acquire,read,lock,try,return,collections,unmodifiable,map,this,mapping,registry,get,mappings,finally,this,mapping,registry,release,read,lock
AbstractHandlerMethodMapping -> public Map<T, HandlerMethod> getHandlerMethods();1551093473;Return a (read-only) map with all mappings and HandlerMethod's.;public Map<T, HandlerMethod> getHandlerMethods() {_		this.mappingRegistry.acquireReadLock()__		try {_			return Collections.unmodifiableMap(this.mappingRegistry.getMappings())__		}_		finally {_			this.mappingRegistry.releaseReadLock()__		}_	};return,a,read,only,map,with,all,mappings,and,handler,method,s;public,map,t,handler,method,get,handler,methods,this,mapping,registry,acquire,read,lock,try,return,collections,unmodifiable,map,this,mapping,registry,get,mappings,finally,this,mapping,registry,release,read,lock
AbstractHandlerMethodMapping -> protected void handleMatch(T mapping, String lookupPath, ServerWebExchange exchange);1485986572;Invoked when a matching mapping is found._@param mapping the matching mapping_@param lookupPath mapping lookup path within the current servlet mapping_@param exchange the current exchange;protected void handleMatch(T mapping, String lookupPath, ServerWebExchange exchange) {_	};invoked,when,a,matching,mapping,is,found,param,mapping,the,matching,mapping,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,exchange,the,current,exchange;protected,void,handle,match,t,mapping,string,lookup,path,server,web,exchange,exchange
AbstractHandlerMethodMapping -> protected void handleMatch(T mapping, String lookupPath, ServerWebExchange exchange);1486635693;Invoked when a matching mapping is found._@param mapping the matching mapping_@param lookupPath mapping lookup path within the current servlet mapping_@param exchange the current exchange;protected void handleMatch(T mapping, String lookupPath, ServerWebExchange exchange) {_	};invoked,when,a,matching,mapping,is,found,param,mapping,the,matching,mapping,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,exchange,the,current,exchange;protected,void,handle,match,t,mapping,string,lookup,path,server,web,exchange,exchange
AbstractHandlerMethodMapping -> protected void handleMatch(T mapping, String lookupPath, ServerWebExchange exchange);1486674586;Invoked when a matching mapping is found._@param mapping the matching mapping_@param lookupPath mapping lookup path within the current servlet mapping_@param exchange the current exchange;protected void handleMatch(T mapping, String lookupPath, ServerWebExchange exchange) {_	};invoked,when,a,matching,mapping,is,found,param,mapping,the,matching,mapping,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,exchange,the,current,exchange;protected,void,handle,match,t,mapping,string,lookup,path,server,web,exchange,exchange
AbstractHandlerMethodMapping -> protected void handleMatch(T mapping, String lookupPath, ServerWebExchange exchange);1486747801;Invoked when a matching mapping is found._@param mapping the matching mapping_@param lookupPath mapping lookup path within the current servlet mapping_@param exchange the current exchange;protected void handleMatch(T mapping, String lookupPath, ServerWebExchange exchange) {_	};invoked,when,a,matching,mapping,is,found,param,mapping,the,matching,mapping,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,exchange,the,current,exchange;protected,void,handle,match,t,mapping,string,lookup,path,server,web,exchange,exchange
AbstractHandlerMethodMapping -> protected void handleMatch(T mapping, String lookupPath, ServerWebExchange exchange);1489852683;Invoked when a matching mapping is found._@param mapping the matching mapping_@param lookupPath mapping lookup path within the current servlet mapping_@param exchange the current exchange;protected void handleMatch(T mapping, String lookupPath, ServerWebExchange exchange) {_	};invoked,when,a,matching,mapping,is,found,param,mapping,the,matching,mapping,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,exchange,the,current,exchange;protected,void,handle,match,t,mapping,string,lookup,path,server,web,exchange,exchange
AbstractHandlerMethodMapping -> protected void handleMatch(T mapping, String lookupPath, ServerWebExchange exchange);1492542679;Invoked when a matching mapping is found._@param mapping the matching mapping_@param lookupPath mapping lookup path within the current servlet mapping_@param exchange the current exchange;protected void handleMatch(T mapping, String lookupPath, ServerWebExchange exchange) {_	};invoked,when,a,matching,mapping,is,found,param,mapping,the,matching,mapping,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,exchange,the,current,exchange;protected,void,handle,match,t,mapping,string,lookup,path,server,web,exchange,exchange
AbstractHandlerMethodMapping -> protected void handleMatch(T mapping, String lookupPath, ServerWebExchange exchange);1493370460;Invoked when a matching mapping is found._@param mapping the matching mapping_@param lookupPath mapping lookup path within the current servlet mapping_@param exchange the current exchange;protected void handleMatch(T mapping, String lookupPath, ServerWebExchange exchange) {_	};invoked,when,a,matching,mapping,is,found,param,mapping,the,matching,mapping,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,exchange,the,current,exchange;protected,void,handle,match,t,mapping,string,lookup,path,server,web,exchange,exchange
AbstractHandlerMethodMapping -> protected void handleMatch(T mapping, String lookupPath, ServerWebExchange exchange);1493391766;Invoked when a matching mapping is found._@param mapping the matching mapping_@param lookupPath mapping lookup path within the current servlet mapping_@param exchange the current exchange;protected void handleMatch(T mapping, String lookupPath, ServerWebExchange exchange) {_	};invoked,when,a,matching,mapping,is,found,param,mapping,the,matching,mapping,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,exchange,the,current,exchange;protected,void,handle,match,t,mapping,string,lookup,path,server,web,exchange,exchange
AbstractHandlerMethodMapping -> protected void handleMatch(T mapping, String lookupPath, ServerWebExchange exchange);1493755795;Invoked when a matching mapping is found._@param mapping the matching mapping_@param lookupPath mapping lookup path within the current servlet mapping_@param exchange the current exchange;protected void handleMatch(T mapping, String lookupPath, ServerWebExchange exchange) {_	};invoked,when,a,matching,mapping,is,found,param,mapping,the,matching,mapping,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,exchange,the,current,exchange;protected,void,handle,match,t,mapping,string,lookup,path,server,web,exchange,exchange
AbstractHandlerMethodMapping -> protected void handleMatch(T mapping, String lookupPath, ServerWebExchange exchange);1495868221;Invoked when a matching mapping is found._@param mapping the matching mapping_@param lookupPath mapping lookup path within the current servlet mapping_@param exchange the current exchange;protected void handleMatch(T mapping, String lookupPath, ServerWebExchange exchange) {_	};invoked,when,a,matching,mapping,is,found,param,mapping,the,matching,mapping,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,exchange,the,current,exchange;protected,void,handle,match,t,mapping,string,lookup,path,server,web,exchange,exchange
AbstractHandlerMethodMapping -> protected void handleMatch(T mapping, String lookupPath, ServerWebExchange exchange);1497039338;Invoked when a matching mapping is found._@param mapping the matching mapping_@param lookupPath the lookup path within the current mapping_@param exchange the current exchange;protected void handleMatch(T mapping, String lookupPath, ServerWebExchange exchange) {_	};invoked,when,a,matching,mapping,is,found,param,mapping,the,matching,mapping,param,lookup,path,the,lookup,path,within,the,current,mapping,param,exchange,the,current,exchange;protected,void,handle,match,t,mapping,string,lookup,path,server,web,exchange,exchange
AbstractHandlerMethodMapping -> protected void handleMatch(T mapping, String lookupPath, ServerWebExchange exchange);1497232764;Invoked when a matching mapping is found._@param mapping the matching mapping_@param lookupPath the lookup path within the current mapping_@param exchange the current exchange;protected void handleMatch(T mapping, String lookupPath, ServerWebExchange exchange) {_	};invoked,when,a,matching,mapping,is,found,param,mapping,the,matching,mapping,param,lookup,path,the,lookup,path,within,the,current,mapping,param,exchange,the,current,exchange;protected,void,handle,match,t,mapping,string,lookup,path,server,web,exchange,exchange
AbstractHandlerMethodMapping -> protected void handleMatch(T mapping, String lookupPath, ServerWebExchange exchange);1497251962;Invoked when a matching mapping is found._@param mapping the matching mapping_@param lookupPath the lookup path within the current mapping_@param exchange the current exchange;protected void handleMatch(T mapping, String lookupPath, ServerWebExchange exchange) {_	};invoked,when,a,matching,mapping,is,found,param,mapping,the,matching,mapping,param,lookup,path,the,lookup,path,within,the,current,mapping,param,exchange,the,current,exchange;protected,void,handle,match,t,mapping,string,lookup,path,server,web,exchange,exchange
AbstractHandlerMethodMapping -> protected void handleMatch(T mapping, String lookupPath, ServerWebExchange exchange);1497286385;Invoked when a matching mapping is found._@param mapping the matching mapping_@param lookupPath the lookup path within the current mapping_@param exchange the current exchange;protected void handleMatch(T mapping, String lookupPath, ServerWebExchange exchange) {_	};invoked,when,a,matching,mapping,is,found,param,mapping,the,matching,mapping,param,lookup,path,the,lookup,path,within,the,current,mapping,param,exchange,the,current,exchange;protected,void,handle,match,t,mapping,string,lookup,path,server,web,exchange,exchange
AbstractHandlerMethodMapping -> protected HandlerMethod createHandlerMethod(Object handler, Method method);1485986572;Create the HandlerMethod instance._@param handler either a bean name or an actual handler instance_@param method the target method_@return the created HandlerMethod;protected HandlerMethod createHandlerMethod(Object handler, Method method) {_		HandlerMethod handlerMethod__		if (handler instanceof String) {_			String beanName = (String) handler__			handlerMethod = new HandlerMethod(beanName,_					getApplicationContext().getAutowireCapableBeanFactory(), method)__		}_		else {_			handlerMethod = new HandlerMethod(handler, method)__		}_		return handlerMethod__	};create,the,handler,method,instance,param,handler,either,a,bean,name,or,an,actual,handler,instance,param,method,the,target,method,return,the,created,handler,method;protected,handler,method,create,handler,method,object,handler,method,method,handler,method,handler,method,if,handler,instanceof,string,string,bean,name,string,handler,handler,method,new,handler,method,bean,name,get,application,context,get,autowire,capable,bean,factory,method,else,handler,method,new,handler,method,handler,method,return,handler,method
AbstractHandlerMethodMapping -> protected HandlerMethod createHandlerMethod(Object handler, Method method);1486635693;Create the HandlerMethod instance._@param handler either a bean name or an actual handler instance_@param method the target method_@return the created HandlerMethod;protected HandlerMethod createHandlerMethod(Object handler, Method method) {_		HandlerMethod handlerMethod__		if (handler instanceof String) {_			String beanName = (String) handler__			handlerMethod = new HandlerMethod(beanName,_					getApplicationContext().getAutowireCapableBeanFactory(), method)__		}_		else {_			handlerMethod = new HandlerMethod(handler, method)__		}_		return handlerMethod__	};create,the,handler,method,instance,param,handler,either,a,bean,name,or,an,actual,handler,instance,param,method,the,target,method,return,the,created,handler,method;protected,handler,method,create,handler,method,object,handler,method,method,handler,method,handler,method,if,handler,instanceof,string,string,bean,name,string,handler,handler,method,new,handler,method,bean,name,get,application,context,get,autowire,capable,bean,factory,method,else,handler,method,new,handler,method,handler,method,return,handler,method
AbstractHandlerMethodMapping -> protected HandlerMethod createHandlerMethod(Object handler, Method method);1486674586;Create the HandlerMethod instance._@param handler either a bean name or an actual handler instance_@param method the target method_@return the created HandlerMethod;protected HandlerMethod createHandlerMethod(Object handler, Method method) {_		HandlerMethod handlerMethod__		if (handler instanceof String) {_			String beanName = (String) handler__			handlerMethod = new HandlerMethod(beanName,_					getApplicationContext().getAutowireCapableBeanFactory(), method)__		}_		else {_			handlerMethod = new HandlerMethod(handler, method)__		}_		return handlerMethod__	};create,the,handler,method,instance,param,handler,either,a,bean,name,or,an,actual,handler,instance,param,method,the,target,method,return,the,created,handler,method;protected,handler,method,create,handler,method,object,handler,method,method,handler,method,handler,method,if,handler,instanceof,string,string,bean,name,string,handler,handler,method,new,handler,method,bean,name,get,application,context,get,autowire,capable,bean,factory,method,else,handler,method,new,handler,method,handler,method,return,handler,method
AbstractHandlerMethodMapping -> protected HandlerMethod createHandlerMethod(Object handler, Method method);1486747801;Create the HandlerMethod instance._@param handler either a bean name or an actual handler instance_@param method the target method_@return the created HandlerMethod;protected HandlerMethod createHandlerMethod(Object handler, Method method) {_		HandlerMethod handlerMethod__		if (handler instanceof String) {_			String beanName = (String) handler__			handlerMethod = new HandlerMethod(beanName,_					getApplicationContext().getAutowireCapableBeanFactory(), method)__		}_		else {_			handlerMethod = new HandlerMethod(handler, method)__		}_		return handlerMethod__	};create,the,handler,method,instance,param,handler,either,a,bean,name,or,an,actual,handler,instance,param,method,the,target,method,return,the,created,handler,method;protected,handler,method,create,handler,method,object,handler,method,method,handler,method,handler,method,if,handler,instanceof,string,string,bean,name,string,handler,handler,method,new,handler,method,bean,name,get,application,context,get,autowire,capable,bean,factory,method,else,handler,method,new,handler,method,handler,method,return,handler,method
AbstractHandlerMethodMapping -> protected HandlerMethod createHandlerMethod(Object handler, Method method);1489852683;Create the HandlerMethod instance._@param handler either a bean name or an actual handler instance_@param method the target method_@return the created HandlerMethod;protected HandlerMethod createHandlerMethod(Object handler, Method method) {_		HandlerMethod handlerMethod__		if (handler instanceof String) {_			String beanName = (String) handler__			handlerMethod = new HandlerMethod(beanName,_					getApplicationContext().getAutowireCapableBeanFactory(), method)__		}_		else {_			handlerMethod = new HandlerMethod(handler, method)__		}_		return handlerMethod__	};create,the,handler,method,instance,param,handler,either,a,bean,name,or,an,actual,handler,instance,param,method,the,target,method,return,the,created,handler,method;protected,handler,method,create,handler,method,object,handler,method,method,handler,method,handler,method,if,handler,instanceof,string,string,bean,name,string,handler,handler,method,new,handler,method,bean,name,get,application,context,get,autowire,capable,bean,factory,method,else,handler,method,new,handler,method,handler,method,return,handler,method
AbstractHandlerMethodMapping -> protected HandlerMethod createHandlerMethod(Object handler, Method method);1492542679;Create the HandlerMethod instance._@param handler either a bean name or an actual handler instance_@param method the target method_@return the created HandlerMethod;protected HandlerMethod createHandlerMethod(Object handler, Method method) {_		HandlerMethod handlerMethod__		if (handler instanceof String) {_			String beanName = (String) handler__			handlerMethod = new HandlerMethod(beanName,_					getApplicationContext().getAutowireCapableBeanFactory(), method)__		}_		else {_			handlerMethod = new HandlerMethod(handler, method)__		}_		return handlerMethod__	};create,the,handler,method,instance,param,handler,either,a,bean,name,or,an,actual,handler,instance,param,method,the,target,method,return,the,created,handler,method;protected,handler,method,create,handler,method,object,handler,method,method,handler,method,handler,method,if,handler,instanceof,string,string,bean,name,string,handler,handler,method,new,handler,method,bean,name,get,application,context,get,autowire,capable,bean,factory,method,else,handler,method,new,handler,method,handler,method,return,handler,method
AbstractHandlerMethodMapping -> protected HandlerMethod createHandlerMethod(Object handler, Method method);1493370460;Create the HandlerMethod instance._@param handler either a bean name or an actual handler instance_@param method the target method_@return the created HandlerMethod;protected HandlerMethod createHandlerMethod(Object handler, Method method) {_		HandlerMethod handlerMethod__		if (handler instanceof String) {_			String beanName = (String) handler__			handlerMethod = new HandlerMethod(beanName,_					getApplicationContext().getAutowireCapableBeanFactory(), method)__		}_		else {_			handlerMethod = new HandlerMethod(handler, method)__		}_		return handlerMethod__	};create,the,handler,method,instance,param,handler,either,a,bean,name,or,an,actual,handler,instance,param,method,the,target,method,return,the,created,handler,method;protected,handler,method,create,handler,method,object,handler,method,method,handler,method,handler,method,if,handler,instanceof,string,string,bean,name,string,handler,handler,method,new,handler,method,bean,name,get,application,context,get,autowire,capable,bean,factory,method,else,handler,method,new,handler,method,handler,method,return,handler,method
AbstractHandlerMethodMapping -> protected HandlerMethod createHandlerMethod(Object handler, Method method);1493391766;Create the HandlerMethod instance._@param handler either a bean name or an actual handler instance_@param method the target method_@return the created HandlerMethod;protected HandlerMethod createHandlerMethod(Object handler, Method method) {_		HandlerMethod handlerMethod__		if (handler instanceof String) {_			String beanName = (String) handler__			handlerMethod = new HandlerMethod(beanName,_					getApplicationContext().getAutowireCapableBeanFactory(), method)__		}_		else {_			handlerMethod = new HandlerMethod(handler, method)__		}_		return handlerMethod__	};create,the,handler,method,instance,param,handler,either,a,bean,name,or,an,actual,handler,instance,param,method,the,target,method,return,the,created,handler,method;protected,handler,method,create,handler,method,object,handler,method,method,handler,method,handler,method,if,handler,instanceof,string,string,bean,name,string,handler,handler,method,new,handler,method,bean,name,get,application,context,get,autowire,capable,bean,factory,method,else,handler,method,new,handler,method,handler,method,return,handler,method
AbstractHandlerMethodMapping -> protected HandlerMethod createHandlerMethod(Object handler, Method method);1493755795;Create the HandlerMethod instance._@param handler either a bean name or an actual handler instance_@param method the target method_@return the created HandlerMethod;protected HandlerMethod createHandlerMethod(Object handler, Method method) {_		HandlerMethod handlerMethod__		if (handler instanceof String) {_			String beanName = (String) handler__			handlerMethod = new HandlerMethod(beanName,_					getApplicationContext().getAutowireCapableBeanFactory(), method)__		}_		else {_			handlerMethod = new HandlerMethod(handler, method)__		}_		return handlerMethod__	};create,the,handler,method,instance,param,handler,either,a,bean,name,or,an,actual,handler,instance,param,method,the,target,method,return,the,created,handler,method;protected,handler,method,create,handler,method,object,handler,method,method,handler,method,handler,method,if,handler,instanceof,string,string,bean,name,string,handler,handler,method,new,handler,method,bean,name,get,application,context,get,autowire,capable,bean,factory,method,else,handler,method,new,handler,method,handler,method,return,handler,method
AbstractHandlerMethodMapping -> protected HandlerMethod createHandlerMethod(Object handler, Method method);1495868221;Create the HandlerMethod instance._@param handler either a bean name or an actual handler instance_@param method the target method_@return the created HandlerMethod;protected HandlerMethod createHandlerMethod(Object handler, Method method) {_		HandlerMethod handlerMethod__		if (handler instanceof String) {_			String beanName = (String) handler__			handlerMethod = new HandlerMethod(beanName,_					getApplicationContext().getAutowireCapableBeanFactory(), method)__		}_		else {_			handlerMethod = new HandlerMethod(handler, method)__		}_		return handlerMethod__	};create,the,handler,method,instance,param,handler,either,a,bean,name,or,an,actual,handler,instance,param,method,the,target,method,return,the,created,handler,method;protected,handler,method,create,handler,method,object,handler,method,method,handler,method,handler,method,if,handler,instanceof,string,string,bean,name,string,handler,handler,method,new,handler,method,bean,name,get,application,context,get,autowire,capable,bean,factory,method,else,handler,method,new,handler,method,handler,method,return,handler,method
AbstractHandlerMethodMapping -> protected HandlerMethod createHandlerMethod(Object handler, Method method);1496334664;Create the HandlerMethod instance._@param handler either a bean name or an actual handler instance_@param method the target method_@return the created HandlerMethod;protected HandlerMethod createHandlerMethod(Object handler, Method method) {_		HandlerMethod handlerMethod__		if (handler instanceof String) {_			String beanName = (String) handler__			handlerMethod = new HandlerMethod(beanName,_					getApplicationContext().getAutowireCapableBeanFactory(), method)__		}_		else {_			handlerMethod = new HandlerMethod(handler, method)__		}_		return handlerMethod__	};create,the,handler,method,instance,param,handler,either,a,bean,name,or,an,actual,handler,instance,param,method,the,target,method,return,the,created,handler,method;protected,handler,method,create,handler,method,object,handler,method,method,handler,method,handler,method,if,handler,instanceof,string,string,bean,name,string,handler,handler,method,new,handler,method,bean,name,get,application,context,get,autowire,capable,bean,factory,method,else,handler,method,new,handler,method,handler,method,return,handler,method
AbstractHandlerMethodMapping -> protected HandlerMethod createHandlerMethod(Object handler, Method method);1496430942;Create the HandlerMethod instance._@param handler either a bean name or an actual handler instance_@param method the target method_@return the created HandlerMethod;protected HandlerMethod createHandlerMethod(Object handler, Method method) {_		HandlerMethod handlerMethod__		if (handler instanceof String) {_			String beanName = (String) handler__			handlerMethod = new HandlerMethod(beanName,_					getApplicationContext().getAutowireCapableBeanFactory(), method)__		}_		else {_			handlerMethod = new HandlerMethod(handler, method)__		}_		return handlerMethod__	};create,the,handler,method,instance,param,handler,either,a,bean,name,or,an,actual,handler,instance,param,method,the,target,method,return,the,created,handler,method;protected,handler,method,create,handler,method,object,handler,method,method,handler,method,handler,method,if,handler,instanceof,string,string,bean,name,string,handler,handler,method,new,handler,method,bean,name,get,application,context,get,autowire,capable,bean,factory,method,else,handler,method,new,handler,method,handler,method,return,handler,method
AbstractHandlerMethodMapping -> protected HandlerMethod createHandlerMethod(Object handler, Method method);1496837955;Create the HandlerMethod instance._@param handler either a bean name or an actual handler instance_@param method the target method_@return the created HandlerMethod;protected HandlerMethod createHandlerMethod(Object handler, Method method) {_		HandlerMethod handlerMethod__		if (handler instanceof String) {_			String beanName = (String) handler__			handlerMethod = new HandlerMethod(beanName,_					obtainApplicationContext().getAutowireCapableBeanFactory(), method)__		}_		else {_			handlerMethod = new HandlerMethod(handler, method)__		}_		return handlerMethod__	};create,the,handler,method,instance,param,handler,either,a,bean,name,or,an,actual,handler,instance,param,method,the,target,method,return,the,created,handler,method;protected,handler,method,create,handler,method,object,handler,method,method,handler,method,handler,method,if,handler,instanceof,string,string,bean,name,string,handler,handler,method,new,handler,method,bean,name,obtain,application,context,get,autowire,capable,bean,factory,method,else,handler,method,new,handler,method,handler,method,return,handler,method
AbstractHandlerMethodMapping -> protected HandlerMethod createHandlerMethod(Object handler, Method method);1497039338;Create the HandlerMethod instance._@param handler either a bean name or an actual handler instance_@param method the target method_@return the created HandlerMethod;protected HandlerMethod createHandlerMethod(Object handler, Method method) {_		HandlerMethod handlerMethod__		if (handler instanceof String) {_			String beanName = (String) handler__			handlerMethod = new HandlerMethod(beanName,_					obtainApplicationContext().getAutowireCapableBeanFactory(), method)__		}_		else {_			handlerMethod = new HandlerMethod(handler, method)__		}_		return handlerMethod__	};create,the,handler,method,instance,param,handler,either,a,bean,name,or,an,actual,handler,instance,param,method,the,target,method,return,the,created,handler,method;protected,handler,method,create,handler,method,object,handler,method,method,handler,method,handler,method,if,handler,instanceof,string,string,bean,name,string,handler,handler,method,new,handler,method,bean,name,obtain,application,context,get,autowire,capable,bean,factory,method,else,handler,method,new,handler,method,handler,method,return,handler,method
AbstractHandlerMethodMapping -> protected HandlerMethod createHandlerMethod(Object handler, Method method);1497232764;Create the HandlerMethod instance._@param handler either a bean name or an actual handler instance_@param method the target method_@return the created HandlerMethod;protected HandlerMethod createHandlerMethod(Object handler, Method method) {_		HandlerMethod handlerMethod__		if (handler instanceof String) {_			String beanName = (String) handler__			handlerMethod = new HandlerMethod(beanName,_					obtainApplicationContext().getAutowireCapableBeanFactory(), method)__		}_		else {_			handlerMethod = new HandlerMethod(handler, method)__		}_		return handlerMethod__	};create,the,handler,method,instance,param,handler,either,a,bean,name,or,an,actual,handler,instance,param,method,the,target,method,return,the,created,handler,method;protected,handler,method,create,handler,method,object,handler,method,method,handler,method,handler,method,if,handler,instanceof,string,string,bean,name,string,handler,handler,method,new,handler,method,bean,name,obtain,application,context,get,autowire,capable,bean,factory,method,else,handler,method,new,handler,method,handler,method,return,handler,method
AbstractHandlerMethodMapping -> protected HandlerMethod createHandlerMethod(Object handler, Method method);1497251962;Create the HandlerMethod instance._@param handler either a bean name or an actual handler instance_@param method the target method_@return the created HandlerMethod;protected HandlerMethod createHandlerMethod(Object handler, Method method) {_		HandlerMethod handlerMethod__		if (handler instanceof String) {_			String beanName = (String) handler__			handlerMethod = new HandlerMethod(beanName,_					obtainApplicationContext().getAutowireCapableBeanFactory(), method)__		}_		else {_			handlerMethod = new HandlerMethod(handler, method)__		}_		return handlerMethod__	};create,the,handler,method,instance,param,handler,either,a,bean,name,or,an,actual,handler,instance,param,method,the,target,method,return,the,created,handler,method;protected,handler,method,create,handler,method,object,handler,method,method,handler,method,handler,method,if,handler,instanceof,string,string,bean,name,string,handler,handler,method,new,handler,method,bean,name,obtain,application,context,get,autowire,capable,bean,factory,method,else,handler,method,new,handler,method,handler,method,return,handler,method
AbstractHandlerMethodMapping -> protected HandlerMethod createHandlerMethod(Object handler, Method method);1497286385;Create the HandlerMethod instance._@param handler either a bean name or an actual handler instance_@param method the target method_@return the created HandlerMethod;protected HandlerMethod createHandlerMethod(Object handler, Method method) {_		HandlerMethod handlerMethod__		if (handler instanceof String) {_			String beanName = (String) handler__			handlerMethod = new HandlerMethod(beanName,_					obtainApplicationContext().getAutowireCapableBeanFactory(), method)__		}_		else {_			handlerMethod = new HandlerMethod(handler, method)__		}_		return handlerMethod__	};create,the,handler,method,instance,param,handler,either,a,bean,name,or,an,actual,handler,instance,param,method,the,target,method,return,the,created,handler,method;protected,handler,method,create,handler,method,object,handler,method,method,handler,method,handler,method,if,handler,instanceof,string,string,bean,name,string,handler,handler,method,new,handler,method,bean,name,obtain,application,context,get,autowire,capable,bean,factory,method,else,handler,method,new,handler,method,handler,method,return,handler,method
AbstractHandlerMethodMapping -> protected HandlerMethod createHandlerMethod(Object handler, Method method);1498756719;Create the HandlerMethod instance._@param handler either a bean name or an actual handler instance_@param method the target method_@return the created HandlerMethod;protected HandlerMethod createHandlerMethod(Object handler, Method method) {_		HandlerMethod handlerMethod__		if (handler instanceof String) {_			String beanName = (String) handler__			handlerMethod = new HandlerMethod(beanName,_					obtainApplicationContext().getAutowireCapableBeanFactory(), method)__		}_		else {_			handlerMethod = new HandlerMethod(handler, method)__		}_		return handlerMethod__	};create,the,handler,method,instance,param,handler,either,a,bean,name,or,an,actual,handler,instance,param,method,the,target,method,return,the,created,handler,method;protected,handler,method,create,handler,method,object,handler,method,method,handler,method,handler,method,if,handler,instanceof,string,string,bean,name,string,handler,handler,method,new,handler,method,bean,name,obtain,application,context,get,autowire,capable,bean,factory,method,else,handler,method,new,handler,method,handler,method,return,handler,method
AbstractHandlerMethodMapping -> protected HandlerMethod createHandlerMethod(Object handler, Method method);1498861175;Create the HandlerMethod instance._@param handler either a bean name or an actual handler instance_@param method the target method_@return the created HandlerMethod;protected HandlerMethod createHandlerMethod(Object handler, Method method) {_		HandlerMethod handlerMethod__		if (handler instanceof String) {_			String beanName = (String) handler__			handlerMethod = new HandlerMethod(beanName,_					obtainApplicationContext().getAutowireCapableBeanFactory(), method)__		}_		else {_			handlerMethod = new HandlerMethod(handler, method)__		}_		return handlerMethod__	};create,the,handler,method,instance,param,handler,either,a,bean,name,or,an,actual,handler,instance,param,method,the,target,method,return,the,created,handler,method;protected,handler,method,create,handler,method,object,handler,method,method,handler,method,handler,method,if,handler,instanceof,string,string,bean,name,string,handler,handler,method,new,handler,method,bean,name,obtain,application,context,get,autowire,capable,bean,factory,method,else,handler,method,new,handler,method,handler,method,return,handler,method
AbstractHandlerMethodMapping -> protected HandlerMethod createHandlerMethod(Object handler, Method method);1498953917;Create the HandlerMethod instance._@param handler either a bean name or an actual handler instance_@param method the target method_@return the created HandlerMethod;protected HandlerMethod createHandlerMethod(Object handler, Method method) {_		HandlerMethod handlerMethod__		if (handler instanceof String) {_			String beanName = (String) handler__			handlerMethod = new HandlerMethod(beanName,_					obtainApplicationContext().getAutowireCapableBeanFactory(), method)__		}_		else {_			handlerMethod = new HandlerMethod(handler, method)__		}_		return handlerMethod__	};create,the,handler,method,instance,param,handler,either,a,bean,name,or,an,actual,handler,instance,param,method,the,target,method,return,the,created,handler,method;protected,handler,method,create,handler,method,object,handler,method,method,handler,method,handler,method,if,handler,instanceof,string,string,bean,name,string,handler,handler,method,new,handler,method,bean,name,obtain,application,context,get,autowire,capable,bean,factory,method,else,handler,method,new,handler,method,handler,method,return,handler,method
AbstractHandlerMethodMapping -> protected HandlerMethod createHandlerMethod(Object handler, Method method);1516617801;Create the HandlerMethod instance._@param handler either a bean name or an actual handler instance_@param method the target method_@return the created HandlerMethod;protected HandlerMethod createHandlerMethod(Object handler, Method method) {_		HandlerMethod handlerMethod__		if (handler instanceof String) {_			String beanName = (String) handler__			handlerMethod = new HandlerMethod(beanName,_					obtainApplicationContext().getAutowireCapableBeanFactory(), method)__		}_		else {_			handlerMethod = new HandlerMethod(handler, method)__		}_		return handlerMethod__	};create,the,handler,method,instance,param,handler,either,a,bean,name,or,an,actual,handler,instance,param,method,the,target,method,return,the,created,handler,method;protected,handler,method,create,handler,method,object,handler,method,method,handler,method,handler,method,if,handler,instanceof,string,string,bean,name,string,handler,handler,method,new,handler,method,bean,name,obtain,application,context,get,autowire,capable,bean,factory,method,else,handler,method,new,handler,method,handler,method,return,handler,method
AbstractHandlerMethodMapping -> protected HandlerMethod createHandlerMethod(Object handler, Method method);1529721864;Create the HandlerMethod instance._@param handler either a bean name or an actual handler instance_@param method the target method_@return the created HandlerMethod;protected HandlerMethod createHandlerMethod(Object handler, Method method) {_		HandlerMethod handlerMethod__		if (handler instanceof String) {_			String beanName = (String) handler__			handlerMethod = new HandlerMethod(beanName,_					obtainApplicationContext().getAutowireCapableBeanFactory(), method)__		}_		else {_			handlerMethod = new HandlerMethod(handler, method)__		}_		return handlerMethod__	};create,the,handler,method,instance,param,handler,either,a,bean,name,or,an,actual,handler,instance,param,method,the,target,method,return,the,created,handler,method;protected,handler,method,create,handler,method,object,handler,method,method,handler,method,handler,method,if,handler,instanceof,string,string,bean,name,string,handler,handler,method,new,handler,method,bean,name,obtain,application,context,get,autowire,capable,bean,factory,method,else,handler,method,new,handler,method,handler,method,return,handler,method
AbstractHandlerMethodMapping -> protected HandlerMethod createHandlerMethod(Object handler, Method method);1530174524;Create the HandlerMethod instance._@param handler either a bean name or an actual handler instance_@param method the target method_@return the created HandlerMethod;protected HandlerMethod createHandlerMethod(Object handler, Method method) {_		HandlerMethod handlerMethod__		if (handler instanceof String) {_			String beanName = (String) handler__			handlerMethod = new HandlerMethod(beanName,_					obtainApplicationContext().getAutowireCapableBeanFactory(), method)__		}_		else {_			handlerMethod = new HandlerMethod(handler, method)__		}_		return handlerMethod__	};create,the,handler,method,instance,param,handler,either,a,bean,name,or,an,actual,handler,instance,param,method,the,target,method,return,the,created,handler,method;protected,handler,method,create,handler,method,object,handler,method,method,handler,method,handler,method,if,handler,instanceof,string,string,bean,name,string,handler,handler,method,new,handler,method,bean,name,obtain,application,context,get,autowire,capable,bean,factory,method,else,handler,method,new,handler,method,handler,method,return,handler,method
AbstractHandlerMethodMapping -> protected HandlerMethod createHandlerMethod(Object handler, Method method);1530793633;Create the HandlerMethod instance._@param handler either a bean name or an actual handler instance_@param method the target method_@return the created HandlerMethod;protected HandlerMethod createHandlerMethod(Object handler, Method method) {_		HandlerMethod handlerMethod__		if (handler instanceof String) {_			String beanName = (String) handler__			handlerMethod = new HandlerMethod(beanName,_					obtainApplicationContext().getAutowireCapableBeanFactory(), method)__		}_		else {_			handlerMethod = new HandlerMethod(handler, method)__		}_		return handlerMethod__	};create,the,handler,method,instance,param,handler,either,a,bean,name,or,an,actual,handler,instance,param,method,the,target,method,return,the,created,handler,method;protected,handler,method,create,handler,method,object,handler,method,method,handler,method,handler,method,if,handler,instanceof,string,string,bean,name,string,handler,handler,method,new,handler,method,bean,name,obtain,application,context,get,autowire,capable,bean,factory,method,else,handler,method,new,handler,method,handler,method,return,handler,method
AbstractHandlerMethodMapping -> protected HandlerMethod createHandlerMethod(Object handler, Method method);1542407418;Create the HandlerMethod instance._@param handler either a bean name or an actual handler instance_@param method the target method_@return the created HandlerMethod;protected HandlerMethod createHandlerMethod(Object handler, Method method) {_		HandlerMethod handlerMethod__		if (handler instanceof String) {_			String beanName = (String) handler__			handlerMethod = new HandlerMethod(beanName,_					obtainApplicationContext().getAutowireCapableBeanFactory(), method)__		}_		else {_			handlerMethod = new HandlerMethod(handler, method)__		}_		return handlerMethod__	};create,the,handler,method,instance,param,handler,either,a,bean,name,or,an,actual,handler,instance,param,method,the,target,method,return,the,created,handler,method;protected,handler,method,create,handler,method,object,handler,method,method,handler,method,handler,method,if,handler,instanceof,string,string,bean,name,string,handler,handler,method,new,handler,method,bean,name,obtain,application,context,get,autowire,capable,bean,factory,method,else,handler,method,new,handler,method,handler,method,return,handler,method
AbstractHandlerMethodMapping -> protected HandlerMethod createHandlerMethod(Object handler, Method method);1548427561;Create the HandlerMethod instance._@param handler either a bean name or an actual handler instance_@param method the target method_@return the created HandlerMethod;protected HandlerMethod createHandlerMethod(Object handler, Method method) {_		HandlerMethod handlerMethod__		if (handler instanceof String) {_			String beanName = (String) handler__			handlerMethod = new HandlerMethod(beanName,_					obtainApplicationContext().getAutowireCapableBeanFactory(), method)__		}_		else {_			handlerMethod = new HandlerMethod(handler, method)__		}_		return handlerMethod__	};create,the,handler,method,instance,param,handler,either,a,bean,name,or,an,actual,handler,instance,param,method,the,target,method,return,the,created,handler,method;protected,handler,method,create,handler,method,object,handler,method,method,handler,method,handler,method,if,handler,instanceof,string,string,bean,name,string,handler,handler,method,new,handler,method,bean,name,obtain,application,context,get,autowire,capable,bean,factory,method,else,handler,method,new,handler,method,handler,method,return,handler,method
AbstractHandlerMethodMapping -> protected HandlerMethod createHandlerMethod(Object handler, Method method);1551093473;Create the HandlerMethod instance._@param handler either a bean name or an actual handler instance_@param method the target method_@return the created HandlerMethod;protected HandlerMethod createHandlerMethod(Object handler, Method method) {_		if (handler instanceof String) {_			return new HandlerMethod((String) handler,_					obtainApplicationContext().getAutowireCapableBeanFactory(), method)__		}_		return new HandlerMethod(handler, method)__	};create,the,handler,method,instance,param,handler,either,a,bean,name,or,an,actual,handler,instance,param,method,the,target,method,return,the,created,handler,method;protected,handler,method,create,handler,method,object,handler,method,method,if,handler,instanceof,string,return,new,handler,method,string,handler,obtain,application,context,get,autowire,capable,bean,factory,method,return,new,handler,method,handler,method
AbstractHandlerMethodMapping -> @Override 	public Mono<HandlerMethod> getHandlerInternal(ServerWebExchange exchange);1485986572;Look up a handler method for the given request._@param exchange the current exchange;@Override_	public Mono<HandlerMethod> getHandlerInternal(ServerWebExchange exchange) {_		String lookupPath = getPathHelper().getLookupPathForRequest(exchange)__		if (logger.isDebugEnabled()) {_			logger.debug("Looking up handler method for path " + lookupPath)__		}_		this.mappingRegistry.acquireReadLock()___		try {_			_			return exchange.getRequestParams()_					.then(() -> {_						HandlerMethod handlerMethod = null__						try {_							handlerMethod = lookupHandlerMethod(lookupPath, exchange)__						}_						catch (Exception ex) {_							return Mono.error(ex)__						}_						if (logger.isDebugEnabled()) {_							if (handlerMethod != null) {_								logger.debug("Returning handler method [" + handlerMethod + "]")__							}_							else {_								logger.debug("Did not find handler method for [" + lookupPath + "]")__							}_						}_						if (handlerMethod != null) {_							handlerMethod = handlerMethod.createWithResolvedBean()__						}_						return Mono.justOrEmpty(handlerMethod)__					})__		}_		finally {_			this.mappingRegistry.releaseReadLock()__		}_	};look,up,a,handler,method,for,the,given,request,param,exchange,the,current,exchange;override,public,mono,handler,method,get,handler,internal,server,web,exchange,exchange,string,lookup,path,get,path,helper,get,lookup,path,for,request,exchange,if,logger,is,debug,enabled,logger,debug,looking,up,handler,method,for,path,lookup,path,this,mapping,registry,acquire,read,lock,try,return,exchange,get,request,params,then,handler,method,handler,method,null,try,handler,method,lookup,handler,method,lookup,path,exchange,catch,exception,ex,return,mono,error,ex,if,logger,is,debug,enabled,if,handler,method,null,logger,debug,returning,handler,method,handler,method,else,logger,debug,did,not,find,handler,method,for,lookup,path,if,handler,method,null,handler,method,handler,method,create,with,resolved,bean,return,mono,just,or,empty,handler,method,finally,this,mapping,registry,release,read,lock
AbstractHandlerMethodMapping -> @Override 	public Mono<HandlerMethod> getHandlerInternal(ServerWebExchange exchange);1486635693;Look up a handler method for the given request._@param exchange the current exchange;@Override_	public Mono<HandlerMethod> getHandlerInternal(ServerWebExchange exchange) {_		String lookupPath = getPathHelper().getLookupPathForRequest(exchange)__		if (logger.isDebugEnabled()) {_			logger.debug("Looking up handler method for path " + lookupPath)__		}__		_		return exchange.getRequestParams()_				.then(() -> {_					HandlerMethod handlerMethod = null__					try {_						handlerMethod = lookupHandlerMethod(lookupPath, exchange)__					}_					catch (Exception ex) {_						return Mono.error(ex)__					}_					if (logger.isDebugEnabled()) {_						if (handlerMethod != null) {_							logger.debug("Returning handler method [" + handlerMethod + "]")__						}_						else {_							logger.debug("Did not find handler method for [" + lookupPath + "]")__						}_					}_					if (handlerMethod != null) {_						handlerMethod = handlerMethod.createWithResolvedBean()__					}_					return Mono.justOrEmpty(handlerMethod)__				})__	};look,up,a,handler,method,for,the,given,request,param,exchange,the,current,exchange;override,public,mono,handler,method,get,handler,internal,server,web,exchange,exchange,string,lookup,path,get,path,helper,get,lookup,path,for,request,exchange,if,logger,is,debug,enabled,logger,debug,looking,up,handler,method,for,path,lookup,path,return,exchange,get,request,params,then,handler,method,handler,method,null,try,handler,method,lookup,handler,method,lookup,path,exchange,catch,exception,ex,return,mono,error,ex,if,logger,is,debug,enabled,if,handler,method,null,logger,debug,returning,handler,method,handler,method,else,logger,debug,did,not,find,handler,method,for,lookup,path,if,handler,method,null,handler,method,handler,method,create,with,resolved,bean,return,mono,just,or,empty,handler,method
AbstractHandlerMethodMapping -> @Override 	public Mono<HandlerMethod> getHandlerInternal(ServerWebExchange exchange);1486674586;Look up a handler method for the given request._@param exchange the current exchange;@Override_	public Mono<HandlerMethod> getHandlerInternal(ServerWebExchange exchange) {_		String lookupPath = getPathHelper().getLookupPathForRequest(exchange)__		if (logger.isDebugEnabled()) {_			logger.debug("Looking up handler method for path " + lookupPath)__		}__		_		return exchange.getRequestParams()_				.then(() -> {_					HandlerMethod handlerMethod = null__					try {_						handlerMethod = lookupHandlerMethod(lookupPath, exchange)__					}_					catch (Exception ex) {_						return Mono.error(ex)__					}_					if (logger.isDebugEnabled()) {_						if (handlerMethod != null) {_							logger.debug("Returning handler method [" + handlerMethod + "]")__						}_						else {_							logger.debug("Did not find handler method for [" + lookupPath + "]")__						}_					}_					if (handlerMethod != null) {_						handlerMethod = handlerMethod.createWithResolvedBean()__					}_					return Mono.justOrEmpty(handlerMethod)__				})__	};look,up,a,handler,method,for,the,given,request,param,exchange,the,current,exchange;override,public,mono,handler,method,get,handler,internal,server,web,exchange,exchange,string,lookup,path,get,path,helper,get,lookup,path,for,request,exchange,if,logger,is,debug,enabled,logger,debug,looking,up,handler,method,for,path,lookup,path,return,exchange,get,request,params,then,handler,method,handler,method,null,try,handler,method,lookup,handler,method,lookup,path,exchange,catch,exception,ex,return,mono,error,ex,if,logger,is,debug,enabled,if,handler,method,null,logger,debug,returning,handler,method,handler,method,else,logger,debug,did,not,find,handler,method,for,lookup,path,if,handler,method,null,handler,method,handler,method,create,with,resolved,bean,return,mono,just,or,empty,handler,method
AbstractHandlerMethodMapping -> @Override 	public Mono<HandlerMethod> getHandlerInternal(ServerWebExchange exchange);1486747801;Look up a handler method for the given request._@param exchange the current exchange;@Override_	public Mono<HandlerMethod> getHandlerInternal(ServerWebExchange exchange) {_		String lookupPath = getPathHelper().getLookupPathForRequest(exchange)__		if (logger.isDebugEnabled()) {_			logger.debug("Looking up handler method for path " + lookupPath)__		}_		this.mappingRegistry.acquireReadLock()___		try {_			_			return exchange.getRequestParams()_					.then(() -> {_						HandlerMethod handlerMethod = null__						try {_							handlerMethod = lookupHandlerMethod(lookupPath, exchange)__						}_						catch (Exception ex) {_							return Mono.error(ex)__						}_						if (logger.isDebugEnabled()) {_							if (handlerMethod != null) {_								logger.debug("Returning handler method [" + handlerMethod + "]")__							}_							else {_								logger.debug("Did not find handler method for [" + lookupPath + "]")__							}_						}_						if (handlerMethod != null) {_							handlerMethod = handlerMethod.createWithResolvedBean()__						}_						return Mono.justOrEmpty(handlerMethod)__					})__		}_		finally {_			this.mappingRegistry.releaseReadLock()__		}_	};look,up,a,handler,method,for,the,given,request,param,exchange,the,current,exchange;override,public,mono,handler,method,get,handler,internal,server,web,exchange,exchange,string,lookup,path,get,path,helper,get,lookup,path,for,request,exchange,if,logger,is,debug,enabled,logger,debug,looking,up,handler,method,for,path,lookup,path,this,mapping,registry,acquire,read,lock,try,return,exchange,get,request,params,then,handler,method,handler,method,null,try,handler,method,lookup,handler,method,lookup,path,exchange,catch,exception,ex,return,mono,error,ex,if,logger,is,debug,enabled,if,handler,method,null,logger,debug,returning,handler,method,handler,method,else,logger,debug,did,not,find,handler,method,for,lookup,path,if,handler,method,null,handler,method,handler,method,create,with,resolved,bean,return,mono,just,or,empty,handler,method,finally,this,mapping,registry,release,read,lock
AbstractHandlerMethodMapping -> @Override 	public Mono<HandlerMethod> getHandlerInternal(ServerWebExchange exchange);1489852683;Look up a handler method for the given request._@param exchange the current exchange;@Override_	public Mono<HandlerMethod> getHandlerInternal(ServerWebExchange exchange) {_		String lookupPath = getPathHelper().getLookupPathForRequest(exchange)__		if (logger.isDebugEnabled()) {_			logger.debug("Looking up handler method for path " + lookupPath)__		}_		this.mappingRegistry.acquireReadLock()___		try {_			_			return exchange.getRequestParams()_					.then(() -> {_						HandlerMethod handlerMethod = null__						try {_							handlerMethod = lookupHandlerMethod(lookupPath, exchange)__						}_						catch (Exception ex) {_							return Mono.error(ex)__						}_						if (logger.isDebugEnabled()) {_							if (handlerMethod != null) {_								logger.debug("Returning handler method [" + handlerMethod + "]")__							}_							else {_								logger.debug("Did not find handler method for [" + lookupPath + "]")__							}_						}_						if (handlerMethod != null) {_							handlerMethod = handlerMethod.createWithResolvedBean()__						}_						return Mono.justOrEmpty(handlerMethod)__					})__		}_		finally {_			this.mappingRegistry.releaseReadLock()__		}_	};look,up,a,handler,method,for,the,given,request,param,exchange,the,current,exchange;override,public,mono,handler,method,get,handler,internal,server,web,exchange,exchange,string,lookup,path,get,path,helper,get,lookup,path,for,request,exchange,if,logger,is,debug,enabled,logger,debug,looking,up,handler,method,for,path,lookup,path,this,mapping,registry,acquire,read,lock,try,return,exchange,get,request,params,then,handler,method,handler,method,null,try,handler,method,lookup,handler,method,lookup,path,exchange,catch,exception,ex,return,mono,error,ex,if,logger,is,debug,enabled,if,handler,method,null,logger,debug,returning,handler,method,handler,method,else,logger,debug,did,not,find,handler,method,for,lookup,path,if,handler,method,null,handler,method,handler,method,create,with,resolved,bean,return,mono,just,or,empty,handler,method,finally,this,mapping,registry,release,read,lock
AbstractHandlerMethodMapping -> @Override 	public Mono<HandlerMethod> getHandlerInternal(ServerWebExchange exchange);1492542679;Look up a handler method for the given request._@param exchange the current exchange;@Override_	public Mono<HandlerMethod> getHandlerInternal(ServerWebExchange exchange) {_		String lookupPath = getPathHelper().getLookupPathForRequest(exchange)__		if (logger.isDebugEnabled()) {_			logger.debug("Looking up handler method for path " + lookupPath)__		}_		this.mappingRegistry.acquireReadLock()___		try {_			_			return exchange.getRequestParams()_					.then(Mono.defer(() -> {_						HandlerMethod handlerMethod = null__						try {_							handlerMethod = lookupHandlerMethod(lookupPath, exchange)__						}_						catch (Exception ex) {_							return Mono.error(ex)__						}_						if (logger.isDebugEnabled()) {_							if (handlerMethod != null) {_								logger.debug("Returning handler method [" + handlerMethod + "]")__							}_							else {_								logger.debug("Did not find handler method for [" + lookupPath + "]")__							}_						}_						if (handlerMethod != null) {_							handlerMethod = handlerMethod.createWithResolvedBean()__						}_						return Mono.justOrEmpty(handlerMethod)__					}))__		}_		finally {_			this.mappingRegistry.releaseReadLock()__		}_	};look,up,a,handler,method,for,the,given,request,param,exchange,the,current,exchange;override,public,mono,handler,method,get,handler,internal,server,web,exchange,exchange,string,lookup,path,get,path,helper,get,lookup,path,for,request,exchange,if,logger,is,debug,enabled,logger,debug,looking,up,handler,method,for,path,lookup,path,this,mapping,registry,acquire,read,lock,try,return,exchange,get,request,params,then,mono,defer,handler,method,handler,method,null,try,handler,method,lookup,handler,method,lookup,path,exchange,catch,exception,ex,return,mono,error,ex,if,logger,is,debug,enabled,if,handler,method,null,logger,debug,returning,handler,method,handler,method,else,logger,debug,did,not,find,handler,method,for,lookup,path,if,handler,method,null,handler,method,handler,method,create,with,resolved,bean,return,mono,just,or,empty,handler,method,finally,this,mapping,registry,release,read,lock
AbstractHandlerMethodMapping -> @Override 	public Mono<HandlerMethod> getHandlerInternal(ServerWebExchange exchange);1493370460;Look up a handler method for the given request._@param exchange the current exchange;@Override_	public Mono<HandlerMethod> getHandlerInternal(ServerWebExchange exchange) {_		String lookupPath = getPathHelper().getLookupPathForRequest(exchange)__		if (logger.isDebugEnabled()) {_			logger.debug("Looking up handler method for path " + lookupPath)__		}_		this.mappingRegistry.acquireReadLock()___		try {_			_			return exchange.getRequestParams()_					.then(Mono.defer(() -> {_						HandlerMethod handlerMethod = null__						try {_							handlerMethod = lookupHandlerMethod(lookupPath, exchange)__						}_						catch (Exception ex) {_							return Mono.error(ex)__						}_						if (logger.isDebugEnabled()) {_							if (handlerMethod != null) {_								logger.debug("Returning handler method [" + handlerMethod + "]")__							}_							else {_								logger.debug("Did not find handler method for [" + lookupPath + "]")__							}_						}_						if (handlerMethod != null) {_							handlerMethod = handlerMethod.createWithResolvedBean()__						}_						return Mono.justOrEmpty(handlerMethod)__					}))__		}_		finally {_			this.mappingRegistry.releaseReadLock()__		}_	};look,up,a,handler,method,for,the,given,request,param,exchange,the,current,exchange;override,public,mono,handler,method,get,handler,internal,server,web,exchange,exchange,string,lookup,path,get,path,helper,get,lookup,path,for,request,exchange,if,logger,is,debug,enabled,logger,debug,looking,up,handler,method,for,path,lookup,path,this,mapping,registry,acquire,read,lock,try,return,exchange,get,request,params,then,mono,defer,handler,method,handler,method,null,try,handler,method,lookup,handler,method,lookup,path,exchange,catch,exception,ex,return,mono,error,ex,if,logger,is,debug,enabled,if,handler,method,null,logger,debug,returning,handler,method,handler,method,else,logger,debug,did,not,find,handler,method,for,lookup,path,if,handler,method,null,handler,method,handler,method,create,with,resolved,bean,return,mono,just,or,empty,handler,method,finally,this,mapping,registry,release,read,lock
AbstractHandlerMethodMapping -> @Override 	public Mono<HandlerMethod> getHandlerInternal(ServerWebExchange exchange);1493391766;Look up a handler method for the given request._@param exchange the current exchange;@Override_	public Mono<HandlerMethod> getHandlerInternal(ServerWebExchange exchange) {_		String lookupPath = getPathHelper().getLookupPathForRequest(exchange)__		if (logger.isDebugEnabled()) {_			logger.debug("Looking up handler method for path " + lookupPath)__		}_		this.mappingRegistry.acquireReadLock()___		try {_			_			return exchange.getRequestParams()_					.then(exchange.getMultipartData())_					.then(Mono.defer(() -> {_						HandlerMethod handlerMethod = null__						try {_							handlerMethod = lookupHandlerMethod(lookupPath, exchange)__						}_						catch (Exception ex) {_							return Mono.error(ex)__						}_						if (logger.isDebugEnabled()) {_							if (handlerMethod != null) {_								logger.debug("Returning handler method [" + handlerMethod + "]")__							}_							else {_								logger.debug("Did not find handler method for [" + lookupPath + "]")__							}_						}_						if (handlerMethod != null) {_							handlerMethod = handlerMethod.createWithResolvedBean()__						}_						return Mono.justOrEmpty(handlerMethod)__					}))__		}_		finally {_			this.mappingRegistry.releaseReadLock()__		}_	};look,up,a,handler,method,for,the,given,request,param,exchange,the,current,exchange;override,public,mono,handler,method,get,handler,internal,server,web,exchange,exchange,string,lookup,path,get,path,helper,get,lookup,path,for,request,exchange,if,logger,is,debug,enabled,logger,debug,looking,up,handler,method,for,path,lookup,path,this,mapping,registry,acquire,read,lock,try,return,exchange,get,request,params,then,exchange,get,multipart,data,then,mono,defer,handler,method,handler,method,null,try,handler,method,lookup,handler,method,lookup,path,exchange,catch,exception,ex,return,mono,error,ex,if,logger,is,debug,enabled,if,handler,method,null,logger,debug,returning,handler,method,handler,method,else,logger,debug,did,not,find,handler,method,for,lookup,path,if,handler,method,null,handler,method,handler,method,create,with,resolved,bean,return,mono,just,or,empty,handler,method,finally,this,mapping,registry,release,read,lock
AbstractHandlerMethodMapping -> @Override 	public Mono<HandlerMethod> getHandlerInternal(ServerWebExchange exchange);1493755795;Look up a handler method for the given request._@param exchange the current exchange;@Override_	public Mono<HandlerMethod> getHandlerInternal(ServerWebExchange exchange) {_		String lookupPath = getPathHelper().getLookupPathForRequest(exchange)__		if (logger.isDebugEnabled()) {_			logger.debug("Looking up handler method for path " + lookupPath)__		}_		this.mappingRegistry.acquireReadLock()__		try {_			HandlerMethod handlerMethod__			try {_				handlerMethod = lookupHandlerMethod(lookupPath, exchange)__			}_			catch (Exception ex) {_				return Mono.error(ex)__			}_			if (logger.isDebugEnabled()) {_				if (handlerMethod != null) {_					logger.debug("Returning handler method [" + handlerMethod + "]")__				}_				else {_					logger.debug("Did not find handler method for [" + lookupPath + "]")__				}_			}_			if (handlerMethod != null) {_				handlerMethod = handlerMethod.createWithResolvedBean()__			}_			return Mono.justOrEmpty(handlerMethod)__		}_		finally {_			this.mappingRegistry.releaseReadLock()__		}_	};look,up,a,handler,method,for,the,given,request,param,exchange,the,current,exchange;override,public,mono,handler,method,get,handler,internal,server,web,exchange,exchange,string,lookup,path,get,path,helper,get,lookup,path,for,request,exchange,if,logger,is,debug,enabled,logger,debug,looking,up,handler,method,for,path,lookup,path,this,mapping,registry,acquire,read,lock,try,handler,method,handler,method,try,handler,method,lookup,handler,method,lookup,path,exchange,catch,exception,ex,return,mono,error,ex,if,logger,is,debug,enabled,if,handler,method,null,logger,debug,returning,handler,method,handler,method,else,logger,debug,did,not,find,handler,method,for,lookup,path,if,handler,method,null,handler,method,handler,method,create,with,resolved,bean,return,mono,just,or,empty,handler,method,finally,this,mapping,registry,release,read,lock
AbstractHandlerMethodMapping -> @Override 	public Mono<HandlerMethod> getHandlerInternal(ServerWebExchange exchange);1495868221;Look up a handler method for the given request._@param exchange the current exchange;@Override_	public Mono<HandlerMethod> getHandlerInternal(ServerWebExchange exchange) {_		String lookupPath = getPathHelper().getLookupPathForRequest(exchange)__		if (logger.isDebugEnabled()) {_			logger.debug("Looking up handler method for path " + lookupPath)__		}_		this.mappingRegistry.acquireReadLock()__		try {_			HandlerMethod handlerMethod__			try {_				handlerMethod = lookupHandlerMethod(lookupPath, exchange)__			}_			catch (Exception ex) {_				return Mono.error(ex)__			}_			if (logger.isDebugEnabled()) {_				if (handlerMethod != null) {_					logger.debug("Returning handler method [" + handlerMethod + "]")__				}_				else {_					logger.debug("Did not find handler method for [" + lookupPath + "]")__				}_			}_			if (handlerMethod != null) {_				handlerMethod = handlerMethod.createWithResolvedBean()__			}_			return Mono.justOrEmpty(handlerMethod)__		}_		finally {_			this.mappingRegistry.releaseReadLock()__		}_	};look,up,a,handler,method,for,the,given,request,param,exchange,the,current,exchange;override,public,mono,handler,method,get,handler,internal,server,web,exchange,exchange,string,lookup,path,get,path,helper,get,lookup,path,for,request,exchange,if,logger,is,debug,enabled,logger,debug,looking,up,handler,method,for,path,lookup,path,this,mapping,registry,acquire,read,lock,try,handler,method,handler,method,try,handler,method,lookup,handler,method,lookup,path,exchange,catch,exception,ex,return,mono,error,ex,if,logger,is,debug,enabled,if,handler,method,null,logger,debug,returning,handler,method,handler,method,else,logger,debug,did,not,find,handler,method,for,lookup,path,if,handler,method,null,handler,method,handler,method,create,with,resolved,bean,return,mono,just,or,empty,handler,method,finally,this,mapping,registry,release,read,lock
AbstractHandlerMethodMapping -> @Override 	public Mono<HandlerMethod> getHandlerInternal(ServerWebExchange exchange);1496334664;Look up a handler method for the given request._@param exchange the current exchange;@Override_	public Mono<HandlerMethod> getHandlerInternal(ServerWebExchange exchange) {_		LookupPath lookupPath = getLookupPath(exchange)__		if (logger.isDebugEnabled()) {_			logger.debug("Looking up handler method for path " + lookupPath)__		}_		this.mappingRegistry.acquireReadLock()__		try {_			HandlerMethod handlerMethod__			try {_				handlerMethod = lookupHandlerMethod(lookupPath, exchange)__			}_			catch (Exception ex) {_				return Mono.error(ex)__			}_			if (logger.isDebugEnabled()) {_				if (handlerMethod != null) {_					logger.debug("Returning handler method [" + handlerMethod + "]")__				}_				else {_					logger.debug("Did not find handler method for [" + lookupPath + "]")__				}_			}_			if (handlerMethod != null) {_				handlerMethod = handlerMethod.createWithResolvedBean()__			}_			return Mono.justOrEmpty(handlerMethod)__		}_		finally {_			this.mappingRegistry.releaseReadLock()__		}_	};look,up,a,handler,method,for,the,given,request,param,exchange,the,current,exchange;override,public,mono,handler,method,get,handler,internal,server,web,exchange,exchange,lookup,path,lookup,path,get,lookup,path,exchange,if,logger,is,debug,enabled,logger,debug,looking,up,handler,method,for,path,lookup,path,this,mapping,registry,acquire,read,lock,try,handler,method,handler,method,try,handler,method,lookup,handler,method,lookup,path,exchange,catch,exception,ex,return,mono,error,ex,if,logger,is,debug,enabled,if,handler,method,null,logger,debug,returning,handler,method,handler,method,else,logger,debug,did,not,find,handler,method,for,lookup,path,if,handler,method,null,handler,method,handler,method,create,with,resolved,bean,return,mono,just,or,empty,handler,method,finally,this,mapping,registry,release,read,lock
AbstractHandlerMethodMapping -> @Override 	public Mono<HandlerMethod> getHandlerInternal(ServerWebExchange exchange);1496430942;Look up a handler method for the given request._@param exchange the current exchange;@Override_	public Mono<HandlerMethod> getHandlerInternal(ServerWebExchange exchange) {_		LookupPath lookupPath = LookupPath.getOrCreate(exchange, getPathHelper())__		if (logger.isDebugEnabled()) {_			logger.debug("Looking up handler method for path " + lookupPath)__		}_		this.mappingRegistry.acquireReadLock()__		try {_			HandlerMethod handlerMethod__			try {_				handlerMethod = lookupHandlerMethod(lookupPath, exchange)__			}_			catch (Exception ex) {_				return Mono.error(ex)__			}_			if (logger.isDebugEnabled()) {_				if (handlerMethod != null) {_					logger.debug("Returning handler method [" + handlerMethod + "]")__				}_				else {_					logger.debug("Did not find handler method for [" + lookupPath + "]")__				}_			}_			if (handlerMethod != null) {_				handlerMethod = handlerMethod.createWithResolvedBean()__			}_			return Mono.justOrEmpty(handlerMethod)__		}_		finally {_			this.mappingRegistry.releaseReadLock()__		}_	};look,up,a,handler,method,for,the,given,request,param,exchange,the,current,exchange;override,public,mono,handler,method,get,handler,internal,server,web,exchange,exchange,lookup,path,lookup,path,lookup,path,get,or,create,exchange,get,path,helper,if,logger,is,debug,enabled,logger,debug,looking,up,handler,method,for,path,lookup,path,this,mapping,registry,acquire,read,lock,try,handler,method,handler,method,try,handler,method,lookup,handler,method,lookup,path,exchange,catch,exception,ex,return,mono,error,ex,if,logger,is,debug,enabled,if,handler,method,null,logger,debug,returning,handler,method,handler,method,else,logger,debug,did,not,find,handler,method,for,lookup,path,if,handler,method,null,handler,method,handler,method,create,with,resolved,bean,return,mono,just,or,empty,handler,method,finally,this,mapping,registry,release,read,lock
AbstractHandlerMethodMapping -> @Override 	public Mono<HandlerMethod> getHandlerInternal(ServerWebExchange exchange);1496837955;Look up a handler method for the given request._@param exchange the current exchange;@Override_	public Mono<HandlerMethod> getHandlerInternal(ServerWebExchange exchange) {_		LookupPath lookupPath = LookupPath.getOrCreate(exchange, getPathHelper())__		if (logger.isDebugEnabled()) {_			logger.debug("Looking up handler method for path " + lookupPath)__		}_		this.mappingRegistry.acquireReadLock()__		try {_			HandlerMethod handlerMethod__			try {_				handlerMethod = lookupHandlerMethod(lookupPath, exchange)__			}_			catch (Exception ex) {_				return Mono.error(ex)__			}_			if (logger.isDebugEnabled()) {_				if (handlerMethod != null) {_					logger.debug("Returning handler method [" + handlerMethod + "]")__				}_				else {_					logger.debug("Did not find handler method for [" + lookupPath + "]")__				}_			}_			if (handlerMethod != null) {_				handlerMethod = handlerMethod.createWithResolvedBean()__			}_			return Mono.justOrEmpty(handlerMethod)__		}_		finally {_			this.mappingRegistry.releaseReadLock()__		}_	};look,up,a,handler,method,for,the,given,request,param,exchange,the,current,exchange;override,public,mono,handler,method,get,handler,internal,server,web,exchange,exchange,lookup,path,lookup,path,lookup,path,get,or,create,exchange,get,path,helper,if,logger,is,debug,enabled,logger,debug,looking,up,handler,method,for,path,lookup,path,this,mapping,registry,acquire,read,lock,try,handler,method,handler,method,try,handler,method,lookup,handler,method,lookup,path,exchange,catch,exception,ex,return,mono,error,ex,if,logger,is,debug,enabled,if,handler,method,null,logger,debug,returning,handler,method,handler,method,else,logger,debug,did,not,find,handler,method,for,lookup,path,if,handler,method,null,handler,method,handler,method,create,with,resolved,bean,return,mono,just,or,empty,handler,method,finally,this,mapping,registry,release,read,lock
AbstractHandlerMethodMapping -> @Override 	public Mono<HandlerMethod> getHandlerInternal(ServerWebExchange exchange);1497039338;Look up a handler method for the given request._@param exchange the current exchange;@Override_	public Mono<HandlerMethod> getHandlerInternal(ServerWebExchange exchange) {_		String lookupPath = exchange.getRequest().getPathWithinApplication()__		if (logger.isDebugEnabled()) {_			logger.debug("Looking up handler method for path " + lookupPath)__		}_		this.mappingRegistry.acquireReadLock()__		try {_			HandlerMethod handlerMethod__			try {_				handlerMethod = lookupHandlerMethod(lookupPath, exchange)__			}_			catch (Exception ex) {_				return Mono.error(ex)__			}_			if (logger.isDebugEnabled()) {_				if (handlerMethod != null) {_					logger.debug("Returning handler method [" + handlerMethod + "]")__				}_				else {_					logger.debug("Did not find handler method for [" + lookupPath + "]")__				}_			}_			if (handlerMethod != null) {_				handlerMethod = handlerMethod.createWithResolvedBean()__			}_			return Mono.justOrEmpty(handlerMethod)__		}_		finally {_			this.mappingRegistry.releaseReadLock()__		}_	};look,up,a,handler,method,for,the,given,request,param,exchange,the,current,exchange;override,public,mono,handler,method,get,handler,internal,server,web,exchange,exchange,string,lookup,path,exchange,get,request,get,path,within,application,if,logger,is,debug,enabled,logger,debug,looking,up,handler,method,for,path,lookup,path,this,mapping,registry,acquire,read,lock,try,handler,method,handler,method,try,handler,method,lookup,handler,method,lookup,path,exchange,catch,exception,ex,return,mono,error,ex,if,logger,is,debug,enabled,if,handler,method,null,logger,debug,returning,handler,method,handler,method,else,logger,debug,did,not,find,handler,method,for,lookup,path,if,handler,method,null,handler,method,handler,method,create,with,resolved,bean,return,mono,just,or,empty,handler,method,finally,this,mapping,registry,release,read,lock
AbstractHandlerMethodMapping -> @Override 	public Mono<HandlerMethod> getHandlerInternal(ServerWebExchange exchange);1497232764;Look up a handler method for the given request._@param exchange the current exchange;@Override_	public Mono<HandlerMethod> getHandlerInternal(ServerWebExchange exchange) {_		String lookupPath = exchange.getRequest().getPath().pathWithinApplication().value()__		if (logger.isDebugEnabled()) {_			logger.debug("Looking up handler method for path " + lookupPath)__		}_		this.mappingRegistry.acquireReadLock()__		try {_			HandlerMethod handlerMethod__			try {_				handlerMethod = lookupHandlerMethod(lookupPath, exchange)__			}_			catch (Exception ex) {_				return Mono.error(ex)__			}_			if (logger.isDebugEnabled()) {_				if (handlerMethod != null) {_					logger.debug("Returning handler method [" + handlerMethod + "]")__				}_				else {_					logger.debug("Did not find handler method for [" + lookupPath + "]")__				}_			}_			if (handlerMethod != null) {_				handlerMethod = handlerMethod.createWithResolvedBean()__			}_			return Mono.justOrEmpty(handlerMethod)__		}_		finally {_			this.mappingRegistry.releaseReadLock()__		}_	};look,up,a,handler,method,for,the,given,request,param,exchange,the,current,exchange;override,public,mono,handler,method,get,handler,internal,server,web,exchange,exchange,string,lookup,path,exchange,get,request,get,path,path,within,application,value,if,logger,is,debug,enabled,logger,debug,looking,up,handler,method,for,path,lookup,path,this,mapping,registry,acquire,read,lock,try,handler,method,handler,method,try,handler,method,lookup,handler,method,lookup,path,exchange,catch,exception,ex,return,mono,error,ex,if,logger,is,debug,enabled,if,handler,method,null,logger,debug,returning,handler,method,handler,method,else,logger,debug,did,not,find,handler,method,for,lookup,path,if,handler,method,null,handler,method,handler,method,create,with,resolved,bean,return,mono,just,or,empty,handler,method,finally,this,mapping,registry,release,read,lock
AbstractHandlerMethodMapping -> @Override 	public Mono<HandlerMethod> getHandlerInternal(ServerWebExchange exchange);1497251962;Look up a handler method for the given request._@param exchange the current exchange;@Override_	public Mono<HandlerMethod> getHandlerInternal(ServerWebExchange exchange) {_		String lookupPath = exchange.getRequest().getPath().pathWithinApplication().value()__		if (logger.isDebugEnabled()) {_			logger.debug("Looking up handler method for path " + lookupPath)__		}_		this.mappingRegistry.acquireReadLock()__		try {_			HandlerMethod handlerMethod__			try {_				handlerMethod = lookupHandlerMethod(lookupPath, exchange)__			}_			catch (Exception ex) {_				return Mono.error(ex)__			}_			if (logger.isDebugEnabled()) {_				if (handlerMethod != null) {_					logger.debug("Returning handler method [" + handlerMethod + "]")__				}_				else {_					logger.debug("Did not find handler method for [" + lookupPath + "]")__				}_			}_			if (handlerMethod != null) {_				handlerMethod = handlerMethod.createWithResolvedBean()__			}_			return Mono.justOrEmpty(handlerMethod)__		}_		finally {_			this.mappingRegistry.releaseReadLock()__		}_	};look,up,a,handler,method,for,the,given,request,param,exchange,the,current,exchange;override,public,mono,handler,method,get,handler,internal,server,web,exchange,exchange,string,lookup,path,exchange,get,request,get,path,path,within,application,value,if,logger,is,debug,enabled,logger,debug,looking,up,handler,method,for,path,lookup,path,this,mapping,registry,acquire,read,lock,try,handler,method,handler,method,try,handler,method,lookup,handler,method,lookup,path,exchange,catch,exception,ex,return,mono,error,ex,if,logger,is,debug,enabled,if,handler,method,null,logger,debug,returning,handler,method,handler,method,else,logger,debug,did,not,find,handler,method,for,lookup,path,if,handler,method,null,handler,method,handler,method,create,with,resolved,bean,return,mono,just,or,empty,handler,method,finally,this,mapping,registry,release,read,lock
AbstractHandlerMethodMapping -> @Override 	public Mono<HandlerMethod> getHandlerInternal(ServerWebExchange exchange);1497286385;Look up a handler method for the given request._@param exchange the current exchange;@Override_	public Mono<HandlerMethod> getHandlerInternal(ServerWebExchange exchange) {_		String lookupPath = exchange.getRequest().getPath().pathWithinApplication().value()__		if (logger.isDebugEnabled()) {_			logger.debug("Looking up handler method for path " + lookupPath)__		}_		this.mappingRegistry.acquireReadLock()__		try {_			HandlerMethod handlerMethod__			try {_				handlerMethod = lookupHandlerMethod(lookupPath, exchange)__			}_			catch (Exception ex) {_				return Mono.error(ex)__			}_			if (logger.isDebugEnabled()) {_				if (handlerMethod != null) {_					logger.debug("Returning handler method [" + handlerMethod + "]")__				}_				else {_					logger.debug("Did not find handler method for [" + lookupPath + "]")__				}_			}_			if (handlerMethod != null) {_				handlerMethod = handlerMethod.createWithResolvedBean()__			}_			return Mono.justOrEmpty(handlerMethod)__		}_		finally {_			this.mappingRegistry.releaseReadLock()__		}_	};look,up,a,handler,method,for,the,given,request,param,exchange,the,current,exchange;override,public,mono,handler,method,get,handler,internal,server,web,exchange,exchange,string,lookup,path,exchange,get,request,get,path,path,within,application,value,if,logger,is,debug,enabled,logger,debug,looking,up,handler,method,for,path,lookup,path,this,mapping,registry,acquire,read,lock,try,handler,method,handler,method,try,handler,method,lookup,handler,method,lookup,path,exchange,catch,exception,ex,return,mono,error,ex,if,logger,is,debug,enabled,if,handler,method,null,logger,debug,returning,handler,method,handler,method,else,logger,debug,did,not,find,handler,method,for,lookup,path,if,handler,method,null,handler,method,handler,method,create,with,resolved,bean,return,mono,just,or,empty,handler,method,finally,this,mapping,registry,release,read,lock
AbstractHandlerMethodMapping -> @Override 	public Mono<HandlerMethod> getHandlerInternal(ServerWebExchange exchange);1498756719;Look up a handler method for the given request._@param exchange the current exchange;@Override_	public Mono<HandlerMethod> getHandlerInternal(ServerWebExchange exchange) {_		String lookupPath = exchange.getRequest().getPath().pathWithinApplication().value()__		if (logger.isDebugEnabled()) {_			logger.debug("Looking up handler method for path " + lookupPath)__		}_		this.mappingRegistry.acquireReadLock()__		try {_			HandlerMethod handlerMethod__			try {_				handlerMethod = lookupHandlerMethod(lookupPath, exchange)__			}_			catch (Exception ex) {_				return Mono.error(ex)__			}_			if (logger.isDebugEnabled()) {_				if (handlerMethod != null) {_					logger.debug("Returning handler method [" + handlerMethod + "]")__				}_				else {_					logger.debug("Did not find handler method for [" + lookupPath + "]")__				}_			}_			if (handlerMethod != null) {_				handlerMethod = handlerMethod.createWithResolvedBean()__			}_			return Mono.justOrEmpty(handlerMethod)__		}_		finally {_			this.mappingRegistry.releaseReadLock()__		}_	};look,up,a,handler,method,for,the,given,request,param,exchange,the,current,exchange;override,public,mono,handler,method,get,handler,internal,server,web,exchange,exchange,string,lookup,path,exchange,get,request,get,path,path,within,application,value,if,logger,is,debug,enabled,logger,debug,looking,up,handler,method,for,path,lookup,path,this,mapping,registry,acquire,read,lock,try,handler,method,handler,method,try,handler,method,lookup,handler,method,lookup,path,exchange,catch,exception,ex,return,mono,error,ex,if,logger,is,debug,enabled,if,handler,method,null,logger,debug,returning,handler,method,handler,method,else,logger,debug,did,not,find,handler,method,for,lookup,path,if,handler,method,null,handler,method,handler,method,create,with,resolved,bean,return,mono,just,or,empty,handler,method,finally,this,mapping,registry,release,read,lock
AbstractHandlerMethodMapping -> @Override 	public Mono<HandlerMethod> getHandlerInternal(ServerWebExchange exchange);1498861175;Look up a handler method for the given request._@param exchange the current exchange;@Override_	public Mono<HandlerMethod> getHandlerInternal(ServerWebExchange exchange) {_		String lookupPath = exchange.getRequest().getPath().pathWithinApplication().value()__		if (logger.isDebugEnabled()) {_			logger.debug("Looking up handler method for path " + lookupPath)__		}_		this.mappingRegistry.acquireReadLock()__		try {_			HandlerMethod handlerMethod__			try {_				handlerMethod = lookupHandlerMethod(lookupPath, exchange)__			}_			catch (Exception ex) {_				return Mono.error(ex)__			}_			if (logger.isDebugEnabled()) {_				if (handlerMethod != null) {_					logger.debug("Returning handler method [" + handlerMethod + "]")__				}_				else {_					logger.debug("Did not find handler method for [" + lookupPath + "]")__				}_			}_			if (handlerMethod != null) {_				handlerMethod = handlerMethod.createWithResolvedBean()__			}_			return Mono.justOrEmpty(handlerMethod)__		}_		finally {_			this.mappingRegistry.releaseReadLock()__		}_	};look,up,a,handler,method,for,the,given,request,param,exchange,the,current,exchange;override,public,mono,handler,method,get,handler,internal,server,web,exchange,exchange,string,lookup,path,exchange,get,request,get,path,path,within,application,value,if,logger,is,debug,enabled,logger,debug,looking,up,handler,method,for,path,lookup,path,this,mapping,registry,acquire,read,lock,try,handler,method,handler,method,try,handler,method,lookup,handler,method,lookup,path,exchange,catch,exception,ex,return,mono,error,ex,if,logger,is,debug,enabled,if,handler,method,null,logger,debug,returning,handler,method,handler,method,else,logger,debug,did,not,find,handler,method,for,lookup,path,if,handler,method,null,handler,method,handler,method,create,with,resolved,bean,return,mono,just,or,empty,handler,method,finally,this,mapping,registry,release,read,lock
AbstractHandlerMethodMapping -> @Override 	public Mono<HandlerMethod> getHandlerInternal(ServerWebExchange exchange);1498953917;Look up a handler method for the given request._@param exchange the current exchange;@Override_	public Mono<HandlerMethod> getHandlerInternal(ServerWebExchange exchange) {_		if (logger.isDebugEnabled()) {_			logger.debug("Looking up handler method for path " +_					exchange.getRequest().getPath().value())__		}_		this.mappingRegistry.acquireReadLock()__		try {_			HandlerMethod handlerMethod__			try {_				handlerMethod = lookupHandlerMethod(exchange)__			}_			catch (Exception ex) {_				return Mono.error(ex)__			}_			if (logger.isDebugEnabled()) {_				if (handlerMethod != null) {_					logger.debug("Returning handler method [" + handlerMethod + "]")__				}_				else {_					logger.debug("Did not find handler method for " +_							"[" + exchange.getRequest().getPath().value() + "]")__				}_			}_			if (handlerMethod != null) {_				handlerMethod = handlerMethod.createWithResolvedBean()__			}_			return Mono.justOrEmpty(handlerMethod)__		}_		finally {_			this.mappingRegistry.releaseReadLock()__		}_	};look,up,a,handler,method,for,the,given,request,param,exchange,the,current,exchange;override,public,mono,handler,method,get,handler,internal,server,web,exchange,exchange,if,logger,is,debug,enabled,logger,debug,looking,up,handler,method,for,path,exchange,get,request,get,path,value,this,mapping,registry,acquire,read,lock,try,handler,method,handler,method,try,handler,method,lookup,handler,method,exchange,catch,exception,ex,return,mono,error,ex,if,logger,is,debug,enabled,if,handler,method,null,logger,debug,returning,handler,method,handler,method,else,logger,debug,did,not,find,handler,method,for,exchange,get,request,get,path,value,if,handler,method,null,handler,method,handler,method,create,with,resolved,bean,return,mono,just,or,empty,handler,method,finally,this,mapping,registry,release,read,lock
AbstractHandlerMethodMapping -> @Override 	public Mono<HandlerMethod> getHandlerInternal(ServerWebExchange exchange);1516617801;Look up a handler method for the given request._@param exchange the current exchange;@Override_	public Mono<HandlerMethod> getHandlerInternal(ServerWebExchange exchange) {_		if (logger.isDebugEnabled()) {_			logger.debug("Looking up handler method for path " +_					exchange.getRequest().getPath().value())__		}_		this.mappingRegistry.acquireReadLock()__		try {_			HandlerMethod handlerMethod__			try {_				handlerMethod = lookupHandlerMethod(exchange)__			}_			catch (Exception ex) {_				return Mono.error(ex)__			}_			if (logger.isDebugEnabled()) {_				if (handlerMethod != null) {_					logger.debug("Returning handler method [" + handlerMethod + "]")__				}_				else {_					logger.debug("Did not find handler method for " +_							"[" + exchange.getRequest().getPath().value() + "]")__				}_			}_			if (handlerMethod != null) {_				handlerMethod = handlerMethod.createWithResolvedBean()__			}_			return Mono.justOrEmpty(handlerMethod)__		}_		finally {_			this.mappingRegistry.releaseReadLock()__		}_	};look,up,a,handler,method,for,the,given,request,param,exchange,the,current,exchange;override,public,mono,handler,method,get,handler,internal,server,web,exchange,exchange,if,logger,is,debug,enabled,logger,debug,looking,up,handler,method,for,path,exchange,get,request,get,path,value,this,mapping,registry,acquire,read,lock,try,handler,method,handler,method,try,handler,method,lookup,handler,method,exchange,catch,exception,ex,return,mono,error,ex,if,logger,is,debug,enabled,if,handler,method,null,logger,debug,returning,handler,method,handler,method,else,logger,debug,did,not,find,handler,method,for,exchange,get,request,get,path,value,if,handler,method,null,handler,method,handler,method,create,with,resolved,bean,return,mono,just,or,empty,handler,method,finally,this,mapping,registry,release,read,lock
AbstractHandlerMethodMapping -> @Override 	public Mono<HandlerMethod> getHandlerInternal(ServerWebExchange exchange);1529721864;Look up a handler method for the given request._@param exchange the current exchange;@Override_	public Mono<HandlerMethod> getHandlerInternal(ServerWebExchange exchange) {_		this.mappingRegistry.acquireReadLock()__		try {_			HandlerMethod handlerMethod__			try {_				handlerMethod = lookupHandlerMethod(exchange)__			}_			catch (Exception ex) {_				return Mono.error(ex)__			}_			if (handlerMethod != null) {_				handlerMethod = handlerMethod.createWithResolvedBean()__			}_			return Mono.justOrEmpty(handlerMethod)__		}_		finally {_			this.mappingRegistry.releaseReadLock()__		}_	};look,up,a,handler,method,for,the,given,request,param,exchange,the,current,exchange;override,public,mono,handler,method,get,handler,internal,server,web,exchange,exchange,this,mapping,registry,acquire,read,lock,try,handler,method,handler,method,try,handler,method,lookup,handler,method,exchange,catch,exception,ex,return,mono,error,ex,if,handler,method,null,handler,method,handler,method,create,with,resolved,bean,return,mono,just,or,empty,handler,method,finally,this,mapping,registry,release,read,lock
AbstractHandlerMethodMapping -> @Override 	public Mono<HandlerMethod> getHandlerInternal(ServerWebExchange exchange);1530174524;Look up a handler method for the given request._@param exchange the current exchange;@Override_	public Mono<HandlerMethod> getHandlerInternal(ServerWebExchange exchange) {_		this.mappingRegistry.acquireReadLock()__		try {_			HandlerMethod handlerMethod__			try {_				handlerMethod = lookupHandlerMethod(exchange)__			}_			catch (Exception ex) {_				return Mono.error(ex)__			}_			if (handlerMethod != null) {_				handlerMethod = handlerMethod.createWithResolvedBean()__			}_			return Mono.justOrEmpty(handlerMethod)__		}_		finally {_			this.mappingRegistry.releaseReadLock()__		}_	};look,up,a,handler,method,for,the,given,request,param,exchange,the,current,exchange;override,public,mono,handler,method,get,handler,internal,server,web,exchange,exchange,this,mapping,registry,acquire,read,lock,try,handler,method,handler,method,try,handler,method,lookup,handler,method,exchange,catch,exception,ex,return,mono,error,ex,if,handler,method,null,handler,method,handler,method,create,with,resolved,bean,return,mono,just,or,empty,handler,method,finally,this,mapping,registry,release,read,lock
AbstractHandlerMethodMapping -> @Override 	public Mono<HandlerMethod> getHandlerInternal(ServerWebExchange exchange);1530793633;Look up a handler method for the given request._@param exchange the current exchange;@Override_	public Mono<HandlerMethod> getHandlerInternal(ServerWebExchange exchange) {_		this.mappingRegistry.acquireReadLock()__		try {_			HandlerMethod handlerMethod__			try {_				handlerMethod = lookupHandlerMethod(exchange)__			}_			catch (Exception ex) {_				return Mono.error(ex)__			}_			if (handlerMethod != null) {_				handlerMethod = handlerMethod.createWithResolvedBean()__			}_			return Mono.justOrEmpty(handlerMethod)__		}_		finally {_			this.mappingRegistry.releaseReadLock()__		}_	};look,up,a,handler,method,for,the,given,request,param,exchange,the,current,exchange;override,public,mono,handler,method,get,handler,internal,server,web,exchange,exchange,this,mapping,registry,acquire,read,lock,try,handler,method,handler,method,try,handler,method,lookup,handler,method,exchange,catch,exception,ex,return,mono,error,ex,if,handler,method,null,handler,method,handler,method,create,with,resolved,bean,return,mono,just,or,empty,handler,method,finally,this,mapping,registry,release,read,lock
AbstractHandlerMethodMapping -> @Override 	public Mono<HandlerMethod> getHandlerInternal(ServerWebExchange exchange);1542407418;Look up a handler method for the given request._@param exchange the current exchange;@Override_	public Mono<HandlerMethod> getHandlerInternal(ServerWebExchange exchange) {_		this.mappingRegistry.acquireReadLock()__		try {_			HandlerMethod handlerMethod__			try {_				handlerMethod = lookupHandlerMethod(exchange)__			}_			catch (Exception ex) {_				return Mono.error(ex)__			}_			if (handlerMethod != null) {_				handlerMethod = handlerMethod.createWithResolvedBean()__			}_			return Mono.justOrEmpty(handlerMethod)__		}_		finally {_			this.mappingRegistry.releaseReadLock()__		}_	};look,up,a,handler,method,for,the,given,request,param,exchange,the,current,exchange;override,public,mono,handler,method,get,handler,internal,server,web,exchange,exchange,this,mapping,registry,acquire,read,lock,try,handler,method,handler,method,try,handler,method,lookup,handler,method,exchange,catch,exception,ex,return,mono,error,ex,if,handler,method,null,handler,method,handler,method,create,with,resolved,bean,return,mono,just,or,empty,handler,method,finally,this,mapping,registry,release,read,lock
AbstractHandlerMethodMapping -> @Override 	public Mono<HandlerMethod> getHandlerInternal(ServerWebExchange exchange);1548427561;Look up a handler method for the given request._@param exchange the current exchange;@Override_	public Mono<HandlerMethod> getHandlerInternal(ServerWebExchange exchange) {_		this.mappingRegistry.acquireReadLock()__		try {_			HandlerMethod handlerMethod__			try {_				handlerMethod = lookupHandlerMethod(exchange)__			}_			catch (Exception ex) {_				return Mono.error(ex)__			}_			if (handlerMethod != null) {_				handlerMethod = handlerMethod.createWithResolvedBean()__			}_			return Mono.justOrEmpty(handlerMethod)__		}_		finally {_			this.mappingRegistry.releaseReadLock()__		}_	};look,up,a,handler,method,for,the,given,request,param,exchange,the,current,exchange;override,public,mono,handler,method,get,handler,internal,server,web,exchange,exchange,this,mapping,registry,acquire,read,lock,try,handler,method,handler,method,try,handler,method,lookup,handler,method,exchange,catch,exception,ex,return,mono,error,ex,if,handler,method,null,handler,method,handler,method,create,with,resolved,bean,return,mono,just,or,empty,handler,method,finally,this,mapping,registry,release,read,lock
AbstractHandlerMethodMapping -> @Override 	public Mono<HandlerMethod> getHandlerInternal(ServerWebExchange exchange);1551093473;Look up a handler method for the given request._@param exchange the current exchange;@Override_	public Mono<HandlerMethod> getHandlerInternal(ServerWebExchange exchange) {_		this.mappingRegistry.acquireReadLock()__		try {_			HandlerMethod handlerMethod__			try {_				handlerMethod = lookupHandlerMethod(exchange)__			}_			catch (Exception ex) {_				return Mono.error(ex)__			}_			if (handlerMethod != null) {_				handlerMethod = handlerMethod.createWithResolvedBean()__			}_			return Mono.justOrEmpty(handlerMethod)__		}_		finally {_			this.mappingRegistry.releaseReadLock()__		}_	};look,up,a,handler,method,for,the,given,request,param,exchange,the,current,exchange;override,public,mono,handler,method,get,handler,internal,server,web,exchange,exchange,this,mapping,registry,acquire,read,lock,try,handler,method,handler,method,try,handler,method,lookup,handler,method,exchange,catch,exception,ex,return,mono,error,ex,if,handler,method,null,handler,method,handler,method,create,with,resolved,bean,return,mono,just,or,empty,handler,method,finally,this,mapping,registry,release,read,lock
AbstractHandlerMethodMapping -> MappingRegistry -> public void releaseReadLock();1485986572;Release the read lock after using getMappings and getMappingsByUrl.;public void releaseReadLock() {_			this.readWriteLock.readLock().unlock()__		};release,the,read,lock,after,using,get,mappings,and,get,mappings,by,url;public,void,release,read,lock,this,read,write,lock,read,lock,unlock
AbstractHandlerMethodMapping -> MappingRegistry -> public void releaseReadLock();1486747801;Release the read lock after using getMappings and getMappingsByUrl.;public void releaseReadLock() {_			this.readWriteLock.readLock().unlock()__		};release,the,read,lock,after,using,get,mappings,and,get,mappings,by,url;public,void,release,read,lock,this,read,write,lock,read,lock,unlock
AbstractHandlerMethodMapping -> MappingRegistry -> public void releaseReadLock();1489852683;Release the read lock after using getMappings and getMappingsByUrl.;public void releaseReadLock() {_			this.readWriteLock.readLock().unlock()__		};release,the,read,lock,after,using,get,mappings,and,get,mappings,by,url;public,void,release,read,lock,this,read,write,lock,read,lock,unlock
AbstractHandlerMethodMapping -> MappingRegistry -> public void releaseReadLock();1492542679;Release the read lock after using getMappings and getMappingsByUrl.;public void releaseReadLock() {_			this.readWriteLock.readLock().unlock()__		};release,the,read,lock,after,using,get,mappings,and,get,mappings,by,url;public,void,release,read,lock,this,read,write,lock,read,lock,unlock
AbstractHandlerMethodMapping -> MappingRegistry -> public void releaseReadLock();1493370460;Release the read lock after using getMappings and getMappingsByUrl.;public void releaseReadLock() {_			this.readWriteLock.readLock().unlock()__		};release,the,read,lock,after,using,get,mappings,and,get,mappings,by,url;public,void,release,read,lock,this,read,write,lock,read,lock,unlock
AbstractHandlerMethodMapping -> MappingRegistry -> public void releaseReadLock();1493391766;Release the read lock after using getMappings and getMappingsByUrl.;public void releaseReadLock() {_			this.readWriteLock.readLock().unlock()__		};release,the,read,lock,after,using,get,mappings,and,get,mappings,by,url;public,void,release,read,lock,this,read,write,lock,read,lock,unlock
AbstractHandlerMethodMapping -> MappingRegistry -> public void releaseReadLock();1493755795;Release the read lock after using getMappings and getMappingsByUrl.;public void releaseReadLock() {_			this.readWriteLock.readLock().unlock()__		};release,the,read,lock,after,using,get,mappings,and,get,mappings,by,url;public,void,release,read,lock,this,read,write,lock,read,lock,unlock
AbstractHandlerMethodMapping -> MappingRegistry -> public void releaseReadLock();1495868221;Release the read lock after using getMappings and getMappingsByUrl.;public void releaseReadLock() {_			this.readWriteLock.readLock().unlock()__		};release,the,read,lock,after,using,get,mappings,and,get,mappings,by,url;public,void,release,read,lock,this,read,write,lock,read,lock,unlock
AbstractHandlerMethodMapping -> MappingRegistry -> public void releaseReadLock();1496334664;Release the read lock after using getMappings and getMappingsByUrl.;public void releaseReadLock() {_			this.readWriteLock.readLock().unlock()__		};release,the,read,lock,after,using,get,mappings,and,get,mappings,by,url;public,void,release,read,lock,this,read,write,lock,read,lock,unlock
AbstractHandlerMethodMapping -> MappingRegistry -> public void releaseReadLock();1496430942;Release the read lock after using getMappings and getMappingsByUrl.;public void releaseReadLock() {_			this.readWriteLock.readLock().unlock()__		};release,the,read,lock,after,using,get,mappings,and,get,mappings,by,url;public,void,release,read,lock,this,read,write,lock,read,lock,unlock
AbstractHandlerMethodMapping -> MappingRegistry -> public void releaseReadLock();1496837955;Release the read lock after using getMappings and getMappingsByUrl.;public void releaseReadLock() {_			this.readWriteLock.readLock().unlock()__		};release,the,read,lock,after,using,get,mappings,and,get,mappings,by,url;public,void,release,read,lock,this,read,write,lock,read,lock,unlock
AbstractHandlerMethodMapping -> MappingRegistry -> public void releaseReadLock();1497039338;Release the read lock after using getMappings and getMappingsByUrl.;public void releaseReadLock() {_			this.readWriteLock.readLock().unlock()__		};release,the,read,lock,after,using,get,mappings,and,get,mappings,by,url;public,void,release,read,lock,this,read,write,lock,read,lock,unlock
AbstractHandlerMethodMapping -> MappingRegistry -> public void releaseReadLock();1497232764;Release the read lock after using getMappings and getMappingsByUrl.;public void releaseReadLock() {_			this.readWriteLock.readLock().unlock()__		};release,the,read,lock,after,using,get,mappings,and,get,mappings,by,url;public,void,release,read,lock,this,read,write,lock,read,lock,unlock
AbstractHandlerMethodMapping -> MappingRegistry -> public void releaseReadLock();1497251962;Release the read lock after using getMappings and getMappingsByUrl.;public void releaseReadLock() {_			this.readWriteLock.readLock().unlock()__		};release,the,read,lock,after,using,get,mappings,and,get,mappings,by,url;public,void,release,read,lock,this,read,write,lock,read,lock,unlock
AbstractHandlerMethodMapping -> MappingRegistry -> public void releaseReadLock();1497286385;Release the read lock after using getMappings and getMappingsByUrl.;public void releaseReadLock() {_			this.readWriteLock.readLock().unlock()__		};release,the,read,lock,after,using,get,mappings,and,get,mappings,by,url;public,void,release,read,lock,this,read,write,lock,read,lock,unlock
AbstractHandlerMethodMapping -> MappingRegistry -> public void releaseReadLock();1498756719;Release the read lock after using getMappings and getMappingsByUrl.;public void releaseReadLock() {_			this.readWriteLock.readLock().unlock()__		};release,the,read,lock,after,using,get,mappings,and,get,mappings,by,url;public,void,release,read,lock,this,read,write,lock,read,lock,unlock
AbstractHandlerMethodMapping -> MappingRegistry -> public void releaseReadLock();1498861175;Release the read lock after using getMappings and getMappingsByUrl.;public void releaseReadLock() {_			this.readWriteLock.readLock().unlock()__		};release,the,read,lock,after,using,get,mappings,and,get,mappings,by,url;public,void,release,read,lock,this,read,write,lock,read,lock,unlock
AbstractHandlerMethodMapping -> MappingRegistry -> public void releaseReadLock();1498953917;Release the read lock after using getMappings and getMappingsByUrl.;public void releaseReadLock() {_			this.readWriteLock.readLock().unlock()__		};release,the,read,lock,after,using,get,mappings,and,get,mappings,by,url;public,void,release,read,lock,this,read,write,lock,read,lock,unlock
AbstractHandlerMethodMapping -> MappingRegistry -> public void releaseReadLock();1516617801;Release the read lock after using getMappings and getMappingsByUrl.;public void releaseReadLock() {_			this.readWriteLock.readLock().unlock()__		};release,the,read,lock,after,using,get,mappings,and,get,mappings,by,url;public,void,release,read,lock,this,read,write,lock,read,lock,unlock
AbstractHandlerMethodMapping -> MappingRegistry -> public void releaseReadLock();1529721864;Release the read lock after using getMappings and getMappingsByUrl.;public void releaseReadLock() {_			this.readWriteLock.readLock().unlock()__		};release,the,read,lock,after,using,get,mappings,and,get,mappings,by,url;public,void,release,read,lock,this,read,write,lock,read,lock,unlock
AbstractHandlerMethodMapping -> MappingRegistry -> public void releaseReadLock();1530174524;Release the read lock after using getMappings and getMappingsByUrl.;public void releaseReadLock() {_			this.readWriteLock.readLock().unlock()__		};release,the,read,lock,after,using,get,mappings,and,get,mappings,by,url;public,void,release,read,lock,this,read,write,lock,read,lock,unlock
AbstractHandlerMethodMapping -> MappingRegistry -> public void releaseReadLock();1530793633;Release the read lock after using getMappings and getMappingsByUrl.;public void releaseReadLock() {_			this.readWriteLock.readLock().unlock()__		};release,the,read,lock,after,using,get,mappings,and,get,mappings,by,url;public,void,release,read,lock,this,read,write,lock,read,lock,unlock
AbstractHandlerMethodMapping -> MappingRegistry -> public void releaseReadLock();1542407418;Release the read lock after using getMappings and getMappingsByUrl.;public void releaseReadLock() {_			this.readWriteLock.readLock().unlock()__		};release,the,read,lock,after,using,get,mappings,and,get,mappings,by,url;public,void,release,read,lock,this,read,write,lock,read,lock,unlock
AbstractHandlerMethodMapping -> MappingRegistry -> public void releaseReadLock();1548427561;Release the read lock after using getMappings and getMappingsByUrl.;public void releaseReadLock() {_			this.readWriteLock.readLock().unlock()__		};release,the,read,lock,after,using,get,mappings,and,get,mappings,by,url;public,void,release,read,lock,this,read,write,lock,read,lock,unlock
AbstractHandlerMethodMapping -> MappingRegistry -> public void releaseReadLock();1551093473;Release the read lock after using getMappings and getMappingsByUrl.;public void releaseReadLock() {_			this.readWriteLock.readLock().unlock()__		};release,the,read,lock,after,using,get,mappings,and,get,mappings,by,url;public,void,release,read,lock,this,read,write,lock,read,lock,unlock
AbstractHandlerMethodMapping -> @Nullable 	protected HandlerMethod lookupHandlerMethod(LookupPath lookupPath, ServerWebExchange exchange) 			throws Exception;1496334664;Look up the best-matching handler method for the current request._If multiple matches are found, the best match is selected._@param lookupPath the lookup path within the current mapping_@param exchange the current exchange_@return the best-matching handler method, or {@code null} if no match_@see #handleMatch(Object, LookupPath,  ServerWebExchange)_@see #handleNoMatch(Set, LookupPath, ServerWebExchange);@Nullable_	protected HandlerMethod lookupHandlerMethod(LookupPath lookupPath, ServerWebExchange exchange)_			throws Exception {__		List<Match> matches = new ArrayList<Match>()__		List<T> directPathMatches = this.mappingRegistry.getMappingsByUrl(lookupPath.getPath())__		if (directPathMatches != null) {_			addMatchingMappings(directPathMatches, matches, exchange)__		}_		if (matches.isEmpty()) {_			_			addMatchingMappings(this.mappingRegistry.getMappings().keySet(), matches, exchange)__		}__		if (!matches.isEmpty()) {_			Comparator<Match> comparator = new MatchComparator(getMappingComparator(exchange))__			Collections.sort(matches, comparator)__			if (logger.isTraceEnabled()) {_				logger.trace("Found " + matches.size() + " matching mapping(s) for [" +_						lookupPath + "] : " + matches)__			}_			Match bestMatch = matches.get(0)__			if (matches.size() > 1) {_				if (CorsUtils.isPreFlightRequest(exchange.getRequest())) {_					return PREFLIGHT_AMBIGUOUS_MATCH__				}_				Match secondBestMatch = matches.get(1)__				if (comparator.compare(bestMatch, secondBestMatch) == 0) {_					Method m1 = bestMatch.handlerMethod.getMethod()__					Method m2 = secondBestMatch.handlerMethod.getMethod()__					throw new IllegalStateException("Ambiguous handler methods mapped for HTTP path '" +_							lookupPath + "': {" + m1 + ", " + m2 + "}")__				}_			}_			handleMatch(bestMatch.mapping, lookupPath, exchange)__			return bestMatch.handlerMethod__		}_		else {_			return handleNoMatch(this.mappingRegistry.getMappings().keySet(), lookupPath, exchange)__		}_	};look,up,the,best,matching,handler,method,for,the,current,request,if,multiple,matches,are,found,the,best,match,is,selected,param,lookup,path,the,lookup,path,within,the,current,mapping,param,exchange,the,current,exchange,return,the,best,matching,handler,method,or,code,null,if,no,match,see,handle,match,object,lookup,path,server,web,exchange,see,handle,no,match,set,lookup,path,server,web,exchange;nullable,protected,handler,method,lookup,handler,method,lookup,path,lookup,path,server,web,exchange,exchange,throws,exception,list,match,matches,new,array,list,match,list,t,direct,path,matches,this,mapping,registry,get,mappings,by,url,lookup,path,get,path,if,direct,path,matches,null,add,matching,mappings,direct,path,matches,matches,exchange,if,matches,is,empty,add,matching,mappings,this,mapping,registry,get,mappings,key,set,matches,exchange,if,matches,is,empty,comparator,match,comparator,new,match,comparator,get,mapping,comparator,exchange,collections,sort,matches,comparator,if,logger,is,trace,enabled,logger,trace,found,matches,size,matching,mapping,s,for,lookup,path,matches,match,best,match,matches,get,0,if,matches,size,1,if,cors,utils,is,pre,flight,request,exchange,get,request,return,match,second,best,match,matches,get,1,if,comparator,compare,best,match,second,best,match,0,method,m1,best,match,handler,method,get,method,method,m2,second,best,match,handler,method,get,method,throw,new,illegal,state,exception,ambiguous,handler,methods,mapped,for,http,path,lookup,path,m1,m2,handle,match,best,match,mapping,lookup,path,exchange,return,best,match,handler,method,else,return,handle,no,match,this,mapping,registry,get,mappings,key,set,lookup,path,exchange
AbstractHandlerMethodMapping -> @Nullable 	protected HandlerMethod lookupHandlerMethod(LookupPath lookupPath, ServerWebExchange exchange) 			throws Exception;1496430942;Look up the best-matching handler method for the current request._If multiple matches are found, the best match is selected._@param lookupPath the lookup path within the current mapping_@param exchange the current exchange_@return the best-matching handler method, or {@code null} if no match_@see #handleMatch(Object, LookupPath,  ServerWebExchange)_@see #handleNoMatch(Set, LookupPath, ServerWebExchange);@Nullable_	protected HandlerMethod lookupHandlerMethod(LookupPath lookupPath, ServerWebExchange exchange)_			throws Exception {__		List<Match> matches = new ArrayList<Match>()__		List<T> directPathMatches = this.mappingRegistry.getMappingsByUrl(lookupPath.getPath())__		if (directPathMatches != null) {_			addMatchingMappings(directPathMatches, matches, exchange)__		}_		if (matches.isEmpty()) {_			_			addMatchingMappings(this.mappingRegistry.getMappings().keySet(), matches, exchange)__		}__		if (!matches.isEmpty()) {_			Comparator<Match> comparator = new MatchComparator(getMappingComparator(exchange))__			Collections.sort(matches, comparator)__			if (logger.isTraceEnabled()) {_				logger.trace("Found " + matches.size() + " matching mapping(s) for [" +_						lookupPath + "] : " + matches)__			}_			Match bestMatch = matches.get(0)__			if (matches.size() > 1) {_				if (CorsUtils.isPreFlightRequest(exchange.getRequest())) {_					return PREFLIGHT_AMBIGUOUS_MATCH__				}_				Match secondBestMatch = matches.get(1)__				if (comparator.compare(bestMatch, secondBestMatch) == 0) {_					Method m1 = bestMatch.handlerMethod.getMethod()__					Method m2 = secondBestMatch.handlerMethod.getMethod()__					throw new IllegalStateException("Ambiguous handler methods mapped for HTTP path '" +_							lookupPath + "': {" + m1 + ", " + m2 + "}")__				}_			}_			handleMatch(bestMatch.mapping, lookupPath, exchange)__			return bestMatch.handlerMethod__		}_		else {_			return handleNoMatch(this.mappingRegistry.getMappings().keySet(), lookupPath, exchange)__		}_	};look,up,the,best,matching,handler,method,for,the,current,request,if,multiple,matches,are,found,the,best,match,is,selected,param,lookup,path,the,lookup,path,within,the,current,mapping,param,exchange,the,current,exchange,return,the,best,matching,handler,method,or,code,null,if,no,match,see,handle,match,object,lookup,path,server,web,exchange,see,handle,no,match,set,lookup,path,server,web,exchange;nullable,protected,handler,method,lookup,handler,method,lookup,path,lookup,path,server,web,exchange,exchange,throws,exception,list,match,matches,new,array,list,match,list,t,direct,path,matches,this,mapping,registry,get,mappings,by,url,lookup,path,get,path,if,direct,path,matches,null,add,matching,mappings,direct,path,matches,matches,exchange,if,matches,is,empty,add,matching,mappings,this,mapping,registry,get,mappings,key,set,matches,exchange,if,matches,is,empty,comparator,match,comparator,new,match,comparator,get,mapping,comparator,exchange,collections,sort,matches,comparator,if,logger,is,trace,enabled,logger,trace,found,matches,size,matching,mapping,s,for,lookup,path,matches,match,best,match,matches,get,0,if,matches,size,1,if,cors,utils,is,pre,flight,request,exchange,get,request,return,match,second,best,match,matches,get,1,if,comparator,compare,best,match,second,best,match,0,method,m1,best,match,handler,method,get,method,method,m2,second,best,match,handler,method,get,method,throw,new,illegal,state,exception,ambiguous,handler,methods,mapped,for,http,path,lookup,path,m1,m2,handle,match,best,match,mapping,lookup,path,exchange,return,best,match,handler,method,else,return,handle,no,match,this,mapping,registry,get,mappings,key,set,lookup,path,exchange
AbstractHandlerMethodMapping -> @Nullable 	protected HandlerMethod lookupHandlerMethod(LookupPath lookupPath, ServerWebExchange exchange) 			throws Exception;1496837955;Look up the best-matching handler method for the current request._If multiple matches are found, the best match is selected._@param lookupPath the lookup path within the current mapping_@param exchange the current exchange_@return the best-matching handler method, or {@code null} if no match_@see #handleMatch(Object, LookupPath,  ServerWebExchange)_@see #handleNoMatch(Set, LookupPath, ServerWebExchange);@Nullable_	protected HandlerMethod lookupHandlerMethod(LookupPath lookupPath, ServerWebExchange exchange)_			throws Exception {__		List<Match> matches = new ArrayList<Match>()__		List<T> directPathMatches = this.mappingRegistry.getMappingsByUrl(lookupPath.getPath())__		if (directPathMatches != null) {_			addMatchingMappings(directPathMatches, matches, exchange)__		}_		if (matches.isEmpty()) {_			_			addMatchingMappings(this.mappingRegistry.getMappings().keySet(), matches, exchange)__		}__		if (!matches.isEmpty()) {_			Comparator<Match> comparator = new MatchComparator(getMappingComparator(exchange))__			Collections.sort(matches, comparator)__			if (logger.isTraceEnabled()) {_				logger.trace("Found " + matches.size() + " matching mapping(s) for [" +_						lookupPath + "] : " + matches)__			}_			Match bestMatch = matches.get(0)__			if (matches.size() > 1) {_				if (CorsUtils.isPreFlightRequest(exchange.getRequest())) {_					return PREFLIGHT_AMBIGUOUS_MATCH__				}_				Match secondBestMatch = matches.get(1)__				if (comparator.compare(bestMatch, secondBestMatch) == 0) {_					Method m1 = bestMatch.handlerMethod.getMethod()__					Method m2 = secondBestMatch.handlerMethod.getMethod()__					throw new IllegalStateException("Ambiguous handler methods mapped for HTTP path '" +_							lookupPath + "': {" + m1 + ", " + m2 + "}")__				}_			}_			handleMatch(bestMatch.mapping, lookupPath, exchange)__			return bestMatch.handlerMethod__		}_		else {_			return handleNoMatch(this.mappingRegistry.getMappings().keySet(), lookupPath, exchange)__		}_	};look,up,the,best,matching,handler,method,for,the,current,request,if,multiple,matches,are,found,the,best,match,is,selected,param,lookup,path,the,lookup,path,within,the,current,mapping,param,exchange,the,current,exchange,return,the,best,matching,handler,method,or,code,null,if,no,match,see,handle,match,object,lookup,path,server,web,exchange,see,handle,no,match,set,lookup,path,server,web,exchange;nullable,protected,handler,method,lookup,handler,method,lookup,path,lookup,path,server,web,exchange,exchange,throws,exception,list,match,matches,new,array,list,match,list,t,direct,path,matches,this,mapping,registry,get,mappings,by,url,lookup,path,get,path,if,direct,path,matches,null,add,matching,mappings,direct,path,matches,matches,exchange,if,matches,is,empty,add,matching,mappings,this,mapping,registry,get,mappings,key,set,matches,exchange,if,matches,is,empty,comparator,match,comparator,new,match,comparator,get,mapping,comparator,exchange,collections,sort,matches,comparator,if,logger,is,trace,enabled,logger,trace,found,matches,size,matching,mapping,s,for,lookup,path,matches,match,best,match,matches,get,0,if,matches,size,1,if,cors,utils,is,pre,flight,request,exchange,get,request,return,match,second,best,match,matches,get,1,if,comparator,compare,best,match,second,best,match,0,method,m1,best,match,handler,method,get,method,method,m2,second,best,match,handler,method,get,method,throw,new,illegal,state,exception,ambiguous,handler,methods,mapped,for,http,path,lookup,path,m1,m2,handle,match,best,match,mapping,lookup,path,exchange,return,best,match,handler,method,else,return,handle,no,match,this,mapping,registry,get,mappings,key,set,lookup,path,exchange
