commented;modifiers;parameterAmount;loc;comment;code
false;protected;2;4;;@Override protected void onFullTextMessage(WebSocketChannel channel, BufferedTextMessage message) {     this.session.handleMessage(Type.TEXT, toMessage(Type.TEXT, message.getData())). }
false;protected;2;5;;@Override protected void onFullBinaryMessage(WebSocketChannel channel, BufferedBinaryMessage message) {     this.session.handleMessage(Type.BINARY, toMessage(Type.BINARY, message.getData().getResource())).     message.getData().free(). }
false;protected;2;5;;@Override protected void onFullPongMessage(WebSocketChannel channel, BufferedBinaryMessage message) {     this.session.handleMessage(Type.PONG, toMessage(Type.PONG, message.getData().getResource())).     message.getData().free(). }
false;protected;2;6;;@Override protected void onFullCloseMessage(WebSocketChannel channel, BufferedBinaryMessage message) {     CloseMessage closeMessage = new CloseMessage(message.getData().getResource()).     this.session.handleClose(new CloseStatus(closeMessage.getCode(), closeMessage.getReason())).     message.getData().free(). }
false;protected;2;4;;@Override protected void onError(WebSocketChannel channel, Throwable error) {     this.session.handleError(error). }
false;private;2;17;;private <T> WebSocketMessage toMessage(Type type, T message) {     if (Type.TEXT.equals(type)) {         byte[] bytes = ((String) message).getBytes(StandardCharsets.UTF_8).         return new WebSocketMessage(Type.TEXT, this.session.bufferFactory().wrap(bytes)).     } else if (Type.BINARY.equals(type)) {         DataBuffer buffer = this.session.bufferFactory().allocateBuffer().write((ByteBuffer[]) message).         return new WebSocketMessage(Type.BINARY, buffer).     } else if (Type.PONG.equals(type)) {         DataBuffer buffer = this.session.bufferFactory().allocateBuffer().write((ByteBuffer[]) message).         return new WebSocketMessage(Type.PONG, buffer).     } else {         throw new IllegalArgumentException("Unexpected message type: " + message).     } }
