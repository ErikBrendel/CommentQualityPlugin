commented;modifiers;parameterAmount;loc;comment;code
true;public;1;5;/**  * Set the supported media types for this view.  * Default is "text/html.charset=UTF-8".  */ ;/**  * Set the supported media types for this view.  * Default is "text/html.charset=UTF-8".  */ public void setSupportedMediaTypes(List<MediaType> supportedMediaTypes) {     Assert.notEmpty(supportedMediaTypes, "MediaType List must not be empty").     this.mediaTypes.clear().     this.mediaTypes.addAll(supportedMediaTypes). }
true;public;0;3;/**  * Return the configured media types supported by this view.  */ ;/**  * Return the configured media types supported by this view.  */ public List<MediaType> getSupportedMediaTypes() {     return this.mediaTypes. }
true;public;1;4;/**  * Set the default charset for this view, used when the  * {@linkplain #setSupportedMediaTypes(List) content type} does not contain one.  * Default is {@linkplain StandardCharsets#UTF_8 UTF 8}.  */ ;/**  * Set the default charset for this view, used when the  * {@linkplain #setSupportedMediaTypes(List) content type} does not contain one.  * Default is {@linkplain StandardCharsets#UTF_8 UTF 8}.  */ public void setDefaultCharset(Charset defaultCharset) {     Assert.notNull(defaultCharset, "Default Charset must not be null").     this.defaultCharset = defaultCharset. }
true;public;0;3;/**  * Return the default charset, used when the  * {@linkplain #setSupportedMediaTypes(List) content type} does not contain one.  */ ;/**  * Return the default charset, used when the  * {@linkplain #setSupportedMediaTypes(List) content type} does not contain one.  */ public Charset getDefaultCharset() {     return this.defaultCharset. }
true;public;1;3;/**  * Specify the order value for this ViewResolver bean.  * <p>The default value is {@code Ordered.LOWEST_PRECEDENCE}, meaning non-ordered.  * @see org.springframework.core.Ordered#getOrder()  */ ;/**  * Specify the order value for this ViewResolver bean.  * <p>The default value is {@code Ordered.LOWEST_PRECEDENCE}, meaning non-ordered.  * @see org.springframework.core.Ordered#getOrder()  */ public void setOrder(int order) {     this.order = order. }
false;public;0;4;;@Override public int getOrder() {     return this.order. }
