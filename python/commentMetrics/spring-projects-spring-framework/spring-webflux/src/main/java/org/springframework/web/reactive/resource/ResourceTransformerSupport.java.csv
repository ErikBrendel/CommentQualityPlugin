# id;timestamp;commentText;codeText;commentWords;codeWords
ResourceTransformerSupport -> protected Mono<String> resolveUrlPath(String resourcePath, ServerWebExchange exchange, 			Resource resource, ResourceTransformerChain transformerChain);1485986572;A transformer can use this method when a resource being transformed_contains links to other resources. Such links need to be replaced with the_public facing link as determined by the resource resolver chain (e.g. the_public URL may have a version inserted)._@param resourcePath the path to a resource that needs to be re-written_@param exchange the current exchange_@param resource the resource being transformed_@param transformerChain the transformer chain_@return the resolved URL or null;protected Mono<String> resolveUrlPath(String resourcePath, ServerWebExchange exchange,_			Resource resource, ResourceTransformerChain transformerChain) {__		if (resourcePath.startsWith("/")) {_			_			ResourceUrlProvider urlProvider = getResourceUrlProvider()__			return (urlProvider != null ? urlProvider.getForRequestUrl(exchange, resourcePath) : Mono.empty())__		}_		else {_			_			return transformerChain.getResolverChain()_					.resolveUrlPath(resourcePath, Collections.singletonList(resource))__		}_	};a,transformer,can,use,this,method,when,a,resource,being,transformed,contains,links,to,other,resources,such,links,need,to,be,replaced,with,the,public,facing,link,as,determined,by,the,resource,resolver,chain,e,g,the,public,url,may,have,a,version,inserted,param,resource,path,the,path,to,a,resource,that,needs,to,be,re,written,param,exchange,the,current,exchange,param,resource,the,resource,being,transformed,param,transformer,chain,the,transformer,chain,return,the,resolved,url,or,null;protected,mono,string,resolve,url,path,string,resource,path,server,web,exchange,exchange,resource,resource,resource,transformer,chain,transformer,chain,if,resource,path,starts,with,resource,url,provider,url,provider,get,resource,url,provider,return,url,provider,null,url,provider,get,for,request,url,exchange,resource,path,mono,empty,else,return,transformer,chain,get,resolver,chain,resolve,url,path,resource,path,collections,singleton,list,resource
ResourceTransformerSupport -> protected Mono<String> resolveUrlPath(String resourcePath, ServerWebExchange exchange, 			Resource resource, ResourceTransformerChain transformerChain);1490368154;A transformer can use this method when a resource being transformed_contains links to other resources. Such links need to be replaced with the_public facing link as determined by the resource resolver chain (e.g. the_public URL may have a version inserted)._@param resourcePath the path to a resource that needs to be re-written_@param exchange the current exchange_@param resource the resource being transformed_@param transformerChain the transformer chain_@return the resolved URL or null;protected Mono<String> resolveUrlPath(String resourcePath, ServerWebExchange exchange,_			Resource resource, ResourceTransformerChain transformerChain) {__		if (resourcePath.startsWith("/")) {_			_			ResourceUrlProvider urlProvider = getResourceUrlProvider()__			return (urlProvider != null ? urlProvider.getForRequestUrl(exchange, resourcePath) : Mono.empty())__		}_		else {_			_			return transformerChain.getResolverChain()_					.resolveUrlPath(resourcePath, Collections.singletonList(resource))__		}_	};a,transformer,can,use,this,method,when,a,resource,being,transformed,contains,links,to,other,resources,such,links,need,to,be,replaced,with,the,public,facing,link,as,determined,by,the,resource,resolver,chain,e,g,the,public,url,may,have,a,version,inserted,param,resource,path,the,path,to,a,resource,that,needs,to,be,re,written,param,exchange,the,current,exchange,param,resource,the,resource,being,transformed,param,transformer,chain,the,transformer,chain,return,the,resolved,url,or,null;protected,mono,string,resolve,url,path,string,resource,path,server,web,exchange,exchange,resource,resource,resource,transformer,chain,transformer,chain,if,resource,path,starts,with,resource,url,provider,url,provider,get,resource,url,provider,return,url,provider,null,url,provider,get,for,request,url,exchange,resource,path,mono,empty,else,return,transformer,chain,get,resolver,chain,resolve,url,path,resource,path,collections,singleton,list,resource
ResourceTransformerSupport -> protected Mono<String> resolveUrlPath(String resourcePath, ServerWebExchange exchange, 			Resource resource, ResourceTransformerChain transformerChain);1495868221;A transformer can use this method when a resource being transformed_contains links to other resources. Such links need to be replaced with the_public facing link as determined by the resource resolver chain (e.g. the_public URL may have a version inserted)._@param resourcePath the path to a resource that needs to be re-written_@param exchange the current exchange_@param resource the resource being transformed_@param transformerChain the transformer chain_@return the resolved URL or an empty {@link Mono};protected Mono<String> resolveUrlPath(String resourcePath, ServerWebExchange exchange,_			Resource resource, ResourceTransformerChain transformerChain) {__		if (resourcePath.startsWith("/")) {_			_			ResourceUrlProvider urlProvider = getResourceUrlProvider()__			return (urlProvider != null ? urlProvider.getForRequestUrl(exchange, resourcePath) : Mono.empty())__		}_		else {_			_			return transformerChain.getResolverChain()_					.resolveUrlPath(resourcePath, Collections.singletonList(resource))__		}_	};a,transformer,can,use,this,method,when,a,resource,being,transformed,contains,links,to,other,resources,such,links,need,to,be,replaced,with,the,public,facing,link,as,determined,by,the,resource,resolver,chain,e,g,the,public,url,may,have,a,version,inserted,param,resource,path,the,path,to,a,resource,that,needs,to,be,re,written,param,exchange,the,current,exchange,param,resource,the,resource,being,transformed,param,transformer,chain,the,transformer,chain,return,the,resolved,url,or,an,empty,link,mono;protected,mono,string,resolve,url,path,string,resource,path,server,web,exchange,exchange,resource,resource,resource,transformer,chain,transformer,chain,if,resource,path,starts,with,resource,url,provider,url,provider,get,resource,url,provider,return,url,provider,null,url,provider,get,for,request,url,exchange,resource,path,mono,empty,else,return,transformer,chain,get,resolver,chain,resolve,url,path,resource,path,collections,singleton,list,resource
ResourceTransformerSupport -> protected Mono<String> resolveUrlPath(String resourcePath, ServerWebExchange exchange, 			Resource resource, ResourceTransformerChain transformerChain);1496837955;A transformer can use this method when a resource being transformed_contains links to other resources. Such links need to be replaced with the_public facing link as determined by the resource resolver chain (e.g. the_public URL may have a version inserted)._@param resourcePath the path to a resource that needs to be re-written_@param exchange the current exchange_@param resource the resource being transformed_@param transformerChain the transformer chain_@return the resolved URL or an empty {@link Mono};protected Mono<String> resolveUrlPath(String resourcePath, ServerWebExchange exchange,_			Resource resource, ResourceTransformerChain transformerChain) {__		if (resourcePath.startsWith("/")) {_			_			ResourceUrlProvider urlProvider = getResourceUrlProvider()__			return (urlProvider != null ? urlProvider.getForRequestUrl(exchange, resourcePath) : Mono.empty())__		}_		else {_			_			return transformerChain.getResolverChain()_					.resolveUrlPath(resourcePath, Collections.singletonList(resource))__		}_	};a,transformer,can,use,this,method,when,a,resource,being,transformed,contains,links,to,other,resources,such,links,need,to,be,replaced,with,the,public,facing,link,as,determined,by,the,resource,resolver,chain,e,g,the,public,url,may,have,a,version,inserted,param,resource,path,the,path,to,a,resource,that,needs,to,be,re,written,param,exchange,the,current,exchange,param,resource,the,resource,being,transformed,param,transformer,chain,the,transformer,chain,return,the,resolved,url,or,an,empty,link,mono;protected,mono,string,resolve,url,path,string,resource,path,server,web,exchange,exchange,resource,resource,resource,transformer,chain,transformer,chain,if,resource,path,starts,with,resource,url,provider,url,provider,get,resource,url,provider,return,url,provider,null,url,provider,get,for,request,url,exchange,resource,path,mono,empty,else,return,transformer,chain,get,resolver,chain,resolve,url,path,resource,path,collections,singleton,list,resource
ResourceTransformerSupport -> protected Mono<String> resolveUrlPath(String resourcePath, ServerWebExchange exchange, 			Resource resource, ResourceTransformerChain transformerChain);1500448076;A transformer can use this method when a resource being transformed_contains links to other resources. Such links need to be replaced with the_public facing link as determined by the resource resolver chain (e.g. the_public URL may have a version inserted)._@param resourcePath the path to a resource that needs to be re-written_@param exchange the current exchange_@param resource the resource being transformed_@param transformerChain the transformer chain_@return the resolved URL or an empty {@link Mono};protected Mono<String> resolveUrlPath(String resourcePath, ServerWebExchange exchange,_			Resource resource, ResourceTransformerChain transformerChain) {__		if (resourcePath.startsWith("/")) {_			_			ResourceUrlProvider urlProvider = getResourceUrlProvider()__			return (urlProvider != null ? urlProvider.getForRequestUrl(exchange, resourcePath) : Mono.empty())__		}_		else {_			_			return transformerChain.getResolverChain()_					.resolveUrlPath(resourcePath, Collections.singletonList(resource))__		}_	};a,transformer,can,use,this,method,when,a,resource,being,transformed,contains,links,to,other,resources,such,links,need,to,be,replaced,with,the,public,facing,link,as,determined,by,the,resource,resolver,chain,e,g,the,public,url,may,have,a,version,inserted,param,resource,path,the,path,to,a,resource,that,needs,to,be,re,written,param,exchange,the,current,exchange,param,resource,the,resource,being,transformed,param,transformer,chain,the,transformer,chain,return,the,resolved,url,or,an,empty,link,mono;protected,mono,string,resolve,url,path,string,resource,path,server,web,exchange,exchange,resource,resource,resource,transformer,chain,transformer,chain,if,resource,path,starts,with,resource,url,provider,url,provider,get,resource,url,provider,return,url,provider,null,url,provider,get,for,request,url,exchange,resource,path,mono,empty,else,return,transformer,chain,get,resolver,chain,resolve,url,path,resource,path,collections,singleton,list,resource
ResourceTransformerSupport -> protected Mono<String> resolveUrlPath(String resourcePath, ServerWebExchange exchange, 			Resource resource, ResourceTransformerChain transformerChain);1500498279;A transformer can use this method when a resource being transformed_contains links to other resources. Such links need to be replaced with the_public facing link as determined by the resource resolver chain (e.g. the_public URL may have a version inserted)._@param resourcePath the path to a resource that needs to be re-written_@param exchange the current exchange_@param resource the resource being transformed_@param transformerChain the transformer chain_@return the resolved URL or an empty {@link Mono};protected Mono<String> resolveUrlPath(String resourcePath, ServerWebExchange exchange,_			Resource resource, ResourceTransformerChain transformerChain) {__		if (resourcePath.startsWith("/")) {_			_			ResourceUrlProvider urlProvider = getResourceUrlProvider()__			return (urlProvider != null ? urlProvider.getForUriString(resourcePath, exchange) : Mono.empty())__		}_		else {_			_			return transformerChain.getResolverChain()_					.resolveUrlPath(resourcePath, Collections.singletonList(resource))__		}_	};a,transformer,can,use,this,method,when,a,resource,being,transformed,contains,links,to,other,resources,such,links,need,to,be,replaced,with,the,public,facing,link,as,determined,by,the,resource,resolver,chain,e,g,the,public,url,may,have,a,version,inserted,param,resource,path,the,path,to,a,resource,that,needs,to,be,re,written,param,exchange,the,current,exchange,param,resource,the,resource,being,transformed,param,transformer,chain,the,transformer,chain,return,the,resolved,url,or,an,empty,link,mono;protected,mono,string,resolve,url,path,string,resource,path,server,web,exchange,exchange,resource,resource,resource,transformer,chain,transformer,chain,if,resource,path,starts,with,resource,url,provider,url,provider,get,resource,url,provider,return,url,provider,null,url,provider,get,for,uri,string,resource,path,exchange,mono,empty,else,return,transformer,chain,get,resolver,chain,resolve,url,path,resource,path,collections,singleton,list,resource
ResourceTransformerSupport -> protected Mono<String> resolveUrlPath(String resourcePath, ServerWebExchange exchange, 			Resource resource, ResourceTransformerChain transformerChain);1540478567;A transformer can use this method when a resource being transformed_contains links to other resources. Such links need to be replaced with the_public facing link as determined by the resource resolver chain (e.g. the_public URL may have a version inserted)._@param resourcePath the path to a resource that needs to be re-written_@param exchange the current exchange_@param resource the resource being transformed_@param transformerChain the transformer chain_@return the resolved URL or an empty {@link Mono};protected Mono<String> resolveUrlPath(String resourcePath, ServerWebExchange exchange,_			Resource resource, ResourceTransformerChain transformerChain) {__		if (resourcePath.startsWith("/")) {_			_			ResourceUrlProvider urlProvider = getResourceUrlProvider()__			return (urlProvider != null ? urlProvider.getForUriString(resourcePath, exchange) : Mono.empty())__		}_		else {_			_			return transformerChain.getResolverChain()_					.resolveUrlPath(resourcePath, Collections.singletonList(resource))__		}_	};a,transformer,can,use,this,method,when,a,resource,being,transformed,contains,links,to,other,resources,such,links,need,to,be,replaced,with,the,public,facing,link,as,determined,by,the,resource,resolver,chain,e,g,the,public,url,may,have,a,version,inserted,param,resource,path,the,path,to,a,resource,that,needs,to,be,re,written,param,exchange,the,current,exchange,param,resource,the,resource,being,transformed,param,transformer,chain,the,transformer,chain,return,the,resolved,url,or,an,empty,link,mono;protected,mono,string,resolve,url,path,string,resource,path,server,web,exchange,exchange,resource,resource,resource,transformer,chain,transformer,chain,if,resource,path,starts,with,resource,url,provider,url,provider,get,resource,url,provider,return,url,provider,null,url,provider,get,for,uri,string,resource,path,exchange,mono,empty,else,return,transformer,chain,get,resolver,chain,resolve,url,path,resource,path,collections,singleton,list,resource
ResourceTransformerSupport -> protected Mono<String> resolveUrlPath(String resourcePath, ServerWebExchange exchange, 			Resource resource, ResourceTransformerChain transformerChain);1540547026;A transformer can use this method when a resource being transformed_contains links to other resources. Such links need to be replaced with the_public facing link as determined by the resource resolver chain (e.g. the_public URL may have a version inserted)._@param resourcePath the path to a resource that needs to be re-written_@param exchange the current exchange_@param resource the resource being transformed_@param transformerChain the transformer chain_@return the resolved URL or an empty {@link Mono};protected Mono<String> resolveUrlPath(String resourcePath, ServerWebExchange exchange,_			Resource resource, ResourceTransformerChain transformerChain) {__		if (resourcePath.startsWith("/")) {_			_			ResourceUrlProvider urlProvider = getResourceUrlProvider()__			return (urlProvider != null ? urlProvider.getForUriString(resourcePath, exchange) : Mono.empty())__		}_		else {_			_			return transformerChain.getResolverChain()_					.resolveUrlPath(resourcePath, Collections.singletonList(resource))__		}_	};a,transformer,can,use,this,method,when,a,resource,being,transformed,contains,links,to,other,resources,such,links,need,to,be,replaced,with,the,public,facing,link,as,determined,by,the,resource,resolver,chain,e,g,the,public,url,may,have,a,version,inserted,param,resource,path,the,path,to,a,resource,that,needs,to,be,re,written,param,exchange,the,current,exchange,param,resource,the,resource,being,transformed,param,transformer,chain,the,transformer,chain,return,the,resolved,url,or,an,empty,link,mono;protected,mono,string,resolve,url,path,string,resource,path,server,web,exchange,exchange,resource,resource,resource,transformer,chain,transformer,chain,if,resource,path,starts,with,resource,url,provider,url,provider,get,resource,url,provider,return,url,provider,null,url,provider,get,for,uri,string,resource,path,exchange,mono,empty,else,return,transformer,chain,get,resolver,chain,resolve,url,path,resource,path,collections,singleton,list,resource
ResourceTransformerSupport -> public void setResourceUrlProvider(@Nullable ResourceUrlProvider resourceUrlProvider);1500448076;Configure a {@link ResourceUrlProvider} to use when resolving the public_URL of links in a transformed resource (e.g. import links in a CSS file)._This is required only for links expressed as full paths and not for_relative links._@param resourceUrlProvider the URL provider to use;public void setResourceUrlProvider(@Nullable ResourceUrlProvider resourceUrlProvider) {_		this.resourceUrlProvider = resourceUrlProvider__	};configure,a,link,resource,url,provider,to,use,when,resolving,the,public,url,of,links,in,a,transformed,resource,e,g,import,links,in,a,css,file,this,is,required,only,for,links,expressed,as,full,paths,and,not,for,relative,links,param,resource,url,provider,the,url,provider,to,use;public,void,set,resource,url,provider,nullable,resource,url,provider,resource,url,provider,this,resource,url,provider,resource,url,provider
ResourceTransformerSupport -> public void setResourceUrlProvider(@Nullable ResourceUrlProvider resourceUrlProvider);1500498279;Configure a {@link ResourceUrlProvider} to use when resolving the public_URL of links in a transformed resource (e.g. import links in a CSS file)._This is required only for links expressed as full paths and not for_relative links._@param resourceUrlProvider the URL provider to use;public void setResourceUrlProvider(@Nullable ResourceUrlProvider resourceUrlProvider) {_		this.resourceUrlProvider = resourceUrlProvider__	};configure,a,link,resource,url,provider,to,use,when,resolving,the,public,url,of,links,in,a,transformed,resource,e,g,import,links,in,a,css,file,this,is,required,only,for,links,expressed,as,full,paths,and,not,for,relative,links,param,resource,url,provider,the,url,provider,to,use;public,void,set,resource,url,provider,nullable,resource,url,provider,resource,url,provider,this,resource,url,provider,resource,url,provider
ResourceTransformerSupport -> public void setResourceUrlProvider(@Nullable ResourceUrlProvider resourceUrlProvider);1540478567;Configure a {@link ResourceUrlProvider} to use when resolving the public_URL of links in a transformed resource (e.g. import links in a CSS file)._This is required only for links expressed as full paths and not for_relative links._@param resourceUrlProvider the URL provider to use;public void setResourceUrlProvider(@Nullable ResourceUrlProvider resourceUrlProvider) {_		this.resourceUrlProvider = resourceUrlProvider__	};configure,a,link,resource,url,provider,to,use,when,resolving,the,public,url,of,links,in,a,transformed,resource,e,g,import,links,in,a,css,file,this,is,required,only,for,links,expressed,as,full,paths,and,not,for,relative,links,param,resource,url,provider,the,url,provider,to,use;public,void,set,resource,url,provider,nullable,resource,url,provider,resource,url,provider,this,resource,url,provider,resource,url,provider
ResourceTransformerSupport -> public void setResourceUrlProvider(@Nullable ResourceUrlProvider resourceUrlProvider);1540547026;Configure a {@link ResourceUrlProvider} to use when resolving the public_URL of links in a transformed resource (e.g. import links in a CSS file)._This is required only for links expressed as full paths and not for_relative links._@param resourceUrlProvider the URL provider to use;public void setResourceUrlProvider(@Nullable ResourceUrlProvider resourceUrlProvider) {_		this.resourceUrlProvider = resourceUrlProvider__	};configure,a,link,resource,url,provider,to,use,when,resolving,the,public,url,of,links,in,a,transformed,resource,e,g,import,links,in,a,css,file,this,is,required,only,for,links,expressed,as,full,paths,and,not,for,relative,links,param,resource,url,provider,the,url,provider,to,use;public,void,set,resource,url,provider,nullable,resource,url,provider,resource,url,provider,this,resource,url,provider,resource,url,provider
ResourceTransformerSupport -> public void setResourceUrlProvider(ResourceUrlProvider resourceUrlProvider);1485986572;Configure a {@link ResourceUrlProvider} to use when resolving the public_URL of links in a transformed resource (e.g. import links in a CSS file)._This is required only for links expressed as full paths and not for_relative links._@param resourceUrlProvider the URL provider to use;public void setResourceUrlProvider(ResourceUrlProvider resourceUrlProvider) {_		this.resourceUrlProvider = resourceUrlProvider__	};configure,a,link,resource,url,provider,to,use,when,resolving,the,public,url,of,links,in,a,transformed,resource,e,g,import,links,in,a,css,file,this,is,required,only,for,links,expressed,as,full,paths,and,not,for,relative,links,param,resource,url,provider,the,url,provider,to,use;public,void,set,resource,url,provider,resource,url,provider,resource,url,provider,this,resource,url,provider,resource,url,provider
ResourceTransformerSupport -> public void setResourceUrlProvider(ResourceUrlProvider resourceUrlProvider);1490368154;Configure a {@link ResourceUrlProvider} to use when resolving the public_URL of links in a transformed resource (e.g. import links in a CSS file)._This is required only for links expressed as full paths and not for_relative links._@param resourceUrlProvider the URL provider to use;public void setResourceUrlProvider(ResourceUrlProvider resourceUrlProvider) {_		this.resourceUrlProvider = resourceUrlProvider__	};configure,a,link,resource,url,provider,to,use,when,resolving,the,public,url,of,links,in,a,transformed,resource,e,g,import,links,in,a,css,file,this,is,required,only,for,links,expressed,as,full,paths,and,not,for,relative,links,param,resource,url,provider,the,url,provider,to,use;public,void,set,resource,url,provider,resource,url,provider,resource,url,provider,this,resource,url,provider,resource,url,provider
ResourceTransformerSupport -> public void setResourceUrlProvider(ResourceUrlProvider resourceUrlProvider);1495868221;Configure a {@link ResourceUrlProvider} to use when resolving the public_URL of links in a transformed resource (e.g. import links in a CSS file)._This is required only for links expressed as full paths and not for_relative links._@param resourceUrlProvider the URL provider to use;public void setResourceUrlProvider(ResourceUrlProvider resourceUrlProvider) {_		this.resourceUrlProvider = resourceUrlProvider__	};configure,a,link,resource,url,provider,to,use,when,resolving,the,public,url,of,links,in,a,transformed,resource,e,g,import,links,in,a,css,file,this,is,required,only,for,links,expressed,as,full,paths,and,not,for,relative,links,param,resource,url,provider,the,url,provider,to,use;public,void,set,resource,url,provider,resource,url,provider,resource,url,provider,this,resource,url,provider,resource,url,provider
ResourceTransformerSupport -> public void setResourceUrlProvider(ResourceUrlProvider resourceUrlProvider);1496837955;Configure a {@link ResourceUrlProvider} to use when resolving the public_URL of links in a transformed resource (e.g. import links in a CSS file)._This is required only for links expressed as full paths and not for_relative links._@param resourceUrlProvider the URL provider to use;public void setResourceUrlProvider(ResourceUrlProvider resourceUrlProvider) {_		this.resourceUrlProvider = resourceUrlProvider__	};configure,a,link,resource,url,provider,to,use,when,resolving,the,public,url,of,links,in,a,transformed,resource,e,g,import,links,in,a,css,file,this,is,required,only,for,links,expressed,as,full,paths,and,not,for,relative,links,param,resource,url,provider,the,url,provider,to,use;public,void,set,resource,url,provider,resource,url,provider,resource,url,provider,this,resource,url,provider,resource,url,provider
ResourceTransformerSupport -> protected String toAbsolutePath(String path, ServerWebExchange exchange);1490368154;Transform the given relative request path to an absolute path,_taking the path of the given request as a point of reference._The resulting path is also cleaned from sequences like "path/..".__@param path the relative path to transform_@param exchange the current exchange_@return the absolute request path for the given resource path;protected String toAbsolutePath(String path, ServerWebExchange exchange) {_		String requestPath = exchange.getRequest().getURI().getPath()__		String absolutePath = StringUtils.applyRelativePath(requestPath, path)__		return StringUtils.cleanPath(absolutePath)__	};transform,the,given,relative,request,path,to,an,absolute,path,taking,the,path,of,the,given,request,as,a,point,of,reference,the,resulting,path,is,also,cleaned,from,sequences,like,path,param,path,the,relative,path,to,transform,param,exchange,the,current,exchange,return,the,absolute,request,path,for,the,given,resource,path;protected,string,to,absolute,path,string,path,server,web,exchange,exchange,string,request,path,exchange,get,request,get,uri,get,path,string,absolute,path,string,utils,apply,relative,path,request,path,path,return,string,utils,clean,path,absolute,path
ResourceTransformerSupport -> protected String toAbsolutePath(String path, ServerWebExchange exchange);1495868221;Transform the given relative request path to an absolute path,_taking the path of the given request as a point of reference._The resulting path is also cleaned from sequences like "path/..".__@param path the relative path to transform_@param exchange the current exchange_@return the absolute request path for the given resource path;protected String toAbsolutePath(String path, ServerWebExchange exchange) {_		String requestPath = exchange.getRequest().getURI().getPath()__		String absolutePath = StringUtils.applyRelativePath(requestPath, path)__		return StringUtils.cleanPath(absolutePath)__	};transform,the,given,relative,request,path,to,an,absolute,path,taking,the,path,of,the,given,request,as,a,point,of,reference,the,resulting,path,is,also,cleaned,from,sequences,like,path,param,path,the,relative,path,to,transform,param,exchange,the,current,exchange,return,the,absolute,request,path,for,the,given,resource,path;protected,string,to,absolute,path,string,path,server,web,exchange,exchange,string,request,path,exchange,get,request,get,uri,get,path,string,absolute,path,string,utils,apply,relative,path,request,path,path,return,string,utils,clean,path,absolute,path
ResourceTransformerSupport -> protected String toAbsolutePath(String path, ServerWebExchange exchange);1496837955;Transform the given relative request path to an absolute path,_taking the path of the given request as a point of reference._The resulting path is also cleaned from sequences like "path/..".__@param path the relative path to transform_@param exchange the current exchange_@return the absolute request path for the given resource path;protected String toAbsolutePath(String path, ServerWebExchange exchange) {_		String requestPath = exchange.getRequest().getURI().getPath()__		String absolutePath = StringUtils.applyRelativePath(requestPath, path)__		return StringUtils.cleanPath(absolutePath)__	};transform,the,given,relative,request,path,to,an,absolute,path,taking,the,path,of,the,given,request,as,a,point,of,reference,the,resulting,path,is,also,cleaned,from,sequences,like,path,param,path,the,relative,path,to,transform,param,exchange,the,current,exchange,return,the,absolute,request,path,for,the,given,resource,path;protected,string,to,absolute,path,string,path,server,web,exchange,exchange,string,request,path,exchange,get,request,get,uri,get,path,string,absolute,path,string,utils,apply,relative,path,request,path,path,return,string,utils,clean,path,absolute,path
ResourceTransformerSupport -> protected String toAbsolutePath(String path, ServerWebExchange exchange);1500448076;Transform the given relative request path to an absolute path,_taking the path of the given request as a point of reference._The resulting path is also cleaned from sequences like "path/..".__@param path the relative path to transform_@param exchange the current exchange_@return the absolute request path for the given resource path;protected String toAbsolutePath(String path, ServerWebExchange exchange) {_		String requestPath = exchange.getRequest().getURI().getPath()__		String absolutePath = StringUtils.applyRelativePath(requestPath, path)__		return StringUtils.cleanPath(absolutePath)__	};transform,the,given,relative,request,path,to,an,absolute,path,taking,the,path,of,the,given,request,as,a,point,of,reference,the,resulting,path,is,also,cleaned,from,sequences,like,path,param,path,the,relative,path,to,transform,param,exchange,the,current,exchange,return,the,absolute,request,path,for,the,given,resource,path;protected,string,to,absolute,path,string,path,server,web,exchange,exchange,string,request,path,exchange,get,request,get,uri,get,path,string,absolute,path,string,utils,apply,relative,path,request,path,path,return,string,utils,clean,path,absolute,path
ResourceTransformerSupport -> protected String toAbsolutePath(String path, ServerWebExchange exchange);1500498279;Transform the given relative request path to an absolute path,_taking the path of the given request as a point of reference._The resulting path is also cleaned from sequences like "path/..".__@param path the relative path to transform_@param exchange the current exchange_@return the absolute request path for the given resource path;protected String toAbsolutePath(String path, ServerWebExchange exchange) {_		String requestPath = exchange.getRequest().getURI().getPath()__		String absolutePath = StringUtils.applyRelativePath(requestPath, path)__		return StringUtils.cleanPath(absolutePath)__	};transform,the,given,relative,request,path,to,an,absolute,path,taking,the,path,of,the,given,request,as,a,point,of,reference,the,resulting,path,is,also,cleaned,from,sequences,like,path,param,path,the,relative,path,to,transform,param,exchange,the,current,exchange,return,the,absolute,request,path,for,the,given,resource,path;protected,string,to,absolute,path,string,path,server,web,exchange,exchange,string,request,path,exchange,get,request,get,uri,get,path,string,absolute,path,string,utils,apply,relative,path,request,path,path,return,string,utils,clean,path,absolute,path
ResourceTransformerSupport -> protected String toAbsolutePath(String path, ServerWebExchange exchange);1540478567;Transform the given relative request path to an absolute path,_taking the path of the given request as a point of reference._The resulting path is also cleaned from sequences like "path/..".__@param path the relative path to transform_@param exchange the current exchange_@return the absolute request path for the given resource path;protected String toAbsolutePath(String path, ServerWebExchange exchange) {_		String requestPath = exchange.getRequest().getURI().getPath()__		String absolutePath = path.startsWith("/") ? path : StringUtils.applyRelativePath(requestPath, path)__		return StringUtils.cleanPath(absolutePath)__	};transform,the,given,relative,request,path,to,an,absolute,path,taking,the,path,of,the,given,request,as,a,point,of,reference,the,resulting,path,is,also,cleaned,from,sequences,like,path,param,path,the,relative,path,to,transform,param,exchange,the,current,exchange,return,the,absolute,request,path,for,the,given,resource,path;protected,string,to,absolute,path,string,path,server,web,exchange,exchange,string,request,path,exchange,get,request,get,uri,get,path,string,absolute,path,path,starts,with,path,string,utils,apply,relative,path,request,path,path,return,string,utils,clean,path,absolute,path
ResourceTransformerSupport -> protected String toAbsolutePath(String path, ServerWebExchange exchange);1540547026;Transform the given relative request path to an absolute path,_taking the path of the given request as a point of reference._The resulting path is also cleaned from sequences like "path/..".__@param path the relative path to transform_@param exchange the current exchange_@return the absolute request path for the given resource path;protected String toAbsolutePath(String path, ServerWebExchange exchange) {_		String requestPath = exchange.getRequest().getURI().getPath()__		String absolutePath = (path.startsWith("/") ? path : StringUtils.applyRelativePath(requestPath, path))__		return StringUtils.cleanPath(absolutePath)__	};transform,the,given,relative,request,path,to,an,absolute,path,taking,the,path,of,the,given,request,as,a,point,of,reference,the,resulting,path,is,also,cleaned,from,sequences,like,path,param,path,the,relative,path,to,transform,param,exchange,the,current,exchange,return,the,absolute,request,path,for,the,given,resource,path;protected,string,to,absolute,path,string,path,server,web,exchange,exchange,string,request,path,exchange,get,request,get,uri,get,path,string,absolute,path,path,starts,with,path,string,utils,apply,relative,path,request,path,path,return,string,utils,clean,path,absolute,path
ResourceTransformerSupport -> @Nullable 	public ResourceUrlProvider getResourceUrlProvider();1496837955;Return the configured {@code ResourceUrlProvider}.;@Nullable_	public ResourceUrlProvider getResourceUrlProvider() {_		return this.resourceUrlProvider__	};return,the,configured,code,resource,url,provider;nullable,public,resource,url,provider,get,resource,url,provider,return,this,resource,url,provider
ResourceTransformerSupport -> @Nullable 	public ResourceUrlProvider getResourceUrlProvider();1500448076;Return the configured {@code ResourceUrlProvider}.;@Nullable_	public ResourceUrlProvider getResourceUrlProvider() {_		return this.resourceUrlProvider__	};return,the,configured,code,resource,url,provider;nullable,public,resource,url,provider,get,resource,url,provider,return,this,resource,url,provider
ResourceTransformerSupport -> @Nullable 	public ResourceUrlProvider getResourceUrlProvider();1500498279;Return the configured {@code ResourceUrlProvider}.;@Nullable_	public ResourceUrlProvider getResourceUrlProvider() {_		return this.resourceUrlProvider__	};return,the,configured,code,resource,url,provider;nullable,public,resource,url,provider,get,resource,url,provider,return,this,resource,url,provider
ResourceTransformerSupport -> @Nullable 	public ResourceUrlProvider getResourceUrlProvider();1540478567;Return the configured {@code ResourceUrlProvider}.;@Nullable_	public ResourceUrlProvider getResourceUrlProvider() {_		return this.resourceUrlProvider__	};return,the,configured,code,resource,url,provider;nullable,public,resource,url,provider,get,resource,url,provider,return,this,resource,url,provider
ResourceTransformerSupport -> @Nullable 	public ResourceUrlProvider getResourceUrlProvider();1540547026;Return the configured {@code ResourceUrlProvider}.;@Nullable_	public ResourceUrlProvider getResourceUrlProvider() {_		return this.resourceUrlProvider__	};return,the,configured,code,resource,url,provider;nullable,public,resource,url,provider,get,resource,url,provider,return,this,resource,url,provider
ResourceTransformerSupport -> public ResourceUrlProvider getResourceUrlProvider();1485986572;@return the configured {@code ResourceUrlProvider}.;public ResourceUrlProvider getResourceUrlProvider() {_		return this.resourceUrlProvider__	};return,the,configured,code,resource,url,provider;public,resource,url,provider,get,resource,url,provider,return,this,resource,url,provider
ResourceTransformerSupport -> public ResourceUrlProvider getResourceUrlProvider();1490368154;@return the configured {@code ResourceUrlProvider}.;public ResourceUrlProvider getResourceUrlProvider() {_		return this.resourceUrlProvider__	};return,the,configured,code,resource,url,provider;public,resource,url,provider,get,resource,url,provider,return,this,resource,url,provider
ResourceTransformerSupport -> public ResourceUrlProvider getResourceUrlProvider();1495868221;@return the configured {@code ResourceUrlProvider}.;public ResourceUrlProvider getResourceUrlProvider() {_		return this.resourceUrlProvider__	};return,the,configured,code,resource,url,provider;public,resource,url,provider,get,resource,url,provider,return,this,resource,url,provider
