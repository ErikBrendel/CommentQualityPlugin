commented;modifiers;parameterAmount;loc;comment;code
true;;3;2;/**  * Resolve the supplied request and request path to a {@link Resource} that  * exists under one of the given resource locations.  * @param exchange the current exchange  * @param requestPath the portion of the request path to use  * @param locations the locations to search in when looking up resources  * @return the resolved resource. or an empty {@code Mono} if unresolved  */ ;/**  * Resolve the supplied request and request path to a {@link Resource} that  * exists under one of the given resource locations.  * @param exchange the current exchange  * @param requestPath the portion of the request path to use  * @param locations the locations to search in when looking up resources  * @return the resolved resource. or an empty {@code Mono} if unresolved  */ Mono<Resource> resolveResource(@Nullable ServerWebExchange exchange, String requestPath, List<? extends Resource> locations).
true;;2;1;/**  * Resolve the externally facing <em>public</em> URL path for clients to use  * to access the resource that is located at the given <em>internal</em>  * resource path.  * <p>This is useful when rendering URL links to clients.  * @param resourcePath the internal resource path  * @param locations the locations to search in when looking up resources  * @return the resolved public URL path. or an empty {@code Mono} if unresolved  */ ;/**  * Resolve the externally facing <em>public</em> URL path for clients to use  * to access the resource that is located at the given <em>internal</em>  * resource path.  * <p>This is useful when rendering URL links to clients.  * @param resourcePath the internal resource path  * @param locations the locations to search in when looking up resources  * @return the resolved public URL path. or an empty {@code Mono} if unresolved  */ Mono<String> resolveUrlPath(String resourcePath, List<? extends Resource> locations).
