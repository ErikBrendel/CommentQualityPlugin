commented;modifiers;parameterAmount;loc;comment;code
true;public;1;3;/**  * Configure the maximum allowable frame payload length. Setting this value  * to your application's requirement may reduce denial of service attacks  * using long data frames.  * <p>Corresponds to the argument with the same name in the constructor of  * {@link io.netty.handler.codec.http.websocketx.WebSocketServerHandshakerFactory  * WebSocketServerHandshakerFactory} in Netty.  * <p>By default set to 65536 (64K).  * @param maxFramePayloadLength the max length for frames.  * @since 5.1  */ ;/**  * Configure the maximum allowable frame payload length. Setting this value  * to your application's requirement may reduce denial of service attacks  * using long data frames.  * <p>Corresponds to the argument with the same name in the constructor of  * {@link io.netty.handler.codec.http.websocketx.WebSocketServerHandshakerFactory  * WebSocketServerHandshakerFactory} in Netty.  * <p>By default set to 65536 (64K).  * @param maxFramePayloadLength the max length for frames.  * @since 5.1  */ public void setMaxFramePayloadLength(Integer maxFramePayloadLength) {     this.maxFramePayloadLength = maxFramePayloadLength. }
true;public;0;3;/**  * Return the configured max length for frames.  * @since 5.1  */ ;/**  * Return the configured max length for frames.  * @since 5.1  */ public int getMaxFramePayloadLength() {     return this.maxFramePayloadLength. }
false;public;4;17;;@Override public Mono<Void> upgrade(ServerWebExchange exchange, WebSocketHandler handler, @Nullable String subProtocol, Supplier<HandshakeInfo> handshakeInfoFactory) {     ServerHttpResponse response = exchange.getResponse().     HttpServerResponse reactorResponse = ((AbstractServerHttpResponse) response).getNativeResponse().     HandshakeInfo handshakeInfo = handshakeInfoFactory.get().     NettyDataBufferFactory bufferFactory = (NettyDataBufferFactory) response.bufferFactory().     return reactorResponse.sendWebsocket(subProtocol, this.maxFramePayloadLength, (in, out) -> {         ReactorNettyWebSocketSession session = new ReactorNettyWebSocketSession(in, out, handshakeInfo, bufferFactory, this.maxFramePayloadLength).         return handler.handle(session).     }). }
