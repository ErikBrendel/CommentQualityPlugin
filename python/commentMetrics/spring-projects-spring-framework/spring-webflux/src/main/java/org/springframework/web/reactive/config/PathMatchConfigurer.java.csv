# id;timestamp;commentText;codeText;commentWords;codeWords
PathMatchConfigurer -> public PathMatchConfigurer setUseSuffixPatternMatch(Boolean suffixPatternMatch);1485986572;Whether to use suffix pattern match (".*") when matching patterns to_requests. If enabled a method mapped to "/users" also matches to "/users.*"._<p>By default this is set to {@code true}._@see #registeredSuffixPatternMatch;public PathMatchConfigurer setUseSuffixPatternMatch(Boolean suffixPatternMatch) {_		this.suffixPatternMatch = suffixPatternMatch__		return this__	};whether,to,use,suffix,pattern,match,when,matching,patterns,to,requests,if,enabled,a,method,mapped,to,users,also,matches,to,users,p,by,default,this,is,set,to,code,true,see,registered,suffix,pattern,match;public,path,match,configurer,set,use,suffix,pattern,match,boolean,suffix,pattern,match,this,suffix,pattern,match,suffix,pattern,match,return,this
PathMatchConfigurer -> public PathMatchConfigurer setUseSuffixPatternMatch(Boolean suffixPatternMatch);1486635693;Whether to use suffix pattern match (".*") when matching patterns to_requests. If enabled a method mapped to "/users" also matches to "/users.*"._<p>By default this is set to {@code true}._@see #registeredSuffixPatternMatch;public PathMatchConfigurer setUseSuffixPatternMatch(Boolean suffixPatternMatch) {_		this.suffixPatternMatch = suffixPatternMatch__		return this__	};whether,to,use,suffix,pattern,match,when,matching,patterns,to,requests,if,enabled,a,method,mapped,to,users,also,matches,to,users,p,by,default,this,is,set,to,code,true,see,registered,suffix,pattern,match;public,path,match,configurer,set,use,suffix,pattern,match,boolean,suffix,pattern,match,this,suffix,pattern,match,suffix,pattern,match,return,this
PathMatchConfigurer -> public PathMatchConfigurer setUseSuffixPatternMatch(Boolean suffixPatternMatch);1486747801;Whether to use suffix pattern match (".*") when matching patterns to_requests. If enabled a method mapped to "/users" also matches to "/users.*"._<p>By default this is set to {@code true}._@see #registeredSuffixPatternMatch;public PathMatchConfigurer setUseSuffixPatternMatch(Boolean suffixPatternMatch) {_		this.suffixPatternMatch = suffixPatternMatch__		return this__	};whether,to,use,suffix,pattern,match,when,matching,patterns,to,requests,if,enabled,a,method,mapped,to,users,also,matches,to,users,p,by,default,this,is,set,to,code,true,see,registered,suffix,pattern,match;public,path,match,configurer,set,use,suffix,pattern,match,boolean,suffix,pattern,match,this,suffix,pattern,match,suffix,pattern,match,return,this
PathMatchConfigurer -> public PathMatchConfigurer setUseSuffixPatternMatch(Boolean suffixPatternMatch);1486747828;Whether to use suffix pattern match (".*") when matching patterns to_requests. If enabled a method mapped to "/users" also matches to "/users.*"._<p>By default this is set to {@code true}._@see #registeredSuffixPatternMatch;public PathMatchConfigurer setUseSuffixPatternMatch(Boolean suffixPatternMatch) {_		this.suffixPatternMatch = suffixPatternMatch__		return this__	};whether,to,use,suffix,pattern,match,when,matching,patterns,to,requests,if,enabled,a,method,mapped,to,users,also,matches,to,users,p,by,default,this,is,set,to,code,true,see,registered,suffix,pattern,match;public,path,match,configurer,set,use,suffix,pattern,match,boolean,suffix,pattern,match,this,suffix,pattern,match,suffix,pattern,match,return,this
PathMatchConfigurer -> public PathMatchConfigurer setUseSuffixPatternMatch(Boolean suffixPatternMatch);1495035625;Whether to use suffix pattern match (".*") when matching patterns to_requests. If enabled a method mapped to "/users" also matches to "/users.*"._<p>By default this is set to {@code true}._@see #registeredSuffixPatternMatch;public PathMatchConfigurer setUseSuffixPatternMatch(Boolean suffixPatternMatch) {_		this.suffixPatternMatch = suffixPatternMatch__		return this__	};whether,to,use,suffix,pattern,match,when,matching,patterns,to,requests,if,enabled,a,method,mapped,to,users,also,matches,to,users,p,by,default,this,is,set,to,code,true,see,registered,suffix,pattern,match;public,path,match,configurer,set,use,suffix,pattern,match,boolean,suffix,pattern,match,this,suffix,pattern,match,suffix,pattern,match,return,this
PathMatchConfigurer -> public PathMatchConfigurer setUseSuffixPatternMatch(Boolean suffixPatternMatch);1496334618;Whether to use suffix pattern match (".*") when matching patterns to_requests. If enabled a method mapped to "/users" also matches to "/users.*"._<p>By default this is set to {@code true}._@see #registeredSuffixPatternMatch;public PathMatchConfigurer setUseSuffixPatternMatch(Boolean suffixPatternMatch) {_		this.suffixPatternMatch = suffixPatternMatch__		return this__	};whether,to,use,suffix,pattern,match,when,matching,patterns,to,requests,if,enabled,a,method,mapped,to,users,also,matches,to,users,p,by,default,this,is,set,to,code,true,see,registered,suffix,pattern,match;public,path,match,configurer,set,use,suffix,pattern,match,boolean,suffix,pattern,match,this,suffix,pattern,match,suffix,pattern,match,return,this
PathMatchConfigurer -> public PathMatchConfigurer setUseSuffixPatternMatch(Boolean suffixPatternMatch);1496837955;Whether to use suffix pattern match (".*") when matching patterns to_requests. If enabled a method mapped to "/users" also matches to "/users.*"._<p>By default this is set to {@code true}._@see #registeredSuffixPatternMatch;public PathMatchConfigurer setUseSuffixPatternMatch(Boolean suffixPatternMatch) {_		this.suffixPatternMatch = suffixPatternMatch__		return this__	};whether,to,use,suffix,pattern,match,when,matching,patterns,to,requests,if,enabled,a,method,mapped,to,users,also,matches,to,users,p,by,default,this,is,set,to,code,true,see,registered,suffix,pattern,match;public,path,match,configurer,set,use,suffix,pattern,match,boolean,suffix,pattern,match,this,suffix,pattern,match,suffix,pattern,match,return,this
PathMatchConfigurer -> public PathMatchConfigurer setUseSuffixPatternMatch(Boolean suffixPatternMatch);1497039338;Whether to use suffix pattern match (".*") when matching patterns to_requests. If enabled a method mapped to "/users" also matches to "/users.*"._<p>By default this is set to {@code true}._@see #registeredSuffixPatternMatch;public PathMatchConfigurer setUseSuffixPatternMatch(Boolean suffixPatternMatch) {_		this.suffixPatternMatch = suffixPatternMatch__		return this__	};whether,to,use,suffix,pattern,match,when,matching,patterns,to,requests,if,enabled,a,method,mapped,to,users,also,matches,to,users,p,by,default,this,is,set,to,code,true,see,registered,suffix,pattern,match;public,path,match,configurer,set,use,suffix,pattern,match,boolean,suffix,pattern,match,this,suffix,pattern,match,suffix,pattern,match,return,this
PathMatchConfigurer -> public PathMatchConfigurer setUseRegisteredSuffixPatternMatch(Boolean registeredSuffixPatternMatch);1485986572;Whether suffix pattern matching should work only against path extensions_that are explicitly registered. This is generally recommended to reduce_ambiguity and to avoid issues such as when a "." (dot) appears in the path_for other reasons._<p>By default this is set to "true".;public PathMatchConfigurer setUseRegisteredSuffixPatternMatch(Boolean registeredSuffixPatternMatch) {_		this.registeredSuffixPatternMatch = registeredSuffixPatternMatch__		return this__	};whether,suffix,pattern,matching,should,work,only,against,path,extensions,that,are,explicitly,registered,this,is,generally,recommended,to,reduce,ambiguity,and,to,avoid,issues,such,as,when,a,dot,appears,in,the,path,for,other,reasons,p,by,default,this,is,set,to,true;public,path,match,configurer,set,use,registered,suffix,pattern,match,boolean,registered,suffix,pattern,match,this,registered,suffix,pattern,match,registered,suffix,pattern,match,return,this
PathMatchConfigurer -> public PathMatchConfigurer setUseRegisteredSuffixPatternMatch(Boolean registeredSuffixPatternMatch);1486635693;Whether suffix pattern matching should work only against path extensions_that are explicitly registered. This is generally recommended to reduce_ambiguity and to avoid issues such as when a "." (dot) appears in the path_for other reasons._<p>By default this is set to "true".;public PathMatchConfigurer setUseRegisteredSuffixPatternMatch(Boolean registeredSuffixPatternMatch) {_		this.registeredSuffixPatternMatch = registeredSuffixPatternMatch__		return this__	};whether,suffix,pattern,matching,should,work,only,against,path,extensions,that,are,explicitly,registered,this,is,generally,recommended,to,reduce,ambiguity,and,to,avoid,issues,such,as,when,a,dot,appears,in,the,path,for,other,reasons,p,by,default,this,is,set,to,true;public,path,match,configurer,set,use,registered,suffix,pattern,match,boolean,registered,suffix,pattern,match,this,registered,suffix,pattern,match,registered,suffix,pattern,match,return,this
PathMatchConfigurer -> public PathMatchConfigurer setUseRegisteredSuffixPatternMatch(Boolean registeredSuffixPatternMatch);1486747801;Whether suffix pattern matching should work only against path extensions_that are explicitly registered. This is generally recommended to reduce_ambiguity and to avoid issues such as when a "." (dot) appears in the path_for other reasons._<p>By default this is set to "true".;public PathMatchConfigurer setUseRegisteredSuffixPatternMatch(Boolean registeredSuffixPatternMatch) {_		this.registeredSuffixPatternMatch = registeredSuffixPatternMatch__		return this__	};whether,suffix,pattern,matching,should,work,only,against,path,extensions,that,are,explicitly,registered,this,is,generally,recommended,to,reduce,ambiguity,and,to,avoid,issues,such,as,when,a,dot,appears,in,the,path,for,other,reasons,p,by,default,this,is,set,to,true;public,path,match,configurer,set,use,registered,suffix,pattern,match,boolean,registered,suffix,pattern,match,this,registered,suffix,pattern,match,registered,suffix,pattern,match,return,this
PathMatchConfigurer -> public PathMatchConfigurer setUseRegisteredSuffixPatternMatch(Boolean registeredSuffixPatternMatch);1486747828;Whether suffix pattern matching should work only against path extensions_that are explicitly registered. This is generally recommended to reduce_ambiguity and to avoid issues such as when a "." (dot) appears in the path_for other reasons._<p>By default this is set to "true".;public PathMatchConfigurer setUseRegisteredSuffixPatternMatch(Boolean registeredSuffixPatternMatch) {_		this.registeredSuffixPatternMatch = registeredSuffixPatternMatch__		return this__	};whether,suffix,pattern,matching,should,work,only,against,path,extensions,that,are,explicitly,registered,this,is,generally,recommended,to,reduce,ambiguity,and,to,avoid,issues,such,as,when,a,dot,appears,in,the,path,for,other,reasons,p,by,default,this,is,set,to,true;public,path,match,configurer,set,use,registered,suffix,pattern,match,boolean,registered,suffix,pattern,match,this,registered,suffix,pattern,match,registered,suffix,pattern,match,return,this
PathMatchConfigurer -> public PathMatchConfigurer setUseRegisteredSuffixPatternMatch(Boolean registeredSuffixPatternMatch);1495035625;Whether suffix pattern matching should work only against path extensions_that are explicitly registered. This is generally recommended to reduce_ambiguity and to avoid issues such as when a "." (dot) appears in the path_for other reasons._<p>By default this is set to "true".;public PathMatchConfigurer setUseRegisteredSuffixPatternMatch(Boolean registeredSuffixPatternMatch) {_		this.registeredSuffixPatternMatch = registeredSuffixPatternMatch__		return this__	};whether,suffix,pattern,matching,should,work,only,against,path,extensions,that,are,explicitly,registered,this,is,generally,recommended,to,reduce,ambiguity,and,to,avoid,issues,such,as,when,a,dot,appears,in,the,path,for,other,reasons,p,by,default,this,is,set,to,true;public,path,match,configurer,set,use,registered,suffix,pattern,match,boolean,registered,suffix,pattern,match,this,registered,suffix,pattern,match,registered,suffix,pattern,match,return,this
PathMatchConfigurer -> public PathMatchConfigurer setUseRegisteredSuffixPatternMatch(Boolean registeredSuffixPatternMatch);1496334618;Whether suffix pattern matching should work only against path extensions_that are explicitly registered. This is generally recommended to reduce_ambiguity and to avoid issues such as when a "." (dot) appears in the path_for other reasons._<p>By default this is set to "true".;public PathMatchConfigurer setUseRegisteredSuffixPatternMatch(Boolean registeredSuffixPatternMatch) {_		this.registeredSuffixPatternMatch = registeredSuffixPatternMatch__		return this__	};whether,suffix,pattern,matching,should,work,only,against,path,extensions,that,are,explicitly,registered,this,is,generally,recommended,to,reduce,ambiguity,and,to,avoid,issues,such,as,when,a,dot,appears,in,the,path,for,other,reasons,p,by,default,this,is,set,to,true;public,path,match,configurer,set,use,registered,suffix,pattern,match,boolean,registered,suffix,pattern,match,this,registered,suffix,pattern,match,registered,suffix,pattern,match,return,this
PathMatchConfigurer -> public PathMatchConfigurer setUseRegisteredSuffixPatternMatch(Boolean registeredSuffixPatternMatch);1496837955;Whether suffix pattern matching should work only against path extensions_that are explicitly registered. This is generally recommended to reduce_ambiguity and to avoid issues such as when a "." (dot) appears in the path_for other reasons._<p>By default this is set to "true".;public PathMatchConfigurer setUseRegisteredSuffixPatternMatch(Boolean registeredSuffixPatternMatch) {_		this.registeredSuffixPatternMatch = registeredSuffixPatternMatch__		return this__	};whether,suffix,pattern,matching,should,work,only,against,path,extensions,that,are,explicitly,registered,this,is,generally,recommended,to,reduce,ambiguity,and,to,avoid,issues,such,as,when,a,dot,appears,in,the,path,for,other,reasons,p,by,default,this,is,set,to,true;public,path,match,configurer,set,use,registered,suffix,pattern,match,boolean,registered,suffix,pattern,match,this,registered,suffix,pattern,match,registered,suffix,pattern,match,return,this
PathMatchConfigurer -> public PathMatchConfigurer setUseRegisteredSuffixPatternMatch(Boolean registeredSuffixPatternMatch);1497039338;Whether suffix pattern matching should work only against path extensions_that are explicitly registered. This is generally recommended to reduce_ambiguity and to avoid issues such as when a "." (dot) appears in the path_for other reasons._<p>By default this is set to "true".;public PathMatchConfigurer setUseRegisteredSuffixPatternMatch(Boolean registeredSuffixPatternMatch) {_		this.registeredSuffixPatternMatch = registeredSuffixPatternMatch__		return this__	};whether,suffix,pattern,matching,should,work,only,against,path,extensions,that,are,explicitly,registered,this,is,generally,recommended,to,reduce,ambiguity,and,to,avoid,issues,such,as,when,a,dot,appears,in,the,path,for,other,reasons,p,by,default,this,is,set,to,true;public,path,match,configurer,set,use,registered,suffix,pattern,match,boolean,registered,suffix,pattern,match,this,registered,suffix,pattern,match,registered,suffix,pattern,match,return,this
PathMatchConfigurer -> public PathMatchConfigurer setPathHelper(HttpRequestPathHelper pathHelper);1485986572;Set a {@code HttpRequestPathHelper} for the resolution of lookup paths._<p>Default is {@code HttpRequestPathHelper}.;public PathMatchConfigurer setPathHelper(HttpRequestPathHelper pathHelper) {_		this.pathHelper = pathHelper__		return this__	};set,a,code,http,request,path,helper,for,the,resolution,of,lookup,paths,p,default,is,code,http,request,path,helper;public,path,match,configurer,set,path,helper,http,request,path,helper,path,helper,this,path,helper,path,helper,return,this
PathMatchConfigurer -> public PathMatchConfigurer setPathHelper(HttpRequestPathHelper pathHelper);1486635693;Set a {@code HttpRequestPathHelper} for the resolution of lookup paths._<p>Default is {@code HttpRequestPathHelper}.;public PathMatchConfigurer setPathHelper(HttpRequestPathHelper pathHelper) {_		this.pathHelper = pathHelper__		return this__	};set,a,code,http,request,path,helper,for,the,resolution,of,lookup,paths,p,default,is,code,http,request,path,helper;public,path,match,configurer,set,path,helper,http,request,path,helper,path,helper,this,path,helper,path,helper,return,this
PathMatchConfigurer -> public PathMatchConfigurer setPathHelper(HttpRequestPathHelper pathHelper);1486652296;Set a {@code HttpRequestPathHelper} for the resolution of lookup paths._<p>Default is {@code HttpRequestPathHelper}.;public PathMatchConfigurer setPathHelper(HttpRequestPathHelper pathHelper) {_		this.pathHelper = pathHelper__		return this__	};set,a,code,http,request,path,helper,for,the,resolution,of,lookup,paths,p,default,is,code,http,request,path,helper;public,path,match,configurer,set,path,helper,http,request,path,helper,path,helper,this,path,helper,path,helper,return,this
PathMatchConfigurer -> public PathMatchConfigurer setPathHelper(HttpRequestPathHelper pathHelper);1486747801;Set a {@code HttpRequestPathHelper} for the resolution of lookup paths._<p>Default is {@code HttpRequestPathHelper}.;public PathMatchConfigurer setPathHelper(HttpRequestPathHelper pathHelper) {_		this.pathHelper = pathHelper__		return this__	};set,a,code,http,request,path,helper,for,the,resolution,of,lookup,paths,p,default,is,code,http,request,path,helper;public,path,match,configurer,set,path,helper,http,request,path,helper,path,helper,this,path,helper,path,helper,return,this
PathMatchConfigurer -> public PathMatchConfigurer setPathHelper(HttpRequestPathHelper pathHelper);1486747828;Set a {@code HttpRequestPathHelper} for the resolution of lookup paths._<p>Default is {@code HttpRequestPathHelper}.;public PathMatchConfigurer setPathHelper(HttpRequestPathHelper pathHelper) {_		this.pathHelper = pathHelper__		return this__	};set,a,code,http,request,path,helper,for,the,resolution,of,lookup,paths,p,default,is,code,http,request,path,helper;public,path,match,configurer,set,path,helper,http,request,path,helper,path,helper,this,path,helper,path,helper,return,this
PathMatchConfigurer -> public PathMatchConfigurer setPathHelper(HttpRequestPathHelper pathHelper);1495035625;Set a {@code HttpRequestPathHelper} for the resolution of lookup paths._<p>Default is {@code HttpRequestPathHelper}.;public PathMatchConfigurer setPathHelper(HttpRequestPathHelper pathHelper) {_		this.pathHelper = pathHelper__		return this__	};set,a,code,http,request,path,helper,for,the,resolution,of,lookup,paths,p,default,is,code,http,request,path,helper;public,path,match,configurer,set,path,helper,http,request,path,helper,path,helper,this,path,helper,path,helper,return,this
PathMatchConfigurer -> public PathMatchConfigurer setPathHelper(HttpRequestPathHelper pathHelper);1496334618;Set a {@code HttpRequestPathHelper} for the resolution of lookup paths._<p>Default is {@code HttpRequestPathHelper}.;public PathMatchConfigurer setPathHelper(HttpRequestPathHelper pathHelper) {_		this.pathHelper = pathHelper__		return this__	};set,a,code,http,request,path,helper,for,the,resolution,of,lookup,paths,p,default,is,code,http,request,path,helper;public,path,match,configurer,set,path,helper,http,request,path,helper,path,helper,this,path,helper,path,helper,return,this
PathMatchConfigurer -> public PathMatchConfigurer setPathHelper(HttpRequestPathHelper pathHelper);1496837955;Set a {@code HttpRequestPathHelper} for the resolution of lookup paths._<p>Default is {@code HttpRequestPathHelper}.;public PathMatchConfigurer setPathHelper(HttpRequestPathHelper pathHelper) {_		this.pathHelper = pathHelper__		return this__	};set,a,code,http,request,path,helper,for,the,resolution,of,lookup,paths,p,default,is,code,http,request,path,helper;public,path,match,configurer,set,path,helper,http,request,path,helper,path,helper,this,path,helper,path,helper,return,this
PathMatchConfigurer -> public PathMatchConfigurer setUseCaseSensitiveMatch(Boolean caseSensitiveMatch);1497286385;Whether to match to URLs irrespective of their case._If enabled a method mapped to "/users" won't match to "/Users/"._<p>The default value is {@code false}.;public PathMatchConfigurer setUseCaseSensitiveMatch(Boolean caseSensitiveMatch) {_		this.caseSensitiveMatch = caseSensitiveMatch__		return this__	};whether,to,match,to,urls,irrespective,of,their,case,if,enabled,a,method,mapped,to,users,won,t,match,to,users,p,the,default,value,is,code,false;public,path,match,configurer,set,use,case,sensitive,match,boolean,case,sensitive,match,this,case,sensitive,match,case,sensitive,match,return,this
PathMatchConfigurer -> public PathMatchConfigurer setUseCaseSensitiveMatch(Boolean caseSensitiveMatch);1500495740;Whether to match to URLs irrespective of their case._If enabled a method mapped to "/users" won't match to "/Users/"._<p>The default value is {@code false}.;public PathMatchConfigurer setUseCaseSensitiveMatch(Boolean caseSensitiveMatch) {_		this.caseSensitiveMatch = caseSensitiveMatch__		return this__	};whether,to,match,to,urls,irrespective,of,their,case,if,enabled,a,method,mapped,to,users,won,t,match,to,users,p,the,default,value,is,code,false;public,path,match,configurer,set,use,case,sensitive,match,boolean,case,sensitive,match,this,case,sensitive,match,case,sensitive,match,return,this
PathMatchConfigurer -> public PathMatchConfigurer setUseCaseSensitiveMatch(Boolean caseSensitiveMatch);1501237594;Whether to match to URLs irrespective of their case._If enabled a method mapped to "/users" won't match to "/Users/"._<p>The default value is {@code false}.;public PathMatchConfigurer setUseCaseSensitiveMatch(Boolean caseSensitiveMatch) {_		this.caseSensitiveMatch = caseSensitiveMatch__		return this__	};whether,to,match,to,urls,irrespective,of,their,case,if,enabled,a,method,mapped,to,users,won,t,match,to,users,p,the,default,value,is,code,false;public,path,match,configurer,set,use,case,sensitive,match,boolean,case,sensitive,match,this,case,sensitive,match,case,sensitive,match,return,this
PathMatchConfigurer -> public PathMatchConfigurer setUseCaseSensitiveMatch(Boolean caseSensitiveMatch);1528409922;Whether to match to URLs irrespective of their case._If enabled a method mapped to "/users" won't match to "/Users/"._<p>The default value is {@code false}.;public PathMatchConfigurer setUseCaseSensitiveMatch(Boolean caseSensitiveMatch) {_		this.caseSensitiveMatch = caseSensitiveMatch__		return this__	};whether,to,match,to,urls,irrespective,of,their,case,if,enabled,a,method,mapped,to,users,won,t,match,to,users,p,the,default,value,is,code,false;public,path,match,configurer,set,use,case,sensitive,match,boolean,case,sensitive,match,this,case,sensitive,match,case,sensitive,match,return,this
PathMatchConfigurer -> public PathMatchConfigurer setUseCaseSensitiveMatch(Boolean caseSensitiveMatch);1528486327;Whether to match to URLs irrespective of their case._If enabled a method mapped to "/users" won't match to "/Users/"._<p>The default value is {@code false}.;public PathMatchConfigurer setUseCaseSensitiveMatch(Boolean caseSensitiveMatch) {_		this.caseSensitiveMatch = caseSensitiveMatch__		return this__	};whether,to,match,to,urls,irrespective,of,their,case,if,enabled,a,method,mapped,to,users,won,t,match,to,users,p,the,default,value,is,code,false;public,path,match,configurer,set,use,case,sensitive,match,boolean,case,sensitive,match,this,case,sensitive,match,case,sensitive,match,return,this
PathMatchConfigurer -> public PathMatchConfigurer setUseCaseSensitiveMatch(Boolean caseSensitiveMatch);1530190293;Whether to match to URLs irrespective of their case._If enabled a method mapped to "/users" won't match to "/Users/"._<p>The default value is {@code false}.;public PathMatchConfigurer setUseCaseSensitiveMatch(Boolean caseSensitiveMatch) {_		this.caseSensitiveMatch = caseSensitiveMatch__		return this__	};whether,to,match,to,urls,irrespective,of,their,case,if,enabled,a,method,mapped,to,users,won,t,match,to,users,p,the,default,value,is,code,false;public,path,match,configurer,set,use,case,sensitive,match,boolean,case,sensitive,match,this,case,sensitive,match,case,sensitive,match,return,this
PathMatchConfigurer -> public PathMatchConfigurer setUseCaseSensitiveMatch(Boolean caseSensitiveMatch);1532520962;Whether to match to URLs irrespective of their case._If enabled a method mapped to "/users" won't match to "/Users/"._<p>The default value is {@code false}.;public PathMatchConfigurer setUseCaseSensitiveMatch(Boolean caseSensitiveMatch) {_		this.caseSensitiveMatch = caseSensitiveMatch__		return this__	};whether,to,match,to,urls,irrespective,of,their,case,if,enabled,a,method,mapped,to,users,won,t,match,to,users,p,the,default,value,is,code,false;public,path,match,configurer,set,use,case,sensitive,match,boolean,case,sensitive,match,this,case,sensitive,match,case,sensitive,match,return,this
PathMatchConfigurer -> public PathMatchConfigurer setUseTrailingSlashMatch(Boolean trailingSlashMatch);1485986572;Whether to match to URLs irrespective of the presence of a trailing slash._If enabled a method mapped to "/users" also matches to "/users/"._<p>The default value is {@code true}.;public PathMatchConfigurer setUseTrailingSlashMatch(Boolean trailingSlashMatch) {_		this.trailingSlashMatch = trailingSlashMatch__		return this__	};whether,to,match,to,urls,irrespective,of,the,presence,of,a,trailing,slash,if,enabled,a,method,mapped,to,users,also,matches,to,users,p,the,default,value,is,code,true;public,path,match,configurer,set,use,trailing,slash,match,boolean,trailing,slash,match,this,trailing,slash,match,trailing,slash,match,return,this
PathMatchConfigurer -> public PathMatchConfigurer setUseTrailingSlashMatch(Boolean trailingSlashMatch);1486635693;Whether to match to URLs irrespective of the presence of a trailing slash._If enabled a method mapped to "/users" also matches to "/users/"._<p>The default value is {@code true}.;public PathMatchConfigurer setUseTrailingSlashMatch(Boolean trailingSlashMatch) {_		this.trailingSlashMatch = trailingSlashMatch__		return this__	};whether,to,match,to,urls,irrespective,of,the,presence,of,a,trailing,slash,if,enabled,a,method,mapped,to,users,also,matches,to,users,p,the,default,value,is,code,true;public,path,match,configurer,set,use,trailing,slash,match,boolean,trailing,slash,match,this,trailing,slash,match,trailing,slash,match,return,this
PathMatchConfigurer -> public PathMatchConfigurer setUseTrailingSlashMatch(Boolean trailingSlashMatch);1486747801;Whether to match to URLs irrespective of the presence of a trailing slash._If enabled a method mapped to "/users" also matches to "/users/"._<p>The default value is {@code true}.;public PathMatchConfigurer setUseTrailingSlashMatch(Boolean trailingSlashMatch) {_		this.trailingSlashMatch = trailingSlashMatch__		return this__	};whether,to,match,to,urls,irrespective,of,the,presence,of,a,trailing,slash,if,enabled,a,method,mapped,to,users,also,matches,to,users,p,the,default,value,is,code,true;public,path,match,configurer,set,use,trailing,slash,match,boolean,trailing,slash,match,this,trailing,slash,match,trailing,slash,match,return,this
PathMatchConfigurer -> public PathMatchConfigurer setUseTrailingSlashMatch(Boolean trailingSlashMatch);1486747828;Whether to match to URLs irrespective of the presence of a trailing slash._If enabled a method mapped to "/users" also matches to "/users/"._<p>The default value is {@code true}.;public PathMatchConfigurer setUseTrailingSlashMatch(Boolean trailingSlashMatch) {_		this.trailingSlashMatch = trailingSlashMatch__		return this__	};whether,to,match,to,urls,irrespective,of,the,presence,of,a,trailing,slash,if,enabled,a,method,mapped,to,users,also,matches,to,users,p,the,default,value,is,code,true;public,path,match,configurer,set,use,trailing,slash,match,boolean,trailing,slash,match,this,trailing,slash,match,trailing,slash,match,return,this
PathMatchConfigurer -> public PathMatchConfigurer setUseTrailingSlashMatch(Boolean trailingSlashMatch);1495035625;Whether to match to URLs irrespective of the presence of a trailing slash._If enabled a method mapped to "/users" also matches to "/users/"._<p>The default value is {@code true}.;public PathMatchConfigurer setUseTrailingSlashMatch(Boolean trailingSlashMatch) {_		this.trailingSlashMatch = trailingSlashMatch__		return this__	};whether,to,match,to,urls,irrespective,of,the,presence,of,a,trailing,slash,if,enabled,a,method,mapped,to,users,also,matches,to,users,p,the,default,value,is,code,true;public,path,match,configurer,set,use,trailing,slash,match,boolean,trailing,slash,match,this,trailing,slash,match,trailing,slash,match,return,this
PathMatchConfigurer -> public PathMatchConfigurer setUseTrailingSlashMatch(Boolean trailingSlashMatch);1496334618;Whether to match to URLs irrespective of the presence of a trailing slash._If enabled a method mapped to "/users" also matches to "/users/"._<p>The default value is {@code true}.;public PathMatchConfigurer setUseTrailingSlashMatch(Boolean trailingSlashMatch) {_		this.trailingSlashMatch = trailingSlashMatch__		return this__	};whether,to,match,to,urls,irrespective,of,the,presence,of,a,trailing,slash,if,enabled,a,method,mapped,to,users,also,matches,to,users,p,the,default,value,is,code,true;public,path,match,configurer,set,use,trailing,slash,match,boolean,trailing,slash,match,this,trailing,slash,match,trailing,slash,match,return,this
PathMatchConfigurer -> public PathMatchConfigurer setUseTrailingSlashMatch(Boolean trailingSlashMatch);1496837955;Whether to match to URLs irrespective of the presence of a trailing slash._If enabled a method mapped to "/users" also matches to "/users/"._<p>The default value is {@code true}.;public PathMatchConfigurer setUseTrailingSlashMatch(Boolean trailingSlashMatch) {_		this.trailingSlashMatch = trailingSlashMatch__		return this__	};whether,to,match,to,urls,irrespective,of,the,presence,of,a,trailing,slash,if,enabled,a,method,mapped,to,users,also,matches,to,users,p,the,default,value,is,code,true;public,path,match,configurer,set,use,trailing,slash,match,boolean,trailing,slash,match,this,trailing,slash,match,trailing,slash,match,return,this
PathMatchConfigurer -> public PathMatchConfigurer setUseTrailingSlashMatch(Boolean trailingSlashMatch);1497039338;Whether to match to URLs irrespective of the presence of a trailing slash._If enabled a method mapped to "/users" also matches to "/users/"._<p>The default value is {@code true}.;public PathMatchConfigurer setUseTrailingSlashMatch(Boolean trailingSlashMatch) {_		this.trailingSlashMatch = trailingSlashMatch__		return this__	};whether,to,match,to,urls,irrespective,of,the,presence,of,a,trailing,slash,if,enabled,a,method,mapped,to,users,also,matches,to,users,p,the,default,value,is,code,true;public,path,match,configurer,set,use,trailing,slash,match,boolean,trailing,slash,match,this,trailing,slash,match,trailing,slash,match,return,this
PathMatchConfigurer -> public PathMatchConfigurer setUseTrailingSlashMatch(Boolean trailingSlashMatch);1497286385;Whether to match to URLs irrespective of the presence of a trailing slash._If enabled a method mapped to "/users" also matches to "/users/"._<p>The default value is {@code true}.;public PathMatchConfigurer setUseTrailingSlashMatch(Boolean trailingSlashMatch) {_		this.trailingSlashMatch = trailingSlashMatch__		return this__	};whether,to,match,to,urls,irrespective,of,the,presence,of,a,trailing,slash,if,enabled,a,method,mapped,to,users,also,matches,to,users,p,the,default,value,is,code,true;public,path,match,configurer,set,use,trailing,slash,match,boolean,trailing,slash,match,this,trailing,slash,match,trailing,slash,match,return,this
PathMatchConfigurer -> public PathMatchConfigurer setUseTrailingSlashMatch(Boolean trailingSlashMatch);1500495740;Whether to match to URLs irrespective of the presence of a trailing slash._If enabled a method mapped to "/users" also matches to "/users/"._<p>The default value is {@code true}.;public PathMatchConfigurer setUseTrailingSlashMatch(Boolean trailingSlashMatch) {_		this.trailingSlashMatch = trailingSlashMatch__		return this__	};whether,to,match,to,urls,irrespective,of,the,presence,of,a,trailing,slash,if,enabled,a,method,mapped,to,users,also,matches,to,users,p,the,default,value,is,code,true;public,path,match,configurer,set,use,trailing,slash,match,boolean,trailing,slash,match,this,trailing,slash,match,trailing,slash,match,return,this
PathMatchConfigurer -> public PathMatchConfigurer setUseTrailingSlashMatch(Boolean trailingSlashMatch);1501237594;Whether to match to URLs irrespective of the presence of a trailing slash._If enabled a method mapped to "/users" also matches to "/users/"._<p>The default value is {@code true}.;public PathMatchConfigurer setUseTrailingSlashMatch(Boolean trailingSlashMatch) {_		this.trailingSlashMatch = trailingSlashMatch__		return this__	};whether,to,match,to,urls,irrespective,of,the,presence,of,a,trailing,slash,if,enabled,a,method,mapped,to,users,also,matches,to,users,p,the,default,value,is,code,true;public,path,match,configurer,set,use,trailing,slash,match,boolean,trailing,slash,match,this,trailing,slash,match,trailing,slash,match,return,this
PathMatchConfigurer -> public PathMatchConfigurer setUseTrailingSlashMatch(Boolean trailingSlashMatch);1528409922;Whether to match to URLs irrespective of the presence of a trailing slash._If enabled a method mapped to "/users" also matches to "/users/"._<p>The default value is {@code true}.;public PathMatchConfigurer setUseTrailingSlashMatch(Boolean trailingSlashMatch) {_		this.trailingSlashMatch = trailingSlashMatch__		return this__	};whether,to,match,to,urls,irrespective,of,the,presence,of,a,trailing,slash,if,enabled,a,method,mapped,to,users,also,matches,to,users,p,the,default,value,is,code,true;public,path,match,configurer,set,use,trailing,slash,match,boolean,trailing,slash,match,this,trailing,slash,match,trailing,slash,match,return,this
PathMatchConfigurer -> public PathMatchConfigurer setUseTrailingSlashMatch(Boolean trailingSlashMatch);1528486327;Whether to match to URLs irrespective of the presence of a trailing slash._If enabled a method mapped to "/users" also matches to "/users/"._<p>The default value is {@code true}.;public PathMatchConfigurer setUseTrailingSlashMatch(Boolean trailingSlashMatch) {_		this.trailingSlashMatch = trailingSlashMatch__		return this__	};whether,to,match,to,urls,irrespective,of,the,presence,of,a,trailing,slash,if,enabled,a,method,mapped,to,users,also,matches,to,users,p,the,default,value,is,code,true;public,path,match,configurer,set,use,trailing,slash,match,boolean,trailing,slash,match,this,trailing,slash,match,trailing,slash,match,return,this
PathMatchConfigurer -> public PathMatchConfigurer setUseTrailingSlashMatch(Boolean trailingSlashMatch);1530190293;Whether to match to URLs irrespective of the presence of a trailing slash._If enabled a method mapped to "/users" also matches to "/users/"._<p>The default value is {@code true}.;public PathMatchConfigurer setUseTrailingSlashMatch(Boolean trailingSlashMatch) {_		this.trailingSlashMatch = trailingSlashMatch__		return this__	};whether,to,match,to,urls,irrespective,of,the,presence,of,a,trailing,slash,if,enabled,a,method,mapped,to,users,also,matches,to,users,p,the,default,value,is,code,true;public,path,match,configurer,set,use,trailing,slash,match,boolean,trailing,slash,match,this,trailing,slash,match,trailing,slash,match,return,this
PathMatchConfigurer -> public PathMatchConfigurer setUseTrailingSlashMatch(Boolean trailingSlashMatch);1532520962;Whether to match to URLs irrespective of the presence of a trailing slash._If enabled a method mapped to "/users" also matches to "/users/"._<p>The default value is {@code true}.;public PathMatchConfigurer setUseTrailingSlashMatch(Boolean trailingSlashMatch) {_		this.trailingSlashMatch = trailingSlashMatch__		return this__	};whether,to,match,to,urls,irrespective,of,the,presence,of,a,trailing,slash,if,enabled,a,method,mapped,to,users,also,matches,to,users,p,the,default,value,is,code,true;public,path,match,configurer,set,use,trailing,slash,match,boolean,trailing,slash,match,this,trailing,slash,match,trailing,slash,match,return,this
PathMatchConfigurer -> public PathMatchConfigurer addPathPrefix(String prefix, Predicate<Class<?>> predicate);1528486327;Configure a path prefix to apply to matching controller methods._<p>Prefixes are used to enrich the mappings of every {@code @RequestMapping}_method whose controller type is matched by the corresponding_{@code Predicate}. The prefix for the first matching predicate is used._<p>Consider using {@link org.springframework.web.method.HandlerTypePredicate_HandlerTypePredicate} to group controllers._@param prefix the path prefix to apply_@param predicate a predicate for matching controller types_@since 5.1;public PathMatchConfigurer addPathPrefix(String prefix, Predicate<Class<?>> predicate) {_		this.pathPrefixes = this.pathPrefixes == null ? new LinkedHashMap<>() : this.pathPrefixes__		this.pathPrefixes.put(prefix, predicate)__		return this__	};configure,a,path,prefix,to,apply,to,matching,controller,methods,p,prefixes,are,used,to,enrich,the,mappings,of,every,code,request,mapping,method,whose,controller,type,is,matched,by,the,corresponding,code,predicate,the,prefix,for,the,first,matching,predicate,is,used,p,consider,using,link,org,springframework,web,method,handler,type,predicate,handler,type,predicate,to,group,controllers,param,prefix,the,path,prefix,to,apply,param,predicate,a,predicate,for,matching,controller,types,since,5,1;public,path,match,configurer,add,path,prefix,string,prefix,predicate,class,predicate,this,path,prefixes,this,path,prefixes,null,new,linked,hash,map,this,path,prefixes,this,path,prefixes,put,prefix,predicate,return,this
PathMatchConfigurer -> public PathMatchConfigurer addPathPrefix(String prefix, Predicate<Class<?>> predicate);1530190293;Configure a path prefix to apply to matching controller methods._<p>Prefixes are used to enrich the mappings of every {@code @RequestMapping}_method whose controller type is matched by the corresponding_{@code Predicate}. The prefix for the first matching predicate is used._<p>Consider using {@link org.springframework.web.method.HandlerTypePredicate_HandlerTypePredicate} to group controllers._@param prefix the path prefix to apply_@param predicate a predicate for matching controller types_@since 5.1;public PathMatchConfigurer addPathPrefix(String prefix, Predicate<Class<?>> predicate) {_		if (this.pathPrefixes == null) {_			this.pathPrefixes = new LinkedHashMap<>()__		}_		this.pathPrefixes.put(prefix, predicate)__		return this__	};configure,a,path,prefix,to,apply,to,matching,controller,methods,p,prefixes,are,used,to,enrich,the,mappings,of,every,code,request,mapping,method,whose,controller,type,is,matched,by,the,corresponding,code,predicate,the,prefix,for,the,first,matching,predicate,is,used,p,consider,using,link,org,springframework,web,method,handler,type,predicate,handler,type,predicate,to,group,controllers,param,prefix,the,path,prefix,to,apply,param,predicate,a,predicate,for,matching,controller,types,since,5,1;public,path,match,configurer,add,path,prefix,string,prefix,predicate,class,predicate,if,this,path,prefixes,null,this,path,prefixes,new,linked,hash,map,this,path,prefixes,put,prefix,predicate,return,this
PathMatchConfigurer -> public PathMatchConfigurer addPathPrefix(String prefix, Predicate<Class<?>> predicate);1532520962;Configure a path prefix to apply to matching controller methods._<p>Prefixes are used to enrich the mappings of every {@code @RequestMapping}_method whose controller type is matched by the corresponding_{@code Predicate}. The prefix for the first matching predicate is used._<p>Consider using {@link org.springframework.web.method.HandlerTypePredicate_HandlerTypePredicate} to group controllers._@param prefix the path prefix to apply_@param predicate a predicate for matching controller types_@since 5.1;public PathMatchConfigurer addPathPrefix(String prefix, Predicate<Class<?>> predicate) {_		if (this.pathPrefixes == null) {_			this.pathPrefixes = new LinkedHashMap<>()__		}_		this.pathPrefixes.put(prefix, predicate)__		return this__	};configure,a,path,prefix,to,apply,to,matching,controller,methods,p,prefixes,are,used,to,enrich,the,mappings,of,every,code,request,mapping,method,whose,controller,type,is,matched,by,the,corresponding,code,predicate,the,prefix,for,the,first,matching,predicate,is,used,p,consider,using,link,org,springframework,web,method,handler,type,predicate,handler,type,predicate,to,group,controllers,param,prefix,the,path,prefix,to,apply,param,predicate,a,predicate,for,matching,controller,types,since,5,1;public,path,match,configurer,add,path,prefix,string,prefix,predicate,class,predicate,if,this,path,prefixes,null,this,path,prefixes,new,linked,hash,map,this,path,prefixes,put,prefix,predicate,return,this
PathMatchConfigurer -> public PathMatchConfigurer setPathMatcher(PathMatcher pathMatcher);1485986572;Set the PathMatcher for matching URL paths against registered URL patterns._<p>Default is {@link org.springframework.util.AntPathMatcher AntPathMatcher}.;public PathMatchConfigurer setPathMatcher(PathMatcher pathMatcher) {_		this.pathMatcher = pathMatcher__		return this__	};set,the,path,matcher,for,matching,url,paths,against,registered,url,patterns,p,default,is,link,org,springframework,util,ant,path,matcher,ant,path,matcher;public,path,match,configurer,set,path,matcher,path,matcher,path,matcher,this,path,matcher,path,matcher,return,this
PathMatchConfigurer -> public PathMatchConfigurer setPathMatcher(PathMatcher pathMatcher);1486635693;Set the PathMatcher for matching URL paths against registered URL patterns._<p>Default is {@link org.springframework.util.AntPathMatcher AntPathMatcher}.;public PathMatchConfigurer setPathMatcher(PathMatcher pathMatcher) {_		this.pathMatcher = pathMatcher__		return this__	};set,the,path,matcher,for,matching,url,paths,against,registered,url,patterns,p,default,is,link,org,springframework,util,ant,path,matcher,ant,path,matcher;public,path,match,configurer,set,path,matcher,path,matcher,path,matcher,this,path,matcher,path,matcher,return,this
PathMatchConfigurer -> public PathMatchConfigurer setPathMatcher(PathMatcher pathMatcher);1486747801;Set the PathMatcher for matching URL paths against registered URL patterns._<p>Default is {@link org.springframework.util.AntPathMatcher AntPathMatcher}.;public PathMatchConfigurer setPathMatcher(PathMatcher pathMatcher) {_		this.pathMatcher = pathMatcher__		return this__	};set,the,path,matcher,for,matching,url,paths,against,registered,url,patterns,p,default,is,link,org,springframework,util,ant,path,matcher,ant,path,matcher;public,path,match,configurer,set,path,matcher,path,matcher,path,matcher,this,path,matcher,path,matcher,return,this
PathMatchConfigurer -> public PathMatchConfigurer setPathMatcher(PathMatcher pathMatcher);1486747828;Set the PathMatcher for matching URL paths against registered URL patterns._<p>Default is {@link org.springframework.web.util.ParsingPathMatcher ParsingPathMatcher}.;public PathMatchConfigurer setPathMatcher(PathMatcher pathMatcher) {_		this.pathMatcher = pathMatcher__		return this__	};set,the,path,matcher,for,matching,url,paths,against,registered,url,patterns,p,default,is,link,org,springframework,web,util,parsing,path,matcher,parsing,path,matcher;public,path,match,configurer,set,path,matcher,path,matcher,path,matcher,this,path,matcher,path,matcher,return,this
PathMatchConfigurer -> public PathMatchConfigurer setPathMatcher(PathMatcher pathMatcher);1495035625;Set the PathMatcher for matching URL paths against registered URL patterns._<p>The default is a {@link org.springframework.web.util.pattern.ParsingPathMatcher}.;public PathMatchConfigurer setPathMatcher(PathMatcher pathMatcher) {_		this.pathMatcher = pathMatcher__		return this__	};set,the,path,matcher,for,matching,url,paths,against,registered,url,patterns,p,the,default,is,a,link,org,springframework,web,util,pattern,parsing,path,matcher;public,path,match,configurer,set,path,matcher,path,matcher,path,matcher,this,path,matcher,path,matcher,return,this
PathMatchConfigurer -> public PathMatchConfigurer setPathMatcher(PathMatcher pathMatcher);1496334618;Set the PathMatcher for matching URL paths against registered URL patterns._<p>The default is a {@link org.springframework.web.util.pattern.ParsingPathMatcher}.;public PathMatchConfigurer setPathMatcher(PathMatcher pathMatcher) {_		this.pathMatcher = pathMatcher__		return this__	};set,the,path,matcher,for,matching,url,paths,against,registered,url,patterns,p,the,default,is,a,link,org,springframework,web,util,pattern,parsing,path,matcher;public,path,match,configurer,set,path,matcher,path,matcher,path,matcher,this,path,matcher,path,matcher,return,this
PathMatchConfigurer -> public PathMatchConfigurer setPathMatcher(PathMatcher pathMatcher);1496837955;Set the PathMatcher for matching URL paths against registered URL patterns._<p>The default is a {@link org.springframework.web.util.pattern.ParsingPathMatcher}.;public PathMatchConfigurer setPathMatcher(PathMatcher pathMatcher) {_		this.pathMatcher = pathMatcher__		return this__	};set,the,path,matcher,for,matching,url,paths,against,registered,url,patterns,p,the,default,is,a,link,org,springframework,web,util,pattern,parsing,path,matcher;public,path,match,configurer,set,path,matcher,path,matcher,path,matcher,this,path,matcher,path,matcher,return,this
PathMatchConfigurer -> public PathMatchConfigurer setPathMatcher(PathMatcher pathMatcher);1497039338;Set the PathMatcher for matching URL paths against registered URL patterns._<p>The default is a {@link org.springframework.web.util.pattern.ParsingPathMatcher}.;public PathMatchConfigurer setPathMatcher(PathMatcher pathMatcher) {_		this.pathMatcher = pathMatcher__		return this__	};set,the,path,matcher,for,matching,url,paths,against,registered,url,patterns,p,the,default,is,a,link,org,springframework,web,util,pattern,parsing,path,matcher;public,path,match,configurer,set,path,matcher,path,matcher,path,matcher,this,path,matcher,path,matcher,return,this
