commented;modifiers;parameterAmount;loc;comment;code
true;public;1;4;/**  * Whether to match to URLs irrespective of their case.  * If enabled a method mapped to "/users" won't match to "/Users/".  * <p>The default value is {@code false}.  */ ;/**  * Whether to match to URLs irrespective of their case.  * If enabled a method mapped to "/users" won't match to "/Users/".  * <p>The default value is {@code false}.  */ public PathMatchConfigurer setUseCaseSensitiveMatch(Boolean caseSensitiveMatch) {     this.caseSensitiveMatch = caseSensitiveMatch.     return this. }
true;public;1;4;/**  * Whether to match to URLs irrespective of the presence of a trailing slash.  * If enabled a method mapped to "/users" also matches to "/users/".  * <p>The default value is {@code true}.  */ ;/**  * Whether to match to URLs irrespective of the presence of a trailing slash.  * If enabled a method mapped to "/users" also matches to "/users/".  * <p>The default value is {@code true}.  */ public PathMatchConfigurer setUseTrailingSlashMatch(Boolean trailingSlashMatch) {     this.trailingSlashMatch = trailingSlashMatch.     return this. }
true;public;2;7;/**  * Configure a path prefix to apply to matching controller methods.  * <p>Prefixes are used to enrich the mappings of every {@code @RequestMapping}  * method whose controller type is matched by the corresponding  * {@code Predicate}. The prefix for the first matching predicate is used.  * <p>Consider using {@link org.springframework.web.method.HandlerTypePredicate  * HandlerTypePredicate} to group controllers.  * @param prefix the path prefix to apply  * @param predicate a predicate for matching controller types  * @since 5.1  */ ;/**  * Configure a path prefix to apply to matching controller methods.  * <p>Prefixes are used to enrich the mappings of every {@code @RequestMapping}  * method whose controller type is matched by the corresponding  * {@code Predicate}. The prefix for the first matching predicate is used.  * <p>Consider using {@link org.springframework.web.method.HandlerTypePredicate  * HandlerTypePredicate} to group controllers.  * @param prefix the path prefix to apply  * @param predicate a predicate for matching controller types  * @since 5.1  */ public PathMatchConfigurer addPathPrefix(String prefix, Predicate<Class<?>> predicate) {     if (this.pathPrefixes == null) {         this.pathPrefixes = new LinkedHashMap<>().     }     this.pathPrefixes.put(prefix, predicate).     return this. }
false;protected;0;4;;@Nullable protected Boolean isUseTrailingSlashMatch() {     return this.trailingSlashMatch. }
false;protected;0;4;;@Nullable protected Boolean isUseCaseSensitiveMatch() {     return this.caseSensitiveMatch. }
false;protected;0;4;;@Nullable protected Map<String, Predicate<Class<?>>> getPathPrefixes() {     return this.pathPrefixes. }
