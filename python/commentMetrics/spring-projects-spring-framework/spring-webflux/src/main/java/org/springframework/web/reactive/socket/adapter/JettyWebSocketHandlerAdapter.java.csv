commented;modifiers;parameterAmount;loc;comment;code
false;public;1;5;;@OnWebSocketConnect public void onWebSocketConnect(Session session) {     this.delegateSession = this.sessionFactory.apply(session).     this.delegateHandler.handle(this.delegateSession).subscribe(this.delegateSession). }
false;public;1;7;;@OnWebSocketMessage public void onWebSocketText(String message) {     if (this.delegateSession != null) {         WebSocketMessage webSocketMessage = toMessage(Type.TEXT, message).         this.delegateSession.handleMessage(webSocketMessage.getType(), webSocketMessage).     } }
false;public;3;8;;@OnWebSocketMessage public void onWebSocketBinary(byte[] message, int offset, int length) {     if (this.delegateSession != null) {         ByteBuffer buffer = ByteBuffer.wrap(message, offset, length).         WebSocketMessage webSocketMessage = toMessage(Type.BINARY, buffer).         this.delegateSession.handleMessage(webSocketMessage.getType(), webSocketMessage).     } }
false;public;1;10;;@OnWebSocketFrame public void onWebSocketFrame(Frame frame) {     if (this.delegateSession != null) {         if (OpCode.PONG == frame.getOpCode()) {             ByteBuffer buffer = (frame.getPayload() != null ? frame.getPayload() : EMPTY_PAYLOAD).             WebSocketMessage webSocketMessage = toMessage(Type.PONG, buffer).             this.delegateSession.handleMessage(webSocketMessage.getType(), webSocketMessage).         }     } }
false;private;2;20;;private <T> WebSocketMessage toMessage(Type type, T message) {     WebSocketSession session = this.delegateSession.     Assert.state(session != null, "Cannot create message without a session").     if (Type.TEXT.equals(type)) {         byte[] bytes = ((String) message).getBytes(StandardCharsets.UTF_8).         DataBuffer buffer = session.bufferFactory().wrap(bytes).         return new WebSocketMessage(Type.TEXT, buffer).     } else if (Type.BINARY.equals(type)) {         DataBuffer buffer = session.bufferFactory().wrap((ByteBuffer) message).         return new WebSocketMessage(Type.BINARY, buffer).     } else if (Type.PONG.equals(type)) {         DataBuffer buffer = session.bufferFactory().wrap((ByteBuffer) message).         return new WebSocketMessage(Type.PONG, buffer).     } else {         throw new IllegalArgumentException("Unexpected message type: " + message).     } }
false;public;2;6;;@OnWebSocketClose public void onWebSocketClose(int statusCode, String reason) {     if (this.delegateSession != null) {         this.delegateSession.handleClose(new CloseStatus(statusCode, reason)).     } }
false;public;1;6;;@OnWebSocketError public void onWebSocketError(Throwable cause) {     if (this.delegateSession != null) {         this.delegateSession.handleError(cause).     } }
