commented;modifiers;parameterAmount;loc;comment;code
false;public;1;5;;@Override public boolean supportsParameter(MethodParameter parameter) {     return checkParameterTypeNoReactiveWrapper(parameter, type -> HttpEntity.class.equals(type) || RequestEntity.class.equals(type)). }
false;public;3;9;;@Override public Mono<Object> resolveArgument(MethodParameter parameter, BindingContext bindingContext, ServerWebExchange exchange) {     Class<?> entityType = parameter.getParameterType().     return readBody(parameter.nested(), parameter, false, bindingContext, exchange).map(body -> createEntity(body, entityType, exchange.getRequest())).defaultIfEmpty(createEntity(null, entityType, exchange.getRequest())). }
false;private;3;5;;private Object createEntity(@Nullable Object body, Class<?> entityType, ServerHttpRequest request) {     return (RequestEntity.class.equals(entityType) ? new RequestEntity<>(body, request.getHeaders(), request.getMethod(), request.getURI()) : new HttpEntity<>(body, request.getHeaders())). }
