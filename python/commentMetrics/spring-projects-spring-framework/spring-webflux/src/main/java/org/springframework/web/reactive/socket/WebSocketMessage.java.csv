# id;timestamp;commentText;codeText;commentWords;codeWords
WebSocketMessage -> public DataBuffer getPayload();1485986572;Return the message payload.;public DataBuffer getPayload() {_		return this.payload__	};return,the,message,payload;public,data,buffer,get,payload,return,this,payload
WebSocketMessage -> public DataBuffer getPayload();1519587673;Return the message payload.;public DataBuffer getPayload() {_		return this.payload__	};return,the,message,payload;public,data,buffer,get,payload,return,this,payload
WebSocketMessage -> public DataBuffer getPayload();1530906258;Return the message payload.;public DataBuffer getPayload() {_		return this.payload__	};return,the,message,payload;public,data,buffer,get,payload,return,this,payload
WebSocketMessage -> public WebSocketMessage retain();1485986572;Retain the data buffer for the message payload, which is useful on_runtimes (e.g. Netty) with pooled buffers. A shortcut for:_<pre>_DataBuffer payload = message.getPayload()__DataBufferUtils.retain(payload)__</pre>_@see DataBufferUtils#retain(DataBuffer);public WebSocketMessage retain() {_		DataBufferUtils.retain(this.payload)__		return this__	};retain,the,data,buffer,for,the,message,payload,which,is,useful,on,runtimes,e,g,netty,with,pooled,buffers,a,shortcut,for,pre,data,buffer,payload,message,get,payload,data,buffer,utils,retain,payload,pre,see,data,buffer,utils,retain,data,buffer;public,web,socket,message,retain,data,buffer,utils,retain,this,payload,return,this
WebSocketMessage -> public WebSocketMessage retain();1519587673;Retain the data buffer for the message payload, which is useful on_runtimes (e.g. Netty) with pooled buffers. A shortcut for:_<pre>_DataBuffer payload = message.getPayload()__DataBufferUtils.retain(payload)__</pre>_@see DataBufferUtils#retain(DataBuffer);public WebSocketMessage retain() {_		DataBufferUtils.retain(this.payload)__		return this__	};retain,the,data,buffer,for,the,message,payload,which,is,useful,on,runtimes,e,g,netty,with,pooled,buffers,a,shortcut,for,pre,data,buffer,payload,message,get,payload,data,buffer,utils,retain,payload,pre,see,data,buffer,utils,retain,data,buffer;public,web,socket,message,retain,data,buffer,utils,retain,this,payload,return,this
WebSocketMessage -> public WebSocketMessage retain();1530906258;Retain the data buffer for the message payload, which is useful on_runtimes (e.g. Netty) with pooled buffers. A shortcut for:_<pre>_DataBuffer payload = message.getPayload()__DataBufferUtils.retain(payload)__</pre>_@see DataBufferUtils#retain(DataBuffer);public WebSocketMessage retain() {_		DataBufferUtils.retain(this.payload)__		return this__	};retain,the,data,buffer,for,the,message,payload,which,is,useful,on,runtimes,e,g,netty,with,pooled,buffers,a,shortcut,for,pre,data,buffer,payload,message,get,payload,data,buffer,utils,retain,payload,pre,see,data,buffer,utils,retain,data,buffer;public,web,socket,message,retain,data,buffer,utils,retain,this,payload,return,this
WebSocketMessage -> public void release();1485986572;Release the payload {@code DataBuffer} which is useful on runtimes_(e.g. Netty) with pooled buffers such as Netty. A shortcut for:_<pre>_DataBuffer payload = message.getPayload()__DataBufferUtils.release(payload)__</pre>_@see DataBufferUtils#release(DataBuffer);public void release() {_		DataBufferUtils.release(this.payload)__	};release,the,payload,code,data,buffer,which,is,useful,on,runtimes,e,g,netty,with,pooled,buffers,such,as,netty,a,shortcut,for,pre,data,buffer,payload,message,get,payload,data,buffer,utils,release,payload,pre,see,data,buffer,utils,release,data,buffer;public,void,release,data,buffer,utils,release,this,payload
WebSocketMessage -> public void release();1519587673;Release the payload {@code DataBuffer} which is useful on runtimes_(e.g. Netty) with pooled buffers such as Netty. A shortcut for:_<pre>_DataBuffer payload = message.getPayload()__DataBufferUtils.release(payload)__</pre>_@see DataBufferUtils#release(DataBuffer);public void release() {_		DataBufferUtils.release(this.payload)__	};release,the,payload,code,data,buffer,which,is,useful,on,runtimes,e,g,netty,with,pooled,buffers,such,as,netty,a,shortcut,for,pre,data,buffer,payload,message,get,payload,data,buffer,utils,release,payload,pre,see,data,buffer,utils,release,data,buffer;public,void,release,data,buffer,utils,release,this,payload
WebSocketMessage -> public void release();1530906258;Release the payload {@code DataBuffer} which is useful on runtimes_(e.g. Netty) with pooled buffers such as Netty. A shortcut for:_<pre>_DataBuffer payload = message.getPayload()__DataBufferUtils.release(payload)__</pre>_@see DataBufferUtils#release(DataBuffer);public void release() {_		DataBufferUtils.release(this.payload)__	};release,the,payload,code,data,buffer,which,is,useful,on,runtimes,e,g,netty,with,pooled,buffers,such,as,netty,a,shortcut,for,pre,data,buffer,payload,message,get,payload,data,buffer,utils,release,payload,pre,see,data,buffer,utils,release,data,buffer;public,void,release,data,buffer,utils,release,this,payload
WebSocketMessage -> public WebSocketMessage(Type type, DataBuffer payload);1485986572;Constructor for a WebSocketMessage._<p>See static factory methods in {@link WebSocketSession} or alternatively_use {@link WebSocketSession#bufferFactory()} to create the payload and_then invoke this constructor.;public WebSocketMessage(Type type, DataBuffer payload) {_		Assert.notNull(type, "'type' must not be null")__		Assert.notNull(payload, "'payload' must not be null")__		this.type = type__		this.payload = payload__	};constructor,for,a,web,socket,message,p,see,static,factory,methods,in,link,web,socket,session,or,alternatively,use,link,web,socket,session,buffer,factory,to,create,the,payload,and,then,invoke,this,constructor;public,web,socket,message,type,type,data,buffer,payload,assert,not,null,type,type,must,not,be,null,assert,not,null,payload,payload,must,not,be,null,this,type,type,this,payload,payload
WebSocketMessage -> public WebSocketMessage(Type type, DataBuffer payload);1519587673;Constructor for a WebSocketMessage._<p>See static factory methods in {@link WebSocketSession} or alternatively_use {@link WebSocketSession#bufferFactory()} to create the payload and_then invoke this constructor.;public WebSocketMessage(Type type, DataBuffer payload) {_		Assert.notNull(type, "'type' must not be null")__		Assert.notNull(payload, "'payload' must not be null")__		this.type = type__		this.payload = payload__	};constructor,for,a,web,socket,message,p,see,static,factory,methods,in,link,web,socket,session,or,alternatively,use,link,web,socket,session,buffer,factory,to,create,the,payload,and,then,invoke,this,constructor;public,web,socket,message,type,type,data,buffer,payload,assert,not,null,type,type,must,not,be,null,assert,not,null,payload,payload,must,not,be,null,this,type,type,this,payload,payload
WebSocketMessage -> public WebSocketMessage(Type type, DataBuffer payload);1530906258;Constructor for a WebSocketMessage._<p>See static factory methods in {@link WebSocketSession} or alternatively_use {@link WebSocketSession#bufferFactory()} to create the payload and_then invoke this constructor.;public WebSocketMessage(Type type, DataBuffer payload) {_		Assert.notNull(type, "'type' must not be null")__		Assert.notNull(payload, "'payload' must not be null")__		this.type = type__		this.payload = payload__	};constructor,for,a,web,socket,message,p,see,static,factory,methods,in,link,web,socket,session,or,alternatively,use,link,web,socket,session,buffer,factory,to,create,the,payload,and,then,invoke,this,constructor;public,web,socket,message,type,type,data,buffer,payload,assert,not,null,type,type,must,not,be,null,assert,not,null,payload,payload,must,not,be,null,this,type,type,this,payload,payload
WebSocketMessage -> public Type getType();1485986572;Return the message type (text, binary, etc).;public Type getType() {_		return this.type__	};return,the,message,type,text,binary,etc;public,type,get,type,return,this,type
WebSocketMessage -> public Type getType();1519587673;Return the message type (text, binary, etc).;public Type getType() {_		return this.type__	};return,the,message,type,text,binary,etc;public,type,get,type,return,this,type
WebSocketMessage -> public Type getType();1530906258;Return the message type (text, binary, etc).;public Type getType() {_		return this.type__	};return,the,message,type,text,binary,etc;public,type,get,type,return,this,type
WebSocketMessage -> public String getPayloadAsText();1485986572;Return the message payload as UTF-8 text. This is a useful for text_WebSocket messages.;public String getPayloadAsText() {_		byte[] bytes = new byte[this.payload.readableByteCount()]__		this.payload.read(bytes)__		return new String(bytes, StandardCharsets.UTF_8)__	};return,the,message,payload,as,utf,8,text,this,is,a,useful,for,text,web,socket,messages;public,string,get,payload,as,text,byte,bytes,new,byte,this,payload,readable,byte,count,this,payload,read,bytes,return,new,string,bytes,standard,charsets
WebSocketMessage -> public String getPayloadAsText();1519587673;A variant of {@link #getPayloadAsText(Charset)} that uses {@code UTF-8}_for decoding the raw content to text.;public String getPayloadAsText() {_		return getPayloadAsText(StandardCharsets.UTF_8)__	};a,variant,of,link,get,payload,as,text,charset,that,uses,code,utf,8,for,decoding,the,raw,content,to,text;public,string,get,payload,as,text,return,get,payload,as,text,standard,charsets
WebSocketMessage -> public String getPayloadAsText();1530906258;A variant of {@link #getPayloadAsText(Charset)} that uses {@code UTF-8}_for decoding the raw content to text.;public String getPayloadAsText() {_		return getPayloadAsText(StandardCharsets.UTF_8)__	};a,variant,of,link,get,payload,as,text,charset,that,uses,code,utf,8,for,decoding,the,raw,content,to,text;public,string,get,payload,as,text,return,get,payload,as,text,standard,charsets
WebSocketMessage -> public String getPayloadAsText(Charset charset);1519587673;A shortcut for decoding the raw content of the message to text with the_given character encoding. This is useful for text WebSocket messages, or_otherwise when the payload is expected to contain text._@param charset the character encoding_@since 5.0.5;public String getPayloadAsText(Charset charset) {_		byte[] bytes = new byte[this.payload.readableByteCount()]__		this.payload.read(bytes)__		return new String(bytes, charset)__	};a,shortcut,for,decoding,the,raw,content,of,the,message,to,text,with,the,given,character,encoding,this,is,useful,for,text,web,socket,messages,or,otherwise,when,the,payload,is,expected,to,contain,text,param,charset,the,character,encoding,since,5,0,5;public,string,get,payload,as,text,charset,charset,byte,bytes,new,byte,this,payload,readable,byte,count,this,payload,read,bytes,return,new,string,bytes,charset
WebSocketMessage -> public String getPayloadAsText(Charset charset);1530906258;A shortcut for decoding the raw content of the message to text with the_given character encoding. This is useful for text WebSocket messages, or_otherwise when the payload is expected to contain text._@param charset the character encoding_@since 5.0.5;public String getPayloadAsText(Charset charset) {_		byte[] bytes = new byte[this.payload.readableByteCount()]__		this.payload.read(bytes)__		return new String(bytes, charset)__	};a,shortcut,for,decoding,the,raw,content,of,the,message,to,text,with,the,given,character,encoding,this,is,useful,for,text,web,socket,messages,or,otherwise,when,the,payload,is,expected,to,contain,text,param,charset,the,character,encoding,since,5,0,5;public,string,get,payload,as,text,charset,charset,byte,bytes,new,byte,this,payload,readable,byte,count,this,payload,read,bytes,return,new,string,bytes,charset
