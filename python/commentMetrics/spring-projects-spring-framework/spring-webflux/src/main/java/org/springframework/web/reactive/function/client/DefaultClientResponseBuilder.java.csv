commented;modifiers;parameterAmount;loc;comment;code
false;public;1;6;;@Override public DefaultClientResponseBuilder statusCode(HttpStatus statusCode) {     Assert.notNull(statusCode, "HttpStatus must not be null").     this.statusCode = statusCode.     return this. }
false;public;2;7;;@Override public ClientResponse.Builder header(String headerName, String... headerValues) {     for (String headerValue : headerValues) {         this.headers.add(headerName, headerValue).     }     return this. }
false;public;1;5;;@Override public ClientResponse.Builder headers(Consumer<HttpHeaders> headersConsumer) {     headersConsumer.accept(this.headers).     return this. }
false;public;2;7;;@Override public DefaultClientResponseBuilder cookie(String name, String... values) {     for (String value : values) {         this.cookies.add(name, ResponseCookie.from(name, value).build()).     }     return this. }
false;public;1;5;;@Override public ClientResponse.Builder cookies(Consumer<MultiValueMap<String, ResponseCookie>> cookiesConsumer) {     cookiesConsumer.accept(this.cookies).     return this. }
false;public;1;7;;@Override public ClientResponse.Builder body(Flux<DataBuffer> body) {     Assert.notNull(body, "Body must not be null").     releaseBody().     this.body = body.     return this. }
false;public;1;12;;@Override public ClientResponse.Builder body(String body) {     Assert.notNull(body, "Body must not be null").     releaseBody().     DataBufferFactory dataBufferFactory = new DefaultDataBufferFactory().     this.body = Flux.just(body).map(s -> {         byte[] bytes = body.getBytes(StandardCharsets.UTF_8).         return dataBufferFactory.wrap(bytes).     }).     return this. }
false;private;0;3;;private void releaseBody() {     this.body.subscribe(DataBufferUtils.releaseConsumer()). }
false;public;0;11;;@Override public ClientResponse build() {     ClientHttpResponse httpResponse = new BuiltClientHttpResponse(this.statusCode, this.headers, this.cookies, this.body).     return new DefaultClientResponse(httpResponse, this.strategies, ""). }
false;public;0;4;;@Override public HttpStatus getStatusCode() {     return this.statusCode. }
false;public;0;4;;@Override public int getRawStatusCode() {     return this.statusCode.value(). }
false;public;0;4;;@Override public HttpHeaders getHeaders() {     return this.headers. }
false;public;0;4;;@Override public MultiValueMap<String, ResponseCookie> getCookies() {     return this.cookies. }
false;public;0;4;;@Override public Flux<DataBuffer> getBody() {     return this.body. }
