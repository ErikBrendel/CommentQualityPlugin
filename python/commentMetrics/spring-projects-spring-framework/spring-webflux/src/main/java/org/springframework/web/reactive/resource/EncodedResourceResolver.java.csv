# id;timestamp;commentText;codeText;commentWords;codeWords
EncodedResourceResolver -> public void setContentCodings(List<String> codings);1527081441;Configure the supported content codings in order of preference. The first_coding that is present in the {@literal "Accept-Encoding"} header for a_given request, and that has a file present with the associated extension,_is used.__<p><strong>Note:</strong> Each coding must be associated with a file_extension via {@link #registerExtension} or {@link #setExtensions}.__<p>By default this property is set to {@literal ["br", "gzip"]}.__@param codings one or more supported content codings;public void setContentCodings(List<String> codings) {_		Assert.notEmpty(codings, "At least one content coding expected.")__		this.contentCodings.clear()__		this.contentCodings.addAll(codings)__	};configure,the,supported,content,codings,in,order,of,preference,the,first,coding,that,is,present,in,the,literal,accept,encoding,header,for,a,given,request,and,that,has,a,file,present,with,the,associated,extension,is,used,p,strong,note,strong,each,coding,must,be,associated,with,a,file,extension,via,link,register,extension,or,link,set,extensions,p,by,default,this,property,is,set,to,literal,br,gzip,param,codings,one,or,more,supported,content,codings;public,void,set,content,codings,list,string,codings,assert,not,empty,codings,at,least,one,content,coding,expected,this,content,codings,clear,this,content,codings,add,all,codings
EncodedResourceResolver -> public void setContentCodings(List<String> codings);1527081441;Configure the supported content codings in order of preference. The first_coding that is present in the {@literal "Accept-Encoding"} header for a_given request, and that has a file present with the associated extension,_is used.__<p><strong>Note:</strong> Each coding must be associated with a file_extension via {@link #registerExtension} or {@link #setExtensions}.__<p>By default this property is set to {@literal ["br", "gzip"]}.__@param codings one or more supported content codings;public void setContentCodings(List<String> codings) {_		Assert.notEmpty(codings, "At least one content coding expected.")__		this.contentCodings.clear()__		this.contentCodings.addAll(codings)__	};configure,the,supported,content,codings,in,order,of,preference,the,first,coding,that,is,present,in,the,literal,accept,encoding,header,for,a,given,request,and,that,has,a,file,present,with,the,associated,extension,is,used,p,strong,note,strong,each,coding,must,be,associated,with,a,file,extension,via,link,register,extension,or,link,set,extensions,p,by,default,this,property,is,set,to,literal,br,gzip,param,codings,one,or,more,supported,content,codings;public,void,set,content,codings,list,string,codings,assert,not,empty,codings,at,least,one,content,coding,expected,this,content,codings,clear,this,content,codings,add,all,codings
EncodedResourceResolver -> public void setContentCodings(List<String> codings);1528169435;Configure the supported content codings in order of preference. The first_coding that is present in the {@literal "Accept-Encoding"} header for a_given request, and that has a file present with the associated extension,_is used.__<p><strong>Note:</strong> Each coding must be associated with a file_extension via {@link #registerExtension} or {@link #setExtensions}. Also_customizations to the list of codings here should be matched by_customizations to the same list in {@link CachingResourceResolver} to_ensure encoded variants of a resource are cached under separate keys.__<p>By default this property is set to {@literal ["br", "gzip"]}.__@param codings one or more supported content codings_@since 5.1;public void setContentCodings(List<String> codings) {_		Assert.notEmpty(codings, "At least one content coding expected.")__		this.contentCodings.clear()__		this.contentCodings.addAll(codings)__	};configure,the,supported,content,codings,in,order,of,preference,the,first,coding,that,is,present,in,the,literal,accept,encoding,header,for,a,given,request,and,that,has,a,file,present,with,the,associated,extension,is,used,p,strong,note,strong,each,coding,must,be,associated,with,a,file,extension,via,link,register,extension,or,link,set,extensions,also,customizations,to,the,list,of,codings,here,should,be,matched,by,customizations,to,the,same,list,in,link,caching,resource,resolver,to,ensure,encoded,variants,of,a,resource,are,cached,under,separate,keys,p,by,default,this,property,is,set,to,literal,br,gzip,param,codings,one,or,more,supported,content,codings,since,5,1;public,void,set,content,codings,list,string,codings,assert,not,empty,codings,at,least,one,content,coding,expected,this,content,codings,clear,this,content,codings,add,all,codings
EncodedResourceResolver -> public void setContentCodings(List<String> codings);1530174524;Configure the supported content codings in order of preference. The first_coding that is present in the {@literal "Accept-Encoding"} header for a_given request, and that has a file present with the associated extension,_is used.__<p><strong>Note:</strong> Each coding must be associated with a file_extension via {@link #registerExtension} or {@link #setExtensions}. Also_customizations to the list of codings here should be matched by_customizations to the same list in {@link CachingResourceResolver} to_ensure encoded variants of a resource are cached under separate keys.__<p>By default this property is set to {@literal ["br", "gzip"]}.__@param codings one or more supported content codings_@since 5.1;public void setContentCodings(List<String> codings) {_		Assert.notEmpty(codings, "At least one content coding expected.")__		this.contentCodings.clear()__		this.contentCodings.addAll(codings)__	};configure,the,supported,content,codings,in,order,of,preference,the,first,coding,that,is,present,in,the,literal,accept,encoding,header,for,a,given,request,and,that,has,a,file,present,with,the,associated,extension,is,used,p,strong,note,strong,each,coding,must,be,associated,with,a,file,extension,via,link,register,extension,or,link,set,extensions,also,customizations,to,the,list,of,codings,here,should,be,matched,by,customizations,to,the,same,list,in,link,caching,resource,resolver,to,ensure,encoded,variants,of,a,resource,are,cached,under,separate,keys,p,by,default,this,property,is,set,to,literal,br,gzip,param,codings,one,or,more,supported,content,codings,since,5,1;public,void,set,content,codings,list,string,codings,assert,not,empty,codings,at,least,one,content,coding,expected,this,content,codings,clear,this,content,codings,add,all,codings
EncodedResourceResolver -> public void setContentCodings(List<String> codings);1530190293;Configure the supported content codings in order of preference. The first_coding that is present in the {@literal "Accept-Encoding"} header for a_given request, and that has a file present with the associated extension,_is used._<p><strong>Note:</strong> Each coding must be associated with a file_extension via {@link #registerExtension} or {@link #setExtensions}. Also_customizations to the list of codings here should be matched by_customizations to the same list in {@link CachingResourceResolver} to_ensure encoded variants of a resource are cached under separate keys._<p>By default this property is set to {@literal ["br", "gzip"]}._@param codings one or more supported content codings;public void setContentCodings(List<String> codings) {_		Assert.notEmpty(codings, "At least one content coding expected")__		this.contentCodings.clear()__		this.contentCodings.addAll(codings)__	};configure,the,supported,content,codings,in,order,of,preference,the,first,coding,that,is,present,in,the,literal,accept,encoding,header,for,a,given,request,and,that,has,a,file,present,with,the,associated,extension,is,used,p,strong,note,strong,each,coding,must,be,associated,with,a,file,extension,via,link,register,extension,or,link,set,extensions,also,customizations,to,the,list,of,codings,here,should,be,matched,by,customizations,to,the,same,list,in,link,caching,resource,resolver,to,ensure,encoded,variants,of,a,resource,are,cached,under,separate,keys,p,by,default,this,property,is,set,to,literal,br,gzip,param,codings,one,or,more,supported,content,codings;public,void,set,content,codings,list,string,codings,assert,not,empty,codings,at,least,one,content,coding,expected,this,content,codings,clear,this,content,codings,add,all,codings
EncodedResourceResolver -> public void setContentCodings(List<String> codings);1530793633;Configure the supported content codings in order of preference. The first_coding that is present in the {@literal "Accept-Encoding"} header for a_given request, and that has a file present with the associated extension,_is used._<p><strong>Note:</strong> Each coding must be associated with a file_extension via {@link #registerExtension} or {@link #setExtensions}. Also_customizations to the list of codings here should be matched by_customizations to the same list in {@link CachingResourceResolver} to_ensure encoded variants of a resource are cached under separate keys._<p>By default this property is set to {@literal ["br", "gzip"]}._@param codings one or more supported content codings;public void setContentCodings(List<String> codings) {_		Assert.notEmpty(codings, "At least one content coding expected")__		this.contentCodings.clear()__		this.contentCodings.addAll(codings)__	};configure,the,supported,content,codings,in,order,of,preference,the,first,coding,that,is,present,in,the,literal,accept,encoding,header,for,a,given,request,and,that,has,a,file,present,with,the,associated,extension,is,used,p,strong,note,strong,each,coding,must,be,associated,with,a,file,extension,via,link,register,extension,or,link,set,extensions,also,customizations,to,the,list,of,codings,here,should,be,matched,by,customizations,to,the,same,list,in,link,caching,resource,resolver,to,ensure,encoded,variants,of,a,resource,are,cached,under,separate,keys,p,by,default,this,property,is,set,to,literal,br,gzip,param,codings,one,or,more,supported,content,codings;public,void,set,content,codings,list,string,codings,assert,not,empty,codings,at,least,one,content,coding,expected,this,content,codings,clear,this,content,codings,add,all,codings
EncodedResourceResolver -> public Map<String, String> getExtensions();1527081441;Return a read-only map with coding-to-extension mappings.;public Map<String, String> getExtensions() {_		return Collections.unmodifiableMap(this.extensions)__	};return,a,read,only,map,with,coding,to,extension,mappings;public,map,string,string,get,extensions,return,collections,unmodifiable,map,this,extensions
EncodedResourceResolver -> public Map<String, String> getExtensions();1527081441;Return a read-only map with coding-to-extension mappings.;public Map<String, String> getExtensions() {_		return Collections.unmodifiableMap(this.extensions)__	};return,a,read,only,map,with,coding,to,extension,mappings;public,map,string,string,get,extensions,return,collections,unmodifiable,map,this,extensions
EncodedResourceResolver -> public Map<String, String> getExtensions();1528169435;Return a read-only map with coding-to-extension mappings._@since 5.1;public Map<String, String> getExtensions() {_		return Collections.unmodifiableMap(this.extensions)__	};return,a,read,only,map,with,coding,to,extension,mappings,since,5,1;public,map,string,string,get,extensions,return,collections,unmodifiable,map,this,extensions
EncodedResourceResolver -> public Map<String, String> getExtensions();1530174524;Return a read-only map with coding-to-extension mappings._@since 5.1;public Map<String, String> getExtensions() {_		return Collections.unmodifiableMap(this.extensions)__	};return,a,read,only,map,with,coding,to,extension,mappings,since,5,1;public,map,string,string,get,extensions,return,collections,unmodifiable,map,this,extensions
EncodedResourceResolver -> public Map<String, String> getExtensions();1530190293;Return a read-only map with coding-to-extension mappings.;public Map<String, String> getExtensions() {_		return Collections.unmodifiableMap(this.extensions)__	};return,a,read,only,map,with,coding,to,extension,mappings;public,map,string,string,get,extensions,return,collections,unmodifiable,map,this,extensions
EncodedResourceResolver -> public Map<String, String> getExtensions();1530793633;Return a read-only map with coding-to-extension mappings.;public Map<String, String> getExtensions() {_		return Collections.unmodifiableMap(this.extensions)__	};return,a,read,only,map,with,coding,to,extension,mappings;public,map,string,string,get,extensions,return,collections,unmodifiable,map,this,extensions
EncodedResourceResolver -> public void registerExtension(String coding, String extension);1527081441;Java config friendly alternative to {@link #setExtensions(Map)}._@param coding the content coding_@param extension the associated file extension;public void registerExtension(String coding, String extension) {_		this.extensions.put(coding, extension.startsWith(".") ? extension : "." + extension)__	};java,config,friendly,alternative,to,link,set,extensions,map,param,coding,the,content,coding,param,extension,the,associated,file,extension;public,void,register,extension,string,coding,string,extension,this,extensions,put,coding,extension,starts,with,extension,extension
EncodedResourceResolver -> public void registerExtension(String coding, String extension);1527081441;Java config friendly alternative to {@link #setExtensions(Map)}._@param coding the content coding_@param extension the associated file extension;public void registerExtension(String coding, String extension) {_		this.extensions.put(coding, extension.startsWith(".") ? extension : "." + extension)__	};java,config,friendly,alternative,to,link,set,extensions,map,param,coding,the,content,coding,param,extension,the,associated,file,extension;public,void,register,extension,string,coding,string,extension,this,extensions,put,coding,extension,starts,with,extension,extension
EncodedResourceResolver -> public void registerExtension(String coding, String extension);1528169435;Java config friendly alternative to {@link #setExtensions(Map)}._@param coding the content coding_@param extension the associated file extension_@since 5.1;public void registerExtension(String coding, String extension) {_		this.extensions.put(coding, extension.startsWith(".") ? extension : "." + extension)__	};java,config,friendly,alternative,to,link,set,extensions,map,param,coding,the,content,coding,param,extension,the,associated,file,extension,since,5,1;public,void,register,extension,string,coding,string,extension,this,extensions,put,coding,extension,starts,with,extension,extension
EncodedResourceResolver -> public void registerExtension(String coding, String extension);1530174524;Java config friendly alternative to {@link #setExtensions(Map)}._@param coding the content coding_@param extension the associated file extension_@since 5.1;public void registerExtension(String coding, String extension) {_		this.extensions.put(coding, extension.startsWith(".") ? extension : "." + extension)__	};java,config,friendly,alternative,to,link,set,extensions,map,param,coding,the,content,coding,param,extension,the,associated,file,extension,since,5,1;public,void,register,extension,string,coding,string,extension,this,extensions,put,coding,extension,starts,with,extension,extension
EncodedResourceResolver -> public void registerExtension(String coding, String extension);1530190293;Java config friendly alternative to {@link #setExtensions(Map)}._@param coding the content coding_@param extension the associated file extension;public void registerExtension(String coding, String extension) {_		this.extensions.put(coding, (extension.startsWith(".") ? extension : "." + extension))__	};java,config,friendly,alternative,to,link,set,extensions,map,param,coding,the,content,coding,param,extension,the,associated,file,extension;public,void,register,extension,string,coding,string,extension,this,extensions,put,coding,extension,starts,with,extension,extension
EncodedResourceResolver -> public void registerExtension(String coding, String extension);1530793633;Java config friendly alternative to {@link #setExtensions(Map)}._@param coding the content coding_@param extension the associated file extension;public void registerExtension(String coding, String extension) {_		this.extensions.put(coding, (extension.startsWith(".") ? extension : "." + extension))__	};java,config,friendly,alternative,to,link,set,extensions,map,param,coding,the,content,coding,param,extension,the,associated,file,extension;public,void,register,extension,string,coding,string,extension,this,extensions,put,coding,extension,starts,with,extension,extension
EncodedResourceResolver -> public List<String> getContentCodings();1527081441;Return a read-only list with the supported content codings.;public List<String> getContentCodings() {_		return Collections.unmodifiableList(this.contentCodings)__	};return,a,read,only,list,with,the,supported,content,codings;public,list,string,get,content,codings,return,collections,unmodifiable,list,this,content,codings
EncodedResourceResolver -> public List<String> getContentCodings();1527081441;Return a read-only list with the supported content codings.;public List<String> getContentCodings() {_		return Collections.unmodifiableList(this.contentCodings)__	};return,a,read,only,list,with,the,supported,content,codings;public,list,string,get,content,codings,return,collections,unmodifiable,list,this,content,codings
EncodedResourceResolver -> public List<String> getContentCodings();1528169435;Return a read-only list with the supported content codings._@since 5.1;public List<String> getContentCodings() {_		return Collections.unmodifiableList(this.contentCodings)__	};return,a,read,only,list,with,the,supported,content,codings,since,5,1;public,list,string,get,content,codings,return,collections,unmodifiable,list,this,content,codings
EncodedResourceResolver -> public List<String> getContentCodings();1530174524;Return a read-only list with the supported content codings._@since 5.1;public List<String> getContentCodings() {_		return Collections.unmodifiableList(this.contentCodings)__	};return,a,read,only,list,with,the,supported,content,codings,since,5,1;public,list,string,get,content,codings,return,collections,unmodifiable,list,this,content,codings
EncodedResourceResolver -> public List<String> getContentCodings();1530190293;Return a read-only list with the supported content codings.;public List<String> getContentCodings() {_		return Collections.unmodifiableList(this.contentCodings)__	};return,a,read,only,list,with,the,supported,content,codings;public,list,string,get,content,codings,return,collections,unmodifiable,list,this,content,codings
EncodedResourceResolver -> public List<String> getContentCodings();1530793633;Return a read-only list with the supported content codings.;public List<String> getContentCodings() {_		return Collections.unmodifiableList(this.contentCodings)__	};return,a,read,only,list,with,the,supported,content,codings;public,list,string,get,content,codings,return,collections,unmodifiable,list,this,content,codings
EncodedResourceResolver -> public void setExtensions(Map<String, String> extensions);1527081441;Configure mappings from content codings to file extensions. A dot "."_will be prepended in front of the extension value if not present._<p>By default this is configured with {@literal ["br" -> ".br"]} and_{@literal ["gzip" -> ".gz"]}._@param extensions the extensions to use._@see #registerExtension(String, String);public void setExtensions(Map<String, String> extensions) {_		extensions.forEach(this::registerExtension)__	};configure,mappings,from,content,codings,to,file,extensions,a,dot,will,be,prepended,in,front,of,the,extension,value,if,not,present,p,by,default,this,is,configured,with,literal,br,br,and,literal,gzip,gz,param,extensions,the,extensions,to,use,see,register,extension,string,string;public,void,set,extensions,map,string,string,extensions,extensions,for,each,this,register,extension
EncodedResourceResolver -> public void setExtensions(Map<String, String> extensions);1527081441;Configure mappings from content codings to file extensions. A dot "."_will be prepended in front of the extension value if not present._<p>By default this is configured with {@literal ["br" -> ".br"]} and_{@literal ["gzip" -> ".gz"]}._@param extensions the extensions to use._@see #registerExtension(String, String);public void setExtensions(Map<String, String> extensions) {_		extensions.forEach(this::registerExtension)__	};configure,mappings,from,content,codings,to,file,extensions,a,dot,will,be,prepended,in,front,of,the,extension,value,if,not,present,p,by,default,this,is,configured,with,literal,br,br,and,literal,gzip,gz,param,extensions,the,extensions,to,use,see,register,extension,string,string;public,void,set,extensions,map,string,string,extensions,extensions,for,each,this,register,extension
EncodedResourceResolver -> public void setExtensions(Map<String, String> extensions);1528169435;Configure mappings from content codings to file extensions. A dot "."_will be prepended in front of the extension value if not present._<p>By default this is configured with {@literal ["br" -> ".br"]} and_{@literal ["gzip" -> ".gz"]}._@param extensions the extensions to use._@see #registerExtension(String, String)_@since 5.1;public void setExtensions(Map<String, String> extensions) {_		extensions.forEach(this::registerExtension)__	};configure,mappings,from,content,codings,to,file,extensions,a,dot,will,be,prepended,in,front,of,the,extension,value,if,not,present,p,by,default,this,is,configured,with,literal,br,br,and,literal,gzip,gz,param,extensions,the,extensions,to,use,see,register,extension,string,string,since,5,1;public,void,set,extensions,map,string,string,extensions,extensions,for,each,this,register,extension
EncodedResourceResolver -> public void setExtensions(Map<String, String> extensions);1530174524;Configure mappings from content codings to file extensions. A dot "."_will be prepended in front of the extension value if not present._<p>By default this is configured with {@literal ["br" -> ".br"]} and_{@literal ["gzip" -> ".gz"]}._@param extensions the extensions to use._@since 5.1_@see #registerExtension(String, String);public void setExtensions(Map<String, String> extensions) {_		extensions.forEach(this::registerExtension)__	};configure,mappings,from,content,codings,to,file,extensions,a,dot,will,be,prepended,in,front,of,the,extension,value,if,not,present,p,by,default,this,is,configured,with,literal,br,br,and,literal,gzip,gz,param,extensions,the,extensions,to,use,since,5,1,see,register,extension,string,string;public,void,set,extensions,map,string,string,extensions,extensions,for,each,this,register,extension
EncodedResourceResolver -> public void setExtensions(Map<String, String> extensions);1530190293;Configure mappings from content codings to file extensions. A dot "."_will be prepended in front of the extension value if not present._<p>By default this is configured with {@literal ["br" -> ".br"]} and_{@literal ["gzip" -> ".gz"]}._@param extensions the extensions to use._@see #registerExtension(String, String);public void setExtensions(Map<String, String> extensions) {_		extensions.forEach(this::registerExtension)__	};configure,mappings,from,content,codings,to,file,extensions,a,dot,will,be,prepended,in,front,of,the,extension,value,if,not,present,p,by,default,this,is,configured,with,literal,br,br,and,literal,gzip,gz,param,extensions,the,extensions,to,use,see,register,extension,string,string;public,void,set,extensions,map,string,string,extensions,extensions,for,each,this,register,extension
EncodedResourceResolver -> public void setExtensions(Map<String, String> extensions);1530793633;Configure mappings from content codings to file extensions. A dot "."_will be prepended in front of the extension value if not present._<p>By default this is configured with {@literal ["br" -> ".br"]} and_{@literal ["gzip" -> ".gz"]}._@param extensions the extensions to use._@see #registerExtension(String, String);public void setExtensions(Map<String, String> extensions) {_		extensions.forEach(this::registerExtension)__	};configure,mappings,from,content,codings,to,file,extensions,a,dot,will,be,prepended,in,front,of,the,extension,value,if,not,present,p,by,default,this,is,configured,with,literal,br,br,and,literal,gzip,gz,param,extensions,the,extensions,to,use,see,register,extension,string,string;public,void,set,extensions,map,string,string,extensions,extensions,for,each,this,register,extension
