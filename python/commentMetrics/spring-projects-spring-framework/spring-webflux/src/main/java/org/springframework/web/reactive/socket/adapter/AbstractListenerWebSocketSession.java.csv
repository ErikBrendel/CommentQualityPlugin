# id;timestamp;commentText;codeText;commentWords;codeWords
AbstractListenerWebSocketSession -> void handleError(Throwable ex);1485986572;Handle an error callback from the WebSocketHandler adapter;void handleError(Throwable ex) {_		this.receivePublisher.onError(ex)__		if (this.sendProcessor != null) {_			this.sendProcessor.cancel()__			this.sendProcessor.onError(ex)__		}_	};handle,an,error,callback,from,the,web,socket,handler,adapter;void,handle,error,throwable,ex,this,receive,publisher,on,error,ex,if,this,send,processor,null,this,send,processor,cancel,this,send,processor,on,error,ex
AbstractListenerWebSocketSession -> void handleError(Throwable ex);1496837955;Handle an error callback from the WebSocketHandler adapter;void handleError(Throwable ex) {_		this.receivePublisher.onError(ex)__		if (this.sendProcessor != null) {_			this.sendProcessor.cancel()__			this.sendProcessor.onError(ex)__		}_	};handle,an,error,callback,from,the,web,socket,handler,adapter;void,handle,error,throwable,ex,this,receive,publisher,on,error,ex,if,this,send,processor,null,this,send,processor,cancel,this,send,processor,on,error,ex
AbstractListenerWebSocketSession -> void handleError(Throwable ex);1498780456;Handle an error callback from the WebSocketHandler adapter;void handleError(Throwable ex) {_		this.receivePublisher.onError(ex)__		WebSocketSendProcessor sendProcessor = this.sendProcessor__		if (sendProcessor != null) {_			sendProcessor.cancel()__			sendProcessor.onError(ex)__		}_	};handle,an,error,callback,from,the,web,socket,handler,adapter;void,handle,error,throwable,ex,this,receive,publisher,on,error,ex,web,socket,send,processor,send,processor,this,send,processor,if,send,processor,null,send,processor,cancel,send,processor,on,error,ex
AbstractListenerWebSocketSession -> void handleError(Throwable ex);1502974979;Handle an error callback from the WebSocketHandler adapter;void handleError(Throwable ex) {_		this.receivePublisher.onError(ex)__		WebSocketSendProcessor sendProcessor = this.sendProcessor__		if (sendProcessor != null) {_			sendProcessor.cancel()__			sendProcessor.onError(ex)__		}_	};handle,an,error,callback,from,the,web,socket,handler,adapter;void,handle,error,throwable,ex,this,receive,publisher,on,error,ex,web,socket,send,processor,send,processor,this,send,processor,if,send,processor,null,send,processor,cancel,send,processor,on,error,ex
AbstractListenerWebSocketSession -> void handleError(Throwable ex);1511323173;Handle an error callback from the WebSocketHandler adapter;void handleError(Throwable ex) {_		this.receivePublisher.onError(ex)__		WebSocketSendProcessor sendProcessor = this.sendProcessor__		if (sendProcessor != null) {_			sendProcessor.cancel()__			sendProcessor.onError(ex)__		}_	};handle,an,error,callback,from,the,web,socket,handler,adapter;void,handle,error,throwable,ex,this,receive,publisher,on,error,ex,web,socket,send,processor,send,processor,this,send,processor,if,send,processor,null,send,processor,cancel,send,processor,on,error,ex
AbstractListenerWebSocketSession -> void handleError(Throwable ex);1511324413;Handle an error callback from the WebSocketHandler adapter;void handleError(Throwable ex) {_		this.receivePublisher.onError(ex)__		WebSocketSendProcessor sendProcessor = this.sendProcessor__		if (sendProcessor != null) {_			sendProcessor.cancel()__			sendProcessor.onError(ex)__		}_	};handle,an,error,callback,from,the,web,socket,handler,adapter;void,handle,error,throwable,ex,this,receive,publisher,on,error,ex,web,socket,send,processor,send,processor,this,send,processor,if,send,processor,null,send,processor,cancel,send,processor,on,error,ex
AbstractListenerWebSocketSession -> void handleError(Throwable ex);1511390883;Handle an error callback from the WebSocketHandler adapter;void handleError(Throwable ex) {_		this.receivePublisher.onError(ex)__		WebSocketSendProcessor sendProcessor = this.sendProcessor__		if (sendProcessor != null) {_			sendProcessor.cancel()__			sendProcessor.onError(ex)__		}_	};handle,an,error,callback,from,the,web,socket,handler,adapter;void,handle,error,throwable,ex,this,receive,publisher,on,error,ex,web,socket,send,processor,send,processor,this,send,processor,if,send,processor,null,send,processor,cancel,send,processor,on,error,ex
AbstractListenerWebSocketSession -> void handleError(Throwable ex);1511391320;Handle an error callback from the WebSocketHandler adapter;void handleError(Throwable ex) {_		this.receivePublisher.onError(ex)__		WebSocketSendProcessor sendProcessor = this.sendProcessor__		if (sendProcessor != null) {_			sendProcessor.cancel()__			sendProcessor.onError(ex)__		}_	};handle,an,error,callback,from,the,web,socket,handler,adapter;void,handle,error,throwable,ex,this,receive,publisher,on,error,ex,web,socket,send,processor,send,processor,this,send,processor,if,send,processor,null,send,processor,cancel,send,processor,on,error,ex
AbstractListenerWebSocketSession -> void handleError(Throwable ex);1511411136;Handle an error callback from the WebSocketHandler adapter;void handleError(Throwable ex) {_		this.receivePublisher.onError(ex)__		WebSocketSendProcessor sendProcessor = this.sendProcessor__		if (sendProcessor != null) {_			sendProcessor.cancel()__			sendProcessor.onError(ex)__		}_	};handle,an,error,callback,from,the,web,socket,handler,adapter;void,handle,error,throwable,ex,this,receive,publisher,on,error,ex,web,socket,send,processor,send,processor,this,send,processor,if,send,processor,null,send,processor,cancel,send,processor,on,error,ex
AbstractListenerWebSocketSession -> void handleError(Throwable ex);1511452503;Handle an error callback from the WebSocketHandler adapter;void handleError(Throwable ex) {_		this.receivePublisher.onError(ex)__		WebSocketSendProcessor sendProcessor = this.sendProcessor__		if (sendProcessor != null) {_			sendProcessor.cancel()__			sendProcessor.onError(ex)__		}_	};handle,an,error,callback,from,the,web,socket,handler,adapter;void,handle,error,throwable,ex,this,receive,publisher,on,error,ex,web,socket,send,processor,send,processor,this,send,processor,if,send,processor,null,send,processor,cancel,send,processor,on,error,ex
AbstractListenerWebSocketSession -> void handleError(Throwable ex);1524852408;Handle an error callback from the WebSocketHandler adapter;void handleError(Throwable ex) {_		this.receivePublisher.onError(ex)__		WebSocketSendProcessor sendProcessor = this.sendProcessor__		if (sendProcessor != null) {_			sendProcessor.cancel()__			sendProcessor.onError(ex)__		}_	};handle,an,error,callback,from,the,web,socket,handler,adapter;void,handle,error,throwable,ex,this,receive,publisher,on,error,ex,web,socket,send,processor,send,processor,this,send,processor,if,send,processor,null,send,processor,cancel,send,processor,on,error,ex
AbstractListenerWebSocketSession -> void handleError(Throwable ex);1529721864;Handle an error callback from the WebSocketHandler adapter;void handleError(Throwable ex) {_		this.receivePublisher.onError(ex)__		WebSocketSendProcessor sendProcessor = this.sendProcessor__		if (sendProcessor != null) {_			sendProcessor.cancel()__			sendProcessor.onError(ex)__		}_	};handle,an,error,callback,from,the,web,socket,handler,adapter;void,handle,error,throwable,ex,this,receive,publisher,on,error,ex,web,socket,send,processor,send,processor,this,send,processor,if,send,processor,null,send,processor,cancel,send,processor,on,error,ex
AbstractListenerWebSocketSession -> void handleError(Throwable ex);1530174524;Handle an error callback from the WebSocketHandler adapter.;void handleError(Throwable ex) {_		this.receivePublisher.onError(ex)__		WebSocketSendProcessor sendProcessor = this.sendProcessor__		if (sendProcessor != null) {_			sendProcessor.cancel()__			sendProcessor.onError(ex)__		}_	};handle,an,error,callback,from,the,web,socket,handler,adapter;void,handle,error,throwable,ex,this,receive,publisher,on,error,ex,web,socket,send,processor,send,processor,this,send,processor,if,send,processor,null,send,processor,cancel,send,processor,on,error,ex
AbstractListenerWebSocketSession -> void handleError(Throwable ex);1530190293;Handle an error callback from the WebSocketHandler adapter.;void handleError(Throwable ex) {_		this.receivePublisher.onError(ex)__		WebSocketSendProcessor sendProcessor = this.sendProcessor__		if (sendProcessor != null) {_			sendProcessor.cancel()__			sendProcessor.onError(ex)__		}_	};handle,an,error,callback,from,the,web,socket,handler,adapter;void,handle,error,throwable,ex,this,receive,publisher,on,error,ex,web,socket,send,processor,send,processor,this,send,processor,if,send,processor,null,send,processor,cancel,send,processor,on,error,ex
AbstractListenerWebSocketSession -> void handleError(Throwable ex);1530906258;Handle an error callback from the WebSocketHandler adapter.;void handleError(Throwable ex) {_		this.receivePublisher.onError(ex)__		WebSocketSendProcessor sendProcessor = this.sendProcessor__		if (sendProcessor != null) {_			sendProcessor.cancel()__			sendProcessor.onError(ex)__		}_	};handle,an,error,callback,from,the,web,socket,handler,adapter;void,handle,error,throwable,ex,this,receive,publisher,on,error,ex,web,socket,send,processor,send,processor,this,send,processor,if,send,processor,null,send,processor,cancel,send,processor,on,error,ex
AbstractListenerWebSocketSession -> void handleError(Throwable ex);1530912796;Handle an error callback from the WebSocketHandler adapter.;void handleError(Throwable ex) {_		this.receivePublisher.onError(ex)__		WebSocketSendProcessor sendProcessor = this.sendProcessor__		if (sendProcessor != null) {_			sendProcessor.cancel()__			sendProcessor.onError(ex)__		}_	};handle,an,error,callback,from,the,web,socket,handler,adapter;void,handle,error,throwable,ex,this,receive,publisher,on,error,ex,web,socket,send,processor,send,processor,this,send,processor,if,send,processor,null,send,processor,cancel,send,processor,on,error,ex
AbstractListenerWebSocketSession -> void handleError(Throwable ex);1539999914;Handle an error callback from the WebSocketHandler adapter.;void handleError(Throwable ex) {_		this.receivePublisher.onError(ex)__		WebSocketSendProcessor sendProcessor = this.sendProcessor__		if (sendProcessor != null) {_			sendProcessor.cancel()__			sendProcessor.onError(ex)__		}_	};handle,an,error,callback,from,the,web,socket,handler,adapter;void,handle,error,throwable,ex,this,receive,publisher,on,error,ex,web,socket,send,processor,send,processor,this,send,processor,if,send,processor,null,send,processor,cancel,send,processor,on,error,ex
AbstractListenerWebSocketSession -> void handleClose(CloseStatus reason);1485986572;Handle a close callback from the WebSocketHandler adapter;void handleClose(CloseStatus reason) {_		this.receivePublisher.onAllDataRead()__		if (this.sendProcessor != null) {_			this.sendProcessor.cancel()__			this.sendProcessor.onComplete()__		}_	};handle,a,close,callback,from,the,web,socket,handler,adapter;void,handle,close,close,status,reason,this,receive,publisher,on,all,data,read,if,this,send,processor,null,this,send,processor,cancel,this,send,processor,on,complete
AbstractListenerWebSocketSession -> void handleClose(CloseStatus reason);1496837955;Handle a close callback from the WebSocketHandler adapter;void handleClose(CloseStatus reason) {_		this.receivePublisher.onAllDataRead()__		if (this.sendProcessor != null) {_			this.sendProcessor.cancel()__			this.sendProcessor.onComplete()__		}_	};handle,a,close,callback,from,the,web,socket,handler,adapter;void,handle,close,close,status,reason,this,receive,publisher,on,all,data,read,if,this,send,processor,null,this,send,processor,cancel,this,send,processor,on,complete
AbstractListenerWebSocketSession -> void handleClose(CloseStatus reason);1498780456;Handle a close callback from the WebSocketHandler adapter;void handleClose(CloseStatus reason) {_		this.receivePublisher.onAllDataRead()__		WebSocketSendProcessor sendProcessor = this.sendProcessor__		if (sendProcessor != null) {_			sendProcessor.cancel()__			sendProcessor.onComplete()__		}_	};handle,a,close,callback,from,the,web,socket,handler,adapter;void,handle,close,close,status,reason,this,receive,publisher,on,all,data,read,web,socket,send,processor,send,processor,this,send,processor,if,send,processor,null,send,processor,cancel,send,processor,on,complete
AbstractListenerWebSocketSession -> void handleClose(CloseStatus reason);1502974979;Handle a close callback from the WebSocketHandler adapter;void handleClose(CloseStatus reason) {_		this.receivePublisher.onAllDataRead()__		WebSocketSendProcessor sendProcessor = this.sendProcessor__		if (sendProcessor != null) {_			sendProcessor.cancel()__			sendProcessor.onComplete()__		}_	};handle,a,close,callback,from,the,web,socket,handler,adapter;void,handle,close,close,status,reason,this,receive,publisher,on,all,data,read,web,socket,send,processor,send,processor,this,send,processor,if,send,processor,null,send,processor,cancel,send,processor,on,complete
AbstractListenerWebSocketSession -> void handleClose(CloseStatus reason);1511323173;Handle a close callback from the WebSocketHandler adapter;void handleClose(CloseStatus reason) {_		this.receivePublisher.onAllDataRead()__		WebSocketSendProcessor sendProcessor = this.sendProcessor__		if (sendProcessor != null) {_			sendProcessor.cancel()__			sendProcessor.onComplete()__		}_	};handle,a,close,callback,from,the,web,socket,handler,adapter;void,handle,close,close,status,reason,this,receive,publisher,on,all,data,read,web,socket,send,processor,send,processor,this,send,processor,if,send,processor,null,send,processor,cancel,send,processor,on,complete
AbstractListenerWebSocketSession -> void handleClose(CloseStatus reason);1511324413;Handle a close callback from the WebSocketHandler adapter;void handleClose(CloseStatus reason) {_		this.receivePublisher.onAllDataRead()__		WebSocketSendProcessor sendProcessor = this.sendProcessor__		if (sendProcessor != null) {_			sendProcessor.cancel()__			sendProcessor.onComplete()__		}_	};handle,a,close,callback,from,the,web,socket,handler,adapter;void,handle,close,close,status,reason,this,receive,publisher,on,all,data,read,web,socket,send,processor,send,processor,this,send,processor,if,send,processor,null,send,processor,cancel,send,processor,on,complete
AbstractListenerWebSocketSession -> void handleClose(CloseStatus reason);1511390883;Handle a close callback from the WebSocketHandler adapter;void handleClose(CloseStatus reason) {_		this.receivePublisher.onAllDataRead()__		WebSocketSendProcessor sendProcessor = this.sendProcessor__		if (sendProcessor != null) {_			sendProcessor.cancel()__			sendProcessor.onComplete()__		}_	};handle,a,close,callback,from,the,web,socket,handler,adapter;void,handle,close,close,status,reason,this,receive,publisher,on,all,data,read,web,socket,send,processor,send,processor,this,send,processor,if,send,processor,null,send,processor,cancel,send,processor,on,complete
AbstractListenerWebSocketSession -> void handleClose(CloseStatus reason);1511391320;Handle a close callback from the WebSocketHandler adapter;void handleClose(CloseStatus reason) {_		this.receivePublisher.onAllDataRead()__		WebSocketSendProcessor sendProcessor = this.sendProcessor__		if (sendProcessor != null) {_			sendProcessor.cancel()__			sendProcessor.onComplete()__		}_	};handle,a,close,callback,from,the,web,socket,handler,adapter;void,handle,close,close,status,reason,this,receive,publisher,on,all,data,read,web,socket,send,processor,send,processor,this,send,processor,if,send,processor,null,send,processor,cancel,send,processor,on,complete
AbstractListenerWebSocketSession -> void handleClose(CloseStatus reason);1511411136;Handle a close callback from the WebSocketHandler adapter;void handleClose(CloseStatus reason) {_		this.receivePublisher.onAllDataRead()__		WebSocketSendProcessor sendProcessor = this.sendProcessor__		if (sendProcessor != null) {_			sendProcessor.cancel()__			sendProcessor.onComplete()__		}_	};handle,a,close,callback,from,the,web,socket,handler,adapter;void,handle,close,close,status,reason,this,receive,publisher,on,all,data,read,web,socket,send,processor,send,processor,this,send,processor,if,send,processor,null,send,processor,cancel,send,processor,on,complete
AbstractListenerWebSocketSession -> void handleClose(CloseStatus reason);1511452503;Handle a close callback from the WebSocketHandler adapter;void handleClose(CloseStatus reason) {_		this.receivePublisher.onAllDataRead()__		WebSocketSendProcessor sendProcessor = this.sendProcessor__		if (sendProcessor != null) {_			sendProcessor.cancel()__			sendProcessor.onComplete()__		}_	};handle,a,close,callback,from,the,web,socket,handler,adapter;void,handle,close,close,status,reason,this,receive,publisher,on,all,data,read,web,socket,send,processor,send,processor,this,send,processor,if,send,processor,null,send,processor,cancel,send,processor,on,complete
AbstractListenerWebSocketSession -> void handleClose(CloseStatus reason);1524852408;Handle a close callback from the WebSocketHandler adapter;void handleClose(CloseStatus reason) {_		this.receivePublisher.onAllDataRead()__		WebSocketSendProcessor sendProcessor = this.sendProcessor__		if (sendProcessor != null) {_			sendProcessor.cancel()__			sendProcessor.onComplete()__		}_	};handle,a,close,callback,from,the,web,socket,handler,adapter;void,handle,close,close,status,reason,this,receive,publisher,on,all,data,read,web,socket,send,processor,send,processor,this,send,processor,if,send,processor,null,send,processor,cancel,send,processor,on,complete
AbstractListenerWebSocketSession -> void handleClose(CloseStatus reason);1529721864;Handle a close callback from the WebSocketHandler adapter;void handleClose(CloseStatus reason) {_		this.receivePublisher.onAllDataRead()__		WebSocketSendProcessor sendProcessor = this.sendProcessor__		if (sendProcessor != null) {_			sendProcessor.cancel()__			sendProcessor.onComplete()__		}_	};handle,a,close,callback,from,the,web,socket,handler,adapter;void,handle,close,close,status,reason,this,receive,publisher,on,all,data,read,web,socket,send,processor,send,processor,this,send,processor,if,send,processor,null,send,processor,cancel,send,processor,on,complete
AbstractListenerWebSocketSession -> void handleClose(CloseStatus reason);1530174524;Handle a close callback from the WebSocketHandler adapter.;void handleClose(CloseStatus reason) {_		this.receivePublisher.onAllDataRead()__		WebSocketSendProcessor sendProcessor = this.sendProcessor__		if (sendProcessor != null) {_			sendProcessor.cancel()__			sendProcessor.onComplete()__		}_	};handle,a,close,callback,from,the,web,socket,handler,adapter;void,handle,close,close,status,reason,this,receive,publisher,on,all,data,read,web,socket,send,processor,send,processor,this,send,processor,if,send,processor,null,send,processor,cancel,send,processor,on,complete
AbstractListenerWebSocketSession -> void handleClose(CloseStatus reason);1530190293;Handle a close callback from the WebSocketHandler adapter.;void handleClose(CloseStatus reason) {_		this.receivePublisher.onAllDataRead()__		WebSocketSendProcessor sendProcessor = this.sendProcessor__		if (sendProcessor != null) {_			sendProcessor.cancel()__			sendProcessor.onComplete()__		}_	};handle,a,close,callback,from,the,web,socket,handler,adapter;void,handle,close,close,status,reason,this,receive,publisher,on,all,data,read,web,socket,send,processor,send,processor,this,send,processor,if,send,processor,null,send,processor,cancel,send,processor,on,complete
AbstractListenerWebSocketSession -> void handleClose(CloseStatus reason);1530906258;Handle a close callback from the WebSocketHandler adapter.;void handleClose(CloseStatus reason) {_		this.receivePublisher.onAllDataRead()__		WebSocketSendProcessor sendProcessor = this.sendProcessor__		if (sendProcessor != null) {_			sendProcessor.cancel()__			sendProcessor.onComplete()__		}_	};handle,a,close,callback,from,the,web,socket,handler,adapter;void,handle,close,close,status,reason,this,receive,publisher,on,all,data,read,web,socket,send,processor,send,processor,this,send,processor,if,send,processor,null,send,processor,cancel,send,processor,on,complete
AbstractListenerWebSocketSession -> void handleClose(CloseStatus reason);1530912796;Handle a close callback from the WebSocketHandler adapter.;void handleClose(CloseStatus reason) {_		this.receivePublisher.onAllDataRead()__		WebSocketSendProcessor sendProcessor = this.sendProcessor__		if (sendProcessor != null) {_			sendProcessor.cancel()__			sendProcessor.onComplete()__		}_	};handle,a,close,callback,from,the,web,socket,handler,adapter;void,handle,close,close,status,reason,this,receive,publisher,on,all,data,read,web,socket,send,processor,send,processor,this,send,processor,if,send,processor,null,send,processor,cancel,send,processor,on,complete
AbstractListenerWebSocketSession -> void handleClose(CloseStatus reason);1539999914;Handle a close callback from the WebSocketHandler adapter.;void handleClose(CloseStatus reason) {_		this.receivePublisher.onAllDataRead()__		WebSocketSendProcessor sendProcessor = this.sendProcessor__		if (sendProcessor != null) {_			sendProcessor.cancel()__			sendProcessor.onComplete()__		}_	};handle,a,close,callback,from,the,web,socket,handler,adapter;void,handle,close,close,status,reason,this,receive,publisher,on,all,data,read,web,socket,send,processor,send,processor,this,send,processor,if,send,processor,null,send,processor,cancel,send,processor,on,complete
AbstractListenerWebSocketSession -> public AbstractListenerWebSocketSession(T delegate, String id, HandshakeInfo info, 			DataBufferFactory bufferFactory, @Nullable MonoProcessor<Void> completionMono);1530906258;Alternative constructor with completion {@code Mono&lt_Void&gt_} to propagate_the session completion (success or error) (for client-side use).;public AbstractListenerWebSocketSession(T delegate, String id, HandshakeInfo info,_			DataBufferFactory bufferFactory, @Nullable MonoProcessor<Void> completionMono) {__		super(delegate, id, info, bufferFactory)__		this.receivePublisher = new WebSocketReceivePublisher(initLogPrefix(info, id))__		this.completionMono = completionMono__	};alternative,constructor,with,completion,code,mono,lt,void,gt,to,propagate,the,session,completion,success,or,error,for,client,side,use;public,abstract,listener,web,socket,session,t,delegate,string,id,handshake,info,info,data,buffer,factory,buffer,factory,nullable,mono,processor,void,completion,mono,super,delegate,id,info,buffer,factory,this,receive,publisher,new,web,socket,receive,publisher,init,log,prefix,info,id,this,completion,mono,completion,mono
AbstractListenerWebSocketSession -> public AbstractListenerWebSocketSession(T delegate, String id, HandshakeInfo info, 			DataBufferFactory bufferFactory, @Nullable MonoProcessor<Void> completionMono);1530912796;Alternative constructor with completion {@code Mono&lt_Void&gt_} to propagate_the session completion (success or error) (for client-side use).;public AbstractListenerWebSocketSession(T delegate, String id, HandshakeInfo info,_			DataBufferFactory bufferFactory, @Nullable MonoProcessor<Void> completionMono) {__		super(delegate, id, info, bufferFactory)__		this.receivePublisher = new WebSocketReceivePublisher()__		this.completionMono = completionMono__	};alternative,constructor,with,completion,code,mono,lt,void,gt,to,propagate,the,session,completion,success,or,error,for,client,side,use;public,abstract,listener,web,socket,session,t,delegate,string,id,handshake,info,info,data,buffer,factory,buffer,factory,nullable,mono,processor,void,completion,mono,super,delegate,id,info,buffer,factory,this,receive,publisher,new,web,socket,receive,publisher,this,completion,mono,completion,mono
AbstractListenerWebSocketSession -> public AbstractListenerWebSocketSession(T delegate, String id, HandshakeInfo info, 			DataBufferFactory bufferFactory, @Nullable MonoProcessor<Void> completionMono);1539999914;Alternative constructor with completion {@code Mono&lt_Void&gt_} to propagate_the session completion (success or error) (for client-side use).;public AbstractListenerWebSocketSession(T delegate, String id, HandshakeInfo info,_			DataBufferFactory bufferFactory, @Nullable MonoProcessor<Void> completionMono) {__		super(delegate, id, info, bufferFactory)__		this.receivePublisher = new WebSocketReceivePublisher()__		this.completionMono = completionMono__	};alternative,constructor,with,completion,code,mono,lt,void,gt,to,propagate,the,session,completion,success,or,error,for,client,side,use;public,abstract,listener,web,socket,session,t,delegate,string,id,handshake,info,info,data,buffer,factory,buffer,factory,nullable,mono,processor,void,completion,mono,super,delegate,id,info,buffer,factory,this,receive,publisher,new,web,socket,receive,publisher,this,completion,mono,completion,mono
AbstractListenerWebSocketSession -> protected abstract void suspendReceiving()_;1485986572;Suspend receiving until received message(s) are processed and more demand_is generated by the downstream Subscriber._<p><strong>Note:</strong> if the underlying WebSocket API does not provide_flow control for receiving messages, and this method should be a no-op_and {@link #canSuspendReceiving()} should return {@code false}.;protected abstract void suspendReceiving()_;suspend,receiving,until,received,message,s,are,processed,and,more,demand,is,generated,by,the,downstream,subscriber,p,strong,note,strong,if,the,underlying,web,socket,api,does,not,provide,flow,control,for,receiving,messages,and,this,method,should,be,a,no,op,and,link,can,suspend,receiving,should,return,code,false;protected,abstract,void,suspend,receiving
AbstractListenerWebSocketSession -> protected abstract void suspendReceiving()_;1496837955;Suspend receiving until received message(s) are processed and more demand_is generated by the downstream Subscriber._<p><strong>Note:</strong> if the underlying WebSocket API does not provide_flow control for receiving messages, and this method should be a no-op_and {@link #canSuspendReceiving()} should return {@code false}.;protected abstract void suspendReceiving()_;suspend,receiving,until,received,message,s,are,processed,and,more,demand,is,generated,by,the,downstream,subscriber,p,strong,note,strong,if,the,underlying,web,socket,api,does,not,provide,flow,control,for,receiving,messages,and,this,method,should,be,a,no,op,and,link,can,suspend,receiving,should,return,code,false;protected,abstract,void,suspend,receiving
AbstractListenerWebSocketSession -> protected abstract void suspendReceiving()_;1498780456;Suspend receiving until received message(s) are processed and more demand_is generated by the downstream Subscriber._<p><strong>Note:</strong> if the underlying WebSocket API does not provide_flow control for receiving messages, and this method should be a no-op_and {@link #canSuspendReceiving()} should return {@code false}.;protected abstract void suspendReceiving()_;suspend,receiving,until,received,message,s,are,processed,and,more,demand,is,generated,by,the,downstream,subscriber,p,strong,note,strong,if,the,underlying,web,socket,api,does,not,provide,flow,control,for,receiving,messages,and,this,method,should,be,a,no,op,and,link,can,suspend,receiving,should,return,code,false;protected,abstract,void,suspend,receiving
AbstractListenerWebSocketSession -> protected abstract void suspendReceiving()_;1502974979;Suspend receiving until received message(s) are processed and more demand_is generated by the downstream Subscriber._<p><strong>Note:</strong> if the underlying WebSocket API does not provide_flow control for receiving messages, and this method should be a no-op_and {@link #canSuspendReceiving()} should return {@code false}.;protected abstract void suspendReceiving()_;suspend,receiving,until,received,message,s,are,processed,and,more,demand,is,generated,by,the,downstream,subscriber,p,strong,note,strong,if,the,underlying,web,socket,api,does,not,provide,flow,control,for,receiving,messages,and,this,method,should,be,a,no,op,and,link,can,suspend,receiving,should,return,code,false;protected,abstract,void,suspend,receiving
AbstractListenerWebSocketSession -> protected abstract void suspendReceiving()_;1511323173;Suspend receiving until received message(s) are processed and more demand_is generated by the downstream Subscriber._<p><strong>Note:</strong> if the underlying WebSocket API does not provide_flow control for receiving messages, and this method should be a no-op_and {@link #canSuspendReceiving()} should return {@code false}.;protected abstract void suspendReceiving()_;suspend,receiving,until,received,message,s,are,processed,and,more,demand,is,generated,by,the,downstream,subscriber,p,strong,note,strong,if,the,underlying,web,socket,api,does,not,provide,flow,control,for,receiving,messages,and,this,method,should,be,a,no,op,and,link,can,suspend,receiving,should,return,code,false;protected,abstract,void,suspend,receiving
AbstractListenerWebSocketSession -> protected abstract void suspendReceiving()_;1511324413;Suspend receiving until received message(s) are processed and more demand_is generated by the downstream Subscriber._<p><strong>Note:</strong> if the underlying WebSocket API does not provide_flow control for receiving messages, and this method should be a no-op_and {@link #canSuspendReceiving()} should return {@code false}.;protected abstract void suspendReceiving()_;suspend,receiving,until,received,message,s,are,processed,and,more,demand,is,generated,by,the,downstream,subscriber,p,strong,note,strong,if,the,underlying,web,socket,api,does,not,provide,flow,control,for,receiving,messages,and,this,method,should,be,a,no,op,and,link,can,suspend,receiving,should,return,code,false;protected,abstract,void,suspend,receiving
AbstractListenerWebSocketSession -> protected abstract void suspendReceiving()_;1511390883;Suspend receiving until received message(s) are processed and more demand_is generated by the downstream Subscriber._<p><strong>Note:</strong> if the underlying WebSocket API does not provide_flow control for receiving messages, and this method should be a no-op_and {@link #canSuspendReceiving()} should return {@code false}.;protected abstract void suspendReceiving()_;suspend,receiving,until,received,message,s,are,processed,and,more,demand,is,generated,by,the,downstream,subscriber,p,strong,note,strong,if,the,underlying,web,socket,api,does,not,provide,flow,control,for,receiving,messages,and,this,method,should,be,a,no,op,and,link,can,suspend,receiving,should,return,code,false;protected,abstract,void,suspend,receiving
AbstractListenerWebSocketSession -> protected abstract void suspendReceiving()_;1511391320;Suspend receiving until received message(s) are processed and more demand_is generated by the downstream Subscriber._<p><strong>Note:</strong> if the underlying WebSocket API does not provide_flow control for receiving messages, and this method should be a no-op_and {@link #canSuspendReceiving()} should return {@code false}.;protected abstract void suspendReceiving()_;suspend,receiving,until,received,message,s,are,processed,and,more,demand,is,generated,by,the,downstream,subscriber,p,strong,note,strong,if,the,underlying,web,socket,api,does,not,provide,flow,control,for,receiving,messages,and,this,method,should,be,a,no,op,and,link,can,suspend,receiving,should,return,code,false;protected,abstract,void,suspend,receiving
AbstractListenerWebSocketSession -> protected abstract void suspendReceiving()_;1511411136;Suspend receiving until received message(s) are processed and more demand_is generated by the downstream Subscriber._<p><strong>Note:</strong> if the underlying WebSocket API does not provide_flow control for receiving messages, and this method should be a no-op_and {@link #canSuspendReceiving()} should return {@code false}.;protected abstract void suspendReceiving()_;suspend,receiving,until,received,message,s,are,processed,and,more,demand,is,generated,by,the,downstream,subscriber,p,strong,note,strong,if,the,underlying,web,socket,api,does,not,provide,flow,control,for,receiving,messages,and,this,method,should,be,a,no,op,and,link,can,suspend,receiving,should,return,code,false;protected,abstract,void,suspend,receiving
AbstractListenerWebSocketSession -> protected abstract void suspendReceiving()_;1511452503;Suspend receiving until received message(s) are processed and more demand_is generated by the downstream Subscriber._<p><strong>Note:</strong> if the underlying WebSocket API does not provide_flow control for receiving messages, and this method should be a no-op_and {@link #canSuspendReceiving()} should return {@code false}.;protected abstract void suspendReceiving()_;suspend,receiving,until,received,message,s,are,processed,and,more,demand,is,generated,by,the,downstream,subscriber,p,strong,note,strong,if,the,underlying,web,socket,api,does,not,provide,flow,control,for,receiving,messages,and,this,method,should,be,a,no,op,and,link,can,suspend,receiving,should,return,code,false;protected,abstract,void,suspend,receiving
AbstractListenerWebSocketSession -> protected abstract void suspendReceiving()_;1524852408;Suspend receiving until received message(s) are processed and more demand_is generated by the downstream Subscriber._<p><strong>Note:</strong> if the underlying WebSocket API does not provide_flow control for receiving messages, this method should be a no-op_and {@link #canSuspendReceiving()} should return {@code false}.;protected abstract void suspendReceiving()_;suspend,receiving,until,received,message,s,are,processed,and,more,demand,is,generated,by,the,downstream,subscriber,p,strong,note,strong,if,the,underlying,web,socket,api,does,not,provide,flow,control,for,receiving,messages,this,method,should,be,a,no,op,and,link,can,suspend,receiving,should,return,code,false;protected,abstract,void,suspend,receiving
AbstractListenerWebSocketSession -> protected abstract void suspendReceiving()_;1529721864;Suspend receiving until received message(s) are processed and more demand_is generated by the downstream Subscriber._<p><strong>Note:</strong> if the underlying WebSocket API does not provide_flow control for receiving messages, this method should be a no-op_and {@link #canSuspendReceiving()} should return {@code false}.;protected abstract void suspendReceiving()_;suspend,receiving,until,received,message,s,are,processed,and,more,demand,is,generated,by,the,downstream,subscriber,p,strong,note,strong,if,the,underlying,web,socket,api,does,not,provide,flow,control,for,receiving,messages,this,method,should,be,a,no,op,and,link,can,suspend,receiving,should,return,code,false;protected,abstract,void,suspend,receiving
AbstractListenerWebSocketSession -> protected abstract void suspendReceiving()_;1530174524;Suspend receiving until received message(s) are processed and more demand_is generated by the downstream Subscriber._<p><strong>Note:</strong> if the underlying WebSocket API does not provide_flow control for receiving messages, this method should be a no-op_and {@link #canSuspendReceiving()} should return {@code false}.;protected abstract void suspendReceiving()_;suspend,receiving,until,received,message,s,are,processed,and,more,demand,is,generated,by,the,downstream,subscriber,p,strong,note,strong,if,the,underlying,web,socket,api,does,not,provide,flow,control,for,receiving,messages,this,method,should,be,a,no,op,and,link,can,suspend,receiving,should,return,code,false;protected,abstract,void,suspend,receiving
AbstractListenerWebSocketSession -> protected abstract void suspendReceiving()_;1530190293;Suspend receiving until received message(s) are processed and more demand_is generated by the downstream Subscriber._<p><strong>Note:</strong> if the underlying WebSocket API does not provide_flow control for receiving messages, this method should be a no-op_and {@link #canSuspendReceiving()} should return {@code false}.;protected abstract void suspendReceiving()_;suspend,receiving,until,received,message,s,are,processed,and,more,demand,is,generated,by,the,downstream,subscriber,p,strong,note,strong,if,the,underlying,web,socket,api,does,not,provide,flow,control,for,receiving,messages,this,method,should,be,a,no,op,and,link,can,suspend,receiving,should,return,code,false;protected,abstract,void,suspend,receiving
AbstractListenerWebSocketSession -> protected abstract void suspendReceiving()_;1530906258;Suspend receiving until received message(s) are processed and more demand_is generated by the downstream Subscriber._<p><strong>Note:</strong> if the underlying WebSocket API does not provide_flow control for receiving messages, this method should be a no-op_and {@link #canSuspendReceiving()} should return {@code false}.;protected abstract void suspendReceiving()_;suspend,receiving,until,received,message,s,are,processed,and,more,demand,is,generated,by,the,downstream,subscriber,p,strong,note,strong,if,the,underlying,web,socket,api,does,not,provide,flow,control,for,receiving,messages,this,method,should,be,a,no,op,and,link,can,suspend,receiving,should,return,code,false;protected,abstract,void,suspend,receiving
AbstractListenerWebSocketSession -> protected abstract void suspendReceiving()_;1530912796;Suspend receiving until received message(s) are processed and more demand_is generated by the downstream Subscriber._<p><strong>Note:</strong> if the underlying WebSocket API does not provide_flow control for receiving messages, this method should be a no-op_and {@link #canSuspendReceiving()} should return {@code false}.;protected abstract void suspendReceiving()_;suspend,receiving,until,received,message,s,are,processed,and,more,demand,is,generated,by,the,downstream,subscriber,p,strong,note,strong,if,the,underlying,web,socket,api,does,not,provide,flow,control,for,receiving,messages,this,method,should,be,a,no,op,and,link,can,suspend,receiving,should,return,code,false;protected,abstract,void,suspend,receiving
AbstractListenerWebSocketSession -> protected abstract void suspendReceiving()_;1539999914;Suspend receiving until received message(s) are processed and more demand_is generated by the downstream Subscriber._<p><strong>Note:</strong> if the underlying WebSocket API does not provide_flow control for receiving messages, this method should be a no-op_and {@link #canSuspendReceiving()} should return {@code false}.;protected abstract void suspendReceiving()_;suspend,receiving,until,received,message,s,are,processed,and,more,demand,is,generated,by,the,downstream,subscriber,p,strong,note,strong,if,the,underlying,web,socket,api,does,not,provide,flow,control,for,receiving,messages,this,method,should,be,a,no,op,and,link,can,suspend,receiving,should,return,code,false;protected,abstract,void,suspend,receiving
AbstractListenerWebSocketSession -> public AbstractListenerWebSocketSession(T delegate, String id, HandshakeInfo handshakeInfo, 			DataBufferFactory bufferFactory);1485986572;Base constructor._@param delegate the native WebSocket session, channel, or connection_@param id the session id_@param handshakeInfo the handshake info_@param bufferFactory the DataBuffer factor for the current connection;public AbstractListenerWebSocketSession(T delegate, String id, HandshakeInfo handshakeInfo,_			DataBufferFactory bufferFactory) {__		this(delegate, id, handshakeInfo, bufferFactory, null)__	};base,constructor,param,delegate,the,native,web,socket,session,channel,or,connection,param,id,the,session,id,param,handshake,info,the,handshake,info,param,buffer,factory,the,data,buffer,factor,for,the,current,connection;public,abstract,listener,web,socket,session,t,delegate,string,id,handshake,info,handshake,info,data,buffer,factory,buffer,factory,this,delegate,id,handshake,info,buffer,factory,null
AbstractListenerWebSocketSession -> public AbstractListenerWebSocketSession(T delegate, String id, HandshakeInfo handshakeInfo, 			DataBufferFactory bufferFactory);1496837955;Base constructor._@param delegate the native WebSocket session, channel, or connection_@param id the session id_@param handshakeInfo the handshake info_@param bufferFactory the DataBuffer factor for the current connection;public AbstractListenerWebSocketSession(T delegate, String id, HandshakeInfo handshakeInfo,_			DataBufferFactory bufferFactory) {__		this(delegate, id, handshakeInfo, bufferFactory, null)__	};base,constructor,param,delegate,the,native,web,socket,session,channel,or,connection,param,id,the,session,id,param,handshake,info,the,handshake,info,param,buffer,factory,the,data,buffer,factor,for,the,current,connection;public,abstract,listener,web,socket,session,t,delegate,string,id,handshake,info,handshake,info,data,buffer,factory,buffer,factory,this,delegate,id,handshake,info,buffer,factory,null
AbstractListenerWebSocketSession -> public AbstractListenerWebSocketSession(T delegate, String id, HandshakeInfo handshakeInfo, 			DataBufferFactory bufferFactory);1498780456;Base constructor._@param delegate the native WebSocket session, channel, or connection_@param id the session id_@param handshakeInfo the handshake info_@param bufferFactory the DataBuffer factor for the current connection;public AbstractListenerWebSocketSession(T delegate, String id, HandshakeInfo handshakeInfo,_			DataBufferFactory bufferFactory) {__		this(delegate, id, handshakeInfo, bufferFactory, null)__	};base,constructor,param,delegate,the,native,web,socket,session,channel,or,connection,param,id,the,session,id,param,handshake,info,the,handshake,info,param,buffer,factory,the,data,buffer,factor,for,the,current,connection;public,abstract,listener,web,socket,session,t,delegate,string,id,handshake,info,handshake,info,data,buffer,factory,buffer,factory,this,delegate,id,handshake,info,buffer,factory,null
AbstractListenerWebSocketSession -> public AbstractListenerWebSocketSession(T delegate, String id, HandshakeInfo handshakeInfo, 			DataBufferFactory bufferFactory);1502974979;Base constructor._@param delegate the native WebSocket session, channel, or connection_@param id the session id_@param handshakeInfo the handshake info_@param bufferFactory the DataBuffer factor for the current connection;public AbstractListenerWebSocketSession(T delegate, String id, HandshakeInfo handshakeInfo,_			DataBufferFactory bufferFactory) {__		this(delegate, id, handshakeInfo, bufferFactory, null)__	};base,constructor,param,delegate,the,native,web,socket,session,channel,or,connection,param,id,the,session,id,param,handshake,info,the,handshake,info,param,buffer,factory,the,data,buffer,factor,for,the,current,connection;public,abstract,listener,web,socket,session,t,delegate,string,id,handshake,info,handshake,info,data,buffer,factory,buffer,factory,this,delegate,id,handshake,info,buffer,factory,null
AbstractListenerWebSocketSession -> public AbstractListenerWebSocketSession(T delegate, String id, HandshakeInfo handshakeInfo, 			DataBufferFactory bufferFactory);1511323173;Base constructor._@param delegate the native WebSocket session, channel, or connection_@param id the session id_@param handshakeInfo the handshake info_@param bufferFactory the DataBuffer factor for the current connection;public AbstractListenerWebSocketSession(T delegate, String id, HandshakeInfo handshakeInfo,_			DataBufferFactory bufferFactory) {__		this(delegate, id, handshakeInfo, bufferFactory, null)__	};base,constructor,param,delegate,the,native,web,socket,session,channel,or,connection,param,id,the,session,id,param,handshake,info,the,handshake,info,param,buffer,factory,the,data,buffer,factor,for,the,current,connection;public,abstract,listener,web,socket,session,t,delegate,string,id,handshake,info,handshake,info,data,buffer,factory,buffer,factory,this,delegate,id,handshake,info,buffer,factory,null
AbstractListenerWebSocketSession -> public AbstractListenerWebSocketSession(T delegate, String id, HandshakeInfo handshakeInfo, 			DataBufferFactory bufferFactory);1511324413;Base constructor._@param delegate the native WebSocket session, channel, or connection_@param id the session id_@param handshakeInfo the handshake info_@param bufferFactory the DataBuffer factor for the current connection;public AbstractListenerWebSocketSession(T delegate, String id, HandshakeInfo handshakeInfo,_			DataBufferFactory bufferFactory) {__		this(delegate, id, handshakeInfo, bufferFactory, null)__	};base,constructor,param,delegate,the,native,web,socket,session,channel,or,connection,param,id,the,session,id,param,handshake,info,the,handshake,info,param,buffer,factory,the,data,buffer,factor,for,the,current,connection;public,abstract,listener,web,socket,session,t,delegate,string,id,handshake,info,handshake,info,data,buffer,factory,buffer,factory,this,delegate,id,handshake,info,buffer,factory,null
AbstractListenerWebSocketSession -> public AbstractListenerWebSocketSession(T delegate, String id, HandshakeInfo handshakeInfo, 			DataBufferFactory bufferFactory);1511390883;Base constructor._@param delegate the native WebSocket session, channel, or connection_@param id the session id_@param handshakeInfo the handshake info_@param bufferFactory the DataBuffer factor for the current connection;public AbstractListenerWebSocketSession(T delegate, String id, HandshakeInfo handshakeInfo,_			DataBufferFactory bufferFactory) {__		this(delegate, id, handshakeInfo, bufferFactory, null)__	};base,constructor,param,delegate,the,native,web,socket,session,channel,or,connection,param,id,the,session,id,param,handshake,info,the,handshake,info,param,buffer,factory,the,data,buffer,factor,for,the,current,connection;public,abstract,listener,web,socket,session,t,delegate,string,id,handshake,info,handshake,info,data,buffer,factory,buffer,factory,this,delegate,id,handshake,info,buffer,factory,null
AbstractListenerWebSocketSession -> public AbstractListenerWebSocketSession(T delegate, String id, HandshakeInfo handshakeInfo, 			DataBufferFactory bufferFactory);1511391320;Base constructor._@param delegate the native WebSocket session, channel, or connection_@param id the session id_@param handshakeInfo the handshake info_@param bufferFactory the DataBuffer factor for the current connection;public AbstractListenerWebSocketSession(T delegate, String id, HandshakeInfo handshakeInfo,_			DataBufferFactory bufferFactory) {__		this(delegate, id, handshakeInfo, bufferFactory, null)__	};base,constructor,param,delegate,the,native,web,socket,session,channel,or,connection,param,id,the,session,id,param,handshake,info,the,handshake,info,param,buffer,factory,the,data,buffer,factor,for,the,current,connection;public,abstract,listener,web,socket,session,t,delegate,string,id,handshake,info,handshake,info,data,buffer,factory,buffer,factory,this,delegate,id,handshake,info,buffer,factory,null
AbstractListenerWebSocketSession -> public AbstractListenerWebSocketSession(T delegate, String id, HandshakeInfo handshakeInfo, 			DataBufferFactory bufferFactory);1511411136;Base constructor._@param delegate the native WebSocket session, channel, or connection_@param id the session id_@param handshakeInfo the handshake info_@param bufferFactory the DataBuffer factor for the current connection;public AbstractListenerWebSocketSession(T delegate, String id, HandshakeInfo handshakeInfo,_			DataBufferFactory bufferFactory) {__		this(delegate, id, handshakeInfo, bufferFactory, null)__	};base,constructor,param,delegate,the,native,web,socket,session,channel,or,connection,param,id,the,session,id,param,handshake,info,the,handshake,info,param,buffer,factory,the,data,buffer,factor,for,the,current,connection;public,abstract,listener,web,socket,session,t,delegate,string,id,handshake,info,handshake,info,data,buffer,factory,buffer,factory,this,delegate,id,handshake,info,buffer,factory,null
AbstractListenerWebSocketSession -> public AbstractListenerWebSocketSession(T delegate, String id, HandshakeInfo handshakeInfo, 			DataBufferFactory bufferFactory);1511452503;Base constructor._@param delegate the native WebSocket session, channel, or connection_@param id the session id_@param handshakeInfo the handshake info_@param bufferFactory the DataBuffer factor for the current connection;public AbstractListenerWebSocketSession(T delegate, String id, HandshakeInfo handshakeInfo,_			DataBufferFactory bufferFactory) {__		this(delegate, id, handshakeInfo, bufferFactory, null)__	};base,constructor,param,delegate,the,native,web,socket,session,channel,or,connection,param,id,the,session,id,param,handshake,info,the,handshake,info,param,buffer,factory,the,data,buffer,factor,for,the,current,connection;public,abstract,listener,web,socket,session,t,delegate,string,id,handshake,info,handshake,info,data,buffer,factory,buffer,factory,this,delegate,id,handshake,info,buffer,factory,null
AbstractListenerWebSocketSession -> public AbstractListenerWebSocketSession(T delegate, String id, HandshakeInfo handshakeInfo, 			DataBufferFactory bufferFactory);1524852408;Base constructor._@param delegate the native WebSocket session, channel, or connection_@param id the session id_@param handshakeInfo the handshake info_@param bufferFactory the DataBuffer factor for the current connection;public AbstractListenerWebSocketSession(T delegate, String id, HandshakeInfo handshakeInfo,_			DataBufferFactory bufferFactory) {__		this(delegate, id, handshakeInfo, bufferFactory, null)__	};base,constructor,param,delegate,the,native,web,socket,session,channel,or,connection,param,id,the,session,id,param,handshake,info,the,handshake,info,param,buffer,factory,the,data,buffer,factor,for,the,current,connection;public,abstract,listener,web,socket,session,t,delegate,string,id,handshake,info,handshake,info,data,buffer,factory,buffer,factory,this,delegate,id,handshake,info,buffer,factory,null
AbstractListenerWebSocketSession -> public AbstractListenerWebSocketSession(T delegate, String id, HandshakeInfo handshakeInfo, 			DataBufferFactory bufferFactory);1529721864;Base constructor._@param delegate the native WebSocket session, channel, or connection_@param id the session id_@param handshakeInfo the handshake info_@param bufferFactory the DataBuffer factor for the current connection;public AbstractListenerWebSocketSession(T delegate, String id, HandshakeInfo handshakeInfo,_			DataBufferFactory bufferFactory) {__		this(delegate, id, handshakeInfo, bufferFactory, null)__	};base,constructor,param,delegate,the,native,web,socket,session,channel,or,connection,param,id,the,session,id,param,handshake,info,the,handshake,info,param,buffer,factory,the,data,buffer,factor,for,the,current,connection;public,abstract,listener,web,socket,session,t,delegate,string,id,handshake,info,handshake,info,data,buffer,factory,buffer,factory,this,delegate,id,handshake,info,buffer,factory,null
AbstractListenerWebSocketSession -> public AbstractListenerWebSocketSession(T delegate, String id, HandshakeInfo handshakeInfo, 			DataBufferFactory bufferFactory);1530174524;Base constructor._@param delegate the native WebSocket session, channel, or connection_@param id the session id_@param handshakeInfo the handshake info_@param bufferFactory the DataBuffer factor for the current connection;public AbstractListenerWebSocketSession(T delegate, String id, HandshakeInfo handshakeInfo,_			DataBufferFactory bufferFactory) {__		this(delegate, id, handshakeInfo, bufferFactory, null)__	};base,constructor,param,delegate,the,native,web,socket,session,channel,or,connection,param,id,the,session,id,param,handshake,info,the,handshake,info,param,buffer,factory,the,data,buffer,factor,for,the,current,connection;public,abstract,listener,web,socket,session,t,delegate,string,id,handshake,info,handshake,info,data,buffer,factory,buffer,factory,this,delegate,id,handshake,info,buffer,factory,null
AbstractListenerWebSocketSession -> public AbstractListenerWebSocketSession( 			T delegate, String id, HandshakeInfo handshakeInfo, DataBufferFactory bufferFactory);1530190293;Base constructor._@param delegate the native WebSocket session, channel, or connection_@param id the session id_@param handshakeInfo the handshake info_@param bufferFactory the DataBuffer factor for the current connection;public AbstractListenerWebSocketSession(_			T delegate, String id, HandshakeInfo handshakeInfo, DataBufferFactory bufferFactory) {__		this(delegate, id, handshakeInfo, bufferFactory, null)__	};base,constructor,param,delegate,the,native,web,socket,session,channel,or,connection,param,id,the,session,id,param,handshake,info,the,handshake,info,param,buffer,factory,the,data,buffer,factor,for,the,current,connection;public,abstract,listener,web,socket,session,t,delegate,string,id,handshake,info,handshake,info,data,buffer,factory,buffer,factory,this,delegate,id,handshake,info,buffer,factory,null
AbstractListenerWebSocketSession -> public AbstractListenerWebSocketSession( 			T delegate, String id, HandshakeInfo handshakeInfo, DataBufferFactory bufferFactory);1530906258;Base constructor._@param delegate the native WebSocket session, channel, or connection_@param id the session id_@param handshakeInfo the handshake info_@param bufferFactory the DataBuffer factor for the current connection;public AbstractListenerWebSocketSession(_			T delegate, String id, HandshakeInfo handshakeInfo, DataBufferFactory bufferFactory) {__		this(delegate, id, handshakeInfo, bufferFactory, null)__	};base,constructor,param,delegate,the,native,web,socket,session,channel,or,connection,param,id,the,session,id,param,handshake,info,the,handshake,info,param,buffer,factory,the,data,buffer,factor,for,the,current,connection;public,abstract,listener,web,socket,session,t,delegate,string,id,handshake,info,handshake,info,data,buffer,factory,buffer,factory,this,delegate,id,handshake,info,buffer,factory,null
AbstractListenerWebSocketSession -> public AbstractListenerWebSocketSession( 			T delegate, String id, HandshakeInfo handshakeInfo, DataBufferFactory bufferFactory);1530912796;Base constructor._@param delegate the native WebSocket session, channel, or connection_@param id the session id_@param handshakeInfo the handshake info_@param bufferFactory the DataBuffer factor for the current connection;public AbstractListenerWebSocketSession(_			T delegate, String id, HandshakeInfo handshakeInfo, DataBufferFactory bufferFactory) {__		this(delegate, id, handshakeInfo, bufferFactory, null)__	};base,constructor,param,delegate,the,native,web,socket,session,channel,or,connection,param,id,the,session,id,param,handshake,info,the,handshake,info,param,buffer,factory,the,data,buffer,factor,for,the,current,connection;public,abstract,listener,web,socket,session,t,delegate,string,id,handshake,info,handshake,info,data,buffer,factory,buffer,factory,this,delegate,id,handshake,info,buffer,factory,null
AbstractListenerWebSocketSession -> public AbstractListenerWebSocketSession( 			T delegate, String id, HandshakeInfo handshakeInfo, DataBufferFactory bufferFactory);1539999914;Base constructor._@param delegate the native WebSocket session, channel, or connection_@param id the session id_@param handshakeInfo the handshake info_@param bufferFactory the DataBuffer factor for the current connection;public AbstractListenerWebSocketSession(_			T delegate, String id, HandshakeInfo handshakeInfo, DataBufferFactory bufferFactory) {__		this(delegate, id, handshakeInfo, bufferFactory, null)__	};base,constructor,param,delegate,the,native,web,socket,session,channel,or,connection,param,id,the,session,id,param,handshake,info,the,handshake,info,param,buffer,factory,the,data,buffer,factor,for,the,current,connection;public,abstract,listener,web,socket,session,t,delegate,string,id,handshake,info,handshake,info,data,buffer,factory,buffer,factory,this,delegate,id,handshake,info,buffer,factory,null
AbstractListenerWebSocketSession -> void handleMessage(Type type, WebSocketMessage message);1485986572;Handle a message callback from the WebSocketHandler adapter;void handleMessage(Type type, WebSocketMessage message) {_		this.receivePublisher.handleMessage(message)__	};handle,a,message,callback,from,the,web,socket,handler,adapter;void,handle,message,type,type,web,socket,message,message,this,receive,publisher,handle,message,message
AbstractListenerWebSocketSession -> void handleMessage(Type type, WebSocketMessage message);1496837955;Handle a message callback from the WebSocketHandler adapter;void handleMessage(Type type, WebSocketMessage message) {_		this.receivePublisher.handleMessage(message)__	};handle,a,message,callback,from,the,web,socket,handler,adapter;void,handle,message,type,type,web,socket,message,message,this,receive,publisher,handle,message,message
AbstractListenerWebSocketSession -> void handleMessage(Type type, WebSocketMessage message);1498780456;Handle a message callback from the WebSocketHandler adapter;void handleMessage(Type type, WebSocketMessage message) {_		this.receivePublisher.handleMessage(message)__	};handle,a,message,callback,from,the,web,socket,handler,adapter;void,handle,message,type,type,web,socket,message,message,this,receive,publisher,handle,message,message
AbstractListenerWebSocketSession -> void handleMessage(Type type, WebSocketMessage message);1502974979;Handle a message callback from the WebSocketHandler adapter;void handleMessage(Type type, WebSocketMessage message) {_		this.receivePublisher.handleMessage(message)__	};handle,a,message,callback,from,the,web,socket,handler,adapter;void,handle,message,type,type,web,socket,message,message,this,receive,publisher,handle,message,message
AbstractListenerWebSocketSession -> void handleMessage(Type type, WebSocketMessage message);1511323173;Handle a message callback from the WebSocketHandler adapter;void handleMessage(Type type, WebSocketMessage message) {_		this.receivePublisher.handleMessage(message)__	};handle,a,message,callback,from,the,web,socket,handler,adapter;void,handle,message,type,type,web,socket,message,message,this,receive,publisher,handle,message,message
AbstractListenerWebSocketSession -> void handleMessage(Type type, WebSocketMessage message);1511324413;Handle a message callback from the WebSocketHandler adapter;void handleMessage(Type type, WebSocketMessage message) {_		this.receivePublisher.handleMessage(message)__	};handle,a,message,callback,from,the,web,socket,handler,adapter;void,handle,message,type,type,web,socket,message,message,this,receive,publisher,handle,message,message
AbstractListenerWebSocketSession -> void handleMessage(Type type, WebSocketMessage message);1511390883;Handle a message callback from the WebSocketHandler adapter;void handleMessage(Type type, WebSocketMessage message) {_		this.receivePublisher.handleMessage(message)__	};handle,a,message,callback,from,the,web,socket,handler,adapter;void,handle,message,type,type,web,socket,message,message,this,receive,publisher,handle,message,message
AbstractListenerWebSocketSession -> void handleMessage(Type type, WebSocketMessage message);1511391320;Handle a message callback from the WebSocketHandler adapter;void handleMessage(Type type, WebSocketMessage message) {_		this.receivePublisher.handleMessage(message)__	};handle,a,message,callback,from,the,web,socket,handler,adapter;void,handle,message,type,type,web,socket,message,message,this,receive,publisher,handle,message,message
AbstractListenerWebSocketSession -> void handleMessage(Type type, WebSocketMessage message);1511411136;Handle a message callback from the WebSocketHandler adapter;void handleMessage(Type type, WebSocketMessage message) {_		this.receivePublisher.handleMessage(message)__	};handle,a,message,callback,from,the,web,socket,handler,adapter;void,handle,message,type,type,web,socket,message,message,this,receive,publisher,handle,message,message
AbstractListenerWebSocketSession -> void handleMessage(Type type, WebSocketMessage message);1511452503;Handle a message callback from the WebSocketHandler adapter;void handleMessage(Type type, WebSocketMessage message) {_		this.receivePublisher.handleMessage(message)__	};handle,a,message,callback,from,the,web,socket,handler,adapter;void,handle,message,type,type,web,socket,message,message,this,receive,publisher,handle,message,message
AbstractListenerWebSocketSession -> void handleMessage(Type type, WebSocketMessage message);1524852408;Handle a message callback from the WebSocketHandler adapter;void handleMessage(Type type, WebSocketMessage message) {_		this.receivePublisher.handleMessage(message)__	};handle,a,message,callback,from,the,web,socket,handler,adapter;void,handle,message,type,type,web,socket,message,message,this,receive,publisher,handle,message,message
AbstractListenerWebSocketSession -> void handleMessage(Type type, WebSocketMessage message);1529721864;Handle a message callback from the WebSocketHandler adapter;void handleMessage(Type type, WebSocketMessage message) {_		this.receivePublisher.handleMessage(message)__	};handle,a,message,callback,from,the,web,socket,handler,adapter;void,handle,message,type,type,web,socket,message,message,this,receive,publisher,handle,message,message
AbstractListenerWebSocketSession -> void handleMessage(Type type, WebSocketMessage message);1530174524;Handle a message callback from the WebSocketHandler adapter.;void handleMessage(Type type, WebSocketMessage message) {_		this.receivePublisher.handleMessage(message)__	};handle,a,message,callback,from,the,web,socket,handler,adapter;void,handle,message,type,type,web,socket,message,message,this,receive,publisher,handle,message,message
AbstractListenerWebSocketSession -> void handleMessage(Type type, WebSocketMessage message);1530190293;Handle a message callback from the WebSocketHandler adapter.;void handleMessage(Type type, WebSocketMessage message) {_		this.receivePublisher.handleMessage(message)__	};handle,a,message,callback,from,the,web,socket,handler,adapter;void,handle,message,type,type,web,socket,message,message,this,receive,publisher,handle,message,message
AbstractListenerWebSocketSession -> void handleMessage(Type type, WebSocketMessage message);1530906258;Handle a message callback from the WebSocketHandler adapter.;void handleMessage(Type type, WebSocketMessage message) {_		this.receivePublisher.handleMessage(message)__	};handle,a,message,callback,from,the,web,socket,handler,adapter;void,handle,message,type,type,web,socket,message,message,this,receive,publisher,handle,message,message
AbstractListenerWebSocketSession -> void handleMessage(Type type, WebSocketMessage message);1530912796;Handle a message callback from the WebSocketHandler adapter.;void handleMessage(Type type, WebSocketMessage message) {_		this.receivePublisher.handleMessage(message)__	};handle,a,message,callback,from,the,web,socket,handler,adapter;void,handle,message,type,type,web,socket,message,message,this,receive,publisher,handle,message,message
AbstractListenerWebSocketSession -> void handleMessage(Type type, WebSocketMessage message);1539999914;Handle a message callback from the WebSocketHandler adapter.;void handleMessage(Type type, WebSocketMessage message) {_		this.receivePublisher.handleMessage(message)__	};handle,a,message,callback,from,the,web,socket,handler,adapter;void,handle,message,type,type,web,socket,message,message,this,receive,publisher,handle,message,message
AbstractListenerWebSocketSession -> protected abstract boolean canSuspendReceiving()_;1485986572;Whether the underlying WebSocket API has flow control and can suspend and_resume the receiving of messages.;protected abstract boolean canSuspendReceiving()_;whether,the,underlying,web,socket,api,has,flow,control,and,can,suspend,and,resume,the,receiving,of,messages;protected,abstract,boolean,can,suspend,receiving
AbstractListenerWebSocketSession -> protected abstract boolean canSuspendReceiving()_;1496837955;Whether the underlying WebSocket API has flow control and can suspend and_resume the receiving of messages.;protected abstract boolean canSuspendReceiving()_;whether,the,underlying,web,socket,api,has,flow,control,and,can,suspend,and,resume,the,receiving,of,messages;protected,abstract,boolean,can,suspend,receiving
AbstractListenerWebSocketSession -> protected abstract boolean canSuspendReceiving()_;1498780456;Whether the underlying WebSocket API has flow control and can suspend and_resume the receiving of messages.;protected abstract boolean canSuspendReceiving()_;whether,the,underlying,web,socket,api,has,flow,control,and,can,suspend,and,resume,the,receiving,of,messages;protected,abstract,boolean,can,suspend,receiving
AbstractListenerWebSocketSession -> protected abstract boolean canSuspendReceiving()_;1502974979;Whether the underlying WebSocket API has flow control and can suspend and_resume the receiving of messages.;protected abstract boolean canSuspendReceiving()_;whether,the,underlying,web,socket,api,has,flow,control,and,can,suspend,and,resume,the,receiving,of,messages;protected,abstract,boolean,can,suspend,receiving
AbstractListenerWebSocketSession -> protected abstract boolean canSuspendReceiving()_;1511323173;Whether the underlying WebSocket API has flow control and can suspend and_resume the receiving of messages.;protected abstract boolean canSuspendReceiving()_;whether,the,underlying,web,socket,api,has,flow,control,and,can,suspend,and,resume,the,receiving,of,messages;protected,abstract,boolean,can,suspend,receiving
AbstractListenerWebSocketSession -> protected abstract boolean canSuspendReceiving()_;1511324413;Whether the underlying WebSocket API has flow control and can suspend and_resume the receiving of messages.;protected abstract boolean canSuspendReceiving()_;whether,the,underlying,web,socket,api,has,flow,control,and,can,suspend,and,resume,the,receiving,of,messages;protected,abstract,boolean,can,suspend,receiving
AbstractListenerWebSocketSession -> protected abstract boolean canSuspendReceiving()_;1511390883;Whether the underlying WebSocket API has flow control and can suspend and_resume the receiving of messages.;protected abstract boolean canSuspendReceiving()_;whether,the,underlying,web,socket,api,has,flow,control,and,can,suspend,and,resume,the,receiving,of,messages;protected,abstract,boolean,can,suspend,receiving
AbstractListenerWebSocketSession -> protected abstract boolean canSuspendReceiving()_;1511391320;Whether the underlying WebSocket API has flow control and can suspend and_resume the receiving of messages._<p><strong>Note:</strong> Sub-classes are encouraged to start out in_suspended mode, if possible, and wait until demand is received.;protected abstract boolean canSuspendReceiving()_;whether,the,underlying,web,socket,api,has,flow,control,and,can,suspend,and,resume,the,receiving,of,messages,p,strong,note,strong,sub,classes,are,encouraged,to,start,out,in,suspended,mode,if,possible,and,wait,until,demand,is,received;protected,abstract,boolean,can,suspend,receiving
AbstractListenerWebSocketSession -> protected abstract boolean canSuspendReceiving()_;1511411136;Whether the underlying WebSocket API has flow control and can suspend and_resume the receiving of messages._<p><strong>Note:</strong> Sub-classes are encouraged to start out in_suspended mode, if possible, and wait until demand is received.;protected abstract boolean canSuspendReceiving()_;whether,the,underlying,web,socket,api,has,flow,control,and,can,suspend,and,resume,the,receiving,of,messages,p,strong,note,strong,sub,classes,are,encouraged,to,start,out,in,suspended,mode,if,possible,and,wait,until,demand,is,received;protected,abstract,boolean,can,suspend,receiving
AbstractListenerWebSocketSession -> protected abstract boolean canSuspendReceiving()_;1511452503;Whether the underlying WebSocket API has flow control and can suspend and_resume the receiving of messages._<p><strong>Note:</strong> Sub-classes are encouraged to start out in_suspended mode, if possible, and wait until demand is received.;protected abstract boolean canSuspendReceiving()_;whether,the,underlying,web,socket,api,has,flow,control,and,can,suspend,and,resume,the,receiving,of,messages,p,strong,note,strong,sub,classes,are,encouraged,to,start,out,in,suspended,mode,if,possible,and,wait,until,demand,is,received;protected,abstract,boolean,can,suspend,receiving
AbstractListenerWebSocketSession -> protected abstract boolean canSuspendReceiving()_;1524852408;Whether the underlying WebSocket API has flow control and can suspend and_resume the receiving of messages._<p><strong>Note:</strong> Sub-classes are encouraged to start out in_suspended mode, if possible, and wait until demand is received.;protected abstract boolean canSuspendReceiving()_;whether,the,underlying,web,socket,api,has,flow,control,and,can,suspend,and,resume,the,receiving,of,messages,p,strong,note,strong,sub,classes,are,encouraged,to,start,out,in,suspended,mode,if,possible,and,wait,until,demand,is,received;protected,abstract,boolean,can,suspend,receiving
AbstractListenerWebSocketSession -> protected abstract boolean canSuspendReceiving()_;1529721864;Whether the underlying WebSocket API has flow control and can suspend and_resume the receiving of messages._<p><strong>Note:</strong> Sub-classes are encouraged to start out in_suspended mode, if possible, and wait until demand is received.;protected abstract boolean canSuspendReceiving()_;whether,the,underlying,web,socket,api,has,flow,control,and,can,suspend,and,resume,the,receiving,of,messages,p,strong,note,strong,sub,classes,are,encouraged,to,start,out,in,suspended,mode,if,possible,and,wait,until,demand,is,received;protected,abstract,boolean,can,suspend,receiving
AbstractListenerWebSocketSession -> protected abstract boolean canSuspendReceiving()_;1530174524;Whether the underlying WebSocket API has flow control and can suspend and_resume the receiving of messages._<p><strong>Note:</strong> Sub-classes are encouraged to start out in_suspended mode, if possible, and wait until demand is received.;protected abstract boolean canSuspendReceiving()_;whether,the,underlying,web,socket,api,has,flow,control,and,can,suspend,and,resume,the,receiving,of,messages,p,strong,note,strong,sub,classes,are,encouraged,to,start,out,in,suspended,mode,if,possible,and,wait,until,demand,is,received;protected,abstract,boolean,can,suspend,receiving
AbstractListenerWebSocketSession -> protected abstract boolean canSuspendReceiving()_;1530190293;Whether the underlying WebSocket API has flow control and can suspend and_resume the receiving of messages._<p><strong>Note:</strong> Sub-classes are encouraged to start out in_suspended mode, if possible, and wait until demand is received.;protected abstract boolean canSuspendReceiving()_;whether,the,underlying,web,socket,api,has,flow,control,and,can,suspend,and,resume,the,receiving,of,messages,p,strong,note,strong,sub,classes,are,encouraged,to,start,out,in,suspended,mode,if,possible,and,wait,until,demand,is,received;protected,abstract,boolean,can,suspend,receiving
AbstractListenerWebSocketSession -> protected abstract boolean canSuspendReceiving()_;1530906258;Whether the underlying WebSocket API has flow control and can suspend and_resume the receiving of messages._<p><strong>Note:</strong> Sub-classes are encouraged to start out in_suspended mode, if possible, and wait until demand is received.;protected abstract boolean canSuspendReceiving()_;whether,the,underlying,web,socket,api,has,flow,control,and,can,suspend,and,resume,the,receiving,of,messages,p,strong,note,strong,sub,classes,are,encouraged,to,start,out,in,suspended,mode,if,possible,and,wait,until,demand,is,received;protected,abstract,boolean,can,suspend,receiving
AbstractListenerWebSocketSession -> protected abstract boolean canSuspendReceiving()_;1530912796;Whether the underlying WebSocket API has flow control and can suspend and_resume the receiving of messages._<p><strong>Note:</strong> Sub-classes are encouraged to start out in_suspended mode, if possible, and wait until demand is received.;protected abstract boolean canSuspendReceiving()_;whether,the,underlying,web,socket,api,has,flow,control,and,can,suspend,and,resume,the,receiving,of,messages,p,strong,note,strong,sub,classes,are,encouraged,to,start,out,in,suspended,mode,if,possible,and,wait,until,demand,is,received;protected,abstract,boolean,can,suspend,receiving
AbstractListenerWebSocketSession -> protected abstract boolean canSuspendReceiving()_;1539999914;Whether the underlying WebSocket API has flow control and can suspend and_resume the receiving of messages._<p><strong>Note:</strong> Sub-classes are encouraged to start out in_suspended mode, if possible, and wait until demand is received.;protected abstract boolean canSuspendReceiving()_;whether,the,underlying,web,socket,api,has,flow,control,and,can,suspend,and,resume,the,receiving,of,messages,p,strong,note,strong,sub,classes,are,encouraged,to,start,out,in,suspended,mode,if,possible,and,wait,until,demand,is,received;protected,abstract,boolean,can,suspend,receiving
AbstractListenerWebSocketSession -> protected abstract boolean isSuspended()_;1511323173;Returns {@code true} if receiving new message(s) is suspended otherwise_{@code false}._<p><strong>Note:</strong> if the underlying WebSocket API does not provide_flow control for receiving messages, and this method should return_{@code false} and {@link #canSuspendReceiving()} should return {@code false}._@return returns {@code true} if receiving new message(s) is suspended_otherwise {@code false}.;protected abstract boolean isSuspended()_;returns,code,true,if,receiving,new,message,s,is,suspended,otherwise,code,false,p,strong,note,strong,if,the,underlying,web,socket,api,does,not,provide,flow,control,for,receiving,messages,and,this,method,should,return,code,false,and,link,can,suspend,receiving,should,return,code,false,return,returns,code,true,if,receiving,new,message,s,is,suspended,otherwise,code,false;protected,abstract,boolean,is,suspended
AbstractListenerWebSocketSession -> protected abstract boolean isSuspended()_;1511324413;Whether receiving new message(s) is suspended._<p><strong>Note:</strong> if the underlying WebSocket API does not provide_flow control for receiving messages, then this method as well as_{@link #canSuspendReceiving()} should both return {@code false}._@return returns {@code true} if receiving new message(s) is suspended,_or otherwise {@code false}._@since 5.0.2;protected abstract boolean isSuspended()_;whether,receiving,new,message,s,is,suspended,p,strong,note,strong,if,the,underlying,web,socket,api,does,not,provide,flow,control,for,receiving,messages,then,this,method,as,well,as,link,can,suspend,receiving,should,both,return,code,false,return,returns,code,true,if,receiving,new,message,s,is,suspended,or,otherwise,code,false,since,5,0,2;protected,abstract,boolean,is,suspended
AbstractListenerWebSocketSession -> WebSocketSendProcessor -> public void setReadyToSend(boolean ready);1485986572;Sub-classes can invoke this before sending a message (false) and_after receiving the async send callback (true) effective translating_async completion callback into simple flow control.;public void setReadyToSend(boolean ready) {_			this.isReady = ready__		};sub,classes,can,invoke,this,before,sending,a,message,false,and,after,receiving,the,async,send,callback,true,effective,translating,async,completion,callback,into,simple,flow,control;public,void,set,ready,to,send,boolean,ready,this,is,ready,ready
AbstractListenerWebSocketSession -> WebSocketSendProcessor -> public void setReadyToSend(boolean ready);1496837955;Sub-classes can invoke this before sending a message (false) and_after receiving the async send callback (true) effective translating_async completion callback into simple flow control.;public void setReadyToSend(boolean ready) {_			this.isReady = ready__		};sub,classes,can,invoke,this,before,sending,a,message,false,and,after,receiving,the,async,send,callback,true,effective,translating,async,completion,callback,into,simple,flow,control;public,void,set,ready,to,send,boolean,ready,this,is,ready,ready
AbstractListenerWebSocketSession -> WebSocketSendProcessor -> public void setReadyToSend(boolean ready);1498780456;Sub-classes can invoke this before sending a message (false) and_after receiving the async send callback (true) effective translating_async completion callback into simple flow control.;public void setReadyToSend(boolean ready) {_			this.isReady = ready__		};sub,classes,can,invoke,this,before,sending,a,message,false,and,after,receiving,the,async,send,callback,true,effective,translating,async,completion,callback,into,simple,flow,control;public,void,set,ready,to,send,boolean,ready,this,is,ready,ready
AbstractListenerWebSocketSession -> WebSocketSendProcessor -> public void setReadyToSend(boolean ready);1502974979;Sub-classes can invoke this before sending a message (false) and_after receiving the async send callback (true) effective translating_async completion callback into simple flow control.;public void setReadyToSend(boolean ready) {_			this.isReady = ready__		};sub,classes,can,invoke,this,before,sending,a,message,false,and,after,receiving,the,async,send,callback,true,effective,translating,async,completion,callback,into,simple,flow,control;public,void,set,ready,to,send,boolean,ready,this,is,ready,ready
AbstractListenerWebSocketSession -> WebSocketSendProcessor -> public void setReadyToSend(boolean ready);1511323173;Sub-classes can invoke this before sending a message (false) and_after receiving the async send callback (true) effective translating_async completion callback into simple flow control.;public void setReadyToSend(boolean ready) {_			this.isReady = ready__		};sub,classes,can,invoke,this,before,sending,a,message,false,and,after,receiving,the,async,send,callback,true,effective,translating,async,completion,callback,into,simple,flow,control;public,void,set,ready,to,send,boolean,ready,this,is,ready,ready
AbstractListenerWebSocketSession -> WebSocketSendProcessor -> public void setReadyToSend(boolean ready);1511324413;Sub-classes can invoke this before sending a message (false) and_after receiving the async send callback (true) effective translating_async completion callback into simple flow control.;public void setReadyToSend(boolean ready) {_			this.isReady = ready__		};sub,classes,can,invoke,this,before,sending,a,message,false,and,after,receiving,the,async,send,callback,true,effective,translating,async,completion,callback,into,simple,flow,control;public,void,set,ready,to,send,boolean,ready,this,is,ready,ready
AbstractListenerWebSocketSession -> WebSocketSendProcessor -> public void setReadyToSend(boolean ready);1511390883;Sub-classes can invoke this before sending a message (false) and_after receiving the async send callback (true) effective translating_async completion callback into simple flow control.;public void setReadyToSend(boolean ready) {_			this.isReady = ready__		};sub,classes,can,invoke,this,before,sending,a,message,false,and,after,receiving,the,async,send,callback,true,effective,translating,async,completion,callback,into,simple,flow,control;public,void,set,ready,to,send,boolean,ready,this,is,ready,ready
AbstractListenerWebSocketSession -> WebSocketSendProcessor -> public void setReadyToSend(boolean ready);1511391320;Sub-classes can invoke this before sending a message (false) and_after receiving the async send callback (true) effective translating_async completion callback into simple flow control.;public void setReadyToSend(boolean ready) {_			this.isReady = ready__		};sub,classes,can,invoke,this,before,sending,a,message,false,and,after,receiving,the,async,send,callback,true,effective,translating,async,completion,callback,into,simple,flow,control;public,void,set,ready,to,send,boolean,ready,this,is,ready,ready
AbstractListenerWebSocketSession -> WebSocketSendProcessor -> public void setReadyToSend(boolean ready);1511411136;Sub-classes can invoke this before sending a message (false) and_after receiving the async send callback (true) effective translating_async completion callback into simple flow control.;public void setReadyToSend(boolean ready) {_			if (ready) {_				logger.trace("Send succeeded, ready to send again")__			}_			this.isReady = ready__		};sub,classes,can,invoke,this,before,sending,a,message,false,and,after,receiving,the,async,send,callback,true,effective,translating,async,completion,callback,into,simple,flow,control;public,void,set,ready,to,send,boolean,ready,if,ready,logger,trace,send,succeeded,ready,to,send,again,this,is,ready,ready
AbstractListenerWebSocketSession -> WebSocketSendProcessor -> public void setReadyToSend(boolean ready);1511452503;Sub-classes can invoke this before sending a message (false) and_after receiving the async send callback (true) effective translating_async completion callback into simple flow control.;public void setReadyToSend(boolean ready) {_			if (ready) {_				logger.trace("Send succeeded, ready to send again")__			}_			this.isReady = ready__		};sub,classes,can,invoke,this,before,sending,a,message,false,and,after,receiving,the,async,send,callback,true,effective,translating,async,completion,callback,into,simple,flow,control;public,void,set,ready,to,send,boolean,ready,if,ready,logger,trace,send,succeeded,ready,to,send,again,this,is,ready,ready
AbstractListenerWebSocketSession -> WebSocketSendProcessor -> public void setReadyToSend(boolean ready);1524852408;Sub-classes can invoke this before sending a message (false) and_after receiving the async send callback (true) effective translating_async completion callback into simple flow control.;public void setReadyToSend(boolean ready) {_			if (ready) {_				logger.trace("Send succeeded, ready to send again")__			}_			this.isReady = ready__		};sub,classes,can,invoke,this,before,sending,a,message,false,and,after,receiving,the,async,send,callback,true,effective,translating,async,completion,callback,into,simple,flow,control;public,void,set,ready,to,send,boolean,ready,if,ready,logger,trace,send,succeeded,ready,to,send,again,this,is,ready,ready
AbstractListenerWebSocketSession -> WebSocketSendProcessor -> public void setReadyToSend(boolean ready);1529721864;Sub-classes can invoke this before sending a message (false) and_after receiving the async send callback (true) effective translating_async completion callback into simple flow control.;public void setReadyToSend(boolean ready) {_			if (ready) {_				logger.trace("Ready to send again")__			}_			this.isReady = ready__		};sub,classes,can,invoke,this,before,sending,a,message,false,and,after,receiving,the,async,send,callback,true,effective,translating,async,completion,callback,into,simple,flow,control;public,void,set,ready,to,send,boolean,ready,if,ready,logger,trace,ready,to,send,again,this,is,ready,ready
AbstractListenerWebSocketSession -> WebSocketSendProcessor -> public void setReadyToSend(boolean ready);1530174524;Sub-classes can invoke this before sending a message (false) and_after receiving the async send callback (true) effective translating_async completion callback into simple flow control.;public void setReadyToSend(boolean ready) {_			if (ready) {_				logger.trace("Ready to send again")__			}_			this.isReady = ready__		};sub,classes,can,invoke,this,before,sending,a,message,false,and,after,receiving,the,async,send,callback,true,effective,translating,async,completion,callback,into,simple,flow,control;public,void,set,ready,to,send,boolean,ready,if,ready,logger,trace,ready,to,send,again,this,is,ready,ready
AbstractListenerWebSocketSession -> WebSocketSendProcessor -> public void setReadyToSend(boolean ready);1530190293;Sub-classes can invoke this before sending a message (false) and_after receiving the async send callback (true) effective translating_async completion callback into simple flow control.;public void setReadyToSend(boolean ready) {_			if (ready) {_				logger.trace("Ready to send again")__			}_			this.isReady = ready__		};sub,classes,can,invoke,this,before,sending,a,message,false,and,after,receiving,the,async,send,callback,true,effective,translating,async,completion,callback,into,simple,flow,control;public,void,set,ready,to,send,boolean,ready,if,ready,logger,trace,ready,to,send,again,this,is,ready,ready
AbstractListenerWebSocketSession -> WebSocketSendProcessor -> public void setReadyToSend(boolean ready);1530906258;Sub-classes can invoke this before sending a message (false) and_after receiving the async send callback (true) effective translating_async completion callback into simple flow control.;public void setReadyToSend(boolean ready) {_			if (ready && logger.isTraceEnabled()) {_				logger.trace(getLogPrefix() + "Ready to send")__			}_			this.isReady = ready__		};sub,classes,can,invoke,this,before,sending,a,message,false,and,after,receiving,the,async,send,callback,true,effective,translating,async,completion,callback,into,simple,flow,control;public,void,set,ready,to,send,boolean,ready,if,ready,logger,is,trace,enabled,logger,trace,get,log,prefix,ready,to,send,this,is,ready,ready
AbstractListenerWebSocketSession -> WebSocketSendProcessor -> public void setReadyToSend(boolean ready);1530912796;Sub-classes can invoke this before sending a message (false) and_after receiving the async send callback (true) effective translating_async completion callback into simple flow control.;public void setReadyToSend(boolean ready) {_			if (ready && rsWriteLogger.isTraceEnabled()) {_				rsWriteLogger.trace(getLogPrefix() + "Ready to send")__			}_			this.isReady = ready__		};sub,classes,can,invoke,this,before,sending,a,message,false,and,after,receiving,the,async,send,callback,true,effective,translating,async,completion,callback,into,simple,flow,control;public,void,set,ready,to,send,boolean,ready,if,ready,rs,write,logger,is,trace,enabled,rs,write,logger,trace,get,log,prefix,ready,to,send,this,is,ready,ready
AbstractListenerWebSocketSession -> WebSocketSendProcessor -> public void setReadyToSend(boolean ready);1539999914;Sub-classes can invoke this before sending a message (false) and_after receiving the async send callback (true) effective translating_async completion callback into simple flow control.;public void setReadyToSend(boolean ready) {_			if (ready && rsWriteLogger.isTraceEnabled()) {_				rsWriteLogger.trace(getLogPrefix() + "Ready to send")__			}_			this.isReady = ready__		};sub,classes,can,invoke,this,before,sending,a,message,false,and,after,receiving,the,async,send,callback,true,effective,translating,async,completion,callback,into,simple,flow,control;public,void,set,ready,to,send,boolean,ready,if,ready,rs,write,logger,is,trace,enabled,rs,write,logger,trace,get,log,prefix,ready,to,send,this,is,ready,ready
AbstractListenerWebSocketSession -> public AbstractListenerWebSocketSession(T delegate, String id, HandshakeInfo handshakeInfo, 			DataBufferFactory bufferFactory, @Nullable MonoProcessor<Void> completionMono);1496837955;Alternative constructor with completion {@code Mono&lt_Void&gt_} to propagate_the session completion (success or error) (for client-side use).;public AbstractListenerWebSocketSession(T delegate, String id, HandshakeInfo handshakeInfo,_			DataBufferFactory bufferFactory, @Nullable MonoProcessor<Void> completionMono) {__		super(delegate, id, handshakeInfo, bufferFactory)__		this.completionMono = completionMono__	};alternative,constructor,with,completion,code,mono,lt,void,gt,to,propagate,the,session,completion,success,or,error,for,client,side,use;public,abstract,listener,web,socket,session,t,delegate,string,id,handshake,info,handshake,info,data,buffer,factory,buffer,factory,nullable,mono,processor,void,completion,mono,super,delegate,id,handshake,info,buffer,factory,this,completion,mono,completion,mono
AbstractListenerWebSocketSession -> public AbstractListenerWebSocketSession(T delegate, String id, HandshakeInfo handshakeInfo, 			DataBufferFactory bufferFactory, @Nullable MonoProcessor<Void> completionMono);1498780456;Alternative constructor with completion {@code Mono&lt_Void&gt_} to propagate_the session completion (success or error) (for client-side use).;public AbstractListenerWebSocketSession(T delegate, String id, HandshakeInfo handshakeInfo,_			DataBufferFactory bufferFactory, @Nullable MonoProcessor<Void> completionMono) {__		super(delegate, id, handshakeInfo, bufferFactory)__		this.completionMono = completionMono__	};alternative,constructor,with,completion,code,mono,lt,void,gt,to,propagate,the,session,completion,success,or,error,for,client,side,use;public,abstract,listener,web,socket,session,t,delegate,string,id,handshake,info,handshake,info,data,buffer,factory,buffer,factory,nullable,mono,processor,void,completion,mono,super,delegate,id,handshake,info,buffer,factory,this,completion,mono,completion,mono
AbstractListenerWebSocketSession -> public AbstractListenerWebSocketSession(T delegate, String id, HandshakeInfo handshakeInfo, 			DataBufferFactory bufferFactory, @Nullable MonoProcessor<Void> completionMono);1502974979;Alternative constructor with completion {@code Mono&lt_Void&gt_} to propagate_the session completion (success or error) (for client-side use).;public AbstractListenerWebSocketSession(T delegate, String id, HandshakeInfo handshakeInfo,_			DataBufferFactory bufferFactory, @Nullable MonoProcessor<Void> completionMono) {__		super(delegate, id, handshakeInfo, bufferFactory)__		this.completionMono = completionMono__	};alternative,constructor,with,completion,code,mono,lt,void,gt,to,propagate,the,session,completion,success,or,error,for,client,side,use;public,abstract,listener,web,socket,session,t,delegate,string,id,handshake,info,handshake,info,data,buffer,factory,buffer,factory,nullable,mono,processor,void,completion,mono,super,delegate,id,handshake,info,buffer,factory,this,completion,mono,completion,mono
AbstractListenerWebSocketSession -> public AbstractListenerWebSocketSession(T delegate, String id, HandshakeInfo handshakeInfo, 			DataBufferFactory bufferFactory, @Nullable MonoProcessor<Void> completionMono);1511323173;Alternative constructor with completion {@code Mono&lt_Void&gt_} to propagate_the session completion (success or error) (for client-side use).;public AbstractListenerWebSocketSession(T delegate, String id, HandshakeInfo handshakeInfo,_			DataBufferFactory bufferFactory, @Nullable MonoProcessor<Void> completionMono) {__		super(delegate, id, handshakeInfo, bufferFactory)__		this.completionMono = completionMono__	};alternative,constructor,with,completion,code,mono,lt,void,gt,to,propagate,the,session,completion,success,or,error,for,client,side,use;public,abstract,listener,web,socket,session,t,delegate,string,id,handshake,info,handshake,info,data,buffer,factory,buffer,factory,nullable,mono,processor,void,completion,mono,super,delegate,id,handshake,info,buffer,factory,this,completion,mono,completion,mono
AbstractListenerWebSocketSession -> public AbstractListenerWebSocketSession(T delegate, String id, HandshakeInfo handshakeInfo, 			DataBufferFactory bufferFactory, @Nullable MonoProcessor<Void> completionMono);1511324413;Alternative constructor with completion {@code Mono&lt_Void&gt_} to propagate_the session completion (success or error) (for client-side use).;public AbstractListenerWebSocketSession(T delegate, String id, HandshakeInfo handshakeInfo,_			DataBufferFactory bufferFactory, @Nullable MonoProcessor<Void> completionMono) {__		super(delegate, id, handshakeInfo, bufferFactory)__		this.completionMono = completionMono__	};alternative,constructor,with,completion,code,mono,lt,void,gt,to,propagate,the,session,completion,success,or,error,for,client,side,use;public,abstract,listener,web,socket,session,t,delegate,string,id,handshake,info,handshake,info,data,buffer,factory,buffer,factory,nullable,mono,processor,void,completion,mono,super,delegate,id,handshake,info,buffer,factory,this,completion,mono,completion,mono
AbstractListenerWebSocketSession -> public AbstractListenerWebSocketSession(T delegate, String id, HandshakeInfo handshakeInfo, 			DataBufferFactory bufferFactory, @Nullable MonoProcessor<Void> completionMono);1511390883;Alternative constructor with completion {@code Mono&lt_Void&gt_} to propagate_the session completion (success or error) (for client-side use).;public AbstractListenerWebSocketSession(T delegate, String id, HandshakeInfo handshakeInfo,_			DataBufferFactory bufferFactory, @Nullable MonoProcessor<Void> completionMono) {__		super(delegate, id, handshakeInfo, bufferFactory)__		this.completionMono = completionMono__	};alternative,constructor,with,completion,code,mono,lt,void,gt,to,propagate,the,session,completion,success,or,error,for,client,side,use;public,abstract,listener,web,socket,session,t,delegate,string,id,handshake,info,handshake,info,data,buffer,factory,buffer,factory,nullable,mono,processor,void,completion,mono,super,delegate,id,handshake,info,buffer,factory,this,completion,mono,completion,mono
AbstractListenerWebSocketSession -> public AbstractListenerWebSocketSession(T delegate, String id, HandshakeInfo handshakeInfo, 			DataBufferFactory bufferFactory, @Nullable MonoProcessor<Void> completionMono);1511391320;Alternative constructor with completion {@code Mono&lt_Void&gt_} to propagate_the session completion (success or error) (for client-side use).;public AbstractListenerWebSocketSession(T delegate, String id, HandshakeInfo handshakeInfo,_			DataBufferFactory bufferFactory, @Nullable MonoProcessor<Void> completionMono) {__		super(delegate, id, handshakeInfo, bufferFactory)__		this.completionMono = completionMono__	};alternative,constructor,with,completion,code,mono,lt,void,gt,to,propagate,the,session,completion,success,or,error,for,client,side,use;public,abstract,listener,web,socket,session,t,delegate,string,id,handshake,info,handshake,info,data,buffer,factory,buffer,factory,nullable,mono,processor,void,completion,mono,super,delegate,id,handshake,info,buffer,factory,this,completion,mono,completion,mono
AbstractListenerWebSocketSession -> public AbstractListenerWebSocketSession(T delegate, String id, HandshakeInfo handshakeInfo, 			DataBufferFactory bufferFactory, @Nullable MonoProcessor<Void> completionMono);1511411136;Alternative constructor with completion {@code Mono&lt_Void&gt_} to propagate_the session completion (success or error) (for client-side use).;public AbstractListenerWebSocketSession(T delegate, String id, HandshakeInfo handshakeInfo,_			DataBufferFactory bufferFactory, @Nullable MonoProcessor<Void> completionMono) {__		super(delegate, id, handshakeInfo, bufferFactory)__		this.completionMono = completionMono__	};alternative,constructor,with,completion,code,mono,lt,void,gt,to,propagate,the,session,completion,success,or,error,for,client,side,use;public,abstract,listener,web,socket,session,t,delegate,string,id,handshake,info,handshake,info,data,buffer,factory,buffer,factory,nullable,mono,processor,void,completion,mono,super,delegate,id,handshake,info,buffer,factory,this,completion,mono,completion,mono
AbstractListenerWebSocketSession -> public AbstractListenerWebSocketSession(T delegate, String id, HandshakeInfo handshakeInfo, 			DataBufferFactory bufferFactory, @Nullable MonoProcessor<Void> completionMono);1511452503;Alternative constructor with completion {@code Mono&lt_Void&gt_} to propagate_the session completion (success or error) (for client-side use).;public AbstractListenerWebSocketSession(T delegate, String id, HandshakeInfo handshakeInfo,_			DataBufferFactory bufferFactory, @Nullable MonoProcessor<Void> completionMono) {__		super(delegate, id, handshakeInfo, bufferFactory)__		this.completionMono = completionMono__	};alternative,constructor,with,completion,code,mono,lt,void,gt,to,propagate,the,session,completion,success,or,error,for,client,side,use;public,abstract,listener,web,socket,session,t,delegate,string,id,handshake,info,handshake,info,data,buffer,factory,buffer,factory,nullable,mono,processor,void,completion,mono,super,delegate,id,handshake,info,buffer,factory,this,completion,mono,completion,mono
AbstractListenerWebSocketSession -> public AbstractListenerWebSocketSession(T delegate, String id, HandshakeInfo handshakeInfo, 			DataBufferFactory bufferFactory, @Nullable MonoProcessor<Void> completionMono);1524852408;Alternative constructor with completion {@code Mono&lt_Void&gt_} to propagate_the session completion (success or error) (for client-side use).;public AbstractListenerWebSocketSession(T delegate, String id, HandshakeInfo handshakeInfo,_			DataBufferFactory bufferFactory, @Nullable MonoProcessor<Void> completionMono) {__		super(delegate, id, handshakeInfo, bufferFactory)__		this.completionMono = completionMono__	};alternative,constructor,with,completion,code,mono,lt,void,gt,to,propagate,the,session,completion,success,or,error,for,client,side,use;public,abstract,listener,web,socket,session,t,delegate,string,id,handshake,info,handshake,info,data,buffer,factory,buffer,factory,nullable,mono,processor,void,completion,mono,super,delegate,id,handshake,info,buffer,factory,this,completion,mono,completion,mono
AbstractListenerWebSocketSession -> public AbstractListenerWebSocketSession(T delegate, String id, HandshakeInfo handshakeInfo, 			DataBufferFactory bufferFactory, @Nullable MonoProcessor<Void> completionMono);1529721864;Alternative constructor with completion {@code Mono&lt_Void&gt_} to propagate_the session completion (success or error) (for client-side use).;public AbstractListenerWebSocketSession(T delegate, String id, HandshakeInfo handshakeInfo,_			DataBufferFactory bufferFactory, @Nullable MonoProcessor<Void> completionMono) {__		super(delegate, id, handshakeInfo, bufferFactory)__		this.completionMono = completionMono__	};alternative,constructor,with,completion,code,mono,lt,void,gt,to,propagate,the,session,completion,success,or,error,for,client,side,use;public,abstract,listener,web,socket,session,t,delegate,string,id,handshake,info,handshake,info,data,buffer,factory,buffer,factory,nullable,mono,processor,void,completion,mono,super,delegate,id,handshake,info,buffer,factory,this,completion,mono,completion,mono
AbstractListenerWebSocketSession -> public AbstractListenerWebSocketSession(T delegate, String id, HandshakeInfo handshakeInfo, 			DataBufferFactory bufferFactory, @Nullable MonoProcessor<Void> completionMono);1530174524;Alternative constructor with completion {@code Mono&lt_Void&gt_} to propagate_the session completion (success or error) (for client-side use).;public AbstractListenerWebSocketSession(T delegate, String id, HandshakeInfo handshakeInfo,_			DataBufferFactory bufferFactory, @Nullable MonoProcessor<Void> completionMono) {__		super(delegate, id, handshakeInfo, bufferFactory)__		this.completionMono = completionMono__	};alternative,constructor,with,completion,code,mono,lt,void,gt,to,propagate,the,session,completion,success,or,error,for,client,side,use;public,abstract,listener,web,socket,session,t,delegate,string,id,handshake,info,handshake,info,data,buffer,factory,buffer,factory,nullable,mono,processor,void,completion,mono,super,delegate,id,handshake,info,buffer,factory,this,completion,mono,completion,mono
AbstractListenerWebSocketSession -> public AbstractListenerWebSocketSession(T delegate, String id, HandshakeInfo handshakeInfo, 			DataBufferFactory bufferFactory, @Nullable MonoProcessor<Void> completionMono);1530190293;Alternative constructor with completion {@code Mono&lt_Void&gt_} to propagate_the session completion (success or error) (for client-side use).;public AbstractListenerWebSocketSession(T delegate, String id, HandshakeInfo handshakeInfo,_			DataBufferFactory bufferFactory, @Nullable MonoProcessor<Void> completionMono) {__		super(delegate, id, handshakeInfo, bufferFactory)__		this.completionMono = completionMono__	};alternative,constructor,with,completion,code,mono,lt,void,gt,to,propagate,the,session,completion,success,or,error,for,client,side,use;public,abstract,listener,web,socket,session,t,delegate,string,id,handshake,info,handshake,info,data,buffer,factory,buffer,factory,nullable,mono,processor,void,completion,mono,super,delegate,id,handshake,info,buffer,factory,this,completion,mono,completion,mono
AbstractListenerWebSocketSession -> protected abstract boolean sendMessage(WebSocketMessage message) throws IOException_;1485986572;Send the given WebSocket message.;protected abstract boolean sendMessage(WebSocketMessage message) throws IOException_;send,the,given,web,socket,message;protected,abstract,boolean,send,message,web,socket,message,message,throws,ioexception
AbstractListenerWebSocketSession -> protected abstract boolean sendMessage(WebSocketMessage message) throws IOException_;1496837955;Send the given WebSocket message.;protected abstract boolean sendMessage(WebSocketMessage message) throws IOException_;send,the,given,web,socket,message;protected,abstract,boolean,send,message,web,socket,message,message,throws,ioexception
AbstractListenerWebSocketSession -> protected abstract boolean sendMessage(WebSocketMessage message) throws IOException_;1498780456;Send the given WebSocket message.;protected abstract boolean sendMessage(WebSocketMessage message) throws IOException_;send,the,given,web,socket,message;protected,abstract,boolean,send,message,web,socket,message,message,throws,ioexception
AbstractListenerWebSocketSession -> protected abstract boolean sendMessage(WebSocketMessage message) throws IOException_;1502974979;Send the given WebSocket message.;protected abstract boolean sendMessage(WebSocketMessage message) throws IOException_;send,the,given,web,socket,message;protected,abstract,boolean,send,message,web,socket,message,message,throws,ioexception
AbstractListenerWebSocketSession -> protected abstract boolean sendMessage(WebSocketMessage message) throws IOException_;1511323173;Send the given WebSocket message.;protected abstract boolean sendMessage(WebSocketMessage message) throws IOException_;send,the,given,web,socket,message;protected,abstract,boolean,send,message,web,socket,message,message,throws,ioexception
AbstractListenerWebSocketSession -> protected abstract boolean sendMessage(WebSocketMessage message) throws IOException_;1511324413;Send the given WebSocket message.;protected abstract boolean sendMessage(WebSocketMessage message) throws IOException_;send,the,given,web,socket,message;protected,abstract,boolean,send,message,web,socket,message,message,throws,ioexception
AbstractListenerWebSocketSession -> protected abstract boolean sendMessage(WebSocketMessage message) throws IOException_;1511390883;Send the given WebSocket message.;protected abstract boolean sendMessage(WebSocketMessage message) throws IOException_;send,the,given,web,socket,message;protected,abstract,boolean,send,message,web,socket,message,message,throws,ioexception
AbstractListenerWebSocketSession -> protected abstract boolean sendMessage(WebSocketMessage message) throws IOException_;1511391320;Send the given WebSocket message.;protected abstract boolean sendMessage(WebSocketMessage message) throws IOException_;send,the,given,web,socket,message;protected,abstract,boolean,send,message,web,socket,message,message,throws,ioexception
AbstractListenerWebSocketSession -> protected abstract boolean sendMessage(WebSocketMessage message) throws IOException_;1511411136;Send the given WebSocket message.;protected abstract boolean sendMessage(WebSocketMessage message) throws IOException_;send,the,given,web,socket,message;protected,abstract,boolean,send,message,web,socket,message,message,throws,ioexception
AbstractListenerWebSocketSession -> protected abstract boolean sendMessage(WebSocketMessage message) throws IOException_;1511452503;Send the given WebSocket message._<p><strong>Note:</strong> Sub-classes are responsible for releasing the_payload data buffer, once fully written, if pooled buffers apply to the_underlying container.;protected abstract boolean sendMessage(WebSocketMessage message) throws IOException_;send,the,given,web,socket,message,p,strong,note,strong,sub,classes,are,responsible,for,releasing,the,payload,data,buffer,once,fully,written,if,pooled,buffers,apply,to,the,underlying,container;protected,abstract,boolean,send,message,web,socket,message,message,throws,ioexception
AbstractListenerWebSocketSession -> protected abstract boolean sendMessage(WebSocketMessage message) throws IOException_;1524852408;Send the given WebSocket message._<p><strong>Note:</strong> Sub-classes are responsible for releasing the_payload data buffer, once fully written, if pooled buffers apply to the_underlying container.;protected abstract boolean sendMessage(WebSocketMessage message) throws IOException_;send,the,given,web,socket,message,p,strong,note,strong,sub,classes,are,responsible,for,releasing,the,payload,data,buffer,once,fully,written,if,pooled,buffers,apply,to,the,underlying,container;protected,abstract,boolean,send,message,web,socket,message,message,throws,ioexception
AbstractListenerWebSocketSession -> protected abstract boolean sendMessage(WebSocketMessage message) throws IOException_;1529721864;Send the given WebSocket message._<p><strong>Note:</strong> Sub-classes are responsible for releasing the_payload data buffer, once fully written, if pooled buffers apply to the_underlying container.;protected abstract boolean sendMessage(WebSocketMessage message) throws IOException_;send,the,given,web,socket,message,p,strong,note,strong,sub,classes,are,responsible,for,releasing,the,payload,data,buffer,once,fully,written,if,pooled,buffers,apply,to,the,underlying,container;protected,abstract,boolean,send,message,web,socket,message,message,throws,ioexception
AbstractListenerWebSocketSession -> protected abstract boolean sendMessage(WebSocketMessage message) throws IOException_;1530174524;Send the given WebSocket message._<p><strong>Note:</strong> Sub-classes are responsible for releasing the_payload data buffer, once fully written, if pooled buffers apply to the_underlying container.;protected abstract boolean sendMessage(WebSocketMessage message) throws IOException_;send,the,given,web,socket,message,p,strong,note,strong,sub,classes,are,responsible,for,releasing,the,payload,data,buffer,once,fully,written,if,pooled,buffers,apply,to,the,underlying,container;protected,abstract,boolean,send,message,web,socket,message,message,throws,ioexception
AbstractListenerWebSocketSession -> protected abstract boolean sendMessage(WebSocketMessage message) throws IOException_;1530190293;Send the given WebSocket message._<p><strong>Note:</strong> Sub-classes are responsible for releasing the_payload data buffer, once fully written, if pooled buffers apply to the_underlying container.;protected abstract boolean sendMessage(WebSocketMessage message) throws IOException_;send,the,given,web,socket,message,p,strong,note,strong,sub,classes,are,responsible,for,releasing,the,payload,data,buffer,once,fully,written,if,pooled,buffers,apply,to,the,underlying,container;protected,abstract,boolean,send,message,web,socket,message,message,throws,ioexception
AbstractListenerWebSocketSession -> protected abstract boolean sendMessage(WebSocketMessage message) throws IOException_;1530906258;Send the given WebSocket message._<p><strong>Note:</strong> Sub-classes are responsible for releasing the_payload data buffer, once fully written, if pooled buffers apply to the_underlying container.;protected abstract boolean sendMessage(WebSocketMessage message) throws IOException_;send,the,given,web,socket,message,p,strong,note,strong,sub,classes,are,responsible,for,releasing,the,payload,data,buffer,once,fully,written,if,pooled,buffers,apply,to,the,underlying,container;protected,abstract,boolean,send,message,web,socket,message,message,throws,ioexception
AbstractListenerWebSocketSession -> protected abstract boolean sendMessage(WebSocketMessage message) throws IOException_;1530912796;Send the given WebSocket message._<p><strong>Note:</strong> Sub-classes are responsible for releasing the_payload data buffer, once fully written, if pooled buffers apply to the_underlying container.;protected abstract boolean sendMessage(WebSocketMessage message) throws IOException_;send,the,given,web,socket,message,p,strong,note,strong,sub,classes,are,responsible,for,releasing,the,payload,data,buffer,once,fully,written,if,pooled,buffers,apply,to,the,underlying,container;protected,abstract,boolean,send,message,web,socket,message,message,throws,ioexception
AbstractListenerWebSocketSession -> protected abstract boolean sendMessage(WebSocketMessage message) throws IOException_;1539999914;Send the given WebSocket message._<p><strong>Note:</strong> Sub-classes are responsible for releasing the_payload data buffer, once fully written, if pooled buffers apply to the_underlying container.;protected abstract boolean sendMessage(WebSocketMessage message) throws IOException_;send,the,given,web,socket,message,p,strong,note,strong,sub,classes,are,responsible,for,releasing,the,payload,data,buffer,once,fully,written,if,pooled,buffers,apply,to,the,underlying,container;protected,abstract,boolean,send,message,web,socket,message,message,throws,ioexception
AbstractListenerWebSocketSession -> protected abstract void resumeReceiving()_;1485986572;Resume receiving new message(s) after demand is generated by the_downstream Subscriber._<p><strong>Note:</strong> if the underlying WebSocket API does not provide_flow control for receiving messages, and this method should be a no-op_and {@link #canSuspendReceiving()} should return {@code false}.;protected abstract void resumeReceiving()_;resume,receiving,new,message,s,after,demand,is,generated,by,the,downstream,subscriber,p,strong,note,strong,if,the,underlying,web,socket,api,does,not,provide,flow,control,for,receiving,messages,and,this,method,should,be,a,no,op,and,link,can,suspend,receiving,should,return,code,false;protected,abstract,void,resume,receiving
AbstractListenerWebSocketSession -> protected abstract void resumeReceiving()_;1496837955;Resume receiving new message(s) after demand is generated by the_downstream Subscriber._<p><strong>Note:</strong> if the underlying WebSocket API does not provide_flow control for receiving messages, and this method should be a no-op_and {@link #canSuspendReceiving()} should return {@code false}.;protected abstract void resumeReceiving()_;resume,receiving,new,message,s,after,demand,is,generated,by,the,downstream,subscriber,p,strong,note,strong,if,the,underlying,web,socket,api,does,not,provide,flow,control,for,receiving,messages,and,this,method,should,be,a,no,op,and,link,can,suspend,receiving,should,return,code,false;protected,abstract,void,resume,receiving
AbstractListenerWebSocketSession -> protected abstract void resumeReceiving()_;1498780456;Resume receiving new message(s) after demand is generated by the_downstream Subscriber._<p><strong>Note:</strong> if the underlying WebSocket API does not provide_flow control for receiving messages, and this method should be a no-op_and {@link #canSuspendReceiving()} should return {@code false}.;protected abstract void resumeReceiving()_;resume,receiving,new,message,s,after,demand,is,generated,by,the,downstream,subscriber,p,strong,note,strong,if,the,underlying,web,socket,api,does,not,provide,flow,control,for,receiving,messages,and,this,method,should,be,a,no,op,and,link,can,suspend,receiving,should,return,code,false;protected,abstract,void,resume,receiving
AbstractListenerWebSocketSession -> protected abstract void resumeReceiving()_;1502974979;Resume receiving new message(s) after demand is generated by the_downstream Subscriber._<p><strong>Note:</strong> if the underlying WebSocket API does not provide_flow control for receiving messages, and this method should be a no-op_and {@link #canSuspendReceiving()} should return {@code false}.;protected abstract void resumeReceiving()_;resume,receiving,new,message,s,after,demand,is,generated,by,the,downstream,subscriber,p,strong,note,strong,if,the,underlying,web,socket,api,does,not,provide,flow,control,for,receiving,messages,and,this,method,should,be,a,no,op,and,link,can,suspend,receiving,should,return,code,false;protected,abstract,void,resume,receiving
AbstractListenerWebSocketSession -> protected abstract void resumeReceiving()_;1511323173;Resume receiving new message(s) after demand is generated by the_downstream Subscriber._<p><strong>Note:</strong> if the underlying WebSocket API does not provide_flow control for receiving messages, and this method should be a no-op_and {@link #canSuspendReceiving()} should return {@code false}.;protected abstract void resumeReceiving()_;resume,receiving,new,message,s,after,demand,is,generated,by,the,downstream,subscriber,p,strong,note,strong,if,the,underlying,web,socket,api,does,not,provide,flow,control,for,receiving,messages,and,this,method,should,be,a,no,op,and,link,can,suspend,receiving,should,return,code,false;protected,abstract,void,resume,receiving
AbstractListenerWebSocketSession -> protected abstract void resumeReceiving()_;1511324413;Resume receiving new message(s) after demand is generated by the_downstream Subscriber._<p><strong>Note:</strong> if the underlying WebSocket API does not provide_flow control for receiving messages, and this method should be a no-op_and {@link #canSuspendReceiving()} should return {@code false}.;protected abstract void resumeReceiving()_;resume,receiving,new,message,s,after,demand,is,generated,by,the,downstream,subscriber,p,strong,note,strong,if,the,underlying,web,socket,api,does,not,provide,flow,control,for,receiving,messages,and,this,method,should,be,a,no,op,and,link,can,suspend,receiving,should,return,code,false;protected,abstract,void,resume,receiving
AbstractListenerWebSocketSession -> protected abstract void resumeReceiving()_;1511390883;Resume receiving new message(s) after demand is generated by the_downstream Subscriber._<p><strong>Note:</strong> if the underlying WebSocket API does not provide_flow control for receiving messages, and this method should be a no-op_and {@link #canSuspendReceiving()} should return {@code false}.;protected abstract void resumeReceiving()_;resume,receiving,new,message,s,after,demand,is,generated,by,the,downstream,subscriber,p,strong,note,strong,if,the,underlying,web,socket,api,does,not,provide,flow,control,for,receiving,messages,and,this,method,should,be,a,no,op,and,link,can,suspend,receiving,should,return,code,false;protected,abstract,void,resume,receiving
AbstractListenerWebSocketSession -> protected abstract void resumeReceiving()_;1511391320;Resume receiving new message(s) after demand is generated by the_downstream Subscriber._<p><strong>Note:</strong> if the underlying WebSocket API does not provide_flow control for receiving messages, and this method should be a no-op_and {@link #canSuspendReceiving()} should return {@code false}.;protected abstract void resumeReceiving()_;resume,receiving,new,message,s,after,demand,is,generated,by,the,downstream,subscriber,p,strong,note,strong,if,the,underlying,web,socket,api,does,not,provide,flow,control,for,receiving,messages,and,this,method,should,be,a,no,op,and,link,can,suspend,receiving,should,return,code,false;protected,abstract,void,resume,receiving
AbstractListenerWebSocketSession -> protected abstract void resumeReceiving()_;1511411136;Resume receiving new message(s) after demand is generated by the_downstream Subscriber._<p><strong>Note:</strong> if the underlying WebSocket API does not provide_flow control for receiving messages, and this method should be a no-op_and {@link #canSuspendReceiving()} should return {@code false}.;protected abstract void resumeReceiving()_;resume,receiving,new,message,s,after,demand,is,generated,by,the,downstream,subscriber,p,strong,note,strong,if,the,underlying,web,socket,api,does,not,provide,flow,control,for,receiving,messages,and,this,method,should,be,a,no,op,and,link,can,suspend,receiving,should,return,code,false;protected,abstract,void,resume,receiving
AbstractListenerWebSocketSession -> protected abstract void resumeReceiving()_;1511452503;Resume receiving new message(s) after demand is generated by the_downstream Subscriber._<p><strong>Note:</strong> if the underlying WebSocket API does not provide_flow control for receiving messages, and this method should be a no-op_and {@link #canSuspendReceiving()} should return {@code false}.;protected abstract void resumeReceiving()_;resume,receiving,new,message,s,after,demand,is,generated,by,the,downstream,subscriber,p,strong,note,strong,if,the,underlying,web,socket,api,does,not,provide,flow,control,for,receiving,messages,and,this,method,should,be,a,no,op,and,link,can,suspend,receiving,should,return,code,false;protected,abstract,void,resume,receiving
AbstractListenerWebSocketSession -> protected abstract void resumeReceiving()_;1524852408;Resume receiving new message(s) after demand is generated by the_downstream Subscriber._<p><strong>Note:</strong> if the underlying WebSocket API does not provide_flow control for receiving messages, this method should be a no-op_and {@link #canSuspendReceiving()} should return {@code false}.;protected abstract void resumeReceiving()_;resume,receiving,new,message,s,after,demand,is,generated,by,the,downstream,subscriber,p,strong,note,strong,if,the,underlying,web,socket,api,does,not,provide,flow,control,for,receiving,messages,this,method,should,be,a,no,op,and,link,can,suspend,receiving,should,return,code,false;protected,abstract,void,resume,receiving
AbstractListenerWebSocketSession -> protected abstract void resumeReceiving()_;1529721864;Resume receiving new message(s) after demand is generated by the_downstream Subscriber._<p><strong>Note:</strong> if the underlying WebSocket API does not provide_flow control for receiving messages, this method should be a no-op_and {@link #canSuspendReceiving()} should return {@code false}.;protected abstract void resumeReceiving()_;resume,receiving,new,message,s,after,demand,is,generated,by,the,downstream,subscriber,p,strong,note,strong,if,the,underlying,web,socket,api,does,not,provide,flow,control,for,receiving,messages,this,method,should,be,a,no,op,and,link,can,suspend,receiving,should,return,code,false;protected,abstract,void,resume,receiving
AbstractListenerWebSocketSession -> protected abstract void resumeReceiving()_;1530174524;Resume receiving new message(s) after demand is generated by the_downstream Subscriber._<p><strong>Note:</strong> if the underlying WebSocket API does not provide_flow control for receiving messages, this method should be a no-op_and {@link #canSuspendReceiving()} should return {@code false}.;protected abstract void resumeReceiving()_;resume,receiving,new,message,s,after,demand,is,generated,by,the,downstream,subscriber,p,strong,note,strong,if,the,underlying,web,socket,api,does,not,provide,flow,control,for,receiving,messages,this,method,should,be,a,no,op,and,link,can,suspend,receiving,should,return,code,false;protected,abstract,void,resume,receiving
AbstractListenerWebSocketSession -> protected abstract void resumeReceiving()_;1530190293;Resume receiving new message(s) after demand is generated by the_downstream Subscriber._<p><strong>Note:</strong> if the underlying WebSocket API does not provide_flow control for receiving messages, this method should be a no-op_and {@link #canSuspendReceiving()} should return {@code false}.;protected abstract void resumeReceiving()_;resume,receiving,new,message,s,after,demand,is,generated,by,the,downstream,subscriber,p,strong,note,strong,if,the,underlying,web,socket,api,does,not,provide,flow,control,for,receiving,messages,this,method,should,be,a,no,op,and,link,can,suspend,receiving,should,return,code,false;protected,abstract,void,resume,receiving
AbstractListenerWebSocketSession -> protected abstract void resumeReceiving()_;1530906258;Resume receiving new message(s) after demand is generated by the_downstream Subscriber._<p><strong>Note:</strong> if the underlying WebSocket API does not provide_flow control for receiving messages, this method should be a no-op_and {@link #canSuspendReceiving()} should return {@code false}.;protected abstract void resumeReceiving()_;resume,receiving,new,message,s,after,demand,is,generated,by,the,downstream,subscriber,p,strong,note,strong,if,the,underlying,web,socket,api,does,not,provide,flow,control,for,receiving,messages,this,method,should,be,a,no,op,and,link,can,suspend,receiving,should,return,code,false;protected,abstract,void,resume,receiving
AbstractListenerWebSocketSession -> protected abstract void resumeReceiving()_;1530912796;Resume receiving new message(s) after demand is generated by the_downstream Subscriber._<p><strong>Note:</strong> if the underlying WebSocket API does not provide_flow control for receiving messages, this method should be a no-op_and {@link #canSuspendReceiving()} should return {@code false}.;protected abstract void resumeReceiving()_;resume,receiving,new,message,s,after,demand,is,generated,by,the,downstream,subscriber,p,strong,note,strong,if,the,underlying,web,socket,api,does,not,provide,flow,control,for,receiving,messages,this,method,should,be,a,no,op,and,link,can,suspend,receiving,should,return,code,false;protected,abstract,void,resume,receiving
AbstractListenerWebSocketSession -> protected abstract void resumeReceiving()_;1539999914;Resume receiving new message(s) after demand is generated by the_downstream Subscriber._<p><strong>Note:</strong> if the underlying WebSocket API does not provide_flow control for receiving messages, this method should be a no-op_and {@link #canSuspendReceiving()} should return {@code false}.;protected abstract void resumeReceiving()_;resume,receiving,new,message,s,after,demand,is,generated,by,the,downstream,subscriber,p,strong,note,strong,if,the,underlying,web,socket,api,does,not,provide,flow,control,for,receiving,messages,this,method,should,be,a,no,op,and,link,can,suspend,receiving,should,return,code,false;protected,abstract,void,resume,receiving
