commented;modifiers;parameterAmount;loc;comment;code
true;;0;1;/**  * Return {@link HttpMessageReader HttpMessageReaders} to read and decode the response body with.  * @return the stream of message readers  */ ;/**  * Return {@link HttpMessageReader HttpMessageReaders} to read and decode the response body with.  * @return the stream of message readers  */ List<HttpMessageReader<?>> messageReaders().
true;;0;1;/**  * Return {@link HttpMessageWriter HttpMessageWriters} to write and encode the request body with.  * @return the stream of message writers  */ ;/**  * Return {@link HttpMessageWriter HttpMessageWriters} to write and encode the request body with.  * @return the stream of message writers  */ List<HttpMessageWriter<?>> messageWriters().
true;static;0;3;/**  * Return a new {@code ExchangeStrategies} with default configuration  * provided by {@link ClientCodecConfigurer}.  */ ;// Static methods /**  * Return a new {@code ExchangeStrategies} with default configuration  * provided by {@link ClientCodecConfigurer}.  */ static ExchangeStrategies withDefaults() {     return DefaultExchangeStrategiesBuilder.DEFAULT_EXCHANGE_STRATEGIES. }
true;static;0;5;/**  * Return a builder pre-configured with default configuration to start.  * This is the same as {@link #withDefaults()} but returns a mutable builder  * for further customizations.  */ ;/**  * Return a builder pre-configured with default configuration to start.  * This is the same as {@link #withDefaults()} but returns a mutable builder  * for further customizations.  */ static Builder builder() {     DefaultExchangeStrategiesBuilder builder = new DefaultExchangeStrategiesBuilder().     builder.defaultConfiguration().     return builder. }
true;static;0;3;/**  * Return a builder with empty configuration to start.  */ ;/**  * Return a builder with empty configuration to start.  */ static Builder empty() {     return new DefaultExchangeStrategiesBuilder(). }
true;;1;1;/**  * Customize the list of client-side HTTP message readers and writers.  * @param consumer the consumer to customize the codecs  * @return this builder  */ ;/**  * Customize the list of client-side HTTP message readers and writers.  * @param consumer the consumer to customize the codecs  * @return this builder  */ Builder codecs(Consumer<ClientCodecConfigurer> consumer).
true;;0;1;/**  * Builds the {@link ExchangeStrategies}.  * @return the built strategies  */ ;/**  * Builds the {@link ExchangeStrategies}.  * @return the built strategies  */ ExchangeStrategies build().
