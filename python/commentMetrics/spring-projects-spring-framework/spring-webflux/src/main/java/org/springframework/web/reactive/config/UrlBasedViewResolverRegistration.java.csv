commented;modifiers;parameterAmount;loc;comment;code
true;public;1;4;/**  * Set the prefix that gets prepended to view names when building a URL.  * @see UrlBasedViewResolver#setPrefix  */ ;/**  * Set the prefix that gets prepended to view names when building a URL.  * @see UrlBasedViewResolver#setPrefix  */ public UrlBasedViewResolverRegistration prefix(String prefix) {     this.viewResolver.setPrefix(prefix).     return this. }
true;public;1;4;/**  * Set the suffix that gets appended to view names when building a URL.  * @see UrlBasedViewResolver#setSuffix  */ ;/**  * Set the suffix that gets appended to view names when building a URL.  * @see UrlBasedViewResolver#setSuffix  */ public UrlBasedViewResolverRegistration suffix(String suffix) {     this.viewResolver.setSuffix(suffix).     return this. }
true;public;1;4;/**  * Set the view class that should be used to create views.  * @see UrlBasedViewResolver#setViewClass  */ ;/**  * Set the view class that should be used to create views.  * @see UrlBasedViewResolver#setViewClass  */ public UrlBasedViewResolverRegistration viewClass(Class<?> viewClass) {     this.viewResolver.setViewClass(viewClass).     return this. }
true;public;1;4;/**  * Set the view names (or name patterns) that can be handled by this view  * resolver. View names can contain simple wildcards such that 'my*', '*Report'  * and '*Repo*' will all match the view name 'myReport'.  * @see UrlBasedViewResolver#setViewNames  */ ;/**  * Set the view names (or name patterns) that can be handled by this view  * resolver. View names can contain simple wildcards such that 'my*', '*Report'  * and '*Repo*' will all match the view name 'myReport'.  * @see UrlBasedViewResolver#setViewNames  */ public UrlBasedViewResolverRegistration viewNames(String... viewNames) {     this.viewResolver.setViewNames(viewNames).     return this. }
false;protected;0;3;;protected UrlBasedViewResolver getViewResolver() {     return this.viewResolver. }
