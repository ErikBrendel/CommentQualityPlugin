commented;modifiers;parameterAmount;loc;comment;code
false;public;0;9;;@Test public void defaultValues() {     Rendering rendering = Rendering.view("abc").build().     assertEquals("abc", rendering.view()).     assertEquals(Collections.emptyMap(), rendering.modelAttributes()).     assertNull(rendering.status()).     assertEquals(0, rendering.headers().size()). }
false;public;0;10;;@Test public void defaultValuesForRedirect() throws Exception {     Rendering rendering = Rendering.redirectTo("abc").build().     Object view = rendering.view().     assertEquals(RedirectView.class, view.getClass()).     assertEquals("abc", ((RedirectView) view).getUrl()).     assertTrue(((RedirectView) view).isContextRelative()).     assertFalse(((RedirectView) view).isPropagateQuery()). }
false;public;0;5;;@Test public void viewName() {     Rendering rendering = Rendering.view("foo").build().     assertEquals("foo", rendering.view()). }
false;public;0;7;;@Test public void modelAttribute() throws Exception {     Foo foo = new Foo().     Rendering rendering = Rendering.view("foo").modelAttribute(foo).build().     assertEquals(Collections.singletonMap("foo", foo), rendering.modelAttributes()). }
false;public;0;11;;@Test public void modelAttributes() throws Exception {     Foo foo = new Foo().     Bar bar = new Bar().     Rendering rendering = Rendering.view("foo").modelAttributes(foo, bar).build().     Map<String, Object> map = new LinkedHashMap<>(2).     map.put("foo", foo).     map.put("bar", bar).     assertEquals(map, rendering.modelAttributes()). }
false;public;0;9;;@Test public void model() throws Exception {     Map<String, Object> map = new LinkedHashMap<>().     map.put("foo", new Foo()).     map.put("bar", new Bar()).     Rendering rendering = Rendering.view("foo").model(map).build().     assertEquals(map, rendering.modelAttributes()). }
false;public;0;7;;@Test public void header() throws Exception {     Rendering rendering = Rendering.view("foo").header("foo", "bar").build().     assertEquals(1, rendering.headers().size()).     assertEquals(Collections.singletonList("bar"), rendering.headers().get("foo")). }
false;public;0;8;;@Test public void httpHeaders() throws Exception {     HttpHeaders headers = new HttpHeaders().     headers.add("foo", "bar").     Rendering rendering = Rendering.view("foo").headers(headers).build().     assertEquals(headers, rendering.headers()). }
false;public;0;8;;@Test public void redirectWithAbsoluteUrl() throws Exception {     Rendering rendering = Rendering.redirectTo("foo").contextRelative(false).build().     Object view = rendering.view().     assertEquals(RedirectView.class, view.getClass()).     assertFalse(((RedirectView) view).isContextRelative()). }
false;public;0;8;;@Test public void redirectWithPropagateQuery() throws Exception {     Rendering rendering = Rendering.redirectTo("foo").propagateQuery(true).build().     Object view = rendering.view().     assertEquals(RedirectView.class, view.getClass()).     assertTrue(((RedirectView) view).isPropagateQuery()). }
