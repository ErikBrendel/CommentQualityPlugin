commented;modifiers;parameterAmount;loc;comment;code
false;public;0;8;;@Test public void combine() {     RequestConditionHolder params1 = new RequestConditionHolder(new ParamsRequestCondition("name1")).     RequestConditionHolder params2 = new RequestConditionHolder(new ParamsRequestCondition("name2")).     RequestConditionHolder expected = new RequestConditionHolder(new ParamsRequestCondition("name1", "name2")).     assertEquals(expected, params1.combine(params2)). }
false;public;0;9;;@Test public void combineEmpty() {     RequestConditionHolder empty = new RequestConditionHolder(null).     RequestConditionHolder notEmpty = new RequestConditionHolder(new ParamsRequestCondition("name")).     assertSame(empty, empty.combine(empty)).     assertSame(notEmpty, notEmpty.combine(empty)).     assertSame(notEmpty, empty.combine(notEmpty)). }
false;public;0;6;;@Test(expected = ClassCastException.class) public void combineIncompatible() {     RequestConditionHolder params = new RequestConditionHolder(new ParamsRequestCondition("name")).     RequestConditionHolder headers = new RequestConditionHolder(new HeadersRequestCondition("name")).     params.combine(headers). }
false;public;0;10;;@Test public void match() {     RequestMethodsRequestCondition rm = new RequestMethodsRequestCondition(RequestMethod.GET, RequestMethod.POST).     RequestConditionHolder custom = new RequestConditionHolder(rm).     RequestMethodsRequestCondition expected = new RequestMethodsRequestCondition(RequestMethod.GET).     RequestConditionHolder holder = custom.getMatchingCondition(this.exchange).     assertNotNull(holder).     assertEquals(expected, holder.getCondition()). }
false;public;0;7;;@Test public void noMatch() {     RequestMethodsRequestCondition rm = new RequestMethodsRequestCondition(RequestMethod.POST).     RequestConditionHolder custom = new RequestConditionHolder(rm).     assertNull(custom.getMatchingCondition(this.exchange)). }
false;public;0;5;;@Test public void matchEmpty() {     RequestConditionHolder empty = new RequestConditionHolder(null).     assertSame(empty, empty.getMatchingCondition(this.exchange)). }
false;public;0;8;;@Test public void compare() {     RequestConditionHolder params11 = new RequestConditionHolder(new ParamsRequestCondition("1")).     RequestConditionHolder params12 = new RequestConditionHolder(new ParamsRequestCondition("1", "2")).     assertEquals(1, params11.compareTo(params12, this.exchange)).     assertEquals(-1, params12.compareTo(params11, this.exchange)). }
false;public;0;10;;@Test public void compareEmpty() {     RequestConditionHolder empty = new RequestConditionHolder(null).     RequestConditionHolder empty2 = new RequestConditionHolder(null).     RequestConditionHolder notEmpty = new RequestConditionHolder(new ParamsRequestCondition("name")).     assertEquals(0, empty.compareTo(empty2, this.exchange)).     assertEquals(-1, notEmpty.compareTo(empty, this.exchange)).     assertEquals(1, empty.compareTo(notEmpty, this.exchange)). }
false;public;0;6;;@Test(expected = ClassCastException.class) public void compareIncompatible() {     RequestConditionHolder params = new RequestConditionHolder(new ParamsRequestCondition("name")).     RequestConditionHolder headers = new RequestConditionHolder(new HeadersRequestCondition("name")).     params.compareTo(headers, this.exchange). }
