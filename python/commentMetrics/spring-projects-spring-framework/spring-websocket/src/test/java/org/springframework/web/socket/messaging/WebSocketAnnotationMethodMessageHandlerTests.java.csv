commented;modifiers;parameterAmount;loc;comment;code
false;public;0;14;;@Before public void setUp() throws Exception {     this.applicationContext = new StaticApplicationContext().     this.applicationContext.registerSingleton("controller", TestController.class).     this.applicationContext.registerSingleton("controllerAdvice", TestControllerAdvice.class).     this.applicationContext.refresh().     SubscribableChannel channel = Mockito.mock(SubscribableChannel.class).     SimpMessageSendingOperations brokerTemplate = new SimpMessagingTemplate(channel).     this.messageHandler = new TestWebSocketAnnotationMethodMessageHandler(brokerTemplate, channel, channel).     this.messageHandler.setApplicationContext(this.applicationContext).     this.messageHandler.afterPropertiesSet(). }
false;public;0;12;;@Test public void globalException() throws Exception {     SimpMessageHeaderAccessor headers = SimpMessageHeaderAccessor.create().     headers.setSessionId("session1").     headers.setSessionAttributes(new ConcurrentHashMap<>()).     headers.setDestination("/exception").     Message<?> message = MessageBuilder.withPayload(new byte[0]).setHeaders(headers).build().     this.messageHandler.handleMessage(message).     TestControllerAdvice controllerAdvice = this.applicationContext.getBean(TestControllerAdvice.class).     assertTrue(controllerAdvice.isExceptionHandled()). }
false;public;0;4;;@MessageMapping("/exception") public void handleWithSimulatedException() {     throw new IllegalStateException("simulated exception"). }
false;public;0;3;;public boolean isExceptionHandled() {     return this.exceptionHandled. }
false;public;1;4;;@MessageExceptionHandler public void handleException(IllegalStateException ex) {     this.exceptionHandled = true. }
