commented;modifiers;parameterAmount;loc;comment;code
false;public;0;21;;@Before public void setup() throws Exception {     logger.debug("Setting up '" + this.testName.getMethodName() + "', client=" + this.webSocketClient.getClass().getSimpleName() + ", server=" + this.server.getClass().getSimpleName()).     this.wac = new AnnotationConfigWebApplicationContext().     this.wac.register(getAnnotatedConfigClasses()).     this.wac.register(upgradeStrategyConfigTypes.get(this.server.getClass())).     if (this.webSocketClient instanceof Lifecycle) {         ((Lifecycle) this.webSocketClient).start().     }     this.server.setup().     this.server.deployConfig(this.wac).     this.server.start().     this.wac.setServletContext(this.server.getServletContext()).     this.wac.refresh(). }
false;protected,abstract;0;1;;protected abstract Class<?>[] getAnnotatedConfigClasses().
false;public;0;29;;@After public void teardown() throws Exception {     try {         if (this.webSocketClient instanceof Lifecycle) {             ((Lifecycle) this.webSocketClient).stop().         }     } catch (Throwable t) {         logger.error("Failed to stop WebSocket client", t).     }     try {         this.server.undeployConfig().     } catch (Throwable t) {         logger.error("Failed to undeploy application config", t).     }     try {         this.server.stop().     } catch (Throwable t) {         logger.error("Failed to stop server", t).     }     try {         this.wac.close().     } catch (Throwable t) {         logger.error("Failed to close WebApplicationContext", t).     } }
false;protected;0;3;;protected String getWsBaseUrl() {     return "ws://localhost:" + this.server.getPort(). }
false;protected;2;3;;protected ListenableFuture<WebSocketSession> doHandshake(WebSocketHandler clientHandler, String endpointPath) {     return this.webSocketClient.doHandshake(clientHandler, getWsBaseUrl() + endpointPath). }
false;public;0;4;;@Bean public DefaultHandshakeHandler handshakeHandler() {     return new DefaultHandshakeHandler(requestUpgradeStrategy()). }
false;public,abstract;0;1;;public abstract RequestUpgradeStrategy requestUpgradeStrategy().
false;public;0;4;;@Bean public RequestUpgradeStrategy requestUpgradeStrategy() {     return new JettyRequestUpgradeStrategy(). }
false;public;0;4;;@Bean public RequestUpgradeStrategy requestUpgradeStrategy() {     return new TomcatRequestUpgradeStrategy(). }
false;public;0;4;;@Bean public RequestUpgradeStrategy requestUpgradeStrategy() {     return new UndertowRequestUpgradeStrategy(). }
