commented;modifiers;parameterAmount;loc;comment;code
false;public;0;14;;@Before public void setup() {     this.serverContainer = mock(ServerContainer.class).     this.servletContext = new MockServletContext().     this.servletContext.setAttribute("javax.websocket.server.ServerContainer", this.serverContainer).     this.webAppContext = new AnnotationConfigWebApplicationContext().     this.webAppContext.register(Config.class).     this.webAppContext.setServletContext(this.servletContext).     this.webAppContext.refresh().     this.exporter = new ServerEndpointExporter(). }
false;public;0;10;;@Test public void addAnnotatedEndpointClasses() throws Exception {     this.exporter.setAnnotatedEndpointClasses(AnnotatedDummyEndpoint.class).     this.exporter.setApplicationContext(this.webAppContext).     this.exporter.afterPropertiesSet().     this.exporter.afterSingletonsInstantiated().     verify(this.serverContainer).addEndpoint(AnnotatedDummyEndpoint.class).     verify(this.serverContainer).addEndpoint(AnnotatedDummyEndpointBean.class). }
false;public;0;10;;@Test public void addAnnotatedEndpointClassesWithServletContextOnly() throws Exception {     this.exporter.setAnnotatedEndpointClasses(AnnotatedDummyEndpoint.class, AnnotatedDummyEndpointBean.class).     this.exporter.setServletContext(this.servletContext).     this.exporter.afterPropertiesSet().     this.exporter.afterSingletonsInstantiated().     verify(this.serverContainer).addEndpoint(AnnotatedDummyEndpoint.class).     verify(this.serverContainer).addEndpoint(AnnotatedDummyEndpointBean.class). }
false;public;0;10;;@Test public void addAnnotatedEndpointClassesWithExplicitServerContainerOnly() throws Exception {     this.exporter.setAnnotatedEndpointClasses(AnnotatedDummyEndpoint.class, AnnotatedDummyEndpointBean.class).     this.exporter.setServerContainer(this.serverContainer).     this.exporter.afterPropertiesSet().     this.exporter.afterSingletonsInstantiated().     verify(this.serverContainer).addEndpoint(AnnotatedDummyEndpoint.class).     verify(this.serverContainer).addEndpoint(AnnotatedDummyEndpointBean.class). }
false;public;0;11;;@Test public void addServerEndpointConfigBean() throws Exception {     ServerEndpointRegistration endpointRegistration = new ServerEndpointRegistration("/dummy", new DummyEndpoint()).     this.webAppContext.getBeanFactory().registerSingleton("dummyEndpoint", endpointRegistration).     this.exporter.setApplicationContext(this.webAppContext).     this.exporter.afterPropertiesSet().     this.exporter.afterSingletonsInstantiated().     verify(this.serverContainer).addEndpoint(endpointRegistration). }
false;public;0;12;;@Test public void addServerEndpointConfigBeanWithExplicitServletContext() throws Exception {     ServerEndpointRegistration endpointRegistration = new ServerEndpointRegistration("/dummy", new DummyEndpoint()).     this.webAppContext.getBeanFactory().registerSingleton("dummyEndpoint", endpointRegistration).     this.exporter.setServletContext(this.servletContext).     this.exporter.setApplicationContext(this.webAppContext).     this.exporter.afterPropertiesSet().     this.exporter.afterSingletonsInstantiated().     verify(this.serverContainer).addEndpoint(endpointRegistration). }
false;public;0;13;;@Test public void addServerEndpointConfigBeanWithExplicitServerContainer() throws Exception {     ServerEndpointRegistration endpointRegistration = new ServerEndpointRegistration("/dummy", new DummyEndpoint()).     this.webAppContext.getBeanFactory().registerSingleton("dummyEndpoint", endpointRegistration).     this.servletContext.removeAttribute("javax.websocket.server.ServerContainer").     this.exporter.setServerContainer(this.serverContainer).     this.exporter.setApplicationContext(this.webAppContext).     this.exporter.afterPropertiesSet().     this.exporter.afterSingletonsInstantiated().     verify(this.serverContainer).addEndpoint(endpointRegistration). }
false;public;2;3;;@Override public void onOpen(Session session, EndpointConfig config) { }
false;public;0;4;;@Bean public AnnotatedDummyEndpointBean annotatedEndpoint1() {     return new AnnotatedDummyEndpointBean(). }
