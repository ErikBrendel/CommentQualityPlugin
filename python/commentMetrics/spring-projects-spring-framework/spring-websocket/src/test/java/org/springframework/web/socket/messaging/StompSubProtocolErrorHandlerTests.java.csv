commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Before public void setUp() throws Exception {     this.handler = new StompSubProtocolErrorHandler(). }
false;public;0;12;;@Test public void handleClientMessageProcessingError() throws Exception {     Exception ex = new Exception("fake exception").     Message<byte[]> actual = this.handler.handleClientMessageProcessingError(null, ex).     StompHeaderAccessor accessor = MessageHeaderAccessor.getAccessor(actual, StompHeaderAccessor.class).     assertNotNull(accessor).     assertEquals(StompCommand.ERROR, accessor.getCommand()).     assertEquals(ex.getMessage(), accessor.getMessage()).     assertArrayEquals(new byte[0], actual.getPayload()). }
false;public;0;14;;@Test public void handleClientMessageProcessingErrorWithReceipt() throws Exception {     String receiptId = "123".     StompHeaderAccessor clientHeaderAccessor = StompHeaderAccessor.create(StompCommand.SEND).     clientHeaderAccessor.setReceipt(receiptId).     MessageHeaders clientHeaders = clientHeaderAccessor.getMessageHeaders().     Message<byte[]> clientMessage = MessageBuilder.createMessage(new byte[0], clientHeaders).     Message<byte[]> actual = this.handler.handleClientMessageProcessingError(clientMessage, new Exception()).     StompHeaderAccessor accessor = MessageHeaderAccessor.getAccessor(actual, StompHeaderAccessor.class).     assertNotNull(accessor).     assertEquals(receiptId, accessor.getReceiptId()). }
