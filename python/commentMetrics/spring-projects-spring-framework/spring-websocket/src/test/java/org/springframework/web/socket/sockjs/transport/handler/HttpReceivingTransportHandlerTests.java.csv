commented;modifiers;parameterAmount;loc;comment;code
false;public;0;7;;@Test public void readMessagesXhr() throws Exception {     this.servletRequest.setContent("[\"x\"]".getBytes("UTF-8")).     handleRequest(new XhrReceivingTransportHandler()).     assertEquals(204, this.servletResponse.getStatus()). }
false;public;0;8;;@Test public void readMessagesBadContent() throws Exception {     this.servletRequest.setContent("".getBytes("UTF-8")).     handleRequestAndExpectFailure().     this.servletRequest.setContent("[\"x]".getBytes("UTF-8")).     handleRequestAndExpectFailure(). }
false;public;0;5;;@Test(expected = IllegalArgumentException.class) public void readMessagesNoSession() throws Exception {     WebSocketHandler webSocketHandler = mock(WebSocketHandler.class).     new XhrReceivingTransportHandler().handleRequest(this.request, this.response, webSocketHandler, null). }
false;public;0;21;;@Test public void delegateMessageException() throws Exception {     StubSockJsServiceConfig sockJsConfig = new StubSockJsServiceConfig().     this.servletRequest.setContent("[\"x\"]".getBytes("UTF-8")).     WebSocketHandler wsHandler = mock(WebSocketHandler.class).     TestHttpSockJsSession session = new TestHttpSockJsSession("1", sockJsConfig, wsHandler, null).     session.delegateConnectionEstablished().     willThrow(new Exception()).given(wsHandler).handleMessage(session, new TextMessage("x")).     try {         XhrReceivingTransportHandler transportHandler = new XhrReceivingTransportHandler().         transportHandler.initialize(sockJsConfig).         transportHandler.handleRequest(this.request, this.response, wsHandler, session).         fail("Expected exception").     } catch (SockJsMessageDeliveryException ex) {         assertNull(session.getCloseStatus()).     } }
false;private;1;10;;private void handleRequest(AbstractHttpReceivingTransportHandler transportHandler) throws Exception {     WebSocketHandler wsHandler = mock(WebSocketHandler.class).     AbstractSockJsSession session = new TestHttpSockJsSession("1", new StubSockJsServiceConfig(), wsHandler, null).     transportHandler.initialize(new StubSockJsServiceConfig()).     transportHandler.handleRequest(this.request, this.response, wsHandler, session).     assertEquals("text/plain.charset=UTF-8", this.response.getHeaders().getContentType().toString()).     verify(wsHandler).handleMessage(session, new TextMessage("x")). }
false;private;0;11;;private void handleRequestAndExpectFailure() throws Exception {     resetResponse().     WebSocketHandler wsHandler = mock(WebSocketHandler.class).     AbstractSockJsSession session = new TestHttpSockJsSession("1", new StubSockJsServiceConfig(), wsHandler, null).     new XhrReceivingTransportHandler().handleRequest(this.request, this.response, wsHandler, session).     assertEquals(500, this.servletResponse.getStatus()).     verifyNoMoreInteractions(wsHandler). }
