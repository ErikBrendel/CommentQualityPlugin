commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public String getId() {     return this.id. }
false;public;1;3;;public void setId(String id) {     this.id = id. }
false;public;0;4;;@Override public URI getUri() {     return this.uri. }
false;public;1;3;;public void setUri(URI uri) {     this.uri = uri. }
false;public;0;4;;@Override public HttpHeaders getHandshakeHeaders() {     return this.headers. }
false;public;0;3;;public HttpHeaders getHeaders() {     return this.headers. }
false;public;1;3;;public void setHeaders(HttpHeaders headers) {     this.headers = headers. }
false;public;1;3;;public void setAttributes(Map<String, Object> attributes) {     this.attributes = attributes. }
false;public;0;4;;@Override public Map<String, Object> getAttributes() {     return this.attributes. }
false;public;0;4;;@Override public Principal getPrincipal() {     return this.principal. }
false;public;1;3;;public void setPrincipal(Principal principal) {     this.principal = principal. }
false;public;0;4;;@Override public InetSocketAddress getLocalAddress() {     return this.localAddress. }
false;public;1;3;;public void setLocalAddress(InetSocketAddress localAddress) {     this.localAddress = localAddress. }
false;public;0;4;;@Override public InetSocketAddress getRemoteAddress() {     return this.remoteAddress. }
false;public;1;3;;public void setRemoteAddress(InetSocketAddress remoteAddress) {     this.remoteAddress = remoteAddress. }
false;public;0;3;;public String getAcceptedProtocol() {     return this.protocol. }
false;public;1;3;;public void setAcceptedProtocol(String protocol) {     this.protocol = protocol. }
false;public;1;3;;@Override public void setTextMessageSizeLimit(int messageSizeLimit) { }
false;public;0;4;;@Override public int getTextMessageSizeLimit() {     return 0. }
false;public;1;3;;@Override public void setBinaryMessageSizeLimit(int messageSizeLimit) { }
false;public;0;4;;@Override public int getBinaryMessageSizeLimit() {     return 0. }
false;public;0;4;;@Override public List<WebSocketExtension> getExtensions() {     return this.extensions. }
false;public;1;3;;public void setExtensions(List<WebSocketExtension> extensions) {     this.extensions = extensions. }
false;public;0;4;;@Override public boolean isOpen() {     return this.open. }
false;public;1;3;;public void setOpen(boolean open) {     this.open = open. }
false;public;0;3;;public List<WebSocketMessage<?>> getSentMessages() {     return this.messages. }
false;public;0;3;;public CloseStatus getCloseStatus() {     return this.status. }
false;public;1;4;;@Override public void sendMessage(WebSocketMessage<?> message) throws IOException {     this.messages.add(message). }
false;public;0;4;;@Override public void close() throws IOException {     this.open = false. }
false;public;1;5;;@Override public void close(CloseStatus status) throws IOException {     this.open = false.     this.status = status. }
