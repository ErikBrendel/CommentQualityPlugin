commented;modifiers;parameterAmount;loc;comment;code
false;public;0;11;;@Before public void setup() {     super.setup().     i1 = mock(HandshakeInterceptor.class).     i2 = mock(HandshakeInterceptor.class).     i3 = mock(HandshakeInterceptor.class).     interceptors = Arrays.asList(i1, i2, i3).     wsHandler = mock(WebSocketHandler.class).     attributes = new HashMap<>(). }
false;public;0;14;;@Test public void success() throws Exception {     given(i1.beforeHandshake(request, response, wsHandler, attributes)).willReturn(true).     given(i2.beforeHandshake(request, response, wsHandler, attributes)).willReturn(true).     given(i3.beforeHandshake(request, response, wsHandler, attributes)).willReturn(true).     HandshakeInterceptorChain chain = new HandshakeInterceptorChain(interceptors, wsHandler).     chain.applyBeforeHandshake(request, response, attributes).     verify(i1).beforeHandshake(request, response, wsHandler, attributes).     verify(i2).beforeHandshake(request, response, wsHandler, attributes).     verify(i3).beforeHandshake(request, response, wsHandler, attributes).     verifyNoMoreInteractions(i1, i2, i3). }
false;public;0;13;;@Test public void applyBeforeHandshakeWithFalseReturnValue() throws Exception {     given(i1.beforeHandshake(request, response, wsHandler, attributes)).willReturn(true).     given(i2.beforeHandshake(request, response, wsHandler, attributes)).willReturn(false).     HandshakeInterceptorChain chain = new HandshakeInterceptorChain(interceptors, wsHandler).     chain.applyBeforeHandshake(request, response, attributes).     verify(i1).beforeHandshake(request, response, wsHandler, attributes).     verify(i1).afterHandshake(request, response, wsHandler, null).     verify(i2).beforeHandshake(request, response, wsHandler, attributes).     verifyNoMoreInteractions(i1, i2, i3). }
false;public;0;7;;@Test public void applyAfterHandshakeOnly() {     HandshakeInterceptorChain chain = new HandshakeInterceptorChain(interceptors, wsHandler).     chain.applyAfterHandshake(request, response, null).     verifyNoMoreInteractions(i1, i2, i3). }
