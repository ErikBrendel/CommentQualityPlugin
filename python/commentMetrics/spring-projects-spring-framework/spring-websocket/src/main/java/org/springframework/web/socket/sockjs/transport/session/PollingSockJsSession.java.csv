commented;modifiers;parameterAmount;loc;comment;code
false;protected;3;14;;@Override protected void handleRequestInternal(ServerHttpRequest request, ServerHttpResponse response, boolean initialRequest) throws IOException {     if (initialRequest) {         writeFrame(SockJsFrame.openFrame()).     } else if (!getMessageCache().isEmpty()) {         flushCache().     } else {         scheduleHeartbeat().     } }
false;protected;0;10;;@Override protected void flushCache() throws SockJsTransportFailureException {     String[] messages = new String[getMessageCache().size()].     for (int i = 0. i < messages.length. i++) {         messages[i] = getMessageCache().poll().     }     SockJsMessageCodec messageCodec = getSockJsServiceConfig().getMessageCodec().     SockJsFrame frame = SockJsFrame.messageFrame(messageCodec, messages).     writeFrame(frame). }
false;protected;1;5;;@Override protected void writeFrame(SockJsFrame frame) throws SockJsTransportFailureException {     super.writeFrame(frame).     resetRequest(). }
