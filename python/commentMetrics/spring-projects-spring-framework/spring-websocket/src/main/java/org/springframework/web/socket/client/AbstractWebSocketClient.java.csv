# id;timestamp;commentText;codeText;commentWords;codeWords
AbstractWebSocketClient -> protected abstract ListenableFuture<WebSocketSession> doHandshakeInternal(WebSocketHandler webSocketHandler, 			HttpHeaders headers, URI uri, List<String> subProtocols, List<WebSocketExtension> extensions, 			Map<String, Object> handshakeAttributes)_;1383014491;Perform the actual handshake to establish a connection to the server.__@param webSocketHandler the client-side handler for WebSocket messages_@param headers HTTP headers to use for the handshake, with unwanted (forbidden)_headers filtered out, never {@code null}_@param uri the target URI for the handshake, never {@code null}_@param subProtocols requested sub-protocols, or an empty list_@param extensions requested WebSocket extensions, or an empty list_@param handshakeAttributes attributes to make available via_{@link WebSocketSession#getHandshakeAttributes()}_ currently always an empty map.__@return the established WebSocket session wrapped in a ListenableFuture.;protected abstract ListenableFuture<WebSocketSession> doHandshakeInternal(WebSocketHandler webSocketHandler,_			HttpHeaders headers, URI uri, List<String> subProtocols, List<WebSocketExtension> extensions,_			Map<String, Object> handshakeAttributes)_;perform,the,actual,handshake,to,establish,a,connection,to,the,server,param,web,socket,handler,the,client,side,handler,for,web,socket,messages,param,headers,http,headers,to,use,for,the,handshake,with,unwanted,forbidden,headers,filtered,out,never,code,null,param,uri,the,target,uri,for,the,handshake,never,code,null,param,sub,protocols,requested,sub,protocols,or,an,empty,list,param,extensions,requested,web,socket,extensions,or,an,empty,list,param,handshake,attributes,attributes,to,make,available,via,link,web,socket,session,get,handshake,attributes,currently,always,an,empty,map,return,the,established,web,socket,session,wrapped,in,a,listenable,future;protected,abstract,listenable,future,web,socket,session,do,handshake,internal,web,socket,handler,web,socket,handler,http,headers,headers,uri,uri,list,string,sub,protocols,list,web,socket,extension,extensions,map,string,object,handshake,attributes
AbstractWebSocketClient -> protected abstract ListenableFuture<WebSocketSession> doHandshakeInternal(WebSocketHandler webSocketHandler, 			HttpHeaders headers, URI uri, List<String> subProtocols, List<WebSocketExtension> extensions, 			Map<String, Object> handshakeAttributes)_;1383071981;Perform the actual handshake to establish a connection to the server.__@param webSocketHandler the client-side handler for WebSocket messages_@param headers HTTP headers to use for the handshake, with unwanted (forbidden)_headers filtered out, never {@code null}_@param uri the target URI for the handshake, never {@code null}_@param subProtocols requested sub-protocols, or an empty list_@param extensions requested WebSocket extensions, or an empty list_@param handshakeAttributes attributes to make available via_{@link WebSocketSession#getHandshakeAttributes()}_ currently always an empty map.__@return the established WebSocket session wrapped in a ListenableFuture.;protected abstract ListenableFuture<WebSocketSession> doHandshakeInternal(WebSocketHandler webSocketHandler,_			HttpHeaders headers, URI uri, List<String> subProtocols, List<WebSocketExtension> extensions,_			Map<String, Object> handshakeAttributes)_;perform,the,actual,handshake,to,establish,a,connection,to,the,server,param,web,socket,handler,the,client,side,handler,for,web,socket,messages,param,headers,http,headers,to,use,for,the,handshake,with,unwanted,forbidden,headers,filtered,out,never,code,null,param,uri,the,target,uri,for,the,handshake,never,code,null,param,sub,protocols,requested,sub,protocols,or,an,empty,list,param,extensions,requested,web,socket,extensions,or,an,empty,list,param,handshake,attributes,attributes,to,make,available,via,link,web,socket,session,get,handshake,attributes,currently,always,an,empty,map,return,the,established,web,socket,session,wrapped,in,a,listenable,future;protected,abstract,listenable,future,web,socket,session,do,handshake,internal,web,socket,handler,web,socket,handler,http,headers,headers,uri,uri,list,string,sub,protocols,list,web,socket,extension,extensions,map,string,object,handshake,attributes
AbstractWebSocketClient -> protected abstract ListenableFuture<WebSocketSession> doHandshakeInternal(WebSocketHandler webSocketHandler, 			HttpHeaders headers, URI uri, List<String> subProtocols, List<WebSocketExtension> extensions, 			Map<String, Object> handshakeAttributes)_;1385507478;Perform the actual handshake to establish a connection to the server._@param webSocketHandler the client-side handler for WebSocket messages_@param headers HTTP headers to use for the handshake, with unwanted (forbidden)_headers filtered out, never {@code null}_@param uri the target URI for the handshake, never {@code null}_@param subProtocols requested sub-protocols, or an empty list_@param extensions requested WebSocket extensions, or an empty list_@param handshakeAttributes attributes to make available via_{@link WebSocketSession#getHandshakeAttributes()}_ currently always an empty map._@return the established WebSocket session wrapped in a ListenableFuture.;protected abstract ListenableFuture<WebSocketSession> doHandshakeInternal(WebSocketHandler webSocketHandler,_			HttpHeaders headers, URI uri, List<String> subProtocols, List<WebSocketExtension> extensions,_			Map<String, Object> handshakeAttributes)_;perform,the,actual,handshake,to,establish,a,connection,to,the,server,param,web,socket,handler,the,client,side,handler,for,web,socket,messages,param,headers,http,headers,to,use,for,the,handshake,with,unwanted,forbidden,headers,filtered,out,never,code,null,param,uri,the,target,uri,for,the,handshake,never,code,null,param,sub,protocols,requested,sub,protocols,or,an,empty,list,param,extensions,requested,web,socket,extensions,or,an,empty,list,param,handshake,attributes,attributes,to,make,available,via,link,web,socket,session,get,handshake,attributes,currently,always,an,empty,map,return,the,established,web,socket,session,wrapped,in,a,listenable,future;protected,abstract,listenable,future,web,socket,session,do,handshake,internal,web,socket,handler,web,socket,handler,http,headers,headers,uri,uri,list,string,sub,protocols,list,web,socket,extension,extensions,map,string,object,handshake,attributes
AbstractWebSocketClient -> protected abstract ListenableFuture<WebSocketSession> doHandshakeInternal(WebSocketHandler webSocketHandler, 			HttpHeaders headers, URI uri, List<String> subProtocols, List<WebSocketExtension> extensions, 			Map<String, Object> handshakeAttributes)_;1386021191;Perform the actual handshake to establish a connection to the server._@param webSocketHandler the client-side handler for WebSocket messages_@param headers HTTP headers to use for the handshake, with unwanted (forbidden)_headers filtered out, never {@code null}_@param uri the target URI for the handshake, never {@code null}_@param subProtocols requested sub-protocols, or an empty list_@param extensions requested WebSocket extensions, or an empty list_@param handshakeAttributes attributes to make available via_{@link WebSocketSession#getHandshakeAttributes()}_ currently always an empty map._@return the established WebSocket session wrapped in a ListenableFuture.;protected abstract ListenableFuture<WebSocketSession> doHandshakeInternal(WebSocketHandler webSocketHandler,_			HttpHeaders headers, URI uri, List<String> subProtocols, List<WebSocketExtension> extensions,_			Map<String, Object> handshakeAttributes)_;perform,the,actual,handshake,to,establish,a,connection,to,the,server,param,web,socket,handler,the,client,side,handler,for,web,socket,messages,param,headers,http,headers,to,use,for,the,handshake,with,unwanted,forbidden,headers,filtered,out,never,code,null,param,uri,the,target,uri,for,the,handshake,never,code,null,param,sub,protocols,requested,sub,protocols,or,an,empty,list,param,extensions,requested,web,socket,extensions,or,an,empty,list,param,handshake,attributes,attributes,to,make,available,via,link,web,socket,session,get,handshake,attributes,currently,always,an,empty,map,return,the,established,web,socket,session,wrapped,in,a,listenable,future;protected,abstract,listenable,future,web,socket,session,do,handshake,internal,web,socket,handler,web,socket,handler,http,headers,headers,uri,uri,list,string,sub,protocols,list,web,socket,extension,extensions,map,string,object,handshake,attributes
AbstractWebSocketClient -> protected abstract ListenableFuture<WebSocketSession> doHandshakeInternal(WebSocketHandler webSocketHandler, 			HttpHeaders headers, URI uri, List<String> subProtocols, List<WebSocketExtension> extensions, 			Map<String, Object> handshakeAttributes)_;1386087504;Perform the actual handshake to establish a connection to the server._@param webSocketHandler the client-side handler for WebSocket messages_@param headers HTTP headers to use for the handshake, with unwanted (forbidden)_headers filtered out, never {@code null}_@param uri the target URI for the handshake, never {@code null}_@param subProtocols requested sub-protocols, or an empty list_@param extensions requested WebSocket extensions, or an empty list_@param handshakeAttributes attributes to make available via_{@link WebSocketSession#getHandshakeAttributes()}_ currently always an empty map._@return the established WebSocket session wrapped in a ListenableFuture.;protected abstract ListenableFuture<WebSocketSession> doHandshakeInternal(WebSocketHandler webSocketHandler,_			HttpHeaders headers, URI uri, List<String> subProtocols, List<WebSocketExtension> extensions,_			Map<String, Object> handshakeAttributes)_;perform,the,actual,handshake,to,establish,a,connection,to,the,server,param,web,socket,handler,the,client,side,handler,for,web,socket,messages,param,headers,http,headers,to,use,for,the,handshake,with,unwanted,forbidden,headers,filtered,out,never,code,null,param,uri,the,target,uri,for,the,handshake,never,code,null,param,sub,protocols,requested,sub,protocols,or,an,empty,list,param,extensions,requested,web,socket,extensions,or,an,empty,list,param,handshake,attributes,attributes,to,make,available,via,link,web,socket,session,get,handshake,attributes,currently,always,an,empty,map,return,the,established,web,socket,session,wrapped,in,a,listenable,future;protected,abstract,listenable,future,web,socket,session,do,handshake,internal,web,socket,handler,web,socket,handler,http,headers,headers,uri,uri,list,string,sub,protocols,list,web,socket,extension,extensions,map,string,object,handshake,attributes
AbstractWebSocketClient -> protected abstract ListenableFuture<WebSocketSession> doHandshakeInternal(WebSocketHandler webSocketHandler, 			HttpHeaders headers, URI uri, List<String> subProtocols, List<WebSocketExtension> extensions, 			Map<String, Object> handshakeAttributes)_;1390242357;Perform the actual handshake to establish a connection to the server._@param webSocketHandler the client-side handler for WebSocket messages_@param headers HTTP headers to use for the handshake, with unwanted (forbidden)_headers filtered out, never {@code null}_@param uri the target URI for the handshake, never {@code null}_@param subProtocols requested sub-protocols, or an empty list_@param extensions requested WebSocket extensions, or an empty list_@param handshakeAttributes attributes to make available via_{@link WebSocketSession#getHandshakeAttributes()}_ currently always an empty map._@return the established WebSocket session wrapped in a ListenableFuture.;protected abstract ListenableFuture<WebSocketSession> doHandshakeInternal(WebSocketHandler webSocketHandler,_			HttpHeaders headers, URI uri, List<String> subProtocols, List<WebSocketExtension> extensions,_			Map<String, Object> handshakeAttributes)_;perform,the,actual,handshake,to,establish,a,connection,to,the,server,param,web,socket,handler,the,client,side,handler,for,web,socket,messages,param,headers,http,headers,to,use,for,the,handshake,with,unwanted,forbidden,headers,filtered,out,never,code,null,param,uri,the,target,uri,for,the,handshake,never,code,null,param,sub,protocols,requested,sub,protocols,or,an,empty,list,param,extensions,requested,web,socket,extensions,or,an,empty,list,param,handshake,attributes,attributes,to,make,available,via,link,web,socket,session,get,handshake,attributes,currently,always,an,empty,map,return,the,established,web,socket,session,wrapped,in,a,listenable,future;protected,abstract,listenable,future,web,socket,session,do,handshake,internal,web,socket,handler,web,socket,handler,http,headers,headers,uri,uri,list,string,sub,protocols,list,web,socket,extension,extensions,map,string,object,handshake,attributes
AbstractWebSocketClient -> protected abstract ListenableFuture<WebSocketSession> doHandshakeInternal(WebSocketHandler webSocketHandler, 			HttpHeaders headers, URI uri, List<String> subProtocols, List<WebSocketExtension> extensions, 			Map<String, Object> attributes)_;1395246308;Perform the actual handshake to establish a connection to the server.__@param webSocketHandler the client-side handler for WebSocket messages_@param headers HTTP headers to use for the handshake, with unwanted (forbidden)_headers filtered out, never {@code null}_@param uri the target URI for the handshake, never {@code null}_@param subProtocols requested sub-protocols, or an empty list_@param extensions requested WebSocket extensions, or an empty list_@param attributes attributes to associate with the WebSocketSession, i.e. via_{@link WebSocketSession#getAttributes()}_ currently always an empty map.__@return the established WebSocket session wrapped in a ListenableFuture.;protected abstract ListenableFuture<WebSocketSession> doHandshakeInternal(WebSocketHandler webSocketHandler,_			HttpHeaders headers, URI uri, List<String> subProtocols, List<WebSocketExtension> extensions,_			Map<String, Object> attributes)_;perform,the,actual,handshake,to,establish,a,connection,to,the,server,param,web,socket,handler,the,client,side,handler,for,web,socket,messages,param,headers,http,headers,to,use,for,the,handshake,with,unwanted,forbidden,headers,filtered,out,never,code,null,param,uri,the,target,uri,for,the,handshake,never,code,null,param,sub,protocols,requested,sub,protocols,or,an,empty,list,param,extensions,requested,web,socket,extensions,or,an,empty,list,param,attributes,attributes,to,associate,with,the,web,socket,session,i,e,via,link,web,socket,session,get,attributes,currently,always,an,empty,map,return,the,established,web,socket,session,wrapped,in,a,listenable,future;protected,abstract,listenable,future,web,socket,session,do,handshake,internal,web,socket,handler,web,socket,handler,http,headers,headers,uri,uri,list,string,sub,protocols,list,web,socket,extension,extensions,map,string,object,attributes
AbstractWebSocketClient -> protected abstract ListenableFuture<WebSocketSession> doHandshakeInternal(WebSocketHandler webSocketHandler, 			HttpHeaders headers, URI uri, List<String> subProtocols, List<WebSocketExtension> extensions, 			Map<String, Object> attributes)_;1403719829;Perform the actual handshake to establish a connection to the server.__@param webSocketHandler the client-side handler for WebSocket messages_@param headers HTTP headers to use for the handshake, with unwanted (forbidden)_headers filtered out, never {@code null}_@param uri the target URI for the handshake, never {@code null}_@param subProtocols requested sub-protocols, or an empty list_@param extensions requested WebSocket extensions, or an empty list_@param attributes attributes to associate with the WebSocketSession, i.e. via_{@link WebSocketSession#getAttributes()}_ currently always an empty map.__@return the established WebSocket session wrapped in a ListenableFuture.;protected abstract ListenableFuture<WebSocketSession> doHandshakeInternal(WebSocketHandler webSocketHandler,_			HttpHeaders headers, URI uri, List<String> subProtocols, List<WebSocketExtension> extensions,_			Map<String, Object> attributes)_;perform,the,actual,handshake,to,establish,a,connection,to,the,server,param,web,socket,handler,the,client,side,handler,for,web,socket,messages,param,headers,http,headers,to,use,for,the,handshake,with,unwanted,forbidden,headers,filtered,out,never,code,null,param,uri,the,target,uri,for,the,handshake,never,code,null,param,sub,protocols,requested,sub,protocols,or,an,empty,list,param,extensions,requested,web,socket,extensions,or,an,empty,list,param,attributes,attributes,to,associate,with,the,web,socket,session,i,e,via,link,web,socket,session,get,attributes,currently,always,an,empty,map,return,the,established,web,socket,session,wrapped,in,a,listenable,future;protected,abstract,listenable,future,web,socket,session,do,handshake,internal,web,socket,handler,web,socket,handler,http,headers,headers,uri,uri,list,string,sub,protocols,list,web,socket,extension,extensions,map,string,object,attributes
AbstractWebSocketClient -> protected abstract ListenableFuture<WebSocketSession> doHandshakeInternal(WebSocketHandler webSocketHandler, 			HttpHeaders headers, URI uri, List<String> subProtocols, List<WebSocketExtension> extensions, 			Map<String, Object> attributes)_;1404880799;Perform the actual handshake to establish a connection to the server.__@param webSocketHandler the client-side handler for WebSocket messages_@param headers HTTP headers to use for the handshake, with unwanted (forbidden)_headers filtered out, never {@code null}_@param uri the target URI for the handshake, never {@code null}_@param subProtocols requested sub-protocols, or an empty list_@param extensions requested WebSocket extensions, or an empty list_@param attributes attributes to associate with the WebSocketSession, i.e. via_{@link WebSocketSession#getAttributes()}_ currently always an empty map.__@return the established WebSocket session wrapped in a ListenableFuture.;protected abstract ListenableFuture<WebSocketSession> doHandshakeInternal(WebSocketHandler webSocketHandler,_			HttpHeaders headers, URI uri, List<String> subProtocols, List<WebSocketExtension> extensions,_			Map<String, Object> attributes)_;perform,the,actual,handshake,to,establish,a,connection,to,the,server,param,web,socket,handler,the,client,side,handler,for,web,socket,messages,param,headers,http,headers,to,use,for,the,handshake,with,unwanted,forbidden,headers,filtered,out,never,code,null,param,uri,the,target,uri,for,the,handshake,never,code,null,param,sub,protocols,requested,sub,protocols,or,an,empty,list,param,extensions,requested,web,socket,extensions,or,an,empty,list,param,attributes,attributes,to,associate,with,the,web,socket,session,i,e,via,link,web,socket,session,get,attributes,currently,always,an,empty,map,return,the,established,web,socket,session,wrapped,in,a,listenable,future;protected,abstract,listenable,future,web,socket,session,do,handshake,internal,web,socket,handler,web,socket,handler,http,headers,headers,uri,uri,list,string,sub,protocols,list,web,socket,extension,extensions,map,string,object,attributes
AbstractWebSocketClient -> protected abstract ListenableFuture<WebSocketSession> doHandshakeInternal(WebSocketHandler webSocketHandler, 			HttpHeaders headers, URI uri, List<String> subProtocols, List<WebSocketExtension> extensions, 			Map<String, Object> attributes)_;1413848647;Perform the actual handshake to establish a connection to the server.__@param webSocketHandler the client-side handler for WebSocket messages_@param headers HTTP headers to use for the handshake, with unwanted (forbidden)_headers filtered out, never {@code null}_@param uri the target URI for the handshake, never {@code null}_@param subProtocols requested sub-protocols, or an empty list_@param extensions requested WebSocket extensions, or an empty list_@param attributes attributes to associate with the WebSocketSession, i.e. via_{@link WebSocketSession#getAttributes()}_ currently always an empty map.__@return the established WebSocket session wrapped in a ListenableFuture.;protected abstract ListenableFuture<WebSocketSession> doHandshakeInternal(WebSocketHandler webSocketHandler,_			HttpHeaders headers, URI uri, List<String> subProtocols, List<WebSocketExtension> extensions,_			Map<String, Object> attributes)_;perform,the,actual,handshake,to,establish,a,connection,to,the,server,param,web,socket,handler,the,client,side,handler,for,web,socket,messages,param,headers,http,headers,to,use,for,the,handshake,with,unwanted,forbidden,headers,filtered,out,never,code,null,param,uri,the,target,uri,for,the,handshake,never,code,null,param,sub,protocols,requested,sub,protocols,or,an,empty,list,param,extensions,requested,web,socket,extensions,or,an,empty,list,param,attributes,attributes,to,associate,with,the,web,socket,session,i,e,via,link,web,socket,session,get,attributes,currently,always,an,empty,map,return,the,established,web,socket,session,wrapped,in,a,listenable,future;protected,abstract,listenable,future,web,socket,session,do,handshake,internal,web,socket,handler,web,socket,handler,http,headers,headers,uri,uri,list,string,sub,protocols,list,web,socket,extension,extensions,map,string,object,attributes
AbstractWebSocketClient -> protected abstract ListenableFuture<WebSocketSession> doHandshakeInternal(WebSocketHandler webSocketHandler, 			HttpHeaders headers, URI uri, List<String> subProtocols, List<WebSocketExtension> extensions, 			Map<String, Object> attributes)_;1467730834;Perform the actual handshake to establish a connection to the server.__@param webSocketHandler the client-side handler for WebSocket messages_@param headers HTTP headers to use for the handshake, with unwanted (forbidden)_headers filtered out, never {@code null}_@param uri the target URI for the handshake, never {@code null}_@param subProtocols requested sub-protocols, or an empty list_@param extensions requested WebSocket extensions, or an empty list_@param attributes attributes to associate with the WebSocketSession, i.e. via_{@link WebSocketSession#getAttributes()}_ currently always an empty map.__@return the established WebSocket session wrapped in a ListenableFuture.;protected abstract ListenableFuture<WebSocketSession> doHandshakeInternal(WebSocketHandler webSocketHandler,_			HttpHeaders headers, URI uri, List<String> subProtocols, List<WebSocketExtension> extensions,_			Map<String, Object> attributes)_;perform,the,actual,handshake,to,establish,a,connection,to,the,server,param,web,socket,handler,the,client,side,handler,for,web,socket,messages,param,headers,http,headers,to,use,for,the,handshake,with,unwanted,forbidden,headers,filtered,out,never,code,null,param,uri,the,target,uri,for,the,handshake,never,code,null,param,sub,protocols,requested,sub,protocols,or,an,empty,list,param,extensions,requested,web,socket,extensions,or,an,empty,list,param,attributes,attributes,to,associate,with,the,web,socket,session,i,e,via,link,web,socket,session,get,attributes,currently,always,an,empty,map,return,the,established,web,socket,session,wrapped,in,a,listenable,future;protected,abstract,listenable,future,web,socket,session,do,handshake,internal,web,socket,handler,web,socket,handler,http,headers,headers,uri,uri,list,string,sub,protocols,list,web,socket,extension,extensions,map,string,object,attributes
AbstractWebSocketClient -> protected abstract ListenableFuture<WebSocketSession> doHandshakeInternal(WebSocketHandler webSocketHandler, 			HttpHeaders headers, URI uri, List<String> subProtocols, List<WebSocketExtension> extensions, 			Map<String, Object> attributes)_;1474905889;Perform the actual handshake to establish a connection to the server._@param webSocketHandler the client-side handler for WebSocket messages_@param headers HTTP headers to use for the handshake, with unwanted (forbidden)_headers filtered out, never {@code null}_@param uri the target URI for the handshake, never {@code null}_@param subProtocols requested sub-protocols, or an empty list_@param extensions requested WebSocket extensions, or an empty list_@param attributes attributes to associate with the WebSocketSession, i.e. via_{@link WebSocketSession#getAttributes()}_ currently always an empty map._@return the established WebSocket session wrapped in a ListenableFuture.;protected abstract ListenableFuture<WebSocketSession> doHandshakeInternal(WebSocketHandler webSocketHandler,_			HttpHeaders headers, URI uri, List<String> subProtocols, List<WebSocketExtension> extensions,_			Map<String, Object> attributes)_;perform,the,actual,handshake,to,establish,a,connection,to,the,server,param,web,socket,handler,the,client,side,handler,for,web,socket,messages,param,headers,http,headers,to,use,for,the,handshake,with,unwanted,forbidden,headers,filtered,out,never,code,null,param,uri,the,target,uri,for,the,handshake,never,code,null,param,sub,protocols,requested,sub,protocols,or,an,empty,list,param,extensions,requested,web,socket,extensions,or,an,empty,list,param,attributes,attributes,to,associate,with,the,web,socket,session,i,e,via,link,web,socket,session,get,attributes,currently,always,an,empty,map,return,the,established,web,socket,session,wrapped,in,a,listenable,future;protected,abstract,listenable,future,web,socket,session,do,handshake,internal,web,socket,handler,web,socket,handler,http,headers,headers,uri,uri,list,string,sub,protocols,list,web,socket,extension,extensions,map,string,object,attributes
AbstractWebSocketClient -> protected abstract ListenableFuture<WebSocketSession> doHandshakeInternal(WebSocketHandler webSocketHandler, 			HttpHeaders headers, URI uri, List<String> subProtocols, List<WebSocketExtension> extensions, 			Map<String, Object> attributes)_;1496259743;Perform the actual handshake to establish a connection to the server._@param webSocketHandler the client-side handler for WebSocket messages_@param headers HTTP headers to use for the handshake, with unwanted (forbidden)_headers filtered out, never {@code null}_@param uri the target URI for the handshake, never {@code null}_@param subProtocols requested sub-protocols, or an empty list_@param extensions requested WebSocket extensions, or an empty list_@param attributes attributes to associate with the WebSocketSession, i.e. via_{@link WebSocketSession#getAttributes()}_ currently always an empty map._@return the established WebSocket session wrapped in a ListenableFuture.;protected abstract ListenableFuture<WebSocketSession> doHandshakeInternal(WebSocketHandler webSocketHandler,_			HttpHeaders headers, URI uri, List<String> subProtocols, List<WebSocketExtension> extensions,_			Map<String, Object> attributes)_;perform,the,actual,handshake,to,establish,a,connection,to,the,server,param,web,socket,handler,the,client,side,handler,for,web,socket,messages,param,headers,http,headers,to,use,for,the,handshake,with,unwanted,forbidden,headers,filtered,out,never,code,null,param,uri,the,target,uri,for,the,handshake,never,code,null,param,sub,protocols,requested,sub,protocols,or,an,empty,list,param,extensions,requested,web,socket,extensions,or,an,empty,list,param,attributes,attributes,to,associate,with,the,web,socket,session,i,e,via,link,web,socket,session,get,attributes,currently,always,an,empty,map,return,the,established,web,socket,session,wrapped,in,a,listenable,future;protected,abstract,listenable,future,web,socket,session,do,handshake,internal,web,socket,handler,web,socket,handler,http,headers,headers,uri,uri,list,string,sub,protocols,list,web,socket,extension,extensions,map,string,object,attributes
AbstractWebSocketClient -> protected abstract ListenableFuture<WebSocketSession> doHandshakeInternal(WebSocketHandler webSocketHandler, 			HttpHeaders headers, URI uri, List<String> subProtocols, List<WebSocketExtension> extensions, 			Map<String, Object> attributes)_;1496837955;Perform the actual handshake to establish a connection to the server._@param webSocketHandler the client-side handler for WebSocket messages_@param headers HTTP headers to use for the handshake, with unwanted (forbidden)_headers filtered out (never {@code null})_@param uri the target URI for the handshake (never {@code null})_@param subProtocols requested sub-protocols, or an empty list_@param extensions requested WebSocket extensions, or an empty list_@param attributes attributes to associate with the WebSocketSession, i.e. via_{@link WebSocketSession#getAttributes()}_ currently always an empty map._@return the established WebSocket session wrapped in a ListenableFuture.;protected abstract ListenableFuture<WebSocketSession> doHandshakeInternal(WebSocketHandler webSocketHandler,_			HttpHeaders headers, URI uri, List<String> subProtocols, List<WebSocketExtension> extensions,_			Map<String, Object> attributes)_;perform,the,actual,handshake,to,establish,a,connection,to,the,server,param,web,socket,handler,the,client,side,handler,for,web,socket,messages,param,headers,http,headers,to,use,for,the,handshake,with,unwanted,forbidden,headers,filtered,out,never,code,null,param,uri,the,target,uri,for,the,handshake,never,code,null,param,sub,protocols,requested,sub,protocols,or,an,empty,list,param,extensions,requested,web,socket,extensions,or,an,empty,list,param,attributes,attributes,to,associate,with,the,web,socket,session,i,e,via,link,web,socket,session,get,attributes,currently,always,an,empty,map,return,the,established,web,socket,session,wrapped,in,a,listenable,future;protected,abstract,listenable,future,web,socket,session,do,handshake,internal,web,socket,handler,web,socket,handler,http,headers,headers,uri,uri,list,string,sub,protocols,list,web,socket,extension,extensions,map,string,object,attributes
AbstractWebSocketClient -> protected abstract ListenableFuture<WebSocketSession> doHandshakeInternal(WebSocketHandler webSocketHandler, 			HttpHeaders headers, URI uri, List<String> subProtocols, List<WebSocketExtension> extensions, 			Map<String, Object> attributes)_;1522192143;Perform the actual handshake to establish a connection to the server._@param webSocketHandler the client-side handler for WebSocket messages_@param headers HTTP headers to use for the handshake, with unwanted (forbidden)_headers filtered out (never {@code null})_@param uri the target URI for the handshake (never {@code null})_@param subProtocols requested sub-protocols, or an empty list_@param extensions requested WebSocket extensions, or an empty list_@param attributes attributes to associate with the WebSocketSession, i.e. via_{@link WebSocketSession#getAttributes()}_ currently always an empty map._@return the established WebSocket session wrapped in a ListenableFuture.;protected abstract ListenableFuture<WebSocketSession> doHandshakeInternal(WebSocketHandler webSocketHandler,_			HttpHeaders headers, URI uri, List<String> subProtocols, List<WebSocketExtension> extensions,_			Map<String, Object> attributes)_;perform,the,actual,handshake,to,establish,a,connection,to,the,server,param,web,socket,handler,the,client,side,handler,for,web,socket,messages,param,headers,http,headers,to,use,for,the,handshake,with,unwanted,forbidden,headers,filtered,out,never,code,null,param,uri,the,target,uri,for,the,handshake,never,code,null,param,sub,protocols,requested,sub,protocols,or,an,empty,list,param,extensions,requested,web,socket,extensions,or,an,empty,list,param,attributes,attributes,to,associate,with,the,web,socket,session,i,e,via,link,web,socket,session,get,attributes,currently,always,an,empty,map,return,the,established,web,socket,session,wrapped,in,a,listenable,future;protected,abstract,listenable,future,web,socket,session,do,handshake,internal,web,socket,handler,web,socket,handler,http,headers,headers,uri,uri,list,string,sub,protocols,list,web,socket,extension,extensions,map,string,object,attributes
AbstractWebSocketClient -> protected abstract ListenableFuture<WebSocketSession> doHandshakeInternal(WebSocketHandler webSocketHandler, 			HttpHeaders headers, URI uri, List<String> subProtocols, List<WebSocketExtension> extensions, 			Map<String, Object> attributes)_;1530174524;Perform the actual handshake to establish a connection to the server._@param webSocketHandler the client-side handler for WebSocket messages_@param headers the HTTP headers to use for the handshake, with unwanted (forbidden)_headers filtered out (never {@code null})_@param uri the target URI for the handshake (never {@code null})_@param subProtocols requested sub-protocols, or an empty list_@param extensions requested WebSocket extensions, or an empty list_@param attributes attributes to associate with the WebSocketSession, i.e. via_{@link WebSocketSession#getAttributes()}_ currently always an empty map._@return the established WebSocket session wrapped in a ListenableFuture.;protected abstract ListenableFuture<WebSocketSession> doHandshakeInternal(WebSocketHandler webSocketHandler,_			HttpHeaders headers, URI uri, List<String> subProtocols, List<WebSocketExtension> extensions,_			Map<String, Object> attributes)_;perform,the,actual,handshake,to,establish,a,connection,to,the,server,param,web,socket,handler,the,client,side,handler,for,web,socket,messages,param,headers,the,http,headers,to,use,for,the,handshake,with,unwanted,forbidden,headers,filtered,out,never,code,null,param,uri,the,target,uri,for,the,handshake,never,code,null,param,sub,protocols,requested,sub,protocols,or,an,empty,list,param,extensions,requested,web,socket,extensions,or,an,empty,list,param,attributes,attributes,to,associate,with,the,web,socket,session,i,e,via,link,web,socket,session,get,attributes,currently,always,an,empty,map,return,the,established,web,socket,session,wrapped,in,a,listenable,future;protected,abstract,listenable,future,web,socket,session,do,handshake,internal,web,socket,handler,web,socket,handler,http,headers,headers,uri,uri,list,string,sub,protocols,list,web,socket,extension,extensions,map,string,object,attributes
AbstractWebSocketClient -> protected abstract WebSocketSession doHandshakeInternal(WebSocketHandler webSocketHandler, 			HttpHeaders headers, URI uri, List<String> subProtocols) throws WebSocketConnectFailureException_;1375909663;@param webSocketHandler the client-side handler for WebSocket messages_@param headers HTTP headers to use for the handshake, with unwanted (forbidden)_headers filtered out, never {@code null}_@param uri the target URI for the handshake, never {@code null}_@param subProtocols requested sub-protocols, or an empty list_@return the established WebSocket session_@throws WebSocketConnectFailureException;protected abstract WebSocketSession doHandshakeInternal(WebSocketHandler webSocketHandler,_			HttpHeaders headers, URI uri, List<String> subProtocols) throws WebSocketConnectFailureException_;param,web,socket,handler,the,client,side,handler,for,web,socket,messages,param,headers,http,headers,to,use,for,the,handshake,with,unwanted,forbidden,headers,filtered,out,never,code,null,param,uri,the,target,uri,for,the,handshake,never,code,null,param,sub,protocols,requested,sub,protocols,or,an,empty,list,return,the,established,web,socket,session,throws,web,socket,connect,failure,exception;protected,abstract,web,socket,session,do,handshake,internal,web,socket,handler,web,socket,handler,http,headers,headers,uri,uri,list,string,sub,protocols,throws,web,socket,connect,failure,exception
AbstractWebSocketClient -> protected abstract WebSocketSession doHandshakeInternal(WebSocketHandler webSocketHandler, 			HttpHeaders headers, URI uri, List<String> subProtocols) throws WebSocketConnectFailureException_;1376429280;@param webSocketHandler the client-side handler for WebSocket messages_@param headers HTTP headers to use for the handshake, with unwanted (forbidden)_headers filtered out, never {@code null}_@param uri the target URI for the handshake, never {@code null}_@param subProtocols requested sub-protocols, or an empty list_@return the established WebSocket session_@throws WebSocketConnectFailureException;protected abstract WebSocketSession doHandshakeInternal(WebSocketHandler webSocketHandler,_			HttpHeaders headers, URI uri, List<String> subProtocols) throws WebSocketConnectFailureException_;param,web,socket,handler,the,client,side,handler,for,web,socket,messages,param,headers,http,headers,to,use,for,the,handshake,with,unwanted,forbidden,headers,filtered,out,never,code,null,param,uri,the,target,uri,for,the,handshake,never,code,null,param,sub,protocols,requested,sub,protocols,or,an,empty,list,return,the,established,web,socket,session,throws,web,socket,connect,failure,exception;protected,abstract,web,socket,session,do,handshake,internal,web,socket,handler,web,socket,handler,http,headers,headers,uri,uri,list,string,sub,protocols,throws,web,socket,connect,failure,exception
