commented;modifiers;parameterAmount;loc;comment;code
false;public;2;20;;@Override @Nullable public Message<byte[]> handleClientMessageProcessingError(@Nullable Message<byte[]> clientMessage, Throwable ex) {     StompHeaderAccessor accessor = StompHeaderAccessor.create(StompCommand.ERROR).     accessor.setMessage(ex.getMessage()).     accessor.setLeaveMutable(true).     StompHeaderAccessor clientHeaderAccessor = null.     if (clientMessage != null) {         clientHeaderAccessor = MessageHeaderAccessor.getAccessor(clientMessage, StompHeaderAccessor.class).         if (clientHeaderAccessor != null) {             String receiptId = clientHeaderAccessor.getReceipt().             if (receiptId != null) {                 accessor.setReceiptId(receiptId).             }         }     }     return handleInternal(accessor, EMPTY_PAYLOAD, ex, clientHeaderAccessor). }
false;public;1;10;;@Override @Nullable public Message<byte[]> handleErrorMessageToClient(Message<byte[]> errorMessage) {     StompHeaderAccessor accessor = MessageHeaderAccessor.getAccessor(errorMessage, StompHeaderAccessor.class).     Assert.notNull(accessor, "No StompHeaderAccessor").     if (!accessor.isMutable()) {         accessor = StompHeaderAccessor.wrap(errorMessage).     }     return handleInternal(accessor, errorMessage.getPayload(), null, null). }
false;protected;4;5;;protected Message<byte[]> handleInternal(StompHeaderAccessor errorHeaderAccessor, byte[] errorPayload, @Nullable Throwable cause, @Nullable StompHeaderAccessor clientHeaderAccessor) {     return MessageBuilder.createMessage(errorPayload, errorHeaderAccessor.getMessageHeaders()). }
