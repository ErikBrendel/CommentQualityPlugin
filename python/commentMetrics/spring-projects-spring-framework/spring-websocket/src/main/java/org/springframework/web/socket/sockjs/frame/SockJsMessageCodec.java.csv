commented;modifiers;parameterAmount;loc;comment;code
true;;1;1;/**  * Encode the given messages as a SockJS message frame. Aside from applying standard  * JSON quoting to each message, there are some additional JSON Unicode escaping  * rules. See the "JSON Unicode Encoding" section of SockJS protocol (i.e. the  * protocol test suite).  * @param messages the messages to encode  * @return the content for a SockJS message frame (never {@code null})  */ ;/**  * Encode the given messages as a SockJS message frame. Aside from applying standard  * JSON quoting to each message, there are some additional JSON Unicode escaping  * rules. See the "JSON Unicode Encoding" section of SockJS protocol (i.e. the  * protocol test suite).  * @param messages the messages to encode  * @return the content for a SockJS message frame (never {@code null})  */ String encode(String... messages).
true;;1;2;/**  * Decode the given SockJS message frame.  * @param content the SockJS message frame  * @return an array of messages, or {@code null} if none  * @throws IOException if the content could not be parsed  */ ;/**  * Decode the given SockJS message frame.  * @param content the SockJS message frame  * @return an array of messages, or {@code null} if none  * @throws IOException if the content could not be parsed  */ @Nullable String[] decode(String content) throws IOException.
true;;1;2;/**  * Decode the given SockJS message frame.  * @param content the SockJS message frame  * @return an array of messages, or {@code null} if none  * @throws IOException if the content could not be parsed  */ ;/**  * Decode the given SockJS message frame.  * @param content the SockJS message frame  * @return an array of messages, or {@code null} if none  * @throws IOException if the content could not be parsed  */ @Nullable String[] decodeInputStream(InputStream content) throws IOException.
