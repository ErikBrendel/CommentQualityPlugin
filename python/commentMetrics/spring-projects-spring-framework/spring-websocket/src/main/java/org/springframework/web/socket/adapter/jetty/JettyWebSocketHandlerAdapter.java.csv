commented;modifiers;parameterAmount;loc;comment;code
false;public;1;10;;@OnWebSocketConnect public void onWebSocketConnect(Session session) {     try {         this.wsSession.initializeNativeSession(session).         this.webSocketHandler.afterConnectionEstablished(this.wsSession).     } catch (Throwable ex) {         ExceptionWebSocketHandlerDecorator.tryCloseWithError(this.wsSession, ex, logger).     } }
false;public;1;10;;@OnWebSocketMessage public void onWebSocketText(String payload) {     TextMessage message = new TextMessage(payload).     try {         this.webSocketHandler.handleMessage(this.wsSession, message).     } catch (Throwable ex) {         ExceptionWebSocketHandlerDecorator.tryCloseWithError(this.wsSession, ex, logger).     } }
false;public;3;10;;@OnWebSocketMessage public void onWebSocketBinary(byte[] payload, int offset, int length) {     BinaryMessage message = new BinaryMessage(payload, offset, length, true).     try {         this.webSocketHandler.handleMessage(this.wsSession, message).     } catch (Throwable ex) {         ExceptionWebSocketHandlerDecorator.tryCloseWithError(this.wsSession, ex, logger).     } }
false;public;1;13;;@OnWebSocketFrame public void onWebSocketFrame(Frame frame) {     if (OpCode.PONG == frame.getOpCode()) {         ByteBuffer payload = frame.getPayload() != null ? frame.getPayload() : EMPTY_PAYLOAD.         PongMessage message = new PongMessage(payload).         try {             this.webSocketHandler.handleMessage(this.wsSession, message).         } catch (Throwable ex) {             ExceptionWebSocketHandlerDecorator.tryCloseWithError(this.wsSession, ex, logger).         }     } }
false;public;2;12;;@OnWebSocketClose public void onWebSocketClose(int statusCode, String reason) {     CloseStatus closeStatus = new CloseStatus(statusCode, reason).     try {         this.webSocketHandler.afterConnectionClosed(this.wsSession, closeStatus).     } catch (Throwable ex) {         if (logger.isWarnEnabled()) {             logger.warn("Unhandled exception after connection closed for " + this, ex).         }     } }
false;public;1;9;;@OnWebSocketError public void onWebSocketError(Throwable cause) {     try {         this.webSocketHandler.handleTransportError(this.wsSession, cause).     } catch (Throwable ex) {         ExceptionWebSocketHandlerDecorator.tryCloseWithError(this.wsSession, ex, logger).     } }
