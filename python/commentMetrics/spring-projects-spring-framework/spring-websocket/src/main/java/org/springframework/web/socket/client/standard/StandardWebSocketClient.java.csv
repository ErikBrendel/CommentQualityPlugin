# id;timestamp;commentText;codeText;commentWords;codeWords
StandardWebSocketClient -> public AsyncListenableTaskExecutor getTaskExecutor();1386087504;Return the configured {@link TaskExecutor}.;public AsyncListenableTaskExecutor getTaskExecutor() {_		return this.taskExecutor__	};return,the,configured,link,task,executor;public,async,listenable,task,executor,get,task,executor,return,this,task,executor
StandardWebSocketClient -> public AsyncListenableTaskExecutor getTaskExecutor();1389887689;Return the configured {@link TaskExecutor}.;public AsyncListenableTaskExecutor getTaskExecutor() {_		return this.taskExecutor__	};return,the,configured,link,task,executor;public,async,listenable,task,executor,get,task,executor,return,this,task,executor
StandardWebSocketClient -> public AsyncListenableTaskExecutor getTaskExecutor();1395239088;Return the configured {@link TaskExecutor}.;public AsyncListenableTaskExecutor getTaskExecutor() {_		return this.taskExecutor__	};return,the,configured,link,task,executor;public,async,listenable,task,executor,get,task,executor,return,this,task,executor
StandardWebSocketClient -> public AsyncListenableTaskExecutor getTaskExecutor();1395246308;Return the configured {@link TaskExecutor}.;public AsyncListenableTaskExecutor getTaskExecutor() {_		return this.taskExecutor__	};return,the,configured,link,task,executor;public,async,listenable,task,executor,get,task,executor,return,this,task,executor
StandardWebSocketClient -> public AsyncListenableTaskExecutor getTaskExecutor();1398858661;Return the configured {@link TaskExecutor}.;public AsyncListenableTaskExecutor getTaskExecutor() {_		return this.taskExecutor__	};return,the,configured,link,task,executor;public,async,listenable,task,executor,get,task,executor,return,this,task,executor
StandardWebSocketClient -> public AsyncListenableTaskExecutor getTaskExecutor();1401910463;Return the configured {@link TaskExecutor}.;public AsyncListenableTaskExecutor getTaskExecutor() {_		return this.taskExecutor__	};return,the,configured,link,task,executor;public,async,listenable,task,executor,get,task,executor,return,this,task,executor
StandardWebSocketClient -> public AsyncListenableTaskExecutor getTaskExecutor();1403719829;Return the configured {@link TaskExecutor}.;public AsyncListenableTaskExecutor getTaskExecutor() {_		return this.taskExecutor__	};return,the,configured,link,task,executor;public,async,listenable,task,executor,get,task,executor,return,this,task,executor
StandardWebSocketClient -> public AsyncListenableTaskExecutor getTaskExecutor();1403791284;Return the configured {@link TaskExecutor}.;public AsyncListenableTaskExecutor getTaskExecutor() {_		return this.taskExecutor__	};return,the,configured,link,task,executor;public,async,listenable,task,executor,get,task,executor,return,this,task,executor
StandardWebSocketClient -> public AsyncListenableTaskExecutor getTaskExecutor();1404211929;Return the configured {@link TaskExecutor}.;public AsyncListenableTaskExecutor getTaskExecutor() {_		return this.taskExecutor__	};return,the,configured,link,task,executor;public,async,listenable,task,executor,get,task,executor,return,this,task,executor
StandardWebSocketClient -> public AsyncListenableTaskExecutor getTaskExecutor();1404880799;Return the configured {@link TaskExecutor}.;public AsyncListenableTaskExecutor getTaskExecutor() {_		return this.taskExecutor__	};return,the,configured,link,task,executor;public,async,listenable,task,executor,get,task,executor,return,this,task,executor
StandardWebSocketClient -> public AsyncListenableTaskExecutor getTaskExecutor();1430734105;Return the configured {@link TaskExecutor}.;public AsyncListenableTaskExecutor getTaskExecutor() {_		return this.taskExecutor__	};return,the,configured,link,task,executor;public,async,listenable,task,executor,get,task,executor,return,this,task,executor
StandardWebSocketClient -> public AsyncListenableTaskExecutor getTaskExecutor();1467677340;Return the configured {@link TaskExecutor}.;public AsyncListenableTaskExecutor getTaskExecutor() {_		return this.taskExecutor__	};return,the,configured,link,task,executor;public,async,listenable,task,executor,get,task,executor,return,this,task,executor
StandardWebSocketClient -> public AsyncListenableTaskExecutor getTaskExecutor();1467730834;Return the configured {@link TaskExecutor}.;public AsyncListenableTaskExecutor getTaskExecutor() {_		return this.taskExecutor__	};return,the,configured,link,task,executor;public,async,listenable,task,executor,get,task,executor,return,this,task,executor
StandardWebSocketClient -> public AsyncListenableTaskExecutor getTaskExecutor();1495868221;Return the configured {@link TaskExecutor}.;public AsyncListenableTaskExecutor getTaskExecutor() {_		return this.taskExecutor__	};return,the,configured,link,task,executor;public,async,listenable,task,executor,get,task,executor,return,this,task,executor
StandardWebSocketClient -> public AsyncListenableTaskExecutor getTaskExecutor();1496837955;Return the configured {@link TaskExecutor}.;public AsyncListenableTaskExecutor getTaskExecutor() {_		return this.taskExecutor__	};return,the,configured,link,task,executor;public,async,listenable,task,executor,get,task,executor,return,this,task,executor
StandardWebSocketClient -> public AsyncListenableTaskExecutor getTaskExecutor();1497341397;Return the configured {@link TaskExecutor}.;public AsyncListenableTaskExecutor getTaskExecutor() {_		return this.taskExecutor__	};return,the,configured,link,task,executor;public,async,listenable,task,executor,get,task,executor,return,this,task,executor
StandardWebSocketClient -> public void setUserProperties(@Nullable Map<String, Object> userProperties);1496837955;The standard Java WebSocket API allows passing "user properties" to the_server via {@link ClientEndpointConfig#getUserProperties() userProperties}._Use this property to configure one or more properties to be passed on_every handshake.;public void setUserProperties(@Nullable Map<String, Object> userProperties) {_		if (userProperties != null) {_			this.userProperties.putAll(userProperties)__		}_	};the,standard,java,web,socket,api,allows,passing,user,properties,to,the,server,via,link,client,endpoint,config,get,user,properties,user,properties,use,this,property,to,configure,one,or,more,properties,to,be,passed,on,every,handshake;public,void,set,user,properties,nullable,map,string,object,user,properties,if,user,properties,null,this,user,properties,put,all,user,properties
StandardWebSocketClient -> public void setUserProperties(@Nullable Map<String, Object> userProperties);1497341397;The standard Java WebSocket API allows passing "user properties" to the_server via {@link ClientEndpointConfig#getUserProperties() userProperties}._Use this property to configure one or more properties to be passed on_every handshake.;public void setUserProperties(@Nullable Map<String, Object> userProperties) {_		if (userProperties != null) {_			this.userProperties.putAll(userProperties)__		}_	};the,standard,java,web,socket,api,allows,passing,user,properties,to,the,server,via,link,client,endpoint,config,get,user,properties,user,properties,use,this,property,to,configure,one,or,more,properties,to,be,passed,on,every,handshake;public,void,set,user,properties,nullable,map,string,object,user,properties,if,user,properties,null,this,user,properties,put,all,user,properties
StandardWebSocketClient -> public void setUserProperties(@Nullable Map<String, Object> userProperties);1498780456;The standard Java WebSocket API allows passing "user properties" to the_server via {@link ClientEndpointConfig#getUserProperties() userProperties}._Use this property to configure one or more properties to be passed on_every handshake.;public void setUserProperties(@Nullable Map<String, Object> userProperties) {_		if (userProperties != null) {_			this.userProperties.putAll(userProperties)__		}_	};the,standard,java,web,socket,api,allows,passing,user,properties,to,the,server,via,link,client,endpoint,config,get,user,properties,user,properties,use,this,property,to,configure,one,or,more,properties,to,be,passed,on,every,handshake;public,void,set,user,properties,nullable,map,string,object,user,properties,if,user,properties,null,this,user,properties,put,all,user,properties
StandardWebSocketClient -> public void setUserProperties(@Nullable Map<String, Object> userProperties);1530174524;The standard Java WebSocket API allows passing "user properties" to the_server via {@link ClientEndpointConfig#getUserProperties() userProperties}._Use this property to configure one or more properties to be passed on_every handshake.;public void setUserProperties(@Nullable Map<String, Object> userProperties) {_		if (userProperties != null) {_			this.userProperties.putAll(userProperties)__		}_	};the,standard,java,web,socket,api,allows,passing,user,properties,to,the,server,via,link,client,endpoint,config,get,user,properties,user,properties,use,this,property,to,configure,one,or,more,properties,to,be,passed,on,every,handshake;public,void,set,user,properties,nullable,map,string,object,user,properties,if,user,properties,null,this,user,properties,put,all,user,properties
StandardWebSocketClient -> public void setUserProperties(@Nullable Map<String, Object> userProperties);1530174524;The standard Java WebSocket API allows passing "user properties" to the_server via {@link ClientEndpointConfig#getUserProperties() userProperties}._Use this property to configure one or more properties to be passed on_every handshake.;public void setUserProperties(@Nullable Map<String, Object> userProperties) {_		if (userProperties != null) {_			this.userProperties.putAll(userProperties)__		}_	};the,standard,java,web,socket,api,allows,passing,user,properties,to,the,server,via,link,client,endpoint,config,get,user,properties,user,properties,use,this,property,to,configure,one,or,more,properties,to,be,passed,on,every,handshake;public,void,set,user,properties,nullable,map,string,object,user,properties,if,user,properties,null,this,user,properties,put,all,user,properties
StandardWebSocketClient -> public StandardWebSocketClient(WebSocketContainer webSocketContainer);1386087504;Constructor that accepts a pre-configured {@link WebSocketContainer} instance. If_using XML configuration see {@link WebSocketContainerFactoryBean}. In Java_configuration use {@code ContainerProvider.getWebSocketContainer()} to obtain_a container instance.;public StandardWebSocketClient(WebSocketContainer webSocketContainer) {_		Assert.notNull(webSocketContainer, "webSocketContainer must not be null")__		this.webSocketContainer = webSocketContainer__	};constructor,that,accepts,a,pre,configured,link,web,socket,container,instance,if,using,xml,configuration,see,link,web,socket,container,factory,bean,in,java,configuration,use,code,container,provider,get,web,socket,container,to,obtain,a,container,instance;public,standard,web,socket,client,web,socket,container,web,socket,container,assert,not,null,web,socket,container,web,socket,container,must,not,be,null,this,web,socket,container,web,socket,container
StandardWebSocketClient -> public StandardWebSocketClient(WebSocketContainer webSocketContainer);1389887689;Constructor that accepts a pre-configured {@link WebSocketContainer} instance._If using XML configuration see {@link WebSocketContainerFactoryBean}. In Java_configuration use {@code ContainerProvider.getWebSocketContainer()} to obtain_a container instance.;public StandardWebSocketClient(WebSocketContainer webSocketContainer) {_		Assert.notNull(webSocketContainer, "WebSocketContainer must not be null")__		this.webSocketContainer = webSocketContainer__	};constructor,that,accepts,a,pre,configured,link,web,socket,container,instance,if,using,xml,configuration,see,link,web,socket,container,factory,bean,in,java,configuration,use,code,container,provider,get,web,socket,container,to,obtain,a,container,instance;public,standard,web,socket,client,web,socket,container,web,socket,container,assert,not,null,web,socket,container,web,socket,container,must,not,be,null,this,web,socket,container,web,socket,container
StandardWebSocketClient -> public StandardWebSocketClient(WebSocketContainer webSocketContainer);1395239088;Constructor accepting an existing {@link WebSocketContainer} instance.__<p>For XML configuration see {@link WebSocketContainerFactoryBean}. For Java_configuration use {@code ContainerProvider.getWebSocketContainer()} to obtain_the {@code WebSocketContainer} instance.;public StandardWebSocketClient(WebSocketContainer webSocketContainer) {_		Assert.notNull(webSocketContainer, "WebSocketContainer must not be null")__		this.webSocketContainer = webSocketContainer__	};constructor,accepting,an,existing,link,web,socket,container,instance,p,for,xml,configuration,see,link,web,socket,container,factory,bean,for,java,configuration,use,code,container,provider,get,web,socket,container,to,obtain,the,code,web,socket,container,instance;public,standard,web,socket,client,web,socket,container,web,socket,container,assert,not,null,web,socket,container,web,socket,container,must,not,be,null,this,web,socket,container,web,socket,container
StandardWebSocketClient -> public StandardWebSocketClient(WebSocketContainer webSocketContainer);1395246308;Constructor accepting an existing {@link WebSocketContainer} instance.__<p>For XML configuration see {@link WebSocketContainerFactoryBean}. For Java_configuration use {@code ContainerProvider.getWebSocketContainer()} to obtain_the {@code WebSocketContainer} instance.;public StandardWebSocketClient(WebSocketContainer webSocketContainer) {_		Assert.notNull(webSocketContainer, "WebSocketContainer must not be null")__		this.webSocketContainer = webSocketContainer__	};constructor,accepting,an,existing,link,web,socket,container,instance,p,for,xml,configuration,see,link,web,socket,container,factory,bean,for,java,configuration,use,code,container,provider,get,web,socket,container,to,obtain,the,code,web,socket,container,instance;public,standard,web,socket,client,web,socket,container,web,socket,container,assert,not,null,web,socket,container,web,socket,container,must,not,be,null,this,web,socket,container,web,socket,container
StandardWebSocketClient -> public StandardWebSocketClient(WebSocketContainer webSocketContainer);1398858661;Constructor accepting an existing {@link WebSocketContainer} instance.__<p>For XML configuration see {@link WebSocketContainerFactoryBean}. For Java_configuration use {@code ContainerProvider.getWebSocketContainer()} to obtain_the {@code WebSocketContainer} instance.;public StandardWebSocketClient(WebSocketContainer webSocketContainer) {_		Assert.notNull(webSocketContainer, "WebSocketContainer must not be null")__		this.webSocketContainer = webSocketContainer__	};constructor,accepting,an,existing,link,web,socket,container,instance,p,for,xml,configuration,see,link,web,socket,container,factory,bean,for,java,configuration,use,code,container,provider,get,web,socket,container,to,obtain,the,code,web,socket,container,instance;public,standard,web,socket,client,web,socket,container,web,socket,container,assert,not,null,web,socket,container,web,socket,container,must,not,be,null,this,web,socket,container,web,socket,container
StandardWebSocketClient -> public StandardWebSocketClient(WebSocketContainer webSocketContainer);1401910463;Constructor accepting an existing {@link WebSocketContainer} instance.__<p>For XML configuration see {@link WebSocketContainerFactoryBean}. For Java_configuration use {@code ContainerProvider.getWebSocketContainer()} to obtain_the {@code WebSocketContainer} instance.;public StandardWebSocketClient(WebSocketContainer webSocketContainer) {_		Assert.notNull(webSocketContainer, "WebSocketContainer must not be null")__		this.webSocketContainer = webSocketContainer__	};constructor,accepting,an,existing,link,web,socket,container,instance,p,for,xml,configuration,see,link,web,socket,container,factory,bean,for,java,configuration,use,code,container,provider,get,web,socket,container,to,obtain,the,code,web,socket,container,instance;public,standard,web,socket,client,web,socket,container,web,socket,container,assert,not,null,web,socket,container,web,socket,container,must,not,be,null,this,web,socket,container,web,socket,container
StandardWebSocketClient -> public StandardWebSocketClient(WebSocketContainer webSocketContainer);1403719829;Constructor accepting an existing {@link WebSocketContainer} instance.__<p>For XML configuration see {@link WebSocketContainerFactoryBean}. For Java_configuration use {@code ContainerProvider.getWebSocketContainer()} to obtain_the {@code WebSocketContainer} instance.;public StandardWebSocketClient(WebSocketContainer webSocketContainer) {_		Assert.notNull(webSocketContainer, "WebSocketContainer must not be null")__		this.webSocketContainer = webSocketContainer__	};constructor,accepting,an,existing,link,web,socket,container,instance,p,for,xml,configuration,see,link,web,socket,container,factory,bean,for,java,configuration,use,code,container,provider,get,web,socket,container,to,obtain,the,code,web,socket,container,instance;public,standard,web,socket,client,web,socket,container,web,socket,container,assert,not,null,web,socket,container,web,socket,container,must,not,be,null,this,web,socket,container,web,socket,container
StandardWebSocketClient -> public StandardWebSocketClient(WebSocketContainer webSocketContainer);1403791284;Constructor accepting an existing {@link WebSocketContainer} instance.__<p>For XML configuration see {@link WebSocketContainerFactoryBean}. For Java_configuration use {@code ContainerProvider.getWebSocketContainer()} to obtain_the {@code WebSocketContainer} instance.;public StandardWebSocketClient(WebSocketContainer webSocketContainer) {_		Assert.notNull(webSocketContainer, "WebSocketContainer must not be null")__		this.webSocketContainer = webSocketContainer__	};constructor,accepting,an,existing,link,web,socket,container,instance,p,for,xml,configuration,see,link,web,socket,container,factory,bean,for,java,configuration,use,code,container,provider,get,web,socket,container,to,obtain,the,code,web,socket,container,instance;public,standard,web,socket,client,web,socket,container,web,socket,container,assert,not,null,web,socket,container,web,socket,container,must,not,be,null,this,web,socket,container,web,socket,container
StandardWebSocketClient -> public StandardWebSocketClient(WebSocketContainer webSocketContainer);1404211929;Constructor accepting an existing {@link WebSocketContainer} instance._<p>For XML configuration, see {@link WebSocketContainerFactoryBean}. For Java_configuration, use {@code ContainerProvider.getWebSocketContainer()} to obtain_the {@code WebSocketContainer} instance.;public StandardWebSocketClient(WebSocketContainer webSocketContainer) {_		Assert.notNull(webSocketContainer, "WebSocketContainer must not be null")__		this.webSocketContainer = webSocketContainer__	};constructor,accepting,an,existing,link,web,socket,container,instance,p,for,xml,configuration,see,link,web,socket,container,factory,bean,for,java,configuration,use,code,container,provider,get,web,socket,container,to,obtain,the,code,web,socket,container,instance;public,standard,web,socket,client,web,socket,container,web,socket,container,assert,not,null,web,socket,container,web,socket,container,must,not,be,null,this,web,socket,container,web,socket,container
StandardWebSocketClient -> public StandardWebSocketClient(WebSocketContainer webSocketContainer);1404880799;Constructor accepting an existing {@link WebSocketContainer} instance._<p>For XML configuration, see {@link WebSocketContainerFactoryBean}. For Java_configuration, use {@code ContainerProvider.getWebSocketContainer()} to obtain_the {@code WebSocketContainer} instance.;public StandardWebSocketClient(WebSocketContainer webSocketContainer) {_		Assert.notNull(webSocketContainer, "WebSocketContainer must not be null")__		this.webSocketContainer = webSocketContainer__	};constructor,accepting,an,existing,link,web,socket,container,instance,p,for,xml,configuration,see,link,web,socket,container,factory,bean,for,java,configuration,use,code,container,provider,get,web,socket,container,to,obtain,the,code,web,socket,container,instance;public,standard,web,socket,client,web,socket,container,web,socket,container,assert,not,null,web,socket,container,web,socket,container,must,not,be,null,this,web,socket,container,web,socket,container
StandardWebSocketClient -> public StandardWebSocketClient(WebSocketContainer webSocketContainer);1430734105;Constructor accepting an existing {@link WebSocketContainer} instance._<p>For XML configuration, see {@link WebSocketContainerFactoryBean}. For Java_configuration, use {@code ContainerProvider.getWebSocketContainer()} to obtain_the {@code WebSocketContainer} instance.;public StandardWebSocketClient(WebSocketContainer webSocketContainer) {_		Assert.notNull(webSocketContainer, "WebSocketContainer must not be null")__		this.webSocketContainer = webSocketContainer__	};constructor,accepting,an,existing,link,web,socket,container,instance,p,for,xml,configuration,see,link,web,socket,container,factory,bean,for,java,configuration,use,code,container,provider,get,web,socket,container,to,obtain,the,code,web,socket,container,instance;public,standard,web,socket,client,web,socket,container,web,socket,container,assert,not,null,web,socket,container,web,socket,container,must,not,be,null,this,web,socket,container,web,socket,container
StandardWebSocketClient -> public StandardWebSocketClient(WebSocketContainer webSocketContainer);1467677340;Constructor accepting an existing {@link WebSocketContainer} instance._<p>For XML configuration, see {@link WebSocketContainerFactoryBean}. For Java_configuration, use {@code ContainerProvider.getWebSocketContainer()} to obtain_the {@code WebSocketContainer} instance.;public StandardWebSocketClient(WebSocketContainer webSocketContainer) {_		Assert.notNull(webSocketContainer, "WebSocketContainer must not be null")__		this.webSocketContainer = webSocketContainer__	};constructor,accepting,an,existing,link,web,socket,container,instance,p,for,xml,configuration,see,link,web,socket,container,factory,bean,for,java,configuration,use,code,container,provider,get,web,socket,container,to,obtain,the,code,web,socket,container,instance;public,standard,web,socket,client,web,socket,container,web,socket,container,assert,not,null,web,socket,container,web,socket,container,must,not,be,null,this,web,socket,container,web,socket,container
StandardWebSocketClient -> public StandardWebSocketClient(WebSocketContainer webSocketContainer);1467730834;Constructor accepting an existing {@link WebSocketContainer} instance._<p>For XML configuration, see {@link WebSocketContainerFactoryBean}. For Java_configuration, use {@code ContainerProvider.getWebSocketContainer()} to obtain_the {@code WebSocketContainer} instance.;public StandardWebSocketClient(WebSocketContainer webSocketContainer) {_		Assert.notNull(webSocketContainer, "WebSocketContainer must not be null")__		this.webSocketContainer = webSocketContainer__	};constructor,accepting,an,existing,link,web,socket,container,instance,p,for,xml,configuration,see,link,web,socket,container,factory,bean,for,java,configuration,use,code,container,provider,get,web,socket,container,to,obtain,the,code,web,socket,container,instance;public,standard,web,socket,client,web,socket,container,web,socket,container,assert,not,null,web,socket,container,web,socket,container,must,not,be,null,this,web,socket,container,web,socket,container
StandardWebSocketClient -> public StandardWebSocketClient(WebSocketContainer webSocketContainer);1495868221;Constructor accepting an existing {@link WebSocketContainer} instance._<p>For XML configuration, see {@link WebSocketContainerFactoryBean}. For Java_configuration, use {@code ContainerProvider.getWebSocketContainer()} to obtain_the {@code WebSocketContainer} instance.;public StandardWebSocketClient(WebSocketContainer webSocketContainer) {_		Assert.notNull(webSocketContainer, "WebSocketContainer must not be null")__		this.webSocketContainer = webSocketContainer__	};constructor,accepting,an,existing,link,web,socket,container,instance,p,for,xml,configuration,see,link,web,socket,container,factory,bean,for,java,configuration,use,code,container,provider,get,web,socket,container,to,obtain,the,code,web,socket,container,instance;public,standard,web,socket,client,web,socket,container,web,socket,container,assert,not,null,web,socket,container,web,socket,container,must,not,be,null,this,web,socket,container,web,socket,container
StandardWebSocketClient -> public StandardWebSocketClient(WebSocketContainer webSocketContainer);1496837955;Constructor accepting an existing {@link WebSocketContainer} instance._<p>For XML configuration, see {@link WebSocketContainerFactoryBean}. For Java_configuration, use {@code ContainerProvider.getWebSocketContainer()} to obtain_the {@code WebSocketContainer} instance.;public StandardWebSocketClient(WebSocketContainer webSocketContainer) {_		Assert.notNull(webSocketContainer, "WebSocketContainer must not be null")__		this.webSocketContainer = webSocketContainer__	};constructor,accepting,an,existing,link,web,socket,container,instance,p,for,xml,configuration,see,link,web,socket,container,factory,bean,for,java,configuration,use,code,container,provider,get,web,socket,container,to,obtain,the,code,web,socket,container,instance;public,standard,web,socket,client,web,socket,container,web,socket,container,assert,not,null,web,socket,container,web,socket,container,must,not,be,null,this,web,socket,container,web,socket,container
StandardWebSocketClient -> public StandardWebSocketClient(WebSocketContainer webSocketContainer);1497341397;Constructor accepting an existing {@link WebSocketContainer} instance._<p>For XML configuration, see {@link WebSocketContainerFactoryBean}. For Java_configuration, use {@code ContainerProvider.getWebSocketContainer()} to obtain_the {@code WebSocketContainer} instance.;public StandardWebSocketClient(WebSocketContainer webSocketContainer) {_		Assert.notNull(webSocketContainer, "WebSocketContainer must not be null")__		this.webSocketContainer = webSocketContainer__	};constructor,accepting,an,existing,link,web,socket,container,instance,p,for,xml,configuration,see,link,web,socket,container,factory,bean,for,java,configuration,use,code,container,provider,get,web,socket,container,to,obtain,the,code,web,socket,container,instance;public,standard,web,socket,client,web,socket,container,web,socket,container,assert,not,null,web,socket,container,web,socket,container,must,not,be,null,this,web,socket,container,web,socket,container
StandardWebSocketClient -> public StandardWebSocketClient(WebSocketContainer webSocketContainer);1498780456;Constructor accepting an existing {@link WebSocketContainer} instance._<p>For XML configuration, see {@link WebSocketContainerFactoryBean}. For Java_configuration, use {@code ContainerProvider.getWebSocketContainer()} to obtain_the {@code WebSocketContainer} instance.;public StandardWebSocketClient(WebSocketContainer webSocketContainer) {_		Assert.notNull(webSocketContainer, "WebSocketContainer must not be null")__		this.webSocketContainer = webSocketContainer__	};constructor,accepting,an,existing,link,web,socket,container,instance,p,for,xml,configuration,see,link,web,socket,container,factory,bean,for,java,configuration,use,code,container,provider,get,web,socket,container,to,obtain,the,code,web,socket,container,instance;public,standard,web,socket,client,web,socket,container,web,socket,container,assert,not,null,web,socket,container,web,socket,container,must,not,be,null,this,web,socket,container,web,socket,container
StandardWebSocketClient -> public StandardWebSocketClient(WebSocketContainer webSocketContainer);1530174524;Constructor accepting an existing {@link WebSocketContainer} instance._<p>For XML configuration, see {@link WebSocketContainerFactoryBean}. For Java_configuration, use {@code ContainerProvider.getWebSocketContainer()} to obtain_the {@code WebSocketContainer} instance.;public StandardWebSocketClient(WebSocketContainer webSocketContainer) {_		Assert.notNull(webSocketContainer, "WebSocketContainer must not be null")__		this.webSocketContainer = webSocketContainer__	};constructor,accepting,an,existing,link,web,socket,container,instance,p,for,xml,configuration,see,link,web,socket,container,factory,bean,for,java,configuration,use,code,container,provider,get,web,socket,container,to,obtain,the,code,web,socket,container,instance;public,standard,web,socket,client,web,socket,container,web,socket,container,assert,not,null,web,socket,container,web,socket,container,must,not,be,null,this,web,socket,container,web,socket,container
StandardWebSocketClient -> public StandardWebSocketClient(WebSocketContainer webSocketContainer);1530174524;Constructor accepting an existing {@link WebSocketContainer} instance._<p>For XML configuration, see {@link WebSocketContainerFactoryBean}. For Java_configuration, use {@code ContainerProvider.getWebSocketContainer()} to obtain_the {@code WebSocketContainer} instance.;public StandardWebSocketClient(WebSocketContainer webSocketContainer) {_		Assert.notNull(webSocketContainer, "WebSocketContainer must not be null")__		this.webSocketContainer = webSocketContainer__	};constructor,accepting,an,existing,link,web,socket,container,instance,p,for,xml,configuration,see,link,web,socket,container,factory,bean,for,java,configuration,use,code,container,provider,get,web,socket,container,to,obtain,the,code,web,socket,container,instance;public,standard,web,socket,client,web,socket,container,web,socket,container,assert,not,null,web,socket,container,web,socket,container,must,not,be,null,this,web,socket,container,web,socket,container
StandardWebSocketClient -> public void setUserProperties(Map<String, Object> userProperties);1430734105;The standard Java WebSocket API allows passing "user properties" to the_server via {@link ClientEndpointConfig#getUserProperties() userProperties}._Use this property to configure one or more properties to be passed on_every handshake.;public void setUserProperties(Map<String, Object> userProperties) {_		if (userProperties != null) {_			this.userProperties.putAll(userProperties)__		}_	};the,standard,java,web,socket,api,allows,passing,user,properties,to,the,server,via,link,client,endpoint,config,get,user,properties,user,properties,use,this,property,to,configure,one,or,more,properties,to,be,passed,on,every,handshake;public,void,set,user,properties,map,string,object,user,properties,if,user,properties,null,this,user,properties,put,all,user,properties
StandardWebSocketClient -> public void setUserProperties(Map<String, Object> userProperties);1467677340;The standard Java WebSocket API allows passing "user properties" to the_server via {@link ClientEndpointConfig#getUserProperties() userProperties}._Use this property to configure one or more properties to be passed on_every handshake.;public void setUserProperties(Map<String, Object> userProperties) {_		if (userProperties != null) {_			this.userProperties.putAll(userProperties)__		}_	};the,standard,java,web,socket,api,allows,passing,user,properties,to,the,server,via,link,client,endpoint,config,get,user,properties,user,properties,use,this,property,to,configure,one,or,more,properties,to,be,passed,on,every,handshake;public,void,set,user,properties,map,string,object,user,properties,if,user,properties,null,this,user,properties,put,all,user,properties
StandardWebSocketClient -> public void setUserProperties(Map<String, Object> userProperties);1467730834;The standard Java WebSocket API allows passing "user properties" to the_server via {@link ClientEndpointConfig#getUserProperties() userProperties}._Use this property to configure one or more properties to be passed on_every handshake.;public void setUserProperties(Map<String, Object> userProperties) {_		if (userProperties != null) {_			this.userProperties.putAll(userProperties)__		}_	};the,standard,java,web,socket,api,allows,passing,user,properties,to,the,server,via,link,client,endpoint,config,get,user,properties,user,properties,use,this,property,to,configure,one,or,more,properties,to,be,passed,on,every,handshake;public,void,set,user,properties,map,string,object,user,properties,if,user,properties,null,this,user,properties,put,all,user,properties
StandardWebSocketClient -> public void setUserProperties(Map<String, Object> userProperties);1495868221;The standard Java WebSocket API allows passing "user properties" to the_server via {@link ClientEndpointConfig#getUserProperties() userProperties}._Use this property to configure one or more properties to be passed on_every handshake.;public void setUserProperties(Map<String, Object> userProperties) {_		if (userProperties != null) {_			this.userProperties.putAll(userProperties)__		}_	};the,standard,java,web,socket,api,allows,passing,user,properties,to,the,server,via,link,client,endpoint,config,get,user,properties,user,properties,use,this,property,to,configure,one,or,more,properties,to,be,passed,on,every,handshake;public,void,set,user,properties,map,string,object,user,properties,if,user,properties,null,this,user,properties,put,all,user,properties
StandardWebSocketClient -> public StandardWebSocketClient();1386087504;Default constructor that calls {@code ContainerProvider.getWebSocketContainer()} to_obtain a {@link WebSocketContainer} instance.;public StandardWebSocketClient() {_		this.webSocketContainer = ContainerProvider.getWebSocketContainer()__	};default,constructor,that,calls,code,container,provider,get,web,socket,container,to,obtain,a,link,web,socket,container,instance;public,standard,web,socket,client,this,web,socket,container,container,provider,get,web,socket,container
StandardWebSocketClient -> public StandardWebSocketClient();1389887689;Default constructor that calls {@code ContainerProvider.getWebSocketContainer()}_to obtain a {@link WebSocketContainer} instance.;public StandardWebSocketClient() {_		this.webSocketContainer = ContainerProvider.getWebSocketContainer()__	};default,constructor,that,calls,code,container,provider,get,web,socket,container,to,obtain,a,link,web,socket,container,instance;public,standard,web,socket,client,this,web,socket,container,container,provider,get,web,socket,container
StandardWebSocketClient -> public StandardWebSocketClient();1395239088;Default constructor that calls {@code ContainerProvider.getWebSocketContainer()}_to obtain a (new) {@link WebSocketContainer} instance. Also see constructor_accepting existing {@code WebSocketContainer} instance.;public StandardWebSocketClient() {_		this.webSocketContainer = ContainerProvider.getWebSocketContainer()__	};default,constructor,that,calls,code,container,provider,get,web,socket,container,to,obtain,a,new,link,web,socket,container,instance,also,see,constructor,accepting,existing,code,web,socket,container,instance;public,standard,web,socket,client,this,web,socket,container,container,provider,get,web,socket,container
StandardWebSocketClient -> public StandardWebSocketClient();1395246308;Default constructor that calls {@code ContainerProvider.getWebSocketContainer()}_to obtain a (new) {@link WebSocketContainer} instance. Also see constructor_accepting existing {@code WebSocketContainer} instance.;public StandardWebSocketClient() {_		this.webSocketContainer = ContainerProvider.getWebSocketContainer()__	};default,constructor,that,calls,code,container,provider,get,web,socket,container,to,obtain,a,new,link,web,socket,container,instance,also,see,constructor,accepting,existing,code,web,socket,container,instance;public,standard,web,socket,client,this,web,socket,container,container,provider,get,web,socket,container
StandardWebSocketClient -> public StandardWebSocketClient();1398858661;Default constructor that calls {@code ContainerProvider.getWebSocketContainer()}_to obtain a (new) {@link WebSocketContainer} instance. Also see constructor_accepting existing {@code WebSocketContainer} instance.;public StandardWebSocketClient() {_		this.webSocketContainer = ContainerProvider.getWebSocketContainer()__	};default,constructor,that,calls,code,container,provider,get,web,socket,container,to,obtain,a,new,link,web,socket,container,instance,also,see,constructor,accepting,existing,code,web,socket,container,instance;public,standard,web,socket,client,this,web,socket,container,container,provider,get,web,socket,container
StandardWebSocketClient -> public StandardWebSocketClient();1401910463;Default constructor that calls {@code ContainerProvider.getWebSocketContainer()}_to obtain a (new) {@link WebSocketContainer} instance. Also see constructor_accepting existing {@code WebSocketContainer} instance.;public StandardWebSocketClient() {_		this.webSocketContainer = ContainerProvider.getWebSocketContainer()__	};default,constructor,that,calls,code,container,provider,get,web,socket,container,to,obtain,a,new,link,web,socket,container,instance,also,see,constructor,accepting,existing,code,web,socket,container,instance;public,standard,web,socket,client,this,web,socket,container,container,provider,get,web,socket,container
StandardWebSocketClient -> public StandardWebSocketClient();1403719829;Default constructor that calls {@code ContainerProvider.getWebSocketContainer()}_to obtain a (new) {@link WebSocketContainer} instance. Also see constructor_accepting existing {@code WebSocketContainer} instance.;public StandardWebSocketClient() {_		this.webSocketContainer = ContainerProvider.getWebSocketContainer()__	};default,constructor,that,calls,code,container,provider,get,web,socket,container,to,obtain,a,new,link,web,socket,container,instance,also,see,constructor,accepting,existing,code,web,socket,container,instance;public,standard,web,socket,client,this,web,socket,container,container,provider,get,web,socket,container
StandardWebSocketClient -> public StandardWebSocketClient();1403791284;Default constructor that calls {@code ContainerProvider.getWebSocketContainer()}_to obtain a (new) {@link WebSocketContainer} instance. Also see constructor_accepting existing {@code WebSocketContainer} instance.;public StandardWebSocketClient() {_		this.webSocketContainer = ContainerProvider.getWebSocketContainer()__	};default,constructor,that,calls,code,container,provider,get,web,socket,container,to,obtain,a,new,link,web,socket,container,instance,also,see,constructor,accepting,existing,code,web,socket,container,instance;public,standard,web,socket,client,this,web,socket,container,container,provider,get,web,socket,container
StandardWebSocketClient -> public StandardWebSocketClient();1404211929;Default constructor that calls {@code ContainerProvider.getWebSocketContainer()}_to obtain a (new) {@link WebSocketContainer} instance. Also see constructor_accepting existing {@code WebSocketContainer} instance.;public StandardWebSocketClient() {_		this.webSocketContainer = ContainerProvider.getWebSocketContainer()__	};default,constructor,that,calls,code,container,provider,get,web,socket,container,to,obtain,a,new,link,web,socket,container,instance,also,see,constructor,accepting,existing,code,web,socket,container,instance;public,standard,web,socket,client,this,web,socket,container,container,provider,get,web,socket,container
StandardWebSocketClient -> public StandardWebSocketClient();1404880799;Default constructor that calls {@code ContainerProvider.getWebSocketContainer()}_to obtain a (new) {@link WebSocketContainer} instance. Also see constructor_accepting existing {@code WebSocketContainer} instance.;public StandardWebSocketClient() {_		this.webSocketContainer = ContainerProvider.getWebSocketContainer()__	};default,constructor,that,calls,code,container,provider,get,web,socket,container,to,obtain,a,new,link,web,socket,container,instance,also,see,constructor,accepting,existing,code,web,socket,container,instance;public,standard,web,socket,client,this,web,socket,container,container,provider,get,web,socket,container
StandardWebSocketClient -> public StandardWebSocketClient();1430734105;Default constructor that calls {@code ContainerProvider.getWebSocketContainer()}_to obtain a (new) {@link WebSocketContainer} instance. Also see constructor_accepting existing {@code WebSocketContainer} instance.;public StandardWebSocketClient() {_		this.webSocketContainer = ContainerProvider.getWebSocketContainer()__	};default,constructor,that,calls,code,container,provider,get,web,socket,container,to,obtain,a,new,link,web,socket,container,instance,also,see,constructor,accepting,existing,code,web,socket,container,instance;public,standard,web,socket,client,this,web,socket,container,container,provider,get,web,socket,container
StandardWebSocketClient -> public StandardWebSocketClient();1467677340;Default constructor that calls {@code ContainerProvider.getWebSocketContainer()}_to obtain a (new) {@link WebSocketContainer} instance. Also see constructor_accepting existing {@code WebSocketContainer} instance.;public StandardWebSocketClient() {_		this.webSocketContainer = ContainerProvider.getWebSocketContainer()__	};default,constructor,that,calls,code,container,provider,get,web,socket,container,to,obtain,a,new,link,web,socket,container,instance,also,see,constructor,accepting,existing,code,web,socket,container,instance;public,standard,web,socket,client,this,web,socket,container,container,provider,get,web,socket,container
StandardWebSocketClient -> public StandardWebSocketClient();1467730834;Default constructor that calls {@code ContainerProvider.getWebSocketContainer()}_to obtain a (new) {@link WebSocketContainer} instance. Also see constructor_accepting existing {@code WebSocketContainer} instance.;public StandardWebSocketClient() {_		this.webSocketContainer = ContainerProvider.getWebSocketContainer()__	};default,constructor,that,calls,code,container,provider,get,web,socket,container,to,obtain,a,new,link,web,socket,container,instance,also,see,constructor,accepting,existing,code,web,socket,container,instance;public,standard,web,socket,client,this,web,socket,container,container,provider,get,web,socket,container
StandardWebSocketClient -> public StandardWebSocketClient();1495868221;Default constructor that calls {@code ContainerProvider.getWebSocketContainer()}_to obtain a (new) {@link WebSocketContainer} instance. Also see constructor_accepting existing {@code WebSocketContainer} instance.;public StandardWebSocketClient() {_		this.webSocketContainer = ContainerProvider.getWebSocketContainer()__	};default,constructor,that,calls,code,container,provider,get,web,socket,container,to,obtain,a,new,link,web,socket,container,instance,also,see,constructor,accepting,existing,code,web,socket,container,instance;public,standard,web,socket,client,this,web,socket,container,container,provider,get,web,socket,container
StandardWebSocketClient -> public StandardWebSocketClient();1496837955;Default constructor that calls {@code ContainerProvider.getWebSocketContainer()}_to obtain a (new) {@link WebSocketContainer} instance. Also see constructor_accepting existing {@code WebSocketContainer} instance.;public StandardWebSocketClient() {_		this.webSocketContainer = ContainerProvider.getWebSocketContainer()__	};default,constructor,that,calls,code,container,provider,get,web,socket,container,to,obtain,a,new,link,web,socket,container,instance,also,see,constructor,accepting,existing,code,web,socket,container,instance;public,standard,web,socket,client,this,web,socket,container,container,provider,get,web,socket,container
StandardWebSocketClient -> public StandardWebSocketClient();1497341397;Default constructor that calls {@code ContainerProvider.getWebSocketContainer()}_to obtain a (new) {@link WebSocketContainer} instance. Also see constructor_accepting existing {@code WebSocketContainer} instance.;public StandardWebSocketClient() {_		this.webSocketContainer = ContainerProvider.getWebSocketContainer()__	};default,constructor,that,calls,code,container,provider,get,web,socket,container,to,obtain,a,new,link,web,socket,container,instance,also,see,constructor,accepting,existing,code,web,socket,container,instance;public,standard,web,socket,client,this,web,socket,container,container,provider,get,web,socket,container
StandardWebSocketClient -> public StandardWebSocketClient();1498780456;Default constructor that calls {@code ContainerProvider.getWebSocketContainer()}_to obtain a (new) {@link WebSocketContainer} instance. Also see constructor_accepting existing {@code WebSocketContainer} instance.;public StandardWebSocketClient() {_		this.webSocketContainer = ContainerProvider.getWebSocketContainer()__	};default,constructor,that,calls,code,container,provider,get,web,socket,container,to,obtain,a,new,link,web,socket,container,instance,also,see,constructor,accepting,existing,code,web,socket,container,instance;public,standard,web,socket,client,this,web,socket,container,container,provider,get,web,socket,container
StandardWebSocketClient -> public StandardWebSocketClient();1530174524;Default constructor that calls {@code ContainerProvider.getWebSocketContainer()}_to obtain a (new) {@link WebSocketContainer} instance. Also see constructor_accepting existing {@code WebSocketContainer} instance.;public StandardWebSocketClient() {_		this.webSocketContainer = ContainerProvider.getWebSocketContainer()__	};default,constructor,that,calls,code,container,provider,get,web,socket,container,to,obtain,a,new,link,web,socket,container,instance,also,see,constructor,accepting,existing,code,web,socket,container,instance;public,standard,web,socket,client,this,web,socket,container,container,provider,get,web,socket,container
StandardWebSocketClient -> public StandardWebSocketClient();1530174524;Default constructor that calls {@code ContainerProvider.getWebSocketContainer()}_to obtain a (new) {@link WebSocketContainer} instance. Also see constructor_accepting existing {@code WebSocketContainer} instance.;public StandardWebSocketClient() {_		this.webSocketContainer = ContainerProvider.getWebSocketContainer()__	};default,constructor,that,calls,code,container,provider,get,web,socket,container,to,obtain,a,new,link,web,socket,container,instance,also,see,constructor,accepting,existing,code,web,socket,container,instance;public,standard,web,socket,client,this,web,socket,container,container,provider,get,web,socket,container
StandardWebSocketClient -> public void setTaskExecutor(@Nullable AsyncListenableTaskExecutor taskExecutor);1495868221;Set an {@link AsyncListenableTaskExecutor} to use when opening connections._If this property is set to {@code null}, calls to  any of the_{@code doHandshake} methods will block until the connection is established._<p>By default, an instance of {@code SimpleAsyncTaskExecutor} is used.;public void setTaskExecutor(@Nullable AsyncListenableTaskExecutor taskExecutor) {_		this.taskExecutor = taskExecutor__	};set,an,link,async,listenable,task,executor,to,use,when,opening,connections,if,this,property,is,set,to,code,null,calls,to,any,of,the,code,do,handshake,methods,will,block,until,the,connection,is,established,p,by,default,an,instance,of,code,simple,async,task,executor,is,used;public,void,set,task,executor,nullable,async,listenable,task,executor,task,executor,this,task,executor,task,executor
StandardWebSocketClient -> public void setTaskExecutor(@Nullable AsyncListenableTaskExecutor taskExecutor);1496837955;Set an {@link AsyncListenableTaskExecutor} to use when opening connections._If this property is set to {@code null}, calls to  any of the_{@code doHandshake} methods will block until the connection is established._<p>By default, an instance of {@code SimpleAsyncTaskExecutor} is used.;public void setTaskExecutor(@Nullable AsyncListenableTaskExecutor taskExecutor) {_		this.taskExecutor = taskExecutor__	};set,an,link,async,listenable,task,executor,to,use,when,opening,connections,if,this,property,is,set,to,code,null,calls,to,any,of,the,code,do,handshake,methods,will,block,until,the,connection,is,established,p,by,default,an,instance,of,code,simple,async,task,executor,is,used;public,void,set,task,executor,nullable,async,listenable,task,executor,task,executor,this,task,executor,task,executor
StandardWebSocketClient -> public void setTaskExecutor(@Nullable AsyncListenableTaskExecutor taskExecutor);1497341397;Set an {@link AsyncListenableTaskExecutor} to use when opening connections._If this property is set to {@code null}, calls to  any of the_{@code doHandshake} methods will block until the connection is established._<p>By default, an instance of {@code SimpleAsyncTaskExecutor} is used.;public void setTaskExecutor(@Nullable AsyncListenableTaskExecutor taskExecutor) {_		this.taskExecutor = taskExecutor__	};set,an,link,async,listenable,task,executor,to,use,when,opening,connections,if,this,property,is,set,to,code,null,calls,to,any,of,the,code,do,handshake,methods,will,block,until,the,connection,is,established,p,by,default,an,instance,of,code,simple,async,task,executor,is,used;public,void,set,task,executor,nullable,async,listenable,task,executor,task,executor,this,task,executor,task,executor
StandardWebSocketClient -> public void setTaskExecutor(@Nullable AsyncListenableTaskExecutor taskExecutor);1498780456;Set an {@link AsyncListenableTaskExecutor} to use when opening connections._If this property is set to {@code null}, calls to any of the_{@code doHandshake} methods will block until the connection is established._<p>By default, an instance of {@code SimpleAsyncTaskExecutor} is used.;public void setTaskExecutor(@Nullable AsyncListenableTaskExecutor taskExecutor) {_		this.taskExecutor = taskExecutor__	};set,an,link,async,listenable,task,executor,to,use,when,opening,connections,if,this,property,is,set,to,code,null,calls,to,any,of,the,code,do,handshake,methods,will,block,until,the,connection,is,established,p,by,default,an,instance,of,code,simple,async,task,executor,is,used;public,void,set,task,executor,nullable,async,listenable,task,executor,task,executor,this,task,executor,task,executor
StandardWebSocketClient -> public void setTaskExecutor(@Nullable AsyncListenableTaskExecutor taskExecutor);1530174524;Set an {@link AsyncListenableTaskExecutor} to use when opening connections._If this property is set to {@code null}, calls to any of the_{@code doHandshake} methods will block until the connection is established._<p>By default, an instance of {@code SimpleAsyncTaskExecutor} is used.;public void setTaskExecutor(@Nullable AsyncListenableTaskExecutor taskExecutor) {_		this.taskExecutor = taskExecutor__	};set,an,link,async,listenable,task,executor,to,use,when,opening,connections,if,this,property,is,set,to,code,null,calls,to,any,of,the,code,do,handshake,methods,will,block,until,the,connection,is,established,p,by,default,an,instance,of,code,simple,async,task,executor,is,used;public,void,set,task,executor,nullable,async,listenable,task,executor,task,executor,this,task,executor,task,executor
StandardWebSocketClient -> public void setTaskExecutor(@Nullable AsyncListenableTaskExecutor taskExecutor);1530174524;Set an {@link AsyncListenableTaskExecutor} to use when opening connections._If this property is set to {@code null}, calls to any of the_{@code doHandshake} methods will block until the connection is established._<p>By default, an instance of {@code SimpleAsyncTaskExecutor} is used.;public void setTaskExecutor(@Nullable AsyncListenableTaskExecutor taskExecutor) {_		this.taskExecutor = taskExecutor__	};set,an,link,async,listenable,task,executor,to,use,when,opening,connections,if,this,property,is,set,to,code,null,calls,to,any,of,the,code,do,handshake,methods,will,block,until,the,connection,is,established,p,by,default,an,instance,of,code,simple,async,task,executor,is,used;public,void,set,task,executor,nullable,async,listenable,task,executor,task,executor,this,task,executor,task,executor
StandardWebSocketClient -> public Map<String, Object> getUserProperties();1430734105;The configured user properties, or {@code null}.;public Map<String, Object> getUserProperties() {_		return this.userProperties__	};the,configured,user,properties,or,code,null;public,map,string,object,get,user,properties,return,this,user,properties
StandardWebSocketClient -> public Map<String, Object> getUserProperties();1467677340;The configured user properties, or {@code null}.;public Map<String, Object> getUserProperties() {_		return this.userProperties__	};the,configured,user,properties,or,code,null;public,map,string,object,get,user,properties,return,this,user,properties
StandardWebSocketClient -> public Map<String, Object> getUserProperties();1467730834;The configured user properties, or {@code null}.;public Map<String, Object> getUserProperties() {_		return this.userProperties__	};the,configured,user,properties,or,code,null;public,map,string,object,get,user,properties,return,this,user,properties
StandardWebSocketClient -> public Map<String, Object> getUserProperties();1496837955;The configured user properties.;public Map<String, Object> getUserProperties() {_		return this.userProperties__	};the,configured,user,properties;public,map,string,object,get,user,properties,return,this,user,properties
StandardWebSocketClient -> public Map<String, Object> getUserProperties();1497341397;The configured user properties.;public Map<String, Object> getUserProperties() {_		return this.userProperties__	};the,configured,user,properties;public,map,string,object,get,user,properties,return,this,user,properties
StandardWebSocketClient -> public Map<String, Object> getUserProperties();1498780456;The configured user properties.;public Map<String, Object> getUserProperties() {_		return this.userProperties__	};the,configured,user,properties;public,map,string,object,get,user,properties,return,this,user,properties
StandardWebSocketClient -> public Map<String, Object> getUserProperties();1530174524;The configured user properties.;public Map<String, Object> getUserProperties() {_		return this.userProperties__	};the,configured,user,properties;public,map,string,object,get,user,properties,return,this,user,properties
StandardWebSocketClient -> public Map<String, Object> getUserProperties();1530174524;The configured user properties.;public Map<String, Object> getUserProperties() {_		return this.userProperties__	};the,configured,user,properties;public,map,string,object,get,user,properties,return,this,user,properties
StandardWebSocketClient -> @Nullable 	public AsyncListenableTaskExecutor getTaskExecutor();1498780456;Return the configured {@link TaskExecutor}.;@Nullable_	public AsyncListenableTaskExecutor getTaskExecutor() {_		return this.taskExecutor__	};return,the,configured,link,task,executor;nullable,public,async,listenable,task,executor,get,task,executor,return,this,task,executor
StandardWebSocketClient -> @Nullable 	public AsyncListenableTaskExecutor getTaskExecutor();1530174524;Return the configured {@link TaskExecutor}.;@Nullable_	public AsyncListenableTaskExecutor getTaskExecutor() {_		return this.taskExecutor__	};return,the,configured,link,task,executor;nullable,public,async,listenable,task,executor,get,task,executor,return,this,task,executor
StandardWebSocketClient -> @Nullable 	public AsyncListenableTaskExecutor getTaskExecutor();1530174524;Return the configured {@link TaskExecutor}.;@Nullable_	public AsyncListenableTaskExecutor getTaskExecutor() {_		return this.taskExecutor__	};return,the,configured,link,task,executor;nullable,public,async,listenable,task,executor,get,task,executor,return,this,task,executor
StandardWebSocketClient -> public void setTaskExecutor(AsyncListenableTaskExecutor taskExecutor);1386087504;Set a {@link TaskExecutor} to use to open the connection._By default {@link SimpleAsyncTaskExecutor} is used.;public void setTaskExecutor(AsyncListenableTaskExecutor taskExecutor) {_		Assert.notNull(taskExecutor, "TaskExecutor must not be null")__		this.taskExecutor = taskExecutor__	};set,a,link,task,executor,to,use,to,open,the,connection,by,default,link,simple,async,task,executor,is,used;public,void,set,task,executor,async,listenable,task,executor,task,executor,assert,not,null,task,executor,task,executor,must,not,be,null,this,task,executor,task,executor
StandardWebSocketClient -> public void setTaskExecutor(AsyncListenableTaskExecutor taskExecutor);1389887689;Set a {@link TaskExecutor} to use to open the connection._By default {@link SimpleAsyncTaskExecutor} is used.;public void setTaskExecutor(AsyncListenableTaskExecutor taskExecutor) {_		Assert.notNull(taskExecutor, "TaskExecutor must not be null")__		this.taskExecutor = taskExecutor__	};set,a,link,task,executor,to,use,to,open,the,connection,by,default,link,simple,async,task,executor,is,used;public,void,set,task,executor,async,listenable,task,executor,task,executor,assert,not,null,task,executor,task,executor,must,not,be,null,this,task,executor,task,executor
StandardWebSocketClient -> public void setTaskExecutor(AsyncListenableTaskExecutor taskExecutor);1395239088;Set an {@link AsyncListenableTaskExecutor} to use when opening connections.__<p>If this property is not configured, calls to  any of the_{@code doHandshake} methods will block until the connection is established.;public void setTaskExecutor(AsyncListenableTaskExecutor taskExecutor) {_		this.taskExecutor = taskExecutor__	};set,an,link,async,listenable,task,executor,to,use,when,opening,connections,p,if,this,property,is,not,configured,calls,to,any,of,the,code,do,handshake,methods,will,block,until,the,connection,is,established;public,void,set,task,executor,async,listenable,task,executor,task,executor,this,task,executor,task,executor
StandardWebSocketClient -> public void setTaskExecutor(AsyncListenableTaskExecutor taskExecutor);1395246308;Set an {@link AsyncListenableTaskExecutor} to use when opening connections.__<p>If this property is not configured, calls to  any of the_{@code doHandshake} methods will block until the connection is established.;public void setTaskExecutor(AsyncListenableTaskExecutor taskExecutor) {_		this.taskExecutor = taskExecutor__	};set,an,link,async,listenable,task,executor,to,use,when,opening,connections,p,if,this,property,is,not,configured,calls,to,any,of,the,code,do,handshake,methods,will,block,until,the,connection,is,established;public,void,set,task,executor,async,listenable,task,executor,task,executor,this,task,executor,task,executor
StandardWebSocketClient -> public void setTaskExecutor(AsyncListenableTaskExecutor taskExecutor);1398858661;Set an {@link AsyncListenableTaskExecutor} to use when opening connections.__<p>If this property is not configured, calls to  any of the_{@code doHandshake} methods will block until the connection is established.;public void setTaskExecutor(AsyncListenableTaskExecutor taskExecutor) {_		this.taskExecutor = taskExecutor__	};set,an,link,async,listenable,task,executor,to,use,when,opening,connections,p,if,this,property,is,not,configured,calls,to,any,of,the,code,do,handshake,methods,will,block,until,the,connection,is,established;public,void,set,task,executor,async,listenable,task,executor,task,executor,this,task,executor,task,executor
StandardWebSocketClient -> public void setTaskExecutor(AsyncListenableTaskExecutor taskExecutor);1401910463;Set an {@link AsyncListenableTaskExecutor} to use when opening connections.__<p>If this property is not configured, calls to  any of the_{@code doHandshake} methods will block until the connection is established.;public void setTaskExecutor(AsyncListenableTaskExecutor taskExecutor) {_		this.taskExecutor = taskExecutor__	};set,an,link,async,listenable,task,executor,to,use,when,opening,connections,p,if,this,property,is,not,configured,calls,to,any,of,the,code,do,handshake,methods,will,block,until,the,connection,is,established;public,void,set,task,executor,async,listenable,task,executor,task,executor,this,task,executor,task,executor
StandardWebSocketClient -> public void setTaskExecutor(AsyncListenableTaskExecutor taskExecutor);1403719829;Set an {@link AsyncListenableTaskExecutor} to use when opening connections._If this property is set to {@code null}, calls to  any of the_{@code doHandshake} methods will block until the connection is established.__<p>By default an instance of {@code SimpleAsyncTaskExecutor} is used.;public void setTaskExecutor(AsyncListenableTaskExecutor taskExecutor) {_		this.taskExecutor = taskExecutor__	};set,an,link,async,listenable,task,executor,to,use,when,opening,connections,if,this,property,is,set,to,code,null,calls,to,any,of,the,code,do,handshake,methods,will,block,until,the,connection,is,established,p,by,default,an,instance,of,code,simple,async,task,executor,is,used;public,void,set,task,executor,async,listenable,task,executor,task,executor,this,task,executor,task,executor
StandardWebSocketClient -> public void setTaskExecutor(AsyncListenableTaskExecutor taskExecutor);1403791284;Set an {@link AsyncListenableTaskExecutor} to use when opening connections._If this property is set to {@code null}, calls to  any of the_{@code doHandshake} methods will block until the connection is established.__<p>By default an instance of {@code SimpleAsyncTaskExecutor} is used.;public void setTaskExecutor(AsyncListenableTaskExecutor taskExecutor) {_		this.taskExecutor = taskExecutor__	};set,an,link,async,listenable,task,executor,to,use,when,opening,connections,if,this,property,is,set,to,code,null,calls,to,any,of,the,code,do,handshake,methods,will,block,until,the,connection,is,established,p,by,default,an,instance,of,code,simple,async,task,executor,is,used;public,void,set,task,executor,async,listenable,task,executor,task,executor,this,task,executor,task,executor
StandardWebSocketClient -> public void setTaskExecutor(AsyncListenableTaskExecutor taskExecutor);1404211929;Set an {@link AsyncListenableTaskExecutor} to use when opening connections._If this property is set to {@code null}, calls to  any of the_{@code doHandshake} methods will block until the connection is established._<p>By default, an instance of {@code SimpleAsyncTaskExecutor} is used.;public void setTaskExecutor(AsyncListenableTaskExecutor taskExecutor) {_		this.taskExecutor = taskExecutor__	};set,an,link,async,listenable,task,executor,to,use,when,opening,connections,if,this,property,is,set,to,code,null,calls,to,any,of,the,code,do,handshake,methods,will,block,until,the,connection,is,established,p,by,default,an,instance,of,code,simple,async,task,executor,is,used;public,void,set,task,executor,async,listenable,task,executor,task,executor,this,task,executor,task,executor
StandardWebSocketClient -> public void setTaskExecutor(AsyncListenableTaskExecutor taskExecutor);1404880799;Set an {@link AsyncListenableTaskExecutor} to use when opening connections._If this property is set to {@code null}, calls to  any of the_{@code doHandshake} methods will block until the connection is established._<p>By default, an instance of {@code SimpleAsyncTaskExecutor} is used.;public void setTaskExecutor(AsyncListenableTaskExecutor taskExecutor) {_		this.taskExecutor = taskExecutor__	};set,an,link,async,listenable,task,executor,to,use,when,opening,connections,if,this,property,is,set,to,code,null,calls,to,any,of,the,code,do,handshake,methods,will,block,until,the,connection,is,established,p,by,default,an,instance,of,code,simple,async,task,executor,is,used;public,void,set,task,executor,async,listenable,task,executor,task,executor,this,task,executor,task,executor
StandardWebSocketClient -> public void setTaskExecutor(AsyncListenableTaskExecutor taskExecutor);1430734105;Set an {@link AsyncListenableTaskExecutor} to use when opening connections._If this property is set to {@code null}, calls to  any of the_{@code doHandshake} methods will block until the connection is established._<p>By default, an instance of {@code SimpleAsyncTaskExecutor} is used.;public void setTaskExecutor(AsyncListenableTaskExecutor taskExecutor) {_		this.taskExecutor = taskExecutor__	};set,an,link,async,listenable,task,executor,to,use,when,opening,connections,if,this,property,is,set,to,code,null,calls,to,any,of,the,code,do,handshake,methods,will,block,until,the,connection,is,established,p,by,default,an,instance,of,code,simple,async,task,executor,is,used;public,void,set,task,executor,async,listenable,task,executor,task,executor,this,task,executor,task,executor
StandardWebSocketClient -> public void setTaskExecutor(AsyncListenableTaskExecutor taskExecutor);1467677340;Set an {@link AsyncListenableTaskExecutor} to use when opening connections._If this property is set to {@code null}, calls to  any of the_{@code doHandshake} methods will block until the connection is established._<p>By default, an instance of {@code SimpleAsyncTaskExecutor} is used.;public void setTaskExecutor(AsyncListenableTaskExecutor taskExecutor) {_		this.taskExecutor = taskExecutor__	};set,an,link,async,listenable,task,executor,to,use,when,opening,connections,if,this,property,is,set,to,code,null,calls,to,any,of,the,code,do,handshake,methods,will,block,until,the,connection,is,established,p,by,default,an,instance,of,code,simple,async,task,executor,is,used;public,void,set,task,executor,async,listenable,task,executor,task,executor,this,task,executor,task,executor
StandardWebSocketClient -> public void setTaskExecutor(AsyncListenableTaskExecutor taskExecutor);1467730834;Set an {@link AsyncListenableTaskExecutor} to use when opening connections._If this property is set to {@code null}, calls to  any of the_{@code doHandshake} methods will block until the connection is established._<p>By default, an instance of {@code SimpleAsyncTaskExecutor} is used.;public void setTaskExecutor(AsyncListenableTaskExecutor taskExecutor) {_		this.taskExecutor = taskExecutor__	};set,an,link,async,listenable,task,executor,to,use,when,opening,connections,if,this,property,is,set,to,code,null,calls,to,any,of,the,code,do,handshake,methods,will,block,until,the,connection,is,established,p,by,default,an,instance,of,code,simple,async,task,executor,is,used;public,void,set,task,executor,async,listenable,task,executor,task,executor,this,task,executor,task,executor
