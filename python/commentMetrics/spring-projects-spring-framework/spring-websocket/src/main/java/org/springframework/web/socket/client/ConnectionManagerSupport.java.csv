# id;timestamp;commentText;codeText;commentWords;codeWords
ConnectionManagerSupport -> @Override 	public boolean isAutoStartup();1368482696;Return the value for the 'autoStartup' property. If "true", this endpoint_connection manager will connect to the remote endpoint upon a_ContextRefreshedEvent.;@Override_	public boolean isAutoStartup() {_		return this.autoStartup__	};return,the,value,for,the,auto,startup,property,if,true,this,endpoint,connection,manager,will,connect,to,the,remote,endpoint,upon,a,context,refreshed,event;override,public,boolean,is,auto,startup,return,this,auto,startup
ConnectionManagerSupport -> @Override 	public boolean isAutoStartup();1368554355;Return the value for the 'autoStartup' property. If "true", this endpoint_connection manager will connect to the remote endpoint upon a_ContextRefreshedEvent.;@Override_	public boolean isAutoStartup() {_		return this.autoStartup__	};return,the,value,for,the,auto,startup,property,if,true,this,endpoint,connection,manager,will,connect,to,the,remote,endpoint,upon,a,context,refreshed,event;override,public,boolean,is,auto,startup,return,this,auto,startup
ConnectionManagerSupport -> @Override 	public boolean isAutoStartup();1368564107;Return the value for the 'autoStartup' property. If "true", this endpoint_connection manager will connect to the remote endpoint upon a_ContextRefreshedEvent.;@Override_	public boolean isAutoStartup() {_		return this.autoStartup__	};return,the,value,for,the,auto,startup,property,if,true,this,endpoint,connection,manager,will,connect,to,the,remote,endpoint,upon,a,context,refreshed,event;override,public,boolean,is,auto,startup,return,this,auto,startup
ConnectionManagerSupport -> @Override 	public boolean isAutoStartup();1372363092;Return the value for the 'autoStartup' property. If "true", this endpoint_connection manager will connect to the remote endpoint upon a_ContextRefreshedEvent.;@Override_	public boolean isAutoStartup() {_		return this.autoStartup__	};return,the,value,for,the,auto,startup,property,if,true,this,endpoint,connection,manager,will,connect,to,the,remote,endpoint,upon,a,context,refreshed,event;override,public,boolean,is,auto,startup,return,this,auto,startup
ConnectionManagerSupport -> @Override 	public boolean isAutoStartup();1378484901;Return the value for the 'autoStartup' property. If "true", this endpoint_connection manager will connect to the remote endpoint upon a_ContextRefreshedEvent.;@Override_	public boolean isAutoStartup() {_		return this.autoStartup__	};return,the,value,for,the,auto,startup,property,if,true,this,endpoint,connection,manager,will,connect,to,the,remote,endpoint,upon,a,context,refreshed,event;override,public,boolean,is,auto,startup,return,this,auto,startup
ConnectionManagerSupport -> @Override 	public boolean isAutoStartup();1385507478;Return the value for the 'autoStartup' property. If "true", this endpoint_connection manager will connect to the remote endpoint upon a_ContextRefreshedEvent.;@Override_	public boolean isAutoStartup() {_		return this.autoStartup__	};return,the,value,for,the,auto,startup,property,if,true,this,endpoint,connection,manager,will,connect,to,the,remote,endpoint,upon,a,context,refreshed,event;override,public,boolean,is,auto,startup,return,this,auto,startup
ConnectionManagerSupport -> @Override 	public boolean isAutoStartup();1404880799;Return the value for the 'autoStartup' property. If "true", this endpoint_connection manager will connect to the remote endpoint upon a_ContextRefreshedEvent.;@Override_	public boolean isAutoStartup() {_		return this.autoStartup__	};return,the,value,for,the,auto,startup,property,if,true,this,endpoint,connection,manager,will,connect,to,the,remote,endpoint,upon,a,context,refreshed,event;override,public,boolean,is,auto,startup,return,this,auto,startup
ConnectionManagerSupport -> @Override 	public boolean isAutoStartup();1405011419;Return the value for the 'autoStartup' property. If "true", this endpoint_connection manager will connect to the remote endpoint upon a_ContextRefreshedEvent.;@Override_	public boolean isAutoStartup() {_		return this.autoStartup__	};return,the,value,for,the,auto,startup,property,if,true,this,endpoint,connection,manager,will,connect,to,the,remote,endpoint,upon,a,context,refreshed,event;override,public,boolean,is,auto,startup,return,this,auto,startup
ConnectionManagerSupport -> @Override 	public boolean isAutoStartup();1413848647;Return the value for the 'autoStartup' property. If "true", this endpoint_connection manager will connect to the remote endpoint upon a_ContextRefreshedEvent.;@Override_	public boolean isAutoStartup() {_		return this.autoStartup__	};return,the,value,for,the,auto,startup,property,if,true,this,endpoint,connection,manager,will,connect,to,the,remote,endpoint,upon,a,context,refreshed,event;override,public,boolean,is,auto,startup,return,this,auto,startup
ConnectionManagerSupport -> @Override 	public boolean isAutoStartup();1462186904;Return the value for the 'autoStartup' property. If "true", this endpoint_connection manager will connect to the remote endpoint upon a_ContextRefreshedEvent.;@Override_	public boolean isAutoStartup() {_		return this.autoStartup__	};return,the,value,for,the,auto,startup,property,if,true,this,endpoint,connection,manager,will,connect,to,the,remote,endpoint,upon,a,context,refreshed,event;override,public,boolean,is,auto,startup,return,this,auto,startup
ConnectionManagerSupport -> @Override 	public boolean isAutoStartup();1521123475;Return the value for the 'autoStartup' property. If "true", this endpoint_connection manager will connect to the remote endpoint upon a_ContextRefreshedEvent.;@Override_	public boolean isAutoStartup() {_		return this.autoStartup__	};return,the,value,for,the,auto,startup,property,if,true,this,endpoint,connection,manager,will,connect,to,the,remote,endpoint,upon,a,context,refreshed,event;override,public,boolean,is,auto,startup,return,this,auto,startup
ConnectionManagerSupport -> @Override 	public boolean isAutoStartup();1534414082;Return the value for the 'autoStartup' property. If "true", this endpoint_connection manager will connect to the remote endpoint upon a_ContextRefreshedEvent.;@Override_	public boolean isAutoStartup() {_		return this.autoStartup__	};return,the,value,for,the,auto,startup,property,if,true,this,endpoint,connection,manager,will,connect,to,the,remote,endpoint,upon,a,context,refreshed,event;override,public,boolean,is,auto,startup,return,this,auto,startup
ConnectionManagerSupport -> @Override 	public int getPhase();1368482696;Return the phase in which this endpoint connection factory will be auto-connected_and stopped.;@Override_	public int getPhase() {_		return this.phase__	};return,the,phase,in,which,this,endpoint,connection,factory,will,be,auto,connected,and,stopped;override,public,int,get,phase,return,this,phase
ConnectionManagerSupport -> @Override 	public int getPhase();1368554355;Return the phase in which this endpoint connection factory will be auto-connected_and stopped.;@Override_	public int getPhase() {_		return this.phase__	};return,the,phase,in,which,this,endpoint,connection,factory,will,be,auto,connected,and,stopped;override,public,int,get,phase,return,this,phase
ConnectionManagerSupport -> @Override 	public int getPhase();1368564107;Return the phase in which this endpoint connection factory will be auto-connected_and stopped.;@Override_	public int getPhase() {_		return this.phase__	};return,the,phase,in,which,this,endpoint,connection,factory,will,be,auto,connected,and,stopped;override,public,int,get,phase,return,this,phase
ConnectionManagerSupport -> @Override 	public int getPhase();1372363092;Return the phase in which this endpoint connection factory will be auto-connected_and stopped.;@Override_	public int getPhase() {_		return this.phase__	};return,the,phase,in,which,this,endpoint,connection,factory,will,be,auto,connected,and,stopped;override,public,int,get,phase,return,this,phase
ConnectionManagerSupport -> @Override 	public int getPhase();1378484901;Return the phase in which this endpoint connection factory will be auto-connected_and stopped.;@Override_	public int getPhase() {_		return this.phase__	};return,the,phase,in,which,this,endpoint,connection,factory,will,be,auto,connected,and,stopped;override,public,int,get,phase,return,this,phase
ConnectionManagerSupport -> @Override 	public int getPhase();1385507478;Return the phase in which this endpoint connection factory will be auto-connected_and stopped.;@Override_	public int getPhase() {_		return this.phase__	};return,the,phase,in,which,this,endpoint,connection,factory,will,be,auto,connected,and,stopped;override,public,int,get,phase,return,this,phase
ConnectionManagerSupport -> @Override 	public int getPhase();1404880799;Return the phase in which this endpoint connection factory will be auto-connected_and stopped.;@Override_	public int getPhase() {_		return this.phase__	};return,the,phase,in,which,this,endpoint,connection,factory,will,be,auto,connected,and,stopped;override,public,int,get,phase,return,this,phase
ConnectionManagerSupport -> @Override 	public int getPhase();1405011419;Return the phase in which this endpoint connection factory will be auto-connected_and stopped.;@Override_	public int getPhase() {_		return this.phase__	};return,the,phase,in,which,this,endpoint,connection,factory,will,be,auto,connected,and,stopped;override,public,int,get,phase,return,this,phase
ConnectionManagerSupport -> @Override 	public int getPhase();1413848647;Return the phase in which this endpoint connection factory will be auto-connected_and stopped.;@Override_	public int getPhase() {_		return this.phase__	};return,the,phase,in,which,this,endpoint,connection,factory,will,be,auto,connected,and,stopped;override,public,int,get,phase,return,this,phase
ConnectionManagerSupport -> @Override 	public int getPhase();1462186904;Return the phase in which this endpoint connection factory will be auto-connected_and stopped.;@Override_	public int getPhase() {_		return this.phase__	};return,the,phase,in,which,this,endpoint,connection,factory,will,be,auto,connected,and,stopped;override,public,int,get,phase,return,this,phase
ConnectionManagerSupport -> @Override 	public int getPhase();1521123475;Return the phase in which this endpoint connection factory will be auto-connected_and stopped.;@Override_	public int getPhase() {_		return this.phase__	};return,the,phase,in,which,this,endpoint,connection,factory,will,be,auto,connected,and,stopped;override,public,int,get,phase,return,this,phase
ConnectionManagerSupport -> @Override 	public int getPhase();1534414082;Return the phase in which this endpoint connection factory will be auto-connected_and stopped.;@Override_	public int getPhase() {_		return this.phase__	};return,the,phase,in,which,this,endpoint,connection,factory,will,be,auto,connected,and,stopped;override,public,int,get,phase,return,this,phase
ConnectionManagerSupport -> public void setAutoStartup(boolean autoStartup);1367865989;Set whether to auto-connect to the remote endpoint after this connection manager_has been initialized and the Spring context has been refreshed._<p>Default is "false".;public void setAutoStartup(boolean autoStartup) {_		this.autoStartup = autoStartup__	};set,whether,to,auto,connect,to,the,remote,endpoint,after,this,connection,manager,has,been,initialized,and,the,spring,context,has,been,refreshed,p,default,is,false;public,void,set,auto,startup,boolean,auto,startup,this,auto,startup,auto,startup
ConnectionManagerSupport -> public void setAutoStartup(boolean autoStartup);1368482696;Set whether to auto-connect to the remote endpoint after this connection manager_has been initialized and the Spring context has been refreshed._<p>Default is "false".;public void setAutoStartup(boolean autoStartup) {_		this.autoStartup = autoStartup__	};set,whether,to,auto,connect,to,the,remote,endpoint,after,this,connection,manager,has,been,initialized,and,the,spring,context,has,been,refreshed,p,default,is,false;public,void,set,auto,startup,boolean,auto,startup,this,auto,startup,auto,startup
ConnectionManagerSupport -> public void setAutoStartup(boolean autoStartup);1368554355;Set whether to auto-connect to the remote endpoint after this connection manager_has been initialized and the Spring context has been refreshed._<p>Default is "false".;public void setAutoStartup(boolean autoStartup) {_		this.autoStartup = autoStartup__	};set,whether,to,auto,connect,to,the,remote,endpoint,after,this,connection,manager,has,been,initialized,and,the,spring,context,has,been,refreshed,p,default,is,false;public,void,set,auto,startup,boolean,auto,startup,this,auto,startup,auto,startup
ConnectionManagerSupport -> public void setAutoStartup(boolean autoStartup);1368564107;Set whether to auto-connect to the remote endpoint after this connection manager_has been initialized and the Spring context has been refreshed._<p>Default is "false".;public void setAutoStartup(boolean autoStartup) {_		this.autoStartup = autoStartup__	};set,whether,to,auto,connect,to,the,remote,endpoint,after,this,connection,manager,has,been,initialized,and,the,spring,context,has,been,refreshed,p,default,is,false;public,void,set,auto,startup,boolean,auto,startup,this,auto,startup,auto,startup
ConnectionManagerSupport -> public void setAutoStartup(boolean autoStartup);1372363092;Set whether to auto-connect to the remote endpoint after this connection manager_has been initialized and the Spring context has been refreshed.__<p>Default is "false".;public void setAutoStartup(boolean autoStartup) {_		this.autoStartup = autoStartup__	};set,whether,to,auto,connect,to,the,remote,endpoint,after,this,connection,manager,has,been,initialized,and,the,spring,context,has,been,refreshed,p,default,is,false;public,void,set,auto,startup,boolean,auto,startup,this,auto,startup,auto,startup
ConnectionManagerSupport -> public void setAutoStartup(boolean autoStartup);1378484901;Set whether to auto-connect to the remote endpoint after this connection manager_has been initialized and the Spring context has been refreshed.__<p>Default is "false".;public void setAutoStartup(boolean autoStartup) {_		this.autoStartup = autoStartup__	};set,whether,to,auto,connect,to,the,remote,endpoint,after,this,connection,manager,has,been,initialized,and,the,spring,context,has,been,refreshed,p,default,is,false;public,void,set,auto,startup,boolean,auto,startup,this,auto,startup,auto,startup
ConnectionManagerSupport -> public void setAutoStartup(boolean autoStartup);1385507478;Set whether to auto-connect to the remote endpoint after this connection manager_has been initialized and the Spring context has been refreshed._<p>Default is "false".;public void setAutoStartup(boolean autoStartup) {_		this.autoStartup = autoStartup__	};set,whether,to,auto,connect,to,the,remote,endpoint,after,this,connection,manager,has,been,initialized,and,the,spring,context,has,been,refreshed,p,default,is,false;public,void,set,auto,startup,boolean,auto,startup,this,auto,startup,auto,startup
ConnectionManagerSupport -> public void setAutoStartup(boolean autoStartup);1404880799;Set whether to auto-connect to the remote endpoint after this connection manager_has been initialized and the Spring context has been refreshed._<p>Default is "false".;public void setAutoStartup(boolean autoStartup) {_		this.autoStartup = autoStartup__	};set,whether,to,auto,connect,to,the,remote,endpoint,after,this,connection,manager,has,been,initialized,and,the,spring,context,has,been,refreshed,p,default,is,false;public,void,set,auto,startup,boolean,auto,startup,this,auto,startup,auto,startup
ConnectionManagerSupport -> public void setAutoStartup(boolean autoStartup);1405011419;Set whether to auto-connect to the remote endpoint after this connection manager_has been initialized and the Spring context has been refreshed._<p>Default is "false".;public void setAutoStartup(boolean autoStartup) {_		this.autoStartup = autoStartup__	};set,whether,to,auto,connect,to,the,remote,endpoint,after,this,connection,manager,has,been,initialized,and,the,spring,context,has,been,refreshed,p,default,is,false;public,void,set,auto,startup,boolean,auto,startup,this,auto,startup,auto,startup
ConnectionManagerSupport -> public void setAutoStartup(boolean autoStartup);1413848647;Set whether to auto-connect to the remote endpoint after this connection manager_has been initialized and the Spring context has been refreshed._<p>Default is "false".;public void setAutoStartup(boolean autoStartup) {_		this.autoStartup = autoStartup__	};set,whether,to,auto,connect,to,the,remote,endpoint,after,this,connection,manager,has,been,initialized,and,the,spring,context,has,been,refreshed,p,default,is,false;public,void,set,auto,startup,boolean,auto,startup,this,auto,startup,auto,startup
ConnectionManagerSupport -> public void setAutoStartup(boolean autoStartup);1462186904;Set whether to auto-connect to the remote endpoint after this connection manager_has been initialized and the Spring context has been refreshed._<p>Default is "false".;public void setAutoStartup(boolean autoStartup) {_		this.autoStartup = autoStartup__	};set,whether,to,auto,connect,to,the,remote,endpoint,after,this,connection,manager,has,been,initialized,and,the,spring,context,has,been,refreshed,p,default,is,false;public,void,set,auto,startup,boolean,auto,startup,this,auto,startup,auto,startup
ConnectionManagerSupport -> public void setAutoStartup(boolean autoStartup);1521123475;Set whether to auto-connect to the remote endpoint after this connection manager_has been initialized and the Spring context has been refreshed._<p>Default is "false".;public void setAutoStartup(boolean autoStartup) {_		this.autoStartup = autoStartup__	};set,whether,to,auto,connect,to,the,remote,endpoint,after,this,connection,manager,has,been,initialized,and,the,spring,context,has,been,refreshed,p,default,is,false;public,void,set,auto,startup,boolean,auto,startup,this,auto,startup,auto,startup
ConnectionManagerSupport -> public void setAutoStartup(boolean autoStartup);1534414082;Set whether to auto-connect to the remote endpoint after this connection manager_has been initialized and the Spring context has been refreshed._<p>Default is "false".;public void setAutoStartup(boolean autoStartup) {_		this.autoStartup = autoStartup__	};set,whether,to,auto,connect,to,the,remote,endpoint,after,this,connection,manager,has,been,initialized,and,the,spring,context,has,been,refreshed,p,default,is,false;public,void,set,auto,startup,boolean,auto,startup,this,auto,startup,auto,startup
ConnectionManagerSupport -> @Override 	public final void start();1368482696;Connect to the configured {@link #setDefaultUri(URI) default URI}. If already_connected, the method has no impact.;@Override_	public final void start() {_		synchronized (this.lifecycleMonitor) {_			if (!isRunning()) {_				startInternal()__			}_		}_	};connect,to,the,configured,link,set,default,uri,uri,default,uri,if,already,connected,the,method,has,no,impact;override,public,final,void,start,synchronized,this,lifecycle,monitor,if,is,running,start,internal
ConnectionManagerSupport -> @Override 	public final void start();1368554355;Connect to the configured {@link #setDefaultUri(URI) default URI}. If already_connected, the method has no impact.;@Override_	public final void start() {_		synchronized (this.lifecycleMonitor) {_			if (!isRunning()) {_				startInternal()__			}_		}_	};connect,to,the,configured,link,set,default,uri,uri,default,uri,if,already,connected,the,method,has,no,impact;override,public,final,void,start,synchronized,this,lifecycle,monitor,if,is,running,start,internal
ConnectionManagerSupport -> @Override 	public final void start();1368564107;Connect to the configured {@link #setDefaultUri(URI) default URI}. If already_connected, the method has no impact.;@Override_	public final void start() {_		synchronized (this.lifecycleMonitor) {_			if (!isRunning()) {_				startInternal()__			}_		}_	};connect,to,the,configured,link,set,default,uri,uri,default,uri,if,already,connected,the,method,has,no,impact;override,public,final,void,start,synchronized,this,lifecycle,monitor,if,is,running,start,internal
ConnectionManagerSupport -> @Override 	public final void start();1372363092;Start the websocket connection. If already connected, the method has no impact.;@Override_	public final void start() {_		synchronized (this.lifecycleMonitor) {_			if (!isRunning()) {_				startInternal()__			}_		}_	};start,the,websocket,connection,if,already,connected,the,method,has,no,impact;override,public,final,void,start,synchronized,this,lifecycle,monitor,if,is,running,start,internal
ConnectionManagerSupport -> @Override 	public final void start();1378484901;Start the websocket connection. If already connected, the method has no impact.;@Override_	public final void start() {_		synchronized (this.lifecycleMonitor) {_			if (!isRunning()) {_				startInternal()__			}_		}_	};start,the,websocket,connection,if,already,connected,the,method,has,no,impact;override,public,final,void,start,synchronized,this,lifecycle,monitor,if,is,running,start,internal
ConnectionManagerSupport -> @Override 	public final void start();1385507478;Start the websocket connection. If already connected, the method has no impact.;@Override_	public final void start() {_		synchronized (this.lifecycleMonitor) {_			if (!isRunning()) {_				startInternal()__			}_		}_	};start,the,websocket,connection,if,already,connected,the,method,has,no,impact;override,public,final,void,start,synchronized,this,lifecycle,monitor,if,is,running,start,internal
ConnectionManagerSupport -> @Override 	public final void start();1404880799;Start the websocket connection. If already connected, the method has no impact.;@Override_	public final void start() {_		synchronized (this.lifecycleMonitor) {_			if (!isRunning()) {_				startInternal()__			}_		}_	};start,the,websocket,connection,if,already,connected,the,method,has,no,impact;override,public,final,void,start,synchronized,this,lifecycle,monitor,if,is,running,start,internal
ConnectionManagerSupport -> @Override 	public final void start();1405011419;Start the websocket connection. If already connected, the method has no impact.;@Override_	public final void start() {_		synchronized (this.lifecycleMonitor) {_			if (!isRunning()) {_				startInternal()__			}_		}_	};start,the,websocket,connection,if,already,connected,the,method,has,no,impact;override,public,final,void,start,synchronized,this,lifecycle,monitor,if,is,running,start,internal
ConnectionManagerSupport -> @Override 	public final void start();1413848647;Start the websocket connection. If already connected, the method has no impact.;@Override_	public final void start() {_		synchronized (this.lifecycleMonitor) {_			if (!isRunning()) {_				startInternal()__			}_		}_	};start,the,websocket,connection,if,already,connected,the,method,has,no,impact;override,public,final,void,start,synchronized,this,lifecycle,monitor,if,is,running,start,internal
ConnectionManagerSupport -> @Override 	public final void start();1462186904;Start the WebSocket connection. If already connected, the method has no impact.;@Override_	public final void start() {_		synchronized (this.lifecycleMonitor) {_			if (!isRunning()) {_				startInternal()__			}_		}_	};start,the,web,socket,connection,if,already,connected,the,method,has,no,impact;override,public,final,void,start,synchronized,this,lifecycle,monitor,if,is,running,start,internal
ConnectionManagerSupport -> @Override 	public final void start();1521123475;Start the WebSocket connection. If already connected, the method has no impact.;@Override_	public final void start() {_		synchronized (this.lifecycleMonitor) {_			if (!isRunning()) {_				startInternal()__			}_		}_	};start,the,web,socket,connection,if,already,connected,the,method,has,no,impact;override,public,final,void,start,synchronized,this,lifecycle,monitor,if,is,running,start,internal
ConnectionManagerSupport -> @Override 	public final void start();1534414082;Start the WebSocket connection. If already connected, the method has no impact.;@Override_	public final void start() {_		synchronized (this.lifecycleMonitor) {_			if (!isRunning()) {_				startInternal()__			}_		}_	};start,the,web,socket,connection,if,already,connected,the,method,has,no,impact;override,public,final,void,start,synchronized,this,lifecycle,monitor,if,is,running,start,internal
ConnectionManagerSupport -> @Override 	public boolean isRunning();1368482696;Return whether this ConnectionManager has been started.;@Override_	public boolean isRunning() {_		synchronized (this.lifecycleMonitor) {_			return this.isRunning__		}_	};return,whether,this,connection,manager,has,been,started;override,public,boolean,is,running,synchronized,this,lifecycle,monitor,return,this,is,running
ConnectionManagerSupport -> @Override 	public boolean isRunning();1368554355;Return whether this ConnectionManager has been started.;@Override_	public boolean isRunning() {_		synchronized (this.lifecycleMonitor) {_			return this.isRunning__		}_	};return,whether,this,connection,manager,has,been,started;override,public,boolean,is,running,synchronized,this,lifecycle,monitor,return,this,is,running
ConnectionManagerSupport -> @Override 	public boolean isRunning();1368564107;Return whether this ConnectionManager has been started.;@Override_	public boolean isRunning() {_		synchronized (this.lifecycleMonitor) {_			return this.isRunning__		}_	};return,whether,this,connection,manager,has,been,started;override,public,boolean,is,running,synchronized,this,lifecycle,monitor,return,this,is,running
ConnectionManagerSupport -> @Override 	public boolean isRunning();1372363092;Return whether this ConnectionManager has been started.;@Override_	public boolean isRunning() {_		synchronized (this.lifecycleMonitor) {_			return this.isRunning__		}_	};return,whether,this,connection,manager,has,been,started;override,public,boolean,is,running,synchronized,this,lifecycle,monitor,return,this,is,running
ConnectionManagerSupport -> @Override 	public boolean isRunning();1378484901;Return whether this ConnectionManager has been started.;@Override_	public boolean isRunning() {_		synchronized (this.lifecycleMonitor) {_			return this.isRunning__		}_	};return,whether,this,connection,manager,has,been,started;override,public,boolean,is,running,synchronized,this,lifecycle,monitor,return,this,is,running
ConnectionManagerSupport -> @Override 	public boolean isRunning();1385507478;Return whether this ConnectionManager has been started.;@Override_	public boolean isRunning() {_		synchronized (this.lifecycleMonitor) {_			return this.isRunning__		}_	};return,whether,this,connection,manager,has,been,started;override,public,boolean,is,running,synchronized,this,lifecycle,monitor,return,this,is,running
ConnectionManagerSupport -> @Override 	public boolean isRunning();1404880799;Return whether this ConnectionManager has been started.;@Override_	public boolean isRunning() {_		synchronized (this.lifecycleMonitor) {_			return this.isRunning__		}_	};return,whether,this,connection,manager,has,been,started;override,public,boolean,is,running,synchronized,this,lifecycle,monitor,return,this,is,running
ConnectionManagerSupport -> @Override 	public boolean isRunning();1405011419;Return whether this ConnectionManager has been started.;@Override_	public boolean isRunning() {_		synchronized (this.lifecycleMonitor) {_			return this.running__		}_	};return,whether,this,connection,manager,has,been,started;override,public,boolean,is,running,synchronized,this,lifecycle,monitor,return,this,running
ConnectionManagerSupport -> @Override 	public boolean isRunning();1413848647;Return whether this ConnectionManager has been started.;@Override_	public boolean isRunning() {_		synchronized (this.lifecycleMonitor) {_			return this.running__		}_	};return,whether,this,connection,manager,has,been,started;override,public,boolean,is,running,synchronized,this,lifecycle,monitor,return,this,running
ConnectionManagerSupport -> @Override 	public boolean isRunning();1462186904;Return whether this ConnectionManager has been started.;@Override_	public boolean isRunning() {_		synchronized (this.lifecycleMonitor) {_			return this.running__		}_	};return,whether,this,connection,manager,has,been,started;override,public,boolean,is,running,synchronized,this,lifecycle,monitor,return,this,running
ConnectionManagerSupport -> @Override 	public boolean isRunning();1521123475;Return whether this ConnectionManager has been started.;@Override_	public boolean isRunning() {_		return this.running__	};return,whether,this,connection,manager,has,been,started;override,public,boolean,is,running,return,this,running
ConnectionManagerSupport -> @Override 	public boolean isRunning();1534414082;Return whether this ConnectionManager has been started.;@Override_	public boolean isRunning() {_		return this.running__	};return,whether,this,connection,manager,has,been,started;override,public,boolean,is,running,return,this,running
ConnectionManagerSupport -> public void setPhase(int phase);1367865989;Specify the phase in which a connection should be established to the remote_endpoint and subsequently closed. The startup order proceeds from lowest to_highest, and the shutdown order is the reverse of that. By default this value is_Integer.MAX_VALUE meaning that this endpoint connection factory connects as late as_possible and is closed as soon as possible.;public void setPhase(int phase) {_		this.phase = phase__	};specify,the,phase,in,which,a,connection,should,be,established,to,the,remote,endpoint,and,subsequently,closed,the,startup,order,proceeds,from,lowest,to,highest,and,the,shutdown,order,is,the,reverse,of,that,by,default,this,value,is,integer,meaning,that,this,endpoint,connection,factory,connects,as,late,as,possible,and,is,closed,as,soon,as,possible;public,void,set,phase,int,phase,this,phase,phase
ConnectionManagerSupport -> public void setPhase(int phase);1368482696;Specify the phase in which a connection should be established to the remote_endpoint and subsequently closed. The startup order proceeds from lowest to_highest, and the shutdown order is the reverse of that. By default this value is_Integer.MAX_VALUE meaning that this endpoint connection factory connects as late as_possible and is closed as soon as possible.;public void setPhase(int phase) {_		this.phase = phase__	};specify,the,phase,in,which,a,connection,should,be,established,to,the,remote,endpoint,and,subsequently,closed,the,startup,order,proceeds,from,lowest,to,highest,and,the,shutdown,order,is,the,reverse,of,that,by,default,this,value,is,integer,meaning,that,this,endpoint,connection,factory,connects,as,late,as,possible,and,is,closed,as,soon,as,possible;public,void,set,phase,int,phase,this,phase,phase
ConnectionManagerSupport -> public void setPhase(int phase);1368554355;Specify the phase in which a connection should be established to the remote_endpoint and subsequently closed. The startup order proceeds from lowest to_highest, and the shutdown order is the reverse of that. By default this value is_Integer.MAX_VALUE meaning that this endpoint connection factory connects as late as_possible and is closed as soon as possible.;public void setPhase(int phase) {_		this.phase = phase__	};specify,the,phase,in,which,a,connection,should,be,established,to,the,remote,endpoint,and,subsequently,closed,the,startup,order,proceeds,from,lowest,to,highest,and,the,shutdown,order,is,the,reverse,of,that,by,default,this,value,is,integer,meaning,that,this,endpoint,connection,factory,connects,as,late,as,possible,and,is,closed,as,soon,as,possible;public,void,set,phase,int,phase,this,phase,phase
ConnectionManagerSupport -> public void setPhase(int phase);1368564107;Specify the phase in which a connection should be established to the remote_endpoint and subsequently closed. The startup order proceeds from lowest to_highest, and the shutdown order is the reverse of that. By default this value is_Integer.MAX_VALUE meaning that this endpoint connection factory connects as late as_possible and is closed as soon as possible.;public void setPhase(int phase) {_		this.phase = phase__	};specify,the,phase,in,which,a,connection,should,be,established,to,the,remote,endpoint,and,subsequently,closed,the,startup,order,proceeds,from,lowest,to,highest,and,the,shutdown,order,is,the,reverse,of,that,by,default,this,value,is,integer,meaning,that,this,endpoint,connection,factory,connects,as,late,as,possible,and,is,closed,as,soon,as,possible;public,void,set,phase,int,phase,this,phase,phase
ConnectionManagerSupport -> public void setPhase(int phase);1372363092;Specify the phase in which a connection should be established to the remote_endpoint and subsequently closed. The startup order proceeds from lowest to_highest, and the shutdown order is the reverse of that. By default this value is_Integer.MAX_VALUE meaning that this endpoint connection factory connects as late as_possible and is closed as soon as possible.;public void setPhase(int phase) {_		this.phase = phase__	};specify,the,phase,in,which,a,connection,should,be,established,to,the,remote,endpoint,and,subsequently,closed,the,startup,order,proceeds,from,lowest,to,highest,and,the,shutdown,order,is,the,reverse,of,that,by,default,this,value,is,integer,meaning,that,this,endpoint,connection,factory,connects,as,late,as,possible,and,is,closed,as,soon,as,possible;public,void,set,phase,int,phase,this,phase,phase
ConnectionManagerSupport -> public void setPhase(int phase);1378484901;Specify the phase in which a connection should be established to the remote_endpoint and subsequently closed. The startup order proceeds from lowest to_highest, and the shutdown order is the reverse of that. By default this value is_Integer.MAX_VALUE meaning that this endpoint connection factory connects as late as_possible and is closed as soon as possible.;public void setPhase(int phase) {_		this.phase = phase__	};specify,the,phase,in,which,a,connection,should,be,established,to,the,remote,endpoint,and,subsequently,closed,the,startup,order,proceeds,from,lowest,to,highest,and,the,shutdown,order,is,the,reverse,of,that,by,default,this,value,is,integer,meaning,that,this,endpoint,connection,factory,connects,as,late,as,possible,and,is,closed,as,soon,as,possible;public,void,set,phase,int,phase,this,phase,phase
ConnectionManagerSupport -> public void setPhase(int phase);1385507478;Specify the phase in which a connection should be established to the remote_endpoint and subsequently closed. The startup order proceeds from lowest to_highest, and the shutdown order is the reverse of that. By default this value is_Integer.MAX_VALUE meaning that this endpoint connection factory connects as late as_possible and is closed as soon as possible.;public void setPhase(int phase) {_		this.phase = phase__	};specify,the,phase,in,which,a,connection,should,be,established,to,the,remote,endpoint,and,subsequently,closed,the,startup,order,proceeds,from,lowest,to,highest,and,the,shutdown,order,is,the,reverse,of,that,by,default,this,value,is,integer,meaning,that,this,endpoint,connection,factory,connects,as,late,as,possible,and,is,closed,as,soon,as,possible;public,void,set,phase,int,phase,this,phase,phase
ConnectionManagerSupport -> public void setPhase(int phase);1404880799;Specify the phase in which a connection should be established to the remote_endpoint and subsequently closed. The startup order proceeds from lowest to_highest, and the shutdown order is the reverse of that. By default this value is_Integer.MAX_VALUE meaning that this endpoint connection factory connects as late as_possible and is closed as soon as possible.;public void setPhase(int phase) {_		this.phase = phase__	};specify,the,phase,in,which,a,connection,should,be,established,to,the,remote,endpoint,and,subsequently,closed,the,startup,order,proceeds,from,lowest,to,highest,and,the,shutdown,order,is,the,reverse,of,that,by,default,this,value,is,integer,meaning,that,this,endpoint,connection,factory,connects,as,late,as,possible,and,is,closed,as,soon,as,possible;public,void,set,phase,int,phase,this,phase,phase
ConnectionManagerSupport -> public void setPhase(int phase);1405011419;Specify the phase in which a connection should be established to the remote_endpoint and subsequently closed. The startup order proceeds from lowest to_highest, and the shutdown order is the reverse of that. By default this value is_Integer.MAX_VALUE meaning that this endpoint connection factory connects as late as_possible and is closed as soon as possible.;public void setPhase(int phase) {_		this.phase = phase__	};specify,the,phase,in,which,a,connection,should,be,established,to,the,remote,endpoint,and,subsequently,closed,the,startup,order,proceeds,from,lowest,to,highest,and,the,shutdown,order,is,the,reverse,of,that,by,default,this,value,is,integer,meaning,that,this,endpoint,connection,factory,connects,as,late,as,possible,and,is,closed,as,soon,as,possible;public,void,set,phase,int,phase,this,phase,phase
ConnectionManagerSupport -> public void setPhase(int phase);1413848647;Specify the phase in which a connection should be established to the remote_endpoint and subsequently closed. The startup order proceeds from lowest to_highest, and the shutdown order is the reverse of that. By default this value is_Integer.MAX_VALUE meaning that this endpoint connection factory connects as late as_possible and is closed as soon as possible.;public void setPhase(int phase) {_		this.phase = phase__	};specify,the,phase,in,which,a,connection,should,be,established,to,the,remote,endpoint,and,subsequently,closed,the,startup,order,proceeds,from,lowest,to,highest,and,the,shutdown,order,is,the,reverse,of,that,by,default,this,value,is,integer,meaning,that,this,endpoint,connection,factory,connects,as,late,as,possible,and,is,closed,as,soon,as,possible;public,void,set,phase,int,phase,this,phase,phase
ConnectionManagerSupport -> public void setPhase(int phase);1462186904;Specify the phase in which a connection should be established to the remote_endpoint and subsequently closed. The startup order proceeds from lowest to_highest, and the shutdown order is the reverse of that. By default this value is_Integer.MAX_VALUE meaning that this endpoint connection factory connects as late as_possible and is closed as soon as possible.;public void setPhase(int phase) {_		this.phase = phase__	};specify,the,phase,in,which,a,connection,should,be,established,to,the,remote,endpoint,and,subsequently,closed,the,startup,order,proceeds,from,lowest,to,highest,and,the,shutdown,order,is,the,reverse,of,that,by,default,this,value,is,integer,meaning,that,this,endpoint,connection,factory,connects,as,late,as,possible,and,is,closed,as,soon,as,possible;public,void,set,phase,int,phase,this,phase,phase
ConnectionManagerSupport -> public void setPhase(int phase);1521123475;Specify the phase in which a connection should be established to the remote_endpoint and subsequently closed. The startup order proceeds from lowest to_highest, and the shutdown order is the reverse of that. By default this value is_Integer.MAX_VALUE meaning that this endpoint connection factory connects as late as_possible and is closed as soon as possible.;public void setPhase(int phase) {_		this.phase = phase__	};specify,the,phase,in,which,a,connection,should,be,established,to,the,remote,endpoint,and,subsequently,closed,the,startup,order,proceeds,from,lowest,to,highest,and,the,shutdown,order,is,the,reverse,of,that,by,default,this,value,is,integer,meaning,that,this,endpoint,connection,factory,connects,as,late,as,possible,and,is,closed,as,soon,as,possible;public,void,set,phase,int,phase,this,phase,phase
ConnectionManagerSupport -> public void setPhase(int phase);1534414082;Specify the phase in which a connection should be established to the remote_endpoint and subsequently closed. The startup order proceeds from lowest to_highest, and the shutdown order is the reverse of that. By default this value is_Integer.MAX_VALUE meaning that this endpoint connection factory connects as late as_possible and is closed as soon as possible.;public void setPhase(int phase) {_		this.phase = phase__	};specify,the,phase,in,which,a,connection,should,be,established,to,the,remote,endpoint,and,subsequently,closed,the,startup,order,proceeds,from,lowest,to,highest,and,the,shutdown,order,is,the,reverse,of,that,by,default,this,value,is,integer,meaning,that,this,endpoint,connection,factory,connects,as,late,as,possible,and,is,closed,as,soon,as,possible;public,void,set,phase,int,phase,this,phase,phase
