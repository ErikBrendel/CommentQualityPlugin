# id;timestamp;commentText;codeText;commentWords;codeWords
HandshakeInterceptor -> boolean beforeHandshake(ServerHttpRequest request, ServerHttpResponse response, 			WebSocketHandler wsHandler, Map<String, Object> attributes) throws Exception_;1376429281;Invoked before the handshake is processed.__@param request the current request_@param response the current response_@param wsHandler the target WebSocket handler_@param attributes attributes to make available via_{@link WebSocketSession#getHandshakeAttributes()}__@return whether to proceed with the handshake {@code true} or abort {@code false};boolean beforeHandshake(ServerHttpRequest request, ServerHttpResponse response,_			WebSocketHandler wsHandler, Map<String, Object> attributes) throws Exception_;invoked,before,the,handshake,is,processed,param,request,the,current,request,param,response,the,current,response,param,ws,handler,the,target,web,socket,handler,param,attributes,attributes,to,make,available,via,link,web,socket,session,get,handshake,attributes,return,whether,to,proceed,with,the,handshake,code,true,or,abort,code,false;boolean,before,handshake,server,http,request,request,server,http,response,response,web,socket,handler,ws,handler,map,string,object,attributes,throws,exception
HandshakeInterceptor -> boolean beforeHandshake(ServerHttpRequest request, ServerHttpResponse response, 			WebSocketHandler wsHandler, Map<String, Object> attributes) throws Exception_;1385507478;Invoked before the handshake is processed._@param request the current request_@param response the current response_@param wsHandler the target WebSocket handler_@param attributes attributes to make available via_{@link WebSocketSession#getHandshakeAttributes()}_@return whether to proceed with the handshake {@code true} or abort {@code false};boolean beforeHandshake(ServerHttpRequest request, ServerHttpResponse response,_			WebSocketHandler wsHandler, Map<String, Object> attributes) throws Exception_;invoked,before,the,handshake,is,processed,param,request,the,current,request,param,response,the,current,response,param,ws,handler,the,target,web,socket,handler,param,attributes,attributes,to,make,available,via,link,web,socket,session,get,handshake,attributes,return,whether,to,proceed,with,the,handshake,code,true,or,abort,code,false;boolean,before,handshake,server,http,request,request,server,http,response,response,web,socket,handler,ws,handler,map,string,object,attributes,throws,exception
HandshakeInterceptor -> boolean beforeHandshake(ServerHttpRequest request, ServerHttpResponse response, 			WebSocketHandler wsHandler, Map<String, Object> attributes) throws Exception_;1386462352;Invoked before the handshake is processed._@param request the current request_@param response the current response_@param wsHandler the target WebSocket handler_@param attributes attributes to make available via_{@link WebSocketSession#getHandshakeAttributes()}_@return whether to proceed with the handshake {@code true} or abort {@code false};boolean beforeHandshake(ServerHttpRequest request, ServerHttpResponse response,_			WebSocketHandler wsHandler, Map<String, Object> attributes) throws Exception_;invoked,before,the,handshake,is,processed,param,request,the,current,request,param,response,the,current,response,param,ws,handler,the,target,web,socket,handler,param,attributes,attributes,to,make,available,via,link,web,socket,session,get,handshake,attributes,return,whether,to,proceed,with,the,handshake,code,true,or,abort,code,false;boolean,before,handshake,server,http,request,request,server,http,response,response,web,socket,handler,ws,handler,map,string,object,attributes,throws,exception
HandshakeInterceptor -> boolean beforeHandshake(ServerHttpRequest request, ServerHttpResponse response, 			WebSocketHandler wsHandler, Map<String, Object> attributes) throws Exception_;1395246308;Invoked before the handshake is processed._@param request the current request_@param response the current response_@param wsHandler the target WebSocket handler_@param attributes attributes from the HTTP handshake to associate with the_WebSocket session, i.e. via {@link WebSocketSession#getAttributes()}_@return whether to proceed with the handshake {@code true} or abort {@code false};boolean beforeHandshake(ServerHttpRequest request, ServerHttpResponse response,_			WebSocketHandler wsHandler, Map<String, Object> attributes) throws Exception_;invoked,before,the,handshake,is,processed,param,request,the,current,request,param,response,the,current,response,param,ws,handler,the,target,web,socket,handler,param,attributes,attributes,from,the,http,handshake,to,associate,with,the,web,socket,session,i,e,via,link,web,socket,session,get,attributes,return,whether,to,proceed,with,the,handshake,code,true,or,abort,code,false;boolean,before,handshake,server,http,request,request,server,http,response,response,web,socket,handler,ws,handler,map,string,object,attributes,throws,exception
HandshakeInterceptor -> boolean beforeHandshake(ServerHttpRequest request, ServerHttpResponse response, 			WebSocketHandler wsHandler, Map<String, Object> attributes) throws Exception_;1395251140;Invoked before the handshake is processed._@param request the current request_@param response the current response_@param wsHandler the target WebSocket handler_@param attributes attributes from the HTTP handshake to associate with the WebSocket_session_ the provided attributes are copied, the original map is not used._@return whether to proceed with the handshake {@code true} or abort {@code false};boolean beforeHandshake(ServerHttpRequest request, ServerHttpResponse response,_			WebSocketHandler wsHandler, Map<String, Object> attributes) throws Exception_;invoked,before,the,handshake,is,processed,param,request,the,current,request,param,response,the,current,response,param,ws,handler,the,target,web,socket,handler,param,attributes,attributes,from,the,http,handshake,to,associate,with,the,web,socket,session,the,provided,attributes,are,copied,the,original,map,is,not,used,return,whether,to,proceed,with,the,handshake,code,true,or,abort,code,false;boolean,before,handshake,server,http,request,request,server,http,response,response,web,socket,handler,ws,handler,map,string,object,attributes,throws,exception
HandshakeInterceptor -> boolean beforeHandshake(ServerHttpRequest request, ServerHttpResponse response, 			WebSocketHandler wsHandler, Map<String, Object> attributes) throws Exception_;1398144543;Invoked before the handshake is processed._@param request the current request_@param response the current response_@param wsHandler the target WebSocket handler_@param attributes attributes from the HTTP handshake to associate with the WebSocket_session_ the provided attributes are copied, the original map is not used._@return whether to proceed with the handshake {@code true} or abort {@code false};boolean beforeHandshake(ServerHttpRequest request, ServerHttpResponse response,_			WebSocketHandler wsHandler, Map<String, Object> attributes) throws Exception_;invoked,before,the,handshake,is,processed,param,request,the,current,request,param,response,the,current,response,param,ws,handler,the,target,web,socket,handler,param,attributes,attributes,from,the,http,handshake,to,associate,with,the,web,socket,session,the,provided,attributes,are,copied,the,original,map,is,not,used,return,whether,to,proceed,with,the,handshake,code,true,or,abort,code,false;boolean,before,handshake,server,http,request,request,server,http,response,response,web,socket,handler,ws,handler,map,string,object,attributes,throws,exception
HandshakeInterceptor -> boolean beforeHandshake(ServerHttpRequest request, ServerHttpResponse response, 			WebSocketHandler wsHandler, Map<String, Object> attributes) throws Exception_;1413840766;Invoked before the handshake is processed._@param request the current request_@param response the current response_@param wsHandler the target WebSocket handler_@param attributes attributes from the HTTP handshake to associate with the WebSocket_session_ the provided attributes are copied, the original map is not used._@return whether to proceed with the handshake ({@code true}) or abort ({@code false});boolean beforeHandshake(ServerHttpRequest request, ServerHttpResponse response,_			WebSocketHandler wsHandler, Map<String, Object> attributes) throws Exception_;invoked,before,the,handshake,is,processed,param,request,the,current,request,param,response,the,current,response,param,ws,handler,the,target,web,socket,handler,param,attributes,attributes,from,the,http,handshake,to,associate,with,the,web,socket,session,the,provided,attributes,are,copied,the,original,map,is,not,used,return,whether,to,proceed,with,the,handshake,code,true,or,abort,code,false;boolean,before,handshake,server,http,request,request,server,http,response,response,web,socket,handler,ws,handler,map,string,object,attributes,throws,exception
HandshakeInterceptor -> boolean beforeHandshake(ServerHttpRequest request, ServerHttpResponse response, 			WebSocketHandler wsHandler, Map<String, Object> attributes) throws Exception_;1496837955;Invoked before the handshake is processed._@param request the current request_@param response the current response_@param wsHandler the target WebSocket handler_@param attributes attributes from the HTTP handshake to associate with the WebSocket_session_ the provided attributes are copied, the original map is not used._@return whether to proceed with the handshake ({@code true}) or abort ({@code false});boolean beforeHandshake(ServerHttpRequest request, ServerHttpResponse response,_			WebSocketHandler wsHandler, Map<String, Object> attributes) throws Exception_;invoked,before,the,handshake,is,processed,param,request,the,current,request,param,response,the,current,response,param,ws,handler,the,target,web,socket,handler,param,attributes,attributes,from,the,http,handshake,to,associate,with,the,web,socket,session,the,provided,attributes,are,copied,the,original,map,is,not,used,return,whether,to,proceed,with,the,handshake,code,true,or,abort,code,false;boolean,before,handshake,server,http,request,request,server,http,response,response,web,socket,handler,ws,handler,map,string,object,attributes,throws,exception
HandshakeInterceptor -> void afterHandshake(ServerHttpRequest request, ServerHttpResponse response, 			WebSocketHandler wsHandler, Exception exception)_;1376429281;Invoked after the handshake is done. The response status and headers indicate the_results of the handshake, i.e. whether it was successful or not.__@param request the current request_@param response the current response_@param wsHandler the target WebSocket handler_@param exception an exception raised during the handshake, or {@code null};void afterHandshake(ServerHttpRequest request, ServerHttpResponse response,_			WebSocketHandler wsHandler, Exception exception)_;invoked,after,the,handshake,is,done,the,response,status,and,headers,indicate,the,results,of,the,handshake,i,e,whether,it,was,successful,or,not,param,request,the,current,request,param,response,the,current,response,param,ws,handler,the,target,web,socket,handler,param,exception,an,exception,raised,during,the,handshake,or,code,null;void,after,handshake,server,http,request,request,server,http,response,response,web,socket,handler,ws,handler,exception,exception
HandshakeInterceptor -> void afterHandshake(ServerHttpRequest request, ServerHttpResponse response, 			WebSocketHandler wsHandler, Exception exception)_;1385507478;Invoked after the handshake is done. The response status and headers indicate the_results of the handshake, i.e. whether it was successful or not._@param request the current request_@param response the current response_@param wsHandler the target WebSocket handler_@param exception an exception raised during the handshake, or {@code null};void afterHandshake(ServerHttpRequest request, ServerHttpResponse response,_			WebSocketHandler wsHandler, Exception exception)_;invoked,after,the,handshake,is,done,the,response,status,and,headers,indicate,the,results,of,the,handshake,i,e,whether,it,was,successful,or,not,param,request,the,current,request,param,response,the,current,response,param,ws,handler,the,target,web,socket,handler,param,exception,an,exception,raised,during,the,handshake,or,code,null;void,after,handshake,server,http,request,request,server,http,response,response,web,socket,handler,ws,handler,exception,exception
HandshakeInterceptor -> void afterHandshake(ServerHttpRequest request, ServerHttpResponse response, 			WebSocketHandler wsHandler, Exception exception)_;1386462352;Invoked after the handshake is done. The response status and headers indicate the_results of the handshake, i.e. whether it was successful or not._@param request the current request_@param response the current response_@param wsHandler the target WebSocket handler_@param exception an exception raised during the handshake, or {@code null};void afterHandshake(ServerHttpRequest request, ServerHttpResponse response,_			WebSocketHandler wsHandler, Exception exception)_;invoked,after,the,handshake,is,done,the,response,status,and,headers,indicate,the,results,of,the,handshake,i,e,whether,it,was,successful,or,not,param,request,the,current,request,param,response,the,current,response,param,ws,handler,the,target,web,socket,handler,param,exception,an,exception,raised,during,the,handshake,or,code,null;void,after,handshake,server,http,request,request,server,http,response,response,web,socket,handler,ws,handler,exception,exception
HandshakeInterceptor -> void afterHandshake(ServerHttpRequest request, ServerHttpResponse response, 			WebSocketHandler wsHandler, Exception exception)_;1395246308;Invoked after the handshake is done. The response status and headers indicate the_results of the handshake, i.e. whether it was successful or not._@param request the current request_@param response the current response_@param wsHandler the target WebSocket handler_@param exception an exception raised during the handshake, or {@code null};void afterHandshake(ServerHttpRequest request, ServerHttpResponse response,_			WebSocketHandler wsHandler, Exception exception)_;invoked,after,the,handshake,is,done,the,response,status,and,headers,indicate,the,results,of,the,handshake,i,e,whether,it,was,successful,or,not,param,request,the,current,request,param,response,the,current,response,param,ws,handler,the,target,web,socket,handler,param,exception,an,exception,raised,during,the,handshake,or,code,null;void,after,handshake,server,http,request,request,server,http,response,response,web,socket,handler,ws,handler,exception,exception
HandshakeInterceptor -> void afterHandshake(ServerHttpRequest request, ServerHttpResponse response, 			WebSocketHandler wsHandler, Exception exception)_;1395251140;Invoked after the handshake is done. The response status and headers indicate the_results of the handshake, i.e. whether it was successful or not._@param request the current request_@param response the current response_@param wsHandler the target WebSocket handler_@param exception an exception raised during the handshake, or {@code null};void afterHandshake(ServerHttpRequest request, ServerHttpResponse response,_			WebSocketHandler wsHandler, Exception exception)_;invoked,after,the,handshake,is,done,the,response,status,and,headers,indicate,the,results,of,the,handshake,i,e,whether,it,was,successful,or,not,param,request,the,current,request,param,response,the,current,response,param,ws,handler,the,target,web,socket,handler,param,exception,an,exception,raised,during,the,handshake,or,code,null;void,after,handshake,server,http,request,request,server,http,response,response,web,socket,handler,ws,handler,exception,exception
HandshakeInterceptor -> void afterHandshake(ServerHttpRequest request, ServerHttpResponse response, 			WebSocketHandler wsHandler, Exception exception)_;1398144543;Invoked after the handshake is done. The response status and headers indicate the_results of the handshake, i.e. whether it was successful or not._@param request the current request_@param response the current response_@param wsHandler the target WebSocket handler_@param exception an exception raised during the handshake, or {@code null};void afterHandshake(ServerHttpRequest request, ServerHttpResponse response,_			WebSocketHandler wsHandler, Exception exception)_;invoked,after,the,handshake,is,done,the,response,status,and,headers,indicate,the,results,of,the,handshake,i,e,whether,it,was,successful,or,not,param,request,the,current,request,param,response,the,current,response,param,ws,handler,the,target,web,socket,handler,param,exception,an,exception,raised,during,the,handshake,or,code,null;void,after,handshake,server,http,request,request,server,http,response,response,web,socket,handler,ws,handler,exception,exception
HandshakeInterceptor -> void afterHandshake(ServerHttpRequest request, ServerHttpResponse response, 			WebSocketHandler wsHandler, Exception exception)_;1413840766;Invoked after the handshake is done. The response status and headers indicate_the results of the handshake, i.e. whether it was successful or not._@param request the current request_@param response the current response_@param wsHandler the target WebSocket handler_@param exception an exception raised during the handshake, or {@code null} if none;void afterHandshake(ServerHttpRequest request, ServerHttpResponse response,_			WebSocketHandler wsHandler, Exception exception)_;invoked,after,the,handshake,is,done,the,response,status,and,headers,indicate,the,results,of,the,handshake,i,e,whether,it,was,successful,or,not,param,request,the,current,request,param,response,the,current,response,param,ws,handler,the,target,web,socket,handler,param,exception,an,exception,raised,during,the,handshake,or,code,null,if,none;void,after,handshake,server,http,request,request,server,http,response,response,web,socket,handler,ws,handler,exception,exception
