# id;timestamp;commentText;codeText;commentWords;codeWords
AbstractClientSockJsSession -> Runnable getTimeoutTask();1403719829;Return a timeout cleanup task to invoke if the SockJS sessions is not_fully established within the retransmission timeout period calculated in_{@code SockJsRequest} based on the duration of the initial SockJS "Info"_request.;Runnable getTimeoutTask() {_		return new Runnable() {_			@Override_			public void run() {_				closeInternal(new CloseStatus(2007, "Transport timed out"))__			}_		}__	};return,a,timeout,cleanup,task,to,invoke,if,the,sock,js,sessions,is,not,fully,established,within,the,retransmission,timeout,period,calculated,in,code,sock,js,request,based,on,the,duration,of,the,initial,sock,js,info,request;runnable,get,timeout,task,return,new,runnable,override,public,void,run,close,internal,new,close,status,2007,transport,timed,out
AbstractClientSockJsSession -> Runnable getTimeoutTask();1403856366;Return a timeout cleanup task to invoke if the SockJS sessions is not_fully established within the retransmission timeout period calculated in_{@code SockJsRequest} based on the duration of the initial SockJS "Info"_request.;Runnable getTimeoutTask() {_		return new Runnable() {_			@Override_			public void run() {_				closeInternal(new CloseStatus(2007, "Transport timed out"))__			}_		}__	};return,a,timeout,cleanup,task,to,invoke,if,the,sock,js,sessions,is,not,fully,established,within,the,retransmission,timeout,period,calculated,in,code,sock,js,request,based,on,the,duration,of,the,initial,sock,js,info,request;runnable,get,timeout,task,return,new,runnable,override,public,void,run,close,internal,new,close,status,2007,transport,timed,out
AbstractClientSockJsSession -> Runnable getTimeoutTask();1404880799;Return a timeout cleanup task to invoke if the SockJS sessions is not_fully established within the retransmission timeout period calculated in_{@code SockJsRequest} based on the duration of the initial SockJS "Info"_request.;Runnable getTimeoutTask() {_		return new Runnable() {_			@Override_			public void run() {_				closeInternal(new CloseStatus(2007, "Transport timed out"))__			}_		}__	};return,a,timeout,cleanup,task,to,invoke,if,the,sock,js,sessions,is,not,fully,established,within,the,retransmission,timeout,period,calculated,in,code,sock,js,request,based,on,the,duration,of,the,initial,sock,js,info,request;runnable,get,timeout,task,return,new,runnable,override,public,void,run,close,internal,new,close,status,2007,transport,timed,out
AbstractClientSockJsSession -> Runnable getTimeoutTask();1413848647;Return a timeout cleanup task to invoke if the SockJS sessions is not_fully established within the retransmission timeout period calculated in_{@code SockJsRequest} based on the duration of the initial SockJS "Info"_request.;Runnable getTimeoutTask() {_		return new Runnable() {_			@Override_			public void run() {_				closeInternal(new CloseStatus(2007, "Transport timed out"))__			}_		}__	};return,a,timeout,cleanup,task,to,invoke,if,the,sock,js,sessions,is,not,fully,established,within,the,retransmission,timeout,period,calculated,in,code,sock,js,request,based,on,the,duration,of,the,initial,sock,js,info,request;runnable,get,timeout,task,return,new,runnable,override,public,void,run,close,internal,new,close,status,2007,transport,timed,out
AbstractClientSockJsSession -> Runnable getTimeoutTask();1467730834;Return a timeout cleanup task to invoke if the SockJS sessions is not_fully established within the retransmission timeout period calculated in_{@code SockJsRequest} based on the duration of the initial SockJS "Info"_request.;Runnable getTimeoutTask() {_		return new Runnable() {_			@Override_			public void run() {_				closeInternal(new CloseStatus(2007, "Transport timed out"))__			}_		}__	};return,a,timeout,cleanup,task,to,invoke,if,the,sock,js,sessions,is,not,fully,established,within,the,retransmission,timeout,period,calculated,in,code,sock,js,request,based,on,the,duration,of,the,initial,sock,js,info,request;runnable,get,timeout,task,return,new,runnable,override,public,void,run,close,internal,new,close,status,2007,transport,timed,out
AbstractClientSockJsSession -> Runnable getTimeoutTask();1485203320;Return a timeout cleanup task to invoke if the SockJS sessions is not_fully established within the retransmission timeout period calculated in_{@code SockJsRequest} based on the duration of the initial SockJS "Info"_request.;Runnable getTimeoutTask() {_		return new Runnable() {_			@Override_			public void run() {_				closeInternal(new CloseStatus(2007, "Transport timed out"))__			}_		}__	};return,a,timeout,cleanup,task,to,invoke,if,the,sock,js,sessions,is,not,fully,established,within,the,retransmission,timeout,period,calculated,in,code,sock,js,request,based,on,the,duration,of,the,initial,sock,js,info,request;runnable,get,timeout,task,return,new,runnable,override,public,void,run,close,internal,new,close,status,2007,transport,timed,out
AbstractClientSockJsSession -> Runnable getTimeoutTask();1496259743;Return a timeout cleanup task to invoke if the SockJS sessions is not_fully established within the retransmission timeout period calculated in_{@code SockJsRequest} based on the duration of the initial SockJS "Info"_request.;Runnable getTimeoutTask() {_		return new Runnable() {_			@Override_			public void run() {_				closeInternal(new CloseStatus(2007, "Transport timed out"))__			}_		}__	};return,a,timeout,cleanup,task,to,invoke,if,the,sock,js,sessions,is,not,fully,established,within,the,retransmission,timeout,period,calculated,in,code,sock,js,request,based,on,the,duration,of,the,initial,sock,js,info,request;runnable,get,timeout,task,return,new,runnable,override,public,void,run,close,internal,new,close,status,2007,transport,timed,out
AbstractClientSockJsSession -> Runnable getTimeoutTask();1496837955;Return a timeout cleanup task to invoke if the SockJS sessions is not_fully established within the retransmission timeout period calculated in_{@code SockJsRequest} based on the duration of the initial SockJS "Info"_request.;Runnable getTimeoutTask() {_		return new Runnable() {_			@Override_			public void run() {_				closeInternal(new CloseStatus(2007, "Transport timed out"))__			}_		}__	};return,a,timeout,cleanup,task,to,invoke,if,the,sock,js,sessions,is,not,fully,established,within,the,retransmission,timeout,period,calculated,in,code,sock,js,request,based,on,the,duration,of,the,initial,sock,js,info,request;runnable,get,timeout,task,return,new,runnable,override,public,void,run,close,internal,new,close,status,2007,transport,timed,out
AbstractClientSockJsSession -> Runnable getTimeoutTask();1497341397;Return a timeout cleanup task to invoke if the SockJS sessions is not_fully established within the retransmission timeout period calculated in_{@code SockJsRequest} based on the duration of the initial SockJS "Info"_request.;Runnable getTimeoutTask() {_		return () -> closeInternal(new CloseStatus(2007, "Transport timed out"))__	};return,a,timeout,cleanup,task,to,invoke,if,the,sock,js,sessions,is,not,fully,established,within,the,retransmission,timeout,period,calculated,in,code,sock,js,request,based,on,the,duration,of,the,initial,sock,js,info,request;runnable,get,timeout,task,return,close,internal,new,close,status,2007,transport,timed,out
AbstractClientSockJsSession -> Runnable getTimeoutTask();1498780456;Return a timeout cleanup task to invoke if the SockJS sessions is not_fully established within the retransmission timeout period calculated in_{@code SockJsRequest} based on the duration of the initial SockJS "Info"_request.;Runnable getTimeoutTask() {_		return () -> closeInternal(new CloseStatus(2007, "Transport timed out"))__	};return,a,timeout,cleanup,task,to,invoke,if,the,sock,js,sessions,is,not,fully,established,within,the,retransmission,timeout,period,calculated,in,code,sock,js,request,based,on,the,duration,of,the,initial,sock,js,info,request;runnable,get,timeout,task,return,close,internal,new,close,status,2007,transport,timed,out
AbstractClientSockJsSession -> Runnable getTimeoutTask();1516879486;Return a timeout cleanup task to invoke if the SockJS sessions is not_fully established within the retransmission timeout period calculated in_{@code SockJsRequest} based on the duration of the initial SockJS "Info"_request.;Runnable getTimeoutTask() {_		return new Runnable() {_			@Override_			public void run() {_				try {_					closeInternal(new CloseStatus(2007, "Transport timed out"))__				}_				catch (Throwable ex) {_					if (logger.isWarnEnabled()) {_						logger.warn("Failed to close " + this + " after transport timeout", ex)__					}_				}_			}_		}__	};return,a,timeout,cleanup,task,to,invoke,if,the,sock,js,sessions,is,not,fully,established,within,the,retransmission,timeout,period,calculated,in,code,sock,js,request,based,on,the,duration,of,the,initial,sock,js,info,request;runnable,get,timeout,task,return,new,runnable,override,public,void,run,try,close,internal,new,close,status,2007,transport,timed,out,catch,throwable,ex,if,logger,is,warn,enabled,logger,warn,failed,to,close,this,after,transport,timeout,ex
