commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;4;;@Override protected MultiValueMap<HttpRequestHandler, String> createMappings() {     return new LinkedMultiValueMap<>(). }
false;protected;4;7;;@Override protected void addSockJsServiceMapping(MultiValueMap<HttpRequestHandler, String> mappings, SockJsService sockJsService, WebSocketHandler handler, String pathPattern) {     SockJsHttpRequestHandler httpHandler = new SockJsHttpRequestHandler(sockJsService, handler).     mappings.add(httpHandler, pathPattern). }
false;protected;5;13;;@Override protected void addWebSocketHandlerMapping(MultiValueMap<HttpRequestHandler, String> mappings, WebSocketHandler webSocketHandler, HandshakeHandler handshakeHandler, HandshakeInterceptor[] interceptors, String path) {     WebSocketHttpRequestHandler httpHandler = new WebSocketHttpRequestHandler(webSocketHandler, handshakeHandler).     if (!ObjectUtils.isEmpty(interceptors)) {         httpHandler.setHandshakeInterceptors(Arrays.asList(interceptors)).     }     mappings.add(httpHandler, path). }
