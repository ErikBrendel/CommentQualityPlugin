commented;modifiers;parameterAmount;loc;comment;code
false;public;1;3;;@Override public void afterConnectionEstablished(WebSocketSession session) throws Exception { }
false;public;2;15;;@Override public void handleMessage(WebSocketSession session, WebSocketMessage<?> message) throws Exception {     if (message instanceof TextMessage) {         handleTextMessage(session, (TextMessage) message).     } else if (message instanceof BinaryMessage) {         handleBinaryMessage(session, (BinaryMessage) message).     } else if (message instanceof PongMessage) {         handlePongMessage(session, (PongMessage) message).     } else {         throw new IllegalStateException("Unexpected WebSocket message type: " + message).     } }
false;protected;2;2;;protected void handleTextMessage(WebSocketSession session, TextMessage message) throws Exception { }
false;protected;2;2;;protected void handleBinaryMessage(WebSocketSession session, BinaryMessage message) throws Exception { }
false;protected;2;2;;protected void handlePongMessage(WebSocketSession session, PongMessage message) throws Exception { }
false;public;2;3;;@Override public void handleTransportError(WebSocketSession session, Throwable exception) throws Exception { }
false;public;2;3;;@Override public void afterConnectionClosed(WebSocketSession session, CloseStatus status) throws Exception { }
false;public;0;4;;@Override public boolean supportsPartialMessages() {     return false. }
