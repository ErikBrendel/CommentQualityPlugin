# id;timestamp;commentText;codeText;commentWords;codeWords
WebSocketMessageBrokerConfigurer -> void configureClientInboundChannel(ChannelRegistration registration)_;1386024878;Configure the {@link org.springframework.messaging.MessageChannel} used for_incoming messages from WebSocket clients. By default the channel is backed_by a thread pool of size 1. It is recommended to customize thread pool_settings for production use.;void configureClientInboundChannel(ChannelRegistration registration)_;configure,the,link,org,springframework,messaging,message,channel,used,for,incoming,messages,from,web,socket,clients,by,default,the,channel,is,backed,by,a,thread,pool,of,size,1,it,is,recommended,to,customize,thread,pool,settings,for,production,use;void,configure,client,inbound,channel,channel,registration,registration
WebSocketMessageBrokerConfigurer -> void configureClientInboundChannel(ChannelRegistration registration)_;1389129389;Configure the {@link org.springframework.messaging.MessageChannel} used for_incoming messages from WebSocket clients. By default the channel is backed_by a thread pool of size 1. It is recommended to customize thread pool_settings for production use.;void configureClientInboundChannel(ChannelRegistration registration)_;configure,the,link,org,springframework,messaging,message,channel,used,for,incoming,messages,from,web,socket,clients,by,default,the,channel,is,backed,by,a,thread,pool,of,size,1,it,is,recommended,to,customize,thread,pool,settings,for,production,use;void,configure,client,inbound,channel,channel,registration,registration
WebSocketMessageBrokerConfigurer -> void configureClientInboundChannel(ChannelRegistration registration)_;1395703238;Configure the {@link org.springframework.messaging.MessageChannel} used for_incoming messages from WebSocket clients. By default the channel is backed_by a thread pool of size 1. It is recommended to customize thread pool_settings for production use.;void configureClientInboundChannel(ChannelRegistration registration)_;configure,the,link,org,springframework,messaging,message,channel,used,for,incoming,messages,from,web,socket,clients,by,default,the,channel,is,backed,by,a,thread,pool,of,size,1,it,is,recommended,to,customize,thread,pool,settings,for,production,use;void,configure,client,inbound,channel,channel,registration,registration
WebSocketMessageBrokerConfigurer -> void configureClientInboundChannel(ChannelRegistration registration)_;1404149274;Configure the {@link org.springframework.messaging.MessageChannel} used for_incoming messages from WebSocket clients. By default the channel is backed_by a thread pool of size 1. It is recommended to customize thread pool_settings for production use.;void configureClientInboundChannel(ChannelRegistration registration)_;configure,the,link,org,springframework,messaging,message,channel,used,for,incoming,messages,from,web,socket,clients,by,default,the,channel,is,backed,by,a,thread,pool,of,size,1,it,is,recommended,to,customize,thread,pool,settings,for,production,use;void,configure,client,inbound,channel,channel,registration,registration
WebSocketMessageBrokerConfigurer -> void configureClientInboundChannel(ChannelRegistration registration)_;1411159659;Configure the {@link org.springframework.messaging.MessageChannel} used for_incoming messages from WebSocket clients. By default the channel is backed_by a thread pool of size 1. It is recommended to customize thread pool_settings for production use.;void configureClientInboundChannel(ChannelRegistration registration)_;configure,the,link,org,springframework,messaging,message,channel,used,for,incoming,messages,from,web,socket,clients,by,default,the,channel,is,backed,by,a,thread,pool,of,size,1,it,is,recommended,to,customize,thread,pool,settings,for,production,use;void,configure,client,inbound,channel,channel,registration,registration
WebSocketMessageBrokerConfigurer -> void configureClientInboundChannel(ChannelRegistration registration)_;1412118625;Configure the {@link org.springframework.messaging.MessageChannel} used for_incoming messages from WebSocket clients. By default the channel is backed_by a thread pool of size 1. It is recommended to customize thread pool_settings for production use.;void configureClientInboundChannel(ChannelRegistration registration)_;configure,the,link,org,springframework,messaging,message,channel,used,for,incoming,messages,from,web,socket,clients,by,default,the,channel,is,backed,by,a,thread,pool,of,size,1,it,is,recommended,to,customize,thread,pool,settings,for,production,use;void,configure,client,inbound,channel,channel,registration,registration
WebSocketMessageBrokerConfigurer -> void addArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers)_;1411159659;Add resolvers to support custom controller method argument types._<p>This does not override the built-in support for resolving handler_method arguments. To customize the built-in support for argument_resolution, configure {@code SimpAnnotationMethodMessageHandler} directly._@param argumentResolvers initially an empty list_@since 4.1.1;void addArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers)_;add,resolvers,to,support,custom,controller,method,argument,types,p,this,does,not,override,the,built,in,support,for,resolving,handler,method,arguments,to,customize,the,built,in,support,for,argument,resolution,configure,code,simp,annotation,method,message,handler,directly,param,argument,resolvers,initially,an,empty,list,since,4,1,1;void,add,argument,resolvers,list,handler,method,argument,resolver,argument,resolvers
WebSocketMessageBrokerConfigurer -> void addArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers)_;1412118625;Add resolvers to support custom controller method argument types._<p>This does not override the built-in support for resolving handler_method arguments. To customize the built-in support for argument_resolution, configure {@code SimpAnnotationMethodMessageHandler} directly._@param argumentResolvers the resolvers to register (initially an empty list)_@since 4.1.1;void addArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers)_;add,resolvers,to,support,custom,controller,method,argument,types,p,this,does,not,override,the,built,in,support,for,resolving,handler,method,arguments,to,customize,the,built,in,support,for,argument,resolution,configure,code,simp,annotation,method,message,handler,directly,param,argument,resolvers,the,resolvers,to,register,initially,an,empty,list,since,4,1,1;void,add,argument,resolvers,list,handler,method,argument,resolver,argument,resolvers
WebSocketMessageBrokerConfigurer -> void configureWebSocketTransport(WebSocketTransportRegistration registry)_;1395703238;Configure options related to the processing of messages received from and_sent to WebSocket clients.;void configureWebSocketTransport(WebSocketTransportRegistration registry)_;configure,options,related,to,the,processing,of,messages,received,from,and,sent,to,web,socket,clients;void,configure,web,socket,transport,web,socket,transport,registration,registry
WebSocketMessageBrokerConfigurer -> void configureWebSocketTransport(WebSocketTransportRegistration registry)_;1404149274;Configure options related to the processing of messages received from and_sent to WebSocket clients.;void configureWebSocketTransport(WebSocketTransportRegistration registry)_;configure,options,related,to,the,processing,of,messages,received,from,and,sent,to,web,socket,clients;void,configure,web,socket,transport,web,socket,transport,registration,registry
WebSocketMessageBrokerConfigurer -> void configureWebSocketTransport(WebSocketTransportRegistration registry)_;1411159659;Configure options related to the processing of messages received from and_sent to WebSocket clients.;void configureWebSocketTransport(WebSocketTransportRegistration registry)_;configure,options,related,to,the,processing,of,messages,received,from,and,sent,to,web,socket,clients;void,configure,web,socket,transport,web,socket,transport,registration,registry
WebSocketMessageBrokerConfigurer -> void configureWebSocketTransport(WebSocketTransportRegistration registry)_;1412118625;Configure options related to the processing of messages received from and_sent to WebSocket clients.;void configureWebSocketTransport(WebSocketTransportRegistration registry)_;configure,options,related,to,the,processing,of,messages,received,from,and,sent,to,web,socket,clients;void,configure,web,socket,transport,web,socket,transport,registration,registry
WebSocketMessageBrokerConfigurer -> void registerStompEndpoints(StompEndpointRegistry registry)_;1386024878;Configure STOMP over WebSocket endpoints.;void registerStompEndpoints(StompEndpointRegistry registry)_;configure,stomp,over,web,socket,endpoints;void,register,stomp,endpoints,stomp,endpoint,registry,registry
WebSocketMessageBrokerConfigurer -> void registerStompEndpoints(StompEndpointRegistry registry)_;1389129389;Configure STOMP over WebSocket endpoints.;void registerStompEndpoints(StompEndpointRegistry registry)_;configure,stomp,over,web,socket,endpoints;void,register,stomp,endpoints,stomp,endpoint,registry,registry
WebSocketMessageBrokerConfigurer -> void registerStompEndpoints(StompEndpointRegistry registry)_;1395703238;Register STOMP endpoints mapping each to a specific URL and (optionally)_enabling and configuring SockJS fallback options.;void registerStompEndpoints(StompEndpointRegistry registry)_;register,stomp,endpoints,mapping,each,to,a,specific,url,and,optionally,enabling,and,configuring,sock,js,fallback,options;void,register,stomp,endpoints,stomp,endpoint,registry,registry
WebSocketMessageBrokerConfigurer -> void registerStompEndpoints(StompEndpointRegistry registry)_;1404149274;Register STOMP endpoints mapping each to a specific URL and (optionally)_enabling and configuring SockJS fallback options.;void registerStompEndpoints(StompEndpointRegistry registry)_;register,stomp,endpoints,mapping,each,to,a,specific,url,and,optionally,enabling,and,configuring,sock,js,fallback,options;void,register,stomp,endpoints,stomp,endpoint,registry,registry
WebSocketMessageBrokerConfigurer -> void registerStompEndpoints(StompEndpointRegistry registry)_;1411159659;Register STOMP endpoints mapping each to a specific URL and (optionally)_enabling and configuring SockJS fallback options.;void registerStompEndpoints(StompEndpointRegistry registry)_;register,stomp,endpoints,mapping,each,to,a,specific,url,and,optionally,enabling,and,configuring,sock,js,fallback,options;void,register,stomp,endpoints,stomp,endpoint,registry,registry
WebSocketMessageBrokerConfigurer -> void registerStompEndpoints(StompEndpointRegistry registry)_;1412118625;Register STOMP endpoints mapping each to a specific URL and (optionally)_enabling and configuring SockJS fallback options.;void registerStompEndpoints(StompEndpointRegistry registry)_;register,stomp,endpoints,mapping,each,to,a,specific,url,and,optionally,enabling,and,configuring,sock,js,fallback,options;void,register,stomp,endpoints,stomp,endpoint,registry,registry
WebSocketMessageBrokerConfigurer -> void addReturnValueHandlers(List<HandlerMethodReturnValueHandler> returnValueHandlers)_;1411159659;Add handlers to support custom controller method return value types._<p>Using this option does not override the built-in support for handling_return values. To customize the built-in support for handling return_values, configure  {@code SimpAnnotationMethodMessageHandler} directly._@param returnValueHandlers initially an empty list_@since 4.1.1;void addReturnValueHandlers(List<HandlerMethodReturnValueHandler> returnValueHandlers)_;add,handlers,to,support,custom,controller,method,return,value,types,p,using,this,option,does,not,override,the,built,in,support,for,handling,return,values,to,customize,the,built,in,support,for,handling,return,values,configure,code,simp,annotation,method,message,handler,directly,param,return,value,handlers,initially,an,empty,list,since,4,1,1;void,add,return,value,handlers,list,handler,method,return,value,handler,return,value,handlers
WebSocketMessageBrokerConfigurer -> void addReturnValueHandlers(List<HandlerMethodReturnValueHandler> returnValueHandlers)_;1412118625;Add handlers to support custom controller method return value types._<p>Using this option does not override the built-in support for handling_return values. To customize the built-in support for handling return_values, configure  {@code SimpAnnotationMethodMessageHandler} directly._@param returnValueHandlers the handlers to register (initially an empty list)_@since 4.1.1;void addReturnValueHandlers(List<HandlerMethodReturnValueHandler> returnValueHandlers)_;add,handlers,to,support,custom,controller,method,return,value,types,p,using,this,option,does,not,override,the,built,in,support,for,handling,return,values,to,customize,the,built,in,support,for,handling,return,values,configure,code,simp,annotation,method,message,handler,directly,param,return,value,handlers,the,handlers,to,register,initially,an,empty,list,since,4,1,1;void,add,return,value,handlers,list,handler,method,return,value,handler,return,value,handlers
WebSocketMessageBrokerConfigurer -> boolean configureMessageConverters(List<MessageConverter> messageConverters)_;1389129389;Configure the message converters to use when extracting the payload of_messages in annotated methods and when sending messages (e.g. through the_"broker" SimpMessagingTemplate)._<p>_The provided list, initially empty, can be used to add message converters_while the boolean return value is used to determine if default message should_be added as well.__@param messageConverters initially an empty list of converters_@return whether to also add default converter or not;boolean configureMessageConverters(List<MessageConverter> messageConverters)_;configure,the,message,converters,to,use,when,extracting,the,payload,of,messages,in,annotated,methods,and,when,sending,messages,e,g,through,the,broker,simp,messaging,template,p,the,provided,list,initially,empty,can,be,used,to,add,message,converters,while,the,boolean,return,value,is,used,to,determine,if,default,message,should,be,added,as,well,param,message,converters,initially,an,empty,list,of,converters,return,whether,to,also,add,default,converter,or,not;boolean,configure,message,converters,list,message,converter,message,converters
WebSocketMessageBrokerConfigurer -> boolean configureMessageConverters(List<MessageConverter> messageConverters)_;1395703238;Configure the message converters to use when extracting the payload of_messages in annotated methods and when sending messages (e.g. through the_"broker" SimpMessagingTemplate)._<p>_The provided list, initially empty, can be used to add message converters_while the boolean return value is used to determine if default message should_be added as well.__@param messageConverters initially an empty list of converters_@return whether to also add default converter or not;boolean configureMessageConverters(List<MessageConverter> messageConverters)_;configure,the,message,converters,to,use,when,extracting,the,payload,of,messages,in,annotated,methods,and,when,sending,messages,e,g,through,the,broker,simp,messaging,template,p,the,provided,list,initially,empty,can,be,used,to,add,message,converters,while,the,boolean,return,value,is,used,to,determine,if,default,message,should,be,added,as,well,param,message,converters,initially,an,empty,list,of,converters,return,whether,to,also,add,default,converter,or,not;boolean,configure,message,converters,list,message,converter,message,converters
WebSocketMessageBrokerConfigurer -> boolean configureMessageConverters(List<MessageConverter> messageConverters)_;1404149274;Configure the message converters to use when extracting the payload of_messages in annotated methods and when sending messages (e.g. through the_"broker" SimpMessagingTemplate)._<p>_The provided list, initially empty, can be used to add message converters_while the boolean return value is used to determine if default message should_be added as well.__@param messageConverters initially an empty list of converters_@return whether to also add default converter or not;boolean configureMessageConverters(List<MessageConverter> messageConverters)_;configure,the,message,converters,to,use,when,extracting,the,payload,of,messages,in,annotated,methods,and,when,sending,messages,e,g,through,the,broker,simp,messaging,template,p,the,provided,list,initially,empty,can,be,used,to,add,message,converters,while,the,boolean,return,value,is,used,to,determine,if,default,message,should,be,added,as,well,param,message,converters,initially,an,empty,list,of,converters,return,whether,to,also,add,default,converter,or,not;boolean,configure,message,converters,list,message,converter,message,converters
WebSocketMessageBrokerConfigurer -> boolean configureMessageConverters(List<MessageConverter> messageConverters)_;1411159659;Configure the message converters to use when extracting the payload of_messages in annotated methods and when sending messages (e.g. through the_"broker" SimpMessagingTemplate)._<p>_The provided list, initially empty, can be used to add message converters_while the boolean return value is used to determine if default message should_be added as well.__@param messageConverters initially an empty list of converters_@return whether to also add default converter or not;boolean configureMessageConverters(List<MessageConverter> messageConverters)_;configure,the,message,converters,to,use,when,extracting,the,payload,of,messages,in,annotated,methods,and,when,sending,messages,e,g,through,the,broker,simp,messaging,template,p,the,provided,list,initially,empty,can,be,used,to,add,message,converters,while,the,boolean,return,value,is,used,to,determine,if,default,message,should,be,added,as,well,param,message,converters,initially,an,empty,list,of,converters,return,whether,to,also,add,default,converter,or,not;boolean,configure,message,converters,list,message,converter,message,converters
WebSocketMessageBrokerConfigurer -> boolean configureMessageConverters(List<MessageConverter> messageConverters)_;1412118625;Configure the message converters to use when extracting the payload of_messages in annotated methods and when sending messages (e.g. through the_"broker" SimpMessagingTemplate)._<p>The provided list, initially empty, can be used to add message converters_while the boolean return value is used to determine if default message should_be added as well._@param messageConverters the converters to configure (initially an empty list)_@return whether to also add default converter or not;boolean configureMessageConverters(List<MessageConverter> messageConverters)_;configure,the,message,converters,to,use,when,extracting,the,payload,of,messages,in,annotated,methods,and,when,sending,messages,e,g,through,the,broker,simp,messaging,template,p,the,provided,list,initially,empty,can,be,used,to,add,message,converters,while,the,boolean,return,value,is,used,to,determine,if,default,message,should,be,added,as,well,param,message,converters,the,converters,to,configure,initially,an,empty,list,return,whether,to,also,add,default,converter,or,not;boolean,configure,message,converters,list,message,converter,message,converters
WebSocketMessageBrokerConfigurer -> void configureClientOutboundChannel(ChannelRegistration registration)_;1386024878;Configure the {@link org.springframework.messaging.MessageChannel} used for_incoming messages from WebSocket clients. By default the channel is backed_by a thread pool of size 1. It is recommended to customize thread pool_settings for production use.;void configureClientOutboundChannel(ChannelRegistration registration)_;configure,the,link,org,springframework,messaging,message,channel,used,for,incoming,messages,from,web,socket,clients,by,default,the,channel,is,backed,by,a,thread,pool,of,size,1,it,is,recommended,to,customize,thread,pool,settings,for,production,use;void,configure,client,outbound,channel,channel,registration,registration
WebSocketMessageBrokerConfigurer -> void configureClientOutboundChannel(ChannelRegistration registration)_;1389129389;Configure the {@link org.springframework.messaging.MessageChannel} used for_incoming messages from WebSocket clients. By default the channel is backed_by a thread pool of size 1. It is recommended to customize thread pool_settings for production use.;void configureClientOutboundChannel(ChannelRegistration registration)_;configure,the,link,org,springframework,messaging,message,channel,used,for,incoming,messages,from,web,socket,clients,by,default,the,channel,is,backed,by,a,thread,pool,of,size,1,it,is,recommended,to,customize,thread,pool,settings,for,production,use;void,configure,client,outbound,channel,channel,registration,registration
WebSocketMessageBrokerConfigurer -> void configureClientOutboundChannel(ChannelRegistration registration)_;1395703238;Configure the {@link org.springframework.messaging.MessageChannel} used for_incoming messages from WebSocket clients. By default the channel is backed_by a thread pool of size 1. It is recommended to customize thread pool_settings for production use.;void configureClientOutboundChannel(ChannelRegistration registration)_;configure,the,link,org,springframework,messaging,message,channel,used,for,incoming,messages,from,web,socket,clients,by,default,the,channel,is,backed,by,a,thread,pool,of,size,1,it,is,recommended,to,customize,thread,pool,settings,for,production,use;void,configure,client,outbound,channel,channel,registration,registration
WebSocketMessageBrokerConfigurer -> void configureClientOutboundChannel(ChannelRegistration registration)_;1404149274;Configure the {@link org.springframework.messaging.MessageChannel} used for_outbound messages to WebSocket clients. By default the channel is backed_by a thread pool of size 1. It is recommended to customize thread pool_settings for production use.;void configureClientOutboundChannel(ChannelRegistration registration)_;configure,the,link,org,springframework,messaging,message,channel,used,for,outbound,messages,to,web,socket,clients,by,default,the,channel,is,backed,by,a,thread,pool,of,size,1,it,is,recommended,to,customize,thread,pool,settings,for,production,use;void,configure,client,outbound,channel,channel,registration,registration
WebSocketMessageBrokerConfigurer -> void configureClientOutboundChannel(ChannelRegistration registration)_;1411159659;Configure the {@link org.springframework.messaging.MessageChannel} used for_outbound messages to WebSocket clients. By default the channel is backed_by a thread pool of size 1. It is recommended to customize thread pool_settings for production use.;void configureClientOutboundChannel(ChannelRegistration registration)_;configure,the,link,org,springframework,messaging,message,channel,used,for,outbound,messages,to,web,socket,clients,by,default,the,channel,is,backed,by,a,thread,pool,of,size,1,it,is,recommended,to,customize,thread,pool,settings,for,production,use;void,configure,client,outbound,channel,channel,registration,registration
WebSocketMessageBrokerConfigurer -> void configureClientOutboundChannel(ChannelRegistration registration)_;1412118625;Configure the {@link org.springframework.messaging.MessageChannel} used for_outbound messages to WebSocket clients. By default the channel is backed_by a thread pool of size 1. It is recommended to customize thread pool_settings for production use.;void configureClientOutboundChannel(ChannelRegistration registration)_;configure,the,link,org,springframework,messaging,message,channel,used,for,outbound,messages,to,web,socket,clients,by,default,the,channel,is,backed,by,a,thread,pool,of,size,1,it,is,recommended,to,customize,thread,pool,settings,for,production,use;void,configure,client,outbound,channel,channel,registration,registration
WebSocketMessageBrokerConfigurer -> void configureMessageBroker(MessageBrokerRegistry registry)_;1386024878;Configure message broker options.;void configureMessageBroker(MessageBrokerRegistry registry)_;configure,message,broker,options;void,configure,message,broker,message,broker,registry,registry
WebSocketMessageBrokerConfigurer -> void configureMessageBroker(MessageBrokerRegistry registry)_;1389129389;Configure message broker options.;void configureMessageBroker(MessageBrokerRegistry registry)_;configure,message,broker,options;void,configure,message,broker,message,broker,registry,registry
WebSocketMessageBrokerConfigurer -> void configureMessageBroker(MessageBrokerRegistry registry)_;1395703238;Configure message broker options.;void configureMessageBroker(MessageBrokerRegistry registry)_;configure,message,broker,options;void,configure,message,broker,message,broker,registry,registry
WebSocketMessageBrokerConfigurer -> void configureMessageBroker(MessageBrokerRegistry registry)_;1404149274;Configure message broker options.;void configureMessageBroker(MessageBrokerRegistry registry)_;configure,message,broker,options;void,configure,message,broker,message,broker,registry,registry
WebSocketMessageBrokerConfigurer -> void configureMessageBroker(MessageBrokerRegistry registry)_;1411159659;Configure message broker options.;void configureMessageBroker(MessageBrokerRegistry registry)_;configure,message,broker,options;void,configure,message,broker,message,broker,registry,registry
WebSocketMessageBrokerConfigurer -> void configureMessageBroker(MessageBrokerRegistry registry)_;1412118625;Configure message broker options.;void configureMessageBroker(MessageBrokerRegistry registry)_;configure,message,broker,options;void,configure,message,broker,message,broker,registry,registry
