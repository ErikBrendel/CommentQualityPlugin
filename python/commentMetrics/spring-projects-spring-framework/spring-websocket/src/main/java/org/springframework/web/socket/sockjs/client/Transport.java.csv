commented;modifiers;parameterAmount;loc;comment;code
true;;0;1;/**  * Return the SockJS transport types that this transport can be used for.  * In particular since from a client perspective there is no difference  * between XHR and XHR streaming, an {@code XhrTransport} could do both.  */ ;/**  * Return the SockJS transport types that this transport can be used for.  * In particular since from a client perspective there is no difference  * between XHR and XHR streaming, an {@code XhrTransport} could do both.  */ List<TransportType> getTransportTypes().
true;;2;1;/**  * Connect the transport.  * @param request the transport request.  * @param webSocketHandler the application handler to delegate lifecycle events to.  * @return a future to indicate success or failure to connect.  */ ;/**  * Connect the transport.  * @param request the transport request.  * @param webSocketHandler the application handler to delegate lifecycle events to.  * @return a future to indicate success or failure to connect.  */ ListenableFuture<WebSocketSession> connect(TransportRequest request, WebSocketHandler webSocketHandler).
