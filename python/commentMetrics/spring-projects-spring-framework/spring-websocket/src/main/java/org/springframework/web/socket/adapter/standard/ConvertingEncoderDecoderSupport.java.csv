# id;timestamp;commentText;codeText;commentWords;codeWords
ConvertingEncoderDecoderSupport -> protected ApplicationContext getApplicationContext();1386087504;Returns the active {@link ApplicationContext}. Be default this method obtains_the context via {@link ContextLoader#getCurrentWebApplicationContext()}, which_finds the ApplicationContext loaded via {@link ContextLoader} typically in a_Servlet container environment. When not running in a Servlet container and_not using {@link ContextLoader}, this method should be overridden._@return the {@link ApplicationContext} or {@code null};protected ApplicationContext getApplicationContext() {_		return ContextLoader.getCurrentWebApplicationContext()__	};returns,the,active,link,application,context,be,default,this,method,obtains,the,context,via,link,context,loader,get,current,web,application,context,which,finds,the,application,context,loaded,via,link,context,loader,typically,in,a,servlet,container,environment,when,not,running,in,a,servlet,container,and,not,using,link,context,loader,this,method,should,be,overridden,return,the,link,application,context,or,code,null;protected,application,context,get,application,context,return,context,loader,get,current,web,application,context
ConvertingEncoderDecoderSupport -> protected ApplicationContext getApplicationContext();1413848647;Returns the active {@link ApplicationContext}. Be default this method obtains_the context via {@link ContextLoader#getCurrentWebApplicationContext()}, which_finds the ApplicationContext loaded via {@link ContextLoader} typically in a_Servlet container environment. When not running in a Servlet container and_not using {@link ContextLoader}, this method should be overridden._@return the {@link ApplicationContext} or {@code null};protected ApplicationContext getApplicationContext() {_		return ContextLoader.getCurrentWebApplicationContext()__	};returns,the,active,link,application,context,be,default,this,method,obtains,the,context,via,link,context,loader,get,current,web,application,context,which,finds,the,application,context,loaded,via,link,context,loader,typically,in,a,servlet,container,environment,when,not,running,in,a,servlet,container,and,not,using,link,context,loader,this,method,should,be,overridden,return,the,link,application,context,or,code,null;protected,application,context,get,application,context,return,context,loader,get,current,web,application,context
ConvertingEncoderDecoderSupport -> protected ApplicationContext getApplicationContext();1427240641;Returns the active {@link ApplicationContext}. Be default this method obtains_the context via {@link ContextLoader#getCurrentWebApplicationContext()}, which_finds the ApplicationContext loaded via {@link ContextLoader} typically in a_Servlet container environment. When not running in a Servlet container and_not using {@link ContextLoader}, this method should be overridden._@return the {@link ApplicationContext} or {@code null};protected ApplicationContext getApplicationContext() {_		return ContextLoader.getCurrentWebApplicationContext()__	};returns,the,active,link,application,context,be,default,this,method,obtains,the,context,via,link,context,loader,get,current,web,application,context,which,finds,the,application,context,loaded,via,link,context,loader,typically,in,a,servlet,container,environment,when,not,running,in,a,servlet,container,and,not,using,link,context,loader,this,method,should,be,overridden,return,the,link,application,context,or,code,null;protected,application,context,get,application,context,return,context,loader,get,current,web,application,context
ConvertingEncoderDecoderSupport -> @SuppressWarnings("unchecked") 	@Nullable 	public T decode(M message) throws DecodeException;1496837955;@see javax.websocket.Decoder.Text#decode(String)_@see javax.websocket.Decoder.Binary#decode(ByteBuffer);@SuppressWarnings("unchecked")_	@Nullable_	public T decode(M message) throws DecodeException {_		try {_			return (T) getConversionService().convert(message, getMessageType(), getType())__		}_		catch (ConversionException ex) {_			if (message instanceof String) {_				throw new DecodeException((String) message,_						"Unable to decode websocket message using ConversionService", ex)__			}_			if (message instanceof ByteBuffer) {_				throw new DecodeException((ByteBuffer) message,_						"Unable to decode websocket message using ConversionService", ex)__			}_			throw ex__		}_	};see,javax,websocket,decoder,text,decode,string,see,javax,websocket,decoder,binary,decode,byte,buffer;suppress,warnings,unchecked,nullable,public,t,decode,m,message,throws,decode,exception,try,return,t,get,conversion,service,convert,message,get,message,type,get,type,catch,conversion,exception,ex,if,message,instanceof,string,throw,new,decode,exception,string,message,unable,to,decode,websocket,message,using,conversion,service,ex,if,message,instanceof,byte,buffer,throw,new,decode,exception,byte,buffer,message,unable,to,decode,websocket,message,using,conversion,service,ex,throw,ex
ConvertingEncoderDecoderSupport -> @SuppressWarnings("unchecked") 	@Nullable 	public T decode(M message) throws DecodeException;1520528267;@see javax.websocket.Decoder.Text#decode(String)_@see javax.websocket.Decoder.Binary#decode(ByteBuffer);@SuppressWarnings("unchecked")_	@Nullable_	public T decode(M message) throws DecodeException {_		try {_			return (T) getConversionService().convert(message, getMessageType(), getType())__		}_		catch (ConversionException ex) {_			if (message instanceof String) {_				throw new DecodeException((String) message,_						"Unable to decode websocket message using ConversionService", ex)__			}_			if (message instanceof ByteBuffer) {_				throw new DecodeException((ByteBuffer) message,_						"Unable to decode websocket message using ConversionService", ex)__			}_			throw ex__		}_	};see,javax,websocket,decoder,text,decode,string,see,javax,websocket,decoder,binary,decode,byte,buffer;suppress,warnings,unchecked,nullable,public,t,decode,m,message,throws,decode,exception,try,return,t,get,conversion,service,convert,message,get,message,type,get,type,catch,conversion,exception,ex,if,message,instanceof,string,throw,new,decode,exception,string,message,unable,to,decode,websocket,message,using,conversion,service,ex,if,message,instanceof,byte,buffer,throw,new,decode,exception,byte,buffer,message,unable,to,decode,websocket,message,using,conversion,service,ex,throw,ex
ConvertingEncoderDecoderSupport -> @SuppressWarnings("unchecked") 	@Nullable 	public T decode(M message) throws DecodeException;1530174524;Decode the a message into an object._@see javax.websocket.Decoder.Text#decode(String)_@see javax.websocket.Decoder.Binary#decode(ByteBuffer);@SuppressWarnings("unchecked")_	@Nullable_	public T decode(M message) throws DecodeException {_		try {_			return (T) getConversionService().convert(message, getMessageType(), getType())__		}_		catch (ConversionException ex) {_			if (message instanceof String) {_				throw new DecodeException((String) message,_						"Unable to decode websocket message using ConversionService", ex)__			}_			if (message instanceof ByteBuffer) {_				throw new DecodeException((ByteBuffer) message,_						"Unable to decode websocket message using ConversionService", ex)__			}_			throw ex__		}_	};decode,the,a,message,into,an,object,see,javax,websocket,decoder,text,decode,string,see,javax,websocket,decoder,binary,decode,byte,buffer;suppress,warnings,unchecked,nullable,public,t,decode,m,message,throws,decode,exception,try,return,t,get,conversion,service,convert,message,get,message,type,get,type,catch,conversion,exception,ex,if,message,instanceof,string,throw,new,decode,exception,string,message,unable,to,decode,websocket,message,using,conversion,service,ex,if,message,instanceof,byte,buffer,throw,new,decode,exception,byte,buffer,message,unable,to,decode,websocket,message,using,conversion,service,ex,throw,ex
ConvertingEncoderDecoderSupport -> @SuppressWarnings("unchecked") 	@Nullable 	public M encode(T object) throws EncodeException;1496837955;@see javax.websocket.Encoder.Text#encode(Object)_@see javax.websocket.Encoder.Binary#encode(Object);@SuppressWarnings("unchecked")_	@Nullable_	public M encode(T object) throws EncodeException {_		try {_			return (M) getConversionService().convert(object, getType(), getMessageType())__		}_		catch (ConversionException ex) {_			throw new EncodeException(object, "Unable to encode websocket message using ConversionService", ex)__		}_	};see,javax,websocket,encoder,text,encode,object,see,javax,websocket,encoder,binary,encode,object;suppress,warnings,unchecked,nullable,public,m,encode,t,object,throws,encode,exception,try,return,m,get,conversion,service,convert,object,get,type,get,message,type,catch,conversion,exception,ex,throw,new,encode,exception,object,unable,to,encode,websocket,message,using,conversion,service,ex
ConvertingEncoderDecoderSupport -> @SuppressWarnings("unchecked") 	@Nullable 	public M encode(T object) throws EncodeException;1520528267;@see javax.websocket.Encoder.Text#encode(Object)_@see javax.websocket.Encoder.Binary#encode(Object);@SuppressWarnings("unchecked")_	@Nullable_	public M encode(T object) throws EncodeException {_		try {_			return (M) getConversionService().convert(object, getType(), getMessageType())__		}_		catch (ConversionException ex) {_			throw new EncodeException(object, "Unable to encode websocket message using ConversionService", ex)__		}_	};see,javax,websocket,encoder,text,encode,object,see,javax,websocket,encoder,binary,encode,object;suppress,warnings,unchecked,nullable,public,m,encode,t,object,throws,encode,exception,try,return,m,get,conversion,service,convert,object,get,type,get,message,type,catch,conversion,exception,ex,throw,new,encode,exception,object,unable,to,encode,websocket,message,using,conversion,service,ex
ConvertingEncoderDecoderSupport -> @SuppressWarnings("unchecked") 	@Nullable 	public M encode(T object) throws EncodeException;1530174524;Encode an object to a message._@see javax.websocket.Encoder.Text#encode(Object)_@see javax.websocket.Encoder.Binary#encode(Object);@SuppressWarnings("unchecked")_	@Nullable_	public M encode(T object) throws EncodeException {_		try {_			return (M) getConversionService().convert(object, getType(), getMessageType())__		}_		catch (ConversionException ex) {_			throw new EncodeException(object, "Unable to encode websocket message using ConversionService", ex)__		}_	};encode,an,object,to,a,message,see,javax,websocket,encoder,text,encode,object,see,javax,websocket,encoder,binary,encode,object;suppress,warnings,unchecked,nullable,public,m,encode,t,object,throws,encode,exception,try,return,m,get,conversion,service,convert,object,get,type,get,message,type,catch,conversion,exception,ex,throw,new,encode,exception,object,unable,to,encode,websocket,message,using,conversion,service,ex
ConvertingEncoderDecoderSupport -> protected TypeDescriptor getMessageType();1386087504;Returns the websocket message type. By default the type is resolved using_the generic arguments of the class.;protected TypeDescriptor getMessageType() {_		return TypeDescriptor.valueOf(resolveTypeArguments()[1])__	};returns,the,websocket,message,type,by,default,the,type,is,resolved,using,the,generic,arguments,of,the,class;protected,type,descriptor,get,message,type,return,type,descriptor,value,of,resolve,type,arguments,1
ConvertingEncoderDecoderSupport -> protected TypeDescriptor getMessageType();1413848647;Returns the websocket message type. By default the type is resolved using_the generic arguments of the class.;protected TypeDescriptor getMessageType() {_		return TypeDescriptor.valueOf(resolveTypeArguments()[1])__	};returns,the,websocket,message,type,by,default,the,type,is,resolved,using,the,generic,arguments,of,the,class;protected,type,descriptor,get,message,type,return,type,descriptor,value,of,resolve,type,arguments,1
ConvertingEncoderDecoderSupport -> protected TypeDescriptor getMessageType();1427240641;Returns the websocket message type. By default the type is resolved using_the generic arguments of the class.;protected TypeDescriptor getMessageType() {_		return TypeDescriptor.valueOf(resolveTypeArguments()[1])__	};returns,the,websocket,message,type,by,default,the,type,is,resolved,using,the,generic,arguments,of,the,class;protected,type,descriptor,get,message,type,return,type,descriptor,value,of,resolve,type,arguments,1
ConvertingEncoderDecoderSupport -> protected TypeDescriptor getMessageType();1495868221;Returns the websocket message type. By default the type is resolved using_the generic arguments of the class.;protected TypeDescriptor getMessageType() {_		return TypeDescriptor.valueOf(resolveTypeArguments()[1])__	};returns,the,websocket,message,type,by,default,the,type,is,resolved,using,the,generic,arguments,of,the,class;protected,type,descriptor,get,message,type,return,type,descriptor,value,of,resolve,type,arguments,1
ConvertingEncoderDecoderSupport -> protected TypeDescriptor getMessageType();1496837955;Returns the websocket message type. By default the type is resolved using_the generic arguments of the class.;protected TypeDescriptor getMessageType() {_		return TypeDescriptor.valueOf(resolveTypeArguments()[1])__	};returns,the,websocket,message,type,by,default,the,type,is,resolved,using,the,generic,arguments,of,the,class;protected,type,descriptor,get,message,type,return,type,descriptor,value,of,resolve,type,arguments,1
ConvertingEncoderDecoderSupport -> protected TypeDescriptor getMessageType();1520528267;Returns the websocket message type. By default the type is resolved using_the generic arguments of the class.;protected TypeDescriptor getMessageType() {_		return TypeDescriptor.valueOf(resolveTypeArguments()[1])__	};returns,the,websocket,message,type,by,default,the,type,is,resolved,using,the,generic,arguments,of,the,class;protected,type,descriptor,get,message,type,return,type,descriptor,value,of,resolve,type,arguments,1
ConvertingEncoderDecoderSupport -> protected TypeDescriptor getMessageType();1530174524;Returns the websocket message type. By default the type is resolved using_the generic arguments of the class.;protected TypeDescriptor getMessageType() {_		return TypeDescriptor.valueOf(resolveTypeArguments()[1])__	};returns,the,websocket,message,type,by,default,the,type,is,resolved,using,the,generic,arguments,of,the,class;protected,type,descriptor,get,message,type,return,type,descriptor,value,of,resolve,type,arguments,1
ConvertingEncoderDecoderSupport -> protected ConversionService getConversionService();1386087504;Strategy method used to obtain the {@link ConversionService}. By default this_method expects a bean named {@code 'webSocketConversionService'} in the_{@link #getApplicationContext() active ApplicationContext}._@return the {@link ConversionService} (never null);protected ConversionService getConversionService() {_		ApplicationContext applicationContext = getApplicationContext()__		Assert.state(applicationContext != null, "Unable to locate the Spring ApplicationContext")__		try {_			return applicationContext.getBean(CONVERSION_SERVICE_BEAN_NAME, ConversionService.class)__		}_		catch (BeansException ex) {_			throw new IllegalStateException("Unable to find ConversionService: please configure a '" +_					CONVERSION_SERVICE_BEAN_NAME + "' or override the getConversionService() method", ex)__		}_	};strategy,method,used,to,obtain,the,link,conversion,service,by,default,this,method,expects,a,bean,named,code,web,socket,conversion,service,in,the,link,get,application,context,active,application,context,return,the,link,conversion,service,never,null;protected,conversion,service,get,conversion,service,application,context,application,context,get,application,context,assert,state,application,context,null,unable,to,locate,the,spring,application,context,try,return,application,context,get,bean,conversion,service,class,catch,beans,exception,ex,throw,new,illegal,state,exception,unable,to,find,conversion,service,please,configure,a,or,override,the,get,conversion,service,method,ex
ConvertingEncoderDecoderSupport -> protected ConversionService getConversionService();1413848647;Strategy method used to obtain the {@link ConversionService}. By default this_method expects a bean named {@code 'webSocketConversionService'} in the_{@link #getApplicationContext() active ApplicationContext}._@return the {@link ConversionService} (never null);protected ConversionService getConversionService() {_		ApplicationContext applicationContext = getApplicationContext()__		Assert.state(applicationContext != null, "Unable to locate the Spring ApplicationContext")__		try {_			return applicationContext.getBean(CONVERSION_SERVICE_BEAN_NAME, ConversionService.class)__		}_		catch (BeansException ex) {_			throw new IllegalStateException("Unable to find ConversionService: please configure a '" +_					CONVERSION_SERVICE_BEAN_NAME + "' or override the getConversionService() method", ex)__		}_	};strategy,method,used,to,obtain,the,link,conversion,service,by,default,this,method,expects,a,bean,named,code,web,socket,conversion,service,in,the,link,get,application,context,active,application,context,return,the,link,conversion,service,never,null;protected,conversion,service,get,conversion,service,application,context,application,context,get,application,context,assert,state,application,context,null,unable,to,locate,the,spring,application,context,try,return,application,context,get,bean,conversion,service,class,catch,beans,exception,ex,throw,new,illegal,state,exception,unable,to,find,conversion,service,please,configure,a,or,override,the,get,conversion,service,method,ex
ConvertingEncoderDecoderSupport -> protected ConversionService getConversionService();1427240641;Strategy method used to obtain the {@link ConversionService}. By default this_method expects a bean named {@code 'webSocketConversionService'} in the_{@link #getApplicationContext() active ApplicationContext}._@return the {@link ConversionService} (never null);protected ConversionService getConversionService() {_		ApplicationContext applicationContext = getApplicationContext()__		Assert.state(applicationContext != null, "Unable to locate the Spring ApplicationContext")__		try {_			return applicationContext.getBean(CONVERSION_SERVICE_BEAN_NAME, ConversionService.class)__		}_		catch (BeansException ex) {_			throw new IllegalStateException("Unable to find ConversionService: please configure a '" +_					CONVERSION_SERVICE_BEAN_NAME + "' or override the getConversionService() method", ex)__		}_	};strategy,method,used,to,obtain,the,link,conversion,service,by,default,this,method,expects,a,bean,named,code,web,socket,conversion,service,in,the,link,get,application,context,active,application,context,return,the,link,conversion,service,never,null;protected,conversion,service,get,conversion,service,application,context,application,context,get,application,context,assert,state,application,context,null,unable,to,locate,the,spring,application,context,try,return,application,context,get,bean,conversion,service,class,catch,beans,exception,ex,throw,new,illegal,state,exception,unable,to,find,conversion,service,please,configure,a,or,override,the,get,conversion,service,method,ex
ConvertingEncoderDecoderSupport -> protected ConversionService getConversionService();1495868221;Strategy method used to obtain the {@link ConversionService}. By default this_method expects a bean named {@code 'webSocketConversionService'} in the_{@link #getApplicationContext() active ApplicationContext}._@return the {@link ConversionService} (never null);protected ConversionService getConversionService() {_		ApplicationContext applicationContext = getApplicationContext()__		Assert.state(applicationContext != null, "Unable to locate the Spring ApplicationContext")__		try {_			return applicationContext.getBean(CONVERSION_SERVICE_BEAN_NAME, ConversionService.class)__		}_		catch (BeansException ex) {_			throw new IllegalStateException("Unable to find ConversionService: please configure a '" +_					CONVERSION_SERVICE_BEAN_NAME + "' or override the getConversionService() method", ex)__		}_	};strategy,method,used,to,obtain,the,link,conversion,service,by,default,this,method,expects,a,bean,named,code,web,socket,conversion,service,in,the,link,get,application,context,active,application,context,return,the,link,conversion,service,never,null;protected,conversion,service,get,conversion,service,application,context,application,context,get,application,context,assert,state,application,context,null,unable,to,locate,the,spring,application,context,try,return,application,context,get,bean,conversion,service,class,catch,beans,exception,ex,throw,new,illegal,state,exception,unable,to,find,conversion,service,please,configure,a,or,override,the,get,conversion,service,method,ex
ConvertingEncoderDecoderSupport -> protected ConversionService getConversionService();1496837955;Strategy method used to obtain the {@link ConversionService}. By default this_method expects a bean named {@code 'webSocketConversionService'} in the_{@link #getApplicationContext() active ApplicationContext}._@return the {@link ConversionService} (never null);protected ConversionService getConversionService() {_		ApplicationContext applicationContext = getApplicationContext()__		Assert.state(applicationContext != null, "Unable to locate the Spring ApplicationContext")__		try {_			return applicationContext.getBean(CONVERSION_SERVICE_BEAN_NAME, ConversionService.class)__		}_		catch (BeansException ex) {_			throw new IllegalStateException("Unable to find ConversionService: please configure a '" +_					CONVERSION_SERVICE_BEAN_NAME + "' or override the getConversionService() method", ex)__		}_	};strategy,method,used,to,obtain,the,link,conversion,service,by,default,this,method,expects,a,bean,named,code,web,socket,conversion,service,in,the,link,get,application,context,active,application,context,return,the,link,conversion,service,never,null;protected,conversion,service,get,conversion,service,application,context,application,context,get,application,context,assert,state,application,context,null,unable,to,locate,the,spring,application,context,try,return,application,context,get,bean,conversion,service,class,catch,beans,exception,ex,throw,new,illegal,state,exception,unable,to,find,conversion,service,please,configure,a,or,override,the,get,conversion,service,method,ex
ConvertingEncoderDecoderSupport -> protected ConversionService getConversionService();1520528267;Strategy method used to obtain the {@link ConversionService}. By default this_method expects a bean named {@code 'webSocketConversionService'} in the_{@link #getApplicationContext() active ApplicationContext}._@return the {@link ConversionService} (never null);protected ConversionService getConversionService() {_		ApplicationContext applicationContext = getApplicationContext()__		Assert.state(applicationContext != null, "Unable to locate the Spring ApplicationContext")__		try {_			return applicationContext.getBean(CONVERSION_SERVICE_BEAN_NAME, ConversionService.class)__		}_		catch (BeansException ex) {_			throw new IllegalStateException("Unable to find ConversionService: please configure a '" +_					CONVERSION_SERVICE_BEAN_NAME + "' or override the getConversionService() method", ex)__		}_	};strategy,method,used,to,obtain,the,link,conversion,service,by,default,this,method,expects,a,bean,named,code,web,socket,conversion,service,in,the,link,get,application,context,active,application,context,return,the,link,conversion,service,never,null;protected,conversion,service,get,conversion,service,application,context,application,context,get,application,context,assert,state,application,context,null,unable,to,locate,the,spring,application,context,try,return,application,context,get,bean,conversion,service,class,catch,beans,exception,ex,throw,new,illegal,state,exception,unable,to,find,conversion,service,please,configure,a,or,override,the,get,conversion,service,method,ex
ConvertingEncoderDecoderSupport -> protected ConversionService getConversionService();1530174524;Strategy method used to obtain the {@link ConversionService}. By default this_method expects a bean named {@code 'webSocketConversionService'} in the_{@link #getApplicationContext() active ApplicationContext}._@return the {@link ConversionService} (never null);protected ConversionService getConversionService() {_		ApplicationContext applicationContext = getApplicationContext()__		Assert.state(applicationContext != null, "Unable to locate the Spring ApplicationContext")__		try {_			return applicationContext.getBean(CONVERSION_SERVICE_BEAN_NAME, ConversionService.class)__		}_		catch (BeansException ex) {_			throw new IllegalStateException("Unable to find ConversionService: please configure a '" +_					CONVERSION_SERVICE_BEAN_NAME + "' or override the getConversionService() method", ex)__		}_	};strategy,method,used,to,obtain,the,link,conversion,service,by,default,this,method,expects,a,bean,named,code,web,socket,conversion,service,in,the,link,get,application,context,active,application,context,return,the,link,conversion,service,never,null;protected,conversion,service,get,conversion,service,application,context,application,context,get,application,context,assert,state,application,context,null,unable,to,locate,the,spring,application,context,try,return,application,context,get,bean,conversion,service,class,catch,beans,exception,ex,throw,new,illegal,state,exception,unable,to,find,conversion,service,please,configure,a,or,override,the,get,conversion,service,method,ex
ConvertingEncoderDecoderSupport -> @SuppressWarnings("unchecked") 	public M encode(T object) throws EncodeException;1386087504;@see javax.websocket.Encoder.Text#encode(Object)_@see javax.websocket.Encoder.Binary#encode(Object);@SuppressWarnings("unchecked")_	public M encode(T object) throws EncodeException {_		try {_			return (M) getConversionService().convert(object, getType(), getMessageType())__		}_		catch (ConversionException ex) {_			throw new EncodeException(object, "Unable to encode websocket message using ConversionService", ex)__		}_	};see,javax,websocket,encoder,text,encode,object,see,javax,websocket,encoder,binary,encode,object;suppress,warnings,unchecked,public,m,encode,t,object,throws,encode,exception,try,return,m,get,conversion,service,convert,object,get,type,get,message,type,catch,conversion,exception,ex,throw,new,encode,exception,object,unable,to,encode,websocket,message,using,conversion,service,ex
ConvertingEncoderDecoderSupport -> @SuppressWarnings("unchecked") 	public M encode(T object) throws EncodeException;1413848647;@see javax.websocket.Encoder.Text#encode(Object)_@see javax.websocket.Encoder.Binary#encode(Object);@SuppressWarnings("unchecked")_	public M encode(T object) throws EncodeException {_		try {_			return (M) getConversionService().convert(object, getType(), getMessageType())__		}_		catch (ConversionException ex) {_			throw new EncodeException(object, "Unable to encode websocket message using ConversionService", ex)__		}_	};see,javax,websocket,encoder,text,encode,object,see,javax,websocket,encoder,binary,encode,object;suppress,warnings,unchecked,public,m,encode,t,object,throws,encode,exception,try,return,m,get,conversion,service,convert,object,get,type,get,message,type,catch,conversion,exception,ex,throw,new,encode,exception,object,unable,to,encode,websocket,message,using,conversion,service,ex
ConvertingEncoderDecoderSupport -> @SuppressWarnings("unchecked") 	public M encode(T object) throws EncodeException;1427240641;@see javax.websocket.Encoder.Text#encode(Object)_@see javax.websocket.Encoder.Binary#encode(Object);@SuppressWarnings("unchecked")_	public M encode(T object) throws EncodeException {_		try {_			return (M) getConversionService().convert(object, getType(), getMessageType())__		}_		catch (ConversionException ex) {_			throw new EncodeException(object, "Unable to encode websocket message using ConversionService", ex)__		}_	};see,javax,websocket,encoder,text,encode,object,see,javax,websocket,encoder,binary,encode,object;suppress,warnings,unchecked,public,m,encode,t,object,throws,encode,exception,try,return,m,get,conversion,service,convert,object,get,type,get,message,type,catch,conversion,exception,ex,throw,new,encode,exception,object,unable,to,encode,websocket,message,using,conversion,service,ex
ConvertingEncoderDecoderSupport -> @SuppressWarnings("unchecked") 	public M encode(T object) throws EncodeException;1495868221;@see javax.websocket.Encoder.Text#encode(Object)_@see javax.websocket.Encoder.Binary#encode(Object);@SuppressWarnings("unchecked")_	public M encode(T object) throws EncodeException {_		try {_			return (M) getConversionService().convert(object, getType(), getMessageType())__		}_		catch (ConversionException ex) {_			throw new EncodeException(object, "Unable to encode websocket message using ConversionService", ex)__		}_	};see,javax,websocket,encoder,text,encode,object,see,javax,websocket,encoder,binary,encode,object;suppress,warnings,unchecked,public,m,encode,t,object,throws,encode,exception,try,return,m,get,conversion,service,convert,object,get,type,get,message,type,catch,conversion,exception,ex,throw,new,encode,exception,object,unable,to,encode,websocket,message,using,conversion,service,ex
ConvertingEncoderDecoderSupport -> public boolean willDecode(M bytes);1386087504;@see javax.websocket.Decoder.Text#willDecode(String)_@see javax.websocket.Decoder.Binary#willDecode(ByteBuffer);public boolean willDecode(M bytes) {_		return getConversionService().canConvert(getType(), getMessageType())__	};see,javax,websocket,decoder,text,will,decode,string,see,javax,websocket,decoder,binary,will,decode,byte,buffer;public,boolean,will,decode,m,bytes,return,get,conversion,service,can,convert,get,type,get,message,type
ConvertingEncoderDecoderSupport -> public boolean willDecode(M bytes);1413848647;@see javax.websocket.Decoder.Text#willDecode(String)_@see javax.websocket.Decoder.Binary#willDecode(ByteBuffer);public boolean willDecode(M bytes) {_		return getConversionService().canConvert(getType(), getMessageType())__	};see,javax,websocket,decoder,text,will,decode,string,see,javax,websocket,decoder,binary,will,decode,byte,buffer;public,boolean,will,decode,m,bytes,return,get,conversion,service,can,convert,get,type,get,message,type
ConvertingEncoderDecoderSupport -> public boolean willDecode(M bytes);1427240641;@see javax.websocket.Decoder.Text#willDecode(String)_@see javax.websocket.Decoder.Binary#willDecode(ByteBuffer);public boolean willDecode(M bytes) {_		return getConversionService().canConvert(getType(), getMessageType())__	};see,javax,websocket,decoder,text,will,decode,string,see,javax,websocket,decoder,binary,will,decode,byte,buffer;public,boolean,will,decode,m,bytes,return,get,conversion,service,can,convert,get,type,get,message,type
ConvertingEncoderDecoderSupport -> public boolean willDecode(M bytes);1495868221;@see javax.websocket.Decoder.Text#willDecode(String)_@see javax.websocket.Decoder.Binary#willDecode(ByteBuffer);public boolean willDecode(M bytes) {_		return getConversionService().canConvert(getType(), getMessageType())__	};see,javax,websocket,decoder,text,will,decode,string,see,javax,websocket,decoder,binary,will,decode,byte,buffer;public,boolean,will,decode,m,bytes,return,get,conversion,service,can,convert,get,type,get,message,type
ConvertingEncoderDecoderSupport -> public boolean willDecode(M bytes);1496837955;@see javax.websocket.Decoder.Text#willDecode(String)_@see javax.websocket.Decoder.Binary#willDecode(ByteBuffer);public boolean willDecode(M bytes) {_		return getConversionService().canConvert(getType(), getMessageType())__	};see,javax,websocket,decoder,text,will,decode,string,see,javax,websocket,decoder,binary,will,decode,byte,buffer;public,boolean,will,decode,m,bytes,return,get,conversion,service,can,convert,get,type,get,message,type
ConvertingEncoderDecoderSupport -> public boolean willDecode(M bytes);1520528267;@see javax.websocket.Decoder.Text#willDecode(String)_@see javax.websocket.Decoder.Binary#willDecode(ByteBuffer);public boolean willDecode(M bytes) {_		return getConversionService().canConvert(getType(), getMessageType())__	};see,javax,websocket,decoder,text,will,decode,string,see,javax,websocket,decoder,binary,will,decode,byte,buffer;public,boolean,will,decode,m,bytes,return,get,conversion,service,can,convert,get,type,get,message,type
ConvertingEncoderDecoderSupport -> public boolean willDecode(M bytes);1530174524;Determine if a given message can be decoded._@see #decode(Object)_@see javax.websocket.Decoder.Text#willDecode(String)_@see javax.websocket.Decoder.Binary#willDecode(ByteBuffer);public boolean willDecode(M bytes) {_		return getConversionService().canConvert(getType(), getMessageType())__	};determine,if,a,given,message,can,be,decoded,see,decode,object,see,javax,websocket,decoder,text,will,decode,string,see,javax,websocket,decoder,binary,will,decode,byte,buffer;public,boolean,will,decode,m,bytes,return,get,conversion,service,can,convert,get,type,get,message,type
ConvertingEncoderDecoderSupport -> @Nullable 	protected ApplicationContext getApplicationContext();1495868221;Returns the active {@link ApplicationContext}. Be default this method obtains_the context via {@link ContextLoader#getCurrentWebApplicationContext()}, which_finds the ApplicationContext loaded via {@link ContextLoader} typically in a_Servlet container environment. When not running in a Servlet container and_not using {@link ContextLoader}, this method should be overridden._@return the {@link ApplicationContext} or {@code null};@Nullable_	protected ApplicationContext getApplicationContext() {_		return ContextLoader.getCurrentWebApplicationContext()__	};returns,the,active,link,application,context,be,default,this,method,obtains,the,context,via,link,context,loader,get,current,web,application,context,which,finds,the,application,context,loaded,via,link,context,loader,typically,in,a,servlet,container,environment,when,not,running,in,a,servlet,container,and,not,using,link,context,loader,this,method,should,be,overridden,return,the,link,application,context,or,code,null;nullable,protected,application,context,get,application,context,return,context,loader,get,current,web,application,context
ConvertingEncoderDecoderSupport -> @Nullable 	protected ApplicationContext getApplicationContext();1496837955;Returns the active {@link ApplicationContext}. Be default this method obtains_the context via {@link ContextLoader#getCurrentWebApplicationContext()}, which_finds the ApplicationContext loaded via {@link ContextLoader} typically in a_Servlet container environment. When not running in a Servlet container and_not using {@link ContextLoader}, this method should be overridden._@return the {@link ApplicationContext} or {@code null};@Nullable_	protected ApplicationContext getApplicationContext() {_		return ContextLoader.getCurrentWebApplicationContext()__	};returns,the,active,link,application,context,be,default,this,method,obtains,the,context,via,link,context,loader,get,current,web,application,context,which,finds,the,application,context,loaded,via,link,context,loader,typically,in,a,servlet,container,environment,when,not,running,in,a,servlet,container,and,not,using,link,context,loader,this,method,should,be,overridden,return,the,link,application,context,or,code,null;nullable,protected,application,context,get,application,context,return,context,loader,get,current,web,application,context
ConvertingEncoderDecoderSupport -> @Nullable 	protected ApplicationContext getApplicationContext();1520528267;Returns the active {@link ApplicationContext}. Be default this method obtains_the context via {@link ContextLoader#getCurrentWebApplicationContext()}, which_finds the ApplicationContext loaded via {@link ContextLoader} typically in a_Servlet container environment. When not running in a Servlet container and_not using {@link ContextLoader}, this method should be overridden._@return the {@link ApplicationContext} or {@code null};@Nullable_	protected ApplicationContext getApplicationContext() {_		return ContextLoader.getCurrentWebApplicationContext()__	};returns,the,active,link,application,context,be,default,this,method,obtains,the,context,via,link,context,loader,get,current,web,application,context,which,finds,the,application,context,loaded,via,link,context,loader,typically,in,a,servlet,container,environment,when,not,running,in,a,servlet,container,and,not,using,link,context,loader,this,method,should,be,overridden,return,the,link,application,context,or,code,null;nullable,protected,application,context,get,application,context,return,context,loader,get,current,web,application,context
ConvertingEncoderDecoderSupport -> @Nullable 	protected ApplicationContext getApplicationContext();1530174524;Returns the active {@link ApplicationContext}. Be default this method obtains_the context via {@link ContextLoader#getCurrentWebApplicationContext()}, which_finds the ApplicationContext loaded via {@link ContextLoader} typically in a_Servlet container environment. When not running in a Servlet container and_not using {@link ContextLoader}, this method should be overridden._@return the {@link ApplicationContext} or {@code null};@Nullable_	protected ApplicationContext getApplicationContext() {_		return ContextLoader.getCurrentWebApplicationContext()__	};returns,the,active,link,application,context,be,default,this,method,obtains,the,context,via,link,context,loader,get,current,web,application,context,which,finds,the,application,context,loaded,via,link,context,loader,typically,in,a,servlet,container,environment,when,not,running,in,a,servlet,container,and,not,using,link,context,loader,this,method,should,be,overridden,return,the,link,application,context,or,code,null;nullable,protected,application,context,get,application,context,return,context,loader,get,current,web,application,context
ConvertingEncoderDecoderSupport -> protected TypeDescriptor getType();1386087504;Returns the type being converted. By default the type is resolved using_the generic arguments of the class.;protected TypeDescriptor getType() {_		return TypeDescriptor.valueOf(resolveTypeArguments()[0])__	};returns,the,type,being,converted,by,default,the,type,is,resolved,using,the,generic,arguments,of,the,class;protected,type,descriptor,get,type,return,type,descriptor,value,of,resolve,type,arguments,0
ConvertingEncoderDecoderSupport -> protected TypeDescriptor getType();1413848647;Returns the type being converted. By default the type is resolved using_the generic arguments of the class.;protected TypeDescriptor getType() {_		return TypeDescriptor.valueOf(resolveTypeArguments()[0])__	};returns,the,type,being,converted,by,default,the,type,is,resolved,using,the,generic,arguments,of,the,class;protected,type,descriptor,get,type,return,type,descriptor,value,of,resolve,type,arguments,0
ConvertingEncoderDecoderSupport -> protected TypeDescriptor getType();1427240641;Returns the type being converted. By default the type is resolved using_the generic arguments of the class.;protected TypeDescriptor getType() {_		return TypeDescriptor.valueOf(resolveTypeArguments()[0])__	};returns,the,type,being,converted,by,default,the,type,is,resolved,using,the,generic,arguments,of,the,class;protected,type,descriptor,get,type,return,type,descriptor,value,of,resolve,type,arguments,0
ConvertingEncoderDecoderSupport -> protected TypeDescriptor getType();1495868221;Returns the type being converted. By default the type is resolved using_the generic arguments of the class.;protected TypeDescriptor getType() {_		return TypeDescriptor.valueOf(resolveTypeArguments()[0])__	};returns,the,type,being,converted,by,default,the,type,is,resolved,using,the,generic,arguments,of,the,class;protected,type,descriptor,get,type,return,type,descriptor,value,of,resolve,type,arguments,0
ConvertingEncoderDecoderSupport -> protected TypeDescriptor getType();1496837955;Returns the type being converted. By default the type is resolved using_the generic arguments of the class.;protected TypeDescriptor getType() {_		return TypeDescriptor.valueOf(resolveTypeArguments()[0])__	};returns,the,type,being,converted,by,default,the,type,is,resolved,using,the,generic,arguments,of,the,class;protected,type,descriptor,get,type,return,type,descriptor,value,of,resolve,type,arguments,0
ConvertingEncoderDecoderSupport -> protected TypeDescriptor getType();1520528267;Returns the type being converted. By default the type is resolved using_the generic arguments of the class.;protected TypeDescriptor getType() {_		return TypeDescriptor.valueOf(resolveTypeArguments()[0])__	};returns,the,type,being,converted,by,default,the,type,is,resolved,using,the,generic,arguments,of,the,class;protected,type,descriptor,get,type,return,type,descriptor,value,of,resolve,type,arguments,0
ConvertingEncoderDecoderSupport -> protected TypeDescriptor getType();1530174524;Returns the type being converted. By default the type is resolved using_the generic arguments of the class.;protected TypeDescriptor getType() {_		return TypeDescriptor.valueOf(resolveTypeArguments()[0])__	};returns,the,type,being,converted,by,default,the,type,is,resolved,using,the,generic,arguments,of,the,class;protected,type,descriptor,get,type,return,type,descriptor,value,of,resolve,type,arguments,0
ConvertingEncoderDecoderSupport -> public void init(EndpointConfig config);1386087504;@see javax.websocket.Encoder#init(EndpointConfig)_@see javax.websocket.Decoder#init(EndpointConfig);public void init(EndpointConfig config) {_		ApplicationContext applicationContext = getApplicationContext()__		if (applicationContext != null && applicationContext instanceof ConfigurableApplicationContext) {_			ConfigurableListableBeanFactory beanFactory =_					((ConfigurableApplicationContext) applicationContext).getBeanFactory()__			beanFactory.autowireBean(this)__		}_	};see,javax,websocket,encoder,init,endpoint,config,see,javax,websocket,decoder,init,endpoint,config;public,void,init,endpoint,config,config,application,context,application,context,get,application,context,if,application,context,null,application,context,instanceof,configurable,application,context,configurable,listable,bean,factory,bean,factory,configurable,application,context,application,context,get,bean,factory,bean,factory,autowire,bean,this
ConvertingEncoderDecoderSupport -> public void init(EndpointConfig config);1413848647;@see javax.websocket.Encoder#init(EndpointConfig)_@see javax.websocket.Decoder#init(EndpointConfig);public void init(EndpointConfig config) {_		ApplicationContext applicationContext = getApplicationContext()__		if (applicationContext != null && applicationContext instanceof ConfigurableApplicationContext) {_			ConfigurableListableBeanFactory beanFactory =_					((ConfigurableApplicationContext) applicationContext).getBeanFactory()__			beanFactory.autowireBean(this)__		}_	};see,javax,websocket,encoder,init,endpoint,config,see,javax,websocket,decoder,init,endpoint,config;public,void,init,endpoint,config,config,application,context,application,context,get,application,context,if,application,context,null,application,context,instanceof,configurable,application,context,configurable,listable,bean,factory,bean,factory,configurable,application,context,application,context,get,bean,factory,bean,factory,autowire,bean,this
ConvertingEncoderDecoderSupport -> public void init(EndpointConfig config);1427240641;@see javax.websocket.Encoder#init(EndpointConfig)_@see javax.websocket.Decoder#init(EndpointConfig);public void init(EndpointConfig config) {_		ApplicationContext applicationContext = getApplicationContext()__		if (applicationContext != null && applicationContext instanceof ConfigurableApplicationContext) {_			ConfigurableListableBeanFactory beanFactory =_					((ConfigurableApplicationContext) applicationContext).getBeanFactory()__			beanFactory.autowireBean(this)__		}_	};see,javax,websocket,encoder,init,endpoint,config,see,javax,websocket,decoder,init,endpoint,config;public,void,init,endpoint,config,config,application,context,application,context,get,application,context,if,application,context,null,application,context,instanceof,configurable,application,context,configurable,listable,bean,factory,bean,factory,configurable,application,context,application,context,get,bean,factory,bean,factory,autowire,bean,this
ConvertingEncoderDecoderSupport -> public void init(EndpointConfig config);1495868221;@see javax.websocket.Encoder#init(EndpointConfig)_@see javax.websocket.Decoder#init(EndpointConfig);public void init(EndpointConfig config) {_		ApplicationContext applicationContext = getApplicationContext()__		if (applicationContext != null && applicationContext instanceof ConfigurableApplicationContext) {_			ConfigurableListableBeanFactory beanFactory =_					((ConfigurableApplicationContext) applicationContext).getBeanFactory()__			beanFactory.autowireBean(this)__		}_	};see,javax,websocket,encoder,init,endpoint,config,see,javax,websocket,decoder,init,endpoint,config;public,void,init,endpoint,config,config,application,context,application,context,get,application,context,if,application,context,null,application,context,instanceof,configurable,application,context,configurable,listable,bean,factory,bean,factory,configurable,application,context,application,context,get,bean,factory,bean,factory,autowire,bean,this
ConvertingEncoderDecoderSupport -> public void init(EndpointConfig config);1496837955;@see javax.websocket.Encoder#init(EndpointConfig)_@see javax.websocket.Decoder#init(EndpointConfig);public void init(EndpointConfig config) {_		ApplicationContext applicationContext = getApplicationContext()__		if (applicationContext != null && applicationContext instanceof ConfigurableApplicationContext) {_			ConfigurableListableBeanFactory beanFactory =_					((ConfigurableApplicationContext) applicationContext).getBeanFactory()__			beanFactory.autowireBean(this)__		}_	};see,javax,websocket,encoder,init,endpoint,config,see,javax,websocket,decoder,init,endpoint,config;public,void,init,endpoint,config,config,application,context,application,context,get,application,context,if,application,context,null,application,context,instanceof,configurable,application,context,configurable,listable,bean,factory,bean,factory,configurable,application,context,application,context,get,bean,factory,bean,factory,autowire,bean,this
ConvertingEncoderDecoderSupport -> public void init(EndpointConfig config);1520528267;@see javax.websocket.Encoder#init(EndpointConfig)_@see javax.websocket.Decoder#init(EndpointConfig);public void init(EndpointConfig config) {_		ApplicationContext applicationContext = getApplicationContext()__		if (applicationContext != null && applicationContext instanceof ConfigurableApplicationContext) {_			ConfigurableListableBeanFactory beanFactory =_					((ConfigurableApplicationContext) applicationContext).getBeanFactory()__			beanFactory.autowireBean(this)__		}_	};see,javax,websocket,encoder,init,endpoint,config,see,javax,websocket,decoder,init,endpoint,config;public,void,init,endpoint,config,config,application,context,application,context,get,application,context,if,application,context,null,application,context,instanceof,configurable,application,context,configurable,listable,bean,factory,bean,factory,configurable,application,context,application,context,get,bean,factory,bean,factory,autowire,bean,this
ConvertingEncoderDecoderSupport -> public void init(EndpointConfig config);1530174524;Called to initialize the encoder/decoder._@see javax.websocket.Encoder#init(EndpointConfig)_@see javax.websocket.Decoder#init(EndpointConfig);public void init(EndpointConfig config) {_		ApplicationContext applicationContext = getApplicationContext()__		if (applicationContext != null && applicationContext instanceof ConfigurableApplicationContext) {_			ConfigurableListableBeanFactory beanFactory =_					((ConfigurableApplicationContext) applicationContext).getBeanFactory()__			beanFactory.autowireBean(this)__		}_	};called,to,initialize,the,encoder,decoder,see,javax,websocket,encoder,init,endpoint,config,see,javax,websocket,decoder,init,endpoint,config;public,void,init,endpoint,config,config,application,context,application,context,get,application,context,if,application,context,null,application,context,instanceof,configurable,application,context,configurable,listable,bean,factory,bean,factory,configurable,application,context,application,context,get,bean,factory,bean,factory,autowire,bean,this
ConvertingEncoderDecoderSupport -> public void destroy();1386087504;@see javax.websocket.Encoder#destroy()_@see javax.websocket.Decoder#destroy();public void destroy() {_	};see,javax,websocket,encoder,destroy,see,javax,websocket,decoder,destroy;public,void,destroy
ConvertingEncoderDecoderSupport -> public void destroy();1413848647;@see javax.websocket.Encoder#destroy()_@see javax.websocket.Decoder#destroy();public void destroy() {_	};see,javax,websocket,encoder,destroy,see,javax,websocket,decoder,destroy;public,void,destroy
ConvertingEncoderDecoderSupport -> public void destroy();1427240641;@see javax.websocket.Encoder#destroy()_@see javax.websocket.Decoder#destroy();public void destroy() {_	};see,javax,websocket,encoder,destroy,see,javax,websocket,decoder,destroy;public,void,destroy
ConvertingEncoderDecoderSupport -> public void destroy();1495868221;@see javax.websocket.Encoder#destroy()_@see javax.websocket.Decoder#destroy();public void destroy() {_	};see,javax,websocket,encoder,destroy,see,javax,websocket,decoder,destroy;public,void,destroy
ConvertingEncoderDecoderSupport -> public void destroy();1496837955;@see javax.websocket.Encoder#destroy()_@see javax.websocket.Decoder#destroy();public void destroy() {_	};see,javax,websocket,encoder,destroy,see,javax,websocket,decoder,destroy;public,void,destroy
ConvertingEncoderDecoderSupport -> public void destroy();1520528267;@see javax.websocket.Encoder#destroy()_@see javax.websocket.Decoder#destroy();public void destroy() {_	};see,javax,websocket,encoder,destroy,see,javax,websocket,decoder,destroy;public,void,destroy
ConvertingEncoderDecoderSupport -> public void destroy();1530174524;Called to destroy the encoder/decoder._@see javax.websocket.Encoder#destroy()_@see javax.websocket.Decoder#destroy();public void destroy() {_	};called,to,destroy,the,encoder,decoder,see,javax,websocket,encoder,destroy,see,javax,websocket,decoder,destroy;public,void,destroy
ConvertingEncoderDecoderSupport -> @SuppressWarnings("unchecked") 	public T decode(M message) throws DecodeException;1386087504;@see javax.websocket.Decoder.Text#decode(String)_@see javax.websocket.Decoder.Binary#decode(ByteBuffer);@SuppressWarnings("unchecked")_	public T decode(M message) throws DecodeException {_		try {_			return (T) getConversionService().convert(message, getMessageType(), getType())__		}_		catch (ConversionException ex) {_			if (message instanceof String) {_				throw new DecodeException((String) message,_						"Unable to decode websocket message using ConversionService", ex)__			}_			if (message instanceof ByteBuffer) {_				throw new DecodeException((ByteBuffer) message,_						"Unable to decode websocket message using ConversionService", ex)__			}_			throw ex__		}_	};see,javax,websocket,decoder,text,decode,string,see,javax,websocket,decoder,binary,decode,byte,buffer;suppress,warnings,unchecked,public,t,decode,m,message,throws,decode,exception,try,return,t,get,conversion,service,convert,message,get,message,type,get,type,catch,conversion,exception,ex,if,message,instanceof,string,throw,new,decode,exception,string,message,unable,to,decode,websocket,message,using,conversion,service,ex,if,message,instanceof,byte,buffer,throw,new,decode,exception,byte,buffer,message,unable,to,decode,websocket,message,using,conversion,service,ex,throw,ex
ConvertingEncoderDecoderSupport -> @SuppressWarnings("unchecked") 	public T decode(M message) throws DecodeException;1413848647;@see javax.websocket.Decoder.Text#decode(String)_@see javax.websocket.Decoder.Binary#decode(ByteBuffer);@SuppressWarnings("unchecked")_	public T decode(M message) throws DecodeException {_		try {_			return (T) getConversionService().convert(message, getMessageType(), getType())__		}_		catch (ConversionException ex) {_			if (message instanceof String) {_				throw new DecodeException((String) message,_						"Unable to decode websocket message using ConversionService", ex)__			}_			if (message instanceof ByteBuffer) {_				throw new DecodeException((ByteBuffer) message,_						"Unable to decode websocket message using ConversionService", ex)__			}_			throw ex__		}_	};see,javax,websocket,decoder,text,decode,string,see,javax,websocket,decoder,binary,decode,byte,buffer;suppress,warnings,unchecked,public,t,decode,m,message,throws,decode,exception,try,return,t,get,conversion,service,convert,message,get,message,type,get,type,catch,conversion,exception,ex,if,message,instanceof,string,throw,new,decode,exception,string,message,unable,to,decode,websocket,message,using,conversion,service,ex,if,message,instanceof,byte,buffer,throw,new,decode,exception,byte,buffer,message,unable,to,decode,websocket,message,using,conversion,service,ex,throw,ex
ConvertingEncoderDecoderSupport -> @SuppressWarnings("unchecked") 	public T decode(M message) throws DecodeException;1427240641;@see javax.websocket.Decoder.Text#decode(String)_@see javax.websocket.Decoder.Binary#decode(ByteBuffer);@SuppressWarnings("unchecked")_	public T decode(M message) throws DecodeException {_		try {_			return (T) getConversionService().convert(message, getMessageType(), getType())__		}_		catch (ConversionException ex) {_			if (message instanceof String) {_				throw new DecodeException((String) message,_						"Unable to decode websocket message using ConversionService", ex)__			}_			if (message instanceof ByteBuffer) {_				throw new DecodeException((ByteBuffer) message,_						"Unable to decode websocket message using ConversionService", ex)__			}_			throw ex__		}_	};see,javax,websocket,decoder,text,decode,string,see,javax,websocket,decoder,binary,decode,byte,buffer;suppress,warnings,unchecked,public,t,decode,m,message,throws,decode,exception,try,return,t,get,conversion,service,convert,message,get,message,type,get,type,catch,conversion,exception,ex,if,message,instanceof,string,throw,new,decode,exception,string,message,unable,to,decode,websocket,message,using,conversion,service,ex,if,message,instanceof,byte,buffer,throw,new,decode,exception,byte,buffer,message,unable,to,decode,websocket,message,using,conversion,service,ex,throw,ex
ConvertingEncoderDecoderSupport -> @SuppressWarnings("unchecked") 	public T decode(M message) throws DecodeException;1495868221;@see javax.websocket.Decoder.Text#decode(String)_@see javax.websocket.Decoder.Binary#decode(ByteBuffer);@SuppressWarnings("unchecked")_	public T decode(M message) throws DecodeException {_		try {_			return (T) getConversionService().convert(message, getMessageType(), getType())__		}_		catch (ConversionException ex) {_			if (message instanceof String) {_				throw new DecodeException((String) message,_						"Unable to decode websocket message using ConversionService", ex)__			}_			if (message instanceof ByteBuffer) {_				throw new DecodeException((ByteBuffer) message,_						"Unable to decode websocket message using ConversionService", ex)__			}_			throw ex__		}_	};see,javax,websocket,decoder,text,decode,string,see,javax,websocket,decoder,binary,decode,byte,buffer;suppress,warnings,unchecked,public,t,decode,m,message,throws,decode,exception,try,return,t,get,conversion,service,convert,message,get,message,type,get,type,catch,conversion,exception,ex,if,message,instanceof,string,throw,new,decode,exception,string,message,unable,to,decode,websocket,message,using,conversion,service,ex,if,message,instanceof,byte,buffer,throw,new,decode,exception,byte,buffer,message,unable,to,decode,websocket,message,using,conversion,service,ex,throw,ex
