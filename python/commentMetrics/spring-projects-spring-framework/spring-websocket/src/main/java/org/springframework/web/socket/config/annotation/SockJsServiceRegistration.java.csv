# id;timestamp;commentText;codeText;commentWords;codeWords
SockJsServiceRegistration -> public SockJsServiceRegistration setSupressCors(boolean suppressCors);1414354853;This option can be used to disable automatic addition of CORS headers for_SockJS requests._<p>The default value is "false"._@since 4.1.2;public SockJsServiceRegistration setSupressCors(boolean suppressCors) {_		this.suppressCors = suppressCors__		return this__	};this,option,can,be,used,to,disable,automatic,addition,of,cors,headers,for,sock,js,requests,p,the,default,value,is,false,since,4,1,2;public,sock,js,service,registration,set,supress,cors,boolean,suppress,cors,this,suppress,cors,suppress,cors,return,this
SockJsServiceRegistration -> public SockJsServiceRegistration setSupressCors(boolean suppressCors);1424248215;This option can be used to disable automatic addition of CORS headers for_SockJS requests._<p>The default value is "false"._@since 4.1.2;public SockJsServiceRegistration setSupressCors(boolean suppressCors) {_		this.suppressCors = suppressCors__		return this__	};this,option,can,be,used,to,disable,automatic,addition,of,cors,headers,for,sock,js,requests,p,the,default,value,is,false,since,4,1,2;public,sock,js,service,registration,set,supress,cors,boolean,suppress,cors,this,suppress,cors,suppress,cors,return,this
SockJsServiceRegistration -> public SockJsServiceRegistration setSupressCors(boolean suppressCors);1467730834;This option can be used to disable automatic addition of CORS headers for_SockJS requests._<p>The default value is "false"._@since 4.1.2;public SockJsServiceRegistration setSupressCors(boolean suppressCors) {_		this.suppressCors = suppressCors__		return this__	};this,option,can,be,used,to,disable,automatic,addition,of,cors,headers,for,sock,js,requests,p,the,default,value,is,false,since,4,1,2;public,sock,js,service,registration,set,supress,cors,boolean,suppress,cors,this,suppress,cors,suppress,cors,return,this
SockJsServiceRegistration -> public SockJsServiceRegistration setSupressCors(boolean suppressCors);1491937719;This option can be used to disable automatic addition of CORS headers for_SockJS requests._<p>The default value is "false"._@since 4.1.2;public SockJsServiceRegistration setSupressCors(boolean suppressCors) {_		this.suppressCors = suppressCors__		return this__	};this,option,can,be,used,to,disable,automatic,addition,of,cors,headers,for,sock,js,requests,p,the,default,value,is,false,since,4,1,2;public,sock,js,service,registration,set,supress,cors,boolean,suppress,cors,this,suppress,cors,suppress,cors,return,this
SockJsServiceRegistration -> public SockJsServiceRegistration setSupressCors(boolean suppressCors);1491946901;This option can be used to disable automatic addition of CORS headers for_SockJS requests._<p>The default value is "false"._@since 4.1.2;public SockJsServiceRegistration setSupressCors(boolean suppressCors) {_		this.suppressCors = suppressCors__		return this__	};this,option,can,be,used,to,disable,automatic,addition,of,cors,headers,for,sock,js,requests,p,the,default,value,is,false,since,4,1,2;public,sock,js,service,registration,set,supress,cors,boolean,suppress,cors,this,suppress,cors,suppress,cors,return,this
SockJsServiceRegistration -> public SockJsServiceRegistration setSupressCors(boolean suppressCors);1496837955;This option can be used to disable automatic addition of CORS headers for_SockJS requests._<p>The default value is "false"._@since 4.1.2;public SockJsServiceRegistration setSupressCors(boolean suppressCors) {_		this.suppressCors = suppressCors__		return this__	};this,option,can,be,used,to,disable,automatic,addition,of,cors,headers,for,sock,js,requests,p,the,default,value,is,false,since,4,1,2;public,sock,js,service,registration,set,supress,cors,boolean,suppress,cors,this,suppress,cors,suppress,cors,return,this
SockJsServiceRegistration -> public SockJsServiceRegistration setSupressCors(boolean suppressCors);1498780456;This option can be used to disable automatic addition of CORS headers for_SockJS requests._<p>The default value is "false"._@since 4.1.2;public SockJsServiceRegistration setSupressCors(boolean suppressCors) {_		this.suppressCors = suppressCors__		return this__	};this,option,can,be,used,to,disable,automatic,addition,of,cors,headers,for,sock,js,requests,p,the,default,value,is,false,since,4,1,2;public,sock,js,service,registration,set,supress,cors,boolean,suppress,cors,this,suppress,cors,suppress,cors,return,this
SockJsServiceRegistration -> public SockJsServiceRegistration setSupressCors(boolean suppressCors);1530174524;This option can be used to disable automatic addition of CORS headers for_SockJS requests._<p>The default value is "false"._@since 4.1.2;public SockJsServiceRegistration setSupressCors(boolean suppressCors) {_		this.suppressCors = suppressCors__		return this__	};this,option,can,be,used,to,disable,automatic,addition,of,cors,headers,for,sock,js,requests,p,the,default,value,is,false,since,4,1,2;public,sock,js,service,registration,set,supress,cors,boolean,suppress,cors,this,suppress,cors,suppress,cors,return,this
SockJsServiceRegistration -> public SockJsServiceRegistration setSupressCors(boolean suppressCors);1531321803;This option can be used to disable automatic addition of CORS headers for_SockJS requests._<p>The default value is "false"._@since 4.1.2;public SockJsServiceRegistration setSupressCors(boolean suppressCors) {_		this.suppressCors = suppressCors__		return this__	};this,option,can,be,used,to,disable,automatic,addition,of,cors,headers,for,sock,js,requests,p,the,default,value,is,false,since,4,1,2;public,sock,js,service,registration,set,supress,cors,boolean,suppress,cors,this,suppress,cors,suppress,cors,return,this
SockJsServiceRegistration -> public SockJsServiceRegistration setTaskScheduler(TaskScheduler scheduler);1491946901;A scheduler instance to use for scheduling SockJS heart-beats.;public SockJsServiceRegistration setTaskScheduler(TaskScheduler scheduler) {_		Assert.notNull(scheduler, "TaskScheduler is required.")__		this.scheduler = scheduler__		return this__	};a,scheduler,instance,to,use,for,scheduling,sock,js,heart,beats;public,sock,js,service,registration,set,task,scheduler,task,scheduler,scheduler,assert,not,null,scheduler,task,scheduler,is,required,this,scheduler,scheduler,return,this
SockJsServiceRegistration -> public SockJsServiceRegistration setTaskScheduler(TaskScheduler scheduler);1496837955;A scheduler instance to use for scheduling SockJS heart-beats.;public SockJsServiceRegistration setTaskScheduler(TaskScheduler scheduler) {_		Assert.notNull(scheduler, "TaskScheduler is required.")__		this.scheduler = scheduler__		return this__	};a,scheduler,instance,to,use,for,scheduling,sock,js,heart,beats;public,sock,js,service,registration,set,task,scheduler,task,scheduler,scheduler,assert,not,null,scheduler,task,scheduler,is,required,this,scheduler,scheduler,return,this
SockJsServiceRegistration -> public SockJsServiceRegistration setTaskScheduler(TaskScheduler scheduler);1498780456;A scheduler instance to use for scheduling SockJS heart-beats.;public SockJsServiceRegistration setTaskScheduler(TaskScheduler scheduler) {_		Assert.notNull(scheduler, "TaskScheduler is required")__		this.scheduler = scheduler__		return this__	};a,scheduler,instance,to,use,for,scheduling,sock,js,heart,beats;public,sock,js,service,registration,set,task,scheduler,task,scheduler,scheduler,assert,not,null,scheduler,task,scheduler,is,required,this,scheduler,scheduler,return,this
SockJsServiceRegistration -> public SockJsServiceRegistration setTaskScheduler(TaskScheduler scheduler);1530174524;A scheduler instance to use for scheduling SockJS heart-beats.;public SockJsServiceRegistration setTaskScheduler(TaskScheduler scheduler) {_		Assert.notNull(scheduler, "TaskScheduler is required")__		this.scheduler = scheduler__		return this__	};a,scheduler,instance,to,use,for,scheduling,sock,js,heart,beats;public,sock,js,service,registration,set,task,scheduler,task,scheduler,scheduler,assert,not,null,scheduler,task,scheduler,is,required,this,scheduler,scheduler,return,this
SockJsServiceRegistration -> public SockJsServiceRegistration setTaskScheduler(TaskScheduler scheduler);1531321803;A scheduler instance to use for scheduling SockJS heart-beats.;public SockJsServiceRegistration setTaskScheduler(TaskScheduler scheduler) {_		Assert.notNull(scheduler, "TaskScheduler is required")__		this.scheduler = scheduler__		return this__	};a,scheduler,instance,to,use,for,scheduling,sock,js,heart,beats;public,sock,js,service,registration,set,task,scheduler,task,scheduler,scheduler,assert,not,null,scheduler,task,scheduler,is,required,this,scheduler,scheduler,return,this
SockJsServiceRegistration -> protected SockJsServiceRegistration setAllowedOrigins(String... origins);1414354684;@since 4.1.2;protected SockJsServiceRegistration setAllowedOrigins(String... origins) {_		this.allowedOrigins.clear()__		if (!ObjectUtils.isEmpty(origins)) {_			this.allowedOrigins.addAll(Arrays.asList(origins))__		}_		return this__	};since,4,1,2;protected,sock,js,service,registration,set,allowed,origins,string,origins,this,allowed,origins,clear,if,object,utils,is,empty,origins,this,allowed,origins,add,all,arrays,as,list,origins,return,this
SockJsServiceRegistration -> protected SockJsServiceRegistration setAllowedOrigins(String... origins);1414354853;@since 4.1.2;protected SockJsServiceRegistration setAllowedOrigins(String... origins) {_		this.allowedOrigins.clear()__		if (!ObjectUtils.isEmpty(origins)) {_			this.allowedOrigins.addAll(Arrays.asList(origins))__		}_		return this__	};since,4,1,2;protected,sock,js,service,registration,set,allowed,origins,string,origins,this,allowed,origins,clear,if,object,utils,is,empty,origins,this,allowed,origins,add,all,arrays,as,list,origins,return,this
SockJsServiceRegistration -> public SockJsServiceRegistration setWebSocketEnabled(boolean webSocketEnabled);1386024878;Some load balancers don't support WebSocket. This option can be used to_disable the WebSocket transport on the server side._<p>The default value is "true".;public SockJsServiceRegistration setWebSocketEnabled(boolean webSocketEnabled) {_		this.webSocketEnabled = webSocketEnabled__		return this__	};some,load,balancers,don,t,support,web,socket,this,option,can,be,used,to,disable,the,web,socket,transport,on,the,server,side,p,the,default,value,is,true;public,sock,js,service,registration,set,web,socket,enabled,boolean,web,socket,enabled,this,web,socket,enabled,web,socket,enabled,return,this
SockJsServiceRegistration -> public SockJsServiceRegistration setWebSocketEnabled(boolean webSocketEnabled);1386462352;Some load balancers don't support WebSocket. This option can be used to_disable the WebSocket transport on the server side._<p>The default value is "true".;public SockJsServiceRegistration setWebSocketEnabled(boolean webSocketEnabled) {_		this.webSocketEnabled = webSocketEnabled__		return this__	};some,load,balancers,don,t,support,web,socket,this,option,can,be,used,to,disable,the,web,socket,transport,on,the,server,side,p,the,default,value,is,true;public,sock,js,service,registration,set,web,socket,enabled,boolean,web,socket,enabled,this,web,socket,enabled,web,socket,enabled,return,this
SockJsServiceRegistration -> public SockJsServiceRegistration setWebSocketEnabled(boolean webSocketEnabled);1395630903;Some load balancers don't support WebSocket. This option can be used to_disable the WebSocket transport on the server side._<p>The default value is "true".;public SockJsServiceRegistration setWebSocketEnabled(boolean webSocketEnabled) {_		this.webSocketEnabled = webSocketEnabled__		return this__	};some,load,balancers,don,t,support,web,socket,this,option,can,be,used,to,disable,the,web,socket,transport,on,the,server,side,p,the,default,value,is,true;public,sock,js,service,registration,set,web,socket,enabled,boolean,web,socket,enabled,this,web,socket,enabled,web,socket,enabled,return,this
SockJsServiceRegistration -> public SockJsServiceRegistration setWebSocketEnabled(boolean webSocketEnabled);1402065124;Some load balancers don't support WebSocket. This option can be used to_disable the WebSocket transport on the server side._<p>The default value is "true".;public SockJsServiceRegistration setWebSocketEnabled(boolean webSocketEnabled) {_		this.webSocketEnabled = webSocketEnabled__		return this__	};some,load,balancers,don,t,support,web,socket,this,option,can,be,used,to,disable,the,web,socket,transport,on,the,server,side,p,the,default,value,is,true;public,sock,js,service,registration,set,web,socket,enabled,boolean,web,socket,enabled,this,web,socket,enabled,web,socket,enabled,return,this
SockJsServiceRegistration -> public SockJsServiceRegistration setWebSocketEnabled(boolean webSocketEnabled);1408994390;Some load balancers don't support WebSocket. This option can be used to_disable the WebSocket transport on the server side._<p>The default value is "true".;public SockJsServiceRegistration setWebSocketEnabled(boolean webSocketEnabled) {_		this.webSocketEnabled = webSocketEnabled__		return this__	};some,load,balancers,don,t,support,web,socket,this,option,can,be,used,to,disable,the,web,socket,transport,on,the,server,side,p,the,default,value,is,true;public,sock,js,service,registration,set,web,socket,enabled,boolean,web,socket,enabled,this,web,socket,enabled,web,socket,enabled,return,this
SockJsServiceRegistration -> public SockJsServiceRegistration setWebSocketEnabled(boolean webSocketEnabled);1411760528;Some load balancers don't support WebSocket. This option can be used to_disable the WebSocket transport on the server side._<p>The default value is "true".;public SockJsServiceRegistration setWebSocketEnabled(boolean webSocketEnabled) {_		this.webSocketEnabled = webSocketEnabled__		return this__	};some,load,balancers,don,t,support,web,socket,this,option,can,be,used,to,disable,the,web,socket,transport,on,the,server,side,p,the,default,value,is,true;public,sock,js,service,registration,set,web,socket,enabled,boolean,web,socket,enabled,this,web,socket,enabled,web,socket,enabled,return,this
SockJsServiceRegistration -> public SockJsServiceRegistration setWebSocketEnabled(boolean webSocketEnabled);1411763921;Some load balancers don't support WebSocket. This option can be used to_disable the WebSocket transport on the server side._<p>The default value is "true".;public SockJsServiceRegistration setWebSocketEnabled(boolean webSocketEnabled) {_		this.webSocketEnabled = webSocketEnabled__		return this__	};some,load,balancers,don,t,support,web,socket,this,option,can,be,used,to,disable,the,web,socket,transport,on,the,server,side,p,the,default,value,is,true;public,sock,js,service,registration,set,web,socket,enabled,boolean,web,socket,enabled,this,web,socket,enabled,web,socket,enabled,return,this
SockJsServiceRegistration -> public SockJsServiceRegistration setWebSocketEnabled(boolean webSocketEnabled);1413848647;Some load balancers don't support WebSocket. This option can be used to_disable the WebSocket transport on the server side._<p>The default value is "true".;public SockJsServiceRegistration setWebSocketEnabled(boolean webSocketEnabled) {_		this.webSocketEnabled = webSocketEnabled__		return this__	};some,load,balancers,don,t,support,web,socket,this,option,can,be,used,to,disable,the,web,socket,transport,on,the,server,side,p,the,default,value,is,true;public,sock,js,service,registration,set,web,socket,enabled,boolean,web,socket,enabled,this,web,socket,enabled,web,socket,enabled,return,this
SockJsServiceRegistration -> public SockJsServiceRegistration setWebSocketEnabled(boolean webSocketEnabled);1414354684;Some load balancers don't support WebSocket. This option can be used to_disable the WebSocket transport on the server side._<p>The default value is "true".;public SockJsServiceRegistration setWebSocketEnabled(boolean webSocketEnabled) {_		this.webSocketEnabled = webSocketEnabled__		return this__	};some,load,balancers,don,t,support,web,socket,this,option,can,be,used,to,disable,the,web,socket,transport,on,the,server,side,p,the,default,value,is,true;public,sock,js,service,registration,set,web,socket,enabled,boolean,web,socket,enabled,this,web,socket,enabled,web,socket,enabled,return,this
SockJsServiceRegistration -> public SockJsServiceRegistration setWebSocketEnabled(boolean webSocketEnabled);1414354853;Some load balancers don't support WebSocket. This option can be used to_disable the WebSocket transport on the server side._<p>The default value is "true".;public SockJsServiceRegistration setWebSocketEnabled(boolean webSocketEnabled) {_		this.webSocketEnabled = webSocketEnabled__		return this__	};some,load,balancers,don,t,support,web,socket,this,option,can,be,used,to,disable,the,web,socket,transport,on,the,server,side,p,the,default,value,is,true;public,sock,js,service,registration,set,web,socket,enabled,boolean,web,socket,enabled,this,web,socket,enabled,web,socket,enabled,return,this
SockJsServiceRegistration -> public SockJsServiceRegistration setWebSocketEnabled(boolean webSocketEnabled);1424248215;Some load balancers don't support WebSocket. This option can be used to_disable the WebSocket transport on the server side._<p>The default value is "true".;public SockJsServiceRegistration setWebSocketEnabled(boolean webSocketEnabled) {_		this.webSocketEnabled = webSocketEnabled__		return this__	};some,load,balancers,don,t,support,web,socket,this,option,can,be,used,to,disable,the,web,socket,transport,on,the,server,side,p,the,default,value,is,true;public,sock,js,service,registration,set,web,socket,enabled,boolean,web,socket,enabled,this,web,socket,enabled,web,socket,enabled,return,this
SockJsServiceRegistration -> public SockJsServiceRegistration setWebSocketEnabled(boolean webSocketEnabled);1467730834;Some load balancers don't support WebSocket. This option can be used to_disable the WebSocket transport on the server side._<p>The default value is "true".;public SockJsServiceRegistration setWebSocketEnabled(boolean webSocketEnabled) {_		this.webSocketEnabled = webSocketEnabled__		return this__	};some,load,balancers,don,t,support,web,socket,this,option,can,be,used,to,disable,the,web,socket,transport,on,the,server,side,p,the,default,value,is,true;public,sock,js,service,registration,set,web,socket,enabled,boolean,web,socket,enabled,this,web,socket,enabled,web,socket,enabled,return,this
SockJsServiceRegistration -> public SockJsServiceRegistration setWebSocketEnabled(boolean webSocketEnabled);1491937719;Some load balancers don't support WebSocket. This option can be used to_disable the WebSocket transport on the server side._<p>The default value is "true".;public SockJsServiceRegistration setWebSocketEnabled(boolean webSocketEnabled) {_		this.webSocketEnabled = webSocketEnabled__		return this__	};some,load,balancers,don,t,support,web,socket,this,option,can,be,used,to,disable,the,web,socket,transport,on,the,server,side,p,the,default,value,is,true;public,sock,js,service,registration,set,web,socket,enabled,boolean,web,socket,enabled,this,web,socket,enabled,web,socket,enabled,return,this
SockJsServiceRegistration -> public SockJsServiceRegistration setWebSocketEnabled(boolean webSocketEnabled);1491946901;Some load balancers don't support WebSocket. This option can be used to_disable the WebSocket transport on the server side._<p>The default value is "true".;public SockJsServiceRegistration setWebSocketEnabled(boolean webSocketEnabled) {_		this.webSocketEnabled = webSocketEnabled__		return this__	};some,load,balancers,don,t,support,web,socket,this,option,can,be,used,to,disable,the,web,socket,transport,on,the,server,side,p,the,default,value,is,true;public,sock,js,service,registration,set,web,socket,enabled,boolean,web,socket,enabled,this,web,socket,enabled,web,socket,enabled,return,this
SockJsServiceRegistration -> public SockJsServiceRegistration setWebSocketEnabled(boolean webSocketEnabled);1496837955;Some load balancers don't support WebSocket. This option can be used to_disable the WebSocket transport on the server side._<p>The default value is "true".;public SockJsServiceRegistration setWebSocketEnabled(boolean webSocketEnabled) {_		this.webSocketEnabled = webSocketEnabled__		return this__	};some,load,balancers,don,t,support,web,socket,this,option,can,be,used,to,disable,the,web,socket,transport,on,the,server,side,p,the,default,value,is,true;public,sock,js,service,registration,set,web,socket,enabled,boolean,web,socket,enabled,this,web,socket,enabled,web,socket,enabled,return,this
SockJsServiceRegistration -> public SockJsServiceRegistration setWebSocketEnabled(boolean webSocketEnabled);1498780456;Some load balancers don't support WebSocket. This option can be used to_disable the WebSocket transport on the server side._<p>The default value is "true".;public SockJsServiceRegistration setWebSocketEnabled(boolean webSocketEnabled) {_		this.webSocketEnabled = webSocketEnabled__		return this__	};some,load,balancers,don,t,support,web,socket,this,option,can,be,used,to,disable,the,web,socket,transport,on,the,server,side,p,the,default,value,is,true;public,sock,js,service,registration,set,web,socket,enabled,boolean,web,socket,enabled,this,web,socket,enabled,web,socket,enabled,return,this
SockJsServiceRegistration -> public SockJsServiceRegistration setWebSocketEnabled(boolean webSocketEnabled);1530174524;Some load balancers don't support WebSocket. This option can be used to_disable the WebSocket transport on the server side._<p>The default value is "true".;public SockJsServiceRegistration setWebSocketEnabled(boolean webSocketEnabled) {_		this.webSocketEnabled = webSocketEnabled__		return this__	};some,load,balancers,don,t,support,web,socket,this,option,can,be,used,to,disable,the,web,socket,transport,on,the,server,side,p,the,default,value,is,true;public,sock,js,service,registration,set,web,socket,enabled,boolean,web,socket,enabled,this,web,socket,enabled,web,socket,enabled,return,this
SockJsServiceRegistration -> public SockJsServiceRegistration setWebSocketEnabled(boolean webSocketEnabled);1531321803;Some load balancers don't support WebSocket. This option can be used to_disable the WebSocket transport on the server side._<p>The default value is "true".;public SockJsServiceRegistration setWebSocketEnabled(boolean webSocketEnabled) {_		this.webSocketEnabled = webSocketEnabled__		return this__	};some,load,balancers,don,t,support,web,socket,this,option,can,be,used,to,disable,the,web,socket,transport,on,the,server,side,p,the,default,value,is,true;public,sock,js,service,registration,set,web,socket,enabled,boolean,web,socket,enabled,this,web,socket,enabled,web,socket,enabled,return,this
SockJsServiceRegistration -> protected SockJsServiceRegistration setAllowedOrigins(String... allowedOrigins);1424248215;@since 4.1.2;protected SockJsServiceRegistration setAllowedOrigins(String... allowedOrigins) {_		this.allowedOrigins.clear()__		if (!ObjectUtils.isEmpty(allowedOrigins)) {_			this.allowedOrigins.addAll(Arrays.asList(allowedOrigins))__		}_		return this__	};since,4,1,2;protected,sock,js,service,registration,set,allowed,origins,string,allowed,origins,this,allowed,origins,clear,if,object,utils,is,empty,allowed,origins,this,allowed,origins,add,all,arrays,as,list,allowed,origins,return,this
SockJsServiceRegistration -> protected SockJsServiceRegistration setAllowedOrigins(String... allowedOrigins);1467730834;@since 4.1.2;protected SockJsServiceRegistration setAllowedOrigins(String... allowedOrigins) {_		this.allowedOrigins.clear()__		if (!ObjectUtils.isEmpty(allowedOrigins)) {_			this.allowedOrigins.addAll(Arrays.asList(allowedOrigins))__		}_		return this__	};since,4,1,2;protected,sock,js,service,registration,set,allowed,origins,string,allowed,origins,this,allowed,origins,clear,if,object,utils,is,empty,allowed,origins,this,allowed,origins,add,all,arrays,as,list,allowed,origins,return,this
SockJsServiceRegistration -> protected SockJsServiceRegistration setAllowedOrigins(String... allowedOrigins);1491937719;@since 4.1.2;protected SockJsServiceRegistration setAllowedOrigins(String... allowedOrigins) {_		this.allowedOrigins.clear()__		if (!ObjectUtils.isEmpty(allowedOrigins)) {_			this.allowedOrigins.addAll(Arrays.asList(allowedOrigins))__		}_		return this__	};since,4,1,2;protected,sock,js,service,registration,set,allowed,origins,string,allowed,origins,this,allowed,origins,clear,if,object,utils,is,empty,allowed,origins,this,allowed,origins,add,all,arrays,as,list,allowed,origins,return,this
SockJsServiceRegistration -> protected SockJsServiceRegistration setAllowedOrigins(String... allowedOrigins);1491946901;@since 4.1.2;protected SockJsServiceRegistration setAllowedOrigins(String... allowedOrigins) {_		this.allowedOrigins.clear()__		if (!ObjectUtils.isEmpty(allowedOrigins)) {_			this.allowedOrigins.addAll(Arrays.asList(allowedOrigins))__		}_		return this__	};since,4,1,2;protected,sock,js,service,registration,set,allowed,origins,string,allowed,origins,this,allowed,origins,clear,if,object,utils,is,empty,allowed,origins,this,allowed,origins,add,all,arrays,as,list,allowed,origins,return,this
SockJsServiceRegistration -> protected SockJsServiceRegistration setAllowedOrigins(String... allowedOrigins);1496837955;@since 4.1.2;protected SockJsServiceRegistration setAllowedOrigins(String... allowedOrigins) {_		this.allowedOrigins.clear()__		if (!ObjectUtils.isEmpty(allowedOrigins)) {_			this.allowedOrigins.addAll(Arrays.asList(allowedOrigins))__		}_		return this__	};since,4,1,2;protected,sock,js,service,registration,set,allowed,origins,string,allowed,origins,this,allowed,origins,clear,if,object,utils,is,empty,allowed,origins,this,allowed,origins,add,all,arrays,as,list,allowed,origins,return,this
SockJsServiceRegistration -> protected SockJsServiceRegistration setAllowedOrigins(String... allowedOrigins);1498780456;@since 4.1.2;protected SockJsServiceRegistration setAllowedOrigins(String... allowedOrigins) {_		this.allowedOrigins.clear()__		if (!ObjectUtils.isEmpty(allowedOrigins)) {_			this.allowedOrigins.addAll(Arrays.asList(allowedOrigins))__		}_		return this__	};since,4,1,2;protected,sock,js,service,registration,set,allowed,origins,string,allowed,origins,this,allowed,origins,clear,if,object,utils,is,empty,allowed,origins,this,allowed,origins,add,all,arrays,as,list,allowed,origins,return,this
SockJsServiceRegistration -> protected SockJsServiceRegistration setAllowedOrigins(String... allowedOrigins);1530174524;Configure allowed {@code Origin} header values._@since 4.1.2;protected SockJsServiceRegistration setAllowedOrigins(String... allowedOrigins) {_		this.allowedOrigins.clear()__		if (!ObjectUtils.isEmpty(allowedOrigins)) {_			this.allowedOrigins.addAll(Arrays.asList(allowedOrigins))__		}_		return this__	};configure,allowed,code,origin,header,values,since,4,1,2;protected,sock,js,service,registration,set,allowed,origins,string,allowed,origins,this,allowed,origins,clear,if,object,utils,is,empty,allowed,origins,this,allowed,origins,add,all,arrays,as,list,allowed,origins,return,this
SockJsServiceRegistration -> protected SockJsServiceRegistration setAllowedOrigins(String... allowedOrigins);1531321803;Configure allowed {@code Origin} header values._@since 4.1.2;protected SockJsServiceRegistration setAllowedOrigins(String... allowedOrigins) {_		this.allowedOrigins.clear()__		if (!ObjectUtils.isEmpty(allowedOrigins)) {_			this.allowedOrigins.addAll(Arrays.asList(allowedOrigins))__		}_		return this__	};configure,allowed,code,origin,header,values,since,4,1,2;protected,sock,js,service,registration,set,allowed,origins,string,allowed,origins,this,allowed,origins,clear,if,object,utils,is,empty,allowed,origins,this,allowed,origins,add,all,arrays,as,list,allowed,origins,return,this
SockJsServiceRegistration -> @Deprecated 	public SockJsServiceRegistration(TaskScheduler defaultTaskScheduler);1491946901;Deprecated constructor with a TaskScheduler.__@deprecated as of 5.0 a TaskScheduler is not provided upfront, not until_it is obvious that it is needed_ call {@link #getTaskScheduler()} to check_and then {@link #setTaskScheduler(TaskScheduler)} to set it before a call_to {@link #createSockJsService()};@Deprecated_	public SockJsServiceRegistration(TaskScheduler defaultTaskScheduler) {_		this.scheduler = defaultTaskScheduler__	};deprecated,constructor,with,a,task,scheduler,deprecated,as,of,5,0,a,task,scheduler,is,not,provided,upfront,not,until,it,is,obvious,that,it,is,needed,call,link,get,task,scheduler,to,check,and,then,link,set,task,scheduler,task,scheduler,to,set,it,before,a,call,to,link,create,sock,js,service;deprecated,public,sock,js,service,registration,task,scheduler,default,task,scheduler,this,scheduler,default,task,scheduler
SockJsServiceRegistration -> @Deprecated 	public SockJsServiceRegistration(TaskScheduler defaultTaskScheduler);1496837955;Deprecated constructor with a TaskScheduler.__@deprecated as of 5.0 a TaskScheduler is not provided upfront, not until_it is obvious that it is needed_ call {@link #getTaskScheduler()} to check_and then {@link #setTaskScheduler(TaskScheduler)} to set it before a call_to {@link #createSockJsService()};@Deprecated_	public SockJsServiceRegistration(TaskScheduler defaultTaskScheduler) {_		this.scheduler = defaultTaskScheduler__	};deprecated,constructor,with,a,task,scheduler,deprecated,as,of,5,0,a,task,scheduler,is,not,provided,upfront,not,until,it,is,obvious,that,it,is,needed,call,link,get,task,scheduler,to,check,and,then,link,set,task,scheduler,task,scheduler,to,set,it,before,a,call,to,link,create,sock,js,service;deprecated,public,sock,js,service,registration,task,scheduler,default,task,scheduler,this,scheduler,default,task,scheduler
SockJsServiceRegistration -> @Deprecated 	public SockJsServiceRegistration(TaskScheduler defaultTaskScheduler);1498780456;Deprecated constructor with a TaskScheduler._@deprecated as of 5.0 a TaskScheduler is not provided upfront, not until_it is obvious that it is needed_ call {@link #getTaskScheduler()} to check_and then {@link #setTaskScheduler(TaskScheduler)} to set it before a call_to {@link #createSockJsService()};@Deprecated_	public SockJsServiceRegistration(TaskScheduler defaultTaskScheduler) {_		this.scheduler = defaultTaskScheduler__	};deprecated,constructor,with,a,task,scheduler,deprecated,as,of,5,0,a,task,scheduler,is,not,provided,upfront,not,until,it,is,obvious,that,it,is,needed,call,link,get,task,scheduler,to,check,and,then,link,set,task,scheduler,task,scheduler,to,set,it,before,a,call,to,link,create,sock,js,service;deprecated,public,sock,js,service,registration,task,scheduler,default,task,scheduler,this,scheduler,default,task,scheduler
SockJsServiceRegistration -> @Deprecated 	public SockJsServiceRegistration(TaskScheduler defaultTaskScheduler);1530174524;Deprecated constructor with a TaskScheduler._@deprecated as of 5.0 a TaskScheduler is not provided upfront, not until_it is obvious that it is needed_ call {@link #getTaskScheduler()} to check_and then {@link #setTaskScheduler(TaskScheduler)} to set it before a call_to {@link #createSockJsService()};@Deprecated_	public SockJsServiceRegistration(TaskScheduler defaultTaskScheduler) {_		this.scheduler = defaultTaskScheduler__	};deprecated,constructor,with,a,task,scheduler,deprecated,as,of,5,0,a,task,scheduler,is,not,provided,upfront,not,until,it,is,obvious,that,it,is,needed,call,link,get,task,scheduler,to,check,and,then,link,set,task,scheduler,task,scheduler,to,set,it,before,a,call,to,link,create,sock,js,service;deprecated,public,sock,js,service,registration,task,scheduler,default,task,scheduler,this,scheduler,default,task,scheduler
SockJsServiceRegistration -> @Nullable 	protected TaskScheduler getTaskScheduler();1496837955;Return the TaskScheduler, if configured.;@Nullable_	protected TaskScheduler getTaskScheduler() {_		return this.scheduler__	};return,the,task,scheduler,if,configured;nullable,protected,task,scheduler,get,task,scheduler,return,this,scheduler
SockJsServiceRegistration -> @Nullable 	protected TaskScheduler getTaskScheduler();1498780456;Return the TaskScheduler, if configured.;@Nullable_	protected TaskScheduler getTaskScheduler() {_		return this.scheduler__	};return,the,task,scheduler,if,configured;nullable,protected,task,scheduler,get,task,scheduler,return,this,scheduler
SockJsServiceRegistration -> @Nullable 	protected TaskScheduler getTaskScheduler();1530174524;Return the TaskScheduler, if configured.;@Nullable_	protected TaskScheduler getTaskScheduler() {_		return this.scheduler__	};return,the,task,scheduler,if,configured;nullable,protected,task,scheduler,get,task,scheduler,return,this,scheduler
SockJsServiceRegistration -> @Nullable 	protected TaskScheduler getTaskScheduler();1531321803;Return the TaskScheduler, if configured.;@Nullable_	protected TaskScheduler getTaskScheduler() {_		return this.scheduler__	};return,the,task,scheduler,if,configured;nullable,protected,task,scheduler,get,task,scheduler,return,this,scheduler
SockJsServiceRegistration -> public SockJsServiceRegistration setStreamBytesLimit(int streamBytesLimit);1386024878;Streaming transports save responses on the client side and don't free_memory used by delivered messages. Such transports need to recycle the_connection once in a while. This property sets a minimum number of bytes_that can be send over a single HTTP streaming request before it will be_closed. After that client will open a new request. Setting this value to_one effectively disables streaming and will make streaming transports to_behave like polling transports._<p>The default value is 128K (i.e. 128 * 1024).;public SockJsServiceRegistration setStreamBytesLimit(int streamBytesLimit) {_		this.streamBytesLimit = streamBytesLimit__		return this__	};streaming,transports,save,responses,on,the,client,side,and,don,t,free,memory,used,by,delivered,messages,such,transports,need,to,recycle,the,connection,once,in,a,while,this,property,sets,a,minimum,number,of,bytes,that,can,be,send,over,a,single,http,streaming,request,before,it,will,be,closed,after,that,client,will,open,a,new,request,setting,this,value,to,one,effectively,disables,streaming,and,will,make,streaming,transports,to,behave,like,polling,transports,p,the,default,value,is,128k,i,e,128,1024;public,sock,js,service,registration,set,stream,bytes,limit,int,stream,bytes,limit,this,stream,bytes,limit,stream,bytes,limit,return,this
SockJsServiceRegistration -> public SockJsServiceRegistration setStreamBytesLimit(int streamBytesLimit);1386462352;Streaming transports save responses on the client side and don't free_memory used by delivered messages. Such transports need to recycle the_connection once in a while. This property sets a minimum number of bytes_that can be send over a single HTTP streaming request before it will be_closed. After that client will open a new request. Setting this value to_one effectively disables streaming and will make streaming transports to_behave like polling transports._<p>The default value is 128K (i.e. 128 * 1024).;public SockJsServiceRegistration setStreamBytesLimit(int streamBytesLimit) {_		this.streamBytesLimit = streamBytesLimit__		return this__	};streaming,transports,save,responses,on,the,client,side,and,don,t,free,memory,used,by,delivered,messages,such,transports,need,to,recycle,the,connection,once,in,a,while,this,property,sets,a,minimum,number,of,bytes,that,can,be,send,over,a,single,http,streaming,request,before,it,will,be,closed,after,that,client,will,open,a,new,request,setting,this,value,to,one,effectively,disables,streaming,and,will,make,streaming,transports,to,behave,like,polling,transports,p,the,default,value,is,128k,i,e,128,1024;public,sock,js,service,registration,set,stream,bytes,limit,int,stream,bytes,limit,this,stream,bytes,limit,stream,bytes,limit,return,this
SockJsServiceRegistration -> public SockJsServiceRegistration setStreamBytesLimit(int streamBytesLimit);1395630903;Streaming transports save responses on the client side and don't free_memory used by delivered messages. Such transports need to recycle the_connection once in a while. This property sets a minimum number of bytes_that can be send over a single HTTP streaming request before it will be_closed. After that client will open a new request. Setting this value to_one effectively disables streaming and will make streaming transports to_behave like polling transports._<p>The default value is 128K (i.e. 128 * 1024).;public SockJsServiceRegistration setStreamBytesLimit(int streamBytesLimit) {_		this.streamBytesLimit = streamBytesLimit__		return this__	};streaming,transports,save,responses,on,the,client,side,and,don,t,free,memory,used,by,delivered,messages,such,transports,need,to,recycle,the,connection,once,in,a,while,this,property,sets,a,minimum,number,of,bytes,that,can,be,send,over,a,single,http,streaming,request,before,it,will,be,closed,after,that,client,will,open,a,new,request,setting,this,value,to,one,effectively,disables,streaming,and,will,make,streaming,transports,to,behave,like,polling,transports,p,the,default,value,is,128k,i,e,128,1024;public,sock,js,service,registration,set,stream,bytes,limit,int,stream,bytes,limit,this,stream,bytes,limit,stream,bytes,limit,return,this
SockJsServiceRegistration -> public SockJsServiceRegistration setStreamBytesLimit(int streamBytesLimit);1402065124;Streaming transports save responses on the client side and don't free_memory used by delivered messages. Such transports need to recycle the_connection once in a while. This property sets a minimum number of bytes_that can be send over a single HTTP streaming request before it will be_closed. After that client will open a new request. Setting this value to_one effectively disables streaming and will make streaming transports to_behave like polling transports._<p>The default value is 128K (i.e. 128 * 1024).;public SockJsServiceRegistration setStreamBytesLimit(int streamBytesLimit) {_		this.streamBytesLimit = streamBytesLimit__		return this__	};streaming,transports,save,responses,on,the,client,side,and,don,t,free,memory,used,by,delivered,messages,such,transports,need,to,recycle,the,connection,once,in,a,while,this,property,sets,a,minimum,number,of,bytes,that,can,be,send,over,a,single,http,streaming,request,before,it,will,be,closed,after,that,client,will,open,a,new,request,setting,this,value,to,one,effectively,disables,streaming,and,will,make,streaming,transports,to,behave,like,polling,transports,p,the,default,value,is,128k,i,e,128,1024;public,sock,js,service,registration,set,stream,bytes,limit,int,stream,bytes,limit,this,stream,bytes,limit,stream,bytes,limit,return,this
SockJsServiceRegistration -> public SockJsServiceRegistration setStreamBytesLimit(int streamBytesLimit);1408994390;Streaming transports save responses on the client side and don't free_memory used by delivered messages. Such transports need to recycle the_connection once in a while. This property sets a minimum number of bytes_that can be send over a single HTTP streaming request before it will be_closed. After that client will open a new request. Setting this value to_one effectively disables streaming and will make streaming transports to_behave like polling transports._<p>The default value is 128K (i.e. 128 * 1024).;public SockJsServiceRegistration setStreamBytesLimit(int streamBytesLimit) {_		this.streamBytesLimit = streamBytesLimit__		return this__	};streaming,transports,save,responses,on,the,client,side,and,don,t,free,memory,used,by,delivered,messages,such,transports,need,to,recycle,the,connection,once,in,a,while,this,property,sets,a,minimum,number,of,bytes,that,can,be,send,over,a,single,http,streaming,request,before,it,will,be,closed,after,that,client,will,open,a,new,request,setting,this,value,to,one,effectively,disables,streaming,and,will,make,streaming,transports,to,behave,like,polling,transports,p,the,default,value,is,128k,i,e,128,1024;public,sock,js,service,registration,set,stream,bytes,limit,int,stream,bytes,limit,this,stream,bytes,limit,stream,bytes,limit,return,this
SockJsServiceRegistration -> public SockJsServiceRegistration setStreamBytesLimit(int streamBytesLimit);1411760528;Streaming transports save responses on the client side and don't free_memory used by delivered messages. Such transports need to recycle the_connection once in a while. This property sets a minimum number of bytes_that can be send over a single HTTP streaming request before it will be_closed. After that client will open a new request. Setting this value to_one effectively disables streaming and will make streaming transports to_behave like polling transports._<p>The default value is 128K (i.e. 128 * 1024).;public SockJsServiceRegistration setStreamBytesLimit(int streamBytesLimit) {_		this.streamBytesLimit = streamBytesLimit__		return this__	};streaming,transports,save,responses,on,the,client,side,and,don,t,free,memory,used,by,delivered,messages,such,transports,need,to,recycle,the,connection,once,in,a,while,this,property,sets,a,minimum,number,of,bytes,that,can,be,send,over,a,single,http,streaming,request,before,it,will,be,closed,after,that,client,will,open,a,new,request,setting,this,value,to,one,effectively,disables,streaming,and,will,make,streaming,transports,to,behave,like,polling,transports,p,the,default,value,is,128k,i,e,128,1024;public,sock,js,service,registration,set,stream,bytes,limit,int,stream,bytes,limit,this,stream,bytes,limit,stream,bytes,limit,return,this
SockJsServiceRegistration -> public SockJsServiceRegistration setStreamBytesLimit(int streamBytesLimit);1411763921;Streaming transports save responses on the client side and don't free_memory used by delivered messages. Such transports need to recycle the_connection once in a while. This property sets a minimum number of bytes_that can be send over a single HTTP streaming request before it will be_closed. After that client will open a new request. Setting this value to_one effectively disables streaming and will make streaming transports to_behave like polling transports._<p>The default value is 128K (i.e. 128 * 1024).;public SockJsServiceRegistration setStreamBytesLimit(int streamBytesLimit) {_		this.streamBytesLimit = streamBytesLimit__		return this__	};streaming,transports,save,responses,on,the,client,side,and,don,t,free,memory,used,by,delivered,messages,such,transports,need,to,recycle,the,connection,once,in,a,while,this,property,sets,a,minimum,number,of,bytes,that,can,be,send,over,a,single,http,streaming,request,before,it,will,be,closed,after,that,client,will,open,a,new,request,setting,this,value,to,one,effectively,disables,streaming,and,will,make,streaming,transports,to,behave,like,polling,transports,p,the,default,value,is,128k,i,e,128,1024;public,sock,js,service,registration,set,stream,bytes,limit,int,stream,bytes,limit,this,stream,bytes,limit,stream,bytes,limit,return,this
SockJsServiceRegistration -> public SockJsServiceRegistration setStreamBytesLimit(int streamBytesLimit);1413848647;Streaming transports save responses on the client side and don't free_memory used by delivered messages. Such transports need to recycle the_connection once in a while. This property sets a minimum number of bytes_that can be send over a single HTTP streaming request before it will be_closed. After that client will open a new request. Setting this value to_one effectively disables streaming and will make streaming transports to_behave like polling transports._<p>The default value is 128K (i.e. 128 * 1024).;public SockJsServiceRegistration setStreamBytesLimit(int streamBytesLimit) {_		this.streamBytesLimit = streamBytesLimit__		return this__	};streaming,transports,save,responses,on,the,client,side,and,don,t,free,memory,used,by,delivered,messages,such,transports,need,to,recycle,the,connection,once,in,a,while,this,property,sets,a,minimum,number,of,bytes,that,can,be,send,over,a,single,http,streaming,request,before,it,will,be,closed,after,that,client,will,open,a,new,request,setting,this,value,to,one,effectively,disables,streaming,and,will,make,streaming,transports,to,behave,like,polling,transports,p,the,default,value,is,128k,i,e,128,1024;public,sock,js,service,registration,set,stream,bytes,limit,int,stream,bytes,limit,this,stream,bytes,limit,stream,bytes,limit,return,this
SockJsServiceRegistration -> public SockJsServiceRegistration setStreamBytesLimit(int streamBytesLimit);1414354684;Streaming transports save responses on the client side and don't free_memory used by delivered messages. Such transports need to recycle the_connection once in a while. This property sets a minimum number of bytes_that can be send over a single HTTP streaming request before it will be_closed. After that client will open a new request. Setting this value to_one effectively disables streaming and will make streaming transports to_behave like polling transports._<p>The default value is 128K (i.e. 128 * 1024).;public SockJsServiceRegistration setStreamBytesLimit(int streamBytesLimit) {_		this.streamBytesLimit = streamBytesLimit__		return this__	};streaming,transports,save,responses,on,the,client,side,and,don,t,free,memory,used,by,delivered,messages,such,transports,need,to,recycle,the,connection,once,in,a,while,this,property,sets,a,minimum,number,of,bytes,that,can,be,send,over,a,single,http,streaming,request,before,it,will,be,closed,after,that,client,will,open,a,new,request,setting,this,value,to,one,effectively,disables,streaming,and,will,make,streaming,transports,to,behave,like,polling,transports,p,the,default,value,is,128k,i,e,128,1024;public,sock,js,service,registration,set,stream,bytes,limit,int,stream,bytes,limit,this,stream,bytes,limit,stream,bytes,limit,return,this
SockJsServiceRegistration -> public SockJsServiceRegistration setStreamBytesLimit(int streamBytesLimit);1414354853;Streaming transports save responses on the client side and don't free_memory used by delivered messages. Such transports need to recycle the_connection once in a while. This property sets a minimum number of bytes_that can be send over a single HTTP streaming request before it will be_closed. After that client will open a new request. Setting this value to_one effectively disables streaming and will make streaming transports to_behave like polling transports._<p>The default value is 128K (i.e. 128 * 1024).;public SockJsServiceRegistration setStreamBytesLimit(int streamBytesLimit) {_		this.streamBytesLimit = streamBytesLimit__		return this__	};streaming,transports,save,responses,on,the,client,side,and,don,t,free,memory,used,by,delivered,messages,such,transports,need,to,recycle,the,connection,once,in,a,while,this,property,sets,a,minimum,number,of,bytes,that,can,be,send,over,a,single,http,streaming,request,before,it,will,be,closed,after,that,client,will,open,a,new,request,setting,this,value,to,one,effectively,disables,streaming,and,will,make,streaming,transports,to,behave,like,polling,transports,p,the,default,value,is,128k,i,e,128,1024;public,sock,js,service,registration,set,stream,bytes,limit,int,stream,bytes,limit,this,stream,bytes,limit,stream,bytes,limit,return,this
SockJsServiceRegistration -> public SockJsServiceRegistration setStreamBytesLimit(int streamBytesLimit);1424248215;Streaming transports save responses on the client side and don't free_memory used by delivered messages. Such transports need to recycle the_connection once in a while. This property sets a minimum number of bytes_that can be send over a single HTTP streaming request before it will be_closed. After that client will open a new request. Setting this value to_one effectively disables streaming and will make streaming transports to_behave like polling transports._<p>The default value is 128K (i.e. 128 * 1024).;public SockJsServiceRegistration setStreamBytesLimit(int streamBytesLimit) {_		this.streamBytesLimit = streamBytesLimit__		return this__	};streaming,transports,save,responses,on,the,client,side,and,don,t,free,memory,used,by,delivered,messages,such,transports,need,to,recycle,the,connection,once,in,a,while,this,property,sets,a,minimum,number,of,bytes,that,can,be,send,over,a,single,http,streaming,request,before,it,will,be,closed,after,that,client,will,open,a,new,request,setting,this,value,to,one,effectively,disables,streaming,and,will,make,streaming,transports,to,behave,like,polling,transports,p,the,default,value,is,128k,i,e,128,1024;public,sock,js,service,registration,set,stream,bytes,limit,int,stream,bytes,limit,this,stream,bytes,limit,stream,bytes,limit,return,this
SockJsServiceRegistration -> public SockJsServiceRegistration setStreamBytesLimit(int streamBytesLimit);1467730834;Streaming transports save responses on the client side and don't free_memory used by delivered messages. Such transports need to recycle the_connection once in a while. This property sets a minimum number of bytes_that can be send over a single HTTP streaming request before it will be_closed. After that client will open a new request. Setting this value to_one effectively disables streaming and will make streaming transports to_behave like polling transports._<p>The default value is 128K (i.e. 128 * 1024).;public SockJsServiceRegistration setStreamBytesLimit(int streamBytesLimit) {_		this.streamBytesLimit = streamBytesLimit__		return this__	};streaming,transports,save,responses,on,the,client,side,and,don,t,free,memory,used,by,delivered,messages,such,transports,need,to,recycle,the,connection,once,in,a,while,this,property,sets,a,minimum,number,of,bytes,that,can,be,send,over,a,single,http,streaming,request,before,it,will,be,closed,after,that,client,will,open,a,new,request,setting,this,value,to,one,effectively,disables,streaming,and,will,make,streaming,transports,to,behave,like,polling,transports,p,the,default,value,is,128k,i,e,128,1024;public,sock,js,service,registration,set,stream,bytes,limit,int,stream,bytes,limit,this,stream,bytes,limit,stream,bytes,limit,return,this
SockJsServiceRegistration -> public SockJsServiceRegistration setStreamBytesLimit(int streamBytesLimit);1491937719;Streaming transports save responses on the client side and don't free_memory used by delivered messages. Such transports need to recycle the_connection once in a while. This property sets a minimum number of bytes_that can be send over a single HTTP streaming request before it will be_closed. After that client will open a new request. Setting this value to_one effectively disables streaming and will make streaming transports to_behave like polling transports._<p>The default value is 128K (i.e. 128 * 1024).;public SockJsServiceRegistration setStreamBytesLimit(int streamBytesLimit) {_		this.streamBytesLimit = streamBytesLimit__		return this__	};streaming,transports,save,responses,on,the,client,side,and,don,t,free,memory,used,by,delivered,messages,such,transports,need,to,recycle,the,connection,once,in,a,while,this,property,sets,a,minimum,number,of,bytes,that,can,be,send,over,a,single,http,streaming,request,before,it,will,be,closed,after,that,client,will,open,a,new,request,setting,this,value,to,one,effectively,disables,streaming,and,will,make,streaming,transports,to,behave,like,polling,transports,p,the,default,value,is,128k,i,e,128,1024;public,sock,js,service,registration,set,stream,bytes,limit,int,stream,bytes,limit,this,stream,bytes,limit,stream,bytes,limit,return,this
SockJsServiceRegistration -> public SockJsServiceRegistration setStreamBytesLimit(int streamBytesLimit);1491946901;Streaming transports save responses on the client side and don't free_memory used by delivered messages. Such transports need to recycle the_connection once in a while. This property sets a minimum number of bytes_that can be send over a single HTTP streaming request before it will be_closed. After that client will open a new request. Setting this value to_one effectively disables streaming and will make streaming transports to_behave like polling transports._<p>The default value is 128K (i.e. 128 * 1024).;public SockJsServiceRegistration setStreamBytesLimit(int streamBytesLimit) {_		this.streamBytesLimit = streamBytesLimit__		return this__	};streaming,transports,save,responses,on,the,client,side,and,don,t,free,memory,used,by,delivered,messages,such,transports,need,to,recycle,the,connection,once,in,a,while,this,property,sets,a,minimum,number,of,bytes,that,can,be,send,over,a,single,http,streaming,request,before,it,will,be,closed,after,that,client,will,open,a,new,request,setting,this,value,to,one,effectively,disables,streaming,and,will,make,streaming,transports,to,behave,like,polling,transports,p,the,default,value,is,128k,i,e,128,1024;public,sock,js,service,registration,set,stream,bytes,limit,int,stream,bytes,limit,this,stream,bytes,limit,stream,bytes,limit,return,this
SockJsServiceRegistration -> public SockJsServiceRegistration setStreamBytesLimit(int streamBytesLimit);1496837955;Streaming transports save responses on the client side and don't free_memory used by delivered messages. Such transports need to recycle the_connection once in a while. This property sets a minimum number of bytes_that can be send over a single HTTP streaming request before it will be_closed. After that client will open a new request. Setting this value to_one effectively disables streaming and will make streaming transports to_behave like polling transports._<p>The default value is 128K (i.e. 128 * 1024).;public SockJsServiceRegistration setStreamBytesLimit(int streamBytesLimit) {_		this.streamBytesLimit = streamBytesLimit__		return this__	};streaming,transports,save,responses,on,the,client,side,and,don,t,free,memory,used,by,delivered,messages,such,transports,need,to,recycle,the,connection,once,in,a,while,this,property,sets,a,minimum,number,of,bytes,that,can,be,send,over,a,single,http,streaming,request,before,it,will,be,closed,after,that,client,will,open,a,new,request,setting,this,value,to,one,effectively,disables,streaming,and,will,make,streaming,transports,to,behave,like,polling,transports,p,the,default,value,is,128k,i,e,128,1024;public,sock,js,service,registration,set,stream,bytes,limit,int,stream,bytes,limit,this,stream,bytes,limit,stream,bytes,limit,return,this
SockJsServiceRegistration -> public SockJsServiceRegistration setStreamBytesLimit(int streamBytesLimit);1498780456;Streaming transports save responses on the client side and don't free_memory used by delivered messages. Such transports need to recycle the_connection once in a while. This property sets a minimum number of bytes_that can be send over a single HTTP streaming request before it will be_closed. After that client will open a new request. Setting this value to_one effectively disables streaming and will make streaming transports to_behave like polling transports._<p>The default value is 128K (i.e. 128 * 1024).;public SockJsServiceRegistration setStreamBytesLimit(int streamBytesLimit) {_		this.streamBytesLimit = streamBytesLimit__		return this__	};streaming,transports,save,responses,on,the,client,side,and,don,t,free,memory,used,by,delivered,messages,such,transports,need,to,recycle,the,connection,once,in,a,while,this,property,sets,a,minimum,number,of,bytes,that,can,be,send,over,a,single,http,streaming,request,before,it,will,be,closed,after,that,client,will,open,a,new,request,setting,this,value,to,one,effectively,disables,streaming,and,will,make,streaming,transports,to,behave,like,polling,transports,p,the,default,value,is,128k,i,e,128,1024;public,sock,js,service,registration,set,stream,bytes,limit,int,stream,bytes,limit,this,stream,bytes,limit,stream,bytes,limit,return,this
SockJsServiceRegistration -> public SockJsServiceRegistration setStreamBytesLimit(int streamBytesLimit);1530174524;Streaming transports save responses on the client side and don't free_memory used by delivered messages. Such transports need to recycle the_connection once in a while. This property sets a minimum number of bytes_that can be send over a single HTTP streaming request before it will be_closed. After that client will open a new request. Setting this value to_one effectively disables streaming and will make streaming transports to_behave like polling transports._<p>The default value is 128K (i.e. 128 * 1024).;public SockJsServiceRegistration setStreamBytesLimit(int streamBytesLimit) {_		this.streamBytesLimit = streamBytesLimit__		return this__	};streaming,transports,save,responses,on,the,client,side,and,don,t,free,memory,used,by,delivered,messages,such,transports,need,to,recycle,the,connection,once,in,a,while,this,property,sets,a,minimum,number,of,bytes,that,can,be,send,over,a,single,http,streaming,request,before,it,will,be,closed,after,that,client,will,open,a,new,request,setting,this,value,to,one,effectively,disables,streaming,and,will,make,streaming,transports,to,behave,like,polling,transports,p,the,default,value,is,128k,i,e,128,1024;public,sock,js,service,registration,set,stream,bytes,limit,int,stream,bytes,limit,this,stream,bytes,limit,stream,bytes,limit,return,this
SockJsServiceRegistration -> public SockJsServiceRegistration setStreamBytesLimit(int streamBytesLimit);1531321803;Streaming transports save responses on the client side and don't free_memory used by delivered messages. Such transports need to recycle the_connection once in a while. This property sets a minimum number of bytes_that can be send over a single HTTP streaming request before it will be_closed. After that client will open a new request. Setting this value to_one effectively disables streaming and will make streaming transports to_behave like polling transports._<p>The default value is 128K (i.e. 128 * 1024).;public SockJsServiceRegistration setStreamBytesLimit(int streamBytesLimit) {_		this.streamBytesLimit = streamBytesLimit__		return this__	};streaming,transports,save,responses,on,the,client,side,and,don,t,free,memory,used,by,delivered,messages,such,transports,need,to,recycle,the,connection,once,in,a,while,this,property,sets,a,minimum,number,of,bytes,that,can,be,send,over,a,single,http,streaming,request,before,it,will,be,closed,after,that,client,will,open,a,new,request,setting,this,value,to,one,effectively,disables,streaming,and,will,make,streaming,transports,to,behave,like,polling,transports,p,the,default,value,is,128k,i,e,128,1024;public,sock,js,service,registration,set,stream,bytes,limit,int,stream,bytes,limit,this,stream,bytes,limit,stream,bytes,limit,return,this
SockJsServiceRegistration -> public SockJsServiceRegistration setClientLibraryUrl(String clientLibraryUrl);1386024878;Transports which don't support cross-domain communication natively (e.g._"eventsource", "htmlfile") rely on serving a simple page (using the_"foreign" domain) from an invisible iframe. Code run from this iframe_doesn't need to worry about cross-domain issues since it is running from_a domain local to the SockJS server. The iframe does need to load the_SockJS javascript client library and this option allows configuring its_url._<p>By default this is set to point to_"https://d1fxtkz8shb9d2.cloudfront.net/sockjs-0.3.4.min.js".;public SockJsServiceRegistration setClientLibraryUrl(String clientLibraryUrl) {_		this.clientLibraryUrl = clientLibraryUrl__		return this__	};transports,which,don,t,support,cross,domain,communication,natively,e,g,eventsource,htmlfile,rely,on,serving,a,simple,page,using,the,foreign,domain,from,an,invisible,iframe,code,run,from,this,iframe,doesn,t,need,to,worry,about,cross,domain,issues,since,it,is,running,from,a,domain,local,to,the,sock,js,server,the,iframe,does,need,to,load,the,sock,js,javascript,client,library,and,this,option,allows,configuring,its,url,p,by,default,this,is,set,to,point,to,https,d1fxtkz8shb9d2,cloudfront,net,sockjs,0,3,4,min,js;public,sock,js,service,registration,set,client,library,url,string,client,library,url,this,client,library,url,client,library,url,return,this
SockJsServiceRegistration -> public SockJsServiceRegistration setClientLibraryUrl(String clientLibraryUrl);1386462352;Transports which don't support cross-domain communication natively (e.g._"eventsource", "htmlfile") rely on serving a simple page (using the_"foreign" domain) from an invisible iframe. Code run from this iframe_doesn't need to worry about cross-domain issues since it is running from_a domain local to the SockJS server. The iframe does need to load the_SockJS javascript client library and this option allows configuring its_url._<p>By default this is set to point to_"https://d1fxtkz8shb9d2.cloudfront.net/sockjs-0.3.4.min.js".;public SockJsServiceRegistration setClientLibraryUrl(String clientLibraryUrl) {_		this.clientLibraryUrl = clientLibraryUrl__		return this__	};transports,which,don,t,support,cross,domain,communication,natively,e,g,eventsource,htmlfile,rely,on,serving,a,simple,page,using,the,foreign,domain,from,an,invisible,iframe,code,run,from,this,iframe,doesn,t,need,to,worry,about,cross,domain,issues,since,it,is,running,from,a,domain,local,to,the,sock,js,server,the,iframe,does,need,to,load,the,sock,js,javascript,client,library,and,this,option,allows,configuring,its,url,p,by,default,this,is,set,to,point,to,https,d1fxtkz8shb9d2,cloudfront,net,sockjs,0,3,4,min,js;public,sock,js,service,registration,set,client,library,url,string,client,library,url,this,client,library,url,client,library,url,return,this
SockJsServiceRegistration -> public SockJsServiceRegistration setClientLibraryUrl(String clientLibraryUrl);1395630903;Transports which don't support cross-domain communication natively (e.g._"eventsource", "htmlfile") rely on serving a simple page (using the_"foreign" domain) from an invisible iframe. Code run from this iframe_doesn't need to worry about cross-domain issues since it is running from_a domain local to the SockJS server. The iframe does need to load the_SockJS javascript client library and this option allows configuring its url._See the reference documentation for more details on this.__<p>By default this is set to point to_"https://d1fxtkz8shb9d2.cloudfront.net/sockjs-0.3.4.min.js".;public SockJsServiceRegistration setClientLibraryUrl(String clientLibraryUrl) {_		this.clientLibraryUrl = clientLibraryUrl__		return this__	};transports,which,don,t,support,cross,domain,communication,natively,e,g,eventsource,htmlfile,rely,on,serving,a,simple,page,using,the,foreign,domain,from,an,invisible,iframe,code,run,from,this,iframe,doesn,t,need,to,worry,about,cross,domain,issues,since,it,is,running,from,a,domain,local,to,the,sock,js,server,the,iframe,does,need,to,load,the,sock,js,javascript,client,library,and,this,option,allows,configuring,its,url,see,the,reference,documentation,for,more,details,on,this,p,by,default,this,is,set,to,point,to,https,d1fxtkz8shb9d2,cloudfront,net,sockjs,0,3,4,min,js;public,sock,js,service,registration,set,client,library,url,string,client,library,url,this,client,library,url,client,library,url,return,this
SockJsServiceRegistration -> public SockJsServiceRegistration setClientLibraryUrl(String clientLibraryUrl);1402065124;Transports with no native cross-domain communication (e.g. "eventsource",_"htmlfile") must get a simple page from the "foreign" domain in an invisible_iframe so that code in the iframe can run from  a domain local to the SockJS_server. Since the iframe needs to load the SockJS javascript client library,_this property allows specifying where to load it from.__<p>By default this is set to point to_"https://d1fxtkz8shb9d2.cloudfront.net/sockjs-0.3.4.min.js". However it can_also be set to point to a URL served by the application.__<p>Note that it's possible to specify a relative URL in which case the URL_must be relative to the iframe URL. For example assuming a SockJS endpoint_mapped to "/sockjs", and resulting iframe URL "/sockjs/iframe.html", then the_the relative URL must start with "../../" to traverse up to the location_above the SockJS mapping. In case of a prefix-based Servlet mapping one more_traversal may be needed.;public SockJsServiceRegistration setClientLibraryUrl(String clientLibraryUrl) {_		this.clientLibraryUrl = clientLibraryUrl__		return this__	};transports,with,no,native,cross,domain,communication,e,g,eventsource,htmlfile,must,get,a,simple,page,from,the,foreign,domain,in,an,invisible,iframe,so,that,code,in,the,iframe,can,run,from,a,domain,local,to,the,sock,js,server,since,the,iframe,needs,to,load,the,sock,js,javascript,client,library,this,property,allows,specifying,where,to,load,it,from,p,by,default,this,is,set,to,point,to,https,d1fxtkz8shb9d2,cloudfront,net,sockjs,0,3,4,min,js,however,it,can,also,be,set,to,point,to,a,url,served,by,the,application,p,note,that,it,s,possible,to,specify,a,relative,url,in,which,case,the,url,must,be,relative,to,the,iframe,url,for,example,assuming,a,sock,js,endpoint,mapped,to,sockjs,and,resulting,iframe,url,sockjs,iframe,html,then,the,the,relative,url,must,start,with,to,traverse,up,to,the,location,above,the,sock,js,mapping,in,case,of,a,prefix,based,servlet,mapping,one,more,traversal,may,be,needed;public,sock,js,service,registration,set,client,library,url,string,client,library,url,this,client,library,url,client,library,url,return,this
SockJsServiceRegistration -> public SockJsServiceRegistration setClientLibraryUrl(String clientLibraryUrl);1408994390;Transports with no native cross-domain communication (e.g. "eventsource",_"htmlfile") must get a simple page from the "foreign" domain in an invisible_iframe so that code in the iframe can run from  a domain local to the SockJS_server. Since the iframe needs to load the SockJS javascript client library,_this property allows specifying where to load it from.__<p>By default this is set to point to_"https://d1fxtkz8shb9d2.cloudfront.net/sockjs-0.3.4.min.js". However it can_also be set to point to a URL served by the application.__<p>Note that it's possible to specify a relative URL in which case the URL_must be relative to the iframe URL. For example assuming a SockJS endpoint_mapped to "/sockjs", and resulting iframe URL "/sockjs/iframe.html", then the_the relative URL must start with "../../" to traverse up to the location_above the SockJS mapping. In case of a prefix-based Servlet mapping one more_traversal may be needed.;public SockJsServiceRegistration setClientLibraryUrl(String clientLibraryUrl) {_		this.clientLibraryUrl = clientLibraryUrl__		return this__	};transports,with,no,native,cross,domain,communication,e,g,eventsource,htmlfile,must,get,a,simple,page,from,the,foreign,domain,in,an,invisible,iframe,so,that,code,in,the,iframe,can,run,from,a,domain,local,to,the,sock,js,server,since,the,iframe,needs,to,load,the,sock,js,javascript,client,library,this,property,allows,specifying,where,to,load,it,from,p,by,default,this,is,set,to,point,to,https,d1fxtkz8shb9d2,cloudfront,net,sockjs,0,3,4,min,js,however,it,can,also,be,set,to,point,to,a,url,served,by,the,application,p,note,that,it,s,possible,to,specify,a,relative,url,in,which,case,the,url,must,be,relative,to,the,iframe,url,for,example,assuming,a,sock,js,endpoint,mapped,to,sockjs,and,resulting,iframe,url,sockjs,iframe,html,then,the,the,relative,url,must,start,with,to,traverse,up,to,the,location,above,the,sock,js,mapping,in,case,of,a,prefix,based,servlet,mapping,one,more,traversal,may,be,needed;public,sock,js,service,registration,set,client,library,url,string,client,library,url,this,client,library,url,client,library,url,return,this
SockJsServiceRegistration -> public SockJsServiceRegistration setClientLibraryUrl(String clientLibraryUrl);1411760528;Transports with no native cross-domain communication (e.g. "eventsource",_"htmlfile") must get a simple page from the "foreign" domain in an invisible_iframe so that code in the iframe can run from  a domain local to the SockJS_server. Since the iframe needs to load the SockJS javascript client library,_this property allows specifying where to load it from.__<p>By default this is set to point to_"https://cdn.jsdelivr.net/sockjs/0.3.4/sockjs.min.js". However it can_also be set to point to a URL served by the application.__<p>Note that it's possible to specify a relative URL in which case the URL_must be relative to the iframe URL. For example assuming a SockJS endpoint_mapped to "/sockjs", and resulting iframe URL "/sockjs/iframe.html", then the_the relative URL must start with "../../" to traverse up to the location_above the SockJS mapping. In case of a prefix-based Servlet mapping one more_traversal may be needed.;public SockJsServiceRegistration setClientLibraryUrl(String clientLibraryUrl) {_		this.clientLibraryUrl = clientLibraryUrl__		return this__	};transports,with,no,native,cross,domain,communication,e,g,eventsource,htmlfile,must,get,a,simple,page,from,the,foreign,domain,in,an,invisible,iframe,so,that,code,in,the,iframe,can,run,from,a,domain,local,to,the,sock,js,server,since,the,iframe,needs,to,load,the,sock,js,javascript,client,library,this,property,allows,specifying,where,to,load,it,from,p,by,default,this,is,set,to,point,to,https,cdn,jsdelivr,net,sockjs,0,3,4,sockjs,min,js,however,it,can,also,be,set,to,point,to,a,url,served,by,the,application,p,note,that,it,s,possible,to,specify,a,relative,url,in,which,case,the,url,must,be,relative,to,the,iframe,url,for,example,assuming,a,sock,js,endpoint,mapped,to,sockjs,and,resulting,iframe,url,sockjs,iframe,html,then,the,the,relative,url,must,start,with,to,traverse,up,to,the,location,above,the,sock,js,mapping,in,case,of,a,prefix,based,servlet,mapping,one,more,traversal,may,be,needed;public,sock,js,service,registration,set,client,library,url,string,client,library,url,this,client,library,url,client,library,url,return,this
SockJsServiceRegistration -> public SockJsServiceRegistration setClientLibraryUrl(String clientLibraryUrl);1411763921;Transports with no native cross-domain communication (e.g. "eventsource",_"htmlfile") must get a simple page from the "foreign" domain in an invisible_iframe so that code in the iframe can run from  a domain local to the SockJS_server. Since the iframe needs to load the SockJS javascript client library,_this property allows specifying where to load it from._<p>By default this is set to point to_"https://cdn.jsdelivr.net/sockjs/0.3.4/sockjs.min.js". However it can_also be set to point to a URL served by the application._<p>Note that it's possible to specify a relative URL in which case the URL_must be relative to the iframe URL. For example assuming a SockJS endpoint_mapped to "/sockjs", and resulting iframe URL "/sockjs/iframe.html", then the_the relative URL must start with "../../" to traverse up to the location_above the SockJS mapping. In case of a prefix-based Servlet mapping one more_traversal may be needed.;public SockJsServiceRegistration setClientLibraryUrl(String clientLibraryUrl) {_		this.clientLibraryUrl = clientLibraryUrl__		return this__	};transports,with,no,native,cross,domain,communication,e,g,eventsource,htmlfile,must,get,a,simple,page,from,the,foreign,domain,in,an,invisible,iframe,so,that,code,in,the,iframe,can,run,from,a,domain,local,to,the,sock,js,server,since,the,iframe,needs,to,load,the,sock,js,javascript,client,library,this,property,allows,specifying,where,to,load,it,from,p,by,default,this,is,set,to,point,to,https,cdn,jsdelivr,net,sockjs,0,3,4,sockjs,min,js,however,it,can,also,be,set,to,point,to,a,url,served,by,the,application,p,note,that,it,s,possible,to,specify,a,relative,url,in,which,case,the,url,must,be,relative,to,the,iframe,url,for,example,assuming,a,sock,js,endpoint,mapped,to,sockjs,and,resulting,iframe,url,sockjs,iframe,html,then,the,the,relative,url,must,start,with,to,traverse,up,to,the,location,above,the,sock,js,mapping,in,case,of,a,prefix,based,servlet,mapping,one,more,traversal,may,be,needed;public,sock,js,service,registration,set,client,library,url,string,client,library,url,this,client,library,url,client,library,url,return,this
SockJsServiceRegistration -> public SockJsServiceRegistration setClientLibraryUrl(String clientLibraryUrl);1413848647;Transports with no native cross-domain communication (e.g. "eventsource",_"htmlfile") must get a simple page from the "foreign" domain in an invisible_iframe so that code in the iframe can run from  a domain local to the SockJS_server. Since the iframe needs to load the SockJS javascript client library,_this property allows specifying where to load it from._<p>By default this is set to point to_"https://cdn.jsdelivr.net/sockjs/0.3.4/sockjs.min.js". However it can_also be set to point to a URL served by the application._<p>Note that it's possible to specify a relative URL in which case the URL_must be relative to the iframe URL. For example assuming a SockJS endpoint_mapped to "/sockjs", and resulting iframe URL "/sockjs/iframe.html", then the_the relative URL must start with "../../" to traverse up to the location_above the SockJS mapping. In case of a prefix-based Servlet mapping one more_traversal may be needed.;public SockJsServiceRegistration setClientLibraryUrl(String clientLibraryUrl) {_		this.clientLibraryUrl = clientLibraryUrl__		return this__	};transports,with,no,native,cross,domain,communication,e,g,eventsource,htmlfile,must,get,a,simple,page,from,the,foreign,domain,in,an,invisible,iframe,so,that,code,in,the,iframe,can,run,from,a,domain,local,to,the,sock,js,server,since,the,iframe,needs,to,load,the,sock,js,javascript,client,library,this,property,allows,specifying,where,to,load,it,from,p,by,default,this,is,set,to,point,to,https,cdn,jsdelivr,net,sockjs,0,3,4,sockjs,min,js,however,it,can,also,be,set,to,point,to,a,url,served,by,the,application,p,note,that,it,s,possible,to,specify,a,relative,url,in,which,case,the,url,must,be,relative,to,the,iframe,url,for,example,assuming,a,sock,js,endpoint,mapped,to,sockjs,and,resulting,iframe,url,sockjs,iframe,html,then,the,the,relative,url,must,start,with,to,traverse,up,to,the,location,above,the,sock,js,mapping,in,case,of,a,prefix,based,servlet,mapping,one,more,traversal,may,be,needed;public,sock,js,service,registration,set,client,library,url,string,client,library,url,this,client,library,url,client,library,url,return,this
SockJsServiceRegistration -> public SockJsServiceRegistration setClientLibraryUrl(String clientLibraryUrl);1414354684;Transports with no native cross-domain communication (e.g. "eventsource",_"htmlfile") must get a simple page from the "foreign" domain in an invisible_iframe so that code in the iframe can run from  a domain local to the SockJS_server. Since the iframe needs to load the SockJS javascript client library,_this property allows specifying where to load it from._<p>By default this is set to point to_"https://cdn.jsdelivr.net/sockjs/0.3.4/sockjs.min.js". However it can_also be set to point to a URL served by the application._<p>Note that it's possible to specify a relative URL in which case the URL_must be relative to the iframe URL. For example assuming a SockJS endpoint_mapped to "/sockjs", and resulting iframe URL "/sockjs/iframe.html", then the_the relative URL must start with "../../" to traverse up to the location_above the SockJS mapping. In case of a prefix-based Servlet mapping one more_traversal may be needed.;public SockJsServiceRegistration setClientLibraryUrl(String clientLibraryUrl) {_		this.clientLibraryUrl = clientLibraryUrl__		return this__	};transports,with,no,native,cross,domain,communication,e,g,eventsource,htmlfile,must,get,a,simple,page,from,the,foreign,domain,in,an,invisible,iframe,so,that,code,in,the,iframe,can,run,from,a,domain,local,to,the,sock,js,server,since,the,iframe,needs,to,load,the,sock,js,javascript,client,library,this,property,allows,specifying,where,to,load,it,from,p,by,default,this,is,set,to,point,to,https,cdn,jsdelivr,net,sockjs,0,3,4,sockjs,min,js,however,it,can,also,be,set,to,point,to,a,url,served,by,the,application,p,note,that,it,s,possible,to,specify,a,relative,url,in,which,case,the,url,must,be,relative,to,the,iframe,url,for,example,assuming,a,sock,js,endpoint,mapped,to,sockjs,and,resulting,iframe,url,sockjs,iframe,html,then,the,the,relative,url,must,start,with,to,traverse,up,to,the,location,above,the,sock,js,mapping,in,case,of,a,prefix,based,servlet,mapping,one,more,traversal,may,be,needed;public,sock,js,service,registration,set,client,library,url,string,client,library,url,this,client,library,url,client,library,url,return,this
SockJsServiceRegistration -> public SockJsServiceRegistration setClientLibraryUrl(String clientLibraryUrl);1414354853;Transports with no native cross-domain communication (e.g. "eventsource",_"htmlfile") must get a simple page from the "foreign" domain in an invisible_iframe so that code in the iframe can run from  a domain local to the SockJS_server. Since the iframe needs to load the SockJS javascript client library,_this property allows specifying where to load it from._<p>By default this is set to point to_"https://cdn.jsdelivr.net/sockjs/0.3.4/sockjs.min.js". However it can_also be set to point to a URL served by the application._<p>Note that it's possible to specify a relative URL in which case the URL_must be relative to the iframe URL. For example assuming a SockJS endpoint_mapped to "/sockjs", and resulting iframe URL "/sockjs/iframe.html", then the_the relative URL must start with "../../" to traverse up to the location_above the SockJS mapping. In case of a prefix-based Servlet mapping one more_traversal may be needed.;public SockJsServiceRegistration setClientLibraryUrl(String clientLibraryUrl) {_		this.clientLibraryUrl = clientLibraryUrl__		return this__	};transports,with,no,native,cross,domain,communication,e,g,eventsource,htmlfile,must,get,a,simple,page,from,the,foreign,domain,in,an,invisible,iframe,so,that,code,in,the,iframe,can,run,from,a,domain,local,to,the,sock,js,server,since,the,iframe,needs,to,load,the,sock,js,javascript,client,library,this,property,allows,specifying,where,to,load,it,from,p,by,default,this,is,set,to,point,to,https,cdn,jsdelivr,net,sockjs,0,3,4,sockjs,min,js,however,it,can,also,be,set,to,point,to,a,url,served,by,the,application,p,note,that,it,s,possible,to,specify,a,relative,url,in,which,case,the,url,must,be,relative,to,the,iframe,url,for,example,assuming,a,sock,js,endpoint,mapped,to,sockjs,and,resulting,iframe,url,sockjs,iframe,html,then,the,the,relative,url,must,start,with,to,traverse,up,to,the,location,above,the,sock,js,mapping,in,case,of,a,prefix,based,servlet,mapping,one,more,traversal,may,be,needed;public,sock,js,service,registration,set,client,library,url,string,client,library,url,this,client,library,url,client,library,url,return,this
SockJsServiceRegistration -> public SockJsServiceRegistration setClientLibraryUrl(String clientLibraryUrl);1424248215;Transports with no native cross-domain communication (e.g. "eventsource",_"htmlfile") must get a simple page from the "foreign" domain in an invisible_iframe so that code in the iframe can run from  a domain local to the SockJS_server. Since the iframe needs to load the SockJS javascript client library,_this property allows specifying where to load it from._<p>By default this is set to point to_"https://cdn.jsdelivr.net/sockjs/0.3.4/sockjs.min.js". However it can_also be set to point to a URL served by the application._<p>Note that it's possible to specify a relative URL in which case the URL_must be relative to the iframe URL. For example assuming a SockJS endpoint_mapped to "/sockjs", and resulting iframe URL "/sockjs/iframe.html", then the_the relative URL must start with "../../" to traverse up to the location_above the SockJS mapping. In case of a prefix-based Servlet mapping one more_traversal may be needed.;public SockJsServiceRegistration setClientLibraryUrl(String clientLibraryUrl) {_		this.clientLibraryUrl = clientLibraryUrl__		return this__	};transports,with,no,native,cross,domain,communication,e,g,eventsource,htmlfile,must,get,a,simple,page,from,the,foreign,domain,in,an,invisible,iframe,so,that,code,in,the,iframe,can,run,from,a,domain,local,to,the,sock,js,server,since,the,iframe,needs,to,load,the,sock,js,javascript,client,library,this,property,allows,specifying,where,to,load,it,from,p,by,default,this,is,set,to,point,to,https,cdn,jsdelivr,net,sockjs,0,3,4,sockjs,min,js,however,it,can,also,be,set,to,point,to,a,url,served,by,the,application,p,note,that,it,s,possible,to,specify,a,relative,url,in,which,case,the,url,must,be,relative,to,the,iframe,url,for,example,assuming,a,sock,js,endpoint,mapped,to,sockjs,and,resulting,iframe,url,sockjs,iframe,html,then,the,the,relative,url,must,start,with,to,traverse,up,to,the,location,above,the,sock,js,mapping,in,case,of,a,prefix,based,servlet,mapping,one,more,traversal,may,be,needed;public,sock,js,service,registration,set,client,library,url,string,client,library,url,this,client,library,url,client,library,url,return,this
SockJsServiceRegistration -> public SockJsServiceRegistration setClientLibraryUrl(String clientLibraryUrl);1467730834;Transports with no native cross-domain communication (e.g. "eventsource",_"htmlfile") must get a simple page from the "foreign" domain in an invisible_iframe so that code in the iframe can run from  a domain local to the SockJS_server. Since the iframe needs to load the SockJS javascript client library,_this property allows specifying where to load it from._<p>By default this is set to point to_"https://cdn.jsdelivr.net/sockjs/0.3.4/sockjs.min.js". However it can_also be set to point to a URL served by the application._<p>Note that it's possible to specify a relative URL in which case the URL_must be relative to the iframe URL. For example assuming a SockJS endpoint_mapped to "/sockjs", and resulting iframe URL "/sockjs/iframe.html", then the_the relative URL must start with "../../" to traverse up to the location_above the SockJS mapping. In case of a prefix-based Servlet mapping one more_traversal may be needed.;public SockJsServiceRegistration setClientLibraryUrl(String clientLibraryUrl) {_		this.clientLibraryUrl = clientLibraryUrl__		return this__	};transports,with,no,native,cross,domain,communication,e,g,eventsource,htmlfile,must,get,a,simple,page,from,the,foreign,domain,in,an,invisible,iframe,so,that,code,in,the,iframe,can,run,from,a,domain,local,to,the,sock,js,server,since,the,iframe,needs,to,load,the,sock,js,javascript,client,library,this,property,allows,specifying,where,to,load,it,from,p,by,default,this,is,set,to,point,to,https,cdn,jsdelivr,net,sockjs,0,3,4,sockjs,min,js,however,it,can,also,be,set,to,point,to,a,url,served,by,the,application,p,note,that,it,s,possible,to,specify,a,relative,url,in,which,case,the,url,must,be,relative,to,the,iframe,url,for,example,assuming,a,sock,js,endpoint,mapped,to,sockjs,and,resulting,iframe,url,sockjs,iframe,html,then,the,the,relative,url,must,start,with,to,traverse,up,to,the,location,above,the,sock,js,mapping,in,case,of,a,prefix,based,servlet,mapping,one,more,traversal,may,be,needed;public,sock,js,service,registration,set,client,library,url,string,client,library,url,this,client,library,url,client,library,url,return,this
SockJsServiceRegistration -> public SockJsServiceRegistration setClientLibraryUrl(String clientLibraryUrl);1491937719;Transports with no native cross-domain communication (e.g. "eventsource",_"htmlfile") must get a simple page from the "foreign" domain in an invisible_iframe so that code in the iframe can run from  a domain local to the SockJS_server. Since the iframe needs to load the SockJS javascript client library,_this property allows specifying where to load it from._<p>By default this is set to point to_"https://cdn.jsdelivr.net/sockjs/0.3.4/sockjs.min.js". However it can_also be set to point to a URL served by the application._<p>Note that it's possible to specify a relative URL in which case the URL_must be relative to the iframe URL. For example assuming a SockJS endpoint_mapped to "/sockjs", and resulting iframe URL "/sockjs/iframe.html", then the_the relative URL must start with "../../" to traverse up to the location_above the SockJS mapping. In case of a prefix-based Servlet mapping one more_traversal may be needed.;public SockJsServiceRegistration setClientLibraryUrl(String clientLibraryUrl) {_		this.clientLibraryUrl = clientLibraryUrl__		return this__	};transports,with,no,native,cross,domain,communication,e,g,eventsource,htmlfile,must,get,a,simple,page,from,the,foreign,domain,in,an,invisible,iframe,so,that,code,in,the,iframe,can,run,from,a,domain,local,to,the,sock,js,server,since,the,iframe,needs,to,load,the,sock,js,javascript,client,library,this,property,allows,specifying,where,to,load,it,from,p,by,default,this,is,set,to,point,to,https,cdn,jsdelivr,net,sockjs,0,3,4,sockjs,min,js,however,it,can,also,be,set,to,point,to,a,url,served,by,the,application,p,note,that,it,s,possible,to,specify,a,relative,url,in,which,case,the,url,must,be,relative,to,the,iframe,url,for,example,assuming,a,sock,js,endpoint,mapped,to,sockjs,and,resulting,iframe,url,sockjs,iframe,html,then,the,the,relative,url,must,start,with,to,traverse,up,to,the,location,above,the,sock,js,mapping,in,case,of,a,prefix,based,servlet,mapping,one,more,traversal,may,be,needed;public,sock,js,service,registration,set,client,library,url,string,client,library,url,this,client,library,url,client,library,url,return,this
SockJsServiceRegistration -> public SockJsServiceRegistration setClientLibraryUrl(String clientLibraryUrl);1491946901;Transports with no native cross-domain communication (e.g. "eventsource",_"htmlfile") must get a simple page from the "foreign" domain in an invisible_iframe so that code in the iframe can run from  a domain local to the SockJS_server. Since the iframe needs to load the SockJS javascript client library,_this property allows specifying where to load it from._<p>By default this is set to point to_"https://cdn.jsdelivr.net/sockjs/0.3.4/sockjs.min.js". However it can_also be set to point to a URL served by the application._<p>Note that it's possible to specify a relative URL in which case the URL_must be relative to the iframe URL. For example assuming a SockJS endpoint_mapped to "/sockjs", and resulting iframe URL "/sockjs/iframe.html", then the_the relative URL must start with "../../" to traverse up to the location_above the SockJS mapping. In case of a prefix-based Servlet mapping one more_traversal may be needed.;public SockJsServiceRegistration setClientLibraryUrl(String clientLibraryUrl) {_		this.clientLibraryUrl = clientLibraryUrl__		return this__	};transports,with,no,native,cross,domain,communication,e,g,eventsource,htmlfile,must,get,a,simple,page,from,the,foreign,domain,in,an,invisible,iframe,so,that,code,in,the,iframe,can,run,from,a,domain,local,to,the,sock,js,server,since,the,iframe,needs,to,load,the,sock,js,javascript,client,library,this,property,allows,specifying,where,to,load,it,from,p,by,default,this,is,set,to,point,to,https,cdn,jsdelivr,net,sockjs,0,3,4,sockjs,min,js,however,it,can,also,be,set,to,point,to,a,url,served,by,the,application,p,note,that,it,s,possible,to,specify,a,relative,url,in,which,case,the,url,must,be,relative,to,the,iframe,url,for,example,assuming,a,sock,js,endpoint,mapped,to,sockjs,and,resulting,iframe,url,sockjs,iframe,html,then,the,the,relative,url,must,start,with,to,traverse,up,to,the,location,above,the,sock,js,mapping,in,case,of,a,prefix,based,servlet,mapping,one,more,traversal,may,be,needed;public,sock,js,service,registration,set,client,library,url,string,client,library,url,this,client,library,url,client,library,url,return,this
SockJsServiceRegistration -> public SockJsServiceRegistration setClientLibraryUrl(String clientLibraryUrl);1496837955;Transports with no native cross-domain communication (e.g. "eventsource",_"htmlfile") must get a simple page from the "foreign" domain in an invisible_iframe so that code in the iframe can run from  a domain local to the SockJS_server. Since the iframe needs to load the SockJS javascript client library,_this property allows specifying where to load it from._<p>By default this is set to point to_"https://cdn.jsdelivr.net/sockjs/0.3.4/sockjs.min.js". However it can_also be set to point to a URL served by the application._<p>Note that it's possible to specify a relative URL in which case the URL_must be relative to the iframe URL. For example assuming a SockJS endpoint_mapped to "/sockjs", and resulting iframe URL "/sockjs/iframe.html", then the_the relative URL must start with "../../" to traverse up to the location_above the SockJS mapping. In case of a prefix-based Servlet mapping one more_traversal may be needed.;public SockJsServiceRegistration setClientLibraryUrl(String clientLibraryUrl) {_		this.clientLibraryUrl = clientLibraryUrl__		return this__	};transports,with,no,native,cross,domain,communication,e,g,eventsource,htmlfile,must,get,a,simple,page,from,the,foreign,domain,in,an,invisible,iframe,so,that,code,in,the,iframe,can,run,from,a,domain,local,to,the,sock,js,server,since,the,iframe,needs,to,load,the,sock,js,javascript,client,library,this,property,allows,specifying,where,to,load,it,from,p,by,default,this,is,set,to,point,to,https,cdn,jsdelivr,net,sockjs,0,3,4,sockjs,min,js,however,it,can,also,be,set,to,point,to,a,url,served,by,the,application,p,note,that,it,s,possible,to,specify,a,relative,url,in,which,case,the,url,must,be,relative,to,the,iframe,url,for,example,assuming,a,sock,js,endpoint,mapped,to,sockjs,and,resulting,iframe,url,sockjs,iframe,html,then,the,the,relative,url,must,start,with,to,traverse,up,to,the,location,above,the,sock,js,mapping,in,case,of,a,prefix,based,servlet,mapping,one,more,traversal,may,be,needed;public,sock,js,service,registration,set,client,library,url,string,client,library,url,this,client,library,url,client,library,url,return,this
SockJsServiceRegistration -> public SockJsServiceRegistration setClientLibraryUrl(String clientLibraryUrl);1498780456;Transports with no native cross-domain communication (e.g. "eventsource",_"htmlfile") must get a simple page from the "foreign" domain in an invisible_iframe so that code in the iframe can run from  a domain local to the SockJS_server. Since the iframe needs to load the SockJS javascript client library,_this property allows specifying where to load it from._<p>By default this is set to point to_"https://cdn.jsdelivr.net/sockjs/0.3.4/sockjs.min.js". However it can_also be set to point to a URL served by the application._<p>Note that it's possible to specify a relative URL in which case the URL_must be relative to the iframe URL. For example assuming a SockJS endpoint_mapped to "/sockjs", and resulting iframe URL "/sockjs/iframe.html", then the_the relative URL must start with "../../" to traverse up to the location_above the SockJS mapping. In case of a prefix-based Servlet mapping one more_traversal may be needed.;public SockJsServiceRegistration setClientLibraryUrl(String clientLibraryUrl) {_		this.clientLibraryUrl = clientLibraryUrl__		return this__	};transports,with,no,native,cross,domain,communication,e,g,eventsource,htmlfile,must,get,a,simple,page,from,the,foreign,domain,in,an,invisible,iframe,so,that,code,in,the,iframe,can,run,from,a,domain,local,to,the,sock,js,server,since,the,iframe,needs,to,load,the,sock,js,javascript,client,library,this,property,allows,specifying,where,to,load,it,from,p,by,default,this,is,set,to,point,to,https,cdn,jsdelivr,net,sockjs,0,3,4,sockjs,min,js,however,it,can,also,be,set,to,point,to,a,url,served,by,the,application,p,note,that,it,s,possible,to,specify,a,relative,url,in,which,case,the,url,must,be,relative,to,the,iframe,url,for,example,assuming,a,sock,js,endpoint,mapped,to,sockjs,and,resulting,iframe,url,sockjs,iframe,html,then,the,the,relative,url,must,start,with,to,traverse,up,to,the,location,above,the,sock,js,mapping,in,case,of,a,prefix,based,servlet,mapping,one,more,traversal,may,be,needed;public,sock,js,service,registration,set,client,library,url,string,client,library,url,this,client,library,url,client,library,url,return,this
SockJsServiceRegistration -> public SockJsServiceRegistration setClientLibraryUrl(String clientLibraryUrl);1530174524;Transports with no native cross-domain communication (e.g. "eventsource",_"htmlfile") must get a simple page from the "foreign" domain in an invisible_iframe so that code in the iframe can run from  a domain local to the SockJS_server. Since the iframe needs to load the SockJS javascript client library,_this property allows specifying where to load it from._<p>By default this is set to point to_"https://cdn.jsdelivr.net/sockjs/0.3.4/sockjs.min.js". However it can_also be set to point to a URL served by the application._<p>Note that it's possible to specify a relative URL in which case the URL_must be relative to the iframe URL. For example assuming a SockJS endpoint_mapped to "/sockjs", and resulting iframe URL "/sockjs/iframe.html", then the_the relative URL must start with "../../" to traverse up to the location_above the SockJS mapping. In case of a prefix-based Servlet mapping one more_traversal may be needed.;public SockJsServiceRegistration setClientLibraryUrl(String clientLibraryUrl) {_		this.clientLibraryUrl = clientLibraryUrl__		return this__	};transports,with,no,native,cross,domain,communication,e,g,eventsource,htmlfile,must,get,a,simple,page,from,the,foreign,domain,in,an,invisible,iframe,so,that,code,in,the,iframe,can,run,from,a,domain,local,to,the,sock,js,server,since,the,iframe,needs,to,load,the,sock,js,javascript,client,library,this,property,allows,specifying,where,to,load,it,from,p,by,default,this,is,set,to,point,to,https,cdn,jsdelivr,net,sockjs,0,3,4,sockjs,min,js,however,it,can,also,be,set,to,point,to,a,url,served,by,the,application,p,note,that,it,s,possible,to,specify,a,relative,url,in,which,case,the,url,must,be,relative,to,the,iframe,url,for,example,assuming,a,sock,js,endpoint,mapped,to,sockjs,and,resulting,iframe,url,sockjs,iframe,html,then,the,the,relative,url,must,start,with,to,traverse,up,to,the,location,above,the,sock,js,mapping,in,case,of,a,prefix,based,servlet,mapping,one,more,traversal,may,be,needed;public,sock,js,service,registration,set,client,library,url,string,client,library,url,this,client,library,url,client,library,url,return,this
SockJsServiceRegistration -> public SockJsServiceRegistration setClientLibraryUrl(String clientLibraryUrl);1531321803;Transports with no native cross-domain communication (e.g. "eventsource",_"htmlfile") must get a simple page from the "foreign" domain in an invisible_iframe so that code in the iframe can run from  a domain local to the SockJS_server. Since the iframe needs to load the SockJS javascript client library,_this property allows specifying where to load it from._<p>By default this is set to point to_"https://cdn.jsdelivr.net/sockjs/0.3.4/sockjs.min.js". However it can_also be set to point to a URL served by the application._<p>Note that it's possible to specify a relative URL in which case the URL_must be relative to the iframe URL. For example assuming a SockJS endpoint_mapped to "/sockjs", and resulting iframe URL "/sockjs/iframe.html", then the_the relative URL must start with "../../" to traverse up to the location_above the SockJS mapping. In case of a prefix-based Servlet mapping one more_traversal may be needed.;public SockJsServiceRegistration setClientLibraryUrl(String clientLibraryUrl) {_		this.clientLibraryUrl = clientLibraryUrl__		return this__	};transports,with,no,native,cross,domain,communication,e,g,eventsource,htmlfile,must,get,a,simple,page,from,the,foreign,domain,in,an,invisible,iframe,so,that,code,in,the,iframe,can,run,from,a,domain,local,to,the,sock,js,server,since,the,iframe,needs,to,load,the,sock,js,javascript,client,library,this,property,allows,specifying,where,to,load,it,from,p,by,default,this,is,set,to,point,to,https,cdn,jsdelivr,net,sockjs,0,3,4,sockjs,min,js,however,it,can,also,be,set,to,point,to,a,url,served,by,the,application,p,note,that,it,s,possible,to,specify,a,relative,url,in,which,case,the,url,must,be,relative,to,the,iframe,url,for,example,assuming,a,sock,js,endpoint,mapped,to,sockjs,and,resulting,iframe,url,sockjs,iframe,html,then,the,the,relative,url,must,start,with,to,traverse,up,to,the,location,above,the,sock,js,mapping,in,case,of,a,prefix,based,servlet,mapping,one,more,traversal,may,be,needed;public,sock,js,service,registration,set,client,library,url,string,client,library,url,this,client,library,url,client,library,url,return,this
SockJsServiceRegistration -> public SockJsServiceRegistration setMessageCodec(SockJsMessageCodec codec);1408994390;The codec to use for encoding and decoding SockJS messages._<p>By default {@code Jackson2SockJsMessageCodec} is used requiring the_Jackson library to be present on the classpath._@param codec the codec to use._@since 4.1;public SockJsServiceRegistration setMessageCodec(SockJsMessageCodec codec) {_		this.messageCodec = codec__		return this__	};the,codec,to,use,for,encoding,and,decoding,sock,js,messages,p,by,default,code,jackson2sock,js,message,codec,is,used,requiring,the,jackson,library,to,be,present,on,the,classpath,param,codec,the,codec,to,use,since,4,1;public,sock,js,service,registration,set,message,codec,sock,js,message,codec,codec,this,message,codec,codec,return,this
SockJsServiceRegistration -> public SockJsServiceRegistration setMessageCodec(SockJsMessageCodec codec);1411760528;The codec to use for encoding and decoding SockJS messages._<p>By default {@code Jackson2SockJsMessageCodec} is used requiring the_Jackson library to be present on the classpath._@param codec the codec to use._@since 4.1;public SockJsServiceRegistration setMessageCodec(SockJsMessageCodec codec) {_		this.messageCodec = codec__		return this__	};the,codec,to,use,for,encoding,and,decoding,sock,js,messages,p,by,default,code,jackson2sock,js,message,codec,is,used,requiring,the,jackson,library,to,be,present,on,the,classpath,param,codec,the,codec,to,use,since,4,1;public,sock,js,service,registration,set,message,codec,sock,js,message,codec,codec,this,message,codec,codec,return,this
SockJsServiceRegistration -> public SockJsServiceRegistration setMessageCodec(SockJsMessageCodec codec);1411763921;The codec to use for encoding and decoding SockJS messages._<p>By default {@code Jackson2SockJsMessageCodec} is used requiring the_Jackson library to be present on the classpath._@param codec the codec to use._@since 4.1;public SockJsServiceRegistration setMessageCodec(SockJsMessageCodec codec) {_		this.messageCodec = codec__		return this__	};the,codec,to,use,for,encoding,and,decoding,sock,js,messages,p,by,default,code,jackson2sock,js,message,codec,is,used,requiring,the,jackson,library,to,be,present,on,the,classpath,param,codec,the,codec,to,use,since,4,1;public,sock,js,service,registration,set,message,codec,sock,js,message,codec,codec,this,message,codec,codec,return,this
SockJsServiceRegistration -> public SockJsServiceRegistration setMessageCodec(SockJsMessageCodec codec);1413848647;The codec to use for encoding and decoding SockJS messages._<p>By default {@code Jackson2SockJsMessageCodec} is used requiring the_Jackson library to be present on the classpath._@param codec the codec to use._@since 4.1;public SockJsServiceRegistration setMessageCodec(SockJsMessageCodec codec) {_		this.messageCodec = codec__		return this__	};the,codec,to,use,for,encoding,and,decoding,sock,js,messages,p,by,default,code,jackson2sock,js,message,codec,is,used,requiring,the,jackson,library,to,be,present,on,the,classpath,param,codec,the,codec,to,use,since,4,1;public,sock,js,service,registration,set,message,codec,sock,js,message,codec,codec,this,message,codec,codec,return,this
SockJsServiceRegistration -> public SockJsServiceRegistration setMessageCodec(SockJsMessageCodec codec);1414354684;The codec to use for encoding and decoding SockJS messages._<p>By default {@code Jackson2SockJsMessageCodec} is used requiring the_Jackson library to be present on the classpath._@param codec the codec to use._@since 4.1;public SockJsServiceRegistration setMessageCodec(SockJsMessageCodec codec) {_		this.messageCodec = codec__		return this__	};the,codec,to,use,for,encoding,and,decoding,sock,js,messages,p,by,default,code,jackson2sock,js,message,codec,is,used,requiring,the,jackson,library,to,be,present,on,the,classpath,param,codec,the,codec,to,use,since,4,1;public,sock,js,service,registration,set,message,codec,sock,js,message,codec,codec,this,message,codec,codec,return,this
SockJsServiceRegistration -> public SockJsServiceRegistration setMessageCodec(SockJsMessageCodec codec);1414354853;The codec to use for encoding and decoding SockJS messages._<p>By default {@code Jackson2SockJsMessageCodec} is used requiring the_Jackson library to be present on the classpath._@param codec the codec to use._@since 4.1;public SockJsServiceRegistration setMessageCodec(SockJsMessageCodec codec) {_		this.messageCodec = codec__		return this__	};the,codec,to,use,for,encoding,and,decoding,sock,js,messages,p,by,default,code,jackson2sock,js,message,codec,is,used,requiring,the,jackson,library,to,be,present,on,the,classpath,param,codec,the,codec,to,use,since,4,1;public,sock,js,service,registration,set,message,codec,sock,js,message,codec,codec,this,message,codec,codec,return,this
SockJsServiceRegistration -> public SockJsServiceRegistration setMessageCodec(SockJsMessageCodec codec);1424248215;The codec to use for encoding and decoding SockJS messages._<p>By default {@code Jackson2SockJsMessageCodec} is used requiring the_Jackson library to be present on the classpath._@param codec the codec to use._@since 4.1;public SockJsServiceRegistration setMessageCodec(SockJsMessageCodec codec) {_		this.messageCodec = codec__		return this__	};the,codec,to,use,for,encoding,and,decoding,sock,js,messages,p,by,default,code,jackson2sock,js,message,codec,is,used,requiring,the,jackson,library,to,be,present,on,the,classpath,param,codec,the,codec,to,use,since,4,1;public,sock,js,service,registration,set,message,codec,sock,js,message,codec,codec,this,message,codec,codec,return,this
SockJsServiceRegistration -> public SockJsServiceRegistration setMessageCodec(SockJsMessageCodec codec);1467730834;The codec to use for encoding and decoding SockJS messages._<p>By default {@code Jackson2SockJsMessageCodec} is used requiring the_Jackson library to be present on the classpath._@param codec the codec to use._@since 4.1;public SockJsServiceRegistration setMessageCodec(SockJsMessageCodec codec) {_		this.messageCodec = codec__		return this__	};the,codec,to,use,for,encoding,and,decoding,sock,js,messages,p,by,default,code,jackson2sock,js,message,codec,is,used,requiring,the,jackson,library,to,be,present,on,the,classpath,param,codec,the,codec,to,use,since,4,1;public,sock,js,service,registration,set,message,codec,sock,js,message,codec,codec,this,message,codec,codec,return,this
SockJsServiceRegistration -> public SockJsServiceRegistration setMessageCodec(SockJsMessageCodec codec);1491937719;The codec to use for encoding and decoding SockJS messages._<p>By default {@code Jackson2SockJsMessageCodec} is used requiring the_Jackson library to be present on the classpath._@param codec the codec to use._@since 4.1;public SockJsServiceRegistration setMessageCodec(SockJsMessageCodec codec) {_		this.messageCodec = codec__		return this__	};the,codec,to,use,for,encoding,and,decoding,sock,js,messages,p,by,default,code,jackson2sock,js,message,codec,is,used,requiring,the,jackson,library,to,be,present,on,the,classpath,param,codec,the,codec,to,use,since,4,1;public,sock,js,service,registration,set,message,codec,sock,js,message,codec,codec,this,message,codec,codec,return,this
SockJsServiceRegistration -> public SockJsServiceRegistration setMessageCodec(SockJsMessageCodec codec);1491946901;The codec to use for encoding and decoding SockJS messages._<p>By default {@code Jackson2SockJsMessageCodec} is used requiring the_Jackson library to be present on the classpath._@param codec the codec to use._@since 4.1;public SockJsServiceRegistration setMessageCodec(SockJsMessageCodec codec) {_		this.messageCodec = codec__		return this__	};the,codec,to,use,for,encoding,and,decoding,sock,js,messages,p,by,default,code,jackson2sock,js,message,codec,is,used,requiring,the,jackson,library,to,be,present,on,the,classpath,param,codec,the,codec,to,use,since,4,1;public,sock,js,service,registration,set,message,codec,sock,js,message,codec,codec,this,message,codec,codec,return,this
SockJsServiceRegistration -> public SockJsServiceRegistration setMessageCodec(SockJsMessageCodec codec);1496837955;The codec to use for encoding and decoding SockJS messages._<p>By default {@code Jackson2SockJsMessageCodec} is used requiring the_Jackson library to be present on the classpath._@param codec the codec to use._@since 4.1;public SockJsServiceRegistration setMessageCodec(SockJsMessageCodec codec) {_		this.messageCodec = codec__		return this__	};the,codec,to,use,for,encoding,and,decoding,sock,js,messages,p,by,default,code,jackson2sock,js,message,codec,is,used,requiring,the,jackson,library,to,be,present,on,the,classpath,param,codec,the,codec,to,use,since,4,1;public,sock,js,service,registration,set,message,codec,sock,js,message,codec,codec,this,message,codec,codec,return,this
SockJsServiceRegistration -> public SockJsServiceRegistration setMessageCodec(SockJsMessageCodec codec);1498780456;The codec to use for encoding and decoding SockJS messages._<p>By default {@code Jackson2SockJsMessageCodec} is used requiring the_Jackson library to be present on the classpath._@param codec the codec to use._@since 4.1;public SockJsServiceRegistration setMessageCodec(SockJsMessageCodec codec) {_		this.messageCodec = codec__		return this__	};the,codec,to,use,for,encoding,and,decoding,sock,js,messages,p,by,default,code,jackson2sock,js,message,codec,is,used,requiring,the,jackson,library,to,be,present,on,the,classpath,param,codec,the,codec,to,use,since,4,1;public,sock,js,service,registration,set,message,codec,sock,js,message,codec,codec,this,message,codec,codec,return,this
SockJsServiceRegistration -> public SockJsServiceRegistration setMessageCodec(SockJsMessageCodec codec);1530174524;The codec to use for encoding and decoding SockJS messages._<p>By default {@code Jackson2SockJsMessageCodec} is used requiring the_Jackson library to be present on the classpath._@param codec the codec to use._@since 4.1;public SockJsServiceRegistration setMessageCodec(SockJsMessageCodec codec) {_		this.messageCodec = codec__		return this__	};the,codec,to,use,for,encoding,and,decoding,sock,js,messages,p,by,default,code,jackson2sock,js,message,codec,is,used,requiring,the,jackson,library,to,be,present,on,the,classpath,param,codec,the,codec,to,use,since,4,1;public,sock,js,service,registration,set,message,codec,sock,js,message,codec,codec,this,message,codec,codec,return,this
SockJsServiceRegistration -> public SockJsServiceRegistration setMessageCodec(SockJsMessageCodec codec);1531321803;The codec to use for encoding and decoding SockJS messages._<p>By default {@code Jackson2SockJsMessageCodec} is used requiring the_Jackson library to be present on the classpath._@param codec the codec to use._@since 4.1;public SockJsServiceRegistration setMessageCodec(SockJsMessageCodec codec) {_		this.messageCodec = codec__		return this__	};the,codec,to,use,for,encoding,and,decoding,sock,js,messages,p,by,default,code,jackson2sock,js,message,codec,is,used,requiring,the,jackson,library,to,be,present,on,the,classpath,param,codec,the,codec,to,use,since,4,1;public,sock,js,service,registration,set,message,codec,sock,js,message,codec,codec,this,message,codec,codec,return,this
SockJsServiceRegistration -> public SockJsServiceRegistration setHttpMessageCacheSize(int httpMessageCacheSize);1386024878;The number of server-to-client messages that a session can cache while waiting for_the next HTTP polling request from the client. All HTTP transports use this_property since even streaming transports recycle HTTP requests periodically._<p>The amount of time between HTTP requests should be relatively brief and will not_exceed the allows disconnect delay (see_{@link #setDisconnectDelay(long)}), 5 seconds by default._<p>The default size is 100.;public SockJsServiceRegistration setHttpMessageCacheSize(int httpMessageCacheSize) {_		this.httpMessageCacheSize = httpMessageCacheSize__		return this__	};the,number,of,server,to,client,messages,that,a,session,can,cache,while,waiting,for,the,next,http,polling,request,from,the,client,all,http,transports,use,this,property,since,even,streaming,transports,recycle,http,requests,periodically,p,the,amount,of,time,between,http,requests,should,be,relatively,brief,and,will,not,exceed,the,allows,disconnect,delay,see,link,set,disconnect,delay,long,5,seconds,by,default,p,the,default,size,is,100;public,sock,js,service,registration,set,http,message,cache,size,int,http,message,cache,size,this,http,message,cache,size,http,message,cache,size,return,this
SockJsServiceRegistration -> public SockJsServiceRegistration setHttpMessageCacheSize(int httpMessageCacheSize);1386462352;The number of server-to-client messages that a session can cache while waiting for_the next HTTP polling request from the client. All HTTP transports use this_property since even streaming transports recycle HTTP requests periodically._<p>The amount of time between HTTP requests should be relatively brief and will not_exceed the allows disconnect delay (see_{@link #setDisconnectDelay(long)}), 5 seconds by default._<p>The default size is 100.;public SockJsServiceRegistration setHttpMessageCacheSize(int httpMessageCacheSize) {_		this.httpMessageCacheSize = httpMessageCacheSize__		return this__	};the,number,of,server,to,client,messages,that,a,session,can,cache,while,waiting,for,the,next,http,polling,request,from,the,client,all,http,transports,use,this,property,since,even,streaming,transports,recycle,http,requests,periodically,p,the,amount,of,time,between,http,requests,should,be,relatively,brief,and,will,not,exceed,the,allows,disconnect,delay,see,link,set,disconnect,delay,long,5,seconds,by,default,p,the,default,size,is,100;public,sock,js,service,registration,set,http,message,cache,size,int,http,message,cache,size,this,http,message,cache,size,http,message,cache,size,return,this
SockJsServiceRegistration -> public SockJsServiceRegistration setHttpMessageCacheSize(int httpMessageCacheSize);1395630903;The number of server-to-client messages that a session can cache while waiting for_the next HTTP polling request from the client. All HTTP transports use this_property since even streaming transports recycle HTTP requests periodically._<p>The amount of time between HTTP requests should be relatively brief and will not_exceed the allows disconnect delay (see_{@link #setDisconnectDelay(long)}), 5 seconds by default._<p>The default size is 100.;public SockJsServiceRegistration setHttpMessageCacheSize(int httpMessageCacheSize) {_		this.httpMessageCacheSize = httpMessageCacheSize__		return this__	};the,number,of,server,to,client,messages,that,a,session,can,cache,while,waiting,for,the,next,http,polling,request,from,the,client,all,http,transports,use,this,property,since,even,streaming,transports,recycle,http,requests,periodically,p,the,amount,of,time,between,http,requests,should,be,relatively,brief,and,will,not,exceed,the,allows,disconnect,delay,see,link,set,disconnect,delay,long,5,seconds,by,default,p,the,default,size,is,100;public,sock,js,service,registration,set,http,message,cache,size,int,http,message,cache,size,this,http,message,cache,size,http,message,cache,size,return,this
SockJsServiceRegistration -> public SockJsServiceRegistration setHttpMessageCacheSize(int httpMessageCacheSize);1402065124;The number of server-to-client messages that a session can cache while waiting for_the next HTTP polling request from the client. All HTTP transports use this_property since even streaming transports recycle HTTP requests periodically._<p>The amount of time between HTTP requests should be relatively brief and will not_exceed the allows disconnect delay (see_{@link #setDisconnectDelay(long)}), 5 seconds by default._<p>The default size is 100.;public SockJsServiceRegistration setHttpMessageCacheSize(int httpMessageCacheSize) {_		this.httpMessageCacheSize = httpMessageCacheSize__		return this__	};the,number,of,server,to,client,messages,that,a,session,can,cache,while,waiting,for,the,next,http,polling,request,from,the,client,all,http,transports,use,this,property,since,even,streaming,transports,recycle,http,requests,periodically,p,the,amount,of,time,between,http,requests,should,be,relatively,brief,and,will,not,exceed,the,allows,disconnect,delay,see,link,set,disconnect,delay,long,5,seconds,by,default,p,the,default,size,is,100;public,sock,js,service,registration,set,http,message,cache,size,int,http,message,cache,size,this,http,message,cache,size,http,message,cache,size,return,this
SockJsServiceRegistration -> public SockJsServiceRegistration setHttpMessageCacheSize(int httpMessageCacheSize);1408994390;The number of server-to-client messages that a session can cache while waiting for_the next HTTP polling request from the client. All HTTP transports use this_property since even streaming transports recycle HTTP requests periodically._<p>The amount of time between HTTP requests should be relatively brief and will not_exceed the allows disconnect delay (see_{@link #setDisconnectDelay(long)}), 5 seconds by default._<p>The default size is 100.;public SockJsServiceRegistration setHttpMessageCacheSize(int httpMessageCacheSize) {_		this.httpMessageCacheSize = httpMessageCacheSize__		return this__	};the,number,of,server,to,client,messages,that,a,session,can,cache,while,waiting,for,the,next,http,polling,request,from,the,client,all,http,transports,use,this,property,since,even,streaming,transports,recycle,http,requests,periodically,p,the,amount,of,time,between,http,requests,should,be,relatively,brief,and,will,not,exceed,the,allows,disconnect,delay,see,link,set,disconnect,delay,long,5,seconds,by,default,p,the,default,size,is,100;public,sock,js,service,registration,set,http,message,cache,size,int,http,message,cache,size,this,http,message,cache,size,http,message,cache,size,return,this
SockJsServiceRegistration -> public SockJsServiceRegistration setHttpMessageCacheSize(int httpMessageCacheSize);1411760528;The number of server-to-client messages that a session can cache while waiting for_the next HTTP polling request from the client. All HTTP transports use this_property since even streaming transports recycle HTTP requests periodically._<p>The amount of time between HTTP requests should be relatively brief and will not_exceed the allows disconnect delay (see_{@link #setDisconnectDelay(long)}), 5 seconds by default._<p>The default size is 100.;public SockJsServiceRegistration setHttpMessageCacheSize(int httpMessageCacheSize) {_		this.httpMessageCacheSize = httpMessageCacheSize__		return this__	};the,number,of,server,to,client,messages,that,a,session,can,cache,while,waiting,for,the,next,http,polling,request,from,the,client,all,http,transports,use,this,property,since,even,streaming,transports,recycle,http,requests,periodically,p,the,amount,of,time,between,http,requests,should,be,relatively,brief,and,will,not,exceed,the,allows,disconnect,delay,see,link,set,disconnect,delay,long,5,seconds,by,default,p,the,default,size,is,100;public,sock,js,service,registration,set,http,message,cache,size,int,http,message,cache,size,this,http,message,cache,size,http,message,cache,size,return,this
SockJsServiceRegistration -> public SockJsServiceRegistration setHttpMessageCacheSize(int httpMessageCacheSize);1411763921;The number of server-to-client messages that a session can cache while waiting for_the next HTTP polling request from the client. All HTTP transports use this_property since even streaming transports recycle HTTP requests periodically._<p>The amount of time between HTTP requests should be relatively brief and will not_exceed the allows disconnect delay (see_{@link #setDisconnectDelay(long)}), 5 seconds by default._<p>The default size is 100.;public SockJsServiceRegistration setHttpMessageCacheSize(int httpMessageCacheSize) {_		this.httpMessageCacheSize = httpMessageCacheSize__		return this__	};the,number,of,server,to,client,messages,that,a,session,can,cache,while,waiting,for,the,next,http,polling,request,from,the,client,all,http,transports,use,this,property,since,even,streaming,transports,recycle,http,requests,periodically,p,the,amount,of,time,between,http,requests,should,be,relatively,brief,and,will,not,exceed,the,allows,disconnect,delay,see,link,set,disconnect,delay,long,5,seconds,by,default,p,the,default,size,is,100;public,sock,js,service,registration,set,http,message,cache,size,int,http,message,cache,size,this,http,message,cache,size,http,message,cache,size,return,this
SockJsServiceRegistration -> public SockJsServiceRegistration setHttpMessageCacheSize(int httpMessageCacheSize);1413848647;The number of server-to-client messages that a session can cache while waiting for_the next HTTP polling request from the client. All HTTP transports use this_property since even streaming transports recycle HTTP requests periodically._<p>The amount of time between HTTP requests should be relatively brief and will not_exceed the allows disconnect delay (see_{@link #setDisconnectDelay(long)}), 5 seconds by default._<p>The default size is 100.;public SockJsServiceRegistration setHttpMessageCacheSize(int httpMessageCacheSize) {_		this.httpMessageCacheSize = httpMessageCacheSize__		return this__	};the,number,of,server,to,client,messages,that,a,session,can,cache,while,waiting,for,the,next,http,polling,request,from,the,client,all,http,transports,use,this,property,since,even,streaming,transports,recycle,http,requests,periodically,p,the,amount,of,time,between,http,requests,should,be,relatively,brief,and,will,not,exceed,the,allows,disconnect,delay,see,link,set,disconnect,delay,long,5,seconds,by,default,p,the,default,size,is,100;public,sock,js,service,registration,set,http,message,cache,size,int,http,message,cache,size,this,http,message,cache,size,http,message,cache,size,return,this
SockJsServiceRegistration -> public SockJsServiceRegistration setHttpMessageCacheSize(int httpMessageCacheSize);1414354684;The number of server-to-client messages that a session can cache while waiting for_the next HTTP polling request from the client. All HTTP transports use this_property since even streaming transports recycle HTTP requests periodically._<p>The amount of time between HTTP requests should be relatively brief and will not_exceed the allows disconnect delay (see_{@link #setDisconnectDelay(long)}), 5 seconds by default._<p>The default size is 100.;public SockJsServiceRegistration setHttpMessageCacheSize(int httpMessageCacheSize) {_		this.httpMessageCacheSize = httpMessageCacheSize__		return this__	};the,number,of,server,to,client,messages,that,a,session,can,cache,while,waiting,for,the,next,http,polling,request,from,the,client,all,http,transports,use,this,property,since,even,streaming,transports,recycle,http,requests,periodically,p,the,amount,of,time,between,http,requests,should,be,relatively,brief,and,will,not,exceed,the,allows,disconnect,delay,see,link,set,disconnect,delay,long,5,seconds,by,default,p,the,default,size,is,100;public,sock,js,service,registration,set,http,message,cache,size,int,http,message,cache,size,this,http,message,cache,size,http,message,cache,size,return,this
SockJsServiceRegistration -> public SockJsServiceRegistration setHttpMessageCacheSize(int httpMessageCacheSize);1414354853;The number of server-to-client messages that a session can cache while waiting for_the next HTTP polling request from the client. All HTTP transports use this_property since even streaming transports recycle HTTP requests periodically._<p>The amount of time between HTTP requests should be relatively brief and will not_exceed the allows disconnect delay (see_{@link #setDisconnectDelay(long)}), 5 seconds by default._<p>The default size is 100.;public SockJsServiceRegistration setHttpMessageCacheSize(int httpMessageCacheSize) {_		this.httpMessageCacheSize = httpMessageCacheSize__		return this__	};the,number,of,server,to,client,messages,that,a,session,can,cache,while,waiting,for,the,next,http,polling,request,from,the,client,all,http,transports,use,this,property,since,even,streaming,transports,recycle,http,requests,periodically,p,the,amount,of,time,between,http,requests,should,be,relatively,brief,and,will,not,exceed,the,allows,disconnect,delay,see,link,set,disconnect,delay,long,5,seconds,by,default,p,the,default,size,is,100;public,sock,js,service,registration,set,http,message,cache,size,int,http,message,cache,size,this,http,message,cache,size,http,message,cache,size,return,this
SockJsServiceRegistration -> public SockJsServiceRegistration setHttpMessageCacheSize(int httpMessageCacheSize);1424248215;The number of server-to-client messages that a session can cache while waiting for_the next HTTP polling request from the client. All HTTP transports use this_property since even streaming transports recycle HTTP requests periodically._<p>The amount of time between HTTP requests should be relatively brief and will not_exceed the allows disconnect delay (see_{@link #setDisconnectDelay(long)}), 5 seconds by default._<p>The default size is 100.;public SockJsServiceRegistration setHttpMessageCacheSize(int httpMessageCacheSize) {_		this.httpMessageCacheSize = httpMessageCacheSize__		return this__	};the,number,of,server,to,client,messages,that,a,session,can,cache,while,waiting,for,the,next,http,polling,request,from,the,client,all,http,transports,use,this,property,since,even,streaming,transports,recycle,http,requests,periodically,p,the,amount,of,time,between,http,requests,should,be,relatively,brief,and,will,not,exceed,the,allows,disconnect,delay,see,link,set,disconnect,delay,long,5,seconds,by,default,p,the,default,size,is,100;public,sock,js,service,registration,set,http,message,cache,size,int,http,message,cache,size,this,http,message,cache,size,http,message,cache,size,return,this
SockJsServiceRegistration -> public SockJsServiceRegistration setHttpMessageCacheSize(int httpMessageCacheSize);1467730834;The number of server-to-client messages that a session can cache while waiting for_the next HTTP polling request from the client. All HTTP transports use this_property since even streaming transports recycle HTTP requests periodically._<p>The amount of time between HTTP requests should be relatively brief and will not_exceed the allows disconnect delay (see_{@link #setDisconnectDelay(long)}), 5 seconds by default._<p>The default size is 100.;public SockJsServiceRegistration setHttpMessageCacheSize(int httpMessageCacheSize) {_		this.httpMessageCacheSize = httpMessageCacheSize__		return this__	};the,number,of,server,to,client,messages,that,a,session,can,cache,while,waiting,for,the,next,http,polling,request,from,the,client,all,http,transports,use,this,property,since,even,streaming,transports,recycle,http,requests,periodically,p,the,amount,of,time,between,http,requests,should,be,relatively,brief,and,will,not,exceed,the,allows,disconnect,delay,see,link,set,disconnect,delay,long,5,seconds,by,default,p,the,default,size,is,100;public,sock,js,service,registration,set,http,message,cache,size,int,http,message,cache,size,this,http,message,cache,size,http,message,cache,size,return,this
SockJsServiceRegistration -> public SockJsServiceRegistration setHttpMessageCacheSize(int httpMessageCacheSize);1491937719;The number of server-to-client messages that a session can cache while waiting for_the next HTTP polling request from the client. All HTTP transports use this_property since even streaming transports recycle HTTP requests periodically._<p>The amount of time between HTTP requests should be relatively brief and will not_exceed the allows disconnect delay (see_{@link #setDisconnectDelay(long)}), 5 seconds by default._<p>The default size is 100.;public SockJsServiceRegistration setHttpMessageCacheSize(int httpMessageCacheSize) {_		this.httpMessageCacheSize = httpMessageCacheSize__		return this__	};the,number,of,server,to,client,messages,that,a,session,can,cache,while,waiting,for,the,next,http,polling,request,from,the,client,all,http,transports,use,this,property,since,even,streaming,transports,recycle,http,requests,periodically,p,the,amount,of,time,between,http,requests,should,be,relatively,brief,and,will,not,exceed,the,allows,disconnect,delay,see,link,set,disconnect,delay,long,5,seconds,by,default,p,the,default,size,is,100;public,sock,js,service,registration,set,http,message,cache,size,int,http,message,cache,size,this,http,message,cache,size,http,message,cache,size,return,this
SockJsServiceRegistration -> public SockJsServiceRegistration setHttpMessageCacheSize(int httpMessageCacheSize);1491946901;The number of server-to-client messages that a session can cache while waiting for_the next HTTP polling request from the client. All HTTP transports use this_property since even streaming transports recycle HTTP requests periodically._<p>The amount of time between HTTP requests should be relatively brief and will not_exceed the allows disconnect delay (see_{@link #setDisconnectDelay(long)}), 5 seconds by default._<p>The default size is 100.;public SockJsServiceRegistration setHttpMessageCacheSize(int httpMessageCacheSize) {_		this.httpMessageCacheSize = httpMessageCacheSize__		return this__	};the,number,of,server,to,client,messages,that,a,session,can,cache,while,waiting,for,the,next,http,polling,request,from,the,client,all,http,transports,use,this,property,since,even,streaming,transports,recycle,http,requests,periodically,p,the,amount,of,time,between,http,requests,should,be,relatively,brief,and,will,not,exceed,the,allows,disconnect,delay,see,link,set,disconnect,delay,long,5,seconds,by,default,p,the,default,size,is,100;public,sock,js,service,registration,set,http,message,cache,size,int,http,message,cache,size,this,http,message,cache,size,http,message,cache,size,return,this
SockJsServiceRegistration -> public SockJsServiceRegistration setHttpMessageCacheSize(int httpMessageCacheSize);1496837955;The number of server-to-client messages that a session can cache while waiting for_the next HTTP polling request from the client. All HTTP transports use this_property since even streaming transports recycle HTTP requests periodically._<p>The amount of time between HTTP requests should be relatively brief and will not_exceed the allows disconnect delay (see_{@link #setDisconnectDelay(long)}), 5 seconds by default._<p>The default size is 100.;public SockJsServiceRegistration setHttpMessageCacheSize(int httpMessageCacheSize) {_		this.httpMessageCacheSize = httpMessageCacheSize__		return this__	};the,number,of,server,to,client,messages,that,a,session,can,cache,while,waiting,for,the,next,http,polling,request,from,the,client,all,http,transports,use,this,property,since,even,streaming,transports,recycle,http,requests,periodically,p,the,amount,of,time,between,http,requests,should,be,relatively,brief,and,will,not,exceed,the,allows,disconnect,delay,see,link,set,disconnect,delay,long,5,seconds,by,default,p,the,default,size,is,100;public,sock,js,service,registration,set,http,message,cache,size,int,http,message,cache,size,this,http,message,cache,size,http,message,cache,size,return,this
SockJsServiceRegistration -> public SockJsServiceRegistration setHttpMessageCacheSize(int httpMessageCacheSize);1498780456;The number of server-to-client messages that a session can cache while waiting for_the next HTTP polling request from the client. All HTTP transports use this_property since even streaming transports recycle HTTP requests periodically._<p>The amount of time between HTTP requests should be relatively brief and will not_exceed the allows disconnect delay (see_{@link #setDisconnectDelay(long)}), 5 seconds by default._<p>The default size is 100.;public SockJsServiceRegistration setHttpMessageCacheSize(int httpMessageCacheSize) {_		this.httpMessageCacheSize = httpMessageCacheSize__		return this__	};the,number,of,server,to,client,messages,that,a,session,can,cache,while,waiting,for,the,next,http,polling,request,from,the,client,all,http,transports,use,this,property,since,even,streaming,transports,recycle,http,requests,periodically,p,the,amount,of,time,between,http,requests,should,be,relatively,brief,and,will,not,exceed,the,allows,disconnect,delay,see,link,set,disconnect,delay,long,5,seconds,by,default,p,the,default,size,is,100;public,sock,js,service,registration,set,http,message,cache,size,int,http,message,cache,size,this,http,message,cache,size,http,message,cache,size,return,this
SockJsServiceRegistration -> public SockJsServiceRegistration setHttpMessageCacheSize(int httpMessageCacheSize);1530174524;The number of server-to-client messages that a session can cache while waiting for_the next HTTP polling request from the client. All HTTP transports use this_property since even streaming transports recycle HTTP requests periodically._<p>The amount of time between HTTP requests should be relatively brief and will not_exceed the allows disconnect delay (see_{@link #setDisconnectDelay(long)}), 5 seconds by default._<p>The default size is 100.;public SockJsServiceRegistration setHttpMessageCacheSize(int httpMessageCacheSize) {_		this.httpMessageCacheSize = httpMessageCacheSize__		return this__	};the,number,of,server,to,client,messages,that,a,session,can,cache,while,waiting,for,the,next,http,polling,request,from,the,client,all,http,transports,use,this,property,since,even,streaming,transports,recycle,http,requests,periodically,p,the,amount,of,time,between,http,requests,should,be,relatively,brief,and,will,not,exceed,the,allows,disconnect,delay,see,link,set,disconnect,delay,long,5,seconds,by,default,p,the,default,size,is,100;public,sock,js,service,registration,set,http,message,cache,size,int,http,message,cache,size,this,http,message,cache,size,http,message,cache,size,return,this
SockJsServiceRegistration -> public SockJsServiceRegistration setHttpMessageCacheSize(int httpMessageCacheSize);1531321803;The number of server-to-client messages that a session can cache while waiting for_the next HTTP polling request from the client. All HTTP transports use this_property since even streaming transports recycle HTTP requests periodically._<p>The amount of time between HTTP requests should be relatively brief and will not_exceed the allows disconnect delay (see_{@link #setDisconnectDelay(long)}), 5 seconds by default._<p>The default size is 100.;public SockJsServiceRegistration setHttpMessageCacheSize(int httpMessageCacheSize) {_		this.httpMessageCacheSize = httpMessageCacheSize__		return this__	};the,number,of,server,to,client,messages,that,a,session,can,cache,while,waiting,for,the,next,http,polling,request,from,the,client,all,http,transports,use,this,property,since,even,streaming,transports,recycle,http,requests,periodically,p,the,amount,of,time,between,http,requests,should,be,relatively,brief,and,will,not,exceed,the,allows,disconnect,delay,see,link,set,disconnect,delay,long,5,seconds,by,default,p,the,default,size,is,100;public,sock,js,service,registration,set,http,message,cache,size,int,http,message,cache,size,this,http,message,cache,size,http,message,cache,size,return,this
SockJsServiceRegistration -> public SockJsServiceRegistration setSessionCookieNeeded(boolean sessionCookieNeeded);1386024878;The SockJS protocol requires a server to respond to the initial "/info" request_from clients with a "cookie_needed" boolean property that indicates whether the use_of a JSESSIONID cookie is required for the application to function correctly, e.g._for load balancing or in Java Servlet containers for the use of an HTTP session._<p>This is especially important for IE 8,9 that support XDomainRequest -- a modified_AJAX/XHR -- that can do requests across domains but does not send any cookies. In_those cases, the SockJS client prefers the "iframe-htmlfile" transport over_"xdr-streaming" in order to be able to send cookies._<p>The default value is "true" to maximize the chance for applications to work_correctly in IE 8,9 with support for cookies (and the JSESSIONID cookie in_particular). However, an application can choose to set this to "false" if the use_of cookies (and HTTP session) is not required.;public SockJsServiceRegistration setSessionCookieNeeded(boolean sessionCookieNeeded) {_		this.sessionCookieNeeded = sessionCookieNeeded__		return this__	};the,sock,js,protocol,requires,a,server,to,respond,to,the,initial,info,request,from,clients,with,a,boolean,property,that,indicates,whether,the,use,of,a,jsessionid,cookie,is,required,for,the,application,to,function,correctly,e,g,for,load,balancing,or,in,java,servlet,containers,for,the,use,of,an,http,session,p,this,is,especially,important,for,ie,8,9,that,support,xdomain,request,a,modified,ajax,xhr,that,can,do,requests,across,domains,but,does,not,send,any,cookies,in,those,cases,the,sock,js,client,prefers,the,iframe,htmlfile,transport,over,xdr,streaming,in,order,to,be,able,to,send,cookies,p,the,default,value,is,true,to,maximize,the,chance,for,applications,to,work,correctly,in,ie,8,9,with,support,for,cookies,and,the,jsessionid,cookie,in,particular,however,an,application,can,choose,to,set,this,to,false,if,the,use,of,cookies,and,http,session,is,not,required;public,sock,js,service,registration,set,session,cookie,needed,boolean,session,cookie,needed,this,session,cookie,needed,session,cookie,needed,return,this
SockJsServiceRegistration -> public SockJsServiceRegistration setSessionCookieNeeded(boolean sessionCookieNeeded);1386462352;The SockJS protocol requires a server to respond to the initial "/info" request_from clients with a "cookie_needed" boolean property that indicates whether the use_of a JSESSIONID cookie is required for the application to function correctly, e.g._for load balancing or in Java Servlet containers for the use of an HTTP session._<p>This is especially important for IE 8,9 that support XDomainRequest -- a modified_AJAX/XHR -- that can do requests across domains but does not send any cookies. In_those cases, the SockJS client prefers the "iframe-htmlfile" transport over_"xdr-streaming" in order to be able to send cookies._<p>The default value is "true" to maximize the chance for applications to work_correctly in IE 8,9 with support for cookies (and the JSESSIONID cookie in_particular). However, an application can choose to set this to "false" if the use_of cookies (and HTTP session) is not required.;public SockJsServiceRegistration setSessionCookieNeeded(boolean sessionCookieNeeded) {_		this.sessionCookieNeeded = sessionCookieNeeded__		return this__	};the,sock,js,protocol,requires,a,server,to,respond,to,the,initial,info,request,from,clients,with,a,boolean,property,that,indicates,whether,the,use,of,a,jsessionid,cookie,is,required,for,the,application,to,function,correctly,e,g,for,load,balancing,or,in,java,servlet,containers,for,the,use,of,an,http,session,p,this,is,especially,important,for,ie,8,9,that,support,xdomain,request,a,modified,ajax,xhr,that,can,do,requests,across,domains,but,does,not,send,any,cookies,in,those,cases,the,sock,js,client,prefers,the,iframe,htmlfile,transport,over,xdr,streaming,in,order,to,be,able,to,send,cookies,p,the,default,value,is,true,to,maximize,the,chance,for,applications,to,work,correctly,in,ie,8,9,with,support,for,cookies,and,the,jsessionid,cookie,in,particular,however,an,application,can,choose,to,set,this,to,false,if,the,use,of,cookies,and,http,session,is,not,required;public,sock,js,service,registration,set,session,cookie,needed,boolean,session,cookie,needed,this,session,cookie,needed,session,cookie,needed,return,this
SockJsServiceRegistration -> public SockJsServiceRegistration setSessionCookieNeeded(boolean sessionCookieNeeded);1395630903;The SockJS protocol requires a server to respond to the initial "/info" request_from clients with a "cookie_needed" boolean property that indicates whether the use_of a JSESSIONID cookie is required for the application to function correctly, e.g._for load balancing or in Java Servlet containers for the use of an HTTP session.__<p>This is especially important for IE 8,9 that support XDomainRequest -- a modified_AJAX/XHR -- that can do requests across domains but does not send any cookies. In_those cases, the SockJS client prefers the "iframe-htmlfile" transport over_"xdr-streaming" in order to be able to send cookies.__<p>The default value is "true" to maximize the chance for applications to work_correctly in IE 8,9 with support for cookies (and the JSESSIONID cookie in_particular). However, an application can choose to set this to "false" if the use_of cookies (and HTTP session) is not required.;public SockJsServiceRegistration setSessionCookieNeeded(boolean sessionCookieNeeded) {_		this.sessionCookieNeeded = sessionCookieNeeded__		return this__	};the,sock,js,protocol,requires,a,server,to,respond,to,the,initial,info,request,from,clients,with,a,boolean,property,that,indicates,whether,the,use,of,a,jsessionid,cookie,is,required,for,the,application,to,function,correctly,e,g,for,load,balancing,or,in,java,servlet,containers,for,the,use,of,an,http,session,p,this,is,especially,important,for,ie,8,9,that,support,xdomain,request,a,modified,ajax,xhr,that,can,do,requests,across,domains,but,does,not,send,any,cookies,in,those,cases,the,sock,js,client,prefers,the,iframe,htmlfile,transport,over,xdr,streaming,in,order,to,be,able,to,send,cookies,p,the,default,value,is,true,to,maximize,the,chance,for,applications,to,work,correctly,in,ie,8,9,with,support,for,cookies,and,the,jsessionid,cookie,in,particular,however,an,application,can,choose,to,set,this,to,false,if,the,use,of,cookies,and,http,session,is,not,required;public,sock,js,service,registration,set,session,cookie,needed,boolean,session,cookie,needed,this,session,cookie,needed,session,cookie,needed,return,this
SockJsServiceRegistration -> public SockJsServiceRegistration setSessionCookieNeeded(boolean sessionCookieNeeded);1402065124;The SockJS protocol requires a server to respond to the initial "/info" request_from clients with a "cookie_needed" boolean property that indicates whether the use_of a JSESSIONID cookie is required for the application to function correctly, e.g._for load balancing or in Java Servlet containers for the use of an HTTP session.__<p>This is especially important for IE 8,9 that support XDomainRequest -- a modified_AJAX/XHR -- that can do requests across domains but does not send any cookies. In_those cases, the SockJS client prefers the "iframe-htmlfile" transport over_"xdr-streaming" in order to be able to send cookies.__<p>The default value is "true" to maximize the chance for applications to work_correctly in IE 8,9 with support for cookies (and the JSESSIONID cookie in_particular). However, an application can choose to set this to "false" if the use_of cookies (and HTTP session) is not required.;public SockJsServiceRegistration setSessionCookieNeeded(boolean sessionCookieNeeded) {_		this.sessionCookieNeeded = sessionCookieNeeded__		return this__	};the,sock,js,protocol,requires,a,server,to,respond,to,the,initial,info,request,from,clients,with,a,boolean,property,that,indicates,whether,the,use,of,a,jsessionid,cookie,is,required,for,the,application,to,function,correctly,e,g,for,load,balancing,or,in,java,servlet,containers,for,the,use,of,an,http,session,p,this,is,especially,important,for,ie,8,9,that,support,xdomain,request,a,modified,ajax,xhr,that,can,do,requests,across,domains,but,does,not,send,any,cookies,in,those,cases,the,sock,js,client,prefers,the,iframe,htmlfile,transport,over,xdr,streaming,in,order,to,be,able,to,send,cookies,p,the,default,value,is,true,to,maximize,the,chance,for,applications,to,work,correctly,in,ie,8,9,with,support,for,cookies,and,the,jsessionid,cookie,in,particular,however,an,application,can,choose,to,set,this,to,false,if,the,use,of,cookies,and,http,session,is,not,required;public,sock,js,service,registration,set,session,cookie,needed,boolean,session,cookie,needed,this,session,cookie,needed,session,cookie,needed,return,this
SockJsServiceRegistration -> public SockJsServiceRegistration setSessionCookieNeeded(boolean sessionCookieNeeded);1408994390;The SockJS protocol requires a server to respond to the initial "/info" request_from clients with a "cookie_needed" boolean property that indicates whether the use_of a JSESSIONID cookie is required for the application to function correctly, e.g._for load balancing or in Java Servlet containers for the use of an HTTP session.__<p>This is especially important for IE 8,9 that support XDomainRequest -- a modified_AJAX/XHR -- that can do requests across domains but does not send any cookies. In_those cases, the SockJS client prefers the "iframe-htmlfile" transport over_"xdr-streaming" in order to be able to send cookies.__<p>The default value is "true" to maximize the chance for applications to work_correctly in IE 8,9 with support for cookies (and the JSESSIONID cookie in_particular). However, an application can choose to set this to "false" if the use_of cookies (and HTTP session) is not required.;public SockJsServiceRegistration setSessionCookieNeeded(boolean sessionCookieNeeded) {_		this.sessionCookieNeeded = sessionCookieNeeded__		return this__	};the,sock,js,protocol,requires,a,server,to,respond,to,the,initial,info,request,from,clients,with,a,boolean,property,that,indicates,whether,the,use,of,a,jsessionid,cookie,is,required,for,the,application,to,function,correctly,e,g,for,load,balancing,or,in,java,servlet,containers,for,the,use,of,an,http,session,p,this,is,especially,important,for,ie,8,9,that,support,xdomain,request,a,modified,ajax,xhr,that,can,do,requests,across,domains,but,does,not,send,any,cookies,in,those,cases,the,sock,js,client,prefers,the,iframe,htmlfile,transport,over,xdr,streaming,in,order,to,be,able,to,send,cookies,p,the,default,value,is,true,to,maximize,the,chance,for,applications,to,work,correctly,in,ie,8,9,with,support,for,cookies,and,the,jsessionid,cookie,in,particular,however,an,application,can,choose,to,set,this,to,false,if,the,use,of,cookies,and,http,session,is,not,required;public,sock,js,service,registration,set,session,cookie,needed,boolean,session,cookie,needed,this,session,cookie,needed,session,cookie,needed,return,this
SockJsServiceRegistration -> public SockJsServiceRegistration setSessionCookieNeeded(boolean sessionCookieNeeded);1411760528;The SockJS protocol requires a server to respond to the initial "/info" request_from clients with a "cookie_needed" boolean property that indicates whether the use_of a JSESSIONID cookie is required for the application to function correctly, e.g._for load balancing or in Java Servlet containers for the use of an HTTP session.__<p>This is especially important for IE 8,9 that support XDomainRequest -- a modified_AJAX/XHR -- that can do requests across domains but does not send any cookies. In_those cases, the SockJS client prefers the "iframe-htmlfile" transport over_"xdr-streaming" in order to be able to send cookies.__<p>The default value is "true" to maximize the chance for applications to work_correctly in IE 8,9 with support for cookies (and the JSESSIONID cookie in_particular). However, an application can choose to set this to "false" if the use_of cookies (and HTTP session) is not required.;public SockJsServiceRegistration setSessionCookieNeeded(boolean sessionCookieNeeded) {_		this.sessionCookieNeeded = sessionCookieNeeded__		return this__	};the,sock,js,protocol,requires,a,server,to,respond,to,the,initial,info,request,from,clients,with,a,boolean,property,that,indicates,whether,the,use,of,a,jsessionid,cookie,is,required,for,the,application,to,function,correctly,e,g,for,load,balancing,or,in,java,servlet,containers,for,the,use,of,an,http,session,p,this,is,especially,important,for,ie,8,9,that,support,xdomain,request,a,modified,ajax,xhr,that,can,do,requests,across,domains,but,does,not,send,any,cookies,in,those,cases,the,sock,js,client,prefers,the,iframe,htmlfile,transport,over,xdr,streaming,in,order,to,be,able,to,send,cookies,p,the,default,value,is,true,to,maximize,the,chance,for,applications,to,work,correctly,in,ie,8,9,with,support,for,cookies,and,the,jsessionid,cookie,in,particular,however,an,application,can,choose,to,set,this,to,false,if,the,use,of,cookies,and,http,session,is,not,required;public,sock,js,service,registration,set,session,cookie,needed,boolean,session,cookie,needed,this,session,cookie,needed,session,cookie,needed,return,this
SockJsServiceRegistration -> public SockJsServiceRegistration setSessionCookieNeeded(boolean sessionCookieNeeded);1411763921;The SockJS protocol requires a server to respond to the initial "/info" request_from clients with a "cookie_needed" boolean property that indicates whether the use_of a JSESSIONID cookie is required for the application to function correctly, e.g._for load balancing or in Java Servlet containers for the use of an HTTP session.__<p>This is especially important for IE 8,9 that support XDomainRequest -- a modified_AJAX/XHR -- that can do requests across domains but does not send any cookies. In_those cases, the SockJS client prefers the "iframe-htmlfile" transport over_"xdr-streaming" in order to be able to send cookies.__<p>The default value is "true" to maximize the chance for applications to work_correctly in IE 8,9 with support for cookies (and the JSESSIONID cookie in_particular). However, an application can choose to set this to "false" if the use_of cookies (and HTTP session) is not required.;public SockJsServiceRegistration setSessionCookieNeeded(boolean sessionCookieNeeded) {_		this.sessionCookieNeeded = sessionCookieNeeded__		return this__	};the,sock,js,protocol,requires,a,server,to,respond,to,the,initial,info,request,from,clients,with,a,boolean,property,that,indicates,whether,the,use,of,a,jsessionid,cookie,is,required,for,the,application,to,function,correctly,e,g,for,load,balancing,or,in,java,servlet,containers,for,the,use,of,an,http,session,p,this,is,especially,important,for,ie,8,9,that,support,xdomain,request,a,modified,ajax,xhr,that,can,do,requests,across,domains,but,does,not,send,any,cookies,in,those,cases,the,sock,js,client,prefers,the,iframe,htmlfile,transport,over,xdr,streaming,in,order,to,be,able,to,send,cookies,p,the,default,value,is,true,to,maximize,the,chance,for,applications,to,work,correctly,in,ie,8,9,with,support,for,cookies,and,the,jsessionid,cookie,in,particular,however,an,application,can,choose,to,set,this,to,false,if,the,use,of,cookies,and,http,session,is,not,required;public,sock,js,service,registration,set,session,cookie,needed,boolean,session,cookie,needed,this,session,cookie,needed,session,cookie,needed,return,this
SockJsServiceRegistration -> public SockJsServiceRegistration setSessionCookieNeeded(boolean sessionCookieNeeded);1413848647;The SockJS protocol requires a server to respond to the initial "/info" request_from clients with a "cookie_needed" boolean property that indicates whether the use_of a JSESSIONID cookie is required for the application to function correctly, e.g._for load balancing or in Java Servlet containers for the use of an HTTP session.__<p>This is especially important for IE 8,9 that support XDomainRequest -- a modified_AJAX/XHR -- that can do requests across domains but does not send any cookies. In_those cases, the SockJS client prefers the "iframe-htmlfile" transport over_"xdr-streaming" in order to be able to send cookies.__<p>The default value is "true" to maximize the chance for applications to work_correctly in IE 8,9 with support for cookies (and the JSESSIONID cookie in_particular). However, an application can choose to set this to "false" if the use_of cookies (and HTTP session) is not required.;public SockJsServiceRegistration setSessionCookieNeeded(boolean sessionCookieNeeded) {_		this.sessionCookieNeeded = sessionCookieNeeded__		return this__	};the,sock,js,protocol,requires,a,server,to,respond,to,the,initial,info,request,from,clients,with,a,boolean,property,that,indicates,whether,the,use,of,a,jsessionid,cookie,is,required,for,the,application,to,function,correctly,e,g,for,load,balancing,or,in,java,servlet,containers,for,the,use,of,an,http,session,p,this,is,especially,important,for,ie,8,9,that,support,xdomain,request,a,modified,ajax,xhr,that,can,do,requests,across,domains,but,does,not,send,any,cookies,in,those,cases,the,sock,js,client,prefers,the,iframe,htmlfile,transport,over,xdr,streaming,in,order,to,be,able,to,send,cookies,p,the,default,value,is,true,to,maximize,the,chance,for,applications,to,work,correctly,in,ie,8,9,with,support,for,cookies,and,the,jsessionid,cookie,in,particular,however,an,application,can,choose,to,set,this,to,false,if,the,use,of,cookies,and,http,session,is,not,required;public,sock,js,service,registration,set,session,cookie,needed,boolean,session,cookie,needed,this,session,cookie,needed,session,cookie,needed,return,this
SockJsServiceRegistration -> public SockJsServiceRegistration setSessionCookieNeeded(boolean sessionCookieNeeded);1414354684;The SockJS protocol requires a server to respond to the initial "/info" request_from clients with a "cookie_needed" boolean property that indicates whether the use_of a JSESSIONID cookie is required for the application to function correctly, e.g._for load balancing or in Java Servlet containers for the use of an HTTP session.__<p>This is especially important for IE 8,9 that support XDomainRequest -- a modified_AJAX/XHR -- that can do requests across domains but does not send any cookies. In_those cases, the SockJS client prefers the "iframe-htmlfile" transport over_"xdr-streaming" in order to be able to send cookies.__<p>The default value is "true" to maximize the chance for applications to work_correctly in IE 8,9 with support for cookies (and the JSESSIONID cookie in_particular). However, an application can choose to set this to "false" if the use_of cookies (and HTTP session) is not required.;public SockJsServiceRegistration setSessionCookieNeeded(boolean sessionCookieNeeded) {_		this.sessionCookieNeeded = sessionCookieNeeded__		return this__	};the,sock,js,protocol,requires,a,server,to,respond,to,the,initial,info,request,from,clients,with,a,boolean,property,that,indicates,whether,the,use,of,a,jsessionid,cookie,is,required,for,the,application,to,function,correctly,e,g,for,load,balancing,or,in,java,servlet,containers,for,the,use,of,an,http,session,p,this,is,especially,important,for,ie,8,9,that,support,xdomain,request,a,modified,ajax,xhr,that,can,do,requests,across,domains,but,does,not,send,any,cookies,in,those,cases,the,sock,js,client,prefers,the,iframe,htmlfile,transport,over,xdr,streaming,in,order,to,be,able,to,send,cookies,p,the,default,value,is,true,to,maximize,the,chance,for,applications,to,work,correctly,in,ie,8,9,with,support,for,cookies,and,the,jsessionid,cookie,in,particular,however,an,application,can,choose,to,set,this,to,false,if,the,use,of,cookies,and,http,session,is,not,required;public,sock,js,service,registration,set,session,cookie,needed,boolean,session,cookie,needed,this,session,cookie,needed,session,cookie,needed,return,this
SockJsServiceRegistration -> public SockJsServiceRegistration setSessionCookieNeeded(boolean sessionCookieNeeded);1414354853;The SockJS protocol requires a server to respond to the initial "/info" request_from clients with a "cookie_needed" boolean property that indicates whether the use_of a JSESSIONID cookie is required for the application to function correctly, e.g._for load balancing or in Java Servlet containers for the use of an HTTP session.__<p>This is especially important for IE 8,9 that support XDomainRequest -- a modified_AJAX/XHR -- that can do requests across domains but does not send any cookies. In_those cases, the SockJS client prefers the "iframe-htmlfile" transport over_"xdr-streaming" in order to be able to send cookies.__<p>The default value is "true" to maximize the chance for applications to work_correctly in IE 8,9 with support for cookies (and the JSESSIONID cookie in_particular). However, an application can choose to set this to "false" if the use_of cookies (and HTTP session) is not required.;public SockJsServiceRegistration setSessionCookieNeeded(boolean sessionCookieNeeded) {_		this.sessionCookieNeeded = sessionCookieNeeded__		return this__	};the,sock,js,protocol,requires,a,server,to,respond,to,the,initial,info,request,from,clients,with,a,boolean,property,that,indicates,whether,the,use,of,a,jsessionid,cookie,is,required,for,the,application,to,function,correctly,e,g,for,load,balancing,or,in,java,servlet,containers,for,the,use,of,an,http,session,p,this,is,especially,important,for,ie,8,9,that,support,xdomain,request,a,modified,ajax,xhr,that,can,do,requests,across,domains,but,does,not,send,any,cookies,in,those,cases,the,sock,js,client,prefers,the,iframe,htmlfile,transport,over,xdr,streaming,in,order,to,be,able,to,send,cookies,p,the,default,value,is,true,to,maximize,the,chance,for,applications,to,work,correctly,in,ie,8,9,with,support,for,cookies,and,the,jsessionid,cookie,in,particular,however,an,application,can,choose,to,set,this,to,false,if,the,use,of,cookies,and,http,session,is,not,required;public,sock,js,service,registration,set,session,cookie,needed,boolean,session,cookie,needed,this,session,cookie,needed,session,cookie,needed,return,this
SockJsServiceRegistration -> public SockJsServiceRegistration setSessionCookieNeeded(boolean sessionCookieNeeded);1424248215;The SockJS protocol requires a server to respond to the initial "/info" request_from clients with a "cookie_needed" boolean property that indicates whether the use_of a JSESSIONID cookie is required for the application to function correctly, e.g._for load balancing or in Java Servlet containers for the use of an HTTP session.__<p>This is especially important for IE 8,9 that support XDomainRequest -- a modified_AJAX/XHR -- that can do requests across domains but does not send any cookies. In_those cases, the SockJS client prefers the "iframe-htmlfile" transport over_"xdr-streaming" in order to be able to send cookies.__<p>The default value is "true" to maximize the chance for applications to work_correctly in IE 8,9 with support for cookies (and the JSESSIONID cookie in_particular). However, an application can choose to set this to "false" if the use_of cookies (and HTTP session) is not required.;public SockJsServiceRegistration setSessionCookieNeeded(boolean sessionCookieNeeded) {_		this.sessionCookieNeeded = sessionCookieNeeded__		return this__	};the,sock,js,protocol,requires,a,server,to,respond,to,the,initial,info,request,from,clients,with,a,boolean,property,that,indicates,whether,the,use,of,a,jsessionid,cookie,is,required,for,the,application,to,function,correctly,e,g,for,load,balancing,or,in,java,servlet,containers,for,the,use,of,an,http,session,p,this,is,especially,important,for,ie,8,9,that,support,xdomain,request,a,modified,ajax,xhr,that,can,do,requests,across,domains,but,does,not,send,any,cookies,in,those,cases,the,sock,js,client,prefers,the,iframe,htmlfile,transport,over,xdr,streaming,in,order,to,be,able,to,send,cookies,p,the,default,value,is,true,to,maximize,the,chance,for,applications,to,work,correctly,in,ie,8,9,with,support,for,cookies,and,the,jsessionid,cookie,in,particular,however,an,application,can,choose,to,set,this,to,false,if,the,use,of,cookies,and,http,session,is,not,required;public,sock,js,service,registration,set,session,cookie,needed,boolean,session,cookie,needed,this,session,cookie,needed,session,cookie,needed,return,this
SockJsServiceRegistration -> public SockJsServiceRegistration setSessionCookieNeeded(boolean sessionCookieNeeded);1467730834;The SockJS protocol requires a server to respond to the initial "/info" request_from clients with a "cookie_needed" boolean property that indicates whether the use_of a JSESSIONID cookie is required for the application to function correctly, e.g._for load balancing or in Java Servlet containers for the use of an HTTP session.__<p>This is especially important for IE 8,9 that support XDomainRequest -- a modified_AJAX/XHR -- that can do requests across domains but does not send any cookies. In_those cases, the SockJS client prefers the "iframe-htmlfile" transport over_"xdr-streaming" in order to be able to send cookies.__<p>The default value is "true" to maximize the chance for applications to work_correctly in IE 8,9 with support for cookies (and the JSESSIONID cookie in_particular). However, an application can choose to set this to "false" if the use_of cookies (and HTTP session) is not required.;public SockJsServiceRegistration setSessionCookieNeeded(boolean sessionCookieNeeded) {_		this.sessionCookieNeeded = sessionCookieNeeded__		return this__	};the,sock,js,protocol,requires,a,server,to,respond,to,the,initial,info,request,from,clients,with,a,boolean,property,that,indicates,whether,the,use,of,a,jsessionid,cookie,is,required,for,the,application,to,function,correctly,e,g,for,load,balancing,or,in,java,servlet,containers,for,the,use,of,an,http,session,p,this,is,especially,important,for,ie,8,9,that,support,xdomain,request,a,modified,ajax,xhr,that,can,do,requests,across,domains,but,does,not,send,any,cookies,in,those,cases,the,sock,js,client,prefers,the,iframe,htmlfile,transport,over,xdr,streaming,in,order,to,be,able,to,send,cookies,p,the,default,value,is,true,to,maximize,the,chance,for,applications,to,work,correctly,in,ie,8,9,with,support,for,cookies,and,the,jsessionid,cookie,in,particular,however,an,application,can,choose,to,set,this,to,false,if,the,use,of,cookies,and,http,session,is,not,required;public,sock,js,service,registration,set,session,cookie,needed,boolean,session,cookie,needed,this,session,cookie,needed,session,cookie,needed,return,this
SockJsServiceRegistration -> public SockJsServiceRegistration setSessionCookieNeeded(boolean sessionCookieNeeded);1491937719;The SockJS protocol requires a server to respond to the initial "/info" request_from clients with a "cookie_needed" boolean property that indicates whether the use_of a JSESSIONID cookie is required for the application to function correctly, e.g._for load balancing or in Java Servlet containers for the use of an HTTP session.__<p>This is especially important for IE 8,9 that support XDomainRequest -- a modified_AJAX/XHR -- that can do requests across domains but does not send any cookies. In_those cases, the SockJS client prefers the "iframe-htmlfile" transport over_"xdr-streaming" in order to be able to send cookies.__<p>The default value is "true" to maximize the chance for applications to work_correctly in IE 8,9 with support for cookies (and the JSESSIONID cookie in_particular). However, an application can choose to set this to "false" if the use_of cookies (and HTTP session) is not required.;public SockJsServiceRegistration setSessionCookieNeeded(boolean sessionCookieNeeded) {_		this.sessionCookieNeeded = sessionCookieNeeded__		return this__	};the,sock,js,protocol,requires,a,server,to,respond,to,the,initial,info,request,from,clients,with,a,boolean,property,that,indicates,whether,the,use,of,a,jsessionid,cookie,is,required,for,the,application,to,function,correctly,e,g,for,load,balancing,or,in,java,servlet,containers,for,the,use,of,an,http,session,p,this,is,especially,important,for,ie,8,9,that,support,xdomain,request,a,modified,ajax,xhr,that,can,do,requests,across,domains,but,does,not,send,any,cookies,in,those,cases,the,sock,js,client,prefers,the,iframe,htmlfile,transport,over,xdr,streaming,in,order,to,be,able,to,send,cookies,p,the,default,value,is,true,to,maximize,the,chance,for,applications,to,work,correctly,in,ie,8,9,with,support,for,cookies,and,the,jsessionid,cookie,in,particular,however,an,application,can,choose,to,set,this,to,false,if,the,use,of,cookies,and,http,session,is,not,required;public,sock,js,service,registration,set,session,cookie,needed,boolean,session,cookie,needed,this,session,cookie,needed,session,cookie,needed,return,this
SockJsServiceRegistration -> public SockJsServiceRegistration setSessionCookieNeeded(boolean sessionCookieNeeded);1491946901;The SockJS protocol requires a server to respond to the initial "/info" request_from clients with a "cookie_needed" boolean property that indicates whether the use_of a JSESSIONID cookie is required for the application to function correctly, e.g._for load balancing or in Java Servlet containers for the use of an HTTP session.__<p>This is especially important for IE 8,9 that support XDomainRequest -- a modified_AJAX/XHR -- that can do requests across domains but does not send any cookies. In_those cases, the SockJS client prefers the "iframe-htmlfile" transport over_"xdr-streaming" in order to be able to send cookies.__<p>The default value is "true" to maximize the chance for applications to work_correctly in IE 8,9 with support for cookies (and the JSESSIONID cookie in_particular). However, an application can choose to set this to "false" if the use_of cookies (and HTTP session) is not required.;public SockJsServiceRegistration setSessionCookieNeeded(boolean sessionCookieNeeded) {_		this.sessionCookieNeeded = sessionCookieNeeded__		return this__	};the,sock,js,protocol,requires,a,server,to,respond,to,the,initial,info,request,from,clients,with,a,boolean,property,that,indicates,whether,the,use,of,a,jsessionid,cookie,is,required,for,the,application,to,function,correctly,e,g,for,load,balancing,or,in,java,servlet,containers,for,the,use,of,an,http,session,p,this,is,especially,important,for,ie,8,9,that,support,xdomain,request,a,modified,ajax,xhr,that,can,do,requests,across,domains,but,does,not,send,any,cookies,in,those,cases,the,sock,js,client,prefers,the,iframe,htmlfile,transport,over,xdr,streaming,in,order,to,be,able,to,send,cookies,p,the,default,value,is,true,to,maximize,the,chance,for,applications,to,work,correctly,in,ie,8,9,with,support,for,cookies,and,the,jsessionid,cookie,in,particular,however,an,application,can,choose,to,set,this,to,false,if,the,use,of,cookies,and,http,session,is,not,required;public,sock,js,service,registration,set,session,cookie,needed,boolean,session,cookie,needed,this,session,cookie,needed,session,cookie,needed,return,this
SockJsServiceRegistration -> public SockJsServiceRegistration setSessionCookieNeeded(boolean sessionCookieNeeded);1496837955;The SockJS protocol requires a server to respond to the initial "/info" request_from clients with a "cookie_needed" boolean property that indicates whether the use_of a JSESSIONID cookie is required for the application to function correctly, e.g._for load balancing or in Java Servlet containers for the use of an HTTP session.__<p>This is especially important for IE 8,9 that support XDomainRequest -- a modified_AJAX/XHR -- that can do requests across domains but does not send any cookies. In_those cases, the SockJS client prefers the "iframe-htmlfile" transport over_"xdr-streaming" in order to be able to send cookies.__<p>The default value is "true" to maximize the chance for applications to work_correctly in IE 8,9 with support for cookies (and the JSESSIONID cookie in_particular). However, an application can choose to set this to "false" if the use_of cookies (and HTTP session) is not required.;public SockJsServiceRegistration setSessionCookieNeeded(boolean sessionCookieNeeded) {_		this.sessionCookieNeeded = sessionCookieNeeded__		return this__	};the,sock,js,protocol,requires,a,server,to,respond,to,the,initial,info,request,from,clients,with,a,boolean,property,that,indicates,whether,the,use,of,a,jsessionid,cookie,is,required,for,the,application,to,function,correctly,e,g,for,load,balancing,or,in,java,servlet,containers,for,the,use,of,an,http,session,p,this,is,especially,important,for,ie,8,9,that,support,xdomain,request,a,modified,ajax,xhr,that,can,do,requests,across,domains,but,does,not,send,any,cookies,in,those,cases,the,sock,js,client,prefers,the,iframe,htmlfile,transport,over,xdr,streaming,in,order,to,be,able,to,send,cookies,p,the,default,value,is,true,to,maximize,the,chance,for,applications,to,work,correctly,in,ie,8,9,with,support,for,cookies,and,the,jsessionid,cookie,in,particular,however,an,application,can,choose,to,set,this,to,false,if,the,use,of,cookies,and,http,session,is,not,required;public,sock,js,service,registration,set,session,cookie,needed,boolean,session,cookie,needed,this,session,cookie,needed,session,cookie,needed,return,this
SockJsServiceRegistration -> public SockJsServiceRegistration setSessionCookieNeeded(boolean sessionCookieNeeded);1498780456;The SockJS protocol requires a server to respond to the initial "/info" request_from clients with a "cookie_needed" boolean property that indicates whether the use_of a JSESSIONID cookie is required for the application to function correctly, e.g._for load balancing or in Java Servlet containers for the use of an HTTP session.__<p>This is especially important for IE 8,9 that support XDomainRequest -- a modified_AJAX/XHR -- that can do requests across domains but does not send any cookies. In_those cases, the SockJS client prefers the "iframe-htmlfile" transport over_"xdr-streaming" in order to be able to send cookies.__<p>The default value is "true" to maximize the chance for applications to work_correctly in IE 8,9 with support for cookies (and the JSESSIONID cookie in_particular). However, an application can choose to set this to "false" if the use_of cookies (and HTTP session) is not required.;public SockJsServiceRegistration setSessionCookieNeeded(boolean sessionCookieNeeded) {_		this.sessionCookieNeeded = sessionCookieNeeded__		return this__	};the,sock,js,protocol,requires,a,server,to,respond,to,the,initial,info,request,from,clients,with,a,boolean,property,that,indicates,whether,the,use,of,a,jsessionid,cookie,is,required,for,the,application,to,function,correctly,e,g,for,load,balancing,or,in,java,servlet,containers,for,the,use,of,an,http,session,p,this,is,especially,important,for,ie,8,9,that,support,xdomain,request,a,modified,ajax,xhr,that,can,do,requests,across,domains,but,does,not,send,any,cookies,in,those,cases,the,sock,js,client,prefers,the,iframe,htmlfile,transport,over,xdr,streaming,in,order,to,be,able,to,send,cookies,p,the,default,value,is,true,to,maximize,the,chance,for,applications,to,work,correctly,in,ie,8,9,with,support,for,cookies,and,the,jsessionid,cookie,in,particular,however,an,application,can,choose,to,set,this,to,false,if,the,use,of,cookies,and,http,session,is,not,required;public,sock,js,service,registration,set,session,cookie,needed,boolean,session,cookie,needed,this,session,cookie,needed,session,cookie,needed,return,this
SockJsServiceRegistration -> public SockJsServiceRegistration setSessionCookieNeeded(boolean sessionCookieNeeded);1530174524;The SockJS protocol requires a server to respond to the initial "/info" request_from clients with a "cookie_needed" boolean property that indicates whether the use_of a JSESSIONID cookie is required for the application to function correctly, e.g._for load balancing or in Java Servlet containers for the use of an HTTP session.__<p>This is especially important for IE 8,9 that support XDomainRequest -- a modified_AJAX/XHR -- that can do requests across domains but does not send any cookies. In_those cases, the SockJS client prefers the "iframe-htmlfile" transport over_"xdr-streaming" in order to be able to send cookies.__<p>The default value is "true" to maximize the chance for applications to work_correctly in IE 8,9 with support for cookies (and the JSESSIONID cookie in_particular). However, an application can choose to set this to "false" if the use_of cookies (and HTTP session) is not required.;public SockJsServiceRegistration setSessionCookieNeeded(boolean sessionCookieNeeded) {_		this.sessionCookieNeeded = sessionCookieNeeded__		return this__	};the,sock,js,protocol,requires,a,server,to,respond,to,the,initial,info,request,from,clients,with,a,boolean,property,that,indicates,whether,the,use,of,a,jsessionid,cookie,is,required,for,the,application,to,function,correctly,e,g,for,load,balancing,or,in,java,servlet,containers,for,the,use,of,an,http,session,p,this,is,especially,important,for,ie,8,9,that,support,xdomain,request,a,modified,ajax,xhr,that,can,do,requests,across,domains,but,does,not,send,any,cookies,in,those,cases,the,sock,js,client,prefers,the,iframe,htmlfile,transport,over,xdr,streaming,in,order,to,be,able,to,send,cookies,p,the,default,value,is,true,to,maximize,the,chance,for,applications,to,work,correctly,in,ie,8,9,with,support,for,cookies,and,the,jsessionid,cookie,in,particular,however,an,application,can,choose,to,set,this,to,false,if,the,use,of,cookies,and,http,session,is,not,required;public,sock,js,service,registration,set,session,cookie,needed,boolean,session,cookie,needed,this,session,cookie,needed,session,cookie,needed,return,this
SockJsServiceRegistration -> public SockJsServiceRegistration setSessionCookieNeeded(boolean sessionCookieNeeded);1531321803;The SockJS protocol requires a server to respond to the initial "/info" request_from clients with a "cookie_needed" boolean property that indicates whether the use_of a JSESSIONID cookie is required for the application to function correctly, e.g._for load balancing or in Java Servlet containers for the use of an HTTP session.__<p>This is especially important for IE 8,9 that support XDomainRequest -- a modified_AJAX/XHR -- that can do requests across domains but does not send any cookies. In_those cases, the SockJS client prefers the "iframe-htmlfile" transport over_"xdr-streaming" in order to be able to send cookies.__<p>The default value is "true" to maximize the chance for applications to work_correctly in IE 8,9 with support for cookies (and the JSESSIONID cookie in_particular). However, an application can choose to set this to "false" if the use_of cookies (and HTTP session) is not required.;public SockJsServiceRegistration setSessionCookieNeeded(boolean sessionCookieNeeded) {_		this.sessionCookieNeeded = sessionCookieNeeded__		return this__	};the,sock,js,protocol,requires,a,server,to,respond,to,the,initial,info,request,from,clients,with,a,boolean,property,that,indicates,whether,the,use,of,a,jsessionid,cookie,is,required,for,the,application,to,function,correctly,e,g,for,load,balancing,or,in,java,servlet,containers,for,the,use,of,an,http,session,p,this,is,especially,important,for,ie,8,9,that,support,xdomain,request,a,modified,ajax,xhr,that,can,do,requests,across,domains,but,does,not,send,any,cookies,in,those,cases,the,sock,js,client,prefers,the,iframe,htmlfile,transport,over,xdr,streaming,in,order,to,be,able,to,send,cookies,p,the,default,value,is,true,to,maximize,the,chance,for,applications,to,work,correctly,in,ie,8,9,with,support,for,cookies,and,the,jsessionid,cookie,in,particular,however,an,application,can,choose,to,set,this,to,false,if,the,use,of,cookies,and,http,session,is,not,required;public,sock,js,service,registration,set,session,cookie,needed,boolean,session,cookie,needed,this,session,cookie,needed,session,cookie,needed,return,this
SockJsServiceRegistration -> public SockJsServiceRegistration setHeartbeatTime(long heartbeatTime);1386024878;The amount of time in milliseconds when the server has not sent any_messages and after which the server should send a heartbeat frame to the_client in order to keep the connection from breaking._<p>The default value is 25,000 (25 seconds).;public SockJsServiceRegistration setHeartbeatTime(long heartbeatTime) {_		this.heartbeatTime = heartbeatTime__		return this__	};the,amount,of,time,in,milliseconds,when,the,server,has,not,sent,any,messages,and,after,which,the,server,should,send,a,heartbeat,frame,to,the,client,in,order,to,keep,the,connection,from,breaking,p,the,default,value,is,25,000,25,seconds;public,sock,js,service,registration,set,heartbeat,time,long,heartbeat,time,this,heartbeat,time,heartbeat,time,return,this
SockJsServiceRegistration -> public SockJsServiceRegistration setHeartbeatTime(long heartbeatTime);1386462352;The amount of time in milliseconds when the server has not sent any_messages and after which the server should send a heartbeat frame to the_client in order to keep the connection from breaking._<p>The default value is 25,000 (25 seconds).;public SockJsServiceRegistration setHeartbeatTime(long heartbeatTime) {_		this.heartbeatTime = heartbeatTime__		return this__	};the,amount,of,time,in,milliseconds,when,the,server,has,not,sent,any,messages,and,after,which,the,server,should,send,a,heartbeat,frame,to,the,client,in,order,to,keep,the,connection,from,breaking,p,the,default,value,is,25,000,25,seconds;public,sock,js,service,registration,set,heartbeat,time,long,heartbeat,time,this,heartbeat,time,heartbeat,time,return,this
SockJsServiceRegistration -> public SockJsServiceRegistration setHeartbeatTime(long heartbeatTime);1395630903;The amount of time in milliseconds when the server has not sent any_messages and after which the server should send a heartbeat frame to the_client in order to keep the connection from breaking._<p>The default value is 25,000 (25 seconds).;public SockJsServiceRegistration setHeartbeatTime(long heartbeatTime) {_		this.heartbeatTime = heartbeatTime__		return this__	};the,amount,of,time,in,milliseconds,when,the,server,has,not,sent,any,messages,and,after,which,the,server,should,send,a,heartbeat,frame,to,the,client,in,order,to,keep,the,connection,from,breaking,p,the,default,value,is,25,000,25,seconds;public,sock,js,service,registration,set,heartbeat,time,long,heartbeat,time,this,heartbeat,time,heartbeat,time,return,this
SockJsServiceRegistration -> public SockJsServiceRegistration setHeartbeatTime(long heartbeatTime);1402065124;The amount of time in milliseconds when the server has not sent any_messages and after which the server should send a heartbeat frame to the_client in order to keep the connection from breaking._<p>The default value is 25,000 (25 seconds).;public SockJsServiceRegistration setHeartbeatTime(long heartbeatTime) {_		this.heartbeatTime = heartbeatTime__		return this__	};the,amount,of,time,in,milliseconds,when,the,server,has,not,sent,any,messages,and,after,which,the,server,should,send,a,heartbeat,frame,to,the,client,in,order,to,keep,the,connection,from,breaking,p,the,default,value,is,25,000,25,seconds;public,sock,js,service,registration,set,heartbeat,time,long,heartbeat,time,this,heartbeat,time,heartbeat,time,return,this
SockJsServiceRegistration -> public SockJsServiceRegistration setHeartbeatTime(long heartbeatTime);1408994390;The amount of time in milliseconds when the server has not sent any_messages and after which the server should send a heartbeat frame to the_client in order to keep the connection from breaking._<p>The default value is 25,000 (25 seconds).;public SockJsServiceRegistration setHeartbeatTime(long heartbeatTime) {_		this.heartbeatTime = heartbeatTime__		return this__	};the,amount,of,time,in,milliseconds,when,the,server,has,not,sent,any,messages,and,after,which,the,server,should,send,a,heartbeat,frame,to,the,client,in,order,to,keep,the,connection,from,breaking,p,the,default,value,is,25,000,25,seconds;public,sock,js,service,registration,set,heartbeat,time,long,heartbeat,time,this,heartbeat,time,heartbeat,time,return,this
SockJsServiceRegistration -> public SockJsServiceRegistration setHeartbeatTime(long heartbeatTime);1411760528;The amount of time in milliseconds when the server has not sent any_messages and after which the server should send a heartbeat frame to the_client in order to keep the connection from breaking._<p>The default value is 25,000 (25 seconds).;public SockJsServiceRegistration setHeartbeatTime(long heartbeatTime) {_		this.heartbeatTime = heartbeatTime__		return this__	};the,amount,of,time,in,milliseconds,when,the,server,has,not,sent,any,messages,and,after,which,the,server,should,send,a,heartbeat,frame,to,the,client,in,order,to,keep,the,connection,from,breaking,p,the,default,value,is,25,000,25,seconds;public,sock,js,service,registration,set,heartbeat,time,long,heartbeat,time,this,heartbeat,time,heartbeat,time,return,this
SockJsServiceRegistration -> public SockJsServiceRegistration setHeartbeatTime(long heartbeatTime);1411763921;The amount of time in milliseconds when the server has not sent any_messages and after which the server should send a heartbeat frame to the_client in order to keep the connection from breaking._<p>The default value is 25,000 (25 seconds).;public SockJsServiceRegistration setHeartbeatTime(long heartbeatTime) {_		this.heartbeatTime = heartbeatTime__		return this__	};the,amount,of,time,in,milliseconds,when,the,server,has,not,sent,any,messages,and,after,which,the,server,should,send,a,heartbeat,frame,to,the,client,in,order,to,keep,the,connection,from,breaking,p,the,default,value,is,25,000,25,seconds;public,sock,js,service,registration,set,heartbeat,time,long,heartbeat,time,this,heartbeat,time,heartbeat,time,return,this
SockJsServiceRegistration -> public SockJsServiceRegistration setHeartbeatTime(long heartbeatTime);1413848647;The amount of time in milliseconds when the server has not sent any_messages and after which the server should send a heartbeat frame to the_client in order to keep the connection from breaking._<p>The default value is 25,000 (25 seconds).;public SockJsServiceRegistration setHeartbeatTime(long heartbeatTime) {_		this.heartbeatTime = heartbeatTime__		return this__	};the,amount,of,time,in,milliseconds,when,the,server,has,not,sent,any,messages,and,after,which,the,server,should,send,a,heartbeat,frame,to,the,client,in,order,to,keep,the,connection,from,breaking,p,the,default,value,is,25,000,25,seconds;public,sock,js,service,registration,set,heartbeat,time,long,heartbeat,time,this,heartbeat,time,heartbeat,time,return,this
SockJsServiceRegistration -> public SockJsServiceRegistration setHeartbeatTime(long heartbeatTime);1414354684;The amount of time in milliseconds when the server has not sent any_messages and after which the server should send a heartbeat frame to the_client in order to keep the connection from breaking._<p>The default value is 25,000 (25 seconds).;public SockJsServiceRegistration setHeartbeatTime(long heartbeatTime) {_		this.heartbeatTime = heartbeatTime__		return this__	};the,amount,of,time,in,milliseconds,when,the,server,has,not,sent,any,messages,and,after,which,the,server,should,send,a,heartbeat,frame,to,the,client,in,order,to,keep,the,connection,from,breaking,p,the,default,value,is,25,000,25,seconds;public,sock,js,service,registration,set,heartbeat,time,long,heartbeat,time,this,heartbeat,time,heartbeat,time,return,this
SockJsServiceRegistration -> public SockJsServiceRegistration setHeartbeatTime(long heartbeatTime);1414354853;The amount of time in milliseconds when the server has not sent any_messages and after which the server should send a heartbeat frame to the_client in order to keep the connection from breaking._<p>The default value is 25,000 (25 seconds).;public SockJsServiceRegistration setHeartbeatTime(long heartbeatTime) {_		this.heartbeatTime = heartbeatTime__		return this__	};the,amount,of,time,in,milliseconds,when,the,server,has,not,sent,any,messages,and,after,which,the,server,should,send,a,heartbeat,frame,to,the,client,in,order,to,keep,the,connection,from,breaking,p,the,default,value,is,25,000,25,seconds;public,sock,js,service,registration,set,heartbeat,time,long,heartbeat,time,this,heartbeat,time,heartbeat,time,return,this
SockJsServiceRegistration -> public SockJsServiceRegistration setHeartbeatTime(long heartbeatTime);1424248215;The amount of time in milliseconds when the server has not sent any_messages and after which the server should send a heartbeat frame to the_client in order to keep the connection from breaking._<p>The default value is 25,000 (25 seconds).;public SockJsServiceRegistration setHeartbeatTime(long heartbeatTime) {_		this.heartbeatTime = heartbeatTime__		return this__	};the,amount,of,time,in,milliseconds,when,the,server,has,not,sent,any,messages,and,after,which,the,server,should,send,a,heartbeat,frame,to,the,client,in,order,to,keep,the,connection,from,breaking,p,the,default,value,is,25,000,25,seconds;public,sock,js,service,registration,set,heartbeat,time,long,heartbeat,time,this,heartbeat,time,heartbeat,time,return,this
SockJsServiceRegistration -> public SockJsServiceRegistration setHeartbeatTime(long heartbeatTime);1467730834;The amount of time in milliseconds when the server has not sent any_messages and after which the server should send a heartbeat frame to the_client in order to keep the connection from breaking._<p>The default value is 25,000 (25 seconds).;public SockJsServiceRegistration setHeartbeatTime(long heartbeatTime) {_		this.heartbeatTime = heartbeatTime__		return this__	};the,amount,of,time,in,milliseconds,when,the,server,has,not,sent,any,messages,and,after,which,the,server,should,send,a,heartbeat,frame,to,the,client,in,order,to,keep,the,connection,from,breaking,p,the,default,value,is,25,000,25,seconds;public,sock,js,service,registration,set,heartbeat,time,long,heartbeat,time,this,heartbeat,time,heartbeat,time,return,this
SockJsServiceRegistration -> public SockJsServiceRegistration setHeartbeatTime(long heartbeatTime);1491937719;The amount of time in milliseconds when the server has not sent any_messages and after which the server should send a heartbeat frame to the_client in order to keep the connection from breaking._<p>The default value is 25,000 (25 seconds).;public SockJsServiceRegistration setHeartbeatTime(long heartbeatTime) {_		this.heartbeatTime = heartbeatTime__		return this__	};the,amount,of,time,in,milliseconds,when,the,server,has,not,sent,any,messages,and,after,which,the,server,should,send,a,heartbeat,frame,to,the,client,in,order,to,keep,the,connection,from,breaking,p,the,default,value,is,25,000,25,seconds;public,sock,js,service,registration,set,heartbeat,time,long,heartbeat,time,this,heartbeat,time,heartbeat,time,return,this
SockJsServiceRegistration -> public SockJsServiceRegistration setHeartbeatTime(long heartbeatTime);1491946901;The amount of time in milliseconds when the server has not sent any_messages and after which the server should send a heartbeat frame to the_client in order to keep the connection from breaking._<p>The default value is 25,000 (25 seconds).;public SockJsServiceRegistration setHeartbeatTime(long heartbeatTime) {_		this.heartbeatTime = heartbeatTime__		return this__	};the,amount,of,time,in,milliseconds,when,the,server,has,not,sent,any,messages,and,after,which,the,server,should,send,a,heartbeat,frame,to,the,client,in,order,to,keep,the,connection,from,breaking,p,the,default,value,is,25,000,25,seconds;public,sock,js,service,registration,set,heartbeat,time,long,heartbeat,time,this,heartbeat,time,heartbeat,time,return,this
SockJsServiceRegistration -> public SockJsServiceRegistration setHeartbeatTime(long heartbeatTime);1496837955;The amount of time in milliseconds when the server has not sent any_messages and after which the server should send a heartbeat frame to the_client in order to keep the connection from breaking._<p>The default value is 25,000 (25 seconds).;public SockJsServiceRegistration setHeartbeatTime(long heartbeatTime) {_		this.heartbeatTime = heartbeatTime__		return this__	};the,amount,of,time,in,milliseconds,when,the,server,has,not,sent,any,messages,and,after,which,the,server,should,send,a,heartbeat,frame,to,the,client,in,order,to,keep,the,connection,from,breaking,p,the,default,value,is,25,000,25,seconds;public,sock,js,service,registration,set,heartbeat,time,long,heartbeat,time,this,heartbeat,time,heartbeat,time,return,this
SockJsServiceRegistration -> public SockJsServiceRegistration setHeartbeatTime(long heartbeatTime);1498780456;The amount of time in milliseconds when the server has not sent any_messages and after which the server should send a heartbeat frame to the_client in order to keep the connection from breaking._<p>The default value is 25,000 (25 seconds).;public SockJsServiceRegistration setHeartbeatTime(long heartbeatTime) {_		this.heartbeatTime = heartbeatTime__		return this__	};the,amount,of,time,in,milliseconds,when,the,server,has,not,sent,any,messages,and,after,which,the,server,should,send,a,heartbeat,frame,to,the,client,in,order,to,keep,the,connection,from,breaking,p,the,default,value,is,25,000,25,seconds;public,sock,js,service,registration,set,heartbeat,time,long,heartbeat,time,this,heartbeat,time,heartbeat,time,return,this
SockJsServiceRegistration -> public SockJsServiceRegistration setHeartbeatTime(long heartbeatTime);1530174524;The amount of time in milliseconds when the server has not sent any_messages and after which the server should send a heartbeat frame to the_client in order to keep the connection from breaking._<p>The default value is 25,000 (25 seconds).;public SockJsServiceRegistration setHeartbeatTime(long heartbeatTime) {_		this.heartbeatTime = heartbeatTime__		return this__	};the,amount,of,time,in,milliseconds,when,the,server,has,not,sent,any,messages,and,after,which,the,server,should,send,a,heartbeat,frame,to,the,client,in,order,to,keep,the,connection,from,breaking,p,the,default,value,is,25,000,25,seconds;public,sock,js,service,registration,set,heartbeat,time,long,heartbeat,time,this,heartbeat,time,heartbeat,time,return,this
SockJsServiceRegistration -> public SockJsServiceRegistration setHeartbeatTime(long heartbeatTime);1531321803;The amount of time in milliseconds when the server has not sent any_messages and after which the server should send a heartbeat frame to the_client in order to keep the connection from breaking._<p>The default value is 25,000 (25 seconds).;public SockJsServiceRegistration setHeartbeatTime(long heartbeatTime) {_		this.heartbeatTime = heartbeatTime__		return this__	};the,amount,of,time,in,milliseconds,when,the,server,has,not,sent,any,messages,and,after,which,the,server,should,send,a,heartbeat,frame,to,the,client,in,order,to,keep,the,connection,from,breaking,p,the,default,value,is,25,000,25,seconds;public,sock,js,service,registration,set,heartbeat,time,long,heartbeat,time,this,heartbeat,time,heartbeat,time,return,this
SockJsServiceRegistration -> public SockJsServiceRegistration setDisconnectDelay(long disconnectDelay);1386024878;The amount of time in milliseconds before a client is considered_disconnected after not having a receiving connection, i.e. an active_connection over which the server can send data to the client._<p>The default value is 5000.;public SockJsServiceRegistration setDisconnectDelay(long disconnectDelay) {_		this.disconnectDelay = disconnectDelay__		return this__	};the,amount,of,time,in,milliseconds,before,a,client,is,considered,disconnected,after,not,having,a,receiving,connection,i,e,an,active,connection,over,which,the,server,can,send,data,to,the,client,p,the,default,value,is,5000;public,sock,js,service,registration,set,disconnect,delay,long,disconnect,delay,this,disconnect,delay,disconnect,delay,return,this
SockJsServiceRegistration -> public SockJsServiceRegistration setDisconnectDelay(long disconnectDelay);1386462352;The amount of time in milliseconds before a client is considered_disconnected after not having a receiving connection, i.e. an active_connection over which the server can send data to the client._<p>The default value is 5000.;public SockJsServiceRegistration setDisconnectDelay(long disconnectDelay) {_		this.disconnectDelay = disconnectDelay__		return this__	};the,amount,of,time,in,milliseconds,before,a,client,is,considered,disconnected,after,not,having,a,receiving,connection,i,e,an,active,connection,over,which,the,server,can,send,data,to,the,client,p,the,default,value,is,5000;public,sock,js,service,registration,set,disconnect,delay,long,disconnect,delay,this,disconnect,delay,disconnect,delay,return,this
SockJsServiceRegistration -> public SockJsServiceRegistration setDisconnectDelay(long disconnectDelay);1395630903;The amount of time in milliseconds before a client is considered_disconnected after not having a receiving connection, i.e. an active_connection over which the server can send data to the client._<p>The default value is 5000.;public SockJsServiceRegistration setDisconnectDelay(long disconnectDelay) {_		this.disconnectDelay = disconnectDelay__		return this__	};the,amount,of,time,in,milliseconds,before,a,client,is,considered,disconnected,after,not,having,a,receiving,connection,i,e,an,active,connection,over,which,the,server,can,send,data,to,the,client,p,the,default,value,is,5000;public,sock,js,service,registration,set,disconnect,delay,long,disconnect,delay,this,disconnect,delay,disconnect,delay,return,this
SockJsServiceRegistration -> public SockJsServiceRegistration setDisconnectDelay(long disconnectDelay);1402065124;The amount of time in milliseconds before a client is considered_disconnected after not having a receiving connection, i.e. an active_connection over which the server can send data to the client._<p>The default value is 5000.;public SockJsServiceRegistration setDisconnectDelay(long disconnectDelay) {_		this.disconnectDelay = disconnectDelay__		return this__	};the,amount,of,time,in,milliseconds,before,a,client,is,considered,disconnected,after,not,having,a,receiving,connection,i,e,an,active,connection,over,which,the,server,can,send,data,to,the,client,p,the,default,value,is,5000;public,sock,js,service,registration,set,disconnect,delay,long,disconnect,delay,this,disconnect,delay,disconnect,delay,return,this
SockJsServiceRegistration -> public SockJsServiceRegistration setDisconnectDelay(long disconnectDelay);1408994390;The amount of time in milliseconds before a client is considered_disconnected after not having a receiving connection, i.e. an active_connection over which the server can send data to the client._<p>The default value is 5000.;public SockJsServiceRegistration setDisconnectDelay(long disconnectDelay) {_		this.disconnectDelay = disconnectDelay__		return this__	};the,amount,of,time,in,milliseconds,before,a,client,is,considered,disconnected,after,not,having,a,receiving,connection,i,e,an,active,connection,over,which,the,server,can,send,data,to,the,client,p,the,default,value,is,5000;public,sock,js,service,registration,set,disconnect,delay,long,disconnect,delay,this,disconnect,delay,disconnect,delay,return,this
SockJsServiceRegistration -> public SockJsServiceRegistration setDisconnectDelay(long disconnectDelay);1411760528;The amount of time in milliseconds before a client is considered_disconnected after not having a receiving connection, i.e. an active_connection over which the server can send data to the client._<p>The default value is 5000.;public SockJsServiceRegistration setDisconnectDelay(long disconnectDelay) {_		this.disconnectDelay = disconnectDelay__		return this__	};the,amount,of,time,in,milliseconds,before,a,client,is,considered,disconnected,after,not,having,a,receiving,connection,i,e,an,active,connection,over,which,the,server,can,send,data,to,the,client,p,the,default,value,is,5000;public,sock,js,service,registration,set,disconnect,delay,long,disconnect,delay,this,disconnect,delay,disconnect,delay,return,this
SockJsServiceRegistration -> public SockJsServiceRegistration setDisconnectDelay(long disconnectDelay);1411763921;The amount of time in milliseconds before a client is considered_disconnected after not having a receiving connection, i.e. an active_connection over which the server can send data to the client._<p>The default value is 5000.;public SockJsServiceRegistration setDisconnectDelay(long disconnectDelay) {_		this.disconnectDelay = disconnectDelay__		return this__	};the,amount,of,time,in,milliseconds,before,a,client,is,considered,disconnected,after,not,having,a,receiving,connection,i,e,an,active,connection,over,which,the,server,can,send,data,to,the,client,p,the,default,value,is,5000;public,sock,js,service,registration,set,disconnect,delay,long,disconnect,delay,this,disconnect,delay,disconnect,delay,return,this
SockJsServiceRegistration -> public SockJsServiceRegistration setDisconnectDelay(long disconnectDelay);1413848647;The amount of time in milliseconds before a client is considered_disconnected after not having a receiving connection, i.e. an active_connection over which the server can send data to the client._<p>The default value is 5000.;public SockJsServiceRegistration setDisconnectDelay(long disconnectDelay) {_		this.disconnectDelay = disconnectDelay__		return this__	};the,amount,of,time,in,milliseconds,before,a,client,is,considered,disconnected,after,not,having,a,receiving,connection,i,e,an,active,connection,over,which,the,server,can,send,data,to,the,client,p,the,default,value,is,5000;public,sock,js,service,registration,set,disconnect,delay,long,disconnect,delay,this,disconnect,delay,disconnect,delay,return,this
SockJsServiceRegistration -> public SockJsServiceRegistration setDisconnectDelay(long disconnectDelay);1414354684;The amount of time in milliseconds before a client is considered_disconnected after not having a receiving connection, i.e. an active_connection over which the server can send data to the client._<p>The default value is 5000.;public SockJsServiceRegistration setDisconnectDelay(long disconnectDelay) {_		this.disconnectDelay = disconnectDelay__		return this__	};the,amount,of,time,in,milliseconds,before,a,client,is,considered,disconnected,after,not,having,a,receiving,connection,i,e,an,active,connection,over,which,the,server,can,send,data,to,the,client,p,the,default,value,is,5000;public,sock,js,service,registration,set,disconnect,delay,long,disconnect,delay,this,disconnect,delay,disconnect,delay,return,this
SockJsServiceRegistration -> public SockJsServiceRegistration setDisconnectDelay(long disconnectDelay);1414354853;The amount of time in milliseconds before a client is considered_disconnected after not having a receiving connection, i.e. an active_connection over which the server can send data to the client._<p>The default value is 5000.;public SockJsServiceRegistration setDisconnectDelay(long disconnectDelay) {_		this.disconnectDelay = disconnectDelay__		return this__	};the,amount,of,time,in,milliseconds,before,a,client,is,considered,disconnected,after,not,having,a,receiving,connection,i,e,an,active,connection,over,which,the,server,can,send,data,to,the,client,p,the,default,value,is,5000;public,sock,js,service,registration,set,disconnect,delay,long,disconnect,delay,this,disconnect,delay,disconnect,delay,return,this
SockJsServiceRegistration -> public SockJsServiceRegistration setDisconnectDelay(long disconnectDelay);1424248215;The amount of time in milliseconds before a client is considered_disconnected after not having a receiving connection, i.e. an active_connection over which the server can send data to the client._<p>The default value is 5000.;public SockJsServiceRegistration setDisconnectDelay(long disconnectDelay) {_		this.disconnectDelay = disconnectDelay__		return this__	};the,amount,of,time,in,milliseconds,before,a,client,is,considered,disconnected,after,not,having,a,receiving,connection,i,e,an,active,connection,over,which,the,server,can,send,data,to,the,client,p,the,default,value,is,5000;public,sock,js,service,registration,set,disconnect,delay,long,disconnect,delay,this,disconnect,delay,disconnect,delay,return,this
SockJsServiceRegistration -> public SockJsServiceRegistration setDisconnectDelay(long disconnectDelay);1467730834;The amount of time in milliseconds before a client is considered_disconnected after not having a receiving connection, i.e. an active_connection over which the server can send data to the client._<p>The default value is 5000.;public SockJsServiceRegistration setDisconnectDelay(long disconnectDelay) {_		this.disconnectDelay = disconnectDelay__		return this__	};the,amount,of,time,in,milliseconds,before,a,client,is,considered,disconnected,after,not,having,a,receiving,connection,i,e,an,active,connection,over,which,the,server,can,send,data,to,the,client,p,the,default,value,is,5000;public,sock,js,service,registration,set,disconnect,delay,long,disconnect,delay,this,disconnect,delay,disconnect,delay,return,this
SockJsServiceRegistration -> public SockJsServiceRegistration setDisconnectDelay(long disconnectDelay);1491937719;The amount of time in milliseconds before a client is considered_disconnected after not having a receiving connection, i.e. an active_connection over which the server can send data to the client._<p>The default value is 5000.;public SockJsServiceRegistration setDisconnectDelay(long disconnectDelay) {_		this.disconnectDelay = disconnectDelay__		return this__	};the,amount,of,time,in,milliseconds,before,a,client,is,considered,disconnected,after,not,having,a,receiving,connection,i,e,an,active,connection,over,which,the,server,can,send,data,to,the,client,p,the,default,value,is,5000;public,sock,js,service,registration,set,disconnect,delay,long,disconnect,delay,this,disconnect,delay,disconnect,delay,return,this
SockJsServiceRegistration -> public SockJsServiceRegistration setDisconnectDelay(long disconnectDelay);1491946901;The amount of time in milliseconds before a client is considered_disconnected after not having a receiving connection, i.e. an active_connection over which the server can send data to the client._<p>The default value is 5000.;public SockJsServiceRegistration setDisconnectDelay(long disconnectDelay) {_		this.disconnectDelay = disconnectDelay__		return this__	};the,amount,of,time,in,milliseconds,before,a,client,is,considered,disconnected,after,not,having,a,receiving,connection,i,e,an,active,connection,over,which,the,server,can,send,data,to,the,client,p,the,default,value,is,5000;public,sock,js,service,registration,set,disconnect,delay,long,disconnect,delay,this,disconnect,delay,disconnect,delay,return,this
SockJsServiceRegistration -> public SockJsServiceRegistration setDisconnectDelay(long disconnectDelay);1496837955;The amount of time in milliseconds before a client is considered_disconnected after not having a receiving connection, i.e. an active_connection over which the server can send data to the client._<p>The default value is 5000.;public SockJsServiceRegistration setDisconnectDelay(long disconnectDelay) {_		this.disconnectDelay = disconnectDelay__		return this__	};the,amount,of,time,in,milliseconds,before,a,client,is,considered,disconnected,after,not,having,a,receiving,connection,i,e,an,active,connection,over,which,the,server,can,send,data,to,the,client,p,the,default,value,is,5000;public,sock,js,service,registration,set,disconnect,delay,long,disconnect,delay,this,disconnect,delay,disconnect,delay,return,this
SockJsServiceRegistration -> public SockJsServiceRegistration setDisconnectDelay(long disconnectDelay);1498780456;The amount of time in milliseconds before a client is considered_disconnected after not having a receiving connection, i.e. an active_connection over which the server can send data to the client._<p>The default value is 5000.;public SockJsServiceRegistration setDisconnectDelay(long disconnectDelay) {_		this.disconnectDelay = disconnectDelay__		return this__	};the,amount,of,time,in,milliseconds,before,a,client,is,considered,disconnected,after,not,having,a,receiving,connection,i,e,an,active,connection,over,which,the,server,can,send,data,to,the,client,p,the,default,value,is,5000;public,sock,js,service,registration,set,disconnect,delay,long,disconnect,delay,this,disconnect,delay,disconnect,delay,return,this
SockJsServiceRegistration -> public SockJsServiceRegistration setDisconnectDelay(long disconnectDelay);1530174524;The amount of time in milliseconds before a client is considered_disconnected after not having a receiving connection, i.e. an active_connection over which the server can send data to the client._<p>The default value is 5000.;public SockJsServiceRegistration setDisconnectDelay(long disconnectDelay) {_		this.disconnectDelay = disconnectDelay__		return this__	};the,amount,of,time,in,milliseconds,before,a,client,is,considered,disconnected,after,not,having,a,receiving,connection,i,e,an,active,connection,over,which,the,server,can,send,data,to,the,client,p,the,default,value,is,5000;public,sock,js,service,registration,set,disconnect,delay,long,disconnect,delay,this,disconnect,delay,disconnect,delay,return,this
SockJsServiceRegistration -> public SockJsServiceRegistration setDisconnectDelay(long disconnectDelay);1531321803;The amount of time in milliseconds before a client is considered_disconnected after not having a receiving connection, i.e. an active_connection over which the server can send data to the client._<p>The default value is 5000.;public SockJsServiceRegistration setDisconnectDelay(long disconnectDelay) {_		this.disconnectDelay = disconnectDelay__		return this__	};the,amount,of,time,in,milliseconds,before,a,client,is,considered,disconnected,after,not,having,a,receiving,connection,i,e,an,active,connection,over,which,the,server,can,send,data,to,the,client,p,the,default,value,is,5000;public,sock,js,service,registration,set,disconnect,delay,long,disconnect,delay,this,disconnect,delay,disconnect,delay,return,this
