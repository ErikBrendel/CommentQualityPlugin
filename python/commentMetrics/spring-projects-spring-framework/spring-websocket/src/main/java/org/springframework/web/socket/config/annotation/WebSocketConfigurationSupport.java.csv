commented;modifiers;parameterAmount;loc;comment;code
false;public;0;10;;@Bean public HandlerMapping webSocketHandlerMapping() {     ServletWebSocketHandlerRegistry registry = initHandlerRegistry().     if (registry.requiresTaskScheduler()) {         TaskScheduler scheduler = defaultSockJsTaskScheduler().         Assert.notNull(scheduler, "Expected default TaskScheduler bean").         registry.setTaskScheduler(scheduler).     }     return registry.getHandlerMapping(). }
false;private;0;7;;private ServletWebSocketHandlerRegistry initHandlerRegistry() {     if (this.handlerRegistry == null) {         this.handlerRegistry = new ServletWebSocketHandlerRegistry().         registerWebSocketHandlers(this.handlerRegistry).     }     return this.handlerRegistry. }
false;protected;1;2;;protected void registerWebSocketHandlers(WebSocketHandlerRegistry registry) { }
true;public;0;12;/**  * The default TaskScheduler to use if none is registered explicitly via  * {@link SockJsServiceRegistration#setTaskScheduler}:  * <pre class="code">  * &#064.Configuration  * &#064.EnableWebSocket  * public class WebSocketConfig implements WebSocketConfigurer {  *  *   public void registerWebSocketHandlers(WebSocketHandlerRegistry registry) {  *     registry.addHandler(myHandler(), "/echo")  *             .withSockJS()  *             .setTaskScheduler(myScheduler()).  *   }  *  *   // ...  * }  * </pre>  */ ;/**  * The default TaskScheduler to use if none is registered explicitly via  * {@link SockJsServiceRegistration#setTaskScheduler}:  * <pre class="code">  * &#064.Configuration  * &#064.EnableWebSocket  * public class WebSocketConfig implements WebSocketConfigurer {  *  *   public void registerWebSocketHandlers(WebSocketHandlerRegistry registry) {  *     registry.addHandler(myHandler(), "/echo")  *             .withSockJS()  *             .setTaskScheduler(myScheduler()).  *   }  *  *   // ...  * }  * </pre>  */ @Bean @Nullable public TaskScheduler defaultSockJsTaskScheduler() {     if (initHandlerRegistry().requiresTaskScheduler()) {         ThreadPoolTaskScheduler threadPoolScheduler = new ThreadPoolTaskScheduler().         threadPoolScheduler.setThreadNamePrefix("SockJS-").         threadPoolScheduler.setPoolSize(Runtime.getRuntime().availableProcessors()).         threadPoolScheduler.setRemoveOnCancelPolicy(true).         this.scheduler = threadPoolScheduler.     }     return this.scheduler. }
