# id;timestamp;commentText;codeText;commentWords;codeWords
WebSocketConfigurationSupport -> @Bean 	public ThreadPoolTaskScheduler defaultSockJsTaskScheduler();1386024878;The default TaskScheduler to use if none is configured via_{@link SockJsServiceRegistration#setTaskScheduler}, i.e._<pre class="code">_&#064_Configuration_&#064_EnableWebSocket_public class WebSocketConfig implements WebSocketConfigurer {__public void registerWebSocketHandlers(WebSocketHandlerRegistry registry) {_registry.addHandler(myWsHandler(), "/echo").withSockJS().setTaskScheduler(myScheduler())____// ...___</pre>;@Bean_	public ThreadPoolTaskScheduler defaultSockJsTaskScheduler() {_		ThreadPoolTaskScheduler scheduler = new ThreadPoolTaskScheduler()__		scheduler.setThreadNamePrefix("SockJS-")__		return scheduler__	};the,default,task,scheduler,to,use,if,none,is,configured,via,link,sock,js,service,registration,set,task,scheduler,i,e,pre,class,code,064,configuration,064,enable,web,socket,public,class,web,socket,config,implements,web,socket,configurer,public,void,register,web,socket,handlers,web,socket,handler,registry,registry,registry,add,handler,my,ws,handler,echo,with,sock,js,set,task,scheduler,my,scheduler,pre;bean,public,thread,pool,task,scheduler,default,sock,js,task,scheduler,thread,pool,task,scheduler,scheduler,new,thread,pool,task,scheduler,scheduler,set,thread,name,prefix,sock,js,return,scheduler
WebSocketConfigurationSupport -> @Bean 	public ThreadPoolTaskScheduler defaultSockJsTaskScheduler();1402350163;The default TaskScheduler to use if none is configured via_{@link SockJsServiceRegistration#setTaskScheduler}, i.e._<pre class="code">_&#064_Configuration_&#064_EnableWebSocket_public class WebSocketConfig implements WebSocketConfigurer {__public void registerWebSocketHandlers(WebSocketHandlerRegistry registry) {_registry.addHandler(myWsHandler(), "/echo").withSockJS().setTaskScheduler(myScheduler())____// ...___</pre>;@Bean_	public ThreadPoolTaskScheduler defaultSockJsTaskScheduler() {_		ThreadPoolTaskScheduler scheduler = new ThreadPoolTaskScheduler()__		scheduler.setThreadNamePrefix("SockJS-")__		return scheduler__	};the,default,task,scheduler,to,use,if,none,is,configured,via,link,sock,js,service,registration,set,task,scheduler,i,e,pre,class,code,064,configuration,064,enable,web,socket,public,class,web,socket,config,implements,web,socket,configurer,public,void,register,web,socket,handlers,web,socket,handler,registry,registry,registry,add,handler,my,ws,handler,echo,with,sock,js,set,task,scheduler,my,scheduler,pre;bean,public,thread,pool,task,scheduler,default,sock,js,task,scheduler,thread,pool,task,scheduler,scheduler,new,thread,pool,task,scheduler,scheduler,set,thread,name,prefix,sock,js,return,scheduler
WebSocketConfigurationSupport -> @Bean 	public ThreadPoolTaskScheduler defaultSockJsTaskScheduler();1403719829;The default TaskScheduler to use if none is configured via_{@link SockJsServiceRegistration#setTaskScheduler}, i.e._<pre class="code">_&#064_Configuration_&#064_EnableWebSocket_public class WebSocketConfig implements WebSocketConfigurer {__public void registerWebSocketHandlers(WebSocketHandlerRegistry registry) {_registry.addHandler(myWsHandler(), "/echo").withSockJS().setTaskScheduler(myScheduler())____// ...___</pre>;@Bean_	public ThreadPoolTaskScheduler defaultSockJsTaskScheduler() {_		@SuppressWarnings("serial")_		ThreadPoolTaskScheduler scheduler = new ThreadPoolTaskScheduler() {_			@Override_			protected ExecutorService initializeExecutor(ThreadFactory factory, RejectedExecutionHandler handler) {_				ExecutorService service = super.initializeExecutor(factory, handler)__				((ScheduledThreadPoolExecutor) service).setRemoveOnCancelPolicy(true)__				return service__			}_		}__		scheduler.setThreadNamePrefix("SockJS-")__		return scheduler__	};the,default,task,scheduler,to,use,if,none,is,configured,via,link,sock,js,service,registration,set,task,scheduler,i,e,pre,class,code,064,configuration,064,enable,web,socket,public,class,web,socket,config,implements,web,socket,configurer,public,void,register,web,socket,handlers,web,socket,handler,registry,registry,registry,add,handler,my,ws,handler,echo,with,sock,js,set,task,scheduler,my,scheduler,pre;bean,public,thread,pool,task,scheduler,default,sock,js,task,scheduler,suppress,warnings,serial,thread,pool,task,scheduler,scheduler,new,thread,pool,task,scheduler,override,protected,executor,service,initialize,executor,thread,factory,factory,rejected,execution,handler,handler,executor,service,service,super,initialize,executor,factory,handler,scheduled,thread,pool,executor,service,set,remove,on,cancel,policy,true,return,service,scheduler,set,thread,name,prefix,sock,js,return,scheduler
WebSocketConfigurationSupport -> @Bean 	public ThreadPoolTaskScheduler defaultSockJsTaskScheduler();1403723322;The default TaskScheduler to use if none is configured via_{@link SockJsServiceRegistration#setTaskScheduler}, i.e._<pre class="code">_&#064_Configuration_&#064_EnableWebSocket_public class WebSocketConfig implements WebSocketConfigurer {__public void registerWebSocketHandlers(WebSocketHandlerRegistry registry) {_registry.addHandler(myWsHandler(), "/echo").withSockJS().setTaskScheduler(myScheduler())____// ...___</pre>;@Bean_	public ThreadPoolTaskScheduler defaultSockJsTaskScheduler() {_		ThreadPoolTaskScheduler scheduler = new SockJsThreadPoolTaskScheduler()__		scheduler.setThreadNamePrefix("SockJS-")__		return scheduler__	};the,default,task,scheduler,to,use,if,none,is,configured,via,link,sock,js,service,registration,set,task,scheduler,i,e,pre,class,code,064,configuration,064,enable,web,socket,public,class,web,socket,config,implements,web,socket,configurer,public,void,register,web,socket,handlers,web,socket,handler,registry,registry,registry,add,handler,my,ws,handler,echo,with,sock,js,set,task,scheduler,my,scheduler,pre;bean,public,thread,pool,task,scheduler,default,sock,js,task,scheduler,thread,pool,task,scheduler,scheduler,new,sock,js,thread,pool,task,scheduler,scheduler,set,thread,name,prefix,sock,js,return,scheduler
WebSocketConfigurationSupport -> @Bean 	public ThreadPoolTaskScheduler defaultSockJsTaskScheduler();1404066532;The default TaskScheduler to use if none is configured via_{@link SockJsServiceRegistration#setTaskScheduler}, i.e._<pre class="code">_&#064_Configuration_&#064_EnableWebSocket_public class WebSocketConfig implements WebSocketConfigurer {__public void registerWebSocketHandlers(WebSocketHandlerRegistry registry) {_registry.addHandler(myWsHandler(), "/echo").withSockJS().setTaskScheduler(myScheduler())____// ...___</pre>;@Bean_	public ThreadPoolTaskScheduler defaultSockJsTaskScheduler() {_		ThreadPoolTaskScheduler scheduler = new ThreadPoolTaskScheduler()__		scheduler.setThreadNamePrefix("SockJS-")__		scheduler.setPoolSize(Runtime.getRuntime().availableProcessors())__		scheduler.setRemoveOnCancelPolicy(true)__		return scheduler__	};the,default,task,scheduler,to,use,if,none,is,configured,via,link,sock,js,service,registration,set,task,scheduler,i,e,pre,class,code,064,configuration,064,enable,web,socket,public,class,web,socket,config,implements,web,socket,configurer,public,void,register,web,socket,handlers,web,socket,handler,registry,registry,registry,add,handler,my,ws,handler,echo,with,sock,js,set,task,scheduler,my,scheduler,pre;bean,public,thread,pool,task,scheduler,default,sock,js,task,scheduler,thread,pool,task,scheduler,scheduler,new,thread,pool,task,scheduler,scheduler,set,thread,name,prefix,sock,js,scheduler,set,pool,size,runtime,get,runtime,available,processors,scheduler,set,remove,on,cancel,policy,true,return,scheduler
WebSocketConfigurationSupport -> @Bean 	public ThreadPoolTaskScheduler defaultSockJsTaskScheduler();1404077700;The default TaskScheduler to use if none is configured via_{@link SockJsServiceRegistration#setTaskScheduler}, i.e._<pre class="code">_&#064_Configuration_&#064_EnableWebSocket_public class WebSocketConfig implements WebSocketConfigurer {__public void registerWebSocketHandlers(WebSocketHandlerRegistry registry) {_registry.addHandler(myWsHandler(), "/echo").withSockJS().setTaskScheduler(myScheduler())____// ...___</pre>;@Bean_	public ThreadPoolTaskScheduler defaultSockJsTaskScheduler() {_		ThreadPoolTaskScheduler scheduler = new ThreadPoolTaskScheduler()__		scheduler.setThreadNamePrefix("SockJS-")__		scheduler.setPoolSize(Runtime.getRuntime().availableProcessors())__		if (hasRemoveOnCancelPolicyMethod) {_			scheduler.setRemoveOnCancelPolicy(true)__		}_		return scheduler__	};the,default,task,scheduler,to,use,if,none,is,configured,via,link,sock,js,service,registration,set,task,scheduler,i,e,pre,class,code,064,configuration,064,enable,web,socket,public,class,web,socket,config,implements,web,socket,configurer,public,void,register,web,socket,handlers,web,socket,handler,registry,registry,registry,add,handler,my,ws,handler,echo,with,sock,js,set,task,scheduler,my,scheduler,pre;bean,public,thread,pool,task,scheduler,default,sock,js,task,scheduler,thread,pool,task,scheduler,scheduler,new,thread,pool,task,scheduler,scheduler,set,thread,name,prefix,sock,js,scheduler,set,pool,size,runtime,get,runtime,available,processors,if,has,remove,on,cancel,policy,method,scheduler,set,remove,on,cancel,policy,true,return,scheduler
WebSocketConfigurationSupport -> @Bean 	public ThreadPoolTaskScheduler defaultSockJsTaskScheduler();1404094194;The default TaskScheduler to use if none is configured via_{@link SockJsServiceRegistration#setTaskScheduler}, i.e._<pre class="code">_&#064_Configuration_&#064_EnableWebSocket_public class WebSocketConfig implements WebSocketConfigurer {__public void registerWebSocketHandlers(WebSocketHandlerRegistry registry) {_registry.addHandler(myWsHandler(), "/echo").withSockJS().setTaskScheduler(myScheduler())____// ...___</pre>;@Bean_	public ThreadPoolTaskScheduler defaultSockJsTaskScheduler() {_		ThreadPoolTaskScheduler scheduler = new ThreadPoolTaskScheduler()__		scheduler.setThreadNamePrefix("SockJS-")__		scheduler.setPoolSize(Runtime.getRuntime().availableProcessors())__		if (hasRemoveOnCancelPolicyMethod) {_			scheduler.setRemoveOnCancelPolicy(true)__		}_		return scheduler__	};the,default,task,scheduler,to,use,if,none,is,configured,via,link,sock,js,service,registration,set,task,scheduler,i,e,pre,class,code,064,configuration,064,enable,web,socket,public,class,web,socket,config,implements,web,socket,configurer,public,void,register,web,socket,handlers,web,socket,handler,registry,registry,registry,add,handler,my,ws,handler,echo,with,sock,js,set,task,scheduler,my,scheduler,pre;bean,public,thread,pool,task,scheduler,default,sock,js,task,scheduler,thread,pool,task,scheduler,scheduler,new,thread,pool,task,scheduler,scheduler,set,thread,name,prefix,sock,js,scheduler,set,pool,size,runtime,get,runtime,available,processors,if,has,remove,on,cancel,policy,method,scheduler,set,remove,on,cancel,policy,true,return,scheduler
WebSocketConfigurationSupport -> @Bean 	public ThreadPoolTaskScheduler defaultSockJsTaskScheduler();1404097013;The default TaskScheduler to use if none is configured via_{@link SockJsServiceRegistration#setTaskScheduler}, i.e._<pre class="code">_&#064_Configuration_&#064_EnableWebSocket_public class WebSocketConfig implements WebSocketConfigurer {__public void registerWebSocketHandlers(WebSocketHandlerRegistry registry) {_registry.addHandler(myWsHandler(), "/echo").withSockJS().setTaskScheduler(myScheduler())____// ...___</pre>;@Bean_	public ThreadPoolTaskScheduler defaultSockJsTaskScheduler() {_		ThreadPoolTaskScheduler scheduler = new ThreadPoolTaskScheduler()__		scheduler.setThreadNamePrefix("SockJS-")__		scheduler.setPoolSize(Runtime.getRuntime().availableProcessors())__		scheduler.setRemoveOnCancelPolicy(true)__		return scheduler__	};the,default,task,scheduler,to,use,if,none,is,configured,via,link,sock,js,service,registration,set,task,scheduler,i,e,pre,class,code,064,configuration,064,enable,web,socket,public,class,web,socket,config,implements,web,socket,configurer,public,void,register,web,socket,handlers,web,socket,handler,registry,registry,registry,add,handler,my,ws,handler,echo,with,sock,js,set,task,scheduler,my,scheduler,pre;bean,public,thread,pool,task,scheduler,default,sock,js,task,scheduler,thread,pool,task,scheduler,scheduler,new,thread,pool,task,scheduler,scheduler,set,thread,name,prefix,sock,js,scheduler,set,pool,size,runtime,get,runtime,available,processors,scheduler,set,remove,on,cancel,policy,true,return,scheduler
WebSocketConfigurationSupport -> @Bean 	public ThreadPoolTaskScheduler defaultSockJsTaskScheduler();1411601493;The default TaskScheduler to use if none is configured via_{@link SockJsServiceRegistration#setTaskScheduler}, i.e._<pre class="code">_&#064_Configuration_&#064_EnableWebSocket_public class WebSocketConfig implements WebSocketConfigurer {__public void registerWebSocketHandlers(WebSocketHandlerRegistry registry) {_registry.addHandler(myWsHandler(), "/echo").withSockJS().setTaskScheduler(myScheduler())____// ...__</pre>;@Bean_	public ThreadPoolTaskScheduler defaultSockJsTaskScheduler() {_		ThreadPoolTaskScheduler scheduler = new ThreadPoolTaskScheduler()__		scheduler.setThreadNamePrefix("SockJS-")__		scheduler.setPoolSize(Runtime.getRuntime().availableProcessors())__		scheduler.setRemoveOnCancelPolicy(true)__		return scheduler__	};the,default,task,scheduler,to,use,if,none,is,configured,via,link,sock,js,service,registration,set,task,scheduler,i,e,pre,class,code,064,configuration,064,enable,web,socket,public,class,web,socket,config,implements,web,socket,configurer,public,void,register,web,socket,handlers,web,socket,handler,registry,registry,registry,add,handler,my,ws,handler,echo,with,sock,js,set,task,scheduler,my,scheduler,pre;bean,public,thread,pool,task,scheduler,default,sock,js,task,scheduler,thread,pool,task,scheduler,scheduler,new,thread,pool,task,scheduler,scheduler,set,thread,name,prefix,sock,js,scheduler,set,pool,size,runtime,get,runtime,available,processors,scheduler,set,remove,on,cancel,policy,true,return,scheduler
WebSocketConfigurationSupport -> @Bean 	public ThreadPoolTaskScheduler defaultSockJsTaskScheduler();1413848647;The default TaskScheduler to use if none is configured via_{@link SockJsServiceRegistration#setTaskScheduler}, i.e._<pre class="code">_&#064_Configuration_&#064_EnableWebSocket_public class WebSocketConfig implements WebSocketConfigurer {__public void registerWebSocketHandlers(WebSocketHandlerRegistry registry) {_registry.addHandler(myWsHandler(), "/echo").withSockJS().setTaskScheduler(myScheduler())____// ...__</pre>;@Bean_	public ThreadPoolTaskScheduler defaultSockJsTaskScheduler() {_		ThreadPoolTaskScheduler scheduler = new ThreadPoolTaskScheduler()__		scheduler.setThreadNamePrefix("SockJS-")__		scheduler.setPoolSize(Runtime.getRuntime().availableProcessors())__		scheduler.setRemoveOnCancelPolicy(true)__		return scheduler__	};the,default,task,scheduler,to,use,if,none,is,configured,via,link,sock,js,service,registration,set,task,scheduler,i,e,pre,class,code,064,configuration,064,enable,web,socket,public,class,web,socket,config,implements,web,socket,configurer,public,void,register,web,socket,handlers,web,socket,handler,registry,registry,registry,add,handler,my,ws,handler,echo,with,sock,js,set,task,scheduler,my,scheduler,pre;bean,public,thread,pool,task,scheduler,default,sock,js,task,scheduler,thread,pool,task,scheduler,scheduler,new,thread,pool,task,scheduler,scheduler,set,thread,name,prefix,sock,js,scheduler,set,pool,size,runtime,get,runtime,available,processors,scheduler,set,remove,on,cancel,policy,true,return,scheduler
WebSocketConfigurationSupport -> @Bean 	public ThreadPoolTaskScheduler defaultSockJsTaskScheduler();1491937719;The default TaskScheduler to use if none is configured via_{@link SockJsServiceRegistration#setTaskScheduler}, i.e._<pre class="code">_&#064_Configuration_&#064_EnableWebSocket_public class WebSocketConfig implements WebSocketConfigurer {__public void registerWebSocketHandlers(WebSocketHandlerRegistry registry) {_registry.addHandler(myWsHandler(), "/echo").withSockJS().setTaskScheduler(myScheduler())____// ...__</pre>;@Bean_	public ThreadPoolTaskScheduler defaultSockJsTaskScheduler() {_		ThreadPoolTaskScheduler scheduler = new ThreadPoolTaskScheduler()__		scheduler.setThreadNamePrefix("SockJS-")__		scheduler.setPoolSize(Runtime.getRuntime().availableProcessors())__		scheduler.setRemoveOnCancelPolicy(true)__		return scheduler__	};the,default,task,scheduler,to,use,if,none,is,configured,via,link,sock,js,service,registration,set,task,scheduler,i,e,pre,class,code,064,configuration,064,enable,web,socket,public,class,web,socket,config,implements,web,socket,configurer,public,void,register,web,socket,handlers,web,socket,handler,registry,registry,registry,add,handler,my,ws,handler,echo,with,sock,js,set,task,scheduler,my,scheduler,pre;bean,public,thread,pool,task,scheduler,default,sock,js,task,scheduler,thread,pool,task,scheduler,scheduler,new,thread,pool,task,scheduler,scheduler,set,thread,name,prefix,sock,js,scheduler,set,pool,size,runtime,get,runtime,available,processors,scheduler,set,remove,on,cancel,policy,true,return,scheduler
WebSocketConfigurationSupport -> @Bean 	public TaskScheduler defaultSockJsTaskScheduler();1491946901;The default TaskScheduler to use if none is configured via_{@link SockJsServiceRegistration#setTaskScheduler}, i.e._<pre class="code">_&#064_Configuration_&#064_EnableWebSocket_public class WebSocketConfig implements WebSocketConfigurer {__public void registerWebSocketHandlers(WebSocketHandlerRegistry registry) {_registry.addHandler(myWsHandler(), "/echo").withSockJS().setTaskScheduler(myScheduler())____// ...__</pre>;@Bean_	public TaskScheduler defaultSockJsTaskScheduler() {_		return initTaskScheduler()__	};the,default,task,scheduler,to,use,if,none,is,configured,via,link,sock,js,service,registration,set,task,scheduler,i,e,pre,class,code,064,configuration,064,enable,web,socket,public,class,web,socket,config,implements,web,socket,configurer,public,void,register,web,socket,handlers,web,socket,handler,registry,registry,registry,add,handler,my,ws,handler,echo,with,sock,js,set,task,scheduler,my,scheduler,pre;bean,public,task,scheduler,default,sock,js,task,scheduler,return,init,task,scheduler
WebSocketConfigurationSupport -> @Bean 	public TaskScheduler defaultSockJsTaskScheduler();1498780456;The default TaskScheduler to use if none is configured via_{@link SockJsServiceRegistration#setTaskScheduler}, i.e._<pre class="code">_&#064_Configuration_&#064_EnableWebSocket_public class WebSocketConfig implements WebSocketConfigurer {__public void registerWebSocketHandlers(WebSocketHandlerRegistry registry) {_registry.addHandler(myWsHandler(), "/echo").withSockJS().setTaskScheduler(myScheduler())____// ...__</pre>;@Bean_	public TaskScheduler defaultSockJsTaskScheduler() {_		return initTaskScheduler()__	};the,default,task,scheduler,to,use,if,none,is,configured,via,link,sock,js,service,registration,set,task,scheduler,i,e,pre,class,code,064,configuration,064,enable,web,socket,public,class,web,socket,config,implements,web,socket,configurer,public,void,register,web,socket,handlers,web,socket,handler,registry,registry,registry,add,handler,my,ws,handler,echo,with,sock,js,set,task,scheduler,my,scheduler,pre;bean,public,task,scheduler,default,sock,js,task,scheduler,return,init,task,scheduler
WebSocketConfigurationSupport -> @Bean 	public TaskScheduler defaultSockJsTaskScheduler();1502974979;The default TaskScheduler to use if none is configured via_{@link SockJsServiceRegistration#setTaskScheduler}, i.e._<pre class="code">_&#064_Configuration_&#064_EnableWebSocket_public class WebSocketConfig implements WebSocketConfigurer {__public void registerWebSocketHandlers(WebSocketHandlerRegistry registry) {_registry.addHandler(myWsHandler(), "/echo").withSockJS().setTaskScheduler(myScheduler())____// ...__</pre>;@Bean_	public TaskScheduler defaultSockJsTaskScheduler() {_		return initTaskScheduler()__	};the,default,task,scheduler,to,use,if,none,is,configured,via,link,sock,js,service,registration,set,task,scheduler,i,e,pre,class,code,064,configuration,064,enable,web,socket,public,class,web,socket,config,implements,web,socket,configurer,public,void,register,web,socket,handlers,web,socket,handler,registry,registry,registry,add,handler,my,ws,handler,echo,with,sock,js,set,task,scheduler,my,scheduler,pre;bean,public,task,scheduler,default,sock,js,task,scheduler,return,init,task,scheduler
WebSocketConfigurationSupport -> @Bean 	public TaskScheduler defaultSockJsTaskScheduler();1510609179;The default TaskScheduler to use if none is configured via_{@link SockJsServiceRegistration#setTaskScheduler}, i.e._<pre class="code">_&#064_Configuration_&#064_EnableWebSocket_public class WebSocketConfig implements WebSocketConfigurer {__public void registerWebSocketHandlers(WebSocketHandlerRegistry registry) {_registry.addHandler(myWsHandler(), "/echo").withSockJS().setTaskScheduler(myScheduler())____// ...__</pre>;@Bean_	public TaskScheduler defaultSockJsTaskScheduler() {_		return initTaskScheduler()__	};the,default,task,scheduler,to,use,if,none,is,configured,via,link,sock,js,service,registration,set,task,scheduler,i,e,pre,class,code,064,configuration,064,enable,web,socket,public,class,web,socket,config,implements,web,socket,configurer,public,void,register,web,socket,handlers,web,socket,handler,registry,registry,registry,add,handler,my,ws,handler,echo,with,sock,js,set,task,scheduler,my,scheduler,pre;bean,public,task,scheduler,default,sock,js,task,scheduler,return,init,task,scheduler
