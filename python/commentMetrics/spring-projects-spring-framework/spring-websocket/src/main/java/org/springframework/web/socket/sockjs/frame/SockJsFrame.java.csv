commented;modifiers;parameterAmount;loc;comment;code
true;public;0;3;/**  * Return the SockJS frame type.  */ ;/**  * Return the SockJS frame type.  */ public SockJsFrameType getType() {     return this.type. }
true;public;0;3;/**  * Return the SockJS frame content (never {@code null}).  */ ;/**  * Return the SockJS frame content (never {@code null}).  */ public String getContent() {     return this.content. }
true;public;0;3;/**  * Return the SockJS frame content as a byte array.  */ ;/**  * Return the SockJS frame content as a byte array.  */ public byte[] getContentBytes() {     return this.content.getBytes(CHARSET). }
true;public;0;9;/**  * Return data contained in a SockJS "message" and "close" frames. Otherwise  * for SockJS "open" and "close" frames, which do not contain data, return  * {@code null}.  */ ;/**  * Return data contained in a SockJS "message" and "close" frames. Otherwise  * for SockJS "open" and "close" frames, which do not contain data, return  * {@code null}.  */ @Nullable public String getFrameData() {     if (getType() == SockJsFrameType.OPEN || getType() == SockJsFrameType.HEARTBEAT) {         return null.     } else {         return getContent().substring(1).     } }
false;public;1;11;;@Override public boolean equals(Object other) {     if (this == other) {         return true.     }     if (!(other instanceof SockJsFrame)) {         return false.     }     SockJsFrame otherFrame = (SockJsFrame) other.     return (this.type.equals(otherFrame.type) && this.content.equals(otherFrame.content)). }
false;public;0;4;;@Override public int hashCode() {     return this.content.hashCode(). }
false;public;0;10;;@Override public String toString() {     String result = this.content.     if (result.length() > 80) {         result = result.substring(0, 80) + "...(truncated)".     }     result = StringUtils.replace(result, "\n", "\\n").     result = StringUtils.replace(result, "\r", "\\r").     return "SockJsFrame content='" + result + "'". }
false;public,static;0;3;;public static SockJsFrame openFrame() {     return OPEN_FRAME. }
false;public,static;0;3;;public static SockJsFrame heartbeatFrame() {     return HEARTBEAT_FRAME. }
false;public,static;2;4;;public static SockJsFrame messageFrame(SockJsMessageCodec codec, String... messages) {     String encoded = codec.encode(messages).     return new SockJsFrame(encoded). }
false;public,static;0;3;;public static SockJsFrame closeFrameGoAway() {     return CLOSE_GO_AWAY_FRAME. }
false;public,static;0;3;;public static SockJsFrame closeFrameAnotherConnectionOpen() {     return CLOSE_ANOTHER_CONNECTION_OPEN_FRAME. }
false;public,static;2;3;;public static SockJsFrame closeFrame(int code, @Nullable String reason) {     return new SockJsFrame("c[" + code + ",\"" + (reason != null ? reason : "") + "\"]"). }
