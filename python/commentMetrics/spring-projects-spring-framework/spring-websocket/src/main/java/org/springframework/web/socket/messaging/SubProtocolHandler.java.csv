commented;modifiers;parameterAmount;loc;comment;code
true;;0;1;/**  * Return the list of sub-protocols supported by this handler (never {@code null}).  */ ;/**  * Return the list of sub-protocols supported by this handler (never {@code null}).  */ List<String> getSupportedProtocols().
true;;3;2;/**  * Handle the given {@link WebSocketMessage} received from a client.  * @param session the client session  * @param message the client message  * @param outputChannel an output channel to send messages to  */ ;/**  * Handle the given {@link WebSocketMessage} received from a client.  * @param session the client session  * @param message the client message  * @param outputChannel an output channel to send messages to  */ void handleMessageFromClient(WebSocketSession session, WebSocketMessage<?> message, MessageChannel outputChannel) throws Exception.
true;;2;1;/**  * Handle the given {@link Message} to the client associated with the given WebSocket session.  * @param session the client session  * @param message the client message  */ ;/**  * Handle the given {@link Message} to the client associated with the given WebSocket session.  * @param session the client session  * @param message the client message  */ void handleMessageToClient(WebSocketSession session, Message<?> message) throws Exception.
true;;1;2;/**  * Resolve the session id from the given message or return {@code null}.  * @param message the message to resolve the session id from  */ ;/**  * Resolve the session id from the given message or return {@code null}.  * @param message the message to resolve the session id from  */ @Nullable String resolveSessionId(Message<?> message).
true;;2;1;/**  * Invoked after a {@link WebSocketSession} has started.  * @param session the client session  * @param outputChannel a channel  */ ;/**  * Invoked after a {@link WebSocketSession} has started.  * @param session the client session  * @param outputChannel a channel  */ void afterSessionStarted(WebSocketSession session, MessageChannel outputChannel) throws Exception.
true;;3;2;/**  * Invoked after a {@link WebSocketSession} has ended.  * @param session the client session  * @param closeStatus the reason why the session was closed  * @param outputChannel a channel  */ ;/**  * Invoked after a {@link WebSocketSession} has ended.  * @param session the client session  * @param closeStatus the reason why the session was closed  * @param outputChannel a channel  */ void afterSessionEnded(WebSocketSession session, CloseStatus closeStatus, MessageChannel outputChannel) throws Exception.
