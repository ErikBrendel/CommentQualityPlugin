# id;timestamp;commentText;codeText;commentWords;codeWords
AbstractSockJsMessageCodec -> private String escapeSockJsSpecialChars(char[] characters);1386462352;See "JSON Unicode Encoding" section of SockJS protocol.;private String escapeSockJsSpecialChars(char[] characters) {_		StringBuilder result = new StringBuilder()__		for (char c : characters) {_			if (isSockJsSpecialChar(c)) {_				result.append('\\').append('u')__				String hex = Integer.toHexString(c).toLowerCase()__				for (int i = 0_ i < (4 - hex.length())_ i++) {_					result.append('0')__				}_				result.append(hex)__			}_			else {_				result.append(c)__			}_		}_		return result.toString()__	};see,json,unicode,encoding,section,of,sock,js,protocol;private,string,escape,sock,js,special,chars,char,characters,string,builder,result,new,string,builder,for,char,c,characters,if,is,sock,js,special,char,c,result,append,append,u,string,hex,integer,to,hex,string,c,to,lower,case,for,int,i,0,i,4,hex,length,i,result,append,0,result,append,hex,else,result,append,c,return,result,to,string
AbstractSockJsMessageCodec -> private String escapeSockJsSpecialChars(char[] characters);1404754899;See "JSON Unicode Encoding" section of SockJS protocol.;private String escapeSockJsSpecialChars(char[] characters) {_		StringBuilder result = new StringBuilder()__		for (char c : characters) {_			if (isSockJsSpecialChar(c)) {_				result.append('\\').append('u')__				String hex = Integer.toHexString(c).toLowerCase()__				for (int i = 0_ i < (4 - hex.length())_ i++) {_					result.append('0')__				}_				result.append(hex)__			}_			else {_				result.append(c)__			}_		}_		return result.toString()__	};see,json,unicode,encoding,section,of,sock,js,protocol;private,string,escape,sock,js,special,chars,char,characters,string,builder,result,new,string,builder,for,char,c,characters,if,is,sock,js,special,char,c,result,append,append,u,string,hex,integer,to,hex,string,c,to,lower,case,for,int,i,0,i,4,hex,length,i,result,append,0,result,append,hex,else,result,append,c,return,result,to,string
AbstractSockJsMessageCodec -> private String escapeSockJsSpecialChars(char[] characters);1413848647;See "JSON Unicode Encoding" section of SockJS protocol.;private String escapeSockJsSpecialChars(char[] characters) {_		StringBuilder result = new StringBuilder()__		for (char c : characters) {_			if (isSockJsSpecialChar(c)) {_				result.append('\\').append('u')__				String hex = Integer.toHexString(c).toLowerCase()__				for (int i = 0_ i < (4 - hex.length())_ i++) {_					result.append('0')__				}_				result.append(hex)__			}_			else {_				result.append(c)__			}_		}_		return result.toString()__	};see,json,unicode,encoding,section,of,sock,js,protocol;private,string,escape,sock,js,special,chars,char,characters,string,builder,result,new,string,builder,for,char,c,characters,if,is,sock,js,special,char,c,result,append,append,u,string,hex,integer,to,hex,string,c,to,lower,case,for,int,i,0,i,4,hex,length,i,result,append,0,result,append,hex,else,result,append,c,return,result,to,string
AbstractSockJsMessageCodec -> private String escapeSockJsSpecialChars(char[] characters);1458843770;See "JSON Unicode Encoding" section of SockJS protocol.;private String escapeSockJsSpecialChars(char[] characters) {_		StringBuilder result = new StringBuilder()__		for (char c : characters) {_			if (isSockJsSpecialChar(c)) {_				result.append('\\').append('u')__				String hex = Integer.toHexString(c).toLowerCase()__				for (int i = 0_ i < (4 - hex.length())_ i++) {_					result.append('0')__				}_				result.append(hex)__			}_			else {_				result.append(c)__			}_		}_		return result.toString()__	};see,json,unicode,encoding,section,of,sock,js,protocol;private,string,escape,sock,js,special,chars,char,characters,string,builder,result,new,string,builder,for,char,c,characters,if,is,sock,js,special,char,c,result,append,append,u,string,hex,integer,to,hex,string,c,to,lower,case,for,int,i,0,i,4,hex,length,i,result,append,0,result,append,hex,else,result,append,c,return,result,to,string
AbstractSockJsMessageCodec -> private String escapeSockJsSpecialChars(char[] characters);1496837955;See "JSON Unicode Encoding" section of SockJS protocol.;private String escapeSockJsSpecialChars(char[] characters) {_		StringBuilder result = new StringBuilder()__		for (char c : characters) {_			if (isSockJsSpecialChar(c)) {_				result.append('\\').append('u')__				String hex = Integer.toHexString(c).toLowerCase()__				for (int i = 0_ i < (4 - hex.length())_ i++) {_					result.append('0')__				}_				result.append(hex)__			}_			else {_				result.append(c)__			}_		}_		return result.toString()__	};see,json,unicode,encoding,section,of,sock,js,protocol;private,string,escape,sock,js,special,chars,char,characters,string,builder,result,new,string,builder,for,char,c,characters,if,is,sock,js,special,char,c,result,append,append,u,string,hex,integer,to,hex,string,c,to,lower,case,for,int,i,0,i,4,hex,length,i,result,append,0,result,append,hex,else,result,append,c,return,result,to,string
AbstractSockJsMessageCodec -> private String escapeSockJsSpecialChars(char[] characters);1530174524;See "JSON Unicode Encoding" section of SockJS protocol.;private String escapeSockJsSpecialChars(char[] characters) {_		StringBuilder result = new StringBuilder()__		for (char c : characters) {_			if (isSockJsSpecialChar(c)) {_				result.append('\\').append('u')__				String hex = Integer.toHexString(c).toLowerCase()__				for (int i = 0_ i < (4 - hex.length())_ i++) {_					result.append('0')__				}_				result.append(hex)__			}_			else {_				result.append(c)__			}_		}_		return result.toString()__	};see,json,unicode,encoding,section,of,sock,js,protocol;private,string,escape,sock,js,special,chars,char,characters,string,builder,result,new,string,builder,for,char,c,characters,if,is,sock,js,special,char,c,result,append,append,u,string,hex,integer,to,hex,string,c,to,lower,case,for,int,i,0,i,4,hex,length,i,result,append,0,result,append,hex,else,result,append,c,return,result,to,string
AbstractSockJsMessageCodec -> protected abstract char[] applyJsonQuoting(String content)_;1386462352;Apply standard JSON string quoting (see http://www.json.org/).;protected abstract char[] applyJsonQuoting(String content)_;apply,standard,json,string,quoting,see,http,www,json,org;protected,abstract,char,apply,json,quoting,string,content
AbstractSockJsMessageCodec -> protected abstract char[] applyJsonQuoting(String content)_;1404754899;Apply standard JSON string quoting (see http://www.json.org/).;protected abstract char[] applyJsonQuoting(String content)_;apply,standard,json,string,quoting,see,http,www,json,org;protected,abstract,char,apply,json,quoting,string,content
AbstractSockJsMessageCodec -> protected abstract char[] applyJsonQuoting(String content)_;1413848647;Apply standard JSON string quoting (see http://www.json.org/).;protected abstract char[] applyJsonQuoting(String content)_;apply,standard,json,string,quoting,see,http,www,json,org;protected,abstract,char,apply,json,quoting,string,content
AbstractSockJsMessageCodec -> protected abstract char[] applyJsonQuoting(String content)_;1458843770;Apply standard JSON string quoting (see http://www.json.org/).;protected abstract char[] applyJsonQuoting(String content)_;apply,standard,json,string,quoting,see,http,www,json,org;protected,abstract,char,apply,json,quoting,string,content
AbstractSockJsMessageCodec -> protected abstract char[] applyJsonQuoting(String content)_;1496837955;Apply standard JSON string quoting (see http://www.json.org/).;protected abstract char[] applyJsonQuoting(String content)_;apply,standard,json,string,quoting,see,http,www,json,org;protected,abstract,char,apply,json,quoting,string,content
AbstractSockJsMessageCodec -> protected abstract char[] applyJsonQuoting(String content)_;1530174524;Apply standard JSON string quoting (see http://www.json.org/).;protected abstract char[] applyJsonQuoting(String content)_;apply,standard,json,string,quoting,see,http,www,json,org;protected,abstract,char,apply,json,quoting,string,content
AbstractSockJsMessageCodec -> private boolean isSockJsSpecialChar(char ch);1386462352;See `escapable_by_server` variable in the SockJS protocol test suite.;private boolean isSockJsSpecialChar(char ch) {_		return (ch >= '\u0000' && ch <= '\u001F') || (ch >= '\u200C' && ch <= '\u200F')_				|| (ch >= '\u2028' && ch <= '\u202F') || (ch >= '\u2060' && ch <= '\u206F')_				|| (ch >= '\uFFF0' && ch <= '\uFFFF') || (ch >= '\uD800' && ch <= '\uDFFF')__	};see,variable,in,the,sock,js,protocol,test,suite;private,boolean,is,sock,js,special,char,char,ch,return,ch,u0000,ch,u001f,ch,u200c,ch,u200f,ch,u2028,ch,u202f,ch,u2060,ch,u206f,ch,u,fff0,ch,u,ffff,ch,u,d800,ch,u,dfff
AbstractSockJsMessageCodec -> private boolean isSockJsSpecialChar(char ch);1404754899;See `escapable_by_server` variable in the SockJS protocol test suite.;private boolean isSockJsSpecialChar(char ch) {_		return (ch >= '\u0000' && ch <= '\u001F') || (ch >= '\u200C' && ch <= '\u200F') ||_				(ch >= '\u2028' && ch <= '\u202F') || (ch >= '\u2060' && ch <= '\u206F') ||_				(ch >= '\uFFF0' && ch <= '\uFFFF') || (ch >= '\uD800' && ch <= '\uDFFF')__	};see,variable,in,the,sock,js,protocol,test,suite;private,boolean,is,sock,js,special,char,char,ch,return,ch,u0000,ch,u001f,ch,u200c,ch,u200f,ch,u2028,ch,u202f,ch,u2060,ch,u206f,ch,u,fff0,ch,u,ffff,ch,u,d800,ch,u,dfff
AbstractSockJsMessageCodec -> private boolean isSockJsSpecialChar(char ch);1413848647;See `escapable_by_server` variable in the SockJS protocol test suite.;private boolean isSockJsSpecialChar(char ch) {_		return (ch >= '\u0000' && ch <= '\u001F') || (ch >= '\u200C' && ch <= '\u200F') ||_				(ch >= '\u2028' && ch <= '\u202F') || (ch >= '\u2060' && ch <= '\u206F') ||_				(ch >= '\uFFF0' && ch <= '\uFFFF') || (ch >= '\uD800' && ch <= '\uDFFF')__	};see,variable,in,the,sock,js,protocol,test,suite;private,boolean,is,sock,js,special,char,char,ch,return,ch,u0000,ch,u001f,ch,u200c,ch,u200f,ch,u2028,ch,u202f,ch,u2060,ch,u206f,ch,u,fff0,ch,u,ffff,ch,u,d800,ch,u,dfff
AbstractSockJsMessageCodec -> private boolean isSockJsSpecialChar(char ch);1458843770;See `escapable_by_server` variable in the SockJS protocol test suite.;private boolean isSockJsSpecialChar(char ch) {_		return (ch >= '\u0000' && ch <= '\u001F') || (ch >= '\u200C' && ch <= '\u200F') ||_				(ch >= '\u2028' && ch <= '\u202F') || (ch >= '\u2060' && ch <= '\u206F') ||_				(ch >= '\uFFF0' && ch <= '\uFFFF') || (ch >= '\uD800' && ch <= '\uDFFF')__	};see,variable,in,the,sock,js,protocol,test,suite;private,boolean,is,sock,js,special,char,char,ch,return,ch,u0000,ch,u001f,ch,u200c,ch,u200f,ch,u2028,ch,u202f,ch,u2060,ch,u206f,ch,u,fff0,ch,u,ffff,ch,u,d800,ch,u,dfff
AbstractSockJsMessageCodec -> private boolean isSockJsSpecialChar(char ch);1496837955;See `escapable_by_server` variable in the SockJS protocol test suite.;private boolean isSockJsSpecialChar(char ch) {_		return (ch <= '\u001F') || (ch >= '\u200C' && ch <= '\u200F') ||_				(ch >= '\u2028' && ch <= '\u202F') || (ch >= '\u2060' && ch <= '\u206F') ||_				(ch >= '\uFFF0') || (ch >= '\uD800' && ch <= '\uDFFF')__	};see,variable,in,the,sock,js,protocol,test,suite;private,boolean,is,sock,js,special,char,char,ch,return,ch,u001f,ch,u200c,ch,u200f,ch,u2028,ch,u202f,ch,u2060,ch,u206f,ch,u,fff0,ch,u,d800,ch,u,dfff
AbstractSockJsMessageCodec -> private boolean isSockJsSpecialChar(char ch);1530174524;See `escapable_by_server` variable in the SockJS protocol test suite.;private boolean isSockJsSpecialChar(char ch) {_		return (ch <= '\u001F') || (ch >= '\u200C' && ch <= '\u200F') ||_				(ch >= '\u2028' && ch <= '\u202F') || (ch >= '\u2060' && ch <= '\u206F') ||_				(ch >= '\uFFF0') || (ch >= '\uD800' && ch <= '\uDFFF')__	};see,variable,in,the,sock,js,protocol,test,suite;private,boolean,is,sock,js,special,char,char,ch,return,ch,u001f,ch,u200c,ch,u200f,ch,u2028,ch,u202f,ch,u2060,ch,u206f,ch,u,fff0,ch,u,d800,ch,u,dfff
