commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public TransportType getTransportType() {     return TransportType.XHR_STREAMING. }
false;protected;0;4;;@Override protected MediaType getContentType() {     return new MediaType("application", "javascript", StandardCharsets.UTF_8). }
false;public;1;4;;@Override public boolean checkSessionType(SockJsSession session) {     return session instanceof XhrStreamingSockJsSession. }
false;public;3;6;;@Override public StreamingSockJsSession createSession(String sessionId, WebSocketHandler handler, Map<String, Object> attributes) {     return new XhrStreamingSockJsSession(sessionId, getServiceConfig(), handler, attributes). }
false;protected;1;4;;@Override protected SockJsFrameFormat getFrameFormat(ServerHttpRequest request) {     return new DefaultSockJsFrameFormat("%s\n"). }
false;protected;1;4;;@Override protected byte[] getPrelude(ServerHttpRequest request) {     return PRELUDE. }
