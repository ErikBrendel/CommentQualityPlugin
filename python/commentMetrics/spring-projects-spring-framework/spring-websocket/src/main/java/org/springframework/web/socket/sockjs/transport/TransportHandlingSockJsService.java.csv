# id;timestamp;commentText;codeText;commentWords;codeWords
TransportHandlingSockJsService -> public void setMessageCodec(SockJsMessageCodec messageCodec);1386462352;The codec to use for encoding and decoding SockJS messages.;public void setMessageCodec(SockJsMessageCodec messageCodec) {_		this.messageCodec = messageCodec__	};the,codec,to,use,for,encoding,and,decoding,sock,js,messages;public,void,set,message,codec,sock,js,message,codec,message,codec,this,message,codec,message,codec
TransportHandlingSockJsService -> public void setMessageCodec(SockJsMessageCodec messageCodec);1395246308;The codec to use for encoding and decoding SockJS messages.;public void setMessageCodec(SockJsMessageCodec messageCodec) {_		this.messageCodec = messageCodec__	};the,codec,to,use,for,encoding,and,decoding,sock,js,messages;public,void,set,message,codec,sock,js,message,codec,message,codec,this,message,codec,message,codec
TransportHandlingSockJsService -> public void setMessageCodec(SockJsMessageCodec messageCodec);1395543588;The codec to use for encoding and decoding SockJS messages.;public void setMessageCodec(SockJsMessageCodec messageCodec) {_		this.messageCodec = messageCodec__	};the,codec,to,use,for,encoding,and,decoding,sock,js,messages;public,void,set,message,codec,sock,js,message,codec,message,codec,this,message,codec,message,codec
TransportHandlingSockJsService -> public void setMessageCodec(SockJsMessageCodec messageCodec);1403719829;The codec to use for encoding and decoding SockJS messages.;public void setMessageCodec(SockJsMessageCodec messageCodec) {_		this.messageCodec = messageCodec__	};the,codec,to,use,for,encoding,and,decoding,sock,js,messages;public,void,set,message,codec,sock,js,message,codec,message,codec,this,message,codec,message,codec
TransportHandlingSockJsService -> public void setMessageCodec(SockJsMessageCodec messageCodec);1403856366;The codec to use for encoding and decoding SockJS messages.;public void setMessageCodec(SockJsMessageCodec messageCodec) {_		this.messageCodec = messageCodec__	};the,codec,to,use,for,encoding,and,decoding,sock,js,messages;public,void,set,message,codec,sock,js,message,codec,message,codec,this,message,codec,message,codec
TransportHandlingSockJsService -> public void setMessageCodec(SockJsMessageCodec messageCodec);1404880799;The codec to use for encoding and decoding SockJS messages.;public void setMessageCodec(SockJsMessageCodec messageCodec) {_		this.messageCodec = messageCodec__	};the,codec,to,use,for,encoding,and,decoding,sock,js,messages;public,void,set,message,codec,sock,js,message,codec,message,codec,this,message,codec,message,codec
TransportHandlingSockJsService -> public void setMessageCodec(SockJsMessageCodec messageCodec);1407154420;The codec to use for encoding and decoding SockJS messages.;public void setMessageCodec(SockJsMessageCodec messageCodec) {_		this.messageCodec = messageCodec__	};the,codec,to,use,for,encoding,and,decoding,sock,js,messages;public,void,set,message,codec,sock,js,message,codec,message,codec,this,message,codec,message,codec
TransportHandlingSockJsService -> public void setMessageCodec(SockJsMessageCodec messageCodec);1411567635;The codec to use for encoding and decoding SockJS messages.;public void setMessageCodec(SockJsMessageCodec messageCodec) {_		this.messageCodec = messageCodec__	};the,codec,to,use,for,encoding,and,decoding,sock,js,messages;public,void,set,message,codec,sock,js,message,codec,message,codec,this,message,codec,message,codec
TransportHandlingSockJsService -> public void setMessageCodec(SockJsMessageCodec messageCodec);1413848647;The codec to use for encoding and decoding SockJS messages.;public void setMessageCodec(SockJsMessageCodec messageCodec) {_		this.messageCodec = messageCodec__	};the,codec,to,use,for,encoding,and,decoding,sock,js,messages;public,void,set,message,codec,sock,js,message,codec,message,codec,this,message,codec,message,codec
TransportHandlingSockJsService -> public void setMessageCodec(SockJsMessageCodec messageCodec);1414354684;The codec to use for encoding and decoding SockJS messages.;public void setMessageCodec(SockJsMessageCodec messageCodec) {_		this.messageCodec = messageCodec__	};the,codec,to,use,for,encoding,and,decoding,sock,js,messages;public,void,set,message,codec,sock,js,message,codec,message,codec,this,message,codec,message,codec
TransportHandlingSockJsService -> public void setMessageCodec(SockJsMessageCodec messageCodec);1414412881;The codec to use for encoding and decoding SockJS messages.;public void setMessageCodec(SockJsMessageCodec messageCodec) {_		this.messageCodec = messageCodec__	};the,codec,to,use,for,encoding,and,decoding,sock,js,messages;public,void,set,message,codec,sock,js,message,codec,message,codec,this,message,codec,message,codec
TransportHandlingSockJsService -> public void setMessageCodec(SockJsMessageCodec messageCodec);1414415063;The codec to use for encoding and decoding SockJS messages.;public void setMessageCodec(SockJsMessageCodec messageCodec) {_		this.messageCodec = messageCodec__	};the,codec,to,use,for,encoding,and,decoding,sock,js,messages;public,void,set,message,codec,sock,js,message,codec,message,codec,this,message,codec,message,codec
TransportHandlingSockJsService -> public void setMessageCodec(SockJsMessageCodec messageCodec);1414619099;The codec to use for encoding and decoding SockJS messages.;public void setMessageCodec(SockJsMessageCodec messageCodec) {_		this.messageCodec = messageCodec__	};the,codec,to,use,for,encoding,and,decoding,sock,js,messages;public,void,set,message,codec,sock,js,message,codec,message,codec,this,message,codec,message,codec
TransportHandlingSockJsService -> public void setMessageCodec(SockJsMessageCodec messageCodec);1417540415;The codec to use for encoding and decoding SockJS messages.;public void setMessageCodec(SockJsMessageCodec messageCodec) {_		this.messageCodec = messageCodec__	};the,codec,to,use,for,encoding,and,decoding,sock,js,messages;public,void,set,message,codec,sock,js,message,codec,message,codec,this,message,codec,message,codec
TransportHandlingSockJsService -> public void setMessageCodec(SockJsMessageCodec messageCodec);1424361139;The codec to use for encoding and decoding SockJS messages.;public void setMessageCodec(SockJsMessageCodec messageCodec) {_		this.messageCodec = messageCodec__	};the,codec,to,use,for,encoding,and,decoding,sock,js,messages;public,void,set,message,codec,sock,js,message,codec,message,codec,this,message,codec,message,codec
TransportHandlingSockJsService -> public void setMessageCodec(SockJsMessageCodec messageCodec);1427234595;The codec to use for encoding and decoding SockJS messages.;public void setMessageCodec(SockJsMessageCodec messageCodec) {_		this.messageCodec = messageCodec__	};the,codec,to,use,for,encoding,and,decoding,sock,js,messages;public,void,set,message,codec,sock,js,message,codec,message,codec,this,message,codec,message,codec
TransportHandlingSockJsService -> public void setMessageCodec(SockJsMessageCodec messageCodec);1427983931;The codec to use for encoding and decoding SockJS messages.;public void setMessageCodec(SockJsMessageCodec messageCodec) {_		this.messageCodec = messageCodec__	};the,codec,to,use,for,encoding,and,decoding,sock,js,messages;public,void,set,message,codec,sock,js,message,codec,message,codec,this,message,codec,message,codec
TransportHandlingSockJsService -> public void setMessageCodec(SockJsMessageCodec messageCodec);1435026644;The codec to use for encoding and decoding SockJS messages.;public void setMessageCodec(SockJsMessageCodec messageCodec) {_		this.messageCodec = messageCodec__	};the,codec,to,use,for,encoding,and,decoding,sock,js,messages;public,void,set,message,codec,sock,js,message,codec,message,codec,this,message,codec,message,codec
TransportHandlingSockJsService -> public void setMessageCodec(SockJsMessageCodec messageCodec);1444217152;The codec to use for encoding and decoding SockJS messages.;public void setMessageCodec(SockJsMessageCodec messageCodec) {_		this.messageCodec = messageCodec__	};the,codec,to,use,for,encoding,and,decoding,sock,js,messages;public,void,set,message,codec,sock,js,message,codec,message,codec,this,message,codec,message,codec
TransportHandlingSockJsService -> public void setMessageCodec(SockJsMessageCodec messageCodec);1449242513;The codec to use for encoding and decoding SockJS messages.;public void setMessageCodec(SockJsMessageCodec messageCodec) {_		this.messageCodec = messageCodec__	};the,codec,to,use,for,encoding,and,decoding,sock,js,messages;public,void,set,message,codec,sock,js,message,codec,message,codec,this,message,codec,message,codec
TransportHandlingSockJsService -> public void setMessageCodec(SockJsMessageCodec messageCodec);1449660404;The codec to use for encoding and decoding SockJS messages.;public void setMessageCodec(SockJsMessageCodec messageCodec) {_		this.messageCodec = messageCodec__	};the,codec,to,use,for,encoding,and,decoding,sock,js,messages;public,void,set,message,codec,sock,js,message,codec,message,codec,this,message,codec,message,codec
TransportHandlingSockJsService -> public void setMessageCodec(SockJsMessageCodec messageCodec);1459792887;The codec to use for encoding and decoding SockJS messages.;public void setMessageCodec(SockJsMessageCodec messageCodec) {_		this.messageCodec = messageCodec__	};the,codec,to,use,for,encoding,and,decoding,sock,js,messages;public,void,set,message,codec,sock,js,message,codec,message,codec,this,message,codec,message,codec
TransportHandlingSockJsService -> public void setMessageCodec(SockJsMessageCodec messageCodec);1459795890;The codec to use for encoding and decoding SockJS messages.;public void setMessageCodec(SockJsMessageCodec messageCodec) {_		this.messageCodec = messageCodec__	};the,codec,to,use,for,encoding,and,decoding,sock,js,messages;public,void,set,message,codec,sock,js,message,codec,message,codec,this,message,codec,message,codec
TransportHandlingSockJsService -> public void setMessageCodec(SockJsMessageCodec messageCodec);1467730834;The codec to use for encoding and decoding SockJS messages.;public void setMessageCodec(SockJsMessageCodec messageCodec) {_		this.messageCodec = messageCodec__	};the,codec,to,use,for,encoding,and,decoding,sock,js,messages;public,void,set,message,codec,sock,js,message,codec,message,codec,this,message,codec,message,codec
TransportHandlingSockJsService -> public void setMessageCodec(SockJsMessageCodec messageCodec);1478158530;The codec to use for encoding and decoding SockJS messages.;public void setMessageCodec(SockJsMessageCodec messageCodec) {_		this.messageCodec = messageCodec__	};the,codec,to,use,for,encoding,and,decoding,sock,js,messages;public,void,set,message,codec,sock,js,message,codec,message,codec,this,message,codec,message,codec
TransportHandlingSockJsService -> public void setMessageCodec(SockJsMessageCodec messageCodec);1496837955;The codec to use for encoding and decoding SockJS messages.;public void setMessageCodec(SockJsMessageCodec messageCodec) {_		this.messageCodec = messageCodec__	};the,codec,to,use,for,encoding,and,decoding,sock,js,messages;public,void,set,message,codec,sock,js,message,codec,message,codec,this,message,codec,message,codec
TransportHandlingSockJsService -> public void setMessageCodec(SockJsMessageCodec messageCodec);1497341397;The codec to use for encoding and decoding SockJS messages.;public void setMessageCodec(SockJsMessageCodec messageCodec) {_		this.messageCodec = messageCodec__	};the,codec,to,use,for,encoding,and,decoding,sock,js,messages;public,void,set,message,codec,sock,js,message,codec,message,codec,this,message,codec,message,codec
TransportHandlingSockJsService -> public void setMessageCodec(SockJsMessageCodec messageCodec);1498780456;The codec to use for encoding and decoding SockJS messages.;public void setMessageCodec(SockJsMessageCodec messageCodec) {_		this.messageCodec = messageCodec__	};the,codec,to,use,for,encoding,and,decoding,sock,js,messages;public,void,set,message,codec,sock,js,message,codec,message,codec,this,message,codec,message,codec
TransportHandlingSockJsService -> public void setMessageCodec(SockJsMessageCodec messageCodec);1518260973;The codec to use for encoding and decoding SockJS messages.;public void setMessageCodec(SockJsMessageCodec messageCodec) {_		this.messageCodec = messageCodec__	};the,codec,to,use,for,encoding,and,decoding,sock,js,messages;public,void,set,message,codec,sock,js,message,codec,message,codec,this,message,codec,message,codec
TransportHandlingSockJsService -> public void setMessageCodec(SockJsMessageCodec messageCodec);1518987682;The codec to use for encoding and decoding SockJS messages.;public void setMessageCodec(SockJsMessageCodec messageCodec) {_		this.messageCodec = messageCodec__	};the,codec,to,use,for,encoding,and,decoding,sock,js,messages;public,void,set,message,codec,sock,js,message,codec,message,codec,this,message,codec,message,codec
TransportHandlingSockJsService -> public void setMessageCodec(SockJsMessageCodec messageCodec);1520529117;The codec to use for encoding and decoding SockJS messages.;public void setMessageCodec(SockJsMessageCodec messageCodec) {_		this.messageCodec = messageCodec__	};the,codec,to,use,for,encoding,and,decoding,sock,js,messages;public,void,set,message,codec,sock,js,message,codec,message,codec,this,message,codec,message,codec
TransportHandlingSockJsService -> public void setMessageCodec(SockJsMessageCodec messageCodec);1521123475;The codec to use for encoding and decoding SockJS messages.;public void setMessageCodec(SockJsMessageCodec messageCodec) {_		this.messageCodec = messageCodec__	};the,codec,to,use,for,encoding,and,decoding,sock,js,messages;public,void,set,message,codec,sock,js,message,codec,message,codec,this,message,codec,message,codec
TransportHandlingSockJsService -> public void setMessageCodec(SockJsMessageCodec messageCodec);1530174524;The codec to use for encoding and decoding SockJS messages.;public void setMessageCodec(SockJsMessageCodec messageCodec) {_		this.messageCodec = messageCodec__	};the,codec,to,use,for,encoding,and,decoding,sock,js,messages;public,void,set,message,codec,sock,js,message,codec,message,codec,this,message,codec,message,codec
TransportHandlingSockJsService -> public void setMessageCodec(SockJsMessageCodec messageCodec);1530174524;The codec to use for encoding and decoding SockJS messages.;public void setMessageCodec(SockJsMessageCodec messageCodec) {_		this.messageCodec = messageCodec__	};the,codec,to,use,for,encoding,and,decoding,sock,js,messages;public,void,set,message,codec,sock,js,message,codec,message,codec,this,message,codec,message,codec
TransportHandlingSockJsService -> public void setMessageCodec(SockJsMessageCodec messageCodec);1534438291;The codec to use for encoding and decoding SockJS messages.;public void setMessageCodec(SockJsMessageCodec messageCodec) {_		this.messageCodec = messageCodec__	};the,codec,to,use,for,encoding,and,decoding,sock,js,messages;public,void,set,message,codec,sock,js,message,codec,message,codec,this,message,codec,message,codec
TransportHandlingSockJsService -> public void setMessageCodec(SockJsMessageCodec messageCodec);1534608905;The codec to use for encoding and decoding SockJS messages.;public void setMessageCodec(SockJsMessageCodec messageCodec) {_		this.messageCodec = messageCodec__	};the,codec,to,use,for,encoding,and,decoding,sock,js,messages;public,void,set,message,codec,sock,js,message,codec,message,codec,this,message,codec,message,codec
TransportHandlingSockJsService -> public void setHandshakeInterceptors(List<HandshakeInterceptor> interceptors);1386462352;Configure one or more WebSocket handshake request interceptors.;public void setHandshakeInterceptors(List<HandshakeInterceptor> interceptors) {_		this.interceptors.clear()__		if (interceptors != null) {_			this.interceptors.addAll(interceptors)__		}_	};configure,one,or,more,web,socket,handshake,request,interceptors;public,void,set,handshake,interceptors,list,handshake,interceptor,interceptors,this,interceptors,clear,if,interceptors,null,this,interceptors,add,all,interceptors
TransportHandlingSockJsService -> public void setHandshakeInterceptors(List<HandshakeInterceptor> interceptors);1395246308;Configure one or more WebSocket handshake request interceptors.;public void setHandshakeInterceptors(List<HandshakeInterceptor> interceptors) {_		this.interceptors.clear()__		if (interceptors != null) {_			this.interceptors.addAll(interceptors)__		}_	};configure,one,or,more,web,socket,handshake,request,interceptors;public,void,set,handshake,interceptors,list,handshake,interceptor,interceptors,this,interceptors,clear,if,interceptors,null,this,interceptors,add,all,interceptors
TransportHandlingSockJsService -> public void setHandshakeInterceptors(List<HandshakeInterceptor> interceptors);1395543588;Configure one or more WebSocket handshake request interceptors.;public void setHandshakeInterceptors(List<HandshakeInterceptor> interceptors) {_		this.interceptors.clear()__		if (interceptors != null) {_			this.interceptors.addAll(interceptors)__		}_	};configure,one,or,more,web,socket,handshake,request,interceptors;public,void,set,handshake,interceptors,list,handshake,interceptor,interceptors,this,interceptors,clear,if,interceptors,null,this,interceptors,add,all,interceptors
TransportHandlingSockJsService -> public void setHandshakeInterceptors(List<HandshakeInterceptor> interceptors);1403719829;Configure one or more WebSocket handshake request interceptors.;public void setHandshakeInterceptors(List<HandshakeInterceptor> interceptors) {_		this.interceptors.clear()__		if (interceptors != null) {_			this.interceptors.addAll(interceptors)__		}_	};configure,one,or,more,web,socket,handshake,request,interceptors;public,void,set,handshake,interceptors,list,handshake,interceptor,interceptors,this,interceptors,clear,if,interceptors,null,this,interceptors,add,all,interceptors
TransportHandlingSockJsService -> public void setHandshakeInterceptors(List<HandshakeInterceptor> interceptors);1403856366;Configure one or more WebSocket handshake request interceptors.;public void setHandshakeInterceptors(List<HandshakeInterceptor> interceptors) {_		this.interceptors.clear()__		if (interceptors != null) {_			this.interceptors.addAll(interceptors)__		}_	};configure,one,or,more,web,socket,handshake,request,interceptors;public,void,set,handshake,interceptors,list,handshake,interceptor,interceptors,this,interceptors,clear,if,interceptors,null,this,interceptors,add,all,interceptors
TransportHandlingSockJsService -> public void setHandshakeInterceptors(List<HandshakeInterceptor> interceptors);1404880799;Configure one or more WebSocket handshake request interceptors.;public void setHandshakeInterceptors(List<HandshakeInterceptor> interceptors) {_		this.interceptors.clear()__		if (interceptors != null) {_			this.interceptors.addAll(interceptors)__		}_	};configure,one,or,more,web,socket,handshake,request,interceptors;public,void,set,handshake,interceptors,list,handshake,interceptor,interceptors,this,interceptors,clear,if,interceptors,null,this,interceptors,add,all,interceptors
TransportHandlingSockJsService -> public void setHandshakeInterceptors(List<HandshakeInterceptor> interceptors);1407154420;Configure one or more WebSocket handshake request interceptors.;public void setHandshakeInterceptors(List<HandshakeInterceptor> interceptors) {_		this.interceptors.clear()__		if (interceptors != null) {_			this.interceptors.addAll(interceptors)__		}_	};configure,one,or,more,web,socket,handshake,request,interceptors;public,void,set,handshake,interceptors,list,handshake,interceptor,interceptors,this,interceptors,clear,if,interceptors,null,this,interceptors,add,all,interceptors
TransportHandlingSockJsService -> public void setHandshakeInterceptors(List<HandshakeInterceptor> interceptors);1411567635;Configure one or more WebSocket handshake request interceptors.;public void setHandshakeInterceptors(List<HandshakeInterceptor> interceptors) {_		this.interceptors.clear()__		if (interceptors != null) {_			this.interceptors.addAll(interceptors)__		}_	};configure,one,or,more,web,socket,handshake,request,interceptors;public,void,set,handshake,interceptors,list,handshake,interceptor,interceptors,this,interceptors,clear,if,interceptors,null,this,interceptors,add,all,interceptors
TransportHandlingSockJsService -> public void setHandshakeInterceptors(List<HandshakeInterceptor> interceptors);1413848647;Configure one or more WebSocket handshake request interceptors.;public void setHandshakeInterceptors(List<HandshakeInterceptor> interceptors) {_		this.interceptors.clear()__		if (interceptors != null) {_			this.interceptors.addAll(interceptors)__		}_	};configure,one,or,more,web,socket,handshake,request,interceptors;public,void,set,handshake,interceptors,list,handshake,interceptor,interceptors,this,interceptors,clear,if,interceptors,null,this,interceptors,add,all,interceptors
TransportHandlingSockJsService -> public void setHandshakeInterceptors(List<HandshakeInterceptor> interceptors);1414354684;Configure one or more WebSocket handshake request interceptors.;public void setHandshakeInterceptors(List<HandshakeInterceptor> interceptors) {_		this.interceptors.clear()__		if (interceptors != null) {_			this.interceptors.addAll(interceptors)__		}_	};configure,one,or,more,web,socket,handshake,request,interceptors;public,void,set,handshake,interceptors,list,handshake,interceptor,interceptors,this,interceptors,clear,if,interceptors,null,this,interceptors,add,all,interceptors
TransportHandlingSockJsService -> public void setHandshakeInterceptors(List<HandshakeInterceptor> interceptors);1414412881;Configure one or more WebSocket handshake request interceptors.;public void setHandshakeInterceptors(List<HandshakeInterceptor> interceptors) {_		this.interceptors.clear()__		if (interceptors != null) {_			this.interceptors.addAll(interceptors)__		}_	};configure,one,or,more,web,socket,handshake,request,interceptors;public,void,set,handshake,interceptors,list,handshake,interceptor,interceptors,this,interceptors,clear,if,interceptors,null,this,interceptors,add,all,interceptors
TransportHandlingSockJsService -> public void setHandshakeInterceptors(List<HandshakeInterceptor> interceptors);1414415063;Configure one or more WebSocket handshake request interceptors.;public void setHandshakeInterceptors(List<HandshakeInterceptor> interceptors) {_		this.interceptors.clear()__		if (interceptors != null) {_			this.interceptors.addAll(interceptors)__		}_	};configure,one,or,more,web,socket,handshake,request,interceptors;public,void,set,handshake,interceptors,list,handshake,interceptor,interceptors,this,interceptors,clear,if,interceptors,null,this,interceptors,add,all,interceptors
TransportHandlingSockJsService -> public void setHandshakeInterceptors(List<HandshakeInterceptor> interceptors);1414619099;Configure one or more WebSocket handshake request interceptors.;public void setHandshakeInterceptors(List<HandshakeInterceptor> interceptors) {_		this.interceptors.clear()__		if (interceptors != null) {_			this.interceptors.addAll(interceptors)__		}_	};configure,one,or,more,web,socket,handshake,request,interceptors;public,void,set,handshake,interceptors,list,handshake,interceptor,interceptors,this,interceptors,clear,if,interceptors,null,this,interceptors,add,all,interceptors
TransportHandlingSockJsService -> public void setHandshakeInterceptors(List<HandshakeInterceptor> interceptors);1417540415;Configure one or more WebSocket handshake request interceptors.;public void setHandshakeInterceptors(List<HandshakeInterceptor> interceptors) {_		this.interceptors.clear()__		if (interceptors != null) {_			this.interceptors.addAll(interceptors)__		}_	};configure,one,or,more,web,socket,handshake,request,interceptors;public,void,set,handshake,interceptors,list,handshake,interceptor,interceptors,this,interceptors,clear,if,interceptors,null,this,interceptors,add,all,interceptors
TransportHandlingSockJsService -> public void setHandshakeInterceptors(List<HandshakeInterceptor> interceptors);1424361139;Configure one or more WebSocket handshake request interceptors.;public void setHandshakeInterceptors(List<HandshakeInterceptor> interceptors) {_		this.interceptors.clear()__		if (interceptors != null) {_			this.interceptors.addAll(interceptors)__		}_	};configure,one,or,more,web,socket,handshake,request,interceptors;public,void,set,handshake,interceptors,list,handshake,interceptor,interceptors,this,interceptors,clear,if,interceptors,null,this,interceptors,add,all,interceptors
TransportHandlingSockJsService -> public void setHandshakeInterceptors(List<HandshakeInterceptor> interceptors);1427234595;Configure one or more WebSocket handshake request interceptors.;public void setHandshakeInterceptors(List<HandshakeInterceptor> interceptors) {_		this.interceptors.clear()__		if (interceptors != null) {_			this.interceptors.addAll(interceptors)__		}_	};configure,one,or,more,web,socket,handshake,request,interceptors;public,void,set,handshake,interceptors,list,handshake,interceptor,interceptors,this,interceptors,clear,if,interceptors,null,this,interceptors,add,all,interceptors
TransportHandlingSockJsService -> public void setHandshakeInterceptors(List<HandshakeInterceptor> interceptors);1427983931;Configure one or more WebSocket handshake request interceptors.;public void setHandshakeInterceptors(List<HandshakeInterceptor> interceptors) {_		this.interceptors.clear()__		if (interceptors != null) {_			this.interceptors.addAll(interceptors)__		}_	};configure,one,or,more,web,socket,handshake,request,interceptors;public,void,set,handshake,interceptors,list,handshake,interceptor,interceptors,this,interceptors,clear,if,interceptors,null,this,interceptors,add,all,interceptors
TransportHandlingSockJsService -> public void setHandshakeInterceptors(List<HandshakeInterceptor> interceptors);1435026644;Configure one or more WebSocket handshake request interceptors.;public void setHandshakeInterceptors(List<HandshakeInterceptor> interceptors) {_		this.interceptors.clear()__		if (interceptors != null) {_			this.interceptors.addAll(interceptors)__		}_	};configure,one,or,more,web,socket,handshake,request,interceptors;public,void,set,handshake,interceptors,list,handshake,interceptor,interceptors,this,interceptors,clear,if,interceptors,null,this,interceptors,add,all,interceptors
TransportHandlingSockJsService -> public void setHandshakeInterceptors(List<HandshakeInterceptor> interceptors);1444217152;Configure one or more WebSocket handshake request interceptors.;public void setHandshakeInterceptors(List<HandshakeInterceptor> interceptors) {_		this.interceptors.clear()__		if (interceptors != null) {_			this.interceptors.addAll(interceptors)__		}_	};configure,one,or,more,web,socket,handshake,request,interceptors;public,void,set,handshake,interceptors,list,handshake,interceptor,interceptors,this,interceptors,clear,if,interceptors,null,this,interceptors,add,all,interceptors
TransportHandlingSockJsService -> public void setHandshakeInterceptors(List<HandshakeInterceptor> interceptors);1449242513;Configure one or more WebSocket handshake request interceptors.;public void setHandshakeInterceptors(List<HandshakeInterceptor> interceptors) {_		this.interceptors.clear()__		if (interceptors != null) {_			this.interceptors.addAll(interceptors)__		}_	};configure,one,or,more,web,socket,handshake,request,interceptors;public,void,set,handshake,interceptors,list,handshake,interceptor,interceptors,this,interceptors,clear,if,interceptors,null,this,interceptors,add,all,interceptors
TransportHandlingSockJsService -> public void setHandshakeInterceptors(List<HandshakeInterceptor> interceptors);1449660404;Configure one or more WebSocket handshake request interceptors.;public void setHandshakeInterceptors(List<HandshakeInterceptor> interceptors) {_		this.interceptors.clear()__		if (interceptors != null) {_			this.interceptors.addAll(interceptors)__		}_	};configure,one,or,more,web,socket,handshake,request,interceptors;public,void,set,handshake,interceptors,list,handshake,interceptor,interceptors,this,interceptors,clear,if,interceptors,null,this,interceptors,add,all,interceptors
TransportHandlingSockJsService -> public void setHandshakeInterceptors(List<HandshakeInterceptor> interceptors);1459792887;Configure one or more WebSocket handshake request interceptors.;public void setHandshakeInterceptors(List<HandshakeInterceptor> interceptors) {_		this.interceptors.clear()__		if (interceptors != null) {_			this.interceptors.addAll(interceptors)__		}_	};configure,one,or,more,web,socket,handshake,request,interceptors;public,void,set,handshake,interceptors,list,handshake,interceptor,interceptors,this,interceptors,clear,if,interceptors,null,this,interceptors,add,all,interceptors
TransportHandlingSockJsService -> public void setHandshakeInterceptors(List<HandshakeInterceptor> interceptors);1459795890;Configure one or more WebSocket handshake request interceptors.;public void setHandshakeInterceptors(List<HandshakeInterceptor> interceptors) {_		this.interceptors.clear()__		if (interceptors != null) {_			this.interceptors.addAll(interceptors)__		}_	};configure,one,or,more,web,socket,handshake,request,interceptors;public,void,set,handshake,interceptors,list,handshake,interceptor,interceptors,this,interceptors,clear,if,interceptors,null,this,interceptors,add,all,interceptors
TransportHandlingSockJsService -> public void setHandshakeInterceptors(List<HandshakeInterceptor> interceptors);1467730834;Configure one or more WebSocket handshake request interceptors.;public void setHandshakeInterceptors(List<HandshakeInterceptor> interceptors) {_		this.interceptors.clear()__		if (interceptors != null) {_			this.interceptors.addAll(interceptors)__		}_	};configure,one,or,more,web,socket,handshake,request,interceptors;public,void,set,handshake,interceptors,list,handshake,interceptor,interceptors,this,interceptors,clear,if,interceptors,null,this,interceptors,add,all,interceptors
TransportHandlingSockJsService -> public void setHandshakeInterceptors(List<HandshakeInterceptor> interceptors);1478158530;Configure one or more WebSocket handshake request interceptors.;public void setHandshakeInterceptors(List<HandshakeInterceptor> interceptors) {_		this.interceptors.clear()__		if (interceptors != null) {_			this.interceptors.addAll(interceptors)__		}_	};configure,one,or,more,web,socket,handshake,request,interceptors;public,void,set,handshake,interceptors,list,handshake,interceptor,interceptors,this,interceptors,clear,if,interceptors,null,this,interceptors,add,all,interceptors
TransportHandlingSockJsService -> public TransportHandlingSockJsService(TaskScheduler scheduler, TransportHandler... handlers);1386462352;Create a TransportHandlingSockJsService with given {@link TransportHandler handler} types._@param scheduler a task scheduler for heart-beat messages and removing timed-out sessions__the provided TaskScheduler should be declared as a Spring bean to ensure it gets_initialized at start-up and shuts down when the application stops_@param handlers one or more {@link TransportHandler} implementations to use;public TransportHandlingSockJsService(TaskScheduler scheduler, TransportHandler... handlers) {_		this(scheduler, Arrays.asList(handlers))__	};create,a,transport,handling,sock,js,service,with,given,link,transport,handler,handler,types,param,scheduler,a,task,scheduler,for,heart,beat,messages,and,removing,timed,out,sessions,the,provided,task,scheduler,should,be,declared,as,a,spring,bean,to,ensure,it,gets,initialized,at,start,up,and,shuts,down,when,the,application,stops,param,handlers,one,or,more,link,transport,handler,implementations,to,use;public,transport,handling,sock,js,service,task,scheduler,scheduler,transport,handler,handlers,this,scheduler,arrays,as,list,handlers
TransportHandlingSockJsService -> public TransportHandlingSockJsService(TaskScheduler scheduler, TransportHandler... handlers);1395246308;Create a TransportHandlingSockJsService with given {@link TransportHandler handler} types._@param scheduler a task scheduler for heart-beat messages and removing timed-out sessions__the provided TaskScheduler should be declared as a Spring bean to ensure it gets_initialized at start-up and shuts down when the application stops_@param handlers one or more {@link TransportHandler} implementations to use;public TransportHandlingSockJsService(TaskScheduler scheduler, TransportHandler... handlers) {_		this(scheduler, Arrays.asList(handlers))__	};create,a,transport,handling,sock,js,service,with,given,link,transport,handler,handler,types,param,scheduler,a,task,scheduler,for,heart,beat,messages,and,removing,timed,out,sessions,the,provided,task,scheduler,should,be,declared,as,a,spring,bean,to,ensure,it,gets,initialized,at,start,up,and,shuts,down,when,the,application,stops,param,handlers,one,or,more,link,transport,handler,implementations,to,use;public,transport,handling,sock,js,service,task,scheduler,scheduler,transport,handler,handlers,this,scheduler,arrays,as,list,handlers
TransportHandlingSockJsService -> public TransportHandlingSockJsService(TaskScheduler scheduler, TransportHandler... handlers);1395543588;Create a TransportHandlingSockJsService with given {@link TransportHandler handler} types._@param scheduler a task scheduler for heart-beat messages and removing timed-out sessions__the provided TaskScheduler should be declared as a Spring bean to ensure it gets_initialized at start-up and shuts down when the application stops_@param handlers one or more {@link TransportHandler} implementations to use;public TransportHandlingSockJsService(TaskScheduler scheduler, TransportHandler... handlers) {_		this(scheduler, Arrays.asList(handlers))__	};create,a,transport,handling,sock,js,service,with,given,link,transport,handler,handler,types,param,scheduler,a,task,scheduler,for,heart,beat,messages,and,removing,timed,out,sessions,the,provided,task,scheduler,should,be,declared,as,a,spring,bean,to,ensure,it,gets,initialized,at,start,up,and,shuts,down,when,the,application,stops,param,handlers,one,or,more,link,transport,handler,implementations,to,use;public,transport,handling,sock,js,service,task,scheduler,scheduler,transport,handler,handlers,this,scheduler,arrays,as,list,handlers
TransportHandlingSockJsService -> public TransportHandlingSockJsService(TaskScheduler scheduler, TransportHandler... handlers);1403719829;Create a TransportHandlingSockJsService with given {@link TransportHandler handler} types._@param scheduler a task scheduler for heart-beat messages and removing timed-out sessions__the provided TaskScheduler should be declared as a Spring bean to ensure it gets_initialized at start-up and shuts down when the application stops_@param handlers one or more {@link TransportHandler} implementations to use;public TransportHandlingSockJsService(TaskScheduler scheduler, TransportHandler... handlers) {_		this(scheduler, Arrays.asList(handlers))__	};create,a,transport,handling,sock,js,service,with,given,link,transport,handler,handler,types,param,scheduler,a,task,scheduler,for,heart,beat,messages,and,removing,timed,out,sessions,the,provided,task,scheduler,should,be,declared,as,a,spring,bean,to,ensure,it,gets,initialized,at,start,up,and,shuts,down,when,the,application,stops,param,handlers,one,or,more,link,transport,handler,implementations,to,use;public,transport,handling,sock,js,service,task,scheduler,scheduler,transport,handler,handlers,this,scheduler,arrays,as,list,handlers
TransportHandlingSockJsService -> public TransportHandlingSockJsService(TaskScheduler scheduler, TransportHandler... handlers);1403856366;Create a TransportHandlingSockJsService with given {@link TransportHandler handler} types._@param scheduler a task scheduler for heart-beat messages and removing timed-out sessions__the provided TaskScheduler should be declared as a Spring bean to ensure it gets_initialized at start-up and shuts down when the application stops_@param handlers one or more {@link TransportHandler} implementations to use;public TransportHandlingSockJsService(TaskScheduler scheduler, TransportHandler... handlers) {_		this(scheduler, Arrays.asList(handlers))__	};create,a,transport,handling,sock,js,service,with,given,link,transport,handler,handler,types,param,scheduler,a,task,scheduler,for,heart,beat,messages,and,removing,timed,out,sessions,the,provided,task,scheduler,should,be,declared,as,a,spring,bean,to,ensure,it,gets,initialized,at,start,up,and,shuts,down,when,the,application,stops,param,handlers,one,or,more,link,transport,handler,implementations,to,use;public,transport,handling,sock,js,service,task,scheduler,scheduler,transport,handler,handlers,this,scheduler,arrays,as,list,handlers
TransportHandlingSockJsService -> public TransportHandlingSockJsService(TaskScheduler scheduler, TransportHandler... handlers);1404880799;Create a TransportHandlingSockJsService with given {@link TransportHandler handler} types._@param scheduler a task scheduler for heart-beat messages and removing timed-out sessions__the provided TaskScheduler should be declared as a Spring bean to ensure it gets_initialized at start-up and shuts down when the application stops_@param handlers one or more {@link TransportHandler} implementations to use;public TransportHandlingSockJsService(TaskScheduler scheduler, TransportHandler... handlers) {_		this(scheduler, Arrays.asList(handlers))__	};create,a,transport,handling,sock,js,service,with,given,link,transport,handler,handler,types,param,scheduler,a,task,scheduler,for,heart,beat,messages,and,removing,timed,out,sessions,the,provided,task,scheduler,should,be,declared,as,a,spring,bean,to,ensure,it,gets,initialized,at,start,up,and,shuts,down,when,the,application,stops,param,handlers,one,or,more,link,transport,handler,implementations,to,use;public,transport,handling,sock,js,service,task,scheduler,scheduler,transport,handler,handlers,this,scheduler,arrays,as,list,handlers
TransportHandlingSockJsService -> public TransportHandlingSockJsService(TaskScheduler scheduler, TransportHandler... handlers);1407154420;Create a TransportHandlingSockJsService with given {@link TransportHandler handler} types._@param scheduler a task scheduler for heart-beat messages and removing timed-out sessions__the provided TaskScheduler should be declared as a Spring bean to ensure it gets_initialized at start-up and shuts down when the application stops_@param handlers one or more {@link TransportHandler} implementations to use;public TransportHandlingSockJsService(TaskScheduler scheduler, TransportHandler... handlers) {_		this(scheduler, Arrays.asList(handlers))__	};create,a,transport,handling,sock,js,service,with,given,link,transport,handler,handler,types,param,scheduler,a,task,scheduler,for,heart,beat,messages,and,removing,timed,out,sessions,the,provided,task,scheduler,should,be,declared,as,a,spring,bean,to,ensure,it,gets,initialized,at,start,up,and,shuts,down,when,the,application,stops,param,handlers,one,or,more,link,transport,handler,implementations,to,use;public,transport,handling,sock,js,service,task,scheduler,scheduler,transport,handler,handlers,this,scheduler,arrays,as,list,handlers
TransportHandlingSockJsService -> public TransportHandlingSockJsService(TaskScheduler scheduler, TransportHandler... handlers);1411567635;Create a TransportHandlingSockJsService with given {@link TransportHandler handler} types._@param scheduler a task scheduler for heart-beat messages and removing timed-out sessions__the provided TaskScheduler should be declared as a Spring bean to ensure it gets_initialized at start-up and shuts down when the application stops_@param handlers one or more {@link TransportHandler} implementations to use;public TransportHandlingSockJsService(TaskScheduler scheduler, TransportHandler... handlers) {_		this(scheduler, Arrays.asList(handlers))__	};create,a,transport,handling,sock,js,service,with,given,link,transport,handler,handler,types,param,scheduler,a,task,scheduler,for,heart,beat,messages,and,removing,timed,out,sessions,the,provided,task,scheduler,should,be,declared,as,a,spring,bean,to,ensure,it,gets,initialized,at,start,up,and,shuts,down,when,the,application,stops,param,handlers,one,or,more,link,transport,handler,implementations,to,use;public,transport,handling,sock,js,service,task,scheduler,scheduler,transport,handler,handlers,this,scheduler,arrays,as,list,handlers
TransportHandlingSockJsService -> public TransportHandlingSockJsService(TaskScheduler scheduler, TransportHandler... handlers);1413848647;Create a TransportHandlingSockJsService with given {@link TransportHandler handler} types._@param scheduler a task scheduler for heart-beat messages and removing timed-out sessions__the provided TaskScheduler should be declared as a Spring bean to ensure it gets_initialized at start-up and shuts down when the application stops_@param handlers one or more {@link TransportHandler} implementations to use;public TransportHandlingSockJsService(TaskScheduler scheduler, TransportHandler... handlers) {_		this(scheduler, Arrays.asList(handlers))__	};create,a,transport,handling,sock,js,service,with,given,link,transport,handler,handler,types,param,scheduler,a,task,scheduler,for,heart,beat,messages,and,removing,timed,out,sessions,the,provided,task,scheduler,should,be,declared,as,a,spring,bean,to,ensure,it,gets,initialized,at,start,up,and,shuts,down,when,the,application,stops,param,handlers,one,or,more,link,transport,handler,implementations,to,use;public,transport,handling,sock,js,service,task,scheduler,scheduler,transport,handler,handlers,this,scheduler,arrays,as,list,handlers
TransportHandlingSockJsService -> public TransportHandlingSockJsService(TaskScheduler scheduler, TransportHandler... handlers);1414354684;Create a TransportHandlingSockJsService with given {@link TransportHandler handler} types._@param scheduler a task scheduler for heart-beat messages and removing timed-out sessions__the provided TaskScheduler should be declared as a Spring bean to ensure it gets_initialized at start-up and shuts down when the application stops_@param handlers one or more {@link TransportHandler} implementations to use;public TransportHandlingSockJsService(TaskScheduler scheduler, TransportHandler... handlers) {_		this(scheduler, Arrays.asList(handlers))__	};create,a,transport,handling,sock,js,service,with,given,link,transport,handler,handler,types,param,scheduler,a,task,scheduler,for,heart,beat,messages,and,removing,timed,out,sessions,the,provided,task,scheduler,should,be,declared,as,a,spring,bean,to,ensure,it,gets,initialized,at,start,up,and,shuts,down,when,the,application,stops,param,handlers,one,or,more,link,transport,handler,implementations,to,use;public,transport,handling,sock,js,service,task,scheduler,scheduler,transport,handler,handlers,this,scheduler,arrays,as,list,handlers
TransportHandlingSockJsService -> public TransportHandlingSockJsService(TaskScheduler scheduler, TransportHandler... handlers);1414412881;Create a TransportHandlingSockJsService with given {@link TransportHandler handler} types._@param scheduler a task scheduler for heart-beat messages and removing timed-out sessions__the provided TaskScheduler should be declared as a Spring bean to ensure it gets_initialized at start-up and shuts down when the application stops_@param handlers one or more {@link TransportHandler} implementations to use;public TransportHandlingSockJsService(TaskScheduler scheduler, TransportHandler... handlers) {_		this(scheduler, Arrays.asList(handlers))__	};create,a,transport,handling,sock,js,service,with,given,link,transport,handler,handler,types,param,scheduler,a,task,scheduler,for,heart,beat,messages,and,removing,timed,out,sessions,the,provided,task,scheduler,should,be,declared,as,a,spring,bean,to,ensure,it,gets,initialized,at,start,up,and,shuts,down,when,the,application,stops,param,handlers,one,or,more,link,transport,handler,implementations,to,use;public,transport,handling,sock,js,service,task,scheduler,scheduler,transport,handler,handlers,this,scheduler,arrays,as,list,handlers
TransportHandlingSockJsService -> public TransportHandlingSockJsService(TaskScheduler scheduler, TransportHandler... handlers);1414415063;Create a TransportHandlingSockJsService with given {@link TransportHandler handler} types._@param scheduler a task scheduler for heart-beat messages and removing timed-out sessions__the provided TaskScheduler should be declared as a Spring bean to ensure it gets_initialized at start-up and shuts down when the application stops_@param handlers one or more {@link TransportHandler} implementations to use;public TransportHandlingSockJsService(TaskScheduler scheduler, TransportHandler... handlers) {_		this(scheduler, Arrays.asList(handlers))__	};create,a,transport,handling,sock,js,service,with,given,link,transport,handler,handler,types,param,scheduler,a,task,scheduler,for,heart,beat,messages,and,removing,timed,out,sessions,the,provided,task,scheduler,should,be,declared,as,a,spring,bean,to,ensure,it,gets,initialized,at,start,up,and,shuts,down,when,the,application,stops,param,handlers,one,or,more,link,transport,handler,implementations,to,use;public,transport,handling,sock,js,service,task,scheduler,scheduler,transport,handler,handlers,this,scheduler,arrays,as,list,handlers
TransportHandlingSockJsService -> public TransportHandlingSockJsService(TaskScheduler scheduler, TransportHandler... handlers);1414619099;Create a TransportHandlingSockJsService with given {@link TransportHandler handler} types._@param scheduler a task scheduler for heart-beat messages and removing timed-out sessions__the provided TaskScheduler should be declared as a Spring bean to ensure it gets_initialized at start-up and shuts down when the application stops_@param handlers one or more {@link TransportHandler} implementations to use;public TransportHandlingSockJsService(TaskScheduler scheduler, TransportHandler... handlers) {_		this(scheduler, Arrays.asList(handlers))__	};create,a,transport,handling,sock,js,service,with,given,link,transport,handler,handler,types,param,scheduler,a,task,scheduler,for,heart,beat,messages,and,removing,timed,out,sessions,the,provided,task,scheduler,should,be,declared,as,a,spring,bean,to,ensure,it,gets,initialized,at,start,up,and,shuts,down,when,the,application,stops,param,handlers,one,or,more,link,transport,handler,implementations,to,use;public,transport,handling,sock,js,service,task,scheduler,scheduler,transport,handler,handlers,this,scheduler,arrays,as,list,handlers
TransportHandlingSockJsService -> public TransportHandlingSockJsService(TaskScheduler scheduler, TransportHandler... handlers);1417540415;Create a TransportHandlingSockJsService with given {@link TransportHandler handler} types._@param scheduler a task scheduler for heart-beat messages and removing timed-out sessions__the provided TaskScheduler should be declared as a Spring bean to ensure it gets_initialized at start-up and shuts down when the application stops_@param handlers one or more {@link TransportHandler} implementations to use;public TransportHandlingSockJsService(TaskScheduler scheduler, TransportHandler... handlers) {_		this(scheduler, Arrays.asList(handlers))__	};create,a,transport,handling,sock,js,service,with,given,link,transport,handler,handler,types,param,scheduler,a,task,scheduler,for,heart,beat,messages,and,removing,timed,out,sessions,the,provided,task,scheduler,should,be,declared,as,a,spring,bean,to,ensure,it,gets,initialized,at,start,up,and,shuts,down,when,the,application,stops,param,handlers,one,or,more,link,transport,handler,implementations,to,use;public,transport,handling,sock,js,service,task,scheduler,scheduler,transport,handler,handlers,this,scheduler,arrays,as,list,handlers
TransportHandlingSockJsService -> public TransportHandlingSockJsService(TaskScheduler scheduler, TransportHandler... handlers);1424361139;Create a TransportHandlingSockJsService with given {@link TransportHandler handler} types._@param scheduler a task scheduler for heart-beat messages and removing timed-out sessions__the provided TaskScheduler should be declared as a Spring bean to ensure it gets_initialized at start-up and shuts down when the application stops_@param handlers one or more {@link TransportHandler} implementations to use;public TransportHandlingSockJsService(TaskScheduler scheduler, TransportHandler... handlers) {_		this(scheduler, Arrays.asList(handlers))__	};create,a,transport,handling,sock,js,service,with,given,link,transport,handler,handler,types,param,scheduler,a,task,scheduler,for,heart,beat,messages,and,removing,timed,out,sessions,the,provided,task,scheduler,should,be,declared,as,a,spring,bean,to,ensure,it,gets,initialized,at,start,up,and,shuts,down,when,the,application,stops,param,handlers,one,or,more,link,transport,handler,implementations,to,use;public,transport,handling,sock,js,service,task,scheduler,scheduler,transport,handler,handlers,this,scheduler,arrays,as,list,handlers
TransportHandlingSockJsService -> public TransportHandlingSockJsService(TaskScheduler scheduler, TransportHandler... handlers);1427234595;Create a TransportHandlingSockJsService with given {@link TransportHandler handler} types._@param scheduler a task scheduler for heart-beat messages and removing timed-out sessions__the provided TaskScheduler should be declared as a Spring bean to ensure it gets_initialized at start-up and shuts down when the application stops_@param handlers one or more {@link TransportHandler} implementations to use;public TransportHandlingSockJsService(TaskScheduler scheduler, TransportHandler... handlers) {_		this(scheduler, Arrays.asList(handlers))__	};create,a,transport,handling,sock,js,service,with,given,link,transport,handler,handler,types,param,scheduler,a,task,scheduler,for,heart,beat,messages,and,removing,timed,out,sessions,the,provided,task,scheduler,should,be,declared,as,a,spring,bean,to,ensure,it,gets,initialized,at,start,up,and,shuts,down,when,the,application,stops,param,handlers,one,or,more,link,transport,handler,implementations,to,use;public,transport,handling,sock,js,service,task,scheduler,scheduler,transport,handler,handlers,this,scheduler,arrays,as,list,handlers
TransportHandlingSockJsService -> public TransportHandlingSockJsService(TaskScheduler scheduler, TransportHandler... handlers);1427983931;Create a TransportHandlingSockJsService with given {@link TransportHandler handler} types._@param scheduler a task scheduler for heart-beat messages and removing timed-out sessions__the provided TaskScheduler should be declared as a Spring bean to ensure it gets_initialized at start-up and shuts down when the application stops_@param handlers one or more {@link TransportHandler} implementations to use;public TransportHandlingSockJsService(TaskScheduler scheduler, TransportHandler... handlers) {_		this(scheduler, Arrays.asList(handlers))__	};create,a,transport,handling,sock,js,service,with,given,link,transport,handler,handler,types,param,scheduler,a,task,scheduler,for,heart,beat,messages,and,removing,timed,out,sessions,the,provided,task,scheduler,should,be,declared,as,a,spring,bean,to,ensure,it,gets,initialized,at,start,up,and,shuts,down,when,the,application,stops,param,handlers,one,or,more,link,transport,handler,implementations,to,use;public,transport,handling,sock,js,service,task,scheduler,scheduler,transport,handler,handlers,this,scheduler,arrays,as,list,handlers
TransportHandlingSockJsService -> public TransportHandlingSockJsService(TaskScheduler scheduler, TransportHandler... handlers);1435026644;Create a TransportHandlingSockJsService with given {@link TransportHandler handler} types._@param scheduler a task scheduler for heart-beat messages and removing timed-out sessions__the provided TaskScheduler should be declared as a Spring bean to ensure it gets_initialized at start-up and shuts down when the application stops_@param handlers one or more {@link TransportHandler} implementations to use;public TransportHandlingSockJsService(TaskScheduler scheduler, TransportHandler... handlers) {_		this(scheduler, Arrays.asList(handlers))__	};create,a,transport,handling,sock,js,service,with,given,link,transport,handler,handler,types,param,scheduler,a,task,scheduler,for,heart,beat,messages,and,removing,timed,out,sessions,the,provided,task,scheduler,should,be,declared,as,a,spring,bean,to,ensure,it,gets,initialized,at,start,up,and,shuts,down,when,the,application,stops,param,handlers,one,or,more,link,transport,handler,implementations,to,use;public,transport,handling,sock,js,service,task,scheduler,scheduler,transport,handler,handlers,this,scheduler,arrays,as,list,handlers
TransportHandlingSockJsService -> public TransportHandlingSockJsService(TaskScheduler scheduler, TransportHandler... handlers);1444217152;Create a TransportHandlingSockJsService with given {@link TransportHandler handler} types._@param scheduler a task scheduler for heart-beat messages and removing timed-out sessions__the provided TaskScheduler should be declared as a Spring bean to ensure it gets_initialized at start-up and shuts down when the application stops_@param handlers one or more {@link TransportHandler} implementations to use;public TransportHandlingSockJsService(TaskScheduler scheduler, TransportHandler... handlers) {_		this(scheduler, Arrays.asList(handlers))__	};create,a,transport,handling,sock,js,service,with,given,link,transport,handler,handler,types,param,scheduler,a,task,scheduler,for,heart,beat,messages,and,removing,timed,out,sessions,the,provided,task,scheduler,should,be,declared,as,a,spring,bean,to,ensure,it,gets,initialized,at,start,up,and,shuts,down,when,the,application,stops,param,handlers,one,or,more,link,transport,handler,implementations,to,use;public,transport,handling,sock,js,service,task,scheduler,scheduler,transport,handler,handlers,this,scheduler,arrays,as,list,handlers
TransportHandlingSockJsService -> public TransportHandlingSockJsService(TaskScheduler scheduler, TransportHandler... handlers);1449242513;Create a TransportHandlingSockJsService with given {@link TransportHandler handler} types._@param scheduler a task scheduler for heart-beat messages and removing timed-out sessions__the provided TaskScheduler should be declared as a Spring bean to ensure it gets_initialized at start-up and shuts down when the application stops_@param handlers one or more {@link TransportHandler} implementations to use;public TransportHandlingSockJsService(TaskScheduler scheduler, TransportHandler... handlers) {_		this(scheduler, Arrays.asList(handlers))__	};create,a,transport,handling,sock,js,service,with,given,link,transport,handler,handler,types,param,scheduler,a,task,scheduler,for,heart,beat,messages,and,removing,timed,out,sessions,the,provided,task,scheduler,should,be,declared,as,a,spring,bean,to,ensure,it,gets,initialized,at,start,up,and,shuts,down,when,the,application,stops,param,handlers,one,or,more,link,transport,handler,implementations,to,use;public,transport,handling,sock,js,service,task,scheduler,scheduler,transport,handler,handlers,this,scheduler,arrays,as,list,handlers
TransportHandlingSockJsService -> public TransportHandlingSockJsService(TaskScheduler scheduler, TransportHandler... handlers);1449660404;Create a TransportHandlingSockJsService with given {@link TransportHandler handler} types._@param scheduler a task scheduler for heart-beat messages and removing timed-out sessions__the provided TaskScheduler should be declared as a Spring bean to ensure it gets_initialized at start-up and shuts down when the application stops_@param handlers one or more {@link TransportHandler} implementations to use;public TransportHandlingSockJsService(TaskScheduler scheduler, TransportHandler... handlers) {_		this(scheduler, Arrays.asList(handlers))__	};create,a,transport,handling,sock,js,service,with,given,link,transport,handler,handler,types,param,scheduler,a,task,scheduler,for,heart,beat,messages,and,removing,timed,out,sessions,the,provided,task,scheduler,should,be,declared,as,a,spring,bean,to,ensure,it,gets,initialized,at,start,up,and,shuts,down,when,the,application,stops,param,handlers,one,or,more,link,transport,handler,implementations,to,use;public,transport,handling,sock,js,service,task,scheduler,scheduler,transport,handler,handlers,this,scheduler,arrays,as,list,handlers
TransportHandlingSockJsService -> public TransportHandlingSockJsService(TaskScheduler scheduler, TransportHandler... handlers);1459792887;Create a TransportHandlingSockJsService with given {@link TransportHandler handler} types._@param scheduler a task scheduler for heart-beat messages and removing timed-out sessions__the provided TaskScheduler should be declared as a Spring bean to ensure it gets_initialized at start-up and shuts down when the application stops_@param handlers one or more {@link TransportHandler} implementations to use;public TransportHandlingSockJsService(TaskScheduler scheduler, TransportHandler... handlers) {_		this(scheduler, Arrays.asList(handlers))__	};create,a,transport,handling,sock,js,service,with,given,link,transport,handler,handler,types,param,scheduler,a,task,scheduler,for,heart,beat,messages,and,removing,timed,out,sessions,the,provided,task,scheduler,should,be,declared,as,a,spring,bean,to,ensure,it,gets,initialized,at,start,up,and,shuts,down,when,the,application,stops,param,handlers,one,or,more,link,transport,handler,implementations,to,use;public,transport,handling,sock,js,service,task,scheduler,scheduler,transport,handler,handlers,this,scheduler,arrays,as,list,handlers
TransportHandlingSockJsService -> public TransportHandlingSockJsService(TaskScheduler scheduler, TransportHandler... handlers);1459795890;Create a TransportHandlingSockJsService with given {@link TransportHandler handler} types._@param scheduler a task scheduler for heart-beat messages and removing timed-out sessions__the provided TaskScheduler should be declared as a Spring bean to ensure it gets_initialized at start-up and shuts down when the application stops_@param handlers one or more {@link TransportHandler} implementations to use;public TransportHandlingSockJsService(TaskScheduler scheduler, TransportHandler... handlers) {_		this(scheduler, Arrays.asList(handlers))__	};create,a,transport,handling,sock,js,service,with,given,link,transport,handler,handler,types,param,scheduler,a,task,scheduler,for,heart,beat,messages,and,removing,timed,out,sessions,the,provided,task,scheduler,should,be,declared,as,a,spring,bean,to,ensure,it,gets,initialized,at,start,up,and,shuts,down,when,the,application,stops,param,handlers,one,or,more,link,transport,handler,implementations,to,use;public,transport,handling,sock,js,service,task,scheduler,scheduler,transport,handler,handlers,this,scheduler,arrays,as,list,handlers
TransportHandlingSockJsService -> public TransportHandlingSockJsService(TaskScheduler scheduler, TransportHandler... handlers);1467730834;Create a TransportHandlingSockJsService with given {@link TransportHandler handler} types._@param scheduler a task scheduler for heart-beat messages and removing timed-out sessions__the provided TaskScheduler should be declared as a Spring bean to ensure it gets_initialized at start-up and shuts down when the application stops_@param handlers one or more {@link TransportHandler} implementations to use;public TransportHandlingSockJsService(TaskScheduler scheduler, TransportHandler... handlers) {_		this(scheduler, Arrays.asList(handlers))__	};create,a,transport,handling,sock,js,service,with,given,link,transport,handler,handler,types,param,scheduler,a,task,scheduler,for,heart,beat,messages,and,removing,timed,out,sessions,the,provided,task,scheduler,should,be,declared,as,a,spring,bean,to,ensure,it,gets,initialized,at,start,up,and,shuts,down,when,the,application,stops,param,handlers,one,or,more,link,transport,handler,implementations,to,use;public,transport,handling,sock,js,service,task,scheduler,scheduler,transport,handler,handlers,this,scheduler,arrays,as,list,handlers
TransportHandlingSockJsService -> public TransportHandlingSockJsService(TaskScheduler scheduler, TransportHandler... handlers);1478158530;Create a TransportHandlingSockJsService with given {@link TransportHandler handler} types._@param scheduler a task scheduler for heart-beat messages and removing timed-out sessions__the provided TaskScheduler should be declared as a Spring bean to ensure it gets_initialized at start-up and shuts down when the application stops_@param handlers one or more {@link TransportHandler} implementations to use;public TransportHandlingSockJsService(TaskScheduler scheduler, TransportHandler... handlers) {_		this(scheduler, Arrays.asList(handlers))__	};create,a,transport,handling,sock,js,service,with,given,link,transport,handler,handler,types,param,scheduler,a,task,scheduler,for,heart,beat,messages,and,removing,timed,out,sessions,the,provided,task,scheduler,should,be,declared,as,a,spring,bean,to,ensure,it,gets,initialized,at,start,up,and,shuts,down,when,the,application,stops,param,handlers,one,or,more,link,transport,handler,implementations,to,use;public,transport,handling,sock,js,service,task,scheduler,scheduler,transport,handler,handlers,this,scheduler,arrays,as,list,handlers
TransportHandlingSockJsService -> public TransportHandlingSockJsService(TaskScheduler scheduler, TransportHandler... handlers);1496837955;Create a TransportHandlingSockJsService with given {@link TransportHandler handler} types._@param scheduler a task scheduler for heart-beat messages and removing timed-out sessions__the provided TaskScheduler should be declared as a Spring bean to ensure it gets_initialized at start-up and shuts down when the application stops_@param handlers one or more {@link TransportHandler} implementations to use;public TransportHandlingSockJsService(TaskScheduler scheduler, TransportHandler... handlers) {_		this(scheduler, Arrays.asList(handlers))__	};create,a,transport,handling,sock,js,service,with,given,link,transport,handler,handler,types,param,scheduler,a,task,scheduler,for,heart,beat,messages,and,removing,timed,out,sessions,the,provided,task,scheduler,should,be,declared,as,a,spring,bean,to,ensure,it,gets,initialized,at,start,up,and,shuts,down,when,the,application,stops,param,handlers,one,or,more,link,transport,handler,implementations,to,use;public,transport,handling,sock,js,service,task,scheduler,scheduler,transport,handler,handlers,this,scheduler,arrays,as,list,handlers
TransportHandlingSockJsService -> public TransportHandlingSockJsService(TaskScheduler scheduler, TransportHandler... handlers);1497341397;Create a TransportHandlingSockJsService with given {@link TransportHandler handler} types._@param scheduler a task scheduler for heart-beat messages and removing timed-out sessions__the provided TaskScheduler should be declared as a Spring bean to ensure it gets_initialized at start-up and shuts down when the application stops_@param handlers one or more {@link TransportHandler} implementations to use;public TransportHandlingSockJsService(TaskScheduler scheduler, TransportHandler... handlers) {_		this(scheduler, Arrays.asList(handlers))__	};create,a,transport,handling,sock,js,service,with,given,link,transport,handler,handler,types,param,scheduler,a,task,scheduler,for,heart,beat,messages,and,removing,timed,out,sessions,the,provided,task,scheduler,should,be,declared,as,a,spring,bean,to,ensure,it,gets,initialized,at,start,up,and,shuts,down,when,the,application,stops,param,handlers,one,or,more,link,transport,handler,implementations,to,use;public,transport,handling,sock,js,service,task,scheduler,scheduler,transport,handler,handlers,this,scheduler,arrays,as,list,handlers
TransportHandlingSockJsService -> public TransportHandlingSockJsService(TaskScheduler scheduler, TransportHandler... handlers);1498780456;Create a TransportHandlingSockJsService with given {@link TransportHandler handler} types._@param scheduler a task scheduler for heart-beat messages and removing timed-out sessions__the provided TaskScheduler should be declared as a Spring bean to ensure it gets_initialized at start-up and shuts down when the application stops_@param handlers one or more {@link TransportHandler} implementations to use;public TransportHandlingSockJsService(TaskScheduler scheduler, TransportHandler... handlers) {_		this(scheduler, Arrays.asList(handlers))__	};create,a,transport,handling,sock,js,service,with,given,link,transport,handler,handler,types,param,scheduler,a,task,scheduler,for,heart,beat,messages,and,removing,timed,out,sessions,the,provided,task,scheduler,should,be,declared,as,a,spring,bean,to,ensure,it,gets,initialized,at,start,up,and,shuts,down,when,the,application,stops,param,handlers,one,or,more,link,transport,handler,implementations,to,use;public,transport,handling,sock,js,service,task,scheduler,scheduler,transport,handler,handlers,this,scheduler,arrays,as,list,handlers
TransportHandlingSockJsService -> public TransportHandlingSockJsService(TaskScheduler scheduler, TransportHandler... handlers);1518260973;Create a TransportHandlingSockJsService with given {@link TransportHandler handler} types._@param scheduler a task scheduler for heart-beat messages and removing timed-out sessions__the provided TaskScheduler should be declared as a Spring bean to ensure it gets_initialized at start-up and shuts down when the application stops_@param handlers one or more {@link TransportHandler} implementations to use;public TransportHandlingSockJsService(TaskScheduler scheduler, TransportHandler... handlers) {_		this(scheduler, Arrays.asList(handlers))__	};create,a,transport,handling,sock,js,service,with,given,link,transport,handler,handler,types,param,scheduler,a,task,scheduler,for,heart,beat,messages,and,removing,timed,out,sessions,the,provided,task,scheduler,should,be,declared,as,a,spring,bean,to,ensure,it,gets,initialized,at,start,up,and,shuts,down,when,the,application,stops,param,handlers,one,or,more,link,transport,handler,implementations,to,use;public,transport,handling,sock,js,service,task,scheduler,scheduler,transport,handler,handlers,this,scheduler,arrays,as,list,handlers
TransportHandlingSockJsService -> public TransportHandlingSockJsService(TaskScheduler scheduler, TransportHandler... handlers);1518987682;Create a TransportHandlingSockJsService with given {@link TransportHandler handler} types._@param scheduler a task scheduler for heart-beat messages and removing timed-out sessions__the provided TaskScheduler should be declared as a Spring bean to ensure it gets_initialized at start-up and shuts down when the application stops_@param handlers one or more {@link TransportHandler} implementations to use;public TransportHandlingSockJsService(TaskScheduler scheduler, TransportHandler... handlers) {_		this(scheduler, Arrays.asList(handlers))__	};create,a,transport,handling,sock,js,service,with,given,link,transport,handler,handler,types,param,scheduler,a,task,scheduler,for,heart,beat,messages,and,removing,timed,out,sessions,the,provided,task,scheduler,should,be,declared,as,a,spring,bean,to,ensure,it,gets,initialized,at,start,up,and,shuts,down,when,the,application,stops,param,handlers,one,or,more,link,transport,handler,implementations,to,use;public,transport,handling,sock,js,service,task,scheduler,scheduler,transport,handler,handlers,this,scheduler,arrays,as,list,handlers
TransportHandlingSockJsService -> public TransportHandlingSockJsService(TaskScheduler scheduler, TransportHandler... handlers);1520529117;Create a TransportHandlingSockJsService with given {@link TransportHandler handler} types._@param scheduler a task scheduler for heart-beat messages and removing timed-out sessions__the provided TaskScheduler should be declared as a Spring bean to ensure it gets_initialized at start-up and shuts down when the application stops_@param handlers one or more {@link TransportHandler} implementations to use;public TransportHandlingSockJsService(TaskScheduler scheduler, TransportHandler... handlers) {_		this(scheduler, Arrays.asList(handlers))__	};create,a,transport,handling,sock,js,service,with,given,link,transport,handler,handler,types,param,scheduler,a,task,scheduler,for,heart,beat,messages,and,removing,timed,out,sessions,the,provided,task,scheduler,should,be,declared,as,a,spring,bean,to,ensure,it,gets,initialized,at,start,up,and,shuts,down,when,the,application,stops,param,handlers,one,or,more,link,transport,handler,implementations,to,use;public,transport,handling,sock,js,service,task,scheduler,scheduler,transport,handler,handlers,this,scheduler,arrays,as,list,handlers
TransportHandlingSockJsService -> public TransportHandlingSockJsService(TaskScheduler scheduler, TransportHandler... handlers);1521123475;Create a TransportHandlingSockJsService with given {@link TransportHandler handler} types._@param scheduler a task scheduler for heart-beat messages and removing timed-out sessions__the provided TaskScheduler should be declared as a Spring bean to ensure it gets_initialized at start-up and shuts down when the application stops_@param handlers one or more {@link TransportHandler} implementations to use;public TransportHandlingSockJsService(TaskScheduler scheduler, TransportHandler... handlers) {_		this(scheduler, Arrays.asList(handlers))__	};create,a,transport,handling,sock,js,service,with,given,link,transport,handler,handler,types,param,scheduler,a,task,scheduler,for,heart,beat,messages,and,removing,timed,out,sessions,the,provided,task,scheduler,should,be,declared,as,a,spring,bean,to,ensure,it,gets,initialized,at,start,up,and,shuts,down,when,the,application,stops,param,handlers,one,or,more,link,transport,handler,implementations,to,use;public,transport,handling,sock,js,service,task,scheduler,scheduler,transport,handler,handlers,this,scheduler,arrays,as,list,handlers
TransportHandlingSockJsService -> public TransportHandlingSockJsService(TaskScheduler scheduler, TransportHandler... handlers);1530174524;Create a TransportHandlingSockJsService with given {@link TransportHandler handler} types._@param scheduler a task scheduler for heart-beat messages and removing timed-out sessions__the provided TaskScheduler should be declared as a Spring bean to ensure it gets_initialized at start-up and shuts down when the application stops_@param handlers one or more {@link TransportHandler} implementations to use;public TransportHandlingSockJsService(TaskScheduler scheduler, TransportHandler... handlers) {_		this(scheduler, Arrays.asList(handlers))__	};create,a,transport,handling,sock,js,service,with,given,link,transport,handler,handler,types,param,scheduler,a,task,scheduler,for,heart,beat,messages,and,removing,timed,out,sessions,the,provided,task,scheduler,should,be,declared,as,a,spring,bean,to,ensure,it,gets,initialized,at,start,up,and,shuts,down,when,the,application,stops,param,handlers,one,or,more,link,transport,handler,implementations,to,use;public,transport,handling,sock,js,service,task,scheduler,scheduler,transport,handler,handlers,this,scheduler,arrays,as,list,handlers
TransportHandlingSockJsService -> public TransportHandlingSockJsService(TaskScheduler scheduler, TransportHandler... handlers);1530174524;Create a TransportHandlingSockJsService with given {@link TransportHandler handler} types._@param scheduler a task scheduler for heart-beat messages and removing timed-out sessions__the provided TaskScheduler should be declared as a Spring bean to ensure it gets_initialized at start-up and shuts down when the application stops_@param handlers one or more {@link TransportHandler} implementations to use;public TransportHandlingSockJsService(TaskScheduler scheduler, TransportHandler... handlers) {_		this(scheduler, Arrays.asList(handlers))__	};create,a,transport,handling,sock,js,service,with,given,link,transport,handler,handler,types,param,scheduler,a,task,scheduler,for,heart,beat,messages,and,removing,timed,out,sessions,the,provided,task,scheduler,should,be,declared,as,a,spring,bean,to,ensure,it,gets,initialized,at,start,up,and,shuts,down,when,the,application,stops,param,handlers,one,or,more,link,transport,handler,implementations,to,use;public,transport,handling,sock,js,service,task,scheduler,scheduler,transport,handler,handlers,this,scheduler,arrays,as,list,handlers
TransportHandlingSockJsService -> public TransportHandlingSockJsService(TaskScheduler scheduler, TransportHandler... handlers);1534438291;Create a TransportHandlingSockJsService with given {@link TransportHandler handler} types._@param scheduler a task scheduler for heart-beat messages and removing timed-out sessions__the provided TaskScheduler should be declared as a Spring bean to ensure it gets_initialized at start-up and shuts down when the application stops_@param handlers one or more {@link TransportHandler} implementations to use;public TransportHandlingSockJsService(TaskScheduler scheduler, TransportHandler... handlers) {_		this(scheduler, Arrays.asList(handlers))__	};create,a,transport,handling,sock,js,service,with,given,link,transport,handler,handler,types,param,scheduler,a,task,scheduler,for,heart,beat,messages,and,removing,timed,out,sessions,the,provided,task,scheduler,should,be,declared,as,a,spring,bean,to,ensure,it,gets,initialized,at,start,up,and,shuts,down,when,the,application,stops,param,handlers,one,or,more,link,transport,handler,implementations,to,use;public,transport,handling,sock,js,service,task,scheduler,scheduler,transport,handler,handlers,this,scheduler,arrays,as,list,handlers
TransportHandlingSockJsService -> public TransportHandlingSockJsService(TaskScheduler scheduler, TransportHandler... handlers);1534608905;Create a TransportHandlingSockJsService with given {@link TransportHandler handler} types._@param scheduler a task scheduler for heart-beat messages and removing timed-out sessions__the provided TaskScheduler should be declared as a Spring bean to ensure it gets_initialized at start-up and shuts down when the application stops_@param handlers one or more {@link TransportHandler} implementations to use;public TransportHandlingSockJsService(TaskScheduler scheduler, TransportHandler... handlers) {_		this(scheduler, Arrays.asList(handlers))__	};create,a,transport,handling,sock,js,service,with,given,link,transport,handler,handler,types,param,scheduler,a,task,scheduler,for,heart,beat,messages,and,removing,timed,out,sessions,the,provided,task,scheduler,should,be,declared,as,a,spring,bean,to,ensure,it,gets,initialized,at,start,up,and,shuts,down,when,the,application,stops,param,handlers,one,or,more,link,transport,handler,implementations,to,use;public,transport,handling,sock,js,service,task,scheduler,scheduler,transport,handler,handlers,this,scheduler,arrays,as,list,handlers
TransportHandlingSockJsService -> public Map<TransportType, TransportHandler> getTransportHandlers();1386462352;Return the registered handlers per transport type.;public Map<TransportType, TransportHandler> getTransportHandlers() {_		return Collections.unmodifiableMap(this.handlers)__	};return,the,registered,handlers,per,transport,type;public,map,transport,type,transport,handler,get,transport,handlers,return,collections,unmodifiable,map,this,handlers
TransportHandlingSockJsService -> public Map<TransportType, TransportHandler> getTransportHandlers();1395246308;Return the registered handlers per transport type.;public Map<TransportType, TransportHandler> getTransportHandlers() {_		return Collections.unmodifiableMap(this.handlers)__	};return,the,registered,handlers,per,transport,type;public,map,transport,type,transport,handler,get,transport,handlers,return,collections,unmodifiable,map,this,handlers
TransportHandlingSockJsService -> public Map<TransportType, TransportHandler> getTransportHandlers();1395543588;Return the registered handlers per transport type.;public Map<TransportType, TransportHandler> getTransportHandlers() {_		return Collections.unmodifiableMap(this.handlers)__	};return,the,registered,handlers,per,transport,type;public,map,transport,type,transport,handler,get,transport,handlers,return,collections,unmodifiable,map,this,handlers
TransportHandlingSockJsService -> public Map<TransportType, TransportHandler> getTransportHandlers();1403719829;Return the registered handlers per transport type.;public Map<TransportType, TransportHandler> getTransportHandlers() {_		return Collections.unmodifiableMap(this.handlers)__	};return,the,registered,handlers,per,transport,type;public,map,transport,type,transport,handler,get,transport,handlers,return,collections,unmodifiable,map,this,handlers
TransportHandlingSockJsService -> public Map<TransportType, TransportHandler> getTransportHandlers();1403856366;Return the registered handlers per transport type.;public Map<TransportType, TransportHandler> getTransportHandlers() {_		return Collections.unmodifiableMap(this.handlers)__	};return,the,registered,handlers,per,transport,type;public,map,transport,type,transport,handler,get,transport,handlers,return,collections,unmodifiable,map,this,handlers
TransportHandlingSockJsService -> public Map<TransportType, TransportHandler> getTransportHandlers();1404880799;Return the registered handlers per transport type.;public Map<TransportType, TransportHandler> getTransportHandlers() {_		return Collections.unmodifiableMap(this.handlers)__	};return,the,registered,handlers,per,transport,type;public,map,transport,type,transport,handler,get,transport,handlers,return,collections,unmodifiable,map,this,handlers
TransportHandlingSockJsService -> public Map<TransportType, TransportHandler> getTransportHandlers();1407154420;Return the registered handlers per transport type.;public Map<TransportType, TransportHandler> getTransportHandlers() {_		return Collections.unmodifiableMap(this.handlers)__	};return,the,registered,handlers,per,transport,type;public,map,transport,type,transport,handler,get,transport,handlers,return,collections,unmodifiable,map,this,handlers
TransportHandlingSockJsService -> public Map<TransportType, TransportHandler> getTransportHandlers();1411567635;Return the registered handlers per transport type.;public Map<TransportType, TransportHandler> getTransportHandlers() {_		return Collections.unmodifiableMap(this.handlers)__	};return,the,registered,handlers,per,transport,type;public,map,transport,type,transport,handler,get,transport,handlers,return,collections,unmodifiable,map,this,handlers
TransportHandlingSockJsService -> public Map<TransportType, TransportHandler> getTransportHandlers();1413848647;Return the registered handlers per transport type.;public Map<TransportType, TransportHandler> getTransportHandlers() {_		return Collections.unmodifiableMap(this.handlers)__	};return,the,registered,handlers,per,transport,type;public,map,transport,type,transport,handler,get,transport,handlers,return,collections,unmodifiable,map,this,handlers
TransportHandlingSockJsService -> public Map<TransportType, TransportHandler> getTransportHandlers();1414354684;Return the registered handlers per transport type.;public Map<TransportType, TransportHandler> getTransportHandlers() {_		return Collections.unmodifiableMap(this.handlers)__	};return,the,registered,handlers,per,transport,type;public,map,transport,type,transport,handler,get,transport,handlers,return,collections,unmodifiable,map,this,handlers
TransportHandlingSockJsService -> public Map<TransportType, TransportHandler> getTransportHandlers();1414412881;Return the registered handlers per transport type.;public Map<TransportType, TransportHandler> getTransportHandlers() {_		return Collections.unmodifiableMap(this.handlers)__	};return,the,registered,handlers,per,transport,type;public,map,transport,type,transport,handler,get,transport,handlers,return,collections,unmodifiable,map,this,handlers
TransportHandlingSockJsService -> public Map<TransportType, TransportHandler> getTransportHandlers();1414415063;Return the registered handlers per transport type.;public Map<TransportType, TransportHandler> getTransportHandlers() {_		return Collections.unmodifiableMap(this.handlers)__	};return,the,registered,handlers,per,transport,type;public,map,transport,type,transport,handler,get,transport,handlers,return,collections,unmodifiable,map,this,handlers
TransportHandlingSockJsService -> public Map<TransportType, TransportHandler> getTransportHandlers();1414619099;Return the registered handlers per transport type.;public Map<TransportType, TransportHandler> getTransportHandlers() {_		return Collections.unmodifiableMap(this.handlers)__	};return,the,registered,handlers,per,transport,type;public,map,transport,type,transport,handler,get,transport,handlers,return,collections,unmodifiable,map,this,handlers
TransportHandlingSockJsService -> public Map<TransportType, TransportHandler> getTransportHandlers();1417540415;Return the registered handlers per transport type.;public Map<TransportType, TransportHandler> getTransportHandlers() {_		return Collections.unmodifiableMap(this.handlers)__	};return,the,registered,handlers,per,transport,type;public,map,transport,type,transport,handler,get,transport,handlers,return,collections,unmodifiable,map,this,handlers
TransportHandlingSockJsService -> public Map<TransportType, TransportHandler> getTransportHandlers();1424361139;Return the registered handlers per transport type.;public Map<TransportType, TransportHandler> getTransportHandlers() {_		return Collections.unmodifiableMap(this.handlers)__	};return,the,registered,handlers,per,transport,type;public,map,transport,type,transport,handler,get,transport,handlers,return,collections,unmodifiable,map,this,handlers
TransportHandlingSockJsService -> public Map<TransportType, TransportHandler> getTransportHandlers();1427234595;Return the registered handlers per transport type.;public Map<TransportType, TransportHandler> getTransportHandlers() {_		return Collections.unmodifiableMap(this.handlers)__	};return,the,registered,handlers,per,transport,type;public,map,transport,type,transport,handler,get,transport,handlers,return,collections,unmodifiable,map,this,handlers
TransportHandlingSockJsService -> public Map<TransportType, TransportHandler> getTransportHandlers();1427983931;Return the registered handlers per transport type.;public Map<TransportType, TransportHandler> getTransportHandlers() {_		return Collections.unmodifiableMap(this.handlers)__	};return,the,registered,handlers,per,transport,type;public,map,transport,type,transport,handler,get,transport,handlers,return,collections,unmodifiable,map,this,handlers
TransportHandlingSockJsService -> public Map<TransportType, TransportHandler> getTransportHandlers();1435026644;Return the registered handlers per transport type.;public Map<TransportType, TransportHandler> getTransportHandlers() {_		return Collections.unmodifiableMap(this.handlers)__	};return,the,registered,handlers,per,transport,type;public,map,transport,type,transport,handler,get,transport,handlers,return,collections,unmodifiable,map,this,handlers
TransportHandlingSockJsService -> public Map<TransportType, TransportHandler> getTransportHandlers();1444217152;Return the registered handlers per transport type.;public Map<TransportType, TransportHandler> getTransportHandlers() {_		return Collections.unmodifiableMap(this.handlers)__	};return,the,registered,handlers,per,transport,type;public,map,transport,type,transport,handler,get,transport,handlers,return,collections,unmodifiable,map,this,handlers
TransportHandlingSockJsService -> public Map<TransportType, TransportHandler> getTransportHandlers();1449242513;Return the registered handlers per transport type.;public Map<TransportType, TransportHandler> getTransportHandlers() {_		return Collections.unmodifiableMap(this.handlers)__	};return,the,registered,handlers,per,transport,type;public,map,transport,type,transport,handler,get,transport,handlers,return,collections,unmodifiable,map,this,handlers
TransportHandlingSockJsService -> public Map<TransportType, TransportHandler> getTransportHandlers();1449660404;Return the registered handlers per transport type.;public Map<TransportType, TransportHandler> getTransportHandlers() {_		return Collections.unmodifiableMap(this.handlers)__	};return,the,registered,handlers,per,transport,type;public,map,transport,type,transport,handler,get,transport,handlers,return,collections,unmodifiable,map,this,handlers
TransportHandlingSockJsService -> public Map<TransportType, TransportHandler> getTransportHandlers();1459792887;Return the registered handlers per transport type.;public Map<TransportType, TransportHandler> getTransportHandlers() {_		return Collections.unmodifiableMap(this.handlers)__	};return,the,registered,handlers,per,transport,type;public,map,transport,type,transport,handler,get,transport,handlers,return,collections,unmodifiable,map,this,handlers
TransportHandlingSockJsService -> public Map<TransportType, TransportHandler> getTransportHandlers();1459795890;Return the registered handlers per transport type.;public Map<TransportType, TransportHandler> getTransportHandlers() {_		return Collections.unmodifiableMap(this.handlers)__	};return,the,registered,handlers,per,transport,type;public,map,transport,type,transport,handler,get,transport,handlers,return,collections,unmodifiable,map,this,handlers
TransportHandlingSockJsService -> public Map<TransportType, TransportHandler> getTransportHandlers();1467730834;Return the registered handlers per transport type.;public Map<TransportType, TransportHandler> getTransportHandlers() {_		return Collections.unmodifiableMap(this.handlers)__	};return,the,registered,handlers,per,transport,type;public,map,transport,type,transport,handler,get,transport,handlers,return,collections,unmodifiable,map,this,handlers
TransportHandlingSockJsService -> public Map<TransportType, TransportHandler> getTransportHandlers();1478158530;Return the registered handlers per transport type.;public Map<TransportType, TransportHandler> getTransportHandlers() {_		return Collections.unmodifiableMap(this.handlers)__	};return,the,registered,handlers,per,transport,type;public,map,transport,type,transport,handler,get,transport,handlers,return,collections,unmodifiable,map,this,handlers
TransportHandlingSockJsService -> public Map<TransportType, TransportHandler> getTransportHandlers();1496837955;Return the registered handlers per transport type.;public Map<TransportType, TransportHandler> getTransportHandlers() {_		return Collections.unmodifiableMap(this.handlers)__	};return,the,registered,handlers,per,transport,type;public,map,transport,type,transport,handler,get,transport,handlers,return,collections,unmodifiable,map,this,handlers
TransportHandlingSockJsService -> public Map<TransportType, TransportHandler> getTransportHandlers();1497341397;Return the registered handlers per transport type.;public Map<TransportType, TransportHandler> getTransportHandlers() {_		return Collections.unmodifiableMap(this.handlers)__	};return,the,registered,handlers,per,transport,type;public,map,transport,type,transport,handler,get,transport,handlers,return,collections,unmodifiable,map,this,handlers
TransportHandlingSockJsService -> public Map<TransportType, TransportHandler> getTransportHandlers();1498780456;Return the registered handlers per transport type.;public Map<TransportType, TransportHandler> getTransportHandlers() {_		return Collections.unmodifiableMap(this.handlers)__	};return,the,registered,handlers,per,transport,type;public,map,transport,type,transport,handler,get,transport,handlers,return,collections,unmodifiable,map,this,handlers
TransportHandlingSockJsService -> public Map<TransportType, TransportHandler> getTransportHandlers();1518260973;Return the registered handlers per transport type.;public Map<TransportType, TransportHandler> getTransportHandlers() {_		return Collections.unmodifiableMap(this.handlers)__	};return,the,registered,handlers,per,transport,type;public,map,transport,type,transport,handler,get,transport,handlers,return,collections,unmodifiable,map,this,handlers
TransportHandlingSockJsService -> public Map<TransportType, TransportHandler> getTransportHandlers();1518987682;Return the registered handlers per transport type.;public Map<TransportType, TransportHandler> getTransportHandlers() {_		return Collections.unmodifiableMap(this.handlers)__	};return,the,registered,handlers,per,transport,type;public,map,transport,type,transport,handler,get,transport,handlers,return,collections,unmodifiable,map,this,handlers
TransportHandlingSockJsService -> public Map<TransportType, TransportHandler> getTransportHandlers();1520529117;Return the registered handlers per transport type.;public Map<TransportType, TransportHandler> getTransportHandlers() {_		return Collections.unmodifiableMap(this.handlers)__	};return,the,registered,handlers,per,transport,type;public,map,transport,type,transport,handler,get,transport,handlers,return,collections,unmodifiable,map,this,handlers
TransportHandlingSockJsService -> public Map<TransportType, TransportHandler> getTransportHandlers();1521123475;Return the registered handlers per transport type.;public Map<TransportType, TransportHandler> getTransportHandlers() {_		return Collections.unmodifiableMap(this.handlers)__	};return,the,registered,handlers,per,transport,type;public,map,transport,type,transport,handler,get,transport,handlers,return,collections,unmodifiable,map,this,handlers
TransportHandlingSockJsService -> public Map<TransportType, TransportHandler> getTransportHandlers();1530174524;Return the registered handlers per transport type.;public Map<TransportType, TransportHandler> getTransportHandlers() {_		return Collections.unmodifiableMap(this.handlers)__	};return,the,registered,handlers,per,transport,type;public,map,transport,type,transport,handler,get,transport,handlers,return,collections,unmodifiable,map,this,handlers
TransportHandlingSockJsService -> public Map<TransportType, TransportHandler> getTransportHandlers();1530174524;Return the registered handlers per transport type.;public Map<TransportType, TransportHandler> getTransportHandlers() {_		return Collections.unmodifiableMap(this.handlers)__	};return,the,registered,handlers,per,transport,type;public,map,transport,type,transport,handler,get,transport,handlers,return,collections,unmodifiable,map,this,handlers
TransportHandlingSockJsService -> public Map<TransportType, TransportHandler> getTransportHandlers();1534438291;Return the registered handlers per transport type.;public Map<TransportType, TransportHandler> getTransportHandlers() {_		return Collections.unmodifiableMap(this.handlers)__	};return,the,registered,handlers,per,transport,type;public,map,transport,type,transport,handler,get,transport,handlers,return,collections,unmodifiable,map,this,handlers
TransportHandlingSockJsService -> public Map<TransportType, TransportHandler> getTransportHandlers();1534608905;Return the registered handlers per transport type.;public Map<TransportType, TransportHandler> getTransportHandlers() {_		return Collections.unmodifiableMap(this.handlers)__	};return,the,registered,handlers,per,transport,type;public,map,transport,type,transport,handler,get,transport,handlers,return,collections,unmodifiable,map,this,handlers
TransportHandlingSockJsService -> public TransportHandlingSockJsService(TaskScheduler scheduler, Collection<TransportHandler> handlers);1386462352;Create a TransportHandlingSockJsService with given {@link TransportHandler handler} types._@param scheduler a task scheduler for heart-beat messages and removing timed-out sessions__the provided TaskScheduler should be declared as a Spring bean to ensure it gets_initialized at start-up and shuts down when the application stops_@param handlers one or more {@link TransportHandler} implementations to use;public TransportHandlingSockJsService(TaskScheduler scheduler, Collection<TransportHandler> handlers) {_		super(scheduler)___		if (CollectionUtils.isEmpty(handlers)) {_			logger.warn("No transport handlers specified for TransportHandlingSockJsService")__		}_		else {_			for (TransportHandler handler : handlers) {_				handler.initialize(this)__				this.handlers.put(handler.getTransportType(), handler)__			}_		}__		if (jackson2Present) {_			this.messageCodec = new Jackson2SockJsMessageCodec()__		}_	};create,a,transport,handling,sock,js,service,with,given,link,transport,handler,handler,types,param,scheduler,a,task,scheduler,for,heart,beat,messages,and,removing,timed,out,sessions,the,provided,task,scheduler,should,be,declared,as,a,spring,bean,to,ensure,it,gets,initialized,at,start,up,and,shuts,down,when,the,application,stops,param,handlers,one,or,more,link,transport,handler,implementations,to,use;public,transport,handling,sock,js,service,task,scheduler,scheduler,collection,transport,handler,handlers,super,scheduler,if,collection,utils,is,empty,handlers,logger,warn,no,transport,handlers,specified,for,transport,handling,sock,js,service,else,for,transport,handler,handler,handlers,handler,initialize,this,this,handlers,put,handler,get,transport,type,handler,if,jackson2present,this,message,codec,new,jackson2sock,js,message,codec
TransportHandlingSockJsService -> public TransportHandlingSockJsService(TaskScheduler scheduler, Collection<TransportHandler> handlers);1395246308;Create a TransportHandlingSockJsService with given {@link TransportHandler handler} types._@param scheduler a task scheduler for heart-beat messages and removing timed-out sessions__the provided TaskScheduler should be declared as a Spring bean to ensure it gets_initialized at start-up and shuts down when the application stops_@param handlers one or more {@link TransportHandler} implementations to use;public TransportHandlingSockJsService(TaskScheduler scheduler, Collection<TransportHandler> handlers) {_		super(scheduler)___		if (CollectionUtils.isEmpty(handlers)) {_			logger.warn("No transport handlers specified for TransportHandlingSockJsService")__		}_		else {_			for (TransportHandler handler : handlers) {_				handler.initialize(this)__				this.handlers.put(handler.getTransportType(), handler)__			}_		}__		if (jackson2Present) {_			this.messageCodec = new Jackson2SockJsMessageCodec()__		}_	};create,a,transport,handling,sock,js,service,with,given,link,transport,handler,handler,types,param,scheduler,a,task,scheduler,for,heart,beat,messages,and,removing,timed,out,sessions,the,provided,task,scheduler,should,be,declared,as,a,spring,bean,to,ensure,it,gets,initialized,at,start,up,and,shuts,down,when,the,application,stops,param,handlers,one,or,more,link,transport,handler,implementations,to,use;public,transport,handling,sock,js,service,task,scheduler,scheduler,collection,transport,handler,handlers,super,scheduler,if,collection,utils,is,empty,handlers,logger,warn,no,transport,handlers,specified,for,transport,handling,sock,js,service,else,for,transport,handler,handler,handlers,handler,initialize,this,this,handlers,put,handler,get,transport,type,handler,if,jackson2present,this,message,codec,new,jackson2sock,js,message,codec
TransportHandlingSockJsService -> public TransportHandlingSockJsService(TaskScheduler scheduler, Collection<TransportHandler> handlers);1395543588;Create a TransportHandlingSockJsService with given {@link TransportHandler handler} types._@param scheduler a task scheduler for heart-beat messages and removing timed-out sessions__the provided TaskScheduler should be declared as a Spring bean to ensure it gets_initialized at start-up and shuts down when the application stops_@param handlers one or more {@link TransportHandler} implementations to use;public TransportHandlingSockJsService(TaskScheduler scheduler, Collection<TransportHandler> handlers) {_		super(scheduler)___		if (CollectionUtils.isEmpty(handlers)) {_			logger.warn("No transport handlers specified for TransportHandlingSockJsService")__		}_		else {_			for (TransportHandler handler : handlers) {_				handler.initialize(this)__				this.handlers.put(handler.getTransportType(), handler)__			}_		}__		if (jackson2Present) {_			this.messageCodec = new Jackson2SockJsMessageCodec()__		}_	};create,a,transport,handling,sock,js,service,with,given,link,transport,handler,handler,types,param,scheduler,a,task,scheduler,for,heart,beat,messages,and,removing,timed,out,sessions,the,provided,task,scheduler,should,be,declared,as,a,spring,bean,to,ensure,it,gets,initialized,at,start,up,and,shuts,down,when,the,application,stops,param,handlers,one,or,more,link,transport,handler,implementations,to,use;public,transport,handling,sock,js,service,task,scheduler,scheduler,collection,transport,handler,handlers,super,scheduler,if,collection,utils,is,empty,handlers,logger,warn,no,transport,handlers,specified,for,transport,handling,sock,js,service,else,for,transport,handler,handler,handlers,handler,initialize,this,this,handlers,put,handler,get,transport,type,handler,if,jackson2present,this,message,codec,new,jackson2sock,js,message,codec
TransportHandlingSockJsService -> public TransportHandlingSockJsService(TaskScheduler scheduler, Collection<TransportHandler> handlers);1403719829;Create a TransportHandlingSockJsService with given {@link TransportHandler handler} types._@param scheduler a task scheduler for heart-beat messages and removing timed-out sessions__the provided TaskScheduler should be declared as a Spring bean to ensure it gets_initialized at start-up and shuts down when the application stops_@param handlers one or more {@link TransportHandler} implementations to use;public TransportHandlingSockJsService(TaskScheduler scheduler, Collection<TransportHandler> handlers) {_		super(scheduler)___		if (CollectionUtils.isEmpty(handlers)) {_			logger.warn("No transport handlers specified for TransportHandlingSockJsService")__		}_		else {_			for (TransportHandler handler : handlers) {_				handler.initialize(this)__				this.handlers.put(handler.getTransportType(), handler)__			}_		}__		if (jackson2Present) {_			this.messageCodec = new Jackson2SockJsMessageCodec()__		}_	};create,a,transport,handling,sock,js,service,with,given,link,transport,handler,handler,types,param,scheduler,a,task,scheduler,for,heart,beat,messages,and,removing,timed,out,sessions,the,provided,task,scheduler,should,be,declared,as,a,spring,bean,to,ensure,it,gets,initialized,at,start,up,and,shuts,down,when,the,application,stops,param,handlers,one,or,more,link,transport,handler,implementations,to,use;public,transport,handling,sock,js,service,task,scheduler,scheduler,collection,transport,handler,handlers,super,scheduler,if,collection,utils,is,empty,handlers,logger,warn,no,transport,handlers,specified,for,transport,handling,sock,js,service,else,for,transport,handler,handler,handlers,handler,initialize,this,this,handlers,put,handler,get,transport,type,handler,if,jackson2present,this,message,codec,new,jackson2sock,js,message,codec
TransportHandlingSockJsService -> public TransportHandlingSockJsService(TaskScheduler scheduler, Collection<TransportHandler> handlers);1403856366;Create a TransportHandlingSockJsService with given {@link TransportHandler handler} types._@param scheduler a task scheduler for heart-beat messages and removing timed-out sessions__the provided TaskScheduler should be declared as a Spring bean to ensure it gets_initialized at start-up and shuts down when the application stops_@param handlers one or more {@link TransportHandler} implementations to use;public TransportHandlingSockJsService(TaskScheduler scheduler, Collection<TransportHandler> handlers) {_		super(scheduler)___		if (CollectionUtils.isEmpty(handlers)) {_			logger.warn("No transport handlers specified for TransportHandlingSockJsService")__		}_		else {_			for (TransportHandler handler : handlers) {_				handler.initialize(this)__				this.handlers.put(handler.getTransportType(), handler)__			}_		}__		if (jackson2Present) {_			this.messageCodec = new Jackson2SockJsMessageCodec()__		}_	};create,a,transport,handling,sock,js,service,with,given,link,transport,handler,handler,types,param,scheduler,a,task,scheduler,for,heart,beat,messages,and,removing,timed,out,sessions,the,provided,task,scheduler,should,be,declared,as,a,spring,bean,to,ensure,it,gets,initialized,at,start,up,and,shuts,down,when,the,application,stops,param,handlers,one,or,more,link,transport,handler,implementations,to,use;public,transport,handling,sock,js,service,task,scheduler,scheduler,collection,transport,handler,handlers,super,scheduler,if,collection,utils,is,empty,handlers,logger,warn,no,transport,handlers,specified,for,transport,handling,sock,js,service,else,for,transport,handler,handler,handlers,handler,initialize,this,this,handlers,put,handler,get,transport,type,handler,if,jackson2present,this,message,codec,new,jackson2sock,js,message,codec
TransportHandlingSockJsService -> public TransportHandlingSockJsService(TaskScheduler scheduler, Collection<TransportHandler> handlers);1404880799;Create a TransportHandlingSockJsService with given {@link TransportHandler handler} types._@param scheduler a task scheduler for heart-beat messages and removing timed-out sessions__the provided TaskScheduler should be declared as a Spring bean to ensure it gets_initialized at start-up and shuts down when the application stops_@param handlers one or more {@link TransportHandler} implementations to use;public TransportHandlingSockJsService(TaskScheduler scheduler, Collection<TransportHandler> handlers) {_		super(scheduler)___		if (CollectionUtils.isEmpty(handlers)) {_			logger.warn("No transport handlers specified for TransportHandlingSockJsService")__		}_		else {_			for (TransportHandler handler : handlers) {_				handler.initialize(this)__				this.handlers.put(handler.getTransportType(), handler)__			}_		}__		if (jackson2Present) {_			this.messageCodec = new Jackson2SockJsMessageCodec()__		}_	};create,a,transport,handling,sock,js,service,with,given,link,transport,handler,handler,types,param,scheduler,a,task,scheduler,for,heart,beat,messages,and,removing,timed,out,sessions,the,provided,task,scheduler,should,be,declared,as,a,spring,bean,to,ensure,it,gets,initialized,at,start,up,and,shuts,down,when,the,application,stops,param,handlers,one,or,more,link,transport,handler,implementations,to,use;public,transport,handling,sock,js,service,task,scheduler,scheduler,collection,transport,handler,handlers,super,scheduler,if,collection,utils,is,empty,handlers,logger,warn,no,transport,handlers,specified,for,transport,handling,sock,js,service,else,for,transport,handler,handler,handlers,handler,initialize,this,this,handlers,put,handler,get,transport,type,handler,if,jackson2present,this,message,codec,new,jackson2sock,js,message,codec
TransportHandlingSockJsService -> public TransportHandlingSockJsService(TaskScheduler scheduler, Collection<TransportHandler> handlers);1407154420;Create a TransportHandlingSockJsService with given {@link TransportHandler handler} types._@param scheduler a task scheduler for heart-beat messages and removing timed-out sessions__the provided TaskScheduler should be declared as a Spring bean to ensure it gets_initialized at start-up and shuts down when the application stops_@param handlers one or more {@link TransportHandler} implementations to use;public TransportHandlingSockJsService(TaskScheduler scheduler, Collection<TransportHandler> handlers) {_		super(scheduler)___		if (CollectionUtils.isEmpty(handlers)) {_			logger.warn("No transport handlers specified for TransportHandlingSockJsService")__		}_		else {_			for (TransportHandler handler : handlers) {_				handler.initialize(this)__				this.handlers.put(handler.getTransportType(), handler)__			}_		}__		if (jackson2Present) {_			this.messageCodec = new Jackson2SockJsMessageCodec()__		}_	};create,a,transport,handling,sock,js,service,with,given,link,transport,handler,handler,types,param,scheduler,a,task,scheduler,for,heart,beat,messages,and,removing,timed,out,sessions,the,provided,task,scheduler,should,be,declared,as,a,spring,bean,to,ensure,it,gets,initialized,at,start,up,and,shuts,down,when,the,application,stops,param,handlers,one,or,more,link,transport,handler,implementations,to,use;public,transport,handling,sock,js,service,task,scheduler,scheduler,collection,transport,handler,handlers,super,scheduler,if,collection,utils,is,empty,handlers,logger,warn,no,transport,handlers,specified,for,transport,handling,sock,js,service,else,for,transport,handler,handler,handlers,handler,initialize,this,this,handlers,put,handler,get,transport,type,handler,if,jackson2present,this,message,codec,new,jackson2sock,js,message,codec
TransportHandlingSockJsService -> public TransportHandlingSockJsService(TaskScheduler scheduler, Collection<TransportHandler> handlers);1411567635;Create a TransportHandlingSockJsService with given {@link TransportHandler handler} types._@param scheduler a task scheduler for heart-beat messages and removing timed-out sessions__the provided TaskScheduler should be declared as a Spring bean to ensure it gets_initialized at start-up and shuts down when the application stops_@param handlers one or more {@link TransportHandler} implementations to use;public TransportHandlingSockJsService(TaskScheduler scheduler, Collection<TransportHandler> handlers) {_		super(scheduler)___		if (CollectionUtils.isEmpty(handlers)) {_			logger.warn("No transport handlers specified for TransportHandlingSockJsService")__		}_		else {_			for (TransportHandler handler : handlers) {_				handler.initialize(this)__				this.handlers.put(handler.getTransportType(), handler)__			}_		}__		if (jackson2Present) {_			this.messageCodec = new Jackson2SockJsMessageCodec()__		}_	};create,a,transport,handling,sock,js,service,with,given,link,transport,handler,handler,types,param,scheduler,a,task,scheduler,for,heart,beat,messages,and,removing,timed,out,sessions,the,provided,task,scheduler,should,be,declared,as,a,spring,bean,to,ensure,it,gets,initialized,at,start,up,and,shuts,down,when,the,application,stops,param,handlers,one,or,more,link,transport,handler,implementations,to,use;public,transport,handling,sock,js,service,task,scheduler,scheduler,collection,transport,handler,handlers,super,scheduler,if,collection,utils,is,empty,handlers,logger,warn,no,transport,handlers,specified,for,transport,handling,sock,js,service,else,for,transport,handler,handler,handlers,handler,initialize,this,this,handlers,put,handler,get,transport,type,handler,if,jackson2present,this,message,codec,new,jackson2sock,js,message,codec
TransportHandlingSockJsService -> public TransportHandlingSockJsService(TaskScheduler scheduler, Collection<TransportHandler> handlers);1413848647;Create a TransportHandlingSockJsService with given {@link TransportHandler handler} types._@param scheduler a task scheduler for heart-beat messages and removing timed-out sessions__the provided TaskScheduler should be declared as a Spring bean to ensure it gets_initialized at start-up and shuts down when the application stops_@param handlers one or more {@link TransportHandler} implementations to use;public TransportHandlingSockJsService(TaskScheduler scheduler, Collection<TransportHandler> handlers) {_		super(scheduler)___		if (CollectionUtils.isEmpty(handlers)) {_			logger.warn("No transport handlers specified for TransportHandlingSockJsService")__		}_		else {_			for (TransportHandler handler : handlers) {_				handler.initialize(this)__				this.handlers.put(handler.getTransportType(), handler)__			}_		}__		if (jackson2Present) {_			this.messageCodec = new Jackson2SockJsMessageCodec()__		}_	};create,a,transport,handling,sock,js,service,with,given,link,transport,handler,handler,types,param,scheduler,a,task,scheduler,for,heart,beat,messages,and,removing,timed,out,sessions,the,provided,task,scheduler,should,be,declared,as,a,spring,bean,to,ensure,it,gets,initialized,at,start,up,and,shuts,down,when,the,application,stops,param,handlers,one,or,more,link,transport,handler,implementations,to,use;public,transport,handling,sock,js,service,task,scheduler,scheduler,collection,transport,handler,handlers,super,scheduler,if,collection,utils,is,empty,handlers,logger,warn,no,transport,handlers,specified,for,transport,handling,sock,js,service,else,for,transport,handler,handler,handlers,handler,initialize,this,this,handlers,put,handler,get,transport,type,handler,if,jackson2present,this,message,codec,new,jackson2sock,js,message,codec
TransportHandlingSockJsService -> public TransportHandlingSockJsService(TaskScheduler scheduler, Collection<TransportHandler> handlers);1414354684;Create a TransportHandlingSockJsService with given {@link TransportHandler handler} types._@param scheduler a task scheduler for heart-beat messages and removing timed-out sessions__the provided TaskScheduler should be declared as a Spring bean to ensure it gets_initialized at start-up and shuts down when the application stops_@param handlers one or more {@link TransportHandler} implementations to use;public TransportHandlingSockJsService(TaskScheduler scheduler, Collection<TransportHandler> handlers) {_		super(scheduler)___		if (CollectionUtils.isEmpty(handlers)) {_			logger.warn("No transport handlers specified for TransportHandlingSockJsService")__		}_		else {_			for (TransportHandler handler : handlers) {_				handler.initialize(this)__				this.handlers.put(handler.getTransportType(), handler)__			}_		}__		if (jackson2Present) {_			this.messageCodec = new Jackson2SockJsMessageCodec()__		}_	};create,a,transport,handling,sock,js,service,with,given,link,transport,handler,handler,types,param,scheduler,a,task,scheduler,for,heart,beat,messages,and,removing,timed,out,sessions,the,provided,task,scheduler,should,be,declared,as,a,spring,bean,to,ensure,it,gets,initialized,at,start,up,and,shuts,down,when,the,application,stops,param,handlers,one,or,more,link,transport,handler,implementations,to,use;public,transport,handling,sock,js,service,task,scheduler,scheduler,collection,transport,handler,handlers,super,scheduler,if,collection,utils,is,empty,handlers,logger,warn,no,transport,handlers,specified,for,transport,handling,sock,js,service,else,for,transport,handler,handler,handlers,handler,initialize,this,this,handlers,put,handler,get,transport,type,handler,if,jackson2present,this,message,codec,new,jackson2sock,js,message,codec
TransportHandlingSockJsService -> public TransportHandlingSockJsService(TaskScheduler scheduler, Collection<TransportHandler> handlers);1414412881;Create a TransportHandlingSockJsService with given {@link TransportHandler handler} types._@param scheduler a task scheduler for heart-beat messages and removing timed-out sessions__the provided TaskScheduler should be declared as a Spring bean to ensure it gets_initialized at start-up and shuts down when the application stops_@param handlers one or more {@link TransportHandler} implementations to use;public TransportHandlingSockJsService(TaskScheduler scheduler, Collection<TransportHandler> handlers) {_		super(scheduler)___		if (CollectionUtils.isEmpty(handlers)) {_			logger.warn("No transport handlers specified for TransportHandlingSockJsService")__		}_		else {_			for (TransportHandler handler : handlers) {_				handler.initialize(this)__				this.handlers.put(handler.getTransportType(), handler)__			}_		}__		if (jackson2Present) {_			this.messageCodec = new Jackson2SockJsMessageCodec()__		}_	};create,a,transport,handling,sock,js,service,with,given,link,transport,handler,handler,types,param,scheduler,a,task,scheduler,for,heart,beat,messages,and,removing,timed,out,sessions,the,provided,task,scheduler,should,be,declared,as,a,spring,bean,to,ensure,it,gets,initialized,at,start,up,and,shuts,down,when,the,application,stops,param,handlers,one,or,more,link,transport,handler,implementations,to,use;public,transport,handling,sock,js,service,task,scheduler,scheduler,collection,transport,handler,handlers,super,scheduler,if,collection,utils,is,empty,handlers,logger,warn,no,transport,handlers,specified,for,transport,handling,sock,js,service,else,for,transport,handler,handler,handlers,handler,initialize,this,this,handlers,put,handler,get,transport,type,handler,if,jackson2present,this,message,codec,new,jackson2sock,js,message,codec
TransportHandlingSockJsService -> public TransportHandlingSockJsService(TaskScheduler scheduler, Collection<TransportHandler> handlers);1414415063;Create a TransportHandlingSockJsService with given {@link TransportHandler handler} types._@param scheduler a task scheduler for heart-beat messages and removing timed-out sessions__the provided TaskScheduler should be declared as a Spring bean to ensure it gets_initialized at start-up and shuts down when the application stops_@param handlers one or more {@link TransportHandler} implementations to use;public TransportHandlingSockJsService(TaskScheduler scheduler, Collection<TransportHandler> handlers) {_		super(scheduler)___		if (CollectionUtils.isEmpty(handlers)) {_			logger.warn("No transport handlers specified for TransportHandlingSockJsService")__		}_		else {_			for (TransportHandler handler : handlers) {_				handler.initialize(this)__				this.handlers.put(handler.getTransportType(), handler)__			}_		}__		if (jackson2Present) {_			this.messageCodec = new Jackson2SockJsMessageCodec()__		}_	};create,a,transport,handling,sock,js,service,with,given,link,transport,handler,handler,types,param,scheduler,a,task,scheduler,for,heart,beat,messages,and,removing,timed,out,sessions,the,provided,task,scheduler,should,be,declared,as,a,spring,bean,to,ensure,it,gets,initialized,at,start,up,and,shuts,down,when,the,application,stops,param,handlers,one,or,more,link,transport,handler,implementations,to,use;public,transport,handling,sock,js,service,task,scheduler,scheduler,collection,transport,handler,handlers,super,scheduler,if,collection,utils,is,empty,handlers,logger,warn,no,transport,handlers,specified,for,transport,handling,sock,js,service,else,for,transport,handler,handler,handlers,handler,initialize,this,this,handlers,put,handler,get,transport,type,handler,if,jackson2present,this,message,codec,new,jackson2sock,js,message,codec
TransportHandlingSockJsService -> public TransportHandlingSockJsService(TaskScheduler scheduler, Collection<TransportHandler> handlers);1414619099;Create a TransportHandlingSockJsService with given {@link TransportHandler handler} types._@param scheduler a task scheduler for heart-beat messages and removing timed-out sessions__the provided TaskScheduler should be declared as a Spring bean to ensure it gets_initialized at start-up and shuts down when the application stops_@param handlers one or more {@link TransportHandler} implementations to use;public TransportHandlingSockJsService(TaskScheduler scheduler, Collection<TransportHandler> handlers) {_		super(scheduler)___		if (CollectionUtils.isEmpty(handlers)) {_			logger.warn("No transport handlers specified for TransportHandlingSockJsService")__		}_		else {_			for (TransportHandler handler : handlers) {_				handler.initialize(this)__				this.handlers.put(handler.getTransportType(), handler)__			}_		}__		if (jackson2Present) {_			this.messageCodec = new Jackson2SockJsMessageCodec()__		}_	};create,a,transport,handling,sock,js,service,with,given,link,transport,handler,handler,types,param,scheduler,a,task,scheduler,for,heart,beat,messages,and,removing,timed,out,sessions,the,provided,task,scheduler,should,be,declared,as,a,spring,bean,to,ensure,it,gets,initialized,at,start,up,and,shuts,down,when,the,application,stops,param,handlers,one,or,more,link,transport,handler,implementations,to,use;public,transport,handling,sock,js,service,task,scheduler,scheduler,collection,transport,handler,handlers,super,scheduler,if,collection,utils,is,empty,handlers,logger,warn,no,transport,handlers,specified,for,transport,handling,sock,js,service,else,for,transport,handler,handler,handlers,handler,initialize,this,this,handlers,put,handler,get,transport,type,handler,if,jackson2present,this,message,codec,new,jackson2sock,js,message,codec
TransportHandlingSockJsService -> public TransportHandlingSockJsService(TaskScheduler scheduler, Collection<TransportHandler> handlers);1417540415;Create a TransportHandlingSockJsService with given {@link TransportHandler handler} types._@param scheduler a task scheduler for heart-beat messages and removing timed-out sessions__the provided TaskScheduler should be declared as a Spring bean to ensure it gets_initialized at start-up and shuts down when the application stops_@param handlers one or more {@link TransportHandler} implementations to use;public TransportHandlingSockJsService(TaskScheduler scheduler, Collection<TransportHandler> handlers) {_		super(scheduler)___		if (CollectionUtils.isEmpty(handlers)) {_			logger.warn("No transport handlers specified for TransportHandlingSockJsService")__		}_		else {_			for (TransportHandler handler : handlers) {_				handler.initialize(this)__				this.handlers.put(handler.getTransportType(), handler)__			}_		}__		if (jackson2Present) {_			this.messageCodec = new Jackson2SockJsMessageCodec()__		}_	};create,a,transport,handling,sock,js,service,with,given,link,transport,handler,handler,types,param,scheduler,a,task,scheduler,for,heart,beat,messages,and,removing,timed,out,sessions,the,provided,task,scheduler,should,be,declared,as,a,spring,bean,to,ensure,it,gets,initialized,at,start,up,and,shuts,down,when,the,application,stops,param,handlers,one,or,more,link,transport,handler,implementations,to,use;public,transport,handling,sock,js,service,task,scheduler,scheduler,collection,transport,handler,handlers,super,scheduler,if,collection,utils,is,empty,handlers,logger,warn,no,transport,handlers,specified,for,transport,handling,sock,js,service,else,for,transport,handler,handler,handlers,handler,initialize,this,this,handlers,put,handler,get,transport,type,handler,if,jackson2present,this,message,codec,new,jackson2sock,js,message,codec
TransportHandlingSockJsService -> public TransportHandlingSockJsService(TaskScheduler scheduler, Collection<TransportHandler> handlers);1424361139;Create a TransportHandlingSockJsService with given {@link TransportHandler handler} types._@param scheduler a task scheduler for heart-beat messages and removing timed-out sessions__the provided TaskScheduler should be declared as a Spring bean to ensure it gets_initialized at start-up and shuts down when the application stops_@param handlers one or more {@link TransportHandler} implementations to use;public TransportHandlingSockJsService(TaskScheduler scheduler, Collection<TransportHandler> handlers) {_		super(scheduler)___		if (CollectionUtils.isEmpty(handlers)) {_			logger.warn("No transport handlers specified for TransportHandlingSockJsService")__		}_		else {_			for (TransportHandler handler : handlers) {_				handler.initialize(this)__				this.handlers.put(handler.getTransportType(), handler)__			}_		}__		if (jackson2Present) {_			this.messageCodec = new Jackson2SockJsMessageCodec()__		}_	};create,a,transport,handling,sock,js,service,with,given,link,transport,handler,handler,types,param,scheduler,a,task,scheduler,for,heart,beat,messages,and,removing,timed,out,sessions,the,provided,task,scheduler,should,be,declared,as,a,spring,bean,to,ensure,it,gets,initialized,at,start,up,and,shuts,down,when,the,application,stops,param,handlers,one,or,more,link,transport,handler,implementations,to,use;public,transport,handling,sock,js,service,task,scheduler,scheduler,collection,transport,handler,handlers,super,scheduler,if,collection,utils,is,empty,handlers,logger,warn,no,transport,handlers,specified,for,transport,handling,sock,js,service,else,for,transport,handler,handler,handlers,handler,initialize,this,this,handlers,put,handler,get,transport,type,handler,if,jackson2present,this,message,codec,new,jackson2sock,js,message,codec
TransportHandlingSockJsService -> public TransportHandlingSockJsService(TaskScheduler scheduler, Collection<TransportHandler> handlers);1427234595;Create a TransportHandlingSockJsService with given {@link TransportHandler handler} types._@param scheduler a task scheduler for heart-beat messages and removing timed-out sessions__the provided TaskScheduler should be declared as a Spring bean to ensure it gets_initialized at start-up and shuts down when the application stops_@param handlers one or more {@link TransportHandler} implementations to use;public TransportHandlingSockJsService(TaskScheduler scheduler, Collection<TransportHandler> handlers) {_		super(scheduler)___		if (CollectionUtils.isEmpty(handlers)) {_			logger.warn("No transport handlers specified for TransportHandlingSockJsService")__		}_		else {_			for (TransportHandler handler : handlers) {_				handler.initialize(this)__				this.handlers.put(handler.getTransportType(), handler)__			}_		}__		if (jackson2Present) {_			this.messageCodec = new Jackson2SockJsMessageCodec()__		}_	};create,a,transport,handling,sock,js,service,with,given,link,transport,handler,handler,types,param,scheduler,a,task,scheduler,for,heart,beat,messages,and,removing,timed,out,sessions,the,provided,task,scheduler,should,be,declared,as,a,spring,bean,to,ensure,it,gets,initialized,at,start,up,and,shuts,down,when,the,application,stops,param,handlers,one,or,more,link,transport,handler,implementations,to,use;public,transport,handling,sock,js,service,task,scheduler,scheduler,collection,transport,handler,handlers,super,scheduler,if,collection,utils,is,empty,handlers,logger,warn,no,transport,handlers,specified,for,transport,handling,sock,js,service,else,for,transport,handler,handler,handlers,handler,initialize,this,this,handlers,put,handler,get,transport,type,handler,if,jackson2present,this,message,codec,new,jackson2sock,js,message,codec
TransportHandlingSockJsService -> public TransportHandlingSockJsService(TaskScheduler scheduler, Collection<TransportHandler> handlers);1427983931;Create a TransportHandlingSockJsService with given {@link TransportHandler handler} types._@param scheduler a task scheduler for heart-beat messages and removing timed-out sessions__the provided TaskScheduler should be declared as a Spring bean to ensure it gets_initialized at start-up and shuts down when the application stops_@param handlers one or more {@link TransportHandler} implementations to use;public TransportHandlingSockJsService(TaskScheduler scheduler, Collection<TransportHandler> handlers) {_		super(scheduler)___		if (CollectionUtils.isEmpty(handlers)) {_			logger.warn("No transport handlers specified for TransportHandlingSockJsService")__		}_		else {_			for (TransportHandler handler : handlers) {_				handler.initialize(this)__				this.handlers.put(handler.getTransportType(), handler)__			}_		}__		if (jackson2Present) {_			this.messageCodec = new Jackson2SockJsMessageCodec()__		}_	};create,a,transport,handling,sock,js,service,with,given,link,transport,handler,handler,types,param,scheduler,a,task,scheduler,for,heart,beat,messages,and,removing,timed,out,sessions,the,provided,task,scheduler,should,be,declared,as,a,spring,bean,to,ensure,it,gets,initialized,at,start,up,and,shuts,down,when,the,application,stops,param,handlers,one,or,more,link,transport,handler,implementations,to,use;public,transport,handling,sock,js,service,task,scheduler,scheduler,collection,transport,handler,handlers,super,scheduler,if,collection,utils,is,empty,handlers,logger,warn,no,transport,handlers,specified,for,transport,handling,sock,js,service,else,for,transport,handler,handler,handlers,handler,initialize,this,this,handlers,put,handler,get,transport,type,handler,if,jackson2present,this,message,codec,new,jackson2sock,js,message,codec
TransportHandlingSockJsService -> public TransportHandlingSockJsService(TaskScheduler scheduler, Collection<TransportHandler> handlers);1435026644;Create a TransportHandlingSockJsService with given {@link TransportHandler handler} types._@param scheduler a task scheduler for heart-beat messages and removing timed-out sessions__the provided TaskScheduler should be declared as a Spring bean to ensure it gets_initialized at start-up and shuts down when the application stops_@param handlers one or more {@link TransportHandler} implementations to use;public TransportHandlingSockJsService(TaskScheduler scheduler, Collection<TransportHandler> handlers) {_		super(scheduler)___		if (CollectionUtils.isEmpty(handlers)) {_			logger.warn("No transport handlers specified for TransportHandlingSockJsService")__		}_		else {_			for (TransportHandler handler : handlers) {_				handler.initialize(this)__				this.handlers.put(handler.getTransportType(), handler)__			}_		}__		if (jackson2Present) {_			this.messageCodec = new Jackson2SockJsMessageCodec()__		}_	};create,a,transport,handling,sock,js,service,with,given,link,transport,handler,handler,types,param,scheduler,a,task,scheduler,for,heart,beat,messages,and,removing,timed,out,sessions,the,provided,task,scheduler,should,be,declared,as,a,spring,bean,to,ensure,it,gets,initialized,at,start,up,and,shuts,down,when,the,application,stops,param,handlers,one,or,more,link,transport,handler,implementations,to,use;public,transport,handling,sock,js,service,task,scheduler,scheduler,collection,transport,handler,handlers,super,scheduler,if,collection,utils,is,empty,handlers,logger,warn,no,transport,handlers,specified,for,transport,handling,sock,js,service,else,for,transport,handler,handler,handlers,handler,initialize,this,this,handlers,put,handler,get,transport,type,handler,if,jackson2present,this,message,codec,new,jackson2sock,js,message,codec
TransportHandlingSockJsService -> public TransportHandlingSockJsService(TaskScheduler scheduler, Collection<TransportHandler> handlers);1444217152;Create a TransportHandlingSockJsService with given {@link TransportHandler handler} types._@param scheduler a task scheduler for heart-beat messages and removing timed-out sessions__the provided TaskScheduler should be declared as a Spring bean to ensure it gets_initialized at start-up and shuts down when the application stops_@param handlers one or more {@link TransportHandler} implementations to use;public TransportHandlingSockJsService(TaskScheduler scheduler, Collection<TransportHandler> handlers) {_		super(scheduler)___		if (CollectionUtils.isEmpty(handlers)) {_			logger.warn("No transport handlers specified for TransportHandlingSockJsService")__		}_		else {_			for (TransportHandler handler : handlers) {_				handler.initialize(this)__				this.handlers.put(handler.getTransportType(), handler)__			}_		}__		if (jackson2Present) {_			this.messageCodec = new Jackson2SockJsMessageCodec()__		}_	};create,a,transport,handling,sock,js,service,with,given,link,transport,handler,handler,types,param,scheduler,a,task,scheduler,for,heart,beat,messages,and,removing,timed,out,sessions,the,provided,task,scheduler,should,be,declared,as,a,spring,bean,to,ensure,it,gets,initialized,at,start,up,and,shuts,down,when,the,application,stops,param,handlers,one,or,more,link,transport,handler,implementations,to,use;public,transport,handling,sock,js,service,task,scheduler,scheduler,collection,transport,handler,handlers,super,scheduler,if,collection,utils,is,empty,handlers,logger,warn,no,transport,handlers,specified,for,transport,handling,sock,js,service,else,for,transport,handler,handler,handlers,handler,initialize,this,this,handlers,put,handler,get,transport,type,handler,if,jackson2present,this,message,codec,new,jackson2sock,js,message,codec
TransportHandlingSockJsService -> public TransportHandlingSockJsService(TaskScheduler scheduler, Collection<TransportHandler> handlers);1449242513;Create a TransportHandlingSockJsService with given {@link TransportHandler handler} types._@param scheduler a task scheduler for heart-beat messages and removing timed-out sessions__the provided TaskScheduler should be declared as a Spring bean to ensure it gets_initialized at start-up and shuts down when the application stops_@param handlers one or more {@link TransportHandler} implementations to use;public TransportHandlingSockJsService(TaskScheduler scheduler, Collection<TransportHandler> handlers) {_		super(scheduler)___		if (CollectionUtils.isEmpty(handlers)) {_			logger.warn("No transport handlers specified for TransportHandlingSockJsService")__		}_		else {_			for (TransportHandler handler : handlers) {_				handler.initialize(this)__				this.handlers.put(handler.getTransportType(), handler)__			}_		}__		if (jackson2Present) {_			this.messageCodec = new Jackson2SockJsMessageCodec()__		}_	};create,a,transport,handling,sock,js,service,with,given,link,transport,handler,handler,types,param,scheduler,a,task,scheduler,for,heart,beat,messages,and,removing,timed,out,sessions,the,provided,task,scheduler,should,be,declared,as,a,spring,bean,to,ensure,it,gets,initialized,at,start,up,and,shuts,down,when,the,application,stops,param,handlers,one,or,more,link,transport,handler,implementations,to,use;public,transport,handling,sock,js,service,task,scheduler,scheduler,collection,transport,handler,handlers,super,scheduler,if,collection,utils,is,empty,handlers,logger,warn,no,transport,handlers,specified,for,transport,handling,sock,js,service,else,for,transport,handler,handler,handlers,handler,initialize,this,this,handlers,put,handler,get,transport,type,handler,if,jackson2present,this,message,codec,new,jackson2sock,js,message,codec
TransportHandlingSockJsService -> public TransportHandlingSockJsService(TaskScheduler scheduler, Collection<TransportHandler> handlers);1449660404;Create a TransportHandlingSockJsService with given {@link TransportHandler handler} types._@param scheduler a task scheduler for heart-beat messages and removing timed-out sessions__the provided TaskScheduler should be declared as a Spring bean to ensure it gets_initialized at start-up and shuts down when the application stops_@param handlers one or more {@link TransportHandler} implementations to use;public TransportHandlingSockJsService(TaskScheduler scheduler, Collection<TransportHandler> handlers) {_		super(scheduler)___		if (CollectionUtils.isEmpty(handlers)) {_			logger.warn("No transport handlers specified for TransportHandlingSockJsService")__		}_		else {_			for (TransportHandler handler : handlers) {_				handler.initialize(this)__				this.handlers.put(handler.getTransportType(), handler)__			}_		}__		if (jackson2Present) {_			this.messageCodec = new Jackson2SockJsMessageCodec()__		}_	};create,a,transport,handling,sock,js,service,with,given,link,transport,handler,handler,types,param,scheduler,a,task,scheduler,for,heart,beat,messages,and,removing,timed,out,sessions,the,provided,task,scheduler,should,be,declared,as,a,spring,bean,to,ensure,it,gets,initialized,at,start,up,and,shuts,down,when,the,application,stops,param,handlers,one,or,more,link,transport,handler,implementations,to,use;public,transport,handling,sock,js,service,task,scheduler,scheduler,collection,transport,handler,handlers,super,scheduler,if,collection,utils,is,empty,handlers,logger,warn,no,transport,handlers,specified,for,transport,handling,sock,js,service,else,for,transport,handler,handler,handlers,handler,initialize,this,this,handlers,put,handler,get,transport,type,handler,if,jackson2present,this,message,codec,new,jackson2sock,js,message,codec
TransportHandlingSockJsService -> public TransportHandlingSockJsService(TaskScheduler scheduler, Collection<TransportHandler> handlers);1459792887;Create a TransportHandlingSockJsService with given {@link TransportHandler handler} types._@param scheduler a task scheduler for heart-beat messages and removing timed-out sessions__the provided TaskScheduler should be declared as a Spring bean to ensure it gets_initialized at start-up and shuts down when the application stops_@param handlers one or more {@link TransportHandler} implementations to use;public TransportHandlingSockJsService(TaskScheduler scheduler, Collection<TransportHandler> handlers) {_		super(scheduler)___		if (CollectionUtils.isEmpty(handlers)) {_			logger.warn("No transport handlers specified for TransportHandlingSockJsService")__		}_		else {_			for (TransportHandler handler : handlers) {_				handler.initialize(this)__				this.handlers.put(handler.getTransportType(), handler)__			}_		}__		if (jackson2Present) {_			this.messageCodec = new Jackson2SockJsMessageCodec()__		}_	};create,a,transport,handling,sock,js,service,with,given,link,transport,handler,handler,types,param,scheduler,a,task,scheduler,for,heart,beat,messages,and,removing,timed,out,sessions,the,provided,task,scheduler,should,be,declared,as,a,spring,bean,to,ensure,it,gets,initialized,at,start,up,and,shuts,down,when,the,application,stops,param,handlers,one,or,more,link,transport,handler,implementations,to,use;public,transport,handling,sock,js,service,task,scheduler,scheduler,collection,transport,handler,handlers,super,scheduler,if,collection,utils,is,empty,handlers,logger,warn,no,transport,handlers,specified,for,transport,handling,sock,js,service,else,for,transport,handler,handler,handlers,handler,initialize,this,this,handlers,put,handler,get,transport,type,handler,if,jackson2present,this,message,codec,new,jackson2sock,js,message,codec
TransportHandlingSockJsService -> public TransportHandlingSockJsService(TaskScheduler scheduler, Collection<TransportHandler> handlers);1459795890;Create a TransportHandlingSockJsService with given {@link TransportHandler handler} types._@param scheduler a task scheduler for heart-beat messages and removing timed-out sessions__the provided TaskScheduler should be declared as a Spring bean to ensure it gets_initialized at start-up and shuts down when the application stops_@param handlers one or more {@link TransportHandler} implementations to use;public TransportHandlingSockJsService(TaskScheduler scheduler, Collection<TransportHandler> handlers) {_		super(scheduler)___		if (CollectionUtils.isEmpty(handlers)) {_			logger.warn("No transport handlers specified for TransportHandlingSockJsService")__		}_		else {_			for (TransportHandler handler : handlers) {_				handler.initialize(this)__				this.handlers.put(handler.getTransportType(), handler)__			}_		}__		if (jackson2Present) {_			this.messageCodec = new Jackson2SockJsMessageCodec()__		}_	};create,a,transport,handling,sock,js,service,with,given,link,transport,handler,handler,types,param,scheduler,a,task,scheduler,for,heart,beat,messages,and,removing,timed,out,sessions,the,provided,task,scheduler,should,be,declared,as,a,spring,bean,to,ensure,it,gets,initialized,at,start,up,and,shuts,down,when,the,application,stops,param,handlers,one,or,more,link,transport,handler,implementations,to,use;public,transport,handling,sock,js,service,task,scheduler,scheduler,collection,transport,handler,handlers,super,scheduler,if,collection,utils,is,empty,handlers,logger,warn,no,transport,handlers,specified,for,transport,handling,sock,js,service,else,for,transport,handler,handler,handlers,handler,initialize,this,this,handlers,put,handler,get,transport,type,handler,if,jackson2present,this,message,codec,new,jackson2sock,js,message,codec
TransportHandlingSockJsService -> public TransportHandlingSockJsService(TaskScheduler scheduler, Collection<TransportHandler> handlers);1467730834;Create a TransportHandlingSockJsService with given {@link TransportHandler handler} types._@param scheduler a task scheduler for heart-beat messages and removing timed-out sessions__the provided TaskScheduler should be declared as a Spring bean to ensure it gets_initialized at start-up and shuts down when the application stops_@param handlers one or more {@link TransportHandler} implementations to use;public TransportHandlingSockJsService(TaskScheduler scheduler, Collection<TransportHandler> handlers) {_		super(scheduler)___		if (CollectionUtils.isEmpty(handlers)) {_			logger.warn("No transport handlers specified for TransportHandlingSockJsService")__		}_		else {_			for (TransportHandler handler : handlers) {_				handler.initialize(this)__				this.handlers.put(handler.getTransportType(), handler)__			}_		}__		if (jackson2Present) {_			this.messageCodec = new Jackson2SockJsMessageCodec()__		}_	};create,a,transport,handling,sock,js,service,with,given,link,transport,handler,handler,types,param,scheduler,a,task,scheduler,for,heart,beat,messages,and,removing,timed,out,sessions,the,provided,task,scheduler,should,be,declared,as,a,spring,bean,to,ensure,it,gets,initialized,at,start,up,and,shuts,down,when,the,application,stops,param,handlers,one,or,more,link,transport,handler,implementations,to,use;public,transport,handling,sock,js,service,task,scheduler,scheduler,collection,transport,handler,handlers,super,scheduler,if,collection,utils,is,empty,handlers,logger,warn,no,transport,handlers,specified,for,transport,handling,sock,js,service,else,for,transport,handler,handler,handlers,handler,initialize,this,this,handlers,put,handler,get,transport,type,handler,if,jackson2present,this,message,codec,new,jackson2sock,js,message,codec
TransportHandlingSockJsService -> public TransportHandlingSockJsService(TaskScheduler scheduler, Collection<TransportHandler> handlers);1478158530;Create a TransportHandlingSockJsService with given {@link TransportHandler handler} types._@param scheduler a task scheduler for heart-beat messages and removing timed-out sessions__the provided TaskScheduler should be declared as a Spring bean to ensure it gets_initialized at start-up and shuts down when the application stops_@param handlers one or more {@link TransportHandler} implementations to use;public TransportHandlingSockJsService(TaskScheduler scheduler, Collection<TransportHandler> handlers) {_		super(scheduler)___		if (CollectionUtils.isEmpty(handlers)) {_			logger.warn("No transport handlers specified for TransportHandlingSockJsService")__		}_		else {_			for (TransportHandler handler : handlers) {_				handler.initialize(this)__				this.handlers.put(handler.getTransportType(), handler)__			}_		}__		if (jackson2Present) {_			this.messageCodec = new Jackson2SockJsMessageCodec()__		}_	};create,a,transport,handling,sock,js,service,with,given,link,transport,handler,handler,types,param,scheduler,a,task,scheduler,for,heart,beat,messages,and,removing,timed,out,sessions,the,provided,task,scheduler,should,be,declared,as,a,spring,bean,to,ensure,it,gets,initialized,at,start,up,and,shuts,down,when,the,application,stops,param,handlers,one,or,more,link,transport,handler,implementations,to,use;public,transport,handling,sock,js,service,task,scheduler,scheduler,collection,transport,handler,handlers,super,scheduler,if,collection,utils,is,empty,handlers,logger,warn,no,transport,handlers,specified,for,transport,handling,sock,js,service,else,for,transport,handler,handler,handlers,handler,initialize,this,this,handlers,put,handler,get,transport,type,handler,if,jackson2present,this,message,codec,new,jackson2sock,js,message,codec
TransportHandlingSockJsService -> public TransportHandlingSockJsService(TaskScheduler scheduler, Collection<TransportHandler> handlers);1496837955;Create a TransportHandlingSockJsService with given {@link TransportHandler handler} types._@param scheduler a task scheduler for heart-beat messages and removing timed-out sessions__the provided TaskScheduler should be declared as a Spring bean to ensure it gets_initialized at start-up and shuts down when the application stops_@param handlers one or more {@link TransportHandler} implementations to use;public TransportHandlingSockJsService(TaskScheduler scheduler, Collection<TransportHandler> handlers) {_		super(scheduler)___		if (CollectionUtils.isEmpty(handlers)) {_			logger.warn("No transport handlers specified for TransportHandlingSockJsService")__		}_		else {_			for (TransportHandler handler : handlers) {_				handler.initialize(this)__				this.handlers.put(handler.getTransportType(), handler)__			}_		}__		if (jackson2Present) {_			this.messageCodec = new Jackson2SockJsMessageCodec()__		}_	};create,a,transport,handling,sock,js,service,with,given,link,transport,handler,handler,types,param,scheduler,a,task,scheduler,for,heart,beat,messages,and,removing,timed,out,sessions,the,provided,task,scheduler,should,be,declared,as,a,spring,bean,to,ensure,it,gets,initialized,at,start,up,and,shuts,down,when,the,application,stops,param,handlers,one,or,more,link,transport,handler,implementations,to,use;public,transport,handling,sock,js,service,task,scheduler,scheduler,collection,transport,handler,handlers,super,scheduler,if,collection,utils,is,empty,handlers,logger,warn,no,transport,handlers,specified,for,transport,handling,sock,js,service,else,for,transport,handler,handler,handlers,handler,initialize,this,this,handlers,put,handler,get,transport,type,handler,if,jackson2present,this,message,codec,new,jackson2sock,js,message,codec
TransportHandlingSockJsService -> public TransportHandlingSockJsService(TaskScheduler scheduler, Collection<TransportHandler> handlers);1497341397;Create a TransportHandlingSockJsService with given {@link TransportHandler handler} types._@param scheduler a task scheduler for heart-beat messages and removing timed-out sessions__the provided TaskScheduler should be declared as a Spring bean to ensure it gets_initialized at start-up and shuts down when the application stops_@param handlers one or more {@link TransportHandler} implementations to use;public TransportHandlingSockJsService(TaskScheduler scheduler, Collection<TransportHandler> handlers) {_		super(scheduler)___		if (CollectionUtils.isEmpty(handlers)) {_			logger.warn("No transport handlers specified for TransportHandlingSockJsService")__		}_		else {_			for (TransportHandler handler : handlers) {_				handler.initialize(this)__				this.handlers.put(handler.getTransportType(), handler)__			}_		}__		if (jackson2Present) {_			this.messageCodec = new Jackson2SockJsMessageCodec()__		}_	};create,a,transport,handling,sock,js,service,with,given,link,transport,handler,handler,types,param,scheduler,a,task,scheduler,for,heart,beat,messages,and,removing,timed,out,sessions,the,provided,task,scheduler,should,be,declared,as,a,spring,bean,to,ensure,it,gets,initialized,at,start,up,and,shuts,down,when,the,application,stops,param,handlers,one,or,more,link,transport,handler,implementations,to,use;public,transport,handling,sock,js,service,task,scheduler,scheduler,collection,transport,handler,handlers,super,scheduler,if,collection,utils,is,empty,handlers,logger,warn,no,transport,handlers,specified,for,transport,handling,sock,js,service,else,for,transport,handler,handler,handlers,handler,initialize,this,this,handlers,put,handler,get,transport,type,handler,if,jackson2present,this,message,codec,new,jackson2sock,js,message,codec
TransportHandlingSockJsService -> public TransportHandlingSockJsService(TaskScheduler scheduler, Collection<TransportHandler> handlers);1498780456;Create a TransportHandlingSockJsService with given {@link TransportHandler handler} types._@param scheduler a task scheduler for heart-beat messages and removing timed-out sessions__the provided TaskScheduler should be declared as a Spring bean to ensure it gets_initialized at start-up and shuts down when the application stops_@param handlers one or more {@link TransportHandler} implementations to use;public TransportHandlingSockJsService(TaskScheduler scheduler, Collection<TransportHandler> handlers) {_		super(scheduler)___		if (CollectionUtils.isEmpty(handlers)) {_			logger.warn("No transport handlers specified for TransportHandlingSockJsService")__		}_		else {_			for (TransportHandler handler : handlers) {_				handler.initialize(this)__				this.handlers.put(handler.getTransportType(), handler)__			}_		}__		if (jackson2Present) {_			this.messageCodec = new Jackson2SockJsMessageCodec()__		}_	};create,a,transport,handling,sock,js,service,with,given,link,transport,handler,handler,types,param,scheduler,a,task,scheduler,for,heart,beat,messages,and,removing,timed,out,sessions,the,provided,task,scheduler,should,be,declared,as,a,spring,bean,to,ensure,it,gets,initialized,at,start,up,and,shuts,down,when,the,application,stops,param,handlers,one,or,more,link,transport,handler,implementations,to,use;public,transport,handling,sock,js,service,task,scheduler,scheduler,collection,transport,handler,handlers,super,scheduler,if,collection,utils,is,empty,handlers,logger,warn,no,transport,handlers,specified,for,transport,handling,sock,js,service,else,for,transport,handler,handler,handlers,handler,initialize,this,this,handlers,put,handler,get,transport,type,handler,if,jackson2present,this,message,codec,new,jackson2sock,js,message,codec
TransportHandlingSockJsService -> public TransportHandlingSockJsService(TaskScheduler scheduler, Collection<TransportHandler> handlers);1518260973;Create a TransportHandlingSockJsService with given {@link TransportHandler handler} types._@param scheduler a task scheduler for heart-beat messages and removing timed-out sessions__the provided TaskScheduler should be declared as a Spring bean to ensure it gets_initialized at start-up and shuts down when the application stops_@param handlers one or more {@link TransportHandler} implementations to use;public TransportHandlingSockJsService(TaskScheduler scheduler, Collection<TransportHandler> handlers) {_		super(scheduler)___		if (CollectionUtils.isEmpty(handlers)) {_			logger.warn("No transport handlers specified for TransportHandlingSockJsService")__		}_		else {_			for (TransportHandler handler : handlers) {_				handler.initialize(this)__				this.handlers.put(handler.getTransportType(), handler)__			}_		}__		if (jackson2Present) {_			this.messageCodec = new Jackson2SockJsMessageCodec()__		}_	};create,a,transport,handling,sock,js,service,with,given,link,transport,handler,handler,types,param,scheduler,a,task,scheduler,for,heart,beat,messages,and,removing,timed,out,sessions,the,provided,task,scheduler,should,be,declared,as,a,spring,bean,to,ensure,it,gets,initialized,at,start,up,and,shuts,down,when,the,application,stops,param,handlers,one,or,more,link,transport,handler,implementations,to,use;public,transport,handling,sock,js,service,task,scheduler,scheduler,collection,transport,handler,handlers,super,scheduler,if,collection,utils,is,empty,handlers,logger,warn,no,transport,handlers,specified,for,transport,handling,sock,js,service,else,for,transport,handler,handler,handlers,handler,initialize,this,this,handlers,put,handler,get,transport,type,handler,if,jackson2present,this,message,codec,new,jackson2sock,js,message,codec
TransportHandlingSockJsService -> public TransportHandlingSockJsService(TaskScheduler scheduler, Collection<TransportHandler> handlers);1518987682;Create a TransportHandlingSockJsService with given {@link TransportHandler handler} types._@param scheduler a task scheduler for heart-beat messages and removing timed-out sessions__the provided TaskScheduler should be declared as a Spring bean to ensure it gets_initialized at start-up and shuts down when the application stops_@param handlers one or more {@link TransportHandler} implementations to use;public TransportHandlingSockJsService(TaskScheduler scheduler, Collection<TransportHandler> handlers) {_		super(scheduler)___		if (CollectionUtils.isEmpty(handlers)) {_			logger.warn("No transport handlers specified for TransportHandlingSockJsService")__		}_		else {_			for (TransportHandler handler : handlers) {_				handler.initialize(this)__				this.handlers.put(handler.getTransportType(), handler)__			}_		}__		if (jackson2Present) {_			this.messageCodec = new Jackson2SockJsMessageCodec()__		}_	};create,a,transport,handling,sock,js,service,with,given,link,transport,handler,handler,types,param,scheduler,a,task,scheduler,for,heart,beat,messages,and,removing,timed,out,sessions,the,provided,task,scheduler,should,be,declared,as,a,spring,bean,to,ensure,it,gets,initialized,at,start,up,and,shuts,down,when,the,application,stops,param,handlers,one,or,more,link,transport,handler,implementations,to,use;public,transport,handling,sock,js,service,task,scheduler,scheduler,collection,transport,handler,handlers,super,scheduler,if,collection,utils,is,empty,handlers,logger,warn,no,transport,handlers,specified,for,transport,handling,sock,js,service,else,for,transport,handler,handler,handlers,handler,initialize,this,this,handlers,put,handler,get,transport,type,handler,if,jackson2present,this,message,codec,new,jackson2sock,js,message,codec
TransportHandlingSockJsService -> public TransportHandlingSockJsService(TaskScheduler scheduler, Collection<TransportHandler> handlers);1520529117;Create a TransportHandlingSockJsService with given {@link TransportHandler handler} types._@param scheduler a task scheduler for heart-beat messages and removing timed-out sessions__the provided TaskScheduler should be declared as a Spring bean to ensure it gets_initialized at start-up and shuts down when the application stops_@param handlers one or more {@link TransportHandler} implementations to use;public TransportHandlingSockJsService(TaskScheduler scheduler, Collection<TransportHandler> handlers) {_		super(scheduler)___		if (CollectionUtils.isEmpty(handlers)) {_			logger.warn("No transport handlers specified for TransportHandlingSockJsService")__		}_		else {_			for (TransportHandler handler : handlers) {_				handler.initialize(this)__				this.handlers.put(handler.getTransportType(), handler)__			}_		}__		if (jackson2Present) {_			this.messageCodec = new Jackson2SockJsMessageCodec()__		}_	};create,a,transport,handling,sock,js,service,with,given,link,transport,handler,handler,types,param,scheduler,a,task,scheduler,for,heart,beat,messages,and,removing,timed,out,sessions,the,provided,task,scheduler,should,be,declared,as,a,spring,bean,to,ensure,it,gets,initialized,at,start,up,and,shuts,down,when,the,application,stops,param,handlers,one,or,more,link,transport,handler,implementations,to,use;public,transport,handling,sock,js,service,task,scheduler,scheduler,collection,transport,handler,handlers,super,scheduler,if,collection,utils,is,empty,handlers,logger,warn,no,transport,handlers,specified,for,transport,handling,sock,js,service,else,for,transport,handler,handler,handlers,handler,initialize,this,this,handlers,put,handler,get,transport,type,handler,if,jackson2present,this,message,codec,new,jackson2sock,js,message,codec
TransportHandlingSockJsService -> public TransportHandlingSockJsService(TaskScheduler scheduler, Collection<TransportHandler> handlers);1521123475;Create a TransportHandlingSockJsService with given {@link TransportHandler handler} types._@param scheduler a task scheduler for heart-beat messages and removing timed-out sessions__the provided TaskScheduler should be declared as a Spring bean to ensure it gets_initialized at start-up and shuts down when the application stops_@param handlers one or more {@link TransportHandler} implementations to use;public TransportHandlingSockJsService(TaskScheduler scheduler, Collection<TransportHandler> handlers) {_		super(scheduler)___		if (CollectionUtils.isEmpty(handlers)) {_			logger.warn("No transport handlers specified for TransportHandlingSockJsService")__		}_		else {_			for (TransportHandler handler : handlers) {_				handler.initialize(this)__				this.handlers.put(handler.getTransportType(), handler)__			}_		}__		if (jackson2Present) {_			this.messageCodec = new Jackson2SockJsMessageCodec()__		}_	};create,a,transport,handling,sock,js,service,with,given,link,transport,handler,handler,types,param,scheduler,a,task,scheduler,for,heart,beat,messages,and,removing,timed,out,sessions,the,provided,task,scheduler,should,be,declared,as,a,spring,bean,to,ensure,it,gets,initialized,at,start,up,and,shuts,down,when,the,application,stops,param,handlers,one,or,more,link,transport,handler,implementations,to,use;public,transport,handling,sock,js,service,task,scheduler,scheduler,collection,transport,handler,handlers,super,scheduler,if,collection,utils,is,empty,handlers,logger,warn,no,transport,handlers,specified,for,transport,handling,sock,js,service,else,for,transport,handler,handler,handlers,handler,initialize,this,this,handlers,put,handler,get,transport,type,handler,if,jackson2present,this,message,codec,new,jackson2sock,js,message,codec
TransportHandlingSockJsService -> public TransportHandlingSockJsService(TaskScheduler scheduler, Collection<TransportHandler> handlers);1530174524;Create a TransportHandlingSockJsService with given {@link TransportHandler handler} types._@param scheduler a task scheduler for heart-beat messages and removing timed-out sessions__the provided TaskScheduler should be declared as a Spring bean to ensure it gets_initialized at start-up and shuts down when the application stops_@param handlers one or more {@link TransportHandler} implementations to use;public TransportHandlingSockJsService(TaskScheduler scheduler, Collection<TransportHandler> handlers) {_		super(scheduler)___		if (CollectionUtils.isEmpty(handlers)) {_			logger.warn("No transport handlers specified for TransportHandlingSockJsService")__		}_		else {_			for (TransportHandler handler : handlers) {_				handler.initialize(this)__				this.handlers.put(handler.getTransportType(), handler)__			}_		}__		if (jackson2Present) {_			this.messageCodec = new Jackson2SockJsMessageCodec()__		}_	};create,a,transport,handling,sock,js,service,with,given,link,transport,handler,handler,types,param,scheduler,a,task,scheduler,for,heart,beat,messages,and,removing,timed,out,sessions,the,provided,task,scheduler,should,be,declared,as,a,spring,bean,to,ensure,it,gets,initialized,at,start,up,and,shuts,down,when,the,application,stops,param,handlers,one,or,more,link,transport,handler,implementations,to,use;public,transport,handling,sock,js,service,task,scheduler,scheduler,collection,transport,handler,handlers,super,scheduler,if,collection,utils,is,empty,handlers,logger,warn,no,transport,handlers,specified,for,transport,handling,sock,js,service,else,for,transport,handler,handler,handlers,handler,initialize,this,this,handlers,put,handler,get,transport,type,handler,if,jackson2present,this,message,codec,new,jackson2sock,js,message,codec
TransportHandlingSockJsService -> public TransportHandlingSockJsService(TaskScheduler scheduler, Collection<TransportHandler> handlers);1530174524;Create a TransportHandlingSockJsService with given {@link TransportHandler handler} types._@param scheduler a task scheduler for heart-beat messages and removing timed-out sessions__the provided TaskScheduler should be declared as a Spring bean to ensure it gets_initialized at start-up and shuts down when the application stops_@param handlers one or more {@link TransportHandler} implementations to use;public TransportHandlingSockJsService(TaskScheduler scheduler, Collection<TransportHandler> handlers) {_		super(scheduler)___		if (CollectionUtils.isEmpty(handlers)) {_			logger.warn("No transport handlers specified for TransportHandlingSockJsService")__		}_		else {_			for (TransportHandler handler : handlers) {_				handler.initialize(this)__				this.handlers.put(handler.getTransportType(), handler)__			}_		}__		if (jackson2Present) {_			this.messageCodec = new Jackson2SockJsMessageCodec()__		}_	};create,a,transport,handling,sock,js,service,with,given,link,transport,handler,handler,types,param,scheduler,a,task,scheduler,for,heart,beat,messages,and,removing,timed,out,sessions,the,provided,task,scheduler,should,be,declared,as,a,spring,bean,to,ensure,it,gets,initialized,at,start,up,and,shuts,down,when,the,application,stops,param,handlers,one,or,more,link,transport,handler,implementations,to,use;public,transport,handling,sock,js,service,task,scheduler,scheduler,collection,transport,handler,handlers,super,scheduler,if,collection,utils,is,empty,handlers,logger,warn,no,transport,handlers,specified,for,transport,handling,sock,js,service,else,for,transport,handler,handler,handlers,handler,initialize,this,this,handlers,put,handler,get,transport,type,handler,if,jackson2present,this,message,codec,new,jackson2sock,js,message,codec
TransportHandlingSockJsService -> public TransportHandlingSockJsService(TaskScheduler scheduler, Collection<TransportHandler> handlers);1534438291;Create a TransportHandlingSockJsService with given {@link TransportHandler handler} types._@param scheduler a task scheduler for heart-beat messages and removing timed-out sessions__the provided TaskScheduler should be declared as a Spring bean to ensure it gets_initialized at start-up and shuts down when the application stops_@param handlers one or more {@link TransportHandler} implementations to use;public TransportHandlingSockJsService(TaskScheduler scheduler, Collection<TransportHandler> handlers) {_		super(scheduler)___		if (CollectionUtils.isEmpty(handlers)) {_			logger.warn("No transport handlers specified for TransportHandlingSockJsService")__		}_		else {_			for (TransportHandler handler : handlers) {_				handler.initialize(this)__				this.handlers.put(handler.getTransportType(), handler)__			}_		}__		if (jackson2Present) {_			this.messageCodec = new Jackson2SockJsMessageCodec()__		}_	};create,a,transport,handling,sock,js,service,with,given,link,transport,handler,handler,types,param,scheduler,a,task,scheduler,for,heart,beat,messages,and,removing,timed,out,sessions,the,provided,task,scheduler,should,be,declared,as,a,spring,bean,to,ensure,it,gets,initialized,at,start,up,and,shuts,down,when,the,application,stops,param,handlers,one,or,more,link,transport,handler,implementations,to,use;public,transport,handling,sock,js,service,task,scheduler,scheduler,collection,transport,handler,handlers,super,scheduler,if,collection,utils,is,empty,handlers,logger,warn,no,transport,handlers,specified,for,transport,handling,sock,js,service,else,for,transport,handler,handler,handlers,handler,initialize,this,this,handlers,put,handler,get,transport,type,handler,if,jackson2present,this,message,codec,new,jackson2sock,js,message,codec
TransportHandlingSockJsService -> public TransportHandlingSockJsService(TaskScheduler scheduler, Collection<TransportHandler> handlers);1534608905;Create a TransportHandlingSockJsService with given {@link TransportHandler handler} types._@param scheduler a task scheduler for heart-beat messages and removing timed-out sessions__the provided TaskScheduler should be declared as a Spring bean to ensure it gets_initialized at start-up and shuts down when the application stops_@param handlers one or more {@link TransportHandler} implementations to use;public TransportHandlingSockJsService(TaskScheduler scheduler, Collection<TransportHandler> handlers) {_		super(scheduler)___		if (CollectionUtils.isEmpty(handlers)) {_			logger.warn("No transport handlers specified for TransportHandlingSockJsService")__		}_		else {_			for (TransportHandler handler : handlers) {_				handler.initialize(this)__				this.handlers.put(handler.getTransportType(), handler)__			}_		}__		if (jackson2Present) {_			this.messageCodec = new Jackson2SockJsMessageCodec()__		}_	};create,a,transport,handling,sock,js,service,with,given,link,transport,handler,handler,types,param,scheduler,a,task,scheduler,for,heart,beat,messages,and,removing,timed,out,sessions,the,provided,task,scheduler,should,be,declared,as,a,spring,bean,to,ensure,it,gets,initialized,at,start,up,and,shuts,down,when,the,application,stops,param,handlers,one,or,more,link,transport,handler,implementations,to,use;public,transport,handling,sock,js,service,task,scheduler,scheduler,collection,transport,handler,handlers,super,scheduler,if,collection,utils,is,empty,handlers,logger,warn,no,transport,handlers,specified,for,transport,handling,sock,js,service,else,for,transport,handler,handler,handlers,handler,initialize,this,this,handlers,put,handler,get,transport,type,handler,if,jackson2present,this,message,codec,new,jackson2sock,js,message,codec
TransportHandlingSockJsService -> public List<HandshakeInterceptor> getHandshakeInterceptors();1386462352;Return the configured WebSocket handshake request interceptors.;public List<HandshakeInterceptor> getHandshakeInterceptors() {_		return Collections.unmodifiableList(this.interceptors)__	};return,the,configured,web,socket,handshake,request,interceptors;public,list,handshake,interceptor,get,handshake,interceptors,return,collections,unmodifiable,list,this,interceptors
TransportHandlingSockJsService -> public List<HandshakeInterceptor> getHandshakeInterceptors();1395246308;Return the configured WebSocket handshake request interceptors.;public List<HandshakeInterceptor> getHandshakeInterceptors() {_		return Collections.unmodifiableList(this.interceptors)__	};return,the,configured,web,socket,handshake,request,interceptors;public,list,handshake,interceptor,get,handshake,interceptors,return,collections,unmodifiable,list,this,interceptors
TransportHandlingSockJsService -> public List<HandshakeInterceptor> getHandshakeInterceptors();1395543588;Return the configured WebSocket handshake request interceptors.;public List<HandshakeInterceptor> getHandshakeInterceptors() {_		return Collections.unmodifiableList(this.interceptors)__	};return,the,configured,web,socket,handshake,request,interceptors;public,list,handshake,interceptor,get,handshake,interceptors,return,collections,unmodifiable,list,this,interceptors
TransportHandlingSockJsService -> public List<HandshakeInterceptor> getHandshakeInterceptors();1403719829;Return the configured WebSocket handshake request interceptors.;public List<HandshakeInterceptor> getHandshakeInterceptors() {_		return Collections.unmodifiableList(this.interceptors)__	};return,the,configured,web,socket,handshake,request,interceptors;public,list,handshake,interceptor,get,handshake,interceptors,return,collections,unmodifiable,list,this,interceptors
TransportHandlingSockJsService -> public List<HandshakeInterceptor> getHandshakeInterceptors();1403856366;Return the configured WebSocket handshake request interceptors.;public List<HandshakeInterceptor> getHandshakeInterceptors() {_		return Collections.unmodifiableList(this.interceptors)__	};return,the,configured,web,socket,handshake,request,interceptors;public,list,handshake,interceptor,get,handshake,interceptors,return,collections,unmodifiable,list,this,interceptors
TransportHandlingSockJsService -> public List<HandshakeInterceptor> getHandshakeInterceptors();1404880799;Return the configured WebSocket handshake request interceptors.;public List<HandshakeInterceptor> getHandshakeInterceptors() {_		return Collections.unmodifiableList(this.interceptors)__	};return,the,configured,web,socket,handshake,request,interceptors;public,list,handshake,interceptor,get,handshake,interceptors,return,collections,unmodifiable,list,this,interceptors
TransportHandlingSockJsService -> public List<HandshakeInterceptor> getHandshakeInterceptors();1407154420;Return the configured WebSocket handshake request interceptors.;public List<HandshakeInterceptor> getHandshakeInterceptors() {_		return Collections.unmodifiableList(this.interceptors)__	};return,the,configured,web,socket,handshake,request,interceptors;public,list,handshake,interceptor,get,handshake,interceptors,return,collections,unmodifiable,list,this,interceptors
TransportHandlingSockJsService -> public List<HandshakeInterceptor> getHandshakeInterceptors();1411567635;Return the configured WebSocket handshake request interceptors.;public List<HandshakeInterceptor> getHandshakeInterceptors() {_		return Collections.unmodifiableList(this.interceptors)__	};return,the,configured,web,socket,handshake,request,interceptors;public,list,handshake,interceptor,get,handshake,interceptors,return,collections,unmodifiable,list,this,interceptors
TransportHandlingSockJsService -> public List<HandshakeInterceptor> getHandshakeInterceptors();1413848647;Return the configured WebSocket handshake request interceptors.;public List<HandshakeInterceptor> getHandshakeInterceptors() {_		return Collections.unmodifiableList(this.interceptors)__	};return,the,configured,web,socket,handshake,request,interceptors;public,list,handshake,interceptor,get,handshake,interceptors,return,collections,unmodifiable,list,this,interceptors
TransportHandlingSockJsService -> public List<HandshakeInterceptor> getHandshakeInterceptors();1414354684;Return the configured WebSocket handshake request interceptors.;public List<HandshakeInterceptor> getHandshakeInterceptors() {_		return Collections.unmodifiableList(this.interceptors)__	};return,the,configured,web,socket,handshake,request,interceptors;public,list,handshake,interceptor,get,handshake,interceptors,return,collections,unmodifiable,list,this,interceptors
TransportHandlingSockJsService -> public List<HandshakeInterceptor> getHandshakeInterceptors();1414412881;Return the configured WebSocket handshake request interceptors.;public List<HandshakeInterceptor> getHandshakeInterceptors() {_		return Collections.unmodifiableList(this.interceptors)__	};return,the,configured,web,socket,handshake,request,interceptors;public,list,handshake,interceptor,get,handshake,interceptors,return,collections,unmodifiable,list,this,interceptors
TransportHandlingSockJsService -> public List<HandshakeInterceptor> getHandshakeInterceptors();1414415063;Return the configured WebSocket handshake request interceptors.;public List<HandshakeInterceptor> getHandshakeInterceptors() {_		return Collections.unmodifiableList(this.interceptors)__	};return,the,configured,web,socket,handshake,request,interceptors;public,list,handshake,interceptor,get,handshake,interceptors,return,collections,unmodifiable,list,this,interceptors
TransportHandlingSockJsService -> public List<HandshakeInterceptor> getHandshakeInterceptors();1414619099;Return the configured WebSocket handshake request interceptors.;public List<HandshakeInterceptor> getHandshakeInterceptors() {_		return Collections.unmodifiableList(this.interceptors)__	};return,the,configured,web,socket,handshake,request,interceptors;public,list,handshake,interceptor,get,handshake,interceptors,return,collections,unmodifiable,list,this,interceptors
TransportHandlingSockJsService -> public List<HandshakeInterceptor> getHandshakeInterceptors();1417540415;Return the configured WebSocket handshake request interceptors.;public List<HandshakeInterceptor> getHandshakeInterceptors() {_		return Collections.unmodifiableList(this.interceptors)__	};return,the,configured,web,socket,handshake,request,interceptors;public,list,handshake,interceptor,get,handshake,interceptors,return,collections,unmodifiable,list,this,interceptors
TransportHandlingSockJsService -> public List<HandshakeInterceptor> getHandshakeInterceptors();1424361139;Return the configured WebSocket handshake request interceptors.;public List<HandshakeInterceptor> getHandshakeInterceptors() {_		return Collections.unmodifiableList(this.interceptors)__	};return,the,configured,web,socket,handshake,request,interceptors;public,list,handshake,interceptor,get,handshake,interceptors,return,collections,unmodifiable,list,this,interceptors
TransportHandlingSockJsService -> public List<HandshakeInterceptor> getHandshakeInterceptors();1427234595;Return the configured WebSocket handshake request interceptors.;public List<HandshakeInterceptor> getHandshakeInterceptors() {_		return this.interceptors__	};return,the,configured,web,socket,handshake,request,interceptors;public,list,handshake,interceptor,get,handshake,interceptors,return,this,interceptors
TransportHandlingSockJsService -> public List<HandshakeInterceptor> getHandshakeInterceptors();1427983931;Return the configured WebSocket handshake request interceptors.;public List<HandshakeInterceptor> getHandshakeInterceptors() {_		return this.interceptors__	};return,the,configured,web,socket,handshake,request,interceptors;public,list,handshake,interceptor,get,handshake,interceptors,return,this,interceptors
TransportHandlingSockJsService -> public List<HandshakeInterceptor> getHandshakeInterceptors();1435026644;Return the configured WebSocket handshake request interceptors.;public List<HandshakeInterceptor> getHandshakeInterceptors() {_		return this.interceptors__	};return,the,configured,web,socket,handshake,request,interceptors;public,list,handshake,interceptor,get,handshake,interceptors,return,this,interceptors
TransportHandlingSockJsService -> public List<HandshakeInterceptor> getHandshakeInterceptors();1444217152;Return the configured WebSocket handshake request interceptors.;public List<HandshakeInterceptor> getHandshakeInterceptors() {_		return this.interceptors__	};return,the,configured,web,socket,handshake,request,interceptors;public,list,handshake,interceptor,get,handshake,interceptors,return,this,interceptors
TransportHandlingSockJsService -> public List<HandshakeInterceptor> getHandshakeInterceptors();1449242513;Return the configured WebSocket handshake request interceptors.;public List<HandshakeInterceptor> getHandshakeInterceptors() {_		return this.interceptors__	};return,the,configured,web,socket,handshake,request,interceptors;public,list,handshake,interceptor,get,handshake,interceptors,return,this,interceptors
TransportHandlingSockJsService -> public List<HandshakeInterceptor> getHandshakeInterceptors();1449660404;Return the configured WebSocket handshake request interceptors.;public List<HandshakeInterceptor> getHandshakeInterceptors() {_		return this.interceptors__	};return,the,configured,web,socket,handshake,request,interceptors;public,list,handshake,interceptor,get,handshake,interceptors,return,this,interceptors
TransportHandlingSockJsService -> public List<HandshakeInterceptor> getHandshakeInterceptors();1459792887;Return the configured WebSocket handshake request interceptors.;public List<HandshakeInterceptor> getHandshakeInterceptors() {_		return this.interceptors__	};return,the,configured,web,socket,handshake,request,interceptors;public,list,handshake,interceptor,get,handshake,interceptors,return,this,interceptors
TransportHandlingSockJsService -> public List<HandshakeInterceptor> getHandshakeInterceptors();1459795890;Return the configured WebSocket handshake request interceptors.;public List<HandshakeInterceptor> getHandshakeInterceptors() {_		return this.interceptors__	};return,the,configured,web,socket,handshake,request,interceptors;public,list,handshake,interceptor,get,handshake,interceptors,return,this,interceptors
TransportHandlingSockJsService -> public List<HandshakeInterceptor> getHandshakeInterceptors();1467730834;Return the configured WebSocket handshake request interceptors.;public List<HandshakeInterceptor> getHandshakeInterceptors() {_		return this.interceptors__	};return,the,configured,web,socket,handshake,request,interceptors;public,list,handshake,interceptor,get,handshake,interceptors,return,this,interceptors
TransportHandlingSockJsService -> public List<HandshakeInterceptor> getHandshakeInterceptors();1478158530;Return the configured WebSocket handshake request interceptors.;public List<HandshakeInterceptor> getHandshakeInterceptors() {_		return this.interceptors__	};return,the,configured,web,socket,handshake,request,interceptors;public,list,handshake,interceptor,get,handshake,interceptors,return,this,interceptors
TransportHandlingSockJsService -> public List<HandshakeInterceptor> getHandshakeInterceptors();1496837955;Return the configured WebSocket handshake request interceptors.;public List<HandshakeInterceptor> getHandshakeInterceptors() {_		return this.interceptors__	};return,the,configured,web,socket,handshake,request,interceptors;public,list,handshake,interceptor,get,handshake,interceptors,return,this,interceptors
TransportHandlingSockJsService -> public List<HandshakeInterceptor> getHandshakeInterceptors();1497341397;Return the configured WebSocket handshake request interceptors.;public List<HandshakeInterceptor> getHandshakeInterceptors() {_		return this.interceptors__	};return,the,configured,web,socket,handshake,request,interceptors;public,list,handshake,interceptor,get,handshake,interceptors,return,this,interceptors
TransportHandlingSockJsService -> public List<HandshakeInterceptor> getHandshakeInterceptors();1498780456;Return the configured WebSocket handshake request interceptors.;public List<HandshakeInterceptor> getHandshakeInterceptors() {_		return this.interceptors__	};return,the,configured,web,socket,handshake,request,interceptors;public,list,handshake,interceptor,get,handshake,interceptors,return,this,interceptors
TransportHandlingSockJsService -> public List<HandshakeInterceptor> getHandshakeInterceptors();1518260973;Return the configured WebSocket handshake request interceptors.;public List<HandshakeInterceptor> getHandshakeInterceptors() {_		return this.interceptors__	};return,the,configured,web,socket,handshake,request,interceptors;public,list,handshake,interceptor,get,handshake,interceptors,return,this,interceptors
TransportHandlingSockJsService -> public List<HandshakeInterceptor> getHandshakeInterceptors();1518987682;Return the configured WebSocket handshake request interceptors.;public List<HandshakeInterceptor> getHandshakeInterceptors() {_		return this.interceptors__	};return,the,configured,web,socket,handshake,request,interceptors;public,list,handshake,interceptor,get,handshake,interceptors,return,this,interceptors
TransportHandlingSockJsService -> public List<HandshakeInterceptor> getHandshakeInterceptors();1520529117;Return the configured WebSocket handshake request interceptors.;public List<HandshakeInterceptor> getHandshakeInterceptors() {_		return this.interceptors__	};return,the,configured,web,socket,handshake,request,interceptors;public,list,handshake,interceptor,get,handshake,interceptors,return,this,interceptors
TransportHandlingSockJsService -> public List<HandshakeInterceptor> getHandshakeInterceptors();1521123475;Return the configured WebSocket handshake request interceptors.;public List<HandshakeInterceptor> getHandshakeInterceptors() {_		return this.interceptors__	};return,the,configured,web,socket,handshake,request,interceptors;public,list,handshake,interceptor,get,handshake,interceptors,return,this,interceptors
TransportHandlingSockJsService -> public List<HandshakeInterceptor> getHandshakeInterceptors();1530174524;Return the configured WebSocket handshake request interceptors.;public List<HandshakeInterceptor> getHandshakeInterceptors() {_		return this.interceptors__	};return,the,configured,web,socket,handshake,request,interceptors;public,list,handshake,interceptor,get,handshake,interceptors,return,this,interceptors
TransportHandlingSockJsService -> public List<HandshakeInterceptor> getHandshakeInterceptors();1530174524;Return the configured WebSocket handshake request interceptors.;public List<HandshakeInterceptor> getHandshakeInterceptors() {_		return this.interceptors__	};return,the,configured,web,socket,handshake,request,interceptors;public,list,handshake,interceptor,get,handshake,interceptors,return,this,interceptors
TransportHandlingSockJsService -> public List<HandshakeInterceptor> getHandshakeInterceptors();1534438291;Return the configured WebSocket handshake request interceptors.;public List<HandshakeInterceptor> getHandshakeInterceptors() {_		return this.interceptors__	};return,the,configured,web,socket,handshake,request,interceptors;public,list,handshake,interceptor,get,handshake,interceptors,return,this,interceptors
TransportHandlingSockJsService -> public List<HandshakeInterceptor> getHandshakeInterceptors();1534608905;Return the configured WebSocket handshake request interceptors.;public List<HandshakeInterceptor> getHandshakeInterceptors() {_		return this.interceptors__	};return,the,configured,web,socket,handshake,request,interceptors;public,list,handshake,interceptor,get,handshake,interceptors,return,this,interceptors
TransportHandlingSockJsService -> public void setHandshakeInterceptors(@Nullable List<HandshakeInterceptor> interceptors);1496837955;Configure one or more WebSocket handshake request interceptors.;public void setHandshakeInterceptors(@Nullable List<HandshakeInterceptor> interceptors) {_		this.interceptors.clear()__		if (interceptors != null) {_			this.interceptors.addAll(interceptors)__		}_	};configure,one,or,more,web,socket,handshake,request,interceptors;public,void,set,handshake,interceptors,nullable,list,handshake,interceptor,interceptors,this,interceptors,clear,if,interceptors,null,this,interceptors,add,all,interceptors
TransportHandlingSockJsService -> public void setHandshakeInterceptors(@Nullable List<HandshakeInterceptor> interceptors);1497341397;Configure one or more WebSocket handshake request interceptors.;public void setHandshakeInterceptors(@Nullable List<HandshakeInterceptor> interceptors) {_		this.interceptors.clear()__		if (interceptors != null) {_			this.interceptors.addAll(interceptors)__		}_	};configure,one,or,more,web,socket,handshake,request,interceptors;public,void,set,handshake,interceptors,nullable,list,handshake,interceptor,interceptors,this,interceptors,clear,if,interceptors,null,this,interceptors,add,all,interceptors
TransportHandlingSockJsService -> public void setHandshakeInterceptors(@Nullable List<HandshakeInterceptor> interceptors);1498780456;Configure one or more WebSocket handshake request interceptors.;public void setHandshakeInterceptors(@Nullable List<HandshakeInterceptor> interceptors) {_		this.interceptors.clear()__		if (interceptors != null) {_			this.interceptors.addAll(interceptors)__		}_	};configure,one,or,more,web,socket,handshake,request,interceptors;public,void,set,handshake,interceptors,nullable,list,handshake,interceptor,interceptors,this,interceptors,clear,if,interceptors,null,this,interceptors,add,all,interceptors
TransportHandlingSockJsService -> public void setHandshakeInterceptors(@Nullable List<HandshakeInterceptor> interceptors);1518260973;Configure one or more WebSocket handshake request interceptors.;public void setHandshakeInterceptors(@Nullable List<HandshakeInterceptor> interceptors) {_		this.interceptors.clear()__		if (interceptors != null) {_			this.interceptors.addAll(interceptors)__		}_	};configure,one,or,more,web,socket,handshake,request,interceptors;public,void,set,handshake,interceptors,nullable,list,handshake,interceptor,interceptors,this,interceptors,clear,if,interceptors,null,this,interceptors,add,all,interceptors
TransportHandlingSockJsService -> public void setHandshakeInterceptors(@Nullable List<HandshakeInterceptor> interceptors);1518987682;Configure one or more WebSocket handshake request interceptors.;public void setHandshakeInterceptors(@Nullable List<HandshakeInterceptor> interceptors) {_		this.interceptors.clear()__		if (interceptors != null) {_			this.interceptors.addAll(interceptors)__		}_	};configure,one,or,more,web,socket,handshake,request,interceptors;public,void,set,handshake,interceptors,nullable,list,handshake,interceptor,interceptors,this,interceptors,clear,if,interceptors,null,this,interceptors,add,all,interceptors
TransportHandlingSockJsService -> public void setHandshakeInterceptors(@Nullable List<HandshakeInterceptor> interceptors);1520529117;Configure one or more WebSocket handshake request interceptors.;public void setHandshakeInterceptors(@Nullable List<HandshakeInterceptor> interceptors) {_		this.interceptors.clear()__		if (interceptors != null) {_			this.interceptors.addAll(interceptors)__		}_	};configure,one,or,more,web,socket,handshake,request,interceptors;public,void,set,handshake,interceptors,nullable,list,handshake,interceptor,interceptors,this,interceptors,clear,if,interceptors,null,this,interceptors,add,all,interceptors
TransportHandlingSockJsService -> public void setHandshakeInterceptors(@Nullable List<HandshakeInterceptor> interceptors);1521123475;Configure one or more WebSocket handshake request interceptors.;public void setHandshakeInterceptors(@Nullable List<HandshakeInterceptor> interceptors) {_		this.interceptors.clear()__		if (interceptors != null) {_			this.interceptors.addAll(interceptors)__		}_	};configure,one,or,more,web,socket,handshake,request,interceptors;public,void,set,handshake,interceptors,nullable,list,handshake,interceptor,interceptors,this,interceptors,clear,if,interceptors,null,this,interceptors,add,all,interceptors
TransportHandlingSockJsService -> public void setHandshakeInterceptors(@Nullable List<HandshakeInterceptor> interceptors);1530174524;Configure one or more WebSocket handshake request interceptors.;public void setHandshakeInterceptors(@Nullable List<HandshakeInterceptor> interceptors) {_		this.interceptors.clear()__		if (interceptors != null) {_			this.interceptors.addAll(interceptors)__		}_	};configure,one,or,more,web,socket,handshake,request,interceptors;public,void,set,handshake,interceptors,nullable,list,handshake,interceptor,interceptors,this,interceptors,clear,if,interceptors,null,this,interceptors,add,all,interceptors
TransportHandlingSockJsService -> public void setHandshakeInterceptors(@Nullable List<HandshakeInterceptor> interceptors);1530174524;Configure one or more WebSocket handshake request interceptors.;public void setHandshakeInterceptors(@Nullable List<HandshakeInterceptor> interceptors) {_		this.interceptors.clear()__		if (interceptors != null) {_			this.interceptors.addAll(interceptors)__		}_	};configure,one,or,more,web,socket,handshake,request,interceptors;public,void,set,handshake,interceptors,nullable,list,handshake,interceptor,interceptors,this,interceptors,clear,if,interceptors,null,this,interceptors,add,all,interceptors
TransportHandlingSockJsService -> public void setHandshakeInterceptors(@Nullable List<HandshakeInterceptor> interceptors);1534438291;Configure one or more WebSocket handshake request interceptors.;public void setHandshakeInterceptors(@Nullable List<HandshakeInterceptor> interceptors) {_		this.interceptors.clear()__		if (interceptors != null) {_			this.interceptors.addAll(interceptors)__		}_	};configure,one,or,more,web,socket,handshake,request,interceptors;public,void,set,handshake,interceptors,nullable,list,handshake,interceptor,interceptors,this,interceptors,clear,if,interceptors,null,this,interceptors,add,all,interceptors
TransportHandlingSockJsService -> public void setHandshakeInterceptors(@Nullable List<HandshakeInterceptor> interceptors);1534608905;Configure one or more WebSocket handshake request interceptors.;public void setHandshakeInterceptors(@Nullable List<HandshakeInterceptor> interceptors) {_		this.interceptors.clear()__		if (interceptors != null) {_			this.interceptors.addAll(interceptors)__		}_	};configure,one,or,more,web,socket,handshake,request,interceptors;public,void,set,handshake,interceptors,nullable,list,handshake,interceptor,interceptors,this,interceptors,clear,if,interceptors,null,this,interceptors,add,all,interceptors
