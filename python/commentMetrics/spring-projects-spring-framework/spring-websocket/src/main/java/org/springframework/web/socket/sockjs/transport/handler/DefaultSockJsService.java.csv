# id;timestamp;commentText;codeText;commentWords;codeWords
DefaultSockJsService -> public DefaultSockJsService(TaskScheduler taskScheduler);1375321376;Create an instance with default {@link TransportHandler transport handler} types.__@param taskScheduler a task scheduler for heart-beat messages and removing_timed-out sessions_ the provided TaskScheduler should be declared as a_Spring bean to ensure it is initialized at start up and shut down when the_application stops.;public DefaultSockJsService(TaskScheduler taskScheduler) {_		super(taskScheduler)__		addTransportHandlers(getDefaultTransportHandlers())__		initMessageCodec()__	};create,an,instance,with,default,link,transport,handler,transport,handler,types,param,task,scheduler,a,task,scheduler,for,heart,beat,messages,and,removing,timed,out,sessions,the,provided,task,scheduler,should,be,declared,as,a,spring,bean,to,ensure,it,is,initialized,at,start,up,and,shut,down,when,the,application,stops;public,default,sock,js,service,task,scheduler,task,scheduler,super,task,scheduler,add,transport,handlers,get,default,transport,handlers,init,message,codec
DefaultSockJsService -> public DefaultSockJsService(TaskScheduler taskScheduler);1375461043;Create an instance with default {@link TransportHandler transport handler} types.__@param taskScheduler a task scheduler for heart-beat messages and removing_timed-out sessions_ the provided TaskScheduler should be declared as a_Spring bean to ensure it is initialized at start up and shut down when the_application stops.;public DefaultSockJsService(TaskScheduler taskScheduler) {_		super(taskScheduler)__		addTransportHandlers(getDefaultTransportHandlers())__		initMessageCodec()__	};create,an,instance,with,default,link,transport,handler,transport,handler,types,param,task,scheduler,a,task,scheduler,for,heart,beat,messages,and,removing,timed,out,sessions,the,provided,task,scheduler,should,be,declared,as,a,spring,bean,to,ensure,it,is,initialized,at,start,up,and,shut,down,when,the,application,stops;public,default,sock,js,service,task,scheduler,task,scheduler,super,task,scheduler,add,transport,handlers,get,default,transport,handlers,init,message,codec
DefaultSockJsService -> public DefaultSockJsService(TaskScheduler taskScheduler);1375542207;Create an instance with default {@link TransportHandler transport handler} types.__@param taskScheduler a task scheduler for heart-beat messages and removing_timed-out sessions_ the provided TaskScheduler should be declared as a_Spring bean to ensure it is initialized at start up and shut down when the_application stops.;public DefaultSockJsService(TaskScheduler taskScheduler) {_		super(taskScheduler)__		addTransportHandlers(getDefaultTransportHandlers())__		initMessageCodec()__	};create,an,instance,with,default,link,transport,handler,transport,handler,types,param,task,scheduler,a,task,scheduler,for,heart,beat,messages,and,removing,timed,out,sessions,the,provided,task,scheduler,should,be,declared,as,a,spring,bean,to,ensure,it,is,initialized,at,start,up,and,shut,down,when,the,application,stops;public,default,sock,js,service,task,scheduler,task,scheduler,super,task,scheduler,add,transport,handlers,get,default,transport,handlers,init,message,codec
DefaultSockJsService -> public DefaultSockJsService(TaskScheduler taskScheduler);1376429280;Create an instance with default {@link TransportHandler transport handler} types.__@param taskScheduler a task scheduler for heart-beat messages and removing_timed-out sessions_ the provided TaskScheduler should be declared as a_Spring bean to ensure it is initialized at start up and shut down when the_application stops.;public DefaultSockJsService(TaskScheduler taskScheduler) {_		super(taskScheduler)__		addTransportHandlers(getDefaultTransportHandlers())__		initMessageCodec()__	};create,an,instance,with,default,link,transport,handler,transport,handler,types,param,task,scheduler,a,task,scheduler,for,heart,beat,messages,and,removing,timed,out,sessions,the,provided,task,scheduler,should,be,declared,as,a,spring,bean,to,ensure,it,is,initialized,at,start,up,and,shut,down,when,the,application,stops;public,default,sock,js,service,task,scheduler,task,scheduler,super,task,scheduler,add,transport,handlers,get,default,transport,handlers,init,message,codec
DefaultSockJsService -> public DefaultSockJsService(TaskScheduler taskScheduler);1376429280;Create an instance with default {@link TransportHandler transport handler} types.__@param taskScheduler a task scheduler for heart-beat messages and removing_timed-out sessions_ the provided TaskScheduler should be declared as a_Spring bean to ensure it is initialized at start up and shut down when the_application stops.;public DefaultSockJsService(TaskScheduler taskScheduler) {_		this(taskScheduler, null)__	};create,an,instance,with,default,link,transport,handler,transport,handler,types,param,task,scheduler,a,task,scheduler,for,heart,beat,messages,and,removing,timed,out,sessions,the,provided,task,scheduler,should,be,declared,as,a,spring,bean,to,ensure,it,is,initialized,at,start,up,and,shut,down,when,the,application,stops;public,default,sock,js,service,task,scheduler,task,scheduler,this,task,scheduler,null
DefaultSockJsService -> public DefaultSockJsService(TaskScheduler taskScheduler);1376429281;Create an instance with default {@link TransportHandler transport handler} types.__@param taskScheduler a task scheduler for heart-beat messages and removing_timed-out sessions_ the provided TaskScheduler should be declared as a_Spring bean to ensure it is initialized at start up and shut down when the_application stops.;public DefaultSockJsService(TaskScheduler taskScheduler) {_		this(taskScheduler, null)__	};create,an,instance,with,default,link,transport,handler,transport,handler,types,param,task,scheduler,a,task,scheduler,for,heart,beat,messages,and,removing,timed,out,sessions,the,provided,task,scheduler,should,be,declared,as,a,spring,bean,to,ensure,it,is,initialized,at,start,up,and,shut,down,when,the,application,stops;public,default,sock,js,service,task,scheduler,task,scheduler,this,task,scheduler,null
DefaultSockJsService -> public DefaultSockJsService(TaskScheduler taskScheduler);1376489702;Create an instance with default {@link TransportHandler transport handler} types.__@param taskScheduler a task scheduler for heart-beat messages and removing_timed-out sessions_ the provided TaskScheduler should be declared as a_Spring bean to ensure it is initialized at start up and shut down when the_application stops.;public DefaultSockJsService(TaskScheduler taskScheduler) {_		this(taskScheduler, null)__	};create,an,instance,with,default,link,transport,handler,transport,handler,types,param,task,scheduler,a,task,scheduler,for,heart,beat,messages,and,removing,timed,out,sessions,the,provided,task,scheduler,should,be,declared,as,a,spring,bean,to,ensure,it,is,initialized,at,start,up,and,shut,down,when,the,application,stops;public,default,sock,js,service,task,scheduler,task,scheduler,this,task,scheduler,null
DefaultSockJsService -> public DefaultSockJsService(TaskScheduler taskScheduler);1377218103;Create an instance with default {@link TransportHandler transport handler} types.__@param taskScheduler a task scheduler for heart-beat messages and removing_timed-out sessions_ the provided TaskScheduler should be declared as a_Spring bean to ensure it is initialized at start up and shut down when the_application stops.;public DefaultSockJsService(TaskScheduler taskScheduler) {_		this(taskScheduler, null)__	};create,an,instance,with,default,link,transport,handler,transport,handler,types,param,task,scheduler,a,task,scheduler,for,heart,beat,messages,and,removing,timed,out,sessions,the,provided,task,scheduler,should,be,declared,as,a,spring,bean,to,ensure,it,is,initialized,at,start,up,and,shut,down,when,the,application,stops;public,default,sock,js,service,task,scheduler,task,scheduler,this,task,scheduler,null
DefaultSockJsService -> public DefaultSockJsService(TaskScheduler taskScheduler);1377693833;Create an instance with default {@link TransportHandler transport handler} types.__@param taskScheduler a task scheduler for heart-beat messages and removing_timed-out sessions_ the provided TaskScheduler should be declared as a_Spring bean to ensure it is initialized at start up and shut down when the_application stops.;public DefaultSockJsService(TaskScheduler taskScheduler) {_		this(taskScheduler, null)__	};create,an,instance,with,default,link,transport,handler,transport,handler,types,param,task,scheduler,a,task,scheduler,for,heart,beat,messages,and,removing,timed,out,sessions,the,provided,task,scheduler,should,be,declared,as,a,spring,bean,to,ensure,it,is,initialized,at,start,up,and,shut,down,when,the,application,stops;public,default,sock,js,service,task,scheduler,task,scheduler,this,task,scheduler,null
DefaultSockJsService -> public DefaultSockJsService(TaskScheduler taskScheduler);1380214379;Create an instance with default {@link TransportHandler transport handler} types.__@param taskScheduler a task scheduler for heart-beat messages and removing_timed-out sessions_ the provided TaskScheduler should be declared as a_Spring bean to ensure it is initialized at start up and shut down when the_application stops.;public DefaultSockJsService(TaskScheduler taskScheduler) {_		this(taskScheduler, null)__	};create,an,instance,with,default,link,transport,handler,transport,handler,types,param,task,scheduler,a,task,scheduler,for,heart,beat,messages,and,removing,timed,out,sessions,the,provided,task,scheduler,should,be,declared,as,a,spring,bean,to,ensure,it,is,initialized,at,start,up,and,shut,down,when,the,application,stops;public,default,sock,js,service,task,scheduler,task,scheduler,this,task,scheduler,null
DefaultSockJsService -> public DefaultSockJsService(TaskScheduler taskScheduler);1385412762;Create an instance with default {@link TransportHandler transport handler} types.__@param taskScheduler a task scheduler for heart-beat messages and removing_timed-out sessions_ the provided TaskScheduler should be declared as a_Spring bean to ensure it is initialized at start up and shut down when the_application stops.;public DefaultSockJsService(TaskScheduler taskScheduler) {_		this(taskScheduler, null)__	};create,an,instance,with,default,link,transport,handler,transport,handler,types,param,task,scheduler,a,task,scheduler,for,heart,beat,messages,and,removing,timed,out,sessions,the,provided,task,scheduler,should,be,declared,as,a,spring,bean,to,ensure,it,is,initialized,at,start,up,and,shut,down,when,the,application,stops;public,default,sock,js,service,task,scheduler,task,scheduler,this,task,scheduler,null
DefaultSockJsService -> public DefaultSockJsService(TaskScheduler taskScheduler);1385507478;Create an instance with default {@link TransportHandler transport handler} types._@param taskScheduler a task scheduler for heart-beat messages and removing_timed-out sessions_ the provided TaskScheduler should be declared as a_Spring bean to ensure it is initialized at start up and shut down when the_application stops.;public DefaultSockJsService(TaskScheduler taskScheduler) {_		this(taskScheduler, null)__	};create,an,instance,with,default,link,transport,handler,transport,handler,types,param,task,scheduler,a,task,scheduler,for,heart,beat,messages,and,removing,timed,out,sessions,the,provided,task,scheduler,should,be,declared,as,a,spring,bean,to,ensure,it,is,initialized,at,start,up,and,shut,down,when,the,application,stops;public,default,sock,js,service,task,scheduler,task,scheduler,this,task,scheduler,null
DefaultSockJsService -> public DefaultSockJsService(TaskScheduler taskScheduler);1386019952;Create an instance with default {@link TransportHandler transport handler} types._@param taskScheduler a task scheduler for heart-beat messages and removing_timed-out sessions_ the provided TaskScheduler should be declared as a_Spring bean to ensure it is initialized at start up and shut down when the_application stops.;public DefaultSockJsService(TaskScheduler taskScheduler) {_		this(taskScheduler, null)__	};create,an,instance,with,default,link,transport,handler,transport,handler,types,param,task,scheduler,a,task,scheduler,for,heart,beat,messages,and,removing,timed,out,sessions,the,provided,task,scheduler,should,be,declared,as,a,spring,bean,to,ensure,it,is,initialized,at,start,up,and,shut,down,when,the,application,stops;public,default,sock,js,service,task,scheduler,task,scheduler,this,task,scheduler,null
DefaultSockJsService -> public void setHandshakeInterceptors(List<HandshakeInterceptor> interceptors);1376429281;Configure one or more WebSocket handshake request interceptors.;public void setHandshakeInterceptors(List<HandshakeInterceptor> interceptors) {_		this.interceptors.clear()__		if (interceptors != null) {_			this.interceptors.addAll(interceptors)__		}_	};configure,one,or,more,web,socket,handshake,request,interceptors;public,void,set,handshake,interceptors,list,handshake,interceptor,interceptors,this,interceptors,clear,if,interceptors,null,this,interceptors,add,all,interceptors
DefaultSockJsService -> public void setHandshakeInterceptors(List<HandshakeInterceptor> interceptors);1376489702;Configure one or more WebSocket handshake request interceptors.;public void setHandshakeInterceptors(List<HandshakeInterceptor> interceptors) {_		this.interceptors.clear()__		if (interceptors != null) {_			this.interceptors.addAll(interceptors)__		}_	};configure,one,or,more,web,socket,handshake,request,interceptors;public,void,set,handshake,interceptors,list,handshake,interceptor,interceptors,this,interceptors,clear,if,interceptors,null,this,interceptors,add,all,interceptors
DefaultSockJsService -> public void setHandshakeInterceptors(List<HandshakeInterceptor> interceptors);1377218103;Configure one or more WebSocket handshake request interceptors.;public void setHandshakeInterceptors(List<HandshakeInterceptor> interceptors) {_		this.interceptors.clear()__		if (interceptors != null) {_			this.interceptors.addAll(interceptors)__		}_	};configure,one,or,more,web,socket,handshake,request,interceptors;public,void,set,handshake,interceptors,list,handshake,interceptor,interceptors,this,interceptors,clear,if,interceptors,null,this,interceptors,add,all,interceptors
DefaultSockJsService -> public void setHandshakeInterceptors(List<HandshakeInterceptor> interceptors);1377693833;Configure one or more WebSocket handshake request interceptors.;public void setHandshakeInterceptors(List<HandshakeInterceptor> interceptors) {_		this.interceptors.clear()__		if (interceptors != null) {_			this.interceptors.addAll(interceptors)__		}_	};configure,one,or,more,web,socket,handshake,request,interceptors;public,void,set,handshake,interceptors,list,handshake,interceptor,interceptors,this,interceptors,clear,if,interceptors,null,this,interceptors,add,all,interceptors
DefaultSockJsService -> public void setHandshakeInterceptors(List<HandshakeInterceptor> interceptors);1380214379;Configure one or more WebSocket handshake request interceptors.;public void setHandshakeInterceptors(List<HandshakeInterceptor> interceptors) {_		this.interceptors.clear()__		if (interceptors != null) {_			this.interceptors.addAll(interceptors)__		}_	};configure,one,or,more,web,socket,handshake,request,interceptors;public,void,set,handshake,interceptors,list,handshake,interceptor,interceptors,this,interceptors,clear,if,interceptors,null,this,interceptors,add,all,interceptors
DefaultSockJsService -> public void setHandshakeInterceptors(List<HandshakeInterceptor> interceptors);1385412762;Configure one or more WebSocket handshake request interceptors.;public void setHandshakeInterceptors(List<HandshakeInterceptor> interceptors) {_		this.interceptors.clear()__		if (interceptors != null) {_			this.interceptors.addAll(interceptors)__		}_	};configure,one,or,more,web,socket,handshake,request,interceptors;public,void,set,handshake,interceptors,list,handshake,interceptor,interceptors,this,interceptors,clear,if,interceptors,null,this,interceptors,add,all,interceptors
DefaultSockJsService -> public void setHandshakeInterceptors(List<HandshakeInterceptor> interceptors);1385507478;Configure one or more WebSocket handshake request interceptors.;public void setHandshakeInterceptors(List<HandshakeInterceptor> interceptors) {_		this.interceptors.clear()__		if (interceptors != null) {_			this.interceptors.addAll(interceptors)__		}_	};configure,one,or,more,web,socket,handshake,request,interceptors;public,void,set,handshake,interceptors,list,handshake,interceptor,interceptors,this,interceptors,clear,if,interceptors,null,this,interceptors,add,all,interceptors
DefaultSockJsService -> public void setHandshakeInterceptors(List<HandshakeInterceptor> interceptors);1386019952;Configure one or more WebSocket handshake request interceptors.;public void setHandshakeInterceptors(List<HandshakeInterceptor> interceptors) {_		this.interceptors.clear()__		if (interceptors != null) {_			this.interceptors.addAll(interceptors)__		}_	};configure,one,or,more,web,socket,handshake,request,interceptors;public,void,set,handshake,interceptors,list,handshake,interceptor,interceptors,this,interceptors,clear,if,interceptors,null,this,interceptors,add,all,interceptors
DefaultSockJsService -> public DefaultSockJsService(TaskScheduler scheduler);1386462352;Create a DefaultSockJsService with default {@link TransportHandler handler} types._@param scheduler a task scheduler for heart-beat messages and removing_timed-out sessions_ the provided TaskScheduler should be declared as a_Spring bean to ensure it is initialized at start up and shut down when the_application stops.;public DefaultSockJsService(TaskScheduler scheduler) {_		this(scheduler, getDefaultTransportHandlers(null))__	};create,a,default,sock,js,service,with,default,link,transport,handler,handler,types,param,scheduler,a,task,scheduler,for,heart,beat,messages,and,removing,timed,out,sessions,the,provided,task,scheduler,should,be,declared,as,a,spring,bean,to,ensure,it,is,initialized,at,start,up,and,shut,down,when,the,application,stops;public,default,sock,js,service,task,scheduler,scheduler,this,scheduler,get,default,transport,handlers,null
DefaultSockJsService -> public DefaultSockJsService(TaskScheduler scheduler);1404880799;Create a DefaultSockJsService with default {@link TransportHandler handler} types._@param scheduler a task scheduler for heart-beat messages and removing_timed-out sessions_ the provided TaskScheduler should be declared as a_Spring bean to ensure it is initialized at start up and shut down when the_application stops.;public DefaultSockJsService(TaskScheduler scheduler) {_		this(scheduler, getDefaultTransportHandlers(null))__	};create,a,default,sock,js,service,with,default,link,transport,handler,handler,types,param,scheduler,a,task,scheduler,for,heart,beat,messages,and,removing,timed,out,sessions,the,provided,task,scheduler,should,be,declared,as,a,spring,bean,to,ensure,it,is,initialized,at,start,up,and,shut,down,when,the,application,stops;public,default,sock,js,service,task,scheduler,scheduler,this,scheduler,get,default,transport,handlers,null
DefaultSockJsService -> public DefaultSockJsService(TaskScheduler scheduler);1435026644;Create a DefaultSockJsService with default {@link TransportHandler handler} types._@param scheduler a task scheduler for heart-beat messages and removing_timed-out sessions_ the provided TaskScheduler should be declared as a_Spring bean to ensure it is initialized at start up and shut down when the_application stops.;public DefaultSockJsService(TaskScheduler scheduler) {_		this(scheduler, getDefaultTransportHandlers(null))__	};create,a,default,sock,js,service,with,default,link,transport,handler,handler,types,param,scheduler,a,task,scheduler,for,heart,beat,messages,and,removing,timed,out,sessions,the,provided,task,scheduler,should,be,declared,as,a,spring,bean,to,ensure,it,is,initialized,at,start,up,and,shut,down,when,the,application,stops;public,default,sock,js,service,task,scheduler,scheduler,this,scheduler,get,default,transport,handlers,null
DefaultSockJsService -> public DefaultSockJsService(TaskScheduler scheduler);1467730834;Create a DefaultSockJsService with default {@link TransportHandler handler} types._@param scheduler a task scheduler for heart-beat messages and removing_timed-out sessions_ the provided TaskScheduler should be declared as a_Spring bean to ensure it is initialized at start up and shut down when the_application stops.;public DefaultSockJsService(TaskScheduler scheduler) {_		this(scheduler, getDefaultTransportHandlers(null))__	};create,a,default,sock,js,service,with,default,link,transport,handler,handler,types,param,scheduler,a,task,scheduler,for,heart,beat,messages,and,removing,timed,out,sessions,the,provided,task,scheduler,should,be,declared,as,a,spring,bean,to,ensure,it,is,initialized,at,start,up,and,shut,down,when,the,application,stops;public,default,sock,js,service,task,scheduler,scheduler,this,scheduler,get,default,transport,handlers,null
DefaultSockJsService -> public DefaultSockJsService(TaskScheduler scheduler);1496259743;Create a DefaultSockJsService with default {@link TransportHandler handler} types._@param scheduler a task scheduler for heart-beat messages and removing_timed-out sessions_ the provided TaskScheduler should be declared as a_Spring bean to ensure it is initialized at start up and shut down when the_application stops.;public DefaultSockJsService(TaskScheduler scheduler) {_		this(scheduler, getDefaultTransportHandlers(null))__	};create,a,default,sock,js,service,with,default,link,transport,handler,handler,types,param,scheduler,a,task,scheduler,for,heart,beat,messages,and,removing,timed,out,sessions,the,provided,task,scheduler,should,be,declared,as,a,spring,bean,to,ensure,it,is,initialized,at,start,up,and,shut,down,when,the,application,stops;public,default,sock,js,service,task,scheduler,scheduler,this,scheduler,get,default,transport,handlers,null
DefaultSockJsService -> public DefaultSockJsService(TaskScheduler scheduler);1528452948;Create a DefaultSockJsService with default {@link TransportHandler handler} types._@param scheduler a task scheduler for heart-beat messages and removing_timed-out sessions_ the provided TaskScheduler should be declared as a_Spring bean to ensure it is initialized at start up and shut down when the_application stops.;public DefaultSockJsService(TaskScheduler scheduler) {_		this(scheduler, getDefaultTransportHandlers(null))__	};create,a,default,sock,js,service,with,default,link,transport,handler,handler,types,param,scheduler,a,task,scheduler,for,heart,beat,messages,and,removing,timed,out,sessions,the,provided,task,scheduler,should,be,declared,as,a,spring,bean,to,ensure,it,is,initialized,at,start,up,and,shut,down,when,the,application,stops;public,default,sock,js,service,task,scheduler,scheduler,this,scheduler,get,default,transport,handlers,null
DefaultSockJsService -> public DefaultSockJsService(TaskScheduler scheduler);1530174524;Create a DefaultSockJsService with default {@link TransportHandler handler} types._@param scheduler a task scheduler for heart-beat messages and removing_timed-out sessions_ the provided TaskScheduler should be declared as a_Spring bean to ensure it is initialized at start up and shut down when the_application stops.;public DefaultSockJsService(TaskScheduler scheduler) {_		this(scheduler, getDefaultTransportHandlers(null))__	};create,a,default,sock,js,service,with,default,link,transport,handler,handler,types,param,scheduler,a,task,scheduler,for,heart,beat,messages,and,removing,timed,out,sessions,the,provided,task,scheduler,should,be,declared,as,a,spring,bean,to,ensure,it,is,initialized,at,start,up,and,shut,down,when,the,application,stops;public,default,sock,js,service,task,scheduler,scheduler,this,scheduler,get,default,transport,handlers,null
DefaultSockJsService -> public List<HandshakeInterceptor> getHandshakeInterceptors();1376429281;Return the configured WebSocket handshake request interceptors.;public List<HandshakeInterceptor> getHandshakeInterceptors() {_		return this.interceptors__	};return,the,configured,web,socket,handshake,request,interceptors;public,list,handshake,interceptor,get,handshake,interceptors,return,this,interceptors
DefaultSockJsService -> public List<HandshakeInterceptor> getHandshakeInterceptors();1376489702;Return the configured WebSocket handshake request interceptors.;public List<HandshakeInterceptor> getHandshakeInterceptors() {_		return this.interceptors__	};return,the,configured,web,socket,handshake,request,interceptors;public,list,handshake,interceptor,get,handshake,interceptors,return,this,interceptors
DefaultSockJsService -> public List<HandshakeInterceptor> getHandshakeInterceptors();1377218103;Return the configured WebSocket handshake request interceptors.;public List<HandshakeInterceptor> getHandshakeInterceptors() {_		return this.interceptors__	};return,the,configured,web,socket,handshake,request,interceptors;public,list,handshake,interceptor,get,handshake,interceptors,return,this,interceptors
DefaultSockJsService -> public List<HandshakeInterceptor> getHandshakeInterceptors();1377693833;Return the configured WebSocket handshake request interceptors.;public List<HandshakeInterceptor> getHandshakeInterceptors() {_		return this.interceptors__	};return,the,configured,web,socket,handshake,request,interceptors;public,list,handshake,interceptor,get,handshake,interceptors,return,this,interceptors
DefaultSockJsService -> public List<HandshakeInterceptor> getHandshakeInterceptors();1380214379;Return the configured WebSocket handshake request interceptors.;public List<HandshakeInterceptor> getHandshakeInterceptors() {_		return this.interceptors__	};return,the,configured,web,socket,handshake,request,interceptors;public,list,handshake,interceptor,get,handshake,interceptors,return,this,interceptors
DefaultSockJsService -> public List<HandshakeInterceptor> getHandshakeInterceptors();1385412762;Return the configured WebSocket handshake request interceptors.;public List<HandshakeInterceptor> getHandshakeInterceptors() {_		return this.interceptors__	};return,the,configured,web,socket,handshake,request,interceptors;public,list,handshake,interceptor,get,handshake,interceptors,return,this,interceptors
DefaultSockJsService -> public List<HandshakeInterceptor> getHandshakeInterceptors();1385507478;Return the configured WebSocket handshake request interceptors.;public List<HandshakeInterceptor> getHandshakeInterceptors() {_		return this.interceptors__	};return,the,configured,web,socket,handshake,request,interceptors;public,list,handshake,interceptor,get,handshake,interceptors,return,this,interceptors
DefaultSockJsService -> public List<HandshakeInterceptor> getHandshakeInterceptors();1386019952;Return the configured WebSocket handshake request interceptors.;public List<HandshakeInterceptor> getHandshakeInterceptors() {_		return this.interceptors__	};return,the,configured,web,socket,handshake,request,interceptors;public,list,handshake,interceptor,get,handshake,interceptors,return,this,interceptors
DefaultSockJsService -> public DefaultSockJsService(TaskScheduler taskScheduler, Collection<TransportHandler> transportHandlers, 			TransportHandler... transportHandlerOverrides);1375461043;Create an instance by overriding or replacing completely the default_{@link TransportHandler transport handler} types.__@param taskScheduler a task scheduler for heart-beat messages and removing_timed-out sessions_ the provided TaskScheduler should be declared as a_Spring bean to ensure it is initialized at start up and shut down when the_application stops._@param transportHandlers the transport handlers to use (replaces the default ones)__can be {@code null}._@param transportHandlerOverrides zero or more overrides to the default transport_handler types.;public DefaultSockJsService(TaskScheduler taskScheduler, Collection<TransportHandler> transportHandlers,_			TransportHandler... transportHandlerOverrides) {__		super(taskScheduler)___		initMessageCodec()___		if (!CollectionUtils.isEmpty(transportHandlers)) {_			addTransportHandlers(transportHandlers)__		}_		if (!ObjectUtils.isEmpty(transportHandlerOverrides)) {_			addTransportHandlers(Arrays.asList(transportHandlerOverrides))__		}__		if (this.transportHandlers.isEmpty()) {_			logger.warn("No transport handlers")__		}_	};create,an,instance,by,overriding,or,replacing,completely,the,default,link,transport,handler,transport,handler,types,param,task,scheduler,a,task,scheduler,for,heart,beat,messages,and,removing,timed,out,sessions,the,provided,task,scheduler,should,be,declared,as,a,spring,bean,to,ensure,it,is,initialized,at,start,up,and,shut,down,when,the,application,stops,param,transport,handlers,the,transport,handlers,to,use,replaces,the,default,ones,can,be,code,null,param,transport,handler,overrides,zero,or,more,overrides,to,the,default,transport,handler,types;public,default,sock,js,service,task,scheduler,task,scheduler,collection,transport,handler,transport,handlers,transport,handler,transport,handler,overrides,super,task,scheduler,init,message,codec,if,collection,utils,is,empty,transport,handlers,add,transport,handlers,transport,handlers,if,object,utils,is,empty,transport,handler,overrides,add,transport,handlers,arrays,as,list,transport,handler,overrides,if,this,transport,handlers,is,empty,logger,warn,no,transport,handlers
DefaultSockJsService -> public DefaultSockJsService(TaskScheduler taskScheduler, Collection<TransportHandler> transportHandlers, 			TransportHandler... transportHandlerOverrides);1375542207;Create an instance by overriding or replacing completely the default_{@link TransportHandler transport handler} types.__@param taskScheduler a task scheduler for heart-beat messages and removing_timed-out sessions_ the provided TaskScheduler should be declared as a_Spring bean to ensure it is initialized at start up and shut down when the_application stops._@param transportHandlers the transport handlers to use (replaces the default ones)__can be {@code null}._@param transportHandlerOverrides zero or more overrides to the default transport_handler types.;public DefaultSockJsService(TaskScheduler taskScheduler, Collection<TransportHandler> transportHandlers,_			TransportHandler... transportHandlerOverrides) {__		super(taskScheduler)___		initMessageCodec()___		if (!CollectionUtils.isEmpty(transportHandlers)) {_			addTransportHandlers(transportHandlers)__		}_		if (!ObjectUtils.isEmpty(transportHandlerOverrides)) {_			addTransportHandlers(Arrays.asList(transportHandlerOverrides))__		}__		if (this.transportHandlers.isEmpty()) {_			logger.warn("No transport handlers")__		}_	};create,an,instance,by,overriding,or,replacing,completely,the,default,link,transport,handler,transport,handler,types,param,task,scheduler,a,task,scheduler,for,heart,beat,messages,and,removing,timed,out,sessions,the,provided,task,scheduler,should,be,declared,as,a,spring,bean,to,ensure,it,is,initialized,at,start,up,and,shut,down,when,the,application,stops,param,transport,handlers,the,transport,handlers,to,use,replaces,the,default,ones,can,be,code,null,param,transport,handler,overrides,zero,or,more,overrides,to,the,default,transport,handler,types;public,default,sock,js,service,task,scheduler,task,scheduler,collection,transport,handler,transport,handlers,transport,handler,transport,handler,overrides,super,task,scheduler,init,message,codec,if,collection,utils,is,empty,transport,handlers,add,transport,handlers,transport,handlers,if,object,utils,is,empty,transport,handler,overrides,add,transport,handlers,arrays,as,list,transport,handler,overrides,if,this,transport,handlers,is,empty,logger,warn,no,transport,handlers
DefaultSockJsService -> public DefaultSockJsService(TaskScheduler taskScheduler, Collection<TransportHandler> transportHandlers, 			TransportHandler... transportHandlerOverrides);1376429280;Create an instance by overriding or replacing completely the default_{@link TransportHandler transport handler} types.__@param taskScheduler a task scheduler for heart-beat messages and removing_timed-out sessions_ the provided TaskScheduler should be declared as a_Spring bean to ensure it is initialized at start up and shut down when the_application stops._@param transportHandlers the transport handlers to use (replaces the default ones)__can be {@code null}._@param transportHandlerOverrides zero or more overrides to the default transport_handler types.;public DefaultSockJsService(TaskScheduler taskScheduler, Collection<TransportHandler> transportHandlers,_			TransportHandler... transportHandlerOverrides) {__		super(taskScheduler)___		initMessageCodec()___		if (!CollectionUtils.isEmpty(transportHandlers)) {_			addTransportHandlers(transportHandlers)__		}_		if (!ObjectUtils.isEmpty(transportHandlerOverrides)) {_			addTransportHandlers(Arrays.asList(transportHandlerOverrides))__		}__		if (this.transportHandlers.isEmpty()) {_			logger.warn("No transport handlers")__		}_	};create,an,instance,by,overriding,or,replacing,completely,the,default,link,transport,handler,transport,handler,types,param,task,scheduler,a,task,scheduler,for,heart,beat,messages,and,removing,timed,out,sessions,the,provided,task,scheduler,should,be,declared,as,a,spring,bean,to,ensure,it,is,initialized,at,start,up,and,shut,down,when,the,application,stops,param,transport,handlers,the,transport,handlers,to,use,replaces,the,default,ones,can,be,code,null,param,transport,handler,overrides,zero,or,more,overrides,to,the,default,transport,handler,types;public,default,sock,js,service,task,scheduler,task,scheduler,collection,transport,handler,transport,handlers,transport,handler,transport,handler,overrides,super,task,scheduler,init,message,codec,if,collection,utils,is,empty,transport,handlers,add,transport,handlers,transport,handlers,if,object,utils,is,empty,transport,handler,overrides,add,transport,handlers,arrays,as,list,transport,handler,overrides,if,this,transport,handlers,is,empty,logger,warn,no,transport,handlers
DefaultSockJsService -> public DefaultSockJsService(TaskScheduler taskScheduler, Collection<TransportHandler> transportHandlers, 			TransportHandler... transportHandlerOverrides);1376429280;Create an instance by overriding or replacing completely the default_{@link TransportHandler transport handler} types.__@param taskScheduler a task scheduler for heart-beat messages and removing_timed-out sessions_ the provided TaskScheduler should be declared as a_Spring bean to ensure it is initialized at start up and shut down when the_application stops._@param transportHandlers the transport handlers to use (replaces the default ones)__can be {@code null} if you don't want to install the default ones._@param transportHandlerOverrides zero or more overrides to the default transport_handler types.;public DefaultSockJsService(TaskScheduler taskScheduler, Collection<TransportHandler> transportHandlers,_			TransportHandler... transportHandlerOverrides) {__		super(taskScheduler)___		initMessageCodec()___		if (CollectionUtils.isEmpty(transportHandlers)) {_			addTransportHandlers(getDefaultTransportHandlers())__		}_		else {_			addTransportHandlers(transportHandlers)__		}__		if (!ObjectUtils.isEmpty(transportHandlerOverrides)) {_			addTransportHandlers(Arrays.asList(transportHandlerOverrides))__		}__		if (this.transportHandlers.isEmpty()) {_			logger.warn("No transport handlers")__		}_	};create,an,instance,by,overriding,or,replacing,completely,the,default,link,transport,handler,transport,handler,types,param,task,scheduler,a,task,scheduler,for,heart,beat,messages,and,removing,timed,out,sessions,the,provided,task,scheduler,should,be,declared,as,a,spring,bean,to,ensure,it,is,initialized,at,start,up,and,shut,down,when,the,application,stops,param,transport,handlers,the,transport,handlers,to,use,replaces,the,default,ones,can,be,code,null,if,you,don,t,want,to,install,the,default,ones,param,transport,handler,overrides,zero,or,more,overrides,to,the,default,transport,handler,types;public,default,sock,js,service,task,scheduler,task,scheduler,collection,transport,handler,transport,handlers,transport,handler,transport,handler,overrides,super,task,scheduler,init,message,codec,if,collection,utils,is,empty,transport,handlers,add,transport,handlers,get,default,transport,handlers,else,add,transport,handlers,transport,handlers,if,object,utils,is,empty,transport,handler,overrides,add,transport,handlers,arrays,as,list,transport,handler,overrides,if,this,transport,handlers,is,empty,logger,warn,no,transport,handlers
DefaultSockJsService -> public DefaultSockJsService(TaskScheduler taskScheduler, Collection<TransportHandler> transportHandlers, 			TransportHandler... transportHandlerOverrides);1376429281;Create an instance by overriding or replacing completely the default_{@link TransportHandler transport handler} types.__@param taskScheduler a task scheduler for heart-beat messages and removing_timed-out sessions_ the provided TaskScheduler should be declared as a_Spring bean to ensure it is initialized at start up and shut down when the_application stops._@param transportHandlers the transport handlers to use (replaces the default ones)__can be {@code null} if you don't want to install the default ones._@param transportHandlerOverrides zero or more overrides to the default transport_handler types.;public DefaultSockJsService(TaskScheduler taskScheduler, Collection<TransportHandler> transportHandlers,_			TransportHandler... transportHandlerOverrides) {__		super(taskScheduler)___		initMessageCodec()___		if (CollectionUtils.isEmpty(transportHandlers)) {_			addTransportHandlers(getDefaultTransportHandlers())__		}_		else {_			addTransportHandlers(transportHandlers)__		}__		if (!ObjectUtils.isEmpty(transportHandlerOverrides)) {_			addTransportHandlers(Arrays.asList(transportHandlerOverrides))__		}__		if (this.transportHandlers.isEmpty()) {_			logger.warn("No transport handlers")__		}_	};create,an,instance,by,overriding,or,replacing,completely,the,default,link,transport,handler,transport,handler,types,param,task,scheduler,a,task,scheduler,for,heart,beat,messages,and,removing,timed,out,sessions,the,provided,task,scheduler,should,be,declared,as,a,spring,bean,to,ensure,it,is,initialized,at,start,up,and,shut,down,when,the,application,stops,param,transport,handlers,the,transport,handlers,to,use,replaces,the,default,ones,can,be,code,null,if,you,don,t,want,to,install,the,default,ones,param,transport,handler,overrides,zero,or,more,overrides,to,the,default,transport,handler,types;public,default,sock,js,service,task,scheduler,task,scheduler,collection,transport,handler,transport,handlers,transport,handler,transport,handler,overrides,super,task,scheduler,init,message,codec,if,collection,utils,is,empty,transport,handlers,add,transport,handlers,get,default,transport,handlers,else,add,transport,handlers,transport,handlers,if,object,utils,is,empty,transport,handler,overrides,add,transport,handlers,arrays,as,list,transport,handler,overrides,if,this,transport,handlers,is,empty,logger,warn,no,transport,handlers
DefaultSockJsService -> public DefaultSockJsService(TaskScheduler taskScheduler, Collection<TransportHandler> transportHandlers, 			TransportHandler... transportHandlerOverrides);1376489702;Create an instance by overriding or replacing completely the default_{@link TransportHandler transport handler} types.__@param taskScheduler a task scheduler for heart-beat messages and removing_timed-out sessions_ the provided TaskScheduler should be declared as a_Spring bean to ensure it is initialized at start up and shut down when the_application stops._@param transportHandlers the transport handlers to use (replaces the default ones)__can be {@code null} if you don't want to install the default ones._@param transportHandlerOverrides zero or more overrides to the default transport_handler types.;public DefaultSockJsService(TaskScheduler taskScheduler, Collection<TransportHandler> transportHandlers,_			TransportHandler... transportHandlerOverrides) {__		super(taskScheduler)___		initMessageCodec()___		if (CollectionUtils.isEmpty(transportHandlers)) {_			addTransportHandlers(getDefaultTransportHandlers())__		}_		else {_			addTransportHandlers(transportHandlers)__		}__		if (!ObjectUtils.isEmpty(transportHandlerOverrides)) {_			addTransportHandlers(Arrays.asList(transportHandlerOverrides))__		}__		if (this.transportHandlers.isEmpty()) {_			logger.warn("No transport handlers")__		}_	};create,an,instance,by,overriding,or,replacing,completely,the,default,link,transport,handler,transport,handler,types,param,task,scheduler,a,task,scheduler,for,heart,beat,messages,and,removing,timed,out,sessions,the,provided,task,scheduler,should,be,declared,as,a,spring,bean,to,ensure,it,is,initialized,at,start,up,and,shut,down,when,the,application,stops,param,transport,handlers,the,transport,handlers,to,use,replaces,the,default,ones,can,be,code,null,if,you,don,t,want,to,install,the,default,ones,param,transport,handler,overrides,zero,or,more,overrides,to,the,default,transport,handler,types;public,default,sock,js,service,task,scheduler,task,scheduler,collection,transport,handler,transport,handlers,transport,handler,transport,handler,overrides,super,task,scheduler,init,message,codec,if,collection,utils,is,empty,transport,handlers,add,transport,handlers,get,default,transport,handlers,else,add,transport,handlers,transport,handlers,if,object,utils,is,empty,transport,handler,overrides,add,transport,handlers,arrays,as,list,transport,handler,overrides,if,this,transport,handlers,is,empty,logger,warn,no,transport,handlers
DefaultSockJsService -> public DefaultSockJsService(TaskScheduler taskScheduler, Collection<TransportHandler> transportHandlers, 			TransportHandler... transportHandlerOverrides);1377218103;Create an instance by overriding or replacing completely the default_{@link TransportHandler transport handler} types.__@param taskScheduler a task scheduler for heart-beat messages and removing_timed-out sessions_ the provided TaskScheduler should be declared as a_Spring bean to ensure it is initialized at start up and shut down when the_application stops._@param transportHandlers the transport handlers to use (replaces the default ones)__can be {@code null} if you don't want to install the default ones._@param transportHandlerOverrides zero or more overrides to the default transport_handler types.;public DefaultSockJsService(TaskScheduler taskScheduler, Collection<TransportHandler> transportHandlers,_			TransportHandler... transportHandlerOverrides) {__		super(taskScheduler)___		initMessageCodec()___		if (CollectionUtils.isEmpty(transportHandlers)) {_			addTransportHandlers(getDefaultTransportHandlers())__		}_		else {_			addTransportHandlers(transportHandlers)__		}__		if (!ObjectUtils.isEmpty(transportHandlerOverrides)) {_			addTransportHandlers(Arrays.asList(transportHandlerOverrides))__		}__		if (this.transportHandlers.isEmpty()) {_			logger.warn("No transport handlers")__		}_	};create,an,instance,by,overriding,or,replacing,completely,the,default,link,transport,handler,transport,handler,types,param,task,scheduler,a,task,scheduler,for,heart,beat,messages,and,removing,timed,out,sessions,the,provided,task,scheduler,should,be,declared,as,a,spring,bean,to,ensure,it,is,initialized,at,start,up,and,shut,down,when,the,application,stops,param,transport,handlers,the,transport,handlers,to,use,replaces,the,default,ones,can,be,code,null,if,you,don,t,want,to,install,the,default,ones,param,transport,handler,overrides,zero,or,more,overrides,to,the,default,transport,handler,types;public,default,sock,js,service,task,scheduler,task,scheduler,collection,transport,handler,transport,handlers,transport,handler,transport,handler,overrides,super,task,scheduler,init,message,codec,if,collection,utils,is,empty,transport,handlers,add,transport,handlers,get,default,transport,handlers,else,add,transport,handlers,transport,handlers,if,object,utils,is,empty,transport,handler,overrides,add,transport,handlers,arrays,as,list,transport,handler,overrides,if,this,transport,handlers,is,empty,logger,warn,no,transport,handlers
DefaultSockJsService -> public DefaultSockJsService(TaskScheduler taskScheduler, Collection<TransportHandler> transportHandlers, 			TransportHandler... transportHandlerOverrides);1377693833;Create an instance by overriding or replacing completely the default_{@link TransportHandler transport handler} types.__@param taskScheduler a task scheduler for heart-beat messages and removing_timed-out sessions_ the provided TaskScheduler should be declared as a_Spring bean to ensure it is initialized at start up and shut down when the_application stops._@param transportHandlers the transport handlers to use (replaces the default ones)__can be {@code null} if you don't want to install the default ones._@param transportHandlerOverrides zero or more overrides to the default transport_handler types.;public DefaultSockJsService(TaskScheduler taskScheduler, Collection<TransportHandler> transportHandlers,_			TransportHandler... transportHandlerOverrides) {__		super(taskScheduler)___		initMessageCodec()___		if (CollectionUtils.isEmpty(transportHandlers)) {_			addTransportHandlers(getDefaultTransportHandlers())__		}_		else {_			addTransportHandlers(transportHandlers)__		}__		if (!ObjectUtils.isEmpty(transportHandlerOverrides)) {_			addTransportHandlers(Arrays.asList(transportHandlerOverrides))__		}__		if (this.transportHandlers.isEmpty()) {_			logger.warn("No transport handlers")__		}_	};create,an,instance,by,overriding,or,replacing,completely,the,default,link,transport,handler,transport,handler,types,param,task,scheduler,a,task,scheduler,for,heart,beat,messages,and,removing,timed,out,sessions,the,provided,task,scheduler,should,be,declared,as,a,spring,bean,to,ensure,it,is,initialized,at,start,up,and,shut,down,when,the,application,stops,param,transport,handlers,the,transport,handlers,to,use,replaces,the,default,ones,can,be,code,null,if,you,don,t,want,to,install,the,default,ones,param,transport,handler,overrides,zero,or,more,overrides,to,the,default,transport,handler,types;public,default,sock,js,service,task,scheduler,task,scheduler,collection,transport,handler,transport,handlers,transport,handler,transport,handler,overrides,super,task,scheduler,init,message,codec,if,collection,utils,is,empty,transport,handlers,add,transport,handlers,get,default,transport,handlers,else,add,transport,handlers,transport,handlers,if,object,utils,is,empty,transport,handler,overrides,add,transport,handlers,arrays,as,list,transport,handler,overrides,if,this,transport,handlers,is,empty,logger,warn,no,transport,handlers
DefaultSockJsService -> public DefaultSockJsService(TaskScheduler taskScheduler, Collection<TransportHandler> transportHandlers, 			TransportHandler... transportHandlerOverrides);1380214379;Create an instance by overriding or replacing completely the default_{@link TransportHandler transport handler} types.__@param taskScheduler a task scheduler for heart-beat messages and removing_timed-out sessions_ the provided TaskScheduler should be declared as a_Spring bean to ensure it is initialized at start up and shut down when the_application stops._@param transportHandlers the transport handlers to use (replaces the default ones)__can be {@code null} if you don't want to install the default ones._@param transportHandlerOverrides zero or more overrides to the default transport_handler types.;public DefaultSockJsService(TaskScheduler taskScheduler, Collection<TransportHandler> transportHandlers,_			TransportHandler... transportHandlerOverrides) {__		super(taskScheduler)___		initMessageCodec()___		if (CollectionUtils.isEmpty(transportHandlers)) {_			addTransportHandlers(getDefaultTransportHandlers())__		}_		else {_			addTransportHandlers(transportHandlers)__		}__		if (!ObjectUtils.isEmpty(transportHandlerOverrides)) {_			addTransportHandlers(Arrays.asList(transportHandlerOverrides))__		}__		if (this.transportHandlers.isEmpty()) {_			logger.warn("No transport handlers")__		}_	};create,an,instance,by,overriding,or,replacing,completely,the,default,link,transport,handler,transport,handler,types,param,task,scheduler,a,task,scheduler,for,heart,beat,messages,and,removing,timed,out,sessions,the,provided,task,scheduler,should,be,declared,as,a,spring,bean,to,ensure,it,is,initialized,at,start,up,and,shut,down,when,the,application,stops,param,transport,handlers,the,transport,handlers,to,use,replaces,the,default,ones,can,be,code,null,if,you,don,t,want,to,install,the,default,ones,param,transport,handler,overrides,zero,or,more,overrides,to,the,default,transport,handler,types;public,default,sock,js,service,task,scheduler,task,scheduler,collection,transport,handler,transport,handlers,transport,handler,transport,handler,overrides,super,task,scheduler,init,message,codec,if,collection,utils,is,empty,transport,handlers,add,transport,handlers,get,default,transport,handlers,else,add,transport,handlers,transport,handlers,if,object,utils,is,empty,transport,handler,overrides,add,transport,handlers,arrays,as,list,transport,handler,overrides,if,this,transport,handlers,is,empty,logger,warn,no,transport,handlers
DefaultSockJsService -> public DefaultSockJsService(TaskScheduler taskScheduler, Collection<TransportHandler> transportHandlers, 			TransportHandler... transportHandlerOverrides);1385412762;Create an instance by overriding or replacing completely the default_{@link TransportHandler transport handler} types.__@param taskScheduler a task scheduler for heart-beat messages and removing_timed-out sessions_ the provided TaskScheduler should be declared as a_Spring bean to ensure it is initialized at start up and shut down when the_application stops._@param transportHandlers the transport handlers to use (replaces the default ones)__can be {@code null} if you don't want to install the default ones._@param transportHandlerOverrides zero or more overrides to the default transport_handler types.;public DefaultSockJsService(TaskScheduler taskScheduler, Collection<TransportHandler> transportHandlers,_			TransportHandler... transportHandlerOverrides) {__		super(taskScheduler)___		initMessageCodec()___		if (CollectionUtils.isEmpty(transportHandlers)) {_			addTransportHandlers(getDefaultTransportHandlers())__		}_		else {_			addTransportHandlers(transportHandlers)__		}__		if (!ObjectUtils.isEmpty(transportHandlerOverrides)) {_			addTransportHandlers(Arrays.asList(transportHandlerOverrides))__		}__		if (this.transportHandlers.isEmpty()) {_			logger.warn("No transport handlers")__		}_	};create,an,instance,by,overriding,or,replacing,completely,the,default,link,transport,handler,transport,handler,types,param,task,scheduler,a,task,scheduler,for,heart,beat,messages,and,removing,timed,out,sessions,the,provided,task,scheduler,should,be,declared,as,a,spring,bean,to,ensure,it,is,initialized,at,start,up,and,shut,down,when,the,application,stops,param,transport,handlers,the,transport,handlers,to,use,replaces,the,default,ones,can,be,code,null,if,you,don,t,want,to,install,the,default,ones,param,transport,handler,overrides,zero,or,more,overrides,to,the,default,transport,handler,types;public,default,sock,js,service,task,scheduler,task,scheduler,collection,transport,handler,transport,handlers,transport,handler,transport,handler,overrides,super,task,scheduler,init,message,codec,if,collection,utils,is,empty,transport,handlers,add,transport,handlers,get,default,transport,handlers,else,add,transport,handlers,transport,handlers,if,object,utils,is,empty,transport,handler,overrides,add,transport,handlers,arrays,as,list,transport,handler,overrides,if,this,transport,handlers,is,empty,logger,warn,no,transport,handlers
DefaultSockJsService -> public DefaultSockJsService(TaskScheduler taskScheduler, Collection<TransportHandler> transportHandlers, 			TransportHandler... transportHandlerOverrides);1385507478;Create an instance by overriding or replacing completely the default_{@link TransportHandler transport handler} types._@param taskScheduler a task scheduler for heart-beat messages and removing_timed-out sessions_ the provided TaskScheduler should be declared as a_Spring bean to ensure it is initialized at start up and shut down when the_application stops._@param transportHandlers the transport handlers to use (replaces the default ones)__can be {@code null} if you don't want to install the default ones._@param transportHandlerOverrides zero or more overrides to the default transport_handler types.;public DefaultSockJsService(TaskScheduler taskScheduler, Collection<TransportHandler> transportHandlers,_			TransportHandler... transportHandlerOverrides) {__		super(taskScheduler)___		initMessageCodec()___		if (CollectionUtils.isEmpty(transportHandlers)) {_			addTransportHandlers(getDefaultTransportHandlers())__		}_		else {_			addTransportHandlers(transportHandlers)__		}__		if (!ObjectUtils.isEmpty(transportHandlerOverrides)) {_			addTransportHandlers(Arrays.asList(transportHandlerOverrides))__		}__		if (this.transportHandlers.isEmpty()) {_			logger.warn("No transport handlers")__		}_	};create,an,instance,by,overriding,or,replacing,completely,the,default,link,transport,handler,transport,handler,types,param,task,scheduler,a,task,scheduler,for,heart,beat,messages,and,removing,timed,out,sessions,the,provided,task,scheduler,should,be,declared,as,a,spring,bean,to,ensure,it,is,initialized,at,start,up,and,shut,down,when,the,application,stops,param,transport,handlers,the,transport,handlers,to,use,replaces,the,default,ones,can,be,code,null,if,you,don,t,want,to,install,the,default,ones,param,transport,handler,overrides,zero,or,more,overrides,to,the,default,transport,handler,types;public,default,sock,js,service,task,scheduler,task,scheduler,collection,transport,handler,transport,handlers,transport,handler,transport,handler,overrides,super,task,scheduler,init,message,codec,if,collection,utils,is,empty,transport,handlers,add,transport,handlers,get,default,transport,handlers,else,add,transport,handlers,transport,handlers,if,object,utils,is,empty,transport,handler,overrides,add,transport,handlers,arrays,as,list,transport,handler,overrides,if,this,transport,handlers,is,empty,logger,warn,no,transport,handlers
DefaultSockJsService -> public DefaultSockJsService(TaskScheduler taskScheduler, Collection<TransportHandler> transportHandlers, 			TransportHandler... transportHandlerOverrides);1386019952;Create an instance by overriding or replacing completely the default_{@link TransportHandler transport handler} types._@param taskScheduler a task scheduler for heart-beat messages and removing_timed-out sessions_ the provided TaskScheduler should be declared as a_Spring bean to ensure it is initialized at start up and shut down when the_application stops._@param transportHandlers the transport handlers to use (replaces the default ones)__can be {@code null} if you don't want to install the default ones._@param transportHandlerOverrides zero or more overrides to the default transport_handler types.;public DefaultSockJsService(TaskScheduler taskScheduler, Collection<TransportHandler> transportHandlers,_			TransportHandler... transportHandlerOverrides) {__		super(taskScheduler)___		initMessageCodec()___		if (CollectionUtils.isEmpty(transportHandlers)) {_			addTransportHandlers(getDefaultTransportHandlers())__		}_		else {_			addTransportHandlers(transportHandlers)__		}__		if (!ObjectUtils.isEmpty(transportHandlerOverrides)) {_			addTransportHandlers(Arrays.asList(transportHandlerOverrides))__		}__		if (this.transportHandlers.isEmpty()) {_			logger.warn("No transport handlers")__		}_	};create,an,instance,by,overriding,or,replacing,completely,the,default,link,transport,handler,transport,handler,types,param,task,scheduler,a,task,scheduler,for,heart,beat,messages,and,removing,timed,out,sessions,the,provided,task,scheduler,should,be,declared,as,a,spring,bean,to,ensure,it,is,initialized,at,start,up,and,shut,down,when,the,application,stops,param,transport,handlers,the,transport,handlers,to,use,replaces,the,default,ones,can,be,code,null,if,you,don,t,want,to,install,the,default,ones,param,transport,handler,overrides,zero,or,more,overrides,to,the,default,transport,handler,types;public,default,sock,js,service,task,scheduler,task,scheduler,collection,transport,handler,transport,handlers,transport,handler,transport,handler,overrides,super,task,scheduler,init,message,codec,if,collection,utils,is,empty,transport,handlers,add,transport,handlers,get,default,transport,handlers,else,add,transport,handlers,transport,handlers,if,object,utils,is,empty,transport,handler,overrides,add,transport,handlers,arrays,as,list,transport,handler,overrides,if,this,transport,handlers,is,empty,logger,warn,no,transport,handlers
DefaultSockJsService -> public DefaultSockJsService(TaskScheduler scheduler, Collection<TransportHandler> handlerOverrides);1386462352;Create a DefaultSockJsService with overridden {@link TransportHandler handler} types_replacing the corresponding default handler implementation._@param scheduler a task scheduler for heart-beat messages and removing timed-out sessions__the provided TaskScheduler should be declared as a Spring bean to ensure it gets_initialized at start-up and shuts down when the application stops_@param handlerOverrides zero or more overrides to the default transport handler types;public DefaultSockJsService(TaskScheduler scheduler, Collection<TransportHandler> handlerOverrides) {_		super(scheduler, getDefaultTransportHandlers(handlerOverrides))__	};create,a,default,sock,js,service,with,overridden,link,transport,handler,handler,types,replacing,the,corresponding,default,handler,implementation,param,scheduler,a,task,scheduler,for,heart,beat,messages,and,removing,timed,out,sessions,the,provided,task,scheduler,should,be,declared,as,a,spring,bean,to,ensure,it,gets,initialized,at,start,up,and,shuts,down,when,the,application,stops,param,handler,overrides,zero,or,more,overrides,to,the,default,transport,handler,types;public,default,sock,js,service,task,scheduler,scheduler,collection,transport,handler,handler,overrides,super,scheduler,get,default,transport,handlers,handler,overrides
DefaultSockJsService -> public DefaultSockJsService(TaskScheduler scheduler, Collection<TransportHandler> handlerOverrides);1404880799;Create a DefaultSockJsService with overridden {@link TransportHandler handler} types_replacing the corresponding default handler implementation._@param scheduler a task scheduler for heart-beat messages and removing timed-out sessions__the provided TaskScheduler should be declared as a Spring bean to ensure it gets_initialized at start-up and shuts down when the application stops_@param handlerOverrides zero or more overrides to the default transport handler types;public DefaultSockJsService(TaskScheduler scheduler, Collection<TransportHandler> handlerOverrides) {_		super(scheduler, getDefaultTransportHandlers(handlerOverrides))__	};create,a,default,sock,js,service,with,overridden,link,transport,handler,handler,types,replacing,the,corresponding,default,handler,implementation,param,scheduler,a,task,scheduler,for,heart,beat,messages,and,removing,timed,out,sessions,the,provided,task,scheduler,should,be,declared,as,a,spring,bean,to,ensure,it,gets,initialized,at,start,up,and,shuts,down,when,the,application,stops,param,handler,overrides,zero,or,more,overrides,to,the,default,transport,handler,types;public,default,sock,js,service,task,scheduler,scheduler,collection,transport,handler,handler,overrides,super,scheduler,get,default,transport,handlers,handler,overrides
DefaultSockJsService -> public DefaultSockJsService(TaskScheduler scheduler, Collection<TransportHandler> handlerOverrides);1435026644;Create a DefaultSockJsService with overridden {@link TransportHandler handler} types_replacing the corresponding default handler implementation._@param scheduler a task scheduler for heart-beat messages and removing timed-out sessions__the provided TaskScheduler should be declared as a Spring bean to ensure it gets_initialized at start-up and shuts down when the application stops_@param handlerOverrides zero or more overrides to the default transport handler types;public DefaultSockJsService(TaskScheduler scheduler, Collection<TransportHandler> handlerOverrides) {_		super(scheduler, getDefaultTransportHandlers(handlerOverrides))__	};create,a,default,sock,js,service,with,overridden,link,transport,handler,handler,types,replacing,the,corresponding,default,handler,implementation,param,scheduler,a,task,scheduler,for,heart,beat,messages,and,removing,timed,out,sessions,the,provided,task,scheduler,should,be,declared,as,a,spring,bean,to,ensure,it,gets,initialized,at,start,up,and,shuts,down,when,the,application,stops,param,handler,overrides,zero,or,more,overrides,to,the,default,transport,handler,types;public,default,sock,js,service,task,scheduler,scheduler,collection,transport,handler,handler,overrides,super,scheduler,get,default,transport,handlers,handler,overrides
DefaultSockJsService -> public DefaultSockJsService(TaskScheduler scheduler, Collection<TransportHandler> handlerOverrides);1467730834;Create a DefaultSockJsService with overridden {@link TransportHandler handler} types_replacing the corresponding default handler implementation._@param scheduler a task scheduler for heart-beat messages and removing timed-out sessions__the provided TaskScheduler should be declared as a Spring bean to ensure it gets_initialized at start-up and shuts down when the application stops_@param handlerOverrides zero or more overrides to the default transport handler types;public DefaultSockJsService(TaskScheduler scheduler, Collection<TransportHandler> handlerOverrides) {_		super(scheduler, getDefaultTransportHandlers(handlerOverrides))__	};create,a,default,sock,js,service,with,overridden,link,transport,handler,handler,types,replacing,the,corresponding,default,handler,implementation,param,scheduler,a,task,scheduler,for,heart,beat,messages,and,removing,timed,out,sessions,the,provided,task,scheduler,should,be,declared,as,a,spring,bean,to,ensure,it,gets,initialized,at,start,up,and,shuts,down,when,the,application,stops,param,handler,overrides,zero,or,more,overrides,to,the,default,transport,handler,types;public,default,sock,js,service,task,scheduler,scheduler,collection,transport,handler,handler,overrides,super,scheduler,get,default,transport,handlers,handler,overrides
DefaultSockJsService -> public DefaultSockJsService(TaskScheduler scheduler, Collection<TransportHandler> handlerOverrides);1496259743;Create a DefaultSockJsService with overridden {@link TransportHandler handler} types_replacing the corresponding default handler implementation._@param scheduler a task scheduler for heart-beat messages and removing timed-out sessions__the provided TaskScheduler should be declared as a Spring bean to ensure it gets_initialized at start-up and shuts down when the application stops_@param handlerOverrides zero or more overrides to the default transport handler types;public DefaultSockJsService(TaskScheduler scheduler, Collection<TransportHandler> handlerOverrides) {_		super(scheduler, getDefaultTransportHandlers(handlerOverrides))__	};create,a,default,sock,js,service,with,overridden,link,transport,handler,handler,types,replacing,the,corresponding,default,handler,implementation,param,scheduler,a,task,scheduler,for,heart,beat,messages,and,removing,timed,out,sessions,the,provided,task,scheduler,should,be,declared,as,a,spring,bean,to,ensure,it,gets,initialized,at,start,up,and,shuts,down,when,the,application,stops,param,handler,overrides,zero,or,more,overrides,to,the,default,transport,handler,types;public,default,sock,js,service,task,scheduler,scheduler,collection,transport,handler,handler,overrides,super,scheduler,get,default,transport,handlers,handler,overrides
DefaultSockJsService -> public DefaultSockJsService(TaskScheduler scheduler, Collection<TransportHandler> handlerOverrides);1528452948;Create a DefaultSockJsService with overridden {@link TransportHandler handler} types_replacing the corresponding default handler implementation._@param scheduler a task scheduler for heart-beat messages and removing timed-out sessions__the provided TaskScheduler should be declared as a Spring bean to ensure it gets_initialized at start-up and shuts down when the application stops_@param handlerOverrides zero or more overrides to the default transport handler types;public DefaultSockJsService(TaskScheduler scheduler, Collection<TransportHandler> handlerOverrides) {_		super(scheduler, getDefaultTransportHandlers(handlerOverrides))__	};create,a,default,sock,js,service,with,overridden,link,transport,handler,handler,types,replacing,the,corresponding,default,handler,implementation,param,scheduler,a,task,scheduler,for,heart,beat,messages,and,removing,timed,out,sessions,the,provided,task,scheduler,should,be,declared,as,a,spring,bean,to,ensure,it,gets,initialized,at,start,up,and,shuts,down,when,the,application,stops,param,handler,overrides,zero,or,more,overrides,to,the,default,transport,handler,types;public,default,sock,js,service,task,scheduler,scheduler,collection,transport,handler,handler,overrides,super,scheduler,get,default,transport,handlers,handler,overrides
DefaultSockJsService -> public DefaultSockJsService(TaskScheduler scheduler, Collection<TransportHandler> handlerOverrides);1530174524;Create a DefaultSockJsService with overridden {@link TransportHandler handler} types_replacing the corresponding default handler implementation._@param scheduler a task scheduler for heart-beat messages and removing timed-out sessions__the provided TaskScheduler should be declared as a Spring bean to ensure it gets_initialized at start-up and shuts down when the application stops_@param handlerOverrides zero or more overrides to the default transport handler types;public DefaultSockJsService(TaskScheduler scheduler, Collection<TransportHandler> handlerOverrides) {_		super(scheduler, getDefaultTransportHandlers(handlerOverrides))__	};create,a,default,sock,js,service,with,overridden,link,transport,handler,handler,types,replacing,the,corresponding,default,handler,implementation,param,scheduler,a,task,scheduler,for,heart,beat,messages,and,removing,timed,out,sessions,the,provided,task,scheduler,should,be,declared,as,a,spring,bean,to,ensure,it,gets,initialized,at,start,up,and,shuts,down,when,the,application,stops,param,handler,overrides,zero,or,more,overrides,to,the,default,transport,handler,types;public,default,sock,js,service,task,scheduler,scheduler,collection,transport,handler,handler,overrides,super,scheduler,get,default,transport,handlers,handler,overrides
DefaultSockJsService -> public void setMessageCodec(SockJsMessageCodec messageCodec);1375321376;The codec to use for encoding and decoding SockJS messages._@exception IllegalStateException if no {@link SockJsMessageCodec} is available;public void setMessageCodec(SockJsMessageCodec messageCodec) {_		this.messageCodec = messageCodec__	};the,codec,to,use,for,encoding,and,decoding,sock,js,messages,exception,illegal,state,exception,if,no,link,sock,js,message,codec,is,available;public,void,set,message,codec,sock,js,message,codec,message,codec,this,message,codec,message,codec
DefaultSockJsService -> public void setMessageCodec(SockJsMessageCodec messageCodec);1375461043;The codec to use for encoding and decoding SockJS messages._@exception IllegalStateException if no {@link SockJsMessageCodec} is available;public void setMessageCodec(SockJsMessageCodec messageCodec) {_		this.messageCodec = messageCodec__	};the,codec,to,use,for,encoding,and,decoding,sock,js,messages,exception,illegal,state,exception,if,no,link,sock,js,message,codec,is,available;public,void,set,message,codec,sock,js,message,codec,message,codec,this,message,codec,message,codec
DefaultSockJsService -> public void setMessageCodec(SockJsMessageCodec messageCodec);1375542207;The codec to use for encoding and decoding SockJS messages._@exception IllegalStateException if no {@link SockJsMessageCodec} is available;public void setMessageCodec(SockJsMessageCodec messageCodec) {_		this.messageCodec = messageCodec__	};the,codec,to,use,for,encoding,and,decoding,sock,js,messages,exception,illegal,state,exception,if,no,link,sock,js,message,codec,is,available;public,void,set,message,codec,sock,js,message,codec,message,codec,this,message,codec,message,codec
DefaultSockJsService -> public void setMessageCodec(SockJsMessageCodec messageCodec);1376429280;The codec to use for encoding and decoding SockJS messages._@exception IllegalStateException if no {@link SockJsMessageCodec} is available;public void setMessageCodec(SockJsMessageCodec messageCodec) {_		this.messageCodec = messageCodec__	};the,codec,to,use,for,encoding,and,decoding,sock,js,messages,exception,illegal,state,exception,if,no,link,sock,js,message,codec,is,available;public,void,set,message,codec,sock,js,message,codec,message,codec,this,message,codec,message,codec
DefaultSockJsService -> public void setMessageCodec(SockJsMessageCodec messageCodec);1376429280;The codec to use for encoding and decoding SockJS messages._@exception IllegalStateException if no {@link SockJsMessageCodec} is available;public void setMessageCodec(SockJsMessageCodec messageCodec) {_		this.messageCodec = messageCodec__	};the,codec,to,use,for,encoding,and,decoding,sock,js,messages,exception,illegal,state,exception,if,no,link,sock,js,message,codec,is,available;public,void,set,message,codec,sock,js,message,codec,message,codec,this,message,codec,message,codec
DefaultSockJsService -> public void setMessageCodec(SockJsMessageCodec messageCodec);1376429281;The codec to use for encoding and decoding SockJS messages._@exception IllegalStateException if no {@link SockJsMessageCodec} is available;public void setMessageCodec(SockJsMessageCodec messageCodec) {_		this.messageCodec = messageCodec__	};the,codec,to,use,for,encoding,and,decoding,sock,js,messages,exception,illegal,state,exception,if,no,link,sock,js,message,codec,is,available;public,void,set,message,codec,sock,js,message,codec,message,codec,this,message,codec,message,codec
DefaultSockJsService -> public void setMessageCodec(SockJsMessageCodec messageCodec);1376489702;The codec to use for encoding and decoding SockJS messages._@exception IllegalStateException if no {@link SockJsMessageCodec} is available;public void setMessageCodec(SockJsMessageCodec messageCodec) {_		this.messageCodec = messageCodec__	};the,codec,to,use,for,encoding,and,decoding,sock,js,messages,exception,illegal,state,exception,if,no,link,sock,js,message,codec,is,available;public,void,set,message,codec,sock,js,message,codec,message,codec,this,message,codec,message,codec
DefaultSockJsService -> public void setMessageCodec(SockJsMessageCodec messageCodec);1377218103;The codec to use for encoding and decoding SockJS messages._@exception IllegalStateException if no {@link SockJsMessageCodec} is available;public void setMessageCodec(SockJsMessageCodec messageCodec) {_		this.messageCodec = messageCodec__	};the,codec,to,use,for,encoding,and,decoding,sock,js,messages,exception,illegal,state,exception,if,no,link,sock,js,message,codec,is,available;public,void,set,message,codec,sock,js,message,codec,message,codec,this,message,codec,message,codec
DefaultSockJsService -> public void setMessageCodec(SockJsMessageCodec messageCodec);1377693833;The codec to use for encoding and decoding SockJS messages._@exception IllegalStateException if no {@link SockJsMessageCodec} is available;public void setMessageCodec(SockJsMessageCodec messageCodec) {_		this.messageCodec = messageCodec__	};the,codec,to,use,for,encoding,and,decoding,sock,js,messages,exception,illegal,state,exception,if,no,link,sock,js,message,codec,is,available;public,void,set,message,codec,sock,js,message,codec,message,codec,this,message,codec,message,codec
DefaultSockJsService -> public void setMessageCodec(SockJsMessageCodec messageCodec);1380214379;The codec to use for encoding and decoding SockJS messages._@exception IllegalStateException if no {@link SockJsMessageCodec} is available;public void setMessageCodec(SockJsMessageCodec messageCodec) {_		this.messageCodec = messageCodec__	};the,codec,to,use,for,encoding,and,decoding,sock,js,messages,exception,illegal,state,exception,if,no,link,sock,js,message,codec,is,available;public,void,set,message,codec,sock,js,message,codec,message,codec,this,message,codec,message,codec
DefaultSockJsService -> public void setMessageCodec(SockJsMessageCodec messageCodec);1385412762;The codec to use for encoding and decoding SockJS messages._@exception IllegalStateException if no {@link SockJsMessageCodec} is available;public void setMessageCodec(SockJsMessageCodec messageCodec) {_		this.messageCodec = messageCodec__	};the,codec,to,use,for,encoding,and,decoding,sock,js,messages,exception,illegal,state,exception,if,no,link,sock,js,message,codec,is,available;public,void,set,message,codec,sock,js,message,codec,message,codec,this,message,codec,message,codec
DefaultSockJsService -> public void setMessageCodec(SockJsMessageCodec messageCodec);1385507478;The codec to use for encoding and decoding SockJS messages._@exception IllegalStateException if no {@link SockJsMessageCodec} is available;public void setMessageCodec(SockJsMessageCodec messageCodec) {_		this.messageCodec = messageCodec__	};the,codec,to,use,for,encoding,and,decoding,sock,js,messages,exception,illegal,state,exception,if,no,link,sock,js,message,codec,is,available;public,void,set,message,codec,sock,js,message,codec,message,codec,this,message,codec,message,codec
DefaultSockJsService -> public void setMessageCodec(SockJsMessageCodec messageCodec);1386019952;The codec to use for encoding and decoding SockJS messages._@exception IllegalStateException if no {@link SockJsMessageCodec} is available;public void setMessageCodec(SockJsMessageCodec messageCodec) {_		this.messageCodec = messageCodec__	};the,codec,to,use,for,encoding,and,decoding,sock,js,messages,exception,illegal,state,exception,if,no,link,sock,js,message,codec,is,available;public,void,set,message,codec,sock,js,message,codec,message,codec,this,message,codec,message,codec
DefaultSockJsService -> public DefaultSockJsService(TaskScheduler scheduler, TransportHandler... handlerOverrides);1386462352;Create a DefaultSockJsService with overridden {@link TransportHandler handler} types_replacing the corresponding default handler implementation._@param scheduler a task scheduler for heart-beat messages and removing timed-out sessions__the provided TaskScheduler should be declared as a Spring bean to ensure it gets_initialized at start-up and shuts down when the application stops_@param handlerOverrides zero or more overrides to the default transport handler types;public DefaultSockJsService(TaskScheduler scheduler, TransportHandler... handlerOverrides) {_		this(scheduler, Arrays.asList(handlerOverrides))__	};create,a,default,sock,js,service,with,overridden,link,transport,handler,handler,types,replacing,the,corresponding,default,handler,implementation,param,scheduler,a,task,scheduler,for,heart,beat,messages,and,removing,timed,out,sessions,the,provided,task,scheduler,should,be,declared,as,a,spring,bean,to,ensure,it,gets,initialized,at,start,up,and,shuts,down,when,the,application,stops,param,handler,overrides,zero,or,more,overrides,to,the,default,transport,handler,types;public,default,sock,js,service,task,scheduler,scheduler,transport,handler,handler,overrides,this,scheduler,arrays,as,list,handler,overrides
DefaultSockJsService -> public DefaultSockJsService(TaskScheduler scheduler, TransportHandler... handlerOverrides);1404880799;Create a DefaultSockJsService with overridden {@link TransportHandler handler} types_replacing the corresponding default handler implementation._@param scheduler a task scheduler for heart-beat messages and removing timed-out sessions__the provided TaskScheduler should be declared as a Spring bean to ensure it gets_initialized at start-up and shuts down when the application stops_@param handlerOverrides zero or more overrides to the default transport handler types;public DefaultSockJsService(TaskScheduler scheduler, TransportHandler... handlerOverrides) {_		this(scheduler, Arrays.asList(handlerOverrides))__	};create,a,default,sock,js,service,with,overridden,link,transport,handler,handler,types,replacing,the,corresponding,default,handler,implementation,param,scheduler,a,task,scheduler,for,heart,beat,messages,and,removing,timed,out,sessions,the,provided,task,scheduler,should,be,declared,as,a,spring,bean,to,ensure,it,gets,initialized,at,start,up,and,shuts,down,when,the,application,stops,param,handler,overrides,zero,or,more,overrides,to,the,default,transport,handler,types;public,default,sock,js,service,task,scheduler,scheduler,transport,handler,handler,overrides,this,scheduler,arrays,as,list,handler,overrides
DefaultSockJsService -> public DefaultSockJsService(TaskScheduler scheduler, TransportHandler... handlerOverrides);1435026644;Create a DefaultSockJsService with overridden {@link TransportHandler handler} types_replacing the corresponding default handler implementation._@param scheduler a task scheduler for heart-beat messages and removing timed-out sessions__the provided TaskScheduler should be declared as a Spring bean to ensure it gets_initialized at start-up and shuts down when the application stops_@param handlerOverrides zero or more overrides to the default transport handler types;public DefaultSockJsService(TaskScheduler scheduler, TransportHandler... handlerOverrides) {_		this(scheduler, Arrays.asList(handlerOverrides))__	};create,a,default,sock,js,service,with,overridden,link,transport,handler,handler,types,replacing,the,corresponding,default,handler,implementation,param,scheduler,a,task,scheduler,for,heart,beat,messages,and,removing,timed,out,sessions,the,provided,task,scheduler,should,be,declared,as,a,spring,bean,to,ensure,it,gets,initialized,at,start,up,and,shuts,down,when,the,application,stops,param,handler,overrides,zero,or,more,overrides,to,the,default,transport,handler,types;public,default,sock,js,service,task,scheduler,scheduler,transport,handler,handler,overrides,this,scheduler,arrays,as,list,handler,overrides
DefaultSockJsService -> public DefaultSockJsService(TaskScheduler scheduler, TransportHandler... handlerOverrides);1467730834;Create a DefaultSockJsService with overridden {@link TransportHandler handler} types_replacing the corresponding default handler implementation._@param scheduler a task scheduler for heart-beat messages and removing timed-out sessions__the provided TaskScheduler should be declared as a Spring bean to ensure it gets_initialized at start-up and shuts down when the application stops_@param handlerOverrides zero or more overrides to the default transport handler types;public DefaultSockJsService(TaskScheduler scheduler, TransportHandler... handlerOverrides) {_		this(scheduler, Arrays.asList(handlerOverrides))__	};create,a,default,sock,js,service,with,overridden,link,transport,handler,handler,types,replacing,the,corresponding,default,handler,implementation,param,scheduler,a,task,scheduler,for,heart,beat,messages,and,removing,timed,out,sessions,the,provided,task,scheduler,should,be,declared,as,a,spring,bean,to,ensure,it,gets,initialized,at,start,up,and,shuts,down,when,the,application,stops,param,handler,overrides,zero,or,more,overrides,to,the,default,transport,handler,types;public,default,sock,js,service,task,scheduler,scheduler,transport,handler,handler,overrides,this,scheduler,arrays,as,list,handler,overrides
DefaultSockJsService -> public DefaultSockJsService(TaskScheduler scheduler, TransportHandler... handlerOverrides);1496259743;Create a DefaultSockJsService with overridden {@link TransportHandler handler} types_replacing the corresponding default handler implementation._@param scheduler a task scheduler for heart-beat messages and removing timed-out sessions__the provided TaskScheduler should be declared as a Spring bean to ensure it gets_initialized at start-up and shuts down when the application stops_@param handlerOverrides zero or more overrides to the default transport handler types;public DefaultSockJsService(TaskScheduler scheduler, TransportHandler... handlerOverrides) {_		this(scheduler, Arrays.asList(handlerOverrides))__	};create,a,default,sock,js,service,with,overridden,link,transport,handler,handler,types,replacing,the,corresponding,default,handler,implementation,param,scheduler,a,task,scheduler,for,heart,beat,messages,and,removing,timed,out,sessions,the,provided,task,scheduler,should,be,declared,as,a,spring,bean,to,ensure,it,gets,initialized,at,start,up,and,shuts,down,when,the,application,stops,param,handler,overrides,zero,or,more,overrides,to,the,default,transport,handler,types;public,default,sock,js,service,task,scheduler,scheduler,transport,handler,handler,overrides,this,scheduler,arrays,as,list,handler,overrides
DefaultSockJsService -> public DefaultSockJsService(TaskScheduler scheduler, TransportHandler... handlerOverrides);1528452948;Create a DefaultSockJsService with overridden {@link TransportHandler handler} types_replacing the corresponding default handler implementation._@param scheduler a task scheduler for heart-beat messages and removing timed-out sessions__the provided TaskScheduler should be declared as a Spring bean to ensure it gets_initialized at start-up and shuts down when the application stops_@param handlerOverrides zero or more overrides to the default transport handler types;public DefaultSockJsService(TaskScheduler scheduler, TransportHandler... handlerOverrides) {_		this(scheduler, Arrays.asList(handlerOverrides))__	};create,a,default,sock,js,service,with,overridden,link,transport,handler,handler,types,replacing,the,corresponding,default,handler,implementation,param,scheduler,a,task,scheduler,for,heart,beat,messages,and,removing,timed,out,sessions,the,provided,task,scheduler,should,be,declared,as,a,spring,bean,to,ensure,it,gets,initialized,at,start,up,and,shuts,down,when,the,application,stops,param,handler,overrides,zero,or,more,overrides,to,the,default,transport,handler,types;public,default,sock,js,service,task,scheduler,scheduler,transport,handler,handler,overrides,this,scheduler,arrays,as,list,handler,overrides
DefaultSockJsService -> public DefaultSockJsService(TaskScheduler scheduler, TransportHandler... handlerOverrides);1530174524;Create a DefaultSockJsService with overridden {@link TransportHandler handler} types_replacing the corresponding default handler implementation._@param scheduler a task scheduler for heart-beat messages and removing timed-out sessions__the provided TaskScheduler should be declared as a Spring bean to ensure it gets_initialized at start-up and shuts down when the application stops_@param handlerOverrides zero or more overrides to the default transport handler types;public DefaultSockJsService(TaskScheduler scheduler, TransportHandler... handlerOverrides) {_		this(scheduler, Arrays.asList(handlerOverrides))__	};create,a,default,sock,js,service,with,overridden,link,transport,handler,handler,types,replacing,the,corresponding,default,handler,implementation,param,scheduler,a,task,scheduler,for,heart,beat,messages,and,removing,timed,out,sessions,the,provided,task,scheduler,should,be,declared,as,a,spring,bean,to,ensure,it,gets,initialized,at,start,up,and,shuts,down,when,the,application,stops,param,handler,overrides,zero,or,more,overrides,to,the,default,transport,handler,types;public,default,sock,js,service,task,scheduler,scheduler,transport,handler,handler,overrides,this,scheduler,arrays,as,list,handler,overrides
