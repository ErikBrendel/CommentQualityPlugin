# id;timestamp;commentText;codeText;commentWords;codeWords
OriginHandshakeInterceptor -> public OriginHandshakeInterceptor();1414354684;Default constructor with no origin allowed.;public OriginHandshakeInterceptor() {_		this.allowedOrigins = new ArrayList<String>()__	};default,constructor,with,no,origin,allowed;public,origin,handshake,interceptor,this,allowed,origins,new,array,list,string
OriginHandshakeInterceptor -> public OriginHandshakeInterceptor();1414415063;Default constructor with no origin allowed.;public OriginHandshakeInterceptor() {_		this.allowedOrigins = new ArrayList<String>()__	};default,constructor,with,no,origin,allowed;public,origin,handshake,interceptor,this,allowed,origins,new,array,list,string
OriginHandshakeInterceptor -> public OriginHandshakeInterceptor();1414854717;Default constructor with no origin allowed.;public OriginHandshakeInterceptor() {_		this.allowedOrigins = new ArrayList<String>()__	};default,constructor,with,no,origin,allowed;public,origin,handshake,interceptor,this,allowed,origins,new,array,list,string
OriginHandshakeInterceptor -> public OriginHandshakeInterceptor();1423479411;Default constructor with no origin allowed.;public OriginHandshakeInterceptor() {_		this.allowedOrigins = new ArrayList<String>()__	};default,constructor,with,no,origin,allowed;public,origin,handshake,interceptor,this,allowed,origins,new,array,list,string
OriginHandshakeInterceptor -> public OriginHandshakeInterceptor();1424248215;Default constructor with only same origin requests allowed.;public OriginHandshakeInterceptor() {_		this.allowedOrigins = new ArrayList<String>()__	};default,constructor,with,only,same,origin,requests,allowed;public,origin,handshake,interceptor,this,allowed,origins,new,array,list,string
OriginHandshakeInterceptor -> public OriginHandshakeInterceptor();1430734105;Default constructor with only same origin requests allowed.;public OriginHandshakeInterceptor() {_		this.allowedOrigins = new ArrayList<String>()__	};default,constructor,with,only,same,origin,requests,allowed;public,origin,handshake,interceptor,this,allowed,origins,new,array,list,string
OriginHandshakeInterceptor -> public OriginHandshakeInterceptor();1442848138;Default constructor with only same origin requests allowed.;public OriginHandshakeInterceptor() {_		this.allowedOrigins = new ArrayList<String>()__	};default,constructor,with,only,same,origin,requests,allowed;public,origin,handshake,interceptor,this,allowed,origins,new,array,list,string
OriginHandshakeInterceptor -> public OriginHandshakeInterceptor();1449242513;Default constructor with only same origin requests allowed.;public OriginHandshakeInterceptor() {_	};default,constructor,with,only,same,origin,requests,allowed;public,origin,handshake,interceptor
OriginHandshakeInterceptor -> public OriginHandshakeInterceptor();1467730834;Default constructor with only same origin requests allowed.;public OriginHandshakeInterceptor() {_	};default,constructor,with,only,same,origin,requests,allowed;public,origin,handshake,interceptor
OriginHandshakeInterceptor -> public OriginHandshakeInterceptor();1475614836;Default constructor with only same origin requests allowed.;public OriginHandshakeInterceptor() {_	};default,constructor,with,only,same,origin,requests,allowed;public,origin,handshake,interceptor
OriginHandshakeInterceptor -> public OriginHandshakeInterceptor();1500495740;Default constructor with only same origin requests allowed.;public OriginHandshakeInterceptor() {_	};default,constructor,with,only,same,origin,requests,allowed;public,origin,handshake,interceptor
OriginHandshakeInterceptor -> public OriginHandshakeInterceptor();1530174524;Default constructor with only same origin requests allowed.;public OriginHandshakeInterceptor() {_	};default,constructor,with,only,same,origin,requests,allowed;public,origin,handshake,interceptor
OriginHandshakeInterceptor -> public void setAllowedOrigins(Collection<String> allowedOrigins);1414354684;Use this property to define a collection of allowed origins.;public void setAllowedOrigins(Collection<String> allowedOrigins) {_		this.allowedOrigins.clear()__		if (allowedOrigins != null) {_			this.allowedOrigins.addAll(allowedOrigins)__		}_	};use,this,property,to,define,a,collection,of,allowed,origins;public,void,set,allowed,origins,collection,string,allowed,origins,this,allowed,origins,clear,if,allowed,origins,null,this,allowed,origins,add,all,allowed,origins
OriginHandshakeInterceptor -> public void setAllowedOrigins(Collection<String> allowedOrigins);1414415063;Use this property to define a collection of allowed origins.;public void setAllowedOrigins(Collection<String> allowedOrigins) {_		this.allowedOrigins.clear()__		if (allowedOrigins != null) {_			this.allowedOrigins.addAll(allowedOrigins)__		}_	};use,this,property,to,define,a,collection,of,allowed,origins;public,void,set,allowed,origins,collection,string,allowed,origins,this,allowed,origins,clear,if,allowed,origins,null,this,allowed,origins,add,all,allowed,origins
OriginHandshakeInterceptor -> public void setAllowedOrigins(Collection<String> allowedOrigins);1414854717;Use this property to define a collection of allowed origins.;public void setAllowedOrigins(Collection<String> allowedOrigins) {_		this.allowedOrigins.clear()__		if (allowedOrigins != null) {_			this.allowedOrigins.addAll(allowedOrigins)__		}_	};use,this,property,to,define,a,collection,of,allowed,origins;public,void,set,allowed,origins,collection,string,allowed,origins,this,allowed,origins,clear,if,allowed,origins,null,this,allowed,origins,add,all,allowed,origins
OriginHandshakeInterceptor -> public void setAllowedOrigins(Collection<String> allowedOrigins);1423479411;Configure allowed {@code Origin} header values. This check is mostly designed for_browser clients. There is nothing preventing other types of client to modify the_{@code Origin} header value.__<p>Each provided allowed origin must start by "http://", "https://" or be "*"_(means that all origins are allowed).__@see <a href="https://tools.ietf.org/html/rfc6454">RFC 6454: The Web Origin Concept</a>;public void setAllowedOrigins(Collection<String> allowedOrigins) {_		Assert.notNull(allowedOrigins, "Allowed origin Collection must not be null")__		for (String allowedOrigin : allowedOrigins) {_			Assert.isTrue(allowedOrigin.equals("*") || allowedOrigin.startsWith("http://") ||_					allowedOrigin.startsWith("https://"), "Invalid allowed origin provided: \"" +_					allowedOrigin + "\". It must start with \"http://\", \"https://\" or be \"*\"")__		}_		this.allowedOrigins.clear()__		this.allowedOrigins.addAll(allowedOrigins)__	};configure,allowed,code,origin,header,values,this,check,is,mostly,designed,for,browser,clients,there,is,nothing,preventing,other,types,of,client,to,modify,the,code,origin,header,value,p,each,provided,allowed,origin,must,start,by,http,https,or,be,means,that,all,origins,are,allowed,see,a,href,https,tools,ietf,org,html,rfc6454,rfc,6454,the,web,origin,concept,a;public,void,set,allowed,origins,collection,string,allowed,origins,assert,not,null,allowed,origins,allowed,origin,collection,must,not,be,null,for,string,allowed,origin,allowed,origins,assert,is,true,allowed,origin,equals,allowed,origin,starts,with,http,allowed,origin,starts,with,https,invalid,allowed,origin,provided,allowed,origin,it,must,start,with,http,https,or,be,this,allowed,origins,clear,this,allowed,origins,add,all,allowed,origins
OriginHandshakeInterceptor -> public void setAllowedOrigins(Collection<String> allowedOrigins);1424248215;Configure allowed {@code Origin} header values. This check is mostly designed for_browser clients. There is nothing preventing other types of client to modify the_{@code Origin} header value.__<p>Each provided allowed origin must start by "http://", "https://" or be "*"_(means that all origins are allowed).__@see <a href="https://tools.ietf.org/html/rfc6454">RFC 6454: The Web Origin Concept</a>;public void setAllowedOrigins(Collection<String> allowedOrigins) {_		Assert.notNull(allowedOrigins, "Allowed origin Collection must not be null")__		for (String allowedOrigin : allowedOrigins) {_			Assert.isTrue(allowedOrigin.equals("*") || allowedOrigin.startsWith("http://") ||_					allowedOrigin.startsWith("https://"), "Invalid allowed origin provided: \"" +_					allowedOrigin + "\". It must start with \"http://\", \"https://\" or be \"*\"")__		}_		this.allowedOrigins.clear()__		this.allowedOrigins.addAll(allowedOrigins)__	};configure,allowed,code,origin,header,values,this,check,is,mostly,designed,for,browser,clients,there,is,nothing,preventing,other,types,of,client,to,modify,the,code,origin,header,value,p,each,provided,allowed,origin,must,start,by,http,https,or,be,means,that,all,origins,are,allowed,see,a,href,https,tools,ietf,org,html,rfc6454,rfc,6454,the,web,origin,concept,a;public,void,set,allowed,origins,collection,string,allowed,origins,assert,not,null,allowed,origins,allowed,origin,collection,must,not,be,null,for,string,allowed,origin,allowed,origins,assert,is,true,allowed,origin,equals,allowed,origin,starts,with,http,allowed,origin,starts,with,https,invalid,allowed,origin,provided,allowed,origin,it,must,start,with,http,https,or,be,this,allowed,origins,clear,this,allowed,origins,add,all,allowed,origins
OriginHandshakeInterceptor -> public void setAllowedOrigins(Collection<String> allowedOrigins);1430734105;Configure allowed {@code Origin} header values. This check is mostly_designed for browsers. There is nothing preventing other types of client_to modify the {@code Origin} header value.__<p>Each provided allowed origin must have a scheme, and optionally a port_(e.g. "http://example.org", "http://example.org:9090"). An allowed origin_string may also be "*" in which case all origins are allowed.__@see <a href="https://tools.ietf.org/html/rfc6454">RFC 6454: The Web Origin Concept</a>;public void setAllowedOrigins(Collection<String> allowedOrigins) {_		Assert.notNull(allowedOrigins, "Allowed origin Collection must not be null")__		this.allowedOrigins.clear()__		this.allowedOrigins.addAll(allowedOrigins)__	};configure,allowed,code,origin,header,values,this,check,is,mostly,designed,for,browsers,there,is,nothing,preventing,other,types,of,client,to,modify,the,code,origin,header,value,p,each,provided,allowed,origin,must,have,a,scheme,and,optionally,a,port,e,g,http,example,org,http,example,org,9090,an,allowed,origin,string,may,also,be,in,which,case,all,origins,are,allowed,see,a,href,https,tools,ietf,org,html,rfc6454,rfc,6454,the,web,origin,concept,a;public,void,set,allowed,origins,collection,string,allowed,origins,assert,not,null,allowed,origins,allowed,origin,collection,must,not,be,null,this,allowed,origins,clear,this,allowed,origins,add,all,allowed,origins
OriginHandshakeInterceptor -> public void setAllowedOrigins(Collection<String> allowedOrigins);1442848138;Configure allowed {@code Origin} header values. This check is mostly_designed for browsers. There is nothing preventing other types of client_to modify the {@code Origin} header value.__<p>Each provided allowed origin must have a scheme, and optionally a port_(e.g. "http://example.org", "http://example.org:9090"). An allowed origin_string may also be "*" in which case all origins are allowed.__@see <a href="https://tools.ietf.org/html/rfc6454">RFC 6454: The Web Origin Concept</a>;public void setAllowedOrigins(Collection<String> allowedOrigins) {_		Assert.notNull(allowedOrigins, "Allowed origin Collection must not be null")__		this.allowedOrigins.clear()__		this.allowedOrigins.addAll(allowedOrigins)__	};configure,allowed,code,origin,header,values,this,check,is,mostly,designed,for,browsers,there,is,nothing,preventing,other,types,of,client,to,modify,the,code,origin,header,value,p,each,provided,allowed,origin,must,have,a,scheme,and,optionally,a,port,e,g,http,example,org,http,example,org,9090,an,allowed,origin,string,may,also,be,in,which,case,all,origins,are,allowed,see,a,href,https,tools,ietf,org,html,rfc6454,rfc,6454,the,web,origin,concept,a;public,void,set,allowed,origins,collection,string,allowed,origins,assert,not,null,allowed,origins,allowed,origin,collection,must,not,be,null,this,allowed,origins,clear,this,allowed,origins,add,all,allowed,origins
OriginHandshakeInterceptor -> public void setAllowedOrigins(Collection<String> allowedOrigins);1449242513;Configure allowed {@code Origin} header values. This check is mostly_designed for browsers. There is nothing preventing other types of client_to modify the {@code Origin} header value._<p>Each provided allowed origin must have a scheme, and optionally a port_(e.g. "http://example.org", "http://example.org:9090"). An allowed origin_string may also be "*" in which case all origins are allowed._@see <a href="https://tools.ietf.org/html/rfc6454">RFC 6454: The Web Origin Concept</a>;public void setAllowedOrigins(Collection<String> allowedOrigins) {_		Assert.notNull(allowedOrigins, "Allowed origins Collection must not be null")__		this.allowedOrigins.clear()__		this.allowedOrigins.addAll(allowedOrigins)__	};configure,allowed,code,origin,header,values,this,check,is,mostly,designed,for,browsers,there,is,nothing,preventing,other,types,of,client,to,modify,the,code,origin,header,value,p,each,provided,allowed,origin,must,have,a,scheme,and,optionally,a,port,e,g,http,example,org,http,example,org,9090,an,allowed,origin,string,may,also,be,in,which,case,all,origins,are,allowed,see,a,href,https,tools,ietf,org,html,rfc6454,rfc,6454,the,web,origin,concept,a;public,void,set,allowed,origins,collection,string,allowed,origins,assert,not,null,allowed,origins,allowed,origins,collection,must,not,be,null,this,allowed,origins,clear,this,allowed,origins,add,all,allowed,origins
OriginHandshakeInterceptor -> public void setAllowedOrigins(Collection<String> allowedOrigins);1467730834;Configure allowed {@code Origin} header values. This check is mostly_designed for browsers. There is nothing preventing other types of client_to modify the {@code Origin} header value._<p>Each provided allowed origin must have a scheme, and optionally a port_(e.g. "http://example.org", "http://example.org:9090"). An allowed origin_string may also be "*" in which case all origins are allowed._@see <a href="https://tools.ietf.org/html/rfc6454">RFC 6454: The Web Origin Concept</a>;public void setAllowedOrigins(Collection<String> allowedOrigins) {_		Assert.notNull(allowedOrigins, "Allowed origins Collection must not be null")__		this.allowedOrigins.clear()__		this.allowedOrigins.addAll(allowedOrigins)__	};configure,allowed,code,origin,header,values,this,check,is,mostly,designed,for,browsers,there,is,nothing,preventing,other,types,of,client,to,modify,the,code,origin,header,value,p,each,provided,allowed,origin,must,have,a,scheme,and,optionally,a,port,e,g,http,example,org,http,example,org,9090,an,allowed,origin,string,may,also,be,in,which,case,all,origins,are,allowed,see,a,href,https,tools,ietf,org,html,rfc6454,rfc,6454,the,web,origin,concept,a;public,void,set,allowed,origins,collection,string,allowed,origins,assert,not,null,allowed,origins,allowed,origins,collection,must,not,be,null,this,allowed,origins,clear,this,allowed,origins,add,all,allowed,origins
OriginHandshakeInterceptor -> public void setAllowedOrigins(Collection<String> allowedOrigins);1475614836;Configure allowed {@code Origin} header values. This check is mostly_designed for browsers. There is nothing preventing other types of client_to modify the {@code Origin} header value._<p>Each provided allowed origin must have a scheme, and optionally a port_(e.g. "http://example.org", "http://example.org:9090"). An allowed origin_string may also be "*" in which case all origins are allowed._@see <a href="https://tools.ietf.org/html/rfc6454">RFC 6454: The Web Origin Concept</a>;public void setAllowedOrigins(Collection<String> allowedOrigins) {_		Assert.notNull(allowedOrigins, "Allowed origins Collection must not be null")__		this.allowedOrigins.clear()__		this.allowedOrigins.addAll(allowedOrigins)__	};configure,allowed,code,origin,header,values,this,check,is,mostly,designed,for,browsers,there,is,nothing,preventing,other,types,of,client,to,modify,the,code,origin,header,value,p,each,provided,allowed,origin,must,have,a,scheme,and,optionally,a,port,e,g,http,example,org,http,example,org,9090,an,allowed,origin,string,may,also,be,in,which,case,all,origins,are,allowed,see,a,href,https,tools,ietf,org,html,rfc6454,rfc,6454,the,web,origin,concept,a;public,void,set,allowed,origins,collection,string,allowed,origins,assert,not,null,allowed,origins,allowed,origins,collection,must,not,be,null,this,allowed,origins,clear,this,allowed,origins,add,all,allowed,origins
OriginHandshakeInterceptor -> public void setAllowedOrigins(Collection<String> allowedOrigins);1500495740;Configure allowed {@code Origin} header values. This check is mostly_designed for browsers. There is nothing preventing other types of client_to modify the {@code Origin} header value._<p>Each provided allowed origin must have a scheme, and optionally a port_(e.g. "http://example.org", "http://example.org:9090"). An allowed origin_string may also be "*" in which case all origins are allowed._@see <a href="https://tools.ietf.org/html/rfc6454">RFC 6454: The Web Origin Concept</a>;public void setAllowedOrigins(Collection<String> allowedOrigins) {_		Assert.notNull(allowedOrigins, "Allowed origins Collection must not be null")__		this.allowedOrigins.clear()__		this.allowedOrigins.addAll(allowedOrigins)__	};configure,allowed,code,origin,header,values,this,check,is,mostly,designed,for,browsers,there,is,nothing,preventing,other,types,of,client,to,modify,the,code,origin,header,value,p,each,provided,allowed,origin,must,have,a,scheme,and,optionally,a,port,e,g,http,example,org,http,example,org,9090,an,allowed,origin,string,may,also,be,in,which,case,all,origins,are,allowed,see,a,href,https,tools,ietf,org,html,rfc6454,rfc,6454,the,web,origin,concept,a;public,void,set,allowed,origins,collection,string,allowed,origins,assert,not,null,allowed,origins,allowed,origins,collection,must,not,be,null,this,allowed,origins,clear,this,allowed,origins,add,all,allowed,origins
OriginHandshakeInterceptor -> public void setAllowedOrigins(Collection<String> allowedOrigins);1530174524;Configure allowed {@code Origin} header values. This check is mostly_designed for browsers. There is nothing preventing other types of client_to modify the {@code Origin} header value._<p>Each provided allowed origin must have a scheme, and optionally a port_(e.g. "http://example.org", "http://example.org:9090"). An allowed origin_string may also be "*" in which case all origins are allowed._@see <a href="https://tools.ietf.org/html/rfc6454">RFC 6454: The Web Origin Concept</a>;public void setAllowedOrigins(Collection<String> allowedOrigins) {_		Assert.notNull(allowedOrigins, "Allowed origins Collection must not be null")__		this.allowedOrigins.clear()__		this.allowedOrigins.addAll(allowedOrigins)__	};configure,allowed,code,origin,header,values,this,check,is,mostly,designed,for,browsers,there,is,nothing,preventing,other,types,of,client,to,modify,the,code,origin,header,value,p,each,provided,allowed,origin,must,have,a,scheme,and,optionally,a,port,e,g,http,example,org,http,example,org,9090,an,allowed,origin,string,may,also,be,in,which,case,all,origins,are,allowed,see,a,href,https,tools,ietf,org,html,rfc6454,rfc,6454,the,web,origin,concept,a;public,void,set,allowed,origins,collection,string,allowed,origins,assert,not,null,allowed,origins,allowed,origins,collection,must,not,be,null,this,allowed,origins,clear,this,allowed,origins,add,all,allowed,origins
OriginHandshakeInterceptor -> public Collection<String> getAllowedOrigins();1423479411;@see #setAllowedOrigins(Collection)_@since 4.1.5;public Collection<String> getAllowedOrigins() {_		return Collections.unmodifiableList(this.allowedOrigins)__	};see,set,allowed,origins,collection,since,4,1,5;public,collection,string,get,allowed,origins,return,collections,unmodifiable,list,this,allowed,origins
OriginHandshakeInterceptor -> public Collection<String> getAllowedOrigins();1424248215;@see #setAllowedOrigins(Collection)_@since 4.1.5;public Collection<String> getAllowedOrigins() {_		return Collections.unmodifiableList(this.allowedOrigins)__	};see,set,allowed,origins,collection,since,4,1,5;public,collection,string,get,allowed,origins,return,collections,unmodifiable,list,this,allowed,origins
OriginHandshakeInterceptor -> public Collection<String> getAllowedOrigins();1430734105;@see #setAllowedOrigins(Collection)_@since 4.1.5;public Collection<String> getAllowedOrigins() {_		return Collections.unmodifiableList(this.allowedOrigins)__	};see,set,allowed,origins,collection,since,4,1,5;public,collection,string,get,allowed,origins,return,collections,unmodifiable,list,this,allowed,origins
OriginHandshakeInterceptor -> public Collection<String> getAllowedOrigins();1442848138;@see #setAllowedOrigins(Collection)_@since 4.1.5;public Collection<String> getAllowedOrigins() {_		return Collections.unmodifiableList(this.allowedOrigins)__	};see,set,allowed,origins,collection,since,4,1,5;public,collection,string,get,allowed,origins,return,collections,unmodifiable,list,this,allowed,origins
OriginHandshakeInterceptor -> public Collection<String> getAllowedOrigins();1449242513;@since 4.1.5_@see #setAllowedOrigins;public Collection<String> getAllowedOrigins() {_		return Collections.unmodifiableSet(this.allowedOrigins)__	};since,4,1,5,see,set,allowed,origins;public,collection,string,get,allowed,origins,return,collections,unmodifiable,set,this,allowed,origins
OriginHandshakeInterceptor -> public Collection<String> getAllowedOrigins();1467730834;@since 4.1.5_@see #setAllowedOrigins;public Collection<String> getAllowedOrigins() {_		return Collections.unmodifiableSet(this.allowedOrigins)__	};since,4,1,5,see,set,allowed,origins;public,collection,string,get,allowed,origins,return,collections,unmodifiable,set,this,allowed,origins
OriginHandshakeInterceptor -> public Collection<String> getAllowedOrigins();1475614836;@since 4.1.5_@see #setAllowedOrigins;public Collection<String> getAllowedOrigins() {_		return Collections.unmodifiableSet(this.allowedOrigins)__	};since,4,1,5,see,set,allowed,origins;public,collection,string,get,allowed,origins,return,collections,unmodifiable,set,this,allowed,origins
OriginHandshakeInterceptor -> public Collection<String> getAllowedOrigins();1500495740;@since 4.1.5_@see #setAllowedOrigins;public Collection<String> getAllowedOrigins() {_		return Collections.unmodifiableSet(this.allowedOrigins)__	};since,4,1,5,see,set,allowed,origins;public,collection,string,get,allowed,origins,return,collections,unmodifiable,set,this,allowed,origins
OriginHandshakeInterceptor -> public Collection<String> getAllowedOrigins();1530174524;Return the allowed {@code Origin} header values._@since 4.1.5_@see #setAllowedOrigins;public Collection<String> getAllowedOrigins() {_		return Collections.unmodifiableSet(this.allowedOrigins)__	};return,the,allowed,code,origin,header,values,since,4,1,5,see,set,allowed,origins;public,collection,string,get,allowed,origins,return,collections,unmodifiable,set,this,allowed,origins
OriginHandshakeInterceptor -> public OriginHandshakeInterceptor(Collection<String> allowedOrigins);1424248215;Constructor using the specified allowed origin values.__@see #setAllowedOrigins(Collection);public OriginHandshakeInterceptor(Collection<String> allowedOrigins) {_		this()__		setAllowedOrigins(allowedOrigins)__	};constructor,using,the,specified,allowed,origin,values,see,set,allowed,origins,collection;public,origin,handshake,interceptor,collection,string,allowed,origins,this,set,allowed,origins,allowed,origins
OriginHandshakeInterceptor -> public OriginHandshakeInterceptor(Collection<String> allowedOrigins);1430734105;Constructor using the specified allowed origin values.__@see #setAllowedOrigins(Collection);public OriginHandshakeInterceptor(Collection<String> allowedOrigins) {_		this()__		setAllowedOrigins(allowedOrigins)__	};constructor,using,the,specified,allowed,origin,values,see,set,allowed,origins,collection;public,origin,handshake,interceptor,collection,string,allowed,origins,this,set,allowed,origins,allowed,origins
OriginHandshakeInterceptor -> public OriginHandshakeInterceptor(Collection<String> allowedOrigins);1442848138;Constructor using the specified allowed origin values.__@see #setAllowedOrigins(Collection);public OriginHandshakeInterceptor(Collection<String> allowedOrigins) {_		this()__		setAllowedOrigins(allowedOrigins)__	};constructor,using,the,specified,allowed,origin,values,see,set,allowed,origins,collection;public,origin,handshake,interceptor,collection,string,allowed,origins,this,set,allowed,origins,allowed,origins
OriginHandshakeInterceptor -> public OriginHandshakeInterceptor(Collection<String> allowedOrigins);1449242513;Constructor using the specified allowed origin values._@see #setAllowedOrigins(Collection);public OriginHandshakeInterceptor(Collection<String> allowedOrigins) {_		setAllowedOrigins(allowedOrigins)__	};constructor,using,the,specified,allowed,origin,values,see,set,allowed,origins,collection;public,origin,handshake,interceptor,collection,string,allowed,origins,set,allowed,origins,allowed,origins
OriginHandshakeInterceptor -> public OriginHandshakeInterceptor(Collection<String> allowedOrigins);1467730834;Constructor using the specified allowed origin values._@see #setAllowedOrigins(Collection);public OriginHandshakeInterceptor(Collection<String> allowedOrigins) {_		setAllowedOrigins(allowedOrigins)__	};constructor,using,the,specified,allowed,origin,values,see,set,allowed,origins,collection;public,origin,handshake,interceptor,collection,string,allowed,origins,set,allowed,origins,allowed,origins
OriginHandshakeInterceptor -> public OriginHandshakeInterceptor(Collection<String> allowedOrigins);1475614836;Constructor using the specified allowed origin values._@see #setAllowedOrigins(Collection);public OriginHandshakeInterceptor(Collection<String> allowedOrigins) {_		setAllowedOrigins(allowedOrigins)__	};constructor,using,the,specified,allowed,origin,values,see,set,allowed,origins,collection;public,origin,handshake,interceptor,collection,string,allowed,origins,set,allowed,origins,allowed,origins
OriginHandshakeInterceptor -> public OriginHandshakeInterceptor(Collection<String> allowedOrigins);1500495740;Constructor using the specified allowed origin values._@see #setAllowedOrigins(Collection);public OriginHandshakeInterceptor(Collection<String> allowedOrigins) {_		setAllowedOrigins(allowedOrigins)__	};constructor,using,the,specified,allowed,origin,values,see,set,allowed,origins,collection;public,origin,handshake,interceptor,collection,string,allowed,origins,set,allowed,origins,allowed,origins
OriginHandshakeInterceptor -> public OriginHandshakeInterceptor(Collection<String> allowedOrigins);1530174524;Constructor using the specified allowed origin values._@see #setAllowedOrigins(Collection);public OriginHandshakeInterceptor(Collection<String> allowedOrigins) {_		setAllowedOrigins(allowedOrigins)__	};constructor,using,the,specified,allowed,origin,values,see,set,allowed,origins,collection;public,origin,handshake,interceptor,collection,string,allowed,origins,set,allowed,origins,allowed,origins
