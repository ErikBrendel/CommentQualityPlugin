commented;modifiers;parameterAmount;loc;comment;code
false;public;1;29;;@Override public void setValues(PreparedStatement ps) throws SQLException {     int parameterPosition = 1.     if (this.args != null && this.argTypes != null) {         for (int i = 0. i < this.args.length. i++) {             Object arg = this.args[i].             if (arg instanceof Collection && this.argTypes[i] != Types.ARRAY) {                 Collection<?> entries = (Collection<?>) arg.                 for (Object entry : entries) {                     if (entry instanceof Object[]) {                         Object[] valueArray = ((Object[]) entry).                         for (Object argValue : valueArray) {                             doSetValue(ps, parameterPosition, this.argTypes[i], argValue).                             parameterPosition++.                         }                     } else {                         doSetValue(ps, parameterPosition, this.argTypes[i], entry).                         parameterPosition++.                     }                 }             } else {                 doSetValue(ps, parameterPosition, this.argTypes[i], arg).                 parameterPosition++.             }         }     } }
true;protected;4;5;/**  * Set the value for the prepared statement's specified parameter position using the passed in  * value and type. This method can be overridden by sub-classes if needed.  * @param ps the PreparedStatement  * @param parameterPosition index of the parameter position  * @param argType the argument type  * @param argValue the argument value  * @throws SQLException if thrown by PreparedStatement methods  */ ;/**  * Set the value for the prepared statement's specified parameter position using the passed in  * value and type. This method can be overridden by sub-classes if needed.  * @param ps the PreparedStatement  * @param parameterPosition index of the parameter position  * @param argType the argument type  * @param argValue the argument value  * @throws SQLException if thrown by PreparedStatement methods  */ protected void doSetValue(PreparedStatement ps, int parameterPosition, int argType, Object argValue) throws SQLException {     StatementCreatorUtils.setParameterValue(ps, parameterPosition, argType, argValue). }
false;public;0;4;;@Override public void cleanupParameters() {     StatementCreatorUtils.cleanupParameters(this.args). }
