# id;timestamp;commentText;codeText;commentWords;codeWords
ColumnMapRowMapper -> @Nullable 	protected Object getColumnValue(ResultSet rs, int index) throws SQLException;1496837955;Retrieve a JDBC object value for the specified column._<p>The default implementation uses the {@code getObject} method._Additionally, this implementation includes a "hack" to get around Oracle_returning a non standard object for their TIMESTAMP datatype._@param rs is the ResultSet holding the data_@param index is the column index_@return the Object returned_@see org.springframework.jdbc.support.JdbcUtils#getResultSetValue;@Nullable_	protected Object getColumnValue(ResultSet rs, int index) throws SQLException {_		return JdbcUtils.getResultSetValue(rs, index)__	};retrieve,a,jdbc,object,value,for,the,specified,column,p,the,default,implementation,uses,the,code,get,object,method,additionally,this,implementation,includes,a,hack,to,get,around,oracle,returning,a,non,standard,object,for,their,timestamp,datatype,param,rs,is,the,result,set,holding,the,data,param,index,is,the,column,index,return,the,object,returned,see,org,springframework,jdbc,support,jdbc,utils,get,result,set,value;nullable,protected,object,get,column,value,result,set,rs,int,index,throws,sqlexception,return,jdbc,utils,get,result,set,value,rs,index
ColumnMapRowMapper -> @Nullable 	protected Object getColumnValue(ResultSet rs, int index) throws SQLException;1528719423;Retrieve a JDBC object value for the specified column._<p>The default implementation uses the {@code getObject} method._Additionally, this implementation includes a "hack" to get around Oracle_returning a non standard object for their TIMESTAMP datatype._@param rs is the ResultSet holding the data_@param index is the column index_@return the Object returned_@see org.springframework.jdbc.support.JdbcUtils#getResultSetValue;@Nullable_	protected Object getColumnValue(ResultSet rs, int index) throws SQLException {_		return JdbcUtils.getResultSetValue(rs, index)__	};retrieve,a,jdbc,object,value,for,the,specified,column,p,the,default,implementation,uses,the,code,get,object,method,additionally,this,implementation,includes,a,hack,to,get,around,oracle,returning,a,non,standard,object,for,their,timestamp,datatype,param,rs,is,the,result,set,holding,the,data,param,index,is,the,column,index,return,the,object,returned,see,org,springframework,jdbc,support,jdbc,utils,get,result,set,value;nullable,protected,object,get,column,value,result,set,rs,int,index,throws,sqlexception,return,jdbc,utils,get,result,set,value,rs,index
ColumnMapRowMapper -> protected String getColumnKey(String columnName);1328020251;Determine the key to use for the given column in the column Map._@param columnName the column name as returned by the ResultSet_@return the column key to use_@see java.sql.ResultSetMetaData#getColumnName;protected String getColumnKey(String columnName) {_		return columnName__	};determine,the,key,to,use,for,the,given,column,in,the,column,map,param,column,name,the,column,name,as,returned,by,the,result,set,return,the,column,key,to,use,see,java,sql,result,set,meta,data,get,column,name;protected,string,get,column,key,string,column,name,return,column,name
ColumnMapRowMapper -> protected String getColumnKey(String columnName);1337254729;Determine the key to use for the given column in the column Map._@param columnName the column name as returned by the ResultSet_@return the column key to use_@see java.sql.ResultSetMetaData#getColumnName;protected String getColumnKey(String columnName) {_		return columnName__	};determine,the,key,to,use,for,the,given,column,in,the,column,map,param,column,name,the,column,name,as,returned,by,the,result,set,return,the,column,key,to,use,see,java,sql,result,set,meta,data,get,column,name;protected,string,get,column,key,string,column,name,return,column,name
ColumnMapRowMapper -> protected String getColumnKey(String columnName);1356735495;Determine the key to use for the given column in the column Map._@param columnName the column name as returned by the ResultSet_@return the column key to use_@see java.sql.ResultSetMetaData#getColumnName;protected String getColumnKey(String columnName) {_		return columnName__	};determine,the,key,to,use,for,the,given,column,in,the,column,map,param,column,name,the,column,name,as,returned,by,the,result,set,return,the,column,key,to,use,see,java,sql,result,set,meta,data,get,column,name;protected,string,get,column,key,string,column,name,return,column,name
ColumnMapRowMapper -> protected String getColumnKey(String columnName);1357119239;Determine the key to use for the given column in the column Map._@param columnName the column name as returned by the ResultSet_@return the column key to use_@see java.sql.ResultSetMetaData#getColumnName;protected String getColumnKey(String columnName) {_		return columnName__	};determine,the,key,to,use,for,the,given,column,in,the,column,map,param,column,name,the,column,name,as,returned,by,the,result,set,return,the,column,key,to,use,see,java,sql,result,set,meta,data,get,column,name;protected,string,get,column,key,string,column,name,return,column,name
ColumnMapRowMapper -> protected String getColumnKey(String columnName);1368482696;Determine the key to use for the given column in the column Map._@param columnName the column name as returned by the ResultSet_@return the column key to use_@see java.sql.ResultSetMetaData#getColumnName;protected String getColumnKey(String columnName) {_		return columnName__	};determine,the,key,to,use,for,the,given,column,in,the,column,map,param,column,name,the,column,name,as,returned,by,the,result,set,return,the,column,key,to,use,see,java,sql,result,set,meta,data,get,column,name;protected,string,get,column,key,string,column,name,return,column,name
ColumnMapRowMapper -> protected String getColumnKey(String columnName);1467730834;Determine the key to use for the given column in the column Map._@param columnName the column name as returned by the ResultSet_@return the column key to use_@see java.sql.ResultSetMetaData#getColumnName;protected String getColumnKey(String columnName) {_		return columnName__	};determine,the,key,to,use,for,the,given,column,in,the,column,map,param,column,name,the,column,name,as,returned,by,the,result,set,return,the,column,key,to,use,see,java,sql,result,set,meta,data,get,column,name;protected,string,get,column,key,string,column,name,return,column,name
ColumnMapRowMapper -> protected String getColumnKey(String columnName);1496837955;Determine the key to use for the given column in the column Map._@param columnName the column name as returned by the ResultSet_@return the column key to use_@see java.sql.ResultSetMetaData#getColumnName;protected String getColumnKey(String columnName) {_		return columnName__	};determine,the,key,to,use,for,the,given,column,in,the,column,map,param,column,name,the,column,name,as,returned,by,the,result,set,return,the,column,key,to,use,see,java,sql,result,set,meta,data,get,column,name;protected,string,get,column,key,string,column,name,return,column,name
ColumnMapRowMapper -> protected String getColumnKey(String columnName);1528719423;Determine the key to use for the given column in the column Map._@param columnName the column name as returned by the ResultSet_@return the column key to use_@see java.sql.ResultSetMetaData#getColumnName;protected String getColumnKey(String columnName) {_		return columnName__	};determine,the,key,to,use,for,the,given,column,in,the,column,map,param,column,name,the,column,name,as,returned,by,the,result,set,return,the,column,key,to,use,see,java,sql,result,set,meta,data,get,column,name;protected,string,get,column,key,string,column,name,return,column,name
ColumnMapRowMapper -> protected Map<String, Object> createColumnMap(int columnCount);1337254729;Create a Map instance to be used as column map._<p>By default, a linked case-insensitive Map will be created._@param columnCount the column count, to be used as initial_capacity for the Map_@return the new Map instance_@see org.springframework.util.LinkedCaseInsensitiveMap;protected Map<String, Object> createColumnMap(int columnCount) {_		return new LinkedCaseInsensitiveMap<Object>(columnCount)__	};create,a,map,instance,to,be,used,as,column,map,p,by,default,a,linked,case,insensitive,map,will,be,created,param,column,count,the,column,count,to,be,used,as,initial,capacity,for,the,map,return,the,new,map,instance,see,org,springframework,util,linked,case,insensitive,map;protected,map,string,object,create,column,map,int,column,count,return,new,linked,case,insensitive,map,object,column,count
ColumnMapRowMapper -> protected Map<String, Object> createColumnMap(int columnCount);1356735495;Create a Map instance to be used as column map._<p>By default, a linked case-insensitive Map will be created._@param columnCount the column count, to be used as initial_capacity for the Map_@return the new Map instance_@see org.springframework.util.LinkedCaseInsensitiveMap;protected Map<String, Object> createColumnMap(int columnCount) {_		return new LinkedCaseInsensitiveMap<Object>(columnCount)__	};create,a,map,instance,to,be,used,as,column,map,p,by,default,a,linked,case,insensitive,map,will,be,created,param,column,count,the,column,count,to,be,used,as,initial,capacity,for,the,map,return,the,new,map,instance,see,org,springframework,util,linked,case,insensitive,map;protected,map,string,object,create,column,map,int,column,count,return,new,linked,case,insensitive,map,object,column,count
ColumnMapRowMapper -> protected Map<String, Object> createColumnMap(int columnCount);1357119239;Create a Map instance to be used as column map._<p>By default, a linked case-insensitive Map will be created._@param columnCount the column count, to be used as initial_capacity for the Map_@return the new Map instance_@see org.springframework.util.LinkedCaseInsensitiveMap;protected Map<String, Object> createColumnMap(int columnCount) {_		return new LinkedCaseInsensitiveMap<Object>(columnCount)__	};create,a,map,instance,to,be,used,as,column,map,p,by,default,a,linked,case,insensitive,map,will,be,created,param,column,count,the,column,count,to,be,used,as,initial,capacity,for,the,map,return,the,new,map,instance,see,org,springframework,util,linked,case,insensitive,map;protected,map,string,object,create,column,map,int,column,count,return,new,linked,case,insensitive,map,object,column,count
ColumnMapRowMapper -> protected Map<String, Object> createColumnMap(int columnCount);1368482696;Create a Map instance to be used as column map._<p>By default, a linked case-insensitive Map will be created._@param columnCount the column count, to be used as initial_capacity for the Map_@return the new Map instance_@see org.springframework.util.LinkedCaseInsensitiveMap;protected Map<String, Object> createColumnMap(int columnCount) {_		return new LinkedCaseInsensitiveMap<Object>(columnCount)__	};create,a,map,instance,to,be,used,as,column,map,p,by,default,a,linked,case,insensitive,map,will,be,created,param,column,count,the,column,count,to,be,used,as,initial,capacity,for,the,map,return,the,new,map,instance,see,org,springframework,util,linked,case,insensitive,map;protected,map,string,object,create,column,map,int,column,count,return,new,linked,case,insensitive,map,object,column,count
ColumnMapRowMapper -> protected Map<String, Object> createColumnMap(int columnCount);1467730834;Create a Map instance to be used as column map._<p>By default, a linked case-insensitive Map will be created._@param columnCount the column count, to be used as initial_capacity for the Map_@return the new Map instance_@see org.springframework.util.LinkedCaseInsensitiveMap;protected Map<String, Object> createColumnMap(int columnCount) {_		return new LinkedCaseInsensitiveMap<>(columnCount)__	};create,a,map,instance,to,be,used,as,column,map,p,by,default,a,linked,case,insensitive,map,will,be,created,param,column,count,the,column,count,to,be,used,as,initial,capacity,for,the,map,return,the,new,map,instance,see,org,springframework,util,linked,case,insensitive,map;protected,map,string,object,create,column,map,int,column,count,return,new,linked,case,insensitive,map,column,count
ColumnMapRowMapper -> protected Map<String, Object> createColumnMap(int columnCount);1496837955;Create a Map instance to be used as column map._<p>By default, a linked case-insensitive Map will be created._@param columnCount the column count, to be used as initial_capacity for the Map_@return the new Map instance_@see org.springframework.util.LinkedCaseInsensitiveMap;protected Map<String, Object> createColumnMap(int columnCount) {_		return new LinkedCaseInsensitiveMap<>(columnCount)__	};create,a,map,instance,to,be,used,as,column,map,p,by,default,a,linked,case,insensitive,map,will,be,created,param,column,count,the,column,count,to,be,used,as,initial,capacity,for,the,map,return,the,new,map,instance,see,org,springframework,util,linked,case,insensitive,map;protected,map,string,object,create,column,map,int,column,count,return,new,linked,case,insensitive,map,column,count
ColumnMapRowMapper -> protected Map<String, Object> createColumnMap(int columnCount);1528719423;Create a Map instance to be used as column map._<p>By default, a linked case-insensitive Map will be created._@param columnCount the column count, to be used as initial_capacity for the Map_@return the new Map instance_@see org.springframework.util.LinkedCaseInsensitiveMap;protected Map<String, Object> createColumnMap(int columnCount) {_		return new LinkedCaseInsensitiveMap<>(columnCount)__	};create,a,map,instance,to,be,used,as,column,map,p,by,default,a,linked,case,insensitive,map,will,be,created,param,column,count,the,column,count,to,be,used,as,initial,capacity,for,the,map,return,the,new,map,instance,see,org,springframework,util,linked,case,insensitive,map;protected,map,string,object,create,column,map,int,column,count,return,new,linked,case,insensitive,map,column,count
ColumnMapRowMapper -> protected Object getColumnValue(ResultSet rs, int index) throws SQLException;1328020251;Retrieve a JDBC object value for the specified column._<p>The default implementation uses the <code>getObject</code> method._Additionally, this implementation includes a "hack" to get around Oracle_returning a non standard object for their TIMESTAMP datatype._@param rs is the ResultSet holding the data_@param index is the column index_@return the Object returned_@see org.springframework.jdbc.support.JdbcUtils#getResultSetValue;protected Object getColumnValue(ResultSet rs, int index) throws SQLException {_		return JdbcUtils.getResultSetValue(rs, index)__	};retrieve,a,jdbc,object,value,for,the,specified,column,p,the,default,implementation,uses,the,code,get,object,code,method,additionally,this,implementation,includes,a,hack,to,get,around,oracle,returning,a,non,standard,object,for,their,timestamp,datatype,param,rs,is,the,result,set,holding,the,data,param,index,is,the,column,index,return,the,object,returned,see,org,springframework,jdbc,support,jdbc,utils,get,result,set,value;protected,object,get,column,value,result,set,rs,int,index,throws,sqlexception,return,jdbc,utils,get,result,set,value,rs,index
ColumnMapRowMapper -> protected Object getColumnValue(ResultSet rs, int index) throws SQLException;1337254729;Retrieve a JDBC object value for the specified column._<p>The default implementation uses the <code>getObject</code> method._Additionally, this implementation includes a "hack" to get around Oracle_returning a non standard object for their TIMESTAMP datatype._@param rs is the ResultSet holding the data_@param index is the column index_@return the Object returned_@see org.springframework.jdbc.support.JdbcUtils#getResultSetValue;protected Object getColumnValue(ResultSet rs, int index) throws SQLException {_		return JdbcUtils.getResultSetValue(rs, index)__	};retrieve,a,jdbc,object,value,for,the,specified,column,p,the,default,implementation,uses,the,code,get,object,code,method,additionally,this,implementation,includes,a,hack,to,get,around,oracle,returning,a,non,standard,object,for,their,timestamp,datatype,param,rs,is,the,result,set,holding,the,data,param,index,is,the,column,index,return,the,object,returned,see,org,springframework,jdbc,support,jdbc,utils,get,result,set,value;protected,object,get,column,value,result,set,rs,int,index,throws,sqlexception,return,jdbc,utils,get,result,set,value,rs,index
ColumnMapRowMapper -> protected Object getColumnValue(ResultSet rs, int index) throws SQLException;1356735495;Retrieve a JDBC object value for the specified column._<p>The default implementation uses the {@code getObject} method._Additionally, this implementation includes a "hack" to get around Oracle_returning a non standard object for their TIMESTAMP datatype._@param rs is the ResultSet holding the data_@param index is the column index_@return the Object returned_@see org.springframework.jdbc.support.JdbcUtils#getResultSetValue;protected Object getColumnValue(ResultSet rs, int index) throws SQLException {_		return JdbcUtils.getResultSetValue(rs, index)__	};retrieve,a,jdbc,object,value,for,the,specified,column,p,the,default,implementation,uses,the,code,get,object,method,additionally,this,implementation,includes,a,hack,to,get,around,oracle,returning,a,non,standard,object,for,their,timestamp,datatype,param,rs,is,the,result,set,holding,the,data,param,index,is,the,column,index,return,the,object,returned,see,org,springframework,jdbc,support,jdbc,utils,get,result,set,value;protected,object,get,column,value,result,set,rs,int,index,throws,sqlexception,return,jdbc,utils,get,result,set,value,rs,index
ColumnMapRowMapper -> protected Object getColumnValue(ResultSet rs, int index) throws SQLException;1357119239;Retrieve a JDBC object value for the specified column._<p>The default implementation uses the {@code getObject} method._Additionally, this implementation includes a "hack" to get around Oracle_returning a non standard object for their TIMESTAMP datatype._@param rs is the ResultSet holding the data_@param index is the column index_@return the Object returned_@see org.springframework.jdbc.support.JdbcUtils#getResultSetValue;protected Object getColumnValue(ResultSet rs, int index) throws SQLException {_		return JdbcUtils.getResultSetValue(rs, index)__	};retrieve,a,jdbc,object,value,for,the,specified,column,p,the,default,implementation,uses,the,code,get,object,method,additionally,this,implementation,includes,a,hack,to,get,around,oracle,returning,a,non,standard,object,for,their,timestamp,datatype,param,rs,is,the,result,set,holding,the,data,param,index,is,the,column,index,return,the,object,returned,see,org,springframework,jdbc,support,jdbc,utils,get,result,set,value;protected,object,get,column,value,result,set,rs,int,index,throws,sqlexception,return,jdbc,utils,get,result,set,value,rs,index
ColumnMapRowMapper -> protected Object getColumnValue(ResultSet rs, int index) throws SQLException;1368482696;Retrieve a JDBC object value for the specified column._<p>The default implementation uses the {@code getObject} method._Additionally, this implementation includes a "hack" to get around Oracle_returning a non standard object for their TIMESTAMP datatype._@param rs is the ResultSet holding the data_@param index is the column index_@return the Object returned_@see org.springframework.jdbc.support.JdbcUtils#getResultSetValue;protected Object getColumnValue(ResultSet rs, int index) throws SQLException {_		return JdbcUtils.getResultSetValue(rs, index)__	};retrieve,a,jdbc,object,value,for,the,specified,column,p,the,default,implementation,uses,the,code,get,object,method,additionally,this,implementation,includes,a,hack,to,get,around,oracle,returning,a,non,standard,object,for,their,timestamp,datatype,param,rs,is,the,result,set,holding,the,data,param,index,is,the,column,index,return,the,object,returned,see,org,springframework,jdbc,support,jdbc,utils,get,result,set,value;protected,object,get,column,value,result,set,rs,int,index,throws,sqlexception,return,jdbc,utils,get,result,set,value,rs,index
ColumnMapRowMapper -> protected Object getColumnValue(ResultSet rs, int index) throws SQLException;1467730834;Retrieve a JDBC object value for the specified column._<p>The default implementation uses the {@code getObject} method._Additionally, this implementation includes a "hack" to get around Oracle_returning a non standard object for their TIMESTAMP datatype._@param rs is the ResultSet holding the data_@param index is the column index_@return the Object returned_@see org.springframework.jdbc.support.JdbcUtils#getResultSetValue;protected Object getColumnValue(ResultSet rs, int index) throws SQLException {_		return JdbcUtils.getResultSetValue(rs, index)__	};retrieve,a,jdbc,object,value,for,the,specified,column,p,the,default,implementation,uses,the,code,get,object,method,additionally,this,implementation,includes,a,hack,to,get,around,oracle,returning,a,non,standard,object,for,their,timestamp,datatype,param,rs,is,the,result,set,holding,the,data,param,index,is,the,column,index,return,the,object,returned,see,org,springframework,jdbc,support,jdbc,utils,get,result,set,value;protected,object,get,column,value,result,set,rs,int,index,throws,sqlexception,return,jdbc,utils,get,result,set,value,rs,index
