# id;timestamp;commentText;codeText;commentWords;codeWords
SqlOperation -> protected ParsedSql getParsedSql();1328020251;Obtain a parsed representation of this operation's SQL statement._<p>Typically used for named parameter parsing.;protected ParsedSql getParsedSql() {_		synchronized (this.parsedSqlMonitor) {_			if (this.cachedSql == null) {_				this.cachedSql = NamedParameterUtils.parseSqlStatement(getSql())__			}_			return this.cachedSql__		}_	};obtain,a,parsed,representation,of,this,operation,s,sql,statement,p,typically,used,for,named,parameter,parsing;protected,parsed,sql,get,parsed,sql,synchronized,this,parsed,sql,monitor,if,this,cached,sql,null,this,cached,sql,named,parameter,utils,parse,sql,statement,get,sql,return,this,cached,sql
SqlOperation -> protected ParsedSql getParsedSql();1356735495;Obtain a parsed representation of this operation's SQL statement._<p>Typically used for named parameter parsing.;protected ParsedSql getParsedSql() {_		synchronized (this.parsedSqlMonitor) {_			if (this.cachedSql == null) {_				this.cachedSql = NamedParameterUtils.parseSqlStatement(getSql())__			}_			return this.cachedSql__		}_	};obtain,a,parsed,representation,of,this,operation,s,sql,statement,p,typically,used,for,named,parameter,parsing;protected,parsed,sql,get,parsed,sql,synchronized,this,parsed,sql,monitor,if,this,cached,sql,null,this,cached,sql,named,parameter,utils,parse,sql,statement,get,sql,return,this,cached,sql
SqlOperation -> protected ParsedSql getParsedSql();1487178248;Obtain a parsed representation of this operation's SQL statement._<p>Typically used for named parameter parsing.;protected ParsedSql getParsedSql() {_		synchronized (this.parsedSqlMonitor) {_			if (this.cachedSql == null) {_				this.cachedSql = NamedParameterUtils.parseSqlStatement(getSql())__			}_			return this.cachedSql__		}_	};obtain,a,parsed,representation,of,this,operation,s,sql,statement,p,typically,used,for,named,parameter,parsing;protected,parsed,sql,get,parsed,sql,synchronized,this,parsed,sql,monitor,if,this,cached,sql,null,this,cached,sql,named,parameter,utils,parse,sql,statement,get,sql,return,this,cached,sql
SqlOperation -> protected ParsedSql getParsedSql();1495868221;Obtain a parsed representation of this operation's SQL statement._<p>Typically used for named parameter parsing.;protected ParsedSql getParsedSql() {_		synchronized (this.parsedSqlMonitor) {_			if (this.cachedSql == null) {_				this.cachedSql = NamedParameterUtils.parseSqlStatement(getSql())__			}_			return this.cachedSql__		}_	};obtain,a,parsed,representation,of,this,operation,s,sql,statement,p,typically,used,for,named,parameter,parsing;protected,parsed,sql,get,parsed,sql,synchronized,this,parsed,sql,monitor,if,this,cached,sql,null,this,cached,sql,named,parameter,utils,parse,sql,statement,get,sql,return,this,cached,sql
SqlOperation -> protected ParsedSql getParsedSql();1496837955;Obtain a parsed representation of this operation's SQL statement._<p>Typically used for named parameter parsing.;protected ParsedSql getParsedSql() {_		synchronized (this.parsedSqlMonitor) {_			if (this.cachedSql == null) {_				this.cachedSql = NamedParameterUtils.parseSqlStatement(resolveSql())__			}_			return this.cachedSql__		}_	};obtain,a,parsed,representation,of,this,operation,s,sql,statement,p,typically,used,for,named,parameter,parsing;protected,parsed,sql,get,parsed,sql,synchronized,this,parsed,sql,monitor,if,this,cached,sql,null,this,cached,sql,named,parameter,utils,parse,sql,statement,resolve,sql,return,this,cached,sql
SqlOperation -> protected ParsedSql getParsedSql();1498780456;Obtain a parsed representation of this operation's SQL statement._<p>Typically used for named parameter parsing.;protected ParsedSql getParsedSql() {_		synchronized (this.parsedSqlMonitor) {_			if (this.cachedSql == null) {_				this.cachedSql = NamedParameterUtils.parseSqlStatement(resolveSql())__			}_			return this.cachedSql__		}_	};obtain,a,parsed,representation,of,this,operation,s,sql,statement,p,typically,used,for,named,parameter,parsing;protected,parsed,sql,get,parsed,sql,synchronized,this,parsed,sql,monitor,if,this,cached,sql,null,this,cached,sql,named,parameter,utils,parse,sql,statement,resolve,sql,return,this,cached,sql
SqlOperation -> protected ParsedSql getParsedSql();1530174524;Obtain a parsed representation of this operation's SQL statement._<p>Typically used for named parameter parsing.;protected ParsedSql getParsedSql() {_		synchronized (this.parsedSqlMonitor) {_			if (this.cachedSql == null) {_				this.cachedSql = NamedParameterUtils.parseSqlStatement(resolveSql())__			}_			return this.cachedSql__		}_	};obtain,a,parsed,representation,of,this,operation,s,sql,statement,p,typically,used,for,named,parameter,parsing;protected,parsed,sql,get,parsed,sql,synchronized,this,parsed,sql,monitor,if,this,cached,sql,null,this,cached,sql,named,parameter,utils,parse,sql,statement,resolve,sql,return,this,cached,sql
SqlOperation -> protected final PreparedStatementCreator newPreparedStatementCreator(String sqlToUse, @Nullable Object[] params);1495868221;Return a PreparedStatementCreator to perform an operation_with the given parameters._@param sqlToUse the actual SQL statement to use (if different from_the factory's, for example because of named parameter expanding)_@param params the parameter array (may be {@code null});protected final PreparedStatementCreator newPreparedStatementCreator(String sqlToUse, @Nullable Object[] params) {_		return this.preparedStatementFactory.newPreparedStatementCreator(sqlToUse, params)__	};return,a,prepared,statement,creator,to,perform,an,operation,with,the,given,parameters,param,sql,to,use,the,actual,sql,statement,to,use,if,different,from,the,factory,s,for,example,because,of,named,parameter,expanding,param,params,the,parameter,array,may,be,code,null;protected,final,prepared,statement,creator,new,prepared,statement,creator,string,sql,to,use,nullable,object,params,return,this,prepared,statement,factory,new,prepared,statement,creator,sql,to,use,params
SqlOperation -> protected final PreparedStatementCreator newPreparedStatementCreator(String sqlToUse, @Nullable Object[] params);1496837955;Return a PreparedStatementCreator to perform an operation_with the given parameters._@param sqlToUse the actual SQL statement to use (if different from_the factory's, for example because of named parameter expanding)_@param params the parameter array (may be {@code null});protected final PreparedStatementCreator newPreparedStatementCreator(String sqlToUse, @Nullable Object[] params) {_		return this.preparedStatementFactory.newPreparedStatementCreator(sqlToUse, params)__	};return,a,prepared,statement,creator,to,perform,an,operation,with,the,given,parameters,param,sql,to,use,the,actual,sql,statement,to,use,if,different,from,the,factory,s,for,example,because,of,named,parameter,expanding,param,params,the,parameter,array,may,be,code,null;protected,final,prepared,statement,creator,new,prepared,statement,creator,string,sql,to,use,nullable,object,params,return,this,prepared,statement,factory,new,prepared,statement,creator,sql,to,use,params
SqlOperation -> protected final PreparedStatementCreator newPreparedStatementCreator(String sqlToUse, @Nullable Object[] params);1498780456;Return a PreparedStatementCreator to perform an operation_with the given parameters._@param sqlToUse the actual SQL statement to use (if different from_the factory's, for example because of named parameter expanding)_@param params the parameter array (may be {@code null});protected final PreparedStatementCreator newPreparedStatementCreator(String sqlToUse, @Nullable Object[] params) {_		Assert.state(this.preparedStatementFactory != null, "No PreparedStatementFactory available")__		return this.preparedStatementFactory.newPreparedStatementCreator(sqlToUse, params)__	};return,a,prepared,statement,creator,to,perform,an,operation,with,the,given,parameters,param,sql,to,use,the,actual,sql,statement,to,use,if,different,from,the,factory,s,for,example,because,of,named,parameter,expanding,param,params,the,parameter,array,may,be,code,null;protected,final,prepared,statement,creator,new,prepared,statement,creator,string,sql,to,use,nullable,object,params,assert,state,this,prepared,statement,factory,null,no,prepared,statement,factory,available,return,this,prepared,statement,factory,new,prepared,statement,creator,sql,to,use,params
SqlOperation -> protected final PreparedStatementCreator newPreparedStatementCreator(String sqlToUse, @Nullable Object[] params);1530174524;Return a PreparedStatementCreator to perform an operation_with the given parameters._@param sqlToUse the actual SQL statement to use (if different from_the factory's, for example because of named parameter expanding)_@param params the parameter array (may be {@code null});protected final PreparedStatementCreator newPreparedStatementCreator(String sqlToUse, @Nullable Object[] params) {_		Assert.state(this.preparedStatementFactory != null, "No PreparedStatementFactory available")__		return this.preparedStatementFactory.newPreparedStatementCreator(sqlToUse, params)__	};return,a,prepared,statement,creator,to,perform,an,operation,with,the,given,parameters,param,sql,to,use,the,actual,sql,statement,to,use,if,different,from,the,factory,s,for,example,because,of,named,parameter,expanding,param,params,the,parameter,array,may,be,code,null;protected,final,prepared,statement,creator,new,prepared,statement,creator,string,sql,to,use,nullable,object,params,assert,state,this,prepared,statement,factory,null,no,prepared,statement,factory,available,return,this,prepared,statement,factory,new,prepared,statement,creator,sql,to,use,params
SqlOperation -> protected final PreparedStatementSetter newPreparedStatementSetter(@Nullable Object[] params);1495868221;Return a PreparedStatementSetter to perform an operation_with the given parameters._@param params the parameter array (may be {@code null});protected final PreparedStatementSetter newPreparedStatementSetter(@Nullable Object[] params) {_		return this.preparedStatementFactory.newPreparedStatementSetter(params)__	};return,a,prepared,statement,setter,to,perform,an,operation,with,the,given,parameters,param,params,the,parameter,array,may,be,code,null;protected,final,prepared,statement,setter,new,prepared,statement,setter,nullable,object,params,return,this,prepared,statement,factory,new,prepared,statement,setter,params
SqlOperation -> protected final PreparedStatementSetter newPreparedStatementSetter(@Nullable Object[] params);1496837955;Return a PreparedStatementSetter to perform an operation_with the given parameters._@param params the parameter array (may be {@code null});protected final PreparedStatementSetter newPreparedStatementSetter(@Nullable Object[] params) {_		return this.preparedStatementFactory.newPreparedStatementSetter(params)__	};return,a,prepared,statement,setter,to,perform,an,operation,with,the,given,parameters,param,params,the,parameter,array,may,be,code,null;protected,final,prepared,statement,setter,new,prepared,statement,setter,nullable,object,params,return,this,prepared,statement,factory,new,prepared,statement,setter,params
SqlOperation -> protected final PreparedStatementSetter newPreparedStatementSetter(@Nullable Object[] params);1498780456;Return a PreparedStatementSetter to perform an operation_with the given parameters._@param params the parameter array (may be {@code null});protected final PreparedStatementSetter newPreparedStatementSetter(@Nullable Object[] params) {_		Assert.state(this.preparedStatementFactory != null, "No PreparedStatementFactory available")__		return this.preparedStatementFactory.newPreparedStatementSetter(params)__	};return,a,prepared,statement,setter,to,perform,an,operation,with,the,given,parameters,param,params,the,parameter,array,may,be,code,null;protected,final,prepared,statement,setter,new,prepared,statement,setter,nullable,object,params,assert,state,this,prepared,statement,factory,null,no,prepared,statement,factory,available,return,this,prepared,statement,factory,new,prepared,statement,setter,params
SqlOperation -> protected final PreparedStatementSetter newPreparedStatementSetter(@Nullable Object[] params);1530174524;Return a PreparedStatementSetter to perform an operation_with the given parameters._@param params the parameter array (may be {@code null});protected final PreparedStatementSetter newPreparedStatementSetter(@Nullable Object[] params) {_		Assert.state(this.preparedStatementFactory != null, "No PreparedStatementFactory available")__		return this.preparedStatementFactory.newPreparedStatementSetter(params)__	};return,a,prepared,statement,setter,to,perform,an,operation,with,the,given,parameters,param,params,the,parameter,array,may,be,code,null;protected,final,prepared,statement,setter,new,prepared,statement,setter,nullable,object,params,assert,state,this,prepared,statement,factory,null,no,prepared,statement,factory,available,return,this,prepared,statement,factory,new,prepared,statement,setter,params
SqlOperation -> protected final PreparedStatementCreator newPreparedStatementCreator(@Nullable Object[] params);1495868221;Return a PreparedStatementCreator to perform an operation_with the given parameters._@param params the parameter array (may be {@code null});protected final PreparedStatementCreator newPreparedStatementCreator(@Nullable Object[] params) {_		return this.preparedStatementFactory.newPreparedStatementCreator(params)__	};return,a,prepared,statement,creator,to,perform,an,operation,with,the,given,parameters,param,params,the,parameter,array,may,be,code,null;protected,final,prepared,statement,creator,new,prepared,statement,creator,nullable,object,params,return,this,prepared,statement,factory,new,prepared,statement,creator,params
SqlOperation -> protected final PreparedStatementCreator newPreparedStatementCreator(@Nullable Object[] params);1496837955;Return a PreparedStatementCreator to perform an operation_with the given parameters._@param params the parameter array (may be {@code null});protected final PreparedStatementCreator newPreparedStatementCreator(@Nullable Object[] params) {_		return this.preparedStatementFactory.newPreparedStatementCreator(params)__	};return,a,prepared,statement,creator,to,perform,an,operation,with,the,given,parameters,param,params,the,parameter,array,may,be,code,null;protected,final,prepared,statement,creator,new,prepared,statement,creator,nullable,object,params,return,this,prepared,statement,factory,new,prepared,statement,creator,params
SqlOperation -> protected final PreparedStatementCreator newPreparedStatementCreator(@Nullable Object[] params);1498780456;Return a PreparedStatementCreator to perform an operation_with the given parameters._@param params the parameter array (may be {@code null});protected final PreparedStatementCreator newPreparedStatementCreator(@Nullable Object[] params) {_		Assert.state(this.preparedStatementFactory != null, "No PreparedStatementFactory available")__		return this.preparedStatementFactory.newPreparedStatementCreator(params)__	};return,a,prepared,statement,creator,to,perform,an,operation,with,the,given,parameters,param,params,the,parameter,array,may,be,code,null;protected,final,prepared,statement,creator,new,prepared,statement,creator,nullable,object,params,assert,state,this,prepared,statement,factory,null,no,prepared,statement,factory,available,return,this,prepared,statement,factory,new,prepared,statement,creator,params
SqlOperation -> protected final PreparedStatementCreator newPreparedStatementCreator(@Nullable Object[] params);1530174524;Return a PreparedStatementCreator to perform an operation_with the given parameters._@param params the parameter array (may be {@code null});protected final PreparedStatementCreator newPreparedStatementCreator(@Nullable Object[] params) {_		Assert.state(this.preparedStatementFactory != null, "No PreparedStatementFactory available")__		return this.preparedStatementFactory.newPreparedStatementCreator(params)__	};return,a,prepared,statement,creator,to,perform,an,operation,with,the,given,parameters,param,params,the,parameter,array,may,be,code,null;protected,final,prepared,statement,creator,new,prepared,statement,creator,nullable,object,params,assert,state,this,prepared,statement,factory,null,no,prepared,statement,factory,available,return,this,prepared,statement,factory,new,prepared,statement,creator,params
SqlOperation -> protected final PreparedStatementSetter newPreparedStatementSetter(Object[] params);1328020251;Return a PreparedStatementSetter to perform an operation_with the given parameters._@param params the parameter array (may be <code>null</code>);protected final PreparedStatementSetter newPreparedStatementSetter(Object[] params) {_		return this.preparedStatementFactory.newPreparedStatementSetter(params)__	};return,a,prepared,statement,setter,to,perform,an,operation,with,the,given,parameters,param,params,the,parameter,array,may,be,code,null,code;protected,final,prepared,statement,setter,new,prepared,statement,setter,object,params,return,this,prepared,statement,factory,new,prepared,statement,setter,params
SqlOperation -> protected final PreparedStatementSetter newPreparedStatementSetter(Object[] params);1356735495;Return a PreparedStatementSetter to perform an operation_with the given parameters._@param params the parameter array (may be {@code null});protected final PreparedStatementSetter newPreparedStatementSetter(Object[] params) {_		return this.preparedStatementFactory.newPreparedStatementSetter(params)__	};return,a,prepared,statement,setter,to,perform,an,operation,with,the,given,parameters,param,params,the,parameter,array,may,be,code,null;protected,final,prepared,statement,setter,new,prepared,statement,setter,object,params,return,this,prepared,statement,factory,new,prepared,statement,setter,params
SqlOperation -> protected final PreparedStatementSetter newPreparedStatementSetter(Object[] params);1487178248;Return a PreparedStatementSetter to perform an operation_with the given parameters._@param params the parameter array (may be {@code null});protected final PreparedStatementSetter newPreparedStatementSetter(Object[] params) {_		return this.preparedStatementFactory.newPreparedStatementSetter(params)__	};return,a,prepared,statement,setter,to,perform,an,operation,with,the,given,parameters,param,params,the,parameter,array,may,be,code,null;protected,final,prepared,statement,setter,new,prepared,statement,setter,object,params,return,this,prepared,statement,factory,new,prepared,statement,setter,params
SqlOperation -> protected final PreparedStatementCreator newPreparedStatementCreator(String sqlToUse, Object[] params);1328020251;Return a PreparedStatementCreator to perform an operation_with the given parameters._@param sqlToUse the actual SQL statement to use (if different from_the factory's, for example because of named parameter expanding)_@param params the parameter array (may be <code>null</code>);protected final PreparedStatementCreator newPreparedStatementCreator(String sqlToUse, Object[] params) {_		return this.preparedStatementFactory.newPreparedStatementCreator(sqlToUse, params)__	};return,a,prepared,statement,creator,to,perform,an,operation,with,the,given,parameters,param,sql,to,use,the,actual,sql,statement,to,use,if,different,from,the,factory,s,for,example,because,of,named,parameter,expanding,param,params,the,parameter,array,may,be,code,null,code;protected,final,prepared,statement,creator,new,prepared,statement,creator,string,sql,to,use,object,params,return,this,prepared,statement,factory,new,prepared,statement,creator,sql,to,use,params
SqlOperation -> protected final PreparedStatementCreator newPreparedStatementCreator(String sqlToUse, Object[] params);1356735495;Return a PreparedStatementCreator to perform an operation_with the given parameters._@param sqlToUse the actual SQL statement to use (if different from_the factory's, for example because of named parameter expanding)_@param params the parameter array (may be {@code null});protected final PreparedStatementCreator newPreparedStatementCreator(String sqlToUse, Object[] params) {_		return this.preparedStatementFactory.newPreparedStatementCreator(sqlToUse, params)__	};return,a,prepared,statement,creator,to,perform,an,operation,with,the,given,parameters,param,sql,to,use,the,actual,sql,statement,to,use,if,different,from,the,factory,s,for,example,because,of,named,parameter,expanding,param,params,the,parameter,array,may,be,code,null;protected,final,prepared,statement,creator,new,prepared,statement,creator,string,sql,to,use,object,params,return,this,prepared,statement,factory,new,prepared,statement,creator,sql,to,use,params
SqlOperation -> protected final PreparedStatementCreator newPreparedStatementCreator(String sqlToUse, Object[] params);1487178248;Return a PreparedStatementCreator to perform an operation_with the given parameters._@param sqlToUse the actual SQL statement to use (if different from_the factory's, for example because of named parameter expanding)_@param params the parameter array (may be {@code null});protected final PreparedStatementCreator newPreparedStatementCreator(String sqlToUse, Object[] params) {_		return this.preparedStatementFactory.newPreparedStatementCreator(sqlToUse, params)__	};return,a,prepared,statement,creator,to,perform,an,operation,with,the,given,parameters,param,sql,to,use,the,actual,sql,statement,to,use,if,different,from,the,factory,s,for,example,because,of,named,parameter,expanding,param,params,the,parameter,array,may,be,code,null;protected,final,prepared,statement,creator,new,prepared,statement,creator,string,sql,to,use,object,params,return,this,prepared,statement,factory,new,prepared,statement,creator,sql,to,use,params
SqlOperation -> @Override 	protected final void compileInternal();1328020251;Overridden method to configure the PreparedStatementCreatorFactory_based on our declared parameters.;@Override_	protected final void compileInternal() {_		this.preparedStatementFactory = new PreparedStatementCreatorFactory(getSql(), getDeclaredParameters())__		this.preparedStatementFactory.setResultSetType(getResultSetType())__		this.preparedStatementFactory.setUpdatableResults(isUpdatableResults())__		this.preparedStatementFactory.setReturnGeneratedKeys(isReturnGeneratedKeys())__		if (getGeneratedKeysColumnNames() != null) {_			this.preparedStatementFactory.setGeneratedKeysColumnNames(getGeneratedKeysColumnNames())__		}_		this.preparedStatementFactory.setNativeJdbcExtractor(getJdbcTemplate().getNativeJdbcExtractor())___		onCompileInternal()__	};overridden,method,to,configure,the,prepared,statement,creator,factory,based,on,our,declared,parameters;override,protected,final,void,compile,internal,this,prepared,statement,factory,new,prepared,statement,creator,factory,get,sql,get,declared,parameters,this,prepared,statement,factory,set,result,set,type,get,result,set,type,this,prepared,statement,factory,set,updatable,results,is,updatable,results,this,prepared,statement,factory,set,return,generated,keys,is,return,generated,keys,if,get,generated,keys,column,names,null,this,prepared,statement,factory,set,generated,keys,column,names,get,generated,keys,column,names,this,prepared,statement,factory,set,native,jdbc,extractor,get,jdbc,template,get,native,jdbc,extractor,on,compile,internal
SqlOperation -> @Override 	protected final void compileInternal();1356735495;Overridden method to configure the PreparedStatementCreatorFactory_based on our declared parameters.;@Override_	protected final void compileInternal() {_		this.preparedStatementFactory = new PreparedStatementCreatorFactory(getSql(), getDeclaredParameters())__		this.preparedStatementFactory.setResultSetType(getResultSetType())__		this.preparedStatementFactory.setUpdatableResults(isUpdatableResults())__		this.preparedStatementFactory.setReturnGeneratedKeys(isReturnGeneratedKeys())__		if (getGeneratedKeysColumnNames() != null) {_			this.preparedStatementFactory.setGeneratedKeysColumnNames(getGeneratedKeysColumnNames())__		}_		this.preparedStatementFactory.setNativeJdbcExtractor(getJdbcTemplate().getNativeJdbcExtractor())___		onCompileInternal()__	};overridden,method,to,configure,the,prepared,statement,creator,factory,based,on,our,declared,parameters;override,protected,final,void,compile,internal,this,prepared,statement,factory,new,prepared,statement,creator,factory,get,sql,get,declared,parameters,this,prepared,statement,factory,set,result,set,type,get,result,set,type,this,prepared,statement,factory,set,updatable,results,is,updatable,results,this,prepared,statement,factory,set,return,generated,keys,is,return,generated,keys,if,get,generated,keys,column,names,null,this,prepared,statement,factory,set,generated,keys,column,names,get,generated,keys,column,names,this,prepared,statement,factory,set,native,jdbc,extractor,get,jdbc,template,get,native,jdbc,extractor,on,compile,internal
SqlOperation -> @Override 	protected final void compileInternal();1487178248;Overridden method to configure the PreparedStatementCreatorFactory_based on our declared parameters.;@Override_	protected final void compileInternal() {_		this.preparedStatementFactory = new PreparedStatementCreatorFactory(getSql(), getDeclaredParameters())__		this.preparedStatementFactory.setResultSetType(getResultSetType())__		this.preparedStatementFactory.setUpdatableResults(isUpdatableResults())__		this.preparedStatementFactory.setReturnGeneratedKeys(isReturnGeneratedKeys())__		if (getGeneratedKeysColumnNames() != null) {_			this.preparedStatementFactory.setGeneratedKeysColumnNames(getGeneratedKeysColumnNames())__		}__		onCompileInternal()__	};overridden,method,to,configure,the,prepared,statement,creator,factory,based,on,our,declared,parameters;override,protected,final,void,compile,internal,this,prepared,statement,factory,new,prepared,statement,creator,factory,get,sql,get,declared,parameters,this,prepared,statement,factory,set,result,set,type,get,result,set,type,this,prepared,statement,factory,set,updatable,results,is,updatable,results,this,prepared,statement,factory,set,return,generated,keys,is,return,generated,keys,if,get,generated,keys,column,names,null,this,prepared,statement,factory,set,generated,keys,column,names,get,generated,keys,column,names,on,compile,internal
SqlOperation -> @Override 	protected final void compileInternal();1495868221;Overridden method to configure the PreparedStatementCreatorFactory_based on our declared parameters.;@Override_	protected final void compileInternal() {_		this.preparedStatementFactory = new PreparedStatementCreatorFactory(getSql(), getDeclaredParameters())__		this.preparedStatementFactory.setResultSetType(getResultSetType())__		this.preparedStatementFactory.setUpdatableResults(isUpdatableResults())__		this.preparedStatementFactory.setReturnGeneratedKeys(isReturnGeneratedKeys())__		if (getGeneratedKeysColumnNames() != null) {_			this.preparedStatementFactory.setGeneratedKeysColumnNames(getGeneratedKeysColumnNames())__		}__		onCompileInternal()__	};overridden,method,to,configure,the,prepared,statement,creator,factory,based,on,our,declared,parameters;override,protected,final,void,compile,internal,this,prepared,statement,factory,new,prepared,statement,creator,factory,get,sql,get,declared,parameters,this,prepared,statement,factory,set,result,set,type,get,result,set,type,this,prepared,statement,factory,set,updatable,results,is,updatable,results,this,prepared,statement,factory,set,return,generated,keys,is,return,generated,keys,if,get,generated,keys,column,names,null,this,prepared,statement,factory,set,generated,keys,column,names,get,generated,keys,column,names,on,compile,internal
SqlOperation -> @Override 	protected final void compileInternal();1496837955;Overridden method to configure the PreparedStatementCreatorFactory_based on our declared parameters.;@Override_	protected final void compileInternal() {_		this.preparedStatementFactory = new PreparedStatementCreatorFactory(resolveSql(), getDeclaredParameters())__		this.preparedStatementFactory.setResultSetType(getResultSetType())__		this.preparedStatementFactory.setUpdatableResults(isUpdatableResults())__		this.preparedStatementFactory.setReturnGeneratedKeys(isReturnGeneratedKeys())__		if (getGeneratedKeysColumnNames() != null) {_			this.preparedStatementFactory.setGeneratedKeysColumnNames(getGeneratedKeysColumnNames())__		}__		onCompileInternal()__	};overridden,method,to,configure,the,prepared,statement,creator,factory,based,on,our,declared,parameters;override,protected,final,void,compile,internal,this,prepared,statement,factory,new,prepared,statement,creator,factory,resolve,sql,get,declared,parameters,this,prepared,statement,factory,set,result,set,type,get,result,set,type,this,prepared,statement,factory,set,updatable,results,is,updatable,results,this,prepared,statement,factory,set,return,generated,keys,is,return,generated,keys,if,get,generated,keys,column,names,null,this,prepared,statement,factory,set,generated,keys,column,names,get,generated,keys,column,names,on,compile,internal
SqlOperation -> @Override 	protected final void compileInternal();1498780456;Overridden method to configure the PreparedStatementCreatorFactory_based on our declared parameters.;@Override_	protected final void compileInternal() {_		this.preparedStatementFactory = new PreparedStatementCreatorFactory(resolveSql(), getDeclaredParameters())__		this.preparedStatementFactory.setResultSetType(getResultSetType())__		this.preparedStatementFactory.setUpdatableResults(isUpdatableResults())__		this.preparedStatementFactory.setReturnGeneratedKeys(isReturnGeneratedKeys())__		if (getGeneratedKeysColumnNames() != null) {_			this.preparedStatementFactory.setGeneratedKeysColumnNames(getGeneratedKeysColumnNames())__		}__		onCompileInternal()__	};overridden,method,to,configure,the,prepared,statement,creator,factory,based,on,our,declared,parameters;override,protected,final,void,compile,internal,this,prepared,statement,factory,new,prepared,statement,creator,factory,resolve,sql,get,declared,parameters,this,prepared,statement,factory,set,result,set,type,get,result,set,type,this,prepared,statement,factory,set,updatable,results,is,updatable,results,this,prepared,statement,factory,set,return,generated,keys,is,return,generated,keys,if,get,generated,keys,column,names,null,this,prepared,statement,factory,set,generated,keys,column,names,get,generated,keys,column,names,on,compile,internal
SqlOperation -> @Override 	protected final void compileInternal();1530174524;Overridden method to configure the PreparedStatementCreatorFactory_based on our declared parameters.;@Override_	protected final void compileInternal() {_		this.preparedStatementFactory = new PreparedStatementCreatorFactory(resolveSql(), getDeclaredParameters())__		this.preparedStatementFactory.setResultSetType(getResultSetType())__		this.preparedStatementFactory.setUpdatableResults(isUpdatableResults())__		this.preparedStatementFactory.setReturnGeneratedKeys(isReturnGeneratedKeys())__		if (getGeneratedKeysColumnNames() != null) {_			this.preparedStatementFactory.setGeneratedKeysColumnNames(getGeneratedKeysColumnNames())__		}__		onCompileInternal()__	};overridden,method,to,configure,the,prepared,statement,creator,factory,based,on,our,declared,parameters;override,protected,final,void,compile,internal,this,prepared,statement,factory,new,prepared,statement,creator,factory,resolve,sql,get,declared,parameters,this,prepared,statement,factory,set,result,set,type,get,result,set,type,this,prepared,statement,factory,set,updatable,results,is,updatable,results,this,prepared,statement,factory,set,return,generated,keys,is,return,generated,keys,if,get,generated,keys,column,names,null,this,prepared,statement,factory,set,generated,keys,column,names,get,generated,keys,column,names,on,compile,internal
SqlOperation -> protected void onCompileInternal();1328020251;Hook method that subclasses may override to post-process compilation._This implementation does nothing._@see #compileInternal;protected void onCompileInternal() {_	};hook,method,that,subclasses,may,override,to,post,process,compilation,this,implementation,does,nothing,see,compile,internal;protected,void,on,compile,internal
SqlOperation -> protected void onCompileInternal();1356735495;Hook method that subclasses may override to post-process compilation._This implementation does nothing._@see #compileInternal;protected void onCompileInternal() {_	};hook,method,that,subclasses,may,override,to,post,process,compilation,this,implementation,does,nothing,see,compile,internal;protected,void,on,compile,internal
SqlOperation -> protected void onCompileInternal();1487178248;Hook method that subclasses may override to post-process compilation._This implementation does nothing._@see #compileInternal;protected void onCompileInternal() {_	};hook,method,that,subclasses,may,override,to,post,process,compilation,this,implementation,does,nothing,see,compile,internal;protected,void,on,compile,internal
SqlOperation -> protected void onCompileInternal();1495868221;Hook method that subclasses may override to post-process compilation._This implementation does nothing._@see #compileInternal;protected void onCompileInternal() {_	};hook,method,that,subclasses,may,override,to,post,process,compilation,this,implementation,does,nothing,see,compile,internal;protected,void,on,compile,internal
SqlOperation -> protected void onCompileInternal();1496837955;Hook method that subclasses may override to post-process compilation._This implementation does nothing._@see #compileInternal;protected void onCompileInternal() {_	};hook,method,that,subclasses,may,override,to,post,process,compilation,this,implementation,does,nothing,see,compile,internal;protected,void,on,compile,internal
SqlOperation -> protected void onCompileInternal();1498780456;Hook method that subclasses may override to post-process compilation._This implementation does nothing._@see #compileInternal;protected void onCompileInternal() {_	};hook,method,that,subclasses,may,override,to,post,process,compilation,this,implementation,does,nothing,see,compile,internal;protected,void,on,compile,internal
SqlOperation -> protected void onCompileInternal();1530174524;Hook method that subclasses may override to post-process compilation._This implementation does nothing._@see #compileInternal;protected void onCompileInternal() {_	};hook,method,that,subclasses,may,override,to,post,process,compilation,this,implementation,does,nothing,see,compile,internal;protected,void,on,compile,internal
SqlOperation -> protected final PreparedStatementCreator newPreparedStatementCreator(Object[] params);1328020251;Return a PreparedStatementCreator to perform an operation_with the given parameters._@param params the parameter array (may be <code>null</code>);protected final PreparedStatementCreator newPreparedStatementCreator(Object[] params) {_		return this.preparedStatementFactory.newPreparedStatementCreator(params)__	};return,a,prepared,statement,creator,to,perform,an,operation,with,the,given,parameters,param,params,the,parameter,array,may,be,code,null,code;protected,final,prepared,statement,creator,new,prepared,statement,creator,object,params,return,this,prepared,statement,factory,new,prepared,statement,creator,params
SqlOperation -> protected final PreparedStatementCreator newPreparedStatementCreator(Object[] params);1356735495;Return a PreparedStatementCreator to perform an operation_with the given parameters._@param params the parameter array (may be {@code null});protected final PreparedStatementCreator newPreparedStatementCreator(Object[] params) {_		return this.preparedStatementFactory.newPreparedStatementCreator(params)__	};return,a,prepared,statement,creator,to,perform,an,operation,with,the,given,parameters,param,params,the,parameter,array,may,be,code,null;protected,final,prepared,statement,creator,new,prepared,statement,creator,object,params,return,this,prepared,statement,factory,new,prepared,statement,creator,params
SqlOperation -> protected final PreparedStatementCreator newPreparedStatementCreator(Object[] params);1487178248;Return a PreparedStatementCreator to perform an operation_with the given parameters._@param params the parameter array (may be {@code null});protected final PreparedStatementCreator newPreparedStatementCreator(Object[] params) {_		return this.preparedStatementFactory.newPreparedStatementCreator(params)__	};return,a,prepared,statement,creator,to,perform,an,operation,with,the,given,parameters,param,params,the,parameter,array,may,be,code,null;protected,final,prepared,statement,creator,new,prepared,statement,creator,object,params,return,this,prepared,statement,factory,new,prepared,statement,creator,params
