commented;modifiers;parameterAmount;loc;comment;code
true;public;2;4;/**  * Register a SQL type for the given parameter.  * @param paramName the name of the parameter  * @param sqlType the SQL type of the parameter  */ ;/**  * Register a SQL type for the given parameter.  * @param paramName the name of the parameter  * @param sqlType the SQL type of the parameter  */ public void registerSqlType(String paramName, int sqlType) {     Assert.notNull(paramName, "Parameter name must not be null").     this.sqlTypes.put(paramName, sqlType). }
true;public;2;4;/**  * Register a SQL type for the given parameter.  * @param paramName the name of the parameter  * @param typeName the type name of the parameter  */ ;/**  * Register a SQL type for the given parameter.  * @param paramName the name of the parameter  * @param typeName the type name of the parameter  */ public void registerTypeName(String paramName, String typeName) {     Assert.notNull(paramName, "Parameter name must not be null").     this.typeNames.put(paramName, typeName). }
true;public;1;5;/**  * Return the SQL type for the given parameter, if registered.  * @param paramName the name of the parameter  * @return the SQL type of the parameter,  * or {@code TYPE_UNKNOWN} if not registered  */ ;/**  * Return the SQL type for the given parameter, if registered.  * @param paramName the name of the parameter  * @return the SQL type of the parameter,  * or {@code TYPE_UNKNOWN} if not registered  */ @Override public int getSqlType(String paramName) {     Assert.notNull(paramName, "Parameter name must not be null").     return this.sqlTypes.getOrDefault(paramName, TYPE_UNKNOWN). }
true;public;1;6;/**  * Return the type name for the given parameter, if registered.  * @param paramName the name of the parameter  * @return the type name of the parameter,  * or {@code null} if not registered  */ ;/**  * Return the type name for the given parameter, if registered.  * @param paramName the name of the parameter  * @return the type name of the parameter,  * or {@code null} if not registered  */ @Override @Nullable public String getTypeName(String paramName) {     Assert.notNull(paramName, "Parameter name must not be null").     return this.typeNames.get(paramName). }
