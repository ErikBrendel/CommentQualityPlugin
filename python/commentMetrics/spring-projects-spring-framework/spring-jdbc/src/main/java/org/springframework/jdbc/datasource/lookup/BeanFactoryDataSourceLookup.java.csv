# id;timestamp;commentText;codeText;commentWords;codeWords
BeanFactoryDataSourceLookup -> public BeanFactoryDataSourceLookup(BeanFactory beanFactory);1328020251;Create a new instance of the {@link BeanFactoryDataSourceLookup} class._<p>Use of this constructor is redundant if this object is being created_by a Spring IoC container, as the supplied {@link BeanFactory} will be_replaced by the {@link BeanFactory} that creates it (c.f. the_{@link BeanFactoryAware} contract). So only use this constructor if you_are using this class outside the context of a Spring IoC container._@param beanFactory the bean factory to be used to lookup {@link DataSource DataSources};public BeanFactoryDataSourceLookup(BeanFactory beanFactory) {_		Assert.notNull(beanFactory, "BeanFactory is required")__		this.beanFactory = beanFactory__	};create,a,new,instance,of,the,link,bean,factory,data,source,lookup,class,p,use,of,this,constructor,is,redundant,if,this,object,is,being,created,by,a,spring,io,c,container,as,the,supplied,link,bean,factory,will,be,replaced,by,the,link,bean,factory,that,creates,it,c,f,the,link,bean,factory,aware,contract,so,only,use,this,constructor,if,you,are,using,this,class,outside,the,context,of,a,spring,io,c,container,param,bean,factory,the,bean,factory,to,be,used,to,lookup,link,data,source,data,sources;public,bean,factory,data,source,lookup,bean,factory,bean,factory,assert,not,null,bean,factory,bean,factory,is,required,this,bean,factory,bean,factory
BeanFactoryDataSourceLookup -> public BeanFactoryDataSourceLookup(BeanFactory beanFactory);1356735495;Create a new instance of the {@link BeanFactoryDataSourceLookup} class._<p>Use of this constructor is redundant if this object is being created_by a Spring IoC container, as the supplied {@link BeanFactory} will be_replaced by the {@link BeanFactory} that creates it (c.f. the_{@link BeanFactoryAware} contract). So only use this constructor if you_are using this class outside the context of a Spring IoC container._@param beanFactory the bean factory to be used to lookup {@link DataSource DataSources};public BeanFactoryDataSourceLookup(BeanFactory beanFactory) {_		Assert.notNull(beanFactory, "BeanFactory is required")__		this.beanFactory = beanFactory__	};create,a,new,instance,of,the,link,bean,factory,data,source,lookup,class,p,use,of,this,constructor,is,redundant,if,this,object,is,being,created,by,a,spring,io,c,container,as,the,supplied,link,bean,factory,will,be,replaced,by,the,link,bean,factory,that,creates,it,c,f,the,link,bean,factory,aware,contract,so,only,use,this,constructor,if,you,are,using,this,class,outside,the,context,of,a,spring,io,c,container,param,bean,factory,the,bean,factory,to,be,used,to,lookup,link,data,source,data,sources;public,bean,factory,data,source,lookup,bean,factory,bean,factory,assert,not,null,bean,factory,bean,factory,is,required,this,bean,factory,bean,factory
BeanFactoryDataSourceLookup -> public BeanFactoryDataSourceLookup(BeanFactory beanFactory);1357119239;Create a new instance of the {@link BeanFactoryDataSourceLookup} class._<p>Use of this constructor is redundant if this object is being created_by a Spring IoC container, as the supplied {@link BeanFactory} will be_replaced by the {@link BeanFactory} that creates it (c.f. the_{@link BeanFactoryAware} contract). So only use this constructor if you_are using this class outside the context of a Spring IoC container._@param beanFactory the bean factory to be used to lookup {@link DataSource DataSources};public BeanFactoryDataSourceLookup(BeanFactory beanFactory) {_		Assert.notNull(beanFactory, "BeanFactory is required")__		this.beanFactory = beanFactory__	};create,a,new,instance,of,the,link,bean,factory,data,source,lookup,class,p,use,of,this,constructor,is,redundant,if,this,object,is,being,created,by,a,spring,io,c,container,as,the,supplied,link,bean,factory,will,be,replaced,by,the,link,bean,factory,that,creates,it,c,f,the,link,bean,factory,aware,contract,so,only,use,this,constructor,if,you,are,using,this,class,outside,the,context,of,a,spring,io,c,container,param,bean,factory,the,bean,factory,to,be,used,to,lookup,link,data,source,data,sources;public,bean,factory,data,source,lookup,bean,factory,bean,factory,assert,not,null,bean,factory,bean,factory,is,required,this,bean,factory,bean,factory
BeanFactoryDataSourceLookup -> public BeanFactoryDataSourceLookup(BeanFactory beanFactory);1368482696;Create a new instance of the {@link BeanFactoryDataSourceLookup} class._<p>Use of this constructor is redundant if this object is being created_by a Spring IoC container, as the supplied {@link BeanFactory} will be_replaced by the {@link BeanFactory} that creates it (c.f. the_{@link BeanFactoryAware} contract). So only use this constructor if you_are using this class outside the context of a Spring IoC container._@param beanFactory the bean factory to be used to lookup {@link DataSource DataSources};public BeanFactoryDataSourceLookup(BeanFactory beanFactory) {_		Assert.notNull(beanFactory, "BeanFactory is required")__		this.beanFactory = beanFactory__	};create,a,new,instance,of,the,link,bean,factory,data,source,lookup,class,p,use,of,this,constructor,is,redundant,if,this,object,is,being,created,by,a,spring,io,c,container,as,the,supplied,link,bean,factory,will,be,replaced,by,the,link,bean,factory,that,creates,it,c,f,the,link,bean,factory,aware,contract,so,only,use,this,constructor,if,you,are,using,this,class,outside,the,context,of,a,spring,io,c,container,param,bean,factory,the,bean,factory,to,be,used,to,lookup,link,data,source,data,sources;public,bean,factory,data,source,lookup,bean,factory,bean,factory,assert,not,null,bean,factory,bean,factory,is,required,this,bean,factory,bean,factory
BeanFactoryDataSourceLookup -> public BeanFactoryDataSourceLookup(BeanFactory beanFactory);1498780456;Create a new instance of the {@link BeanFactoryDataSourceLookup} class._<p>Use of this constructor is redundant if this object is being created_by a Spring IoC container, as the supplied {@link BeanFactory} will be_replaced by the {@link BeanFactory} that creates it (c.f. the_{@link BeanFactoryAware} contract). So only use this constructor if you_are using this class outside the context of a Spring IoC container._@param beanFactory the bean factory to be used to lookup {@link DataSource DataSources};public BeanFactoryDataSourceLookup(BeanFactory beanFactory) {_		Assert.notNull(beanFactory, "BeanFactory is required")__		this.beanFactory = beanFactory__	};create,a,new,instance,of,the,link,bean,factory,data,source,lookup,class,p,use,of,this,constructor,is,redundant,if,this,object,is,being,created,by,a,spring,io,c,container,as,the,supplied,link,bean,factory,will,be,replaced,by,the,link,bean,factory,that,creates,it,c,f,the,link,bean,factory,aware,contract,so,only,use,this,constructor,if,you,are,using,this,class,outside,the,context,of,a,spring,io,c,container,param,bean,factory,the,bean,factory,to,be,used,to,lookup,link,data,source,data,sources;public,bean,factory,data,source,lookup,bean,factory,bean,factory,assert,not,null,bean,factory,bean,factory,is,required,this,bean,factory,bean,factory
BeanFactoryDataSourceLookup -> public BeanFactoryDataSourceLookup();1328020251;Create a new instance of the {@link BeanFactoryDataSourceLookup} class._<p>The BeanFactory to access must be set via <code>setBeanFactory</code>._@see #setBeanFactory;public BeanFactoryDataSourceLookup() {_	};create,a,new,instance,of,the,link,bean,factory,data,source,lookup,class,p,the,bean,factory,to,access,must,be,set,via,code,set,bean,factory,code,see,set,bean,factory;public,bean,factory,data,source,lookup
BeanFactoryDataSourceLookup -> public BeanFactoryDataSourceLookup();1356735495;Create a new instance of the {@link BeanFactoryDataSourceLookup} class._<p>The BeanFactory to access must be set via {@code setBeanFactory}._@see #setBeanFactory;public BeanFactoryDataSourceLookup() {_	};create,a,new,instance,of,the,link,bean,factory,data,source,lookup,class,p,the,bean,factory,to,access,must,be,set,via,code,set,bean,factory,see,set,bean,factory;public,bean,factory,data,source,lookup
BeanFactoryDataSourceLookup -> public BeanFactoryDataSourceLookup();1357119239;Create a new instance of the {@link BeanFactoryDataSourceLookup} class._<p>The BeanFactory to access must be set via {@code setBeanFactory}._@see #setBeanFactory;public BeanFactoryDataSourceLookup() {_	};create,a,new,instance,of,the,link,bean,factory,data,source,lookup,class,p,the,bean,factory,to,access,must,be,set,via,code,set,bean,factory,see,set,bean,factory;public,bean,factory,data,source,lookup
BeanFactoryDataSourceLookup -> public BeanFactoryDataSourceLookup();1368482696;Create a new instance of the {@link BeanFactoryDataSourceLookup} class._<p>The BeanFactory to access must be set via {@code setBeanFactory}._@see #setBeanFactory;public BeanFactoryDataSourceLookup() {_	};create,a,new,instance,of,the,link,bean,factory,data,source,lookup,class,p,the,bean,factory,to,access,must,be,set,via,code,set,bean,factory,see,set,bean,factory;public,bean,factory,data,source,lookup
BeanFactoryDataSourceLookup -> public BeanFactoryDataSourceLookup();1498780456;Create a new instance of the {@link BeanFactoryDataSourceLookup} class._<p>The BeanFactory to access must be set via {@code setBeanFactory}._@see #setBeanFactory;public BeanFactoryDataSourceLookup() {_	};create,a,new,instance,of,the,link,bean,factory,data,source,lookup,class,p,the,bean,factory,to,access,must,be,set,via,code,set,bean,factory,see,set,bean,factory;public,bean,factory,data,source,lookup
