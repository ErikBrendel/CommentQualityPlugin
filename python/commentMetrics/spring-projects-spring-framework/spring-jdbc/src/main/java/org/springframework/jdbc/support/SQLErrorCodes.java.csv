commented;modifiers;parameterAmount;loc;comment;code
true;public;1;3;/**  * Set this property if the database name contains spaces,  * in which case we can not use the bean name for lookup.  */ ;/**  * Set this property if the database name contains spaces,  * in which case we can not use the bean name for lookup.  */ public void setDatabaseProductName(@Nullable String databaseProductName) {     this.databaseProductNames = new String[] { databaseProductName }. }
false;public;0;5;;@Nullable public String getDatabaseProductName() {     return (this.databaseProductNames != null && this.databaseProductNames.length > 0 ? this.databaseProductNames[0] : null). }
true;public;1;3;/**  * Set this property to specify multiple database names that contains spaces,  * in which case we can not use bean names for lookup.  */ ;/**  * Set this property to specify multiple database names that contains spaces,  * in which case we can not use bean names for lookup.  */ public void setDatabaseProductNames(@Nullable String... databaseProductNames) {     this.databaseProductNames = databaseProductNames. }
false;public;0;4;;@Nullable public String[] getDatabaseProductNames() {     return this.databaseProductNames. }
true;public;1;3;/**  * Set this property to true for databases that do not provide an error code  * but that do provide SQL State (this includes PostgreSQL).  */ ;/**  * Set this property to true for databases that do not provide an error code  * but that do provide SQL State (this includes PostgreSQL).  */ public void setUseSqlStateForTranslation(boolean useStateCodeForTranslation) {     this.useSqlStateForTranslation = useStateCodeForTranslation. }
false;public;0;3;;public boolean isUseSqlStateForTranslation() {     return this.useSqlStateForTranslation. }
false;public;1;3;;public void setBadSqlGrammarCodes(String... badSqlGrammarCodes) {     this.badSqlGrammarCodes = StringUtils.sortStringArray(badSqlGrammarCodes). }
false;public;0;3;;public String[] getBadSqlGrammarCodes() {     return this.badSqlGrammarCodes. }
false;public;1;3;;public void setInvalidResultSetAccessCodes(String... invalidResultSetAccessCodes) {     this.invalidResultSetAccessCodes = StringUtils.sortStringArray(invalidResultSetAccessCodes). }
false;public;0;3;;public String[] getInvalidResultSetAccessCodes() {     return this.invalidResultSetAccessCodes. }
false;public;0;3;;public String[] getDuplicateKeyCodes() {     return this.duplicateKeyCodes. }
false;public;1;3;;public void setDuplicateKeyCodes(String... duplicateKeyCodes) {     this.duplicateKeyCodes = duplicateKeyCodes. }
false;public;1;3;;public void setDataIntegrityViolationCodes(String... dataIntegrityViolationCodes) {     this.dataIntegrityViolationCodes = StringUtils.sortStringArray(dataIntegrityViolationCodes). }
false;public;0;3;;public String[] getDataIntegrityViolationCodes() {     return this.dataIntegrityViolationCodes. }
false;public;1;3;;public void setPermissionDeniedCodes(String... permissionDeniedCodes) {     this.permissionDeniedCodes = StringUtils.sortStringArray(permissionDeniedCodes). }
false;public;0;3;;public String[] getPermissionDeniedCodes() {     return this.permissionDeniedCodes. }
false;public;1;3;;public void setDataAccessResourceFailureCodes(String... dataAccessResourceFailureCodes) {     this.dataAccessResourceFailureCodes = StringUtils.sortStringArray(dataAccessResourceFailureCodes). }
false;public;0;3;;public String[] getDataAccessResourceFailureCodes() {     return this.dataAccessResourceFailureCodes. }
false;public;1;3;;public void setTransientDataAccessResourceCodes(String... transientDataAccessResourceCodes) {     this.transientDataAccessResourceCodes = StringUtils.sortStringArray(transientDataAccessResourceCodes). }
false;public;0;3;;public String[] getTransientDataAccessResourceCodes() {     return this.transientDataAccessResourceCodes. }
false;public;1;3;;public void setCannotAcquireLockCodes(String... cannotAcquireLockCodes) {     this.cannotAcquireLockCodes = StringUtils.sortStringArray(cannotAcquireLockCodes). }
false;public;0;3;;public String[] getCannotAcquireLockCodes() {     return this.cannotAcquireLockCodes. }
false;public;1;3;;public void setDeadlockLoserCodes(String... deadlockLoserCodes) {     this.deadlockLoserCodes = StringUtils.sortStringArray(deadlockLoserCodes). }
false;public;0;3;;public String[] getDeadlockLoserCodes() {     return this.deadlockLoserCodes. }
false;public;1;3;;public void setCannotSerializeTransactionCodes(String... cannotSerializeTransactionCodes) {     this.cannotSerializeTransactionCodes = StringUtils.sortStringArray(cannotSerializeTransactionCodes). }
false;public;0;3;;public String[] getCannotSerializeTransactionCodes() {     return this.cannotSerializeTransactionCodes. }
false;public;1;3;;public void setCustomTranslations(CustomSQLErrorCodesTranslation... customTranslations) {     this.customTranslations = customTranslations. }
false;public;0;4;;@Nullable public CustomSQLErrorCodesTranslation[] getCustomTranslations() {     return this.customTranslations. }
false;public;1;14;;public void setCustomSqlExceptionTranslatorClass(@Nullable Class<? extends SQLExceptionTranslator> customTranslatorClass) {     if (customTranslatorClass != null) {         try {             this.customSqlExceptionTranslator = ReflectionUtils.accessibleConstructor(customTranslatorClass).newInstance().         } catch (Throwable ex) {             throw new IllegalStateException("Unable to instantiate custom translator", ex).         }     } else {         this.customSqlExceptionTranslator = null.     } }
false;public;1;3;;public void setCustomSqlExceptionTranslator(@Nullable SQLExceptionTranslator customSqlExceptionTranslator) {     this.customSqlExceptionTranslator = customSqlExceptionTranslator. }
false;public;0;4;;@Nullable public SQLExceptionTranslator getCustomSqlExceptionTranslator() {     return this.customSqlExceptionTranslator. }
