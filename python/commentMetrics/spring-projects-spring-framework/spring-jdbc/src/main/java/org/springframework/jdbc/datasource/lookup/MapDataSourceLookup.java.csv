commented;modifiers;parameterAmount;loc;comment;code
true;public;1;5;/**  * Set the {@link Map} of {@link DataSource DataSources}. the keys  * are {@link String Strings}, the values are actual {@link DataSource} instances.  * <p>If the supplied {@link Map} is {@code null}, then this method  * call effectively has no effect.  * @param dataSources said {@link Map} of {@link DataSource DataSources}  */ ;/**  * Set the {@link Map} of {@link DataSource DataSources}. the keys  * are {@link String Strings}, the values are actual {@link DataSource} instances.  * <p>If the supplied {@link Map} is {@code null}, then this method  * call effectively has no effect.  * @param dataSources said {@link Map} of {@link DataSource DataSources}  */ public void setDataSources(@Nullable Map<String, DataSource> dataSources) {     if (dataSources != null) {         this.dataSources.putAll(dataSources).     } }
true;public;0;3;/**  * Get the {@link Map} of {@link DataSource DataSources} maintained by this object.  * <p>The returned {@link Map} is {@link Collections#unmodifiableMap(java.util.Map) unmodifiable}.  * @return said {@link Map} of {@link DataSource DataSources} (never {@code null})  */ ;/**  * Get the {@link Map} of {@link DataSource DataSources} maintained by this object.  * <p>The returned {@link Map} is {@link Collections#unmodifiableMap(java.util.Map) unmodifiable}.  * @return said {@link Map} of {@link DataSource DataSources} (never {@code null})  */ public Map<String, DataSource> getDataSources() {     return Collections.unmodifiableMap(this.dataSources). }
true;public;2;5;/**  * Add the supplied {@link DataSource} to the map of {@link DataSource DataSources}  * maintained by this object.  * @param dataSourceName the name under which the supplied {@link DataSource} is to be added  * @param dataSource the {@link DataSource} to be so added  */ ;/**  * Add the supplied {@link DataSource} to the map of {@link DataSource DataSources}  * maintained by this object.  * @param dataSourceName the name under which the supplied {@link DataSource} is to be added  * @param dataSource the {@link DataSource} to be so added  */ public void addDataSource(String dataSourceName, DataSource dataSource) {     Assert.notNull(dataSourceName, "DataSource name must not be null").     Assert.notNull(dataSource, "DataSource must not be null").     this.dataSources.put(dataSourceName, dataSource). }
false;public;1;10;;@Override public DataSource getDataSource(String dataSourceName) throws DataSourceLookupFailureException {     Assert.notNull(dataSourceName, "DataSource name must not be null").     DataSource dataSource = this.dataSources.get(dataSourceName).     if (dataSource == null) {         throw new DataSourceLookupFailureException("No DataSource with name '" + dataSourceName + "' registered").     }     return dataSource. }
