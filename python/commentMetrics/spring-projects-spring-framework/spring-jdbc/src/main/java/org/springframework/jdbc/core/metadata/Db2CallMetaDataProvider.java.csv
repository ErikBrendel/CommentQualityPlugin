commented;modifiers;parameterAmount;loc;comment;code
false;public;1;27;;@Override public void initializeWithMetaData(DatabaseMetaData databaseMetaData) throws SQLException {     try {         setSupportsCatalogsInProcedureCalls(databaseMetaData.supportsCatalogsInProcedureCalls()).     } catch (SQLException ex) {         logger.debug("Error retrieving 'DatabaseMetaData.supportsCatalogsInProcedureCalls' - " + ex.getMessage()).     }     try {         setSupportsSchemasInProcedureCalls(databaseMetaData.supportsSchemasInProcedureCalls()).     } catch (SQLException ex) {         logger.debug("Error retrieving 'DatabaseMetaData.supportsSchemasInProcedureCalls' - " + ex.getMessage()).     }     try {         setStoresUpperCaseIdentifiers(databaseMetaData.storesUpperCaseIdentifiers()).     } catch (SQLException ex) {         logger.debug("Error retrieving 'DatabaseMetaData.storesUpperCaseIdentifiers' - " + ex.getMessage()).     }     try {         setStoresLowerCaseIdentifiers(databaseMetaData.storesLowerCaseIdentifiers()).     } catch (SQLException ex) {         logger.debug("Error retrieving 'DatabaseMetaData.storesLowerCaseIdentifiers' - " + ex.getMessage()).     } }
false;public;1;11;;@Override @Nullable public String metaDataSchemaNameToUse(@Nullable String schemaName) {     if (schemaName != null) {         return super.metaDataSchemaNameToUse(schemaName).     }     // Use current user schema if no schema specified...     String userName = getUserName().     return (userName != null ? userName.toUpperCase() : null). }
