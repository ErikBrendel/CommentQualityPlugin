# id;timestamp;commentText;codeText;commentWords;codeWords
EmbeddedDatabaseBuilder -> public EmbeddedDatabaseBuilder generateUniqueName(boolean flag);1426893719;Specify whether a unique ID should be generated and used as the database name._<p>If the configuration for this builder is reused across multiple_application contexts within a single JVM, this flag should be <em>enabled</em>_(i.e., set to {@code true}) in order to ensure that each application context_gets its own embedded database._<p>Enabling this flag overrides any explicit name set via {@link #setName}._@param flag {@code true} if a unique database name should be generated_@return {@code this}, to facilitate method chaining_@see #setName_@since 4.2;public EmbeddedDatabaseBuilder generateUniqueName(boolean flag) {_		this.databaseFactory.setGenerateUniqueDatabaseName(flag)__		return this__	};specify,whether,a,unique,id,should,be,generated,and,used,as,the,database,name,p,if,the,configuration,for,this,builder,is,reused,across,multiple,application,contexts,within,a,single,jvm,this,flag,should,be,em,enabled,em,i,e,set,to,code,true,in,order,to,ensure,that,each,application,context,gets,its,own,embedded,database,p,enabling,this,flag,overrides,any,explicit,name,set,via,link,set,name,param,flag,code,true,if,a,unique,database,name,should,be,generated,return,code,this,to,facilitate,method,chaining,see,set,name,since,4,2;public,embedded,database,builder,generate,unique,name,boolean,flag,this,database,factory,set,generate,unique,database,name,flag,return,this
EmbeddedDatabaseBuilder -> public EmbeddedDatabaseBuilder generateUniqueName(boolean flag);1440689273;Specify whether a unique ID should be generated and used as the database name._<p>If the configuration for this builder is reused across multiple_application contexts within a single JVM, this flag should be <em>enabled</em>_(i.e., set to {@code true}) in order to ensure that each application context_gets its own embedded database._<p>Enabling this flag overrides any explicit name set via {@link #setName}._@param flag {@code true} if a unique database name should be generated_@return {@code this}, to facilitate method chaining_@see #setName_@since 4.2;public EmbeddedDatabaseBuilder generateUniqueName(boolean flag) {_		this.databaseFactory.setGenerateUniqueDatabaseName(flag)__		return this__	};specify,whether,a,unique,id,should,be,generated,and,used,as,the,database,name,p,if,the,configuration,for,this,builder,is,reused,across,multiple,application,contexts,within,a,single,jvm,this,flag,should,be,em,enabled,em,i,e,set,to,code,true,in,order,to,ensure,that,each,application,context,gets,its,own,embedded,database,p,enabling,this,flag,overrides,any,explicit,name,set,via,link,set,name,param,flag,code,true,if,a,unique,database,name,should,be,generated,return,code,this,to,facilitate,method,chaining,see,set,name,since,4,2;public,embedded,database,builder,generate,unique,name,boolean,flag,this,database,factory,set,generate,unique,database,name,flag,return,this
EmbeddedDatabaseBuilder -> public EmbeddedDatabaseBuilder generateUniqueName(boolean flag);1530174524;Specify whether a unique ID should be generated and used as the database name._<p>If the configuration for this builder is reused across multiple_application contexts within a single JVM, this flag should be <em>enabled</em>_(i.e., set to {@code true}) in order to ensure that each application context_gets its own embedded database._<p>Enabling this flag overrides any explicit name set via {@link #setName}._@param flag {@code true} if a unique database name should be generated_@return {@code this}, to facilitate method chaining_@since 4.2_@see #setName;public EmbeddedDatabaseBuilder generateUniqueName(boolean flag) {_		this.databaseFactory.setGenerateUniqueDatabaseName(flag)__		return this__	};specify,whether,a,unique,id,should,be,generated,and,used,as,the,database,name,p,if,the,configuration,for,this,builder,is,reused,across,multiple,application,contexts,within,a,single,jvm,this,flag,should,be,em,enabled,em,i,e,set,to,code,true,in,order,to,ensure,that,each,application,context,gets,its,own,embedded,database,p,enabling,this,flag,overrides,any,explicit,name,set,via,link,set,name,param,flag,code,true,if,a,unique,database,name,should,be,generated,return,code,this,to,facilitate,method,chaining,since,4,2,see,set,name;public,embedded,database,builder,generate,unique,name,boolean,flag,this,database,factory,set,generate,unique,database,name,flag,return,this
EmbeddedDatabaseBuilder -> public EmbeddedDatabaseBuilder setScriptEncoding(String scriptEncoding);1395183391;Specify the character encoding used in all SQL scripts, if different from_the platform encoding._@param scriptEncoding the encoding used in scripts_@return {@code this}, to facilitate method chaining_@since 4.0.3;public EmbeddedDatabaseBuilder setScriptEncoding(String scriptEncoding) {_		this.databasePopulator.setSqlScriptEncoding(scriptEncoding)__		return this__	};specify,the,character,encoding,used,in,all,sql,scripts,if,different,from,the,platform,encoding,param,script,encoding,the,encoding,used,in,scripts,return,code,this,to,facilitate,method,chaining,since,4,0,3;public,embedded,database,builder,set,script,encoding,string,script,encoding,this,database,populator,set,sql,script,encoding,script,encoding,return,this
EmbeddedDatabaseBuilder -> public EmbeddedDatabaseBuilder setScriptEncoding(String scriptEncoding);1396188524;Specify the character encoding used in all SQL scripts, if different from_the platform encoding._@param scriptEncoding the encoding used in scripts_@return {@code this}, to facilitate method chaining_@since 4.0.3;public EmbeddedDatabaseBuilder setScriptEncoding(String scriptEncoding) {_		this.databasePopulator.setSqlScriptEncoding(scriptEncoding)__		return this__	};specify,the,character,encoding,used,in,all,sql,scripts,if,different,from,the,platform,encoding,param,script,encoding,the,encoding,used,in,scripts,return,code,this,to,facilitate,method,chaining,since,4,0,3;public,embedded,database,builder,set,script,encoding,string,script,encoding,this,database,populator,set,sql,script,encoding,script,encoding,return,this
EmbeddedDatabaseBuilder -> public EmbeddedDatabaseBuilder setScriptEncoding(String scriptEncoding);1397231067;Specify the character encoding used in all SQL scripts, if different from_the platform encoding._@param scriptEncoding the encoding used in scripts_@return {@code this}, to facilitate method chaining_@since 4.0.3;public EmbeddedDatabaseBuilder setScriptEncoding(String scriptEncoding) {_		this.databasePopulator.setSqlScriptEncoding(scriptEncoding)__		return this__	};specify,the,character,encoding,used,in,all,sql,scripts,if,different,from,the,platform,encoding,param,script,encoding,the,encoding,used,in,scripts,return,code,this,to,facilitate,method,chaining,since,4,0,3;public,embedded,database,builder,set,script,encoding,string,script,encoding,this,database,populator,set,sql,script,encoding,script,encoding,return,this
EmbeddedDatabaseBuilder -> public EmbeddedDatabaseBuilder setScriptEncoding(String scriptEncoding);1426893719;Specify the character encoding used in all SQL scripts, if different from_the platform encoding._@param scriptEncoding the encoding used in scripts_@return {@code this}, to facilitate method chaining_@since 4.0.3;public EmbeddedDatabaseBuilder setScriptEncoding(String scriptEncoding) {_		this.databasePopulator.setSqlScriptEncoding(scriptEncoding)__		return this__	};specify,the,character,encoding,used,in,all,sql,scripts,if,different,from,the,platform,encoding,param,script,encoding,the,encoding,used,in,scripts,return,code,this,to,facilitate,method,chaining,since,4,0,3;public,embedded,database,builder,set,script,encoding,string,script,encoding,this,database,populator,set,sql,script,encoding,script,encoding,return,this
EmbeddedDatabaseBuilder -> public EmbeddedDatabaseBuilder setScriptEncoding(String scriptEncoding);1440689273;Specify the character encoding used in all SQL scripts, if different from_the platform encoding._@param scriptEncoding the encoding used in scripts_@return {@code this}, to facilitate method chaining_@since 4.0.3;public EmbeddedDatabaseBuilder setScriptEncoding(String scriptEncoding) {_		this.databasePopulator.setSqlScriptEncoding(scriptEncoding)__		return this__	};specify,the,character,encoding,used,in,all,sql,scripts,if,different,from,the,platform,encoding,param,script,encoding,the,encoding,used,in,scripts,return,code,this,to,facilitate,method,chaining,since,4,0,3;public,embedded,database,builder,set,script,encoding,string,script,encoding,this,database,populator,set,sql,script,encoding,script,encoding,return,this
EmbeddedDatabaseBuilder -> public EmbeddedDatabaseBuilder setScriptEncoding(String scriptEncoding);1530174524;Specify the character encoding used in all SQL scripts, if different from_the platform encoding._@param scriptEncoding the encoding used in scripts_@return {@code this}, to facilitate method chaining_@since 4.0.3;public EmbeddedDatabaseBuilder setScriptEncoding(String scriptEncoding) {_		this.databasePopulator.setSqlScriptEncoding(scriptEncoding)__		return this__	};specify,the,character,encoding,used,in,all,sql,scripts,if,different,from,the,platform,encoding,param,script,encoding,the,encoding,used,in,scripts,return,code,this,to,facilitate,method,chaining,since,4,0,3;public,embedded,database,builder,set,script,encoding,string,script,encoding,this,database,populator,set,sql,script,encoding,script,encoding,return,this
EmbeddedDatabaseBuilder -> public EmbeddedDatabaseBuilder();1328020251;Create a new embedded database builder.;public EmbeddedDatabaseBuilder() {_		this(new DefaultResourceLoader())__	};create,a,new,embedded,database,builder;public,embedded,database,builder,this,new,default,resource,loader
EmbeddedDatabaseBuilder -> public EmbeddedDatabaseBuilder();1340131687;Create a new embedded database builder.;public EmbeddedDatabaseBuilder() {_		this(new DefaultResourceLoader())__	};create,a,new,embedded,database,builder;public,embedded,database,builder,this,new,default,resource,loader
EmbeddedDatabaseBuilder -> public EmbeddedDatabaseBuilder();1356735495;Create a new embedded database builder.;public EmbeddedDatabaseBuilder() {_		this(new DefaultResourceLoader())__	};create,a,new,embedded,database,builder;public,embedded,database,builder,this,new,default,resource,loader
EmbeddedDatabaseBuilder -> public EmbeddedDatabaseBuilder();1367955086;Create a new embedded database builder.;public EmbeddedDatabaseBuilder() {_		this(new DefaultResourceLoader())__	};create,a,new,embedded,database,builder;public,embedded,database,builder,this,new,default,resource,loader
EmbeddedDatabaseBuilder -> public EmbeddedDatabaseBuilder();1392160372;Create a new embedded database builder.;public EmbeddedDatabaseBuilder() {_		this(new DefaultResourceLoader())__	};create,a,new,embedded,database,builder;public,embedded,database,builder,this,new,default,resource,loader
EmbeddedDatabaseBuilder -> public EmbeddedDatabaseBuilder();1395143680;Create a new embedded database builder.;public EmbeddedDatabaseBuilder() {_		this(new DefaultResourceLoader())__	};create,a,new,embedded,database,builder;public,embedded,database,builder,this,new,default,resource,loader
EmbeddedDatabaseBuilder -> public EmbeddedDatabaseBuilder();1395183391;Create a new embedded database builder with a {@link DefaultResourceLoader}.;public EmbeddedDatabaseBuilder() {_		this(new DefaultResourceLoader())__	};create,a,new,embedded,database,builder,with,a,link,default,resource,loader;public,embedded,database,builder,this,new,default,resource,loader
EmbeddedDatabaseBuilder -> public EmbeddedDatabaseBuilder();1396188524;Create a new embedded database builder with a {@link DefaultResourceLoader}.;public EmbeddedDatabaseBuilder() {_		this(new DefaultResourceLoader())__	};create,a,new,embedded,database,builder,with,a,link,default,resource,loader;public,embedded,database,builder,this,new,default,resource,loader
EmbeddedDatabaseBuilder -> public EmbeddedDatabaseBuilder();1397231067;Create a new embedded database builder with a {@link DefaultResourceLoader}.;public EmbeddedDatabaseBuilder() {_		this(new DefaultResourceLoader())__	};create,a,new,embedded,database,builder,with,a,link,default,resource,loader;public,embedded,database,builder,this,new,default,resource,loader
EmbeddedDatabaseBuilder -> public EmbeddedDatabaseBuilder();1426893719;Create a new embedded database builder with a {@link DefaultResourceLoader}.;public EmbeddedDatabaseBuilder() {_		this(new DefaultResourceLoader())__	};create,a,new,embedded,database,builder,with,a,link,default,resource,loader;public,embedded,database,builder,this,new,default,resource,loader
EmbeddedDatabaseBuilder -> public EmbeddedDatabaseBuilder();1440689273;Create a new embedded database builder with a {@link DefaultResourceLoader}.;public EmbeddedDatabaseBuilder() {_		this(new DefaultResourceLoader())__	};create,a,new,embedded,database,builder,with,a,link,default,resource,loader;public,embedded,database,builder,this,new,default,resource,loader
EmbeddedDatabaseBuilder -> public EmbeddedDatabaseBuilder();1530174524;Create a new embedded database builder with a {@link DefaultResourceLoader}.;public EmbeddedDatabaseBuilder() {_		this(new DefaultResourceLoader())__	};create,a,new,embedded,database,builder,with,a,link,default,resource,loader;public,embedded,database,builder,this,new,default,resource,loader
EmbeddedDatabaseBuilder -> public EmbeddedDatabaseBuilder setBlockCommentStartDelimiter(String blockCommentStartDelimiter);1395183391;Specify the start delimiter for block comments in all SQL scripts._<p>Default is "/*"._@param blockCommentStartDelimiter the start delimiter for block comments_@return {@code this}, to facilitate method chaining_@since 4.0.3_@see #setBlockCommentEndDelimiter_@since 4.0.3;public EmbeddedDatabaseBuilder setBlockCommentStartDelimiter(String blockCommentStartDelimiter) {_		this.databasePopulator.setBlockCommentStartDelimiter(blockCommentStartDelimiter)__		return this__	};specify,the,start,delimiter,for,block,comments,in,all,sql,scripts,p,default,is,param,block,comment,start,delimiter,the,start,delimiter,for,block,comments,return,code,this,to,facilitate,method,chaining,since,4,0,3,see,set,block,comment,end,delimiter,since,4,0,3;public,embedded,database,builder,set,block,comment,start,delimiter,string,block,comment,start,delimiter,this,database,populator,set,block,comment,start,delimiter,block,comment,start,delimiter,return,this
EmbeddedDatabaseBuilder -> public EmbeddedDatabaseBuilder setBlockCommentStartDelimiter(String blockCommentStartDelimiter);1396188524;Specify the start delimiter for block comments in all SQL scripts._<p>Default is "/*"._@param blockCommentStartDelimiter the start delimiter for block comments_@return {@code this}, to facilitate method chaining_@since 4.0.3_@see #setBlockCommentEndDelimiter;public EmbeddedDatabaseBuilder setBlockCommentStartDelimiter(String blockCommentStartDelimiter) {_		this.databasePopulator.setBlockCommentStartDelimiter(blockCommentStartDelimiter)__		return this__	};specify,the,start,delimiter,for,block,comments,in,all,sql,scripts,p,default,is,param,block,comment,start,delimiter,the,start,delimiter,for,block,comments,return,code,this,to,facilitate,method,chaining,since,4,0,3,see,set,block,comment,end,delimiter;public,embedded,database,builder,set,block,comment,start,delimiter,string,block,comment,start,delimiter,this,database,populator,set,block,comment,start,delimiter,block,comment,start,delimiter,return,this
EmbeddedDatabaseBuilder -> public EmbeddedDatabaseBuilder setBlockCommentStartDelimiter(String blockCommentStartDelimiter);1397231067;Specify the start delimiter for block comments in all SQL scripts._<p>Defaults to {@code "/*"}._@param blockCommentStartDelimiter the start delimiter for block comments_@return {@code this}, to facilitate method chaining_@since 4.0.3_@see #setBlockCommentEndDelimiter;public EmbeddedDatabaseBuilder setBlockCommentStartDelimiter(String blockCommentStartDelimiter) {_		this.databasePopulator.setBlockCommentStartDelimiter(blockCommentStartDelimiter)__		return this__	};specify,the,start,delimiter,for,block,comments,in,all,sql,scripts,p,defaults,to,code,param,block,comment,start,delimiter,the,start,delimiter,for,block,comments,return,code,this,to,facilitate,method,chaining,since,4,0,3,see,set,block,comment,end,delimiter;public,embedded,database,builder,set,block,comment,start,delimiter,string,block,comment,start,delimiter,this,database,populator,set,block,comment,start,delimiter,block,comment,start,delimiter,return,this
EmbeddedDatabaseBuilder -> public EmbeddedDatabaseBuilder setBlockCommentStartDelimiter(String blockCommentStartDelimiter);1426893719;Specify the start delimiter for block comments in all SQL scripts._<p>Defaults to {@code "/*"}._@param blockCommentStartDelimiter the start delimiter for block comments_@return {@code this}, to facilitate method chaining_@since 4.0.3_@see #setBlockCommentEndDelimiter;public EmbeddedDatabaseBuilder setBlockCommentStartDelimiter(String blockCommentStartDelimiter) {_		this.databasePopulator.setBlockCommentStartDelimiter(blockCommentStartDelimiter)__		return this__	};specify,the,start,delimiter,for,block,comments,in,all,sql,scripts,p,defaults,to,code,param,block,comment,start,delimiter,the,start,delimiter,for,block,comments,return,code,this,to,facilitate,method,chaining,since,4,0,3,see,set,block,comment,end,delimiter;public,embedded,database,builder,set,block,comment,start,delimiter,string,block,comment,start,delimiter,this,database,populator,set,block,comment,start,delimiter,block,comment,start,delimiter,return,this
EmbeddedDatabaseBuilder -> public EmbeddedDatabaseBuilder setBlockCommentStartDelimiter(String blockCommentStartDelimiter);1440689273;Specify the start delimiter for block comments in all SQL scripts._<p>Defaults to {@code "/*"}._@param blockCommentStartDelimiter the start delimiter for block comments_@return {@code this}, to facilitate method chaining_@since 4.0.3_@see #setBlockCommentEndDelimiter;public EmbeddedDatabaseBuilder setBlockCommentStartDelimiter(String blockCommentStartDelimiter) {_		this.databasePopulator.setBlockCommentStartDelimiter(blockCommentStartDelimiter)__		return this__	};specify,the,start,delimiter,for,block,comments,in,all,sql,scripts,p,defaults,to,code,param,block,comment,start,delimiter,the,start,delimiter,for,block,comments,return,code,this,to,facilitate,method,chaining,since,4,0,3,see,set,block,comment,end,delimiter;public,embedded,database,builder,set,block,comment,start,delimiter,string,block,comment,start,delimiter,this,database,populator,set,block,comment,start,delimiter,block,comment,start,delimiter,return,this
EmbeddedDatabaseBuilder -> public EmbeddedDatabaseBuilder setBlockCommentStartDelimiter(String blockCommentStartDelimiter);1530174524;Specify the start delimiter for block comments in all SQL scripts._<p>Defaults to {@code "/*"}._@param blockCommentStartDelimiter the start delimiter for block comments_@return {@code this}, to facilitate method chaining_@since 4.0.3_@see #setBlockCommentEndDelimiter;public EmbeddedDatabaseBuilder setBlockCommentStartDelimiter(String blockCommentStartDelimiter) {_		this.databasePopulator.setBlockCommentStartDelimiter(blockCommentStartDelimiter)__		return this__	};specify,the,start,delimiter,for,block,comments,in,all,sql,scripts,p,defaults,to,code,param,block,comment,start,delimiter,the,start,delimiter,for,block,comments,return,code,this,to,facilitate,method,chaining,since,4,0,3,see,set,block,comment,end,delimiter;public,embedded,database,builder,set,block,comment,start,delimiter,string,block,comment,start,delimiter,this,database,populator,set,block,comment,start,delimiter,block,comment,start,delimiter,return,this
EmbeddedDatabaseBuilder -> public EmbeddedDatabaseBuilder setBlockCommentEndDelimiter(String blockCommentEndDelimiter);1395183391;Specify the end delimiter for block comments in all SQL scripts._<p>Default is "*&#47_"._@param blockCommentEndDelimiter the end delimiter for block comments_@return {@code this}, to facilitate method chaining_@since 4.0.3_@see #setBlockCommentStartDelimiter_@since 4.0.3;public EmbeddedDatabaseBuilder setBlockCommentEndDelimiter(String blockCommentEndDelimiter) {_		this.databasePopulator.setBlockCommentEndDelimiter(blockCommentEndDelimiter)__		return this__	};specify,the,end,delimiter,for,block,comments,in,all,sql,scripts,p,default,is,47,param,block,comment,end,delimiter,the,end,delimiter,for,block,comments,return,code,this,to,facilitate,method,chaining,since,4,0,3,see,set,block,comment,start,delimiter,since,4,0,3;public,embedded,database,builder,set,block,comment,end,delimiter,string,block,comment,end,delimiter,this,database,populator,set,block,comment,end,delimiter,block,comment,end,delimiter,return,this
EmbeddedDatabaseBuilder -> public EmbeddedDatabaseBuilder setBlockCommentEndDelimiter(String blockCommentEndDelimiter);1396188524;Specify the end delimiter for block comments in all SQL scripts._<p>Default is "*&#47_"._@param blockCommentEndDelimiter the end delimiter for block comments_@return {@code this}, to facilitate method chaining_@since 4.0.3_@see #setBlockCommentStartDelimiter;public EmbeddedDatabaseBuilder setBlockCommentEndDelimiter(String blockCommentEndDelimiter) {_		this.databasePopulator.setBlockCommentEndDelimiter(blockCommentEndDelimiter)__		return this__	};specify,the,end,delimiter,for,block,comments,in,all,sql,scripts,p,default,is,47,param,block,comment,end,delimiter,the,end,delimiter,for,block,comments,return,code,this,to,facilitate,method,chaining,since,4,0,3,see,set,block,comment,start,delimiter;public,embedded,database,builder,set,block,comment,end,delimiter,string,block,comment,end,delimiter,this,database,populator,set,block,comment,end,delimiter,block,comment,end,delimiter,return,this
EmbeddedDatabaseBuilder -> public EmbeddedDatabaseBuilder setBlockCommentEndDelimiter(String blockCommentEndDelimiter);1397231067;Specify the end delimiter for block comments in all SQL scripts._<p>Defaults to <code>"*&#47_"</code>._@param blockCommentEndDelimiter the end delimiter for block comments_@return {@code this}, to facilitate method chaining_@since 4.0.3_@see #setBlockCommentStartDelimiter;public EmbeddedDatabaseBuilder setBlockCommentEndDelimiter(String blockCommentEndDelimiter) {_		this.databasePopulator.setBlockCommentEndDelimiter(blockCommentEndDelimiter)__		return this__	};specify,the,end,delimiter,for,block,comments,in,all,sql,scripts,p,defaults,to,code,47,code,param,block,comment,end,delimiter,the,end,delimiter,for,block,comments,return,code,this,to,facilitate,method,chaining,since,4,0,3,see,set,block,comment,start,delimiter;public,embedded,database,builder,set,block,comment,end,delimiter,string,block,comment,end,delimiter,this,database,populator,set,block,comment,end,delimiter,block,comment,end,delimiter,return,this
EmbeddedDatabaseBuilder -> public EmbeddedDatabaseBuilder setBlockCommentEndDelimiter(String blockCommentEndDelimiter);1426893719;Specify the end delimiter for block comments in all SQL scripts._<p>Defaults to <code>"*&#47_"</code>._@param blockCommentEndDelimiter the end delimiter for block comments_@return {@code this}, to facilitate method chaining_@since 4.0.3_@see #setBlockCommentStartDelimiter;public EmbeddedDatabaseBuilder setBlockCommentEndDelimiter(String blockCommentEndDelimiter) {_		this.databasePopulator.setBlockCommentEndDelimiter(blockCommentEndDelimiter)__		return this__	};specify,the,end,delimiter,for,block,comments,in,all,sql,scripts,p,defaults,to,code,47,code,param,block,comment,end,delimiter,the,end,delimiter,for,block,comments,return,code,this,to,facilitate,method,chaining,since,4,0,3,see,set,block,comment,start,delimiter;public,embedded,database,builder,set,block,comment,end,delimiter,string,block,comment,end,delimiter,this,database,populator,set,block,comment,end,delimiter,block,comment,end,delimiter,return,this
EmbeddedDatabaseBuilder -> public EmbeddedDatabaseBuilder setBlockCommentEndDelimiter(String blockCommentEndDelimiter);1440689273;Specify the end delimiter for block comments in all SQL scripts._<p>Defaults to <code>"*&#47_"</code>._@param blockCommentEndDelimiter the end delimiter for block comments_@return {@code this}, to facilitate method chaining_@since 4.0.3_@see #setBlockCommentStartDelimiter;public EmbeddedDatabaseBuilder setBlockCommentEndDelimiter(String blockCommentEndDelimiter) {_		this.databasePopulator.setBlockCommentEndDelimiter(blockCommentEndDelimiter)__		return this__	};specify,the,end,delimiter,for,block,comments,in,all,sql,scripts,p,defaults,to,code,47,code,param,block,comment,end,delimiter,the,end,delimiter,for,block,comments,return,code,this,to,facilitate,method,chaining,since,4,0,3,see,set,block,comment,start,delimiter;public,embedded,database,builder,set,block,comment,end,delimiter,string,block,comment,end,delimiter,this,database,populator,set,block,comment,end,delimiter,block,comment,end,delimiter,return,this
EmbeddedDatabaseBuilder -> public EmbeddedDatabaseBuilder setBlockCommentEndDelimiter(String blockCommentEndDelimiter);1530174524;Specify the end delimiter for block comments in all SQL scripts._<p>Defaults to <code>"*&#47_"</code>._@param blockCommentEndDelimiter the end delimiter for block comments_@return {@code this}, to facilitate method chaining_@since 4.0.3_@see #setBlockCommentStartDelimiter;public EmbeddedDatabaseBuilder setBlockCommentEndDelimiter(String blockCommentEndDelimiter) {_		this.databasePopulator.setBlockCommentEndDelimiter(blockCommentEndDelimiter)__		return this__	};specify,the,end,delimiter,for,block,comments,in,all,sql,scripts,p,defaults,to,code,47,code,param,block,comment,end,delimiter,the,end,delimiter,for,block,comments,return,code,this,to,facilitate,method,chaining,since,4,0,3,see,set,block,comment,start,delimiter;public,embedded,database,builder,set,block,comment,end,delimiter,string,block,comment,end,delimiter,this,database,populator,set,block,comment,end,delimiter,block,comment,end,delimiter,return,this
EmbeddedDatabaseBuilder -> public EmbeddedDatabaseBuilder addScript(String sqlResource);1328020251;Adds a SQL script to execute to populate the database._@param sqlResource the sql resource location_@return this, to facilitate method chaining;public EmbeddedDatabaseBuilder addScript(String sqlResource) {_		this.databasePopulator.addScript(this.resourceLoader.getResource(sqlResource))__		return this__	};adds,a,sql,script,to,execute,to,populate,the,database,param,sql,resource,the,sql,resource,location,return,this,to,facilitate,method,chaining;public,embedded,database,builder,add,script,string,sql,resource,this,database,populator,add,script,this,resource,loader,get,resource,sql,resource,return,this
EmbeddedDatabaseBuilder -> public EmbeddedDatabaseBuilder addScript(String sqlResource);1340131687;Add a SQL script to execute to populate the database._@param sqlResource the sql resource location_@return this, to facilitate method chaining;public EmbeddedDatabaseBuilder addScript(String sqlResource) {_		this.databasePopulator.addScript(this.resourceLoader.getResource(sqlResource))__		return this__	};add,a,sql,script,to,execute,to,populate,the,database,param,sql,resource,the,sql,resource,location,return,this,to,facilitate,method,chaining;public,embedded,database,builder,add,script,string,sql,resource,this,database,populator,add,script,this,resource,loader,get,resource,sql,resource,return,this
EmbeddedDatabaseBuilder -> public EmbeddedDatabaseBuilder addScript(String sqlResource);1356735495;Add a SQL script to execute to populate the database._@param sqlResource the sql resource location_@return this, to facilitate method chaining;public EmbeddedDatabaseBuilder addScript(String sqlResource) {_		this.databasePopulator.addScript(this.resourceLoader.getResource(sqlResource))__		return this__	};add,a,sql,script,to,execute,to,populate,the,database,param,sql,resource,the,sql,resource,location,return,this,to,facilitate,method,chaining;public,embedded,database,builder,add,script,string,sql,resource,this,database,populator,add,script,this,resource,loader,get,resource,sql,resource,return,this
EmbeddedDatabaseBuilder -> public EmbeddedDatabaseBuilder addScript(String sqlResource);1367955086;Add a SQL script to execute to populate the database._@param sqlResource the sql resource location_@return this, to facilitate method chaining;public EmbeddedDatabaseBuilder addScript(String sqlResource) {_		this.databasePopulator.addScript(this.resourceLoader.getResource(sqlResource))__		return this__	};add,a,sql,script,to,execute,to,populate,the,database,param,sql,resource,the,sql,resource,location,return,this,to,facilitate,method,chaining;public,embedded,database,builder,add,script,string,sql,resource,this,database,populator,add,script,this,resource,loader,get,resource,sql,resource,return,this
EmbeddedDatabaseBuilder -> public EmbeddedDatabaseBuilder addScript(String sqlResource);1392160372;Add a SQL script to execute to populate the database._@param sqlResource the sql resource location_@return this, to facilitate method chaining;public EmbeddedDatabaseBuilder addScript(String sqlResource) {_		this.databasePopulator.addScript(this.resourceLoader.getResource(sqlResource))__		return this__	};add,a,sql,script,to,execute,to,populate,the,database,param,sql,resource,the,sql,resource,location,return,this,to,facilitate,method,chaining;public,embedded,database,builder,add,script,string,sql,resource,this,database,populator,add,script,this,resource,loader,get,resource,sql,resource,return,this
EmbeddedDatabaseBuilder -> public EmbeddedDatabaseBuilder addScript(String sqlResource);1395143680;Add an SQL script to execute to initialize or populate the database._@param sqlResource the sql resource location_@return {@code this}, to facilitate method chaining;public EmbeddedDatabaseBuilder addScript(String sqlResource) {_		this.databasePopulator.addScript(this.resourceLoader.getResource(sqlResource))__		return this__	};add,an,sql,script,to,execute,to,initialize,or,populate,the,database,param,sql,resource,the,sql,resource,location,return,code,this,to,facilitate,method,chaining;public,embedded,database,builder,add,script,string,sql,resource,this,database,populator,add,script,this,resource,loader,get,resource,sql,resource,return,this
EmbeddedDatabaseBuilder -> public EmbeddedDatabaseBuilder(ResourceLoader resourceLoader);1328020251;Create a new embedded database builder with the given ResourceLoader._@param resourceLoader the ResourceLoader to delegate to;public EmbeddedDatabaseBuilder(ResourceLoader resourceLoader) {_		this.databaseFactory = new EmbeddedDatabaseFactory()__		this.databasePopulator = new ResourceDatabasePopulator()__		this.databaseFactory.setDatabasePopulator(this.databasePopulator)__		this.resourceLoader = resourceLoader__	};create,a,new,embedded,database,builder,with,the,given,resource,loader,param,resource,loader,the,resource,loader,to,delegate,to;public,embedded,database,builder,resource,loader,resource,loader,this,database,factory,new,embedded,database,factory,this,database,populator,new,resource,database,populator,this,database,factory,set,database,populator,this,database,populator,this,resource,loader,resource,loader
EmbeddedDatabaseBuilder -> public EmbeddedDatabaseBuilder(ResourceLoader resourceLoader);1340131687;Create a new embedded database builder with the given ResourceLoader._@param resourceLoader the ResourceLoader to delegate to;public EmbeddedDatabaseBuilder(ResourceLoader resourceLoader) {_		this.databaseFactory = new EmbeddedDatabaseFactory()__		this.databasePopulator = new ResourceDatabasePopulator()__		this.databaseFactory.setDatabasePopulator(this.databasePopulator)__		this.resourceLoader = resourceLoader__	};create,a,new,embedded,database,builder,with,the,given,resource,loader,param,resource,loader,the,resource,loader,to,delegate,to;public,embedded,database,builder,resource,loader,resource,loader,this,database,factory,new,embedded,database,factory,this,database,populator,new,resource,database,populator,this,database,factory,set,database,populator,this,database,populator,this,resource,loader,resource,loader
EmbeddedDatabaseBuilder -> public EmbeddedDatabaseBuilder(ResourceLoader resourceLoader);1356735495;Create a new embedded database builder with the given ResourceLoader._@param resourceLoader the ResourceLoader to delegate to;public EmbeddedDatabaseBuilder(ResourceLoader resourceLoader) {_		this.databaseFactory = new EmbeddedDatabaseFactory()__		this.databasePopulator = new ResourceDatabasePopulator()__		this.databaseFactory.setDatabasePopulator(this.databasePopulator)__		this.resourceLoader = resourceLoader__	};create,a,new,embedded,database,builder,with,the,given,resource,loader,param,resource,loader,the,resource,loader,to,delegate,to;public,embedded,database,builder,resource,loader,resource,loader,this,database,factory,new,embedded,database,factory,this,database,populator,new,resource,database,populator,this,database,factory,set,database,populator,this,database,populator,this,resource,loader,resource,loader
EmbeddedDatabaseBuilder -> public EmbeddedDatabaseBuilder(ResourceLoader resourceLoader);1367955086;Create a new embedded database builder with the given ResourceLoader._@param resourceLoader the ResourceLoader to delegate to;public EmbeddedDatabaseBuilder(ResourceLoader resourceLoader) {_		this.databaseFactory = new EmbeddedDatabaseFactory()__		this.databasePopulator = new ResourceDatabasePopulator()__		this.databaseFactory.setDatabasePopulator(this.databasePopulator)__		this.resourceLoader = resourceLoader__	};create,a,new,embedded,database,builder,with,the,given,resource,loader,param,resource,loader,the,resource,loader,to,delegate,to;public,embedded,database,builder,resource,loader,resource,loader,this,database,factory,new,embedded,database,factory,this,database,populator,new,resource,database,populator,this,database,factory,set,database,populator,this,database,populator,this,resource,loader,resource,loader
EmbeddedDatabaseBuilder -> public EmbeddedDatabaseBuilder(ResourceLoader resourceLoader);1392160372;Create a new embedded database builder with the given ResourceLoader._@param resourceLoader the ResourceLoader to delegate to;public EmbeddedDatabaseBuilder(ResourceLoader resourceLoader) {_		this.databaseFactory = new EmbeddedDatabaseFactory()__		this.databasePopulator = new ResourceDatabasePopulator()__		this.databaseFactory.setDatabasePopulator(this.databasePopulator)__		this.resourceLoader = resourceLoader__	};create,a,new,embedded,database,builder,with,the,given,resource,loader,param,resource,loader,the,resource,loader,to,delegate,to;public,embedded,database,builder,resource,loader,resource,loader,this,database,factory,new,embedded,database,factory,this,database,populator,new,resource,database,populator,this,database,factory,set,database,populator,this,database,populator,this,resource,loader,resource,loader
EmbeddedDatabaseBuilder -> public EmbeddedDatabaseBuilder(ResourceLoader resourceLoader);1395143680;Create a new embedded database builder with the given ResourceLoader._@param resourceLoader the ResourceLoader to delegate to;public EmbeddedDatabaseBuilder(ResourceLoader resourceLoader) {_		this.databaseFactory = new EmbeddedDatabaseFactory()__		this.databasePopulator = new ResourceDatabasePopulator()__		this.databaseFactory.setDatabasePopulator(this.databasePopulator)__		this.resourceLoader = resourceLoader__	};create,a,new,embedded,database,builder,with,the,given,resource,loader,param,resource,loader,the,resource,loader,to,delegate,to;public,embedded,database,builder,resource,loader,resource,loader,this,database,factory,new,embedded,database,factory,this,database,populator,new,resource,database,populator,this,database,factory,set,database,populator,this,database,populator,this,resource,loader,resource,loader
EmbeddedDatabaseBuilder -> public EmbeddedDatabaseBuilder(ResourceLoader resourceLoader);1395183391;Create a new embedded database builder with the given {@link ResourceLoader}._@param resourceLoader the {@code ResourceLoader} to delegate to;public EmbeddedDatabaseBuilder(ResourceLoader resourceLoader) {_		this.databaseFactory = new EmbeddedDatabaseFactory()__		this.databasePopulator = new ResourceDatabasePopulator()__		this.databaseFactory.setDatabasePopulator(this.databasePopulator)__		this.resourceLoader = resourceLoader__	};create,a,new,embedded,database,builder,with,the,given,link,resource,loader,param,resource,loader,the,code,resource,loader,to,delegate,to;public,embedded,database,builder,resource,loader,resource,loader,this,database,factory,new,embedded,database,factory,this,database,populator,new,resource,database,populator,this,database,factory,set,database,populator,this,database,populator,this,resource,loader,resource,loader
EmbeddedDatabaseBuilder -> public EmbeddedDatabaseBuilder(ResourceLoader resourceLoader);1396188524;Create a new embedded database builder with the given {@link ResourceLoader}._@param resourceLoader the {@code ResourceLoader} to delegate to;public EmbeddedDatabaseBuilder(ResourceLoader resourceLoader) {_		this.databaseFactory = new EmbeddedDatabaseFactory()__		this.databasePopulator = new ResourceDatabasePopulator()__		this.databaseFactory.setDatabasePopulator(this.databasePopulator)__		this.resourceLoader = resourceLoader__	};create,a,new,embedded,database,builder,with,the,given,link,resource,loader,param,resource,loader,the,code,resource,loader,to,delegate,to;public,embedded,database,builder,resource,loader,resource,loader,this,database,factory,new,embedded,database,factory,this,database,populator,new,resource,database,populator,this,database,factory,set,database,populator,this,database,populator,this,resource,loader,resource,loader
EmbeddedDatabaseBuilder -> public EmbeddedDatabaseBuilder(ResourceLoader resourceLoader);1397231067;Create a new embedded database builder with the given {@link ResourceLoader}._@param resourceLoader the {@code ResourceLoader} to delegate to;public EmbeddedDatabaseBuilder(ResourceLoader resourceLoader) {_		this.databaseFactory = new EmbeddedDatabaseFactory()__		this.databasePopulator = new ResourceDatabasePopulator()__		this.databaseFactory.setDatabasePopulator(this.databasePopulator)__		this.resourceLoader = resourceLoader__	};create,a,new,embedded,database,builder,with,the,given,link,resource,loader,param,resource,loader,the,code,resource,loader,to,delegate,to;public,embedded,database,builder,resource,loader,resource,loader,this,database,factory,new,embedded,database,factory,this,database,populator,new,resource,database,populator,this,database,factory,set,database,populator,this,database,populator,this,resource,loader,resource,loader
EmbeddedDatabaseBuilder -> public EmbeddedDatabaseBuilder(ResourceLoader resourceLoader);1426893719;Create a new embedded database builder with the given {@link ResourceLoader}._@param resourceLoader the {@code ResourceLoader} to delegate to;public EmbeddedDatabaseBuilder(ResourceLoader resourceLoader) {_		this.databaseFactory = new EmbeddedDatabaseFactory()__		this.databasePopulator = new ResourceDatabasePopulator()__		this.databaseFactory.setDatabasePopulator(this.databasePopulator)__		this.resourceLoader = resourceLoader__	};create,a,new,embedded,database,builder,with,the,given,link,resource,loader,param,resource,loader,the,code,resource,loader,to,delegate,to;public,embedded,database,builder,resource,loader,resource,loader,this,database,factory,new,embedded,database,factory,this,database,populator,new,resource,database,populator,this,database,factory,set,database,populator,this,database,populator,this,resource,loader,resource,loader
EmbeddedDatabaseBuilder -> public EmbeddedDatabaseBuilder(ResourceLoader resourceLoader);1440689273;Create a new embedded database builder with the given {@link ResourceLoader}._@param resourceLoader the {@code ResourceLoader} to delegate to;public EmbeddedDatabaseBuilder(ResourceLoader resourceLoader) {_		this.databaseFactory = new EmbeddedDatabaseFactory()__		this.databasePopulator = new ResourceDatabasePopulator()__		this.databaseFactory.setDatabasePopulator(this.databasePopulator)__		this.resourceLoader = resourceLoader__	};create,a,new,embedded,database,builder,with,the,given,link,resource,loader,param,resource,loader,the,code,resource,loader,to,delegate,to;public,embedded,database,builder,resource,loader,resource,loader,this,database,factory,new,embedded,database,factory,this,database,populator,new,resource,database,populator,this,database,factory,set,database,populator,this,database,populator,this,resource,loader,resource,loader
EmbeddedDatabaseBuilder -> public EmbeddedDatabaseBuilder(ResourceLoader resourceLoader);1530174524;Create a new embedded database builder with the given {@link ResourceLoader}._@param resourceLoader the {@code ResourceLoader} to delegate to;public EmbeddedDatabaseBuilder(ResourceLoader resourceLoader) {_		this.databaseFactory = new EmbeddedDatabaseFactory()__		this.databasePopulator = new ResourceDatabasePopulator()__		this.databaseFactory.setDatabasePopulator(this.databasePopulator)__		this.resourceLoader = resourceLoader__	};create,a,new,embedded,database,builder,with,the,given,link,resource,loader,param,resource,loader,the,code,resource,loader,to,delegate,to;public,embedded,database,builder,resource,loader,resource,loader,this,database,factory,new,embedded,database,factory,this,database,populator,new,resource,database,populator,this,database,factory,set,database,populator,this,database,populator,this,resource,loader,resource,loader
EmbeddedDatabaseBuilder -> public EmbeddedDatabaseBuilder setDataSourceFactory(DataSourceFactory dataSourceFactory);1395183391;Set the factory to use to create the {@link DataSource} instance that_connects to the embedded database._<p>Defaults to {@link SimpleDriverDataSourceFactory} but can be overridden,_for example to introduce connection pooling._@return {@code this}, to facilitate method chaining_@since 4.0.3;public EmbeddedDatabaseBuilder setDataSourceFactory(DataSourceFactory dataSourceFactory) {_		Assert.notNull(dataSourceFactory, "DataSourceFactory is required")__		this.databaseFactory.setDataSourceFactory(dataSourceFactory)__		return this__	};set,the,factory,to,use,to,create,the,link,data,source,instance,that,connects,to,the,embedded,database,p,defaults,to,link,simple,driver,data,source,factory,but,can,be,overridden,for,example,to,introduce,connection,pooling,return,code,this,to,facilitate,method,chaining,since,4,0,3;public,embedded,database,builder,set,data,source,factory,data,source,factory,data,source,factory,assert,not,null,data,source,factory,data,source,factory,is,required,this,database,factory,set,data,source,factory,data,source,factory,return,this
EmbeddedDatabaseBuilder -> public EmbeddedDatabaseBuilder setDataSourceFactory(DataSourceFactory dataSourceFactory);1396188524;Set the factory to use to create the {@link DataSource} instance that_connects to the embedded database._<p>Defaults to {@link SimpleDriverDataSourceFactory} but can be overridden,_for example to introduce connection pooling._@return {@code this}, to facilitate method chaining_@since 4.0.3;public EmbeddedDatabaseBuilder setDataSourceFactory(DataSourceFactory dataSourceFactory) {_		Assert.notNull(dataSourceFactory, "DataSourceFactory is required")__		this.databaseFactory.setDataSourceFactory(dataSourceFactory)__		return this__	};set,the,factory,to,use,to,create,the,link,data,source,instance,that,connects,to,the,embedded,database,p,defaults,to,link,simple,driver,data,source,factory,but,can,be,overridden,for,example,to,introduce,connection,pooling,return,code,this,to,facilitate,method,chaining,since,4,0,3;public,embedded,database,builder,set,data,source,factory,data,source,factory,data,source,factory,assert,not,null,data,source,factory,data,source,factory,is,required,this,database,factory,set,data,source,factory,data,source,factory,return,this
EmbeddedDatabaseBuilder -> public EmbeddedDatabaseBuilder setDataSourceFactory(DataSourceFactory dataSourceFactory);1397231067;Set the factory to use to create the {@link DataSource} instance that_connects to the embedded database._<p>Defaults to {@link SimpleDriverDataSourceFactory} but can be overridden,_for example to introduce connection pooling._@return {@code this}, to facilitate method chaining_@since 4.0.3;public EmbeddedDatabaseBuilder setDataSourceFactory(DataSourceFactory dataSourceFactory) {_		Assert.notNull(dataSourceFactory, "DataSourceFactory is required")__		this.databaseFactory.setDataSourceFactory(dataSourceFactory)__		return this__	};set,the,factory,to,use,to,create,the,link,data,source,instance,that,connects,to,the,embedded,database,p,defaults,to,link,simple,driver,data,source,factory,but,can,be,overridden,for,example,to,introduce,connection,pooling,return,code,this,to,facilitate,method,chaining,since,4,0,3;public,embedded,database,builder,set,data,source,factory,data,source,factory,data,source,factory,assert,not,null,data,source,factory,data,source,factory,is,required,this,database,factory,set,data,source,factory,data,source,factory,return,this
EmbeddedDatabaseBuilder -> public EmbeddedDatabaseBuilder setDataSourceFactory(DataSourceFactory dataSourceFactory);1426893719;Set the factory to use to create the {@link DataSource} instance that_connects to the embedded database._<p>Defaults to {@link SimpleDriverDataSourceFactory} but can be overridden,_for example to introduce connection pooling._@return {@code this}, to facilitate method chaining_@since 4.0.3;public EmbeddedDatabaseBuilder setDataSourceFactory(DataSourceFactory dataSourceFactory) {_		Assert.notNull(dataSourceFactory, "DataSourceFactory is required")__		this.databaseFactory.setDataSourceFactory(dataSourceFactory)__		return this__	};set,the,factory,to,use,to,create,the,link,data,source,instance,that,connects,to,the,embedded,database,p,defaults,to,link,simple,driver,data,source,factory,but,can,be,overridden,for,example,to,introduce,connection,pooling,return,code,this,to,facilitate,method,chaining,since,4,0,3;public,embedded,database,builder,set,data,source,factory,data,source,factory,data,source,factory,assert,not,null,data,source,factory,data,source,factory,is,required,this,database,factory,set,data,source,factory,data,source,factory,return,this
EmbeddedDatabaseBuilder -> public EmbeddedDatabaseBuilder setDataSourceFactory(DataSourceFactory dataSourceFactory);1440689273;Set the factory to use to create the {@link DataSource} instance that_connects to the embedded database._<p>Defaults to {@link SimpleDriverDataSourceFactory} but can be overridden,_for example to introduce connection pooling._@return {@code this}, to facilitate method chaining_@since 4.0.3;public EmbeddedDatabaseBuilder setDataSourceFactory(DataSourceFactory dataSourceFactory) {_		Assert.notNull(dataSourceFactory, "DataSourceFactory is required")__		this.databaseFactory.setDataSourceFactory(dataSourceFactory)__		return this__	};set,the,factory,to,use,to,create,the,link,data,source,instance,that,connects,to,the,embedded,database,p,defaults,to,link,simple,driver,data,source,factory,but,can,be,overridden,for,example,to,introduce,connection,pooling,return,code,this,to,facilitate,method,chaining,since,4,0,3;public,embedded,database,builder,set,data,source,factory,data,source,factory,data,source,factory,assert,not,null,data,source,factory,data,source,factory,is,required,this,database,factory,set,data,source,factory,data,source,factory,return,this
EmbeddedDatabaseBuilder -> public EmbeddedDatabaseBuilder setDataSourceFactory(DataSourceFactory dataSourceFactory);1530174524;Set the factory to use to create the {@link DataSource} instance that_connects to the embedded database._<p>Defaults to {@link SimpleDriverDataSourceFactory} but can be overridden,_for example to introduce connection pooling._@return {@code this}, to facilitate method chaining_@since 4.0.3;public EmbeddedDatabaseBuilder setDataSourceFactory(DataSourceFactory dataSourceFactory) {_		Assert.notNull(dataSourceFactory, "DataSourceFactory is required")__		this.databaseFactory.setDataSourceFactory(dataSourceFactory)__		return this__	};set,the,factory,to,use,to,create,the,link,data,source,instance,that,connects,to,the,embedded,database,p,defaults,to,link,simple,driver,data,source,factory,but,can,be,overridden,for,example,to,introduce,connection,pooling,return,code,this,to,facilitate,method,chaining,since,4,0,3;public,embedded,database,builder,set,data,source,factory,data,source,factory,data,source,factory,assert,not,null,data,source,factory,data,source,factory,is,required,this,database,factory,set,data,source,factory,data,source,factory,return,this
EmbeddedDatabaseBuilder -> public EmbeddedDatabaseBuilder setType(EmbeddedDatabaseType databaseType);1328020251;Sets the type of embedded database._Defaults to HSQL if not called._@param databaseType the database type_@return this, to facilitate method chaining;public EmbeddedDatabaseBuilder setType(EmbeddedDatabaseType databaseType) {_		this.databaseFactory.setDatabaseType(databaseType)__		return this__	};sets,the,type,of,embedded,database,defaults,to,hsql,if,not,called,param,database,type,the,database,type,return,this,to,facilitate,method,chaining;public,embedded,database,builder,set,type,embedded,database,type,database,type,this,database,factory,set,database,type,database,type,return,this
EmbeddedDatabaseBuilder -> public EmbeddedDatabaseBuilder setType(EmbeddedDatabaseType databaseType);1340131687;Set the type of embedded database._<p>Defaults to HSQL if not called._@param databaseType the database type_@return this, to facilitate method chaining;public EmbeddedDatabaseBuilder setType(EmbeddedDatabaseType databaseType) {_		this.databaseFactory.setDatabaseType(databaseType)__		return this__	};set,the,type,of,embedded,database,p,defaults,to,hsql,if,not,called,param,database,type,the,database,type,return,this,to,facilitate,method,chaining;public,embedded,database,builder,set,type,embedded,database,type,database,type,this,database,factory,set,database,type,database,type,return,this
EmbeddedDatabaseBuilder -> public EmbeddedDatabaseBuilder setType(EmbeddedDatabaseType databaseType);1356735495;Set the type of embedded database._<p>Defaults to HSQL if not called._@param databaseType the database type_@return this, to facilitate method chaining;public EmbeddedDatabaseBuilder setType(EmbeddedDatabaseType databaseType) {_		this.databaseFactory.setDatabaseType(databaseType)__		return this__	};set,the,type,of,embedded,database,p,defaults,to,hsql,if,not,called,param,database,type,the,database,type,return,this,to,facilitate,method,chaining;public,embedded,database,builder,set,type,embedded,database,type,database,type,this,database,factory,set,database,type,database,type,return,this
EmbeddedDatabaseBuilder -> public EmbeddedDatabaseBuilder setType(EmbeddedDatabaseType databaseType);1367955086;Set the type of embedded database._<p>Defaults to HSQL if not called._@param databaseType the database type_@return this, to facilitate method chaining;public EmbeddedDatabaseBuilder setType(EmbeddedDatabaseType databaseType) {_		this.databaseFactory.setDatabaseType(databaseType)__		return this__	};set,the,type,of,embedded,database,p,defaults,to,hsql,if,not,called,param,database,type,the,database,type,return,this,to,facilitate,method,chaining;public,embedded,database,builder,set,type,embedded,database,type,database,type,this,database,factory,set,database,type,database,type,return,this
EmbeddedDatabaseBuilder -> public EmbeddedDatabaseBuilder setType(EmbeddedDatabaseType databaseType);1392160372;Set the type of embedded database._<p>Defaults to HSQL if not called._@param databaseType the database type_@return this, to facilitate method chaining;public EmbeddedDatabaseBuilder setType(EmbeddedDatabaseType databaseType) {_		this.databaseFactory.setDatabaseType(databaseType)__		return this__	};set,the,type,of,embedded,database,p,defaults,to,hsql,if,not,called,param,database,type,the,database,type,return,this,to,facilitate,method,chaining;public,embedded,database,builder,set,type,embedded,database,type,database,type,this,database,factory,set,database,type,database,type,return,this
EmbeddedDatabaseBuilder -> public EmbeddedDatabaseBuilder setType(EmbeddedDatabaseType databaseType);1395143680;Set the type of embedded database._<p>Defaults to HSQL if not called._@param databaseType the database type_@return {@code this}, to facilitate method chaining;public EmbeddedDatabaseBuilder setType(EmbeddedDatabaseType databaseType) {_		this.databaseFactory.setDatabaseType(databaseType)__		return this__	};set,the,type,of,embedded,database,p,defaults,to,hsql,if,not,called,param,database,type,the,database,type,return,code,this,to,facilitate,method,chaining;public,embedded,database,builder,set,type,embedded,database,type,database,type,this,database,factory,set,database,type,database,type,return,this
EmbeddedDatabaseBuilder -> public EmbeddedDatabaseBuilder setType(EmbeddedDatabaseType databaseType);1395183391;Set the type of embedded database._<p>Defaults to HSQL if not called._@param databaseType the type of embedded database to build_@return {@code this}, to facilitate method chaining;public EmbeddedDatabaseBuilder setType(EmbeddedDatabaseType databaseType) {_		this.databaseFactory.setDatabaseType(databaseType)__		return this__	};set,the,type,of,embedded,database,p,defaults,to,hsql,if,not,called,param,database,type,the,type,of,embedded,database,to,build,return,code,this,to,facilitate,method,chaining;public,embedded,database,builder,set,type,embedded,database,type,database,type,this,database,factory,set,database,type,database,type,return,this
EmbeddedDatabaseBuilder -> public EmbeddedDatabaseBuilder setType(EmbeddedDatabaseType databaseType);1396188524;Set the type of embedded database._<p>Defaults to HSQL if not called._@param databaseType the type of embedded database to build_@return {@code this}, to facilitate method chaining;public EmbeddedDatabaseBuilder setType(EmbeddedDatabaseType databaseType) {_		this.databaseFactory.setDatabaseType(databaseType)__		return this__	};set,the,type,of,embedded,database,p,defaults,to,hsql,if,not,called,param,database,type,the,type,of,embedded,database,to,build,return,code,this,to,facilitate,method,chaining;public,embedded,database,builder,set,type,embedded,database,type,database,type,this,database,factory,set,database,type,database,type,return,this
EmbeddedDatabaseBuilder -> public EmbeddedDatabaseBuilder setType(EmbeddedDatabaseType databaseType);1397231067;Set the type of embedded database._<p>Defaults to HSQL if not called._@param databaseType the type of embedded database to build_@return {@code this}, to facilitate method chaining;public EmbeddedDatabaseBuilder setType(EmbeddedDatabaseType databaseType) {_		this.databaseFactory.setDatabaseType(databaseType)__		return this__	};set,the,type,of,embedded,database,p,defaults,to,hsql,if,not,called,param,database,type,the,type,of,embedded,database,to,build,return,code,this,to,facilitate,method,chaining;public,embedded,database,builder,set,type,embedded,database,type,database,type,this,database,factory,set,database,type,database,type,return,this
EmbeddedDatabaseBuilder -> public EmbeddedDatabaseBuilder setType(EmbeddedDatabaseType databaseType);1426893719;Set the type of embedded database._<p>Defaults to HSQL if not called._@param databaseType the type of embedded database to build_@return {@code this}, to facilitate method chaining;public EmbeddedDatabaseBuilder setType(EmbeddedDatabaseType databaseType) {_		this.databaseFactory.setDatabaseType(databaseType)__		return this__	};set,the,type,of,embedded,database,p,defaults,to,hsql,if,not,called,param,database,type,the,type,of,embedded,database,to,build,return,code,this,to,facilitate,method,chaining;public,embedded,database,builder,set,type,embedded,database,type,database,type,this,database,factory,set,database,type,database,type,return,this
EmbeddedDatabaseBuilder -> public EmbeddedDatabaseBuilder setType(EmbeddedDatabaseType databaseType);1440689273;Set the type of embedded database._<p>Defaults to HSQL if not called._@param databaseType the type of embedded database to build_@return {@code this}, to facilitate method chaining;public EmbeddedDatabaseBuilder setType(EmbeddedDatabaseType databaseType) {_		this.databaseFactory.setDatabaseType(databaseType)__		return this__	};set,the,type,of,embedded,database,p,defaults,to,hsql,if,not,called,param,database,type,the,type,of,embedded,database,to,build,return,code,this,to,facilitate,method,chaining;public,embedded,database,builder,set,type,embedded,database,type,database,type,this,database,factory,set,database,type,database,type,return,this
EmbeddedDatabaseBuilder -> public EmbeddedDatabaseBuilder setType(EmbeddedDatabaseType databaseType);1530174524;Set the type of embedded database._<p>Defaults to HSQL if not called._@param databaseType the type of embedded database to build_@return {@code this}, to facilitate method chaining;public EmbeddedDatabaseBuilder setType(EmbeddedDatabaseType databaseType) {_		this.databaseFactory.setDatabaseType(databaseType)__		return this__	};set,the,type,of,embedded,database,p,defaults,to,hsql,if,not,called,param,database,type,the,type,of,embedded,database,to,build,return,code,this,to,facilitate,method,chaining;public,embedded,database,builder,set,type,embedded,database,type,database,type,this,database,factory,set,database,type,database,type,return,this
EmbeddedDatabaseBuilder -> public EmbeddedDatabaseBuilder addScript(String script);1395183391;Add an SQL script to execute to initialize or populate the database._@param script the script to execute_@return {@code this}, to facilitate method chaining;public EmbeddedDatabaseBuilder addScript(String script) {_		this.databasePopulator.addScript(this.resourceLoader.getResource(script))__		return this__	};add,an,sql,script,to,execute,to,initialize,or,populate,the,database,param,script,the,script,to,execute,return,code,this,to,facilitate,method,chaining;public,embedded,database,builder,add,script,string,script,this,database,populator,add,script,this,resource,loader,get,resource,script,return,this
EmbeddedDatabaseBuilder -> public EmbeddedDatabaseBuilder addScript(String script);1396188524;Add an SQL script to execute to initialize or populate the database._@param script the script to execute_@return {@code this}, to facilitate method chaining;public EmbeddedDatabaseBuilder addScript(String script) {_		this.databasePopulator.addScript(this.resourceLoader.getResource(script))__		return this__	};add,an,sql,script,to,execute,to,initialize,or,populate,the,database,param,script,the,script,to,execute,return,code,this,to,facilitate,method,chaining;public,embedded,database,builder,add,script,string,script,this,database,populator,add,script,this,resource,loader,get,resource,script,return,this
EmbeddedDatabaseBuilder -> public EmbeddedDatabaseBuilder addScript(String script);1397231067;Add an SQL script to execute to initialize or populate the database._@param script the script to execute_@return {@code this}, to facilitate method chaining;public EmbeddedDatabaseBuilder addScript(String script) {_		this.databasePopulator.addScript(this.resourceLoader.getResource(script))__		return this__	};add,an,sql,script,to,execute,to,initialize,or,populate,the,database,param,script,the,script,to,execute,return,code,this,to,facilitate,method,chaining;public,embedded,database,builder,add,script,string,script,this,database,populator,add,script,this,resource,loader,get,resource,script,return,this
EmbeddedDatabaseBuilder -> public EmbeddedDatabaseBuilder addScript(String script);1426893719;Add an SQL script to execute to initialize or populate the database._@param script the script to execute_@return {@code this}, to facilitate method chaining;public EmbeddedDatabaseBuilder addScript(String script) {_		this.databasePopulator.addScript(this.resourceLoader.getResource(script))__		return this__	};add,an,sql,script,to,execute,to,initialize,or,populate,the,database,param,script,the,script,to,execute,return,code,this,to,facilitate,method,chaining;public,embedded,database,builder,add,script,string,script,this,database,populator,add,script,this,resource,loader,get,resource,script,return,this
EmbeddedDatabaseBuilder -> public EmbeddedDatabaseBuilder addScript(String script);1440689273;Add an SQL script to execute to initialize or populate the database._@param script the script to execute_@return {@code this}, to facilitate method chaining;public EmbeddedDatabaseBuilder addScript(String script) {_		this.databasePopulator.addScript(this.resourceLoader.getResource(script))__		return this__	};add,an,sql,script,to,execute,to,initialize,or,populate,the,database,param,script,the,script,to,execute,return,code,this,to,facilitate,method,chaining;public,embedded,database,builder,add,script,string,script,this,database,populator,add,script,this,resource,loader,get,resource,script,return,this
EmbeddedDatabaseBuilder -> public EmbeddedDatabaseBuilder addScript(String script);1530174524;Add an SQL script to execute to initialize or populate the database._@param script the script to execute_@return {@code this}, to facilitate method chaining;public EmbeddedDatabaseBuilder addScript(String script) {_		this.databasePopulator.addScript(this.resourceLoader.getResource(script))__		return this__	};add,an,sql,script,to,execute,to,initialize,or,populate,the,database,param,script,the,script,to,execute,return,code,this,to,facilitate,method,chaining;public,embedded,database,builder,add,script,string,script,this,database,populator,add,script,this,resource,loader,get,resource,script,return,this
EmbeddedDatabaseBuilder -> public EmbeddedDatabaseBuilder setName(String databaseName);1328020251;Sets the name of the embedded database_Defaults to 'testdb' if not called._@param databaseName the database name_@return this, to facilitate method chaining;public EmbeddedDatabaseBuilder setName(String databaseName) {_		this.databaseFactory.setDatabaseName(databaseName)__		return this__	};sets,the,name,of,the,embedded,database,defaults,to,testdb,if,not,called,param,database,name,the,database,name,return,this,to,facilitate,method,chaining;public,embedded,database,builder,set,name,string,database,name,this,database,factory,set,database,name,database,name,return,this
EmbeddedDatabaseBuilder -> public EmbeddedDatabaseBuilder setName(String databaseName);1340131687;Set the name of the embedded database._<p>Defaults to "testdb" if not called._@param databaseName the database name_@return this, to facilitate method chaining;public EmbeddedDatabaseBuilder setName(String databaseName) {_		this.databaseFactory.setDatabaseName(databaseName)__		return this__	};set,the,name,of,the,embedded,database,p,defaults,to,testdb,if,not,called,param,database,name,the,database,name,return,this,to,facilitate,method,chaining;public,embedded,database,builder,set,name,string,database,name,this,database,factory,set,database,name,database,name,return,this
EmbeddedDatabaseBuilder -> public EmbeddedDatabaseBuilder setName(String databaseName);1356735495;Set the name of the embedded database._<p>Defaults to "testdb" if not called._@param databaseName the database name_@return this, to facilitate method chaining;public EmbeddedDatabaseBuilder setName(String databaseName) {_		this.databaseFactory.setDatabaseName(databaseName)__		return this__	};set,the,name,of,the,embedded,database,p,defaults,to,testdb,if,not,called,param,database,name,the,database,name,return,this,to,facilitate,method,chaining;public,embedded,database,builder,set,name,string,database,name,this,database,factory,set,database,name,database,name,return,this
EmbeddedDatabaseBuilder -> public EmbeddedDatabaseBuilder setName(String databaseName);1367955086;Set the name of the embedded database._<p>Defaults to "testdb" if not called._@param databaseName the database name_@return this, to facilitate method chaining;public EmbeddedDatabaseBuilder setName(String databaseName) {_		this.databaseFactory.setDatabaseName(databaseName)__		return this__	};set,the,name,of,the,embedded,database,p,defaults,to,testdb,if,not,called,param,database,name,the,database,name,return,this,to,facilitate,method,chaining;public,embedded,database,builder,set,name,string,database,name,this,database,factory,set,database,name,database,name,return,this
EmbeddedDatabaseBuilder -> public EmbeddedDatabaseBuilder setName(String databaseName);1392160372;Set the name of the embedded database._<p>Defaults to "testdb" if not called._@param databaseName the database name_@return this, to facilitate method chaining;public EmbeddedDatabaseBuilder setName(String databaseName) {_		this.databaseFactory.setDatabaseName(databaseName)__		return this__	};set,the,name,of,the,embedded,database,p,defaults,to,testdb,if,not,called,param,database,name,the,database,name,return,this,to,facilitate,method,chaining;public,embedded,database,builder,set,name,string,database,name,this,database,factory,set,database,name,database,name,return,this
EmbeddedDatabaseBuilder -> public EmbeddedDatabaseBuilder setName(String databaseName);1395143680;Set the name of the embedded database._<p>Defaults to {@link EmbeddedDatabaseFactory#DEFAULT_DATABASE_NAME} if_not called._@param databaseName the database name_@return {@code this}, to facilitate method chaining;public EmbeddedDatabaseBuilder setName(String databaseName) {_		this.databaseFactory.setDatabaseName(databaseName)__		return this__	};set,the,name,of,the,embedded,database,p,defaults,to,link,embedded,database,factory,if,not,called,param,database,name,the,database,name,return,code,this,to,facilitate,method,chaining;public,embedded,database,builder,set,name,string,database,name,this,database,factory,set,database,name,database,name,return,this
EmbeddedDatabaseBuilder -> public EmbeddedDatabaseBuilder setName(String databaseName);1395183391;Set the name of the embedded database._<p>Defaults to {@link EmbeddedDatabaseFactory#DEFAULT_DATABASE_NAME} if_not called._@param databaseName the name of the embedded database to build_@return {@code this}, to facilitate method chaining;public EmbeddedDatabaseBuilder setName(String databaseName) {_		this.databaseFactory.setDatabaseName(databaseName)__		return this__	};set,the,name,of,the,embedded,database,p,defaults,to,link,embedded,database,factory,if,not,called,param,database,name,the,name,of,the,embedded,database,to,build,return,code,this,to,facilitate,method,chaining;public,embedded,database,builder,set,name,string,database,name,this,database,factory,set,database,name,database,name,return,this
EmbeddedDatabaseBuilder -> public EmbeddedDatabaseBuilder setName(String databaseName);1396188524;Set the name of the embedded database._<p>Defaults to {@link EmbeddedDatabaseFactory#DEFAULT_DATABASE_NAME} if_not called._@param databaseName the name of the embedded database to build_@return {@code this}, to facilitate method chaining;public EmbeddedDatabaseBuilder setName(String databaseName) {_		this.databaseFactory.setDatabaseName(databaseName)__		return this__	};set,the,name,of,the,embedded,database,p,defaults,to,link,embedded,database,factory,if,not,called,param,database,name,the,name,of,the,embedded,database,to,build,return,code,this,to,facilitate,method,chaining;public,embedded,database,builder,set,name,string,database,name,this,database,factory,set,database,name,database,name,return,this
EmbeddedDatabaseBuilder -> public EmbeddedDatabaseBuilder setName(String databaseName);1397231067;Set the name of the embedded database._<p>Defaults to {@link EmbeddedDatabaseFactory#DEFAULT_DATABASE_NAME} if_not called._@param databaseName the name of the embedded database to build_@return {@code this}, to facilitate method chaining;public EmbeddedDatabaseBuilder setName(String databaseName) {_		this.databaseFactory.setDatabaseName(databaseName)__		return this__	};set,the,name,of,the,embedded,database,p,defaults,to,link,embedded,database,factory,if,not,called,param,database,name,the,name,of,the,embedded,database,to,build,return,code,this,to,facilitate,method,chaining;public,embedded,database,builder,set,name,string,database,name,this,database,factory,set,database,name,database,name,return,this
EmbeddedDatabaseBuilder -> public EmbeddedDatabaseBuilder setName(String databaseName);1426893719;Set the name of the embedded database._<p>Defaults to {@link EmbeddedDatabaseFactory#DEFAULT_DATABASE_NAME} if_not called._<p>Will be overridden if the {@code generateUniqueName} flag has been_set to {@code true}._@param databaseName the name of the embedded database to build_@return {@code this}, to facilitate method chaining_@see #generateUniqueName;public EmbeddedDatabaseBuilder setName(String databaseName) {_		this.databaseFactory.setDatabaseName(databaseName)__		return this__	};set,the,name,of,the,embedded,database,p,defaults,to,link,embedded,database,factory,if,not,called,p,will,be,overridden,if,the,code,generate,unique,name,flag,has,been,set,to,code,true,param,database,name,the,name,of,the,embedded,database,to,build,return,code,this,to,facilitate,method,chaining,see,generate,unique,name;public,embedded,database,builder,set,name,string,database,name,this,database,factory,set,database,name,database,name,return,this
EmbeddedDatabaseBuilder -> public EmbeddedDatabaseBuilder setName(String databaseName);1440689273;Set the name of the embedded database._<p>Defaults to {@link EmbeddedDatabaseFactory#DEFAULT_DATABASE_NAME} if_not called._<p>Will be overridden if the {@code generateUniqueName} flag has been_set to {@code true}._@param databaseName the name of the embedded database to build_@return {@code this}, to facilitate method chaining_@see #generateUniqueName;public EmbeddedDatabaseBuilder setName(String databaseName) {_		this.databaseFactory.setDatabaseName(databaseName)__		return this__	};set,the,name,of,the,embedded,database,p,defaults,to,link,embedded,database,factory,if,not,called,p,will,be,overridden,if,the,code,generate,unique,name,flag,has,been,set,to,code,true,param,database,name,the,name,of,the,embedded,database,to,build,return,code,this,to,facilitate,method,chaining,see,generate,unique,name;public,embedded,database,builder,set,name,string,database,name,this,database,factory,set,database,name,database,name,return,this
EmbeddedDatabaseBuilder -> public EmbeddedDatabaseBuilder setName(String databaseName);1530174524;Set the name of the embedded database._<p>Defaults to {@link EmbeddedDatabaseFactory#DEFAULT_DATABASE_NAME} if_not called._<p>Will be overridden if the {@code generateUniqueName} flag has been_set to {@code true}._@param databaseName the name of the embedded database to build_@return {@code this}, to facilitate method chaining_@see #generateUniqueName;public EmbeddedDatabaseBuilder setName(String databaseName) {_		this.databaseFactory.setDatabaseName(databaseName)__		return this__	};set,the,name,of,the,embedded,database,p,defaults,to,link,embedded,database,factory,if,not,called,p,will,be,overridden,if,the,code,generate,unique,name,flag,has,been,set,to,code,true,param,database,name,the,name,of,the,embedded,database,to,build,return,code,this,to,facilitate,method,chaining,see,generate,unique,name;public,embedded,database,builder,set,name,string,database,name,this,database,factory,set,database,name,database,name,return,this
EmbeddedDatabaseBuilder -> public EmbeddedDatabaseBuilder setSeparator(String separator);1395183391;Specify the statement separator used in all SQL scripts, if a custom one._<p>Default is "_"._@param separator the statement separator_@return {@code this}, to facilitate method chaining_@since 4.0.3;public EmbeddedDatabaseBuilder setSeparator(String separator) {_		this.databasePopulator.setSeparator(separator)__		return this__	};specify,the,statement,separator,used,in,all,sql,scripts,if,a,custom,one,p,default,is,param,separator,the,statement,separator,return,code,this,to,facilitate,method,chaining,since,4,0,3;public,embedded,database,builder,set,separator,string,separator,this,database,populator,set,separator,separator,return,this
EmbeddedDatabaseBuilder -> public EmbeddedDatabaseBuilder setSeparator(String separator);1396188524;Specify the statement separator used in all SQL scripts, if a custom one._<p>Default is "_"._@param separator the statement separator_@return {@code this}, to facilitate method chaining_@since 4.0.3;public EmbeddedDatabaseBuilder setSeparator(String separator) {_		this.databasePopulator.setSeparator(separator)__		return this__	};specify,the,statement,separator,used,in,all,sql,scripts,if,a,custom,one,p,default,is,param,separator,the,statement,separator,return,code,this,to,facilitate,method,chaining,since,4,0,3;public,embedded,database,builder,set,separator,string,separator,this,database,populator,set,separator,separator,return,this
EmbeddedDatabaseBuilder -> public EmbeddedDatabaseBuilder setSeparator(String separator);1397231067;Specify the statement separator used in all SQL scripts, if a custom one._<p>Defaults to {@code "_"} if not specified and falls back to {@code "\n"}_as a last resort_ may be set to {@link ScriptUtils#EOF_STATEMENT_SEPARATOR}_to signal that each script contains a single statement without a separator._@param separator the statement separator_@return {@code this}, to facilitate method chaining_@since 4.0.3;public EmbeddedDatabaseBuilder setSeparator(String separator) {_		this.databasePopulator.setSeparator(separator)__		return this__	};specify,the,statement,separator,used,in,all,sql,scripts,if,a,custom,one,p,defaults,to,code,if,not,specified,and,falls,back,to,code,n,as,a,last,resort,may,be,set,to,link,script,utils,to,signal,that,each,script,contains,a,single,statement,without,a,separator,param,separator,the,statement,separator,return,code,this,to,facilitate,method,chaining,since,4,0,3;public,embedded,database,builder,set,separator,string,separator,this,database,populator,set,separator,separator,return,this
EmbeddedDatabaseBuilder -> public EmbeddedDatabaseBuilder setSeparator(String separator);1426893719;Specify the statement separator used in all SQL scripts, if a custom one._<p>Defaults to {@code "_"} if not specified and falls back to {@code "\n"}_as a last resort_ may be set to {@link ScriptUtils#EOF_STATEMENT_SEPARATOR}_to signal that each script contains a single statement without a separator._@param separator the statement separator_@return {@code this}, to facilitate method chaining_@since 4.0.3;public EmbeddedDatabaseBuilder setSeparator(String separator) {_		this.databasePopulator.setSeparator(separator)__		return this__	};specify,the,statement,separator,used,in,all,sql,scripts,if,a,custom,one,p,defaults,to,code,if,not,specified,and,falls,back,to,code,n,as,a,last,resort,may,be,set,to,link,script,utils,to,signal,that,each,script,contains,a,single,statement,without,a,separator,param,separator,the,statement,separator,return,code,this,to,facilitate,method,chaining,since,4,0,3;public,embedded,database,builder,set,separator,string,separator,this,database,populator,set,separator,separator,return,this
EmbeddedDatabaseBuilder -> public EmbeddedDatabaseBuilder setSeparator(String separator);1440689273;Specify the statement separator used in all SQL scripts, if a custom one._<p>Defaults to {@code "_"} if not specified and falls back to {@code "\n"}_as a last resort_ may be set to {@link ScriptUtils#EOF_STATEMENT_SEPARATOR}_to signal that each script contains a single statement without a separator._@param separator the statement separator_@return {@code this}, to facilitate method chaining_@since 4.0.3;public EmbeddedDatabaseBuilder setSeparator(String separator) {_		this.databasePopulator.setSeparator(separator)__		return this__	};specify,the,statement,separator,used,in,all,sql,scripts,if,a,custom,one,p,defaults,to,code,if,not,specified,and,falls,back,to,code,n,as,a,last,resort,may,be,set,to,link,script,utils,to,signal,that,each,script,contains,a,single,statement,without,a,separator,param,separator,the,statement,separator,return,code,this,to,facilitate,method,chaining,since,4,0,3;public,embedded,database,builder,set,separator,string,separator,this,database,populator,set,separator,separator,return,this
EmbeddedDatabaseBuilder -> public EmbeddedDatabaseBuilder setSeparator(String separator);1530174524;Specify the statement separator used in all SQL scripts, if a custom one._<p>Defaults to {@code "_"} if not specified and falls back to {@code "\n"}_as a last resort_ may be set to {@link ScriptUtils#EOF_STATEMENT_SEPARATOR}_to signal that each script contains a single statement without a separator._@param separator the statement separator_@return {@code this}, to facilitate method chaining_@since 4.0.3;public EmbeddedDatabaseBuilder setSeparator(String separator) {_		this.databasePopulator.setSeparator(separator)__		return this__	};specify,the,statement,separator,used,in,all,sql,scripts,if,a,custom,one,p,defaults,to,code,if,not,specified,and,falls,back,to,code,n,as,a,last,resort,may,be,set,to,link,script,utils,to,signal,that,each,script,contains,a,single,statement,without,a,separator,param,separator,the,statement,separator,return,code,this,to,facilitate,method,chaining,since,4,0,3;public,embedded,database,builder,set,separator,string,separator,this,database,populator,set,separator,separator,return,this
EmbeddedDatabaseBuilder -> public EmbeddedDatabaseBuilder addDefaultScripts();1328020251;Add default scripts to execute to populate the database._The default scripts are <code>schema.sql</code> to create the db schema and_<code>data.sql</code> to populate the db with data._@return this, to facilitate method chaining;public EmbeddedDatabaseBuilder addDefaultScripts() {_		addScript("schema.sql")__		addScript("data.sql")__		return this__	};add,default,scripts,to,execute,to,populate,the,database,the,default,scripts,are,code,schema,sql,code,to,create,the,db,schema,and,code,data,sql,code,to,populate,the,db,with,data,return,this,to,facilitate,method,chaining;public,embedded,database,builder,add,default,scripts,add,script,schema,sql,add,script,data,sql,return,this
EmbeddedDatabaseBuilder -> public EmbeddedDatabaseBuilder addDefaultScripts();1340131687;Add default scripts to execute to populate the database._<p>The default scripts are <code>schema.sql</code> to create the db_schema and <code>data.sql</code> to populate the db with data._@return this, to facilitate method chaining;public EmbeddedDatabaseBuilder addDefaultScripts() {_		addScript("schema.sql")__		addScript("data.sql")__		return this__	};add,default,scripts,to,execute,to,populate,the,database,p,the,default,scripts,are,code,schema,sql,code,to,create,the,db,schema,and,code,data,sql,code,to,populate,the,db,with,data,return,this,to,facilitate,method,chaining;public,embedded,database,builder,add,default,scripts,add,script,schema,sql,add,script,data,sql,return,this
EmbeddedDatabaseBuilder -> public EmbeddedDatabaseBuilder addDefaultScripts();1356735495;Add default scripts to execute to populate the database._<p>The default scripts are {@code schema.sql} to create the db_schema and {@code data.sql} to populate the db with data._@return this, to facilitate method chaining;public EmbeddedDatabaseBuilder addDefaultScripts() {_		addScript("schema.sql")__		addScript("data.sql")__		return this__	};add,default,scripts,to,execute,to,populate,the,database,p,the,default,scripts,are,code,schema,sql,to,create,the,db,schema,and,code,data,sql,to,populate,the,db,with,data,return,this,to,facilitate,method,chaining;public,embedded,database,builder,add,default,scripts,add,script,schema,sql,add,script,data,sql,return,this
EmbeddedDatabaseBuilder -> public EmbeddedDatabaseBuilder addDefaultScripts();1367955086;Add default scripts to execute to populate the database._<p>The default scripts are {@code schema.sql} to create the db_schema and {@code data.sql} to populate the db with data._@return this, to facilitate method chaining;public EmbeddedDatabaseBuilder addDefaultScripts() {_		addScript("schema.sql")__		addScript("data.sql")__		return this__	};add,default,scripts,to,execute,to,populate,the,database,p,the,default,scripts,are,code,schema,sql,to,create,the,db,schema,and,code,data,sql,to,populate,the,db,with,data,return,this,to,facilitate,method,chaining;public,embedded,database,builder,add,default,scripts,add,script,schema,sql,add,script,data,sql,return,this
EmbeddedDatabaseBuilder -> public EmbeddedDatabaseBuilder addDefaultScripts();1392160372;Add default scripts to execute to populate the database._<p>The default scripts are {@code schema.sql} to create the db_schema and {@code data.sql} to populate the db with data._@return this, to facilitate method chaining;public EmbeddedDatabaseBuilder addDefaultScripts() {_		addScript("schema.sql")__		addScript("data.sql")__		return this__	};add,default,scripts,to,execute,to,populate,the,database,p,the,default,scripts,are,code,schema,sql,to,create,the,db,schema,and,code,data,sql,to,populate,the,db,with,data,return,this,to,facilitate,method,chaining;public,embedded,database,builder,add,default,scripts,add,script,schema,sql,add,script,data,sql,return,this
EmbeddedDatabaseBuilder -> public EmbeddedDatabaseBuilder addDefaultScripts();1395143680;Add default scripts to execute to populate the database._<p>The default scripts are {@code "schema.sql"} to create the database_schema and {@code "data.sql"} to populate the database with data._@return {@code this}, to facilitate method chaining;public EmbeddedDatabaseBuilder addDefaultScripts() {_		addScript("schema.sql")__		addScript("data.sql")__		return this__	};add,default,scripts,to,execute,to,populate,the,database,p,the,default,scripts,are,code,schema,sql,to,create,the,database,schema,and,code,data,sql,to,populate,the,database,with,data,return,code,this,to,facilitate,method,chaining;public,embedded,database,builder,add,default,scripts,add,script,schema,sql,add,script,data,sql,return,this
EmbeddedDatabaseBuilder -> public EmbeddedDatabaseBuilder addDefaultScripts();1395183391;Add default SQL scripts to execute to populate the database._<p>The default scripts are {@code "schema.sql"} to create the database_schema and {@code "data.sql"} to populate the database with data._@return {@code this}, to facilitate method chaining;public EmbeddedDatabaseBuilder addDefaultScripts() {_		return addScripts("schema.sql", "data.sql")__	};add,default,sql,scripts,to,execute,to,populate,the,database,p,the,default,scripts,are,code,schema,sql,to,create,the,database,schema,and,code,data,sql,to,populate,the,database,with,data,return,code,this,to,facilitate,method,chaining;public,embedded,database,builder,add,default,scripts,return,add,scripts,schema,sql,data,sql
EmbeddedDatabaseBuilder -> public EmbeddedDatabaseBuilder addDefaultScripts();1396188524;Add default SQL scripts to execute to populate the database._<p>The default scripts are {@code "schema.sql"} to create the database_schema and {@code "data.sql"} to populate the database with data._@return {@code this}, to facilitate method chaining;public EmbeddedDatabaseBuilder addDefaultScripts() {_		return addScripts("schema.sql", "data.sql")__	};add,default,sql,scripts,to,execute,to,populate,the,database,p,the,default,scripts,are,code,schema,sql,to,create,the,database,schema,and,code,data,sql,to,populate,the,database,with,data,return,code,this,to,facilitate,method,chaining;public,embedded,database,builder,add,default,scripts,return,add,scripts,schema,sql,data,sql
EmbeddedDatabaseBuilder -> public EmbeddedDatabaseBuilder addDefaultScripts();1397231067;Add default SQL scripts to execute to populate the database._<p>The default scripts are {@code "schema.sql"} to create the database_schema and {@code "data.sql"} to populate the database with data._@return {@code this}, to facilitate method chaining;public EmbeddedDatabaseBuilder addDefaultScripts() {_		return addScripts("schema.sql", "data.sql")__	};add,default,sql,scripts,to,execute,to,populate,the,database,p,the,default,scripts,are,code,schema,sql,to,create,the,database,schema,and,code,data,sql,to,populate,the,database,with,data,return,code,this,to,facilitate,method,chaining;public,embedded,database,builder,add,default,scripts,return,add,scripts,schema,sql,data,sql
EmbeddedDatabaseBuilder -> public EmbeddedDatabaseBuilder addDefaultScripts();1426893719;Add default SQL scripts to execute to populate the database._<p>The default scripts are {@code "schema.sql"} to create the database_schema and {@code "data.sql"} to populate the database with data._@return {@code this}, to facilitate method chaining;public EmbeddedDatabaseBuilder addDefaultScripts() {_		return addScripts("schema.sql", "data.sql")__	};add,default,sql,scripts,to,execute,to,populate,the,database,p,the,default,scripts,are,code,schema,sql,to,create,the,database,schema,and,code,data,sql,to,populate,the,database,with,data,return,code,this,to,facilitate,method,chaining;public,embedded,database,builder,add,default,scripts,return,add,scripts,schema,sql,data,sql
EmbeddedDatabaseBuilder -> public EmbeddedDatabaseBuilder addDefaultScripts();1440689273;Add default SQL scripts to execute to populate the database._<p>The default scripts are {@code "schema.sql"} to create the database_schema and {@code "data.sql"} to populate the database with data._@return {@code this}, to facilitate method chaining;public EmbeddedDatabaseBuilder addDefaultScripts() {_		return addScripts("schema.sql", "data.sql")__	};add,default,sql,scripts,to,execute,to,populate,the,database,p,the,default,scripts,are,code,schema,sql,to,create,the,database,schema,and,code,data,sql,to,populate,the,database,with,data,return,code,this,to,facilitate,method,chaining;public,embedded,database,builder,add,default,scripts,return,add,scripts,schema,sql,data,sql
EmbeddedDatabaseBuilder -> public EmbeddedDatabaseBuilder addDefaultScripts();1530174524;Add default SQL scripts to execute to populate the database._<p>The default scripts are {@code "schema.sql"} to create the database_schema and {@code "data.sql"} to populate the database with data._@return {@code this}, to facilitate method chaining;public EmbeddedDatabaseBuilder addDefaultScripts() {_		return addScripts("schema.sql", "data.sql")__	};add,default,sql,scripts,to,execute,to,populate,the,database,p,the,default,scripts,are,code,schema,sql,to,create,the,database,schema,and,code,data,sql,to,populate,the,database,with,data,return,code,this,to,facilitate,method,chaining;public,embedded,database,builder,add,default,scripts,return,add,scripts,schema,sql,data,sql
EmbeddedDatabaseBuilder -> public EmbeddedDatabaseBuilder setCommentPrefix(String commentPrefix);1395183391;Specify the single-line comment prefix used in all SQL scripts._<p>Default is "--"._@param commentPrefix the prefix for single-line comments_@return {@code this}, to facilitate method chaining_@since 4.0.3;public EmbeddedDatabaseBuilder setCommentPrefix(String commentPrefix) {_		this.databasePopulator.setCommentPrefix(commentPrefix)__		return this__	};specify,the,single,line,comment,prefix,used,in,all,sql,scripts,p,default,is,param,comment,prefix,the,prefix,for,single,line,comments,return,code,this,to,facilitate,method,chaining,since,4,0,3;public,embedded,database,builder,set,comment,prefix,string,comment,prefix,this,database,populator,set,comment,prefix,comment,prefix,return,this
EmbeddedDatabaseBuilder -> public EmbeddedDatabaseBuilder setCommentPrefix(String commentPrefix);1396188524;Specify the single-line comment prefix used in all SQL scripts._<p>Default is "--"._@param commentPrefix the prefix for single-line comments_@return {@code this}, to facilitate method chaining_@since 4.0.3;public EmbeddedDatabaseBuilder setCommentPrefix(String commentPrefix) {_		this.databasePopulator.setCommentPrefix(commentPrefix)__		return this__	};specify,the,single,line,comment,prefix,used,in,all,sql,scripts,p,default,is,param,comment,prefix,the,prefix,for,single,line,comments,return,code,this,to,facilitate,method,chaining,since,4,0,3;public,embedded,database,builder,set,comment,prefix,string,comment,prefix,this,database,populator,set,comment,prefix,comment,prefix,return,this
EmbeddedDatabaseBuilder -> public EmbeddedDatabaseBuilder setCommentPrefix(String commentPrefix);1397231067;Specify the single-line comment prefix used in all SQL scripts._<p>Defaults to {@code "--"}._@param commentPrefix the prefix for single-line comments_@return {@code this}, to facilitate method chaining_@since 4.0.3;public EmbeddedDatabaseBuilder setCommentPrefix(String commentPrefix) {_		this.databasePopulator.setCommentPrefix(commentPrefix)__		return this__	};specify,the,single,line,comment,prefix,used,in,all,sql,scripts,p,defaults,to,code,param,comment,prefix,the,prefix,for,single,line,comments,return,code,this,to,facilitate,method,chaining,since,4,0,3;public,embedded,database,builder,set,comment,prefix,string,comment,prefix,this,database,populator,set,comment,prefix,comment,prefix,return,this
EmbeddedDatabaseBuilder -> public EmbeddedDatabaseBuilder setCommentPrefix(String commentPrefix);1426893719;Specify the single-line comment prefix used in all SQL scripts._<p>Defaults to {@code "--"}._@param commentPrefix the prefix for single-line comments_@return {@code this}, to facilitate method chaining_@since 4.0.3;public EmbeddedDatabaseBuilder setCommentPrefix(String commentPrefix) {_		this.databasePopulator.setCommentPrefix(commentPrefix)__		return this__	};specify,the,single,line,comment,prefix,used,in,all,sql,scripts,p,defaults,to,code,param,comment,prefix,the,prefix,for,single,line,comments,return,code,this,to,facilitate,method,chaining,since,4,0,3;public,embedded,database,builder,set,comment,prefix,string,comment,prefix,this,database,populator,set,comment,prefix,comment,prefix,return,this
EmbeddedDatabaseBuilder -> public EmbeddedDatabaseBuilder setCommentPrefix(String commentPrefix);1440689273;Specify the single-line comment prefix used in all SQL scripts._<p>Defaults to {@code "--"}._@param commentPrefix the prefix for single-line comments_@return {@code this}, to facilitate method chaining_@since 4.0.3;public EmbeddedDatabaseBuilder setCommentPrefix(String commentPrefix) {_		this.databasePopulator.setCommentPrefix(commentPrefix)__		return this__	};specify,the,single,line,comment,prefix,used,in,all,sql,scripts,p,defaults,to,code,param,comment,prefix,the,prefix,for,single,line,comments,return,code,this,to,facilitate,method,chaining,since,4,0,3;public,embedded,database,builder,set,comment,prefix,string,comment,prefix,this,database,populator,set,comment,prefix,comment,prefix,return,this
EmbeddedDatabaseBuilder -> public EmbeddedDatabaseBuilder setCommentPrefix(String commentPrefix);1530174524;Specify the single-line comment prefix used in all SQL scripts._<p>Defaults to {@code "--"}._@param commentPrefix the prefix for single-line comments_@return {@code this}, to facilitate method chaining_@since 4.0.3;public EmbeddedDatabaseBuilder setCommentPrefix(String commentPrefix) {_		this.databasePopulator.setCommentPrefix(commentPrefix)__		return this__	};specify,the,single,line,comment,prefix,used,in,all,sql,scripts,p,defaults,to,code,param,comment,prefix,the,prefix,for,single,line,comments,return,code,this,to,facilitate,method,chaining,since,4,0,3;public,embedded,database,builder,set,comment,prefix,string,comment,prefix,this,database,populator,set,comment,prefix,comment,prefix,return,this
EmbeddedDatabaseBuilder -> public EmbeddedDatabaseBuilder continueOnError(boolean flag);1395183391;Specify that all failures which occur while executing SQL scripts should_be logged but should not cause a failure._<p>Defaults to {@code false}._@param flag {@code true} if script execution should continue on error_@return {@code this}, to facilitate method chaining_@since 4.0.3;public EmbeddedDatabaseBuilder continueOnError(boolean flag) {_		this.databasePopulator.setContinueOnError(flag)__		return this__	};specify,that,all,failures,which,occur,while,executing,sql,scripts,should,be,logged,but,should,not,cause,a,failure,p,defaults,to,code,false,param,flag,code,true,if,script,execution,should,continue,on,error,return,code,this,to,facilitate,method,chaining,since,4,0,3;public,embedded,database,builder,continue,on,error,boolean,flag,this,database,populator,set,continue,on,error,flag,return,this
EmbeddedDatabaseBuilder -> public EmbeddedDatabaseBuilder continueOnError(boolean flag);1396188524;Specify that all failures which occur while executing SQL scripts should_be logged but should not cause a failure._<p>Defaults to {@code false}._@param flag {@code true} if script execution should continue on error_@return {@code this}, to facilitate method chaining_@since 4.0.3;public EmbeddedDatabaseBuilder continueOnError(boolean flag) {_		this.databasePopulator.setContinueOnError(flag)__		return this__	};specify,that,all,failures,which,occur,while,executing,sql,scripts,should,be,logged,but,should,not,cause,a,failure,p,defaults,to,code,false,param,flag,code,true,if,script,execution,should,continue,on,error,return,code,this,to,facilitate,method,chaining,since,4,0,3;public,embedded,database,builder,continue,on,error,boolean,flag,this,database,populator,set,continue,on,error,flag,return,this
EmbeddedDatabaseBuilder -> public EmbeddedDatabaseBuilder continueOnError(boolean flag);1397231067;Specify that all failures which occur while executing SQL scripts should_be logged but should not cause a failure._<p>Defaults to {@code false}._@param flag {@code true} if script execution should continue on error_@return {@code this}, to facilitate method chaining_@since 4.0.3;public EmbeddedDatabaseBuilder continueOnError(boolean flag) {_		this.databasePopulator.setContinueOnError(flag)__		return this__	};specify,that,all,failures,which,occur,while,executing,sql,scripts,should,be,logged,but,should,not,cause,a,failure,p,defaults,to,code,false,param,flag,code,true,if,script,execution,should,continue,on,error,return,code,this,to,facilitate,method,chaining,since,4,0,3;public,embedded,database,builder,continue,on,error,boolean,flag,this,database,populator,set,continue,on,error,flag,return,this
EmbeddedDatabaseBuilder -> public EmbeddedDatabaseBuilder continueOnError(boolean flag);1426893719;Specify that all failures which occur while executing SQL scripts should_be logged but should not cause a failure._<p>Defaults to {@code false}._@param flag {@code true} if script execution should continue on error_@return {@code this}, to facilitate method chaining_@since 4.0.3;public EmbeddedDatabaseBuilder continueOnError(boolean flag) {_		this.databasePopulator.setContinueOnError(flag)__		return this__	};specify,that,all,failures,which,occur,while,executing,sql,scripts,should,be,logged,but,should,not,cause,a,failure,p,defaults,to,code,false,param,flag,code,true,if,script,execution,should,continue,on,error,return,code,this,to,facilitate,method,chaining,since,4,0,3;public,embedded,database,builder,continue,on,error,boolean,flag,this,database,populator,set,continue,on,error,flag,return,this
EmbeddedDatabaseBuilder -> public EmbeddedDatabaseBuilder continueOnError(boolean flag);1440689273;Specify that all failures which occur while executing SQL scripts should_be logged but should not cause a failure._<p>Defaults to {@code false}._@param flag {@code true} if script execution should continue on error_@return {@code this}, to facilitate method chaining_@since 4.0.3;public EmbeddedDatabaseBuilder continueOnError(boolean flag) {_		this.databasePopulator.setContinueOnError(flag)__		return this__	};specify,that,all,failures,which,occur,while,executing,sql,scripts,should,be,logged,but,should,not,cause,a,failure,p,defaults,to,code,false,param,flag,code,true,if,script,execution,should,continue,on,error,return,code,this,to,facilitate,method,chaining,since,4,0,3;public,embedded,database,builder,continue,on,error,boolean,flag,this,database,populator,set,continue,on,error,flag,return,this
EmbeddedDatabaseBuilder -> public EmbeddedDatabaseBuilder continueOnError(boolean flag);1530174524;Specify that all failures which occur while executing SQL scripts should_be logged but should not cause a failure._<p>Defaults to {@code false}._@param flag {@code true} if script execution should continue on error_@return {@code this}, to facilitate method chaining_@since 4.0.3;public EmbeddedDatabaseBuilder continueOnError(boolean flag) {_		this.databasePopulator.setContinueOnError(flag)__		return this__	};specify,that,all,failures,which,occur,while,executing,sql,scripts,should,be,logged,but,should,not,cause,a,failure,p,defaults,to,code,false,param,flag,code,true,if,script,execution,should,continue,on,error,return,code,this,to,facilitate,method,chaining,since,4,0,3;public,embedded,database,builder,continue,on,error,boolean,flag,this,database,populator,set,continue,on,error,flag,return,this
EmbeddedDatabaseBuilder -> public EmbeddedDatabaseBuilder addScripts(String... scripts);1395183391;Add multiple SQL scripts to execute to initialize or populate the database._@param scripts the scripts to execute_@return {@code this}, to facilitate method chaining_@since 4.0.3;public EmbeddedDatabaseBuilder addScripts(String... scripts) {_		for (String script : scripts) {_			addScript(script)__		}_		return this__	};add,multiple,sql,scripts,to,execute,to,initialize,or,populate,the,database,param,scripts,the,scripts,to,execute,return,code,this,to,facilitate,method,chaining,since,4,0,3;public,embedded,database,builder,add,scripts,string,scripts,for,string,script,scripts,add,script,script,return,this
EmbeddedDatabaseBuilder -> public EmbeddedDatabaseBuilder addScripts(String... scripts);1396188524;Add multiple SQL scripts to execute to initialize or populate the database._@param scripts the scripts to execute_@return {@code this}, to facilitate method chaining_@since 4.0.3;public EmbeddedDatabaseBuilder addScripts(String... scripts) {_		for (String script : scripts) {_			addScript(script)__		}_		return this__	};add,multiple,sql,scripts,to,execute,to,initialize,or,populate,the,database,param,scripts,the,scripts,to,execute,return,code,this,to,facilitate,method,chaining,since,4,0,3;public,embedded,database,builder,add,scripts,string,scripts,for,string,script,scripts,add,script,script,return,this
EmbeddedDatabaseBuilder -> public EmbeddedDatabaseBuilder addScripts(String... scripts);1397231067;Add multiple SQL scripts to execute to initialize or populate the database._@param scripts the scripts to execute_@return {@code this}, to facilitate method chaining_@since 4.0.3;public EmbeddedDatabaseBuilder addScripts(String... scripts) {_		for (String script : scripts) {_			addScript(script)__		}_		return this__	};add,multiple,sql,scripts,to,execute,to,initialize,or,populate,the,database,param,scripts,the,scripts,to,execute,return,code,this,to,facilitate,method,chaining,since,4,0,3;public,embedded,database,builder,add,scripts,string,scripts,for,string,script,scripts,add,script,script,return,this
EmbeddedDatabaseBuilder -> public EmbeddedDatabaseBuilder addScripts(String... scripts);1426893719;Add multiple SQL scripts to execute to initialize or populate the database._@param scripts the scripts to execute_@return {@code this}, to facilitate method chaining_@since 4.0.3;public EmbeddedDatabaseBuilder addScripts(String... scripts) {_		for (String script : scripts) {_			addScript(script)__		}_		return this__	};add,multiple,sql,scripts,to,execute,to,initialize,or,populate,the,database,param,scripts,the,scripts,to,execute,return,code,this,to,facilitate,method,chaining,since,4,0,3;public,embedded,database,builder,add,scripts,string,scripts,for,string,script,scripts,add,script,script,return,this
EmbeddedDatabaseBuilder -> public EmbeddedDatabaseBuilder addScripts(String... scripts);1440689273;Add multiple SQL scripts to execute to initialize or populate the database._@param scripts the scripts to execute_@return {@code this}, to facilitate method chaining_@since 4.0.3;public EmbeddedDatabaseBuilder addScripts(String... scripts) {_		for (String script : scripts) {_			addScript(script)__		}_		return this__	};add,multiple,sql,scripts,to,execute,to,initialize,or,populate,the,database,param,scripts,the,scripts,to,execute,return,code,this,to,facilitate,method,chaining,since,4,0,3;public,embedded,database,builder,add,scripts,string,scripts,for,string,script,scripts,add,script,script,return,this
EmbeddedDatabaseBuilder -> public EmbeddedDatabaseBuilder addScripts(String... scripts);1530174524;Add multiple SQL scripts to execute to initialize or populate the database._@param scripts the scripts to execute_@return {@code this}, to facilitate method chaining_@since 4.0.3;public EmbeddedDatabaseBuilder addScripts(String... scripts) {_		for (String script : scripts) {_			addScript(script)__		}_		return this__	};add,multiple,sql,scripts,to,execute,to,initialize,or,populate,the,database,param,scripts,the,scripts,to,execute,return,code,this,to,facilitate,method,chaining,since,4,0,3;public,embedded,database,builder,add,scripts,string,scripts,for,string,script,scripts,add,script,script,return,this
EmbeddedDatabaseBuilder -> public EmbeddedDatabase build();1328020251;Build the embedded database._@return the embedded database;public EmbeddedDatabase build() {_		return this.databaseFactory.getDatabase()__	};build,the,embedded,database,return,the,embedded,database;public,embedded,database,build,return,this,database,factory,get,database
EmbeddedDatabaseBuilder -> public EmbeddedDatabase build();1340131687;Build the embedded database._@return the embedded database;public EmbeddedDatabase build() {_		return this.databaseFactory.getDatabase()__	};build,the,embedded,database,return,the,embedded,database;public,embedded,database,build,return,this,database,factory,get,database
EmbeddedDatabaseBuilder -> public EmbeddedDatabase build();1356735495;Build the embedded database._@return the embedded database;public EmbeddedDatabase build() {_		return this.databaseFactory.getDatabase()__	};build,the,embedded,database,return,the,embedded,database;public,embedded,database,build,return,this,database,factory,get,database
EmbeddedDatabaseBuilder -> public EmbeddedDatabase build();1367955086;Build the embedded database._@return the embedded database;public EmbeddedDatabase build() {_		return this.databaseFactory.getDatabase()__	};build,the,embedded,database,return,the,embedded,database;public,embedded,database,build,return,this,database,factory,get,database
EmbeddedDatabaseBuilder -> public EmbeddedDatabase build();1392160372;Build the embedded database._@return the embedded database;public EmbeddedDatabase build() {_		return this.databaseFactory.getDatabase()__	};build,the,embedded,database,return,the,embedded,database;public,embedded,database,build,return,this,database,factory,get,database
EmbeddedDatabaseBuilder -> public EmbeddedDatabase build();1395143680;Build the embedded database._@return the embedded database;public EmbeddedDatabase build() {_		return this.databaseFactory.getDatabase()__	};build,the,embedded,database,return,the,embedded,database;public,embedded,database,build,return,this,database,factory,get,database
EmbeddedDatabaseBuilder -> public EmbeddedDatabase build();1395183391;Build the embedded database._@return the embedded database;public EmbeddedDatabase build() {_		return this.databaseFactory.getDatabase()__	};build,the,embedded,database,return,the,embedded,database;public,embedded,database,build,return,this,database,factory,get,database
EmbeddedDatabaseBuilder -> public EmbeddedDatabase build();1396188524;Build the embedded database._@return the embedded database;public EmbeddedDatabase build() {_		return this.databaseFactory.getDatabase()__	};build,the,embedded,database,return,the,embedded,database;public,embedded,database,build,return,this,database,factory,get,database
EmbeddedDatabaseBuilder -> public EmbeddedDatabase build();1397231067;Build the embedded database._@return the embedded database;public EmbeddedDatabase build() {_		return this.databaseFactory.getDatabase()__	};build,the,embedded,database,return,the,embedded,database;public,embedded,database,build,return,this,database,factory,get,database
EmbeddedDatabaseBuilder -> public EmbeddedDatabase build();1426893719;Build the embedded database._@return the embedded database;public EmbeddedDatabase build() {_		return this.databaseFactory.getDatabase()__	};build,the,embedded,database,return,the,embedded,database;public,embedded,database,build,return,this,database,factory,get,database
EmbeddedDatabaseBuilder -> public EmbeddedDatabase build();1440689273;Build the embedded database._@return the embedded database;public EmbeddedDatabase build() {_		return this.databaseFactory.getDatabase()__	};build,the,embedded,database,return,the,embedded,database;public,embedded,database,build,return,this,database,factory,get,database
EmbeddedDatabaseBuilder -> public EmbeddedDatabase build();1530174524;Build the embedded database._@return the embedded database;public EmbeddedDatabase build() {_		return this.databaseFactory.getDatabase()__	};build,the,embedded,database,return,the,embedded,database;public,embedded,database,build,return,this,database,factory,get,database
EmbeddedDatabaseBuilder -> public EmbeddedDatabaseBuilder ignoreFailedDrops(boolean flag);1395183391;Specify that a failed SQL {@code DROP} statement within an executed_script can be ignored._<p>This is useful for a database whose SQL dialect does not support an_{@code IF EXISTS} clause in a {@code DROP} statement._<p>The default is {@code false} so that {@link #build building} will fail_fast if a script starts with a {@code DROP} statement._@param flag {@code true} if failed drop statements should be ignored_@return {@code this}, to facilitate method chaining_@since 4.0.3;public EmbeddedDatabaseBuilder ignoreFailedDrops(boolean flag) {_		this.databasePopulator.setIgnoreFailedDrops(flag)__		return this__	};specify,that,a,failed,sql,code,drop,statement,within,an,executed,script,can,be,ignored,p,this,is,useful,for,a,database,whose,sql,dialect,does,not,support,an,code,if,exists,clause,in,a,code,drop,statement,p,the,default,is,code,false,so,that,link,build,building,will,fail,fast,if,a,script,starts,with,a,code,drop,statement,param,flag,code,true,if,failed,drop,statements,should,be,ignored,return,code,this,to,facilitate,method,chaining,since,4,0,3;public,embedded,database,builder,ignore,failed,drops,boolean,flag,this,database,populator,set,ignore,failed,drops,flag,return,this
EmbeddedDatabaseBuilder -> public EmbeddedDatabaseBuilder ignoreFailedDrops(boolean flag);1396188524;Specify that a failed SQL {@code DROP} statement within an executed_script can be ignored._<p>This is useful for a database whose SQL dialect does not support an_{@code IF EXISTS} clause in a {@code DROP} statement._<p>The default is {@code false} so that {@link #build building} will fail_fast if a script starts with a {@code DROP} statement._@param flag {@code true} if failed drop statements should be ignored_@return {@code this}, to facilitate method chaining_@since 4.0.3;public EmbeddedDatabaseBuilder ignoreFailedDrops(boolean flag) {_		this.databasePopulator.setIgnoreFailedDrops(flag)__		return this__	};specify,that,a,failed,sql,code,drop,statement,within,an,executed,script,can,be,ignored,p,this,is,useful,for,a,database,whose,sql,dialect,does,not,support,an,code,if,exists,clause,in,a,code,drop,statement,p,the,default,is,code,false,so,that,link,build,building,will,fail,fast,if,a,script,starts,with,a,code,drop,statement,param,flag,code,true,if,failed,drop,statements,should,be,ignored,return,code,this,to,facilitate,method,chaining,since,4,0,3;public,embedded,database,builder,ignore,failed,drops,boolean,flag,this,database,populator,set,ignore,failed,drops,flag,return,this
EmbeddedDatabaseBuilder -> public EmbeddedDatabaseBuilder ignoreFailedDrops(boolean flag);1397231067;Specify that a failed SQL {@code DROP} statement within an executed_script can be ignored._<p>This is useful for a database whose SQL dialect does not support an_{@code IF EXISTS} clause in a {@code DROP} statement._<p>The default is {@code false} so that {@link #build building} will fail_fast if a script starts with a {@code DROP} statement._@param flag {@code true} if failed drop statements should be ignored_@return {@code this}, to facilitate method chaining_@since 4.0.3;public EmbeddedDatabaseBuilder ignoreFailedDrops(boolean flag) {_		this.databasePopulator.setIgnoreFailedDrops(flag)__		return this__	};specify,that,a,failed,sql,code,drop,statement,within,an,executed,script,can,be,ignored,p,this,is,useful,for,a,database,whose,sql,dialect,does,not,support,an,code,if,exists,clause,in,a,code,drop,statement,p,the,default,is,code,false,so,that,link,build,building,will,fail,fast,if,a,script,starts,with,a,code,drop,statement,param,flag,code,true,if,failed,drop,statements,should,be,ignored,return,code,this,to,facilitate,method,chaining,since,4,0,3;public,embedded,database,builder,ignore,failed,drops,boolean,flag,this,database,populator,set,ignore,failed,drops,flag,return,this
EmbeddedDatabaseBuilder -> public EmbeddedDatabaseBuilder ignoreFailedDrops(boolean flag);1426893719;Specify that a failed SQL {@code DROP} statement within an executed_script can be ignored._<p>This is useful for a database whose SQL dialect does not support an_{@code IF EXISTS} clause in a {@code DROP} statement._<p>The default is {@code false} so that {@link #build building} will fail_fast if a script starts with a {@code DROP} statement._@param flag {@code true} if failed drop statements should be ignored_@return {@code this}, to facilitate method chaining_@since 4.0.3;public EmbeddedDatabaseBuilder ignoreFailedDrops(boolean flag) {_		this.databasePopulator.setIgnoreFailedDrops(flag)__		return this__	};specify,that,a,failed,sql,code,drop,statement,within,an,executed,script,can,be,ignored,p,this,is,useful,for,a,database,whose,sql,dialect,does,not,support,an,code,if,exists,clause,in,a,code,drop,statement,p,the,default,is,code,false,so,that,link,build,building,will,fail,fast,if,a,script,starts,with,a,code,drop,statement,param,flag,code,true,if,failed,drop,statements,should,be,ignored,return,code,this,to,facilitate,method,chaining,since,4,0,3;public,embedded,database,builder,ignore,failed,drops,boolean,flag,this,database,populator,set,ignore,failed,drops,flag,return,this
EmbeddedDatabaseBuilder -> public EmbeddedDatabaseBuilder ignoreFailedDrops(boolean flag);1440689273;Specify that a failed SQL {@code DROP} statement within an executed_script can be ignored._<p>This is useful for a database whose SQL dialect does not support an_{@code IF EXISTS} clause in a {@code DROP} statement._<p>The default is {@code false} so that {@link #build building} will fail_fast if a script starts with a {@code DROP} statement._@param flag {@code true} if failed drop statements should be ignored_@return {@code this}, to facilitate method chaining_@since 4.0.3;public EmbeddedDatabaseBuilder ignoreFailedDrops(boolean flag) {_		this.databasePopulator.setIgnoreFailedDrops(flag)__		return this__	};specify,that,a,failed,sql,code,drop,statement,within,an,executed,script,can,be,ignored,p,this,is,useful,for,a,database,whose,sql,dialect,does,not,support,an,code,if,exists,clause,in,a,code,drop,statement,p,the,default,is,code,false,so,that,link,build,building,will,fail,fast,if,a,script,starts,with,a,code,drop,statement,param,flag,code,true,if,failed,drop,statements,should,be,ignored,return,code,this,to,facilitate,method,chaining,since,4,0,3;public,embedded,database,builder,ignore,failed,drops,boolean,flag,this,database,populator,set,ignore,failed,drops,flag,return,this
EmbeddedDatabaseBuilder -> public EmbeddedDatabaseBuilder ignoreFailedDrops(boolean flag);1530174524;Specify that a failed SQL {@code DROP} statement within an executed_script can be ignored._<p>This is useful for a database whose SQL dialect does not support an_{@code IF EXISTS} clause in a {@code DROP} statement._<p>The default is {@code false} so that {@link #build building} will fail_fast if a script starts with a {@code DROP} statement._@param flag {@code true} if failed drop statements should be ignored_@return {@code this}, to facilitate method chaining_@since 4.0.3;public EmbeddedDatabaseBuilder ignoreFailedDrops(boolean flag) {_		this.databasePopulator.setIgnoreFailedDrops(flag)__		return this__	};specify,that,a,failed,sql,code,drop,statement,within,an,executed,script,can,be,ignored,p,this,is,useful,for,a,database,whose,sql,dialect,does,not,support,an,code,if,exists,clause,in,a,code,drop,statement,p,the,default,is,code,false,so,that,link,build,building,will,fail,fast,if,a,script,starts,with,a,code,drop,statement,param,flag,code,true,if,failed,drop,statements,should,be,ignored,return,code,this,to,facilitate,method,chaining,since,4,0,3;public,embedded,database,builder,ignore,failed,drops,boolean,flag,this,database,populator,set,ignore,failed,drops,flag,return,this
