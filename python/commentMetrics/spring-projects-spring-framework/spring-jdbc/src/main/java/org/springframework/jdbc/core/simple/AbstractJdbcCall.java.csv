# id;timestamp;commentText;codeText;commentWords;codeWords
AbstractJdbcCall -> public String getCatalogName();1328020251;Get the catalog name used.;public String getCatalogName() {_		return this.callMetaDataContext.getCatalogName()__	};get,the,catalog,name,used;public,string,get,catalog,name,return,this,call,meta,data,context,get,catalog,name
AbstractJdbcCall -> public String getCatalogName();1356735495;Get the catalog name used.;public String getCatalogName() {_		return this.callMetaDataContext.getCatalogName()__	};get,the,catalog,name,used;public,string,get,catalog,name,return,this,call,meta,data,context,get,catalog,name
AbstractJdbcCall -> public String getCatalogName();1362408075;Get the catalog name used.;public String getCatalogName() {_		return this.callMetaDataContext.getCatalogName()__	};get,the,catalog,name,used;public,string,get,catalog,name,return,this,call,meta,data,context,get,catalog,name
AbstractJdbcCall -> public String getCatalogName();1367508310;Get the catalog name used.;public String getCatalogName() {_		return this.callMetaDataContext.getCatalogName()__	};get,the,catalog,name,used;public,string,get,catalog,name,return,this,call,meta,data,context,get,catalog,name
AbstractJdbcCall -> public String getCatalogName();1385412762;Get the catalog name used.;public String getCatalogName() {_		return this.callMetaDataContext.getCatalogName()__	};get,the,catalog,name,used;public,string,get,catalog,name,return,this,call,meta,data,context,get,catalog,name
AbstractJdbcCall -> public String getCatalogName();1407789123;Get the catalog name used.;public String getCatalogName() {_		return this.callMetaDataContext.getCatalogName()__	};get,the,catalog,name,used;public,string,get,catalog,name,return,this,call,meta,data,context,get,catalog,name
AbstractJdbcCall -> public String getCatalogName();1416833949;Get the catalog name used.;public String getCatalogName() {_		return this.callMetaDataContext.getCatalogName()__	};get,the,catalog,name,used;public,string,get,catalog,name,return,this,call,meta,data,context,get,catalog,name
AbstractJdbcCall -> public String getCatalogName();1431676443;Get the catalog name used.;public String getCatalogName() {_		return this.callMetaDataContext.getCatalogName()__	};get,the,catalog,name,used;public,string,get,catalog,name,return,this,call,meta,data,context,get,catalog,name
AbstractJdbcCall -> public String getCatalogName();1446038912;Get the catalog name used.;public String getCatalogName() {_		return this.callMetaDataContext.getCatalogName()__	};get,the,catalog,name,used;public,string,get,catalog,name,return,this,call,meta,data,context,get,catalog,name
AbstractJdbcCall -> public String getCatalogName();1446470853;Get the catalog name used.;public String getCatalogName() {_		return this.callMetaDataContext.getCatalogName()__	};get,the,catalog,name,used;public,string,get,catalog,name,return,this,call,meta,data,context,get,catalog,name
AbstractJdbcCall -> public String getCatalogName();1467730834;Get the catalog name used.;public String getCatalogName() {_		return this.callMetaDataContext.getCatalogName()__	};get,the,catalog,name,used;public,string,get,catalog,name,return,this,call,meta,data,context,get,catalog,name
AbstractJdbcCall -> public String getCatalogName();1487178248;Get the catalog name used.;public String getCatalogName() {_		return this.callMetaDataContext.getCatalogName()__	};get,the,catalog,name,used;public,string,get,catalog,name,return,this,call,meta,data,context,get,catalog,name
AbstractJdbcCall -> protected Map<String, Object> doExecute(Object[] args);1328020251;Method that provides execution of the call using the passed in array of parameters_@param args array of parameter values_ order must match the order declared for the stored procedure_@return Map of out parameters;protected Map<String, Object> doExecute(Object[] args) {_		checkCompiled()__		Map<String, ?> params = matchInParameterValuesWithCallParameters(args)__		return executeCallInternal(params)__	};method,that,provides,execution,of,the,call,using,the,passed,in,array,of,parameters,param,args,array,of,parameter,values,order,must,match,the,order,declared,for,the,stored,procedure,return,map,of,out,parameters;protected,map,string,object,do,execute,object,args,check,compiled,map,string,params,match,in,parameter,values,with,call,parameters,args,return,execute,call,internal,params
AbstractJdbcCall -> protected Map<String, Object> doExecute(Object[] args);1356735495;Method that provides execution of the call using the passed in array of parameters_@param args array of parameter values_ order must match the order declared for the stored procedure_@return Map of out parameters;protected Map<String, Object> doExecute(Object[] args) {_		checkCompiled()__		Map<String, ?> params = matchInParameterValuesWithCallParameters(args)__		return executeCallInternal(params)__	};method,that,provides,execution,of,the,call,using,the,passed,in,array,of,parameters,param,args,array,of,parameter,values,order,must,match,the,order,declared,for,the,stored,procedure,return,map,of,out,parameters;protected,map,string,object,do,execute,object,args,check,compiled,map,string,params,match,in,parameter,values,with,call,parameters,args,return,execute,call,internal,params
AbstractJdbcCall -> protected Map<String, Object> doExecute(Object[] args);1362408075;Method that provides execution of the call using the passed in array of parameters_@param args array of parameter values_ order must match the order declared for the stored procedure_@return Map of out parameters;protected Map<String, Object> doExecute(Object[] args) {_		checkCompiled()__		Map<String, ?> params = matchInParameterValuesWithCallParameters(args)__		return executeCallInternal(params)__	};method,that,provides,execution,of,the,call,using,the,passed,in,array,of,parameters,param,args,array,of,parameter,values,order,must,match,the,order,declared,for,the,stored,procedure,return,map,of,out,parameters;protected,map,string,object,do,execute,object,args,check,compiled,map,string,params,match,in,parameter,values,with,call,parameters,args,return,execute,call,internal,params
AbstractJdbcCall -> protected Map<String, Object> doExecute(Object[] args);1367508310;Method that provides execution of the call using the passed in array of parameters_@param args array of parameter values_ order must match the order declared for the stored procedure_@return Map of out parameters;protected Map<String, Object> doExecute(Object[] args) {_		checkCompiled()__		Map<String, ?> params = matchInParameterValuesWithCallParameters(args)__		return executeCallInternal(params)__	};method,that,provides,execution,of,the,call,using,the,passed,in,array,of,parameters,param,args,array,of,parameter,values,order,must,match,the,order,declared,for,the,stored,procedure,return,map,of,out,parameters;protected,map,string,object,do,execute,object,args,check,compiled,map,string,params,match,in,parameter,values,with,call,parameters,args,return,execute,call,internal,params
AbstractJdbcCall -> protected Map<String, Object> doExecute(Object[] args);1385412762;Method that provides execution of the call using the passed in array of parameters_@param args array of parameter values_ order must match the order declared for the stored procedure_@return Map of out parameters;protected Map<String, Object> doExecute(Object[] args) {_		checkCompiled()__		Map<String, ?> params = matchInParameterValuesWithCallParameters(args)__		return executeCallInternal(params)__	};method,that,provides,execution,of,the,call,using,the,passed,in,array,of,parameters,param,args,array,of,parameter,values,order,must,match,the,order,declared,for,the,stored,procedure,return,map,of,out,parameters;protected,map,string,object,do,execute,object,args,check,compiled,map,string,params,match,in,parameter,values,with,call,parameters,args,return,execute,call,internal,params
AbstractJdbcCall -> protected Map<String, Object> doExecute(Object[] args);1407789123;Method that provides execution of the call using the passed in array of parameters_@param args array of parameter values_ order must match the order declared for the stored procedure_@return Map of out parameters;protected Map<String, Object> doExecute(Object[] args) {_		checkCompiled()__		Map<String, ?> params = matchInParameterValuesWithCallParameters(args)__		return executeCallInternal(params)__	};method,that,provides,execution,of,the,call,using,the,passed,in,array,of,parameters,param,args,array,of,parameter,values,order,must,match,the,order,declared,for,the,stored,procedure,return,map,of,out,parameters;protected,map,string,object,do,execute,object,args,check,compiled,map,string,params,match,in,parameter,values,with,call,parameters,args,return,execute,call,internal,params
AbstractJdbcCall -> protected Map<String, Object> doExecute(Object... args);1416833949;Delegate method that executes the call using the passed-in array of parameters._@param args array of parameter values. The order of values must match the order_declared for the stored procedure._@return Map of out parameters;protected Map<String, Object> doExecute(Object... args) {_		checkCompiled()__		Map<String, ?> params = matchInParameterValuesWithCallParameters(args)__		return executeCallInternal(params)__	};delegate,method,that,executes,the,call,using,the,passed,in,array,of,parameters,param,args,array,of,parameter,values,the,order,of,values,must,match,the,order,declared,for,the,stored,procedure,return,map,of,out,parameters;protected,map,string,object,do,execute,object,args,check,compiled,map,string,params,match,in,parameter,values,with,call,parameters,args,return,execute,call,internal,params
AbstractJdbcCall -> protected Map<String, Object> doExecute(Object... args);1431676443;Delegate method that executes the call using the passed-in array of parameters._@param args array of parameter values. The order of values must match the order_declared for the stored procedure._@return Map of out parameters;protected Map<String, Object> doExecute(Object... args) {_		checkCompiled()__		Map<String, ?> params = matchInParameterValuesWithCallParameters(args)__		return executeCallInternal(params)__	};delegate,method,that,executes,the,call,using,the,passed,in,array,of,parameters,param,args,array,of,parameter,values,the,order,of,values,must,match,the,order,declared,for,the,stored,procedure,return,map,of,out,parameters;protected,map,string,object,do,execute,object,args,check,compiled,map,string,params,match,in,parameter,values,with,call,parameters,args,return,execute,call,internal,params
AbstractJdbcCall -> protected Map<String, Object> doExecute(Object... args);1446038912;Delegate method that executes the call using the passed-in array of parameters._@param args array of parameter values. The order of values must match the order_declared for the stored procedure._@return Map of out parameters;protected Map<String, Object> doExecute(Object... args) {_		checkCompiled()__		Map<String, ?> params = matchInParameterValuesWithCallParameters(args)__		return executeCallInternal(params)__	};delegate,method,that,executes,the,call,using,the,passed,in,array,of,parameters,param,args,array,of,parameter,values,the,order,of,values,must,match,the,order,declared,for,the,stored,procedure,return,map,of,out,parameters;protected,map,string,object,do,execute,object,args,check,compiled,map,string,params,match,in,parameter,values,with,call,parameters,args,return,execute,call,internal,params
AbstractJdbcCall -> protected Map<String, Object> doExecute(Object... args);1446470853;Delegate method that executes the call using the passed-in array of parameters._@param args array of parameter values. The order of values must match the order_declared for the stored procedure._@return Map of out parameters;protected Map<String, Object> doExecute(Object... args) {_		checkCompiled()__		Map<String, ?> params = matchInParameterValuesWithCallParameters(args)__		return executeCallInternal(params)__	};delegate,method,that,executes,the,call,using,the,passed,in,array,of,parameters,param,args,array,of,parameter,values,the,order,of,values,must,match,the,order,declared,for,the,stored,procedure,return,map,of,out,parameters;protected,map,string,object,do,execute,object,args,check,compiled,map,string,params,match,in,parameter,values,with,call,parameters,args,return,execute,call,internal,params
AbstractJdbcCall -> protected Map<String, Object> doExecute(Object... args);1467730834;Delegate method that executes the call using the passed-in array of parameters._@param args array of parameter values. The order of values must match the order_declared for the stored procedure._@return Map of out parameters;protected Map<String, Object> doExecute(Object... args) {_		checkCompiled()__		Map<String, ?> params = matchInParameterValuesWithCallParameters(args)__		return executeCallInternal(params)__	};delegate,method,that,executes,the,call,using,the,passed,in,array,of,parameters,param,args,array,of,parameter,values,the,order,of,values,must,match,the,order,declared,for,the,stored,procedure,return,map,of,out,parameters;protected,map,string,object,do,execute,object,args,check,compiled,map,string,params,match,in,parameter,values,with,call,parameters,args,return,execute,call,internal,params
AbstractJdbcCall -> protected Map<String, Object> doExecute(Object... args);1487178248;Delegate method that executes the call using the passed-in array of parameters._@param args array of parameter values. The order of values must match the order_declared for the stored procedure._@return Map of out parameters;protected Map<String, Object> doExecute(Object... args) {_		checkCompiled()__		Map<String, ?> params = matchInParameterValuesWithCallParameters(args)__		return executeCallInternal(params)__	};delegate,method,that,executes,the,call,using,the,passed,in,array,of,parameters,param,args,array,of,parameter,values,the,order,of,values,must,match,the,order,declared,for,the,stored,procedure,return,map,of,out,parameters;protected,map,string,object,do,execute,object,args,check,compiled,map,string,params,match,in,parameter,values,with,call,parameters,args,return,execute,call,internal,params
AbstractJdbcCall -> protected Map<String, Object> doExecute(Object... args);1496837955;Delegate method that executes the call using the passed-in array of parameters._@param args array of parameter values. The order of values must match the order_declared for the stored procedure._@return Map of out parameters;protected Map<String, Object> doExecute(Object... args) {_		checkCompiled()__		Map<String, ?> params = matchInParameterValuesWithCallParameters(args)__		return executeCallInternal(params)__	};delegate,method,that,executes,the,call,using,the,passed,in,array,of,parameters,param,args,array,of,parameter,values,the,order,of,values,must,match,the,order,declared,for,the,stored,procedure,return,map,of,out,parameters;protected,map,string,object,do,execute,object,args,check,compiled,map,string,params,match,in,parameter,values,with,call,parameters,args,return,execute,call,internal,params
AbstractJdbcCall -> protected Map<String, Object> doExecute(Object... args);1500448076;Delegate method that executes the call using the passed-in array of parameters._@param args array of parameter values. The order of values must match the order_declared for the stored procedure._@return Map of out parameters;protected Map<String, Object> doExecute(Object... args) {_		checkCompiled()__		Map<String, ?> params = matchInParameterValuesWithCallParameters(args)__		return executeCallInternal(params)__	};delegate,method,that,executes,the,call,using,the,passed,in,array,of,parameters,param,args,array,of,parameter,values,the,order,of,values,must,match,the,order,declared,for,the,stored,procedure,return,map,of,out,parameters;protected,map,string,object,do,execute,object,args,check,compiled,map,string,params,match,in,parameter,values,with,call,parameters,args,return,execute,call,internal,params
AbstractJdbcCall -> protected Map<String, Object> doExecute(Object... args);1500495740;Delegate method that executes the call using the passed-in array of parameters._@param args array of parameter values. The order of values must match the order_declared for the stored procedure._@return Map of out parameters;protected Map<String, Object> doExecute(Object... args) {_		checkCompiled()__		Map<String, ?> params = matchInParameterValuesWithCallParameters(args)__		return executeCallInternal(params)__	};delegate,method,that,executes,the,call,using,the,passed,in,array,of,parameters,param,args,array,of,parameter,values,the,order,of,values,must,match,the,order,declared,for,the,stored,procedure,return,map,of,out,parameters;protected,map,string,object,do,execute,object,args,check,compiled,map,string,params,match,in,parameter,values,with,call,parameters,args,return,execute,call,internal,params
AbstractJdbcCall -> protected Map<String, Object> doExecute(Object... args);1520528267;Delegate method that executes the call using the passed-in array of parameters._@param args array of parameter values. The order of values must match the order_declared for the stored procedure._@return Map of out parameters;protected Map<String, Object> doExecute(Object... args) {_		checkCompiled()__		Map<String, ?> params = matchInParameterValuesWithCallParameters(args)__		return executeCallInternal(params)__	};delegate,method,that,executes,the,call,using,the,passed,in,array,of,parameters,param,args,array,of,parameter,values,the,order,of,values,must,match,the,order,declared,for,the,stored,procedure,return,map,of,out,parameters;protected,map,string,object,do,execute,object,args,check,compiled,map,string,params,match,in,parameter,values,with,call,parameters,args,return,execute,call,internal,params
AbstractJdbcCall -> protected Map<String, Object> doExecute(Object... args);1521457504;Delegate method that executes the call using the passed-in array of parameters._@param args array of parameter values. The order of values must match the order_declared for the stored procedure._@return Map of out parameters;protected Map<String, Object> doExecute(Object... args) {_		checkCompiled()__		Map<String, ?> params = matchInParameterValuesWithCallParameters(args)__		return executeCallInternal(params)__	};delegate,method,that,executes,the,call,using,the,passed,in,array,of,parameters,param,args,array,of,parameter,values,the,order,of,values,must,match,the,order,declared,for,the,stored,procedure,return,map,of,out,parameters;protected,map,string,object,do,execute,object,args,check,compiled,map,string,params,match,in,parameter,values,with,call,parameters,args,return,execute,call,internal,params
AbstractJdbcCall -> protected Map<String, Object> doExecute(Object... args);1522103912;Delegate method that executes the call using the passed-in array of parameters._@param args array of parameter values. The order of values must match the order_declared for the stored procedure._@return Map of out parameters;protected Map<String, Object> doExecute(Object... args) {_		checkCompiled()__		Map<String, ?> params = matchInParameterValuesWithCallParameters(args)__		return executeCallInternal(params)__	};delegate,method,that,executes,the,call,using,the,passed,in,array,of,parameters,param,args,array,of,parameter,values,the,order,of,values,must,match,the,order,declared,for,the,stored,procedure,return,map,of,out,parameters;protected,map,string,object,do,execute,object,args,check,compiled,map,string,params,match,in,parameter,values,with,call,parameters,args,return,execute,call,internal,params
AbstractJdbcCall -> protected Map<String, Object> doExecute(Object... args);1530174524;Delegate method that executes the call using the passed-in array of parameters._@param args array of parameter values. The order of values must match the order_declared for the stored procedure._@return a Map of out parameters;protected Map<String, Object> doExecute(Object... args) {_		checkCompiled()__		Map<String, ?> params = matchInParameterValuesWithCallParameters(args)__		return executeCallInternal(params)__	};delegate,method,that,executes,the,call,using,the,passed,in,array,of,parameters,param,args,array,of,parameter,values,the,order,of,values,must,match,the,order,declared,for,the,stored,procedure,return,a,map,of,out,parameters;protected,map,string,object,do,execute,object,args,check,compiled,map,string,params,match,in,parameter,values,with,call,parameters,args,return,execute,call,internal,params
AbstractJdbcCall -> public void setReturnValueRequired(boolean b);1328020251;Specify whether the call requires a rerurn value.;public void setReturnValueRequired(boolean b) {_		this.callMetaDataContext.setReturnValueRequired(b)__	};specify,whether,the,call,requires,a,rerurn,value;public,void,set,return,value,required,boolean,b,this,call,meta,data,context,set,return,value,required,b
AbstractJdbcCall -> public void setReturnValueRequired(boolean b);1356735495;Specify whether the call requires a rerurn value.;public void setReturnValueRequired(boolean b) {_		this.callMetaDataContext.setReturnValueRequired(b)__	};specify,whether,the,call,requires,a,rerurn,value;public,void,set,return,value,required,boolean,b,this,call,meta,data,context,set,return,value,required,b
AbstractJdbcCall -> public void setReturnValueRequired(boolean b);1362408075;Specify whether the call requires a rerurn value.;public void setReturnValueRequired(boolean b) {_		this.callMetaDataContext.setReturnValueRequired(b)__	};specify,whether,the,call,requires,a,rerurn,value;public,void,set,return,value,required,boolean,b,this,call,meta,data,context,set,return,value,required,b
AbstractJdbcCall -> public void setReturnValueRequired(boolean b);1367508310;Specify whether the call requires a rerurn value.;public void setReturnValueRequired(boolean b) {_		this.callMetaDataContext.setReturnValueRequired(b)__	};specify,whether,the,call,requires,a,rerurn,value;public,void,set,return,value,required,boolean,b,this,call,meta,data,context,set,return,value,required,b
AbstractJdbcCall -> public void setReturnValueRequired(boolean b);1385412762;Specify whether the call requires a rerurn value.;public void setReturnValueRequired(boolean b) {_		this.callMetaDataContext.setReturnValueRequired(b)__	};specify,whether,the,call,requires,a,rerurn,value;public,void,set,return,value,required,boolean,b,this,call,meta,data,context,set,return,value,required,b
AbstractJdbcCall -> protected Map<String, ?> matchInParameterValuesWithCallParameters(Map<String, ?> args);1328020251;Match the provided in parameter values with registered parameters and_parameters defined via metadata processing._@param args the parameter values provided in a Map_@return Map with parameter names and values;protected Map<String, ?> matchInParameterValuesWithCallParameters(Map<String, ?> args) {_		return this.callMetaDataContext.matchInParameterValuesWithCallParameters(args)__	};match,the,provided,in,parameter,values,with,registered,parameters,and,parameters,defined,via,metadata,processing,param,args,the,parameter,values,provided,in,a,map,return,map,with,parameter,names,and,values;protected,map,string,match,in,parameter,values,with,call,parameters,map,string,args,return,this,call,meta,data,context,match,in,parameter,values,with,call,parameters,args
AbstractJdbcCall -> protected Map<String, ?> matchInParameterValuesWithCallParameters(Map<String, ?> args);1356735495;Match the provided in parameter values with registered parameters and_parameters defined via metadata processing._@param args the parameter values provided in a Map_@return Map with parameter names and values;protected Map<String, ?> matchInParameterValuesWithCallParameters(Map<String, ?> args) {_		return this.callMetaDataContext.matchInParameterValuesWithCallParameters(args)__	};match,the,provided,in,parameter,values,with,registered,parameters,and,parameters,defined,via,metadata,processing,param,args,the,parameter,values,provided,in,a,map,return,map,with,parameter,names,and,values;protected,map,string,match,in,parameter,values,with,call,parameters,map,string,args,return,this,call,meta,data,context,match,in,parameter,values,with,call,parameters,args
AbstractJdbcCall -> protected Map<String, ?> matchInParameterValuesWithCallParameters(Map<String, ?> args);1362408075;Match the provided in parameter values with registered parameters and_parameters defined via metadata processing._@param args the parameter values provided in a Map_@return Map with parameter names and values;protected Map<String, ?> matchInParameterValuesWithCallParameters(Map<String, ?> args) {_		return this.callMetaDataContext.matchInParameterValuesWithCallParameters(args)__	};match,the,provided,in,parameter,values,with,registered,parameters,and,parameters,defined,via,metadata,processing,param,args,the,parameter,values,provided,in,a,map,return,map,with,parameter,names,and,values;protected,map,string,match,in,parameter,values,with,call,parameters,map,string,args,return,this,call,meta,data,context,match,in,parameter,values,with,call,parameters,args
AbstractJdbcCall -> protected Map<String, ?> matchInParameterValuesWithCallParameters(Map<String, ?> args);1367508310;Match the provided in parameter values with registered parameters and_parameters defined via metadata processing._@param args the parameter values provided in a Map_@return Map with parameter names and values;protected Map<String, ?> matchInParameterValuesWithCallParameters(Map<String, ?> args) {_		return this.callMetaDataContext.matchInParameterValuesWithCallParameters(args)__	};match,the,provided,in,parameter,values,with,registered,parameters,and,parameters,defined,via,metadata,processing,param,args,the,parameter,values,provided,in,a,map,return,map,with,parameter,names,and,values;protected,map,string,match,in,parameter,values,with,call,parameters,map,string,args,return,this,call,meta,data,context,match,in,parameter,values,with,call,parameters,args
AbstractJdbcCall -> protected Map<String, ?> matchInParameterValuesWithCallParameters(Map<String, ?> args);1385412762;Match the provided in parameter values with registered parameters and_parameters defined via metadata processing._@param args the parameter values provided in a Map_@return Map with parameter names and values;protected Map<String, ?> matchInParameterValuesWithCallParameters(Map<String, ?> args) {_		return this.callMetaDataContext.matchInParameterValuesWithCallParameters(args)__	};match,the,provided,in,parameter,values,with,registered,parameters,and,parameters,defined,via,metadata,processing,param,args,the,parameter,values,provided,in,a,map,return,map,with,parameter,names,and,values;protected,map,string,match,in,parameter,values,with,call,parameters,map,string,args,return,this,call,meta,data,context,match,in,parameter,values,with,call,parameters,args
AbstractJdbcCall -> protected Map<String, ?> matchInParameterValuesWithCallParameters(Map<String, ?> args);1407789123;Match the provided in parameter values with registered parameters and_parameters defined via metadata processing._@param args the parameter values provided in a Map_@return Map with parameter names and values;protected Map<String, ?> matchInParameterValuesWithCallParameters(Map<String, ?> args) {_		return this.callMetaDataContext.matchInParameterValuesWithCallParameters(args)__	};match,the,provided,in,parameter,values,with,registered,parameters,and,parameters,defined,via,metadata,processing,param,args,the,parameter,values,provided,in,a,map,return,map,with,parameter,names,and,values;protected,map,string,match,in,parameter,values,with,call,parameters,map,string,args,return,this,call,meta,data,context,match,in,parameter,values,with,call,parameters,args
AbstractJdbcCall -> protected Map<String, ?> matchInParameterValuesWithCallParameters(Map<String, ?> args);1416833949;Match the provided in parameter values with registered parameters and_parameters defined via metadata processing._@param args the parameter values provided in a Map_@return Map with parameter names and values;protected Map<String, ?> matchInParameterValuesWithCallParameters(Map<String, ?> args) {_		return this.callMetaDataContext.matchInParameterValuesWithCallParameters(args)__	};match,the,provided,in,parameter,values,with,registered,parameters,and,parameters,defined,via,metadata,processing,param,args,the,parameter,values,provided,in,a,map,return,map,with,parameter,names,and,values;protected,map,string,match,in,parameter,values,with,call,parameters,map,string,args,return,this,call,meta,data,context,match,in,parameter,values,with,call,parameters,args
AbstractJdbcCall -> protected Map<String, ?> matchInParameterValuesWithCallParameters(Map<String, ?> args);1431676443;Match the provided in parameter values with registered parameters and_parameters defined via metadata processing._@param args the parameter values provided in a Map_@return Map with parameter names and values;protected Map<String, ?> matchInParameterValuesWithCallParameters(Map<String, ?> args) {_		return this.callMetaDataContext.matchInParameterValuesWithCallParameters(args)__	};match,the,provided,in,parameter,values,with,registered,parameters,and,parameters,defined,via,metadata,processing,param,args,the,parameter,values,provided,in,a,map,return,map,with,parameter,names,and,values;protected,map,string,match,in,parameter,values,with,call,parameters,map,string,args,return,this,call,meta,data,context,match,in,parameter,values,with,call,parameters,args
AbstractJdbcCall -> protected Map<String, ?> matchInParameterValuesWithCallParameters(Map<String, ?> args);1446038912;Match the provided in parameter values with registered parameters and_parameters defined via metadata processing._@param args the parameter values provided in a Map_@return Map with parameter names and values;protected Map<String, ?> matchInParameterValuesWithCallParameters(Map<String, ?> args) {_		return this.callMetaDataContext.matchInParameterValuesWithCallParameters(args)__	};match,the,provided,in,parameter,values,with,registered,parameters,and,parameters,defined,via,metadata,processing,param,args,the,parameter,values,provided,in,a,map,return,map,with,parameter,names,and,values;protected,map,string,match,in,parameter,values,with,call,parameters,map,string,args,return,this,call,meta,data,context,match,in,parameter,values,with,call,parameters,args
AbstractJdbcCall -> protected Map<String, ?> matchInParameterValuesWithCallParameters(Map<String, ?> args);1446470853;Match the provided in parameter values with registered parameters and_parameters defined via metadata processing._@param args the parameter values provided in a Map_@return Map with parameter names and values;protected Map<String, ?> matchInParameterValuesWithCallParameters(Map<String, ?> args) {_		return this.callMetaDataContext.matchInParameterValuesWithCallParameters(args)__	};match,the,provided,in,parameter,values,with,registered,parameters,and,parameters,defined,via,metadata,processing,param,args,the,parameter,values,provided,in,a,map,return,map,with,parameter,names,and,values;protected,map,string,match,in,parameter,values,with,call,parameters,map,string,args,return,this,call,meta,data,context,match,in,parameter,values,with,call,parameters,args
AbstractJdbcCall -> protected Map<String, ?> matchInParameterValuesWithCallParameters(Map<String, ?> args);1467730834;Match the provided in parameter values with registered parameters and_parameters defined via metadata processing._@param args the parameter values provided in a Map_@return Map with parameter names and values;protected Map<String, ?> matchInParameterValuesWithCallParameters(Map<String, ?> args) {_		return this.callMetaDataContext.matchInParameterValuesWithCallParameters(args)__	};match,the,provided,in,parameter,values,with,registered,parameters,and,parameters,defined,via,metadata,processing,param,args,the,parameter,values,provided,in,a,map,return,map,with,parameter,names,and,values;protected,map,string,match,in,parameter,values,with,call,parameters,map,string,args,return,this,call,meta,data,context,match,in,parameter,values,with,call,parameters,args
AbstractJdbcCall -> protected Map<String, ?> matchInParameterValuesWithCallParameters(Map<String, ?> args);1487178248;Match the provided in parameter values with registered parameters and_parameters defined via metadata processing._@param args the parameter values provided in a Map_@return Map with parameter names and values;protected Map<String, ?> matchInParameterValuesWithCallParameters(Map<String, ?> args) {_		return this.callMetaDataContext.matchInParameterValuesWithCallParameters(args)__	};match,the,provided,in,parameter,values,with,registered,parameters,and,parameters,defined,via,metadata,processing,param,args,the,parameter,values,provided,in,a,map,return,map,with,parameter,names,and,values;protected,map,string,match,in,parameter,values,with,call,parameters,map,string,args,return,this,call,meta,data,context,match,in,parameter,values,with,call,parameters,args
AbstractJdbcCall -> protected Map<String, ?> matchInParameterValuesWithCallParameters(Map<String, ?> args);1496837955;Match the provided in parameter values with registered parameters and_parameters defined via metadata processing._@param args the parameter values provided in a Map_@return Map with parameter names and values;protected Map<String, ?> matchInParameterValuesWithCallParameters(Map<String, ?> args) {_		return this.callMetaDataContext.matchInParameterValuesWithCallParameters(args)__	};match,the,provided,in,parameter,values,with,registered,parameters,and,parameters,defined,via,metadata,processing,param,args,the,parameter,values,provided,in,a,map,return,map,with,parameter,names,and,values;protected,map,string,match,in,parameter,values,with,call,parameters,map,string,args,return,this,call,meta,data,context,match,in,parameter,values,with,call,parameters,args
AbstractJdbcCall -> protected Map<String, ?> matchInParameterValuesWithCallParameters(Map<String, ?> args);1500448076;Match the provided in parameter values with registered parameters and_parameters defined via metadata processing._@param args the parameter values provided in a Map_@return Map with parameter names and values;protected Map<String, ?> matchInParameterValuesWithCallParameters(Map<String, ?> args) {_		return this.callMetaDataContext.matchInParameterValuesWithCallParameters(args)__	};match,the,provided,in,parameter,values,with,registered,parameters,and,parameters,defined,via,metadata,processing,param,args,the,parameter,values,provided,in,a,map,return,map,with,parameter,names,and,values;protected,map,string,match,in,parameter,values,with,call,parameters,map,string,args,return,this,call,meta,data,context,match,in,parameter,values,with,call,parameters,args
AbstractJdbcCall -> protected Map<String, ?> matchInParameterValuesWithCallParameters(Map<String, ?> args);1500495740;Match the provided in parameter values with registered parameters and_parameters defined via metadata processing._@param args the parameter values provided in a Map_@return Map with parameter names and values;protected Map<String, ?> matchInParameterValuesWithCallParameters(Map<String, ?> args) {_		return this.callMetaDataContext.matchInParameterValuesWithCallParameters(args)__	};match,the,provided,in,parameter,values,with,registered,parameters,and,parameters,defined,via,metadata,processing,param,args,the,parameter,values,provided,in,a,map,return,map,with,parameter,names,and,values;protected,map,string,match,in,parameter,values,with,call,parameters,map,string,args,return,this,call,meta,data,context,match,in,parameter,values,with,call,parameters,args
AbstractJdbcCall -> protected Map<String, ?> matchInParameterValuesWithCallParameters(Map<String, ?> args);1520528267;Match the provided in parameter values with registered parameters and_parameters defined via metadata processing._@param args the parameter values provided in a Map_@return Map with parameter names and values;protected Map<String, ?> matchInParameterValuesWithCallParameters(Map<String, ?> args) {_		return this.callMetaDataContext.matchInParameterValuesWithCallParameters(args)__	};match,the,provided,in,parameter,values,with,registered,parameters,and,parameters,defined,via,metadata,processing,param,args,the,parameter,values,provided,in,a,map,return,map,with,parameter,names,and,values;protected,map,string,match,in,parameter,values,with,call,parameters,map,string,args,return,this,call,meta,data,context,match,in,parameter,values,with,call,parameters,args
AbstractJdbcCall -> protected Map<String, ?> matchInParameterValuesWithCallParameters(Map<String, ?> args);1521457504;Match the provided in parameter values with registered parameters and_parameters defined via meta-data processing._@param args the parameter values provided in a Map_@return Map with parameter names and values;protected Map<String, ?> matchInParameterValuesWithCallParameters(Map<String, ?> args) {_		return this.callMetaDataContext.matchInParameterValuesWithCallParameters(args)__	};match,the,provided,in,parameter,values,with,registered,parameters,and,parameters,defined,via,meta,data,processing,param,args,the,parameter,values,provided,in,a,map,return,map,with,parameter,names,and,values;protected,map,string,match,in,parameter,values,with,call,parameters,map,string,args,return,this,call,meta,data,context,match,in,parameter,values,with,call,parameters,args
AbstractJdbcCall -> protected Map<String, ?> matchInParameterValuesWithCallParameters(Map<String, ?> args);1522103912;Match the provided in parameter values with registered parameters and_parameters defined via meta-data processing._@param args the parameter values provided in a Map_@return Map with parameter names and values;protected Map<String, ?> matchInParameterValuesWithCallParameters(Map<String, ?> args) {_		return this.callMetaDataContext.matchInParameterValuesWithCallParameters(args)__	};match,the,provided,in,parameter,values,with,registered,parameters,and,parameters,defined,via,meta,data,processing,param,args,the,parameter,values,provided,in,a,map,return,map,with,parameter,names,and,values;protected,map,string,match,in,parameter,values,with,call,parameters,map,string,args,return,this,call,meta,data,context,match,in,parameter,values,with,call,parameters,args
AbstractJdbcCall -> protected Map<String, ?> matchInParameterValuesWithCallParameters(Map<String, ?> args);1530174524;Match the provided in parameter values with registered parameters and_parameters defined via meta-data processing._@param args the parameter values provided in a Map_@return a Map with parameter names and values;protected Map<String, ?> matchInParameterValuesWithCallParameters(Map<String, ?> args) {_		return this.callMetaDataContext.matchInParameterValuesWithCallParameters(args)__	};match,the,provided,in,parameter,values,with,registered,parameters,and,parameters,defined,via,meta,data,processing,param,args,the,parameter,values,provided,in,a,map,return,a,map,with,parameter,names,and,values;protected,map,string,match,in,parameter,values,with,call,parameters,map,string,args,return,this,call,meta,data,context,match,in,parameter,values,with,call,parameters,args
AbstractJdbcCall -> public void setNamedBinding(boolean namedBinding);1431676443;Specify whether parameters should be bound by name._The default is {@code false}.;public void setNamedBinding(boolean namedBinding) {_		this.callMetaDataContext.setNamedBinding(namedBinding)__	};specify,whether,parameters,should,be,bound,by,name,the,default,is,code,false;public,void,set,named,binding,boolean,named,binding,this,call,meta,data,context,set,named,binding,named,binding
AbstractJdbcCall -> public void setNamedBinding(boolean namedBinding);1446038912;Specify whether parameters should be bound by name._The default is {@code false}.;public void setNamedBinding(boolean namedBinding) {_		this.callMetaDataContext.setNamedBinding(namedBinding)__	};specify,whether,parameters,should,be,bound,by,name,the,default,is,code,false;public,void,set,named,binding,boolean,named,binding,this,call,meta,data,context,set,named,binding,named,binding
AbstractJdbcCall -> public void setNamedBinding(boolean namedBinding);1446470853;Specify whether parameters should be bound by name._The default is {@code false}._@since 4.2;public void setNamedBinding(boolean namedBinding) {_		this.callMetaDataContext.setNamedBinding(namedBinding)__	};specify,whether,parameters,should,be,bound,by,name,the,default,is,code,false,since,4,2;public,void,set,named,binding,boolean,named,binding,this,call,meta,data,context,set,named,binding,named,binding
AbstractJdbcCall -> public void setNamedBinding(boolean namedBinding);1467730834;Specify whether parameters should be bound by name._The default is {@code false}._@since 4.2;public void setNamedBinding(boolean namedBinding) {_		this.callMetaDataContext.setNamedBinding(namedBinding)__	};specify,whether,parameters,should,be,bound,by,name,the,default,is,code,false,since,4,2;public,void,set,named,binding,boolean,named,binding,this,call,meta,data,context,set,named,binding,named,binding
AbstractJdbcCall -> public void setNamedBinding(boolean namedBinding);1487178248;Specify whether parameters should be bound by name._The default is {@code false}._@since 4.2;public void setNamedBinding(boolean namedBinding) {_		this.callMetaDataContext.setNamedBinding(namedBinding)__	};specify,whether,parameters,should,be,bound,by,name,the,default,is,code,false,since,4,2;public,void,set,named,binding,boolean,named,binding,this,call,meta,data,context,set,named,binding,named,binding
AbstractJdbcCall -> public void setNamedBinding(boolean namedBinding);1496837955;Specify whether parameters should be bound by name._The default is {@code false}._@since 4.2;public void setNamedBinding(boolean namedBinding) {_		this.callMetaDataContext.setNamedBinding(namedBinding)__	};specify,whether,parameters,should,be,bound,by,name,the,default,is,code,false,since,4,2;public,void,set,named,binding,boolean,named,binding,this,call,meta,data,context,set,named,binding,named,binding
AbstractJdbcCall -> public void setNamedBinding(boolean namedBinding);1500448076;Specify whether parameters should be bound by name._The default is {@code false}._@since 4.2;public void setNamedBinding(boolean namedBinding) {_		this.callMetaDataContext.setNamedBinding(namedBinding)__	};specify,whether,parameters,should,be,bound,by,name,the,default,is,code,false,since,4,2;public,void,set,named,binding,boolean,named,binding,this,call,meta,data,context,set,named,binding,named,binding
AbstractJdbcCall -> public void setNamedBinding(boolean namedBinding);1500495740;Specify whether parameters should be bound by name._The default is {@code false}._@since 4.2;public void setNamedBinding(boolean namedBinding) {_		this.callMetaDataContext.setNamedBinding(namedBinding)__	};specify,whether,parameters,should,be,bound,by,name,the,default,is,code,false,since,4,2;public,void,set,named,binding,boolean,named,binding,this,call,meta,data,context,set,named,binding,named,binding
AbstractJdbcCall -> public void setNamedBinding(boolean namedBinding);1520528267;Specify whether parameters should be bound by name._The default is {@code false}._@since 4.2;public void setNamedBinding(boolean namedBinding) {_		this.callMetaDataContext.setNamedBinding(namedBinding)__	};specify,whether,parameters,should,be,bound,by,name,the,default,is,code,false,since,4,2;public,void,set,named,binding,boolean,named,binding,this,call,meta,data,context,set,named,binding,named,binding
AbstractJdbcCall -> public void setNamedBinding(boolean namedBinding);1521457504;Specify whether parameters should be bound by name._The default is {@code false}._@since 4.2;public void setNamedBinding(boolean namedBinding) {_		this.callMetaDataContext.setNamedBinding(namedBinding)__	};specify,whether,parameters,should,be,bound,by,name,the,default,is,code,false,since,4,2;public,void,set,named,binding,boolean,named,binding,this,call,meta,data,context,set,named,binding,named,binding
AbstractJdbcCall -> public void setNamedBinding(boolean namedBinding);1522103912;Specify whether parameters should be bound by name._The default is {@code false}._@since 4.2;public void setNamedBinding(boolean namedBinding) {_		this.callMetaDataContext.setNamedBinding(namedBinding)__	};specify,whether,parameters,should,be,bound,by,name,the,default,is,code,false,since,4,2;public,void,set,named,binding,boolean,named,binding,this,call,meta,data,context,set,named,binding,named,binding
AbstractJdbcCall -> public void setNamedBinding(boolean namedBinding);1530174524;Specify whether parameters should be bound by name._The default is {@code false}._@since 4.2;public void setNamedBinding(boolean namedBinding) {_		this.callMetaDataContext.setNamedBinding(namedBinding)__	};specify,whether,parameters,should,be,bound,by,name,the,default,is,code,false,since,4,2;public,void,set,named,binding,boolean,named,binding,this,call,meta,data,context,set,named,binding,named,binding
AbstractJdbcCall -> public void addDeclaredRowMapper(String parameterName, RowMapper rowMapper);1328020251;Add a {@link org.springframework.jdbc.core.RowMapper} for the specified parameter or column._@param parameterName name of parameter or column_@param rowMapper the RowMapper implementation to use;public void addDeclaredRowMapper(String parameterName, RowMapper rowMapper) {_		this.declaredRowMappers.put(parameterName, rowMapper)__		if (logger.isDebugEnabled()) {_			logger.debug("Added row mapper for [" + getProcedureName() + "]: " + parameterName)__		}_	};add,a,link,org,springframework,jdbc,core,row,mapper,for,the,specified,parameter,or,column,param,parameter,name,name,of,parameter,or,column,param,row,mapper,the,row,mapper,implementation,to,use;public,void,add,declared,row,mapper,string,parameter,name,row,mapper,row,mapper,this,declared,row,mappers,put,parameter,name,row,mapper,if,logger,is,debug,enabled,logger,debug,added,row,mapper,for,get,procedure,name,parameter,name
AbstractJdbcCall -> public void addDeclaredRowMapper(String parameterName, RowMapper rowMapper);1356735495;Add a {@link org.springframework.jdbc.core.RowMapper} for the specified parameter or column._@param parameterName name of parameter or column_@param rowMapper the RowMapper implementation to use;public void addDeclaredRowMapper(String parameterName, RowMapper rowMapper) {_		this.declaredRowMappers.put(parameterName, rowMapper)__		if (logger.isDebugEnabled()) {_			logger.debug("Added row mapper for [" + getProcedureName() + "]: " + parameterName)__		}_	};add,a,link,org,springframework,jdbc,core,row,mapper,for,the,specified,parameter,or,column,param,parameter,name,name,of,parameter,or,column,param,row,mapper,the,row,mapper,implementation,to,use;public,void,add,declared,row,mapper,string,parameter,name,row,mapper,row,mapper,this,declared,row,mappers,put,parameter,name,row,mapper,if,logger,is,debug,enabled,logger,debug,added,row,mapper,for,get,procedure,name,parameter,name
AbstractJdbcCall -> public void addDeclaredRowMapper(String parameterName, RowMapper rowMapper);1362408075;Add a {@link org.springframework.jdbc.core.RowMapper} for the specified parameter or column._@param parameterName name of parameter or column_@param rowMapper the RowMapper implementation to use;public void addDeclaredRowMapper(String parameterName, RowMapper rowMapper) {_		this.declaredRowMappers.put(parameterName, rowMapper)__		if (logger.isDebugEnabled()) {_			logger.debug("Added row mapper for [" + getProcedureName() + "]: " + parameterName)__		}_	};add,a,link,org,springframework,jdbc,core,row,mapper,for,the,specified,parameter,or,column,param,parameter,name,name,of,parameter,or,column,param,row,mapper,the,row,mapper,implementation,to,use;public,void,add,declared,row,mapper,string,parameter,name,row,mapper,row,mapper,this,declared,row,mappers,put,parameter,name,row,mapper,if,logger,is,debug,enabled,logger,debug,added,row,mapper,for,get,procedure,name,parameter,name
AbstractJdbcCall -> public void addDeclaredRowMapper(String parameterName, RowMapper rowMapper);1367508310;Add a {@link org.springframework.jdbc.core.RowMapper} for the specified parameter or column._@param parameterName name of parameter or column_@param rowMapper the RowMapper implementation to use;public void addDeclaredRowMapper(String parameterName, RowMapper rowMapper) {_		this.declaredRowMappers.put(parameterName, rowMapper)__		if (logger.isDebugEnabled()) {_			logger.debug("Added row mapper for [" + getProcedureName() + "]: " + parameterName)__		}_	};add,a,link,org,springframework,jdbc,core,row,mapper,for,the,specified,parameter,or,column,param,parameter,name,name,of,parameter,or,column,param,row,mapper,the,row,mapper,implementation,to,use;public,void,add,declared,row,mapper,string,parameter,name,row,mapper,row,mapper,this,declared,row,mappers,put,parameter,name,row,mapper,if,logger,is,debug,enabled,logger,debug,added,row,mapper,for,get,procedure,name,parameter,name
AbstractJdbcCall -> private Map<String, Object> executeCallInternal(Map<String, ?> args);1407789123;Method to perform the actual call processing;private Map<String, Object> executeCallInternal(Map<String, ?> args) {_		CallableStatementCreator csc = getCallableStatementFactory().newCallableStatementCreator(args)__		if (logger.isDebugEnabled()) {_			logger.debug("The following parameters are used for call " + getCallString() + " with " + args)__			int i = 1__			for (SqlParameter param : getCallParameters()) {_				logger.debug(i + ": " +  param.getName() + ", SQL type "+ param.getSqlType() + ", type name " +_						param.getTypeName() + ", parameter class [" + param.getClass().getName() + "]")__				i++__			}_		}_		return getJdbcTemplate().call(csc, getCallParameters())__	};method,to,perform,the,actual,call,processing;private,map,string,object,execute,call,internal,map,string,args,callable,statement,creator,csc,get,callable,statement,factory,new,callable,statement,creator,args,if,logger,is,debug,enabled,logger,debug,the,following,parameters,are,used,for,call,get,call,string,with,args,int,i,1,for,sql,parameter,param,get,call,parameters,logger,debug,i,param,get,name,sql,type,param,get,sql,type,type,name,param,get,type,name,parameter,class,param,get,class,get,name,i,return,get,jdbc,template,call,csc,get,call,parameters
AbstractJdbcCall -> private Map<String, Object> executeCallInternal(Map<String, ?> args);1416833949;Delegate method to perform the actual call processing.;private Map<String, Object> executeCallInternal(Map<String, ?> args) {_		CallableStatementCreator csc = getCallableStatementFactory().newCallableStatementCreator(args)__		if (logger.isDebugEnabled()) {_			logger.debug("The following parameters are used for call " + getCallString() + " with " + args)__			int i = 1__			for (SqlParameter param : getCallParameters()) {_				logger.debug(i + ": " +  param.getName() + ", SQL type "+ param.getSqlType() + ", type name " +_						param.getTypeName() + ", parameter class [" + param.getClass().getName() + "]")__				i++__			}_		}_		return getJdbcTemplate().call(csc, getCallParameters())__	};delegate,method,to,perform,the,actual,call,processing;private,map,string,object,execute,call,internal,map,string,args,callable,statement,creator,csc,get,callable,statement,factory,new,callable,statement,creator,args,if,logger,is,debug,enabled,logger,debug,the,following,parameters,are,used,for,call,get,call,string,with,args,int,i,1,for,sql,parameter,param,get,call,parameters,logger,debug,i,param,get,name,sql,type,param,get,sql,type,type,name,param,get,type,name,parameter,class,param,get,class,get,name,i,return,get,jdbc,template,call,csc,get,call,parameters
AbstractJdbcCall -> private Map<String, Object> executeCallInternal(Map<String, ?> args);1431676443;Delegate method to perform the actual call processing.;private Map<String, Object> executeCallInternal(Map<String, ?> args) {_		CallableStatementCreator csc = getCallableStatementFactory().newCallableStatementCreator(args)__		if (logger.isDebugEnabled()) {_			logger.debug("The following parameters are used for call " + getCallString() + " with " + args)__			int i = 1__			for (SqlParameter param : getCallParameters()) {_				logger.debug(i + ": " +  param.getName() + ", SQL type "+ param.getSqlType() + ", type name " +_						param.getTypeName() + ", parameter class [" + param.getClass().getName() + "]")__				i++__			}_		}_		return getJdbcTemplate().call(csc, getCallParameters())__	};delegate,method,to,perform,the,actual,call,processing;private,map,string,object,execute,call,internal,map,string,args,callable,statement,creator,csc,get,callable,statement,factory,new,callable,statement,creator,args,if,logger,is,debug,enabled,logger,debug,the,following,parameters,are,used,for,call,get,call,string,with,args,int,i,1,for,sql,parameter,param,get,call,parameters,logger,debug,i,param,get,name,sql,type,param,get,sql,type,type,name,param,get,type,name,parameter,class,param,get,class,get,name,i,return,get,jdbc,template,call,csc,get,call,parameters
AbstractJdbcCall -> private Map<String, Object> executeCallInternal(Map<String, ?> args);1446038912;Delegate method to perform the actual call processing.;private Map<String, Object> executeCallInternal(Map<String, ?> args) {_		CallableStatementCreator csc = getCallableStatementFactory().newCallableStatementCreator(args)__		if (logger.isDebugEnabled()) {_			logger.debug("The following parameters are used for call " + getCallString() + " with " + args)__			int i = 1__			for (SqlParameter param : getCallParameters()) {_				logger.debug(i + ": " +  param.getName() + ", SQL type "+ param.getSqlType() + ", type name " +_						param.getTypeName() + ", parameter class [" + param.getClass().getName() + "]")__				i++__			}_		}_		return getJdbcTemplate().call(csc, getCallParameters())__	};delegate,method,to,perform,the,actual,call,processing;private,map,string,object,execute,call,internal,map,string,args,callable,statement,creator,csc,get,callable,statement,factory,new,callable,statement,creator,args,if,logger,is,debug,enabled,logger,debug,the,following,parameters,are,used,for,call,get,call,string,with,args,int,i,1,for,sql,parameter,param,get,call,parameters,logger,debug,i,param,get,name,sql,type,param,get,sql,type,type,name,param,get,type,name,parameter,class,param,get,class,get,name,i,return,get,jdbc,template,call,csc,get,call,parameters
AbstractJdbcCall -> private Map<String, Object> executeCallInternal(Map<String, ?> args);1446470853;Delegate method to perform the actual call processing.;private Map<String, Object> executeCallInternal(Map<String, ?> args) {_		CallableStatementCreator csc = getCallableStatementFactory().newCallableStatementCreator(args)__		if (logger.isDebugEnabled()) {_			logger.debug("The following parameters are used for call " + getCallString() + " with " + args)__			int i = 1__			for (SqlParameter param : getCallParameters()) {_				logger.debug(i + ": " +  param.getName() + ", SQL type "+ param.getSqlType() + ", type name " +_						param.getTypeName() + ", parameter class [" + param.getClass().getName() + "]")__				i++__			}_		}_		return getJdbcTemplate().call(csc, getCallParameters())__	};delegate,method,to,perform,the,actual,call,processing;private,map,string,object,execute,call,internal,map,string,args,callable,statement,creator,csc,get,callable,statement,factory,new,callable,statement,creator,args,if,logger,is,debug,enabled,logger,debug,the,following,parameters,are,used,for,call,get,call,string,with,args,int,i,1,for,sql,parameter,param,get,call,parameters,logger,debug,i,param,get,name,sql,type,param,get,sql,type,type,name,param,get,type,name,parameter,class,param,get,class,get,name,i,return,get,jdbc,template,call,csc,get,call,parameters
AbstractJdbcCall -> private Map<String, Object> executeCallInternal(Map<String, ?> args);1467730834;Delegate method to perform the actual call processing.;private Map<String, Object> executeCallInternal(Map<String, ?> args) {_		CallableStatementCreator csc = getCallableStatementFactory().newCallableStatementCreator(args)__		if (logger.isDebugEnabled()) {_			logger.debug("The following parameters are used for call " + getCallString() + " with " + args)__			int i = 1__			for (SqlParameter param : getCallParameters()) {_				logger.debug(i + ": " +  param.getName() + ", SQL type "+ param.getSqlType() + ", type name " +_						param.getTypeName() + ", parameter class [" + param.getClass().getName() + "]")__				i++__			}_		}_		return getJdbcTemplate().call(csc, getCallParameters())__	};delegate,method,to,perform,the,actual,call,processing;private,map,string,object,execute,call,internal,map,string,args,callable,statement,creator,csc,get,callable,statement,factory,new,callable,statement,creator,args,if,logger,is,debug,enabled,logger,debug,the,following,parameters,are,used,for,call,get,call,string,with,args,int,i,1,for,sql,parameter,param,get,call,parameters,logger,debug,i,param,get,name,sql,type,param,get,sql,type,type,name,param,get,type,name,parameter,class,param,get,class,get,name,i,return,get,jdbc,template,call,csc,get,call,parameters
AbstractJdbcCall -> private Map<String, Object> executeCallInternal(Map<String, ?> args);1487178248;Delegate method to perform the actual call processing.;private Map<String, Object> executeCallInternal(Map<String, ?> args) {_		CallableStatementCreator csc = getCallableStatementFactory().newCallableStatementCreator(args)__		if (logger.isDebugEnabled()) {_			logger.debug("The following parameters are used for call " + getCallString() + " with " + args)__			int i = 1__			for (SqlParameter param : getCallParameters()) {_				logger.debug(i + ": " +  param.getName() + ", SQL type "+ param.getSqlType() + ", type name " +_						param.getTypeName() + ", parameter class [" + param.getClass().getName() + "]")__				i++__			}_		}_		return getJdbcTemplate().call(csc, getCallParameters())__	};delegate,method,to,perform,the,actual,call,processing;private,map,string,object,execute,call,internal,map,string,args,callable,statement,creator,csc,get,callable,statement,factory,new,callable,statement,creator,args,if,logger,is,debug,enabled,logger,debug,the,following,parameters,are,used,for,call,get,call,string,with,args,int,i,1,for,sql,parameter,param,get,call,parameters,logger,debug,i,param,get,name,sql,type,param,get,sql,type,type,name,param,get,type,name,parameter,class,param,get,class,get,name,i,return,get,jdbc,template,call,csc,get,call,parameters
AbstractJdbcCall -> private Map<String, Object> executeCallInternal(Map<String, ?> args);1496837955;Delegate method to perform the actual call processing.;private Map<String, Object> executeCallInternal(Map<String, ?> args) {_		CallableStatementCreator csc = getCallableStatementFactory().newCallableStatementCreator(args)__		if (logger.isDebugEnabled()) {_			logger.debug("The following parameters are used for call " + getCallString() + " with " + args)__			int i = 1__			for (SqlParameter param : getCallParameters()) {_				logger.debug(i + ": " +  param.getName() + ", SQL type "+ param.getSqlType() + ", type name " +_						param.getTypeName() + ", parameter class [" + param.getClass().getName() + "]")__				i++__			}_		}_		return getJdbcTemplate().call(csc, getCallParameters())__	};delegate,method,to,perform,the,actual,call,processing;private,map,string,object,execute,call,internal,map,string,args,callable,statement,creator,csc,get,callable,statement,factory,new,callable,statement,creator,args,if,logger,is,debug,enabled,logger,debug,the,following,parameters,are,used,for,call,get,call,string,with,args,int,i,1,for,sql,parameter,param,get,call,parameters,logger,debug,i,param,get,name,sql,type,param,get,sql,type,type,name,param,get,type,name,parameter,class,param,get,class,get,name,i,return,get,jdbc,template,call,csc,get,call,parameters
AbstractJdbcCall -> private Map<String, Object> executeCallInternal(Map<String, ?> args);1500448076;Delegate method to perform the actual call processing.;private Map<String, Object> executeCallInternal(Map<String, ?> args) {_		CallableStatementCreator csc = getCallableStatementFactory().newCallableStatementCreator(args)__		if (logger.isDebugEnabled()) {_			logger.debug("The following parameters are used for call " + getCallString() + " with " + args)__			int i = 1__			for (SqlParameter param : getCallParameters()) {_				logger.debug(i + ": " +  param.getName() + ", SQL type "+ param.getSqlType() + ", type name " +_						param.getTypeName() + ", parameter class [" + param.getClass().getName() + "]")__				i++__			}_		}_		return getJdbcTemplate().call(csc, getCallParameters())__	};delegate,method,to,perform,the,actual,call,processing;private,map,string,object,execute,call,internal,map,string,args,callable,statement,creator,csc,get,callable,statement,factory,new,callable,statement,creator,args,if,logger,is,debug,enabled,logger,debug,the,following,parameters,are,used,for,call,get,call,string,with,args,int,i,1,for,sql,parameter,param,get,call,parameters,logger,debug,i,param,get,name,sql,type,param,get,sql,type,type,name,param,get,type,name,parameter,class,param,get,class,get,name,i,return,get,jdbc,template,call,csc,get,call,parameters
AbstractJdbcCall -> private Map<String, Object> executeCallInternal(Map<String, ?> args);1500495740;Delegate method to perform the actual call processing.;private Map<String, Object> executeCallInternal(Map<String, ?> args) {_		CallableStatementCreator csc = getCallableStatementFactory().newCallableStatementCreator(args)__		if (logger.isDebugEnabled()) {_			logger.debug("The following parameters are used for call " + getCallString() + " with " + args)__			int i = 1__			for (SqlParameter param : getCallParameters()) {_				logger.debug(i + ": " +  param.getName() + ", SQL type "+ param.getSqlType() + ", type name " +_						param.getTypeName() + ", parameter class [" + param.getClass().getName() + "]")__				i++__			}_		}_		return getJdbcTemplate().call(csc, getCallParameters())__	};delegate,method,to,perform,the,actual,call,processing;private,map,string,object,execute,call,internal,map,string,args,callable,statement,creator,csc,get,callable,statement,factory,new,callable,statement,creator,args,if,logger,is,debug,enabled,logger,debug,the,following,parameters,are,used,for,call,get,call,string,with,args,int,i,1,for,sql,parameter,param,get,call,parameters,logger,debug,i,param,get,name,sql,type,param,get,sql,type,type,name,param,get,type,name,parameter,class,param,get,class,get,name,i,return,get,jdbc,template,call,csc,get,call,parameters
AbstractJdbcCall -> private Map<String, Object> executeCallInternal(Map<String, ?> args);1520528267;Delegate method to perform the actual call processing.;private Map<String, Object> executeCallInternal(Map<String, ?> args) {_		CallableStatementCreator csc = getCallableStatementFactory().newCallableStatementCreator(args)__		if (logger.isDebugEnabled()) {_			logger.debug("The following parameters are used for call " + getCallString() + " with " + args)__			int i = 1__			for (SqlParameter param : getCallParameters()) {_				logger.debug(i + ": " +  param.getName() + ", SQL type "+ param.getSqlType() + ", type name " +_						param.getTypeName() + ", parameter class [" + param.getClass().getName() + "]")__				i++__			}_		}_		return getJdbcTemplate().call(csc, getCallParameters())__	};delegate,method,to,perform,the,actual,call,processing;private,map,string,object,execute,call,internal,map,string,args,callable,statement,creator,csc,get,callable,statement,factory,new,callable,statement,creator,args,if,logger,is,debug,enabled,logger,debug,the,following,parameters,are,used,for,call,get,call,string,with,args,int,i,1,for,sql,parameter,param,get,call,parameters,logger,debug,i,param,get,name,sql,type,param,get,sql,type,type,name,param,get,type,name,parameter,class,param,get,class,get,name,i,return,get,jdbc,template,call,csc,get,call,parameters
AbstractJdbcCall -> private Map<String, Object> executeCallInternal(Map<String, ?> args);1521457504;Delegate method to perform the actual call processing.;private Map<String, Object> executeCallInternal(Map<String, ?> args) {_		CallableStatementCreator csc = getCallableStatementFactory().newCallableStatementCreator(args)__		if (logger.isDebugEnabled()) {_			logger.debug("The following parameters are used for call " + getCallString() + " with " + args)__			int i = 1__			for (SqlParameter param : getCallParameters()) {_				logger.debug(i + ": " +  param.getName() + ", SQL type "+ param.getSqlType() + ", type name " +_						param.getTypeName() + ", parameter class [" + param.getClass().getName() + "]")__				i++__			}_		}_		return getJdbcTemplate().call(csc, getCallParameters())__	};delegate,method,to,perform,the,actual,call,processing;private,map,string,object,execute,call,internal,map,string,args,callable,statement,creator,csc,get,callable,statement,factory,new,callable,statement,creator,args,if,logger,is,debug,enabled,logger,debug,the,following,parameters,are,used,for,call,get,call,string,with,args,int,i,1,for,sql,parameter,param,get,call,parameters,logger,debug,i,param,get,name,sql,type,param,get,sql,type,type,name,param,get,type,name,parameter,class,param,get,class,get,name,i,return,get,jdbc,template,call,csc,get,call,parameters
AbstractJdbcCall -> private Map<String, Object> executeCallInternal(Map<String, ?> args);1522103912;Delegate method to perform the actual call processing.;private Map<String, Object> executeCallInternal(Map<String, ?> args) {_		CallableStatementCreator csc = getCallableStatementFactory().newCallableStatementCreator(args)__		if (logger.isDebugEnabled()) {_			logger.debug("The following parameters are used for call " + getCallString() + " with " + args)__			int i = 1__			for (SqlParameter param : getCallParameters()) {_				logger.debug(i + ": " +  param.getName() + ", SQL type "+ param.getSqlType() + ", type name " +_						param.getTypeName() + ", parameter class [" + param.getClass().getName() + "]")__				i++__			}_		}_		return getJdbcTemplate().call(csc, getCallParameters())__	};delegate,method,to,perform,the,actual,call,processing;private,map,string,object,execute,call,internal,map,string,args,callable,statement,creator,csc,get,callable,statement,factory,new,callable,statement,creator,args,if,logger,is,debug,enabled,logger,debug,the,following,parameters,are,used,for,call,get,call,string,with,args,int,i,1,for,sql,parameter,param,get,call,parameters,logger,debug,i,param,get,name,sql,type,param,get,sql,type,type,name,param,get,type,name,parameter,class,param,get,class,get,name,i,return,get,jdbc,template,call,csc,get,call,parameters
AbstractJdbcCall -> private Map<String, Object> executeCallInternal(Map<String, ?> args);1530174524;Delegate method to perform the actual call processing.;private Map<String, Object> executeCallInternal(Map<String, ?> args) {_		CallableStatementCreator csc = getCallableStatementFactory().newCallableStatementCreator(args)__		if (logger.isDebugEnabled()) {_			logger.debug("The following parameters are used for call " + getCallString() + " with " + args)__			int i = 1__			for (SqlParameter param : getCallParameters()) {_				logger.debug(i + ": " +  param.getName() + ", SQL type "+ param.getSqlType() + ", type name " +_						param.getTypeName() + ", parameter class [" + param.getClass().getName() + "]")__				i++__			}_		}_		return getJdbcTemplate().call(csc, getCallParameters())__	};delegate,method,to,perform,the,actual,call,processing;private,map,string,object,execute,call,internal,map,string,args,callable,statement,creator,csc,get,callable,statement,factory,new,callable,statement,creator,args,if,logger,is,debug,enabled,logger,debug,the,following,parameters,are,used,for,call,get,call,string,with,args,int,i,1,for,sql,parameter,param,get,call,parameters,logger,debug,i,param,get,name,sql,type,param,get,sql,type,type,name,param,get,type,name,parameter,class,param,get,class,get,name,i,return,get,jdbc,template,call,csc,get,call,parameters
AbstractJdbcCall -> private Map<String, Object> executeCallInternal(Map<String, ?> params);1328020251;Method to perform the actual call processing;private Map<String, Object> executeCallInternal(Map<String, ?> params) {_		CallableStatementCreator csc = getCallableStatementFactory().newCallableStatementCreator(params)__		if (logger.isDebugEnabled()) {_			logger.debug("The following parameters are used for call " + getCallString() + " with: " + params)__			int i = 1__			for (SqlParameter p : getCallParameters()) {_				logger.debug(i++ + ": " +  p.getName() + " SQL Type "+ p.getSqlType() + " Type Name " + p.getTypeName() + " " + p.getClass().getName())__			}_		}_		return getJdbcTemplate().call(csc, getCallParameters())__	};method,to,perform,the,actual,call,processing;private,map,string,object,execute,call,internal,map,string,params,callable,statement,creator,csc,get,callable,statement,factory,new,callable,statement,creator,params,if,logger,is,debug,enabled,logger,debug,the,following,parameters,are,used,for,call,get,call,string,with,params,int,i,1,for,sql,parameter,p,get,call,parameters,logger,debug,i,p,get,name,sql,type,p,get,sql,type,type,name,p,get,type,name,p,get,class,get,name,return,get,jdbc,template,call,csc,get,call,parameters
AbstractJdbcCall -> private Map<String, Object> executeCallInternal(Map<String, ?> params);1356735495;Method to perform the actual call processing;private Map<String, Object> executeCallInternal(Map<String, ?> params) {_		CallableStatementCreator csc = getCallableStatementFactory().newCallableStatementCreator(params)__		if (logger.isDebugEnabled()) {_			logger.debug("The following parameters are used for call " + getCallString() + " with: " + params)__			int i = 1__			for (SqlParameter p : getCallParameters()) {_				logger.debug(i++ + ": " +  p.getName() + " SQL Type "+ p.getSqlType() + " Type Name " + p.getTypeName() + " " + p.getClass().getName())__			}_		}_		return getJdbcTemplate().call(csc, getCallParameters())__	};method,to,perform,the,actual,call,processing;private,map,string,object,execute,call,internal,map,string,params,callable,statement,creator,csc,get,callable,statement,factory,new,callable,statement,creator,params,if,logger,is,debug,enabled,logger,debug,the,following,parameters,are,used,for,call,get,call,string,with,params,int,i,1,for,sql,parameter,p,get,call,parameters,logger,debug,i,p,get,name,sql,type,p,get,sql,type,type,name,p,get,type,name,p,get,class,get,name,return,get,jdbc,template,call,csc,get,call,parameters
AbstractJdbcCall -> private Map<String, Object> executeCallInternal(Map<String, ?> params);1362408075;Method to perform the actual call processing;private Map<String, Object> executeCallInternal(Map<String, ?> params) {_		CallableStatementCreator csc = getCallableStatementFactory().newCallableStatementCreator(params)__		if (logger.isDebugEnabled()) {_			logger.debug("The following parameters are used for call " + getCallString() + " with: " + params)__			int i = 1__			for (SqlParameter p : getCallParameters()) {_				logger.debug(i++ + ": " +  p.getName() + " SQL Type "+ p.getSqlType() + " Type Name " + p.getTypeName() + " " + p.getClass().getName())__			}_		}_		return getJdbcTemplate().call(csc, getCallParameters())__	};method,to,perform,the,actual,call,processing;private,map,string,object,execute,call,internal,map,string,params,callable,statement,creator,csc,get,callable,statement,factory,new,callable,statement,creator,params,if,logger,is,debug,enabled,logger,debug,the,following,parameters,are,used,for,call,get,call,string,with,params,int,i,1,for,sql,parameter,p,get,call,parameters,logger,debug,i,p,get,name,sql,type,p,get,sql,type,type,name,p,get,type,name,p,get,class,get,name,return,get,jdbc,template,call,csc,get,call,parameters
AbstractJdbcCall -> private Map<String, Object> executeCallInternal(Map<String, ?> params);1367508310;Method to perform the actual call processing;private Map<String, Object> executeCallInternal(Map<String, ?> params) {_		CallableStatementCreator csc = getCallableStatementFactory().newCallableStatementCreator(params)__		if (logger.isDebugEnabled()) {_			logger.debug("The following parameters are used for call " + getCallString() + " with: " + params)__			int i = 1__			for (SqlParameter p : getCallParameters()) {_				logger.debug(i++ + ": " +  p.getName() + " SQL Type "+ p.getSqlType() + " Type Name " + p.getTypeName() + " " + p.getClass().getName())__			}_		}_		return getJdbcTemplate().call(csc, getCallParameters())__	};method,to,perform,the,actual,call,processing;private,map,string,object,execute,call,internal,map,string,params,callable,statement,creator,csc,get,callable,statement,factory,new,callable,statement,creator,params,if,logger,is,debug,enabled,logger,debug,the,following,parameters,are,used,for,call,get,call,string,with,params,int,i,1,for,sql,parameter,p,get,call,parameters,logger,debug,i,p,get,name,sql,type,p,get,sql,type,type,name,p,get,type,name,p,get,class,get,name,return,get,jdbc,template,call,csc,get,call,parameters
AbstractJdbcCall -> private Map<String, Object> executeCallInternal(Map<String, ?> params);1385412762;Method to perform the actual call processing;private Map<String, Object> executeCallInternal(Map<String, ?> params) {_		CallableStatementCreator csc = getCallableStatementFactory().newCallableStatementCreator(params)__		if (logger.isDebugEnabled()) {_			logger.debug("The following parameters are used for call " + getCallString() + " with: " + params)__			int i = 1__			for (SqlParameter p : getCallParameters()) {_				logger.debug(i++ + ": " +  p.getName() + " SQL Type "+ p.getSqlType() + " Type Name " + p.getTypeName() + " " + p.getClass().getName())__			}_		}_		return getJdbcTemplate().call(csc, getCallParameters())__	};method,to,perform,the,actual,call,processing;private,map,string,object,execute,call,internal,map,string,params,callable,statement,creator,csc,get,callable,statement,factory,new,callable,statement,creator,params,if,logger,is,debug,enabled,logger,debug,the,following,parameters,are,used,for,call,get,call,string,with,params,int,i,1,for,sql,parameter,p,get,call,parameters,logger,debug,i,p,get,name,sql,type,p,get,sql,type,type,name,p,get,type,name,p,get,class,get,name,return,get,jdbc,template,call,csc,get,call,parameters
AbstractJdbcCall -> protected List<SqlParameter> getCallParameters();1328020251;Get a List of all the call parameters to be used for call. This includes any parameters added_based on meta data processing.;protected List<SqlParameter> getCallParameters() {_		return this.callMetaDataContext.getCallParameters()__	};get,a,list,of,all,the,call,parameters,to,be,used,for,call,this,includes,any,parameters,added,based,on,meta,data,processing;protected,list,sql,parameter,get,call,parameters,return,this,call,meta,data,context,get,call,parameters
AbstractJdbcCall -> protected List<SqlParameter> getCallParameters();1356735495;Get a List of all the call parameters to be used for call. This includes any parameters added_based on meta data processing.;protected List<SqlParameter> getCallParameters() {_		return this.callMetaDataContext.getCallParameters()__	};get,a,list,of,all,the,call,parameters,to,be,used,for,call,this,includes,any,parameters,added,based,on,meta,data,processing;protected,list,sql,parameter,get,call,parameters,return,this,call,meta,data,context,get,call,parameters
AbstractJdbcCall -> protected List<SqlParameter> getCallParameters();1362408075;Get a List of all the call parameters to be used for call. This includes any parameters added_based on meta data processing.;protected List<SqlParameter> getCallParameters() {_		return this.callMetaDataContext.getCallParameters()__	};get,a,list,of,all,the,call,parameters,to,be,used,for,call,this,includes,any,parameters,added,based,on,meta,data,processing;protected,list,sql,parameter,get,call,parameters,return,this,call,meta,data,context,get,call,parameters
AbstractJdbcCall -> protected List<SqlParameter> getCallParameters();1367508310;Get a List of all the call parameters to be used for call. This includes any parameters added_based on meta data processing.;protected List<SqlParameter> getCallParameters() {_		return this.callMetaDataContext.getCallParameters()__	};get,a,list,of,all,the,call,parameters,to,be,used,for,call,this,includes,any,parameters,added,based,on,meta,data,processing;protected,list,sql,parameter,get,call,parameters,return,this,call,meta,data,context,get,call,parameters
AbstractJdbcCall -> protected List<SqlParameter> getCallParameters();1385412762;Get a List of all the call parameters to be used for call. This includes any parameters added_based on meta data processing.;protected List<SqlParameter> getCallParameters() {_		return this.callMetaDataContext.getCallParameters()__	};get,a,list,of,all,the,call,parameters,to,be,used,for,call,this,includes,any,parameters,added,based,on,meta,data,processing;protected,list,sql,parameter,get,call,parameters,return,this,call,meta,data,context,get,call,parameters
AbstractJdbcCall -> protected List<SqlParameter> getCallParameters();1407789123;Get a List of all the call parameters to be used for call. This includes any parameters added_based on meta data processing.;protected List<SqlParameter> getCallParameters() {_		return this.callMetaDataContext.getCallParameters()__	};get,a,list,of,all,the,call,parameters,to,be,used,for,call,this,includes,any,parameters,added,based,on,meta,data,processing;protected,list,sql,parameter,get,call,parameters,return,this,call,meta,data,context,get,call,parameters
AbstractJdbcCall -> protected List<SqlParameter> getCallParameters();1416833949;Get a List of all the call parameters to be used for call._This includes any parameters added based on meta data processing.;protected List<SqlParameter> getCallParameters() {_		return this.callMetaDataContext.getCallParameters()__	};get,a,list,of,all,the,call,parameters,to,be,used,for,call,this,includes,any,parameters,added,based,on,meta,data,processing;protected,list,sql,parameter,get,call,parameters,return,this,call,meta,data,context,get,call,parameters
AbstractJdbcCall -> protected List<SqlParameter> getCallParameters();1431676443;Get a List of all the call parameters to be used for call._This includes any parameters added based on meta data processing.;protected List<SqlParameter> getCallParameters() {_		return this.callMetaDataContext.getCallParameters()__	};get,a,list,of,all,the,call,parameters,to,be,used,for,call,this,includes,any,parameters,added,based,on,meta,data,processing;protected,list,sql,parameter,get,call,parameters,return,this,call,meta,data,context,get,call,parameters
AbstractJdbcCall -> protected List<SqlParameter> getCallParameters();1446038912;Get a List of all the call parameters to be used for call._This includes any parameters added based on meta data processing.;protected List<SqlParameter> getCallParameters() {_		return this.callMetaDataContext.getCallParameters()__	};get,a,list,of,all,the,call,parameters,to,be,used,for,call,this,includes,any,parameters,added,based,on,meta,data,processing;protected,list,sql,parameter,get,call,parameters,return,this,call,meta,data,context,get,call,parameters
AbstractJdbcCall -> protected List<SqlParameter> getCallParameters();1446470853;Get a List of all the call parameters to be used for call._This includes any parameters added based on meta data processing.;protected List<SqlParameter> getCallParameters() {_		return this.callMetaDataContext.getCallParameters()__	};get,a,list,of,all,the,call,parameters,to,be,used,for,call,this,includes,any,parameters,added,based,on,meta,data,processing;protected,list,sql,parameter,get,call,parameters,return,this,call,meta,data,context,get,call,parameters
AbstractJdbcCall -> protected List<SqlParameter> getCallParameters();1467730834;Get a List of all the call parameters to be used for call._This includes any parameters added based on meta data processing.;protected List<SqlParameter> getCallParameters() {_		return this.callMetaDataContext.getCallParameters()__	};get,a,list,of,all,the,call,parameters,to,be,used,for,call,this,includes,any,parameters,added,based,on,meta,data,processing;protected,list,sql,parameter,get,call,parameters,return,this,call,meta,data,context,get,call,parameters
AbstractJdbcCall -> protected List<SqlParameter> getCallParameters();1487178248;Get a List of all the call parameters to be used for call._This includes any parameters added based on meta data processing.;protected List<SqlParameter> getCallParameters() {_		return this.callMetaDataContext.getCallParameters()__	};get,a,list,of,all,the,call,parameters,to,be,used,for,call,this,includes,any,parameters,added,based,on,meta,data,processing;protected,list,sql,parameter,get,call,parameters,return,this,call,meta,data,context,get,call,parameters
AbstractJdbcCall -> protected List<SqlParameter> getCallParameters();1496837955;Get a List of all the call parameters to be used for call._This includes any parameters added based on meta data processing.;protected List<SqlParameter> getCallParameters() {_		return this.callMetaDataContext.getCallParameters()__	};get,a,list,of,all,the,call,parameters,to,be,used,for,call,this,includes,any,parameters,added,based,on,meta,data,processing;protected,list,sql,parameter,get,call,parameters,return,this,call,meta,data,context,get,call,parameters
AbstractJdbcCall -> protected List<SqlParameter> getCallParameters();1500448076;Get a List of all the call parameters to be used for call._This includes any parameters added based on meta data processing.;protected List<SqlParameter> getCallParameters() {_		return this.callMetaDataContext.getCallParameters()__	};get,a,list,of,all,the,call,parameters,to,be,used,for,call,this,includes,any,parameters,added,based,on,meta,data,processing;protected,list,sql,parameter,get,call,parameters,return,this,call,meta,data,context,get,call,parameters
AbstractJdbcCall -> protected List<SqlParameter> getCallParameters();1500495740;Get a List of all the call parameters to be used for call._This includes any parameters added based on meta data processing.;protected List<SqlParameter> getCallParameters() {_		return this.callMetaDataContext.getCallParameters()__	};get,a,list,of,all,the,call,parameters,to,be,used,for,call,this,includes,any,parameters,added,based,on,meta,data,processing;protected,list,sql,parameter,get,call,parameters,return,this,call,meta,data,context,get,call,parameters
AbstractJdbcCall -> protected List<SqlParameter> getCallParameters();1520528267;Get a List of all the call parameters to be used for call._This includes any parameters added based on meta data processing.;protected List<SqlParameter> getCallParameters() {_		return this.callMetaDataContext.getCallParameters()__	};get,a,list,of,all,the,call,parameters,to,be,used,for,call,this,includes,any,parameters,added,based,on,meta,data,processing;protected,list,sql,parameter,get,call,parameters,return,this,call,meta,data,context,get,call,parameters
AbstractJdbcCall -> protected List<SqlParameter> getCallParameters();1521457504;Get a List of all the call parameters to be used for call._This includes any parameters added based on meta-data processing.;protected List<SqlParameter> getCallParameters() {_		return this.callMetaDataContext.getCallParameters()__	};get,a,list,of,all,the,call,parameters,to,be,used,for,call,this,includes,any,parameters,added,based,on,meta,data,processing;protected,list,sql,parameter,get,call,parameters,return,this,call,meta,data,context,get,call,parameters
AbstractJdbcCall -> protected List<SqlParameter> getCallParameters();1522103912;Get a List of all the call parameters to be used for call._This includes any parameters added based on meta-data processing.;protected List<SqlParameter> getCallParameters() {_		return this.callMetaDataContext.getCallParameters()__	};get,a,list,of,all,the,call,parameters,to,be,used,for,call,this,includes,any,parameters,added,based,on,meta,data,processing;protected,list,sql,parameter,get,call,parameters,return,this,call,meta,data,context,get,call,parameters
AbstractJdbcCall -> protected List<SqlParameter> getCallParameters();1530174524;Get a List of all the call parameters to be used for call._This includes any parameters added based on meta-data processing.;protected List<SqlParameter> getCallParameters() {_		return this.callMetaDataContext.getCallParameters()__	};get,a,list,of,all,the,call,parameters,to,be,used,for,call,this,includes,any,parameters,added,based,on,meta,data,processing;protected,list,sql,parameter,get,call,parameters,return,this,call,meta,data,context,get,call,parameters
AbstractJdbcCall -> public JdbcTemplate getJdbcTemplate();1328020251;Get the configured {@link JdbcTemplate};public JdbcTemplate getJdbcTemplate() {_		return this.jdbcTemplate__	};get,the,configured,link,jdbc,template;public,jdbc,template,get,jdbc,template,return,this,jdbc,template
AbstractJdbcCall -> public JdbcTemplate getJdbcTemplate();1356735495;Get the configured {@link JdbcTemplate};public JdbcTemplate getJdbcTemplate() {_		return this.jdbcTemplate__	};get,the,configured,link,jdbc,template;public,jdbc,template,get,jdbc,template,return,this,jdbc,template
AbstractJdbcCall -> public JdbcTemplate getJdbcTemplate();1362408075;Get the configured {@link JdbcTemplate}.;public JdbcTemplate getJdbcTemplate() {_		return this.jdbcTemplate__	};get,the,configured,link,jdbc,template;public,jdbc,template,get,jdbc,template,return,this,jdbc,template
AbstractJdbcCall -> public JdbcTemplate getJdbcTemplate();1367508310;Get the configured {@link JdbcTemplate}.;public JdbcTemplate getJdbcTemplate() {_		return this.jdbcTemplate__	};get,the,configured,link,jdbc,template;public,jdbc,template,get,jdbc,template,return,this,jdbc,template
AbstractJdbcCall -> public JdbcTemplate getJdbcTemplate();1385412762;Get the configured {@link JdbcTemplate}.;public JdbcTemplate getJdbcTemplate() {_		return this.jdbcTemplate__	};get,the,configured,link,jdbc,template;public,jdbc,template,get,jdbc,template,return,this,jdbc,template
AbstractJdbcCall -> public JdbcTemplate getJdbcTemplate();1407789123;Get the configured {@link JdbcTemplate}.;public JdbcTemplate getJdbcTemplate() {_		return this.jdbcTemplate__	};get,the,configured,link,jdbc,template;public,jdbc,template,get,jdbc,template,return,this,jdbc,template
AbstractJdbcCall -> public JdbcTemplate getJdbcTemplate();1416833949;Get the configured {@link JdbcTemplate}.;public JdbcTemplate getJdbcTemplate() {_		return this.jdbcTemplate__	};get,the,configured,link,jdbc,template;public,jdbc,template,get,jdbc,template,return,this,jdbc,template
AbstractJdbcCall -> public JdbcTemplate getJdbcTemplate();1431676443;Get the configured {@link JdbcTemplate}.;public JdbcTemplate getJdbcTemplate() {_		return this.jdbcTemplate__	};get,the,configured,link,jdbc,template;public,jdbc,template,get,jdbc,template,return,this,jdbc,template
AbstractJdbcCall -> public JdbcTemplate getJdbcTemplate();1446038912;Get the configured {@link JdbcTemplate}.;public JdbcTemplate getJdbcTemplate() {_		return this.jdbcTemplate__	};get,the,configured,link,jdbc,template;public,jdbc,template,get,jdbc,template,return,this,jdbc,template
AbstractJdbcCall -> public JdbcTemplate getJdbcTemplate();1446470853;Get the configured {@link JdbcTemplate}.;public JdbcTemplate getJdbcTemplate() {_		return this.jdbcTemplate__	};get,the,configured,link,jdbc,template;public,jdbc,template,get,jdbc,template,return,this,jdbc,template
AbstractJdbcCall -> public JdbcTemplate getJdbcTemplate();1467730834;Get the configured {@link JdbcTemplate}.;public JdbcTemplate getJdbcTemplate() {_		return this.jdbcTemplate__	};get,the,configured,link,jdbc,template;public,jdbc,template,get,jdbc,template,return,this,jdbc,template
AbstractJdbcCall -> public JdbcTemplate getJdbcTemplate();1487178248;Get the configured {@link JdbcTemplate}.;public JdbcTemplate getJdbcTemplate() {_		return this.jdbcTemplate__	};get,the,configured,link,jdbc,template;public,jdbc,template,get,jdbc,template,return,this,jdbc,template
AbstractJdbcCall -> public JdbcTemplate getJdbcTemplate();1496837955;Get the configured {@link JdbcTemplate}.;public JdbcTemplate getJdbcTemplate() {_		return this.jdbcTemplate__	};get,the,configured,link,jdbc,template;public,jdbc,template,get,jdbc,template,return,this,jdbc,template
AbstractJdbcCall -> public JdbcTemplate getJdbcTemplate();1500448076;Get the configured {@link JdbcTemplate}.;public JdbcTemplate getJdbcTemplate() {_		return this.jdbcTemplate__	};get,the,configured,link,jdbc,template;public,jdbc,template,get,jdbc,template,return,this,jdbc,template
AbstractJdbcCall -> public JdbcTemplate getJdbcTemplate();1500495740;Get the configured {@link JdbcTemplate}.;public JdbcTemplate getJdbcTemplate() {_		return this.jdbcTemplate__	};get,the,configured,link,jdbc,template;public,jdbc,template,get,jdbc,template,return,this,jdbc,template
AbstractJdbcCall -> public JdbcTemplate getJdbcTemplate();1520528267;Get the configured {@link JdbcTemplate}.;public JdbcTemplate getJdbcTemplate() {_		return this.jdbcTemplate__	};get,the,configured,link,jdbc,template;public,jdbc,template,get,jdbc,template,return,this,jdbc,template
AbstractJdbcCall -> public JdbcTemplate getJdbcTemplate();1521457504;Get the configured {@link JdbcTemplate}.;public JdbcTemplate getJdbcTemplate() {_		return this.jdbcTemplate__	};get,the,configured,link,jdbc,template;public,jdbc,template,get,jdbc,template,return,this,jdbc,template
AbstractJdbcCall -> public JdbcTemplate getJdbcTemplate();1522103912;Get the configured {@link JdbcTemplate}.;public JdbcTemplate getJdbcTemplate() {_		return this.jdbcTemplate__	};get,the,configured,link,jdbc,template;public,jdbc,template,get,jdbc,template,return,this,jdbc,template
AbstractJdbcCall -> public JdbcTemplate getJdbcTemplate();1530174524;Get the configured {@link JdbcTemplate}.;public JdbcTemplate getJdbcTemplate() {_		return this.jdbcTemplate__	};get,the,configured,link,jdbc,template;public,jdbc,template,get,jdbc,template,return,this,jdbc,template
AbstractJdbcCall -> public void setSchemaName(@Nullable String schemaName);1500448076;Set the schema name to use.;public void setSchemaName(@Nullable String schemaName) {_		this.callMetaDataContext.setSchemaName(schemaName)__	};set,the,schema,name,to,use;public,void,set,schema,name,nullable,string,schema,name,this,call,meta,data,context,set,schema,name,schema,name
AbstractJdbcCall -> public void setSchemaName(@Nullable String schemaName);1500495740;Set the schema name to use.;public void setSchemaName(@Nullable String schemaName) {_		this.callMetaDataContext.setSchemaName(schemaName)__	};set,the,schema,name,to,use;public,void,set,schema,name,nullable,string,schema,name,this,call,meta,data,context,set,schema,name,schema,name
AbstractJdbcCall -> public void setSchemaName(@Nullable String schemaName);1520528267;Set the schema name to use.;public void setSchemaName(@Nullable String schemaName) {_		this.callMetaDataContext.setSchemaName(schemaName)__	};set,the,schema,name,to,use;public,void,set,schema,name,nullable,string,schema,name,this,call,meta,data,context,set,schema,name,schema,name
AbstractJdbcCall -> public void setSchemaName(@Nullable String schemaName);1521457504;Set the schema name to use.;public void setSchemaName(@Nullable String schemaName) {_		this.callMetaDataContext.setSchemaName(schemaName)__	};set,the,schema,name,to,use;public,void,set,schema,name,nullable,string,schema,name,this,call,meta,data,context,set,schema,name,schema,name
AbstractJdbcCall -> public void setSchemaName(@Nullable String schemaName);1522103912;Set the schema name to use.;public void setSchemaName(@Nullable String schemaName) {_		this.callMetaDataContext.setSchemaName(schemaName)__	};set,the,schema,name,to,use;public,void,set,schema,name,nullable,string,schema,name,this,call,meta,data,context,set,schema,name,schema,name
AbstractJdbcCall -> public void setSchemaName(@Nullable String schemaName);1530174524;Set the schema name to use.;public void setSchemaName(@Nullable String schemaName) {_		this.callMetaDataContext.setSchemaName(schemaName)__	};set,the,schema,name,to,use;public,void,set,schema,name,nullable,string,schema,name,this,call,meta,data,context,set,schema,name,schema,name
AbstractJdbcCall -> public void setCatalogName(@Nullable String catalogName);1500448076;Set the catalog name to use.;public void setCatalogName(@Nullable String catalogName) {_		this.callMetaDataContext.setCatalogName(catalogName)__	};set,the,catalog,name,to,use;public,void,set,catalog,name,nullable,string,catalog,name,this,call,meta,data,context,set,catalog,name,catalog,name
AbstractJdbcCall -> public void setCatalogName(@Nullable String catalogName);1500495740;Set the catalog name to use.;public void setCatalogName(@Nullable String catalogName) {_		this.callMetaDataContext.setCatalogName(catalogName)__	};set,the,catalog,name,to,use;public,void,set,catalog,name,nullable,string,catalog,name,this,call,meta,data,context,set,catalog,name,catalog,name
AbstractJdbcCall -> public void setCatalogName(@Nullable String catalogName);1520528267;Set the catalog name to use.;public void setCatalogName(@Nullable String catalogName) {_		this.callMetaDataContext.setCatalogName(catalogName)__	};set,the,catalog,name,to,use;public,void,set,catalog,name,nullable,string,catalog,name,this,call,meta,data,context,set,catalog,name,catalog,name
AbstractJdbcCall -> public void setCatalogName(@Nullable String catalogName);1521457504;Set the catalog name to use.;public void setCatalogName(@Nullable String catalogName) {_		this.callMetaDataContext.setCatalogName(catalogName)__	};set,the,catalog,name,to,use;public,void,set,catalog,name,nullable,string,catalog,name,this,call,meta,data,context,set,catalog,name,catalog,name
AbstractJdbcCall -> public void setCatalogName(@Nullable String catalogName);1522103912;Set the catalog name to use.;public void setCatalogName(@Nullable String catalogName) {_		this.callMetaDataContext.setCatalogName(catalogName)__	};set,the,catalog,name,to,use;public,void,set,catalog,name,nullable,string,catalog,name,this,call,meta,data,context,set,catalog,name,catalog,name
AbstractJdbcCall -> public void setCatalogName(@Nullable String catalogName);1530174524;Set the catalog name to use.;public void setCatalogName(@Nullable String catalogName) {_		this.callMetaDataContext.setCatalogName(catalogName)__	};set,the,catalog,name,to,use;public,void,set,catalog,name,nullable,string,catalog,name,this,call,meta,data,context,set,catalog,name,catalog,name
AbstractJdbcCall -> protected void onCompileInternal();1328020251;Hook method that subclasses may override to react to compilation._This implementation does nothing.;protected void onCompileInternal() {_	};hook,method,that,subclasses,may,override,to,react,to,compilation,this,implementation,does,nothing;protected,void,on,compile,internal
AbstractJdbcCall -> protected void onCompileInternal();1356735495;Hook method that subclasses may override to react to compilation._This implementation does nothing.;protected void onCompileInternal() {_	};hook,method,that,subclasses,may,override,to,react,to,compilation,this,implementation,does,nothing;protected,void,on,compile,internal
AbstractJdbcCall -> protected void onCompileInternal();1362408075;Hook method that subclasses may override to react to compilation._This implementation does nothing.;protected void onCompileInternal() {_	};hook,method,that,subclasses,may,override,to,react,to,compilation,this,implementation,does,nothing;protected,void,on,compile,internal
AbstractJdbcCall -> protected void onCompileInternal();1367508310;Hook method that subclasses may override to react to compilation._This implementation does nothing.;protected void onCompileInternal() {_	};hook,method,that,subclasses,may,override,to,react,to,compilation,this,implementation,does,nothing;protected,void,on,compile,internal
AbstractJdbcCall -> protected void onCompileInternal();1385412762;Hook method that subclasses may override to react to compilation._This implementation does nothing.;protected void onCompileInternal() {_	};hook,method,that,subclasses,may,override,to,react,to,compilation,this,implementation,does,nothing;protected,void,on,compile,internal
AbstractJdbcCall -> protected void onCompileInternal();1407789123;Hook method that subclasses may override to react to compilation._This implementation does nothing.;protected void onCompileInternal() {_	};hook,method,that,subclasses,may,override,to,react,to,compilation,this,implementation,does,nothing;protected,void,on,compile,internal
AbstractJdbcCall -> protected void onCompileInternal();1416833949;Hook method that subclasses may override to react to compilation._This implementation does nothing.;protected void onCompileInternal() {_	};hook,method,that,subclasses,may,override,to,react,to,compilation,this,implementation,does,nothing;protected,void,on,compile,internal
AbstractJdbcCall -> protected void onCompileInternal();1431676443;Hook method that subclasses may override to react to compilation._This implementation does nothing.;protected void onCompileInternal() {_	};hook,method,that,subclasses,may,override,to,react,to,compilation,this,implementation,does,nothing;protected,void,on,compile,internal
AbstractJdbcCall -> protected void onCompileInternal();1446038912;Hook method that subclasses may override to react to compilation._This implementation does nothing.;protected void onCompileInternal() {_	};hook,method,that,subclasses,may,override,to,react,to,compilation,this,implementation,does,nothing;protected,void,on,compile,internal
AbstractJdbcCall -> protected void onCompileInternal();1446470853;Hook method that subclasses may override to react to compilation._This implementation does nothing.;protected void onCompileInternal() {_	};hook,method,that,subclasses,may,override,to,react,to,compilation,this,implementation,does,nothing;protected,void,on,compile,internal
AbstractJdbcCall -> protected void onCompileInternal();1467730834;Hook method that subclasses may override to react to compilation._This implementation does nothing.;protected void onCompileInternal() {_	};hook,method,that,subclasses,may,override,to,react,to,compilation,this,implementation,does,nothing;protected,void,on,compile,internal
AbstractJdbcCall -> protected void onCompileInternal();1487178248;Hook method that subclasses may override to react to compilation._This implementation does nothing.;protected void onCompileInternal() {_	};hook,method,that,subclasses,may,override,to,react,to,compilation,this,implementation,does,nothing;protected,void,on,compile,internal
AbstractJdbcCall -> protected void onCompileInternal();1496837955;Hook method that subclasses may override to react to compilation._This implementation does nothing.;protected void onCompileInternal() {_	};hook,method,that,subclasses,may,override,to,react,to,compilation,this,implementation,does,nothing;protected,void,on,compile,internal
AbstractJdbcCall -> protected void onCompileInternal();1500448076;Hook method that subclasses may override to react to compilation._This implementation does nothing.;protected void onCompileInternal() {_	};hook,method,that,subclasses,may,override,to,react,to,compilation,this,implementation,does,nothing;protected,void,on,compile,internal
AbstractJdbcCall -> protected void onCompileInternal();1500495740;Hook method that subclasses may override to react to compilation._This implementation does nothing.;protected void onCompileInternal() {_	};hook,method,that,subclasses,may,override,to,react,to,compilation,this,implementation,does,nothing;protected,void,on,compile,internal
AbstractJdbcCall -> protected void onCompileInternal();1520528267;Hook method that subclasses may override to react to compilation._This implementation does nothing.;protected void onCompileInternal() {_	};hook,method,that,subclasses,may,override,to,react,to,compilation,this,implementation,does,nothing;protected,void,on,compile,internal
AbstractJdbcCall -> protected void onCompileInternal();1521457504;Hook method that subclasses may override to react to compilation._This implementation does nothing.;protected void onCompileInternal() {_	};hook,method,that,subclasses,may,override,to,react,to,compilation,this,implementation,does,nothing;protected,void,on,compile,internal
AbstractJdbcCall -> protected void onCompileInternal();1522103912;Hook method that subclasses may override to react to compilation._This implementation does nothing.;protected void onCompileInternal() {_	};hook,method,that,subclasses,may,override,to,react,to,compilation,this,implementation,does,nothing;protected,void,on,compile,internal
AbstractJdbcCall -> protected void onCompileInternal();1530174524;Hook method that subclasses may override to react to compilation._This implementation does nothing.;protected void onCompileInternal() {_	};hook,method,that,subclasses,may,override,to,react,to,compilation,this,implementation,does,nothing;protected,void,on,compile,internal
AbstractJdbcCall -> private Map<String, ?> matchInParameterValuesWithCallParameters(Object[] args);1328020251;Match the provided in parameter values with registered parameters and_parameters defined via metadata processing._@param args the parameter values provided as an array_@return Map with parameter names and values;private Map<String, ?> matchInParameterValuesWithCallParameters(Object[] args) {_		return this.callMetaDataContext.matchInParameterValuesWithCallParameters(args)__	};match,the,provided,in,parameter,values,with,registered,parameters,and,parameters,defined,via,metadata,processing,param,args,the,parameter,values,provided,as,an,array,return,map,with,parameter,names,and,values;private,map,string,match,in,parameter,values,with,call,parameters,object,args,return,this,call,meta,data,context,match,in,parameter,values,with,call,parameters,args
AbstractJdbcCall -> private Map<String, ?> matchInParameterValuesWithCallParameters(Object[] args);1356735495;Match the provided in parameter values with registered parameters and_parameters defined via metadata processing._@param args the parameter values provided as an array_@return Map with parameter names and values;private Map<String, ?> matchInParameterValuesWithCallParameters(Object[] args) {_		return this.callMetaDataContext.matchInParameterValuesWithCallParameters(args)__	};match,the,provided,in,parameter,values,with,registered,parameters,and,parameters,defined,via,metadata,processing,param,args,the,parameter,values,provided,as,an,array,return,map,with,parameter,names,and,values;private,map,string,match,in,parameter,values,with,call,parameters,object,args,return,this,call,meta,data,context,match,in,parameter,values,with,call,parameters,args
AbstractJdbcCall -> private Map<String, ?> matchInParameterValuesWithCallParameters(Object[] args);1362408075;Match the provided in parameter values with registered parameters and_parameters defined via metadata processing._@param args the parameter values provided as an array_@return Map with parameter names and values;private Map<String, ?> matchInParameterValuesWithCallParameters(Object[] args) {_		return this.callMetaDataContext.matchInParameterValuesWithCallParameters(args)__	};match,the,provided,in,parameter,values,with,registered,parameters,and,parameters,defined,via,metadata,processing,param,args,the,parameter,values,provided,as,an,array,return,map,with,parameter,names,and,values;private,map,string,match,in,parameter,values,with,call,parameters,object,args,return,this,call,meta,data,context,match,in,parameter,values,with,call,parameters,args
AbstractJdbcCall -> private Map<String, ?> matchInParameterValuesWithCallParameters(Object[] args);1367508310;Match the provided in parameter values with registered parameters and_parameters defined via metadata processing._@param args the parameter values provided as an array_@return Map with parameter names and values;private Map<String, ?> matchInParameterValuesWithCallParameters(Object[] args) {_		return this.callMetaDataContext.matchInParameterValuesWithCallParameters(args)__	};match,the,provided,in,parameter,values,with,registered,parameters,and,parameters,defined,via,metadata,processing,param,args,the,parameter,values,provided,as,an,array,return,map,with,parameter,names,and,values;private,map,string,match,in,parameter,values,with,call,parameters,object,args,return,this,call,meta,data,context,match,in,parameter,values,with,call,parameters,args
AbstractJdbcCall -> private Map<String, ?> matchInParameterValuesWithCallParameters(Object[] args);1385412762;Match the provided in parameter values with registered parameters and_parameters defined via metadata processing._@param args the parameter values provided as an array_@return Map with parameter names and values;private Map<String, ?> matchInParameterValuesWithCallParameters(Object[] args) {_		return this.callMetaDataContext.matchInParameterValuesWithCallParameters(args)__	};match,the,provided,in,parameter,values,with,registered,parameters,and,parameters,defined,via,metadata,processing,param,args,the,parameter,values,provided,as,an,array,return,map,with,parameter,names,and,values;private,map,string,match,in,parameter,values,with,call,parameters,object,args,return,this,call,meta,data,context,match,in,parameter,values,with,call,parameters,args
AbstractJdbcCall -> private Map<String, ?> matchInParameterValuesWithCallParameters(Object[] args);1407789123;Match the provided in parameter values with registered parameters and_parameters defined via metadata processing._@param args the parameter values provided as an array_@return Map with parameter names and values;private Map<String, ?> matchInParameterValuesWithCallParameters(Object[] args) {_		return this.callMetaDataContext.matchInParameterValuesWithCallParameters(args)__	};match,the,provided,in,parameter,values,with,registered,parameters,and,parameters,defined,via,metadata,processing,param,args,the,parameter,values,provided,as,an,array,return,map,with,parameter,names,and,values;private,map,string,match,in,parameter,values,with,call,parameters,object,args,return,this,call,meta,data,context,match,in,parameter,values,with,call,parameters,args
AbstractJdbcCall -> private Map<String, ?> matchInParameterValuesWithCallParameters(Object[] args);1416833949;Match the provided in parameter values with registered parameters and_parameters defined via metadata processing._@param args the parameter values provided as an array_@return Map with parameter names and values;private Map<String, ?> matchInParameterValuesWithCallParameters(Object[] args) {_		return this.callMetaDataContext.matchInParameterValuesWithCallParameters(args)__	};match,the,provided,in,parameter,values,with,registered,parameters,and,parameters,defined,via,metadata,processing,param,args,the,parameter,values,provided,as,an,array,return,map,with,parameter,names,and,values;private,map,string,match,in,parameter,values,with,call,parameters,object,args,return,this,call,meta,data,context,match,in,parameter,values,with,call,parameters,args
AbstractJdbcCall -> private Map<String, ?> matchInParameterValuesWithCallParameters(Object[] args);1431676443;Match the provided in parameter values with registered parameters and_parameters defined via metadata processing._@param args the parameter values provided as an array_@return Map with parameter names and values;private Map<String, ?> matchInParameterValuesWithCallParameters(Object[] args) {_		return this.callMetaDataContext.matchInParameterValuesWithCallParameters(args)__	};match,the,provided,in,parameter,values,with,registered,parameters,and,parameters,defined,via,metadata,processing,param,args,the,parameter,values,provided,as,an,array,return,map,with,parameter,names,and,values;private,map,string,match,in,parameter,values,with,call,parameters,object,args,return,this,call,meta,data,context,match,in,parameter,values,with,call,parameters,args
AbstractJdbcCall -> private Map<String, ?> matchInParameterValuesWithCallParameters(Object[] args);1446038912;Match the provided in parameter values with registered parameters and_parameters defined via metadata processing._@param args the parameter values provided as an array_@return Map with parameter names and values;private Map<String, ?> matchInParameterValuesWithCallParameters(Object[] args) {_		return this.callMetaDataContext.matchInParameterValuesWithCallParameters(args)__	};match,the,provided,in,parameter,values,with,registered,parameters,and,parameters,defined,via,metadata,processing,param,args,the,parameter,values,provided,as,an,array,return,map,with,parameter,names,and,values;private,map,string,match,in,parameter,values,with,call,parameters,object,args,return,this,call,meta,data,context,match,in,parameter,values,with,call,parameters,args
AbstractJdbcCall -> private Map<String, ?> matchInParameterValuesWithCallParameters(Object[] args);1446470853;Match the provided in parameter values with registered parameters and_parameters defined via metadata processing._@param args the parameter values provided as an array_@return Map with parameter names and values;private Map<String, ?> matchInParameterValuesWithCallParameters(Object[] args) {_		return this.callMetaDataContext.matchInParameterValuesWithCallParameters(args)__	};match,the,provided,in,parameter,values,with,registered,parameters,and,parameters,defined,via,metadata,processing,param,args,the,parameter,values,provided,as,an,array,return,map,with,parameter,names,and,values;private,map,string,match,in,parameter,values,with,call,parameters,object,args,return,this,call,meta,data,context,match,in,parameter,values,with,call,parameters,args
AbstractJdbcCall -> private Map<String, ?> matchInParameterValuesWithCallParameters(Object[] args);1467730834;Match the provided in parameter values with registered parameters and_parameters defined via metadata processing._@param args the parameter values provided as an array_@return Map with parameter names and values;private Map<String, ?> matchInParameterValuesWithCallParameters(Object[] args) {_		return this.callMetaDataContext.matchInParameterValuesWithCallParameters(args)__	};match,the,provided,in,parameter,values,with,registered,parameters,and,parameters,defined,via,metadata,processing,param,args,the,parameter,values,provided,as,an,array,return,map,with,parameter,names,and,values;private,map,string,match,in,parameter,values,with,call,parameters,object,args,return,this,call,meta,data,context,match,in,parameter,values,with,call,parameters,args
AbstractJdbcCall -> private Map<String, ?> matchInParameterValuesWithCallParameters(Object[] args);1487178248;Match the provided in parameter values with registered parameters and_parameters defined via metadata processing._@param args the parameter values provided as an array_@return Map with parameter names and values;private Map<String, ?> matchInParameterValuesWithCallParameters(Object[] args) {_		return this.callMetaDataContext.matchInParameterValuesWithCallParameters(args)__	};match,the,provided,in,parameter,values,with,registered,parameters,and,parameters,defined,via,metadata,processing,param,args,the,parameter,values,provided,as,an,array,return,map,with,parameter,names,and,values;private,map,string,match,in,parameter,values,with,call,parameters,object,args,return,this,call,meta,data,context,match,in,parameter,values,with,call,parameters,args
AbstractJdbcCall -> private Map<String, ?> matchInParameterValuesWithCallParameters(Object[] args);1496837955;Match the provided in parameter values with registered parameters and_parameters defined via metadata processing._@param args the parameter values provided as an array_@return Map with parameter names and values;private Map<String, ?> matchInParameterValuesWithCallParameters(Object[] args) {_		return this.callMetaDataContext.matchInParameterValuesWithCallParameters(args)__	};match,the,provided,in,parameter,values,with,registered,parameters,and,parameters,defined,via,metadata,processing,param,args,the,parameter,values,provided,as,an,array,return,map,with,parameter,names,and,values;private,map,string,match,in,parameter,values,with,call,parameters,object,args,return,this,call,meta,data,context,match,in,parameter,values,with,call,parameters,args
AbstractJdbcCall -> private Map<String, ?> matchInParameterValuesWithCallParameters(Object[] args);1500448076;Match the provided in parameter values with registered parameters and_parameters defined via metadata processing._@param args the parameter values provided as an array_@return Map with parameter names and values;private Map<String, ?> matchInParameterValuesWithCallParameters(Object[] args) {_		return this.callMetaDataContext.matchInParameterValuesWithCallParameters(args)__	};match,the,provided,in,parameter,values,with,registered,parameters,and,parameters,defined,via,metadata,processing,param,args,the,parameter,values,provided,as,an,array,return,map,with,parameter,names,and,values;private,map,string,match,in,parameter,values,with,call,parameters,object,args,return,this,call,meta,data,context,match,in,parameter,values,with,call,parameters,args
AbstractJdbcCall -> private Map<String, ?> matchInParameterValuesWithCallParameters(Object[] args);1500495740;Match the provided in parameter values with registered parameters and_parameters defined via metadata processing._@param args the parameter values provided as an array_@return Map with parameter names and values;private Map<String, ?> matchInParameterValuesWithCallParameters(Object[] args) {_		return this.callMetaDataContext.matchInParameterValuesWithCallParameters(args)__	};match,the,provided,in,parameter,values,with,registered,parameters,and,parameters,defined,via,metadata,processing,param,args,the,parameter,values,provided,as,an,array,return,map,with,parameter,names,and,values;private,map,string,match,in,parameter,values,with,call,parameters,object,args,return,this,call,meta,data,context,match,in,parameter,values,with,call,parameters,args
AbstractJdbcCall -> private Map<String, ?> matchInParameterValuesWithCallParameters(Object[] args);1520528267;Match the provided in parameter values with registered parameters and_parameters defined via metadata processing._@param args the parameter values provided as an array_@return Map with parameter names and values;private Map<String, ?> matchInParameterValuesWithCallParameters(Object[] args) {_		return this.callMetaDataContext.matchInParameterValuesWithCallParameters(args)__	};match,the,provided,in,parameter,values,with,registered,parameters,and,parameters,defined,via,metadata,processing,param,args,the,parameter,values,provided,as,an,array,return,map,with,parameter,names,and,values;private,map,string,match,in,parameter,values,with,call,parameters,object,args,return,this,call,meta,data,context,match,in,parameter,values,with,call,parameters,args
AbstractJdbcCall -> private Map<String, ?> matchInParameterValuesWithCallParameters(Object[] args);1521457504;Match the provided in parameter values with registered parameters and_parameters defined via meta-data processing._@param args the parameter values provided as an array_@return Map with parameter names and values;private Map<String, ?> matchInParameterValuesWithCallParameters(Object[] args) {_		return this.callMetaDataContext.matchInParameterValuesWithCallParameters(args)__	};match,the,provided,in,parameter,values,with,registered,parameters,and,parameters,defined,via,meta,data,processing,param,args,the,parameter,values,provided,as,an,array,return,map,with,parameter,names,and,values;private,map,string,match,in,parameter,values,with,call,parameters,object,args,return,this,call,meta,data,context,match,in,parameter,values,with,call,parameters,args
AbstractJdbcCall -> private Map<String, ?> matchInParameterValuesWithCallParameters(Object[] args);1522103912;Match the provided in parameter values with registered parameters and_parameters defined via meta-data processing._@param args the parameter values provided as an array_@return Map with parameter names and values;private Map<String, ?> matchInParameterValuesWithCallParameters(Object[] args) {_		return this.callMetaDataContext.matchInParameterValuesWithCallParameters(args)__	};match,the,provided,in,parameter,values,with,registered,parameters,and,parameters,defined,via,meta,data,processing,param,args,the,parameter,values,provided,as,an,array,return,map,with,parameter,names,and,values;private,map,string,match,in,parameter,values,with,call,parameters,object,args,return,this,call,meta,data,context,match,in,parameter,values,with,call,parameters,args
AbstractJdbcCall -> private Map<String, ?> matchInParameterValuesWithCallParameters(Object[] args);1530174524;Match the provided in parameter values with registered parameters and_parameters defined via meta-data processing._@param args the parameter values provided as an array_@return a Map with parameter names and values;private Map<String, ?> matchInParameterValuesWithCallParameters(Object[] args) {_		return this.callMetaDataContext.matchInParameterValuesWithCallParameters(args)__	};match,the,provided,in,parameter,values,with,registered,parameters,and,parameters,defined,via,meta,data,processing,param,args,the,parameter,values,provided,as,an,array,return,a,map,with,parameter,names,and,values;private,map,string,match,in,parameter,values,with,call,parameters,object,args,return,this,call,meta,data,context,match,in,parameter,values,with,call,parameters,args
AbstractJdbcCall -> public boolean isReturnValueRequired();1328020251;Does the call require a return value?;public boolean isReturnValueRequired() {_		return this.callMetaDataContext.isReturnValueRequired()__	};does,the,call,require,a,return,value;public,boolean,is,return,value,required,return,this,call,meta,data,context,is,return,value,required
AbstractJdbcCall -> public boolean isReturnValueRequired();1356735495;Does the call require a return value?;public boolean isReturnValueRequired() {_		return this.callMetaDataContext.isReturnValueRequired()__	};does,the,call,require,a,return,value;public,boolean,is,return,value,required,return,this,call,meta,data,context,is,return,value,required
AbstractJdbcCall -> public boolean isReturnValueRequired();1362408075;Does the call require a return value?;public boolean isReturnValueRequired() {_		return this.callMetaDataContext.isReturnValueRequired()__	};does,the,call,require,a,return,value;public,boolean,is,return,value,required,return,this,call,meta,data,context,is,return,value,required
AbstractJdbcCall -> public boolean isReturnValueRequired();1367508310;Does the call require a return value?;public boolean isReturnValueRequired() {_		return this.callMetaDataContext.isReturnValueRequired()__	};does,the,call,require,a,return,value;public,boolean,is,return,value,required,return,this,call,meta,data,context,is,return,value,required
AbstractJdbcCall -> public boolean isReturnValueRequired();1385412762;Does the call require a return value?;public boolean isReturnValueRequired() {_		return this.callMetaDataContext.isReturnValueRequired()__	};does,the,call,require,a,return,value;public,boolean,is,return,value,required,return,this,call,meta,data,context,is,return,value,required
AbstractJdbcCall -> public boolean isReturnValueRequired();1407789123;Does the call require a return value?;public boolean isReturnValueRequired() {_		return this.callMetaDataContext.isReturnValueRequired()__	};does,the,call,require,a,return,value;public,boolean,is,return,value,required,return,this,call,meta,data,context,is,return,value,required
AbstractJdbcCall -> public boolean isReturnValueRequired();1416833949;Does the call require a return value?;public boolean isReturnValueRequired() {_		return this.callMetaDataContext.isReturnValueRequired()__	};does,the,call,require,a,return,value;public,boolean,is,return,value,required,return,this,call,meta,data,context,is,return,value,required
AbstractJdbcCall -> public boolean isReturnValueRequired();1431676443;Does the call require a return value?;public boolean isReturnValueRequired() {_		return this.callMetaDataContext.isReturnValueRequired()__	};does,the,call,require,a,return,value;public,boolean,is,return,value,required,return,this,call,meta,data,context,is,return,value,required
AbstractJdbcCall -> public boolean isReturnValueRequired();1446038912;Does the call require a return value?;public boolean isReturnValueRequired() {_		return this.callMetaDataContext.isReturnValueRequired()__	};does,the,call,require,a,return,value;public,boolean,is,return,value,required,return,this,call,meta,data,context,is,return,value,required
AbstractJdbcCall -> public boolean isReturnValueRequired();1446470853;Does the call require a return value?;public boolean isReturnValueRequired() {_		return this.callMetaDataContext.isReturnValueRequired()__	};does,the,call,require,a,return,value;public,boolean,is,return,value,required,return,this,call,meta,data,context,is,return,value,required
AbstractJdbcCall -> public boolean isReturnValueRequired();1467730834;Does the call require a return value?;public boolean isReturnValueRequired() {_		return this.callMetaDataContext.isReturnValueRequired()__	};does,the,call,require,a,return,value;public,boolean,is,return,value,required,return,this,call,meta,data,context,is,return,value,required
AbstractJdbcCall -> public boolean isReturnValueRequired();1487178248;Does the call require a return value?;public boolean isReturnValueRequired() {_		return this.callMetaDataContext.isReturnValueRequired()__	};does,the,call,require,a,return,value;public,boolean,is,return,value,required,return,this,call,meta,data,context,is,return,value,required
AbstractJdbcCall -> public boolean isReturnValueRequired();1496837955;Does the call require a return value?;public boolean isReturnValueRequired() {_		return this.callMetaDataContext.isReturnValueRequired()__	};does,the,call,require,a,return,value;public,boolean,is,return,value,required,return,this,call,meta,data,context,is,return,value,required
AbstractJdbcCall -> public boolean isReturnValueRequired();1500448076;Does the call require a return value?;public boolean isReturnValueRequired() {_		return this.callMetaDataContext.isReturnValueRequired()__	};does,the,call,require,a,return,value;public,boolean,is,return,value,required,return,this,call,meta,data,context,is,return,value,required
AbstractJdbcCall -> public boolean isReturnValueRequired();1500495740;Does the call require a return value?;public boolean isReturnValueRequired() {_		return this.callMetaDataContext.isReturnValueRequired()__	};does,the,call,require,a,return,value;public,boolean,is,return,value,required,return,this,call,meta,data,context,is,return,value,required
AbstractJdbcCall -> public boolean isReturnValueRequired();1520528267;Does the call require a return value?;public boolean isReturnValueRequired() {_		return this.callMetaDataContext.isReturnValueRequired()__	};does,the,call,require,a,return,value;public,boolean,is,return,value,required,return,this,call,meta,data,context,is,return,value,required
AbstractJdbcCall -> public boolean isReturnValueRequired();1521457504;Does the call require a return value?;public boolean isReturnValueRequired() {_		return this.callMetaDataContext.isReturnValueRequired()__	};does,the,call,require,a,return,value;public,boolean,is,return,value,required,return,this,call,meta,data,context,is,return,value,required
AbstractJdbcCall -> public boolean isReturnValueRequired();1522103912;Does the call require a return value?;public boolean isReturnValueRequired() {_		return this.callMetaDataContext.isReturnValueRequired()__	};does,the,call,require,a,return,value;public,boolean,is,return,value,required,return,this,call,meta,data,context,is,return,value,required
AbstractJdbcCall -> public boolean isReturnValueRequired();1530174524;Does the call require a return value?;public boolean isReturnValueRequired() {_		return this.callMetaDataContext.isReturnValueRequired()__	};does,the,call,require,a,return,value;public,boolean,is,return,value,required,return,this,call,meta,data,context,is,return,value,required
AbstractJdbcCall -> protected CallableStatementCreatorFactory getCallableStatementFactory();1328020251;Get the {@link CallableStatementCreatorFactory} being used;protected CallableStatementCreatorFactory getCallableStatementFactory() {_		return this.callableStatementFactory__	};get,the,link,callable,statement,creator,factory,being,used;protected,callable,statement,creator,factory,get,callable,statement,factory,return,this,callable,statement,factory
AbstractJdbcCall -> protected CallableStatementCreatorFactory getCallableStatementFactory();1356735495;Get the {@link CallableStatementCreatorFactory} being used;protected CallableStatementCreatorFactory getCallableStatementFactory() {_		return this.callableStatementFactory__	};get,the,link,callable,statement,creator,factory,being,used;protected,callable,statement,creator,factory,get,callable,statement,factory,return,this,callable,statement,factory
AbstractJdbcCall -> protected CallableStatementCreatorFactory getCallableStatementFactory();1362408075;Get the {@link CallableStatementCreatorFactory} being used;protected CallableStatementCreatorFactory getCallableStatementFactory() {_		return this.callableStatementFactory__	};get,the,link,callable,statement,creator,factory,being,used;protected,callable,statement,creator,factory,get,callable,statement,factory,return,this,callable,statement,factory
AbstractJdbcCall -> protected CallableStatementCreatorFactory getCallableStatementFactory();1367508310;Get the {@link CallableStatementCreatorFactory} being used;protected CallableStatementCreatorFactory getCallableStatementFactory() {_		return this.callableStatementFactory__	};get,the,link,callable,statement,creator,factory,being,used;protected,callable,statement,creator,factory,get,callable,statement,factory,return,this,callable,statement,factory
AbstractJdbcCall -> protected CallableStatementCreatorFactory getCallableStatementFactory();1385412762;Get the {@link CallableStatementCreatorFactory} being used;protected CallableStatementCreatorFactory getCallableStatementFactory() {_		return this.callableStatementFactory__	};get,the,link,callable,statement,creator,factory,being,used;protected,callable,statement,creator,factory,get,callable,statement,factory,return,this,callable,statement,factory
AbstractJdbcCall -> protected CallableStatementCreatorFactory getCallableStatementFactory();1407789123;Get the {@link CallableStatementCreatorFactory} being used;protected CallableStatementCreatorFactory getCallableStatementFactory() {_		return this.callableStatementFactory__	};get,the,link,callable,statement,creator,factory,being,used;protected,callable,statement,creator,factory,get,callable,statement,factory,return,this,callable,statement,factory
AbstractJdbcCall -> protected CallableStatementCreatorFactory getCallableStatementFactory();1416833949;Get the {@link CallableStatementCreatorFactory} being used;protected CallableStatementCreatorFactory getCallableStatementFactory() {_		return this.callableStatementFactory__	};get,the,link,callable,statement,creator,factory,being,used;protected,callable,statement,creator,factory,get,callable,statement,factory,return,this,callable,statement,factory
AbstractJdbcCall -> protected CallableStatementCreatorFactory getCallableStatementFactory();1431676443;Get the {@link CallableStatementCreatorFactory} being used;protected CallableStatementCreatorFactory getCallableStatementFactory() {_		return this.callableStatementFactory__	};get,the,link,callable,statement,creator,factory,being,used;protected,callable,statement,creator,factory,get,callable,statement,factory,return,this,callable,statement,factory
AbstractJdbcCall -> protected CallableStatementCreatorFactory getCallableStatementFactory();1446038912;Get the {@link CallableStatementCreatorFactory} being used;protected CallableStatementCreatorFactory getCallableStatementFactory() {_		return this.callableStatementFactory__	};get,the,link,callable,statement,creator,factory,being,used;protected,callable,statement,creator,factory,get,callable,statement,factory,return,this,callable,statement,factory
AbstractJdbcCall -> protected CallableStatementCreatorFactory getCallableStatementFactory();1446470853;Get the {@link CallableStatementCreatorFactory} being used;protected CallableStatementCreatorFactory getCallableStatementFactory() {_		return this.callableStatementFactory__	};get,the,link,callable,statement,creator,factory,being,used;protected,callable,statement,creator,factory,get,callable,statement,factory,return,this,callable,statement,factory
AbstractJdbcCall -> protected CallableStatementCreatorFactory getCallableStatementFactory();1467730834;Get the {@link CallableStatementCreatorFactory} being used;protected CallableStatementCreatorFactory getCallableStatementFactory() {_		return this.callableStatementFactory__	};get,the,link,callable,statement,creator,factory,being,used;protected,callable,statement,creator,factory,get,callable,statement,factory,return,this,callable,statement,factory
AbstractJdbcCall -> protected CallableStatementCreatorFactory getCallableStatementFactory();1487178248;Get the {@link CallableStatementCreatorFactory} being used;protected CallableStatementCreatorFactory getCallableStatementFactory() {_		return this.callableStatementFactory__	};get,the,link,callable,statement,creator,factory,being,used;protected,callable,statement,creator,factory,get,callable,statement,factory,return,this,callable,statement,factory
AbstractJdbcCall -> protected CallableStatementCreatorFactory getCallableStatementFactory();1496837955;Get the {@link CallableStatementCreatorFactory} being used;protected CallableStatementCreatorFactory getCallableStatementFactory() {_		return this.callableStatementFactory__	};get,the,link,callable,statement,creator,factory,being,used;protected,callable,statement,creator,factory,get,callable,statement,factory,return,this,callable,statement,factory
AbstractJdbcCall -> protected CallableStatementCreatorFactory getCallableStatementFactory();1500448076;Get the {@link CallableStatementCreatorFactory} being used;protected CallableStatementCreatorFactory getCallableStatementFactory() {_		return this.callableStatementFactory__	};get,the,link,callable,statement,creator,factory,being,used;protected,callable,statement,creator,factory,get,callable,statement,factory,return,this,callable,statement,factory
AbstractJdbcCall -> protected CallableStatementCreatorFactory getCallableStatementFactory();1500495740;Get the {@link CallableStatementCreatorFactory} being used;protected CallableStatementCreatorFactory getCallableStatementFactory() {_		Assert.state(this.callableStatementFactory != null, "No CallableStatementCreatorFactory available")__		return this.callableStatementFactory__	};get,the,link,callable,statement,creator,factory,being,used;protected,callable,statement,creator,factory,get,callable,statement,factory,assert,state,this,callable,statement,factory,null,no,callable,statement,creator,factory,available,return,this,callable,statement,factory
AbstractJdbcCall -> protected CallableStatementCreatorFactory getCallableStatementFactory();1520528267;Get the {@link CallableStatementCreatorFactory} being used;protected CallableStatementCreatorFactory getCallableStatementFactory() {_		Assert.state(this.callableStatementFactory != null, "No CallableStatementCreatorFactory available")__		return this.callableStatementFactory__	};get,the,link,callable,statement,creator,factory,being,used;protected,callable,statement,creator,factory,get,callable,statement,factory,assert,state,this,callable,statement,factory,null,no,callable,statement,creator,factory,available,return,this,callable,statement,factory
AbstractJdbcCall -> protected CallableStatementCreatorFactory getCallableStatementFactory();1521457504;Get the {@link CallableStatementCreatorFactory} being used;protected CallableStatementCreatorFactory getCallableStatementFactory() {_		Assert.state(this.callableStatementFactory != null, "No CallableStatementCreatorFactory available")__		return this.callableStatementFactory__	};get,the,link,callable,statement,creator,factory,being,used;protected,callable,statement,creator,factory,get,callable,statement,factory,assert,state,this,callable,statement,factory,null,no,callable,statement,creator,factory,available,return,this,callable,statement,factory
AbstractJdbcCall -> protected CallableStatementCreatorFactory getCallableStatementFactory();1522103912;Get the {@link CallableStatementCreatorFactory} being used;protected CallableStatementCreatorFactory getCallableStatementFactory() {_		Assert.state(this.callableStatementFactory != null, "No CallableStatementCreatorFactory available")__		return this.callableStatementFactory__	};get,the,link,callable,statement,creator,factory,being,used;protected,callable,statement,creator,factory,get,callable,statement,factory,assert,state,this,callable,statement,factory,null,no,callable,statement,creator,factory,available,return,this,callable,statement,factory
AbstractJdbcCall -> protected CallableStatementCreatorFactory getCallableStatementFactory();1530174524;Get the {@link CallableStatementCreatorFactory} being used.;protected CallableStatementCreatorFactory getCallableStatementFactory() {_		Assert.state(this.callableStatementFactory != null, "No CallableStatementCreatorFactory available")__		return this.callableStatementFactory__	};get,the,link,callable,statement,creator,factory,being,used;protected,callable,statement,creator,factory,get,callable,statement,factory,assert,state,this,callable,statement,factory,null,no,callable,statement,creator,factory,available,return,this,callable,statement,factory
AbstractJdbcCall -> public boolean isNamedBinding();1431676443;Does parameters should be bound by name?;public boolean isNamedBinding() {_		return this.callMetaDataContext.isNamedBinding()__	};does,parameters,should,be,bound,by,name;public,boolean,is,named,binding,return,this,call,meta,data,context,is,named,binding
AbstractJdbcCall -> public boolean isNamedBinding();1446038912;Does parameters should be bound by name?;public boolean isNamedBinding() {_		return this.callMetaDataContext.isNamedBinding()__	};does,parameters,should,be,bound,by,name;public,boolean,is,named,binding,return,this,call,meta,data,context,is,named,binding
AbstractJdbcCall -> public boolean isNamedBinding();1446470853;Should parameters be bound by name?_@since 4.2;public boolean isNamedBinding() {_		return this.callMetaDataContext.isNamedBinding()__	};should,parameters,be,bound,by,name,since,4,2;public,boolean,is,named,binding,return,this,call,meta,data,context,is,named,binding
AbstractJdbcCall -> public boolean isNamedBinding();1467730834;Should parameters be bound by name?_@since 4.2;public boolean isNamedBinding() {_		return this.callMetaDataContext.isNamedBinding()__	};should,parameters,be,bound,by,name,since,4,2;public,boolean,is,named,binding,return,this,call,meta,data,context,is,named,binding
AbstractJdbcCall -> public boolean isNamedBinding();1487178248;Should parameters be bound by name?_@since 4.2;public boolean isNamedBinding() {_		return this.callMetaDataContext.isNamedBinding()__	};should,parameters,be,bound,by,name,since,4,2;public,boolean,is,named,binding,return,this,call,meta,data,context,is,named,binding
AbstractJdbcCall -> public boolean isNamedBinding();1496837955;Should parameters be bound by name?_@since 4.2;public boolean isNamedBinding() {_		return this.callMetaDataContext.isNamedBinding()__	};should,parameters,be,bound,by,name,since,4,2;public,boolean,is,named,binding,return,this,call,meta,data,context,is,named,binding
AbstractJdbcCall -> public boolean isNamedBinding();1500448076;Should parameters be bound by name?_@since 4.2;public boolean isNamedBinding() {_		return this.callMetaDataContext.isNamedBinding()__	};should,parameters,be,bound,by,name,since,4,2;public,boolean,is,named,binding,return,this,call,meta,data,context,is,named,binding
AbstractJdbcCall -> public boolean isNamedBinding();1500495740;Should parameters be bound by name?_@since 4.2;public boolean isNamedBinding() {_		return this.callMetaDataContext.isNamedBinding()__	};should,parameters,be,bound,by,name,since,4,2;public,boolean,is,named,binding,return,this,call,meta,data,context,is,named,binding
AbstractJdbcCall -> public boolean isNamedBinding();1520528267;Should parameters be bound by name?_@since 4.2;public boolean isNamedBinding() {_		return this.callMetaDataContext.isNamedBinding()__	};should,parameters,be,bound,by,name,since,4,2;public,boolean,is,named,binding,return,this,call,meta,data,context,is,named,binding
AbstractJdbcCall -> public boolean isNamedBinding();1521457504;Should parameters be bound by name?_@since 4.2;public boolean isNamedBinding() {_		return this.callMetaDataContext.isNamedBinding()__	};should,parameters,be,bound,by,name,since,4,2;public,boolean,is,named,binding,return,this,call,meta,data,context,is,named,binding
AbstractJdbcCall -> public boolean isNamedBinding();1522103912;Should parameters be bound by name?_@since 4.2;public boolean isNamedBinding() {_		return this.callMetaDataContext.isNamedBinding()__	};should,parameters,be,bound,by,name,since,4,2;public,boolean,is,named,binding,return,this,call,meta,data,context,is,named,binding
AbstractJdbcCall -> public boolean isNamedBinding();1530174524;Should parameters be bound by name?_@since 4.2;public boolean isNamedBinding() {_		return this.callMetaDataContext.isNamedBinding()__	};should,parameters,be,bound,by,name,since,4,2;public,boolean,is,named,binding,return,this,call,meta,data,context,is,named,binding
AbstractJdbcCall -> public void setInParameterNames(Set<String> inParameterNames);1328020251;Set the names of in parameters to be used.;public void setInParameterNames(Set<String> inParameterNames) {_		this.callMetaDataContext.setLimitedInParameterNames(inParameterNames)__	};set,the,names,of,in,parameters,to,be,used;public,void,set,in,parameter,names,set,string,in,parameter,names,this,call,meta,data,context,set,limited,in,parameter,names,in,parameter,names
AbstractJdbcCall -> public void setInParameterNames(Set<String> inParameterNames);1356735495;Set the names of in parameters to be used.;public void setInParameterNames(Set<String> inParameterNames) {_		this.callMetaDataContext.setLimitedInParameterNames(inParameterNames)__	};set,the,names,of,in,parameters,to,be,used;public,void,set,in,parameter,names,set,string,in,parameter,names,this,call,meta,data,context,set,limited,in,parameter,names,in,parameter,names
AbstractJdbcCall -> public void setInParameterNames(Set<String> inParameterNames);1362408075;Set the names of in parameters to be used.;public void setInParameterNames(Set<String> inParameterNames) {_		this.callMetaDataContext.setLimitedInParameterNames(inParameterNames)__	};set,the,names,of,in,parameters,to,be,used;public,void,set,in,parameter,names,set,string,in,parameter,names,this,call,meta,data,context,set,limited,in,parameter,names,in,parameter,names
AbstractJdbcCall -> public void setInParameterNames(Set<String> inParameterNames);1367508310;Set the names of in parameters to be used.;public void setInParameterNames(Set<String> inParameterNames) {_		this.callMetaDataContext.setLimitedInParameterNames(inParameterNames)__	};set,the,names,of,in,parameters,to,be,used;public,void,set,in,parameter,names,set,string,in,parameter,names,this,call,meta,data,context,set,limited,in,parameter,names,in,parameter,names
AbstractJdbcCall -> public void setInParameterNames(Set<String> inParameterNames);1385412762;Set the names of in parameters to be used.;public void setInParameterNames(Set<String> inParameterNames) {_		this.callMetaDataContext.setLimitedInParameterNames(inParameterNames)__	};set,the,names,of,in,parameters,to,be,used;public,void,set,in,parameter,names,set,string,in,parameter,names,this,call,meta,data,context,set,limited,in,parameter,names,in,parameter,names
AbstractJdbcCall -> public void setInParameterNames(Set<String> inParameterNames);1407789123;Set the names of in parameters to be used.;public void setInParameterNames(Set<String> inParameterNames) {_		this.callMetaDataContext.setLimitedInParameterNames(inParameterNames)__	};set,the,names,of,in,parameters,to,be,used;public,void,set,in,parameter,names,set,string,in,parameter,names,this,call,meta,data,context,set,limited,in,parameter,names,in,parameter,names
AbstractJdbcCall -> public void setInParameterNames(Set<String> inParameterNames);1416833949;Set the names of in parameters to be used.;public void setInParameterNames(Set<String> inParameterNames) {_		this.callMetaDataContext.setLimitedInParameterNames(inParameterNames)__	};set,the,names,of,in,parameters,to,be,used;public,void,set,in,parameter,names,set,string,in,parameter,names,this,call,meta,data,context,set,limited,in,parameter,names,in,parameter,names
AbstractJdbcCall -> public void setInParameterNames(Set<String> inParameterNames);1431676443;Set the names of in parameters to be used.;public void setInParameterNames(Set<String> inParameterNames) {_		this.callMetaDataContext.setLimitedInParameterNames(inParameterNames)__	};set,the,names,of,in,parameters,to,be,used;public,void,set,in,parameter,names,set,string,in,parameter,names,this,call,meta,data,context,set,limited,in,parameter,names,in,parameter,names
AbstractJdbcCall -> public void setInParameterNames(Set<String> inParameterNames);1446038912;Set the names of in parameters to be used.;public void setInParameterNames(Set<String> inParameterNames) {_		this.callMetaDataContext.setLimitedInParameterNames(inParameterNames)__	};set,the,names,of,in,parameters,to,be,used;public,void,set,in,parameter,names,set,string,in,parameter,names,this,call,meta,data,context,set,limited,in,parameter,names,in,parameter,names
AbstractJdbcCall -> public void setInParameterNames(Set<String> inParameterNames);1446470853;Set the names of in parameters to be used.;public void setInParameterNames(Set<String> inParameterNames) {_		this.callMetaDataContext.setLimitedInParameterNames(inParameterNames)__	};set,the,names,of,in,parameters,to,be,used;public,void,set,in,parameter,names,set,string,in,parameter,names,this,call,meta,data,context,set,limited,in,parameter,names,in,parameter,names
AbstractJdbcCall -> public void setInParameterNames(Set<String> inParameterNames);1467730834;Set the names of in parameters to be used.;public void setInParameterNames(Set<String> inParameterNames) {_		this.callMetaDataContext.setLimitedInParameterNames(inParameterNames)__	};set,the,names,of,in,parameters,to,be,used;public,void,set,in,parameter,names,set,string,in,parameter,names,this,call,meta,data,context,set,limited,in,parameter,names,in,parameter,names
AbstractJdbcCall -> public void setInParameterNames(Set<String> inParameterNames);1487178248;Set the names of in parameters to be used.;public void setInParameterNames(Set<String> inParameterNames) {_		this.callMetaDataContext.setLimitedInParameterNames(inParameterNames)__	};set,the,names,of,in,parameters,to,be,used;public,void,set,in,parameter,names,set,string,in,parameter,names,this,call,meta,data,context,set,limited,in,parameter,names,in,parameter,names
AbstractJdbcCall -> public void setInParameterNames(Set<String> inParameterNames);1496837955;Set the names of in parameters to be used.;public void setInParameterNames(Set<String> inParameterNames) {_		this.callMetaDataContext.setLimitedInParameterNames(inParameterNames)__	};set,the,names,of,in,parameters,to,be,used;public,void,set,in,parameter,names,set,string,in,parameter,names,this,call,meta,data,context,set,limited,in,parameter,names,in,parameter,names
AbstractJdbcCall -> public void setInParameterNames(Set<String> inParameterNames);1500448076;Set the names of in parameters to be used.;public void setInParameterNames(Set<String> inParameterNames) {_		this.callMetaDataContext.setLimitedInParameterNames(inParameterNames)__	};set,the,names,of,in,parameters,to,be,used;public,void,set,in,parameter,names,set,string,in,parameter,names,this,call,meta,data,context,set,limited,in,parameter,names,in,parameter,names
AbstractJdbcCall -> public void setInParameterNames(Set<String> inParameterNames);1500495740;Set the names of in parameters to be used.;public void setInParameterNames(Set<String> inParameterNames) {_		this.callMetaDataContext.setLimitedInParameterNames(inParameterNames)__	};set,the,names,of,in,parameters,to,be,used;public,void,set,in,parameter,names,set,string,in,parameter,names,this,call,meta,data,context,set,limited,in,parameter,names,in,parameter,names
AbstractJdbcCall -> public void setInParameterNames(Set<String> inParameterNames);1520528267;Set the names of in parameters to be used.;public void setInParameterNames(Set<String> inParameterNames) {_		this.callMetaDataContext.setLimitedInParameterNames(inParameterNames)__	};set,the,names,of,in,parameters,to,be,used;public,void,set,in,parameter,names,set,string,in,parameter,names,this,call,meta,data,context,set,limited,in,parameter,names,in,parameter,names
AbstractJdbcCall -> public void setInParameterNames(Set<String> inParameterNames);1521457504;Set the names of in parameters to be used.;public void setInParameterNames(Set<String> inParameterNames) {_		this.callMetaDataContext.setLimitedInParameterNames(inParameterNames)__	};set,the,names,of,in,parameters,to,be,used;public,void,set,in,parameter,names,set,string,in,parameter,names,this,call,meta,data,context,set,limited,in,parameter,names,in,parameter,names
AbstractJdbcCall -> public void setInParameterNames(Set<String> inParameterNames);1522103912;Set the names of in parameters to be used.;public void setInParameterNames(Set<String> inParameterNames) {_		this.callMetaDataContext.setLimitedInParameterNames(inParameterNames)__	};set,the,names,of,in,parameters,to,be,used;public,void,set,in,parameter,names,set,string,in,parameter,names,this,call,meta,data,context,set,limited,in,parameter,names,in,parameter,names
AbstractJdbcCall -> public void setInParameterNames(Set<String> inParameterNames);1530174524;Set the names of in parameters to be used.;public void setInParameterNames(Set<String> inParameterNames) {_		this.callMetaDataContext.setLimitedInParameterNames(inParameterNames)__	};set,the,names,of,in,parameters,to,be,used;public,void,set,in,parameter,names,set,string,in,parameter,names,this,call,meta,data,context,set,limited,in,parameter,names,in,parameter,names
AbstractJdbcCall -> public void addDeclaredRowMapper(String parameterName, RowMapper<?> rowMapper);1385412762;Add a {@link org.springframework.jdbc.core.RowMapper} for the specified parameter or column._@param parameterName name of parameter or column_@param rowMapper the RowMapper implementation to use;public void addDeclaredRowMapper(String parameterName, RowMapper<?> rowMapper) {_		this.declaredRowMappers.put(parameterName, rowMapper)__		if (logger.isDebugEnabled()) {_			logger.debug("Added row mapper for [" + getProcedureName() + "]: " + parameterName)__		}_	};add,a,link,org,springframework,jdbc,core,row,mapper,for,the,specified,parameter,or,column,param,parameter,name,name,of,parameter,or,column,param,row,mapper,the,row,mapper,implementation,to,use;public,void,add,declared,row,mapper,string,parameter,name,row,mapper,row,mapper,this,declared,row,mappers,put,parameter,name,row,mapper,if,logger,is,debug,enabled,logger,debug,added,row,mapper,for,get,procedure,name,parameter,name
AbstractJdbcCall -> public void addDeclaredRowMapper(String parameterName, RowMapper<?> rowMapper);1407789123;Add a {@link org.springframework.jdbc.core.RowMapper} for the specified parameter or column._@param parameterName name of parameter or column_@param rowMapper the RowMapper implementation to use;public void addDeclaredRowMapper(String parameterName, RowMapper<?> rowMapper) {_		this.declaredRowMappers.put(parameterName, rowMapper)__		if (logger.isDebugEnabled()) {_			logger.debug("Added row mapper for [" + getProcedureName() + "]: " + parameterName)__		}_	};add,a,link,org,springframework,jdbc,core,row,mapper,for,the,specified,parameter,or,column,param,parameter,name,name,of,parameter,or,column,param,row,mapper,the,row,mapper,implementation,to,use;public,void,add,declared,row,mapper,string,parameter,name,row,mapper,row,mapper,this,declared,row,mappers,put,parameter,name,row,mapper,if,logger,is,debug,enabled,logger,debug,added,row,mapper,for,get,procedure,name,parameter,name
AbstractJdbcCall -> public void addDeclaredRowMapper(String parameterName, RowMapper<?> rowMapper);1416833949;Add a {@link org.springframework.jdbc.core.RowMapper} for the specified parameter or column._@param parameterName name of parameter or column_@param rowMapper the RowMapper implementation to use;public void addDeclaredRowMapper(String parameterName, RowMapper<?> rowMapper) {_		this.declaredRowMappers.put(parameterName, rowMapper)__		if (logger.isDebugEnabled()) {_			logger.debug("Added row mapper for [" + getProcedureName() + "]: " + parameterName)__		}_	};add,a,link,org,springframework,jdbc,core,row,mapper,for,the,specified,parameter,or,column,param,parameter,name,name,of,parameter,or,column,param,row,mapper,the,row,mapper,implementation,to,use;public,void,add,declared,row,mapper,string,parameter,name,row,mapper,row,mapper,this,declared,row,mappers,put,parameter,name,row,mapper,if,logger,is,debug,enabled,logger,debug,added,row,mapper,for,get,procedure,name,parameter,name
AbstractJdbcCall -> public void addDeclaredRowMapper(String parameterName, RowMapper<?> rowMapper);1431676443;Add a {@link org.springframework.jdbc.core.RowMapper} for the specified parameter or column._@param parameterName name of parameter or column_@param rowMapper the RowMapper implementation to use;public void addDeclaredRowMapper(String parameterName, RowMapper<?> rowMapper) {_		this.declaredRowMappers.put(parameterName, rowMapper)__		if (logger.isDebugEnabled()) {_			logger.debug("Added row mapper for [" + getProcedureName() + "]: " + parameterName)__		}_	};add,a,link,org,springframework,jdbc,core,row,mapper,for,the,specified,parameter,or,column,param,parameter,name,name,of,parameter,or,column,param,row,mapper,the,row,mapper,implementation,to,use;public,void,add,declared,row,mapper,string,parameter,name,row,mapper,row,mapper,this,declared,row,mappers,put,parameter,name,row,mapper,if,logger,is,debug,enabled,logger,debug,added,row,mapper,for,get,procedure,name,parameter,name
AbstractJdbcCall -> public void addDeclaredRowMapper(String parameterName, RowMapper<?> rowMapper);1446038912;Add a {@link org.springframework.jdbc.core.RowMapper} for the specified parameter or column._@param parameterName name of parameter or column_@param rowMapper the RowMapper implementation to use;public void addDeclaredRowMapper(String parameterName, RowMapper<?> rowMapper) {_		this.declaredRowMappers.put(parameterName, rowMapper)__		if (logger.isDebugEnabled()) {_			logger.debug("Added row mapper for [" + getProcedureName() + "]: " + parameterName)__		}_	};add,a,link,org,springframework,jdbc,core,row,mapper,for,the,specified,parameter,or,column,param,parameter,name,name,of,parameter,or,column,param,row,mapper,the,row,mapper,implementation,to,use;public,void,add,declared,row,mapper,string,parameter,name,row,mapper,row,mapper,this,declared,row,mappers,put,parameter,name,row,mapper,if,logger,is,debug,enabled,logger,debug,added,row,mapper,for,get,procedure,name,parameter,name
AbstractJdbcCall -> public void addDeclaredRowMapper(String parameterName, RowMapper<?> rowMapper);1446470853;Add a {@link org.springframework.jdbc.core.RowMapper} for the specified parameter or column._@param parameterName name of parameter or column_@param rowMapper the RowMapper implementation to use;public void addDeclaredRowMapper(String parameterName, RowMapper<?> rowMapper) {_		this.declaredRowMappers.put(parameterName, rowMapper)__		if (logger.isDebugEnabled()) {_			logger.debug("Added row mapper for [" + getProcedureName() + "]: " + parameterName)__		}_	};add,a,link,org,springframework,jdbc,core,row,mapper,for,the,specified,parameter,or,column,param,parameter,name,name,of,parameter,or,column,param,row,mapper,the,row,mapper,implementation,to,use;public,void,add,declared,row,mapper,string,parameter,name,row,mapper,row,mapper,this,declared,row,mappers,put,parameter,name,row,mapper,if,logger,is,debug,enabled,logger,debug,added,row,mapper,for,get,procedure,name,parameter,name
AbstractJdbcCall -> public void addDeclaredRowMapper(String parameterName, RowMapper<?> rowMapper);1467730834;Add a {@link org.springframework.jdbc.core.RowMapper} for the specified parameter or column._@param parameterName name of parameter or column_@param rowMapper the RowMapper implementation to use;public void addDeclaredRowMapper(String parameterName, RowMapper<?> rowMapper) {_		this.declaredRowMappers.put(parameterName, rowMapper)__		if (logger.isDebugEnabled()) {_			logger.debug("Added row mapper for [" + getProcedureName() + "]: " + parameterName)__		}_	};add,a,link,org,springframework,jdbc,core,row,mapper,for,the,specified,parameter,or,column,param,parameter,name,name,of,parameter,or,column,param,row,mapper,the,row,mapper,implementation,to,use;public,void,add,declared,row,mapper,string,parameter,name,row,mapper,row,mapper,this,declared,row,mappers,put,parameter,name,row,mapper,if,logger,is,debug,enabled,logger,debug,added,row,mapper,for,get,procedure,name,parameter,name
AbstractJdbcCall -> public void addDeclaredRowMapper(String parameterName, RowMapper<?> rowMapper);1487178248;Add a {@link org.springframework.jdbc.core.RowMapper} for the specified parameter or column._@param parameterName name of parameter or column_@param rowMapper the RowMapper implementation to use;public void addDeclaredRowMapper(String parameterName, RowMapper<?> rowMapper) {_		this.declaredRowMappers.put(parameterName, rowMapper)__		if (logger.isDebugEnabled()) {_			logger.debug("Added row mapper for [" + getProcedureName() + "]: " + parameterName)__		}_	};add,a,link,org,springframework,jdbc,core,row,mapper,for,the,specified,parameter,or,column,param,parameter,name,name,of,parameter,or,column,param,row,mapper,the,row,mapper,implementation,to,use;public,void,add,declared,row,mapper,string,parameter,name,row,mapper,row,mapper,this,declared,row,mappers,put,parameter,name,row,mapper,if,logger,is,debug,enabled,logger,debug,added,row,mapper,for,get,procedure,name,parameter,name
AbstractJdbcCall -> public void addDeclaredRowMapper(String parameterName, RowMapper<?> rowMapper);1496837955;Add a {@link org.springframework.jdbc.core.RowMapper} for the specified parameter or column._@param parameterName name of parameter or column_@param rowMapper the RowMapper implementation to use;public void addDeclaredRowMapper(String parameterName, RowMapper<?> rowMapper) {_		this.declaredRowMappers.put(parameterName, rowMapper)__		if (logger.isDebugEnabled()) {_			logger.debug("Added row mapper for [" + getProcedureName() + "]: " + parameterName)__		}_	};add,a,link,org,springframework,jdbc,core,row,mapper,for,the,specified,parameter,or,column,param,parameter,name,name,of,parameter,or,column,param,row,mapper,the,row,mapper,implementation,to,use;public,void,add,declared,row,mapper,string,parameter,name,row,mapper,row,mapper,this,declared,row,mappers,put,parameter,name,row,mapper,if,logger,is,debug,enabled,logger,debug,added,row,mapper,for,get,procedure,name,parameter,name
AbstractJdbcCall -> public void addDeclaredRowMapper(String parameterName, RowMapper<?> rowMapper);1500448076;Add a {@link org.springframework.jdbc.core.RowMapper} for the specified parameter or column._@param parameterName name of parameter or column_@param rowMapper the RowMapper implementation to use;public void addDeclaredRowMapper(String parameterName, RowMapper<?> rowMapper) {_		this.declaredRowMappers.put(parameterName, rowMapper)__		if (logger.isDebugEnabled()) {_			logger.debug("Added row mapper for [" + getProcedureName() + "]: " + parameterName)__		}_	};add,a,link,org,springframework,jdbc,core,row,mapper,for,the,specified,parameter,or,column,param,parameter,name,name,of,parameter,or,column,param,row,mapper,the,row,mapper,implementation,to,use;public,void,add,declared,row,mapper,string,parameter,name,row,mapper,row,mapper,this,declared,row,mappers,put,parameter,name,row,mapper,if,logger,is,debug,enabled,logger,debug,added,row,mapper,for,get,procedure,name,parameter,name
AbstractJdbcCall -> public void addDeclaredRowMapper(String parameterName, RowMapper<?> rowMapper);1500495740;Add a {@link org.springframework.jdbc.core.RowMapper} for the specified parameter or column._@param parameterName name of parameter or column_@param rowMapper the RowMapper implementation to use;public void addDeclaredRowMapper(String parameterName, RowMapper<?> rowMapper) {_		this.declaredRowMappers.put(parameterName, rowMapper)__		if (logger.isDebugEnabled()) {_			logger.debug("Added row mapper for [" + getProcedureName() + "]: " + parameterName)__		}_	};add,a,link,org,springframework,jdbc,core,row,mapper,for,the,specified,parameter,or,column,param,parameter,name,name,of,parameter,or,column,param,row,mapper,the,row,mapper,implementation,to,use;public,void,add,declared,row,mapper,string,parameter,name,row,mapper,row,mapper,this,declared,row,mappers,put,parameter,name,row,mapper,if,logger,is,debug,enabled,logger,debug,added,row,mapper,for,get,procedure,name,parameter,name
AbstractJdbcCall -> public void addDeclaredRowMapper(String parameterName, RowMapper<?> rowMapper);1520528267;Add a {@link org.springframework.jdbc.core.RowMapper} for the specified parameter or column._@param parameterName name of parameter or column_@param rowMapper the RowMapper implementation to use;public void addDeclaredRowMapper(String parameterName, RowMapper<?> rowMapper) {_		this.declaredRowMappers.put(parameterName, rowMapper)__		if (logger.isDebugEnabled()) {_			logger.debug("Added row mapper for [" + getProcedureName() + "]: " + parameterName)__		}_	};add,a,link,org,springframework,jdbc,core,row,mapper,for,the,specified,parameter,or,column,param,parameter,name,name,of,parameter,or,column,param,row,mapper,the,row,mapper,implementation,to,use;public,void,add,declared,row,mapper,string,parameter,name,row,mapper,row,mapper,this,declared,row,mappers,put,parameter,name,row,mapper,if,logger,is,debug,enabled,logger,debug,added,row,mapper,for,get,procedure,name,parameter,name
AbstractJdbcCall -> public void addDeclaredRowMapper(String parameterName, RowMapper<?> rowMapper);1521457504;Add a {@link org.springframework.jdbc.core.RowMapper} for the specified parameter or column._@param parameterName name of parameter or column_@param rowMapper the RowMapper implementation to use;public void addDeclaredRowMapper(String parameterName, RowMapper<?> rowMapper) {_		this.declaredRowMappers.put(parameterName, rowMapper)__		if (logger.isDebugEnabled()) {_			logger.debug("Added row mapper for [" + getProcedureName() + "]: " + parameterName)__		}_	};add,a,link,org,springframework,jdbc,core,row,mapper,for,the,specified,parameter,or,column,param,parameter,name,name,of,parameter,or,column,param,row,mapper,the,row,mapper,implementation,to,use;public,void,add,declared,row,mapper,string,parameter,name,row,mapper,row,mapper,this,declared,row,mappers,put,parameter,name,row,mapper,if,logger,is,debug,enabled,logger,debug,added,row,mapper,for,get,procedure,name,parameter,name
AbstractJdbcCall -> public void addDeclaredRowMapper(String parameterName, RowMapper<?> rowMapper);1522103912;Add a {@link org.springframework.jdbc.core.RowMapper} for the specified parameter or column._@param parameterName name of parameter or column_@param rowMapper the RowMapper implementation to use;public void addDeclaredRowMapper(String parameterName, RowMapper<?> rowMapper) {_		this.declaredRowMappers.put(parameterName, rowMapper)__		if (logger.isDebugEnabled()) {_			logger.debug("Added row mapper for [" + getProcedureName() + "]: " + parameterName)__		}_	};add,a,link,org,springframework,jdbc,core,row,mapper,for,the,specified,parameter,or,column,param,parameter,name,name,of,parameter,or,column,param,row,mapper,the,row,mapper,implementation,to,use;public,void,add,declared,row,mapper,string,parameter,name,row,mapper,row,mapper,this,declared,row,mappers,put,parameter,name,row,mapper,if,logger,is,debug,enabled,logger,debug,added,row,mapper,for,get,procedure,name,parameter,name
AbstractJdbcCall -> public void addDeclaredRowMapper(String parameterName, RowMapper<?> rowMapper);1530174524;Add a {@link org.springframework.jdbc.core.RowMapper} for the specified parameter or column._@param parameterName name of parameter or column_@param rowMapper the RowMapper implementation to use;public void addDeclaredRowMapper(String parameterName, RowMapper<?> rowMapper) {_		this.declaredRowMappers.put(parameterName, rowMapper)__		if (logger.isDebugEnabled()) {_			logger.debug("Added row mapper for [" + getProcedureName() + "]: " + parameterName)__		}_	};add,a,link,org,springframework,jdbc,core,row,mapper,for,the,specified,parameter,or,column,param,parameter,name,name,of,parameter,or,column,param,row,mapper,the,row,mapper,implementation,to,use;public,void,add,declared,row,mapper,string,parameter,name,row,mapper,row,mapper,this,declared,row,mappers,put,parameter,name,row,mapper,if,logger,is,debug,enabled,logger,debug,added,row,mapper,for,get,procedure,name,parameter,name
AbstractJdbcCall -> public String getSchemaName();1328020251;Get the schema name used.;public String getSchemaName() {_		return this.callMetaDataContext.getSchemaName()__	};get,the,schema,name,used;public,string,get,schema,name,return,this,call,meta,data,context,get,schema,name
AbstractJdbcCall -> public String getSchemaName();1356735495;Get the schema name used.;public String getSchemaName() {_		return this.callMetaDataContext.getSchemaName()__	};get,the,schema,name,used;public,string,get,schema,name,return,this,call,meta,data,context,get,schema,name
AbstractJdbcCall -> public String getSchemaName();1362408075;Get the schema name used.;public String getSchemaName() {_		return this.callMetaDataContext.getSchemaName()__	};get,the,schema,name,used;public,string,get,schema,name,return,this,call,meta,data,context,get,schema,name
AbstractJdbcCall -> public String getSchemaName();1367508310;Get the schema name used.;public String getSchemaName() {_		return this.callMetaDataContext.getSchemaName()__	};get,the,schema,name,used;public,string,get,schema,name,return,this,call,meta,data,context,get,schema,name
AbstractJdbcCall -> public String getSchemaName();1385412762;Get the schema name used.;public String getSchemaName() {_		return this.callMetaDataContext.getSchemaName()__	};get,the,schema,name,used;public,string,get,schema,name,return,this,call,meta,data,context,get,schema,name
AbstractJdbcCall -> public String getSchemaName();1407789123;Get the schema name used.;public String getSchemaName() {_		return this.callMetaDataContext.getSchemaName()__	};get,the,schema,name,used;public,string,get,schema,name,return,this,call,meta,data,context,get,schema,name
AbstractJdbcCall -> public String getSchemaName();1416833949;Get the schema name used.;public String getSchemaName() {_		return this.callMetaDataContext.getSchemaName()__	};get,the,schema,name,used;public,string,get,schema,name,return,this,call,meta,data,context,get,schema,name
AbstractJdbcCall -> public String getSchemaName();1431676443;Get the schema name used.;public String getSchemaName() {_		return this.callMetaDataContext.getSchemaName()__	};get,the,schema,name,used;public,string,get,schema,name,return,this,call,meta,data,context,get,schema,name
AbstractJdbcCall -> public String getSchemaName();1446038912;Get the schema name used.;public String getSchemaName() {_		return this.callMetaDataContext.getSchemaName()__	};get,the,schema,name,used;public,string,get,schema,name,return,this,call,meta,data,context,get,schema,name
AbstractJdbcCall -> public String getSchemaName();1446470853;Get the schema name used.;public String getSchemaName() {_		return this.callMetaDataContext.getSchemaName()__	};get,the,schema,name,used;public,string,get,schema,name,return,this,call,meta,data,context,get,schema,name
AbstractJdbcCall -> public String getSchemaName();1467730834;Get the schema name used.;public String getSchemaName() {_		return this.callMetaDataContext.getSchemaName()__	};get,the,schema,name,used;public,string,get,schema,name,return,this,call,meta,data,context,get,schema,name
AbstractJdbcCall -> public String getSchemaName();1487178248;Get the schema name used.;public String getSchemaName() {_		return this.callMetaDataContext.getSchemaName()__	};get,the,schema,name,used;public,string,get,schema,name,return,this,call,meta,data,context,get,schema,name
AbstractJdbcCall -> @Nullable 	public String getCatalogName();1496837955;Get the catalog name used.;@Nullable_	public String getCatalogName() {_		return this.callMetaDataContext.getCatalogName()__	};get,the,catalog,name,used;nullable,public,string,get,catalog,name,return,this,call,meta,data,context,get,catalog,name
AbstractJdbcCall -> @Nullable 	public String getCatalogName();1500448076;Get the catalog name used.;@Nullable_	public String getCatalogName() {_		return this.callMetaDataContext.getCatalogName()__	};get,the,catalog,name,used;nullable,public,string,get,catalog,name,return,this,call,meta,data,context,get,catalog,name
AbstractJdbcCall -> @Nullable 	public String getCatalogName();1500495740;Get the catalog name used.;@Nullable_	public String getCatalogName() {_		return this.callMetaDataContext.getCatalogName()__	};get,the,catalog,name,used;nullable,public,string,get,catalog,name,return,this,call,meta,data,context,get,catalog,name
AbstractJdbcCall -> @Nullable 	public String getCatalogName();1520528267;Get the catalog name used.;@Nullable_	public String getCatalogName() {_		return this.callMetaDataContext.getCatalogName()__	};get,the,catalog,name,used;nullable,public,string,get,catalog,name,return,this,call,meta,data,context,get,catalog,name
AbstractJdbcCall -> @Nullable 	public String getCatalogName();1521457504;Get the catalog name used.;@Nullable_	public String getCatalogName() {_		return this.callMetaDataContext.getCatalogName()__	};get,the,catalog,name,used;nullable,public,string,get,catalog,name,return,this,call,meta,data,context,get,catalog,name
AbstractJdbcCall -> @Nullable 	public String getCatalogName();1522103912;Get the catalog name used.;@Nullable_	public String getCatalogName() {_		return this.callMetaDataContext.getCatalogName()__	};get,the,catalog,name,used;nullable,public,string,get,catalog,name,return,this,call,meta,data,context,get,catalog,name
AbstractJdbcCall -> @Nullable 	public String getCatalogName();1530174524;Get the catalog name used.;@Nullable_	public String getCatalogName() {_		return this.callMetaDataContext.getCatalogName()__	};get,the,catalog,name,used;nullable,public,string,get,catalog,name,return,this,call,meta,data,context,get,catalog,name
AbstractJdbcCall -> public Set<String> getInParameterNames();1328020251;Get the names of in parameters to be used.;public Set<String> getInParameterNames() {_		return this.callMetaDataContext.getLimitedInParameterNames()__	};get,the,names,of,in,parameters,to,be,used;public,set,string,get,in,parameter,names,return,this,call,meta,data,context,get,limited,in,parameter,names
AbstractJdbcCall -> public Set<String> getInParameterNames();1356735495;Get the names of in parameters to be used.;public Set<String> getInParameterNames() {_		return this.callMetaDataContext.getLimitedInParameterNames()__	};get,the,names,of,in,parameters,to,be,used;public,set,string,get,in,parameter,names,return,this,call,meta,data,context,get,limited,in,parameter,names
AbstractJdbcCall -> public Set<String> getInParameterNames();1362408075;Get the names of in parameters to be used.;public Set<String> getInParameterNames() {_		return this.callMetaDataContext.getLimitedInParameterNames()__	};get,the,names,of,in,parameters,to,be,used;public,set,string,get,in,parameter,names,return,this,call,meta,data,context,get,limited,in,parameter,names
AbstractJdbcCall -> public Set<String> getInParameterNames();1367508310;Get the names of in parameters to be used.;public Set<String> getInParameterNames() {_		return this.callMetaDataContext.getLimitedInParameterNames()__	};get,the,names,of,in,parameters,to,be,used;public,set,string,get,in,parameter,names,return,this,call,meta,data,context,get,limited,in,parameter,names
AbstractJdbcCall -> public Set<String> getInParameterNames();1385412762;Get the names of in parameters to be used.;public Set<String> getInParameterNames() {_		return this.callMetaDataContext.getLimitedInParameterNames()__	};get,the,names,of,in,parameters,to,be,used;public,set,string,get,in,parameter,names,return,this,call,meta,data,context,get,limited,in,parameter,names
AbstractJdbcCall -> public Set<String> getInParameterNames();1407789123;Get the names of in parameters to be used.;public Set<String> getInParameterNames() {_		return this.callMetaDataContext.getLimitedInParameterNames()__	};get,the,names,of,in,parameters,to,be,used;public,set,string,get,in,parameter,names,return,this,call,meta,data,context,get,limited,in,parameter,names
AbstractJdbcCall -> public Set<String> getInParameterNames();1416833949;Get the names of in parameters to be used.;public Set<String> getInParameterNames() {_		return this.callMetaDataContext.getLimitedInParameterNames()__	};get,the,names,of,in,parameters,to,be,used;public,set,string,get,in,parameter,names,return,this,call,meta,data,context,get,limited,in,parameter,names
AbstractJdbcCall -> public Set<String> getInParameterNames();1431676443;Get the names of in parameters to be used.;public Set<String> getInParameterNames() {_		return this.callMetaDataContext.getLimitedInParameterNames()__	};get,the,names,of,in,parameters,to,be,used;public,set,string,get,in,parameter,names,return,this,call,meta,data,context,get,limited,in,parameter,names
AbstractJdbcCall -> public Set<String> getInParameterNames();1446038912;Get the names of in parameters to be used.;public Set<String> getInParameterNames() {_		return this.callMetaDataContext.getLimitedInParameterNames()__	};get,the,names,of,in,parameters,to,be,used;public,set,string,get,in,parameter,names,return,this,call,meta,data,context,get,limited,in,parameter,names
AbstractJdbcCall -> public Set<String> getInParameterNames();1446470853;Get the names of in parameters to be used.;public Set<String> getInParameterNames() {_		return this.callMetaDataContext.getLimitedInParameterNames()__	};get,the,names,of,in,parameters,to,be,used;public,set,string,get,in,parameter,names,return,this,call,meta,data,context,get,limited,in,parameter,names
AbstractJdbcCall -> public Set<String> getInParameterNames();1467730834;Get the names of in parameters to be used.;public Set<String> getInParameterNames() {_		return this.callMetaDataContext.getLimitedInParameterNames()__	};get,the,names,of,in,parameters,to,be,used;public,set,string,get,in,parameter,names,return,this,call,meta,data,context,get,limited,in,parameter,names
AbstractJdbcCall -> public Set<String> getInParameterNames();1487178248;Get the names of in parameters to be used.;public Set<String> getInParameterNames() {_		return this.callMetaDataContext.getLimitedInParameterNames()__	};get,the,names,of,in,parameters,to,be,used;public,set,string,get,in,parameter,names,return,this,call,meta,data,context,get,limited,in,parameter,names
AbstractJdbcCall -> public Set<String> getInParameterNames();1496837955;Get the names of in parameters to be used.;public Set<String> getInParameterNames() {_		return this.callMetaDataContext.getLimitedInParameterNames()__	};get,the,names,of,in,parameters,to,be,used;public,set,string,get,in,parameter,names,return,this,call,meta,data,context,get,limited,in,parameter,names
AbstractJdbcCall -> public Set<String> getInParameterNames();1500448076;Get the names of in parameters to be used.;public Set<String> getInParameterNames() {_		return this.callMetaDataContext.getLimitedInParameterNames()__	};get,the,names,of,in,parameters,to,be,used;public,set,string,get,in,parameter,names,return,this,call,meta,data,context,get,limited,in,parameter,names
AbstractJdbcCall -> public Set<String> getInParameterNames();1500495740;Get the names of in parameters to be used.;public Set<String> getInParameterNames() {_		return this.callMetaDataContext.getLimitedInParameterNames()__	};get,the,names,of,in,parameters,to,be,used;public,set,string,get,in,parameter,names,return,this,call,meta,data,context,get,limited,in,parameter,names
AbstractJdbcCall -> public Set<String> getInParameterNames();1520528267;Get the names of in parameters to be used.;public Set<String> getInParameterNames() {_		return this.callMetaDataContext.getLimitedInParameterNames()__	};get,the,names,of,in,parameters,to,be,used;public,set,string,get,in,parameter,names,return,this,call,meta,data,context,get,limited,in,parameter,names
AbstractJdbcCall -> public Set<String> getInParameterNames();1521457504;Get the names of in parameters to be used.;public Set<String> getInParameterNames() {_		return this.callMetaDataContext.getLimitedInParameterNames()__	};get,the,names,of,in,parameters,to,be,used;public,set,string,get,in,parameter,names,return,this,call,meta,data,context,get,limited,in,parameter,names
AbstractJdbcCall -> public Set<String> getInParameterNames();1522103912;Get the names of in parameters to be used.;public Set<String> getInParameterNames() {_		return this.callMetaDataContext.getLimitedInParameterNames()__	};get,the,names,of,in,parameters,to,be,used;public,set,string,get,in,parameter,names,return,this,call,meta,data,context,get,limited,in,parameter,names
AbstractJdbcCall -> public Set<String> getInParameterNames();1530174524;Get the names of in parameters to be used.;public Set<String> getInParameterNames() {_		return this.callMetaDataContext.getLimitedInParameterNames()__	};get,the,names,of,in,parameters,to,be,used;public,set,string,get,in,parameter,names,return,this,call,meta,data,context,get,limited,in,parameter,names
AbstractJdbcCall -> @Nullable 	public String getProcedureName();1496837955;Get the name of the stored procedure.;@Nullable_	public String getProcedureName() {_		return this.callMetaDataContext.getProcedureName()__	};get,the,name,of,the,stored,procedure;nullable,public,string,get,procedure,name,return,this,call,meta,data,context,get,procedure,name
AbstractJdbcCall -> @Nullable 	public String getProcedureName();1500448076;Get the name of the stored procedure.;@Nullable_	public String getProcedureName() {_		return this.callMetaDataContext.getProcedureName()__	};get,the,name,of,the,stored,procedure;nullable,public,string,get,procedure,name,return,this,call,meta,data,context,get,procedure,name
AbstractJdbcCall -> @Nullable 	public String getProcedureName();1500495740;Get the name of the stored procedure.;@Nullable_	public String getProcedureName() {_		return this.callMetaDataContext.getProcedureName()__	};get,the,name,of,the,stored,procedure;nullable,public,string,get,procedure,name,return,this,call,meta,data,context,get,procedure,name
AbstractJdbcCall -> @Nullable 	public String getProcedureName();1520528267;Get the name of the stored procedure.;@Nullable_	public String getProcedureName() {_		return this.callMetaDataContext.getProcedureName()__	};get,the,name,of,the,stored,procedure;nullable,public,string,get,procedure,name,return,this,call,meta,data,context,get,procedure,name
AbstractJdbcCall -> @Nullable 	public String getProcedureName();1521457504;Get the name of the stored procedure.;@Nullable_	public String getProcedureName() {_		return this.callMetaDataContext.getProcedureName()__	};get,the,name,of,the,stored,procedure;nullable,public,string,get,procedure,name,return,this,call,meta,data,context,get,procedure,name
AbstractJdbcCall -> @Nullable 	public String getProcedureName();1522103912;Get the name of the stored procedure.;@Nullable_	public String getProcedureName() {_		return this.callMetaDataContext.getProcedureName()__	};get,the,name,of,the,stored,procedure;nullable,public,string,get,procedure,name,return,this,call,meta,data,context,get,procedure,name
AbstractJdbcCall -> @Nullable 	public String getProcedureName();1530174524;Get the name of the stored procedure.;@Nullable_	public String getProcedureName() {_		return this.callMetaDataContext.getProcedureName()__	};get,the,name,of,the,stored,procedure;nullable,public,string,get,procedure,name,return,this,call,meta,data,context,get,procedure,name
AbstractJdbcCall -> public boolean isFunction();1328020251;Is this call a function call?;public boolean isFunction() {_		return this.callMetaDataContext.isFunction()__	};is,this,call,a,function,call;public,boolean,is,function,return,this,call,meta,data,context,is,function
AbstractJdbcCall -> public boolean isFunction();1356735495;Is this call a function call?;public boolean isFunction() {_		return this.callMetaDataContext.isFunction()__	};is,this,call,a,function,call;public,boolean,is,function,return,this,call,meta,data,context,is,function
AbstractJdbcCall -> public boolean isFunction();1362408075;Is this call a function call?;public boolean isFunction() {_		return this.callMetaDataContext.isFunction()__	};is,this,call,a,function,call;public,boolean,is,function,return,this,call,meta,data,context,is,function
AbstractJdbcCall -> public boolean isFunction();1367508310;Is this call a function call?;public boolean isFunction() {_		return this.callMetaDataContext.isFunction()__	};is,this,call,a,function,call;public,boolean,is,function,return,this,call,meta,data,context,is,function
AbstractJdbcCall -> public boolean isFunction();1385412762;Is this call a function call?;public boolean isFunction() {_		return this.callMetaDataContext.isFunction()__	};is,this,call,a,function,call;public,boolean,is,function,return,this,call,meta,data,context,is,function
AbstractJdbcCall -> public boolean isFunction();1407789123;Is this call a function call?;public boolean isFunction() {_		return this.callMetaDataContext.isFunction()__	};is,this,call,a,function,call;public,boolean,is,function,return,this,call,meta,data,context,is,function
AbstractJdbcCall -> public boolean isFunction();1416833949;Is this call a function call?;public boolean isFunction() {_		return this.callMetaDataContext.isFunction()__	};is,this,call,a,function,call;public,boolean,is,function,return,this,call,meta,data,context,is,function
AbstractJdbcCall -> public boolean isFunction();1431676443;Is this call a function call?;public boolean isFunction() {_		return this.callMetaDataContext.isFunction()__	};is,this,call,a,function,call;public,boolean,is,function,return,this,call,meta,data,context,is,function
AbstractJdbcCall -> public boolean isFunction();1446038912;Is this call a function call?;public boolean isFunction() {_		return this.callMetaDataContext.isFunction()__	};is,this,call,a,function,call;public,boolean,is,function,return,this,call,meta,data,context,is,function
AbstractJdbcCall -> public boolean isFunction();1446470853;Is this call a function call?;public boolean isFunction() {_		return this.callMetaDataContext.isFunction()__	};is,this,call,a,function,call;public,boolean,is,function,return,this,call,meta,data,context,is,function
AbstractJdbcCall -> public boolean isFunction();1467730834;Is this call a function call?;public boolean isFunction() {_		return this.callMetaDataContext.isFunction()__	};is,this,call,a,function,call;public,boolean,is,function,return,this,call,meta,data,context,is,function
AbstractJdbcCall -> public boolean isFunction();1487178248;Is this call a function call?;public boolean isFunction() {_		return this.callMetaDataContext.isFunction()__	};is,this,call,a,function,call;public,boolean,is,function,return,this,call,meta,data,context,is,function
AbstractJdbcCall -> public boolean isFunction();1496837955;Is this call a function call?;public boolean isFunction() {_		return this.callMetaDataContext.isFunction()__	};is,this,call,a,function,call;public,boolean,is,function,return,this,call,meta,data,context,is,function
AbstractJdbcCall -> public boolean isFunction();1500448076;Is this call a function call?;public boolean isFunction() {_		return this.callMetaDataContext.isFunction()__	};is,this,call,a,function,call;public,boolean,is,function,return,this,call,meta,data,context,is,function
AbstractJdbcCall -> public boolean isFunction();1500495740;Is this call a function call?;public boolean isFunction() {_		return this.callMetaDataContext.isFunction()__	};is,this,call,a,function,call;public,boolean,is,function,return,this,call,meta,data,context,is,function
AbstractJdbcCall -> public boolean isFunction();1520528267;Is this call a function call?;public boolean isFunction() {_		return this.callMetaDataContext.isFunction()__	};is,this,call,a,function,call;public,boolean,is,function,return,this,call,meta,data,context,is,function
AbstractJdbcCall -> public boolean isFunction();1521457504;Is this call a function call?;public boolean isFunction() {_		return this.callMetaDataContext.isFunction()__	};is,this,call,a,function,call;public,boolean,is,function,return,this,call,meta,data,context,is,function
AbstractJdbcCall -> public boolean isFunction();1522103912;Is this call a function call?;public boolean isFunction() {_		return this.callMetaDataContext.isFunction()__	};is,this,call,a,function,call;public,boolean,is,function,return,this,call,meta,data,context,is,function
AbstractJdbcCall -> public boolean isFunction();1530174524;Is this call a function call?;public boolean isFunction() {_		return this.callMetaDataContext.isFunction()__	};is,this,call,a,function,call;public,boolean,is,function,return,this,call,meta,data,context,is,function
AbstractJdbcCall -> public void setFunction(boolean function);1328020251;Specify whether this call is a function call.;public void setFunction(boolean function) {_		this.callMetaDataContext.setFunction(function)__	};specify,whether,this,call,is,a,function,call;public,void,set,function,boolean,function,this,call,meta,data,context,set,function,function
AbstractJdbcCall -> public void setFunction(boolean function);1356735495;Specify whether this call is a function call.;public void setFunction(boolean function) {_		this.callMetaDataContext.setFunction(function)__	};specify,whether,this,call,is,a,function,call;public,void,set,function,boolean,function,this,call,meta,data,context,set,function,function
AbstractJdbcCall -> public void setFunction(boolean function);1362408075;Specify whether this call is a function call.;public void setFunction(boolean function) {_		this.callMetaDataContext.setFunction(function)__	};specify,whether,this,call,is,a,function,call;public,void,set,function,boolean,function,this,call,meta,data,context,set,function,function
AbstractJdbcCall -> public void setFunction(boolean function);1367508310;Specify whether this call is a function call.;public void setFunction(boolean function) {_		this.callMetaDataContext.setFunction(function)__	};specify,whether,this,call,is,a,function,call;public,void,set,function,boolean,function,this,call,meta,data,context,set,function,function
AbstractJdbcCall -> public void setFunction(boolean function);1385412762;Specify whether this call is a function call.;public void setFunction(boolean function) {_		this.callMetaDataContext.setFunction(function)__	};specify,whether,this,call,is,a,function,call;public,void,set,function,boolean,function,this,call,meta,data,context,set,function,function
AbstractJdbcCall -> public void setFunction(boolean function);1407789123;Specify whether this call is a function call.;public void setFunction(boolean function) {_		this.callMetaDataContext.setFunction(function)__	};specify,whether,this,call,is,a,function,call;public,void,set,function,boolean,function,this,call,meta,data,context,set,function,function
AbstractJdbcCall -> public void setFunction(boolean function);1416833949;Specify whether this call is a function call._The default is {@code false}.;public void setFunction(boolean function) {_		this.callMetaDataContext.setFunction(function)__	};specify,whether,this,call,is,a,function,call,the,default,is,code,false;public,void,set,function,boolean,function,this,call,meta,data,context,set,function,function
AbstractJdbcCall -> public void setFunction(boolean function);1431676443;Specify whether this call is a function call._The default is {@code false}.;public void setFunction(boolean function) {_		this.callMetaDataContext.setFunction(function)__	};specify,whether,this,call,is,a,function,call,the,default,is,code,false;public,void,set,function,boolean,function,this,call,meta,data,context,set,function,function
AbstractJdbcCall -> public void setFunction(boolean function);1446038912;Specify whether this call is a function call._The default is {@code false}.;public void setFunction(boolean function) {_		this.callMetaDataContext.setFunction(function)__	};specify,whether,this,call,is,a,function,call,the,default,is,code,false;public,void,set,function,boolean,function,this,call,meta,data,context,set,function,function
AbstractJdbcCall -> public void setFunction(boolean function);1446470853;Specify whether this call is a function call._The default is {@code false}.;public void setFunction(boolean function) {_		this.callMetaDataContext.setFunction(function)__	};specify,whether,this,call,is,a,function,call,the,default,is,code,false;public,void,set,function,boolean,function,this,call,meta,data,context,set,function,function
AbstractJdbcCall -> public void setFunction(boolean function);1467730834;Specify whether this call is a function call._The default is {@code false}.;public void setFunction(boolean function) {_		this.callMetaDataContext.setFunction(function)__	};specify,whether,this,call,is,a,function,call,the,default,is,code,false;public,void,set,function,boolean,function,this,call,meta,data,context,set,function,function
AbstractJdbcCall -> public void setFunction(boolean function);1487178248;Specify whether this call is a function call._The default is {@code false}.;public void setFunction(boolean function) {_		this.callMetaDataContext.setFunction(function)__	};specify,whether,this,call,is,a,function,call,the,default,is,code,false;public,void,set,function,boolean,function,this,call,meta,data,context,set,function,function
AbstractJdbcCall -> public void setFunction(boolean function);1496837955;Specify whether this call is a function call._The default is {@code false}.;public void setFunction(boolean function) {_		this.callMetaDataContext.setFunction(function)__	};specify,whether,this,call,is,a,function,call,the,default,is,code,false;public,void,set,function,boolean,function,this,call,meta,data,context,set,function,function
AbstractJdbcCall -> public void setFunction(boolean function);1500448076;Specify whether this call is a function call._The default is {@code false}.;public void setFunction(boolean function) {_		this.callMetaDataContext.setFunction(function)__	};specify,whether,this,call,is,a,function,call,the,default,is,code,false;public,void,set,function,boolean,function,this,call,meta,data,context,set,function,function
AbstractJdbcCall -> public void setFunction(boolean function);1500495740;Specify whether this call is a function call._The default is {@code false}.;public void setFunction(boolean function) {_		this.callMetaDataContext.setFunction(function)__	};specify,whether,this,call,is,a,function,call,the,default,is,code,false;public,void,set,function,boolean,function,this,call,meta,data,context,set,function,function
AbstractJdbcCall -> public void setFunction(boolean function);1520528267;Specify whether this call is a function call._The default is {@code false}.;public void setFunction(boolean function) {_		this.callMetaDataContext.setFunction(function)__	};specify,whether,this,call,is,a,function,call,the,default,is,code,false;public,void,set,function,boolean,function,this,call,meta,data,context,set,function,function
AbstractJdbcCall -> public void setFunction(boolean function);1521457504;Specify whether this call is a function call._The default is {@code false}.;public void setFunction(boolean function) {_		this.callMetaDataContext.setFunction(function)__	};specify,whether,this,call,is,a,function,call,the,default,is,code,false;public,void,set,function,boolean,function,this,call,meta,data,context,set,function,function
AbstractJdbcCall -> public void setFunction(boolean function);1522103912;Specify whether this call is a function call._The default is {@code false}.;public void setFunction(boolean function) {_		this.callMetaDataContext.setFunction(function)__	};specify,whether,this,call,is,a,function,call,the,default,is,code,false;public,void,set,function,boolean,function,this,call,meta,data,context,set,function,function
AbstractJdbcCall -> public void setFunction(boolean function);1530174524;Specify whether this call is a function call._The default is {@code false}.;public void setFunction(boolean function) {_		this.callMetaDataContext.setFunction(function)__	};specify,whether,this,call,is,a,function,call,the,default,is,code,false;public,void,set,function,boolean,function,this,call,meta,data,context,set,function,function
AbstractJdbcCall -> protected AbstractJdbcCall(JdbcTemplate jdbcTemplate);1328020251;Constructor to be used when initializing using a {@link JdbcTemplate}._@param jdbcTemplate the JdbcTemplate to use;protected AbstractJdbcCall(JdbcTemplate jdbcTemplate) {_		this.jdbcTemplate = jdbcTemplate__	};constructor,to,be,used,when,initializing,using,a,link,jdbc,template,param,jdbc,template,the,jdbc,template,to,use;protected,abstract,jdbc,call,jdbc,template,jdbc,template,this,jdbc,template,jdbc,template
AbstractJdbcCall -> protected AbstractJdbcCall(JdbcTemplate jdbcTemplate);1356735495;Constructor to be used when initializing using a {@link JdbcTemplate}._@param jdbcTemplate the JdbcTemplate to use;protected AbstractJdbcCall(JdbcTemplate jdbcTemplate) {_		this.jdbcTemplate = jdbcTemplate__	};constructor,to,be,used,when,initializing,using,a,link,jdbc,template,param,jdbc,template,the,jdbc,template,to,use;protected,abstract,jdbc,call,jdbc,template,jdbc,template,this,jdbc,template,jdbc,template
AbstractJdbcCall -> protected AbstractJdbcCall(JdbcTemplate jdbcTemplate);1362408075;Constructor to be used when initializing using a {@link JdbcTemplate}._@param jdbcTemplate the JdbcTemplate to use;protected AbstractJdbcCall(JdbcTemplate jdbcTemplate) {_		this.jdbcTemplate = jdbcTemplate__	};constructor,to,be,used,when,initializing,using,a,link,jdbc,template,param,jdbc,template,the,jdbc,template,to,use;protected,abstract,jdbc,call,jdbc,template,jdbc,template,this,jdbc,template,jdbc,template
AbstractJdbcCall -> protected AbstractJdbcCall(JdbcTemplate jdbcTemplate);1367508310;Constructor to be used when initializing using a {@link JdbcTemplate}._@param jdbcTemplate the JdbcTemplate to use;protected AbstractJdbcCall(JdbcTemplate jdbcTemplate) {_		this.jdbcTemplate = jdbcTemplate__	};constructor,to,be,used,when,initializing,using,a,link,jdbc,template,param,jdbc,template,the,jdbc,template,to,use;protected,abstract,jdbc,call,jdbc,template,jdbc,template,this,jdbc,template,jdbc,template
AbstractJdbcCall -> protected AbstractJdbcCall(JdbcTemplate jdbcTemplate);1385412762;Constructor to be used when initializing using a {@link JdbcTemplate}._@param jdbcTemplate the JdbcTemplate to use;protected AbstractJdbcCall(JdbcTemplate jdbcTemplate) {_		this.jdbcTemplate = jdbcTemplate__	};constructor,to,be,used,when,initializing,using,a,link,jdbc,template,param,jdbc,template,the,jdbc,template,to,use;protected,abstract,jdbc,call,jdbc,template,jdbc,template,this,jdbc,template,jdbc,template
AbstractJdbcCall -> protected AbstractJdbcCall(JdbcTemplate jdbcTemplate);1407789123;Constructor to be used when initializing using a {@link JdbcTemplate}._@param jdbcTemplate the JdbcTemplate to use;protected AbstractJdbcCall(JdbcTemplate jdbcTemplate) {_		this.jdbcTemplate = jdbcTemplate__	};constructor,to,be,used,when,initializing,using,a,link,jdbc,template,param,jdbc,template,the,jdbc,template,to,use;protected,abstract,jdbc,call,jdbc,template,jdbc,template,this,jdbc,template,jdbc,template
AbstractJdbcCall -> protected AbstractJdbcCall(JdbcTemplate jdbcTemplate);1416833949;Constructor to be used when initializing using a {@link JdbcTemplate}._@param jdbcTemplate the JdbcTemplate to use;protected AbstractJdbcCall(JdbcTemplate jdbcTemplate) {_		Assert.notNull(jdbcTemplate, "JdbcTemplate must not be null")__		this.jdbcTemplate = jdbcTemplate__	};constructor,to,be,used,when,initializing,using,a,link,jdbc,template,param,jdbc,template,the,jdbc,template,to,use;protected,abstract,jdbc,call,jdbc,template,jdbc,template,assert,not,null,jdbc,template,jdbc,template,must,not,be,null,this,jdbc,template,jdbc,template
AbstractJdbcCall -> protected AbstractJdbcCall(JdbcTemplate jdbcTemplate);1431676443;Constructor to be used when initializing using a {@link JdbcTemplate}._@param jdbcTemplate the JdbcTemplate to use;protected AbstractJdbcCall(JdbcTemplate jdbcTemplate) {_		Assert.notNull(jdbcTemplate, "JdbcTemplate must not be null")__		this.jdbcTemplate = jdbcTemplate__	};constructor,to,be,used,when,initializing,using,a,link,jdbc,template,param,jdbc,template,the,jdbc,template,to,use;protected,abstract,jdbc,call,jdbc,template,jdbc,template,assert,not,null,jdbc,template,jdbc,template,must,not,be,null,this,jdbc,template,jdbc,template
AbstractJdbcCall -> protected AbstractJdbcCall(JdbcTemplate jdbcTemplate);1446038912;Constructor to be used when initializing using a {@link JdbcTemplate}._@param jdbcTemplate the JdbcTemplate to use;protected AbstractJdbcCall(JdbcTemplate jdbcTemplate) {_		Assert.notNull(jdbcTemplate, "JdbcTemplate must not be null")__		this.jdbcTemplate = jdbcTemplate__	};constructor,to,be,used,when,initializing,using,a,link,jdbc,template,param,jdbc,template,the,jdbc,template,to,use;protected,abstract,jdbc,call,jdbc,template,jdbc,template,assert,not,null,jdbc,template,jdbc,template,must,not,be,null,this,jdbc,template,jdbc,template
AbstractJdbcCall -> protected AbstractJdbcCall(JdbcTemplate jdbcTemplate);1446470853;Constructor to be used when initializing using a {@link JdbcTemplate}._@param jdbcTemplate the JdbcTemplate to use;protected AbstractJdbcCall(JdbcTemplate jdbcTemplate) {_		Assert.notNull(jdbcTemplate, "JdbcTemplate must not be null")__		this.jdbcTemplate = jdbcTemplate__	};constructor,to,be,used,when,initializing,using,a,link,jdbc,template,param,jdbc,template,the,jdbc,template,to,use;protected,abstract,jdbc,call,jdbc,template,jdbc,template,assert,not,null,jdbc,template,jdbc,template,must,not,be,null,this,jdbc,template,jdbc,template
AbstractJdbcCall -> protected AbstractJdbcCall(JdbcTemplate jdbcTemplate);1467730834;Constructor to be used when initializing using a {@link JdbcTemplate}._@param jdbcTemplate the JdbcTemplate to use;protected AbstractJdbcCall(JdbcTemplate jdbcTemplate) {_		Assert.notNull(jdbcTemplate, "JdbcTemplate must not be null")__		this.jdbcTemplate = jdbcTemplate__	};constructor,to,be,used,when,initializing,using,a,link,jdbc,template,param,jdbc,template,the,jdbc,template,to,use;protected,abstract,jdbc,call,jdbc,template,jdbc,template,assert,not,null,jdbc,template,jdbc,template,must,not,be,null,this,jdbc,template,jdbc,template
AbstractJdbcCall -> protected AbstractJdbcCall(JdbcTemplate jdbcTemplate);1487178248;Constructor to be used when initializing using a {@link JdbcTemplate}._@param jdbcTemplate the JdbcTemplate to use;protected AbstractJdbcCall(JdbcTemplate jdbcTemplate) {_		Assert.notNull(jdbcTemplate, "JdbcTemplate must not be null")__		this.jdbcTemplate = jdbcTemplate__	};constructor,to,be,used,when,initializing,using,a,link,jdbc,template,param,jdbc,template,the,jdbc,template,to,use;protected,abstract,jdbc,call,jdbc,template,jdbc,template,assert,not,null,jdbc,template,jdbc,template,must,not,be,null,this,jdbc,template,jdbc,template
AbstractJdbcCall -> protected AbstractJdbcCall(JdbcTemplate jdbcTemplate);1496837955;Constructor to be used when initializing using a {@link JdbcTemplate}._@param jdbcTemplate the JdbcTemplate to use;protected AbstractJdbcCall(JdbcTemplate jdbcTemplate) {_		Assert.notNull(jdbcTemplate, "JdbcTemplate must not be null")__		this.jdbcTemplate = jdbcTemplate__	};constructor,to,be,used,when,initializing,using,a,link,jdbc,template,param,jdbc,template,the,jdbc,template,to,use;protected,abstract,jdbc,call,jdbc,template,jdbc,template,assert,not,null,jdbc,template,jdbc,template,must,not,be,null,this,jdbc,template,jdbc,template
AbstractJdbcCall -> protected AbstractJdbcCall(JdbcTemplate jdbcTemplate);1500448076;Constructor to be used when initializing using a {@link JdbcTemplate}._@param jdbcTemplate the JdbcTemplate to use;protected AbstractJdbcCall(JdbcTemplate jdbcTemplate) {_		Assert.notNull(jdbcTemplate, "JdbcTemplate must not be null")__		this.jdbcTemplate = jdbcTemplate__	};constructor,to,be,used,when,initializing,using,a,link,jdbc,template,param,jdbc,template,the,jdbc,template,to,use;protected,abstract,jdbc,call,jdbc,template,jdbc,template,assert,not,null,jdbc,template,jdbc,template,must,not,be,null,this,jdbc,template,jdbc,template
AbstractJdbcCall -> protected AbstractJdbcCall(JdbcTemplate jdbcTemplate);1500495740;Constructor to be used when initializing using a {@link JdbcTemplate}._@param jdbcTemplate the JdbcTemplate to use;protected AbstractJdbcCall(JdbcTemplate jdbcTemplate) {_		Assert.notNull(jdbcTemplate, "JdbcTemplate must not be null")__		this.jdbcTemplate = jdbcTemplate__	};constructor,to,be,used,when,initializing,using,a,link,jdbc,template,param,jdbc,template,the,jdbc,template,to,use;protected,abstract,jdbc,call,jdbc,template,jdbc,template,assert,not,null,jdbc,template,jdbc,template,must,not,be,null,this,jdbc,template,jdbc,template
AbstractJdbcCall -> protected AbstractJdbcCall(JdbcTemplate jdbcTemplate);1520528267;Constructor to be used when initializing using a {@link JdbcTemplate}._@param jdbcTemplate the JdbcTemplate to use;protected AbstractJdbcCall(JdbcTemplate jdbcTemplate) {_		Assert.notNull(jdbcTemplate, "JdbcTemplate must not be null")__		this.jdbcTemplate = jdbcTemplate__	};constructor,to,be,used,when,initializing,using,a,link,jdbc,template,param,jdbc,template,the,jdbc,template,to,use;protected,abstract,jdbc,call,jdbc,template,jdbc,template,assert,not,null,jdbc,template,jdbc,template,must,not,be,null,this,jdbc,template,jdbc,template
AbstractJdbcCall -> protected AbstractJdbcCall(JdbcTemplate jdbcTemplate);1521457504;Constructor to be used when initializing using a {@link JdbcTemplate}._@param jdbcTemplate the JdbcTemplate to use;protected AbstractJdbcCall(JdbcTemplate jdbcTemplate) {_		Assert.notNull(jdbcTemplate, "JdbcTemplate must not be null")__		this.jdbcTemplate = jdbcTemplate__	};constructor,to,be,used,when,initializing,using,a,link,jdbc,template,param,jdbc,template,the,jdbc,template,to,use;protected,abstract,jdbc,call,jdbc,template,jdbc,template,assert,not,null,jdbc,template,jdbc,template,must,not,be,null,this,jdbc,template,jdbc,template
AbstractJdbcCall -> protected AbstractJdbcCall(JdbcTemplate jdbcTemplate);1522103912;Constructor to be used when initializing using a {@link JdbcTemplate}._@param jdbcTemplate the JdbcTemplate to use;protected AbstractJdbcCall(JdbcTemplate jdbcTemplate) {_		Assert.notNull(jdbcTemplate, "JdbcTemplate must not be null")__		this.jdbcTemplate = jdbcTemplate__	};constructor,to,be,used,when,initializing,using,a,link,jdbc,template,param,jdbc,template,the,jdbc,template,to,use;protected,abstract,jdbc,call,jdbc,template,jdbc,template,assert,not,null,jdbc,template,jdbc,template,must,not,be,null,this,jdbc,template,jdbc,template
AbstractJdbcCall -> protected AbstractJdbcCall(JdbcTemplate jdbcTemplate);1530174524;Constructor to be used when initializing using a {@link JdbcTemplate}._@param jdbcTemplate the JdbcTemplate to use;protected AbstractJdbcCall(JdbcTemplate jdbcTemplate) {_		Assert.notNull(jdbcTemplate, "JdbcTemplate must not be null")__		this.jdbcTemplate = jdbcTemplate__	};constructor,to,be,used,when,initializing,using,a,link,jdbc,template,param,jdbc,template,the,jdbc,template,to,use;protected,abstract,jdbc,call,jdbc,template,jdbc,template,assert,not,null,jdbc,template,jdbc,template,must,not,be,null,this,jdbc,template,jdbc,template
AbstractJdbcCall -> public final synchronized void compile() throws InvalidDataAccessApiUsageException;1520528267;Compile this JdbcCall using provided parameters and meta data plus other settings._<p>This finalizes the configuration for this object and subsequent attempts to compile are_ignored. This will be implicitly called the first time an un-compiled call is executed._@throws org.springframework.dao.InvalidDataAccessApiUsageException if the object hasn't_been correctly initialized, for example if no DataSource has been provided;public final synchronized void compile() throws InvalidDataAccessApiUsageException {_		if (!isCompiled()) {_			if (getProcedureName() == null) {_				throw new InvalidDataAccessApiUsageException("Procedure or Function name is required")__			}_			try {_				this.jdbcTemplate.afterPropertiesSet()__			}_			catch (IllegalArgumentException ex) {_				throw new InvalidDataAccessApiUsageException(ex.getMessage())__			}_			compileInternal()__			this.compiled = true__			if (logger.isDebugEnabled()) {_				logger.debug("SqlCall for " + (isFunction() ? "function" : "procedure") +_						" [" + getProcedureName() + "] compiled")__			}_		}_	};compile,this,jdbc,call,using,provided,parameters,and,meta,data,plus,other,settings,p,this,finalizes,the,configuration,for,this,object,and,subsequent,attempts,to,compile,are,ignored,this,will,be,implicitly,called,the,first,time,an,un,compiled,call,is,executed,throws,org,springframework,dao,invalid,data,access,api,usage,exception,if,the,object,hasn,t,been,correctly,initialized,for,example,if,no,data,source,has,been,provided;public,final,synchronized,void,compile,throws,invalid,data,access,api,usage,exception,if,is,compiled,if,get,procedure,name,null,throw,new,invalid,data,access,api,usage,exception,procedure,or,function,name,is,required,try,this,jdbc,template,after,properties,set,catch,illegal,argument,exception,ex,throw,new,invalid,data,access,api,usage,exception,ex,get,message,compile,internal,this,compiled,true,if,logger,is,debug,enabled,logger,debug,sql,call,for,is,function,function,procedure,get,procedure,name,compiled
AbstractJdbcCall -> public final synchronized void compile() throws InvalidDataAccessApiUsageException;1521457504;Compile this JdbcCall using provided parameters and meta-data plus other settings._<p>This finalizes the configuration for this object and subsequent attempts to compile are_ignored. This will be implicitly called the first time an un-compiled call is executed._@throws org.springframework.dao.InvalidDataAccessApiUsageException if the object hasn't_been correctly initialized, for example if no DataSource has been provided;public final synchronized void compile() throws InvalidDataAccessApiUsageException {_		if (!isCompiled()) {_			if (getProcedureName() == null) {_				throw new InvalidDataAccessApiUsageException("Procedure or Function name is required")__			}_			try {_				this.jdbcTemplate.afterPropertiesSet()__			}_			catch (IllegalArgumentException ex) {_				throw new InvalidDataAccessApiUsageException(ex.getMessage())__			}_			compileInternal()__			this.compiled = true__			if (logger.isDebugEnabled()) {_				logger.debug("SqlCall for " + (isFunction() ? "function" : "procedure") +_						" [" + getProcedureName() + "] compiled")__			}_		}_	};compile,this,jdbc,call,using,provided,parameters,and,meta,data,plus,other,settings,p,this,finalizes,the,configuration,for,this,object,and,subsequent,attempts,to,compile,are,ignored,this,will,be,implicitly,called,the,first,time,an,un,compiled,call,is,executed,throws,org,springframework,dao,invalid,data,access,api,usage,exception,if,the,object,hasn,t,been,correctly,initialized,for,example,if,no,data,source,has,been,provided;public,final,synchronized,void,compile,throws,invalid,data,access,api,usage,exception,if,is,compiled,if,get,procedure,name,null,throw,new,invalid,data,access,api,usage,exception,procedure,or,function,name,is,required,try,this,jdbc,template,after,properties,set,catch,illegal,argument,exception,ex,throw,new,invalid,data,access,api,usage,exception,ex,get,message,compile,internal,this,compiled,true,if,logger,is,debug,enabled,logger,debug,sql,call,for,is,function,function,procedure,get,procedure,name,compiled
AbstractJdbcCall -> public final synchronized void compile() throws InvalidDataAccessApiUsageException;1522103912;Compile this JdbcCall using provided parameters and meta-data plus other settings._<p>This finalizes the configuration for this object and subsequent attempts to compile are_ignored. This will be implicitly called the first time an un-compiled call is executed._@throws org.springframework.dao.InvalidDataAccessApiUsageException if the object hasn't_been correctly initialized, for example if no DataSource has been provided;public final synchronized void compile() throws InvalidDataAccessApiUsageException {_		if (!isCompiled()) {_			if (getProcedureName() == null) {_				throw new InvalidDataAccessApiUsageException("Procedure or Function name is required")__			}_			try {_				this.jdbcTemplate.afterPropertiesSet()__			}_			catch (IllegalArgumentException ex) {_				throw new InvalidDataAccessApiUsageException(ex.getMessage())__			}_			compileInternal()__			this.compiled = true__			if (logger.isDebugEnabled()) {_				logger.debug("SqlCall for " + (isFunction() ? "function" : "procedure") +_						" [" + getProcedureName() + "] compiled")__			}_		}_	};compile,this,jdbc,call,using,provided,parameters,and,meta,data,plus,other,settings,p,this,finalizes,the,configuration,for,this,object,and,subsequent,attempts,to,compile,are,ignored,this,will,be,implicitly,called,the,first,time,an,un,compiled,call,is,executed,throws,org,springframework,dao,invalid,data,access,api,usage,exception,if,the,object,hasn,t,been,correctly,initialized,for,example,if,no,data,source,has,been,provided;public,final,synchronized,void,compile,throws,invalid,data,access,api,usage,exception,if,is,compiled,if,get,procedure,name,null,throw,new,invalid,data,access,api,usage,exception,procedure,or,function,name,is,required,try,this,jdbc,template,after,properties,set,catch,illegal,argument,exception,ex,throw,new,invalid,data,access,api,usage,exception,ex,get,message,compile,internal,this,compiled,true,if,logger,is,debug,enabled,logger,debug,sql,call,for,is,function,function,procedure,get,procedure,name,compiled
AbstractJdbcCall -> public final synchronized void compile() throws InvalidDataAccessApiUsageException;1530174524;Compile this JdbcCall using provided parameters and meta-data plus other settings._<p>This finalizes the configuration for this object and subsequent attempts to compile are_ignored. This will be implicitly called the first time an un-compiled call is executed._@throws org.springframework.dao.InvalidDataAccessApiUsageException if the object hasn't_been correctly initialized, for example if no DataSource has been provided;public final synchronized void compile() throws InvalidDataAccessApiUsageException {_		if (!isCompiled()) {_			if (getProcedureName() == null) {_				throw new InvalidDataAccessApiUsageException("Procedure or Function name is required")__			}_			try {_				this.jdbcTemplate.afterPropertiesSet()__			}_			catch (IllegalArgumentException ex) {_				throw new InvalidDataAccessApiUsageException(ex.getMessage())__			}_			compileInternal()__			this.compiled = true__			if (logger.isDebugEnabled()) {_				logger.debug("SqlCall for " + (isFunction() ? "function" : "procedure") +_						" [" + getProcedureName() + "] compiled")__			}_		}_	};compile,this,jdbc,call,using,provided,parameters,and,meta,data,plus,other,settings,p,this,finalizes,the,configuration,for,this,object,and,subsequent,attempts,to,compile,are,ignored,this,will,be,implicitly,called,the,first,time,an,un,compiled,call,is,executed,throws,org,springframework,dao,invalid,data,access,api,usage,exception,if,the,object,hasn,t,been,correctly,initialized,for,example,if,no,data,source,has,been,provided;public,final,synchronized,void,compile,throws,invalid,data,access,api,usage,exception,if,is,compiled,if,get,procedure,name,null,throw,new,invalid,data,access,api,usage,exception,procedure,or,function,name,is,required,try,this,jdbc,template,after,properties,set,catch,illegal,argument,exception,ex,throw,new,invalid,data,access,api,usage,exception,ex,get,message,compile,internal,this,compiled,true,if,logger,is,debug,enabled,logger,debug,sql,call,for,is,function,function,procedure,get,procedure,name,compiled
AbstractJdbcCall -> public void setProcedureName(String procedureName);1328020251;Set the name of the stored procedure.;public void setProcedureName(String procedureName) {_		this.callMetaDataContext.setProcedureName(procedureName)__	};set,the,name,of,the,stored,procedure;public,void,set,procedure,name,string,procedure,name,this,call,meta,data,context,set,procedure,name,procedure,name
AbstractJdbcCall -> public void setProcedureName(String procedureName);1356735495;Set the name of the stored procedure.;public void setProcedureName(String procedureName) {_		this.callMetaDataContext.setProcedureName(procedureName)__	};set,the,name,of,the,stored,procedure;public,void,set,procedure,name,string,procedure,name,this,call,meta,data,context,set,procedure,name,procedure,name
AbstractJdbcCall -> public void setProcedureName(String procedureName);1362408075;Set the name of the stored procedure.;public void setProcedureName(String procedureName) {_		this.callMetaDataContext.setProcedureName(procedureName)__	};set,the,name,of,the,stored,procedure;public,void,set,procedure,name,string,procedure,name,this,call,meta,data,context,set,procedure,name,procedure,name
AbstractJdbcCall -> public void setProcedureName(String procedureName);1367508310;Set the name of the stored procedure.;public void setProcedureName(String procedureName) {_		this.callMetaDataContext.setProcedureName(procedureName)__	};set,the,name,of,the,stored,procedure;public,void,set,procedure,name,string,procedure,name,this,call,meta,data,context,set,procedure,name,procedure,name
AbstractJdbcCall -> public void setProcedureName(String procedureName);1385412762;Set the name of the stored procedure.;public void setProcedureName(String procedureName) {_		this.callMetaDataContext.setProcedureName(procedureName)__	};set,the,name,of,the,stored,procedure;public,void,set,procedure,name,string,procedure,name,this,call,meta,data,context,set,procedure,name,procedure,name
AbstractJdbcCall -> public void setProcedureName(String procedureName);1407789123;Set the name of the stored procedure.;public void setProcedureName(String procedureName) {_		this.callMetaDataContext.setProcedureName(procedureName)__	};set,the,name,of,the,stored,procedure;public,void,set,procedure,name,string,procedure,name,this,call,meta,data,context,set,procedure,name,procedure,name
AbstractJdbcCall -> public void setProcedureName(String procedureName);1416833949;Set the name of the stored procedure.;public void setProcedureName(String procedureName) {_		this.callMetaDataContext.setProcedureName(procedureName)__	};set,the,name,of,the,stored,procedure;public,void,set,procedure,name,string,procedure,name,this,call,meta,data,context,set,procedure,name,procedure,name
AbstractJdbcCall -> public void setProcedureName(String procedureName);1431676443;Set the name of the stored procedure.;public void setProcedureName(String procedureName) {_		this.callMetaDataContext.setProcedureName(procedureName)__	};set,the,name,of,the,stored,procedure;public,void,set,procedure,name,string,procedure,name,this,call,meta,data,context,set,procedure,name,procedure,name
AbstractJdbcCall -> public void setProcedureName(String procedureName);1446038912;Set the name of the stored procedure.;public void setProcedureName(String procedureName) {_		this.callMetaDataContext.setProcedureName(procedureName)__	};set,the,name,of,the,stored,procedure;public,void,set,procedure,name,string,procedure,name,this,call,meta,data,context,set,procedure,name,procedure,name
AbstractJdbcCall -> public void setProcedureName(String procedureName);1446470853;Set the name of the stored procedure.;public void setProcedureName(String procedureName) {_		this.callMetaDataContext.setProcedureName(procedureName)__	};set,the,name,of,the,stored,procedure;public,void,set,procedure,name,string,procedure,name,this,call,meta,data,context,set,procedure,name,procedure,name
AbstractJdbcCall -> public void setProcedureName(String procedureName);1467730834;Set the name of the stored procedure.;public void setProcedureName(String procedureName) {_		this.callMetaDataContext.setProcedureName(procedureName)__	};set,the,name,of,the,stored,procedure;public,void,set,procedure,name,string,procedure,name,this,call,meta,data,context,set,procedure,name,procedure,name
AbstractJdbcCall -> public void setProcedureName(String procedureName);1487178248;Set the name of the stored procedure.;public void setProcedureName(String procedureName) {_		this.callMetaDataContext.setProcedureName(procedureName)__	};set,the,name,of,the,stored,procedure;public,void,set,procedure,name,string,procedure,name,this,call,meta,data,context,set,procedure,name,procedure,name
AbstractJdbcCall -> public void setProcedureName(String procedureName);1496837955;Set the name of the stored procedure.;public void setProcedureName(String procedureName) {_		this.callMetaDataContext.setProcedureName(procedureName)__	};set,the,name,of,the,stored,procedure;public,void,set,procedure,name,string,procedure,name,this,call,meta,data,context,set,procedure,name,procedure,name
AbstractJdbcCall -> public void setSchemaName(String schemaName);1328020251;Set the schema name to use,;public void setSchemaName(String schemaName) {_		this.callMetaDataContext.setSchemaName(schemaName)__	};set,the,schema,name,to,use;public,void,set,schema,name,string,schema,name,this,call,meta,data,context,set,schema,name,schema,name
AbstractJdbcCall -> public void setSchemaName(String schemaName);1356735495;Set the schema name to use,;public void setSchemaName(String schemaName) {_		this.callMetaDataContext.setSchemaName(schemaName)__	};set,the,schema,name,to,use;public,void,set,schema,name,string,schema,name,this,call,meta,data,context,set,schema,name,schema,name
AbstractJdbcCall -> public void setSchemaName(String schemaName);1362408075;Set the schema name to use,;public void setSchemaName(String schemaName) {_		this.callMetaDataContext.setSchemaName(schemaName)__	};set,the,schema,name,to,use;public,void,set,schema,name,string,schema,name,this,call,meta,data,context,set,schema,name,schema,name
AbstractJdbcCall -> public void setSchemaName(String schemaName);1367508310;Set the schema name to use,;public void setSchemaName(String schemaName) {_		this.callMetaDataContext.setSchemaName(schemaName)__	};set,the,schema,name,to,use;public,void,set,schema,name,string,schema,name,this,call,meta,data,context,set,schema,name,schema,name
AbstractJdbcCall -> public void setSchemaName(String schemaName);1385412762;Set the schema name to use,;public void setSchemaName(String schemaName) {_		this.callMetaDataContext.setSchemaName(schemaName)__	};set,the,schema,name,to,use;public,void,set,schema,name,string,schema,name,this,call,meta,data,context,set,schema,name,schema,name
AbstractJdbcCall -> public void setSchemaName(String schemaName);1407789123;Set the schema name to use.;public void setSchemaName(String schemaName) {_		this.callMetaDataContext.setSchemaName(schemaName)__	};set,the,schema,name,to,use;public,void,set,schema,name,string,schema,name,this,call,meta,data,context,set,schema,name,schema,name
AbstractJdbcCall -> public void setSchemaName(String schemaName);1416833949;Set the schema name to use.;public void setSchemaName(String schemaName) {_		this.callMetaDataContext.setSchemaName(schemaName)__	};set,the,schema,name,to,use;public,void,set,schema,name,string,schema,name,this,call,meta,data,context,set,schema,name,schema,name
AbstractJdbcCall -> public void setSchemaName(String schemaName);1431676443;Set the schema name to use.;public void setSchemaName(String schemaName) {_		this.callMetaDataContext.setSchemaName(schemaName)__	};set,the,schema,name,to,use;public,void,set,schema,name,string,schema,name,this,call,meta,data,context,set,schema,name,schema,name
AbstractJdbcCall -> public void setSchemaName(String schemaName);1446038912;Set the schema name to use.;public void setSchemaName(String schemaName) {_		this.callMetaDataContext.setSchemaName(schemaName)__	};set,the,schema,name,to,use;public,void,set,schema,name,string,schema,name,this,call,meta,data,context,set,schema,name,schema,name
AbstractJdbcCall -> public void setSchemaName(String schemaName);1446470853;Set the schema name to use.;public void setSchemaName(String schemaName) {_		this.callMetaDataContext.setSchemaName(schemaName)__	};set,the,schema,name,to,use;public,void,set,schema,name,string,schema,name,this,call,meta,data,context,set,schema,name,schema,name
AbstractJdbcCall -> public void setSchemaName(String schemaName);1467730834;Set the schema name to use.;public void setSchemaName(String schemaName) {_		this.callMetaDataContext.setSchemaName(schemaName)__	};set,the,schema,name,to,use;public,void,set,schema,name,string,schema,name,this,call,meta,data,context,set,schema,name,schema,name
AbstractJdbcCall -> public void setSchemaName(String schemaName);1487178248;Set the schema name to use.;public void setSchemaName(String schemaName) {_		this.callMetaDataContext.setSchemaName(schemaName)__	};set,the,schema,name,to,use;public,void,set,schema,name,string,schema,name,this,call,meta,data,context,set,schema,name,schema,name
AbstractJdbcCall -> public void setSchemaName(String schemaName);1496837955;Set the schema name to use.;public void setSchemaName(String schemaName) {_		this.callMetaDataContext.setSchemaName(schemaName)__	};set,the,schema,name,to,use;public,void,set,schema,name,string,schema,name,this,call,meta,data,context,set,schema,name,schema,name
AbstractJdbcCall -> protected void checkCompiled();1328020251;Check whether this operation has been compiled already__lazily compile it if not already compiled._<p>Automatically called by <code>doExecute</code>.;protected void checkCompiled() {_		if (!isCompiled()) {_			logger.debug("JdbcCall call not compiled before execution - invoking compile")__			compile()__		}_	};check,whether,this,operation,has,been,compiled,already,lazily,compile,it,if,not,already,compiled,p,automatically,called,by,code,do,execute,code;protected,void,check,compiled,if,is,compiled,logger,debug,jdbc,call,call,not,compiled,before,execution,invoking,compile,compile
AbstractJdbcCall -> protected void checkCompiled();1356735495;Check whether this operation has been compiled already__lazily compile it if not already compiled._<p>Automatically called by {@code doExecute}.;protected void checkCompiled() {_		if (!isCompiled()) {_			logger.debug("JdbcCall call not compiled before execution - invoking compile")__			compile()__		}_	};check,whether,this,operation,has,been,compiled,already,lazily,compile,it,if,not,already,compiled,p,automatically,called,by,code,do,execute;protected,void,check,compiled,if,is,compiled,logger,debug,jdbc,call,call,not,compiled,before,execution,invoking,compile,compile
AbstractJdbcCall -> protected void checkCompiled();1362408075;Check whether this operation has been compiled already__lazily compile it if not already compiled._<p>Automatically called by {@code doExecute}.;protected void checkCompiled() {_		if (!isCompiled()) {_			logger.debug("JdbcCall call not compiled before execution - invoking compile")__			compile()__		}_	};check,whether,this,operation,has,been,compiled,already,lazily,compile,it,if,not,already,compiled,p,automatically,called,by,code,do,execute;protected,void,check,compiled,if,is,compiled,logger,debug,jdbc,call,call,not,compiled,before,execution,invoking,compile,compile
AbstractJdbcCall -> protected void checkCompiled();1367508310;Check whether this operation has been compiled already__lazily compile it if not already compiled._<p>Automatically called by {@code doExecute}.;protected void checkCompiled() {_		if (!isCompiled()) {_			logger.debug("JdbcCall call not compiled before execution - invoking compile")__			compile()__		}_	};check,whether,this,operation,has,been,compiled,already,lazily,compile,it,if,not,already,compiled,p,automatically,called,by,code,do,execute;protected,void,check,compiled,if,is,compiled,logger,debug,jdbc,call,call,not,compiled,before,execution,invoking,compile,compile
AbstractJdbcCall -> protected void checkCompiled();1385412762;Check whether this operation has been compiled already__lazily compile it if not already compiled._<p>Automatically called by {@code doExecute}.;protected void checkCompiled() {_		if (!isCompiled()) {_			logger.debug("JdbcCall call not compiled before execution - invoking compile")__			compile()__		}_	};check,whether,this,operation,has,been,compiled,already,lazily,compile,it,if,not,already,compiled,p,automatically,called,by,code,do,execute;protected,void,check,compiled,if,is,compiled,logger,debug,jdbc,call,call,not,compiled,before,execution,invoking,compile,compile
AbstractJdbcCall -> protected void checkCompiled();1407789123;Check whether this operation has been compiled already__lazily compile it if not already compiled._<p>Automatically called by {@code doExecute}.;protected void checkCompiled() {_		if (!isCompiled()) {_			logger.debug("JdbcCall call not compiled before execution - invoking compile")__			compile()__		}_	};check,whether,this,operation,has,been,compiled,already,lazily,compile,it,if,not,already,compiled,p,automatically,called,by,code,do,execute;protected,void,check,compiled,if,is,compiled,logger,debug,jdbc,call,call,not,compiled,before,execution,invoking,compile,compile
AbstractJdbcCall -> protected void checkCompiled();1416833949;Check whether this operation has been compiled already__lazily compile it if not already compiled._<p>Automatically called by {@code doExecute}.;protected void checkCompiled() {_		if (!isCompiled()) {_			logger.debug("JdbcCall call not compiled before execution - invoking compile")__			compile()__		}_	};check,whether,this,operation,has,been,compiled,already,lazily,compile,it,if,not,already,compiled,p,automatically,called,by,code,do,execute;protected,void,check,compiled,if,is,compiled,logger,debug,jdbc,call,call,not,compiled,before,execution,invoking,compile,compile
AbstractJdbcCall -> protected void checkCompiled();1431676443;Check whether this operation has been compiled already__lazily compile it if not already compiled._<p>Automatically called by {@code doExecute}.;protected void checkCompiled() {_		if (!isCompiled()) {_			logger.debug("JdbcCall call not compiled before execution - invoking compile")__			compile()__		}_	};check,whether,this,operation,has,been,compiled,already,lazily,compile,it,if,not,already,compiled,p,automatically,called,by,code,do,execute;protected,void,check,compiled,if,is,compiled,logger,debug,jdbc,call,call,not,compiled,before,execution,invoking,compile,compile
AbstractJdbcCall -> protected void checkCompiled();1446038912;Check whether this operation has been compiled already__lazily compile it if not already compiled._<p>Automatically called by {@code doExecute}.;protected void checkCompiled() {_		if (!isCompiled()) {_			logger.debug("JdbcCall call not compiled before execution - invoking compile")__			compile()__		}_	};check,whether,this,operation,has,been,compiled,already,lazily,compile,it,if,not,already,compiled,p,automatically,called,by,code,do,execute;protected,void,check,compiled,if,is,compiled,logger,debug,jdbc,call,call,not,compiled,before,execution,invoking,compile,compile
AbstractJdbcCall -> protected void checkCompiled();1446470853;Check whether this operation has been compiled already__lazily compile it if not already compiled._<p>Automatically called by {@code doExecute}.;protected void checkCompiled() {_		if (!isCompiled()) {_			logger.debug("JdbcCall call not compiled before execution - invoking compile")__			compile()__		}_	};check,whether,this,operation,has,been,compiled,already,lazily,compile,it,if,not,already,compiled,p,automatically,called,by,code,do,execute;protected,void,check,compiled,if,is,compiled,logger,debug,jdbc,call,call,not,compiled,before,execution,invoking,compile,compile
AbstractJdbcCall -> protected void checkCompiled();1467730834;Check whether this operation has been compiled already__lazily compile it if not already compiled._<p>Automatically called by {@code doExecute}.;protected void checkCompiled() {_		if (!isCompiled()) {_			logger.debug("JdbcCall call not compiled before execution - invoking compile")__			compile()__		}_	};check,whether,this,operation,has,been,compiled,already,lazily,compile,it,if,not,already,compiled,p,automatically,called,by,code,do,execute;protected,void,check,compiled,if,is,compiled,logger,debug,jdbc,call,call,not,compiled,before,execution,invoking,compile,compile
AbstractJdbcCall -> protected void checkCompiled();1487178248;Check whether this operation has been compiled already__lazily compile it if not already compiled._<p>Automatically called by {@code doExecute}.;protected void checkCompiled() {_		if (!isCompiled()) {_			logger.debug("JdbcCall call not compiled before execution - invoking compile")__			compile()__		}_	};check,whether,this,operation,has,been,compiled,already,lazily,compile,it,if,not,already,compiled,p,automatically,called,by,code,do,execute;protected,void,check,compiled,if,is,compiled,logger,debug,jdbc,call,call,not,compiled,before,execution,invoking,compile,compile
AbstractJdbcCall -> protected void checkCompiled();1496837955;Check whether this operation has been compiled already__lazily compile it if not already compiled._<p>Automatically called by {@code doExecute}.;protected void checkCompiled() {_		if (!isCompiled()) {_			logger.debug("JdbcCall call not compiled before execution - invoking compile")__			compile()__		}_	};check,whether,this,operation,has,been,compiled,already,lazily,compile,it,if,not,already,compiled,p,automatically,called,by,code,do,execute;protected,void,check,compiled,if,is,compiled,logger,debug,jdbc,call,call,not,compiled,before,execution,invoking,compile,compile
AbstractJdbcCall -> protected void checkCompiled();1500448076;Check whether this operation has been compiled already__lazily compile it if not already compiled._<p>Automatically called by {@code doExecute}.;protected void checkCompiled() {_		if (!isCompiled()) {_			logger.debug("JdbcCall call not compiled before execution - invoking compile")__			compile()__		}_	};check,whether,this,operation,has,been,compiled,already,lazily,compile,it,if,not,already,compiled,p,automatically,called,by,code,do,execute;protected,void,check,compiled,if,is,compiled,logger,debug,jdbc,call,call,not,compiled,before,execution,invoking,compile,compile
AbstractJdbcCall -> protected void checkCompiled();1500495740;Check whether this operation has been compiled already__lazily compile it if not already compiled._<p>Automatically called by {@code doExecute}.;protected void checkCompiled() {_		if (!isCompiled()) {_			logger.debug("JdbcCall call not compiled before execution - invoking compile")__			compile()__		}_	};check,whether,this,operation,has,been,compiled,already,lazily,compile,it,if,not,already,compiled,p,automatically,called,by,code,do,execute;protected,void,check,compiled,if,is,compiled,logger,debug,jdbc,call,call,not,compiled,before,execution,invoking,compile,compile
AbstractJdbcCall -> protected void checkCompiled();1520528267;Check whether this operation has been compiled already__lazily compile it if not already compiled._<p>Automatically called by {@code doExecute}.;protected void checkCompiled() {_		if (!isCompiled()) {_			logger.debug("JdbcCall call not compiled before execution - invoking compile")__			compile()__		}_	};check,whether,this,operation,has,been,compiled,already,lazily,compile,it,if,not,already,compiled,p,automatically,called,by,code,do,execute;protected,void,check,compiled,if,is,compiled,logger,debug,jdbc,call,call,not,compiled,before,execution,invoking,compile,compile
AbstractJdbcCall -> protected void checkCompiled();1521457504;Check whether this operation has been compiled already__lazily compile it if not already compiled._<p>Automatically called by {@code doExecute}.;protected void checkCompiled() {_		if (!isCompiled()) {_			logger.debug("JdbcCall call not compiled before execution - invoking compile")__			compile()__		}_	};check,whether,this,operation,has,been,compiled,already,lazily,compile,it,if,not,already,compiled,p,automatically,called,by,code,do,execute;protected,void,check,compiled,if,is,compiled,logger,debug,jdbc,call,call,not,compiled,before,execution,invoking,compile,compile
AbstractJdbcCall -> protected void checkCompiled();1522103912;Check whether this operation has been compiled already__lazily compile it if not already compiled._<p>Automatically called by {@code doExecute}.;protected void checkCompiled() {_		if (!isCompiled()) {_			logger.debug("JdbcCall call not compiled before execution - invoking compile")__			compile()__		}_	};check,whether,this,operation,has,been,compiled,already,lazily,compile,it,if,not,already,compiled,p,automatically,called,by,code,do,execute;protected,void,check,compiled,if,is,compiled,logger,debug,jdbc,call,call,not,compiled,before,execution,invoking,compile,compile
AbstractJdbcCall -> protected void checkCompiled();1530174524;Check whether this operation has been compiled already__lazily compile it if not already compiled._<p>Automatically called by {@code doExecute}.;protected void checkCompiled() {_		if (!isCompiled()) {_			logger.debug("JdbcCall call not compiled before execution - invoking compile")__			compile()__		}_	};check,whether,this,operation,has,been,compiled,already,lazily,compile,it,if,not,already,compiled,p,automatically,called,by,code,do,execute;protected,void,check,compiled,if,is,compiled,logger,debug,jdbc,call,call,not,compiled,before,execution,invoking,compile,compile
AbstractJdbcCall -> @Nullable 	public String getSchemaName();1496837955;Get the schema name used.;@Nullable_	public String getSchemaName() {_		return this.callMetaDataContext.getSchemaName()__	};get,the,schema,name,used;nullable,public,string,get,schema,name,return,this,call,meta,data,context,get,schema,name
AbstractJdbcCall -> @Nullable 	public String getSchemaName();1500448076;Get the schema name used.;@Nullable_	public String getSchemaName() {_		return this.callMetaDataContext.getSchemaName()__	};get,the,schema,name,used;nullable,public,string,get,schema,name,return,this,call,meta,data,context,get,schema,name
AbstractJdbcCall -> @Nullable 	public String getSchemaName();1500495740;Get the schema name used.;@Nullable_	public String getSchemaName() {_		return this.callMetaDataContext.getSchemaName()__	};get,the,schema,name,used;nullable,public,string,get,schema,name,return,this,call,meta,data,context,get,schema,name
AbstractJdbcCall -> @Nullable 	public String getSchemaName();1520528267;Get the schema name used.;@Nullable_	public String getSchemaName() {_		return this.callMetaDataContext.getSchemaName()__	};get,the,schema,name,used;nullable,public,string,get,schema,name,return,this,call,meta,data,context,get,schema,name
AbstractJdbcCall -> @Nullable 	public String getSchemaName();1521457504;Get the schema name used.;@Nullable_	public String getSchemaName() {_		return this.callMetaDataContext.getSchemaName()__	};get,the,schema,name,used;nullable,public,string,get,schema,name,return,this,call,meta,data,context,get,schema,name
AbstractJdbcCall -> @Nullable 	public String getSchemaName();1522103912;Get the schema name used.;@Nullable_	public String getSchemaName() {_		return this.callMetaDataContext.getSchemaName()__	};get,the,schema,name,used;nullable,public,string,get,schema,name,return,this,call,meta,data,context,get,schema,name
AbstractJdbcCall -> @Nullable 	public String getSchemaName();1530174524;Get the schema name used.;@Nullable_	public String getSchemaName() {_		return this.callMetaDataContext.getSchemaName()__	};get,the,schema,name,used;nullable,public,string,get,schema,name,return,this,call,meta,data,context,get,schema,name
AbstractJdbcCall -> protected Map<String, Object> doExecute(Map<String, ?> args);1328020251;Method that provides execution of the call using the passed in Map of parameters_@param args Map of parameter name and values_@return Map of out parameters;protected Map<String, Object> doExecute(Map<String, ?> args) {_		checkCompiled()__		Map<String, ?> params = matchInParameterValuesWithCallParameters(args)__		return executeCallInternal(params)__	};method,that,provides,execution,of,the,call,using,the,passed,in,map,of,parameters,param,args,map,of,parameter,name,and,values,return,map,of,out,parameters;protected,map,string,object,do,execute,map,string,args,check,compiled,map,string,params,match,in,parameter,values,with,call,parameters,args,return,execute,call,internal,params
AbstractJdbcCall -> protected Map<String, Object> doExecute(Map<String, ?> args);1356735495;Method that provides execution of the call using the passed in Map of parameters_@param args Map of parameter name and values_@return Map of out parameters;protected Map<String, Object> doExecute(Map<String, ?> args) {_		checkCompiled()__		Map<String, ?> params = matchInParameterValuesWithCallParameters(args)__		return executeCallInternal(params)__	};method,that,provides,execution,of,the,call,using,the,passed,in,map,of,parameters,param,args,map,of,parameter,name,and,values,return,map,of,out,parameters;protected,map,string,object,do,execute,map,string,args,check,compiled,map,string,params,match,in,parameter,values,with,call,parameters,args,return,execute,call,internal,params
AbstractJdbcCall -> protected Map<String, Object> doExecute(Map<String, ?> args);1362408075;Method that provides execution of the call using the passed in Map of parameters_@param args Map of parameter name and values_@return Map of out parameters;protected Map<String, Object> doExecute(Map<String, ?> args) {_		checkCompiled()__		Map<String, ?> params = matchInParameterValuesWithCallParameters(args)__		return executeCallInternal(params)__	};method,that,provides,execution,of,the,call,using,the,passed,in,map,of,parameters,param,args,map,of,parameter,name,and,values,return,map,of,out,parameters;protected,map,string,object,do,execute,map,string,args,check,compiled,map,string,params,match,in,parameter,values,with,call,parameters,args,return,execute,call,internal,params
AbstractJdbcCall -> protected Map<String, Object> doExecute(Map<String, ?> args);1367508310;Method that provides execution of the call using the passed in Map of parameters_@param args Map of parameter name and values_@return Map of out parameters;protected Map<String, Object> doExecute(Map<String, ?> args) {_		checkCompiled()__		Map<String, ?> params = matchInParameterValuesWithCallParameters(args)__		return executeCallInternal(params)__	};method,that,provides,execution,of,the,call,using,the,passed,in,map,of,parameters,param,args,map,of,parameter,name,and,values,return,map,of,out,parameters;protected,map,string,object,do,execute,map,string,args,check,compiled,map,string,params,match,in,parameter,values,with,call,parameters,args,return,execute,call,internal,params
AbstractJdbcCall -> protected Map<String, Object> doExecute(Map<String, ?> args);1385412762;Method that provides execution of the call using the passed in Map of parameters_@param args Map of parameter name and values_@return Map of out parameters;protected Map<String, Object> doExecute(Map<String, ?> args) {_		checkCompiled()__		Map<String, ?> params = matchInParameterValuesWithCallParameters(args)__		return executeCallInternal(params)__	};method,that,provides,execution,of,the,call,using,the,passed,in,map,of,parameters,param,args,map,of,parameter,name,and,values,return,map,of,out,parameters;protected,map,string,object,do,execute,map,string,args,check,compiled,map,string,params,match,in,parameter,values,with,call,parameters,args,return,execute,call,internal,params
AbstractJdbcCall -> protected Map<String, Object> doExecute(Map<String, ?> args);1407789123;Method that provides execution of the call using the passed in Map of parameters_@param args Map of parameter name and values_@return Map of out parameters;protected Map<String, Object> doExecute(Map<String, ?> args) {_		checkCompiled()__		Map<String, ?> params = matchInParameterValuesWithCallParameters(args)__		return executeCallInternal(params)__	};method,that,provides,execution,of,the,call,using,the,passed,in,map,of,parameters,param,args,map,of,parameter,name,and,values,return,map,of,out,parameters;protected,map,string,object,do,execute,map,string,args,check,compiled,map,string,params,match,in,parameter,values,with,call,parameters,args,return,execute,call,internal,params
AbstractJdbcCall -> protected Map<String, Object> doExecute(Map<String, ?> args);1416833949;Delegate method that executes the call using the passed-in Map of parameters._@param args Map of parameter name and values_@return Map of out parameters;protected Map<String, Object> doExecute(Map<String, ?> args) {_		checkCompiled()__		Map<String, ?> params = matchInParameterValuesWithCallParameters(args)__		return executeCallInternal(params)__	};delegate,method,that,executes,the,call,using,the,passed,in,map,of,parameters,param,args,map,of,parameter,name,and,values,return,map,of,out,parameters;protected,map,string,object,do,execute,map,string,args,check,compiled,map,string,params,match,in,parameter,values,with,call,parameters,args,return,execute,call,internal,params
AbstractJdbcCall -> protected Map<String, Object> doExecute(Map<String, ?> args);1431676443;Delegate method that executes the call using the passed-in Map of parameters._@param args Map of parameter name and values_@return Map of out parameters;protected Map<String, Object> doExecute(Map<String, ?> args) {_		checkCompiled()__		Map<String, ?> params = matchInParameterValuesWithCallParameters(args)__		return executeCallInternal(params)__	};delegate,method,that,executes,the,call,using,the,passed,in,map,of,parameters,param,args,map,of,parameter,name,and,values,return,map,of,out,parameters;protected,map,string,object,do,execute,map,string,args,check,compiled,map,string,params,match,in,parameter,values,with,call,parameters,args,return,execute,call,internal,params
AbstractJdbcCall -> protected Map<String, Object> doExecute(Map<String, ?> args);1446038912;Delegate method that executes the call using the passed-in Map of parameters._@param args Map of parameter name and values_@return Map of out parameters;protected Map<String, Object> doExecute(Map<String, ?> args) {_		checkCompiled()__		Map<String, ?> params = matchInParameterValuesWithCallParameters(args)__		return executeCallInternal(params)__	};delegate,method,that,executes,the,call,using,the,passed,in,map,of,parameters,param,args,map,of,parameter,name,and,values,return,map,of,out,parameters;protected,map,string,object,do,execute,map,string,args,check,compiled,map,string,params,match,in,parameter,values,with,call,parameters,args,return,execute,call,internal,params
AbstractJdbcCall -> protected Map<String, Object> doExecute(Map<String, ?> args);1446470853;Delegate method that executes the call using the passed-in Map of parameters._@param args Map of parameter name and values_@return Map of out parameters;protected Map<String, Object> doExecute(Map<String, ?> args) {_		checkCompiled()__		Map<String, ?> params = matchInParameterValuesWithCallParameters(args)__		return executeCallInternal(params)__	};delegate,method,that,executes,the,call,using,the,passed,in,map,of,parameters,param,args,map,of,parameter,name,and,values,return,map,of,out,parameters;protected,map,string,object,do,execute,map,string,args,check,compiled,map,string,params,match,in,parameter,values,with,call,parameters,args,return,execute,call,internal,params
AbstractJdbcCall -> protected Map<String, Object> doExecute(Map<String, ?> args);1467730834;Delegate method that executes the call using the passed-in Map of parameters._@param args Map of parameter name and values_@return Map of out parameters;protected Map<String, Object> doExecute(Map<String, ?> args) {_		checkCompiled()__		Map<String, ?> params = matchInParameterValuesWithCallParameters(args)__		return executeCallInternal(params)__	};delegate,method,that,executes,the,call,using,the,passed,in,map,of,parameters,param,args,map,of,parameter,name,and,values,return,map,of,out,parameters;protected,map,string,object,do,execute,map,string,args,check,compiled,map,string,params,match,in,parameter,values,with,call,parameters,args,return,execute,call,internal,params
AbstractJdbcCall -> protected Map<String, Object> doExecute(Map<String, ?> args);1487178248;Delegate method that executes the call using the passed-in Map of parameters._@param args Map of parameter name and values_@return Map of out parameters;protected Map<String, Object> doExecute(Map<String, ?> args) {_		checkCompiled()__		Map<String, ?> params = matchInParameterValuesWithCallParameters(args)__		return executeCallInternal(params)__	};delegate,method,that,executes,the,call,using,the,passed,in,map,of,parameters,param,args,map,of,parameter,name,and,values,return,map,of,out,parameters;protected,map,string,object,do,execute,map,string,args,check,compiled,map,string,params,match,in,parameter,values,with,call,parameters,args,return,execute,call,internal,params
AbstractJdbcCall -> protected Map<String, Object> doExecute(Map<String, ?> args);1496837955;Delegate method that executes the call using the passed-in Map of parameters._@param args Map of parameter name and values_@return Map of out parameters;protected Map<String, Object> doExecute(Map<String, ?> args) {_		checkCompiled()__		Map<String, ?> params = matchInParameterValuesWithCallParameters(args)__		return executeCallInternal(params)__	};delegate,method,that,executes,the,call,using,the,passed,in,map,of,parameters,param,args,map,of,parameter,name,and,values,return,map,of,out,parameters;protected,map,string,object,do,execute,map,string,args,check,compiled,map,string,params,match,in,parameter,values,with,call,parameters,args,return,execute,call,internal,params
AbstractJdbcCall -> protected Map<String, Object> doExecute(Map<String, ?> args);1500448076;Delegate method that executes the call using the passed-in Map of parameters._@param args Map of parameter name and values_@return Map of out parameters;protected Map<String, Object> doExecute(Map<String, ?> args) {_		checkCompiled()__		Map<String, ?> params = matchInParameterValuesWithCallParameters(args)__		return executeCallInternal(params)__	};delegate,method,that,executes,the,call,using,the,passed,in,map,of,parameters,param,args,map,of,parameter,name,and,values,return,map,of,out,parameters;protected,map,string,object,do,execute,map,string,args,check,compiled,map,string,params,match,in,parameter,values,with,call,parameters,args,return,execute,call,internal,params
AbstractJdbcCall -> protected Map<String, Object> doExecute(Map<String, ?> args);1500495740;Delegate method that executes the call using the passed-in Map of parameters._@param args Map of parameter name and values_@return Map of out parameters;protected Map<String, Object> doExecute(Map<String, ?> args) {_		checkCompiled()__		Map<String, ?> params = matchInParameterValuesWithCallParameters(args)__		return executeCallInternal(params)__	};delegate,method,that,executes,the,call,using,the,passed,in,map,of,parameters,param,args,map,of,parameter,name,and,values,return,map,of,out,parameters;protected,map,string,object,do,execute,map,string,args,check,compiled,map,string,params,match,in,parameter,values,with,call,parameters,args,return,execute,call,internal,params
AbstractJdbcCall -> protected Map<String, Object> doExecute(Map<String, ?> args);1520528267;Delegate method that executes the call using the passed-in Map of parameters._@param args Map of parameter name and values_@return Map of out parameters;protected Map<String, Object> doExecute(Map<String, ?> args) {_		checkCompiled()__		Map<String, ?> params = matchInParameterValuesWithCallParameters(args)__		return executeCallInternal(params)__	};delegate,method,that,executes,the,call,using,the,passed,in,map,of,parameters,param,args,map,of,parameter,name,and,values,return,map,of,out,parameters;protected,map,string,object,do,execute,map,string,args,check,compiled,map,string,params,match,in,parameter,values,with,call,parameters,args,return,execute,call,internal,params
AbstractJdbcCall -> protected Map<String, Object> doExecute(Map<String, ?> args);1521457504;Delegate method that executes the call using the passed-in Map of parameters._@param args Map of parameter name and values_@return Map of out parameters;protected Map<String, Object> doExecute(Map<String, ?> args) {_		checkCompiled()__		Map<String, ?> params = matchInParameterValuesWithCallParameters(args)__		return executeCallInternal(params)__	};delegate,method,that,executes,the,call,using,the,passed,in,map,of,parameters,param,args,map,of,parameter,name,and,values,return,map,of,out,parameters;protected,map,string,object,do,execute,map,string,args,check,compiled,map,string,params,match,in,parameter,values,with,call,parameters,args,return,execute,call,internal,params
AbstractJdbcCall -> protected Map<String, Object> doExecute(Map<String, ?> args);1522103912;Delegate method that executes the call using the passed-in Map of parameters._@param args Map of parameter name and values_@return Map of out parameters;protected Map<String, Object> doExecute(Map<String, ?> args) {_		checkCompiled()__		Map<String, ?> params = matchInParameterValuesWithCallParameters(args)__		return executeCallInternal(params)__	};delegate,method,that,executes,the,call,using,the,passed,in,map,of,parameters,param,args,map,of,parameter,name,and,values,return,map,of,out,parameters;protected,map,string,object,do,execute,map,string,args,check,compiled,map,string,params,match,in,parameter,values,with,call,parameters,args,return,execute,call,internal,params
AbstractJdbcCall -> protected Map<String, Object> doExecute(Map<String, ?> args);1530174524;Delegate method that executes the call using the passed-in Map of parameters._@param args a Map of parameter name and values_@return a Map of out parameters;protected Map<String, Object> doExecute(Map<String, ?> args) {_		checkCompiled()__		Map<String, ?> params = matchInParameterValuesWithCallParameters(args)__		return executeCallInternal(params)__	};delegate,method,that,executes,the,call,using,the,passed,in,map,of,parameters,param,args,a,map,of,parameter,name,and,values,return,a,map,of,out,parameters;protected,map,string,object,do,execute,map,string,args,check,compiled,map,string,params,match,in,parameter,values,with,call,parameters,args,return,execute,call,internal,params
AbstractJdbcCall -> public void setProcedureName(@Nullable String procedureName);1500448076;Set the name of the stored procedure.;public void setProcedureName(@Nullable String procedureName) {_		this.callMetaDataContext.setProcedureName(procedureName)__	};set,the,name,of,the,stored,procedure;public,void,set,procedure,name,nullable,string,procedure,name,this,call,meta,data,context,set,procedure,name,procedure,name
AbstractJdbcCall -> public void setProcedureName(@Nullable String procedureName);1500495740;Set the name of the stored procedure.;public void setProcedureName(@Nullable String procedureName) {_		this.callMetaDataContext.setProcedureName(procedureName)__	};set,the,name,of,the,stored,procedure;public,void,set,procedure,name,nullable,string,procedure,name,this,call,meta,data,context,set,procedure,name,procedure,name
AbstractJdbcCall -> public void setProcedureName(@Nullable String procedureName);1520528267;Set the name of the stored procedure.;public void setProcedureName(@Nullable String procedureName) {_		this.callMetaDataContext.setProcedureName(procedureName)__	};set,the,name,of,the,stored,procedure;public,void,set,procedure,name,nullable,string,procedure,name,this,call,meta,data,context,set,procedure,name,procedure,name
AbstractJdbcCall -> public void setProcedureName(@Nullable String procedureName);1521457504;Set the name of the stored procedure.;public void setProcedureName(@Nullable String procedureName) {_		this.callMetaDataContext.setProcedureName(procedureName)__	};set,the,name,of,the,stored,procedure;public,void,set,procedure,name,nullable,string,procedure,name,this,call,meta,data,context,set,procedure,name,procedure,name
AbstractJdbcCall -> public void setProcedureName(@Nullable String procedureName);1522103912;Set the name of the stored procedure.;public void setProcedureName(@Nullable String procedureName) {_		this.callMetaDataContext.setProcedureName(procedureName)__	};set,the,name,of,the,stored,procedure;public,void,set,procedure,name,nullable,string,procedure,name,this,call,meta,data,context,set,procedure,name,procedure,name
AbstractJdbcCall -> public void setProcedureName(@Nullable String procedureName);1530174524;Set the name of the stored procedure.;public void setProcedureName(@Nullable String procedureName) {_		this.callMetaDataContext.setProcedureName(procedureName)__	};set,the,name,of,the,stored,procedure;public,void,set,procedure,name,nullable,string,procedure,name,this,call,meta,data,context,set,procedure,name,procedure,name
AbstractJdbcCall -> public void setCatalogName(String catalogName);1328020251;Set the catalog name to use.;public void setCatalogName(String catalogName) {_		this.callMetaDataContext.setCatalogName(catalogName)__	};set,the,catalog,name,to,use;public,void,set,catalog,name,string,catalog,name,this,call,meta,data,context,set,catalog,name,catalog,name
AbstractJdbcCall -> public void setCatalogName(String catalogName);1356735495;Set the catalog name to use.;public void setCatalogName(String catalogName) {_		this.callMetaDataContext.setCatalogName(catalogName)__	};set,the,catalog,name,to,use;public,void,set,catalog,name,string,catalog,name,this,call,meta,data,context,set,catalog,name,catalog,name
AbstractJdbcCall -> public void setCatalogName(String catalogName);1362408075;Set the catalog name to use.;public void setCatalogName(String catalogName) {_		this.callMetaDataContext.setCatalogName(catalogName)__	};set,the,catalog,name,to,use;public,void,set,catalog,name,string,catalog,name,this,call,meta,data,context,set,catalog,name,catalog,name
AbstractJdbcCall -> public void setCatalogName(String catalogName);1367508310;Set the catalog name to use.;public void setCatalogName(String catalogName) {_		this.callMetaDataContext.setCatalogName(catalogName)__	};set,the,catalog,name,to,use;public,void,set,catalog,name,string,catalog,name,this,call,meta,data,context,set,catalog,name,catalog,name
AbstractJdbcCall -> public void setCatalogName(String catalogName);1385412762;Set the catalog name to use.;public void setCatalogName(String catalogName) {_		this.callMetaDataContext.setCatalogName(catalogName)__	};set,the,catalog,name,to,use;public,void,set,catalog,name,string,catalog,name,this,call,meta,data,context,set,catalog,name,catalog,name
AbstractJdbcCall -> public void setCatalogName(String catalogName);1407789123;Set the catalog name to use.;public void setCatalogName(String catalogName) {_		this.callMetaDataContext.setCatalogName(catalogName)__	};set,the,catalog,name,to,use;public,void,set,catalog,name,string,catalog,name,this,call,meta,data,context,set,catalog,name,catalog,name
AbstractJdbcCall -> public void setCatalogName(String catalogName);1416833949;Set the catalog name to use.;public void setCatalogName(String catalogName) {_		this.callMetaDataContext.setCatalogName(catalogName)__	};set,the,catalog,name,to,use;public,void,set,catalog,name,string,catalog,name,this,call,meta,data,context,set,catalog,name,catalog,name
AbstractJdbcCall -> public void setCatalogName(String catalogName);1431676443;Set the catalog name to use.;public void setCatalogName(String catalogName) {_		this.callMetaDataContext.setCatalogName(catalogName)__	};set,the,catalog,name,to,use;public,void,set,catalog,name,string,catalog,name,this,call,meta,data,context,set,catalog,name,catalog,name
AbstractJdbcCall -> public void setCatalogName(String catalogName);1446038912;Set the catalog name to use.;public void setCatalogName(String catalogName) {_		this.callMetaDataContext.setCatalogName(catalogName)__	};set,the,catalog,name,to,use;public,void,set,catalog,name,string,catalog,name,this,call,meta,data,context,set,catalog,name,catalog,name
AbstractJdbcCall -> public void setCatalogName(String catalogName);1446470853;Set the catalog name to use.;public void setCatalogName(String catalogName) {_		this.callMetaDataContext.setCatalogName(catalogName)__	};set,the,catalog,name,to,use;public,void,set,catalog,name,string,catalog,name,this,call,meta,data,context,set,catalog,name,catalog,name
AbstractJdbcCall -> public void setCatalogName(String catalogName);1467730834;Set the catalog name to use.;public void setCatalogName(String catalogName) {_		this.callMetaDataContext.setCatalogName(catalogName)__	};set,the,catalog,name,to,use;public,void,set,catalog,name,string,catalog,name,this,call,meta,data,context,set,catalog,name,catalog,name
AbstractJdbcCall -> public void setCatalogName(String catalogName);1487178248;Set the catalog name to use.;public void setCatalogName(String catalogName) {_		this.callMetaDataContext.setCatalogName(catalogName)__	};set,the,catalog,name,to,use;public,void,set,catalog,name,string,catalog,name,this,call,meta,data,context,set,catalog,name,catalog,name
AbstractJdbcCall -> public void setCatalogName(String catalogName);1496837955;Set the catalog name to use.;public void setCatalogName(String catalogName) {_		this.callMetaDataContext.setCatalogName(catalogName)__	};set,the,catalog,name,to,use;public,void,set,catalog,name,string,catalog,name,this,call,meta,data,context,set,catalog,name,catalog,name
AbstractJdbcCall -> public void setReturnValueRequired(boolean returnValueRequired);1407789123;Specify whether the call requires a rerurn value.;public void setReturnValueRequired(boolean returnValueRequired) {_		this.callMetaDataContext.setReturnValueRequired(returnValueRequired)__	};specify,whether,the,call,requires,a,rerurn,value;public,void,set,return,value,required,boolean,return,value,required,this,call,meta,data,context,set,return,value,required,return,value,required
AbstractJdbcCall -> public void setReturnValueRequired(boolean returnValueRequired);1416833949;Specify whether the call requires a return value._The default is {@code false}.;public void setReturnValueRequired(boolean returnValueRequired) {_		this.callMetaDataContext.setReturnValueRequired(returnValueRequired)__	};specify,whether,the,call,requires,a,return,value,the,default,is,code,false;public,void,set,return,value,required,boolean,return,value,required,this,call,meta,data,context,set,return,value,required,return,value,required
AbstractJdbcCall -> public void setReturnValueRequired(boolean returnValueRequired);1431676443;Specify whether the call requires a return value._The default is {@code false}.;public void setReturnValueRequired(boolean returnValueRequired) {_		this.callMetaDataContext.setReturnValueRequired(returnValueRequired)__	};specify,whether,the,call,requires,a,return,value,the,default,is,code,false;public,void,set,return,value,required,boolean,return,value,required,this,call,meta,data,context,set,return,value,required,return,value,required
AbstractJdbcCall -> public void setReturnValueRequired(boolean returnValueRequired);1446038912;Specify whether the call requires a return value._The default is {@code false}.;public void setReturnValueRequired(boolean returnValueRequired) {_		this.callMetaDataContext.setReturnValueRequired(returnValueRequired)__	};specify,whether,the,call,requires,a,return,value,the,default,is,code,false;public,void,set,return,value,required,boolean,return,value,required,this,call,meta,data,context,set,return,value,required,return,value,required
AbstractJdbcCall -> public void setReturnValueRequired(boolean returnValueRequired);1446470853;Specify whether the call requires a return value._The default is {@code false}.;public void setReturnValueRequired(boolean returnValueRequired) {_		this.callMetaDataContext.setReturnValueRequired(returnValueRequired)__	};specify,whether,the,call,requires,a,return,value,the,default,is,code,false;public,void,set,return,value,required,boolean,return,value,required,this,call,meta,data,context,set,return,value,required,return,value,required
AbstractJdbcCall -> public void setReturnValueRequired(boolean returnValueRequired);1467730834;Specify whether the call requires a return value._The default is {@code false}.;public void setReturnValueRequired(boolean returnValueRequired) {_		this.callMetaDataContext.setReturnValueRequired(returnValueRequired)__	};specify,whether,the,call,requires,a,return,value,the,default,is,code,false;public,void,set,return,value,required,boolean,return,value,required,this,call,meta,data,context,set,return,value,required,return,value,required
AbstractJdbcCall -> public void setReturnValueRequired(boolean returnValueRequired);1487178248;Specify whether the call requires a return value._The default is {@code false}.;public void setReturnValueRequired(boolean returnValueRequired) {_		this.callMetaDataContext.setReturnValueRequired(returnValueRequired)__	};specify,whether,the,call,requires,a,return,value,the,default,is,code,false;public,void,set,return,value,required,boolean,return,value,required,this,call,meta,data,context,set,return,value,required,return,value,required
AbstractJdbcCall -> public void setReturnValueRequired(boolean returnValueRequired);1496837955;Specify whether the call requires a return value._The default is {@code false}.;public void setReturnValueRequired(boolean returnValueRequired) {_		this.callMetaDataContext.setReturnValueRequired(returnValueRequired)__	};specify,whether,the,call,requires,a,return,value,the,default,is,code,false;public,void,set,return,value,required,boolean,return,value,required,this,call,meta,data,context,set,return,value,required,return,value,required
AbstractJdbcCall -> public void setReturnValueRequired(boolean returnValueRequired);1500448076;Specify whether the call requires a return value._The default is {@code false}.;public void setReturnValueRequired(boolean returnValueRequired) {_		this.callMetaDataContext.setReturnValueRequired(returnValueRequired)__	};specify,whether,the,call,requires,a,return,value,the,default,is,code,false;public,void,set,return,value,required,boolean,return,value,required,this,call,meta,data,context,set,return,value,required,return,value,required
AbstractJdbcCall -> public void setReturnValueRequired(boolean returnValueRequired);1500495740;Specify whether the call requires a return value._The default is {@code false}.;public void setReturnValueRequired(boolean returnValueRequired) {_		this.callMetaDataContext.setReturnValueRequired(returnValueRequired)__	};specify,whether,the,call,requires,a,return,value,the,default,is,code,false;public,void,set,return,value,required,boolean,return,value,required,this,call,meta,data,context,set,return,value,required,return,value,required
AbstractJdbcCall -> public void setReturnValueRequired(boolean returnValueRequired);1520528267;Specify whether the call requires a return value._The default is {@code false}.;public void setReturnValueRequired(boolean returnValueRequired) {_		this.callMetaDataContext.setReturnValueRequired(returnValueRequired)__	};specify,whether,the,call,requires,a,return,value,the,default,is,code,false;public,void,set,return,value,required,boolean,return,value,required,this,call,meta,data,context,set,return,value,required,return,value,required
AbstractJdbcCall -> public void setReturnValueRequired(boolean returnValueRequired);1521457504;Specify whether the call requires a return value._The default is {@code false}.;public void setReturnValueRequired(boolean returnValueRequired) {_		this.callMetaDataContext.setReturnValueRequired(returnValueRequired)__	};specify,whether,the,call,requires,a,return,value,the,default,is,code,false;public,void,set,return,value,required,boolean,return,value,required,this,call,meta,data,context,set,return,value,required,return,value,required
AbstractJdbcCall -> public void setReturnValueRequired(boolean returnValueRequired);1522103912;Specify whether the call requires a return value._The default is {@code false}.;public void setReturnValueRequired(boolean returnValueRequired) {_		this.callMetaDataContext.setReturnValueRequired(returnValueRequired)__	};specify,whether,the,call,requires,a,return,value,the,default,is,code,false;public,void,set,return,value,required,boolean,return,value,required,this,call,meta,data,context,set,return,value,required,return,value,required
AbstractJdbcCall -> public void setReturnValueRequired(boolean returnValueRequired);1530174524;Specify whether the call requires a return value._The default is {@code false}.;public void setReturnValueRequired(boolean returnValueRequired) {_		this.callMetaDataContext.setReturnValueRequired(returnValueRequired)__	};specify,whether,the,call,requires,a,return,value,the,default,is,code,false;public,void,set,return,value,required,boolean,return,value,required,this,call,meta,data,context,set,return,value,required,return,value,required
AbstractJdbcCall -> protected Map<String, Object> doExecute(SqlParameterSource parameterSource);1328020251;Method that provides execution of the call using the passed in {@link SqlParameterSource}_@param parameterSource parameter names and values to be used in call_@return Map of out parameters;protected Map<String, Object> doExecute(SqlParameterSource parameterSource) {_		checkCompiled()__		Map<String, Object> params = matchInParameterValuesWithCallParameters(parameterSource)__		return executeCallInternal(params)__	};method,that,provides,execution,of,the,call,using,the,passed,in,link,sql,parameter,source,param,parameter,source,parameter,names,and,values,to,be,used,in,call,return,map,of,out,parameters;protected,map,string,object,do,execute,sql,parameter,source,parameter,source,check,compiled,map,string,object,params,match,in,parameter,values,with,call,parameters,parameter,source,return,execute,call,internal,params
AbstractJdbcCall -> protected Map<String, Object> doExecute(SqlParameterSource parameterSource);1356735495;Method that provides execution of the call using the passed in {@link SqlParameterSource}_@param parameterSource parameter names and values to be used in call_@return Map of out parameters;protected Map<String, Object> doExecute(SqlParameterSource parameterSource) {_		checkCompiled()__		Map<String, Object> params = matchInParameterValuesWithCallParameters(parameterSource)__		return executeCallInternal(params)__	};method,that,provides,execution,of,the,call,using,the,passed,in,link,sql,parameter,source,param,parameter,source,parameter,names,and,values,to,be,used,in,call,return,map,of,out,parameters;protected,map,string,object,do,execute,sql,parameter,source,parameter,source,check,compiled,map,string,object,params,match,in,parameter,values,with,call,parameters,parameter,source,return,execute,call,internal,params
AbstractJdbcCall -> protected Map<String, Object> doExecute(SqlParameterSource parameterSource);1362408075;Method that provides execution of the call using the passed in {@link SqlParameterSource}_@param parameterSource parameter names and values to be used in call_@return Map of out parameters;protected Map<String, Object> doExecute(SqlParameterSource parameterSource) {_		checkCompiled()__		Map<String, Object> params = matchInParameterValuesWithCallParameters(parameterSource)__		return executeCallInternal(params)__	};method,that,provides,execution,of,the,call,using,the,passed,in,link,sql,parameter,source,param,parameter,source,parameter,names,and,values,to,be,used,in,call,return,map,of,out,parameters;protected,map,string,object,do,execute,sql,parameter,source,parameter,source,check,compiled,map,string,object,params,match,in,parameter,values,with,call,parameters,parameter,source,return,execute,call,internal,params
AbstractJdbcCall -> protected Map<String, Object> doExecute(SqlParameterSource parameterSource);1367508310;Method that provides execution of the call using the passed in {@link SqlParameterSource}_@param parameterSource parameter names and values to be used in call_@return Map of out parameters;protected Map<String, Object> doExecute(SqlParameterSource parameterSource) {_		checkCompiled()__		Map<String, Object> params = matchInParameterValuesWithCallParameters(parameterSource)__		return executeCallInternal(params)__	};method,that,provides,execution,of,the,call,using,the,passed,in,link,sql,parameter,source,param,parameter,source,parameter,names,and,values,to,be,used,in,call,return,map,of,out,parameters;protected,map,string,object,do,execute,sql,parameter,source,parameter,source,check,compiled,map,string,object,params,match,in,parameter,values,with,call,parameters,parameter,source,return,execute,call,internal,params
AbstractJdbcCall -> protected Map<String, Object> doExecute(SqlParameterSource parameterSource);1385412762;Method that provides execution of the call using the passed in {@link SqlParameterSource}_@param parameterSource parameter names and values to be used in call_@return Map of out parameters;protected Map<String, Object> doExecute(SqlParameterSource parameterSource) {_		checkCompiled()__		Map<String, Object> params = matchInParameterValuesWithCallParameters(parameterSource)__		return executeCallInternal(params)__	};method,that,provides,execution,of,the,call,using,the,passed,in,link,sql,parameter,source,param,parameter,source,parameter,names,and,values,to,be,used,in,call,return,map,of,out,parameters;protected,map,string,object,do,execute,sql,parameter,source,parameter,source,check,compiled,map,string,object,params,match,in,parameter,values,with,call,parameters,parameter,source,return,execute,call,internal,params
AbstractJdbcCall -> protected Map<String, Object> doExecute(SqlParameterSource parameterSource);1407789123;Method that provides execution of the call using the passed in {@link SqlParameterSource}_@param parameterSource parameter names and values to be used in call_@return Map of out parameters;protected Map<String, Object> doExecute(SqlParameterSource parameterSource) {_		checkCompiled()__		Map<String, Object> params = matchInParameterValuesWithCallParameters(parameterSource)__		return executeCallInternal(params)__	};method,that,provides,execution,of,the,call,using,the,passed,in,link,sql,parameter,source,param,parameter,source,parameter,names,and,values,to,be,used,in,call,return,map,of,out,parameters;protected,map,string,object,do,execute,sql,parameter,source,parameter,source,check,compiled,map,string,object,params,match,in,parameter,values,with,call,parameters,parameter,source,return,execute,call,internal,params
AbstractJdbcCall -> protected Map<String, Object> doExecute(SqlParameterSource parameterSource);1416833949;Delegate method that executes the call using the passed-in {@link SqlParameterSource}._@param parameterSource parameter names and values to be used in call_@return Map of out parameters;protected Map<String, Object> doExecute(SqlParameterSource parameterSource) {_		checkCompiled()__		Map<String, Object> params = matchInParameterValuesWithCallParameters(parameterSource)__		return executeCallInternal(params)__	};delegate,method,that,executes,the,call,using,the,passed,in,link,sql,parameter,source,param,parameter,source,parameter,names,and,values,to,be,used,in,call,return,map,of,out,parameters;protected,map,string,object,do,execute,sql,parameter,source,parameter,source,check,compiled,map,string,object,params,match,in,parameter,values,with,call,parameters,parameter,source,return,execute,call,internal,params
AbstractJdbcCall -> protected Map<String, Object> doExecute(SqlParameterSource parameterSource);1431676443;Delegate method that executes the call using the passed-in {@link SqlParameterSource}._@param parameterSource parameter names and values to be used in call_@return Map of out parameters;protected Map<String, Object> doExecute(SqlParameterSource parameterSource) {_		checkCompiled()__		Map<String, Object> params = matchInParameterValuesWithCallParameters(parameterSource)__		return executeCallInternal(params)__	};delegate,method,that,executes,the,call,using,the,passed,in,link,sql,parameter,source,param,parameter,source,parameter,names,and,values,to,be,used,in,call,return,map,of,out,parameters;protected,map,string,object,do,execute,sql,parameter,source,parameter,source,check,compiled,map,string,object,params,match,in,parameter,values,with,call,parameters,parameter,source,return,execute,call,internal,params
AbstractJdbcCall -> protected Map<String, Object> doExecute(SqlParameterSource parameterSource);1446038912;Delegate method that executes the call using the passed-in {@link SqlParameterSource}._@param parameterSource parameter names and values to be used in call_@return Map of out parameters;protected Map<String, Object> doExecute(SqlParameterSource parameterSource) {_		checkCompiled()__		Map<String, Object> params = matchInParameterValuesWithCallParameters(parameterSource)__		return executeCallInternal(params)__	};delegate,method,that,executes,the,call,using,the,passed,in,link,sql,parameter,source,param,parameter,source,parameter,names,and,values,to,be,used,in,call,return,map,of,out,parameters;protected,map,string,object,do,execute,sql,parameter,source,parameter,source,check,compiled,map,string,object,params,match,in,parameter,values,with,call,parameters,parameter,source,return,execute,call,internal,params
AbstractJdbcCall -> protected Map<String, Object> doExecute(SqlParameterSource parameterSource);1446470853;Delegate method that executes the call using the passed-in {@link SqlParameterSource}._@param parameterSource parameter names and values to be used in call_@return Map of out parameters;protected Map<String, Object> doExecute(SqlParameterSource parameterSource) {_		checkCompiled()__		Map<String, Object> params = matchInParameterValuesWithCallParameters(parameterSource)__		return executeCallInternal(params)__	};delegate,method,that,executes,the,call,using,the,passed,in,link,sql,parameter,source,param,parameter,source,parameter,names,and,values,to,be,used,in,call,return,map,of,out,parameters;protected,map,string,object,do,execute,sql,parameter,source,parameter,source,check,compiled,map,string,object,params,match,in,parameter,values,with,call,parameters,parameter,source,return,execute,call,internal,params
AbstractJdbcCall -> protected Map<String, Object> doExecute(SqlParameterSource parameterSource);1467730834;Delegate method that executes the call using the passed-in {@link SqlParameterSource}._@param parameterSource parameter names and values to be used in call_@return Map of out parameters;protected Map<String, Object> doExecute(SqlParameterSource parameterSource) {_		checkCompiled()__		Map<String, Object> params = matchInParameterValuesWithCallParameters(parameterSource)__		return executeCallInternal(params)__	};delegate,method,that,executes,the,call,using,the,passed,in,link,sql,parameter,source,param,parameter,source,parameter,names,and,values,to,be,used,in,call,return,map,of,out,parameters;protected,map,string,object,do,execute,sql,parameter,source,parameter,source,check,compiled,map,string,object,params,match,in,parameter,values,with,call,parameters,parameter,source,return,execute,call,internal,params
AbstractJdbcCall -> protected Map<String, Object> doExecute(SqlParameterSource parameterSource);1487178248;Delegate method that executes the call using the passed-in {@link SqlParameterSource}._@param parameterSource parameter names and values to be used in call_@return Map of out parameters;protected Map<String, Object> doExecute(SqlParameterSource parameterSource) {_		checkCompiled()__		Map<String, Object> params = matchInParameterValuesWithCallParameters(parameterSource)__		return executeCallInternal(params)__	};delegate,method,that,executes,the,call,using,the,passed,in,link,sql,parameter,source,param,parameter,source,parameter,names,and,values,to,be,used,in,call,return,map,of,out,parameters;protected,map,string,object,do,execute,sql,parameter,source,parameter,source,check,compiled,map,string,object,params,match,in,parameter,values,with,call,parameters,parameter,source,return,execute,call,internal,params
AbstractJdbcCall -> protected Map<String, Object> doExecute(SqlParameterSource parameterSource);1496837955;Delegate method that executes the call using the passed-in {@link SqlParameterSource}._@param parameterSource parameter names and values to be used in call_@return Map of out parameters;protected Map<String, Object> doExecute(SqlParameterSource parameterSource) {_		checkCompiled()__		Map<String, Object> params = matchInParameterValuesWithCallParameters(parameterSource)__		return executeCallInternal(params)__	};delegate,method,that,executes,the,call,using,the,passed,in,link,sql,parameter,source,param,parameter,source,parameter,names,and,values,to,be,used,in,call,return,map,of,out,parameters;protected,map,string,object,do,execute,sql,parameter,source,parameter,source,check,compiled,map,string,object,params,match,in,parameter,values,with,call,parameters,parameter,source,return,execute,call,internal,params
AbstractJdbcCall -> protected Map<String, Object> doExecute(SqlParameterSource parameterSource);1500448076;Delegate method that executes the call using the passed-in {@link SqlParameterSource}._@param parameterSource parameter names and values to be used in call_@return Map of out parameters;protected Map<String, Object> doExecute(SqlParameterSource parameterSource) {_		checkCompiled()__		Map<String, Object> params = matchInParameterValuesWithCallParameters(parameterSource)__		return executeCallInternal(params)__	};delegate,method,that,executes,the,call,using,the,passed,in,link,sql,parameter,source,param,parameter,source,parameter,names,and,values,to,be,used,in,call,return,map,of,out,parameters;protected,map,string,object,do,execute,sql,parameter,source,parameter,source,check,compiled,map,string,object,params,match,in,parameter,values,with,call,parameters,parameter,source,return,execute,call,internal,params
AbstractJdbcCall -> protected Map<String, Object> doExecute(SqlParameterSource parameterSource);1500495740;Delegate method that executes the call using the passed-in {@link SqlParameterSource}._@param parameterSource parameter names and values to be used in call_@return Map of out parameters;protected Map<String, Object> doExecute(SqlParameterSource parameterSource) {_		checkCompiled()__		Map<String, Object> params = matchInParameterValuesWithCallParameters(parameterSource)__		return executeCallInternal(params)__	};delegate,method,that,executes,the,call,using,the,passed,in,link,sql,parameter,source,param,parameter,source,parameter,names,and,values,to,be,used,in,call,return,map,of,out,parameters;protected,map,string,object,do,execute,sql,parameter,source,parameter,source,check,compiled,map,string,object,params,match,in,parameter,values,with,call,parameters,parameter,source,return,execute,call,internal,params
AbstractJdbcCall -> protected Map<String, Object> doExecute(SqlParameterSource parameterSource);1520528267;Delegate method that executes the call using the passed-in {@link SqlParameterSource}._@param parameterSource parameter names and values to be used in call_@return Map of out parameters;protected Map<String, Object> doExecute(SqlParameterSource parameterSource) {_		checkCompiled()__		Map<String, Object> params = matchInParameterValuesWithCallParameters(parameterSource)__		return executeCallInternal(params)__	};delegate,method,that,executes,the,call,using,the,passed,in,link,sql,parameter,source,param,parameter,source,parameter,names,and,values,to,be,used,in,call,return,map,of,out,parameters;protected,map,string,object,do,execute,sql,parameter,source,parameter,source,check,compiled,map,string,object,params,match,in,parameter,values,with,call,parameters,parameter,source,return,execute,call,internal,params
AbstractJdbcCall -> protected Map<String, Object> doExecute(SqlParameterSource parameterSource);1521457504;Delegate method that executes the call using the passed-in {@link SqlParameterSource}._@param parameterSource parameter names and values to be used in call_@return Map of out parameters;protected Map<String, Object> doExecute(SqlParameterSource parameterSource) {_		checkCompiled()__		Map<String, Object> params = matchInParameterValuesWithCallParameters(parameterSource)__		return executeCallInternal(params)__	};delegate,method,that,executes,the,call,using,the,passed,in,link,sql,parameter,source,param,parameter,source,parameter,names,and,values,to,be,used,in,call,return,map,of,out,parameters;protected,map,string,object,do,execute,sql,parameter,source,parameter,source,check,compiled,map,string,object,params,match,in,parameter,values,with,call,parameters,parameter,source,return,execute,call,internal,params
AbstractJdbcCall -> protected Map<String, Object> doExecute(SqlParameterSource parameterSource);1522103912;Delegate method that executes the call using the passed-in {@link SqlParameterSource}._@param parameterSource parameter names and values to be used in call_@return Map of out parameters;protected Map<String, Object> doExecute(SqlParameterSource parameterSource) {_		checkCompiled()__		Map<String, Object> params = matchInParameterValuesWithCallParameters(parameterSource)__		return executeCallInternal(params)__	};delegate,method,that,executes,the,call,using,the,passed,in,link,sql,parameter,source,param,parameter,source,parameter,names,and,values,to,be,used,in,call,return,map,of,out,parameters;protected,map,string,object,do,execute,sql,parameter,source,parameter,source,check,compiled,map,string,object,params,match,in,parameter,values,with,call,parameters,parameter,source,return,execute,call,internal,params
AbstractJdbcCall -> protected Map<String, Object> doExecute(SqlParameterSource parameterSource);1530174524;Delegate method that executes the call using the passed-in {@link SqlParameterSource}._@param parameterSource parameter names and values to be used in call_@return a Map of out parameters;protected Map<String, Object> doExecute(SqlParameterSource parameterSource) {_		checkCompiled()__		Map<String, Object> params = matchInParameterValuesWithCallParameters(parameterSource)__		return executeCallInternal(params)__	};delegate,method,that,executes,the,call,using,the,passed,in,link,sql,parameter,source,param,parameter,source,parameter,names,and,values,to,be,used,in,call,return,a,map,of,out,parameters;protected,map,string,object,do,execute,sql,parameter,source,parameter,source,check,compiled,map,string,object,params,match,in,parameter,values,with,call,parameters,parameter,source,return,execute,call,internal,params
AbstractJdbcCall -> public String getCallString();1328020251;Get the call string that should be used based on parameters and meta data.;public String getCallString() {_		return this.callString__	};get,the,call,string,that,should,be,used,based,on,parameters,and,meta,data;public,string,get,call,string,return,this,call,string
AbstractJdbcCall -> public String getCallString();1356735495;Get the call string that should be used based on parameters and meta data.;public String getCallString() {_		return this.callString__	};get,the,call,string,that,should,be,used,based,on,parameters,and,meta,data;public,string,get,call,string,return,this,call,string
AbstractJdbcCall -> public String getCallString();1362408075;Get the call string that should be used based on parameters and meta data.;public String getCallString() {_		return this.callString__	};get,the,call,string,that,should,be,used,based,on,parameters,and,meta,data;public,string,get,call,string,return,this,call,string
AbstractJdbcCall -> public String getCallString();1367508310;Get the call string that should be used based on parameters and meta data.;public String getCallString() {_		return this.callString__	};get,the,call,string,that,should,be,used,based,on,parameters,and,meta,data;public,string,get,call,string,return,this,call,string
AbstractJdbcCall -> public String getCallString();1385412762;Get the call string that should be used based on parameters and meta data.;public String getCallString() {_		return this.callString__	};get,the,call,string,that,should,be,used,based,on,parameters,and,meta,data;public,string,get,call,string,return,this,call,string
AbstractJdbcCall -> public String getCallString();1407789123;Get the call string that should be used based on parameters and meta data.;public String getCallString() {_		return this.callString__	};get,the,call,string,that,should,be,used,based,on,parameters,and,meta,data;public,string,get,call,string,return,this,call,string
AbstractJdbcCall -> public String getCallString();1416833949;Get the call string that should be used based on parameters and meta data.;public String getCallString() {_		return this.callString__	};get,the,call,string,that,should,be,used,based,on,parameters,and,meta,data;public,string,get,call,string,return,this,call,string
AbstractJdbcCall -> public String getCallString();1431676443;Get the call string that should be used based on parameters and meta data.;public String getCallString() {_		return this.callString__	};get,the,call,string,that,should,be,used,based,on,parameters,and,meta,data;public,string,get,call,string,return,this,call,string
AbstractJdbcCall -> public String getCallString();1446038912;Get the call string that should be used based on parameters and meta data.;public String getCallString() {_		return this.callString__	};get,the,call,string,that,should,be,used,based,on,parameters,and,meta,data;public,string,get,call,string,return,this,call,string
AbstractJdbcCall -> public String getCallString();1446470853;Get the call string that should be used based on parameters and meta data.;public String getCallString() {_		return this.callString__	};get,the,call,string,that,should,be,used,based,on,parameters,and,meta,data;public,string,get,call,string,return,this,call,string
AbstractJdbcCall -> public String getCallString();1467730834;Get the call string that should be used based on parameters and meta data.;public String getCallString() {_		return this.callString__	};get,the,call,string,that,should,be,used,based,on,parameters,and,meta,data;public,string,get,call,string,return,this,call,string
AbstractJdbcCall -> public String getCallString();1487178248;Get the call string that should be used based on parameters and meta data.;public String getCallString() {_		return this.callString__	};get,the,call,string,that,should,be,used,based,on,parameters,and,meta,data;public,string,get,call,string,return,this,call,string
AbstractJdbcCall -> public String getCallString();1496837955;Get the call string that should be used based on parameters and meta data.;public String getCallString() {_		return this.callString__	};get,the,call,string,that,should,be,used,based,on,parameters,and,meta,data;public,string,get,call,string,return,this,call,string
AbstractJdbcCall -> public String getCallString();1500448076;Get the call string that should be used based on parameters and meta data.;public String getCallString() {_		return this.callString__	};get,the,call,string,that,should,be,used,based,on,parameters,and,meta,data;public,string,get,call,string,return,this,call,string
AbstractJdbcCall -> protected Map<String, Object> matchInParameterValuesWithCallParameters(SqlParameterSource parameterSource);1328020251;Match the provided in parameter values with registered parameters and_parameters defined via metadata processing._@param parameterSource the parameter vakues provided as a {@link SqlParameterSource}_@return Map with parameter names and values;protected Map<String, Object> matchInParameterValuesWithCallParameters(SqlParameterSource parameterSource) {_		return this.callMetaDataContext.matchInParameterValuesWithCallParameters(parameterSource)__	};match,the,provided,in,parameter,values,with,registered,parameters,and,parameters,defined,via,metadata,processing,param,parameter,source,the,parameter,vakues,provided,as,a,link,sql,parameter,source,return,map,with,parameter,names,and,values;protected,map,string,object,match,in,parameter,values,with,call,parameters,sql,parameter,source,parameter,source,return,this,call,meta,data,context,match,in,parameter,values,with,call,parameters,parameter,source
AbstractJdbcCall -> protected Map<String, Object> matchInParameterValuesWithCallParameters(SqlParameterSource parameterSource);1356735495;Match the provided in parameter values with registered parameters and_parameters defined via metadata processing._@param parameterSource the parameter vakues provided as a {@link SqlParameterSource}_@return Map with parameter names and values;protected Map<String, Object> matchInParameterValuesWithCallParameters(SqlParameterSource parameterSource) {_		return this.callMetaDataContext.matchInParameterValuesWithCallParameters(parameterSource)__	};match,the,provided,in,parameter,values,with,registered,parameters,and,parameters,defined,via,metadata,processing,param,parameter,source,the,parameter,vakues,provided,as,a,link,sql,parameter,source,return,map,with,parameter,names,and,values;protected,map,string,object,match,in,parameter,values,with,call,parameters,sql,parameter,source,parameter,source,return,this,call,meta,data,context,match,in,parameter,values,with,call,parameters,parameter,source
AbstractJdbcCall -> protected Map<String, Object> matchInParameterValuesWithCallParameters(SqlParameterSource parameterSource);1362408075;Match the provided in parameter values with registered parameters and_parameters defined via metadata processing._@param parameterSource the parameter vakues provided as a {@link SqlParameterSource}_@return Map with parameter names and values;protected Map<String, Object> matchInParameterValuesWithCallParameters(SqlParameterSource parameterSource) {_		return this.callMetaDataContext.matchInParameterValuesWithCallParameters(parameterSource)__	};match,the,provided,in,parameter,values,with,registered,parameters,and,parameters,defined,via,metadata,processing,param,parameter,source,the,parameter,vakues,provided,as,a,link,sql,parameter,source,return,map,with,parameter,names,and,values;protected,map,string,object,match,in,parameter,values,with,call,parameters,sql,parameter,source,parameter,source,return,this,call,meta,data,context,match,in,parameter,values,with,call,parameters,parameter,source
AbstractJdbcCall -> protected Map<String, Object> matchInParameterValuesWithCallParameters(SqlParameterSource parameterSource);1367508310;Match the provided in parameter values with registered parameters and_parameters defined via metadata processing._@param parameterSource the parameter vakues provided as a {@link SqlParameterSource}_@return Map with parameter names and values;protected Map<String, Object> matchInParameterValuesWithCallParameters(SqlParameterSource parameterSource) {_		return this.callMetaDataContext.matchInParameterValuesWithCallParameters(parameterSource)__	};match,the,provided,in,parameter,values,with,registered,parameters,and,parameters,defined,via,metadata,processing,param,parameter,source,the,parameter,vakues,provided,as,a,link,sql,parameter,source,return,map,with,parameter,names,and,values;protected,map,string,object,match,in,parameter,values,with,call,parameters,sql,parameter,source,parameter,source,return,this,call,meta,data,context,match,in,parameter,values,with,call,parameters,parameter,source
AbstractJdbcCall -> protected Map<String, Object> matchInParameterValuesWithCallParameters(SqlParameterSource parameterSource);1385412762;Match the provided in parameter values with registered parameters and_parameters defined via metadata processing._@param parameterSource the parameter vakues provided as a {@link SqlParameterSource}_@return Map with parameter names and values;protected Map<String, Object> matchInParameterValuesWithCallParameters(SqlParameterSource parameterSource) {_		return this.callMetaDataContext.matchInParameterValuesWithCallParameters(parameterSource)__	};match,the,provided,in,parameter,values,with,registered,parameters,and,parameters,defined,via,metadata,processing,param,parameter,source,the,parameter,vakues,provided,as,a,link,sql,parameter,source,return,map,with,parameter,names,and,values;protected,map,string,object,match,in,parameter,values,with,call,parameters,sql,parameter,source,parameter,source,return,this,call,meta,data,context,match,in,parameter,values,with,call,parameters,parameter,source
AbstractJdbcCall -> protected Map<String, Object> matchInParameterValuesWithCallParameters(SqlParameterSource parameterSource);1407789123;Match the provided in parameter values with registered parameters and_parameters defined via metadata processing._@param parameterSource the parameter vakues provided as a {@link SqlParameterSource}_@return Map with parameter names and values;protected Map<String, Object> matchInParameterValuesWithCallParameters(SqlParameterSource parameterSource) {_		return this.callMetaDataContext.matchInParameterValuesWithCallParameters(parameterSource)__	};match,the,provided,in,parameter,values,with,registered,parameters,and,parameters,defined,via,metadata,processing,param,parameter,source,the,parameter,vakues,provided,as,a,link,sql,parameter,source,return,map,with,parameter,names,and,values;protected,map,string,object,match,in,parameter,values,with,call,parameters,sql,parameter,source,parameter,source,return,this,call,meta,data,context,match,in,parameter,values,with,call,parameters,parameter,source
AbstractJdbcCall -> protected Map<String, Object> matchInParameterValuesWithCallParameters(SqlParameterSource parameterSource);1416833949;Match the provided in parameter values with registered parameters and_parameters defined via metadata processing._@param parameterSource the parameter vakues provided as a {@link SqlParameterSource}_@return Map with parameter names and values;protected Map<String, Object> matchInParameterValuesWithCallParameters(SqlParameterSource parameterSource) {_		return this.callMetaDataContext.matchInParameterValuesWithCallParameters(parameterSource)__	};match,the,provided,in,parameter,values,with,registered,parameters,and,parameters,defined,via,metadata,processing,param,parameter,source,the,parameter,vakues,provided,as,a,link,sql,parameter,source,return,map,with,parameter,names,and,values;protected,map,string,object,match,in,parameter,values,with,call,parameters,sql,parameter,source,parameter,source,return,this,call,meta,data,context,match,in,parameter,values,with,call,parameters,parameter,source
AbstractJdbcCall -> protected Map<String, Object> matchInParameterValuesWithCallParameters(SqlParameterSource parameterSource);1431676443;Match the provided in parameter values with registered parameters and_parameters defined via metadata processing._@param parameterSource the parameter vakues provided as a {@link SqlParameterSource}_@return Map with parameter names and values;protected Map<String, Object> matchInParameterValuesWithCallParameters(SqlParameterSource parameterSource) {_		return this.callMetaDataContext.matchInParameterValuesWithCallParameters(parameterSource)__	};match,the,provided,in,parameter,values,with,registered,parameters,and,parameters,defined,via,metadata,processing,param,parameter,source,the,parameter,vakues,provided,as,a,link,sql,parameter,source,return,map,with,parameter,names,and,values;protected,map,string,object,match,in,parameter,values,with,call,parameters,sql,parameter,source,parameter,source,return,this,call,meta,data,context,match,in,parameter,values,with,call,parameters,parameter,source
AbstractJdbcCall -> protected Map<String, Object> matchInParameterValuesWithCallParameters(SqlParameterSource parameterSource);1446038912;Match the provided in parameter values with registered parameters and_parameters defined via metadata processing._@param parameterSource the parameter vakues provided as a {@link SqlParameterSource}_@return Map with parameter names and values;protected Map<String, Object> matchInParameterValuesWithCallParameters(SqlParameterSource parameterSource) {_		return this.callMetaDataContext.matchInParameterValuesWithCallParameters(parameterSource)__	};match,the,provided,in,parameter,values,with,registered,parameters,and,parameters,defined,via,metadata,processing,param,parameter,source,the,parameter,vakues,provided,as,a,link,sql,parameter,source,return,map,with,parameter,names,and,values;protected,map,string,object,match,in,parameter,values,with,call,parameters,sql,parameter,source,parameter,source,return,this,call,meta,data,context,match,in,parameter,values,with,call,parameters,parameter,source
AbstractJdbcCall -> protected Map<String, Object> matchInParameterValuesWithCallParameters(SqlParameterSource parameterSource);1446470853;Match the provided in parameter values with registered parameters and_parameters defined via metadata processing._@param parameterSource the parameter vakues provided as a {@link SqlParameterSource}_@return Map with parameter names and values;protected Map<String, Object> matchInParameterValuesWithCallParameters(SqlParameterSource parameterSource) {_		return this.callMetaDataContext.matchInParameterValuesWithCallParameters(parameterSource)__	};match,the,provided,in,parameter,values,with,registered,parameters,and,parameters,defined,via,metadata,processing,param,parameter,source,the,parameter,vakues,provided,as,a,link,sql,parameter,source,return,map,with,parameter,names,and,values;protected,map,string,object,match,in,parameter,values,with,call,parameters,sql,parameter,source,parameter,source,return,this,call,meta,data,context,match,in,parameter,values,with,call,parameters,parameter,source
AbstractJdbcCall -> protected Map<String, Object> matchInParameterValuesWithCallParameters(SqlParameterSource parameterSource);1467730834;Match the provided in parameter values with registered parameters and_parameters defined via metadata processing._@param parameterSource the parameter vakues provided as a {@link SqlParameterSource}_@return Map with parameter names and values;protected Map<String, Object> matchInParameterValuesWithCallParameters(SqlParameterSource parameterSource) {_		return this.callMetaDataContext.matchInParameterValuesWithCallParameters(parameterSource)__	};match,the,provided,in,parameter,values,with,registered,parameters,and,parameters,defined,via,metadata,processing,param,parameter,source,the,parameter,vakues,provided,as,a,link,sql,parameter,source,return,map,with,parameter,names,and,values;protected,map,string,object,match,in,parameter,values,with,call,parameters,sql,parameter,source,parameter,source,return,this,call,meta,data,context,match,in,parameter,values,with,call,parameters,parameter,source
AbstractJdbcCall -> protected Map<String, Object> matchInParameterValuesWithCallParameters(SqlParameterSource parameterSource);1487178248;Match the provided in parameter values with registered parameters and_parameters defined via metadata processing._@param parameterSource the parameter vakues provided as a {@link SqlParameterSource}_@return Map with parameter names and values;protected Map<String, Object> matchInParameterValuesWithCallParameters(SqlParameterSource parameterSource) {_		return this.callMetaDataContext.matchInParameterValuesWithCallParameters(parameterSource)__	};match,the,provided,in,parameter,values,with,registered,parameters,and,parameters,defined,via,metadata,processing,param,parameter,source,the,parameter,vakues,provided,as,a,link,sql,parameter,source,return,map,with,parameter,names,and,values;protected,map,string,object,match,in,parameter,values,with,call,parameters,sql,parameter,source,parameter,source,return,this,call,meta,data,context,match,in,parameter,values,with,call,parameters,parameter,source
AbstractJdbcCall -> protected Map<String, Object> matchInParameterValuesWithCallParameters(SqlParameterSource parameterSource);1496837955;Match the provided in parameter values with registered parameters and_parameters defined via metadata processing._@param parameterSource the parameter vakues provided as a {@link SqlParameterSource}_@return Map with parameter names and values;protected Map<String, Object> matchInParameterValuesWithCallParameters(SqlParameterSource parameterSource) {_		return this.callMetaDataContext.matchInParameterValuesWithCallParameters(parameterSource)__	};match,the,provided,in,parameter,values,with,registered,parameters,and,parameters,defined,via,metadata,processing,param,parameter,source,the,parameter,vakues,provided,as,a,link,sql,parameter,source,return,map,with,parameter,names,and,values;protected,map,string,object,match,in,parameter,values,with,call,parameters,sql,parameter,source,parameter,source,return,this,call,meta,data,context,match,in,parameter,values,with,call,parameters,parameter,source
AbstractJdbcCall -> protected Map<String, Object> matchInParameterValuesWithCallParameters(SqlParameterSource parameterSource);1500448076;Match the provided in parameter values with registered parameters and_parameters defined via metadata processing._@param parameterSource the parameter vakues provided as a {@link SqlParameterSource}_@return Map with parameter names and values;protected Map<String, Object> matchInParameterValuesWithCallParameters(SqlParameterSource parameterSource) {_		return this.callMetaDataContext.matchInParameterValuesWithCallParameters(parameterSource)__	};match,the,provided,in,parameter,values,with,registered,parameters,and,parameters,defined,via,metadata,processing,param,parameter,source,the,parameter,vakues,provided,as,a,link,sql,parameter,source,return,map,with,parameter,names,and,values;protected,map,string,object,match,in,parameter,values,with,call,parameters,sql,parameter,source,parameter,source,return,this,call,meta,data,context,match,in,parameter,values,with,call,parameters,parameter,source
AbstractJdbcCall -> protected Map<String, Object> matchInParameterValuesWithCallParameters(SqlParameterSource parameterSource);1500495740;Match the provided in parameter values with registered parameters and_parameters defined via metadata processing._@param parameterSource the parameter vakues provided as a {@link SqlParameterSource}_@return Map with parameter names and values;protected Map<String, Object> matchInParameterValuesWithCallParameters(SqlParameterSource parameterSource) {_		return this.callMetaDataContext.matchInParameterValuesWithCallParameters(parameterSource)__	};match,the,provided,in,parameter,values,with,registered,parameters,and,parameters,defined,via,metadata,processing,param,parameter,source,the,parameter,vakues,provided,as,a,link,sql,parameter,source,return,map,with,parameter,names,and,values;protected,map,string,object,match,in,parameter,values,with,call,parameters,sql,parameter,source,parameter,source,return,this,call,meta,data,context,match,in,parameter,values,with,call,parameters,parameter,source
AbstractJdbcCall -> protected Map<String, Object> matchInParameterValuesWithCallParameters(SqlParameterSource parameterSource);1520528267;Match the provided in parameter values with registered parameters and_parameters defined via metadata processing._@param parameterSource the parameter vakues provided as a {@link SqlParameterSource}_@return Map with parameter names and values;protected Map<String, Object> matchInParameterValuesWithCallParameters(SqlParameterSource parameterSource) {_		return this.callMetaDataContext.matchInParameterValuesWithCallParameters(parameterSource)__	};match,the,provided,in,parameter,values,with,registered,parameters,and,parameters,defined,via,metadata,processing,param,parameter,source,the,parameter,vakues,provided,as,a,link,sql,parameter,source,return,map,with,parameter,names,and,values;protected,map,string,object,match,in,parameter,values,with,call,parameters,sql,parameter,source,parameter,source,return,this,call,meta,data,context,match,in,parameter,values,with,call,parameters,parameter,source
AbstractJdbcCall -> protected Map<String, Object> matchInParameterValuesWithCallParameters(SqlParameterSource parameterSource);1521457504;Match the provided in parameter values with registered parameters and_parameters defined via meta-data processing._@param parameterSource the parameter vakues provided as a {@link SqlParameterSource}_@return Map with parameter names and values;protected Map<String, Object> matchInParameterValuesWithCallParameters(SqlParameterSource parameterSource) {_		return this.callMetaDataContext.matchInParameterValuesWithCallParameters(parameterSource)__	};match,the,provided,in,parameter,values,with,registered,parameters,and,parameters,defined,via,meta,data,processing,param,parameter,source,the,parameter,vakues,provided,as,a,link,sql,parameter,source,return,map,with,parameter,names,and,values;protected,map,string,object,match,in,parameter,values,with,call,parameters,sql,parameter,source,parameter,source,return,this,call,meta,data,context,match,in,parameter,values,with,call,parameters,parameter,source
AbstractJdbcCall -> protected Map<String, Object> matchInParameterValuesWithCallParameters(SqlParameterSource parameterSource);1522103912;Match the provided in parameter values with registered parameters and_parameters defined via meta-data processing._@param parameterSource the parameter vakues provided as a {@link SqlParameterSource}_@return Map with parameter names and values;protected Map<String, Object> matchInParameterValuesWithCallParameters(SqlParameterSource parameterSource) {_		return this.callMetaDataContext.matchInParameterValuesWithCallParameters(parameterSource)__	};match,the,provided,in,parameter,values,with,registered,parameters,and,parameters,defined,via,meta,data,processing,param,parameter,source,the,parameter,vakues,provided,as,a,link,sql,parameter,source,return,map,with,parameter,names,and,values;protected,map,string,object,match,in,parameter,values,with,call,parameters,sql,parameter,source,parameter,source,return,this,call,meta,data,context,match,in,parameter,values,with,call,parameters,parameter,source
AbstractJdbcCall -> protected Map<String, Object> matchInParameterValuesWithCallParameters(SqlParameterSource parameterSource);1530174524;Match the provided in parameter values with registered parameters and_parameters defined via meta-data processing._@param parameterSource the parameter vakues provided as a {@link SqlParameterSource}_@return a Map with parameter names and values;protected Map<String, Object> matchInParameterValuesWithCallParameters(SqlParameterSource parameterSource) {_		return this.callMetaDataContext.matchInParameterValuesWithCallParameters(parameterSource)__	};match,the,provided,in,parameter,values,with,registered,parameters,and,parameters,defined,via,meta,data,processing,param,parameter,source,the,parameter,vakues,provided,as,a,link,sql,parameter,source,return,a,map,with,parameter,names,and,values;protected,map,string,object,match,in,parameter,values,with,call,parameters,sql,parameter,source,parameter,source,return,this,call,meta,data,context,match,in,parameter,values,with,call,parameters,parameter,source
AbstractJdbcCall -> protected String getScalarOutParameterName();1328020251;Get the name of a single out parameter or return value._Used for functions or procedures with one out parameter.;protected String getScalarOutParameterName() {_		return this.callMetaDataContext.getScalarOutParameterName()__	};get,the,name,of,a,single,out,parameter,or,return,value,used,for,functions,or,procedures,with,one,out,parameter;protected,string,get,scalar,out,parameter,name,return,this,call,meta,data,context,get,scalar,out,parameter,name
AbstractJdbcCall -> protected String getScalarOutParameterName();1356735495;Get the name of a single out parameter or return value._Used for functions or procedures with one out parameter.;protected String getScalarOutParameterName() {_		return this.callMetaDataContext.getScalarOutParameterName()__	};get,the,name,of,a,single,out,parameter,or,return,value,used,for,functions,or,procedures,with,one,out,parameter;protected,string,get,scalar,out,parameter,name,return,this,call,meta,data,context,get,scalar,out,parameter,name
AbstractJdbcCall -> protected String getScalarOutParameterName();1362408075;Get the name of a single out parameter or return value._Used for functions or procedures with one out parameter.;protected String getScalarOutParameterName() {_		return this.callMetaDataContext.getScalarOutParameterName()__	};get,the,name,of,a,single,out,parameter,or,return,value,used,for,functions,or,procedures,with,one,out,parameter;protected,string,get,scalar,out,parameter,name,return,this,call,meta,data,context,get,scalar,out,parameter,name
AbstractJdbcCall -> protected String getScalarOutParameterName();1367508310;Get the name of a single out parameter or return value._Used for functions or procedures with one out parameter.;protected String getScalarOutParameterName() {_		return this.callMetaDataContext.getScalarOutParameterName()__	};get,the,name,of,a,single,out,parameter,or,return,value,used,for,functions,or,procedures,with,one,out,parameter;protected,string,get,scalar,out,parameter,name,return,this,call,meta,data,context,get,scalar,out,parameter,name
AbstractJdbcCall -> protected String getScalarOutParameterName();1385412762;Get the name of a single out parameter or return value._Used for functions or procedures with one out parameter.;protected String getScalarOutParameterName() {_		return this.callMetaDataContext.getScalarOutParameterName()__	};get,the,name,of,a,single,out,parameter,or,return,value,used,for,functions,or,procedures,with,one,out,parameter;protected,string,get,scalar,out,parameter,name,return,this,call,meta,data,context,get,scalar,out,parameter,name
AbstractJdbcCall -> protected String getScalarOutParameterName();1407789123;Get the name of a single out parameter or return value._Used for functions or procedures with one out parameter.;protected String getScalarOutParameterName() {_		return this.callMetaDataContext.getScalarOutParameterName()__	};get,the,name,of,a,single,out,parameter,or,return,value,used,for,functions,or,procedures,with,one,out,parameter;protected,string,get,scalar,out,parameter,name,return,this,call,meta,data,context,get,scalar,out,parameter,name
AbstractJdbcCall -> protected String getScalarOutParameterName();1416833949;Get the name of a single out parameter or return value._Used for functions or procedures with one out parameter.;protected String getScalarOutParameterName() {_		return this.callMetaDataContext.getScalarOutParameterName()__	};get,the,name,of,a,single,out,parameter,or,return,value,used,for,functions,or,procedures,with,one,out,parameter;protected,string,get,scalar,out,parameter,name,return,this,call,meta,data,context,get,scalar,out,parameter,name
AbstractJdbcCall -> protected String getScalarOutParameterName();1431676443;Get the name of a single out parameter or return value._Used for functions or procedures with one out parameter.;protected String getScalarOutParameterName() {_		return this.callMetaDataContext.getScalarOutParameterName()__	};get,the,name,of,a,single,out,parameter,or,return,value,used,for,functions,or,procedures,with,one,out,parameter;protected,string,get,scalar,out,parameter,name,return,this,call,meta,data,context,get,scalar,out,parameter,name
AbstractJdbcCall -> protected String getScalarOutParameterName();1446038912;Get the name of a single out parameter or return value._Used for functions or procedures with one out parameter.;protected String getScalarOutParameterName() {_		return this.callMetaDataContext.getScalarOutParameterName()__	};get,the,name,of,a,single,out,parameter,or,return,value,used,for,functions,or,procedures,with,one,out,parameter;protected,string,get,scalar,out,parameter,name,return,this,call,meta,data,context,get,scalar,out,parameter,name
AbstractJdbcCall -> protected String getScalarOutParameterName();1446470853;Get the name of a single out parameter or return value._Used for functions or procedures with one out parameter.;protected String getScalarOutParameterName() {_		return this.callMetaDataContext.getScalarOutParameterName()__	};get,the,name,of,a,single,out,parameter,or,return,value,used,for,functions,or,procedures,with,one,out,parameter;protected,string,get,scalar,out,parameter,name,return,this,call,meta,data,context,get,scalar,out,parameter,name
AbstractJdbcCall -> protected String getScalarOutParameterName();1467730834;Get the name of a single out parameter or return value._Used for functions or procedures with one out parameter.;protected String getScalarOutParameterName() {_		return this.callMetaDataContext.getScalarOutParameterName()__	};get,the,name,of,a,single,out,parameter,or,return,value,used,for,functions,or,procedures,with,one,out,parameter;protected,string,get,scalar,out,parameter,name,return,this,call,meta,data,context,get,scalar,out,parameter,name
AbstractJdbcCall -> protected String getScalarOutParameterName();1487178248;Get the name of a single out parameter or return value._Used for functions or procedures with one out parameter.;protected String getScalarOutParameterName() {_		return this.callMetaDataContext.getScalarOutParameterName()__	};get,the,name,of,a,single,out,parameter,or,return,value,used,for,functions,or,procedures,with,one,out,parameter;protected,string,get,scalar,out,parameter,name,return,this,call,meta,data,context,get,scalar,out,parameter,name
AbstractJdbcCall -> public void addDeclaredParameter(SqlParameter parameter);1328020251;Add a declared parameter to the list of parameters for the call._Only parameters declared as <code>SqlParameter</code> and <code>SqlInOutParameter</code>_will be used to provide input values. This is different from the <code>StoredProcedure</code> class_which for backwards compatibility reasons allows input values to be provided for parameters declared_as <code>SqlOutParameter</code>._@param parameter the {@link SqlParameter} to add;public void addDeclaredParameter(SqlParameter parameter) {_		Assert.notNull(parameter, "The supplied parameter must not be null")__		if (!StringUtils.hasText(parameter.getName())) {_			throw new InvalidDataAccessApiUsageException(_					"You must specify a parameter name when declaring parameters for \"" + getProcedureName() + "\"")__		}_		this.declaredParameters.add(parameter)__		if (logger.isDebugEnabled()) {_			logger.debug("Added declared parameter for [" + getProcedureName() + "]: " + parameter.getName())__		}_	};add,a,declared,parameter,to,the,list,of,parameters,for,the,call,only,parameters,declared,as,code,sql,parameter,code,and,code,sql,in,out,parameter,code,will,be,used,to,provide,input,values,this,is,different,from,the,code,stored,procedure,code,class,which,for,backwards,compatibility,reasons,allows,input,values,to,be,provided,for,parameters,declared,as,code,sql,out,parameter,code,param,parameter,the,link,sql,parameter,to,add;public,void,add,declared,parameter,sql,parameter,parameter,assert,not,null,parameter,the,supplied,parameter,must,not,be,null,if,string,utils,has,text,parameter,get,name,throw,new,invalid,data,access,api,usage,exception,you,must,specify,a,parameter,name,when,declaring,parameters,for,get,procedure,name,this,declared,parameters,add,parameter,if,logger,is,debug,enabled,logger,debug,added,declared,parameter,for,get,procedure,name,parameter,get,name
AbstractJdbcCall -> public void addDeclaredParameter(SqlParameter parameter);1356735495;Add a declared parameter to the list of parameters for the call._Only parameters declared as {@code SqlParameter} and {@code SqlInOutParameter}_will be used to provide input values. This is different from the {@code StoredProcedure} class_which for backwards compatibility reasons allows input values to be provided for parameters declared_as {@code SqlOutParameter}._@param parameter the {@link SqlParameter} to add;public void addDeclaredParameter(SqlParameter parameter) {_		Assert.notNull(parameter, "The supplied parameter must not be null")__		if (!StringUtils.hasText(parameter.getName())) {_			throw new InvalidDataAccessApiUsageException(_					"You must specify a parameter name when declaring parameters for \"" + getProcedureName() + "\"")__		}_		this.declaredParameters.add(parameter)__		if (logger.isDebugEnabled()) {_			logger.debug("Added declared parameter for [" + getProcedureName() + "]: " + parameter.getName())__		}_	};add,a,declared,parameter,to,the,list,of,parameters,for,the,call,only,parameters,declared,as,code,sql,parameter,and,code,sql,in,out,parameter,will,be,used,to,provide,input,values,this,is,different,from,the,code,stored,procedure,class,which,for,backwards,compatibility,reasons,allows,input,values,to,be,provided,for,parameters,declared,as,code,sql,out,parameter,param,parameter,the,link,sql,parameter,to,add;public,void,add,declared,parameter,sql,parameter,parameter,assert,not,null,parameter,the,supplied,parameter,must,not,be,null,if,string,utils,has,text,parameter,get,name,throw,new,invalid,data,access,api,usage,exception,you,must,specify,a,parameter,name,when,declaring,parameters,for,get,procedure,name,this,declared,parameters,add,parameter,if,logger,is,debug,enabled,logger,debug,added,declared,parameter,for,get,procedure,name,parameter,get,name
AbstractJdbcCall -> public void addDeclaredParameter(SqlParameter parameter);1362408075;Add a declared parameter to the list of parameters for the call._Only parameters declared as {@code SqlParameter} and {@code SqlInOutParameter}_will be used to provide input values. This is different from the {@code StoredProcedure} class_which for backwards compatibility reasons allows input values to be provided for parameters declared_as {@code SqlOutParameter}._@param parameter the {@link SqlParameter} to add;public void addDeclaredParameter(SqlParameter parameter) {_		Assert.notNull(parameter, "The supplied parameter must not be null")__		if (!StringUtils.hasText(parameter.getName())) {_			throw new InvalidDataAccessApiUsageException(_					"You must specify a parameter name when declaring parameters for \"" + getProcedureName() + "\"")__		}_		this.declaredParameters.add(parameter)__		if (logger.isDebugEnabled()) {_			logger.debug("Added declared parameter for [" + getProcedureName() + "]: " + parameter.getName())__		}_	};add,a,declared,parameter,to,the,list,of,parameters,for,the,call,only,parameters,declared,as,code,sql,parameter,and,code,sql,in,out,parameter,will,be,used,to,provide,input,values,this,is,different,from,the,code,stored,procedure,class,which,for,backwards,compatibility,reasons,allows,input,values,to,be,provided,for,parameters,declared,as,code,sql,out,parameter,param,parameter,the,link,sql,parameter,to,add;public,void,add,declared,parameter,sql,parameter,parameter,assert,not,null,parameter,the,supplied,parameter,must,not,be,null,if,string,utils,has,text,parameter,get,name,throw,new,invalid,data,access,api,usage,exception,you,must,specify,a,parameter,name,when,declaring,parameters,for,get,procedure,name,this,declared,parameters,add,parameter,if,logger,is,debug,enabled,logger,debug,added,declared,parameter,for,get,procedure,name,parameter,get,name
AbstractJdbcCall -> public void addDeclaredParameter(SqlParameter parameter);1367508310;Add a declared parameter to the list of parameters for the call._Only parameters declared as {@code SqlParameter} and {@code SqlInOutParameter}_will be used to provide input values. This is different from the {@code StoredProcedure} class_which for backwards compatibility reasons allows input values to be provided for parameters declared_as {@code SqlOutParameter}._@param parameter the {@link SqlParameter} to add;public void addDeclaredParameter(SqlParameter parameter) {_		Assert.notNull(parameter, "The supplied parameter must not be null")__		if (!StringUtils.hasText(parameter.getName())) {_			throw new InvalidDataAccessApiUsageException(_					"You must specify a parameter name when declaring parameters for \"" + getProcedureName() + "\"")__		}_		this.declaredParameters.add(parameter)__		if (logger.isDebugEnabled()) {_			logger.debug("Added declared parameter for [" + getProcedureName() + "]: " + parameter.getName())__		}_	};add,a,declared,parameter,to,the,list,of,parameters,for,the,call,only,parameters,declared,as,code,sql,parameter,and,code,sql,in,out,parameter,will,be,used,to,provide,input,values,this,is,different,from,the,code,stored,procedure,class,which,for,backwards,compatibility,reasons,allows,input,values,to,be,provided,for,parameters,declared,as,code,sql,out,parameter,param,parameter,the,link,sql,parameter,to,add;public,void,add,declared,parameter,sql,parameter,parameter,assert,not,null,parameter,the,supplied,parameter,must,not,be,null,if,string,utils,has,text,parameter,get,name,throw,new,invalid,data,access,api,usage,exception,you,must,specify,a,parameter,name,when,declaring,parameters,for,get,procedure,name,this,declared,parameters,add,parameter,if,logger,is,debug,enabled,logger,debug,added,declared,parameter,for,get,procedure,name,parameter,get,name
AbstractJdbcCall -> public void addDeclaredParameter(SqlParameter parameter);1385412762;Add a declared parameter to the list of parameters for the call._Only parameters declared as {@code SqlParameter} and {@code SqlInOutParameter}_will be used to provide input values. This is different from the {@code StoredProcedure} class_which for backwards compatibility reasons allows input values to be provided for parameters declared_as {@code SqlOutParameter}._@param parameter the {@link SqlParameter} to add;public void addDeclaredParameter(SqlParameter parameter) {_		Assert.notNull(parameter, "The supplied parameter must not be null")__		if (!StringUtils.hasText(parameter.getName())) {_			throw new InvalidDataAccessApiUsageException(_					"You must specify a parameter name when declaring parameters for \"" + getProcedureName() + "\"")__		}_		this.declaredParameters.add(parameter)__		if (logger.isDebugEnabled()) {_			logger.debug("Added declared parameter for [" + getProcedureName() + "]: " + parameter.getName())__		}_	};add,a,declared,parameter,to,the,list,of,parameters,for,the,call,only,parameters,declared,as,code,sql,parameter,and,code,sql,in,out,parameter,will,be,used,to,provide,input,values,this,is,different,from,the,code,stored,procedure,class,which,for,backwards,compatibility,reasons,allows,input,values,to,be,provided,for,parameters,declared,as,code,sql,out,parameter,param,parameter,the,link,sql,parameter,to,add;public,void,add,declared,parameter,sql,parameter,parameter,assert,not,null,parameter,the,supplied,parameter,must,not,be,null,if,string,utils,has,text,parameter,get,name,throw,new,invalid,data,access,api,usage,exception,you,must,specify,a,parameter,name,when,declaring,parameters,for,get,procedure,name,this,declared,parameters,add,parameter,if,logger,is,debug,enabled,logger,debug,added,declared,parameter,for,get,procedure,name,parameter,get,name
AbstractJdbcCall -> public void addDeclaredParameter(SqlParameter parameter);1407789123;Add a declared parameter to the list of parameters for the call._Only parameters declared as {@code SqlParameter} and {@code SqlInOutParameter}_will be used to provide input values. This is different from the {@code StoredProcedure} class_which for backwards compatibility reasons allows input values to be provided for parameters declared_as {@code SqlOutParameter}._@param parameter the {@link SqlParameter} to add;public void addDeclaredParameter(SqlParameter parameter) {_		Assert.notNull(parameter, "The supplied parameter must not be null")__		if (!StringUtils.hasText(parameter.getName())) {_			throw new InvalidDataAccessApiUsageException(_					"You must specify a parameter name when declaring parameters for \"" + getProcedureName() + "\"")__		}_		this.declaredParameters.add(parameter)__		if (logger.isDebugEnabled()) {_			logger.debug("Added declared parameter for [" + getProcedureName() + "]: " + parameter.getName())__		}_	};add,a,declared,parameter,to,the,list,of,parameters,for,the,call,only,parameters,declared,as,code,sql,parameter,and,code,sql,in,out,parameter,will,be,used,to,provide,input,values,this,is,different,from,the,code,stored,procedure,class,which,for,backwards,compatibility,reasons,allows,input,values,to,be,provided,for,parameters,declared,as,code,sql,out,parameter,param,parameter,the,link,sql,parameter,to,add;public,void,add,declared,parameter,sql,parameter,parameter,assert,not,null,parameter,the,supplied,parameter,must,not,be,null,if,string,utils,has,text,parameter,get,name,throw,new,invalid,data,access,api,usage,exception,you,must,specify,a,parameter,name,when,declaring,parameters,for,get,procedure,name,this,declared,parameters,add,parameter,if,logger,is,debug,enabled,logger,debug,added,declared,parameter,for,get,procedure,name,parameter,get,name
AbstractJdbcCall -> public void addDeclaredParameter(SqlParameter parameter);1416833949;Add a declared parameter to the list of parameters for the call._<p>Only parameters declared as {@code SqlParameter} and {@code SqlInOutParameter} will_be used to provide input values. This is different from the {@code StoredProcedure}_class which - for backwards compatibility reasons - allows input values to be provided_for parameters declared as {@code SqlOutParameter}._@param parameter the {@link SqlParameter} to add;public void addDeclaredParameter(SqlParameter parameter) {_		Assert.notNull(parameter, "The supplied parameter must not be null")__		if (!StringUtils.hasText(parameter.getName())) {_			throw new InvalidDataAccessApiUsageException(_					"You must specify a parameter name when declaring parameters for \"" + getProcedureName() + "\"")__		}_		this.declaredParameters.add(parameter)__		if (logger.isDebugEnabled()) {_			logger.debug("Added declared parameter for [" + getProcedureName() + "]: " + parameter.getName())__		}_	};add,a,declared,parameter,to,the,list,of,parameters,for,the,call,p,only,parameters,declared,as,code,sql,parameter,and,code,sql,in,out,parameter,will,be,used,to,provide,input,values,this,is,different,from,the,code,stored,procedure,class,which,for,backwards,compatibility,reasons,allows,input,values,to,be,provided,for,parameters,declared,as,code,sql,out,parameter,param,parameter,the,link,sql,parameter,to,add;public,void,add,declared,parameter,sql,parameter,parameter,assert,not,null,parameter,the,supplied,parameter,must,not,be,null,if,string,utils,has,text,parameter,get,name,throw,new,invalid,data,access,api,usage,exception,you,must,specify,a,parameter,name,when,declaring,parameters,for,get,procedure,name,this,declared,parameters,add,parameter,if,logger,is,debug,enabled,logger,debug,added,declared,parameter,for,get,procedure,name,parameter,get,name
AbstractJdbcCall -> public void addDeclaredParameter(SqlParameter parameter);1431676443;Add a declared parameter to the list of parameters for the call._<p>Only parameters declared as {@code SqlParameter} and {@code SqlInOutParameter} will_be used to provide input values. This is different from the {@code StoredProcedure}_class which - for backwards compatibility reasons - allows input values to be provided_for parameters declared as {@code SqlOutParameter}._@param parameter the {@link SqlParameter} to add;public void addDeclaredParameter(SqlParameter parameter) {_		Assert.notNull(parameter, "The supplied parameter must not be null")__		if (!StringUtils.hasText(parameter.getName())) {_			throw new InvalidDataAccessApiUsageException(_					"You must specify a parameter name when declaring parameters for \"" + getProcedureName() + "\"")__		}_		this.declaredParameters.add(parameter)__		if (logger.isDebugEnabled()) {_			logger.debug("Added declared parameter for [" + getProcedureName() + "]: " + parameter.getName())__		}_	};add,a,declared,parameter,to,the,list,of,parameters,for,the,call,p,only,parameters,declared,as,code,sql,parameter,and,code,sql,in,out,parameter,will,be,used,to,provide,input,values,this,is,different,from,the,code,stored,procedure,class,which,for,backwards,compatibility,reasons,allows,input,values,to,be,provided,for,parameters,declared,as,code,sql,out,parameter,param,parameter,the,link,sql,parameter,to,add;public,void,add,declared,parameter,sql,parameter,parameter,assert,not,null,parameter,the,supplied,parameter,must,not,be,null,if,string,utils,has,text,parameter,get,name,throw,new,invalid,data,access,api,usage,exception,you,must,specify,a,parameter,name,when,declaring,parameters,for,get,procedure,name,this,declared,parameters,add,parameter,if,logger,is,debug,enabled,logger,debug,added,declared,parameter,for,get,procedure,name,parameter,get,name
AbstractJdbcCall -> public void addDeclaredParameter(SqlParameter parameter);1446038912;Add a declared parameter to the list of parameters for the call._<p>Only parameters declared as {@code SqlParameter} and {@code SqlInOutParameter} will_be used to provide input values. This is different from the {@code StoredProcedure}_class which - for backwards compatibility reasons - allows input values to be provided_for parameters declared as {@code SqlOutParameter}._@param parameter the {@link SqlParameter} to add;public void addDeclaredParameter(SqlParameter parameter) {_		Assert.notNull(parameter, "The supplied parameter must not be null")__		if (!StringUtils.hasText(parameter.getName())) {_			throw new InvalidDataAccessApiUsageException(_					"You must specify a parameter name when declaring parameters for \"" + getProcedureName() + "\"")__		}_		this.declaredParameters.add(parameter)__		if (logger.isDebugEnabled()) {_			logger.debug("Added declared parameter for [" + getProcedureName() + "]: " + parameter.getName())__		}_	};add,a,declared,parameter,to,the,list,of,parameters,for,the,call,p,only,parameters,declared,as,code,sql,parameter,and,code,sql,in,out,parameter,will,be,used,to,provide,input,values,this,is,different,from,the,code,stored,procedure,class,which,for,backwards,compatibility,reasons,allows,input,values,to,be,provided,for,parameters,declared,as,code,sql,out,parameter,param,parameter,the,link,sql,parameter,to,add;public,void,add,declared,parameter,sql,parameter,parameter,assert,not,null,parameter,the,supplied,parameter,must,not,be,null,if,string,utils,has,text,parameter,get,name,throw,new,invalid,data,access,api,usage,exception,you,must,specify,a,parameter,name,when,declaring,parameters,for,get,procedure,name,this,declared,parameters,add,parameter,if,logger,is,debug,enabled,logger,debug,added,declared,parameter,for,get,procedure,name,parameter,get,name
AbstractJdbcCall -> public void addDeclaredParameter(SqlParameter parameter);1446470853;Add a declared parameter to the list of parameters for the call._<p>Only parameters declared as {@code SqlParameter} and {@code SqlInOutParameter} will_be used to provide input values. This is different from the {@code StoredProcedure}_class which - for backwards compatibility reasons - allows input values to be provided_for parameters declared as {@code SqlOutParameter}._@param parameter the {@link SqlParameter} to add;public void addDeclaredParameter(SqlParameter parameter) {_		Assert.notNull(parameter, "The supplied parameter must not be null")__		if (!StringUtils.hasText(parameter.getName())) {_			throw new InvalidDataAccessApiUsageException(_					"You must specify a parameter name when declaring parameters for \"" + getProcedureName() + "\"")__		}_		this.declaredParameters.add(parameter)__		if (logger.isDebugEnabled()) {_			logger.debug("Added declared parameter for [" + getProcedureName() + "]: " + parameter.getName())__		}_	};add,a,declared,parameter,to,the,list,of,parameters,for,the,call,p,only,parameters,declared,as,code,sql,parameter,and,code,sql,in,out,parameter,will,be,used,to,provide,input,values,this,is,different,from,the,code,stored,procedure,class,which,for,backwards,compatibility,reasons,allows,input,values,to,be,provided,for,parameters,declared,as,code,sql,out,parameter,param,parameter,the,link,sql,parameter,to,add;public,void,add,declared,parameter,sql,parameter,parameter,assert,not,null,parameter,the,supplied,parameter,must,not,be,null,if,string,utils,has,text,parameter,get,name,throw,new,invalid,data,access,api,usage,exception,you,must,specify,a,parameter,name,when,declaring,parameters,for,get,procedure,name,this,declared,parameters,add,parameter,if,logger,is,debug,enabled,logger,debug,added,declared,parameter,for,get,procedure,name,parameter,get,name
AbstractJdbcCall -> public void addDeclaredParameter(SqlParameter parameter);1467730834;Add a declared parameter to the list of parameters for the call._<p>Only parameters declared as {@code SqlParameter} and {@code SqlInOutParameter} will_be used to provide input values. This is different from the {@code StoredProcedure}_class which - for backwards compatibility reasons - allows input values to be provided_for parameters declared as {@code SqlOutParameter}._@param parameter the {@link SqlParameter} to add;public void addDeclaredParameter(SqlParameter parameter) {_		Assert.notNull(parameter, "The supplied parameter must not be null")__		if (!StringUtils.hasText(parameter.getName())) {_			throw new InvalidDataAccessApiUsageException(_					"You must specify a parameter name when declaring parameters for \"" + getProcedureName() + "\"")__		}_		this.declaredParameters.add(parameter)__		if (logger.isDebugEnabled()) {_			logger.debug("Added declared parameter for [" + getProcedureName() + "]: " + parameter.getName())__		}_	};add,a,declared,parameter,to,the,list,of,parameters,for,the,call,p,only,parameters,declared,as,code,sql,parameter,and,code,sql,in,out,parameter,will,be,used,to,provide,input,values,this,is,different,from,the,code,stored,procedure,class,which,for,backwards,compatibility,reasons,allows,input,values,to,be,provided,for,parameters,declared,as,code,sql,out,parameter,param,parameter,the,link,sql,parameter,to,add;public,void,add,declared,parameter,sql,parameter,parameter,assert,not,null,parameter,the,supplied,parameter,must,not,be,null,if,string,utils,has,text,parameter,get,name,throw,new,invalid,data,access,api,usage,exception,you,must,specify,a,parameter,name,when,declaring,parameters,for,get,procedure,name,this,declared,parameters,add,parameter,if,logger,is,debug,enabled,logger,debug,added,declared,parameter,for,get,procedure,name,parameter,get,name
AbstractJdbcCall -> public void addDeclaredParameter(SqlParameter parameter);1487178248;Add a declared parameter to the list of parameters for the call._<p>Only parameters declared as {@code SqlParameter} and {@code SqlInOutParameter} will_be used to provide input values. This is different from the {@code StoredProcedure}_class which - for backwards compatibility reasons - allows input values to be provided_for parameters declared as {@code SqlOutParameter}._@param parameter the {@link SqlParameter} to add;public void addDeclaredParameter(SqlParameter parameter) {_		Assert.notNull(parameter, "The supplied parameter must not be null")__		if (!StringUtils.hasText(parameter.getName())) {_			throw new InvalidDataAccessApiUsageException(_					"You must specify a parameter name when declaring parameters for \"" + getProcedureName() + "\"")__		}_		this.declaredParameters.add(parameter)__		if (logger.isDebugEnabled()) {_			logger.debug("Added declared parameter for [" + getProcedureName() + "]: " + parameter.getName())__		}_	};add,a,declared,parameter,to,the,list,of,parameters,for,the,call,p,only,parameters,declared,as,code,sql,parameter,and,code,sql,in,out,parameter,will,be,used,to,provide,input,values,this,is,different,from,the,code,stored,procedure,class,which,for,backwards,compatibility,reasons,allows,input,values,to,be,provided,for,parameters,declared,as,code,sql,out,parameter,param,parameter,the,link,sql,parameter,to,add;public,void,add,declared,parameter,sql,parameter,parameter,assert,not,null,parameter,the,supplied,parameter,must,not,be,null,if,string,utils,has,text,parameter,get,name,throw,new,invalid,data,access,api,usage,exception,you,must,specify,a,parameter,name,when,declaring,parameters,for,get,procedure,name,this,declared,parameters,add,parameter,if,logger,is,debug,enabled,logger,debug,added,declared,parameter,for,get,procedure,name,parameter,get,name
AbstractJdbcCall -> public void addDeclaredParameter(SqlParameter parameter);1496837955;Add a declared parameter to the list of parameters for the call._<p>Only parameters declared as {@code SqlParameter} and {@code SqlInOutParameter} will_be used to provide input values. This is different from the {@code StoredProcedure}_class which - for backwards compatibility reasons - allows input values to be provided_for parameters declared as {@code SqlOutParameter}._@param parameter the {@link SqlParameter} to add;public void addDeclaredParameter(SqlParameter parameter) {_		Assert.notNull(parameter, "The supplied parameter must not be null")__		if (!StringUtils.hasText(parameter.getName())) {_			throw new InvalidDataAccessApiUsageException(_					"You must specify a parameter name when declaring parameters for \"" + getProcedureName() + "\"")__		}_		this.declaredParameters.add(parameter)__		if (logger.isDebugEnabled()) {_			logger.debug("Added declared parameter for [" + getProcedureName() + "]: " + parameter.getName())__		}_	};add,a,declared,parameter,to,the,list,of,parameters,for,the,call,p,only,parameters,declared,as,code,sql,parameter,and,code,sql,in,out,parameter,will,be,used,to,provide,input,values,this,is,different,from,the,code,stored,procedure,class,which,for,backwards,compatibility,reasons,allows,input,values,to,be,provided,for,parameters,declared,as,code,sql,out,parameter,param,parameter,the,link,sql,parameter,to,add;public,void,add,declared,parameter,sql,parameter,parameter,assert,not,null,parameter,the,supplied,parameter,must,not,be,null,if,string,utils,has,text,parameter,get,name,throw,new,invalid,data,access,api,usage,exception,you,must,specify,a,parameter,name,when,declaring,parameters,for,get,procedure,name,this,declared,parameters,add,parameter,if,logger,is,debug,enabled,logger,debug,added,declared,parameter,for,get,procedure,name,parameter,get,name
AbstractJdbcCall -> public void addDeclaredParameter(SqlParameter parameter);1500448076;Add a declared parameter to the list of parameters for the call._<p>Only parameters declared as {@code SqlParameter} and {@code SqlInOutParameter} will_be used to provide input values. This is different from the {@code StoredProcedure}_class which - for backwards compatibility reasons - allows input values to be provided_for parameters declared as {@code SqlOutParameter}._@param parameter the {@link SqlParameter} to add;public void addDeclaredParameter(SqlParameter parameter) {_		Assert.notNull(parameter, "The supplied parameter must not be null")__		if (!StringUtils.hasText(parameter.getName())) {_			throw new InvalidDataAccessApiUsageException(_					"You must specify a parameter name when declaring parameters for \"" + getProcedureName() + "\"")__		}_		this.declaredParameters.add(parameter)__		if (logger.isDebugEnabled()) {_			logger.debug("Added declared parameter for [" + getProcedureName() + "]: " + parameter.getName())__		}_	};add,a,declared,parameter,to,the,list,of,parameters,for,the,call,p,only,parameters,declared,as,code,sql,parameter,and,code,sql,in,out,parameter,will,be,used,to,provide,input,values,this,is,different,from,the,code,stored,procedure,class,which,for,backwards,compatibility,reasons,allows,input,values,to,be,provided,for,parameters,declared,as,code,sql,out,parameter,param,parameter,the,link,sql,parameter,to,add;public,void,add,declared,parameter,sql,parameter,parameter,assert,not,null,parameter,the,supplied,parameter,must,not,be,null,if,string,utils,has,text,parameter,get,name,throw,new,invalid,data,access,api,usage,exception,you,must,specify,a,parameter,name,when,declaring,parameters,for,get,procedure,name,this,declared,parameters,add,parameter,if,logger,is,debug,enabled,logger,debug,added,declared,parameter,for,get,procedure,name,parameter,get,name
AbstractJdbcCall -> public void addDeclaredParameter(SqlParameter parameter);1500495740;Add a declared parameter to the list of parameters for the call._<p>Only parameters declared as {@code SqlParameter} and {@code SqlInOutParameter} will_be used to provide input values. This is different from the {@code StoredProcedure}_class which - for backwards compatibility reasons - allows input values to be provided_for parameters declared as {@code SqlOutParameter}._@param parameter the {@link SqlParameter} to add;public void addDeclaredParameter(SqlParameter parameter) {_		Assert.notNull(parameter, "The supplied parameter must not be null")__		if (!StringUtils.hasText(parameter.getName())) {_			throw new InvalidDataAccessApiUsageException(_					"You must specify a parameter name when declaring parameters for \"" + getProcedureName() + "\"")__		}_		this.declaredParameters.add(parameter)__		if (logger.isDebugEnabled()) {_			logger.debug("Added declared parameter for [" + getProcedureName() + "]: " + parameter.getName())__		}_	};add,a,declared,parameter,to,the,list,of,parameters,for,the,call,p,only,parameters,declared,as,code,sql,parameter,and,code,sql,in,out,parameter,will,be,used,to,provide,input,values,this,is,different,from,the,code,stored,procedure,class,which,for,backwards,compatibility,reasons,allows,input,values,to,be,provided,for,parameters,declared,as,code,sql,out,parameter,param,parameter,the,link,sql,parameter,to,add;public,void,add,declared,parameter,sql,parameter,parameter,assert,not,null,parameter,the,supplied,parameter,must,not,be,null,if,string,utils,has,text,parameter,get,name,throw,new,invalid,data,access,api,usage,exception,you,must,specify,a,parameter,name,when,declaring,parameters,for,get,procedure,name,this,declared,parameters,add,parameter,if,logger,is,debug,enabled,logger,debug,added,declared,parameter,for,get,procedure,name,parameter,get,name
AbstractJdbcCall -> public void addDeclaredParameter(SqlParameter parameter);1520528267;Add a declared parameter to the list of parameters for the call._<p>Only parameters declared as {@code SqlParameter} and {@code SqlInOutParameter} will_be used to provide input values. This is different from the {@code StoredProcedure}_class which - for backwards compatibility reasons - allows input values to be provided_for parameters declared as {@code SqlOutParameter}._@param parameter the {@link SqlParameter} to add;public void addDeclaredParameter(SqlParameter parameter) {_		Assert.notNull(parameter, "The supplied parameter must not be null")__		if (!StringUtils.hasText(parameter.getName())) {_			throw new InvalidDataAccessApiUsageException(_					"You must specify a parameter name when declaring parameters for \"" + getProcedureName() + "\"")__		}_		this.declaredParameters.add(parameter)__		if (logger.isDebugEnabled()) {_			logger.debug("Added declared parameter for [" + getProcedureName() + "]: " + parameter.getName())__		}_	};add,a,declared,parameter,to,the,list,of,parameters,for,the,call,p,only,parameters,declared,as,code,sql,parameter,and,code,sql,in,out,parameter,will,be,used,to,provide,input,values,this,is,different,from,the,code,stored,procedure,class,which,for,backwards,compatibility,reasons,allows,input,values,to,be,provided,for,parameters,declared,as,code,sql,out,parameter,param,parameter,the,link,sql,parameter,to,add;public,void,add,declared,parameter,sql,parameter,parameter,assert,not,null,parameter,the,supplied,parameter,must,not,be,null,if,string,utils,has,text,parameter,get,name,throw,new,invalid,data,access,api,usage,exception,you,must,specify,a,parameter,name,when,declaring,parameters,for,get,procedure,name,this,declared,parameters,add,parameter,if,logger,is,debug,enabled,logger,debug,added,declared,parameter,for,get,procedure,name,parameter,get,name
AbstractJdbcCall -> public void addDeclaredParameter(SqlParameter parameter);1521457504;Add a declared parameter to the list of parameters for the call._<p>Only parameters declared as {@code SqlParameter} and {@code SqlInOutParameter} will_be used to provide input values. This is different from the {@code StoredProcedure}_class which - for backwards compatibility reasons - allows input values to be provided_for parameters declared as {@code SqlOutParameter}._@param parameter the {@link SqlParameter} to add;public void addDeclaredParameter(SqlParameter parameter) {_		Assert.notNull(parameter, "The supplied parameter must not be null")__		if (!StringUtils.hasText(parameter.getName())) {_			throw new InvalidDataAccessApiUsageException(_					"You must specify a parameter name when declaring parameters for \"" + getProcedureName() + "\"")__		}_		this.declaredParameters.add(parameter)__		if (logger.isDebugEnabled()) {_			logger.debug("Added declared parameter for [" + getProcedureName() + "]: " + parameter.getName())__		}_	};add,a,declared,parameter,to,the,list,of,parameters,for,the,call,p,only,parameters,declared,as,code,sql,parameter,and,code,sql,in,out,parameter,will,be,used,to,provide,input,values,this,is,different,from,the,code,stored,procedure,class,which,for,backwards,compatibility,reasons,allows,input,values,to,be,provided,for,parameters,declared,as,code,sql,out,parameter,param,parameter,the,link,sql,parameter,to,add;public,void,add,declared,parameter,sql,parameter,parameter,assert,not,null,parameter,the,supplied,parameter,must,not,be,null,if,string,utils,has,text,parameter,get,name,throw,new,invalid,data,access,api,usage,exception,you,must,specify,a,parameter,name,when,declaring,parameters,for,get,procedure,name,this,declared,parameters,add,parameter,if,logger,is,debug,enabled,logger,debug,added,declared,parameter,for,get,procedure,name,parameter,get,name
AbstractJdbcCall -> public void addDeclaredParameter(SqlParameter parameter);1522103912;Add a declared parameter to the list of parameters for the call._<p>Only parameters declared as {@code SqlParameter} and {@code SqlInOutParameter} will_be used to provide input values. This is different from the {@code StoredProcedure}_class which - for backwards compatibility reasons - allows input values to be provided_for parameters declared as {@code SqlOutParameter}._@param parameter the {@link SqlParameter} to add;public void addDeclaredParameter(SqlParameter parameter) {_		Assert.notNull(parameter, "The supplied parameter must not be null")__		if (!StringUtils.hasText(parameter.getName())) {_			throw new InvalidDataAccessApiUsageException(_					"You must specify a parameter name when declaring parameters for \"" + getProcedureName() + "\"")__		}_		this.declaredParameters.add(parameter)__		if (logger.isDebugEnabled()) {_			logger.debug("Added declared parameter for [" + getProcedureName() + "]: " + parameter.getName())__		}_	};add,a,declared,parameter,to,the,list,of,parameters,for,the,call,p,only,parameters,declared,as,code,sql,parameter,and,code,sql,in,out,parameter,will,be,used,to,provide,input,values,this,is,different,from,the,code,stored,procedure,class,which,for,backwards,compatibility,reasons,allows,input,values,to,be,provided,for,parameters,declared,as,code,sql,out,parameter,param,parameter,the,link,sql,parameter,to,add;public,void,add,declared,parameter,sql,parameter,parameter,assert,not,null,parameter,the,supplied,parameter,must,not,be,null,if,string,utils,has,text,parameter,get,name,throw,new,invalid,data,access,api,usage,exception,you,must,specify,a,parameter,name,when,declaring,parameters,for,get,procedure,name,this,declared,parameters,add,parameter,if,logger,is,debug,enabled,logger,debug,added,declared,parameter,for,get,procedure,name,parameter,get,name
AbstractJdbcCall -> public void addDeclaredParameter(SqlParameter parameter);1530174524;Add a declared parameter to the list of parameters for the call._<p>Only parameters declared as {@code SqlParameter} and {@code SqlInOutParameter} will_be used to provide input values. This is different from the {@code StoredProcedure}_class which - for backwards compatibility reasons - allows input values to be provided_for parameters declared as {@code SqlOutParameter}._@param parameter the {@link SqlParameter} to add;public void addDeclaredParameter(SqlParameter parameter) {_		Assert.notNull(parameter, "The supplied parameter must not be null")__		if (!StringUtils.hasText(parameter.getName())) {_			throw new InvalidDataAccessApiUsageException(_					"You must specify a parameter name when declaring parameters for \"" + getProcedureName() + "\"")__		}_		this.declaredParameters.add(parameter)__		if (logger.isDebugEnabled()) {_			logger.debug("Added declared parameter for [" + getProcedureName() + "]: " + parameter.getName())__		}_	};add,a,declared,parameter,to,the,list,of,parameters,for,the,call,p,only,parameters,declared,as,code,sql,parameter,and,code,sql,in,out,parameter,will,be,used,to,provide,input,values,this,is,different,from,the,code,stored,procedure,class,which,for,backwards,compatibility,reasons,allows,input,values,to,be,provided,for,parameters,declared,as,code,sql,out,parameter,param,parameter,the,link,sql,parameter,to,add;public,void,add,declared,parameter,sql,parameter,parameter,assert,not,null,parameter,the,supplied,parameter,must,not,be,null,if,string,utils,has,text,parameter,get,name,throw,new,invalid,data,access,api,usage,exception,you,must,specify,a,parameter,name,when,declaring,parameters,for,get,procedure,name,this,declared,parameters,add,parameter,if,logger,is,debug,enabled,logger,debug,added,declared,parameter,for,get,procedure,name,parameter,get,name
AbstractJdbcCall -> public boolean isCompiled();1328020251;Is this operation "compiled"?_@return whether this operation is compiled, and ready to use.;public boolean isCompiled() {_		return this.compiled__	};is,this,operation,compiled,return,whether,this,operation,is,compiled,and,ready,to,use;public,boolean,is,compiled,return,this,compiled
AbstractJdbcCall -> public boolean isCompiled();1356735495;Is this operation "compiled"?_@return whether this operation is compiled, and ready to use.;public boolean isCompiled() {_		return this.compiled__	};is,this,operation,compiled,return,whether,this,operation,is,compiled,and,ready,to,use;public,boolean,is,compiled,return,this,compiled
AbstractJdbcCall -> public boolean isCompiled();1362408075;Is this operation "compiled"?_@return whether this operation is compiled, and ready to use.;public boolean isCompiled() {_		return this.compiled__	};is,this,operation,compiled,return,whether,this,operation,is,compiled,and,ready,to,use;public,boolean,is,compiled,return,this,compiled
AbstractJdbcCall -> public boolean isCompiled();1367508310;Is this operation "compiled"?_@return whether this operation is compiled, and ready to use.;public boolean isCompiled() {_		return this.compiled__	};is,this,operation,compiled,return,whether,this,operation,is,compiled,and,ready,to,use;public,boolean,is,compiled,return,this,compiled
AbstractJdbcCall -> public boolean isCompiled();1385412762;Is this operation "compiled"?_@return whether this operation is compiled, and ready to use.;public boolean isCompiled() {_		return this.compiled__	};is,this,operation,compiled,return,whether,this,operation,is,compiled,and,ready,to,use;public,boolean,is,compiled,return,this,compiled
AbstractJdbcCall -> public boolean isCompiled();1407789123;Is this operation "compiled"?_@return whether this operation is compiled, and ready to use.;public boolean isCompiled() {_		return this.compiled__	};is,this,operation,compiled,return,whether,this,operation,is,compiled,and,ready,to,use;public,boolean,is,compiled,return,this,compiled
AbstractJdbcCall -> public boolean isCompiled();1416833949;Is this operation "compiled"?_@return whether this operation is compiled, and ready to use.;public boolean isCompiled() {_		return this.compiled__	};is,this,operation,compiled,return,whether,this,operation,is,compiled,and,ready,to,use;public,boolean,is,compiled,return,this,compiled
AbstractJdbcCall -> public boolean isCompiled();1431676443;Is this operation "compiled"?_@return whether this operation is compiled, and ready to use.;public boolean isCompiled() {_		return this.compiled__	};is,this,operation,compiled,return,whether,this,operation,is,compiled,and,ready,to,use;public,boolean,is,compiled,return,this,compiled
AbstractJdbcCall -> public boolean isCompiled();1446038912;Is this operation "compiled"?_@return whether this operation is compiled and ready to use;public boolean isCompiled() {_		return this.compiled__	};is,this,operation,compiled,return,whether,this,operation,is,compiled,and,ready,to,use;public,boolean,is,compiled,return,this,compiled
AbstractJdbcCall -> public boolean isCompiled();1446470853;Is this operation "compiled"?_@return whether this operation is compiled and ready to use;public boolean isCompiled() {_		return this.compiled__	};is,this,operation,compiled,return,whether,this,operation,is,compiled,and,ready,to,use;public,boolean,is,compiled,return,this,compiled
AbstractJdbcCall -> public boolean isCompiled();1467730834;Is this operation "compiled"?_@return whether this operation is compiled and ready to use;public boolean isCompiled() {_		return this.compiled__	};is,this,operation,compiled,return,whether,this,operation,is,compiled,and,ready,to,use;public,boolean,is,compiled,return,this,compiled
AbstractJdbcCall -> public boolean isCompiled();1487178248;Is this operation "compiled"?_@return whether this operation is compiled and ready to use;public boolean isCompiled() {_		return this.compiled__	};is,this,operation,compiled,return,whether,this,operation,is,compiled,and,ready,to,use;public,boolean,is,compiled,return,this,compiled
AbstractJdbcCall -> public boolean isCompiled();1496837955;Is this operation "compiled"?_@return whether this operation is compiled and ready to use;public boolean isCompiled() {_		return this.compiled__	};is,this,operation,compiled,return,whether,this,operation,is,compiled,and,ready,to,use;public,boolean,is,compiled,return,this,compiled
AbstractJdbcCall -> public boolean isCompiled();1500448076;Is this operation "compiled"?_@return whether this operation is compiled and ready to use;public boolean isCompiled() {_		return this.compiled__	};is,this,operation,compiled,return,whether,this,operation,is,compiled,and,ready,to,use;public,boolean,is,compiled,return,this,compiled
AbstractJdbcCall -> public boolean isCompiled();1500495740;Is this operation "compiled"?_@return whether this operation is compiled and ready to use;public boolean isCompiled() {_		return this.compiled__	};is,this,operation,compiled,return,whether,this,operation,is,compiled,and,ready,to,use;public,boolean,is,compiled,return,this,compiled
AbstractJdbcCall -> public boolean isCompiled();1520528267;Is this operation "compiled"?_@return whether this operation is compiled and ready to use;public boolean isCompiled() {_		return this.compiled__	};is,this,operation,compiled,return,whether,this,operation,is,compiled,and,ready,to,use;public,boolean,is,compiled,return,this,compiled
AbstractJdbcCall -> public boolean isCompiled();1521457504;Is this operation "compiled"?_@return whether this operation is compiled and ready to use;public boolean isCompiled() {_		return this.compiled__	};is,this,operation,compiled,return,whether,this,operation,is,compiled,and,ready,to,use;public,boolean,is,compiled,return,this,compiled
AbstractJdbcCall -> public boolean isCompiled();1522103912;Is this operation "compiled"?_@return whether this operation is compiled and ready to use;public boolean isCompiled() {_		return this.compiled__	};is,this,operation,compiled,return,whether,this,operation,is,compiled,and,ready,to,use;public,boolean,is,compiled,return,this,compiled
AbstractJdbcCall -> public boolean isCompiled();1530174524;Is this operation "compiled"?_@return whether this operation is compiled and ready to use;public boolean isCompiled() {_		return this.compiled__	};is,this,operation,compiled,return,whether,this,operation,is,compiled,and,ready,to,use;public,boolean,is,compiled,return,this,compiled
AbstractJdbcCall -> @Deprecated 	public void addDeclaredRowMapper(String parameterName, ParameterizedRowMapper rowMapper);1328020251;Add a {@link org.springframework.jdbc.core.RowMapper} for the specified parameter or column._@deprecated in favor of {@link #addDeclaredRowMapper(String, org.springframework.jdbc.core.RowMapper)};@Deprecated_	public void addDeclaredRowMapper(String parameterName, ParameterizedRowMapper rowMapper) {_		addDeclaredRowMapper(parameterName, (RowMapper) rowMapper)__	};add,a,link,org,springframework,jdbc,core,row,mapper,for,the,specified,parameter,or,column,deprecated,in,favor,of,link,add,declared,row,mapper,string,org,springframework,jdbc,core,row,mapper;deprecated,public,void,add,declared,row,mapper,string,parameter,name,parameterized,row,mapper,row,mapper,add,declared,row,mapper,parameter,name,row,mapper,row,mapper
AbstractJdbcCall -> @Deprecated 	public void addDeclaredRowMapper(String parameterName, ParameterizedRowMapper rowMapper);1356735495;Add a {@link org.springframework.jdbc.core.RowMapper} for the specified parameter or column._@deprecated in favor of {@link #addDeclaredRowMapper(String, org.springframework.jdbc.core.RowMapper)};@Deprecated_	public void addDeclaredRowMapper(String parameterName, ParameterizedRowMapper rowMapper) {_		addDeclaredRowMapper(parameterName, (RowMapper) rowMapper)__	};add,a,link,org,springframework,jdbc,core,row,mapper,for,the,specified,parameter,or,column,deprecated,in,favor,of,link,add,declared,row,mapper,string,org,springframework,jdbc,core,row,mapper;deprecated,public,void,add,declared,row,mapper,string,parameter,name,parameterized,row,mapper,row,mapper,add,declared,row,mapper,parameter,name,row,mapper,row,mapper
AbstractJdbcCall -> @Deprecated 	public void addDeclaredRowMapper(String parameterName, ParameterizedRowMapper rowMapper);1362408075;Add a {@link org.springframework.jdbc.core.RowMapper} for the specified parameter or column._@deprecated in favor of {@link #addDeclaredRowMapper(String, org.springframework.jdbc.core.RowMapper)};@Deprecated_	public void addDeclaredRowMapper(String parameterName, ParameterizedRowMapper rowMapper) {_		addDeclaredRowMapper(parameterName, (RowMapper) rowMapper)__	};add,a,link,org,springframework,jdbc,core,row,mapper,for,the,specified,parameter,or,column,deprecated,in,favor,of,link,add,declared,row,mapper,string,org,springframework,jdbc,core,row,mapper;deprecated,public,void,add,declared,row,mapper,string,parameter,name,parameterized,row,mapper,row,mapper,add,declared,row,mapper,parameter,name,row,mapper,row,mapper
AbstractJdbcCall -> protected void compileInternal();1328020251;Method to perform the actual compilation.  Subclasses can override this template method to perform_their own compilation.  Invoked after this base class's compilation is complete.;protected void compileInternal() {_		this.callMetaDataContext.initializeMetaData(getJdbcTemplate().getDataSource())___		_		for (Map.Entry<String, RowMapper> entry : this.declaredRowMappers.entrySet()) {_			SqlParameter resultSetParameter =_					this.callMetaDataContext.createReturnResultSetParameter(entry.getKey(), entry.getValue())__			this.declaredParameters.add(resultSetParameter)__		}_		callMetaDataContext.processParameters(this.declaredParameters)___		this.callString = this.callMetaDataContext.createCallString()__		if (logger.isDebugEnabled()) {_			logger.debug("Compiled stored procedure. Call string is [" + this.callString + "]")__		}__		this.callableStatementFactory =_				new CallableStatementCreatorFactory(getCallString(), this.callMetaDataContext.getCallParameters())__		this.callableStatementFactory.setNativeJdbcExtractor(getJdbcTemplate().getNativeJdbcExtractor())___		onCompileInternal()__	};method,to,perform,the,actual,compilation,subclasses,can,override,this,template,method,to,perform,their,own,compilation,invoked,after,this,base,class,s,compilation,is,complete;protected,void,compile,internal,this,call,meta,data,context,initialize,meta,data,get,jdbc,template,get,data,source,for,map,entry,string,row,mapper,entry,this,declared,row,mappers,entry,set,sql,parameter,result,set,parameter,this,call,meta,data,context,create,return,result,set,parameter,entry,get,key,entry,get,value,this,declared,parameters,add,result,set,parameter,call,meta,data,context,process,parameters,this,declared,parameters,this,call,string,this,call,meta,data,context,create,call,string,if,logger,is,debug,enabled,logger,debug,compiled,stored,procedure,call,string,is,this,call,string,this,callable,statement,factory,new,callable,statement,creator,factory,get,call,string,this,call,meta,data,context,get,call,parameters,this,callable,statement,factory,set,native,jdbc,extractor,get,jdbc,template,get,native,jdbc,extractor,on,compile,internal
AbstractJdbcCall -> protected void compileInternal();1356735495;Method to perform the actual compilation.  Subclasses can override this template method to perform_their own compilation.  Invoked after this base class's compilation is complete.;protected void compileInternal() {_		this.callMetaDataContext.initializeMetaData(getJdbcTemplate().getDataSource())___		_		for (Map.Entry<String, RowMapper> entry : this.declaredRowMappers.entrySet()) {_			SqlParameter resultSetParameter =_					this.callMetaDataContext.createReturnResultSetParameter(entry.getKey(), entry.getValue())__			this.declaredParameters.add(resultSetParameter)__		}_		callMetaDataContext.processParameters(this.declaredParameters)___		this.callString = this.callMetaDataContext.createCallString()__		if (logger.isDebugEnabled()) {_			logger.debug("Compiled stored procedure. Call string is [" + this.callString + "]")__		}__		this.callableStatementFactory =_				new CallableStatementCreatorFactory(getCallString(), this.callMetaDataContext.getCallParameters())__		this.callableStatementFactory.setNativeJdbcExtractor(getJdbcTemplate().getNativeJdbcExtractor())___		onCompileInternal()__	};method,to,perform,the,actual,compilation,subclasses,can,override,this,template,method,to,perform,their,own,compilation,invoked,after,this,base,class,s,compilation,is,complete;protected,void,compile,internal,this,call,meta,data,context,initialize,meta,data,get,jdbc,template,get,data,source,for,map,entry,string,row,mapper,entry,this,declared,row,mappers,entry,set,sql,parameter,result,set,parameter,this,call,meta,data,context,create,return,result,set,parameter,entry,get,key,entry,get,value,this,declared,parameters,add,result,set,parameter,call,meta,data,context,process,parameters,this,declared,parameters,this,call,string,this,call,meta,data,context,create,call,string,if,logger,is,debug,enabled,logger,debug,compiled,stored,procedure,call,string,is,this,call,string,this,callable,statement,factory,new,callable,statement,creator,factory,get,call,string,this,call,meta,data,context,get,call,parameters,this,callable,statement,factory,set,native,jdbc,extractor,get,jdbc,template,get,native,jdbc,extractor,on,compile,internal
AbstractJdbcCall -> protected void compileInternal();1362408075;Method to perform the actual compilation.  Subclasses can override this template method to perform_their own compilation.  Invoked after this base class's compilation is complete.;protected void compileInternal() {_		this.callMetaDataContext.initializeMetaData(getJdbcTemplate().getDataSource())___		_		for (Map.Entry<String, RowMapper> entry : this.declaredRowMappers.entrySet()) {_			SqlParameter resultSetParameter =_					this.callMetaDataContext.createReturnResultSetParameter(entry.getKey(), entry.getValue())__			this.declaredParameters.add(resultSetParameter)__		}_		this.callMetaDataContext.processParameters(this.declaredParameters)___		this.callString = this.callMetaDataContext.createCallString()__		if (logger.isDebugEnabled()) {_			logger.debug("Compiled stored procedure. Call string is [" + this.callString + "]")__		}__		this.callableStatementFactory =_				new CallableStatementCreatorFactory(getCallString(), this.callMetaDataContext.getCallParameters())__		this.callableStatementFactory.setNativeJdbcExtractor(getJdbcTemplate().getNativeJdbcExtractor())___		onCompileInternal()__	};method,to,perform,the,actual,compilation,subclasses,can,override,this,template,method,to,perform,their,own,compilation,invoked,after,this,base,class,s,compilation,is,complete;protected,void,compile,internal,this,call,meta,data,context,initialize,meta,data,get,jdbc,template,get,data,source,for,map,entry,string,row,mapper,entry,this,declared,row,mappers,entry,set,sql,parameter,result,set,parameter,this,call,meta,data,context,create,return,result,set,parameter,entry,get,key,entry,get,value,this,declared,parameters,add,result,set,parameter,this,call,meta,data,context,process,parameters,this,declared,parameters,this,call,string,this,call,meta,data,context,create,call,string,if,logger,is,debug,enabled,logger,debug,compiled,stored,procedure,call,string,is,this,call,string,this,callable,statement,factory,new,callable,statement,creator,factory,get,call,string,this,call,meta,data,context,get,call,parameters,this,callable,statement,factory,set,native,jdbc,extractor,get,jdbc,template,get,native,jdbc,extractor,on,compile,internal
AbstractJdbcCall -> protected void compileInternal();1367508310;Method to perform the actual compilation.  Subclasses can override this template method to perform_their own compilation.  Invoked after this base class's compilation is complete.;protected void compileInternal() {_		this.callMetaDataContext.initializeMetaData(getJdbcTemplate().getDataSource())___		_		for (Map.Entry<String, RowMapper> entry : this.declaredRowMappers.entrySet()) {_			SqlParameter resultSetParameter =_					this.callMetaDataContext.createReturnResultSetParameter(entry.getKey(), entry.getValue())__			this.declaredParameters.add(resultSetParameter)__		}_		this.callMetaDataContext.processParameters(this.declaredParameters)___		this.callString = this.callMetaDataContext.createCallString()__		if (logger.isDebugEnabled()) {_			logger.debug("Compiled stored procedure. Call string is [" + this.callString + "]")__		}__		this.callableStatementFactory =_				new CallableStatementCreatorFactory(getCallString(), this.callMetaDataContext.getCallParameters())__		this.callableStatementFactory.setNativeJdbcExtractor(getJdbcTemplate().getNativeJdbcExtractor())___		onCompileInternal()__	};method,to,perform,the,actual,compilation,subclasses,can,override,this,template,method,to,perform,their,own,compilation,invoked,after,this,base,class,s,compilation,is,complete;protected,void,compile,internal,this,call,meta,data,context,initialize,meta,data,get,jdbc,template,get,data,source,for,map,entry,string,row,mapper,entry,this,declared,row,mappers,entry,set,sql,parameter,result,set,parameter,this,call,meta,data,context,create,return,result,set,parameter,entry,get,key,entry,get,value,this,declared,parameters,add,result,set,parameter,this,call,meta,data,context,process,parameters,this,declared,parameters,this,call,string,this,call,meta,data,context,create,call,string,if,logger,is,debug,enabled,logger,debug,compiled,stored,procedure,call,string,is,this,call,string,this,callable,statement,factory,new,callable,statement,creator,factory,get,call,string,this,call,meta,data,context,get,call,parameters,this,callable,statement,factory,set,native,jdbc,extractor,get,jdbc,template,get,native,jdbc,extractor,on,compile,internal
AbstractJdbcCall -> protected void compileInternal();1385412762;Method to perform the actual compilation.  Subclasses can override this template method to perform_their own compilation.  Invoked after this base class's compilation is complete.;protected void compileInternal() {_		this.callMetaDataContext.initializeMetaData(getJdbcTemplate().getDataSource())___		_		for (Map.Entry<String, RowMapper<?>> entry : this.declaredRowMappers.entrySet()) {_			SqlParameter resultSetParameter =_					this.callMetaDataContext.createReturnResultSetParameter(entry.getKey(), entry.getValue())__			this.declaredParameters.add(resultSetParameter)__		}_		this.callMetaDataContext.processParameters(this.declaredParameters)___		this.callString = this.callMetaDataContext.createCallString()__		if (logger.isDebugEnabled()) {_			logger.debug("Compiled stored procedure. Call string is [" + this.callString + "]")__		}__		this.callableStatementFactory =_				new CallableStatementCreatorFactory(getCallString(), this.callMetaDataContext.getCallParameters())__		this.callableStatementFactory.setNativeJdbcExtractor(getJdbcTemplate().getNativeJdbcExtractor())___		onCompileInternal()__	};method,to,perform,the,actual,compilation,subclasses,can,override,this,template,method,to,perform,their,own,compilation,invoked,after,this,base,class,s,compilation,is,complete;protected,void,compile,internal,this,call,meta,data,context,initialize,meta,data,get,jdbc,template,get,data,source,for,map,entry,string,row,mapper,entry,this,declared,row,mappers,entry,set,sql,parameter,result,set,parameter,this,call,meta,data,context,create,return,result,set,parameter,entry,get,key,entry,get,value,this,declared,parameters,add,result,set,parameter,this,call,meta,data,context,process,parameters,this,declared,parameters,this,call,string,this,call,meta,data,context,create,call,string,if,logger,is,debug,enabled,logger,debug,compiled,stored,procedure,call,string,is,this,call,string,this,callable,statement,factory,new,callable,statement,creator,factory,get,call,string,this,call,meta,data,context,get,call,parameters,this,callable,statement,factory,set,native,jdbc,extractor,get,jdbc,template,get,native,jdbc,extractor,on,compile,internal
AbstractJdbcCall -> protected void compileInternal();1407789123;Method to perform the actual compilation.  Subclasses can override this template method to perform_their own compilation.  Invoked after this base class's compilation is complete.;protected void compileInternal() {_		this.callMetaDataContext.initializeMetaData(getJdbcTemplate().getDataSource())___		_		for (Map.Entry<String, RowMapper<?>> entry : this.declaredRowMappers.entrySet()) {_			SqlParameter resultSetParameter =_					this.callMetaDataContext.createReturnResultSetParameter(entry.getKey(), entry.getValue())__			this.declaredParameters.add(resultSetParameter)__		}_		this.callMetaDataContext.processParameters(this.declaredParameters)___		this.callString = this.callMetaDataContext.createCallString()__		if (logger.isDebugEnabled()) {_			logger.debug("Compiled stored procedure. Call string is [" + this.callString + "]")__		}__		this.callableStatementFactory =_				new CallableStatementCreatorFactory(getCallString(), this.callMetaDataContext.getCallParameters())__		this.callableStatementFactory.setNativeJdbcExtractor(getJdbcTemplate().getNativeJdbcExtractor())___		onCompileInternal()__	};method,to,perform,the,actual,compilation,subclasses,can,override,this,template,method,to,perform,their,own,compilation,invoked,after,this,base,class,s,compilation,is,complete;protected,void,compile,internal,this,call,meta,data,context,initialize,meta,data,get,jdbc,template,get,data,source,for,map,entry,string,row,mapper,entry,this,declared,row,mappers,entry,set,sql,parameter,result,set,parameter,this,call,meta,data,context,create,return,result,set,parameter,entry,get,key,entry,get,value,this,declared,parameters,add,result,set,parameter,this,call,meta,data,context,process,parameters,this,declared,parameters,this,call,string,this,call,meta,data,context,create,call,string,if,logger,is,debug,enabled,logger,debug,compiled,stored,procedure,call,string,is,this,call,string,this,callable,statement,factory,new,callable,statement,creator,factory,get,call,string,this,call,meta,data,context,get,call,parameters,this,callable,statement,factory,set,native,jdbc,extractor,get,jdbc,template,get,native,jdbc,extractor,on,compile,internal
AbstractJdbcCall -> protected void compileInternal();1416833949;Delegate method to perform the actual compilation._<p>Subclasses can override this template method to perform their own compilation._Invoked after this base class's compilation is complete.;protected void compileInternal() {_		this.callMetaDataContext.initializeMetaData(getJdbcTemplate().getDataSource())___		_		for (Map.Entry<String, RowMapper<?>> entry : this.declaredRowMappers.entrySet()) {_			SqlParameter resultSetParameter =_					this.callMetaDataContext.createReturnResultSetParameter(entry.getKey(), entry.getValue())__			this.declaredParameters.add(resultSetParameter)__		}_		this.callMetaDataContext.processParameters(this.declaredParameters)___		this.callString = this.callMetaDataContext.createCallString()__		if (logger.isDebugEnabled()) {_			logger.debug("Compiled stored procedure. Call string is [" + this.callString + "]")__		}__		this.callableStatementFactory =_				new CallableStatementCreatorFactory(getCallString(), this.callMetaDataContext.getCallParameters())__		this.callableStatementFactory.setNativeJdbcExtractor(getJdbcTemplate().getNativeJdbcExtractor())___		onCompileInternal()__	};delegate,method,to,perform,the,actual,compilation,p,subclasses,can,override,this,template,method,to,perform,their,own,compilation,invoked,after,this,base,class,s,compilation,is,complete;protected,void,compile,internal,this,call,meta,data,context,initialize,meta,data,get,jdbc,template,get,data,source,for,map,entry,string,row,mapper,entry,this,declared,row,mappers,entry,set,sql,parameter,result,set,parameter,this,call,meta,data,context,create,return,result,set,parameter,entry,get,key,entry,get,value,this,declared,parameters,add,result,set,parameter,this,call,meta,data,context,process,parameters,this,declared,parameters,this,call,string,this,call,meta,data,context,create,call,string,if,logger,is,debug,enabled,logger,debug,compiled,stored,procedure,call,string,is,this,call,string,this,callable,statement,factory,new,callable,statement,creator,factory,get,call,string,this,call,meta,data,context,get,call,parameters,this,callable,statement,factory,set,native,jdbc,extractor,get,jdbc,template,get,native,jdbc,extractor,on,compile,internal
AbstractJdbcCall -> protected void compileInternal();1431676443;Delegate method to perform the actual compilation._<p>Subclasses can override this template method to perform their own compilation._Invoked after this base class's compilation is complete.;protected void compileInternal() {_		this.callMetaDataContext.initializeMetaData(getJdbcTemplate().getDataSource())___		_		for (Map.Entry<String, RowMapper<?>> entry : this.declaredRowMappers.entrySet()) {_			SqlParameter resultSetParameter =_					this.callMetaDataContext.createReturnResultSetParameter(entry.getKey(), entry.getValue())__			this.declaredParameters.add(resultSetParameter)__		}_		this.callMetaDataContext.processParameters(this.declaredParameters)___		this.callString = this.callMetaDataContext.createCallString()__		if (logger.isDebugEnabled()) {_			logger.debug("Compiled stored procedure. Call string is [" + this.callString + "]")__		}__		this.callableStatementFactory =_				new CallableStatementCreatorFactory(getCallString(), this.callMetaDataContext.getCallParameters())__		this.callableStatementFactory.setNativeJdbcExtractor(getJdbcTemplate().getNativeJdbcExtractor())___		onCompileInternal()__	};delegate,method,to,perform,the,actual,compilation,p,subclasses,can,override,this,template,method,to,perform,their,own,compilation,invoked,after,this,base,class,s,compilation,is,complete;protected,void,compile,internal,this,call,meta,data,context,initialize,meta,data,get,jdbc,template,get,data,source,for,map,entry,string,row,mapper,entry,this,declared,row,mappers,entry,set,sql,parameter,result,set,parameter,this,call,meta,data,context,create,return,result,set,parameter,entry,get,key,entry,get,value,this,declared,parameters,add,result,set,parameter,this,call,meta,data,context,process,parameters,this,declared,parameters,this,call,string,this,call,meta,data,context,create,call,string,if,logger,is,debug,enabled,logger,debug,compiled,stored,procedure,call,string,is,this,call,string,this,callable,statement,factory,new,callable,statement,creator,factory,get,call,string,this,call,meta,data,context,get,call,parameters,this,callable,statement,factory,set,native,jdbc,extractor,get,jdbc,template,get,native,jdbc,extractor,on,compile,internal
AbstractJdbcCall -> protected void compileInternal();1446038912;Delegate method to perform the actual compilation._<p>Subclasses can override this template method to perform their own compilation._Invoked after this base class's compilation is complete.;protected void compileInternal() {_		this.callMetaDataContext.initializeMetaData(getJdbcTemplate().getDataSource())___		_		for (Map.Entry<String, RowMapper<?>> entry : this.declaredRowMappers.entrySet()) {_			SqlParameter resultSetParameter =_					this.callMetaDataContext.createReturnResultSetParameter(entry.getKey(), entry.getValue())__			this.declaredParameters.add(resultSetParameter)__		}_		this.callMetaDataContext.processParameters(this.declaredParameters)___		this.callString = this.callMetaDataContext.createCallString()__		if (logger.isDebugEnabled()) {_			logger.debug("Compiled stored procedure. Call string is [" + this.callString + "]")__		}__		this.callableStatementFactory =_				new CallableStatementCreatorFactory(getCallString(), this.callMetaDataContext.getCallParameters())__		this.callableStatementFactory.setNativeJdbcExtractor(getJdbcTemplate().getNativeJdbcExtractor())___		onCompileInternal()__	};delegate,method,to,perform,the,actual,compilation,p,subclasses,can,override,this,template,method,to,perform,their,own,compilation,invoked,after,this,base,class,s,compilation,is,complete;protected,void,compile,internal,this,call,meta,data,context,initialize,meta,data,get,jdbc,template,get,data,source,for,map,entry,string,row,mapper,entry,this,declared,row,mappers,entry,set,sql,parameter,result,set,parameter,this,call,meta,data,context,create,return,result,set,parameter,entry,get,key,entry,get,value,this,declared,parameters,add,result,set,parameter,this,call,meta,data,context,process,parameters,this,declared,parameters,this,call,string,this,call,meta,data,context,create,call,string,if,logger,is,debug,enabled,logger,debug,compiled,stored,procedure,call,string,is,this,call,string,this,callable,statement,factory,new,callable,statement,creator,factory,get,call,string,this,call,meta,data,context,get,call,parameters,this,callable,statement,factory,set,native,jdbc,extractor,get,jdbc,template,get,native,jdbc,extractor,on,compile,internal
AbstractJdbcCall -> protected void compileInternal();1446470853;Delegate method to perform the actual compilation._<p>Subclasses can override this template method to perform their own compilation._Invoked after this base class's compilation is complete.;protected void compileInternal() {_		this.callMetaDataContext.initializeMetaData(getJdbcTemplate().getDataSource())___		_		for (Map.Entry<String, RowMapper<?>> entry : this.declaredRowMappers.entrySet()) {_			SqlParameter resultSetParameter =_					this.callMetaDataContext.createReturnResultSetParameter(entry.getKey(), entry.getValue())__			this.declaredParameters.add(resultSetParameter)__		}_		this.callMetaDataContext.processParameters(this.declaredParameters)___		this.callString = this.callMetaDataContext.createCallString()__		if (logger.isDebugEnabled()) {_			logger.debug("Compiled stored procedure. Call string is [" + this.callString + "]")__		}__		this.callableStatementFactory =_				new CallableStatementCreatorFactory(getCallString(), this.callMetaDataContext.getCallParameters())__		this.callableStatementFactory.setNativeJdbcExtractor(getJdbcTemplate().getNativeJdbcExtractor())___		onCompileInternal()__	};delegate,method,to,perform,the,actual,compilation,p,subclasses,can,override,this,template,method,to,perform,their,own,compilation,invoked,after,this,base,class,s,compilation,is,complete;protected,void,compile,internal,this,call,meta,data,context,initialize,meta,data,get,jdbc,template,get,data,source,for,map,entry,string,row,mapper,entry,this,declared,row,mappers,entry,set,sql,parameter,result,set,parameter,this,call,meta,data,context,create,return,result,set,parameter,entry,get,key,entry,get,value,this,declared,parameters,add,result,set,parameter,this,call,meta,data,context,process,parameters,this,declared,parameters,this,call,string,this,call,meta,data,context,create,call,string,if,logger,is,debug,enabled,logger,debug,compiled,stored,procedure,call,string,is,this,call,string,this,callable,statement,factory,new,callable,statement,creator,factory,get,call,string,this,call,meta,data,context,get,call,parameters,this,callable,statement,factory,set,native,jdbc,extractor,get,jdbc,template,get,native,jdbc,extractor,on,compile,internal
AbstractJdbcCall -> protected void compileInternal();1467730834;Delegate method to perform the actual compilation._<p>Subclasses can override this template method to perform their own compilation._Invoked after this base class's compilation is complete.;protected void compileInternal() {_		this.callMetaDataContext.initializeMetaData(getJdbcTemplate().getDataSource())___		_		for (Map.Entry<String, RowMapper<?>> entry : this.declaredRowMappers.entrySet()) {_			SqlParameter resultSetParameter =_					this.callMetaDataContext.createReturnResultSetParameter(entry.getKey(), entry.getValue())__			this.declaredParameters.add(resultSetParameter)__		}_		this.callMetaDataContext.processParameters(this.declaredParameters)___		this.callString = this.callMetaDataContext.createCallString()__		if (logger.isDebugEnabled()) {_			logger.debug("Compiled stored procedure. Call string is [" + this.callString + "]")__		}__		this.callableStatementFactory =_				new CallableStatementCreatorFactory(getCallString(), this.callMetaDataContext.getCallParameters())__		this.callableStatementFactory.setNativeJdbcExtractor(getJdbcTemplate().getNativeJdbcExtractor())___		onCompileInternal()__	};delegate,method,to,perform,the,actual,compilation,p,subclasses,can,override,this,template,method,to,perform,their,own,compilation,invoked,after,this,base,class,s,compilation,is,complete;protected,void,compile,internal,this,call,meta,data,context,initialize,meta,data,get,jdbc,template,get,data,source,for,map,entry,string,row,mapper,entry,this,declared,row,mappers,entry,set,sql,parameter,result,set,parameter,this,call,meta,data,context,create,return,result,set,parameter,entry,get,key,entry,get,value,this,declared,parameters,add,result,set,parameter,this,call,meta,data,context,process,parameters,this,declared,parameters,this,call,string,this,call,meta,data,context,create,call,string,if,logger,is,debug,enabled,logger,debug,compiled,stored,procedure,call,string,is,this,call,string,this,callable,statement,factory,new,callable,statement,creator,factory,get,call,string,this,call,meta,data,context,get,call,parameters,this,callable,statement,factory,set,native,jdbc,extractor,get,jdbc,template,get,native,jdbc,extractor,on,compile,internal
AbstractJdbcCall -> protected void compileInternal();1487178248;Delegate method to perform the actual compilation._<p>Subclasses can override this template method to perform their own compilation._Invoked after this base class's compilation is complete.;protected void compileInternal() {_		this.callMetaDataContext.initializeMetaData(getJdbcTemplate().getDataSource())___		_		for (Map.Entry<String, RowMapper<?>> entry : this.declaredRowMappers.entrySet()) {_			SqlParameter resultSetParameter =_					this.callMetaDataContext.createReturnResultSetParameter(entry.getKey(), entry.getValue())__			this.declaredParameters.add(resultSetParameter)__		}_		this.callMetaDataContext.processParameters(this.declaredParameters)___		this.callString = this.callMetaDataContext.createCallString()__		if (logger.isDebugEnabled()) {_			logger.debug("Compiled stored procedure. Call string is [" + this.callString + "]")__		}__		this.callableStatementFactory =_				new CallableStatementCreatorFactory(getCallString(), this.callMetaDataContext.getCallParameters())___		onCompileInternal()__	};delegate,method,to,perform,the,actual,compilation,p,subclasses,can,override,this,template,method,to,perform,their,own,compilation,invoked,after,this,base,class,s,compilation,is,complete;protected,void,compile,internal,this,call,meta,data,context,initialize,meta,data,get,jdbc,template,get,data,source,for,map,entry,string,row,mapper,entry,this,declared,row,mappers,entry,set,sql,parameter,result,set,parameter,this,call,meta,data,context,create,return,result,set,parameter,entry,get,key,entry,get,value,this,declared,parameters,add,result,set,parameter,this,call,meta,data,context,process,parameters,this,declared,parameters,this,call,string,this,call,meta,data,context,create,call,string,if,logger,is,debug,enabled,logger,debug,compiled,stored,procedure,call,string,is,this,call,string,this,callable,statement,factory,new,callable,statement,creator,factory,get,call,string,this,call,meta,data,context,get,call,parameters,on,compile,internal
AbstractJdbcCall -> protected void compileInternal();1496837955;Delegate method to perform the actual compilation._<p>Subclasses can override this template method to perform their own compilation._Invoked after this base class's compilation is complete.;protected void compileInternal() {_		DataSource dataSource = getJdbcTemplate().getDataSource()__		Assert.state(dataSource != null, "No DataSource set")__		this.callMetaDataContext.initializeMetaData(dataSource)___		_		for (Map.Entry<String, RowMapper<?>> entry : this.declaredRowMappers.entrySet()) {_			SqlParameter resultSetParameter =_					this.callMetaDataContext.createReturnResultSetParameter(entry.getKey(), entry.getValue())__			this.declaredParameters.add(resultSetParameter)__		}_		this.callMetaDataContext.processParameters(this.declaredParameters)___		this.callString = this.callMetaDataContext.createCallString()__		if (logger.isDebugEnabled()) {_			logger.debug("Compiled stored procedure. Call string is [" + this.callString + "]")__		}__		this.callableStatementFactory =_				new CallableStatementCreatorFactory(getCallString(), this.callMetaDataContext.getCallParameters())___		onCompileInternal()__	};delegate,method,to,perform,the,actual,compilation,p,subclasses,can,override,this,template,method,to,perform,their,own,compilation,invoked,after,this,base,class,s,compilation,is,complete;protected,void,compile,internal,data,source,data,source,get,jdbc,template,get,data,source,assert,state,data,source,null,no,data,source,set,this,call,meta,data,context,initialize,meta,data,data,source,for,map,entry,string,row,mapper,entry,this,declared,row,mappers,entry,set,sql,parameter,result,set,parameter,this,call,meta,data,context,create,return,result,set,parameter,entry,get,key,entry,get,value,this,declared,parameters,add,result,set,parameter,this,call,meta,data,context,process,parameters,this,declared,parameters,this,call,string,this,call,meta,data,context,create,call,string,if,logger,is,debug,enabled,logger,debug,compiled,stored,procedure,call,string,is,this,call,string,this,callable,statement,factory,new,callable,statement,creator,factory,get,call,string,this,call,meta,data,context,get,call,parameters,on,compile,internal
AbstractJdbcCall -> protected void compileInternal();1500448076;Delegate method to perform the actual compilation._<p>Subclasses can override this template method to perform their own compilation._Invoked after this base class's compilation is complete.;protected void compileInternal() {_		DataSource dataSource = getJdbcTemplate().getDataSource()__		Assert.state(dataSource != null, "No DataSource set")__		this.callMetaDataContext.initializeMetaData(dataSource)___		_		for (Map.Entry<String, RowMapper<?>> entry : this.declaredRowMappers.entrySet()) {_			SqlParameter resultSetParameter =_					this.callMetaDataContext.createReturnResultSetParameter(entry.getKey(), entry.getValue())__			this.declaredParameters.add(resultSetParameter)__		}_		this.callMetaDataContext.processParameters(this.declaredParameters)___		this.callString = this.callMetaDataContext.createCallString()__		if (logger.isDebugEnabled()) {_			logger.debug("Compiled stored procedure. Call string is [" + this.callString + "]")__		}__		this.callableStatementFactory =_				new CallableStatementCreatorFactory(getCallString(), this.callMetaDataContext.getCallParameters())___		onCompileInternal()__	};delegate,method,to,perform,the,actual,compilation,p,subclasses,can,override,this,template,method,to,perform,their,own,compilation,invoked,after,this,base,class,s,compilation,is,complete;protected,void,compile,internal,data,source,data,source,get,jdbc,template,get,data,source,assert,state,data,source,null,no,data,source,set,this,call,meta,data,context,initialize,meta,data,data,source,for,map,entry,string,row,mapper,entry,this,declared,row,mappers,entry,set,sql,parameter,result,set,parameter,this,call,meta,data,context,create,return,result,set,parameter,entry,get,key,entry,get,value,this,declared,parameters,add,result,set,parameter,this,call,meta,data,context,process,parameters,this,declared,parameters,this,call,string,this,call,meta,data,context,create,call,string,if,logger,is,debug,enabled,logger,debug,compiled,stored,procedure,call,string,is,this,call,string,this,callable,statement,factory,new,callable,statement,creator,factory,get,call,string,this,call,meta,data,context,get,call,parameters,on,compile,internal
AbstractJdbcCall -> protected void compileInternal();1500495740;Delegate method to perform the actual compilation._<p>Subclasses can override this template method to perform their own compilation._Invoked after this base class's compilation is complete.;protected void compileInternal() {_		DataSource dataSource = getJdbcTemplate().getDataSource()__		Assert.state(dataSource != null, "No DataSource set")__		this.callMetaDataContext.initializeMetaData(dataSource)___		_		for (Map.Entry<String, RowMapper<?>> entry : this.declaredRowMappers.entrySet()) {_			SqlParameter resultSetParameter =_					this.callMetaDataContext.createReturnResultSetParameter(entry.getKey(), entry.getValue())__			this.declaredParameters.add(resultSetParameter)__		}_		this.callMetaDataContext.processParameters(this.declaredParameters)___		this.callString = this.callMetaDataContext.createCallString()__		if (logger.isDebugEnabled()) {_			logger.debug("Compiled stored procedure. Call string is [" + this.callString + "]")__		}__		this.callableStatementFactory =_				new CallableStatementCreatorFactory(this.callString, this.callMetaDataContext.getCallParameters())___		onCompileInternal()__	};delegate,method,to,perform,the,actual,compilation,p,subclasses,can,override,this,template,method,to,perform,their,own,compilation,invoked,after,this,base,class,s,compilation,is,complete;protected,void,compile,internal,data,source,data,source,get,jdbc,template,get,data,source,assert,state,data,source,null,no,data,source,set,this,call,meta,data,context,initialize,meta,data,data,source,for,map,entry,string,row,mapper,entry,this,declared,row,mappers,entry,set,sql,parameter,result,set,parameter,this,call,meta,data,context,create,return,result,set,parameter,entry,get,key,entry,get,value,this,declared,parameters,add,result,set,parameter,this,call,meta,data,context,process,parameters,this,declared,parameters,this,call,string,this,call,meta,data,context,create,call,string,if,logger,is,debug,enabled,logger,debug,compiled,stored,procedure,call,string,is,this,call,string,this,callable,statement,factory,new,callable,statement,creator,factory,this,call,string,this,call,meta,data,context,get,call,parameters,on,compile,internal
AbstractJdbcCall -> protected void compileInternal();1520528267;Delegate method to perform the actual compilation._<p>Subclasses can override this template method to perform their own compilation._Invoked after this base class's compilation is complete.;protected void compileInternal() {_		DataSource dataSource = getJdbcTemplate().getDataSource()__		Assert.state(dataSource != null, "No DataSource set")__		this.callMetaDataContext.initializeMetaData(dataSource)___		_		for (Map.Entry<String, RowMapper<?>> entry : this.declaredRowMappers.entrySet()) {_			SqlParameter resultSetParameter =_					this.callMetaDataContext.createReturnResultSetParameter(entry.getKey(), entry.getValue())__			this.declaredParameters.add(resultSetParameter)__		}_		this.callMetaDataContext.processParameters(this.declaredParameters)___		this.callString = this.callMetaDataContext.createCallString()__		if (logger.isDebugEnabled()) {_			logger.debug("Compiled stored procedure. Call string is [" + this.callString + "]")__		}__		this.callableStatementFactory =_				new CallableStatementCreatorFactory(this.callString, this.callMetaDataContext.getCallParameters())___		onCompileInternal()__	};delegate,method,to,perform,the,actual,compilation,p,subclasses,can,override,this,template,method,to,perform,their,own,compilation,invoked,after,this,base,class,s,compilation,is,complete;protected,void,compile,internal,data,source,data,source,get,jdbc,template,get,data,source,assert,state,data,source,null,no,data,source,set,this,call,meta,data,context,initialize,meta,data,data,source,for,map,entry,string,row,mapper,entry,this,declared,row,mappers,entry,set,sql,parameter,result,set,parameter,this,call,meta,data,context,create,return,result,set,parameter,entry,get,key,entry,get,value,this,declared,parameters,add,result,set,parameter,this,call,meta,data,context,process,parameters,this,declared,parameters,this,call,string,this,call,meta,data,context,create,call,string,if,logger,is,debug,enabled,logger,debug,compiled,stored,procedure,call,string,is,this,call,string,this,callable,statement,factory,new,callable,statement,creator,factory,this,call,string,this,call,meta,data,context,get,call,parameters,on,compile,internal
AbstractJdbcCall -> protected void compileInternal();1521457504;Delegate method to perform the actual compilation._<p>Subclasses can override this template method to perform their own compilation._Invoked after this base class's compilation is complete.;protected void compileInternal() {_		DataSource dataSource = getJdbcTemplate().getDataSource()__		Assert.state(dataSource != null, "No DataSource set")__		this.callMetaDataContext.initializeMetaData(dataSource)___		_		for (Map.Entry<String, RowMapper<?>> entry : this.declaredRowMappers.entrySet()) {_			SqlParameter resultSetParameter =_					this.callMetaDataContext.createReturnResultSetParameter(entry.getKey(), entry.getValue())__			this.declaredParameters.add(resultSetParameter)__		}_		this.callMetaDataContext.processParameters(this.declaredParameters)___		this.callString = this.callMetaDataContext.createCallString()__		if (logger.isDebugEnabled()) {_			logger.debug("Compiled stored procedure. Call string is [" + this.callString + "]")__		}__		this.callableStatementFactory =_				new CallableStatementCreatorFactory(this.callString, this.callMetaDataContext.getCallParameters())___		onCompileInternal()__	};delegate,method,to,perform,the,actual,compilation,p,subclasses,can,override,this,template,method,to,perform,their,own,compilation,invoked,after,this,base,class,s,compilation,is,complete;protected,void,compile,internal,data,source,data,source,get,jdbc,template,get,data,source,assert,state,data,source,null,no,data,source,set,this,call,meta,data,context,initialize,meta,data,data,source,for,map,entry,string,row,mapper,entry,this,declared,row,mappers,entry,set,sql,parameter,result,set,parameter,this,call,meta,data,context,create,return,result,set,parameter,entry,get,key,entry,get,value,this,declared,parameters,add,result,set,parameter,this,call,meta,data,context,process,parameters,this,declared,parameters,this,call,string,this,call,meta,data,context,create,call,string,if,logger,is,debug,enabled,logger,debug,compiled,stored,procedure,call,string,is,this,call,string,this,callable,statement,factory,new,callable,statement,creator,factory,this,call,string,this,call,meta,data,context,get,call,parameters,on,compile,internal
AbstractJdbcCall -> protected void compileInternal();1522103912;Delegate method to perform the actual compilation._<p>Subclasses can override this template method to perform their own compilation._Invoked after this base class's compilation is complete.;protected void compileInternal() {_		DataSource dataSource = getJdbcTemplate().getDataSource()__		Assert.state(dataSource != null, "No DataSource set")__		this.callMetaDataContext.initializeMetaData(dataSource)___		_		this.declaredRowMappers.forEach((key, value) -> {_			this.declaredParameters.add(this.callMetaDataContext.createReturnResultSetParameter(key, value))__		})__		this.callMetaDataContext.processParameters(this.declaredParameters)___		this.callString = this.callMetaDataContext.createCallString()__		if (logger.isDebugEnabled()) {_			logger.debug("Compiled stored procedure. Call string is [" + this.callString + "]")__		}__		this.callableStatementFactory = new CallableStatementCreatorFactory(_				this.callString, this.callMetaDataContext.getCallParameters())___		onCompileInternal()__	};delegate,method,to,perform,the,actual,compilation,p,subclasses,can,override,this,template,method,to,perform,their,own,compilation,invoked,after,this,base,class,s,compilation,is,complete;protected,void,compile,internal,data,source,data,source,get,jdbc,template,get,data,source,assert,state,data,source,null,no,data,source,set,this,call,meta,data,context,initialize,meta,data,data,source,this,declared,row,mappers,for,each,key,value,this,declared,parameters,add,this,call,meta,data,context,create,return,result,set,parameter,key,value,this,call,meta,data,context,process,parameters,this,declared,parameters,this,call,string,this,call,meta,data,context,create,call,string,if,logger,is,debug,enabled,logger,debug,compiled,stored,procedure,call,string,is,this,call,string,this,callable,statement,factory,new,callable,statement,creator,factory,this,call,string,this,call,meta,data,context,get,call,parameters,on,compile,internal
AbstractJdbcCall -> protected void compileInternal();1530174524;Delegate method to perform the actual compilation._<p>Subclasses can override this template method to perform their own compilation._Invoked after this base class's compilation is complete.;protected void compileInternal() {_		DataSource dataSource = getJdbcTemplate().getDataSource()__		Assert.state(dataSource != null, "No DataSource set")__		this.callMetaDataContext.initializeMetaData(dataSource)___		_		this.declaredRowMappers.forEach((key, value) -> {_			this.declaredParameters.add(this.callMetaDataContext.createReturnResultSetParameter(key, value))__		})__		this.callMetaDataContext.processParameters(this.declaredParameters)___		this.callString = this.callMetaDataContext.createCallString()__		if (logger.isDebugEnabled()) {_			logger.debug("Compiled stored procedure. Call string is [" + this.callString + "]")__		}__		this.callableStatementFactory = new CallableStatementCreatorFactory(_				this.callString, this.callMetaDataContext.getCallParameters())___		onCompileInternal()__	};delegate,method,to,perform,the,actual,compilation,p,subclasses,can,override,this,template,method,to,perform,their,own,compilation,invoked,after,this,base,class,s,compilation,is,complete;protected,void,compile,internal,data,source,data,source,get,jdbc,template,get,data,source,assert,state,data,source,null,no,data,source,set,this,call,meta,data,context,initialize,meta,data,data,source,this,declared,row,mappers,for,each,key,value,this,declared,parameters,add,this,call,meta,data,context,create,return,result,set,parameter,key,value,this,call,meta,data,context,process,parameters,this,declared,parameters,this,call,string,this,call,meta,data,context,create,call,string,if,logger,is,debug,enabled,logger,debug,compiled,stored,procedure,call,string,is,this,call,string,this,callable,statement,factory,new,callable,statement,creator,factory,this,call,string,this,call,meta,data,context,get,call,parameters,on,compile,internal
AbstractJdbcCall -> @Nullable 	protected String getScalarOutParameterName();1496837955;Get the name of a single out parameter or return value._Used for functions or procedures with one out parameter.;@Nullable_	protected String getScalarOutParameterName() {_		return this.callMetaDataContext.getScalarOutParameterName()__	};get,the,name,of,a,single,out,parameter,or,return,value,used,for,functions,or,procedures,with,one,out,parameter;nullable,protected,string,get,scalar,out,parameter,name,return,this,call,meta,data,context,get,scalar,out,parameter,name
AbstractJdbcCall -> @Nullable 	protected String getScalarOutParameterName();1500448076;Get the name of a single out parameter or return value._Used for functions or procedures with one out parameter.;@Nullable_	protected String getScalarOutParameterName() {_		return this.callMetaDataContext.getScalarOutParameterName()__	};get,the,name,of,a,single,out,parameter,or,return,value,used,for,functions,or,procedures,with,one,out,parameter;nullable,protected,string,get,scalar,out,parameter,name,return,this,call,meta,data,context,get,scalar,out,parameter,name
AbstractJdbcCall -> @Nullable 	protected String getScalarOutParameterName();1500495740;Get the name of a single out parameter or return value._Used for functions or procedures with one out parameter.;@Nullable_	protected String getScalarOutParameterName() {_		return this.callMetaDataContext.getScalarOutParameterName()__	};get,the,name,of,a,single,out,parameter,or,return,value,used,for,functions,or,procedures,with,one,out,parameter;nullable,protected,string,get,scalar,out,parameter,name,return,this,call,meta,data,context,get,scalar,out,parameter,name
AbstractJdbcCall -> @Nullable 	protected String getScalarOutParameterName();1520528267;Get the name of a single out parameter or return value._Used for functions or procedures with one out parameter.;@Nullable_	protected String getScalarOutParameterName() {_		return this.callMetaDataContext.getScalarOutParameterName()__	};get,the,name,of,a,single,out,parameter,or,return,value,used,for,functions,or,procedures,with,one,out,parameter;nullable,protected,string,get,scalar,out,parameter,name,return,this,call,meta,data,context,get,scalar,out,parameter,name
AbstractJdbcCall -> @Nullable 	protected String getScalarOutParameterName();1521457504;Get the name of a single out parameter or return value._Used for functions or procedures with one out parameter.;@Nullable_	protected String getScalarOutParameterName() {_		return this.callMetaDataContext.getScalarOutParameterName()__	};get,the,name,of,a,single,out,parameter,or,return,value,used,for,functions,or,procedures,with,one,out,parameter;nullable,protected,string,get,scalar,out,parameter,name,return,this,call,meta,data,context,get,scalar,out,parameter,name
AbstractJdbcCall -> @Nullable 	protected String getScalarOutParameterName();1522103912;Get the name of a single out parameter or return value._Used for functions or procedures with one out parameter.;@Nullable_	protected String getScalarOutParameterName() {_		return this.callMetaDataContext.getScalarOutParameterName()__	};get,the,name,of,a,single,out,parameter,or,return,value,used,for,functions,or,procedures,with,one,out,parameter;nullable,protected,string,get,scalar,out,parameter,name,return,this,call,meta,data,context,get,scalar,out,parameter,name
AbstractJdbcCall -> @Nullable 	protected String getScalarOutParameterName();1530174524;Get the name of a single out parameter or return value._Used for functions or procedures with one out parameter.;@Nullable_	protected String getScalarOutParameterName() {_		return this.callMetaDataContext.getScalarOutParameterName()__	};get,the,name,of,a,single,out,parameter,or,return,value,used,for,functions,or,procedures,with,one,out,parameter;nullable,protected,string,get,scalar,out,parameter,name,return,this,call,meta,data,context,get,scalar,out,parameter,name
AbstractJdbcCall -> @Nullable 	public String getCallString();1500495740;Get the call string that should be used based on parameters and meta data.;@Nullable_	public String getCallString() {_		return this.callString__	};get,the,call,string,that,should,be,used,based,on,parameters,and,meta,data;nullable,public,string,get,call,string,return,this,call,string
AbstractJdbcCall -> @Nullable 	public String getCallString();1520528267;Get the call string that should be used based on parameters and meta data.;@Nullable_	public String getCallString() {_		return this.callString__	};get,the,call,string,that,should,be,used,based,on,parameters,and,meta,data;nullable,public,string,get,call,string,return,this,call,string
AbstractJdbcCall -> @Nullable 	public String getCallString();1521457504;Get the call string that should be used based on parameters and meta-data.;@Nullable_	public String getCallString() {_		return this.callString__	};get,the,call,string,that,should,be,used,based,on,parameters,and,meta,data;nullable,public,string,get,call,string,return,this,call,string
AbstractJdbcCall -> @Nullable 	public String getCallString();1522103912;Get the call string that should be used based on parameters and meta-data.;@Nullable_	public String getCallString() {_		return this.callString__	};get,the,call,string,that,should,be,used,based,on,parameters,and,meta,data;nullable,public,string,get,call,string,return,this,call,string
AbstractJdbcCall -> @Nullable 	public String getCallString();1530174524;Get the call string that should be used based on parameters and meta-data.;@Nullable_	public String getCallString() {_		return this.callString__	};get,the,call,string,that,should,be,used,based,on,parameters,and,meta,data;nullable,public,string,get,call,string,return,this,call,string
AbstractJdbcCall -> protected AbstractJdbcCall(DataSource dataSource);1328020251;Constructor to be used when initializing using a {@link DataSource}._@param dataSource the DataSource to be used;protected AbstractJdbcCall(DataSource dataSource) {_		this.jdbcTemplate = new JdbcTemplate(dataSource)__	};constructor,to,be,used,when,initializing,using,a,link,data,source,param,data,source,the,data,source,to,be,used;protected,abstract,jdbc,call,data,source,data,source,this,jdbc,template,new,jdbc,template,data,source
AbstractJdbcCall -> protected AbstractJdbcCall(DataSource dataSource);1356735495;Constructor to be used when initializing using a {@link DataSource}._@param dataSource the DataSource to be used;protected AbstractJdbcCall(DataSource dataSource) {_		this.jdbcTemplate = new JdbcTemplate(dataSource)__	};constructor,to,be,used,when,initializing,using,a,link,data,source,param,data,source,the,data,source,to,be,used;protected,abstract,jdbc,call,data,source,data,source,this,jdbc,template,new,jdbc,template,data,source
AbstractJdbcCall -> protected AbstractJdbcCall(DataSource dataSource);1362408075;Constructor to be used when initializing using a {@link DataSource}._@param dataSource the DataSource to be used;protected AbstractJdbcCall(DataSource dataSource) {_		this.jdbcTemplate = new JdbcTemplate(dataSource)__	};constructor,to,be,used,when,initializing,using,a,link,data,source,param,data,source,the,data,source,to,be,used;protected,abstract,jdbc,call,data,source,data,source,this,jdbc,template,new,jdbc,template,data,source
AbstractJdbcCall -> protected AbstractJdbcCall(DataSource dataSource);1367508310;Constructor to be used when initializing using a {@link DataSource}._@param dataSource the DataSource to be used;protected AbstractJdbcCall(DataSource dataSource) {_		this.jdbcTemplate = new JdbcTemplate(dataSource)__	};constructor,to,be,used,when,initializing,using,a,link,data,source,param,data,source,the,data,source,to,be,used;protected,abstract,jdbc,call,data,source,data,source,this,jdbc,template,new,jdbc,template,data,source
AbstractJdbcCall -> protected AbstractJdbcCall(DataSource dataSource);1385412762;Constructor to be used when initializing using a {@link DataSource}._@param dataSource the DataSource to be used;protected AbstractJdbcCall(DataSource dataSource) {_		this.jdbcTemplate = new JdbcTemplate(dataSource)__	};constructor,to,be,used,when,initializing,using,a,link,data,source,param,data,source,the,data,source,to,be,used;protected,abstract,jdbc,call,data,source,data,source,this,jdbc,template,new,jdbc,template,data,source
AbstractJdbcCall -> protected AbstractJdbcCall(DataSource dataSource);1407789123;Constructor to be used when initializing using a {@link DataSource}._@param dataSource the DataSource to be used;protected AbstractJdbcCall(DataSource dataSource) {_		this.jdbcTemplate = new JdbcTemplate(dataSource)__	};constructor,to,be,used,when,initializing,using,a,link,data,source,param,data,source,the,data,source,to,be,used;protected,abstract,jdbc,call,data,source,data,source,this,jdbc,template,new,jdbc,template,data,source
AbstractJdbcCall -> protected AbstractJdbcCall(DataSource dataSource);1416833949;Constructor to be used when initializing using a {@link DataSource}._@param dataSource the DataSource to be used;protected AbstractJdbcCall(DataSource dataSource) {_		this.jdbcTemplate = new JdbcTemplate(dataSource)__	};constructor,to,be,used,when,initializing,using,a,link,data,source,param,data,source,the,data,source,to,be,used;protected,abstract,jdbc,call,data,source,data,source,this,jdbc,template,new,jdbc,template,data,source
AbstractJdbcCall -> protected AbstractJdbcCall(DataSource dataSource);1431676443;Constructor to be used when initializing using a {@link DataSource}._@param dataSource the DataSource to be used;protected AbstractJdbcCall(DataSource dataSource) {_		this.jdbcTemplate = new JdbcTemplate(dataSource)__	};constructor,to,be,used,when,initializing,using,a,link,data,source,param,data,source,the,data,source,to,be,used;protected,abstract,jdbc,call,data,source,data,source,this,jdbc,template,new,jdbc,template,data,source
AbstractJdbcCall -> protected AbstractJdbcCall(DataSource dataSource);1446038912;Constructor to be used when initializing using a {@link DataSource}._@param dataSource the DataSource to be used;protected AbstractJdbcCall(DataSource dataSource) {_		this.jdbcTemplate = new JdbcTemplate(dataSource)__	};constructor,to,be,used,when,initializing,using,a,link,data,source,param,data,source,the,data,source,to,be,used;protected,abstract,jdbc,call,data,source,data,source,this,jdbc,template,new,jdbc,template,data,source
AbstractJdbcCall -> protected AbstractJdbcCall(DataSource dataSource);1446470853;Constructor to be used when initializing using a {@link DataSource}._@param dataSource the DataSource to be used;protected AbstractJdbcCall(DataSource dataSource) {_		this.jdbcTemplate = new JdbcTemplate(dataSource)__	};constructor,to,be,used,when,initializing,using,a,link,data,source,param,data,source,the,data,source,to,be,used;protected,abstract,jdbc,call,data,source,data,source,this,jdbc,template,new,jdbc,template,data,source
AbstractJdbcCall -> protected AbstractJdbcCall(DataSource dataSource);1467730834;Constructor to be used when initializing using a {@link DataSource}._@param dataSource the DataSource to be used;protected AbstractJdbcCall(DataSource dataSource) {_		this.jdbcTemplate = new JdbcTemplate(dataSource)__	};constructor,to,be,used,when,initializing,using,a,link,data,source,param,data,source,the,data,source,to,be,used;protected,abstract,jdbc,call,data,source,data,source,this,jdbc,template,new,jdbc,template,data,source
AbstractJdbcCall -> protected AbstractJdbcCall(DataSource dataSource);1487178248;Constructor to be used when initializing using a {@link DataSource}._@param dataSource the DataSource to be used;protected AbstractJdbcCall(DataSource dataSource) {_		this.jdbcTemplate = new JdbcTemplate(dataSource)__	};constructor,to,be,used,when,initializing,using,a,link,data,source,param,data,source,the,data,source,to,be,used;protected,abstract,jdbc,call,data,source,data,source,this,jdbc,template,new,jdbc,template,data,source
AbstractJdbcCall -> protected AbstractJdbcCall(DataSource dataSource);1496837955;Constructor to be used when initializing using a {@link DataSource}._@param dataSource the DataSource to be used;protected AbstractJdbcCall(DataSource dataSource) {_		this.jdbcTemplate = new JdbcTemplate(dataSource)__	};constructor,to,be,used,when,initializing,using,a,link,data,source,param,data,source,the,data,source,to,be,used;protected,abstract,jdbc,call,data,source,data,source,this,jdbc,template,new,jdbc,template,data,source
AbstractJdbcCall -> protected AbstractJdbcCall(DataSource dataSource);1500448076;Constructor to be used when initializing using a {@link DataSource}._@param dataSource the DataSource to be used;protected AbstractJdbcCall(DataSource dataSource) {_		this.jdbcTemplate = new JdbcTemplate(dataSource)__	};constructor,to,be,used,when,initializing,using,a,link,data,source,param,data,source,the,data,source,to,be,used;protected,abstract,jdbc,call,data,source,data,source,this,jdbc,template,new,jdbc,template,data,source
AbstractJdbcCall -> protected AbstractJdbcCall(DataSource dataSource);1500495740;Constructor to be used when initializing using a {@link DataSource}._@param dataSource the DataSource to be used;protected AbstractJdbcCall(DataSource dataSource) {_		this.jdbcTemplate = new JdbcTemplate(dataSource)__	};constructor,to,be,used,when,initializing,using,a,link,data,source,param,data,source,the,data,source,to,be,used;protected,abstract,jdbc,call,data,source,data,source,this,jdbc,template,new,jdbc,template,data,source
AbstractJdbcCall -> protected AbstractJdbcCall(DataSource dataSource);1520528267;Constructor to be used when initializing using a {@link DataSource}._@param dataSource the DataSource to be used;protected AbstractJdbcCall(DataSource dataSource) {_		this.jdbcTemplate = new JdbcTemplate(dataSource)__	};constructor,to,be,used,when,initializing,using,a,link,data,source,param,data,source,the,data,source,to,be,used;protected,abstract,jdbc,call,data,source,data,source,this,jdbc,template,new,jdbc,template,data,source
AbstractJdbcCall -> protected AbstractJdbcCall(DataSource dataSource);1521457504;Constructor to be used when initializing using a {@link DataSource}._@param dataSource the DataSource to be used;protected AbstractJdbcCall(DataSource dataSource) {_		this.jdbcTemplate = new JdbcTemplate(dataSource)__	};constructor,to,be,used,when,initializing,using,a,link,data,source,param,data,source,the,data,source,to,be,used;protected,abstract,jdbc,call,data,source,data,source,this,jdbc,template,new,jdbc,template,data,source
AbstractJdbcCall -> protected AbstractJdbcCall(DataSource dataSource);1522103912;Constructor to be used when initializing using a {@link DataSource}._@param dataSource the DataSource to be used;protected AbstractJdbcCall(DataSource dataSource) {_		this.jdbcTemplate = new JdbcTemplate(dataSource)__	};constructor,to,be,used,when,initializing,using,a,link,data,source,param,data,source,the,data,source,to,be,used;protected,abstract,jdbc,call,data,source,data,source,this,jdbc,template,new,jdbc,template,data,source
AbstractJdbcCall -> protected AbstractJdbcCall(DataSource dataSource);1530174524;Constructor to be used when initializing using a {@link DataSource}._@param dataSource the DataSource to be used;protected AbstractJdbcCall(DataSource dataSource) {_		this.jdbcTemplate = new JdbcTemplate(dataSource)__	};constructor,to,be,used,when,initializing,using,a,link,data,source,param,data,source,the,data,source,to,be,used;protected,abstract,jdbc,call,data,source,data,source,this,jdbc,template,new,jdbc,template,data,source
AbstractJdbcCall -> public void setAccessCallParameterMetaData(boolean accessCallParameterMetaData);1328020251;Specify whether the parameter metadata for the call should be used. The default is true.;public void setAccessCallParameterMetaData(boolean accessCallParameterMetaData) {_		this.callMetaDataContext.setAccessCallParameterMetaData(accessCallParameterMetaData)__	};specify,whether,the,parameter,metadata,for,the,call,should,be,used,the,default,is,true;public,void,set,access,call,parameter,meta,data,boolean,access,call,parameter,meta,data,this,call,meta,data,context,set,access,call,parameter,meta,data,access,call,parameter,meta,data
AbstractJdbcCall -> public void setAccessCallParameterMetaData(boolean accessCallParameterMetaData);1356735495;Specify whether the parameter metadata for the call should be used. The default is true.;public void setAccessCallParameterMetaData(boolean accessCallParameterMetaData) {_		this.callMetaDataContext.setAccessCallParameterMetaData(accessCallParameterMetaData)__	};specify,whether,the,parameter,metadata,for,the,call,should,be,used,the,default,is,true;public,void,set,access,call,parameter,meta,data,boolean,access,call,parameter,meta,data,this,call,meta,data,context,set,access,call,parameter,meta,data,access,call,parameter,meta,data
AbstractJdbcCall -> public void setAccessCallParameterMetaData(boolean accessCallParameterMetaData);1362408075;Specify whether the parameter metadata for the call should be used. The default is true.;public void setAccessCallParameterMetaData(boolean accessCallParameterMetaData) {_		this.callMetaDataContext.setAccessCallParameterMetaData(accessCallParameterMetaData)__	};specify,whether,the,parameter,metadata,for,the,call,should,be,used,the,default,is,true;public,void,set,access,call,parameter,meta,data,boolean,access,call,parameter,meta,data,this,call,meta,data,context,set,access,call,parameter,meta,data,access,call,parameter,meta,data
AbstractJdbcCall -> public void setAccessCallParameterMetaData(boolean accessCallParameterMetaData);1367508310;Specify whether the parameter metadata for the call should be used. The default is true.;public void setAccessCallParameterMetaData(boolean accessCallParameterMetaData) {_		this.callMetaDataContext.setAccessCallParameterMetaData(accessCallParameterMetaData)__	};specify,whether,the,parameter,metadata,for,the,call,should,be,used,the,default,is,true;public,void,set,access,call,parameter,meta,data,boolean,access,call,parameter,meta,data,this,call,meta,data,context,set,access,call,parameter,meta,data,access,call,parameter,meta,data
AbstractJdbcCall -> public void setAccessCallParameterMetaData(boolean accessCallParameterMetaData);1385412762;Specify whether the parameter metadata for the call should be used. The default is true.;public void setAccessCallParameterMetaData(boolean accessCallParameterMetaData) {_		this.callMetaDataContext.setAccessCallParameterMetaData(accessCallParameterMetaData)__	};specify,whether,the,parameter,metadata,for,the,call,should,be,used,the,default,is,true;public,void,set,access,call,parameter,meta,data,boolean,access,call,parameter,meta,data,this,call,meta,data,context,set,access,call,parameter,meta,data,access,call,parameter,meta,data
AbstractJdbcCall -> public void setAccessCallParameterMetaData(boolean accessCallParameterMetaData);1407789123;Specify whether the parameter metadata for the call should be used. The default is true.;public void setAccessCallParameterMetaData(boolean accessCallParameterMetaData) {_		this.callMetaDataContext.setAccessCallParameterMetaData(accessCallParameterMetaData)__	};specify,whether,the,parameter,metadata,for,the,call,should,be,used,the,default,is,true;public,void,set,access,call,parameter,meta,data,boolean,access,call,parameter,meta,data,this,call,meta,data,context,set,access,call,parameter,meta,data,access,call,parameter,meta,data
AbstractJdbcCall -> public void setAccessCallParameterMetaData(boolean accessCallParameterMetaData);1416833949;Specify whether the parameter metadata for the call should be used._The default is {@code true}.;public void setAccessCallParameterMetaData(boolean accessCallParameterMetaData) {_		this.callMetaDataContext.setAccessCallParameterMetaData(accessCallParameterMetaData)__	};specify,whether,the,parameter,metadata,for,the,call,should,be,used,the,default,is,code,true;public,void,set,access,call,parameter,meta,data,boolean,access,call,parameter,meta,data,this,call,meta,data,context,set,access,call,parameter,meta,data,access,call,parameter,meta,data
AbstractJdbcCall -> public void setAccessCallParameterMetaData(boolean accessCallParameterMetaData);1431676443;Specify whether the parameter metadata for the call should be used._The default is {@code true}.;public void setAccessCallParameterMetaData(boolean accessCallParameterMetaData) {_		this.callMetaDataContext.setAccessCallParameterMetaData(accessCallParameterMetaData)__	};specify,whether,the,parameter,metadata,for,the,call,should,be,used,the,default,is,code,true;public,void,set,access,call,parameter,meta,data,boolean,access,call,parameter,meta,data,this,call,meta,data,context,set,access,call,parameter,meta,data,access,call,parameter,meta,data
AbstractJdbcCall -> public void setAccessCallParameterMetaData(boolean accessCallParameterMetaData);1446038912;Specify whether the parameter metadata for the call should be used._The default is {@code true}.;public void setAccessCallParameterMetaData(boolean accessCallParameterMetaData) {_		this.callMetaDataContext.setAccessCallParameterMetaData(accessCallParameterMetaData)__	};specify,whether,the,parameter,metadata,for,the,call,should,be,used,the,default,is,code,true;public,void,set,access,call,parameter,meta,data,boolean,access,call,parameter,meta,data,this,call,meta,data,context,set,access,call,parameter,meta,data,access,call,parameter,meta,data
AbstractJdbcCall -> public void setAccessCallParameterMetaData(boolean accessCallParameterMetaData);1446470853;Specify whether the parameter metadata for the call should be used._The default is {@code true}.;public void setAccessCallParameterMetaData(boolean accessCallParameterMetaData) {_		this.callMetaDataContext.setAccessCallParameterMetaData(accessCallParameterMetaData)__	};specify,whether,the,parameter,metadata,for,the,call,should,be,used,the,default,is,code,true;public,void,set,access,call,parameter,meta,data,boolean,access,call,parameter,meta,data,this,call,meta,data,context,set,access,call,parameter,meta,data,access,call,parameter,meta,data
AbstractJdbcCall -> public void setAccessCallParameterMetaData(boolean accessCallParameterMetaData);1467730834;Specify whether the parameter metadata for the call should be used._The default is {@code true}.;public void setAccessCallParameterMetaData(boolean accessCallParameterMetaData) {_		this.callMetaDataContext.setAccessCallParameterMetaData(accessCallParameterMetaData)__	};specify,whether,the,parameter,metadata,for,the,call,should,be,used,the,default,is,code,true;public,void,set,access,call,parameter,meta,data,boolean,access,call,parameter,meta,data,this,call,meta,data,context,set,access,call,parameter,meta,data,access,call,parameter,meta,data
AbstractJdbcCall -> public void setAccessCallParameterMetaData(boolean accessCallParameterMetaData);1487178248;Specify whether the parameter metadata for the call should be used._The default is {@code true}.;public void setAccessCallParameterMetaData(boolean accessCallParameterMetaData) {_		this.callMetaDataContext.setAccessCallParameterMetaData(accessCallParameterMetaData)__	};specify,whether,the,parameter,metadata,for,the,call,should,be,used,the,default,is,code,true;public,void,set,access,call,parameter,meta,data,boolean,access,call,parameter,meta,data,this,call,meta,data,context,set,access,call,parameter,meta,data,access,call,parameter,meta,data
AbstractJdbcCall -> public void setAccessCallParameterMetaData(boolean accessCallParameterMetaData);1496837955;Specify whether the parameter metadata for the call should be used._The default is {@code true}.;public void setAccessCallParameterMetaData(boolean accessCallParameterMetaData) {_		this.callMetaDataContext.setAccessCallParameterMetaData(accessCallParameterMetaData)__	};specify,whether,the,parameter,metadata,for,the,call,should,be,used,the,default,is,code,true;public,void,set,access,call,parameter,meta,data,boolean,access,call,parameter,meta,data,this,call,meta,data,context,set,access,call,parameter,meta,data,access,call,parameter,meta,data
AbstractJdbcCall -> public void setAccessCallParameterMetaData(boolean accessCallParameterMetaData);1500448076;Specify whether the parameter metadata for the call should be used._The default is {@code true}.;public void setAccessCallParameterMetaData(boolean accessCallParameterMetaData) {_		this.callMetaDataContext.setAccessCallParameterMetaData(accessCallParameterMetaData)__	};specify,whether,the,parameter,metadata,for,the,call,should,be,used,the,default,is,code,true;public,void,set,access,call,parameter,meta,data,boolean,access,call,parameter,meta,data,this,call,meta,data,context,set,access,call,parameter,meta,data,access,call,parameter,meta,data
AbstractJdbcCall -> public void setAccessCallParameterMetaData(boolean accessCallParameterMetaData);1500495740;Specify whether the parameter metadata for the call should be used._The default is {@code true}.;public void setAccessCallParameterMetaData(boolean accessCallParameterMetaData) {_		this.callMetaDataContext.setAccessCallParameterMetaData(accessCallParameterMetaData)__	};specify,whether,the,parameter,metadata,for,the,call,should,be,used,the,default,is,code,true;public,void,set,access,call,parameter,meta,data,boolean,access,call,parameter,meta,data,this,call,meta,data,context,set,access,call,parameter,meta,data,access,call,parameter,meta,data
AbstractJdbcCall -> public void setAccessCallParameterMetaData(boolean accessCallParameterMetaData);1520528267;Specify whether the parameter metadata for the call should be used._The default is {@code true}.;public void setAccessCallParameterMetaData(boolean accessCallParameterMetaData) {_		this.callMetaDataContext.setAccessCallParameterMetaData(accessCallParameterMetaData)__	};specify,whether,the,parameter,metadata,for,the,call,should,be,used,the,default,is,code,true;public,void,set,access,call,parameter,meta,data,boolean,access,call,parameter,meta,data,this,call,meta,data,context,set,access,call,parameter,meta,data,access,call,parameter,meta,data
AbstractJdbcCall -> public void setAccessCallParameterMetaData(boolean accessCallParameterMetaData);1521457504;Specify whether the parameter meta-data for the call should be used._The default is {@code true}.;public void setAccessCallParameterMetaData(boolean accessCallParameterMetaData) {_		this.callMetaDataContext.setAccessCallParameterMetaData(accessCallParameterMetaData)__	};specify,whether,the,parameter,meta,data,for,the,call,should,be,used,the,default,is,code,true;public,void,set,access,call,parameter,meta,data,boolean,access,call,parameter,meta,data,this,call,meta,data,context,set,access,call,parameter,meta,data,access,call,parameter,meta,data
AbstractJdbcCall -> public void setAccessCallParameterMetaData(boolean accessCallParameterMetaData);1522103912;Specify whether the parameter meta-data for the call should be used._The default is {@code true}.;public void setAccessCallParameterMetaData(boolean accessCallParameterMetaData) {_		this.callMetaDataContext.setAccessCallParameterMetaData(accessCallParameterMetaData)__	};specify,whether,the,parameter,meta,data,for,the,call,should,be,used,the,default,is,code,true;public,void,set,access,call,parameter,meta,data,boolean,access,call,parameter,meta,data,this,call,meta,data,context,set,access,call,parameter,meta,data,access,call,parameter,meta,data
AbstractJdbcCall -> public void setAccessCallParameterMetaData(boolean accessCallParameterMetaData);1530174524;Specify whether the parameter meta-data for the call should be used._The default is {@code true}.;public void setAccessCallParameterMetaData(boolean accessCallParameterMetaData) {_		this.callMetaDataContext.setAccessCallParameterMetaData(accessCallParameterMetaData)__	};specify,whether,the,parameter,meta,data,for,the,call,should,be,used,the,default,is,code,true;public,void,set,access,call,parameter,meta,data,boolean,access,call,parameter,meta,data,this,call,meta,data,context,set,access,call,parameter,meta,data,access,call,parameter,meta,data
AbstractJdbcCall -> public String getProcedureName();1328020251;Get the name of the stored procedure.;public String getProcedureName() {_		return this.callMetaDataContext.getProcedureName()__	};get,the,name,of,the,stored,procedure;public,string,get,procedure,name,return,this,call,meta,data,context,get,procedure,name
AbstractJdbcCall -> public String getProcedureName();1356735495;Get the name of the stored procedure.;public String getProcedureName() {_		return this.callMetaDataContext.getProcedureName()__	};get,the,name,of,the,stored,procedure;public,string,get,procedure,name,return,this,call,meta,data,context,get,procedure,name
AbstractJdbcCall -> public String getProcedureName();1362408075;Get the name of the stored procedure.;public String getProcedureName() {_		return this.callMetaDataContext.getProcedureName()__	};get,the,name,of,the,stored,procedure;public,string,get,procedure,name,return,this,call,meta,data,context,get,procedure,name
AbstractJdbcCall -> public String getProcedureName();1367508310;Get the name of the stored procedure.;public String getProcedureName() {_		return this.callMetaDataContext.getProcedureName()__	};get,the,name,of,the,stored,procedure;public,string,get,procedure,name,return,this,call,meta,data,context,get,procedure,name
AbstractJdbcCall -> public String getProcedureName();1385412762;Get the name of the stored procedure.;public String getProcedureName() {_		return this.callMetaDataContext.getProcedureName()__	};get,the,name,of,the,stored,procedure;public,string,get,procedure,name,return,this,call,meta,data,context,get,procedure,name
AbstractJdbcCall -> public String getProcedureName();1407789123;Get the name of the stored procedure.;public String getProcedureName() {_		return this.callMetaDataContext.getProcedureName()__	};get,the,name,of,the,stored,procedure;public,string,get,procedure,name,return,this,call,meta,data,context,get,procedure,name
AbstractJdbcCall -> public String getProcedureName();1416833949;Get the name of the stored procedure.;public String getProcedureName() {_		return this.callMetaDataContext.getProcedureName()__	};get,the,name,of,the,stored,procedure;public,string,get,procedure,name,return,this,call,meta,data,context,get,procedure,name
AbstractJdbcCall -> public String getProcedureName();1431676443;Get the name of the stored procedure.;public String getProcedureName() {_		return this.callMetaDataContext.getProcedureName()__	};get,the,name,of,the,stored,procedure;public,string,get,procedure,name,return,this,call,meta,data,context,get,procedure,name
AbstractJdbcCall -> public String getProcedureName();1446038912;Get the name of the stored procedure.;public String getProcedureName() {_		return this.callMetaDataContext.getProcedureName()__	};get,the,name,of,the,stored,procedure;public,string,get,procedure,name,return,this,call,meta,data,context,get,procedure,name
AbstractJdbcCall -> public String getProcedureName();1446470853;Get the name of the stored procedure.;public String getProcedureName() {_		return this.callMetaDataContext.getProcedureName()__	};get,the,name,of,the,stored,procedure;public,string,get,procedure,name,return,this,call,meta,data,context,get,procedure,name
AbstractJdbcCall -> public String getProcedureName();1467730834;Get the name of the stored procedure.;public String getProcedureName() {_		return this.callMetaDataContext.getProcedureName()__	};get,the,name,of,the,stored,procedure;public,string,get,procedure,name,return,this,call,meta,data,context,get,procedure,name
AbstractJdbcCall -> public String getProcedureName();1487178248;Get the name of the stored procedure.;public String getProcedureName() {_		return this.callMetaDataContext.getProcedureName()__	};get,the,name,of,the,stored,procedure;public,string,get,procedure,name,return,this,call,meta,data,context,get,procedure,name
AbstractJdbcCall -> public synchronized final void compile() throws InvalidDataAccessApiUsageException;1328020251;Compile this JdbcCall using provided parameters and meta data plus other settings.  This_finalizes the configuration for this object and subsequent attempts to compile are ignored._This will be implicitly called the first time an un-compiled call is executed._@throws org.springframework.dao.InvalidDataAccessApiUsageException if the object hasn't_been correctly initialized, for example if no DataSource has been provided;public synchronized final void compile() throws InvalidDataAccessApiUsageException {_		if (!isCompiled()) {_			if (getProcedureName() == null) {_				throw new InvalidDataAccessApiUsageException("Procedure or Function name is required")__			}_			try {_				this.jdbcTemplate.afterPropertiesSet()__			}_			catch (IllegalArgumentException ex) {_				throw new InvalidDataAccessApiUsageException(ex.getMessage())__			}_			compileInternal()__			this.compiled = true__			if (logger.isDebugEnabled()) {_				logger.debug("SqlCall for " + (isFunction() ? "function" : "procedure") + " [" + getProcedureName() + "] compiled")__			}_		}_	};compile,this,jdbc,call,using,provided,parameters,and,meta,data,plus,other,settings,this,finalizes,the,configuration,for,this,object,and,subsequent,attempts,to,compile,are,ignored,this,will,be,implicitly,called,the,first,time,an,un,compiled,call,is,executed,throws,org,springframework,dao,invalid,data,access,api,usage,exception,if,the,object,hasn,t,been,correctly,initialized,for,example,if,no,data,source,has,been,provided;public,synchronized,final,void,compile,throws,invalid,data,access,api,usage,exception,if,is,compiled,if,get,procedure,name,null,throw,new,invalid,data,access,api,usage,exception,procedure,or,function,name,is,required,try,this,jdbc,template,after,properties,set,catch,illegal,argument,exception,ex,throw,new,invalid,data,access,api,usage,exception,ex,get,message,compile,internal,this,compiled,true,if,logger,is,debug,enabled,logger,debug,sql,call,for,is,function,function,procedure,get,procedure,name,compiled
AbstractJdbcCall -> public synchronized final void compile() throws InvalidDataAccessApiUsageException;1356735495;Compile this JdbcCall using provided parameters and meta data plus other settings.  This_finalizes the configuration for this object and subsequent attempts to compile are ignored._This will be implicitly called the first time an un-compiled call is executed._@throws org.springframework.dao.InvalidDataAccessApiUsageException if the object hasn't_been correctly initialized, for example if no DataSource has been provided;public synchronized final void compile() throws InvalidDataAccessApiUsageException {_		if (!isCompiled()) {_			if (getProcedureName() == null) {_				throw new InvalidDataAccessApiUsageException("Procedure or Function name is required")__			}_			try {_				this.jdbcTemplate.afterPropertiesSet()__			}_			catch (IllegalArgumentException ex) {_				throw new InvalidDataAccessApiUsageException(ex.getMessage())__			}_			compileInternal()__			this.compiled = true__			if (logger.isDebugEnabled()) {_				logger.debug("SqlCall for " + (isFunction() ? "function" : "procedure") + " [" + getProcedureName() + "] compiled")__			}_		}_	};compile,this,jdbc,call,using,provided,parameters,and,meta,data,plus,other,settings,this,finalizes,the,configuration,for,this,object,and,subsequent,attempts,to,compile,are,ignored,this,will,be,implicitly,called,the,first,time,an,un,compiled,call,is,executed,throws,org,springframework,dao,invalid,data,access,api,usage,exception,if,the,object,hasn,t,been,correctly,initialized,for,example,if,no,data,source,has,been,provided;public,synchronized,final,void,compile,throws,invalid,data,access,api,usage,exception,if,is,compiled,if,get,procedure,name,null,throw,new,invalid,data,access,api,usage,exception,procedure,or,function,name,is,required,try,this,jdbc,template,after,properties,set,catch,illegal,argument,exception,ex,throw,new,invalid,data,access,api,usage,exception,ex,get,message,compile,internal,this,compiled,true,if,logger,is,debug,enabled,logger,debug,sql,call,for,is,function,function,procedure,get,procedure,name,compiled
AbstractJdbcCall -> public synchronized final void compile() throws InvalidDataAccessApiUsageException;1362408075;Compile this JdbcCall using provided parameters and meta data plus other settings.  This_finalizes the configuration for this object and subsequent attempts to compile are ignored._This will be implicitly called the first time an un-compiled call is executed._@throws org.springframework.dao.InvalidDataAccessApiUsageException if the object hasn't_been correctly initialized, for example if no DataSource has been provided;public synchronized final void compile() throws InvalidDataAccessApiUsageException {_		if (!isCompiled()) {_			if (getProcedureName() == null) {_				throw new InvalidDataAccessApiUsageException("Procedure or Function name is required")__			}_			try {_				this.jdbcTemplate.afterPropertiesSet()__			}_			catch (IllegalArgumentException ex) {_				throw new InvalidDataAccessApiUsageException(ex.getMessage())__			}_			compileInternal()__			this.compiled = true__			if (logger.isDebugEnabled()) {_				logger.debug("SqlCall for " + (isFunction() ? "function" : "procedure") + " [" + getProcedureName() + "] compiled")__			}_		}_	};compile,this,jdbc,call,using,provided,parameters,and,meta,data,plus,other,settings,this,finalizes,the,configuration,for,this,object,and,subsequent,attempts,to,compile,are,ignored,this,will,be,implicitly,called,the,first,time,an,un,compiled,call,is,executed,throws,org,springframework,dao,invalid,data,access,api,usage,exception,if,the,object,hasn,t,been,correctly,initialized,for,example,if,no,data,source,has,been,provided;public,synchronized,final,void,compile,throws,invalid,data,access,api,usage,exception,if,is,compiled,if,get,procedure,name,null,throw,new,invalid,data,access,api,usage,exception,procedure,or,function,name,is,required,try,this,jdbc,template,after,properties,set,catch,illegal,argument,exception,ex,throw,new,invalid,data,access,api,usage,exception,ex,get,message,compile,internal,this,compiled,true,if,logger,is,debug,enabled,logger,debug,sql,call,for,is,function,function,procedure,get,procedure,name,compiled
AbstractJdbcCall -> public synchronized final void compile() throws InvalidDataAccessApiUsageException;1367508310;Compile this JdbcCall using provided parameters and meta data plus other settings.  This_finalizes the configuration for this object and subsequent attempts to compile are ignored._This will be implicitly called the first time an un-compiled call is executed._@throws org.springframework.dao.InvalidDataAccessApiUsageException if the object hasn't_been correctly initialized, for example if no DataSource has been provided;public synchronized final void compile() throws InvalidDataAccessApiUsageException {_		if (!isCompiled()) {_			if (getProcedureName() == null) {_				throw new InvalidDataAccessApiUsageException("Procedure or Function name is required")__			}_			try {_				this.jdbcTemplate.afterPropertiesSet()__			}_			catch (IllegalArgumentException ex) {_				throw new InvalidDataAccessApiUsageException(ex.getMessage())__			}_			compileInternal()__			this.compiled = true__			if (logger.isDebugEnabled()) {_				logger.debug("SqlCall for " + (isFunction() ? "function" : "procedure") + " [" + getProcedureName() + "] compiled")__			}_		}_	};compile,this,jdbc,call,using,provided,parameters,and,meta,data,plus,other,settings,this,finalizes,the,configuration,for,this,object,and,subsequent,attempts,to,compile,are,ignored,this,will,be,implicitly,called,the,first,time,an,un,compiled,call,is,executed,throws,org,springframework,dao,invalid,data,access,api,usage,exception,if,the,object,hasn,t,been,correctly,initialized,for,example,if,no,data,source,has,been,provided;public,synchronized,final,void,compile,throws,invalid,data,access,api,usage,exception,if,is,compiled,if,get,procedure,name,null,throw,new,invalid,data,access,api,usage,exception,procedure,or,function,name,is,required,try,this,jdbc,template,after,properties,set,catch,illegal,argument,exception,ex,throw,new,invalid,data,access,api,usage,exception,ex,get,message,compile,internal,this,compiled,true,if,logger,is,debug,enabled,logger,debug,sql,call,for,is,function,function,procedure,get,procedure,name,compiled
AbstractJdbcCall -> public synchronized final void compile() throws InvalidDataAccessApiUsageException;1385412762;Compile this JdbcCall using provided parameters and meta data plus other settings.  This_finalizes the configuration for this object and subsequent attempts to compile are ignored._This will be implicitly called the first time an un-compiled call is executed._@throws org.springframework.dao.InvalidDataAccessApiUsageException if the object hasn't_been correctly initialized, for example if no DataSource has been provided;public synchronized final void compile() throws InvalidDataAccessApiUsageException {_		if (!isCompiled()) {_			if (getProcedureName() == null) {_				throw new InvalidDataAccessApiUsageException("Procedure or Function name is required")__			}_			try {_				this.jdbcTemplate.afterPropertiesSet()__			}_			catch (IllegalArgumentException ex) {_				throw new InvalidDataAccessApiUsageException(ex.getMessage())__			}_			compileInternal()__			this.compiled = true__			if (logger.isDebugEnabled()) {_				logger.debug("SqlCall for " + (isFunction() ? "function" : "procedure") + " [" + getProcedureName() + "] compiled")__			}_		}_	};compile,this,jdbc,call,using,provided,parameters,and,meta,data,plus,other,settings,this,finalizes,the,configuration,for,this,object,and,subsequent,attempts,to,compile,are,ignored,this,will,be,implicitly,called,the,first,time,an,un,compiled,call,is,executed,throws,org,springframework,dao,invalid,data,access,api,usage,exception,if,the,object,hasn,t,been,correctly,initialized,for,example,if,no,data,source,has,been,provided;public,synchronized,final,void,compile,throws,invalid,data,access,api,usage,exception,if,is,compiled,if,get,procedure,name,null,throw,new,invalid,data,access,api,usage,exception,procedure,or,function,name,is,required,try,this,jdbc,template,after,properties,set,catch,illegal,argument,exception,ex,throw,new,invalid,data,access,api,usage,exception,ex,get,message,compile,internal,this,compiled,true,if,logger,is,debug,enabled,logger,debug,sql,call,for,is,function,function,procedure,get,procedure,name,compiled
AbstractJdbcCall -> public synchronized final void compile() throws InvalidDataAccessApiUsageException;1407789123;Compile this JdbcCall using provided parameters and meta data plus other settings.  This_finalizes the configuration for this object and subsequent attempts to compile are ignored._This will be implicitly called the first time an un-compiled call is executed._@throws org.springframework.dao.InvalidDataAccessApiUsageException if the object hasn't_been correctly initialized, for example if no DataSource has been provided;public synchronized final void compile() throws InvalidDataAccessApiUsageException {_		if (!isCompiled()) {_			if (getProcedureName() == null) {_				throw new InvalidDataAccessApiUsageException("Procedure or Function name is required")__			}_			try {_				this.jdbcTemplate.afterPropertiesSet()__			}_			catch (IllegalArgumentException ex) {_				throw new InvalidDataAccessApiUsageException(ex.getMessage())__			}_			compileInternal()__			this.compiled = true__			if (logger.isDebugEnabled()) {_				logger.debug("SqlCall for " + (isFunction() ? "function" : "procedure") + " [" + getProcedureName() + "] compiled")__			}_		}_	};compile,this,jdbc,call,using,provided,parameters,and,meta,data,plus,other,settings,this,finalizes,the,configuration,for,this,object,and,subsequent,attempts,to,compile,are,ignored,this,will,be,implicitly,called,the,first,time,an,un,compiled,call,is,executed,throws,org,springframework,dao,invalid,data,access,api,usage,exception,if,the,object,hasn,t,been,correctly,initialized,for,example,if,no,data,source,has,been,provided;public,synchronized,final,void,compile,throws,invalid,data,access,api,usage,exception,if,is,compiled,if,get,procedure,name,null,throw,new,invalid,data,access,api,usage,exception,procedure,or,function,name,is,required,try,this,jdbc,template,after,properties,set,catch,illegal,argument,exception,ex,throw,new,invalid,data,access,api,usage,exception,ex,get,message,compile,internal,this,compiled,true,if,logger,is,debug,enabled,logger,debug,sql,call,for,is,function,function,procedure,get,procedure,name,compiled
AbstractJdbcCall -> public synchronized final void compile() throws InvalidDataAccessApiUsageException;1416833949;Compile this JdbcCall using provided parameters and meta data plus other settings._<p>This finalizes the configuration for this object and subsequent attempts to compile are_ignored. This will be implicitly called the first time an un-compiled call is executed._@throws org.springframework.dao.InvalidDataAccessApiUsageException if the object hasn't_been correctly initialized, for example if no DataSource has been provided;public synchronized final void compile() throws InvalidDataAccessApiUsageException {_		if (!isCompiled()) {_			if (getProcedureName() == null) {_				throw new InvalidDataAccessApiUsageException("Procedure or Function name is required")__			}_			try {_				this.jdbcTemplate.afterPropertiesSet()__			}_			catch (IllegalArgumentException ex) {_				throw new InvalidDataAccessApiUsageException(ex.getMessage())__			}_			compileInternal()__			this.compiled = true__			if (logger.isDebugEnabled()) {_				logger.debug("SqlCall for " + (isFunction() ? "function" : "procedure") +_						" [" + getProcedureName() + "] compiled")__			}_		}_	};compile,this,jdbc,call,using,provided,parameters,and,meta,data,plus,other,settings,p,this,finalizes,the,configuration,for,this,object,and,subsequent,attempts,to,compile,are,ignored,this,will,be,implicitly,called,the,first,time,an,un,compiled,call,is,executed,throws,org,springframework,dao,invalid,data,access,api,usage,exception,if,the,object,hasn,t,been,correctly,initialized,for,example,if,no,data,source,has,been,provided;public,synchronized,final,void,compile,throws,invalid,data,access,api,usage,exception,if,is,compiled,if,get,procedure,name,null,throw,new,invalid,data,access,api,usage,exception,procedure,or,function,name,is,required,try,this,jdbc,template,after,properties,set,catch,illegal,argument,exception,ex,throw,new,invalid,data,access,api,usage,exception,ex,get,message,compile,internal,this,compiled,true,if,logger,is,debug,enabled,logger,debug,sql,call,for,is,function,function,procedure,get,procedure,name,compiled
AbstractJdbcCall -> public synchronized final void compile() throws InvalidDataAccessApiUsageException;1431676443;Compile this JdbcCall using provided parameters and meta data plus other settings._<p>This finalizes the configuration for this object and subsequent attempts to compile are_ignored. This will be implicitly called the first time an un-compiled call is executed._@throws org.springframework.dao.InvalidDataAccessApiUsageException if the object hasn't_been correctly initialized, for example if no DataSource has been provided;public synchronized final void compile() throws InvalidDataAccessApiUsageException {_		if (!isCompiled()) {_			if (getProcedureName() == null) {_				throw new InvalidDataAccessApiUsageException("Procedure or Function name is required")__			}_			try {_				this.jdbcTemplate.afterPropertiesSet()__			}_			catch (IllegalArgumentException ex) {_				throw new InvalidDataAccessApiUsageException(ex.getMessage())__			}_			compileInternal()__			this.compiled = true__			if (logger.isDebugEnabled()) {_				logger.debug("SqlCall for " + (isFunction() ? "function" : "procedure") +_						" [" + getProcedureName() + "] compiled")__			}_		}_	};compile,this,jdbc,call,using,provided,parameters,and,meta,data,plus,other,settings,p,this,finalizes,the,configuration,for,this,object,and,subsequent,attempts,to,compile,are,ignored,this,will,be,implicitly,called,the,first,time,an,un,compiled,call,is,executed,throws,org,springframework,dao,invalid,data,access,api,usage,exception,if,the,object,hasn,t,been,correctly,initialized,for,example,if,no,data,source,has,been,provided;public,synchronized,final,void,compile,throws,invalid,data,access,api,usage,exception,if,is,compiled,if,get,procedure,name,null,throw,new,invalid,data,access,api,usage,exception,procedure,or,function,name,is,required,try,this,jdbc,template,after,properties,set,catch,illegal,argument,exception,ex,throw,new,invalid,data,access,api,usage,exception,ex,get,message,compile,internal,this,compiled,true,if,logger,is,debug,enabled,logger,debug,sql,call,for,is,function,function,procedure,get,procedure,name,compiled
AbstractJdbcCall -> public synchronized final void compile() throws InvalidDataAccessApiUsageException;1446038912;Compile this JdbcCall using provided parameters and meta data plus other settings._<p>This finalizes the configuration for this object and subsequent attempts to compile are_ignored. This will be implicitly called the first time an un-compiled call is executed._@throws org.springframework.dao.InvalidDataAccessApiUsageException if the object hasn't_been correctly initialized, for example if no DataSource has been provided;public synchronized final void compile() throws InvalidDataAccessApiUsageException {_		if (!isCompiled()) {_			if (getProcedureName() == null) {_				throw new InvalidDataAccessApiUsageException("Procedure or Function name is required")__			}_			try {_				this.jdbcTemplate.afterPropertiesSet()__			}_			catch (IllegalArgumentException ex) {_				throw new InvalidDataAccessApiUsageException(ex.getMessage())__			}_			compileInternal()__			this.compiled = true__			if (logger.isDebugEnabled()) {_				logger.debug("SqlCall for " + (isFunction() ? "function" : "procedure") +_						" [" + getProcedureName() + "] compiled")__			}_		}_	};compile,this,jdbc,call,using,provided,parameters,and,meta,data,plus,other,settings,p,this,finalizes,the,configuration,for,this,object,and,subsequent,attempts,to,compile,are,ignored,this,will,be,implicitly,called,the,first,time,an,un,compiled,call,is,executed,throws,org,springframework,dao,invalid,data,access,api,usage,exception,if,the,object,hasn,t,been,correctly,initialized,for,example,if,no,data,source,has,been,provided;public,synchronized,final,void,compile,throws,invalid,data,access,api,usage,exception,if,is,compiled,if,get,procedure,name,null,throw,new,invalid,data,access,api,usage,exception,procedure,or,function,name,is,required,try,this,jdbc,template,after,properties,set,catch,illegal,argument,exception,ex,throw,new,invalid,data,access,api,usage,exception,ex,get,message,compile,internal,this,compiled,true,if,logger,is,debug,enabled,logger,debug,sql,call,for,is,function,function,procedure,get,procedure,name,compiled
AbstractJdbcCall -> public synchronized final void compile() throws InvalidDataAccessApiUsageException;1446470853;Compile this JdbcCall using provided parameters and meta data plus other settings._<p>This finalizes the configuration for this object and subsequent attempts to compile are_ignored. This will be implicitly called the first time an un-compiled call is executed._@throws org.springframework.dao.InvalidDataAccessApiUsageException if the object hasn't_been correctly initialized, for example if no DataSource has been provided;public synchronized final void compile() throws InvalidDataAccessApiUsageException {_		if (!isCompiled()) {_			if (getProcedureName() == null) {_				throw new InvalidDataAccessApiUsageException("Procedure or Function name is required")__			}_			try {_				this.jdbcTemplate.afterPropertiesSet()__			}_			catch (IllegalArgumentException ex) {_				throw new InvalidDataAccessApiUsageException(ex.getMessage())__			}_			compileInternal()__			this.compiled = true__			if (logger.isDebugEnabled()) {_				logger.debug("SqlCall for " + (isFunction() ? "function" : "procedure") +_						" [" + getProcedureName() + "] compiled")__			}_		}_	};compile,this,jdbc,call,using,provided,parameters,and,meta,data,plus,other,settings,p,this,finalizes,the,configuration,for,this,object,and,subsequent,attempts,to,compile,are,ignored,this,will,be,implicitly,called,the,first,time,an,un,compiled,call,is,executed,throws,org,springframework,dao,invalid,data,access,api,usage,exception,if,the,object,hasn,t,been,correctly,initialized,for,example,if,no,data,source,has,been,provided;public,synchronized,final,void,compile,throws,invalid,data,access,api,usage,exception,if,is,compiled,if,get,procedure,name,null,throw,new,invalid,data,access,api,usage,exception,procedure,or,function,name,is,required,try,this,jdbc,template,after,properties,set,catch,illegal,argument,exception,ex,throw,new,invalid,data,access,api,usage,exception,ex,get,message,compile,internal,this,compiled,true,if,logger,is,debug,enabled,logger,debug,sql,call,for,is,function,function,procedure,get,procedure,name,compiled
AbstractJdbcCall -> public synchronized final void compile() throws InvalidDataAccessApiUsageException;1467730834;Compile this JdbcCall using provided parameters and meta data plus other settings._<p>This finalizes the configuration for this object and subsequent attempts to compile are_ignored. This will be implicitly called the first time an un-compiled call is executed._@throws org.springframework.dao.InvalidDataAccessApiUsageException if the object hasn't_been correctly initialized, for example if no DataSource has been provided;public synchronized final void compile() throws InvalidDataAccessApiUsageException {_		if (!isCompiled()) {_			if (getProcedureName() == null) {_				throw new InvalidDataAccessApiUsageException("Procedure or Function name is required")__			}_			try {_				this.jdbcTemplate.afterPropertiesSet()__			}_			catch (IllegalArgumentException ex) {_				throw new InvalidDataAccessApiUsageException(ex.getMessage())__			}_			compileInternal()__			this.compiled = true__			if (logger.isDebugEnabled()) {_				logger.debug("SqlCall for " + (isFunction() ? "function" : "procedure") +_						" [" + getProcedureName() + "] compiled")__			}_		}_	};compile,this,jdbc,call,using,provided,parameters,and,meta,data,plus,other,settings,p,this,finalizes,the,configuration,for,this,object,and,subsequent,attempts,to,compile,are,ignored,this,will,be,implicitly,called,the,first,time,an,un,compiled,call,is,executed,throws,org,springframework,dao,invalid,data,access,api,usage,exception,if,the,object,hasn,t,been,correctly,initialized,for,example,if,no,data,source,has,been,provided;public,synchronized,final,void,compile,throws,invalid,data,access,api,usage,exception,if,is,compiled,if,get,procedure,name,null,throw,new,invalid,data,access,api,usage,exception,procedure,or,function,name,is,required,try,this,jdbc,template,after,properties,set,catch,illegal,argument,exception,ex,throw,new,invalid,data,access,api,usage,exception,ex,get,message,compile,internal,this,compiled,true,if,logger,is,debug,enabled,logger,debug,sql,call,for,is,function,function,procedure,get,procedure,name,compiled
AbstractJdbcCall -> public synchronized final void compile() throws InvalidDataAccessApiUsageException;1487178248;Compile this JdbcCall using provided parameters and meta data plus other settings._<p>This finalizes the configuration for this object and subsequent attempts to compile are_ignored. This will be implicitly called the first time an un-compiled call is executed._@throws org.springframework.dao.InvalidDataAccessApiUsageException if the object hasn't_been correctly initialized, for example if no DataSource has been provided;public synchronized final void compile() throws InvalidDataAccessApiUsageException {_		if (!isCompiled()) {_			if (getProcedureName() == null) {_				throw new InvalidDataAccessApiUsageException("Procedure or Function name is required")__			}_			try {_				this.jdbcTemplate.afterPropertiesSet()__			}_			catch (IllegalArgumentException ex) {_				throw new InvalidDataAccessApiUsageException(ex.getMessage())__			}_			compileInternal()__			this.compiled = true__			if (logger.isDebugEnabled()) {_				logger.debug("SqlCall for " + (isFunction() ? "function" : "procedure") +_						" [" + getProcedureName() + "] compiled")__			}_		}_	};compile,this,jdbc,call,using,provided,parameters,and,meta,data,plus,other,settings,p,this,finalizes,the,configuration,for,this,object,and,subsequent,attempts,to,compile,are,ignored,this,will,be,implicitly,called,the,first,time,an,un,compiled,call,is,executed,throws,org,springframework,dao,invalid,data,access,api,usage,exception,if,the,object,hasn,t,been,correctly,initialized,for,example,if,no,data,source,has,been,provided;public,synchronized,final,void,compile,throws,invalid,data,access,api,usage,exception,if,is,compiled,if,get,procedure,name,null,throw,new,invalid,data,access,api,usage,exception,procedure,or,function,name,is,required,try,this,jdbc,template,after,properties,set,catch,illegal,argument,exception,ex,throw,new,invalid,data,access,api,usage,exception,ex,get,message,compile,internal,this,compiled,true,if,logger,is,debug,enabled,logger,debug,sql,call,for,is,function,function,procedure,get,procedure,name,compiled
AbstractJdbcCall -> public synchronized final void compile() throws InvalidDataAccessApiUsageException;1496837955;Compile this JdbcCall using provided parameters and meta data plus other settings._<p>This finalizes the configuration for this object and subsequent attempts to compile are_ignored. This will be implicitly called the first time an un-compiled call is executed._@throws org.springframework.dao.InvalidDataAccessApiUsageException if the object hasn't_been correctly initialized, for example if no DataSource has been provided;public synchronized final void compile() throws InvalidDataAccessApiUsageException {_		if (!isCompiled()) {_			if (getProcedureName() == null) {_				throw new InvalidDataAccessApiUsageException("Procedure or Function name is required")__			}_			try {_				this.jdbcTemplate.afterPropertiesSet()__			}_			catch (IllegalArgumentException ex) {_				throw new InvalidDataAccessApiUsageException(ex.getMessage())__			}_			compileInternal()__			this.compiled = true__			if (logger.isDebugEnabled()) {_				logger.debug("SqlCall for " + (isFunction() ? "function" : "procedure") +_						" [" + getProcedureName() + "] compiled")__			}_		}_	};compile,this,jdbc,call,using,provided,parameters,and,meta,data,plus,other,settings,p,this,finalizes,the,configuration,for,this,object,and,subsequent,attempts,to,compile,are,ignored,this,will,be,implicitly,called,the,first,time,an,un,compiled,call,is,executed,throws,org,springframework,dao,invalid,data,access,api,usage,exception,if,the,object,hasn,t,been,correctly,initialized,for,example,if,no,data,source,has,been,provided;public,synchronized,final,void,compile,throws,invalid,data,access,api,usage,exception,if,is,compiled,if,get,procedure,name,null,throw,new,invalid,data,access,api,usage,exception,procedure,or,function,name,is,required,try,this,jdbc,template,after,properties,set,catch,illegal,argument,exception,ex,throw,new,invalid,data,access,api,usage,exception,ex,get,message,compile,internal,this,compiled,true,if,logger,is,debug,enabled,logger,debug,sql,call,for,is,function,function,procedure,get,procedure,name,compiled
AbstractJdbcCall -> public synchronized final void compile() throws InvalidDataAccessApiUsageException;1500448076;Compile this JdbcCall using provided parameters and meta data plus other settings._<p>This finalizes the configuration for this object and subsequent attempts to compile are_ignored. This will be implicitly called the first time an un-compiled call is executed._@throws org.springframework.dao.InvalidDataAccessApiUsageException if the object hasn't_been correctly initialized, for example if no DataSource has been provided;public synchronized final void compile() throws InvalidDataAccessApiUsageException {_		if (!isCompiled()) {_			if (getProcedureName() == null) {_				throw new InvalidDataAccessApiUsageException("Procedure or Function name is required")__			}_			try {_				this.jdbcTemplate.afterPropertiesSet()__			}_			catch (IllegalArgumentException ex) {_				throw new InvalidDataAccessApiUsageException(ex.getMessage())__			}_			compileInternal()__			this.compiled = true__			if (logger.isDebugEnabled()) {_				logger.debug("SqlCall for " + (isFunction() ? "function" : "procedure") +_						" [" + getProcedureName() + "] compiled")__			}_		}_	};compile,this,jdbc,call,using,provided,parameters,and,meta,data,plus,other,settings,p,this,finalizes,the,configuration,for,this,object,and,subsequent,attempts,to,compile,are,ignored,this,will,be,implicitly,called,the,first,time,an,un,compiled,call,is,executed,throws,org,springframework,dao,invalid,data,access,api,usage,exception,if,the,object,hasn,t,been,correctly,initialized,for,example,if,no,data,source,has,been,provided;public,synchronized,final,void,compile,throws,invalid,data,access,api,usage,exception,if,is,compiled,if,get,procedure,name,null,throw,new,invalid,data,access,api,usage,exception,procedure,or,function,name,is,required,try,this,jdbc,template,after,properties,set,catch,illegal,argument,exception,ex,throw,new,invalid,data,access,api,usage,exception,ex,get,message,compile,internal,this,compiled,true,if,logger,is,debug,enabled,logger,debug,sql,call,for,is,function,function,procedure,get,procedure,name,compiled
AbstractJdbcCall -> public synchronized final void compile() throws InvalidDataAccessApiUsageException;1500495740;Compile this JdbcCall using provided parameters and meta data plus other settings._<p>This finalizes the configuration for this object and subsequent attempts to compile are_ignored. This will be implicitly called the first time an un-compiled call is executed._@throws org.springframework.dao.InvalidDataAccessApiUsageException if the object hasn't_been correctly initialized, for example if no DataSource has been provided;public synchronized final void compile() throws InvalidDataAccessApiUsageException {_		if (!isCompiled()) {_			if (getProcedureName() == null) {_				throw new InvalidDataAccessApiUsageException("Procedure or Function name is required")__			}_			try {_				this.jdbcTemplate.afterPropertiesSet()__			}_			catch (IllegalArgumentException ex) {_				throw new InvalidDataAccessApiUsageException(ex.getMessage())__			}_			compileInternal()__			this.compiled = true__			if (logger.isDebugEnabled()) {_				logger.debug("SqlCall for " + (isFunction() ? "function" : "procedure") +_						" [" + getProcedureName() + "] compiled")__			}_		}_	};compile,this,jdbc,call,using,provided,parameters,and,meta,data,plus,other,settings,p,this,finalizes,the,configuration,for,this,object,and,subsequent,attempts,to,compile,are,ignored,this,will,be,implicitly,called,the,first,time,an,un,compiled,call,is,executed,throws,org,springframework,dao,invalid,data,access,api,usage,exception,if,the,object,hasn,t,been,correctly,initialized,for,example,if,no,data,source,has,been,provided;public,synchronized,final,void,compile,throws,invalid,data,access,api,usage,exception,if,is,compiled,if,get,procedure,name,null,throw,new,invalid,data,access,api,usage,exception,procedure,or,function,name,is,required,try,this,jdbc,template,after,properties,set,catch,illegal,argument,exception,ex,throw,new,invalid,data,access,api,usage,exception,ex,get,message,compile,internal,this,compiled,true,if,logger,is,debug,enabled,logger,debug,sql,call,for,is,function,function,procedure,get,procedure,name,compiled
