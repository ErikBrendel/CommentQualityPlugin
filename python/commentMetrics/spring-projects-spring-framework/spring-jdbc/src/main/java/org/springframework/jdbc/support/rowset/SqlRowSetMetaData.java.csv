commented;modifiers;parameterAmount;loc;comment;code
true;;1;1;/**  * Retrieve the catalog name of the table that served as the source for the  * specified column.  * @param columnIndex the index of the column  * @return the catalog name  * @see java.sql.ResultSetMetaData#getCatalogName(int)  */ ;/**  * Retrieve the catalog name of the table that served as the source for the  * specified column.  * @param columnIndex the index of the column  * @return the catalog name  * @see java.sql.ResultSetMetaData#getCatalogName(int)  */ String getCatalogName(int columnIndex) throws InvalidResultSetAccessException.
true;;1;1;/**  * Retrieve the fully qualified class that the specified column will be mapped to.  * @param columnIndex the index of the column  * @return the class name as a String  * @see java.sql.ResultSetMetaData#getColumnClassName(int)  */ ;/**  * Retrieve the fully qualified class that the specified column will be mapped to.  * @param columnIndex the index of the column  * @return the class name as a String  * @see java.sql.ResultSetMetaData#getColumnClassName(int)  */ String getColumnClassName(int columnIndex) throws InvalidResultSetAccessException.
true;;0;1;/**  * Retrieve the number of columns in the RowSet.  * @return the number of columns  * @see java.sql.ResultSetMetaData#getColumnCount()  */ ;/**  * Retrieve the number of columns in the RowSet.  * @return the number of columns  * @see java.sql.ResultSetMetaData#getColumnCount()  */ int getColumnCount() throws InvalidResultSetAccessException.
true;;0;1;/**  * Return the column names of the table that the result set represents.  * @return the column names  */ ;/**  * Return the column names of the table that the result set represents.  * @return the column names  */ String[] getColumnNames() throws InvalidResultSetAccessException.
true;;1;1;/**  * Retrieve the maximum width of the designated column.  * @param columnIndex the index of the column  * @return the width of the column  * @see java.sql.ResultSetMetaData#getColumnDisplaySize(int)  */ ;/**  * Retrieve the maximum width of the designated column.  * @param columnIndex the index of the column  * @return the width of the column  * @see java.sql.ResultSetMetaData#getColumnDisplaySize(int)  */ int getColumnDisplaySize(int columnIndex) throws InvalidResultSetAccessException.
true;;1;1;/**  * Retrieve the suggested column title for the column specified.  * @param columnIndex the index of the column  * @return the column title  * @see java.sql.ResultSetMetaData#getColumnLabel(int)  */ ;/**  * Retrieve the suggested column title for the column specified.  * @param columnIndex the index of the column  * @return the column title  * @see java.sql.ResultSetMetaData#getColumnLabel(int)  */ String getColumnLabel(int columnIndex) throws InvalidResultSetAccessException.
true;;1;1;/**  * Retrieve the column name for the indicated column.  * @param columnIndex the index of the column  * @return the column name  * @see java.sql.ResultSetMetaData#getColumnName(int)  */ ;/**  * Retrieve the column name for the indicated column.  * @param columnIndex the index of the column  * @return the column name  * @see java.sql.ResultSetMetaData#getColumnName(int)  */ String getColumnName(int columnIndex) throws InvalidResultSetAccessException.
true;;1;1;/**  * Retrieve the SQL type code for the indicated column.  * @param columnIndex the index of the column  * @return the SQL type code  * @see java.sql.ResultSetMetaData#getColumnType(int)  * @see java.sql.Types  */ ;/**  * Retrieve the SQL type code for the indicated column.  * @param columnIndex the index of the column  * @return the SQL type code  * @see java.sql.ResultSetMetaData#getColumnType(int)  * @see java.sql.Types  */ int getColumnType(int columnIndex) throws InvalidResultSetAccessException.
true;;1;1;/**  * Retrieve the DBMS-specific type name for the indicated column.  * @param columnIndex the index of the column  * @return the type name  * @see java.sql.ResultSetMetaData#getColumnTypeName(int)  */ ;/**  * Retrieve the DBMS-specific type name for the indicated column.  * @param columnIndex the index of the column  * @return the type name  * @see java.sql.ResultSetMetaData#getColumnTypeName(int)  */ String getColumnTypeName(int columnIndex) throws InvalidResultSetAccessException.
true;;1;1;/**  * Retrieve the precision for the indicated column.  * @param columnIndex the index of the column  * @return the precision  * @see java.sql.ResultSetMetaData#getPrecision(int)  */ ;/**  * Retrieve the precision for the indicated column.  * @param columnIndex the index of the column  * @return the precision  * @see java.sql.ResultSetMetaData#getPrecision(int)  */ int getPrecision(int columnIndex) throws InvalidResultSetAccessException.
true;;1;1;/**  * Retrieve the scale of the indicated column.  * @param columnIndex the index of the column  * @return the scale  * @see java.sql.ResultSetMetaData#getScale(int)  */ ;/**  * Retrieve the scale of the indicated column.  * @param columnIndex the index of the column  * @return the scale  * @see java.sql.ResultSetMetaData#getScale(int)  */ int getScale(int columnIndex) throws InvalidResultSetAccessException.
true;;1;1;/**  * Retrieve the schema name of the table that served as the source for the  * specified column.  * @param columnIndex the index of the column  * @return the schema name  * @see java.sql.ResultSetMetaData#getSchemaName(int)  */ ;/**  * Retrieve the schema name of the table that served as the source for the  * specified column.  * @param columnIndex the index of the column  * @return the schema name  * @see java.sql.ResultSetMetaData#getSchemaName(int)  */ String getSchemaName(int columnIndex) throws InvalidResultSetAccessException.
true;;1;1;/**  * Retrieve the name of the table that served as the source for the  * specified column.  * @param columnIndex the index of the column  * @return the name of the table  * @see java.sql.ResultSetMetaData#getTableName(int)  */ ;/**  * Retrieve the name of the table that served as the source for the  * specified column.  * @param columnIndex the index of the column  * @return the name of the table  * @see java.sql.ResultSetMetaData#getTableName(int)  */ String getTableName(int columnIndex) throws InvalidResultSetAccessException.
true;;1;1;/**  * Indicate whether the case of the designated column is significant.  * @param columnIndex the index of the column  * @return true if the case sensitive, false otherwise  * @see java.sql.ResultSetMetaData#isCaseSensitive(int)  */ ;/**  * Indicate whether the case of the designated column is significant.  * @param columnIndex the index of the column  * @return true if the case sensitive, false otherwise  * @see java.sql.ResultSetMetaData#isCaseSensitive(int)  */ boolean isCaseSensitive(int columnIndex) throws InvalidResultSetAccessException.
true;;1;1;/**  * Indicate whether the designated column contains a currency value.  * @param columnIndex the index of the column  * @return true if the value is a currency value, false otherwise  * @see java.sql.ResultSetMetaData#isCurrency(int)  */ ;/**  * Indicate whether the designated column contains a currency value.  * @param columnIndex the index of the column  * @return true if the value is a currency value, false otherwise  * @see java.sql.ResultSetMetaData#isCurrency(int)  */ boolean isCurrency(int columnIndex) throws InvalidResultSetAccessException.
true;;1;1;/**  * Indicate whether the designated column contains a signed number.  * @param columnIndex the index of the column  * @return true if the column contains a signed number, false otherwise  * @see java.sql.ResultSetMetaData#isSigned(int)  */ ;/**  * Indicate whether the designated column contains a signed number.  * @param columnIndex the index of the column  * @return true if the column contains a signed number, false otherwise  * @see java.sql.ResultSetMetaData#isSigned(int)  */ boolean isSigned(int columnIndex) throws InvalidResultSetAccessException.
