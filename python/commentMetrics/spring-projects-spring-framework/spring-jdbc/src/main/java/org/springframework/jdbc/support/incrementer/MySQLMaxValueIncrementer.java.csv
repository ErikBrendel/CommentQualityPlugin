# id;timestamp;commentText;codeText;commentWords;codeWords
MySQLMaxValueIncrementer -> public MySQLMaxValueIncrementer(DataSource dataSource, String incrementerName, String columnName);1328020251;Convenience constructor._@param dataSource the DataSource to use_@param incrementerName the name of the sequence/table to use_@param columnName the name of the column in the sequence table to use;public MySQLMaxValueIncrementer(DataSource dataSource, String incrementerName, String columnName) {_		super(dataSource, incrementerName, columnName)__	};convenience,constructor,param,data,source,the,data,source,to,use,param,incrementer,name,the,name,of,the,sequence,table,to,use,param,column,name,the,name,of,the,column,in,the,sequence,table,to,use;public,my,sqlmax,value,incrementer,data,source,data,source,string,incrementer,name,string,column,name,super,data,source,incrementer,name,column,name
MySQLMaxValueIncrementer -> public MySQLMaxValueIncrementer(DataSource dataSource, String incrementerName, String columnName);1413848647;Convenience constructor._@param dataSource the DataSource to use_@param incrementerName the name of the sequence/table to use_@param columnName the name of the column in the sequence table to use;public MySQLMaxValueIncrementer(DataSource dataSource, String incrementerName, String columnName) {_		super(dataSource, incrementerName, columnName)__	};convenience,constructor,param,data,source,the,data,source,to,use,param,incrementer,name,the,name,of,the,sequence,table,to,use,param,column,name,the,name,of,the,column,in,the,sequence,table,to,use;public,my,sqlmax,value,incrementer,data,source,data,source,string,incrementer,name,string,column,name,super,data,source,incrementer,name,column,name
MySQLMaxValueIncrementer -> public MySQLMaxValueIncrementer(DataSource dataSource, String incrementerName, String columnName);1484249104;Convenience constructor._@param dataSource the DataSource to use_@param incrementerName the name of the sequence/table to use_@param columnName the name of the column in the sequence table to use;public MySQLMaxValueIncrementer(DataSource dataSource, String incrementerName, String columnName) {_		super(dataSource, incrementerName, columnName)__	};convenience,constructor,param,data,source,the,data,source,to,use,param,incrementer,name,the,name,of,the,sequence,table,to,use,param,column,name,the,name,of,the,column,in,the,sequence,table,to,use;public,my,sqlmax,value,incrementer,data,source,data,source,string,incrementer,name,string,column,name,super,data,source,incrementer,name,column,name
MySQLMaxValueIncrementer -> public MySQLMaxValueIncrementer(DataSource dataSource, String incrementerName, String columnName);1484252281;Convenience constructor._@param dataSource the DataSource to use_@param incrementerName the name of the sequence table to use_@param columnName the name of the column in the sequence table to use;public MySQLMaxValueIncrementer(DataSource dataSource, String incrementerName, String columnName) {_		super(dataSource, incrementerName, columnName)__	};convenience,constructor,param,data,source,the,data,source,to,use,param,incrementer,name,the,name,of,the,sequence,table,to,use,param,column,name,the,name,of,the,column,in,the,sequence,table,to,use;public,my,sqlmax,value,incrementer,data,source,data,source,string,incrementer,name,string,column,name,super,data,source,incrementer,name,column,name
MySQLMaxValueIncrementer -> public MySQLMaxValueIncrementer(DataSource dataSource, String incrementerName, String columnName);1484260238;Convenience constructor._@param dataSource the DataSource to use_@param incrementerName the name of the sequence table to use_@param columnName the name of the column in the sequence table to use;public MySQLMaxValueIncrementer(DataSource dataSource, String incrementerName, String columnName) {_		super(dataSource, incrementerName, columnName)__	};convenience,constructor,param,data,source,the,data,source,to,use,param,incrementer,name,the,name,of,the,sequence,table,to,use,param,column,name,the,name,of,the,column,in,the,sequence,table,to,use;public,my,sqlmax,value,incrementer,data,source,data,source,string,incrementer,name,string,column,name,super,data,source,incrementer,name,column,name
MySQLMaxValueIncrementer -> public MySQLMaxValueIncrementer(DataSource dataSource, String incrementerName, String columnName);1530174524;Convenience constructor._@param dataSource the DataSource to use_@param incrementerName the name of the sequence table to use_@param columnName the name of the column in the sequence table to use;public MySQLMaxValueIncrementer(DataSource dataSource, String incrementerName, String columnName) {_		super(dataSource, incrementerName, columnName)__	};convenience,constructor,param,data,source,the,data,source,to,use,param,incrementer,name,the,name,of,the,sequence,table,to,use,param,column,name,the,name,of,the,column,in,the,sequence,table,to,use;public,my,sqlmax,value,incrementer,data,source,data,source,string,incrementer,name,string,column,name,super,data,source,incrementer,name,column,name
MySQLMaxValueIncrementer -> public void setUseNewConnection(boolean useNewConnection);1484249104;Set whether to use a new connection for the incrementer.;public void setUseNewConnection(boolean useNewConnection) {_		this.useNewConnection = useNewConnection__	};set,whether,to,use,a,new,connection,for,the,incrementer;public,void,set,use,new,connection,boolean,use,new,connection,this,use,new,connection,use,new,connection
MySQLMaxValueIncrementer -> public void setUseNewConnection(boolean useNewConnection);1484252281;Set whether to use a new connection for the incrementer._<p>{@code true} is necessary to support transactional storage engines,_using an isolated separate transaction for the increment operation._{@code false} is sufficient if the storage engine of the sequence table_is non-transactional (like MYISAM), avoiding the effort of acquiring an_extra {@code Connection} for the increment operation._<p>Default is {@code true} since Spring Framework 5.0._@since 4.3.6_@see DataSource#getConnection();public void setUseNewConnection(boolean useNewConnection) {_		this.useNewConnection = useNewConnection__	};set,whether,to,use,a,new,connection,for,the,incrementer,p,code,true,is,necessary,to,support,transactional,storage,engines,using,an,isolated,separate,transaction,for,the,increment,operation,code,false,is,sufficient,if,the,storage,engine,of,the,sequence,table,is,non,transactional,like,myisam,avoiding,the,effort,of,acquiring,an,extra,code,connection,for,the,increment,operation,p,default,is,code,true,since,spring,framework,5,0,since,4,3,6,see,data,source,get,connection;public,void,set,use,new,connection,boolean,use,new,connection,this,use,new,connection,use,new,connection
MySQLMaxValueIncrementer -> public void setUseNewConnection(boolean useNewConnection);1484260238;Set whether to use a new connection for the incrementer._<p>{@code true} is necessary to support transactional storage engines,_using an isolated separate transaction for the increment operation._{@code false} is sufficient if the storage engine of the sequence table_is non-transactional (like MYISAM), avoiding the effort of acquiring an_extra {@code Connection} for the increment operation._<p>Default is {@code true} since Spring Framework 5.0._@since 4.3.6_@see DataSource#getConnection();public void setUseNewConnection(boolean useNewConnection) {_		this.useNewConnection = useNewConnection__	};set,whether,to,use,a,new,connection,for,the,incrementer,p,code,true,is,necessary,to,support,transactional,storage,engines,using,an,isolated,separate,transaction,for,the,increment,operation,code,false,is,sufficient,if,the,storage,engine,of,the,sequence,table,is,non,transactional,like,myisam,avoiding,the,effort,of,acquiring,an,extra,code,connection,for,the,increment,operation,p,default,is,code,true,since,spring,framework,5,0,since,4,3,6,see,data,source,get,connection;public,void,set,use,new,connection,boolean,use,new,connection,this,use,new,connection,use,new,connection
MySQLMaxValueIncrementer -> public void setUseNewConnection(boolean useNewConnection);1530174524;Set whether to use a new connection for the incrementer._<p>{@code true} is necessary to support transactional storage engines,_using an isolated separate transaction for the increment operation._{@code false} is sufficient if the storage engine of the sequence table_is non-transactional (like MYISAM), avoiding the effort of acquiring an_extra {@code Connection} for the increment operation._<p>Default is {@code true} since Spring Framework 5.0._@since 4.3.6_@see DataSource#getConnection();public void setUseNewConnection(boolean useNewConnection) {_		this.useNewConnection = useNewConnection__	};set,whether,to,use,a,new,connection,for,the,incrementer,p,code,true,is,necessary,to,support,transactional,storage,engines,using,an,isolated,separate,transaction,for,the,increment,operation,code,false,is,sufficient,if,the,storage,engine,of,the,sequence,table,is,non,transactional,like,myisam,avoiding,the,effort,of,acquiring,an,extra,code,connection,for,the,increment,operation,p,default,is,code,true,since,spring,framework,5,0,since,4,3,6,see,data,source,get,connection;public,void,set,use,new,connection,boolean,use,new,connection,this,use,new,connection,use,new,connection
MySQLMaxValueIncrementer -> public MySQLMaxValueIncrementer();1328020251;Default constructor for bean property style usage._@see #setDataSource_@see #setIncrementerName_@see #setColumnName;public MySQLMaxValueIncrementer() {_	};default,constructor,for,bean,property,style,usage,see,set,data,source,see,set,incrementer,name,see,set,column,name;public,my,sqlmax,value,incrementer
MySQLMaxValueIncrementer -> public MySQLMaxValueIncrementer();1413848647;Default constructor for bean property style usage._@see #setDataSource_@see #setIncrementerName_@see #setColumnName;public MySQLMaxValueIncrementer() {_	};default,constructor,for,bean,property,style,usage,see,set,data,source,see,set,incrementer,name,see,set,column,name;public,my,sqlmax,value,incrementer
MySQLMaxValueIncrementer -> public MySQLMaxValueIncrementer();1484249104;Default constructor for bean property style usage._@see #setDataSource_@see #setIncrementerName_@see #setColumnName;public MySQLMaxValueIncrementer() {_	};default,constructor,for,bean,property,style,usage,see,set,data,source,see,set,incrementer,name,see,set,column,name;public,my,sqlmax,value,incrementer
MySQLMaxValueIncrementer -> public MySQLMaxValueIncrementer();1484252281;Default constructor for bean property style usage._@see #setDataSource_@see #setIncrementerName_@see #setColumnName;public MySQLMaxValueIncrementer() {_	};default,constructor,for,bean,property,style,usage,see,set,data,source,see,set,incrementer,name,see,set,column,name;public,my,sqlmax,value,incrementer
MySQLMaxValueIncrementer -> public MySQLMaxValueIncrementer();1484260238;Default constructor for bean property style usage._@see #setDataSource_@see #setIncrementerName_@see #setColumnName;public MySQLMaxValueIncrementer() {_	};default,constructor,for,bean,property,style,usage,see,set,data,source,see,set,incrementer,name,see,set,column,name;public,my,sqlmax,value,incrementer
MySQLMaxValueIncrementer -> public MySQLMaxValueIncrementer();1530174524;Default constructor for bean property style usage._@see #setDataSource_@see #setIncrementerName_@see #setColumnName;public MySQLMaxValueIncrementer() {_	};default,constructor,for,bean,property,style,usage,see,set,data,source,see,set,incrementer,name,see,set,column,name;public,my,sqlmax,value,incrementer
