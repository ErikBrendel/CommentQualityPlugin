# id;timestamp;commentText;codeText;commentWords;codeWords
ConnectionCallback -> T doInConnection(Connection con) throws SQLException, DataAccessException_;1328020251;Gets called by <code>JdbcTemplate.execute</code> with an active JDBC_Connection. Does not need to care about activating or closing the_Connection, or handling transactions.__<p>If called without a thread-bound JDBC transaction (initiated by_DataSourceTransactionManager), the code will simply get executed on the_JDBC connection with its transactional semantics. If JdbcTemplate is_configured to use a JTA-aware DataSource, the JDBC Connection and thus_the callback code will be transactional if a JTA transaction is active.__<p>Allows for returning a result object created within the callback, i.e._a domain object or a collection of domain objects. Note that there's special_support for single step actions: see <code>JdbcTemplate.queryForObject</code>_etc. A thrown RuntimeException is treated as application exception:_it gets propagated to the caller of the template.__@param con active JDBC Connection_@return a result object, or <code>null</code> if none_@throws SQLException if thrown by a JDBC method, to be auto-converted_to a DataAccessException by a SQLExceptionTranslator_@throws DataAccessException in case of custom exceptions_@see JdbcTemplate#queryForObject(String, Class)_@see JdbcTemplate#queryForRowSet(String);T doInConnection(Connection con) throws SQLException, DataAccessException_;gets,called,by,code,jdbc,template,execute,code,with,an,active,jdbc,connection,does,not,need,to,care,about,activating,or,closing,the,connection,or,handling,transactions,p,if,called,without,a,thread,bound,jdbc,transaction,initiated,by,data,source,transaction,manager,the,code,will,simply,get,executed,on,the,jdbc,connection,with,its,transactional,semantics,if,jdbc,template,is,configured,to,use,a,jta,aware,data,source,the,jdbc,connection,and,thus,the,callback,code,will,be,transactional,if,a,jta,transaction,is,active,p,allows,for,returning,a,result,object,created,within,the,callback,i,e,a,domain,object,or,a,collection,of,domain,objects,note,that,there,s,special,support,for,single,step,actions,see,code,jdbc,template,query,for,object,code,etc,a,thrown,runtime,exception,is,treated,as,application,exception,it,gets,propagated,to,the,caller,of,the,template,param,con,active,jdbc,connection,return,a,result,object,or,code,null,code,if,none,throws,sqlexception,if,thrown,by,a,jdbc,method,to,be,auto,converted,to,a,data,access,exception,by,a,sqlexception,translator,throws,data,access,exception,in,case,of,custom,exceptions,see,jdbc,template,query,for,object,string,class,see,jdbc,template,query,for,row,set,string;t,do,in,connection,connection,con,throws,sqlexception,data,access,exception
ConnectionCallback -> T doInConnection(Connection con) throws SQLException, DataAccessException_;1356735495;Gets called by {@code JdbcTemplate.execute} with an active JDBC_Connection. Does not need to care about activating or closing the_Connection, or handling transactions.__<p>If called without a thread-bound JDBC transaction (initiated by_DataSourceTransactionManager), the code will simply get executed on the_JDBC connection with its transactional semantics. If JdbcTemplate is_configured to use a JTA-aware DataSource, the JDBC Connection and thus_the callback code will be transactional if a JTA transaction is active.__<p>Allows for returning a result object created within the callback, i.e._a domain object or a collection of domain objects. Note that there's special_support for single step actions: see {@code JdbcTemplate.queryForObject}_etc. A thrown RuntimeException is treated as application exception:_it gets propagated to the caller of the template.__@param con active JDBC Connection_@return a result object, or {@code null} if none_@throws SQLException if thrown by a JDBC method, to be auto-converted_to a DataAccessException by a SQLExceptionTranslator_@throws DataAccessException in case of custom exceptions_@see JdbcTemplate#queryForObject(String, Class)_@see JdbcTemplate#queryForRowSet(String);T doInConnection(Connection con) throws SQLException, DataAccessException_;gets,called,by,code,jdbc,template,execute,with,an,active,jdbc,connection,does,not,need,to,care,about,activating,or,closing,the,connection,or,handling,transactions,p,if,called,without,a,thread,bound,jdbc,transaction,initiated,by,data,source,transaction,manager,the,code,will,simply,get,executed,on,the,jdbc,connection,with,its,transactional,semantics,if,jdbc,template,is,configured,to,use,a,jta,aware,data,source,the,jdbc,connection,and,thus,the,callback,code,will,be,transactional,if,a,jta,transaction,is,active,p,allows,for,returning,a,result,object,created,within,the,callback,i,e,a,domain,object,or,a,collection,of,domain,objects,note,that,there,s,special,support,for,single,step,actions,see,code,jdbc,template,query,for,object,etc,a,thrown,runtime,exception,is,treated,as,application,exception,it,gets,propagated,to,the,caller,of,the,template,param,con,active,jdbc,connection,return,a,result,object,or,code,null,if,none,throws,sqlexception,if,thrown,by,a,jdbc,method,to,be,auto,converted,to,a,data,access,exception,by,a,sqlexception,translator,throws,data,access,exception,in,case,of,custom,exceptions,see,jdbc,template,query,for,object,string,class,see,jdbc,template,query,for,row,set,string;t,do,in,connection,connection,con,throws,sqlexception,data,access,exception
ConnectionCallback -> T doInConnection(Connection con) throws SQLException, DataAccessException_;1460469837;Gets called by {@code JdbcTemplate.execute} with an active JDBC_Connection. Does not need to care about activating or closing the_Connection, or handling transactions._<p>If called without a thread-bound JDBC transaction (initiated by_DataSourceTransactionManager), the code will simply get executed on the_JDBC connection with its transactional semantics. If JdbcTemplate is_configured to use a JTA-aware DataSource, the JDBC Connection and thus_the callback code will be transactional if a JTA transaction is active._<p>Allows for returning a result object created within the callback, i.e._a domain object or a collection of domain objects. Note that there's special_support for single step actions: see {@code JdbcTemplate.queryForObject}_etc. A thrown RuntimeException is treated as application exception:_it gets propagated to the caller of the template._@param con active JDBC Connection_@return a result object, or {@code null} if none_@throws SQLException if thrown by a JDBC method, to be auto-converted_to a DataAccessException by a SQLExceptionTranslator_@throws DataAccessException in case of custom exceptions_@see JdbcTemplate#queryForObject(String, Class)_@see JdbcTemplate#queryForRowSet(String);T doInConnection(Connection con) throws SQLException, DataAccessException_;gets,called,by,code,jdbc,template,execute,with,an,active,jdbc,connection,does,not,need,to,care,about,activating,or,closing,the,connection,or,handling,transactions,p,if,called,without,a,thread,bound,jdbc,transaction,initiated,by,data,source,transaction,manager,the,code,will,simply,get,executed,on,the,jdbc,connection,with,its,transactional,semantics,if,jdbc,template,is,configured,to,use,a,jta,aware,data,source,the,jdbc,connection,and,thus,the,callback,code,will,be,transactional,if,a,jta,transaction,is,active,p,allows,for,returning,a,result,object,created,within,the,callback,i,e,a,domain,object,or,a,collection,of,domain,objects,note,that,there,s,special,support,for,single,step,actions,see,code,jdbc,template,query,for,object,etc,a,thrown,runtime,exception,is,treated,as,application,exception,it,gets,propagated,to,the,caller,of,the,template,param,con,active,jdbc,connection,return,a,result,object,or,code,null,if,none,throws,sqlexception,if,thrown,by,a,jdbc,method,to,be,auto,converted,to,a,data,access,exception,by,a,sqlexception,translator,throws,data,access,exception,in,case,of,custom,exceptions,see,jdbc,template,query,for,object,string,class,see,jdbc,template,query,for,row,set,string;t,do,in,connection,connection,con,throws,sqlexception,data,access,exception
ConnectionCallback -> T doInConnection(Connection con) throws SQLException, DataAccessException_;1467808333;Gets called by {@code JdbcTemplate.execute} with an active JDBC_Connection. Does not need to care about activating or closing the_Connection, or handling transactions._<p>If called without a thread-bound JDBC transaction (initiated by_DataSourceTransactionManager), the code will simply get executed on the_JDBC connection with its transactional semantics. If JdbcTemplate is_configured to use a JTA-aware DataSource, the JDBC Connection and thus_the callback code will be transactional if a JTA transaction is active._<p>Allows for returning a result object created within the callback, i.e._a domain object or a collection of domain objects. Note that there's special_support for single step actions: see {@code JdbcTemplate.queryForObject}_etc. A thrown RuntimeException is treated as application exception:_it gets propagated to the caller of the template._@param con active JDBC Connection_@return a result object, or {@code null} if none_@throws SQLException if thrown by a JDBC method, to be auto-converted_to a DataAccessException by a SQLExceptionTranslator_@throws DataAccessException in case of custom exceptions_@see JdbcTemplate#queryForObject(String, Class)_@see JdbcTemplate#queryForRowSet(String);T doInConnection(Connection con) throws SQLException, DataAccessException_;gets,called,by,code,jdbc,template,execute,with,an,active,jdbc,connection,does,not,need,to,care,about,activating,or,closing,the,connection,or,handling,transactions,p,if,called,without,a,thread,bound,jdbc,transaction,initiated,by,data,source,transaction,manager,the,code,will,simply,get,executed,on,the,jdbc,connection,with,its,transactional,semantics,if,jdbc,template,is,configured,to,use,a,jta,aware,data,source,the,jdbc,connection,and,thus,the,callback,code,will,be,transactional,if,a,jta,transaction,is,active,p,allows,for,returning,a,result,object,created,within,the,callback,i,e,a,domain,object,or,a,collection,of,domain,objects,note,that,there,s,special,support,for,single,step,actions,see,code,jdbc,template,query,for,object,etc,a,thrown,runtime,exception,is,treated,as,application,exception,it,gets,propagated,to,the,caller,of,the,template,param,con,active,jdbc,connection,return,a,result,object,or,code,null,if,none,throws,sqlexception,if,thrown,by,a,jdbc,method,to,be,auto,converted,to,a,data,access,exception,by,a,sqlexception,translator,throws,data,access,exception,in,case,of,custom,exceptions,see,jdbc,template,query,for,object,string,class,see,jdbc,template,query,for,row,set,string;t,do,in,connection,connection,con,throws,sqlexception,data,access,exception
ConnectionCallback -> @Nullable 	T doInConnection(Connection con) throws SQLException, DataAccessException_;1495868221;Gets called by {@code JdbcTemplate.execute} with an active JDBC_Connection. Does not need to care about activating or closing the_Connection, or handling transactions._<p>If called without a thread-bound JDBC transaction (initiated by_DataSourceTransactionManager), the code will simply get executed on the_JDBC connection with its transactional semantics. If JdbcTemplate is_configured to use a JTA-aware DataSource, the JDBC Connection and thus_the callback code will be transactional if a JTA transaction is active._<p>Allows for returning a result object created within the callback, i.e._a domain object or a collection of domain objects. Note that there's special_support for single step actions: see {@code JdbcTemplate.queryForObject}_etc. A thrown RuntimeException is treated as application exception:_it gets propagated to the caller of the template._@param con active JDBC Connection_@return a result object, or {@code null} if none_@throws SQLException if thrown by a JDBC method, to be auto-converted_to a DataAccessException by a SQLExceptionTranslator_@throws DataAccessException in case of custom exceptions_@see JdbcTemplate#queryForObject(String, Class)_@see JdbcTemplate#queryForRowSet(String);@Nullable_	T doInConnection(Connection con) throws SQLException, DataAccessException_;gets,called,by,code,jdbc,template,execute,with,an,active,jdbc,connection,does,not,need,to,care,about,activating,or,closing,the,connection,or,handling,transactions,p,if,called,without,a,thread,bound,jdbc,transaction,initiated,by,data,source,transaction,manager,the,code,will,simply,get,executed,on,the,jdbc,connection,with,its,transactional,semantics,if,jdbc,template,is,configured,to,use,a,jta,aware,data,source,the,jdbc,connection,and,thus,the,callback,code,will,be,transactional,if,a,jta,transaction,is,active,p,allows,for,returning,a,result,object,created,within,the,callback,i,e,a,domain,object,or,a,collection,of,domain,objects,note,that,there,s,special,support,for,single,step,actions,see,code,jdbc,template,query,for,object,etc,a,thrown,runtime,exception,is,treated,as,application,exception,it,gets,propagated,to,the,caller,of,the,template,param,con,active,jdbc,connection,return,a,result,object,or,code,null,if,none,throws,sqlexception,if,thrown,by,a,jdbc,method,to,be,auto,converted,to,a,data,access,exception,by,a,sqlexception,translator,throws,data,access,exception,in,case,of,custom,exceptions,see,jdbc,template,query,for,object,string,class,see,jdbc,template,query,for,row,set,string;nullable,t,do,in,connection,connection,con,throws,sqlexception,data,access,exception
ConnectionCallback -> @Nullable 	T doInConnection(Connection con) throws SQLException, DataAccessException_;1530174524;Gets called by {@code JdbcTemplate.execute} with an active JDBC_Connection. Does not need to care about activating or closing the_Connection, or handling transactions._<p>If called without a thread-bound JDBC transaction (initiated by_DataSourceTransactionManager), the code will simply get executed on the_JDBC connection with its transactional semantics. If JdbcTemplate is_configured to use a JTA-aware DataSource, the JDBC Connection and thus_the callback code will be transactional if a JTA transaction is active._<p>Allows for returning a result object created within the callback, i.e._a domain object or a collection of domain objects. Note that there's special_support for single step actions: see {@code JdbcTemplate.queryForObject}_etc. A thrown RuntimeException is treated as application exception:_it gets propagated to the caller of the template._@param con active JDBC Connection_@return a result object, or {@code null} if none_@throws SQLException if thrown by a JDBC method, to be auto-converted_to a DataAccessException by a SQLExceptionTranslator_@throws DataAccessException in case of custom exceptions_@see JdbcTemplate#queryForObject(String, Class)_@see JdbcTemplate#queryForRowSet(String);@Nullable_	T doInConnection(Connection con) throws SQLException, DataAccessException_;gets,called,by,code,jdbc,template,execute,with,an,active,jdbc,connection,does,not,need,to,care,about,activating,or,closing,the,connection,or,handling,transactions,p,if,called,without,a,thread,bound,jdbc,transaction,initiated,by,data,source,transaction,manager,the,code,will,simply,get,executed,on,the,jdbc,connection,with,its,transactional,semantics,if,jdbc,template,is,configured,to,use,a,jta,aware,data,source,the,jdbc,connection,and,thus,the,callback,code,will,be,transactional,if,a,jta,transaction,is,active,p,allows,for,returning,a,result,object,created,within,the,callback,i,e,a,domain,object,or,a,collection,of,domain,objects,note,that,there,s,special,support,for,single,step,actions,see,code,jdbc,template,query,for,object,etc,a,thrown,runtime,exception,is,treated,as,application,exception,it,gets,propagated,to,the,caller,of,the,template,param,con,active,jdbc,connection,return,a,result,object,or,code,null,if,none,throws,sqlexception,if,thrown,by,a,jdbc,method,to,be,auto,converted,to,a,data,access,exception,by,a,sqlexception,translator,throws,data,access,exception,in,case,of,custom,exceptions,see,jdbc,template,query,for,object,string,class,see,jdbc,template,query,for,row,set,string;nullable,t,do,in,connection,connection,con,throws,sqlexception,data,access,exception
