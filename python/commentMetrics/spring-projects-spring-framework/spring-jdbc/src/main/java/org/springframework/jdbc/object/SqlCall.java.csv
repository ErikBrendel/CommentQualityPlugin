# id;timestamp;commentText;codeText;commentWords;codeWords
SqlCall -> public SqlCall();1328020251;Constructor to allow use as a JavaBean._A DataSource, SQL and any parameters must be supplied before_invoking the <code>compile</code> method and using this object._@see #setDataSource_@see #setSql_@see #compile;public SqlCall() {_	};constructor,to,allow,use,as,a,java,bean,a,data,source,sql,and,any,parameters,must,be,supplied,before,invoking,the,code,compile,code,method,and,using,this,object,see,set,data,source,see,set,sql,see,compile;public,sql,call
SqlCall -> public SqlCall();1356735495;Constructor to allow use as a JavaBean._A DataSource, SQL and any parameters must be supplied before_invoking the {@code compile} method and using this object._@see #setDataSource_@see #setSql_@see #compile;public SqlCall() {_	};constructor,to,allow,use,as,a,java,bean,a,data,source,sql,and,any,parameters,must,be,supplied,before,invoking,the,code,compile,method,and,using,this,object,see,set,data,source,see,set,sql,see,compile;public,sql,call
SqlCall -> public SqlCall();1487178248;Constructor to allow use as a JavaBean._A DataSource, SQL and any parameters must be supplied before_invoking the {@code compile} method and using this object._@see #setDataSource_@see #setSql_@see #compile;public SqlCall() {_	};constructor,to,allow,use,as,a,java,bean,a,data,source,sql,and,any,parameters,must,be,supplied,before,invoking,the,code,compile,method,and,using,this,object,see,set,data,source,see,set,sql,see,compile;public,sql,call
SqlCall -> public SqlCall();1495868221;Constructor to allow use as a JavaBean._A DataSource, SQL and any parameters must be supplied before_invoking the {@code compile} method and using this object._@see #setDataSource_@see #setSql_@see #compile;public SqlCall() {_	};constructor,to,allow,use,as,a,java,bean,a,data,source,sql,and,any,parameters,must,be,supplied,before,invoking,the,code,compile,method,and,using,this,object,see,set,data,source,see,set,sql,see,compile;public,sql,call
SqlCall -> public SqlCall();1498780456;Constructor to allow use as a JavaBean._A DataSource, SQL and any parameters must be supplied before_invoking the {@code compile} method and using this object._@see #setDataSource_@see #setSql_@see #compile;public SqlCall() {_	};constructor,to,allow,use,as,a,java,bean,a,data,source,sql,and,any,parameters,must,be,supplied,before,invoking,the,code,compile,method,and,using,this,object,see,set,data,source,see,set,sql,see,compile;public,sql,call
SqlCall -> public SqlCall();1530174524;Constructor to allow use as a JavaBean._A DataSource, SQL and any parameters must be supplied before_invoking the {@code compile} method and using this object._@see #setDataSource_@see #setSql_@see #compile;public SqlCall() {_	};constructor,to,allow,use,as,a,java,bean,a,data,source,sql,and,any,parameters,must,be,supplied,before,invoking,the,code,compile,method,and,using,this,object,see,set,data,source,see,set,sql,see,compile;public,sql,call
SqlCall -> public SqlCall();1530174524;Constructor to allow use as a JavaBean._A DataSource, SQL and any parameters must be supplied before_invoking the {@code compile} method and using this object._@see #setDataSource_@see #setSql_@see #compile;public SqlCall() {_	};constructor,to,allow,use,as,a,java,bean,a,data,source,sql,and,any,parameters,must,be,supplied,before,invoking,the,code,compile,method,and,using,this,object,see,set,data,source,see,set,sql,see,compile;public,sql,call
SqlCall -> public SqlCall();1542899558;Constructor to allow use as a JavaBean._A DataSource, SQL and any parameters must be supplied before_invoking the {@code compile} method and using this object._@see #setDataSource_@see #setSql_@see #compile;public SqlCall() {_	};constructor,to,allow,use,as,a,java,bean,a,data,source,sql,and,any,parameters,must,be,supplied,before,invoking,the,code,compile,method,and,using,this,object,see,set,data,source,see,set,sql,see,compile;public,sql,call
SqlCall -> public void setSqlReadyForUse(boolean sqlReadyForUse);1328020251;Set whether the SQL can be used as is.;public void setSqlReadyForUse(boolean sqlReadyForUse) {_		this.sqlReadyForUse = sqlReadyForUse__	};set,whether,the,sql,can,be,used,as,is;public,void,set,sql,ready,for,use,boolean,sql,ready,for,use,this,sql,ready,for,use,sql,ready,for,use
SqlCall -> public void setSqlReadyForUse(boolean sqlReadyForUse);1356735495;Set whether the SQL can be used as is.;public void setSqlReadyForUse(boolean sqlReadyForUse) {_		this.sqlReadyForUse = sqlReadyForUse__	};set,whether,the,sql,can,be,used,as,is;public,void,set,sql,ready,for,use,boolean,sql,ready,for,use,this,sql,ready,for,use,sql,ready,for,use
SqlCall -> public void setSqlReadyForUse(boolean sqlReadyForUse);1487178248;Set whether the SQL can be used as is.;public void setSqlReadyForUse(boolean sqlReadyForUse) {_		this.sqlReadyForUse = sqlReadyForUse__	};set,whether,the,sql,can,be,used,as,is;public,void,set,sql,ready,for,use,boolean,sql,ready,for,use,this,sql,ready,for,use,sql,ready,for,use
SqlCall -> public void setSqlReadyForUse(boolean sqlReadyForUse);1495868221;Set whether the SQL can be used as is.;public void setSqlReadyForUse(boolean sqlReadyForUse) {_		this.sqlReadyForUse = sqlReadyForUse__	};set,whether,the,sql,can,be,used,as,is;public,void,set,sql,ready,for,use,boolean,sql,ready,for,use,this,sql,ready,for,use,sql,ready,for,use
SqlCall -> public void setSqlReadyForUse(boolean sqlReadyForUse);1498780456;Set whether the SQL can be used as is.;public void setSqlReadyForUse(boolean sqlReadyForUse) {_		this.sqlReadyForUse = sqlReadyForUse__	};set,whether,the,sql,can,be,used,as,is;public,void,set,sql,ready,for,use,boolean,sql,ready,for,use,this,sql,ready,for,use,sql,ready,for,use
SqlCall -> public void setSqlReadyForUse(boolean sqlReadyForUse);1530174524;Set whether the SQL can be used as is.;public void setSqlReadyForUse(boolean sqlReadyForUse) {_		this.sqlReadyForUse = sqlReadyForUse__	};set,whether,the,sql,can,be,used,as,is;public,void,set,sql,ready,for,use,boolean,sql,ready,for,use,this,sql,ready,for,use,sql,ready,for,use
SqlCall -> public void setSqlReadyForUse(boolean sqlReadyForUse);1530174524;Set whether the SQL can be used as is.;public void setSqlReadyForUse(boolean sqlReadyForUse) {_		this.sqlReadyForUse = sqlReadyForUse__	};set,whether,the,sql,can,be,used,as,is;public,void,set,sql,ready,for,use,boolean,sql,ready,for,use,this,sql,ready,for,use,sql,ready,for,use
SqlCall -> public void setSqlReadyForUse(boolean sqlReadyForUse);1542899558;Set whether the SQL can be used as is.;public void setSqlReadyForUse(boolean sqlReadyForUse) {_		this.sqlReadyForUse = sqlReadyForUse__	};set,whether,the,sql,can,be,used,as,is;public,void,set,sql,ready,for,use,boolean,sql,ready,for,use,this,sql,ready,for,use,sql,ready,for,use
SqlCall -> protected CallableStatementCreator newCallableStatementCreator(ParameterMapper inParamMapper);1328020251;Return a CallableStatementCreator to perform an operation_with the parameters returned from this ParameterMapper._@param inParamMapper parametermapper. May not be <code>null</code>.;protected CallableStatementCreator newCallableStatementCreator(ParameterMapper inParamMapper) {_		return this.callableStatementFactory.newCallableStatementCreator(inParamMapper)__	};return,a,callable,statement,creator,to,perform,an,operation,with,the,parameters,returned,from,this,parameter,mapper,param,in,param,mapper,parametermapper,may,not,be,code,null,code;protected,callable,statement,creator,new,callable,statement,creator,parameter,mapper,in,param,mapper,return,this,callable,statement,factory,new,callable,statement,creator,in,param,mapper
SqlCall -> protected CallableStatementCreator newCallableStatementCreator(ParameterMapper inParamMapper);1356735495;Return a CallableStatementCreator to perform an operation_with the parameters returned from this ParameterMapper._@param inParamMapper parametermapper. May not be {@code null}.;protected CallableStatementCreator newCallableStatementCreator(ParameterMapper inParamMapper) {_		return this.callableStatementFactory.newCallableStatementCreator(inParamMapper)__	};return,a,callable,statement,creator,to,perform,an,operation,with,the,parameters,returned,from,this,parameter,mapper,param,in,param,mapper,parametermapper,may,not,be,code,null;protected,callable,statement,creator,new,callable,statement,creator,parameter,mapper,in,param,mapper,return,this,callable,statement,factory,new,callable,statement,creator,in,param,mapper
SqlCall -> protected CallableStatementCreator newCallableStatementCreator(ParameterMapper inParamMapper);1487178248;Return a CallableStatementCreator to perform an operation_with the parameters returned from this ParameterMapper._@param inParamMapper parametermapper. May not be {@code null}.;protected CallableStatementCreator newCallableStatementCreator(ParameterMapper inParamMapper) {_		return this.callableStatementFactory.newCallableStatementCreator(inParamMapper)__	};return,a,callable,statement,creator,to,perform,an,operation,with,the,parameters,returned,from,this,parameter,mapper,param,in,param,mapper,parametermapper,may,not,be,code,null;protected,callable,statement,creator,new,callable,statement,creator,parameter,mapper,in,param,mapper,return,this,callable,statement,factory,new,callable,statement,creator,in,param,mapper
SqlCall -> protected CallableStatementCreator newCallableStatementCreator(ParameterMapper inParamMapper);1495868221;Return a CallableStatementCreator to perform an operation_with the parameters returned from this ParameterMapper._@param inParamMapper parametermapper. May not be {@code null}.;protected CallableStatementCreator newCallableStatementCreator(ParameterMapper inParamMapper) {_		return this.callableStatementFactory.newCallableStatementCreator(inParamMapper)__	};return,a,callable,statement,creator,to,perform,an,operation,with,the,parameters,returned,from,this,parameter,mapper,param,in,param,mapper,parametermapper,may,not,be,code,null;protected,callable,statement,creator,new,callable,statement,creator,parameter,mapper,in,param,mapper,return,this,callable,statement,factory,new,callable,statement,creator,in,param,mapper
SqlCall -> protected CallableStatementCreator newCallableStatementCreator(ParameterMapper inParamMapper);1498780456;Return a CallableStatementCreator to perform an operation_with the parameters returned from this ParameterMapper._@param inParamMapper parametermapper. May not be {@code null}.;protected CallableStatementCreator newCallableStatementCreator(ParameterMapper inParamMapper) {_		Assert.state(this.callableStatementFactory != null, "No CallableStatementFactory available")__		return this.callableStatementFactory.newCallableStatementCreator(inParamMapper)__	};return,a,callable,statement,creator,to,perform,an,operation,with,the,parameters,returned,from,this,parameter,mapper,param,in,param,mapper,parametermapper,may,not,be,code,null;protected,callable,statement,creator,new,callable,statement,creator,parameter,mapper,in,param,mapper,assert,state,this,callable,statement,factory,null,no,callable,statement,factory,available,return,this,callable,statement,factory,new,callable,statement,creator,in,param,mapper
SqlCall -> protected CallableStatementCreator newCallableStatementCreator(ParameterMapper inParamMapper);1530174524;Return a CallableStatementCreator to perform an operation_with the parameters returned from this ParameterMapper._@param inParamMapper parametermapper. May not be {@code null}.;protected CallableStatementCreator newCallableStatementCreator(ParameterMapper inParamMapper) {_		Assert.state(this.callableStatementFactory != null, "No CallableStatementFactory available")__		return this.callableStatementFactory.newCallableStatementCreator(inParamMapper)__	};return,a,callable,statement,creator,to,perform,an,operation,with,the,parameters,returned,from,this,parameter,mapper,param,in,param,mapper,parametermapper,may,not,be,code,null;protected,callable,statement,creator,new,callable,statement,creator,parameter,mapper,in,param,mapper,assert,state,this,callable,statement,factory,null,no,callable,statement,factory,available,return,this,callable,statement,factory,new,callable,statement,creator,in,param,mapper
SqlCall -> protected CallableStatementCreator newCallableStatementCreator(ParameterMapper inParamMapper);1530174524;Return a CallableStatementCreator to perform an operation_with the parameters returned from this ParameterMapper._@param inParamMapper parametermapper. May not be {@code null}.;protected CallableStatementCreator newCallableStatementCreator(ParameterMapper inParamMapper) {_		Assert.state(this.callableStatementFactory != null, "No CallableStatementFactory available")__		return this.callableStatementFactory.newCallableStatementCreator(inParamMapper)__	};return,a,callable,statement,creator,to,perform,an,operation,with,the,parameters,returned,from,this,parameter,mapper,param,in,param,mapper,parametermapper,may,not,be,code,null;protected,callable,statement,creator,new,callable,statement,creator,parameter,mapper,in,param,mapper,assert,state,this,callable,statement,factory,null,no,callable,statement,factory,available,return,this,callable,statement,factory,new,callable,statement,creator,in,param,mapper
SqlCall -> protected CallableStatementCreator newCallableStatementCreator(ParameterMapper inParamMapper);1542899558;Return a CallableStatementCreator to perform an operation_with the parameters returned from this ParameterMapper._@param inParamMapper parametermapper. May not be {@code null}.;protected CallableStatementCreator newCallableStatementCreator(ParameterMapper inParamMapper) {_		Assert.state(this.callableStatementFactory != null, "No CallableStatementFactory available")__		return this.callableStatementFactory.newCallableStatementCreator(inParamMapper)__	};return,a,callable,statement,creator,to,perform,an,operation,with,the,parameters,returned,from,this,parameter,mapper,param,in,param,mapper,parametermapper,may,not,be,code,null;protected,callable,statement,creator,new,callable,statement,creator,parameter,mapper,in,param,mapper,assert,state,this,callable,statement,factory,null,no,callable,statement,factory,available,return,this,callable,statement,factory,new,callable,statement,creator,in,param,mapper
SqlCall -> protected void onCompileInternal();1328020251;Hook method that subclasses may override to react to compilation._This implementation does nothing.;protected void onCompileInternal() {_	};hook,method,that,subclasses,may,override,to,react,to,compilation,this,implementation,does,nothing;protected,void,on,compile,internal
SqlCall -> protected void onCompileInternal();1356735495;Hook method that subclasses may override to react to compilation._This implementation does nothing.;protected void onCompileInternal() {_	};hook,method,that,subclasses,may,override,to,react,to,compilation,this,implementation,does,nothing;protected,void,on,compile,internal
SqlCall -> protected void onCompileInternal();1487178248;Hook method that subclasses may override to react to compilation._This implementation does nothing.;protected void onCompileInternal() {_	};hook,method,that,subclasses,may,override,to,react,to,compilation,this,implementation,does,nothing;protected,void,on,compile,internal
SqlCall -> protected void onCompileInternal();1495868221;Hook method that subclasses may override to react to compilation._This implementation does nothing.;protected void onCompileInternal() {_	};hook,method,that,subclasses,may,override,to,react,to,compilation,this,implementation,does,nothing;protected,void,on,compile,internal
SqlCall -> protected void onCompileInternal();1498780456;Hook method that subclasses may override to react to compilation._This implementation does nothing.;protected void onCompileInternal() {_	};hook,method,that,subclasses,may,override,to,react,to,compilation,this,implementation,does,nothing;protected,void,on,compile,internal
SqlCall -> protected void onCompileInternal();1530174524;Hook method that subclasses may override to react to compilation._This implementation does nothing.;protected void onCompileInternal() {_	};hook,method,that,subclasses,may,override,to,react,to,compilation,this,implementation,does,nothing;protected,void,on,compile,internal
SqlCall -> protected void onCompileInternal();1530174524;Hook method that subclasses may override to react to compilation._This implementation does nothing.;protected void onCompileInternal() {_	};hook,method,that,subclasses,may,override,to,react,to,compilation,this,implementation,does,nothing;protected,void,on,compile,internal
SqlCall -> protected void onCompileInternal();1542899558;Hook method that subclasses may override to react to compilation._This implementation does nothing.;protected void onCompileInternal() {_	};hook,method,that,subclasses,may,override,to,react,to,compilation,this,implementation,does,nothing;protected,void,on,compile,internal
SqlCall -> protected CallableStatementCreator newCallableStatementCreator(@Nullable Map<String, ?> inParams);1495868221;Return a CallableStatementCreator to perform an operation_with this parameters._@param inParams parameters. May be {@code null}.;protected CallableStatementCreator newCallableStatementCreator(@Nullable Map<String, ?> inParams) {_		return this.callableStatementFactory.newCallableStatementCreator(inParams)__	};return,a,callable,statement,creator,to,perform,an,operation,with,this,parameters,param,in,params,parameters,may,be,code,null;protected,callable,statement,creator,new,callable,statement,creator,nullable,map,string,in,params,return,this,callable,statement,factory,new,callable,statement,creator,in,params
SqlCall -> protected CallableStatementCreator newCallableStatementCreator(@Nullable Map<String, ?> inParams);1498780456;Return a CallableStatementCreator to perform an operation_with this parameters._@param inParams parameters. May be {@code null}.;protected CallableStatementCreator newCallableStatementCreator(@Nullable Map<String, ?> inParams) {_		Assert.state(this.callableStatementFactory != null, "No CallableStatementFactory available")__		return this.callableStatementFactory.newCallableStatementCreator(inParams)__	};return,a,callable,statement,creator,to,perform,an,operation,with,this,parameters,param,in,params,parameters,may,be,code,null;protected,callable,statement,creator,new,callable,statement,creator,nullable,map,string,in,params,assert,state,this,callable,statement,factory,null,no,callable,statement,factory,available,return,this,callable,statement,factory,new,callable,statement,creator,in,params
SqlCall -> protected CallableStatementCreator newCallableStatementCreator(@Nullable Map<String, ?> inParams);1530174524;Return a CallableStatementCreator to perform an operation_with this parameters._@param inParams parameters. May be {@code null}.;protected CallableStatementCreator newCallableStatementCreator(@Nullable Map<String, ?> inParams) {_		Assert.state(this.callableStatementFactory != null, "No CallableStatementFactory available")__		return this.callableStatementFactory.newCallableStatementCreator(inParams)__	};return,a,callable,statement,creator,to,perform,an,operation,with,this,parameters,param,in,params,parameters,may,be,code,null;protected,callable,statement,creator,new,callable,statement,creator,nullable,map,string,in,params,assert,state,this,callable,statement,factory,null,no,callable,statement,factory,available,return,this,callable,statement,factory,new,callable,statement,creator,in,params
SqlCall -> protected CallableStatementCreator newCallableStatementCreator(@Nullable Map<String, ?> inParams);1530174524;Return a CallableStatementCreator to perform an operation_with this parameters._@param inParams parameters. May be {@code null}.;protected CallableStatementCreator newCallableStatementCreator(@Nullable Map<String, ?> inParams) {_		Assert.state(this.callableStatementFactory != null, "No CallableStatementFactory available")__		return this.callableStatementFactory.newCallableStatementCreator(inParams)__	};return,a,callable,statement,creator,to,perform,an,operation,with,this,parameters,param,in,params,parameters,may,be,code,null;protected,callable,statement,creator,new,callable,statement,creator,nullable,map,string,in,params,assert,state,this,callable,statement,factory,null,no,callable,statement,factory,available,return,this,callable,statement,factory,new,callable,statement,creator,in,params
SqlCall -> protected CallableStatementCreator newCallableStatementCreator(@Nullable Map<String, ?> inParams);1542899558;Return a CallableStatementCreator to perform an operation_with this parameters._@param inParams parameters. May be {@code null}.;protected CallableStatementCreator newCallableStatementCreator(@Nullable Map<String, ?> inParams) {_		Assert.state(this.callableStatementFactory != null, "No CallableStatementFactory available")__		return this.callableStatementFactory.newCallableStatementCreator(inParams)__	};return,a,callable,statement,creator,to,perform,an,operation,with,this,parameters,param,in,params,parameters,may,be,code,null;protected,callable,statement,creator,new,callable,statement,creator,nullable,map,string,in,params,assert,state,this,callable,statement,factory,null,no,callable,statement,factory,available,return,this,callable,statement,factory,new,callable,statement,creator,in,params
SqlCall -> public boolean isFunction();1328020251;Return whether this call is for a function.;public boolean isFunction() {_		return function__	};return,whether,this,call,is,for,a,function;public,boolean,is,function,return,function
SqlCall -> public boolean isFunction();1356735495;Return whether this call is for a function.;public boolean isFunction() {_		return function__	};return,whether,this,call,is,for,a,function;public,boolean,is,function,return,function
SqlCall -> public boolean isFunction();1487178248;Return whether this call is for a function.;public boolean isFunction() {_		return function__	};return,whether,this,call,is,for,a,function;public,boolean,is,function,return,function
SqlCall -> public boolean isFunction();1495868221;Return whether this call is for a function.;public boolean isFunction() {_		return function__	};return,whether,this,call,is,for,a,function;public,boolean,is,function,return,function
SqlCall -> public boolean isFunction();1498780456;Return whether this call is for a function.;public boolean isFunction() {_		return function__	};return,whether,this,call,is,for,a,function;public,boolean,is,function,return,function
SqlCall -> public boolean isFunction();1530174524;Return whether this call is for a function.;public boolean isFunction() {_		return function__	};return,whether,this,call,is,for,a,function;public,boolean,is,function,return,function
SqlCall -> public boolean isFunction();1530174524;Return whether this call is for a function.;public boolean isFunction() {_		return this.function__	};return,whether,this,call,is,for,a,function;public,boolean,is,function,return,this,function
SqlCall -> public boolean isFunction();1542899558;Return whether this call is for a function.;public boolean isFunction() {_		return this.function__	};return,whether,this,call,is,for,a,function;public,boolean,is,function,return,this,function
SqlCall -> public void setFunction(boolean function);1328020251;Set whether this call is for a function.;public void setFunction(boolean function) {_		this.function = function__	};set,whether,this,call,is,for,a,function;public,void,set,function,boolean,function,this,function,function
SqlCall -> public void setFunction(boolean function);1356735495;Set whether this call is for a function.;public void setFunction(boolean function) {_		this.function = function__	};set,whether,this,call,is,for,a,function;public,void,set,function,boolean,function,this,function,function
SqlCall -> public void setFunction(boolean function);1487178248;Set whether this call is for a function.;public void setFunction(boolean function) {_		this.function = function__	};set,whether,this,call,is,for,a,function;public,void,set,function,boolean,function,this,function,function
SqlCall -> public void setFunction(boolean function);1495868221;Set whether this call is for a function.;public void setFunction(boolean function) {_		this.function = function__	};set,whether,this,call,is,for,a,function;public,void,set,function,boolean,function,this,function,function
SqlCall -> public void setFunction(boolean function);1498780456;Set whether this call is for a function.;public void setFunction(boolean function) {_		this.function = function__	};set,whether,this,call,is,for,a,function;public,void,set,function,boolean,function,this,function,function
SqlCall -> public void setFunction(boolean function);1530174524;Set whether this call is for a function.;public void setFunction(boolean function) {_		this.function = function__	};set,whether,this,call,is,for,a,function;public,void,set,function,boolean,function,this,function,function
SqlCall -> public void setFunction(boolean function);1530174524;Set whether this call is for a function.;public void setFunction(boolean function) {_		this.function = function__	};set,whether,this,call,is,for,a,function;public,void,set,function,boolean,function,this,function,function
SqlCall -> public void setFunction(boolean function);1542899558;Set whether this call is for a function.;public void setFunction(boolean function) {_		this.function = function__	};set,whether,this,call,is,for,a,function;public,void,set,function,boolean,function,this,function,function
SqlCall -> public SqlCall(DataSource ds, String sql);1328020251;Create a new SqlCall object with SQL, but without parameters._Must add parameters or settle with none._@param ds DataSource to obtain connections from_@param sql SQL to execute;public SqlCall(DataSource ds, String sql) {_		setDataSource(ds)__		setSql(sql)__	};create,a,new,sql,call,object,with,sql,but,without,parameters,must,add,parameters,or,settle,with,none,param,ds,data,source,to,obtain,connections,from,param,sql,sql,to,execute;public,sql,call,data,source,ds,string,sql,set,data,source,ds,set,sql,sql
SqlCall -> public SqlCall(DataSource ds, String sql);1356735495;Create a new SqlCall object with SQL, but without parameters._Must add parameters or settle with none._@param ds DataSource to obtain connections from_@param sql SQL to execute;public SqlCall(DataSource ds, String sql) {_		setDataSource(ds)__		setSql(sql)__	};create,a,new,sql,call,object,with,sql,but,without,parameters,must,add,parameters,or,settle,with,none,param,ds,data,source,to,obtain,connections,from,param,sql,sql,to,execute;public,sql,call,data,source,ds,string,sql,set,data,source,ds,set,sql,sql
SqlCall -> public SqlCall(DataSource ds, String sql);1487178248;Create a new SqlCall object with SQL, but without parameters._Must add parameters or settle with none._@param ds DataSource to obtain connections from_@param sql SQL to execute;public SqlCall(DataSource ds, String sql) {_		setDataSource(ds)__		setSql(sql)__	};create,a,new,sql,call,object,with,sql,but,without,parameters,must,add,parameters,or,settle,with,none,param,ds,data,source,to,obtain,connections,from,param,sql,sql,to,execute;public,sql,call,data,source,ds,string,sql,set,data,source,ds,set,sql,sql
SqlCall -> public SqlCall(DataSource ds, String sql);1495868221;Create a new SqlCall object with SQL, but without parameters._Must add parameters or settle with none._@param ds DataSource to obtain connections from_@param sql SQL to execute;public SqlCall(DataSource ds, String sql) {_		setDataSource(ds)__		setSql(sql)__	};create,a,new,sql,call,object,with,sql,but,without,parameters,must,add,parameters,or,settle,with,none,param,ds,data,source,to,obtain,connections,from,param,sql,sql,to,execute;public,sql,call,data,source,ds,string,sql,set,data,source,ds,set,sql,sql
SqlCall -> public SqlCall(DataSource ds, String sql);1498780456;Create a new SqlCall object with SQL, but without parameters._Must add parameters or settle with none._@param ds DataSource to obtain connections from_@param sql SQL to execute;public SqlCall(DataSource ds, String sql) {_		setDataSource(ds)__		setSql(sql)__	};create,a,new,sql,call,object,with,sql,but,without,parameters,must,add,parameters,or,settle,with,none,param,ds,data,source,to,obtain,connections,from,param,sql,sql,to,execute;public,sql,call,data,source,ds,string,sql,set,data,source,ds,set,sql,sql
SqlCall -> public SqlCall(DataSource ds, String sql);1530174524;Create a new SqlCall object with SQL, but without parameters._Must add parameters or settle with none._@param ds the DataSource to obtain connections from_@param sql the SQL to execute;public SqlCall(DataSource ds, String sql) {_		setDataSource(ds)__		setSql(sql)__	};create,a,new,sql,call,object,with,sql,but,without,parameters,must,add,parameters,or,settle,with,none,param,ds,the,data,source,to,obtain,connections,from,param,sql,the,sql,to,execute;public,sql,call,data,source,ds,string,sql,set,data,source,ds,set,sql,sql
SqlCall -> public SqlCall(DataSource ds, String sql);1530174524;Create a new SqlCall object with SQL, but without parameters._Must add parameters or settle with none._@param ds the DataSource to obtain connections from_@param sql the SQL to execute;public SqlCall(DataSource ds, String sql) {_		setDataSource(ds)__		setSql(sql)__	};create,a,new,sql,call,object,with,sql,but,without,parameters,must,add,parameters,or,settle,with,none,param,ds,the,data,source,to,obtain,connections,from,param,sql,the,sql,to,execute;public,sql,call,data,source,ds,string,sql,set,data,source,ds,set,sql,sql
SqlCall -> public SqlCall(DataSource ds, String sql);1542899558;Create a new SqlCall object with SQL, but without parameters._Must add parameters or settle with none._@param ds the DataSource to obtain connections from_@param sql the SQL to execute;public SqlCall(DataSource ds, String sql) {_		setDataSource(ds)__		setSql(sql)__	};create,a,new,sql,call,object,with,sql,but,without,parameters,must,add,parameters,or,settle,with,none,param,ds,the,data,source,to,obtain,connections,from,param,sql,the,sql,to,execute;public,sql,call,data,source,ds,string,sql,set,data,source,ds,set,sql,sql
SqlCall -> public boolean isSqlReadyForUse();1328020251;Return whether the SQL can be used as is.;public boolean isSqlReadyForUse() {_		return sqlReadyForUse__	};return,whether,the,sql,can,be,used,as,is;public,boolean,is,sql,ready,for,use,return,sql,ready,for,use
SqlCall -> public boolean isSqlReadyForUse();1356735495;Return whether the SQL can be used as is.;public boolean isSqlReadyForUse() {_		return sqlReadyForUse__	};return,whether,the,sql,can,be,used,as,is;public,boolean,is,sql,ready,for,use,return,sql,ready,for,use
SqlCall -> public boolean isSqlReadyForUse();1487178248;Return whether the SQL can be used as is.;public boolean isSqlReadyForUse() {_		return sqlReadyForUse__	};return,whether,the,sql,can,be,used,as,is;public,boolean,is,sql,ready,for,use,return,sql,ready,for,use
SqlCall -> public boolean isSqlReadyForUse();1495868221;Return whether the SQL can be used as is.;public boolean isSqlReadyForUse() {_		return sqlReadyForUse__	};return,whether,the,sql,can,be,used,as,is;public,boolean,is,sql,ready,for,use,return,sql,ready,for,use
SqlCall -> public boolean isSqlReadyForUse();1498780456;Return whether the SQL can be used as is.;public boolean isSqlReadyForUse() {_		return sqlReadyForUse__	};return,whether,the,sql,can,be,used,as,is;public,boolean,is,sql,ready,for,use,return,sql,ready,for,use
SqlCall -> public boolean isSqlReadyForUse();1530174524;Return whether the SQL can be used as is.;public boolean isSqlReadyForUse() {_		return sqlReadyForUse__	};return,whether,the,sql,can,be,used,as,is;public,boolean,is,sql,ready,for,use,return,sql,ready,for,use
SqlCall -> public boolean isSqlReadyForUse();1530174524;Return whether the SQL can be used as is.;public boolean isSqlReadyForUse() {_		return this.sqlReadyForUse__	};return,whether,the,sql,can,be,used,as,is;public,boolean,is,sql,ready,for,use,return,this,sql,ready,for,use
SqlCall -> public boolean isSqlReadyForUse();1542899558;Return whether the SQL can be used as is.;public boolean isSqlReadyForUse() {_		return this.sqlReadyForUse__	};return,whether,the,sql,can,be,used,as,is;public,boolean,is,sql,ready,for,use,return,this,sql,ready,for,use
SqlCall -> @Nullable 	public String getCallString();1498780456;Get the call string.;@Nullable_	public String getCallString() {_		return this.callString__	};get,the,call,string;nullable,public,string,get,call,string,return,this,call,string
SqlCall -> @Nullable 	public String getCallString();1530174524;Get the call string.;@Nullable_	public String getCallString() {_		return this.callString__	};get,the,call,string;nullable,public,string,get,call,string,return,this,call,string
SqlCall -> @Nullable 	public String getCallString();1530174524;Get the call string.;@Nullable_	public String getCallString() {_		return this.callString__	};get,the,call,string;nullable,public,string,get,call,string,return,this,call,string
SqlCall -> @Nullable 	public String getCallString();1542899558;Get the call string.;@Nullable_	public String getCallString() {_		return this.callString__	};get,the,call,string;nullable,public,string,get,call,string,return,this,call,string
SqlCall -> protected CallableStatementCreator newCallableStatementCreator(Map<String, ?> inParams);1328020251;Return a CallableStatementCreator to perform an operation_with this parameters._@param inParams parameters. May be <code>null</code>.;protected CallableStatementCreator newCallableStatementCreator(Map<String, ?> inParams) {_		return this.callableStatementFactory.newCallableStatementCreator(inParams)__	};return,a,callable,statement,creator,to,perform,an,operation,with,this,parameters,param,in,params,parameters,may,be,code,null,code;protected,callable,statement,creator,new,callable,statement,creator,map,string,in,params,return,this,callable,statement,factory,new,callable,statement,creator,in,params
SqlCall -> protected CallableStatementCreator newCallableStatementCreator(Map<String, ?> inParams);1356735495;Return a CallableStatementCreator to perform an operation_with this parameters._@param inParams parameters. May be {@code null}.;protected CallableStatementCreator newCallableStatementCreator(Map<String, ?> inParams) {_		return this.callableStatementFactory.newCallableStatementCreator(inParams)__	};return,a,callable,statement,creator,to,perform,an,operation,with,this,parameters,param,in,params,parameters,may,be,code,null;protected,callable,statement,creator,new,callable,statement,creator,map,string,in,params,return,this,callable,statement,factory,new,callable,statement,creator,in,params
SqlCall -> protected CallableStatementCreator newCallableStatementCreator(Map<String, ?> inParams);1487178248;Return a CallableStatementCreator to perform an operation_with this parameters._@param inParams parameters. May be {@code null}.;protected CallableStatementCreator newCallableStatementCreator(Map<String, ?> inParams) {_		return this.callableStatementFactory.newCallableStatementCreator(inParams)__	};return,a,callable,statement,creator,to,perform,an,operation,with,this,parameters,param,in,params,parameters,may,be,code,null;protected,callable,statement,creator,new,callable,statement,creator,map,string,in,params,return,this,callable,statement,factory,new,callable,statement,creator,in,params
SqlCall -> public String getCallString();1328020251;Get the call string.;public String getCallString() {_		return this.callString__	};get,the,call,string;public,string,get,call,string,return,this,call,string
SqlCall -> public String getCallString();1356735495;Get the call string.;public String getCallString() {_		return this.callString__	};get,the,call,string;public,string,get,call,string,return,this,call,string
SqlCall -> public String getCallString();1487178248;Get the call string.;public String getCallString() {_		return this.callString__	};get,the,call,string;public,string,get,call,string,return,this,call,string
SqlCall -> public String getCallString();1495868221;Get the call string.;public String getCallString() {_		return this.callString__	};get,the,call,string;public,string,get,call,string,return,this,call,string
SqlCall -> @Override 	protected final void compileInternal();1328020251;Overridden method to configure the CallableStatementCreatorFactory_based on our declared parameters._@see RdbmsOperation#compileInternal();@Override_	protected final void compileInternal() {_		if (isSqlReadyForUse()) {_			this.callString = getSql()__		}_		else {_			List<SqlParameter> parameters = getDeclaredParameters()__			int parameterCount = 0__			if (isFunction()) {_				this.callString = "{? = call " + getSql() + "("__				parameterCount = -1__			}_			else {_				this.callString = "{call " + getSql() + "("__			}_			for (SqlParameter parameter : parameters) {_				if (!(parameter.isResultsParameter())) {_					if (parameterCount > 0) {_						this.callString += ", "__					}_					if (parameterCount >= 0) {_						this.callString += "?"__					}_					parameterCount++__				}_			}_			this.callString += ")}"__		}_		if (logger.isDebugEnabled()) {_			logger.debug("Compiled stored procedure. Call string is [" + getCallString() + "]")__		}__		this.callableStatementFactory = new CallableStatementCreatorFactory(getCallString(), getDeclaredParameters())__		this.callableStatementFactory.setResultSetType(getResultSetType())__		this.callableStatementFactory.setUpdatableResults(isUpdatableResults())__		this.callableStatementFactory.setNativeJdbcExtractor(getJdbcTemplate().getNativeJdbcExtractor())___		onCompileInternal()__	};overridden,method,to,configure,the,callable,statement,creator,factory,based,on,our,declared,parameters,see,rdbms,operation,compile,internal;override,protected,final,void,compile,internal,if,is,sql,ready,for,use,this,call,string,get,sql,else,list,sql,parameter,parameters,get,declared,parameters,int,parameter,count,0,if,is,function,this,call,string,call,get,sql,parameter,count,1,else,this,call,string,call,get,sql,for,sql,parameter,parameter,parameters,if,parameter,is,results,parameter,if,parameter,count,0,this,call,string,if,parameter,count,0,this,call,string,parameter,count,this,call,string,if,logger,is,debug,enabled,logger,debug,compiled,stored,procedure,call,string,is,get,call,string,this,callable,statement,factory,new,callable,statement,creator,factory,get,call,string,get,declared,parameters,this,callable,statement,factory,set,result,set,type,get,result,set,type,this,callable,statement,factory,set,updatable,results,is,updatable,results,this,callable,statement,factory,set,native,jdbc,extractor,get,jdbc,template,get,native,jdbc,extractor,on,compile,internal
SqlCall -> @Override 	protected final void compileInternal();1356735495;Overridden method to configure the CallableStatementCreatorFactory_based on our declared parameters._@see RdbmsOperation#compileInternal();@Override_	protected final void compileInternal() {_		if (isSqlReadyForUse()) {_			this.callString = getSql()__		}_		else {_			List<SqlParameter> parameters = getDeclaredParameters()__			int parameterCount = 0__			if (isFunction()) {_				this.callString = "{? = call " + getSql() + "("__				parameterCount = -1__			}_			else {_				this.callString = "{call " + getSql() + "("__			}_			for (SqlParameter parameter : parameters) {_				if (!(parameter.isResultsParameter())) {_					if (parameterCount > 0) {_						this.callString += ", "__					}_					if (parameterCount >= 0) {_						this.callString += "?"__					}_					parameterCount++__				}_			}_			this.callString += ")}"__		}_		if (logger.isDebugEnabled()) {_			logger.debug("Compiled stored procedure. Call string is [" + getCallString() + "]")__		}__		this.callableStatementFactory = new CallableStatementCreatorFactory(getCallString(), getDeclaredParameters())__		this.callableStatementFactory.setResultSetType(getResultSetType())__		this.callableStatementFactory.setUpdatableResults(isUpdatableResults())__		this.callableStatementFactory.setNativeJdbcExtractor(getJdbcTemplate().getNativeJdbcExtractor())___		onCompileInternal()__	};overridden,method,to,configure,the,callable,statement,creator,factory,based,on,our,declared,parameters,see,rdbms,operation,compile,internal;override,protected,final,void,compile,internal,if,is,sql,ready,for,use,this,call,string,get,sql,else,list,sql,parameter,parameters,get,declared,parameters,int,parameter,count,0,if,is,function,this,call,string,call,get,sql,parameter,count,1,else,this,call,string,call,get,sql,for,sql,parameter,parameter,parameters,if,parameter,is,results,parameter,if,parameter,count,0,this,call,string,if,parameter,count,0,this,call,string,parameter,count,this,call,string,if,logger,is,debug,enabled,logger,debug,compiled,stored,procedure,call,string,is,get,call,string,this,callable,statement,factory,new,callable,statement,creator,factory,get,call,string,get,declared,parameters,this,callable,statement,factory,set,result,set,type,get,result,set,type,this,callable,statement,factory,set,updatable,results,is,updatable,results,this,callable,statement,factory,set,native,jdbc,extractor,get,jdbc,template,get,native,jdbc,extractor,on,compile,internal
SqlCall -> @Override 	protected final void compileInternal();1487178248;Overridden method to configure the CallableStatementCreatorFactory_based on our declared parameters._@see RdbmsOperation#compileInternal();@Override_	protected final void compileInternal() {_		if (isSqlReadyForUse()) {_			this.callString = getSql()__		}_		else {_			List<SqlParameter> parameters = getDeclaredParameters()__			int parameterCount = 0__			if (isFunction()) {_				this.callString = "{? = call " + getSql() + "("__				parameterCount = -1__			}_			else {_				this.callString = "{call " + getSql() + "("__			}_			for (SqlParameter parameter : parameters) {_				if (!(parameter.isResultsParameter())) {_					if (parameterCount > 0) {_						this.callString += ", "__					}_					if (parameterCount >= 0) {_						this.callString += "?"__					}_					parameterCount++__				}_			}_			this.callString += ")}"__		}_		if (logger.isDebugEnabled()) {_			logger.debug("Compiled stored procedure. Call string is [" + getCallString() + "]")__		}__		this.callableStatementFactory = new CallableStatementCreatorFactory(getCallString(), getDeclaredParameters())__		this.callableStatementFactory.setResultSetType(getResultSetType())__		this.callableStatementFactory.setUpdatableResults(isUpdatableResults())___		onCompileInternal()__	};overridden,method,to,configure,the,callable,statement,creator,factory,based,on,our,declared,parameters,see,rdbms,operation,compile,internal;override,protected,final,void,compile,internal,if,is,sql,ready,for,use,this,call,string,get,sql,else,list,sql,parameter,parameters,get,declared,parameters,int,parameter,count,0,if,is,function,this,call,string,call,get,sql,parameter,count,1,else,this,call,string,call,get,sql,for,sql,parameter,parameter,parameters,if,parameter,is,results,parameter,if,parameter,count,0,this,call,string,if,parameter,count,0,this,call,string,parameter,count,this,call,string,if,logger,is,debug,enabled,logger,debug,compiled,stored,procedure,call,string,is,get,call,string,this,callable,statement,factory,new,callable,statement,creator,factory,get,call,string,get,declared,parameters,this,callable,statement,factory,set,result,set,type,get,result,set,type,this,callable,statement,factory,set,updatable,results,is,updatable,results,on,compile,internal
SqlCall -> @Override 	protected final void compileInternal();1495868221;Overridden method to configure the CallableStatementCreatorFactory_based on our declared parameters._@see RdbmsOperation#compileInternal();@Override_	protected final void compileInternal() {_		if (isSqlReadyForUse()) {_			this.callString = getSql()__		}_		else {_			List<SqlParameter> parameters = getDeclaredParameters()__			int parameterCount = 0__			if (isFunction()) {_				this.callString = "{? = call " + getSql() + "("__				parameterCount = -1__			}_			else {_				this.callString = "{call " + getSql() + "("__			}_			for (SqlParameter parameter : parameters) {_				if (!(parameter.isResultsParameter())) {_					if (parameterCount > 0) {_						this.callString += ", "__					}_					if (parameterCount >= 0) {_						this.callString += "?"__					}_					parameterCount++__				}_			}_			this.callString += ")}"__		}_		if (logger.isDebugEnabled()) {_			logger.debug("Compiled stored procedure. Call string is [" + getCallString() + "]")__		}__		this.callableStatementFactory = new CallableStatementCreatorFactory(getCallString(), getDeclaredParameters())__		this.callableStatementFactory.setResultSetType(getResultSetType())__		this.callableStatementFactory.setUpdatableResults(isUpdatableResults())___		onCompileInternal()__	};overridden,method,to,configure,the,callable,statement,creator,factory,based,on,our,declared,parameters,see,rdbms,operation,compile,internal;override,protected,final,void,compile,internal,if,is,sql,ready,for,use,this,call,string,get,sql,else,list,sql,parameter,parameters,get,declared,parameters,int,parameter,count,0,if,is,function,this,call,string,call,get,sql,parameter,count,1,else,this,call,string,call,get,sql,for,sql,parameter,parameter,parameters,if,parameter,is,results,parameter,if,parameter,count,0,this,call,string,if,parameter,count,0,this,call,string,parameter,count,this,call,string,if,logger,is,debug,enabled,logger,debug,compiled,stored,procedure,call,string,is,get,call,string,this,callable,statement,factory,new,callable,statement,creator,factory,get,call,string,get,declared,parameters,this,callable,statement,factory,set,result,set,type,get,result,set,type,this,callable,statement,factory,set,updatable,results,is,updatable,results,on,compile,internal
SqlCall -> @Override 	protected final void compileInternal();1498780456;Overridden method to configure the CallableStatementCreatorFactory_based on our declared parameters._@see RdbmsOperation#compileInternal();@Override_	protected final void compileInternal() {_		if (isSqlReadyForUse()) {_			this.callString = getSql()__		}_		else {_			List<SqlParameter> parameters = getDeclaredParameters()__			int parameterCount = 0__			if (isFunction()) {_				this.callString = "{? = call " + getSql() + "("__				parameterCount = -1__			}_			else {_				this.callString = "{call " + getSql() + "("__			}_			for (SqlParameter parameter : parameters) {_				if (!(parameter.isResultsParameter())) {_					if (parameterCount > 0) {_						this.callString += ", "__					}_					if (parameterCount >= 0) {_						this.callString += "?"__					}_					parameterCount++__				}_			}_			this.callString += ")}"__		}_		if (logger.isDebugEnabled()) {_			logger.debug("Compiled stored procedure. Call string is [" + this.callString + "]")__		}__		this.callableStatementFactory = new CallableStatementCreatorFactory(this.callString, getDeclaredParameters())__		this.callableStatementFactory.setResultSetType(getResultSetType())__		this.callableStatementFactory.setUpdatableResults(isUpdatableResults())___		onCompileInternal()__	};overridden,method,to,configure,the,callable,statement,creator,factory,based,on,our,declared,parameters,see,rdbms,operation,compile,internal;override,protected,final,void,compile,internal,if,is,sql,ready,for,use,this,call,string,get,sql,else,list,sql,parameter,parameters,get,declared,parameters,int,parameter,count,0,if,is,function,this,call,string,call,get,sql,parameter,count,1,else,this,call,string,call,get,sql,for,sql,parameter,parameter,parameters,if,parameter,is,results,parameter,if,parameter,count,0,this,call,string,if,parameter,count,0,this,call,string,parameter,count,this,call,string,if,logger,is,debug,enabled,logger,debug,compiled,stored,procedure,call,string,is,this,call,string,this,callable,statement,factory,new,callable,statement,creator,factory,this,call,string,get,declared,parameters,this,callable,statement,factory,set,result,set,type,get,result,set,type,this,callable,statement,factory,set,updatable,results,is,updatable,results,on,compile,internal
SqlCall -> @Override 	protected final void compileInternal();1530174524;Overridden method to configure the CallableStatementCreatorFactory_based on our declared parameters._@see RdbmsOperation#compileInternal();@Override_	protected final void compileInternal() {_		if (isSqlReadyForUse()) {_			this.callString = getSql()__		}_		else {_			List<SqlParameter> parameters = getDeclaredParameters()__			int parameterCount = 0__			if (isFunction()) {_				this.callString = "{? = call " + getSql() + "("__				parameterCount = -1__			}_			else {_				this.callString = "{call " + getSql() + "("__			}_			for (SqlParameter parameter : parameters) {_				if (!(parameter.isResultsParameter())) {_					if (parameterCount > 0) {_						this.callString += ", "__					}_					if (parameterCount >= 0) {_						this.callString += "?"__					}_					parameterCount++__				}_			}_			this.callString += ")}"__		}_		if (logger.isDebugEnabled()) {_			logger.debug("Compiled stored procedure. Call string is [" + this.callString + "]")__		}__		this.callableStatementFactory = new CallableStatementCreatorFactory(this.callString, getDeclaredParameters())__		this.callableStatementFactory.setResultSetType(getResultSetType())__		this.callableStatementFactory.setUpdatableResults(isUpdatableResults())___		onCompileInternal()__	};overridden,method,to,configure,the,callable,statement,creator,factory,based,on,our,declared,parameters,see,rdbms,operation,compile,internal;override,protected,final,void,compile,internal,if,is,sql,ready,for,use,this,call,string,get,sql,else,list,sql,parameter,parameters,get,declared,parameters,int,parameter,count,0,if,is,function,this,call,string,call,get,sql,parameter,count,1,else,this,call,string,call,get,sql,for,sql,parameter,parameter,parameters,if,parameter,is,results,parameter,if,parameter,count,0,this,call,string,if,parameter,count,0,this,call,string,parameter,count,this,call,string,if,logger,is,debug,enabled,logger,debug,compiled,stored,procedure,call,string,is,this,call,string,this,callable,statement,factory,new,callable,statement,creator,factory,this,call,string,get,declared,parameters,this,callable,statement,factory,set,result,set,type,get,result,set,type,this,callable,statement,factory,set,updatable,results,is,updatable,results,on,compile,internal
SqlCall -> @Override 	protected final void compileInternal();1530174524;Overridden method to configure the CallableStatementCreatorFactory_based on our declared parameters._@see RdbmsOperation#compileInternal();@Override_	protected final void compileInternal() {_		if (isSqlReadyForUse()) {_			this.callString = getSql()__		}_		else {_			List<SqlParameter> parameters = getDeclaredParameters()__			int parameterCount = 0__			if (isFunction()) {_				this.callString = "{? = call " + getSql() + "("__				parameterCount = -1__			}_			else {_				this.callString = "{call " + getSql() + "("__			}_			for (SqlParameter parameter : parameters) {_				if (!(parameter.isResultsParameter())) {_					if (parameterCount > 0) {_						this.callString += ", "__					}_					if (parameterCount >= 0) {_						this.callString += "?"__					}_					parameterCount++__				}_			}_			this.callString += ")}"__		}_		if (logger.isDebugEnabled()) {_			logger.debug("Compiled stored procedure. Call string is [" + this.callString + "]")__		}__		this.callableStatementFactory = new CallableStatementCreatorFactory(this.callString, getDeclaredParameters())__		this.callableStatementFactory.setResultSetType(getResultSetType())__		this.callableStatementFactory.setUpdatableResults(isUpdatableResults())___		onCompileInternal()__	};overridden,method,to,configure,the,callable,statement,creator,factory,based,on,our,declared,parameters,see,rdbms,operation,compile,internal;override,protected,final,void,compile,internal,if,is,sql,ready,for,use,this,call,string,get,sql,else,list,sql,parameter,parameters,get,declared,parameters,int,parameter,count,0,if,is,function,this,call,string,call,get,sql,parameter,count,1,else,this,call,string,call,get,sql,for,sql,parameter,parameter,parameters,if,parameter,is,results,parameter,if,parameter,count,0,this,call,string,if,parameter,count,0,this,call,string,parameter,count,this,call,string,if,logger,is,debug,enabled,logger,debug,compiled,stored,procedure,call,string,is,this,call,string,this,callable,statement,factory,new,callable,statement,creator,factory,this,call,string,get,declared,parameters,this,callable,statement,factory,set,result,set,type,get,result,set,type,this,callable,statement,factory,set,updatable,results,is,updatable,results,on,compile,internal
SqlCall -> @Override 	protected final void compileInternal();1542899558;Overridden method to configure the CallableStatementCreatorFactory_based on our declared parameters._@see RdbmsOperation#compileInternal();@Override_	protected final void compileInternal() {_		if (isSqlReadyForUse()) {_			this.callString = resolveSql()__		}_		else {_			StringBuilder callString = new StringBuilder(32)__			List<SqlParameter> parameters = getDeclaredParameters()__			int parameterCount = 0__			if (isFunction()) {_				callString.append("{? = call ").append(resolveSql()).append('(')__				parameterCount = -1__			}_			else {_				callString.append("{call ").append(resolveSql()).append('(')__			}_			for (SqlParameter parameter : parameters) {_				if (!parameter.isResultsParameter()) {_					if (parameterCount > 0) {_						callString.append(", ")__					}_					if (parameterCount >= 0) {_						callString.append('?')__					}_					parameterCount++__				}_			}_			callString.append(")}")__			this.callString = callString.toString()__		}_		if (logger.isDebugEnabled()) {_			logger.debug("Compiled stored procedure. Call string is [" + this.callString + "]")__		}__		this.callableStatementFactory = new CallableStatementCreatorFactory(this.callString, getDeclaredParameters())__		this.callableStatementFactory.setResultSetType(getResultSetType())__		this.callableStatementFactory.setUpdatableResults(isUpdatableResults())___		onCompileInternal()__	};overridden,method,to,configure,the,callable,statement,creator,factory,based,on,our,declared,parameters,see,rdbms,operation,compile,internal;override,protected,final,void,compile,internal,if,is,sql,ready,for,use,this,call,string,resolve,sql,else,string,builder,call,string,new,string,builder,32,list,sql,parameter,parameters,get,declared,parameters,int,parameter,count,0,if,is,function,call,string,append,call,append,resolve,sql,append,parameter,count,1,else,call,string,append,call,append,resolve,sql,append,for,sql,parameter,parameter,parameters,if,parameter,is,results,parameter,if,parameter,count,0,call,string,append,if,parameter,count,0,call,string,append,parameter,count,call,string,append,this,call,string,call,string,to,string,if,logger,is,debug,enabled,logger,debug,compiled,stored,procedure,call,string,is,this,call,string,this,callable,statement,factory,new,callable,statement,creator,factory,this,call,string,get,declared,parameters,this,callable,statement,factory,set,result,set,type,get,result,set,type,this,callable,statement,factory,set,updatable,results,is,updatable,results,on,compile,internal
