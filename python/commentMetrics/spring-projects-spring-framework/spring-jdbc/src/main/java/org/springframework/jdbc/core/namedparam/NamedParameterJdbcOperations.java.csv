# id;timestamp;commentText;codeText;commentWords;codeWords
NamedParameterJdbcOperations -> void query(String sql, SqlParameterSource paramSource, RowCallbackHandler rch) 			throws DataAccessException_;1328020251;Query given SQL to create a prepared statement from SQL and a list of_arguments to bind to the query, reading the ResultSet on a per-row basis_with a RowCallbackHandler._@param sql SQL query to execute_@param paramSource container of arguments to bind to the query_@param rch object that will extract results, one row at a time_@throws DataAccessException if the query fails;void query(String sql, SqlParameterSource paramSource, RowCallbackHandler rch)_			throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,reading,the,result,set,on,a,per,row,basis,with,a,row,callback,handler,param,sql,sql,query,to,execute,param,param,source,container,of,arguments,to,bind,to,the,query,param,rch,object,that,will,extract,results,one,row,at,a,time,throws,data,access,exception,if,the,query,fails;void,query,string,sql,sql,parameter,source,param,source,row,callback,handler,rch,throws,data,access,exception
NamedParameterJdbcOperations -> void query(String sql, SqlParameterSource paramSource, RowCallbackHandler rch) 			throws DataAccessException_;1356735495;Query given SQL to create a prepared statement from SQL and a list of_arguments to bind to the query, reading the ResultSet on a per-row basis_with a RowCallbackHandler._@param sql SQL query to execute_@param paramSource container of arguments to bind to the query_@param rch object that will extract results, one row at a time_@throws DataAccessException if the query fails;void query(String sql, SqlParameterSource paramSource, RowCallbackHandler rch)_			throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,reading,the,result,set,on,a,per,row,basis,with,a,row,callback,handler,param,sql,sql,query,to,execute,param,param,source,container,of,arguments,to,bind,to,the,query,param,rch,object,that,will,extract,results,one,row,at,a,time,throws,data,access,exception,if,the,query,fails;void,query,string,sql,sql,parameter,source,param,source,row,callback,handler,rch,throws,data,access,exception
NamedParameterJdbcOperations -> void query(String sql, SqlParameterSource paramSource, RowCallbackHandler rch) 			throws DataAccessException_;1362408075;Query given SQL to create a prepared statement from SQL and a list of_arguments to bind to the query, reading the ResultSet on a per-row basis_with a RowCallbackHandler._@param sql SQL query to execute_@param paramSource container of arguments to bind to the query_@param rch object that will extract results, one row at a time_@throws DataAccessException if the query fails;void query(String sql, SqlParameterSource paramSource, RowCallbackHandler rch)_			throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,reading,the,result,set,on,a,per,row,basis,with,a,row,callback,handler,param,sql,sql,query,to,execute,param,param,source,container,of,arguments,to,bind,to,the,query,param,rch,object,that,will,extract,results,one,row,at,a,time,throws,data,access,exception,if,the,query,fails;void,query,string,sql,sql,parameter,source,param,source,row,callback,handler,rch,throws,data,access,exception
NamedParameterJdbcOperations -> void query(String sql, SqlParameterSource paramSource, RowCallbackHandler rch) 			throws DataAccessException_;1419966315;Query given SQL to create a prepared statement from SQL and a list of_arguments to bind to the query, reading the ResultSet on a per-row basis_with a RowCallbackHandler._@param sql SQL query to execute_@param paramSource container of arguments to bind to the query_@param rch object that will extract results, one row at a time_@throws DataAccessException if the query fails;void query(String sql, SqlParameterSource paramSource, RowCallbackHandler rch)_			throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,reading,the,result,set,on,a,per,row,basis,with,a,row,callback,handler,param,sql,sql,query,to,execute,param,param,source,container,of,arguments,to,bind,to,the,query,param,rch,object,that,will,extract,results,one,row,at,a,time,throws,data,access,exception,if,the,query,fails;void,query,string,sql,sql,parameter,source,param,source,row,callback,handler,rch,throws,data,access,exception
NamedParameterJdbcOperations -> void query(String sql, SqlParameterSource paramSource, RowCallbackHandler rch) 			throws DataAccessException_;1491113276;Query given SQL to create a prepared statement from SQL and a list of_arguments to bind to the query, reading the ResultSet on a per-row basis_with a RowCallbackHandler._@param sql SQL query to execute_@param paramSource container of arguments to bind to the query_@param rch object that will extract results, one row at a time_@throws DataAccessException if the query fails;void query(String sql, SqlParameterSource paramSource, RowCallbackHandler rch)_			throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,reading,the,result,set,on,a,per,row,basis,with,a,row,callback,handler,param,sql,sql,query,to,execute,param,param,source,container,of,arguments,to,bind,to,the,query,param,rch,object,that,will,extract,results,one,row,at,a,time,throws,data,access,exception,if,the,query,fails;void,query,string,sql,sql,parameter,source,param,source,row,callback,handler,rch,throws,data,access,exception
NamedParameterJdbcOperations -> void query(String sql, SqlParameterSource paramSource, RowCallbackHandler rch) 			throws DataAccessException_;1495868221;Query given SQL to create a prepared statement from SQL and a list of_arguments to bind to the query, reading the ResultSet on a per-row basis_with a RowCallbackHandler._@param sql SQL query to execute_@param paramSource container of arguments to bind to the query_@param rch object that will extract results, one row at a time_@throws DataAccessException if the query fails;void query(String sql, SqlParameterSource paramSource, RowCallbackHandler rch)_			throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,reading,the,result,set,on,a,per,row,basis,with,a,row,callback,handler,param,sql,sql,query,to,execute,param,param,source,container,of,arguments,to,bind,to,the,query,param,rch,object,that,will,extract,results,one,row,at,a,time,throws,data,access,exception,if,the,query,fails;void,query,string,sql,sql,parameter,source,param,source,row,callback,handler,rch,throws,data,access,exception
NamedParameterJdbcOperations -> void query(String sql, SqlParameterSource paramSource, RowCallbackHandler rch) 			throws DataAccessException_;1496837955;Query given SQL to create a prepared statement from SQL and a list of_arguments to bind to the query, reading the ResultSet on a per-row basis_with a RowCallbackHandler._@param sql SQL query to execute_@param paramSource container of arguments to bind to the query_@param rch object that will extract results, one row at a time_@throws DataAccessException if the query fails;void query(String sql, SqlParameterSource paramSource, RowCallbackHandler rch)_			throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,reading,the,result,set,on,a,per,row,basis,with,a,row,callback,handler,param,sql,sql,query,to,execute,param,param,source,container,of,arguments,to,bind,to,the,query,param,rch,object,that,will,extract,results,one,row,at,a,time,throws,data,access,exception,if,the,query,fails;void,query,string,sql,sql,parameter,source,param,source,row,callback,handler,rch,throws,data,access,exception
NamedParameterJdbcOperations -> void query(String sql, SqlParameterSource paramSource, RowCallbackHandler rch) 			throws DataAccessException_;1502974979;Query given SQL to create a prepared statement from SQL and a list of_arguments to bind to the query, reading the ResultSet on a per-row basis_with a RowCallbackHandler._@param sql SQL query to execute_@param paramSource container of arguments to bind to the query_@param rch object that will extract results, one row at a time_@throws DataAccessException if the query fails;void query(String sql, SqlParameterSource paramSource, RowCallbackHandler rch)_			throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,reading,the,result,set,on,a,per,row,basis,with,a,row,callback,handler,param,sql,sql,query,to,execute,param,param,source,container,of,arguments,to,bind,to,the,query,param,rch,object,that,will,extract,results,one,row,at,a,time,throws,data,access,exception,if,the,query,fails;void,query,string,sql,sql,parameter,source,param,source,row,callback,handler,rch,throws,data,access,exception
NamedParameterJdbcOperations -> void query(String sql, SqlParameterSource paramSource, RowCallbackHandler rch) 			throws DataAccessException_;1511712999;Query given SQL to create a prepared statement from SQL and a list of_arguments to bind to the query, reading the ResultSet on a per-row basis_with a RowCallbackHandler._@param sql SQL query to execute_@param paramSource container of arguments to bind to the query_@param rch object that will extract results, one row at a time_@throws DataAccessException if the query fails;void query(String sql, SqlParameterSource paramSource, RowCallbackHandler rch)_			throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,reading,the,result,set,on,a,per,row,basis,with,a,row,callback,handler,param,sql,sql,query,to,execute,param,param,source,container,of,arguments,to,bind,to,the,query,param,rch,object,that,will,extract,results,one,row,at,a,time,throws,data,access,exception,if,the,query,fails;void,query,string,sql,sql,parameter,source,param,source,row,callback,handler,rch,throws,data,access,exception
NamedParameterJdbcOperations -> void query(String sql, SqlParameterSource paramSource, RowCallbackHandler rch) 			throws DataAccessException_;1530174524;Query given SQL to create a prepared statement from SQL and a list of_arguments to bind to the query, reading the ResultSet on a per-row basis_with a RowCallbackHandler._@param sql the SQL query to execute_@param paramSource container of arguments to bind to the query_@param rch object that will extract results, one row at a time_@throws DataAccessException if the query fails;void query(String sql, SqlParameterSource paramSource, RowCallbackHandler rch)_			throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,reading,the,result,set,on,a,per,row,basis,with,a,row,callback,handler,param,sql,the,sql,query,to,execute,param,param,source,container,of,arguments,to,bind,to,the,query,param,rch,object,that,will,extract,results,one,row,at,a,time,throws,data,access,exception,if,the,query,fails;void,query,string,sql,sql,parameter,source,param,source,row,callback,handler,rch,throws,data,access,exception
NamedParameterJdbcOperations -> int update(String sql, SqlParameterSource paramSource, KeyHolder generatedKeyHolder) 			throws DataAccessException_;1328020251;Issue an update via a prepared statement, binding the given arguments,_returning generated keys._@param sql SQL containing named parameters_@param paramSource container of arguments and SQL types to bind to the query_@param generatedKeyHolder KeyHolder that will hold the generated keys_@return the number of rows affected_@throws org.springframework.dao.DataAccessException if there is any problem issuing the update_@see MapSqlParameterSource_@see org.springframework.jdbc.support.GeneratedKeyHolder;int update(String sql, SqlParameterSource paramSource, KeyHolder generatedKeyHolder)_			throws DataAccessException_;issue,an,update,via,a,prepared,statement,binding,the,given,arguments,returning,generated,keys,param,sql,sql,containing,named,parameters,param,param,source,container,of,arguments,and,sql,types,to,bind,to,the,query,param,generated,key,holder,key,holder,that,will,hold,the,generated,keys,return,the,number,of,rows,affected,throws,org,springframework,dao,data,access,exception,if,there,is,any,problem,issuing,the,update,see,map,sql,parameter,source,see,org,springframework,jdbc,support,generated,key,holder;int,update,string,sql,sql,parameter,source,param,source,key,holder,generated,key,holder,throws,data,access,exception
NamedParameterJdbcOperations -> int update(String sql, SqlParameterSource paramSource, KeyHolder generatedKeyHolder) 			throws DataAccessException_;1356735495;Issue an update via a prepared statement, binding the given arguments,_returning generated keys._@param sql SQL containing named parameters_@param paramSource container of arguments and SQL types to bind to the query_@param generatedKeyHolder KeyHolder that will hold the generated keys_@return the number of rows affected_@throws org.springframework.dao.DataAccessException if there is any problem issuing the update_@see MapSqlParameterSource_@see org.springframework.jdbc.support.GeneratedKeyHolder;int update(String sql, SqlParameterSource paramSource, KeyHolder generatedKeyHolder)_			throws DataAccessException_;issue,an,update,via,a,prepared,statement,binding,the,given,arguments,returning,generated,keys,param,sql,sql,containing,named,parameters,param,param,source,container,of,arguments,and,sql,types,to,bind,to,the,query,param,generated,key,holder,key,holder,that,will,hold,the,generated,keys,return,the,number,of,rows,affected,throws,org,springframework,dao,data,access,exception,if,there,is,any,problem,issuing,the,update,see,map,sql,parameter,source,see,org,springframework,jdbc,support,generated,key,holder;int,update,string,sql,sql,parameter,source,param,source,key,holder,generated,key,holder,throws,data,access,exception
NamedParameterJdbcOperations -> int update(String sql, SqlParameterSource paramSource, KeyHolder generatedKeyHolder) 			throws DataAccessException_;1362408075;Issue an update via a prepared statement, binding the given arguments,_returning generated keys._@param sql SQL containing named parameters_@param paramSource container of arguments and SQL types to bind to the query_@param generatedKeyHolder KeyHolder that will hold the generated keys_@return the number of rows affected_@throws org.springframework.dao.DataAccessException if there is any problem issuing the update_@see MapSqlParameterSource_@see org.springframework.jdbc.support.GeneratedKeyHolder;int update(String sql, SqlParameterSource paramSource, KeyHolder generatedKeyHolder)_			throws DataAccessException_;issue,an,update,via,a,prepared,statement,binding,the,given,arguments,returning,generated,keys,param,sql,sql,containing,named,parameters,param,param,source,container,of,arguments,and,sql,types,to,bind,to,the,query,param,generated,key,holder,key,holder,that,will,hold,the,generated,keys,return,the,number,of,rows,affected,throws,org,springframework,dao,data,access,exception,if,there,is,any,problem,issuing,the,update,see,map,sql,parameter,source,see,org,springframework,jdbc,support,generated,key,holder;int,update,string,sql,sql,parameter,source,param,source,key,holder,generated,key,holder,throws,data,access,exception
NamedParameterJdbcOperations -> int update(String sql, SqlParameterSource paramSource, KeyHolder generatedKeyHolder) 			throws DataAccessException_;1419966315;Issue an update via a prepared statement, binding the given arguments,_returning generated keys._@param sql SQL containing named parameters_@param paramSource container of arguments and SQL types to bind to the query_@param generatedKeyHolder KeyHolder that will hold the generated keys_@return the number of rows affected_@throws org.springframework.dao.DataAccessException if there is any problem issuing the update_@see MapSqlParameterSource_@see org.springframework.jdbc.support.GeneratedKeyHolder;int update(String sql, SqlParameterSource paramSource, KeyHolder generatedKeyHolder)_			throws DataAccessException_;issue,an,update,via,a,prepared,statement,binding,the,given,arguments,returning,generated,keys,param,sql,sql,containing,named,parameters,param,param,source,container,of,arguments,and,sql,types,to,bind,to,the,query,param,generated,key,holder,key,holder,that,will,hold,the,generated,keys,return,the,number,of,rows,affected,throws,org,springframework,dao,data,access,exception,if,there,is,any,problem,issuing,the,update,see,map,sql,parameter,source,see,org,springframework,jdbc,support,generated,key,holder;int,update,string,sql,sql,parameter,source,param,source,key,holder,generated,key,holder,throws,data,access,exception
NamedParameterJdbcOperations -> int update(String sql, SqlParameterSource paramSource, KeyHolder generatedKeyHolder) 			throws DataAccessException_;1491113276;Issue an update via a prepared statement, binding the given arguments,_returning generated keys._@param sql SQL containing named parameters_@param paramSource container of arguments and SQL types to bind to the query_@param generatedKeyHolder KeyHolder that will hold the generated keys_@return the number of rows affected_@throws org.springframework.dao.DataAccessException if there is any problem issuing the update_@see MapSqlParameterSource_@see org.springframework.jdbc.support.GeneratedKeyHolder;int update(String sql, SqlParameterSource paramSource, KeyHolder generatedKeyHolder)_			throws DataAccessException_;issue,an,update,via,a,prepared,statement,binding,the,given,arguments,returning,generated,keys,param,sql,sql,containing,named,parameters,param,param,source,container,of,arguments,and,sql,types,to,bind,to,the,query,param,generated,key,holder,key,holder,that,will,hold,the,generated,keys,return,the,number,of,rows,affected,throws,org,springframework,dao,data,access,exception,if,there,is,any,problem,issuing,the,update,see,map,sql,parameter,source,see,org,springframework,jdbc,support,generated,key,holder;int,update,string,sql,sql,parameter,source,param,source,key,holder,generated,key,holder,throws,data,access,exception
NamedParameterJdbcOperations -> int update(String sql, SqlParameterSource paramSource, KeyHolder generatedKeyHolder) 			throws DataAccessException_;1495868221;Issue an update via a prepared statement, binding the given arguments,_returning generated keys._@param sql SQL containing named parameters_@param paramSource container of arguments and SQL types to bind to the query_@param generatedKeyHolder KeyHolder that will hold the generated keys_@return the number of rows affected_@throws org.springframework.dao.DataAccessException if there is any problem issuing the update_@see MapSqlParameterSource_@see org.springframework.jdbc.support.GeneratedKeyHolder;int update(String sql, SqlParameterSource paramSource, KeyHolder generatedKeyHolder)_			throws DataAccessException_;issue,an,update,via,a,prepared,statement,binding,the,given,arguments,returning,generated,keys,param,sql,sql,containing,named,parameters,param,param,source,container,of,arguments,and,sql,types,to,bind,to,the,query,param,generated,key,holder,key,holder,that,will,hold,the,generated,keys,return,the,number,of,rows,affected,throws,org,springframework,dao,data,access,exception,if,there,is,any,problem,issuing,the,update,see,map,sql,parameter,source,see,org,springframework,jdbc,support,generated,key,holder;int,update,string,sql,sql,parameter,source,param,source,key,holder,generated,key,holder,throws,data,access,exception
NamedParameterJdbcOperations -> int update(String sql, SqlParameterSource paramSource, KeyHolder generatedKeyHolder) 			throws DataAccessException_;1496837955;Issue an update via a prepared statement, binding the given arguments,_returning generated keys._@param sql SQL containing named parameters_@param paramSource container of arguments and SQL types to bind to the query_@param generatedKeyHolder KeyHolder that will hold the generated keys_@return the number of rows affected_@throws org.springframework.dao.DataAccessException if there is any problem issuing the update_@see MapSqlParameterSource_@see org.springframework.jdbc.support.GeneratedKeyHolder;int update(String sql, SqlParameterSource paramSource, KeyHolder generatedKeyHolder)_			throws DataAccessException_;issue,an,update,via,a,prepared,statement,binding,the,given,arguments,returning,generated,keys,param,sql,sql,containing,named,parameters,param,param,source,container,of,arguments,and,sql,types,to,bind,to,the,query,param,generated,key,holder,key,holder,that,will,hold,the,generated,keys,return,the,number,of,rows,affected,throws,org,springframework,dao,data,access,exception,if,there,is,any,problem,issuing,the,update,see,map,sql,parameter,source,see,org,springframework,jdbc,support,generated,key,holder;int,update,string,sql,sql,parameter,source,param,source,key,holder,generated,key,holder,throws,data,access,exception
NamedParameterJdbcOperations -> int update(String sql, SqlParameterSource paramSource, KeyHolder generatedKeyHolder) 			throws DataAccessException_;1502974979;Issue an update via a prepared statement, binding the given arguments,_returning generated keys._@param sql SQL containing named parameters_@param paramSource container of arguments and SQL types to bind to the query_@param generatedKeyHolder KeyHolder that will hold the generated keys_@return the number of rows affected_@throws org.springframework.dao.DataAccessException if there is any problem issuing the update_@see MapSqlParameterSource_@see org.springframework.jdbc.support.GeneratedKeyHolder;int update(String sql, SqlParameterSource paramSource, KeyHolder generatedKeyHolder)_			throws DataAccessException_;issue,an,update,via,a,prepared,statement,binding,the,given,arguments,returning,generated,keys,param,sql,sql,containing,named,parameters,param,param,source,container,of,arguments,and,sql,types,to,bind,to,the,query,param,generated,key,holder,key,holder,that,will,hold,the,generated,keys,return,the,number,of,rows,affected,throws,org,springframework,dao,data,access,exception,if,there,is,any,problem,issuing,the,update,see,map,sql,parameter,source,see,org,springframework,jdbc,support,generated,key,holder;int,update,string,sql,sql,parameter,source,param,source,key,holder,generated,key,holder,throws,data,access,exception
NamedParameterJdbcOperations -> int update(String sql, SqlParameterSource paramSource, KeyHolder generatedKeyHolder) 			throws DataAccessException_;1511712999;Issue an update via a prepared statement, binding the given arguments,_returning generated keys._@param sql SQL containing named parameters_@param paramSource container of arguments and SQL types to bind to the query_@param generatedKeyHolder KeyHolder that will hold the generated keys_@return the number of rows affected_@throws org.springframework.dao.DataAccessException if there is any problem issuing the update_@see MapSqlParameterSource_@see org.springframework.jdbc.support.GeneratedKeyHolder;int update(String sql, SqlParameterSource paramSource, KeyHolder generatedKeyHolder)_			throws DataAccessException_;issue,an,update,via,a,prepared,statement,binding,the,given,arguments,returning,generated,keys,param,sql,sql,containing,named,parameters,param,param,source,container,of,arguments,and,sql,types,to,bind,to,the,query,param,generated,key,holder,key,holder,that,will,hold,the,generated,keys,return,the,number,of,rows,affected,throws,org,springframework,dao,data,access,exception,if,there,is,any,problem,issuing,the,update,see,map,sql,parameter,source,see,org,springframework,jdbc,support,generated,key,holder;int,update,string,sql,sql,parameter,source,param,source,key,holder,generated,key,holder,throws,data,access,exception
NamedParameterJdbcOperations -> int update(String sql, SqlParameterSource paramSource, KeyHolder generatedKeyHolder) 			throws DataAccessException_;1530174524;Issue an update via a prepared statement, binding the given arguments,_returning generated keys._@param sql the SQL containing named parameters_@param paramSource container of arguments and SQL types to bind to the query_@param generatedKeyHolder a {@link KeyHolder} that will hold the generated keys_@return the number of rows affected_@throws org.springframework.dao.DataAccessException if there is any problem issuing the update_@see MapSqlParameterSource_@see org.springframework.jdbc.support.GeneratedKeyHolder;int update(String sql, SqlParameterSource paramSource, KeyHolder generatedKeyHolder)_			throws DataAccessException_;issue,an,update,via,a,prepared,statement,binding,the,given,arguments,returning,generated,keys,param,sql,the,sql,containing,named,parameters,param,param,source,container,of,arguments,and,sql,types,to,bind,to,the,query,param,generated,key,holder,a,link,key,holder,that,will,hold,the,generated,keys,return,the,number,of,rows,affected,throws,org,springframework,dao,data,access,exception,if,there,is,any,problem,issuing,the,update,see,map,sql,parameter,source,see,org,springframework,jdbc,support,generated,key,holder;int,update,string,sql,sql,parameter,source,param,source,key,holder,generated,key,holder,throws,data,access,exception
NamedParameterJdbcOperations -> @Nullable 	<T> T queryForObject(String sql, SqlParameterSource paramSource, Class<T> requiredType) 			throws DataAccessException_;1495868221;Query given SQL to create a prepared statement from SQL and a_list of arguments to bind to the query, expecting a result object._<p>The query is expected to be a single row/single column query_ the returned_result will be directly mapped to the corresponding object type._@param sql SQL query to execute_@param paramSource container of arguments to bind to the query_@param requiredType the type that the result object is expected to match_@return the result object of the required type, or {@code null} in case of SQL NULL_@throws org.springframework.dao.IncorrectResultSizeDataAccessException_if the query does not return exactly one row, or does not return exactly_one column in that row_@throws org.springframework.dao.DataAccessException if the query fails_@see org.springframework.jdbc.core.JdbcTemplate#queryForObject(String, Class);@Nullable_	<T> T queryForObject(String sql, SqlParameterSource paramSource, Class<T> requiredType)_			throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,expecting,a,result,object,p,the,query,is,expected,to,be,a,single,row,single,column,query,the,returned,result,will,be,directly,mapped,to,the,corresponding,object,type,param,sql,sql,query,to,execute,param,param,source,container,of,arguments,to,bind,to,the,query,param,required,type,the,type,that,the,result,object,is,expected,to,match,return,the,result,object,of,the,required,type,or,code,null,in,case,of,sql,null,throws,org,springframework,dao,incorrect,result,size,data,access,exception,if,the,query,does,not,return,exactly,one,row,or,does,not,return,exactly,one,column,in,that,row,throws,org,springframework,dao,data,access,exception,if,the,query,fails,see,org,springframework,jdbc,core,jdbc,template,query,for,object,string,class;nullable,t,t,query,for,object,string,sql,sql,parameter,source,param,source,class,t,required,type,throws,data,access,exception
NamedParameterJdbcOperations -> @Nullable 	<T> T queryForObject(String sql, SqlParameterSource paramSource, Class<T> requiredType) 			throws DataAccessException_;1496837955;Query given SQL to create a prepared statement from SQL and a_list of arguments to bind to the query, expecting a result object._<p>The query is expected to be a single row/single column query_ the returned_result will be directly mapped to the corresponding object type._@param sql SQL query to execute_@param paramSource container of arguments to bind to the query_@param requiredType the type that the result object is expected to match_@return the result object of the required type, or {@code null} in case of SQL NULL_@throws org.springframework.dao.IncorrectResultSizeDataAccessException_if the query does not return exactly one row, or does not return exactly_one column in that row_@throws org.springframework.dao.DataAccessException if the query fails_@see org.springframework.jdbc.core.JdbcTemplate#queryForObject(String, Class);@Nullable_	<T> T queryForObject(String sql, SqlParameterSource paramSource, Class<T> requiredType)_			throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,expecting,a,result,object,p,the,query,is,expected,to,be,a,single,row,single,column,query,the,returned,result,will,be,directly,mapped,to,the,corresponding,object,type,param,sql,sql,query,to,execute,param,param,source,container,of,arguments,to,bind,to,the,query,param,required,type,the,type,that,the,result,object,is,expected,to,match,return,the,result,object,of,the,required,type,or,code,null,in,case,of,sql,null,throws,org,springframework,dao,incorrect,result,size,data,access,exception,if,the,query,does,not,return,exactly,one,row,or,does,not,return,exactly,one,column,in,that,row,throws,org,springframework,dao,data,access,exception,if,the,query,fails,see,org,springframework,jdbc,core,jdbc,template,query,for,object,string,class;nullable,t,t,query,for,object,string,sql,sql,parameter,source,param,source,class,t,required,type,throws,data,access,exception
NamedParameterJdbcOperations -> @Nullable 	<T> T queryForObject(String sql, SqlParameterSource paramSource, Class<T> requiredType) 			throws DataAccessException_;1502974979;Query given SQL to create a prepared statement from SQL and a_list of arguments to bind to the query, expecting a result object._<p>The query is expected to be a single row/single column query_ the returned_result will be directly mapped to the corresponding object type._@param sql SQL query to execute_@param paramSource container of arguments to bind to the query_@param requiredType the type that the result object is expected to match_@return the result object of the required type, or {@code null} in case of SQL NULL_@throws org.springframework.dao.IncorrectResultSizeDataAccessException_if the query does not return exactly one row, or does not return exactly_one column in that row_@throws org.springframework.dao.DataAccessException if the query fails_@see org.springframework.jdbc.core.JdbcTemplate#queryForObject(String, Class);@Nullable_	<T> T queryForObject(String sql, SqlParameterSource paramSource, Class<T> requiredType)_			throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,expecting,a,result,object,p,the,query,is,expected,to,be,a,single,row,single,column,query,the,returned,result,will,be,directly,mapped,to,the,corresponding,object,type,param,sql,sql,query,to,execute,param,param,source,container,of,arguments,to,bind,to,the,query,param,required,type,the,type,that,the,result,object,is,expected,to,match,return,the,result,object,of,the,required,type,or,code,null,in,case,of,sql,null,throws,org,springframework,dao,incorrect,result,size,data,access,exception,if,the,query,does,not,return,exactly,one,row,or,does,not,return,exactly,one,column,in,that,row,throws,org,springframework,dao,data,access,exception,if,the,query,fails,see,org,springframework,jdbc,core,jdbc,template,query,for,object,string,class;nullable,t,t,query,for,object,string,sql,sql,parameter,source,param,source,class,t,required,type,throws,data,access,exception
NamedParameterJdbcOperations -> @Nullable 	<T> T queryForObject(String sql, SqlParameterSource paramSource, Class<T> requiredType) 			throws DataAccessException_;1511712999;Query given SQL to create a prepared statement from SQL and a_list of arguments to bind to the query, expecting a result object._<p>The query is expected to be a single row/single column query_ the returned_result will be directly mapped to the corresponding object type._@param sql SQL query to execute_@param paramSource container of arguments to bind to the query_@param requiredType the type that the result object is expected to match_@return the result object of the required type, or {@code null} in case of SQL NULL_@throws org.springframework.dao.IncorrectResultSizeDataAccessException_if the query does not return exactly one row, or does not return exactly_one column in that row_@throws org.springframework.dao.DataAccessException if the query fails_@see org.springframework.jdbc.core.JdbcTemplate#queryForObject(String, Class);@Nullable_	<T> T queryForObject(String sql, SqlParameterSource paramSource, Class<T> requiredType)_			throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,expecting,a,result,object,p,the,query,is,expected,to,be,a,single,row,single,column,query,the,returned,result,will,be,directly,mapped,to,the,corresponding,object,type,param,sql,sql,query,to,execute,param,param,source,container,of,arguments,to,bind,to,the,query,param,required,type,the,type,that,the,result,object,is,expected,to,match,return,the,result,object,of,the,required,type,or,code,null,in,case,of,sql,null,throws,org,springframework,dao,incorrect,result,size,data,access,exception,if,the,query,does,not,return,exactly,one,row,or,does,not,return,exactly,one,column,in,that,row,throws,org,springframework,dao,data,access,exception,if,the,query,fails,see,org,springframework,jdbc,core,jdbc,template,query,for,object,string,class;nullable,t,t,query,for,object,string,sql,sql,parameter,source,param,source,class,t,required,type,throws,data,access,exception
NamedParameterJdbcOperations -> @Nullable 	<T> T queryForObject(String sql, SqlParameterSource paramSource, Class<T> requiredType) 			throws DataAccessException_;1530174524;Query given SQL to create a prepared statement from SQL and a_list of arguments to bind to the query, expecting a result object._<p>The query is expected to be a single row/single column query_ the returned_result will be directly mapped to the corresponding object type._@param sql the SQL query to execute_@param paramSource container of arguments to bind to the query_@param requiredType the type that the result object is expected to match_@return the result object of the required type, or {@code null} in case of SQL NULL_@throws org.springframework.dao.IncorrectResultSizeDataAccessException_if the query does not return exactly one row, or does not return exactly_one column in that row_@throws org.springframework.dao.DataAccessException if the query fails_@see org.springframework.jdbc.core.JdbcTemplate#queryForObject(String, Class);@Nullable_	<T> T queryForObject(String sql, SqlParameterSource paramSource, Class<T> requiredType)_			throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,expecting,a,result,object,p,the,query,is,expected,to,be,a,single,row,single,column,query,the,returned,result,will,be,directly,mapped,to,the,corresponding,object,type,param,sql,the,sql,query,to,execute,param,param,source,container,of,arguments,to,bind,to,the,query,param,required,type,the,type,that,the,result,object,is,expected,to,match,return,the,result,object,of,the,required,type,or,code,null,in,case,of,sql,null,throws,org,springframework,dao,incorrect,result,size,data,access,exception,if,the,query,does,not,return,exactly,one,row,or,does,not,return,exactly,one,column,in,that,row,throws,org,springframework,dao,data,access,exception,if,the,query,fails,see,org,springframework,jdbc,core,jdbc,template,query,for,object,string,class;nullable,t,t,query,for,object,string,sql,sql,parameter,source,param,source,class,t,required,type,throws,data,access,exception
NamedParameterJdbcOperations -> @Nullable 	<T> T query(String sql, ResultSetExtractor<T> rse) throws DataAccessException_;1496837955;Query given SQL to create a prepared statement from SQL,_reading the ResultSet with a ResultSetExtractor._<p>Note: In contrast to the JdbcOperations method with the same signature,_this query variant always uses a PreparedStatement. It is effectively_equivalent to a query call with an empty parameter Map._@param sql SQL query to execute_@param rse object that will extract results_@return an arbitrary result object, as returned by the ResultSetExtractor_@throws org.springframework.dao.DataAccessException if the query fails;@Nullable_	<T> T query(String sql, ResultSetExtractor<T> rse) throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,reading,the,result,set,with,a,result,set,extractor,p,note,in,contrast,to,the,jdbc,operations,method,with,the,same,signature,this,query,variant,always,uses,a,prepared,statement,it,is,effectively,equivalent,to,a,query,call,with,an,empty,parameter,map,param,sql,sql,query,to,execute,param,rse,object,that,will,extract,results,return,an,arbitrary,result,object,as,returned,by,the,result,set,extractor,throws,org,springframework,dao,data,access,exception,if,the,query,fails;nullable,t,t,query,string,sql,result,set,extractor,t,rse,throws,data,access,exception
NamedParameterJdbcOperations -> @Nullable 	<T> T query(String sql, ResultSetExtractor<T> rse) throws DataAccessException_;1502974979;Query given SQL to create a prepared statement from SQL,_reading the ResultSet with a ResultSetExtractor._<p>Note: In contrast to the JdbcOperations method with the same signature,_this query variant always uses a PreparedStatement. It is effectively_equivalent to a query call with an empty parameter Map._@param sql SQL query to execute_@param rse object that will extract results_@return an arbitrary result object, as returned by the ResultSetExtractor_@throws org.springframework.dao.DataAccessException if the query fails;@Nullable_	<T> T query(String sql, ResultSetExtractor<T> rse) throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,reading,the,result,set,with,a,result,set,extractor,p,note,in,contrast,to,the,jdbc,operations,method,with,the,same,signature,this,query,variant,always,uses,a,prepared,statement,it,is,effectively,equivalent,to,a,query,call,with,an,empty,parameter,map,param,sql,sql,query,to,execute,param,rse,object,that,will,extract,results,return,an,arbitrary,result,object,as,returned,by,the,result,set,extractor,throws,org,springframework,dao,data,access,exception,if,the,query,fails;nullable,t,t,query,string,sql,result,set,extractor,t,rse,throws,data,access,exception
NamedParameterJdbcOperations -> @Nullable 	<T> T query(String sql, ResultSetExtractor<T> rse) throws DataAccessException_;1511712999;Query given SQL to create a prepared statement from SQL,_reading the ResultSet with a ResultSetExtractor._<p>Note: In contrast to the JdbcOperations method with the same signature,_this query variant always uses a PreparedStatement. It is effectively_equivalent to a query call with an empty parameter Map._@param sql SQL query to execute_@param rse object that will extract results_@return an arbitrary result object, as returned by the ResultSetExtractor_@throws org.springframework.dao.DataAccessException if the query fails;@Nullable_	<T> T query(String sql, ResultSetExtractor<T> rse) throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,reading,the,result,set,with,a,result,set,extractor,p,note,in,contrast,to,the,jdbc,operations,method,with,the,same,signature,this,query,variant,always,uses,a,prepared,statement,it,is,effectively,equivalent,to,a,query,call,with,an,empty,parameter,map,param,sql,sql,query,to,execute,param,rse,object,that,will,extract,results,return,an,arbitrary,result,object,as,returned,by,the,result,set,extractor,throws,org,springframework,dao,data,access,exception,if,the,query,fails;nullable,t,t,query,string,sql,result,set,extractor,t,rse,throws,data,access,exception
NamedParameterJdbcOperations -> @Nullable 	<T> T query(String sql, ResultSetExtractor<T> rse) throws DataAccessException_;1530174524;Query given SQL to create a prepared statement from SQL,_reading the ResultSet with a ResultSetExtractor._<p>Note: In contrast to the JdbcOperations method with the same signature,_this query variant always uses a PreparedStatement. It is effectively_equivalent to a query call with an empty parameter Map._@param sql the SQL query to execute_@param rse object that will extract results_@return an arbitrary result object, as returned by the ResultSetExtractor_@throws org.springframework.dao.DataAccessException if the query fails;@Nullable_	<T> T query(String sql, ResultSetExtractor<T> rse) throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,reading,the,result,set,with,a,result,set,extractor,p,note,in,contrast,to,the,jdbc,operations,method,with,the,same,signature,this,query,variant,always,uses,a,prepared,statement,it,is,effectively,equivalent,to,a,query,call,with,an,empty,parameter,map,param,sql,the,sql,query,to,execute,param,rse,object,that,will,extract,results,return,an,arbitrary,result,object,as,returned,by,the,result,set,extractor,throws,org,springframework,dao,data,access,exception,if,the,query,fails;nullable,t,t,query,string,sql,result,set,extractor,t,rse,throws,data,access,exception
NamedParameterJdbcOperations -> @Nullable 	<T> T queryForObject(String sql, Map<String, ?> paramMap, Class<T> requiredType) 			throws DataAccessException_;1495868221;Query given SQL to create a prepared statement from SQL and a_list of arguments to bind to the query, expecting a result object._<p>The query is expected to be a single row/single column query_ the returned_result will be directly mapped to the corresponding object type._@param sql SQL query to execute_@param paramMap map of parameters to bind to the query_(leaving it to the PreparedStatement to guess the corresponding SQL type)_@param requiredType the type that the result object is expected to match_@return the result object of the required type, or {@code null} in case of SQL NULL_@throws org.springframework.dao.IncorrectResultSizeDataAccessException_if the query does not return exactly one row, or does not return exactly_one column in that row_@throws org.springframework.dao.DataAccessException if the query fails_@see org.springframework.jdbc.core.JdbcTemplate#queryForObject(String, Class);@Nullable_	<T> T queryForObject(String sql, Map<String, ?> paramMap, Class<T> requiredType)_			throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,expecting,a,result,object,p,the,query,is,expected,to,be,a,single,row,single,column,query,the,returned,result,will,be,directly,mapped,to,the,corresponding,object,type,param,sql,sql,query,to,execute,param,param,map,map,of,parameters,to,bind,to,the,query,leaving,it,to,the,prepared,statement,to,guess,the,corresponding,sql,type,param,required,type,the,type,that,the,result,object,is,expected,to,match,return,the,result,object,of,the,required,type,or,code,null,in,case,of,sql,null,throws,org,springframework,dao,incorrect,result,size,data,access,exception,if,the,query,does,not,return,exactly,one,row,or,does,not,return,exactly,one,column,in,that,row,throws,org,springframework,dao,data,access,exception,if,the,query,fails,see,org,springframework,jdbc,core,jdbc,template,query,for,object,string,class;nullable,t,t,query,for,object,string,sql,map,string,param,map,class,t,required,type,throws,data,access,exception
NamedParameterJdbcOperations -> @Nullable 	<T> T queryForObject(String sql, Map<String, ?> paramMap, Class<T> requiredType) 			throws DataAccessException_;1496837955;Query given SQL to create a prepared statement from SQL and a_list of arguments to bind to the query, expecting a result object._<p>The query is expected to be a single row/single column query_ the returned_result will be directly mapped to the corresponding object type._@param sql SQL query to execute_@param paramMap map of parameters to bind to the query_(leaving it to the PreparedStatement to guess the corresponding SQL type)_@param requiredType the type that the result object is expected to match_@return the result object of the required type, or {@code null} in case of SQL NULL_@throws org.springframework.dao.IncorrectResultSizeDataAccessException_if the query does not return exactly one row, or does not return exactly_one column in that row_@throws org.springframework.dao.DataAccessException if the query fails_@see org.springframework.jdbc.core.JdbcTemplate#queryForObject(String, Class);@Nullable_	<T> T queryForObject(String sql, Map<String, ?> paramMap, Class<T> requiredType)_			throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,expecting,a,result,object,p,the,query,is,expected,to,be,a,single,row,single,column,query,the,returned,result,will,be,directly,mapped,to,the,corresponding,object,type,param,sql,sql,query,to,execute,param,param,map,map,of,parameters,to,bind,to,the,query,leaving,it,to,the,prepared,statement,to,guess,the,corresponding,sql,type,param,required,type,the,type,that,the,result,object,is,expected,to,match,return,the,result,object,of,the,required,type,or,code,null,in,case,of,sql,null,throws,org,springframework,dao,incorrect,result,size,data,access,exception,if,the,query,does,not,return,exactly,one,row,or,does,not,return,exactly,one,column,in,that,row,throws,org,springframework,dao,data,access,exception,if,the,query,fails,see,org,springframework,jdbc,core,jdbc,template,query,for,object,string,class;nullable,t,t,query,for,object,string,sql,map,string,param,map,class,t,required,type,throws,data,access,exception
NamedParameterJdbcOperations -> @Nullable 	<T> T queryForObject(String sql, Map<String, ?> paramMap, Class<T> requiredType) 			throws DataAccessException_;1502974979;Query given SQL to create a prepared statement from SQL and a_list of arguments to bind to the query, expecting a result object._<p>The query is expected to be a single row/single column query_ the returned_result will be directly mapped to the corresponding object type._@param sql SQL query to execute_@param paramMap map of parameters to bind to the query_(leaving it to the PreparedStatement to guess the corresponding SQL type)_@param requiredType the type that the result object is expected to match_@return the result object of the required type, or {@code null} in case of SQL NULL_@throws org.springframework.dao.IncorrectResultSizeDataAccessException_if the query does not return exactly one row, or does not return exactly_one column in that row_@throws org.springframework.dao.DataAccessException if the query fails_@see org.springframework.jdbc.core.JdbcTemplate#queryForObject(String, Class);@Nullable_	<T> T queryForObject(String sql, Map<String, ?> paramMap, Class<T> requiredType)_			throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,expecting,a,result,object,p,the,query,is,expected,to,be,a,single,row,single,column,query,the,returned,result,will,be,directly,mapped,to,the,corresponding,object,type,param,sql,sql,query,to,execute,param,param,map,map,of,parameters,to,bind,to,the,query,leaving,it,to,the,prepared,statement,to,guess,the,corresponding,sql,type,param,required,type,the,type,that,the,result,object,is,expected,to,match,return,the,result,object,of,the,required,type,or,code,null,in,case,of,sql,null,throws,org,springframework,dao,incorrect,result,size,data,access,exception,if,the,query,does,not,return,exactly,one,row,or,does,not,return,exactly,one,column,in,that,row,throws,org,springframework,dao,data,access,exception,if,the,query,fails,see,org,springframework,jdbc,core,jdbc,template,query,for,object,string,class;nullable,t,t,query,for,object,string,sql,map,string,param,map,class,t,required,type,throws,data,access,exception
NamedParameterJdbcOperations -> @Nullable 	<T> T queryForObject(String sql, Map<String, ?> paramMap, Class<T> requiredType) 			throws DataAccessException_;1511712999;Query given SQL to create a prepared statement from SQL and a_list of arguments to bind to the query, expecting a result object._<p>The query is expected to be a single row/single column query_ the returned_result will be directly mapped to the corresponding object type._@param sql SQL query to execute_@param paramMap map of parameters to bind to the query_(leaving it to the PreparedStatement to guess the corresponding SQL type)_@param requiredType the type that the result object is expected to match_@return the result object of the required type, or {@code null} in case of SQL NULL_@throws org.springframework.dao.IncorrectResultSizeDataAccessException_if the query does not return exactly one row, or does not return exactly_one column in that row_@throws org.springframework.dao.DataAccessException if the query fails_@see org.springframework.jdbc.core.JdbcTemplate#queryForObject(String, Class);@Nullable_	<T> T queryForObject(String sql, Map<String, ?> paramMap, Class<T> requiredType)_			throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,expecting,a,result,object,p,the,query,is,expected,to,be,a,single,row,single,column,query,the,returned,result,will,be,directly,mapped,to,the,corresponding,object,type,param,sql,sql,query,to,execute,param,param,map,map,of,parameters,to,bind,to,the,query,leaving,it,to,the,prepared,statement,to,guess,the,corresponding,sql,type,param,required,type,the,type,that,the,result,object,is,expected,to,match,return,the,result,object,of,the,required,type,or,code,null,in,case,of,sql,null,throws,org,springframework,dao,incorrect,result,size,data,access,exception,if,the,query,does,not,return,exactly,one,row,or,does,not,return,exactly,one,column,in,that,row,throws,org,springframework,dao,data,access,exception,if,the,query,fails,see,org,springframework,jdbc,core,jdbc,template,query,for,object,string,class;nullable,t,t,query,for,object,string,sql,map,string,param,map,class,t,required,type,throws,data,access,exception
NamedParameterJdbcOperations -> @Nullable 	<T> T queryForObject(String sql, Map<String, ?> paramMap, Class<T> requiredType) 			throws DataAccessException_;1530174524;Query given SQL to create a prepared statement from SQL and a_list of arguments to bind to the query, expecting a result object._<p>The query is expected to be a single row/single column query_ the returned_result will be directly mapped to the corresponding object type._@param sql the SQL query to execute_@param paramMap map of parameters to bind to the query_(leaving it to the PreparedStatement to guess the corresponding SQL type)_@param requiredType the type that the result object is expected to match_@return the result object of the required type, or {@code null} in case of SQL NULL_@throws org.springframework.dao.IncorrectResultSizeDataAccessException_if the query does not return exactly one row, or does not return exactly_one column in that row_@throws org.springframework.dao.DataAccessException if the query fails_@see org.springframework.jdbc.core.JdbcTemplate#queryForObject(String, Class);@Nullable_	<T> T queryForObject(String sql, Map<String, ?> paramMap, Class<T> requiredType)_			throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,expecting,a,result,object,p,the,query,is,expected,to,be,a,single,row,single,column,query,the,returned,result,will,be,directly,mapped,to,the,corresponding,object,type,param,sql,the,sql,query,to,execute,param,param,map,map,of,parameters,to,bind,to,the,query,leaving,it,to,the,prepared,statement,to,guess,the,corresponding,sql,type,param,required,type,the,type,that,the,result,object,is,expected,to,match,return,the,result,object,of,the,required,type,or,code,null,in,case,of,sql,null,throws,org,springframework,dao,incorrect,result,size,data,access,exception,if,the,query,does,not,return,exactly,one,row,or,does,not,return,exactly,one,column,in,that,row,throws,org,springframework,dao,data,access,exception,if,the,query,fails,see,org,springframework,jdbc,core,jdbc,template,query,for,object,string,class;nullable,t,t,query,for,object,string,sql,map,string,param,map,class,t,required,type,throws,data,access,exception
NamedParameterJdbcOperations -> SqlRowSet queryForRowSet(String sql, Map<String, ?> paramMap) throws DataAccessException_;1328020251;Query given SQL to create a prepared statement from SQL and a_list of arguments to bind to the query, expecting a SqlRowSet._<p>The results will be mapped to an SqlRowSet which holds the data in a_disconnected fashion. This wrapper will translate any SQLExceptions thrown._<p>Note that that, for the default implementation, JDBC RowSet support needs to_be available at runtime: by default, Sun's <code>com.sun.rowset.CachedRowSetImpl</code>_class is used, which is part of JDK 1.5+ and also available separately as part of_Sun's JDBC RowSet Implementations download (rowset.jar)._@param sql SQL query to execute_@param paramMap map of parameters to bind to the query_(leaving it to the PreparedStatement to guess the corresponding SQL type)_@return a SqlRowSet representation (possibly a wrapper around a_<code>javax.sql.rowset.CachedRowSet</code>)_@throws org.springframework.dao.DataAccessException if there is any problem executing the query_@see org.springframework.jdbc.core.JdbcTemplate#queryForRowSet(String)_@see org.springframework.jdbc.core.SqlRowSetResultSetExtractor_@see javax.sql.rowset.CachedRowSet;SqlRowSet queryForRowSet(String sql, Map<String, ?> paramMap) throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,expecting,a,sql,row,set,p,the,results,will,be,mapped,to,an,sql,row,set,which,holds,the,data,in,a,disconnected,fashion,this,wrapper,will,translate,any,sqlexceptions,thrown,p,note,that,that,for,the,default,implementation,jdbc,row,set,support,needs,to,be,available,at,runtime,by,default,sun,s,code,com,sun,rowset,cached,row,set,impl,code,class,is,used,which,is,part,of,jdk,1,5,and,also,available,separately,as,part,of,sun,s,jdbc,row,set,implementations,download,rowset,jar,param,sql,sql,query,to,execute,param,param,map,map,of,parameters,to,bind,to,the,query,leaving,it,to,the,prepared,statement,to,guess,the,corresponding,sql,type,return,a,sql,row,set,representation,possibly,a,wrapper,around,a,code,javax,sql,rowset,cached,row,set,code,throws,org,springframework,dao,data,access,exception,if,there,is,any,problem,executing,the,query,see,org,springframework,jdbc,core,jdbc,template,query,for,row,set,string,see,org,springframework,jdbc,core,sql,row,set,result,set,extractor,see,javax,sql,rowset,cached,row,set;sql,row,set,query,for,row,set,string,sql,map,string,param,map,throws,data,access,exception
NamedParameterJdbcOperations -> SqlRowSet queryForRowSet(String sql, Map<String, ?> paramMap) throws DataAccessException_;1356735495;Query given SQL to create a prepared statement from SQL and a_list of arguments to bind to the query, expecting a SqlRowSet._<p>The results will be mapped to an SqlRowSet which holds the data in a_disconnected fashion. This wrapper will translate any SQLExceptions thrown._<p>Note that that, for the default implementation, JDBC RowSet support needs to_be available at runtime: by default, Sun's {@code com.sun.rowset.CachedRowSetImpl}_class is used, which is part of JDK 1.5+ and also available separately as part of_Sun's JDBC RowSet Implementations download (rowset.jar)._@param sql SQL query to execute_@param paramMap map of parameters to bind to the query_(leaving it to the PreparedStatement to guess the corresponding SQL type)_@return a SqlRowSet representation (possibly a wrapper around a_{@code javax.sql.rowset.CachedRowSet})_@throws org.springframework.dao.DataAccessException if there is any problem executing the query_@see org.springframework.jdbc.core.JdbcTemplate#queryForRowSet(String)_@see org.springframework.jdbc.core.SqlRowSetResultSetExtractor_@see javax.sql.rowset.CachedRowSet;SqlRowSet queryForRowSet(String sql, Map<String, ?> paramMap) throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,expecting,a,sql,row,set,p,the,results,will,be,mapped,to,an,sql,row,set,which,holds,the,data,in,a,disconnected,fashion,this,wrapper,will,translate,any,sqlexceptions,thrown,p,note,that,that,for,the,default,implementation,jdbc,row,set,support,needs,to,be,available,at,runtime,by,default,sun,s,code,com,sun,rowset,cached,row,set,impl,class,is,used,which,is,part,of,jdk,1,5,and,also,available,separately,as,part,of,sun,s,jdbc,row,set,implementations,download,rowset,jar,param,sql,sql,query,to,execute,param,param,map,map,of,parameters,to,bind,to,the,query,leaving,it,to,the,prepared,statement,to,guess,the,corresponding,sql,type,return,a,sql,row,set,representation,possibly,a,wrapper,around,a,code,javax,sql,rowset,cached,row,set,throws,org,springframework,dao,data,access,exception,if,there,is,any,problem,executing,the,query,see,org,springframework,jdbc,core,jdbc,template,query,for,row,set,string,see,org,springframework,jdbc,core,sql,row,set,result,set,extractor,see,javax,sql,rowset,cached,row,set;sql,row,set,query,for,row,set,string,sql,map,string,param,map,throws,data,access,exception
NamedParameterJdbcOperations -> SqlRowSet queryForRowSet(String sql, Map<String, ?> paramMap) throws DataAccessException_;1362408075;Query given SQL to create a prepared statement from SQL and a_list of arguments to bind to the query, expecting a SqlRowSet._<p>The results will be mapped to an SqlRowSet which holds the data in a_disconnected fashion. This wrapper will translate any SQLExceptions thrown._<p>Note that that, for the default implementation, JDBC RowSet support needs to_be available at runtime: by default, Sun's {@code com.sun.rowset.CachedRowSetImpl}_class is used, which is part of JDK 1.5+ and also available separately as part of_Sun's JDBC RowSet Implementations download (rowset.jar)._@param sql SQL query to execute_@param paramMap map of parameters to bind to the query_(leaving it to the PreparedStatement to guess the corresponding SQL type)_@return a SqlRowSet representation (possibly a wrapper around a_{@code javax.sql.rowset.CachedRowSet})_@throws org.springframework.dao.DataAccessException if there is any problem executing the query_@see org.springframework.jdbc.core.JdbcTemplate#queryForRowSet(String)_@see org.springframework.jdbc.core.SqlRowSetResultSetExtractor_@see javax.sql.rowset.CachedRowSet;SqlRowSet queryForRowSet(String sql, Map<String, ?> paramMap) throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,expecting,a,sql,row,set,p,the,results,will,be,mapped,to,an,sql,row,set,which,holds,the,data,in,a,disconnected,fashion,this,wrapper,will,translate,any,sqlexceptions,thrown,p,note,that,that,for,the,default,implementation,jdbc,row,set,support,needs,to,be,available,at,runtime,by,default,sun,s,code,com,sun,rowset,cached,row,set,impl,class,is,used,which,is,part,of,jdk,1,5,and,also,available,separately,as,part,of,sun,s,jdbc,row,set,implementations,download,rowset,jar,param,sql,sql,query,to,execute,param,param,map,map,of,parameters,to,bind,to,the,query,leaving,it,to,the,prepared,statement,to,guess,the,corresponding,sql,type,return,a,sql,row,set,representation,possibly,a,wrapper,around,a,code,javax,sql,rowset,cached,row,set,throws,org,springframework,dao,data,access,exception,if,there,is,any,problem,executing,the,query,see,org,springframework,jdbc,core,jdbc,template,query,for,row,set,string,see,org,springframework,jdbc,core,sql,row,set,result,set,extractor,see,javax,sql,rowset,cached,row,set;sql,row,set,query,for,row,set,string,sql,map,string,param,map,throws,data,access,exception
NamedParameterJdbcOperations -> SqlRowSet queryForRowSet(String sql, Map<String, ?> paramMap) throws DataAccessException_;1419966315;Query given SQL to create a prepared statement from SQL and a_list of arguments to bind to the query, expecting a SqlRowSet._<p>The results will be mapped to an SqlRowSet which holds the data in a_disconnected fashion. This wrapper will translate any SQLExceptions thrown._<p>Note that that, for the default implementation, JDBC RowSet support needs to_be available at runtime: by default, Sun's {@code com.sun.rowset.CachedRowSetImpl}_class is used, which is part of JDK 1.5+ and also available separately as part of_Sun's JDBC RowSet Implementations download (rowset.jar)._@param sql SQL query to execute_@param paramMap map of parameters to bind to the query_(leaving it to the PreparedStatement to guess the corresponding SQL type)_@return a SqlRowSet representation (possibly a wrapper around a_{@code javax.sql.rowset.CachedRowSet})_@throws org.springframework.dao.DataAccessException if there is any problem executing the query_@see org.springframework.jdbc.core.JdbcTemplate#queryForRowSet(String)_@see org.springframework.jdbc.core.SqlRowSetResultSetExtractor_@see javax.sql.rowset.CachedRowSet;SqlRowSet queryForRowSet(String sql, Map<String, ?> paramMap) throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,expecting,a,sql,row,set,p,the,results,will,be,mapped,to,an,sql,row,set,which,holds,the,data,in,a,disconnected,fashion,this,wrapper,will,translate,any,sqlexceptions,thrown,p,note,that,that,for,the,default,implementation,jdbc,row,set,support,needs,to,be,available,at,runtime,by,default,sun,s,code,com,sun,rowset,cached,row,set,impl,class,is,used,which,is,part,of,jdk,1,5,and,also,available,separately,as,part,of,sun,s,jdbc,row,set,implementations,download,rowset,jar,param,sql,sql,query,to,execute,param,param,map,map,of,parameters,to,bind,to,the,query,leaving,it,to,the,prepared,statement,to,guess,the,corresponding,sql,type,return,a,sql,row,set,representation,possibly,a,wrapper,around,a,code,javax,sql,rowset,cached,row,set,throws,org,springframework,dao,data,access,exception,if,there,is,any,problem,executing,the,query,see,org,springframework,jdbc,core,jdbc,template,query,for,row,set,string,see,org,springframework,jdbc,core,sql,row,set,result,set,extractor,see,javax,sql,rowset,cached,row,set;sql,row,set,query,for,row,set,string,sql,map,string,param,map,throws,data,access,exception
NamedParameterJdbcOperations -> SqlRowSet queryForRowSet(String sql, Map<String, ?> paramMap) throws DataAccessException_;1491113276;Query given SQL to create a prepared statement from SQL and a_list of arguments to bind to the query, expecting a SqlRowSet._<p>The results will be mapped to an SqlRowSet which holds the data in a_disconnected fashion. This wrapper will translate any SQLExceptions thrown._<p>Note that, for the default implementation, JDBC RowSet support needs to_be available at runtime: by default, Sun's {@code com.sun.rowset.CachedRowSetImpl}_class is used, which is part of JDK 1.5+ and also available separately as part of_Sun's JDBC RowSet Implementations download (rowset.jar)._@param sql SQL query to execute_@param paramMap map of parameters to bind to the query_(leaving it to the PreparedStatement to guess the corresponding SQL type)_@return a SqlRowSet representation (possibly a wrapper around a_{@code javax.sql.rowset.CachedRowSet})_@throws org.springframework.dao.DataAccessException if there is any problem executing the query_@see org.springframework.jdbc.core.JdbcTemplate#queryForRowSet(String)_@see org.springframework.jdbc.core.SqlRowSetResultSetExtractor_@see javax.sql.rowset.CachedRowSet;SqlRowSet queryForRowSet(String sql, Map<String, ?> paramMap) throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,expecting,a,sql,row,set,p,the,results,will,be,mapped,to,an,sql,row,set,which,holds,the,data,in,a,disconnected,fashion,this,wrapper,will,translate,any,sqlexceptions,thrown,p,note,that,for,the,default,implementation,jdbc,row,set,support,needs,to,be,available,at,runtime,by,default,sun,s,code,com,sun,rowset,cached,row,set,impl,class,is,used,which,is,part,of,jdk,1,5,and,also,available,separately,as,part,of,sun,s,jdbc,row,set,implementations,download,rowset,jar,param,sql,sql,query,to,execute,param,param,map,map,of,parameters,to,bind,to,the,query,leaving,it,to,the,prepared,statement,to,guess,the,corresponding,sql,type,return,a,sql,row,set,representation,possibly,a,wrapper,around,a,code,javax,sql,rowset,cached,row,set,throws,org,springframework,dao,data,access,exception,if,there,is,any,problem,executing,the,query,see,org,springframework,jdbc,core,jdbc,template,query,for,row,set,string,see,org,springframework,jdbc,core,sql,row,set,result,set,extractor,see,javax,sql,rowset,cached,row,set;sql,row,set,query,for,row,set,string,sql,map,string,param,map,throws,data,access,exception
NamedParameterJdbcOperations -> SqlRowSet queryForRowSet(String sql, Map<String, ?> paramMap) throws DataAccessException_;1495868221;Query given SQL to create a prepared statement from SQL and a_list of arguments to bind to the query, expecting a SqlRowSet._<p>The results will be mapped to an SqlRowSet which holds the data in a_disconnected fashion. This wrapper will translate any SQLExceptions thrown._<p>Note that, for the default implementation, JDBC RowSet support needs to_be available at runtime: by default, Sun's {@code com.sun.rowset.CachedRowSetImpl}_class is used, which is part of JDK 1.5+ and also available separately as part of_Sun's JDBC RowSet Implementations download (rowset.jar)._@param sql SQL query to execute_@param paramMap map of parameters to bind to the query_(leaving it to the PreparedStatement to guess the corresponding SQL type)_@return a SqlRowSet representation (possibly a wrapper around a_{@code javax.sql.rowset.CachedRowSet})_@throws org.springframework.dao.DataAccessException if there is any problem executing the query_@see org.springframework.jdbc.core.JdbcTemplate#queryForRowSet(String)_@see org.springframework.jdbc.core.SqlRowSetResultSetExtractor_@see javax.sql.rowset.CachedRowSet;SqlRowSet queryForRowSet(String sql, Map<String, ?> paramMap) throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,expecting,a,sql,row,set,p,the,results,will,be,mapped,to,an,sql,row,set,which,holds,the,data,in,a,disconnected,fashion,this,wrapper,will,translate,any,sqlexceptions,thrown,p,note,that,for,the,default,implementation,jdbc,row,set,support,needs,to,be,available,at,runtime,by,default,sun,s,code,com,sun,rowset,cached,row,set,impl,class,is,used,which,is,part,of,jdk,1,5,and,also,available,separately,as,part,of,sun,s,jdbc,row,set,implementations,download,rowset,jar,param,sql,sql,query,to,execute,param,param,map,map,of,parameters,to,bind,to,the,query,leaving,it,to,the,prepared,statement,to,guess,the,corresponding,sql,type,return,a,sql,row,set,representation,possibly,a,wrapper,around,a,code,javax,sql,rowset,cached,row,set,throws,org,springframework,dao,data,access,exception,if,there,is,any,problem,executing,the,query,see,org,springframework,jdbc,core,jdbc,template,query,for,row,set,string,see,org,springframework,jdbc,core,sql,row,set,result,set,extractor,see,javax,sql,rowset,cached,row,set;sql,row,set,query,for,row,set,string,sql,map,string,param,map,throws,data,access,exception
NamedParameterJdbcOperations -> SqlRowSet queryForRowSet(String sql, Map<String, ?> paramMap) throws DataAccessException_;1496837955;Query given SQL to create a prepared statement from SQL and a_list of arguments to bind to the query, expecting a SqlRowSet._<p>The results will be mapped to an SqlRowSet which holds the data in a_disconnected fashion. This wrapper will translate any SQLExceptions thrown._<p>Note that, for the default implementation, JDBC RowSet support needs to_be available at runtime: by default, Sun's {@code com.sun.rowset.CachedRowSetImpl}_class is used, which is part of JDK 1.5+ and also available separately as part of_Sun's JDBC RowSet Implementations download (rowset.jar)._@param sql SQL query to execute_@param paramMap map of parameters to bind to the query_(leaving it to the PreparedStatement to guess the corresponding SQL type)_@return a SqlRowSet representation (possibly a wrapper around a_{@code javax.sql.rowset.CachedRowSet})_@throws org.springframework.dao.DataAccessException if there is any problem executing the query_@see org.springframework.jdbc.core.JdbcTemplate#queryForRowSet(String)_@see org.springframework.jdbc.core.SqlRowSetResultSetExtractor_@see javax.sql.rowset.CachedRowSet;SqlRowSet queryForRowSet(String sql, Map<String, ?> paramMap) throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,expecting,a,sql,row,set,p,the,results,will,be,mapped,to,an,sql,row,set,which,holds,the,data,in,a,disconnected,fashion,this,wrapper,will,translate,any,sqlexceptions,thrown,p,note,that,for,the,default,implementation,jdbc,row,set,support,needs,to,be,available,at,runtime,by,default,sun,s,code,com,sun,rowset,cached,row,set,impl,class,is,used,which,is,part,of,jdk,1,5,and,also,available,separately,as,part,of,sun,s,jdbc,row,set,implementations,download,rowset,jar,param,sql,sql,query,to,execute,param,param,map,map,of,parameters,to,bind,to,the,query,leaving,it,to,the,prepared,statement,to,guess,the,corresponding,sql,type,return,a,sql,row,set,representation,possibly,a,wrapper,around,a,code,javax,sql,rowset,cached,row,set,throws,org,springframework,dao,data,access,exception,if,there,is,any,problem,executing,the,query,see,org,springframework,jdbc,core,jdbc,template,query,for,row,set,string,see,org,springframework,jdbc,core,sql,row,set,result,set,extractor,see,javax,sql,rowset,cached,row,set;sql,row,set,query,for,row,set,string,sql,map,string,param,map,throws,data,access,exception
NamedParameterJdbcOperations -> SqlRowSet queryForRowSet(String sql, Map<String, ?> paramMap) throws DataAccessException_;1502974979;Query given SQL to create a prepared statement from SQL and a_list of arguments to bind to the query, expecting a SqlRowSet._<p>The results will be mapped to an SqlRowSet which holds the data in a_disconnected fashion. This wrapper will translate any SQLExceptions thrown._<p>Note that, for the default implementation, JDBC RowSet support needs to_be available at runtime: by default, Sun's {@code com.sun.rowset.CachedRowSetImpl}_class is used, which is part of JDK 1.5+ and also available separately as part of_Sun's JDBC RowSet Implementations download (rowset.jar)._@param sql SQL query to execute_@param paramMap map of parameters to bind to the query_(leaving it to the PreparedStatement to guess the corresponding SQL type)_@return a SqlRowSet representation (possibly a wrapper around a_{@code javax.sql.rowset.CachedRowSet})_@throws org.springframework.dao.DataAccessException if there is any problem executing the query_@see org.springframework.jdbc.core.JdbcTemplate#queryForRowSet(String)_@see org.springframework.jdbc.core.SqlRowSetResultSetExtractor_@see javax.sql.rowset.CachedRowSet;SqlRowSet queryForRowSet(String sql, Map<String, ?> paramMap) throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,expecting,a,sql,row,set,p,the,results,will,be,mapped,to,an,sql,row,set,which,holds,the,data,in,a,disconnected,fashion,this,wrapper,will,translate,any,sqlexceptions,thrown,p,note,that,for,the,default,implementation,jdbc,row,set,support,needs,to,be,available,at,runtime,by,default,sun,s,code,com,sun,rowset,cached,row,set,impl,class,is,used,which,is,part,of,jdk,1,5,and,also,available,separately,as,part,of,sun,s,jdbc,row,set,implementations,download,rowset,jar,param,sql,sql,query,to,execute,param,param,map,map,of,parameters,to,bind,to,the,query,leaving,it,to,the,prepared,statement,to,guess,the,corresponding,sql,type,return,a,sql,row,set,representation,possibly,a,wrapper,around,a,code,javax,sql,rowset,cached,row,set,throws,org,springframework,dao,data,access,exception,if,there,is,any,problem,executing,the,query,see,org,springframework,jdbc,core,jdbc,template,query,for,row,set,string,see,org,springframework,jdbc,core,sql,row,set,result,set,extractor,see,javax,sql,rowset,cached,row,set;sql,row,set,query,for,row,set,string,sql,map,string,param,map,throws,data,access,exception
NamedParameterJdbcOperations -> SqlRowSet queryForRowSet(String sql, Map<String, ?> paramMap) throws DataAccessException_;1511712999;Query given SQL to create a prepared statement from SQL and a_list of arguments to bind to the query, expecting a SqlRowSet._<p>The results will be mapped to an SqlRowSet which holds the data in a_disconnected fashion. This wrapper will translate any SQLExceptions thrown._<p>Note that, for the default implementation, JDBC RowSet support needs to_be available at runtime: by default, Sun's {@code com.sun.rowset.CachedRowSetImpl}_class is used, which is part of JDK 1.5+ and also available separately as part of_Sun's JDBC RowSet Implementations download (rowset.jar)._@param sql SQL query to execute_@param paramMap map of parameters to bind to the query_(leaving it to the PreparedStatement to guess the corresponding SQL type)_@return a SqlRowSet representation (possibly a wrapper around a_{@code javax.sql.rowset.CachedRowSet})_@throws org.springframework.dao.DataAccessException if there is any problem executing the query_@see org.springframework.jdbc.core.JdbcTemplate#queryForRowSet(String)_@see org.springframework.jdbc.core.SqlRowSetResultSetExtractor_@see javax.sql.rowset.CachedRowSet;SqlRowSet queryForRowSet(String sql, Map<String, ?> paramMap) throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,expecting,a,sql,row,set,p,the,results,will,be,mapped,to,an,sql,row,set,which,holds,the,data,in,a,disconnected,fashion,this,wrapper,will,translate,any,sqlexceptions,thrown,p,note,that,for,the,default,implementation,jdbc,row,set,support,needs,to,be,available,at,runtime,by,default,sun,s,code,com,sun,rowset,cached,row,set,impl,class,is,used,which,is,part,of,jdk,1,5,and,also,available,separately,as,part,of,sun,s,jdbc,row,set,implementations,download,rowset,jar,param,sql,sql,query,to,execute,param,param,map,map,of,parameters,to,bind,to,the,query,leaving,it,to,the,prepared,statement,to,guess,the,corresponding,sql,type,return,a,sql,row,set,representation,possibly,a,wrapper,around,a,code,javax,sql,rowset,cached,row,set,throws,org,springframework,dao,data,access,exception,if,there,is,any,problem,executing,the,query,see,org,springframework,jdbc,core,jdbc,template,query,for,row,set,string,see,org,springframework,jdbc,core,sql,row,set,result,set,extractor,see,javax,sql,rowset,cached,row,set;sql,row,set,query,for,row,set,string,sql,map,string,param,map,throws,data,access,exception
NamedParameterJdbcOperations -> SqlRowSet queryForRowSet(String sql, Map<String, ?> paramMap) throws DataAccessException_;1530174524;Query given SQL to create a prepared statement from SQL and a_list of arguments to bind to the query, expecting a SqlRowSet._<p>The results will be mapped to an SqlRowSet which holds the data in a_disconnected fashion. This wrapper will translate any SQLExceptions thrown._<p>Note that, for the default implementation, JDBC RowSet support needs to_be available at runtime: by default, Sun's {@code com.sun.rowset.CachedRowSetImpl}_class is used, which is part of JDK 1.5+ and also available separately as part of_Sun's JDBC RowSet Implementations download (rowset.jar)._@param sql the SQL query to execute_@param paramMap map of parameters to bind to the query_(leaving it to the PreparedStatement to guess the corresponding SQL type)_@return a SqlRowSet representation (possibly a wrapper around a_{@code javax.sql.rowset.CachedRowSet})_@throws org.springframework.dao.DataAccessException if there is any problem executing the query_@see org.springframework.jdbc.core.JdbcTemplate#queryForRowSet(String)_@see org.springframework.jdbc.core.SqlRowSetResultSetExtractor_@see javax.sql.rowset.CachedRowSet;SqlRowSet queryForRowSet(String sql, Map<String, ?> paramMap) throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,expecting,a,sql,row,set,p,the,results,will,be,mapped,to,an,sql,row,set,which,holds,the,data,in,a,disconnected,fashion,this,wrapper,will,translate,any,sqlexceptions,thrown,p,note,that,for,the,default,implementation,jdbc,row,set,support,needs,to,be,available,at,runtime,by,default,sun,s,code,com,sun,rowset,cached,row,set,impl,class,is,used,which,is,part,of,jdk,1,5,and,also,available,separately,as,part,of,sun,s,jdbc,row,set,implementations,download,rowset,jar,param,sql,the,sql,query,to,execute,param,param,map,map,of,parameters,to,bind,to,the,query,leaving,it,to,the,prepared,statement,to,guess,the,corresponding,sql,type,return,a,sql,row,set,representation,possibly,a,wrapper,around,a,code,javax,sql,rowset,cached,row,set,throws,org,springframework,dao,data,access,exception,if,there,is,any,problem,executing,the,query,see,org,springframework,jdbc,core,jdbc,template,query,for,row,set,string,see,org,springframework,jdbc,core,sql,row,set,result,set,extractor,see,javax,sql,rowset,cached,row,set;sql,row,set,query,for,row,set,string,sql,map,string,param,map,throws,data,access,exception
NamedParameterJdbcOperations -> @Nullable 	<T> T query(String sql, SqlParameterSource paramSource, ResultSetExtractor<T> rse) 			throws DataAccessException_;1496837955;Query given SQL to create a prepared statement from SQL and a list_of arguments to bind to the query, reading the ResultSet with a_ResultSetExtractor._@param sql SQL query to execute_@param paramSource container of arguments to bind to the query_@param rse object that will extract results_@return an arbitrary result object, as returned by the ResultSetExtractor_@throws DataAccessException if the query fails;@Nullable_	<T> T query(String sql, SqlParameterSource paramSource, ResultSetExtractor<T> rse)_			throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,reading,the,result,set,with,a,result,set,extractor,param,sql,sql,query,to,execute,param,param,source,container,of,arguments,to,bind,to,the,query,param,rse,object,that,will,extract,results,return,an,arbitrary,result,object,as,returned,by,the,result,set,extractor,throws,data,access,exception,if,the,query,fails;nullable,t,t,query,string,sql,sql,parameter,source,param,source,result,set,extractor,t,rse,throws,data,access,exception
NamedParameterJdbcOperations -> @Nullable 	<T> T query(String sql, SqlParameterSource paramSource, ResultSetExtractor<T> rse) 			throws DataAccessException_;1502974979;Query given SQL to create a prepared statement from SQL and a list_of arguments to bind to the query, reading the ResultSet with a_ResultSetExtractor._@param sql SQL query to execute_@param paramSource container of arguments to bind to the query_@param rse object that will extract results_@return an arbitrary result object, as returned by the ResultSetExtractor_@throws DataAccessException if the query fails;@Nullable_	<T> T query(String sql, SqlParameterSource paramSource, ResultSetExtractor<T> rse)_			throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,reading,the,result,set,with,a,result,set,extractor,param,sql,sql,query,to,execute,param,param,source,container,of,arguments,to,bind,to,the,query,param,rse,object,that,will,extract,results,return,an,arbitrary,result,object,as,returned,by,the,result,set,extractor,throws,data,access,exception,if,the,query,fails;nullable,t,t,query,string,sql,sql,parameter,source,param,source,result,set,extractor,t,rse,throws,data,access,exception
NamedParameterJdbcOperations -> @Nullable 	<T> T query(String sql, SqlParameterSource paramSource, ResultSetExtractor<T> rse) 			throws DataAccessException_;1511712999;Query given SQL to create a prepared statement from SQL and a list_of arguments to bind to the query, reading the ResultSet with a_ResultSetExtractor._@param sql SQL query to execute_@param paramSource container of arguments to bind to the query_@param rse object that will extract results_@return an arbitrary result object, as returned by the ResultSetExtractor_@throws DataAccessException if the query fails;@Nullable_	<T> T query(String sql, SqlParameterSource paramSource, ResultSetExtractor<T> rse)_			throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,reading,the,result,set,with,a,result,set,extractor,param,sql,sql,query,to,execute,param,param,source,container,of,arguments,to,bind,to,the,query,param,rse,object,that,will,extract,results,return,an,arbitrary,result,object,as,returned,by,the,result,set,extractor,throws,data,access,exception,if,the,query,fails;nullable,t,t,query,string,sql,sql,parameter,source,param,source,result,set,extractor,t,rse,throws,data,access,exception
NamedParameterJdbcOperations -> @Nullable 	<T> T query(String sql, SqlParameterSource paramSource, ResultSetExtractor<T> rse) 			throws DataAccessException_;1530174524;Query given SQL to create a prepared statement from SQL and a list_of arguments to bind to the query, reading the ResultSet with a_ResultSetExtractor._@param sql the SQL query to execute_@param paramSource container of arguments to bind to the query_@param rse object that will extract results_@return an arbitrary result object, as returned by the ResultSetExtractor_@throws DataAccessException if the query fails;@Nullable_	<T> T query(String sql, SqlParameterSource paramSource, ResultSetExtractor<T> rse)_			throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,reading,the,result,set,with,a,result,set,extractor,param,sql,the,sql,query,to,execute,param,param,source,container,of,arguments,to,bind,to,the,query,param,rse,object,that,will,extract,results,return,an,arbitrary,result,object,as,returned,by,the,result,set,extractor,throws,data,access,exception,if,the,query,fails;nullable,t,t,query,string,sql,sql,parameter,source,param,source,result,set,extractor,t,rse,throws,data,access,exception
NamedParameterJdbcOperations -> long queryForLong(String sql, SqlParameterSource paramSource) throws DataAccessException_;1328020251;Query given SQL to create a prepared statement from SQL and a_list of arguments to bind to the query, resulting in a long value._<p>The query is expected to be a single row/single column query that_results in a long value._@param sql SQL query to execute_@param paramSource container of arguments to bind to the query_@return the long value, or 0 in case of SQL NULL_@throws org.springframework.dao.IncorrectResultSizeDataAccessException_if the query does not return exactly one row, or does not return exactly_one column in that row_@throws org.springframework.dao.DataAccessException if the query fails_@see org.springframework.jdbc.core.JdbcTemplate#queryForLong(String);long queryForLong(String sql, SqlParameterSource paramSource) throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,resulting,in,a,long,value,p,the,query,is,expected,to,be,a,single,row,single,column,query,that,results,in,a,long,value,param,sql,sql,query,to,execute,param,param,source,container,of,arguments,to,bind,to,the,query,return,the,long,value,or,0,in,case,of,sql,null,throws,org,springframework,dao,incorrect,result,size,data,access,exception,if,the,query,does,not,return,exactly,one,row,or,does,not,return,exactly,one,column,in,that,row,throws,org,springframework,dao,data,access,exception,if,the,query,fails,see,org,springframework,jdbc,core,jdbc,template,query,for,long,string;long,query,for,long,string,sql,sql,parameter,source,param,source,throws,data,access,exception
NamedParameterJdbcOperations -> long queryForLong(String sql, SqlParameterSource paramSource) throws DataAccessException_;1356735495;Query given SQL to create a prepared statement from SQL and a_list of arguments to bind to the query, resulting in a long value._<p>The query is expected to be a single row/single column query that_results in a long value._@param sql SQL query to execute_@param paramSource container of arguments to bind to the query_@return the long value, or 0 in case of SQL NULL_@throws org.springframework.dao.IncorrectResultSizeDataAccessException_if the query does not return exactly one row, or does not return exactly_one column in that row_@throws org.springframework.dao.DataAccessException if the query fails_@see org.springframework.jdbc.core.JdbcTemplate#queryForLong(String);long queryForLong(String sql, SqlParameterSource paramSource) throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,resulting,in,a,long,value,p,the,query,is,expected,to,be,a,single,row,single,column,query,that,results,in,a,long,value,param,sql,sql,query,to,execute,param,param,source,container,of,arguments,to,bind,to,the,query,return,the,long,value,or,0,in,case,of,sql,null,throws,org,springframework,dao,incorrect,result,size,data,access,exception,if,the,query,does,not,return,exactly,one,row,or,does,not,return,exactly,one,column,in,that,row,throws,org,springframework,dao,data,access,exception,if,the,query,fails,see,org,springframework,jdbc,core,jdbc,template,query,for,long,string;long,query,for,long,string,sql,sql,parameter,source,param,source,throws,data,access,exception
NamedParameterJdbcOperations -> int[] batchUpdate(String sql, SqlParameterSource[] batchArgs)_;1362408075;Execute a batch using the supplied SQL statement with the batch of supplied arguments._@param sql the SQL statement to execute_@param batchArgs the array of {@link SqlParameterSource} containing the batch of arguments for the query_@return an array containing the numbers of rows affected by each update in the batch;int[] batchUpdate(String sql, SqlParameterSource[] batchArgs)_;execute,a,batch,using,the,supplied,sql,statement,with,the,batch,of,supplied,arguments,param,sql,the,sql,statement,to,execute,param,batch,args,the,array,of,link,sql,parameter,source,containing,the,batch,of,arguments,for,the,query,return,an,array,containing,the,numbers,of,rows,affected,by,each,update,in,the,batch;int,batch,update,string,sql,sql,parameter,source,batch,args
NamedParameterJdbcOperations -> int[] batchUpdate(String sql, SqlParameterSource[] batchArgs)_;1419966315;Execute a batch using the supplied SQL statement with the batch of supplied arguments._@param sql the SQL statement to execute_@param batchArgs the array of {@link SqlParameterSource} containing the batch of arguments for the query_@return an array containing the numbers of rows affected by each update in the batch;int[] batchUpdate(String sql, SqlParameterSource[] batchArgs)_;execute,a,batch,using,the,supplied,sql,statement,with,the,batch,of,supplied,arguments,param,sql,the,sql,statement,to,execute,param,batch,args,the,array,of,link,sql,parameter,source,containing,the,batch,of,arguments,for,the,query,return,an,array,containing,the,numbers,of,rows,affected,by,each,update,in,the,batch;int,batch,update,string,sql,sql,parameter,source,batch,args
NamedParameterJdbcOperations -> int[] batchUpdate(String sql, SqlParameterSource[] batchArgs)_;1491113276;Execute a batch using the supplied SQL statement with the batch of supplied arguments._@param sql the SQL statement to execute_@param batchArgs the array of {@link SqlParameterSource} containing the batch of arguments for the query_@return an array containing the numbers of rows affected by each update in the batch;int[] batchUpdate(String sql, SqlParameterSource[] batchArgs)_;execute,a,batch,using,the,supplied,sql,statement,with,the,batch,of,supplied,arguments,param,sql,the,sql,statement,to,execute,param,batch,args,the,array,of,link,sql,parameter,source,containing,the,batch,of,arguments,for,the,query,return,an,array,containing,the,numbers,of,rows,affected,by,each,update,in,the,batch;int,batch,update,string,sql,sql,parameter,source,batch,args
NamedParameterJdbcOperations -> int[] batchUpdate(String sql, SqlParameterSource[] batchArgs)_;1495868221;Execute a batch using the supplied SQL statement with the batch of supplied arguments._@param sql the SQL statement to execute_@param batchArgs the array of {@link SqlParameterSource} containing the batch of arguments for the query_@return an array containing the numbers of rows affected by each update in the batch;int[] batchUpdate(String sql, SqlParameterSource[] batchArgs)_;execute,a,batch,using,the,supplied,sql,statement,with,the,batch,of,supplied,arguments,param,sql,the,sql,statement,to,execute,param,batch,args,the,array,of,link,sql,parameter,source,containing,the,batch,of,arguments,for,the,query,return,an,array,containing,the,numbers,of,rows,affected,by,each,update,in,the,batch;int,batch,update,string,sql,sql,parameter,source,batch,args
NamedParameterJdbcOperations -> int[] batchUpdate(String sql, SqlParameterSource[] batchArgs)_;1496837955;Execute a batch using the supplied SQL statement with the batch of supplied arguments._@param sql the SQL statement to execute_@param batchArgs the array of {@link SqlParameterSource} containing the batch of arguments for the query_@return an array containing the numbers of rows affected by each update in the batch;int[] batchUpdate(String sql, SqlParameterSource[] batchArgs)_;execute,a,batch,using,the,supplied,sql,statement,with,the,batch,of,supplied,arguments,param,sql,the,sql,statement,to,execute,param,batch,args,the,array,of,link,sql,parameter,source,containing,the,batch,of,arguments,for,the,query,return,an,array,containing,the,numbers,of,rows,affected,by,each,update,in,the,batch;int,batch,update,string,sql,sql,parameter,source,batch,args
NamedParameterJdbcOperations -> int[] batchUpdate(String sql, SqlParameterSource[] batchArgs)_;1502974979;Execute a batch using the supplied SQL statement with the batch of supplied arguments._@param sql the SQL statement to execute_@param batchArgs the array of {@link SqlParameterSource} containing the batch of arguments for the query_@return an array containing the numbers of rows affected by each update in the batch;int[] batchUpdate(String sql, SqlParameterSource[] batchArgs)_;execute,a,batch,using,the,supplied,sql,statement,with,the,batch,of,supplied,arguments,param,sql,the,sql,statement,to,execute,param,batch,args,the,array,of,link,sql,parameter,source,containing,the,batch,of,arguments,for,the,query,return,an,array,containing,the,numbers,of,rows,affected,by,each,update,in,the,batch;int,batch,update,string,sql,sql,parameter,source,batch,args
NamedParameterJdbcOperations -> int[] batchUpdate(String sql, SqlParameterSource[] batchArgs)_;1511712999;Execute a batch using the supplied SQL statement with the batch of supplied arguments._@param sql the SQL statement to execute_@param batchArgs the array of {@link SqlParameterSource} containing the batch of arguments for the query_@return an array containing the numbers of rows affected by each update in the batch;int[] batchUpdate(String sql, SqlParameterSource[] batchArgs)_;execute,a,batch,using,the,supplied,sql,statement,with,the,batch,of,supplied,arguments,param,sql,the,sql,statement,to,execute,param,batch,args,the,array,of,link,sql,parameter,source,containing,the,batch,of,arguments,for,the,query,return,an,array,containing,the,numbers,of,rows,affected,by,each,update,in,the,batch;int,batch,update,string,sql,sql,parameter,source,batch,args
NamedParameterJdbcOperations -> int[] batchUpdate(String sql, SqlParameterSource[] batchArgs)_;1530174524;Execute a batch using the supplied SQL statement with the batch of supplied arguments._@param sql the SQL statement to execute_@param batchArgs the array of {@link SqlParameterSource} containing the batch of arguments for the query_@return an array containing the numbers of rows affected by each update in the batch;int[] batchUpdate(String sql, SqlParameterSource[] batchArgs)_;execute,a,batch,using,the,supplied,sql,statement,with,the,batch,of,supplied,arguments,param,sql,the,sql,statement,to,execute,param,batch,args,the,array,of,link,sql,parameter,source,containing,the,batch,of,arguments,for,the,query,return,an,array,containing,the,numbers,of,rows,affected,by,each,update,in,the,batch;int,batch,update,string,sql,sql,parameter,source,batch,args
NamedParameterJdbcOperations -> Map<String, Object> queryForMap(String sql, Map<String, ?> paramMap) throws DataAccessException_;1328020251;Query given SQL to create a prepared statement from SQL and a_list of arguments to bind to the query, expecting a result Map._The queryForMap() methods defined by this interface are appropriate_when you don't have a domain model. Otherwise, consider using_one of the queryForObject() methods._<p>The query is expected to be a single row query_ the result row will be_mapped to a Map (one entry for each column, using the column name as the key)._@param sql SQL query to execute_@param paramMap map of parameters to bind to the query_(leaving it to the PreparedStatement to guess the corresponding SQL type)_@return the result Map (one entry for each column, using the column name as the key)_@throws org.springframework.dao.IncorrectResultSizeDataAccessException_if the query does not return exactly one row, or does not return exactly_one column in that row_@throws org.springframework.dao.DataAccessException if the query fails_@see org.springframework.jdbc.core.JdbcTemplate#queryForMap(String)_@see org.springframework.jdbc.core.ColumnMapRowMapper;Map<String, Object> queryForMap(String sql, Map<String, ?> paramMap) throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,expecting,a,result,map,the,query,for,map,methods,defined,by,this,interface,are,appropriate,when,you,don,t,have,a,domain,model,otherwise,consider,using,one,of,the,query,for,object,methods,p,the,query,is,expected,to,be,a,single,row,query,the,result,row,will,be,mapped,to,a,map,one,entry,for,each,column,using,the,column,name,as,the,key,param,sql,sql,query,to,execute,param,param,map,map,of,parameters,to,bind,to,the,query,leaving,it,to,the,prepared,statement,to,guess,the,corresponding,sql,type,return,the,result,map,one,entry,for,each,column,using,the,column,name,as,the,key,throws,org,springframework,dao,incorrect,result,size,data,access,exception,if,the,query,does,not,return,exactly,one,row,or,does,not,return,exactly,one,column,in,that,row,throws,org,springframework,dao,data,access,exception,if,the,query,fails,see,org,springframework,jdbc,core,jdbc,template,query,for,map,string,see,org,springframework,jdbc,core,column,map,row,mapper;map,string,object,query,for,map,string,sql,map,string,param,map,throws,data,access,exception
NamedParameterJdbcOperations -> Map<String, Object> queryForMap(String sql, Map<String, ?> paramMap) throws DataAccessException_;1356735495;Query given SQL to create a prepared statement from SQL and a_list of arguments to bind to the query, expecting a result Map._The queryForMap() methods defined by this interface are appropriate_when you don't have a domain model. Otherwise, consider using_one of the queryForObject() methods._<p>The query is expected to be a single row query_ the result row will be_mapped to a Map (one entry for each column, using the column name as the key)._@param sql SQL query to execute_@param paramMap map of parameters to bind to the query_(leaving it to the PreparedStatement to guess the corresponding SQL type)_@return the result Map (one entry for each column, using the column name as the key)_@throws org.springframework.dao.IncorrectResultSizeDataAccessException_if the query does not return exactly one row, or does not return exactly_one column in that row_@throws org.springframework.dao.DataAccessException if the query fails_@see org.springframework.jdbc.core.JdbcTemplate#queryForMap(String)_@see org.springframework.jdbc.core.ColumnMapRowMapper;Map<String, Object> queryForMap(String sql, Map<String, ?> paramMap) throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,expecting,a,result,map,the,query,for,map,methods,defined,by,this,interface,are,appropriate,when,you,don,t,have,a,domain,model,otherwise,consider,using,one,of,the,query,for,object,methods,p,the,query,is,expected,to,be,a,single,row,query,the,result,row,will,be,mapped,to,a,map,one,entry,for,each,column,using,the,column,name,as,the,key,param,sql,sql,query,to,execute,param,param,map,map,of,parameters,to,bind,to,the,query,leaving,it,to,the,prepared,statement,to,guess,the,corresponding,sql,type,return,the,result,map,one,entry,for,each,column,using,the,column,name,as,the,key,throws,org,springframework,dao,incorrect,result,size,data,access,exception,if,the,query,does,not,return,exactly,one,row,or,does,not,return,exactly,one,column,in,that,row,throws,org,springframework,dao,data,access,exception,if,the,query,fails,see,org,springframework,jdbc,core,jdbc,template,query,for,map,string,see,org,springframework,jdbc,core,column,map,row,mapper;map,string,object,query,for,map,string,sql,map,string,param,map,throws,data,access,exception
NamedParameterJdbcOperations -> Map<String, Object> queryForMap(String sql, Map<String, ?> paramMap) throws DataAccessException_;1362408075;Query given SQL to create a prepared statement from SQL and a_list of arguments to bind to the query, expecting a result Map._The queryForMap() methods defined by this interface are appropriate_when you don't have a domain model. Otherwise, consider using_one of the queryForObject() methods._<p>The query is expected to be a single row query_ the result row will be_mapped to a Map (one entry for each column, using the column name as the key)._@param sql SQL query to execute_@param paramMap map of parameters to bind to the query_(leaving it to the PreparedStatement to guess the corresponding SQL type)_@return the result Map (one entry for each column, using the column name as the key)_@throws org.springframework.dao.IncorrectResultSizeDataAccessException_if the query does not return exactly one row_@throws org.springframework.dao.DataAccessException if the query fails_@see org.springframework.jdbc.core.JdbcTemplate#queryForMap(String)_@see org.springframework.jdbc.core.ColumnMapRowMapper;Map<String, Object> queryForMap(String sql, Map<String, ?> paramMap) throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,expecting,a,result,map,the,query,for,map,methods,defined,by,this,interface,are,appropriate,when,you,don,t,have,a,domain,model,otherwise,consider,using,one,of,the,query,for,object,methods,p,the,query,is,expected,to,be,a,single,row,query,the,result,row,will,be,mapped,to,a,map,one,entry,for,each,column,using,the,column,name,as,the,key,param,sql,sql,query,to,execute,param,param,map,map,of,parameters,to,bind,to,the,query,leaving,it,to,the,prepared,statement,to,guess,the,corresponding,sql,type,return,the,result,map,one,entry,for,each,column,using,the,column,name,as,the,key,throws,org,springframework,dao,incorrect,result,size,data,access,exception,if,the,query,does,not,return,exactly,one,row,throws,org,springframework,dao,data,access,exception,if,the,query,fails,see,org,springframework,jdbc,core,jdbc,template,query,for,map,string,see,org,springframework,jdbc,core,column,map,row,mapper;map,string,object,query,for,map,string,sql,map,string,param,map,throws,data,access,exception
NamedParameterJdbcOperations -> Map<String, Object> queryForMap(String sql, Map<String, ?> paramMap) throws DataAccessException_;1419966315;Query given SQL to create a prepared statement from SQL and a_list of arguments to bind to the query, expecting a result Map._The queryForMap() methods defined by this interface are appropriate_when you don't have a domain model. Otherwise, consider using_one of the queryForObject() methods._<p>The query is expected to be a single row query_ the result row will be_mapped to a Map (one entry for each column, using the column name as the key)._@param sql SQL query to execute_@param paramMap map of parameters to bind to the query_(leaving it to the PreparedStatement to guess the corresponding SQL type)_@return the result Map (one entry for each column, using the column name as the key)_@throws org.springframework.dao.IncorrectResultSizeDataAccessException_if the query does not return exactly one row_@throws org.springframework.dao.DataAccessException if the query fails_@see org.springframework.jdbc.core.JdbcTemplate#queryForMap(String)_@see org.springframework.jdbc.core.ColumnMapRowMapper;Map<String, Object> queryForMap(String sql, Map<String, ?> paramMap) throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,expecting,a,result,map,the,query,for,map,methods,defined,by,this,interface,are,appropriate,when,you,don,t,have,a,domain,model,otherwise,consider,using,one,of,the,query,for,object,methods,p,the,query,is,expected,to,be,a,single,row,query,the,result,row,will,be,mapped,to,a,map,one,entry,for,each,column,using,the,column,name,as,the,key,param,sql,sql,query,to,execute,param,param,map,map,of,parameters,to,bind,to,the,query,leaving,it,to,the,prepared,statement,to,guess,the,corresponding,sql,type,return,the,result,map,one,entry,for,each,column,using,the,column,name,as,the,key,throws,org,springframework,dao,incorrect,result,size,data,access,exception,if,the,query,does,not,return,exactly,one,row,throws,org,springframework,dao,data,access,exception,if,the,query,fails,see,org,springframework,jdbc,core,jdbc,template,query,for,map,string,see,org,springframework,jdbc,core,column,map,row,mapper;map,string,object,query,for,map,string,sql,map,string,param,map,throws,data,access,exception
NamedParameterJdbcOperations -> Map<String, Object> queryForMap(String sql, Map<String, ?> paramMap) throws DataAccessException_;1491113276;Query given SQL to create a prepared statement from SQL and a_list of arguments to bind to the query, expecting a result Map._The queryForMap() methods defined by this interface are appropriate_when you don't have a domain model. Otherwise, consider using_one of the queryForObject() methods._<p>The query is expected to be a single row query_ the result row will be_mapped to a Map (one entry for each column, using the column name as the key)._@param sql SQL query to execute_@param paramMap map of parameters to bind to the query_(leaving it to the PreparedStatement to guess the corresponding SQL type)_@return the result Map (one entry for each column, using the column name as the key)_@throws org.springframework.dao.IncorrectResultSizeDataAccessException_if the query does not return exactly one row_@throws org.springframework.dao.DataAccessException if the query fails_@see org.springframework.jdbc.core.JdbcTemplate#queryForMap(String)_@see org.springframework.jdbc.core.ColumnMapRowMapper;Map<String, Object> queryForMap(String sql, Map<String, ?> paramMap) throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,expecting,a,result,map,the,query,for,map,methods,defined,by,this,interface,are,appropriate,when,you,don,t,have,a,domain,model,otherwise,consider,using,one,of,the,query,for,object,methods,p,the,query,is,expected,to,be,a,single,row,query,the,result,row,will,be,mapped,to,a,map,one,entry,for,each,column,using,the,column,name,as,the,key,param,sql,sql,query,to,execute,param,param,map,map,of,parameters,to,bind,to,the,query,leaving,it,to,the,prepared,statement,to,guess,the,corresponding,sql,type,return,the,result,map,one,entry,for,each,column,using,the,column,name,as,the,key,throws,org,springframework,dao,incorrect,result,size,data,access,exception,if,the,query,does,not,return,exactly,one,row,throws,org,springframework,dao,data,access,exception,if,the,query,fails,see,org,springframework,jdbc,core,jdbc,template,query,for,map,string,see,org,springframework,jdbc,core,column,map,row,mapper;map,string,object,query,for,map,string,sql,map,string,param,map,throws,data,access,exception
NamedParameterJdbcOperations -> Map<String, Object> queryForMap(String sql, Map<String, ?> paramMap) throws DataAccessException_;1495868221;Query given SQL to create a prepared statement from SQL and a_list of arguments to bind to the query, expecting a result Map._The queryForMap() methods defined by this interface are appropriate_when you don't have a domain model. Otherwise, consider using_one of the queryForObject() methods._<p>The query is expected to be a single row query_ the result row will be_mapped to a Map (one entry for each column, using the column name as the key)._@param sql SQL query to execute_@param paramMap map of parameters to bind to the query_(leaving it to the PreparedStatement to guess the corresponding SQL type)_@return the result Map (one entry for each column, using the column name as the key)_@throws org.springframework.dao.IncorrectResultSizeDataAccessException_if the query does not return exactly one row_@throws org.springframework.dao.DataAccessException if the query fails_@see org.springframework.jdbc.core.JdbcTemplate#queryForMap(String)_@see org.springframework.jdbc.core.ColumnMapRowMapper;Map<String, Object> queryForMap(String sql, Map<String, ?> paramMap) throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,expecting,a,result,map,the,query,for,map,methods,defined,by,this,interface,are,appropriate,when,you,don,t,have,a,domain,model,otherwise,consider,using,one,of,the,query,for,object,methods,p,the,query,is,expected,to,be,a,single,row,query,the,result,row,will,be,mapped,to,a,map,one,entry,for,each,column,using,the,column,name,as,the,key,param,sql,sql,query,to,execute,param,param,map,map,of,parameters,to,bind,to,the,query,leaving,it,to,the,prepared,statement,to,guess,the,corresponding,sql,type,return,the,result,map,one,entry,for,each,column,using,the,column,name,as,the,key,throws,org,springframework,dao,incorrect,result,size,data,access,exception,if,the,query,does,not,return,exactly,one,row,throws,org,springframework,dao,data,access,exception,if,the,query,fails,see,org,springframework,jdbc,core,jdbc,template,query,for,map,string,see,org,springframework,jdbc,core,column,map,row,mapper;map,string,object,query,for,map,string,sql,map,string,param,map,throws,data,access,exception
NamedParameterJdbcOperations -> Map<String, Object> queryForMap(String sql, Map<String, ?> paramMap) throws DataAccessException_;1496837955;Query given SQL to create a prepared statement from SQL and a_list of arguments to bind to the query, expecting a result Map._The queryForMap() methods defined by this interface are appropriate_when you don't have a domain model. Otherwise, consider using_one of the queryForObject() methods._<p>The query is expected to be a single row query_ the result row will be_mapped to a Map (one entry for each column, using the column name as the key)._@param sql SQL query to execute_@param paramMap map of parameters to bind to the query_(leaving it to the PreparedStatement to guess the corresponding SQL type)_@return the result Map (one entry for each column, using the column name as the key)_@throws org.springframework.dao.IncorrectResultSizeDataAccessException_if the query does not return exactly one row_@throws org.springframework.dao.DataAccessException if the query fails_@see org.springframework.jdbc.core.JdbcTemplate#queryForMap(String)_@see org.springframework.jdbc.core.ColumnMapRowMapper;Map<String, Object> queryForMap(String sql, Map<String, ?> paramMap) throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,expecting,a,result,map,the,query,for,map,methods,defined,by,this,interface,are,appropriate,when,you,don,t,have,a,domain,model,otherwise,consider,using,one,of,the,query,for,object,methods,p,the,query,is,expected,to,be,a,single,row,query,the,result,row,will,be,mapped,to,a,map,one,entry,for,each,column,using,the,column,name,as,the,key,param,sql,sql,query,to,execute,param,param,map,map,of,parameters,to,bind,to,the,query,leaving,it,to,the,prepared,statement,to,guess,the,corresponding,sql,type,return,the,result,map,one,entry,for,each,column,using,the,column,name,as,the,key,throws,org,springframework,dao,incorrect,result,size,data,access,exception,if,the,query,does,not,return,exactly,one,row,throws,org,springframework,dao,data,access,exception,if,the,query,fails,see,org,springframework,jdbc,core,jdbc,template,query,for,map,string,see,org,springframework,jdbc,core,column,map,row,mapper;map,string,object,query,for,map,string,sql,map,string,param,map,throws,data,access,exception
NamedParameterJdbcOperations -> Map<String, Object> queryForMap(String sql, Map<String, ?> paramMap) throws DataAccessException_;1502974979;Query given SQL to create a prepared statement from SQL and a_list of arguments to bind to the query, expecting a result Map._The queryForMap() methods defined by this interface are appropriate_when you don't have a domain model. Otherwise, consider using_one of the queryForObject() methods._<p>The query is expected to be a single row query_ the result row will be_mapped to a Map (one entry for each column, using the column name as the key)._@param sql SQL query to execute_@param paramMap map of parameters to bind to the query_(leaving it to the PreparedStatement to guess the corresponding SQL type)_@return the result Map (one entry for each column, using the column name as the key)_@throws org.springframework.dao.IncorrectResultSizeDataAccessException_if the query does not return exactly one row_@throws org.springframework.dao.DataAccessException if the query fails_@see org.springframework.jdbc.core.JdbcTemplate#queryForMap(String)_@see org.springframework.jdbc.core.ColumnMapRowMapper;Map<String, Object> queryForMap(String sql, Map<String, ?> paramMap) throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,expecting,a,result,map,the,query,for,map,methods,defined,by,this,interface,are,appropriate,when,you,don,t,have,a,domain,model,otherwise,consider,using,one,of,the,query,for,object,methods,p,the,query,is,expected,to,be,a,single,row,query,the,result,row,will,be,mapped,to,a,map,one,entry,for,each,column,using,the,column,name,as,the,key,param,sql,sql,query,to,execute,param,param,map,map,of,parameters,to,bind,to,the,query,leaving,it,to,the,prepared,statement,to,guess,the,corresponding,sql,type,return,the,result,map,one,entry,for,each,column,using,the,column,name,as,the,key,throws,org,springframework,dao,incorrect,result,size,data,access,exception,if,the,query,does,not,return,exactly,one,row,throws,org,springframework,dao,data,access,exception,if,the,query,fails,see,org,springframework,jdbc,core,jdbc,template,query,for,map,string,see,org,springframework,jdbc,core,column,map,row,mapper;map,string,object,query,for,map,string,sql,map,string,param,map,throws,data,access,exception
NamedParameterJdbcOperations -> Map<String, Object> queryForMap(String sql, Map<String, ?> paramMap) throws DataAccessException_;1511712999;Query given SQL to create a prepared statement from SQL and a_list of arguments to bind to the query, expecting a result Map._The queryForMap() methods defined by this interface are appropriate_when you don't have a domain model. Otherwise, consider using_one of the queryForObject() methods._<p>The query is expected to be a single row query_ the result row will be_mapped to a Map (one entry for each column, using the column name as the key)._@param sql SQL query to execute_@param paramMap map of parameters to bind to the query_(leaving it to the PreparedStatement to guess the corresponding SQL type)_@return the result Map (one entry for each column, using the column name as the key)_@throws org.springframework.dao.IncorrectResultSizeDataAccessException_if the query does not return exactly one row_@throws org.springframework.dao.DataAccessException if the query fails_@see org.springframework.jdbc.core.JdbcTemplate#queryForMap(String)_@see org.springframework.jdbc.core.ColumnMapRowMapper;Map<String, Object> queryForMap(String sql, Map<String, ?> paramMap) throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,expecting,a,result,map,the,query,for,map,methods,defined,by,this,interface,are,appropriate,when,you,don,t,have,a,domain,model,otherwise,consider,using,one,of,the,query,for,object,methods,p,the,query,is,expected,to,be,a,single,row,query,the,result,row,will,be,mapped,to,a,map,one,entry,for,each,column,using,the,column,name,as,the,key,param,sql,sql,query,to,execute,param,param,map,map,of,parameters,to,bind,to,the,query,leaving,it,to,the,prepared,statement,to,guess,the,corresponding,sql,type,return,the,result,map,one,entry,for,each,column,using,the,column,name,as,the,key,throws,org,springframework,dao,incorrect,result,size,data,access,exception,if,the,query,does,not,return,exactly,one,row,throws,org,springframework,dao,data,access,exception,if,the,query,fails,see,org,springframework,jdbc,core,jdbc,template,query,for,map,string,see,org,springframework,jdbc,core,column,map,row,mapper;map,string,object,query,for,map,string,sql,map,string,param,map,throws,data,access,exception
NamedParameterJdbcOperations -> Map<String, Object> queryForMap(String sql, Map<String, ?> paramMap) throws DataAccessException_;1530174524;Query given SQL to create a prepared statement from SQL and a_list of arguments to bind to the query, expecting a result Map._The queryForMap() methods defined by this interface are appropriate_when you don't have a domain model. Otherwise, consider using_one of the queryForObject() methods._<p>The query is expected to be a single row query_ the result row will be_mapped to a Map (one entry for each column, using the column name as the key)._@param sql the SQL query to execute_@param paramMap map of parameters to bind to the query_(leaving it to the PreparedStatement to guess the corresponding SQL type)_@return the result Map (one entry for each column, using the column name as the key)_@throws org.springframework.dao.IncorrectResultSizeDataAccessException_if the query does not return exactly one row_@throws org.springframework.dao.DataAccessException if the query fails_@see org.springframework.jdbc.core.JdbcTemplate#queryForMap(String)_@see org.springframework.jdbc.core.ColumnMapRowMapper;Map<String, Object> queryForMap(String sql, Map<String, ?> paramMap) throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,expecting,a,result,map,the,query,for,map,methods,defined,by,this,interface,are,appropriate,when,you,don,t,have,a,domain,model,otherwise,consider,using,one,of,the,query,for,object,methods,p,the,query,is,expected,to,be,a,single,row,query,the,result,row,will,be,mapped,to,a,map,one,entry,for,each,column,using,the,column,name,as,the,key,param,sql,the,sql,query,to,execute,param,param,map,map,of,parameters,to,bind,to,the,query,leaving,it,to,the,prepared,statement,to,guess,the,corresponding,sql,type,return,the,result,map,one,entry,for,each,column,using,the,column,name,as,the,key,throws,org,springframework,dao,incorrect,result,size,data,access,exception,if,the,query,does,not,return,exactly,one,row,throws,org,springframework,dao,data,access,exception,if,the,query,fails,see,org,springframework,jdbc,core,jdbc,template,query,for,map,string,see,org,springframework,jdbc,core,column,map,row,mapper;map,string,object,query,for,map,string,sql,map,string,param,map,throws,data,access,exception
NamedParameterJdbcOperations -> <T> List<T> query(String sql, SqlParameterSource paramSource, RowMapper<T> rowMapper) 			throws DataAccessException_;1328020251;Query given SQL to create a prepared statement from SQL and a list_of arguments to bind to the query, mapping each row to a Java object_via a RowMapper._@param sql SQL query to execute_@param paramSource container of arguments to bind to the query_@param rowMapper object that will map one object per row_@return the result List, containing mapped objects_@throws org.springframework.dao.DataAccessException if the query fails;<T> List<T> query(String sql, SqlParameterSource paramSource, RowMapper<T> rowMapper)_			throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,mapping,each,row,to,a,java,object,via,a,row,mapper,param,sql,sql,query,to,execute,param,param,source,container,of,arguments,to,bind,to,the,query,param,row,mapper,object,that,will,map,one,object,per,row,return,the,result,list,containing,mapped,objects,throws,org,springframework,dao,data,access,exception,if,the,query,fails;t,list,t,query,string,sql,sql,parameter,source,param,source,row,mapper,t,row,mapper,throws,data,access,exception
NamedParameterJdbcOperations -> <T> List<T> query(String sql, SqlParameterSource paramSource, RowMapper<T> rowMapper) 			throws DataAccessException_;1356735495;Query given SQL to create a prepared statement from SQL and a list_of arguments to bind to the query, mapping each row to a Java object_via a RowMapper._@param sql SQL query to execute_@param paramSource container of arguments to bind to the query_@param rowMapper object that will map one object per row_@return the result List, containing mapped objects_@throws org.springframework.dao.DataAccessException if the query fails;<T> List<T> query(String sql, SqlParameterSource paramSource, RowMapper<T> rowMapper)_			throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,mapping,each,row,to,a,java,object,via,a,row,mapper,param,sql,sql,query,to,execute,param,param,source,container,of,arguments,to,bind,to,the,query,param,row,mapper,object,that,will,map,one,object,per,row,return,the,result,list,containing,mapped,objects,throws,org,springframework,dao,data,access,exception,if,the,query,fails;t,list,t,query,string,sql,sql,parameter,source,param,source,row,mapper,t,row,mapper,throws,data,access,exception
NamedParameterJdbcOperations -> <T> List<T> query(String sql, SqlParameterSource paramSource, RowMapper<T> rowMapper) 			throws DataAccessException_;1362408075;Query given SQL to create a prepared statement from SQL and a list_of arguments to bind to the query, mapping each row to a Java object_via a RowMapper._@param sql SQL query to execute_@param paramSource container of arguments to bind to the query_@param rowMapper object that will map one object per row_@return the result List, containing mapped objects_@throws org.springframework.dao.DataAccessException if the query fails;<T> List<T> query(String sql, SqlParameterSource paramSource, RowMapper<T> rowMapper)_			throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,mapping,each,row,to,a,java,object,via,a,row,mapper,param,sql,sql,query,to,execute,param,param,source,container,of,arguments,to,bind,to,the,query,param,row,mapper,object,that,will,map,one,object,per,row,return,the,result,list,containing,mapped,objects,throws,org,springframework,dao,data,access,exception,if,the,query,fails;t,list,t,query,string,sql,sql,parameter,source,param,source,row,mapper,t,row,mapper,throws,data,access,exception
NamedParameterJdbcOperations -> <T> List<T> query(String sql, SqlParameterSource paramSource, RowMapper<T> rowMapper) 			throws DataAccessException_;1419966315;Query given SQL to create a prepared statement from SQL and a list_of arguments to bind to the query, mapping each row to a Java object_via a RowMapper._@param sql SQL query to execute_@param paramSource container of arguments to bind to the query_@param rowMapper object that will map one object per row_@return the result List, containing mapped objects_@throws org.springframework.dao.DataAccessException if the query fails;<T> List<T> query(String sql, SqlParameterSource paramSource, RowMapper<T> rowMapper)_			throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,mapping,each,row,to,a,java,object,via,a,row,mapper,param,sql,sql,query,to,execute,param,param,source,container,of,arguments,to,bind,to,the,query,param,row,mapper,object,that,will,map,one,object,per,row,return,the,result,list,containing,mapped,objects,throws,org,springframework,dao,data,access,exception,if,the,query,fails;t,list,t,query,string,sql,sql,parameter,source,param,source,row,mapper,t,row,mapper,throws,data,access,exception
NamedParameterJdbcOperations -> <T> List<T> query(String sql, SqlParameterSource paramSource, RowMapper<T> rowMapper) 			throws DataAccessException_;1491113276;Query given SQL to create a prepared statement from SQL and a list_of arguments to bind to the query, mapping each row to a Java object_via a RowMapper._@param sql SQL query to execute_@param paramSource container of arguments to bind to the query_@param rowMapper object that will map one object per row_@return the result List, containing mapped objects_@throws org.springframework.dao.DataAccessException if the query fails;<T> List<T> query(String sql, SqlParameterSource paramSource, RowMapper<T> rowMapper)_			throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,mapping,each,row,to,a,java,object,via,a,row,mapper,param,sql,sql,query,to,execute,param,param,source,container,of,arguments,to,bind,to,the,query,param,row,mapper,object,that,will,map,one,object,per,row,return,the,result,list,containing,mapped,objects,throws,org,springframework,dao,data,access,exception,if,the,query,fails;t,list,t,query,string,sql,sql,parameter,source,param,source,row,mapper,t,row,mapper,throws,data,access,exception
NamedParameterJdbcOperations -> <T> List<T> query(String sql, SqlParameterSource paramSource, RowMapper<T> rowMapper) 			throws DataAccessException_;1495868221;Query given SQL to create a prepared statement from SQL and a list_of arguments to bind to the query, mapping each row to a Java object_via a RowMapper._@param sql SQL query to execute_@param paramSource container of arguments to bind to the query_@param rowMapper object that will map one object per row_@return the result List, containing mapped objects_@throws org.springframework.dao.DataAccessException if the query fails;<T> List<T> query(String sql, SqlParameterSource paramSource, RowMapper<T> rowMapper)_			throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,mapping,each,row,to,a,java,object,via,a,row,mapper,param,sql,sql,query,to,execute,param,param,source,container,of,arguments,to,bind,to,the,query,param,row,mapper,object,that,will,map,one,object,per,row,return,the,result,list,containing,mapped,objects,throws,org,springframework,dao,data,access,exception,if,the,query,fails;t,list,t,query,string,sql,sql,parameter,source,param,source,row,mapper,t,row,mapper,throws,data,access,exception
NamedParameterJdbcOperations -> <T> List<T> query(String sql, SqlParameterSource paramSource, RowMapper<T> rowMapper) 			throws DataAccessException_;1496837955;Query given SQL to create a prepared statement from SQL and a list_of arguments to bind to the query, mapping each row to a Java object_via a RowMapper._@param sql SQL query to execute_@param paramSource container of arguments to bind to the query_@param rowMapper object that will map one object per row_@return the result List, containing mapped objects_@throws org.springframework.dao.DataAccessException if the query fails;<T> List<T> query(String sql, SqlParameterSource paramSource, RowMapper<T> rowMapper)_			throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,mapping,each,row,to,a,java,object,via,a,row,mapper,param,sql,sql,query,to,execute,param,param,source,container,of,arguments,to,bind,to,the,query,param,row,mapper,object,that,will,map,one,object,per,row,return,the,result,list,containing,mapped,objects,throws,org,springframework,dao,data,access,exception,if,the,query,fails;t,list,t,query,string,sql,sql,parameter,source,param,source,row,mapper,t,row,mapper,throws,data,access,exception
NamedParameterJdbcOperations -> <T> List<T> query(String sql, SqlParameterSource paramSource, RowMapper<T> rowMapper) 			throws DataAccessException_;1502974979;Query given SQL to create a prepared statement from SQL and a list_of arguments to bind to the query, mapping each row to a Java object_via a RowMapper._@param sql SQL query to execute_@param paramSource container of arguments to bind to the query_@param rowMapper object that will map one object per row_@return the result List, containing mapped objects_@throws org.springframework.dao.DataAccessException if the query fails;<T> List<T> query(String sql, SqlParameterSource paramSource, RowMapper<T> rowMapper)_			throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,mapping,each,row,to,a,java,object,via,a,row,mapper,param,sql,sql,query,to,execute,param,param,source,container,of,arguments,to,bind,to,the,query,param,row,mapper,object,that,will,map,one,object,per,row,return,the,result,list,containing,mapped,objects,throws,org,springframework,dao,data,access,exception,if,the,query,fails;t,list,t,query,string,sql,sql,parameter,source,param,source,row,mapper,t,row,mapper,throws,data,access,exception
NamedParameterJdbcOperations -> <T> List<T> query(String sql, SqlParameterSource paramSource, RowMapper<T> rowMapper) 			throws DataAccessException_;1511712999;Query given SQL to create a prepared statement from SQL and a list_of arguments to bind to the query, mapping each row to a Java object_via a RowMapper._@param sql SQL query to execute_@param paramSource container of arguments to bind to the query_@param rowMapper object that will map one object per row_@return the result List, containing mapped objects_@throws org.springframework.dao.DataAccessException if the query fails;<T> List<T> query(String sql, SqlParameterSource paramSource, RowMapper<T> rowMapper)_			throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,mapping,each,row,to,a,java,object,via,a,row,mapper,param,sql,sql,query,to,execute,param,param,source,container,of,arguments,to,bind,to,the,query,param,row,mapper,object,that,will,map,one,object,per,row,return,the,result,list,containing,mapped,objects,throws,org,springframework,dao,data,access,exception,if,the,query,fails;t,list,t,query,string,sql,sql,parameter,source,param,source,row,mapper,t,row,mapper,throws,data,access,exception
NamedParameterJdbcOperations -> <T> List<T> query(String sql, SqlParameterSource paramSource, RowMapper<T> rowMapper) 			throws DataAccessException_;1530174524;Query given SQL to create a prepared statement from SQL and a list_of arguments to bind to the query, mapping each row to a Java object_via a RowMapper._@param sql the SQL query to execute_@param paramSource container of arguments to bind to the query_@param rowMapper object that will map one object per row_@return the result List, containing mapped objects_@throws org.springframework.dao.DataAccessException if the query fails;<T> List<T> query(String sql, SqlParameterSource paramSource, RowMapper<T> rowMapper)_			throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,mapping,each,row,to,a,java,object,via,a,row,mapper,param,sql,the,sql,query,to,execute,param,param,source,container,of,arguments,to,bind,to,the,query,param,row,mapper,object,that,will,map,one,object,per,row,return,the,result,list,containing,mapped,objects,throws,org,springframework,dao,data,access,exception,if,the,query,fails;t,list,t,query,string,sql,sql,parameter,source,param,source,row,mapper,t,row,mapper,throws,data,access,exception
NamedParameterJdbcOperations -> <T> T execute(String sql, SqlParameterSource paramSource, PreparedStatementCallback<T> action) 			throws DataAccessException_;1328020251;Execute a JDBC data access operation, implemented as callback action_working on a JDBC PreparedStatement. This allows for implementing arbitrary_data access operations on a single Statement, within Spring's managed_JDBC environment: that is, participating in Spring-managed transactions_and converting JDBC SQLExceptions into Spring's DataAccessException hierarchy._<p>The callback action can return a result object, for example a_domain object or a collection of domain objects._@param sql SQL to execute_@param paramSource container of arguments to bind to the query_@param action callback object that specifies the action_@return a result object returned by the action, or <code>null</code>_@throws DataAccessException if there is any problem;<T> T execute(String sql, SqlParameterSource paramSource, PreparedStatementCallback<T> action)_			throws DataAccessException_;execute,a,jdbc,data,access,operation,implemented,as,callback,action,working,on,a,jdbc,prepared,statement,this,allows,for,implementing,arbitrary,data,access,operations,on,a,single,statement,within,spring,s,managed,jdbc,environment,that,is,participating,in,spring,managed,transactions,and,converting,jdbc,sqlexceptions,into,spring,s,data,access,exception,hierarchy,p,the,callback,action,can,return,a,result,object,for,example,a,domain,object,or,a,collection,of,domain,objects,param,sql,sql,to,execute,param,param,source,container,of,arguments,to,bind,to,the,query,param,action,callback,object,that,specifies,the,action,return,a,result,object,returned,by,the,action,or,code,null,code,throws,data,access,exception,if,there,is,any,problem;t,t,execute,string,sql,sql,parameter,source,param,source,prepared,statement,callback,t,action,throws,data,access,exception
NamedParameterJdbcOperations -> <T> T execute(String sql, SqlParameterSource paramSource, PreparedStatementCallback<T> action) 			throws DataAccessException_;1356735495;Execute a JDBC data access operation, implemented as callback action_working on a JDBC PreparedStatement. This allows for implementing arbitrary_data access operations on a single Statement, within Spring's managed_JDBC environment: that is, participating in Spring-managed transactions_and converting JDBC SQLExceptions into Spring's DataAccessException hierarchy._<p>The callback action can return a result object, for example a_domain object or a collection of domain objects._@param sql SQL to execute_@param paramSource container of arguments to bind to the query_@param action callback object that specifies the action_@return a result object returned by the action, or {@code null}_@throws DataAccessException if there is any problem;<T> T execute(String sql, SqlParameterSource paramSource, PreparedStatementCallback<T> action)_			throws DataAccessException_;execute,a,jdbc,data,access,operation,implemented,as,callback,action,working,on,a,jdbc,prepared,statement,this,allows,for,implementing,arbitrary,data,access,operations,on,a,single,statement,within,spring,s,managed,jdbc,environment,that,is,participating,in,spring,managed,transactions,and,converting,jdbc,sqlexceptions,into,spring,s,data,access,exception,hierarchy,p,the,callback,action,can,return,a,result,object,for,example,a,domain,object,or,a,collection,of,domain,objects,param,sql,sql,to,execute,param,param,source,container,of,arguments,to,bind,to,the,query,param,action,callback,object,that,specifies,the,action,return,a,result,object,returned,by,the,action,or,code,null,throws,data,access,exception,if,there,is,any,problem;t,t,execute,string,sql,sql,parameter,source,param,source,prepared,statement,callback,t,action,throws,data,access,exception
NamedParameterJdbcOperations -> <T> T execute(String sql, SqlParameterSource paramSource, PreparedStatementCallback<T> action) 			throws DataAccessException_;1362408075;Execute a JDBC data access operation, implemented as callback action_working on a JDBC PreparedStatement. This allows for implementing arbitrary_data access operations on a single Statement, within Spring's managed_JDBC environment: that is, participating in Spring-managed transactions_and converting JDBC SQLExceptions into Spring's DataAccessException hierarchy._<p>The callback action can return a result object, for example a_domain object or a collection of domain objects._@param sql SQL to execute_@param paramSource container of arguments to bind to the query_@param action callback object that specifies the action_@return a result object returned by the action, or {@code null}_@throws DataAccessException if there is any problem;<T> T execute(String sql, SqlParameterSource paramSource, PreparedStatementCallback<T> action)_			throws DataAccessException_;execute,a,jdbc,data,access,operation,implemented,as,callback,action,working,on,a,jdbc,prepared,statement,this,allows,for,implementing,arbitrary,data,access,operations,on,a,single,statement,within,spring,s,managed,jdbc,environment,that,is,participating,in,spring,managed,transactions,and,converting,jdbc,sqlexceptions,into,spring,s,data,access,exception,hierarchy,p,the,callback,action,can,return,a,result,object,for,example,a,domain,object,or,a,collection,of,domain,objects,param,sql,sql,to,execute,param,param,source,container,of,arguments,to,bind,to,the,query,param,action,callback,object,that,specifies,the,action,return,a,result,object,returned,by,the,action,or,code,null,throws,data,access,exception,if,there,is,any,problem;t,t,execute,string,sql,sql,parameter,source,param,source,prepared,statement,callback,t,action,throws,data,access,exception
NamedParameterJdbcOperations -> <T> T execute(String sql, SqlParameterSource paramSource, PreparedStatementCallback<T> action) 			throws DataAccessException_;1419966315;Execute a JDBC data access operation, implemented as callback action_working on a JDBC PreparedStatement. This allows for implementing arbitrary_data access operations on a single Statement, within Spring's managed_JDBC environment: that is, participating in Spring-managed transactions_and converting JDBC SQLExceptions into Spring's DataAccessException hierarchy._<p>The callback action can return a result object, for example a_domain object or a collection of domain objects._@param sql SQL to execute_@param paramSource container of arguments to bind to the query_@param action callback object that specifies the action_@return a result object returned by the action, or {@code null}_@throws DataAccessException if there is any problem;<T> T execute(String sql, SqlParameterSource paramSource, PreparedStatementCallback<T> action)_			throws DataAccessException_;execute,a,jdbc,data,access,operation,implemented,as,callback,action,working,on,a,jdbc,prepared,statement,this,allows,for,implementing,arbitrary,data,access,operations,on,a,single,statement,within,spring,s,managed,jdbc,environment,that,is,participating,in,spring,managed,transactions,and,converting,jdbc,sqlexceptions,into,spring,s,data,access,exception,hierarchy,p,the,callback,action,can,return,a,result,object,for,example,a,domain,object,or,a,collection,of,domain,objects,param,sql,sql,to,execute,param,param,source,container,of,arguments,to,bind,to,the,query,param,action,callback,object,that,specifies,the,action,return,a,result,object,returned,by,the,action,or,code,null,throws,data,access,exception,if,there,is,any,problem;t,t,execute,string,sql,sql,parameter,source,param,source,prepared,statement,callback,t,action,throws,data,access,exception
NamedParameterJdbcOperations -> <T> T execute(String sql, SqlParameterSource paramSource, PreparedStatementCallback<T> action) 			throws DataAccessException_;1491113276;Execute a JDBC data access operation, implemented as callback action_working on a JDBC PreparedStatement. This allows for implementing arbitrary_data access operations on a single Statement, within Spring's managed_JDBC environment: that is, participating in Spring-managed transactions_and converting JDBC SQLExceptions into Spring's DataAccessException hierarchy._<p>The callback action can return a result object, for example a_domain object or a collection of domain objects._@param sql SQL to execute_@param paramSource container of arguments to bind to the query_@param action callback object that specifies the action_@return a result object returned by the action, or {@code null}_@throws DataAccessException if there is any problem;<T> T execute(String sql, SqlParameterSource paramSource, PreparedStatementCallback<T> action)_			throws DataAccessException_;execute,a,jdbc,data,access,operation,implemented,as,callback,action,working,on,a,jdbc,prepared,statement,this,allows,for,implementing,arbitrary,data,access,operations,on,a,single,statement,within,spring,s,managed,jdbc,environment,that,is,participating,in,spring,managed,transactions,and,converting,jdbc,sqlexceptions,into,spring,s,data,access,exception,hierarchy,p,the,callback,action,can,return,a,result,object,for,example,a,domain,object,or,a,collection,of,domain,objects,param,sql,sql,to,execute,param,param,source,container,of,arguments,to,bind,to,the,query,param,action,callback,object,that,specifies,the,action,return,a,result,object,returned,by,the,action,or,code,null,throws,data,access,exception,if,there,is,any,problem;t,t,execute,string,sql,sql,parameter,source,param,source,prepared,statement,callback,t,action,throws,data,access,exception
NamedParameterJdbcOperations -> long queryForLong(String sql, Map<String, ?> paramMap) throws DataAccessException_;1328020251;Query given SQL to create a prepared statement from SQL and a_list of arguments to bind to the query, resulting in a long value._<p>The query is expected to be a single row/single column query that_results in a long value._@param sql SQL query to execute_@param paramMap map of parameters to bind to the query_(leaving it to the PreparedStatement to guess the corresponding SQL type)_@return the long value, or 0 in case of SQL NULL_@throws org.springframework.dao.IncorrectResultSizeDataAccessException_if the query does not return exactly one row, or does not return exactly_one column in that row_@throws org.springframework.dao.DataAccessException if the query fails_@see org.springframework.jdbc.core.JdbcTemplate#queryForLong(String);long queryForLong(String sql, Map<String, ?> paramMap) throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,resulting,in,a,long,value,p,the,query,is,expected,to,be,a,single,row,single,column,query,that,results,in,a,long,value,param,sql,sql,query,to,execute,param,param,map,map,of,parameters,to,bind,to,the,query,leaving,it,to,the,prepared,statement,to,guess,the,corresponding,sql,type,return,the,long,value,or,0,in,case,of,sql,null,throws,org,springframework,dao,incorrect,result,size,data,access,exception,if,the,query,does,not,return,exactly,one,row,or,does,not,return,exactly,one,column,in,that,row,throws,org,springframework,dao,data,access,exception,if,the,query,fails,see,org,springframework,jdbc,core,jdbc,template,query,for,long,string;long,query,for,long,string,sql,map,string,param,map,throws,data,access,exception
NamedParameterJdbcOperations -> long queryForLong(String sql, Map<String, ?> paramMap) throws DataAccessException_;1356735495;Query given SQL to create a prepared statement from SQL and a_list of arguments to bind to the query, resulting in a long value._<p>The query is expected to be a single row/single column query that_results in a long value._@param sql SQL query to execute_@param paramMap map of parameters to bind to the query_(leaving it to the PreparedStatement to guess the corresponding SQL type)_@return the long value, or 0 in case of SQL NULL_@throws org.springframework.dao.IncorrectResultSizeDataAccessException_if the query does not return exactly one row, or does not return exactly_one column in that row_@throws org.springframework.dao.DataAccessException if the query fails_@see org.springframework.jdbc.core.JdbcTemplate#queryForLong(String);long queryForLong(String sql, Map<String, ?> paramMap) throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,resulting,in,a,long,value,p,the,query,is,expected,to,be,a,single,row,single,column,query,that,results,in,a,long,value,param,sql,sql,query,to,execute,param,param,map,map,of,parameters,to,bind,to,the,query,leaving,it,to,the,prepared,statement,to,guess,the,corresponding,sql,type,return,the,long,value,or,0,in,case,of,sql,null,throws,org,springframework,dao,incorrect,result,size,data,access,exception,if,the,query,does,not,return,exactly,one,row,or,does,not,return,exactly,one,column,in,that,row,throws,org,springframework,dao,data,access,exception,if,the,query,fails,see,org,springframework,jdbc,core,jdbc,template,query,for,long,string;long,query,for,long,string,sql,map,string,param,map,throws,data,access,exception
NamedParameterJdbcOperations -> public int[] batchUpdate(String sql, SqlParameterSource[] batchArgs)_;1328020251;Execute a batch using the supplied SQL statement with the batch of supplied arguments._@param sql the SQL statement to execute_@param batchArgs the array of {@link SqlParameterSource} containing the batch of arguments for the query_@return an array containing the numbers of rows affected by each update in the batch;public int[] batchUpdate(String sql, SqlParameterSource[] batchArgs)_;execute,a,batch,using,the,supplied,sql,statement,with,the,batch,of,supplied,arguments,param,sql,the,sql,statement,to,execute,param,batch,args,the,array,of,link,sql,parameter,source,containing,the,batch,of,arguments,for,the,query,return,an,array,containing,the,numbers,of,rows,affected,by,each,update,in,the,batch;public,int,batch,update,string,sql,sql,parameter,source,batch,args
NamedParameterJdbcOperations -> public int[] batchUpdate(String sql, SqlParameterSource[] batchArgs)_;1356735495;Execute a batch using the supplied SQL statement with the batch of supplied arguments._@param sql the SQL statement to execute_@param batchArgs the array of {@link SqlParameterSource} containing the batch of arguments for the query_@return an array containing the numbers of rows affected by each update in the batch;public int[] batchUpdate(String sql, SqlParameterSource[] batchArgs)_;execute,a,batch,using,the,supplied,sql,statement,with,the,batch,of,supplied,arguments,param,sql,the,sql,statement,to,execute,param,batch,args,the,array,of,link,sql,parameter,source,containing,the,batch,of,arguments,for,the,query,return,an,array,containing,the,numbers,of,rows,affected,by,each,update,in,the,batch;public,int,batch,update,string,sql,sql,parameter,source,batch,args
NamedParameterJdbcOperations -> int update(String sql, SqlParameterSource paramSource, KeyHolder generatedKeyHolder, String[] keyColumnNames) 			throws DataAccessException_;1328020251;Issue an update via a prepared statement, binding the given arguments,_returning generated keys._@param sql SQL containing named parameters_@param paramSource container of arguments and SQL types to bind to the query_@param generatedKeyHolder KeyHolder that will hold the generated keys_@param keyColumnNames names of the columns that will have keys generated for them_@return the number of rows affected_@throws org.springframework.dao.DataAccessException if there is any problem issuing the update_@see MapSqlParameterSource_@see org.springframework.jdbc.support.GeneratedKeyHolder;int update(String sql, SqlParameterSource paramSource, KeyHolder generatedKeyHolder, String[] keyColumnNames)_			throws DataAccessException_;issue,an,update,via,a,prepared,statement,binding,the,given,arguments,returning,generated,keys,param,sql,sql,containing,named,parameters,param,param,source,container,of,arguments,and,sql,types,to,bind,to,the,query,param,generated,key,holder,key,holder,that,will,hold,the,generated,keys,param,key,column,names,names,of,the,columns,that,will,have,keys,generated,for,them,return,the,number,of,rows,affected,throws,org,springframework,dao,data,access,exception,if,there,is,any,problem,issuing,the,update,see,map,sql,parameter,source,see,org,springframework,jdbc,support,generated,key,holder;int,update,string,sql,sql,parameter,source,param,source,key,holder,generated,key,holder,string,key,column,names,throws,data,access,exception
NamedParameterJdbcOperations -> int update(String sql, SqlParameterSource paramSource, KeyHolder generatedKeyHolder, String[] keyColumnNames) 			throws DataAccessException_;1356735495;Issue an update via a prepared statement, binding the given arguments,_returning generated keys._@param sql SQL containing named parameters_@param paramSource container of arguments and SQL types to bind to the query_@param generatedKeyHolder KeyHolder that will hold the generated keys_@param keyColumnNames names of the columns that will have keys generated for them_@return the number of rows affected_@throws org.springframework.dao.DataAccessException if there is any problem issuing the update_@see MapSqlParameterSource_@see org.springframework.jdbc.support.GeneratedKeyHolder;int update(String sql, SqlParameterSource paramSource, KeyHolder generatedKeyHolder, String[] keyColumnNames)_			throws DataAccessException_;issue,an,update,via,a,prepared,statement,binding,the,given,arguments,returning,generated,keys,param,sql,sql,containing,named,parameters,param,param,source,container,of,arguments,and,sql,types,to,bind,to,the,query,param,generated,key,holder,key,holder,that,will,hold,the,generated,keys,param,key,column,names,names,of,the,columns,that,will,have,keys,generated,for,them,return,the,number,of,rows,affected,throws,org,springframework,dao,data,access,exception,if,there,is,any,problem,issuing,the,update,see,map,sql,parameter,source,see,org,springframework,jdbc,support,generated,key,holder;int,update,string,sql,sql,parameter,source,param,source,key,holder,generated,key,holder,string,key,column,names,throws,data,access,exception
NamedParameterJdbcOperations -> int update(String sql, SqlParameterSource paramSource, KeyHolder generatedKeyHolder, String[] keyColumnNames) 			throws DataAccessException_;1362408075;Issue an update via a prepared statement, binding the given arguments,_returning generated keys._@param sql SQL containing named parameters_@param paramSource container of arguments and SQL types to bind to the query_@param generatedKeyHolder KeyHolder that will hold the generated keys_@param keyColumnNames names of the columns that will have keys generated for them_@return the number of rows affected_@throws org.springframework.dao.DataAccessException if there is any problem issuing the update_@see MapSqlParameterSource_@see org.springframework.jdbc.support.GeneratedKeyHolder;int update(String sql, SqlParameterSource paramSource, KeyHolder generatedKeyHolder, String[] keyColumnNames)_			throws DataAccessException_;issue,an,update,via,a,prepared,statement,binding,the,given,arguments,returning,generated,keys,param,sql,sql,containing,named,parameters,param,param,source,container,of,arguments,and,sql,types,to,bind,to,the,query,param,generated,key,holder,key,holder,that,will,hold,the,generated,keys,param,key,column,names,names,of,the,columns,that,will,have,keys,generated,for,them,return,the,number,of,rows,affected,throws,org,springframework,dao,data,access,exception,if,there,is,any,problem,issuing,the,update,see,map,sql,parameter,source,see,org,springframework,jdbc,support,generated,key,holder;int,update,string,sql,sql,parameter,source,param,source,key,holder,generated,key,holder,string,key,column,names,throws,data,access,exception
NamedParameterJdbcOperations -> int update(String sql, SqlParameterSource paramSource, KeyHolder generatedKeyHolder, String[] keyColumnNames) 			throws DataAccessException_;1419966315;Issue an update via a prepared statement, binding the given arguments,_returning generated keys._@param sql SQL containing named parameters_@param paramSource container of arguments and SQL types to bind to the query_@param generatedKeyHolder KeyHolder that will hold the generated keys_@param keyColumnNames names of the columns that will have keys generated for them_@return the number of rows affected_@throws org.springframework.dao.DataAccessException if there is any problem issuing the update_@see MapSqlParameterSource_@see org.springframework.jdbc.support.GeneratedKeyHolder;int update(String sql, SqlParameterSource paramSource, KeyHolder generatedKeyHolder, String[] keyColumnNames)_			throws DataAccessException_;issue,an,update,via,a,prepared,statement,binding,the,given,arguments,returning,generated,keys,param,sql,sql,containing,named,parameters,param,param,source,container,of,arguments,and,sql,types,to,bind,to,the,query,param,generated,key,holder,key,holder,that,will,hold,the,generated,keys,param,key,column,names,names,of,the,columns,that,will,have,keys,generated,for,them,return,the,number,of,rows,affected,throws,org,springframework,dao,data,access,exception,if,there,is,any,problem,issuing,the,update,see,map,sql,parameter,source,see,org,springframework,jdbc,support,generated,key,holder;int,update,string,sql,sql,parameter,source,param,source,key,holder,generated,key,holder,string,key,column,names,throws,data,access,exception
NamedParameterJdbcOperations -> int update(String sql, SqlParameterSource paramSource, KeyHolder generatedKeyHolder, String[] keyColumnNames) 			throws DataAccessException_;1491113276;Issue an update via a prepared statement, binding the given arguments,_returning generated keys._@param sql SQL containing named parameters_@param paramSource container of arguments and SQL types to bind to the query_@param generatedKeyHolder KeyHolder that will hold the generated keys_@param keyColumnNames names of the columns that will have keys generated for them_@return the number of rows affected_@throws org.springframework.dao.DataAccessException if there is any problem issuing the update_@see MapSqlParameterSource_@see org.springframework.jdbc.support.GeneratedKeyHolder;int update(String sql, SqlParameterSource paramSource, KeyHolder generatedKeyHolder, String[] keyColumnNames)_			throws DataAccessException_;issue,an,update,via,a,prepared,statement,binding,the,given,arguments,returning,generated,keys,param,sql,sql,containing,named,parameters,param,param,source,container,of,arguments,and,sql,types,to,bind,to,the,query,param,generated,key,holder,key,holder,that,will,hold,the,generated,keys,param,key,column,names,names,of,the,columns,that,will,have,keys,generated,for,them,return,the,number,of,rows,affected,throws,org,springframework,dao,data,access,exception,if,there,is,any,problem,issuing,the,update,see,map,sql,parameter,source,see,org,springframework,jdbc,support,generated,key,holder;int,update,string,sql,sql,parameter,source,param,source,key,holder,generated,key,holder,string,key,column,names,throws,data,access,exception
NamedParameterJdbcOperations -> int update(String sql, SqlParameterSource paramSource, KeyHolder generatedKeyHolder, String[] keyColumnNames) 			throws DataAccessException_;1495868221;Issue an update via a prepared statement, binding the given arguments,_returning generated keys._@param sql SQL containing named parameters_@param paramSource container of arguments and SQL types to bind to the query_@param generatedKeyHolder KeyHolder that will hold the generated keys_@param keyColumnNames names of the columns that will have keys generated for them_@return the number of rows affected_@throws org.springframework.dao.DataAccessException if there is any problem issuing the update_@see MapSqlParameterSource_@see org.springframework.jdbc.support.GeneratedKeyHolder;int update(String sql, SqlParameterSource paramSource, KeyHolder generatedKeyHolder, String[] keyColumnNames)_			throws DataAccessException_;issue,an,update,via,a,prepared,statement,binding,the,given,arguments,returning,generated,keys,param,sql,sql,containing,named,parameters,param,param,source,container,of,arguments,and,sql,types,to,bind,to,the,query,param,generated,key,holder,key,holder,that,will,hold,the,generated,keys,param,key,column,names,names,of,the,columns,that,will,have,keys,generated,for,them,return,the,number,of,rows,affected,throws,org,springframework,dao,data,access,exception,if,there,is,any,problem,issuing,the,update,see,map,sql,parameter,source,see,org,springframework,jdbc,support,generated,key,holder;int,update,string,sql,sql,parameter,source,param,source,key,holder,generated,key,holder,string,key,column,names,throws,data,access,exception
NamedParameterJdbcOperations -> int update(String sql, SqlParameterSource paramSource, KeyHolder generatedKeyHolder, String[] keyColumnNames) 			throws DataAccessException_;1496837955;Issue an update via a prepared statement, binding the given arguments,_returning generated keys._@param sql SQL containing named parameters_@param paramSource container of arguments and SQL types to bind to the query_@param generatedKeyHolder KeyHolder that will hold the generated keys_@param keyColumnNames names of the columns that will have keys generated for them_@return the number of rows affected_@throws org.springframework.dao.DataAccessException if there is any problem issuing the update_@see MapSqlParameterSource_@see org.springframework.jdbc.support.GeneratedKeyHolder;int update(String sql, SqlParameterSource paramSource, KeyHolder generatedKeyHolder, String[] keyColumnNames)_			throws DataAccessException_;issue,an,update,via,a,prepared,statement,binding,the,given,arguments,returning,generated,keys,param,sql,sql,containing,named,parameters,param,param,source,container,of,arguments,and,sql,types,to,bind,to,the,query,param,generated,key,holder,key,holder,that,will,hold,the,generated,keys,param,key,column,names,names,of,the,columns,that,will,have,keys,generated,for,them,return,the,number,of,rows,affected,throws,org,springframework,dao,data,access,exception,if,there,is,any,problem,issuing,the,update,see,map,sql,parameter,source,see,org,springframework,jdbc,support,generated,key,holder;int,update,string,sql,sql,parameter,source,param,source,key,holder,generated,key,holder,string,key,column,names,throws,data,access,exception
NamedParameterJdbcOperations -> int update(String sql, SqlParameterSource paramSource, KeyHolder generatedKeyHolder, String[] keyColumnNames) 			throws DataAccessException_;1502974979;Issue an update via a prepared statement, binding the given arguments,_returning generated keys._@param sql SQL containing named parameters_@param paramSource container of arguments and SQL types to bind to the query_@param generatedKeyHolder KeyHolder that will hold the generated keys_@param keyColumnNames names of the columns that will have keys generated for them_@return the number of rows affected_@throws org.springframework.dao.DataAccessException if there is any problem issuing the update_@see MapSqlParameterSource_@see org.springframework.jdbc.support.GeneratedKeyHolder;int update(String sql, SqlParameterSource paramSource, KeyHolder generatedKeyHolder, String[] keyColumnNames)_			throws DataAccessException_;issue,an,update,via,a,prepared,statement,binding,the,given,arguments,returning,generated,keys,param,sql,sql,containing,named,parameters,param,param,source,container,of,arguments,and,sql,types,to,bind,to,the,query,param,generated,key,holder,key,holder,that,will,hold,the,generated,keys,param,key,column,names,names,of,the,columns,that,will,have,keys,generated,for,them,return,the,number,of,rows,affected,throws,org,springframework,dao,data,access,exception,if,there,is,any,problem,issuing,the,update,see,map,sql,parameter,source,see,org,springframework,jdbc,support,generated,key,holder;int,update,string,sql,sql,parameter,source,param,source,key,holder,generated,key,holder,string,key,column,names,throws,data,access,exception
NamedParameterJdbcOperations -> int update(String sql, SqlParameterSource paramSource, KeyHolder generatedKeyHolder, String[] keyColumnNames) 			throws DataAccessException_;1511712999;Issue an update via a prepared statement, binding the given arguments,_returning generated keys._@param sql SQL containing named parameters_@param paramSource container of arguments and SQL types to bind to the query_@param generatedKeyHolder KeyHolder that will hold the generated keys_@param keyColumnNames names of the columns that will have keys generated for them_@return the number of rows affected_@throws org.springframework.dao.DataAccessException if there is any problem issuing the update_@see MapSqlParameterSource_@see org.springframework.jdbc.support.GeneratedKeyHolder;int update(String sql, SqlParameterSource paramSource, KeyHolder generatedKeyHolder, String[] keyColumnNames)_			throws DataAccessException_;issue,an,update,via,a,prepared,statement,binding,the,given,arguments,returning,generated,keys,param,sql,sql,containing,named,parameters,param,param,source,container,of,arguments,and,sql,types,to,bind,to,the,query,param,generated,key,holder,key,holder,that,will,hold,the,generated,keys,param,key,column,names,names,of,the,columns,that,will,have,keys,generated,for,them,return,the,number,of,rows,affected,throws,org,springframework,dao,data,access,exception,if,there,is,any,problem,issuing,the,update,see,map,sql,parameter,source,see,org,springframework,jdbc,support,generated,key,holder;int,update,string,sql,sql,parameter,source,param,source,key,holder,generated,key,holder,string,key,column,names,throws,data,access,exception
NamedParameterJdbcOperations -> int update(String sql, SqlParameterSource paramSource, KeyHolder generatedKeyHolder, String[] keyColumnNames) 			throws DataAccessException_;1530174524;Issue an update via a prepared statement, binding the given arguments,_returning generated keys._@param sql the SQL containing named parameters_@param paramSource container of arguments and SQL types to bind to the query_@param generatedKeyHolder a {@link KeyHolder} that will hold the generated keys_@param keyColumnNames names of the columns that will have keys generated for them_@return the number of rows affected_@throws org.springframework.dao.DataAccessException if there is any problem issuing the update_@see MapSqlParameterSource_@see org.springframework.jdbc.support.GeneratedKeyHolder;int update(String sql, SqlParameterSource paramSource, KeyHolder generatedKeyHolder, String[] keyColumnNames)_			throws DataAccessException_;issue,an,update,via,a,prepared,statement,binding,the,given,arguments,returning,generated,keys,param,sql,the,sql,containing,named,parameters,param,param,source,container,of,arguments,and,sql,types,to,bind,to,the,query,param,generated,key,holder,a,link,key,holder,that,will,hold,the,generated,keys,param,key,column,names,names,of,the,columns,that,will,have,keys,generated,for,them,return,the,number,of,rows,affected,throws,org,springframework,dao,data,access,exception,if,there,is,any,problem,issuing,the,update,see,map,sql,parameter,source,see,org,springframework,jdbc,support,generated,key,holder;int,update,string,sql,sql,parameter,source,param,source,key,holder,generated,key,holder,string,key,column,names,throws,data,access,exception
NamedParameterJdbcOperations -> List<Map<String, Object>> queryForList(String sql, Map<String, ?> paramMap) throws DataAccessException_;1328020251;Query given SQL to create a prepared statement from SQL and a_list of arguments to bind to the query, expecting a result list._<p>The results will be mapped to a List (one entry for each row) of_Maps (one entry for each column, using the column name as the key)._Each element in the list will be of the form returned by this interface's_queryForMap() methods._@param sql SQL query to execute_@param paramMap map of parameters to bind to the query_(leaving it to the PreparedStatement to guess the corresponding SQL type)_@return a List that contains a Map per row_@throws org.springframework.dao.DataAccessException if the query fails_@see org.springframework.jdbc.core.JdbcTemplate#queryForList(String);List<Map<String, Object>> queryForList(String sql, Map<String, ?> paramMap) throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,expecting,a,result,list,p,the,results,will,be,mapped,to,a,list,one,entry,for,each,row,of,maps,one,entry,for,each,column,using,the,column,name,as,the,key,each,element,in,the,list,will,be,of,the,form,returned,by,this,interface,s,query,for,map,methods,param,sql,sql,query,to,execute,param,param,map,map,of,parameters,to,bind,to,the,query,leaving,it,to,the,prepared,statement,to,guess,the,corresponding,sql,type,return,a,list,that,contains,a,map,per,row,throws,org,springframework,dao,data,access,exception,if,the,query,fails,see,org,springframework,jdbc,core,jdbc,template,query,for,list,string;list,map,string,object,query,for,list,string,sql,map,string,param,map,throws,data,access,exception
NamedParameterJdbcOperations -> List<Map<String, Object>> queryForList(String sql, Map<String, ?> paramMap) throws DataAccessException_;1356735495;Query given SQL to create a prepared statement from SQL and a_list of arguments to bind to the query, expecting a result list._<p>The results will be mapped to a List (one entry for each row) of_Maps (one entry for each column, using the column name as the key)._Each element in the list will be of the form returned by this interface's_queryForMap() methods._@param sql SQL query to execute_@param paramMap map of parameters to bind to the query_(leaving it to the PreparedStatement to guess the corresponding SQL type)_@return a List that contains a Map per row_@throws org.springframework.dao.DataAccessException if the query fails_@see org.springframework.jdbc.core.JdbcTemplate#queryForList(String);List<Map<String, Object>> queryForList(String sql, Map<String, ?> paramMap) throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,expecting,a,result,list,p,the,results,will,be,mapped,to,a,list,one,entry,for,each,row,of,maps,one,entry,for,each,column,using,the,column,name,as,the,key,each,element,in,the,list,will,be,of,the,form,returned,by,this,interface,s,query,for,map,methods,param,sql,sql,query,to,execute,param,param,map,map,of,parameters,to,bind,to,the,query,leaving,it,to,the,prepared,statement,to,guess,the,corresponding,sql,type,return,a,list,that,contains,a,map,per,row,throws,org,springframework,dao,data,access,exception,if,the,query,fails,see,org,springframework,jdbc,core,jdbc,template,query,for,list,string;list,map,string,object,query,for,list,string,sql,map,string,param,map,throws,data,access,exception
NamedParameterJdbcOperations -> List<Map<String, Object>> queryForList(String sql, Map<String, ?> paramMap) throws DataAccessException_;1362408075;Query given SQL to create a prepared statement from SQL and a_list of arguments to bind to the query, expecting a result list._<p>The results will be mapped to a List (one entry for each row) of_Maps (one entry for each column, using the column name as the key)._Each element in the list will be of the form returned by this interface's_{@code queryForMap} methods._@param sql SQL query to execute_@param paramMap map of parameters to bind to the query_(leaving it to the PreparedStatement to guess the corresponding SQL type)_@return a List that contains a Map per row_@throws org.springframework.dao.DataAccessException if the query fails_@see org.springframework.jdbc.core.JdbcTemplate#queryForList(String);List<Map<String, Object>> queryForList(String sql, Map<String, ?> paramMap) throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,expecting,a,result,list,p,the,results,will,be,mapped,to,a,list,one,entry,for,each,row,of,maps,one,entry,for,each,column,using,the,column,name,as,the,key,each,element,in,the,list,will,be,of,the,form,returned,by,this,interface,s,code,query,for,map,methods,param,sql,sql,query,to,execute,param,param,map,map,of,parameters,to,bind,to,the,query,leaving,it,to,the,prepared,statement,to,guess,the,corresponding,sql,type,return,a,list,that,contains,a,map,per,row,throws,org,springframework,dao,data,access,exception,if,the,query,fails,see,org,springframework,jdbc,core,jdbc,template,query,for,list,string;list,map,string,object,query,for,list,string,sql,map,string,param,map,throws,data,access,exception
NamedParameterJdbcOperations -> List<Map<String, Object>> queryForList(String sql, Map<String, ?> paramMap) throws DataAccessException_;1419966315;Query given SQL to create a prepared statement from SQL and a_list of arguments to bind to the query, expecting a result list._<p>The results will be mapped to a List (one entry for each row) of_Maps (one entry for each column, using the column name as the key)._Each element in the list will be of the form returned by this interface's_{@code queryForMap} methods._@param sql SQL query to execute_@param paramMap map of parameters to bind to the query_(leaving it to the PreparedStatement to guess the corresponding SQL type)_@return a List that contains a Map per row_@throws org.springframework.dao.DataAccessException if the query fails_@see org.springframework.jdbc.core.JdbcTemplate#queryForList(String);List<Map<String, Object>> queryForList(String sql, Map<String, ?> paramMap) throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,expecting,a,result,list,p,the,results,will,be,mapped,to,a,list,one,entry,for,each,row,of,maps,one,entry,for,each,column,using,the,column,name,as,the,key,each,element,in,the,list,will,be,of,the,form,returned,by,this,interface,s,code,query,for,map,methods,param,sql,sql,query,to,execute,param,param,map,map,of,parameters,to,bind,to,the,query,leaving,it,to,the,prepared,statement,to,guess,the,corresponding,sql,type,return,a,list,that,contains,a,map,per,row,throws,org,springframework,dao,data,access,exception,if,the,query,fails,see,org,springframework,jdbc,core,jdbc,template,query,for,list,string;list,map,string,object,query,for,list,string,sql,map,string,param,map,throws,data,access,exception
NamedParameterJdbcOperations -> List<Map<String, Object>> queryForList(String sql, Map<String, ?> paramMap) throws DataAccessException_;1491113276;Query given SQL to create a prepared statement from SQL and a_list of arguments to bind to the query, expecting a result list._<p>The results will be mapped to a List (one entry for each row) of_Maps (one entry for each column, using the column name as the key)._Each element in the list will be of the form returned by this interface's_{@code queryForMap} methods._@param sql SQL query to execute_@param paramMap map of parameters to bind to the query_(leaving it to the PreparedStatement to guess the corresponding SQL type)_@return a List that contains a Map per row_@throws org.springframework.dao.DataAccessException if the query fails_@see org.springframework.jdbc.core.JdbcTemplate#queryForList(String);List<Map<String, Object>> queryForList(String sql, Map<String, ?> paramMap) throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,expecting,a,result,list,p,the,results,will,be,mapped,to,a,list,one,entry,for,each,row,of,maps,one,entry,for,each,column,using,the,column,name,as,the,key,each,element,in,the,list,will,be,of,the,form,returned,by,this,interface,s,code,query,for,map,methods,param,sql,sql,query,to,execute,param,param,map,map,of,parameters,to,bind,to,the,query,leaving,it,to,the,prepared,statement,to,guess,the,corresponding,sql,type,return,a,list,that,contains,a,map,per,row,throws,org,springframework,dao,data,access,exception,if,the,query,fails,see,org,springframework,jdbc,core,jdbc,template,query,for,list,string;list,map,string,object,query,for,list,string,sql,map,string,param,map,throws,data,access,exception
NamedParameterJdbcOperations -> List<Map<String, Object>> queryForList(String sql, Map<String, ?> paramMap) throws DataAccessException_;1495868221;Query given SQL to create a prepared statement from SQL and a_list of arguments to bind to the query, expecting a result list._<p>The results will be mapped to a List (one entry for each row) of_Maps (one entry for each column, using the column name as the key)._Each element in the list will be of the form returned by this interface's_{@code queryForMap} methods._@param sql SQL query to execute_@param paramMap map of parameters to bind to the query_(leaving it to the PreparedStatement to guess the corresponding SQL type)_@return a List that contains a Map per row_@throws org.springframework.dao.DataAccessException if the query fails_@see org.springframework.jdbc.core.JdbcTemplate#queryForList(String);List<Map<String, Object>> queryForList(String sql, Map<String, ?> paramMap) throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,expecting,a,result,list,p,the,results,will,be,mapped,to,a,list,one,entry,for,each,row,of,maps,one,entry,for,each,column,using,the,column,name,as,the,key,each,element,in,the,list,will,be,of,the,form,returned,by,this,interface,s,code,query,for,map,methods,param,sql,sql,query,to,execute,param,param,map,map,of,parameters,to,bind,to,the,query,leaving,it,to,the,prepared,statement,to,guess,the,corresponding,sql,type,return,a,list,that,contains,a,map,per,row,throws,org,springframework,dao,data,access,exception,if,the,query,fails,see,org,springframework,jdbc,core,jdbc,template,query,for,list,string;list,map,string,object,query,for,list,string,sql,map,string,param,map,throws,data,access,exception
NamedParameterJdbcOperations -> List<Map<String, Object>> queryForList(String sql, Map<String, ?> paramMap) throws DataAccessException_;1496837955;Query given SQL to create a prepared statement from SQL and a_list of arguments to bind to the query, expecting a result list._<p>The results will be mapped to a List (one entry for each row) of_Maps (one entry for each column, using the column name as the key)._Each element in the list will be of the form returned by this interface's_{@code queryForMap} methods._@param sql SQL query to execute_@param paramMap map of parameters to bind to the query_(leaving it to the PreparedStatement to guess the corresponding SQL type)_@return a List that contains a Map per row_@throws org.springframework.dao.DataAccessException if the query fails_@see org.springframework.jdbc.core.JdbcTemplate#queryForList(String);List<Map<String, Object>> queryForList(String sql, Map<String, ?> paramMap) throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,expecting,a,result,list,p,the,results,will,be,mapped,to,a,list,one,entry,for,each,row,of,maps,one,entry,for,each,column,using,the,column,name,as,the,key,each,element,in,the,list,will,be,of,the,form,returned,by,this,interface,s,code,query,for,map,methods,param,sql,sql,query,to,execute,param,param,map,map,of,parameters,to,bind,to,the,query,leaving,it,to,the,prepared,statement,to,guess,the,corresponding,sql,type,return,a,list,that,contains,a,map,per,row,throws,org,springframework,dao,data,access,exception,if,the,query,fails,see,org,springframework,jdbc,core,jdbc,template,query,for,list,string;list,map,string,object,query,for,list,string,sql,map,string,param,map,throws,data,access,exception
NamedParameterJdbcOperations -> List<Map<String, Object>> queryForList(String sql, Map<String, ?> paramMap) throws DataAccessException_;1502974979;Query given SQL to create a prepared statement from SQL and a_list of arguments to bind to the query, expecting a result list._<p>The results will be mapped to a List (one entry for each row) of_Maps (one entry for each column, using the column name as the key)._Each element in the list will be of the form returned by this interface's_{@code queryForMap} methods._@param sql SQL query to execute_@param paramMap map of parameters to bind to the query_(leaving it to the PreparedStatement to guess the corresponding SQL type)_@return a List that contains a Map per row_@throws org.springframework.dao.DataAccessException if the query fails_@see org.springframework.jdbc.core.JdbcTemplate#queryForList(String);List<Map<String, Object>> queryForList(String sql, Map<String, ?> paramMap) throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,expecting,a,result,list,p,the,results,will,be,mapped,to,a,list,one,entry,for,each,row,of,maps,one,entry,for,each,column,using,the,column,name,as,the,key,each,element,in,the,list,will,be,of,the,form,returned,by,this,interface,s,code,query,for,map,methods,param,sql,sql,query,to,execute,param,param,map,map,of,parameters,to,bind,to,the,query,leaving,it,to,the,prepared,statement,to,guess,the,corresponding,sql,type,return,a,list,that,contains,a,map,per,row,throws,org,springframework,dao,data,access,exception,if,the,query,fails,see,org,springframework,jdbc,core,jdbc,template,query,for,list,string;list,map,string,object,query,for,list,string,sql,map,string,param,map,throws,data,access,exception
NamedParameterJdbcOperations -> List<Map<String, Object>> queryForList(String sql, Map<String, ?> paramMap) throws DataAccessException_;1511712999;Query given SQL to create a prepared statement from SQL and a_list of arguments to bind to the query, expecting a result list._<p>The results will be mapped to a List (one entry for each row) of_Maps (one entry for each column, using the column name as the key)._Each element in the list will be of the form returned by this interface's_{@code queryForMap} methods._@param sql SQL query to execute_@param paramMap map of parameters to bind to the query_(leaving it to the PreparedStatement to guess the corresponding SQL type)_@return a List that contains a Map per row_@throws org.springframework.dao.DataAccessException if the query fails_@see org.springframework.jdbc.core.JdbcTemplate#queryForList(String);List<Map<String, Object>> queryForList(String sql, Map<String, ?> paramMap) throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,expecting,a,result,list,p,the,results,will,be,mapped,to,a,list,one,entry,for,each,row,of,maps,one,entry,for,each,column,using,the,column,name,as,the,key,each,element,in,the,list,will,be,of,the,form,returned,by,this,interface,s,code,query,for,map,methods,param,sql,sql,query,to,execute,param,param,map,map,of,parameters,to,bind,to,the,query,leaving,it,to,the,prepared,statement,to,guess,the,corresponding,sql,type,return,a,list,that,contains,a,map,per,row,throws,org,springframework,dao,data,access,exception,if,the,query,fails,see,org,springframework,jdbc,core,jdbc,template,query,for,list,string;list,map,string,object,query,for,list,string,sql,map,string,param,map,throws,data,access,exception
NamedParameterJdbcOperations -> List<Map<String, Object>> queryForList(String sql, Map<String, ?> paramMap) throws DataAccessException_;1530174524;Query given SQL to create a prepared statement from SQL and a_list of arguments to bind to the query, expecting a result list._<p>The results will be mapped to a List (one entry for each row) of_Maps (one entry for each column, using the column name as the key)._Each element in the list will be of the form returned by this interface's_{@code queryForMap} methods._@param sql the SQL query to execute_@param paramMap map of parameters to bind to the query_(leaving it to the PreparedStatement to guess the corresponding SQL type)_@return a List that contains a Map per row_@throws org.springframework.dao.DataAccessException if the query fails_@see org.springframework.jdbc.core.JdbcTemplate#queryForList(String);List<Map<String, Object>> queryForList(String sql, Map<String, ?> paramMap) throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,expecting,a,result,list,p,the,results,will,be,mapped,to,a,list,one,entry,for,each,row,of,maps,one,entry,for,each,column,using,the,column,name,as,the,key,each,element,in,the,list,will,be,of,the,form,returned,by,this,interface,s,code,query,for,map,methods,param,sql,the,sql,query,to,execute,param,param,map,map,of,parameters,to,bind,to,the,query,leaving,it,to,the,prepared,statement,to,guess,the,corresponding,sql,type,return,a,list,that,contains,a,map,per,row,throws,org,springframework,dao,data,access,exception,if,the,query,fails,see,org,springframework,jdbc,core,jdbc,template,query,for,list,string;list,map,string,object,query,for,list,string,sql,map,string,param,map,throws,data,access,exception
NamedParameterJdbcOperations -> <T> T query(String sql, SqlParameterSource paramSource, ResultSetExtractor<T> rse) 			throws DataAccessException_;1328020251;Query given SQL to create a prepared statement from SQL and a list_of arguments to bind to the query, reading the ResultSet with a_ResultSetExtractor._@param sql SQL query to execute_@param paramSource container of arguments to bind to the query_@param rse object that will extract results_@return an arbitrary result object, as returned by the ResultSetExtractor_@throws DataAccessException if the query fails;<T> T query(String sql, SqlParameterSource paramSource, ResultSetExtractor<T> rse)_			throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,reading,the,result,set,with,a,result,set,extractor,param,sql,sql,query,to,execute,param,param,source,container,of,arguments,to,bind,to,the,query,param,rse,object,that,will,extract,results,return,an,arbitrary,result,object,as,returned,by,the,result,set,extractor,throws,data,access,exception,if,the,query,fails;t,t,query,string,sql,sql,parameter,source,param,source,result,set,extractor,t,rse,throws,data,access,exception
NamedParameterJdbcOperations -> <T> T query(String sql, SqlParameterSource paramSource, ResultSetExtractor<T> rse) 			throws DataAccessException_;1356735495;Query given SQL to create a prepared statement from SQL and a list_of arguments to bind to the query, reading the ResultSet with a_ResultSetExtractor._@param sql SQL query to execute_@param paramSource container of arguments to bind to the query_@param rse object that will extract results_@return an arbitrary result object, as returned by the ResultSetExtractor_@throws DataAccessException if the query fails;<T> T query(String sql, SqlParameterSource paramSource, ResultSetExtractor<T> rse)_			throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,reading,the,result,set,with,a,result,set,extractor,param,sql,sql,query,to,execute,param,param,source,container,of,arguments,to,bind,to,the,query,param,rse,object,that,will,extract,results,return,an,arbitrary,result,object,as,returned,by,the,result,set,extractor,throws,data,access,exception,if,the,query,fails;t,t,query,string,sql,sql,parameter,source,param,source,result,set,extractor,t,rse,throws,data,access,exception
NamedParameterJdbcOperations -> <T> T query(String sql, SqlParameterSource paramSource, ResultSetExtractor<T> rse) 			throws DataAccessException_;1362408075;Query given SQL to create a prepared statement from SQL and a list_of arguments to bind to the query, reading the ResultSet with a_ResultSetExtractor._@param sql SQL query to execute_@param paramSource container of arguments to bind to the query_@param rse object that will extract results_@return an arbitrary result object, as returned by the ResultSetExtractor_@throws DataAccessException if the query fails;<T> T query(String sql, SqlParameterSource paramSource, ResultSetExtractor<T> rse)_			throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,reading,the,result,set,with,a,result,set,extractor,param,sql,sql,query,to,execute,param,param,source,container,of,arguments,to,bind,to,the,query,param,rse,object,that,will,extract,results,return,an,arbitrary,result,object,as,returned,by,the,result,set,extractor,throws,data,access,exception,if,the,query,fails;t,t,query,string,sql,sql,parameter,source,param,source,result,set,extractor,t,rse,throws,data,access,exception
NamedParameterJdbcOperations -> <T> T query(String sql, SqlParameterSource paramSource, ResultSetExtractor<T> rse) 			throws DataAccessException_;1419966315;Query given SQL to create a prepared statement from SQL and a list_of arguments to bind to the query, reading the ResultSet with a_ResultSetExtractor._@param sql SQL query to execute_@param paramSource container of arguments to bind to the query_@param rse object that will extract results_@return an arbitrary result object, as returned by the ResultSetExtractor_@throws DataAccessException if the query fails;<T> T query(String sql, SqlParameterSource paramSource, ResultSetExtractor<T> rse)_			throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,reading,the,result,set,with,a,result,set,extractor,param,sql,sql,query,to,execute,param,param,source,container,of,arguments,to,bind,to,the,query,param,rse,object,that,will,extract,results,return,an,arbitrary,result,object,as,returned,by,the,result,set,extractor,throws,data,access,exception,if,the,query,fails;t,t,query,string,sql,sql,parameter,source,param,source,result,set,extractor,t,rse,throws,data,access,exception
NamedParameterJdbcOperations -> <T> T query(String sql, SqlParameterSource paramSource, ResultSetExtractor<T> rse) 			throws DataAccessException_;1491113276;Query given SQL to create a prepared statement from SQL and a list_of arguments to bind to the query, reading the ResultSet with a_ResultSetExtractor._@param sql SQL query to execute_@param paramSource container of arguments to bind to the query_@param rse object that will extract results_@return an arbitrary result object, as returned by the ResultSetExtractor_@throws DataAccessException if the query fails;<T> T query(String sql, SqlParameterSource paramSource, ResultSetExtractor<T> rse)_			throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,reading,the,result,set,with,a,result,set,extractor,param,sql,sql,query,to,execute,param,param,source,container,of,arguments,to,bind,to,the,query,param,rse,object,that,will,extract,results,return,an,arbitrary,result,object,as,returned,by,the,result,set,extractor,throws,data,access,exception,if,the,query,fails;t,t,query,string,sql,sql,parameter,source,param,source,result,set,extractor,t,rse,throws,data,access,exception
NamedParameterJdbcOperations -> <T> T query(String sql, SqlParameterSource paramSource, ResultSetExtractor<T> rse) 			throws DataAccessException_;1495868221;Query given SQL to create a prepared statement from SQL and a list_of arguments to bind to the query, reading the ResultSet with a_ResultSetExtractor._@param sql SQL query to execute_@param paramSource container of arguments to bind to the query_@param rse object that will extract results_@return an arbitrary result object, as returned by the ResultSetExtractor_@throws DataAccessException if the query fails;<T> T query(String sql, SqlParameterSource paramSource, ResultSetExtractor<T> rse)_			throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,reading,the,result,set,with,a,result,set,extractor,param,sql,sql,query,to,execute,param,param,source,container,of,arguments,to,bind,to,the,query,param,rse,object,that,will,extract,results,return,an,arbitrary,result,object,as,returned,by,the,result,set,extractor,throws,data,access,exception,if,the,query,fails;t,t,query,string,sql,sql,parameter,source,param,source,result,set,extractor,t,rse,throws,data,access,exception
NamedParameterJdbcOperations -> int update(String sql, SqlParameterSource paramSource) throws DataAccessException_;1328020251;Issue an update via a prepared statement, binding the given arguments._@param sql SQL containing named parameters_@param paramSource container of arguments and SQL types to bind to the query_@return the number of rows affected_@throws org.springframework.dao.DataAccessException if there is any problem issuing the update;int update(String sql, SqlParameterSource paramSource) throws DataAccessException_;issue,an,update,via,a,prepared,statement,binding,the,given,arguments,param,sql,sql,containing,named,parameters,param,param,source,container,of,arguments,and,sql,types,to,bind,to,the,query,return,the,number,of,rows,affected,throws,org,springframework,dao,data,access,exception,if,there,is,any,problem,issuing,the,update;int,update,string,sql,sql,parameter,source,param,source,throws,data,access,exception
NamedParameterJdbcOperations -> int update(String sql, SqlParameterSource paramSource) throws DataAccessException_;1356735495;Issue an update via a prepared statement, binding the given arguments._@param sql SQL containing named parameters_@param paramSource container of arguments and SQL types to bind to the query_@return the number of rows affected_@throws org.springframework.dao.DataAccessException if there is any problem issuing the update;int update(String sql, SqlParameterSource paramSource) throws DataAccessException_;issue,an,update,via,a,prepared,statement,binding,the,given,arguments,param,sql,sql,containing,named,parameters,param,param,source,container,of,arguments,and,sql,types,to,bind,to,the,query,return,the,number,of,rows,affected,throws,org,springframework,dao,data,access,exception,if,there,is,any,problem,issuing,the,update;int,update,string,sql,sql,parameter,source,param,source,throws,data,access,exception
NamedParameterJdbcOperations -> int update(String sql, SqlParameterSource paramSource) throws DataAccessException_;1362408075;Issue an update via a prepared statement, binding the given arguments._@param sql SQL containing named parameters_@param paramSource container of arguments and SQL types to bind to the query_@return the number of rows affected_@throws org.springframework.dao.DataAccessException if there is any problem issuing the update;int update(String sql, SqlParameterSource paramSource) throws DataAccessException_;issue,an,update,via,a,prepared,statement,binding,the,given,arguments,param,sql,sql,containing,named,parameters,param,param,source,container,of,arguments,and,sql,types,to,bind,to,the,query,return,the,number,of,rows,affected,throws,org,springframework,dao,data,access,exception,if,there,is,any,problem,issuing,the,update;int,update,string,sql,sql,parameter,source,param,source,throws,data,access,exception
NamedParameterJdbcOperations -> int update(String sql, SqlParameterSource paramSource) throws DataAccessException_;1419966315;Issue an update via a prepared statement, binding the given arguments._@param sql SQL containing named parameters_@param paramSource container of arguments and SQL types to bind to the query_@return the number of rows affected_@throws org.springframework.dao.DataAccessException if there is any problem issuing the update;int update(String sql, SqlParameterSource paramSource) throws DataAccessException_;issue,an,update,via,a,prepared,statement,binding,the,given,arguments,param,sql,sql,containing,named,parameters,param,param,source,container,of,arguments,and,sql,types,to,bind,to,the,query,return,the,number,of,rows,affected,throws,org,springframework,dao,data,access,exception,if,there,is,any,problem,issuing,the,update;int,update,string,sql,sql,parameter,source,param,source,throws,data,access,exception
NamedParameterJdbcOperations -> int update(String sql, SqlParameterSource paramSource) throws DataAccessException_;1491113276;Issue an update via a prepared statement, binding the given arguments._@param sql SQL containing named parameters_@param paramSource container of arguments and SQL types to bind to the query_@return the number of rows affected_@throws org.springframework.dao.DataAccessException if there is any problem issuing the update;int update(String sql, SqlParameterSource paramSource) throws DataAccessException_;issue,an,update,via,a,prepared,statement,binding,the,given,arguments,param,sql,sql,containing,named,parameters,param,param,source,container,of,arguments,and,sql,types,to,bind,to,the,query,return,the,number,of,rows,affected,throws,org,springframework,dao,data,access,exception,if,there,is,any,problem,issuing,the,update;int,update,string,sql,sql,parameter,source,param,source,throws,data,access,exception
NamedParameterJdbcOperations -> int update(String sql, SqlParameterSource paramSource) throws DataAccessException_;1495868221;Issue an update via a prepared statement, binding the given arguments._@param sql SQL containing named parameters_@param paramSource container of arguments and SQL types to bind to the query_@return the number of rows affected_@throws org.springframework.dao.DataAccessException if there is any problem issuing the update;int update(String sql, SqlParameterSource paramSource) throws DataAccessException_;issue,an,update,via,a,prepared,statement,binding,the,given,arguments,param,sql,sql,containing,named,parameters,param,param,source,container,of,arguments,and,sql,types,to,bind,to,the,query,return,the,number,of,rows,affected,throws,org,springframework,dao,data,access,exception,if,there,is,any,problem,issuing,the,update;int,update,string,sql,sql,parameter,source,param,source,throws,data,access,exception
NamedParameterJdbcOperations -> int update(String sql, SqlParameterSource paramSource) throws DataAccessException_;1496837955;Issue an update via a prepared statement, binding the given arguments._@param sql SQL containing named parameters_@param paramSource container of arguments and SQL types to bind to the query_@return the number of rows affected_@throws org.springframework.dao.DataAccessException if there is any problem issuing the update;int update(String sql, SqlParameterSource paramSource) throws DataAccessException_;issue,an,update,via,a,prepared,statement,binding,the,given,arguments,param,sql,sql,containing,named,parameters,param,param,source,container,of,arguments,and,sql,types,to,bind,to,the,query,return,the,number,of,rows,affected,throws,org,springframework,dao,data,access,exception,if,there,is,any,problem,issuing,the,update;int,update,string,sql,sql,parameter,source,param,source,throws,data,access,exception
NamedParameterJdbcOperations -> int update(String sql, SqlParameterSource paramSource) throws DataAccessException_;1502974979;Issue an update via a prepared statement, binding the given arguments._@param sql SQL containing named parameters_@param paramSource container of arguments and SQL types to bind to the query_@return the number of rows affected_@throws org.springframework.dao.DataAccessException if there is any problem issuing the update;int update(String sql, SqlParameterSource paramSource) throws DataAccessException_;issue,an,update,via,a,prepared,statement,binding,the,given,arguments,param,sql,sql,containing,named,parameters,param,param,source,container,of,arguments,and,sql,types,to,bind,to,the,query,return,the,number,of,rows,affected,throws,org,springframework,dao,data,access,exception,if,there,is,any,problem,issuing,the,update;int,update,string,sql,sql,parameter,source,param,source,throws,data,access,exception
NamedParameterJdbcOperations -> int update(String sql, SqlParameterSource paramSource) throws DataAccessException_;1511712999;Issue an update via a prepared statement, binding the given arguments._@param sql SQL containing named parameters_@param paramSource container of arguments and SQL types to bind to the query_@return the number of rows affected_@throws org.springframework.dao.DataAccessException if there is any problem issuing the update;int update(String sql, SqlParameterSource paramSource) throws DataAccessException_;issue,an,update,via,a,prepared,statement,binding,the,given,arguments,param,sql,sql,containing,named,parameters,param,param,source,container,of,arguments,and,sql,types,to,bind,to,the,query,return,the,number,of,rows,affected,throws,org,springframework,dao,data,access,exception,if,there,is,any,problem,issuing,the,update;int,update,string,sql,sql,parameter,source,param,source,throws,data,access,exception
NamedParameterJdbcOperations -> int update(String sql, SqlParameterSource paramSource) throws DataAccessException_;1530174524;Issue an update via a prepared statement, binding the given arguments._@param sql the SQL containing named parameters_@param paramSource container of arguments and SQL types to bind to the query_@return the number of rows affected_@throws org.springframework.dao.DataAccessException if there is any problem issuing the update;int update(String sql, SqlParameterSource paramSource) throws DataAccessException_;issue,an,update,via,a,prepared,statement,binding,the,given,arguments,param,sql,the,sql,containing,named,parameters,param,param,source,container,of,arguments,and,sql,types,to,bind,to,the,query,return,the,number,of,rows,affected,throws,org,springframework,dao,data,access,exception,if,there,is,any,problem,issuing,the,update;int,update,string,sql,sql,parameter,source,param,source,throws,data,access,exception
NamedParameterJdbcOperations -> <T> T queryForObject(String sql, SqlParameterSource paramSource, RowMapper<T> rowMapper) 			throws DataAccessException_;1328020251;Query given SQL to create a prepared statement from SQL and a list_of arguments to bind to the query, mapping a single result row to a_Java object via a RowMapper._@param sql SQL query to execute_@param paramSource container of arguments to bind to the query_@param rowMapper object that will map one object per row_@return the single mapped object_@throws org.springframework.dao.IncorrectResultSizeDataAccessException_if the query does not return exactly one row, or does not return exactly_one column in that row_@throws org.springframework.dao.DataAccessException if the query fails;<T> T queryForObject(String sql, SqlParameterSource paramSource, RowMapper<T> rowMapper)_			throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,mapping,a,single,result,row,to,a,java,object,via,a,row,mapper,param,sql,sql,query,to,execute,param,param,source,container,of,arguments,to,bind,to,the,query,param,row,mapper,object,that,will,map,one,object,per,row,return,the,single,mapped,object,throws,org,springframework,dao,incorrect,result,size,data,access,exception,if,the,query,does,not,return,exactly,one,row,or,does,not,return,exactly,one,column,in,that,row,throws,org,springframework,dao,data,access,exception,if,the,query,fails;t,t,query,for,object,string,sql,sql,parameter,source,param,source,row,mapper,t,row,mapper,throws,data,access,exception
NamedParameterJdbcOperations -> <T> T queryForObject(String sql, SqlParameterSource paramSource, RowMapper<T> rowMapper) 			throws DataAccessException_;1356735495;Query given SQL to create a prepared statement from SQL and a list_of arguments to bind to the query, mapping a single result row to a_Java object via a RowMapper._@param sql SQL query to execute_@param paramSource container of arguments to bind to the query_@param rowMapper object that will map one object per row_@return the single mapped object_@throws org.springframework.dao.IncorrectResultSizeDataAccessException_if the query does not return exactly one row, or does not return exactly_one column in that row_@throws org.springframework.dao.DataAccessException if the query fails;<T> T queryForObject(String sql, SqlParameterSource paramSource, RowMapper<T> rowMapper)_			throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,mapping,a,single,result,row,to,a,java,object,via,a,row,mapper,param,sql,sql,query,to,execute,param,param,source,container,of,arguments,to,bind,to,the,query,param,row,mapper,object,that,will,map,one,object,per,row,return,the,single,mapped,object,throws,org,springframework,dao,incorrect,result,size,data,access,exception,if,the,query,does,not,return,exactly,one,row,or,does,not,return,exactly,one,column,in,that,row,throws,org,springframework,dao,data,access,exception,if,the,query,fails;t,t,query,for,object,string,sql,sql,parameter,source,param,source,row,mapper,t,row,mapper,throws,data,access,exception
NamedParameterJdbcOperations -> <T> T queryForObject(String sql, SqlParameterSource paramSource, RowMapper<T> rowMapper) 			throws DataAccessException_;1362408075;Query given SQL to create a prepared statement from SQL and a list_of arguments to bind to the query, mapping a single result row to a_Java object via a RowMapper._@param sql SQL query to execute_@param paramSource container of arguments to bind to the query_@param rowMapper object that will map one object per row_@return the single mapped object_@throws org.springframework.dao.IncorrectResultSizeDataAccessException_if the query does not return exactly one row, or does not return exactly_one column in that row_@throws org.springframework.dao.DataAccessException if the query fails;<T> T queryForObject(String sql, SqlParameterSource paramSource, RowMapper<T> rowMapper)_			throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,mapping,a,single,result,row,to,a,java,object,via,a,row,mapper,param,sql,sql,query,to,execute,param,param,source,container,of,arguments,to,bind,to,the,query,param,row,mapper,object,that,will,map,one,object,per,row,return,the,single,mapped,object,throws,org,springframework,dao,incorrect,result,size,data,access,exception,if,the,query,does,not,return,exactly,one,row,or,does,not,return,exactly,one,column,in,that,row,throws,org,springframework,dao,data,access,exception,if,the,query,fails;t,t,query,for,object,string,sql,sql,parameter,source,param,source,row,mapper,t,row,mapper,throws,data,access,exception
NamedParameterJdbcOperations -> <T> T queryForObject(String sql, SqlParameterSource paramSource, RowMapper<T> rowMapper) 			throws DataAccessException_;1419966315;Query given SQL to create a prepared statement from SQL and a list_of arguments to bind to the query, mapping a single result row to a_Java object via a RowMapper._@param sql SQL query to execute_@param paramSource container of arguments to bind to the query_@param rowMapper object that will map one object per row_@return the single mapped object_@throws org.springframework.dao.IncorrectResultSizeDataAccessException_if the query does not return exactly one row, or does not return exactly_one column in that row_@throws org.springframework.dao.DataAccessException if the query fails;<T> T queryForObject(String sql, SqlParameterSource paramSource, RowMapper<T> rowMapper)_			throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,mapping,a,single,result,row,to,a,java,object,via,a,row,mapper,param,sql,sql,query,to,execute,param,param,source,container,of,arguments,to,bind,to,the,query,param,row,mapper,object,that,will,map,one,object,per,row,return,the,single,mapped,object,throws,org,springframework,dao,incorrect,result,size,data,access,exception,if,the,query,does,not,return,exactly,one,row,or,does,not,return,exactly,one,column,in,that,row,throws,org,springframework,dao,data,access,exception,if,the,query,fails;t,t,query,for,object,string,sql,sql,parameter,source,param,source,row,mapper,t,row,mapper,throws,data,access,exception
NamedParameterJdbcOperations -> <T> T queryForObject(String sql, SqlParameterSource paramSource, RowMapper<T> rowMapper) 			throws DataAccessException_;1491113276;Query given SQL to create a prepared statement from SQL and a list_of arguments to bind to the query, mapping a single result row to a_Java object via a RowMapper._@param sql SQL query to execute_@param paramSource container of arguments to bind to the query_@param rowMapper object that will map one object per row_@return the single mapped object_@throws org.springframework.dao.IncorrectResultSizeDataAccessException_if the query does not return exactly one row, or does not return exactly_one column in that row_@throws org.springframework.dao.DataAccessException if the query fails;<T> T queryForObject(String sql, SqlParameterSource paramSource, RowMapper<T> rowMapper)_			throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,mapping,a,single,result,row,to,a,java,object,via,a,row,mapper,param,sql,sql,query,to,execute,param,param,source,container,of,arguments,to,bind,to,the,query,param,row,mapper,object,that,will,map,one,object,per,row,return,the,single,mapped,object,throws,org,springframework,dao,incorrect,result,size,data,access,exception,if,the,query,does,not,return,exactly,one,row,or,does,not,return,exactly,one,column,in,that,row,throws,org,springframework,dao,data,access,exception,if,the,query,fails;t,t,query,for,object,string,sql,sql,parameter,source,param,source,row,mapper,t,row,mapper,throws,data,access,exception
NamedParameterJdbcOperations -> <T> T queryForObject(String sql, SqlParameterSource paramSource, RowMapper<T> rowMapper) 			throws DataAccessException_;1495868221;Query given SQL to create a prepared statement from SQL and a list_of arguments to bind to the query, mapping a single result row to a_Java object via a RowMapper._@param sql SQL query to execute_@param paramSource container of arguments to bind to the query_@param rowMapper object that will map one object per row_@return the single mapped object_@throws org.springframework.dao.IncorrectResultSizeDataAccessException_if the query does not return exactly one row, or does not return exactly_one column in that row_@throws org.springframework.dao.DataAccessException if the query fails;<T> T queryForObject(String sql, SqlParameterSource paramSource, RowMapper<T> rowMapper)_			throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,mapping,a,single,result,row,to,a,java,object,via,a,row,mapper,param,sql,sql,query,to,execute,param,param,source,container,of,arguments,to,bind,to,the,query,param,row,mapper,object,that,will,map,one,object,per,row,return,the,single,mapped,object,throws,org,springframework,dao,incorrect,result,size,data,access,exception,if,the,query,does,not,return,exactly,one,row,or,does,not,return,exactly,one,column,in,that,row,throws,org,springframework,dao,data,access,exception,if,the,query,fails;t,t,query,for,object,string,sql,sql,parameter,source,param,source,row,mapper,t,row,mapper,throws,data,access,exception
NamedParameterJdbcOperations -> <T> T queryForObject(String sql, SqlParameterSource paramSource, RowMapper<T> rowMapper) 			throws DataAccessException_;1496837955;Query given SQL to create a prepared statement from SQL and a list_of arguments to bind to the query, mapping a single result row to a_Java object via a RowMapper._@param sql SQL query to execute_@param paramSource container of arguments to bind to the query_@param rowMapper object that will map one object per row_@return the single mapped object_@throws org.springframework.dao.IncorrectResultSizeDataAccessException_if the query does not return exactly one row, or does not return exactly_one column in that row_@throws org.springframework.dao.DataAccessException if the query fails;<T> T queryForObject(String sql, SqlParameterSource paramSource, RowMapper<T> rowMapper)_			throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,mapping,a,single,result,row,to,a,java,object,via,a,row,mapper,param,sql,sql,query,to,execute,param,param,source,container,of,arguments,to,bind,to,the,query,param,row,mapper,object,that,will,map,one,object,per,row,return,the,single,mapped,object,throws,org,springframework,dao,incorrect,result,size,data,access,exception,if,the,query,does,not,return,exactly,one,row,or,does,not,return,exactly,one,column,in,that,row,throws,org,springframework,dao,data,access,exception,if,the,query,fails;t,t,query,for,object,string,sql,sql,parameter,source,param,source,row,mapper,t,row,mapper,throws,data,access,exception
NamedParameterJdbcOperations -> public int[] batchUpdate(String sql, Map<String, ?>[] batchValues)_;1328020251;Executes a batch using the supplied SQL statement with the batch of supplied arguments._@param sql the SQL statement to execute_@param batchValues the array of Maps containing the batch of arguments for the query_@return an array containing the numbers of rows affected by each update in the batch;public int[] batchUpdate(String sql, Map<String, ?>[] batchValues)_;executes,a,batch,using,the,supplied,sql,statement,with,the,batch,of,supplied,arguments,param,sql,the,sql,statement,to,execute,param,batch,values,the,array,of,maps,containing,the,batch,of,arguments,for,the,query,return,an,array,containing,the,numbers,of,rows,affected,by,each,update,in,the,batch;public,int,batch,update,string,sql,map,string,batch,values
NamedParameterJdbcOperations -> public int[] batchUpdate(String sql, Map<String, ?>[] batchValues)_;1356735495;Executes a batch using the supplied SQL statement with the batch of supplied arguments._@param sql the SQL statement to execute_@param batchValues the array of Maps containing the batch of arguments for the query_@return an array containing the numbers of rows affected by each update in the batch;public int[] batchUpdate(String sql, Map<String, ?>[] batchValues)_;executes,a,batch,using,the,supplied,sql,statement,with,the,batch,of,supplied,arguments,param,sql,the,sql,statement,to,execute,param,batch,values,the,array,of,maps,containing,the,batch,of,arguments,for,the,query,return,an,array,containing,the,numbers,of,rows,affected,by,each,update,in,the,batch;public,int,batch,update,string,sql,map,string,batch,values
NamedParameterJdbcOperations -> <T> T queryForObject(String sql, Map<String, ?> paramMap, RowMapper<T> rowMapper) 			throws DataAccessException_;1328020251;Query given SQL to create a prepared statement from SQL and a list_of arguments to bind to the query, mapping a single result row to a_Java object via a RowMapper._@param sql SQL query to execute_@param paramMap map of parameters to bind to the query_(leaving it to the PreparedStatement to guess the corresponding SQL type)_@param rowMapper object that will map one object per row_@return the single mapped object_@throws org.springframework.dao.IncorrectResultSizeDataAccessException_if the query does not return exactly one row, or does not return exactly_one column in that row_@throws org.springframework.dao.DataAccessException if the query fails;<T> T queryForObject(String sql, Map<String, ?> paramMap, RowMapper<T> rowMapper)_			throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,mapping,a,single,result,row,to,a,java,object,via,a,row,mapper,param,sql,sql,query,to,execute,param,param,map,map,of,parameters,to,bind,to,the,query,leaving,it,to,the,prepared,statement,to,guess,the,corresponding,sql,type,param,row,mapper,object,that,will,map,one,object,per,row,return,the,single,mapped,object,throws,org,springframework,dao,incorrect,result,size,data,access,exception,if,the,query,does,not,return,exactly,one,row,or,does,not,return,exactly,one,column,in,that,row,throws,org,springframework,dao,data,access,exception,if,the,query,fails;t,t,query,for,object,string,sql,map,string,param,map,row,mapper,t,row,mapper,throws,data,access,exception
NamedParameterJdbcOperations -> <T> T queryForObject(String sql, Map<String, ?> paramMap, RowMapper<T> rowMapper) 			throws DataAccessException_;1356735495;Query given SQL to create a prepared statement from SQL and a list_of arguments to bind to the query, mapping a single result row to a_Java object via a RowMapper._@param sql SQL query to execute_@param paramMap map of parameters to bind to the query_(leaving it to the PreparedStatement to guess the corresponding SQL type)_@param rowMapper object that will map one object per row_@return the single mapped object_@throws org.springframework.dao.IncorrectResultSizeDataAccessException_if the query does not return exactly one row, or does not return exactly_one column in that row_@throws org.springframework.dao.DataAccessException if the query fails;<T> T queryForObject(String sql, Map<String, ?> paramMap, RowMapper<T> rowMapper)_			throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,mapping,a,single,result,row,to,a,java,object,via,a,row,mapper,param,sql,sql,query,to,execute,param,param,map,map,of,parameters,to,bind,to,the,query,leaving,it,to,the,prepared,statement,to,guess,the,corresponding,sql,type,param,row,mapper,object,that,will,map,one,object,per,row,return,the,single,mapped,object,throws,org,springframework,dao,incorrect,result,size,data,access,exception,if,the,query,does,not,return,exactly,one,row,or,does,not,return,exactly,one,column,in,that,row,throws,org,springframework,dao,data,access,exception,if,the,query,fails;t,t,query,for,object,string,sql,map,string,param,map,row,mapper,t,row,mapper,throws,data,access,exception
NamedParameterJdbcOperations -> <T> T queryForObject(String sql, Map<String, ?> paramMap, RowMapper<T> rowMapper) 			throws DataAccessException_;1362408075;Query given SQL to create a prepared statement from SQL and a list_of arguments to bind to the query, mapping a single result row to a_Java object via a RowMapper._@param sql SQL query to execute_@param paramMap map of parameters to bind to the query_(leaving it to the PreparedStatement to guess the corresponding SQL type)_@param rowMapper object that will map one object per row_@return the single mapped object_@throws org.springframework.dao.IncorrectResultSizeDataAccessException_if the query does not return exactly one row, or does not return exactly_one column in that row_@throws org.springframework.dao.DataAccessException if the query fails;<T> T queryForObject(String sql, Map<String, ?> paramMap, RowMapper<T> rowMapper)_			throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,mapping,a,single,result,row,to,a,java,object,via,a,row,mapper,param,sql,sql,query,to,execute,param,param,map,map,of,parameters,to,bind,to,the,query,leaving,it,to,the,prepared,statement,to,guess,the,corresponding,sql,type,param,row,mapper,object,that,will,map,one,object,per,row,return,the,single,mapped,object,throws,org,springframework,dao,incorrect,result,size,data,access,exception,if,the,query,does,not,return,exactly,one,row,or,does,not,return,exactly,one,column,in,that,row,throws,org,springframework,dao,data,access,exception,if,the,query,fails;t,t,query,for,object,string,sql,map,string,param,map,row,mapper,t,row,mapper,throws,data,access,exception
NamedParameterJdbcOperations -> <T> T queryForObject(String sql, Map<String, ?> paramMap, RowMapper<T> rowMapper) 			throws DataAccessException_;1419966315;Query given SQL to create a prepared statement from SQL and a list_of arguments to bind to the query, mapping a single result row to a_Java object via a RowMapper._@param sql SQL query to execute_@param paramMap map of parameters to bind to the query_(leaving it to the PreparedStatement to guess the corresponding SQL type)_@param rowMapper object that will map one object per row_@return the single mapped object_@throws org.springframework.dao.IncorrectResultSizeDataAccessException_if the query does not return exactly one row, or does not return exactly_one column in that row_@throws org.springframework.dao.DataAccessException if the query fails;<T> T queryForObject(String sql, Map<String, ?> paramMap, RowMapper<T> rowMapper)_			throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,mapping,a,single,result,row,to,a,java,object,via,a,row,mapper,param,sql,sql,query,to,execute,param,param,map,map,of,parameters,to,bind,to,the,query,leaving,it,to,the,prepared,statement,to,guess,the,corresponding,sql,type,param,row,mapper,object,that,will,map,one,object,per,row,return,the,single,mapped,object,throws,org,springframework,dao,incorrect,result,size,data,access,exception,if,the,query,does,not,return,exactly,one,row,or,does,not,return,exactly,one,column,in,that,row,throws,org,springframework,dao,data,access,exception,if,the,query,fails;t,t,query,for,object,string,sql,map,string,param,map,row,mapper,t,row,mapper,throws,data,access,exception
NamedParameterJdbcOperations -> <T> T queryForObject(String sql, Map<String, ?> paramMap, RowMapper<T> rowMapper) 			throws DataAccessException_;1491113276;Query given SQL to create a prepared statement from SQL and a list_of arguments to bind to the query, mapping a single result row to a_Java object via a RowMapper._@param sql SQL query to execute_@param paramMap map of parameters to bind to the query_(leaving it to the PreparedStatement to guess the corresponding SQL type)_@param rowMapper object that will map one object per row_@return the single mapped object_@throws org.springframework.dao.IncorrectResultSizeDataAccessException_if the query does not return exactly one row, or does not return exactly_one column in that row_@throws org.springframework.dao.DataAccessException if the query fails;<T> T queryForObject(String sql, Map<String, ?> paramMap, RowMapper<T> rowMapper)_			throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,mapping,a,single,result,row,to,a,java,object,via,a,row,mapper,param,sql,sql,query,to,execute,param,param,map,map,of,parameters,to,bind,to,the,query,leaving,it,to,the,prepared,statement,to,guess,the,corresponding,sql,type,param,row,mapper,object,that,will,map,one,object,per,row,return,the,single,mapped,object,throws,org,springframework,dao,incorrect,result,size,data,access,exception,if,the,query,does,not,return,exactly,one,row,or,does,not,return,exactly,one,column,in,that,row,throws,org,springframework,dao,data,access,exception,if,the,query,fails;t,t,query,for,object,string,sql,map,string,param,map,row,mapper,t,row,mapper,throws,data,access,exception
NamedParameterJdbcOperations -> <T> T queryForObject(String sql, Map<String, ?> paramMap, RowMapper<T> rowMapper) 			throws DataAccessException_;1495868221;Query given SQL to create a prepared statement from SQL and a list_of arguments to bind to the query, mapping a single result row to a_Java object via a RowMapper._@param sql SQL query to execute_@param paramMap map of parameters to bind to the query_(leaving it to the PreparedStatement to guess the corresponding SQL type)_@param rowMapper object that will map one object per row_@return the single mapped object_@throws org.springframework.dao.IncorrectResultSizeDataAccessException_if the query does not return exactly one row, or does not return exactly_one column in that row_@throws org.springframework.dao.DataAccessException if the query fails;<T> T queryForObject(String sql, Map<String, ?> paramMap, RowMapper<T> rowMapper)_			throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,mapping,a,single,result,row,to,a,java,object,via,a,row,mapper,param,sql,sql,query,to,execute,param,param,map,map,of,parameters,to,bind,to,the,query,leaving,it,to,the,prepared,statement,to,guess,the,corresponding,sql,type,param,row,mapper,object,that,will,map,one,object,per,row,return,the,single,mapped,object,throws,org,springframework,dao,incorrect,result,size,data,access,exception,if,the,query,does,not,return,exactly,one,row,or,does,not,return,exactly,one,column,in,that,row,throws,org,springframework,dao,data,access,exception,if,the,query,fails;t,t,query,for,object,string,sql,map,string,param,map,row,mapper,t,row,mapper,throws,data,access,exception
NamedParameterJdbcOperations -> <T> T queryForObject(String sql, Map<String, ?> paramMap, RowMapper<T> rowMapper) 			throws DataAccessException_;1496837955;Query given SQL to create a prepared statement from SQL and a list_of arguments to bind to the query, mapping a single result row to a_Java object via a RowMapper._@param sql SQL query to execute_@param paramMap map of parameters to bind to the query_(leaving it to the PreparedStatement to guess the corresponding SQL type)_@param rowMapper object that will map one object per row_@return the single mapped object_@throws org.springframework.dao.IncorrectResultSizeDataAccessException_if the query does not return exactly one row, or does not return exactly_one column in that row_@throws org.springframework.dao.DataAccessException if the query fails;<T> T queryForObject(String sql, Map<String, ?> paramMap, RowMapper<T> rowMapper)_			throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,mapping,a,single,result,row,to,a,java,object,via,a,row,mapper,param,sql,sql,query,to,execute,param,param,map,map,of,parameters,to,bind,to,the,query,leaving,it,to,the,prepared,statement,to,guess,the,corresponding,sql,type,param,row,mapper,object,that,will,map,one,object,per,row,return,the,single,mapped,object,throws,org,springframework,dao,incorrect,result,size,data,access,exception,if,the,query,does,not,return,exactly,one,row,or,does,not,return,exactly,one,column,in,that,row,throws,org,springframework,dao,data,access,exception,if,the,query,fails;t,t,query,for,object,string,sql,map,string,param,map,row,mapper,t,row,mapper,throws,data,access,exception
NamedParameterJdbcOperations -> <T> T queryForObject(String sql, SqlParameterSource paramSource, Class<T> requiredType) 			throws DataAccessException_;1328020251;Query given SQL to create a prepared statement from SQL and a_list of arguments to bind to the query, expecting a result object._<p>The query is expected to be a single row/single column query_ the returned_result will be directly mapped to the corresponding object type._@param sql SQL query to execute_@param paramSource container of arguments to bind to the query_@param requiredType the type that the result object is expected to match_@return the result object of the required type, or <code>null</code> in case of SQL NULL_@throws org.springframework.dao.IncorrectResultSizeDataAccessException_if the query does not return exactly one row, or does not return exactly_one column in that row_@throws org.springframework.dao.DataAccessException if the query fails_@see org.springframework.jdbc.core.JdbcTemplate#queryForObject(String, Class);<T> T queryForObject(String sql, SqlParameterSource paramSource, Class<T> requiredType)_			throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,expecting,a,result,object,p,the,query,is,expected,to,be,a,single,row,single,column,query,the,returned,result,will,be,directly,mapped,to,the,corresponding,object,type,param,sql,sql,query,to,execute,param,param,source,container,of,arguments,to,bind,to,the,query,param,required,type,the,type,that,the,result,object,is,expected,to,match,return,the,result,object,of,the,required,type,or,code,null,code,in,case,of,sql,null,throws,org,springframework,dao,incorrect,result,size,data,access,exception,if,the,query,does,not,return,exactly,one,row,or,does,not,return,exactly,one,column,in,that,row,throws,org,springframework,dao,data,access,exception,if,the,query,fails,see,org,springframework,jdbc,core,jdbc,template,query,for,object,string,class;t,t,query,for,object,string,sql,sql,parameter,source,param,source,class,t,required,type,throws,data,access,exception
NamedParameterJdbcOperations -> <T> T queryForObject(String sql, SqlParameterSource paramSource, Class<T> requiredType) 			throws DataAccessException_;1356735495;Query given SQL to create a prepared statement from SQL and a_list of arguments to bind to the query, expecting a result object._<p>The query is expected to be a single row/single column query_ the returned_result will be directly mapped to the corresponding object type._@param sql SQL query to execute_@param paramSource container of arguments to bind to the query_@param requiredType the type that the result object is expected to match_@return the result object of the required type, or {@code null} in case of SQL NULL_@throws org.springframework.dao.IncorrectResultSizeDataAccessException_if the query does not return exactly one row, or does not return exactly_one column in that row_@throws org.springframework.dao.DataAccessException if the query fails_@see org.springframework.jdbc.core.JdbcTemplate#queryForObject(String, Class);<T> T queryForObject(String sql, SqlParameterSource paramSource, Class<T> requiredType)_			throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,expecting,a,result,object,p,the,query,is,expected,to,be,a,single,row,single,column,query,the,returned,result,will,be,directly,mapped,to,the,corresponding,object,type,param,sql,sql,query,to,execute,param,param,source,container,of,arguments,to,bind,to,the,query,param,required,type,the,type,that,the,result,object,is,expected,to,match,return,the,result,object,of,the,required,type,or,code,null,in,case,of,sql,null,throws,org,springframework,dao,incorrect,result,size,data,access,exception,if,the,query,does,not,return,exactly,one,row,or,does,not,return,exactly,one,column,in,that,row,throws,org,springframework,dao,data,access,exception,if,the,query,fails,see,org,springframework,jdbc,core,jdbc,template,query,for,object,string,class;t,t,query,for,object,string,sql,sql,parameter,source,param,source,class,t,required,type,throws,data,access,exception
NamedParameterJdbcOperations -> <T> T queryForObject(String sql, SqlParameterSource paramSource, Class<T> requiredType) 			throws DataAccessException_;1362408075;Query given SQL to create a prepared statement from SQL and a_list of arguments to bind to the query, expecting a result object._<p>The query is expected to be a single row/single column query_ the returned_result will be directly mapped to the corresponding object type._@param sql SQL query to execute_@param paramSource container of arguments to bind to the query_@param requiredType the type that the result object is expected to match_@return the result object of the required type, or {@code null} in case of SQL NULL_@throws org.springframework.dao.IncorrectResultSizeDataAccessException_if the query does not return exactly one row, or does not return exactly_one column in that row_@throws org.springframework.dao.DataAccessException if the query fails_@see org.springframework.jdbc.core.JdbcTemplate#queryForObject(String, Class);<T> T queryForObject(String sql, SqlParameterSource paramSource, Class<T> requiredType)_			throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,expecting,a,result,object,p,the,query,is,expected,to,be,a,single,row,single,column,query,the,returned,result,will,be,directly,mapped,to,the,corresponding,object,type,param,sql,sql,query,to,execute,param,param,source,container,of,arguments,to,bind,to,the,query,param,required,type,the,type,that,the,result,object,is,expected,to,match,return,the,result,object,of,the,required,type,or,code,null,in,case,of,sql,null,throws,org,springframework,dao,incorrect,result,size,data,access,exception,if,the,query,does,not,return,exactly,one,row,or,does,not,return,exactly,one,column,in,that,row,throws,org,springframework,dao,data,access,exception,if,the,query,fails,see,org,springframework,jdbc,core,jdbc,template,query,for,object,string,class;t,t,query,for,object,string,sql,sql,parameter,source,param,source,class,t,required,type,throws,data,access,exception
NamedParameterJdbcOperations -> <T> T queryForObject(String sql, SqlParameterSource paramSource, Class<T> requiredType) 			throws DataAccessException_;1419966315;Query given SQL to create a prepared statement from SQL and a_list of arguments to bind to the query, expecting a result object._<p>The query is expected to be a single row/single column query_ the returned_result will be directly mapped to the corresponding object type._@param sql SQL query to execute_@param paramSource container of arguments to bind to the query_@param requiredType the type that the result object is expected to match_@return the result object of the required type, or {@code null} in case of SQL NULL_@throws org.springframework.dao.IncorrectResultSizeDataAccessException_if the query does not return exactly one row, or does not return exactly_one column in that row_@throws org.springframework.dao.DataAccessException if the query fails_@see org.springframework.jdbc.core.JdbcTemplate#queryForObject(String, Class);<T> T queryForObject(String sql, SqlParameterSource paramSource, Class<T> requiredType)_			throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,expecting,a,result,object,p,the,query,is,expected,to,be,a,single,row,single,column,query,the,returned,result,will,be,directly,mapped,to,the,corresponding,object,type,param,sql,sql,query,to,execute,param,param,source,container,of,arguments,to,bind,to,the,query,param,required,type,the,type,that,the,result,object,is,expected,to,match,return,the,result,object,of,the,required,type,or,code,null,in,case,of,sql,null,throws,org,springframework,dao,incorrect,result,size,data,access,exception,if,the,query,does,not,return,exactly,one,row,or,does,not,return,exactly,one,column,in,that,row,throws,org,springframework,dao,data,access,exception,if,the,query,fails,see,org,springframework,jdbc,core,jdbc,template,query,for,object,string,class;t,t,query,for,object,string,sql,sql,parameter,source,param,source,class,t,required,type,throws,data,access,exception
NamedParameterJdbcOperations -> <T> T queryForObject(String sql, SqlParameterSource paramSource, Class<T> requiredType) 			throws DataAccessException_;1491113276;Query given SQL to create a prepared statement from SQL and a_list of arguments to bind to the query, expecting a result object._<p>The query is expected to be a single row/single column query_ the returned_result will be directly mapped to the corresponding object type._@param sql SQL query to execute_@param paramSource container of arguments to bind to the query_@param requiredType the type that the result object is expected to match_@return the result object of the required type, or {@code null} in case of SQL NULL_@throws org.springframework.dao.IncorrectResultSizeDataAccessException_if the query does not return exactly one row, or does not return exactly_one column in that row_@throws org.springframework.dao.DataAccessException if the query fails_@see org.springframework.jdbc.core.JdbcTemplate#queryForObject(String, Class);<T> T queryForObject(String sql, SqlParameterSource paramSource, Class<T> requiredType)_			throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,expecting,a,result,object,p,the,query,is,expected,to,be,a,single,row,single,column,query,the,returned,result,will,be,directly,mapped,to,the,corresponding,object,type,param,sql,sql,query,to,execute,param,param,source,container,of,arguments,to,bind,to,the,query,param,required,type,the,type,that,the,result,object,is,expected,to,match,return,the,result,object,of,the,required,type,or,code,null,in,case,of,sql,null,throws,org,springframework,dao,incorrect,result,size,data,access,exception,if,the,query,does,not,return,exactly,one,row,or,does,not,return,exactly,one,column,in,that,row,throws,org,springframework,dao,data,access,exception,if,the,query,fails,see,org,springframework,jdbc,core,jdbc,template,query,for,object,string,class;t,t,query,for,object,string,sql,sql,parameter,source,param,source,class,t,required,type,throws,data,access,exception
NamedParameterJdbcOperations -> int[] batchUpdate(String sql, Map<String, ?>[] batchValues)_;1362408075;Executes a batch using the supplied SQL statement with the batch of supplied arguments._@param sql the SQL statement to execute_@param batchValues the array of Maps containing the batch of arguments for the query_@return an array containing the numbers of rows affected by each update in the batch;int[] batchUpdate(String sql, Map<String, ?>[] batchValues)_;executes,a,batch,using,the,supplied,sql,statement,with,the,batch,of,supplied,arguments,param,sql,the,sql,statement,to,execute,param,batch,values,the,array,of,maps,containing,the,batch,of,arguments,for,the,query,return,an,array,containing,the,numbers,of,rows,affected,by,each,update,in,the,batch;int,batch,update,string,sql,map,string,batch,values
NamedParameterJdbcOperations -> int[] batchUpdate(String sql, Map<String, ?>[] batchValues)_;1419966315;Executes a batch using the supplied SQL statement with the batch of supplied arguments._@param sql the SQL statement to execute_@param batchValues the array of Maps containing the batch of arguments for the query_@return an array containing the numbers of rows affected by each update in the batch;int[] batchUpdate(String sql, Map<String, ?>[] batchValues)_;executes,a,batch,using,the,supplied,sql,statement,with,the,batch,of,supplied,arguments,param,sql,the,sql,statement,to,execute,param,batch,values,the,array,of,maps,containing,the,batch,of,arguments,for,the,query,return,an,array,containing,the,numbers,of,rows,affected,by,each,update,in,the,batch;int,batch,update,string,sql,map,string,batch,values
NamedParameterJdbcOperations -> int[] batchUpdate(String sql, Map<String, ?>[] batchValues)_;1491113276;Executes a batch using the supplied SQL statement with the batch of supplied arguments._@param sql the SQL statement to execute_@param batchValues the array of Maps containing the batch of arguments for the query_@return an array containing the numbers of rows affected by each update in the batch;int[] batchUpdate(String sql, Map<String, ?>[] batchValues)_;executes,a,batch,using,the,supplied,sql,statement,with,the,batch,of,supplied,arguments,param,sql,the,sql,statement,to,execute,param,batch,values,the,array,of,maps,containing,the,batch,of,arguments,for,the,query,return,an,array,containing,the,numbers,of,rows,affected,by,each,update,in,the,batch;int,batch,update,string,sql,map,string,batch,values
NamedParameterJdbcOperations -> int[] batchUpdate(String sql, Map<String, ?>[] batchValues)_;1495868221;Executes a batch using the supplied SQL statement with the batch of supplied arguments._@param sql the SQL statement to execute_@param batchValues the array of Maps containing the batch of arguments for the query_@return an array containing the numbers of rows affected by each update in the batch;int[] batchUpdate(String sql, Map<String, ?>[] batchValues)_;executes,a,batch,using,the,supplied,sql,statement,with,the,batch,of,supplied,arguments,param,sql,the,sql,statement,to,execute,param,batch,values,the,array,of,maps,containing,the,batch,of,arguments,for,the,query,return,an,array,containing,the,numbers,of,rows,affected,by,each,update,in,the,batch;int,batch,update,string,sql,map,string,batch,values
NamedParameterJdbcOperations -> int[] batchUpdate(String sql, Map<String, ?>[] batchValues)_;1496837955;Executes a batch using the supplied SQL statement with the batch of supplied arguments._@param sql the SQL statement to execute_@param batchValues the array of Maps containing the batch of arguments for the query_@return an array containing the numbers of rows affected by each update in the batch;int[] batchUpdate(String sql, Map<String, ?>[] batchValues)_;executes,a,batch,using,the,supplied,sql,statement,with,the,batch,of,supplied,arguments,param,sql,the,sql,statement,to,execute,param,batch,values,the,array,of,maps,containing,the,batch,of,arguments,for,the,query,return,an,array,containing,the,numbers,of,rows,affected,by,each,update,in,the,batch;int,batch,update,string,sql,map,string,batch,values
NamedParameterJdbcOperations -> int[] batchUpdate(String sql, Map<String, ?>[] batchValues)_;1502974979;Executes a batch using the supplied SQL statement with the batch of supplied arguments._@param sql the SQL statement to execute_@param batchValues the array of Maps containing the batch of arguments for the query_@return an array containing the numbers of rows affected by each update in the batch;int[] batchUpdate(String sql, Map<String, ?>[] batchValues)_;executes,a,batch,using,the,supplied,sql,statement,with,the,batch,of,supplied,arguments,param,sql,the,sql,statement,to,execute,param,batch,values,the,array,of,maps,containing,the,batch,of,arguments,for,the,query,return,an,array,containing,the,numbers,of,rows,affected,by,each,update,in,the,batch;int,batch,update,string,sql,map,string,batch,values
NamedParameterJdbcOperations -> int[] batchUpdate(String sql, Map<String, ?>[] batchValues)_;1511712999;Executes a batch using the supplied SQL statement with the batch of supplied arguments._@param sql the SQL statement to execute_@param batchValues the array of Maps containing the batch of arguments for the query_@return an array containing the numbers of rows affected by each update in the batch;int[] batchUpdate(String sql, Map<String, ?>[] batchValues)_;executes,a,batch,using,the,supplied,sql,statement,with,the,batch,of,supplied,arguments,param,sql,the,sql,statement,to,execute,param,batch,values,the,array,of,maps,containing,the,batch,of,arguments,for,the,query,return,an,array,containing,the,numbers,of,rows,affected,by,each,update,in,the,batch;int,batch,update,string,sql,map,string,batch,values
NamedParameterJdbcOperations -> int[] batchUpdate(String sql, Map<String, ?>[] batchValues)_;1530174524;Executes a batch using the supplied SQL statement with the batch of supplied arguments._@param sql the SQL statement to execute_@param batchValues the array of Maps containing the batch of arguments for the query_@return an array containing the numbers of rows affected by each update in the batch;int[] batchUpdate(String sql, Map<String, ?>[] batchValues)_;executes,a,batch,using,the,supplied,sql,statement,with,the,batch,of,supplied,arguments,param,sql,the,sql,statement,to,execute,param,batch,values,the,array,of,maps,containing,the,batch,of,arguments,for,the,query,return,an,array,containing,the,numbers,of,rows,affected,by,each,update,in,the,batch;int,batch,update,string,sql,map,string,batch,values
NamedParameterJdbcOperations -> <T> List<T> queryForList(String sql, SqlParameterSource paramSource, Class<T> elementType) 			throws DataAccessException_;1328020251;Query given SQL to create a prepared statement from SQL and a_list of arguments to bind to the query, expecting a result list._<p>The results will be mapped to a List (one entry for each row) of_result objects, each of them matching the specified element type._@param sql SQL query to execute_@param paramSource container of arguments to bind to the query_@param elementType the required type of element in the result list_(for example, <code>Integer.class</code>)_@return a List of objects that match the specified element type_@throws org.springframework.dao.DataAccessException if the query fails_@see org.springframework.jdbc.core.JdbcTemplate#queryForList(String, Class)_@see org.springframework.jdbc.core.SingleColumnRowMapper;<T> List<T> queryForList(String sql, SqlParameterSource paramSource, Class<T> elementType)_			throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,expecting,a,result,list,p,the,results,will,be,mapped,to,a,list,one,entry,for,each,row,of,result,objects,each,of,them,matching,the,specified,element,type,param,sql,sql,query,to,execute,param,param,source,container,of,arguments,to,bind,to,the,query,param,element,type,the,required,type,of,element,in,the,result,list,for,example,code,integer,class,code,return,a,list,of,objects,that,match,the,specified,element,type,throws,org,springframework,dao,data,access,exception,if,the,query,fails,see,org,springframework,jdbc,core,jdbc,template,query,for,list,string,class,see,org,springframework,jdbc,core,single,column,row,mapper;t,list,t,query,for,list,string,sql,sql,parameter,source,param,source,class,t,element,type,throws,data,access,exception
NamedParameterJdbcOperations -> <T> List<T> queryForList(String sql, SqlParameterSource paramSource, Class<T> elementType) 			throws DataAccessException_;1356735495;Query given SQL to create a prepared statement from SQL and a_list of arguments to bind to the query, expecting a result list._<p>The results will be mapped to a List (one entry for each row) of_result objects, each of them matching the specified element type._@param sql SQL query to execute_@param paramSource container of arguments to bind to the query_@param elementType the required type of element in the result list_(for example, {@code Integer.class})_@return a List of objects that match the specified element type_@throws org.springframework.dao.DataAccessException if the query fails_@see org.springframework.jdbc.core.JdbcTemplate#queryForList(String, Class)_@see org.springframework.jdbc.core.SingleColumnRowMapper;<T> List<T> queryForList(String sql, SqlParameterSource paramSource, Class<T> elementType)_			throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,expecting,a,result,list,p,the,results,will,be,mapped,to,a,list,one,entry,for,each,row,of,result,objects,each,of,them,matching,the,specified,element,type,param,sql,sql,query,to,execute,param,param,source,container,of,arguments,to,bind,to,the,query,param,element,type,the,required,type,of,element,in,the,result,list,for,example,code,integer,class,return,a,list,of,objects,that,match,the,specified,element,type,throws,org,springframework,dao,data,access,exception,if,the,query,fails,see,org,springframework,jdbc,core,jdbc,template,query,for,list,string,class,see,org,springframework,jdbc,core,single,column,row,mapper;t,list,t,query,for,list,string,sql,sql,parameter,source,param,source,class,t,element,type,throws,data,access,exception
NamedParameterJdbcOperations -> <T> List<T> queryForList(String sql, SqlParameterSource paramSource, Class<T> elementType) 			throws DataAccessException_;1362408075;Query given SQL to create a prepared statement from SQL and a_list of arguments to bind to the query, expecting a result list._<p>The results will be mapped to a List (one entry for each row) of_result objects, each of them matching the specified element type._@param sql SQL query to execute_@param paramSource container of arguments to bind to the query_@param elementType the required type of element in the result list_(for example, {@code Integer.class})_@return a List of objects that match the specified element type_@throws org.springframework.dao.DataAccessException if the query fails_@see org.springframework.jdbc.core.JdbcTemplate#queryForList(String, Class)_@see org.springframework.jdbc.core.SingleColumnRowMapper;<T> List<T> queryForList(String sql, SqlParameterSource paramSource, Class<T> elementType)_			throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,expecting,a,result,list,p,the,results,will,be,mapped,to,a,list,one,entry,for,each,row,of,result,objects,each,of,them,matching,the,specified,element,type,param,sql,sql,query,to,execute,param,param,source,container,of,arguments,to,bind,to,the,query,param,element,type,the,required,type,of,element,in,the,result,list,for,example,code,integer,class,return,a,list,of,objects,that,match,the,specified,element,type,throws,org,springframework,dao,data,access,exception,if,the,query,fails,see,org,springframework,jdbc,core,jdbc,template,query,for,list,string,class,see,org,springframework,jdbc,core,single,column,row,mapper;t,list,t,query,for,list,string,sql,sql,parameter,source,param,source,class,t,element,type,throws,data,access,exception
NamedParameterJdbcOperations -> <T> List<T> queryForList(String sql, SqlParameterSource paramSource, Class<T> elementType) 			throws DataAccessException_;1419966315;Query given SQL to create a prepared statement from SQL and a_list of arguments to bind to the query, expecting a result list._<p>The results will be mapped to a List (one entry for each row) of_result objects, each of them matching the specified element type._@param sql SQL query to execute_@param paramSource container of arguments to bind to the query_@param elementType the required type of element in the result list_(for example, {@code Integer.class})_@return a List of objects that match the specified element type_@throws org.springframework.dao.DataAccessException if the query fails_@see org.springframework.jdbc.core.JdbcTemplate#queryForList(String, Class)_@see org.springframework.jdbc.core.SingleColumnRowMapper;<T> List<T> queryForList(String sql, SqlParameterSource paramSource, Class<T> elementType)_			throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,expecting,a,result,list,p,the,results,will,be,mapped,to,a,list,one,entry,for,each,row,of,result,objects,each,of,them,matching,the,specified,element,type,param,sql,sql,query,to,execute,param,param,source,container,of,arguments,to,bind,to,the,query,param,element,type,the,required,type,of,element,in,the,result,list,for,example,code,integer,class,return,a,list,of,objects,that,match,the,specified,element,type,throws,org,springframework,dao,data,access,exception,if,the,query,fails,see,org,springframework,jdbc,core,jdbc,template,query,for,list,string,class,see,org,springframework,jdbc,core,single,column,row,mapper;t,list,t,query,for,list,string,sql,sql,parameter,source,param,source,class,t,element,type,throws,data,access,exception
NamedParameterJdbcOperations -> <T> List<T> queryForList(String sql, SqlParameterSource paramSource, Class<T> elementType) 			throws DataAccessException_;1491113276;Query given SQL to create a prepared statement from SQL and a_list of arguments to bind to the query, expecting a result list._<p>The results will be mapped to a List (one entry for each row) of_result objects, each of them matching the specified element type._@param sql SQL query to execute_@param paramSource container of arguments to bind to the query_@param elementType the required type of element in the result list_(for example, {@code Integer.class})_@return a List of objects that match the specified element type_@throws org.springframework.dao.DataAccessException if the query fails_@see org.springframework.jdbc.core.JdbcTemplate#queryForList(String, Class)_@see org.springframework.jdbc.core.SingleColumnRowMapper;<T> List<T> queryForList(String sql, SqlParameterSource paramSource, Class<T> elementType)_			throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,expecting,a,result,list,p,the,results,will,be,mapped,to,a,list,one,entry,for,each,row,of,result,objects,each,of,them,matching,the,specified,element,type,param,sql,sql,query,to,execute,param,param,source,container,of,arguments,to,bind,to,the,query,param,element,type,the,required,type,of,element,in,the,result,list,for,example,code,integer,class,return,a,list,of,objects,that,match,the,specified,element,type,throws,org,springframework,dao,data,access,exception,if,the,query,fails,see,org,springframework,jdbc,core,jdbc,template,query,for,list,string,class,see,org,springframework,jdbc,core,single,column,row,mapper;t,list,t,query,for,list,string,sql,sql,parameter,source,param,source,class,t,element,type,throws,data,access,exception
NamedParameterJdbcOperations -> <T> List<T> queryForList(String sql, SqlParameterSource paramSource, Class<T> elementType) 			throws DataAccessException_;1495868221;Query given SQL to create a prepared statement from SQL and a_list of arguments to bind to the query, expecting a result list._<p>The results will be mapped to a List (one entry for each row) of_result objects, each of them matching the specified element type._@param sql SQL query to execute_@param paramSource container of arguments to bind to the query_@param elementType the required type of element in the result list_(for example, {@code Integer.class})_@return a List of objects that match the specified element type_@throws org.springframework.dao.DataAccessException if the query fails_@see org.springframework.jdbc.core.JdbcTemplate#queryForList(String, Class)_@see org.springframework.jdbc.core.SingleColumnRowMapper;<T> List<T> queryForList(String sql, SqlParameterSource paramSource, Class<T> elementType)_			throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,expecting,a,result,list,p,the,results,will,be,mapped,to,a,list,one,entry,for,each,row,of,result,objects,each,of,them,matching,the,specified,element,type,param,sql,sql,query,to,execute,param,param,source,container,of,arguments,to,bind,to,the,query,param,element,type,the,required,type,of,element,in,the,result,list,for,example,code,integer,class,return,a,list,of,objects,that,match,the,specified,element,type,throws,org,springframework,dao,data,access,exception,if,the,query,fails,see,org,springframework,jdbc,core,jdbc,template,query,for,list,string,class,see,org,springframework,jdbc,core,single,column,row,mapper;t,list,t,query,for,list,string,sql,sql,parameter,source,param,source,class,t,element,type,throws,data,access,exception
NamedParameterJdbcOperations -> <T> List<T> queryForList(String sql, SqlParameterSource paramSource, Class<T> elementType) 			throws DataAccessException_;1496837955;Query given SQL to create a prepared statement from SQL and a_list of arguments to bind to the query, expecting a result list._<p>The results will be mapped to a List (one entry for each row) of_result objects, each of them matching the specified element type._@param sql SQL query to execute_@param paramSource container of arguments to bind to the query_@param elementType the required type of element in the result list_(for example, {@code Integer.class})_@return a List of objects that match the specified element type_@throws org.springframework.dao.DataAccessException if the query fails_@see org.springframework.jdbc.core.JdbcTemplate#queryForList(String, Class)_@see org.springframework.jdbc.core.SingleColumnRowMapper;<T> List<T> queryForList(String sql, SqlParameterSource paramSource, Class<T> elementType)_			throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,expecting,a,result,list,p,the,results,will,be,mapped,to,a,list,one,entry,for,each,row,of,result,objects,each,of,them,matching,the,specified,element,type,param,sql,sql,query,to,execute,param,param,source,container,of,arguments,to,bind,to,the,query,param,element,type,the,required,type,of,element,in,the,result,list,for,example,code,integer,class,return,a,list,of,objects,that,match,the,specified,element,type,throws,org,springframework,dao,data,access,exception,if,the,query,fails,see,org,springframework,jdbc,core,jdbc,template,query,for,list,string,class,see,org,springframework,jdbc,core,single,column,row,mapper;t,list,t,query,for,list,string,sql,sql,parameter,source,param,source,class,t,element,type,throws,data,access,exception
NamedParameterJdbcOperations -> <T> List<T> queryForList(String sql, SqlParameterSource paramSource, Class<T> elementType) 			throws DataAccessException_;1502974979;Query given SQL to create a prepared statement from SQL and a_list of arguments to bind to the query, expecting a result list._<p>The results will be mapped to a List (one entry for each row) of_result objects, each of them matching the specified element type._@param sql SQL query to execute_@param paramSource container of arguments to bind to the query_@param elementType the required type of element in the result list_(for example, {@code Integer.class})_@return a List of objects that match the specified element type_@throws org.springframework.dao.DataAccessException if the query fails_@see org.springframework.jdbc.core.JdbcTemplate#queryForList(String, Class)_@see org.springframework.jdbc.core.SingleColumnRowMapper;<T> List<T> queryForList(String sql, SqlParameterSource paramSource, Class<T> elementType)_			throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,expecting,a,result,list,p,the,results,will,be,mapped,to,a,list,one,entry,for,each,row,of,result,objects,each,of,them,matching,the,specified,element,type,param,sql,sql,query,to,execute,param,param,source,container,of,arguments,to,bind,to,the,query,param,element,type,the,required,type,of,element,in,the,result,list,for,example,code,integer,class,return,a,list,of,objects,that,match,the,specified,element,type,throws,org,springframework,dao,data,access,exception,if,the,query,fails,see,org,springframework,jdbc,core,jdbc,template,query,for,list,string,class,see,org,springframework,jdbc,core,single,column,row,mapper;t,list,t,query,for,list,string,sql,sql,parameter,source,param,source,class,t,element,type,throws,data,access,exception
NamedParameterJdbcOperations -> <T> List<T> queryForList(String sql, SqlParameterSource paramSource, Class<T> elementType) 			throws DataAccessException_;1511712999;Query given SQL to create a prepared statement from SQL and a_list of arguments to bind to the query, expecting a result list._<p>The results will be mapped to a List (one entry for each row) of_result objects, each of them matching the specified element type._@param sql SQL query to execute_@param paramSource container of arguments to bind to the query_@param elementType the required type of element in the result list_(for example, {@code Integer.class})_@return a List of objects that match the specified element type_@throws org.springframework.dao.DataAccessException if the query fails_@see org.springframework.jdbc.core.JdbcTemplate#queryForList(String, Class)_@see org.springframework.jdbc.core.SingleColumnRowMapper;<T> List<T> queryForList(String sql, SqlParameterSource paramSource, Class<T> elementType)_			throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,expecting,a,result,list,p,the,results,will,be,mapped,to,a,list,one,entry,for,each,row,of,result,objects,each,of,them,matching,the,specified,element,type,param,sql,sql,query,to,execute,param,param,source,container,of,arguments,to,bind,to,the,query,param,element,type,the,required,type,of,element,in,the,result,list,for,example,code,integer,class,return,a,list,of,objects,that,match,the,specified,element,type,throws,org,springframework,dao,data,access,exception,if,the,query,fails,see,org,springframework,jdbc,core,jdbc,template,query,for,list,string,class,see,org,springframework,jdbc,core,single,column,row,mapper;t,list,t,query,for,list,string,sql,sql,parameter,source,param,source,class,t,element,type,throws,data,access,exception
NamedParameterJdbcOperations -> <T> List<T> queryForList(String sql, SqlParameterSource paramSource, Class<T> elementType) 			throws DataAccessException_;1530174524;Query given SQL to create a prepared statement from SQL and a_list of arguments to bind to the query, expecting a result list._<p>The results will be mapped to a List (one entry for each row) of_result objects, each of them matching the specified element type._@param sql the SQL query to execute_@param paramSource container of arguments to bind to the query_@param elementType the required type of element in the result list_(for example, {@code Integer.class})_@return a List of objects that match the specified element type_@throws org.springframework.dao.DataAccessException if the query fails_@see org.springframework.jdbc.core.JdbcTemplate#queryForList(String, Class)_@see org.springframework.jdbc.core.SingleColumnRowMapper;<T> List<T> queryForList(String sql, SqlParameterSource paramSource, Class<T> elementType)_			throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,expecting,a,result,list,p,the,results,will,be,mapped,to,a,list,one,entry,for,each,row,of,result,objects,each,of,them,matching,the,specified,element,type,param,sql,the,sql,query,to,execute,param,param,source,container,of,arguments,to,bind,to,the,query,param,element,type,the,required,type,of,element,in,the,result,list,for,example,code,integer,class,return,a,list,of,objects,that,match,the,specified,element,type,throws,org,springframework,dao,data,access,exception,if,the,query,fails,see,org,springframework,jdbc,core,jdbc,template,query,for,list,string,class,see,org,springframework,jdbc,core,single,column,row,mapper;t,list,t,query,for,list,string,sql,sql,parameter,source,param,source,class,t,element,type,throws,data,access,exception
NamedParameterJdbcOperations -> @Nullable 	<T> T queryForObject(String sql, SqlParameterSource paramSource, RowMapper<T> rowMapper) 			throws DataAccessException_;1502974979;Query given SQL to create a prepared statement from SQL and a list_of arguments to bind to the query, mapping a single result row to a_Java object via a RowMapper._@param sql SQL query to execute_@param paramSource container of arguments to bind to the query_@param rowMapper object that will map one object per row_@return the single mapped object_@throws org.springframework.dao.IncorrectResultSizeDataAccessException_if the query does not return exactly one row, or does not return exactly_one column in that row_@throws org.springframework.dao.DataAccessException if the query fails;@Nullable_	<T> T queryForObject(String sql, SqlParameterSource paramSource, RowMapper<T> rowMapper)_			throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,mapping,a,single,result,row,to,a,java,object,via,a,row,mapper,param,sql,sql,query,to,execute,param,param,source,container,of,arguments,to,bind,to,the,query,param,row,mapper,object,that,will,map,one,object,per,row,return,the,single,mapped,object,throws,org,springframework,dao,incorrect,result,size,data,access,exception,if,the,query,does,not,return,exactly,one,row,or,does,not,return,exactly,one,column,in,that,row,throws,org,springframework,dao,data,access,exception,if,the,query,fails;nullable,t,t,query,for,object,string,sql,sql,parameter,source,param,source,row,mapper,t,row,mapper,throws,data,access,exception
NamedParameterJdbcOperations -> @Nullable 	<T> T queryForObject(String sql, SqlParameterSource paramSource, RowMapper<T> rowMapper) 			throws DataAccessException_;1511712999;Query given SQL to create a prepared statement from SQL and a list_of arguments to bind to the query, mapping a single result row to a_Java object via a RowMapper._@param sql SQL query to execute_@param paramSource container of arguments to bind to the query_@param rowMapper object that will map one object per row_@return the single mapped object (may be {@code null} if the given_{@link RowMapper} returned {@code} null)_@throws org.springframework.dao.IncorrectResultSizeDataAccessException_if the query does not return exactly one row, or does not return exactly_one column in that row_@throws org.springframework.dao.DataAccessException if the query fails;@Nullable_	<T> T queryForObject(String sql, SqlParameterSource paramSource, RowMapper<T> rowMapper)_			throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,mapping,a,single,result,row,to,a,java,object,via,a,row,mapper,param,sql,sql,query,to,execute,param,param,source,container,of,arguments,to,bind,to,the,query,param,row,mapper,object,that,will,map,one,object,per,row,return,the,single,mapped,object,may,be,code,null,if,the,given,link,row,mapper,returned,code,null,throws,org,springframework,dao,incorrect,result,size,data,access,exception,if,the,query,does,not,return,exactly,one,row,or,does,not,return,exactly,one,column,in,that,row,throws,org,springframework,dao,data,access,exception,if,the,query,fails;nullable,t,t,query,for,object,string,sql,sql,parameter,source,param,source,row,mapper,t,row,mapper,throws,data,access,exception
NamedParameterJdbcOperations -> @Nullable 	<T> T queryForObject(String sql, SqlParameterSource paramSource, RowMapper<T> rowMapper) 			throws DataAccessException_;1530174524;Query given SQL to create a prepared statement from SQL and a list_of arguments to bind to the query, mapping a single result row to a_Java object via a RowMapper._@param sql the SQL query to execute_@param paramSource container of arguments to bind to the query_@param rowMapper object that will map one object per row_@return the single mapped object (may be {@code null} if the given_{@link RowMapper} returned {@code} null)_@throws org.springframework.dao.IncorrectResultSizeDataAccessException_if the query does not return exactly one row, or does not return exactly_one column in that row_@throws org.springframework.dao.DataAccessException if the query fails;@Nullable_	<T> T queryForObject(String sql, SqlParameterSource paramSource, RowMapper<T> rowMapper)_			throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,mapping,a,single,result,row,to,a,java,object,via,a,row,mapper,param,sql,the,sql,query,to,execute,param,param,source,container,of,arguments,to,bind,to,the,query,param,row,mapper,object,that,will,map,one,object,per,row,return,the,single,mapped,object,may,be,code,null,if,the,given,link,row,mapper,returned,code,null,throws,org,springframework,dao,incorrect,result,size,data,access,exception,if,the,query,does,not,return,exactly,one,row,or,does,not,return,exactly,one,column,in,that,row,throws,org,springframework,dao,data,access,exception,if,the,query,fails;nullable,t,t,query,for,object,string,sql,sql,parameter,source,param,source,row,mapper,t,row,mapper,throws,data,access,exception
NamedParameterJdbcOperations -> <T> List<T> queryForList(String sql, Map<String, ?> paramMap, Class<T> elementType) 			throws DataAccessException_;1328020251;Query given SQL to create a prepared statement from SQL and a_list of arguments to bind to the query, expecting a result list._<p>The results will be mapped to a List (one entry for each row) of_result objects, each of them matching the specified element type._@param sql SQL query to execute_@param paramMap map of parameters to bind to the query_(leaving it to the PreparedStatement to guess the corresponding SQL type)_@param elementType the required type of element in the result list_(for example, <code>Integer.class</code>)_@return a List of objects that match the specified element type_@throws org.springframework.dao.DataAccessException if the query fails_@see org.springframework.jdbc.core.JdbcTemplate#queryForList(String, Class)_@see org.springframework.jdbc.core.SingleColumnRowMapper;<T> List<T> queryForList(String sql, Map<String, ?> paramMap, Class<T> elementType)_			throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,expecting,a,result,list,p,the,results,will,be,mapped,to,a,list,one,entry,for,each,row,of,result,objects,each,of,them,matching,the,specified,element,type,param,sql,sql,query,to,execute,param,param,map,map,of,parameters,to,bind,to,the,query,leaving,it,to,the,prepared,statement,to,guess,the,corresponding,sql,type,param,element,type,the,required,type,of,element,in,the,result,list,for,example,code,integer,class,code,return,a,list,of,objects,that,match,the,specified,element,type,throws,org,springframework,dao,data,access,exception,if,the,query,fails,see,org,springframework,jdbc,core,jdbc,template,query,for,list,string,class,see,org,springframework,jdbc,core,single,column,row,mapper;t,list,t,query,for,list,string,sql,map,string,param,map,class,t,element,type,throws,data,access,exception
NamedParameterJdbcOperations -> <T> List<T> queryForList(String sql, Map<String, ?> paramMap, Class<T> elementType) 			throws DataAccessException_;1356735495;Query given SQL to create a prepared statement from SQL and a_list of arguments to bind to the query, expecting a result list._<p>The results will be mapped to a List (one entry for each row) of_result objects, each of them matching the specified element type._@param sql SQL query to execute_@param paramMap map of parameters to bind to the query_(leaving it to the PreparedStatement to guess the corresponding SQL type)_@param elementType the required type of element in the result list_(for example, {@code Integer.class})_@return a List of objects that match the specified element type_@throws org.springframework.dao.DataAccessException if the query fails_@see org.springframework.jdbc.core.JdbcTemplate#queryForList(String, Class)_@see org.springframework.jdbc.core.SingleColumnRowMapper;<T> List<T> queryForList(String sql, Map<String, ?> paramMap, Class<T> elementType)_			throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,expecting,a,result,list,p,the,results,will,be,mapped,to,a,list,one,entry,for,each,row,of,result,objects,each,of,them,matching,the,specified,element,type,param,sql,sql,query,to,execute,param,param,map,map,of,parameters,to,bind,to,the,query,leaving,it,to,the,prepared,statement,to,guess,the,corresponding,sql,type,param,element,type,the,required,type,of,element,in,the,result,list,for,example,code,integer,class,return,a,list,of,objects,that,match,the,specified,element,type,throws,org,springframework,dao,data,access,exception,if,the,query,fails,see,org,springframework,jdbc,core,jdbc,template,query,for,list,string,class,see,org,springframework,jdbc,core,single,column,row,mapper;t,list,t,query,for,list,string,sql,map,string,param,map,class,t,element,type,throws,data,access,exception
NamedParameterJdbcOperations -> <T> List<T> queryForList(String sql, Map<String, ?> paramMap, Class<T> elementType) 			throws DataAccessException_;1362408075;Query given SQL to create a prepared statement from SQL and a_list of arguments to bind to the query, expecting a result list._<p>The results will be mapped to a List (one entry for each row) of_result objects, each of them matching the specified element type._@param sql SQL query to execute_@param paramMap map of parameters to bind to the query_(leaving it to the PreparedStatement to guess the corresponding SQL type)_@param elementType the required type of element in the result list_(for example, {@code Integer.class})_@return a List of objects that match the specified element type_@throws org.springframework.dao.DataAccessException if the query fails_@see org.springframework.jdbc.core.JdbcTemplate#queryForList(String, Class)_@see org.springframework.jdbc.core.SingleColumnRowMapper;<T> List<T> queryForList(String sql, Map<String, ?> paramMap, Class<T> elementType)_			throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,expecting,a,result,list,p,the,results,will,be,mapped,to,a,list,one,entry,for,each,row,of,result,objects,each,of,them,matching,the,specified,element,type,param,sql,sql,query,to,execute,param,param,map,map,of,parameters,to,bind,to,the,query,leaving,it,to,the,prepared,statement,to,guess,the,corresponding,sql,type,param,element,type,the,required,type,of,element,in,the,result,list,for,example,code,integer,class,return,a,list,of,objects,that,match,the,specified,element,type,throws,org,springframework,dao,data,access,exception,if,the,query,fails,see,org,springframework,jdbc,core,jdbc,template,query,for,list,string,class,see,org,springframework,jdbc,core,single,column,row,mapper;t,list,t,query,for,list,string,sql,map,string,param,map,class,t,element,type,throws,data,access,exception
NamedParameterJdbcOperations -> <T> List<T> queryForList(String sql, Map<String, ?> paramMap, Class<T> elementType) 			throws DataAccessException_;1419966315;Query given SQL to create a prepared statement from SQL and a_list of arguments to bind to the query, expecting a result list._<p>The results will be mapped to a List (one entry for each row) of_result objects, each of them matching the specified element type._@param sql SQL query to execute_@param paramMap map of parameters to bind to the query_(leaving it to the PreparedStatement to guess the corresponding SQL type)_@param elementType the required type of element in the result list_(for example, {@code Integer.class})_@return a List of objects that match the specified element type_@throws org.springframework.dao.DataAccessException if the query fails_@see org.springframework.jdbc.core.JdbcTemplate#queryForList(String, Class)_@see org.springframework.jdbc.core.SingleColumnRowMapper;<T> List<T> queryForList(String sql, Map<String, ?> paramMap, Class<T> elementType)_			throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,expecting,a,result,list,p,the,results,will,be,mapped,to,a,list,one,entry,for,each,row,of,result,objects,each,of,them,matching,the,specified,element,type,param,sql,sql,query,to,execute,param,param,map,map,of,parameters,to,bind,to,the,query,leaving,it,to,the,prepared,statement,to,guess,the,corresponding,sql,type,param,element,type,the,required,type,of,element,in,the,result,list,for,example,code,integer,class,return,a,list,of,objects,that,match,the,specified,element,type,throws,org,springframework,dao,data,access,exception,if,the,query,fails,see,org,springframework,jdbc,core,jdbc,template,query,for,list,string,class,see,org,springframework,jdbc,core,single,column,row,mapper;t,list,t,query,for,list,string,sql,map,string,param,map,class,t,element,type,throws,data,access,exception
NamedParameterJdbcOperations -> <T> List<T> queryForList(String sql, Map<String, ?> paramMap, Class<T> elementType) 			throws DataAccessException_;1491113276;Query given SQL to create a prepared statement from SQL and a_list of arguments to bind to the query, expecting a result list._<p>The results will be mapped to a List (one entry for each row) of_result objects, each of them matching the specified element type._@param sql SQL query to execute_@param paramMap map of parameters to bind to the query_(leaving it to the PreparedStatement to guess the corresponding SQL type)_@param elementType the required type of element in the result list_(for example, {@code Integer.class})_@return a List of objects that match the specified element type_@throws org.springframework.dao.DataAccessException if the query fails_@see org.springframework.jdbc.core.JdbcTemplate#queryForList(String, Class)_@see org.springframework.jdbc.core.SingleColumnRowMapper;<T> List<T> queryForList(String sql, Map<String, ?> paramMap, Class<T> elementType)_			throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,expecting,a,result,list,p,the,results,will,be,mapped,to,a,list,one,entry,for,each,row,of,result,objects,each,of,them,matching,the,specified,element,type,param,sql,sql,query,to,execute,param,param,map,map,of,parameters,to,bind,to,the,query,leaving,it,to,the,prepared,statement,to,guess,the,corresponding,sql,type,param,element,type,the,required,type,of,element,in,the,result,list,for,example,code,integer,class,return,a,list,of,objects,that,match,the,specified,element,type,throws,org,springframework,dao,data,access,exception,if,the,query,fails,see,org,springframework,jdbc,core,jdbc,template,query,for,list,string,class,see,org,springframework,jdbc,core,single,column,row,mapper;t,list,t,query,for,list,string,sql,map,string,param,map,class,t,element,type,throws,data,access,exception
NamedParameterJdbcOperations -> <T> List<T> queryForList(String sql, Map<String, ?> paramMap, Class<T> elementType) 			throws DataAccessException_;1495868221;Query given SQL to create a prepared statement from SQL and a_list of arguments to bind to the query, expecting a result list._<p>The results will be mapped to a List (one entry for each row) of_result objects, each of them matching the specified element type._@param sql SQL query to execute_@param paramMap map of parameters to bind to the query_(leaving it to the PreparedStatement to guess the corresponding SQL type)_@param elementType the required type of element in the result list_(for example, {@code Integer.class})_@return a List of objects that match the specified element type_@throws org.springframework.dao.DataAccessException if the query fails_@see org.springframework.jdbc.core.JdbcTemplate#queryForList(String, Class)_@see org.springframework.jdbc.core.SingleColumnRowMapper;<T> List<T> queryForList(String sql, Map<String, ?> paramMap, Class<T> elementType)_			throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,expecting,a,result,list,p,the,results,will,be,mapped,to,a,list,one,entry,for,each,row,of,result,objects,each,of,them,matching,the,specified,element,type,param,sql,sql,query,to,execute,param,param,map,map,of,parameters,to,bind,to,the,query,leaving,it,to,the,prepared,statement,to,guess,the,corresponding,sql,type,param,element,type,the,required,type,of,element,in,the,result,list,for,example,code,integer,class,return,a,list,of,objects,that,match,the,specified,element,type,throws,org,springframework,dao,data,access,exception,if,the,query,fails,see,org,springframework,jdbc,core,jdbc,template,query,for,list,string,class,see,org,springframework,jdbc,core,single,column,row,mapper;t,list,t,query,for,list,string,sql,map,string,param,map,class,t,element,type,throws,data,access,exception
NamedParameterJdbcOperations -> <T> List<T> queryForList(String sql, Map<String, ?> paramMap, Class<T> elementType) 			throws DataAccessException_;1496837955;Query given SQL to create a prepared statement from SQL and a_list of arguments to bind to the query, expecting a result list._<p>The results will be mapped to a List (one entry for each row) of_result objects, each of them matching the specified element type._@param sql SQL query to execute_@param paramMap map of parameters to bind to the query_(leaving it to the PreparedStatement to guess the corresponding SQL type)_@param elementType the required type of element in the result list_(for example, {@code Integer.class})_@return a List of objects that match the specified element type_@throws org.springframework.dao.DataAccessException if the query fails_@see org.springframework.jdbc.core.JdbcTemplate#queryForList(String, Class)_@see org.springframework.jdbc.core.SingleColumnRowMapper;<T> List<T> queryForList(String sql, Map<String, ?> paramMap, Class<T> elementType)_			throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,expecting,a,result,list,p,the,results,will,be,mapped,to,a,list,one,entry,for,each,row,of,result,objects,each,of,them,matching,the,specified,element,type,param,sql,sql,query,to,execute,param,param,map,map,of,parameters,to,bind,to,the,query,leaving,it,to,the,prepared,statement,to,guess,the,corresponding,sql,type,param,element,type,the,required,type,of,element,in,the,result,list,for,example,code,integer,class,return,a,list,of,objects,that,match,the,specified,element,type,throws,org,springframework,dao,data,access,exception,if,the,query,fails,see,org,springframework,jdbc,core,jdbc,template,query,for,list,string,class,see,org,springframework,jdbc,core,single,column,row,mapper;t,list,t,query,for,list,string,sql,map,string,param,map,class,t,element,type,throws,data,access,exception
NamedParameterJdbcOperations -> <T> List<T> queryForList(String sql, Map<String, ?> paramMap, Class<T> elementType) 			throws DataAccessException_;1502974979;Query given SQL to create a prepared statement from SQL and a_list of arguments to bind to the query, expecting a result list._<p>The results will be mapped to a List (one entry for each row) of_result objects, each of them matching the specified element type._@param sql SQL query to execute_@param paramMap map of parameters to bind to the query_(leaving it to the PreparedStatement to guess the corresponding SQL type)_@param elementType the required type of element in the result list_(for example, {@code Integer.class})_@return a List of objects that match the specified element type_@throws org.springframework.dao.DataAccessException if the query fails_@see org.springframework.jdbc.core.JdbcTemplate#queryForList(String, Class)_@see org.springframework.jdbc.core.SingleColumnRowMapper;<T> List<T> queryForList(String sql, Map<String, ?> paramMap, Class<T> elementType)_			throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,expecting,a,result,list,p,the,results,will,be,mapped,to,a,list,one,entry,for,each,row,of,result,objects,each,of,them,matching,the,specified,element,type,param,sql,sql,query,to,execute,param,param,map,map,of,parameters,to,bind,to,the,query,leaving,it,to,the,prepared,statement,to,guess,the,corresponding,sql,type,param,element,type,the,required,type,of,element,in,the,result,list,for,example,code,integer,class,return,a,list,of,objects,that,match,the,specified,element,type,throws,org,springframework,dao,data,access,exception,if,the,query,fails,see,org,springframework,jdbc,core,jdbc,template,query,for,list,string,class,see,org,springframework,jdbc,core,single,column,row,mapper;t,list,t,query,for,list,string,sql,map,string,param,map,class,t,element,type,throws,data,access,exception
NamedParameterJdbcOperations -> <T> List<T> queryForList(String sql, Map<String, ?> paramMap, Class<T> elementType) 			throws DataAccessException_;1511712999;Query given SQL to create a prepared statement from SQL and a_list of arguments to bind to the query, expecting a result list._<p>The results will be mapped to a List (one entry for each row) of_result objects, each of them matching the specified element type._@param sql SQL query to execute_@param paramMap map of parameters to bind to the query_(leaving it to the PreparedStatement to guess the corresponding SQL type)_@param elementType the required type of element in the result list_(for example, {@code Integer.class})_@return a List of objects that match the specified element type_@throws org.springframework.dao.DataAccessException if the query fails_@see org.springframework.jdbc.core.JdbcTemplate#queryForList(String, Class)_@see org.springframework.jdbc.core.SingleColumnRowMapper;<T> List<T> queryForList(String sql, Map<String, ?> paramMap, Class<T> elementType)_			throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,expecting,a,result,list,p,the,results,will,be,mapped,to,a,list,one,entry,for,each,row,of,result,objects,each,of,them,matching,the,specified,element,type,param,sql,sql,query,to,execute,param,param,map,map,of,parameters,to,bind,to,the,query,leaving,it,to,the,prepared,statement,to,guess,the,corresponding,sql,type,param,element,type,the,required,type,of,element,in,the,result,list,for,example,code,integer,class,return,a,list,of,objects,that,match,the,specified,element,type,throws,org,springframework,dao,data,access,exception,if,the,query,fails,see,org,springframework,jdbc,core,jdbc,template,query,for,list,string,class,see,org,springframework,jdbc,core,single,column,row,mapper;t,list,t,query,for,list,string,sql,map,string,param,map,class,t,element,type,throws,data,access,exception
NamedParameterJdbcOperations -> <T> List<T> queryForList(String sql, Map<String, ?> paramMap, Class<T> elementType) 			throws DataAccessException_;1530174524;Query given SQL to create a prepared statement from SQL and a_list of arguments to bind to the query, expecting a result list._<p>The results will be mapped to a List (one entry for each row) of_result objects, each of them matching the specified element type._@param sql the SQL query to execute_@param paramMap map of parameters to bind to the query_(leaving it to the PreparedStatement to guess the corresponding SQL type)_@param elementType the required type of element in the result list_(for example, {@code Integer.class})_@return a List of objects that match the specified element type_@throws org.springframework.dao.DataAccessException if the query fails_@see org.springframework.jdbc.core.JdbcTemplate#queryForList(String, Class)_@see org.springframework.jdbc.core.SingleColumnRowMapper;<T> List<T> queryForList(String sql, Map<String, ?> paramMap, Class<T> elementType)_			throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,expecting,a,result,list,p,the,results,will,be,mapped,to,a,list,one,entry,for,each,row,of,result,objects,each,of,them,matching,the,specified,element,type,param,sql,the,sql,query,to,execute,param,param,map,map,of,parameters,to,bind,to,the,query,leaving,it,to,the,prepared,statement,to,guess,the,corresponding,sql,type,param,element,type,the,required,type,of,element,in,the,result,list,for,example,code,integer,class,return,a,list,of,objects,that,match,the,specified,element,type,throws,org,springframework,dao,data,access,exception,if,the,query,fails,see,org,springframework,jdbc,core,jdbc,template,query,for,list,string,class,see,org,springframework,jdbc,core,single,column,row,mapper;t,list,t,query,for,list,string,sql,map,string,param,map,class,t,element,type,throws,data,access,exception
NamedParameterJdbcOperations -> List<Map<String, Object>> queryForList(String sql, SqlParameterSource paramSource) throws DataAccessException_;1328020251;Query given SQL to create a prepared statement from SQL and a_list of arguments to bind to the query, expecting a result list._<p>The results will be mapped to a List (one entry for each row) of_Maps (one entry for each column, using the column name as the key)._Thus  Each element in the list will be of the form returned by this interface's_queryForMap() methods._@param sql SQL query to execute_@param paramSource container of arguments to bind to the query_@return a List that contains a Map per row_@throws org.springframework.dao.DataAccessException if the query fails_@see org.springframework.jdbc.core.JdbcTemplate#queryForList(String);List<Map<String, Object>> queryForList(String sql, SqlParameterSource paramSource) throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,expecting,a,result,list,p,the,results,will,be,mapped,to,a,list,one,entry,for,each,row,of,maps,one,entry,for,each,column,using,the,column,name,as,the,key,thus,each,element,in,the,list,will,be,of,the,form,returned,by,this,interface,s,query,for,map,methods,param,sql,sql,query,to,execute,param,param,source,container,of,arguments,to,bind,to,the,query,return,a,list,that,contains,a,map,per,row,throws,org,springframework,dao,data,access,exception,if,the,query,fails,see,org,springframework,jdbc,core,jdbc,template,query,for,list,string;list,map,string,object,query,for,list,string,sql,sql,parameter,source,param,source,throws,data,access,exception
NamedParameterJdbcOperations -> List<Map<String, Object>> queryForList(String sql, SqlParameterSource paramSource) throws DataAccessException_;1356735495;Query given SQL to create a prepared statement from SQL and a_list of arguments to bind to the query, expecting a result list._<p>The results will be mapped to a List (one entry for each row) of_Maps (one entry for each column, using the column name as the key)._Thus  Each element in the list will be of the form returned by this interface's_queryForMap() methods._@param sql SQL query to execute_@param paramSource container of arguments to bind to the query_@return a List that contains a Map per row_@throws org.springframework.dao.DataAccessException if the query fails_@see org.springframework.jdbc.core.JdbcTemplate#queryForList(String);List<Map<String, Object>> queryForList(String sql, SqlParameterSource paramSource) throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,expecting,a,result,list,p,the,results,will,be,mapped,to,a,list,one,entry,for,each,row,of,maps,one,entry,for,each,column,using,the,column,name,as,the,key,thus,each,element,in,the,list,will,be,of,the,form,returned,by,this,interface,s,query,for,map,methods,param,sql,sql,query,to,execute,param,param,source,container,of,arguments,to,bind,to,the,query,return,a,list,that,contains,a,map,per,row,throws,org,springframework,dao,data,access,exception,if,the,query,fails,see,org,springframework,jdbc,core,jdbc,template,query,for,list,string;list,map,string,object,query,for,list,string,sql,sql,parameter,source,param,source,throws,data,access,exception
NamedParameterJdbcOperations -> List<Map<String, Object>> queryForList(String sql, SqlParameterSource paramSource) throws DataAccessException_;1362408075;Query given SQL to create a prepared statement from SQL and a_list of arguments to bind to the query, expecting a result list._<p>The results will be mapped to a List (one entry for each row) of_Maps (one entry for each column, using the column name as the key)._Each element in the list will be of the form returned by this interface's_{@code queryForMap} methods._@param sql SQL query to execute_@param paramSource container of arguments to bind to the query_@return a List that contains a Map per row_@throws org.springframework.dao.DataAccessException if the query fails_@see org.springframework.jdbc.core.JdbcTemplate#queryForList(String);List<Map<String, Object>> queryForList(String sql, SqlParameterSource paramSource) throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,expecting,a,result,list,p,the,results,will,be,mapped,to,a,list,one,entry,for,each,row,of,maps,one,entry,for,each,column,using,the,column,name,as,the,key,each,element,in,the,list,will,be,of,the,form,returned,by,this,interface,s,code,query,for,map,methods,param,sql,sql,query,to,execute,param,param,source,container,of,arguments,to,bind,to,the,query,return,a,list,that,contains,a,map,per,row,throws,org,springframework,dao,data,access,exception,if,the,query,fails,see,org,springframework,jdbc,core,jdbc,template,query,for,list,string;list,map,string,object,query,for,list,string,sql,sql,parameter,source,param,source,throws,data,access,exception
NamedParameterJdbcOperations -> List<Map<String, Object>> queryForList(String sql, SqlParameterSource paramSource) throws DataAccessException_;1419966315;Query given SQL to create a prepared statement from SQL and a_list of arguments to bind to the query, expecting a result list._<p>The results will be mapped to a List (one entry for each row) of_Maps (one entry for each column, using the column name as the key)._Each element in the list will be of the form returned by this interface's_{@code queryForMap} methods._@param sql SQL query to execute_@param paramSource container of arguments to bind to the query_@return a List that contains a Map per row_@throws org.springframework.dao.DataAccessException if the query fails_@see org.springframework.jdbc.core.JdbcTemplate#queryForList(String);List<Map<String, Object>> queryForList(String sql, SqlParameterSource paramSource) throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,expecting,a,result,list,p,the,results,will,be,mapped,to,a,list,one,entry,for,each,row,of,maps,one,entry,for,each,column,using,the,column,name,as,the,key,each,element,in,the,list,will,be,of,the,form,returned,by,this,interface,s,code,query,for,map,methods,param,sql,sql,query,to,execute,param,param,source,container,of,arguments,to,bind,to,the,query,return,a,list,that,contains,a,map,per,row,throws,org,springframework,dao,data,access,exception,if,the,query,fails,see,org,springframework,jdbc,core,jdbc,template,query,for,list,string;list,map,string,object,query,for,list,string,sql,sql,parameter,source,param,source,throws,data,access,exception
NamedParameterJdbcOperations -> List<Map<String, Object>> queryForList(String sql, SqlParameterSource paramSource) throws DataAccessException_;1491113276;Query given SQL to create a prepared statement from SQL and a_list of arguments to bind to the query, expecting a result list._<p>The results will be mapped to a List (one entry for each row) of_Maps (one entry for each column, using the column name as the key)._Each element in the list will be of the form returned by this interface's_{@code queryForMap} methods._@param sql SQL query to execute_@param paramSource container of arguments to bind to the query_@return a List that contains a Map per row_@throws org.springframework.dao.DataAccessException if the query fails_@see org.springframework.jdbc.core.JdbcTemplate#queryForList(String);List<Map<String, Object>> queryForList(String sql, SqlParameterSource paramSource) throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,expecting,a,result,list,p,the,results,will,be,mapped,to,a,list,one,entry,for,each,row,of,maps,one,entry,for,each,column,using,the,column,name,as,the,key,each,element,in,the,list,will,be,of,the,form,returned,by,this,interface,s,code,query,for,map,methods,param,sql,sql,query,to,execute,param,param,source,container,of,arguments,to,bind,to,the,query,return,a,list,that,contains,a,map,per,row,throws,org,springframework,dao,data,access,exception,if,the,query,fails,see,org,springframework,jdbc,core,jdbc,template,query,for,list,string;list,map,string,object,query,for,list,string,sql,sql,parameter,source,param,source,throws,data,access,exception
NamedParameterJdbcOperations -> List<Map<String, Object>> queryForList(String sql, SqlParameterSource paramSource) throws DataAccessException_;1495868221;Query given SQL to create a prepared statement from SQL and a_list of arguments to bind to the query, expecting a result list._<p>The results will be mapped to a List (one entry for each row) of_Maps (one entry for each column, using the column name as the key)._Each element in the list will be of the form returned by this interface's_{@code queryForMap} methods._@param sql SQL query to execute_@param paramSource container of arguments to bind to the query_@return a List that contains a Map per row_@throws org.springframework.dao.DataAccessException if the query fails_@see org.springframework.jdbc.core.JdbcTemplate#queryForList(String);List<Map<String, Object>> queryForList(String sql, SqlParameterSource paramSource) throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,expecting,a,result,list,p,the,results,will,be,mapped,to,a,list,one,entry,for,each,row,of,maps,one,entry,for,each,column,using,the,column,name,as,the,key,each,element,in,the,list,will,be,of,the,form,returned,by,this,interface,s,code,query,for,map,methods,param,sql,sql,query,to,execute,param,param,source,container,of,arguments,to,bind,to,the,query,return,a,list,that,contains,a,map,per,row,throws,org,springframework,dao,data,access,exception,if,the,query,fails,see,org,springframework,jdbc,core,jdbc,template,query,for,list,string;list,map,string,object,query,for,list,string,sql,sql,parameter,source,param,source,throws,data,access,exception
NamedParameterJdbcOperations -> List<Map<String, Object>> queryForList(String sql, SqlParameterSource paramSource) throws DataAccessException_;1496837955;Query given SQL to create a prepared statement from SQL and a_list of arguments to bind to the query, expecting a result list._<p>The results will be mapped to a List (one entry for each row) of_Maps (one entry for each column, using the column name as the key)._Each element in the list will be of the form returned by this interface's_{@code queryForMap} methods._@param sql SQL query to execute_@param paramSource container of arguments to bind to the query_@return a List that contains a Map per row_@throws org.springframework.dao.DataAccessException if the query fails_@see org.springframework.jdbc.core.JdbcTemplate#queryForList(String);List<Map<String, Object>> queryForList(String sql, SqlParameterSource paramSource) throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,expecting,a,result,list,p,the,results,will,be,mapped,to,a,list,one,entry,for,each,row,of,maps,one,entry,for,each,column,using,the,column,name,as,the,key,each,element,in,the,list,will,be,of,the,form,returned,by,this,interface,s,code,query,for,map,methods,param,sql,sql,query,to,execute,param,param,source,container,of,arguments,to,bind,to,the,query,return,a,list,that,contains,a,map,per,row,throws,org,springframework,dao,data,access,exception,if,the,query,fails,see,org,springframework,jdbc,core,jdbc,template,query,for,list,string;list,map,string,object,query,for,list,string,sql,sql,parameter,source,param,source,throws,data,access,exception
NamedParameterJdbcOperations -> List<Map<String, Object>> queryForList(String sql, SqlParameterSource paramSource) throws DataAccessException_;1502974979;Query given SQL to create a prepared statement from SQL and a_list of arguments to bind to the query, expecting a result list._<p>The results will be mapped to a List (one entry for each row) of_Maps (one entry for each column, using the column name as the key)._Each element in the list will be of the form returned by this interface's_{@code queryForMap} methods._@param sql SQL query to execute_@param paramSource container of arguments to bind to the query_@return a List that contains a Map per row_@throws org.springframework.dao.DataAccessException if the query fails_@see org.springframework.jdbc.core.JdbcTemplate#queryForList(String);List<Map<String, Object>> queryForList(String sql, SqlParameterSource paramSource) throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,expecting,a,result,list,p,the,results,will,be,mapped,to,a,list,one,entry,for,each,row,of,maps,one,entry,for,each,column,using,the,column,name,as,the,key,each,element,in,the,list,will,be,of,the,form,returned,by,this,interface,s,code,query,for,map,methods,param,sql,sql,query,to,execute,param,param,source,container,of,arguments,to,bind,to,the,query,return,a,list,that,contains,a,map,per,row,throws,org,springframework,dao,data,access,exception,if,the,query,fails,see,org,springframework,jdbc,core,jdbc,template,query,for,list,string;list,map,string,object,query,for,list,string,sql,sql,parameter,source,param,source,throws,data,access,exception
NamedParameterJdbcOperations -> List<Map<String, Object>> queryForList(String sql, SqlParameterSource paramSource) throws DataAccessException_;1511712999;Query given SQL to create a prepared statement from SQL and a_list of arguments to bind to the query, expecting a result list._<p>The results will be mapped to a List (one entry for each row) of_Maps (one entry for each column, using the column name as the key)._Each element in the list will be of the form returned by this interface's_{@code queryForMap} methods._@param sql SQL query to execute_@param paramSource container of arguments to bind to the query_@return a List that contains a Map per row_@throws org.springframework.dao.DataAccessException if the query fails_@see org.springframework.jdbc.core.JdbcTemplate#queryForList(String);List<Map<String, Object>> queryForList(String sql, SqlParameterSource paramSource) throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,expecting,a,result,list,p,the,results,will,be,mapped,to,a,list,one,entry,for,each,row,of,maps,one,entry,for,each,column,using,the,column,name,as,the,key,each,element,in,the,list,will,be,of,the,form,returned,by,this,interface,s,code,query,for,map,methods,param,sql,sql,query,to,execute,param,param,source,container,of,arguments,to,bind,to,the,query,return,a,list,that,contains,a,map,per,row,throws,org,springframework,dao,data,access,exception,if,the,query,fails,see,org,springframework,jdbc,core,jdbc,template,query,for,list,string;list,map,string,object,query,for,list,string,sql,sql,parameter,source,param,source,throws,data,access,exception
NamedParameterJdbcOperations -> List<Map<String, Object>> queryForList(String sql, SqlParameterSource paramSource) throws DataAccessException_;1530174524;Query given SQL to create a prepared statement from SQL and a_list of arguments to bind to the query, expecting a result list._<p>The results will be mapped to a List (one entry for each row) of_Maps (one entry for each column, using the column name as the key)._Each element in the list will be of the form returned by this interface's_{@code queryForMap} methods._@param sql the SQL query to execute_@param paramSource container of arguments to bind to the query_@return a List that contains a Map per row_@throws org.springframework.dao.DataAccessException if the query fails_@see org.springframework.jdbc.core.JdbcTemplate#queryForList(String);List<Map<String, Object>> queryForList(String sql, SqlParameterSource paramSource) throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,expecting,a,result,list,p,the,results,will,be,mapped,to,a,list,one,entry,for,each,row,of,maps,one,entry,for,each,column,using,the,column,name,as,the,key,each,element,in,the,list,will,be,of,the,form,returned,by,this,interface,s,code,query,for,map,methods,param,sql,the,sql,query,to,execute,param,param,source,container,of,arguments,to,bind,to,the,query,return,a,list,that,contains,a,map,per,row,throws,org,springframework,dao,data,access,exception,if,the,query,fails,see,org,springframework,jdbc,core,jdbc,template,query,for,list,string;list,map,string,object,query,for,list,string,sql,sql,parameter,source,param,source,throws,data,access,exception
NamedParameterJdbcOperations -> <T> T query(String sql, ResultSetExtractor<T> rse) throws DataAccessException_;1362408075;Query given SQL to create a prepared statement from SQL,_reading the ResultSet with a ResultSetExtractor._<p>Note: In contrast to the JdbcOperations method with the same signature,_this query variant always uses a PreparedStatement. It is effectively_equivalent to a query call with an empty parameter Map._@param sql SQL query to execute_@param rse object that will extract results_@return an arbitrary result object, as returned by the ResultSetExtractor_@throws org.springframework.dao.DataAccessException if the query fails;<T> T query(String sql, ResultSetExtractor<T> rse) throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,reading,the,result,set,with,a,result,set,extractor,p,note,in,contrast,to,the,jdbc,operations,method,with,the,same,signature,this,query,variant,always,uses,a,prepared,statement,it,is,effectively,equivalent,to,a,query,call,with,an,empty,parameter,map,param,sql,sql,query,to,execute,param,rse,object,that,will,extract,results,return,an,arbitrary,result,object,as,returned,by,the,result,set,extractor,throws,org,springframework,dao,data,access,exception,if,the,query,fails;t,t,query,string,sql,result,set,extractor,t,rse,throws,data,access,exception
NamedParameterJdbcOperations -> <T> T query(String sql, ResultSetExtractor<T> rse) throws DataAccessException_;1419966315;Query given SQL to create a prepared statement from SQL,_reading the ResultSet with a ResultSetExtractor._<p>Note: In contrast to the JdbcOperations method with the same signature,_this query variant always uses a PreparedStatement. It is effectively_equivalent to a query call with an empty parameter Map._@param sql SQL query to execute_@param rse object that will extract results_@return an arbitrary result object, as returned by the ResultSetExtractor_@throws org.springframework.dao.DataAccessException if the query fails;<T> T query(String sql, ResultSetExtractor<T> rse) throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,reading,the,result,set,with,a,result,set,extractor,p,note,in,contrast,to,the,jdbc,operations,method,with,the,same,signature,this,query,variant,always,uses,a,prepared,statement,it,is,effectively,equivalent,to,a,query,call,with,an,empty,parameter,map,param,sql,sql,query,to,execute,param,rse,object,that,will,extract,results,return,an,arbitrary,result,object,as,returned,by,the,result,set,extractor,throws,org,springframework,dao,data,access,exception,if,the,query,fails;t,t,query,string,sql,result,set,extractor,t,rse,throws,data,access,exception
NamedParameterJdbcOperations -> <T> T query(String sql, ResultSetExtractor<T> rse) throws DataAccessException_;1491113276;Query given SQL to create a prepared statement from SQL,_reading the ResultSet with a ResultSetExtractor._<p>Note: In contrast to the JdbcOperations method with the same signature,_this query variant always uses a PreparedStatement. It is effectively_equivalent to a query call with an empty parameter Map._@param sql SQL query to execute_@param rse object that will extract results_@return an arbitrary result object, as returned by the ResultSetExtractor_@throws org.springframework.dao.DataAccessException if the query fails;<T> T query(String sql, ResultSetExtractor<T> rse) throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,reading,the,result,set,with,a,result,set,extractor,p,note,in,contrast,to,the,jdbc,operations,method,with,the,same,signature,this,query,variant,always,uses,a,prepared,statement,it,is,effectively,equivalent,to,a,query,call,with,an,empty,parameter,map,param,sql,sql,query,to,execute,param,rse,object,that,will,extract,results,return,an,arbitrary,result,object,as,returned,by,the,result,set,extractor,throws,org,springframework,dao,data,access,exception,if,the,query,fails;t,t,query,string,sql,result,set,extractor,t,rse,throws,data,access,exception
NamedParameterJdbcOperations -> <T> T query(String sql, ResultSetExtractor<T> rse) throws DataAccessException_;1495868221;Query given SQL to create a prepared statement from SQL,_reading the ResultSet with a ResultSetExtractor._<p>Note: In contrast to the JdbcOperations method with the same signature,_this query variant always uses a PreparedStatement. It is effectively_equivalent to a query call with an empty parameter Map._@param sql SQL query to execute_@param rse object that will extract results_@return an arbitrary result object, as returned by the ResultSetExtractor_@throws org.springframework.dao.DataAccessException if the query fails;<T> T query(String sql, ResultSetExtractor<T> rse) throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,reading,the,result,set,with,a,result,set,extractor,p,note,in,contrast,to,the,jdbc,operations,method,with,the,same,signature,this,query,variant,always,uses,a,prepared,statement,it,is,effectively,equivalent,to,a,query,call,with,an,empty,parameter,map,param,sql,sql,query,to,execute,param,rse,object,that,will,extract,results,return,an,arbitrary,result,object,as,returned,by,the,result,set,extractor,throws,org,springframework,dao,data,access,exception,if,the,query,fails;t,t,query,string,sql,result,set,extractor,t,rse,throws,data,access,exception
NamedParameterJdbcOperations -> <T> T query(String sql, Map<String, ?> paramMap, ResultSetExtractor<T> rse) 			throws DataAccessException_;1328020251;Query given SQL to create a prepared statement from SQL and a list_of arguments to bind to the query, reading the ResultSet with a_ResultSetExtractor._@param sql SQL query to execute_@param paramMap map of parameters to bind to the query_(leaving it to the PreparedStatement to guess the corresponding SQL type)_@param rse object that will extract results_@return an arbitrary result object, as returned by the ResultSetExtractor_@throws org.springframework.dao.DataAccessException if the query fails;<T> T query(String sql, Map<String, ?> paramMap, ResultSetExtractor<T> rse)_			throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,reading,the,result,set,with,a,result,set,extractor,param,sql,sql,query,to,execute,param,param,map,map,of,parameters,to,bind,to,the,query,leaving,it,to,the,prepared,statement,to,guess,the,corresponding,sql,type,param,rse,object,that,will,extract,results,return,an,arbitrary,result,object,as,returned,by,the,result,set,extractor,throws,org,springframework,dao,data,access,exception,if,the,query,fails;t,t,query,string,sql,map,string,param,map,result,set,extractor,t,rse,throws,data,access,exception
NamedParameterJdbcOperations -> <T> T query(String sql, Map<String, ?> paramMap, ResultSetExtractor<T> rse) 			throws DataAccessException_;1356735495;Query given SQL to create a prepared statement from SQL and a list_of arguments to bind to the query, reading the ResultSet with a_ResultSetExtractor._@param sql SQL query to execute_@param paramMap map of parameters to bind to the query_(leaving it to the PreparedStatement to guess the corresponding SQL type)_@param rse object that will extract results_@return an arbitrary result object, as returned by the ResultSetExtractor_@throws org.springframework.dao.DataAccessException if the query fails;<T> T query(String sql, Map<String, ?> paramMap, ResultSetExtractor<T> rse)_			throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,reading,the,result,set,with,a,result,set,extractor,param,sql,sql,query,to,execute,param,param,map,map,of,parameters,to,bind,to,the,query,leaving,it,to,the,prepared,statement,to,guess,the,corresponding,sql,type,param,rse,object,that,will,extract,results,return,an,arbitrary,result,object,as,returned,by,the,result,set,extractor,throws,org,springframework,dao,data,access,exception,if,the,query,fails;t,t,query,string,sql,map,string,param,map,result,set,extractor,t,rse,throws,data,access,exception
NamedParameterJdbcOperations -> <T> T query(String sql, Map<String, ?> paramMap, ResultSetExtractor<T> rse) 			throws DataAccessException_;1362408075;Query given SQL to create a prepared statement from SQL and a list_of arguments to bind to the query, reading the ResultSet with a_ResultSetExtractor._@param sql SQL query to execute_@param paramMap map of parameters to bind to the query_(leaving it to the PreparedStatement to guess the corresponding SQL type)_@param rse object that will extract results_@return an arbitrary result object, as returned by the ResultSetExtractor_@throws org.springframework.dao.DataAccessException if the query fails;<T> T query(String sql, Map<String, ?> paramMap, ResultSetExtractor<T> rse)_			throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,reading,the,result,set,with,a,result,set,extractor,param,sql,sql,query,to,execute,param,param,map,map,of,parameters,to,bind,to,the,query,leaving,it,to,the,prepared,statement,to,guess,the,corresponding,sql,type,param,rse,object,that,will,extract,results,return,an,arbitrary,result,object,as,returned,by,the,result,set,extractor,throws,org,springframework,dao,data,access,exception,if,the,query,fails;t,t,query,string,sql,map,string,param,map,result,set,extractor,t,rse,throws,data,access,exception
NamedParameterJdbcOperations -> <T> T query(String sql, Map<String, ?> paramMap, ResultSetExtractor<T> rse) 			throws DataAccessException_;1419966315;Query given SQL to create a prepared statement from SQL and a list_of arguments to bind to the query, reading the ResultSet with a_ResultSetExtractor._@param sql SQL query to execute_@param paramMap map of parameters to bind to the query_(leaving it to the PreparedStatement to guess the corresponding SQL type)_@param rse object that will extract results_@return an arbitrary result object, as returned by the ResultSetExtractor_@throws org.springframework.dao.DataAccessException if the query fails;<T> T query(String sql, Map<String, ?> paramMap, ResultSetExtractor<T> rse)_			throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,reading,the,result,set,with,a,result,set,extractor,param,sql,sql,query,to,execute,param,param,map,map,of,parameters,to,bind,to,the,query,leaving,it,to,the,prepared,statement,to,guess,the,corresponding,sql,type,param,rse,object,that,will,extract,results,return,an,arbitrary,result,object,as,returned,by,the,result,set,extractor,throws,org,springframework,dao,data,access,exception,if,the,query,fails;t,t,query,string,sql,map,string,param,map,result,set,extractor,t,rse,throws,data,access,exception
NamedParameterJdbcOperations -> <T> T query(String sql, Map<String, ?> paramMap, ResultSetExtractor<T> rse) 			throws DataAccessException_;1491113276;Query given SQL to create a prepared statement from SQL and a list_of arguments to bind to the query, reading the ResultSet with a_ResultSetExtractor._@param sql SQL query to execute_@param paramMap map of parameters to bind to the query_(leaving it to the PreparedStatement to guess the corresponding SQL type)_@param rse object that will extract results_@return an arbitrary result object, as returned by the ResultSetExtractor_@throws org.springframework.dao.DataAccessException if the query fails;<T> T query(String sql, Map<String, ?> paramMap, ResultSetExtractor<T> rse)_			throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,reading,the,result,set,with,a,result,set,extractor,param,sql,sql,query,to,execute,param,param,map,map,of,parameters,to,bind,to,the,query,leaving,it,to,the,prepared,statement,to,guess,the,corresponding,sql,type,param,rse,object,that,will,extract,results,return,an,arbitrary,result,object,as,returned,by,the,result,set,extractor,throws,org,springframework,dao,data,access,exception,if,the,query,fails;t,t,query,string,sql,map,string,param,map,result,set,extractor,t,rse,throws,data,access,exception
NamedParameterJdbcOperations -> <T> T query(String sql, Map<String, ?> paramMap, ResultSetExtractor<T> rse) 			throws DataAccessException_;1495868221;Query given SQL to create a prepared statement from SQL and a list_of arguments to bind to the query, reading the ResultSet with a_ResultSetExtractor._@param sql SQL query to execute_@param paramMap map of parameters to bind to the query_(leaving it to the PreparedStatement to guess the corresponding SQL type)_@param rse object that will extract results_@return an arbitrary result object, as returned by the ResultSetExtractor_@throws org.springframework.dao.DataAccessException if the query fails;<T> T query(String sql, Map<String, ?> paramMap, ResultSetExtractor<T> rse)_			throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,reading,the,result,set,with,a,result,set,extractor,param,sql,sql,query,to,execute,param,param,map,map,of,parameters,to,bind,to,the,query,leaving,it,to,the,prepared,statement,to,guess,the,corresponding,sql,type,param,rse,object,that,will,extract,results,return,an,arbitrary,result,object,as,returned,by,the,result,set,extractor,throws,org,springframework,dao,data,access,exception,if,the,query,fails;t,t,query,string,sql,map,string,param,map,result,set,extractor,t,rse,throws,data,access,exception
NamedParameterJdbcOperations -> @Nullable 	<T> T execute(String sql, Map<String, ?> paramMap, PreparedStatementCallback<T> action) 			throws DataAccessException_;1495868221;Execute a JDBC data access operation, implemented as callback action_working on a JDBC PreparedStatement. This allows for implementing arbitrary_data access operations on a single Statement, within Spring's managed_JDBC environment: that is, participating in Spring-managed transactions_and converting JDBC SQLExceptions into Spring's DataAccessException hierarchy._<p>The callback action can return a result object, for example a_domain object or a collection of domain objects._@param sql SQL to execute_@param paramMap map of parameters to bind to the query_(leaving it to the PreparedStatement to guess the corresponding SQL type)_@param action callback object that specifies the action_@return a result object returned by the action, or {@code null}_@throws DataAccessException if there is any problem;@Nullable_	<T> T execute(String sql, Map<String, ?> paramMap, PreparedStatementCallback<T> action)_			throws DataAccessException_;execute,a,jdbc,data,access,operation,implemented,as,callback,action,working,on,a,jdbc,prepared,statement,this,allows,for,implementing,arbitrary,data,access,operations,on,a,single,statement,within,spring,s,managed,jdbc,environment,that,is,participating,in,spring,managed,transactions,and,converting,jdbc,sqlexceptions,into,spring,s,data,access,exception,hierarchy,p,the,callback,action,can,return,a,result,object,for,example,a,domain,object,or,a,collection,of,domain,objects,param,sql,sql,to,execute,param,param,map,map,of,parameters,to,bind,to,the,query,leaving,it,to,the,prepared,statement,to,guess,the,corresponding,sql,type,param,action,callback,object,that,specifies,the,action,return,a,result,object,returned,by,the,action,or,code,null,throws,data,access,exception,if,there,is,any,problem;nullable,t,t,execute,string,sql,map,string,param,map,prepared,statement,callback,t,action,throws,data,access,exception
NamedParameterJdbcOperations -> @Nullable 	<T> T execute(String sql, Map<String, ?> paramMap, PreparedStatementCallback<T> action) 			throws DataAccessException_;1496837955;Execute a JDBC data access operation, implemented as callback action_working on a JDBC PreparedStatement. This allows for implementing arbitrary_data access operations on a single Statement, within Spring's managed_JDBC environment: that is, participating in Spring-managed transactions_and converting JDBC SQLExceptions into Spring's DataAccessException hierarchy._<p>The callback action can return a result object, for example a_domain object or a collection of domain objects._@param sql SQL to execute_@param paramMap map of parameters to bind to the query_(leaving it to the PreparedStatement to guess the corresponding SQL type)_@param action callback object that specifies the action_@return a result object returned by the action, or {@code null}_@throws DataAccessException if there is any problem;@Nullable_	<T> T execute(String sql, Map<String, ?> paramMap, PreparedStatementCallback<T> action)_			throws DataAccessException_;execute,a,jdbc,data,access,operation,implemented,as,callback,action,working,on,a,jdbc,prepared,statement,this,allows,for,implementing,arbitrary,data,access,operations,on,a,single,statement,within,spring,s,managed,jdbc,environment,that,is,participating,in,spring,managed,transactions,and,converting,jdbc,sqlexceptions,into,spring,s,data,access,exception,hierarchy,p,the,callback,action,can,return,a,result,object,for,example,a,domain,object,or,a,collection,of,domain,objects,param,sql,sql,to,execute,param,param,map,map,of,parameters,to,bind,to,the,query,leaving,it,to,the,prepared,statement,to,guess,the,corresponding,sql,type,param,action,callback,object,that,specifies,the,action,return,a,result,object,returned,by,the,action,or,code,null,throws,data,access,exception,if,there,is,any,problem;nullable,t,t,execute,string,sql,map,string,param,map,prepared,statement,callback,t,action,throws,data,access,exception
NamedParameterJdbcOperations -> @Nullable 	<T> T execute(String sql, Map<String, ?> paramMap, PreparedStatementCallback<T> action) 			throws DataAccessException_;1502974979;Execute a JDBC data access operation, implemented as callback action_working on a JDBC PreparedStatement. This allows for implementing arbitrary_data access operations on a single Statement, within Spring's managed_JDBC environment: that is, participating in Spring-managed transactions_and converting JDBC SQLExceptions into Spring's DataAccessException hierarchy._<p>The callback action can return a result object, for example a_domain object or a collection of domain objects._@param sql SQL to execute_@param paramMap map of parameters to bind to the query_(leaving it to the PreparedStatement to guess the corresponding SQL type)_@param action callback object that specifies the action_@return a result object returned by the action, or {@code null}_@throws DataAccessException if there is any problem;@Nullable_	<T> T execute(String sql, Map<String, ?> paramMap, PreparedStatementCallback<T> action)_			throws DataAccessException_;execute,a,jdbc,data,access,operation,implemented,as,callback,action,working,on,a,jdbc,prepared,statement,this,allows,for,implementing,arbitrary,data,access,operations,on,a,single,statement,within,spring,s,managed,jdbc,environment,that,is,participating,in,spring,managed,transactions,and,converting,jdbc,sqlexceptions,into,spring,s,data,access,exception,hierarchy,p,the,callback,action,can,return,a,result,object,for,example,a,domain,object,or,a,collection,of,domain,objects,param,sql,sql,to,execute,param,param,map,map,of,parameters,to,bind,to,the,query,leaving,it,to,the,prepared,statement,to,guess,the,corresponding,sql,type,param,action,callback,object,that,specifies,the,action,return,a,result,object,returned,by,the,action,or,code,null,throws,data,access,exception,if,there,is,any,problem;nullable,t,t,execute,string,sql,map,string,param,map,prepared,statement,callback,t,action,throws,data,access,exception
NamedParameterJdbcOperations -> @Nullable 	<T> T execute(String sql, Map<String, ?> paramMap, PreparedStatementCallback<T> action) 			throws DataAccessException_;1511712999;Execute a JDBC data access operation, implemented as callback action_working on a JDBC PreparedStatement. This allows for implementing arbitrary_data access operations on a single Statement, within Spring's managed_JDBC environment: that is, participating in Spring-managed transactions_and converting JDBC SQLExceptions into Spring's DataAccessException hierarchy._<p>The callback action can return a result object, for example a_domain object or a collection of domain objects._@param sql SQL to execute_@param paramMap map of parameters to bind to the query_(leaving it to the PreparedStatement to guess the corresponding SQL type)_@param action callback object that specifies the action_@return a result object returned by the action, or {@code null}_@throws DataAccessException if there is any problem;@Nullable_	<T> T execute(String sql, Map<String, ?> paramMap, PreparedStatementCallback<T> action)_			throws DataAccessException_;execute,a,jdbc,data,access,operation,implemented,as,callback,action,working,on,a,jdbc,prepared,statement,this,allows,for,implementing,arbitrary,data,access,operations,on,a,single,statement,within,spring,s,managed,jdbc,environment,that,is,participating,in,spring,managed,transactions,and,converting,jdbc,sqlexceptions,into,spring,s,data,access,exception,hierarchy,p,the,callback,action,can,return,a,result,object,for,example,a,domain,object,or,a,collection,of,domain,objects,param,sql,sql,to,execute,param,param,map,map,of,parameters,to,bind,to,the,query,leaving,it,to,the,prepared,statement,to,guess,the,corresponding,sql,type,param,action,callback,object,that,specifies,the,action,return,a,result,object,returned,by,the,action,or,code,null,throws,data,access,exception,if,there,is,any,problem;nullable,t,t,execute,string,sql,map,string,param,map,prepared,statement,callback,t,action,throws,data,access,exception
NamedParameterJdbcOperations -> @Nullable 	<T> T execute(String sql, Map<String, ?> paramMap, PreparedStatementCallback<T> action) 			throws DataAccessException_;1530174524;Execute a JDBC data access operation, implemented as callback action_working on a JDBC PreparedStatement. This allows for implementing arbitrary_data access operations on a single Statement, within Spring's managed_JDBC environment: that is, participating in Spring-managed transactions_and converting JDBC SQLExceptions into Spring's DataAccessException hierarchy._<p>The callback action can return a result object, for example a_domain object or a collection of domain objects._@param sql the SQL to execute_@param paramMap map of parameters to bind to the query_(leaving it to the PreparedStatement to guess the corresponding SQL type)_@param action callback object that specifies the action_@return a result object returned by the action, or {@code null}_@throws DataAccessException if there is any problem;@Nullable_	<T> T execute(String sql, Map<String, ?> paramMap, PreparedStatementCallback<T> action)_			throws DataAccessException_;execute,a,jdbc,data,access,operation,implemented,as,callback,action,working,on,a,jdbc,prepared,statement,this,allows,for,implementing,arbitrary,data,access,operations,on,a,single,statement,within,spring,s,managed,jdbc,environment,that,is,participating,in,spring,managed,transactions,and,converting,jdbc,sqlexceptions,into,spring,s,data,access,exception,hierarchy,p,the,callback,action,can,return,a,result,object,for,example,a,domain,object,or,a,collection,of,domain,objects,param,sql,the,sql,to,execute,param,param,map,map,of,parameters,to,bind,to,the,query,leaving,it,to,the,prepared,statement,to,guess,the,corresponding,sql,type,param,action,callback,object,that,specifies,the,action,return,a,result,object,returned,by,the,action,or,code,null,throws,data,access,exception,if,there,is,any,problem;nullable,t,t,execute,string,sql,map,string,param,map,prepared,statement,callback,t,action,throws,data,access,exception
NamedParameterJdbcOperations -> <T> T execute(String sql, Map<String, ?> paramMap, PreparedStatementCallback<T> action) 			throws DataAccessException_;1328020251;Execute a JDBC data access operation, implemented as callback action_working on a JDBC PreparedStatement. This allows for implementing arbitrary_data access operations on a single Statement, within Spring's managed_JDBC environment: that is, participating in Spring-managed transactions_and converting JDBC SQLExceptions into Spring's DataAccessException hierarchy._<p>The callback action can return a result object, for example a_domain object or a collection of domain objects._@param sql SQL to execute_@param paramMap map of parameters to bind to the query_(leaving it to the PreparedStatement to guess the corresponding SQL type)_@param action callback object that specifies the action_@return a result object returned by the action, or <code>null</code>_@throws DataAccessException if there is any problem;<T> T execute(String sql, Map<String, ?> paramMap, PreparedStatementCallback<T> action)_			throws DataAccessException_;execute,a,jdbc,data,access,operation,implemented,as,callback,action,working,on,a,jdbc,prepared,statement,this,allows,for,implementing,arbitrary,data,access,operations,on,a,single,statement,within,spring,s,managed,jdbc,environment,that,is,participating,in,spring,managed,transactions,and,converting,jdbc,sqlexceptions,into,spring,s,data,access,exception,hierarchy,p,the,callback,action,can,return,a,result,object,for,example,a,domain,object,or,a,collection,of,domain,objects,param,sql,sql,to,execute,param,param,map,map,of,parameters,to,bind,to,the,query,leaving,it,to,the,prepared,statement,to,guess,the,corresponding,sql,type,param,action,callback,object,that,specifies,the,action,return,a,result,object,returned,by,the,action,or,code,null,code,throws,data,access,exception,if,there,is,any,problem;t,t,execute,string,sql,map,string,param,map,prepared,statement,callback,t,action,throws,data,access,exception
NamedParameterJdbcOperations -> <T> T execute(String sql, Map<String, ?> paramMap, PreparedStatementCallback<T> action) 			throws DataAccessException_;1356735495;Execute a JDBC data access operation, implemented as callback action_working on a JDBC PreparedStatement. This allows for implementing arbitrary_data access operations on a single Statement, within Spring's managed_JDBC environment: that is, participating in Spring-managed transactions_and converting JDBC SQLExceptions into Spring's DataAccessException hierarchy._<p>The callback action can return a result object, for example a_domain object or a collection of domain objects._@param sql SQL to execute_@param paramMap map of parameters to bind to the query_(leaving it to the PreparedStatement to guess the corresponding SQL type)_@param action callback object that specifies the action_@return a result object returned by the action, or {@code null}_@throws DataAccessException if there is any problem;<T> T execute(String sql, Map<String, ?> paramMap, PreparedStatementCallback<T> action)_			throws DataAccessException_;execute,a,jdbc,data,access,operation,implemented,as,callback,action,working,on,a,jdbc,prepared,statement,this,allows,for,implementing,arbitrary,data,access,operations,on,a,single,statement,within,spring,s,managed,jdbc,environment,that,is,participating,in,spring,managed,transactions,and,converting,jdbc,sqlexceptions,into,spring,s,data,access,exception,hierarchy,p,the,callback,action,can,return,a,result,object,for,example,a,domain,object,or,a,collection,of,domain,objects,param,sql,sql,to,execute,param,param,map,map,of,parameters,to,bind,to,the,query,leaving,it,to,the,prepared,statement,to,guess,the,corresponding,sql,type,param,action,callback,object,that,specifies,the,action,return,a,result,object,returned,by,the,action,or,code,null,throws,data,access,exception,if,there,is,any,problem;t,t,execute,string,sql,map,string,param,map,prepared,statement,callback,t,action,throws,data,access,exception
NamedParameterJdbcOperations -> <T> T execute(String sql, Map<String, ?> paramMap, PreparedStatementCallback<T> action) 			throws DataAccessException_;1362408075;Execute a JDBC data access operation, implemented as callback action_working on a JDBC PreparedStatement. This allows for implementing arbitrary_data access operations on a single Statement, within Spring's managed_JDBC environment: that is, participating in Spring-managed transactions_and converting JDBC SQLExceptions into Spring's DataAccessException hierarchy._<p>The callback action can return a result object, for example a_domain object or a collection of domain objects._@param sql SQL to execute_@param paramMap map of parameters to bind to the query_(leaving it to the PreparedStatement to guess the corresponding SQL type)_@param action callback object that specifies the action_@return a result object returned by the action, or {@code null}_@throws DataAccessException if there is any problem;<T> T execute(String sql, Map<String, ?> paramMap, PreparedStatementCallback<T> action)_			throws DataAccessException_;execute,a,jdbc,data,access,operation,implemented,as,callback,action,working,on,a,jdbc,prepared,statement,this,allows,for,implementing,arbitrary,data,access,operations,on,a,single,statement,within,spring,s,managed,jdbc,environment,that,is,participating,in,spring,managed,transactions,and,converting,jdbc,sqlexceptions,into,spring,s,data,access,exception,hierarchy,p,the,callback,action,can,return,a,result,object,for,example,a,domain,object,or,a,collection,of,domain,objects,param,sql,sql,to,execute,param,param,map,map,of,parameters,to,bind,to,the,query,leaving,it,to,the,prepared,statement,to,guess,the,corresponding,sql,type,param,action,callback,object,that,specifies,the,action,return,a,result,object,returned,by,the,action,or,code,null,throws,data,access,exception,if,there,is,any,problem;t,t,execute,string,sql,map,string,param,map,prepared,statement,callback,t,action,throws,data,access,exception
NamedParameterJdbcOperations -> <T> T execute(String sql, Map<String, ?> paramMap, PreparedStatementCallback<T> action) 			throws DataAccessException_;1419966315;Execute a JDBC data access operation, implemented as callback action_working on a JDBC PreparedStatement. This allows for implementing arbitrary_data access operations on a single Statement, within Spring's managed_JDBC environment: that is, participating in Spring-managed transactions_and converting JDBC SQLExceptions into Spring's DataAccessException hierarchy._<p>The callback action can return a result object, for example a_domain object or a collection of domain objects._@param sql SQL to execute_@param paramMap map of parameters to bind to the query_(leaving it to the PreparedStatement to guess the corresponding SQL type)_@param action callback object that specifies the action_@return a result object returned by the action, or {@code null}_@throws DataAccessException if there is any problem;<T> T execute(String sql, Map<String, ?> paramMap, PreparedStatementCallback<T> action)_			throws DataAccessException_;execute,a,jdbc,data,access,operation,implemented,as,callback,action,working,on,a,jdbc,prepared,statement,this,allows,for,implementing,arbitrary,data,access,operations,on,a,single,statement,within,spring,s,managed,jdbc,environment,that,is,participating,in,spring,managed,transactions,and,converting,jdbc,sqlexceptions,into,spring,s,data,access,exception,hierarchy,p,the,callback,action,can,return,a,result,object,for,example,a,domain,object,or,a,collection,of,domain,objects,param,sql,sql,to,execute,param,param,map,map,of,parameters,to,bind,to,the,query,leaving,it,to,the,prepared,statement,to,guess,the,corresponding,sql,type,param,action,callback,object,that,specifies,the,action,return,a,result,object,returned,by,the,action,or,code,null,throws,data,access,exception,if,there,is,any,problem;t,t,execute,string,sql,map,string,param,map,prepared,statement,callback,t,action,throws,data,access,exception
NamedParameterJdbcOperations -> <T> T execute(String sql, Map<String, ?> paramMap, PreparedStatementCallback<T> action) 			throws DataAccessException_;1491113276;Execute a JDBC data access operation, implemented as callback action_working on a JDBC PreparedStatement. This allows for implementing arbitrary_data access operations on a single Statement, within Spring's managed_JDBC environment: that is, participating in Spring-managed transactions_and converting JDBC SQLExceptions into Spring's DataAccessException hierarchy._<p>The callback action can return a result object, for example a_domain object or a collection of domain objects._@param sql SQL to execute_@param paramMap map of parameters to bind to the query_(leaving it to the PreparedStatement to guess the corresponding SQL type)_@param action callback object that specifies the action_@return a result object returned by the action, or {@code null}_@throws DataAccessException if there is any problem;<T> T execute(String sql, Map<String, ?> paramMap, PreparedStatementCallback<T> action)_			throws DataAccessException_;execute,a,jdbc,data,access,operation,implemented,as,callback,action,working,on,a,jdbc,prepared,statement,this,allows,for,implementing,arbitrary,data,access,operations,on,a,single,statement,within,spring,s,managed,jdbc,environment,that,is,participating,in,spring,managed,transactions,and,converting,jdbc,sqlexceptions,into,spring,s,data,access,exception,hierarchy,p,the,callback,action,can,return,a,result,object,for,example,a,domain,object,or,a,collection,of,domain,objects,param,sql,sql,to,execute,param,param,map,map,of,parameters,to,bind,to,the,query,leaving,it,to,the,prepared,statement,to,guess,the,corresponding,sql,type,param,action,callback,object,that,specifies,the,action,return,a,result,object,returned,by,the,action,or,code,null,throws,data,access,exception,if,there,is,any,problem;t,t,execute,string,sql,map,string,param,map,prepared,statement,callback,t,action,throws,data,access,exception
NamedParameterJdbcOperations -> void query(String sql, Map<String, ?> paramMap, RowCallbackHandler rch) throws DataAccessException_;1328020251;Query given SQL to create a prepared statement from SQL and a list of_arguments to bind to the query, reading the ResultSet on a per-row basis_with a RowCallbackHandler._@param sql SQL query to execute_@param paramMap map of parameters to bind to the query_(leaving it to the PreparedStatement to guess the corresponding SQL type)_@param rch object that will extract results, one row at a time_@throws org.springframework.dao.DataAccessException if the query fails;void query(String sql, Map<String, ?> paramMap, RowCallbackHandler rch) throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,reading,the,result,set,on,a,per,row,basis,with,a,row,callback,handler,param,sql,sql,query,to,execute,param,param,map,map,of,parameters,to,bind,to,the,query,leaving,it,to,the,prepared,statement,to,guess,the,corresponding,sql,type,param,rch,object,that,will,extract,results,one,row,at,a,time,throws,org,springframework,dao,data,access,exception,if,the,query,fails;void,query,string,sql,map,string,param,map,row,callback,handler,rch,throws,data,access,exception
NamedParameterJdbcOperations -> void query(String sql, Map<String, ?> paramMap, RowCallbackHandler rch) throws DataAccessException_;1356735495;Query given SQL to create a prepared statement from SQL and a list of_arguments to bind to the query, reading the ResultSet on a per-row basis_with a RowCallbackHandler._@param sql SQL query to execute_@param paramMap map of parameters to bind to the query_(leaving it to the PreparedStatement to guess the corresponding SQL type)_@param rch object that will extract results, one row at a time_@throws org.springframework.dao.DataAccessException if the query fails;void query(String sql, Map<String, ?> paramMap, RowCallbackHandler rch) throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,reading,the,result,set,on,a,per,row,basis,with,a,row,callback,handler,param,sql,sql,query,to,execute,param,param,map,map,of,parameters,to,bind,to,the,query,leaving,it,to,the,prepared,statement,to,guess,the,corresponding,sql,type,param,rch,object,that,will,extract,results,one,row,at,a,time,throws,org,springframework,dao,data,access,exception,if,the,query,fails;void,query,string,sql,map,string,param,map,row,callback,handler,rch,throws,data,access,exception
NamedParameterJdbcOperations -> void query(String sql, Map<String, ?> paramMap, RowCallbackHandler rch) throws DataAccessException_;1362408075;Query given SQL to create a prepared statement from SQL and a list of_arguments to bind to the query, reading the ResultSet on a per-row basis_with a RowCallbackHandler._@param sql SQL query to execute_@param paramMap map of parameters to bind to the query_(leaving it to the PreparedStatement to guess the corresponding SQL type)_@param rch object that will extract results, one row at a time_@throws org.springframework.dao.DataAccessException if the query fails;void query(String sql, Map<String, ?> paramMap, RowCallbackHandler rch) throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,reading,the,result,set,on,a,per,row,basis,with,a,row,callback,handler,param,sql,sql,query,to,execute,param,param,map,map,of,parameters,to,bind,to,the,query,leaving,it,to,the,prepared,statement,to,guess,the,corresponding,sql,type,param,rch,object,that,will,extract,results,one,row,at,a,time,throws,org,springframework,dao,data,access,exception,if,the,query,fails;void,query,string,sql,map,string,param,map,row,callback,handler,rch,throws,data,access,exception
NamedParameterJdbcOperations -> void query(String sql, Map<String, ?> paramMap, RowCallbackHandler rch) throws DataAccessException_;1419966315;Query given SQL to create a prepared statement from SQL and a list of_arguments to bind to the query, reading the ResultSet on a per-row basis_with a RowCallbackHandler._@param sql SQL query to execute_@param paramMap map of parameters to bind to the query_(leaving it to the PreparedStatement to guess the corresponding SQL type)_@param rch object that will extract results, one row at a time_@throws org.springframework.dao.DataAccessException if the query fails;void query(String sql, Map<String, ?> paramMap, RowCallbackHandler rch) throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,reading,the,result,set,on,a,per,row,basis,with,a,row,callback,handler,param,sql,sql,query,to,execute,param,param,map,map,of,parameters,to,bind,to,the,query,leaving,it,to,the,prepared,statement,to,guess,the,corresponding,sql,type,param,rch,object,that,will,extract,results,one,row,at,a,time,throws,org,springframework,dao,data,access,exception,if,the,query,fails;void,query,string,sql,map,string,param,map,row,callback,handler,rch,throws,data,access,exception
NamedParameterJdbcOperations -> void query(String sql, Map<String, ?> paramMap, RowCallbackHandler rch) throws DataAccessException_;1491113276;Query given SQL to create a prepared statement from SQL and a list of_arguments to bind to the query, reading the ResultSet on a per-row basis_with a RowCallbackHandler._@param sql SQL query to execute_@param paramMap map of parameters to bind to the query_(leaving it to the PreparedStatement to guess the corresponding SQL type)_@param rch object that will extract results, one row at a time_@throws org.springframework.dao.DataAccessException if the query fails;void query(String sql, Map<String, ?> paramMap, RowCallbackHandler rch) throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,reading,the,result,set,on,a,per,row,basis,with,a,row,callback,handler,param,sql,sql,query,to,execute,param,param,map,map,of,parameters,to,bind,to,the,query,leaving,it,to,the,prepared,statement,to,guess,the,corresponding,sql,type,param,rch,object,that,will,extract,results,one,row,at,a,time,throws,org,springframework,dao,data,access,exception,if,the,query,fails;void,query,string,sql,map,string,param,map,row,callback,handler,rch,throws,data,access,exception
NamedParameterJdbcOperations -> void query(String sql, Map<String, ?> paramMap, RowCallbackHandler rch) throws DataAccessException_;1495868221;Query given SQL to create a prepared statement from SQL and a list of_arguments to bind to the query, reading the ResultSet on a per-row basis_with a RowCallbackHandler._@param sql SQL query to execute_@param paramMap map of parameters to bind to the query_(leaving it to the PreparedStatement to guess the corresponding SQL type)_@param rch object that will extract results, one row at a time_@throws org.springframework.dao.DataAccessException if the query fails;void query(String sql, Map<String, ?> paramMap, RowCallbackHandler rch) throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,reading,the,result,set,on,a,per,row,basis,with,a,row,callback,handler,param,sql,sql,query,to,execute,param,param,map,map,of,parameters,to,bind,to,the,query,leaving,it,to,the,prepared,statement,to,guess,the,corresponding,sql,type,param,rch,object,that,will,extract,results,one,row,at,a,time,throws,org,springframework,dao,data,access,exception,if,the,query,fails;void,query,string,sql,map,string,param,map,row,callback,handler,rch,throws,data,access,exception
NamedParameterJdbcOperations -> void query(String sql, Map<String, ?> paramMap, RowCallbackHandler rch) throws DataAccessException_;1496837955;Query given SQL to create a prepared statement from SQL and a list of_arguments to bind to the query, reading the ResultSet on a per-row basis_with a RowCallbackHandler._@param sql SQL query to execute_@param paramMap map of parameters to bind to the query_(leaving it to the PreparedStatement to guess the corresponding SQL type)_@param rch object that will extract results, one row at a time_@throws org.springframework.dao.DataAccessException if the query fails;void query(String sql, Map<String, ?> paramMap, RowCallbackHandler rch) throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,reading,the,result,set,on,a,per,row,basis,with,a,row,callback,handler,param,sql,sql,query,to,execute,param,param,map,map,of,parameters,to,bind,to,the,query,leaving,it,to,the,prepared,statement,to,guess,the,corresponding,sql,type,param,rch,object,that,will,extract,results,one,row,at,a,time,throws,org,springframework,dao,data,access,exception,if,the,query,fails;void,query,string,sql,map,string,param,map,row,callback,handler,rch,throws,data,access,exception
NamedParameterJdbcOperations -> void query(String sql, Map<String, ?> paramMap, RowCallbackHandler rch) throws DataAccessException_;1502974979;Query given SQL to create a prepared statement from SQL and a list of_arguments to bind to the query, reading the ResultSet on a per-row basis_with a RowCallbackHandler._@param sql SQL query to execute_@param paramMap map of parameters to bind to the query_(leaving it to the PreparedStatement to guess the corresponding SQL type)_@param rch object that will extract results, one row at a time_@throws org.springframework.dao.DataAccessException if the query fails;void query(String sql, Map<String, ?> paramMap, RowCallbackHandler rch) throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,reading,the,result,set,on,a,per,row,basis,with,a,row,callback,handler,param,sql,sql,query,to,execute,param,param,map,map,of,parameters,to,bind,to,the,query,leaving,it,to,the,prepared,statement,to,guess,the,corresponding,sql,type,param,rch,object,that,will,extract,results,one,row,at,a,time,throws,org,springframework,dao,data,access,exception,if,the,query,fails;void,query,string,sql,map,string,param,map,row,callback,handler,rch,throws,data,access,exception
NamedParameterJdbcOperations -> void query(String sql, Map<String, ?> paramMap, RowCallbackHandler rch) throws DataAccessException_;1511712999;Query given SQL to create a prepared statement from SQL and a list of_arguments to bind to the query, reading the ResultSet on a per-row basis_with a RowCallbackHandler._@param sql SQL query to execute_@param paramMap map of parameters to bind to the query_(leaving it to the PreparedStatement to guess the corresponding SQL type)_@param rch object that will extract results, one row at a time_@throws org.springframework.dao.DataAccessException if the query fails;void query(String sql, Map<String, ?> paramMap, RowCallbackHandler rch) throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,reading,the,result,set,on,a,per,row,basis,with,a,row,callback,handler,param,sql,sql,query,to,execute,param,param,map,map,of,parameters,to,bind,to,the,query,leaving,it,to,the,prepared,statement,to,guess,the,corresponding,sql,type,param,rch,object,that,will,extract,results,one,row,at,a,time,throws,org,springframework,dao,data,access,exception,if,the,query,fails;void,query,string,sql,map,string,param,map,row,callback,handler,rch,throws,data,access,exception
NamedParameterJdbcOperations -> void query(String sql, Map<String, ?> paramMap, RowCallbackHandler rch) throws DataAccessException_;1530174524;Query given SQL to create a prepared statement from SQL and a list of_arguments to bind to the query, reading the ResultSet on a per-row basis_with a RowCallbackHandler._@param sql the SQL query to execute_@param paramMap map of parameters to bind to the query_(leaving it to the PreparedStatement to guess the corresponding SQL type)_@param rch object that will extract results, one row at a time_@throws org.springframework.dao.DataAccessException if the query fails;void query(String sql, Map<String, ?> paramMap, RowCallbackHandler rch) throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,reading,the,result,set,on,a,per,row,basis,with,a,row,callback,handler,param,sql,the,sql,query,to,execute,param,param,map,map,of,parameters,to,bind,to,the,query,leaving,it,to,the,prepared,statement,to,guess,the,corresponding,sql,type,param,rch,object,that,will,extract,results,one,row,at,a,time,throws,org,springframework,dao,data,access,exception,if,the,query,fails;void,query,string,sql,map,string,param,map,row,callback,handler,rch,throws,data,access,exception
NamedParameterJdbcOperations -> int queryForInt(String sql, Map<String, ?> paramMap) throws DataAccessException_;1328020251;Query given SQL to create a prepared statement from SQL and a_list of arguments to bind to the query, resulting in an int value._<p>The query is expected to be a single row/single column query that_results in an int value._@param sql SQL query to execute_@param paramMap map of parameters to bind to the query_(leaving it to the PreparedStatement to guess the corresponding SQL type)_@return the int value, or 0 in case of SQL NULL_@throws org.springframework.dao.IncorrectResultSizeDataAccessException if the query does not return_exactly one row, or does not return exactly one column in that row_@throws org.springframework.dao.DataAccessException if the query fails_@see org.springframework.jdbc.core.JdbcTemplate#queryForInt(String);int queryForInt(String sql, Map<String, ?> paramMap) throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,resulting,in,an,int,value,p,the,query,is,expected,to,be,a,single,row,single,column,query,that,results,in,an,int,value,param,sql,sql,query,to,execute,param,param,map,map,of,parameters,to,bind,to,the,query,leaving,it,to,the,prepared,statement,to,guess,the,corresponding,sql,type,return,the,int,value,or,0,in,case,of,sql,null,throws,org,springframework,dao,incorrect,result,size,data,access,exception,if,the,query,does,not,return,exactly,one,row,or,does,not,return,exactly,one,column,in,that,row,throws,org,springframework,dao,data,access,exception,if,the,query,fails,see,org,springframework,jdbc,core,jdbc,template,query,for,int,string;int,query,for,int,string,sql,map,string,param,map,throws,data,access,exception
NamedParameterJdbcOperations -> int queryForInt(String sql, Map<String, ?> paramMap) throws DataAccessException_;1356735495;Query given SQL to create a prepared statement from SQL and a_list of arguments to bind to the query, resulting in an int value._<p>The query is expected to be a single row/single column query that_results in an int value._@param sql SQL query to execute_@param paramMap map of parameters to bind to the query_(leaving it to the PreparedStatement to guess the corresponding SQL type)_@return the int value, or 0 in case of SQL NULL_@throws org.springframework.dao.IncorrectResultSizeDataAccessException if the query does not return_exactly one row, or does not return exactly one column in that row_@throws org.springframework.dao.DataAccessException if the query fails_@see org.springframework.jdbc.core.JdbcTemplate#queryForInt(String);int queryForInt(String sql, Map<String, ?> paramMap) throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,resulting,in,an,int,value,p,the,query,is,expected,to,be,a,single,row,single,column,query,that,results,in,an,int,value,param,sql,sql,query,to,execute,param,param,map,map,of,parameters,to,bind,to,the,query,leaving,it,to,the,prepared,statement,to,guess,the,corresponding,sql,type,return,the,int,value,or,0,in,case,of,sql,null,throws,org,springframework,dao,incorrect,result,size,data,access,exception,if,the,query,does,not,return,exactly,one,row,or,does,not,return,exactly,one,column,in,that,row,throws,org,springframework,dao,data,access,exception,if,the,query,fails,see,org,springframework,jdbc,core,jdbc,template,query,for,int,string;int,query,for,int,string,sql,map,string,param,map,throws,data,access,exception
NamedParameterJdbcOperations -> <T> List<T> query(String sql, RowMapper<T> rowMapper) throws DataAccessException_;1362408075;Query given SQL to create a prepared statement from SQL,_mapping each row to a Java object via a RowMapper._<p>Note: In contrast to the JdbcOperations method with the same signature,_this query variant always uses a PreparedStatement. It is effectively_equivalent to a query call with an empty parameter Map._@param sql SQL query to execute_@param rowMapper object that will map one object per row_@return the result List, containing mapped objects_@throws org.springframework.dao.DataAccessException if the query fails;<T> List<T> query(String sql, RowMapper<T> rowMapper) throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,mapping,each,row,to,a,java,object,via,a,row,mapper,p,note,in,contrast,to,the,jdbc,operations,method,with,the,same,signature,this,query,variant,always,uses,a,prepared,statement,it,is,effectively,equivalent,to,a,query,call,with,an,empty,parameter,map,param,sql,sql,query,to,execute,param,row,mapper,object,that,will,map,one,object,per,row,return,the,result,list,containing,mapped,objects,throws,org,springframework,dao,data,access,exception,if,the,query,fails;t,list,t,query,string,sql,row,mapper,t,row,mapper,throws,data,access,exception
NamedParameterJdbcOperations -> <T> List<T> query(String sql, RowMapper<T> rowMapper) throws DataAccessException_;1419966315;Query given SQL to create a prepared statement from SQL,_mapping each row to a Java object via a RowMapper._<p>Note: In contrast to the JdbcOperations method with the same signature,_this query variant always uses a PreparedStatement. It is effectively_equivalent to a query call with an empty parameter Map._@param sql SQL query to execute_@param rowMapper object that will map one object per row_@return the result List, containing mapped objects_@throws org.springframework.dao.DataAccessException if the query fails;<T> List<T> query(String sql, RowMapper<T> rowMapper) throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,mapping,each,row,to,a,java,object,via,a,row,mapper,p,note,in,contrast,to,the,jdbc,operations,method,with,the,same,signature,this,query,variant,always,uses,a,prepared,statement,it,is,effectively,equivalent,to,a,query,call,with,an,empty,parameter,map,param,sql,sql,query,to,execute,param,row,mapper,object,that,will,map,one,object,per,row,return,the,result,list,containing,mapped,objects,throws,org,springframework,dao,data,access,exception,if,the,query,fails;t,list,t,query,string,sql,row,mapper,t,row,mapper,throws,data,access,exception
NamedParameterJdbcOperations -> <T> List<T> query(String sql, RowMapper<T> rowMapper) throws DataAccessException_;1491113276;Query given SQL to create a prepared statement from SQL,_mapping each row to a Java object via a RowMapper._<p>Note: In contrast to the JdbcOperations method with the same signature,_this query variant always uses a PreparedStatement. It is effectively_equivalent to a query call with an empty parameter Map._@param sql SQL query to execute_@param rowMapper object that will map one object per row_@return the result List, containing mapped objects_@throws org.springframework.dao.DataAccessException if the query fails;<T> List<T> query(String sql, RowMapper<T> rowMapper) throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,mapping,each,row,to,a,java,object,via,a,row,mapper,p,note,in,contrast,to,the,jdbc,operations,method,with,the,same,signature,this,query,variant,always,uses,a,prepared,statement,it,is,effectively,equivalent,to,a,query,call,with,an,empty,parameter,map,param,sql,sql,query,to,execute,param,row,mapper,object,that,will,map,one,object,per,row,return,the,result,list,containing,mapped,objects,throws,org,springframework,dao,data,access,exception,if,the,query,fails;t,list,t,query,string,sql,row,mapper,t,row,mapper,throws,data,access,exception
NamedParameterJdbcOperations -> <T> List<T> query(String sql, RowMapper<T> rowMapper) throws DataAccessException_;1495868221;Query given SQL to create a prepared statement from SQL,_mapping each row to a Java object via a RowMapper._<p>Note: In contrast to the JdbcOperations method with the same signature,_this query variant always uses a PreparedStatement. It is effectively_equivalent to a query call with an empty parameter Map._@param sql SQL query to execute_@param rowMapper object that will map one object per row_@return the result List, containing mapped objects_@throws org.springframework.dao.DataAccessException if the query fails;<T> List<T> query(String sql, RowMapper<T> rowMapper) throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,mapping,each,row,to,a,java,object,via,a,row,mapper,p,note,in,contrast,to,the,jdbc,operations,method,with,the,same,signature,this,query,variant,always,uses,a,prepared,statement,it,is,effectively,equivalent,to,a,query,call,with,an,empty,parameter,map,param,sql,sql,query,to,execute,param,row,mapper,object,that,will,map,one,object,per,row,return,the,result,list,containing,mapped,objects,throws,org,springframework,dao,data,access,exception,if,the,query,fails;t,list,t,query,string,sql,row,mapper,t,row,mapper,throws,data,access,exception
NamedParameterJdbcOperations -> <T> List<T> query(String sql, RowMapper<T> rowMapper) throws DataAccessException_;1496837955;Query given SQL to create a prepared statement from SQL,_mapping each row to a Java object via a RowMapper._<p>Note: In contrast to the JdbcOperations method with the same signature,_this query variant always uses a PreparedStatement. It is effectively_equivalent to a query call with an empty parameter Map._@param sql SQL query to execute_@param rowMapper object that will map one object per row_@return the result List, containing mapped objects_@throws org.springframework.dao.DataAccessException if the query fails;<T> List<T> query(String sql, RowMapper<T> rowMapper) throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,mapping,each,row,to,a,java,object,via,a,row,mapper,p,note,in,contrast,to,the,jdbc,operations,method,with,the,same,signature,this,query,variant,always,uses,a,prepared,statement,it,is,effectively,equivalent,to,a,query,call,with,an,empty,parameter,map,param,sql,sql,query,to,execute,param,row,mapper,object,that,will,map,one,object,per,row,return,the,result,list,containing,mapped,objects,throws,org,springframework,dao,data,access,exception,if,the,query,fails;t,list,t,query,string,sql,row,mapper,t,row,mapper,throws,data,access,exception
NamedParameterJdbcOperations -> <T> List<T> query(String sql, RowMapper<T> rowMapper) throws DataAccessException_;1502974979;Query given SQL to create a prepared statement from SQL,_mapping each row to a Java object via a RowMapper._<p>Note: In contrast to the JdbcOperations method with the same signature,_this query variant always uses a PreparedStatement. It is effectively_equivalent to a query call with an empty parameter Map._@param sql SQL query to execute_@param rowMapper object that will map one object per row_@return the result List, containing mapped objects_@throws org.springframework.dao.DataAccessException if the query fails;<T> List<T> query(String sql, RowMapper<T> rowMapper) throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,mapping,each,row,to,a,java,object,via,a,row,mapper,p,note,in,contrast,to,the,jdbc,operations,method,with,the,same,signature,this,query,variant,always,uses,a,prepared,statement,it,is,effectively,equivalent,to,a,query,call,with,an,empty,parameter,map,param,sql,sql,query,to,execute,param,row,mapper,object,that,will,map,one,object,per,row,return,the,result,list,containing,mapped,objects,throws,org,springframework,dao,data,access,exception,if,the,query,fails;t,list,t,query,string,sql,row,mapper,t,row,mapper,throws,data,access,exception
NamedParameterJdbcOperations -> <T> List<T> query(String sql, RowMapper<T> rowMapper) throws DataAccessException_;1511712999;Query given SQL to create a prepared statement from SQL,_mapping each row to a Java object via a RowMapper._<p>Note: In contrast to the JdbcOperations method with the same signature,_this query variant always uses a PreparedStatement. It is effectively_equivalent to a query call with an empty parameter Map._@param sql SQL query to execute_@param rowMapper object that will map one object per row_@return the result List, containing mapped objects_@throws org.springframework.dao.DataAccessException if the query fails;<T> List<T> query(String sql, RowMapper<T> rowMapper) throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,mapping,each,row,to,a,java,object,via,a,row,mapper,p,note,in,contrast,to,the,jdbc,operations,method,with,the,same,signature,this,query,variant,always,uses,a,prepared,statement,it,is,effectively,equivalent,to,a,query,call,with,an,empty,parameter,map,param,sql,sql,query,to,execute,param,row,mapper,object,that,will,map,one,object,per,row,return,the,result,list,containing,mapped,objects,throws,org,springframework,dao,data,access,exception,if,the,query,fails;t,list,t,query,string,sql,row,mapper,t,row,mapper,throws,data,access,exception
NamedParameterJdbcOperations -> <T> List<T> query(String sql, RowMapper<T> rowMapper) throws DataAccessException_;1530174524;Query given SQL to create a prepared statement from SQL,_mapping each row to a Java object via a RowMapper._<p>Note: In contrast to the JdbcOperations method with the same signature,_this query variant always uses a PreparedStatement. It is effectively_equivalent to a query call with an empty parameter Map._@param sql the SQL query to execute_@param rowMapper object that will map one object per row_@return the result List, containing mapped objects_@throws org.springframework.dao.DataAccessException if the query fails;<T> List<T> query(String sql, RowMapper<T> rowMapper) throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,mapping,each,row,to,a,java,object,via,a,row,mapper,p,note,in,contrast,to,the,jdbc,operations,method,with,the,same,signature,this,query,variant,always,uses,a,prepared,statement,it,is,effectively,equivalent,to,a,query,call,with,an,empty,parameter,map,param,sql,the,sql,query,to,execute,param,row,mapper,object,that,will,map,one,object,per,row,return,the,result,list,containing,mapped,objects,throws,org,springframework,dao,data,access,exception,if,the,query,fails;t,list,t,query,string,sql,row,mapper,t,row,mapper,throws,data,access,exception
NamedParameterJdbcOperations -> JdbcOperations getJdbcOperations()_;1328020251;Expose the classic Spring JdbcTemplate to allow invocation of_classic JDBC operations.;JdbcOperations getJdbcOperations()_;expose,the,classic,spring,jdbc,template,to,allow,invocation,of,classic,jdbc,operations;jdbc,operations,get,jdbc,operations
NamedParameterJdbcOperations -> JdbcOperations getJdbcOperations()_;1356735495;Expose the classic Spring JdbcTemplate to allow invocation of_classic JDBC operations.;JdbcOperations getJdbcOperations()_;expose,the,classic,spring,jdbc,template,to,allow,invocation,of,classic,jdbc,operations;jdbc,operations,get,jdbc,operations
NamedParameterJdbcOperations -> JdbcOperations getJdbcOperations()_;1362408075;Expose the classic Spring JdbcTemplate to allow invocation of_classic JDBC operations.;JdbcOperations getJdbcOperations()_;expose,the,classic,spring,jdbc,template,to,allow,invocation,of,classic,jdbc,operations;jdbc,operations,get,jdbc,operations
NamedParameterJdbcOperations -> JdbcOperations getJdbcOperations()_;1419966315;Expose the classic Spring JdbcTemplate to allow invocation of_classic JDBC operations.;JdbcOperations getJdbcOperations()_;expose,the,classic,spring,jdbc,template,to,allow,invocation,of,classic,jdbc,operations;jdbc,operations,get,jdbc,operations
NamedParameterJdbcOperations -> JdbcOperations getJdbcOperations()_;1491113276;Expose the classic Spring JdbcTemplate to allow invocation of_classic JDBC operations.;JdbcOperations getJdbcOperations()_;expose,the,classic,spring,jdbc,template,to,allow,invocation,of,classic,jdbc,operations;jdbc,operations,get,jdbc,operations
NamedParameterJdbcOperations -> JdbcOperations getJdbcOperations()_;1495868221;Expose the classic Spring JdbcTemplate to allow invocation of_classic JDBC operations.;JdbcOperations getJdbcOperations()_;expose,the,classic,spring,jdbc,template,to,allow,invocation,of,classic,jdbc,operations;jdbc,operations,get,jdbc,operations
NamedParameterJdbcOperations -> JdbcOperations getJdbcOperations()_;1496837955;Expose the classic Spring JdbcTemplate to allow invocation of_classic JDBC operations.;JdbcOperations getJdbcOperations()_;expose,the,classic,spring,jdbc,template,to,allow,invocation,of,classic,jdbc,operations;jdbc,operations,get,jdbc,operations
NamedParameterJdbcOperations -> JdbcOperations getJdbcOperations()_;1502974979;Expose the classic Spring JdbcTemplate to allow invocation of_classic JDBC operations.;JdbcOperations getJdbcOperations()_;expose,the,classic,spring,jdbc,template,to,allow,invocation,of,classic,jdbc,operations;jdbc,operations,get,jdbc,operations
NamedParameterJdbcOperations -> JdbcOperations getJdbcOperations()_;1511712999;Expose the classic Spring JdbcTemplate to allow invocation of_classic JDBC operations.;JdbcOperations getJdbcOperations()_;expose,the,classic,spring,jdbc,template,to,allow,invocation,of,classic,jdbc,operations;jdbc,operations,get,jdbc,operations
NamedParameterJdbcOperations -> JdbcOperations getJdbcOperations()_;1530174524;Expose the classic Spring JdbcTemplate to allow invocation of_classic JDBC operations.;JdbcOperations getJdbcOperations()_;expose,the,classic,spring,jdbc,template,to,allow,invocation,of,classic,jdbc,operations;jdbc,operations,get,jdbc,operations
NamedParameterJdbcOperations -> SqlRowSet queryForRowSet(String sql, SqlParameterSource paramSource) throws DataAccessException_;1328020251;Query given SQL to create a prepared statement from SQL and a_list of arguments to bind to the query, expecting a SqlRowSet._<p>The results will be mapped to an SqlRowSet which holds the data in a_disconnected fashion. This wrapper will translate any SQLExceptions thrown._<p>Note that that, for the default implementation, JDBC RowSet support needs to_be available at runtime: by default, Sun's <code>com.sun.rowset.CachedRowSetImpl</code>_class is used, which is part of JDK 1.5+ and also available separately as part of_Sun's JDBC RowSet Implementations download (rowset.jar)._@param sql SQL query to execute_@param paramSource container of arguments to bind to the query_@return a SqlRowSet representation (possibly a wrapper around a_<code>javax.sql.rowset.CachedRowSet</code>)_@throws org.springframework.dao.DataAccessException if there is any problem executing the query_@see org.springframework.jdbc.core.JdbcTemplate#queryForRowSet(String)_@see org.springframework.jdbc.core.SqlRowSetResultSetExtractor_@see javax.sql.rowset.CachedRowSet;SqlRowSet queryForRowSet(String sql, SqlParameterSource paramSource) throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,expecting,a,sql,row,set,p,the,results,will,be,mapped,to,an,sql,row,set,which,holds,the,data,in,a,disconnected,fashion,this,wrapper,will,translate,any,sqlexceptions,thrown,p,note,that,that,for,the,default,implementation,jdbc,row,set,support,needs,to,be,available,at,runtime,by,default,sun,s,code,com,sun,rowset,cached,row,set,impl,code,class,is,used,which,is,part,of,jdk,1,5,and,also,available,separately,as,part,of,sun,s,jdbc,row,set,implementations,download,rowset,jar,param,sql,sql,query,to,execute,param,param,source,container,of,arguments,to,bind,to,the,query,return,a,sql,row,set,representation,possibly,a,wrapper,around,a,code,javax,sql,rowset,cached,row,set,code,throws,org,springframework,dao,data,access,exception,if,there,is,any,problem,executing,the,query,see,org,springframework,jdbc,core,jdbc,template,query,for,row,set,string,see,org,springframework,jdbc,core,sql,row,set,result,set,extractor,see,javax,sql,rowset,cached,row,set;sql,row,set,query,for,row,set,string,sql,sql,parameter,source,param,source,throws,data,access,exception
NamedParameterJdbcOperations -> SqlRowSet queryForRowSet(String sql, SqlParameterSource paramSource) throws DataAccessException_;1356735495;Query given SQL to create a prepared statement from SQL and a_list of arguments to bind to the query, expecting a SqlRowSet._<p>The results will be mapped to an SqlRowSet which holds the data in a_disconnected fashion. This wrapper will translate any SQLExceptions thrown._<p>Note that that, for the default implementation, JDBC RowSet support needs to_be available at runtime: by default, Sun's {@code com.sun.rowset.CachedRowSetImpl}_class is used, which is part of JDK 1.5+ and also available separately as part of_Sun's JDBC RowSet Implementations download (rowset.jar)._@param sql SQL query to execute_@param paramSource container of arguments to bind to the query_@return a SqlRowSet representation (possibly a wrapper around a_{@code javax.sql.rowset.CachedRowSet})_@throws org.springframework.dao.DataAccessException if there is any problem executing the query_@see org.springframework.jdbc.core.JdbcTemplate#queryForRowSet(String)_@see org.springframework.jdbc.core.SqlRowSetResultSetExtractor_@see javax.sql.rowset.CachedRowSet;SqlRowSet queryForRowSet(String sql, SqlParameterSource paramSource) throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,expecting,a,sql,row,set,p,the,results,will,be,mapped,to,an,sql,row,set,which,holds,the,data,in,a,disconnected,fashion,this,wrapper,will,translate,any,sqlexceptions,thrown,p,note,that,that,for,the,default,implementation,jdbc,row,set,support,needs,to,be,available,at,runtime,by,default,sun,s,code,com,sun,rowset,cached,row,set,impl,class,is,used,which,is,part,of,jdk,1,5,and,also,available,separately,as,part,of,sun,s,jdbc,row,set,implementations,download,rowset,jar,param,sql,sql,query,to,execute,param,param,source,container,of,arguments,to,bind,to,the,query,return,a,sql,row,set,representation,possibly,a,wrapper,around,a,code,javax,sql,rowset,cached,row,set,throws,org,springframework,dao,data,access,exception,if,there,is,any,problem,executing,the,query,see,org,springframework,jdbc,core,jdbc,template,query,for,row,set,string,see,org,springframework,jdbc,core,sql,row,set,result,set,extractor,see,javax,sql,rowset,cached,row,set;sql,row,set,query,for,row,set,string,sql,sql,parameter,source,param,source,throws,data,access,exception
NamedParameterJdbcOperations -> SqlRowSet queryForRowSet(String sql, SqlParameterSource paramSource) throws DataAccessException_;1362408075;Query given SQL to create a prepared statement from SQL and a_list of arguments to bind to the query, expecting a SqlRowSet._<p>The results will be mapped to an SqlRowSet which holds the data in a_disconnected fashion. This wrapper will translate any SQLExceptions thrown._<p>Note that that, for the default implementation, JDBC RowSet support needs to_be available at runtime: by default, Sun's {@code com.sun.rowset.CachedRowSetImpl}_class is used, which is part of JDK 1.5+ and also available separately as part of_Sun's JDBC RowSet Implementations download (rowset.jar)._@param sql SQL query to execute_@param paramSource container of arguments to bind to the query_@return a SqlRowSet representation (possibly a wrapper around a_{@code javax.sql.rowset.CachedRowSet})_@throws org.springframework.dao.DataAccessException if there is any problem executing the query_@see org.springframework.jdbc.core.JdbcTemplate#queryForRowSet(String)_@see org.springframework.jdbc.core.SqlRowSetResultSetExtractor_@see javax.sql.rowset.CachedRowSet;SqlRowSet queryForRowSet(String sql, SqlParameterSource paramSource) throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,expecting,a,sql,row,set,p,the,results,will,be,mapped,to,an,sql,row,set,which,holds,the,data,in,a,disconnected,fashion,this,wrapper,will,translate,any,sqlexceptions,thrown,p,note,that,that,for,the,default,implementation,jdbc,row,set,support,needs,to,be,available,at,runtime,by,default,sun,s,code,com,sun,rowset,cached,row,set,impl,class,is,used,which,is,part,of,jdk,1,5,and,also,available,separately,as,part,of,sun,s,jdbc,row,set,implementations,download,rowset,jar,param,sql,sql,query,to,execute,param,param,source,container,of,arguments,to,bind,to,the,query,return,a,sql,row,set,representation,possibly,a,wrapper,around,a,code,javax,sql,rowset,cached,row,set,throws,org,springframework,dao,data,access,exception,if,there,is,any,problem,executing,the,query,see,org,springframework,jdbc,core,jdbc,template,query,for,row,set,string,see,org,springframework,jdbc,core,sql,row,set,result,set,extractor,see,javax,sql,rowset,cached,row,set;sql,row,set,query,for,row,set,string,sql,sql,parameter,source,param,source,throws,data,access,exception
NamedParameterJdbcOperations -> SqlRowSet queryForRowSet(String sql, SqlParameterSource paramSource) throws DataAccessException_;1419966315;Query given SQL to create a prepared statement from SQL and a_list of arguments to bind to the query, expecting a SqlRowSet._<p>The results will be mapped to an SqlRowSet which holds the data in a_disconnected fashion. This wrapper will translate any SQLExceptions thrown._<p>Note that that, for the default implementation, JDBC RowSet support needs to_be available at runtime: by default, Sun's {@code com.sun.rowset.CachedRowSetImpl}_class is used, which is part of JDK 1.5+ and also available separately as part of_Sun's JDBC RowSet Implementations download (rowset.jar)._@param sql SQL query to execute_@param paramSource container of arguments to bind to the query_@return a SqlRowSet representation (possibly a wrapper around a_{@code javax.sql.rowset.CachedRowSet})_@throws org.springframework.dao.DataAccessException if there is any problem executing the query_@see org.springframework.jdbc.core.JdbcTemplate#queryForRowSet(String)_@see org.springframework.jdbc.core.SqlRowSetResultSetExtractor_@see javax.sql.rowset.CachedRowSet;SqlRowSet queryForRowSet(String sql, SqlParameterSource paramSource) throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,expecting,a,sql,row,set,p,the,results,will,be,mapped,to,an,sql,row,set,which,holds,the,data,in,a,disconnected,fashion,this,wrapper,will,translate,any,sqlexceptions,thrown,p,note,that,that,for,the,default,implementation,jdbc,row,set,support,needs,to,be,available,at,runtime,by,default,sun,s,code,com,sun,rowset,cached,row,set,impl,class,is,used,which,is,part,of,jdk,1,5,and,also,available,separately,as,part,of,sun,s,jdbc,row,set,implementations,download,rowset,jar,param,sql,sql,query,to,execute,param,param,source,container,of,arguments,to,bind,to,the,query,return,a,sql,row,set,representation,possibly,a,wrapper,around,a,code,javax,sql,rowset,cached,row,set,throws,org,springframework,dao,data,access,exception,if,there,is,any,problem,executing,the,query,see,org,springframework,jdbc,core,jdbc,template,query,for,row,set,string,see,org,springframework,jdbc,core,sql,row,set,result,set,extractor,see,javax,sql,rowset,cached,row,set;sql,row,set,query,for,row,set,string,sql,sql,parameter,source,param,source,throws,data,access,exception
NamedParameterJdbcOperations -> SqlRowSet queryForRowSet(String sql, SqlParameterSource paramSource) throws DataAccessException_;1491113276;Query given SQL to create a prepared statement from SQL and a_list of arguments to bind to the query, expecting a SqlRowSet._<p>The results will be mapped to an SqlRowSet which holds the data in a_disconnected fashion. This wrapper will translate any SQLExceptions thrown._<p>Note that, for the default implementation, JDBC RowSet support needs to_be available at runtime: by default, Sun's {@code com.sun.rowset.CachedRowSetImpl}_class is used, which is part of JDK 1.5+ and also available separately as part of_Sun's JDBC RowSet Implementations download (rowset.jar)._@param sql SQL query to execute_@param paramSource container of arguments to bind to the query_@return a SqlRowSet representation (possibly a wrapper around a_{@code javax.sql.rowset.CachedRowSet})_@throws org.springframework.dao.DataAccessException if there is any problem executing the query_@see org.springframework.jdbc.core.JdbcTemplate#queryForRowSet(String)_@see org.springframework.jdbc.core.SqlRowSetResultSetExtractor_@see javax.sql.rowset.CachedRowSet;SqlRowSet queryForRowSet(String sql, SqlParameterSource paramSource) throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,expecting,a,sql,row,set,p,the,results,will,be,mapped,to,an,sql,row,set,which,holds,the,data,in,a,disconnected,fashion,this,wrapper,will,translate,any,sqlexceptions,thrown,p,note,that,for,the,default,implementation,jdbc,row,set,support,needs,to,be,available,at,runtime,by,default,sun,s,code,com,sun,rowset,cached,row,set,impl,class,is,used,which,is,part,of,jdk,1,5,and,also,available,separately,as,part,of,sun,s,jdbc,row,set,implementations,download,rowset,jar,param,sql,sql,query,to,execute,param,param,source,container,of,arguments,to,bind,to,the,query,return,a,sql,row,set,representation,possibly,a,wrapper,around,a,code,javax,sql,rowset,cached,row,set,throws,org,springframework,dao,data,access,exception,if,there,is,any,problem,executing,the,query,see,org,springframework,jdbc,core,jdbc,template,query,for,row,set,string,see,org,springframework,jdbc,core,sql,row,set,result,set,extractor,see,javax,sql,rowset,cached,row,set;sql,row,set,query,for,row,set,string,sql,sql,parameter,source,param,source,throws,data,access,exception
NamedParameterJdbcOperations -> SqlRowSet queryForRowSet(String sql, SqlParameterSource paramSource) throws DataAccessException_;1495868221;Query given SQL to create a prepared statement from SQL and a_list of arguments to bind to the query, expecting a SqlRowSet._<p>The results will be mapped to an SqlRowSet which holds the data in a_disconnected fashion. This wrapper will translate any SQLExceptions thrown._<p>Note that, for the default implementation, JDBC RowSet support needs to_be available at runtime: by default, Sun's {@code com.sun.rowset.CachedRowSetImpl}_class is used, which is part of JDK 1.5+ and also available separately as part of_Sun's JDBC RowSet Implementations download (rowset.jar)._@param sql SQL query to execute_@param paramSource container of arguments to bind to the query_@return a SqlRowSet representation (possibly a wrapper around a_{@code javax.sql.rowset.CachedRowSet})_@throws org.springframework.dao.DataAccessException if there is any problem executing the query_@see org.springframework.jdbc.core.JdbcTemplate#queryForRowSet(String)_@see org.springframework.jdbc.core.SqlRowSetResultSetExtractor_@see javax.sql.rowset.CachedRowSet;SqlRowSet queryForRowSet(String sql, SqlParameterSource paramSource) throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,expecting,a,sql,row,set,p,the,results,will,be,mapped,to,an,sql,row,set,which,holds,the,data,in,a,disconnected,fashion,this,wrapper,will,translate,any,sqlexceptions,thrown,p,note,that,for,the,default,implementation,jdbc,row,set,support,needs,to,be,available,at,runtime,by,default,sun,s,code,com,sun,rowset,cached,row,set,impl,class,is,used,which,is,part,of,jdk,1,5,and,also,available,separately,as,part,of,sun,s,jdbc,row,set,implementations,download,rowset,jar,param,sql,sql,query,to,execute,param,param,source,container,of,arguments,to,bind,to,the,query,return,a,sql,row,set,representation,possibly,a,wrapper,around,a,code,javax,sql,rowset,cached,row,set,throws,org,springframework,dao,data,access,exception,if,there,is,any,problem,executing,the,query,see,org,springframework,jdbc,core,jdbc,template,query,for,row,set,string,see,org,springframework,jdbc,core,sql,row,set,result,set,extractor,see,javax,sql,rowset,cached,row,set;sql,row,set,query,for,row,set,string,sql,sql,parameter,source,param,source,throws,data,access,exception
NamedParameterJdbcOperations -> SqlRowSet queryForRowSet(String sql, SqlParameterSource paramSource) throws DataAccessException_;1496837955;Query given SQL to create a prepared statement from SQL and a_list of arguments to bind to the query, expecting a SqlRowSet._<p>The results will be mapped to an SqlRowSet which holds the data in a_disconnected fashion. This wrapper will translate any SQLExceptions thrown._<p>Note that, for the default implementation, JDBC RowSet support needs to_be available at runtime: by default, Sun's {@code com.sun.rowset.CachedRowSetImpl}_class is used, which is part of JDK 1.5+ and also available separately as part of_Sun's JDBC RowSet Implementations download (rowset.jar)._@param sql SQL query to execute_@param paramSource container of arguments to bind to the query_@return a SqlRowSet representation (possibly a wrapper around a_{@code javax.sql.rowset.CachedRowSet})_@throws org.springframework.dao.DataAccessException if there is any problem executing the query_@see org.springframework.jdbc.core.JdbcTemplate#queryForRowSet(String)_@see org.springframework.jdbc.core.SqlRowSetResultSetExtractor_@see javax.sql.rowset.CachedRowSet;SqlRowSet queryForRowSet(String sql, SqlParameterSource paramSource) throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,expecting,a,sql,row,set,p,the,results,will,be,mapped,to,an,sql,row,set,which,holds,the,data,in,a,disconnected,fashion,this,wrapper,will,translate,any,sqlexceptions,thrown,p,note,that,for,the,default,implementation,jdbc,row,set,support,needs,to,be,available,at,runtime,by,default,sun,s,code,com,sun,rowset,cached,row,set,impl,class,is,used,which,is,part,of,jdk,1,5,and,also,available,separately,as,part,of,sun,s,jdbc,row,set,implementations,download,rowset,jar,param,sql,sql,query,to,execute,param,param,source,container,of,arguments,to,bind,to,the,query,return,a,sql,row,set,representation,possibly,a,wrapper,around,a,code,javax,sql,rowset,cached,row,set,throws,org,springframework,dao,data,access,exception,if,there,is,any,problem,executing,the,query,see,org,springframework,jdbc,core,jdbc,template,query,for,row,set,string,see,org,springframework,jdbc,core,sql,row,set,result,set,extractor,see,javax,sql,rowset,cached,row,set;sql,row,set,query,for,row,set,string,sql,sql,parameter,source,param,source,throws,data,access,exception
NamedParameterJdbcOperations -> SqlRowSet queryForRowSet(String sql, SqlParameterSource paramSource) throws DataAccessException_;1502974979;Query given SQL to create a prepared statement from SQL and a_list of arguments to bind to the query, expecting a SqlRowSet._<p>The results will be mapped to an SqlRowSet which holds the data in a_disconnected fashion. This wrapper will translate any SQLExceptions thrown._<p>Note that, for the default implementation, JDBC RowSet support needs to_be available at runtime: by default, Sun's {@code com.sun.rowset.CachedRowSetImpl}_class is used, which is part of JDK 1.5+ and also available separately as part of_Sun's JDBC RowSet Implementations download (rowset.jar)._@param sql SQL query to execute_@param paramSource container of arguments to bind to the query_@return a SqlRowSet representation (possibly a wrapper around a_{@code javax.sql.rowset.CachedRowSet})_@throws org.springframework.dao.DataAccessException if there is any problem executing the query_@see org.springframework.jdbc.core.JdbcTemplate#queryForRowSet(String)_@see org.springframework.jdbc.core.SqlRowSetResultSetExtractor_@see javax.sql.rowset.CachedRowSet;SqlRowSet queryForRowSet(String sql, SqlParameterSource paramSource) throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,expecting,a,sql,row,set,p,the,results,will,be,mapped,to,an,sql,row,set,which,holds,the,data,in,a,disconnected,fashion,this,wrapper,will,translate,any,sqlexceptions,thrown,p,note,that,for,the,default,implementation,jdbc,row,set,support,needs,to,be,available,at,runtime,by,default,sun,s,code,com,sun,rowset,cached,row,set,impl,class,is,used,which,is,part,of,jdk,1,5,and,also,available,separately,as,part,of,sun,s,jdbc,row,set,implementations,download,rowset,jar,param,sql,sql,query,to,execute,param,param,source,container,of,arguments,to,bind,to,the,query,return,a,sql,row,set,representation,possibly,a,wrapper,around,a,code,javax,sql,rowset,cached,row,set,throws,org,springframework,dao,data,access,exception,if,there,is,any,problem,executing,the,query,see,org,springframework,jdbc,core,jdbc,template,query,for,row,set,string,see,org,springframework,jdbc,core,sql,row,set,result,set,extractor,see,javax,sql,rowset,cached,row,set;sql,row,set,query,for,row,set,string,sql,sql,parameter,source,param,source,throws,data,access,exception
NamedParameterJdbcOperations -> SqlRowSet queryForRowSet(String sql, SqlParameterSource paramSource) throws DataAccessException_;1511712999;Query given SQL to create a prepared statement from SQL and a_list of arguments to bind to the query, expecting a SqlRowSet._<p>The results will be mapped to an SqlRowSet which holds the data in a_disconnected fashion. This wrapper will translate any SQLExceptions thrown._<p>Note that, for the default implementation, JDBC RowSet support needs to_be available at runtime: by default, Sun's {@code com.sun.rowset.CachedRowSetImpl}_class is used, which is part of JDK 1.5+ and also available separately as part of_Sun's JDBC RowSet Implementations download (rowset.jar)._@param sql SQL query to execute_@param paramSource container of arguments to bind to the query_@return a SqlRowSet representation (possibly a wrapper around a_{@code javax.sql.rowset.CachedRowSet})_@throws org.springframework.dao.DataAccessException if there is any problem executing the query_@see org.springframework.jdbc.core.JdbcTemplate#queryForRowSet(String)_@see org.springframework.jdbc.core.SqlRowSetResultSetExtractor_@see javax.sql.rowset.CachedRowSet;SqlRowSet queryForRowSet(String sql, SqlParameterSource paramSource) throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,expecting,a,sql,row,set,p,the,results,will,be,mapped,to,an,sql,row,set,which,holds,the,data,in,a,disconnected,fashion,this,wrapper,will,translate,any,sqlexceptions,thrown,p,note,that,for,the,default,implementation,jdbc,row,set,support,needs,to,be,available,at,runtime,by,default,sun,s,code,com,sun,rowset,cached,row,set,impl,class,is,used,which,is,part,of,jdk,1,5,and,also,available,separately,as,part,of,sun,s,jdbc,row,set,implementations,download,rowset,jar,param,sql,sql,query,to,execute,param,param,source,container,of,arguments,to,bind,to,the,query,return,a,sql,row,set,representation,possibly,a,wrapper,around,a,code,javax,sql,rowset,cached,row,set,throws,org,springframework,dao,data,access,exception,if,there,is,any,problem,executing,the,query,see,org,springframework,jdbc,core,jdbc,template,query,for,row,set,string,see,org,springframework,jdbc,core,sql,row,set,result,set,extractor,see,javax,sql,rowset,cached,row,set;sql,row,set,query,for,row,set,string,sql,sql,parameter,source,param,source,throws,data,access,exception
NamedParameterJdbcOperations -> SqlRowSet queryForRowSet(String sql, SqlParameterSource paramSource) throws DataAccessException_;1530174524;Query given SQL to create a prepared statement from SQL and a_list of arguments to bind to the query, expecting a SqlRowSet._<p>The results will be mapped to an SqlRowSet which holds the data in a_disconnected fashion. This wrapper will translate any SQLExceptions thrown._<p>Note that, for the default implementation, JDBC RowSet support needs to_be available at runtime: by default, Sun's {@code com.sun.rowset.CachedRowSetImpl}_class is used, which is part of JDK 1.5+ and also available separately as part of_Sun's JDBC RowSet Implementations download (rowset.jar)._@param sql the SQL query to execute_@param paramSource container of arguments to bind to the query_@return a SqlRowSet representation (possibly a wrapper around a_{@code javax.sql.rowset.CachedRowSet})_@throws org.springframework.dao.DataAccessException if there is any problem executing the query_@see org.springframework.jdbc.core.JdbcTemplate#queryForRowSet(String)_@see org.springframework.jdbc.core.SqlRowSetResultSetExtractor_@see javax.sql.rowset.CachedRowSet;SqlRowSet queryForRowSet(String sql, SqlParameterSource paramSource) throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,expecting,a,sql,row,set,p,the,results,will,be,mapped,to,an,sql,row,set,which,holds,the,data,in,a,disconnected,fashion,this,wrapper,will,translate,any,sqlexceptions,thrown,p,note,that,for,the,default,implementation,jdbc,row,set,support,needs,to,be,available,at,runtime,by,default,sun,s,code,com,sun,rowset,cached,row,set,impl,class,is,used,which,is,part,of,jdk,1,5,and,also,available,separately,as,part,of,sun,s,jdbc,row,set,implementations,download,rowset,jar,param,sql,the,sql,query,to,execute,param,param,source,container,of,arguments,to,bind,to,the,query,return,a,sql,row,set,representation,possibly,a,wrapper,around,a,code,javax,sql,rowset,cached,row,set,throws,org,springframework,dao,data,access,exception,if,there,is,any,problem,executing,the,query,see,org,springframework,jdbc,core,jdbc,template,query,for,row,set,string,see,org,springframework,jdbc,core,sql,row,set,result,set,extractor,see,javax,sql,rowset,cached,row,set;sql,row,set,query,for,row,set,string,sql,sql,parameter,source,param,source,throws,data,access,exception
NamedParameterJdbcOperations -> <T> T queryForObject(String sql, Map<String, ?> paramMap, Class<T> requiredType) 			throws DataAccessException_;1328020251;Query given SQL to create a prepared statement from SQL and a_list of arguments to bind to the query, expecting a result object._<p>The query is expected to be a single row/single column query_ the returned_result will be directly mapped to the corresponding object type._@param sql SQL query to execute_@param paramMap map of parameters to bind to the query_(leaving it to the PreparedStatement to guess the corresponding SQL type)_@param requiredType the type that the result object is expected to match_@return the result object of the required type, or <code>null</code> in case of SQL NULL_@throws org.springframework.dao.IncorrectResultSizeDataAccessException_if the query does not return exactly one row, or does not return exactly_one column in that row_@throws org.springframework.dao.DataAccessException if the query fails_@see org.springframework.jdbc.core.JdbcTemplate#queryForObject(String, Class);<T> T queryForObject(String sql, Map<String, ?> paramMap, Class<T> requiredType)_			throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,expecting,a,result,object,p,the,query,is,expected,to,be,a,single,row,single,column,query,the,returned,result,will,be,directly,mapped,to,the,corresponding,object,type,param,sql,sql,query,to,execute,param,param,map,map,of,parameters,to,bind,to,the,query,leaving,it,to,the,prepared,statement,to,guess,the,corresponding,sql,type,param,required,type,the,type,that,the,result,object,is,expected,to,match,return,the,result,object,of,the,required,type,or,code,null,code,in,case,of,sql,null,throws,org,springframework,dao,incorrect,result,size,data,access,exception,if,the,query,does,not,return,exactly,one,row,or,does,not,return,exactly,one,column,in,that,row,throws,org,springframework,dao,data,access,exception,if,the,query,fails,see,org,springframework,jdbc,core,jdbc,template,query,for,object,string,class;t,t,query,for,object,string,sql,map,string,param,map,class,t,required,type,throws,data,access,exception
NamedParameterJdbcOperations -> <T> T queryForObject(String sql, Map<String, ?> paramMap, Class<T> requiredType) 			throws DataAccessException_;1356735495;Query given SQL to create a prepared statement from SQL and a_list of arguments to bind to the query, expecting a result object._<p>The query is expected to be a single row/single column query_ the returned_result will be directly mapped to the corresponding object type._@param sql SQL query to execute_@param paramMap map of parameters to bind to the query_(leaving it to the PreparedStatement to guess the corresponding SQL type)_@param requiredType the type that the result object is expected to match_@return the result object of the required type, or {@code null} in case of SQL NULL_@throws org.springframework.dao.IncorrectResultSizeDataAccessException_if the query does not return exactly one row, or does not return exactly_one column in that row_@throws org.springframework.dao.DataAccessException if the query fails_@see org.springframework.jdbc.core.JdbcTemplate#queryForObject(String, Class);<T> T queryForObject(String sql, Map<String, ?> paramMap, Class<T> requiredType)_			throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,expecting,a,result,object,p,the,query,is,expected,to,be,a,single,row,single,column,query,the,returned,result,will,be,directly,mapped,to,the,corresponding,object,type,param,sql,sql,query,to,execute,param,param,map,map,of,parameters,to,bind,to,the,query,leaving,it,to,the,prepared,statement,to,guess,the,corresponding,sql,type,param,required,type,the,type,that,the,result,object,is,expected,to,match,return,the,result,object,of,the,required,type,or,code,null,in,case,of,sql,null,throws,org,springframework,dao,incorrect,result,size,data,access,exception,if,the,query,does,not,return,exactly,one,row,or,does,not,return,exactly,one,column,in,that,row,throws,org,springframework,dao,data,access,exception,if,the,query,fails,see,org,springframework,jdbc,core,jdbc,template,query,for,object,string,class;t,t,query,for,object,string,sql,map,string,param,map,class,t,required,type,throws,data,access,exception
NamedParameterJdbcOperations -> <T> T queryForObject(String sql, Map<String, ?> paramMap, Class<T> requiredType) 			throws DataAccessException_;1362408075;Query given SQL to create a prepared statement from SQL and a_list of arguments to bind to the query, expecting a result object._<p>The query is expected to be a single row/single column query_ the returned_result will be directly mapped to the corresponding object type._@param sql SQL query to execute_@param paramMap map of parameters to bind to the query_(leaving it to the PreparedStatement to guess the corresponding SQL type)_@param requiredType the type that the result object is expected to match_@return the result object of the required type, or {@code null} in case of SQL NULL_@throws org.springframework.dao.IncorrectResultSizeDataAccessException_if the query does not return exactly one row, or does not return exactly_one column in that row_@throws org.springframework.dao.DataAccessException if the query fails_@see org.springframework.jdbc.core.JdbcTemplate#queryForObject(String, Class);<T> T queryForObject(String sql, Map<String, ?> paramMap, Class<T> requiredType)_			throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,expecting,a,result,object,p,the,query,is,expected,to,be,a,single,row,single,column,query,the,returned,result,will,be,directly,mapped,to,the,corresponding,object,type,param,sql,sql,query,to,execute,param,param,map,map,of,parameters,to,bind,to,the,query,leaving,it,to,the,prepared,statement,to,guess,the,corresponding,sql,type,param,required,type,the,type,that,the,result,object,is,expected,to,match,return,the,result,object,of,the,required,type,or,code,null,in,case,of,sql,null,throws,org,springframework,dao,incorrect,result,size,data,access,exception,if,the,query,does,not,return,exactly,one,row,or,does,not,return,exactly,one,column,in,that,row,throws,org,springframework,dao,data,access,exception,if,the,query,fails,see,org,springframework,jdbc,core,jdbc,template,query,for,object,string,class;t,t,query,for,object,string,sql,map,string,param,map,class,t,required,type,throws,data,access,exception
NamedParameterJdbcOperations -> <T> T queryForObject(String sql, Map<String, ?> paramMap, Class<T> requiredType) 			throws DataAccessException_;1419966315;Query given SQL to create a prepared statement from SQL and a_list of arguments to bind to the query, expecting a result object._<p>The query is expected to be a single row/single column query_ the returned_result will be directly mapped to the corresponding object type._@param sql SQL query to execute_@param paramMap map of parameters to bind to the query_(leaving it to the PreparedStatement to guess the corresponding SQL type)_@param requiredType the type that the result object is expected to match_@return the result object of the required type, or {@code null} in case of SQL NULL_@throws org.springframework.dao.IncorrectResultSizeDataAccessException_if the query does not return exactly one row, or does not return exactly_one column in that row_@throws org.springframework.dao.DataAccessException if the query fails_@see org.springframework.jdbc.core.JdbcTemplate#queryForObject(String, Class);<T> T queryForObject(String sql, Map<String, ?> paramMap, Class<T> requiredType)_			throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,expecting,a,result,object,p,the,query,is,expected,to,be,a,single,row,single,column,query,the,returned,result,will,be,directly,mapped,to,the,corresponding,object,type,param,sql,sql,query,to,execute,param,param,map,map,of,parameters,to,bind,to,the,query,leaving,it,to,the,prepared,statement,to,guess,the,corresponding,sql,type,param,required,type,the,type,that,the,result,object,is,expected,to,match,return,the,result,object,of,the,required,type,or,code,null,in,case,of,sql,null,throws,org,springframework,dao,incorrect,result,size,data,access,exception,if,the,query,does,not,return,exactly,one,row,or,does,not,return,exactly,one,column,in,that,row,throws,org,springframework,dao,data,access,exception,if,the,query,fails,see,org,springframework,jdbc,core,jdbc,template,query,for,object,string,class;t,t,query,for,object,string,sql,map,string,param,map,class,t,required,type,throws,data,access,exception
NamedParameterJdbcOperations -> <T> T queryForObject(String sql, Map<String, ?> paramMap, Class<T> requiredType) 			throws DataAccessException_;1491113276;Query given SQL to create a prepared statement from SQL and a_list of arguments to bind to the query, expecting a result object._<p>The query is expected to be a single row/single column query_ the returned_result will be directly mapped to the corresponding object type._@param sql SQL query to execute_@param paramMap map of parameters to bind to the query_(leaving it to the PreparedStatement to guess the corresponding SQL type)_@param requiredType the type that the result object is expected to match_@return the result object of the required type, or {@code null} in case of SQL NULL_@throws org.springframework.dao.IncorrectResultSizeDataAccessException_if the query does not return exactly one row, or does not return exactly_one column in that row_@throws org.springframework.dao.DataAccessException if the query fails_@see org.springframework.jdbc.core.JdbcTemplate#queryForObject(String, Class);<T> T queryForObject(String sql, Map<String, ?> paramMap, Class<T> requiredType)_			throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,expecting,a,result,object,p,the,query,is,expected,to,be,a,single,row,single,column,query,the,returned,result,will,be,directly,mapped,to,the,corresponding,object,type,param,sql,sql,query,to,execute,param,param,map,map,of,parameters,to,bind,to,the,query,leaving,it,to,the,prepared,statement,to,guess,the,corresponding,sql,type,param,required,type,the,type,that,the,result,object,is,expected,to,match,return,the,result,object,of,the,required,type,or,code,null,in,case,of,sql,null,throws,org,springframework,dao,incorrect,result,size,data,access,exception,if,the,query,does,not,return,exactly,one,row,or,does,not,return,exactly,one,column,in,that,row,throws,org,springframework,dao,data,access,exception,if,the,query,fails,see,org,springframework,jdbc,core,jdbc,template,query,for,object,string,class;t,t,query,for,object,string,sql,map,string,param,map,class,t,required,type,throws,data,access,exception
NamedParameterJdbcOperations -> int queryForInt(String sql, SqlParameterSource paramSource) throws DataAccessException_;1328020251;Query given SQL to create a prepared statement from SQL and a_list of arguments to bind to the query, resulting in an int value._<p>The query is expected to be a single row/single column query that_results in an int value._@param sql SQL query to execute_@param paramSource container of arguments to bind to the query_@return the int value, or 0 in case of SQL NULL_@throws org.springframework.dao.IncorrectResultSizeDataAccessException if the query does not return_exactly one row, or does not return exactly one column in that row_@throws org.springframework.dao.DataAccessException if the query fails_@see org.springframework.jdbc.core.JdbcTemplate#queryForInt(String);int queryForInt(String sql, SqlParameterSource paramSource) throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,resulting,in,an,int,value,p,the,query,is,expected,to,be,a,single,row,single,column,query,that,results,in,an,int,value,param,sql,sql,query,to,execute,param,param,source,container,of,arguments,to,bind,to,the,query,return,the,int,value,or,0,in,case,of,sql,null,throws,org,springframework,dao,incorrect,result,size,data,access,exception,if,the,query,does,not,return,exactly,one,row,or,does,not,return,exactly,one,column,in,that,row,throws,org,springframework,dao,data,access,exception,if,the,query,fails,see,org,springframework,jdbc,core,jdbc,template,query,for,int,string;int,query,for,int,string,sql,sql,parameter,source,param,source,throws,data,access,exception
NamedParameterJdbcOperations -> int queryForInt(String sql, SqlParameterSource paramSource) throws DataAccessException_;1356735495;Query given SQL to create a prepared statement from SQL and a_list of arguments to bind to the query, resulting in an int value._<p>The query is expected to be a single row/single column query that_results in an int value._@param sql SQL query to execute_@param paramSource container of arguments to bind to the query_@return the int value, or 0 in case of SQL NULL_@throws org.springframework.dao.IncorrectResultSizeDataAccessException if the query does not return_exactly one row, or does not return exactly one column in that row_@throws org.springframework.dao.DataAccessException if the query fails_@see org.springframework.jdbc.core.JdbcTemplate#queryForInt(String);int queryForInt(String sql, SqlParameterSource paramSource) throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,resulting,in,an,int,value,p,the,query,is,expected,to,be,a,single,row,single,column,query,that,results,in,an,int,value,param,sql,sql,query,to,execute,param,param,source,container,of,arguments,to,bind,to,the,query,return,the,int,value,or,0,in,case,of,sql,null,throws,org,springframework,dao,incorrect,result,size,data,access,exception,if,the,query,does,not,return,exactly,one,row,or,does,not,return,exactly,one,column,in,that,row,throws,org,springframework,dao,data,access,exception,if,the,query,fails,see,org,springframework,jdbc,core,jdbc,template,query,for,int,string;int,query,for,int,string,sql,sql,parameter,source,param,source,throws,data,access,exception
NamedParameterJdbcOperations -> @Nullable 	<T> T query(String sql, Map<String, ?> paramMap, ResultSetExtractor<T> rse) 			throws DataAccessException_;1496837955;Query given SQL to create a prepared statement from SQL and a list_of arguments to bind to the query, reading the ResultSet with a_ResultSetExtractor._@param sql SQL query to execute_@param paramMap map of parameters to bind to the query_(leaving it to the PreparedStatement to guess the corresponding SQL type)_@param rse object that will extract results_@return an arbitrary result object, as returned by the ResultSetExtractor_@throws org.springframework.dao.DataAccessException if the query fails;@Nullable_	<T> T query(String sql, Map<String, ?> paramMap, ResultSetExtractor<T> rse)_			throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,reading,the,result,set,with,a,result,set,extractor,param,sql,sql,query,to,execute,param,param,map,map,of,parameters,to,bind,to,the,query,leaving,it,to,the,prepared,statement,to,guess,the,corresponding,sql,type,param,rse,object,that,will,extract,results,return,an,arbitrary,result,object,as,returned,by,the,result,set,extractor,throws,org,springframework,dao,data,access,exception,if,the,query,fails;nullable,t,t,query,string,sql,map,string,param,map,result,set,extractor,t,rse,throws,data,access,exception
NamedParameterJdbcOperations -> @Nullable 	<T> T query(String sql, Map<String, ?> paramMap, ResultSetExtractor<T> rse) 			throws DataAccessException_;1502974979;Query given SQL to create a prepared statement from SQL and a list_of arguments to bind to the query, reading the ResultSet with a_ResultSetExtractor._@param sql SQL query to execute_@param paramMap map of parameters to bind to the query_(leaving it to the PreparedStatement to guess the corresponding SQL type)_@param rse object that will extract results_@return an arbitrary result object, as returned by the ResultSetExtractor_@throws org.springframework.dao.DataAccessException if the query fails;@Nullable_	<T> T query(String sql, Map<String, ?> paramMap, ResultSetExtractor<T> rse)_			throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,reading,the,result,set,with,a,result,set,extractor,param,sql,sql,query,to,execute,param,param,map,map,of,parameters,to,bind,to,the,query,leaving,it,to,the,prepared,statement,to,guess,the,corresponding,sql,type,param,rse,object,that,will,extract,results,return,an,arbitrary,result,object,as,returned,by,the,result,set,extractor,throws,org,springframework,dao,data,access,exception,if,the,query,fails;nullable,t,t,query,string,sql,map,string,param,map,result,set,extractor,t,rse,throws,data,access,exception
NamedParameterJdbcOperations -> @Nullable 	<T> T query(String sql, Map<String, ?> paramMap, ResultSetExtractor<T> rse) 			throws DataAccessException_;1511712999;Query given SQL to create a prepared statement from SQL and a list_of arguments to bind to the query, reading the ResultSet with a_ResultSetExtractor._@param sql SQL query to execute_@param paramMap map of parameters to bind to the query_(leaving it to the PreparedStatement to guess the corresponding SQL type)_@param rse object that will extract results_@return an arbitrary result object, as returned by the ResultSetExtractor_@throws org.springframework.dao.DataAccessException if the query fails;@Nullable_	<T> T query(String sql, Map<String, ?> paramMap, ResultSetExtractor<T> rse)_			throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,reading,the,result,set,with,a,result,set,extractor,param,sql,sql,query,to,execute,param,param,map,map,of,parameters,to,bind,to,the,query,leaving,it,to,the,prepared,statement,to,guess,the,corresponding,sql,type,param,rse,object,that,will,extract,results,return,an,arbitrary,result,object,as,returned,by,the,result,set,extractor,throws,org,springframework,dao,data,access,exception,if,the,query,fails;nullable,t,t,query,string,sql,map,string,param,map,result,set,extractor,t,rse,throws,data,access,exception
NamedParameterJdbcOperations -> @Nullable 	<T> T query(String sql, Map<String, ?> paramMap, ResultSetExtractor<T> rse) 			throws DataAccessException_;1530174524;Query given SQL to create a prepared statement from SQL and a list_of arguments to bind to the query, reading the ResultSet with a_ResultSetExtractor._@param sql the SQL query to execute_@param paramMap map of parameters to bind to the query_(leaving it to the PreparedStatement to guess the corresponding SQL type)_@param rse object that will extract results_@return an arbitrary result object, as returned by the ResultSetExtractor_@throws org.springframework.dao.DataAccessException if the query fails;@Nullable_	<T> T query(String sql, Map<String, ?> paramMap, ResultSetExtractor<T> rse)_			throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,reading,the,result,set,with,a,result,set,extractor,param,sql,the,sql,query,to,execute,param,param,map,map,of,parameters,to,bind,to,the,query,leaving,it,to,the,prepared,statement,to,guess,the,corresponding,sql,type,param,rse,object,that,will,extract,results,return,an,arbitrary,result,object,as,returned,by,the,result,set,extractor,throws,org,springframework,dao,data,access,exception,if,the,query,fails;nullable,t,t,query,string,sql,map,string,param,map,result,set,extractor,t,rse,throws,data,access,exception
NamedParameterJdbcOperations -> Map<String, Object> queryForMap(String sql, SqlParameterSource paramSource) throws DataAccessException_;1328020251;Query given SQL to create a prepared statement from SQL and a_list of arguments to bind to the query, expecting a result Map._<p>The query is expected to be a single row query_ the result row will be_mapped to a Map (one entry for each column, using the column name as the key)._@param sql SQL query to execute_@param paramSource container of arguments to bind to the query_@return the result Map (one entry for each column, using the column name as the key)_@throws org.springframework.dao.IncorrectResultSizeDataAccessException_if the query does not return exactly one row, or does not return exactly_one column in that row_@throws org.springframework.dao.DataAccessException if the query fails_@see org.springframework.jdbc.core.JdbcTemplate#queryForMap(String)_@see org.springframework.jdbc.core.ColumnMapRowMapper;Map<String, Object> queryForMap(String sql, SqlParameterSource paramSource) throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,expecting,a,result,map,p,the,query,is,expected,to,be,a,single,row,query,the,result,row,will,be,mapped,to,a,map,one,entry,for,each,column,using,the,column,name,as,the,key,param,sql,sql,query,to,execute,param,param,source,container,of,arguments,to,bind,to,the,query,return,the,result,map,one,entry,for,each,column,using,the,column,name,as,the,key,throws,org,springframework,dao,incorrect,result,size,data,access,exception,if,the,query,does,not,return,exactly,one,row,or,does,not,return,exactly,one,column,in,that,row,throws,org,springframework,dao,data,access,exception,if,the,query,fails,see,org,springframework,jdbc,core,jdbc,template,query,for,map,string,see,org,springframework,jdbc,core,column,map,row,mapper;map,string,object,query,for,map,string,sql,sql,parameter,source,param,source,throws,data,access,exception
NamedParameterJdbcOperations -> Map<String, Object> queryForMap(String sql, SqlParameterSource paramSource) throws DataAccessException_;1356735495;Query given SQL to create a prepared statement from SQL and a_list of arguments to bind to the query, expecting a result Map._<p>The query is expected to be a single row query_ the result row will be_mapped to a Map (one entry for each column, using the column name as the key)._@param sql SQL query to execute_@param paramSource container of arguments to bind to the query_@return the result Map (one entry for each column, using the column name as the key)_@throws org.springframework.dao.IncorrectResultSizeDataAccessException_if the query does not return exactly one row, or does not return exactly_one column in that row_@throws org.springframework.dao.DataAccessException if the query fails_@see org.springframework.jdbc.core.JdbcTemplate#queryForMap(String)_@see org.springframework.jdbc.core.ColumnMapRowMapper;Map<String, Object> queryForMap(String sql, SqlParameterSource paramSource) throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,expecting,a,result,map,p,the,query,is,expected,to,be,a,single,row,query,the,result,row,will,be,mapped,to,a,map,one,entry,for,each,column,using,the,column,name,as,the,key,param,sql,sql,query,to,execute,param,param,source,container,of,arguments,to,bind,to,the,query,return,the,result,map,one,entry,for,each,column,using,the,column,name,as,the,key,throws,org,springframework,dao,incorrect,result,size,data,access,exception,if,the,query,does,not,return,exactly,one,row,or,does,not,return,exactly,one,column,in,that,row,throws,org,springframework,dao,data,access,exception,if,the,query,fails,see,org,springframework,jdbc,core,jdbc,template,query,for,map,string,see,org,springframework,jdbc,core,column,map,row,mapper;map,string,object,query,for,map,string,sql,sql,parameter,source,param,source,throws,data,access,exception
NamedParameterJdbcOperations -> Map<String, Object> queryForMap(String sql, SqlParameterSource paramSource) throws DataAccessException_;1362408075;Query given SQL to create a prepared statement from SQL and a_list of arguments to bind to the query, expecting a result Map._<p>The query is expected to be a single row query_ the result row will be_mapped to a Map (one entry for each column, using the column name as the key)._@param sql SQL query to execute_@param paramSource container of arguments to bind to the query_@return the result Map (one entry for each column, using the column name as the key)_@throws org.springframework.dao.IncorrectResultSizeDataAccessException_if the query does not return exactly one row_@throws org.springframework.dao.DataAccessException if the query fails_@see org.springframework.jdbc.core.JdbcTemplate#queryForMap(String)_@see org.springframework.jdbc.core.ColumnMapRowMapper;Map<String, Object> queryForMap(String sql, SqlParameterSource paramSource) throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,expecting,a,result,map,p,the,query,is,expected,to,be,a,single,row,query,the,result,row,will,be,mapped,to,a,map,one,entry,for,each,column,using,the,column,name,as,the,key,param,sql,sql,query,to,execute,param,param,source,container,of,arguments,to,bind,to,the,query,return,the,result,map,one,entry,for,each,column,using,the,column,name,as,the,key,throws,org,springframework,dao,incorrect,result,size,data,access,exception,if,the,query,does,not,return,exactly,one,row,throws,org,springframework,dao,data,access,exception,if,the,query,fails,see,org,springframework,jdbc,core,jdbc,template,query,for,map,string,see,org,springframework,jdbc,core,column,map,row,mapper;map,string,object,query,for,map,string,sql,sql,parameter,source,param,source,throws,data,access,exception
NamedParameterJdbcOperations -> Map<String, Object> queryForMap(String sql, SqlParameterSource paramSource) throws DataAccessException_;1419966315;Query given SQL to create a prepared statement from SQL and a_list of arguments to bind to the query, expecting a result Map._<p>The query is expected to be a single row query_ the result row will be_mapped to a Map (one entry for each column, using the column name as the key)._@param sql SQL query to execute_@param paramSource container of arguments to bind to the query_@return the result Map (one entry for each column, using the column name as the key)_@throws org.springframework.dao.IncorrectResultSizeDataAccessException_if the query does not return exactly one row_@throws org.springframework.dao.DataAccessException if the query fails_@see org.springframework.jdbc.core.JdbcTemplate#queryForMap(String)_@see org.springframework.jdbc.core.ColumnMapRowMapper;Map<String, Object> queryForMap(String sql, SqlParameterSource paramSource) throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,expecting,a,result,map,p,the,query,is,expected,to,be,a,single,row,query,the,result,row,will,be,mapped,to,a,map,one,entry,for,each,column,using,the,column,name,as,the,key,param,sql,sql,query,to,execute,param,param,source,container,of,arguments,to,bind,to,the,query,return,the,result,map,one,entry,for,each,column,using,the,column,name,as,the,key,throws,org,springframework,dao,incorrect,result,size,data,access,exception,if,the,query,does,not,return,exactly,one,row,throws,org,springframework,dao,data,access,exception,if,the,query,fails,see,org,springframework,jdbc,core,jdbc,template,query,for,map,string,see,org,springframework,jdbc,core,column,map,row,mapper;map,string,object,query,for,map,string,sql,sql,parameter,source,param,source,throws,data,access,exception
NamedParameterJdbcOperations -> Map<String, Object> queryForMap(String sql, SqlParameterSource paramSource) throws DataAccessException_;1491113276;Query given SQL to create a prepared statement from SQL and a_list of arguments to bind to the query, expecting a result Map._<p>The query is expected to be a single row query_ the result row will be_mapped to a Map (one entry for each column, using the column name as the key)._@param sql SQL query to execute_@param paramSource container of arguments to bind to the query_@return the result Map (one entry for each column, using the column name as the key)_@throws org.springframework.dao.IncorrectResultSizeDataAccessException_if the query does not return exactly one row_@throws org.springframework.dao.DataAccessException if the query fails_@see org.springframework.jdbc.core.JdbcTemplate#queryForMap(String)_@see org.springframework.jdbc.core.ColumnMapRowMapper;Map<String, Object> queryForMap(String sql, SqlParameterSource paramSource) throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,expecting,a,result,map,p,the,query,is,expected,to,be,a,single,row,query,the,result,row,will,be,mapped,to,a,map,one,entry,for,each,column,using,the,column,name,as,the,key,param,sql,sql,query,to,execute,param,param,source,container,of,arguments,to,bind,to,the,query,return,the,result,map,one,entry,for,each,column,using,the,column,name,as,the,key,throws,org,springframework,dao,incorrect,result,size,data,access,exception,if,the,query,does,not,return,exactly,one,row,throws,org,springframework,dao,data,access,exception,if,the,query,fails,see,org,springframework,jdbc,core,jdbc,template,query,for,map,string,see,org,springframework,jdbc,core,column,map,row,mapper;map,string,object,query,for,map,string,sql,sql,parameter,source,param,source,throws,data,access,exception
NamedParameterJdbcOperations -> Map<String, Object> queryForMap(String sql, SqlParameterSource paramSource) throws DataAccessException_;1495868221;Query given SQL to create a prepared statement from SQL and a_list of arguments to bind to the query, expecting a result Map._<p>The query is expected to be a single row query_ the result row will be_mapped to a Map (one entry for each column, using the column name as the key)._@param sql SQL query to execute_@param paramSource container of arguments to bind to the query_@return the result Map (one entry for each column, using the column name as the key)_@throws org.springframework.dao.IncorrectResultSizeDataAccessException_if the query does not return exactly one row_@throws org.springframework.dao.DataAccessException if the query fails_@see org.springframework.jdbc.core.JdbcTemplate#queryForMap(String)_@see org.springframework.jdbc.core.ColumnMapRowMapper;Map<String, Object> queryForMap(String sql, SqlParameterSource paramSource) throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,expecting,a,result,map,p,the,query,is,expected,to,be,a,single,row,query,the,result,row,will,be,mapped,to,a,map,one,entry,for,each,column,using,the,column,name,as,the,key,param,sql,sql,query,to,execute,param,param,source,container,of,arguments,to,bind,to,the,query,return,the,result,map,one,entry,for,each,column,using,the,column,name,as,the,key,throws,org,springframework,dao,incorrect,result,size,data,access,exception,if,the,query,does,not,return,exactly,one,row,throws,org,springframework,dao,data,access,exception,if,the,query,fails,see,org,springframework,jdbc,core,jdbc,template,query,for,map,string,see,org,springframework,jdbc,core,column,map,row,mapper;map,string,object,query,for,map,string,sql,sql,parameter,source,param,source,throws,data,access,exception
NamedParameterJdbcOperations -> Map<String, Object> queryForMap(String sql, SqlParameterSource paramSource) throws DataAccessException_;1496837955;Query given SQL to create a prepared statement from SQL and a_list of arguments to bind to the query, expecting a result Map._<p>The query is expected to be a single row query_ the result row will be_mapped to a Map (one entry for each column, using the column name as the key)._@param sql SQL query to execute_@param paramSource container of arguments to bind to the query_@return the result Map (one entry for each column, using the column name as the key)_@throws org.springframework.dao.IncorrectResultSizeDataAccessException_if the query does not return exactly one row_@throws org.springframework.dao.DataAccessException if the query fails_@see org.springframework.jdbc.core.JdbcTemplate#queryForMap(String)_@see org.springframework.jdbc.core.ColumnMapRowMapper;Map<String, Object> queryForMap(String sql, SqlParameterSource paramSource) throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,expecting,a,result,map,p,the,query,is,expected,to,be,a,single,row,query,the,result,row,will,be,mapped,to,a,map,one,entry,for,each,column,using,the,column,name,as,the,key,param,sql,sql,query,to,execute,param,param,source,container,of,arguments,to,bind,to,the,query,return,the,result,map,one,entry,for,each,column,using,the,column,name,as,the,key,throws,org,springframework,dao,incorrect,result,size,data,access,exception,if,the,query,does,not,return,exactly,one,row,throws,org,springframework,dao,data,access,exception,if,the,query,fails,see,org,springframework,jdbc,core,jdbc,template,query,for,map,string,see,org,springframework,jdbc,core,column,map,row,mapper;map,string,object,query,for,map,string,sql,sql,parameter,source,param,source,throws,data,access,exception
NamedParameterJdbcOperations -> Map<String, Object> queryForMap(String sql, SqlParameterSource paramSource) throws DataAccessException_;1502974979;Query given SQL to create a prepared statement from SQL and a_list of arguments to bind to the query, expecting a result Map._<p>The query is expected to be a single row query_ the result row will be_mapped to a Map (one entry for each column, using the column name as the key)._@param sql SQL query to execute_@param paramSource container of arguments to bind to the query_@return the result Map (one entry for each column, using the column name as the key)_@throws org.springframework.dao.IncorrectResultSizeDataAccessException_if the query does not return exactly one row_@throws org.springframework.dao.DataAccessException if the query fails_@see org.springframework.jdbc.core.JdbcTemplate#queryForMap(String)_@see org.springframework.jdbc.core.ColumnMapRowMapper;Map<String, Object> queryForMap(String sql, SqlParameterSource paramSource) throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,expecting,a,result,map,p,the,query,is,expected,to,be,a,single,row,query,the,result,row,will,be,mapped,to,a,map,one,entry,for,each,column,using,the,column,name,as,the,key,param,sql,sql,query,to,execute,param,param,source,container,of,arguments,to,bind,to,the,query,return,the,result,map,one,entry,for,each,column,using,the,column,name,as,the,key,throws,org,springframework,dao,incorrect,result,size,data,access,exception,if,the,query,does,not,return,exactly,one,row,throws,org,springframework,dao,data,access,exception,if,the,query,fails,see,org,springframework,jdbc,core,jdbc,template,query,for,map,string,see,org,springframework,jdbc,core,column,map,row,mapper;map,string,object,query,for,map,string,sql,sql,parameter,source,param,source,throws,data,access,exception
NamedParameterJdbcOperations -> Map<String, Object> queryForMap(String sql, SqlParameterSource paramSource) throws DataAccessException_;1511712999;Query given SQL to create a prepared statement from SQL and a_list of arguments to bind to the query, expecting a result Map._<p>The query is expected to be a single row query_ the result row will be_mapped to a Map (one entry for each column, using the column name as the key)._@param sql SQL query to execute_@param paramSource container of arguments to bind to the query_@return the result Map (one entry for each column, using the column name as the key)_@throws org.springframework.dao.IncorrectResultSizeDataAccessException_if the query does not return exactly one row_@throws org.springframework.dao.DataAccessException if the query fails_@see org.springframework.jdbc.core.JdbcTemplate#queryForMap(String)_@see org.springframework.jdbc.core.ColumnMapRowMapper;Map<String, Object> queryForMap(String sql, SqlParameterSource paramSource) throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,expecting,a,result,map,p,the,query,is,expected,to,be,a,single,row,query,the,result,row,will,be,mapped,to,a,map,one,entry,for,each,column,using,the,column,name,as,the,key,param,sql,sql,query,to,execute,param,param,source,container,of,arguments,to,bind,to,the,query,return,the,result,map,one,entry,for,each,column,using,the,column,name,as,the,key,throws,org,springframework,dao,incorrect,result,size,data,access,exception,if,the,query,does,not,return,exactly,one,row,throws,org,springframework,dao,data,access,exception,if,the,query,fails,see,org,springframework,jdbc,core,jdbc,template,query,for,map,string,see,org,springframework,jdbc,core,column,map,row,mapper;map,string,object,query,for,map,string,sql,sql,parameter,source,param,source,throws,data,access,exception
NamedParameterJdbcOperations -> Map<String, Object> queryForMap(String sql, SqlParameterSource paramSource) throws DataAccessException_;1530174524;Query given SQL to create a prepared statement from SQL and a_list of arguments to bind to the query, expecting a result Map._<p>The query is expected to be a single row query_ the result row will be_mapped to a Map (one entry for each column, using the column name as the key)._@param sql the SQL query to execute_@param paramSource container of arguments to bind to the query_@return the result Map (one entry for each column, using the column name as the key)_@throws org.springframework.dao.IncorrectResultSizeDataAccessException_if the query does not return exactly one row_@throws org.springframework.dao.DataAccessException if the query fails_@see org.springframework.jdbc.core.JdbcTemplate#queryForMap(String)_@see org.springframework.jdbc.core.ColumnMapRowMapper;Map<String, Object> queryForMap(String sql, SqlParameterSource paramSource) throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,expecting,a,result,map,p,the,query,is,expected,to,be,a,single,row,query,the,result,row,will,be,mapped,to,a,map,one,entry,for,each,column,using,the,column,name,as,the,key,param,sql,the,sql,query,to,execute,param,param,source,container,of,arguments,to,bind,to,the,query,return,the,result,map,one,entry,for,each,column,using,the,column,name,as,the,key,throws,org,springframework,dao,incorrect,result,size,data,access,exception,if,the,query,does,not,return,exactly,one,row,throws,org,springframework,dao,data,access,exception,if,the,query,fails,see,org,springframework,jdbc,core,jdbc,template,query,for,map,string,see,org,springframework,jdbc,core,column,map,row,mapper;map,string,object,query,for,map,string,sql,sql,parameter,source,param,source,throws,data,access,exception
NamedParameterJdbcOperations -> void query(String sql, RowCallbackHandler rch) throws DataAccessException_;1362408075;Query given SQL to create a prepared statement from SQL,_reading the ResultSet on a per-row basis with a RowCallbackHandler._<p>Note: In contrast to the JdbcOperations method with the same signature,_this query variant always uses a PreparedStatement. It is effectively_equivalent to a query call with an empty parameter Map._@param sql SQL query to execute_@param rch object that will extract results, one row at a time_@throws org.springframework.dao.DataAccessException if the query fails;void query(String sql, RowCallbackHandler rch) throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,reading,the,result,set,on,a,per,row,basis,with,a,row,callback,handler,p,note,in,contrast,to,the,jdbc,operations,method,with,the,same,signature,this,query,variant,always,uses,a,prepared,statement,it,is,effectively,equivalent,to,a,query,call,with,an,empty,parameter,map,param,sql,sql,query,to,execute,param,rch,object,that,will,extract,results,one,row,at,a,time,throws,org,springframework,dao,data,access,exception,if,the,query,fails;void,query,string,sql,row,callback,handler,rch,throws,data,access,exception
NamedParameterJdbcOperations -> void query(String sql, RowCallbackHandler rch) throws DataAccessException_;1419966315;Query given SQL to create a prepared statement from SQL,_reading the ResultSet on a per-row basis with a RowCallbackHandler._<p>Note: In contrast to the JdbcOperations method with the same signature,_this query variant always uses a PreparedStatement. It is effectively_equivalent to a query call with an empty parameter Map._@param sql SQL query to execute_@param rch object that will extract results, one row at a time_@throws org.springframework.dao.DataAccessException if the query fails;void query(String sql, RowCallbackHandler rch) throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,reading,the,result,set,on,a,per,row,basis,with,a,row,callback,handler,p,note,in,contrast,to,the,jdbc,operations,method,with,the,same,signature,this,query,variant,always,uses,a,prepared,statement,it,is,effectively,equivalent,to,a,query,call,with,an,empty,parameter,map,param,sql,sql,query,to,execute,param,rch,object,that,will,extract,results,one,row,at,a,time,throws,org,springframework,dao,data,access,exception,if,the,query,fails;void,query,string,sql,row,callback,handler,rch,throws,data,access,exception
NamedParameterJdbcOperations -> void query(String sql, RowCallbackHandler rch) throws DataAccessException_;1491113276;Query given SQL to create a prepared statement from SQL,_reading the ResultSet on a per-row basis with a RowCallbackHandler._<p>Note: In contrast to the JdbcOperations method with the same signature,_this query variant always uses a PreparedStatement. It is effectively_equivalent to a query call with an empty parameter Map._@param sql SQL query to execute_@param rch object that will extract results, one row at a time_@throws org.springframework.dao.DataAccessException if the query fails;void query(String sql, RowCallbackHandler rch) throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,reading,the,result,set,on,a,per,row,basis,with,a,row,callback,handler,p,note,in,contrast,to,the,jdbc,operations,method,with,the,same,signature,this,query,variant,always,uses,a,prepared,statement,it,is,effectively,equivalent,to,a,query,call,with,an,empty,parameter,map,param,sql,sql,query,to,execute,param,rch,object,that,will,extract,results,one,row,at,a,time,throws,org,springframework,dao,data,access,exception,if,the,query,fails;void,query,string,sql,row,callback,handler,rch,throws,data,access,exception
NamedParameterJdbcOperations -> void query(String sql, RowCallbackHandler rch) throws DataAccessException_;1495868221;Query given SQL to create a prepared statement from SQL,_reading the ResultSet on a per-row basis with a RowCallbackHandler._<p>Note: In contrast to the JdbcOperations method with the same signature,_this query variant always uses a PreparedStatement. It is effectively_equivalent to a query call with an empty parameter Map._@param sql SQL query to execute_@param rch object that will extract results, one row at a time_@throws org.springframework.dao.DataAccessException if the query fails;void query(String sql, RowCallbackHandler rch) throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,reading,the,result,set,on,a,per,row,basis,with,a,row,callback,handler,p,note,in,contrast,to,the,jdbc,operations,method,with,the,same,signature,this,query,variant,always,uses,a,prepared,statement,it,is,effectively,equivalent,to,a,query,call,with,an,empty,parameter,map,param,sql,sql,query,to,execute,param,rch,object,that,will,extract,results,one,row,at,a,time,throws,org,springframework,dao,data,access,exception,if,the,query,fails;void,query,string,sql,row,callback,handler,rch,throws,data,access,exception
NamedParameterJdbcOperations -> void query(String sql, RowCallbackHandler rch) throws DataAccessException_;1496837955;Query given SQL to create a prepared statement from SQL,_reading the ResultSet on a per-row basis with a RowCallbackHandler._<p>Note: In contrast to the JdbcOperations method with the same signature,_this query variant always uses a PreparedStatement. It is effectively_equivalent to a query call with an empty parameter Map._@param sql SQL query to execute_@param rch object that will extract results, one row at a time_@throws org.springframework.dao.DataAccessException if the query fails;void query(String sql, RowCallbackHandler rch) throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,reading,the,result,set,on,a,per,row,basis,with,a,row,callback,handler,p,note,in,contrast,to,the,jdbc,operations,method,with,the,same,signature,this,query,variant,always,uses,a,prepared,statement,it,is,effectively,equivalent,to,a,query,call,with,an,empty,parameter,map,param,sql,sql,query,to,execute,param,rch,object,that,will,extract,results,one,row,at,a,time,throws,org,springframework,dao,data,access,exception,if,the,query,fails;void,query,string,sql,row,callback,handler,rch,throws,data,access,exception
NamedParameterJdbcOperations -> void query(String sql, RowCallbackHandler rch) throws DataAccessException_;1502974979;Query given SQL to create a prepared statement from SQL,_reading the ResultSet on a per-row basis with a RowCallbackHandler._<p>Note: In contrast to the JdbcOperations method with the same signature,_this query variant always uses a PreparedStatement. It is effectively_equivalent to a query call with an empty parameter Map._@param sql SQL query to execute_@param rch object that will extract results, one row at a time_@throws org.springframework.dao.DataAccessException if the query fails;void query(String sql, RowCallbackHandler rch) throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,reading,the,result,set,on,a,per,row,basis,with,a,row,callback,handler,p,note,in,contrast,to,the,jdbc,operations,method,with,the,same,signature,this,query,variant,always,uses,a,prepared,statement,it,is,effectively,equivalent,to,a,query,call,with,an,empty,parameter,map,param,sql,sql,query,to,execute,param,rch,object,that,will,extract,results,one,row,at,a,time,throws,org,springframework,dao,data,access,exception,if,the,query,fails;void,query,string,sql,row,callback,handler,rch,throws,data,access,exception
NamedParameterJdbcOperations -> void query(String sql, RowCallbackHandler rch) throws DataAccessException_;1511712999;Query given SQL to create a prepared statement from SQL,_reading the ResultSet on a per-row basis with a RowCallbackHandler._<p>Note: In contrast to the JdbcOperations method with the same signature,_this query variant always uses a PreparedStatement. It is effectively_equivalent to a query call with an empty parameter Map._@param sql SQL query to execute_@param rch object that will extract results, one row at a time_@throws org.springframework.dao.DataAccessException if the query fails;void query(String sql, RowCallbackHandler rch) throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,reading,the,result,set,on,a,per,row,basis,with,a,row,callback,handler,p,note,in,contrast,to,the,jdbc,operations,method,with,the,same,signature,this,query,variant,always,uses,a,prepared,statement,it,is,effectively,equivalent,to,a,query,call,with,an,empty,parameter,map,param,sql,sql,query,to,execute,param,rch,object,that,will,extract,results,one,row,at,a,time,throws,org,springframework,dao,data,access,exception,if,the,query,fails;void,query,string,sql,row,callback,handler,rch,throws,data,access,exception
NamedParameterJdbcOperations -> void query(String sql, RowCallbackHandler rch) throws DataAccessException_;1530174524;Query given SQL to create a prepared statement from SQL,_reading the ResultSet on a per-row basis with a RowCallbackHandler._<p>Note: In contrast to the JdbcOperations method with the same signature,_this query variant always uses a PreparedStatement. It is effectively_equivalent to a query call with an empty parameter Map._@param sql the SQL query to execute_@param rch object that will extract results, one row at a time_@throws org.springframework.dao.DataAccessException if the query fails;void query(String sql, RowCallbackHandler rch) throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,reading,the,result,set,on,a,per,row,basis,with,a,row,callback,handler,p,note,in,contrast,to,the,jdbc,operations,method,with,the,same,signature,this,query,variant,always,uses,a,prepared,statement,it,is,effectively,equivalent,to,a,query,call,with,an,empty,parameter,map,param,sql,the,sql,query,to,execute,param,rch,object,that,will,extract,results,one,row,at,a,time,throws,org,springframework,dao,data,access,exception,if,the,query,fails;void,query,string,sql,row,callback,handler,rch,throws,data,access,exception
NamedParameterJdbcOperations -> <T> T execute(String sql, PreparedStatementCallback<T> action) throws DataAccessException_;1362408075;Execute a JDBC data access operation, implemented as callback action_working on a JDBC PreparedStatement. This allows for implementing arbitrary_data access operations on a single Statement, within Spring's managed_JDBC environment: that is, participating in Spring-managed transactions_and converting JDBC SQLExceptions into Spring's DataAccessException hierarchy._<p>The callback action can return a result object, for example a_domain object or a collection of domain objects._@param sql SQL to execute_@param action callback object that specifies the action_@return a result object returned by the action, or {@code null}_@throws DataAccessException if there is any problem;<T> T execute(String sql, PreparedStatementCallback<T> action) throws DataAccessException_;execute,a,jdbc,data,access,operation,implemented,as,callback,action,working,on,a,jdbc,prepared,statement,this,allows,for,implementing,arbitrary,data,access,operations,on,a,single,statement,within,spring,s,managed,jdbc,environment,that,is,participating,in,spring,managed,transactions,and,converting,jdbc,sqlexceptions,into,spring,s,data,access,exception,hierarchy,p,the,callback,action,can,return,a,result,object,for,example,a,domain,object,or,a,collection,of,domain,objects,param,sql,sql,to,execute,param,action,callback,object,that,specifies,the,action,return,a,result,object,returned,by,the,action,or,code,null,throws,data,access,exception,if,there,is,any,problem;t,t,execute,string,sql,prepared,statement,callback,t,action,throws,data,access,exception
NamedParameterJdbcOperations -> <T> T execute(String sql, PreparedStatementCallback<T> action) throws DataAccessException_;1419966315;Execute a JDBC data access operation, implemented as callback action_working on a JDBC PreparedStatement. This allows for implementing arbitrary_data access operations on a single Statement, within Spring's managed_JDBC environment: that is, participating in Spring-managed transactions_and converting JDBC SQLExceptions into Spring's DataAccessException hierarchy._<p>The callback action can return a result object, for example a_domain object or a collection of domain objects._@param sql SQL to execute_@param action callback object that specifies the action_@return a result object returned by the action, or {@code null}_@throws DataAccessException if there is any problem;<T> T execute(String sql, PreparedStatementCallback<T> action) throws DataAccessException_;execute,a,jdbc,data,access,operation,implemented,as,callback,action,working,on,a,jdbc,prepared,statement,this,allows,for,implementing,arbitrary,data,access,operations,on,a,single,statement,within,spring,s,managed,jdbc,environment,that,is,participating,in,spring,managed,transactions,and,converting,jdbc,sqlexceptions,into,spring,s,data,access,exception,hierarchy,p,the,callback,action,can,return,a,result,object,for,example,a,domain,object,or,a,collection,of,domain,objects,param,sql,sql,to,execute,param,action,callback,object,that,specifies,the,action,return,a,result,object,returned,by,the,action,or,code,null,throws,data,access,exception,if,there,is,any,problem;t,t,execute,string,sql,prepared,statement,callback,t,action,throws,data,access,exception
NamedParameterJdbcOperations -> <T> T execute(String sql, PreparedStatementCallback<T> action) throws DataAccessException_;1491113276;Execute a JDBC data access operation, implemented as callback action_working on a JDBC PreparedStatement. This allows for implementing arbitrary_data access operations on a single Statement, within Spring's managed_JDBC environment: that is, participating in Spring-managed transactions_and converting JDBC SQLExceptions into Spring's DataAccessException hierarchy._<p>The callback action can return a result object, for example a_domain object or a collection of domain objects._@param sql SQL to execute_@param action callback object that specifies the action_@return a result object returned by the action, or {@code null}_@throws DataAccessException if there is any problem;<T> T execute(String sql, PreparedStatementCallback<T> action) throws DataAccessException_;execute,a,jdbc,data,access,operation,implemented,as,callback,action,working,on,a,jdbc,prepared,statement,this,allows,for,implementing,arbitrary,data,access,operations,on,a,single,statement,within,spring,s,managed,jdbc,environment,that,is,participating,in,spring,managed,transactions,and,converting,jdbc,sqlexceptions,into,spring,s,data,access,exception,hierarchy,p,the,callback,action,can,return,a,result,object,for,example,a,domain,object,or,a,collection,of,domain,objects,param,sql,sql,to,execute,param,action,callback,object,that,specifies,the,action,return,a,result,object,returned,by,the,action,or,code,null,throws,data,access,exception,if,there,is,any,problem;t,t,execute,string,sql,prepared,statement,callback,t,action,throws,data,access,exception
NamedParameterJdbcOperations -> @Nullable 	<T> T execute(String sql, SqlParameterSource paramSource, PreparedStatementCallback<T> action) 			throws DataAccessException_;1495868221;Execute a JDBC data access operation, implemented as callback action_working on a JDBC PreparedStatement. This allows for implementing arbitrary_data access operations on a single Statement, within Spring's managed_JDBC environment: that is, participating in Spring-managed transactions_and converting JDBC SQLExceptions into Spring's DataAccessException hierarchy._<p>The callback action can return a result object, for example a_domain object or a collection of domain objects._@param sql SQL to execute_@param paramSource container of arguments to bind to the query_@param action callback object that specifies the action_@return a result object returned by the action, or {@code null}_@throws DataAccessException if there is any problem;@Nullable_	<T> T execute(String sql, SqlParameterSource paramSource, PreparedStatementCallback<T> action)_			throws DataAccessException_;execute,a,jdbc,data,access,operation,implemented,as,callback,action,working,on,a,jdbc,prepared,statement,this,allows,for,implementing,arbitrary,data,access,operations,on,a,single,statement,within,spring,s,managed,jdbc,environment,that,is,participating,in,spring,managed,transactions,and,converting,jdbc,sqlexceptions,into,spring,s,data,access,exception,hierarchy,p,the,callback,action,can,return,a,result,object,for,example,a,domain,object,or,a,collection,of,domain,objects,param,sql,sql,to,execute,param,param,source,container,of,arguments,to,bind,to,the,query,param,action,callback,object,that,specifies,the,action,return,a,result,object,returned,by,the,action,or,code,null,throws,data,access,exception,if,there,is,any,problem;nullable,t,t,execute,string,sql,sql,parameter,source,param,source,prepared,statement,callback,t,action,throws,data,access,exception
NamedParameterJdbcOperations -> @Nullable 	<T> T execute(String sql, SqlParameterSource paramSource, PreparedStatementCallback<T> action) 			throws DataAccessException_;1496837955;Execute a JDBC data access operation, implemented as callback action_working on a JDBC PreparedStatement. This allows for implementing arbitrary_data access operations on a single Statement, within Spring's managed_JDBC environment: that is, participating in Spring-managed transactions_and converting JDBC SQLExceptions into Spring's DataAccessException hierarchy._<p>The callback action can return a result object, for example a_domain object or a collection of domain objects._@param sql SQL to execute_@param paramSource container of arguments to bind to the query_@param action callback object that specifies the action_@return a result object returned by the action, or {@code null}_@throws DataAccessException if there is any problem;@Nullable_	<T> T execute(String sql, SqlParameterSource paramSource, PreparedStatementCallback<T> action)_			throws DataAccessException_;execute,a,jdbc,data,access,operation,implemented,as,callback,action,working,on,a,jdbc,prepared,statement,this,allows,for,implementing,arbitrary,data,access,operations,on,a,single,statement,within,spring,s,managed,jdbc,environment,that,is,participating,in,spring,managed,transactions,and,converting,jdbc,sqlexceptions,into,spring,s,data,access,exception,hierarchy,p,the,callback,action,can,return,a,result,object,for,example,a,domain,object,or,a,collection,of,domain,objects,param,sql,sql,to,execute,param,param,source,container,of,arguments,to,bind,to,the,query,param,action,callback,object,that,specifies,the,action,return,a,result,object,returned,by,the,action,or,code,null,throws,data,access,exception,if,there,is,any,problem;nullable,t,t,execute,string,sql,sql,parameter,source,param,source,prepared,statement,callback,t,action,throws,data,access,exception
NamedParameterJdbcOperations -> @Nullable 	<T> T execute(String sql, SqlParameterSource paramSource, PreparedStatementCallback<T> action) 			throws DataAccessException_;1502974979;Execute a JDBC data access operation, implemented as callback action_working on a JDBC PreparedStatement. This allows for implementing arbitrary_data access operations on a single Statement, within Spring's managed_JDBC environment: that is, participating in Spring-managed transactions_and converting JDBC SQLExceptions into Spring's DataAccessException hierarchy._<p>The callback action can return a result object, for example a_domain object or a collection of domain objects._@param sql SQL to execute_@param paramSource container of arguments to bind to the query_@param action callback object that specifies the action_@return a result object returned by the action, or {@code null}_@throws DataAccessException if there is any problem;@Nullable_	<T> T execute(String sql, SqlParameterSource paramSource, PreparedStatementCallback<T> action)_			throws DataAccessException_;execute,a,jdbc,data,access,operation,implemented,as,callback,action,working,on,a,jdbc,prepared,statement,this,allows,for,implementing,arbitrary,data,access,operations,on,a,single,statement,within,spring,s,managed,jdbc,environment,that,is,participating,in,spring,managed,transactions,and,converting,jdbc,sqlexceptions,into,spring,s,data,access,exception,hierarchy,p,the,callback,action,can,return,a,result,object,for,example,a,domain,object,or,a,collection,of,domain,objects,param,sql,sql,to,execute,param,param,source,container,of,arguments,to,bind,to,the,query,param,action,callback,object,that,specifies,the,action,return,a,result,object,returned,by,the,action,or,code,null,throws,data,access,exception,if,there,is,any,problem;nullable,t,t,execute,string,sql,sql,parameter,source,param,source,prepared,statement,callback,t,action,throws,data,access,exception
NamedParameterJdbcOperations -> @Nullable 	<T> T execute(String sql, SqlParameterSource paramSource, PreparedStatementCallback<T> action) 			throws DataAccessException_;1511712999;Execute a JDBC data access operation, implemented as callback action_working on a JDBC PreparedStatement. This allows for implementing arbitrary_data access operations on a single Statement, within Spring's managed_JDBC environment: that is, participating in Spring-managed transactions_and converting JDBC SQLExceptions into Spring's DataAccessException hierarchy._<p>The callback action can return a result object, for example a_domain object or a collection of domain objects._@param sql SQL to execute_@param paramSource container of arguments to bind to the query_@param action callback object that specifies the action_@return a result object returned by the action, or {@code null}_@throws DataAccessException if there is any problem;@Nullable_	<T> T execute(String sql, SqlParameterSource paramSource, PreparedStatementCallback<T> action)_			throws DataAccessException_;execute,a,jdbc,data,access,operation,implemented,as,callback,action,working,on,a,jdbc,prepared,statement,this,allows,for,implementing,arbitrary,data,access,operations,on,a,single,statement,within,spring,s,managed,jdbc,environment,that,is,participating,in,spring,managed,transactions,and,converting,jdbc,sqlexceptions,into,spring,s,data,access,exception,hierarchy,p,the,callback,action,can,return,a,result,object,for,example,a,domain,object,or,a,collection,of,domain,objects,param,sql,sql,to,execute,param,param,source,container,of,arguments,to,bind,to,the,query,param,action,callback,object,that,specifies,the,action,return,a,result,object,returned,by,the,action,or,code,null,throws,data,access,exception,if,there,is,any,problem;nullable,t,t,execute,string,sql,sql,parameter,source,param,source,prepared,statement,callback,t,action,throws,data,access,exception
NamedParameterJdbcOperations -> @Nullable 	<T> T execute(String sql, SqlParameterSource paramSource, PreparedStatementCallback<T> action) 			throws DataAccessException_;1530174524;Execute a JDBC data access operation, implemented as callback action_working on a JDBC PreparedStatement. This allows for implementing arbitrary_data access operations on a single Statement, within Spring's managed_JDBC environment: that is, participating in Spring-managed transactions_and converting JDBC SQLExceptions into Spring's DataAccessException hierarchy._<p>The callback action can return a result object, for example a_domain object or a collection of domain objects._@param sql the SQL to execute_@param paramSource container of arguments to bind to the query_@param action callback object that specifies the action_@return a result object returned by the action, or {@code null}_@throws DataAccessException if there is any problem;@Nullable_	<T> T execute(String sql, SqlParameterSource paramSource, PreparedStatementCallback<T> action)_			throws DataAccessException_;execute,a,jdbc,data,access,operation,implemented,as,callback,action,working,on,a,jdbc,prepared,statement,this,allows,for,implementing,arbitrary,data,access,operations,on,a,single,statement,within,spring,s,managed,jdbc,environment,that,is,participating,in,spring,managed,transactions,and,converting,jdbc,sqlexceptions,into,spring,s,data,access,exception,hierarchy,p,the,callback,action,can,return,a,result,object,for,example,a,domain,object,or,a,collection,of,domain,objects,param,sql,the,sql,to,execute,param,param,source,container,of,arguments,to,bind,to,the,query,param,action,callback,object,that,specifies,the,action,return,a,result,object,returned,by,the,action,or,code,null,throws,data,access,exception,if,there,is,any,problem;nullable,t,t,execute,string,sql,sql,parameter,source,param,source,prepared,statement,callback,t,action,throws,data,access,exception
NamedParameterJdbcOperations -> <T> List<T> query(String sql, Map<String, ?> paramMap, RowMapper<T> rowMapper) 			throws DataAccessException_;1328020251;Query given SQL to create a prepared statement from SQL and a list_of arguments to bind to the query, mapping each row to a Java object_via a RowMapper._@param sql SQL query to execute_@param paramMap map of parameters to bind to the query_(leaving it to the PreparedStatement to guess the corresponding SQL type)_@param rowMapper object that will map one object per row_@return the result List, containing mapped objects_@throws org.springframework.dao.DataAccessException if the query fails;<T> List<T> query(String sql, Map<String, ?> paramMap, RowMapper<T> rowMapper)_			throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,mapping,each,row,to,a,java,object,via,a,row,mapper,param,sql,sql,query,to,execute,param,param,map,map,of,parameters,to,bind,to,the,query,leaving,it,to,the,prepared,statement,to,guess,the,corresponding,sql,type,param,row,mapper,object,that,will,map,one,object,per,row,return,the,result,list,containing,mapped,objects,throws,org,springframework,dao,data,access,exception,if,the,query,fails;t,list,t,query,string,sql,map,string,param,map,row,mapper,t,row,mapper,throws,data,access,exception
NamedParameterJdbcOperations -> <T> List<T> query(String sql, Map<String, ?> paramMap, RowMapper<T> rowMapper) 			throws DataAccessException_;1356735495;Query given SQL to create a prepared statement from SQL and a list_of arguments to bind to the query, mapping each row to a Java object_via a RowMapper._@param sql SQL query to execute_@param paramMap map of parameters to bind to the query_(leaving it to the PreparedStatement to guess the corresponding SQL type)_@param rowMapper object that will map one object per row_@return the result List, containing mapped objects_@throws org.springframework.dao.DataAccessException if the query fails;<T> List<T> query(String sql, Map<String, ?> paramMap, RowMapper<T> rowMapper)_			throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,mapping,each,row,to,a,java,object,via,a,row,mapper,param,sql,sql,query,to,execute,param,param,map,map,of,parameters,to,bind,to,the,query,leaving,it,to,the,prepared,statement,to,guess,the,corresponding,sql,type,param,row,mapper,object,that,will,map,one,object,per,row,return,the,result,list,containing,mapped,objects,throws,org,springframework,dao,data,access,exception,if,the,query,fails;t,list,t,query,string,sql,map,string,param,map,row,mapper,t,row,mapper,throws,data,access,exception
NamedParameterJdbcOperations -> <T> List<T> query(String sql, Map<String, ?> paramMap, RowMapper<T> rowMapper) 			throws DataAccessException_;1362408075;Query given SQL to create a prepared statement from SQL and a list_of arguments to bind to the query, mapping each row to a Java object_via a RowMapper._@param sql SQL query to execute_@param paramMap map of parameters to bind to the query_(leaving it to the PreparedStatement to guess the corresponding SQL type)_@param rowMapper object that will map one object per row_@return the result List, containing mapped objects_@throws org.springframework.dao.DataAccessException if the query fails;<T> List<T> query(String sql, Map<String, ?> paramMap, RowMapper<T> rowMapper)_			throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,mapping,each,row,to,a,java,object,via,a,row,mapper,param,sql,sql,query,to,execute,param,param,map,map,of,parameters,to,bind,to,the,query,leaving,it,to,the,prepared,statement,to,guess,the,corresponding,sql,type,param,row,mapper,object,that,will,map,one,object,per,row,return,the,result,list,containing,mapped,objects,throws,org,springframework,dao,data,access,exception,if,the,query,fails;t,list,t,query,string,sql,map,string,param,map,row,mapper,t,row,mapper,throws,data,access,exception
NamedParameterJdbcOperations -> <T> List<T> query(String sql, Map<String, ?> paramMap, RowMapper<T> rowMapper) 			throws DataAccessException_;1419966315;Query given SQL to create a prepared statement from SQL and a list_of arguments to bind to the query, mapping each row to a Java object_via a RowMapper._@param sql SQL query to execute_@param paramMap map of parameters to bind to the query_(leaving it to the PreparedStatement to guess the corresponding SQL type)_@param rowMapper object that will map one object per row_@return the result List, containing mapped objects_@throws org.springframework.dao.DataAccessException if the query fails;<T> List<T> query(String sql, Map<String, ?> paramMap, RowMapper<T> rowMapper)_			throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,mapping,each,row,to,a,java,object,via,a,row,mapper,param,sql,sql,query,to,execute,param,param,map,map,of,parameters,to,bind,to,the,query,leaving,it,to,the,prepared,statement,to,guess,the,corresponding,sql,type,param,row,mapper,object,that,will,map,one,object,per,row,return,the,result,list,containing,mapped,objects,throws,org,springframework,dao,data,access,exception,if,the,query,fails;t,list,t,query,string,sql,map,string,param,map,row,mapper,t,row,mapper,throws,data,access,exception
NamedParameterJdbcOperations -> <T> List<T> query(String sql, Map<String, ?> paramMap, RowMapper<T> rowMapper) 			throws DataAccessException_;1491113276;Query given SQL to create a prepared statement from SQL and a list_of arguments to bind to the query, mapping each row to a Java object_via a RowMapper._@param sql SQL query to execute_@param paramMap map of parameters to bind to the query_(leaving it to the PreparedStatement to guess the corresponding SQL type)_@param rowMapper object that will map one object per row_@return the result List, containing mapped objects_@throws org.springframework.dao.DataAccessException if the query fails;<T> List<T> query(String sql, Map<String, ?> paramMap, RowMapper<T> rowMapper)_			throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,mapping,each,row,to,a,java,object,via,a,row,mapper,param,sql,sql,query,to,execute,param,param,map,map,of,parameters,to,bind,to,the,query,leaving,it,to,the,prepared,statement,to,guess,the,corresponding,sql,type,param,row,mapper,object,that,will,map,one,object,per,row,return,the,result,list,containing,mapped,objects,throws,org,springframework,dao,data,access,exception,if,the,query,fails;t,list,t,query,string,sql,map,string,param,map,row,mapper,t,row,mapper,throws,data,access,exception
NamedParameterJdbcOperations -> <T> List<T> query(String sql, Map<String, ?> paramMap, RowMapper<T> rowMapper) 			throws DataAccessException_;1495868221;Query given SQL to create a prepared statement from SQL and a list_of arguments to bind to the query, mapping each row to a Java object_via a RowMapper._@param sql SQL query to execute_@param paramMap map of parameters to bind to the query_(leaving it to the PreparedStatement to guess the corresponding SQL type)_@param rowMapper object that will map one object per row_@return the result List, containing mapped objects_@throws org.springframework.dao.DataAccessException if the query fails;<T> List<T> query(String sql, Map<String, ?> paramMap, RowMapper<T> rowMapper)_			throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,mapping,each,row,to,a,java,object,via,a,row,mapper,param,sql,sql,query,to,execute,param,param,map,map,of,parameters,to,bind,to,the,query,leaving,it,to,the,prepared,statement,to,guess,the,corresponding,sql,type,param,row,mapper,object,that,will,map,one,object,per,row,return,the,result,list,containing,mapped,objects,throws,org,springframework,dao,data,access,exception,if,the,query,fails;t,list,t,query,string,sql,map,string,param,map,row,mapper,t,row,mapper,throws,data,access,exception
NamedParameterJdbcOperations -> <T> List<T> query(String sql, Map<String, ?> paramMap, RowMapper<T> rowMapper) 			throws DataAccessException_;1496837955;Query given SQL to create a prepared statement from SQL and a list_of arguments to bind to the query, mapping each row to a Java object_via a RowMapper._@param sql SQL query to execute_@param paramMap map of parameters to bind to the query_(leaving it to the PreparedStatement to guess the corresponding SQL type)_@param rowMapper object that will map one object per row_@return the result List, containing mapped objects_@throws org.springframework.dao.DataAccessException if the query fails;<T> List<T> query(String sql, Map<String, ?> paramMap, RowMapper<T> rowMapper)_			throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,mapping,each,row,to,a,java,object,via,a,row,mapper,param,sql,sql,query,to,execute,param,param,map,map,of,parameters,to,bind,to,the,query,leaving,it,to,the,prepared,statement,to,guess,the,corresponding,sql,type,param,row,mapper,object,that,will,map,one,object,per,row,return,the,result,list,containing,mapped,objects,throws,org,springframework,dao,data,access,exception,if,the,query,fails;t,list,t,query,string,sql,map,string,param,map,row,mapper,t,row,mapper,throws,data,access,exception
NamedParameterJdbcOperations -> <T> List<T> query(String sql, Map<String, ?> paramMap, RowMapper<T> rowMapper) 			throws DataAccessException_;1502974979;Query given SQL to create a prepared statement from SQL and a list_of arguments to bind to the query, mapping each row to a Java object_via a RowMapper._@param sql SQL query to execute_@param paramMap map of parameters to bind to the query_(leaving it to the PreparedStatement to guess the corresponding SQL type)_@param rowMapper object that will map one object per row_@return the result List, containing mapped objects_@throws org.springframework.dao.DataAccessException if the query fails;<T> List<T> query(String sql, Map<String, ?> paramMap, RowMapper<T> rowMapper)_			throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,mapping,each,row,to,a,java,object,via,a,row,mapper,param,sql,sql,query,to,execute,param,param,map,map,of,parameters,to,bind,to,the,query,leaving,it,to,the,prepared,statement,to,guess,the,corresponding,sql,type,param,row,mapper,object,that,will,map,one,object,per,row,return,the,result,list,containing,mapped,objects,throws,org,springframework,dao,data,access,exception,if,the,query,fails;t,list,t,query,string,sql,map,string,param,map,row,mapper,t,row,mapper,throws,data,access,exception
NamedParameterJdbcOperations -> <T> List<T> query(String sql, Map<String, ?> paramMap, RowMapper<T> rowMapper) 			throws DataAccessException_;1511712999;Query given SQL to create a prepared statement from SQL and a list_of arguments to bind to the query, mapping each row to a Java object_via a RowMapper._@param sql SQL query to execute_@param paramMap map of parameters to bind to the query_(leaving it to the PreparedStatement to guess the corresponding SQL type)_@param rowMapper object that will map one object per row_@return the result List, containing mapped objects_@throws org.springframework.dao.DataAccessException if the query fails;<T> List<T> query(String sql, Map<String, ?> paramMap, RowMapper<T> rowMapper)_			throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,mapping,each,row,to,a,java,object,via,a,row,mapper,param,sql,sql,query,to,execute,param,param,map,map,of,parameters,to,bind,to,the,query,leaving,it,to,the,prepared,statement,to,guess,the,corresponding,sql,type,param,row,mapper,object,that,will,map,one,object,per,row,return,the,result,list,containing,mapped,objects,throws,org,springframework,dao,data,access,exception,if,the,query,fails;t,list,t,query,string,sql,map,string,param,map,row,mapper,t,row,mapper,throws,data,access,exception
NamedParameterJdbcOperations -> <T> List<T> query(String sql, Map<String, ?> paramMap, RowMapper<T> rowMapper) 			throws DataAccessException_;1530174524;Query given SQL to create a prepared statement from SQL and a list_of arguments to bind to the query, mapping each row to a Java object_via a RowMapper._@param sql the SQL query to execute_@param paramMap map of parameters to bind to the query_(leaving it to the PreparedStatement to guess the corresponding SQL type)_@param rowMapper object that will map one object per row_@return the result List, containing mapped objects_@throws org.springframework.dao.DataAccessException if the query fails;<T> List<T> query(String sql, Map<String, ?> paramMap, RowMapper<T> rowMapper)_			throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,mapping,each,row,to,a,java,object,via,a,row,mapper,param,sql,the,sql,query,to,execute,param,param,map,map,of,parameters,to,bind,to,the,query,leaving,it,to,the,prepared,statement,to,guess,the,corresponding,sql,type,param,row,mapper,object,that,will,map,one,object,per,row,return,the,result,list,containing,mapped,objects,throws,org,springframework,dao,data,access,exception,if,the,query,fails;t,list,t,query,string,sql,map,string,param,map,row,mapper,t,row,mapper,throws,data,access,exception
NamedParameterJdbcOperations -> int update(String sql, Map<String, ?> paramMap) throws DataAccessException_;1328020251;Issue an update via a prepared statement, binding the given arguments._@param sql SQL containing named parameters_@param paramMap map of parameters to bind to the query_(leaving it to the PreparedStatement to guess the corresponding SQL type)_@return the number of rows affected_@throws org.springframework.dao.DataAccessException if there is any problem issuing the update;int update(String sql, Map<String, ?> paramMap) throws DataAccessException_;issue,an,update,via,a,prepared,statement,binding,the,given,arguments,param,sql,sql,containing,named,parameters,param,param,map,map,of,parameters,to,bind,to,the,query,leaving,it,to,the,prepared,statement,to,guess,the,corresponding,sql,type,return,the,number,of,rows,affected,throws,org,springframework,dao,data,access,exception,if,there,is,any,problem,issuing,the,update;int,update,string,sql,map,string,param,map,throws,data,access,exception
NamedParameterJdbcOperations -> int update(String sql, Map<String, ?> paramMap) throws DataAccessException_;1356735495;Issue an update via a prepared statement, binding the given arguments._@param sql SQL containing named parameters_@param paramMap map of parameters to bind to the query_(leaving it to the PreparedStatement to guess the corresponding SQL type)_@return the number of rows affected_@throws org.springframework.dao.DataAccessException if there is any problem issuing the update;int update(String sql, Map<String, ?> paramMap) throws DataAccessException_;issue,an,update,via,a,prepared,statement,binding,the,given,arguments,param,sql,sql,containing,named,parameters,param,param,map,map,of,parameters,to,bind,to,the,query,leaving,it,to,the,prepared,statement,to,guess,the,corresponding,sql,type,return,the,number,of,rows,affected,throws,org,springframework,dao,data,access,exception,if,there,is,any,problem,issuing,the,update;int,update,string,sql,map,string,param,map,throws,data,access,exception
NamedParameterJdbcOperations -> int update(String sql, Map<String, ?> paramMap) throws DataAccessException_;1362408075;Issue an update via a prepared statement, binding the given arguments._@param sql SQL containing named parameters_@param paramMap map of parameters to bind to the query_(leaving it to the PreparedStatement to guess the corresponding SQL type)_@return the number of rows affected_@throws org.springframework.dao.DataAccessException if there is any problem issuing the update;int update(String sql, Map<String, ?> paramMap) throws DataAccessException_;issue,an,update,via,a,prepared,statement,binding,the,given,arguments,param,sql,sql,containing,named,parameters,param,param,map,map,of,parameters,to,bind,to,the,query,leaving,it,to,the,prepared,statement,to,guess,the,corresponding,sql,type,return,the,number,of,rows,affected,throws,org,springframework,dao,data,access,exception,if,there,is,any,problem,issuing,the,update;int,update,string,sql,map,string,param,map,throws,data,access,exception
NamedParameterJdbcOperations -> int update(String sql, Map<String, ?> paramMap) throws DataAccessException_;1419966315;Issue an update via a prepared statement, binding the given arguments._@param sql SQL containing named parameters_@param paramMap map of parameters to bind to the query_(leaving it to the PreparedStatement to guess the corresponding SQL type)_@return the number of rows affected_@throws org.springframework.dao.DataAccessException if there is any problem issuing the update;int update(String sql, Map<String, ?> paramMap) throws DataAccessException_;issue,an,update,via,a,prepared,statement,binding,the,given,arguments,param,sql,sql,containing,named,parameters,param,param,map,map,of,parameters,to,bind,to,the,query,leaving,it,to,the,prepared,statement,to,guess,the,corresponding,sql,type,return,the,number,of,rows,affected,throws,org,springframework,dao,data,access,exception,if,there,is,any,problem,issuing,the,update;int,update,string,sql,map,string,param,map,throws,data,access,exception
NamedParameterJdbcOperations -> int update(String sql, Map<String, ?> paramMap) throws DataAccessException_;1491113276;Issue an update via a prepared statement, binding the given arguments._@param sql SQL containing named parameters_@param paramMap map of parameters to bind to the query_(leaving it to the PreparedStatement to guess the corresponding SQL type)_@return the number of rows affected_@throws org.springframework.dao.DataAccessException if there is any problem issuing the update;int update(String sql, Map<String, ?> paramMap) throws DataAccessException_;issue,an,update,via,a,prepared,statement,binding,the,given,arguments,param,sql,sql,containing,named,parameters,param,param,map,map,of,parameters,to,bind,to,the,query,leaving,it,to,the,prepared,statement,to,guess,the,corresponding,sql,type,return,the,number,of,rows,affected,throws,org,springframework,dao,data,access,exception,if,there,is,any,problem,issuing,the,update;int,update,string,sql,map,string,param,map,throws,data,access,exception
NamedParameterJdbcOperations -> int update(String sql, Map<String, ?> paramMap) throws DataAccessException_;1495868221;Issue an update via a prepared statement, binding the given arguments._@param sql SQL containing named parameters_@param paramMap map of parameters to bind to the query_(leaving it to the PreparedStatement to guess the corresponding SQL type)_@return the number of rows affected_@throws org.springframework.dao.DataAccessException if there is any problem issuing the update;int update(String sql, Map<String, ?> paramMap) throws DataAccessException_;issue,an,update,via,a,prepared,statement,binding,the,given,arguments,param,sql,sql,containing,named,parameters,param,param,map,map,of,parameters,to,bind,to,the,query,leaving,it,to,the,prepared,statement,to,guess,the,corresponding,sql,type,return,the,number,of,rows,affected,throws,org,springframework,dao,data,access,exception,if,there,is,any,problem,issuing,the,update;int,update,string,sql,map,string,param,map,throws,data,access,exception
NamedParameterJdbcOperations -> int update(String sql, Map<String, ?> paramMap) throws DataAccessException_;1496837955;Issue an update via a prepared statement, binding the given arguments._@param sql SQL containing named parameters_@param paramMap map of parameters to bind to the query_(leaving it to the PreparedStatement to guess the corresponding SQL type)_@return the number of rows affected_@throws org.springframework.dao.DataAccessException if there is any problem issuing the update;int update(String sql, Map<String, ?> paramMap) throws DataAccessException_;issue,an,update,via,a,prepared,statement,binding,the,given,arguments,param,sql,sql,containing,named,parameters,param,param,map,map,of,parameters,to,bind,to,the,query,leaving,it,to,the,prepared,statement,to,guess,the,corresponding,sql,type,return,the,number,of,rows,affected,throws,org,springframework,dao,data,access,exception,if,there,is,any,problem,issuing,the,update;int,update,string,sql,map,string,param,map,throws,data,access,exception
NamedParameterJdbcOperations -> int update(String sql, Map<String, ?> paramMap) throws DataAccessException_;1502974979;Issue an update via a prepared statement, binding the given arguments._@param sql SQL containing named parameters_@param paramMap map of parameters to bind to the query_(leaving it to the PreparedStatement to guess the corresponding SQL type)_@return the number of rows affected_@throws org.springframework.dao.DataAccessException if there is any problem issuing the update;int update(String sql, Map<String, ?> paramMap) throws DataAccessException_;issue,an,update,via,a,prepared,statement,binding,the,given,arguments,param,sql,sql,containing,named,parameters,param,param,map,map,of,parameters,to,bind,to,the,query,leaving,it,to,the,prepared,statement,to,guess,the,corresponding,sql,type,return,the,number,of,rows,affected,throws,org,springframework,dao,data,access,exception,if,there,is,any,problem,issuing,the,update;int,update,string,sql,map,string,param,map,throws,data,access,exception
NamedParameterJdbcOperations -> int update(String sql, Map<String, ?> paramMap) throws DataAccessException_;1511712999;Issue an update via a prepared statement, binding the given arguments._@param sql SQL containing named parameters_@param paramMap map of parameters to bind to the query_(leaving it to the PreparedStatement to guess the corresponding SQL type)_@return the number of rows affected_@throws org.springframework.dao.DataAccessException if there is any problem issuing the update;int update(String sql, Map<String, ?> paramMap) throws DataAccessException_;issue,an,update,via,a,prepared,statement,binding,the,given,arguments,param,sql,sql,containing,named,parameters,param,param,map,map,of,parameters,to,bind,to,the,query,leaving,it,to,the,prepared,statement,to,guess,the,corresponding,sql,type,return,the,number,of,rows,affected,throws,org,springframework,dao,data,access,exception,if,there,is,any,problem,issuing,the,update;int,update,string,sql,map,string,param,map,throws,data,access,exception
NamedParameterJdbcOperations -> int update(String sql, Map<String, ?> paramMap) throws DataAccessException_;1530174524;Issue an update via a prepared statement, binding the given arguments._@param sql the SQL containing named parameters_@param paramMap map of parameters to bind to the query_(leaving it to the PreparedStatement to guess the corresponding SQL type)_@return the number of rows affected_@throws org.springframework.dao.DataAccessException if there is any problem issuing the update;int update(String sql, Map<String, ?> paramMap) throws DataAccessException_;issue,an,update,via,a,prepared,statement,binding,the,given,arguments,param,sql,the,sql,containing,named,parameters,param,param,map,map,of,parameters,to,bind,to,the,query,leaving,it,to,the,prepared,statement,to,guess,the,corresponding,sql,type,return,the,number,of,rows,affected,throws,org,springframework,dao,data,access,exception,if,there,is,any,problem,issuing,the,update;int,update,string,sql,map,string,param,map,throws,data,access,exception
NamedParameterJdbcOperations -> @Nullable 	<T> T execute(String sql, PreparedStatementCallback<T> action) throws DataAccessException_;1495868221;Execute a JDBC data access operation, implemented as callback action_working on a JDBC PreparedStatement. This allows for implementing arbitrary_data access operations on a single Statement, within Spring's managed_JDBC environment: that is, participating in Spring-managed transactions_and converting JDBC SQLExceptions into Spring's DataAccessException hierarchy._<p>The callback action can return a result object, for example a_domain object or a collection of domain objects._@param sql SQL to execute_@param action callback object that specifies the action_@return a result object returned by the action, or {@code null}_@throws DataAccessException if there is any problem;@Nullable_	<T> T execute(String sql, PreparedStatementCallback<T> action) throws DataAccessException_;execute,a,jdbc,data,access,operation,implemented,as,callback,action,working,on,a,jdbc,prepared,statement,this,allows,for,implementing,arbitrary,data,access,operations,on,a,single,statement,within,spring,s,managed,jdbc,environment,that,is,participating,in,spring,managed,transactions,and,converting,jdbc,sqlexceptions,into,spring,s,data,access,exception,hierarchy,p,the,callback,action,can,return,a,result,object,for,example,a,domain,object,or,a,collection,of,domain,objects,param,sql,sql,to,execute,param,action,callback,object,that,specifies,the,action,return,a,result,object,returned,by,the,action,or,code,null,throws,data,access,exception,if,there,is,any,problem;nullable,t,t,execute,string,sql,prepared,statement,callback,t,action,throws,data,access,exception
NamedParameterJdbcOperations -> @Nullable 	<T> T execute(String sql, PreparedStatementCallback<T> action) throws DataAccessException_;1496837955;Execute a JDBC data access operation, implemented as callback action_working on a JDBC PreparedStatement. This allows for implementing arbitrary_data access operations on a single Statement, within Spring's managed_JDBC environment: that is, participating in Spring-managed transactions_and converting JDBC SQLExceptions into Spring's DataAccessException hierarchy._<p>The callback action can return a result object, for example a_domain object or a collection of domain objects._@param sql SQL to execute_@param action callback object that specifies the action_@return a result object returned by the action, or {@code null}_@throws DataAccessException if there is any problem;@Nullable_	<T> T execute(String sql, PreparedStatementCallback<T> action) throws DataAccessException_;execute,a,jdbc,data,access,operation,implemented,as,callback,action,working,on,a,jdbc,prepared,statement,this,allows,for,implementing,arbitrary,data,access,operations,on,a,single,statement,within,spring,s,managed,jdbc,environment,that,is,participating,in,spring,managed,transactions,and,converting,jdbc,sqlexceptions,into,spring,s,data,access,exception,hierarchy,p,the,callback,action,can,return,a,result,object,for,example,a,domain,object,or,a,collection,of,domain,objects,param,sql,sql,to,execute,param,action,callback,object,that,specifies,the,action,return,a,result,object,returned,by,the,action,or,code,null,throws,data,access,exception,if,there,is,any,problem;nullable,t,t,execute,string,sql,prepared,statement,callback,t,action,throws,data,access,exception
NamedParameterJdbcOperations -> @Nullable 	<T> T execute(String sql, PreparedStatementCallback<T> action) throws DataAccessException_;1502974979;Execute a JDBC data access operation, implemented as callback action_working on a JDBC PreparedStatement. This allows for implementing arbitrary_data access operations on a single Statement, within Spring's managed_JDBC environment: that is, participating in Spring-managed transactions_and converting JDBC SQLExceptions into Spring's DataAccessException hierarchy._<p>The callback action can return a result object, for example a_domain object or a collection of domain objects._@param sql SQL to execute_@param action callback object that specifies the action_@return a result object returned by the action, or {@code null}_@throws DataAccessException if there is any problem;@Nullable_	<T> T execute(String sql, PreparedStatementCallback<T> action) throws DataAccessException_;execute,a,jdbc,data,access,operation,implemented,as,callback,action,working,on,a,jdbc,prepared,statement,this,allows,for,implementing,arbitrary,data,access,operations,on,a,single,statement,within,spring,s,managed,jdbc,environment,that,is,participating,in,spring,managed,transactions,and,converting,jdbc,sqlexceptions,into,spring,s,data,access,exception,hierarchy,p,the,callback,action,can,return,a,result,object,for,example,a,domain,object,or,a,collection,of,domain,objects,param,sql,sql,to,execute,param,action,callback,object,that,specifies,the,action,return,a,result,object,returned,by,the,action,or,code,null,throws,data,access,exception,if,there,is,any,problem;nullable,t,t,execute,string,sql,prepared,statement,callback,t,action,throws,data,access,exception
NamedParameterJdbcOperations -> @Nullable 	<T> T execute(String sql, PreparedStatementCallback<T> action) throws DataAccessException_;1511712999;Execute a JDBC data access operation, implemented as callback action_working on a JDBC PreparedStatement. This allows for implementing arbitrary_data access operations on a single Statement, within Spring's managed_JDBC environment: that is, participating in Spring-managed transactions_and converting JDBC SQLExceptions into Spring's DataAccessException hierarchy._<p>The callback action can return a result object, for example a_domain object or a collection of domain objects._@param sql SQL to execute_@param action callback object that specifies the action_@return a result object returned by the action, or {@code null}_@throws DataAccessException if there is any problem;@Nullable_	<T> T execute(String sql, PreparedStatementCallback<T> action) throws DataAccessException_;execute,a,jdbc,data,access,operation,implemented,as,callback,action,working,on,a,jdbc,prepared,statement,this,allows,for,implementing,arbitrary,data,access,operations,on,a,single,statement,within,spring,s,managed,jdbc,environment,that,is,participating,in,spring,managed,transactions,and,converting,jdbc,sqlexceptions,into,spring,s,data,access,exception,hierarchy,p,the,callback,action,can,return,a,result,object,for,example,a,domain,object,or,a,collection,of,domain,objects,param,sql,sql,to,execute,param,action,callback,object,that,specifies,the,action,return,a,result,object,returned,by,the,action,or,code,null,throws,data,access,exception,if,there,is,any,problem;nullable,t,t,execute,string,sql,prepared,statement,callback,t,action,throws,data,access,exception
NamedParameterJdbcOperations -> @Nullable 	<T> T execute(String sql, PreparedStatementCallback<T> action) throws DataAccessException_;1530174524;Execute a JDBC data access operation, implemented as callback action_working on a JDBC PreparedStatement. This allows for implementing arbitrary_data access operations on a single Statement, within Spring's managed_JDBC environment: that is, participating in Spring-managed transactions_and converting JDBC SQLExceptions into Spring's DataAccessException hierarchy._<p>The callback action can return a result object, for example a_domain object or a collection of domain objects._@param sql the SQL to execute_@param action callback object that specifies the action_@return a result object returned by the action, or {@code null}_@throws DataAccessException if there is any problem;@Nullable_	<T> T execute(String sql, PreparedStatementCallback<T> action) throws DataAccessException_;execute,a,jdbc,data,access,operation,implemented,as,callback,action,working,on,a,jdbc,prepared,statement,this,allows,for,implementing,arbitrary,data,access,operations,on,a,single,statement,within,spring,s,managed,jdbc,environment,that,is,participating,in,spring,managed,transactions,and,converting,jdbc,sqlexceptions,into,spring,s,data,access,exception,hierarchy,p,the,callback,action,can,return,a,result,object,for,example,a,domain,object,or,a,collection,of,domain,objects,param,sql,the,sql,to,execute,param,action,callback,object,that,specifies,the,action,return,a,result,object,returned,by,the,action,or,code,null,throws,data,access,exception,if,there,is,any,problem;nullable,t,t,execute,string,sql,prepared,statement,callback,t,action,throws,data,access,exception
NamedParameterJdbcOperations -> @Nullable 	<T> T queryForObject(String sql, Map<String, ?> paramMap, RowMapper<T> rowMapper) 			throws DataAccessException_;1502974979;Query given SQL to create a prepared statement from SQL and a list_of arguments to bind to the query, mapping a single result row to a_Java object via a RowMapper._@param sql SQL query to execute_@param paramMap map of parameters to bind to the query_(leaving it to the PreparedStatement to guess the corresponding SQL type)_@param rowMapper object that will map one object per row_@return the single mapped object_@throws org.springframework.dao.IncorrectResultSizeDataAccessException_if the query does not return exactly one row, or does not return exactly_one column in that row_@throws org.springframework.dao.DataAccessException if the query fails;@Nullable_	<T> T queryForObject(String sql, Map<String, ?> paramMap, RowMapper<T> rowMapper)_			throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,mapping,a,single,result,row,to,a,java,object,via,a,row,mapper,param,sql,sql,query,to,execute,param,param,map,map,of,parameters,to,bind,to,the,query,leaving,it,to,the,prepared,statement,to,guess,the,corresponding,sql,type,param,row,mapper,object,that,will,map,one,object,per,row,return,the,single,mapped,object,throws,org,springframework,dao,incorrect,result,size,data,access,exception,if,the,query,does,not,return,exactly,one,row,or,does,not,return,exactly,one,column,in,that,row,throws,org,springframework,dao,data,access,exception,if,the,query,fails;nullable,t,t,query,for,object,string,sql,map,string,param,map,row,mapper,t,row,mapper,throws,data,access,exception
NamedParameterJdbcOperations -> @Nullable 	<T> T queryForObject(String sql, Map<String, ?> paramMap, RowMapper<T> rowMapper) 			throws DataAccessException_;1511712999;Query given SQL to create a prepared statement from SQL and a list_of arguments to bind to the query, mapping a single result row to a_Java object via a RowMapper._@param sql SQL query to execute_@param paramMap map of parameters to bind to the query_(leaving it to the PreparedStatement to guess the corresponding SQL type)_@param rowMapper object that will map one object per row_@return the single mapped object (may be {@code null} if the given_{@link RowMapper} returned {@code} null)_@throws org.springframework.dao.IncorrectResultSizeDataAccessException_if the query does not return exactly one row, or does not return exactly_one column in that row_@throws org.springframework.dao.DataAccessException if the query fails;@Nullable_	<T> T queryForObject(String sql, Map<String, ?> paramMap, RowMapper<T> rowMapper)_			throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,mapping,a,single,result,row,to,a,java,object,via,a,row,mapper,param,sql,sql,query,to,execute,param,param,map,map,of,parameters,to,bind,to,the,query,leaving,it,to,the,prepared,statement,to,guess,the,corresponding,sql,type,param,row,mapper,object,that,will,map,one,object,per,row,return,the,single,mapped,object,may,be,code,null,if,the,given,link,row,mapper,returned,code,null,throws,org,springframework,dao,incorrect,result,size,data,access,exception,if,the,query,does,not,return,exactly,one,row,or,does,not,return,exactly,one,column,in,that,row,throws,org,springframework,dao,data,access,exception,if,the,query,fails;nullable,t,t,query,for,object,string,sql,map,string,param,map,row,mapper,t,row,mapper,throws,data,access,exception
NamedParameterJdbcOperations -> @Nullable 	<T> T queryForObject(String sql, Map<String, ?> paramMap, RowMapper<T> rowMapper) 			throws DataAccessException_;1530174524;Query given SQL to create a prepared statement from SQL and a list_of arguments to bind to the query, mapping a single result row to a_Java object via a RowMapper._@param sql the SQL query to execute_@param paramMap map of parameters to bind to the query_(leaving it to the PreparedStatement to guess the corresponding SQL type)_@param rowMapper object that will map one object per row_@return the single mapped object (may be {@code null} if the given_{@link RowMapper} returned {@code} null)_@throws org.springframework.dao.IncorrectResultSizeDataAccessException_if the query does not return exactly one row, or does not return exactly_one column in that row_@throws org.springframework.dao.DataAccessException if the query fails;@Nullable_	<T> T queryForObject(String sql, Map<String, ?> paramMap, RowMapper<T> rowMapper)_			throws DataAccessException_;query,given,sql,to,create,a,prepared,statement,from,sql,and,a,list,of,arguments,to,bind,to,the,query,mapping,a,single,result,row,to,a,java,object,via,a,row,mapper,param,sql,the,sql,query,to,execute,param,param,map,map,of,parameters,to,bind,to,the,query,leaving,it,to,the,prepared,statement,to,guess,the,corresponding,sql,type,param,row,mapper,object,that,will,map,one,object,per,row,return,the,single,mapped,object,may,be,code,null,if,the,given,link,row,mapper,returned,code,null,throws,org,springframework,dao,incorrect,result,size,data,access,exception,if,the,query,does,not,return,exactly,one,row,or,does,not,return,exactly,one,column,in,that,row,throws,org,springframework,dao,data,access,exception,if,the,query,fails;nullable,t,t,query,for,object,string,sql,map,string,param,map,row,mapper,t,row,mapper,throws,data,access,exception
