# id;timestamp;commentText;codeText;commentWords;codeWords
JdbcBeanDefinitionReader -> public JdbcBeanDefinitionReader(BeanDefinitionRegistry beanFactory);1328020251;Create a new JdbcBeanDefinitionReader for the given bean factory,_using a default PropertiesBeanDefinitionReader underneath._<p>DataSource or JdbcTemplate still need to be set._@see #setDataSource_@see #setJdbcTemplate;public JdbcBeanDefinitionReader(BeanDefinitionRegistry beanFactory) {_		this.propReader = new PropertiesBeanDefinitionReader(beanFactory)__	};create,a,new,jdbc,bean,definition,reader,for,the,given,bean,factory,using,a,default,properties,bean,definition,reader,underneath,p,data,source,or,jdbc,template,still,need,to,be,set,see,set,data,source,see,set,jdbc,template;public,jdbc,bean,definition,reader,bean,definition,registry,bean,factory,this,prop,reader,new,properties,bean,definition,reader,bean,factory
JdbcBeanDefinitionReader -> public JdbcBeanDefinitionReader(BeanDefinitionRegistry beanFactory);1356735495;Create a new JdbcBeanDefinitionReader for the given bean factory,_using a default PropertiesBeanDefinitionReader underneath._<p>DataSource or JdbcTemplate still need to be set._@see #setDataSource_@see #setJdbcTemplate;public JdbcBeanDefinitionReader(BeanDefinitionRegistry beanFactory) {_		this.propReader = new PropertiesBeanDefinitionReader(beanFactory)__	};create,a,new,jdbc,bean,definition,reader,for,the,given,bean,factory,using,a,default,properties,bean,definition,reader,underneath,p,data,source,or,jdbc,template,still,need,to,be,set,see,set,data,source,see,set,jdbc,template;public,jdbc,bean,definition,reader,bean,definition,registry,bean,factory,this,prop,reader,new,properties,bean,definition,reader,bean,factory
JdbcBeanDefinitionReader -> public JdbcBeanDefinitionReader(BeanDefinitionRegistry beanFactory);1357119239;Create a new JdbcBeanDefinitionReader for the given bean factory,_using a default PropertiesBeanDefinitionReader underneath._<p>DataSource or JdbcTemplate still need to be set._@see #setDataSource_@see #setJdbcTemplate;public JdbcBeanDefinitionReader(BeanDefinitionRegistry beanFactory) {_		this.propReader = new PropertiesBeanDefinitionReader(beanFactory)__	};create,a,new,jdbc,bean,definition,reader,for,the,given,bean,factory,using,a,default,properties,bean,definition,reader,underneath,p,data,source,or,jdbc,template,still,need,to,be,set,see,set,data,source,see,set,jdbc,template;public,jdbc,bean,definition,reader,bean,definition,registry,bean,factory,this,prop,reader,new,properties,bean,definition,reader,bean,factory
JdbcBeanDefinitionReader -> public JdbcBeanDefinitionReader(BeanDefinitionRegistry beanFactory);1368482696;Create a new JdbcBeanDefinitionReader for the given bean factory,_using a default PropertiesBeanDefinitionReader underneath._<p>DataSource or JdbcTemplate still need to be set._@see #setDataSource_@see #setJdbcTemplate;public JdbcBeanDefinitionReader(BeanDefinitionRegistry beanFactory) {_		this.propReader = new PropertiesBeanDefinitionReader(beanFactory)__	};create,a,new,jdbc,bean,definition,reader,for,the,given,bean,factory,using,a,default,properties,bean,definition,reader,underneath,p,data,source,or,jdbc,template,still,need,to,be,set,see,set,data,source,see,set,jdbc,template;public,jdbc,bean,definition,reader,bean,definition,registry,bean,factory,this,prop,reader,new,properties,bean,definition,reader,bean,factory
JdbcBeanDefinitionReader -> public JdbcBeanDefinitionReader(BeanDefinitionRegistry beanFactory);1413848647;Create a new JdbcBeanDefinitionReader for the given bean factory,_using a default PropertiesBeanDefinitionReader underneath._<p>DataSource or JdbcTemplate still need to be set._@see #setDataSource_@see #setJdbcTemplate;public JdbcBeanDefinitionReader(BeanDefinitionRegistry beanFactory) {_		this.propReader = new PropertiesBeanDefinitionReader(beanFactory)__	};create,a,new,jdbc,bean,definition,reader,for,the,given,bean,factory,using,a,default,properties,bean,definition,reader,underneath,p,data,source,or,jdbc,template,still,need,to,be,set,see,set,data,source,see,set,jdbc,template;public,jdbc,bean,definition,reader,bean,definition,registry,bean,factory,this,prop,reader,new,properties,bean,definition,reader,bean,factory
JdbcBeanDefinitionReader -> public JdbcBeanDefinitionReader(BeanDefinitionRegistry beanFactory);1477045587;Create a new JdbcBeanDefinitionReader for the given bean factory,_using a default PropertiesBeanDefinitionReader underneath._<p>DataSource or JdbcTemplate still need to be set._@see #setDataSource_@see #setJdbcTemplate;public JdbcBeanDefinitionReader(BeanDefinitionRegistry beanFactory) {_		this.propReader = new PropertiesBeanDefinitionReader(beanFactory)__	};create,a,new,jdbc,bean,definition,reader,for,the,given,bean,factory,using,a,default,properties,bean,definition,reader,underneath,p,data,source,or,jdbc,template,still,need,to,be,set,see,set,data,source,see,set,jdbc,template;public,jdbc,bean,definition,reader,bean,definition,registry,bean,factory,this,prop,reader,new,properties,bean,definition,reader,bean,factory
JdbcBeanDefinitionReader -> public JdbcBeanDefinitionReader(BeanDefinitionRegistry beanFactory);1487178248;Create a new JdbcBeanDefinitionReader for the given bean factory,_using a default PropertiesBeanDefinitionReader underneath._<p>DataSource or JdbcTemplate still need to be set._@see #setDataSource_@see #setJdbcTemplate;public JdbcBeanDefinitionReader(BeanDefinitionRegistry beanFactory) {_		this.propReader = new PropertiesBeanDefinitionReader(beanFactory)__	};create,a,new,jdbc,bean,definition,reader,for,the,given,bean,factory,using,a,default,properties,bean,definition,reader,underneath,p,data,source,or,jdbc,template,still,need,to,be,set,see,set,data,source,see,set,jdbc,template;public,jdbc,bean,definition,reader,bean,definition,registry,bean,factory,this,prop,reader,new,properties,bean,definition,reader,bean,factory
JdbcBeanDefinitionReader -> public JdbcBeanDefinitionReader(BeanDefinitionRegistry beanFactory);1497341397;Create a new JdbcBeanDefinitionReader for the given bean factory,_using a default PropertiesBeanDefinitionReader underneath._<p>DataSource or JdbcTemplate still need to be set._@see #setDataSource_@see #setJdbcTemplate;public JdbcBeanDefinitionReader(BeanDefinitionRegistry beanFactory) {_		this.propReader = new PropertiesBeanDefinitionReader(beanFactory)__	};create,a,new,jdbc,bean,definition,reader,for,the,given,bean,factory,using,a,default,properties,bean,definition,reader,underneath,p,data,source,or,jdbc,template,still,need,to,be,set,see,set,data,source,see,set,jdbc,template;public,jdbc,bean,definition,reader,bean,definition,registry,bean,factory,this,prop,reader,new,properties,bean,definition,reader,bean,factory
JdbcBeanDefinitionReader -> public JdbcBeanDefinitionReader(BeanDefinitionRegistry beanFactory);1500495740;Create a new JdbcBeanDefinitionReader for the given bean factory,_using a default PropertiesBeanDefinitionReader underneath._<p>DataSource or JdbcTemplate still need to be set._@see #setDataSource_@see #setJdbcTemplate;public JdbcBeanDefinitionReader(BeanDefinitionRegistry beanFactory) {_		this.propReader = new PropertiesBeanDefinitionReader(beanFactory)__	};create,a,new,jdbc,bean,definition,reader,for,the,given,bean,factory,using,a,default,properties,bean,definition,reader,underneath,p,data,source,or,jdbc,template,still,need,to,be,set,see,set,data,source,see,set,jdbc,template;public,jdbc,bean,definition,reader,bean,definition,registry,bean,factory,this,prop,reader,new,properties,bean,definition,reader,bean,factory
JdbcBeanDefinitionReader -> public JdbcBeanDefinitionReader(BeanDefinitionRegistry beanFactory);1530174524;Create a new JdbcBeanDefinitionReader for the given bean factory,_using a default PropertiesBeanDefinitionReader underneath._<p>DataSource or JdbcTemplate still need to be set._@see #setDataSource_@see #setJdbcTemplate;public JdbcBeanDefinitionReader(BeanDefinitionRegistry beanFactory) {_		this.propReader = new PropertiesBeanDefinitionReader(beanFactory)__	};create,a,new,jdbc,bean,definition,reader,for,the,given,bean,factory,using,a,default,properties,bean,definition,reader,underneath,p,data,source,or,jdbc,template,still,need,to,be,set,see,set,data,source,see,set,jdbc,template;public,jdbc,bean,definition,reader,bean,definition,registry,bean,factory,this,prop,reader,new,properties,bean,definition,reader,bean,factory
JdbcBeanDefinitionReader -> public JdbcBeanDefinitionReader(PropertiesBeanDefinitionReader beanDefinitionReader);1328020251;Create a new JdbcBeanDefinitionReader that delegates to the_given PropertiesBeanDefinitionReader underneath._<p>DataSource or JdbcTemplate still need to be set._@see #setDataSource_@see #setJdbcTemplate;public JdbcBeanDefinitionReader(PropertiesBeanDefinitionReader beanDefinitionReader) {_		Assert.notNull(beanDefinitionReader, "Bean definition reader must not be null")__		this.propReader = beanDefinitionReader__	};create,a,new,jdbc,bean,definition,reader,that,delegates,to,the,given,properties,bean,definition,reader,underneath,p,data,source,or,jdbc,template,still,need,to,be,set,see,set,data,source,see,set,jdbc,template;public,jdbc,bean,definition,reader,properties,bean,definition,reader,bean,definition,reader,assert,not,null,bean,definition,reader,bean,definition,reader,must,not,be,null,this,prop,reader,bean,definition,reader
JdbcBeanDefinitionReader -> public JdbcBeanDefinitionReader(PropertiesBeanDefinitionReader beanDefinitionReader);1356735495;Create a new JdbcBeanDefinitionReader that delegates to the_given PropertiesBeanDefinitionReader underneath._<p>DataSource or JdbcTemplate still need to be set._@see #setDataSource_@see #setJdbcTemplate;public JdbcBeanDefinitionReader(PropertiesBeanDefinitionReader beanDefinitionReader) {_		Assert.notNull(beanDefinitionReader, "Bean definition reader must not be null")__		this.propReader = beanDefinitionReader__	};create,a,new,jdbc,bean,definition,reader,that,delegates,to,the,given,properties,bean,definition,reader,underneath,p,data,source,or,jdbc,template,still,need,to,be,set,see,set,data,source,see,set,jdbc,template;public,jdbc,bean,definition,reader,properties,bean,definition,reader,bean,definition,reader,assert,not,null,bean,definition,reader,bean,definition,reader,must,not,be,null,this,prop,reader,bean,definition,reader
JdbcBeanDefinitionReader -> public JdbcBeanDefinitionReader(PropertiesBeanDefinitionReader beanDefinitionReader);1357119239;Create a new JdbcBeanDefinitionReader that delegates to the_given PropertiesBeanDefinitionReader underneath._<p>DataSource or JdbcTemplate still need to be set._@see #setDataSource_@see #setJdbcTemplate;public JdbcBeanDefinitionReader(PropertiesBeanDefinitionReader beanDefinitionReader) {_		Assert.notNull(beanDefinitionReader, "Bean definition reader must not be null")__		this.propReader = beanDefinitionReader__	};create,a,new,jdbc,bean,definition,reader,that,delegates,to,the,given,properties,bean,definition,reader,underneath,p,data,source,or,jdbc,template,still,need,to,be,set,see,set,data,source,see,set,jdbc,template;public,jdbc,bean,definition,reader,properties,bean,definition,reader,bean,definition,reader,assert,not,null,bean,definition,reader,bean,definition,reader,must,not,be,null,this,prop,reader,bean,definition,reader
JdbcBeanDefinitionReader -> public JdbcBeanDefinitionReader(PropertiesBeanDefinitionReader beanDefinitionReader);1368482696;Create a new JdbcBeanDefinitionReader that delegates to the_given PropertiesBeanDefinitionReader underneath._<p>DataSource or JdbcTemplate still need to be set._@see #setDataSource_@see #setJdbcTemplate;public JdbcBeanDefinitionReader(PropertiesBeanDefinitionReader beanDefinitionReader) {_		Assert.notNull(beanDefinitionReader, "Bean definition reader must not be null")__		this.propReader = beanDefinitionReader__	};create,a,new,jdbc,bean,definition,reader,that,delegates,to,the,given,properties,bean,definition,reader,underneath,p,data,source,or,jdbc,template,still,need,to,be,set,see,set,data,source,see,set,jdbc,template;public,jdbc,bean,definition,reader,properties,bean,definition,reader,bean,definition,reader,assert,not,null,bean,definition,reader,bean,definition,reader,must,not,be,null,this,prop,reader,bean,definition,reader
JdbcBeanDefinitionReader -> public JdbcBeanDefinitionReader(PropertiesBeanDefinitionReader beanDefinitionReader);1413848647;Create a new JdbcBeanDefinitionReader that delegates to the_given PropertiesBeanDefinitionReader underneath._<p>DataSource or JdbcTemplate still need to be set._@see #setDataSource_@see #setJdbcTemplate;public JdbcBeanDefinitionReader(PropertiesBeanDefinitionReader beanDefinitionReader) {_		Assert.notNull(beanDefinitionReader, "Bean definition reader must not be null")__		this.propReader = beanDefinitionReader__	};create,a,new,jdbc,bean,definition,reader,that,delegates,to,the,given,properties,bean,definition,reader,underneath,p,data,source,or,jdbc,template,still,need,to,be,set,see,set,data,source,see,set,jdbc,template;public,jdbc,bean,definition,reader,properties,bean,definition,reader,bean,definition,reader,assert,not,null,bean,definition,reader,bean,definition,reader,must,not,be,null,this,prop,reader,bean,definition,reader
JdbcBeanDefinitionReader -> public JdbcBeanDefinitionReader(PropertiesBeanDefinitionReader beanDefinitionReader);1477045587;Create a new JdbcBeanDefinitionReader that delegates to the_given PropertiesBeanDefinitionReader underneath._<p>DataSource or JdbcTemplate still need to be set._@see #setDataSource_@see #setJdbcTemplate;public JdbcBeanDefinitionReader(PropertiesBeanDefinitionReader beanDefinitionReader) {_		Assert.notNull(beanDefinitionReader, "Bean definition reader must not be null")__		this.propReader = beanDefinitionReader__	};create,a,new,jdbc,bean,definition,reader,that,delegates,to,the,given,properties,bean,definition,reader,underneath,p,data,source,or,jdbc,template,still,need,to,be,set,see,set,data,source,see,set,jdbc,template;public,jdbc,bean,definition,reader,properties,bean,definition,reader,bean,definition,reader,assert,not,null,bean,definition,reader,bean,definition,reader,must,not,be,null,this,prop,reader,bean,definition,reader
JdbcBeanDefinitionReader -> public JdbcBeanDefinitionReader(PropertiesBeanDefinitionReader beanDefinitionReader);1487178248;Create a new JdbcBeanDefinitionReader that delegates to the_given PropertiesBeanDefinitionReader underneath._<p>DataSource or JdbcTemplate still need to be set._@see #setDataSource_@see #setJdbcTemplate;public JdbcBeanDefinitionReader(PropertiesBeanDefinitionReader beanDefinitionReader) {_		Assert.notNull(beanDefinitionReader, "Bean definition reader must not be null")__		this.propReader = beanDefinitionReader__	};create,a,new,jdbc,bean,definition,reader,that,delegates,to,the,given,properties,bean,definition,reader,underneath,p,data,source,or,jdbc,template,still,need,to,be,set,see,set,data,source,see,set,jdbc,template;public,jdbc,bean,definition,reader,properties,bean,definition,reader,bean,definition,reader,assert,not,null,bean,definition,reader,bean,definition,reader,must,not,be,null,this,prop,reader,bean,definition,reader
JdbcBeanDefinitionReader -> public JdbcBeanDefinitionReader(PropertiesBeanDefinitionReader beanDefinitionReader);1497341397;Create a new JdbcBeanDefinitionReader that delegates to the_given PropertiesBeanDefinitionReader underneath._<p>DataSource or JdbcTemplate still need to be set._@see #setDataSource_@see #setJdbcTemplate;public JdbcBeanDefinitionReader(PropertiesBeanDefinitionReader beanDefinitionReader) {_		Assert.notNull(beanDefinitionReader, "Bean definition reader must not be null")__		this.propReader = beanDefinitionReader__	};create,a,new,jdbc,bean,definition,reader,that,delegates,to,the,given,properties,bean,definition,reader,underneath,p,data,source,or,jdbc,template,still,need,to,be,set,see,set,data,source,see,set,jdbc,template;public,jdbc,bean,definition,reader,properties,bean,definition,reader,bean,definition,reader,assert,not,null,bean,definition,reader,bean,definition,reader,must,not,be,null,this,prop,reader,bean,definition,reader
JdbcBeanDefinitionReader -> public JdbcBeanDefinitionReader(PropertiesBeanDefinitionReader beanDefinitionReader);1500495740;Create a new JdbcBeanDefinitionReader that delegates to the_given PropertiesBeanDefinitionReader underneath._<p>DataSource or JdbcTemplate still need to be set._@see #setDataSource_@see #setJdbcTemplate;public JdbcBeanDefinitionReader(PropertiesBeanDefinitionReader beanDefinitionReader) {_		Assert.notNull(beanDefinitionReader, "Bean definition reader must not be null")__		this.propReader = beanDefinitionReader__	};create,a,new,jdbc,bean,definition,reader,that,delegates,to,the,given,properties,bean,definition,reader,underneath,p,data,source,or,jdbc,template,still,need,to,be,set,see,set,data,source,see,set,jdbc,template;public,jdbc,bean,definition,reader,properties,bean,definition,reader,bean,definition,reader,assert,not,null,bean,definition,reader,bean,definition,reader,must,not,be,null,this,prop,reader,bean,definition,reader
JdbcBeanDefinitionReader -> public JdbcBeanDefinitionReader(PropertiesBeanDefinitionReader beanDefinitionReader);1530174524;Create a new JdbcBeanDefinitionReader that delegates to the_given PropertiesBeanDefinitionReader underneath._<p>DataSource or JdbcTemplate still need to be set._@see #setDataSource_@see #setJdbcTemplate;public JdbcBeanDefinitionReader(PropertiesBeanDefinitionReader beanDefinitionReader) {_		Assert.notNull(beanDefinitionReader, "Bean definition reader must not be null")__		this.propReader = beanDefinitionReader__	};create,a,new,jdbc,bean,definition,reader,that,delegates,to,the,given,properties,bean,definition,reader,underneath,p,data,source,or,jdbc,template,still,need,to,be,set,see,set,data,source,see,set,jdbc,template;public,jdbc,bean,definition,reader,properties,bean,definition,reader,bean,definition,reader,assert,not,null,bean,definition,reader,bean,definition,reader,must,not,be,null,this,prop,reader,bean,definition,reader
JdbcBeanDefinitionReader -> public void loadBeanDefinitions(String sql);1328020251;Load bean definitions from the database via the given SQL string._@param sql SQL query to use for loading bean definitions._The first three columns must be bean name, property name and value._Any join and any other columns are permitted: e.g._<code>SELECT BEAN_NAME, PROPERTY, VALUE FROM CONFIG WHERE CONFIG.APP_ID = 1</code>_It's also possible to perform a join. Column names are not significant --_only the ordering of these first three columns.;public void loadBeanDefinitions(String sql) {_		Assert.notNull(this.jdbcTemplate, "Not fully configured - specify DataSource or JdbcTemplate")__		final Properties props = new Properties()__		this.jdbcTemplate.query(sql, new RowCallbackHandler() {_			public void processRow(ResultSet rs) throws SQLException {_				String beanName = rs.getString(1)__				String property = rs.getString(2)__				String value = rs.getString(3)__				_				props.setProperty(beanName + "." + property, value)__			}_		})__		this.propReader.registerBeanDefinitions(props)__	};load,bean,definitions,from,the,database,via,the,given,sql,string,param,sql,sql,query,to,use,for,loading,bean,definitions,the,first,three,columns,must,be,bean,name,property,name,and,value,any,join,and,any,other,columns,are,permitted,e,g,code,select,property,value,from,config,where,config,1,code,it,s,also,possible,to,perform,a,join,column,names,are,not,significant,only,the,ordering,of,these,first,three,columns;public,void,load,bean,definitions,string,sql,assert,not,null,this,jdbc,template,not,fully,configured,specify,data,source,or,jdbc,template,final,properties,props,new,properties,this,jdbc,template,query,sql,new,row,callback,handler,public,void,process,row,result,set,rs,throws,sqlexception,string,bean,name,rs,get,string,1,string,property,rs,get,string,2,string,value,rs,get,string,3,props,set,property,bean,name,property,value,this,prop,reader,register,bean,definitions,props
JdbcBeanDefinitionReader -> public void loadBeanDefinitions(String sql);1356735495;Load bean definitions from the database via the given SQL string._@param sql SQL query to use for loading bean definitions._The first three columns must be bean name, property name and value._Any join and any other columns are permitted: e.g._{@code SELECT BEAN_NAME, PROPERTY, VALUE FROM CONFIG WHERE CONFIG.APP_ID = 1}_It's also possible to perform a join. Column names are not significant --_only the ordering of these first three columns.;public void loadBeanDefinitions(String sql) {_		Assert.notNull(this.jdbcTemplate, "Not fully configured - specify DataSource or JdbcTemplate")__		final Properties props = new Properties()__		this.jdbcTemplate.query(sql, new RowCallbackHandler() {_			@Override_			public void processRow(ResultSet rs) throws SQLException {_				String beanName = rs.getString(1)__				String property = rs.getString(2)__				String value = rs.getString(3)__				_				props.setProperty(beanName + "." + property, value)__			}_		})__		this.propReader.registerBeanDefinitions(props)__	};load,bean,definitions,from,the,database,via,the,given,sql,string,param,sql,sql,query,to,use,for,loading,bean,definitions,the,first,three,columns,must,be,bean,name,property,name,and,value,any,join,and,any,other,columns,are,permitted,e,g,code,select,property,value,from,config,where,config,1,it,s,also,possible,to,perform,a,join,column,names,are,not,significant,only,the,ordering,of,these,first,three,columns;public,void,load,bean,definitions,string,sql,assert,not,null,this,jdbc,template,not,fully,configured,specify,data,source,or,jdbc,template,final,properties,props,new,properties,this,jdbc,template,query,sql,new,row,callback,handler,override,public,void,process,row,result,set,rs,throws,sqlexception,string,bean,name,rs,get,string,1,string,property,rs,get,string,2,string,value,rs,get,string,3,props,set,property,bean,name,property,value,this,prop,reader,register,bean,definitions,props
JdbcBeanDefinitionReader -> public void loadBeanDefinitions(String sql);1357119239;Load bean definitions from the database via the given SQL string._@param sql SQL query to use for loading bean definitions._The first three columns must be bean name, property name and value._Any join and any other columns are permitted: e.g._{@code SELECT BEAN_NAME, PROPERTY, VALUE FROM CONFIG WHERE CONFIG.APP_ID = 1}_It's also possible to perform a join. Column names are not significant --_only the ordering of these first three columns.;public void loadBeanDefinitions(String sql) {_		Assert.notNull(this.jdbcTemplate, "Not fully configured - specify DataSource or JdbcTemplate")__		final Properties props = new Properties()__		this.jdbcTemplate.query(sql, new RowCallbackHandler() {_			public void processRow(ResultSet rs) throws SQLException {_				String beanName = rs.getString(1)__				String property = rs.getString(2)__				String value = rs.getString(3)__				_				props.setProperty(beanName + "." + property, value)__			}_		})__		this.propReader.registerBeanDefinitions(props)__	};load,bean,definitions,from,the,database,via,the,given,sql,string,param,sql,sql,query,to,use,for,loading,bean,definitions,the,first,three,columns,must,be,bean,name,property,name,and,value,any,join,and,any,other,columns,are,permitted,e,g,code,select,property,value,from,config,where,config,1,it,s,also,possible,to,perform,a,join,column,names,are,not,significant,only,the,ordering,of,these,first,three,columns;public,void,load,bean,definitions,string,sql,assert,not,null,this,jdbc,template,not,fully,configured,specify,data,source,or,jdbc,template,final,properties,props,new,properties,this,jdbc,template,query,sql,new,row,callback,handler,public,void,process,row,result,set,rs,throws,sqlexception,string,bean,name,rs,get,string,1,string,property,rs,get,string,2,string,value,rs,get,string,3,props,set,property,bean,name,property,value,this,prop,reader,register,bean,definitions,props
JdbcBeanDefinitionReader -> public void loadBeanDefinitions(String sql);1368482696;Load bean definitions from the database via the given SQL string._@param sql SQL query to use for loading bean definitions._The first three columns must be bean name, property name and value._Any join and any other columns are permitted: e.g._{@code SELECT BEAN_NAME, PROPERTY, VALUE FROM CONFIG WHERE CONFIG.APP_ID = 1}_It's also possible to perform a join. Column names are not significant --_only the ordering of these first three columns.;public void loadBeanDefinitions(String sql) {_		Assert.notNull(this.jdbcTemplate, "Not fully configured - specify DataSource or JdbcTemplate")__		final Properties props = new Properties()__		this.jdbcTemplate.query(sql, new RowCallbackHandler() {_			@Override_			public void processRow(ResultSet rs) throws SQLException {_				String beanName = rs.getString(1)__				String property = rs.getString(2)__				String value = rs.getString(3)__				_				props.setProperty(beanName + "." + property, value)__			}_		})__		this.propReader.registerBeanDefinitions(props)__	};load,bean,definitions,from,the,database,via,the,given,sql,string,param,sql,sql,query,to,use,for,loading,bean,definitions,the,first,three,columns,must,be,bean,name,property,name,and,value,any,join,and,any,other,columns,are,permitted,e,g,code,select,property,value,from,config,where,config,1,it,s,also,possible,to,perform,a,join,column,names,are,not,significant,only,the,ordering,of,these,first,three,columns;public,void,load,bean,definitions,string,sql,assert,not,null,this,jdbc,template,not,fully,configured,specify,data,source,or,jdbc,template,final,properties,props,new,properties,this,jdbc,template,query,sql,new,row,callback,handler,override,public,void,process,row,result,set,rs,throws,sqlexception,string,bean,name,rs,get,string,1,string,property,rs,get,string,2,string,value,rs,get,string,3,props,set,property,bean,name,property,value,this,prop,reader,register,bean,definitions,props
JdbcBeanDefinitionReader -> public void loadBeanDefinitions(String sql);1413848647;Load bean definitions from the database via the given SQL string._@param sql SQL query to use for loading bean definitions._The first three columns must be bean name, property name and value._Any join and any other columns are permitted: e.g._{@code SELECT BEAN_NAME, PROPERTY, VALUE FROM CONFIG WHERE CONFIG.APP_ID = 1}_It's also possible to perform a join. Column names are not significant --_only the ordering of these first three columns.;public void loadBeanDefinitions(String sql) {_		Assert.notNull(this.jdbcTemplate, "Not fully configured - specify DataSource or JdbcTemplate")__		final Properties props = new Properties()__		this.jdbcTemplate.query(sql, new RowCallbackHandler() {_			@Override_			public void processRow(ResultSet rs) throws SQLException {_				String beanName = rs.getString(1)__				String property = rs.getString(2)__				String value = rs.getString(3)__				_				props.setProperty(beanName + "." + property, value)__			}_		})__		this.propReader.registerBeanDefinitions(props)__	};load,bean,definitions,from,the,database,via,the,given,sql,string,param,sql,sql,query,to,use,for,loading,bean,definitions,the,first,three,columns,must,be,bean,name,property,name,and,value,any,join,and,any,other,columns,are,permitted,e,g,code,select,property,value,from,config,where,config,1,it,s,also,possible,to,perform,a,join,column,names,are,not,significant,only,the,ordering,of,these,first,three,columns;public,void,load,bean,definitions,string,sql,assert,not,null,this,jdbc,template,not,fully,configured,specify,data,source,or,jdbc,template,final,properties,props,new,properties,this,jdbc,template,query,sql,new,row,callback,handler,override,public,void,process,row,result,set,rs,throws,sqlexception,string,bean,name,rs,get,string,1,string,property,rs,get,string,2,string,value,rs,get,string,3,props,set,property,bean,name,property,value,this,prop,reader,register,bean,definitions,props
JdbcBeanDefinitionReader -> public void loadBeanDefinitions(String sql);1477045587;Load bean definitions from the database via the given SQL string._@param sql SQL query to use for loading bean definitions._The first three columns must be bean name, property name and value._Any join and any other columns are permitted: e.g._{@code SELECT BEAN_NAME, PROPERTY, VALUE FROM CONFIG WHERE CONFIG.APP_ID = 1}_It's also possible to perform a join. Column names are not significant --_only the ordering of these first three columns.;public void loadBeanDefinitions(String sql) {_		Assert.notNull(this.jdbcTemplate, "Not fully configured - specify DataSource or JdbcTemplate")__		final Properties props = new Properties()__		this.jdbcTemplate.query(sql, new RowCallbackHandler() {_			@Override_			public void processRow(ResultSet rs) throws SQLException {_				String beanName = rs.getString(1)__				String property = rs.getString(2)__				String value = rs.getString(3)__				_				props.setProperty(beanName + '.' + property, value)__			}_		})__		this.propReader.registerBeanDefinitions(props)__	};load,bean,definitions,from,the,database,via,the,given,sql,string,param,sql,sql,query,to,use,for,loading,bean,definitions,the,first,three,columns,must,be,bean,name,property,name,and,value,any,join,and,any,other,columns,are,permitted,e,g,code,select,property,value,from,config,where,config,1,it,s,also,possible,to,perform,a,join,column,names,are,not,significant,only,the,ordering,of,these,first,three,columns;public,void,load,bean,definitions,string,sql,assert,not,null,this,jdbc,template,not,fully,configured,specify,data,source,or,jdbc,template,final,properties,props,new,properties,this,jdbc,template,query,sql,new,row,callback,handler,override,public,void,process,row,result,set,rs,throws,sqlexception,string,bean,name,rs,get,string,1,string,property,rs,get,string,2,string,value,rs,get,string,3,props,set,property,bean,name,property,value,this,prop,reader,register,bean,definitions,props
JdbcBeanDefinitionReader -> public void loadBeanDefinitions(String sql);1487178248;Load bean definitions from the database via the given SQL string._@param sql SQL query to use for loading bean definitions._The first three columns must be bean name, property name and value._Any join and any other columns are permitted: e.g._{@code SELECT BEAN_NAME, PROPERTY, VALUE FROM CONFIG WHERE CONFIG.APP_ID = 1}_It's also possible to perform a join. Column names are not significant --_only the ordering of these first three columns.;public void loadBeanDefinitions(String sql) {_		Assert.notNull(this.jdbcTemplate, "Not fully configured - specify DataSource or JdbcTemplate")__		final Properties props = new Properties()__		this.jdbcTemplate.query(sql, new RowCallbackHandler() {_			@Override_			public void processRow(ResultSet rs) throws SQLException {_				String beanName = rs.getString(1)__				String property = rs.getString(2)__				String value = rs.getString(3)__				_				props.setProperty(beanName + '.' + property, value)__			}_		})__		this.propReader.registerBeanDefinitions(props)__	};load,bean,definitions,from,the,database,via,the,given,sql,string,param,sql,sql,query,to,use,for,loading,bean,definitions,the,first,three,columns,must,be,bean,name,property,name,and,value,any,join,and,any,other,columns,are,permitted,e,g,code,select,property,value,from,config,where,config,1,it,s,also,possible,to,perform,a,join,column,names,are,not,significant,only,the,ordering,of,these,first,three,columns;public,void,load,bean,definitions,string,sql,assert,not,null,this,jdbc,template,not,fully,configured,specify,data,source,or,jdbc,template,final,properties,props,new,properties,this,jdbc,template,query,sql,new,row,callback,handler,override,public,void,process,row,result,set,rs,throws,sqlexception,string,bean,name,rs,get,string,1,string,property,rs,get,string,2,string,value,rs,get,string,3,props,set,property,bean,name,property,value,this,prop,reader,register,bean,definitions,props
JdbcBeanDefinitionReader -> public void loadBeanDefinitions(String sql);1497341397;Load bean definitions from the database via the given SQL string._@param sql SQL query to use for loading bean definitions._The first three columns must be bean name, property name and value._Any join and any other columns are permitted: e.g._{@code SELECT BEAN_NAME, PROPERTY, VALUE FROM CONFIG WHERE CONFIG.APP_ID = 1}_It's also possible to perform a join. Column names are not significant --_only the ordering of these first three columns.;public void loadBeanDefinitions(String sql) {_		Assert.notNull(this.jdbcTemplate, "Not fully configured - specify DataSource or JdbcTemplate")__		final Properties props = new Properties()__		this.jdbcTemplate.query(sql, rs -> {_			String beanName = rs.getString(1)__			String property = rs.getString(2)__			String value = rs.getString(3)__			_			props.setProperty(beanName + '.' + property, value)__		})__		this.propReader.registerBeanDefinitions(props)__	};load,bean,definitions,from,the,database,via,the,given,sql,string,param,sql,sql,query,to,use,for,loading,bean,definitions,the,first,three,columns,must,be,bean,name,property,name,and,value,any,join,and,any,other,columns,are,permitted,e,g,code,select,property,value,from,config,where,config,1,it,s,also,possible,to,perform,a,join,column,names,are,not,significant,only,the,ordering,of,these,first,three,columns;public,void,load,bean,definitions,string,sql,assert,not,null,this,jdbc,template,not,fully,configured,specify,data,source,or,jdbc,template,final,properties,props,new,properties,this,jdbc,template,query,sql,rs,string,bean,name,rs,get,string,1,string,property,rs,get,string,2,string,value,rs,get,string,3,props,set,property,bean,name,property,value,this,prop,reader,register,bean,definitions,props
JdbcBeanDefinitionReader -> public void loadBeanDefinitions(String sql);1500495740;Load bean definitions from the database via the given SQL string._@param sql SQL query to use for loading bean definitions._The first three columns must be bean name, property name and value._Any join and any other columns are permitted: e.g._{@code SELECT BEAN_NAME, PROPERTY, VALUE FROM CONFIG WHERE CONFIG.APP_ID = 1}_It's also possible to perform a join. Column names are not significant --_only the ordering of these first three columns.;public void loadBeanDefinitions(String sql) {_		Assert.notNull(this.jdbcTemplate, "Not fully configured - specify DataSource or JdbcTemplate")__		final Properties props = new Properties()__		this.jdbcTemplate.query(sql, rs -> {_			String beanName = rs.getString(1)__			String property = rs.getString(2)__			String value = rs.getString(3)__			_			props.setProperty(beanName + '.' + property, value)__		})__		this.propReader.registerBeanDefinitions(props)__	};load,bean,definitions,from,the,database,via,the,given,sql,string,param,sql,sql,query,to,use,for,loading,bean,definitions,the,first,three,columns,must,be,bean,name,property,name,and,value,any,join,and,any,other,columns,are,permitted,e,g,code,select,property,value,from,config,where,config,1,it,s,also,possible,to,perform,a,join,column,names,are,not,significant,only,the,ordering,of,these,first,three,columns;public,void,load,bean,definitions,string,sql,assert,not,null,this,jdbc,template,not,fully,configured,specify,data,source,or,jdbc,template,final,properties,props,new,properties,this,jdbc,template,query,sql,rs,string,bean,name,rs,get,string,1,string,property,rs,get,string,2,string,value,rs,get,string,3,props,set,property,bean,name,property,value,this,prop,reader,register,bean,definitions,props
JdbcBeanDefinitionReader -> public void loadBeanDefinitions(String sql);1530174524;Load bean definitions from the database via the given SQL string._@param sql the SQL query to use for loading bean definitions._The first three columns must be bean name, property name and value._Any join and any other columns are permitted: e.g._{@code SELECT BEAN_NAME, PROPERTY, VALUE FROM CONFIG WHERE CONFIG.APP_ID = 1}_It's also possible to perform a join. Column names are not significant --_only the ordering of these first three columns.;public void loadBeanDefinitions(String sql) {_		Assert.notNull(this.jdbcTemplate, "Not fully configured - specify DataSource or JdbcTemplate")__		final Properties props = new Properties()__		this.jdbcTemplate.query(sql, rs -> {_			String beanName = rs.getString(1)__			String property = rs.getString(2)__			String value = rs.getString(3)__			_			props.setProperty(beanName + '.' + property, value)__		})__		this.propReader.registerBeanDefinitions(props)__	};load,bean,definitions,from,the,database,via,the,given,sql,string,param,sql,the,sql,query,to,use,for,loading,bean,definitions,the,first,three,columns,must,be,bean,name,property,name,and,value,any,join,and,any,other,columns,are,permitted,e,g,code,select,property,value,from,config,where,config,1,it,s,also,possible,to,perform,a,join,column,names,are,not,significant,only,the,ordering,of,these,first,three,columns;public,void,load,bean,definitions,string,sql,assert,not,null,this,jdbc,template,not,fully,configured,specify,data,source,or,jdbc,template,final,properties,props,new,properties,this,jdbc,template,query,sql,rs,string,bean,name,rs,get,string,1,string,property,rs,get,string,2,string,value,rs,get,string,3,props,set,property,bean,name,property,value,this,prop,reader,register,bean,definitions,props
JdbcBeanDefinitionReader -> public void setDataSource(DataSource dataSource);1328020251;Set the DataSource to use to obtain database connections._Will implicitly create a new JdbcTemplate with the given DataSource.;public void setDataSource(DataSource dataSource) {_		this.jdbcTemplate = new JdbcTemplate(dataSource)__	};set,the,data,source,to,use,to,obtain,database,connections,will,implicitly,create,a,new,jdbc,template,with,the,given,data,source;public,void,set,data,source,data,source,data,source,this,jdbc,template,new,jdbc,template,data,source
JdbcBeanDefinitionReader -> public void setDataSource(DataSource dataSource);1356735495;Set the DataSource to use to obtain database connections._Will implicitly create a new JdbcTemplate with the given DataSource.;public void setDataSource(DataSource dataSource) {_		this.jdbcTemplate = new JdbcTemplate(dataSource)__	};set,the,data,source,to,use,to,obtain,database,connections,will,implicitly,create,a,new,jdbc,template,with,the,given,data,source;public,void,set,data,source,data,source,data,source,this,jdbc,template,new,jdbc,template,data,source
JdbcBeanDefinitionReader -> public void setDataSource(DataSource dataSource);1357119239;Set the DataSource to use to obtain database connections._Will implicitly create a new JdbcTemplate with the given DataSource.;public void setDataSource(DataSource dataSource) {_		this.jdbcTemplate = new JdbcTemplate(dataSource)__	};set,the,data,source,to,use,to,obtain,database,connections,will,implicitly,create,a,new,jdbc,template,with,the,given,data,source;public,void,set,data,source,data,source,data,source,this,jdbc,template,new,jdbc,template,data,source
JdbcBeanDefinitionReader -> public void setDataSource(DataSource dataSource);1368482696;Set the DataSource to use to obtain database connections._Will implicitly create a new JdbcTemplate with the given DataSource.;public void setDataSource(DataSource dataSource) {_		this.jdbcTemplate = new JdbcTemplate(dataSource)__	};set,the,data,source,to,use,to,obtain,database,connections,will,implicitly,create,a,new,jdbc,template,with,the,given,data,source;public,void,set,data,source,data,source,data,source,this,jdbc,template,new,jdbc,template,data,source
JdbcBeanDefinitionReader -> public void setDataSource(DataSource dataSource);1413848647;Set the DataSource to use to obtain database connections._Will implicitly create a new JdbcTemplate with the given DataSource.;public void setDataSource(DataSource dataSource) {_		this.jdbcTemplate = new JdbcTemplate(dataSource)__	};set,the,data,source,to,use,to,obtain,database,connections,will,implicitly,create,a,new,jdbc,template,with,the,given,data,source;public,void,set,data,source,data,source,data,source,this,jdbc,template,new,jdbc,template,data,source
JdbcBeanDefinitionReader -> public void setDataSource(DataSource dataSource);1477045587;Set the DataSource to use to obtain database connections._Will implicitly create a new JdbcTemplate with the given DataSource.;public void setDataSource(DataSource dataSource) {_		this.jdbcTemplate = new JdbcTemplate(dataSource)__	};set,the,data,source,to,use,to,obtain,database,connections,will,implicitly,create,a,new,jdbc,template,with,the,given,data,source;public,void,set,data,source,data,source,data,source,this,jdbc,template,new,jdbc,template,data,source
JdbcBeanDefinitionReader -> public void setDataSource(DataSource dataSource);1487178248;Set the DataSource to use to obtain database connections._Will implicitly create a new JdbcTemplate with the given DataSource.;public void setDataSource(DataSource dataSource) {_		this.jdbcTemplate = new JdbcTemplate(dataSource)__	};set,the,data,source,to,use,to,obtain,database,connections,will,implicitly,create,a,new,jdbc,template,with,the,given,data,source;public,void,set,data,source,data,source,data,source,this,jdbc,template,new,jdbc,template,data,source
JdbcBeanDefinitionReader -> public void setDataSource(DataSource dataSource);1497341397;Set the DataSource to use to obtain database connections._Will implicitly create a new JdbcTemplate with the given DataSource.;public void setDataSource(DataSource dataSource) {_		this.jdbcTemplate = new JdbcTemplate(dataSource)__	};set,the,data,source,to,use,to,obtain,database,connections,will,implicitly,create,a,new,jdbc,template,with,the,given,data,source;public,void,set,data,source,data,source,data,source,this,jdbc,template,new,jdbc,template,data,source
JdbcBeanDefinitionReader -> public void setDataSource(DataSource dataSource);1500495740;Set the DataSource to use to obtain database connections._Will implicitly create a new JdbcTemplate with the given DataSource.;public void setDataSource(DataSource dataSource) {_		this.jdbcTemplate = new JdbcTemplate(dataSource)__	};set,the,data,source,to,use,to,obtain,database,connections,will,implicitly,create,a,new,jdbc,template,with,the,given,data,source;public,void,set,data,source,data,source,data,source,this,jdbc,template,new,jdbc,template,data,source
JdbcBeanDefinitionReader -> public void setDataSource(DataSource dataSource);1530174524;Set the DataSource to use to obtain database connections._Will implicitly create a new JdbcTemplate with the given DataSource.;public void setDataSource(DataSource dataSource) {_		this.jdbcTemplate = new JdbcTemplate(dataSource)__	};set,the,data,source,to,use,to,obtain,database,connections,will,implicitly,create,a,new,jdbc,template,with,the,given,data,source;public,void,set,data,source,data,source,data,source,this,jdbc,template,new,jdbc,template,data,source
JdbcBeanDefinitionReader -> public void setJdbcTemplate(JdbcTemplate jdbcTemplate);1328020251;Set the JdbcTemplate to be used by this bean factory._Contains settings for DataSource, SQLExceptionTranslator, NativeJdbcExtractor, etc.;public void setJdbcTemplate(JdbcTemplate jdbcTemplate) {_		Assert.notNull(jdbcTemplate, "JdbcTemplate must not be null")__		this.jdbcTemplate = jdbcTemplate__	};set,the,jdbc,template,to,be,used,by,this,bean,factory,contains,settings,for,data,source,sqlexception,translator,native,jdbc,extractor,etc;public,void,set,jdbc,template,jdbc,template,jdbc,template,assert,not,null,jdbc,template,jdbc,template,must,not,be,null,this,jdbc,template,jdbc,template
JdbcBeanDefinitionReader -> public void setJdbcTemplate(JdbcTemplate jdbcTemplate);1356735495;Set the JdbcTemplate to be used by this bean factory._Contains settings for DataSource, SQLExceptionTranslator, NativeJdbcExtractor, etc.;public void setJdbcTemplate(JdbcTemplate jdbcTemplate) {_		Assert.notNull(jdbcTemplate, "JdbcTemplate must not be null")__		this.jdbcTemplate = jdbcTemplate__	};set,the,jdbc,template,to,be,used,by,this,bean,factory,contains,settings,for,data,source,sqlexception,translator,native,jdbc,extractor,etc;public,void,set,jdbc,template,jdbc,template,jdbc,template,assert,not,null,jdbc,template,jdbc,template,must,not,be,null,this,jdbc,template,jdbc,template
JdbcBeanDefinitionReader -> public void setJdbcTemplate(JdbcTemplate jdbcTemplate);1357119239;Set the JdbcTemplate to be used by this bean factory._Contains settings for DataSource, SQLExceptionTranslator, NativeJdbcExtractor, etc.;public void setJdbcTemplate(JdbcTemplate jdbcTemplate) {_		Assert.notNull(jdbcTemplate, "JdbcTemplate must not be null")__		this.jdbcTemplate = jdbcTemplate__	};set,the,jdbc,template,to,be,used,by,this,bean,factory,contains,settings,for,data,source,sqlexception,translator,native,jdbc,extractor,etc;public,void,set,jdbc,template,jdbc,template,jdbc,template,assert,not,null,jdbc,template,jdbc,template,must,not,be,null,this,jdbc,template,jdbc,template
JdbcBeanDefinitionReader -> public void setJdbcTemplate(JdbcTemplate jdbcTemplate);1368482696;Set the JdbcTemplate to be used by this bean factory._Contains settings for DataSource, SQLExceptionTranslator, NativeJdbcExtractor, etc.;public void setJdbcTemplate(JdbcTemplate jdbcTemplate) {_		Assert.notNull(jdbcTemplate, "JdbcTemplate must not be null")__		this.jdbcTemplate = jdbcTemplate__	};set,the,jdbc,template,to,be,used,by,this,bean,factory,contains,settings,for,data,source,sqlexception,translator,native,jdbc,extractor,etc;public,void,set,jdbc,template,jdbc,template,jdbc,template,assert,not,null,jdbc,template,jdbc,template,must,not,be,null,this,jdbc,template,jdbc,template
JdbcBeanDefinitionReader -> public void setJdbcTemplate(JdbcTemplate jdbcTemplate);1413848647;Set the JdbcTemplate to be used by this bean factory._Contains settings for DataSource, SQLExceptionTranslator, NativeJdbcExtractor, etc.;public void setJdbcTemplate(JdbcTemplate jdbcTemplate) {_		Assert.notNull(jdbcTemplate, "JdbcTemplate must not be null")__		this.jdbcTemplate = jdbcTemplate__	};set,the,jdbc,template,to,be,used,by,this,bean,factory,contains,settings,for,data,source,sqlexception,translator,native,jdbc,extractor,etc;public,void,set,jdbc,template,jdbc,template,jdbc,template,assert,not,null,jdbc,template,jdbc,template,must,not,be,null,this,jdbc,template,jdbc,template
JdbcBeanDefinitionReader -> public void setJdbcTemplate(JdbcTemplate jdbcTemplate);1477045587;Set the JdbcTemplate to be used by this bean factory._Contains settings for DataSource, SQLExceptionTranslator, NativeJdbcExtractor, etc.;public void setJdbcTemplate(JdbcTemplate jdbcTemplate) {_		Assert.notNull(jdbcTemplate, "JdbcTemplate must not be null")__		this.jdbcTemplate = jdbcTemplate__	};set,the,jdbc,template,to,be,used,by,this,bean,factory,contains,settings,for,data,source,sqlexception,translator,native,jdbc,extractor,etc;public,void,set,jdbc,template,jdbc,template,jdbc,template,assert,not,null,jdbc,template,jdbc,template,must,not,be,null,this,jdbc,template,jdbc,template
JdbcBeanDefinitionReader -> public void setJdbcTemplate(JdbcTemplate jdbcTemplate);1487178248;Set the JdbcTemplate to be used by this bean factory._Contains settings for DataSource, SQLExceptionTranslator, etc.;public void setJdbcTemplate(JdbcTemplate jdbcTemplate) {_		Assert.notNull(jdbcTemplate, "JdbcTemplate must not be null")__		this.jdbcTemplate = jdbcTemplate__	};set,the,jdbc,template,to,be,used,by,this,bean,factory,contains,settings,for,data,source,sqlexception,translator,etc;public,void,set,jdbc,template,jdbc,template,jdbc,template,assert,not,null,jdbc,template,jdbc,template,must,not,be,null,this,jdbc,template,jdbc,template
JdbcBeanDefinitionReader -> public void setJdbcTemplate(JdbcTemplate jdbcTemplate);1497341397;Set the JdbcTemplate to be used by this bean factory._Contains settings for DataSource, SQLExceptionTranslator, etc.;public void setJdbcTemplate(JdbcTemplate jdbcTemplate) {_		Assert.notNull(jdbcTemplate, "JdbcTemplate must not be null")__		this.jdbcTemplate = jdbcTemplate__	};set,the,jdbc,template,to,be,used,by,this,bean,factory,contains,settings,for,data,source,sqlexception,translator,etc;public,void,set,jdbc,template,jdbc,template,jdbc,template,assert,not,null,jdbc,template,jdbc,template,must,not,be,null,this,jdbc,template,jdbc,template
JdbcBeanDefinitionReader -> public void setJdbcTemplate(JdbcTemplate jdbcTemplate);1500495740;Set the JdbcTemplate to be used by this bean factory._Contains settings for DataSource, SQLExceptionTranslator, etc.;public void setJdbcTemplate(JdbcTemplate jdbcTemplate) {_		Assert.notNull(jdbcTemplate, "JdbcTemplate must not be null")__		this.jdbcTemplate = jdbcTemplate__	};set,the,jdbc,template,to,be,used,by,this,bean,factory,contains,settings,for,data,source,sqlexception,translator,etc;public,void,set,jdbc,template,jdbc,template,jdbc,template,assert,not,null,jdbc,template,jdbc,template,must,not,be,null,this,jdbc,template,jdbc,template
JdbcBeanDefinitionReader -> public void setJdbcTemplate(JdbcTemplate jdbcTemplate);1530174524;Set the JdbcTemplate to be used by this bean factory._Contains settings for DataSource, SQLExceptionTranslator, etc.;public void setJdbcTemplate(JdbcTemplate jdbcTemplate) {_		Assert.notNull(jdbcTemplate, "JdbcTemplate must not be null")__		this.jdbcTemplate = jdbcTemplate__	};set,the,jdbc,template,to,be,used,by,this,bean,factory,contains,settings,for,data,source,sqlexception,translator,etc;public,void,set,jdbc,template,jdbc,template,jdbc,template,assert,not,null,jdbc,template,jdbc,template,must,not,be,null,this,jdbc,template,jdbc,template
