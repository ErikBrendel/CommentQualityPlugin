# id;timestamp;commentText;codeText;commentWords;codeWords
WebSphereDataSourceAdapter -> @Override 	protected Connection doGetConnection(@Nullable String username, @Nullable String password) throws SQLException;1500495740;Builds a WebSphere JDBCConnectionSpec object for the current settings_and calls {@code WSDataSource.getConnection(JDBCConnectionSpec)}._@see #createConnectionSpec_@see com.ibm.websphere.rsadapter.WSDataSource#getConnection(com.ibm.websphere.rsadapter.JDBCConnectionSpec);@Override_	protected Connection doGetConnection(@Nullable String username, @Nullable String password) throws SQLException {_		_		Object connSpec = createConnectionSpec(_				getCurrentIsolationLevel(), getCurrentReadOnlyFlag(), username, password)__		if (logger.isDebugEnabled()) {_			logger.debug("Obtaining JDBC Connection from WebSphere DataSource [" +_					getTargetDataSource() + "], using ConnectionSpec [" + connSpec + "]")__		}_		_		Connection con = (Connection) ReflectionUtils.invokeJdbcMethod(_				this.wsDataSourceGetConnectionMethod, obtainTargetDataSource(), connSpec)__		Assert.state(con != null, "No Connection")__		return con__	};builds,a,web,sphere,jdbcconnection,spec,object,for,the,current,settings,and,calls,code,wsdata,source,get,connection,jdbcconnection,spec,see,create,connection,spec,see,com,ibm,websphere,rsadapter,wsdata,source,get,connection,com,ibm,websphere,rsadapter,jdbcconnection,spec;override,protected,connection,do,get,connection,nullable,string,username,nullable,string,password,throws,sqlexception,object,conn,spec,create,connection,spec,get,current,isolation,level,get,current,read,only,flag,username,password,if,logger,is,debug,enabled,logger,debug,obtaining,jdbc,connection,from,web,sphere,data,source,get,target,data,source,using,connection,spec,conn,spec,connection,con,connection,reflection,utils,invoke,jdbc,method,this,ws,data,source,get,connection,method,obtain,target,data,source,conn,spec,assert,state,con,null,no,connection,return,con
WebSphereDataSourceAdapter -> @Override 	protected Connection doGetConnection(@Nullable String username, @Nullable String password) throws SQLException;1518615840;Builds a WebSphere JDBCConnectionSpec object for the current settings_and calls {@code WSDataSource.getConnection(JDBCConnectionSpec)}._@see #createConnectionSpec_@see com.ibm.websphere.rsadapter.WSDataSource#getConnection(com.ibm.websphere.rsadapter.JDBCConnectionSpec);@Override_	protected Connection doGetConnection(@Nullable String username, @Nullable String password) throws SQLException {_		_		Object connSpec = createConnectionSpec(_				getCurrentIsolationLevel(), getCurrentReadOnlyFlag(), username, password)__		if (logger.isDebugEnabled()) {_			logger.debug("Obtaining JDBC Connection from WebSphere DataSource [" +_					getTargetDataSource() + "], using ConnectionSpec [" + connSpec + "]")__		}_		_		Connection con = (Connection) ReflectionUtils.invokeJdbcMethod(_				this.wsDataSourceGetConnectionMethod, obtainTargetDataSource(), connSpec)__		Assert.state(con != null, "No Connection")__		return con__	};builds,a,web,sphere,jdbcconnection,spec,object,for,the,current,settings,and,calls,code,wsdata,source,get,connection,jdbcconnection,spec,see,create,connection,spec,see,com,ibm,websphere,rsadapter,wsdata,source,get,connection,com,ibm,websphere,rsadapter,jdbcconnection,spec;override,protected,connection,do,get,connection,nullable,string,username,nullable,string,password,throws,sqlexception,object,conn,spec,create,connection,spec,get,current,isolation,level,get,current,read,only,flag,username,password,if,logger,is,debug,enabled,logger,debug,obtaining,jdbc,connection,from,web,sphere,data,source,get,target,data,source,using,connection,spec,conn,spec,connection,con,connection,reflection,utils,invoke,jdbc,method,this,ws,data,source,get,connection,method,obtain,target,data,source,conn,spec,assert,state,con,null,no,connection,return,con
WebSphereDataSourceAdapter -> @Override 	protected Connection doGetConnection(@Nullable String username, @Nullable String password) throws SQLException;1541417180;Builds a WebSphere JDBCConnectionSpec object for the current settings_and calls {@code WSDataSource.getConnection(JDBCConnectionSpec)}._@see #createConnectionSpec_@see com.ibm.websphere.rsadapter.WSDataSource#getConnection(com.ibm.websphere.rsadapter.JDBCConnectionSpec);@Override_	protected Connection doGetConnection(@Nullable String username, @Nullable String password) throws SQLException {_		_		Object connSpec = createConnectionSpec(_				getCurrentIsolationLevel(), getCurrentReadOnlyFlag(), username, password)__		if (logger.isDebugEnabled()) {_			logger.debug("Obtaining JDBC Connection from WebSphere DataSource [" +_					getTargetDataSource() + "], using ConnectionSpec [" + connSpec + "]")__		}_		_		Connection con = (Connection) invokeJdbcMethod(_				this.wsDataSourceGetConnectionMethod, obtainTargetDataSource(), connSpec)__		Assert.state(con != null, "No Connection")__		return con__	};builds,a,web,sphere,jdbcconnection,spec,object,for,the,current,settings,and,calls,code,wsdata,source,get,connection,jdbcconnection,spec,see,create,connection,spec,see,com,ibm,websphere,rsadapter,wsdata,source,get,connection,com,ibm,websphere,rsadapter,jdbcconnection,spec;override,protected,connection,do,get,connection,nullable,string,username,nullable,string,password,throws,sqlexception,object,conn,spec,create,connection,spec,get,current,isolation,level,get,current,read,only,flag,username,password,if,logger,is,debug,enabled,logger,debug,obtaining,jdbc,connection,from,web,sphere,data,source,get,target,data,source,using,connection,spec,conn,spec,connection,con,connection,invoke,jdbc,method,this,ws,data,source,get,connection,method,obtain,target,data,source,conn,spec,assert,state,con,null,no,connection,return,con
WebSphereDataSourceAdapter -> protected Object createConnectionSpec(@Nullable Integer isolationLevel, @Nullable Boolean readOnlyFlag, 			@Nullable String username, @Nullable String password) throws SQLException;1496837955;Create a WebSphere {@code JDBCConnectionSpec} object for the given characteristics._<p>The default implementation uses reflection to apply the given settings._Can be overridden in subclasses to customize the JDBCConnectionSpec object_(<a href="http://publib.boulder.ibm.com/infocenter/wasinfo/v6r0/topic/com.ibm.websphere.javadoc.doc/public_html/api/com/ibm/websphere/rsadapter/JDBCConnectionSpec.html">JDBCConnectionSpec javadoc</a>__<a href="http://www.ibm.com/developerworks/websphere/library/techarticles/0404_tang/0404_tang.html">IBM developerWorks article</a>)._@param isolationLevel the isolation level to apply (or {@code null} if none)_@param readOnlyFlag the read-only flag to apply (or {@code null} if none)_@param username the username to apply ({@code null} or empty indicates the default)_@param password the password to apply (may be {@code null} or empty)_@throws SQLException if thrown by JDBCConnectionSpec API methods_@see com.ibm.websphere.rsadapter.JDBCConnectionSpec;protected Object createConnectionSpec(@Nullable Integer isolationLevel, @Nullable Boolean readOnlyFlag,_			@Nullable String username, @Nullable String password) throws SQLException {__		Object connSpec = ReflectionUtils.invokeJdbcMethod(this.newJdbcConnSpecMethod, null)__		Assert.state(connSpec != null, "No JDBCConnectionSpec")__		if (isolationLevel != null) {_			ReflectionUtils.invokeJdbcMethod(this.setTransactionIsolationMethod, connSpec, isolationLevel)__		}_		if (readOnlyFlag != null) {_			ReflectionUtils.invokeJdbcMethod(this.setReadOnlyMethod, connSpec, readOnlyFlag)__		}_		_		_		if (StringUtils.hasLength(username)) {_			ReflectionUtils.invokeJdbcMethod(this.setUserNameMethod, connSpec, username)__			ReflectionUtils.invokeJdbcMethod(this.setPasswordMethod, connSpec, password)__		}_		return connSpec__	};create,a,web,sphere,code,jdbcconnection,spec,object,for,the,given,characteristics,p,the,default,implementation,uses,reflection,to,apply,the,given,settings,can,be,overridden,in,subclasses,to,customize,the,jdbcconnection,spec,object,a,href,http,publib,boulder,ibm,com,infocenter,wasinfo,v6r0,topic,com,ibm,websphere,javadoc,doc,api,com,ibm,websphere,rsadapter,jdbcconnection,spec,html,jdbcconnection,spec,javadoc,a,a,href,http,www,ibm,com,developerworks,websphere,library,techarticles,html,ibm,developer,works,article,a,param,isolation,level,the,isolation,level,to,apply,or,code,null,if,none,param,read,only,flag,the,read,only,flag,to,apply,or,code,null,if,none,param,username,the,username,to,apply,code,null,or,empty,indicates,the,default,param,password,the,password,to,apply,may,be,code,null,or,empty,throws,sqlexception,if,thrown,by,jdbcconnection,spec,api,methods,see,com,ibm,websphere,rsadapter,jdbcconnection,spec;protected,object,create,connection,spec,nullable,integer,isolation,level,nullable,boolean,read,only,flag,nullable,string,username,nullable,string,password,throws,sqlexception,object,conn,spec,reflection,utils,invoke,jdbc,method,this,new,jdbc,conn,spec,method,null,assert,state,conn,spec,null,no,jdbcconnection,spec,if,isolation,level,null,reflection,utils,invoke,jdbc,method,this,set,transaction,isolation,method,conn,spec,isolation,level,if,read,only,flag,null,reflection,utils,invoke,jdbc,method,this,set,read,only,method,conn,spec,read,only,flag,if,string,utils,has,length,username,reflection,utils,invoke,jdbc,method,this,set,user,name,method,conn,spec,username,reflection,utils,invoke,jdbc,method,this,set,password,method,conn,spec,password,return,conn,spec
WebSphereDataSourceAdapter -> protected Object createConnectionSpec(@Nullable Integer isolationLevel, @Nullable Boolean readOnlyFlag, 			@Nullable String username, @Nullable String password) throws SQLException;1500495740;Create a WebSphere {@code JDBCConnectionSpec} object for the given characteristics._<p>The default implementation uses reflection to apply the given settings._Can be overridden in subclasses to customize the JDBCConnectionSpec object_(<a href="http://publib.boulder.ibm.com/infocenter/wasinfo/v6r0/topic/com.ibm.websphere.javadoc.doc/public_html/api/com/ibm/websphere/rsadapter/JDBCConnectionSpec.html">JDBCConnectionSpec javadoc</a>__<a href="http://www.ibm.com/developerworks/websphere/library/techarticles/0404_tang/0404_tang.html">IBM developerWorks article</a>)._@param isolationLevel the isolation level to apply (or {@code null} if none)_@param readOnlyFlag the read-only flag to apply (or {@code null} if none)_@param username the username to apply ({@code null} or empty indicates the default)_@param password the password to apply (may be {@code null} or empty)_@throws SQLException if thrown by JDBCConnectionSpec API methods_@see com.ibm.websphere.rsadapter.JDBCConnectionSpec;protected Object createConnectionSpec(@Nullable Integer isolationLevel, @Nullable Boolean readOnlyFlag,_			@Nullable String username, @Nullable String password) throws SQLException {__		Object connSpec = ReflectionUtils.invokeJdbcMethod(this.newJdbcConnSpecMethod, null)__		Assert.state(connSpec != null, "No JDBCConnectionSpec")__		if (isolationLevel != null) {_			ReflectionUtils.invokeJdbcMethod(this.setTransactionIsolationMethod, connSpec, isolationLevel)__		}_		if (readOnlyFlag != null) {_			ReflectionUtils.invokeJdbcMethod(this.setReadOnlyMethod, connSpec, readOnlyFlag)__		}_		_		_		if (StringUtils.hasLength(username)) {_			ReflectionUtils.invokeJdbcMethod(this.setUserNameMethod, connSpec, username)__			ReflectionUtils.invokeJdbcMethod(this.setPasswordMethod, connSpec, password)__		}_		return connSpec__	};create,a,web,sphere,code,jdbcconnection,spec,object,for,the,given,characteristics,p,the,default,implementation,uses,reflection,to,apply,the,given,settings,can,be,overridden,in,subclasses,to,customize,the,jdbcconnection,spec,object,a,href,http,publib,boulder,ibm,com,infocenter,wasinfo,v6r0,topic,com,ibm,websphere,javadoc,doc,api,com,ibm,websphere,rsadapter,jdbcconnection,spec,html,jdbcconnection,spec,javadoc,a,a,href,http,www,ibm,com,developerworks,websphere,library,techarticles,html,ibm,developer,works,article,a,param,isolation,level,the,isolation,level,to,apply,or,code,null,if,none,param,read,only,flag,the,read,only,flag,to,apply,or,code,null,if,none,param,username,the,username,to,apply,code,null,or,empty,indicates,the,default,param,password,the,password,to,apply,may,be,code,null,or,empty,throws,sqlexception,if,thrown,by,jdbcconnection,spec,api,methods,see,com,ibm,websphere,rsadapter,jdbcconnection,spec;protected,object,create,connection,spec,nullable,integer,isolation,level,nullable,boolean,read,only,flag,nullable,string,username,nullable,string,password,throws,sqlexception,object,conn,spec,reflection,utils,invoke,jdbc,method,this,new,jdbc,conn,spec,method,null,assert,state,conn,spec,null,no,jdbcconnection,spec,if,isolation,level,null,reflection,utils,invoke,jdbc,method,this,set,transaction,isolation,method,conn,spec,isolation,level,if,read,only,flag,null,reflection,utils,invoke,jdbc,method,this,set,read,only,method,conn,spec,read,only,flag,if,string,utils,has,length,username,reflection,utils,invoke,jdbc,method,this,set,user,name,method,conn,spec,username,reflection,utils,invoke,jdbc,method,this,set,password,method,conn,spec,password,return,conn,spec
WebSphereDataSourceAdapter -> protected Object createConnectionSpec(@Nullable Integer isolationLevel, @Nullable Boolean readOnlyFlag, 			@Nullable String username, @Nullable String password) throws SQLException;1518615840;Create a WebSphere {@code JDBCConnectionSpec} object for the given characteristics._<p>The default implementation uses reflection to apply the given settings._Can be overridden in subclasses to customize the JDBCConnectionSpec object_(<a href="http://publib.boulder.ibm.com/infocenter/wasinfo/v6r0/topic/com.ibm.websphere.javadoc.doc/public_html/api/com/ibm/websphere/rsadapter/JDBCConnectionSpec.html">JDBCConnectionSpec javadoc</a>__<a href="http://www.ibm.com/developerworks/websphere/library/techarticles/0404_tang/0404_tang.html">IBM developerWorks article</a>)._@param isolationLevel the isolation level to apply (or {@code null} if none)_@param readOnlyFlag the read-only flag to apply (or {@code null} if none)_@param username the username to apply ({@code null} or empty indicates the default)_@param password the password to apply (may be {@code null} or empty)_@throws SQLException if thrown by JDBCConnectionSpec API methods_@see com.ibm.websphere.rsadapter.JDBCConnectionSpec;protected Object createConnectionSpec(@Nullable Integer isolationLevel, @Nullable Boolean readOnlyFlag,_			@Nullable String username, @Nullable String password) throws SQLException {__		Object connSpec = ReflectionUtils.invokeJdbcMethod(this.newJdbcConnSpecMethod, null)__		Assert.state(connSpec != null, "No JDBCConnectionSpec")__		if (isolationLevel != null) {_			ReflectionUtils.invokeJdbcMethod(this.setTransactionIsolationMethod, connSpec, isolationLevel)__		}_		if (readOnlyFlag != null) {_			ReflectionUtils.invokeJdbcMethod(this.setReadOnlyMethod, connSpec, readOnlyFlag)__		}_		_		_		if (StringUtils.hasLength(username)) {_			ReflectionUtils.invokeJdbcMethod(this.setUserNameMethod, connSpec, username)__			ReflectionUtils.invokeJdbcMethod(this.setPasswordMethod, connSpec, password)__		}_		return connSpec__	};create,a,web,sphere,code,jdbcconnection,spec,object,for,the,given,characteristics,p,the,default,implementation,uses,reflection,to,apply,the,given,settings,can,be,overridden,in,subclasses,to,customize,the,jdbcconnection,spec,object,a,href,http,publib,boulder,ibm,com,infocenter,wasinfo,v6r0,topic,com,ibm,websphere,javadoc,doc,api,com,ibm,websphere,rsadapter,jdbcconnection,spec,html,jdbcconnection,spec,javadoc,a,a,href,http,www,ibm,com,developerworks,websphere,library,techarticles,html,ibm,developer,works,article,a,param,isolation,level,the,isolation,level,to,apply,or,code,null,if,none,param,read,only,flag,the,read,only,flag,to,apply,or,code,null,if,none,param,username,the,username,to,apply,code,null,or,empty,indicates,the,default,param,password,the,password,to,apply,may,be,code,null,or,empty,throws,sqlexception,if,thrown,by,jdbcconnection,spec,api,methods,see,com,ibm,websphere,rsadapter,jdbcconnection,spec;protected,object,create,connection,spec,nullable,integer,isolation,level,nullable,boolean,read,only,flag,nullable,string,username,nullable,string,password,throws,sqlexception,object,conn,spec,reflection,utils,invoke,jdbc,method,this,new,jdbc,conn,spec,method,null,assert,state,conn,spec,null,no,jdbcconnection,spec,if,isolation,level,null,reflection,utils,invoke,jdbc,method,this,set,transaction,isolation,method,conn,spec,isolation,level,if,read,only,flag,null,reflection,utils,invoke,jdbc,method,this,set,read,only,method,conn,spec,read,only,flag,if,string,utils,has,length,username,reflection,utils,invoke,jdbc,method,this,set,user,name,method,conn,spec,username,reflection,utils,invoke,jdbc,method,this,set,password,method,conn,spec,password,return,conn,spec
WebSphereDataSourceAdapter -> protected Object createConnectionSpec(@Nullable Integer isolationLevel, @Nullable Boolean readOnlyFlag, 			@Nullable String username, @Nullable String password) throws SQLException;1541417180;Create a WebSphere {@code JDBCConnectionSpec} object for the given characteristics._<p>The default implementation uses reflection to apply the given settings._Can be overridden in subclasses to customize the JDBCConnectionSpec object_(<a href="http://publib.boulder.ibm.com/infocenter/wasinfo/v6r0/topic/com.ibm.websphere.javadoc.doc/public_html/api/com/ibm/websphere/rsadapter/JDBCConnectionSpec.html">JDBCConnectionSpec javadoc</a>__<a href="http://www.ibm.com/developerworks/websphere/library/techarticles/0404_tang/0404_tang.html">IBM developerWorks article</a>)._@param isolationLevel the isolation level to apply (or {@code null} if none)_@param readOnlyFlag the read-only flag to apply (or {@code null} if none)_@param username the username to apply ({@code null} or empty indicates the default)_@param password the password to apply (may be {@code null} or empty)_@throws SQLException if thrown by JDBCConnectionSpec API methods_@see com.ibm.websphere.rsadapter.JDBCConnectionSpec;protected Object createConnectionSpec(@Nullable Integer isolationLevel, @Nullable Boolean readOnlyFlag,_			@Nullable String username, @Nullable String password) throws SQLException {__		Object connSpec = invokeJdbcMethod(this.newJdbcConnSpecMethod, null)__		Assert.state(connSpec != null, "No JDBCConnectionSpec")__		if (isolationLevel != null) {_			invokeJdbcMethod(this.setTransactionIsolationMethod, connSpec, isolationLevel)__		}_		if (readOnlyFlag != null) {_			invokeJdbcMethod(this.setReadOnlyMethod, connSpec, readOnlyFlag)__		}_		_		_		if (StringUtils.hasLength(username)) {_			invokeJdbcMethod(this.setUserNameMethod, connSpec, username)__			invokeJdbcMethod(this.setPasswordMethod, connSpec, password)__		}_		return connSpec__	};create,a,web,sphere,code,jdbcconnection,spec,object,for,the,given,characteristics,p,the,default,implementation,uses,reflection,to,apply,the,given,settings,can,be,overridden,in,subclasses,to,customize,the,jdbcconnection,spec,object,a,href,http,publib,boulder,ibm,com,infocenter,wasinfo,v6r0,topic,com,ibm,websphere,javadoc,doc,api,com,ibm,websphere,rsadapter,jdbcconnection,spec,html,jdbcconnection,spec,javadoc,a,a,href,http,www,ibm,com,developerworks,websphere,library,techarticles,html,ibm,developer,works,article,a,param,isolation,level,the,isolation,level,to,apply,or,code,null,if,none,param,read,only,flag,the,read,only,flag,to,apply,or,code,null,if,none,param,username,the,username,to,apply,code,null,or,empty,indicates,the,default,param,password,the,password,to,apply,may,be,code,null,or,empty,throws,sqlexception,if,thrown,by,jdbcconnection,spec,api,methods,see,com,ibm,websphere,rsadapter,jdbcconnection,spec;protected,object,create,connection,spec,nullable,integer,isolation,level,nullable,boolean,read,only,flag,nullable,string,username,nullable,string,password,throws,sqlexception,object,conn,spec,invoke,jdbc,method,this,new,jdbc,conn,spec,method,null,assert,state,conn,spec,null,no,jdbcconnection,spec,if,isolation,level,null,invoke,jdbc,method,this,set,transaction,isolation,method,conn,spec,isolation,level,if,read,only,flag,null,invoke,jdbc,method,this,set,read,only,method,conn,spec,read,only,flag,if,string,utils,has,length,username,invoke,jdbc,method,this,set,user,name,method,conn,spec,username,invoke,jdbc,method,this,set,password,method,conn,spec,password,return,conn,spec
WebSphereDataSourceAdapter -> public WebSphereDataSourceAdapter();1328020251;This constructor retrieves the WebSphere JDBC connection spec API,_so we can get obtain specific WebSphere Connections using reflection.;public WebSphereDataSourceAdapter() {_		try {_			this.wsDataSourceClass = getClass().getClassLoader().loadClass("com.ibm.websphere.rsadapter.WSDataSource")__			Class jdbcConnSpecClass = getClass().getClassLoader().loadClass("com.ibm.websphere.rsadapter.JDBCConnectionSpec")__			Class wsrraFactoryClass = getClass().getClassLoader().loadClass("com.ibm.websphere.rsadapter.WSRRAFactory")__			this.newJdbcConnSpecMethod = wsrraFactoryClass.getMethod("createJDBCConnectionSpec", (Class[]) null)__			this.wsDataSourceGetConnectionMethod =_					this.wsDataSourceClass.getMethod("getConnection", new Class[] {jdbcConnSpecClass})__			this.setTransactionIsolationMethod =_					jdbcConnSpecClass.getMethod("setTransactionIsolation", new Class[] {int.class})__			this.setReadOnlyMethod = jdbcConnSpecClass.getMethod("setReadOnly", new Class[] {Boolean.class})__			this.setUserNameMethod = jdbcConnSpecClass.getMethod("setUserName", new Class[] {String.class})__			this.setPasswordMethod = jdbcConnSpecClass.getMethod("setPassword", new Class[] {String.class})__		}_		catch (Exception ex) {_			throw new IllegalStateException(_					"Could not initialize WebSphereDataSourceAdapter because WebSphere API classes are not available: " + ex)__		}_	};this,constructor,retrieves,the,web,sphere,jdbc,connection,spec,api,so,we,can,get,obtain,specific,web,sphere,connections,using,reflection;public,web,sphere,data,source,adapter,try,this,ws,data,source,class,get,class,get,class,loader,load,class,com,ibm,websphere,rsadapter,wsdata,source,class,jdbc,conn,spec,class,get,class,get,class,loader,load,class,com,ibm,websphere,rsadapter,jdbcconnection,spec,class,wsrra,factory,class,get,class,get,class,loader,load,class,com,ibm,websphere,rsadapter,wsrrafactory,this,new,jdbc,conn,spec,method,wsrra,factory,class,get,method,create,jdbcconnection,spec,class,null,this,ws,data,source,get,connection,method,this,ws,data,source,class,get,method,get,connection,new,class,jdbc,conn,spec,class,this,set,transaction,isolation,method,jdbc,conn,spec,class,get,method,set,transaction,isolation,new,class,int,class,this,set,read,only,method,jdbc,conn,spec,class,get,method,set,read,only,new,class,boolean,class,this,set,user,name,method,jdbc,conn,spec,class,get,method,set,user,name,new,class,string,class,this,set,password,method,jdbc,conn,spec,class,get,method,set,password,new,class,string,class,catch,exception,ex,throw,new,illegal,state,exception,could,not,initialize,web,sphere,data,source,adapter,because,web,sphere,api,classes,are,not,available,ex
WebSphereDataSourceAdapter -> public WebSphereDataSourceAdapter();1356735495;This constructor retrieves the WebSphere JDBC connection spec API,_so we can get obtain specific WebSphere Connections using reflection.;public WebSphereDataSourceAdapter() {_		try {_			this.wsDataSourceClass = getClass().getClassLoader().loadClass("com.ibm.websphere.rsadapter.WSDataSource")__			Class jdbcConnSpecClass = getClass().getClassLoader().loadClass("com.ibm.websphere.rsadapter.JDBCConnectionSpec")__			Class wsrraFactoryClass = getClass().getClassLoader().loadClass("com.ibm.websphere.rsadapter.WSRRAFactory")__			this.newJdbcConnSpecMethod = wsrraFactoryClass.getMethod("createJDBCConnectionSpec", (Class[]) null)__			this.wsDataSourceGetConnectionMethod =_					this.wsDataSourceClass.getMethod("getConnection", new Class[] {jdbcConnSpecClass})__			this.setTransactionIsolationMethod =_					jdbcConnSpecClass.getMethod("setTransactionIsolation", new Class[] {int.class})__			this.setReadOnlyMethod = jdbcConnSpecClass.getMethod("setReadOnly", new Class[] {Boolean.class})__			this.setUserNameMethod = jdbcConnSpecClass.getMethod("setUserName", new Class[] {String.class})__			this.setPasswordMethod = jdbcConnSpecClass.getMethod("setPassword", new Class[] {String.class})__		}_		catch (Exception ex) {_			throw new IllegalStateException(_					"Could not initialize WebSphereDataSourceAdapter because WebSphere API classes are not available: " + ex)__		}_	};this,constructor,retrieves,the,web,sphere,jdbc,connection,spec,api,so,we,can,get,obtain,specific,web,sphere,connections,using,reflection;public,web,sphere,data,source,adapter,try,this,ws,data,source,class,get,class,get,class,loader,load,class,com,ibm,websphere,rsadapter,wsdata,source,class,jdbc,conn,spec,class,get,class,get,class,loader,load,class,com,ibm,websphere,rsadapter,jdbcconnection,spec,class,wsrra,factory,class,get,class,get,class,loader,load,class,com,ibm,websphere,rsadapter,wsrrafactory,this,new,jdbc,conn,spec,method,wsrra,factory,class,get,method,create,jdbcconnection,spec,class,null,this,ws,data,source,get,connection,method,this,ws,data,source,class,get,method,get,connection,new,class,jdbc,conn,spec,class,this,set,transaction,isolation,method,jdbc,conn,spec,class,get,method,set,transaction,isolation,new,class,int,class,this,set,read,only,method,jdbc,conn,spec,class,get,method,set,read,only,new,class,boolean,class,this,set,user,name,method,jdbc,conn,spec,class,get,method,set,user,name,new,class,string,class,this,set,password,method,jdbc,conn,spec,class,get,method,set,password,new,class,string,class,catch,exception,ex,throw,new,illegal,state,exception,could,not,initialize,web,sphere,data,source,adapter,because,web,sphere,api,classes,are,not,available,ex
WebSphereDataSourceAdapter -> public WebSphereDataSourceAdapter();1385412762;This constructor retrieves the WebSphere JDBC connection spec API,_so we can get obtain specific WebSphere Connections using reflection.;public WebSphereDataSourceAdapter() {_		try {_			this.wsDataSourceClass = getClass().getClassLoader().loadClass("com.ibm.websphere.rsadapter.WSDataSource")__			Class<?> jdbcConnSpecClass = getClass().getClassLoader().loadClass("com.ibm.websphere.rsadapter.JDBCConnectionSpec")__			Class<?> wsrraFactoryClass = getClass().getClassLoader().loadClass("com.ibm.websphere.rsadapter.WSRRAFactory")__			this.newJdbcConnSpecMethod = wsrraFactoryClass.getMethod("createJDBCConnectionSpec", (Class<?>[]) null)__			this.wsDataSourceGetConnectionMethod =_					this.wsDataSourceClass.getMethod("getConnection", new Class<?>[] {jdbcConnSpecClass})__			this.setTransactionIsolationMethod =_					jdbcConnSpecClass.getMethod("setTransactionIsolation", new Class<?>[] {int.class})__			this.setReadOnlyMethod = jdbcConnSpecClass.getMethod("setReadOnly", new Class<?>[] {Boolean.class})__			this.setUserNameMethod = jdbcConnSpecClass.getMethod("setUserName", new Class<?>[] {String.class})__			this.setPasswordMethod = jdbcConnSpecClass.getMethod("setPassword", new Class<?>[] {String.class})__		}_		catch (Exception ex) {_			throw new IllegalStateException(_					"Could not initialize WebSphereDataSourceAdapter because WebSphere API classes are not available: " + ex)__		}_	};this,constructor,retrieves,the,web,sphere,jdbc,connection,spec,api,so,we,can,get,obtain,specific,web,sphere,connections,using,reflection;public,web,sphere,data,source,adapter,try,this,ws,data,source,class,get,class,get,class,loader,load,class,com,ibm,websphere,rsadapter,wsdata,source,class,jdbc,conn,spec,class,get,class,get,class,loader,load,class,com,ibm,websphere,rsadapter,jdbcconnection,spec,class,wsrra,factory,class,get,class,get,class,loader,load,class,com,ibm,websphere,rsadapter,wsrrafactory,this,new,jdbc,conn,spec,method,wsrra,factory,class,get,method,create,jdbcconnection,spec,class,null,this,ws,data,source,get,connection,method,this,ws,data,source,class,get,method,get,connection,new,class,jdbc,conn,spec,class,this,set,transaction,isolation,method,jdbc,conn,spec,class,get,method,set,transaction,isolation,new,class,int,class,this,set,read,only,method,jdbc,conn,spec,class,get,method,set,read,only,new,class,boolean,class,this,set,user,name,method,jdbc,conn,spec,class,get,method,set,user,name,new,class,string,class,this,set,password,method,jdbc,conn,spec,class,get,method,set,password,new,class,string,class,catch,exception,ex,throw,new,illegal,state,exception,could,not,initialize,web,sphere,data,source,adapter,because,web,sphere,api,classes,are,not,available,ex
WebSphereDataSourceAdapter -> public WebSphereDataSourceAdapter();1487178338;This constructor retrieves the WebSphere JDBC connection spec API,_so we can get obtain specific WebSphere Connections using reflection.;public WebSphereDataSourceAdapter() {_		try {_			this.wsDataSourceClass = getClass().getClassLoader().loadClass("com.ibm.websphere.rsadapter.WSDataSource")__			Class<?> jdbcConnSpecClass = getClass().getClassLoader().loadClass("com.ibm.websphere.rsadapter.JDBCConnectionSpec")__			Class<?> wsrraFactoryClass = getClass().getClassLoader().loadClass("com.ibm.websphere.rsadapter.WSRRAFactory")__			this.newJdbcConnSpecMethod = wsrraFactoryClass.getMethod("createJDBCConnectionSpec", (Class<?>[]) null)__			this.wsDataSourceGetConnectionMethod =_					this.wsDataSourceClass.getMethod("getConnection", jdbcConnSpecClass)__			this.setTransactionIsolationMethod =_					jdbcConnSpecClass.getMethod("setTransactionIsolation", int.class)__			this.setReadOnlyMethod = jdbcConnSpecClass.getMethod("setReadOnly", Boolean.class)__			this.setUserNameMethod = jdbcConnSpecClass.getMethod("setUserName", String.class)__			this.setPasswordMethod = jdbcConnSpecClass.getMethod("setPassword", String.class)__		}_		catch (Exception ex) {_			throw new IllegalStateException(_					"Could not initialize WebSphereDataSourceAdapter because WebSphere API classes are not available: " + ex)__		}_	};this,constructor,retrieves,the,web,sphere,jdbc,connection,spec,api,so,we,can,get,obtain,specific,web,sphere,connections,using,reflection;public,web,sphere,data,source,adapter,try,this,ws,data,source,class,get,class,get,class,loader,load,class,com,ibm,websphere,rsadapter,wsdata,source,class,jdbc,conn,spec,class,get,class,get,class,loader,load,class,com,ibm,websphere,rsadapter,jdbcconnection,spec,class,wsrra,factory,class,get,class,get,class,loader,load,class,com,ibm,websphere,rsadapter,wsrrafactory,this,new,jdbc,conn,spec,method,wsrra,factory,class,get,method,create,jdbcconnection,spec,class,null,this,ws,data,source,get,connection,method,this,ws,data,source,class,get,method,get,connection,jdbc,conn,spec,class,this,set,transaction,isolation,method,jdbc,conn,spec,class,get,method,set,transaction,isolation,int,class,this,set,read,only,method,jdbc,conn,spec,class,get,method,set,read,only,boolean,class,this,set,user,name,method,jdbc,conn,spec,class,get,method,set,user,name,string,class,this,set,password,method,jdbc,conn,spec,class,get,method,set,password,string,class,catch,exception,ex,throw,new,illegal,state,exception,could,not,initialize,web,sphere,data,source,adapter,because,web,sphere,api,classes,are,not,available,ex
WebSphereDataSourceAdapter -> public WebSphereDataSourceAdapter();1495868221;This constructor retrieves the WebSphere JDBC connection spec API,_so we can get obtain specific WebSphere Connections using reflection.;public WebSphereDataSourceAdapter() {_		try {_			this.wsDataSourceClass = getClass().getClassLoader().loadClass("com.ibm.websphere.rsadapter.WSDataSource")__			Class<?> jdbcConnSpecClass = getClass().getClassLoader().loadClass("com.ibm.websphere.rsadapter.JDBCConnectionSpec")__			Class<?> wsrraFactoryClass = getClass().getClassLoader().loadClass("com.ibm.websphere.rsadapter.WSRRAFactory")__			this.newJdbcConnSpecMethod = wsrraFactoryClass.getMethod("createJDBCConnectionSpec", (Class<?>[]) null)__			this.wsDataSourceGetConnectionMethod =_					this.wsDataSourceClass.getMethod("getConnection", jdbcConnSpecClass)__			this.setTransactionIsolationMethod =_					jdbcConnSpecClass.getMethod("setTransactionIsolation", int.class)__			this.setReadOnlyMethod = jdbcConnSpecClass.getMethod("setReadOnly", Boolean.class)__			this.setUserNameMethod = jdbcConnSpecClass.getMethod("setUserName", String.class)__			this.setPasswordMethod = jdbcConnSpecClass.getMethod("setPassword", String.class)__		}_		catch (Exception ex) {_			throw new IllegalStateException(_					"Could not initialize WebSphereDataSourceAdapter because WebSphere API classes are not available: " + ex)__		}_	};this,constructor,retrieves,the,web,sphere,jdbc,connection,spec,api,so,we,can,get,obtain,specific,web,sphere,connections,using,reflection;public,web,sphere,data,source,adapter,try,this,ws,data,source,class,get,class,get,class,loader,load,class,com,ibm,websphere,rsadapter,wsdata,source,class,jdbc,conn,spec,class,get,class,get,class,loader,load,class,com,ibm,websphere,rsadapter,jdbcconnection,spec,class,wsrra,factory,class,get,class,get,class,loader,load,class,com,ibm,websphere,rsadapter,wsrrafactory,this,new,jdbc,conn,spec,method,wsrra,factory,class,get,method,create,jdbcconnection,spec,class,null,this,ws,data,source,get,connection,method,this,ws,data,source,class,get,method,get,connection,jdbc,conn,spec,class,this,set,transaction,isolation,method,jdbc,conn,spec,class,get,method,set,transaction,isolation,int,class,this,set,read,only,method,jdbc,conn,spec,class,get,method,set,read,only,boolean,class,this,set,user,name,method,jdbc,conn,spec,class,get,method,set,user,name,string,class,this,set,password,method,jdbc,conn,spec,class,get,method,set,password,string,class,catch,exception,ex,throw,new,illegal,state,exception,could,not,initialize,web,sphere,data,source,adapter,because,web,sphere,api,classes,are,not,available,ex
WebSphereDataSourceAdapter -> public WebSphereDataSourceAdapter();1496837955;This constructor retrieves the WebSphere JDBC connection spec API,_so we can get obtain specific WebSphere Connections using reflection.;public WebSphereDataSourceAdapter() {_		try {_			this.wsDataSourceClass = getClass().getClassLoader().loadClass("com.ibm.websphere.rsadapter.WSDataSource")__			Class<?> jdbcConnSpecClass = getClass().getClassLoader().loadClass("com.ibm.websphere.rsadapter.JDBCConnectionSpec")__			Class<?> wsrraFactoryClass = getClass().getClassLoader().loadClass("com.ibm.websphere.rsadapter.WSRRAFactory")__			this.newJdbcConnSpecMethod = wsrraFactoryClass.getMethod("createJDBCConnectionSpec", (Class<?>[]) null)__			this.wsDataSourceGetConnectionMethod =_					this.wsDataSourceClass.getMethod("getConnection", jdbcConnSpecClass)__			this.setTransactionIsolationMethod =_					jdbcConnSpecClass.getMethod("setTransactionIsolation", int.class)__			this.setReadOnlyMethod = jdbcConnSpecClass.getMethod("setReadOnly", Boolean.class)__			this.setUserNameMethod = jdbcConnSpecClass.getMethod("setUserName", String.class)__			this.setPasswordMethod = jdbcConnSpecClass.getMethod("setPassword", String.class)__		}_		catch (Exception ex) {_			throw new IllegalStateException(_					"Could not initialize WebSphereDataSourceAdapter because WebSphere API classes are not available: " + ex)__		}_	};this,constructor,retrieves,the,web,sphere,jdbc,connection,spec,api,so,we,can,get,obtain,specific,web,sphere,connections,using,reflection;public,web,sphere,data,source,adapter,try,this,ws,data,source,class,get,class,get,class,loader,load,class,com,ibm,websphere,rsadapter,wsdata,source,class,jdbc,conn,spec,class,get,class,get,class,loader,load,class,com,ibm,websphere,rsadapter,jdbcconnection,spec,class,wsrra,factory,class,get,class,get,class,loader,load,class,com,ibm,websphere,rsadapter,wsrrafactory,this,new,jdbc,conn,spec,method,wsrra,factory,class,get,method,create,jdbcconnection,spec,class,null,this,ws,data,source,get,connection,method,this,ws,data,source,class,get,method,get,connection,jdbc,conn,spec,class,this,set,transaction,isolation,method,jdbc,conn,spec,class,get,method,set,transaction,isolation,int,class,this,set,read,only,method,jdbc,conn,spec,class,get,method,set,read,only,boolean,class,this,set,user,name,method,jdbc,conn,spec,class,get,method,set,user,name,string,class,this,set,password,method,jdbc,conn,spec,class,get,method,set,password,string,class,catch,exception,ex,throw,new,illegal,state,exception,could,not,initialize,web,sphere,data,source,adapter,because,web,sphere,api,classes,are,not,available,ex
WebSphereDataSourceAdapter -> public WebSphereDataSourceAdapter();1500495740;This constructor retrieves the WebSphere JDBC connection spec API,_so we can get obtain specific WebSphere Connections using reflection.;public WebSphereDataSourceAdapter() {_		try {_			this.wsDataSourceClass = getClass().getClassLoader().loadClass("com.ibm.websphere.rsadapter.WSDataSource")__			Class<?> jdbcConnSpecClass = getClass().getClassLoader().loadClass("com.ibm.websphere.rsadapter.JDBCConnectionSpec")__			Class<?> wsrraFactoryClass = getClass().getClassLoader().loadClass("com.ibm.websphere.rsadapter.WSRRAFactory")__			this.newJdbcConnSpecMethod = wsrraFactoryClass.getMethod("createJDBCConnectionSpec", (Class<?>[]) null)__			this.wsDataSourceGetConnectionMethod =_					this.wsDataSourceClass.getMethod("getConnection", jdbcConnSpecClass)__			this.setTransactionIsolationMethod =_					jdbcConnSpecClass.getMethod("setTransactionIsolation", int.class)__			this.setReadOnlyMethod = jdbcConnSpecClass.getMethod("setReadOnly", Boolean.class)__			this.setUserNameMethod = jdbcConnSpecClass.getMethod("setUserName", String.class)__			this.setPasswordMethod = jdbcConnSpecClass.getMethod("setPassword", String.class)__		}_		catch (Exception ex) {_			throw new IllegalStateException(_					"Could not initialize WebSphereDataSourceAdapter because WebSphere API classes are not available: " + ex)__		}_	};this,constructor,retrieves,the,web,sphere,jdbc,connection,spec,api,so,we,can,get,obtain,specific,web,sphere,connections,using,reflection;public,web,sphere,data,source,adapter,try,this,ws,data,source,class,get,class,get,class,loader,load,class,com,ibm,websphere,rsadapter,wsdata,source,class,jdbc,conn,spec,class,get,class,get,class,loader,load,class,com,ibm,websphere,rsadapter,jdbcconnection,spec,class,wsrra,factory,class,get,class,get,class,loader,load,class,com,ibm,websphere,rsadapter,wsrrafactory,this,new,jdbc,conn,spec,method,wsrra,factory,class,get,method,create,jdbcconnection,spec,class,null,this,ws,data,source,get,connection,method,this,ws,data,source,class,get,method,get,connection,jdbc,conn,spec,class,this,set,transaction,isolation,method,jdbc,conn,spec,class,get,method,set,transaction,isolation,int,class,this,set,read,only,method,jdbc,conn,spec,class,get,method,set,read,only,boolean,class,this,set,user,name,method,jdbc,conn,spec,class,get,method,set,user,name,string,class,this,set,password,method,jdbc,conn,spec,class,get,method,set,password,string,class,catch,exception,ex,throw,new,illegal,state,exception,could,not,initialize,web,sphere,data,source,adapter,because,web,sphere,api,classes,are,not,available,ex
WebSphereDataSourceAdapter -> public WebSphereDataSourceAdapter();1518615840;This constructor retrieves the WebSphere JDBC connection spec API,_so we can get obtain specific WebSphere Connections using reflection.;public WebSphereDataSourceAdapter() {_		try {_			this.wsDataSourceClass = getClass().getClassLoader().loadClass("com.ibm.websphere.rsadapter.WSDataSource")__			Class<?> jdbcConnSpecClass = getClass().getClassLoader().loadClass("com.ibm.websphere.rsadapter.JDBCConnectionSpec")__			Class<?> wsrraFactoryClass = getClass().getClassLoader().loadClass("com.ibm.websphere.rsadapter.WSRRAFactory")__			this.newJdbcConnSpecMethod = wsrraFactoryClass.getMethod("createJDBCConnectionSpec")__			this.wsDataSourceGetConnectionMethod =_					this.wsDataSourceClass.getMethod("getConnection", jdbcConnSpecClass)__			this.setTransactionIsolationMethod =_					jdbcConnSpecClass.getMethod("setTransactionIsolation", int.class)__			this.setReadOnlyMethod = jdbcConnSpecClass.getMethod("setReadOnly", Boolean.class)__			this.setUserNameMethod = jdbcConnSpecClass.getMethod("setUserName", String.class)__			this.setPasswordMethod = jdbcConnSpecClass.getMethod("setPassword", String.class)__		}_		catch (Exception ex) {_			throw new IllegalStateException(_					"Could not initialize WebSphereDataSourceAdapter because WebSphere API classes are not available: " + ex)__		}_	};this,constructor,retrieves,the,web,sphere,jdbc,connection,spec,api,so,we,can,get,obtain,specific,web,sphere,connections,using,reflection;public,web,sphere,data,source,adapter,try,this,ws,data,source,class,get,class,get,class,loader,load,class,com,ibm,websphere,rsadapter,wsdata,source,class,jdbc,conn,spec,class,get,class,get,class,loader,load,class,com,ibm,websphere,rsadapter,jdbcconnection,spec,class,wsrra,factory,class,get,class,get,class,loader,load,class,com,ibm,websphere,rsadapter,wsrrafactory,this,new,jdbc,conn,spec,method,wsrra,factory,class,get,method,create,jdbcconnection,spec,this,ws,data,source,get,connection,method,this,ws,data,source,class,get,method,get,connection,jdbc,conn,spec,class,this,set,transaction,isolation,method,jdbc,conn,spec,class,get,method,set,transaction,isolation,int,class,this,set,read,only,method,jdbc,conn,spec,class,get,method,set,read,only,boolean,class,this,set,user,name,method,jdbc,conn,spec,class,get,method,set,user,name,string,class,this,set,password,method,jdbc,conn,spec,class,get,method,set,password,string,class,catch,exception,ex,throw,new,illegal,state,exception,could,not,initialize,web,sphere,data,source,adapter,because,web,sphere,api,classes,are,not,available,ex
WebSphereDataSourceAdapter -> public WebSphereDataSourceAdapter();1541417180;This constructor retrieves the WebSphere JDBC connection spec API,_so we can get obtain specific WebSphere Connections using reflection.;public WebSphereDataSourceAdapter() {_		try {_			this.wsDataSourceClass = getClass().getClassLoader().loadClass("com.ibm.websphere.rsadapter.WSDataSource")__			Class<?> jdbcConnSpecClass = getClass().getClassLoader().loadClass("com.ibm.websphere.rsadapter.JDBCConnectionSpec")__			Class<?> wsrraFactoryClass = getClass().getClassLoader().loadClass("com.ibm.websphere.rsadapter.WSRRAFactory")__			this.newJdbcConnSpecMethod = wsrraFactoryClass.getMethod("createJDBCConnectionSpec")__			this.wsDataSourceGetConnectionMethod =_					this.wsDataSourceClass.getMethod("getConnection", jdbcConnSpecClass)__			this.setTransactionIsolationMethod =_					jdbcConnSpecClass.getMethod("setTransactionIsolation", int.class)__			this.setReadOnlyMethod = jdbcConnSpecClass.getMethod("setReadOnly", Boolean.class)__			this.setUserNameMethod = jdbcConnSpecClass.getMethod("setUserName", String.class)__			this.setPasswordMethod = jdbcConnSpecClass.getMethod("setPassword", String.class)__		}_		catch (Exception ex) {_			throw new IllegalStateException(_					"Could not initialize WebSphereDataSourceAdapter because WebSphere API classes are not available: " + ex)__		}_	};this,constructor,retrieves,the,web,sphere,jdbc,connection,spec,api,so,we,can,get,obtain,specific,web,sphere,connections,using,reflection;public,web,sphere,data,source,adapter,try,this,ws,data,source,class,get,class,get,class,loader,load,class,com,ibm,websphere,rsadapter,wsdata,source,class,jdbc,conn,spec,class,get,class,get,class,loader,load,class,com,ibm,websphere,rsadapter,jdbcconnection,spec,class,wsrra,factory,class,get,class,get,class,loader,load,class,com,ibm,websphere,rsadapter,wsrrafactory,this,new,jdbc,conn,spec,method,wsrra,factory,class,get,method,create,jdbcconnection,spec,this,ws,data,source,get,connection,method,this,ws,data,source,class,get,method,get,connection,jdbc,conn,spec,class,this,set,transaction,isolation,method,jdbc,conn,spec,class,get,method,set,transaction,isolation,int,class,this,set,read,only,method,jdbc,conn,spec,class,get,method,set,read,only,boolean,class,this,set,user,name,method,jdbc,conn,spec,class,get,method,set,user,name,string,class,this,set,password,method,jdbc,conn,spec,class,get,method,set,password,string,class,catch,exception,ex,throw,new,illegal,state,exception,could,not,initialize,web,sphere,data,source,adapter,because,web,sphere,api,classes,are,not,available,ex
WebSphereDataSourceAdapter -> protected Object createConnectionSpec( 			Integer isolationLevel, Boolean readOnlyFlag, String username, String password) throws SQLException;1328020251;Create a WebSphere <code>JDBCConnectionSpec</code> object for the given charateristics._<p>The default implementation uses reflection to apply the given settings._Can be overridden in subclasses to customize the JDBCConnectionSpec object_(<a href="http://publib.boulder.ibm.com/infocenter/wasinfo/v6r0/topic/com.ibm.websphere.javadoc.doc/public_html/api/com/ibm/websphere/rsadapter/JDBCConnectionSpec.html">JDBCConnectionSpec javadoc</a>__<a href="http://www.ibm.com/developerworks/websphere/library/techarticles/0404_tang/0404_tang.html">IBM developerWorks article</a>)._@param isolationLevel the isolation level to apply (or <code>null</code> if none)_@param readOnlyFlag the read-only flag to apply (or <code>null</code> if none)_@param username the username to apply (<code>null</code> or empty indicates the default)_@param password the password to apply (may be <code>null</code> or empty)_@throws SQLException if thrown by JDBCConnectionSpec API methods_@see com.ibm.websphere.rsadapter.JDBCConnectionSpec;protected Object createConnectionSpec(_			Integer isolationLevel, Boolean readOnlyFlag, String username, String password) throws SQLException {__		Object connSpec = ReflectionUtils.invokeJdbcMethod(this.newJdbcConnSpecMethod, null)__		if (isolationLevel != null) {_			ReflectionUtils.invokeJdbcMethod(this.setTransactionIsolationMethod, connSpec, isolationLevel)__		}_		if (readOnlyFlag != null) {_			ReflectionUtils.invokeJdbcMethod(this.setReadOnlyMethod, connSpec, readOnlyFlag)__		}_		_		_		if (StringUtils.hasLength(username)) {_			ReflectionUtils.invokeJdbcMethod(this.setUserNameMethod, connSpec, username)__			ReflectionUtils.invokeJdbcMethod(this.setPasswordMethod, connSpec, password)__		}_		return connSpec__	};create,a,web,sphere,code,jdbcconnection,spec,code,object,for,the,given,charateristics,p,the,default,implementation,uses,reflection,to,apply,the,given,settings,can,be,overridden,in,subclasses,to,customize,the,jdbcconnection,spec,object,a,href,http,publib,boulder,ibm,com,infocenter,wasinfo,v6r0,topic,com,ibm,websphere,javadoc,doc,api,com,ibm,websphere,rsadapter,jdbcconnection,spec,html,jdbcconnection,spec,javadoc,a,a,href,http,www,ibm,com,developerworks,websphere,library,techarticles,html,ibm,developer,works,article,a,param,isolation,level,the,isolation,level,to,apply,or,code,null,code,if,none,param,read,only,flag,the,read,only,flag,to,apply,or,code,null,code,if,none,param,username,the,username,to,apply,code,null,code,or,empty,indicates,the,default,param,password,the,password,to,apply,may,be,code,null,code,or,empty,throws,sqlexception,if,thrown,by,jdbcconnection,spec,api,methods,see,com,ibm,websphere,rsadapter,jdbcconnection,spec;protected,object,create,connection,spec,integer,isolation,level,boolean,read,only,flag,string,username,string,password,throws,sqlexception,object,conn,spec,reflection,utils,invoke,jdbc,method,this,new,jdbc,conn,spec,method,null,if,isolation,level,null,reflection,utils,invoke,jdbc,method,this,set,transaction,isolation,method,conn,spec,isolation,level,if,read,only,flag,null,reflection,utils,invoke,jdbc,method,this,set,read,only,method,conn,spec,read,only,flag,if,string,utils,has,length,username,reflection,utils,invoke,jdbc,method,this,set,user,name,method,conn,spec,username,reflection,utils,invoke,jdbc,method,this,set,password,method,conn,spec,password,return,conn,spec
WebSphereDataSourceAdapter -> protected Object createConnectionSpec( 			Integer isolationLevel, Boolean readOnlyFlag, String username, String password) throws SQLException;1356735495;Create a WebSphere {@code JDBCConnectionSpec} object for the given charateristics._<p>The default implementation uses reflection to apply the given settings._Can be overridden in subclasses to customize the JDBCConnectionSpec object_(<a href="http://publib.boulder.ibm.com/infocenter/wasinfo/v6r0/topic/com.ibm.websphere.javadoc.doc/public_html/api/com/ibm/websphere/rsadapter/JDBCConnectionSpec.html">JDBCConnectionSpec javadoc</a>__<a href="http://www.ibm.com/developerworks/websphere/library/techarticles/0404_tang/0404_tang.html">IBM developerWorks article</a>)._@param isolationLevel the isolation level to apply (or {@code null} if none)_@param readOnlyFlag the read-only flag to apply (or {@code null} if none)_@param username the username to apply ({@code null} or empty indicates the default)_@param password the password to apply (may be {@code null} or empty)_@throws SQLException if thrown by JDBCConnectionSpec API methods_@see com.ibm.websphere.rsadapter.JDBCConnectionSpec;protected Object createConnectionSpec(_			Integer isolationLevel, Boolean readOnlyFlag, String username, String password) throws SQLException {__		Object connSpec = ReflectionUtils.invokeJdbcMethod(this.newJdbcConnSpecMethod, null)__		if (isolationLevel != null) {_			ReflectionUtils.invokeJdbcMethod(this.setTransactionIsolationMethod, connSpec, isolationLevel)__		}_		if (readOnlyFlag != null) {_			ReflectionUtils.invokeJdbcMethod(this.setReadOnlyMethod, connSpec, readOnlyFlag)__		}_		_		_		if (StringUtils.hasLength(username)) {_			ReflectionUtils.invokeJdbcMethod(this.setUserNameMethod, connSpec, username)__			ReflectionUtils.invokeJdbcMethod(this.setPasswordMethod, connSpec, password)__		}_		return connSpec__	};create,a,web,sphere,code,jdbcconnection,spec,object,for,the,given,charateristics,p,the,default,implementation,uses,reflection,to,apply,the,given,settings,can,be,overridden,in,subclasses,to,customize,the,jdbcconnection,spec,object,a,href,http,publib,boulder,ibm,com,infocenter,wasinfo,v6r0,topic,com,ibm,websphere,javadoc,doc,api,com,ibm,websphere,rsadapter,jdbcconnection,spec,html,jdbcconnection,spec,javadoc,a,a,href,http,www,ibm,com,developerworks,websphere,library,techarticles,html,ibm,developer,works,article,a,param,isolation,level,the,isolation,level,to,apply,or,code,null,if,none,param,read,only,flag,the,read,only,flag,to,apply,or,code,null,if,none,param,username,the,username,to,apply,code,null,or,empty,indicates,the,default,param,password,the,password,to,apply,may,be,code,null,or,empty,throws,sqlexception,if,thrown,by,jdbcconnection,spec,api,methods,see,com,ibm,websphere,rsadapter,jdbcconnection,spec;protected,object,create,connection,spec,integer,isolation,level,boolean,read,only,flag,string,username,string,password,throws,sqlexception,object,conn,spec,reflection,utils,invoke,jdbc,method,this,new,jdbc,conn,spec,method,null,if,isolation,level,null,reflection,utils,invoke,jdbc,method,this,set,transaction,isolation,method,conn,spec,isolation,level,if,read,only,flag,null,reflection,utils,invoke,jdbc,method,this,set,read,only,method,conn,spec,read,only,flag,if,string,utils,has,length,username,reflection,utils,invoke,jdbc,method,this,set,user,name,method,conn,spec,username,reflection,utils,invoke,jdbc,method,this,set,password,method,conn,spec,password,return,conn,spec
WebSphereDataSourceAdapter -> protected Object createConnectionSpec( 			Integer isolationLevel, Boolean readOnlyFlag, String username, String password) throws SQLException;1385412762;Create a WebSphere {@code JDBCConnectionSpec} object for the given charateristics._<p>The default implementation uses reflection to apply the given settings._Can be overridden in subclasses to customize the JDBCConnectionSpec object_(<a href="http://publib.boulder.ibm.com/infocenter/wasinfo/v6r0/topic/com.ibm.websphere.javadoc.doc/public_html/api/com/ibm/websphere/rsadapter/JDBCConnectionSpec.html">JDBCConnectionSpec javadoc</a>__<a href="http://www.ibm.com/developerworks/websphere/library/techarticles/0404_tang/0404_tang.html">IBM developerWorks article</a>)._@param isolationLevel the isolation level to apply (or {@code null} if none)_@param readOnlyFlag the read-only flag to apply (or {@code null} if none)_@param username the username to apply ({@code null} or empty indicates the default)_@param password the password to apply (may be {@code null} or empty)_@throws SQLException if thrown by JDBCConnectionSpec API methods_@see com.ibm.websphere.rsadapter.JDBCConnectionSpec;protected Object createConnectionSpec(_			Integer isolationLevel, Boolean readOnlyFlag, String username, String password) throws SQLException {__		Object connSpec = ReflectionUtils.invokeJdbcMethod(this.newJdbcConnSpecMethod, null)__		if (isolationLevel != null) {_			ReflectionUtils.invokeJdbcMethod(this.setTransactionIsolationMethod, connSpec, isolationLevel)__		}_		if (readOnlyFlag != null) {_			ReflectionUtils.invokeJdbcMethod(this.setReadOnlyMethod, connSpec, readOnlyFlag)__		}_		_		_		if (StringUtils.hasLength(username)) {_			ReflectionUtils.invokeJdbcMethod(this.setUserNameMethod, connSpec, username)__			ReflectionUtils.invokeJdbcMethod(this.setPasswordMethod, connSpec, password)__		}_		return connSpec__	};create,a,web,sphere,code,jdbcconnection,spec,object,for,the,given,charateristics,p,the,default,implementation,uses,reflection,to,apply,the,given,settings,can,be,overridden,in,subclasses,to,customize,the,jdbcconnection,spec,object,a,href,http,publib,boulder,ibm,com,infocenter,wasinfo,v6r0,topic,com,ibm,websphere,javadoc,doc,api,com,ibm,websphere,rsadapter,jdbcconnection,spec,html,jdbcconnection,spec,javadoc,a,a,href,http,www,ibm,com,developerworks,websphere,library,techarticles,html,ibm,developer,works,article,a,param,isolation,level,the,isolation,level,to,apply,or,code,null,if,none,param,read,only,flag,the,read,only,flag,to,apply,or,code,null,if,none,param,username,the,username,to,apply,code,null,or,empty,indicates,the,default,param,password,the,password,to,apply,may,be,code,null,or,empty,throws,sqlexception,if,thrown,by,jdbcconnection,spec,api,methods,see,com,ibm,websphere,rsadapter,jdbcconnection,spec;protected,object,create,connection,spec,integer,isolation,level,boolean,read,only,flag,string,username,string,password,throws,sqlexception,object,conn,spec,reflection,utils,invoke,jdbc,method,this,new,jdbc,conn,spec,method,null,if,isolation,level,null,reflection,utils,invoke,jdbc,method,this,set,transaction,isolation,method,conn,spec,isolation,level,if,read,only,flag,null,reflection,utils,invoke,jdbc,method,this,set,read,only,method,conn,spec,read,only,flag,if,string,utils,has,length,username,reflection,utils,invoke,jdbc,method,this,set,user,name,method,conn,spec,username,reflection,utils,invoke,jdbc,method,this,set,password,method,conn,spec,password,return,conn,spec
WebSphereDataSourceAdapter -> protected Object createConnectionSpec( 			Integer isolationLevel, Boolean readOnlyFlag, String username, String password) throws SQLException;1487178338;Create a WebSphere {@code JDBCConnectionSpec} object for the given characteristics._<p>The default implementation uses reflection to apply the given settings._Can be overridden in subclasses to customize the JDBCConnectionSpec object_(<a href="http://publib.boulder.ibm.com/infocenter/wasinfo/v6r0/topic/com.ibm.websphere.javadoc.doc/public_html/api/com/ibm/websphere/rsadapter/JDBCConnectionSpec.html">JDBCConnectionSpec javadoc</a>__<a href="http://www.ibm.com/developerworks/websphere/library/techarticles/0404_tang/0404_tang.html">IBM developerWorks article</a>)._@param isolationLevel the isolation level to apply (or {@code null} if none)_@param readOnlyFlag the read-only flag to apply (or {@code null} if none)_@param username the username to apply ({@code null} or empty indicates the default)_@param password the password to apply (may be {@code null} or empty)_@throws SQLException if thrown by JDBCConnectionSpec API methods_@see com.ibm.websphere.rsadapter.JDBCConnectionSpec;protected Object createConnectionSpec(_			Integer isolationLevel, Boolean readOnlyFlag, String username, String password) throws SQLException {__		Object connSpec = ReflectionUtils.invokeJdbcMethod(this.newJdbcConnSpecMethod, null)__		if (isolationLevel != null) {_			ReflectionUtils.invokeJdbcMethod(this.setTransactionIsolationMethod, connSpec, isolationLevel)__		}_		if (readOnlyFlag != null) {_			ReflectionUtils.invokeJdbcMethod(this.setReadOnlyMethod, connSpec, readOnlyFlag)__		}_		_		_		if (StringUtils.hasLength(username)) {_			ReflectionUtils.invokeJdbcMethod(this.setUserNameMethod, connSpec, username)__			ReflectionUtils.invokeJdbcMethod(this.setPasswordMethod, connSpec, password)__		}_		return connSpec__	};create,a,web,sphere,code,jdbcconnection,spec,object,for,the,given,characteristics,p,the,default,implementation,uses,reflection,to,apply,the,given,settings,can,be,overridden,in,subclasses,to,customize,the,jdbcconnection,spec,object,a,href,http,publib,boulder,ibm,com,infocenter,wasinfo,v6r0,topic,com,ibm,websphere,javadoc,doc,api,com,ibm,websphere,rsadapter,jdbcconnection,spec,html,jdbcconnection,spec,javadoc,a,a,href,http,www,ibm,com,developerworks,websphere,library,techarticles,html,ibm,developer,works,article,a,param,isolation,level,the,isolation,level,to,apply,or,code,null,if,none,param,read,only,flag,the,read,only,flag,to,apply,or,code,null,if,none,param,username,the,username,to,apply,code,null,or,empty,indicates,the,default,param,password,the,password,to,apply,may,be,code,null,or,empty,throws,sqlexception,if,thrown,by,jdbcconnection,spec,api,methods,see,com,ibm,websphere,rsadapter,jdbcconnection,spec;protected,object,create,connection,spec,integer,isolation,level,boolean,read,only,flag,string,username,string,password,throws,sqlexception,object,conn,spec,reflection,utils,invoke,jdbc,method,this,new,jdbc,conn,spec,method,null,if,isolation,level,null,reflection,utils,invoke,jdbc,method,this,set,transaction,isolation,method,conn,spec,isolation,level,if,read,only,flag,null,reflection,utils,invoke,jdbc,method,this,set,read,only,method,conn,spec,read,only,flag,if,string,utils,has,length,username,reflection,utils,invoke,jdbc,method,this,set,user,name,method,conn,spec,username,reflection,utils,invoke,jdbc,method,this,set,password,method,conn,spec,password,return,conn,spec
WebSphereDataSourceAdapter -> @Override 	protected Connection doGetConnection(String username, String password) throws SQLException;1328020251;Builds a WebSphere JDBCConnectionSpec object for the current settings_and calls <code>WSDataSource.getConnection(JDBCConnectionSpec)</code>._@see #createConnectionSpec_@see com.ibm.websphere.rsadapter.WSDataSource#getConnection(com.ibm.websphere.rsadapter.JDBCConnectionSpec);@Override_	protected Connection doGetConnection(String username, String password) throws SQLException {_		_		Object connSpec = createConnectionSpec(_				getCurrentIsolationLevel(), getCurrentReadOnlyFlag(), username, password)__		if (logger.isDebugEnabled()) {_			logger.debug("Obtaining JDBC Connection from WebSphere DataSource [" +_					getTargetDataSource() + "], using ConnectionSpec [" + connSpec + "]")__		}_		_		return (Connection) ReflectionUtils.invokeJdbcMethod(_				this.wsDataSourceGetConnectionMethod, getTargetDataSource(), connSpec)__	};builds,a,web,sphere,jdbcconnection,spec,object,for,the,current,settings,and,calls,code,wsdata,source,get,connection,jdbcconnection,spec,code,see,create,connection,spec,see,com,ibm,websphere,rsadapter,wsdata,source,get,connection,com,ibm,websphere,rsadapter,jdbcconnection,spec;override,protected,connection,do,get,connection,string,username,string,password,throws,sqlexception,object,conn,spec,create,connection,spec,get,current,isolation,level,get,current,read,only,flag,username,password,if,logger,is,debug,enabled,logger,debug,obtaining,jdbc,connection,from,web,sphere,data,source,get,target,data,source,using,connection,spec,conn,spec,return,connection,reflection,utils,invoke,jdbc,method,this,ws,data,source,get,connection,method,get,target,data,source,conn,spec
WebSphereDataSourceAdapter -> @Override 	protected Connection doGetConnection(String username, String password) throws SQLException;1356735495;Builds a WebSphere JDBCConnectionSpec object for the current settings_and calls {@code WSDataSource.getConnection(JDBCConnectionSpec)}._@see #createConnectionSpec_@see com.ibm.websphere.rsadapter.WSDataSource#getConnection(com.ibm.websphere.rsadapter.JDBCConnectionSpec);@Override_	protected Connection doGetConnection(String username, String password) throws SQLException {_		_		Object connSpec = createConnectionSpec(_				getCurrentIsolationLevel(), getCurrentReadOnlyFlag(), username, password)__		if (logger.isDebugEnabled()) {_			logger.debug("Obtaining JDBC Connection from WebSphere DataSource [" +_					getTargetDataSource() + "], using ConnectionSpec [" + connSpec + "]")__		}_		_		return (Connection) ReflectionUtils.invokeJdbcMethod(_				this.wsDataSourceGetConnectionMethod, getTargetDataSource(), connSpec)__	};builds,a,web,sphere,jdbcconnection,spec,object,for,the,current,settings,and,calls,code,wsdata,source,get,connection,jdbcconnection,spec,see,create,connection,spec,see,com,ibm,websphere,rsadapter,wsdata,source,get,connection,com,ibm,websphere,rsadapter,jdbcconnection,spec;override,protected,connection,do,get,connection,string,username,string,password,throws,sqlexception,object,conn,spec,create,connection,spec,get,current,isolation,level,get,current,read,only,flag,username,password,if,logger,is,debug,enabled,logger,debug,obtaining,jdbc,connection,from,web,sphere,data,source,get,target,data,source,using,connection,spec,conn,spec,return,connection,reflection,utils,invoke,jdbc,method,this,ws,data,source,get,connection,method,get,target,data,source,conn,spec
WebSphereDataSourceAdapter -> @Override 	protected Connection doGetConnection(String username, String password) throws SQLException;1385412762;Builds a WebSphere JDBCConnectionSpec object for the current settings_and calls {@code WSDataSource.getConnection(JDBCConnectionSpec)}._@see #createConnectionSpec_@see com.ibm.websphere.rsadapter.WSDataSource#getConnection(com.ibm.websphere.rsadapter.JDBCConnectionSpec);@Override_	protected Connection doGetConnection(String username, String password) throws SQLException {_		_		Object connSpec = createConnectionSpec(_				getCurrentIsolationLevel(), getCurrentReadOnlyFlag(), username, password)__		if (logger.isDebugEnabled()) {_			logger.debug("Obtaining JDBC Connection from WebSphere DataSource [" +_					getTargetDataSource() + "], using ConnectionSpec [" + connSpec + "]")__		}_		_		return (Connection) ReflectionUtils.invokeJdbcMethod(_				this.wsDataSourceGetConnectionMethod, getTargetDataSource(), connSpec)__	};builds,a,web,sphere,jdbcconnection,spec,object,for,the,current,settings,and,calls,code,wsdata,source,get,connection,jdbcconnection,spec,see,create,connection,spec,see,com,ibm,websphere,rsadapter,wsdata,source,get,connection,com,ibm,websphere,rsadapter,jdbcconnection,spec;override,protected,connection,do,get,connection,string,username,string,password,throws,sqlexception,object,conn,spec,create,connection,spec,get,current,isolation,level,get,current,read,only,flag,username,password,if,logger,is,debug,enabled,logger,debug,obtaining,jdbc,connection,from,web,sphere,data,source,get,target,data,source,using,connection,spec,conn,spec,return,connection,reflection,utils,invoke,jdbc,method,this,ws,data,source,get,connection,method,get,target,data,source,conn,spec
WebSphereDataSourceAdapter -> @Override 	protected Connection doGetConnection(String username, String password) throws SQLException;1487178338;Builds a WebSphere JDBCConnectionSpec object for the current settings_and calls {@code WSDataSource.getConnection(JDBCConnectionSpec)}._@see #createConnectionSpec_@see com.ibm.websphere.rsadapter.WSDataSource#getConnection(com.ibm.websphere.rsadapter.JDBCConnectionSpec);@Override_	protected Connection doGetConnection(String username, String password) throws SQLException {_		_		Object connSpec = createConnectionSpec(_				getCurrentIsolationLevel(), getCurrentReadOnlyFlag(), username, password)__		if (logger.isDebugEnabled()) {_			logger.debug("Obtaining JDBC Connection from WebSphere DataSource [" +_					getTargetDataSource() + "], using ConnectionSpec [" + connSpec + "]")__		}_		_		return (Connection) ReflectionUtils.invokeJdbcMethod(_				this.wsDataSourceGetConnectionMethod, getTargetDataSource(), connSpec)__	};builds,a,web,sphere,jdbcconnection,spec,object,for,the,current,settings,and,calls,code,wsdata,source,get,connection,jdbcconnection,spec,see,create,connection,spec,see,com,ibm,websphere,rsadapter,wsdata,source,get,connection,com,ibm,websphere,rsadapter,jdbcconnection,spec;override,protected,connection,do,get,connection,string,username,string,password,throws,sqlexception,object,conn,spec,create,connection,spec,get,current,isolation,level,get,current,read,only,flag,username,password,if,logger,is,debug,enabled,logger,debug,obtaining,jdbc,connection,from,web,sphere,data,source,get,target,data,source,using,connection,spec,conn,spec,return,connection,reflection,utils,invoke,jdbc,method,this,ws,data,source,get,connection,method,get,target,data,source,conn,spec
WebSphereDataSourceAdapter -> @Override 	protected Connection doGetConnection(String username, String password) throws SQLException;1495868221;Builds a WebSphere JDBCConnectionSpec object for the current settings_and calls {@code WSDataSource.getConnection(JDBCConnectionSpec)}._@see #createConnectionSpec_@see com.ibm.websphere.rsadapter.WSDataSource#getConnection(com.ibm.websphere.rsadapter.JDBCConnectionSpec);@Override_	protected Connection doGetConnection(String username, String password) throws SQLException {_		_		Object connSpec = createConnectionSpec(_				getCurrentIsolationLevel(), getCurrentReadOnlyFlag(), username, password)__		if (logger.isDebugEnabled()) {_			logger.debug("Obtaining JDBC Connection from WebSphere DataSource [" +_					getTargetDataSource() + "], using ConnectionSpec [" + connSpec + "]")__		}_		_		return (Connection) ReflectionUtils.invokeJdbcMethod(_				this.wsDataSourceGetConnectionMethod, getTargetDataSource(), connSpec)__	};builds,a,web,sphere,jdbcconnection,spec,object,for,the,current,settings,and,calls,code,wsdata,source,get,connection,jdbcconnection,spec,see,create,connection,spec,see,com,ibm,websphere,rsadapter,wsdata,source,get,connection,com,ibm,websphere,rsadapter,jdbcconnection,spec;override,protected,connection,do,get,connection,string,username,string,password,throws,sqlexception,object,conn,spec,create,connection,spec,get,current,isolation,level,get,current,read,only,flag,username,password,if,logger,is,debug,enabled,logger,debug,obtaining,jdbc,connection,from,web,sphere,data,source,get,target,data,source,using,connection,spec,conn,spec,return,connection,reflection,utils,invoke,jdbc,method,this,ws,data,source,get,connection,method,get,target,data,source,conn,spec
WebSphereDataSourceAdapter -> @Override 	protected Connection doGetConnection(String username, String password) throws SQLException;1496837955;Builds a WebSphere JDBCConnectionSpec object for the current settings_and calls {@code WSDataSource.getConnection(JDBCConnectionSpec)}._@see #createConnectionSpec_@see com.ibm.websphere.rsadapter.WSDataSource#getConnection(com.ibm.websphere.rsadapter.JDBCConnectionSpec);@Override_	protected Connection doGetConnection(String username, String password) throws SQLException {_		_		Object connSpec = createConnectionSpec(_				getCurrentIsolationLevel(), getCurrentReadOnlyFlag(), username, password)__		if (logger.isDebugEnabled()) {_			logger.debug("Obtaining JDBC Connection from WebSphere DataSource [" +_					getTargetDataSource() + "], using ConnectionSpec [" + connSpec + "]")__		}_		_		Connection con = (Connection) ReflectionUtils.invokeJdbcMethod(_				this.wsDataSourceGetConnectionMethod, obtainTargetDataSource(), connSpec)__		Assert.state(con != null, "No Connection")__		return con__	};builds,a,web,sphere,jdbcconnection,spec,object,for,the,current,settings,and,calls,code,wsdata,source,get,connection,jdbcconnection,spec,see,create,connection,spec,see,com,ibm,websphere,rsadapter,wsdata,source,get,connection,com,ibm,websphere,rsadapter,jdbcconnection,spec;override,protected,connection,do,get,connection,string,username,string,password,throws,sqlexception,object,conn,spec,create,connection,spec,get,current,isolation,level,get,current,read,only,flag,username,password,if,logger,is,debug,enabled,logger,debug,obtaining,jdbc,connection,from,web,sphere,data,source,get,target,data,source,using,connection,spec,conn,spec,connection,con,connection,reflection,utils,invoke,jdbc,method,this,ws,data,source,get,connection,method,obtain,target,data,source,conn,spec,assert,state,con,null,no,connection,return,con
WebSphereDataSourceAdapter -> @Override 	public void afterPropertiesSet();1328020251;Checks that the specified 'targetDataSource' actually is_a WebSphere WSDataSource.;@Override_	public void afterPropertiesSet() {_		super.afterPropertiesSet()___		if (!this.wsDataSourceClass.isInstance(getTargetDataSource())) {_			throw new IllegalStateException(_					"Specified 'targetDataSource' is not a WebSphere WSDataSource: " + getTargetDataSource())__		}_	};checks,that,the,specified,target,data,source,actually,is,a,web,sphere,wsdata,source;override,public,void,after,properties,set,super,after,properties,set,if,this,ws,data,source,class,is,instance,get,target,data,source,throw,new,illegal,state,exception,specified,target,data,source,is,not,a,web,sphere,wsdata,source,get,target,data,source
WebSphereDataSourceAdapter -> @Override 	public void afterPropertiesSet();1356735495;Checks that the specified 'targetDataSource' actually is_a WebSphere WSDataSource.;@Override_	public void afterPropertiesSet() {_		super.afterPropertiesSet()___		if (!this.wsDataSourceClass.isInstance(getTargetDataSource())) {_			throw new IllegalStateException(_					"Specified 'targetDataSource' is not a WebSphere WSDataSource: " + getTargetDataSource())__		}_	};checks,that,the,specified,target,data,source,actually,is,a,web,sphere,wsdata,source;override,public,void,after,properties,set,super,after,properties,set,if,this,ws,data,source,class,is,instance,get,target,data,source,throw,new,illegal,state,exception,specified,target,data,source,is,not,a,web,sphere,wsdata,source,get,target,data,source
WebSphereDataSourceAdapter -> @Override 	public void afterPropertiesSet();1385412762;Checks that the specified 'targetDataSource' actually is_a WebSphere WSDataSource.;@Override_	public void afterPropertiesSet() {_		super.afterPropertiesSet()___		if (!this.wsDataSourceClass.isInstance(getTargetDataSource())) {_			throw new IllegalStateException(_					"Specified 'targetDataSource' is not a WebSphere WSDataSource: " + getTargetDataSource())__		}_	};checks,that,the,specified,target,data,source,actually,is,a,web,sphere,wsdata,source;override,public,void,after,properties,set,super,after,properties,set,if,this,ws,data,source,class,is,instance,get,target,data,source,throw,new,illegal,state,exception,specified,target,data,source,is,not,a,web,sphere,wsdata,source,get,target,data,source
WebSphereDataSourceAdapter -> @Override 	public void afterPropertiesSet();1487178338;Checks that the specified 'targetDataSource' actually is_a WebSphere WSDataSource.;@Override_	public void afterPropertiesSet() {_		super.afterPropertiesSet()___		if (!this.wsDataSourceClass.isInstance(getTargetDataSource())) {_			throw new IllegalStateException(_					"Specified 'targetDataSource' is not a WebSphere WSDataSource: " + getTargetDataSource())__		}_	};checks,that,the,specified,target,data,source,actually,is,a,web,sphere,wsdata,source;override,public,void,after,properties,set,super,after,properties,set,if,this,ws,data,source,class,is,instance,get,target,data,source,throw,new,illegal,state,exception,specified,target,data,source,is,not,a,web,sphere,wsdata,source,get,target,data,source
WebSphereDataSourceAdapter -> @Override 	public void afterPropertiesSet();1495868221;Checks that the specified 'targetDataSource' actually is_a WebSphere WSDataSource.;@Override_	public void afterPropertiesSet() {_		super.afterPropertiesSet()___		if (!this.wsDataSourceClass.isInstance(getTargetDataSource())) {_			throw new IllegalStateException(_					"Specified 'targetDataSource' is not a WebSphere WSDataSource: " + getTargetDataSource())__		}_	};checks,that,the,specified,target,data,source,actually,is,a,web,sphere,wsdata,source;override,public,void,after,properties,set,super,after,properties,set,if,this,ws,data,source,class,is,instance,get,target,data,source,throw,new,illegal,state,exception,specified,target,data,source,is,not,a,web,sphere,wsdata,source,get,target,data,source
WebSphereDataSourceAdapter -> @Override 	public void afterPropertiesSet();1496837955;Checks that the specified 'targetDataSource' actually is_a WebSphere WSDataSource.;@Override_	public void afterPropertiesSet() {_		super.afterPropertiesSet()___		if (!this.wsDataSourceClass.isInstance(getTargetDataSource())) {_			throw new IllegalStateException(_					"Specified 'targetDataSource' is not a WebSphere WSDataSource: " + getTargetDataSource())__		}_	};checks,that,the,specified,target,data,source,actually,is,a,web,sphere,wsdata,source;override,public,void,after,properties,set,super,after,properties,set,if,this,ws,data,source,class,is,instance,get,target,data,source,throw,new,illegal,state,exception,specified,target,data,source,is,not,a,web,sphere,wsdata,source,get,target,data,source
WebSphereDataSourceAdapter -> @Override 	public void afterPropertiesSet();1500495740;Checks that the specified 'targetDataSource' actually is_a WebSphere WSDataSource.;@Override_	public void afterPropertiesSet() {_		super.afterPropertiesSet()___		if (!this.wsDataSourceClass.isInstance(getTargetDataSource())) {_			throw new IllegalStateException(_					"Specified 'targetDataSource' is not a WebSphere WSDataSource: " + getTargetDataSource())__		}_	};checks,that,the,specified,target,data,source,actually,is,a,web,sphere,wsdata,source;override,public,void,after,properties,set,super,after,properties,set,if,this,ws,data,source,class,is,instance,get,target,data,source,throw,new,illegal,state,exception,specified,target,data,source,is,not,a,web,sphere,wsdata,source,get,target,data,source
WebSphereDataSourceAdapter -> @Override 	public void afterPropertiesSet();1518615840;Checks that the specified 'targetDataSource' actually is_a WebSphere WSDataSource.;@Override_	public void afterPropertiesSet() {_		super.afterPropertiesSet()___		if (!this.wsDataSourceClass.isInstance(getTargetDataSource())) {_			throw new IllegalStateException(_					"Specified 'targetDataSource' is not a WebSphere WSDataSource: " + getTargetDataSource())__		}_	};checks,that,the,specified,target,data,source,actually,is,a,web,sphere,wsdata,source;override,public,void,after,properties,set,super,after,properties,set,if,this,ws,data,source,class,is,instance,get,target,data,source,throw,new,illegal,state,exception,specified,target,data,source,is,not,a,web,sphere,wsdata,source,get,target,data,source
WebSphereDataSourceAdapter -> @Override 	public void afterPropertiesSet();1541417180;Checks that the specified 'targetDataSource' actually is_a WebSphere WSDataSource.;@Override_	public void afterPropertiesSet() {_		super.afterPropertiesSet()___		if (!this.wsDataSourceClass.isInstance(getTargetDataSource())) {_			throw new IllegalStateException(_					"Specified 'targetDataSource' is not a WebSphere WSDataSource: " + getTargetDataSource())__		}_	};checks,that,the,specified,target,data,source,actually,is,a,web,sphere,wsdata,source;override,public,void,after,properties,set,super,after,properties,set,if,this,ws,data,source,class,is,instance,get,target,data,source,throw,new,illegal,state,exception,specified,target,data,source,is,not,a,web,sphere,wsdata,source,get,target,data,source
