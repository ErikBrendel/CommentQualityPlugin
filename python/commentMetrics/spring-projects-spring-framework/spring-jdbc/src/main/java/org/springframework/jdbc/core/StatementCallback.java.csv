# id;timestamp;commentText;codeText;commentWords;codeWords
StatementCallback -> @Nullable 	T doInStatement(Statement stmt) throws SQLException, DataAccessException_;1495868221;Gets called by {@code JdbcTemplate.execute} with an active JDBC_Statement. Does not need to care about closing the Statement or the_Connection, or about handling transactions: this will all be handled_by Spring's JdbcTemplate._<p><b>NOTE:</b> Any ResultSets opened should be closed in finally blocks_within the callback implementation. Spring will close the Statement_object after the callback returned, but this does not necessarily imply_that the ResultSet resources will be closed: the Statement objects might_get pooled by the connection pool, with {@code close} calls only_returning the object to the pool but not physically closing the resources._<p>If called without a thread-bound JDBC transaction (initiated by_DataSourceTransactionManager), the code will simply get executed on the_JDBC connection with its transactional semantics. If JdbcTemplate is_configured to use a JTA-aware DataSource, the JDBC connection and thus_the callback code will be transactional if a JTA transaction is active._<p>Allows for returning a result object created within the callback, i.e._a domain object or a collection of domain objects. Note that there's_special support for single step actions: see JdbcTemplate.queryForObject etc._A thrown RuntimeException is treated as application exception, it gets_propagated to the caller of the template._@param stmt active JDBC Statement_@return a result object, or {@code null} if none_@throws SQLException if thrown by a JDBC method, to be auto-converted_to a DataAccessException by a SQLExceptionTranslator_@throws DataAccessException in case of custom exceptions_@see JdbcTemplate#queryForObject(String, Class)_@see JdbcTemplate#queryForRowSet(String);@Nullable_	T doInStatement(Statement stmt) throws SQLException, DataAccessException_;gets,called,by,code,jdbc,template,execute,with,an,active,jdbc,statement,does,not,need,to,care,about,closing,the,statement,or,the,connection,or,about,handling,transactions,this,will,all,be,handled,by,spring,s,jdbc,template,p,b,note,b,any,result,sets,opened,should,be,closed,in,finally,blocks,within,the,callback,implementation,spring,will,close,the,statement,object,after,the,callback,returned,but,this,does,not,necessarily,imply,that,the,result,set,resources,will,be,closed,the,statement,objects,might,get,pooled,by,the,connection,pool,with,code,close,calls,only,returning,the,object,to,the,pool,but,not,physically,closing,the,resources,p,if,called,without,a,thread,bound,jdbc,transaction,initiated,by,data,source,transaction,manager,the,code,will,simply,get,executed,on,the,jdbc,connection,with,its,transactional,semantics,if,jdbc,template,is,configured,to,use,a,jta,aware,data,source,the,jdbc,connection,and,thus,the,callback,code,will,be,transactional,if,a,jta,transaction,is,active,p,allows,for,returning,a,result,object,created,within,the,callback,i,e,a,domain,object,or,a,collection,of,domain,objects,note,that,there,s,special,support,for,single,step,actions,see,jdbc,template,query,for,object,etc,a,thrown,runtime,exception,is,treated,as,application,exception,it,gets,propagated,to,the,caller,of,the,template,param,stmt,active,jdbc,statement,return,a,result,object,or,code,null,if,none,throws,sqlexception,if,thrown,by,a,jdbc,method,to,be,auto,converted,to,a,data,access,exception,by,a,sqlexception,translator,throws,data,access,exception,in,case,of,custom,exceptions,see,jdbc,template,query,for,object,string,class,see,jdbc,template,query,for,row,set,string;nullable,t,do,in,statement,statement,stmt,throws,sqlexception,data,access,exception
StatementCallback -> @Nullable 	T doInStatement(Statement stmt) throws SQLException, DataAccessException_;1530174524;Gets called by {@code JdbcTemplate.execute} with an active JDBC_Statement. Does not need to care about closing the Statement or the_Connection, or about handling transactions: this will all be handled_by Spring's JdbcTemplate._<p><b>NOTE:</b> Any ResultSets opened should be closed in finally blocks_within the callback implementation. Spring will close the Statement_object after the callback returned, but this does not necessarily imply_that the ResultSet resources will be closed: the Statement objects might_get pooled by the connection pool, with {@code close} calls only_returning the object to the pool but not physically closing the resources._<p>If called without a thread-bound JDBC transaction (initiated by_DataSourceTransactionManager), the code will simply get executed on the_JDBC connection with its transactional semantics. If JdbcTemplate is_configured to use a JTA-aware DataSource, the JDBC connection and thus_the callback code will be transactional if a JTA transaction is active._<p>Allows for returning a result object created within the callback, i.e._a domain object or a collection of domain objects. Note that there's_special support for single step actions: see JdbcTemplate.queryForObject etc._A thrown RuntimeException is treated as application exception, it gets_propagated to the caller of the template._@param stmt active JDBC Statement_@return a result object, or {@code null} if none_@throws SQLException if thrown by a JDBC method, to be auto-converted_to a DataAccessException by a SQLExceptionTranslator_@throws DataAccessException in case of custom exceptions_@see JdbcTemplate#queryForObject(String, Class)_@see JdbcTemplate#queryForRowSet(String);@Nullable_	T doInStatement(Statement stmt) throws SQLException, DataAccessException_;gets,called,by,code,jdbc,template,execute,with,an,active,jdbc,statement,does,not,need,to,care,about,closing,the,statement,or,the,connection,or,about,handling,transactions,this,will,all,be,handled,by,spring,s,jdbc,template,p,b,note,b,any,result,sets,opened,should,be,closed,in,finally,blocks,within,the,callback,implementation,spring,will,close,the,statement,object,after,the,callback,returned,but,this,does,not,necessarily,imply,that,the,result,set,resources,will,be,closed,the,statement,objects,might,get,pooled,by,the,connection,pool,with,code,close,calls,only,returning,the,object,to,the,pool,but,not,physically,closing,the,resources,p,if,called,without,a,thread,bound,jdbc,transaction,initiated,by,data,source,transaction,manager,the,code,will,simply,get,executed,on,the,jdbc,connection,with,its,transactional,semantics,if,jdbc,template,is,configured,to,use,a,jta,aware,data,source,the,jdbc,connection,and,thus,the,callback,code,will,be,transactional,if,a,jta,transaction,is,active,p,allows,for,returning,a,result,object,created,within,the,callback,i,e,a,domain,object,or,a,collection,of,domain,objects,note,that,there,s,special,support,for,single,step,actions,see,jdbc,template,query,for,object,etc,a,thrown,runtime,exception,is,treated,as,application,exception,it,gets,propagated,to,the,caller,of,the,template,param,stmt,active,jdbc,statement,return,a,result,object,or,code,null,if,none,throws,sqlexception,if,thrown,by,a,jdbc,method,to,be,auto,converted,to,a,data,access,exception,by,a,sqlexception,translator,throws,data,access,exception,in,case,of,custom,exceptions,see,jdbc,template,query,for,object,string,class,see,jdbc,template,query,for,row,set,string;nullable,t,do,in,statement,statement,stmt,throws,sqlexception,data,access,exception
StatementCallback -> T doInStatement(Statement stmt) throws SQLException, DataAccessException_;1328020251;Gets called by <code>JdbcTemplate.execute</code> with an active JDBC_Statement. Does not need to care about closing the Statement or the_Connection, or about handling transactions: this will all be handled_by Spring's JdbcTemplate.__<p><b>NOTE:</b> Any ResultSets opened should be closed in finally blocks_within the callback implementation. Spring will close the Statement_object after the callback returned, but this does not necessarily imply_that the ResultSet resources will be closed: the Statement objects might_get pooled by the connection pool, with <code>close</code> calls only_returning the object to the pool but not physically closing the resources.__<p>If called without a thread-bound JDBC transaction (initiated by_DataSourceTransactionManager), the code will simply get executed on the_JDBC connection with its transactional semantics. If JdbcTemplate is_configured to use a JTA-aware DataSource, the JDBC connection and thus_the callback code will be transactional if a JTA transaction is active.__<p>Allows for returning a result object created within the callback, i.e._a domain object or a collection of domain objects. Note that there's_special support for single step actions: see JdbcTemplate.queryForObject etc._A thrown RuntimeException is treated as application exception, it gets_propagated to the caller of the template.__@param stmt active JDBC Statement_@return a result object, or <code>null</code> if none_@throws SQLException if thrown by a JDBC method, to be auto-converted_to a DataAccessException by a SQLExceptionTranslator_@throws DataAccessException in case of custom exceptions_@see JdbcTemplate#queryForObject(String, Class)_@see JdbcTemplate#queryForRowSet(String);T doInStatement(Statement stmt) throws SQLException, DataAccessException_;gets,called,by,code,jdbc,template,execute,code,with,an,active,jdbc,statement,does,not,need,to,care,about,closing,the,statement,or,the,connection,or,about,handling,transactions,this,will,all,be,handled,by,spring,s,jdbc,template,p,b,note,b,any,result,sets,opened,should,be,closed,in,finally,blocks,within,the,callback,implementation,spring,will,close,the,statement,object,after,the,callback,returned,but,this,does,not,necessarily,imply,that,the,result,set,resources,will,be,closed,the,statement,objects,might,get,pooled,by,the,connection,pool,with,code,close,code,calls,only,returning,the,object,to,the,pool,but,not,physically,closing,the,resources,p,if,called,without,a,thread,bound,jdbc,transaction,initiated,by,data,source,transaction,manager,the,code,will,simply,get,executed,on,the,jdbc,connection,with,its,transactional,semantics,if,jdbc,template,is,configured,to,use,a,jta,aware,data,source,the,jdbc,connection,and,thus,the,callback,code,will,be,transactional,if,a,jta,transaction,is,active,p,allows,for,returning,a,result,object,created,within,the,callback,i,e,a,domain,object,or,a,collection,of,domain,objects,note,that,there,s,special,support,for,single,step,actions,see,jdbc,template,query,for,object,etc,a,thrown,runtime,exception,is,treated,as,application,exception,it,gets,propagated,to,the,caller,of,the,template,param,stmt,active,jdbc,statement,return,a,result,object,or,code,null,code,if,none,throws,sqlexception,if,thrown,by,a,jdbc,method,to,be,auto,converted,to,a,data,access,exception,by,a,sqlexception,translator,throws,data,access,exception,in,case,of,custom,exceptions,see,jdbc,template,query,for,object,string,class,see,jdbc,template,query,for,row,set,string;t,do,in,statement,statement,stmt,throws,sqlexception,data,access,exception
StatementCallback -> T doInStatement(Statement stmt) throws SQLException, DataAccessException_;1356735495;Gets called by {@code JdbcTemplate.execute} with an active JDBC_Statement. Does not need to care about closing the Statement or the_Connection, or about handling transactions: this will all be handled_by Spring's JdbcTemplate.__<p><b>NOTE:</b> Any ResultSets opened should be closed in finally blocks_within the callback implementation. Spring will close the Statement_object after the callback returned, but this does not necessarily imply_that the ResultSet resources will be closed: the Statement objects might_get pooled by the connection pool, with {@code close} calls only_returning the object to the pool but not physically closing the resources.__<p>If called without a thread-bound JDBC transaction (initiated by_DataSourceTransactionManager), the code will simply get executed on the_JDBC connection with its transactional semantics. If JdbcTemplate is_configured to use a JTA-aware DataSource, the JDBC connection and thus_the callback code will be transactional if a JTA transaction is active.__<p>Allows for returning a result object created within the callback, i.e._a domain object or a collection of domain objects. Note that there's_special support for single step actions: see JdbcTemplate.queryForObject etc._A thrown RuntimeException is treated as application exception, it gets_propagated to the caller of the template.__@param stmt active JDBC Statement_@return a result object, or {@code null} if none_@throws SQLException if thrown by a JDBC method, to be auto-converted_to a DataAccessException by a SQLExceptionTranslator_@throws DataAccessException in case of custom exceptions_@see JdbcTemplate#queryForObject(String, Class)_@see JdbcTemplate#queryForRowSet(String);T doInStatement(Statement stmt) throws SQLException, DataAccessException_;gets,called,by,code,jdbc,template,execute,with,an,active,jdbc,statement,does,not,need,to,care,about,closing,the,statement,or,the,connection,or,about,handling,transactions,this,will,all,be,handled,by,spring,s,jdbc,template,p,b,note,b,any,result,sets,opened,should,be,closed,in,finally,blocks,within,the,callback,implementation,spring,will,close,the,statement,object,after,the,callback,returned,but,this,does,not,necessarily,imply,that,the,result,set,resources,will,be,closed,the,statement,objects,might,get,pooled,by,the,connection,pool,with,code,close,calls,only,returning,the,object,to,the,pool,but,not,physically,closing,the,resources,p,if,called,without,a,thread,bound,jdbc,transaction,initiated,by,data,source,transaction,manager,the,code,will,simply,get,executed,on,the,jdbc,connection,with,its,transactional,semantics,if,jdbc,template,is,configured,to,use,a,jta,aware,data,source,the,jdbc,connection,and,thus,the,callback,code,will,be,transactional,if,a,jta,transaction,is,active,p,allows,for,returning,a,result,object,created,within,the,callback,i,e,a,domain,object,or,a,collection,of,domain,objects,note,that,there,s,special,support,for,single,step,actions,see,jdbc,template,query,for,object,etc,a,thrown,runtime,exception,is,treated,as,application,exception,it,gets,propagated,to,the,caller,of,the,template,param,stmt,active,jdbc,statement,return,a,result,object,or,code,null,if,none,throws,sqlexception,if,thrown,by,a,jdbc,method,to,be,auto,converted,to,a,data,access,exception,by,a,sqlexception,translator,throws,data,access,exception,in,case,of,custom,exceptions,see,jdbc,template,query,for,object,string,class,see,jdbc,template,query,for,row,set,string;t,do,in,statement,statement,stmt,throws,sqlexception,data,access,exception
StatementCallback -> T doInStatement(Statement stmt) throws SQLException, DataAccessException_;1460469837;Gets called by {@code JdbcTemplate.execute} with an active JDBC_Statement. Does not need to care about closing the Statement or the_Connection, or about handling transactions: this will all be handled_by Spring's JdbcTemplate._<p><b>NOTE:</b> Any ResultSets opened should be closed in finally blocks_within the callback implementation. Spring will close the Statement_object after the callback returned, but this does not necessarily imply_that the ResultSet resources will be closed: the Statement objects might_get pooled by the connection pool, with {@code close} calls only_returning the object to the pool but not physically closing the resources._<p>If called without a thread-bound JDBC transaction (initiated by_DataSourceTransactionManager), the code will simply get executed on the_JDBC connection with its transactional semantics. If JdbcTemplate is_configured to use a JTA-aware DataSource, the JDBC connection and thus_the callback code will be transactional if a JTA transaction is active._<p>Allows for returning a result object created within the callback, i.e._a domain object or a collection of domain objects. Note that there's_special support for single step actions: see JdbcTemplate.queryForObject etc._A thrown RuntimeException is treated as application exception, it gets_propagated to the caller of the template._@param stmt active JDBC Statement_@return a result object, or {@code null} if none_@throws SQLException if thrown by a JDBC method, to be auto-converted_to a DataAccessException by a SQLExceptionTranslator_@throws DataAccessException in case of custom exceptions_@see JdbcTemplate#queryForObject(String, Class)_@see JdbcTemplate#queryForRowSet(String);T doInStatement(Statement stmt) throws SQLException, DataAccessException_;gets,called,by,code,jdbc,template,execute,with,an,active,jdbc,statement,does,not,need,to,care,about,closing,the,statement,or,the,connection,or,about,handling,transactions,this,will,all,be,handled,by,spring,s,jdbc,template,p,b,note,b,any,result,sets,opened,should,be,closed,in,finally,blocks,within,the,callback,implementation,spring,will,close,the,statement,object,after,the,callback,returned,but,this,does,not,necessarily,imply,that,the,result,set,resources,will,be,closed,the,statement,objects,might,get,pooled,by,the,connection,pool,with,code,close,calls,only,returning,the,object,to,the,pool,but,not,physically,closing,the,resources,p,if,called,without,a,thread,bound,jdbc,transaction,initiated,by,data,source,transaction,manager,the,code,will,simply,get,executed,on,the,jdbc,connection,with,its,transactional,semantics,if,jdbc,template,is,configured,to,use,a,jta,aware,data,source,the,jdbc,connection,and,thus,the,callback,code,will,be,transactional,if,a,jta,transaction,is,active,p,allows,for,returning,a,result,object,created,within,the,callback,i,e,a,domain,object,or,a,collection,of,domain,objects,note,that,there,s,special,support,for,single,step,actions,see,jdbc,template,query,for,object,etc,a,thrown,runtime,exception,is,treated,as,application,exception,it,gets,propagated,to,the,caller,of,the,template,param,stmt,active,jdbc,statement,return,a,result,object,or,code,null,if,none,throws,sqlexception,if,thrown,by,a,jdbc,method,to,be,auto,converted,to,a,data,access,exception,by,a,sqlexception,translator,throws,data,access,exception,in,case,of,custom,exceptions,see,jdbc,template,query,for,object,string,class,see,jdbc,template,query,for,row,set,string;t,do,in,statement,statement,stmt,throws,sqlexception,data,access,exception
StatementCallback -> T doInStatement(Statement stmt) throws SQLException, DataAccessException_;1467808333;Gets called by {@code JdbcTemplate.execute} with an active JDBC_Statement. Does not need to care about closing the Statement or the_Connection, or about handling transactions: this will all be handled_by Spring's JdbcTemplate._<p><b>NOTE:</b> Any ResultSets opened should be closed in finally blocks_within the callback implementation. Spring will close the Statement_object after the callback returned, but this does not necessarily imply_that the ResultSet resources will be closed: the Statement objects might_get pooled by the connection pool, with {@code close} calls only_returning the object to the pool but not physically closing the resources._<p>If called without a thread-bound JDBC transaction (initiated by_DataSourceTransactionManager), the code will simply get executed on the_JDBC connection with its transactional semantics. If JdbcTemplate is_configured to use a JTA-aware DataSource, the JDBC connection and thus_the callback code will be transactional if a JTA transaction is active._<p>Allows for returning a result object created within the callback, i.e._a domain object or a collection of domain objects. Note that there's_special support for single step actions: see JdbcTemplate.queryForObject etc._A thrown RuntimeException is treated as application exception, it gets_propagated to the caller of the template._@param stmt active JDBC Statement_@return a result object, or {@code null} if none_@throws SQLException if thrown by a JDBC method, to be auto-converted_to a DataAccessException by a SQLExceptionTranslator_@throws DataAccessException in case of custom exceptions_@see JdbcTemplate#queryForObject(String, Class)_@see JdbcTemplate#queryForRowSet(String);T doInStatement(Statement stmt) throws SQLException, DataAccessException_;gets,called,by,code,jdbc,template,execute,with,an,active,jdbc,statement,does,not,need,to,care,about,closing,the,statement,or,the,connection,or,about,handling,transactions,this,will,all,be,handled,by,spring,s,jdbc,template,p,b,note,b,any,result,sets,opened,should,be,closed,in,finally,blocks,within,the,callback,implementation,spring,will,close,the,statement,object,after,the,callback,returned,but,this,does,not,necessarily,imply,that,the,result,set,resources,will,be,closed,the,statement,objects,might,get,pooled,by,the,connection,pool,with,code,close,calls,only,returning,the,object,to,the,pool,but,not,physically,closing,the,resources,p,if,called,without,a,thread,bound,jdbc,transaction,initiated,by,data,source,transaction,manager,the,code,will,simply,get,executed,on,the,jdbc,connection,with,its,transactional,semantics,if,jdbc,template,is,configured,to,use,a,jta,aware,data,source,the,jdbc,connection,and,thus,the,callback,code,will,be,transactional,if,a,jta,transaction,is,active,p,allows,for,returning,a,result,object,created,within,the,callback,i,e,a,domain,object,or,a,collection,of,domain,objects,note,that,there,s,special,support,for,single,step,actions,see,jdbc,template,query,for,object,etc,a,thrown,runtime,exception,is,treated,as,application,exception,it,gets,propagated,to,the,caller,of,the,template,param,stmt,active,jdbc,statement,return,a,result,object,or,code,null,if,none,throws,sqlexception,if,thrown,by,a,jdbc,method,to,be,auto,converted,to,a,data,access,exception,by,a,sqlexception,translator,throws,data,access,exception,in,case,of,custom,exceptions,see,jdbc,template,query,for,object,string,class,see,jdbc,template,query,for,row,set,string;t,do,in,statement,statement,stmt,throws,sqlexception,data,access,exception
