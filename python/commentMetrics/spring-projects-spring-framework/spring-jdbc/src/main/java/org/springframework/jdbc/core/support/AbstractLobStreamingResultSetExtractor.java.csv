# id;timestamp;commentText;codeText;commentWords;codeWords
AbstractLobStreamingResultSetExtractor -> protected void handleNoRowFound() throws DataAccessException;1328020251;Handle the case where the ResultSet does not contain a row._@throws DataAccessException a corresponding exception,_by default an EmptyResultDataAccessException_@see org.springframework.dao.EmptyResultDataAccessException;protected void handleNoRowFound() throws DataAccessException {_		throw new EmptyResultDataAccessException(_				"LobStreamingResultSetExtractor did not find row in database", 1)__	};handle,the,case,where,the,result,set,does,not,contain,a,row,throws,data,access,exception,a,corresponding,exception,by,default,an,empty,result,data,access,exception,see,org,springframework,dao,empty,result,data,access,exception;protected,void,handle,no,row,found,throws,data,access,exception,throw,new,empty,result,data,access,exception,lob,streaming,result,set,extractor,did,not,find,row,in,database,1
AbstractLobStreamingResultSetExtractor -> protected void handleNoRowFound() throws DataAccessException;1356735495;Handle the case where the ResultSet does not contain a row._@throws DataAccessException a corresponding exception,_by default an EmptyResultDataAccessException_@see org.springframework.dao.EmptyResultDataAccessException;protected void handleNoRowFound() throws DataAccessException {_		throw new EmptyResultDataAccessException(_				"LobStreamingResultSetExtractor did not find row in database", 1)__	};handle,the,case,where,the,result,set,does,not,contain,a,row,throws,data,access,exception,a,corresponding,exception,by,default,an,empty,result,data,access,exception,see,org,springframework,dao,empty,result,data,access,exception;protected,void,handle,no,row,found,throws,data,access,exception,throw,new,empty,result,data,access,exception,lob,streaming,result,set,extractor,did,not,find,row,in,database,1
AbstractLobStreamingResultSetExtractor -> protected void handleNoRowFound() throws DataAccessException;1357119239;Handle the case where the ResultSet does not contain a row._@throws DataAccessException a corresponding exception,_by default an EmptyResultDataAccessException_@see org.springframework.dao.EmptyResultDataAccessException;protected void handleNoRowFound() throws DataAccessException {_		throw new EmptyResultDataAccessException(_				"LobStreamingResultSetExtractor did not find row in database", 1)__	};handle,the,case,where,the,result,set,does,not,contain,a,row,throws,data,access,exception,a,corresponding,exception,by,default,an,empty,result,data,access,exception,see,org,springframework,dao,empty,result,data,access,exception;protected,void,handle,no,row,found,throws,data,access,exception,throw,new,empty,result,data,access,exception,lob,streaming,result,set,extractor,did,not,find,row,in,database,1
AbstractLobStreamingResultSetExtractor -> protected void handleNoRowFound() throws DataAccessException;1368482696;Handle the case where the ResultSet does not contain a row._@throws DataAccessException a corresponding exception,_by default an EmptyResultDataAccessException_@see org.springframework.dao.EmptyResultDataAccessException;protected void handleNoRowFound() throws DataAccessException {_		throw new EmptyResultDataAccessException(_				"LobStreamingResultSetExtractor did not find row in database", 1)__	};handle,the,case,where,the,result,set,does,not,contain,a,row,throws,data,access,exception,a,corresponding,exception,by,default,an,empty,result,data,access,exception,see,org,springframework,dao,empty,result,data,access,exception;protected,void,handle,no,row,found,throws,data,access,exception,throw,new,empty,result,data,access,exception,lob,streaming,result,set,extractor,did,not,find,row,in,database,1
AbstractLobStreamingResultSetExtractor -> protected void handleNoRowFound() throws DataAccessException;1385412762;Handle the case where the ResultSet does not contain a row._@throws DataAccessException a corresponding exception,_by default an EmptyResultDataAccessException_@see org.springframework.dao.EmptyResultDataAccessException;protected void handleNoRowFound() throws DataAccessException {_		throw new EmptyResultDataAccessException(_				"LobStreamingResultSetExtractor did not find row in database", 1)__	};handle,the,case,where,the,result,set,does,not,contain,a,row,throws,data,access,exception,a,corresponding,exception,by,default,an,empty,result,data,access,exception,see,org,springframework,dao,empty,result,data,access,exception;protected,void,handle,no,row,found,throws,data,access,exception,throw,new,empty,result,data,access,exception,lob,streaming,result,set,extractor,did,not,find,row,in,database,1
AbstractLobStreamingResultSetExtractor -> protected void handleNoRowFound() throws DataAccessException;1502974979;Handle the case where the ResultSet does not contain a row._@throws DataAccessException a corresponding exception,_by default an EmptyResultDataAccessException_@see org.springframework.dao.EmptyResultDataAccessException;protected void handleNoRowFound() throws DataAccessException {_		throw new EmptyResultDataAccessException(_				"LobStreamingResultSetExtractor did not find row in database", 1)__	};handle,the,case,where,the,result,set,does,not,contain,a,row,throws,data,access,exception,a,corresponding,exception,by,default,an,empty,result,data,access,exception,see,org,springframework,dao,empty,result,data,access,exception;protected,void,handle,no,row,found,throws,data,access,exception,throw,new,empty,result,data,access,exception,lob,streaming,result,set,extractor,did,not,find,row,in,database,1
AbstractLobStreamingResultSetExtractor -> protected void handleNoRowFound() throws DataAccessException;1530174524;Handle the case where the ResultSet does not contain a row._@throws DataAccessException a corresponding exception,_by default an EmptyResultDataAccessException_@see org.springframework.dao.EmptyResultDataAccessException;protected void handleNoRowFound() throws DataAccessException {_		throw new EmptyResultDataAccessException(_				"LobStreamingResultSetExtractor did not find row in database", 1)__	};handle,the,case,where,the,result,set,does,not,contain,a,row,throws,data,access,exception,a,corresponding,exception,by,default,an,empty,result,data,access,exception,see,org,springframework,dao,empty,result,data,access,exception;protected,void,handle,no,row,found,throws,data,access,exception,throw,new,empty,result,data,access,exception,lob,streaming,result,set,extractor,did,not,find,row,in,database,1
AbstractLobStreamingResultSetExtractor -> protected abstract void streamData(ResultSet rs) throws SQLException, IOException, DataAccessException_;1328020251;Stream LOB content from the given ResultSet to some OutputStream._<p>Typically used as inner class, with access to surrounding method arguments_and to a LobHandler instance variable of the surrounding class._@param rs the ResultSet to take the LOB content from_@throws SQLException if thrown by JDBC methods_@throws IOException if thrown by stream access methods_@throws DataAccessException in case of custom exceptions_@see org.springframework.jdbc.support.lob.LobHandler#getBlobAsBinaryStream_@see org.springframework.util.FileCopyUtils;protected abstract void streamData(ResultSet rs) throws SQLException, IOException, DataAccessException_;stream,lob,content,from,the,given,result,set,to,some,output,stream,p,typically,used,as,inner,class,with,access,to,surrounding,method,arguments,and,to,a,lob,handler,instance,variable,of,the,surrounding,class,param,rs,the,result,set,to,take,the,lob,content,from,throws,sqlexception,if,thrown,by,jdbc,methods,throws,ioexception,if,thrown,by,stream,access,methods,throws,data,access,exception,in,case,of,custom,exceptions,see,org,springframework,jdbc,support,lob,lob,handler,get,blob,as,binary,stream,see,org,springframework,util,file,copy,utils;protected,abstract,void,stream,data,result,set,rs,throws,sqlexception,ioexception,data,access,exception
AbstractLobStreamingResultSetExtractor -> protected abstract void streamData(ResultSet rs) throws SQLException, IOException, DataAccessException_;1356735495;Stream LOB content from the given ResultSet to some OutputStream._<p>Typically used as inner class, with access to surrounding method arguments_and to a LobHandler instance variable of the surrounding class._@param rs the ResultSet to take the LOB content from_@throws SQLException if thrown by JDBC methods_@throws IOException if thrown by stream access methods_@throws DataAccessException in case of custom exceptions_@see org.springframework.jdbc.support.lob.LobHandler#getBlobAsBinaryStream_@see org.springframework.util.FileCopyUtils;protected abstract void streamData(ResultSet rs) throws SQLException, IOException, DataAccessException_;stream,lob,content,from,the,given,result,set,to,some,output,stream,p,typically,used,as,inner,class,with,access,to,surrounding,method,arguments,and,to,a,lob,handler,instance,variable,of,the,surrounding,class,param,rs,the,result,set,to,take,the,lob,content,from,throws,sqlexception,if,thrown,by,jdbc,methods,throws,ioexception,if,thrown,by,stream,access,methods,throws,data,access,exception,in,case,of,custom,exceptions,see,org,springframework,jdbc,support,lob,lob,handler,get,blob,as,binary,stream,see,org,springframework,util,file,copy,utils;protected,abstract,void,stream,data,result,set,rs,throws,sqlexception,ioexception,data,access,exception
AbstractLobStreamingResultSetExtractor -> protected abstract void streamData(ResultSet rs) throws SQLException, IOException, DataAccessException_;1357119239;Stream LOB content from the given ResultSet to some OutputStream._<p>Typically used as inner class, with access to surrounding method arguments_and to a LobHandler instance variable of the surrounding class._@param rs the ResultSet to take the LOB content from_@throws SQLException if thrown by JDBC methods_@throws IOException if thrown by stream access methods_@throws DataAccessException in case of custom exceptions_@see org.springframework.jdbc.support.lob.LobHandler#getBlobAsBinaryStream_@see org.springframework.util.FileCopyUtils;protected abstract void streamData(ResultSet rs) throws SQLException, IOException, DataAccessException_;stream,lob,content,from,the,given,result,set,to,some,output,stream,p,typically,used,as,inner,class,with,access,to,surrounding,method,arguments,and,to,a,lob,handler,instance,variable,of,the,surrounding,class,param,rs,the,result,set,to,take,the,lob,content,from,throws,sqlexception,if,thrown,by,jdbc,methods,throws,ioexception,if,thrown,by,stream,access,methods,throws,data,access,exception,in,case,of,custom,exceptions,see,org,springframework,jdbc,support,lob,lob,handler,get,blob,as,binary,stream,see,org,springframework,util,file,copy,utils;protected,abstract,void,stream,data,result,set,rs,throws,sqlexception,ioexception,data,access,exception
AbstractLobStreamingResultSetExtractor -> protected abstract void streamData(ResultSet rs) throws SQLException, IOException, DataAccessException_;1368482696;Stream LOB content from the given ResultSet to some OutputStream._<p>Typically used as inner class, with access to surrounding method arguments_and to a LobHandler instance variable of the surrounding class._@param rs the ResultSet to take the LOB content from_@throws SQLException if thrown by JDBC methods_@throws IOException if thrown by stream access methods_@throws DataAccessException in case of custom exceptions_@see org.springframework.jdbc.support.lob.LobHandler#getBlobAsBinaryStream_@see org.springframework.util.FileCopyUtils;protected abstract void streamData(ResultSet rs) throws SQLException, IOException, DataAccessException_;stream,lob,content,from,the,given,result,set,to,some,output,stream,p,typically,used,as,inner,class,with,access,to,surrounding,method,arguments,and,to,a,lob,handler,instance,variable,of,the,surrounding,class,param,rs,the,result,set,to,take,the,lob,content,from,throws,sqlexception,if,thrown,by,jdbc,methods,throws,ioexception,if,thrown,by,stream,access,methods,throws,data,access,exception,in,case,of,custom,exceptions,see,org,springframework,jdbc,support,lob,lob,handler,get,blob,as,binary,stream,see,org,springframework,util,file,copy,utils;protected,abstract,void,stream,data,result,set,rs,throws,sqlexception,ioexception,data,access,exception
AbstractLobStreamingResultSetExtractor -> protected abstract void streamData(ResultSet rs) throws SQLException, IOException, DataAccessException_;1385412762;Stream LOB content from the given ResultSet to some OutputStream._<p>Typically used as inner class, with access to surrounding method arguments_and to a LobHandler instance variable of the surrounding class._@param rs the ResultSet to take the LOB content from_@throws SQLException if thrown by JDBC methods_@throws IOException if thrown by stream access methods_@throws DataAccessException in case of custom exceptions_@see org.springframework.jdbc.support.lob.LobHandler#getBlobAsBinaryStream_@see org.springframework.util.FileCopyUtils;protected abstract void streamData(ResultSet rs) throws SQLException, IOException, DataAccessException_;stream,lob,content,from,the,given,result,set,to,some,output,stream,p,typically,used,as,inner,class,with,access,to,surrounding,method,arguments,and,to,a,lob,handler,instance,variable,of,the,surrounding,class,param,rs,the,result,set,to,take,the,lob,content,from,throws,sqlexception,if,thrown,by,jdbc,methods,throws,ioexception,if,thrown,by,stream,access,methods,throws,data,access,exception,in,case,of,custom,exceptions,see,org,springframework,jdbc,support,lob,lob,handler,get,blob,as,binary,stream,see,org,springframework,util,file,copy,utils;protected,abstract,void,stream,data,result,set,rs,throws,sqlexception,ioexception,data,access,exception
AbstractLobStreamingResultSetExtractor -> protected abstract void streamData(ResultSet rs) throws SQLException, IOException, DataAccessException_;1502974979;Stream LOB content from the given ResultSet to some OutputStream._<p>Typically used as inner class, with access to surrounding method arguments_and to a LobHandler instance variable of the surrounding class._@param rs the ResultSet to take the LOB content from_@throws SQLException if thrown by JDBC methods_@throws IOException if thrown by stream access methods_@throws DataAccessException in case of custom exceptions_@see org.springframework.jdbc.support.lob.LobHandler#getBlobAsBinaryStream_@see org.springframework.util.FileCopyUtils;protected abstract void streamData(ResultSet rs) throws SQLException, IOException, DataAccessException_;stream,lob,content,from,the,given,result,set,to,some,output,stream,p,typically,used,as,inner,class,with,access,to,surrounding,method,arguments,and,to,a,lob,handler,instance,variable,of,the,surrounding,class,param,rs,the,result,set,to,take,the,lob,content,from,throws,sqlexception,if,thrown,by,jdbc,methods,throws,ioexception,if,thrown,by,stream,access,methods,throws,data,access,exception,in,case,of,custom,exceptions,see,org,springframework,jdbc,support,lob,lob,handler,get,blob,as,binary,stream,see,org,springframework,util,file,copy,utils;protected,abstract,void,stream,data,result,set,rs,throws,sqlexception,ioexception,data,access,exception
AbstractLobStreamingResultSetExtractor -> protected abstract void streamData(ResultSet rs) throws SQLException, IOException, DataAccessException_;1530174524;Stream LOB content from the given ResultSet to some OutputStream._<p>Typically used as inner class, with access to surrounding method arguments_and to a LobHandler instance variable of the surrounding class._@param rs the ResultSet to take the LOB content from_@throws SQLException if thrown by JDBC methods_@throws IOException if thrown by stream access methods_@throws DataAccessException in case of custom exceptions_@see org.springframework.jdbc.support.lob.LobHandler#getBlobAsBinaryStream_@see org.springframework.util.FileCopyUtils;protected abstract void streamData(ResultSet rs) throws SQLException, IOException, DataAccessException_;stream,lob,content,from,the,given,result,set,to,some,output,stream,p,typically,used,as,inner,class,with,access,to,surrounding,method,arguments,and,to,a,lob,handler,instance,variable,of,the,surrounding,class,param,rs,the,result,set,to,take,the,lob,content,from,throws,sqlexception,if,thrown,by,jdbc,methods,throws,ioexception,if,thrown,by,stream,access,methods,throws,data,access,exception,in,case,of,custom,exceptions,see,org,springframework,jdbc,support,lob,lob,handler,get,blob,as,binary,stream,see,org,springframework,util,file,copy,utils;protected,abstract,void,stream,data,result,set,rs,throws,sqlexception,ioexception,data,access,exception
AbstractLobStreamingResultSetExtractor -> @Override 	@Nullable 	public final T extractData(ResultSet rs) throws SQLException, DataAccessException;1502974979;Delegates to handleNoRowFound, handleMultipleRowsFound and streamData,_according to the ResultSet state. Converts an IOException thrown by_streamData to a LobRetrievalFailureException._@see #handleNoRowFound_@see #handleMultipleRowsFound_@see #streamData_@see org.springframework.jdbc.LobRetrievalFailureException;@Override_	@Nullable_	public final T extractData(ResultSet rs) throws SQLException, DataAccessException {_		if (!rs.next()) {_			handleNoRowFound()__		}_		else {_			try {_				streamData(rs)__				if (rs.next()) {_					handleMultipleRowsFound()__				}_			}_			catch (IOException ex) {_				throw new LobRetrievalFailureException("Couldn't stream LOB content", ex)__			}_		}_		return null__	};delegates,to,handle,no,row,found,handle,multiple,rows,found,and,stream,data,according,to,the,result,set,state,converts,an,ioexception,thrown,by,stream,data,to,a,lob,retrieval,failure,exception,see,handle,no,row,found,see,handle,multiple,rows,found,see,stream,data,see,org,springframework,jdbc,lob,retrieval,failure,exception;override,nullable,public,final,t,extract,data,result,set,rs,throws,sqlexception,data,access,exception,if,rs,next,handle,no,row,found,else,try,stream,data,rs,if,rs,next,handle,multiple,rows,found,catch,ioexception,ex,throw,new,lob,retrieval,failure,exception,couldn,t,stream,lob,content,ex,return,null
AbstractLobStreamingResultSetExtractor -> @Override 	@Nullable 	public final T extractData(ResultSet rs) throws SQLException, DataAccessException;1530174524;Delegates to handleNoRowFound, handleMultipleRowsFound and streamData,_according to the ResultSet state. Converts an IOException thrown by_streamData to a LobRetrievalFailureException._@see #handleNoRowFound_@see #handleMultipleRowsFound_@see #streamData_@see org.springframework.jdbc.LobRetrievalFailureException;@Override_	@Nullable_	public final T extractData(ResultSet rs) throws SQLException, DataAccessException {_		if (!rs.next()) {_			handleNoRowFound()__		}_		else {_			try {_				streamData(rs)__				if (rs.next()) {_					handleMultipleRowsFound()__				}_			}_			catch (IOException ex) {_				throw new LobRetrievalFailureException("Couldn't stream LOB content", ex)__			}_		}_		return null__	};delegates,to,handle,no,row,found,handle,multiple,rows,found,and,stream,data,according,to,the,result,set,state,converts,an,ioexception,thrown,by,stream,data,to,a,lob,retrieval,failure,exception,see,handle,no,row,found,see,handle,multiple,rows,found,see,stream,data,see,org,springframework,jdbc,lob,retrieval,failure,exception;override,nullable,public,final,t,extract,data,result,set,rs,throws,sqlexception,data,access,exception,if,rs,next,handle,no,row,found,else,try,stream,data,rs,if,rs,next,handle,multiple,rows,found,catch,ioexception,ex,throw,new,lob,retrieval,failure,exception,couldn,t,stream,lob,content,ex,return,null
AbstractLobStreamingResultSetExtractor -> protected void handleMultipleRowsFound() throws DataAccessException;1328020251;Handle the case where the ResultSet contains multiple rows._@throws DataAccessException a corresponding exception,_by default an IncorrectResultSizeDataAccessException_@see org.springframework.dao.IncorrectResultSizeDataAccessException;protected void handleMultipleRowsFound() throws DataAccessException {_		throw new IncorrectResultSizeDataAccessException(_				"LobStreamingResultSetExtractor found multiple rows in database", 1)__	};handle,the,case,where,the,result,set,contains,multiple,rows,throws,data,access,exception,a,corresponding,exception,by,default,an,incorrect,result,size,data,access,exception,see,org,springframework,dao,incorrect,result,size,data,access,exception;protected,void,handle,multiple,rows,found,throws,data,access,exception,throw,new,incorrect,result,size,data,access,exception,lob,streaming,result,set,extractor,found,multiple,rows,in,database,1
AbstractLobStreamingResultSetExtractor -> protected void handleMultipleRowsFound() throws DataAccessException;1356735495;Handle the case where the ResultSet contains multiple rows._@throws DataAccessException a corresponding exception,_by default an IncorrectResultSizeDataAccessException_@see org.springframework.dao.IncorrectResultSizeDataAccessException;protected void handleMultipleRowsFound() throws DataAccessException {_		throw new IncorrectResultSizeDataAccessException(_				"LobStreamingResultSetExtractor found multiple rows in database", 1)__	};handle,the,case,where,the,result,set,contains,multiple,rows,throws,data,access,exception,a,corresponding,exception,by,default,an,incorrect,result,size,data,access,exception,see,org,springframework,dao,incorrect,result,size,data,access,exception;protected,void,handle,multiple,rows,found,throws,data,access,exception,throw,new,incorrect,result,size,data,access,exception,lob,streaming,result,set,extractor,found,multiple,rows,in,database,1
AbstractLobStreamingResultSetExtractor -> protected void handleMultipleRowsFound() throws DataAccessException;1357119239;Handle the case where the ResultSet contains multiple rows._@throws DataAccessException a corresponding exception,_by default an IncorrectResultSizeDataAccessException_@see org.springframework.dao.IncorrectResultSizeDataAccessException;protected void handleMultipleRowsFound() throws DataAccessException {_		throw new IncorrectResultSizeDataAccessException(_				"LobStreamingResultSetExtractor found multiple rows in database", 1)__	};handle,the,case,where,the,result,set,contains,multiple,rows,throws,data,access,exception,a,corresponding,exception,by,default,an,incorrect,result,size,data,access,exception,see,org,springframework,dao,incorrect,result,size,data,access,exception;protected,void,handle,multiple,rows,found,throws,data,access,exception,throw,new,incorrect,result,size,data,access,exception,lob,streaming,result,set,extractor,found,multiple,rows,in,database,1
AbstractLobStreamingResultSetExtractor -> protected void handleMultipleRowsFound() throws DataAccessException;1368482696;Handle the case where the ResultSet contains multiple rows._@throws DataAccessException a corresponding exception,_by default an IncorrectResultSizeDataAccessException_@see org.springframework.dao.IncorrectResultSizeDataAccessException;protected void handleMultipleRowsFound() throws DataAccessException {_		throw new IncorrectResultSizeDataAccessException(_				"LobStreamingResultSetExtractor found multiple rows in database", 1)__	};handle,the,case,where,the,result,set,contains,multiple,rows,throws,data,access,exception,a,corresponding,exception,by,default,an,incorrect,result,size,data,access,exception,see,org,springframework,dao,incorrect,result,size,data,access,exception;protected,void,handle,multiple,rows,found,throws,data,access,exception,throw,new,incorrect,result,size,data,access,exception,lob,streaming,result,set,extractor,found,multiple,rows,in,database,1
AbstractLobStreamingResultSetExtractor -> protected void handleMultipleRowsFound() throws DataAccessException;1385412762;Handle the case where the ResultSet contains multiple rows._@throws DataAccessException a corresponding exception,_by default an IncorrectResultSizeDataAccessException_@see org.springframework.dao.IncorrectResultSizeDataAccessException;protected void handleMultipleRowsFound() throws DataAccessException {_		throw new IncorrectResultSizeDataAccessException(_				"LobStreamingResultSetExtractor found multiple rows in database", 1)__	};handle,the,case,where,the,result,set,contains,multiple,rows,throws,data,access,exception,a,corresponding,exception,by,default,an,incorrect,result,size,data,access,exception,see,org,springframework,dao,incorrect,result,size,data,access,exception;protected,void,handle,multiple,rows,found,throws,data,access,exception,throw,new,incorrect,result,size,data,access,exception,lob,streaming,result,set,extractor,found,multiple,rows,in,database,1
AbstractLobStreamingResultSetExtractor -> protected void handleMultipleRowsFound() throws DataAccessException;1502974979;Handle the case where the ResultSet contains multiple rows._@throws DataAccessException a corresponding exception,_by default an IncorrectResultSizeDataAccessException_@see org.springframework.dao.IncorrectResultSizeDataAccessException;protected void handleMultipleRowsFound() throws DataAccessException {_		throw new IncorrectResultSizeDataAccessException(_				"LobStreamingResultSetExtractor found multiple rows in database", 1)__	};handle,the,case,where,the,result,set,contains,multiple,rows,throws,data,access,exception,a,corresponding,exception,by,default,an,incorrect,result,size,data,access,exception,see,org,springframework,dao,incorrect,result,size,data,access,exception;protected,void,handle,multiple,rows,found,throws,data,access,exception,throw,new,incorrect,result,size,data,access,exception,lob,streaming,result,set,extractor,found,multiple,rows,in,database,1
AbstractLobStreamingResultSetExtractor -> protected void handleMultipleRowsFound() throws DataAccessException;1530174524;Handle the case where the ResultSet contains multiple rows._@throws DataAccessException a corresponding exception,_by default an IncorrectResultSizeDataAccessException_@see org.springframework.dao.IncorrectResultSizeDataAccessException;protected void handleMultipleRowsFound() throws DataAccessException {_		throw new IncorrectResultSizeDataAccessException(_				"LobStreamingResultSetExtractor found multiple rows in database", 1)__	};handle,the,case,where,the,result,set,contains,multiple,rows,throws,data,access,exception,a,corresponding,exception,by,default,an,incorrect,result,size,data,access,exception,see,org,springframework,dao,incorrect,result,size,data,access,exception;protected,void,handle,multiple,rows,found,throws,data,access,exception,throw,new,incorrect,result,size,data,access,exception,lob,streaming,result,set,extractor,found,multiple,rows,in,database,1
AbstractLobStreamingResultSetExtractor -> @Override 	public final Object extractData(ResultSet rs) throws SQLException, DataAccessException;1356735495;Delegates to handleNoRowFound, handleMultipleRowsFound and streamData,_according to the ResultSet state. Converts an IOException thrown by_streamData to a LobRetrievalFailureException._@see #handleNoRowFound_@see #handleMultipleRowsFound_@see #streamData_@see org.springframework.jdbc.LobRetrievalFailureException;@Override_	public final Object extractData(ResultSet rs) throws SQLException, DataAccessException {_		if (!rs.next()) {_			handleNoRowFound()__		}_		else {_			try {_				streamData(rs)__				if (rs.next()) {_					handleMultipleRowsFound()__				}_			}_			catch (IOException ex) {_				throw new LobRetrievalFailureException("Couldn't stream LOB content", ex)__			}_		}_		return null__	};delegates,to,handle,no,row,found,handle,multiple,rows,found,and,stream,data,according,to,the,result,set,state,converts,an,ioexception,thrown,by,stream,data,to,a,lob,retrieval,failure,exception,see,handle,no,row,found,see,handle,multiple,rows,found,see,stream,data,see,org,springframework,jdbc,lob,retrieval,failure,exception;override,public,final,object,extract,data,result,set,rs,throws,sqlexception,data,access,exception,if,rs,next,handle,no,row,found,else,try,stream,data,rs,if,rs,next,handle,multiple,rows,found,catch,ioexception,ex,throw,new,lob,retrieval,failure,exception,couldn,t,stream,lob,content,ex,return,null
AbstractLobStreamingResultSetExtractor -> @Override 	public final Object extractData(ResultSet rs) throws SQLException, DataAccessException;1368482696;Delegates to handleNoRowFound, handleMultipleRowsFound and streamData,_according to the ResultSet state. Converts an IOException thrown by_streamData to a LobRetrievalFailureException._@see #handleNoRowFound_@see #handleMultipleRowsFound_@see #streamData_@see org.springframework.jdbc.LobRetrievalFailureException;@Override_	public final Object extractData(ResultSet rs) throws SQLException, DataAccessException {_		if (!rs.next()) {_			handleNoRowFound()__		}_		else {_			try {_				streamData(rs)__				if (rs.next()) {_					handleMultipleRowsFound()__				}_			}_			catch (IOException ex) {_				throw new LobRetrievalFailureException("Couldn't stream LOB content", ex)__			}_		}_		return null__	};delegates,to,handle,no,row,found,handle,multiple,rows,found,and,stream,data,according,to,the,result,set,state,converts,an,ioexception,thrown,by,stream,data,to,a,lob,retrieval,failure,exception,see,handle,no,row,found,see,handle,multiple,rows,found,see,stream,data,see,org,springframework,jdbc,lob,retrieval,failure,exception;override,public,final,object,extract,data,result,set,rs,throws,sqlexception,data,access,exception,if,rs,next,handle,no,row,found,else,try,stream,data,rs,if,rs,next,handle,multiple,rows,found,catch,ioexception,ex,throw,new,lob,retrieval,failure,exception,couldn,t,stream,lob,content,ex,return,null
AbstractLobStreamingResultSetExtractor -> public final Object extractData(ResultSet rs) throws SQLException, DataAccessException;1328020251;Delegates to handleNoRowFound, handleMultipleRowsFound and streamData,_according to the ResultSet state. Converts an IOException thrown by_streamData to a LobRetrievalFailureException._@see #handleNoRowFound_@see #handleMultipleRowsFound_@see #streamData_@see org.springframework.jdbc.LobRetrievalFailureException;public final Object extractData(ResultSet rs) throws SQLException, DataAccessException {_		if (!rs.next()) {_			handleNoRowFound()__		}_		else {_			try {_				streamData(rs)__				if (rs.next()) {_					handleMultipleRowsFound()__				}_			}_			catch (IOException ex) {_				throw new LobRetrievalFailureException("Couldn't stream LOB content", ex)__			}_		}_		return null__	};delegates,to,handle,no,row,found,handle,multiple,rows,found,and,stream,data,according,to,the,result,set,state,converts,an,ioexception,thrown,by,stream,data,to,a,lob,retrieval,failure,exception,see,handle,no,row,found,see,handle,multiple,rows,found,see,stream,data,see,org,springframework,jdbc,lob,retrieval,failure,exception;public,final,object,extract,data,result,set,rs,throws,sqlexception,data,access,exception,if,rs,next,handle,no,row,found,else,try,stream,data,rs,if,rs,next,handle,multiple,rows,found,catch,ioexception,ex,throw,new,lob,retrieval,failure,exception,couldn,t,stream,lob,content,ex,return,null
AbstractLobStreamingResultSetExtractor -> public final Object extractData(ResultSet rs) throws SQLException, DataAccessException;1357119239;Delegates to handleNoRowFound, handleMultipleRowsFound and streamData,_according to the ResultSet state. Converts an IOException thrown by_streamData to a LobRetrievalFailureException._@see #handleNoRowFound_@see #handleMultipleRowsFound_@see #streamData_@see org.springframework.jdbc.LobRetrievalFailureException;public final Object extractData(ResultSet rs) throws SQLException, DataAccessException {_		if (!rs.next()) {_			handleNoRowFound()__		}_		else {_			try {_				streamData(rs)__				if (rs.next()) {_					handleMultipleRowsFound()__				}_			}_			catch (IOException ex) {_				throw new LobRetrievalFailureException("Couldn't stream LOB content", ex)__			}_		}_		return null__	};delegates,to,handle,no,row,found,handle,multiple,rows,found,and,stream,data,according,to,the,result,set,state,converts,an,ioexception,thrown,by,stream,data,to,a,lob,retrieval,failure,exception,see,handle,no,row,found,see,handle,multiple,rows,found,see,stream,data,see,org,springframework,jdbc,lob,retrieval,failure,exception;public,final,object,extract,data,result,set,rs,throws,sqlexception,data,access,exception,if,rs,next,handle,no,row,found,else,try,stream,data,rs,if,rs,next,handle,multiple,rows,found,catch,ioexception,ex,throw,new,lob,retrieval,failure,exception,couldn,t,stream,lob,content,ex,return,null
