# id;timestamp;commentText;codeText;commentWords;codeWords
JdbcTransactionObjectSupport -> @Override 	public void releaseSavepoint(Object savepoint) throws TransactionException;1356735495;This implementation releases the given JDBC 3.0 Savepoint._@see java.sql.Connection#releaseSavepoint;@Override_	public void releaseSavepoint(Object savepoint) throws TransactionException {_		try {_			getConnectionHolderForSavepoint().getConnection().releaseSavepoint((Savepoint) savepoint)__		}_		catch (Throwable ex) {_			logger.debug("Could not explicitly release JDBC savepoint", ex)__		}_	};this,implementation,releases,the,given,jdbc,3,0,savepoint,see,java,sql,connection,release,savepoint;override,public,void,release,savepoint,object,savepoint,throws,transaction,exception,try,get,connection,holder,for,savepoint,get,connection,release,savepoint,savepoint,savepoint,catch,throwable,ex,logger,debug,could,not,explicitly,release,jdbc,savepoint,ex
JdbcTransactionObjectSupport -> @Override 	public void releaseSavepoint(Object savepoint) throws TransactionException;1368482696;This implementation releases the given JDBC 3.0 Savepoint._@see java.sql.Connection#releaseSavepoint;@Override_	public void releaseSavepoint(Object savepoint) throws TransactionException {_		try {_			getConnectionHolderForSavepoint().getConnection().releaseSavepoint((Savepoint) savepoint)__		}_		catch (Throwable ex) {_			logger.debug("Could not explicitly release JDBC savepoint", ex)__		}_	};this,implementation,releases,the,given,jdbc,3,0,savepoint,see,java,sql,connection,release,savepoint;override,public,void,release,savepoint,object,savepoint,throws,transaction,exception,try,get,connection,holder,for,savepoint,get,connection,release,savepoint,savepoint,savepoint,catch,throwable,ex,logger,debug,could,not,explicitly,release,jdbc,savepoint,ex
JdbcTransactionObjectSupport -> @Override 	public void releaseSavepoint(Object savepoint) throws TransactionException;1397137904;This implementation releases the given JDBC 3.0 Savepoint._@see java.sql.Connection#releaseSavepoint;@Override_	public void releaseSavepoint(Object savepoint) throws TransactionException {_		try {_			getConnectionHolderForSavepoint().getConnection().releaseSavepoint((Savepoint) savepoint)__		}_		catch (Throwable ex) {_			logger.debug("Could not explicitly release JDBC savepoint", ex)__		}_	};this,implementation,releases,the,given,jdbc,3,0,savepoint,see,java,sql,connection,release,savepoint;override,public,void,release,savepoint,object,savepoint,throws,transaction,exception,try,get,connection,holder,for,savepoint,get,connection,release,savepoint,savepoint,savepoint,catch,throwable,ex,logger,debug,could,not,explicitly,release,jdbc,savepoint,ex
JdbcTransactionObjectSupport -> @Override 	public void releaseSavepoint(Object savepoint) throws TransactionException;1411390744;This implementation releases the given JDBC 3.0 Savepoint._@see java.sql.Connection#releaseSavepoint;@Override_	public void releaseSavepoint(Object savepoint) throws TransactionException {_		ConnectionHolder conHolder = getConnectionHolderForSavepoint()__		try {_			conHolder.getConnection().releaseSavepoint((Savepoint) savepoint)__		}_		catch (Throwable ex) {_			logger.debug("Could not explicitly release JDBC savepoint", ex)__		}_	};this,implementation,releases,the,given,jdbc,3,0,savepoint,see,java,sql,connection,release,savepoint;override,public,void,release,savepoint,object,savepoint,throws,transaction,exception,connection,holder,con,holder,get,connection,holder,for,savepoint,try,con,holder,get,connection,release,savepoint,savepoint,savepoint,catch,throwable,ex,logger,debug,could,not,explicitly,release,jdbc,savepoint,ex
JdbcTransactionObjectSupport -> @Override 	public void releaseSavepoint(Object savepoint) throws TransactionException;1411399750;This implementation releases the given JDBC 3.0 Savepoint._@see java.sql.Connection#releaseSavepoint;@Override_	public void releaseSavepoint(Object savepoint) throws TransactionException {_		ConnectionHolder conHolder = getConnectionHolderForSavepoint()__		try {_			conHolder.getConnection().releaseSavepoint((Savepoint) savepoint)__		}_		catch (Throwable ex) {_			logger.debug("Could not explicitly release JDBC savepoint", ex)__		}_	};this,implementation,releases,the,given,jdbc,3,0,savepoint,see,java,sql,connection,release,savepoint;override,public,void,release,savepoint,object,savepoint,throws,transaction,exception,connection,holder,con,holder,get,connection,holder,for,savepoint,try,con,holder,get,connection,release,savepoint,savepoint,savepoint,catch,throwable,ex,logger,debug,could,not,explicitly,release,jdbc,savepoint,ex
JdbcTransactionObjectSupport -> @Override 	public void releaseSavepoint(Object savepoint) throws TransactionException;1487371244;This implementation releases the given JDBC 3.0 Savepoint._@see java.sql.Connection#releaseSavepoint;@Override_	public void releaseSavepoint(Object savepoint) throws TransactionException {_		ConnectionHolder conHolder = getConnectionHolderForSavepoint()__		try {_			conHolder.getConnection().releaseSavepoint((Savepoint) savepoint)__		}_		catch (Throwable ex) {_			logger.debug("Could not explicitly release JDBC savepoint", ex)__		}_	};this,implementation,releases,the,given,jdbc,3,0,savepoint,see,java,sql,connection,release,savepoint;override,public,void,release,savepoint,object,savepoint,throws,transaction,exception,connection,holder,con,holder,get,connection,holder,for,savepoint,try,con,holder,get,connection,release,savepoint,savepoint,savepoint,catch,throwable,ex,logger,debug,could,not,explicitly,release,jdbc,savepoint,ex
JdbcTransactionObjectSupport -> @Override 	public void releaseSavepoint(Object savepoint) throws TransactionException;1496259743;This implementation releases the given JDBC 3.0 Savepoint._@see java.sql.Connection#releaseSavepoint;@Override_	public void releaseSavepoint(Object savepoint) throws TransactionException {_		ConnectionHolder conHolder = getConnectionHolderForSavepoint()__		try {_			conHolder.getConnection().releaseSavepoint((Savepoint) savepoint)__		}_		catch (Throwable ex) {_			logger.debug("Could not explicitly release JDBC savepoint", ex)__		}_	};this,implementation,releases,the,given,jdbc,3,0,savepoint,see,java,sql,connection,release,savepoint;override,public,void,release,savepoint,object,savepoint,throws,transaction,exception,connection,holder,con,holder,get,connection,holder,for,savepoint,try,con,holder,get,connection,release,savepoint,savepoint,savepoint,catch,throwable,ex,logger,debug,could,not,explicitly,release,jdbc,savepoint,ex
JdbcTransactionObjectSupport -> @Override 	public void releaseSavepoint(Object savepoint) throws TransactionException;1496837955;This implementation releases the given JDBC 3.0 Savepoint._@see java.sql.Connection#releaseSavepoint;@Override_	public void releaseSavepoint(Object savepoint) throws TransactionException {_		ConnectionHolder conHolder = getConnectionHolderForSavepoint()__		try {_			conHolder.getConnection().releaseSavepoint((Savepoint) savepoint)__		}_		catch (Throwable ex) {_			logger.debug("Could not explicitly release JDBC savepoint", ex)__		}_	};this,implementation,releases,the,given,jdbc,3,0,savepoint,see,java,sql,connection,release,savepoint;override,public,void,release,savepoint,object,savepoint,throws,transaction,exception,connection,holder,con,holder,get,connection,holder,for,savepoint,try,con,holder,get,connection,release,savepoint,savepoint,savepoint,catch,throwable,ex,logger,debug,could,not,explicitly,release,jdbc,savepoint,ex
JdbcTransactionObjectSupport -> @Override 	public void releaseSavepoint(Object savepoint) throws TransactionException;1498780456;This implementation releases the given JDBC 3.0 Savepoint._@see java.sql.Connection#releaseSavepoint;@Override_	public void releaseSavepoint(Object savepoint) throws TransactionException {_		ConnectionHolder conHolder = getConnectionHolderForSavepoint()__		try {_			conHolder.getConnection().releaseSavepoint((Savepoint) savepoint)__		}_		catch (Throwable ex) {_			logger.debug("Could not explicitly release JDBC savepoint", ex)__		}_	};this,implementation,releases,the,given,jdbc,3,0,savepoint,see,java,sql,connection,release,savepoint;override,public,void,release,savepoint,object,savepoint,throws,transaction,exception,connection,holder,con,holder,get,connection,holder,for,savepoint,try,con,holder,get,connection,release,savepoint,savepoint,savepoint,catch,throwable,ex,logger,debug,could,not,explicitly,release,jdbc,savepoint,ex
JdbcTransactionObjectSupport -> @Override 	public void rollbackToSavepoint(Object savepoint) throws TransactionException;1356735495;This implementation rolls back to the given JDBC 3.0 Savepoint._@see java.sql.Connection#rollback(java.sql.Savepoint);@Override_	public void rollbackToSavepoint(Object savepoint) throws TransactionException {_		try {_			getConnectionHolderForSavepoint().getConnection().rollback((Savepoint) savepoint)__		}_		catch (Throwable ex) {_			throw new TransactionSystemException("Could not roll back to JDBC savepoint", ex)__		}_	};this,implementation,rolls,back,to,the,given,jdbc,3,0,savepoint,see,java,sql,connection,rollback,java,sql,savepoint;override,public,void,rollback,to,savepoint,object,savepoint,throws,transaction,exception,try,get,connection,holder,for,savepoint,get,connection,rollback,savepoint,savepoint,catch,throwable,ex,throw,new,transaction,system,exception,could,not,roll,back,to,jdbc,savepoint,ex
JdbcTransactionObjectSupport -> @Override 	public void rollbackToSavepoint(Object savepoint) throws TransactionException;1368482696;This implementation rolls back to the given JDBC 3.0 Savepoint._@see java.sql.Connection#rollback(java.sql.Savepoint);@Override_	public void rollbackToSavepoint(Object savepoint) throws TransactionException {_		try {_			getConnectionHolderForSavepoint().getConnection().rollback((Savepoint) savepoint)__		}_		catch (Throwable ex) {_			throw new TransactionSystemException("Could not roll back to JDBC savepoint", ex)__		}_	};this,implementation,rolls,back,to,the,given,jdbc,3,0,savepoint,see,java,sql,connection,rollback,java,sql,savepoint;override,public,void,rollback,to,savepoint,object,savepoint,throws,transaction,exception,try,get,connection,holder,for,savepoint,get,connection,rollback,savepoint,savepoint,catch,throwable,ex,throw,new,transaction,system,exception,could,not,roll,back,to,jdbc,savepoint,ex
JdbcTransactionObjectSupport -> @Override 	public void rollbackToSavepoint(Object savepoint) throws TransactionException;1397137904;This implementation rolls back to the given JDBC 3.0 Savepoint._@see java.sql.Connection#rollback(java.sql.Savepoint);@Override_	public void rollbackToSavepoint(Object savepoint) throws TransactionException {_		try {_			getConnectionHolderForSavepoint().getConnection().rollback((Savepoint) savepoint)__		}_		catch (Throwable ex) {_			throw new TransactionSystemException("Could not roll back to JDBC savepoint", ex)__		}_	};this,implementation,rolls,back,to,the,given,jdbc,3,0,savepoint,see,java,sql,connection,rollback,java,sql,savepoint;override,public,void,rollback,to,savepoint,object,savepoint,throws,transaction,exception,try,get,connection,holder,for,savepoint,get,connection,rollback,savepoint,savepoint,catch,throwable,ex,throw,new,transaction,system,exception,could,not,roll,back,to,jdbc,savepoint,ex
JdbcTransactionObjectSupport -> @Override 	public void rollbackToSavepoint(Object savepoint) throws TransactionException;1411390744;This implementation rolls back to the given JDBC 3.0 Savepoint._@see java.sql.Connection#rollback(java.sql.Savepoint);@Override_	public void rollbackToSavepoint(Object savepoint) throws TransactionException {_		ConnectionHolder conHolder = getConnectionHolderForSavepoint()__		try {_			conHolder.getConnection().rollback((Savepoint) savepoint)__		}_		catch (Throwable ex) {_			throw new TransactionSystemException("Could not roll back to JDBC savepoint", ex)__		}_		try {_			conHolder.getConnection().releaseSavepoint((Savepoint) savepoint)__		}_		catch (Throwable ex) {_			logger.debug("Could not explicitly release JDBC savepoint after rollback", ex)__		}_	};this,implementation,rolls,back,to,the,given,jdbc,3,0,savepoint,see,java,sql,connection,rollback,java,sql,savepoint;override,public,void,rollback,to,savepoint,object,savepoint,throws,transaction,exception,connection,holder,con,holder,get,connection,holder,for,savepoint,try,con,holder,get,connection,rollback,savepoint,savepoint,catch,throwable,ex,throw,new,transaction,system,exception,could,not,roll,back,to,jdbc,savepoint,ex,try,con,holder,get,connection,release,savepoint,savepoint,savepoint,catch,throwable,ex,logger,debug,could,not,explicitly,release,jdbc,savepoint,after,rollback,ex
JdbcTransactionObjectSupport -> @Override 	public void rollbackToSavepoint(Object savepoint) throws TransactionException;1411399750;This implementation rolls back to the given JDBC 3.0 Savepoint._@see java.sql.Connection#rollback(java.sql.Savepoint);@Override_	public void rollbackToSavepoint(Object savepoint) throws TransactionException {_		ConnectionHolder conHolder = getConnectionHolderForSavepoint()__		try {_			conHolder.getConnection().rollback((Savepoint) savepoint)__		}_		catch (Throwable ex) {_			throw new TransactionSystemException("Could not roll back to JDBC savepoint", ex)__		}_	};this,implementation,rolls,back,to,the,given,jdbc,3,0,savepoint,see,java,sql,connection,rollback,java,sql,savepoint;override,public,void,rollback,to,savepoint,object,savepoint,throws,transaction,exception,connection,holder,con,holder,get,connection,holder,for,savepoint,try,con,holder,get,connection,rollback,savepoint,savepoint,catch,throwable,ex,throw,new,transaction,system,exception,could,not,roll,back,to,jdbc,savepoint,ex
JdbcTransactionObjectSupport -> @Override 	public void rollbackToSavepoint(Object savepoint) throws TransactionException;1487371244;This implementation rolls back to the given JDBC 3.0 Savepoint._@see java.sql.Connection#rollback(java.sql.Savepoint);@Override_	public void rollbackToSavepoint(Object savepoint) throws TransactionException {_		ConnectionHolder conHolder = getConnectionHolderForSavepoint()__		try {_			conHolder.getConnection().rollback((Savepoint) savepoint)__			conHolder.resetRollbackOnly()__		}_		catch (Throwable ex) {_			throw new TransactionSystemException("Could not roll back to JDBC savepoint", ex)__		}_	};this,implementation,rolls,back,to,the,given,jdbc,3,0,savepoint,see,java,sql,connection,rollback,java,sql,savepoint;override,public,void,rollback,to,savepoint,object,savepoint,throws,transaction,exception,connection,holder,con,holder,get,connection,holder,for,savepoint,try,con,holder,get,connection,rollback,savepoint,savepoint,con,holder,reset,rollback,only,catch,throwable,ex,throw,new,transaction,system,exception,could,not,roll,back,to,jdbc,savepoint,ex
JdbcTransactionObjectSupport -> @Override 	public void rollbackToSavepoint(Object savepoint) throws TransactionException;1496259743;This implementation rolls back to the given JDBC 3.0 Savepoint._@see java.sql.Connection#rollback(java.sql.Savepoint);@Override_	public void rollbackToSavepoint(Object savepoint) throws TransactionException {_		ConnectionHolder conHolder = getConnectionHolderForSavepoint()__		try {_			conHolder.getConnection().rollback((Savepoint) savepoint)__			conHolder.resetRollbackOnly()__		}_		catch (Throwable ex) {_			throw new TransactionSystemException("Could not roll back to JDBC savepoint", ex)__		}_	};this,implementation,rolls,back,to,the,given,jdbc,3,0,savepoint,see,java,sql,connection,rollback,java,sql,savepoint;override,public,void,rollback,to,savepoint,object,savepoint,throws,transaction,exception,connection,holder,con,holder,get,connection,holder,for,savepoint,try,con,holder,get,connection,rollback,savepoint,savepoint,con,holder,reset,rollback,only,catch,throwable,ex,throw,new,transaction,system,exception,could,not,roll,back,to,jdbc,savepoint,ex
JdbcTransactionObjectSupport -> @Override 	public void rollbackToSavepoint(Object savepoint) throws TransactionException;1496837955;This implementation rolls back to the given JDBC 3.0 Savepoint._@see java.sql.Connection#rollback(java.sql.Savepoint);@Override_	public void rollbackToSavepoint(Object savepoint) throws TransactionException {_		ConnectionHolder conHolder = getConnectionHolderForSavepoint()__		try {_			conHolder.getConnection().rollback((Savepoint) savepoint)__			conHolder.resetRollbackOnly()__		}_		catch (Throwable ex) {_			throw new TransactionSystemException("Could not roll back to JDBC savepoint", ex)__		}_	};this,implementation,rolls,back,to,the,given,jdbc,3,0,savepoint,see,java,sql,connection,rollback,java,sql,savepoint;override,public,void,rollback,to,savepoint,object,savepoint,throws,transaction,exception,connection,holder,con,holder,get,connection,holder,for,savepoint,try,con,holder,get,connection,rollback,savepoint,savepoint,con,holder,reset,rollback,only,catch,throwable,ex,throw,new,transaction,system,exception,could,not,roll,back,to,jdbc,savepoint,ex
JdbcTransactionObjectSupport -> @Override 	public void rollbackToSavepoint(Object savepoint) throws TransactionException;1498780456;This implementation rolls back to the given JDBC 3.0 Savepoint._@see java.sql.Connection#rollback(java.sql.Savepoint);@Override_	public void rollbackToSavepoint(Object savepoint) throws TransactionException {_		ConnectionHolder conHolder = getConnectionHolderForSavepoint()__		try {_			conHolder.getConnection().rollback((Savepoint) savepoint)__			conHolder.resetRollbackOnly()__		}_		catch (Throwable ex) {_			throw new TransactionSystemException("Could not roll back to JDBC savepoint", ex)__		}_	};this,implementation,rolls,back,to,the,given,jdbc,3,0,savepoint,see,java,sql,connection,rollback,java,sql,savepoint;override,public,void,rollback,to,savepoint,object,savepoint,throws,transaction,exception,connection,holder,con,holder,get,connection,holder,for,savepoint,try,con,holder,get,connection,rollback,savepoint,savepoint,con,holder,reset,rollback,only,catch,throwable,ex,throw,new,transaction,system,exception,could,not,roll,back,to,jdbc,savepoint,ex
JdbcTransactionObjectSupport -> public Object createSavepoint() throws TransactionException;1328020251;This implementation creates a JDBC 3.0 Savepoint and returns it._@see java.sql.Connection#setSavepoint;public Object createSavepoint() throws TransactionException {_		ConnectionHolder conHolder = getConnectionHolderForSavepoint()__		try {_			if (!conHolder.supportsSavepoints()) {_				throw new NestedTransactionNotSupportedException(_						"Cannot create a nested transaction because savepoints are not supported by your JDBC driver")__			}_		}_		catch (Throwable ex) {_			throw new NestedTransactionNotSupportedException(_					"Cannot create a nested transaction because your JDBC driver is not a JDBC 3.0 driver", ex)__		}_		try {_			return conHolder.createSavepoint()__		}_		catch (Throwable ex) {_			throw new CannotCreateTransactionException("Could not create JDBC savepoint", ex)__		}_	};this,implementation,creates,a,jdbc,3,0,savepoint,and,returns,it,see,java,sql,connection,set,savepoint;public,object,create,savepoint,throws,transaction,exception,connection,holder,con,holder,get,connection,holder,for,savepoint,try,if,con,holder,supports,savepoints,throw,new,nested,transaction,not,supported,exception,cannot,create,a,nested,transaction,because,savepoints,are,not,supported,by,your,jdbc,driver,catch,throwable,ex,throw,new,nested,transaction,not,supported,exception,cannot,create,a,nested,transaction,because,your,jdbc,driver,is,not,a,jdbc,3,0,driver,ex,try,return,con,holder,create,savepoint,catch,throwable,ex,throw,new,cannot,create,transaction,exception,could,not,create,jdbc,savepoint,ex
JdbcTransactionObjectSupport -> public Object createSavepoint() throws TransactionException;1357119239;This implementation creates a JDBC 3.0 Savepoint and returns it._@see java.sql.Connection#setSavepoint;public Object createSavepoint() throws TransactionException {_		ConnectionHolder conHolder = getConnectionHolderForSavepoint()__		try {_			if (!conHolder.supportsSavepoints()) {_				throw new NestedTransactionNotSupportedException(_						"Cannot create a nested transaction because savepoints are not supported by your JDBC driver")__			}_		}_		catch (Throwable ex) {_			throw new NestedTransactionNotSupportedException(_					"Cannot create a nested transaction because your JDBC driver is not a JDBC 3.0 driver", ex)__		}_		try {_			return conHolder.createSavepoint()__		}_		catch (Throwable ex) {_			throw new CannotCreateTransactionException("Could not create JDBC savepoint", ex)__		}_	};this,implementation,creates,a,jdbc,3,0,savepoint,and,returns,it,see,java,sql,connection,set,savepoint;public,object,create,savepoint,throws,transaction,exception,connection,holder,con,holder,get,connection,holder,for,savepoint,try,if,con,holder,supports,savepoints,throw,new,nested,transaction,not,supported,exception,cannot,create,a,nested,transaction,because,savepoints,are,not,supported,by,your,jdbc,driver,catch,throwable,ex,throw,new,nested,transaction,not,supported,exception,cannot,create,a,nested,transaction,because,your,jdbc,driver,is,not,a,jdbc,3,0,driver,ex,try,return,con,holder,create,savepoint,catch,throwable,ex,throw,new,cannot,create,transaction,exception,could,not,create,jdbc,savepoint,ex
JdbcTransactionObjectSupport -> public void releaseSavepoint(Object savepoint) throws TransactionException;1328020251;This implementation releases the given JDBC 3.0 Savepoint._@see java.sql.Connection#releaseSavepoint;public void releaseSavepoint(Object savepoint) throws TransactionException {_		try {_			getConnectionHolderForSavepoint().getConnection().releaseSavepoint((Savepoint) savepoint)__		}_		catch (Throwable ex) {_			logger.debug("Could not explicitly release JDBC savepoint", ex)__		}_	};this,implementation,releases,the,given,jdbc,3,0,savepoint,see,java,sql,connection,release,savepoint;public,void,release,savepoint,object,savepoint,throws,transaction,exception,try,get,connection,holder,for,savepoint,get,connection,release,savepoint,savepoint,savepoint,catch,throwable,ex,logger,debug,could,not,explicitly,release,jdbc,savepoint,ex
JdbcTransactionObjectSupport -> public void releaseSavepoint(Object savepoint) throws TransactionException;1357119239;This implementation releases the given JDBC 3.0 Savepoint._@see java.sql.Connection#releaseSavepoint;public void releaseSavepoint(Object savepoint) throws TransactionException {_		try {_			getConnectionHolderForSavepoint().getConnection().releaseSavepoint((Savepoint) savepoint)__		}_		catch (Throwable ex) {_			logger.debug("Could not explicitly release JDBC savepoint", ex)__		}_	};this,implementation,releases,the,given,jdbc,3,0,savepoint,see,java,sql,connection,release,savepoint;public,void,release,savepoint,object,savepoint,throws,transaction,exception,try,get,connection,holder,for,savepoint,get,connection,release,savepoint,savepoint,savepoint,catch,throwable,ex,logger,debug,could,not,explicitly,release,jdbc,savepoint,ex
JdbcTransactionObjectSupport -> @Override 	public Object createSavepoint() throws TransactionException;1356735495;This implementation creates a JDBC 3.0 Savepoint and returns it._@see java.sql.Connection#setSavepoint;@Override_	public Object createSavepoint() throws TransactionException {_		ConnectionHolder conHolder = getConnectionHolderForSavepoint()__		try {_			if (!conHolder.supportsSavepoints()) {_				throw new NestedTransactionNotSupportedException(_						"Cannot create a nested transaction because savepoints are not supported by your JDBC driver")__			}_		}_		catch (Throwable ex) {_			throw new NestedTransactionNotSupportedException(_					"Cannot create a nested transaction because your JDBC driver is not a JDBC 3.0 driver", ex)__		}_		try {_			return conHolder.createSavepoint()__		}_		catch (Throwable ex) {_			throw new CannotCreateTransactionException("Could not create JDBC savepoint", ex)__		}_	};this,implementation,creates,a,jdbc,3,0,savepoint,and,returns,it,see,java,sql,connection,set,savepoint;override,public,object,create,savepoint,throws,transaction,exception,connection,holder,con,holder,get,connection,holder,for,savepoint,try,if,con,holder,supports,savepoints,throw,new,nested,transaction,not,supported,exception,cannot,create,a,nested,transaction,because,savepoints,are,not,supported,by,your,jdbc,driver,catch,throwable,ex,throw,new,nested,transaction,not,supported,exception,cannot,create,a,nested,transaction,because,your,jdbc,driver,is,not,a,jdbc,3,0,driver,ex,try,return,con,holder,create,savepoint,catch,throwable,ex,throw,new,cannot,create,transaction,exception,could,not,create,jdbc,savepoint,ex
JdbcTransactionObjectSupport -> @Override 	public Object createSavepoint() throws TransactionException;1368482696;This implementation creates a JDBC 3.0 Savepoint and returns it._@see java.sql.Connection#setSavepoint;@Override_	public Object createSavepoint() throws TransactionException {_		ConnectionHolder conHolder = getConnectionHolderForSavepoint()__		try {_			if (!conHolder.supportsSavepoints()) {_				throw new NestedTransactionNotSupportedException(_						"Cannot create a nested transaction because savepoints are not supported by your JDBC driver")__			}_		}_		catch (Throwable ex) {_			throw new NestedTransactionNotSupportedException(_					"Cannot create a nested transaction because your JDBC driver is not a JDBC 3.0 driver", ex)__		}_		try {_			return conHolder.createSavepoint()__		}_		catch (Throwable ex) {_			throw new CannotCreateTransactionException("Could not create JDBC savepoint", ex)__		}_	};this,implementation,creates,a,jdbc,3,0,savepoint,and,returns,it,see,java,sql,connection,set,savepoint;override,public,object,create,savepoint,throws,transaction,exception,connection,holder,con,holder,get,connection,holder,for,savepoint,try,if,con,holder,supports,savepoints,throw,new,nested,transaction,not,supported,exception,cannot,create,a,nested,transaction,because,savepoints,are,not,supported,by,your,jdbc,driver,catch,throwable,ex,throw,new,nested,transaction,not,supported,exception,cannot,create,a,nested,transaction,because,your,jdbc,driver,is,not,a,jdbc,3,0,driver,ex,try,return,con,holder,create,savepoint,catch,throwable,ex,throw,new,cannot,create,transaction,exception,could,not,create,jdbc,savepoint,ex
JdbcTransactionObjectSupport -> @Override 	public Object createSavepoint() throws TransactionException;1397137904;This implementation creates a JDBC 3.0 Savepoint and returns it._@see java.sql.Connection#setSavepoint;@Override_	public Object createSavepoint() throws TransactionException {_		ConnectionHolder conHolder = getConnectionHolderForSavepoint()__		try {_			if (!conHolder.supportsSavepoints()) {_				throw new NestedTransactionNotSupportedException(_						"Cannot create a nested transaction because savepoints are not supported by your JDBC driver")__			}_			return conHolder.createSavepoint()__		}_		catch (SQLException ex) {_			throw new CannotCreateTransactionException("Could not create JDBC savepoint", ex)__		}_	};this,implementation,creates,a,jdbc,3,0,savepoint,and,returns,it,see,java,sql,connection,set,savepoint;override,public,object,create,savepoint,throws,transaction,exception,connection,holder,con,holder,get,connection,holder,for,savepoint,try,if,con,holder,supports,savepoints,throw,new,nested,transaction,not,supported,exception,cannot,create,a,nested,transaction,because,savepoints,are,not,supported,by,your,jdbc,driver,return,con,holder,create,savepoint,catch,sqlexception,ex,throw,new,cannot,create,transaction,exception,could,not,create,jdbc,savepoint,ex
JdbcTransactionObjectSupport -> @Override 	public Object createSavepoint() throws TransactionException;1411390744;This implementation creates a JDBC 3.0 Savepoint and returns it._@see java.sql.Connection#setSavepoint;@Override_	public Object createSavepoint() throws TransactionException {_		ConnectionHolder conHolder = getConnectionHolderForSavepoint()__		try {_			if (!conHolder.supportsSavepoints()) {_				throw new NestedTransactionNotSupportedException(_						"Cannot create a nested transaction because savepoints are not supported by your JDBC driver")__			}_			return conHolder.createSavepoint()__		}_		catch (SQLException ex) {_			throw new CannotCreateTransactionException("Could not create JDBC savepoint", ex)__		}_	};this,implementation,creates,a,jdbc,3,0,savepoint,and,returns,it,see,java,sql,connection,set,savepoint;override,public,object,create,savepoint,throws,transaction,exception,connection,holder,con,holder,get,connection,holder,for,savepoint,try,if,con,holder,supports,savepoints,throw,new,nested,transaction,not,supported,exception,cannot,create,a,nested,transaction,because,savepoints,are,not,supported,by,your,jdbc,driver,return,con,holder,create,savepoint,catch,sqlexception,ex,throw,new,cannot,create,transaction,exception,could,not,create,jdbc,savepoint,ex
JdbcTransactionObjectSupport -> @Override 	public Object createSavepoint() throws TransactionException;1411399750;This implementation creates a JDBC 3.0 Savepoint and returns it._@see java.sql.Connection#setSavepoint;@Override_	public Object createSavepoint() throws TransactionException {_		ConnectionHolder conHolder = getConnectionHolderForSavepoint()__		try {_			if (!conHolder.supportsSavepoints()) {_				throw new NestedTransactionNotSupportedException(_						"Cannot create a nested transaction because savepoints are not supported by your JDBC driver")__			}_			return conHolder.createSavepoint()__		}_		catch (SQLException ex) {_			throw new CannotCreateTransactionException("Could not create JDBC savepoint", ex)__		}_	};this,implementation,creates,a,jdbc,3,0,savepoint,and,returns,it,see,java,sql,connection,set,savepoint;override,public,object,create,savepoint,throws,transaction,exception,connection,holder,con,holder,get,connection,holder,for,savepoint,try,if,con,holder,supports,savepoints,throw,new,nested,transaction,not,supported,exception,cannot,create,a,nested,transaction,because,savepoints,are,not,supported,by,your,jdbc,driver,return,con,holder,create,savepoint,catch,sqlexception,ex,throw,new,cannot,create,transaction,exception,could,not,create,jdbc,savepoint,ex
JdbcTransactionObjectSupport -> @Override 	public Object createSavepoint() throws TransactionException;1487371244;This implementation creates a JDBC 3.0 Savepoint and returns it._@see java.sql.Connection#setSavepoint;@Override_	public Object createSavepoint() throws TransactionException {_		ConnectionHolder conHolder = getConnectionHolderForSavepoint()__		try {_			if (!conHolder.supportsSavepoints()) {_				throw new NestedTransactionNotSupportedException(_						"Cannot create a nested transaction because savepoints are not supported by your JDBC driver")__			}_			if (conHolder.isRollbackOnly()) {_				throw new CannotCreateTransactionException(_						"Cannot create savepoint for transaction which is already marked as rollback-only")__			}_			return conHolder.createSavepoint()__		}_		catch (SQLException ex) {_			throw new CannotCreateTransactionException("Could not create JDBC savepoint", ex)__		}_	};this,implementation,creates,a,jdbc,3,0,savepoint,and,returns,it,see,java,sql,connection,set,savepoint;override,public,object,create,savepoint,throws,transaction,exception,connection,holder,con,holder,get,connection,holder,for,savepoint,try,if,con,holder,supports,savepoints,throw,new,nested,transaction,not,supported,exception,cannot,create,a,nested,transaction,because,savepoints,are,not,supported,by,your,jdbc,driver,if,con,holder,is,rollback,only,throw,new,cannot,create,transaction,exception,cannot,create,savepoint,for,transaction,which,is,already,marked,as,rollback,only,return,con,holder,create,savepoint,catch,sqlexception,ex,throw,new,cannot,create,transaction,exception,could,not,create,jdbc,savepoint,ex
JdbcTransactionObjectSupport -> @Override 	public Object createSavepoint() throws TransactionException;1496259743;This implementation creates a JDBC 3.0 Savepoint and returns it._@see java.sql.Connection#setSavepoint;@Override_	public Object createSavepoint() throws TransactionException {_		ConnectionHolder conHolder = getConnectionHolderForSavepoint()__		try {_			if (!conHolder.supportsSavepoints()) {_				throw new NestedTransactionNotSupportedException(_						"Cannot create a nested transaction because savepoints are not supported by your JDBC driver")__			}_			if (conHolder.isRollbackOnly()) {_				throw new CannotCreateTransactionException(_						"Cannot create savepoint for transaction which is already marked as rollback-only")__			}_			return conHolder.createSavepoint()__		}_		catch (SQLException ex) {_			throw new CannotCreateTransactionException("Could not create JDBC savepoint", ex)__		}_	};this,implementation,creates,a,jdbc,3,0,savepoint,and,returns,it,see,java,sql,connection,set,savepoint;override,public,object,create,savepoint,throws,transaction,exception,connection,holder,con,holder,get,connection,holder,for,savepoint,try,if,con,holder,supports,savepoints,throw,new,nested,transaction,not,supported,exception,cannot,create,a,nested,transaction,because,savepoints,are,not,supported,by,your,jdbc,driver,if,con,holder,is,rollback,only,throw,new,cannot,create,transaction,exception,cannot,create,savepoint,for,transaction,which,is,already,marked,as,rollback,only,return,con,holder,create,savepoint,catch,sqlexception,ex,throw,new,cannot,create,transaction,exception,could,not,create,jdbc,savepoint,ex
JdbcTransactionObjectSupport -> @Override 	public Object createSavepoint() throws TransactionException;1496837955;This implementation creates a JDBC 3.0 Savepoint and returns it._@see java.sql.Connection#setSavepoint;@Override_	public Object createSavepoint() throws TransactionException {_		ConnectionHolder conHolder = getConnectionHolderForSavepoint()__		try {_			if (!conHolder.supportsSavepoints()) {_				throw new NestedTransactionNotSupportedException(_						"Cannot create a nested transaction because savepoints are not supported by your JDBC driver")__			}_			if (conHolder.isRollbackOnly()) {_				throw new CannotCreateTransactionException(_						"Cannot create savepoint for transaction which is already marked as rollback-only")__			}_			return conHolder.createSavepoint()__		}_		catch (SQLException ex) {_			throw new CannotCreateTransactionException("Could not create JDBC savepoint", ex)__		}_	};this,implementation,creates,a,jdbc,3,0,savepoint,and,returns,it,see,java,sql,connection,set,savepoint;override,public,object,create,savepoint,throws,transaction,exception,connection,holder,con,holder,get,connection,holder,for,savepoint,try,if,con,holder,supports,savepoints,throw,new,nested,transaction,not,supported,exception,cannot,create,a,nested,transaction,because,savepoints,are,not,supported,by,your,jdbc,driver,if,con,holder,is,rollback,only,throw,new,cannot,create,transaction,exception,cannot,create,savepoint,for,transaction,which,is,already,marked,as,rollback,only,return,con,holder,create,savepoint,catch,sqlexception,ex,throw,new,cannot,create,transaction,exception,could,not,create,jdbc,savepoint,ex
JdbcTransactionObjectSupport -> @Override 	public Object createSavepoint() throws TransactionException;1498780456;This implementation creates a JDBC 3.0 Savepoint and returns it._@see java.sql.Connection#setSavepoint;@Override_	public Object createSavepoint() throws TransactionException {_		ConnectionHolder conHolder = getConnectionHolderForSavepoint()__		try {_			if (!conHolder.supportsSavepoints()) {_				throw new NestedTransactionNotSupportedException(_						"Cannot create a nested transaction because savepoints are not supported by your JDBC driver")__			}_			if (conHolder.isRollbackOnly()) {_				throw new CannotCreateTransactionException(_						"Cannot create savepoint for transaction which is already marked as rollback-only")__			}_			return conHolder.createSavepoint()__		}_		catch (SQLException ex) {_			throw new CannotCreateTransactionException("Could not create JDBC savepoint", ex)__		}_	};this,implementation,creates,a,jdbc,3,0,savepoint,and,returns,it,see,java,sql,connection,set,savepoint;override,public,object,create,savepoint,throws,transaction,exception,connection,holder,con,holder,get,connection,holder,for,savepoint,try,if,con,holder,supports,savepoints,throw,new,nested,transaction,not,supported,exception,cannot,create,a,nested,transaction,because,savepoints,are,not,supported,by,your,jdbc,driver,if,con,holder,is,rollback,only,throw,new,cannot,create,transaction,exception,cannot,create,savepoint,for,transaction,which,is,already,marked,as,rollback,only,return,con,holder,create,savepoint,catch,sqlexception,ex,throw,new,cannot,create,transaction,exception,could,not,create,jdbc,savepoint,ex
JdbcTransactionObjectSupport -> public void rollbackToSavepoint(Object savepoint) throws TransactionException;1328020251;This implementation rolls back to the given JDBC 3.0 Savepoint._@see java.sql.Connection#rollback(java.sql.Savepoint);public void rollbackToSavepoint(Object savepoint) throws TransactionException {_		try {_			getConnectionHolderForSavepoint().getConnection().rollback((Savepoint) savepoint)__		}_		catch (Throwable ex) {_			throw new TransactionSystemException("Could not roll back to JDBC savepoint", ex)__		}_	};this,implementation,rolls,back,to,the,given,jdbc,3,0,savepoint,see,java,sql,connection,rollback,java,sql,savepoint;public,void,rollback,to,savepoint,object,savepoint,throws,transaction,exception,try,get,connection,holder,for,savepoint,get,connection,rollback,savepoint,savepoint,catch,throwable,ex,throw,new,transaction,system,exception,could,not,roll,back,to,jdbc,savepoint,ex
JdbcTransactionObjectSupport -> public void rollbackToSavepoint(Object savepoint) throws TransactionException;1357119239;This implementation rolls back to the given JDBC 3.0 Savepoint._@see java.sql.Connection#rollback(java.sql.Savepoint);public void rollbackToSavepoint(Object savepoint) throws TransactionException {_		try {_			getConnectionHolderForSavepoint().getConnection().rollback((Savepoint) savepoint)__		}_		catch (Throwable ex) {_			throw new TransactionSystemException("Could not roll back to JDBC savepoint", ex)__		}_	};this,implementation,rolls,back,to,the,given,jdbc,3,0,savepoint,see,java,sql,connection,rollback,java,sql,savepoint;public,void,rollback,to,savepoint,object,savepoint,throws,transaction,exception,try,get,connection,holder,for,savepoint,get,connection,rollback,savepoint,savepoint,catch,throwable,ex,throw,new,transaction,system,exception,could,not,roll,back,to,jdbc,savepoint,ex
