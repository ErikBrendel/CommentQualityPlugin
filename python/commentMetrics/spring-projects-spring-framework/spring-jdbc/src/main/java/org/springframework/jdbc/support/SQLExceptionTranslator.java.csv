# id;timestamp;commentText;codeText;commentWords;codeWords
SQLExceptionTranslator -> @Nullable 	DataAccessException translate(String task, @Nullable String sql, SQLException ex)_;1495868221;Translate the given {@link SQLException} into a generic {@link DataAccessException}._<p>The returned DataAccessException is supposed to contain the original_{@code SQLException} as root cause. However, client code may not generally_rely on this due to DataAccessExceptions possibly being caused by other resource_APIs as well. That said, a {@code getRootCause() instanceof SQLException}_check (and subsequent cast) is considered reliable when expecting JDBC-based_access to have happened._@param task readable text describing the task being attempted_@param sql SQL query or update that caused the problem (may be {@code null})_@param ex the offending {@code SQLException}_@return the DataAccessException, wrapping the {@code SQLException}_@see org.springframework.dao.DataAccessException#getRootCause();@Nullable_	DataAccessException translate(String task, @Nullable String sql, SQLException ex)_;translate,the,given,link,sqlexception,into,a,generic,link,data,access,exception,p,the,returned,data,access,exception,is,supposed,to,contain,the,original,code,sqlexception,as,root,cause,however,client,code,may,not,generally,rely,on,this,due,to,data,access,exceptions,possibly,being,caused,by,other,resource,apis,as,well,that,said,a,code,get,root,cause,instanceof,sqlexception,check,and,subsequent,cast,is,considered,reliable,when,expecting,jdbc,based,access,to,have,happened,param,task,readable,text,describing,the,task,being,attempted,param,sql,sql,query,or,update,that,caused,the,problem,may,be,code,null,param,ex,the,offending,code,sqlexception,return,the,data,access,exception,wrapping,the,code,sqlexception,see,org,springframework,dao,data,access,exception,get,root,cause;nullable,data,access,exception,translate,string,task,nullable,string,sql,sqlexception,ex
SQLExceptionTranslator -> @Nullable 	DataAccessException translate(String task, @Nullable String sql, SQLException ex)_;1506097334;Translate the given {@link SQLException} into a generic {@link DataAccessException}._<p>The returned DataAccessException is supposed to contain the original_{@code SQLException} as root cause. However, client code may not generally_rely on this due to DataAccessExceptions possibly being caused by other resource_APIs as well. That said, a {@code getRootCause() instanceof SQLException}_check (and subsequent cast) is considered reliable when expecting JDBC-based_access to have happened._@param task readable text describing the task being attempted_@param sql SQL query or update that caused the problem (if known)_@param ex the offending {@code SQLException}_@return the DataAccessException wrapping the {@code SQLException},_or {@code null} if no translation could be applied_(in a custom translator_ the default translators always throw an_{@link org.springframework.jdbc.UncategorizedSQLException} in such a case)_@see org.springframework.dao.DataAccessException#getRootCause();@Nullable_	DataAccessException translate(String task, @Nullable String sql, SQLException ex)_;translate,the,given,link,sqlexception,into,a,generic,link,data,access,exception,p,the,returned,data,access,exception,is,supposed,to,contain,the,original,code,sqlexception,as,root,cause,however,client,code,may,not,generally,rely,on,this,due,to,data,access,exceptions,possibly,being,caused,by,other,resource,apis,as,well,that,said,a,code,get,root,cause,instanceof,sqlexception,check,and,subsequent,cast,is,considered,reliable,when,expecting,jdbc,based,access,to,have,happened,param,task,readable,text,describing,the,task,being,attempted,param,sql,sql,query,or,update,that,caused,the,problem,if,known,param,ex,the,offending,code,sqlexception,return,the,data,access,exception,wrapping,the,code,sqlexception,or,code,null,if,no,translation,could,be,applied,in,a,custom,translator,the,default,translators,always,throw,an,link,org,springframework,jdbc,uncategorized,sqlexception,in,such,a,case,see,org,springframework,dao,data,access,exception,get,root,cause;nullable,data,access,exception,translate,string,task,nullable,string,sql,sqlexception,ex
SQLExceptionTranslator -> @Nullable 	DataAccessException translate(String task, @Nullable String sql, SQLException ex)_;1530174524;Translate the given {@link SQLException} into a generic {@link DataAccessException}._<p>The returned DataAccessException is supposed to contain the original_{@code SQLException} as root cause. However, client code may not generally_rely on this due to DataAccessExceptions possibly being caused by other resource_APIs as well. That said, a {@code getRootCause() instanceof SQLException}_check (and subsequent cast) is considered reliable when expecting JDBC-based_access to have happened._@param task readable text describing the task being attempted_@param sql the SQL query or update that caused the problem (if known)_@param ex the offending {@code SQLException}_@return the DataAccessException wrapping the {@code SQLException},_or {@code null} if no translation could be applied_(in a custom translator_ the default translators always throw an_{@link org.springframework.jdbc.UncategorizedSQLException} in such a case)_@see org.springframework.dao.DataAccessException#getRootCause();@Nullable_	DataAccessException translate(String task, @Nullable String sql, SQLException ex)_;translate,the,given,link,sqlexception,into,a,generic,link,data,access,exception,p,the,returned,data,access,exception,is,supposed,to,contain,the,original,code,sqlexception,as,root,cause,however,client,code,may,not,generally,rely,on,this,due,to,data,access,exceptions,possibly,being,caused,by,other,resource,apis,as,well,that,said,a,code,get,root,cause,instanceof,sqlexception,check,and,subsequent,cast,is,considered,reliable,when,expecting,jdbc,based,access,to,have,happened,param,task,readable,text,describing,the,task,being,attempted,param,sql,the,sql,query,or,update,that,caused,the,problem,if,known,param,ex,the,offending,code,sqlexception,return,the,data,access,exception,wrapping,the,code,sqlexception,or,code,null,if,no,translation,could,be,applied,in,a,custom,translator,the,default,translators,always,throw,an,link,org,springframework,jdbc,uncategorized,sqlexception,in,such,a,case,see,org,springframework,dao,data,access,exception,get,root,cause;nullable,data,access,exception,translate,string,task,nullable,string,sql,sqlexception,ex
SQLExceptionTranslator -> DataAccessException translate(String task, String sql, SQLException ex)_;1328020251;Translate the given {@link SQLException} into a generic {@link DataAccessException}._<p>The returned DataAccessException is supposed to contain the original_<code>SQLException</code> as root cause. However, client code may not generally_rely on this due to DataAccessExceptions possibly being caused by other resource_APIs as well. That said, a <code>getRootCause() instanceof SQLException</code>_check (and subsequent cast) is considered reliable when expecting JDBC-based_access to have happened._@param task readable text describing the task being attempted_@param sql SQL query or update that caused the problem (may be <code>null</code>)_@param ex the offending <code>SQLException</code>_@return the DataAccessException, wrapping the <code>SQLException</code>_@see org.springframework.dao.DataAccessException#getRootCause();DataAccessException translate(String task, String sql, SQLException ex)_;translate,the,given,link,sqlexception,into,a,generic,link,data,access,exception,p,the,returned,data,access,exception,is,supposed,to,contain,the,original,code,sqlexception,code,as,root,cause,however,client,code,may,not,generally,rely,on,this,due,to,data,access,exceptions,possibly,being,caused,by,other,resource,apis,as,well,that,said,a,code,get,root,cause,instanceof,sqlexception,code,check,and,subsequent,cast,is,considered,reliable,when,expecting,jdbc,based,access,to,have,happened,param,task,readable,text,describing,the,task,being,attempted,param,sql,sql,query,or,update,that,caused,the,problem,may,be,code,null,code,param,ex,the,offending,code,sqlexception,code,return,the,data,access,exception,wrapping,the,code,sqlexception,code,see,org,springframework,dao,data,access,exception,get,root,cause;data,access,exception,translate,string,task,string,sql,sqlexception,ex
SQLExceptionTranslator -> DataAccessException translate(String task, String sql, SQLException ex)_;1356735495;Translate the given {@link SQLException} into a generic {@link DataAccessException}._<p>The returned DataAccessException is supposed to contain the original_{@code SQLException} as root cause. However, client code may not generally_rely on this due to DataAccessExceptions possibly being caused by other resource_APIs as well. That said, a {@code getRootCause() instanceof SQLException}_check (and subsequent cast) is considered reliable when expecting JDBC-based_access to have happened._@param task readable text describing the task being attempted_@param sql SQL query or update that caused the problem (may be {@code null})_@param ex the offending {@code SQLException}_@return the DataAccessException, wrapping the {@code SQLException}_@see org.springframework.dao.DataAccessException#getRootCause();DataAccessException translate(String task, String sql, SQLException ex)_;translate,the,given,link,sqlexception,into,a,generic,link,data,access,exception,p,the,returned,data,access,exception,is,supposed,to,contain,the,original,code,sqlexception,as,root,cause,however,client,code,may,not,generally,rely,on,this,due,to,data,access,exceptions,possibly,being,caused,by,other,resource,apis,as,well,that,said,a,code,get,root,cause,instanceof,sqlexception,check,and,subsequent,cast,is,considered,reliable,when,expecting,jdbc,based,access,to,have,happened,param,task,readable,text,describing,the,task,being,attempted,param,sql,sql,query,or,update,that,caused,the,problem,may,be,code,null,param,ex,the,offending,code,sqlexception,return,the,data,access,exception,wrapping,the,code,sqlexception,see,org,springframework,dao,data,access,exception,get,root,cause;data,access,exception,translate,string,task,string,sql,sqlexception,ex
SQLExceptionTranslator -> DataAccessException translate(String task, String sql, SQLException ex)_;1467808333;Translate the given {@link SQLException} into a generic {@link DataAccessException}._<p>The returned DataAccessException is supposed to contain the original_{@code SQLException} as root cause. However, client code may not generally_rely on this due to DataAccessExceptions possibly being caused by other resource_APIs as well. That said, a {@code getRootCause() instanceof SQLException}_check (and subsequent cast) is considered reliable when expecting JDBC-based_access to have happened._@param task readable text describing the task being attempted_@param sql SQL query or update that caused the problem (may be {@code null})_@param ex the offending {@code SQLException}_@return the DataAccessException, wrapping the {@code SQLException}_@see org.springframework.dao.DataAccessException#getRootCause();DataAccessException translate(String task, String sql, SQLException ex)_;translate,the,given,link,sqlexception,into,a,generic,link,data,access,exception,p,the,returned,data,access,exception,is,supposed,to,contain,the,original,code,sqlexception,as,root,cause,however,client,code,may,not,generally,rely,on,this,due,to,data,access,exceptions,possibly,being,caused,by,other,resource,apis,as,well,that,said,a,code,get,root,cause,instanceof,sqlexception,check,and,subsequent,cast,is,considered,reliable,when,expecting,jdbc,based,access,to,have,happened,param,task,readable,text,describing,the,task,being,attempted,param,sql,sql,query,or,update,that,caused,the,problem,may,be,code,null,param,ex,the,offending,code,sqlexception,return,the,data,access,exception,wrapping,the,code,sqlexception,see,org,springframework,dao,data,access,exception,get,root,cause;data,access,exception,translate,string,task,string,sql,sqlexception,ex
