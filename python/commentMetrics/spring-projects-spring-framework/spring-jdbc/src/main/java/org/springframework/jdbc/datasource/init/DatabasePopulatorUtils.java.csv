# id;timestamp;commentText;codeText;commentWords;codeWords
DatabasePopulatorUtils -> public static void execute(DatabasePopulator populator, DataSource dataSource);1328020251;Execute the given DatabasePopulator against the given DataSource._@param populator the DatabasePopulator to execute_@param dataSource the DataSource to execute against;public static void execute(DatabasePopulator populator, DataSource dataSource) {_		Assert.notNull(populator, "DatabasePopulator must be provided")__		Assert.notNull(dataSource, "DataSource must be provided")__		try {_			Connection connection = dataSource.getConnection()__			try {_				populator.populate(connection)__			}_			finally {_				try {_					connection.close()__				}_				catch (SQLException ex) {_					_				}_			}_		}_		catch (Exception ex) {_			throw new DataAccessResourceFailureException("Failed to execute database script", ex)__		}_	};execute,the,given,database,populator,against,the,given,data,source,param,populator,the,database,populator,to,execute,param,data,source,the,data,source,to,execute,against;public,static,void,execute,database,populator,populator,data,source,data,source,assert,not,null,populator,database,populator,must,be,provided,assert,not,null,data,source,data,source,must,be,provided,try,connection,connection,data,source,get,connection,try,populator,populate,connection,finally,try,connection,close,catch,sqlexception,ex,catch,exception,ex,throw,new,data,access,resource,failure,exception,failed,to,execute,database,script,ex
DatabasePopulatorUtils -> public static void execute(DatabasePopulator populator, DataSource dataSource);1338820664;Execute the given DatabasePopulator against the given DataSource._@param populator the DatabasePopulator to execute_@param dataSource the DataSource to execute against;public static void execute(DatabasePopulator populator, DataSource dataSource) {_		Assert.notNull(populator, "DatabasePopulator must be provided")__		Assert.notNull(dataSource, "DataSource must be provided")__		try {_			Connection connection = DataSourceUtils.getConnection(dataSource)__			try {_				populator.populate(connection)__			}_			finally {_				if (connection != null) {_					DataSourceUtils.releaseConnection(connection, dataSource)__				}_			}_		}_		catch (Exception ex) {_			throw new DataAccessResourceFailureException("Failed to execute database script", ex)__		}_	};execute,the,given,database,populator,against,the,given,data,source,param,populator,the,database,populator,to,execute,param,data,source,the,data,source,to,execute,against;public,static,void,execute,database,populator,populator,data,source,data,source,assert,not,null,populator,database,populator,must,be,provided,assert,not,null,data,source,data,source,must,be,provided,try,connection,connection,data,source,utils,get,connection,data,source,try,populator,populate,connection,finally,if,connection,null,data,source,utils,release,connection,connection,data,source,catch,exception,ex,throw,new,data,access,resource,failure,exception,failed,to,execute,database,script,ex
DatabasePopulatorUtils -> public static void execute(DatabasePopulator populator, DataSource dataSource) throws DataAccessException;1394708749;Execute the given {@link DatabasePopulator} against the given {@link DataSource}._@param populator the {@code DatabasePopulator} to execute_@param dataSource the {@code DataSource} to execute against_@throws DataAccessException if an error occurs;public static void execute(DatabasePopulator populator, DataSource dataSource) throws DataAccessException {_		Assert.notNull(populator, "DatabasePopulator must be provided")__		Assert.notNull(dataSource, "DataSource must be provided")__		try {_			Connection connection = DataSourceUtils.getConnection(dataSource)__			try {_				populator.populate(connection)__			}_			finally {_				if (connection != null) {_					DataSourceUtils.releaseConnection(connection, dataSource)__				}_			}_		}_		catch (Exception ex) {_			throw new DataAccessResourceFailureException("Failed to execute database script", ex)__		}_	};execute,the,given,link,database,populator,against,the,given,link,data,source,param,populator,the,code,database,populator,to,execute,param,data,source,the,code,data,source,to,execute,against,throws,data,access,exception,if,an,error,occurs;public,static,void,execute,database,populator,populator,data,source,data,source,throws,data,access,exception,assert,not,null,populator,database,populator,must,be,provided,assert,not,null,data,source,data,source,must,be,provided,try,connection,connection,data,source,utils,get,connection,data,source,try,populator,populate,connection,finally,if,connection,null,data,source,utils,release,connection,connection,data,source,catch,exception,ex,throw,new,data,access,resource,failure,exception,failed,to,execute,database,script,ex
DatabasePopulatorUtils -> public static void execute(DatabasePopulator populator, DataSource dataSource) throws DataAccessException;1395055592;Execute the given {@link DatabasePopulator} against the given {@link DataSource}._@param populator the {@code DatabasePopulator} to execute_@param dataSource the {@code DataSource} to execute against_@throws DataAccessException if an error occurs, specifically a {@link ScriptException};public static void execute(DatabasePopulator populator, DataSource dataSource) throws DataAccessException {_		Assert.notNull(populator, "DatabasePopulator must be provided")__		Assert.notNull(dataSource, "DataSource must be provided")__		try {_			Connection connection = DataSourceUtils.getConnection(dataSource)__			try {_				populator.populate(connection)__			}_			finally {_				if (connection != null) {_					DataSourceUtils.releaseConnection(connection, dataSource)__				}_			}_		}_		catch (Exception ex) {_			if (ex instanceof ScriptException) {_				throw (ScriptException) ex__			}__			throw new UncategorizedScriptException("Failed to execute database script", ex)__		}_	};execute,the,given,link,database,populator,against,the,given,link,data,source,param,populator,the,code,database,populator,to,execute,param,data,source,the,code,data,source,to,execute,against,throws,data,access,exception,if,an,error,occurs,specifically,a,link,script,exception;public,static,void,execute,database,populator,populator,data,source,data,source,throws,data,access,exception,assert,not,null,populator,database,populator,must,be,provided,assert,not,null,data,source,data,source,must,be,provided,try,connection,connection,data,source,utils,get,connection,data,source,try,populator,populate,connection,finally,if,connection,null,data,source,utils,release,connection,connection,data,source,catch,exception,ex,if,ex,instanceof,script,exception,throw,script,exception,ex,throw,new,uncategorized,script,exception,failed,to,execute,database,script,ex
DatabasePopulatorUtils -> public static void execute(DatabasePopulator populator, DataSource dataSource) throws DataAccessException;1413848647;Execute the given {@link DatabasePopulator} against the given {@link DataSource}._@param populator the {@code DatabasePopulator} to execute_@param dataSource the {@code DataSource} to execute against_@throws DataAccessException if an error occurs, specifically a {@link ScriptException};public static void execute(DatabasePopulator populator, DataSource dataSource) throws DataAccessException {_		Assert.notNull(populator, "DatabasePopulator must be provided")__		Assert.notNull(dataSource, "DataSource must be provided")__		try {_			Connection connection = DataSourceUtils.getConnection(dataSource)__			try {_				populator.populate(connection)__			}_			finally {_				if (connection != null) {_					DataSourceUtils.releaseConnection(connection, dataSource)__				}_			}_		}_		catch (Exception ex) {_			if (ex instanceof ScriptException) {_				throw (ScriptException) ex__			}__			throw new UncategorizedScriptException("Failed to execute database script", ex)__		}_	};execute,the,given,link,database,populator,against,the,given,link,data,source,param,populator,the,code,database,populator,to,execute,param,data,source,the,code,data,source,to,execute,against,throws,data,access,exception,if,an,error,occurs,specifically,a,link,script,exception;public,static,void,execute,database,populator,populator,data,source,data,source,throws,data,access,exception,assert,not,null,populator,database,populator,must,be,provided,assert,not,null,data,source,data,source,must,be,provided,try,connection,connection,data,source,utils,get,connection,data,source,try,populator,populate,connection,finally,if,connection,null,data,source,utils,release,connection,connection,data,source,catch,exception,ex,if,ex,instanceof,script,exception,throw,script,exception,ex,throw,new,uncategorized,script,exception,failed,to,execute,database,script,ex
DatabasePopulatorUtils -> public static void execute(DatabasePopulator populator, DataSource dataSource) throws DataAccessException;1477691361;Execute the given {@link DatabasePopulator} against the given {@link DataSource}._@param populator the {@code DatabasePopulator} to execute_@param dataSource the {@code DataSource} to execute against_@throws DataAccessException if an error occurs, specifically a {@link ScriptException};public static void execute(DatabasePopulator populator, DataSource dataSource) throws DataAccessException {_		Assert.notNull(populator, "DatabasePopulator must not be null")__		Assert.notNull(dataSource, "DataSource must not be null")__		try {_			Connection connection = DataSourceUtils.getConnection(dataSource)__			try {_				populator.populate(connection)__			}_			finally {_				if (connection != null) {_					DataSourceUtils.releaseConnection(connection, dataSource)__				}_			}_		}_		catch (Throwable ex) {_			if (ex instanceof ScriptException) {_				throw (ScriptException) ex__			}_			throw new UncategorizedScriptException("Failed to execute database script", ex)__		}_	};execute,the,given,link,database,populator,against,the,given,link,data,source,param,populator,the,code,database,populator,to,execute,param,data,source,the,code,data,source,to,execute,against,throws,data,access,exception,if,an,error,occurs,specifically,a,link,script,exception;public,static,void,execute,database,populator,populator,data,source,data,source,throws,data,access,exception,assert,not,null,populator,database,populator,must,not,be,null,assert,not,null,data,source,data,source,must,not,be,null,try,connection,connection,data,source,utils,get,connection,data,source,try,populator,populate,connection,finally,if,connection,null,data,source,utils,release,connection,connection,data,source,catch,throwable,ex,if,ex,instanceof,script,exception,throw,script,exception,ex,throw,new,uncategorized,script,exception,failed,to,execute,database,script,ex
DatabasePopulatorUtils -> public static void execute(DatabasePopulator populator, DataSource dataSource) throws DataAccessException;1496837955;Execute the given {@link DatabasePopulator} against the given {@link DataSource}._@param populator the {@code DatabasePopulator} to execute_@param dataSource the {@code DataSource} to execute against_@throws DataAccessException if an error occurs, specifically a {@link ScriptException};public static void execute(DatabasePopulator populator, DataSource dataSource) throws DataAccessException {_		Assert.notNull(populator, "DatabasePopulator must not be null")__		Assert.notNull(dataSource, "DataSource must not be null")__		try {_			Connection connection = DataSourceUtils.getConnection(dataSource)__			try {_				populator.populate(connection)__			}_			finally {_				DataSourceUtils.releaseConnection(connection, dataSource)__			}_		}_		catch (Throwable ex) {_			if (ex instanceof ScriptException) {_				throw (ScriptException) ex__			}_			throw new UncategorizedScriptException("Failed to execute database script", ex)__		}_	};execute,the,given,link,database,populator,against,the,given,link,data,source,param,populator,the,code,database,populator,to,execute,param,data,source,the,code,data,source,to,execute,against,throws,data,access,exception,if,an,error,occurs,specifically,a,link,script,exception;public,static,void,execute,database,populator,populator,data,source,data,source,throws,data,access,exception,assert,not,null,populator,database,populator,must,not,be,null,assert,not,null,data,source,data,source,must,not,be,null,try,connection,connection,data,source,utils,get,connection,data,source,try,populator,populate,connection,finally,data,source,utils,release,connection,connection,data,source,catch,throwable,ex,if,ex,instanceof,script,exception,throw,script,exception,ex,throw,new,uncategorized,script,exception,failed,to,execute,database,script,ex
