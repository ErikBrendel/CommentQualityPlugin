# id;timestamp;commentText;codeText;commentWords;codeWords
SqlRowSetResultSetExtractor -> protected SqlRowSet createSqlRowSet(ResultSet rs) throws SQLException;1328020251;Create a SqlRowSet that wraps the given ResultSet,_representing its data in a disconnected fashion._<p>This implementation creates a Spring ResultSetWrappingSqlRowSet_instance that wraps a standard JDBC CachedRowSet instance._Can be overridden to use a different implementation._@param rs the original ResultSet (connected)_@return the disconnected SqlRowSet_@throws SQLException if thrown by JDBC methods_@see #newCachedRowSet_@see org.springframework.jdbc.support.rowset.ResultSetWrappingSqlRowSet;protected SqlRowSet createSqlRowSet(ResultSet rs) throws SQLException {_		CachedRowSet rowSet = newCachedRowSet()__		rowSet.populate(rs)__		return new ResultSetWrappingSqlRowSet(rowSet)__	};create,a,sql,row,set,that,wraps,the,given,result,set,representing,its,data,in,a,disconnected,fashion,p,this,implementation,creates,a,spring,result,set,wrapping,sql,row,set,instance,that,wraps,a,standard,jdbc,cached,row,set,instance,can,be,overridden,to,use,a,different,implementation,param,rs,the,original,result,set,connected,return,the,disconnected,sql,row,set,throws,sqlexception,if,thrown,by,jdbc,methods,see,new,cached,row,set,see,org,springframework,jdbc,support,rowset,result,set,wrapping,sql,row,set;protected,sql,row,set,create,sql,row,set,result,set,rs,throws,sqlexception,cached,row,set,row,set,new,cached,row,set,row,set,populate,rs,return,new,result,set,wrapping,sql,row,set,row,set
SqlRowSetResultSetExtractor -> protected SqlRowSet createSqlRowSet(ResultSet rs) throws SQLException;1353878425;Create a SqlRowSet that wraps the given ResultSet,_representing its data in a disconnected fashion._<p>This implementation creates a Spring ResultSetWrappingSqlRowSet_instance that wraps a standard JDBC CachedRowSet instance._Can be overridden to use a different implementation._@param rs the original ResultSet (connected)_@return the disconnected SqlRowSet_@throws SQLException if thrown by JDBC methods_@see #newCachedRowSet_@see org.springframework.jdbc.support.rowset.ResultSetWrappingSqlRowSet;protected SqlRowSet createSqlRowSet(ResultSet rs) throws SQLException {_		CachedRowSet rowSet = newCachedRowSet()__		rowSet.populate(rs)__		return new ResultSetWrappingSqlRowSet(rowSet)__	};create,a,sql,row,set,that,wraps,the,given,result,set,representing,its,data,in,a,disconnected,fashion,p,this,implementation,creates,a,spring,result,set,wrapping,sql,row,set,instance,that,wraps,a,standard,jdbc,cached,row,set,instance,can,be,overridden,to,use,a,different,implementation,param,rs,the,original,result,set,connected,return,the,disconnected,sql,row,set,throws,sqlexception,if,thrown,by,jdbc,methods,see,new,cached,row,set,see,org,springframework,jdbc,support,rowset,result,set,wrapping,sql,row,set;protected,sql,row,set,create,sql,row,set,result,set,rs,throws,sqlexception,cached,row,set,row,set,new,cached,row,set,row,set,populate,rs,return,new,result,set,wrapping,sql,row,set,row,set
SqlRowSetResultSetExtractor -> protected SqlRowSet createSqlRowSet(ResultSet rs) throws SQLException;1355313310;Create a SqlRowSet that wraps the given ResultSet,_representing its data in a disconnected fashion._<p>This implementation creates a Spring ResultSetWrappingSqlRowSet_instance that wraps a standard JDBC CachedRowSet instance._Can be overridden to use a different implementation._@param rs the original ResultSet (connected)_@return the disconnected SqlRowSet_@throws SQLException if thrown by JDBC methods_@see #newCachedRowSet_@see org.springframework.jdbc.support.rowset.ResultSetWrappingSqlRowSet;protected SqlRowSet createSqlRowSet(ResultSet rs) throws SQLException {_		CachedRowSet rowSet = newCachedRowSet()__		rowSet.populate(rs)__		return new ResultSetWrappingSqlRowSet(rowSet)__	};create,a,sql,row,set,that,wraps,the,given,result,set,representing,its,data,in,a,disconnected,fashion,p,this,implementation,creates,a,spring,result,set,wrapping,sql,row,set,instance,that,wraps,a,standard,jdbc,cached,row,set,instance,can,be,overridden,to,use,a,different,implementation,param,rs,the,original,result,set,connected,return,the,disconnected,sql,row,set,throws,sqlexception,if,thrown,by,jdbc,methods,see,new,cached,row,set,see,org,springframework,jdbc,support,rowset,result,set,wrapping,sql,row,set;protected,sql,row,set,create,sql,row,set,result,set,rs,throws,sqlexception,cached,row,set,row,set,new,cached,row,set,row,set,populate,rs,return,new,result,set,wrapping,sql,row,set,row,set
SqlRowSetResultSetExtractor -> protected SqlRowSet createSqlRowSet(ResultSet rs) throws SQLException;1356735495;Create a SqlRowSet that wraps the given ResultSet,_representing its data in a disconnected fashion._<p>This implementation creates a Spring ResultSetWrappingSqlRowSet_instance that wraps a standard JDBC CachedRowSet instance._Can be overridden to use a different implementation._@param rs the original ResultSet (connected)_@return the disconnected SqlRowSet_@throws SQLException if thrown by JDBC methods_@see #newCachedRowSet_@see org.springframework.jdbc.support.rowset.ResultSetWrappingSqlRowSet;protected SqlRowSet createSqlRowSet(ResultSet rs) throws SQLException {_		CachedRowSet rowSet = newCachedRowSet()__		rowSet.populate(rs)__		return new ResultSetWrappingSqlRowSet(rowSet)__	};create,a,sql,row,set,that,wraps,the,given,result,set,representing,its,data,in,a,disconnected,fashion,p,this,implementation,creates,a,spring,result,set,wrapping,sql,row,set,instance,that,wraps,a,standard,jdbc,cached,row,set,instance,can,be,overridden,to,use,a,different,implementation,param,rs,the,original,result,set,connected,return,the,disconnected,sql,row,set,throws,sqlexception,if,thrown,by,jdbc,methods,see,new,cached,row,set,see,org,springframework,jdbc,support,rowset,result,set,wrapping,sql,row,set;protected,sql,row,set,create,sql,row,set,result,set,rs,throws,sqlexception,cached,row,set,row,set,new,cached,row,set,row,set,populate,rs,return,new,result,set,wrapping,sql,row,set,row,set
SqlRowSetResultSetExtractor -> protected SqlRowSet createSqlRowSet(ResultSet rs) throws SQLException;1357119239;Create a SqlRowSet that wraps the given ResultSet,_representing its data in a disconnected fashion._<p>This implementation creates a Spring ResultSetWrappingSqlRowSet_instance that wraps a standard JDBC CachedRowSet instance._Can be overridden to use a different implementation._@param rs the original ResultSet (connected)_@return the disconnected SqlRowSet_@throws SQLException if thrown by JDBC methods_@see #newCachedRowSet_@see org.springframework.jdbc.support.rowset.ResultSetWrappingSqlRowSet;protected SqlRowSet createSqlRowSet(ResultSet rs) throws SQLException {_		CachedRowSet rowSet = newCachedRowSet()__		rowSet.populate(rs)__		return new ResultSetWrappingSqlRowSet(rowSet)__	};create,a,sql,row,set,that,wraps,the,given,result,set,representing,its,data,in,a,disconnected,fashion,p,this,implementation,creates,a,spring,result,set,wrapping,sql,row,set,instance,that,wraps,a,standard,jdbc,cached,row,set,instance,can,be,overridden,to,use,a,different,implementation,param,rs,the,original,result,set,connected,return,the,disconnected,sql,row,set,throws,sqlexception,if,thrown,by,jdbc,methods,see,new,cached,row,set,see,org,springframework,jdbc,support,rowset,result,set,wrapping,sql,row,set;protected,sql,row,set,create,sql,row,set,result,set,rs,throws,sqlexception,cached,row,set,row,set,new,cached,row,set,row,set,populate,rs,return,new,result,set,wrapping,sql,row,set,row,set
SqlRowSetResultSetExtractor -> protected SqlRowSet createSqlRowSet(ResultSet rs) throws SQLException;1368482696;Create a SqlRowSet that wraps the given ResultSet,_representing its data in a disconnected fashion._<p>This implementation creates a Spring ResultSetWrappingSqlRowSet_instance that wraps a standard JDBC CachedRowSet instance._Can be overridden to use a different implementation._@param rs the original ResultSet (connected)_@return the disconnected SqlRowSet_@throws SQLException if thrown by JDBC methods_@see #newCachedRowSet_@see org.springframework.jdbc.support.rowset.ResultSetWrappingSqlRowSet;protected SqlRowSet createSqlRowSet(ResultSet rs) throws SQLException {_		CachedRowSet rowSet = newCachedRowSet()__		rowSet.populate(rs)__		return new ResultSetWrappingSqlRowSet(rowSet)__	};create,a,sql,row,set,that,wraps,the,given,result,set,representing,its,data,in,a,disconnected,fashion,p,this,implementation,creates,a,spring,result,set,wrapping,sql,row,set,instance,that,wraps,a,standard,jdbc,cached,row,set,instance,can,be,overridden,to,use,a,different,implementation,param,rs,the,original,result,set,connected,return,the,disconnected,sql,row,set,throws,sqlexception,if,thrown,by,jdbc,methods,see,new,cached,row,set,see,org,springframework,jdbc,support,rowset,result,set,wrapping,sql,row,set;protected,sql,row,set,create,sql,row,set,result,set,rs,throws,sqlexception,cached,row,set,row,set,new,cached,row,set,row,set,populate,rs,return,new,result,set,wrapping,sql,row,set,row,set
SqlRowSetResultSetExtractor -> protected SqlRowSet createSqlRowSet(ResultSet rs) throws SQLException;1385412762;Create a SqlRowSet that wraps the given ResultSet,_representing its data in a disconnected fashion._<p>This implementation creates a Spring ResultSetWrappingSqlRowSet_instance that wraps a standard JDBC CachedRowSet instance._Can be overridden to use a different implementation._@param rs the original ResultSet (connected)_@return the disconnected SqlRowSet_@throws SQLException if thrown by JDBC methods_@see #newCachedRowSet_@see org.springframework.jdbc.support.rowset.ResultSetWrappingSqlRowSet;protected SqlRowSet createSqlRowSet(ResultSet rs) throws SQLException {_		CachedRowSet rowSet = newCachedRowSet()__		rowSet.populate(rs)__		return new ResultSetWrappingSqlRowSet(rowSet)__	};create,a,sql,row,set,that,wraps,the,given,result,set,representing,its,data,in,a,disconnected,fashion,p,this,implementation,creates,a,spring,result,set,wrapping,sql,row,set,instance,that,wraps,a,standard,jdbc,cached,row,set,instance,can,be,overridden,to,use,a,different,implementation,param,rs,the,original,result,set,connected,return,the,disconnected,sql,row,set,throws,sqlexception,if,thrown,by,jdbc,methods,see,new,cached,row,set,see,org,springframework,jdbc,support,rowset,result,set,wrapping,sql,row,set;protected,sql,row,set,create,sql,row,set,result,set,rs,throws,sqlexception,cached,row,set,row,set,new,cached,row,set,row,set,populate,rs,return,new,result,set,wrapping,sql,row,set,row,set
SqlRowSetResultSetExtractor -> protected SqlRowSet createSqlRowSet(ResultSet rs) throws SQLException;1398638841;Create a SqlRowSet that wraps the given ResultSet,_representing its data in a disconnected fashion._<p>This implementation creates a Spring ResultSetWrappingSqlRowSet_instance that wraps a standard JDBC CachedRowSet instance._Can be overridden to use a different implementation._@param rs the original ResultSet (connected)_@return the disconnected SqlRowSet_@throws SQLException if thrown by JDBC methods_@see #newCachedRowSet_@see org.springframework.jdbc.support.rowset.ResultSetWrappingSqlRowSet;protected SqlRowSet createSqlRowSet(ResultSet rs) throws SQLException {_		CachedRowSet rowSet = newCachedRowSet()__		rowSet.populate(rs)__		return new ResultSetWrappingSqlRowSet(rowSet)__	};create,a,sql,row,set,that,wraps,the,given,result,set,representing,its,data,in,a,disconnected,fashion,p,this,implementation,creates,a,spring,result,set,wrapping,sql,row,set,instance,that,wraps,a,standard,jdbc,cached,row,set,instance,can,be,overridden,to,use,a,different,implementation,param,rs,the,original,result,set,connected,return,the,disconnected,sql,row,set,throws,sqlexception,if,thrown,by,jdbc,methods,see,new,cached,row,set,see,org,springframework,jdbc,support,rowset,result,set,wrapping,sql,row,set;protected,sql,row,set,create,sql,row,set,result,set,rs,throws,sqlexception,cached,row,set,row,set,new,cached,row,set,row,set,populate,rs,return,new,result,set,wrapping,sql,row,set,row,set
SqlRowSetResultSetExtractor -> protected SqlRowSet createSqlRowSet(ResultSet rs) throws SQLException;1398858661;Create a SqlRowSet that wraps the given ResultSet,_representing its data in a disconnected fashion._<p>This implementation creates a Spring ResultSetWrappingSqlRowSet_instance that wraps a standard JDBC CachedRowSet instance._Can be overridden to use a different implementation._@param rs the original ResultSet (connected)_@return the disconnected SqlRowSet_@throws SQLException if thrown by JDBC methods_@see #newCachedRowSet_@see org.springframework.jdbc.support.rowset.ResultSetWrappingSqlRowSet;protected SqlRowSet createSqlRowSet(ResultSet rs) throws SQLException {_		CachedRowSet rowSet = newCachedRowSet()__		rowSet.populate(rs)__		return new ResultSetWrappingSqlRowSet(rowSet)__	};create,a,sql,row,set,that,wraps,the,given,result,set,representing,its,data,in,a,disconnected,fashion,p,this,implementation,creates,a,spring,result,set,wrapping,sql,row,set,instance,that,wraps,a,standard,jdbc,cached,row,set,instance,can,be,overridden,to,use,a,different,implementation,param,rs,the,original,result,set,connected,return,the,disconnected,sql,row,set,throws,sqlexception,if,thrown,by,jdbc,methods,see,new,cached,row,set,see,org,springframework,jdbc,support,rowset,result,set,wrapping,sql,row,set;protected,sql,row,set,create,sql,row,set,result,set,rs,throws,sqlexception,cached,row,set,row,set,new,cached,row,set,row,set,populate,rs,return,new,result,set,wrapping,sql,row,set,row,set
SqlRowSetResultSetExtractor -> protected SqlRowSet createSqlRowSet(ResultSet rs) throws SQLException;1401910463;Create a SqlRowSet that wraps the given ResultSet,_representing its data in a disconnected fashion._<p>This implementation creates a Spring ResultSetWrappingSqlRowSet_instance that wraps a standard JDBC CachedRowSet instance._Can be overridden to use a different implementation._@param rs the original ResultSet (connected)_@return the disconnected SqlRowSet_@throws SQLException if thrown by JDBC methods_@see #newCachedRowSet_@see org.springframework.jdbc.support.rowset.ResultSetWrappingSqlRowSet;protected SqlRowSet createSqlRowSet(ResultSet rs) throws SQLException {_		CachedRowSet rowSet = newCachedRowSet()__		rowSet.populate(rs)__		return new ResultSetWrappingSqlRowSet(rowSet)__	};create,a,sql,row,set,that,wraps,the,given,result,set,representing,its,data,in,a,disconnected,fashion,p,this,implementation,creates,a,spring,result,set,wrapping,sql,row,set,instance,that,wraps,a,standard,jdbc,cached,row,set,instance,can,be,overridden,to,use,a,different,implementation,param,rs,the,original,result,set,connected,return,the,disconnected,sql,row,set,throws,sqlexception,if,thrown,by,jdbc,methods,see,new,cached,row,set,see,org,springframework,jdbc,support,rowset,result,set,wrapping,sql,row,set;protected,sql,row,set,create,sql,row,set,result,set,rs,throws,sqlexception,cached,row,set,row,set,new,cached,row,set,row,set,populate,rs,return,new,result,set,wrapping,sql,row,set,row,set
SqlRowSetResultSetExtractor -> protected SqlRowSet createSqlRowSet(ResultSet rs) throws SQLException;1439388883;Create a SqlRowSet that wraps the given ResultSet,_representing its data in a disconnected fashion._<p>This implementation creates a Spring ResultSetWrappingSqlRowSet_instance that wraps a standard JDBC CachedRowSet instance._Can be overridden to use a different implementation._@param rs the original ResultSet (connected)_@return the disconnected SqlRowSet_@throws SQLException if thrown by JDBC methods_@see #newCachedRowSet_@see org.springframework.jdbc.support.rowset.ResultSetWrappingSqlRowSet;protected SqlRowSet createSqlRowSet(ResultSet rs) throws SQLException {_		CachedRowSet rowSet = newCachedRowSet()__		rowSet.populate(rs)__		return new ResultSetWrappingSqlRowSet(rowSet)__	};create,a,sql,row,set,that,wraps,the,given,result,set,representing,its,data,in,a,disconnected,fashion,p,this,implementation,creates,a,spring,result,set,wrapping,sql,row,set,instance,that,wraps,a,standard,jdbc,cached,row,set,instance,can,be,overridden,to,use,a,different,implementation,param,rs,the,original,result,set,connected,return,the,disconnected,sql,row,set,throws,sqlexception,if,thrown,by,jdbc,methods,see,new,cached,row,set,see,org,springframework,jdbc,support,rowset,result,set,wrapping,sql,row,set;protected,sql,row,set,create,sql,row,set,result,set,rs,throws,sqlexception,cached,row,set,row,set,new,cached,row,set,row,set,populate,rs,return,new,result,set,wrapping,sql,row,set,row,set
SqlRowSetResultSetExtractor -> protected SqlRowSet createSqlRowSet(ResultSet rs) throws SQLException;1467677340;Create a SqlRowSet that wraps the given ResultSet,_representing its data in a disconnected fashion._<p>This implementation creates a Spring ResultSetWrappingSqlRowSet_instance that wraps a standard JDBC CachedRowSet instance._Can be overridden to use a different implementation._@param rs the original ResultSet (connected)_@return the disconnected SqlRowSet_@throws SQLException if thrown by JDBC methods_@see #newCachedRowSet_@see org.springframework.jdbc.support.rowset.ResultSetWrappingSqlRowSet;protected SqlRowSet createSqlRowSet(ResultSet rs) throws SQLException {_		CachedRowSet rowSet = newCachedRowSet()__		rowSet.populate(rs)__		return new ResultSetWrappingSqlRowSet(rowSet)__	};create,a,sql,row,set,that,wraps,the,given,result,set,representing,its,data,in,a,disconnected,fashion,p,this,implementation,creates,a,spring,result,set,wrapping,sql,row,set,instance,that,wraps,a,standard,jdbc,cached,row,set,instance,can,be,overridden,to,use,a,different,implementation,param,rs,the,original,result,set,connected,return,the,disconnected,sql,row,set,throws,sqlexception,if,thrown,by,jdbc,methods,see,new,cached,row,set,see,org,springframework,jdbc,support,rowset,result,set,wrapping,sql,row,set;protected,sql,row,set,create,sql,row,set,result,set,rs,throws,sqlexception,cached,row,set,row,set,new,cached,row,set,row,set,populate,rs,return,new,result,set,wrapping,sql,row,set,row,set
SqlRowSetResultSetExtractor -> protected SqlRowSet createSqlRowSet(ResultSet rs) throws SQLException;1533667007;Create a {@link SqlRowSet} that wraps the given {@link ResultSet},_representing its data in a disconnected fashion._<p>This implementation creates a Spring {@link ResultSetWrappingSqlRowSet}_instance that wraps a standard JDBC {@link CachedRowSet} instance._Can be overridden to use a different implementation._@param rs the original ResultSet (connected)_@return the disconnected SqlRowSet_@throws SQLException if thrown by JDBC methods_@see #newCachedRowSet()_@see org.springframework.jdbc.support.rowset.ResultSetWrappingSqlRowSet;protected SqlRowSet createSqlRowSet(ResultSet rs) throws SQLException {_		CachedRowSet rowSet = newCachedRowSet()__		rowSet.populate(rs)__		return new ResultSetWrappingSqlRowSet(rowSet)__	};create,a,link,sql,row,set,that,wraps,the,given,link,result,set,representing,its,data,in,a,disconnected,fashion,p,this,implementation,creates,a,spring,link,result,set,wrapping,sql,row,set,instance,that,wraps,a,standard,jdbc,link,cached,row,set,instance,can,be,overridden,to,use,a,different,implementation,param,rs,the,original,result,set,connected,return,the,disconnected,sql,row,set,throws,sqlexception,if,thrown,by,jdbc,methods,see,new,cached,row,set,see,org,springframework,jdbc,support,rowset,result,set,wrapping,sql,row,set;protected,sql,row,set,create,sql,row,set,result,set,rs,throws,sqlexception,cached,row,set,row,set,new,cached,row,set,row,set,populate,rs,return,new,result,set,wrapping,sql,row,set,row,set
SqlRowSetResultSetExtractor -> protected CachedRowSet newCachedRowSet() throws SQLException;1328020251;Create a new CachedRowSet instance, to be populated by_the <code>createSqlRowSet</code> implementation._<p>The default implementation creates a new instance of_Sun's <code>com.sun.rowset.CachedRowSetImpl</code> class._@return a new CachedRowSet instance_@throws SQLException if thrown by JDBC methods_@see #createSqlRowSet_@see com.sun.rowset.CachedRowSetImpl;protected CachedRowSet newCachedRowSet() throws SQLException {_		if (createCachedRowSet != null) {_			_			return (CachedRowSet) ReflectionUtils.invokeJdbcMethod(createCachedRowSet, rowSetFactory)__		}_		else {_			return new CachedRowSetImpl()__		}_	};create,a,new,cached,row,set,instance,to,be,populated,by,the,code,create,sql,row,set,code,implementation,p,the,default,implementation,creates,a,new,instance,of,sun,s,code,com,sun,rowset,cached,row,set,impl,code,class,return,a,new,cached,row,set,instance,throws,sqlexception,if,thrown,by,jdbc,methods,see,create,sql,row,set,see,com,sun,rowset,cached,row,set,impl;protected,cached,row,set,new,cached,row,set,throws,sqlexception,if,create,cached,row,set,null,return,cached,row,set,reflection,utils,invoke,jdbc,method,create,cached,row,set,row,set,factory,else,return,new,cached,row,set,impl
SqlRowSetResultSetExtractor -> protected CachedRowSet newCachedRowSet() throws SQLException;1353878425;Create a new CachedRowSet instance, to be populated by_the <code>createSqlRowSet</code> implementation._<p>The default implementation uses JDBC 4.1's RowSetProvider_when running on JDK 7 or higher, falling back to Sun's_<code>com.sun.rowset.CachedRowSetImpl</code> class on older JDKs._@return a new CachedRowSet instance_@throws SQLException if thrown by JDBC methods_@see #createSqlRowSet_@see com.sun.rowset.CachedRowSetImpl;protected CachedRowSet newCachedRowSet() throws SQLException {_		return cachedRowSetFactory.createCachedRowSet()__	};create,a,new,cached,row,set,instance,to,be,populated,by,the,code,create,sql,row,set,code,implementation,p,the,default,implementation,uses,jdbc,4,1,s,row,set,provider,when,running,on,jdk,7,or,higher,falling,back,to,sun,s,code,com,sun,rowset,cached,row,set,impl,code,class,on,older,jdks,return,a,new,cached,row,set,instance,throws,sqlexception,if,thrown,by,jdbc,methods,see,create,sql,row,set,see,com,sun,rowset,cached,row,set,impl;protected,cached,row,set,new,cached,row,set,throws,sqlexception,return,cached,row,set,factory,create,cached,row,set
SqlRowSetResultSetExtractor -> protected CachedRowSet newCachedRowSet() throws SQLException;1355313310;Create a new CachedRowSet instance, to be populated by_the <code>createSqlRowSet</code> implementation._<p>The default implementation uses JDBC 4.1's RowSetProvider_when running on JDK 7 or higher, falling back to Sun's_<code>com.sun.rowset.CachedRowSetImpl</code> class on older JDKs._@return a new CachedRowSet instance_@throws SQLException if thrown by JDBC methods_@see #createSqlRowSet;protected CachedRowSet newCachedRowSet() throws SQLException {_		return cachedRowSetFactory.createCachedRowSet()__	};create,a,new,cached,row,set,instance,to,be,populated,by,the,code,create,sql,row,set,code,implementation,p,the,default,implementation,uses,jdbc,4,1,s,row,set,provider,when,running,on,jdk,7,or,higher,falling,back,to,sun,s,code,com,sun,rowset,cached,row,set,impl,code,class,on,older,jdks,return,a,new,cached,row,set,instance,throws,sqlexception,if,thrown,by,jdbc,methods,see,create,sql,row,set;protected,cached,row,set,new,cached,row,set,throws,sqlexception,return,cached,row,set,factory,create,cached,row,set
SqlRowSetResultSetExtractor -> protected CachedRowSet newCachedRowSet() throws SQLException;1356735495;Create a new CachedRowSet instance, to be populated by_the {@code createSqlRowSet} implementation._<p>The default implementation uses JDBC 4.1's RowSetProvider_when running on JDK 7 or higher, falling back to Sun's_{@code com.sun.rowset.CachedRowSetImpl} class on older JDKs._@return a new CachedRowSet instance_@throws SQLException if thrown by JDBC methods_@see #createSqlRowSet;protected CachedRowSet newCachedRowSet() throws SQLException {_		return cachedRowSetFactory.createCachedRowSet()__	};create,a,new,cached,row,set,instance,to,be,populated,by,the,code,create,sql,row,set,implementation,p,the,default,implementation,uses,jdbc,4,1,s,row,set,provider,when,running,on,jdk,7,or,higher,falling,back,to,sun,s,code,com,sun,rowset,cached,row,set,impl,class,on,older,jdks,return,a,new,cached,row,set,instance,throws,sqlexception,if,thrown,by,jdbc,methods,see,create,sql,row,set;protected,cached,row,set,new,cached,row,set,throws,sqlexception,return,cached,row,set,factory,create,cached,row,set
SqlRowSetResultSetExtractor -> protected CachedRowSet newCachedRowSet() throws SQLException;1357119239;Create a new CachedRowSet instance, to be populated by_the {@code createSqlRowSet} implementation._<p>The default implementation uses JDBC 4.1's RowSetProvider_when running on JDK 7 or higher, falling back to Sun's_{@code com.sun.rowset.CachedRowSetImpl} class on older JDKs._@return a new CachedRowSet instance_@throws SQLException if thrown by JDBC methods_@see #createSqlRowSet;protected CachedRowSet newCachedRowSet() throws SQLException {_		return cachedRowSetFactory.createCachedRowSet()__	};create,a,new,cached,row,set,instance,to,be,populated,by,the,code,create,sql,row,set,implementation,p,the,default,implementation,uses,jdbc,4,1,s,row,set,provider,when,running,on,jdk,7,or,higher,falling,back,to,sun,s,code,com,sun,rowset,cached,row,set,impl,class,on,older,jdks,return,a,new,cached,row,set,instance,throws,sqlexception,if,thrown,by,jdbc,methods,see,create,sql,row,set;protected,cached,row,set,new,cached,row,set,throws,sqlexception,return,cached,row,set,factory,create,cached,row,set
SqlRowSetResultSetExtractor -> protected CachedRowSet newCachedRowSet() throws SQLException;1368482696;Create a new CachedRowSet instance, to be populated by_the {@code createSqlRowSet} implementation._<p>The default implementation uses JDBC 4.1's RowSetProvider_when running on JDK 7 or higher, falling back to Sun's_{@code com.sun.rowset.CachedRowSetImpl} class on older JDKs._@return a new CachedRowSet instance_@throws SQLException if thrown by JDBC methods_@see #createSqlRowSet;protected CachedRowSet newCachedRowSet() throws SQLException {_		return cachedRowSetFactory.createCachedRowSet()__	};create,a,new,cached,row,set,instance,to,be,populated,by,the,code,create,sql,row,set,implementation,p,the,default,implementation,uses,jdbc,4,1,s,row,set,provider,when,running,on,jdk,7,or,higher,falling,back,to,sun,s,code,com,sun,rowset,cached,row,set,impl,class,on,older,jdks,return,a,new,cached,row,set,instance,throws,sqlexception,if,thrown,by,jdbc,methods,see,create,sql,row,set;protected,cached,row,set,new,cached,row,set,throws,sqlexception,return,cached,row,set,factory,create,cached,row,set
SqlRowSetResultSetExtractor -> protected CachedRowSet newCachedRowSet() throws SQLException;1385412762;Create a new CachedRowSet instance, to be populated by_the {@code createSqlRowSet} implementation._<p>The default implementation uses JDBC 4.1's RowSetProvider_when running on JDK 7 or higher, falling back to Sun's_{@code com.sun.rowset.CachedRowSetImpl} class on older JDKs._@return a new CachedRowSet instance_@throws SQLException if thrown by JDBC methods_@see #createSqlRowSet;protected CachedRowSet newCachedRowSet() throws SQLException {_		return cachedRowSetFactory.createCachedRowSet()__	};create,a,new,cached,row,set,instance,to,be,populated,by,the,code,create,sql,row,set,implementation,p,the,default,implementation,uses,jdbc,4,1,s,row,set,provider,when,running,on,jdk,7,or,higher,falling,back,to,sun,s,code,com,sun,rowset,cached,row,set,impl,class,on,older,jdks,return,a,new,cached,row,set,instance,throws,sqlexception,if,thrown,by,jdbc,methods,see,create,sql,row,set;protected,cached,row,set,new,cached,row,set,throws,sqlexception,return,cached,row,set,factory,create,cached,row,set
SqlRowSetResultSetExtractor -> protected CachedRowSet newCachedRowSet() throws SQLException;1398638841;Create a new CachedRowSet instance, to be populated by_the {@code createSqlRowSet} implementation._<p>The default implementation uses JDBC 4.1's RowSetProvider_when running on JDK 7 or higher, falling back to Sun's_{@code com.sun.rowset.CachedRowSetImpl} class on older JDKs._@return a new CachedRowSet instance_@throws SQLException if thrown by JDBC methods_@see #createSqlRowSet;protected CachedRowSet newCachedRowSet() throws SQLException {_		return cachedRowSetFactory.createCachedRowSet()__	};create,a,new,cached,row,set,instance,to,be,populated,by,the,code,create,sql,row,set,implementation,p,the,default,implementation,uses,jdbc,4,1,s,row,set,provider,when,running,on,jdk,7,or,higher,falling,back,to,sun,s,code,com,sun,rowset,cached,row,set,impl,class,on,older,jdks,return,a,new,cached,row,set,instance,throws,sqlexception,if,thrown,by,jdbc,methods,see,create,sql,row,set;protected,cached,row,set,new,cached,row,set,throws,sqlexception,return,cached,row,set,factory,create,cached,row,set
SqlRowSetResultSetExtractor -> protected CachedRowSet newCachedRowSet() throws SQLException;1398858661;Create a new CachedRowSet instance, to be populated by_the {@code createSqlRowSet} implementation._<p>The default implementation uses JDBC 4.1's RowSetProvider_when running on JDK 7 or higher, falling back to Sun's_{@code com.sun.rowset.CachedRowSetImpl} class on older JDKs._@return a new CachedRowSet instance_@throws SQLException if thrown by JDBC methods_@see #createSqlRowSet;protected CachedRowSet newCachedRowSet() throws SQLException {_		return cachedRowSetFactory.createCachedRowSet()__	};create,a,new,cached,row,set,instance,to,be,populated,by,the,code,create,sql,row,set,implementation,p,the,default,implementation,uses,jdbc,4,1,s,row,set,provider,when,running,on,jdk,7,or,higher,falling,back,to,sun,s,code,com,sun,rowset,cached,row,set,impl,class,on,older,jdks,return,a,new,cached,row,set,instance,throws,sqlexception,if,thrown,by,jdbc,methods,see,create,sql,row,set;protected,cached,row,set,new,cached,row,set,throws,sqlexception,return,cached,row,set,factory,create,cached,row,set
SqlRowSetResultSetExtractor -> protected CachedRowSet newCachedRowSet() throws SQLException;1401910463;Create a new CachedRowSet instance, to be populated by_the {@code createSqlRowSet} implementation._<p>The default implementation uses JDBC 4.1's RowSetProvider_when running on JDK 7 or higher, falling back to Sun's_{@code com.sun.rowset.CachedRowSetImpl} class on older JDKs._@return a new CachedRowSet instance_@throws SQLException if thrown by JDBC methods_@see #createSqlRowSet;protected CachedRowSet newCachedRowSet() throws SQLException {_		return cachedRowSetFactory.createCachedRowSet()__	};create,a,new,cached,row,set,instance,to,be,populated,by,the,code,create,sql,row,set,implementation,p,the,default,implementation,uses,jdbc,4,1,s,row,set,provider,when,running,on,jdk,7,or,higher,falling,back,to,sun,s,code,com,sun,rowset,cached,row,set,impl,class,on,older,jdks,return,a,new,cached,row,set,instance,throws,sqlexception,if,thrown,by,jdbc,methods,see,create,sql,row,set;protected,cached,row,set,new,cached,row,set,throws,sqlexception,return,cached,row,set,factory,create,cached,row,set
SqlRowSetResultSetExtractor -> protected CachedRowSet newCachedRowSet() throws SQLException;1439388883;Create a new CachedRowSet instance, to be populated by_the {@code createSqlRowSet} implementation._<p>The default implementation uses JDBC 4.1's RowSetProvider_when running on JDK 7 or higher, falling back to Sun's_{@code com.sun.rowset.CachedRowSetImpl} class on older JDKs._@return a new CachedRowSet instance_@throws SQLException if thrown by JDBC methods_@see #createSqlRowSet;protected CachedRowSet newCachedRowSet() throws SQLException {_		return cachedRowSetFactory.createCachedRowSet()__	};create,a,new,cached,row,set,instance,to,be,populated,by,the,code,create,sql,row,set,implementation,p,the,default,implementation,uses,jdbc,4,1,s,row,set,provider,when,running,on,jdk,7,or,higher,falling,back,to,sun,s,code,com,sun,rowset,cached,row,set,impl,class,on,older,jdks,return,a,new,cached,row,set,instance,throws,sqlexception,if,thrown,by,jdbc,methods,see,create,sql,row,set;protected,cached,row,set,new,cached,row,set,throws,sqlexception,return,cached,row,set,factory,create,cached,row,set
SqlRowSetResultSetExtractor -> protected CachedRowSet newCachedRowSet() throws SQLException;1467677340;Create a new CachedRowSet instance, to be populated by_the {@code createSqlRowSet} implementation._<p>The default implementation uses JDBC 4.1's RowSetProvider_when running on JDK 7 or higher, falling back to Sun's_{@code com.sun.rowset.CachedRowSetImpl} class on older JDKs._@return a new CachedRowSet instance_@throws SQLException if thrown by JDBC methods_@see #createSqlRowSet;protected CachedRowSet newCachedRowSet() throws SQLException {_		return rowSetFactory.createCachedRowSet()__	};create,a,new,cached,row,set,instance,to,be,populated,by,the,code,create,sql,row,set,implementation,p,the,default,implementation,uses,jdbc,4,1,s,row,set,provider,when,running,on,jdk,7,or,higher,falling,back,to,sun,s,code,com,sun,rowset,cached,row,set,impl,class,on,older,jdks,return,a,new,cached,row,set,instance,throws,sqlexception,if,thrown,by,jdbc,methods,see,create,sql,row,set;protected,cached,row,set,new,cached,row,set,throws,sqlexception,return,row,set,factory,create,cached,row,set
SqlRowSetResultSetExtractor -> protected CachedRowSet newCachedRowSet() throws SQLException;1533667007;Create a new {@link CachedRowSet} instance, to be populated by_the {@code createSqlRowSet} implementation._<p>The default implementation uses JDBC 4.1's {@link RowSetFactory}._@return a new CachedRowSet instance_@throws SQLException if thrown by JDBC methods_@see #createSqlRowSet_@see RowSetProvider#newFactory()_@see RowSetFactory#createCachedRowSet();protected CachedRowSet newCachedRowSet() throws SQLException {_		return rowSetFactory.createCachedRowSet()__	};create,a,new,link,cached,row,set,instance,to,be,populated,by,the,code,create,sql,row,set,implementation,p,the,default,implementation,uses,jdbc,4,1,s,link,row,set,factory,return,a,new,cached,row,set,instance,throws,sqlexception,if,thrown,by,jdbc,methods,see,create,sql,row,set,see,row,set,provider,new,factory,see,row,set,factory,create,cached,row,set;protected,cached,row,set,new,cached,row,set,throws,sqlexception,return,row,set,factory,create,cached,row,set
