commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public long length() throws SQLException {     return this.contentLength. }
false;public;0;9;;@Override public InputStream getBinaryStream() throws SQLException {     if (this.content != null) {         return new ByteArrayInputStream(this.content).     } else {         return (this.binaryStream != null ? this.binaryStream : StreamUtils.emptyInput()).     } }
false;public;2;4;;@Override public InputStream getBinaryStream(long pos, long length) throws SQLException {     throw new UnsupportedOperationException(). }
false;public;1;4;;@Override public OutputStream setBinaryStream(long pos) throws SQLException {     throw new UnsupportedOperationException(). }
false;public;2;4;;@Override public byte[] getBytes(long pos, int length) throws SQLException {     throw new UnsupportedOperationException(). }
false;public;2;4;;@Override public int setBytes(long pos, byte[] bytes) throws SQLException {     throw new UnsupportedOperationException(). }
false;public;4;4;;@Override public int setBytes(long pos, byte[] bytes, int offset, int len) throws SQLException {     throw new UnsupportedOperationException(). }
false;public;2;4;;@Override public long position(byte[] pattern, long start) throws SQLException {     throw new UnsupportedOperationException(). }
false;public;2;4;;@Override public long position(Blob pattern, long start) throws SQLException {     throw new UnsupportedOperationException(). }
false;public;1;4;;@Override public void truncate(long len) throws SQLException {     throw new UnsupportedOperationException(). }
false;public;0;4;;@Override public void free() throws SQLException { // no-op }
