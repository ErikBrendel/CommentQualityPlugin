# id;timestamp;commentText;codeText;commentWords;codeWords
RowCallbackHandler -> void processRow(ResultSet rs) throws SQLException_;1328020251;Implementations must implement this method to process each row of data_in the ResultSet. This method should not call <code>next()</code> on_the ResultSet_ it is only supposed to extract values of the current row._<p>Exactly what the implementation chooses to do is up to it:_A trivial implementation might simply count rows, while another_implementation might build an XML document._@param rs the ResultSet to process (pre-initialized for the current row)_@throws SQLException if a SQLException is encountered getting_column values (that is, there's no need to catch SQLException);void processRow(ResultSet rs) throws SQLException_;implementations,must,implement,this,method,to,process,each,row,of,data,in,the,result,set,this,method,should,not,call,code,next,code,on,the,result,set,it,is,only,supposed,to,extract,values,of,the,current,row,p,exactly,what,the,implementation,chooses,to,do,is,up,to,it,a,trivial,implementation,might,simply,count,rows,while,another,implementation,might,build,an,xml,document,param,rs,the,result,set,to,process,pre,initialized,for,the,current,row,throws,sqlexception,if,a,sqlexception,is,encountered,getting,column,values,that,is,there,s,no,need,to,catch,sqlexception;void,process,row,result,set,rs,throws,sqlexception
RowCallbackHandler -> void processRow(ResultSet rs) throws SQLException_;1356735495;Implementations must implement this method to process each row of data_in the ResultSet. This method should not call {@code next()} on_the ResultSet_ it is only supposed to extract values of the current row._<p>Exactly what the implementation chooses to do is up to it:_A trivial implementation might simply count rows, while another_implementation might build an XML document._@param rs the ResultSet to process (pre-initialized for the current row)_@throws SQLException if a SQLException is encountered getting_column values (that is, there's no need to catch SQLException);void processRow(ResultSet rs) throws SQLException_;implementations,must,implement,this,method,to,process,each,row,of,data,in,the,result,set,this,method,should,not,call,code,next,on,the,result,set,it,is,only,supposed,to,extract,values,of,the,current,row,p,exactly,what,the,implementation,chooses,to,do,is,up,to,it,a,trivial,implementation,might,simply,count,rows,while,another,implementation,might,build,an,xml,document,param,rs,the,result,set,to,process,pre,initialized,for,the,current,row,throws,sqlexception,if,a,sqlexception,is,encountered,getting,column,values,that,is,there,s,no,need,to,catch,sqlexception;void,process,row,result,set,rs,throws,sqlexception
RowCallbackHandler -> void processRow(ResultSet rs) throws SQLException_;1467808333;Implementations must implement this method to process each row of data_in the ResultSet. This method should not call {@code next()} on_the ResultSet_ it is only supposed to extract values of the current row._<p>Exactly what the implementation chooses to do is up to it:_A trivial implementation might simply count rows, while another_implementation might build an XML document._@param rs the ResultSet to process (pre-initialized for the current row)_@throws SQLException if a SQLException is encountered getting_column values (that is, there's no need to catch SQLException);void processRow(ResultSet rs) throws SQLException_;implementations,must,implement,this,method,to,process,each,row,of,data,in,the,result,set,this,method,should,not,call,code,next,on,the,result,set,it,is,only,supposed,to,extract,values,of,the,current,row,p,exactly,what,the,implementation,chooses,to,do,is,up,to,it,a,trivial,implementation,might,simply,count,rows,while,another,implementation,might,build,an,xml,document,param,rs,the,result,set,to,process,pre,initialized,for,the,current,row,throws,sqlexception,if,a,sqlexception,is,encountered,getting,column,values,that,is,there,s,no,need,to,catch,sqlexception;void,process,row,result,set,rs,throws,sqlexception
