commented;modifiers;parameterAmount;loc;comment;code
true;;1;1;/**  * Implementations must implement this method to process each row of data  * in the ResultSet. This method should not call {@code next()} on  * the ResultSet. it is only supposed to extract values of the current row.  * <p>Exactly what the implementation chooses to do is up to it:  * A trivial implementation might simply count rows, while another  * implementation might build an XML document.  * @param rs the ResultSet to process (pre-initialized for the current row)  * @throws SQLException if a SQLException is encountered getting  * column values (that is, there's no need to catch SQLException)  */ ;/**  * Implementations must implement this method to process each row of data  * in the ResultSet. This method should not call {@code next()} on  * the ResultSet. it is only supposed to extract values of the current row.  * <p>Exactly what the implementation chooses to do is up to it:  * A trivial implementation might simply count rows, while another  * implementation might build an XML document.  * @param rs the ResultSet to process (pre-initialized for the current row)  * @throws SQLException if a SQLException is encountered getting  * column values (that is, there's no need to catch SQLException)  */ void processRow(ResultSet rs) throws SQLException.
