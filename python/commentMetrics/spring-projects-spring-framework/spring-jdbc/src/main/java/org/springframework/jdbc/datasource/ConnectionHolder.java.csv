# id;timestamp;commentText;codeText;commentWords;codeWords
ConnectionHolder -> protected void setTransactionActive(boolean transactionActive);1328020251;Set whether this holder represents an active, JDBC-managed transaction._@see DataSourceTransactionManager;protected void setTransactionActive(boolean transactionActive) {_		this.transactionActive = transactionActive__	};set,whether,this,holder,represents,an,active,jdbc,managed,transaction,see,data,source,transaction,manager;protected,void,set,transaction,active,boolean,transaction,active,this,transaction,active,transaction,active
ConnectionHolder -> protected void setTransactionActive(boolean transactionActive);1356735495;Set whether this holder represents an active, JDBC-managed transaction._@see DataSourceTransactionManager;protected void setTransactionActive(boolean transactionActive) {_		this.transactionActive = transactionActive__	};set,whether,this,holder,represents,an,active,jdbc,managed,transaction,see,data,source,transaction,manager;protected,void,set,transaction,active,boolean,transaction,active,this,transaction,active,transaction,active
ConnectionHolder -> protected void setTransactionActive(boolean transactionActive);1467668088;Set whether this holder represents an active, JDBC-managed transaction._@see DataSourceTransactionManager;protected void setTransactionActive(boolean transactionActive) {_		this.transactionActive = transactionActive__	};set,whether,this,holder,represents,an,active,jdbc,managed,transaction,see,data,source,transaction,manager;protected,void,set,transaction,active,boolean,transaction,active,this,transaction,active,transaction,active
ConnectionHolder -> protected void setTransactionActive(boolean transactionActive);1468949155;Set whether this holder represents an active, JDBC-managed transaction._@see DataSourceTransactionManager;protected void setTransactionActive(boolean transactionActive) {_		this.transactionActive = transactionActive__	};set,whether,this,holder,represents,an,active,jdbc,managed,transaction,see,data,source,transaction,manager;protected,void,set,transaction,active,boolean,transaction,active,this,transaction,active,transaction,active
ConnectionHolder -> protected void setTransactionActive(boolean transactionActive);1495868221;Set whether this holder represents an active, JDBC-managed transaction._@see DataSourceTransactionManager;protected void setTransactionActive(boolean transactionActive) {_		this.transactionActive = transactionActive__	};set,whether,this,holder,represents,an,active,jdbc,managed,transaction,see,data,source,transaction,manager;protected,void,set,transaction,active,boolean,transaction,active,this,transaction,active,transaction,active
ConnectionHolder -> protected void setTransactionActive(boolean transactionActive);1498780456;Set whether this holder represents an active, JDBC-managed transaction._@see DataSourceTransactionManager;protected void setTransactionActive(boolean transactionActive) {_		this.transactionActive = transactionActive__	};set,whether,this,holder,represents,an,active,jdbc,managed,transaction,see,data,source,transaction,manager;protected,void,set,transaction,active,boolean,transaction,active,this,transaction,active,transaction,active
ConnectionHolder -> protected void setTransactionActive(boolean transactionActive);1530174524;Set whether this holder represents an active, JDBC-managed transaction._@see DataSourceTransactionManager;protected void setTransactionActive(boolean transactionActive) {_		this.transactionActive = transactionActive__	};set,whether,this,holder,represents,an,active,jdbc,managed,transaction,see,data,source,transaction,manager;protected,void,set,transaction,active,boolean,transaction,active,this,transaction,active,transaction,active
ConnectionHolder -> protected void setTransactionActive(boolean transactionActive);1530709637;Set whether this holder represents an active, JDBC-managed transaction._@see DataSourceTransactionManager;protected void setTransactionActive(boolean transactionActive) {_		this.transactionActive = transactionActive__	};set,whether,this,holder,represents,an,active,jdbc,managed,transaction,see,data,source,transaction,manager;protected,void,set,transaction,active,boolean,transaction,active,this,transaction,active,transaction,active
ConnectionHolder -> protected void setTransactionActive(boolean transactionActive);1530725007;Set whether this holder represents an active, JDBC-managed transaction._@see DataSourceTransactionManager;protected void setTransactionActive(boolean transactionActive) {_		this.transactionActive = transactionActive__	};set,whether,this,holder,represents,an,active,jdbc,managed,transaction,see,data,source,transaction,manager;protected,void,set,transaction,active,boolean,transaction,active,this,transaction,active,transaction,active
ConnectionHolder -> public ConnectionHolder(ConnectionHandle connectionHandle);1328020251;Create a new ConnectionHolder for the given ConnectionHandle._@param connectionHandle the ConnectionHandle to hold;public ConnectionHolder(ConnectionHandle connectionHandle) {_		Assert.notNull(connectionHandle, "ConnectionHandle must not be null")__		this.connectionHandle = connectionHandle__	};create,a,new,connection,holder,for,the,given,connection,handle,param,connection,handle,the,connection,handle,to,hold;public,connection,holder,connection,handle,connection,handle,assert,not,null,connection,handle,connection,handle,must,not,be,null,this,connection,handle,connection,handle
ConnectionHolder -> public ConnectionHolder(ConnectionHandle connectionHandle);1356735495;Create a new ConnectionHolder for the given ConnectionHandle._@param connectionHandle the ConnectionHandle to hold;public ConnectionHolder(ConnectionHandle connectionHandle) {_		Assert.notNull(connectionHandle, "ConnectionHandle must not be null")__		this.connectionHandle = connectionHandle__	};create,a,new,connection,holder,for,the,given,connection,handle,param,connection,handle,the,connection,handle,to,hold;public,connection,holder,connection,handle,connection,handle,assert,not,null,connection,handle,connection,handle,must,not,be,null,this,connection,handle,connection,handle
ConnectionHolder -> public ConnectionHolder(ConnectionHandle connectionHandle);1467668088;Create a new ConnectionHolder for the given ConnectionHandle._@param connectionHandle the ConnectionHandle to hold;public ConnectionHolder(ConnectionHandle connectionHandle) {_		Assert.notNull(connectionHandle, "ConnectionHandle must not be null")__		this.connectionHandle = connectionHandle__	};create,a,new,connection,holder,for,the,given,connection,handle,param,connection,handle,the,connection,handle,to,hold;public,connection,holder,connection,handle,connection,handle,assert,not,null,connection,handle,connection,handle,must,not,be,null,this,connection,handle,connection,handle
ConnectionHolder -> public ConnectionHolder(ConnectionHandle connectionHandle);1468949155;Create a new ConnectionHolder for the given ConnectionHandle._@param connectionHandle the ConnectionHandle to hold;public ConnectionHolder(ConnectionHandle connectionHandle) {_		Assert.notNull(connectionHandle, "ConnectionHandle must not be null")__		this.connectionHandle = connectionHandle__	};create,a,new,connection,holder,for,the,given,connection,handle,param,connection,handle,the,connection,handle,to,hold;public,connection,holder,connection,handle,connection,handle,assert,not,null,connection,handle,connection,handle,must,not,be,null,this,connection,handle,connection,handle
ConnectionHolder -> public ConnectionHolder(ConnectionHandle connectionHandle);1495868221;Create a new ConnectionHolder for the given ConnectionHandle._@param connectionHandle the ConnectionHandle to hold;public ConnectionHolder(ConnectionHandle connectionHandle) {_		Assert.notNull(connectionHandle, "ConnectionHandle must not be null")__		this.connectionHandle = connectionHandle__	};create,a,new,connection,holder,for,the,given,connection,handle,param,connection,handle,the,connection,handle,to,hold;public,connection,holder,connection,handle,connection,handle,assert,not,null,connection,handle,connection,handle,must,not,be,null,this,connection,handle,connection,handle
ConnectionHolder -> public ConnectionHolder(ConnectionHandle connectionHandle);1498780456;Create a new ConnectionHolder for the given ConnectionHandle._@param connectionHandle the ConnectionHandle to hold;public ConnectionHolder(ConnectionHandle connectionHandle) {_		Assert.notNull(connectionHandle, "ConnectionHandle must not be null")__		this.connectionHandle = connectionHandle__	};create,a,new,connection,holder,for,the,given,connection,handle,param,connection,handle,the,connection,handle,to,hold;public,connection,holder,connection,handle,connection,handle,assert,not,null,connection,handle,connection,handle,must,not,be,null,this,connection,handle,connection,handle
ConnectionHolder -> public ConnectionHolder(ConnectionHandle connectionHandle);1530174524;Create a new ConnectionHolder for the given ConnectionHandle._@param connectionHandle the ConnectionHandle to hold;public ConnectionHolder(ConnectionHandle connectionHandle) {_		Assert.notNull(connectionHandle, "ConnectionHandle must not be null")__		this.connectionHandle = connectionHandle__	};create,a,new,connection,holder,for,the,given,connection,handle,param,connection,handle,the,connection,handle,to,hold;public,connection,holder,connection,handle,connection,handle,assert,not,null,connection,handle,connection,handle,must,not,be,null,this,connection,handle,connection,handle
ConnectionHolder -> public ConnectionHolder(ConnectionHandle connectionHandle);1530709637;Create a new ConnectionHolder for the given ConnectionHandle._@param connectionHandle the ConnectionHandle to hold;public ConnectionHolder(ConnectionHandle connectionHandle) {_		Assert.notNull(connectionHandle, "ConnectionHandle must not be null")__		this.connectionHandle = connectionHandle__	};create,a,new,connection,holder,for,the,given,connection,handle,param,connection,handle,the,connection,handle,to,hold;public,connection,holder,connection,handle,connection,handle,assert,not,null,connection,handle,connection,handle,must,not,be,null,this,connection,handle,connection,handle
ConnectionHolder -> public ConnectionHolder(ConnectionHandle connectionHandle);1530725007;Create a new ConnectionHolder for the given ConnectionHandle._@param connectionHandle the ConnectionHandle to hold;public ConnectionHolder(ConnectionHandle connectionHandle) {_		Assert.notNull(connectionHandle, "ConnectionHandle must not be null")__		this.connectionHandle = connectionHandle__	};create,a,new,connection,holder,for,the,given,connection,handle,param,connection,handle,the,connection,handle,to,hold;public,connection,holder,connection,handle,connection,handle,assert,not,null,connection,handle,connection,handle,must,not,be,null,this,connection,handle,connection,handle
ConnectionHolder -> protected boolean hasConnection();1328020251;Return whether this holder currently has a Connection.;protected boolean hasConnection() {_		return (this.connectionHandle != null)__	};return,whether,this,holder,currently,has,a,connection;protected,boolean,has,connection,return,this,connection,handle,null
ConnectionHolder -> protected boolean hasConnection();1356735495;Return whether this holder currently has a Connection.;protected boolean hasConnection() {_		return (this.connectionHandle != null)__	};return,whether,this,holder,currently,has,a,connection;protected,boolean,has,connection,return,this,connection,handle,null
ConnectionHolder -> protected boolean hasConnection();1467668088;Return whether this holder currently has a Connection.;protected boolean hasConnection() {_		return (this.connectionHandle != null)__	};return,whether,this,holder,currently,has,a,connection;protected,boolean,has,connection,return,this,connection,handle,null
ConnectionHolder -> protected boolean hasConnection();1468949155;Return whether this holder currently has a Connection.;protected boolean hasConnection() {_		return (this.connectionHandle != null)__	};return,whether,this,holder,currently,has,a,connection;protected,boolean,has,connection,return,this,connection,handle,null
ConnectionHolder -> protected boolean hasConnection();1495868221;Return whether this holder currently has a Connection.;protected boolean hasConnection() {_		return (this.connectionHandle != null)__	};return,whether,this,holder,currently,has,a,connection;protected,boolean,has,connection,return,this,connection,handle,null
ConnectionHolder -> protected boolean hasConnection();1498780456;Return whether this holder currently has a Connection.;protected boolean hasConnection() {_		return (this.connectionHandle != null)__	};return,whether,this,holder,currently,has,a,connection;protected,boolean,has,connection,return,this,connection,handle,null
ConnectionHolder -> protected boolean hasConnection();1530174524;Return whether this holder currently has a Connection.;protected boolean hasConnection() {_		return (this.connectionHandle != null)__	};return,whether,this,holder,currently,has,a,connection;protected,boolean,has,connection,return,this,connection,handle,null
ConnectionHolder -> protected boolean hasConnection();1530709637;Return whether this holder currently has a Connection.;protected boolean hasConnection() {_		return (this.connectionHandle != null)__	};return,whether,this,holder,currently,has,a,connection;protected,boolean,has,connection,return,this,connection,handle,null
ConnectionHolder -> protected boolean hasConnection();1530725007;Return whether this holder currently has a Connection.;protected boolean hasConnection() {_		return (this.connectionHandle != null)__	};return,whether,this,holder,currently,has,a,connection;protected,boolean,has,connection,return,this,connection,handle,null
ConnectionHolder -> protected void setConnection(Connection connection);1328020251;Override the existing Connection handle with the given Connection._Reset the handle if given <code>null</code>._<p>Used for releasing the Connection on suspend (with a <code>null</code>_argument) and setting a fresh Connection on resume.;protected void setConnection(Connection connection) {_		if (this.currentConnection != null) {_			this.connectionHandle.releaseConnection(this.currentConnection)__			this.currentConnection = null__		}_		if (connection != null) {_			this.connectionHandle = new SimpleConnectionHandle(connection)__		}_		else {_			this.connectionHandle = null__		}_	};override,the,existing,connection,handle,with,the,given,connection,reset,the,handle,if,given,code,null,code,p,used,for,releasing,the,connection,on,suspend,with,a,code,null,code,argument,and,setting,a,fresh,connection,on,resume;protected,void,set,connection,connection,connection,if,this,current,connection,null,this,connection,handle,release,connection,this,current,connection,this,current,connection,null,if,connection,null,this,connection,handle,new,simple,connection,handle,connection,else,this,connection,handle,null
ConnectionHolder -> protected void setConnection(Connection connection);1356735495;Override the existing Connection handle with the given Connection._Reset the handle if given {@code null}._<p>Used for releasing the Connection on suspend (with a {@code null}_argument) and setting a fresh Connection on resume.;protected void setConnection(Connection connection) {_		if (this.currentConnection != null) {_			this.connectionHandle.releaseConnection(this.currentConnection)__			this.currentConnection = null__		}_		if (connection != null) {_			this.connectionHandle = new SimpleConnectionHandle(connection)__		}_		else {_			this.connectionHandle = null__		}_	};override,the,existing,connection,handle,with,the,given,connection,reset,the,handle,if,given,code,null,p,used,for,releasing,the,connection,on,suspend,with,a,code,null,argument,and,setting,a,fresh,connection,on,resume;protected,void,set,connection,connection,connection,if,this,current,connection,null,this,connection,handle,release,connection,this,current,connection,this,current,connection,null,if,connection,null,this,connection,handle,new,simple,connection,handle,connection,else,this,connection,handle,null
ConnectionHolder -> protected void setConnection(Connection connection);1467668088;Override the existing Connection handle with the given Connection._Reset the handle if given {@code null}._<p>Used for releasing the Connection on suspend (with a {@code null}_argument) and setting a fresh Connection on resume.;protected void setConnection(Connection connection) {_		if (this.currentConnection != null) {_			this.connectionHandle.releaseConnection(this.currentConnection)__			this.currentConnection = null__		}_		if (connection != null) {_			this.connectionHandle = new SimpleConnectionHandle(connection)__		}_		else {_			this.connectionHandle = null__		}_	};override,the,existing,connection,handle,with,the,given,connection,reset,the,handle,if,given,code,null,p,used,for,releasing,the,connection,on,suspend,with,a,code,null,argument,and,setting,a,fresh,connection,on,resume;protected,void,set,connection,connection,connection,if,this,current,connection,null,this,connection,handle,release,connection,this,current,connection,this,current,connection,null,if,connection,null,this,connection,handle,new,simple,connection,handle,connection,else,this,connection,handle,null
ConnectionHolder -> protected void setConnection(Connection connection);1468949155;Override the existing Connection handle with the given Connection._Reset the handle if given {@code null}._<p>Used for releasing the Connection on suspend (with a {@code null}_argument) and setting a fresh Connection on resume.;protected void setConnection(Connection connection) {_		if (this.currentConnection != null) {_			this.connectionHandle.releaseConnection(this.currentConnection)__			this.currentConnection = null__		}_		if (connection != null) {_			this.connectionHandle = new SimpleConnectionHandle(connection)__		}_		else {_			this.connectionHandle = null__		}_	};override,the,existing,connection,handle,with,the,given,connection,reset,the,handle,if,given,code,null,p,used,for,releasing,the,connection,on,suspend,with,a,code,null,argument,and,setting,a,fresh,connection,on,resume;protected,void,set,connection,connection,connection,if,this,current,connection,null,this,connection,handle,release,connection,this,current,connection,this,current,connection,null,if,connection,null,this,connection,handle,new,simple,connection,handle,connection,else,this,connection,handle,null
ConnectionHolder -> public Savepoint createSavepoint() throws SQLException;1328020251;Create a new JDBC 3.0 Savepoint for the current Connection,_using generated savepoint names that are unique for the Connection._@return the new Savepoint_@throws SQLException if thrown by the JDBC driver;public Savepoint createSavepoint() throws SQLException {_		this.savepointCounter++__		return getConnection().setSavepoint(SAVEPOINT_NAME_PREFIX + this.savepointCounter)__	};create,a,new,jdbc,3,0,savepoint,for,the,current,connection,using,generated,savepoint,names,that,are,unique,for,the,connection,return,the,new,savepoint,throws,sqlexception,if,thrown,by,the,jdbc,driver;public,savepoint,create,savepoint,throws,sqlexception,this,savepoint,counter,return,get,connection,set,savepoint,this,savepoint,counter
ConnectionHolder -> public Savepoint createSavepoint() throws SQLException;1356735495;Create a new JDBC 3.0 Savepoint for the current Connection,_using generated savepoint names that are unique for the Connection._@return the new Savepoint_@throws SQLException if thrown by the JDBC driver;public Savepoint createSavepoint() throws SQLException {_		this.savepointCounter++__		return getConnection().setSavepoint(SAVEPOINT_NAME_PREFIX + this.savepointCounter)__	};create,a,new,jdbc,3,0,savepoint,for,the,current,connection,using,generated,savepoint,names,that,are,unique,for,the,connection,return,the,new,savepoint,throws,sqlexception,if,thrown,by,the,jdbc,driver;public,savepoint,create,savepoint,throws,sqlexception,this,savepoint,counter,return,get,connection,set,savepoint,this,savepoint,counter
ConnectionHolder -> public Savepoint createSavepoint() throws SQLException;1467668088;Create a new JDBC 3.0 Savepoint for the current Connection,_using generated savepoint names that are unique for the Connection._@return the new Savepoint_@throws SQLException if thrown by the JDBC driver;public Savepoint createSavepoint() throws SQLException {_		this.savepointCounter++__		return getConnection().setSavepoint(SAVEPOINT_NAME_PREFIX + this.savepointCounter)__	};create,a,new,jdbc,3,0,savepoint,for,the,current,connection,using,generated,savepoint,names,that,are,unique,for,the,connection,return,the,new,savepoint,throws,sqlexception,if,thrown,by,the,jdbc,driver;public,savepoint,create,savepoint,throws,sqlexception,this,savepoint,counter,return,get,connection,set,savepoint,this,savepoint,counter
ConnectionHolder -> public Savepoint createSavepoint() throws SQLException;1468949155;Create a new JDBC 3.0 Savepoint for the current Connection,_using generated savepoint names that are unique for the Connection._@return the new Savepoint_@throws SQLException if thrown by the JDBC driver;public Savepoint createSavepoint() throws SQLException {_		this.savepointCounter++__		return getConnection().setSavepoint(SAVEPOINT_NAME_PREFIX + this.savepointCounter)__	};create,a,new,jdbc,3,0,savepoint,for,the,current,connection,using,generated,savepoint,names,that,are,unique,for,the,connection,return,the,new,savepoint,throws,sqlexception,if,thrown,by,the,jdbc,driver;public,savepoint,create,savepoint,throws,sqlexception,this,savepoint,counter,return,get,connection,set,savepoint,this,savepoint,counter
ConnectionHolder -> public Savepoint createSavepoint() throws SQLException;1495868221;Create a new JDBC 3.0 Savepoint for the current Connection,_using generated savepoint names that are unique for the Connection._@return the new Savepoint_@throws SQLException if thrown by the JDBC driver;public Savepoint createSavepoint() throws SQLException {_		this.savepointCounter++__		return getConnection().setSavepoint(SAVEPOINT_NAME_PREFIX + this.savepointCounter)__	};create,a,new,jdbc,3,0,savepoint,for,the,current,connection,using,generated,savepoint,names,that,are,unique,for,the,connection,return,the,new,savepoint,throws,sqlexception,if,thrown,by,the,jdbc,driver;public,savepoint,create,savepoint,throws,sqlexception,this,savepoint,counter,return,get,connection,set,savepoint,this,savepoint,counter
ConnectionHolder -> public Savepoint createSavepoint() throws SQLException;1498780456;Create a new JDBC 3.0 Savepoint for the current Connection,_using generated savepoint names that are unique for the Connection._@return the new Savepoint_@throws SQLException if thrown by the JDBC driver;public Savepoint createSavepoint() throws SQLException {_		this.savepointCounter++__		return getConnection().setSavepoint(SAVEPOINT_NAME_PREFIX + this.savepointCounter)__	};create,a,new,jdbc,3,0,savepoint,for,the,current,connection,using,generated,savepoint,names,that,are,unique,for,the,connection,return,the,new,savepoint,throws,sqlexception,if,thrown,by,the,jdbc,driver;public,savepoint,create,savepoint,throws,sqlexception,this,savepoint,counter,return,get,connection,set,savepoint,this,savepoint,counter
ConnectionHolder -> public Savepoint createSavepoint() throws SQLException;1530174524;Create a new JDBC 3.0 Savepoint for the current Connection,_using generated savepoint names that are unique for the Connection._@return the new Savepoint_@throws SQLException if thrown by the JDBC driver;public Savepoint createSavepoint() throws SQLException {_		this.savepointCounter++__		return getConnection().setSavepoint(SAVEPOINT_NAME_PREFIX + this.savepointCounter)__	};create,a,new,jdbc,3,0,savepoint,for,the,current,connection,using,generated,savepoint,names,that,are,unique,for,the,connection,return,the,new,savepoint,throws,sqlexception,if,thrown,by,the,jdbc,driver;public,savepoint,create,savepoint,throws,sqlexception,this,savepoint,counter,return,get,connection,set,savepoint,this,savepoint,counter
ConnectionHolder -> public Savepoint createSavepoint() throws SQLException;1530709637;Create a new JDBC 3.0 Savepoint for the current Connection,_using generated savepoint names that are unique for the Connection._@return the new Savepoint_@throws SQLException if thrown by the JDBC driver;public Savepoint createSavepoint() throws SQLException {_		this.savepointCounter++__		return getConnection().setSavepoint(SAVEPOINT_NAME_PREFIX + this.savepointCounter)__	};create,a,new,jdbc,3,0,savepoint,for,the,current,connection,using,generated,savepoint,names,that,are,unique,for,the,connection,return,the,new,savepoint,throws,sqlexception,if,thrown,by,the,jdbc,driver;public,savepoint,create,savepoint,throws,sqlexception,this,savepoint,counter,return,get,connection,set,savepoint,this,savepoint,counter
ConnectionHolder -> public Savepoint createSavepoint() throws SQLException;1530725007;Create a new JDBC 3.0 Savepoint for the current Connection,_using generated savepoint names that are unique for the Connection._@return the new Savepoint_@throws SQLException if thrown by the JDBC driver;public Savepoint createSavepoint() throws SQLException {_		this.savepointCounter++__		return getConnection().setSavepoint(SAVEPOINT_NAME_PREFIX + this.savepointCounter)__	};create,a,new,jdbc,3,0,savepoint,for,the,current,connection,using,generated,savepoint,names,that,are,unique,for,the,connection,return,the,new,savepoint,throws,sqlexception,if,thrown,by,the,jdbc,driver;public,savepoint,create,savepoint,throws,sqlexception,this,savepoint,counter,return,get,connection,set,savepoint,this,savepoint,counter
ConnectionHolder -> @Nullable 	public ConnectionHandle getConnectionHandle();1498780456;Return the ConnectionHandle held by this ConnectionHolder.;@Nullable_	public ConnectionHandle getConnectionHandle() {_		return this.connectionHandle__	};return,the,connection,handle,held,by,this,connection,holder;nullable,public,connection,handle,get,connection,handle,return,this,connection,handle
ConnectionHolder -> @Nullable 	public ConnectionHandle getConnectionHandle();1530174524;Return the ConnectionHandle held by this ConnectionHolder.;@Nullable_	public ConnectionHandle getConnectionHandle() {_		return this.connectionHandle__	};return,the,connection,handle,held,by,this,connection,holder;nullable,public,connection,handle,get,connection,handle,return,this,connection,handle
ConnectionHolder -> @Nullable 	public ConnectionHandle getConnectionHandle();1530709637;Return the ConnectionHandle held by this ConnectionHolder.;@Nullable_	public ConnectionHandle getConnectionHandle() {_		return this.connectionHandle__	};return,the,connection,handle,held,by,this,connection,holder;nullable,public,connection,handle,get,connection,handle,return,this,connection,handle
ConnectionHolder -> @Nullable 	public ConnectionHandle getConnectionHandle();1530725007;Return the ConnectionHandle held by this ConnectionHolder.;@Nullable_	public ConnectionHandle getConnectionHandle() {_		return this.connectionHandle__	};return,the,connection,handle,held,by,this,connection,holder;nullable,public,connection,handle,get,connection,handle,return,this,connection,handle
ConnectionHolder -> protected boolean isTransactionActive();1328020251;Return whether this holder represents an active, JDBC-managed transaction.;protected boolean isTransactionActive() {_		return this.transactionActive__	};return,whether,this,holder,represents,an,active,jdbc,managed,transaction;protected,boolean,is,transaction,active,return,this,transaction,active
ConnectionHolder -> protected boolean isTransactionActive();1356735495;Return whether this holder represents an active, JDBC-managed transaction.;protected boolean isTransactionActive() {_		return this.transactionActive__	};return,whether,this,holder,represents,an,active,jdbc,managed,transaction;protected,boolean,is,transaction,active,return,this,transaction,active
ConnectionHolder -> protected boolean isTransactionActive();1467668088;Return whether this holder represents an active, JDBC-managed transaction.;protected boolean isTransactionActive() {_		return this.transactionActive__	};return,whether,this,holder,represents,an,active,jdbc,managed,transaction;protected,boolean,is,transaction,active,return,this,transaction,active
ConnectionHolder -> protected boolean isTransactionActive();1468949155;Return whether this holder represents an active, JDBC-managed transaction.;protected boolean isTransactionActive() {_		return this.transactionActive__	};return,whether,this,holder,represents,an,active,jdbc,managed,transaction;protected,boolean,is,transaction,active,return,this,transaction,active
ConnectionHolder -> protected boolean isTransactionActive();1495868221;Return whether this holder represents an active, JDBC-managed transaction.;protected boolean isTransactionActive() {_		return this.transactionActive__	};return,whether,this,holder,represents,an,active,jdbc,managed,transaction;protected,boolean,is,transaction,active,return,this,transaction,active
ConnectionHolder -> protected boolean isTransactionActive();1498780456;Return whether this holder represents an active, JDBC-managed transaction.;protected boolean isTransactionActive() {_		return this.transactionActive__	};return,whether,this,holder,represents,an,active,jdbc,managed,transaction;protected,boolean,is,transaction,active,return,this,transaction,active
ConnectionHolder -> protected boolean isTransactionActive();1530174524;Return whether this holder represents an active, JDBC-managed transaction.;protected boolean isTransactionActive() {_		return this.transactionActive__	};return,whether,this,holder,represents,an,active,jdbc,managed,transaction;protected,boolean,is,transaction,active,return,this,transaction,active
ConnectionHolder -> protected boolean isTransactionActive();1530709637;Return whether this holder represents an active, JDBC-managed transaction.;protected boolean isTransactionActive() {_		return this.transactionActive__	};return,whether,this,holder,represents,an,active,jdbc,managed,transaction;protected,boolean,is,transaction,active,return,this,transaction,active
ConnectionHolder -> protected boolean isTransactionActive();1530725007;Return whether this holder represents an active, JDBC-managed transaction.;protected boolean isTransactionActive() {_		return this.transactionActive__	};return,whether,this,holder,represents,an,active,jdbc,managed,transaction;protected,boolean,is,transaction,active,return,this,transaction,active
ConnectionHolder -> public boolean supportsSavepoints() throws SQLException;1328020251;Return whether JDBC 3.0 Savepoints are supported._Caches the flag for the lifetime of this ConnectionHolder._@throws SQLException if thrown by the JDBC driver;public boolean supportsSavepoints() throws SQLException {_		if (this.savepointsSupported == null) {_			this.savepointsSupported = new Boolean(getConnection().getMetaData().supportsSavepoints())__		}_		return this.savepointsSupported.booleanValue()__	};return,whether,jdbc,3,0,savepoints,are,supported,caches,the,flag,for,the,lifetime,of,this,connection,holder,throws,sqlexception,if,thrown,by,the,jdbc,driver;public,boolean,supports,savepoints,throws,sqlexception,if,this,savepoints,supported,null,this,savepoints,supported,new,boolean,get,connection,get,meta,data,supports,savepoints,return,this,savepoints,supported,boolean,value
ConnectionHolder -> public boolean supportsSavepoints() throws SQLException;1356735495;Return whether JDBC 3.0 Savepoints are supported._Caches the flag for the lifetime of this ConnectionHolder._@throws SQLException if thrown by the JDBC driver;public boolean supportsSavepoints() throws SQLException {_		if (this.savepointsSupported == null) {_			this.savepointsSupported = new Boolean(getConnection().getMetaData().supportsSavepoints())__		}_		return this.savepointsSupported.booleanValue()__	};return,whether,jdbc,3,0,savepoints,are,supported,caches,the,flag,for,the,lifetime,of,this,connection,holder,throws,sqlexception,if,thrown,by,the,jdbc,driver;public,boolean,supports,savepoints,throws,sqlexception,if,this,savepoints,supported,null,this,savepoints,supported,new,boolean,get,connection,get,meta,data,supports,savepoints,return,this,savepoints,supported,boolean,value
ConnectionHolder -> public boolean supportsSavepoints() throws SQLException;1467668088;Return whether JDBC 3.0 Savepoints are supported._Caches the flag for the lifetime of this ConnectionHolder._@throws SQLException if thrown by the JDBC driver;public boolean supportsSavepoints() throws SQLException {_		if (this.savepointsSupported == null) {_			this.savepointsSupported = new Boolean(getConnection().getMetaData().supportsSavepoints())__		}_		return this.savepointsSupported.booleanValue()__	};return,whether,jdbc,3,0,savepoints,are,supported,caches,the,flag,for,the,lifetime,of,this,connection,holder,throws,sqlexception,if,thrown,by,the,jdbc,driver;public,boolean,supports,savepoints,throws,sqlexception,if,this,savepoints,supported,null,this,savepoints,supported,new,boolean,get,connection,get,meta,data,supports,savepoints,return,this,savepoints,supported,boolean,value
ConnectionHolder -> public boolean supportsSavepoints() throws SQLException;1468949155;Return whether JDBC 3.0 Savepoints are supported._Caches the flag for the lifetime of this ConnectionHolder._@throws SQLException if thrown by the JDBC driver;public boolean supportsSavepoints() throws SQLException {_		if (this.savepointsSupported == null) {_			this.savepointsSupported = getConnection().getMetaData().supportsSavepoints()__		}_		return this.savepointsSupported__	};return,whether,jdbc,3,0,savepoints,are,supported,caches,the,flag,for,the,lifetime,of,this,connection,holder,throws,sqlexception,if,thrown,by,the,jdbc,driver;public,boolean,supports,savepoints,throws,sqlexception,if,this,savepoints,supported,null,this,savepoints,supported,get,connection,get,meta,data,supports,savepoints,return,this,savepoints,supported
ConnectionHolder -> public boolean supportsSavepoints() throws SQLException;1495868221;Return whether JDBC 3.0 Savepoints are supported._Caches the flag for the lifetime of this ConnectionHolder._@throws SQLException if thrown by the JDBC driver;public boolean supportsSavepoints() throws SQLException {_		if (this.savepointsSupported == null) {_			this.savepointsSupported = getConnection().getMetaData().supportsSavepoints()__		}_		return this.savepointsSupported__	};return,whether,jdbc,3,0,savepoints,are,supported,caches,the,flag,for,the,lifetime,of,this,connection,holder,throws,sqlexception,if,thrown,by,the,jdbc,driver;public,boolean,supports,savepoints,throws,sqlexception,if,this,savepoints,supported,null,this,savepoints,supported,get,connection,get,meta,data,supports,savepoints,return,this,savepoints,supported
ConnectionHolder -> public boolean supportsSavepoints() throws SQLException;1498780456;Return whether JDBC 3.0 Savepoints are supported._Caches the flag for the lifetime of this ConnectionHolder._@throws SQLException if thrown by the JDBC driver;public boolean supportsSavepoints() throws SQLException {_		if (this.savepointsSupported == null) {_			this.savepointsSupported = getConnection().getMetaData().supportsSavepoints()__		}_		return this.savepointsSupported__	};return,whether,jdbc,3,0,savepoints,are,supported,caches,the,flag,for,the,lifetime,of,this,connection,holder,throws,sqlexception,if,thrown,by,the,jdbc,driver;public,boolean,supports,savepoints,throws,sqlexception,if,this,savepoints,supported,null,this,savepoints,supported,get,connection,get,meta,data,supports,savepoints,return,this,savepoints,supported
ConnectionHolder -> public boolean supportsSavepoints() throws SQLException;1530174524;Return whether JDBC 3.0 Savepoints are supported._Caches the flag for the lifetime of this ConnectionHolder._@throws SQLException if thrown by the JDBC driver;public boolean supportsSavepoints() throws SQLException {_		if (this.savepointsSupported == null) {_			this.savepointsSupported = getConnection().getMetaData().supportsSavepoints()__		}_		return this.savepointsSupported__	};return,whether,jdbc,3,0,savepoints,are,supported,caches,the,flag,for,the,lifetime,of,this,connection,holder,throws,sqlexception,if,thrown,by,the,jdbc,driver;public,boolean,supports,savepoints,throws,sqlexception,if,this,savepoints,supported,null,this,savepoints,supported,get,connection,get,meta,data,supports,savepoints,return,this,savepoints,supported
ConnectionHolder -> public boolean supportsSavepoints() throws SQLException;1530709637;Return whether JDBC 3.0 Savepoints are supported._Caches the flag for the lifetime of this ConnectionHolder._@throws SQLException if thrown by the JDBC driver;public boolean supportsSavepoints() throws SQLException {_		if (this.savepointsSupported == null) {_			this.savepointsSupported = getConnection().getMetaData().supportsSavepoints()__		}_		return this.savepointsSupported__	};return,whether,jdbc,3,0,savepoints,are,supported,caches,the,flag,for,the,lifetime,of,this,connection,holder,throws,sqlexception,if,thrown,by,the,jdbc,driver;public,boolean,supports,savepoints,throws,sqlexception,if,this,savepoints,supported,null,this,savepoints,supported,get,connection,get,meta,data,supports,savepoints,return,this,savepoints,supported
ConnectionHolder -> public boolean supportsSavepoints() throws SQLException;1530725007;Return whether JDBC 3.0 Savepoints are supported._Caches the flag for the lifetime of this ConnectionHolder._@throws SQLException if thrown by the JDBC driver;public boolean supportsSavepoints() throws SQLException {_		if (this.savepointsSupported == null) {_			this.savepointsSupported = getConnection().getMetaData().supportsSavepoints()__		}_		return this.savepointsSupported__	};return,whether,jdbc,3,0,savepoints,are,supported,caches,the,flag,for,the,lifetime,of,this,connection,holder,throws,sqlexception,if,thrown,by,the,jdbc,driver;public,boolean,supports,savepoints,throws,sqlexception,if,this,savepoints,supported,null,this,savepoints,supported,get,connection,get,meta,data,supports,savepoints,return,this,savepoints,supported
ConnectionHolder -> public ConnectionHolder(Connection connection);1328020251;Create a new ConnectionHolder for the given JDBC Connection,_wrapping it with a {@link SimpleConnectionHandle},_assuming that there is no ongoing transaction._@param connection the JDBC Connection to hold_@see SimpleConnectionHandle_@see #ConnectionHolder(java.sql.Connection, boolean);public ConnectionHolder(Connection connection) {_		this.connectionHandle = new SimpleConnectionHandle(connection)__	};create,a,new,connection,holder,for,the,given,jdbc,connection,wrapping,it,with,a,link,simple,connection,handle,assuming,that,there,is,no,ongoing,transaction,param,connection,the,jdbc,connection,to,hold,see,simple,connection,handle,see,connection,holder,java,sql,connection,boolean;public,connection,holder,connection,connection,this,connection,handle,new,simple,connection,handle,connection
ConnectionHolder -> public ConnectionHolder(Connection connection);1356735495;Create a new ConnectionHolder for the given JDBC Connection,_wrapping it with a {@link SimpleConnectionHandle},_assuming that there is no ongoing transaction._@param connection the JDBC Connection to hold_@see SimpleConnectionHandle_@see #ConnectionHolder(java.sql.Connection, boolean);public ConnectionHolder(Connection connection) {_		this.connectionHandle = new SimpleConnectionHandle(connection)__	};create,a,new,connection,holder,for,the,given,jdbc,connection,wrapping,it,with,a,link,simple,connection,handle,assuming,that,there,is,no,ongoing,transaction,param,connection,the,jdbc,connection,to,hold,see,simple,connection,handle,see,connection,holder,java,sql,connection,boolean;public,connection,holder,connection,connection,this,connection,handle,new,simple,connection,handle,connection
ConnectionHolder -> public ConnectionHolder(Connection connection);1467668088;Create a new ConnectionHolder for the given JDBC Connection,_wrapping it with a {@link SimpleConnectionHandle},_assuming that there is no ongoing transaction._@param connection the JDBC Connection to hold_@see SimpleConnectionHandle_@see #ConnectionHolder(java.sql.Connection, boolean);public ConnectionHolder(Connection connection) {_		this.connectionHandle = new SimpleConnectionHandle(connection)__	};create,a,new,connection,holder,for,the,given,jdbc,connection,wrapping,it,with,a,link,simple,connection,handle,assuming,that,there,is,no,ongoing,transaction,param,connection,the,jdbc,connection,to,hold,see,simple,connection,handle,see,connection,holder,java,sql,connection,boolean;public,connection,holder,connection,connection,this,connection,handle,new,simple,connection,handle,connection
ConnectionHolder -> public ConnectionHolder(Connection connection);1468949155;Create a new ConnectionHolder for the given JDBC Connection,_wrapping it with a {@link SimpleConnectionHandle},_assuming that there is no ongoing transaction._@param connection the JDBC Connection to hold_@see SimpleConnectionHandle_@see #ConnectionHolder(java.sql.Connection, boolean);public ConnectionHolder(Connection connection) {_		this.connectionHandle = new SimpleConnectionHandle(connection)__	};create,a,new,connection,holder,for,the,given,jdbc,connection,wrapping,it,with,a,link,simple,connection,handle,assuming,that,there,is,no,ongoing,transaction,param,connection,the,jdbc,connection,to,hold,see,simple,connection,handle,see,connection,holder,java,sql,connection,boolean;public,connection,holder,connection,connection,this,connection,handle,new,simple,connection,handle,connection
ConnectionHolder -> public ConnectionHolder(Connection connection);1495868221;Create a new ConnectionHolder for the given JDBC Connection,_wrapping it with a {@link SimpleConnectionHandle},_assuming that there is no ongoing transaction._@param connection the JDBC Connection to hold_@see SimpleConnectionHandle_@see #ConnectionHolder(java.sql.Connection, boolean);public ConnectionHolder(Connection connection) {_		this.connectionHandle = new SimpleConnectionHandle(connection)__	};create,a,new,connection,holder,for,the,given,jdbc,connection,wrapping,it,with,a,link,simple,connection,handle,assuming,that,there,is,no,ongoing,transaction,param,connection,the,jdbc,connection,to,hold,see,simple,connection,handle,see,connection,holder,java,sql,connection,boolean;public,connection,holder,connection,connection,this,connection,handle,new,simple,connection,handle,connection
ConnectionHolder -> public ConnectionHolder(Connection connection);1498780456;Create a new ConnectionHolder for the given JDBC Connection,_wrapping it with a {@link SimpleConnectionHandle},_assuming that there is no ongoing transaction._@param connection the JDBC Connection to hold_@see SimpleConnectionHandle_@see #ConnectionHolder(java.sql.Connection, boolean);public ConnectionHolder(Connection connection) {_		this.connectionHandle = new SimpleConnectionHandle(connection)__	};create,a,new,connection,holder,for,the,given,jdbc,connection,wrapping,it,with,a,link,simple,connection,handle,assuming,that,there,is,no,ongoing,transaction,param,connection,the,jdbc,connection,to,hold,see,simple,connection,handle,see,connection,holder,java,sql,connection,boolean;public,connection,holder,connection,connection,this,connection,handle,new,simple,connection,handle,connection
ConnectionHolder -> public ConnectionHolder(Connection connection);1530174524;Create a new ConnectionHolder for the given JDBC Connection,_wrapping it with a {@link SimpleConnectionHandle},_assuming that there is no ongoing transaction._@param connection the JDBC Connection to hold_@see SimpleConnectionHandle_@see #ConnectionHolder(java.sql.Connection, boolean);public ConnectionHolder(Connection connection) {_		this.connectionHandle = new SimpleConnectionHandle(connection)__	};create,a,new,connection,holder,for,the,given,jdbc,connection,wrapping,it,with,a,link,simple,connection,handle,assuming,that,there,is,no,ongoing,transaction,param,connection,the,jdbc,connection,to,hold,see,simple,connection,handle,see,connection,holder,java,sql,connection,boolean;public,connection,holder,connection,connection,this,connection,handle,new,simple,connection,handle,connection
ConnectionHolder -> public ConnectionHolder(Connection connection);1530709637;Create a new ConnectionHolder for the given JDBC Connection,_wrapping it with a {@link SimpleConnectionHandle},_assuming that there is no ongoing transaction._@param connection the JDBC Connection to hold_@see SimpleConnectionHandle_@see #ConnectionHolder(java.sql.Connection, boolean);public ConnectionHolder(Connection connection) {_		this.connectionHandle = new SimpleConnectionHandle(connection)__	};create,a,new,connection,holder,for,the,given,jdbc,connection,wrapping,it,with,a,link,simple,connection,handle,assuming,that,there,is,no,ongoing,transaction,param,connection,the,jdbc,connection,to,hold,see,simple,connection,handle,see,connection,holder,java,sql,connection,boolean;public,connection,holder,connection,connection,this,connection,handle,new,simple,connection,handle,connection
ConnectionHolder -> public ConnectionHolder(Connection connection);1530725007;Create a new ConnectionHolder for the given JDBC Connection,_wrapping it with a {@link SimpleConnectionHandle},_assuming that there is no ongoing transaction._@param connection the JDBC Connection to hold_@see SimpleConnectionHandle_@see #ConnectionHolder(java.sql.Connection, boolean);public ConnectionHolder(Connection connection) {_		this.connectionHandle = new SimpleConnectionHandle(connection)__	};create,a,new,connection,holder,for,the,given,jdbc,connection,wrapping,it,with,a,link,simple,connection,handle,assuming,that,there,is,no,ongoing,transaction,param,connection,the,jdbc,connection,to,hold,see,simple,connection,handle,see,connection,holder,java,sql,connection,boolean;public,connection,holder,connection,connection,this,connection,handle,new,simple,connection,handle,connection
ConnectionHolder -> public ConnectionHandle getConnectionHandle();1328020251;Return the ConnectionHandle held by this ConnectionHolder.;public ConnectionHandle getConnectionHandle() {_		return this.connectionHandle__	};return,the,connection,handle,held,by,this,connection,holder;public,connection,handle,get,connection,handle,return,this,connection,handle
ConnectionHolder -> public ConnectionHandle getConnectionHandle();1356735495;Return the ConnectionHandle held by this ConnectionHolder.;public ConnectionHandle getConnectionHandle() {_		return this.connectionHandle__	};return,the,connection,handle,held,by,this,connection,holder;public,connection,handle,get,connection,handle,return,this,connection,handle
ConnectionHolder -> public ConnectionHandle getConnectionHandle();1467668088;Return the ConnectionHandle held by this ConnectionHolder.;public ConnectionHandle getConnectionHandle() {_		return this.connectionHandle__	};return,the,connection,handle,held,by,this,connection,holder;public,connection,handle,get,connection,handle,return,this,connection,handle
ConnectionHolder -> public ConnectionHandle getConnectionHandle();1468949155;Return the ConnectionHandle held by this ConnectionHolder.;public ConnectionHandle getConnectionHandle() {_		return this.connectionHandle__	};return,the,connection,handle,held,by,this,connection,holder;public,connection,handle,get,connection,handle,return,this,connection,handle
ConnectionHolder -> public ConnectionHandle getConnectionHandle();1495868221;Return the ConnectionHandle held by this ConnectionHolder.;public ConnectionHandle getConnectionHandle() {_		return this.connectionHandle__	};return,the,connection,handle,held,by,this,connection,holder;public,connection,handle,get,connection,handle,return,this,connection,handle
ConnectionHolder -> public Connection getConnection();1328020251;Return the current Connection held by this ConnectionHolder._<p>This will be the same Connection until <code>released</code>_gets called on the ConnectionHolder, which will reset the_held Connection, fetching a new Connection on demand._@see ConnectionHandle#getConnection()_@see #released();public Connection getConnection() {_		Assert.notNull(this.connectionHandle, "Active Connection is required")__		if (this.currentConnection == null) {_			this.currentConnection = this.connectionHandle.getConnection()__		}_		return this.currentConnection__	};return,the,current,connection,held,by,this,connection,holder,p,this,will,be,the,same,connection,until,code,released,code,gets,called,on,the,connection,holder,which,will,reset,the,held,connection,fetching,a,new,connection,on,demand,see,connection,handle,get,connection,see,released;public,connection,get,connection,assert,not,null,this,connection,handle,active,connection,is,required,if,this,current,connection,null,this,current,connection,this,connection,handle,get,connection,return,this,current,connection
ConnectionHolder -> public Connection getConnection();1356735495;Return the current Connection held by this ConnectionHolder._<p>This will be the same Connection until {@code released}_gets called on the ConnectionHolder, which will reset the_held Connection, fetching a new Connection on demand._@see ConnectionHandle#getConnection()_@see #released();public Connection getConnection() {_		Assert.notNull(this.connectionHandle, "Active Connection is required")__		if (this.currentConnection == null) {_			this.currentConnection = this.connectionHandle.getConnection()__		}_		return this.currentConnection__	};return,the,current,connection,held,by,this,connection,holder,p,this,will,be,the,same,connection,until,code,released,gets,called,on,the,connection,holder,which,will,reset,the,held,connection,fetching,a,new,connection,on,demand,see,connection,handle,get,connection,see,released;public,connection,get,connection,assert,not,null,this,connection,handle,active,connection,is,required,if,this,current,connection,null,this,current,connection,this,connection,handle,get,connection,return,this,current,connection
ConnectionHolder -> public Connection getConnection();1467668088;Return the current Connection held by this ConnectionHolder._<p>This will be the same Connection until {@code released}_gets called on the ConnectionHolder, which will reset the_held Connection, fetching a new Connection on demand._@see ConnectionHandle#getConnection()_@see #released();public Connection getConnection() {_		Assert.notNull(this.connectionHandle, "Active Connection is required")__		if (this.currentConnection == null) {_			this.currentConnection = this.connectionHandle.getConnection()__		}_		return this.currentConnection__	};return,the,current,connection,held,by,this,connection,holder,p,this,will,be,the,same,connection,until,code,released,gets,called,on,the,connection,holder,which,will,reset,the,held,connection,fetching,a,new,connection,on,demand,see,connection,handle,get,connection,see,released;public,connection,get,connection,assert,not,null,this,connection,handle,active,connection,is,required,if,this,current,connection,null,this,current,connection,this,connection,handle,get,connection,return,this,current,connection
ConnectionHolder -> public Connection getConnection();1468949155;Return the current Connection held by this ConnectionHolder._<p>This will be the same Connection until {@code released}_gets called on the ConnectionHolder, which will reset the_held Connection, fetching a new Connection on demand._@see ConnectionHandle#getConnection()_@see #released();public Connection getConnection() {_		Assert.notNull(this.connectionHandle, "Active Connection is required")__		if (this.currentConnection == null) {_			this.currentConnection = this.connectionHandle.getConnection()__		}_		return this.currentConnection__	};return,the,current,connection,held,by,this,connection,holder,p,this,will,be,the,same,connection,until,code,released,gets,called,on,the,connection,holder,which,will,reset,the,held,connection,fetching,a,new,connection,on,demand,see,connection,handle,get,connection,see,released;public,connection,get,connection,assert,not,null,this,connection,handle,active,connection,is,required,if,this,current,connection,null,this,current,connection,this,connection,handle,get,connection,return,this,current,connection
ConnectionHolder -> public Connection getConnection();1495868221;Return the current Connection held by this ConnectionHolder._<p>This will be the same Connection until {@code released}_gets called on the ConnectionHolder, which will reset the_held Connection, fetching a new Connection on demand._@see ConnectionHandle#getConnection()_@see #released();public Connection getConnection() {_		Assert.notNull(this.connectionHandle, "Active Connection is required")__		if (this.currentConnection == null) {_			this.currentConnection = this.connectionHandle.getConnection()__		}_		return this.currentConnection__	};return,the,current,connection,held,by,this,connection,holder,p,this,will,be,the,same,connection,until,code,released,gets,called,on,the,connection,holder,which,will,reset,the,held,connection,fetching,a,new,connection,on,demand,see,connection,handle,get,connection,see,released;public,connection,get,connection,assert,not,null,this,connection,handle,active,connection,is,required,if,this,current,connection,null,this,current,connection,this,connection,handle,get,connection,return,this,current,connection
ConnectionHolder -> public Connection getConnection();1498780456;Return the current Connection held by this ConnectionHolder._<p>This will be the same Connection until {@code released}_gets called on the ConnectionHolder, which will reset the_held Connection, fetching a new Connection on demand._@see ConnectionHandle#getConnection()_@see #released();public Connection getConnection() {_		Assert.notNull(this.connectionHandle, "Active Connection is required")__		if (this.currentConnection == null) {_			this.currentConnection = this.connectionHandle.getConnection()__		}_		return this.currentConnection__	};return,the,current,connection,held,by,this,connection,holder,p,this,will,be,the,same,connection,until,code,released,gets,called,on,the,connection,holder,which,will,reset,the,held,connection,fetching,a,new,connection,on,demand,see,connection,handle,get,connection,see,released;public,connection,get,connection,assert,not,null,this,connection,handle,active,connection,is,required,if,this,current,connection,null,this,current,connection,this,connection,handle,get,connection,return,this,current,connection
ConnectionHolder -> public Connection getConnection();1530174524;Return the current Connection held by this ConnectionHolder._<p>This will be the same Connection until {@code released}_gets called on the ConnectionHolder, which will reset the_held Connection, fetching a new Connection on demand._@see ConnectionHandle#getConnection()_@see #released();public Connection getConnection() {_		Assert.notNull(this.connectionHandle, "Active Connection is required")__		if (this.currentConnection == null) {_			this.currentConnection = this.connectionHandle.getConnection()__		}_		return this.currentConnection__	};return,the,current,connection,held,by,this,connection,holder,p,this,will,be,the,same,connection,until,code,released,gets,called,on,the,connection,holder,which,will,reset,the,held,connection,fetching,a,new,connection,on,demand,see,connection,handle,get,connection,see,released;public,connection,get,connection,assert,not,null,this,connection,handle,active,connection,is,required,if,this,current,connection,null,this,current,connection,this,connection,handle,get,connection,return,this,current,connection
ConnectionHolder -> public Connection getConnection();1530709637;Return the current Connection held by this ConnectionHolder._<p>This will be the same Connection until {@code released}_gets called on the ConnectionHolder, which will reset the_held Connection, fetching a new Connection on demand._@see ConnectionHandle#getConnection()_@see #released();public Connection getConnection() {_		Assert.notNull(this.connectionHandle, "Active Connection is required")__		if (this.currentConnection == null) {_			this.currentConnection = this.connectionHandle.getConnection()__		}_		return this.currentConnection__	};return,the,current,connection,held,by,this,connection,holder,p,this,will,be,the,same,connection,until,code,released,gets,called,on,the,connection,holder,which,will,reset,the,held,connection,fetching,a,new,connection,on,demand,see,connection,handle,get,connection,see,released;public,connection,get,connection,assert,not,null,this,connection,handle,active,connection,is,required,if,this,current,connection,null,this,current,connection,this,connection,handle,get,connection,return,this,current,connection
ConnectionHolder -> public Connection getConnection();1530725007;Return the current Connection held by this ConnectionHolder._<p>This will be the same Connection until {@code released}_gets called on the ConnectionHolder, which will reset the_held Connection, fetching a new Connection on demand._@see ConnectionHandle#getConnection()_@see #released();public Connection getConnection() {_		Assert.notNull(this.connectionHandle, "Active Connection is required")__		if (this.currentConnection == null) {_			this.currentConnection = this.connectionHandle.getConnection()__		}_		return this.currentConnection__	};return,the,current,connection,held,by,this,connection,holder,p,this,will,be,the,same,connection,until,code,released,gets,called,on,the,connection,holder,which,will,reset,the,held,connection,fetching,a,new,connection,on,demand,see,connection,handle,get,connection,see,released;public,connection,get,connection,assert,not,null,this,connection,handle,active,connection,is,required,if,this,current,connection,null,this,current,connection,this,connection,handle,get,connection,return,this,current,connection
ConnectionHolder -> protected void setConnection(@Nullable Connection connection);1495868221;Override the existing Connection handle with the given Connection._Reset the handle if given {@code null}._<p>Used for releasing the Connection on suspend (with a {@code null}_argument) and setting a fresh Connection on resume.;protected void setConnection(@Nullable Connection connection) {_		if (this.currentConnection != null) {_			this.connectionHandle.releaseConnection(this.currentConnection)__			this.currentConnection = null__		}_		if (connection != null) {_			this.connectionHandle = new SimpleConnectionHandle(connection)__		}_		else {_			this.connectionHandle = null__		}_	};override,the,existing,connection,handle,with,the,given,connection,reset,the,handle,if,given,code,null,p,used,for,releasing,the,connection,on,suspend,with,a,code,null,argument,and,setting,a,fresh,connection,on,resume;protected,void,set,connection,nullable,connection,connection,if,this,current,connection,null,this,connection,handle,release,connection,this,current,connection,this,current,connection,null,if,connection,null,this,connection,handle,new,simple,connection,handle,connection,else,this,connection,handle,null
ConnectionHolder -> protected void setConnection(@Nullable Connection connection);1498780456;Override the existing Connection handle with the given Connection._Reset the handle if given {@code null}._<p>Used for releasing the Connection on suspend (with a {@code null}_argument) and setting a fresh Connection on resume.;protected void setConnection(@Nullable Connection connection) {_		if (this.currentConnection != null) {_			if (this.connectionHandle != null) {_				this.connectionHandle.releaseConnection(this.currentConnection)__			}_			this.currentConnection = null__		}_		if (connection != null) {_			this.connectionHandle = new SimpleConnectionHandle(connection)__		}_		else {_			this.connectionHandle = null__		}_	};override,the,existing,connection,handle,with,the,given,connection,reset,the,handle,if,given,code,null,p,used,for,releasing,the,connection,on,suspend,with,a,code,null,argument,and,setting,a,fresh,connection,on,resume;protected,void,set,connection,nullable,connection,connection,if,this,current,connection,null,if,this,connection,handle,null,this,connection,handle,release,connection,this,current,connection,this,current,connection,null,if,connection,null,this,connection,handle,new,simple,connection,handle,connection,else,this,connection,handle,null
ConnectionHolder -> protected void setConnection(@Nullable Connection connection);1530174524;Override the existing Connection handle with the given Connection._Reset the handle if given {@code null}._<p>Used for releasing the Connection on suspend (with a {@code null}_argument) and setting a fresh Connection on resume.;protected void setConnection(@Nullable Connection connection) {_		if (this.currentConnection != null) {_			if (this.connectionHandle != null) {_				this.connectionHandle.releaseConnection(this.currentConnection)__			}_			this.currentConnection = null__		}_		if (connection != null) {_			this.connectionHandle = new SimpleConnectionHandle(connection)__		}_		else {_			this.connectionHandle = null__		}_	};override,the,existing,connection,handle,with,the,given,connection,reset,the,handle,if,given,code,null,p,used,for,releasing,the,connection,on,suspend,with,a,code,null,argument,and,setting,a,fresh,connection,on,resume;protected,void,set,connection,nullable,connection,connection,if,this,current,connection,null,if,this,connection,handle,null,this,connection,handle,release,connection,this,current,connection,this,current,connection,null,if,connection,null,this,connection,handle,new,simple,connection,handle,connection,else,this,connection,handle,null
ConnectionHolder -> protected void setConnection(@Nullable Connection connection);1530709637;Override the existing Connection handle with the given Connection._Reset the handle if given {@code null}._<p>Used for releasing the Connection on suspend (with a {@code null}_argument) and setting a fresh Connection on resume.;protected void setConnection(@Nullable Connection connection) {_		if (this.currentConnection != null) {_			if (this.connectionHandle != null) {_				this.connectionHandle.releaseConnection(this.currentConnection)__			}_			this.currentConnection = null__		}_		if (connection != null) {_			this.connectionHandle = new SimpleConnectionHandle(connection)__		}_		else {_			this.connectionHandle = null__		}_	};override,the,existing,connection,handle,with,the,given,connection,reset,the,handle,if,given,code,null,p,used,for,releasing,the,connection,on,suspend,with,a,code,null,argument,and,setting,a,fresh,connection,on,resume;protected,void,set,connection,nullable,connection,connection,if,this,current,connection,null,if,this,connection,handle,null,this,connection,handle,release,connection,this,current,connection,this,current,connection,null,if,connection,null,this,connection,handle,new,simple,connection,handle,connection,else,this,connection,handle,null
ConnectionHolder -> protected void setConnection(@Nullable Connection connection);1530725007;Override the existing Connection handle with the given Connection._Reset the handle if given {@code null}._<p>Used for releasing the Connection on suspend (with a {@code null}_argument) and setting a fresh Connection on resume.;protected void setConnection(@Nullable Connection connection) {_		if (this.currentConnection != null) {_			if (this.connectionHandle != null) {_				this.connectionHandle.releaseConnection(this.currentConnection)__			}_			this.currentConnection = null__		}_		if (connection != null) {_			this.connectionHandle = new SimpleConnectionHandle(connection)__		}_		else {_			this.connectionHandle = null__		}_	};override,the,existing,connection,handle,with,the,given,connection,reset,the,handle,if,given,code,null,p,used,for,releasing,the,connection,on,suspend,with,a,code,null,argument,and,setting,a,fresh,connection,on,resume;protected,void,set,connection,nullable,connection,connection,if,this,current,connection,null,if,this,connection,handle,null,this,connection,handle,release,connection,this,current,connection,this,current,connection,null,if,connection,null,this,connection,handle,new,simple,connection,handle,connection,else,this,connection,handle,null
ConnectionHolder -> public ConnectionHolder(Connection connection, boolean transactionActive);1328020251;Create a new ConnectionHolder for the given JDBC Connection,_wrapping it with a {@link SimpleConnectionHandle}._@param connection the JDBC Connection to hold_@param transactionActive whether the given Connection is involved_in an ongoing transaction_@see SimpleConnectionHandle;public ConnectionHolder(Connection connection, boolean transactionActive) {_		this(connection)__		this.transactionActive = transactionActive__	};create,a,new,connection,holder,for,the,given,jdbc,connection,wrapping,it,with,a,link,simple,connection,handle,param,connection,the,jdbc,connection,to,hold,param,transaction,active,whether,the,given,connection,is,involved,in,an,ongoing,transaction,see,simple,connection,handle;public,connection,holder,connection,connection,boolean,transaction,active,this,connection,this,transaction,active,transaction,active
ConnectionHolder -> public ConnectionHolder(Connection connection, boolean transactionActive);1356735495;Create a new ConnectionHolder for the given JDBC Connection,_wrapping it with a {@link SimpleConnectionHandle}._@param connection the JDBC Connection to hold_@param transactionActive whether the given Connection is involved_in an ongoing transaction_@see SimpleConnectionHandle;public ConnectionHolder(Connection connection, boolean transactionActive) {_		this(connection)__		this.transactionActive = transactionActive__	};create,a,new,connection,holder,for,the,given,jdbc,connection,wrapping,it,with,a,link,simple,connection,handle,param,connection,the,jdbc,connection,to,hold,param,transaction,active,whether,the,given,connection,is,involved,in,an,ongoing,transaction,see,simple,connection,handle;public,connection,holder,connection,connection,boolean,transaction,active,this,connection,this,transaction,active,transaction,active
ConnectionHolder -> public ConnectionHolder(Connection connection, boolean transactionActive);1467668088;Create a new ConnectionHolder for the given JDBC Connection,_wrapping it with a {@link SimpleConnectionHandle}._@param connection the JDBC Connection to hold_@param transactionActive whether the given Connection is involved_in an ongoing transaction_@see SimpleConnectionHandle;public ConnectionHolder(Connection connection, boolean transactionActive) {_		this(connection)__		this.transactionActive = transactionActive__	};create,a,new,connection,holder,for,the,given,jdbc,connection,wrapping,it,with,a,link,simple,connection,handle,param,connection,the,jdbc,connection,to,hold,param,transaction,active,whether,the,given,connection,is,involved,in,an,ongoing,transaction,see,simple,connection,handle;public,connection,holder,connection,connection,boolean,transaction,active,this,connection,this,transaction,active,transaction,active
ConnectionHolder -> public ConnectionHolder(Connection connection, boolean transactionActive);1468949155;Create a new ConnectionHolder for the given JDBC Connection,_wrapping it with a {@link SimpleConnectionHandle}._@param connection the JDBC Connection to hold_@param transactionActive whether the given Connection is involved_in an ongoing transaction_@see SimpleConnectionHandle;public ConnectionHolder(Connection connection, boolean transactionActive) {_		this(connection)__		this.transactionActive = transactionActive__	};create,a,new,connection,holder,for,the,given,jdbc,connection,wrapping,it,with,a,link,simple,connection,handle,param,connection,the,jdbc,connection,to,hold,param,transaction,active,whether,the,given,connection,is,involved,in,an,ongoing,transaction,see,simple,connection,handle;public,connection,holder,connection,connection,boolean,transaction,active,this,connection,this,transaction,active,transaction,active
ConnectionHolder -> public ConnectionHolder(Connection connection, boolean transactionActive);1495868221;Create a new ConnectionHolder for the given JDBC Connection,_wrapping it with a {@link SimpleConnectionHandle}._@param connection the JDBC Connection to hold_@param transactionActive whether the given Connection is involved_in an ongoing transaction_@see SimpleConnectionHandle;public ConnectionHolder(Connection connection, boolean transactionActive) {_		this(connection)__		this.transactionActive = transactionActive__	};create,a,new,connection,holder,for,the,given,jdbc,connection,wrapping,it,with,a,link,simple,connection,handle,param,connection,the,jdbc,connection,to,hold,param,transaction,active,whether,the,given,connection,is,involved,in,an,ongoing,transaction,see,simple,connection,handle;public,connection,holder,connection,connection,boolean,transaction,active,this,connection,this,transaction,active,transaction,active
ConnectionHolder -> public ConnectionHolder(Connection connection, boolean transactionActive);1498780456;Create a new ConnectionHolder for the given JDBC Connection,_wrapping it with a {@link SimpleConnectionHandle}._@param connection the JDBC Connection to hold_@param transactionActive whether the given Connection is involved_in an ongoing transaction_@see SimpleConnectionHandle;public ConnectionHolder(Connection connection, boolean transactionActive) {_		this(connection)__		this.transactionActive = transactionActive__	};create,a,new,connection,holder,for,the,given,jdbc,connection,wrapping,it,with,a,link,simple,connection,handle,param,connection,the,jdbc,connection,to,hold,param,transaction,active,whether,the,given,connection,is,involved,in,an,ongoing,transaction,see,simple,connection,handle;public,connection,holder,connection,connection,boolean,transaction,active,this,connection,this,transaction,active,transaction,active
ConnectionHolder -> public ConnectionHolder(Connection connection, boolean transactionActive);1530174524;Create a new ConnectionHolder for the given JDBC Connection,_wrapping it with a {@link SimpleConnectionHandle}._@param connection the JDBC Connection to hold_@param transactionActive whether the given Connection is involved_in an ongoing transaction_@see SimpleConnectionHandle;public ConnectionHolder(Connection connection, boolean transactionActive) {_		this(connection)__		this.transactionActive = transactionActive__	};create,a,new,connection,holder,for,the,given,jdbc,connection,wrapping,it,with,a,link,simple,connection,handle,param,connection,the,jdbc,connection,to,hold,param,transaction,active,whether,the,given,connection,is,involved,in,an,ongoing,transaction,see,simple,connection,handle;public,connection,holder,connection,connection,boolean,transaction,active,this,connection,this,transaction,active,transaction,active
ConnectionHolder -> public ConnectionHolder(Connection connection, boolean transactionActive);1530709637;Create a new ConnectionHolder for the given JDBC Connection,_wrapping it with a {@link SimpleConnectionHandle}._@param connection the JDBC Connection to hold_@param transactionActive whether the given Connection is involved_in an ongoing transaction_@see SimpleConnectionHandle;public ConnectionHolder(Connection connection, boolean transactionActive) {_		this(connection)__		this.transactionActive = transactionActive__	};create,a,new,connection,holder,for,the,given,jdbc,connection,wrapping,it,with,a,link,simple,connection,handle,param,connection,the,jdbc,connection,to,hold,param,transaction,active,whether,the,given,connection,is,involved,in,an,ongoing,transaction,see,simple,connection,handle;public,connection,holder,connection,connection,boolean,transaction,active,this,connection,this,transaction,active,transaction,active
ConnectionHolder -> public ConnectionHolder(Connection connection, boolean transactionActive);1530725007;Create a new ConnectionHolder for the given JDBC Connection,_wrapping it with a {@link SimpleConnectionHandle}._@param connection the JDBC Connection to hold_@param transactionActive whether the given Connection is involved_in an ongoing transaction_@see SimpleConnectionHandle;public ConnectionHolder(Connection connection, boolean transactionActive) {_		this(connection)__		this.transactionActive = transactionActive__	};create,a,new,connection,holder,for,the,given,jdbc,connection,wrapping,it,with,a,link,simple,connection,handle,param,connection,the,jdbc,connection,to,hold,param,transaction,active,whether,the,given,connection,is,involved,in,an,ongoing,transaction,see,simple,connection,handle;public,connection,holder,connection,connection,boolean,transaction,active,this,connection,this,transaction,active,transaction,active
ConnectionHolder -> @Override 	public void released();1328020251;Releases the current Connection held by this ConnectionHolder._<p>This is necessary for ConnectionHandles that expect "Connection borrowing",_where each returned Connection is only temporarily leased and needs to be_returned once the data operation is done, to make the Connection available_for other operations within the same transaction. This is the case with_JDO 2.0 DataStoreConnections, for example._@see org.springframework.orm.jdo.DefaultJdoDialect#getJdbcConnection;@Override_	public void released() {_		super.released()__		if (!isOpen() && this.currentConnection != null) {_			this.connectionHandle.releaseConnection(this.currentConnection)__			this.currentConnection = null__		}_	};releases,the,current,connection,held,by,this,connection,holder,p,this,is,necessary,for,connection,handles,that,expect,connection,borrowing,where,each,returned,connection,is,only,temporarily,leased,and,needs,to,be,returned,once,the,data,operation,is,done,to,make,the,connection,available,for,other,operations,within,the,same,transaction,this,is,the,case,with,jdo,2,0,data,store,connections,for,example,see,org,springframework,orm,jdo,default,jdo,dialect,get,jdbc,connection;override,public,void,released,super,released,if,is,open,this,current,connection,null,this,connection,handle,release,connection,this,current,connection,this,current,connection,null
ConnectionHolder -> @Override 	public void released();1356735495;Releases the current Connection held by this ConnectionHolder._<p>This is necessary for ConnectionHandles that expect "Connection borrowing",_where each returned Connection is only temporarily leased and needs to be_returned once the data operation is done, to make the Connection available_for other operations within the same transaction. This is the case with_JDO 2.0 DataStoreConnections, for example._@see org.springframework.orm.jdo.DefaultJdoDialect#getJdbcConnection;@Override_	public void released() {_		super.released()__		if (!isOpen() && this.currentConnection != null) {_			this.connectionHandle.releaseConnection(this.currentConnection)__			this.currentConnection = null__		}_	};releases,the,current,connection,held,by,this,connection,holder,p,this,is,necessary,for,connection,handles,that,expect,connection,borrowing,where,each,returned,connection,is,only,temporarily,leased,and,needs,to,be,returned,once,the,data,operation,is,done,to,make,the,connection,available,for,other,operations,within,the,same,transaction,this,is,the,case,with,jdo,2,0,data,store,connections,for,example,see,org,springframework,orm,jdo,default,jdo,dialect,get,jdbc,connection;override,public,void,released,super,released,if,is,open,this,current,connection,null,this,connection,handle,release,connection,this,current,connection,this,current,connection,null
ConnectionHolder -> @Override 	public void released();1467668088;Releases the current Connection held by this ConnectionHolder._<p>This is necessary for ConnectionHandles that expect "Connection borrowing",_where each returned Connection is only temporarily leased and needs to be_returned once the data operation is done, to make the Connection available_for other operations within the same transaction.;@Override_	public void released() {_		super.released()__		if (!isOpen() && this.currentConnection != null) {_			this.connectionHandle.releaseConnection(this.currentConnection)__			this.currentConnection = null__		}_	};releases,the,current,connection,held,by,this,connection,holder,p,this,is,necessary,for,connection,handles,that,expect,connection,borrowing,where,each,returned,connection,is,only,temporarily,leased,and,needs,to,be,returned,once,the,data,operation,is,done,to,make,the,connection,available,for,other,operations,within,the,same,transaction;override,public,void,released,super,released,if,is,open,this,current,connection,null,this,connection,handle,release,connection,this,current,connection,this,current,connection,null
ConnectionHolder -> @Override 	public void released();1468949155;Releases the current Connection held by this ConnectionHolder._<p>This is necessary for ConnectionHandles that expect "Connection borrowing",_where each returned Connection is only temporarily leased and needs to be_returned once the data operation is done, to make the Connection available_for other operations within the same transaction.;@Override_	public void released() {_		super.released()__		if (!isOpen() && this.currentConnection != null) {_			this.connectionHandle.releaseConnection(this.currentConnection)__			this.currentConnection = null__		}_	};releases,the,current,connection,held,by,this,connection,holder,p,this,is,necessary,for,connection,handles,that,expect,connection,borrowing,where,each,returned,connection,is,only,temporarily,leased,and,needs,to,be,returned,once,the,data,operation,is,done,to,make,the,connection,available,for,other,operations,within,the,same,transaction;override,public,void,released,super,released,if,is,open,this,current,connection,null,this,connection,handle,release,connection,this,current,connection,this,current,connection,null
ConnectionHolder -> @Override 	public void released();1495868221;Releases the current Connection held by this ConnectionHolder._<p>This is necessary for ConnectionHandles that expect "Connection borrowing",_where each returned Connection is only temporarily leased and needs to be_returned once the data operation is done, to make the Connection available_for other operations within the same transaction.;@Override_	public void released() {_		super.released()__		if (!isOpen() && this.currentConnection != null) {_			this.connectionHandle.releaseConnection(this.currentConnection)__			this.currentConnection = null__		}_	};releases,the,current,connection,held,by,this,connection,holder,p,this,is,necessary,for,connection,handles,that,expect,connection,borrowing,where,each,returned,connection,is,only,temporarily,leased,and,needs,to,be,returned,once,the,data,operation,is,done,to,make,the,connection,available,for,other,operations,within,the,same,transaction;override,public,void,released,super,released,if,is,open,this,current,connection,null,this,connection,handle,release,connection,this,current,connection,this,current,connection,null
ConnectionHolder -> @Override 	public void released();1498780456;Releases the current Connection held by this ConnectionHolder._<p>This is necessary for ConnectionHandles that expect "Connection borrowing",_where each returned Connection is only temporarily leased and needs to be_returned once the data operation is done, to make the Connection available_for other operations within the same transaction.;@Override_	public void released() {_		super.released()__		if (!isOpen() && this.currentConnection != null) {_			if (this.connectionHandle != null) {_				this.connectionHandle.releaseConnection(this.currentConnection)__			}_			this.currentConnection = null__		}_	};releases,the,current,connection,held,by,this,connection,holder,p,this,is,necessary,for,connection,handles,that,expect,connection,borrowing,where,each,returned,connection,is,only,temporarily,leased,and,needs,to,be,returned,once,the,data,operation,is,done,to,make,the,connection,available,for,other,operations,within,the,same,transaction;override,public,void,released,super,released,if,is,open,this,current,connection,null,if,this,connection,handle,null,this,connection,handle,release,connection,this,current,connection,this,current,connection,null
ConnectionHolder -> @Override 	public void released();1530174524;Releases the current Connection held by this ConnectionHolder._<p>This is necessary for ConnectionHandles that expect "Connection borrowing",_where each returned Connection is only temporarily leased and needs to be_returned once the data operation is done, to make the Connection available_for other operations within the same transaction.;@Override_	public void released() {_		super.released()__		if (!isOpen() && this.currentConnection != null) {_			if (this.connectionHandle != null) {_				this.connectionHandle.releaseConnection(this.currentConnection)__			}_			this.currentConnection = null__		}_	};releases,the,current,connection,held,by,this,connection,holder,p,this,is,necessary,for,connection,handles,that,expect,connection,borrowing,where,each,returned,connection,is,only,temporarily,leased,and,needs,to,be,returned,once,the,data,operation,is,done,to,make,the,connection,available,for,other,operations,within,the,same,transaction;override,public,void,released,super,released,if,is,open,this,current,connection,null,if,this,connection,handle,null,this,connection,handle,release,connection,this,current,connection,this,current,connection,null
ConnectionHolder -> @Override 	public void released();1530709637;Releases the current Connection held by this ConnectionHolder._<p>This is necessary for ConnectionHandles that expect "Connection borrowing",_where each returned Connection is only temporarily leased and needs to be_returned once the data operation is done, to make the Connection available_for other operations within the same transaction.;@Override_	public void released() {_		super.released()__		if (!isOpen() && this.currentConnection != null) {_			if (this.connectionHandle != null) {_				this.connectionHandle.releaseConnection(this.currentConnection)__			}_			this.currentConnection = null__		}_	};releases,the,current,connection,held,by,this,connection,holder,p,this,is,necessary,for,connection,handles,that,expect,connection,borrowing,where,each,returned,connection,is,only,temporarily,leased,and,needs,to,be,returned,once,the,data,operation,is,done,to,make,the,connection,available,for,other,operations,within,the,same,transaction;override,public,void,released,super,released,if,is,open,this,current,connection,null,if,this,connection,handle,null,this,connection,handle,release,connection,this,current,connection,this,current,connection,null
ConnectionHolder -> @Override 	public void released();1530725007;Releases the current Connection held by this ConnectionHolder._<p>This is necessary for ConnectionHandles that expect "Connection borrowing",_where each returned Connection is only temporarily leased and needs to be_returned once the data operation is done, to make the Connection available_for other operations within the same transaction.;@Override_	public void released() {_		super.released()__		if (!isOpen() && this.currentConnection != null) {_			if (this.connectionHandle != null) {_				this.connectionHandle.releaseConnection(this.currentConnection)__			}_			this.currentConnection = null__		}_	};releases,the,current,connection,held,by,this,connection,holder,p,this,is,necessary,for,connection,handles,that,expect,connection,borrowing,where,each,returned,connection,is,only,temporarily,leased,and,needs,to,be,returned,once,the,data,operation,is,done,to,make,the,connection,available,for,other,operations,within,the,same,transaction;override,public,void,released,super,released,if,is,open,this,current,connection,null,if,this,connection,handle,null,this,connection,handle,release,connection,this,current,connection,this,current,connection,null
