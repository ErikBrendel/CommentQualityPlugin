# id;timestamp;commentText;codeText;commentWords;codeWords
DefaultLobHandler -> public void setStreamAsLob(boolean streamAsLob);1328020251;Specify whether to submit a binary stream / character stream to the JDBC_driver as explicit LOB content, using the JDBC 4.0 <code>setBlob</code> /_<code>setClob</code> method with a stream argument._<p>Default is "false", using the common JDBC 2.0 <code>setBinaryStream</code>_/ <code>setCharacterStream</code> method for setting the content._Switch this to "true" for explicit JDBC 4.0 usage, provided that your_JDBC driver actually supports those JDBC 4.0 operations (e.g. Derby's)._<p>This setting affects stream arguments as well as byte array / String_arguments, requiring JDBC 4.0 support. For supporting LOB content against_JDBC 3.0, check out the {@link #setWrapAsLob "wrapAsLob"} setting._@see java.sql.PreparedStatement#setBlob(int, java.io.InputStream, long)_@see java.sql.PreparedStatement#setClob(int, java.io.Reader, long);public void setStreamAsLob(boolean streamAsLob) {_		this.streamAsLob = streamAsLob__	};specify,whether,to,submit,a,binary,stream,character,stream,to,the,jdbc,driver,as,explicit,lob,content,using,the,jdbc,4,0,code,set,blob,code,code,set,clob,code,method,with,a,stream,argument,p,default,is,false,using,the,common,jdbc,2,0,code,set,binary,stream,code,code,set,character,stream,code,method,for,setting,the,content,switch,this,to,true,for,explicit,jdbc,4,0,usage,provided,that,your,jdbc,driver,actually,supports,those,jdbc,4,0,operations,e,g,derby,s,p,this,setting,affects,stream,arguments,as,well,as,byte,array,string,arguments,requiring,jdbc,4,0,support,for,supporting,lob,content,against,jdbc,3,0,check,out,the,link,set,wrap,as,lob,wrap,as,lob,setting,see,java,sql,prepared,statement,set,blob,int,java,io,input,stream,long,see,java,sql,prepared,statement,set,clob,int,java,io,reader,long;public,void,set,stream,as,lob,boolean,stream,as,lob,this,stream,as,lob,stream,as,lob
DefaultLobHandler -> public void setStreamAsLob(boolean streamAsLob);1356735495;Specify whether to submit a binary stream / character stream to the JDBC_driver as explicit LOB content, using the JDBC 4.0 {@code setBlob} /_{@code setClob} method with a stream argument._<p>Default is "false", using the common JDBC 2.0 {@code setBinaryStream}_/ {@code setCharacterStream} method for setting the content._Switch this to "true" for explicit JDBC 4.0 usage, provided that your_JDBC driver actually supports those JDBC 4.0 operations (e.g. Derby's)._<p>This setting affects stream arguments as well as byte array / String_arguments, requiring JDBC 4.0 support. For supporting LOB content against_JDBC 3.0, check out the {@link #setWrapAsLob "wrapAsLob"} setting._@see java.sql.PreparedStatement#setBlob(int, java.io.InputStream, long)_@see java.sql.PreparedStatement#setClob(int, java.io.Reader, long);public void setStreamAsLob(boolean streamAsLob) {_		this.streamAsLob = streamAsLob__	};specify,whether,to,submit,a,binary,stream,character,stream,to,the,jdbc,driver,as,explicit,lob,content,using,the,jdbc,4,0,code,set,blob,code,set,clob,method,with,a,stream,argument,p,default,is,false,using,the,common,jdbc,2,0,code,set,binary,stream,code,set,character,stream,method,for,setting,the,content,switch,this,to,true,for,explicit,jdbc,4,0,usage,provided,that,your,jdbc,driver,actually,supports,those,jdbc,4,0,operations,e,g,derby,s,p,this,setting,affects,stream,arguments,as,well,as,byte,array,string,arguments,requiring,jdbc,4,0,support,for,supporting,lob,content,against,jdbc,3,0,check,out,the,link,set,wrap,as,lob,wrap,as,lob,setting,see,java,sql,prepared,statement,set,blob,int,java,io,input,stream,long,see,java,sql,prepared,statement,set,clob,int,java,io,reader,long;public,void,set,stream,as,lob,boolean,stream,as,lob,this,stream,as,lob,stream,as,lob
DefaultLobHandler -> public void setStreamAsLob(boolean streamAsLob);1357119239;Specify whether to submit a binary stream / character stream to the JDBC_driver as explicit LOB content, using the JDBC 4.0 {@code setBlob} /_{@code setClob} method with a stream argument._<p>Default is "false", using the common JDBC 2.0 {@code setBinaryStream}_/ {@code setCharacterStream} method for setting the content._Switch this to "true" for explicit JDBC 4.0 usage, provided that your_JDBC driver actually supports those JDBC 4.0 operations (e.g. Derby's)._<p>This setting affects stream arguments as well as byte array / String_arguments, requiring JDBC 4.0 support. For supporting LOB content against_JDBC 3.0, check out the {@link #setWrapAsLob "wrapAsLob"} setting._@see java.sql.PreparedStatement#setBlob(int, java.io.InputStream, long)_@see java.sql.PreparedStatement#setClob(int, java.io.Reader, long);public void setStreamAsLob(boolean streamAsLob) {_		this.streamAsLob = streamAsLob__	};specify,whether,to,submit,a,binary,stream,character,stream,to,the,jdbc,driver,as,explicit,lob,content,using,the,jdbc,4,0,code,set,blob,code,set,clob,method,with,a,stream,argument,p,default,is,false,using,the,common,jdbc,2,0,code,set,binary,stream,code,set,character,stream,method,for,setting,the,content,switch,this,to,true,for,explicit,jdbc,4,0,usage,provided,that,your,jdbc,driver,actually,supports,those,jdbc,4,0,operations,e,g,derby,s,p,this,setting,affects,stream,arguments,as,well,as,byte,array,string,arguments,requiring,jdbc,4,0,support,for,supporting,lob,content,against,jdbc,3,0,check,out,the,link,set,wrap,as,lob,wrap,as,lob,setting,see,java,sql,prepared,statement,set,blob,int,java,io,input,stream,long,see,java,sql,prepared,statement,set,clob,int,java,io,reader,long;public,void,set,stream,as,lob,boolean,stream,as,lob,this,stream,as,lob,stream,as,lob
DefaultLobHandler -> public void setStreamAsLob(boolean streamAsLob);1362408075;Specify whether to submit a binary stream / character stream to the JDBC_driver as explicit LOB content, using the JDBC 4.0 {@code setBlob} /_{@code setClob} method with a stream argument._<p>Default is "false", using the common JDBC 2.0 {@code setBinaryStream}_/ {@code setCharacterStream} method for setting the content._Switch this to "true" for explicit JDBC 4.0 streaming, provided that your_JDBC driver actually supports those JDBC 4.0 operations (e.g. Derby's)._<p>This setting affects stream arguments as well as byte array / String_arguments, requiring JDBC 4.0 support. For supporting LOB content against_JDBC 3.0, check out the {@link #setWrapAsLob "wrapAsLob"} setting._@see java.sql.PreparedStatement#setBlob(int, java.io.InputStream, long)_@see java.sql.PreparedStatement#setClob(int, java.io.Reader, long);public void setStreamAsLob(boolean streamAsLob) {_		this.streamAsLob = streamAsLob__	};specify,whether,to,submit,a,binary,stream,character,stream,to,the,jdbc,driver,as,explicit,lob,content,using,the,jdbc,4,0,code,set,blob,code,set,clob,method,with,a,stream,argument,p,default,is,false,using,the,common,jdbc,2,0,code,set,binary,stream,code,set,character,stream,method,for,setting,the,content,switch,this,to,true,for,explicit,jdbc,4,0,streaming,provided,that,your,jdbc,driver,actually,supports,those,jdbc,4,0,operations,e,g,derby,s,p,this,setting,affects,stream,arguments,as,well,as,byte,array,string,arguments,requiring,jdbc,4,0,support,for,supporting,lob,content,against,jdbc,3,0,check,out,the,link,set,wrap,as,lob,wrap,as,lob,setting,see,java,sql,prepared,statement,set,blob,int,java,io,input,stream,long,see,java,sql,prepared,statement,set,clob,int,java,io,reader,long;public,void,set,stream,as,lob,boolean,stream,as,lob,this,stream,as,lob,stream,as,lob
DefaultLobHandler -> public void setStreamAsLob(boolean streamAsLob);1368482696;Specify whether to submit a binary stream / character stream to the JDBC_driver as explicit LOB content, using the JDBC 4.0 {@code setBlob} /_{@code setClob} method with a stream argument._<p>Default is "false", using the common JDBC 2.0 {@code setBinaryStream}_/ {@code setCharacterStream} method for setting the content._Switch this to "true" for explicit JDBC 4.0 streaming, provided that your_JDBC driver actually supports those JDBC 4.0 operations (e.g. Derby's)._<p>This setting affects stream arguments as well as byte array / String_arguments, requiring JDBC 4.0 support. For supporting LOB content against_JDBC 3.0, check out the {@link #setWrapAsLob "wrapAsLob"} setting._@see java.sql.PreparedStatement#setBlob(int, java.io.InputStream, long)_@see java.sql.PreparedStatement#setClob(int, java.io.Reader, long);public void setStreamAsLob(boolean streamAsLob) {_		this.streamAsLob = streamAsLob__	};specify,whether,to,submit,a,binary,stream,character,stream,to,the,jdbc,driver,as,explicit,lob,content,using,the,jdbc,4,0,code,set,blob,code,set,clob,method,with,a,stream,argument,p,default,is,false,using,the,common,jdbc,2,0,code,set,binary,stream,code,set,character,stream,method,for,setting,the,content,switch,this,to,true,for,explicit,jdbc,4,0,streaming,provided,that,your,jdbc,driver,actually,supports,those,jdbc,4,0,operations,e,g,derby,s,p,this,setting,affects,stream,arguments,as,well,as,byte,array,string,arguments,requiring,jdbc,4,0,support,for,supporting,lob,content,against,jdbc,3,0,check,out,the,link,set,wrap,as,lob,wrap,as,lob,setting,see,java,sql,prepared,statement,set,blob,int,java,io,input,stream,long,see,java,sql,prepared,statement,set,clob,int,java,io,reader,long;public,void,set,stream,as,lob,boolean,stream,as,lob,this,stream,as,lob,stream,as,lob
DefaultLobHandler -> public void setStreamAsLob(boolean streamAsLob);1385412762;Specify whether to submit a binary stream / character stream to the JDBC_driver as explicit LOB content, using the JDBC 4.0 {@code setBlob} /_{@code setClob} method with a stream argument._<p>Default is "false", using the common JDBC 2.0 {@code setBinaryStream}_/ {@code setCharacterStream} method for setting the content._Switch this to "true" for explicit JDBC 4.0 streaming, provided that your_JDBC driver actually supports those JDBC 4.0 operations (e.g. Derby's)._<p>This setting affects stream arguments as well as byte array / String_arguments, requiring JDBC 4.0 support. For supporting LOB content against_JDBC 3.0, check out the {@link #setWrapAsLob "wrapAsLob"} setting._@see java.sql.PreparedStatement#setBlob(int, java.io.InputStream, long)_@see java.sql.PreparedStatement#setClob(int, java.io.Reader, long);public void setStreamAsLob(boolean streamAsLob) {_		this.streamAsLob = streamAsLob__	};specify,whether,to,submit,a,binary,stream,character,stream,to,the,jdbc,driver,as,explicit,lob,content,using,the,jdbc,4,0,code,set,blob,code,set,clob,method,with,a,stream,argument,p,default,is,false,using,the,common,jdbc,2,0,code,set,binary,stream,code,set,character,stream,method,for,setting,the,content,switch,this,to,true,for,explicit,jdbc,4,0,streaming,provided,that,your,jdbc,driver,actually,supports,those,jdbc,4,0,operations,e,g,derby,s,p,this,setting,affects,stream,arguments,as,well,as,byte,array,string,arguments,requiring,jdbc,4,0,support,for,supporting,lob,content,against,jdbc,3,0,check,out,the,link,set,wrap,as,lob,wrap,as,lob,setting,see,java,sql,prepared,statement,set,blob,int,java,io,input,stream,long,see,java,sql,prepared,statement,set,clob,int,java,io,reader,long;public,void,set,stream,as,lob,boolean,stream,as,lob,this,stream,as,lob,stream,as,lob
DefaultLobHandler -> public void setStreamAsLob(boolean streamAsLob);1411768603;Specify whether to submit a binary stream / character stream to the JDBC_driver as explicit LOB content, using the JDBC 4.0 {@code setBlob} /_{@code setClob} method with a stream argument._<p>Default is "false", using the common JDBC 2.0 {@code setBinaryStream}_/ {@code setCharacterStream} method for setting the content._Switch this to "true" for explicit JDBC 4.0 streaming, provided that your_JDBC driver actually supports those JDBC 4.0 operations (e.g. Derby's)._<p>This setting affects stream arguments as well as byte array / String_arguments, requiring JDBC 4.0 support. For supporting LOB content against_JDBC 3.0, check out the {@link #setWrapAsLob "wrapAsLob"} setting._@see java.sql.PreparedStatement#setBlob(int, java.io.InputStream, long)_@see java.sql.PreparedStatement#setClob(int, java.io.Reader, long);public void setStreamAsLob(boolean streamAsLob) {_		this.streamAsLob = streamAsLob__	};specify,whether,to,submit,a,binary,stream,character,stream,to,the,jdbc,driver,as,explicit,lob,content,using,the,jdbc,4,0,code,set,blob,code,set,clob,method,with,a,stream,argument,p,default,is,false,using,the,common,jdbc,2,0,code,set,binary,stream,code,set,character,stream,method,for,setting,the,content,switch,this,to,true,for,explicit,jdbc,4,0,streaming,provided,that,your,jdbc,driver,actually,supports,those,jdbc,4,0,operations,e,g,derby,s,p,this,setting,affects,stream,arguments,as,well,as,byte,array,string,arguments,requiring,jdbc,4,0,support,for,supporting,lob,content,against,jdbc,3,0,check,out,the,link,set,wrap,as,lob,wrap,as,lob,setting,see,java,sql,prepared,statement,set,blob,int,java,io,input,stream,long,see,java,sql,prepared,statement,set,clob,int,java,io,reader,long;public,void,set,stream,as,lob,boolean,stream,as,lob,this,stream,as,lob,stream,as,lob
DefaultLobHandler -> public void setStreamAsLob(boolean streamAsLob);1411769761;Specify whether to submit a binary stream / character stream to the JDBC_driver as explicit LOB content, using the JDBC 4.0 {@code setBlob} /_{@code setClob} method with a stream argument._<p>Default is "false", using the common JDBC 2.0 {@code setBinaryStream}_/ {@code setCharacterStream} method for setting the content._Switch this to "true" for explicit JDBC 4.0 streaming, provided that your_JDBC driver actually supports those JDBC 4.0 operations (e.g. Derby's)._<p>This setting affects stream arguments as well as byte array / String_arguments, requiring JDBC 4.0 support. For supporting LOB content against_JDBC 3.0, check out the {@link #setWrapAsLob "wrapAsLob"} setting._@see java.sql.PreparedStatement#setBlob(int, java.io.InputStream, long)_@see java.sql.PreparedStatement#setClob(int, java.io.Reader, long);public void setStreamAsLob(boolean streamAsLob) {_		this.streamAsLob = streamAsLob__	};specify,whether,to,submit,a,binary,stream,character,stream,to,the,jdbc,driver,as,explicit,lob,content,using,the,jdbc,4,0,code,set,blob,code,set,clob,method,with,a,stream,argument,p,default,is,false,using,the,common,jdbc,2,0,code,set,binary,stream,code,set,character,stream,method,for,setting,the,content,switch,this,to,true,for,explicit,jdbc,4,0,streaming,provided,that,your,jdbc,driver,actually,supports,those,jdbc,4,0,operations,e,g,derby,s,p,this,setting,affects,stream,arguments,as,well,as,byte,array,string,arguments,requiring,jdbc,4,0,support,for,supporting,lob,content,against,jdbc,3,0,check,out,the,link,set,wrap,as,lob,wrap,as,lob,setting,see,java,sql,prepared,statement,set,blob,int,java,io,input,stream,long,see,java,sql,prepared,statement,set,clob,int,java,io,reader,long;public,void,set,stream,as,lob,boolean,stream,as,lob,this,stream,as,lob,stream,as,lob
DefaultLobHandler -> public void setStreamAsLob(boolean streamAsLob);1450380453;Specify whether to submit a binary stream / character stream to the JDBC_driver as explicit LOB content, using the JDBC 4.0 {@code setBlob} /_{@code setClob} method with a stream argument._<p>Default is "false", using the common JDBC 2.0 {@code setBinaryStream}_/ {@code setCharacterStream} method for setting the content._Switch this to "true" for explicit JDBC 4.0 streaming, provided that your_JDBC driver actually supports those JDBC 4.0 operations (e.g. Derby's)._<p>This setting affects stream arguments as well as byte array / String_arguments, requiring JDBC 4.0 support. For supporting LOB content against_JDBC 3.0, check out the {@link #setWrapAsLob "wrapAsLob"} setting._@see java.sql.PreparedStatement#setBlob(int, java.io.InputStream, long)_@see java.sql.PreparedStatement#setClob(int, java.io.Reader, long);public void setStreamAsLob(boolean streamAsLob) {_		this.streamAsLob = streamAsLob__	};specify,whether,to,submit,a,binary,stream,character,stream,to,the,jdbc,driver,as,explicit,lob,content,using,the,jdbc,4,0,code,set,blob,code,set,clob,method,with,a,stream,argument,p,default,is,false,using,the,common,jdbc,2,0,code,set,binary,stream,code,set,character,stream,method,for,setting,the,content,switch,this,to,true,for,explicit,jdbc,4,0,streaming,provided,that,your,jdbc,driver,actually,supports,those,jdbc,4,0,operations,e,g,derby,s,p,this,setting,affects,stream,arguments,as,well,as,byte,array,string,arguments,requiring,jdbc,4,0,support,for,supporting,lob,content,against,jdbc,3,0,check,out,the,link,set,wrap,as,lob,wrap,as,lob,setting,see,java,sql,prepared,statement,set,blob,int,java,io,input,stream,long,see,java,sql,prepared,statement,set,clob,int,java,io,reader,long;public,void,set,stream,as,lob,boolean,stream,as,lob,this,stream,as,lob,stream,as,lob
DefaultLobHandler -> public void setStreamAsLob(boolean streamAsLob);1468613531;Specify whether to submit a binary stream / character stream to the JDBC_driver as explicit LOB content, using the JDBC 4.0 {@code setBlob} /_{@code setClob} method with a stream argument._<p>Default is "false", using the common JDBC 2.0 {@code setBinaryStream}_/ {@code setCharacterStream} method for setting the content._Switch this to "true" for explicit JDBC 4.0 streaming, provided that your_JDBC driver actually supports those JDBC 4.0 operations (e.g. Derby's)._<p>This setting affects stream arguments as well as byte array / String_arguments, requiring JDBC 4.0 support. For supporting LOB content against_JDBC 3.0, check out the {@link #setWrapAsLob "wrapAsLob"} setting._@see java.sql.PreparedStatement#setBlob(int, java.io.InputStream, long)_@see java.sql.PreparedStatement#setClob(int, java.io.Reader, long);public void setStreamAsLob(boolean streamAsLob) {_		this.streamAsLob = streamAsLob__	};specify,whether,to,submit,a,binary,stream,character,stream,to,the,jdbc,driver,as,explicit,lob,content,using,the,jdbc,4,0,code,set,blob,code,set,clob,method,with,a,stream,argument,p,default,is,false,using,the,common,jdbc,2,0,code,set,binary,stream,code,set,character,stream,method,for,setting,the,content,switch,this,to,true,for,explicit,jdbc,4,0,streaming,provided,that,your,jdbc,driver,actually,supports,those,jdbc,4,0,operations,e,g,derby,s,p,this,setting,affects,stream,arguments,as,well,as,byte,array,string,arguments,requiring,jdbc,4,0,support,for,supporting,lob,content,against,jdbc,3,0,check,out,the,link,set,wrap,as,lob,wrap,as,lob,setting,see,java,sql,prepared,statement,set,blob,int,java,io,input,stream,long,see,java,sql,prepared,statement,set,clob,int,java,io,reader,long;public,void,set,stream,as,lob,boolean,stream,as,lob,this,stream,as,lob,stream,as,lob
DefaultLobHandler -> public void setStreamAsLob(boolean streamAsLob);1496242568;Specify whether to submit a binary stream / character stream to the JDBC_driver as explicit LOB content, using the JDBC 4.0 {@code setBlob} /_{@code setClob} method with a stream argument._<p>Default is "false", using the common JDBC 2.0 {@code setBinaryStream}_/ {@code setCharacterStream} method for setting the content._Switch this to "true" for explicit JDBC 4.0 streaming, provided that your_JDBC driver actually supports those JDBC 4.0 operations (e.g. Derby's)._<p>This setting affects stream arguments as well as byte array / String_arguments, requiring JDBC 4.0 support. For supporting LOB content against_JDBC 3.0, check out the {@link #setWrapAsLob "wrapAsLob"} setting._@see java.sql.PreparedStatement#setBlob(int, java.io.InputStream, long)_@see java.sql.PreparedStatement#setClob(int, java.io.Reader, long);public void setStreamAsLob(boolean streamAsLob) {_		this.streamAsLob = streamAsLob__	};specify,whether,to,submit,a,binary,stream,character,stream,to,the,jdbc,driver,as,explicit,lob,content,using,the,jdbc,4,0,code,set,blob,code,set,clob,method,with,a,stream,argument,p,default,is,false,using,the,common,jdbc,2,0,code,set,binary,stream,code,set,character,stream,method,for,setting,the,content,switch,this,to,true,for,explicit,jdbc,4,0,streaming,provided,that,your,jdbc,driver,actually,supports,those,jdbc,4,0,operations,e,g,derby,s,p,this,setting,affects,stream,arguments,as,well,as,byte,array,string,arguments,requiring,jdbc,4,0,support,for,supporting,lob,content,against,jdbc,3,0,check,out,the,link,set,wrap,as,lob,wrap,as,lob,setting,see,java,sql,prepared,statement,set,blob,int,java,io,input,stream,long,see,java,sql,prepared,statement,set,clob,int,java,io,reader,long;public,void,set,stream,as,lob,boolean,stream,as,lob,this,stream,as,lob,stream,as,lob
DefaultLobHandler -> public void setStreamAsLob(boolean streamAsLob);1497275505;Specify whether to submit a binary stream / character stream to the JDBC_driver as explicit LOB content, using the JDBC 4.0 {@code setBlob} /_{@code setClob} method with a stream argument._<p>Default is "false", using the common JDBC 2.0 {@code setBinaryStream}_/ {@code setCharacterStream} method for setting the content._Switch this to "true" for explicit JDBC 4.0 streaming, provided that your_JDBC driver actually supports those JDBC 4.0 operations (e.g. Derby's)._<p>This setting affects stream arguments as well as byte array / String_arguments, requiring JDBC 4.0 support. For supporting LOB content against_JDBC 3.0, check out the {@link #setWrapAsLob "wrapAsLob"} setting._@see java.sql.PreparedStatement#setBlob(int, java.io.InputStream, long)_@see java.sql.PreparedStatement#setClob(int, java.io.Reader, long);public void setStreamAsLob(boolean streamAsLob) {_		this.streamAsLob = streamAsLob__	};specify,whether,to,submit,a,binary,stream,character,stream,to,the,jdbc,driver,as,explicit,lob,content,using,the,jdbc,4,0,code,set,blob,code,set,clob,method,with,a,stream,argument,p,default,is,false,using,the,common,jdbc,2,0,code,set,binary,stream,code,set,character,stream,method,for,setting,the,content,switch,this,to,true,for,explicit,jdbc,4,0,streaming,provided,that,your,jdbc,driver,actually,supports,those,jdbc,4,0,operations,e,g,derby,s,p,this,setting,affects,stream,arguments,as,well,as,byte,array,string,arguments,requiring,jdbc,4,0,support,for,supporting,lob,content,against,jdbc,3,0,check,out,the,link,set,wrap,as,lob,wrap,as,lob,setting,see,java,sql,prepared,statement,set,blob,int,java,io,input,stream,long,see,java,sql,prepared,statement,set,clob,int,java,io,reader,long;public,void,set,stream,as,lob,boolean,stream,as,lob,this,stream,as,lob,stream,as,lob
DefaultLobHandler -> public void setStreamAsLob(boolean streamAsLob);1502974979;Specify whether to submit a binary stream / character stream to the JDBC_driver as explicit LOB content, using the JDBC 4.0 {@code setBlob} /_{@code setClob} method with a stream argument._<p>Default is "false", using the common JDBC 2.0 {@code setBinaryStream}_/ {@code setCharacterStream} method for setting the content._Switch this to "true" for explicit JDBC 4.0 streaming, provided that your_JDBC driver actually supports those JDBC 4.0 operations (e.g. Derby's)._<p>This setting affects stream arguments as well as byte array / String_arguments, requiring JDBC 4.0 support. For supporting LOB content against_JDBC 3.0, check out the {@link #setWrapAsLob "wrapAsLob"} setting._@see java.sql.PreparedStatement#setBlob(int, java.io.InputStream, long)_@see java.sql.PreparedStatement#setClob(int, java.io.Reader, long);public void setStreamAsLob(boolean streamAsLob) {_		this.streamAsLob = streamAsLob__	};specify,whether,to,submit,a,binary,stream,character,stream,to,the,jdbc,driver,as,explicit,lob,content,using,the,jdbc,4,0,code,set,blob,code,set,clob,method,with,a,stream,argument,p,default,is,false,using,the,common,jdbc,2,0,code,set,binary,stream,code,set,character,stream,method,for,setting,the,content,switch,this,to,true,for,explicit,jdbc,4,0,streaming,provided,that,your,jdbc,driver,actually,supports,those,jdbc,4,0,operations,e,g,derby,s,p,this,setting,affects,stream,arguments,as,well,as,byte,array,string,arguments,requiring,jdbc,4,0,support,for,supporting,lob,content,against,jdbc,3,0,check,out,the,link,set,wrap,as,lob,wrap,as,lob,setting,see,java,sql,prepared,statement,set,blob,int,java,io,input,stream,long,see,java,sql,prepared,statement,set,clob,int,java,io,reader,long;public,void,set,stream,as,lob,boolean,stream,as,lob,this,stream,as,lob,stream,as,lob
DefaultLobHandler -> public void setWrapAsLob(boolean wrapAsLob);1328020251;Specify whether to submit a byte array / String to the JDBC driver_wrapped in a JDBC Blob / Clob object, using the JDBC <code>setBlob</code> /_<code>setClob</code> method with a Blob / Clob argument._<p>Default is "false", using the common JDBC 2.0 <code>setBinaryStream</code>_/ <code>setCharacterStream</code> method for setting the content._Switch this to "true" for explicit Blob / Clob wrapping against_JDBC drivers that are known to require such wrapping (e.g. PostgreSQL's)._<p>This setting affects byte array / String arguments as well as stream_arguments, unless {@link #setStreamAsLob "streamAsLob"} overrides this_handling to use JDBC 4.0's new explicit streaming support (if available)._@see java.sql.PreparedStatement#setBlob(int, java.sql.Blob)_@see java.sql.PreparedStatement#setClob(int, java.sql.Clob);public void setWrapAsLob(boolean wrapAsLob) {_		this.wrapAsLob = wrapAsLob__	};specify,whether,to,submit,a,byte,array,string,to,the,jdbc,driver,wrapped,in,a,jdbc,blob,clob,object,using,the,jdbc,code,set,blob,code,code,set,clob,code,method,with,a,blob,clob,argument,p,default,is,false,using,the,common,jdbc,2,0,code,set,binary,stream,code,code,set,character,stream,code,method,for,setting,the,content,switch,this,to,true,for,explicit,blob,clob,wrapping,against,jdbc,drivers,that,are,known,to,require,such,wrapping,e,g,postgre,sql,s,p,this,setting,affects,byte,array,string,arguments,as,well,as,stream,arguments,unless,link,set,stream,as,lob,stream,as,lob,overrides,this,handling,to,use,jdbc,4,0,s,new,explicit,streaming,support,if,available,see,java,sql,prepared,statement,set,blob,int,java,sql,blob,see,java,sql,prepared,statement,set,clob,int,java,sql,clob;public,void,set,wrap,as,lob,boolean,wrap,as,lob,this,wrap,as,lob,wrap,as,lob
DefaultLobHandler -> public void setWrapAsLob(boolean wrapAsLob);1356735495;Specify whether to submit a byte array / String to the JDBC driver_wrapped in a JDBC Blob / Clob object, using the JDBC {@code setBlob} /_{@code setClob} method with a Blob / Clob argument._<p>Default is "false", using the common JDBC 2.0 {@code setBinaryStream}_/ {@code setCharacterStream} method for setting the content._Switch this to "true" for explicit Blob / Clob wrapping against_JDBC drivers that are known to require such wrapping (e.g. PostgreSQL's)._<p>This setting affects byte array / String arguments as well as stream_arguments, unless {@link #setStreamAsLob "streamAsLob"} overrides this_handling to use JDBC 4.0's new explicit streaming support (if available)._@see java.sql.PreparedStatement#setBlob(int, java.sql.Blob)_@see java.sql.PreparedStatement#setClob(int, java.sql.Clob);public void setWrapAsLob(boolean wrapAsLob) {_		this.wrapAsLob = wrapAsLob__	};specify,whether,to,submit,a,byte,array,string,to,the,jdbc,driver,wrapped,in,a,jdbc,blob,clob,object,using,the,jdbc,code,set,blob,code,set,clob,method,with,a,blob,clob,argument,p,default,is,false,using,the,common,jdbc,2,0,code,set,binary,stream,code,set,character,stream,method,for,setting,the,content,switch,this,to,true,for,explicit,blob,clob,wrapping,against,jdbc,drivers,that,are,known,to,require,such,wrapping,e,g,postgre,sql,s,p,this,setting,affects,byte,array,string,arguments,as,well,as,stream,arguments,unless,link,set,stream,as,lob,stream,as,lob,overrides,this,handling,to,use,jdbc,4,0,s,new,explicit,streaming,support,if,available,see,java,sql,prepared,statement,set,blob,int,java,sql,blob,see,java,sql,prepared,statement,set,clob,int,java,sql,clob;public,void,set,wrap,as,lob,boolean,wrap,as,lob,this,wrap,as,lob,wrap,as,lob
DefaultLobHandler -> public void setWrapAsLob(boolean wrapAsLob);1357119239;Specify whether to submit a byte array / String to the JDBC driver_wrapped in a JDBC Blob / Clob object, using the JDBC {@code setBlob} /_{@code setClob} method with a Blob / Clob argument._<p>Default is "false", using the common JDBC 2.0 {@code setBinaryStream}_/ {@code setCharacterStream} method for setting the content._Switch this to "true" for explicit Blob / Clob wrapping against_JDBC drivers that are known to require such wrapping (e.g. PostgreSQL's)._<p>This setting affects byte array / String arguments as well as stream_arguments, unless {@link #setStreamAsLob "streamAsLob"} overrides this_handling to use JDBC 4.0's new explicit streaming support (if available)._@see java.sql.PreparedStatement#setBlob(int, java.sql.Blob)_@see java.sql.PreparedStatement#setClob(int, java.sql.Clob);public void setWrapAsLob(boolean wrapAsLob) {_		this.wrapAsLob = wrapAsLob__	};specify,whether,to,submit,a,byte,array,string,to,the,jdbc,driver,wrapped,in,a,jdbc,blob,clob,object,using,the,jdbc,code,set,blob,code,set,clob,method,with,a,blob,clob,argument,p,default,is,false,using,the,common,jdbc,2,0,code,set,binary,stream,code,set,character,stream,method,for,setting,the,content,switch,this,to,true,for,explicit,blob,clob,wrapping,against,jdbc,drivers,that,are,known,to,require,such,wrapping,e,g,postgre,sql,s,p,this,setting,affects,byte,array,string,arguments,as,well,as,stream,arguments,unless,link,set,stream,as,lob,stream,as,lob,overrides,this,handling,to,use,jdbc,4,0,s,new,explicit,streaming,support,if,available,see,java,sql,prepared,statement,set,blob,int,java,sql,blob,see,java,sql,prepared,statement,set,clob,int,java,sql,clob;public,void,set,wrap,as,lob,boolean,wrap,as,lob,this,wrap,as,lob,wrap,as,lob
DefaultLobHandler -> public void setWrapAsLob(boolean wrapAsLob);1362408075;Specify whether to submit a byte array / String to the JDBC driver_wrapped in a JDBC Blob / Clob object, using the JDBC {@code setBlob} /_{@code setClob} method with a Blob / Clob argument._<p>Default is "false", using the common JDBC 2.0 {@code setBinaryStream}_/ {@code setCharacterStream} method for setting the content. Switch this_to "true" for explicit Blob / Clob wrapping against JDBC drivers that_are known to require such wrapping (e.g. PostgreSQL's for access to OID_columns, whereas BYTEA columns need to be accessed the standard way)._<p>This setting affects byte array / String arguments as well as stream_arguments, unless {@link #setStreamAsLob "streamAsLob"} overrides this_handling to use JDBC 4.0's new explicit streaming support (if available)._@see java.sql.PreparedStatement#setBlob(int, java.sql.Blob)_@see java.sql.PreparedStatement#setClob(int, java.sql.Clob);public void setWrapAsLob(boolean wrapAsLob) {_		this.wrapAsLob = wrapAsLob__	};specify,whether,to,submit,a,byte,array,string,to,the,jdbc,driver,wrapped,in,a,jdbc,blob,clob,object,using,the,jdbc,code,set,blob,code,set,clob,method,with,a,blob,clob,argument,p,default,is,false,using,the,common,jdbc,2,0,code,set,binary,stream,code,set,character,stream,method,for,setting,the,content,switch,this,to,true,for,explicit,blob,clob,wrapping,against,jdbc,drivers,that,are,known,to,require,such,wrapping,e,g,postgre,sql,s,for,access,to,oid,columns,whereas,bytea,columns,need,to,be,accessed,the,standard,way,p,this,setting,affects,byte,array,string,arguments,as,well,as,stream,arguments,unless,link,set,stream,as,lob,stream,as,lob,overrides,this,handling,to,use,jdbc,4,0,s,new,explicit,streaming,support,if,available,see,java,sql,prepared,statement,set,blob,int,java,sql,blob,see,java,sql,prepared,statement,set,clob,int,java,sql,clob;public,void,set,wrap,as,lob,boolean,wrap,as,lob,this,wrap,as,lob,wrap,as,lob
DefaultLobHandler -> public void setWrapAsLob(boolean wrapAsLob);1368482696;Specify whether to submit a byte array / String to the JDBC driver_wrapped in a JDBC Blob / Clob object, using the JDBC {@code setBlob} /_{@code setClob} method with a Blob / Clob argument._<p>Default is "false", using the common JDBC 2.0 {@code setBinaryStream}_/ {@code setCharacterStream} method for setting the content. Switch this_to "true" for explicit Blob / Clob wrapping against JDBC drivers that_are known to require such wrapping (e.g. PostgreSQL's for access to OID_columns, whereas BYTEA columns need to be accessed the standard way)._<p>This setting affects byte array / String arguments as well as stream_arguments, unless {@link #setStreamAsLob "streamAsLob"} overrides this_handling to use JDBC 4.0's new explicit streaming support (if available)._@see java.sql.PreparedStatement#setBlob(int, java.sql.Blob)_@see java.sql.PreparedStatement#setClob(int, java.sql.Clob);public void setWrapAsLob(boolean wrapAsLob) {_		this.wrapAsLob = wrapAsLob__	};specify,whether,to,submit,a,byte,array,string,to,the,jdbc,driver,wrapped,in,a,jdbc,blob,clob,object,using,the,jdbc,code,set,blob,code,set,clob,method,with,a,blob,clob,argument,p,default,is,false,using,the,common,jdbc,2,0,code,set,binary,stream,code,set,character,stream,method,for,setting,the,content,switch,this,to,true,for,explicit,blob,clob,wrapping,against,jdbc,drivers,that,are,known,to,require,such,wrapping,e,g,postgre,sql,s,for,access,to,oid,columns,whereas,bytea,columns,need,to,be,accessed,the,standard,way,p,this,setting,affects,byte,array,string,arguments,as,well,as,stream,arguments,unless,link,set,stream,as,lob,stream,as,lob,overrides,this,handling,to,use,jdbc,4,0,s,new,explicit,streaming,support,if,available,see,java,sql,prepared,statement,set,blob,int,java,sql,blob,see,java,sql,prepared,statement,set,clob,int,java,sql,clob;public,void,set,wrap,as,lob,boolean,wrap,as,lob,this,wrap,as,lob,wrap,as,lob
DefaultLobHandler -> public void setWrapAsLob(boolean wrapAsLob);1385412762;Specify whether to submit a byte array / String to the JDBC driver_wrapped in a JDBC Blob / Clob object, using the JDBC {@code setBlob} /_{@code setClob} method with a Blob / Clob argument._<p>Default is "false", using the common JDBC 2.0 {@code setBinaryStream}_/ {@code setCharacterStream} method for setting the content. Switch this_to "true" for explicit Blob / Clob wrapping against JDBC drivers that_are known to require such wrapping (e.g. PostgreSQL's for access to OID_columns, whereas BYTEA columns need to be accessed the standard way)._<p>This setting affects byte array / String arguments as well as stream_arguments, unless {@link #setStreamAsLob "streamAsLob"} overrides this_handling to use JDBC 4.0's new explicit streaming support (if available)._@see java.sql.PreparedStatement#setBlob(int, java.sql.Blob)_@see java.sql.PreparedStatement#setClob(int, java.sql.Clob);public void setWrapAsLob(boolean wrapAsLob) {_		this.wrapAsLob = wrapAsLob__	};specify,whether,to,submit,a,byte,array,string,to,the,jdbc,driver,wrapped,in,a,jdbc,blob,clob,object,using,the,jdbc,code,set,blob,code,set,clob,method,with,a,blob,clob,argument,p,default,is,false,using,the,common,jdbc,2,0,code,set,binary,stream,code,set,character,stream,method,for,setting,the,content,switch,this,to,true,for,explicit,blob,clob,wrapping,against,jdbc,drivers,that,are,known,to,require,such,wrapping,e,g,postgre,sql,s,for,access,to,oid,columns,whereas,bytea,columns,need,to,be,accessed,the,standard,way,p,this,setting,affects,byte,array,string,arguments,as,well,as,stream,arguments,unless,link,set,stream,as,lob,stream,as,lob,overrides,this,handling,to,use,jdbc,4,0,s,new,explicit,streaming,support,if,available,see,java,sql,prepared,statement,set,blob,int,java,sql,blob,see,java,sql,prepared,statement,set,clob,int,java,sql,clob;public,void,set,wrap,as,lob,boolean,wrap,as,lob,this,wrap,as,lob,wrap,as,lob
DefaultLobHandler -> public void setWrapAsLob(boolean wrapAsLob);1411768603;Specify whether to submit a byte array / String to the JDBC driver_wrapped in a JDBC Blob / Clob object, using the JDBC {@code setBlob} /_{@code setClob} method with a Blob / Clob argument._<p>Default is "false", using the common JDBC 2.0 {@code setBinaryStream}_/ {@code setCharacterStream} method for setting the content. Switch this_to "true" for explicit Blob / Clob wrapping against JDBC drivers that_are known to require such wrapping (e.g. PostgreSQL's for access to OID_columns, whereas BYTEA columns need to be accessed the standard way)._<p>This setting affects byte array / String arguments as well as stream_arguments, unless {@link #setStreamAsLob "streamAsLob"} overrides this_handling to use JDBC 4.0's new explicit streaming support (if available)._@see java.sql.PreparedStatement#setBlob(int, java.sql.Blob)_@see java.sql.PreparedStatement#setClob(int, java.sql.Clob);public void setWrapAsLob(boolean wrapAsLob) {_		this.wrapAsLob = wrapAsLob__	};specify,whether,to,submit,a,byte,array,string,to,the,jdbc,driver,wrapped,in,a,jdbc,blob,clob,object,using,the,jdbc,code,set,blob,code,set,clob,method,with,a,blob,clob,argument,p,default,is,false,using,the,common,jdbc,2,0,code,set,binary,stream,code,set,character,stream,method,for,setting,the,content,switch,this,to,true,for,explicit,blob,clob,wrapping,against,jdbc,drivers,that,are,known,to,require,such,wrapping,e,g,postgre,sql,s,for,access,to,oid,columns,whereas,bytea,columns,need,to,be,accessed,the,standard,way,p,this,setting,affects,byte,array,string,arguments,as,well,as,stream,arguments,unless,link,set,stream,as,lob,stream,as,lob,overrides,this,handling,to,use,jdbc,4,0,s,new,explicit,streaming,support,if,available,see,java,sql,prepared,statement,set,blob,int,java,sql,blob,see,java,sql,prepared,statement,set,clob,int,java,sql,clob;public,void,set,wrap,as,lob,boolean,wrap,as,lob,this,wrap,as,lob,wrap,as,lob
DefaultLobHandler -> public void setWrapAsLob(boolean wrapAsLob);1411769761;Specify whether to submit a byte array / String to the JDBC driver_wrapped in a JDBC Blob / Clob object, using the JDBC {@code setBlob} /_{@code setClob} method with a Blob / Clob argument._<p>Default is "false", using the common JDBC 2.0 {@code setBinaryStream}_/ {@code setCharacterStream} method for setting the content. Switch this_to "true" for explicit Blob / Clob wrapping against JDBC drivers that_are known to require such wrapping (e.g. PostgreSQL's for access to OID_columns, whereas BYTEA columns need to be accessed the standard way)._<p>This setting affects byte array / String arguments as well as stream_arguments, unless {@link #setStreamAsLob "streamAsLob"} overrides this_handling to use JDBC 4.0's new explicit streaming support (if available)._@see java.sql.PreparedStatement#setBlob(int, java.sql.Blob)_@see java.sql.PreparedStatement#setClob(int, java.sql.Clob);public void setWrapAsLob(boolean wrapAsLob) {_		this.wrapAsLob = wrapAsLob__	};specify,whether,to,submit,a,byte,array,string,to,the,jdbc,driver,wrapped,in,a,jdbc,blob,clob,object,using,the,jdbc,code,set,blob,code,set,clob,method,with,a,blob,clob,argument,p,default,is,false,using,the,common,jdbc,2,0,code,set,binary,stream,code,set,character,stream,method,for,setting,the,content,switch,this,to,true,for,explicit,blob,clob,wrapping,against,jdbc,drivers,that,are,known,to,require,such,wrapping,e,g,postgre,sql,s,for,access,to,oid,columns,whereas,bytea,columns,need,to,be,accessed,the,standard,way,p,this,setting,affects,byte,array,string,arguments,as,well,as,stream,arguments,unless,link,set,stream,as,lob,stream,as,lob,overrides,this,handling,to,use,jdbc,4,0,s,new,explicit,streaming,support,if,available,see,java,sql,prepared,statement,set,blob,int,java,sql,blob,see,java,sql,prepared,statement,set,clob,int,java,sql,clob;public,void,set,wrap,as,lob,boolean,wrap,as,lob,this,wrap,as,lob,wrap,as,lob
DefaultLobHandler -> public void setWrapAsLob(boolean wrapAsLob);1450380453;Specify whether to submit a byte array / String to the JDBC driver_wrapped in a JDBC Blob / Clob object, using the JDBC {@code setBlob} /_{@code setClob} method with a Blob / Clob argument._<p>Default is "false", using the common JDBC 2.0 {@code setBinaryStream}_/ {@code setCharacterStream} method for setting the content. Switch this_to "true" for explicit Blob / Clob wrapping against JDBC drivers that_are known to require such wrapping (e.g. PostgreSQL's for access to OID_columns, whereas BYTEA columns need to be accessed the standard way)._<p>This setting affects byte array / String arguments as well as stream_arguments, unless {@link #setStreamAsLob "streamAsLob"} overrides this_handling to use JDBC 4.0's new explicit streaming support (if available)._@see java.sql.PreparedStatement#setBlob(int, java.sql.Blob)_@see java.sql.PreparedStatement#setClob(int, java.sql.Clob);public void setWrapAsLob(boolean wrapAsLob) {_		this.wrapAsLob = wrapAsLob__	};specify,whether,to,submit,a,byte,array,string,to,the,jdbc,driver,wrapped,in,a,jdbc,blob,clob,object,using,the,jdbc,code,set,blob,code,set,clob,method,with,a,blob,clob,argument,p,default,is,false,using,the,common,jdbc,2,0,code,set,binary,stream,code,set,character,stream,method,for,setting,the,content,switch,this,to,true,for,explicit,blob,clob,wrapping,against,jdbc,drivers,that,are,known,to,require,such,wrapping,e,g,postgre,sql,s,for,access,to,oid,columns,whereas,bytea,columns,need,to,be,accessed,the,standard,way,p,this,setting,affects,byte,array,string,arguments,as,well,as,stream,arguments,unless,link,set,stream,as,lob,stream,as,lob,overrides,this,handling,to,use,jdbc,4,0,s,new,explicit,streaming,support,if,available,see,java,sql,prepared,statement,set,blob,int,java,sql,blob,see,java,sql,prepared,statement,set,clob,int,java,sql,clob;public,void,set,wrap,as,lob,boolean,wrap,as,lob,this,wrap,as,lob,wrap,as,lob
DefaultLobHandler -> public void setWrapAsLob(boolean wrapAsLob);1468613531;Specify whether to submit a byte array / String to the JDBC driver_wrapped in a JDBC Blob / Clob object, using the JDBC {@code setBlob} /_{@code setClob} method with a Blob / Clob argument._<p>Default is "false", using the common JDBC 2.0 {@code setBinaryStream}_/ {@code setCharacterStream} method for setting the content. Switch this_to "true" for explicit Blob / Clob wrapping against JDBC drivers that_are known to require such wrapping (e.g. PostgreSQL's for access to OID_columns, whereas BYTEA columns need to be accessed the standard way)._<p>This setting affects byte array / String arguments as well as stream_arguments, unless {@link #setStreamAsLob "streamAsLob"} overrides this_handling to use JDBC 4.0's new explicit streaming support (if available)._@see java.sql.PreparedStatement#setBlob(int, java.sql.Blob)_@see java.sql.PreparedStatement#setClob(int, java.sql.Clob);public void setWrapAsLob(boolean wrapAsLob) {_		this.wrapAsLob = wrapAsLob__	};specify,whether,to,submit,a,byte,array,string,to,the,jdbc,driver,wrapped,in,a,jdbc,blob,clob,object,using,the,jdbc,code,set,blob,code,set,clob,method,with,a,blob,clob,argument,p,default,is,false,using,the,common,jdbc,2,0,code,set,binary,stream,code,set,character,stream,method,for,setting,the,content,switch,this,to,true,for,explicit,blob,clob,wrapping,against,jdbc,drivers,that,are,known,to,require,such,wrapping,e,g,postgre,sql,s,for,access,to,oid,columns,whereas,bytea,columns,need,to,be,accessed,the,standard,way,p,this,setting,affects,byte,array,string,arguments,as,well,as,stream,arguments,unless,link,set,stream,as,lob,stream,as,lob,overrides,this,handling,to,use,jdbc,4,0,s,new,explicit,streaming,support,if,available,see,java,sql,prepared,statement,set,blob,int,java,sql,blob,see,java,sql,prepared,statement,set,clob,int,java,sql,clob;public,void,set,wrap,as,lob,boolean,wrap,as,lob,this,wrap,as,lob,wrap,as,lob
DefaultLobHandler -> public void setWrapAsLob(boolean wrapAsLob);1496242568;Specify whether to submit a byte array / String to the JDBC driver_wrapped in a JDBC Blob / Clob object, using the JDBC {@code setBlob} /_{@code setClob} method with a Blob / Clob argument._<p>Default is "false", using the common JDBC 2.0 {@code setBinaryStream}_/ {@code setCharacterStream} method for setting the content. Switch this_to "true" for explicit Blob / Clob wrapping against JDBC drivers that_are known to require such wrapping (e.g. PostgreSQL's for access to OID_columns, whereas BYTEA columns need to be accessed the standard way)._<p>This setting affects byte array / String arguments as well as stream_arguments, unless {@link #setStreamAsLob "streamAsLob"} overrides this_handling to use JDBC 4.0's new explicit streaming support (if available)._@see java.sql.PreparedStatement#setBlob(int, java.sql.Blob)_@see java.sql.PreparedStatement#setClob(int, java.sql.Clob);public void setWrapAsLob(boolean wrapAsLob) {_		this.wrapAsLob = wrapAsLob__	};specify,whether,to,submit,a,byte,array,string,to,the,jdbc,driver,wrapped,in,a,jdbc,blob,clob,object,using,the,jdbc,code,set,blob,code,set,clob,method,with,a,blob,clob,argument,p,default,is,false,using,the,common,jdbc,2,0,code,set,binary,stream,code,set,character,stream,method,for,setting,the,content,switch,this,to,true,for,explicit,blob,clob,wrapping,against,jdbc,drivers,that,are,known,to,require,such,wrapping,e,g,postgre,sql,s,for,access,to,oid,columns,whereas,bytea,columns,need,to,be,accessed,the,standard,way,p,this,setting,affects,byte,array,string,arguments,as,well,as,stream,arguments,unless,link,set,stream,as,lob,stream,as,lob,overrides,this,handling,to,use,jdbc,4,0,s,new,explicit,streaming,support,if,available,see,java,sql,prepared,statement,set,blob,int,java,sql,blob,see,java,sql,prepared,statement,set,clob,int,java,sql,clob;public,void,set,wrap,as,lob,boolean,wrap,as,lob,this,wrap,as,lob,wrap,as,lob
DefaultLobHandler -> public void setWrapAsLob(boolean wrapAsLob);1497275505;Specify whether to submit a byte array / String to the JDBC driver_wrapped in a JDBC Blob / Clob object, using the JDBC {@code setBlob} /_{@code setClob} method with a Blob / Clob argument._<p>Default is "false", using the common JDBC 2.0 {@code setBinaryStream}_/ {@code setCharacterStream} method for setting the content. Switch this_to "true" for explicit Blob / Clob wrapping against JDBC drivers that_are known to require such wrapping (e.g. PostgreSQL's for access to OID_columns, whereas BYTEA columns need to be accessed the standard way)._<p>This setting affects byte array / String arguments as well as stream_arguments, unless {@link #setStreamAsLob "streamAsLob"} overrides this_handling to use JDBC 4.0's new explicit streaming support (if available)._@see java.sql.PreparedStatement#setBlob(int, java.sql.Blob)_@see java.sql.PreparedStatement#setClob(int, java.sql.Clob);public void setWrapAsLob(boolean wrapAsLob) {_		this.wrapAsLob = wrapAsLob__	};specify,whether,to,submit,a,byte,array,string,to,the,jdbc,driver,wrapped,in,a,jdbc,blob,clob,object,using,the,jdbc,code,set,blob,code,set,clob,method,with,a,blob,clob,argument,p,default,is,false,using,the,common,jdbc,2,0,code,set,binary,stream,code,set,character,stream,method,for,setting,the,content,switch,this,to,true,for,explicit,blob,clob,wrapping,against,jdbc,drivers,that,are,known,to,require,such,wrapping,e,g,postgre,sql,s,for,access,to,oid,columns,whereas,bytea,columns,need,to,be,accessed,the,standard,way,p,this,setting,affects,byte,array,string,arguments,as,well,as,stream,arguments,unless,link,set,stream,as,lob,stream,as,lob,overrides,this,handling,to,use,jdbc,4,0,s,new,explicit,streaming,support,if,available,see,java,sql,prepared,statement,set,blob,int,java,sql,blob,see,java,sql,prepared,statement,set,clob,int,java,sql,clob;public,void,set,wrap,as,lob,boolean,wrap,as,lob,this,wrap,as,lob,wrap,as,lob
DefaultLobHandler -> public void setWrapAsLob(boolean wrapAsLob);1502974979;Specify whether to submit a byte array / String to the JDBC driver_wrapped in a JDBC Blob / Clob object, using the JDBC {@code setBlob} /_{@code setClob} method with a Blob / Clob argument._<p>Default is "false", using the common JDBC 2.0 {@code setBinaryStream}_/ {@code setCharacterStream} method for setting the content. Switch this_to "true" for explicit Blob / Clob wrapping against JDBC drivers that_are known to require such wrapping (e.g. PostgreSQL's for access to OID_columns, whereas BYTEA columns need to be accessed the standard way)._<p>This setting affects byte array / String arguments as well as stream_arguments, unless {@link #setStreamAsLob "streamAsLob"} overrides this_handling to use JDBC 4.0's new explicit streaming support (if available)._@see java.sql.PreparedStatement#setBlob(int, java.sql.Blob)_@see java.sql.PreparedStatement#setClob(int, java.sql.Clob);public void setWrapAsLob(boolean wrapAsLob) {_		this.wrapAsLob = wrapAsLob__	};specify,whether,to,submit,a,byte,array,string,to,the,jdbc,driver,wrapped,in,a,jdbc,blob,clob,object,using,the,jdbc,code,set,blob,code,set,clob,method,with,a,blob,clob,argument,p,default,is,false,using,the,common,jdbc,2,0,code,set,binary,stream,code,set,character,stream,method,for,setting,the,content,switch,this,to,true,for,explicit,blob,clob,wrapping,against,jdbc,drivers,that,are,known,to,require,such,wrapping,e,g,postgre,sql,s,for,access,to,oid,columns,whereas,bytea,columns,need,to,be,accessed,the,standard,way,p,this,setting,affects,byte,array,string,arguments,as,well,as,stream,arguments,unless,link,set,stream,as,lob,stream,as,lob,overrides,this,handling,to,use,jdbc,4,0,s,new,explicit,streaming,support,if,available,see,java,sql,prepared,statement,set,blob,int,java,sql,blob,see,java,sql,prepared,statement,set,clob,int,java,sql,clob;public,void,set,wrap,as,lob,boolean,wrap,as,lob,this,wrap,as,lob,wrap,as,lob
DefaultLobHandler -> public void setCreateTemporaryLob(boolean createTemporaryLob);1362408075;Specify whether to copy a byte array / String into a temporary JDBC_Blob / Clob object created through the JDBC 4.0 {@code createBlob} /_{@code createClob} methods._<p>Default is "false", using the common JDBC 2.0 {@code setBinaryStream}_/ {@code setCharacterStream} method for setting the content. Switch this_to "true" for explicit Blob / Clob creation using JDBC 4.0._<p>This setting affects stream arguments as well as byte array / String_arguments, requiring JDBC 4.0 support. For supporting LOB content against_JDBC 3.0, check out the {@link #setWrapAsLob "wrapAsLob"} setting._@see java.sql.Connection#createBlob()_@see java.sql.Connection#createClob();public void setCreateTemporaryLob(boolean createTemporaryLob) {_		this.createTemporaryLob = createTemporaryLob__	};specify,whether,to,copy,a,byte,array,string,into,a,temporary,jdbc,blob,clob,object,created,through,the,jdbc,4,0,code,create,blob,code,create,clob,methods,p,default,is,false,using,the,common,jdbc,2,0,code,set,binary,stream,code,set,character,stream,method,for,setting,the,content,switch,this,to,true,for,explicit,blob,clob,creation,using,jdbc,4,0,p,this,setting,affects,stream,arguments,as,well,as,byte,array,string,arguments,requiring,jdbc,4,0,support,for,supporting,lob,content,against,jdbc,3,0,check,out,the,link,set,wrap,as,lob,wrap,as,lob,setting,see,java,sql,connection,create,blob,see,java,sql,connection,create,clob;public,void,set,create,temporary,lob,boolean,create,temporary,lob,this,create,temporary,lob,create,temporary,lob
DefaultLobHandler -> public void setCreateTemporaryLob(boolean createTemporaryLob);1368482696;Specify whether to copy a byte array / String into a temporary JDBC_Blob / Clob object created through the JDBC 4.0 {@code createBlob} /_{@code createClob} methods._<p>Default is "false", using the common JDBC 2.0 {@code setBinaryStream}_/ {@code setCharacterStream} method for setting the content. Switch this_to "true" for explicit Blob / Clob creation using JDBC 4.0._<p>This setting affects stream arguments as well as byte array / String_arguments, requiring JDBC 4.0 support. For supporting LOB content against_JDBC 3.0, check out the {@link #setWrapAsLob "wrapAsLob"} setting._@see java.sql.Connection#createBlob()_@see java.sql.Connection#createClob();public void setCreateTemporaryLob(boolean createTemporaryLob) {_		this.createTemporaryLob = createTemporaryLob__	};specify,whether,to,copy,a,byte,array,string,into,a,temporary,jdbc,blob,clob,object,created,through,the,jdbc,4,0,code,create,blob,code,create,clob,methods,p,default,is,false,using,the,common,jdbc,2,0,code,set,binary,stream,code,set,character,stream,method,for,setting,the,content,switch,this,to,true,for,explicit,blob,clob,creation,using,jdbc,4,0,p,this,setting,affects,stream,arguments,as,well,as,byte,array,string,arguments,requiring,jdbc,4,0,support,for,supporting,lob,content,against,jdbc,3,0,check,out,the,link,set,wrap,as,lob,wrap,as,lob,setting,see,java,sql,connection,create,blob,see,java,sql,connection,create,clob;public,void,set,create,temporary,lob,boolean,create,temporary,lob,this,create,temporary,lob,create,temporary,lob
DefaultLobHandler -> public void setCreateTemporaryLob(boolean createTemporaryLob);1385412762;Specify whether to copy a byte array / String into a temporary JDBC_Blob / Clob object created through the JDBC 4.0 {@code createBlob} /_{@code createClob} methods._<p>Default is "false", using the common JDBC 2.0 {@code setBinaryStream}_/ {@code setCharacterStream} method for setting the content. Switch this_to "true" for explicit Blob / Clob creation using JDBC 4.0._<p>This setting affects stream arguments as well as byte array / String_arguments, requiring JDBC 4.0 support. For supporting LOB content against_JDBC 3.0, check out the {@link #setWrapAsLob "wrapAsLob"} setting._@see java.sql.Connection#createBlob()_@see java.sql.Connection#createClob();public void setCreateTemporaryLob(boolean createTemporaryLob) {_		this.createTemporaryLob = createTemporaryLob__	};specify,whether,to,copy,a,byte,array,string,into,a,temporary,jdbc,blob,clob,object,created,through,the,jdbc,4,0,code,create,blob,code,create,clob,methods,p,default,is,false,using,the,common,jdbc,2,0,code,set,binary,stream,code,set,character,stream,method,for,setting,the,content,switch,this,to,true,for,explicit,blob,clob,creation,using,jdbc,4,0,p,this,setting,affects,stream,arguments,as,well,as,byte,array,string,arguments,requiring,jdbc,4,0,support,for,supporting,lob,content,against,jdbc,3,0,check,out,the,link,set,wrap,as,lob,wrap,as,lob,setting,see,java,sql,connection,create,blob,see,java,sql,connection,create,clob;public,void,set,create,temporary,lob,boolean,create,temporary,lob,this,create,temporary,lob,create,temporary,lob
DefaultLobHandler -> public void setCreateTemporaryLob(boolean createTemporaryLob);1411768603;Specify whether to copy a byte array / String into a temporary JDBC_Blob / Clob object created through the JDBC 4.0 {@code createBlob} /_{@code createClob} methods._<p>Default is "false", using the common JDBC 2.0 {@code setBinaryStream}_/ {@code setCharacterStream} method for setting the content. Switch this_to "true" for explicit Blob / Clob creation using JDBC 4.0._<p>This setting affects stream arguments as well as byte array / String_arguments, requiring JDBC 4.0 support. For supporting LOB content against_JDBC 3.0, check out the {@link #setWrapAsLob "wrapAsLob"} setting._@see java.sql.Connection#createBlob()_@see java.sql.Connection#createClob();public void setCreateTemporaryLob(boolean createTemporaryLob) {_		this.createTemporaryLob = createTemporaryLob__	};specify,whether,to,copy,a,byte,array,string,into,a,temporary,jdbc,blob,clob,object,created,through,the,jdbc,4,0,code,create,blob,code,create,clob,methods,p,default,is,false,using,the,common,jdbc,2,0,code,set,binary,stream,code,set,character,stream,method,for,setting,the,content,switch,this,to,true,for,explicit,blob,clob,creation,using,jdbc,4,0,p,this,setting,affects,stream,arguments,as,well,as,byte,array,string,arguments,requiring,jdbc,4,0,support,for,supporting,lob,content,against,jdbc,3,0,check,out,the,link,set,wrap,as,lob,wrap,as,lob,setting,see,java,sql,connection,create,blob,see,java,sql,connection,create,clob;public,void,set,create,temporary,lob,boolean,create,temporary,lob,this,create,temporary,lob,create,temporary,lob
DefaultLobHandler -> public void setCreateTemporaryLob(boolean createTemporaryLob);1411769761;Specify whether to copy a byte array / String into a temporary JDBC_Blob / Clob object created through the JDBC 4.0 {@code createBlob} /_{@code createClob} methods._<p>Default is "false", using the common JDBC 2.0 {@code setBinaryStream}_/ {@code setCharacterStream} method for setting the content. Switch this_to "true" for explicit Blob / Clob creation using JDBC 4.0._<p>This setting affects stream arguments as well as byte array / String_arguments, requiring JDBC 4.0 support. For supporting LOB content against_JDBC 3.0, check out the {@link #setWrapAsLob "wrapAsLob"} setting._@see java.sql.Connection#createBlob()_@see java.sql.Connection#createClob();public void setCreateTemporaryLob(boolean createTemporaryLob) {_		this.createTemporaryLob = createTemporaryLob__	};specify,whether,to,copy,a,byte,array,string,into,a,temporary,jdbc,blob,clob,object,created,through,the,jdbc,4,0,code,create,blob,code,create,clob,methods,p,default,is,false,using,the,common,jdbc,2,0,code,set,binary,stream,code,set,character,stream,method,for,setting,the,content,switch,this,to,true,for,explicit,blob,clob,creation,using,jdbc,4,0,p,this,setting,affects,stream,arguments,as,well,as,byte,array,string,arguments,requiring,jdbc,4,0,support,for,supporting,lob,content,against,jdbc,3,0,check,out,the,link,set,wrap,as,lob,wrap,as,lob,setting,see,java,sql,connection,create,blob,see,java,sql,connection,create,clob;public,void,set,create,temporary,lob,boolean,create,temporary,lob,this,create,temporary,lob,create,temporary,lob
DefaultLobHandler -> public void setCreateTemporaryLob(boolean createTemporaryLob);1450380453;Specify whether to copy a byte array / String into a temporary JDBC_Blob / Clob object created through the JDBC 4.0 {@code createBlob} /_{@code createClob} methods._<p>Default is "false", using the common JDBC 2.0 {@code setBinaryStream}_/ {@code setCharacterStream} method for setting the content. Switch this_to "true" for explicit Blob / Clob creation using JDBC 4.0._<p>This setting affects stream arguments as well as byte array / String_arguments, requiring JDBC 4.0 support. For supporting LOB content against_JDBC 3.0, check out the {@link #setWrapAsLob "wrapAsLob"} setting._@see java.sql.Connection#createBlob()_@see java.sql.Connection#createClob();public void setCreateTemporaryLob(boolean createTemporaryLob) {_		this.createTemporaryLob = createTemporaryLob__	};specify,whether,to,copy,a,byte,array,string,into,a,temporary,jdbc,blob,clob,object,created,through,the,jdbc,4,0,code,create,blob,code,create,clob,methods,p,default,is,false,using,the,common,jdbc,2,0,code,set,binary,stream,code,set,character,stream,method,for,setting,the,content,switch,this,to,true,for,explicit,blob,clob,creation,using,jdbc,4,0,p,this,setting,affects,stream,arguments,as,well,as,byte,array,string,arguments,requiring,jdbc,4,0,support,for,supporting,lob,content,against,jdbc,3,0,check,out,the,link,set,wrap,as,lob,wrap,as,lob,setting,see,java,sql,connection,create,blob,see,java,sql,connection,create,clob;public,void,set,create,temporary,lob,boolean,create,temporary,lob,this,create,temporary,lob,create,temporary,lob
DefaultLobHandler -> public void setCreateTemporaryLob(boolean createTemporaryLob);1468613531;Specify whether to copy a byte array / String into a temporary JDBC_Blob / Clob object created through the JDBC 4.0 {@code createBlob} /_{@code createClob} methods._<p>Default is "false", using the common JDBC 2.0 {@code setBinaryStream}_/ {@code setCharacterStream} method for setting the content. Switch this_to "true" for explicit Blob / Clob creation using JDBC 4.0._<p>This setting affects stream arguments as well as byte array / String_arguments, requiring JDBC 4.0 support. For supporting LOB content against_JDBC 3.0, check out the {@link #setWrapAsLob "wrapAsLob"} setting._@see java.sql.Connection#createBlob()_@see java.sql.Connection#createClob();public void setCreateTemporaryLob(boolean createTemporaryLob) {_		this.createTemporaryLob = createTemporaryLob__	};specify,whether,to,copy,a,byte,array,string,into,a,temporary,jdbc,blob,clob,object,created,through,the,jdbc,4,0,code,create,blob,code,create,clob,methods,p,default,is,false,using,the,common,jdbc,2,0,code,set,binary,stream,code,set,character,stream,method,for,setting,the,content,switch,this,to,true,for,explicit,blob,clob,creation,using,jdbc,4,0,p,this,setting,affects,stream,arguments,as,well,as,byte,array,string,arguments,requiring,jdbc,4,0,support,for,supporting,lob,content,against,jdbc,3,0,check,out,the,link,set,wrap,as,lob,wrap,as,lob,setting,see,java,sql,connection,create,blob,see,java,sql,connection,create,clob;public,void,set,create,temporary,lob,boolean,create,temporary,lob,this,create,temporary,lob,create,temporary,lob
DefaultLobHandler -> public void setCreateTemporaryLob(boolean createTemporaryLob);1496242568;Specify whether to copy a byte array / String into a temporary JDBC_Blob / Clob object created through the JDBC 4.0 {@code createBlob} /_{@code createClob} methods._<p>Default is "false", using the common JDBC 2.0 {@code setBinaryStream}_/ {@code setCharacterStream} method for setting the content. Switch this_to "true" for explicit Blob / Clob creation using JDBC 4.0._<p>This setting affects stream arguments as well as byte array / String_arguments, requiring JDBC 4.0 support. For supporting LOB content against_JDBC 3.0, check out the {@link #setWrapAsLob "wrapAsLob"} setting._@see java.sql.Connection#createBlob()_@see java.sql.Connection#createClob();public void setCreateTemporaryLob(boolean createTemporaryLob) {_		this.createTemporaryLob = createTemporaryLob__	};specify,whether,to,copy,a,byte,array,string,into,a,temporary,jdbc,blob,clob,object,created,through,the,jdbc,4,0,code,create,blob,code,create,clob,methods,p,default,is,false,using,the,common,jdbc,2,0,code,set,binary,stream,code,set,character,stream,method,for,setting,the,content,switch,this,to,true,for,explicit,blob,clob,creation,using,jdbc,4,0,p,this,setting,affects,stream,arguments,as,well,as,byte,array,string,arguments,requiring,jdbc,4,0,support,for,supporting,lob,content,against,jdbc,3,0,check,out,the,link,set,wrap,as,lob,wrap,as,lob,setting,see,java,sql,connection,create,blob,see,java,sql,connection,create,clob;public,void,set,create,temporary,lob,boolean,create,temporary,lob,this,create,temporary,lob,create,temporary,lob
DefaultLobHandler -> public void setCreateTemporaryLob(boolean createTemporaryLob);1497275505;Specify whether to copy a byte array / String into a temporary JDBC_Blob / Clob object created through the JDBC 4.0 {@code createBlob} /_{@code createClob} methods._<p>Default is "false", using the common JDBC 2.0 {@code setBinaryStream}_/ {@code setCharacterStream} method for setting the content. Switch this_to "true" for explicit Blob / Clob creation using JDBC 4.0._<p>This setting affects stream arguments as well as byte array / String_arguments, requiring JDBC 4.0 support. For supporting LOB content against_JDBC 3.0, check out the {@link #setWrapAsLob "wrapAsLob"} setting._@see java.sql.Connection#createBlob()_@see java.sql.Connection#createClob();public void setCreateTemporaryLob(boolean createTemporaryLob) {_		this.createTemporaryLob = createTemporaryLob__	};specify,whether,to,copy,a,byte,array,string,into,a,temporary,jdbc,blob,clob,object,created,through,the,jdbc,4,0,code,create,blob,code,create,clob,methods,p,default,is,false,using,the,common,jdbc,2,0,code,set,binary,stream,code,set,character,stream,method,for,setting,the,content,switch,this,to,true,for,explicit,blob,clob,creation,using,jdbc,4,0,p,this,setting,affects,stream,arguments,as,well,as,byte,array,string,arguments,requiring,jdbc,4,0,support,for,supporting,lob,content,against,jdbc,3,0,check,out,the,link,set,wrap,as,lob,wrap,as,lob,setting,see,java,sql,connection,create,blob,see,java,sql,connection,create,clob;public,void,set,create,temporary,lob,boolean,create,temporary,lob,this,create,temporary,lob,create,temporary,lob
DefaultLobHandler -> public void setCreateTemporaryLob(boolean createTemporaryLob);1502974979;Specify whether to copy a byte array / String into a temporary JDBC_Blob / Clob object created through the JDBC 4.0 {@code createBlob} /_{@code createClob} methods._<p>Default is "false", using the common JDBC 2.0 {@code setBinaryStream}_/ {@code setCharacterStream} method for setting the content. Switch this_to "true" for explicit Blob / Clob creation using JDBC 4.0._<p>This setting affects stream arguments as well as byte array / String_arguments, requiring JDBC 4.0 support. For supporting LOB content against_JDBC 3.0, check out the {@link #setWrapAsLob "wrapAsLob"} setting._@see java.sql.Connection#createBlob()_@see java.sql.Connection#createClob();public void setCreateTemporaryLob(boolean createTemporaryLob) {_		this.createTemporaryLob = createTemporaryLob__	};specify,whether,to,copy,a,byte,array,string,into,a,temporary,jdbc,blob,clob,object,created,through,the,jdbc,4,0,code,create,blob,code,create,clob,methods,p,default,is,false,using,the,common,jdbc,2,0,code,set,binary,stream,code,set,character,stream,method,for,setting,the,content,switch,this,to,true,for,explicit,blob,clob,creation,using,jdbc,4,0,p,this,setting,affects,stream,arguments,as,well,as,byte,array,string,arguments,requiring,jdbc,4,0,support,for,supporting,lob,content,against,jdbc,3,0,check,out,the,link,set,wrap,as,lob,wrap,as,lob,setting,see,java,sql,connection,create,blob,see,java,sql,connection,create,clob;public,void,set,create,temporary,lob,boolean,create,temporary,lob,this,create,temporary,lob,create,temporary,lob
