# id;timestamp;commentText;codeText;commentWords;codeWords
DatabaseMetaDataCallback -> Object processMetaData(DatabaseMetaData dbmd) throws SQLException, MetaDataAccessException_;1328020251;Implementations must implement this method to process the meta data_passed in. Exactly what the implementation chooses to do is up to it._@param dbmd the DatabaseMetaData to process_@return a result object extracted from the meta data_(can be an arbitrary object, as needed by the implementation)_@throws SQLException if a SQLException is encountered getting_column values (that is, there's no need to catch SQLException)_@throws MetaDataAccessException in case of other failures while_extracting meta data (for example, reflection failure);Object processMetaData(DatabaseMetaData dbmd) throws SQLException, MetaDataAccessException_;implementations,must,implement,this,method,to,process,the,meta,data,passed,in,exactly,what,the,implementation,chooses,to,do,is,up,to,it,param,dbmd,the,database,meta,data,to,process,return,a,result,object,extracted,from,the,meta,data,can,be,an,arbitrary,object,as,needed,by,the,implementation,throws,sqlexception,if,a,sqlexception,is,encountered,getting,column,values,that,is,there,s,no,need,to,catch,sqlexception,throws,meta,data,access,exception,in,case,of,other,failures,while,extracting,meta,data,for,example,reflection,failure;object,process,meta,data,database,meta,data,dbmd,throws,sqlexception,meta,data,access,exception
DatabaseMetaDataCallback -> Object processMetaData(DatabaseMetaData dbmd) throws SQLException, MetaDataAccessException_;1356735495;Implementations must implement this method to process the meta data_passed in. Exactly what the implementation chooses to do is up to it._@param dbmd the DatabaseMetaData to process_@return a result object extracted from the meta data_(can be an arbitrary object, as needed by the implementation)_@throws SQLException if a SQLException is encountered getting_column values (that is, there's no need to catch SQLException)_@throws MetaDataAccessException in case of other failures while_extracting meta data (for example, reflection failure);Object processMetaData(DatabaseMetaData dbmd) throws SQLException, MetaDataAccessException_;implementations,must,implement,this,method,to,process,the,meta,data,passed,in,exactly,what,the,implementation,chooses,to,do,is,up,to,it,param,dbmd,the,database,meta,data,to,process,return,a,result,object,extracted,from,the,meta,data,can,be,an,arbitrary,object,as,needed,by,the,implementation,throws,sqlexception,if,a,sqlexception,is,encountered,getting,column,values,that,is,there,s,no,need,to,catch,sqlexception,throws,meta,data,access,exception,in,case,of,other,failures,while,extracting,meta,data,for,example,reflection,failure;object,process,meta,data,database,meta,data,dbmd,throws,sqlexception,meta,data,access,exception
DatabaseMetaDataCallback -> Object processMetaData(DatabaseMetaData dbmd) throws SQLException, MetaDataAccessException_;1467808333;Implementations must implement this method to process the meta data_passed in. Exactly what the implementation chooses to do is up to it._@param dbmd the DatabaseMetaData to process_@return a result object extracted from the meta data_(can be an arbitrary object, as needed by the implementation)_@throws SQLException if a SQLException is encountered getting_column values (that is, there's no need to catch SQLException)_@throws MetaDataAccessException in case of other failures while_extracting meta data (for example, reflection failure);Object processMetaData(DatabaseMetaData dbmd) throws SQLException, MetaDataAccessException_;implementations,must,implement,this,method,to,process,the,meta,data,passed,in,exactly,what,the,implementation,chooses,to,do,is,up,to,it,param,dbmd,the,database,meta,data,to,process,return,a,result,object,extracted,from,the,meta,data,can,be,an,arbitrary,object,as,needed,by,the,implementation,throws,sqlexception,if,a,sqlexception,is,encountered,getting,column,values,that,is,there,s,no,need,to,catch,sqlexception,throws,meta,data,access,exception,in,case,of,other,failures,while,extracting,meta,data,for,example,reflection,failure;object,process,meta,data,database,meta,data,dbmd,throws,sqlexception,meta,data,access,exception
DatabaseMetaDataCallback -> Object processMetaData(DatabaseMetaData dbmd) throws SQLException, MetaDataAccessException_;1521457504;Implementations must implement this method to process the meta-data_passed in. Exactly what the implementation chooses to do is up to it._@param dbmd the DatabaseMetaData to process_@return a result object extracted from the meta-data_(can be an arbitrary object, as needed by the implementation)_@throws SQLException if a SQLException is encountered getting_column values (that is, there's no need to catch SQLException)_@throws MetaDataAccessException in case of other failures while_extracting meta-data (for example, reflection failure);Object processMetaData(DatabaseMetaData dbmd) throws SQLException, MetaDataAccessException_;implementations,must,implement,this,method,to,process,the,meta,data,passed,in,exactly,what,the,implementation,chooses,to,do,is,up,to,it,param,dbmd,the,database,meta,data,to,process,return,a,result,object,extracted,from,the,meta,data,can,be,an,arbitrary,object,as,needed,by,the,implementation,throws,sqlexception,if,a,sqlexception,is,encountered,getting,column,values,that,is,there,s,no,need,to,catch,sqlexception,throws,meta,data,access,exception,in,case,of,other,failures,while,extracting,meta,data,for,example,reflection,failure;object,process,meta,data,database,meta,data,dbmd,throws,sqlexception,meta,data,access,exception
