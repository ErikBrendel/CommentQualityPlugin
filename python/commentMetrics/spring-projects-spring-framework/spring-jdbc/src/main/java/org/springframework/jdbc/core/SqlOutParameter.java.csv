# id;timestamp;commentText;codeText;commentWords;codeWords
SqlOutParameter -> public SqlReturnType getSqlReturnType();1328020251;Return the custom return type, if any.;public SqlReturnType getSqlReturnType() {_		return this.sqlReturnType__	};return,the,custom,return,type,if,any;public,sql,return,type,get,sql,return,type,return,this,sql,return,type
SqlOutParameter -> public SqlReturnType getSqlReturnType();1385412762;Return the custom return type, if any.;public SqlReturnType getSqlReturnType() {_		return this.sqlReturnType__	};return,the,custom,return,type,if,any;public,sql,return,type,get,sql,return,type,return,this,sql,return,type
SqlOutParameter -> public SqlOutParameter(String name, int sqlType, @Nullable String typeName, @Nullable SqlReturnType sqlReturnType);1496837955;Create a new SqlOutParameter._@param name name of the parameter, as used in input and output maps_@param sqlType SQL type of the parameter according to java.sql.Types_@param typeName the type name of the parameter (optional)_@param sqlReturnType custom value handler for complex type (optional);public SqlOutParameter(String name, int sqlType, @Nullable String typeName, @Nullable SqlReturnType sqlReturnType) {_		super(name, sqlType, typeName)__		this.sqlReturnType = sqlReturnType__	};create,a,new,sql,out,parameter,param,name,name,of,the,parameter,as,used,in,input,and,output,maps,param,sql,type,sql,type,of,the,parameter,according,to,java,sql,types,param,type,name,the,type,name,of,the,parameter,optional,param,sql,return,type,custom,value,handler,for,complex,type,optional;public,sql,out,parameter,string,name,int,sql,type,nullable,string,type,name,nullable,sql,return,type,sql,return,type,super,name,sql,type,type,name,this,sql,return,type,sql,return,type
SqlOutParameter -> public SqlOutParameter(String name, int sqlType, @Nullable String typeName, @Nullable SqlReturnType sqlReturnType);1498780456;Create a new SqlOutParameter._@param name name of the parameter, as used in input and output maps_@param sqlType SQL type of the parameter according to java.sql.Types_@param typeName the type name of the parameter (optional)_@param sqlReturnType custom value handler for complex type (optional);public SqlOutParameter(String name, int sqlType, @Nullable String typeName, @Nullable SqlReturnType sqlReturnType) {_		super(name, sqlType, typeName)__		this.sqlReturnType = sqlReturnType__	};create,a,new,sql,out,parameter,param,name,name,of,the,parameter,as,used,in,input,and,output,maps,param,sql,type,sql,type,of,the,parameter,according,to,java,sql,types,param,type,name,the,type,name,of,the,parameter,optional,param,sql,return,type,custom,value,handler,for,complex,type,optional;public,sql,out,parameter,string,name,int,sql,type,nullable,string,type,name,nullable,sql,return,type,sql,return,type,super,name,sql,type,type,name,this,sql,return,type,sql,return,type
SqlOutParameter -> public SqlOutParameter(String name, int sqlType, @Nullable String typeName, @Nullable SqlReturnType sqlReturnType);1521457504;Create a new SqlOutParameter._@param name name of the parameter, as used in input and output maps_@param sqlType SQL type of the parameter according to java.sql.Types_@param typeName the type name of the parameter (optional)_@param sqlReturnType custom value handler for complex type (optional);public SqlOutParameter(String name, int sqlType, @Nullable String typeName, @Nullable SqlReturnType sqlReturnType) {_		super(name, sqlType, typeName)__		this.sqlReturnType = sqlReturnType__	};create,a,new,sql,out,parameter,param,name,name,of,the,parameter,as,used,in,input,and,output,maps,param,sql,type,sql,type,of,the,parameter,according,to,java,sql,types,param,type,name,the,type,name,of,the,parameter,optional,param,sql,return,type,custom,value,handler,for,complex,type,optional;public,sql,out,parameter,string,name,int,sql,type,nullable,string,type,name,nullable,sql,return,type,sql,return,type,super,name,sql,type,type,name,this,sql,return,type,sql,return,type
SqlOutParameter -> public SqlOutParameter(String name, int sqlType, @Nullable String typeName, @Nullable SqlReturnType sqlReturnType);1530174524;Create a new SqlOutParameter._@param name name of the parameter, as used in input and output maps_@param sqlType the parameter SQL type according to {@code java.sql.Types}_@param typeName the type name of the parameter (optional)_@param sqlReturnType custom value handler for complex type (optional);public SqlOutParameter(String name, int sqlType, @Nullable String typeName, @Nullable SqlReturnType sqlReturnType) {_		super(name, sqlType, typeName)__		this.sqlReturnType = sqlReturnType__	};create,a,new,sql,out,parameter,param,name,name,of,the,parameter,as,used,in,input,and,output,maps,param,sql,type,the,parameter,sql,type,according,to,code,java,sql,types,param,type,name,the,type,name,of,the,parameter,optional,param,sql,return,type,custom,value,handler,for,complex,type,optional;public,sql,out,parameter,string,name,int,sql,type,nullable,string,type,name,nullable,sql,return,type,sql,return,type,super,name,sql,type,type,name,this,sql,return,type,sql,return,type
SqlOutParameter -> public boolean isReturnTypeSupported();1328020251;Return whether this parameter holds a custom return type.;public boolean isReturnTypeSupported() {_		return (this.sqlReturnType != null)__	};return,whether,this,parameter,holds,a,custom,return,type;public,boolean,is,return,type,supported,return,this,sql,return,type,null
SqlOutParameter -> public boolean isReturnTypeSupported();1385412762;Return whether this parameter holds a custom return type.;public boolean isReturnTypeSupported() {_		return (this.sqlReturnType != null)__	};return,whether,this,parameter,holds,a,custom,return,type;public,boolean,is,return,type,supported,return,this,sql,return,type,null
SqlOutParameter -> public boolean isReturnTypeSupported();1495868221;Return whether this parameter holds a custom return type.;public boolean isReturnTypeSupported() {_		return (this.sqlReturnType != null)__	};return,whether,this,parameter,holds,a,custom,return,type;public,boolean,is,return,type,supported,return,this,sql,return,type,null
SqlOutParameter -> public boolean isReturnTypeSupported();1496837955;Return whether this parameter holds a custom return type.;public boolean isReturnTypeSupported() {_		return (this.sqlReturnType != null)__	};return,whether,this,parameter,holds,a,custom,return,type;public,boolean,is,return,type,supported,return,this,sql,return,type,null
SqlOutParameter -> public boolean isReturnTypeSupported();1498780456;Return whether this parameter holds a custom return type.;public boolean isReturnTypeSupported() {_		return (this.sqlReturnType != null)__	};return,whether,this,parameter,holds,a,custom,return,type;public,boolean,is,return,type,supported,return,this,sql,return,type,null
SqlOutParameter -> public boolean isReturnTypeSupported();1521457504;Return whether this parameter holds a custom return type.;public boolean isReturnTypeSupported() {_		return (this.sqlReturnType != null)__	};return,whether,this,parameter,holds,a,custom,return,type;public,boolean,is,return,type,supported,return,this,sql,return,type,null
SqlOutParameter -> public boolean isReturnTypeSupported();1530174524;Return whether this parameter holds a custom return type.;public boolean isReturnTypeSupported() {_		return (this.sqlReturnType != null)__	};return,whether,this,parameter,holds,a,custom,return,type;public,boolean,is,return,type,supported,return,this,sql,return,type,null
SqlOutParameter -> public SqlOutParameter(String name, int sqlType, ResultSetExtractor<?> rse);1385412762;Create a new SqlOutParameter._@param name name of the parameter, as used in input and output maps_@param sqlType SQL type of the parameter according to java.sql.Types_@param rse ResultSetExtractor to use for parsing the ResultSet;public SqlOutParameter(String name, int sqlType, ResultSetExtractor<?> rse) {_		super(name, sqlType, rse)__	};create,a,new,sql,out,parameter,param,name,name,of,the,parameter,as,used,in,input,and,output,maps,param,sql,type,sql,type,of,the,parameter,according,to,java,sql,types,param,rse,result,set,extractor,to,use,for,parsing,the,result,set;public,sql,out,parameter,string,name,int,sql,type,result,set,extractor,rse,super,name,sql,type,rse
SqlOutParameter -> public SqlOutParameter(String name, int sqlType, ResultSetExtractor<?> rse);1495868221;Create a new SqlOutParameter._@param name name of the parameter, as used in input and output maps_@param sqlType SQL type of the parameter according to java.sql.Types_@param rse ResultSetExtractor to use for parsing the ResultSet;public SqlOutParameter(String name, int sqlType, ResultSetExtractor<?> rse) {_		super(name, sqlType, rse)__	};create,a,new,sql,out,parameter,param,name,name,of,the,parameter,as,used,in,input,and,output,maps,param,sql,type,sql,type,of,the,parameter,according,to,java,sql,types,param,rse,result,set,extractor,to,use,for,parsing,the,result,set;public,sql,out,parameter,string,name,int,sql,type,result,set,extractor,rse,super,name,sql,type,rse
SqlOutParameter -> public SqlOutParameter(String name, int sqlType, ResultSetExtractor<?> rse);1496837955;Create a new SqlOutParameter._@param name name of the parameter, as used in input and output maps_@param sqlType SQL type of the parameter according to java.sql.Types_@param rse ResultSetExtractor to use for parsing the ResultSet;public SqlOutParameter(String name, int sqlType, ResultSetExtractor<?> rse) {_		super(name, sqlType, rse)__	};create,a,new,sql,out,parameter,param,name,name,of,the,parameter,as,used,in,input,and,output,maps,param,sql,type,sql,type,of,the,parameter,according,to,java,sql,types,param,rse,result,set,extractor,to,use,for,parsing,the,result,set;public,sql,out,parameter,string,name,int,sql,type,result,set,extractor,rse,super,name,sql,type,rse
SqlOutParameter -> public SqlOutParameter(String name, int sqlType, ResultSetExtractor<?> rse);1498780456;Create a new SqlOutParameter._@param name name of the parameter, as used in input and output maps_@param sqlType SQL type of the parameter according to java.sql.Types_@param rse ResultSetExtractor to use for parsing the ResultSet;public SqlOutParameter(String name, int sqlType, ResultSetExtractor<?> rse) {_		super(name, sqlType, rse)__	};create,a,new,sql,out,parameter,param,name,name,of,the,parameter,as,used,in,input,and,output,maps,param,sql,type,sql,type,of,the,parameter,according,to,java,sql,types,param,rse,result,set,extractor,to,use,for,parsing,the,result,set;public,sql,out,parameter,string,name,int,sql,type,result,set,extractor,rse,super,name,sql,type,rse
SqlOutParameter -> public SqlOutParameter(String name, int sqlType, ResultSetExtractor<?> rse);1521457504;Create a new SqlOutParameter._@param name name of the parameter, as used in input and output maps_@param sqlType SQL type of the parameter according to java.sql.Types_@param rse ResultSetExtractor to use for parsing the ResultSet;public SqlOutParameter(String name, int sqlType, ResultSetExtractor<?> rse) {_		super(name, sqlType, rse)__	};create,a,new,sql,out,parameter,param,name,name,of,the,parameter,as,used,in,input,and,output,maps,param,sql,type,sql,type,of,the,parameter,according,to,java,sql,types,param,rse,result,set,extractor,to,use,for,parsing,the,result,set;public,sql,out,parameter,string,name,int,sql,type,result,set,extractor,rse,super,name,sql,type,rse
SqlOutParameter -> public SqlOutParameter(String name, int sqlType, ResultSetExtractor<?> rse);1530174524;Create a new SqlOutParameter._@param name name of the parameter, as used in input and output maps_@param sqlType the parameter SQL type according to {@code java.sql.Types}_@param rse the {@link ResultSetExtractor} to use for parsing the {@link ResultSet};public SqlOutParameter(String name, int sqlType, ResultSetExtractor<?> rse) {_		super(name, sqlType, rse)__	};create,a,new,sql,out,parameter,param,name,name,of,the,parameter,as,used,in,input,and,output,maps,param,sql,type,the,parameter,sql,type,according,to,code,java,sql,types,param,rse,the,link,result,set,extractor,to,use,for,parsing,the,link,result,set;public,sql,out,parameter,string,name,int,sql,type,result,set,extractor,rse,super,name,sql,type,rse
SqlOutParameter -> public SqlOutParameter(String name, int sqlType, @Nullable String typeName);1496837955;Create a new SqlOutParameter._@param name name of the parameter, as used in input and output maps_@param sqlType SQL type of the parameter according to java.sql.Types_@param typeName the type name of the parameter (optional);public SqlOutParameter(String name, int sqlType, @Nullable String typeName) {_		super(name, sqlType, typeName)__	};create,a,new,sql,out,parameter,param,name,name,of,the,parameter,as,used,in,input,and,output,maps,param,sql,type,sql,type,of,the,parameter,according,to,java,sql,types,param,type,name,the,type,name,of,the,parameter,optional;public,sql,out,parameter,string,name,int,sql,type,nullable,string,type,name,super,name,sql,type,type,name
SqlOutParameter -> public SqlOutParameter(String name, int sqlType, @Nullable String typeName);1498780456;Create a new SqlOutParameter._@param name name of the parameter, as used in input and output maps_@param sqlType SQL type of the parameter according to java.sql.Types_@param typeName the type name of the parameter (optional);public SqlOutParameter(String name, int sqlType, @Nullable String typeName) {_		super(name, sqlType, typeName)__	};create,a,new,sql,out,parameter,param,name,name,of,the,parameter,as,used,in,input,and,output,maps,param,sql,type,sql,type,of,the,parameter,according,to,java,sql,types,param,type,name,the,type,name,of,the,parameter,optional;public,sql,out,parameter,string,name,int,sql,type,nullable,string,type,name,super,name,sql,type,type,name
SqlOutParameter -> public SqlOutParameter(String name, int sqlType, @Nullable String typeName);1521457504;Create a new SqlOutParameter._@param name name of the parameter, as used in input and output maps_@param sqlType SQL type of the parameter according to java.sql.Types_@param typeName the type name of the parameter (optional);public SqlOutParameter(String name, int sqlType, @Nullable String typeName) {_		super(name, sqlType, typeName)__	};create,a,new,sql,out,parameter,param,name,name,of,the,parameter,as,used,in,input,and,output,maps,param,sql,type,sql,type,of,the,parameter,according,to,java,sql,types,param,type,name,the,type,name,of,the,parameter,optional;public,sql,out,parameter,string,name,int,sql,type,nullable,string,type,name,super,name,sql,type,type,name
SqlOutParameter -> public SqlOutParameter(String name, int sqlType, @Nullable String typeName);1530174524;Create a new SqlOutParameter._@param name name of the parameter, as used in input and output maps_@param sqlType the parameter SQL type according to {@code java.sql.Types}_@param typeName the type name of the parameter (optional);public SqlOutParameter(String name, int sqlType, @Nullable String typeName) {_		super(name, sqlType, typeName)__	};create,a,new,sql,out,parameter,param,name,name,of,the,parameter,as,used,in,input,and,output,maps,param,sql,type,the,parameter,sql,type,according,to,code,java,sql,types,param,type,name,the,type,name,of,the,parameter,optional;public,sql,out,parameter,string,name,int,sql,type,nullable,string,type,name,super,name,sql,type,type,name
SqlOutParameter -> public SqlOutParameter(String name, int sqlType, RowCallbackHandler rch);1328020251;Create a new SqlOutParameter._@param name name of the parameter, as used in input and output maps_@param sqlType SQL type of the parameter according to java.sql.Types_@param rch RowCallbackHandler to use for parsing the ResultSet;public SqlOutParameter(String name, int sqlType, RowCallbackHandler rch) {_		super(name, sqlType, rch)__	};create,a,new,sql,out,parameter,param,name,name,of,the,parameter,as,used,in,input,and,output,maps,param,sql,type,sql,type,of,the,parameter,according,to,java,sql,types,param,rch,row,callback,handler,to,use,for,parsing,the,result,set;public,sql,out,parameter,string,name,int,sql,type,row,callback,handler,rch,super,name,sql,type,rch
SqlOutParameter -> public SqlOutParameter(String name, int sqlType, RowCallbackHandler rch);1385412762;Create a new SqlOutParameter._@param name name of the parameter, as used in input and output maps_@param sqlType SQL type of the parameter according to java.sql.Types_@param rch RowCallbackHandler to use for parsing the ResultSet;public SqlOutParameter(String name, int sqlType, RowCallbackHandler rch) {_		super(name, sqlType, rch)__	};create,a,new,sql,out,parameter,param,name,name,of,the,parameter,as,used,in,input,and,output,maps,param,sql,type,sql,type,of,the,parameter,according,to,java,sql,types,param,rch,row,callback,handler,to,use,for,parsing,the,result,set;public,sql,out,parameter,string,name,int,sql,type,row,callback,handler,rch,super,name,sql,type,rch
SqlOutParameter -> public SqlOutParameter(String name, int sqlType, RowCallbackHandler rch);1495868221;Create a new SqlOutParameter._@param name name of the parameter, as used in input and output maps_@param sqlType SQL type of the parameter according to java.sql.Types_@param rch RowCallbackHandler to use for parsing the ResultSet;public SqlOutParameter(String name, int sqlType, RowCallbackHandler rch) {_		super(name, sqlType, rch)__	};create,a,new,sql,out,parameter,param,name,name,of,the,parameter,as,used,in,input,and,output,maps,param,sql,type,sql,type,of,the,parameter,according,to,java,sql,types,param,rch,row,callback,handler,to,use,for,parsing,the,result,set;public,sql,out,parameter,string,name,int,sql,type,row,callback,handler,rch,super,name,sql,type,rch
SqlOutParameter -> public SqlOutParameter(String name, int sqlType, RowCallbackHandler rch);1496837955;Create a new SqlOutParameter._@param name name of the parameter, as used in input and output maps_@param sqlType SQL type of the parameter according to java.sql.Types_@param rch RowCallbackHandler to use for parsing the ResultSet;public SqlOutParameter(String name, int sqlType, RowCallbackHandler rch) {_		super(name, sqlType, rch)__	};create,a,new,sql,out,parameter,param,name,name,of,the,parameter,as,used,in,input,and,output,maps,param,sql,type,sql,type,of,the,parameter,according,to,java,sql,types,param,rch,row,callback,handler,to,use,for,parsing,the,result,set;public,sql,out,parameter,string,name,int,sql,type,row,callback,handler,rch,super,name,sql,type,rch
SqlOutParameter -> public SqlOutParameter(String name, int sqlType, RowCallbackHandler rch);1498780456;Create a new SqlOutParameter._@param name name of the parameter, as used in input and output maps_@param sqlType SQL type of the parameter according to java.sql.Types_@param rch RowCallbackHandler to use for parsing the ResultSet;public SqlOutParameter(String name, int sqlType, RowCallbackHandler rch) {_		super(name, sqlType, rch)__	};create,a,new,sql,out,parameter,param,name,name,of,the,parameter,as,used,in,input,and,output,maps,param,sql,type,sql,type,of,the,parameter,according,to,java,sql,types,param,rch,row,callback,handler,to,use,for,parsing,the,result,set;public,sql,out,parameter,string,name,int,sql,type,row,callback,handler,rch,super,name,sql,type,rch
SqlOutParameter -> public SqlOutParameter(String name, int sqlType, RowCallbackHandler rch);1521457504;Create a new SqlOutParameter._@param name name of the parameter, as used in input and output maps_@param sqlType SQL type of the parameter according to java.sql.Types_@param rch RowCallbackHandler to use for parsing the ResultSet;public SqlOutParameter(String name, int sqlType, RowCallbackHandler rch) {_		super(name, sqlType, rch)__	};create,a,new,sql,out,parameter,param,name,name,of,the,parameter,as,used,in,input,and,output,maps,param,sql,type,sql,type,of,the,parameter,according,to,java,sql,types,param,rch,row,callback,handler,to,use,for,parsing,the,result,set;public,sql,out,parameter,string,name,int,sql,type,row,callback,handler,rch,super,name,sql,type,rch
SqlOutParameter -> public SqlOutParameter(String name, int sqlType, RowCallbackHandler rch);1530174524;Create a new SqlOutParameter._@param name name of the parameter, as used in input and output maps_@param sqlType the parameter SQL type according to {@code java.sql.Types}_@param rch the {@link RowCallbackHandler} to use for parsing the {@link ResultSet};public SqlOutParameter(String name, int sqlType, RowCallbackHandler rch) {_		super(name, sqlType, rch)__	};create,a,new,sql,out,parameter,param,name,name,of,the,parameter,as,used,in,input,and,output,maps,param,sql,type,the,parameter,sql,type,according,to,code,java,sql,types,param,rch,the,link,row,callback,handler,to,use,for,parsing,the,link,result,set;public,sql,out,parameter,string,name,int,sql,type,row,callback,handler,rch,super,name,sql,type,rch
SqlOutParameter -> public SqlOutParameter(String name, int sqlType);1328020251;Create a new SqlOutParameter._@param name name of the parameter, as used in input and output maps_@param sqlType SQL type of the parameter according to java.sql.Types;public SqlOutParameter(String name, int sqlType) {_		super(name, sqlType)__	};create,a,new,sql,out,parameter,param,name,name,of,the,parameter,as,used,in,input,and,output,maps,param,sql,type,sql,type,of,the,parameter,according,to,java,sql,types;public,sql,out,parameter,string,name,int,sql,type,super,name,sql,type
SqlOutParameter -> public SqlOutParameter(String name, int sqlType);1385412762;Create a new SqlOutParameter._@param name name of the parameter, as used in input and output maps_@param sqlType SQL type of the parameter according to java.sql.Types;public SqlOutParameter(String name, int sqlType) {_		super(name, sqlType)__	};create,a,new,sql,out,parameter,param,name,name,of,the,parameter,as,used,in,input,and,output,maps,param,sql,type,sql,type,of,the,parameter,according,to,java,sql,types;public,sql,out,parameter,string,name,int,sql,type,super,name,sql,type
SqlOutParameter -> public SqlOutParameter(String name, int sqlType);1495868221;Create a new SqlOutParameter._@param name name of the parameter, as used in input and output maps_@param sqlType SQL type of the parameter according to java.sql.Types;public SqlOutParameter(String name, int sqlType) {_		super(name, sqlType)__	};create,a,new,sql,out,parameter,param,name,name,of,the,parameter,as,used,in,input,and,output,maps,param,sql,type,sql,type,of,the,parameter,according,to,java,sql,types;public,sql,out,parameter,string,name,int,sql,type,super,name,sql,type
SqlOutParameter -> public SqlOutParameter(String name, int sqlType);1496837955;Create a new SqlOutParameter._@param name name of the parameter, as used in input and output maps_@param sqlType SQL type of the parameter according to java.sql.Types;public SqlOutParameter(String name, int sqlType) {_		super(name, sqlType)__	};create,a,new,sql,out,parameter,param,name,name,of,the,parameter,as,used,in,input,and,output,maps,param,sql,type,sql,type,of,the,parameter,according,to,java,sql,types;public,sql,out,parameter,string,name,int,sql,type,super,name,sql,type
SqlOutParameter -> public SqlOutParameter(String name, int sqlType);1498780456;Create a new SqlOutParameter._@param name name of the parameter, as used in input and output maps_@param sqlType SQL type of the parameter according to java.sql.Types;public SqlOutParameter(String name, int sqlType) {_		super(name, sqlType)__	};create,a,new,sql,out,parameter,param,name,name,of,the,parameter,as,used,in,input,and,output,maps,param,sql,type,sql,type,of,the,parameter,according,to,java,sql,types;public,sql,out,parameter,string,name,int,sql,type,super,name,sql,type
SqlOutParameter -> public SqlOutParameter(String name, int sqlType);1521457504;Create a new SqlOutParameter._@param name name of the parameter, as used in input and output maps_@param sqlType SQL type of the parameter according to java.sql.Types;public SqlOutParameter(String name, int sqlType) {_		super(name, sqlType)__	};create,a,new,sql,out,parameter,param,name,name,of,the,parameter,as,used,in,input,and,output,maps,param,sql,type,sql,type,of,the,parameter,according,to,java,sql,types;public,sql,out,parameter,string,name,int,sql,type,super,name,sql,type
SqlOutParameter -> public SqlOutParameter(String name, int sqlType);1530174524;Create a new SqlOutParameter._@param name name of the parameter, as used in input and output maps_@param sqlType the parameter SQL type according to {@code java.sql.Types};public SqlOutParameter(String name, int sqlType) {_		super(name, sqlType)__	};create,a,new,sql,out,parameter,param,name,name,of,the,parameter,as,used,in,input,and,output,maps,param,sql,type,the,parameter,sql,type,according,to,code,java,sql,types;public,sql,out,parameter,string,name,int,sql,type,super,name,sql,type
SqlOutParameter -> public SqlOutParameter(String name, int sqlType, String typeName, SqlReturnType sqlReturnType);1328020251;Create a new SqlOutParameter._@param name name of the parameter, as used in input and output maps_@param sqlType SQL type of the parameter according to java.sql.Types_@param typeName the type name of the parameter (optional)_@param sqlReturnType custom value handler for complex type (optional);public SqlOutParameter(String name, int sqlType, String typeName, SqlReturnType sqlReturnType) {_		super(name, sqlType, typeName)__		this.sqlReturnType = sqlReturnType__	};create,a,new,sql,out,parameter,param,name,name,of,the,parameter,as,used,in,input,and,output,maps,param,sql,type,sql,type,of,the,parameter,according,to,java,sql,types,param,type,name,the,type,name,of,the,parameter,optional,param,sql,return,type,custom,value,handler,for,complex,type,optional;public,sql,out,parameter,string,name,int,sql,type,string,type,name,sql,return,type,sql,return,type,super,name,sql,type,type,name,this,sql,return,type,sql,return,type
SqlOutParameter -> public SqlOutParameter(String name, int sqlType, String typeName, SqlReturnType sqlReturnType);1385412762;Create a new SqlOutParameter._@param name name of the parameter, as used in input and output maps_@param sqlType SQL type of the parameter according to java.sql.Types_@param typeName the type name of the parameter (optional)_@param sqlReturnType custom value handler for complex type (optional);public SqlOutParameter(String name, int sqlType, String typeName, SqlReturnType sqlReturnType) {_		super(name, sqlType, typeName)__		this.sqlReturnType = sqlReturnType__	};create,a,new,sql,out,parameter,param,name,name,of,the,parameter,as,used,in,input,and,output,maps,param,sql,type,sql,type,of,the,parameter,according,to,java,sql,types,param,type,name,the,type,name,of,the,parameter,optional,param,sql,return,type,custom,value,handler,for,complex,type,optional;public,sql,out,parameter,string,name,int,sql,type,string,type,name,sql,return,type,sql,return,type,super,name,sql,type,type,name,this,sql,return,type,sql,return,type
SqlOutParameter -> public SqlOutParameter(String name, int sqlType, String typeName, SqlReturnType sqlReturnType);1495868221;Create a new SqlOutParameter._@param name name of the parameter, as used in input and output maps_@param sqlType SQL type of the parameter according to java.sql.Types_@param typeName the type name of the parameter (optional)_@param sqlReturnType custom value handler for complex type (optional);public SqlOutParameter(String name, int sqlType, String typeName, SqlReturnType sqlReturnType) {_		super(name, sqlType, typeName)__		this.sqlReturnType = sqlReturnType__	};create,a,new,sql,out,parameter,param,name,name,of,the,parameter,as,used,in,input,and,output,maps,param,sql,type,sql,type,of,the,parameter,according,to,java,sql,types,param,type,name,the,type,name,of,the,parameter,optional,param,sql,return,type,custom,value,handler,for,complex,type,optional;public,sql,out,parameter,string,name,int,sql,type,string,type,name,sql,return,type,sql,return,type,super,name,sql,type,type,name,this,sql,return,type,sql,return,type
SqlOutParameter -> public SqlOutParameter(String name, int sqlType, RowMapper<?> rm);1385412762;Create a new SqlOutParameter._@param name name of the parameter, as used in input and output maps_@param sqlType SQL type of the parameter according to java.sql.Types_@param rm RowMapper to use for parsing the ResultSet;public SqlOutParameter(String name, int sqlType, RowMapper<?> rm) {_		super(name, sqlType, rm)__	};create,a,new,sql,out,parameter,param,name,name,of,the,parameter,as,used,in,input,and,output,maps,param,sql,type,sql,type,of,the,parameter,according,to,java,sql,types,param,rm,row,mapper,to,use,for,parsing,the,result,set;public,sql,out,parameter,string,name,int,sql,type,row,mapper,rm,super,name,sql,type,rm
SqlOutParameter -> public SqlOutParameter(String name, int sqlType, RowMapper<?> rm);1495868221;Create a new SqlOutParameter._@param name name of the parameter, as used in input and output maps_@param sqlType SQL type of the parameter according to java.sql.Types_@param rm RowMapper to use for parsing the ResultSet;public SqlOutParameter(String name, int sqlType, RowMapper<?> rm) {_		super(name, sqlType, rm)__	};create,a,new,sql,out,parameter,param,name,name,of,the,parameter,as,used,in,input,and,output,maps,param,sql,type,sql,type,of,the,parameter,according,to,java,sql,types,param,rm,row,mapper,to,use,for,parsing,the,result,set;public,sql,out,parameter,string,name,int,sql,type,row,mapper,rm,super,name,sql,type,rm
SqlOutParameter -> public SqlOutParameter(String name, int sqlType, RowMapper<?> rm);1496837955;Create a new SqlOutParameter._@param name name of the parameter, as used in input and output maps_@param sqlType SQL type of the parameter according to java.sql.Types_@param rm RowMapper to use for parsing the ResultSet;public SqlOutParameter(String name, int sqlType, RowMapper<?> rm) {_		super(name, sqlType, rm)__	};create,a,new,sql,out,parameter,param,name,name,of,the,parameter,as,used,in,input,and,output,maps,param,sql,type,sql,type,of,the,parameter,according,to,java,sql,types,param,rm,row,mapper,to,use,for,parsing,the,result,set;public,sql,out,parameter,string,name,int,sql,type,row,mapper,rm,super,name,sql,type,rm
SqlOutParameter -> public SqlOutParameter(String name, int sqlType, RowMapper<?> rm);1498780456;Create a new SqlOutParameter._@param name name of the parameter, as used in input and output maps_@param sqlType SQL type of the parameter according to java.sql.Types_@param rm RowMapper to use for parsing the ResultSet;public SqlOutParameter(String name, int sqlType, RowMapper<?> rm) {_		super(name, sqlType, rm)__	};create,a,new,sql,out,parameter,param,name,name,of,the,parameter,as,used,in,input,and,output,maps,param,sql,type,sql,type,of,the,parameter,according,to,java,sql,types,param,rm,row,mapper,to,use,for,parsing,the,result,set;public,sql,out,parameter,string,name,int,sql,type,row,mapper,rm,super,name,sql,type,rm
SqlOutParameter -> public SqlOutParameter(String name, int sqlType, RowMapper<?> rm);1521457504;Create a new SqlOutParameter._@param name name of the parameter, as used in input and output maps_@param sqlType SQL type of the parameter according to java.sql.Types_@param rm RowMapper to use for parsing the ResultSet;public SqlOutParameter(String name, int sqlType, RowMapper<?> rm) {_		super(name, sqlType, rm)__	};create,a,new,sql,out,parameter,param,name,name,of,the,parameter,as,used,in,input,and,output,maps,param,sql,type,sql,type,of,the,parameter,according,to,java,sql,types,param,rm,row,mapper,to,use,for,parsing,the,result,set;public,sql,out,parameter,string,name,int,sql,type,row,mapper,rm,super,name,sql,type,rm
SqlOutParameter -> public SqlOutParameter(String name, int sqlType, RowMapper<?> rm);1530174524;Create a new SqlOutParameter._@param name the name of the parameter, as used in input and output maps_@param sqlType the parameter SQL type according to {@code java.sql.Types}_@param rm the {@link RowMapper} to use for parsing the {@link ResultSet};public SqlOutParameter(String name, int sqlType, RowMapper<?> rm) {_		super(name, sqlType, rm)__	};create,a,new,sql,out,parameter,param,name,the,name,of,the,parameter,as,used,in,input,and,output,maps,param,sql,type,the,parameter,sql,type,according,to,code,java,sql,types,param,rm,the,link,row,mapper,to,use,for,parsing,the,link,result,set;public,sql,out,parameter,string,name,int,sql,type,row,mapper,rm,super,name,sql,type,rm
SqlOutParameter -> public SqlOutParameter(String name, int sqlType, String typeName);1328020251;Create a new SqlOutParameter._@param name name of the parameter, as used in input and output maps_@param sqlType SQL type of the parameter according to java.sql.Types_@param typeName the type name of the parameter (optional);public SqlOutParameter(String name, int sqlType, String typeName) {_		super(name, sqlType, typeName)__	};create,a,new,sql,out,parameter,param,name,name,of,the,parameter,as,used,in,input,and,output,maps,param,sql,type,sql,type,of,the,parameter,according,to,java,sql,types,param,type,name,the,type,name,of,the,parameter,optional;public,sql,out,parameter,string,name,int,sql,type,string,type,name,super,name,sql,type,type,name
SqlOutParameter -> public SqlOutParameter(String name, int sqlType, String typeName);1385412762;Create a new SqlOutParameter._@param name name of the parameter, as used in input and output maps_@param sqlType SQL type of the parameter according to java.sql.Types_@param typeName the type name of the parameter (optional);public SqlOutParameter(String name, int sqlType, String typeName) {_		super(name, sqlType, typeName)__	};create,a,new,sql,out,parameter,param,name,name,of,the,parameter,as,used,in,input,and,output,maps,param,sql,type,sql,type,of,the,parameter,according,to,java,sql,types,param,type,name,the,type,name,of,the,parameter,optional;public,sql,out,parameter,string,name,int,sql,type,string,type,name,super,name,sql,type,type,name
SqlOutParameter -> public SqlOutParameter(String name, int sqlType, String typeName);1495868221;Create a new SqlOutParameter._@param name name of the parameter, as used in input and output maps_@param sqlType SQL type of the parameter according to java.sql.Types_@param typeName the type name of the parameter (optional);public SqlOutParameter(String name, int sqlType, String typeName) {_		super(name, sqlType, typeName)__	};create,a,new,sql,out,parameter,param,name,name,of,the,parameter,as,used,in,input,and,output,maps,param,sql,type,sql,type,of,the,parameter,according,to,java,sql,types,param,type,name,the,type,name,of,the,parameter,optional;public,sql,out,parameter,string,name,int,sql,type,string,type,name,super,name,sql,type,type,name
SqlOutParameter -> public SqlOutParameter(String name, int sqlType, int scale);1328020251;Create a new SqlOutParameter._@param name name of the parameter, as used in input and output maps_@param sqlType SQL type of the parameter according to java.sql.Types_@param scale the number of digits after the decimal point_(for DECIMAL and NUMERIC types);public SqlOutParameter(String name, int sqlType, int scale) {_		super(name, sqlType, scale)__	};create,a,new,sql,out,parameter,param,name,name,of,the,parameter,as,used,in,input,and,output,maps,param,sql,type,sql,type,of,the,parameter,according,to,java,sql,types,param,scale,the,number,of,digits,after,the,decimal,point,for,decimal,and,numeric,types;public,sql,out,parameter,string,name,int,sql,type,int,scale,super,name,sql,type,scale
SqlOutParameter -> public SqlOutParameter(String name, int sqlType, int scale);1385412762;Create a new SqlOutParameter._@param name name of the parameter, as used in input and output maps_@param sqlType SQL type of the parameter according to java.sql.Types_@param scale the number of digits after the decimal point_(for DECIMAL and NUMERIC types);public SqlOutParameter(String name, int sqlType, int scale) {_		super(name, sqlType, scale)__	};create,a,new,sql,out,parameter,param,name,name,of,the,parameter,as,used,in,input,and,output,maps,param,sql,type,sql,type,of,the,parameter,according,to,java,sql,types,param,scale,the,number,of,digits,after,the,decimal,point,for,decimal,and,numeric,types;public,sql,out,parameter,string,name,int,sql,type,int,scale,super,name,sql,type,scale
SqlOutParameter -> public SqlOutParameter(String name, int sqlType, int scale);1495868221;Create a new SqlOutParameter._@param name name of the parameter, as used in input and output maps_@param sqlType SQL type of the parameter according to java.sql.Types_@param scale the number of digits after the decimal point_(for DECIMAL and NUMERIC types);public SqlOutParameter(String name, int sqlType, int scale) {_		super(name, sqlType, scale)__	};create,a,new,sql,out,parameter,param,name,name,of,the,parameter,as,used,in,input,and,output,maps,param,sql,type,sql,type,of,the,parameter,according,to,java,sql,types,param,scale,the,number,of,digits,after,the,decimal,point,for,decimal,and,numeric,types;public,sql,out,parameter,string,name,int,sql,type,int,scale,super,name,sql,type,scale
SqlOutParameter -> public SqlOutParameter(String name, int sqlType, int scale);1496837955;Create a new SqlOutParameter._@param name name of the parameter, as used in input and output maps_@param sqlType SQL type of the parameter according to java.sql.Types_@param scale the number of digits after the decimal point_(for DECIMAL and NUMERIC types);public SqlOutParameter(String name, int sqlType, int scale) {_		super(name, sqlType, scale)__	};create,a,new,sql,out,parameter,param,name,name,of,the,parameter,as,used,in,input,and,output,maps,param,sql,type,sql,type,of,the,parameter,according,to,java,sql,types,param,scale,the,number,of,digits,after,the,decimal,point,for,decimal,and,numeric,types;public,sql,out,parameter,string,name,int,sql,type,int,scale,super,name,sql,type,scale
SqlOutParameter -> public SqlOutParameter(String name, int sqlType, int scale);1498780456;Create a new SqlOutParameter._@param name name of the parameter, as used in input and output maps_@param sqlType SQL type of the parameter according to java.sql.Types_@param scale the number of digits after the decimal point_(for DECIMAL and NUMERIC types);public SqlOutParameter(String name, int sqlType, int scale) {_		super(name, sqlType, scale)__	};create,a,new,sql,out,parameter,param,name,name,of,the,parameter,as,used,in,input,and,output,maps,param,sql,type,sql,type,of,the,parameter,according,to,java,sql,types,param,scale,the,number,of,digits,after,the,decimal,point,for,decimal,and,numeric,types;public,sql,out,parameter,string,name,int,sql,type,int,scale,super,name,sql,type,scale
SqlOutParameter -> public SqlOutParameter(String name, int sqlType, int scale);1521457504;Create a new SqlOutParameter._@param name name of the parameter, as used in input and output maps_@param sqlType SQL type of the parameter according to java.sql.Types_@param scale the number of digits after the decimal point_(for DECIMAL and NUMERIC types);public SqlOutParameter(String name, int sqlType, int scale) {_		super(name, sqlType, scale)__	};create,a,new,sql,out,parameter,param,name,name,of,the,parameter,as,used,in,input,and,output,maps,param,sql,type,sql,type,of,the,parameter,according,to,java,sql,types,param,scale,the,number,of,digits,after,the,decimal,point,for,decimal,and,numeric,types;public,sql,out,parameter,string,name,int,sql,type,int,scale,super,name,sql,type,scale
SqlOutParameter -> public SqlOutParameter(String name, int sqlType, int scale);1530174524;Create a new SqlOutParameter._@param name name of the parameter, as used in input and output maps_@param sqlType the parameter SQL type according to {@code java.sql.Types}_@param scale the number of digits after the decimal point_(for DECIMAL and NUMERIC types);public SqlOutParameter(String name, int sqlType, int scale) {_		super(name, sqlType, scale)__	};create,a,new,sql,out,parameter,param,name,name,of,the,parameter,as,used,in,input,and,output,maps,param,sql,type,the,parameter,sql,type,according,to,code,java,sql,types,param,scale,the,number,of,digits,after,the,decimal,point,for,decimal,and,numeric,types;public,sql,out,parameter,string,name,int,sql,type,int,scale,super,name,sql,type,scale
SqlOutParameter -> @Nullable 	public SqlReturnType getSqlReturnType();1495868221;Return the custom return type, if any.;@Nullable_	public SqlReturnType getSqlReturnType() {_		return this.sqlReturnType__	};return,the,custom,return,type,if,any;nullable,public,sql,return,type,get,sql,return,type,return,this,sql,return,type
SqlOutParameter -> @Nullable 	public SqlReturnType getSqlReturnType();1496837955;Return the custom return type, if any.;@Nullable_	public SqlReturnType getSqlReturnType() {_		return this.sqlReturnType__	};return,the,custom,return,type,if,any;nullable,public,sql,return,type,get,sql,return,type,return,this,sql,return,type
SqlOutParameter -> @Nullable 	public SqlReturnType getSqlReturnType();1498780456;Return the custom return type, if any.;@Nullable_	public SqlReturnType getSqlReturnType() {_		return this.sqlReturnType__	};return,the,custom,return,type,if,any;nullable,public,sql,return,type,get,sql,return,type,return,this,sql,return,type
SqlOutParameter -> @Nullable 	public SqlReturnType getSqlReturnType();1521457504;Return the custom return type, if any.;@Nullable_	public SqlReturnType getSqlReturnType() {_		return this.sqlReturnType__	};return,the,custom,return,type,if,any;nullable,public,sql,return,type,get,sql,return,type,return,this,sql,return,type
SqlOutParameter -> @Nullable 	public SqlReturnType getSqlReturnType();1530174524;Return the custom return type, if any.;@Nullable_	public SqlReturnType getSqlReturnType() {_		return this.sqlReturnType__	};return,the,custom,return,type,if,any;nullable,public,sql,return,type,get,sql,return,type,return,this,sql,return,type
