# id;timestamp;commentText;codeText;commentWords;codeWords
RowCountCallbackHandler -> public final int getColumnCount();1328020251;Return the number of columns in this result set._Valid once we've seen the first row,_so subclasses can use it during processing_@return the number of columns in this result set;public final int getColumnCount() {_		return columnCount__	};return,the,number,of,columns,in,this,result,set,valid,once,we,ve,seen,the,first,row,so,subclasses,can,use,it,during,processing,return,the,number,of,columns,in,this,result,set;public,final,int,get,column,count,return,column,count
RowCountCallbackHandler -> public final int getColumnCount();1356735495;Return the number of columns in this result set._Valid once we've seen the first row,_so subclasses can use it during processing_@return the number of columns in this result set;public final int getColumnCount() {_		return columnCount__	};return,the,number,of,columns,in,this,result,set,valid,once,we,ve,seen,the,first,row,so,subclasses,can,use,it,during,processing,return,the,number,of,columns,in,this,result,set;public,final,int,get,column,count,return,column,count
RowCountCallbackHandler -> public final int getColumnCount();1357119239;Return the number of columns in this result set._Valid once we've seen the first row,_so subclasses can use it during processing_@return the number of columns in this result set;public final int getColumnCount() {_		return columnCount__	};return,the,number,of,columns,in,this,result,set,valid,once,we,ve,seen,the,first,row,so,subclasses,can,use,it,during,processing,return,the,number,of,columns,in,this,result,set;public,final,int,get,column,count,return,column,count
RowCountCallbackHandler -> public final int getColumnCount();1368482696;Return the number of columns in this result set._Valid once we've seen the first row,_so subclasses can use it during processing_@return the number of columns in this result set;public final int getColumnCount() {_		return columnCount__	};return,the,number,of,columns,in,this,result,set,valid,once,we,ve,seen,the,first,row,so,subclasses,can,use,it,during,processing,return,the,number,of,columns,in,this,result,set;public,final,int,get,column,count,return,column,count
RowCountCallbackHandler -> public final int getColumnCount();1413848647;Return the number of columns in this result set._Valid once we've seen the first row,_so subclasses can use it during processing_@return the number of columns in this result set;public final int getColumnCount() {_		return columnCount__	};return,the,number,of,columns,in,this,result,set,valid,once,we,ve,seen,the,first,row,so,subclasses,can,use,it,during,processing,return,the,number,of,columns,in,this,result,set;public,final,int,get,column,count,return,column,count
RowCountCallbackHandler -> public final int getColumnCount();1500495740;Return the number of columns in this result set._Valid once we've seen the first row,_so subclasses can use it during processing_@return the number of columns in this result set;public final int getColumnCount() {_		return this.columnCount__	};return,the,number,of,columns,in,this,result,set,valid,once,we,ve,seen,the,first,row,so,subclasses,can,use,it,during,processing,return,the,number,of,columns,in,this,result,set;public,final,int,get,column,count,return,this,column,count
RowCountCallbackHandler -> public final int getColumnCount();1530174524;Return the number of columns in this result set._Valid once we've seen the first row,_so subclasses can use it during processing_@return the number of columns in this result set;public final int getColumnCount() {_		return this.columnCount__	};return,the,number,of,columns,in,this,result,set,valid,once,we,ve,seen,the,first,row,so,subclasses,can,use,it,during,processing,return,the,number,of,columns,in,this,result,set;public,final,int,get,column,count,return,this,column,count
RowCountCallbackHandler -> @Nullable 	public final String[] getColumnNames();1500495740;Return the names of the columns._Valid after processRow is invoked the first time._@return the names of the columns._<b>Indexed from 0 to n-1.</b>;@Nullable_	public final String[] getColumnNames() {_		return this.columnNames__	};return,the,names,of,the,columns,valid,after,process,row,is,invoked,the,first,time,return,the,names,of,the,columns,b,indexed,from,0,to,n,1,b;nullable,public,final,string,get,column,names,return,this,column,names
RowCountCallbackHandler -> @Nullable 	public final String[] getColumnNames();1530174524;Return the names of the columns._Valid after processRow is invoked the first time._@return the names of the columns._<b>Indexed from 0 to n-1.</b>;@Nullable_	public final String[] getColumnNames() {_		return this.columnNames__	};return,the,names,of,the,columns,valid,after,process,row,is,invoked,the,first,time,return,the,names,of,the,columns,b,indexed,from,0,to,n,1,b;nullable,public,final,string,get,column,names,return,this,column,names
RowCountCallbackHandler -> public final String[] getColumnNames();1328020251;Return the names of the columns._Valid after processRow is invoked the first time._@return the names of the columns._<b>Indexed from 0 to n-1.</b>;public final String[] getColumnNames() {_		return columnNames__	};return,the,names,of,the,columns,valid,after,process,row,is,invoked,the,first,time,return,the,names,of,the,columns,b,indexed,from,0,to,n,1,b;public,final,string,get,column,names,return,column,names
RowCountCallbackHandler -> public final String[] getColumnNames();1356735495;Return the names of the columns._Valid after processRow is invoked the first time._@return the names of the columns._<b>Indexed from 0 to n-1.</b>;public final String[] getColumnNames() {_		return columnNames__	};return,the,names,of,the,columns,valid,after,process,row,is,invoked,the,first,time,return,the,names,of,the,columns,b,indexed,from,0,to,n,1,b;public,final,string,get,column,names,return,column,names
RowCountCallbackHandler -> public final String[] getColumnNames();1357119239;Return the names of the columns._Valid after processRow is invoked the first time._@return the names of the columns._<b>Indexed from 0 to n-1.</b>;public final String[] getColumnNames() {_		return columnNames__	};return,the,names,of,the,columns,valid,after,process,row,is,invoked,the,first,time,return,the,names,of,the,columns,b,indexed,from,0,to,n,1,b;public,final,string,get,column,names,return,column,names
RowCountCallbackHandler -> public final String[] getColumnNames();1368482696;Return the names of the columns._Valid after processRow is invoked the first time._@return the names of the columns._<b>Indexed from 0 to n-1.</b>;public final String[] getColumnNames() {_		return columnNames__	};return,the,names,of,the,columns,valid,after,process,row,is,invoked,the,first,time,return,the,names,of,the,columns,b,indexed,from,0,to,n,1,b;public,final,string,get,column,names,return,column,names
RowCountCallbackHandler -> public final String[] getColumnNames();1413848647;Return the names of the columns._Valid after processRow is invoked the first time._@return the names of the columns._<b>Indexed from 0 to n-1.</b>;public final String[] getColumnNames() {_		return columnNames__	};return,the,names,of,the,columns,valid,after,process,row,is,invoked,the,first,time,return,the,names,of,the,columns,b,indexed,from,0,to,n,1,b;public,final,string,get,column,names,return,column,names
RowCountCallbackHandler -> public final int getRowCount();1328020251;Return the row count of this ResultSet_Only valid after processing is complete_@return the number of rows in this ResultSet;public final int getRowCount() {_		return rowCount__	};return,the,row,count,of,this,result,set,only,valid,after,processing,is,complete,return,the,number,of,rows,in,this,result,set;public,final,int,get,row,count,return,row,count
RowCountCallbackHandler -> public final int getRowCount();1356735495;Return the row count of this ResultSet_Only valid after processing is complete_@return the number of rows in this ResultSet;public final int getRowCount() {_		return rowCount__	};return,the,row,count,of,this,result,set,only,valid,after,processing,is,complete,return,the,number,of,rows,in,this,result,set;public,final,int,get,row,count,return,row,count
RowCountCallbackHandler -> public final int getRowCount();1357119239;Return the row count of this ResultSet_Only valid after processing is complete_@return the number of rows in this ResultSet;public final int getRowCount() {_		return rowCount__	};return,the,row,count,of,this,result,set,only,valid,after,processing,is,complete,return,the,number,of,rows,in,this,result,set;public,final,int,get,row,count,return,row,count
RowCountCallbackHandler -> public final int getRowCount();1368482696;Return the row count of this ResultSet_Only valid after processing is complete_@return the number of rows in this ResultSet;public final int getRowCount() {_		return rowCount__	};return,the,row,count,of,this,result,set,only,valid,after,processing,is,complete,return,the,number,of,rows,in,this,result,set;public,final,int,get,row,count,return,row,count
RowCountCallbackHandler -> public final int getRowCount();1413848647;Return the row count of this ResultSet_Only valid after processing is complete_@return the number of rows in this ResultSet;public final int getRowCount() {_		return rowCount__	};return,the,row,count,of,this,result,set,only,valid,after,processing,is,complete,return,the,number,of,rows,in,this,result,set;public,final,int,get,row,count,return,row,count
RowCountCallbackHandler -> public final int getRowCount();1500495740;Return the row count of this ResultSet_Only valid after processing is complete_@return the number of rows in this ResultSet;public final int getRowCount() {_		return this.rowCount__	};return,the,row,count,of,this,result,set,only,valid,after,processing,is,complete,return,the,number,of,rows,in,this,result,set;public,final,int,get,row,count,return,this,row,count
RowCountCallbackHandler -> public final int getRowCount();1530174524;Return the row count of this ResultSet._Only valid after processing is complete_@return the number of rows in this ResultSet;public final int getRowCount() {_		return this.rowCount__	};return,the,row,count,of,this,result,set,only,valid,after,processing,is,complete,return,the,number,of,rows,in,this,result,set;public,final,int,get,row,count,return,this,row,count
RowCountCallbackHandler -> @Override 	public final void processRow(ResultSet rs) throws SQLException;1356735495;Implementation of ResultSetCallbackHandler._Work out column size if this is the first row, otherwise just count rows._<p>Subclasses can perform custom extraction or processing_by overriding the {@code processRow(ResultSet, int)} method._@see #processRow(java.sql.ResultSet, int);@Override_	public final void processRow(ResultSet rs) throws SQLException {_		if (this.rowCount == 0) {_			ResultSetMetaData rsmd = rs.getMetaData()__			this.columnCount = rsmd.getColumnCount()__			this.columnTypes = new int[this.columnCount]__			this.columnNames = new String[this.columnCount]__			for (int i = 0_ i < this.columnCount_ i++) {_				this.columnTypes[i] = rsmd.getColumnType(i + 1)__				this.columnNames[i] = JdbcUtils.lookupColumnName(rsmd, i + 1)__			}_			_		}_		processRow(rs, this.rowCount++)__	};implementation,of,result,set,callback,handler,work,out,column,size,if,this,is,the,first,row,otherwise,just,count,rows,p,subclasses,can,perform,custom,extraction,or,processing,by,overriding,the,code,process,row,result,set,int,method,see,process,row,java,sql,result,set,int;override,public,final,void,process,row,result,set,rs,throws,sqlexception,if,this,row,count,0,result,set,meta,data,rsmd,rs,get,meta,data,this,column,count,rsmd,get,column,count,this,column,types,new,int,this,column,count,this,column,names,new,string,this,column,count,for,int,i,0,i,this,column,count,i,this,column,types,i,rsmd,get,column,type,i,1,this,column,names,i,jdbc,utils,lookup,column,name,rsmd,i,1,process,row,rs,this,row,count
RowCountCallbackHandler -> @Override 	public final void processRow(ResultSet rs) throws SQLException;1368482696;Implementation of ResultSetCallbackHandler._Work out column size if this is the first row, otherwise just count rows._<p>Subclasses can perform custom extraction or processing_by overriding the {@code processRow(ResultSet, int)} method._@see #processRow(java.sql.ResultSet, int);@Override_	public final void processRow(ResultSet rs) throws SQLException {_		if (this.rowCount == 0) {_			ResultSetMetaData rsmd = rs.getMetaData()__			this.columnCount = rsmd.getColumnCount()__			this.columnTypes = new int[this.columnCount]__			this.columnNames = new String[this.columnCount]__			for (int i = 0_ i < this.columnCount_ i++) {_				this.columnTypes[i] = rsmd.getColumnType(i + 1)__				this.columnNames[i] = JdbcUtils.lookupColumnName(rsmd, i + 1)__			}_			_		}_		processRow(rs, this.rowCount++)__	};implementation,of,result,set,callback,handler,work,out,column,size,if,this,is,the,first,row,otherwise,just,count,rows,p,subclasses,can,perform,custom,extraction,or,processing,by,overriding,the,code,process,row,result,set,int,method,see,process,row,java,sql,result,set,int;override,public,final,void,process,row,result,set,rs,throws,sqlexception,if,this,row,count,0,result,set,meta,data,rsmd,rs,get,meta,data,this,column,count,rsmd,get,column,count,this,column,types,new,int,this,column,count,this,column,names,new,string,this,column,count,for,int,i,0,i,this,column,count,i,this,column,types,i,rsmd,get,column,type,i,1,this,column,names,i,jdbc,utils,lookup,column,name,rsmd,i,1,process,row,rs,this,row,count
RowCountCallbackHandler -> @Override 	public final void processRow(ResultSet rs) throws SQLException;1413848647;Implementation of ResultSetCallbackHandler._Work out column size if this is the first row, otherwise just count rows._<p>Subclasses can perform custom extraction or processing_by overriding the {@code processRow(ResultSet, int)} method._@see #processRow(java.sql.ResultSet, int);@Override_	public final void processRow(ResultSet rs) throws SQLException {_		if (this.rowCount == 0) {_			ResultSetMetaData rsmd = rs.getMetaData()__			this.columnCount = rsmd.getColumnCount()__			this.columnTypes = new int[this.columnCount]__			this.columnNames = new String[this.columnCount]__			for (int i = 0_ i < this.columnCount_ i++) {_				this.columnTypes[i] = rsmd.getColumnType(i + 1)__				this.columnNames[i] = JdbcUtils.lookupColumnName(rsmd, i + 1)__			}_			_		}_		processRow(rs, this.rowCount++)__	};implementation,of,result,set,callback,handler,work,out,column,size,if,this,is,the,first,row,otherwise,just,count,rows,p,subclasses,can,perform,custom,extraction,or,processing,by,overriding,the,code,process,row,result,set,int,method,see,process,row,java,sql,result,set,int;override,public,final,void,process,row,result,set,rs,throws,sqlexception,if,this,row,count,0,result,set,meta,data,rsmd,rs,get,meta,data,this,column,count,rsmd,get,column,count,this,column,types,new,int,this,column,count,this,column,names,new,string,this,column,count,for,int,i,0,i,this,column,count,i,this,column,types,i,rsmd,get,column,type,i,1,this,column,names,i,jdbc,utils,lookup,column,name,rsmd,i,1,process,row,rs,this,row,count
RowCountCallbackHandler -> @Override 	public final void processRow(ResultSet rs) throws SQLException;1500495740;Implementation of ResultSetCallbackHandler._Work out column size if this is the first row, otherwise just count rows._<p>Subclasses can perform custom extraction or processing_by overriding the {@code processRow(ResultSet, int)} method._@see #processRow(java.sql.ResultSet, int);@Override_	public final void processRow(ResultSet rs) throws SQLException {_		if (this.rowCount == 0) {_			ResultSetMetaData rsmd = rs.getMetaData()__			this.columnCount = rsmd.getColumnCount()__			this.columnTypes = new int[this.columnCount]__			this.columnNames = new String[this.columnCount]__			for (int i = 0_ i < this.columnCount_ i++) {_				this.columnTypes[i] = rsmd.getColumnType(i + 1)__				this.columnNames[i] = JdbcUtils.lookupColumnName(rsmd, i + 1)__			}_			_		}_		processRow(rs, this.rowCount++)__	};implementation,of,result,set,callback,handler,work,out,column,size,if,this,is,the,first,row,otherwise,just,count,rows,p,subclasses,can,perform,custom,extraction,or,processing,by,overriding,the,code,process,row,result,set,int,method,see,process,row,java,sql,result,set,int;override,public,final,void,process,row,result,set,rs,throws,sqlexception,if,this,row,count,0,result,set,meta,data,rsmd,rs,get,meta,data,this,column,count,rsmd,get,column,count,this,column,types,new,int,this,column,count,this,column,names,new,string,this,column,count,for,int,i,0,i,this,column,count,i,this,column,types,i,rsmd,get,column,type,i,1,this,column,names,i,jdbc,utils,lookup,column,name,rsmd,i,1,process,row,rs,this,row,count
RowCountCallbackHandler -> @Override 	public final void processRow(ResultSet rs) throws SQLException;1530174524;Implementation of ResultSetCallbackHandler._Work out column size if this is the first row, otherwise just count rows._<p>Subclasses can perform custom extraction or processing_by overriding the {@code processRow(ResultSet, int)} method._@see #processRow(java.sql.ResultSet, int);@Override_	public final void processRow(ResultSet rs) throws SQLException {_		if (this.rowCount == 0) {_			ResultSetMetaData rsmd = rs.getMetaData()__			this.columnCount = rsmd.getColumnCount()__			this.columnTypes = new int[this.columnCount]__			this.columnNames = new String[this.columnCount]__			for (int i = 0_ i < this.columnCount_ i++) {_				this.columnTypes[i] = rsmd.getColumnType(i + 1)__				this.columnNames[i] = JdbcUtils.lookupColumnName(rsmd, i + 1)__			}_			_		}_		processRow(rs, this.rowCount++)__	};implementation,of,result,set,callback,handler,work,out,column,size,if,this,is,the,first,row,otherwise,just,count,rows,p,subclasses,can,perform,custom,extraction,or,processing,by,overriding,the,code,process,row,result,set,int,method,see,process,row,java,sql,result,set,int;override,public,final,void,process,row,result,set,rs,throws,sqlexception,if,this,row,count,0,result,set,meta,data,rsmd,rs,get,meta,data,this,column,count,rsmd,get,column,count,this,column,types,new,int,this,column,count,this,column,names,new,string,this,column,count,for,int,i,0,i,this,column,count,i,this,column,types,i,rsmd,get,column,type,i,1,this,column,names,i,jdbc,utils,lookup,column,name,rsmd,i,1,process,row,rs,this,row,count
RowCountCallbackHandler -> protected void processRow(ResultSet rs, int rowNum) throws SQLException;1328020251;Subclasses may override this to perform custom extraction_or processing. This class's implementation does nothing._@param rs ResultSet to extract data from. This method is_invoked for each row_@param rowNum number of the current row (starting from 0);protected void processRow(ResultSet rs, int rowNum) throws SQLException {_	};subclasses,may,override,this,to,perform,custom,extraction,or,processing,this,class,s,implementation,does,nothing,param,rs,result,set,to,extract,data,from,this,method,is,invoked,for,each,row,param,row,num,number,of,the,current,row,starting,from,0;protected,void,process,row,result,set,rs,int,row,num,throws,sqlexception
RowCountCallbackHandler -> protected void processRow(ResultSet rs, int rowNum) throws SQLException;1356735495;Subclasses may override this to perform custom extraction_or processing. This class's implementation does nothing._@param rs ResultSet to extract data from. This method is_invoked for each row_@param rowNum number of the current row (starting from 0);protected void processRow(ResultSet rs, int rowNum) throws SQLException {_	};subclasses,may,override,this,to,perform,custom,extraction,or,processing,this,class,s,implementation,does,nothing,param,rs,result,set,to,extract,data,from,this,method,is,invoked,for,each,row,param,row,num,number,of,the,current,row,starting,from,0;protected,void,process,row,result,set,rs,int,row,num,throws,sqlexception
RowCountCallbackHandler -> protected void processRow(ResultSet rs, int rowNum) throws SQLException;1357119239;Subclasses may override this to perform custom extraction_or processing. This class's implementation does nothing._@param rs ResultSet to extract data from. This method is_invoked for each row_@param rowNum number of the current row (starting from 0);protected void processRow(ResultSet rs, int rowNum) throws SQLException {_	};subclasses,may,override,this,to,perform,custom,extraction,or,processing,this,class,s,implementation,does,nothing,param,rs,result,set,to,extract,data,from,this,method,is,invoked,for,each,row,param,row,num,number,of,the,current,row,starting,from,0;protected,void,process,row,result,set,rs,int,row,num,throws,sqlexception
RowCountCallbackHandler -> protected void processRow(ResultSet rs, int rowNum) throws SQLException;1368482696;Subclasses may override this to perform custom extraction_or processing. This class's implementation does nothing._@param rs ResultSet to extract data from. This method is_invoked for each row_@param rowNum number of the current row (starting from 0);protected void processRow(ResultSet rs, int rowNum) throws SQLException {_	};subclasses,may,override,this,to,perform,custom,extraction,or,processing,this,class,s,implementation,does,nothing,param,rs,result,set,to,extract,data,from,this,method,is,invoked,for,each,row,param,row,num,number,of,the,current,row,starting,from,0;protected,void,process,row,result,set,rs,int,row,num,throws,sqlexception
RowCountCallbackHandler -> protected void processRow(ResultSet rs, int rowNum) throws SQLException;1413848647;Subclasses may override this to perform custom extraction_or processing. This class's implementation does nothing._@param rs ResultSet to extract data from. This method is_invoked for each row_@param rowNum number of the current row (starting from 0);protected void processRow(ResultSet rs, int rowNum) throws SQLException {_	};subclasses,may,override,this,to,perform,custom,extraction,or,processing,this,class,s,implementation,does,nothing,param,rs,result,set,to,extract,data,from,this,method,is,invoked,for,each,row,param,row,num,number,of,the,current,row,starting,from,0;protected,void,process,row,result,set,rs,int,row,num,throws,sqlexception
RowCountCallbackHandler -> protected void processRow(ResultSet rs, int rowNum) throws SQLException;1500495740;Subclasses may override this to perform custom extraction_or processing. This class's implementation does nothing._@param rs ResultSet to extract data from. This method is_invoked for each row_@param rowNum number of the current row (starting from 0);protected void processRow(ResultSet rs, int rowNum) throws SQLException {_	};subclasses,may,override,this,to,perform,custom,extraction,or,processing,this,class,s,implementation,does,nothing,param,rs,result,set,to,extract,data,from,this,method,is,invoked,for,each,row,param,row,num,number,of,the,current,row,starting,from,0;protected,void,process,row,result,set,rs,int,row,num,throws,sqlexception
RowCountCallbackHandler -> protected void processRow(ResultSet rs, int rowNum) throws SQLException;1530174524;Subclasses may override this to perform custom extraction_or processing. This class's implementation does nothing._@param rs the ResultSet to extract data from. This method is_invoked for each row_@param rowNum number of the current row (starting from 0);protected void processRow(ResultSet rs, int rowNum) throws SQLException {_	};subclasses,may,override,this,to,perform,custom,extraction,or,processing,this,class,s,implementation,does,nothing,param,rs,the,result,set,to,extract,data,from,this,method,is,invoked,for,each,row,param,row,num,number,of,the,current,row,starting,from,0;protected,void,process,row,result,set,rs,int,row,num,throws,sqlexception
RowCountCallbackHandler -> @Nullable 	public final int[] getColumnTypes();1500495740;Return the types of the columns as java.sql.Types constants_Valid after processRow is invoked the first time._@return the types of the columns as java.sql.Types constants._<b>Indexed from 0 to n-1.</b>;@Nullable_	public final int[] getColumnTypes() {_		return this.columnTypes__	};return,the,types,of,the,columns,as,java,sql,types,constants,valid,after,process,row,is,invoked,the,first,time,return,the,types,of,the,columns,as,java,sql,types,constants,b,indexed,from,0,to,n,1,b;nullable,public,final,int,get,column,types,return,this,column,types
RowCountCallbackHandler -> @Nullable 	public final int[] getColumnTypes();1530174524;Return the types of the columns as java.sql.Types constants_Valid after processRow is invoked the first time._@return the types of the columns as java.sql.Types constants._<b>Indexed from 0 to n-1.</b>;@Nullable_	public final int[] getColumnTypes() {_		return this.columnTypes__	};return,the,types,of,the,columns,as,java,sql,types,constants,valid,after,process,row,is,invoked,the,first,time,return,the,types,of,the,columns,as,java,sql,types,constants,b,indexed,from,0,to,n,1,b;nullable,public,final,int,get,column,types,return,this,column,types
RowCountCallbackHandler -> public final int[] getColumnTypes();1328020251;Return the types of the columns as java.sql.Types constants_Valid after processRow is invoked the first time._@return the types of the columns as java.sql.Types constants._<b>Indexed from 0 to n-1.</b>;public final int[] getColumnTypes() {_		return columnTypes__	};return,the,types,of,the,columns,as,java,sql,types,constants,valid,after,process,row,is,invoked,the,first,time,return,the,types,of,the,columns,as,java,sql,types,constants,b,indexed,from,0,to,n,1,b;public,final,int,get,column,types,return,column,types
RowCountCallbackHandler -> public final int[] getColumnTypes();1356735495;Return the types of the columns as java.sql.Types constants_Valid after processRow is invoked the first time._@return the types of the columns as java.sql.Types constants._<b>Indexed from 0 to n-1.</b>;public final int[] getColumnTypes() {_		return columnTypes__	};return,the,types,of,the,columns,as,java,sql,types,constants,valid,after,process,row,is,invoked,the,first,time,return,the,types,of,the,columns,as,java,sql,types,constants,b,indexed,from,0,to,n,1,b;public,final,int,get,column,types,return,column,types
RowCountCallbackHandler -> public final int[] getColumnTypes();1357119239;Return the types of the columns as java.sql.Types constants_Valid after processRow is invoked the first time._@return the types of the columns as java.sql.Types constants._<b>Indexed from 0 to n-1.</b>;public final int[] getColumnTypes() {_		return columnTypes__	};return,the,types,of,the,columns,as,java,sql,types,constants,valid,after,process,row,is,invoked,the,first,time,return,the,types,of,the,columns,as,java,sql,types,constants,b,indexed,from,0,to,n,1,b;public,final,int,get,column,types,return,column,types
RowCountCallbackHandler -> public final int[] getColumnTypes();1368482696;Return the types of the columns as java.sql.Types constants_Valid after processRow is invoked the first time._@return the types of the columns as java.sql.Types constants._<b>Indexed from 0 to n-1.</b>;public final int[] getColumnTypes() {_		return columnTypes__	};return,the,types,of,the,columns,as,java,sql,types,constants,valid,after,process,row,is,invoked,the,first,time,return,the,types,of,the,columns,as,java,sql,types,constants,b,indexed,from,0,to,n,1,b;public,final,int,get,column,types,return,column,types
RowCountCallbackHandler -> public final int[] getColumnTypes();1413848647;Return the types of the columns as java.sql.Types constants_Valid after processRow is invoked the first time._@return the types of the columns as java.sql.Types constants._<b>Indexed from 0 to n-1.</b>;public final int[] getColumnTypes() {_		return columnTypes__	};return,the,types,of,the,columns,as,java,sql,types,constants,valid,after,process,row,is,invoked,the,first,time,return,the,types,of,the,columns,as,java,sql,types,constants,b,indexed,from,0,to,n,1,b;public,final,int,get,column,types,return,column,types
RowCountCallbackHandler -> public final void processRow(ResultSet rs) throws SQLException;1328020251;Implementation of ResultSetCallbackHandler._Work out column size if this is the first row, otherwise just count rows._<p>Subclasses can perform custom extraction or processing_by overriding the <code>processRow(ResultSet, int)</code> method._@see #processRow(java.sql.ResultSet, int);public final void processRow(ResultSet rs) throws SQLException {_		if (this.rowCount == 0) {_			ResultSetMetaData rsmd = rs.getMetaData()__			this.columnCount = rsmd.getColumnCount()__			this.columnTypes = new int[this.columnCount]__			this.columnNames = new String[this.columnCount]__			for (int i = 0_ i < this.columnCount_ i++) {_				this.columnTypes[i] = rsmd.getColumnType(i + 1)__				this.columnNames[i] = JdbcUtils.lookupColumnName(rsmd, i + 1)__			}_			_		}_		processRow(rs, this.rowCount++)__	};implementation,of,result,set,callback,handler,work,out,column,size,if,this,is,the,first,row,otherwise,just,count,rows,p,subclasses,can,perform,custom,extraction,or,processing,by,overriding,the,code,process,row,result,set,int,code,method,see,process,row,java,sql,result,set,int;public,final,void,process,row,result,set,rs,throws,sqlexception,if,this,row,count,0,result,set,meta,data,rsmd,rs,get,meta,data,this,column,count,rsmd,get,column,count,this,column,types,new,int,this,column,count,this,column,names,new,string,this,column,count,for,int,i,0,i,this,column,count,i,this,column,types,i,rsmd,get,column,type,i,1,this,column,names,i,jdbc,utils,lookup,column,name,rsmd,i,1,process,row,rs,this,row,count
RowCountCallbackHandler -> public final void processRow(ResultSet rs) throws SQLException;1357119239;Implementation of ResultSetCallbackHandler._Work out column size if this is the first row, otherwise just count rows._<p>Subclasses can perform custom extraction or processing_by overriding the {@code processRow(ResultSet, int)} method._@see #processRow(java.sql.ResultSet, int);public final void processRow(ResultSet rs) throws SQLException {_		if (this.rowCount == 0) {_			ResultSetMetaData rsmd = rs.getMetaData()__			this.columnCount = rsmd.getColumnCount()__			this.columnTypes = new int[this.columnCount]__			this.columnNames = new String[this.columnCount]__			for (int i = 0_ i < this.columnCount_ i++) {_				this.columnTypes[i] = rsmd.getColumnType(i + 1)__				this.columnNames[i] = JdbcUtils.lookupColumnName(rsmd, i + 1)__			}_			_		}_		processRow(rs, this.rowCount++)__	};implementation,of,result,set,callback,handler,work,out,column,size,if,this,is,the,first,row,otherwise,just,count,rows,p,subclasses,can,perform,custom,extraction,or,processing,by,overriding,the,code,process,row,result,set,int,method,see,process,row,java,sql,result,set,int;public,final,void,process,row,result,set,rs,throws,sqlexception,if,this,row,count,0,result,set,meta,data,rsmd,rs,get,meta,data,this,column,count,rsmd,get,column,count,this,column,types,new,int,this,column,count,this,column,names,new,string,this,column,count,for,int,i,0,i,this,column,count,i,this,column,types,i,rsmd,get,column,type,i,1,this,column,names,i,jdbc,utils,lookup,column,name,rsmd,i,1,process,row,rs,this,row,count
