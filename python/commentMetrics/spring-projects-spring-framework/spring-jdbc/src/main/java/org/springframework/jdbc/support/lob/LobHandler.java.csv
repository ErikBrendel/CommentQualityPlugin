commented;modifiers;parameterAmount;loc;comment;code
true;;2;2;/**  * Retrieve the given column as bytes from the given ResultSet.  * Might simply invoke {@code ResultSet.getBytes} or work with  * {@code ResultSet.getBlob}, depending on the database and driver.  * @param rs the ResultSet to retrieve the content from  * @param columnName the column name to use  * @return the content as byte array, or {@code null} in case of SQL NULL  * @throws SQLException if thrown by JDBC methods  * @see java.sql.ResultSet#getBytes  */ ;/**  * Retrieve the given column as bytes from the given ResultSet.  * Might simply invoke {@code ResultSet.getBytes} or work with  * {@code ResultSet.getBlob}, depending on the database and driver.  * @param rs the ResultSet to retrieve the content from  * @param columnName the column name to use  * @return the content as byte array, or {@code null} in case of SQL NULL  * @throws SQLException if thrown by JDBC methods  * @see java.sql.ResultSet#getBytes  */ @Nullable byte[] getBlobAsBytes(ResultSet rs, String columnName) throws SQLException.
true;;2;2;/**  * Retrieve the given column as bytes from the given ResultSet.  * Might simply invoke {@code ResultSet.getBytes} or work with  * {@code ResultSet.getBlob}, depending on the database and driver.  * @param rs the ResultSet to retrieve the content from  * @param columnIndex the column index to use  * @return the content as byte array, or {@code null} in case of SQL NULL  * @throws SQLException if thrown by JDBC methods  * @see java.sql.ResultSet#getBytes  */ ;/**  * Retrieve the given column as bytes from the given ResultSet.  * Might simply invoke {@code ResultSet.getBytes} or work with  * {@code ResultSet.getBlob}, depending on the database and driver.  * @param rs the ResultSet to retrieve the content from  * @param columnIndex the column index to use  * @return the content as byte array, or {@code null} in case of SQL NULL  * @throws SQLException if thrown by JDBC methods  * @see java.sql.ResultSet#getBytes  */ @Nullable byte[] getBlobAsBytes(ResultSet rs, int columnIndex) throws SQLException.
true;;2;2;/**  * Retrieve the given column as binary stream from the given ResultSet.  * Might simply invoke {@code ResultSet.getBinaryStream} or work with  * {@code ResultSet.getBlob}, depending on the database and driver.  * @param rs the ResultSet to retrieve the content from  * @param columnName the column name to use  * @return the content as binary stream, or {@code null} in case of SQL NULL  * @throws SQLException if thrown by JDBC methods  * @see java.sql.ResultSet#getBinaryStream  */ ;/**  * Retrieve the given column as binary stream from the given ResultSet.  * Might simply invoke {@code ResultSet.getBinaryStream} or work with  * {@code ResultSet.getBlob}, depending on the database and driver.  * @param rs the ResultSet to retrieve the content from  * @param columnName the column name to use  * @return the content as binary stream, or {@code null} in case of SQL NULL  * @throws SQLException if thrown by JDBC methods  * @see java.sql.ResultSet#getBinaryStream  */ @Nullable InputStream getBlobAsBinaryStream(ResultSet rs, String columnName) throws SQLException.
true;;2;2;/**  * Retrieve the given column as binary stream from the given ResultSet.  * Might simply invoke {@code ResultSet.getBinaryStream} or work with  * {@code ResultSet.getBlob}, depending on the database and driver.  * @param rs the ResultSet to retrieve the content from  * @param columnIndex the column index to use  * @return the content as binary stream, or {@code null} in case of SQL NULL  * @throws SQLException if thrown by JDBC methods  * @see java.sql.ResultSet#getBinaryStream  */ ;/**  * Retrieve the given column as binary stream from the given ResultSet.  * Might simply invoke {@code ResultSet.getBinaryStream} or work with  * {@code ResultSet.getBlob}, depending on the database and driver.  * @param rs the ResultSet to retrieve the content from  * @param columnIndex the column index to use  * @return the content as binary stream, or {@code null} in case of SQL NULL  * @throws SQLException if thrown by JDBC methods  * @see java.sql.ResultSet#getBinaryStream  */ @Nullable InputStream getBlobAsBinaryStream(ResultSet rs, int columnIndex) throws SQLException.
true;;2;2;/**  * Retrieve the given column as String from the given ResultSet.  * Might simply invoke {@code ResultSet.getString} or work with  * {@code ResultSet.getClob}, depending on the database and driver.  * @param rs the ResultSet to retrieve the content from  * @param columnName the column name to use  * @return the content as String, or {@code null} in case of SQL NULL  * @throws SQLException if thrown by JDBC methods  * @see java.sql.ResultSet#getString  */ ;/**  * Retrieve the given column as String from the given ResultSet.  * Might simply invoke {@code ResultSet.getString} or work with  * {@code ResultSet.getClob}, depending on the database and driver.  * @param rs the ResultSet to retrieve the content from  * @param columnName the column name to use  * @return the content as String, or {@code null} in case of SQL NULL  * @throws SQLException if thrown by JDBC methods  * @see java.sql.ResultSet#getString  */ @Nullable String getClobAsString(ResultSet rs, String columnName) throws SQLException.
true;;2;2;/**  * Retrieve the given column as String from the given ResultSet.  * Might simply invoke {@code ResultSet.getString} or work with  * {@code ResultSet.getClob}, depending on the database and driver.  * @param rs the ResultSet to retrieve the content from  * @param columnIndex the column index to use  * @return the content as String, or {@code null} in case of SQL NULL  * @throws SQLException if thrown by JDBC methods  * @see java.sql.ResultSet#getString  */ ;/**  * Retrieve the given column as String from the given ResultSet.  * Might simply invoke {@code ResultSet.getString} or work with  * {@code ResultSet.getClob}, depending on the database and driver.  * @param rs the ResultSet to retrieve the content from  * @param columnIndex the column index to use  * @return the content as String, or {@code null} in case of SQL NULL  * @throws SQLException if thrown by JDBC methods  * @see java.sql.ResultSet#getString  */ @Nullable String getClobAsString(ResultSet rs, int columnIndex) throws SQLException.
true;;2;2;/**  * Retrieve the given column as ASCII stream from the given ResultSet.  * Might simply invoke {@code ResultSet.getAsciiStream} or work with  * {@code ResultSet.getClob}, depending on the database and driver.  * @param rs the ResultSet to retrieve the content from  * @param columnName the column name to use  * @return the content as ASCII stream, or {@code null} in case of SQL NULL  * @throws SQLException if thrown by JDBC methods  * @see java.sql.ResultSet#getAsciiStream  */ ;/**  * Retrieve the given column as ASCII stream from the given ResultSet.  * Might simply invoke {@code ResultSet.getAsciiStream} or work with  * {@code ResultSet.getClob}, depending on the database and driver.  * @param rs the ResultSet to retrieve the content from  * @param columnName the column name to use  * @return the content as ASCII stream, or {@code null} in case of SQL NULL  * @throws SQLException if thrown by JDBC methods  * @see java.sql.ResultSet#getAsciiStream  */ @Nullable InputStream getClobAsAsciiStream(ResultSet rs, String columnName) throws SQLException.
true;;2;2;/**  * Retrieve the given column as ASCII stream from the given ResultSet.  * Might simply invoke {@code ResultSet.getAsciiStream} or work with  * {@code ResultSet.getClob}, depending on the database and driver.  * @param rs the ResultSet to retrieve the content from  * @param columnIndex the column index to use  * @return the content as ASCII stream, or {@code null} in case of SQL NULL  * @throws SQLException if thrown by JDBC methods  * @see java.sql.ResultSet#getAsciiStream  */ ;/**  * Retrieve the given column as ASCII stream from the given ResultSet.  * Might simply invoke {@code ResultSet.getAsciiStream} or work with  * {@code ResultSet.getClob}, depending on the database and driver.  * @param rs the ResultSet to retrieve the content from  * @param columnIndex the column index to use  * @return the content as ASCII stream, or {@code null} in case of SQL NULL  * @throws SQLException if thrown by JDBC methods  * @see java.sql.ResultSet#getAsciiStream  */ @Nullable InputStream getClobAsAsciiStream(ResultSet rs, int columnIndex) throws SQLException.
true;;2;1;/**  * Retrieve the given column as character stream from the given ResultSet.  * Might simply invoke {@code ResultSet.getCharacterStream} or work with  * {@code ResultSet.getClob}, depending on the database and driver.  * @param rs the ResultSet to retrieve the content from  * @param columnName the column name to use  * @return the content as character stream  * @throws SQLException if thrown by JDBC methods  * @see java.sql.ResultSet#getCharacterStream  */ ;/**  * Retrieve the given column as character stream from the given ResultSet.  * Might simply invoke {@code ResultSet.getCharacterStream} or work with  * {@code ResultSet.getClob}, depending on the database and driver.  * @param rs the ResultSet to retrieve the content from  * @param columnName the column name to use  * @return the content as character stream  * @throws SQLException if thrown by JDBC methods  * @see java.sql.ResultSet#getCharacterStream  */ Reader getClobAsCharacterStream(ResultSet rs, String columnName) throws SQLException.
true;;2;1;/**  * Retrieve the given column as character stream from the given ResultSet.  * Might simply invoke {@code ResultSet.getCharacterStream} or work with  * {@code ResultSet.getClob}, depending on the database and driver.  * @param rs the ResultSet to retrieve the content from  * @param columnIndex the column index to use  * @return the content as character stream  * @throws SQLException if thrown by JDBC methods  * @see java.sql.ResultSet#getCharacterStream  */ ;/**  * Retrieve the given column as character stream from the given ResultSet.  * Might simply invoke {@code ResultSet.getCharacterStream} or work with  * {@code ResultSet.getClob}, depending on the database and driver.  * @param rs the ResultSet to retrieve the content from  * @param columnIndex the column index to use  * @return the content as character stream  * @throws SQLException if thrown by JDBC methods  * @see java.sql.ResultSet#getCharacterStream  */ Reader getClobAsCharacterStream(ResultSet rs, int columnIndex) throws SQLException.
true;;0;1;/**  * Create a new {@link LobCreator} instance, i.e. a session for creating BLOBs  * and CLOBs. Needs to be closed after the created LOBs are not needed anymore -  * typically after statement execution or transaction completion.  * @return the new LobCreator instance  * @see LobCreator#close()  */ ;/**  * Create a new {@link LobCreator} instance, i.e. a session for creating BLOBs  * and CLOBs. Needs to be closed after the created LOBs are not needed anymore -  * typically after statement execution or transaction completion.  * @return the new LobCreator instance  * @see LobCreator#close()  */ LobCreator getLobCreator().
