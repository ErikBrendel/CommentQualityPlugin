# id;timestamp;commentText;codeText;commentWords;codeWords
ResourceDatabasePopulator -> public void setContinueOnError(boolean continueOnError);1328020251;Flag to indicate that all failures in SQL should be logged but not cause a failure._Defaults to false.;public void setContinueOnError(boolean continueOnError) {_		this.continueOnError = continueOnError__	};flag,to,indicate,that,all,failures,in,sql,should,be,logged,but,not,cause,a,failure,defaults,to,false;public,void,set,continue,on,error,boolean,continue,on,error,this,continue,on,error,continue,on,error
ResourceDatabasePopulator -> public void setContinueOnError(boolean continueOnError);1329142650;Flag to indicate that all failures in SQL should be logged but not cause a failure._Defaults to false.;public void setContinueOnError(boolean continueOnError) {_		this.continueOnError = continueOnError__	};flag,to,indicate,that,all,failures,in,sql,should,be,logged,but,not,cause,a,failure,defaults,to,false;public,void,set,continue,on,error,boolean,continue,on,error,this,continue,on,error,continue,on,error
ResourceDatabasePopulator -> public void setContinueOnError(boolean continueOnError);1347368808;Flag to indicate that all failures in SQL should be logged but not cause a failure._Defaults to false.;public void setContinueOnError(boolean continueOnError) {_		this.continueOnError = continueOnError__	};flag,to,indicate,that,all,failures,in,sql,should,be,logged,but,not,cause,a,failure,defaults,to,false;public,void,set,continue,on,error,boolean,continue,on,error,this,continue,on,error,continue,on,error
ResourceDatabasePopulator -> public void setContinueOnError(boolean continueOnError);1349904863;Flag to indicate that all failures in SQL should be logged but not cause a failure._Defaults to false.;public void setContinueOnError(boolean continueOnError) {_		this.continueOnError = continueOnError__	};flag,to,indicate,that,all,failures,in,sql,should,be,logged,but,not,cause,a,failure,defaults,to,false;public,void,set,continue,on,error,boolean,continue,on,error,this,continue,on,error,continue,on,error
ResourceDatabasePopulator -> public void setContinueOnError(boolean continueOnError);1352157731;Flag to indicate that all failures in SQL should be logged but not cause a failure._Defaults to false.;public void setContinueOnError(boolean continueOnError) {_		this.continueOnError = continueOnError__	};flag,to,indicate,that,all,failures,in,sql,should,be,logged,but,not,cause,a,failure,defaults,to,false;public,void,set,continue,on,error,boolean,continue,on,error,this,continue,on,error,continue,on,error
ResourceDatabasePopulator -> public void setContinueOnError(boolean continueOnError);1352158898;Flag to indicate that all failures in SQL should be logged but not cause a failure._Defaults to false.;public void setContinueOnError(boolean continueOnError) {_		this.continueOnError = continueOnError__	};flag,to,indicate,that,all,failures,in,sql,should,be,logged,but,not,cause,a,failure,defaults,to,false;public,void,set,continue,on,error,boolean,continue,on,error,this,continue,on,error,continue,on,error
ResourceDatabasePopulator -> public void setContinueOnError(boolean continueOnError);1354725684;Flag to indicate that all failures in SQL should be logged but not cause a failure._Defaults to false.;public void setContinueOnError(boolean continueOnError) {_		this.continueOnError = continueOnError__	};flag,to,indicate,that,all,failures,in,sql,should,be,logged,but,not,cause,a,failure,defaults,to,false;public,void,set,continue,on,error,boolean,continue,on,error,this,continue,on,error,continue,on,error
ResourceDatabasePopulator -> public void setContinueOnError(boolean continueOnError);1355351963;Flag to indicate that all failures in SQL should be logged but not cause a failure._Defaults to false.;public void setContinueOnError(boolean continueOnError) {_		this.continueOnError = continueOnError__	};flag,to,indicate,that,all,failures,in,sql,should,be,logged,but,not,cause,a,failure,defaults,to,false;public,void,set,continue,on,error,boolean,continue,on,error,this,continue,on,error,continue,on,error
ResourceDatabasePopulator -> public void setContinueOnError(boolean continueOnError);1356735495;Flag to indicate that all failures in SQL should be logged but not cause a failure._Defaults to false.;public void setContinueOnError(boolean continueOnError) {_		this.continueOnError = continueOnError__	};flag,to,indicate,that,all,failures,in,sql,should,be,logged,but,not,cause,a,failure,defaults,to,false;public,void,set,continue,on,error,boolean,continue,on,error,this,continue,on,error,continue,on,error
ResourceDatabasePopulator -> public void setContinueOnError(boolean continueOnError);1357119239;Flag to indicate that all failures in SQL should be logged but not cause a failure._Defaults to false.;public void setContinueOnError(boolean continueOnError) {_		this.continueOnError = continueOnError__	};flag,to,indicate,that,all,failures,in,sql,should,be,logged,but,not,cause,a,failure,defaults,to,false;public,void,set,continue,on,error,boolean,continue,on,error,this,continue,on,error,continue,on,error
ResourceDatabasePopulator -> public void setContinueOnError(boolean continueOnError);1368482696;Flag to indicate that all failures in SQL should be logged but not cause a failure._Defaults to false.;public void setContinueOnError(boolean continueOnError) {_		this.continueOnError = continueOnError__	};flag,to,indicate,that,all,failures,in,sql,should,be,logged,but,not,cause,a,failure,defaults,to,false;public,void,set,continue,on,error,boolean,continue,on,error,this,continue,on,error,continue,on,error
ResourceDatabasePopulator -> public void setContinueOnError(boolean continueOnError);1387832430;Flag to indicate that all failures in SQL should be logged but not cause a failure._Defaults to false.;public void setContinueOnError(boolean continueOnError) {_		this.continueOnError = continueOnError__	};flag,to,indicate,that,all,failures,in,sql,should,be,logged,but,not,cause,a,failure,defaults,to,false;public,void,set,continue,on,error,boolean,continue,on,error,this,continue,on,error,continue,on,error
ResourceDatabasePopulator -> public void setContinueOnError(boolean continueOnError);1394708749;Flag to indicate that all failures in SQL should be logged but not cause a failure._<p>Defaults to {@code false}.;public void setContinueOnError(boolean continueOnError) {_		this.continueOnError = continueOnError__	};flag,to,indicate,that,all,failures,in,sql,should,be,logged,but,not,cause,a,failure,p,defaults,to,code,false;public,void,set,continue,on,error,boolean,continue,on,error,this,continue,on,error,continue,on,error
ResourceDatabasePopulator -> public void setContinueOnError(boolean continueOnError);1394714705;Flag to indicate that all failures in SQL should be logged but not cause a failure._<p>Defaults to {@code false}.;public void setContinueOnError(boolean continueOnError) {_		this.continueOnError = continueOnError__	};flag,to,indicate,that,all,failures,in,sql,should,be,logged,but,not,cause,a,failure,p,defaults,to,code,false;public,void,set,continue,on,error,boolean,continue,on,error,this,continue,on,error,continue,on,error
ResourceDatabasePopulator -> public void setContinueOnError(boolean continueOnError);1394987641;Flag to indicate that all failures in SQL should be logged but not cause a failure._<p>Defaults to {@code false}.;public void setContinueOnError(boolean continueOnError) {_		this.continueOnError = continueOnError__	};flag,to,indicate,that,all,failures,in,sql,should,be,logged,but,not,cause,a,failure,p,defaults,to,code,false;public,void,set,continue,on,error,boolean,continue,on,error,this,continue,on,error,continue,on,error
ResourceDatabasePopulator -> public void setContinueOnError(boolean continueOnError);1395055592;Flag to indicate that all failures in SQL should be logged but not cause a failure._<p>Defaults to {@code false}.;public void setContinueOnError(boolean continueOnError) {_		this.continueOnError = continueOnError__	};flag,to,indicate,that,all,failures,in,sql,should,be,logged,but,not,cause,a,failure,p,defaults,to,code,false;public,void,set,continue,on,error,boolean,continue,on,error,this,continue,on,error,continue,on,error
ResourceDatabasePopulator -> public void setContinueOnError(boolean continueOnError);1395068709;Flag to indicate that all failures in SQL should be logged but not cause a failure._<p>Defaults to {@code false}.;public void setContinueOnError(boolean continueOnError) {_		this.continueOnError = continueOnError__	};flag,to,indicate,that,all,failures,in,sql,should,be,logged,but,not,cause,a,failure,p,defaults,to,code,false;public,void,set,continue,on,error,boolean,continue,on,error,this,continue,on,error,continue,on,error
ResourceDatabasePopulator -> public void setContinueOnError(boolean continueOnError);1395183391;Flag to indicate that all failures in SQL should be logged but not cause a failure._<p>Defaults to {@code false}._@param continueOnError {@code true} if script execution should continue on error;public void setContinueOnError(boolean continueOnError) {_		this.continueOnError = continueOnError__	};flag,to,indicate,that,all,failures,in,sql,should,be,logged,but,not,cause,a,failure,p,defaults,to,code,false,param,continue,on,error,code,true,if,script,execution,should,continue,on,error;public,void,set,continue,on,error,boolean,continue,on,error,this,continue,on,error,continue,on,error
ResourceDatabasePopulator -> public void setContinueOnError(boolean continueOnError);1396191708;Flag to indicate that all failures in SQL should be logged but not cause a failure._<p>Defaults to {@code false}._@param continueOnError {@code true} if script execution should continue on error;public void setContinueOnError(boolean continueOnError) {_		this.continueOnError = continueOnError__	};flag,to,indicate,that,all,failures,in,sql,should,be,logged,but,not,cause,a,failure,p,defaults,to,code,false,param,continue,on,error,code,true,if,script,execution,should,continue,on,error;public,void,set,continue,on,error,boolean,continue,on,error,this,continue,on,error,continue,on,error
ResourceDatabasePopulator -> public void setContinueOnError(boolean continueOnError);1397231067;Flag to indicate that all failures in SQL should be logged but not cause a failure._<p>Defaults to {@code false}._@param continueOnError {@code true} if script execution should continue on error;public void setContinueOnError(boolean continueOnError) {_		this.continueOnError = continueOnError__	};flag,to,indicate,that,all,failures,in,sql,should,be,logged,but,not,cause,a,failure,p,defaults,to,code,false,param,continue,on,error,code,true,if,script,execution,should,continue,on,error;public,void,set,continue,on,error,boolean,continue,on,error,this,continue,on,error,continue,on,error
ResourceDatabasePopulator -> public void setContinueOnError(boolean continueOnError);1397385067;Flag to indicate that all failures in SQL should be logged but not cause a failure._<p>Defaults to {@code false}._@param continueOnError {@code true} if script execution should continue on error;public void setContinueOnError(boolean continueOnError) {_		this.continueOnError = continueOnError__	};flag,to,indicate,that,all,failures,in,sql,should,be,logged,but,not,cause,a,failure,p,defaults,to,code,false,param,continue,on,error,code,true,if,script,execution,should,continue,on,error;public,void,set,continue,on,error,boolean,continue,on,error,this,continue,on,error,continue,on,error
ResourceDatabasePopulator -> public void setContinueOnError(boolean continueOnError);1397393502;Flag to indicate that all failures in SQL should be logged but not cause a failure._<p>Defaults to {@code false}._@param continueOnError {@code true} if script execution should continue on error;public void setContinueOnError(boolean continueOnError) {_		this.continueOnError = continueOnError__	};flag,to,indicate,that,all,failures,in,sql,should,be,logged,but,not,cause,a,failure,p,defaults,to,code,false,param,continue,on,error,code,true,if,script,execution,should,continue,on,error;public,void,set,continue,on,error,boolean,continue,on,error,this,continue,on,error,continue,on,error
ResourceDatabasePopulator -> public void setContinueOnError(boolean continueOnError);1397394407;Flag to indicate that all failures in SQL should be logged but not cause a failure._<p>Defaults to {@code false}._@param continueOnError {@code true} if script execution should continue on error;public void setContinueOnError(boolean continueOnError) {_		this.continueOnError = continueOnError__	};flag,to,indicate,that,all,failures,in,sql,should,be,logged,but,not,cause,a,failure,p,defaults,to,code,false,param,continue,on,error,code,true,if,script,execution,should,continue,on,error;public,void,set,continue,on,error,boolean,continue,on,error,this,continue,on,error,continue,on,error
ResourceDatabasePopulator -> public void setContinueOnError(boolean continueOnError);1401991965;Flag to indicate that all failures in SQL should be logged but not cause a failure._<p>Defaults to {@code false}._@param continueOnError {@code true} if script execution should continue on error;public void setContinueOnError(boolean continueOnError) {_		this.continueOnError = continueOnError__	};flag,to,indicate,that,all,failures,in,sql,should,be,logged,but,not,cause,a,failure,p,defaults,to,code,false,param,continue,on,error,code,true,if,script,execution,should,continue,on,error;public,void,set,continue,on,error,boolean,continue,on,error,this,continue,on,error,continue,on,error
ResourceDatabasePopulator -> public void setContinueOnError(boolean continueOnError);1402143225;Flag to indicate that all failures in SQL should be logged but not cause a failure._<p>Defaults to {@code false}._@param continueOnError {@code true} if script execution should continue on error;public void setContinueOnError(boolean continueOnError) {_		this.continueOnError = continueOnError__	};flag,to,indicate,that,all,failures,in,sql,should,be,logged,but,not,cause,a,failure,p,defaults,to,code,false,param,continue,on,error,code,true,if,script,execution,should,continue,on,error;public,void,set,continue,on,error,boolean,continue,on,error,this,continue,on,error,continue,on,error
ResourceDatabasePopulator -> public void setContinueOnError(boolean continueOnError);1413848647;Flag to indicate that all failures in SQL should be logged but not cause a failure._<p>Defaults to {@code false}._@param continueOnError {@code true} if script execution should continue on error;public void setContinueOnError(boolean continueOnError) {_		this.continueOnError = continueOnError__	};flag,to,indicate,that,all,failures,in,sql,should,be,logged,but,not,cause,a,failure,p,defaults,to,code,false,param,continue,on,error,code,true,if,script,execution,should,continue,on,error;public,void,set,continue,on,error,boolean,continue,on,error,this,continue,on,error,continue,on,error
ResourceDatabasePopulator -> public void setContinueOnError(boolean continueOnError);1455813442;Flag to indicate that all failures in SQL should be logged but not cause a failure._<p>Defaults to {@code false}._@param continueOnError {@code true} if script execution should continue on error;public void setContinueOnError(boolean continueOnError) {_		this.continueOnError = continueOnError__	};flag,to,indicate,that,all,failures,in,sql,should,be,logged,but,not,cause,a,failure,p,defaults,to,code,false,param,continue,on,error,code,true,if,script,execution,should,continue,on,error;public,void,set,continue,on,error,boolean,continue,on,error,this,continue,on,error,continue,on,error
ResourceDatabasePopulator -> public void setContinueOnError(boolean continueOnError);1467730834;Flag to indicate that all failures in SQL should be logged but not cause a failure._<p>Defaults to {@code false}._@param continueOnError {@code true} if script execution should continue on error;public void setContinueOnError(boolean continueOnError) {_		this.continueOnError = continueOnError__	};flag,to,indicate,that,all,failures,in,sql,should,be,logged,but,not,cause,a,failure,p,defaults,to,code,false,param,continue,on,error,code,true,if,script,execution,should,continue,on,error;public,void,set,continue,on,error,boolean,continue,on,error,this,continue,on,error,continue,on,error
ResourceDatabasePopulator -> public void setContinueOnError(boolean continueOnError);1477691361;Flag to indicate that all failures in SQL should be logged but not cause a failure._<p>Defaults to {@code false}._@param continueOnError {@code true} if script execution should continue on error;public void setContinueOnError(boolean continueOnError) {_		this.continueOnError = continueOnError__	};flag,to,indicate,that,all,failures,in,sql,should,be,logged,but,not,cause,a,failure,p,defaults,to,code,false,param,continue,on,error,code,true,if,script,execution,should,continue,on,error;public,void,set,continue,on,error,boolean,continue,on,error,this,continue,on,error,continue,on,error
ResourceDatabasePopulator -> public void setContinueOnError(boolean continueOnError);1495868221;Flag to indicate that all failures in SQL should be logged but not cause a failure._<p>Defaults to {@code false}._@param continueOnError {@code true} if script execution should continue on error;public void setContinueOnError(boolean continueOnError) {_		this.continueOnError = continueOnError__	};flag,to,indicate,that,all,failures,in,sql,should,be,logged,but,not,cause,a,failure,p,defaults,to,code,false,param,continue,on,error,code,true,if,script,execution,should,continue,on,error;public,void,set,continue,on,error,boolean,continue,on,error,this,continue,on,error,continue,on,error
ResourceDatabasePopulator -> public void setContinueOnError(boolean continueOnError);1498780456;Flag to indicate that all failures in SQL should be logged but not cause a failure._<p>Defaults to {@code false}._@param continueOnError {@code true} if script execution should continue on error;public void setContinueOnError(boolean continueOnError) {_		this.continueOnError = continueOnError__	};flag,to,indicate,that,all,failures,in,sql,should,be,logged,but,not,cause,a,failure,p,defaults,to,code,false,param,continue,on,error,code,true,if,script,execution,should,continue,on,error;public,void,set,continue,on,error,boolean,continue,on,error,this,continue,on,error,continue,on,error
ResourceDatabasePopulator -> public void setContinueOnError(boolean continueOnError);1549646187;Flag to indicate that all failures in SQL should be logged but not cause a failure._<p>Defaults to {@code false}._@param continueOnError {@code true} if script execution should continue on error;public void setContinueOnError(boolean continueOnError) {_		this.continueOnError = continueOnError__	};flag,to,indicate,that,all,failures,in,sql,should,be,logged,but,not,cause,a,failure,p,defaults,to,code,false,param,continue,on,error,code,true,if,script,execution,should,continue,on,error;public,void,set,continue,on,error,boolean,continue,on,error,this,continue,on,error,continue,on,error
ResourceDatabasePopulator -> public ResourceDatabasePopulator(Resource... scripts);1394987641;Construct a new {@code ResourceDatabasePopulator} with default settings_for the supplied scripts._@param scripts the scripts to execute to populate the database_@since 4.0.3;public ResourceDatabasePopulator(Resource... scripts) {_		this()__		this.scripts = Arrays.asList(scripts)__	};construct,a,new,code,resource,database,populator,with,default,settings,for,the,supplied,scripts,param,scripts,the,scripts,to,execute,to,populate,the,database,since,4,0,3;public,resource,database,populator,resource,scripts,this,this,scripts,arrays,as,list,scripts
ResourceDatabasePopulator -> public ResourceDatabasePopulator(Resource... scripts);1395055592;Construct a new {@code ResourceDatabasePopulator} with default settings_for the supplied scripts._@param scripts the scripts to execute to populate the database_@since 4.0.3;public ResourceDatabasePopulator(Resource... scripts) {_		this()__		this.scripts = Arrays.asList(scripts)__	};construct,a,new,code,resource,database,populator,with,default,settings,for,the,supplied,scripts,param,scripts,the,scripts,to,execute,to,populate,the,database,since,4,0,3;public,resource,database,populator,resource,scripts,this,this,scripts,arrays,as,list,scripts
ResourceDatabasePopulator -> public ResourceDatabasePopulator(Resource... scripts);1395068709;Construct a new {@code ResourceDatabasePopulator} with default settings_for the supplied scripts._@param scripts the scripts to execute to populate the database_@since 4.0.3;public ResourceDatabasePopulator(Resource... scripts) {_		this()__		this.scripts = Arrays.asList(scripts)__	};construct,a,new,code,resource,database,populator,with,default,settings,for,the,supplied,scripts,param,scripts,the,scripts,to,execute,to,populate,the,database,since,4,0,3;public,resource,database,populator,resource,scripts,this,this,scripts,arrays,as,list,scripts
ResourceDatabasePopulator -> public ResourceDatabasePopulator(Resource... scripts);1395183391;Construct a new {@code ResourceDatabasePopulator} with default settings_for the supplied scripts._@param scripts the scripts to execute to initialize or populate the database_@since 4.0.3;public ResourceDatabasePopulator(Resource... scripts) {_		this()__		this.scripts = Arrays.asList(scripts)__	};construct,a,new,code,resource,database,populator,with,default,settings,for,the,supplied,scripts,param,scripts,the,scripts,to,execute,to,initialize,or,populate,the,database,since,4,0,3;public,resource,database,populator,resource,scripts,this,this,scripts,arrays,as,list,scripts
ResourceDatabasePopulator -> public ResourceDatabasePopulator(Resource... scripts);1396191708;Construct a new {@code ResourceDatabasePopulator} with default settings_for the supplied scripts._@param scripts the scripts to execute to initialize or populate the database_@since 4.0.3;public ResourceDatabasePopulator(Resource... scripts) {_		this()__		this.scripts = Arrays.asList(scripts)__	};construct,a,new,code,resource,database,populator,with,default,settings,for,the,supplied,scripts,param,scripts,the,scripts,to,execute,to,initialize,or,populate,the,database,since,4,0,3;public,resource,database,populator,resource,scripts,this,this,scripts,arrays,as,list,scripts
ResourceDatabasePopulator -> public ResourceDatabasePopulator(Resource... scripts);1397231067;Construct a new {@code ResourceDatabasePopulator} with default settings_for the supplied scripts._@param scripts the scripts to execute to initialize or populate the database_@since 4.0.3;public ResourceDatabasePopulator(Resource... scripts) {_		this()__		this.scripts = Arrays.asList(scripts)__	};construct,a,new,code,resource,database,populator,with,default,settings,for,the,supplied,scripts,param,scripts,the,scripts,to,execute,to,initialize,or,populate,the,database,since,4,0,3;public,resource,database,populator,resource,scripts,this,this,scripts,arrays,as,list,scripts
ResourceDatabasePopulator -> public ResourceDatabasePopulator(Resource... scripts);1397385067;Construct a new {@code ResourceDatabasePopulator} with default settings_for the supplied scripts._@param scripts the scripts to execute to initialize or populate the database_@since 4.0.3;public ResourceDatabasePopulator(Resource... scripts) {_		this()__		this.scripts = Arrays.asList(scripts)__	};construct,a,new,code,resource,database,populator,with,default,settings,for,the,supplied,scripts,param,scripts,the,scripts,to,execute,to,initialize,or,populate,the,database,since,4,0,3;public,resource,database,populator,resource,scripts,this,this,scripts,arrays,as,list,scripts
ResourceDatabasePopulator -> public ResourceDatabasePopulator(Resource... scripts);1397393502;Construct a new {@code ResourceDatabasePopulator} with default settings_for the supplied scripts._@param scripts the scripts to execute to initialize or populate the database_@since 4.0.3;public ResourceDatabasePopulator(Resource... scripts) {_		this()__		setScripts(scripts)__	};construct,a,new,code,resource,database,populator,with,default,settings,for,the,supplied,scripts,param,scripts,the,scripts,to,execute,to,initialize,or,populate,the,database,since,4,0,3;public,resource,database,populator,resource,scripts,this,set,scripts,scripts
ResourceDatabasePopulator -> public ResourceDatabasePopulator(Resource... scripts);1397394407;Construct a new {@code ResourceDatabasePopulator} with default settings_for the supplied scripts._@param scripts the scripts to execute to initialize or populate the database_@since 4.0.3;public ResourceDatabasePopulator(Resource... scripts) {_		this()__		setScripts(scripts)__	};construct,a,new,code,resource,database,populator,with,default,settings,for,the,supplied,scripts,param,scripts,the,scripts,to,execute,to,initialize,or,populate,the,database,since,4,0,3;public,resource,database,populator,resource,scripts,this,set,scripts,scripts
ResourceDatabasePopulator -> public ResourceDatabasePopulator(Resource... scripts);1401991965;Construct a new {@code ResourceDatabasePopulator} with default settings_for the supplied scripts._@param scripts the scripts to execute to initialize or populate the database_@since 4.0.3;public ResourceDatabasePopulator(Resource... scripts) {_		this()__		setScripts(scripts)__	};construct,a,new,code,resource,database,populator,with,default,settings,for,the,supplied,scripts,param,scripts,the,scripts,to,execute,to,initialize,or,populate,the,database,since,4,0,3;public,resource,database,populator,resource,scripts,this,set,scripts,scripts
ResourceDatabasePopulator -> public ResourceDatabasePopulator(Resource... scripts);1402143225;Construct a new {@code ResourceDatabasePopulator} with default settings_for the supplied scripts._@param scripts the scripts to execute to initialize or clean up the database__never {@code null}_@since 4.0.3;public ResourceDatabasePopulator(Resource... scripts) {_		this()__		setScripts(scripts)__	};construct,a,new,code,resource,database,populator,with,default,settings,for,the,supplied,scripts,param,scripts,the,scripts,to,execute,to,initialize,or,clean,up,the,database,never,code,null,since,4,0,3;public,resource,database,populator,resource,scripts,this,set,scripts,scripts
ResourceDatabasePopulator -> public ResourceDatabasePopulator(Resource... scripts);1413848647;Construct a new {@code ResourceDatabasePopulator} with default settings_for the supplied scripts._@param scripts the scripts to execute to initialize or clean up the database__never {@code null}_@since 4.0.3;public ResourceDatabasePopulator(Resource... scripts) {_		this()__		setScripts(scripts)__	};construct,a,new,code,resource,database,populator,with,default,settings,for,the,supplied,scripts,param,scripts,the,scripts,to,execute,to,initialize,or,clean,up,the,database,never,code,null,since,4,0,3;public,resource,database,populator,resource,scripts,this,set,scripts,scripts
ResourceDatabasePopulator -> public ResourceDatabasePopulator(Resource... scripts);1455813442;Construct a new {@code ResourceDatabasePopulator} with default settings_for the supplied scripts._@param scripts the scripts to execute to initialize or clean up the database_(never {@code null})_@since 4.0.3;public ResourceDatabasePopulator(Resource... scripts) {_		this()__		setScripts(scripts)__	};construct,a,new,code,resource,database,populator,with,default,settings,for,the,supplied,scripts,param,scripts,the,scripts,to,execute,to,initialize,or,clean,up,the,database,never,code,null,since,4,0,3;public,resource,database,populator,resource,scripts,this,set,scripts,scripts
ResourceDatabasePopulator -> public ResourceDatabasePopulator(Resource... scripts);1467730834;Construct a new {@code ResourceDatabasePopulator} with default settings_for the supplied scripts._@param scripts the scripts to execute to initialize or clean up the database_(never {@code null})_@since 4.0.3;public ResourceDatabasePopulator(Resource... scripts) {_		this()__		setScripts(scripts)__	};construct,a,new,code,resource,database,populator,with,default,settings,for,the,supplied,scripts,param,scripts,the,scripts,to,execute,to,initialize,or,clean,up,the,database,never,code,null,since,4,0,3;public,resource,database,populator,resource,scripts,this,set,scripts,scripts
ResourceDatabasePopulator -> public ResourceDatabasePopulator(Resource... scripts);1477691361;Construct a new {@code ResourceDatabasePopulator} with default settings_for the supplied scripts._@param scripts the scripts to execute to initialize or clean up the database_(never {@code null})_@since 4.0.3;public ResourceDatabasePopulator(Resource... scripts) {_		this()__		setScripts(scripts)__	};construct,a,new,code,resource,database,populator,with,default,settings,for,the,supplied,scripts,param,scripts,the,scripts,to,execute,to,initialize,or,clean,up,the,database,never,code,null,since,4,0,3;public,resource,database,populator,resource,scripts,this,set,scripts,scripts
ResourceDatabasePopulator -> public ResourceDatabasePopulator(Resource... scripts);1495868221;Construct a new {@code ResourceDatabasePopulator} with default settings_for the supplied scripts._@param scripts the scripts to execute to initialize or clean up the database_(never {@code null})_@since 4.0.3;public ResourceDatabasePopulator(Resource... scripts) {_		this()__		setScripts(scripts)__	};construct,a,new,code,resource,database,populator,with,default,settings,for,the,supplied,scripts,param,scripts,the,scripts,to,execute,to,initialize,or,clean,up,the,database,never,code,null,since,4,0,3;public,resource,database,populator,resource,scripts,this,set,scripts,scripts
ResourceDatabasePopulator -> public ResourceDatabasePopulator(Resource... scripts);1498780456;Construct a new {@code ResourceDatabasePopulator} with default settings_for the supplied scripts._@param scripts the scripts to execute to initialize or clean up the database_(never {@code null})_@since 4.0.3;public ResourceDatabasePopulator(Resource... scripts) {_		this()__		setScripts(scripts)__	};construct,a,new,code,resource,database,populator,with,default,settings,for,the,supplied,scripts,param,scripts,the,scripts,to,execute,to,initialize,or,clean,up,the,database,never,code,null,since,4,0,3;public,resource,database,populator,resource,scripts,this,set,scripts,scripts
ResourceDatabasePopulator -> public ResourceDatabasePopulator(Resource... scripts);1549646187;Construct a new {@code ResourceDatabasePopulator} with default settings_for the supplied scripts._@param scripts the scripts to execute to initialize or clean up the database_(never {@code null})_@since 4.0.3;public ResourceDatabasePopulator(Resource... scripts) {_		setScripts(scripts)__	};construct,a,new,code,resource,database,populator,with,default,settings,for,the,supplied,scripts,param,scripts,the,scripts,to,execute,to,initialize,or,clean,up,the,database,never,code,null,since,4,0,3;public,resource,database,populator,resource,scripts,set,scripts,scripts
ResourceDatabasePopulator -> public ResourceDatabasePopulator(boolean continueOnError, boolean ignoreFailedDrops, String sqlScriptEncoding, 			Resource... scripts);1394714705;Construct a new {@code ResourceDatabasePopulator} with the supplied values.__@param continueOnError flag to indicate that all failures in SQL should be_logged but not cause a failure_@param ignoreFailedDrops flag to indicate that a failed SQL {@code DROP}_statement can be ignored_@param sqlScriptEncoding the encoding for the supplied SQL scripts, if_different from the platform encoding_ may be {@code null}_@param scripts the scripts to execute to populate the database;public ResourceDatabasePopulator(boolean continueOnError, boolean ignoreFailedDrops, String sqlScriptEncoding,_			Resource... scripts) {_		this.continueOnError = continueOnError__		this.ignoreFailedDrops = ignoreFailedDrops__		this.sqlScriptEncoding = sqlScriptEncoding__		this.scripts = Arrays.asList(scripts)__	};construct,a,new,code,resource,database,populator,with,the,supplied,values,param,continue,on,error,flag,to,indicate,that,all,failures,in,sql,should,be,logged,but,not,cause,a,failure,param,ignore,failed,drops,flag,to,indicate,that,a,failed,sql,code,drop,statement,can,be,ignored,param,sql,script,encoding,the,encoding,for,the,supplied,sql,scripts,if,different,from,the,platform,encoding,may,be,code,null,param,scripts,the,scripts,to,execute,to,populate,the,database;public,resource,database,populator,boolean,continue,on,error,boolean,ignore,failed,drops,string,sql,script,encoding,resource,scripts,this,continue,on,error,continue,on,error,this,ignore,failed,drops,ignore,failed,drops,this,sql,script,encoding,sql,script,encoding,this,scripts,arrays,as,list,scripts
ResourceDatabasePopulator -> public ResourceDatabasePopulator(boolean continueOnError, boolean ignoreFailedDrops, String sqlScriptEncoding, 			Resource... scripts);1394987641;Construct a new {@code ResourceDatabasePopulator} with the supplied values._@param continueOnError flag to indicate that all failures in SQL should be_logged but not cause a failure_@param ignoreFailedDrops flag to indicate that a failed SQL {@code DROP}_statement can be ignored_@param sqlScriptEncoding the encoding for the supplied SQL scripts, if_different from the platform encoding_ may be {@code null}_@param scripts the scripts to execute to populate the database_@since 4.0.3;public ResourceDatabasePopulator(boolean continueOnError, boolean ignoreFailedDrops, String sqlScriptEncoding,_			Resource... scripts) {_		this(scripts)__		this.continueOnError = continueOnError__		this.ignoreFailedDrops = ignoreFailedDrops__		this.sqlScriptEncoding = sqlScriptEncoding__	};construct,a,new,code,resource,database,populator,with,the,supplied,values,param,continue,on,error,flag,to,indicate,that,all,failures,in,sql,should,be,logged,but,not,cause,a,failure,param,ignore,failed,drops,flag,to,indicate,that,a,failed,sql,code,drop,statement,can,be,ignored,param,sql,script,encoding,the,encoding,for,the,supplied,sql,scripts,if,different,from,the,platform,encoding,may,be,code,null,param,scripts,the,scripts,to,execute,to,populate,the,database,since,4,0,3;public,resource,database,populator,boolean,continue,on,error,boolean,ignore,failed,drops,string,sql,script,encoding,resource,scripts,this,scripts,this,continue,on,error,continue,on,error,this,ignore,failed,drops,ignore,failed,drops,this,sql,script,encoding,sql,script,encoding
ResourceDatabasePopulator -> public ResourceDatabasePopulator(boolean continueOnError, boolean ignoreFailedDrops, String sqlScriptEncoding, 			Resource... scripts);1395055592;Construct a new {@code ResourceDatabasePopulator} with the supplied values._@param continueOnError flag to indicate that all failures in SQL should be_logged but not cause a failure_@param ignoreFailedDrops flag to indicate that a failed SQL {@code DROP}_statement can be ignored_@param sqlScriptEncoding the encoding for the supplied SQL scripts, if_different from the platform encoding_ may be {@code null}_@param scripts the scripts to execute to populate the database_@since 4.0.3;public ResourceDatabasePopulator(boolean continueOnError, boolean ignoreFailedDrops, String sqlScriptEncoding,_			Resource... scripts) {_		this(scripts)__		this.continueOnError = continueOnError__		this.ignoreFailedDrops = ignoreFailedDrops__		this.sqlScriptEncoding = sqlScriptEncoding__	};construct,a,new,code,resource,database,populator,with,the,supplied,values,param,continue,on,error,flag,to,indicate,that,all,failures,in,sql,should,be,logged,but,not,cause,a,failure,param,ignore,failed,drops,flag,to,indicate,that,a,failed,sql,code,drop,statement,can,be,ignored,param,sql,script,encoding,the,encoding,for,the,supplied,sql,scripts,if,different,from,the,platform,encoding,may,be,code,null,param,scripts,the,scripts,to,execute,to,populate,the,database,since,4,0,3;public,resource,database,populator,boolean,continue,on,error,boolean,ignore,failed,drops,string,sql,script,encoding,resource,scripts,this,scripts,this,continue,on,error,continue,on,error,this,ignore,failed,drops,ignore,failed,drops,this,sql,script,encoding,sql,script,encoding
ResourceDatabasePopulator -> public ResourceDatabasePopulator(boolean continueOnError, boolean ignoreFailedDrops, String sqlScriptEncoding, 			Resource... scripts);1395068709;Construct a new {@code ResourceDatabasePopulator} with the supplied values._@param continueOnError flag to indicate that all failures in SQL should be_logged but not cause a failure_@param ignoreFailedDrops flag to indicate that a failed SQL {@code DROP}_statement can be ignored_@param sqlScriptEncoding the encoding for the supplied SQL scripts, if_different from the platform encoding_ may be {@code null}_@param scripts the scripts to execute to populate the database_@since 4.0.3;public ResourceDatabasePopulator(boolean continueOnError, boolean ignoreFailedDrops, String sqlScriptEncoding,_			Resource... scripts) {_		this(scripts)__		this.continueOnError = continueOnError__		this.ignoreFailedDrops = ignoreFailedDrops__		this.sqlScriptEncoding = sqlScriptEncoding__	};construct,a,new,code,resource,database,populator,with,the,supplied,values,param,continue,on,error,flag,to,indicate,that,all,failures,in,sql,should,be,logged,but,not,cause,a,failure,param,ignore,failed,drops,flag,to,indicate,that,a,failed,sql,code,drop,statement,can,be,ignored,param,sql,script,encoding,the,encoding,for,the,supplied,sql,scripts,if,different,from,the,platform,encoding,may,be,code,null,param,scripts,the,scripts,to,execute,to,populate,the,database,since,4,0,3;public,resource,database,populator,boolean,continue,on,error,boolean,ignore,failed,drops,string,sql,script,encoding,resource,scripts,this,scripts,this,continue,on,error,continue,on,error,this,ignore,failed,drops,ignore,failed,drops,this,sql,script,encoding,sql,script,encoding
ResourceDatabasePopulator -> public ResourceDatabasePopulator(boolean continueOnError, boolean ignoreFailedDrops, String sqlScriptEncoding, 			Resource... scripts);1395183391;Construct a new {@code ResourceDatabasePopulator} with the supplied values._@param continueOnError flag to indicate that all failures in SQL should be_logged but not cause a failure_@param ignoreFailedDrops flag to indicate that a failed SQL {@code DROP}_statement can be ignored_@param sqlScriptEncoding the encoding for the supplied SQL scripts, if_different from the platform encoding_ may be {@code null}_@param scripts the scripts to execute to initialize or populate the database_@since 4.0.3;public ResourceDatabasePopulator(boolean continueOnError, boolean ignoreFailedDrops, String sqlScriptEncoding,_			Resource... scripts) {_		this(scripts)__		this.continueOnError = continueOnError__		this.ignoreFailedDrops = ignoreFailedDrops__		this.sqlScriptEncoding = sqlScriptEncoding__	};construct,a,new,code,resource,database,populator,with,the,supplied,values,param,continue,on,error,flag,to,indicate,that,all,failures,in,sql,should,be,logged,but,not,cause,a,failure,param,ignore,failed,drops,flag,to,indicate,that,a,failed,sql,code,drop,statement,can,be,ignored,param,sql,script,encoding,the,encoding,for,the,supplied,sql,scripts,if,different,from,the,platform,encoding,may,be,code,null,param,scripts,the,scripts,to,execute,to,initialize,or,populate,the,database,since,4,0,3;public,resource,database,populator,boolean,continue,on,error,boolean,ignore,failed,drops,string,sql,script,encoding,resource,scripts,this,scripts,this,continue,on,error,continue,on,error,this,ignore,failed,drops,ignore,failed,drops,this,sql,script,encoding,sql,script,encoding
ResourceDatabasePopulator -> public ResourceDatabasePopulator(boolean continueOnError, boolean ignoreFailedDrops, String sqlScriptEncoding, 			Resource... scripts);1396191708;Construct a new {@code ResourceDatabasePopulator} with the supplied values._@param continueOnError flag to indicate that all failures in SQL should be_logged but not cause a failure_@param ignoreFailedDrops flag to indicate that a failed SQL {@code DROP}_statement can be ignored_@param sqlScriptEncoding the encoding for the supplied SQL scripts, if_different from the platform encoding_ may be {@code null}_@param scripts the scripts to execute to initialize or populate the database_@since 4.0.3;public ResourceDatabasePopulator(boolean continueOnError, boolean ignoreFailedDrops, String sqlScriptEncoding,_			Resource... scripts) {_		this(scripts)__		this.continueOnError = continueOnError__		this.ignoreFailedDrops = ignoreFailedDrops__		this.sqlScriptEncoding = sqlScriptEncoding__	};construct,a,new,code,resource,database,populator,with,the,supplied,values,param,continue,on,error,flag,to,indicate,that,all,failures,in,sql,should,be,logged,but,not,cause,a,failure,param,ignore,failed,drops,flag,to,indicate,that,a,failed,sql,code,drop,statement,can,be,ignored,param,sql,script,encoding,the,encoding,for,the,supplied,sql,scripts,if,different,from,the,platform,encoding,may,be,code,null,param,scripts,the,scripts,to,execute,to,initialize,or,populate,the,database,since,4,0,3;public,resource,database,populator,boolean,continue,on,error,boolean,ignore,failed,drops,string,sql,script,encoding,resource,scripts,this,scripts,this,continue,on,error,continue,on,error,this,ignore,failed,drops,ignore,failed,drops,this,sql,script,encoding,sql,script,encoding
ResourceDatabasePopulator -> public ResourceDatabasePopulator(boolean continueOnError, boolean ignoreFailedDrops, String sqlScriptEncoding, 			Resource... scripts);1397231067;Construct a new {@code ResourceDatabasePopulator} with the supplied values._@param continueOnError flag to indicate that all failures in SQL should be_logged but not cause a failure_@param ignoreFailedDrops flag to indicate that a failed SQL {@code DROP}_statement can be ignored_@param sqlScriptEncoding the encoding for the supplied SQL scripts, if_different from the platform encoding_ may be {@code null}_@param scripts the scripts to execute to initialize or populate the database_@since 4.0.3;public ResourceDatabasePopulator(boolean continueOnError, boolean ignoreFailedDrops, String sqlScriptEncoding,_			Resource... scripts) {_		this(scripts)__		this.continueOnError = continueOnError__		this.ignoreFailedDrops = ignoreFailedDrops__		this.sqlScriptEncoding = sqlScriptEncoding__	};construct,a,new,code,resource,database,populator,with,the,supplied,values,param,continue,on,error,flag,to,indicate,that,all,failures,in,sql,should,be,logged,but,not,cause,a,failure,param,ignore,failed,drops,flag,to,indicate,that,a,failed,sql,code,drop,statement,can,be,ignored,param,sql,script,encoding,the,encoding,for,the,supplied,sql,scripts,if,different,from,the,platform,encoding,may,be,code,null,param,scripts,the,scripts,to,execute,to,initialize,or,populate,the,database,since,4,0,3;public,resource,database,populator,boolean,continue,on,error,boolean,ignore,failed,drops,string,sql,script,encoding,resource,scripts,this,scripts,this,continue,on,error,continue,on,error,this,ignore,failed,drops,ignore,failed,drops,this,sql,script,encoding,sql,script,encoding
ResourceDatabasePopulator -> public ResourceDatabasePopulator(boolean continueOnError, boolean ignoreFailedDrops, String sqlScriptEncoding, 			Resource... scripts);1397385067;Construct a new {@code ResourceDatabasePopulator} with the supplied values._@param continueOnError flag to indicate that all failures in SQL should be_logged but not cause a failure_@param ignoreFailedDrops flag to indicate that a failed SQL {@code DROP}_statement can be ignored_@param sqlScriptEncoding the encoding for the supplied SQL scripts, if_different from the platform encoding_ may be {@code null}_@param scripts the scripts to execute to initialize or populate the database_@since 4.0.3;public ResourceDatabasePopulator(boolean continueOnError, boolean ignoreFailedDrops, String sqlScriptEncoding,_			Resource... scripts) {_		this(scripts)__		this.continueOnError = continueOnError__		this.ignoreFailedDrops = ignoreFailedDrops__		this.sqlScriptEncoding = sqlScriptEncoding__	};construct,a,new,code,resource,database,populator,with,the,supplied,values,param,continue,on,error,flag,to,indicate,that,all,failures,in,sql,should,be,logged,but,not,cause,a,failure,param,ignore,failed,drops,flag,to,indicate,that,a,failed,sql,code,drop,statement,can,be,ignored,param,sql,script,encoding,the,encoding,for,the,supplied,sql,scripts,if,different,from,the,platform,encoding,may,be,code,null,param,scripts,the,scripts,to,execute,to,initialize,or,populate,the,database,since,4,0,3;public,resource,database,populator,boolean,continue,on,error,boolean,ignore,failed,drops,string,sql,script,encoding,resource,scripts,this,scripts,this,continue,on,error,continue,on,error,this,ignore,failed,drops,ignore,failed,drops,this,sql,script,encoding,sql,script,encoding
ResourceDatabasePopulator -> public ResourceDatabasePopulator(boolean continueOnError, boolean ignoreFailedDrops, String sqlScriptEncoding, 			Resource... scripts);1397393502;Construct a new {@code ResourceDatabasePopulator} with the supplied values._@param continueOnError flag to indicate that all failures in SQL should be_logged but not cause a failure_@param ignoreFailedDrops flag to indicate that a failed SQL {@code DROP}_statement can be ignored_@param sqlScriptEncoding the encoding for the supplied SQL scripts, if_different from the platform encoding_ may be {@code null}_@param scripts the scripts to execute to initialize or populate the database__never {@code null}_@since 4.0.3;public ResourceDatabasePopulator(boolean continueOnError, boolean ignoreFailedDrops, String sqlScriptEncoding,_			Resource... scripts) {_		this(scripts)__		this.continueOnError = continueOnError__		this.ignoreFailedDrops = ignoreFailedDrops__		this.sqlScriptEncoding = sqlScriptEncoding__	};construct,a,new,code,resource,database,populator,with,the,supplied,values,param,continue,on,error,flag,to,indicate,that,all,failures,in,sql,should,be,logged,but,not,cause,a,failure,param,ignore,failed,drops,flag,to,indicate,that,a,failed,sql,code,drop,statement,can,be,ignored,param,sql,script,encoding,the,encoding,for,the,supplied,sql,scripts,if,different,from,the,platform,encoding,may,be,code,null,param,scripts,the,scripts,to,execute,to,initialize,or,populate,the,database,never,code,null,since,4,0,3;public,resource,database,populator,boolean,continue,on,error,boolean,ignore,failed,drops,string,sql,script,encoding,resource,scripts,this,scripts,this,continue,on,error,continue,on,error,this,ignore,failed,drops,ignore,failed,drops,this,sql,script,encoding,sql,script,encoding
ResourceDatabasePopulator -> public ResourceDatabasePopulator(boolean continueOnError, boolean ignoreFailedDrops, String sqlScriptEncoding, 			Resource... scripts);1397394407;Construct a new {@code ResourceDatabasePopulator} with the supplied values._@param continueOnError flag to indicate that all failures in SQL should be_logged but not cause a failure_@param ignoreFailedDrops flag to indicate that a failed SQL {@code DROP}_statement can be ignored_@param sqlScriptEncoding the encoding for the supplied SQL scripts, if_different from the platform encoding_ may be {@code null}_@param scripts the scripts to execute to initialize or populate the database__never {@code null}_@since 4.0.3;public ResourceDatabasePopulator(boolean continueOnError, boolean ignoreFailedDrops, String sqlScriptEncoding,_			Resource... scripts) {_		this(scripts)__		this.continueOnError = continueOnError__		this.ignoreFailedDrops = ignoreFailedDrops__		this.sqlScriptEncoding = sqlScriptEncoding__	};construct,a,new,code,resource,database,populator,with,the,supplied,values,param,continue,on,error,flag,to,indicate,that,all,failures,in,sql,should,be,logged,but,not,cause,a,failure,param,ignore,failed,drops,flag,to,indicate,that,a,failed,sql,code,drop,statement,can,be,ignored,param,sql,script,encoding,the,encoding,for,the,supplied,sql,scripts,if,different,from,the,platform,encoding,may,be,code,null,param,scripts,the,scripts,to,execute,to,initialize,or,populate,the,database,never,code,null,since,4,0,3;public,resource,database,populator,boolean,continue,on,error,boolean,ignore,failed,drops,string,sql,script,encoding,resource,scripts,this,scripts,this,continue,on,error,continue,on,error,this,ignore,failed,drops,ignore,failed,drops,this,sql,script,encoding,sql,script,encoding
ResourceDatabasePopulator -> public ResourceDatabasePopulator(boolean continueOnError, boolean ignoreFailedDrops, String sqlScriptEncoding, 			Resource... scripts);1401991965;Construct a new {@code ResourceDatabasePopulator} with the supplied values._@param continueOnError flag to indicate that all failures in SQL should be_logged but not cause a failure_@param ignoreFailedDrops flag to indicate that a failed SQL {@code DROP}_statement can be ignored_@param sqlScriptEncoding the encoding for the supplied SQL scripts, if_different from the platform encoding_ may be {@code null} or empty_@param scripts the scripts to execute to initialize or populate the database__never {@code null}_@since 4.0.3;public ResourceDatabasePopulator(boolean continueOnError, boolean ignoreFailedDrops, String sqlScriptEncoding,_			Resource... scripts) {_		this(scripts)__		this.continueOnError = continueOnError__		this.ignoreFailedDrops = ignoreFailedDrops__		setSqlScriptEncoding(sqlScriptEncoding)__	};construct,a,new,code,resource,database,populator,with,the,supplied,values,param,continue,on,error,flag,to,indicate,that,all,failures,in,sql,should,be,logged,but,not,cause,a,failure,param,ignore,failed,drops,flag,to,indicate,that,a,failed,sql,code,drop,statement,can,be,ignored,param,sql,script,encoding,the,encoding,for,the,supplied,sql,scripts,if,different,from,the,platform,encoding,may,be,code,null,or,empty,param,scripts,the,scripts,to,execute,to,initialize,or,populate,the,database,never,code,null,since,4,0,3;public,resource,database,populator,boolean,continue,on,error,boolean,ignore,failed,drops,string,sql,script,encoding,resource,scripts,this,scripts,this,continue,on,error,continue,on,error,this,ignore,failed,drops,ignore,failed,drops,set,sql,script,encoding,sql,script,encoding
ResourceDatabasePopulator -> public ResourceDatabasePopulator(boolean continueOnError, boolean ignoreFailedDrops, String sqlScriptEncoding, 			Resource... scripts);1402143225;Construct a new {@code ResourceDatabasePopulator} with the supplied values._@param continueOnError flag to indicate that all failures in SQL should be_logged but not cause a failure_@param ignoreFailedDrops flag to indicate that a failed SQL {@code DROP}_statement can be ignored_@param sqlScriptEncoding the encoding for the supplied SQL scripts_ may_be {@code null} or <em>empty</em> to indicate platform encoding_@param scripts the scripts to execute to initialize or clean up the database__never {@code null}_@since 4.0.3;public ResourceDatabasePopulator(boolean continueOnError, boolean ignoreFailedDrops, String sqlScriptEncoding,_			Resource... scripts) {_		this(scripts)__		this.continueOnError = continueOnError__		this.ignoreFailedDrops = ignoreFailedDrops__		setSqlScriptEncoding(sqlScriptEncoding)__	};construct,a,new,code,resource,database,populator,with,the,supplied,values,param,continue,on,error,flag,to,indicate,that,all,failures,in,sql,should,be,logged,but,not,cause,a,failure,param,ignore,failed,drops,flag,to,indicate,that,a,failed,sql,code,drop,statement,can,be,ignored,param,sql,script,encoding,the,encoding,for,the,supplied,sql,scripts,may,be,code,null,or,em,empty,em,to,indicate,platform,encoding,param,scripts,the,scripts,to,execute,to,initialize,or,clean,up,the,database,never,code,null,since,4,0,3;public,resource,database,populator,boolean,continue,on,error,boolean,ignore,failed,drops,string,sql,script,encoding,resource,scripts,this,scripts,this,continue,on,error,continue,on,error,this,ignore,failed,drops,ignore,failed,drops,set,sql,script,encoding,sql,script,encoding
ResourceDatabasePopulator -> public ResourceDatabasePopulator(boolean continueOnError, boolean ignoreFailedDrops, String sqlScriptEncoding, 			Resource... scripts);1413848647;Construct a new {@code ResourceDatabasePopulator} with the supplied values._@param continueOnError flag to indicate that all failures in SQL should be_logged but not cause a failure_@param ignoreFailedDrops flag to indicate that a failed SQL {@code DROP}_statement can be ignored_@param sqlScriptEncoding the encoding for the supplied SQL scripts_ may_be {@code null} or <em>empty</em> to indicate platform encoding_@param scripts the scripts to execute to initialize or clean up the database__never {@code null}_@since 4.0.3;public ResourceDatabasePopulator(boolean continueOnError, boolean ignoreFailedDrops, String sqlScriptEncoding,_			Resource... scripts) {_		this(scripts)__		this.continueOnError = continueOnError__		this.ignoreFailedDrops = ignoreFailedDrops__		setSqlScriptEncoding(sqlScriptEncoding)__	};construct,a,new,code,resource,database,populator,with,the,supplied,values,param,continue,on,error,flag,to,indicate,that,all,failures,in,sql,should,be,logged,but,not,cause,a,failure,param,ignore,failed,drops,flag,to,indicate,that,a,failed,sql,code,drop,statement,can,be,ignored,param,sql,script,encoding,the,encoding,for,the,supplied,sql,scripts,may,be,code,null,or,em,empty,em,to,indicate,platform,encoding,param,scripts,the,scripts,to,execute,to,initialize,or,clean,up,the,database,never,code,null,since,4,0,3;public,resource,database,populator,boolean,continue,on,error,boolean,ignore,failed,drops,string,sql,script,encoding,resource,scripts,this,scripts,this,continue,on,error,continue,on,error,this,ignore,failed,drops,ignore,failed,drops,set,sql,script,encoding,sql,script,encoding
ResourceDatabasePopulator -> private void splitSqlScript(String script, String delim, String commentPrefix, List<String> statements);1354725684;Split an SQL script into separate statements delimited by the provided delimiter_string. Each individual statement will be added to the provided {@code List}._<p>Within a statement, the provided {@code commentPrefix} will be honored__any text beginning with the comment prefix and extending to the end of the_line will be omitted from the statement. In addition, multiple adjacent_whitespace characters will be collapsed into a single space._@param script the SQL script_@param delim character delimiting each statement (typically a '_' character)_@param commentPrefix the prefix that identifies line comments in the SQL script &mdash_ typically "--"_@param statements the List that will contain the individual statements;private void splitSqlScript(String script, String delim, String commentPrefix, List<String> statements) {_		StringBuilder sb = new StringBuilder()__		boolean inLiteral = false__		boolean inEscape = false__		char[] content = script.toCharArray()__		for (int i = 0_ i < script.length()_ i++) {_			char c = content[i]__			if (inEscape) {_				inEscape = false__				sb.append(c)__				continue__			}_			_			if (c == '\\') {_				inEscape = true__				sb.append(c)__				continue__			}_			if (c == '\'') {_				inLiteral = !inLiteral__			}_			if (!inLiteral) {_				if (script.startsWith(delim, i)) {_					_					if (sb.length() > 0) {_						statements.add(sb.toString())__						sb = new StringBuilder()__					}_					i += delim.length() - 1__					continue__				}_				else if (script.startsWith(commentPrefix, i)) {_					_					int indexOfNextNewline = script.indexOf("\n", i)__					if (indexOfNextNewline > i) {_						i = indexOfNextNewline__						continue__					}_					else {_						_						_						break__					}_				}_				else if (c == ' ' || c == '\n' || c == '\t') {_					_					if (sb.length() > 0 && sb.charAt(sb.length() - 1) != ' ') {_						c = ' '__					}_					else {_						continue__					}_				}_			}_			sb.append(c)__		}_		if (StringUtils.hasText(sb)) {_			statements.add(sb.toString())__		}_	};split,an,sql,script,into,separate,statements,delimited,by,the,provided,delimiter,string,each,individual,statement,will,be,added,to,the,provided,code,list,p,within,a,statement,the,provided,code,comment,prefix,will,be,honored,any,text,beginning,with,the,comment,prefix,and,extending,to,the,end,of,the,line,will,be,omitted,from,the,statement,in,addition,multiple,adjacent,whitespace,characters,will,be,collapsed,into,a,single,space,param,script,the,sql,script,param,delim,character,delimiting,each,statement,typically,a,character,param,comment,prefix,the,prefix,that,identifies,line,comments,in,the,sql,script,mdash,typically,param,statements,the,list,that,will,contain,the,individual,statements;private,void,split,sql,script,string,script,string,delim,string,comment,prefix,list,string,statements,string,builder,sb,new,string,builder,boolean,in,literal,false,boolean,in,escape,false,char,content,script,to,char,array,for,int,i,0,i,script,length,i,char,c,content,i,if,in,escape,in,escape,false,sb,append,c,continue,if,c,in,escape,true,sb,append,c,continue,if,c,in,literal,in,literal,if,in,literal,if,script,starts,with,delim,i,if,sb,length,0,statements,add,sb,to,string,sb,new,string,builder,i,delim,length,1,continue,else,if,script,starts,with,comment,prefix,i,int,index,of,next,newline,script,index,of,n,i,if,index,of,next,newline,i,i,index,of,next,newline,continue,else,break,else,if,c,c,n,c,t,if,sb,length,0,sb,char,at,sb,length,1,c,else,continue,sb,append,c,if,string,utils,has,text,sb,statements,add,sb,to,string
ResourceDatabasePopulator -> private void splitSqlScript(String script, String delim, String commentPrefix, List<String> statements);1355351963;Split an SQL script into separate statements delimited by the provided delimiter_string. Each individual statement will be added to the provided {@code List}._<p>Within a statement, the provided {@code commentPrefix} will be honored__any text beginning with the comment prefix and extending to the end of the_line will be omitted from the statement. In addition, multiple adjacent_whitespace characters will be collapsed into a single space._@param script the SQL script_@param delim character delimiting each statement (typically a '_' character)_@param commentPrefix the prefix that identifies line comments in the SQL script &mdash_ typically "--"_@param statements the List that will contain the individual statements;private void splitSqlScript(String script, String delim, String commentPrefix, List<String> statements) {_		StringBuilder sb = new StringBuilder()__		boolean inLiteral = false__		boolean inEscape = false__		char[] content = script.toCharArray()__		for (int i = 0_ i < script.length()_ i++) {_			char c = content[i]__			if (inEscape) {_				inEscape = false__				sb.append(c)__				continue__			}_			_			if (c == '\\') {_				inEscape = true__				sb.append(c)__				continue__			}_			if (c == '\'') {_				inLiteral = !inLiteral__			}_			if (!inLiteral) {_				if (script.startsWith(delim, i)) {_					_					if (sb.length() > 0) {_						statements.add(sb.toString())__						sb = new StringBuilder()__					}_					i += delim.length() - 1__					continue__				}_				else if (script.startsWith(commentPrefix, i)) {_					_					int indexOfNextNewline = script.indexOf("\n", i)__					if (indexOfNextNewline > i) {_						i = indexOfNextNewline__						continue__					}_					else {_						_						_						break__					}_				}_				else if (c == ' ' || c == '\n' || c == '\t') {_					_					if (sb.length() > 0 && sb.charAt(sb.length() - 1) != ' ') {_						c = ' '__					}_					else {_						continue__					}_				}_			}_			sb.append(c)__		}_		if (StringUtils.hasText(sb)) {_			statements.add(sb.toString())__		}_	};split,an,sql,script,into,separate,statements,delimited,by,the,provided,delimiter,string,each,individual,statement,will,be,added,to,the,provided,code,list,p,within,a,statement,the,provided,code,comment,prefix,will,be,honored,any,text,beginning,with,the,comment,prefix,and,extending,to,the,end,of,the,line,will,be,omitted,from,the,statement,in,addition,multiple,adjacent,whitespace,characters,will,be,collapsed,into,a,single,space,param,script,the,sql,script,param,delim,character,delimiting,each,statement,typically,a,character,param,comment,prefix,the,prefix,that,identifies,line,comments,in,the,sql,script,mdash,typically,param,statements,the,list,that,will,contain,the,individual,statements;private,void,split,sql,script,string,script,string,delim,string,comment,prefix,list,string,statements,string,builder,sb,new,string,builder,boolean,in,literal,false,boolean,in,escape,false,char,content,script,to,char,array,for,int,i,0,i,script,length,i,char,c,content,i,if,in,escape,in,escape,false,sb,append,c,continue,if,c,in,escape,true,sb,append,c,continue,if,c,in,literal,in,literal,if,in,literal,if,script,starts,with,delim,i,if,sb,length,0,statements,add,sb,to,string,sb,new,string,builder,i,delim,length,1,continue,else,if,script,starts,with,comment,prefix,i,int,index,of,next,newline,script,index,of,n,i,if,index,of,next,newline,i,i,index,of,next,newline,continue,else,break,else,if,c,c,n,c,t,if,sb,length,0,sb,char,at,sb,length,1,c,else,continue,sb,append,c,if,string,utils,has,text,sb,statements,add,sb,to,string
ResourceDatabasePopulator -> private void splitSqlScript(String script, String delim, String commentPrefix, List<String> statements);1356735495;Split an SQL script into separate statements delimited by the provided delimiter_string. Each individual statement will be added to the provided {@code List}._<p>Within a statement, the provided {@code commentPrefix} will be honored__any text beginning with the comment prefix and extending to the end of the_line will be omitted from the statement. In addition, multiple adjacent_whitespace characters will be collapsed into a single space._@param script the SQL script_@param delim character delimiting each statement (typically a '_' character)_@param commentPrefix the prefix that identifies line comments in the SQL script &mdash_ typically "--"_@param statements the List that will contain the individual statements;private void splitSqlScript(String script, String delim, String commentPrefix, List<String> statements) {_		StringBuilder sb = new StringBuilder()__		boolean inLiteral = false__		boolean inEscape = false__		char[] content = script.toCharArray()__		for (int i = 0_ i < script.length()_ i++) {_			char c = content[i]__			if (inEscape) {_				inEscape = false__				sb.append(c)__				continue__			}_			_			if (c == '\\') {_				inEscape = true__				sb.append(c)__				continue__			}_			if (c == '\'') {_				inLiteral = !inLiteral__			}_			if (!inLiteral) {_				if (script.startsWith(delim, i)) {_					_					if (sb.length() > 0) {_						statements.add(sb.toString())__						sb = new StringBuilder()__					}_					i += delim.length() - 1__					continue__				}_				else if (script.startsWith(commentPrefix, i)) {_					_					int indexOfNextNewline = script.indexOf("\n", i)__					if (indexOfNextNewline > i) {_						i = indexOfNextNewline__						continue__					}_					else {_						_						_						break__					}_				}_				else if (c == ' ' || c == '\n' || c == '\t') {_					_					if (sb.length() > 0 && sb.charAt(sb.length() - 1) != ' ') {_						c = ' '__					}_					else {_						continue__					}_				}_			}_			sb.append(c)__		}_		if (StringUtils.hasText(sb)) {_			statements.add(sb.toString())__		}_	};split,an,sql,script,into,separate,statements,delimited,by,the,provided,delimiter,string,each,individual,statement,will,be,added,to,the,provided,code,list,p,within,a,statement,the,provided,code,comment,prefix,will,be,honored,any,text,beginning,with,the,comment,prefix,and,extending,to,the,end,of,the,line,will,be,omitted,from,the,statement,in,addition,multiple,adjacent,whitespace,characters,will,be,collapsed,into,a,single,space,param,script,the,sql,script,param,delim,character,delimiting,each,statement,typically,a,character,param,comment,prefix,the,prefix,that,identifies,line,comments,in,the,sql,script,mdash,typically,param,statements,the,list,that,will,contain,the,individual,statements;private,void,split,sql,script,string,script,string,delim,string,comment,prefix,list,string,statements,string,builder,sb,new,string,builder,boolean,in,literal,false,boolean,in,escape,false,char,content,script,to,char,array,for,int,i,0,i,script,length,i,char,c,content,i,if,in,escape,in,escape,false,sb,append,c,continue,if,c,in,escape,true,sb,append,c,continue,if,c,in,literal,in,literal,if,in,literal,if,script,starts,with,delim,i,if,sb,length,0,statements,add,sb,to,string,sb,new,string,builder,i,delim,length,1,continue,else,if,script,starts,with,comment,prefix,i,int,index,of,next,newline,script,index,of,n,i,if,index,of,next,newline,i,i,index,of,next,newline,continue,else,break,else,if,c,c,n,c,t,if,sb,length,0,sb,char,at,sb,length,1,c,else,continue,sb,append,c,if,string,utils,has,text,sb,statements,add,sb,to,string
ResourceDatabasePopulator -> private void splitSqlScript(String script, String delim, String commentPrefix, List<String> statements);1357119239;Split an SQL script into separate statements delimited by the provided delimiter_string. Each individual statement will be added to the provided {@code List}._<p>Within a statement, the provided {@code commentPrefix} will be honored__any text beginning with the comment prefix and extending to the end of the_line will be omitted from the statement. In addition, multiple adjacent_whitespace characters will be collapsed into a single space._@param script the SQL script_@param delim character delimiting each statement (typically a '_' character)_@param commentPrefix the prefix that identifies line comments in the SQL script &mdash_ typically "--"_@param statements the List that will contain the individual statements;private void splitSqlScript(String script, String delim, String commentPrefix, List<String> statements) {_		StringBuilder sb = new StringBuilder()__		boolean inLiteral = false__		boolean inEscape = false__		char[] content = script.toCharArray()__		for (int i = 0_ i < script.length()_ i++) {_			char c = content[i]__			if (inEscape) {_				inEscape = false__				sb.append(c)__				continue__			}_			_			if (c == '\\') {_				inEscape = true__				sb.append(c)__				continue__			}_			if (c == '\'') {_				inLiteral = !inLiteral__			}_			if (!inLiteral) {_				if (script.startsWith(delim, i)) {_					_					if (sb.length() > 0) {_						statements.add(sb.toString())__						sb = new StringBuilder()__					}_					i += delim.length() - 1__					continue__				}_				else if (script.startsWith(commentPrefix, i)) {_					_					int indexOfNextNewline = script.indexOf("\n", i)__					if (indexOfNextNewline > i) {_						i = indexOfNextNewline__						continue__					}_					else {_						_						_						break__					}_				}_				else if (c == ' ' || c == '\n' || c == '\t') {_					_					if (sb.length() > 0 && sb.charAt(sb.length() - 1) != ' ') {_						c = ' '__					}_					else {_						continue__					}_				}_			}_			sb.append(c)__		}_		if (StringUtils.hasText(sb)) {_			statements.add(sb.toString())__		}_	};split,an,sql,script,into,separate,statements,delimited,by,the,provided,delimiter,string,each,individual,statement,will,be,added,to,the,provided,code,list,p,within,a,statement,the,provided,code,comment,prefix,will,be,honored,any,text,beginning,with,the,comment,prefix,and,extending,to,the,end,of,the,line,will,be,omitted,from,the,statement,in,addition,multiple,adjacent,whitespace,characters,will,be,collapsed,into,a,single,space,param,script,the,sql,script,param,delim,character,delimiting,each,statement,typically,a,character,param,comment,prefix,the,prefix,that,identifies,line,comments,in,the,sql,script,mdash,typically,param,statements,the,list,that,will,contain,the,individual,statements;private,void,split,sql,script,string,script,string,delim,string,comment,prefix,list,string,statements,string,builder,sb,new,string,builder,boolean,in,literal,false,boolean,in,escape,false,char,content,script,to,char,array,for,int,i,0,i,script,length,i,char,c,content,i,if,in,escape,in,escape,false,sb,append,c,continue,if,c,in,escape,true,sb,append,c,continue,if,c,in,literal,in,literal,if,in,literal,if,script,starts,with,delim,i,if,sb,length,0,statements,add,sb,to,string,sb,new,string,builder,i,delim,length,1,continue,else,if,script,starts,with,comment,prefix,i,int,index,of,next,newline,script,index,of,n,i,if,index,of,next,newline,i,i,index,of,next,newline,continue,else,break,else,if,c,c,n,c,t,if,sb,length,0,sb,char,at,sb,length,1,c,else,continue,sb,append,c,if,string,utils,has,text,sb,statements,add,sb,to,string
ResourceDatabasePopulator -> private void splitSqlScript(String script, String delim, String commentPrefix, List<String> statements);1368482696;Split an SQL script into separate statements delimited by the provided delimiter_string. Each individual statement will be added to the provided {@code List}._<p>Within a statement, the provided {@code commentPrefix} will be honored__any text beginning with the comment prefix and extending to the end of the_line will be omitted from the statement. In addition, multiple adjacent_whitespace characters will be collapsed into a single space._@param script the SQL script_@param delim character delimiting each statement (typically a '_' character)_@param commentPrefix the prefix that identifies line comments in the SQL script &mdash_ typically "--"_@param statements the List that will contain the individual statements;private void splitSqlScript(String script, String delim, String commentPrefix, List<String> statements) {_		StringBuilder sb = new StringBuilder()__		boolean inLiteral = false__		boolean inEscape = false__		char[] content = script.toCharArray()__		for (int i = 0_ i < script.length()_ i++) {_			char c = content[i]__			if (inEscape) {_				inEscape = false__				sb.append(c)__				continue__			}_			_			if (c == '\\') {_				inEscape = true__				sb.append(c)__				continue__			}_			if (c == '\'') {_				inLiteral = !inLiteral__			}_			if (!inLiteral) {_				if (script.startsWith(delim, i)) {_					_					if (sb.length() > 0) {_						statements.add(sb.toString())__						sb = new StringBuilder()__					}_					i += delim.length() - 1__					continue__				}_				else if (script.startsWith(commentPrefix, i)) {_					_					int indexOfNextNewline = script.indexOf("\n", i)__					if (indexOfNextNewline > i) {_						i = indexOfNextNewline__						continue__					}_					else {_						_						_						break__					}_				}_				else if (c == ' ' || c == '\n' || c == '\t') {_					_					if (sb.length() > 0 && sb.charAt(sb.length() - 1) != ' ') {_						c = ' '__					}_					else {_						continue__					}_				}_			}_			sb.append(c)__		}_		if (StringUtils.hasText(sb)) {_			statements.add(sb.toString())__		}_	};split,an,sql,script,into,separate,statements,delimited,by,the,provided,delimiter,string,each,individual,statement,will,be,added,to,the,provided,code,list,p,within,a,statement,the,provided,code,comment,prefix,will,be,honored,any,text,beginning,with,the,comment,prefix,and,extending,to,the,end,of,the,line,will,be,omitted,from,the,statement,in,addition,multiple,adjacent,whitespace,characters,will,be,collapsed,into,a,single,space,param,script,the,sql,script,param,delim,character,delimiting,each,statement,typically,a,character,param,comment,prefix,the,prefix,that,identifies,line,comments,in,the,sql,script,mdash,typically,param,statements,the,list,that,will,contain,the,individual,statements;private,void,split,sql,script,string,script,string,delim,string,comment,prefix,list,string,statements,string,builder,sb,new,string,builder,boolean,in,literal,false,boolean,in,escape,false,char,content,script,to,char,array,for,int,i,0,i,script,length,i,char,c,content,i,if,in,escape,in,escape,false,sb,append,c,continue,if,c,in,escape,true,sb,append,c,continue,if,c,in,literal,in,literal,if,in,literal,if,script,starts,with,delim,i,if,sb,length,0,statements,add,sb,to,string,sb,new,string,builder,i,delim,length,1,continue,else,if,script,starts,with,comment,prefix,i,int,index,of,next,newline,script,index,of,n,i,if,index,of,next,newline,i,i,index,of,next,newline,continue,else,break,else,if,c,c,n,c,t,if,sb,length,0,sb,char,at,sb,length,1,c,else,continue,sb,append,c,if,string,utils,has,text,sb,statements,add,sb,to,string
ResourceDatabasePopulator -> private void splitSqlScript(String script, String delim, String commentPrefix, List<String> statements);1387832430;Split an SQL script into separate statements delimited by the provided delimiter_string. Each individual statement will be added to the provided {@code List}._<p>Within a statement, the provided {@code commentPrefix} will be honored__any text beginning with the comment prefix and extending to the end of the_line will be omitted from the statement. In addition, multiple adjacent_whitespace characters will be collapsed into a single space._@param script the SQL script_@param delim character delimiting each statement (typically a '_' character)_@param commentPrefix the prefix that identifies line comments in the SQL script &mdash_ typically "--"_@param statements the List that will contain the individual statements;private void splitSqlScript(String script, String delim, String commentPrefix, List<String> statements) {_		StringBuilder sb = new StringBuilder()__		boolean inLiteral = false__		boolean inEscape = false__		char[] content = script.toCharArray()__		for (int i = 0_ i < script.length()_ i++) {_			char c = content[i]__			if (inEscape) {_				inEscape = false__				sb.append(c)__				continue__			}_			_			if (c == '\\') {_				inEscape = true__				sb.append(c)__				continue__			}_			if (c == '\'') {_				inLiteral = !inLiteral__			}_			if (!inLiteral) {_				if (script.startsWith(delim, i)) {_					_					if (sb.length() > 0) {_						statements.add(sb.toString())__						sb = new StringBuilder()__					}_					i += delim.length() - 1__					continue__				}_				else if (script.startsWith(commentPrefix, i)) {_					_					int indexOfNextNewline = script.indexOf("\n", i)__					if (indexOfNextNewline > i) {_						i = indexOfNextNewline__						continue__					}_					else {_						_						_						break__					}_				}_				else if (c == ' ' || c == '\n' || c == '\t') {_					_					if (sb.length() > 0 && sb.charAt(sb.length() - 1) != ' ') {_						c = ' '__					}_					else {_						continue__					}_				}_			}_			sb.append(c)__		}_		if (StringUtils.hasText(sb)) {_			statements.add(sb.toString())__		}_	};split,an,sql,script,into,separate,statements,delimited,by,the,provided,delimiter,string,each,individual,statement,will,be,added,to,the,provided,code,list,p,within,a,statement,the,provided,code,comment,prefix,will,be,honored,any,text,beginning,with,the,comment,prefix,and,extending,to,the,end,of,the,line,will,be,omitted,from,the,statement,in,addition,multiple,adjacent,whitespace,characters,will,be,collapsed,into,a,single,space,param,script,the,sql,script,param,delim,character,delimiting,each,statement,typically,a,character,param,comment,prefix,the,prefix,that,identifies,line,comments,in,the,sql,script,mdash,typically,param,statements,the,list,that,will,contain,the,individual,statements;private,void,split,sql,script,string,script,string,delim,string,comment,prefix,list,string,statements,string,builder,sb,new,string,builder,boolean,in,literal,false,boolean,in,escape,false,char,content,script,to,char,array,for,int,i,0,i,script,length,i,char,c,content,i,if,in,escape,in,escape,false,sb,append,c,continue,if,c,in,escape,true,sb,append,c,continue,if,c,in,literal,in,literal,if,in,literal,if,script,starts,with,delim,i,if,sb,length,0,statements,add,sb,to,string,sb,new,string,builder,i,delim,length,1,continue,else,if,script,starts,with,comment,prefix,i,int,index,of,next,newline,script,index,of,n,i,if,index,of,next,newline,i,i,index,of,next,newline,continue,else,break,else,if,c,c,n,c,t,if,sb,length,0,sb,char,at,sb,length,1,c,else,continue,sb,append,c,if,string,utils,has,text,sb,statements,add,sb,to,string
ResourceDatabasePopulator -> public void setIgnoreFailedDrops(boolean ignoreFailedDrops);1328020251;Flag to indicate that a failed SQL <code>DROP</code> statement can be ignored._<p>This is useful for non-embedded databases whose SQL dialect does not support an_<code>IF EXISTS</code> clause in a <code>DROP</code>. The default is false so that if the_populator runs accidentally, it will fail fast when the script starts with a <code>DROP</code>.;public void setIgnoreFailedDrops(boolean ignoreFailedDrops) {_		this.ignoreFailedDrops = ignoreFailedDrops__	};flag,to,indicate,that,a,failed,sql,code,drop,code,statement,can,be,ignored,p,this,is,useful,for,non,embedded,databases,whose,sql,dialect,does,not,support,an,code,if,exists,code,clause,in,a,code,drop,code,the,default,is,false,so,that,if,the,populator,runs,accidentally,it,will,fail,fast,when,the,script,starts,with,a,code,drop,code;public,void,set,ignore,failed,drops,boolean,ignore,failed,drops,this,ignore,failed,drops,ignore,failed,drops
ResourceDatabasePopulator -> public void setIgnoreFailedDrops(boolean ignoreFailedDrops);1329142650;Flag to indicate that a failed SQL <code>DROP</code> statement can be ignored._<p>This is useful for non-embedded databases whose SQL dialect does not support an_<code>IF EXISTS</code> clause in a <code>DROP</code>. The default is false so that if the_populator runs accidentally, it will fail fast when the script starts with a <code>DROP</code>.;public void setIgnoreFailedDrops(boolean ignoreFailedDrops) {_		this.ignoreFailedDrops = ignoreFailedDrops__	};flag,to,indicate,that,a,failed,sql,code,drop,code,statement,can,be,ignored,p,this,is,useful,for,non,embedded,databases,whose,sql,dialect,does,not,support,an,code,if,exists,code,clause,in,a,code,drop,code,the,default,is,false,so,that,if,the,populator,runs,accidentally,it,will,fail,fast,when,the,script,starts,with,a,code,drop,code;public,void,set,ignore,failed,drops,boolean,ignore,failed,drops,this,ignore,failed,drops,ignore,failed,drops
ResourceDatabasePopulator -> public void setIgnoreFailedDrops(boolean ignoreFailedDrops);1347368808;Flag to indicate that a failed SQL <code>DROP</code> statement can be ignored._<p>This is useful for non-embedded databases whose SQL dialect does not support an_<code>IF EXISTS</code> clause in a <code>DROP</code>. The default is false so that if the_populator runs accidentally, it will fail fast when the script starts with a <code>DROP</code>.;public void setIgnoreFailedDrops(boolean ignoreFailedDrops) {_		this.ignoreFailedDrops = ignoreFailedDrops__	};flag,to,indicate,that,a,failed,sql,code,drop,code,statement,can,be,ignored,p,this,is,useful,for,non,embedded,databases,whose,sql,dialect,does,not,support,an,code,if,exists,code,clause,in,a,code,drop,code,the,default,is,false,so,that,if,the,populator,runs,accidentally,it,will,fail,fast,when,the,script,starts,with,a,code,drop,code;public,void,set,ignore,failed,drops,boolean,ignore,failed,drops,this,ignore,failed,drops,ignore,failed,drops
ResourceDatabasePopulator -> public void setIgnoreFailedDrops(boolean ignoreFailedDrops);1349904863;Flag to indicate that a failed SQL <code>DROP</code> statement can be ignored._<p>This is useful for non-embedded databases whose SQL dialect does not support an_<code>IF EXISTS</code> clause in a <code>DROP</code>. The default is false so that if the_populator runs accidentally, it will fail fast when the script starts with a <code>DROP</code>.;public void setIgnoreFailedDrops(boolean ignoreFailedDrops) {_		this.ignoreFailedDrops = ignoreFailedDrops__	};flag,to,indicate,that,a,failed,sql,code,drop,code,statement,can,be,ignored,p,this,is,useful,for,non,embedded,databases,whose,sql,dialect,does,not,support,an,code,if,exists,code,clause,in,a,code,drop,code,the,default,is,false,so,that,if,the,populator,runs,accidentally,it,will,fail,fast,when,the,script,starts,with,a,code,drop,code;public,void,set,ignore,failed,drops,boolean,ignore,failed,drops,this,ignore,failed,drops,ignore,failed,drops
ResourceDatabasePopulator -> public void setIgnoreFailedDrops(boolean ignoreFailedDrops);1352157731;Flag to indicate that a failed SQL {@code DROP} statement can be ignored._<p>This is useful for non-embedded databases whose SQL dialect does not support an_{@code IF EXISTS} clause in a {@code DROP}. The default is false so that if the_populator runs accidentally, it will fail fast when the script starts with a {@code DROP}.;public void setIgnoreFailedDrops(boolean ignoreFailedDrops) {_		this.ignoreFailedDrops = ignoreFailedDrops__	};flag,to,indicate,that,a,failed,sql,code,drop,statement,can,be,ignored,p,this,is,useful,for,non,embedded,databases,whose,sql,dialect,does,not,support,an,code,if,exists,clause,in,a,code,drop,the,default,is,false,so,that,if,the,populator,runs,accidentally,it,will,fail,fast,when,the,script,starts,with,a,code,drop;public,void,set,ignore,failed,drops,boolean,ignore,failed,drops,this,ignore,failed,drops,ignore,failed,drops
ResourceDatabasePopulator -> public void setIgnoreFailedDrops(boolean ignoreFailedDrops);1352158898;Flag to indicate that a failed SQL {@code DROP} statement can be ignored._<p>This is useful for non-embedded databases whose SQL dialect does not support an_{@code IF EXISTS} clause in a {@code DROP}. The default is false so that if the_populator runs accidentally, it will fail fast when the script starts with a {@code DROP}.;public void setIgnoreFailedDrops(boolean ignoreFailedDrops) {_		this.ignoreFailedDrops = ignoreFailedDrops__	};flag,to,indicate,that,a,failed,sql,code,drop,statement,can,be,ignored,p,this,is,useful,for,non,embedded,databases,whose,sql,dialect,does,not,support,an,code,if,exists,clause,in,a,code,drop,the,default,is,false,so,that,if,the,populator,runs,accidentally,it,will,fail,fast,when,the,script,starts,with,a,code,drop;public,void,set,ignore,failed,drops,boolean,ignore,failed,drops,this,ignore,failed,drops,ignore,failed,drops
ResourceDatabasePopulator -> public void setIgnoreFailedDrops(boolean ignoreFailedDrops);1354725684;Flag to indicate that a failed SQL {@code DROP} statement can be ignored._<p>This is useful for non-embedded databases whose SQL dialect does not support an_{@code IF EXISTS} clause in a {@code DROP}. The default is false so that if the_populator runs accidentally, it will fail fast when the script starts with a {@code DROP}.;public void setIgnoreFailedDrops(boolean ignoreFailedDrops) {_		this.ignoreFailedDrops = ignoreFailedDrops__	};flag,to,indicate,that,a,failed,sql,code,drop,statement,can,be,ignored,p,this,is,useful,for,non,embedded,databases,whose,sql,dialect,does,not,support,an,code,if,exists,clause,in,a,code,drop,the,default,is,false,so,that,if,the,populator,runs,accidentally,it,will,fail,fast,when,the,script,starts,with,a,code,drop;public,void,set,ignore,failed,drops,boolean,ignore,failed,drops,this,ignore,failed,drops,ignore,failed,drops
ResourceDatabasePopulator -> public void setIgnoreFailedDrops(boolean ignoreFailedDrops);1355351963;Flag to indicate that a failed SQL {@code DROP} statement can be ignored._<p>This is useful for non-embedded databases whose SQL dialect does not support an_{@code IF EXISTS} clause in a {@code DROP}. The default is false so that if the_populator runs accidentally, it will fail fast when the script starts with a {@code DROP}.;public void setIgnoreFailedDrops(boolean ignoreFailedDrops) {_		this.ignoreFailedDrops = ignoreFailedDrops__	};flag,to,indicate,that,a,failed,sql,code,drop,statement,can,be,ignored,p,this,is,useful,for,non,embedded,databases,whose,sql,dialect,does,not,support,an,code,if,exists,clause,in,a,code,drop,the,default,is,false,so,that,if,the,populator,runs,accidentally,it,will,fail,fast,when,the,script,starts,with,a,code,drop;public,void,set,ignore,failed,drops,boolean,ignore,failed,drops,this,ignore,failed,drops,ignore,failed,drops
ResourceDatabasePopulator -> public void setIgnoreFailedDrops(boolean ignoreFailedDrops);1356735495;Flag to indicate that a failed SQL {@code DROP} statement can be ignored._<p>This is useful for non-embedded databases whose SQL dialect does not support an_{@code IF EXISTS} clause in a {@code DROP}. The default is false so that if the_populator runs accidentally, it will fail fast when the script starts with a {@code DROP}.;public void setIgnoreFailedDrops(boolean ignoreFailedDrops) {_		this.ignoreFailedDrops = ignoreFailedDrops__	};flag,to,indicate,that,a,failed,sql,code,drop,statement,can,be,ignored,p,this,is,useful,for,non,embedded,databases,whose,sql,dialect,does,not,support,an,code,if,exists,clause,in,a,code,drop,the,default,is,false,so,that,if,the,populator,runs,accidentally,it,will,fail,fast,when,the,script,starts,with,a,code,drop;public,void,set,ignore,failed,drops,boolean,ignore,failed,drops,this,ignore,failed,drops,ignore,failed,drops
ResourceDatabasePopulator -> public void setIgnoreFailedDrops(boolean ignoreFailedDrops);1357119239;Flag to indicate that a failed SQL {@code DROP} statement can be ignored._<p>This is useful for non-embedded databases whose SQL dialect does not support an_{@code IF EXISTS} clause in a {@code DROP}. The default is false so that if the_populator runs accidentally, it will fail fast when the script starts with a {@code DROP}.;public void setIgnoreFailedDrops(boolean ignoreFailedDrops) {_		this.ignoreFailedDrops = ignoreFailedDrops__	};flag,to,indicate,that,a,failed,sql,code,drop,statement,can,be,ignored,p,this,is,useful,for,non,embedded,databases,whose,sql,dialect,does,not,support,an,code,if,exists,clause,in,a,code,drop,the,default,is,false,so,that,if,the,populator,runs,accidentally,it,will,fail,fast,when,the,script,starts,with,a,code,drop;public,void,set,ignore,failed,drops,boolean,ignore,failed,drops,this,ignore,failed,drops,ignore,failed,drops
ResourceDatabasePopulator -> public void setIgnoreFailedDrops(boolean ignoreFailedDrops);1368482696;Flag to indicate that a failed SQL {@code DROP} statement can be ignored._<p>This is useful for non-embedded databases whose SQL dialect does not support an_{@code IF EXISTS} clause in a {@code DROP}. The default is false so that if the_populator runs accidentally, it will fail fast when the script starts with a {@code DROP}.;public void setIgnoreFailedDrops(boolean ignoreFailedDrops) {_		this.ignoreFailedDrops = ignoreFailedDrops__	};flag,to,indicate,that,a,failed,sql,code,drop,statement,can,be,ignored,p,this,is,useful,for,non,embedded,databases,whose,sql,dialect,does,not,support,an,code,if,exists,clause,in,a,code,drop,the,default,is,false,so,that,if,the,populator,runs,accidentally,it,will,fail,fast,when,the,script,starts,with,a,code,drop;public,void,set,ignore,failed,drops,boolean,ignore,failed,drops,this,ignore,failed,drops,ignore,failed,drops
ResourceDatabasePopulator -> public void setIgnoreFailedDrops(boolean ignoreFailedDrops);1387832430;Flag to indicate that a failed SQL {@code DROP} statement can be ignored._<p>This is useful for non-embedded databases whose SQL dialect does not support an_{@code IF EXISTS} clause in a {@code DROP}. The default is false so that if the_populator runs accidentally, it will fail fast when the script starts with a {@code DROP}.;public void setIgnoreFailedDrops(boolean ignoreFailedDrops) {_		this.ignoreFailedDrops = ignoreFailedDrops__	};flag,to,indicate,that,a,failed,sql,code,drop,statement,can,be,ignored,p,this,is,useful,for,non,embedded,databases,whose,sql,dialect,does,not,support,an,code,if,exists,clause,in,a,code,drop,the,default,is,false,so,that,if,the,populator,runs,accidentally,it,will,fail,fast,when,the,script,starts,with,a,code,drop;public,void,set,ignore,failed,drops,boolean,ignore,failed,drops,this,ignore,failed,drops,ignore,failed,drops
ResourceDatabasePopulator -> public void setIgnoreFailedDrops(boolean ignoreFailedDrops);1394708749;Flag to indicate that a failed SQL {@code DROP} statement can be ignored._<p>This is useful for non-embedded databases whose SQL dialect does not support an_{@code IF EXISTS} clause in a {@code DROP} statement._<p>The default is {@code false} so that if the populator runs accidentally, it will_fail fast if the script starts with a {@code DROP} statement.;public void setIgnoreFailedDrops(boolean ignoreFailedDrops) {_		this.ignoreFailedDrops = ignoreFailedDrops__	};flag,to,indicate,that,a,failed,sql,code,drop,statement,can,be,ignored,p,this,is,useful,for,non,embedded,databases,whose,sql,dialect,does,not,support,an,code,if,exists,clause,in,a,code,drop,statement,p,the,default,is,code,false,so,that,if,the,populator,runs,accidentally,it,will,fail,fast,if,the,script,starts,with,a,code,drop,statement;public,void,set,ignore,failed,drops,boolean,ignore,failed,drops,this,ignore,failed,drops,ignore,failed,drops
ResourceDatabasePopulator -> public void setIgnoreFailedDrops(boolean ignoreFailedDrops);1394714705;Flag to indicate that a failed SQL {@code DROP} statement can be ignored._<p>This is useful for non-embedded databases whose SQL dialect does not support an_{@code IF EXISTS} clause in a {@code DROP} statement._<p>The default is {@code false} so that if the populator runs accidentally, it will_fail fast if the script starts with a {@code DROP} statement.;public void setIgnoreFailedDrops(boolean ignoreFailedDrops) {_		this.ignoreFailedDrops = ignoreFailedDrops__	};flag,to,indicate,that,a,failed,sql,code,drop,statement,can,be,ignored,p,this,is,useful,for,non,embedded,databases,whose,sql,dialect,does,not,support,an,code,if,exists,clause,in,a,code,drop,statement,p,the,default,is,code,false,so,that,if,the,populator,runs,accidentally,it,will,fail,fast,if,the,script,starts,with,a,code,drop,statement;public,void,set,ignore,failed,drops,boolean,ignore,failed,drops,this,ignore,failed,drops,ignore,failed,drops
ResourceDatabasePopulator -> public void setIgnoreFailedDrops(boolean ignoreFailedDrops);1394987641;Flag to indicate that a failed SQL {@code DROP} statement can be ignored._<p>This is useful for non-embedded databases whose SQL dialect does not support an_{@code IF EXISTS} clause in a {@code DROP} statement._<p>The default is {@code false} so that if the populator runs accidentally, it will_fail fast if the script starts with a {@code DROP} statement.;public void setIgnoreFailedDrops(boolean ignoreFailedDrops) {_		this.ignoreFailedDrops = ignoreFailedDrops__	};flag,to,indicate,that,a,failed,sql,code,drop,statement,can,be,ignored,p,this,is,useful,for,non,embedded,databases,whose,sql,dialect,does,not,support,an,code,if,exists,clause,in,a,code,drop,statement,p,the,default,is,code,false,so,that,if,the,populator,runs,accidentally,it,will,fail,fast,if,the,script,starts,with,a,code,drop,statement;public,void,set,ignore,failed,drops,boolean,ignore,failed,drops,this,ignore,failed,drops,ignore,failed,drops
ResourceDatabasePopulator -> public void setIgnoreFailedDrops(boolean ignoreFailedDrops);1395055592;Flag to indicate that a failed SQL {@code DROP} statement can be ignored._<p>This is useful for non-embedded databases whose SQL dialect does not support an_{@code IF EXISTS} clause in a {@code DROP} statement._<p>The default is {@code false} so that if the populator runs accidentally, it will_fail fast if the script starts with a {@code DROP} statement.;public void setIgnoreFailedDrops(boolean ignoreFailedDrops) {_		this.ignoreFailedDrops = ignoreFailedDrops__	};flag,to,indicate,that,a,failed,sql,code,drop,statement,can,be,ignored,p,this,is,useful,for,non,embedded,databases,whose,sql,dialect,does,not,support,an,code,if,exists,clause,in,a,code,drop,statement,p,the,default,is,code,false,so,that,if,the,populator,runs,accidentally,it,will,fail,fast,if,the,script,starts,with,a,code,drop,statement;public,void,set,ignore,failed,drops,boolean,ignore,failed,drops,this,ignore,failed,drops,ignore,failed,drops
ResourceDatabasePopulator -> public void setIgnoreFailedDrops(boolean ignoreFailedDrops);1395068709;Flag to indicate that a failed SQL {@code DROP} statement can be ignored._<p>This is useful for non-embedded databases whose SQL dialect does not support an_{@code IF EXISTS} clause in a {@code DROP} statement._<p>The default is {@code false} so that if the populator runs accidentally, it will_fail fast if the script starts with a {@code DROP} statement.;public void setIgnoreFailedDrops(boolean ignoreFailedDrops) {_		this.ignoreFailedDrops = ignoreFailedDrops__	};flag,to,indicate,that,a,failed,sql,code,drop,statement,can,be,ignored,p,this,is,useful,for,non,embedded,databases,whose,sql,dialect,does,not,support,an,code,if,exists,clause,in,a,code,drop,statement,p,the,default,is,code,false,so,that,if,the,populator,runs,accidentally,it,will,fail,fast,if,the,script,starts,with,a,code,drop,statement;public,void,set,ignore,failed,drops,boolean,ignore,failed,drops,this,ignore,failed,drops,ignore,failed,drops
ResourceDatabasePopulator -> public void setIgnoreFailedDrops(boolean ignoreFailedDrops);1395183391;Flag to indicate that a failed SQL {@code DROP} statement can be ignored._<p>This is useful for non-embedded databases whose SQL dialect does not support an_{@code IF EXISTS} clause in a {@code DROP} statement._<p>The default is {@code false} so that if the populator runs accidentally, it will_fail fast if the script starts with a {@code DROP} statement._@param ignoreFailedDrops {@code true} if failed drop statements should be ignored;public void setIgnoreFailedDrops(boolean ignoreFailedDrops) {_		this.ignoreFailedDrops = ignoreFailedDrops__	};flag,to,indicate,that,a,failed,sql,code,drop,statement,can,be,ignored,p,this,is,useful,for,non,embedded,databases,whose,sql,dialect,does,not,support,an,code,if,exists,clause,in,a,code,drop,statement,p,the,default,is,code,false,so,that,if,the,populator,runs,accidentally,it,will,fail,fast,if,the,script,starts,with,a,code,drop,statement,param,ignore,failed,drops,code,true,if,failed,drop,statements,should,be,ignored;public,void,set,ignore,failed,drops,boolean,ignore,failed,drops,this,ignore,failed,drops,ignore,failed,drops
ResourceDatabasePopulator -> public void setIgnoreFailedDrops(boolean ignoreFailedDrops);1396191708;Flag to indicate that a failed SQL {@code DROP} statement can be ignored._<p>This is useful for non-embedded databases whose SQL dialect does not support an_{@code IF EXISTS} clause in a {@code DROP} statement._<p>The default is {@code false} so that if the populator runs accidentally, it will_fail fast if the script starts with a {@code DROP} statement._@param ignoreFailedDrops {@code true} if failed drop statements should be ignored;public void setIgnoreFailedDrops(boolean ignoreFailedDrops) {_		this.ignoreFailedDrops = ignoreFailedDrops__	};flag,to,indicate,that,a,failed,sql,code,drop,statement,can,be,ignored,p,this,is,useful,for,non,embedded,databases,whose,sql,dialect,does,not,support,an,code,if,exists,clause,in,a,code,drop,statement,p,the,default,is,code,false,so,that,if,the,populator,runs,accidentally,it,will,fail,fast,if,the,script,starts,with,a,code,drop,statement,param,ignore,failed,drops,code,true,if,failed,drop,statements,should,be,ignored;public,void,set,ignore,failed,drops,boolean,ignore,failed,drops,this,ignore,failed,drops,ignore,failed,drops
ResourceDatabasePopulator -> public void setIgnoreFailedDrops(boolean ignoreFailedDrops);1397231067;Flag to indicate that a failed SQL {@code DROP} statement can be ignored._<p>This is useful for non-embedded databases whose SQL dialect does not support an_{@code IF EXISTS} clause in a {@code DROP} statement._<p>The default is {@code false} so that if the populator runs accidentally, it will_fail fast if the script starts with a {@code DROP} statement._@param ignoreFailedDrops {@code true} if failed drop statements should be ignored;public void setIgnoreFailedDrops(boolean ignoreFailedDrops) {_		this.ignoreFailedDrops = ignoreFailedDrops__	};flag,to,indicate,that,a,failed,sql,code,drop,statement,can,be,ignored,p,this,is,useful,for,non,embedded,databases,whose,sql,dialect,does,not,support,an,code,if,exists,clause,in,a,code,drop,statement,p,the,default,is,code,false,so,that,if,the,populator,runs,accidentally,it,will,fail,fast,if,the,script,starts,with,a,code,drop,statement,param,ignore,failed,drops,code,true,if,failed,drop,statements,should,be,ignored;public,void,set,ignore,failed,drops,boolean,ignore,failed,drops,this,ignore,failed,drops,ignore,failed,drops
ResourceDatabasePopulator -> public void setIgnoreFailedDrops(boolean ignoreFailedDrops);1397385067;Flag to indicate that a failed SQL {@code DROP} statement can be ignored._<p>This is useful for a non-embedded database whose SQL dialect does not_support an {@code IF EXISTS} clause in a {@code DROP} statement._<p>The default is {@code false} so that if the populator runs accidentally, it will_fail fast if a script starts with a {@code DROP} statement._@param ignoreFailedDrops {@code true} if failed drop statements should be ignored;public void setIgnoreFailedDrops(boolean ignoreFailedDrops) {_		this.ignoreFailedDrops = ignoreFailedDrops__	};flag,to,indicate,that,a,failed,sql,code,drop,statement,can,be,ignored,p,this,is,useful,for,a,non,embedded,database,whose,sql,dialect,does,not,support,an,code,if,exists,clause,in,a,code,drop,statement,p,the,default,is,code,false,so,that,if,the,populator,runs,accidentally,it,will,fail,fast,if,a,script,starts,with,a,code,drop,statement,param,ignore,failed,drops,code,true,if,failed,drop,statements,should,be,ignored;public,void,set,ignore,failed,drops,boolean,ignore,failed,drops,this,ignore,failed,drops,ignore,failed,drops
ResourceDatabasePopulator -> public void setIgnoreFailedDrops(boolean ignoreFailedDrops);1397393502;Flag to indicate that a failed SQL {@code DROP} statement can be ignored._<p>This is useful for a non-embedded database whose SQL dialect does not_support an {@code IF EXISTS} clause in a {@code DROP} statement._<p>The default is {@code false} so that if the populator runs accidentally, it will_fail fast if a script starts with a {@code DROP} statement._@param ignoreFailedDrops {@code true} if failed drop statements should be ignored;public void setIgnoreFailedDrops(boolean ignoreFailedDrops) {_		this.ignoreFailedDrops = ignoreFailedDrops__	};flag,to,indicate,that,a,failed,sql,code,drop,statement,can,be,ignored,p,this,is,useful,for,a,non,embedded,database,whose,sql,dialect,does,not,support,an,code,if,exists,clause,in,a,code,drop,statement,p,the,default,is,code,false,so,that,if,the,populator,runs,accidentally,it,will,fail,fast,if,a,script,starts,with,a,code,drop,statement,param,ignore,failed,drops,code,true,if,failed,drop,statements,should,be,ignored;public,void,set,ignore,failed,drops,boolean,ignore,failed,drops,this,ignore,failed,drops,ignore,failed,drops
ResourceDatabasePopulator -> public void setIgnoreFailedDrops(boolean ignoreFailedDrops);1397394407;Flag to indicate that a failed SQL {@code DROP} statement can be ignored._<p>This is useful for a non-embedded database whose SQL dialect does not_support an {@code IF EXISTS} clause in a {@code DROP} statement._<p>The default is {@code false} so that if the populator runs accidentally, it will_fail fast if a script starts with a {@code DROP} statement._@param ignoreFailedDrops {@code true} if failed drop statements should be ignored;public void setIgnoreFailedDrops(boolean ignoreFailedDrops) {_		this.ignoreFailedDrops = ignoreFailedDrops__	};flag,to,indicate,that,a,failed,sql,code,drop,statement,can,be,ignored,p,this,is,useful,for,a,non,embedded,database,whose,sql,dialect,does,not,support,an,code,if,exists,clause,in,a,code,drop,statement,p,the,default,is,code,false,so,that,if,the,populator,runs,accidentally,it,will,fail,fast,if,a,script,starts,with,a,code,drop,statement,param,ignore,failed,drops,code,true,if,failed,drop,statements,should,be,ignored;public,void,set,ignore,failed,drops,boolean,ignore,failed,drops,this,ignore,failed,drops,ignore,failed,drops
ResourceDatabasePopulator -> public void setIgnoreFailedDrops(boolean ignoreFailedDrops);1401991965;Flag to indicate that a failed SQL {@code DROP} statement can be ignored._<p>This is useful for a non-embedded database whose SQL dialect does not_support an {@code IF EXISTS} clause in a {@code DROP} statement._<p>The default is {@code false} so that if the populator runs accidentally, it will_fail fast if a script starts with a {@code DROP} statement._@param ignoreFailedDrops {@code true} if failed drop statements should be ignored;public void setIgnoreFailedDrops(boolean ignoreFailedDrops) {_		this.ignoreFailedDrops = ignoreFailedDrops__	};flag,to,indicate,that,a,failed,sql,code,drop,statement,can,be,ignored,p,this,is,useful,for,a,non,embedded,database,whose,sql,dialect,does,not,support,an,code,if,exists,clause,in,a,code,drop,statement,p,the,default,is,code,false,so,that,if,the,populator,runs,accidentally,it,will,fail,fast,if,a,script,starts,with,a,code,drop,statement,param,ignore,failed,drops,code,true,if,failed,drop,statements,should,be,ignored;public,void,set,ignore,failed,drops,boolean,ignore,failed,drops,this,ignore,failed,drops,ignore,failed,drops
ResourceDatabasePopulator -> public void setIgnoreFailedDrops(boolean ignoreFailedDrops);1402143225;Flag to indicate that a failed SQL {@code DROP} statement can be ignored._<p>This is useful for a non-embedded database whose SQL dialect does not_support an {@code IF EXISTS} clause in a {@code DROP} statement._<p>The default is {@code false} so that if the populator runs accidentally, it will_fail fast if a script starts with a {@code DROP} statement._@param ignoreFailedDrops {@code true} if failed drop statements should be ignored;public void setIgnoreFailedDrops(boolean ignoreFailedDrops) {_		this.ignoreFailedDrops = ignoreFailedDrops__	};flag,to,indicate,that,a,failed,sql,code,drop,statement,can,be,ignored,p,this,is,useful,for,a,non,embedded,database,whose,sql,dialect,does,not,support,an,code,if,exists,clause,in,a,code,drop,statement,p,the,default,is,code,false,so,that,if,the,populator,runs,accidentally,it,will,fail,fast,if,a,script,starts,with,a,code,drop,statement,param,ignore,failed,drops,code,true,if,failed,drop,statements,should,be,ignored;public,void,set,ignore,failed,drops,boolean,ignore,failed,drops,this,ignore,failed,drops,ignore,failed,drops
ResourceDatabasePopulator -> public void setIgnoreFailedDrops(boolean ignoreFailedDrops);1413848647;Flag to indicate that a failed SQL {@code DROP} statement can be ignored._<p>This is useful for a non-embedded database whose SQL dialect does not_support an {@code IF EXISTS} clause in a {@code DROP} statement._<p>The default is {@code false} so that if the populator runs accidentally, it will_fail fast if a script starts with a {@code DROP} statement._@param ignoreFailedDrops {@code true} if failed drop statements should be ignored;public void setIgnoreFailedDrops(boolean ignoreFailedDrops) {_		this.ignoreFailedDrops = ignoreFailedDrops__	};flag,to,indicate,that,a,failed,sql,code,drop,statement,can,be,ignored,p,this,is,useful,for,a,non,embedded,database,whose,sql,dialect,does,not,support,an,code,if,exists,clause,in,a,code,drop,statement,p,the,default,is,code,false,so,that,if,the,populator,runs,accidentally,it,will,fail,fast,if,a,script,starts,with,a,code,drop,statement,param,ignore,failed,drops,code,true,if,failed,drop,statements,should,be,ignored;public,void,set,ignore,failed,drops,boolean,ignore,failed,drops,this,ignore,failed,drops,ignore,failed,drops
ResourceDatabasePopulator -> public void setIgnoreFailedDrops(boolean ignoreFailedDrops);1455813442;Flag to indicate that a failed SQL {@code DROP} statement can be ignored._<p>This is useful for a non-embedded database whose SQL dialect does not_support an {@code IF EXISTS} clause in a {@code DROP} statement._<p>The default is {@code false} so that if the populator runs accidentally, it will_fail fast if a script starts with a {@code DROP} statement._@param ignoreFailedDrops {@code true} if failed drop statements should be ignored;public void setIgnoreFailedDrops(boolean ignoreFailedDrops) {_		this.ignoreFailedDrops = ignoreFailedDrops__	};flag,to,indicate,that,a,failed,sql,code,drop,statement,can,be,ignored,p,this,is,useful,for,a,non,embedded,database,whose,sql,dialect,does,not,support,an,code,if,exists,clause,in,a,code,drop,statement,p,the,default,is,code,false,so,that,if,the,populator,runs,accidentally,it,will,fail,fast,if,a,script,starts,with,a,code,drop,statement,param,ignore,failed,drops,code,true,if,failed,drop,statements,should,be,ignored;public,void,set,ignore,failed,drops,boolean,ignore,failed,drops,this,ignore,failed,drops,ignore,failed,drops
ResourceDatabasePopulator -> public void setIgnoreFailedDrops(boolean ignoreFailedDrops);1467730834;Flag to indicate that a failed SQL {@code DROP} statement can be ignored._<p>This is useful for a non-embedded database whose SQL dialect does not_support an {@code IF EXISTS} clause in a {@code DROP} statement._<p>The default is {@code false} so that if the populator runs accidentally, it will_fail fast if a script starts with a {@code DROP} statement._@param ignoreFailedDrops {@code true} if failed drop statements should be ignored;public void setIgnoreFailedDrops(boolean ignoreFailedDrops) {_		this.ignoreFailedDrops = ignoreFailedDrops__	};flag,to,indicate,that,a,failed,sql,code,drop,statement,can,be,ignored,p,this,is,useful,for,a,non,embedded,database,whose,sql,dialect,does,not,support,an,code,if,exists,clause,in,a,code,drop,statement,p,the,default,is,code,false,so,that,if,the,populator,runs,accidentally,it,will,fail,fast,if,a,script,starts,with,a,code,drop,statement,param,ignore,failed,drops,code,true,if,failed,drop,statements,should,be,ignored;public,void,set,ignore,failed,drops,boolean,ignore,failed,drops,this,ignore,failed,drops,ignore,failed,drops
ResourceDatabasePopulator -> public void setIgnoreFailedDrops(boolean ignoreFailedDrops);1477691361;Flag to indicate that a failed SQL {@code DROP} statement can be ignored._<p>This is useful for a non-embedded database whose SQL dialect does not_support an {@code IF EXISTS} clause in a {@code DROP} statement._<p>The default is {@code false} so that if the populator runs accidentally, it will_fail fast if a script starts with a {@code DROP} statement._@param ignoreFailedDrops {@code true} if failed drop statements should be ignored;public void setIgnoreFailedDrops(boolean ignoreFailedDrops) {_		this.ignoreFailedDrops = ignoreFailedDrops__	};flag,to,indicate,that,a,failed,sql,code,drop,statement,can,be,ignored,p,this,is,useful,for,a,non,embedded,database,whose,sql,dialect,does,not,support,an,code,if,exists,clause,in,a,code,drop,statement,p,the,default,is,code,false,so,that,if,the,populator,runs,accidentally,it,will,fail,fast,if,a,script,starts,with,a,code,drop,statement,param,ignore,failed,drops,code,true,if,failed,drop,statements,should,be,ignored;public,void,set,ignore,failed,drops,boolean,ignore,failed,drops,this,ignore,failed,drops,ignore,failed,drops
ResourceDatabasePopulator -> public void setIgnoreFailedDrops(boolean ignoreFailedDrops);1495868221;Flag to indicate that a failed SQL {@code DROP} statement can be ignored._<p>This is useful for a non-embedded database whose SQL dialect does not_support an {@code IF EXISTS} clause in a {@code DROP} statement._<p>The default is {@code false} so that if the populator runs accidentally, it will_fail fast if a script starts with a {@code DROP} statement._@param ignoreFailedDrops {@code true} if failed drop statements should be ignored;public void setIgnoreFailedDrops(boolean ignoreFailedDrops) {_		this.ignoreFailedDrops = ignoreFailedDrops__	};flag,to,indicate,that,a,failed,sql,code,drop,statement,can,be,ignored,p,this,is,useful,for,a,non,embedded,database,whose,sql,dialect,does,not,support,an,code,if,exists,clause,in,a,code,drop,statement,p,the,default,is,code,false,so,that,if,the,populator,runs,accidentally,it,will,fail,fast,if,a,script,starts,with,a,code,drop,statement,param,ignore,failed,drops,code,true,if,failed,drop,statements,should,be,ignored;public,void,set,ignore,failed,drops,boolean,ignore,failed,drops,this,ignore,failed,drops,ignore,failed,drops
ResourceDatabasePopulator -> public void setIgnoreFailedDrops(boolean ignoreFailedDrops);1498780456;Flag to indicate that a failed SQL {@code DROP} statement can be ignored._<p>This is useful for a non-embedded database whose SQL dialect does not_support an {@code IF EXISTS} clause in a {@code DROP} statement._<p>The default is {@code false} so that if the populator runs accidentally, it will_fail fast if a script starts with a {@code DROP} statement._@param ignoreFailedDrops {@code true} if failed drop statements should be ignored;public void setIgnoreFailedDrops(boolean ignoreFailedDrops) {_		this.ignoreFailedDrops = ignoreFailedDrops__	};flag,to,indicate,that,a,failed,sql,code,drop,statement,can,be,ignored,p,this,is,useful,for,a,non,embedded,database,whose,sql,dialect,does,not,support,an,code,if,exists,clause,in,a,code,drop,statement,p,the,default,is,code,false,so,that,if,the,populator,runs,accidentally,it,will,fail,fast,if,a,script,starts,with,a,code,drop,statement,param,ignore,failed,drops,code,true,if,failed,drop,statements,should,be,ignored;public,void,set,ignore,failed,drops,boolean,ignore,failed,drops,this,ignore,failed,drops,ignore,failed,drops
ResourceDatabasePopulator -> public void setIgnoreFailedDrops(boolean ignoreFailedDrops);1549646187;Flag to indicate that a failed SQL {@code DROP} statement can be ignored._<p>This is useful for a non-embedded database whose SQL dialect does not_support an {@code IF EXISTS} clause in a {@code DROP} statement._<p>The default is {@code false} so that if the populator runs accidentally, it will_fail fast if a script starts with a {@code DROP} statement._@param ignoreFailedDrops {@code true} if failed drop statements should be ignored;public void setIgnoreFailedDrops(boolean ignoreFailedDrops) {_		this.ignoreFailedDrops = ignoreFailedDrops__	};flag,to,indicate,that,a,failed,sql,code,drop,statement,can,be,ignored,p,this,is,useful,for,a,non,embedded,database,whose,sql,dialect,does,not,support,an,code,if,exists,clause,in,a,code,drop,statement,p,the,default,is,code,false,so,that,if,the,populator,runs,accidentally,it,will,fail,fast,if,a,script,starts,with,a,code,drop,statement,param,ignore,failed,drops,code,true,if,failed,drop,statements,should,be,ignored;public,void,set,ignore,failed,drops,boolean,ignore,failed,drops,this,ignore,failed,drops,ignore,failed,drops
ResourceDatabasePopulator -> public void setScripts(Resource... scripts);1387832430;Set the scripts to execute to populate the database._@param scripts the scripts to execute;public void setScripts(Resource... scripts) {_		this.scripts = Arrays.asList(scripts)__	};set,the,scripts,to,execute,to,populate,the,database,param,scripts,the,scripts,to,execute;public,void,set,scripts,resource,scripts,this,scripts,arrays,as,list,scripts
ResourceDatabasePopulator -> public void setScripts(Resource... scripts);1394708749;Set the scripts to execute to populate the database._@param scripts the scripts to execute;public void setScripts(Resource... scripts) {_		this.scripts = Arrays.asList(scripts)__	};set,the,scripts,to,execute,to,populate,the,database,param,scripts,the,scripts,to,execute;public,void,set,scripts,resource,scripts,this,scripts,arrays,as,list,scripts
ResourceDatabasePopulator -> public void setScripts(Resource... scripts);1394714705;Set the scripts to execute to populate the database._@param scripts the scripts to execute;public void setScripts(Resource... scripts) {_		this.scripts = Arrays.asList(scripts)__	};set,the,scripts,to,execute,to,populate,the,database,param,scripts,the,scripts,to,execute;public,void,set,scripts,resource,scripts,this,scripts,arrays,as,list,scripts
ResourceDatabasePopulator -> public void setScripts(Resource... scripts);1394987641;Set the scripts to execute to populate the database._@param scripts the scripts to execute;public void setScripts(Resource... scripts) {_		this.scripts = Arrays.asList(scripts)__	};set,the,scripts,to,execute,to,populate,the,database,param,scripts,the,scripts,to,execute;public,void,set,scripts,resource,scripts,this,scripts,arrays,as,list,scripts
ResourceDatabasePopulator -> public void setScripts(Resource... scripts);1395055592;Set the scripts to execute to populate the database._@param scripts the scripts to execute;public void setScripts(Resource... scripts) {_		this.scripts = Arrays.asList(scripts)__	};set,the,scripts,to,execute,to,populate,the,database,param,scripts,the,scripts,to,execute;public,void,set,scripts,resource,scripts,this,scripts,arrays,as,list,scripts
ResourceDatabasePopulator -> public void setScripts(Resource... scripts);1395068709;Set the scripts to execute to populate the database._@param scripts the scripts to execute;public void setScripts(Resource... scripts) {_		this.scripts = Arrays.asList(scripts)__	};set,the,scripts,to,execute,to,populate,the,database,param,scripts,the,scripts,to,execute;public,void,set,scripts,resource,scripts,this,scripts,arrays,as,list,scripts
ResourceDatabasePopulator -> public void setScripts(Resource... scripts);1395183391;Set the scripts to execute to initialize or populate the database,_replacing any previously added scripts._@param scripts the scripts to execute;public void setScripts(Resource... scripts) {_		this.scripts = Arrays.asList(scripts)__	};set,the,scripts,to,execute,to,initialize,or,populate,the,database,replacing,any,previously,added,scripts,param,scripts,the,scripts,to,execute;public,void,set,scripts,resource,scripts,this,scripts,arrays,as,list,scripts
ResourceDatabasePopulator -> public void setScripts(Resource... scripts);1396191708;Set the scripts to execute to initialize or populate the database,_replacing any previously added scripts._@param scripts the scripts to execute;public void setScripts(Resource... scripts) {_		this.scripts = Arrays.asList(scripts)__	};set,the,scripts,to,execute,to,initialize,or,populate,the,database,replacing,any,previously,added,scripts,param,scripts,the,scripts,to,execute;public,void,set,scripts,resource,scripts,this,scripts,arrays,as,list,scripts
ResourceDatabasePopulator -> public void setScripts(Resource... scripts);1397231067;Set the scripts to execute to initialize or populate the database,_replacing any previously added scripts._@param scripts the scripts to execute;public void setScripts(Resource... scripts) {_		this.scripts = Arrays.asList(scripts)__	};set,the,scripts,to,execute,to,initialize,or,populate,the,database,replacing,any,previously,added,scripts,param,scripts,the,scripts,to,execute;public,void,set,scripts,resource,scripts,this,scripts,arrays,as,list,scripts
ResourceDatabasePopulator -> public void setScripts(Resource... scripts);1397385067;Set the scripts to execute to initialize or populate the database,_replacing any previously added scripts._@param scripts the scripts to execute;public void setScripts(Resource... scripts) {_		this.scripts = Arrays.asList(scripts)__	};set,the,scripts,to,execute,to,initialize,or,populate,the,database,replacing,any,previously,added,scripts,param,scripts,the,scripts,to,execute;public,void,set,scripts,resource,scripts,this,scripts,arrays,as,list,scripts
ResourceDatabasePopulator -> public void setScripts(Resource... scripts);1397393502;Set the scripts to execute to initialize or populate the database,_replacing any previously added scripts._@param scripts the scripts to execute_ never {@code null};public void setScripts(Resource... scripts) {_		assertContentsOfScriptArray(scripts)__		this.scripts = Arrays.asList(scripts)__	};set,the,scripts,to,execute,to,initialize,or,populate,the,database,replacing,any,previously,added,scripts,param,scripts,the,scripts,to,execute,never,code,null;public,void,set,scripts,resource,scripts,assert,contents,of,script,array,scripts,this,scripts,arrays,as,list,scripts
ResourceDatabasePopulator -> public void setScripts(Resource... scripts);1397394407;Set the scripts to execute to initialize or populate the database,_replacing any previously added scripts._@param scripts the scripts to execute_ never {@code null};public void setScripts(Resource... scripts) {_		assertContentsOfScriptArray(scripts)__		_		this.scripts = new ArrayList<Resource>(Arrays.asList(scripts))__	};set,the,scripts,to,execute,to,initialize,or,populate,the,database,replacing,any,previously,added,scripts,param,scripts,the,scripts,to,execute,never,code,null;public,void,set,scripts,resource,scripts,assert,contents,of,script,array,scripts,this,scripts,new,array,list,resource,arrays,as,list,scripts
ResourceDatabasePopulator -> public void setScripts(Resource... scripts);1401991965;Set the scripts to execute to initialize or populate the database,_replacing any previously added scripts._@param scripts the scripts to execute_ never {@code null};public void setScripts(Resource... scripts) {_		assertContentsOfScriptArray(scripts)__		_		this.scripts = new ArrayList<Resource>(Arrays.asList(scripts))__	};set,the,scripts,to,execute,to,initialize,or,populate,the,database,replacing,any,previously,added,scripts,param,scripts,the,scripts,to,execute,never,code,null;public,void,set,scripts,resource,scripts,assert,contents,of,script,array,scripts,this,scripts,new,array,list,resource,arrays,as,list,scripts
ResourceDatabasePopulator -> public void setScripts(Resource... scripts);1402143225;Set the scripts to execute to initialize or clean up the database,_replacing any previously added scripts._@param scripts the scripts to execute_ never {@code null};public void setScripts(Resource... scripts) {_		assertContentsOfScriptArray(scripts)__		_		this.scripts = new ArrayList<Resource>(Arrays.asList(scripts))__	};set,the,scripts,to,execute,to,initialize,or,clean,up,the,database,replacing,any,previously,added,scripts,param,scripts,the,scripts,to,execute,never,code,null;public,void,set,scripts,resource,scripts,assert,contents,of,script,array,scripts,this,scripts,new,array,list,resource,arrays,as,list,scripts
ResourceDatabasePopulator -> public void setScripts(Resource... scripts);1413848647;Set the scripts to execute to initialize or clean up the database,_replacing any previously added scripts._@param scripts the scripts to execute_ never {@code null};public void setScripts(Resource... scripts) {_		assertContentsOfScriptArray(scripts)__		_		this.scripts = new ArrayList<Resource>(Arrays.asList(scripts))__	};set,the,scripts,to,execute,to,initialize,or,clean,up,the,database,replacing,any,previously,added,scripts,param,scripts,the,scripts,to,execute,never,code,null;public,void,set,scripts,resource,scripts,assert,contents,of,script,array,scripts,this,scripts,new,array,list,resource,arrays,as,list,scripts
ResourceDatabasePopulator -> public void setScripts(Resource... scripts);1455813442;Set the scripts to execute to initialize or clean up the database,_replacing any previously added scripts._@param scripts the scripts to execute (never {@code null});public void setScripts(Resource... scripts) {_		assertContentsOfScriptArray(scripts)__		_		this.scripts = new ArrayList<Resource>(Arrays.asList(scripts))__	};set,the,scripts,to,execute,to,initialize,or,clean,up,the,database,replacing,any,previously,added,scripts,param,scripts,the,scripts,to,execute,never,code,null;public,void,set,scripts,resource,scripts,assert,contents,of,script,array,scripts,this,scripts,new,array,list,resource,arrays,as,list,scripts
ResourceDatabasePopulator -> public void setScripts(Resource... scripts);1467730834;Set the scripts to execute to initialize or clean up the database,_replacing any previously added scripts._@param scripts the scripts to execute (never {@code null});public void setScripts(Resource... scripts) {_		assertContentsOfScriptArray(scripts)__		_		this.scripts = new ArrayList<>(Arrays.asList(scripts))__	};set,the,scripts,to,execute,to,initialize,or,clean,up,the,database,replacing,any,previously,added,scripts,param,scripts,the,scripts,to,execute,never,code,null;public,void,set,scripts,resource,scripts,assert,contents,of,script,array,scripts,this,scripts,new,array,list,arrays,as,list,scripts
ResourceDatabasePopulator -> public void setScripts(Resource... scripts);1477691361;Set the scripts to execute to initialize or clean up the database,_replacing any previously added scripts._@param scripts the scripts to execute (never {@code null});public void setScripts(Resource... scripts) {_		assertContentsOfScriptArray(scripts)__		_		this.scripts = new ArrayList<>(Arrays.asList(scripts))__	};set,the,scripts,to,execute,to,initialize,or,clean,up,the,database,replacing,any,previously,added,scripts,param,scripts,the,scripts,to,execute,never,code,null;public,void,set,scripts,resource,scripts,assert,contents,of,script,array,scripts,this,scripts,new,array,list,arrays,as,list,scripts
ResourceDatabasePopulator -> public void setScripts(Resource... scripts);1495868221;Set the scripts to execute to initialize or clean up the database,_replacing any previously added scripts._@param scripts the scripts to execute (never {@code null});public void setScripts(Resource... scripts) {_		assertContentsOfScriptArray(scripts)__		_		this.scripts = new ArrayList<>(Arrays.asList(scripts))__	};set,the,scripts,to,execute,to,initialize,or,clean,up,the,database,replacing,any,previously,added,scripts,param,scripts,the,scripts,to,execute,never,code,null;public,void,set,scripts,resource,scripts,assert,contents,of,script,array,scripts,this,scripts,new,array,list,arrays,as,list,scripts
ResourceDatabasePopulator -> public void setScripts(Resource... scripts);1498780456;Set the scripts to execute to initialize or clean up the database,_replacing any previously added scripts._@param scripts the scripts to execute (never {@code null});public void setScripts(Resource... scripts) {_		assertContentsOfScriptArray(scripts)__		_		this.scripts = new ArrayList<>(Arrays.asList(scripts))__	};set,the,scripts,to,execute,to,initialize,or,clean,up,the,database,replacing,any,previously,added,scripts,param,scripts,the,scripts,to,execute,never,code,null;public,void,set,scripts,resource,scripts,assert,contents,of,script,array,scripts,this,scripts,new,array,list,arrays,as,list,scripts
ResourceDatabasePopulator -> public void setScripts(Resource... scripts);1549646187;Set the scripts to execute to initialize or clean up the database,_replacing any previously added scripts._@param scripts the scripts to execute (never {@code null});public void setScripts(Resource... scripts) {_		assertContentsOfScriptArray(scripts)__		_		this.scripts = new ArrayList<>(Arrays.asList(scripts))__	};set,the,scripts,to,execute,to,initialize,or,clean,up,the,database,replacing,any,previously,added,scripts,param,scripts,the,scripts,to,execute,never,code,null;public,void,set,scripts,resource,scripts,assert,contents,of,script,array,scripts,this,scripts,new,array,list,arrays,as,list,scripts
ResourceDatabasePopulator -> private void executeSqlScript(Connection connection, EncodedResource resource, boolean continueOnError, 			boolean ignoreFailedDrops) throws SQLException;1354725684;Execute the given SQL script._<p>The script will normally be loaded by classpath. There should be one statement_per line. Any {@link #setSeparator(String) statement separators} will be removed._<p><b>Do not use this method to execute DDL if you expect rollback.</b>_@param connection the JDBC Connection with which to perform JDBC operations_@param resource the resource (potentially associated with a specific encoding) to load the SQL script from_@param continueOnError whether or not to continue without throwing an exception in the event of an error_@param ignoreFailedDrops whether of not to continue in the event of specifically an error on a {@code DROP};private void executeSqlScript(Connection connection, EncodedResource resource, boolean continueOnError,_			boolean ignoreFailedDrops) throws SQLException {__		if (logger.isInfoEnabled()) {_			logger.info("Executing SQL script from " + resource)__		}_		long startTime = System.currentTimeMillis()__		List<String> statements = new LinkedList<String>()__		String script__		try {_			script = readScript(resource)__		}_		catch (IOException ex) {_			throw new CannotReadScriptException(resource, ex)__		}_		String delimiter = this.separator__		if (delimiter == null) {_			delimiter = DEFAULT_STATEMENT_SEPARATOR__			if (!containsSqlScriptDelimiters(script, delimiter)) {_				delimiter = "\n"__			}_		}_		splitSqlScript(script, delimiter, this.commentPrefix, statements)__		int lineNumber = 0__		Statement stmt = connection.createStatement()__		try {_			for (String statement : statements) {_				lineNumber++__				try {_					stmt.execute(statement)__					int rowsAffected = stmt.getUpdateCount()__					if (logger.isDebugEnabled()) {_						logger.debug(rowsAffected + " returned as updateCount for SQL: " + statement)__					}_				}_				catch (SQLException ex) {_					boolean dropStatement = StringUtils.startsWithIgnoreCase(statement.trim(), "drop")__					if (continueOnError || (dropStatement && ignoreFailedDrops)) {_						if (logger.isDebugEnabled()) {_							logger.debug("Failed to execute SQL script statement at line " + lineNumber_									+ " of resource " + resource + ": " + statement, ex)__						}_					}_					else {_						throw new ScriptStatementFailedException(statement, lineNumber, resource, ex)__					}_				}_			}_		}_		finally {_			try {_				stmt.close()__			}_			catch (Throwable ex) {_				logger.debug("Could not close JDBC Statement", ex)__			}_		}_		long elapsedTime = System.currentTimeMillis() - startTime__		if (logger.isInfoEnabled()) {_			logger.info("Done executing SQL script from " + resource + " in " + elapsedTime + " ms.")__		}_	};execute,the,given,sql,script,p,the,script,will,normally,be,loaded,by,classpath,there,should,be,one,statement,per,line,any,link,set,separator,string,statement,separators,will,be,removed,p,b,do,not,use,this,method,to,execute,ddl,if,you,expect,rollback,b,param,connection,the,jdbc,connection,with,which,to,perform,jdbc,operations,param,resource,the,resource,potentially,associated,with,a,specific,encoding,to,load,the,sql,script,from,param,continue,on,error,whether,or,not,to,continue,without,throwing,an,exception,in,the,event,of,an,error,param,ignore,failed,drops,whether,of,not,to,continue,in,the,event,of,specifically,an,error,on,a,code,drop;private,void,execute,sql,script,connection,connection,encoded,resource,resource,boolean,continue,on,error,boolean,ignore,failed,drops,throws,sqlexception,if,logger,is,info,enabled,logger,info,executing,sql,script,from,resource,long,start,time,system,current,time,millis,list,string,statements,new,linked,list,string,string,script,try,script,read,script,resource,catch,ioexception,ex,throw,new,cannot,read,script,exception,resource,ex,string,delimiter,this,separator,if,delimiter,null,delimiter,if,contains,sql,script,delimiters,script,delimiter,delimiter,n,split,sql,script,script,delimiter,this,comment,prefix,statements,int,line,number,0,statement,stmt,connection,create,statement,try,for,string,statement,statements,line,number,try,stmt,execute,statement,int,rows,affected,stmt,get,update,count,if,logger,is,debug,enabled,logger,debug,rows,affected,returned,as,update,count,for,sql,statement,catch,sqlexception,ex,boolean,drop,statement,string,utils,starts,with,ignore,case,statement,trim,drop,if,continue,on,error,drop,statement,ignore,failed,drops,if,logger,is,debug,enabled,logger,debug,failed,to,execute,sql,script,statement,at,line,line,number,of,resource,resource,statement,ex,else,throw,new,script,statement,failed,exception,statement,line,number,resource,ex,finally,try,stmt,close,catch,throwable,ex,logger,debug,could,not,close,jdbc,statement,ex,long,elapsed,time,system,current,time,millis,start,time,if,logger,is,info,enabled,logger,info,done,executing,sql,script,from,resource,in,elapsed,time,ms
ResourceDatabasePopulator -> private void executeSqlScript(Connection connection, EncodedResource resource, boolean continueOnError, 			boolean ignoreFailedDrops) throws SQLException;1355351963;Execute the given SQL script._<p>The script will normally be loaded by classpath. There should be one statement_per line. Any {@link #setSeparator(String) statement separators} will be removed._<p><b>Do not use this method to execute DDL if you expect rollback.</b>_@param connection the JDBC Connection with which to perform JDBC operations_@param resource the resource (potentially associated with a specific encoding) to load the SQL script from_@param continueOnError whether or not to continue without throwing an exception in the event of an error_@param ignoreFailedDrops whether of not to continue in the event of specifically an error on a {@code DROP};private void executeSqlScript(Connection connection, EncodedResource resource, boolean continueOnError,_			boolean ignoreFailedDrops) throws SQLException {__		if (logger.isInfoEnabled()) {_			logger.info("Executing SQL script from " + resource)__		}_		long startTime = System.currentTimeMillis()__		List<String> statements = new LinkedList<String>()__		String script__		try {_			script = readScript(resource)__		}_		catch (IOException ex) {_			throw new CannotReadScriptException(resource, ex)__		}_		String delimiter = this.separator__		if (delimiter == null) {_			delimiter = DEFAULT_STATEMENT_SEPARATOR__			if (!containsSqlScriptDelimiters(script, delimiter)) {_				delimiter = "\n"__			}_		}_		splitSqlScript(script, delimiter, this.commentPrefix, statements)__		int lineNumber = 0__		Statement stmt = connection.createStatement()__		try {_			for (String statement : statements) {_				lineNumber++__				try {_					stmt.execute(statement)__					int rowsAffected = stmt.getUpdateCount()__					if (logger.isDebugEnabled()) {_						logger.debug(rowsAffected + " returned as updateCount for SQL: " + statement)__					}_				}_				catch (SQLException ex) {_					boolean dropStatement = StringUtils.startsWithIgnoreCase(statement.trim(), "drop")__					if (continueOnError || (dropStatement && ignoreFailedDrops)) {_						if (logger.isDebugEnabled()) {_							logger.debug("Failed to execute SQL script statement at line " + lineNumber +_									" of resource " + resource + ": " + statement, ex)__						}_					}_					else {_						throw new ScriptStatementFailedException(statement, lineNumber, resource, ex)__					}_				}_			}_		}_		finally {_			try {_				stmt.close()__			}_			catch (Throwable ex) {_				logger.debug("Could not close JDBC Statement", ex)__			}_		}_		long elapsedTime = System.currentTimeMillis() - startTime__		if (logger.isInfoEnabled()) {_			logger.info("Done executing SQL script from " + resource + " in " + elapsedTime + " ms.")__		}_	};execute,the,given,sql,script,p,the,script,will,normally,be,loaded,by,classpath,there,should,be,one,statement,per,line,any,link,set,separator,string,statement,separators,will,be,removed,p,b,do,not,use,this,method,to,execute,ddl,if,you,expect,rollback,b,param,connection,the,jdbc,connection,with,which,to,perform,jdbc,operations,param,resource,the,resource,potentially,associated,with,a,specific,encoding,to,load,the,sql,script,from,param,continue,on,error,whether,or,not,to,continue,without,throwing,an,exception,in,the,event,of,an,error,param,ignore,failed,drops,whether,of,not,to,continue,in,the,event,of,specifically,an,error,on,a,code,drop;private,void,execute,sql,script,connection,connection,encoded,resource,resource,boolean,continue,on,error,boolean,ignore,failed,drops,throws,sqlexception,if,logger,is,info,enabled,logger,info,executing,sql,script,from,resource,long,start,time,system,current,time,millis,list,string,statements,new,linked,list,string,string,script,try,script,read,script,resource,catch,ioexception,ex,throw,new,cannot,read,script,exception,resource,ex,string,delimiter,this,separator,if,delimiter,null,delimiter,if,contains,sql,script,delimiters,script,delimiter,delimiter,n,split,sql,script,script,delimiter,this,comment,prefix,statements,int,line,number,0,statement,stmt,connection,create,statement,try,for,string,statement,statements,line,number,try,stmt,execute,statement,int,rows,affected,stmt,get,update,count,if,logger,is,debug,enabled,logger,debug,rows,affected,returned,as,update,count,for,sql,statement,catch,sqlexception,ex,boolean,drop,statement,string,utils,starts,with,ignore,case,statement,trim,drop,if,continue,on,error,drop,statement,ignore,failed,drops,if,logger,is,debug,enabled,logger,debug,failed,to,execute,sql,script,statement,at,line,line,number,of,resource,resource,statement,ex,else,throw,new,script,statement,failed,exception,statement,line,number,resource,ex,finally,try,stmt,close,catch,throwable,ex,logger,debug,could,not,close,jdbc,statement,ex,long,elapsed,time,system,current,time,millis,start,time,if,logger,is,info,enabled,logger,info,done,executing,sql,script,from,resource,in,elapsed,time,ms
ResourceDatabasePopulator -> private void executeSqlScript(Connection connection, EncodedResource resource, boolean continueOnError, 			boolean ignoreFailedDrops) throws SQLException;1356735495;Execute the given SQL script._<p>The script will normally be loaded by classpath. There should be one statement_per line. Any {@link #setSeparator(String) statement separators} will be removed._<p><b>Do not use this method to execute DDL if you expect rollback.</b>_@param connection the JDBC Connection with which to perform JDBC operations_@param resource the resource (potentially associated with a specific encoding) to load the SQL script from_@param continueOnError whether or not to continue without throwing an exception in the event of an error_@param ignoreFailedDrops whether of not to continue in the event of specifically an error on a {@code DROP};private void executeSqlScript(Connection connection, EncodedResource resource, boolean continueOnError,_			boolean ignoreFailedDrops) throws SQLException {__		if (logger.isInfoEnabled()) {_			logger.info("Executing SQL script from " + resource)__		}_		long startTime = System.currentTimeMillis()__		List<String> statements = new LinkedList<String>()__		String script__		try {_			script = readScript(resource)__		}_		catch (IOException ex) {_			throw new CannotReadScriptException(resource, ex)__		}_		String delimiter = this.separator__		if (delimiter == null) {_			delimiter = DEFAULT_STATEMENT_SEPARATOR__			if (!containsSqlScriptDelimiters(script, delimiter)) {_				delimiter = "\n"__			}_		}_		splitSqlScript(script, delimiter, this.commentPrefix, statements)__		int lineNumber = 0__		Statement stmt = connection.createStatement()__		try {_			for (String statement : statements) {_				lineNumber++__				try {_					stmt.execute(statement)__					int rowsAffected = stmt.getUpdateCount()__					if (logger.isDebugEnabled()) {_						logger.debug(rowsAffected + " returned as updateCount for SQL: " + statement)__					}_				}_				catch (SQLException ex) {_					boolean dropStatement = StringUtils.startsWithIgnoreCase(statement.trim(), "drop")__					if (continueOnError || (dropStatement && ignoreFailedDrops)) {_						if (logger.isDebugEnabled()) {_							logger.debug("Failed to execute SQL script statement at line " + lineNumber +_									" of resource " + resource + ": " + statement, ex)__						}_					}_					else {_						throw new ScriptStatementFailedException(statement, lineNumber, resource, ex)__					}_				}_			}_		}_		finally {_			try {_				stmt.close()__			}_			catch (Throwable ex) {_				logger.debug("Could not close JDBC Statement", ex)__			}_		}_		long elapsedTime = System.currentTimeMillis() - startTime__		if (logger.isInfoEnabled()) {_			logger.info("Done executing SQL script from " + resource + " in " + elapsedTime + " ms.")__		}_	};execute,the,given,sql,script,p,the,script,will,normally,be,loaded,by,classpath,there,should,be,one,statement,per,line,any,link,set,separator,string,statement,separators,will,be,removed,p,b,do,not,use,this,method,to,execute,ddl,if,you,expect,rollback,b,param,connection,the,jdbc,connection,with,which,to,perform,jdbc,operations,param,resource,the,resource,potentially,associated,with,a,specific,encoding,to,load,the,sql,script,from,param,continue,on,error,whether,or,not,to,continue,without,throwing,an,exception,in,the,event,of,an,error,param,ignore,failed,drops,whether,of,not,to,continue,in,the,event,of,specifically,an,error,on,a,code,drop;private,void,execute,sql,script,connection,connection,encoded,resource,resource,boolean,continue,on,error,boolean,ignore,failed,drops,throws,sqlexception,if,logger,is,info,enabled,logger,info,executing,sql,script,from,resource,long,start,time,system,current,time,millis,list,string,statements,new,linked,list,string,string,script,try,script,read,script,resource,catch,ioexception,ex,throw,new,cannot,read,script,exception,resource,ex,string,delimiter,this,separator,if,delimiter,null,delimiter,if,contains,sql,script,delimiters,script,delimiter,delimiter,n,split,sql,script,script,delimiter,this,comment,prefix,statements,int,line,number,0,statement,stmt,connection,create,statement,try,for,string,statement,statements,line,number,try,stmt,execute,statement,int,rows,affected,stmt,get,update,count,if,logger,is,debug,enabled,logger,debug,rows,affected,returned,as,update,count,for,sql,statement,catch,sqlexception,ex,boolean,drop,statement,string,utils,starts,with,ignore,case,statement,trim,drop,if,continue,on,error,drop,statement,ignore,failed,drops,if,logger,is,debug,enabled,logger,debug,failed,to,execute,sql,script,statement,at,line,line,number,of,resource,resource,statement,ex,else,throw,new,script,statement,failed,exception,statement,line,number,resource,ex,finally,try,stmt,close,catch,throwable,ex,logger,debug,could,not,close,jdbc,statement,ex,long,elapsed,time,system,current,time,millis,start,time,if,logger,is,info,enabled,logger,info,done,executing,sql,script,from,resource,in,elapsed,time,ms
ResourceDatabasePopulator -> private void executeSqlScript(Connection connection, EncodedResource resource, boolean continueOnError, 			boolean ignoreFailedDrops) throws SQLException;1357119239;Execute the given SQL script._<p>The script will normally be loaded by classpath. There should be one statement_per line. Any {@link #setSeparator(String) statement separators} will be removed._<p><b>Do not use this method to execute DDL if you expect rollback.</b>_@param connection the JDBC Connection with which to perform JDBC operations_@param resource the resource (potentially associated with a specific encoding) to load the SQL script from_@param continueOnError whether or not to continue without throwing an exception in the event of an error_@param ignoreFailedDrops whether of not to continue in the event of specifically an error on a {@code DROP};private void executeSqlScript(Connection connection, EncodedResource resource, boolean continueOnError,_			boolean ignoreFailedDrops) throws SQLException {__		if (logger.isInfoEnabled()) {_			logger.info("Executing SQL script from " + resource)__		}_		long startTime = System.currentTimeMillis()__		List<String> statements = new LinkedList<String>()__		String script__		try {_			script = readScript(resource)__		}_		catch (IOException ex) {_			throw new CannotReadScriptException(resource, ex)__		}_		String delimiter = this.separator__		if (delimiter == null) {_			delimiter = DEFAULT_STATEMENT_SEPARATOR__			if (!containsSqlScriptDelimiters(script, delimiter)) {_				delimiter = "\n"__			}_		}_		splitSqlScript(script, delimiter, this.commentPrefix, statements)__		int lineNumber = 0__		Statement stmt = connection.createStatement()__		try {_			for (String statement : statements) {_				lineNumber++__				try {_					stmt.execute(statement)__					int rowsAffected = stmt.getUpdateCount()__					if (logger.isDebugEnabled()) {_						logger.debug(rowsAffected + " returned as updateCount for SQL: " + statement)__					}_				}_				catch (SQLException ex) {_					boolean dropStatement = StringUtils.startsWithIgnoreCase(statement.trim(), "drop")__					if (continueOnError || (dropStatement && ignoreFailedDrops)) {_						if (logger.isDebugEnabled()) {_							logger.debug("Failed to execute SQL script statement at line " + lineNumber +_									" of resource " + resource + ": " + statement, ex)__						}_					}_					else {_						throw new ScriptStatementFailedException(statement, lineNumber, resource, ex)__					}_				}_			}_		}_		finally {_			try {_				stmt.close()__			}_			catch (Throwable ex) {_				logger.debug("Could not close JDBC Statement", ex)__			}_		}_		long elapsedTime = System.currentTimeMillis() - startTime__		if (logger.isInfoEnabled()) {_			logger.info("Done executing SQL script from " + resource + " in " + elapsedTime + " ms.")__		}_	};execute,the,given,sql,script,p,the,script,will,normally,be,loaded,by,classpath,there,should,be,one,statement,per,line,any,link,set,separator,string,statement,separators,will,be,removed,p,b,do,not,use,this,method,to,execute,ddl,if,you,expect,rollback,b,param,connection,the,jdbc,connection,with,which,to,perform,jdbc,operations,param,resource,the,resource,potentially,associated,with,a,specific,encoding,to,load,the,sql,script,from,param,continue,on,error,whether,or,not,to,continue,without,throwing,an,exception,in,the,event,of,an,error,param,ignore,failed,drops,whether,of,not,to,continue,in,the,event,of,specifically,an,error,on,a,code,drop;private,void,execute,sql,script,connection,connection,encoded,resource,resource,boolean,continue,on,error,boolean,ignore,failed,drops,throws,sqlexception,if,logger,is,info,enabled,logger,info,executing,sql,script,from,resource,long,start,time,system,current,time,millis,list,string,statements,new,linked,list,string,string,script,try,script,read,script,resource,catch,ioexception,ex,throw,new,cannot,read,script,exception,resource,ex,string,delimiter,this,separator,if,delimiter,null,delimiter,if,contains,sql,script,delimiters,script,delimiter,delimiter,n,split,sql,script,script,delimiter,this,comment,prefix,statements,int,line,number,0,statement,stmt,connection,create,statement,try,for,string,statement,statements,line,number,try,stmt,execute,statement,int,rows,affected,stmt,get,update,count,if,logger,is,debug,enabled,logger,debug,rows,affected,returned,as,update,count,for,sql,statement,catch,sqlexception,ex,boolean,drop,statement,string,utils,starts,with,ignore,case,statement,trim,drop,if,continue,on,error,drop,statement,ignore,failed,drops,if,logger,is,debug,enabled,logger,debug,failed,to,execute,sql,script,statement,at,line,line,number,of,resource,resource,statement,ex,else,throw,new,script,statement,failed,exception,statement,line,number,resource,ex,finally,try,stmt,close,catch,throwable,ex,logger,debug,could,not,close,jdbc,statement,ex,long,elapsed,time,system,current,time,millis,start,time,if,logger,is,info,enabled,logger,info,done,executing,sql,script,from,resource,in,elapsed,time,ms
ResourceDatabasePopulator -> private void executeSqlScript(Connection connection, EncodedResource resource, boolean continueOnError, 			boolean ignoreFailedDrops) throws SQLException;1368482696;Execute the given SQL script._<p>The script will normally be loaded by classpath. There should be one statement_per line. Any {@link #setSeparator(String) statement separators} will be removed._<p><b>Do not use this method to execute DDL if you expect rollback.</b>_@param connection the JDBC Connection with which to perform JDBC operations_@param resource the resource (potentially associated with a specific encoding) to load the SQL script from_@param continueOnError whether or not to continue without throwing an exception in the event of an error_@param ignoreFailedDrops whether of not to continue in the event of specifically an error on a {@code DROP};private void executeSqlScript(Connection connection, EncodedResource resource, boolean continueOnError,_			boolean ignoreFailedDrops) throws SQLException {__		if (logger.isInfoEnabled()) {_			logger.info("Executing SQL script from " + resource)__		}_		long startTime = System.currentTimeMillis()__		List<String> statements = new LinkedList<String>()__		String script__		try {_			script = readScript(resource)__		}_		catch (IOException ex) {_			throw new CannotReadScriptException(resource, ex)__		}_		String delimiter = this.separator__		if (delimiter == null) {_			delimiter = DEFAULT_STATEMENT_SEPARATOR__			if (!containsSqlScriptDelimiters(script, delimiter)) {_				delimiter = "\n"__			}_		}_		splitSqlScript(script, delimiter, this.commentPrefix, statements)__		int lineNumber = 0__		Statement stmt = connection.createStatement()__		try {_			for (String statement : statements) {_				lineNumber++__				try {_					stmt.execute(statement)__					int rowsAffected = stmt.getUpdateCount()__					if (logger.isDebugEnabled()) {_						logger.debug(rowsAffected + " returned as updateCount for SQL: " + statement)__					}_				}_				catch (SQLException ex) {_					boolean dropStatement = StringUtils.startsWithIgnoreCase(statement.trim(), "drop")__					if (continueOnError || (dropStatement && ignoreFailedDrops)) {_						if (logger.isDebugEnabled()) {_							logger.debug("Failed to execute SQL script statement at line " + lineNumber +_									" of resource " + resource + ": " + statement, ex)__						}_					}_					else {_						throw new ScriptStatementFailedException(statement, lineNumber, resource, ex)__					}_				}_			}_		}_		finally {_			try {_				stmt.close()__			}_			catch (Throwable ex) {_				logger.debug("Could not close JDBC Statement", ex)__			}_		}_		long elapsedTime = System.currentTimeMillis() - startTime__		if (logger.isInfoEnabled()) {_			logger.info("Done executing SQL script from " + resource + " in " + elapsedTime + " ms.")__		}_	};execute,the,given,sql,script,p,the,script,will,normally,be,loaded,by,classpath,there,should,be,one,statement,per,line,any,link,set,separator,string,statement,separators,will,be,removed,p,b,do,not,use,this,method,to,execute,ddl,if,you,expect,rollback,b,param,connection,the,jdbc,connection,with,which,to,perform,jdbc,operations,param,resource,the,resource,potentially,associated,with,a,specific,encoding,to,load,the,sql,script,from,param,continue,on,error,whether,or,not,to,continue,without,throwing,an,exception,in,the,event,of,an,error,param,ignore,failed,drops,whether,of,not,to,continue,in,the,event,of,specifically,an,error,on,a,code,drop;private,void,execute,sql,script,connection,connection,encoded,resource,resource,boolean,continue,on,error,boolean,ignore,failed,drops,throws,sqlexception,if,logger,is,info,enabled,logger,info,executing,sql,script,from,resource,long,start,time,system,current,time,millis,list,string,statements,new,linked,list,string,string,script,try,script,read,script,resource,catch,ioexception,ex,throw,new,cannot,read,script,exception,resource,ex,string,delimiter,this,separator,if,delimiter,null,delimiter,if,contains,sql,script,delimiters,script,delimiter,delimiter,n,split,sql,script,script,delimiter,this,comment,prefix,statements,int,line,number,0,statement,stmt,connection,create,statement,try,for,string,statement,statements,line,number,try,stmt,execute,statement,int,rows,affected,stmt,get,update,count,if,logger,is,debug,enabled,logger,debug,rows,affected,returned,as,update,count,for,sql,statement,catch,sqlexception,ex,boolean,drop,statement,string,utils,starts,with,ignore,case,statement,trim,drop,if,continue,on,error,drop,statement,ignore,failed,drops,if,logger,is,debug,enabled,logger,debug,failed,to,execute,sql,script,statement,at,line,line,number,of,resource,resource,statement,ex,else,throw,new,script,statement,failed,exception,statement,line,number,resource,ex,finally,try,stmt,close,catch,throwable,ex,logger,debug,could,not,close,jdbc,statement,ex,long,elapsed,time,system,current,time,millis,start,time,if,logger,is,info,enabled,logger,info,done,executing,sql,script,from,resource,in,elapsed,time,ms
ResourceDatabasePopulator -> private void executeSqlScript(Connection connection, EncodedResource resource, boolean continueOnError, 			boolean ignoreFailedDrops) throws SQLException;1387832430;Execute the given SQL script._<p>The script will normally be loaded by classpath. There should be one statement_per line. Any {@link #setSeparator(String) statement separators} will be removed._<p><b>Do not use this method to execute DDL if you expect rollback.</b>_@param connection the JDBC Connection with which to perform JDBC operations_@param resource the resource (potentially associated with a specific encoding) to load the SQL script from_@param continueOnError whether or not to continue without throwing an exception in the event of an error_@param ignoreFailedDrops whether of not to continue in the event of specifically an error on a {@code DROP};private void executeSqlScript(Connection connection, EncodedResource resource, boolean continueOnError,_			boolean ignoreFailedDrops) throws SQLException {__		if (logger.isInfoEnabled()) {_			logger.info("Executing SQL script from " + resource)__		}_		long startTime = System.currentTimeMillis()__		List<String> statements = new LinkedList<String>()__		String script__		try {_			script = readScript(resource)__		}_		catch (IOException ex) {_			throw new CannotReadScriptException(resource, ex)__		}_		String delimiter = this.separator__		if (delimiter == null) {_			delimiter = DEFAULT_STATEMENT_SEPARATOR__			if (!containsSqlScriptDelimiters(script, delimiter)) {_				delimiter = "\n"__			}_		}_		splitSqlScript(script, delimiter, this.commentPrefix, statements)__		int lineNumber = 0__		Statement stmt = connection.createStatement()__		try {_			for (String statement : statements) {_				lineNumber++__				try {_					stmt.execute(statement)__					int rowsAffected = stmt.getUpdateCount()__					if (logger.isDebugEnabled()) {_						logger.debug(rowsAffected + " returned as updateCount for SQL: " + statement)__					}_				}_				catch (SQLException ex) {_					boolean dropStatement = StringUtils.startsWithIgnoreCase(statement.trim(), "drop")__					if (continueOnError || (dropStatement && ignoreFailedDrops)) {_						if (logger.isDebugEnabled()) {_							logger.debug("Failed to execute SQL script statement at line " + lineNumber +_									" of resource " + resource + ": " + statement, ex)__						}_					}_					else {_						throw new ScriptStatementFailedException(statement, lineNumber, resource, ex)__					}_				}_			}_		}_		finally {_			try {_				stmt.close()__			}_			catch (Throwable ex) {_				logger.debug("Could not close JDBC Statement", ex)__			}_		}_		long elapsedTime = System.currentTimeMillis() - startTime__		if (logger.isInfoEnabled()) {_			logger.info("Done executing SQL script from " + resource + " in " + elapsedTime + " ms.")__		}_	};execute,the,given,sql,script,p,the,script,will,normally,be,loaded,by,classpath,there,should,be,one,statement,per,line,any,link,set,separator,string,statement,separators,will,be,removed,p,b,do,not,use,this,method,to,execute,ddl,if,you,expect,rollback,b,param,connection,the,jdbc,connection,with,which,to,perform,jdbc,operations,param,resource,the,resource,potentially,associated,with,a,specific,encoding,to,load,the,sql,script,from,param,continue,on,error,whether,or,not,to,continue,without,throwing,an,exception,in,the,event,of,an,error,param,ignore,failed,drops,whether,of,not,to,continue,in,the,event,of,specifically,an,error,on,a,code,drop;private,void,execute,sql,script,connection,connection,encoded,resource,resource,boolean,continue,on,error,boolean,ignore,failed,drops,throws,sqlexception,if,logger,is,info,enabled,logger,info,executing,sql,script,from,resource,long,start,time,system,current,time,millis,list,string,statements,new,linked,list,string,string,script,try,script,read,script,resource,catch,ioexception,ex,throw,new,cannot,read,script,exception,resource,ex,string,delimiter,this,separator,if,delimiter,null,delimiter,if,contains,sql,script,delimiters,script,delimiter,delimiter,n,split,sql,script,script,delimiter,this,comment,prefix,statements,int,line,number,0,statement,stmt,connection,create,statement,try,for,string,statement,statements,line,number,try,stmt,execute,statement,int,rows,affected,stmt,get,update,count,if,logger,is,debug,enabled,logger,debug,rows,affected,returned,as,update,count,for,sql,statement,catch,sqlexception,ex,boolean,drop,statement,string,utils,starts,with,ignore,case,statement,trim,drop,if,continue,on,error,drop,statement,ignore,failed,drops,if,logger,is,debug,enabled,logger,debug,failed,to,execute,sql,script,statement,at,line,line,number,of,resource,resource,statement,ex,else,throw,new,script,statement,failed,exception,statement,line,number,resource,ex,finally,try,stmt,close,catch,throwable,ex,logger,debug,could,not,close,jdbc,statement,ex,long,elapsed,time,system,current,time,millis,start,time,if,logger,is,info,enabled,logger,info,done,executing,sql,script,from,resource,in,elapsed,time,ms
ResourceDatabasePopulator -> @Override 	public void populate(Connection connection) throws ScriptException;1395068709;{@inheritDoc};@Override_	public void populate(Connection connection) throws ScriptException {_		for (Resource script : this.scripts) {_			ScriptUtils.executeSqlScript(connection, encodeScript(script), this.continueOnError,_				this.ignoreFailedDrops, this.commentPrefix, this.separator, this.blockCommentStartDelimiter,_				this.blockCommentEndDelimiter)__		}_	};inherit,doc;override,public,void,populate,connection,connection,throws,script,exception,for,resource,script,this,scripts,script,utils,execute,sql,script,connection,encode,script,script,this,continue,on,error,this,ignore,failed,drops,this,comment,prefix,this,separator,this,block,comment,start,delimiter,this,block,comment,end,delimiter
ResourceDatabasePopulator -> @Override 	public void populate(Connection connection) throws ScriptException;1395183391;{@inheritDoc};@Override_	public void populate(Connection connection) throws ScriptException {_		for (Resource script : this.scripts) {_			ScriptUtils.executeSqlScript(connection, encodeScript(script), this.continueOnError,_				this.ignoreFailedDrops, this.commentPrefix, this.separator, this.blockCommentStartDelimiter,_				this.blockCommentEndDelimiter)__		}_	};inherit,doc;override,public,void,populate,connection,connection,throws,script,exception,for,resource,script,this,scripts,script,utils,execute,sql,script,connection,encode,script,script,this,continue,on,error,this,ignore,failed,drops,this,comment,prefix,this,separator,this,block,comment,start,delimiter,this,block,comment,end,delimiter
ResourceDatabasePopulator -> @Override 	public void populate(Connection connection) throws ScriptException;1396191708;{@inheritDoc}_@see #execute(DataSource);@Override_	public void populate(Connection connection) throws ScriptException {_		for (Resource script : this.scripts) {_			ScriptUtils.executeSqlScript(connection, encodeScript(script), this.continueOnError,_				this.ignoreFailedDrops, this.commentPrefix, this.separator, this.blockCommentStartDelimiter,_				this.blockCommentEndDelimiter)__		}_	};inherit,doc,see,execute,data,source;override,public,void,populate,connection,connection,throws,script,exception,for,resource,script,this,scripts,script,utils,execute,sql,script,connection,encode,script,script,this,continue,on,error,this,ignore,failed,drops,this,comment,prefix,this,separator,this,block,comment,start,delimiter,this,block,comment,end,delimiter
ResourceDatabasePopulator -> @Override 	public void populate(Connection connection) throws ScriptException;1397231067;{@inheritDoc}_@see #execute(DataSource);@Override_	public void populate(Connection connection) throws ScriptException {_		for (Resource script : this.scripts) {_			ScriptUtils.executeSqlScript(connection, encodeScript(script), this.continueOnError,_				this.ignoreFailedDrops, this.commentPrefix, this.separator, this.blockCommentStartDelimiter,_				this.blockCommentEndDelimiter)__		}_	};inherit,doc,see,execute,data,source;override,public,void,populate,connection,connection,throws,script,exception,for,resource,script,this,scripts,script,utils,execute,sql,script,connection,encode,script,script,this,continue,on,error,this,ignore,failed,drops,this,comment,prefix,this,separator,this,block,comment,start,delimiter,this,block,comment,end,delimiter
ResourceDatabasePopulator -> @Override 	public void populate(Connection connection) throws ScriptException;1397385067;{@inheritDoc}_@see #execute(DataSource);@Override_	public void populate(Connection connection) throws ScriptException {_		for (Resource script : this.scripts) {_			ScriptUtils.executeSqlScript(connection, encodeScript(script), this.continueOnError,_				this.ignoreFailedDrops, this.commentPrefix, this.separator, this.blockCommentStartDelimiter,_				this.blockCommentEndDelimiter)__		}_	};inherit,doc,see,execute,data,source;override,public,void,populate,connection,connection,throws,script,exception,for,resource,script,this,scripts,script,utils,execute,sql,script,connection,encode,script,script,this,continue,on,error,this,ignore,failed,drops,this,comment,prefix,this,separator,this,block,comment,start,delimiter,this,block,comment,end,delimiter
ResourceDatabasePopulator -> @Override 	public void populate(Connection connection) throws ScriptException;1397393502;{@inheritDoc}_@see #execute(DataSource);@Override_	public void populate(Connection connection) throws ScriptException {_		Assert.notNull(connection, "Connection must not be null")__		for (Resource script : getScripts()) {_			ScriptUtils.executeSqlScript(connection, encodeScript(script), this.continueOnError,_				this.ignoreFailedDrops, this.commentPrefix, this.separator, this.blockCommentStartDelimiter,_				this.blockCommentEndDelimiter)__		}_	};inherit,doc,see,execute,data,source;override,public,void,populate,connection,connection,throws,script,exception,assert,not,null,connection,connection,must,not,be,null,for,resource,script,get,scripts,script,utils,execute,sql,script,connection,encode,script,script,this,continue,on,error,this,ignore,failed,drops,this,comment,prefix,this,separator,this,block,comment,start,delimiter,this,block,comment,end,delimiter
ResourceDatabasePopulator -> @Override 	public void populate(Connection connection) throws ScriptException;1397394407;{@inheritDoc}_@see #execute(DataSource);@Override_	public void populate(Connection connection) throws ScriptException {_		Assert.notNull(connection, "Connection must not be null")__		for (Resource script : getScripts()) {_			ScriptUtils.executeSqlScript(connection, encodeScript(script), this.continueOnError,_				this.ignoreFailedDrops, this.commentPrefix, this.separator, this.blockCommentStartDelimiter,_				this.blockCommentEndDelimiter)__		}_	};inherit,doc,see,execute,data,source;override,public,void,populate,connection,connection,throws,script,exception,assert,not,null,connection,connection,must,not,be,null,for,resource,script,get,scripts,script,utils,execute,sql,script,connection,encode,script,script,this,continue,on,error,this,ignore,failed,drops,this,comment,prefix,this,separator,this,block,comment,start,delimiter,this,block,comment,end,delimiter
ResourceDatabasePopulator -> @Override 	public void populate(Connection connection) throws ScriptException;1401991965;{@inheritDoc}_@see #execute(DataSource);@Override_	public void populate(Connection connection) throws ScriptException {_		Assert.notNull(connection, "Connection must not be null")__		for (Resource script : getScripts()) {_			ScriptUtils.executeSqlScript(connection, encodeScript(script), this.continueOnError,_				this.ignoreFailedDrops, this.commentPrefix, this.separator, this.blockCommentStartDelimiter,_				this.blockCommentEndDelimiter)__		}_	};inherit,doc,see,execute,data,source;override,public,void,populate,connection,connection,throws,script,exception,assert,not,null,connection,connection,must,not,be,null,for,resource,script,get,scripts,script,utils,execute,sql,script,connection,encode,script,script,this,continue,on,error,this,ignore,failed,drops,this,comment,prefix,this,separator,this,block,comment,start,delimiter,this,block,comment,end,delimiter
ResourceDatabasePopulator -> @Override 	public void populate(Connection connection) throws ScriptException;1402143225;{@inheritDoc}_@see #execute(DataSource);@Override_	public void populate(Connection connection) throws ScriptException {_		Assert.notNull(connection, "Connection must not be null")__		for (Resource script : getScripts()) {_			ScriptUtils.executeSqlScript(connection, encodeScript(script), this.continueOnError,_				this.ignoreFailedDrops, this.commentPrefix, this.separator, this.blockCommentStartDelimiter,_				this.blockCommentEndDelimiter)__		}_	};inherit,doc,see,execute,data,source;override,public,void,populate,connection,connection,throws,script,exception,assert,not,null,connection,connection,must,not,be,null,for,resource,script,get,scripts,script,utils,execute,sql,script,connection,encode,script,script,this,continue,on,error,this,ignore,failed,drops,this,comment,prefix,this,separator,this,block,comment,start,delimiter,this,block,comment,end,delimiter
ResourceDatabasePopulator -> @Override 	public void populate(Connection connection) throws ScriptException;1413848647;{@inheritDoc}_@see #execute(DataSource);@Override_	public void populate(Connection connection) throws ScriptException {_		Assert.notNull(connection, "Connection must not be null")__		for (Resource script : getScripts()) {_			ScriptUtils.executeSqlScript(connection, encodeScript(script), this.continueOnError,_				this.ignoreFailedDrops, this.commentPrefix, this.separator, this.blockCommentStartDelimiter,_				this.blockCommentEndDelimiter)__		}_	};inherit,doc,see,execute,data,source;override,public,void,populate,connection,connection,throws,script,exception,assert,not,null,connection,connection,must,not,be,null,for,resource,script,get,scripts,script,utils,execute,sql,script,connection,encode,script,script,this,continue,on,error,this,ignore,failed,drops,this,comment,prefix,this,separator,this,block,comment,start,delimiter,this,block,comment,end,delimiter
ResourceDatabasePopulator -> @Override 	public void populate(Connection connection) throws ScriptException;1455813442;{@inheritDoc}_@see #execute(DataSource);@Override_	public void populate(Connection connection) throws ScriptException {_		Assert.notNull(connection, "Connection must not be null")__		for (Resource script : getScripts()) {_			ScriptUtils.executeSqlScript(connection, encodeScript(script), this.continueOnError,_					this.ignoreFailedDrops, this.commentPrefix, this.separator, this.blockCommentStartDelimiter,_					this.blockCommentEndDelimiter)__		}_	};inherit,doc,see,execute,data,source;override,public,void,populate,connection,connection,throws,script,exception,assert,not,null,connection,connection,must,not,be,null,for,resource,script,get,scripts,script,utils,execute,sql,script,connection,encode,script,script,this,continue,on,error,this,ignore,failed,drops,this,comment,prefix,this,separator,this,block,comment,start,delimiter,this,block,comment,end,delimiter
ResourceDatabasePopulator -> @Override 	public void populate(Connection connection) throws ScriptException;1467730834;{@inheritDoc}_@see #execute(DataSource);@Override_	public void populate(Connection connection) throws ScriptException {_		Assert.notNull(connection, "Connection must not be null")__		for (Resource script : getScripts()) {_			ScriptUtils.executeSqlScript(connection, encodeScript(script), this.continueOnError,_					this.ignoreFailedDrops, this.commentPrefix, this.separator, this.blockCommentStartDelimiter,_					this.blockCommentEndDelimiter)__		}_	};inherit,doc,see,execute,data,source;override,public,void,populate,connection,connection,throws,script,exception,assert,not,null,connection,connection,must,not,be,null,for,resource,script,get,scripts,script,utils,execute,sql,script,connection,encode,script,script,this,continue,on,error,this,ignore,failed,drops,this,comment,prefix,this,separator,this,block,comment,start,delimiter,this,block,comment,end,delimiter
ResourceDatabasePopulator -> @Override 	public void populate(Connection connection) throws ScriptException;1477691361;{@inheritDoc}_@see #execute(DataSource);@Override_	public void populate(Connection connection) throws ScriptException {_		Assert.notNull(connection, "Connection must not be null")__		for (Resource script : this.scripts) {_			EncodedResource encodedScript = new EncodedResource(script, this.sqlScriptEncoding)__			ScriptUtils.executeSqlScript(connection, encodedScript, this.continueOnError, this.ignoreFailedDrops,_					this.commentPrefix, this.separator, this.blockCommentStartDelimiter, this.blockCommentEndDelimiter)__		}_	};inherit,doc,see,execute,data,source;override,public,void,populate,connection,connection,throws,script,exception,assert,not,null,connection,connection,must,not,be,null,for,resource,script,this,scripts,encoded,resource,encoded,script,new,encoded,resource,script,this,sql,script,encoding,script,utils,execute,sql,script,connection,encoded,script,this,continue,on,error,this,ignore,failed,drops,this,comment,prefix,this,separator,this,block,comment,start,delimiter,this,block,comment,end,delimiter
ResourceDatabasePopulator -> @Override 	public void populate(Connection connection) throws ScriptException;1495868221;{@inheritDoc}_@see #execute(DataSource);@Override_	public void populate(Connection connection) throws ScriptException {_		Assert.notNull(connection, "Connection must not be null")__		for (Resource script : this.scripts) {_			EncodedResource encodedScript = new EncodedResource(script, this.sqlScriptEncoding)__			ScriptUtils.executeSqlScript(connection, encodedScript, this.continueOnError, this.ignoreFailedDrops,_					this.commentPrefix, this.separator, this.blockCommentStartDelimiter, this.blockCommentEndDelimiter)__		}_	};inherit,doc,see,execute,data,source;override,public,void,populate,connection,connection,throws,script,exception,assert,not,null,connection,connection,must,not,be,null,for,resource,script,this,scripts,encoded,resource,encoded,script,new,encoded,resource,script,this,sql,script,encoding,script,utils,execute,sql,script,connection,encoded,script,this,continue,on,error,this,ignore,failed,drops,this,comment,prefix,this,separator,this,block,comment,start,delimiter,this,block,comment,end,delimiter
ResourceDatabasePopulator -> @Override 	public void populate(Connection connection) throws ScriptException;1498780456;{@inheritDoc}_@see #execute(DataSource);@Override_	public void populate(Connection connection) throws ScriptException {_		Assert.notNull(connection, "Connection must not be null")__		for (Resource script : this.scripts) {_			EncodedResource encodedScript = new EncodedResource(script, this.sqlScriptEncoding)__			ScriptUtils.executeSqlScript(connection, encodedScript, this.continueOnError, this.ignoreFailedDrops,_					this.commentPrefix, this.separator, this.blockCommentStartDelimiter, this.blockCommentEndDelimiter)__		}_	};inherit,doc,see,execute,data,source;override,public,void,populate,connection,connection,throws,script,exception,assert,not,null,connection,connection,must,not,be,null,for,resource,script,this,scripts,encoded,resource,encoded,script,new,encoded,resource,script,this,sql,script,encoding,script,utils,execute,sql,script,connection,encoded,script,this,continue,on,error,this,ignore,failed,drops,this,comment,prefix,this,separator,this,block,comment,start,delimiter,this,block,comment,end,delimiter
ResourceDatabasePopulator -> @Override 	public void populate(Connection connection) throws ScriptException;1549646187;{@inheritDoc}_@see #execute(DataSource);@Override_	public void populate(Connection connection) throws ScriptException {_		Assert.notNull(connection, "Connection must not be null")__		for (Resource script : this.scripts) {_			EncodedResource encodedScript = new EncodedResource(script, this.sqlScriptEncoding)__			ScriptUtils.executeSqlScript(connection, encodedScript, this.continueOnError, this.ignoreFailedDrops,_					this.commentPrefix, this.separator, this.blockCommentStartDelimiter, this.blockCommentEndDelimiter)__		}_	};inherit,doc,see,execute,data,source;override,public,void,populate,connection,connection,throws,script,exception,assert,not,null,connection,connection,must,not,be,null,for,resource,script,this,scripts,encoded,resource,encoded,script,new,encoded,resource,script,this,sql,script,encoding,script,utils,execute,sql,script,connection,encoded,script,this,continue,on,error,this,ignore,failed,drops,this,comment,prefix,this,separator,this,block,comment,start,delimiter,this,block,comment,end,delimiter
ResourceDatabasePopulator -> public void setSeparator(String separator);1328020251;Specify the statement separator, if a custom one. Default is "_".;public void setSeparator(String separator) {_		this.separator = separator__	};specify,the,statement,separator,if,a,custom,one,default,is;public,void,set,separator,string,separator,this,separator,separator
ResourceDatabasePopulator -> public void setSeparator(String separator);1329142650;Specify the statement separator, if a custom one. Default is "_".;public void setSeparator(String separator) {_		this.separator = separator__	};specify,the,statement,separator,if,a,custom,one,default,is;public,void,set,separator,string,separator,this,separator,separator
ResourceDatabasePopulator -> public void setSeparator(String separator);1347368808;Specify the statement separator, if a custom one. Default is "_".;public void setSeparator(String separator) {_		this.separator = separator__	};specify,the,statement,separator,if,a,custom,one,default,is;public,void,set,separator,string,separator,this,separator,separator
ResourceDatabasePopulator -> public void setSeparator(String separator);1349904863;Specify the statement separator, if a custom one. Default is "_".;public void setSeparator(String separator) {_		this.separator = separator__	};specify,the,statement,separator,if,a,custom,one,default,is;public,void,set,separator,string,separator,this,separator,separator
ResourceDatabasePopulator -> public void setSeparator(String separator);1352157731;Specify the statement separator, if a custom one. Default is "_".;public void setSeparator(String separator) {_		this.separator = separator__	};specify,the,statement,separator,if,a,custom,one,default,is;public,void,set,separator,string,separator,this,separator,separator
ResourceDatabasePopulator -> public void setSeparator(String separator);1352158898;Specify the statement separator, if a custom one. Default is "_".;public void setSeparator(String separator) {_		this.separator = separator__	};specify,the,statement,separator,if,a,custom,one,default,is;public,void,set,separator,string,separator,this,separator,separator
ResourceDatabasePopulator -> public void setSeparator(String separator);1354725684;Specify the statement separator, if a custom one. Default is "_".;public void setSeparator(String separator) {_		this.separator = separator__	};specify,the,statement,separator,if,a,custom,one,default,is;public,void,set,separator,string,separator,this,separator,separator
ResourceDatabasePopulator -> public void setSeparator(String separator);1355351963;Specify the statement separator, if a custom one. Default is "_".;public void setSeparator(String separator) {_		this.separator = separator__	};specify,the,statement,separator,if,a,custom,one,default,is;public,void,set,separator,string,separator,this,separator,separator
ResourceDatabasePopulator -> public void setSeparator(String separator);1356735495;Specify the statement separator, if a custom one. Default is "_".;public void setSeparator(String separator) {_		this.separator = separator__	};specify,the,statement,separator,if,a,custom,one,default,is;public,void,set,separator,string,separator,this,separator,separator
ResourceDatabasePopulator -> public void setSeparator(String separator);1357119239;Specify the statement separator, if a custom one. Default is "_".;public void setSeparator(String separator) {_		this.separator = separator__	};specify,the,statement,separator,if,a,custom,one,default,is;public,void,set,separator,string,separator,this,separator,separator
ResourceDatabasePopulator -> public void setSeparator(String separator);1368482696;Specify the statement separator, if a custom one. Default is "_".;public void setSeparator(String separator) {_		this.separator = separator__	};specify,the,statement,separator,if,a,custom,one,default,is;public,void,set,separator,string,separator,this,separator,separator
ResourceDatabasePopulator -> public void setSeparator(String separator);1387832430;Specify the statement separator, if a custom one. Default is "_".;public void setSeparator(String separator) {_		this.separator = separator__	};specify,the,statement,separator,if,a,custom,one,default,is;public,void,set,separator,string,separator,this,separator,separator
ResourceDatabasePopulator -> public void setSeparator(String separator);1394708749;Specify the statement separator, if a custom one._<p>Default is "_".;public void setSeparator(String separator) {_		this.separator = separator__	};specify,the,statement,separator,if,a,custom,one,p,default,is;public,void,set,separator,string,separator,this,separator,separator
ResourceDatabasePopulator -> public void setSeparator(String separator);1394714705;Specify the statement separator, if a custom one._<p>Default is "_".;public void setSeparator(String separator) {_		this.separator = separator__	};specify,the,statement,separator,if,a,custom,one,p,default,is;public,void,set,separator,string,separator,this,separator,separator
ResourceDatabasePopulator -> public void setSeparator(String separator);1394987641;Specify the statement separator, if a custom one._<p>Default is "_".;public void setSeparator(String separator) {_		this.separator = separator__	};specify,the,statement,separator,if,a,custom,one,p,default,is;public,void,set,separator,string,separator,this,separator,separator
ResourceDatabasePopulator -> public void setSeparator(String separator);1395055592;Specify the statement separator, if a custom one._<p>Default is "_".;public void setSeparator(String separator) {_		this.separator = separator__	};specify,the,statement,separator,if,a,custom,one,p,default,is;public,void,set,separator,string,separator,this,separator,separator
ResourceDatabasePopulator -> public void setSeparator(String separator);1395068709;Specify the statement separator, if a custom one._<p>Default is "_".;public void setSeparator(String separator) {_		this.separator = separator__	};specify,the,statement,separator,if,a,custom,one,p,default,is;public,void,set,separator,string,separator,this,separator,separator
ResourceDatabasePopulator -> public void setSeparator(String separator);1395183391;Specify the statement separator, if a custom one._<p>Default is "_"._@param separator the statement separator;public void setSeparator(String separator) {_		this.separator = separator__	};specify,the,statement,separator,if,a,custom,one,p,default,is,param,separator,the,statement,separator;public,void,set,separator,string,separator,this,separator,separator
ResourceDatabasePopulator -> public void setSeparator(String separator);1396191708;Specify the statement separator, if a custom one._<p>Default is "_"._@param separator the statement separator;public void setSeparator(String separator) {_		this.separator = separator__	};specify,the,statement,separator,if,a,custom,one,p,default,is,param,separator,the,statement,separator;public,void,set,separator,string,separator,this,separator,separator
ResourceDatabasePopulator -> public void setSeparator(String separator);1397231067;Specify the statement separator, if a custom one._<p>Defaults to {@code "_"} if not specified and falls back to {@code "\n"}_as a last resort_ may be set to {@link ScriptUtils#EOF_STATEMENT_SEPARATOR}_to signal that each script contains a single statement without a separator._@param separator the script statement separator;public void setSeparator(String separator) {_		this.separator = separator__	};specify,the,statement,separator,if,a,custom,one,p,defaults,to,code,if,not,specified,and,falls,back,to,code,n,as,a,last,resort,may,be,set,to,link,script,utils,to,signal,that,each,script,contains,a,single,statement,without,a,separator,param,separator,the,script,statement,separator;public,void,set,separator,string,separator,this,separator,separator
ResourceDatabasePopulator -> public void setSeparator(String separator);1397385067;Specify the statement separator, if a custom one._<p>Defaults to {@code "_"} if not specified and falls back to {@code "\n"}_as a last resort_ may be set to {@link ScriptUtils#EOF_STATEMENT_SEPARATOR}_to signal that each script contains a single statement without a separator._@param separator the script statement separator;public void setSeparator(String separator) {_		this.separator = separator__	};specify,the,statement,separator,if,a,custom,one,p,defaults,to,code,if,not,specified,and,falls,back,to,code,n,as,a,last,resort,may,be,set,to,link,script,utils,to,signal,that,each,script,contains,a,single,statement,without,a,separator,param,separator,the,script,statement,separator;public,void,set,separator,string,separator,this,separator,separator
ResourceDatabasePopulator -> public void setSeparator(String separator);1397393502;Specify the statement separator, if a custom one._<p>Defaults to {@code "_"} if not specified and falls back to {@code "\n"}_as a last resort_ may be set to {@link ScriptUtils#EOF_STATEMENT_SEPARATOR}_to signal that each script contains a single statement without a separator._@param separator the script statement separator;public void setSeparator(String separator) {_		this.separator = separator__	};specify,the,statement,separator,if,a,custom,one,p,defaults,to,code,if,not,specified,and,falls,back,to,code,n,as,a,last,resort,may,be,set,to,link,script,utils,to,signal,that,each,script,contains,a,single,statement,without,a,separator,param,separator,the,script,statement,separator;public,void,set,separator,string,separator,this,separator,separator
ResourceDatabasePopulator -> public void setSeparator(String separator);1397394407;Specify the statement separator, if a custom one._<p>Defaults to {@code "_"} if not specified and falls back to {@code "\n"}_as a last resort_ may be set to {@link ScriptUtils#EOF_STATEMENT_SEPARATOR}_to signal that each script contains a single statement without a separator._@param separator the script statement separator;public void setSeparator(String separator) {_		this.separator = separator__	};specify,the,statement,separator,if,a,custom,one,p,defaults,to,code,if,not,specified,and,falls,back,to,code,n,as,a,last,resort,may,be,set,to,link,script,utils,to,signal,that,each,script,contains,a,single,statement,without,a,separator,param,separator,the,script,statement,separator;public,void,set,separator,string,separator,this,separator,separator
ResourceDatabasePopulator -> public void setSeparator(String separator);1401991965;Specify the statement separator, if a custom one._<p>Defaults to {@code "_"} if not specified and falls back to {@code "\n"}_as a last resort_ may be set to {@link ScriptUtils#EOF_STATEMENT_SEPARATOR}_to signal that each script contains a single statement without a separator._@param separator the script statement separator;public void setSeparator(String separator) {_		this.separator = separator__	};specify,the,statement,separator,if,a,custom,one,p,defaults,to,code,if,not,specified,and,falls,back,to,code,n,as,a,last,resort,may,be,set,to,link,script,utils,to,signal,that,each,script,contains,a,single,statement,without,a,separator,param,separator,the,script,statement,separator;public,void,set,separator,string,separator,this,separator,separator
ResourceDatabasePopulator -> public void setSeparator(String separator);1402143225;Specify the statement separator, if a custom one._<p>Defaults to {@code "_"} if not specified and falls back to {@code "\n"}_as a last resort_ may be set to {@link ScriptUtils#EOF_STATEMENT_SEPARATOR}_to signal that each script contains a single statement without a separator._@param separator the script statement separator;public void setSeparator(String separator) {_		this.separator = separator__	};specify,the,statement,separator,if,a,custom,one,p,defaults,to,code,if,not,specified,and,falls,back,to,code,n,as,a,last,resort,may,be,set,to,link,script,utils,to,signal,that,each,script,contains,a,single,statement,without,a,separator,param,separator,the,script,statement,separator;public,void,set,separator,string,separator,this,separator,separator
ResourceDatabasePopulator -> public void setSeparator(String separator);1413848647;Specify the statement separator, if a custom one._<p>Defaults to {@code "_"} if not specified and falls back to {@code "\n"}_as a last resort_ may be set to {@link ScriptUtils#EOF_STATEMENT_SEPARATOR}_to signal that each script contains a single statement without a separator._@param separator the script statement separator;public void setSeparator(String separator) {_		this.separator = separator__	};specify,the,statement,separator,if,a,custom,one,p,defaults,to,code,if,not,specified,and,falls,back,to,code,n,as,a,last,resort,may,be,set,to,link,script,utils,to,signal,that,each,script,contains,a,single,statement,without,a,separator,param,separator,the,script,statement,separator;public,void,set,separator,string,separator,this,separator,separator
ResourceDatabasePopulator -> public void setSeparator(String separator);1455813442;Specify the statement separator, if a custom one._<p>Defaults to {@code "_"} if not specified and falls back to {@code "\n"}_as a last resort_ may be set to {@link ScriptUtils#EOF_STATEMENT_SEPARATOR}_to signal that each script contains a single statement without a separator._@param separator the script statement separator;public void setSeparator(String separator) {_		this.separator = separator__	};specify,the,statement,separator,if,a,custom,one,p,defaults,to,code,if,not,specified,and,falls,back,to,code,n,as,a,last,resort,may,be,set,to,link,script,utils,to,signal,that,each,script,contains,a,single,statement,without,a,separator,param,separator,the,script,statement,separator;public,void,set,separator,string,separator,this,separator,separator
ResourceDatabasePopulator -> public void setSeparator(String separator);1467730834;Specify the statement separator, if a custom one._<p>Defaults to {@code "_"} if not specified and falls back to {@code "\n"}_as a last resort_ may be set to {@link ScriptUtils#EOF_STATEMENT_SEPARATOR}_to signal that each script contains a single statement without a separator._@param separator the script statement separator;public void setSeparator(String separator) {_		this.separator = separator__	};specify,the,statement,separator,if,a,custom,one,p,defaults,to,code,if,not,specified,and,falls,back,to,code,n,as,a,last,resort,may,be,set,to,link,script,utils,to,signal,that,each,script,contains,a,single,statement,without,a,separator,param,separator,the,script,statement,separator;public,void,set,separator,string,separator,this,separator,separator
ResourceDatabasePopulator -> public void setSeparator(String separator);1477691361;Specify the statement separator, if a custom one._<p>Defaults to {@code "_"} if not specified and falls back to {@code "\n"}_as a last resort_ may be set to {@link ScriptUtils#EOF_STATEMENT_SEPARATOR}_to signal that each script contains a single statement without a separator._@param separator the script statement separator;public void setSeparator(String separator) {_		this.separator = separator__	};specify,the,statement,separator,if,a,custom,one,p,defaults,to,code,if,not,specified,and,falls,back,to,code,n,as,a,last,resort,may,be,set,to,link,script,utils,to,signal,that,each,script,contains,a,single,statement,without,a,separator,param,separator,the,script,statement,separator;public,void,set,separator,string,separator,this,separator,separator
ResourceDatabasePopulator -> public void setSeparator(String separator);1495868221;Specify the statement separator, if a custom one._<p>Defaults to {@code "_"} if not specified and falls back to {@code "\n"}_as a last resort_ may be set to {@link ScriptUtils#EOF_STATEMENT_SEPARATOR}_to signal that each script contains a single statement without a separator._@param separator the script statement separator;public void setSeparator(String separator) {_		this.separator = separator__	};specify,the,statement,separator,if,a,custom,one,p,defaults,to,code,if,not,specified,and,falls,back,to,code,n,as,a,last,resort,may,be,set,to,link,script,utils,to,signal,that,each,script,contains,a,single,statement,without,a,separator,param,separator,the,script,statement,separator;public,void,set,separator,string,separator,this,separator,separator
ResourceDatabasePopulator -> public void setSeparator(String separator);1498780456;Specify the statement separator, if a custom one._<p>Defaults to {@code "_"} if not specified and falls back to {@code "\n"}_as a last resort_ may be set to {@link ScriptUtils#EOF_STATEMENT_SEPARATOR}_to signal that each script contains a single statement without a separator._@param separator the script statement separator;public void setSeparator(String separator) {_		this.separator = separator__	};specify,the,statement,separator,if,a,custom,one,p,defaults,to,code,if,not,specified,and,falls,back,to,code,n,as,a,last,resort,may,be,set,to,link,script,utils,to,signal,that,each,script,contains,a,single,statement,without,a,separator,param,separator,the,script,statement,separator;public,void,set,separator,string,separator,this,separator,separator
ResourceDatabasePopulator -> public void setSeparator(String separator);1549646187;Specify the statement separator, if a custom one._<p>Defaults to {@code "_"} if not specified and falls back to {@code "\n"}_as a last resort_ may be set to {@link ScriptUtils#EOF_STATEMENT_SEPARATOR}_to signal that each script contains a single statement without a separator._@param separator the script statement separator;public void setSeparator(String separator) {_		this.separator = separator__	};specify,the,statement,separator,if,a,custom,one,p,defaults,to,code,if,not,specified,and,falls,back,to,code,n,as,a,last,resort,may,be,set,to,link,script,utils,to,signal,that,each,script,contains,a,single,statement,without,a,separator,param,separator,the,script,statement,separator;public,void,set,separator,string,separator,this,separator,separator
ResourceDatabasePopulator -> private void splitSqlScript(String script, String delim, List<String> statements);1328020251;Split an SQL script into separate statements delimited with the provided delimiter character._Each individual statement will be added to the provided <code>List</code>._@param script the SQL script_@param delim character delimiting each statement (typically a '_' character)_@param statements the List that will contain the individual statements;private void splitSqlScript(String script, String delim, List<String> statements) {_		StringBuilder sb = new StringBuilder()__		boolean inLiteral = false__		boolean inEscape = false__		char[] content = script.toCharArray()__		for (int i = 0_ i < script.length()_ i++) {_			char c = content[i]__			if (inEscape) {_				inEscape = false__				sb.append(c)__				continue__			}_			_			if (c == '\\') {_				inEscape = true__				sb.append(c)__				continue__			}_			if (c == '\'') {_				inLiteral = !inLiteral__			}_			if (!inLiteral) {_				if (script.substring(i).startsWith(delim)) {_					if (sb.length() > 0) {_						statements.add(sb.toString())__						sb = new StringBuilder()__					}_					i += delim.length() - 1__					continue__				}_				else if (c == '\n' || c == '\t') {_					c = ' '__				}_			}_			sb.append(c)__		}_		if (StringUtils.hasText(sb)) {_			statements.add(sb.toString())__		}_	};split,an,sql,script,into,separate,statements,delimited,with,the,provided,delimiter,character,each,individual,statement,will,be,added,to,the,provided,code,list,code,param,script,the,sql,script,param,delim,character,delimiting,each,statement,typically,a,character,param,statements,the,list,that,will,contain,the,individual,statements;private,void,split,sql,script,string,script,string,delim,list,string,statements,string,builder,sb,new,string,builder,boolean,in,literal,false,boolean,in,escape,false,char,content,script,to,char,array,for,int,i,0,i,script,length,i,char,c,content,i,if,in,escape,in,escape,false,sb,append,c,continue,if,c,in,escape,true,sb,append,c,continue,if,c,in,literal,in,literal,if,in,literal,if,script,substring,i,starts,with,delim,if,sb,length,0,statements,add,sb,to,string,sb,new,string,builder,i,delim,length,1,continue,else,if,c,n,c,t,c,sb,append,c,if,string,utils,has,text,sb,statements,add,sb,to,string
ResourceDatabasePopulator -> private void splitSqlScript(String script, String delim, List<String> statements);1329142650;Split an SQL script into separate statements delimited with the provided delimiter character._Each individual statement will be added to the provided <code>List</code>._@param script the SQL script_@param delim character delimiting each statement (typically a '_' character)_@param statements the List that will contain the individual statements;private void splitSqlScript(String script, String delim, List<String> statements) {_		StringBuilder sb = new StringBuilder()__		boolean inLiteral = false__		boolean inEscape = false__		char[] content = script.toCharArray()__		for (int i = 0_ i < script.length()_ i++) {_			char c = content[i]__			if (inEscape) {_				inEscape = false__				sb.append(c)__				continue__			}_			_			if (c == '\\') {_				inEscape = true__				sb.append(c)__				continue__			}_			if (c == '\'') {_				inLiteral = !inLiteral__			}_			if (!inLiteral) {_				if (script.substring(i).startsWith(delim)) {_					if (sb.length() > 0) {_						statements.add(sb.toString())__						sb = new StringBuilder()__					}_					i += delim.length() - 1__					continue__				}_				else if (c == '\n' || c == '\t') {_					c = ' '__				}_			}_			sb.append(c)__		}_		if (StringUtils.hasText(sb)) {_			statements.add(sb.toString())__		}_	};split,an,sql,script,into,separate,statements,delimited,with,the,provided,delimiter,character,each,individual,statement,will,be,added,to,the,provided,code,list,code,param,script,the,sql,script,param,delim,character,delimiting,each,statement,typically,a,character,param,statements,the,list,that,will,contain,the,individual,statements;private,void,split,sql,script,string,script,string,delim,list,string,statements,string,builder,sb,new,string,builder,boolean,in,literal,false,boolean,in,escape,false,char,content,script,to,char,array,for,int,i,0,i,script,length,i,char,c,content,i,if,in,escape,in,escape,false,sb,append,c,continue,if,c,in,escape,true,sb,append,c,continue,if,c,in,literal,in,literal,if,in,literal,if,script,substring,i,starts,with,delim,if,sb,length,0,statements,add,sb,to,string,sb,new,string,builder,i,delim,length,1,continue,else,if,c,n,c,t,c,sb,append,c,if,string,utils,has,text,sb,statements,add,sb,to,string
ResourceDatabasePopulator -> private void splitSqlScript(String script, String delim, List<String> statements);1347368808;Split an SQL script into separate statements delimited with the provided delimiter_character. Each individual statement will be added to the provided {@code List}.__@param script the SQL script_@param delim character delimiting each statement (typically a '_' character)_@param statements the List that will contain the individual statements;private void splitSqlScript(String script, String delim, List<String> statements) {_		StringBuilder sb = new StringBuilder()__		boolean inLiteral = false__		boolean inEscape = false__		char[] content = script.toCharArray()__		for (int i = 0_ i < script.length()_ i++) {_			char c = content[i]__			if (inEscape) {_				inEscape = false__				sb.append(c)__				continue__			}_			_			if (c == '\\') {_				inEscape = true__				sb.append(c)__				continue__			}_			if (c == '\'') {_				inLiteral = !inLiteral__			}_			if (!inLiteral) {_				if (startsWithDelimiter(script, i, delim)) {_					if (sb.length() > 0) {_						statements.add(sb.toString())__						sb = new StringBuilder()__					}_					i += delim.length() - 1__					continue__				}_				else if (c == '\n' || c == '\t') {_					c = ' '__				}_			}_			sb.append(c)__		}_		if (StringUtils.hasText(sb)) {_			statements.add(sb.toString())__		}_	};split,an,sql,script,into,separate,statements,delimited,with,the,provided,delimiter,character,each,individual,statement,will,be,added,to,the,provided,code,list,param,script,the,sql,script,param,delim,character,delimiting,each,statement,typically,a,character,param,statements,the,list,that,will,contain,the,individual,statements;private,void,split,sql,script,string,script,string,delim,list,string,statements,string,builder,sb,new,string,builder,boolean,in,literal,false,boolean,in,escape,false,char,content,script,to,char,array,for,int,i,0,i,script,length,i,char,c,content,i,if,in,escape,in,escape,false,sb,append,c,continue,if,c,in,escape,true,sb,append,c,continue,if,c,in,literal,in,literal,if,in,literal,if,starts,with,delimiter,script,i,delim,if,sb,length,0,statements,add,sb,to,string,sb,new,string,builder,i,delim,length,1,continue,else,if,c,n,c,t,c,sb,append,c,if,string,utils,has,text,sb,statements,add,sb,to,string
ResourceDatabasePopulator -> private void splitSqlScript(String script, String delim, List<String> statements);1349904863;Split an SQL script into separate statements delimited with the provided delimiter_character. Each individual statement will be added to the provided {@code List}._@param script the SQL script_@param delim character delimiting each statement (typically a '_' character)_@param statements the List that will contain the individual statements;private void splitSqlScript(String script, String delim, List<String> statements) {_		StringBuilder sb = new StringBuilder()__		boolean inLiteral = false__		boolean inEscape = false__		char[] content = script.toCharArray()__		for (int i = 0_ i < script.length()_ i++) {_			char c = content[i]__			if (inEscape) {_				inEscape = false__				sb.append(c)__				continue__			}_			_			if (c == '\\') {_				inEscape = true__				sb.append(c)__				continue__			}_			if (c == '\'') {_				inLiteral = !inLiteral__			}_			if (!inLiteral) {_				if (startsWithDelimiter(script, i, delim)) {_					if (sb.length() > 0) {_						statements.add(sb.toString())__						sb = new StringBuilder()__					}_					i += delim.length() - 1__					continue__				}_				else if (c == '\n' || c == '\t') {_					c = ' '__				}_			}_			sb.append(c)__		}_		if (StringUtils.hasText(sb)) {_			statements.add(sb.toString())__		}_	};split,an,sql,script,into,separate,statements,delimited,with,the,provided,delimiter,character,each,individual,statement,will,be,added,to,the,provided,code,list,param,script,the,sql,script,param,delim,character,delimiting,each,statement,typically,a,character,param,statements,the,list,that,will,contain,the,individual,statements;private,void,split,sql,script,string,script,string,delim,list,string,statements,string,builder,sb,new,string,builder,boolean,in,literal,false,boolean,in,escape,false,char,content,script,to,char,array,for,int,i,0,i,script,length,i,char,c,content,i,if,in,escape,in,escape,false,sb,append,c,continue,if,c,in,escape,true,sb,append,c,continue,if,c,in,literal,in,literal,if,in,literal,if,starts,with,delimiter,script,i,delim,if,sb,length,0,statements,add,sb,to,string,sb,new,string,builder,i,delim,length,1,continue,else,if,c,n,c,t,c,sb,append,c,if,string,utils,has,text,sb,statements,add,sb,to,string
ResourceDatabasePopulator -> private void splitSqlScript(String script, String delim, List<String> statements);1352157731;Split an SQL script into separate statements delimited with the provided delimiter_character. Each individual statement will be added to the provided {@code List}._@param script the SQL script_@param delim character delimiting each statement (typically a '_' character)_@param statements the List that will contain the individual statements;private void splitSqlScript(String script, String delim, List<String> statements) {_		StringBuilder sb = new StringBuilder()__		boolean inLiteral = false__		boolean inEscape = false__		char[] content = script.toCharArray()__		for (int i = 0_ i < script.length()_ i++) {_			char c = content[i]__			if (inEscape) {_				inEscape = false__				sb.append(c)__				continue__			}_			_			if (c == '\\') {_				inEscape = true__				sb.append(c)__				continue__			}_			if (c == '\'') {_				inLiteral = !inLiteral__			}_			if (!inLiteral) {_				if (startsWithDelimiter(script, i, delim)) {_					if (sb.length() > 0) {_						statements.add(sb.toString())__						sb = new StringBuilder()__					}_					i += delim.length() - 1__					continue__				}_				else if (c == '\n' || c == '\t') {_					c = ' '__				}_			}_			sb.append(c)__		}_		if (StringUtils.hasText(sb)) {_			statements.add(sb.toString())__		}_	};split,an,sql,script,into,separate,statements,delimited,with,the,provided,delimiter,character,each,individual,statement,will,be,added,to,the,provided,code,list,param,script,the,sql,script,param,delim,character,delimiting,each,statement,typically,a,character,param,statements,the,list,that,will,contain,the,individual,statements;private,void,split,sql,script,string,script,string,delim,list,string,statements,string,builder,sb,new,string,builder,boolean,in,literal,false,boolean,in,escape,false,char,content,script,to,char,array,for,int,i,0,i,script,length,i,char,c,content,i,if,in,escape,in,escape,false,sb,append,c,continue,if,c,in,escape,true,sb,append,c,continue,if,c,in,literal,in,literal,if,in,literal,if,starts,with,delimiter,script,i,delim,if,sb,length,0,statements,add,sb,to,string,sb,new,string,builder,i,delim,length,1,continue,else,if,c,n,c,t,c,sb,append,c,if,string,utils,has,text,sb,statements,add,sb,to,string
ResourceDatabasePopulator -> private void splitSqlScript(String script, String delim, List<String> statements);1352158898;Split an SQL script into separate statements delimited with the provided delimiter_character. Each individual statement will be added to the provided {@code List}._@param script the SQL script_@param delim character delimiting each statement (typically a '_' character)_@param statements the List that will contain the individual statements;private void splitSqlScript(String script, String delim, List<String> statements) {_		StringBuilder sb = new StringBuilder()__		boolean inLiteral = false__		boolean inEscape = false__		char[] content = script.toCharArray()__		for (int i = 0_ i < script.length()_ i++) {_			char c = content[i]__			if (inEscape) {_				inEscape = false__				sb.append(c)__				continue__			}_			_			if (c == '\\') {_				inEscape = true__				sb.append(c)__				continue__			}_			if (c == '\'') {_				inLiteral = !inLiteral__			}_			if (!inLiteral) {_				if (startsWithDelimiter(script, i, delim)) {_					if (sb.length() > 0) {_						statements.add(sb.toString())__						sb = new StringBuilder()__					}_					i += delim.length() - 1__					continue__				}_				else if (c == '\n' || c == '\t') {_					c = ' '__				}_			}_			sb.append(c)__		}_		if (StringUtils.hasText(sb)) {_			statements.add(sb.toString())__		}_	};split,an,sql,script,into,separate,statements,delimited,with,the,provided,delimiter,character,each,individual,statement,will,be,added,to,the,provided,code,list,param,script,the,sql,script,param,delim,character,delimiting,each,statement,typically,a,character,param,statements,the,list,that,will,contain,the,individual,statements;private,void,split,sql,script,string,script,string,delim,list,string,statements,string,builder,sb,new,string,builder,boolean,in,literal,false,boolean,in,escape,false,char,content,script,to,char,array,for,int,i,0,i,script,length,i,char,c,content,i,if,in,escape,in,escape,false,sb,append,c,continue,if,c,in,escape,true,sb,append,c,continue,if,c,in,literal,in,literal,if,in,literal,if,starts,with,delimiter,script,i,delim,if,sb,length,0,statements,add,sb,to,string,sb,new,string,builder,i,delim,length,1,continue,else,if,c,n,c,t,c,sb,append,c,if,string,utils,has,text,sb,statements,add,sb,to,string
ResourceDatabasePopulator -> public void addScripts(Resource... scripts);1395183391;Add multiple scripts to execute to initialize or populate the database._@param scripts the scripts to execute;public void addScripts(Resource... scripts) {_		this.scripts.addAll(Arrays.asList(scripts))__	};add,multiple,scripts,to,execute,to,initialize,or,populate,the,database,param,scripts,the,scripts,to,execute;public,void,add,scripts,resource,scripts,this,scripts,add,all,arrays,as,list,scripts
ResourceDatabasePopulator -> public void addScripts(Resource... scripts);1396191708;Add multiple scripts to execute to initialize or populate the database._@param scripts the scripts to execute;public void addScripts(Resource... scripts) {_		this.scripts.addAll(Arrays.asList(scripts))__	};add,multiple,scripts,to,execute,to,initialize,or,populate,the,database,param,scripts,the,scripts,to,execute;public,void,add,scripts,resource,scripts,this,scripts,add,all,arrays,as,list,scripts
ResourceDatabasePopulator -> public void addScripts(Resource... scripts);1397231067;Add multiple scripts to execute to initialize or populate the database._@param scripts the scripts to execute;public void addScripts(Resource... scripts) {_		this.scripts.addAll(Arrays.asList(scripts))__	};add,multiple,scripts,to,execute,to,initialize,or,populate,the,database,param,scripts,the,scripts,to,execute;public,void,add,scripts,resource,scripts,this,scripts,add,all,arrays,as,list,scripts
ResourceDatabasePopulator -> public void addScripts(Resource... scripts);1397385067;Add multiple scripts to execute to initialize or populate the database._@param scripts the scripts to execute;public void addScripts(Resource... scripts) {_		this.scripts.addAll(Arrays.asList(scripts))__	};add,multiple,scripts,to,execute,to,initialize,or,populate,the,database,param,scripts,the,scripts,to,execute;public,void,add,scripts,resource,scripts,this,scripts,add,all,arrays,as,list,scripts
ResourceDatabasePopulator -> public void addScripts(Resource... scripts);1397393502;Add multiple scripts to execute to initialize or populate the database._@param scripts the scripts to execute_ never {@code null};public void addScripts(Resource... scripts) {_		assertContentsOfScriptArray(scripts)__		getScripts().addAll(Arrays.asList(scripts))__	};add,multiple,scripts,to,execute,to,initialize,or,populate,the,database,param,scripts,the,scripts,to,execute,never,code,null;public,void,add,scripts,resource,scripts,assert,contents,of,script,array,scripts,get,scripts,add,all,arrays,as,list,scripts
ResourceDatabasePopulator -> public void addScripts(Resource... scripts);1397394407;Add multiple scripts to execute to initialize or populate the database._@param scripts the scripts to execute_ never {@code null};public void addScripts(Resource... scripts) {_		assertContentsOfScriptArray(scripts)__		getScripts().addAll(Arrays.asList(scripts))__	};add,multiple,scripts,to,execute,to,initialize,or,populate,the,database,param,scripts,the,scripts,to,execute,never,code,null;public,void,add,scripts,resource,scripts,assert,contents,of,script,array,scripts,get,scripts,add,all,arrays,as,list,scripts
ResourceDatabasePopulator -> public void addScripts(Resource... scripts);1401991965;Add multiple scripts to execute to initialize or populate the database._@param scripts the scripts to execute_ never {@code null};public void addScripts(Resource... scripts) {_		assertContentsOfScriptArray(scripts)__		getScripts().addAll(Arrays.asList(scripts))__	};add,multiple,scripts,to,execute,to,initialize,or,populate,the,database,param,scripts,the,scripts,to,execute,never,code,null;public,void,add,scripts,resource,scripts,assert,contents,of,script,array,scripts,get,scripts,add,all,arrays,as,list,scripts
ResourceDatabasePopulator -> public void addScripts(Resource... scripts);1402143225;Add multiple scripts to execute to initialize or clean up the database._@param scripts the scripts to execute_ never {@code null};public void addScripts(Resource... scripts) {_		assertContentsOfScriptArray(scripts)__		getScripts().addAll(Arrays.asList(scripts))__	};add,multiple,scripts,to,execute,to,initialize,or,clean,up,the,database,param,scripts,the,scripts,to,execute,never,code,null;public,void,add,scripts,resource,scripts,assert,contents,of,script,array,scripts,get,scripts,add,all,arrays,as,list,scripts
ResourceDatabasePopulator -> public void addScripts(Resource... scripts);1413848647;Add multiple scripts to execute to initialize or clean up the database._@param scripts the scripts to execute_ never {@code null};public void addScripts(Resource... scripts) {_		assertContentsOfScriptArray(scripts)__		getScripts().addAll(Arrays.asList(scripts))__	};add,multiple,scripts,to,execute,to,initialize,or,clean,up,the,database,param,scripts,the,scripts,to,execute,never,code,null;public,void,add,scripts,resource,scripts,assert,contents,of,script,array,scripts,get,scripts,add,all,arrays,as,list,scripts
ResourceDatabasePopulator -> public void addScripts(Resource... scripts);1455813442;Add multiple scripts to execute to initialize or clean up the database._@param scripts the scripts to execute (never {@code null});public void addScripts(Resource... scripts) {_		assertContentsOfScriptArray(scripts)__		getScripts().addAll(Arrays.asList(scripts))__	};add,multiple,scripts,to,execute,to,initialize,or,clean,up,the,database,param,scripts,the,scripts,to,execute,never,code,null;public,void,add,scripts,resource,scripts,assert,contents,of,script,array,scripts,get,scripts,add,all,arrays,as,list,scripts
ResourceDatabasePopulator -> public void addScripts(Resource... scripts);1467730834;Add multiple scripts to execute to initialize or clean up the database._@param scripts the scripts to execute (never {@code null});public void addScripts(Resource... scripts) {_		assertContentsOfScriptArray(scripts)__		getScripts().addAll(Arrays.asList(scripts))__	};add,multiple,scripts,to,execute,to,initialize,or,clean,up,the,database,param,scripts,the,scripts,to,execute,never,code,null;public,void,add,scripts,resource,scripts,assert,contents,of,script,array,scripts,get,scripts,add,all,arrays,as,list,scripts
ResourceDatabasePopulator -> public void addScripts(Resource... scripts);1477691361;Add multiple scripts to execute to initialize or clean up the database._@param scripts the scripts to execute (never {@code null});public void addScripts(Resource... scripts) {_		assertContentsOfScriptArray(scripts)__		this.scripts.addAll(Arrays.asList(scripts))__	};add,multiple,scripts,to,execute,to,initialize,or,clean,up,the,database,param,scripts,the,scripts,to,execute,never,code,null;public,void,add,scripts,resource,scripts,assert,contents,of,script,array,scripts,this,scripts,add,all,arrays,as,list,scripts
ResourceDatabasePopulator -> public void addScripts(Resource... scripts);1495868221;Add multiple scripts to execute to initialize or clean up the database._@param scripts the scripts to execute (never {@code null});public void addScripts(Resource... scripts) {_		assertContentsOfScriptArray(scripts)__		this.scripts.addAll(Arrays.asList(scripts))__	};add,multiple,scripts,to,execute,to,initialize,or,clean,up,the,database,param,scripts,the,scripts,to,execute,never,code,null;public,void,add,scripts,resource,scripts,assert,contents,of,script,array,scripts,this,scripts,add,all,arrays,as,list,scripts
ResourceDatabasePopulator -> public void addScripts(Resource... scripts);1498780456;Add multiple scripts to execute to initialize or clean up the database._@param scripts the scripts to execute (never {@code null});public void addScripts(Resource... scripts) {_		assertContentsOfScriptArray(scripts)__		this.scripts.addAll(Arrays.asList(scripts))__	};add,multiple,scripts,to,execute,to,initialize,or,clean,up,the,database,param,scripts,the,scripts,to,execute,never,code,null;public,void,add,scripts,resource,scripts,assert,contents,of,script,array,scripts,this,scripts,add,all,arrays,as,list,scripts
ResourceDatabasePopulator -> public void addScripts(Resource... scripts);1549646187;Add multiple scripts to execute to initialize or clean up the database._@param scripts the scripts to execute (never {@code null});public void addScripts(Resource... scripts) {_		assertContentsOfScriptArray(scripts)__		this.scripts.addAll(Arrays.asList(scripts))__	};add,multiple,scripts,to,execute,to,initialize,or,clean,up,the,database,param,scripts,the,scripts,to,execute,never,code,null;public,void,add,scripts,resource,scripts,assert,contents,of,script,array,scripts,this,scripts,add,all,arrays,as,list,scripts
ResourceDatabasePopulator -> public void addScript(Resource script);1328020251;Add a script to execute to populate the database._@param script the path to a SQL script;public void addScript(Resource script) {_		this.scripts.add(script)__	};add,a,script,to,execute,to,populate,the,database,param,script,the,path,to,a,sql,script;public,void,add,script,resource,script,this,scripts,add,script
ResourceDatabasePopulator -> public void addScript(Resource script);1329142650;Add a script to execute to populate the database._@param script the path to a SQL script;public void addScript(Resource script) {_		this.scripts.add(script)__	};add,a,script,to,execute,to,populate,the,database,param,script,the,path,to,a,sql,script;public,void,add,script,resource,script,this,scripts,add,script
ResourceDatabasePopulator -> public void addScript(Resource script);1347368808;Add a script to execute to populate the database._@param script the path to a SQL script;public void addScript(Resource script) {_		this.scripts.add(script)__	};add,a,script,to,execute,to,populate,the,database,param,script,the,path,to,a,sql,script;public,void,add,script,resource,script,this,scripts,add,script
ResourceDatabasePopulator -> public void addScript(Resource script);1349904863;Add a script to execute to populate the database._@param script the path to a SQL script;public void addScript(Resource script) {_		this.scripts.add(script)__	};add,a,script,to,execute,to,populate,the,database,param,script,the,path,to,a,sql,script;public,void,add,script,resource,script,this,scripts,add,script
ResourceDatabasePopulator -> public void addScript(Resource script);1352157731;Add a script to execute to populate the database._@param script the path to a SQL script;public void addScript(Resource script) {_		this.scripts.add(script)__	};add,a,script,to,execute,to,populate,the,database,param,script,the,path,to,a,sql,script;public,void,add,script,resource,script,this,scripts,add,script
ResourceDatabasePopulator -> public void addScript(Resource script);1352158898;Add a script to execute to populate the database._@param script the path to a SQL script;public void addScript(Resource script) {_		this.scripts.add(script)__	};add,a,script,to,execute,to,populate,the,database,param,script,the,path,to,a,sql,script;public,void,add,script,resource,script,this,scripts,add,script
ResourceDatabasePopulator -> public void addScript(Resource script);1354725684;Add a script to execute to populate the database._@param script the path to a SQL script;public void addScript(Resource script) {_		this.scripts.add(script)__	};add,a,script,to,execute,to,populate,the,database,param,script,the,path,to,a,sql,script;public,void,add,script,resource,script,this,scripts,add,script
ResourceDatabasePopulator -> public void addScript(Resource script);1355351963;Add a script to execute to populate the database._@param script the path to a SQL script;public void addScript(Resource script) {_		this.scripts.add(script)__	};add,a,script,to,execute,to,populate,the,database,param,script,the,path,to,a,sql,script;public,void,add,script,resource,script,this,scripts,add,script
ResourceDatabasePopulator -> public void addScript(Resource script);1356735495;Add a script to execute to populate the database._@param script the path to a SQL script;public void addScript(Resource script) {_		this.scripts.add(script)__	};add,a,script,to,execute,to,populate,the,database,param,script,the,path,to,a,sql,script;public,void,add,script,resource,script,this,scripts,add,script
ResourceDatabasePopulator -> public void addScript(Resource script);1357119239;Add a script to execute to populate the database._@param script the path to a SQL script;public void addScript(Resource script) {_		this.scripts.add(script)__	};add,a,script,to,execute,to,populate,the,database,param,script,the,path,to,a,sql,script;public,void,add,script,resource,script,this,scripts,add,script
ResourceDatabasePopulator -> public void addScript(Resource script);1368482696;Add a script to execute to populate the database._@param script the path to a SQL script;public void addScript(Resource script) {_		this.scripts.add(script)__	};add,a,script,to,execute,to,populate,the,database,param,script,the,path,to,a,sql,script;public,void,add,script,resource,script,this,scripts,add,script
ResourceDatabasePopulator -> public void addScript(Resource script);1387832430;Add a script to execute to populate the database._@param script the path to a SQL script;public void addScript(Resource script) {_		this.scripts.add(script)__	};add,a,script,to,execute,to,populate,the,database,param,script,the,path,to,a,sql,script;public,void,add,script,resource,script,this,scripts,add,script
ResourceDatabasePopulator -> public void addScript(Resource script);1394708749;Add a script to execute to populate the database._@param script the path to an SQL script;public void addScript(Resource script) {_		this.scripts.add(script)__	};add,a,script,to,execute,to,populate,the,database,param,script,the,path,to,an,sql,script;public,void,add,script,resource,script,this,scripts,add,script
ResourceDatabasePopulator -> public void addScript(Resource script);1394714705;Add a script to execute to populate the database._@param script the path to an SQL script;public void addScript(Resource script) {_		this.scripts.add(script)__	};add,a,script,to,execute,to,populate,the,database,param,script,the,path,to,an,sql,script;public,void,add,script,resource,script,this,scripts,add,script
ResourceDatabasePopulator -> public void addScript(Resource script);1394987641;Add a script to execute to populate the database._@param script the path to an SQL script;public void addScript(Resource script) {_		this.scripts.add(script)__	};add,a,script,to,execute,to,populate,the,database,param,script,the,path,to,an,sql,script;public,void,add,script,resource,script,this,scripts,add,script
ResourceDatabasePopulator -> public void addScript(Resource script);1395055592;Add a script to execute to populate the database._@param script the path to an SQL script;public void addScript(Resource script) {_		this.scripts.add(script)__	};add,a,script,to,execute,to,populate,the,database,param,script,the,path,to,an,sql,script;public,void,add,script,resource,script,this,scripts,add,script
ResourceDatabasePopulator -> public void addScript(Resource script);1395068709;Add a script to execute to populate the database._@param script the path to an SQL script;public void addScript(Resource script) {_		this.scripts.add(script)__	};add,a,script,to,execute,to,populate,the,database,param,script,the,path,to,an,sql,script;public,void,add,script,resource,script,this,scripts,add,script
ResourceDatabasePopulator -> public void addScript(Resource script);1395183391;Add a script to execute to initialize or populate the database._@param script the path to an SQL script;public void addScript(Resource script) {_		this.scripts.add(script)__	};add,a,script,to,execute,to,initialize,or,populate,the,database,param,script,the,path,to,an,sql,script;public,void,add,script,resource,script,this,scripts,add,script
ResourceDatabasePopulator -> public void addScript(Resource script);1396191708;Add a script to execute to initialize or populate the database._@param script the path to an SQL script;public void addScript(Resource script) {_		this.scripts.add(script)__	};add,a,script,to,execute,to,initialize,or,populate,the,database,param,script,the,path,to,an,sql,script;public,void,add,script,resource,script,this,scripts,add,script
ResourceDatabasePopulator -> public void addScript(Resource script);1397231067;Add a script to execute to initialize or populate the database._@param script the path to an SQL script;public void addScript(Resource script) {_		this.scripts.add(script)__	};add,a,script,to,execute,to,initialize,or,populate,the,database,param,script,the,path,to,an,sql,script;public,void,add,script,resource,script,this,scripts,add,script
ResourceDatabasePopulator -> public void addScript(Resource script);1397385067;Add a script to execute to initialize or populate the database._@param script the path to an SQL script;public void addScript(Resource script) {_		this.scripts.add(script)__	};add,a,script,to,execute,to,initialize,or,populate,the,database,param,script,the,path,to,an,sql,script;public,void,add,script,resource,script,this,scripts,add,script
ResourceDatabasePopulator -> public void addScript(Resource script);1397393502;Add a script to execute to initialize or populate the database._@param script the path to an SQL script_ never {@code null};public void addScript(Resource script) {_		Assert.notNull(script, "script must not be null")__		getScripts().add(script)__	};add,a,script,to,execute,to,initialize,or,populate,the,database,param,script,the,path,to,an,sql,script,never,code,null;public,void,add,script,resource,script,assert,not,null,script,script,must,not,be,null,get,scripts,add,script
ResourceDatabasePopulator -> public void addScript(Resource script);1397394407;Add a script to execute to initialize or populate the database._@param script the path to an SQL script_ never {@code null};public void addScript(Resource script) {_		Assert.notNull(script, "script must not be null")__		getScripts().add(script)__	};add,a,script,to,execute,to,initialize,or,populate,the,database,param,script,the,path,to,an,sql,script,never,code,null;public,void,add,script,resource,script,assert,not,null,script,script,must,not,be,null,get,scripts,add,script
ResourceDatabasePopulator -> public void addScript(Resource script);1401991965;Add a script to execute to initialize or populate the database._@param script the path to an SQL script_ never {@code null};public void addScript(Resource script) {_		Assert.notNull(script, "script must not be null")__		getScripts().add(script)__	};add,a,script,to,execute,to,initialize,or,populate,the,database,param,script,the,path,to,an,sql,script,never,code,null;public,void,add,script,resource,script,assert,not,null,script,script,must,not,be,null,get,scripts,add,script
ResourceDatabasePopulator -> public void addScript(Resource script);1402143225;Add a script to execute to initialize or clean up the database._@param script the path to an SQL script_ never {@code null};public void addScript(Resource script) {_		Assert.notNull(script, "Script must not be null")__		getScripts().add(script)__	};add,a,script,to,execute,to,initialize,or,clean,up,the,database,param,script,the,path,to,an,sql,script,never,code,null;public,void,add,script,resource,script,assert,not,null,script,script,must,not,be,null,get,scripts,add,script
ResourceDatabasePopulator -> public void addScript(Resource script);1413848647;Add a script to execute to initialize or clean up the database._@param script the path to an SQL script_ never {@code null};public void addScript(Resource script) {_		Assert.notNull(script, "Script must not be null")__		getScripts().add(script)__	};add,a,script,to,execute,to,initialize,or,clean,up,the,database,param,script,the,path,to,an,sql,script,never,code,null;public,void,add,script,resource,script,assert,not,null,script,script,must,not,be,null,get,scripts,add,script
ResourceDatabasePopulator -> public void addScript(Resource script);1455813442;Add a script to execute to initialize or clean up the database._@param script the path to an SQL script (never {@code null});public void addScript(Resource script) {_		Assert.notNull(script, "Script must not be null")__		getScripts().add(script)__	};add,a,script,to,execute,to,initialize,or,clean,up,the,database,param,script,the,path,to,an,sql,script,never,code,null;public,void,add,script,resource,script,assert,not,null,script,script,must,not,be,null,get,scripts,add,script
ResourceDatabasePopulator -> public void addScript(Resource script);1467730834;Add a script to execute to initialize or clean up the database._@param script the path to an SQL script (never {@code null});public void addScript(Resource script) {_		Assert.notNull(script, "Script must not be null")__		getScripts().add(script)__	};add,a,script,to,execute,to,initialize,or,clean,up,the,database,param,script,the,path,to,an,sql,script,never,code,null;public,void,add,script,resource,script,assert,not,null,script,script,must,not,be,null,get,scripts,add,script
ResourceDatabasePopulator -> public void addScript(Resource script);1477691361;Add a script to execute to initialize or clean up the database._@param script the path to an SQL script (never {@code null});public void addScript(Resource script) {_		Assert.notNull(script, "Script must not be null")__		this.scripts.add(script)__	};add,a,script,to,execute,to,initialize,or,clean,up,the,database,param,script,the,path,to,an,sql,script,never,code,null;public,void,add,script,resource,script,assert,not,null,script,script,must,not,be,null,this,scripts,add,script
ResourceDatabasePopulator -> public void addScript(Resource script);1495868221;Add a script to execute to initialize or clean up the database._@param script the path to an SQL script (never {@code null});public void addScript(Resource script) {_		Assert.notNull(script, "Script must not be null")__		this.scripts.add(script)__	};add,a,script,to,execute,to,initialize,or,clean,up,the,database,param,script,the,path,to,an,sql,script,never,code,null;public,void,add,script,resource,script,assert,not,null,script,script,must,not,be,null,this,scripts,add,script
ResourceDatabasePopulator -> public void addScript(Resource script);1498780456;Add a script to execute to initialize or clean up the database._@param script the path to an SQL script (never {@code null});public void addScript(Resource script) {_		Assert.notNull(script, "Script must not be null")__		this.scripts.add(script)__	};add,a,script,to,execute,to,initialize,or,clean,up,the,database,param,script,the,path,to,an,sql,script,never,code,null;public,void,add,script,resource,script,assert,not,null,script,script,must,not,be,null,this,scripts,add,script
ResourceDatabasePopulator -> public void addScript(Resource script);1549646187;Add a script to execute to initialize or clean up the database._@param script the path to an SQL script (never {@code null});public void addScript(Resource script) {_		Assert.notNull(script, "Script must not be null")__		this.scripts.add(script)__	};add,a,script,to,execute,to,initialize,or,clean,up,the,database,param,script,the,path,to,an,sql,script,never,code,null;public,void,add,script,resource,script,assert,not,null,script,script,must,not,be,null,this,scripts,add,script
ResourceDatabasePopulator -> public void execute(DataSource dataSource) throws ScriptException;1396191708;Execute this {@code DatabasePopulator} against the given {@link DataSource}._<p>Delegates to {@link DatabasePopulatorUtils#execute}._@param dataSource the {@code DataSource} to execute against_@throws ScriptException if an error occurs_@since 4.1_@see #populate(Connection);public void execute(DataSource dataSource) throws ScriptException {_		DatabasePopulatorUtils.execute(this, dataSource)__	};execute,this,code,database,populator,against,the,given,link,data,source,p,delegates,to,link,database,populator,utils,execute,param,data,source,the,code,data,source,to,execute,against,throws,script,exception,if,an,error,occurs,since,4,1,see,populate,connection;public,void,execute,data,source,data,source,throws,script,exception,database,populator,utils,execute,this,data,source
ResourceDatabasePopulator -> public void execute(DataSource dataSource) throws ScriptException;1397231067;Execute this {@code DatabasePopulator} against the given {@link DataSource}._<p>Delegates to {@link DatabasePopulatorUtils#execute}._@param dataSource the {@code DataSource} to execute against_@throws ScriptException if an error occurs_@since 4.1_@see #populate(Connection);public void execute(DataSource dataSource) throws ScriptException {_		DatabasePopulatorUtils.execute(this, dataSource)__	};execute,this,code,database,populator,against,the,given,link,data,source,p,delegates,to,link,database,populator,utils,execute,param,data,source,the,code,data,source,to,execute,against,throws,script,exception,if,an,error,occurs,since,4,1,see,populate,connection;public,void,execute,data,source,data,source,throws,script,exception,database,populator,utils,execute,this,data,source
ResourceDatabasePopulator -> public void execute(DataSource dataSource) throws ScriptException;1397385067;Execute this {@code ResourceDatabasePopulator} against the given_{@link DataSource}._<p>Delegates to {@link DatabasePopulatorUtils#execute}._@param dataSource the {@code DataSource} to execute against_@throws ScriptException if an error occurs_@since 4.1_@see #populate(Connection);public void execute(DataSource dataSource) throws ScriptException {_		DatabasePopulatorUtils.execute(this, dataSource)__	};execute,this,code,resource,database,populator,against,the,given,link,data,source,p,delegates,to,link,database,populator,utils,execute,param,data,source,the,code,data,source,to,execute,against,throws,script,exception,if,an,error,occurs,since,4,1,see,populate,connection;public,void,execute,data,source,data,source,throws,script,exception,database,populator,utils,execute,this,data,source
ResourceDatabasePopulator -> public void execute(DataSource dataSource) throws ScriptException;1397393502;Execute this {@code ResourceDatabasePopulator} against the given_{@link DataSource}._<p>Delegates to {@link DatabasePopulatorUtils#execute}._@param dataSource the {@code DataSource} to execute against_ never {@code null}_@throws ScriptException if an error occurs_@since 4.1_@see #populate(Connection);public void execute(DataSource dataSource) throws ScriptException {_		Assert.notNull(dataSource, "DataSource must not be null")__		DatabasePopulatorUtils.execute(this, dataSource)__	};execute,this,code,resource,database,populator,against,the,given,link,data,source,p,delegates,to,link,database,populator,utils,execute,param,data,source,the,code,data,source,to,execute,against,never,code,null,throws,script,exception,if,an,error,occurs,since,4,1,see,populate,connection;public,void,execute,data,source,data,source,throws,script,exception,assert,not,null,data,source,data,source,must,not,be,null,database,populator,utils,execute,this,data,source
ResourceDatabasePopulator -> public void execute(DataSource dataSource) throws ScriptException;1397394407;Execute this {@code ResourceDatabasePopulator} against the given_{@link DataSource}._<p>Delegates to {@link DatabasePopulatorUtils#execute}._@param dataSource the {@code DataSource} to execute against_ never {@code null}_@throws ScriptException if an error occurs_@since 4.1_@see #populate(Connection);public void execute(DataSource dataSource) throws ScriptException {_		Assert.notNull(dataSource, "DataSource must not be null")__		DatabasePopulatorUtils.execute(this, dataSource)__	};execute,this,code,resource,database,populator,against,the,given,link,data,source,p,delegates,to,link,database,populator,utils,execute,param,data,source,the,code,data,source,to,execute,against,never,code,null,throws,script,exception,if,an,error,occurs,since,4,1,see,populate,connection;public,void,execute,data,source,data,source,throws,script,exception,assert,not,null,data,source,data,source,must,not,be,null,database,populator,utils,execute,this,data,source
ResourceDatabasePopulator -> public void execute(DataSource dataSource) throws ScriptException;1401991965;Execute this {@code ResourceDatabasePopulator} against the given_{@link DataSource}._<p>Delegates to {@link DatabasePopulatorUtils#execute}._@param dataSource the {@code DataSource} to execute against_ never {@code null}_@throws ScriptException if an error occurs_@since 4.1_@see #populate(Connection);public void execute(DataSource dataSource) throws ScriptException {_		Assert.notNull(dataSource, "DataSource must not be null")__		DatabasePopulatorUtils.execute(this, dataSource)__	};execute,this,code,resource,database,populator,against,the,given,link,data,source,p,delegates,to,link,database,populator,utils,execute,param,data,source,the,code,data,source,to,execute,against,never,code,null,throws,script,exception,if,an,error,occurs,since,4,1,see,populate,connection;public,void,execute,data,source,data,source,throws,script,exception,assert,not,null,data,source,data,source,must,not,be,null,database,populator,utils,execute,this,data,source
ResourceDatabasePopulator -> public void execute(DataSource dataSource) throws ScriptException;1402143225;Execute this {@code ResourceDatabasePopulator} against the given_{@link DataSource}._<p>Delegates to {@link DatabasePopulatorUtils#execute}._@param dataSource the {@code DataSource} to execute against_ never {@code null}_@throws ScriptException if an error occurs_@since 4.1_@see #populate(Connection);public void execute(DataSource dataSource) throws ScriptException {_		Assert.notNull(dataSource, "DataSource must not be null")__		DatabasePopulatorUtils.execute(this, dataSource)__	};execute,this,code,resource,database,populator,against,the,given,link,data,source,p,delegates,to,link,database,populator,utils,execute,param,data,source,the,code,data,source,to,execute,against,never,code,null,throws,script,exception,if,an,error,occurs,since,4,1,see,populate,connection;public,void,execute,data,source,data,source,throws,script,exception,assert,not,null,data,source,data,source,must,not,be,null,database,populator,utils,execute,this,data,source
ResourceDatabasePopulator -> public void execute(DataSource dataSource) throws ScriptException;1413848647;Execute this {@code ResourceDatabasePopulator} against the given_{@link DataSource}._<p>Delegates to {@link DatabasePopulatorUtils#execute}._@param dataSource the {@code DataSource} to execute against_ never {@code null}_@throws ScriptException if an error occurs_@since 4.1_@see #populate(Connection);public void execute(DataSource dataSource) throws ScriptException {_		Assert.notNull(dataSource, "DataSource must not be null")__		DatabasePopulatorUtils.execute(this, dataSource)__	};execute,this,code,resource,database,populator,against,the,given,link,data,source,p,delegates,to,link,database,populator,utils,execute,param,data,source,the,code,data,source,to,execute,against,never,code,null,throws,script,exception,if,an,error,occurs,since,4,1,see,populate,connection;public,void,execute,data,source,data,source,throws,script,exception,assert,not,null,data,source,data,source,must,not,be,null,database,populator,utils,execute,this,data,source
ResourceDatabasePopulator -> public void execute(DataSource dataSource) throws ScriptException;1455813442;Execute this {@code ResourceDatabasePopulator} against the given_{@link DataSource}._<p>Delegates to {@link DatabasePopulatorUtils#execute}._@param dataSource the {@code DataSource} to execute against (never {@code null})_@throws ScriptException if an error occurs_@since 4.1_@see #populate(Connection);public void execute(DataSource dataSource) throws ScriptException {_		Assert.notNull(dataSource, "DataSource must not be null")__		DatabasePopulatorUtils.execute(this, dataSource)__	};execute,this,code,resource,database,populator,against,the,given,link,data,source,p,delegates,to,link,database,populator,utils,execute,param,data,source,the,code,data,source,to,execute,against,never,code,null,throws,script,exception,if,an,error,occurs,since,4,1,see,populate,connection;public,void,execute,data,source,data,source,throws,script,exception,assert,not,null,data,source,data,source,must,not,be,null,database,populator,utils,execute,this,data,source
ResourceDatabasePopulator -> public void execute(DataSource dataSource) throws ScriptException;1467730834;Execute this {@code ResourceDatabasePopulator} against the given_{@link DataSource}._<p>Delegates to {@link DatabasePopulatorUtils#execute}._@param dataSource the {@code DataSource} to execute against (never {@code null})_@throws ScriptException if an error occurs_@since 4.1_@see #populate(Connection);public void execute(DataSource dataSource) throws ScriptException {_		Assert.notNull(dataSource, "DataSource must not be null")__		DatabasePopulatorUtils.execute(this, dataSource)__	};execute,this,code,resource,database,populator,against,the,given,link,data,source,p,delegates,to,link,database,populator,utils,execute,param,data,source,the,code,data,source,to,execute,against,never,code,null,throws,script,exception,if,an,error,occurs,since,4,1,see,populate,connection;public,void,execute,data,source,data,source,throws,script,exception,assert,not,null,data,source,data,source,must,not,be,null,database,populator,utils,execute,this,data,source
ResourceDatabasePopulator -> public void execute(DataSource dataSource) throws ScriptException;1477691361;Execute this {@code ResourceDatabasePopulator} against the given_{@link DataSource}._<p>Delegates to {@link DatabasePopulatorUtils#execute}._@param dataSource the {@code DataSource} to execute against (never {@code null})_@throws ScriptException if an error occurs_@since 4.1_@see #populate(Connection);public void execute(DataSource dataSource) throws ScriptException {_		DatabasePopulatorUtils.execute(this, dataSource)__	};execute,this,code,resource,database,populator,against,the,given,link,data,source,p,delegates,to,link,database,populator,utils,execute,param,data,source,the,code,data,source,to,execute,against,never,code,null,throws,script,exception,if,an,error,occurs,since,4,1,see,populate,connection;public,void,execute,data,source,data,source,throws,script,exception,database,populator,utils,execute,this,data,source
ResourceDatabasePopulator -> public void execute(DataSource dataSource) throws ScriptException;1495868221;Execute this {@code ResourceDatabasePopulator} against the given_{@link DataSource}._<p>Delegates to {@link DatabasePopulatorUtils#execute}._@param dataSource the {@code DataSource} to execute against (never {@code null})_@throws ScriptException if an error occurs_@since 4.1_@see #populate(Connection);public void execute(DataSource dataSource) throws ScriptException {_		DatabasePopulatorUtils.execute(this, dataSource)__	};execute,this,code,resource,database,populator,against,the,given,link,data,source,p,delegates,to,link,database,populator,utils,execute,param,data,source,the,code,data,source,to,execute,against,never,code,null,throws,script,exception,if,an,error,occurs,since,4,1,see,populate,connection;public,void,execute,data,source,data,source,throws,script,exception,database,populator,utils,execute,this,data,source
ResourceDatabasePopulator -> public void execute(DataSource dataSource) throws ScriptException;1498780456;Execute this {@code ResourceDatabasePopulator} against the given_{@link DataSource}._<p>Delegates to {@link DatabasePopulatorUtils#execute}._@param dataSource the {@code DataSource} to execute against (never {@code null})_@throws ScriptException if an error occurs_@since 4.1_@see #populate(Connection);public void execute(DataSource dataSource) throws ScriptException {_		DatabasePopulatorUtils.execute(this, dataSource)__	};execute,this,code,resource,database,populator,against,the,given,link,data,source,p,delegates,to,link,database,populator,utils,execute,param,data,source,the,code,data,source,to,execute,against,never,code,null,throws,script,exception,if,an,error,occurs,since,4,1,see,populate,connection;public,void,execute,data,source,data,source,throws,script,exception,database,populator,utils,execute,this,data,source
ResourceDatabasePopulator -> public void execute(DataSource dataSource) throws ScriptException;1549646187;Execute this {@code ResourceDatabasePopulator} against the given_{@link DataSource}._<p>Delegates to {@link DatabasePopulatorUtils#execute}._@param dataSource the {@code DataSource} to execute against (never {@code null})_@throws ScriptException if an error occurs_@since 4.1_@see #populate(Connection);public void execute(DataSource dataSource) throws ScriptException {_		DatabasePopulatorUtils.execute(this, dataSource)__	};execute,this,code,resource,database,populator,against,the,given,link,data,source,p,delegates,to,link,database,populator,utils,execute,param,data,source,the,code,data,source,to,execute,against,never,code,null,throws,script,exception,if,an,error,occurs,since,4,1,see,populate,connection;public,void,execute,data,source,data,source,throws,script,exception,database,populator,utils,execute,this,data,source
ResourceDatabasePopulator -> private boolean startsWithDelimiter(String source, int startIndex, String delim);1347368808;Return whether the substring of a given source {@link String} starting at the_given index starts with the given delimiter.__@param source the source {@link String} to inspect_@param startIndex the index to look for the delimiter_@param delim the delimiter to look for;private boolean startsWithDelimiter(String source, int startIndex, String delim) {__		int endIndex = startIndex + delim.length()___		if (source.length() < endIndex) {_			_			return false__		}__		return source.substring(startIndex, endIndex).equals(delim)__	};return,whether,the,substring,of,a,given,source,link,string,starting,at,the,given,index,starts,with,the,given,delimiter,param,source,the,source,link,string,to,inspect,param,start,index,the,index,to,look,for,the,delimiter,param,delim,the,delimiter,to,look,for;private,boolean,starts,with,delimiter,string,source,int,start,index,string,delim,int,end,index,start,index,delim,length,if,source,length,end,index,return,false,return,source,substring,start,index,end,index,equals,delim
ResourceDatabasePopulator -> private boolean startsWithDelimiter(String source, int startIndex, String delim);1349904863;Return whether the substring of a given source {@link String} starting at the_given index starts with the given delimiter._@param source the source {@link String} to inspect_@param startIndex the index to look for the delimiter_@param delim the delimiter to look for;private boolean startsWithDelimiter(String source, int startIndex, String delim) {_		int endIndex = startIndex + delim.length()__		if (source.length() < endIndex) {_			_			return false__		}_		return source.substring(startIndex, endIndex).equals(delim)__	};return,whether,the,substring,of,a,given,source,link,string,starting,at,the,given,index,starts,with,the,given,delimiter,param,source,the,source,link,string,to,inspect,param,start,index,the,index,to,look,for,the,delimiter,param,delim,the,delimiter,to,look,for;private,boolean,starts,with,delimiter,string,source,int,start,index,string,delim,int,end,index,start,index,delim,length,if,source,length,end,index,return,false,return,source,substring,start,index,end,index,equals,delim
ResourceDatabasePopulator -> private boolean startsWithDelimiter(String source, int startIndex, String delim);1352157731;Return whether the substring of a given source {@link String} starting at the_given index starts with the given delimiter._@param source the source {@link String} to inspect_@param startIndex the index to look for the delimiter_@param delim the delimiter to look for;private boolean startsWithDelimiter(String source, int startIndex, String delim) {_		int endIndex = startIndex + delim.length()__		if (source.length() < endIndex) {_			_			return false__		}_		return source.substring(startIndex, endIndex).equals(delim)__	};return,whether,the,substring,of,a,given,source,link,string,starting,at,the,given,index,starts,with,the,given,delimiter,param,source,the,source,link,string,to,inspect,param,start,index,the,index,to,look,for,the,delimiter,param,delim,the,delimiter,to,look,for;private,boolean,starts,with,delimiter,string,source,int,start,index,string,delim,int,end,index,start,index,delim,length,if,source,length,end,index,return,false,return,source,substring,start,index,end,index,equals,delim
ResourceDatabasePopulator -> private boolean startsWithDelimiter(String source, int startIndex, String delim);1352158898;Return whether the substring of a given source {@link String} starting at the_given index starts with the given delimiter._@param source the source {@link String} to inspect_@param startIndex the index to look for the delimiter_@param delim the delimiter to look for;private boolean startsWithDelimiter(String source, int startIndex, String delim) {_		int endIndex = startIndex + delim.length()__		if (source.length() < endIndex) {_			_			return false__		}_		return source.substring(startIndex, endIndex).equals(delim)__	};return,whether,the,substring,of,a,given,source,link,string,starting,at,the,given,index,starts,with,the,given,delimiter,param,source,the,source,link,string,to,inspect,param,start,index,the,index,to,look,for,the,delimiter,param,delim,the,delimiter,to,look,for;private,boolean,starts,with,delimiter,string,source,int,start,index,string,delim,int,end,index,start,index,delim,length,if,source,length,end,index,return,false,return,source,substring,start,index,end,index,equals,delim
ResourceDatabasePopulator -> private String readScript(EncodedResource resource) throws IOException;1328020251;Read a script from the given resource and build a String containing the lines._@param resource the resource to be read_@return <code>String</code> containing the script lines_@throws IOException in case of I/O errors;private String readScript(EncodedResource resource) throws IOException {_		LineNumberReader lnr = new LineNumberReader(resource.getReader())__		String currentStatement = lnr.readLine()__		StringBuilder scriptBuilder = new StringBuilder()__		while (currentStatement != null) {_			if (StringUtils.hasText(currentStatement) &&_					(this.commentPrefix != null && !currentStatement.startsWith(this.commentPrefix))) {_				if (scriptBuilder.length() > 0) {_					scriptBuilder.append('\n')__				}_				scriptBuilder.append(currentStatement)__			}_			currentStatement = lnr.readLine()__		}_		maybeAddSeparatorToScript(scriptBuilder)__		return scriptBuilder.toString()__	};read,a,script,from,the,given,resource,and,build,a,string,containing,the,lines,param,resource,the,resource,to,be,read,return,code,string,code,containing,the,script,lines,throws,ioexception,in,case,of,i,o,errors;private,string,read,script,encoded,resource,resource,throws,ioexception,line,number,reader,lnr,new,line,number,reader,resource,get,reader,string,current,statement,lnr,read,line,string,builder,script,builder,new,string,builder,while,current,statement,null,if,string,utils,has,text,current,statement,this,comment,prefix,null,current,statement,starts,with,this,comment,prefix,if,script,builder,length,0,script,builder,append,n,script,builder,append,current,statement,current,statement,lnr,read,line,maybe,add,separator,to,script,script,builder,return,script,builder,to,string
ResourceDatabasePopulator -> private String readScript(EncodedResource resource) throws IOException;1329142650;Read a script from the given resource and build a String containing the lines._@param resource the resource to be read_@return <code>String</code> containing the script lines_@throws IOException in case of I/O errors;private String readScript(EncodedResource resource) throws IOException {_		LineNumberReader lnr = new LineNumberReader(resource.getReader())__		String currentStatement = lnr.readLine()__		StringBuilder scriptBuilder = new StringBuilder()__		while (currentStatement != null) {_			if (StringUtils.hasText(currentStatement) &&_					(this.commentPrefix != null && !currentStatement.startsWith(this.commentPrefix))) {_				if (scriptBuilder.length() > 0) {_					scriptBuilder.append('\n')__				}_				scriptBuilder.append(currentStatement)__			}_			currentStatement = lnr.readLine()__		}_		maybeAddSeparatorToScript(scriptBuilder)__		return scriptBuilder.toString()__	};read,a,script,from,the,given,resource,and,build,a,string,containing,the,lines,param,resource,the,resource,to,be,read,return,code,string,code,containing,the,script,lines,throws,ioexception,in,case,of,i,o,errors;private,string,read,script,encoded,resource,resource,throws,ioexception,line,number,reader,lnr,new,line,number,reader,resource,get,reader,string,current,statement,lnr,read,line,string,builder,script,builder,new,string,builder,while,current,statement,null,if,string,utils,has,text,current,statement,this,comment,prefix,null,current,statement,starts,with,this,comment,prefix,if,script,builder,length,0,script,builder,append,n,script,builder,append,current,statement,current,statement,lnr,read,line,maybe,add,separator,to,script,script,builder,return,script,builder,to,string
ResourceDatabasePopulator -> private String readScript(EncodedResource resource) throws IOException;1347368808;Read a script from the given resource and build a String containing the lines._@param resource the resource to be read_@return <code>String</code> containing the script lines_@throws IOException in case of I/O errors;private String readScript(EncodedResource resource) throws IOException {_		LineNumberReader lnr = new LineNumberReader(resource.getReader())__		String currentStatement = lnr.readLine()__		StringBuilder scriptBuilder = new StringBuilder()__		while (currentStatement != null) {_			if (StringUtils.hasText(currentStatement) &&_					(this.commentPrefix != null && !currentStatement.startsWith(this.commentPrefix))) {_				if (scriptBuilder.length() > 0) {_					scriptBuilder.append('\n')__				}_				scriptBuilder.append(currentStatement)__			}_			currentStatement = lnr.readLine()__		}_		maybeAddSeparatorToScript(scriptBuilder)__		return scriptBuilder.toString()__	};read,a,script,from,the,given,resource,and,build,a,string,containing,the,lines,param,resource,the,resource,to,be,read,return,code,string,code,containing,the,script,lines,throws,ioexception,in,case,of,i,o,errors;private,string,read,script,encoded,resource,resource,throws,ioexception,line,number,reader,lnr,new,line,number,reader,resource,get,reader,string,current,statement,lnr,read,line,string,builder,script,builder,new,string,builder,while,current,statement,null,if,string,utils,has,text,current,statement,this,comment,prefix,null,current,statement,starts,with,this,comment,prefix,if,script,builder,length,0,script,builder,append,n,script,builder,append,current,statement,current,statement,lnr,read,line,maybe,add,separator,to,script,script,builder,return,script,builder,to,string
ResourceDatabasePopulator -> private String readScript(EncodedResource resource) throws IOException;1349904863;Read a script from the given resource and build a String containing the lines._@param resource the resource to be read_@return <code>String</code> containing the script lines_@throws IOException in case of I/O errors;private String readScript(EncodedResource resource) throws IOException {_		LineNumberReader lnr = new LineNumberReader(resource.getReader())__		String currentStatement = lnr.readLine()__		StringBuilder scriptBuilder = new StringBuilder()__		while (currentStatement != null) {_			if (StringUtils.hasText(currentStatement) &&_					(this.commentPrefix != null && !currentStatement.startsWith(this.commentPrefix))) {_				if (scriptBuilder.length() > 0) {_					scriptBuilder.append('\n')__				}_				scriptBuilder.append(currentStatement)__			}_			currentStatement = lnr.readLine()__		}_		maybeAddSeparatorToScript(scriptBuilder)__		return scriptBuilder.toString()__	};read,a,script,from,the,given,resource,and,build,a,string,containing,the,lines,param,resource,the,resource,to,be,read,return,code,string,code,containing,the,script,lines,throws,ioexception,in,case,of,i,o,errors;private,string,read,script,encoded,resource,resource,throws,ioexception,line,number,reader,lnr,new,line,number,reader,resource,get,reader,string,current,statement,lnr,read,line,string,builder,script,builder,new,string,builder,while,current,statement,null,if,string,utils,has,text,current,statement,this,comment,prefix,null,current,statement,starts,with,this,comment,prefix,if,script,builder,length,0,script,builder,append,n,script,builder,append,current,statement,current,statement,lnr,read,line,maybe,add,separator,to,script,script,builder,return,script,builder,to,string
ResourceDatabasePopulator -> private String readScript(EncodedResource resource) throws IOException;1352157731;Read a script from the given resource and build a String containing the lines._@param resource the resource to be read_@return {@code String} containing the script lines_@throws IOException in case of I/O errors;private String readScript(EncodedResource resource) throws IOException {_		LineNumberReader lnr = new LineNumberReader(resource.getReader())__		String currentStatement = lnr.readLine()__		StringBuilder scriptBuilder = new StringBuilder()__		while (currentStatement != null) {_			if (StringUtils.hasText(currentStatement) &&_					(this.commentPrefix != null && !currentStatement.startsWith(this.commentPrefix))) {_				if (scriptBuilder.length() > 0) {_					scriptBuilder.append('\n')__				}_				scriptBuilder.append(currentStatement)__			}_			currentStatement = lnr.readLine()__		}_		maybeAddSeparatorToScript(scriptBuilder)__		return scriptBuilder.toString()__	};read,a,script,from,the,given,resource,and,build,a,string,containing,the,lines,param,resource,the,resource,to,be,read,return,code,string,containing,the,script,lines,throws,ioexception,in,case,of,i,o,errors;private,string,read,script,encoded,resource,resource,throws,ioexception,line,number,reader,lnr,new,line,number,reader,resource,get,reader,string,current,statement,lnr,read,line,string,builder,script,builder,new,string,builder,while,current,statement,null,if,string,utils,has,text,current,statement,this,comment,prefix,null,current,statement,starts,with,this,comment,prefix,if,script,builder,length,0,script,builder,append,n,script,builder,append,current,statement,current,statement,lnr,read,line,maybe,add,separator,to,script,script,builder,return,script,builder,to,string
ResourceDatabasePopulator -> private String readScript(EncodedResource resource) throws IOException;1352158898;Read a script from the given resource and build a String containing the lines._@param resource the resource to be read_@return {@code String} containing the script lines_@throws IOException in case of I/O errors;private String readScript(EncodedResource resource) throws IOException {_		LineNumberReader lnr = new LineNumberReader(resource.getReader())__		try {_			String currentStatement = lnr.readLine()__			StringBuilder scriptBuilder = new StringBuilder()__			while (currentStatement != null) {_				if (StringUtils.hasText(currentStatement)_						&& (this.commentPrefix != null && !currentStatement.startsWith(this.commentPrefix))) {_					if (scriptBuilder.length() > 0) {_						scriptBuilder.append('\n')__					}_					scriptBuilder.append(currentStatement)__				}_				currentStatement = lnr.readLine()__			}_			maybeAddSeparatorToScript(scriptBuilder)__			return scriptBuilder.toString()__		} finally {_			lnr.close()__		}_	};read,a,script,from,the,given,resource,and,build,a,string,containing,the,lines,param,resource,the,resource,to,be,read,return,code,string,containing,the,script,lines,throws,ioexception,in,case,of,i,o,errors;private,string,read,script,encoded,resource,resource,throws,ioexception,line,number,reader,lnr,new,line,number,reader,resource,get,reader,try,string,current,statement,lnr,read,line,string,builder,script,builder,new,string,builder,while,current,statement,null,if,string,utils,has,text,current,statement,this,comment,prefix,null,current,statement,starts,with,this,comment,prefix,if,script,builder,length,0,script,builder,append,n,script,builder,append,current,statement,current,statement,lnr,read,line,maybe,add,separator,to,script,script,builder,return,script,builder,to,string,finally,lnr,close
ResourceDatabasePopulator -> private String readScript(EncodedResource resource) throws IOException;1354725684;Read a script from the given resource and build a String containing the lines._@param resource the resource to be read_@return {@code String} containing the script lines_@throws IOException in case of I/O errors;private String readScript(EncodedResource resource) throws IOException {_		LineNumberReader lnr = new LineNumberReader(resource.getReader())__		try {_			String currentStatement = lnr.readLine()__			StringBuilder scriptBuilder = new StringBuilder()__			while (currentStatement != null) {_				if (StringUtils.hasText(currentStatement)_						&& (this.commentPrefix != null && !currentStatement.startsWith(this.commentPrefix))) {_					if (scriptBuilder.length() > 0) {_						scriptBuilder.append('\n')__					}_					scriptBuilder.append(currentStatement)__				}_				currentStatement = lnr.readLine()__			}_			maybeAddSeparatorToScript(scriptBuilder)__			return scriptBuilder.toString()__		}_		finally {_			lnr.close()__		}_	};read,a,script,from,the,given,resource,and,build,a,string,containing,the,lines,param,resource,the,resource,to,be,read,return,code,string,containing,the,script,lines,throws,ioexception,in,case,of,i,o,errors;private,string,read,script,encoded,resource,resource,throws,ioexception,line,number,reader,lnr,new,line,number,reader,resource,get,reader,try,string,current,statement,lnr,read,line,string,builder,script,builder,new,string,builder,while,current,statement,null,if,string,utils,has,text,current,statement,this,comment,prefix,null,current,statement,starts,with,this,comment,prefix,if,script,builder,length,0,script,builder,append,n,script,builder,append,current,statement,current,statement,lnr,read,line,maybe,add,separator,to,script,script,builder,return,script,builder,to,string,finally,lnr,close
ResourceDatabasePopulator -> private String readScript(EncodedResource resource) throws IOException;1355351963;Read a script from the given resource and build a String containing the lines._@param resource the resource to be read_@return {@code String} containing the script lines_@throws IOException in case of I/O errors;private String readScript(EncodedResource resource) throws IOException {_		LineNumberReader lnr = new LineNumberReader(resource.getReader())__		try {_			String currentStatement = lnr.readLine()__			StringBuilder scriptBuilder = new StringBuilder()__			while (currentStatement != null) {_				if (StringUtils.hasText(currentStatement) &&_						(this.commentPrefix != null && !currentStatement.startsWith(this.commentPrefix))) {_					if (scriptBuilder.length() > 0) {_						scriptBuilder.append('\n')__					}_					scriptBuilder.append(currentStatement)__				}_				currentStatement = lnr.readLine()__			}_			maybeAddSeparatorToScript(scriptBuilder)__			return scriptBuilder.toString()__		}_		finally {_			lnr.close()__		}_	};read,a,script,from,the,given,resource,and,build,a,string,containing,the,lines,param,resource,the,resource,to,be,read,return,code,string,containing,the,script,lines,throws,ioexception,in,case,of,i,o,errors;private,string,read,script,encoded,resource,resource,throws,ioexception,line,number,reader,lnr,new,line,number,reader,resource,get,reader,try,string,current,statement,lnr,read,line,string,builder,script,builder,new,string,builder,while,current,statement,null,if,string,utils,has,text,current,statement,this,comment,prefix,null,current,statement,starts,with,this,comment,prefix,if,script,builder,length,0,script,builder,append,n,script,builder,append,current,statement,current,statement,lnr,read,line,maybe,add,separator,to,script,script,builder,return,script,builder,to,string,finally,lnr,close
ResourceDatabasePopulator -> private String readScript(EncodedResource resource) throws IOException;1356735495;Read a script from the given resource and build a String containing the lines._@param resource the resource to be read_@return {@code String} containing the script lines_@throws IOException in case of I/O errors;private String readScript(EncodedResource resource) throws IOException {_		LineNumberReader lnr = new LineNumberReader(resource.getReader())__		try {_			String currentStatement = lnr.readLine()__			StringBuilder scriptBuilder = new StringBuilder()__			while (currentStatement != null) {_				if (StringUtils.hasText(currentStatement) &&_						(this.commentPrefix != null && !currentStatement.startsWith(this.commentPrefix))) {_					if (scriptBuilder.length() > 0) {_						scriptBuilder.append('\n')__					}_					scriptBuilder.append(currentStatement)__				}_				currentStatement = lnr.readLine()__			}_			maybeAddSeparatorToScript(scriptBuilder)__			return scriptBuilder.toString()__		}_		finally {_			lnr.close()__		}_	};read,a,script,from,the,given,resource,and,build,a,string,containing,the,lines,param,resource,the,resource,to,be,read,return,code,string,containing,the,script,lines,throws,ioexception,in,case,of,i,o,errors;private,string,read,script,encoded,resource,resource,throws,ioexception,line,number,reader,lnr,new,line,number,reader,resource,get,reader,try,string,current,statement,lnr,read,line,string,builder,script,builder,new,string,builder,while,current,statement,null,if,string,utils,has,text,current,statement,this,comment,prefix,null,current,statement,starts,with,this,comment,prefix,if,script,builder,length,0,script,builder,append,n,script,builder,append,current,statement,current,statement,lnr,read,line,maybe,add,separator,to,script,script,builder,return,script,builder,to,string,finally,lnr,close
ResourceDatabasePopulator -> private String readScript(EncodedResource resource) throws IOException;1357119239;Read a script from the given resource and build a String containing the lines._@param resource the resource to be read_@return {@code String} containing the script lines_@throws IOException in case of I/O errors;private String readScript(EncodedResource resource) throws IOException {_		LineNumberReader lnr = new LineNumberReader(resource.getReader())__		try {_			String currentStatement = lnr.readLine()__			StringBuilder scriptBuilder = new StringBuilder()__			while (currentStatement != null) {_				if (StringUtils.hasText(currentStatement) &&_						(this.commentPrefix != null && !currentStatement.startsWith(this.commentPrefix))) {_					if (scriptBuilder.length() > 0) {_						scriptBuilder.append('\n')__					}_					scriptBuilder.append(currentStatement)__				}_				currentStatement = lnr.readLine()__			}_			maybeAddSeparatorToScript(scriptBuilder)__			return scriptBuilder.toString()__		}_		finally {_			lnr.close()__		}_	};read,a,script,from,the,given,resource,and,build,a,string,containing,the,lines,param,resource,the,resource,to,be,read,return,code,string,containing,the,script,lines,throws,ioexception,in,case,of,i,o,errors;private,string,read,script,encoded,resource,resource,throws,ioexception,line,number,reader,lnr,new,line,number,reader,resource,get,reader,try,string,current,statement,lnr,read,line,string,builder,script,builder,new,string,builder,while,current,statement,null,if,string,utils,has,text,current,statement,this,comment,prefix,null,current,statement,starts,with,this,comment,prefix,if,script,builder,length,0,script,builder,append,n,script,builder,append,current,statement,current,statement,lnr,read,line,maybe,add,separator,to,script,script,builder,return,script,builder,to,string,finally,lnr,close
ResourceDatabasePopulator -> private String readScript(EncodedResource resource) throws IOException;1368482696;Read a script from the given resource and build a String containing the lines._@param resource the resource to be read_@return {@code String} containing the script lines_@throws IOException in case of I/O errors;private String readScript(EncodedResource resource) throws IOException {_		LineNumberReader lnr = new LineNumberReader(resource.getReader())__		try {_			String currentStatement = lnr.readLine()__			StringBuilder scriptBuilder = new StringBuilder()__			while (currentStatement != null) {_				if (StringUtils.hasText(currentStatement) &&_						(this.commentPrefix != null && !currentStatement.startsWith(this.commentPrefix))) {_					if (scriptBuilder.length() > 0) {_						scriptBuilder.append('\n')__					}_					scriptBuilder.append(currentStatement)__				}_				currentStatement = lnr.readLine()__			}_			maybeAddSeparatorToScript(scriptBuilder)__			return scriptBuilder.toString()__		}_		finally {_			lnr.close()__		}_	};read,a,script,from,the,given,resource,and,build,a,string,containing,the,lines,param,resource,the,resource,to,be,read,return,code,string,containing,the,script,lines,throws,ioexception,in,case,of,i,o,errors;private,string,read,script,encoded,resource,resource,throws,ioexception,line,number,reader,lnr,new,line,number,reader,resource,get,reader,try,string,current,statement,lnr,read,line,string,builder,script,builder,new,string,builder,while,current,statement,null,if,string,utils,has,text,current,statement,this,comment,prefix,null,current,statement,starts,with,this,comment,prefix,if,script,builder,length,0,script,builder,append,n,script,builder,append,current,statement,current,statement,lnr,read,line,maybe,add,separator,to,script,script,builder,return,script,builder,to,string,finally,lnr,close
ResourceDatabasePopulator -> private String readScript(EncodedResource resource) throws IOException;1387832430;Read a script from the given resource and build a String containing the lines._@param resource the resource to be read_@return {@code String} containing the script lines_@throws IOException in case of I/O errors;private String readScript(EncodedResource resource) throws IOException {_		LineNumberReader lnr = new LineNumberReader(resource.getReader())__		try {_			String currentStatement = lnr.readLine()__			StringBuilder scriptBuilder = new StringBuilder()__			while (currentStatement != null) {_				if (StringUtils.hasText(currentStatement) &&_						(this.commentPrefix != null && !currentStatement.startsWith(this.commentPrefix))) {_					if (scriptBuilder.length() > 0) {_						scriptBuilder.append('\n')__					}_					scriptBuilder.append(currentStatement)__				}_				currentStatement = lnr.readLine()__			}_			maybeAddSeparatorToScript(scriptBuilder)__			return scriptBuilder.toString()__		}_		finally {_			lnr.close()__		}_	};read,a,script,from,the,given,resource,and,build,a,string,containing,the,lines,param,resource,the,resource,to,be,read,return,code,string,containing,the,script,lines,throws,ioexception,in,case,of,i,o,errors;private,string,read,script,encoded,resource,resource,throws,ioexception,line,number,reader,lnr,new,line,number,reader,resource,get,reader,try,string,current,statement,lnr,read,line,string,builder,script,builder,new,string,builder,while,current,statement,null,if,string,utils,has,text,current,statement,this,comment,prefix,null,current,statement,starts,with,this,comment,prefix,if,script,builder,length,0,script,builder,append,n,script,builder,append,current,statement,current,statement,lnr,read,line,maybe,add,separator,to,script,script,builder,return,script,builder,to,string,finally,lnr,close
ResourceDatabasePopulator -> public ResourceDatabasePopulator();1394714705;Construct a new {@code ResourceDatabasePopulator} with default settings.;public ResourceDatabasePopulator() {_		_	};construct,a,new,code,resource,database,populator,with,default,settings;public,resource,database,populator
ResourceDatabasePopulator -> public ResourceDatabasePopulator();1394987641;Construct a new {@code ResourceDatabasePopulator} with default settings._@since 4.0.3;public ResourceDatabasePopulator() {_		_	};construct,a,new,code,resource,database,populator,with,default,settings,since,4,0,3;public,resource,database,populator
ResourceDatabasePopulator -> public ResourceDatabasePopulator();1395055592;Construct a new {@code ResourceDatabasePopulator} with default settings._@since 4.0.3;public ResourceDatabasePopulator() {_		_	};construct,a,new,code,resource,database,populator,with,default,settings,since,4,0,3;public,resource,database,populator
ResourceDatabasePopulator -> public ResourceDatabasePopulator();1395068709;Construct a new {@code ResourceDatabasePopulator} with default settings._@since 4.0.3;public ResourceDatabasePopulator() {_		_	};construct,a,new,code,resource,database,populator,with,default,settings,since,4,0,3;public,resource,database,populator
ResourceDatabasePopulator -> public ResourceDatabasePopulator();1395183391;Construct a new {@code ResourceDatabasePopulator} with default settings._@since 4.0.3;public ResourceDatabasePopulator() {_		_	};construct,a,new,code,resource,database,populator,with,default,settings,since,4,0,3;public,resource,database,populator
ResourceDatabasePopulator -> public ResourceDatabasePopulator();1396191708;Construct a new {@code ResourceDatabasePopulator} with default settings._@since 4.0.3;public ResourceDatabasePopulator() {_		_	};construct,a,new,code,resource,database,populator,with,default,settings,since,4,0,3;public,resource,database,populator
ResourceDatabasePopulator -> public ResourceDatabasePopulator();1397231067;Construct a new {@code ResourceDatabasePopulator} with default settings._@since 4.0.3;public ResourceDatabasePopulator() {_		_	};construct,a,new,code,resource,database,populator,with,default,settings,since,4,0,3;public,resource,database,populator
ResourceDatabasePopulator -> public ResourceDatabasePopulator();1397385067;Construct a new {@code ResourceDatabasePopulator} with default settings._@since 4.0.3;public ResourceDatabasePopulator() {_		_	};construct,a,new,code,resource,database,populator,with,default,settings,since,4,0,3;public,resource,database,populator
ResourceDatabasePopulator -> public ResourceDatabasePopulator();1397393502;Construct a new {@code ResourceDatabasePopulator} with default settings._@since 4.0.3;public ResourceDatabasePopulator() {_		_	};construct,a,new,code,resource,database,populator,with,default,settings,since,4,0,3;public,resource,database,populator
ResourceDatabasePopulator -> public ResourceDatabasePopulator();1397394407;Construct a new {@code ResourceDatabasePopulator} with default settings._@since 4.0.3;public ResourceDatabasePopulator() {_		_	};construct,a,new,code,resource,database,populator,with,default,settings,since,4,0,3;public,resource,database,populator
ResourceDatabasePopulator -> public ResourceDatabasePopulator();1401991965;Construct a new {@code ResourceDatabasePopulator} with default settings._@since 4.0.3;public ResourceDatabasePopulator() {_		_	};construct,a,new,code,resource,database,populator,with,default,settings,since,4,0,3;public,resource,database,populator
ResourceDatabasePopulator -> public ResourceDatabasePopulator();1402143225;Construct a new {@code ResourceDatabasePopulator} with default settings._@since 4.0.3;public ResourceDatabasePopulator() {_		_	};construct,a,new,code,resource,database,populator,with,default,settings,since,4,0,3;public,resource,database,populator
ResourceDatabasePopulator -> public ResourceDatabasePopulator();1413848647;Construct a new {@code ResourceDatabasePopulator} with default settings._@since 4.0.3;public ResourceDatabasePopulator() {_		_	};construct,a,new,code,resource,database,populator,with,default,settings,since,4,0,3;public,resource,database,populator
ResourceDatabasePopulator -> public ResourceDatabasePopulator();1455813442;Construct a new {@code ResourceDatabasePopulator} with default settings._@since 4.0.3;public ResourceDatabasePopulator() {_		_	};construct,a,new,code,resource,database,populator,with,default,settings,since,4,0,3;public,resource,database,populator
ResourceDatabasePopulator -> public ResourceDatabasePopulator();1467730834;Construct a new {@code ResourceDatabasePopulator} with default settings._@since 4.0.3;public ResourceDatabasePopulator() {_		_	};construct,a,new,code,resource,database,populator,with,default,settings,since,4,0,3;public,resource,database,populator
ResourceDatabasePopulator -> public ResourceDatabasePopulator();1477691361;Construct a new {@code ResourceDatabasePopulator} with default settings._@since 4.0.3;public ResourceDatabasePopulator() {_		_	};construct,a,new,code,resource,database,populator,with,default,settings,since,4,0,3;public,resource,database,populator
ResourceDatabasePopulator -> public ResourceDatabasePopulator();1495868221;Construct a new {@code ResourceDatabasePopulator} with default settings._@since 4.0.3;public ResourceDatabasePopulator() {_		_	};construct,a,new,code,resource,database,populator,with,default,settings,since,4,0,3;public,resource,database,populator
ResourceDatabasePopulator -> public ResourceDatabasePopulator();1498780456;Construct a new {@code ResourceDatabasePopulator} with default settings._@since 4.0.3;public ResourceDatabasePopulator() {_		_	};construct,a,new,code,resource,database,populator,with,default,settings,since,4,0,3;public,resource,database,populator
ResourceDatabasePopulator -> public ResourceDatabasePopulator();1549646187;Construct a new {@code ResourceDatabasePopulator} with default settings._@since 4.0.3;public ResourceDatabasePopulator() {_	};construct,a,new,code,resource,database,populator,with,default,settings,since,4,0,3;public,resource,database,populator
ResourceDatabasePopulator -> public void setCommentPrefix(String commentPrefix);1328020251;Set the line prefix that identifies comments in the SQL script._Default is "--".;public void setCommentPrefix(String commentPrefix) {_		this.commentPrefix = commentPrefix__	};set,the,line,prefix,that,identifies,comments,in,the,sql,script,default,is;public,void,set,comment,prefix,string,comment,prefix,this,comment,prefix,comment,prefix
ResourceDatabasePopulator -> public void setCommentPrefix(String commentPrefix);1329142650;Set the line prefix that identifies comments in the SQL script._Default is "--".;public void setCommentPrefix(String commentPrefix) {_		this.commentPrefix = commentPrefix__	};set,the,line,prefix,that,identifies,comments,in,the,sql,script,default,is;public,void,set,comment,prefix,string,comment,prefix,this,comment,prefix,comment,prefix
ResourceDatabasePopulator -> public void setCommentPrefix(String commentPrefix);1347368808;Set the line prefix that identifies comments in the SQL script._Default is "--".;public void setCommentPrefix(String commentPrefix) {_		this.commentPrefix = commentPrefix__	};set,the,line,prefix,that,identifies,comments,in,the,sql,script,default,is;public,void,set,comment,prefix,string,comment,prefix,this,comment,prefix,comment,prefix
ResourceDatabasePopulator -> public void setCommentPrefix(String commentPrefix);1349904863;Set the line prefix that identifies comments in the SQL script._Default is "--".;public void setCommentPrefix(String commentPrefix) {_		this.commentPrefix = commentPrefix__	};set,the,line,prefix,that,identifies,comments,in,the,sql,script,default,is;public,void,set,comment,prefix,string,comment,prefix,this,comment,prefix,comment,prefix
ResourceDatabasePopulator -> public void setCommentPrefix(String commentPrefix);1352157731;Set the line prefix that identifies comments in the SQL script._Default is "--".;public void setCommentPrefix(String commentPrefix) {_		this.commentPrefix = commentPrefix__	};set,the,line,prefix,that,identifies,comments,in,the,sql,script,default,is;public,void,set,comment,prefix,string,comment,prefix,this,comment,prefix,comment,prefix
ResourceDatabasePopulator -> public void setCommentPrefix(String commentPrefix);1352158898;Set the line prefix that identifies comments in the SQL script._Default is "--".;public void setCommentPrefix(String commentPrefix) {_		this.commentPrefix = commentPrefix__	};set,the,line,prefix,that,identifies,comments,in,the,sql,script,default,is;public,void,set,comment,prefix,string,comment,prefix,this,comment,prefix,comment,prefix
ResourceDatabasePopulator -> public void setCommentPrefix(String commentPrefix);1354725684;Set the line prefix that identifies comments in the SQL script._Default is "--".;public void setCommentPrefix(String commentPrefix) {_		this.commentPrefix = commentPrefix__	};set,the,line,prefix,that,identifies,comments,in,the,sql,script,default,is;public,void,set,comment,prefix,string,comment,prefix,this,comment,prefix,comment,prefix
ResourceDatabasePopulator -> public void setCommentPrefix(String commentPrefix);1355351963;Set the line prefix that identifies comments in the SQL script._Default is "--".;public void setCommentPrefix(String commentPrefix) {_		this.commentPrefix = commentPrefix__	};set,the,line,prefix,that,identifies,comments,in,the,sql,script,default,is;public,void,set,comment,prefix,string,comment,prefix,this,comment,prefix,comment,prefix
ResourceDatabasePopulator -> public void setCommentPrefix(String commentPrefix);1356735495;Set the line prefix that identifies comments in the SQL script._Default is "--".;public void setCommentPrefix(String commentPrefix) {_		this.commentPrefix = commentPrefix__	};set,the,line,prefix,that,identifies,comments,in,the,sql,script,default,is;public,void,set,comment,prefix,string,comment,prefix,this,comment,prefix,comment,prefix
ResourceDatabasePopulator -> public void setCommentPrefix(String commentPrefix);1357119239;Set the line prefix that identifies comments in the SQL script._Default is "--".;public void setCommentPrefix(String commentPrefix) {_		this.commentPrefix = commentPrefix__	};set,the,line,prefix,that,identifies,comments,in,the,sql,script,default,is;public,void,set,comment,prefix,string,comment,prefix,this,comment,prefix,comment,prefix
ResourceDatabasePopulator -> public void setCommentPrefix(String commentPrefix);1368482696;Set the line prefix that identifies comments in the SQL script._Default is "--".;public void setCommentPrefix(String commentPrefix) {_		this.commentPrefix = commentPrefix__	};set,the,line,prefix,that,identifies,comments,in,the,sql,script,default,is;public,void,set,comment,prefix,string,comment,prefix,this,comment,prefix,comment,prefix
ResourceDatabasePopulator -> public void setCommentPrefix(String commentPrefix);1387832430;Set the line prefix that identifies comments in the SQL script._Default is "--".;public void setCommentPrefix(String commentPrefix) {_		this.commentPrefix = commentPrefix__	};set,the,line,prefix,that,identifies,comments,in,the,sql,script,default,is;public,void,set,comment,prefix,string,comment,prefix,this,comment,prefix,comment,prefix
ResourceDatabasePopulator -> public void setCommentPrefix(String commentPrefix);1394708749;Set the prefix that identifies line comments within the SQL scripts._<p>Default is "--".;public void setCommentPrefix(String commentPrefix) {_		this.commentPrefix = commentPrefix__	};set,the,prefix,that,identifies,line,comments,within,the,sql,scripts,p,default,is;public,void,set,comment,prefix,string,comment,prefix,this,comment,prefix,comment,prefix
ResourceDatabasePopulator -> public void setCommentPrefix(String commentPrefix);1394714705;Set the prefix that identifies line comments within the SQL scripts._<p>Default is "--".;public void setCommentPrefix(String commentPrefix) {_		this.commentPrefix = commentPrefix__	};set,the,prefix,that,identifies,line,comments,within,the,sql,scripts,p,default,is;public,void,set,comment,prefix,string,comment,prefix,this,comment,prefix,comment,prefix
ResourceDatabasePopulator -> public void setCommentPrefix(String commentPrefix);1394987641;Set the prefix that identifies line comments within the SQL scripts._<p>Default is "--".;public void setCommentPrefix(String commentPrefix) {_		this.commentPrefix = commentPrefix__	};set,the,prefix,that,identifies,line,comments,within,the,sql,scripts,p,default,is;public,void,set,comment,prefix,string,comment,prefix,this,comment,prefix,comment,prefix
ResourceDatabasePopulator -> public void setCommentPrefix(String commentPrefix);1395055592;Set the prefix that identifies line comments within the SQL scripts._<p>Default is "--".;public void setCommentPrefix(String commentPrefix) {_		this.commentPrefix = commentPrefix__	};set,the,prefix,that,identifies,line,comments,within,the,sql,scripts,p,default,is;public,void,set,comment,prefix,string,comment,prefix,this,comment,prefix,comment,prefix
ResourceDatabasePopulator -> public void setCommentPrefix(String commentPrefix);1395068709;Set the prefix that identifies line comments within the SQL scripts._<p>Default is "--".;public void setCommentPrefix(String commentPrefix) {_		this.commentPrefix = commentPrefix__	};set,the,prefix,that,identifies,line,comments,within,the,sql,scripts,p,default,is;public,void,set,comment,prefix,string,comment,prefix,this,comment,prefix,comment,prefix
ResourceDatabasePopulator -> public void setCommentPrefix(String commentPrefix);1395183391;Set the prefix that identifies line comments within the SQL scripts._<p>Default is "--"._@param commentPrefix the prefix for single-line comments;public void setCommentPrefix(String commentPrefix) {_		this.commentPrefix = commentPrefix__	};set,the,prefix,that,identifies,line,comments,within,the,sql,scripts,p,default,is,param,comment,prefix,the,prefix,for,single,line,comments;public,void,set,comment,prefix,string,comment,prefix,this,comment,prefix,comment,prefix
ResourceDatabasePopulator -> public void setCommentPrefix(String commentPrefix);1396191708;Set the prefix that identifies line comments within the SQL scripts._<p>Default is "--"._@param commentPrefix the prefix for single-line comments;public void setCommentPrefix(String commentPrefix) {_		this.commentPrefix = commentPrefix__	};set,the,prefix,that,identifies,line,comments,within,the,sql,scripts,p,default,is,param,comment,prefix,the,prefix,for,single,line,comments;public,void,set,comment,prefix,string,comment,prefix,this,comment,prefix,comment,prefix
ResourceDatabasePopulator -> public void setCommentPrefix(String commentPrefix);1397231067;Set the prefix that identifies single-line comments within the SQL scripts._<p>Defaults to {@code "--"}._@param commentPrefix the prefix for single-line comments;public void setCommentPrefix(String commentPrefix) {_		this.commentPrefix = commentPrefix__	};set,the,prefix,that,identifies,single,line,comments,within,the,sql,scripts,p,defaults,to,code,param,comment,prefix,the,prefix,for,single,line,comments;public,void,set,comment,prefix,string,comment,prefix,this,comment,prefix,comment,prefix
ResourceDatabasePopulator -> public void setCommentPrefix(String commentPrefix);1397385067;Set the prefix that identifies single-line comments within the SQL scripts._<p>Defaults to {@code "--"}._@param commentPrefix the prefix for single-line comments;public void setCommentPrefix(String commentPrefix) {_		this.commentPrefix = commentPrefix__	};set,the,prefix,that,identifies,single,line,comments,within,the,sql,scripts,p,defaults,to,code,param,comment,prefix,the,prefix,for,single,line,comments;public,void,set,comment,prefix,string,comment,prefix,this,comment,prefix,comment,prefix
ResourceDatabasePopulator -> public void setCommentPrefix(String commentPrefix);1397393502;Set the prefix that identifies single-line comments within the SQL scripts._<p>Defaults to {@code "--"}._@param commentPrefix the prefix for single-line comments;public void setCommentPrefix(String commentPrefix) {_		this.commentPrefix = commentPrefix__	};set,the,prefix,that,identifies,single,line,comments,within,the,sql,scripts,p,defaults,to,code,param,comment,prefix,the,prefix,for,single,line,comments;public,void,set,comment,prefix,string,comment,prefix,this,comment,prefix,comment,prefix
ResourceDatabasePopulator -> public void setCommentPrefix(String commentPrefix);1397394407;Set the prefix that identifies single-line comments within the SQL scripts._<p>Defaults to {@code "--"}._@param commentPrefix the prefix for single-line comments;public void setCommentPrefix(String commentPrefix) {_		this.commentPrefix = commentPrefix__	};set,the,prefix,that,identifies,single,line,comments,within,the,sql,scripts,p,defaults,to,code,param,comment,prefix,the,prefix,for,single,line,comments;public,void,set,comment,prefix,string,comment,prefix,this,comment,prefix,comment,prefix
ResourceDatabasePopulator -> public void setCommentPrefix(String commentPrefix);1401991965;Set the prefix that identifies single-line comments within the SQL scripts._<p>Defaults to {@code "--"}._@param commentPrefix the prefix for single-line comments;public void setCommentPrefix(String commentPrefix) {_		this.commentPrefix = commentPrefix__	};set,the,prefix,that,identifies,single,line,comments,within,the,sql,scripts,p,defaults,to,code,param,comment,prefix,the,prefix,for,single,line,comments;public,void,set,comment,prefix,string,comment,prefix,this,comment,prefix,comment,prefix
ResourceDatabasePopulator -> public void setCommentPrefix(String commentPrefix);1402143225;Set the prefix that identifies single-line comments within the SQL scripts._<p>Defaults to {@code "--"}._@param commentPrefix the prefix for single-line comments;public void setCommentPrefix(String commentPrefix) {_		this.commentPrefix = commentPrefix__	};set,the,prefix,that,identifies,single,line,comments,within,the,sql,scripts,p,defaults,to,code,param,comment,prefix,the,prefix,for,single,line,comments;public,void,set,comment,prefix,string,comment,prefix,this,comment,prefix,comment,prefix
ResourceDatabasePopulator -> public void setCommentPrefix(String commentPrefix);1413848647;Set the prefix that identifies single-line comments within the SQL scripts._<p>Defaults to {@code "--"}._@param commentPrefix the prefix for single-line comments;public void setCommentPrefix(String commentPrefix) {_		this.commentPrefix = commentPrefix__	};set,the,prefix,that,identifies,single,line,comments,within,the,sql,scripts,p,defaults,to,code,param,comment,prefix,the,prefix,for,single,line,comments;public,void,set,comment,prefix,string,comment,prefix,this,comment,prefix,comment,prefix
ResourceDatabasePopulator -> public void setCommentPrefix(String commentPrefix);1455813442;Set the prefix that identifies single-line comments within the SQL scripts._<p>Defaults to {@code "--"}._@param commentPrefix the prefix for single-line comments;public void setCommentPrefix(String commentPrefix) {_		this.commentPrefix = commentPrefix__	};set,the,prefix,that,identifies,single,line,comments,within,the,sql,scripts,p,defaults,to,code,param,comment,prefix,the,prefix,for,single,line,comments;public,void,set,comment,prefix,string,comment,prefix,this,comment,prefix,comment,prefix
ResourceDatabasePopulator -> public void setCommentPrefix(String commentPrefix);1467730834;Set the prefix that identifies single-line comments within the SQL scripts._<p>Defaults to {@code "--"}._@param commentPrefix the prefix for single-line comments;public void setCommentPrefix(String commentPrefix) {_		this.commentPrefix = commentPrefix__	};set,the,prefix,that,identifies,single,line,comments,within,the,sql,scripts,p,defaults,to,code,param,comment,prefix,the,prefix,for,single,line,comments;public,void,set,comment,prefix,string,comment,prefix,this,comment,prefix,comment,prefix
ResourceDatabasePopulator -> public void setCommentPrefix(String commentPrefix);1477691361;Set the prefix that identifies single-line comments within the SQL scripts._<p>Defaults to {@code "--"}._@param commentPrefix the prefix for single-line comments;public void setCommentPrefix(String commentPrefix) {_		this.commentPrefix = commentPrefix__	};set,the,prefix,that,identifies,single,line,comments,within,the,sql,scripts,p,defaults,to,code,param,comment,prefix,the,prefix,for,single,line,comments;public,void,set,comment,prefix,string,comment,prefix,this,comment,prefix,comment,prefix
ResourceDatabasePopulator -> public void setCommentPrefix(String commentPrefix);1495868221;Set the prefix that identifies single-line comments within the SQL scripts._<p>Defaults to {@code "--"}._@param commentPrefix the prefix for single-line comments;public void setCommentPrefix(String commentPrefix) {_		this.commentPrefix = commentPrefix__	};set,the,prefix,that,identifies,single,line,comments,within,the,sql,scripts,p,defaults,to,code,param,comment,prefix,the,prefix,for,single,line,comments;public,void,set,comment,prefix,string,comment,prefix,this,comment,prefix,comment,prefix
ResourceDatabasePopulator -> public void setCommentPrefix(String commentPrefix);1498780456;Set the prefix that identifies single-line comments within the SQL scripts._<p>Defaults to {@code "--"}._@param commentPrefix the prefix for single-line comments;public void setCommentPrefix(String commentPrefix) {_		this.commentPrefix = commentPrefix__	};set,the,prefix,that,identifies,single,line,comments,within,the,sql,scripts,p,defaults,to,code,param,comment,prefix,the,prefix,for,single,line,comments;public,void,set,comment,prefix,string,comment,prefix,this,comment,prefix,comment,prefix
ResourceDatabasePopulator -> public void setCommentPrefix(String commentPrefix);1549646187;Set the prefix that identifies single-line comments within the SQL scripts._<p>Defaults to {@code "--"}._@param commentPrefix the prefix for single-line comments;public void setCommentPrefix(String commentPrefix) {_		this.commentPrefix = commentPrefix__	};set,the,prefix,that,identifies,single,line,comments,within,the,sql,scripts,p,defaults,to,code,param,comment,prefix,the,prefix,for,single,line,comments;public,void,set,comment,prefix,string,comment,prefix,this,comment,prefix,comment,prefix
ResourceDatabasePopulator -> private void executeSqlScript(Connection connection, EncodedResource resource, 			boolean continueOnError, boolean ignoreFailedDrops) throws SQLException;1328020251;Execute the given SQL script._<p>The script will normally be loaded by classpath. There should be one statement_per line. Any {@link #setSeparator(String) statement separators} will be removed._<p><b>Do not use this method to execute DDL if you expect rollback.</b>_@param connection the JDBC Connection with which to perform JDBC operations_@param resource the resource (potentially associated with a specific encoding) to load the SQL script from_@param continueOnError whether or not to continue without throwing an exception in the event of an error_@param ignoreFailedDrops whether of not to continue in the event of specifically an error on a <code>DROP</code>;private void executeSqlScript(Connection connection, EncodedResource resource,_			boolean continueOnError, boolean ignoreFailedDrops) throws SQLException {__		if (logger.isInfoEnabled()) {_			logger.info("Executing SQL script from " + resource)__		}_		long startTime = System.currentTimeMillis()__		List<String> statements = new LinkedList<String>()__		String script__		try {_			script = readScript(resource)__		}_		catch (IOException ex) {_			throw new CannotReadScriptException(resource, ex)__		}_		String delimiter = this.separator__		if (delimiter == null) {_			delimiter = DEFAULT_STATEMENT_SEPARATOR__			if (!containsSqlScriptDelimiters(script, delimiter)) {_				delimiter = "\n"__			}_		}_		splitSqlScript(script, delimiter, statements)__		int lineNumber = 0__		Statement stmt = connection.createStatement()__		try {_			for (String statement : statements) {_				lineNumber++__				try {_					int rowsAffected = stmt.executeUpdate(statement)__					if (logger.isDebugEnabled()) {_						logger.debug(rowsAffected + " rows affected by SQL: " + statement)__					}_				}_				catch (SQLException ex) {_					boolean dropStatement = StringUtils.startsWithIgnoreCase(statement.trim(), "drop")__					if (continueOnError || (dropStatement && ignoreFailedDrops)) {_						if (logger.isDebugEnabled()) {_							logger.debug("Failed to execute SQL script statement at line " + lineNumber +_									" of resource " + resource + ": " + statement, ex)__						}_					}_					else {_						throw new ScriptStatementFailedException(statement, lineNumber, resource, ex)__					}_				}_			}_		}_		finally {_			try {_				stmt.close()__			}_			catch (Throwable ex) {_				logger.debug("Could not close JDBC Statement", ex)__			}_		}_		long elapsedTime = System.currentTimeMillis() - startTime__		if (logger.isInfoEnabled()) {_			logger.info("Done executing SQL script from " + resource + " in " + elapsedTime + " ms.")__		}_	};execute,the,given,sql,script,p,the,script,will,normally,be,loaded,by,classpath,there,should,be,one,statement,per,line,any,link,set,separator,string,statement,separators,will,be,removed,p,b,do,not,use,this,method,to,execute,ddl,if,you,expect,rollback,b,param,connection,the,jdbc,connection,with,which,to,perform,jdbc,operations,param,resource,the,resource,potentially,associated,with,a,specific,encoding,to,load,the,sql,script,from,param,continue,on,error,whether,or,not,to,continue,without,throwing,an,exception,in,the,event,of,an,error,param,ignore,failed,drops,whether,of,not,to,continue,in,the,event,of,specifically,an,error,on,a,code,drop,code;private,void,execute,sql,script,connection,connection,encoded,resource,resource,boolean,continue,on,error,boolean,ignore,failed,drops,throws,sqlexception,if,logger,is,info,enabled,logger,info,executing,sql,script,from,resource,long,start,time,system,current,time,millis,list,string,statements,new,linked,list,string,string,script,try,script,read,script,resource,catch,ioexception,ex,throw,new,cannot,read,script,exception,resource,ex,string,delimiter,this,separator,if,delimiter,null,delimiter,if,contains,sql,script,delimiters,script,delimiter,delimiter,n,split,sql,script,script,delimiter,statements,int,line,number,0,statement,stmt,connection,create,statement,try,for,string,statement,statements,line,number,try,int,rows,affected,stmt,execute,update,statement,if,logger,is,debug,enabled,logger,debug,rows,affected,rows,affected,by,sql,statement,catch,sqlexception,ex,boolean,drop,statement,string,utils,starts,with,ignore,case,statement,trim,drop,if,continue,on,error,drop,statement,ignore,failed,drops,if,logger,is,debug,enabled,logger,debug,failed,to,execute,sql,script,statement,at,line,line,number,of,resource,resource,statement,ex,else,throw,new,script,statement,failed,exception,statement,line,number,resource,ex,finally,try,stmt,close,catch,throwable,ex,logger,debug,could,not,close,jdbc,statement,ex,long,elapsed,time,system,current,time,millis,start,time,if,logger,is,info,enabled,logger,info,done,executing,sql,script,from,resource,in,elapsed,time,ms
ResourceDatabasePopulator -> private void executeSqlScript(Connection connection, EncodedResource resource, 			boolean continueOnError, boolean ignoreFailedDrops) throws SQLException;1329142650;Execute the given SQL script._<p>The script will normally be loaded by classpath. There should be one statement_per line. Any {@link #setSeparator(String) statement separators} will be removed._<p><b>Do not use this method to execute DDL if you expect rollback.</b>_@param connection the JDBC Connection with which to perform JDBC operations_@param resource the resource (potentially associated with a specific encoding) to load the SQL script from_@param continueOnError whether or not to continue without throwing an exception in the event of an error_@param ignoreFailedDrops whether of not to continue in the event of specifically an error on a <code>DROP</code>;private void executeSqlScript(Connection connection, EncodedResource resource,_			boolean continueOnError, boolean ignoreFailedDrops) throws SQLException {__		if (logger.isInfoEnabled()) {_			logger.info("Executing SQL script from " + resource)__		}_		long startTime = System.currentTimeMillis()__		List<String> statements = new LinkedList<String>()__		String script__		try {_			script = readScript(resource)__		}_		catch (IOException ex) {_			throw new CannotReadScriptException(resource, ex)__		}_		String delimiter = this.separator__		if (delimiter == null) {_			delimiter = DEFAULT_STATEMENT_SEPARATOR__			if (!containsSqlScriptDelimiters(script, delimiter)) {_				delimiter = "\n"__			}_		}_		splitSqlScript(script, delimiter, statements)__		int lineNumber = 0__		Statement stmt = connection.createStatement()__		try {_			for (String statement : statements) {_				lineNumber++__				try {_					stmt.execute(statement)__					int rowsAffected = stmt.getUpdateCount()__					if (logger.isDebugEnabled()) {_						logger.debug(rowsAffected + " returned as updateCount for SQL: " + statement)__					}_				}_				catch (SQLException ex) {_					boolean dropStatement = StringUtils.startsWithIgnoreCase(statement.trim(), "drop")__					if (continueOnError || (dropStatement && ignoreFailedDrops)) {_						if (logger.isDebugEnabled()) {_							logger.debug("Failed to execute SQL script statement at line " + lineNumber +_									" of resource " + resource + ": " + statement, ex)__						}_					}_					else {_						throw new ScriptStatementFailedException(statement, lineNumber, resource, ex)__					}_				}_			}_		}_		finally {_			try {_				stmt.close()__			}_			catch (Throwable ex) {_				logger.debug("Could not close JDBC Statement", ex)__			}_		}_		long elapsedTime = System.currentTimeMillis() - startTime__		if (logger.isInfoEnabled()) {_			logger.info("Done executing SQL script from " + resource + " in " + elapsedTime + " ms.")__		}_	};execute,the,given,sql,script,p,the,script,will,normally,be,loaded,by,classpath,there,should,be,one,statement,per,line,any,link,set,separator,string,statement,separators,will,be,removed,p,b,do,not,use,this,method,to,execute,ddl,if,you,expect,rollback,b,param,connection,the,jdbc,connection,with,which,to,perform,jdbc,operations,param,resource,the,resource,potentially,associated,with,a,specific,encoding,to,load,the,sql,script,from,param,continue,on,error,whether,or,not,to,continue,without,throwing,an,exception,in,the,event,of,an,error,param,ignore,failed,drops,whether,of,not,to,continue,in,the,event,of,specifically,an,error,on,a,code,drop,code;private,void,execute,sql,script,connection,connection,encoded,resource,resource,boolean,continue,on,error,boolean,ignore,failed,drops,throws,sqlexception,if,logger,is,info,enabled,logger,info,executing,sql,script,from,resource,long,start,time,system,current,time,millis,list,string,statements,new,linked,list,string,string,script,try,script,read,script,resource,catch,ioexception,ex,throw,new,cannot,read,script,exception,resource,ex,string,delimiter,this,separator,if,delimiter,null,delimiter,if,contains,sql,script,delimiters,script,delimiter,delimiter,n,split,sql,script,script,delimiter,statements,int,line,number,0,statement,stmt,connection,create,statement,try,for,string,statement,statements,line,number,try,stmt,execute,statement,int,rows,affected,stmt,get,update,count,if,logger,is,debug,enabled,logger,debug,rows,affected,returned,as,update,count,for,sql,statement,catch,sqlexception,ex,boolean,drop,statement,string,utils,starts,with,ignore,case,statement,trim,drop,if,continue,on,error,drop,statement,ignore,failed,drops,if,logger,is,debug,enabled,logger,debug,failed,to,execute,sql,script,statement,at,line,line,number,of,resource,resource,statement,ex,else,throw,new,script,statement,failed,exception,statement,line,number,resource,ex,finally,try,stmt,close,catch,throwable,ex,logger,debug,could,not,close,jdbc,statement,ex,long,elapsed,time,system,current,time,millis,start,time,if,logger,is,info,enabled,logger,info,done,executing,sql,script,from,resource,in,elapsed,time,ms
ResourceDatabasePopulator -> private void executeSqlScript(Connection connection, EncodedResource resource, 			boolean continueOnError, boolean ignoreFailedDrops) throws SQLException;1347368808;Execute the given SQL script._<p>The script will normally be loaded by classpath. There should be one statement_per line. Any {@link #setSeparator(String) statement separators} will be removed._<p><b>Do not use this method to execute DDL if you expect rollback.</b>_@param connection the JDBC Connection with which to perform JDBC operations_@param resource the resource (potentially associated with a specific encoding) to load the SQL script from_@param continueOnError whether or not to continue without throwing an exception in the event of an error_@param ignoreFailedDrops whether of not to continue in the event of specifically an error on a <code>DROP</code>;private void executeSqlScript(Connection connection, EncodedResource resource,_			boolean continueOnError, boolean ignoreFailedDrops) throws SQLException {__		if (logger.isInfoEnabled()) {_			logger.info("Executing SQL script from " + resource)__		}_		long startTime = System.currentTimeMillis()__		List<String> statements = new LinkedList<String>()__		String script__		try {_			script = readScript(resource)__		}_		catch (IOException ex) {_			throw new CannotReadScriptException(resource, ex)__		}_		String delimiter = this.separator__		if (delimiter == null) {_			delimiter = DEFAULT_STATEMENT_SEPARATOR__			if (!containsSqlScriptDelimiters(script, delimiter)) {_				delimiter = "\n"__			}_		}_		splitSqlScript(script, delimiter, statements)__		int lineNumber = 0__		Statement stmt = connection.createStatement()__		try {_			for (String statement : statements) {_				lineNumber++__				try {_					stmt.execute(statement)__					int rowsAffected = stmt.getUpdateCount()__					if (logger.isDebugEnabled()) {_						logger.debug(rowsAffected + " returned as updateCount for SQL: " + statement)__					}_				}_				catch (SQLException ex) {_					boolean dropStatement = StringUtils.startsWithIgnoreCase(statement.trim(), "drop")__					if (continueOnError || (dropStatement && ignoreFailedDrops)) {_						if (logger.isDebugEnabled()) {_							logger.debug("Failed to execute SQL script statement at line " + lineNumber +_									" of resource " + resource + ": " + statement, ex)__						}_					}_					else {_						throw new ScriptStatementFailedException(statement, lineNumber, resource, ex)__					}_				}_			}_		}_		finally {_			try {_				stmt.close()__			}_			catch (Throwable ex) {_				logger.debug("Could not close JDBC Statement", ex)__			}_		}_		long elapsedTime = System.currentTimeMillis() - startTime__		if (logger.isInfoEnabled()) {_			logger.info("Done executing SQL script from " + resource + " in " + elapsedTime + " ms.")__		}_	};execute,the,given,sql,script,p,the,script,will,normally,be,loaded,by,classpath,there,should,be,one,statement,per,line,any,link,set,separator,string,statement,separators,will,be,removed,p,b,do,not,use,this,method,to,execute,ddl,if,you,expect,rollback,b,param,connection,the,jdbc,connection,with,which,to,perform,jdbc,operations,param,resource,the,resource,potentially,associated,with,a,specific,encoding,to,load,the,sql,script,from,param,continue,on,error,whether,or,not,to,continue,without,throwing,an,exception,in,the,event,of,an,error,param,ignore,failed,drops,whether,of,not,to,continue,in,the,event,of,specifically,an,error,on,a,code,drop,code;private,void,execute,sql,script,connection,connection,encoded,resource,resource,boolean,continue,on,error,boolean,ignore,failed,drops,throws,sqlexception,if,logger,is,info,enabled,logger,info,executing,sql,script,from,resource,long,start,time,system,current,time,millis,list,string,statements,new,linked,list,string,string,script,try,script,read,script,resource,catch,ioexception,ex,throw,new,cannot,read,script,exception,resource,ex,string,delimiter,this,separator,if,delimiter,null,delimiter,if,contains,sql,script,delimiters,script,delimiter,delimiter,n,split,sql,script,script,delimiter,statements,int,line,number,0,statement,stmt,connection,create,statement,try,for,string,statement,statements,line,number,try,stmt,execute,statement,int,rows,affected,stmt,get,update,count,if,logger,is,debug,enabled,logger,debug,rows,affected,returned,as,update,count,for,sql,statement,catch,sqlexception,ex,boolean,drop,statement,string,utils,starts,with,ignore,case,statement,trim,drop,if,continue,on,error,drop,statement,ignore,failed,drops,if,logger,is,debug,enabled,logger,debug,failed,to,execute,sql,script,statement,at,line,line,number,of,resource,resource,statement,ex,else,throw,new,script,statement,failed,exception,statement,line,number,resource,ex,finally,try,stmt,close,catch,throwable,ex,logger,debug,could,not,close,jdbc,statement,ex,long,elapsed,time,system,current,time,millis,start,time,if,logger,is,info,enabled,logger,info,done,executing,sql,script,from,resource,in,elapsed,time,ms
ResourceDatabasePopulator -> private void executeSqlScript(Connection connection, EncodedResource resource, 			boolean continueOnError, boolean ignoreFailedDrops) throws SQLException;1349904863;Execute the given SQL script._<p>The script will normally be loaded by classpath. There should be one statement_per line. Any {@link #setSeparator(String) statement separators} will be removed._<p><b>Do not use this method to execute DDL if you expect rollback.</b>_@param connection the JDBC Connection with which to perform JDBC operations_@param resource the resource (potentially associated with a specific encoding) to load the SQL script from_@param continueOnError whether or not to continue without throwing an exception in the event of an error_@param ignoreFailedDrops whether of not to continue in the event of specifically an error on a <code>DROP</code>;private void executeSqlScript(Connection connection, EncodedResource resource,_			boolean continueOnError, boolean ignoreFailedDrops) throws SQLException {__		if (logger.isInfoEnabled()) {_			logger.info("Executing SQL script from " + resource)__		}_		long startTime = System.currentTimeMillis()__		List<String> statements = new LinkedList<String>()__		String script__		try {_			script = readScript(resource)__		}_		catch (IOException ex) {_			throw new CannotReadScriptException(resource, ex)__		}_		String delimiter = this.separator__		if (delimiter == null) {_			delimiter = DEFAULT_STATEMENT_SEPARATOR__			if (!containsSqlScriptDelimiters(script, delimiter)) {_				delimiter = "\n"__			}_		}_		splitSqlScript(script, delimiter, statements)__		int lineNumber = 0__		Statement stmt = connection.createStatement()__		try {_			for (String statement : statements) {_				lineNumber++__				try {_					stmt.execute(statement)__					int rowsAffected = stmt.getUpdateCount()__					if (logger.isDebugEnabled()) {_						logger.debug(rowsAffected + " returned as updateCount for SQL: " + statement)__					}_				}_				catch (SQLException ex) {_					boolean dropStatement = StringUtils.startsWithIgnoreCase(statement.trim(), "drop")__					if (continueOnError || (dropStatement && ignoreFailedDrops)) {_						if (logger.isDebugEnabled()) {_							logger.debug("Failed to execute SQL script statement at line " + lineNumber +_									" of resource " + resource + ": " + statement, ex)__						}_					}_					else {_						throw new ScriptStatementFailedException(statement, lineNumber, resource, ex)__					}_				}_			}_		}_		finally {_			try {_				stmt.close()__			}_			catch (Throwable ex) {_				logger.debug("Could not close JDBC Statement", ex)__			}_		}_		long elapsedTime = System.currentTimeMillis() - startTime__		if (logger.isInfoEnabled()) {_			logger.info("Done executing SQL script from " + resource + " in " + elapsedTime + " ms.")__		}_	};execute,the,given,sql,script,p,the,script,will,normally,be,loaded,by,classpath,there,should,be,one,statement,per,line,any,link,set,separator,string,statement,separators,will,be,removed,p,b,do,not,use,this,method,to,execute,ddl,if,you,expect,rollback,b,param,connection,the,jdbc,connection,with,which,to,perform,jdbc,operations,param,resource,the,resource,potentially,associated,with,a,specific,encoding,to,load,the,sql,script,from,param,continue,on,error,whether,or,not,to,continue,without,throwing,an,exception,in,the,event,of,an,error,param,ignore,failed,drops,whether,of,not,to,continue,in,the,event,of,specifically,an,error,on,a,code,drop,code;private,void,execute,sql,script,connection,connection,encoded,resource,resource,boolean,continue,on,error,boolean,ignore,failed,drops,throws,sqlexception,if,logger,is,info,enabled,logger,info,executing,sql,script,from,resource,long,start,time,system,current,time,millis,list,string,statements,new,linked,list,string,string,script,try,script,read,script,resource,catch,ioexception,ex,throw,new,cannot,read,script,exception,resource,ex,string,delimiter,this,separator,if,delimiter,null,delimiter,if,contains,sql,script,delimiters,script,delimiter,delimiter,n,split,sql,script,script,delimiter,statements,int,line,number,0,statement,stmt,connection,create,statement,try,for,string,statement,statements,line,number,try,stmt,execute,statement,int,rows,affected,stmt,get,update,count,if,logger,is,debug,enabled,logger,debug,rows,affected,returned,as,update,count,for,sql,statement,catch,sqlexception,ex,boolean,drop,statement,string,utils,starts,with,ignore,case,statement,trim,drop,if,continue,on,error,drop,statement,ignore,failed,drops,if,logger,is,debug,enabled,logger,debug,failed,to,execute,sql,script,statement,at,line,line,number,of,resource,resource,statement,ex,else,throw,new,script,statement,failed,exception,statement,line,number,resource,ex,finally,try,stmt,close,catch,throwable,ex,logger,debug,could,not,close,jdbc,statement,ex,long,elapsed,time,system,current,time,millis,start,time,if,logger,is,info,enabled,logger,info,done,executing,sql,script,from,resource,in,elapsed,time,ms
ResourceDatabasePopulator -> private void executeSqlScript(Connection connection, EncodedResource resource, 			boolean continueOnError, boolean ignoreFailedDrops) throws SQLException;1352157731;Execute the given SQL script._<p>The script will normally be loaded by classpath. There should be one statement_per line. Any {@link #setSeparator(String) statement separators} will be removed._<p><b>Do not use this method to execute DDL if you expect rollback.</b>_@param connection the JDBC Connection with which to perform JDBC operations_@param resource the resource (potentially associated with a specific encoding) to load the SQL script from_@param continueOnError whether or not to continue without throwing an exception in the event of an error_@param ignoreFailedDrops whether of not to continue in the event of specifically an error on a {@code DROP};private void executeSqlScript(Connection connection, EncodedResource resource,_			boolean continueOnError, boolean ignoreFailedDrops) throws SQLException {__		if (logger.isInfoEnabled()) {_			logger.info("Executing SQL script from " + resource)__		}_		long startTime = System.currentTimeMillis()__		List<String> statements = new LinkedList<String>()__		String script__		try {_			script = readScript(resource)__		}_		catch (IOException ex) {_			throw new CannotReadScriptException(resource, ex)__		}_		String delimiter = this.separator__		if (delimiter == null) {_			delimiter = DEFAULT_STATEMENT_SEPARATOR__			if (!containsSqlScriptDelimiters(script, delimiter)) {_				delimiter = "\n"__			}_		}_		splitSqlScript(script, delimiter, statements)__		int lineNumber = 0__		Statement stmt = connection.createStatement()__		try {_			for (String statement : statements) {_				lineNumber++__				try {_					stmt.execute(statement)__					int rowsAffected = stmt.getUpdateCount()__					if (logger.isDebugEnabled()) {_						logger.debug(rowsAffected + " returned as updateCount for SQL: " + statement)__					}_				}_				catch (SQLException ex) {_					boolean dropStatement = StringUtils.startsWithIgnoreCase(statement.trim(), "drop")__					if (continueOnError || (dropStatement && ignoreFailedDrops)) {_						if (logger.isDebugEnabled()) {_							logger.debug("Failed to execute SQL script statement at line " + lineNumber +_									" of resource " + resource + ": " + statement, ex)__						}_					}_					else {_						throw new ScriptStatementFailedException(statement, lineNumber, resource, ex)__					}_				}_			}_		}_		finally {_			try {_				stmt.close()__			}_			catch (Throwable ex) {_				logger.debug("Could not close JDBC Statement", ex)__			}_		}_		long elapsedTime = System.currentTimeMillis() - startTime__		if (logger.isInfoEnabled()) {_			logger.info("Done executing SQL script from " + resource + " in " + elapsedTime + " ms.")__		}_	};execute,the,given,sql,script,p,the,script,will,normally,be,loaded,by,classpath,there,should,be,one,statement,per,line,any,link,set,separator,string,statement,separators,will,be,removed,p,b,do,not,use,this,method,to,execute,ddl,if,you,expect,rollback,b,param,connection,the,jdbc,connection,with,which,to,perform,jdbc,operations,param,resource,the,resource,potentially,associated,with,a,specific,encoding,to,load,the,sql,script,from,param,continue,on,error,whether,or,not,to,continue,without,throwing,an,exception,in,the,event,of,an,error,param,ignore,failed,drops,whether,of,not,to,continue,in,the,event,of,specifically,an,error,on,a,code,drop;private,void,execute,sql,script,connection,connection,encoded,resource,resource,boolean,continue,on,error,boolean,ignore,failed,drops,throws,sqlexception,if,logger,is,info,enabled,logger,info,executing,sql,script,from,resource,long,start,time,system,current,time,millis,list,string,statements,new,linked,list,string,string,script,try,script,read,script,resource,catch,ioexception,ex,throw,new,cannot,read,script,exception,resource,ex,string,delimiter,this,separator,if,delimiter,null,delimiter,if,contains,sql,script,delimiters,script,delimiter,delimiter,n,split,sql,script,script,delimiter,statements,int,line,number,0,statement,stmt,connection,create,statement,try,for,string,statement,statements,line,number,try,stmt,execute,statement,int,rows,affected,stmt,get,update,count,if,logger,is,debug,enabled,logger,debug,rows,affected,returned,as,update,count,for,sql,statement,catch,sqlexception,ex,boolean,drop,statement,string,utils,starts,with,ignore,case,statement,trim,drop,if,continue,on,error,drop,statement,ignore,failed,drops,if,logger,is,debug,enabled,logger,debug,failed,to,execute,sql,script,statement,at,line,line,number,of,resource,resource,statement,ex,else,throw,new,script,statement,failed,exception,statement,line,number,resource,ex,finally,try,stmt,close,catch,throwable,ex,logger,debug,could,not,close,jdbc,statement,ex,long,elapsed,time,system,current,time,millis,start,time,if,logger,is,info,enabled,logger,info,done,executing,sql,script,from,resource,in,elapsed,time,ms
ResourceDatabasePopulator -> private void executeSqlScript(Connection connection, EncodedResource resource, 			boolean continueOnError, boolean ignoreFailedDrops) throws SQLException;1352158898;Execute the given SQL script._<p>The script will normally be loaded by classpath. There should be one statement_per line. Any {@link #setSeparator(String) statement separators} will be removed._<p><b>Do not use this method to execute DDL if you expect rollback.</b>_@param connection the JDBC Connection with which to perform JDBC operations_@param resource the resource (potentially associated with a specific encoding) to load the SQL script from_@param continueOnError whether or not to continue without throwing an exception in the event of an error_@param ignoreFailedDrops whether of not to continue in the event of specifically an error on a {@code DROP};private void executeSqlScript(Connection connection, EncodedResource resource,_			boolean continueOnError, boolean ignoreFailedDrops) throws SQLException {__		if (logger.isInfoEnabled()) {_			logger.info("Executing SQL script from " + resource)__		}_		long startTime = System.currentTimeMillis()__		List<String> statements = new LinkedList<String>()__		String script__		try {_			script = readScript(resource)__		}_		catch (IOException ex) {_			throw new CannotReadScriptException(resource, ex)__		}_		String delimiter = this.separator__		if (delimiter == null) {_			delimiter = DEFAULT_STATEMENT_SEPARATOR__			if (!containsSqlScriptDelimiters(script, delimiter)) {_				delimiter = "\n"__			}_		}_		splitSqlScript(script, delimiter, statements)__		int lineNumber = 0__		Statement stmt = connection.createStatement()__		try {_			for (String statement : statements) {_				lineNumber++__				try {_					stmt.execute(statement)__					int rowsAffected = stmt.getUpdateCount()__					if (logger.isDebugEnabled()) {_						logger.debug(rowsAffected + " returned as updateCount for SQL: " + statement)__					}_				}_				catch (SQLException ex) {_					boolean dropStatement = StringUtils.startsWithIgnoreCase(statement.trim(), "drop")__					if (continueOnError || (dropStatement && ignoreFailedDrops)) {_						if (logger.isDebugEnabled()) {_							logger.debug("Failed to execute SQL script statement at line " + lineNumber +_									" of resource " + resource + ": " + statement, ex)__						}_					}_					else {_						throw new ScriptStatementFailedException(statement, lineNumber, resource, ex)__					}_				}_			}_		}_		finally {_			try {_				stmt.close()__			}_			catch (Throwable ex) {_				logger.debug("Could not close JDBC Statement", ex)__			}_		}_		long elapsedTime = System.currentTimeMillis() - startTime__		if (logger.isInfoEnabled()) {_			logger.info("Done executing SQL script from " + resource + " in " + elapsedTime + " ms.")__		}_	};execute,the,given,sql,script,p,the,script,will,normally,be,loaded,by,classpath,there,should,be,one,statement,per,line,any,link,set,separator,string,statement,separators,will,be,removed,p,b,do,not,use,this,method,to,execute,ddl,if,you,expect,rollback,b,param,connection,the,jdbc,connection,with,which,to,perform,jdbc,operations,param,resource,the,resource,potentially,associated,with,a,specific,encoding,to,load,the,sql,script,from,param,continue,on,error,whether,or,not,to,continue,without,throwing,an,exception,in,the,event,of,an,error,param,ignore,failed,drops,whether,of,not,to,continue,in,the,event,of,specifically,an,error,on,a,code,drop;private,void,execute,sql,script,connection,connection,encoded,resource,resource,boolean,continue,on,error,boolean,ignore,failed,drops,throws,sqlexception,if,logger,is,info,enabled,logger,info,executing,sql,script,from,resource,long,start,time,system,current,time,millis,list,string,statements,new,linked,list,string,string,script,try,script,read,script,resource,catch,ioexception,ex,throw,new,cannot,read,script,exception,resource,ex,string,delimiter,this,separator,if,delimiter,null,delimiter,if,contains,sql,script,delimiters,script,delimiter,delimiter,n,split,sql,script,script,delimiter,statements,int,line,number,0,statement,stmt,connection,create,statement,try,for,string,statement,statements,line,number,try,stmt,execute,statement,int,rows,affected,stmt,get,update,count,if,logger,is,debug,enabled,logger,debug,rows,affected,returned,as,update,count,for,sql,statement,catch,sqlexception,ex,boolean,drop,statement,string,utils,starts,with,ignore,case,statement,trim,drop,if,continue,on,error,drop,statement,ignore,failed,drops,if,logger,is,debug,enabled,logger,debug,failed,to,execute,sql,script,statement,at,line,line,number,of,resource,resource,statement,ex,else,throw,new,script,statement,failed,exception,statement,line,number,resource,ex,finally,try,stmt,close,catch,throwable,ex,logger,debug,could,not,close,jdbc,statement,ex,long,elapsed,time,system,current,time,millis,start,time,if,logger,is,info,enabled,logger,info,done,executing,sql,script,from,resource,in,elapsed,time,ms
ResourceDatabasePopulator -> private EncodedResource encodeScript(Resource script);1394714705;{@link EncodedResource} is not a sub-type of {@link Resource}. Thus we_always need to wrap each script resource in an encoded resource.;private EncodedResource encodeScript(Resource script) {_		return new EncodedResource(script, this.sqlScriptEncoding)__	};link,encoded,resource,is,not,a,sub,type,of,link,resource,thus,we,always,need,to,wrap,each,script,resource,in,an,encoded,resource;private,encoded,resource,encode,script,resource,script,return,new,encoded,resource,script,this,sql,script,encoding
ResourceDatabasePopulator -> private EncodedResource encodeScript(Resource script);1394987641;{@link EncodedResource} is not a sub-type of {@link Resource}. Thus we_always need to wrap each script resource in an encoded resource.;private EncodedResource encodeScript(Resource script) {_		return new EncodedResource(script, this.sqlScriptEncoding)__	};link,encoded,resource,is,not,a,sub,type,of,link,resource,thus,we,always,need,to,wrap,each,script,resource,in,an,encoded,resource;private,encoded,resource,encode,script,resource,script,return,new,encoded,resource,script,this,sql,script,encoding
ResourceDatabasePopulator -> private EncodedResource encodeScript(Resource script);1395055592;{@link EncodedResource} is not a sub-type of {@link Resource}. Thus we_always need to wrap each script resource in an encoded resource.;private EncodedResource encodeScript(Resource script) {_		return new EncodedResource(script, this.sqlScriptEncoding)__	};link,encoded,resource,is,not,a,sub,type,of,link,resource,thus,we,always,need,to,wrap,each,script,resource,in,an,encoded,resource;private,encoded,resource,encode,script,resource,script,return,new,encoded,resource,script,this,sql,script,encoding
ResourceDatabasePopulator -> private EncodedResource encodeScript(Resource script);1395068709;{@link EncodedResource} is not a sub-type of {@link Resource}. Thus we_always need to wrap each script resource in an encoded resource.;private EncodedResource encodeScript(Resource script) {_		return new EncodedResource(script, this.sqlScriptEncoding)__	};link,encoded,resource,is,not,a,sub,type,of,link,resource,thus,we,always,need,to,wrap,each,script,resource,in,an,encoded,resource;private,encoded,resource,encode,script,resource,script,return,new,encoded,resource,script,this,sql,script,encoding
ResourceDatabasePopulator -> private EncodedResource encodeScript(Resource script);1395183391;{@link EncodedResource} is not a sub-type of {@link Resource}. Thus we_always need to wrap each script resource in an encoded resource.;private EncodedResource encodeScript(Resource script) {_		return new EncodedResource(script, this.sqlScriptEncoding)__	};link,encoded,resource,is,not,a,sub,type,of,link,resource,thus,we,always,need,to,wrap,each,script,resource,in,an,encoded,resource;private,encoded,resource,encode,script,resource,script,return,new,encoded,resource,script,this,sql,script,encoding
ResourceDatabasePopulator -> private EncodedResource encodeScript(Resource script);1396191708;{@link EncodedResource} is not a sub-type of {@link Resource}. Thus we always need_to wrap each script resource in an encoded resource.;private EncodedResource encodeScript(Resource script) {_		return new EncodedResource(script, this.sqlScriptEncoding)__	};link,encoded,resource,is,not,a,sub,type,of,link,resource,thus,we,always,need,to,wrap,each,script,resource,in,an,encoded,resource;private,encoded,resource,encode,script,resource,script,return,new,encoded,resource,script,this,sql,script,encoding
ResourceDatabasePopulator -> private EncodedResource encodeScript(Resource script);1397231067;{@link EncodedResource} is not a sub-type of {@link Resource}. Thus we always need_to wrap each script resource in an encoded resource.;private EncodedResource encodeScript(Resource script) {_		return new EncodedResource(script, this.sqlScriptEncoding)__	};link,encoded,resource,is,not,a,sub,type,of,link,resource,thus,we,always,need,to,wrap,each,script,resource,in,an,encoded,resource;private,encoded,resource,encode,script,resource,script,return,new,encoded,resource,script,this,sql,script,encoding
ResourceDatabasePopulator -> private EncodedResource encodeScript(Resource script);1397385067;{@link EncodedResource} is not a sub-type of {@link Resource}. Thus we_always need to wrap each script resource in an {@code EncodedResource}_using the configured {@linkplain #setSqlScriptEncoding encoding}._@param script the script to wrap;private EncodedResource encodeScript(Resource script) {_		return new EncodedResource(script, this.sqlScriptEncoding)__	};link,encoded,resource,is,not,a,sub,type,of,link,resource,thus,we,always,need,to,wrap,each,script,resource,in,an,code,encoded,resource,using,the,configured,linkplain,set,sql,script,encoding,encoding,param,script,the,script,to,wrap;private,encoded,resource,encode,script,resource,script,return,new,encoded,resource,script,this,sql,script,encoding
ResourceDatabasePopulator -> private EncodedResource encodeScript(Resource script);1397393502;{@link EncodedResource} is not a sub-type of {@link Resource}. Thus we_always need to wrap each script resource in an {@code EncodedResource}_using the configured {@linkplain #setSqlScriptEncoding encoding}._@param script the script to wrap_ never {@code null};private EncodedResource encodeScript(Resource script) {_		Assert.notNull(script, "script must not be null")__		return new EncodedResource(script, this.sqlScriptEncoding)__	};link,encoded,resource,is,not,a,sub,type,of,link,resource,thus,we,always,need,to,wrap,each,script,resource,in,an,code,encoded,resource,using,the,configured,linkplain,set,sql,script,encoding,encoding,param,script,the,script,to,wrap,never,code,null;private,encoded,resource,encode,script,resource,script,assert,not,null,script,script,must,not,be,null,return,new,encoded,resource,script,this,sql,script,encoding
ResourceDatabasePopulator -> private EncodedResource encodeScript(Resource script);1397394407;{@link EncodedResource} is not a sub-type of {@link Resource}. Thus we_always need to wrap each script resource in an {@code EncodedResource}_using the configured {@linkplain #setSqlScriptEncoding encoding}._@param script the script to wrap_ never {@code null};private EncodedResource encodeScript(Resource script) {_		Assert.notNull(script, "script must not be null")__		return new EncodedResource(script, this.sqlScriptEncoding)__	};link,encoded,resource,is,not,a,sub,type,of,link,resource,thus,we,always,need,to,wrap,each,script,resource,in,an,code,encoded,resource,using,the,configured,linkplain,set,sql,script,encoding,encoding,param,script,the,script,to,wrap,never,code,null;private,encoded,resource,encode,script,resource,script,assert,not,null,script,script,must,not,be,null,return,new,encoded,resource,script,this,sql,script,encoding
ResourceDatabasePopulator -> private EncodedResource encodeScript(Resource script);1401991965;{@link EncodedResource} is not a sub-type of {@link Resource}. Thus we_always need to wrap each script resource in an {@code EncodedResource}_using the configured {@linkplain #setSqlScriptEncoding encoding}._@param script the script to wrap_ never {@code null};private EncodedResource encodeScript(Resource script) {_		Assert.notNull(script, "script must not be null")__		return new EncodedResource(script, this.sqlScriptEncoding)__	};link,encoded,resource,is,not,a,sub,type,of,link,resource,thus,we,always,need,to,wrap,each,script,resource,in,an,code,encoded,resource,using,the,configured,linkplain,set,sql,script,encoding,encoding,param,script,the,script,to,wrap,never,code,null;private,encoded,resource,encode,script,resource,script,assert,not,null,script,script,must,not,be,null,return,new,encoded,resource,script,this,sql,script,encoding
ResourceDatabasePopulator -> private EncodedResource encodeScript(Resource script);1402143225;{@link EncodedResource} is not a sub-type of {@link Resource}. Thus we_always need to wrap each script resource in an {@code EncodedResource}_using the configured {@linkplain #setSqlScriptEncoding encoding}._@param script the script to wrap_ never {@code null};private EncodedResource encodeScript(Resource script) {_		Assert.notNull(script, "Script must not be null")__		return new EncodedResource(script, this.sqlScriptEncoding)__	};link,encoded,resource,is,not,a,sub,type,of,link,resource,thus,we,always,need,to,wrap,each,script,resource,in,an,code,encoded,resource,using,the,configured,linkplain,set,sql,script,encoding,encoding,param,script,the,script,to,wrap,never,code,null;private,encoded,resource,encode,script,resource,script,assert,not,null,script,script,must,not,be,null,return,new,encoded,resource,script,this,sql,script,encoding
ResourceDatabasePopulator -> private EncodedResource encodeScript(Resource script);1413848647;{@link EncodedResource} is not a sub-type of {@link Resource}. Thus we_always need to wrap each script resource in an {@code EncodedResource}_using the configured {@linkplain #setSqlScriptEncoding encoding}._@param script the script to wrap_ never {@code null};private EncodedResource encodeScript(Resource script) {_		Assert.notNull(script, "Script must not be null")__		return new EncodedResource(script, this.sqlScriptEncoding)__	};link,encoded,resource,is,not,a,sub,type,of,link,resource,thus,we,always,need,to,wrap,each,script,resource,in,an,code,encoded,resource,using,the,configured,linkplain,set,sql,script,encoding,encoding,param,script,the,script,to,wrap,never,code,null;private,encoded,resource,encode,script,resource,script,assert,not,null,script,script,must,not,be,null,return,new,encoded,resource,script,this,sql,script,encoding
ResourceDatabasePopulator -> private EncodedResource encodeScript(Resource script);1455813442;{@link EncodedResource} is not a sub-type of {@link Resource}. Thus we_always need to wrap each script resource in an {@code EncodedResource}_using the configured {@linkplain #setSqlScriptEncoding encoding}._@param script the script to wrap (never {@code null});private EncodedResource encodeScript(Resource script) {_		Assert.notNull(script, "Script must not be null")__		return new EncodedResource(script, this.sqlScriptEncoding)__	};link,encoded,resource,is,not,a,sub,type,of,link,resource,thus,we,always,need,to,wrap,each,script,resource,in,an,code,encoded,resource,using,the,configured,linkplain,set,sql,script,encoding,encoding,param,script,the,script,to,wrap,never,code,null;private,encoded,resource,encode,script,resource,script,assert,not,null,script,script,must,not,be,null,return,new,encoded,resource,script,this,sql,script,encoding
ResourceDatabasePopulator -> private EncodedResource encodeScript(Resource script);1467730834;{@link EncodedResource} is not a sub-type of {@link Resource}. Thus we_always need to wrap each script resource in an {@code EncodedResource}_using the configured {@linkplain #setSqlScriptEncoding encoding}._@param script the script to wrap (never {@code null});private EncodedResource encodeScript(Resource script) {_		Assert.notNull(script, "Script must not be null")__		return new EncodedResource(script, this.sqlScriptEncoding)__	};link,encoded,resource,is,not,a,sub,type,of,link,resource,thus,we,always,need,to,wrap,each,script,resource,in,an,code,encoded,resource,using,the,configured,linkplain,set,sql,script,encoding,encoding,param,script,the,script,to,wrap,never,code,null;private,encoded,resource,encode,script,resource,script,assert,not,null,script,script,must,not,be,null,return,new,encoded,resource,script,this,sql,script,encoding
ResourceDatabasePopulator -> public void setSqlScriptEncoding(String sqlScriptEncoding);1328020251;Specify the encoding for SQL scripts, if different from the platform encoding._Note setting this property has no effect on added scripts that are already_{@link EncodedResource encoded resources}._@see #addScript(Resource);public void setSqlScriptEncoding(String sqlScriptEncoding) {_		this.sqlScriptEncoding = sqlScriptEncoding__	};specify,the,encoding,for,sql,scripts,if,different,from,the,platform,encoding,note,setting,this,property,has,no,effect,on,added,scripts,that,are,already,link,encoded,resource,encoded,resources,see,add,script,resource;public,void,set,sql,script,encoding,string,sql,script,encoding,this,sql,script,encoding,sql,script,encoding
ResourceDatabasePopulator -> public void setSqlScriptEncoding(String sqlScriptEncoding);1329142650;Specify the encoding for SQL scripts, if different from the platform encoding._Note setting this property has no effect on added scripts that are already_{@link EncodedResource encoded resources}._@see #addScript(Resource);public void setSqlScriptEncoding(String sqlScriptEncoding) {_		this.sqlScriptEncoding = sqlScriptEncoding__	};specify,the,encoding,for,sql,scripts,if,different,from,the,platform,encoding,note,setting,this,property,has,no,effect,on,added,scripts,that,are,already,link,encoded,resource,encoded,resources,see,add,script,resource;public,void,set,sql,script,encoding,string,sql,script,encoding,this,sql,script,encoding,sql,script,encoding
ResourceDatabasePopulator -> public void setSqlScriptEncoding(String sqlScriptEncoding);1347368808;Specify the encoding for SQL scripts, if different from the platform encoding._Note setting this property has no effect on added scripts that are already_{@link EncodedResource encoded resources}._@see #addScript(Resource);public void setSqlScriptEncoding(String sqlScriptEncoding) {_		this.sqlScriptEncoding = sqlScriptEncoding__	};specify,the,encoding,for,sql,scripts,if,different,from,the,platform,encoding,note,setting,this,property,has,no,effect,on,added,scripts,that,are,already,link,encoded,resource,encoded,resources,see,add,script,resource;public,void,set,sql,script,encoding,string,sql,script,encoding,this,sql,script,encoding,sql,script,encoding
ResourceDatabasePopulator -> public void setSqlScriptEncoding(String sqlScriptEncoding);1349904863;Specify the encoding for SQL scripts, if different from the platform encoding._Note setting this property has no effect on added scripts that are already_{@link EncodedResource encoded resources}._@see #addScript(Resource);public void setSqlScriptEncoding(String sqlScriptEncoding) {_		this.sqlScriptEncoding = sqlScriptEncoding__	};specify,the,encoding,for,sql,scripts,if,different,from,the,platform,encoding,note,setting,this,property,has,no,effect,on,added,scripts,that,are,already,link,encoded,resource,encoded,resources,see,add,script,resource;public,void,set,sql,script,encoding,string,sql,script,encoding,this,sql,script,encoding,sql,script,encoding
ResourceDatabasePopulator -> public void setSqlScriptEncoding(String sqlScriptEncoding);1352157731;Specify the encoding for SQL scripts, if different from the platform encoding._Note setting this property has no effect on added scripts that are already_{@link EncodedResource encoded resources}._@see #addScript(Resource);public void setSqlScriptEncoding(String sqlScriptEncoding) {_		this.sqlScriptEncoding = sqlScriptEncoding__	};specify,the,encoding,for,sql,scripts,if,different,from,the,platform,encoding,note,setting,this,property,has,no,effect,on,added,scripts,that,are,already,link,encoded,resource,encoded,resources,see,add,script,resource;public,void,set,sql,script,encoding,string,sql,script,encoding,this,sql,script,encoding,sql,script,encoding
ResourceDatabasePopulator -> public void setSqlScriptEncoding(String sqlScriptEncoding);1352158898;Specify the encoding for SQL scripts, if different from the platform encoding._Note setting this property has no effect on added scripts that are already_{@link EncodedResource encoded resources}._@see #addScript(Resource);public void setSqlScriptEncoding(String sqlScriptEncoding) {_		this.sqlScriptEncoding = sqlScriptEncoding__	};specify,the,encoding,for,sql,scripts,if,different,from,the,platform,encoding,note,setting,this,property,has,no,effect,on,added,scripts,that,are,already,link,encoded,resource,encoded,resources,see,add,script,resource;public,void,set,sql,script,encoding,string,sql,script,encoding,this,sql,script,encoding,sql,script,encoding
ResourceDatabasePopulator -> public void setSqlScriptEncoding(String sqlScriptEncoding);1354725684;Specify the encoding for SQL scripts, if different from the platform encoding._Note setting this property has no effect on added scripts that are already_{@link EncodedResource encoded resources}._@see #addScript(Resource);public void setSqlScriptEncoding(String sqlScriptEncoding) {_		this.sqlScriptEncoding = sqlScriptEncoding__	};specify,the,encoding,for,sql,scripts,if,different,from,the,platform,encoding,note,setting,this,property,has,no,effect,on,added,scripts,that,are,already,link,encoded,resource,encoded,resources,see,add,script,resource;public,void,set,sql,script,encoding,string,sql,script,encoding,this,sql,script,encoding,sql,script,encoding
ResourceDatabasePopulator -> public void setSqlScriptEncoding(String sqlScriptEncoding);1355351963;Specify the encoding for SQL scripts, if different from the platform encoding._Note setting this property has no effect on added scripts that are already_{@link EncodedResource encoded resources}._@see #addScript(Resource);public void setSqlScriptEncoding(String sqlScriptEncoding) {_		this.sqlScriptEncoding = sqlScriptEncoding__	};specify,the,encoding,for,sql,scripts,if,different,from,the,platform,encoding,note,setting,this,property,has,no,effect,on,added,scripts,that,are,already,link,encoded,resource,encoded,resources,see,add,script,resource;public,void,set,sql,script,encoding,string,sql,script,encoding,this,sql,script,encoding,sql,script,encoding
ResourceDatabasePopulator -> public void setSqlScriptEncoding(String sqlScriptEncoding);1356735495;Specify the encoding for SQL scripts, if different from the platform encoding._Note setting this property has no effect on added scripts that are already_{@link EncodedResource encoded resources}._@see #addScript(Resource);public void setSqlScriptEncoding(String sqlScriptEncoding) {_		this.sqlScriptEncoding = sqlScriptEncoding__	};specify,the,encoding,for,sql,scripts,if,different,from,the,platform,encoding,note,setting,this,property,has,no,effect,on,added,scripts,that,are,already,link,encoded,resource,encoded,resources,see,add,script,resource;public,void,set,sql,script,encoding,string,sql,script,encoding,this,sql,script,encoding,sql,script,encoding
ResourceDatabasePopulator -> public void setSqlScriptEncoding(String sqlScriptEncoding);1357119239;Specify the encoding for SQL scripts, if different from the platform encoding._Note setting this property has no effect on added scripts that are already_{@link EncodedResource encoded resources}._@see #addScript(Resource);public void setSqlScriptEncoding(String sqlScriptEncoding) {_		this.sqlScriptEncoding = sqlScriptEncoding__	};specify,the,encoding,for,sql,scripts,if,different,from,the,platform,encoding,note,setting,this,property,has,no,effect,on,added,scripts,that,are,already,link,encoded,resource,encoded,resources,see,add,script,resource;public,void,set,sql,script,encoding,string,sql,script,encoding,this,sql,script,encoding,sql,script,encoding
ResourceDatabasePopulator -> public void setSqlScriptEncoding(String sqlScriptEncoding);1368482696;Specify the encoding for SQL scripts, if different from the platform encoding._Note setting this property has no effect on added scripts that are already_{@link EncodedResource encoded resources}._@see #addScript(Resource);public void setSqlScriptEncoding(String sqlScriptEncoding) {_		this.sqlScriptEncoding = sqlScriptEncoding__	};specify,the,encoding,for,sql,scripts,if,different,from,the,platform,encoding,note,setting,this,property,has,no,effect,on,added,scripts,that,are,already,link,encoded,resource,encoded,resources,see,add,script,resource;public,void,set,sql,script,encoding,string,sql,script,encoding,this,sql,script,encoding,sql,script,encoding
ResourceDatabasePopulator -> public void setSqlScriptEncoding(String sqlScriptEncoding);1387832430;Specify the encoding for SQL scripts, if different from the platform encoding._Note setting this property has no effect on added scripts that are already_{@link EncodedResource encoded resources}._@see #addScript(Resource);public void setSqlScriptEncoding(String sqlScriptEncoding) {_		this.sqlScriptEncoding = sqlScriptEncoding__	};specify,the,encoding,for,sql,scripts,if,different,from,the,platform,encoding,note,setting,this,property,has,no,effect,on,added,scripts,that,are,already,link,encoded,resource,encoded,resources,see,add,script,resource;public,void,set,sql,script,encoding,string,sql,script,encoding,this,sql,script,encoding,sql,script,encoding
ResourceDatabasePopulator -> public void setSqlScriptEncoding(String sqlScriptEncoding);1394708749;Specify the encoding for SQL scripts, if different from the platform encoding._<p>Note that setting this property has no effect on added scripts that are_already {@linkplain EncodedResource encoded resources}._@see #addScript(Resource);public void setSqlScriptEncoding(String sqlScriptEncoding) {_		this.sqlScriptEncoding = sqlScriptEncoding__	};specify,the,encoding,for,sql,scripts,if,different,from,the,platform,encoding,p,note,that,setting,this,property,has,no,effect,on,added,scripts,that,are,already,linkplain,encoded,resource,encoded,resources,see,add,script,resource;public,void,set,sql,script,encoding,string,sql,script,encoding,this,sql,script,encoding,sql,script,encoding
ResourceDatabasePopulator -> public void setSqlScriptEncoding(String sqlScriptEncoding);1394714705;Specify the encoding for SQL scripts, if different from the platform encoding._@see #addScript(Resource);public void setSqlScriptEncoding(String sqlScriptEncoding) {_		this.sqlScriptEncoding = sqlScriptEncoding__	};specify,the,encoding,for,sql,scripts,if,different,from,the,platform,encoding,see,add,script,resource;public,void,set,sql,script,encoding,string,sql,script,encoding,this,sql,script,encoding,sql,script,encoding
ResourceDatabasePopulator -> public void setSqlScriptEncoding(String sqlScriptEncoding);1394987641;Specify the encoding for SQL scripts, if different from the platform encoding._@see #addScript(Resource);public void setSqlScriptEncoding(String sqlScriptEncoding) {_		this.sqlScriptEncoding = sqlScriptEncoding__	};specify,the,encoding,for,sql,scripts,if,different,from,the,platform,encoding,see,add,script,resource;public,void,set,sql,script,encoding,string,sql,script,encoding,this,sql,script,encoding,sql,script,encoding
ResourceDatabasePopulator -> public void setSqlScriptEncoding(String sqlScriptEncoding);1395055592;Specify the encoding for SQL scripts, if different from the platform encoding._@see #addScript(Resource);public void setSqlScriptEncoding(String sqlScriptEncoding) {_		this.sqlScriptEncoding = sqlScriptEncoding__	};specify,the,encoding,for,sql,scripts,if,different,from,the,platform,encoding,see,add,script,resource;public,void,set,sql,script,encoding,string,sql,script,encoding,this,sql,script,encoding,sql,script,encoding
ResourceDatabasePopulator -> public void setSqlScriptEncoding(String sqlScriptEncoding);1395068709;Specify the encoding for SQL scripts, if different from the platform encoding._@see #addScript(Resource);public void setSqlScriptEncoding(String sqlScriptEncoding) {_		this.sqlScriptEncoding = sqlScriptEncoding__	};specify,the,encoding,for,sql,scripts,if,different,from,the,platform,encoding,see,add,script,resource;public,void,set,sql,script,encoding,string,sql,script,encoding,this,sql,script,encoding,sql,script,encoding
ResourceDatabasePopulator -> public void setSqlScriptEncoding(String sqlScriptEncoding);1395183391;Specify the encoding for SQL scripts, if different from the platform encoding._@param sqlScriptEncoding the encoding used in scripts_@see #addScript(Resource);public void setSqlScriptEncoding(String sqlScriptEncoding) {_		this.sqlScriptEncoding = sqlScriptEncoding__	};specify,the,encoding,for,sql,scripts,if,different,from,the,platform,encoding,param,sql,script,encoding,the,encoding,used,in,scripts,see,add,script,resource;public,void,set,sql,script,encoding,string,sql,script,encoding,this,sql,script,encoding,sql,script,encoding
ResourceDatabasePopulator -> public void setSqlScriptEncoding(String sqlScriptEncoding);1396191708;Specify the encoding for SQL scripts, if different from the platform encoding._@param sqlScriptEncoding the encoding used in scripts_@see #addScript(Resource);public void setSqlScriptEncoding(String sqlScriptEncoding) {_		this.sqlScriptEncoding = sqlScriptEncoding__	};specify,the,encoding,for,sql,scripts,if,different,from,the,platform,encoding,param,sql,script,encoding,the,encoding,used,in,scripts,see,add,script,resource;public,void,set,sql,script,encoding,string,sql,script,encoding,this,sql,script,encoding,sql,script,encoding
ResourceDatabasePopulator -> public void setSqlScriptEncoding(String sqlScriptEncoding);1397231067;Specify the encoding for SQL scripts, if different from the platform encoding._@param sqlScriptEncoding the encoding used in scripts_@see #addScript(Resource);public void setSqlScriptEncoding(String sqlScriptEncoding) {_		this.sqlScriptEncoding = sqlScriptEncoding__	};specify,the,encoding,for,sql,scripts,if,different,from,the,platform,encoding,param,sql,script,encoding,the,encoding,used,in,scripts,see,add,script,resource;public,void,set,sql,script,encoding,string,sql,script,encoding,this,sql,script,encoding,sql,script,encoding
ResourceDatabasePopulator -> public void setSqlScriptEncoding(String sqlScriptEncoding);1397385067;Specify the encoding for SQL scripts, if different from the platform encoding._@param sqlScriptEncoding the encoding used in scripts_@see #addScript(Resource);public void setSqlScriptEncoding(String sqlScriptEncoding) {_		this.sqlScriptEncoding = sqlScriptEncoding__	};specify,the,encoding,for,sql,scripts,if,different,from,the,platform,encoding,param,sql,script,encoding,the,encoding,used,in,scripts,see,add,script,resource;public,void,set,sql,script,encoding,string,sql,script,encoding,this,sql,script,encoding,sql,script,encoding
ResourceDatabasePopulator -> public void setSqlScriptEncoding(String sqlScriptEncoding);1397393502;Specify the encoding for SQL scripts, if different from the platform encoding._@param sqlScriptEncoding the encoding used in scripts_@see #addScript(Resource);public void setSqlScriptEncoding(String sqlScriptEncoding) {_		this.sqlScriptEncoding = sqlScriptEncoding__	};specify,the,encoding,for,sql,scripts,if,different,from,the,platform,encoding,param,sql,script,encoding,the,encoding,used,in,scripts,see,add,script,resource;public,void,set,sql,script,encoding,string,sql,script,encoding,this,sql,script,encoding,sql,script,encoding
ResourceDatabasePopulator -> public void setSqlScriptEncoding(String sqlScriptEncoding);1397394407;Specify the encoding for SQL scripts, if different from the platform encoding._@param sqlScriptEncoding the encoding used in scripts_@see #addScript(Resource);public void setSqlScriptEncoding(String sqlScriptEncoding) {_		this.sqlScriptEncoding = sqlScriptEncoding__	};specify,the,encoding,for,sql,scripts,if,different,from,the,platform,encoding,param,sql,script,encoding,the,encoding,used,in,scripts,see,add,script,resource;public,void,set,sql,script,encoding,string,sql,script,encoding,this,sql,script,encoding,sql,script,encoding
ResourceDatabasePopulator -> public void setSqlScriptEncoding(String sqlScriptEncoding);1401991965;Specify the encoding for SQL scripts, if different from the platform encoding._@param sqlScriptEncoding the encoding used in scripts_@see #addScript(Resource);public void setSqlScriptEncoding(String sqlScriptEncoding) {_		this.sqlScriptEncoding = StringUtils.hasText(sqlScriptEncoding) ? sqlScriptEncoding : null__	};specify,the,encoding,for,sql,scripts,if,different,from,the,platform,encoding,param,sql,script,encoding,the,encoding,used,in,scripts,see,add,script,resource;public,void,set,sql,script,encoding,string,sql,script,encoding,this,sql,script,encoding,string,utils,has,text,sql,script,encoding,sql,script,encoding,null
ResourceDatabasePopulator -> public void setSqlScriptEncoding(String sqlScriptEncoding);1402143225;Specify the encoding for the configured SQL scripts, if different from the_platform encoding._@param sqlScriptEncoding the encoding used in scripts_ may be {@code null}_or empty to indicate platform encoding_@see #addScript(Resource);public void setSqlScriptEncoding(String sqlScriptEncoding) {_		this.sqlScriptEncoding = StringUtils.hasText(sqlScriptEncoding) ? sqlScriptEncoding : null__	};specify,the,encoding,for,the,configured,sql,scripts,if,different,from,the,platform,encoding,param,sql,script,encoding,the,encoding,used,in,scripts,may,be,code,null,or,empty,to,indicate,platform,encoding,see,add,script,resource;public,void,set,sql,script,encoding,string,sql,script,encoding,this,sql,script,encoding,string,utils,has,text,sql,script,encoding,sql,script,encoding,null
ResourceDatabasePopulator -> public void setSqlScriptEncoding(String sqlScriptEncoding);1413848647;Specify the encoding for the configured SQL scripts, if different from the_platform encoding._@param sqlScriptEncoding the encoding used in scripts_ may be {@code null}_or empty to indicate platform encoding_@see #addScript(Resource);public void setSqlScriptEncoding(String sqlScriptEncoding) {_		this.sqlScriptEncoding = StringUtils.hasText(sqlScriptEncoding) ? sqlScriptEncoding : null__	};specify,the,encoding,for,the,configured,sql,scripts,if,different,from,the,platform,encoding,param,sql,script,encoding,the,encoding,used,in,scripts,may,be,code,null,or,empty,to,indicate,platform,encoding,see,add,script,resource;public,void,set,sql,script,encoding,string,sql,script,encoding,this,sql,script,encoding,string,utils,has,text,sql,script,encoding,sql,script,encoding,null
ResourceDatabasePopulator -> public void setSqlScriptEncoding(String sqlScriptEncoding);1455813442;Specify the encoding for the configured SQL scripts, if different from the_platform encoding._@param sqlScriptEncoding the encoding used in scripts_ may be {@code null}_or empty to indicate platform encoding_@see #addScript(Resource);public void setSqlScriptEncoding(String sqlScriptEncoding) {_		this.sqlScriptEncoding = StringUtils.hasText(sqlScriptEncoding) ? sqlScriptEncoding : null__	};specify,the,encoding,for,the,configured,sql,scripts,if,different,from,the,platform,encoding,param,sql,script,encoding,the,encoding,used,in,scripts,may,be,code,null,or,empty,to,indicate,platform,encoding,see,add,script,resource;public,void,set,sql,script,encoding,string,sql,script,encoding,this,sql,script,encoding,string,utils,has,text,sql,script,encoding,sql,script,encoding,null
ResourceDatabasePopulator -> public void setSqlScriptEncoding(String sqlScriptEncoding);1467730834;Specify the encoding for the configured SQL scripts, if different from the_platform encoding._@param sqlScriptEncoding the encoding used in scripts_ may be {@code null}_or empty to indicate platform encoding_@see #addScript(Resource);public void setSqlScriptEncoding(String sqlScriptEncoding) {_		this.sqlScriptEncoding = StringUtils.hasText(sqlScriptEncoding) ? sqlScriptEncoding : null__	};specify,the,encoding,for,the,configured,sql,scripts,if,different,from,the,platform,encoding,param,sql,script,encoding,the,encoding,used,in,scripts,may,be,code,null,or,empty,to,indicate,platform,encoding,see,add,script,resource;public,void,set,sql,script,encoding,string,sql,script,encoding,this,sql,script,encoding,string,utils,has,text,sql,script,encoding,sql,script,encoding,null
ResourceDatabasePopulator -> public void setSqlScriptEncoding(String sqlScriptEncoding);1477691361;Specify the encoding for the configured SQL scripts, if different from the_platform encoding._@param sqlScriptEncoding the encoding used in scripts_ may be {@code null}_or empty to indicate platform encoding_@see #addScript(Resource);public void setSqlScriptEncoding(String sqlScriptEncoding) {_		this.sqlScriptEncoding = StringUtils.hasText(sqlScriptEncoding) ? sqlScriptEncoding : null__	};specify,the,encoding,for,the,configured,sql,scripts,if,different,from,the,platform,encoding,param,sql,script,encoding,the,encoding,used,in,scripts,may,be,code,null,or,empty,to,indicate,platform,encoding,see,add,script,resource;public,void,set,sql,script,encoding,string,sql,script,encoding,this,sql,script,encoding,string,utils,has,text,sql,script,encoding,sql,script,encoding,null
ResourceDatabasePopulator -> public ResourceDatabasePopulator(boolean continueOnError, boolean ignoreFailedDrops, 			@Nullable String sqlScriptEncoding, Resource... scripts);1495868221;Construct a new {@code ResourceDatabasePopulator} with the supplied values._@param continueOnError flag to indicate that all failures in SQL should be_logged but not cause a failure_@param ignoreFailedDrops flag to indicate that a failed SQL {@code DROP}_statement can be ignored_@param sqlScriptEncoding the encoding for the supplied SQL scripts_ may_be {@code null} or <em>empty</em> to indicate platform encoding_@param scripts the scripts to execute to initialize or clean up the database_(never {@code null})_@since 4.0.3;public ResourceDatabasePopulator(boolean continueOnError, boolean ignoreFailedDrops,_			@Nullable String sqlScriptEncoding, Resource... scripts) {__		this(scripts)__		this.continueOnError = continueOnError__		this.ignoreFailedDrops = ignoreFailedDrops__		setSqlScriptEncoding(sqlScriptEncoding)__	};construct,a,new,code,resource,database,populator,with,the,supplied,values,param,continue,on,error,flag,to,indicate,that,all,failures,in,sql,should,be,logged,but,not,cause,a,failure,param,ignore,failed,drops,flag,to,indicate,that,a,failed,sql,code,drop,statement,can,be,ignored,param,sql,script,encoding,the,encoding,for,the,supplied,sql,scripts,may,be,code,null,or,em,empty,em,to,indicate,platform,encoding,param,scripts,the,scripts,to,execute,to,initialize,or,clean,up,the,database,never,code,null,since,4,0,3;public,resource,database,populator,boolean,continue,on,error,boolean,ignore,failed,drops,nullable,string,sql,script,encoding,resource,scripts,this,scripts,this,continue,on,error,continue,on,error,this,ignore,failed,drops,ignore,failed,drops,set,sql,script,encoding,sql,script,encoding
ResourceDatabasePopulator -> public ResourceDatabasePopulator(boolean continueOnError, boolean ignoreFailedDrops, 			@Nullable String sqlScriptEncoding, Resource... scripts);1498780456;Construct a new {@code ResourceDatabasePopulator} with the supplied values._@param continueOnError flag to indicate that all failures in SQL should be_logged but not cause a failure_@param ignoreFailedDrops flag to indicate that a failed SQL {@code DROP}_statement can be ignored_@param sqlScriptEncoding the encoding for the supplied SQL scripts_ may_be {@code null} or <em>empty</em> to indicate platform encoding_@param scripts the scripts to execute to initialize or clean up the database_(never {@code null})_@since 4.0.3;public ResourceDatabasePopulator(boolean continueOnError, boolean ignoreFailedDrops,_			@Nullable String sqlScriptEncoding, Resource... scripts) {__		this(scripts)__		this.continueOnError = continueOnError__		this.ignoreFailedDrops = ignoreFailedDrops__		setSqlScriptEncoding(sqlScriptEncoding)__	};construct,a,new,code,resource,database,populator,with,the,supplied,values,param,continue,on,error,flag,to,indicate,that,all,failures,in,sql,should,be,logged,but,not,cause,a,failure,param,ignore,failed,drops,flag,to,indicate,that,a,failed,sql,code,drop,statement,can,be,ignored,param,sql,script,encoding,the,encoding,for,the,supplied,sql,scripts,may,be,code,null,or,em,empty,em,to,indicate,platform,encoding,param,scripts,the,scripts,to,execute,to,initialize,or,clean,up,the,database,never,code,null,since,4,0,3;public,resource,database,populator,boolean,continue,on,error,boolean,ignore,failed,drops,nullable,string,sql,script,encoding,resource,scripts,this,scripts,this,continue,on,error,continue,on,error,this,ignore,failed,drops,ignore,failed,drops,set,sql,script,encoding,sql,script,encoding
ResourceDatabasePopulator -> public ResourceDatabasePopulator(boolean continueOnError, boolean ignoreFailedDrops, 			@Nullable String sqlScriptEncoding, Resource... scripts);1549646187;Construct a new {@code ResourceDatabasePopulator} with the supplied values._@param continueOnError flag to indicate that all failures in SQL should be_logged but not cause a failure_@param ignoreFailedDrops flag to indicate that a failed SQL {@code DROP}_statement can be ignored_@param sqlScriptEncoding the encoding for the supplied SQL scripts_(may be {@code null} or <em>empty</em> to indicate platform encoding)_@param scripts the scripts to execute to initialize or clean up the database_(never {@code null})_@since 4.0.3;public ResourceDatabasePopulator(boolean continueOnError, boolean ignoreFailedDrops,_			@Nullable String sqlScriptEncoding, Resource... scripts) {__		this.continueOnError = continueOnError__		this.ignoreFailedDrops = ignoreFailedDrops__		setSqlScriptEncoding(sqlScriptEncoding)__		setScripts(scripts)__	};construct,a,new,code,resource,database,populator,with,the,supplied,values,param,continue,on,error,flag,to,indicate,that,all,failures,in,sql,should,be,logged,but,not,cause,a,failure,param,ignore,failed,drops,flag,to,indicate,that,a,failed,sql,code,drop,statement,can,be,ignored,param,sql,script,encoding,the,encoding,for,the,supplied,sql,scripts,may,be,code,null,or,em,empty,em,to,indicate,platform,encoding,param,scripts,the,scripts,to,execute,to,initialize,or,clean,up,the,database,never,code,null,since,4,0,3;public,resource,database,populator,boolean,continue,on,error,boolean,ignore,failed,drops,nullable,string,sql,script,encoding,resource,scripts,this,continue,on,error,continue,on,error,this,ignore,failed,drops,ignore,failed,drops,set,sql,script,encoding,sql,script,encoding,set,scripts,scripts
ResourceDatabasePopulator -> public void setSqlScriptEncoding(@Nullable String sqlScriptEncoding);1495868221;Specify the encoding for the configured SQL scripts, if different from the_platform encoding._@param sqlScriptEncoding the encoding used in scripts_ may be {@code null}_or empty to indicate platform encoding_@see #addScript(Resource);public void setSqlScriptEncoding(@Nullable String sqlScriptEncoding) {_		this.sqlScriptEncoding = StringUtils.hasText(sqlScriptEncoding) ? sqlScriptEncoding : null__	};specify,the,encoding,for,the,configured,sql,scripts,if,different,from,the,platform,encoding,param,sql,script,encoding,the,encoding,used,in,scripts,may,be,code,null,or,empty,to,indicate,platform,encoding,see,add,script,resource;public,void,set,sql,script,encoding,nullable,string,sql,script,encoding,this,sql,script,encoding,string,utils,has,text,sql,script,encoding,sql,script,encoding,null
ResourceDatabasePopulator -> public void setSqlScriptEncoding(@Nullable String sqlScriptEncoding);1498780456;Specify the encoding for the configured SQL scripts, if different from the_platform encoding._@param sqlScriptEncoding the encoding used in scripts_ may be {@code null}_or empty to indicate platform encoding_@see #addScript(Resource);public void setSqlScriptEncoding(@Nullable String sqlScriptEncoding) {_		this.sqlScriptEncoding = (StringUtils.hasText(sqlScriptEncoding) ? sqlScriptEncoding : null)__	};specify,the,encoding,for,the,configured,sql,scripts,if,different,from,the,platform,encoding,param,sql,script,encoding,the,encoding,used,in,scripts,may,be,code,null,or,empty,to,indicate,platform,encoding,see,add,script,resource;public,void,set,sql,script,encoding,nullable,string,sql,script,encoding,this,sql,script,encoding,string,utils,has,text,sql,script,encoding,sql,script,encoding,null
ResourceDatabasePopulator -> public void setSqlScriptEncoding(@Nullable String sqlScriptEncoding);1549646187;Specify the encoding for the configured SQL scripts,_if different from the platform encoding._@param sqlScriptEncoding the encoding used in scripts_(may be {@code null} or empty to indicate platform encoding)_@see #addScript(Resource);public void setSqlScriptEncoding(@Nullable String sqlScriptEncoding) {_		this.sqlScriptEncoding = (StringUtils.hasText(sqlScriptEncoding) ? sqlScriptEncoding : null)__	};specify,the,encoding,for,the,configured,sql,scripts,if,different,from,the,platform,encoding,param,sql,script,encoding,the,encoding,used,in,scripts,may,be,code,null,or,empty,to,indicate,platform,encoding,see,add,script,resource;public,void,set,sql,script,encoding,nullable,string,sql,script,encoding,this,sql,script,encoding,string,utils,has,text,sql,script,encoding,sql,script,encoding,null
ResourceDatabasePopulator -> public void setScripts(Resource[] scripts);1328020251;Set the scripts to execute to populate the database._@param scripts the scripts to execute;public void setScripts(Resource[] scripts) {_		this.scripts = Arrays.asList(scripts)__	};set,the,scripts,to,execute,to,populate,the,database,param,scripts,the,scripts,to,execute;public,void,set,scripts,resource,scripts,this,scripts,arrays,as,list,scripts
ResourceDatabasePopulator -> public void setScripts(Resource[] scripts);1329142650;Set the scripts to execute to populate the database._@param scripts the scripts to execute;public void setScripts(Resource[] scripts) {_		this.scripts = Arrays.asList(scripts)__	};set,the,scripts,to,execute,to,populate,the,database,param,scripts,the,scripts,to,execute;public,void,set,scripts,resource,scripts,this,scripts,arrays,as,list,scripts
ResourceDatabasePopulator -> public void setScripts(Resource[] scripts);1347368808;Set the scripts to execute to populate the database._@param scripts the scripts to execute;public void setScripts(Resource[] scripts) {_		this.scripts = Arrays.asList(scripts)__	};set,the,scripts,to,execute,to,populate,the,database,param,scripts,the,scripts,to,execute;public,void,set,scripts,resource,scripts,this,scripts,arrays,as,list,scripts
ResourceDatabasePopulator -> public void setScripts(Resource[] scripts);1349904863;Set the scripts to execute to populate the database._@param scripts the scripts to execute;public void setScripts(Resource[] scripts) {_		this.scripts = Arrays.asList(scripts)__	};set,the,scripts,to,execute,to,populate,the,database,param,scripts,the,scripts,to,execute;public,void,set,scripts,resource,scripts,this,scripts,arrays,as,list,scripts
ResourceDatabasePopulator -> public void setScripts(Resource[] scripts);1352157731;Set the scripts to execute to populate the database._@param scripts the scripts to execute;public void setScripts(Resource[] scripts) {_		this.scripts = Arrays.asList(scripts)__	};set,the,scripts,to,execute,to,populate,the,database,param,scripts,the,scripts,to,execute;public,void,set,scripts,resource,scripts,this,scripts,arrays,as,list,scripts
ResourceDatabasePopulator -> public void setScripts(Resource[] scripts);1352158898;Set the scripts to execute to populate the database._@param scripts the scripts to execute;public void setScripts(Resource[] scripts) {_		this.scripts = Arrays.asList(scripts)__	};set,the,scripts,to,execute,to,populate,the,database,param,scripts,the,scripts,to,execute;public,void,set,scripts,resource,scripts,this,scripts,arrays,as,list,scripts
ResourceDatabasePopulator -> public void setScripts(Resource[] scripts);1354725684;Set the scripts to execute to populate the database._@param scripts the scripts to execute;public void setScripts(Resource[] scripts) {_		this.scripts = Arrays.asList(scripts)__	};set,the,scripts,to,execute,to,populate,the,database,param,scripts,the,scripts,to,execute;public,void,set,scripts,resource,scripts,this,scripts,arrays,as,list,scripts
ResourceDatabasePopulator -> public void setScripts(Resource[] scripts);1355351963;Set the scripts to execute to populate the database._@param scripts the scripts to execute;public void setScripts(Resource[] scripts) {_		this.scripts = Arrays.asList(scripts)__	};set,the,scripts,to,execute,to,populate,the,database,param,scripts,the,scripts,to,execute;public,void,set,scripts,resource,scripts,this,scripts,arrays,as,list,scripts
ResourceDatabasePopulator -> public void setScripts(Resource[] scripts);1356735495;Set the scripts to execute to populate the database._@param scripts the scripts to execute;public void setScripts(Resource[] scripts) {_		this.scripts = Arrays.asList(scripts)__	};set,the,scripts,to,execute,to,populate,the,database,param,scripts,the,scripts,to,execute;public,void,set,scripts,resource,scripts,this,scripts,arrays,as,list,scripts
ResourceDatabasePopulator -> public void setScripts(Resource[] scripts);1357119239;Set the scripts to execute to populate the database._@param scripts the scripts to execute;public void setScripts(Resource[] scripts) {_		this.scripts = Arrays.asList(scripts)__	};set,the,scripts,to,execute,to,populate,the,database,param,scripts,the,scripts,to,execute;public,void,set,scripts,resource,scripts,this,scripts,arrays,as,list,scripts
ResourceDatabasePopulator -> public void setScripts(Resource[] scripts);1368482696;Set the scripts to execute to populate the database._@param scripts the scripts to execute;public void setScripts(Resource[] scripts) {_		this.scripts = Arrays.asList(scripts)__	};set,the,scripts,to,execute,to,populate,the,database,param,scripts,the,scripts,to,execute;public,void,set,scripts,resource,scripts,this,scripts,arrays,as,list,scripts
ResourceDatabasePopulator -> private boolean containsSqlScriptDelimiters(String script, String delim);1328020251;Does the provided SQL script contain the specified delimiter?_@param script the SQL script_@param delim character delimiting each statement - typically a '_' character;private boolean containsSqlScriptDelimiters(String script, String delim) {_		boolean inLiteral = false__		char[] content = script.toCharArray()__		for (int i = 0_ i < script.length()_ i++) {_			if (content[i] == '\'') {_				inLiteral = !inLiteral__			}_			if (!inLiteral && script.substring(i).startsWith(delim)) {_				return true__			}_		}_		return false__	};does,the,provided,sql,script,contain,the,specified,delimiter,param,script,the,sql,script,param,delim,character,delimiting,each,statement,typically,a,character;private,boolean,contains,sql,script,delimiters,string,script,string,delim,boolean,in,literal,false,char,content,script,to,char,array,for,int,i,0,i,script,length,i,if,content,i,in,literal,in,literal,if,in,literal,script,substring,i,starts,with,delim,return,true,return,false
ResourceDatabasePopulator -> private boolean containsSqlScriptDelimiters(String script, String delim);1329142650;Does the provided SQL script contain the specified delimiter?_@param script the SQL script_@param delim character delimiting each statement - typically a '_' character;private boolean containsSqlScriptDelimiters(String script, String delim) {_		boolean inLiteral = false__		char[] content = script.toCharArray()__		for (int i = 0_ i < script.length()_ i++) {_			if (content[i] == '\'') {_				inLiteral = !inLiteral__			}_			if (!inLiteral && script.substring(i).startsWith(delim)) {_				return true__			}_		}_		return false__	};does,the,provided,sql,script,contain,the,specified,delimiter,param,script,the,sql,script,param,delim,character,delimiting,each,statement,typically,a,character;private,boolean,contains,sql,script,delimiters,string,script,string,delim,boolean,in,literal,false,char,content,script,to,char,array,for,int,i,0,i,script,length,i,if,content,i,in,literal,in,literal,if,in,literal,script,substring,i,starts,with,delim,return,true,return,false
ResourceDatabasePopulator -> private boolean containsSqlScriptDelimiters(String script, String delim);1347368808;Does the provided SQL script contain the specified delimiter?_@param script the SQL script_@param delim character delimiting each statement - typically a '_' character;private boolean containsSqlScriptDelimiters(String script, String delim) {_		boolean inLiteral = false__		char[] content = script.toCharArray()__		for (int i = 0_ i < script.length()_ i++) {_			if (content[i] == '\'') {_				inLiteral = !inLiteral__			}_			if (!inLiteral && startsWithDelimiter(script, i, delim)) {_				return true__			}_		}_		return false__	};does,the,provided,sql,script,contain,the,specified,delimiter,param,script,the,sql,script,param,delim,character,delimiting,each,statement,typically,a,character;private,boolean,contains,sql,script,delimiters,string,script,string,delim,boolean,in,literal,false,char,content,script,to,char,array,for,int,i,0,i,script,length,i,if,content,i,in,literal,in,literal,if,in,literal,starts,with,delimiter,script,i,delim,return,true,return,false
ResourceDatabasePopulator -> private boolean containsSqlScriptDelimiters(String script, String delim);1349904863;Does the provided SQL script contain the specified delimiter?_@param script the SQL script_@param delim character delimiting each statement - typically a '_' character;private boolean containsSqlScriptDelimiters(String script, String delim) {_		boolean inLiteral = false__		char[] content = script.toCharArray()__		for (int i = 0_ i < script.length()_ i++) {_			if (content[i] == '\'') {_				inLiteral = !inLiteral__			}_			if (!inLiteral && startsWithDelimiter(script, i, delim)) {_				return true__			}_		}_		return false__	};does,the,provided,sql,script,contain,the,specified,delimiter,param,script,the,sql,script,param,delim,character,delimiting,each,statement,typically,a,character;private,boolean,contains,sql,script,delimiters,string,script,string,delim,boolean,in,literal,false,char,content,script,to,char,array,for,int,i,0,i,script,length,i,if,content,i,in,literal,in,literal,if,in,literal,starts,with,delimiter,script,i,delim,return,true,return,false
ResourceDatabasePopulator -> private boolean containsSqlScriptDelimiters(String script, String delim);1352157731;Does the provided SQL script contain the specified delimiter?_@param script the SQL script_@param delim character delimiting each statement - typically a '_' character;private boolean containsSqlScriptDelimiters(String script, String delim) {_		boolean inLiteral = false__		char[] content = script.toCharArray()__		for (int i = 0_ i < script.length()_ i++) {_			if (content[i] == '\'') {_				inLiteral = !inLiteral__			}_			if (!inLiteral && startsWithDelimiter(script, i, delim)) {_				return true__			}_		}_		return false__	};does,the,provided,sql,script,contain,the,specified,delimiter,param,script,the,sql,script,param,delim,character,delimiting,each,statement,typically,a,character;private,boolean,contains,sql,script,delimiters,string,script,string,delim,boolean,in,literal,false,char,content,script,to,char,array,for,int,i,0,i,script,length,i,if,content,i,in,literal,in,literal,if,in,literal,starts,with,delimiter,script,i,delim,return,true,return,false
ResourceDatabasePopulator -> private boolean containsSqlScriptDelimiters(String script, String delim);1352158898;Does the provided SQL script contain the specified delimiter?_@param script the SQL script_@param delim character delimiting each statement - typically a '_' character;private boolean containsSqlScriptDelimiters(String script, String delim) {_		boolean inLiteral = false__		char[] content = script.toCharArray()__		for (int i = 0_ i < script.length()_ i++) {_			if (content[i] == '\'') {_				inLiteral = !inLiteral__			}_			if (!inLiteral && startsWithDelimiter(script, i, delim)) {_				return true__			}_		}_		return false__	};does,the,provided,sql,script,contain,the,specified,delimiter,param,script,the,sql,script,param,delim,character,delimiting,each,statement,typically,a,character;private,boolean,contains,sql,script,delimiters,string,script,string,delim,boolean,in,literal,false,char,content,script,to,char,array,for,int,i,0,i,script,length,i,if,content,i,in,literal,in,literal,if,in,literal,starts,with,delimiter,script,i,delim,return,true,return,false
ResourceDatabasePopulator -> private boolean containsSqlScriptDelimiters(String script, String delim);1354725684;Does the provided SQL script contain the specified delimiter?_@param script the SQL script_@param delim character delimiting each statement - typically a '_' character;private boolean containsSqlScriptDelimiters(String script, String delim) {_		boolean inLiteral = false__		char[] content = script.toCharArray()__		for (int i = 0_ i < script.length()_ i++) {_			if (content[i] == '\'') {_				inLiteral = !inLiteral__			}_			if (!inLiteral && script.startsWith(delim, i)) {_				return true__			}_		}_		return false__	};does,the,provided,sql,script,contain,the,specified,delimiter,param,script,the,sql,script,param,delim,character,delimiting,each,statement,typically,a,character;private,boolean,contains,sql,script,delimiters,string,script,string,delim,boolean,in,literal,false,char,content,script,to,char,array,for,int,i,0,i,script,length,i,if,content,i,in,literal,in,literal,if,in,literal,script,starts,with,delim,i,return,true,return,false
ResourceDatabasePopulator -> private boolean containsSqlScriptDelimiters(String script, String delim);1355351963;Does the provided SQL script contain the specified delimiter?_@param script the SQL script_@param delim character delimiting each statement - typically a '_' character;private boolean containsSqlScriptDelimiters(String script, String delim) {_		boolean inLiteral = false__		char[] content = script.toCharArray()__		for (int i = 0_ i < script.length()_ i++) {_			if (content[i] == '\'') {_				inLiteral = !inLiteral__			}_			if (!inLiteral && script.startsWith(delim, i)) {_				return true__			}_		}_		return false__	};does,the,provided,sql,script,contain,the,specified,delimiter,param,script,the,sql,script,param,delim,character,delimiting,each,statement,typically,a,character;private,boolean,contains,sql,script,delimiters,string,script,string,delim,boolean,in,literal,false,char,content,script,to,char,array,for,int,i,0,i,script,length,i,if,content,i,in,literal,in,literal,if,in,literal,script,starts,with,delim,i,return,true,return,false
ResourceDatabasePopulator -> private boolean containsSqlScriptDelimiters(String script, String delim);1356735495;Does the provided SQL script contain the specified delimiter?_@param script the SQL script_@param delim character delimiting each statement - typically a '_' character;private boolean containsSqlScriptDelimiters(String script, String delim) {_		boolean inLiteral = false__		char[] content = script.toCharArray()__		for (int i = 0_ i < script.length()_ i++) {_			if (content[i] == '\'') {_				inLiteral = !inLiteral__			}_			if (!inLiteral && script.startsWith(delim, i)) {_				return true__			}_		}_		return false__	};does,the,provided,sql,script,contain,the,specified,delimiter,param,script,the,sql,script,param,delim,character,delimiting,each,statement,typically,a,character;private,boolean,contains,sql,script,delimiters,string,script,string,delim,boolean,in,literal,false,char,content,script,to,char,array,for,int,i,0,i,script,length,i,if,content,i,in,literal,in,literal,if,in,literal,script,starts,with,delim,i,return,true,return,false
ResourceDatabasePopulator -> private boolean containsSqlScriptDelimiters(String script, String delim);1357119239;Does the provided SQL script contain the specified delimiter?_@param script the SQL script_@param delim character delimiting each statement - typically a '_' character;private boolean containsSqlScriptDelimiters(String script, String delim) {_		boolean inLiteral = false__		char[] content = script.toCharArray()__		for (int i = 0_ i < script.length()_ i++) {_			if (content[i] == '\'') {_				inLiteral = !inLiteral__			}_			if (!inLiteral && script.startsWith(delim, i)) {_				return true__			}_		}_		return false__	};does,the,provided,sql,script,contain,the,specified,delimiter,param,script,the,sql,script,param,delim,character,delimiting,each,statement,typically,a,character;private,boolean,contains,sql,script,delimiters,string,script,string,delim,boolean,in,literal,false,char,content,script,to,char,array,for,int,i,0,i,script,length,i,if,content,i,in,literal,in,literal,if,in,literal,script,starts,with,delim,i,return,true,return,false
ResourceDatabasePopulator -> private boolean containsSqlScriptDelimiters(String script, String delim);1368482696;Does the provided SQL script contain the specified delimiter?_@param script the SQL script_@param delim character delimiting each statement - typically a '_' character;private boolean containsSqlScriptDelimiters(String script, String delim) {_		boolean inLiteral = false__		char[] content = script.toCharArray()__		for (int i = 0_ i < script.length()_ i++) {_			if (content[i] == '\'') {_				inLiteral = !inLiteral__			}_			if (!inLiteral && script.startsWith(delim, i)) {_				return true__			}_		}_		return false__	};does,the,provided,sql,script,contain,the,specified,delimiter,param,script,the,sql,script,param,delim,character,delimiting,each,statement,typically,a,character;private,boolean,contains,sql,script,delimiters,string,script,string,delim,boolean,in,literal,false,char,content,script,to,char,array,for,int,i,0,i,script,length,i,if,content,i,in,literal,in,literal,if,in,literal,script,starts,with,delim,i,return,true,return,false
ResourceDatabasePopulator -> private boolean containsSqlScriptDelimiters(String script, String delim);1387832430;Does the provided SQL script contain the specified delimiter?_@param script the SQL script_@param delim character delimiting each statement - typically a '_' character;private boolean containsSqlScriptDelimiters(String script, String delim) {_		boolean inLiteral = false__		char[] content = script.toCharArray()__		for (int i = 0_ i < script.length()_ i++) {_			if (content[i] == '\'') {_				inLiteral = !inLiteral__			}_			if (!inLiteral && script.startsWith(delim, i)) {_				return true__			}_		}_		return false__	};does,the,provided,sql,script,contain,the,specified,delimiter,param,script,the,sql,script,param,delim,character,delimiting,each,statement,typically,a,character;private,boolean,contains,sql,script,delimiters,string,script,string,delim,boolean,in,literal,false,char,content,script,to,char,array,for,int,i,0,i,script,length,i,if,content,i,in,literal,in,literal,if,in,literal,script,starts,with,delim,i,return,true,return,false
ResourceDatabasePopulator -> public void setBlockCommentEndDelimiter(String blockCommentEndDelimiter);1394708749;Set the end delimiter that identifies block comments within the SQL_scripts._<p>Default is "*&#47_"._@since 4.0.3_@see #setBlockCommentStartDelimiter;public void setBlockCommentEndDelimiter(String blockCommentEndDelimiter) {_		this.blockCommentEndDelimiter = blockCommentEndDelimiter__	};set,the,end,delimiter,that,identifies,block,comments,within,the,sql,scripts,p,default,is,47,since,4,0,3,see,set,block,comment,start,delimiter;public,void,set,block,comment,end,delimiter,string,block,comment,end,delimiter,this,block,comment,end,delimiter,block,comment,end,delimiter
ResourceDatabasePopulator -> public void setBlockCommentEndDelimiter(String blockCommentEndDelimiter);1394714705;Set the end delimiter that identifies block comments within the SQL_scripts._<p>Default is "*&#47_"._@since 4.0.3_@see #setBlockCommentStartDelimiter;public void setBlockCommentEndDelimiter(String blockCommentEndDelimiter) {_		this.blockCommentEndDelimiter = blockCommentEndDelimiter__	};set,the,end,delimiter,that,identifies,block,comments,within,the,sql,scripts,p,default,is,47,since,4,0,3,see,set,block,comment,start,delimiter;public,void,set,block,comment,end,delimiter,string,block,comment,end,delimiter,this,block,comment,end,delimiter,block,comment,end,delimiter
ResourceDatabasePopulator -> public void setBlockCommentEndDelimiter(String blockCommentEndDelimiter);1394987641;Set the end delimiter that identifies block comments within the SQL_scripts._<p>Default is "*&#47_"._@since 4.0.3_@see #setBlockCommentStartDelimiter;public void setBlockCommentEndDelimiter(String blockCommentEndDelimiter) {_		this.blockCommentEndDelimiter = blockCommentEndDelimiter__	};set,the,end,delimiter,that,identifies,block,comments,within,the,sql,scripts,p,default,is,47,since,4,0,3,see,set,block,comment,start,delimiter;public,void,set,block,comment,end,delimiter,string,block,comment,end,delimiter,this,block,comment,end,delimiter,block,comment,end,delimiter
ResourceDatabasePopulator -> public void setBlockCommentEndDelimiter(String blockCommentEndDelimiter);1395055592;Set the end delimiter that identifies block comments within the SQL_scripts._<p>Default is "*&#47_"._@since 4.0.3_@see #setBlockCommentStartDelimiter;public void setBlockCommentEndDelimiter(String blockCommentEndDelimiter) {_		this.blockCommentEndDelimiter = blockCommentEndDelimiter__	};set,the,end,delimiter,that,identifies,block,comments,within,the,sql,scripts,p,default,is,47,since,4,0,3,see,set,block,comment,start,delimiter;public,void,set,block,comment,end,delimiter,string,block,comment,end,delimiter,this,block,comment,end,delimiter,block,comment,end,delimiter
ResourceDatabasePopulator -> public void setBlockCommentEndDelimiter(String blockCommentEndDelimiter);1395068709;Set the end delimiter that identifies block comments within the SQL_scripts._<p>Default is "*&#47_"._@since 4.0.3_@see #setBlockCommentStartDelimiter;public void setBlockCommentEndDelimiter(String blockCommentEndDelimiter) {_		this.blockCommentEndDelimiter = blockCommentEndDelimiter__	};set,the,end,delimiter,that,identifies,block,comments,within,the,sql,scripts,p,default,is,47,since,4,0,3,see,set,block,comment,start,delimiter;public,void,set,block,comment,end,delimiter,string,block,comment,end,delimiter,this,block,comment,end,delimiter,block,comment,end,delimiter
ResourceDatabasePopulator -> public void setBlockCommentEndDelimiter(String blockCommentEndDelimiter);1395183391;Set the end delimiter that identifies block comments within the SQL_scripts._<p>Default is "*&#47_"._@param blockCommentEndDelimiter the end delimiter for block comments_@since 4.0.3_@see #setBlockCommentStartDelimiter;public void setBlockCommentEndDelimiter(String blockCommentEndDelimiter) {_		this.blockCommentEndDelimiter = blockCommentEndDelimiter__	};set,the,end,delimiter,that,identifies,block,comments,within,the,sql,scripts,p,default,is,47,param,block,comment,end,delimiter,the,end,delimiter,for,block,comments,since,4,0,3,see,set,block,comment,start,delimiter;public,void,set,block,comment,end,delimiter,string,block,comment,end,delimiter,this,block,comment,end,delimiter,block,comment,end,delimiter
ResourceDatabasePopulator -> public void setBlockCommentEndDelimiter(String blockCommentEndDelimiter);1396191708;Set the end delimiter that identifies block comments within the SQL_scripts._<p>Default is "*&#47_"._@param blockCommentEndDelimiter the end delimiter for block comments_@since 4.0.3_@see #setBlockCommentStartDelimiter;public void setBlockCommentEndDelimiter(String blockCommentEndDelimiter) {_		this.blockCommentEndDelimiter = blockCommentEndDelimiter__	};set,the,end,delimiter,that,identifies,block,comments,within,the,sql,scripts,p,default,is,47,param,block,comment,end,delimiter,the,end,delimiter,for,block,comments,since,4,0,3,see,set,block,comment,start,delimiter;public,void,set,block,comment,end,delimiter,string,block,comment,end,delimiter,this,block,comment,end,delimiter,block,comment,end,delimiter
ResourceDatabasePopulator -> public void setBlockCommentEndDelimiter(String blockCommentEndDelimiter);1397231067;Set the end delimiter that identifies block comments within the SQL_scripts._<p>Defaults to <code>"*&#47_"</code>._@param blockCommentEndDelimiter the end delimiter for block comments_@since 4.0.3_@see #setBlockCommentStartDelimiter;public void setBlockCommentEndDelimiter(String blockCommentEndDelimiter) {_		this.blockCommentEndDelimiter = blockCommentEndDelimiter__	};set,the,end,delimiter,that,identifies,block,comments,within,the,sql,scripts,p,defaults,to,code,47,code,param,block,comment,end,delimiter,the,end,delimiter,for,block,comments,since,4,0,3,see,set,block,comment,start,delimiter;public,void,set,block,comment,end,delimiter,string,block,comment,end,delimiter,this,block,comment,end,delimiter,block,comment,end,delimiter
ResourceDatabasePopulator -> public void setBlockCommentEndDelimiter(String blockCommentEndDelimiter);1397385067;Set the end delimiter that identifies block comments within the SQL_scripts._<p>Defaults to <code>"*&#47_"</code>._@param blockCommentEndDelimiter the end delimiter for block comments_@since 4.0.3_@see #setBlockCommentStartDelimiter;public void setBlockCommentEndDelimiter(String blockCommentEndDelimiter) {_		this.blockCommentEndDelimiter = blockCommentEndDelimiter__	};set,the,end,delimiter,that,identifies,block,comments,within,the,sql,scripts,p,defaults,to,code,47,code,param,block,comment,end,delimiter,the,end,delimiter,for,block,comments,since,4,0,3,see,set,block,comment,start,delimiter;public,void,set,block,comment,end,delimiter,string,block,comment,end,delimiter,this,block,comment,end,delimiter,block,comment,end,delimiter
ResourceDatabasePopulator -> public void setBlockCommentEndDelimiter(String blockCommentEndDelimiter);1397393502;Set the end delimiter that identifies block comments within the SQL_scripts._<p>Defaults to <code>"*&#47_"</code>._@param blockCommentEndDelimiter the end delimiter for block comments__never {@code null} or empty_@since 4.0.3_@see #setBlockCommentStartDelimiter;public void setBlockCommentEndDelimiter(String blockCommentEndDelimiter) {_		Assert.hasText(blockCommentEndDelimiter, "blockCommentEndDelimiter must not be null or empty")__		this.blockCommentEndDelimiter = blockCommentEndDelimiter__	};set,the,end,delimiter,that,identifies,block,comments,within,the,sql,scripts,p,defaults,to,code,47,code,param,block,comment,end,delimiter,the,end,delimiter,for,block,comments,never,code,null,or,empty,since,4,0,3,see,set,block,comment,start,delimiter;public,void,set,block,comment,end,delimiter,string,block,comment,end,delimiter,assert,has,text,block,comment,end,delimiter,block,comment,end,delimiter,must,not,be,null,or,empty,this,block,comment,end,delimiter,block,comment,end,delimiter
ResourceDatabasePopulator -> public void setBlockCommentEndDelimiter(String blockCommentEndDelimiter);1397394407;Set the end delimiter that identifies block comments within the SQL_scripts._<p>Defaults to <code>"*&#47_"</code>._@param blockCommentEndDelimiter the end delimiter for block comments__never {@code null} or empty_@since 4.0.3_@see #setBlockCommentStartDelimiter;public void setBlockCommentEndDelimiter(String blockCommentEndDelimiter) {_		Assert.hasText(blockCommentEndDelimiter, "blockCommentEndDelimiter must not be null or empty")__		this.blockCommentEndDelimiter = blockCommentEndDelimiter__	};set,the,end,delimiter,that,identifies,block,comments,within,the,sql,scripts,p,defaults,to,code,47,code,param,block,comment,end,delimiter,the,end,delimiter,for,block,comments,never,code,null,or,empty,since,4,0,3,see,set,block,comment,start,delimiter;public,void,set,block,comment,end,delimiter,string,block,comment,end,delimiter,assert,has,text,block,comment,end,delimiter,block,comment,end,delimiter,must,not,be,null,or,empty,this,block,comment,end,delimiter,block,comment,end,delimiter
ResourceDatabasePopulator -> public void setBlockCommentEndDelimiter(String blockCommentEndDelimiter);1401991965;Set the end delimiter that identifies block comments within the SQL_scripts._<p>Defaults to <code>"*&#47_"</code>._@param blockCommentEndDelimiter the end delimiter for block comments__never {@code null} or empty_@since 4.0.3_@see #setBlockCommentStartDelimiter;public void setBlockCommentEndDelimiter(String blockCommentEndDelimiter) {_		Assert.hasText(blockCommentEndDelimiter, "blockCommentEndDelimiter must not be null or empty")__		this.blockCommentEndDelimiter = blockCommentEndDelimiter__	};set,the,end,delimiter,that,identifies,block,comments,within,the,sql,scripts,p,defaults,to,code,47,code,param,block,comment,end,delimiter,the,end,delimiter,for,block,comments,never,code,null,or,empty,since,4,0,3,see,set,block,comment,start,delimiter;public,void,set,block,comment,end,delimiter,string,block,comment,end,delimiter,assert,has,text,block,comment,end,delimiter,block,comment,end,delimiter,must,not,be,null,or,empty,this,block,comment,end,delimiter,block,comment,end,delimiter
ResourceDatabasePopulator -> public void setBlockCommentEndDelimiter(String blockCommentEndDelimiter);1402143225;Set the end delimiter that identifies block comments within the SQL_scripts._<p>Defaults to <code>"*&#47_"</code>._@param blockCommentEndDelimiter the end delimiter for block comments__never {@code null} or empty_@since 4.0.3_@see #setBlockCommentStartDelimiter;public void setBlockCommentEndDelimiter(String blockCommentEndDelimiter) {_		Assert.hasText(blockCommentEndDelimiter, "BlockCommentEndDelimiter must not be null or empty")__		this.blockCommentEndDelimiter = blockCommentEndDelimiter__	};set,the,end,delimiter,that,identifies,block,comments,within,the,sql,scripts,p,defaults,to,code,47,code,param,block,comment,end,delimiter,the,end,delimiter,for,block,comments,never,code,null,or,empty,since,4,0,3,see,set,block,comment,start,delimiter;public,void,set,block,comment,end,delimiter,string,block,comment,end,delimiter,assert,has,text,block,comment,end,delimiter,block,comment,end,delimiter,must,not,be,null,or,empty,this,block,comment,end,delimiter,block,comment,end,delimiter
ResourceDatabasePopulator -> public void setBlockCommentEndDelimiter(String blockCommentEndDelimiter);1413848647;Set the end delimiter that identifies block comments within the SQL_scripts._<p>Defaults to <code>"*&#47_"</code>._@param blockCommentEndDelimiter the end delimiter for block comments__never {@code null} or empty_@since 4.0.3_@see #setBlockCommentStartDelimiter;public void setBlockCommentEndDelimiter(String blockCommentEndDelimiter) {_		Assert.hasText(blockCommentEndDelimiter, "BlockCommentEndDelimiter must not be null or empty")__		this.blockCommentEndDelimiter = blockCommentEndDelimiter__	};set,the,end,delimiter,that,identifies,block,comments,within,the,sql,scripts,p,defaults,to,code,47,code,param,block,comment,end,delimiter,the,end,delimiter,for,block,comments,never,code,null,or,empty,since,4,0,3,see,set,block,comment,start,delimiter;public,void,set,block,comment,end,delimiter,string,block,comment,end,delimiter,assert,has,text,block,comment,end,delimiter,block,comment,end,delimiter,must,not,be,null,or,empty,this,block,comment,end,delimiter,block,comment,end,delimiter
ResourceDatabasePopulator -> public void setBlockCommentEndDelimiter(String blockCommentEndDelimiter);1455813442;Set the end delimiter that identifies block comments within the SQL_scripts._<p>Defaults to <code>"*&#47_"</code>._@param blockCommentEndDelimiter the end delimiter for block comments_(never {@code null} or empty)_@since 4.0.3_@see #setBlockCommentStartDelimiter;public void setBlockCommentEndDelimiter(String blockCommentEndDelimiter) {_		Assert.hasText(blockCommentEndDelimiter, "BlockCommentEndDelimiter must not be null or empty")__		this.blockCommentEndDelimiter = blockCommentEndDelimiter__	};set,the,end,delimiter,that,identifies,block,comments,within,the,sql,scripts,p,defaults,to,code,47,code,param,block,comment,end,delimiter,the,end,delimiter,for,block,comments,never,code,null,or,empty,since,4,0,3,see,set,block,comment,start,delimiter;public,void,set,block,comment,end,delimiter,string,block,comment,end,delimiter,assert,has,text,block,comment,end,delimiter,block,comment,end,delimiter,must,not,be,null,or,empty,this,block,comment,end,delimiter,block,comment,end,delimiter
ResourceDatabasePopulator -> public void setBlockCommentEndDelimiter(String blockCommentEndDelimiter);1467730834;Set the end delimiter that identifies block comments within the SQL_scripts._<p>Defaults to <code>"*&#47_"</code>._@param blockCommentEndDelimiter the end delimiter for block comments_(never {@code null} or empty)_@since 4.0.3_@see #setBlockCommentStartDelimiter;public void setBlockCommentEndDelimiter(String blockCommentEndDelimiter) {_		Assert.hasText(blockCommentEndDelimiter, "BlockCommentEndDelimiter must not be null or empty")__		this.blockCommentEndDelimiter = blockCommentEndDelimiter__	};set,the,end,delimiter,that,identifies,block,comments,within,the,sql,scripts,p,defaults,to,code,47,code,param,block,comment,end,delimiter,the,end,delimiter,for,block,comments,never,code,null,or,empty,since,4,0,3,see,set,block,comment,start,delimiter;public,void,set,block,comment,end,delimiter,string,block,comment,end,delimiter,assert,has,text,block,comment,end,delimiter,block,comment,end,delimiter,must,not,be,null,or,empty,this,block,comment,end,delimiter,block,comment,end,delimiter
ResourceDatabasePopulator -> public void setBlockCommentEndDelimiter(String blockCommentEndDelimiter);1477691361;Set the end delimiter that identifies block comments within the SQL_scripts._<p>Defaults to <code>"*&#47_"</code>._@param blockCommentEndDelimiter the end delimiter for block comments_(never {@code null} or empty)_@since 4.0.3_@see #setBlockCommentStartDelimiter;public void setBlockCommentEndDelimiter(String blockCommentEndDelimiter) {_		Assert.hasText(blockCommentEndDelimiter, "BlockCommentEndDelimiter must not be null or empty")__		this.blockCommentEndDelimiter = blockCommentEndDelimiter__	};set,the,end,delimiter,that,identifies,block,comments,within,the,sql,scripts,p,defaults,to,code,47,code,param,block,comment,end,delimiter,the,end,delimiter,for,block,comments,never,code,null,or,empty,since,4,0,3,see,set,block,comment,start,delimiter;public,void,set,block,comment,end,delimiter,string,block,comment,end,delimiter,assert,has,text,block,comment,end,delimiter,block,comment,end,delimiter,must,not,be,null,or,empty,this,block,comment,end,delimiter,block,comment,end,delimiter
ResourceDatabasePopulator -> public void setBlockCommentEndDelimiter(String blockCommentEndDelimiter);1495868221;Set the end delimiter that identifies block comments within the SQL_scripts._<p>Defaults to <code>"*&#47_"</code>._@param blockCommentEndDelimiter the end delimiter for block comments_(never {@code null} or empty)_@since 4.0.3_@see #setBlockCommentStartDelimiter;public void setBlockCommentEndDelimiter(String blockCommentEndDelimiter) {_		Assert.hasText(blockCommentEndDelimiter, "BlockCommentEndDelimiter must not be null or empty")__		this.blockCommentEndDelimiter = blockCommentEndDelimiter__	};set,the,end,delimiter,that,identifies,block,comments,within,the,sql,scripts,p,defaults,to,code,47,code,param,block,comment,end,delimiter,the,end,delimiter,for,block,comments,never,code,null,or,empty,since,4,0,3,see,set,block,comment,start,delimiter;public,void,set,block,comment,end,delimiter,string,block,comment,end,delimiter,assert,has,text,block,comment,end,delimiter,block,comment,end,delimiter,must,not,be,null,or,empty,this,block,comment,end,delimiter,block,comment,end,delimiter
ResourceDatabasePopulator -> public void setBlockCommentEndDelimiter(String blockCommentEndDelimiter);1498780456;Set the end delimiter that identifies block comments within the SQL_scripts._<p>Defaults to <code>"*&#47_"</code>._@param blockCommentEndDelimiter the end delimiter for block comments_(never {@code null} or empty)_@since 4.0.3_@see #setBlockCommentStartDelimiter;public void setBlockCommentEndDelimiter(String blockCommentEndDelimiter) {_		Assert.hasText(blockCommentEndDelimiter, "BlockCommentEndDelimiter must not be null or empty")__		this.blockCommentEndDelimiter = blockCommentEndDelimiter__	};set,the,end,delimiter,that,identifies,block,comments,within,the,sql,scripts,p,defaults,to,code,47,code,param,block,comment,end,delimiter,the,end,delimiter,for,block,comments,never,code,null,or,empty,since,4,0,3,see,set,block,comment,start,delimiter;public,void,set,block,comment,end,delimiter,string,block,comment,end,delimiter,assert,has,text,block,comment,end,delimiter,block,comment,end,delimiter,must,not,be,null,or,empty,this,block,comment,end,delimiter,block,comment,end,delimiter
ResourceDatabasePopulator -> public void setBlockCommentEndDelimiter(String blockCommentEndDelimiter);1549646187;Set the end delimiter that identifies block comments within the SQL_scripts._<p>Defaults to <code>"*&#47_"</code>._@param blockCommentEndDelimiter the end delimiter for block comments_(never {@code null} or empty)_@since 4.0.3_@see #setBlockCommentStartDelimiter;public void setBlockCommentEndDelimiter(String blockCommentEndDelimiter) {_		Assert.hasText(blockCommentEndDelimiter, "BlockCommentEndDelimiter must not be null or empty")__		this.blockCommentEndDelimiter = blockCommentEndDelimiter__	};set,the,end,delimiter,that,identifies,block,comments,within,the,sql,scripts,p,defaults,to,code,47,code,param,block,comment,end,delimiter,the,end,delimiter,for,block,comments,never,code,null,or,empty,since,4,0,3,see,set,block,comment,start,delimiter;public,void,set,block,comment,end,delimiter,string,block,comment,end,delimiter,assert,has,text,block,comment,end,delimiter,block,comment,end,delimiter,must,not,be,null,or,empty,this,block,comment,end,delimiter,block,comment,end,delimiter
ResourceDatabasePopulator -> public ResourceDatabasePopulator(boolean continueOnError, boolean ignoreFailedDrops, 			String sqlScriptEncoding, Resource... scripts);1455813442;Construct a new {@code ResourceDatabasePopulator} with the supplied values._@param continueOnError flag to indicate that all failures in SQL should be_logged but not cause a failure_@param ignoreFailedDrops flag to indicate that a failed SQL {@code DROP}_statement can be ignored_@param sqlScriptEncoding the encoding for the supplied SQL scripts_ may_be {@code null} or <em>empty</em> to indicate platform encoding_@param scripts the scripts to execute to initialize or clean up the database_(never {@code null})_@since 4.0.3;public ResourceDatabasePopulator(boolean continueOnError, boolean ignoreFailedDrops,_			String sqlScriptEncoding, Resource... scripts) {__		this(scripts)__		this.continueOnError = continueOnError__		this.ignoreFailedDrops = ignoreFailedDrops__		setSqlScriptEncoding(sqlScriptEncoding)__	};construct,a,new,code,resource,database,populator,with,the,supplied,values,param,continue,on,error,flag,to,indicate,that,all,failures,in,sql,should,be,logged,but,not,cause,a,failure,param,ignore,failed,drops,flag,to,indicate,that,a,failed,sql,code,drop,statement,can,be,ignored,param,sql,script,encoding,the,encoding,for,the,supplied,sql,scripts,may,be,code,null,or,em,empty,em,to,indicate,platform,encoding,param,scripts,the,scripts,to,execute,to,initialize,or,clean,up,the,database,never,code,null,since,4,0,3;public,resource,database,populator,boolean,continue,on,error,boolean,ignore,failed,drops,string,sql,script,encoding,resource,scripts,this,scripts,this,continue,on,error,continue,on,error,this,ignore,failed,drops,ignore,failed,drops,set,sql,script,encoding,sql,script,encoding
ResourceDatabasePopulator -> public ResourceDatabasePopulator(boolean continueOnError, boolean ignoreFailedDrops, 			String sqlScriptEncoding, Resource... scripts);1467730834;Construct a new {@code ResourceDatabasePopulator} with the supplied values._@param continueOnError flag to indicate that all failures in SQL should be_logged but not cause a failure_@param ignoreFailedDrops flag to indicate that a failed SQL {@code DROP}_statement can be ignored_@param sqlScriptEncoding the encoding for the supplied SQL scripts_ may_be {@code null} or <em>empty</em> to indicate platform encoding_@param scripts the scripts to execute to initialize or clean up the database_(never {@code null})_@since 4.0.3;public ResourceDatabasePopulator(boolean continueOnError, boolean ignoreFailedDrops,_			String sqlScriptEncoding, Resource... scripts) {__		this(scripts)__		this.continueOnError = continueOnError__		this.ignoreFailedDrops = ignoreFailedDrops__		setSqlScriptEncoding(sqlScriptEncoding)__	};construct,a,new,code,resource,database,populator,with,the,supplied,values,param,continue,on,error,flag,to,indicate,that,all,failures,in,sql,should,be,logged,but,not,cause,a,failure,param,ignore,failed,drops,flag,to,indicate,that,a,failed,sql,code,drop,statement,can,be,ignored,param,sql,script,encoding,the,encoding,for,the,supplied,sql,scripts,may,be,code,null,or,em,empty,em,to,indicate,platform,encoding,param,scripts,the,scripts,to,execute,to,initialize,or,clean,up,the,database,never,code,null,since,4,0,3;public,resource,database,populator,boolean,continue,on,error,boolean,ignore,failed,drops,string,sql,script,encoding,resource,scripts,this,scripts,this,continue,on,error,continue,on,error,this,ignore,failed,drops,ignore,failed,drops,set,sql,script,encoding,sql,script,encoding
ResourceDatabasePopulator -> public ResourceDatabasePopulator(boolean continueOnError, boolean ignoreFailedDrops, 			String sqlScriptEncoding, Resource... scripts);1477691361;Construct a new {@code ResourceDatabasePopulator} with the supplied values._@param continueOnError flag to indicate that all failures in SQL should be_logged but not cause a failure_@param ignoreFailedDrops flag to indicate that a failed SQL {@code DROP}_statement can be ignored_@param sqlScriptEncoding the encoding for the supplied SQL scripts_ may_be {@code null} or <em>empty</em> to indicate platform encoding_@param scripts the scripts to execute to initialize or clean up the database_(never {@code null})_@since 4.0.3;public ResourceDatabasePopulator(boolean continueOnError, boolean ignoreFailedDrops,_			String sqlScriptEncoding, Resource... scripts) {__		this(scripts)__		this.continueOnError = continueOnError__		this.ignoreFailedDrops = ignoreFailedDrops__		setSqlScriptEncoding(sqlScriptEncoding)__	};construct,a,new,code,resource,database,populator,with,the,supplied,values,param,continue,on,error,flag,to,indicate,that,all,failures,in,sql,should,be,logged,but,not,cause,a,failure,param,ignore,failed,drops,flag,to,indicate,that,a,failed,sql,code,drop,statement,can,be,ignored,param,sql,script,encoding,the,encoding,for,the,supplied,sql,scripts,may,be,code,null,or,em,empty,em,to,indicate,platform,encoding,param,scripts,the,scripts,to,execute,to,initialize,or,clean,up,the,database,never,code,null,since,4,0,3;public,resource,database,populator,boolean,continue,on,error,boolean,ignore,failed,drops,string,sql,script,encoding,resource,scripts,this,scripts,this,continue,on,error,continue,on,error,this,ignore,failed,drops,ignore,failed,drops,set,sql,script,encoding,sql,script,encoding
ResourceDatabasePopulator -> public void setBlockCommentStartDelimiter(String blockCommentStartDelimiter);1394708749;Set the start delimiter that identifies block comments within the SQL_scripts._<p>Default is "/*"._@since 4.0.3_@see #setBlockCommentEndDelimiter;public void setBlockCommentStartDelimiter(String blockCommentStartDelimiter) {_		this.blockCommentStartDelimiter = blockCommentStartDelimiter__	};set,the,start,delimiter,that,identifies,block,comments,within,the,sql,scripts,p,default,is,since,4,0,3,see,set,block,comment,end,delimiter;public,void,set,block,comment,start,delimiter,string,block,comment,start,delimiter,this,block,comment,start,delimiter,block,comment,start,delimiter
ResourceDatabasePopulator -> public void setBlockCommentStartDelimiter(String blockCommentStartDelimiter);1394714705;Set the start delimiter that identifies block comments within the SQL_scripts._<p>Default is "/*"._@since 4.0.3_@see #setBlockCommentEndDelimiter;public void setBlockCommentStartDelimiter(String blockCommentStartDelimiter) {_		this.blockCommentStartDelimiter = blockCommentStartDelimiter__	};set,the,start,delimiter,that,identifies,block,comments,within,the,sql,scripts,p,default,is,since,4,0,3,see,set,block,comment,end,delimiter;public,void,set,block,comment,start,delimiter,string,block,comment,start,delimiter,this,block,comment,start,delimiter,block,comment,start,delimiter
ResourceDatabasePopulator -> public void setBlockCommentStartDelimiter(String blockCommentStartDelimiter);1394987641;Set the start delimiter that identifies block comments within the SQL_scripts._<p>Default is "/*"._@since 4.0.3_@see #setBlockCommentEndDelimiter;public void setBlockCommentStartDelimiter(String blockCommentStartDelimiter) {_		this.blockCommentStartDelimiter = blockCommentStartDelimiter__	};set,the,start,delimiter,that,identifies,block,comments,within,the,sql,scripts,p,default,is,since,4,0,3,see,set,block,comment,end,delimiter;public,void,set,block,comment,start,delimiter,string,block,comment,start,delimiter,this,block,comment,start,delimiter,block,comment,start,delimiter
ResourceDatabasePopulator -> public void setBlockCommentStartDelimiter(String blockCommentStartDelimiter);1395055592;Set the start delimiter that identifies block comments within the SQL_scripts._<p>Default is "/*"._@since 4.0.3_@see #setBlockCommentEndDelimiter;public void setBlockCommentStartDelimiter(String blockCommentStartDelimiter) {_		this.blockCommentStartDelimiter = blockCommentStartDelimiter__	};set,the,start,delimiter,that,identifies,block,comments,within,the,sql,scripts,p,default,is,since,4,0,3,see,set,block,comment,end,delimiter;public,void,set,block,comment,start,delimiter,string,block,comment,start,delimiter,this,block,comment,start,delimiter,block,comment,start,delimiter
ResourceDatabasePopulator -> public void setBlockCommentStartDelimiter(String blockCommentStartDelimiter);1395068709;Set the start delimiter that identifies block comments within the SQL_scripts._<p>Default is "/*"._@since 4.0.3_@see #setBlockCommentEndDelimiter;public void setBlockCommentStartDelimiter(String blockCommentStartDelimiter) {_		this.blockCommentStartDelimiter = blockCommentStartDelimiter__	};set,the,start,delimiter,that,identifies,block,comments,within,the,sql,scripts,p,default,is,since,4,0,3,see,set,block,comment,end,delimiter;public,void,set,block,comment,start,delimiter,string,block,comment,start,delimiter,this,block,comment,start,delimiter,block,comment,start,delimiter
ResourceDatabasePopulator -> public void setBlockCommentStartDelimiter(String blockCommentStartDelimiter);1395183391;Set the start delimiter that identifies block comments within the SQL_scripts._<p>Default is "/*"._@param blockCommentStartDelimiter the start delimiter for block comments_@since 4.0.3_@see #setBlockCommentEndDelimiter;public void setBlockCommentStartDelimiter(String blockCommentStartDelimiter) {_		this.blockCommentStartDelimiter = blockCommentStartDelimiter__	};set,the,start,delimiter,that,identifies,block,comments,within,the,sql,scripts,p,default,is,param,block,comment,start,delimiter,the,start,delimiter,for,block,comments,since,4,0,3,see,set,block,comment,end,delimiter;public,void,set,block,comment,start,delimiter,string,block,comment,start,delimiter,this,block,comment,start,delimiter,block,comment,start,delimiter
ResourceDatabasePopulator -> public void setBlockCommentStartDelimiter(String blockCommentStartDelimiter);1396191708;Set the start delimiter that identifies block comments within the SQL_scripts._<p>Default is "/*"._@param blockCommentStartDelimiter the start delimiter for block comments_@since 4.0.3_@see #setBlockCommentEndDelimiter;public void setBlockCommentStartDelimiter(String blockCommentStartDelimiter) {_		this.blockCommentStartDelimiter = blockCommentStartDelimiter__	};set,the,start,delimiter,that,identifies,block,comments,within,the,sql,scripts,p,default,is,param,block,comment,start,delimiter,the,start,delimiter,for,block,comments,since,4,0,3,see,set,block,comment,end,delimiter;public,void,set,block,comment,start,delimiter,string,block,comment,start,delimiter,this,block,comment,start,delimiter,block,comment,start,delimiter
ResourceDatabasePopulator -> public void setBlockCommentStartDelimiter(String blockCommentStartDelimiter);1397231067;Set the start delimiter that identifies block comments within the SQL_scripts._<p>Defaults to {@code "/*"}._@param blockCommentStartDelimiter the start delimiter for block comments_@since 4.0.3_@see #setBlockCommentEndDelimiter;public void setBlockCommentStartDelimiter(String blockCommentStartDelimiter) {_		this.blockCommentStartDelimiter = blockCommentStartDelimiter__	};set,the,start,delimiter,that,identifies,block,comments,within,the,sql,scripts,p,defaults,to,code,param,block,comment,start,delimiter,the,start,delimiter,for,block,comments,since,4,0,3,see,set,block,comment,end,delimiter;public,void,set,block,comment,start,delimiter,string,block,comment,start,delimiter,this,block,comment,start,delimiter,block,comment,start,delimiter
ResourceDatabasePopulator -> public void setBlockCommentStartDelimiter(String blockCommentStartDelimiter);1397385067;Set the start delimiter that identifies block comments within the SQL_scripts._<p>Defaults to {@code "/*"}._@param blockCommentStartDelimiter the start delimiter for block comments_@since 4.0.3_@see #setBlockCommentEndDelimiter;public void setBlockCommentStartDelimiter(String blockCommentStartDelimiter) {_		this.blockCommentStartDelimiter = blockCommentStartDelimiter__	};set,the,start,delimiter,that,identifies,block,comments,within,the,sql,scripts,p,defaults,to,code,param,block,comment,start,delimiter,the,start,delimiter,for,block,comments,since,4,0,3,see,set,block,comment,end,delimiter;public,void,set,block,comment,start,delimiter,string,block,comment,start,delimiter,this,block,comment,start,delimiter,block,comment,start,delimiter
ResourceDatabasePopulator -> public void setBlockCommentStartDelimiter(String blockCommentStartDelimiter);1397393502;Set the start delimiter that identifies block comments within the SQL_scripts._<p>Defaults to {@code "/*"}._@param blockCommentStartDelimiter the start delimiter for block comments__never {@code null} or empty_@since 4.0.3_@see #setBlockCommentEndDelimiter;public void setBlockCommentStartDelimiter(String blockCommentStartDelimiter) {_		Assert.hasText(blockCommentStartDelimiter, "blockCommentStartDelimiter must not be null or empty")__		this.blockCommentStartDelimiter = blockCommentStartDelimiter__	};set,the,start,delimiter,that,identifies,block,comments,within,the,sql,scripts,p,defaults,to,code,param,block,comment,start,delimiter,the,start,delimiter,for,block,comments,never,code,null,or,empty,since,4,0,3,see,set,block,comment,end,delimiter;public,void,set,block,comment,start,delimiter,string,block,comment,start,delimiter,assert,has,text,block,comment,start,delimiter,block,comment,start,delimiter,must,not,be,null,or,empty,this,block,comment,start,delimiter,block,comment,start,delimiter
ResourceDatabasePopulator -> public void setBlockCommentStartDelimiter(String blockCommentStartDelimiter);1397394407;Set the start delimiter that identifies block comments within the SQL_scripts._<p>Defaults to {@code "/*"}._@param blockCommentStartDelimiter the start delimiter for block comments__never {@code null} or empty_@since 4.0.3_@see #setBlockCommentEndDelimiter;public void setBlockCommentStartDelimiter(String blockCommentStartDelimiter) {_		Assert.hasText(blockCommentStartDelimiter, "blockCommentStartDelimiter must not be null or empty")__		this.blockCommentStartDelimiter = blockCommentStartDelimiter__	};set,the,start,delimiter,that,identifies,block,comments,within,the,sql,scripts,p,defaults,to,code,param,block,comment,start,delimiter,the,start,delimiter,for,block,comments,never,code,null,or,empty,since,4,0,3,see,set,block,comment,end,delimiter;public,void,set,block,comment,start,delimiter,string,block,comment,start,delimiter,assert,has,text,block,comment,start,delimiter,block,comment,start,delimiter,must,not,be,null,or,empty,this,block,comment,start,delimiter,block,comment,start,delimiter
ResourceDatabasePopulator -> public void setBlockCommentStartDelimiter(String blockCommentStartDelimiter);1401991965;Set the start delimiter that identifies block comments within the SQL_scripts._<p>Defaults to {@code "/*"}._@param blockCommentStartDelimiter the start delimiter for block comments__never {@code null} or empty_@since 4.0.3_@see #setBlockCommentEndDelimiter;public void setBlockCommentStartDelimiter(String blockCommentStartDelimiter) {_		Assert.hasText(blockCommentStartDelimiter, "blockCommentStartDelimiter must not be null or empty")__		this.blockCommentStartDelimiter = blockCommentStartDelimiter__	};set,the,start,delimiter,that,identifies,block,comments,within,the,sql,scripts,p,defaults,to,code,param,block,comment,start,delimiter,the,start,delimiter,for,block,comments,never,code,null,or,empty,since,4,0,3,see,set,block,comment,end,delimiter;public,void,set,block,comment,start,delimiter,string,block,comment,start,delimiter,assert,has,text,block,comment,start,delimiter,block,comment,start,delimiter,must,not,be,null,or,empty,this,block,comment,start,delimiter,block,comment,start,delimiter
ResourceDatabasePopulator -> public void setBlockCommentStartDelimiter(String blockCommentStartDelimiter);1402143225;Set the start delimiter that identifies block comments within the SQL_scripts._<p>Defaults to {@code "/*"}._@param blockCommentStartDelimiter the start delimiter for block comments__never {@code null} or empty_@since 4.0.3_@see #setBlockCommentEndDelimiter;public void setBlockCommentStartDelimiter(String blockCommentStartDelimiter) {_		Assert.hasText(blockCommentStartDelimiter, "BlockCommentStartDelimiter must not be null or empty")__		this.blockCommentStartDelimiter = blockCommentStartDelimiter__	};set,the,start,delimiter,that,identifies,block,comments,within,the,sql,scripts,p,defaults,to,code,param,block,comment,start,delimiter,the,start,delimiter,for,block,comments,never,code,null,or,empty,since,4,0,3,see,set,block,comment,end,delimiter;public,void,set,block,comment,start,delimiter,string,block,comment,start,delimiter,assert,has,text,block,comment,start,delimiter,block,comment,start,delimiter,must,not,be,null,or,empty,this,block,comment,start,delimiter,block,comment,start,delimiter
ResourceDatabasePopulator -> public void setBlockCommentStartDelimiter(String blockCommentStartDelimiter);1413848647;Set the start delimiter that identifies block comments within the SQL_scripts._<p>Defaults to {@code "/*"}._@param blockCommentStartDelimiter the start delimiter for block comments__never {@code null} or empty_@since 4.0.3_@see #setBlockCommentEndDelimiter;public void setBlockCommentStartDelimiter(String blockCommentStartDelimiter) {_		Assert.hasText(blockCommentStartDelimiter, "BlockCommentStartDelimiter must not be null or empty")__		this.blockCommentStartDelimiter = blockCommentStartDelimiter__	};set,the,start,delimiter,that,identifies,block,comments,within,the,sql,scripts,p,defaults,to,code,param,block,comment,start,delimiter,the,start,delimiter,for,block,comments,never,code,null,or,empty,since,4,0,3,see,set,block,comment,end,delimiter;public,void,set,block,comment,start,delimiter,string,block,comment,start,delimiter,assert,has,text,block,comment,start,delimiter,block,comment,start,delimiter,must,not,be,null,or,empty,this,block,comment,start,delimiter,block,comment,start,delimiter
ResourceDatabasePopulator -> public void setBlockCommentStartDelimiter(String blockCommentStartDelimiter);1455813442;Set the start delimiter that identifies block comments within the SQL_scripts._<p>Defaults to {@code "/*"}._@param blockCommentStartDelimiter the start delimiter for block comments_(never {@code null} or empty)_@since 4.0.3_@see #setBlockCommentEndDelimiter;public void setBlockCommentStartDelimiter(String blockCommentStartDelimiter) {_		Assert.hasText(blockCommentStartDelimiter, "BlockCommentStartDelimiter must not be null or empty")__		this.blockCommentStartDelimiter = blockCommentStartDelimiter__	};set,the,start,delimiter,that,identifies,block,comments,within,the,sql,scripts,p,defaults,to,code,param,block,comment,start,delimiter,the,start,delimiter,for,block,comments,never,code,null,or,empty,since,4,0,3,see,set,block,comment,end,delimiter;public,void,set,block,comment,start,delimiter,string,block,comment,start,delimiter,assert,has,text,block,comment,start,delimiter,block,comment,start,delimiter,must,not,be,null,or,empty,this,block,comment,start,delimiter,block,comment,start,delimiter
ResourceDatabasePopulator -> public void setBlockCommentStartDelimiter(String blockCommentStartDelimiter);1467730834;Set the start delimiter that identifies block comments within the SQL_scripts._<p>Defaults to {@code "/*"}._@param blockCommentStartDelimiter the start delimiter for block comments_(never {@code null} or empty)_@since 4.0.3_@see #setBlockCommentEndDelimiter;public void setBlockCommentStartDelimiter(String blockCommentStartDelimiter) {_		Assert.hasText(blockCommentStartDelimiter, "BlockCommentStartDelimiter must not be null or empty")__		this.blockCommentStartDelimiter = blockCommentStartDelimiter__	};set,the,start,delimiter,that,identifies,block,comments,within,the,sql,scripts,p,defaults,to,code,param,block,comment,start,delimiter,the,start,delimiter,for,block,comments,never,code,null,or,empty,since,4,0,3,see,set,block,comment,end,delimiter;public,void,set,block,comment,start,delimiter,string,block,comment,start,delimiter,assert,has,text,block,comment,start,delimiter,block,comment,start,delimiter,must,not,be,null,or,empty,this,block,comment,start,delimiter,block,comment,start,delimiter
ResourceDatabasePopulator -> public void setBlockCommentStartDelimiter(String blockCommentStartDelimiter);1477691361;Set the start delimiter that identifies block comments within the SQL_scripts._<p>Defaults to {@code "/*"}._@param blockCommentStartDelimiter the start delimiter for block comments_(never {@code null} or empty)_@since 4.0.3_@see #setBlockCommentEndDelimiter;public void setBlockCommentStartDelimiter(String blockCommentStartDelimiter) {_		Assert.hasText(blockCommentStartDelimiter, "BlockCommentStartDelimiter must not be null or empty")__		this.blockCommentStartDelimiter = blockCommentStartDelimiter__	};set,the,start,delimiter,that,identifies,block,comments,within,the,sql,scripts,p,defaults,to,code,param,block,comment,start,delimiter,the,start,delimiter,for,block,comments,never,code,null,or,empty,since,4,0,3,see,set,block,comment,end,delimiter;public,void,set,block,comment,start,delimiter,string,block,comment,start,delimiter,assert,has,text,block,comment,start,delimiter,block,comment,start,delimiter,must,not,be,null,or,empty,this,block,comment,start,delimiter,block,comment,start,delimiter
ResourceDatabasePopulator -> public void setBlockCommentStartDelimiter(String blockCommentStartDelimiter);1495868221;Set the start delimiter that identifies block comments within the SQL_scripts._<p>Defaults to {@code "/*"}._@param blockCommentStartDelimiter the start delimiter for block comments_(never {@code null} or empty)_@since 4.0.3_@see #setBlockCommentEndDelimiter;public void setBlockCommentStartDelimiter(String blockCommentStartDelimiter) {_		Assert.hasText(blockCommentStartDelimiter, "BlockCommentStartDelimiter must not be null or empty")__		this.blockCommentStartDelimiter = blockCommentStartDelimiter__	};set,the,start,delimiter,that,identifies,block,comments,within,the,sql,scripts,p,defaults,to,code,param,block,comment,start,delimiter,the,start,delimiter,for,block,comments,never,code,null,or,empty,since,4,0,3,see,set,block,comment,end,delimiter;public,void,set,block,comment,start,delimiter,string,block,comment,start,delimiter,assert,has,text,block,comment,start,delimiter,block,comment,start,delimiter,must,not,be,null,or,empty,this,block,comment,start,delimiter,block,comment,start,delimiter
ResourceDatabasePopulator -> public void setBlockCommentStartDelimiter(String blockCommentStartDelimiter);1498780456;Set the start delimiter that identifies block comments within the SQL_scripts._<p>Defaults to {@code "/*"}._@param blockCommentStartDelimiter the start delimiter for block comments_(never {@code null} or empty)_@since 4.0.3_@see #setBlockCommentEndDelimiter;public void setBlockCommentStartDelimiter(String blockCommentStartDelimiter) {_		Assert.hasText(blockCommentStartDelimiter, "BlockCommentStartDelimiter must not be null or empty")__		this.blockCommentStartDelimiter = blockCommentStartDelimiter__	};set,the,start,delimiter,that,identifies,block,comments,within,the,sql,scripts,p,defaults,to,code,param,block,comment,start,delimiter,the,start,delimiter,for,block,comments,never,code,null,or,empty,since,4,0,3,see,set,block,comment,end,delimiter;public,void,set,block,comment,start,delimiter,string,block,comment,start,delimiter,assert,has,text,block,comment,start,delimiter,block,comment,start,delimiter,must,not,be,null,or,empty,this,block,comment,start,delimiter,block,comment,start,delimiter
ResourceDatabasePopulator -> public void setBlockCommentStartDelimiter(String blockCommentStartDelimiter);1549646187;Set the start delimiter that identifies block comments within the SQL_scripts._<p>Defaults to {@code "/*"}._@param blockCommentStartDelimiter the start delimiter for block comments_(never {@code null} or empty)_@since 4.0.3_@see #setBlockCommentEndDelimiter;public void setBlockCommentStartDelimiter(String blockCommentStartDelimiter) {_		Assert.hasText(blockCommentStartDelimiter, "BlockCommentStartDelimiter must not be null or empty")__		this.blockCommentStartDelimiter = blockCommentStartDelimiter__	};set,the,start,delimiter,that,identifies,block,comments,within,the,sql,scripts,p,defaults,to,code,param,block,comment,start,delimiter,the,start,delimiter,for,block,comments,never,code,null,or,empty,since,4,0,3,see,set,block,comment,end,delimiter;public,void,set,block,comment,start,delimiter,string,block,comment,start,delimiter,assert,has,text,block,comment,start,delimiter,block,comment,start,delimiter,must,not,be,null,or,empty,this,block,comment,start,delimiter,block,comment,start,delimiter
