# id;timestamp;commentText;codeText;commentWords;codeWords
SqlParameter -> public SqlParameter(SqlParameter otherParam);1328020251;Copy constructor._@param otherParam the SqlParameter object to copy from;public SqlParameter(SqlParameter otherParam) {_		Assert.notNull(otherParam, "SqlParameter object must not be null")__		this.name = otherParam.name__		this.sqlType = otherParam.sqlType__		this.typeName = otherParam.typeName__		this.scale = otherParam.scale__	};copy,constructor,param,other,param,the,sql,parameter,object,to,copy,from;public,sql,parameter,sql,parameter,other,param,assert,not,null,other,param,sql,parameter,object,must,not,be,null,this,name,other,param,name,this,sql,type,other,param,sql,type,this,type,name,other,param,type,name,this,scale,other,param,scale
SqlParameter -> public SqlParameter(SqlParameter otherParam);1356735495;Copy constructor._@param otherParam the SqlParameter object to copy from;public SqlParameter(SqlParameter otherParam) {_		Assert.notNull(otherParam, "SqlParameter object must not be null")__		this.name = otherParam.name__		this.sqlType = otherParam.sqlType__		this.typeName = otherParam.typeName__		this.scale = otherParam.scale__	};copy,constructor,param,other,param,the,sql,parameter,object,to,copy,from;public,sql,parameter,sql,parameter,other,param,assert,not,null,other,param,sql,parameter,object,must,not,be,null,this,name,other,param,name,this,sql,type,other,param,sql,type,this,type,name,other,param,type,name,this,scale,other,param,scale
SqlParameter -> public SqlParameter(SqlParameter otherParam);1407789123;Copy constructor._@param otherParam the SqlParameter object to copy from;public SqlParameter(SqlParameter otherParam) {_		Assert.notNull(otherParam, "SqlParameter object must not be null")__		this.name = otherParam.name__		this.sqlType = otherParam.sqlType__		this.typeName = otherParam.typeName__		this.scale = otherParam.scale__	};copy,constructor,param,other,param,the,sql,parameter,object,to,copy,from;public,sql,parameter,sql,parameter,other,param,assert,not,null,other,param,sql,parameter,object,must,not,be,null,this,name,other,param,name,this,sql,type,other,param,sql,type,this,type,name,other,param,type,name,this,scale,other,param,scale
SqlParameter -> public SqlParameter(SqlParameter otherParam);1446471766;Copy constructor._@param otherParam the SqlParameter object to copy from;public SqlParameter(SqlParameter otherParam) {_		Assert.notNull(otherParam, "SqlParameter object must not be null")__		this.name = otherParam.name__		this.sqlType = otherParam.sqlType__		this.typeName = otherParam.typeName__		this.scale = otherParam.scale__	};copy,constructor,param,other,param,the,sql,parameter,object,to,copy,from;public,sql,parameter,sql,parameter,other,param,assert,not,null,other,param,sql,parameter,object,must,not,be,null,this,name,other,param,name,this,sql,type,other,param,sql,type,this,type,name,other,param,type,name,this,scale,other,param,scale
SqlParameter -> public SqlParameter(SqlParameter otherParam);1467730834;Copy constructor._@param otherParam the SqlParameter object to copy from;public SqlParameter(SqlParameter otherParam) {_		Assert.notNull(otherParam, "SqlParameter object must not be null")__		this.name = otherParam.name__		this.sqlType = otherParam.sqlType__		this.typeName = otherParam.typeName__		this.scale = otherParam.scale__	};copy,constructor,param,other,param,the,sql,parameter,object,to,copy,from;public,sql,parameter,sql,parameter,other,param,assert,not,null,other,param,sql,parameter,object,must,not,be,null,this,name,other,param,name,this,sql,type,other,param,sql,type,this,type,name,other,param,type,name,this,scale,other,param,scale
SqlParameter -> public SqlParameter(SqlParameter otherParam);1495868221;Copy constructor._@param otherParam the SqlParameter object to copy from;public SqlParameter(SqlParameter otherParam) {_		Assert.notNull(otherParam, "SqlParameter object must not be null")__		this.name = otherParam.name__		this.sqlType = otherParam.sqlType__		this.typeName = otherParam.typeName__		this.scale = otherParam.scale__	};copy,constructor,param,other,param,the,sql,parameter,object,to,copy,from;public,sql,parameter,sql,parameter,other,param,assert,not,null,other,param,sql,parameter,object,must,not,be,null,this,name,other,param,name,this,sql,type,other,param,sql,type,this,type,name,other,param,type,name,this,scale,other,param,scale
SqlParameter -> public SqlParameter(SqlParameter otherParam);1496837955;Copy constructor._@param otherParam the SqlParameter object to copy from;public SqlParameter(SqlParameter otherParam) {_		Assert.notNull(otherParam, "SqlParameter object must not be null")__		this.name = otherParam.name__		this.sqlType = otherParam.sqlType__		this.typeName = otherParam.typeName__		this.scale = otherParam.scale__	};copy,constructor,param,other,param,the,sql,parameter,object,to,copy,from;public,sql,parameter,sql,parameter,other,param,assert,not,null,other,param,sql,parameter,object,must,not,be,null,this,name,other,param,name,this,sql,type,other,param,sql,type,this,type,name,other,param,type,name,this,scale,other,param,scale
SqlParameter -> public SqlParameter(SqlParameter otherParam);1498780456;Copy constructor._@param otherParam the SqlParameter object to copy from;public SqlParameter(SqlParameter otherParam) {_		Assert.notNull(otherParam, "SqlParameter object must not be null")__		this.name = otherParam.name__		this.sqlType = otherParam.sqlType__		this.typeName = otherParam.typeName__		this.scale = otherParam.scale__	};copy,constructor,param,other,param,the,sql,parameter,object,to,copy,from;public,sql,parameter,sql,parameter,other,param,assert,not,null,other,param,sql,parameter,object,must,not,be,null,this,name,other,param,name,this,sql,type,other,param,sql,type,this,type,name,other,param,type,name,this,scale,other,param,scale
SqlParameter -> public SqlParameter(SqlParameter otherParam);1515948332;Copy constructor._@param otherParam the SqlParameter object to copy from;public SqlParameter(SqlParameter otherParam) {_		Assert.notNull(otherParam, "SqlParameter object must not be null")__		this.name = otherParam.name__		this.sqlType = otherParam.sqlType__		this.typeName = otherParam.typeName__		this.scale = otherParam.scale__	};copy,constructor,param,other,param,the,sql,parameter,object,to,copy,from;public,sql,parameter,sql,parameter,other,param,assert,not,null,other,param,sql,parameter,object,must,not,be,null,this,name,other,param,name,this,sql,type,other,param,sql,type,this,type,name,other,param,type,name,this,scale,other,param,scale
SqlParameter -> public SqlParameter(SqlParameter otherParam);1516393837;Copy constructor._@param otherParam the SqlParameter object to copy from;public SqlParameter(SqlParameter otherParam) {_		Assert.notNull(otherParam, "SqlParameter object must not be null")__		this.name = otherParam.name__		this.sqlType = otherParam.sqlType__		this.typeName = otherParam.typeName__		this.scale = otherParam.scale__	};copy,constructor,param,other,param,the,sql,parameter,object,to,copy,from;public,sql,parameter,sql,parameter,other,param,assert,not,null,other,param,sql,parameter,object,must,not,be,null,this,name,other,param,name,this,sql,type,other,param,sql,type,this,type,name,other,param,type,name,this,scale,other,param,scale
SqlParameter -> public SqlParameter(SqlParameter otherParam);1517472937;Copy constructor._@param otherParam the SqlParameter object to copy from;public SqlParameter(SqlParameter otherParam) {_		Assert.notNull(otherParam, "SqlParameter object must not be null")__		this.name = otherParam.name__		this.sqlType = otherParam.sqlType__		this.typeName = otherParam.typeName__		this.scale = otherParam.scale__	};copy,constructor,param,other,param,the,sql,parameter,object,to,copy,from;public,sql,parameter,sql,parameter,other,param,assert,not,null,other,param,sql,parameter,object,must,not,be,null,this,name,other,param,name,this,sql,type,other,param,sql,type,this,type,name,other,param,type,name,this,scale,other,param,scale
SqlParameter -> public SqlParameter(SqlParameter otherParam);1521457504;Copy constructor._@param otherParam the SqlParameter object to copy from;public SqlParameter(SqlParameter otherParam) {_		Assert.notNull(otherParam, "SqlParameter object must not be null")__		this.name = otherParam.name__		this.sqlType = otherParam.sqlType__		this.typeName = otherParam.typeName__		this.scale = otherParam.scale__	};copy,constructor,param,other,param,the,sql,parameter,object,to,copy,from;public,sql,parameter,sql,parameter,other,param,assert,not,null,other,param,sql,parameter,object,must,not,be,null,this,name,other,param,name,this,sql,type,other,param,sql,type,this,type,name,other,param,type,name,this,scale,other,param,scale
SqlParameter -> public SqlParameter(SqlParameter otherParam);1530174524;Copy constructor._@param otherParam the SqlParameter object to copy from;public SqlParameter(SqlParameter otherParam) {_		Assert.notNull(otherParam, "SqlParameter object must not be null")__		this.name = otherParam.name__		this.sqlType = otherParam.sqlType__		this.typeName = otherParam.typeName__		this.scale = otherParam.scale__	};copy,constructor,param,other,param,the,sql,parameter,object,to,copy,from;public,sql,parameter,sql,parameter,other,param,assert,not,null,other,param,sql,parameter,object,must,not,be,null,this,name,other,param,name,this,sql,type,other,param,sql,type,this,type,name,other,param,type,name,this,scale,other,param,scale
SqlParameter -> public boolean isResultsParameter();1328020251;Return whether this parameter is an implicit return parameter used during the_results preocessing of the CallableStatement.getMoreResults/getUpdateCount._<p>This implementation always returns <code>false</code>.;public boolean isResultsParameter() {_		return false__	};return,whether,this,parameter,is,an,implicit,return,parameter,used,during,the,results,preocessing,of,the,callable,statement,get,more,results,get,update,count,p,this,implementation,always,returns,code,false,code;public,boolean,is,results,parameter,return,false
SqlParameter -> public boolean isResultsParameter();1356735495;Return whether this parameter is an implicit return parameter used during the_results preocessing of the CallableStatement.getMoreResults/getUpdateCount._<p>This implementation always returns {@code false}.;public boolean isResultsParameter() {_		return false__	};return,whether,this,parameter,is,an,implicit,return,parameter,used,during,the,results,preocessing,of,the,callable,statement,get,more,results,get,update,count,p,this,implementation,always,returns,code,false;public,boolean,is,results,parameter,return,false
SqlParameter -> public boolean isResultsParameter();1407789123;Return whether this parameter is an implicit return parameter used during the_results preocessing of the CallableStatement.getMoreResults/getUpdateCount._<p>This implementation always returns {@code false}.;public boolean isResultsParameter() {_		return false__	};return,whether,this,parameter,is,an,implicit,return,parameter,used,during,the,results,preocessing,of,the,callable,statement,get,more,results,get,update,count,p,this,implementation,always,returns,code,false;public,boolean,is,results,parameter,return,false
SqlParameter -> public boolean isResultsParameter();1446471766;Return whether this parameter is an implicit return parameter used during the_results preocessing of the CallableStatement.getMoreResults/getUpdateCount._<p>This implementation always returns {@code false}.;public boolean isResultsParameter() {_		return false__	};return,whether,this,parameter,is,an,implicit,return,parameter,used,during,the,results,preocessing,of,the,callable,statement,get,more,results,get,update,count,p,this,implementation,always,returns,code,false;public,boolean,is,results,parameter,return,false
SqlParameter -> public boolean isResultsParameter();1467730834;Return whether this parameter is an implicit return parameter used during the_results preocessing of the CallableStatement.getMoreResults/getUpdateCount._<p>This implementation always returns {@code false}.;public boolean isResultsParameter() {_		return false__	};return,whether,this,parameter,is,an,implicit,return,parameter,used,during,the,results,preocessing,of,the,callable,statement,get,more,results,get,update,count,p,this,implementation,always,returns,code,false;public,boolean,is,results,parameter,return,false
SqlParameter -> public boolean isResultsParameter();1495868221;Return whether this parameter is an implicit return parameter used during the_results preocessing of the CallableStatement.getMoreResults/getUpdateCount._<p>This implementation always returns {@code false}.;public boolean isResultsParameter() {_		return false__	};return,whether,this,parameter,is,an,implicit,return,parameter,used,during,the,results,preocessing,of,the,callable,statement,get,more,results,get,update,count,p,this,implementation,always,returns,code,false;public,boolean,is,results,parameter,return,false
SqlParameter -> public boolean isResultsParameter();1496837955;Return whether this parameter is an implicit return parameter used during the_results preocessing of the CallableStatement.getMoreResults/getUpdateCount._<p>This implementation always returns {@code false}.;public boolean isResultsParameter() {_		return false__	};return,whether,this,parameter,is,an,implicit,return,parameter,used,during,the,results,preocessing,of,the,callable,statement,get,more,results,get,update,count,p,this,implementation,always,returns,code,false;public,boolean,is,results,parameter,return,false
SqlParameter -> public boolean isResultsParameter();1498780456;Return whether this parameter is an implicit return parameter used during the_results preocessing of the CallableStatement.getMoreResults/getUpdateCount._<p>This implementation always returns {@code false}.;public boolean isResultsParameter() {_		return false__	};return,whether,this,parameter,is,an,implicit,return,parameter,used,during,the,results,preocessing,of,the,callable,statement,get,more,results,get,update,count,p,this,implementation,always,returns,code,false;public,boolean,is,results,parameter,return,false
SqlParameter -> public boolean isResultsParameter();1515948332;Return whether this parameter is an implicit return parameter used during the_results preocessing of the CallableStatement.getMoreResults/getUpdateCount._<p>This implementation always returns {@code false}.;public boolean isResultsParameter() {_		return false__	};return,whether,this,parameter,is,an,implicit,return,parameter,used,during,the,results,preocessing,of,the,callable,statement,get,more,results,get,update,count,p,this,implementation,always,returns,code,false;public,boolean,is,results,parameter,return,false
SqlParameter -> public boolean isResultsParameter();1516393837;Return whether this parameter is an implicit return parameter used during the_results preocessing of the CallableStatement.getMoreResults/getUpdateCount._<p>This implementation always returns {@code false}.;public boolean isResultsParameter() {_		return false__	};return,whether,this,parameter,is,an,implicit,return,parameter,used,during,the,results,preocessing,of,the,callable,statement,get,more,results,get,update,count,p,this,implementation,always,returns,code,false;public,boolean,is,results,parameter,return,false
SqlParameter -> public boolean isResultsParameter();1517472937;Return whether this parameter is an implicit return parameter used during the_results preocessing of the CallableStatement.getMoreResults/getUpdateCount._<p>This implementation always returns {@code false}.;public boolean isResultsParameter() {_		return false__	};return,whether,this,parameter,is,an,implicit,return,parameter,used,during,the,results,preocessing,of,the,callable,statement,get,more,results,get,update,count,p,this,implementation,always,returns,code,false;public,boolean,is,results,parameter,return,false
SqlParameter -> public boolean isResultsParameter();1521457504;Return whether this parameter is an implicit return parameter used during the_results processing of {@code CallableStatement.getMoreResults/getUpdateCount}._<p>This implementation always returns {@code false}.;public boolean isResultsParameter() {_		return false__	};return,whether,this,parameter,is,an,implicit,return,parameter,used,during,the,results,processing,of,code,callable,statement,get,more,results,get,update,count,p,this,implementation,always,returns,code,false;public,boolean,is,results,parameter,return,false
SqlParameter -> public boolean isResultsParameter();1530174524;Return whether this parameter is an implicit return parameter used during the_results processing of {@code CallableStatement.getMoreResults/getUpdateCount}._<p>This implementation always returns {@code false}.;public boolean isResultsParameter() {_		return false__	};return,whether,this,parameter,is,an,implicit,return,parameter,used,during,the,results,processing,of,code,callable,statement,get,more,results,get,update,count,p,this,implementation,always,returns,code,false;public,boolean,is,results,parameter,return,false
SqlParameter -> public static List<SqlParameter> sqlTypesToAnonymousParameterList(@Nullable int... types);1496837955;Convert a list of JDBC types, as defined in {@code java.sql.Types},_to a List of SqlParameter objects as used in this package.;public static List<SqlParameter> sqlTypesToAnonymousParameterList(@Nullable int... types) {_		List<SqlParameter> result = new LinkedList<>()__		if (types != null) {_			for (int type : types) {_				result.add(new SqlParameter(type))__			}_		}_		return result__	};convert,a,list,of,jdbc,types,as,defined,in,code,java,sql,types,to,a,list,of,sql,parameter,objects,as,used,in,this,package;public,static,list,sql,parameter,sql,types,to,anonymous,parameter,list,nullable,int,types,list,sql,parameter,result,new,linked,list,if,types,null,for,int,type,types,result,add,new,sql,parameter,type,return,result
SqlParameter -> public static List<SqlParameter> sqlTypesToAnonymousParameterList(@Nullable int... types);1498780456;Convert a list of JDBC types, as defined in {@code java.sql.Types},_to a List of SqlParameter objects as used in this package.;public static List<SqlParameter> sqlTypesToAnonymousParameterList(@Nullable int... types) {_		List<SqlParameter> result = new LinkedList<>()__		if (types != null) {_			for (int type : types) {_				result.add(new SqlParameter(type))__			}_		}_		return result__	};convert,a,list,of,jdbc,types,as,defined,in,code,java,sql,types,to,a,list,of,sql,parameter,objects,as,used,in,this,package;public,static,list,sql,parameter,sql,types,to,anonymous,parameter,list,nullable,int,types,list,sql,parameter,result,new,linked,list,if,types,null,for,int,type,types,result,add,new,sql,parameter,type,return,result
SqlParameter -> public static List<SqlParameter> sqlTypesToAnonymousParameterList(@Nullable int... types);1515948332;Convert a list of JDBC types, as defined in {@code java.sql.Types},_to a List of SqlParameter objects as used in this package.;public static List<SqlParameter> sqlTypesToAnonymousParameterList(@Nullable int... types) {_		List<SqlParameter> result__		if (types != null) {_			result = new ArrayList<>(types.length)__			for (int type : types) {_				result.add(new SqlParameter(type))__			}_		}_		else {_			result = new LinkedList<>()__		}_		return result__	};convert,a,list,of,jdbc,types,as,defined,in,code,java,sql,types,to,a,list,of,sql,parameter,objects,as,used,in,this,package;public,static,list,sql,parameter,sql,types,to,anonymous,parameter,list,nullable,int,types,list,sql,parameter,result,if,types,null,result,new,array,list,types,length,for,int,type,types,result,add,new,sql,parameter,type,else,result,new,linked,list,return,result
SqlParameter -> public static List<SqlParameter> sqlTypesToAnonymousParameterList(@Nullable int... types);1516393837;Convert a list of JDBC types, as defined in {@code java.sql.Types},_to a List of SqlParameter objects as used in this package.;public static List<SqlParameter> sqlTypesToAnonymousParameterList(@Nullable int... types) {_		List<SqlParameter> result__		if (types != null) {_			result = new ArrayList<>(types.length)__			for (int type : types) {_				result.add(new SqlParameter(type))__			}_		}_		else {_			result = new LinkedList<>()__		}_		return result__	};convert,a,list,of,jdbc,types,as,defined,in,code,java,sql,types,to,a,list,of,sql,parameter,objects,as,used,in,this,package;public,static,list,sql,parameter,sql,types,to,anonymous,parameter,list,nullable,int,types,list,sql,parameter,result,if,types,null,result,new,array,list,types,length,for,int,type,types,result,add,new,sql,parameter,type,else,result,new,linked,list,return,result
SqlParameter -> public static List<SqlParameter> sqlTypesToAnonymousParameterList(@Nullable int... types);1517472937;Convert a list of JDBC types, as defined in {@code java.sql.Types},_to a List of SqlParameter objects as used in this package.;public static List<SqlParameter> sqlTypesToAnonymousParameterList(@Nullable int... types) {_		if (types == null) {_			return new LinkedList<>()__		}_		List<SqlParameter> result = new ArrayList<>(types.length)__		for (int type : types) {_			result.add(new SqlParameter(type))__		}_		return result__	};convert,a,list,of,jdbc,types,as,defined,in,code,java,sql,types,to,a,list,of,sql,parameter,objects,as,used,in,this,package;public,static,list,sql,parameter,sql,types,to,anonymous,parameter,list,nullable,int,types,if,types,null,return,new,linked,list,list,sql,parameter,result,new,array,list,types,length,for,int,type,types,result,add,new,sql,parameter,type,return,result
SqlParameter -> public static List<SqlParameter> sqlTypesToAnonymousParameterList(@Nullable int... types);1521457504;Convert a list of JDBC types, as defined in {@code java.sql.Types},_to a List of SqlParameter objects as used in this package.;public static List<SqlParameter> sqlTypesToAnonymousParameterList(@Nullable int... types) {_		if (types == null) {_			return new LinkedList<>()__		}_		List<SqlParameter> result = new ArrayList<>(types.length)__		for (int type : types) {_			result.add(new SqlParameter(type))__		}_		return result__	};convert,a,list,of,jdbc,types,as,defined,in,code,java,sql,types,to,a,list,of,sql,parameter,objects,as,used,in,this,package;public,static,list,sql,parameter,sql,types,to,anonymous,parameter,list,nullable,int,types,if,types,null,return,new,linked,list,list,sql,parameter,result,new,array,list,types,length,for,int,type,types,result,add,new,sql,parameter,type,return,result
SqlParameter -> public static List<SqlParameter> sqlTypesToAnonymousParameterList(@Nullable int... types);1530174524;Convert a list of JDBC types, as defined in {@code java.sql.Types},_to a List of SqlParameter objects as used in this package.;public static List<SqlParameter> sqlTypesToAnonymousParameterList(@Nullable int... types) {_		if (types == null) {_			return new LinkedList<>()__		}_		List<SqlParameter> result = new ArrayList<>(types.length)__		for (int type : types) {_			result.add(new SqlParameter(type))__		}_		return result__	};convert,a,list,of,jdbc,types,as,defined,in,code,java,sql,types,to,a,list,of,sql,parameter,objects,as,used,in,this,package;public,static,list,sql,parameter,sql,types,to,anonymous,parameter,list,nullable,int,types,if,types,null,return,new,linked,list,list,sql,parameter,result,new,array,list,types,length,for,int,type,types,result,add,new,sql,parameter,type,return,result
SqlParameter -> public static List<SqlParameter> sqlTypesToAnonymousParameterList(int[] types);1328020251;Convert a list of JDBC types, as defined in <code>java.sql.Types</code>,_to a List of SqlParameter objects as used in this package.;public static List<SqlParameter> sqlTypesToAnonymousParameterList(int[] types) {_		List<SqlParameter> result = new LinkedList<SqlParameter>()__		if (types != null) {_			for (int type : types) {_				result.add(new SqlParameter(type))__			}_		}_		return result__	};convert,a,list,of,jdbc,types,as,defined,in,code,java,sql,types,code,to,a,list,of,sql,parameter,objects,as,used,in,this,package;public,static,list,sql,parameter,sql,types,to,anonymous,parameter,list,int,types,list,sql,parameter,result,new,linked,list,sql,parameter,if,types,null,for,int,type,types,result,add,new,sql,parameter,type,return,result
SqlParameter -> public static List<SqlParameter> sqlTypesToAnonymousParameterList(int[] types);1356735495;Convert a list of JDBC types, as defined in {@code java.sql.Types},_to a List of SqlParameter objects as used in this package.;public static List<SqlParameter> sqlTypesToAnonymousParameterList(int[] types) {_		List<SqlParameter> result = new LinkedList<SqlParameter>()__		if (types != null) {_			for (int type : types) {_				result.add(new SqlParameter(type))__			}_		}_		return result__	};convert,a,list,of,jdbc,types,as,defined,in,code,java,sql,types,to,a,list,of,sql,parameter,objects,as,used,in,this,package;public,static,list,sql,parameter,sql,types,to,anonymous,parameter,list,int,types,list,sql,parameter,result,new,linked,list,sql,parameter,if,types,null,for,int,type,types,result,add,new,sql,parameter,type,return,result
SqlParameter -> public SqlParameter(int sqlType, String typeName);1328020251;Create a new anonymous SqlParameter, supplying the SQL type._@param sqlType SQL type of the parameter according to <code>java.sql.Types</code>_@param typeName the type name of the parameter (optional);public SqlParameter(int sqlType, String typeName) {_		this.sqlType = sqlType__		this.typeName = typeName__	};create,a,new,anonymous,sql,parameter,supplying,the,sql,type,param,sql,type,sql,type,of,the,parameter,according,to,code,java,sql,types,code,param,type,name,the,type,name,of,the,parameter,optional;public,sql,parameter,int,sql,type,string,type,name,this,sql,type,sql,type,this,type,name,type,name
SqlParameter -> public SqlParameter(int sqlType, String typeName);1356735495;Create a new anonymous SqlParameter, supplying the SQL type._@param sqlType SQL type of the parameter according to {@code java.sql.Types}_@param typeName the type name of the parameter (optional);public SqlParameter(int sqlType, String typeName) {_		this.sqlType = sqlType__		this.typeName = typeName__	};create,a,new,anonymous,sql,parameter,supplying,the,sql,type,param,sql,type,sql,type,of,the,parameter,according,to,code,java,sql,types,param,type,name,the,type,name,of,the,parameter,optional;public,sql,parameter,int,sql,type,string,type,name,this,sql,type,sql,type,this,type,name,type,name
SqlParameter -> public SqlParameter(int sqlType, String typeName);1407789123;Create a new anonymous SqlParameter, supplying the SQL type._@param sqlType SQL type of the parameter according to {@code java.sql.Types}_@param typeName the type name of the parameter (optional);public SqlParameter(int sqlType, String typeName) {_		this.sqlType = sqlType__		this.typeName = typeName__	};create,a,new,anonymous,sql,parameter,supplying,the,sql,type,param,sql,type,sql,type,of,the,parameter,according,to,code,java,sql,types,param,type,name,the,type,name,of,the,parameter,optional;public,sql,parameter,int,sql,type,string,type,name,this,sql,type,sql,type,this,type,name,type,name
SqlParameter -> public SqlParameter(int sqlType, String typeName);1446471766;Create a new anonymous SqlParameter, supplying the SQL type._@param sqlType SQL type of the parameter according to {@code java.sql.Types}_@param typeName the type name of the parameter (optional);public SqlParameter(int sqlType, String typeName) {_		this.sqlType = sqlType__		this.typeName = typeName__	};create,a,new,anonymous,sql,parameter,supplying,the,sql,type,param,sql,type,sql,type,of,the,parameter,according,to,code,java,sql,types,param,type,name,the,type,name,of,the,parameter,optional;public,sql,parameter,int,sql,type,string,type,name,this,sql,type,sql,type,this,type,name,type,name
SqlParameter -> public SqlParameter(int sqlType, String typeName);1467730834;Create a new anonymous SqlParameter, supplying the SQL type._@param sqlType SQL type of the parameter according to {@code java.sql.Types}_@param typeName the type name of the parameter (optional);public SqlParameter(int sqlType, String typeName) {_		this.sqlType = sqlType__		this.typeName = typeName__	};create,a,new,anonymous,sql,parameter,supplying,the,sql,type,param,sql,type,sql,type,of,the,parameter,according,to,code,java,sql,types,param,type,name,the,type,name,of,the,parameter,optional;public,sql,parameter,int,sql,type,string,type,name,this,sql,type,sql,type,this,type,name,type,name
SqlParameter -> public SqlParameter(int sqlType, String typeName);1495868221;Create a new anonymous SqlParameter, supplying the SQL type._@param sqlType SQL type of the parameter according to {@code java.sql.Types}_@param typeName the type name of the parameter (optional);public SqlParameter(int sqlType, String typeName) {_		this.sqlType = sqlType__		this.typeName = typeName__	};create,a,new,anonymous,sql,parameter,supplying,the,sql,type,param,sql,type,sql,type,of,the,parameter,according,to,code,java,sql,types,param,type,name,the,type,name,of,the,parameter,optional;public,sql,parameter,int,sql,type,string,type,name,this,sql,type,sql,type,this,type,name,type,name
SqlParameter -> public boolean isInputValueProvided();1328020251;Return whether this parameter holds input values that should be set_before execution even if they are <code>null</code>._<p>This implementation always returns <code>true</code>.;public boolean isInputValueProvided() {_		return true__	};return,whether,this,parameter,holds,input,values,that,should,be,set,before,execution,even,if,they,are,code,null,code,p,this,implementation,always,returns,code,true,code;public,boolean,is,input,value,provided,return,true
SqlParameter -> public boolean isInputValueProvided();1356735495;Return whether this parameter holds input values that should be set_before execution even if they are {@code null}._<p>This implementation always returns {@code true}.;public boolean isInputValueProvided() {_		return true__	};return,whether,this,parameter,holds,input,values,that,should,be,set,before,execution,even,if,they,are,code,null,p,this,implementation,always,returns,code,true;public,boolean,is,input,value,provided,return,true
SqlParameter -> public boolean isInputValueProvided();1407789123;Return whether this parameter holds input values that should be set_before execution even if they are {@code null}._<p>This implementation always returns {@code true}.;public boolean isInputValueProvided() {_		return true__	};return,whether,this,parameter,holds,input,values,that,should,be,set,before,execution,even,if,they,are,code,null,p,this,implementation,always,returns,code,true;public,boolean,is,input,value,provided,return,true
SqlParameter -> public boolean isInputValueProvided();1446471766;Return whether this parameter holds input values that should be set_before execution even if they are {@code null}._<p>This implementation always returns {@code true}.;public boolean isInputValueProvided() {_		return true__	};return,whether,this,parameter,holds,input,values,that,should,be,set,before,execution,even,if,they,are,code,null,p,this,implementation,always,returns,code,true;public,boolean,is,input,value,provided,return,true
SqlParameter -> public boolean isInputValueProvided();1467730834;Return whether this parameter holds input values that should be set_before execution even if they are {@code null}._<p>This implementation always returns {@code true}.;public boolean isInputValueProvided() {_		return true__	};return,whether,this,parameter,holds,input,values,that,should,be,set,before,execution,even,if,they,are,code,null,p,this,implementation,always,returns,code,true;public,boolean,is,input,value,provided,return,true
SqlParameter -> public boolean isInputValueProvided();1495868221;Return whether this parameter holds input values that should be set_before execution even if they are {@code null}._<p>This implementation always returns {@code true}.;public boolean isInputValueProvided() {_		return true__	};return,whether,this,parameter,holds,input,values,that,should,be,set,before,execution,even,if,they,are,code,null,p,this,implementation,always,returns,code,true;public,boolean,is,input,value,provided,return,true
SqlParameter -> public boolean isInputValueProvided();1496837955;Return whether this parameter holds input values that should be set_before execution even if they are {@code null}._<p>This implementation always returns {@code true}.;public boolean isInputValueProvided() {_		return true__	};return,whether,this,parameter,holds,input,values,that,should,be,set,before,execution,even,if,they,are,code,null,p,this,implementation,always,returns,code,true;public,boolean,is,input,value,provided,return,true
SqlParameter -> public boolean isInputValueProvided();1498780456;Return whether this parameter holds input values that should be set_before execution even if they are {@code null}._<p>This implementation always returns {@code true}.;public boolean isInputValueProvided() {_		return true__	};return,whether,this,parameter,holds,input,values,that,should,be,set,before,execution,even,if,they,are,code,null,p,this,implementation,always,returns,code,true;public,boolean,is,input,value,provided,return,true
SqlParameter -> public boolean isInputValueProvided();1515948332;Return whether this parameter holds input values that should be set_before execution even if they are {@code null}._<p>This implementation always returns {@code true}.;public boolean isInputValueProvided() {_		return true__	};return,whether,this,parameter,holds,input,values,that,should,be,set,before,execution,even,if,they,are,code,null,p,this,implementation,always,returns,code,true;public,boolean,is,input,value,provided,return,true
SqlParameter -> public boolean isInputValueProvided();1516393837;Return whether this parameter holds input values that should be set_before execution even if they are {@code null}._<p>This implementation always returns {@code true}.;public boolean isInputValueProvided() {_		return true__	};return,whether,this,parameter,holds,input,values,that,should,be,set,before,execution,even,if,they,are,code,null,p,this,implementation,always,returns,code,true;public,boolean,is,input,value,provided,return,true
SqlParameter -> public boolean isInputValueProvided();1517472937;Return whether this parameter holds input values that should be set_before execution even if they are {@code null}._<p>This implementation always returns {@code true}.;public boolean isInputValueProvided() {_		return true__	};return,whether,this,parameter,holds,input,values,that,should,be,set,before,execution,even,if,they,are,code,null,p,this,implementation,always,returns,code,true;public,boolean,is,input,value,provided,return,true
SqlParameter -> public boolean isInputValueProvided();1521457504;Return whether this parameter holds input values that should be set_before execution even if they are {@code null}._<p>This implementation always returns {@code true}.;public boolean isInputValueProvided() {_		return true__	};return,whether,this,parameter,holds,input,values,that,should,be,set,before,execution,even,if,they,are,code,null,p,this,implementation,always,returns,code,true;public,boolean,is,input,value,provided,return,true
SqlParameter -> public boolean isInputValueProvided();1530174524;Return whether this parameter holds input values that should be set_before execution even if they are {@code null}._<p>This implementation always returns {@code true}.;public boolean isInputValueProvided() {_		return true__	};return,whether,this,parameter,holds,input,values,that,should,be,set,before,execution,even,if,they,are,code,null,p,this,implementation,always,returns,code,true;public,boolean,is,input,value,provided,return,true
SqlParameter -> public SqlParameter(String name, int sqlType, @Nullable String typeName);1496837955;Create a new SqlParameter, supplying name and SQL type._@param name name of the parameter, as used in input and output maps_@param sqlType SQL type of the parameter according to {@code java.sql.Types}_@param typeName the type name of the parameter (optional);public SqlParameter(String name, int sqlType, @Nullable String typeName) {_		this.name = name__		this.sqlType = sqlType__		this.typeName = typeName__	};create,a,new,sql,parameter,supplying,name,and,sql,type,param,name,name,of,the,parameter,as,used,in,input,and,output,maps,param,sql,type,sql,type,of,the,parameter,according,to,code,java,sql,types,param,type,name,the,type,name,of,the,parameter,optional;public,sql,parameter,string,name,int,sql,type,nullable,string,type,name,this,name,name,this,sql,type,sql,type,this,type,name,type,name
SqlParameter -> public SqlParameter(String name, int sqlType, @Nullable String typeName);1498780456;Create a new SqlParameter, supplying name and SQL type._@param name name of the parameter, as used in input and output maps_@param sqlType SQL type of the parameter according to {@code java.sql.Types}_@param typeName the type name of the parameter (optional);public SqlParameter(String name, int sqlType, @Nullable String typeName) {_		this.name = name__		this.sqlType = sqlType__		this.typeName = typeName__	};create,a,new,sql,parameter,supplying,name,and,sql,type,param,name,name,of,the,parameter,as,used,in,input,and,output,maps,param,sql,type,sql,type,of,the,parameter,according,to,code,java,sql,types,param,type,name,the,type,name,of,the,parameter,optional;public,sql,parameter,string,name,int,sql,type,nullable,string,type,name,this,name,name,this,sql,type,sql,type,this,type,name,type,name
SqlParameter -> public SqlParameter(String name, int sqlType, @Nullable String typeName);1515948332;Create a new SqlParameter, supplying name and SQL type._@param name name of the parameter, as used in input and output maps_@param sqlType SQL type of the parameter according to {@code java.sql.Types}_@param typeName the type name of the parameter (optional);public SqlParameter(String name, int sqlType, @Nullable String typeName) {_		this.name = name__		this.sqlType = sqlType__		this.typeName = typeName__	};create,a,new,sql,parameter,supplying,name,and,sql,type,param,name,name,of,the,parameter,as,used,in,input,and,output,maps,param,sql,type,sql,type,of,the,parameter,according,to,code,java,sql,types,param,type,name,the,type,name,of,the,parameter,optional;public,sql,parameter,string,name,int,sql,type,nullable,string,type,name,this,name,name,this,sql,type,sql,type,this,type,name,type,name
SqlParameter -> public SqlParameter(String name, int sqlType, @Nullable String typeName);1516393837;Create a new SqlParameter, supplying name and SQL type._@param name name of the parameter, as used in input and output maps_@param sqlType SQL type of the parameter according to {@code java.sql.Types}_@param typeName the type name of the parameter (optional);public SqlParameter(String name, int sqlType, @Nullable String typeName) {_		this.name = name__		this.sqlType = sqlType__		this.typeName = typeName__	};create,a,new,sql,parameter,supplying,name,and,sql,type,param,name,name,of,the,parameter,as,used,in,input,and,output,maps,param,sql,type,sql,type,of,the,parameter,according,to,code,java,sql,types,param,type,name,the,type,name,of,the,parameter,optional;public,sql,parameter,string,name,int,sql,type,nullable,string,type,name,this,name,name,this,sql,type,sql,type,this,type,name,type,name
SqlParameter -> public SqlParameter(String name, int sqlType, @Nullable String typeName);1517472937;Create a new SqlParameter, supplying name and SQL type._@param name name of the parameter, as used in input and output maps_@param sqlType SQL type of the parameter according to {@code java.sql.Types}_@param typeName the type name of the parameter (optional);public SqlParameter(String name, int sqlType, @Nullable String typeName) {_		this.name = name__		this.sqlType = sqlType__		this.typeName = typeName__	};create,a,new,sql,parameter,supplying,name,and,sql,type,param,name,name,of,the,parameter,as,used,in,input,and,output,maps,param,sql,type,sql,type,of,the,parameter,according,to,code,java,sql,types,param,type,name,the,type,name,of,the,parameter,optional;public,sql,parameter,string,name,int,sql,type,nullable,string,type,name,this,name,name,this,sql,type,sql,type,this,type,name,type,name
SqlParameter -> public SqlParameter(String name, int sqlType, @Nullable String typeName);1521457504;Create a new SqlParameter, supplying name and SQL type._@param name name of the parameter, as used in input and output maps_@param sqlType SQL type of the parameter according to {@code java.sql.Types}_@param typeName the type name of the parameter (optional);public SqlParameter(String name, int sqlType, @Nullable String typeName) {_		this.name = name__		this.sqlType = sqlType__		this.typeName = typeName__	};create,a,new,sql,parameter,supplying,name,and,sql,type,param,name,name,of,the,parameter,as,used,in,input,and,output,maps,param,sql,type,sql,type,of,the,parameter,according,to,code,java,sql,types,param,type,name,the,type,name,of,the,parameter,optional;public,sql,parameter,string,name,int,sql,type,nullable,string,type,name,this,name,name,this,sql,type,sql,type,this,type,name,type,name
SqlParameter -> public SqlParameter(String name, int sqlType, @Nullable String typeName);1530174524;Create a new SqlParameter, supplying name and SQL type._@param name name of the parameter, as used in input and output maps_@param sqlType the SQL type of the parameter according to {@code java.sql.Types}_@param typeName the type name of the parameter (optional);public SqlParameter(String name, int sqlType, @Nullable String typeName) {_		this.name = name__		this.sqlType = sqlType__		this.typeName = typeName__	};create,a,new,sql,parameter,supplying,name,and,sql,type,param,name,name,of,the,parameter,as,used,in,input,and,output,maps,param,sql,type,the,sql,type,of,the,parameter,according,to,code,java,sql,types,param,type,name,the,type,name,of,the,parameter,optional;public,sql,parameter,string,name,int,sql,type,nullable,string,type,name,this,name,name,this,sql,type,sql,type,this,type,name,type,name
SqlParameter -> public SqlParameter(String name, int sqlType);1328020251;Create a new SqlParameter, supplying name and SQL type._@param name name of the parameter, as used in input and output maps_@param sqlType SQL type of the parameter according to <code>java.sql.Types</code>;public SqlParameter(String name, int sqlType) {_		this.name = name__		this.sqlType = sqlType__	};create,a,new,sql,parameter,supplying,name,and,sql,type,param,name,name,of,the,parameter,as,used,in,input,and,output,maps,param,sql,type,sql,type,of,the,parameter,according,to,code,java,sql,types,code;public,sql,parameter,string,name,int,sql,type,this,name,name,this,sql,type,sql,type
SqlParameter -> public SqlParameter(String name, int sqlType);1356735495;Create a new SqlParameter, supplying name and SQL type._@param name name of the parameter, as used in input and output maps_@param sqlType SQL type of the parameter according to {@code java.sql.Types};public SqlParameter(String name, int sqlType) {_		this.name = name__		this.sqlType = sqlType__	};create,a,new,sql,parameter,supplying,name,and,sql,type,param,name,name,of,the,parameter,as,used,in,input,and,output,maps,param,sql,type,sql,type,of,the,parameter,according,to,code,java,sql,types;public,sql,parameter,string,name,int,sql,type,this,name,name,this,sql,type,sql,type
SqlParameter -> public SqlParameter(String name, int sqlType);1407789123;Create a new SqlParameter, supplying name and SQL type._@param name name of the parameter, as used in input and output maps_@param sqlType SQL type of the parameter according to {@code java.sql.Types};public SqlParameter(String name, int sqlType) {_		this.name = name__		this.sqlType = sqlType__	};create,a,new,sql,parameter,supplying,name,and,sql,type,param,name,name,of,the,parameter,as,used,in,input,and,output,maps,param,sql,type,sql,type,of,the,parameter,according,to,code,java,sql,types;public,sql,parameter,string,name,int,sql,type,this,name,name,this,sql,type,sql,type
SqlParameter -> public SqlParameter(String name, int sqlType);1446471766;Create a new SqlParameter, supplying name and SQL type._@param name name of the parameter, as used in input and output maps_@param sqlType SQL type of the parameter according to {@code java.sql.Types};public SqlParameter(String name, int sqlType) {_		this.name = name__		this.sqlType = sqlType__	};create,a,new,sql,parameter,supplying,name,and,sql,type,param,name,name,of,the,parameter,as,used,in,input,and,output,maps,param,sql,type,sql,type,of,the,parameter,according,to,code,java,sql,types;public,sql,parameter,string,name,int,sql,type,this,name,name,this,sql,type,sql,type
SqlParameter -> public SqlParameter(String name, int sqlType);1467730834;Create a new SqlParameter, supplying name and SQL type._@param name name of the parameter, as used in input and output maps_@param sqlType SQL type of the parameter according to {@code java.sql.Types};public SqlParameter(String name, int sqlType) {_		this.name = name__		this.sqlType = sqlType__	};create,a,new,sql,parameter,supplying,name,and,sql,type,param,name,name,of,the,parameter,as,used,in,input,and,output,maps,param,sql,type,sql,type,of,the,parameter,according,to,code,java,sql,types;public,sql,parameter,string,name,int,sql,type,this,name,name,this,sql,type,sql,type
SqlParameter -> public SqlParameter(String name, int sqlType);1495868221;Create a new SqlParameter, supplying name and SQL type._@param name name of the parameter, as used in input and output maps_@param sqlType SQL type of the parameter according to {@code java.sql.Types};public SqlParameter(String name, int sqlType) {_		this.name = name__		this.sqlType = sqlType__	};create,a,new,sql,parameter,supplying,name,and,sql,type,param,name,name,of,the,parameter,as,used,in,input,and,output,maps,param,sql,type,sql,type,of,the,parameter,according,to,code,java,sql,types;public,sql,parameter,string,name,int,sql,type,this,name,name,this,sql,type,sql,type
SqlParameter -> public SqlParameter(String name, int sqlType);1496837955;Create a new SqlParameter, supplying name and SQL type._@param name name of the parameter, as used in input and output maps_@param sqlType SQL type of the parameter according to {@code java.sql.Types};public SqlParameter(String name, int sqlType) {_		this.name = name__		this.sqlType = sqlType__	};create,a,new,sql,parameter,supplying,name,and,sql,type,param,name,name,of,the,parameter,as,used,in,input,and,output,maps,param,sql,type,sql,type,of,the,parameter,according,to,code,java,sql,types;public,sql,parameter,string,name,int,sql,type,this,name,name,this,sql,type,sql,type
SqlParameter -> public SqlParameter(String name, int sqlType);1498780456;Create a new SqlParameter, supplying name and SQL type._@param name name of the parameter, as used in input and output maps_@param sqlType SQL type of the parameter according to {@code java.sql.Types};public SqlParameter(String name, int sqlType) {_		this.name = name__		this.sqlType = sqlType__	};create,a,new,sql,parameter,supplying,name,and,sql,type,param,name,name,of,the,parameter,as,used,in,input,and,output,maps,param,sql,type,sql,type,of,the,parameter,according,to,code,java,sql,types;public,sql,parameter,string,name,int,sql,type,this,name,name,this,sql,type,sql,type
SqlParameter -> public SqlParameter(String name, int sqlType);1515948332;Create a new SqlParameter, supplying name and SQL type._@param name name of the parameter, as used in input and output maps_@param sqlType SQL type of the parameter according to {@code java.sql.Types};public SqlParameter(String name, int sqlType) {_		this.name = name__		this.sqlType = sqlType__	};create,a,new,sql,parameter,supplying,name,and,sql,type,param,name,name,of,the,parameter,as,used,in,input,and,output,maps,param,sql,type,sql,type,of,the,parameter,according,to,code,java,sql,types;public,sql,parameter,string,name,int,sql,type,this,name,name,this,sql,type,sql,type
SqlParameter -> public SqlParameter(String name, int sqlType);1516393837;Create a new SqlParameter, supplying name and SQL type._@param name name of the parameter, as used in input and output maps_@param sqlType SQL type of the parameter according to {@code java.sql.Types};public SqlParameter(String name, int sqlType) {_		this.name = name__		this.sqlType = sqlType__	};create,a,new,sql,parameter,supplying,name,and,sql,type,param,name,name,of,the,parameter,as,used,in,input,and,output,maps,param,sql,type,sql,type,of,the,parameter,according,to,code,java,sql,types;public,sql,parameter,string,name,int,sql,type,this,name,name,this,sql,type,sql,type
SqlParameter -> public SqlParameter(String name, int sqlType);1517472937;Create a new SqlParameter, supplying name and SQL type._@param name name of the parameter, as used in input and output maps_@param sqlType SQL type of the parameter according to {@code java.sql.Types};public SqlParameter(String name, int sqlType) {_		this.name = name__		this.sqlType = sqlType__	};create,a,new,sql,parameter,supplying,name,and,sql,type,param,name,name,of,the,parameter,as,used,in,input,and,output,maps,param,sql,type,sql,type,of,the,parameter,according,to,code,java,sql,types;public,sql,parameter,string,name,int,sql,type,this,name,name,this,sql,type,sql,type
SqlParameter -> public SqlParameter(String name, int sqlType);1521457504;Create a new SqlParameter, supplying name and SQL type._@param name name of the parameter, as used in input and output maps_@param sqlType SQL type of the parameter according to {@code java.sql.Types};public SqlParameter(String name, int sqlType) {_		this.name = name__		this.sqlType = sqlType__	};create,a,new,sql,parameter,supplying,name,and,sql,type,param,name,name,of,the,parameter,as,used,in,input,and,output,maps,param,sql,type,sql,type,of,the,parameter,according,to,code,java,sql,types;public,sql,parameter,string,name,int,sql,type,this,name,name,this,sql,type,sql,type
SqlParameter -> public SqlParameter(String name, int sqlType);1530174524;Create a new SqlParameter, supplying name and SQL type._@param name name of the parameter, as used in input and output maps_@param sqlType the SQL type of the parameter according to {@code java.sql.Types};public SqlParameter(String name, int sqlType) {_		this.name = name__		this.sqlType = sqlType__	};create,a,new,sql,parameter,supplying,name,and,sql,type,param,name,name,of,the,parameter,as,used,in,input,and,output,maps,param,sql,type,the,sql,type,of,the,parameter,according,to,code,java,sql,types;public,sql,parameter,string,name,int,sql,type,this,name,name,this,sql,type,sql,type
SqlParameter -> public SqlParameter(int sqlType, @Nullable String typeName);1496837955;Create a new anonymous SqlParameter, supplying the SQL type._@param sqlType SQL type of the parameter according to {@code java.sql.Types}_@param typeName the type name of the parameter (optional);public SqlParameter(int sqlType, @Nullable String typeName) {_		this.sqlType = sqlType__		this.typeName = typeName__	};create,a,new,anonymous,sql,parameter,supplying,the,sql,type,param,sql,type,sql,type,of,the,parameter,according,to,code,java,sql,types,param,type,name,the,type,name,of,the,parameter,optional;public,sql,parameter,int,sql,type,nullable,string,type,name,this,sql,type,sql,type,this,type,name,type,name
SqlParameter -> public SqlParameter(int sqlType, @Nullable String typeName);1498780456;Create a new anonymous SqlParameter, supplying the SQL type._@param sqlType SQL type of the parameter according to {@code java.sql.Types}_@param typeName the type name of the parameter (optional);public SqlParameter(int sqlType, @Nullable String typeName) {_		this.sqlType = sqlType__		this.typeName = typeName__	};create,a,new,anonymous,sql,parameter,supplying,the,sql,type,param,sql,type,sql,type,of,the,parameter,according,to,code,java,sql,types,param,type,name,the,type,name,of,the,parameter,optional;public,sql,parameter,int,sql,type,nullable,string,type,name,this,sql,type,sql,type,this,type,name,type,name
SqlParameter -> public SqlParameter(int sqlType, @Nullable String typeName);1515948332;Create a new anonymous SqlParameter, supplying the SQL type._@param sqlType SQL type of the parameter according to {@code java.sql.Types}_@param typeName the type name of the parameter (optional);public SqlParameter(int sqlType, @Nullable String typeName) {_		this.sqlType = sqlType__		this.typeName = typeName__	};create,a,new,anonymous,sql,parameter,supplying,the,sql,type,param,sql,type,sql,type,of,the,parameter,according,to,code,java,sql,types,param,type,name,the,type,name,of,the,parameter,optional;public,sql,parameter,int,sql,type,nullable,string,type,name,this,sql,type,sql,type,this,type,name,type,name
SqlParameter -> public SqlParameter(int sqlType, @Nullable String typeName);1516393837;Create a new anonymous SqlParameter, supplying the SQL type._@param sqlType SQL type of the parameter according to {@code java.sql.Types}_@param typeName the type name of the parameter (optional);public SqlParameter(int sqlType, @Nullable String typeName) {_		this.sqlType = sqlType__		this.typeName = typeName__	};create,a,new,anonymous,sql,parameter,supplying,the,sql,type,param,sql,type,sql,type,of,the,parameter,according,to,code,java,sql,types,param,type,name,the,type,name,of,the,parameter,optional;public,sql,parameter,int,sql,type,nullable,string,type,name,this,sql,type,sql,type,this,type,name,type,name
SqlParameter -> public SqlParameter(int sqlType, @Nullable String typeName);1517472937;Create a new anonymous SqlParameter, supplying the SQL type._@param sqlType SQL type of the parameter according to {@code java.sql.Types}_@param typeName the type name of the parameter (optional);public SqlParameter(int sqlType, @Nullable String typeName) {_		this.sqlType = sqlType__		this.typeName = typeName__	};create,a,new,anonymous,sql,parameter,supplying,the,sql,type,param,sql,type,sql,type,of,the,parameter,according,to,code,java,sql,types,param,type,name,the,type,name,of,the,parameter,optional;public,sql,parameter,int,sql,type,nullable,string,type,name,this,sql,type,sql,type,this,type,name,type,name
SqlParameter -> public SqlParameter(int sqlType, @Nullable String typeName);1521457504;Create a new anonymous SqlParameter, supplying the SQL type._@param sqlType SQL type of the parameter according to {@code java.sql.Types}_@param typeName the type name of the parameter (optional);public SqlParameter(int sqlType, @Nullable String typeName) {_		this.sqlType = sqlType__		this.typeName = typeName__	};create,a,new,anonymous,sql,parameter,supplying,the,sql,type,param,sql,type,sql,type,of,the,parameter,according,to,code,java,sql,types,param,type,name,the,type,name,of,the,parameter,optional;public,sql,parameter,int,sql,type,nullable,string,type,name,this,sql,type,sql,type,this,type,name,type,name
SqlParameter -> public SqlParameter(int sqlType, @Nullable String typeName);1530174524;Create a new anonymous SqlParameter, supplying the SQL type._@param sqlType the SQL type of the parameter according to {@code java.sql.Types}_@param typeName the type name of the parameter (optional);public SqlParameter(int sqlType, @Nullable String typeName) {_		this.sqlType = sqlType__		this.typeName = typeName__	};create,a,new,anonymous,sql,parameter,supplying,the,sql,type,param,sql,type,the,sql,type,of,the,parameter,according,to,code,java,sql,types,param,type,name,the,type,name,of,the,parameter,optional;public,sql,parameter,int,sql,type,nullable,string,type,name,this,sql,type,sql,type,this,type,name,type,name
SqlParameter -> public int getSqlType();1328020251;Return the SQL type of the parameter.;public int getSqlType() {_		return this.sqlType__	};return,the,sql,type,of,the,parameter;public,int,get,sql,type,return,this,sql,type
SqlParameter -> public int getSqlType();1356735495;Return the SQL type of the parameter.;public int getSqlType() {_		return this.sqlType__	};return,the,sql,type,of,the,parameter;public,int,get,sql,type,return,this,sql,type
SqlParameter -> public int getSqlType();1407789123;Return the SQL type of the parameter.;public int getSqlType() {_		return this.sqlType__	};return,the,sql,type,of,the,parameter;public,int,get,sql,type,return,this,sql,type
SqlParameter -> public int getSqlType();1446471766;Return the SQL type of the parameter.;public int getSqlType() {_		return this.sqlType__	};return,the,sql,type,of,the,parameter;public,int,get,sql,type,return,this,sql,type
SqlParameter -> public int getSqlType();1467730834;Return the SQL type of the parameter.;public int getSqlType() {_		return this.sqlType__	};return,the,sql,type,of,the,parameter;public,int,get,sql,type,return,this,sql,type
SqlParameter -> public int getSqlType();1495868221;Return the SQL type of the parameter.;public int getSqlType() {_		return this.sqlType__	};return,the,sql,type,of,the,parameter;public,int,get,sql,type,return,this,sql,type
SqlParameter -> public int getSqlType();1496837955;Return the SQL type of the parameter.;public int getSqlType() {_		return this.sqlType__	};return,the,sql,type,of,the,parameter;public,int,get,sql,type,return,this,sql,type
SqlParameter -> public int getSqlType();1498780456;Return the SQL type of the parameter.;public int getSqlType() {_		return this.sqlType__	};return,the,sql,type,of,the,parameter;public,int,get,sql,type,return,this,sql,type
SqlParameter -> public int getSqlType();1515948332;Return the SQL type of the parameter.;public int getSqlType() {_		return this.sqlType__	};return,the,sql,type,of,the,parameter;public,int,get,sql,type,return,this,sql,type
SqlParameter -> public int getSqlType();1516393837;Return the SQL type of the parameter.;public int getSqlType() {_		return this.sqlType__	};return,the,sql,type,of,the,parameter;public,int,get,sql,type,return,this,sql,type
SqlParameter -> public int getSqlType();1517472937;Return the SQL type of the parameter.;public int getSqlType() {_		return this.sqlType__	};return,the,sql,type,of,the,parameter;public,int,get,sql,type,return,this,sql,type
SqlParameter -> public int getSqlType();1521457504;Return the SQL type of the parameter.;public int getSqlType() {_		return this.sqlType__	};return,the,sql,type,of,the,parameter;public,int,get,sql,type,return,this,sql,type
SqlParameter -> public int getSqlType();1530174524;Return the SQL type of the parameter.;public int getSqlType() {_		return this.sqlType__	};return,the,sql,type,of,the,parameter;public,int,get,sql,type,return,this,sql,type
SqlParameter -> @Nullable 	public Integer getScale();1495868221;Return the scale of the parameter, if any.;@Nullable_	public Integer getScale() {_		return this.scale__	};return,the,scale,of,the,parameter,if,any;nullable,public,integer,get,scale,return,this,scale
SqlParameter -> @Nullable 	public Integer getScale();1496837955;Return the scale of the parameter, if any.;@Nullable_	public Integer getScale() {_		return this.scale__	};return,the,scale,of,the,parameter,if,any;nullable,public,integer,get,scale,return,this,scale
SqlParameter -> @Nullable 	public Integer getScale();1498780456;Return the scale of the parameter, if any.;@Nullable_	public Integer getScale() {_		return this.scale__	};return,the,scale,of,the,parameter,if,any;nullable,public,integer,get,scale,return,this,scale
SqlParameter -> @Nullable 	public Integer getScale();1515948332;Return the scale of the parameter, if any.;@Nullable_	public Integer getScale() {_		return this.scale__	};return,the,scale,of,the,parameter,if,any;nullable,public,integer,get,scale,return,this,scale
SqlParameter -> @Nullable 	public Integer getScale();1516393837;Return the scale of the parameter, if any.;@Nullable_	public Integer getScale() {_		return this.scale__	};return,the,scale,of,the,parameter,if,any;nullable,public,integer,get,scale,return,this,scale
SqlParameter -> @Nullable 	public Integer getScale();1517472937;Return the scale of the parameter, if any.;@Nullable_	public Integer getScale() {_		return this.scale__	};return,the,scale,of,the,parameter,if,any;nullable,public,integer,get,scale,return,this,scale
SqlParameter -> @Nullable 	public Integer getScale();1521457504;Return the scale of the parameter, if any.;@Nullable_	public Integer getScale() {_		return this.scale__	};return,the,scale,of,the,parameter,if,any;nullable,public,integer,get,scale,return,this,scale
SqlParameter -> @Nullable 	public Integer getScale();1530174524;Return the scale of the parameter, if any.;@Nullable_	public Integer getScale() {_		return this.scale__	};return,the,scale,of,the,parameter,if,any;nullable,public,integer,get,scale,return,this,scale
SqlParameter -> public String getName();1328020251;Return the name of the parameter.;public String getName() {_		return this.name__	};return,the,name,of,the,parameter;public,string,get,name,return,this,name
SqlParameter -> public String getName();1356735495;Return the name of the parameter.;public String getName() {_		return this.name__	};return,the,name,of,the,parameter;public,string,get,name,return,this,name
SqlParameter -> public String getName();1407789123;Return the name of the parameter.;public String getName() {_		return this.name__	};return,the,name,of,the,parameter;public,string,get,name,return,this,name
SqlParameter -> public String getName();1446471766;Return the name of the parameter, or {@code null} if anonymous.;public String getName() {_		return this.name__	};return,the,name,of,the,parameter,or,code,null,if,anonymous;public,string,get,name,return,this,name
SqlParameter -> public String getName();1467730834;Return the name of the parameter, or {@code null} if anonymous.;public String getName() {_		return this.name__	};return,the,name,of,the,parameter,or,code,null,if,anonymous;public,string,get,name,return,this,name
SqlParameter -> public SqlParameter(String name, int sqlType, String typeName);1328020251;Create a new SqlParameter, supplying name and SQL type._@param name name of the parameter, as used in input and output maps_@param sqlType SQL type of the parameter according to <code>java.sql.Types</code>_@param typeName the type name of the parameter (optional);public SqlParameter(String name, int sqlType, String typeName) {_		this.name = name__		this.sqlType = sqlType__		this.typeName = typeName__	};create,a,new,sql,parameter,supplying,name,and,sql,type,param,name,name,of,the,parameter,as,used,in,input,and,output,maps,param,sql,type,sql,type,of,the,parameter,according,to,code,java,sql,types,code,param,type,name,the,type,name,of,the,parameter,optional;public,sql,parameter,string,name,int,sql,type,string,type,name,this,name,name,this,sql,type,sql,type,this,type,name,type,name
SqlParameter -> public SqlParameter(String name, int sqlType, String typeName);1356735495;Create a new SqlParameter, supplying name and SQL type._@param name name of the parameter, as used in input and output maps_@param sqlType SQL type of the parameter according to {@code java.sql.Types}_@param typeName the type name of the parameter (optional);public SqlParameter(String name, int sqlType, String typeName) {_		this.name = name__		this.sqlType = sqlType__		this.typeName = typeName__	};create,a,new,sql,parameter,supplying,name,and,sql,type,param,name,name,of,the,parameter,as,used,in,input,and,output,maps,param,sql,type,sql,type,of,the,parameter,according,to,code,java,sql,types,param,type,name,the,type,name,of,the,parameter,optional;public,sql,parameter,string,name,int,sql,type,string,type,name,this,name,name,this,sql,type,sql,type,this,type,name,type,name
SqlParameter -> public SqlParameter(String name, int sqlType, String typeName);1407789123;Create a new SqlParameter, supplying name and SQL type._@param name name of the parameter, as used in input and output maps_@param sqlType SQL type of the parameter according to {@code java.sql.Types}_@param typeName the type name of the parameter (optional);public SqlParameter(String name, int sqlType, String typeName) {_		this.name = name__		this.sqlType = sqlType__		this.typeName = typeName__	};create,a,new,sql,parameter,supplying,name,and,sql,type,param,name,name,of,the,parameter,as,used,in,input,and,output,maps,param,sql,type,sql,type,of,the,parameter,according,to,code,java,sql,types,param,type,name,the,type,name,of,the,parameter,optional;public,sql,parameter,string,name,int,sql,type,string,type,name,this,name,name,this,sql,type,sql,type,this,type,name,type,name
SqlParameter -> public SqlParameter(String name, int sqlType, String typeName);1446471766;Create a new SqlParameter, supplying name and SQL type._@param name name of the parameter, as used in input and output maps_@param sqlType SQL type of the parameter according to {@code java.sql.Types}_@param typeName the type name of the parameter (optional);public SqlParameter(String name, int sqlType, String typeName) {_		this.name = name__		this.sqlType = sqlType__		this.typeName = typeName__	};create,a,new,sql,parameter,supplying,name,and,sql,type,param,name,name,of,the,parameter,as,used,in,input,and,output,maps,param,sql,type,sql,type,of,the,parameter,according,to,code,java,sql,types,param,type,name,the,type,name,of,the,parameter,optional;public,sql,parameter,string,name,int,sql,type,string,type,name,this,name,name,this,sql,type,sql,type,this,type,name,type,name
SqlParameter -> public SqlParameter(String name, int sqlType, String typeName);1467730834;Create a new SqlParameter, supplying name and SQL type._@param name name of the parameter, as used in input and output maps_@param sqlType SQL type of the parameter according to {@code java.sql.Types}_@param typeName the type name of the parameter (optional);public SqlParameter(String name, int sqlType, String typeName) {_		this.name = name__		this.sqlType = sqlType__		this.typeName = typeName__	};create,a,new,sql,parameter,supplying,name,and,sql,type,param,name,name,of,the,parameter,as,used,in,input,and,output,maps,param,sql,type,sql,type,of,the,parameter,according,to,code,java,sql,types,param,type,name,the,type,name,of,the,parameter,optional;public,sql,parameter,string,name,int,sql,type,string,type,name,this,name,name,this,sql,type,sql,type,this,type,name,type,name
SqlParameter -> public SqlParameter(String name, int sqlType, String typeName);1495868221;Create a new SqlParameter, supplying name and SQL type._@param name name of the parameter, as used in input and output maps_@param sqlType SQL type of the parameter according to {@code java.sql.Types}_@param typeName the type name of the parameter (optional);public SqlParameter(String name, int sqlType, String typeName) {_		this.name = name__		this.sqlType = sqlType__		this.typeName = typeName__	};create,a,new,sql,parameter,supplying,name,and,sql,type,param,name,name,of,the,parameter,as,used,in,input,and,output,maps,param,sql,type,sql,type,of,the,parameter,according,to,code,java,sql,types,param,type,name,the,type,name,of,the,parameter,optional;public,sql,parameter,string,name,int,sql,type,string,type,name,this,name,name,this,sql,type,sql,type,this,type,name,type,name
SqlParameter -> public SqlParameter(int sqlType);1328020251;Create a new anonymous SqlParameter, supplying the SQL type._@param sqlType SQL type of the parameter according to <code>java.sql.Types</code>;public SqlParameter(int sqlType) {_		this.sqlType = sqlType__	};create,a,new,anonymous,sql,parameter,supplying,the,sql,type,param,sql,type,sql,type,of,the,parameter,according,to,code,java,sql,types,code;public,sql,parameter,int,sql,type,this,sql,type,sql,type
SqlParameter -> public SqlParameter(int sqlType);1356735495;Create a new anonymous SqlParameter, supplying the SQL type._@param sqlType SQL type of the parameter according to {@code java.sql.Types};public SqlParameter(int sqlType) {_		this.sqlType = sqlType__	};create,a,new,anonymous,sql,parameter,supplying,the,sql,type,param,sql,type,sql,type,of,the,parameter,according,to,code,java,sql,types;public,sql,parameter,int,sql,type,this,sql,type,sql,type
SqlParameter -> public SqlParameter(int sqlType);1407789123;Create a new anonymous SqlParameter, supplying the SQL type._@param sqlType SQL type of the parameter according to {@code java.sql.Types};public SqlParameter(int sqlType) {_		this.sqlType = sqlType__	};create,a,new,anonymous,sql,parameter,supplying,the,sql,type,param,sql,type,sql,type,of,the,parameter,according,to,code,java,sql,types;public,sql,parameter,int,sql,type,this,sql,type,sql,type
SqlParameter -> public SqlParameter(int sqlType);1446471766;Create a new anonymous SqlParameter, supplying the SQL type._@param sqlType SQL type of the parameter according to {@code java.sql.Types};public SqlParameter(int sqlType) {_		this.sqlType = sqlType__	};create,a,new,anonymous,sql,parameter,supplying,the,sql,type,param,sql,type,sql,type,of,the,parameter,according,to,code,java,sql,types;public,sql,parameter,int,sql,type,this,sql,type,sql,type
SqlParameter -> public SqlParameter(int sqlType);1467730834;Create a new anonymous SqlParameter, supplying the SQL type._@param sqlType SQL type of the parameter according to {@code java.sql.Types};public SqlParameter(int sqlType) {_		this.sqlType = sqlType__	};create,a,new,anonymous,sql,parameter,supplying,the,sql,type,param,sql,type,sql,type,of,the,parameter,according,to,code,java,sql,types;public,sql,parameter,int,sql,type,this,sql,type,sql,type
SqlParameter -> public SqlParameter(int sqlType);1495868221;Create a new anonymous SqlParameter, supplying the SQL type._@param sqlType SQL type of the parameter according to {@code java.sql.Types};public SqlParameter(int sqlType) {_		this.sqlType = sqlType__	};create,a,new,anonymous,sql,parameter,supplying,the,sql,type,param,sql,type,sql,type,of,the,parameter,according,to,code,java,sql,types;public,sql,parameter,int,sql,type,this,sql,type,sql,type
SqlParameter -> public SqlParameter(int sqlType);1496837955;Create a new anonymous SqlParameter, supplying the SQL type._@param sqlType SQL type of the parameter according to {@code java.sql.Types};public SqlParameter(int sqlType) {_		this.sqlType = sqlType__	};create,a,new,anonymous,sql,parameter,supplying,the,sql,type,param,sql,type,sql,type,of,the,parameter,according,to,code,java,sql,types;public,sql,parameter,int,sql,type,this,sql,type,sql,type
SqlParameter -> public SqlParameter(int sqlType);1498780456;Create a new anonymous SqlParameter, supplying the SQL type._@param sqlType SQL type of the parameter according to {@code java.sql.Types};public SqlParameter(int sqlType) {_		this.sqlType = sqlType__	};create,a,new,anonymous,sql,parameter,supplying,the,sql,type,param,sql,type,sql,type,of,the,parameter,according,to,code,java,sql,types;public,sql,parameter,int,sql,type,this,sql,type,sql,type
SqlParameter -> public SqlParameter(int sqlType);1515948332;Create a new anonymous SqlParameter, supplying the SQL type._@param sqlType SQL type of the parameter according to {@code java.sql.Types};public SqlParameter(int sqlType) {_		this.sqlType = sqlType__	};create,a,new,anonymous,sql,parameter,supplying,the,sql,type,param,sql,type,sql,type,of,the,parameter,according,to,code,java,sql,types;public,sql,parameter,int,sql,type,this,sql,type,sql,type
SqlParameter -> public SqlParameter(int sqlType);1516393837;Create a new anonymous SqlParameter, supplying the SQL type._@param sqlType SQL type of the parameter according to {@code java.sql.Types};public SqlParameter(int sqlType) {_		this.sqlType = sqlType__	};create,a,new,anonymous,sql,parameter,supplying,the,sql,type,param,sql,type,sql,type,of,the,parameter,according,to,code,java,sql,types;public,sql,parameter,int,sql,type,this,sql,type,sql,type
SqlParameter -> public SqlParameter(int sqlType);1517472937;Create a new anonymous SqlParameter, supplying the SQL type._@param sqlType SQL type of the parameter according to {@code java.sql.Types};public SqlParameter(int sqlType) {_		this.sqlType = sqlType__	};create,a,new,anonymous,sql,parameter,supplying,the,sql,type,param,sql,type,sql,type,of,the,parameter,according,to,code,java,sql,types;public,sql,parameter,int,sql,type,this,sql,type,sql,type
SqlParameter -> public SqlParameter(int sqlType);1521457504;Create a new anonymous SqlParameter, supplying the SQL type._@param sqlType SQL type of the parameter according to {@code java.sql.Types};public SqlParameter(int sqlType) {_		this.sqlType = sqlType__	};create,a,new,anonymous,sql,parameter,supplying,the,sql,type,param,sql,type,sql,type,of,the,parameter,according,to,code,java,sql,types;public,sql,parameter,int,sql,type,this,sql,type,sql,type
SqlParameter -> public SqlParameter(int sqlType);1530174524;Create a new anonymous SqlParameter, supplying the SQL type._@param sqlType the SQL type of the parameter according to {@code java.sql.Types};public SqlParameter(int sqlType) {_		this.sqlType = sqlType__	};create,a,new,anonymous,sql,parameter,supplying,the,sql,type,param,sql,type,the,sql,type,of,the,parameter,according,to,code,java,sql,types;public,sql,parameter,int,sql,type,this,sql,type,sql,type
SqlParameter -> public SqlParameter(String name, int sqlType, int scale);1328020251;Create a new SqlParameter, supplying name and SQL type._@param name name of the parameter, as used in input and output maps_@param sqlType SQL type of the parameter according to <code>java.sql.Types</code>_@param scale the number of digits after the decimal point_(for DECIMAL and NUMERIC types);public SqlParameter(String name, int sqlType, int scale) {_		this.name = name__		this.sqlType = sqlType__		this.scale = scale__	};create,a,new,sql,parameter,supplying,name,and,sql,type,param,name,name,of,the,parameter,as,used,in,input,and,output,maps,param,sql,type,sql,type,of,the,parameter,according,to,code,java,sql,types,code,param,scale,the,number,of,digits,after,the,decimal,point,for,decimal,and,numeric,types;public,sql,parameter,string,name,int,sql,type,int,scale,this,name,name,this,sql,type,sql,type,this,scale,scale
SqlParameter -> public SqlParameter(String name, int sqlType, int scale);1356735495;Create a new SqlParameter, supplying name and SQL type._@param name name of the parameter, as used in input and output maps_@param sqlType SQL type of the parameter according to {@code java.sql.Types}_@param scale the number of digits after the decimal point_(for DECIMAL and NUMERIC types);public SqlParameter(String name, int sqlType, int scale) {_		this.name = name__		this.sqlType = sqlType__		this.scale = scale__	};create,a,new,sql,parameter,supplying,name,and,sql,type,param,name,name,of,the,parameter,as,used,in,input,and,output,maps,param,sql,type,sql,type,of,the,parameter,according,to,code,java,sql,types,param,scale,the,number,of,digits,after,the,decimal,point,for,decimal,and,numeric,types;public,sql,parameter,string,name,int,sql,type,int,scale,this,name,name,this,sql,type,sql,type,this,scale,scale
SqlParameter -> public SqlParameter(String name, int sqlType, int scale);1407789123;Create a new SqlParameter, supplying name and SQL type._@param name name of the parameter, as used in input and output maps_@param sqlType SQL type of the parameter according to {@code java.sql.Types}_@param scale the number of digits after the decimal point_(for DECIMAL and NUMERIC types);public SqlParameter(String name, int sqlType, int scale) {_		this.name = name__		this.sqlType = sqlType__		this.scale = scale__	};create,a,new,sql,parameter,supplying,name,and,sql,type,param,name,name,of,the,parameter,as,used,in,input,and,output,maps,param,sql,type,sql,type,of,the,parameter,according,to,code,java,sql,types,param,scale,the,number,of,digits,after,the,decimal,point,for,decimal,and,numeric,types;public,sql,parameter,string,name,int,sql,type,int,scale,this,name,name,this,sql,type,sql,type,this,scale,scale
SqlParameter -> public SqlParameter(String name, int sqlType, int scale);1446471766;Create a new SqlParameter, supplying name and SQL type._@param name name of the parameter, as used in input and output maps_@param sqlType SQL type of the parameter according to {@code java.sql.Types}_@param scale the number of digits after the decimal point_(for DECIMAL and NUMERIC types);public SqlParameter(String name, int sqlType, int scale) {_		this.name = name__		this.sqlType = sqlType__		this.scale = scale__	};create,a,new,sql,parameter,supplying,name,and,sql,type,param,name,name,of,the,parameter,as,used,in,input,and,output,maps,param,sql,type,sql,type,of,the,parameter,according,to,code,java,sql,types,param,scale,the,number,of,digits,after,the,decimal,point,for,decimal,and,numeric,types;public,sql,parameter,string,name,int,sql,type,int,scale,this,name,name,this,sql,type,sql,type,this,scale,scale
SqlParameter -> public SqlParameter(String name, int sqlType, int scale);1467730834;Create a new SqlParameter, supplying name and SQL type._@param name name of the parameter, as used in input and output maps_@param sqlType SQL type of the parameter according to {@code java.sql.Types}_@param scale the number of digits after the decimal point_(for DECIMAL and NUMERIC types);public SqlParameter(String name, int sqlType, int scale) {_		this.name = name__		this.sqlType = sqlType__		this.scale = scale__	};create,a,new,sql,parameter,supplying,name,and,sql,type,param,name,name,of,the,parameter,as,used,in,input,and,output,maps,param,sql,type,sql,type,of,the,parameter,according,to,code,java,sql,types,param,scale,the,number,of,digits,after,the,decimal,point,for,decimal,and,numeric,types;public,sql,parameter,string,name,int,sql,type,int,scale,this,name,name,this,sql,type,sql,type,this,scale,scale
SqlParameter -> public SqlParameter(String name, int sqlType, int scale);1495868221;Create a new SqlParameter, supplying name and SQL type._@param name name of the parameter, as used in input and output maps_@param sqlType SQL type of the parameter according to {@code java.sql.Types}_@param scale the number of digits after the decimal point_(for DECIMAL and NUMERIC types);public SqlParameter(String name, int sqlType, int scale) {_		this.name = name__		this.sqlType = sqlType__		this.scale = scale__	};create,a,new,sql,parameter,supplying,name,and,sql,type,param,name,name,of,the,parameter,as,used,in,input,and,output,maps,param,sql,type,sql,type,of,the,parameter,according,to,code,java,sql,types,param,scale,the,number,of,digits,after,the,decimal,point,for,decimal,and,numeric,types;public,sql,parameter,string,name,int,sql,type,int,scale,this,name,name,this,sql,type,sql,type,this,scale,scale
SqlParameter -> public SqlParameter(String name, int sqlType, int scale);1496837955;Create a new SqlParameter, supplying name and SQL type._@param name name of the parameter, as used in input and output maps_@param sqlType SQL type of the parameter according to {@code java.sql.Types}_@param scale the number of digits after the decimal point_(for DECIMAL and NUMERIC types);public SqlParameter(String name, int sqlType, int scale) {_		this.name = name__		this.sqlType = sqlType__		this.scale = scale__	};create,a,new,sql,parameter,supplying,name,and,sql,type,param,name,name,of,the,parameter,as,used,in,input,and,output,maps,param,sql,type,sql,type,of,the,parameter,according,to,code,java,sql,types,param,scale,the,number,of,digits,after,the,decimal,point,for,decimal,and,numeric,types;public,sql,parameter,string,name,int,sql,type,int,scale,this,name,name,this,sql,type,sql,type,this,scale,scale
SqlParameter -> public SqlParameter(String name, int sqlType, int scale);1498780456;Create a new SqlParameter, supplying name and SQL type._@param name name of the parameter, as used in input and output maps_@param sqlType SQL type of the parameter according to {@code java.sql.Types}_@param scale the number of digits after the decimal point_(for DECIMAL and NUMERIC types);public SqlParameter(String name, int sqlType, int scale) {_		this.name = name__		this.sqlType = sqlType__		this.scale = scale__	};create,a,new,sql,parameter,supplying,name,and,sql,type,param,name,name,of,the,parameter,as,used,in,input,and,output,maps,param,sql,type,sql,type,of,the,parameter,according,to,code,java,sql,types,param,scale,the,number,of,digits,after,the,decimal,point,for,decimal,and,numeric,types;public,sql,parameter,string,name,int,sql,type,int,scale,this,name,name,this,sql,type,sql,type,this,scale,scale
SqlParameter -> public SqlParameter(String name, int sqlType, int scale);1515948332;Create a new SqlParameter, supplying name and SQL type._@param name name of the parameter, as used in input and output maps_@param sqlType SQL type of the parameter according to {@code java.sql.Types}_@param scale the number of digits after the decimal point_(for DECIMAL and NUMERIC types);public SqlParameter(String name, int sqlType, int scale) {_		this.name = name__		this.sqlType = sqlType__		this.scale = scale__	};create,a,new,sql,parameter,supplying,name,and,sql,type,param,name,name,of,the,parameter,as,used,in,input,and,output,maps,param,sql,type,sql,type,of,the,parameter,according,to,code,java,sql,types,param,scale,the,number,of,digits,after,the,decimal,point,for,decimal,and,numeric,types;public,sql,parameter,string,name,int,sql,type,int,scale,this,name,name,this,sql,type,sql,type,this,scale,scale
SqlParameter -> public SqlParameter(String name, int sqlType, int scale);1516393837;Create a new SqlParameter, supplying name and SQL type._@param name name of the parameter, as used in input and output maps_@param sqlType SQL type of the parameter according to {@code java.sql.Types}_@param scale the number of digits after the decimal point_(for DECIMAL and NUMERIC types);public SqlParameter(String name, int sqlType, int scale) {_		this.name = name__		this.sqlType = sqlType__		this.scale = scale__	};create,a,new,sql,parameter,supplying,name,and,sql,type,param,name,name,of,the,parameter,as,used,in,input,and,output,maps,param,sql,type,sql,type,of,the,parameter,according,to,code,java,sql,types,param,scale,the,number,of,digits,after,the,decimal,point,for,decimal,and,numeric,types;public,sql,parameter,string,name,int,sql,type,int,scale,this,name,name,this,sql,type,sql,type,this,scale,scale
SqlParameter -> public SqlParameter(String name, int sqlType, int scale);1517472937;Create a new SqlParameter, supplying name and SQL type._@param name name of the parameter, as used in input and output maps_@param sqlType SQL type of the parameter according to {@code java.sql.Types}_@param scale the number of digits after the decimal point_(for DECIMAL and NUMERIC types);public SqlParameter(String name, int sqlType, int scale) {_		this.name = name__		this.sqlType = sqlType__		this.scale = scale__	};create,a,new,sql,parameter,supplying,name,and,sql,type,param,name,name,of,the,parameter,as,used,in,input,and,output,maps,param,sql,type,sql,type,of,the,parameter,according,to,code,java,sql,types,param,scale,the,number,of,digits,after,the,decimal,point,for,decimal,and,numeric,types;public,sql,parameter,string,name,int,sql,type,int,scale,this,name,name,this,sql,type,sql,type,this,scale,scale
SqlParameter -> public SqlParameter(String name, int sqlType, int scale);1521457504;Create a new SqlParameter, supplying name and SQL type._@param name name of the parameter, as used in input and output maps_@param sqlType SQL type of the parameter according to {@code java.sql.Types}_@param scale the number of digits after the decimal point_(for DECIMAL and NUMERIC types);public SqlParameter(String name, int sqlType, int scale) {_		this.name = name__		this.sqlType = sqlType__		this.scale = scale__	};create,a,new,sql,parameter,supplying,name,and,sql,type,param,name,name,of,the,parameter,as,used,in,input,and,output,maps,param,sql,type,sql,type,of,the,parameter,according,to,code,java,sql,types,param,scale,the,number,of,digits,after,the,decimal,point,for,decimal,and,numeric,types;public,sql,parameter,string,name,int,sql,type,int,scale,this,name,name,this,sql,type,sql,type,this,scale,scale
SqlParameter -> public SqlParameter(String name, int sqlType, int scale);1530174524;Create a new SqlParameter, supplying name and SQL type._@param name name of the parameter, as used in input and output maps_@param sqlType the SQL type of the parameter according to {@code java.sql.Types}_@param scale the number of digits after the decimal point_(for DECIMAL and NUMERIC types);public SqlParameter(String name, int sqlType, int scale) {_		this.name = name__		this.sqlType = sqlType__		this.scale = scale__	};create,a,new,sql,parameter,supplying,name,and,sql,type,param,name,name,of,the,parameter,as,used,in,input,and,output,maps,param,sql,type,the,sql,type,of,the,parameter,according,to,code,java,sql,types,param,scale,the,number,of,digits,after,the,decimal,point,for,decimal,and,numeric,types;public,sql,parameter,string,name,int,sql,type,int,scale,this,name,name,this,sql,type,sql,type,this,scale,scale
SqlParameter -> public Integer getScale();1328020251;Return the scale of the parameter, if any.;public Integer getScale() {_		return this.scale__	};return,the,scale,of,the,parameter,if,any;public,integer,get,scale,return,this,scale
SqlParameter -> public Integer getScale();1356735495;Return the scale of the parameter, if any.;public Integer getScale() {_		return this.scale__	};return,the,scale,of,the,parameter,if,any;public,integer,get,scale,return,this,scale
SqlParameter -> public Integer getScale();1407789123;Return the scale of the parameter, if any.;public Integer getScale() {_		return this.scale__	};return,the,scale,of,the,parameter,if,any;public,integer,get,scale,return,this,scale
SqlParameter -> public Integer getScale();1446471766;Return the scale of the parameter, if any.;public Integer getScale() {_		return this.scale__	};return,the,scale,of,the,parameter,if,any;public,integer,get,scale,return,this,scale
SqlParameter -> public Integer getScale();1467730834;Return the scale of the parameter, if any.;public Integer getScale() {_		return this.scale__	};return,the,scale,of,the,parameter,if,any;public,integer,get,scale,return,this,scale
SqlParameter -> public String getTypeName();1328020251;Return the type name of the parameter, if any.;public String getTypeName() {_		return this.typeName__	};return,the,type,name,of,the,parameter,if,any;public,string,get,type,name,return,this,type,name
SqlParameter -> public String getTypeName();1356735495;Return the type name of the parameter, if any.;public String getTypeName() {_		return this.typeName__	};return,the,type,name,of,the,parameter,if,any;public,string,get,type,name,return,this,type,name
SqlParameter -> public String getTypeName();1407789123;Return the type name of the parameter, if any.;public String getTypeName() {_		return this.typeName__	};return,the,type,name,of,the,parameter,if,any;public,string,get,type,name,return,this,type,name
SqlParameter -> public String getTypeName();1446471766;Return the type name of the parameter, if any.;public String getTypeName() {_		return this.typeName__	};return,the,type,name,of,the,parameter,if,any;public,string,get,type,name,return,this,type,name
SqlParameter -> public String getTypeName();1467730834;Return the type name of the parameter, if any.;public String getTypeName() {_		return this.typeName__	};return,the,type,name,of,the,parameter,if,any;public,string,get,type,name,return,this,type,name
SqlParameter -> @Nullable 	public String getTypeName();1495868221;Return the type name of the parameter, if any.;@Nullable_	public String getTypeName() {_		return this.typeName__	};return,the,type,name,of,the,parameter,if,any;nullable,public,string,get,type,name,return,this,type,name
SqlParameter -> @Nullable 	public String getTypeName();1496837955;Return the type name of the parameter, if any.;@Nullable_	public String getTypeName() {_		return this.typeName__	};return,the,type,name,of,the,parameter,if,any;nullable,public,string,get,type,name,return,this,type,name
SqlParameter -> @Nullable 	public String getTypeName();1498780456;Return the type name of the parameter, if any.;@Nullable_	public String getTypeName() {_		return this.typeName__	};return,the,type,name,of,the,parameter,if,any;nullable,public,string,get,type,name,return,this,type,name
SqlParameter -> @Nullable 	public String getTypeName();1515948332;Return the type name of the parameter, if any.;@Nullable_	public String getTypeName() {_		return this.typeName__	};return,the,type,name,of,the,parameter,if,any;nullable,public,string,get,type,name,return,this,type,name
SqlParameter -> @Nullable 	public String getTypeName();1516393837;Return the type name of the parameter, if any.;@Nullable_	public String getTypeName() {_		return this.typeName__	};return,the,type,name,of,the,parameter,if,any;nullable,public,string,get,type,name,return,this,type,name
SqlParameter -> @Nullable 	public String getTypeName();1517472937;Return the type name of the parameter, if any.;@Nullable_	public String getTypeName() {_		return this.typeName__	};return,the,type,name,of,the,parameter,if,any;nullable,public,string,get,type,name,return,this,type,name
SqlParameter -> @Nullable 	public String getTypeName();1521457504;Return the type name of the parameter, if any.;@Nullable_	public String getTypeName() {_		return this.typeName__	};return,the,type,name,of,the,parameter,if,any;nullable,public,string,get,type,name,return,this,type,name
SqlParameter -> @Nullable 	public String getTypeName();1530174524;Return the type name of the parameter, if any.;@Nullable_	public String getTypeName() {_		return this.typeName__	};return,the,type,name,of,the,parameter,if,any;nullable,public,string,get,type,name,return,this,type,name
SqlParameter -> @Nullable 	public String getName();1495868221;Return the name of the parameter, or {@code null} if anonymous.;@Nullable_	public String getName() {_		return this.name__	};return,the,name,of,the,parameter,or,code,null,if,anonymous;nullable,public,string,get,name,return,this,name
SqlParameter -> @Nullable 	public String getName();1496837955;Return the name of the parameter, or {@code null} if anonymous.;@Nullable_	public String getName() {_		return this.name__	};return,the,name,of,the,parameter,or,code,null,if,anonymous;nullable,public,string,get,name,return,this,name
SqlParameter -> @Nullable 	public String getName();1498780456;Return the name of the parameter, or {@code null} if anonymous.;@Nullable_	public String getName() {_		return this.name__	};return,the,name,of,the,parameter,or,code,null,if,anonymous;nullable,public,string,get,name,return,this,name
SqlParameter -> @Nullable 	public String getName();1515948332;Return the name of the parameter, or {@code null} if anonymous.;@Nullable_	public String getName() {_		return this.name__	};return,the,name,of,the,parameter,or,code,null,if,anonymous;nullable,public,string,get,name,return,this,name
SqlParameter -> @Nullable 	public String getName();1516393837;Return the name of the parameter, or {@code null} if anonymous.;@Nullable_	public String getName() {_		return this.name__	};return,the,name,of,the,parameter,or,code,null,if,anonymous;nullable,public,string,get,name,return,this,name
SqlParameter -> @Nullable 	public String getName();1517472937;Return the name of the parameter, or {@code null} if anonymous.;@Nullable_	public String getName() {_		return this.name__	};return,the,name,of,the,parameter,or,code,null,if,anonymous;nullable,public,string,get,name,return,this,name
SqlParameter -> @Nullable 	public String getName();1521457504;Return the name of the parameter, or {@code null} if anonymous.;@Nullable_	public String getName() {_		return this.name__	};return,the,name,of,the,parameter,or,code,null,if,anonymous;nullable,public,string,get,name,return,this,name
SqlParameter -> @Nullable 	public String getName();1530174524;Return the name of the parameter, or {@code null} if anonymous.;@Nullable_	public String getName() {_		return this.name__	};return,the,name,of,the,parameter,or,code,null,if,anonymous;nullable,public,string,get,name,return,this,name
SqlParameter -> public static List<SqlParameter> sqlTypesToAnonymousParameterList(int... types);1407789123;Convert a list of JDBC types, as defined in {@code java.sql.Types},_to a List of SqlParameter objects as used in this package.;public static List<SqlParameter> sqlTypesToAnonymousParameterList(int... types) {_		List<SqlParameter> result = new LinkedList<SqlParameter>()__		if (types != null) {_			for (int type : types) {_				result.add(new SqlParameter(type))__			}_		}_		return result__	};convert,a,list,of,jdbc,types,as,defined,in,code,java,sql,types,to,a,list,of,sql,parameter,objects,as,used,in,this,package;public,static,list,sql,parameter,sql,types,to,anonymous,parameter,list,int,types,list,sql,parameter,result,new,linked,list,sql,parameter,if,types,null,for,int,type,types,result,add,new,sql,parameter,type,return,result
SqlParameter -> public static List<SqlParameter> sqlTypesToAnonymousParameterList(int... types);1446471766;Convert a list of JDBC types, as defined in {@code java.sql.Types},_to a List of SqlParameter objects as used in this package.;public static List<SqlParameter> sqlTypesToAnonymousParameterList(int... types) {_		List<SqlParameter> result = new LinkedList<SqlParameter>()__		if (types != null) {_			for (int type : types) {_				result.add(new SqlParameter(type))__			}_		}_		return result__	};convert,a,list,of,jdbc,types,as,defined,in,code,java,sql,types,to,a,list,of,sql,parameter,objects,as,used,in,this,package;public,static,list,sql,parameter,sql,types,to,anonymous,parameter,list,int,types,list,sql,parameter,result,new,linked,list,sql,parameter,if,types,null,for,int,type,types,result,add,new,sql,parameter,type,return,result
SqlParameter -> public static List<SqlParameter> sqlTypesToAnonymousParameterList(int... types);1467730834;Convert a list of JDBC types, as defined in {@code java.sql.Types},_to a List of SqlParameter objects as used in this package.;public static List<SqlParameter> sqlTypesToAnonymousParameterList(int... types) {_		List<SqlParameter> result = new LinkedList<>()__		if (types != null) {_			for (int type : types) {_				result.add(new SqlParameter(type))__			}_		}_		return result__	};convert,a,list,of,jdbc,types,as,defined,in,code,java,sql,types,to,a,list,of,sql,parameter,objects,as,used,in,this,package;public,static,list,sql,parameter,sql,types,to,anonymous,parameter,list,int,types,list,sql,parameter,result,new,linked,list,if,types,null,for,int,type,types,result,add,new,sql,parameter,type,return,result
SqlParameter -> public static List<SqlParameter> sqlTypesToAnonymousParameterList(int... types);1495868221;Convert a list of JDBC types, as defined in {@code java.sql.Types},_to a List of SqlParameter objects as used in this package.;public static List<SqlParameter> sqlTypesToAnonymousParameterList(int... types) {_		List<SqlParameter> result = new LinkedList<>()__		if (types != null) {_			for (int type : types) {_				result.add(new SqlParameter(type))__			}_		}_		return result__	};convert,a,list,of,jdbc,types,as,defined,in,code,java,sql,types,to,a,list,of,sql,parameter,objects,as,used,in,this,package;public,static,list,sql,parameter,sql,types,to,anonymous,parameter,list,int,types,list,sql,parameter,result,new,linked,list,if,types,null,for,int,type,types,result,add,new,sql,parameter,type,return,result
SqlParameter -> public SqlParameter(int sqlType, int scale);1328020251;Create a new anonymous SqlParameter, supplying the SQL type._@param sqlType SQL type of the parameter according to <code>java.sql.Types</code>_@param scale the number of digits after the decimal point_(for DECIMAL and NUMERIC types);public SqlParameter(int sqlType, int scale) {_		this.sqlType = sqlType__		this.scale = scale__	};create,a,new,anonymous,sql,parameter,supplying,the,sql,type,param,sql,type,sql,type,of,the,parameter,according,to,code,java,sql,types,code,param,scale,the,number,of,digits,after,the,decimal,point,for,decimal,and,numeric,types;public,sql,parameter,int,sql,type,int,scale,this,sql,type,sql,type,this,scale,scale
SqlParameter -> public SqlParameter(int sqlType, int scale);1356735495;Create a new anonymous SqlParameter, supplying the SQL type._@param sqlType SQL type of the parameter according to {@code java.sql.Types}_@param scale the number of digits after the decimal point_(for DECIMAL and NUMERIC types);public SqlParameter(int sqlType, int scale) {_		this.sqlType = sqlType__		this.scale = scale__	};create,a,new,anonymous,sql,parameter,supplying,the,sql,type,param,sql,type,sql,type,of,the,parameter,according,to,code,java,sql,types,param,scale,the,number,of,digits,after,the,decimal,point,for,decimal,and,numeric,types;public,sql,parameter,int,sql,type,int,scale,this,sql,type,sql,type,this,scale,scale
SqlParameter -> public SqlParameter(int sqlType, int scale);1407789123;Create a new anonymous SqlParameter, supplying the SQL type._@param sqlType SQL type of the parameter according to {@code java.sql.Types}_@param scale the number of digits after the decimal point_(for DECIMAL and NUMERIC types);public SqlParameter(int sqlType, int scale) {_		this.sqlType = sqlType__		this.scale = scale__	};create,a,new,anonymous,sql,parameter,supplying,the,sql,type,param,sql,type,sql,type,of,the,parameter,according,to,code,java,sql,types,param,scale,the,number,of,digits,after,the,decimal,point,for,decimal,and,numeric,types;public,sql,parameter,int,sql,type,int,scale,this,sql,type,sql,type,this,scale,scale
SqlParameter -> public SqlParameter(int sqlType, int scale);1446471766;Create a new anonymous SqlParameter, supplying the SQL type._@param sqlType SQL type of the parameter according to {@code java.sql.Types}_@param scale the number of digits after the decimal point_(for DECIMAL and NUMERIC types);public SqlParameter(int sqlType, int scale) {_		this.sqlType = sqlType__		this.scale = scale__	};create,a,new,anonymous,sql,parameter,supplying,the,sql,type,param,sql,type,sql,type,of,the,parameter,according,to,code,java,sql,types,param,scale,the,number,of,digits,after,the,decimal,point,for,decimal,and,numeric,types;public,sql,parameter,int,sql,type,int,scale,this,sql,type,sql,type,this,scale,scale
SqlParameter -> public SqlParameter(int sqlType, int scale);1467730834;Create a new anonymous SqlParameter, supplying the SQL type._@param sqlType SQL type of the parameter according to {@code java.sql.Types}_@param scale the number of digits after the decimal point_(for DECIMAL and NUMERIC types);public SqlParameter(int sqlType, int scale) {_		this.sqlType = sqlType__		this.scale = scale__	};create,a,new,anonymous,sql,parameter,supplying,the,sql,type,param,sql,type,sql,type,of,the,parameter,according,to,code,java,sql,types,param,scale,the,number,of,digits,after,the,decimal,point,for,decimal,and,numeric,types;public,sql,parameter,int,sql,type,int,scale,this,sql,type,sql,type,this,scale,scale
SqlParameter -> public SqlParameter(int sqlType, int scale);1495868221;Create a new anonymous SqlParameter, supplying the SQL type._@param sqlType SQL type of the parameter according to {@code java.sql.Types}_@param scale the number of digits after the decimal point_(for DECIMAL and NUMERIC types);public SqlParameter(int sqlType, int scale) {_		this.sqlType = sqlType__		this.scale = scale__	};create,a,new,anonymous,sql,parameter,supplying,the,sql,type,param,sql,type,sql,type,of,the,parameter,according,to,code,java,sql,types,param,scale,the,number,of,digits,after,the,decimal,point,for,decimal,and,numeric,types;public,sql,parameter,int,sql,type,int,scale,this,sql,type,sql,type,this,scale,scale
SqlParameter -> public SqlParameter(int sqlType, int scale);1496837955;Create a new anonymous SqlParameter, supplying the SQL type._@param sqlType SQL type of the parameter according to {@code java.sql.Types}_@param scale the number of digits after the decimal point_(for DECIMAL and NUMERIC types);public SqlParameter(int sqlType, int scale) {_		this.sqlType = sqlType__		this.scale = scale__	};create,a,new,anonymous,sql,parameter,supplying,the,sql,type,param,sql,type,sql,type,of,the,parameter,according,to,code,java,sql,types,param,scale,the,number,of,digits,after,the,decimal,point,for,decimal,and,numeric,types;public,sql,parameter,int,sql,type,int,scale,this,sql,type,sql,type,this,scale,scale
SqlParameter -> public SqlParameter(int sqlType, int scale);1498780456;Create a new anonymous SqlParameter, supplying the SQL type._@param sqlType SQL type of the parameter according to {@code java.sql.Types}_@param scale the number of digits after the decimal point_(for DECIMAL and NUMERIC types);public SqlParameter(int sqlType, int scale) {_		this.sqlType = sqlType__		this.scale = scale__	};create,a,new,anonymous,sql,parameter,supplying,the,sql,type,param,sql,type,sql,type,of,the,parameter,according,to,code,java,sql,types,param,scale,the,number,of,digits,after,the,decimal,point,for,decimal,and,numeric,types;public,sql,parameter,int,sql,type,int,scale,this,sql,type,sql,type,this,scale,scale
SqlParameter -> public SqlParameter(int sqlType, int scale);1515948332;Create a new anonymous SqlParameter, supplying the SQL type._@param sqlType SQL type of the parameter according to {@code java.sql.Types}_@param scale the number of digits after the decimal point_(for DECIMAL and NUMERIC types);public SqlParameter(int sqlType, int scale) {_		this.sqlType = sqlType__		this.scale = scale__	};create,a,new,anonymous,sql,parameter,supplying,the,sql,type,param,sql,type,sql,type,of,the,parameter,according,to,code,java,sql,types,param,scale,the,number,of,digits,after,the,decimal,point,for,decimal,and,numeric,types;public,sql,parameter,int,sql,type,int,scale,this,sql,type,sql,type,this,scale,scale
SqlParameter -> public SqlParameter(int sqlType, int scale);1516393837;Create a new anonymous SqlParameter, supplying the SQL type._@param sqlType SQL type of the parameter according to {@code java.sql.Types}_@param scale the number of digits after the decimal point_(for DECIMAL and NUMERIC types);public SqlParameter(int sqlType, int scale) {_		this.sqlType = sqlType__		this.scale = scale__	};create,a,new,anonymous,sql,parameter,supplying,the,sql,type,param,sql,type,sql,type,of,the,parameter,according,to,code,java,sql,types,param,scale,the,number,of,digits,after,the,decimal,point,for,decimal,and,numeric,types;public,sql,parameter,int,sql,type,int,scale,this,sql,type,sql,type,this,scale,scale
SqlParameter -> public SqlParameter(int sqlType, int scale);1517472937;Create a new anonymous SqlParameter, supplying the SQL type._@param sqlType SQL type of the parameter according to {@code java.sql.Types}_@param scale the number of digits after the decimal point_(for DECIMAL and NUMERIC types);public SqlParameter(int sqlType, int scale) {_		this.sqlType = sqlType__		this.scale = scale__	};create,a,new,anonymous,sql,parameter,supplying,the,sql,type,param,sql,type,sql,type,of,the,parameter,according,to,code,java,sql,types,param,scale,the,number,of,digits,after,the,decimal,point,for,decimal,and,numeric,types;public,sql,parameter,int,sql,type,int,scale,this,sql,type,sql,type,this,scale,scale
SqlParameter -> public SqlParameter(int sqlType, int scale);1521457504;Create a new anonymous SqlParameter, supplying the SQL type._@param sqlType SQL type of the parameter according to {@code java.sql.Types}_@param scale the number of digits after the decimal point_(for DECIMAL and NUMERIC types);public SqlParameter(int sqlType, int scale) {_		this.sqlType = sqlType__		this.scale = scale__	};create,a,new,anonymous,sql,parameter,supplying,the,sql,type,param,sql,type,sql,type,of,the,parameter,according,to,code,java,sql,types,param,scale,the,number,of,digits,after,the,decimal,point,for,decimal,and,numeric,types;public,sql,parameter,int,sql,type,int,scale,this,sql,type,sql,type,this,scale,scale
SqlParameter -> public SqlParameter(int sqlType, int scale);1530174524;Create a new anonymous SqlParameter, supplying the SQL type._@param sqlType the SQL type of the parameter according to {@code java.sql.Types}_@param scale the number of digits after the decimal point_(for DECIMAL and NUMERIC types);public SqlParameter(int sqlType, int scale) {_		this.sqlType = sqlType__		this.scale = scale__	};create,a,new,anonymous,sql,parameter,supplying,the,sql,type,param,sql,type,the,sql,type,of,the,parameter,according,to,code,java,sql,types,param,scale,the,number,of,digits,after,the,decimal,point,for,decimal,and,numeric,types;public,sql,parameter,int,sql,type,int,scale,this,sql,type,sql,type,this,scale,scale
