# id;timestamp;commentText;codeText;commentWords;codeWords
RdbmsOperation -> public void setGeneratedKeysColumnNames(String... names);1407511029;Set the column names of the auto-generated keys._@see java.sql.Connection#prepareStatement(String, String[]);public void setGeneratedKeysColumnNames(String... names) {_		if (isCompiled()) {_			throw new InvalidDataAccessApiUsageException(_					"The column names for the generated keys must be set before the operation is compiled")__		}_		this.generatedKeysColumnNames = names__	};set,the,column,names,of,the,auto,generated,keys,see,java,sql,connection,prepare,statement,string,string;public,void,set,generated,keys,column,names,string,names,if,is,compiled,throw,new,invalid,data,access,api,usage,exception,the,column,names,for,the,generated,keys,must,be,set,before,the,operation,is,compiled,this,generated,keys,column,names,names
RdbmsOperation -> public void setGeneratedKeysColumnNames(String... names);1446038912;Set the column names of the auto-generated keys._@see java.sql.Connection#prepareStatement(String, String[]);public void setGeneratedKeysColumnNames(String... names) {_		if (isCompiled()) {_			throw new InvalidDataAccessApiUsageException(_					"The column names for the generated keys must be set before the operation is compiled")__		}_		this.generatedKeysColumnNames = names__	};set,the,column,names,of,the,auto,generated,keys,see,java,sql,connection,prepare,statement,string,string;public,void,set,generated,keys,column,names,string,names,if,is,compiled,throw,new,invalid,data,access,api,usage,exception,the,column,names,for,the,generated,keys,must,be,set,before,the,operation,is,compiled,this,generated,keys,column,names,names
RdbmsOperation -> public void setGeneratedKeysColumnNames(String... names);1467730834;Set the column names of the auto-generated keys._@see java.sql.Connection#prepareStatement(String, String[]);public void setGeneratedKeysColumnNames(String... names) {_		if (isCompiled()) {_			throw new InvalidDataAccessApiUsageException(_					"The column names for the generated keys must be set before the operation is compiled")__		}_		this.generatedKeysColumnNames = names__	};set,the,column,names,of,the,auto,generated,keys,see,java,sql,connection,prepare,statement,string,string;public,void,set,generated,keys,column,names,string,names,if,is,compiled,throw,new,invalid,data,access,api,usage,exception,the,column,names,for,the,generated,keys,must,be,set,before,the,operation,is,compiled,this,generated,keys,column,names,names
RdbmsOperation -> public void setGeneratedKeysColumnNames(String... names);1495868221;Set the column names of the auto-generated keys._@see java.sql.Connection#prepareStatement(String, String[]);public void setGeneratedKeysColumnNames(String... names) {_		if (isCompiled()) {_			throw new InvalidDataAccessApiUsageException(_					"The column names for the generated keys must be set before the operation is compiled")__		}_		this.generatedKeysColumnNames = names__	};set,the,column,names,of,the,auto,generated,keys,see,java,sql,connection,prepare,statement,string,string;public,void,set,generated,keys,column,names,string,names,if,is,compiled,throw,new,invalid,data,access,api,usage,exception,the,column,names,for,the,generated,keys,must,be,set,before,the,operation,is,compiled,this,generated,keys,column,names,names
RdbmsOperation -> public void setGeneratedKeysColumnNames(String... names);1496837955;Set the column names of the auto-generated keys._@see java.sql.Connection#prepareStatement(String, String[]);public void setGeneratedKeysColumnNames(String... names) {_		if (isCompiled()) {_			throw new InvalidDataAccessApiUsageException(_					"The column names for the generated keys must be set before the operation is compiled")__		}_		this.generatedKeysColumnNames = names__	};set,the,column,names,of,the,auto,generated,keys,see,java,sql,connection,prepare,statement,string,string;public,void,set,generated,keys,column,names,string,names,if,is,compiled,throw,new,invalid,data,access,api,usage,exception,the,column,names,for,the,generated,keys,must,be,set,before,the,operation,is,compiled,this,generated,keys,column,names,names
RdbmsOperation -> public void setGeneratedKeysColumnNames(String... names);1498780456;Set the column names of the auto-generated keys._@see java.sql.Connection#prepareStatement(String, String[]);public void setGeneratedKeysColumnNames(String... names) {_		if (isCompiled()) {_			throw new InvalidDataAccessApiUsageException(_					"The column names for the generated keys must be set before the operation is compiled")__		}_		this.generatedKeysColumnNames = names__	};set,the,column,names,of,the,auto,generated,keys,see,java,sql,connection,prepare,statement,string,string;public,void,set,generated,keys,column,names,string,names,if,is,compiled,throw,new,invalid,data,access,api,usage,exception,the,column,names,for,the,generated,keys,must,be,set,before,the,operation,is,compiled,this,generated,keys,column,names,names
RdbmsOperation -> public void setGeneratedKeysColumnNames(String... names);1506519613;Set the column names of the auto-generated keys._@see java.sql.Connection#prepareStatement(String, String[]);public void setGeneratedKeysColumnNames(String... names) {_		if (isCompiled()) {_			throw new InvalidDataAccessApiUsageException(_					"The column names for the generated keys must be set before the operation is compiled")__		}_		this.generatedKeysColumnNames = names__	};set,the,column,names,of,the,auto,generated,keys,see,java,sql,connection,prepare,statement,string,string;public,void,set,generated,keys,column,names,string,names,if,is,compiled,throw,new,invalid,data,access,api,usage,exception,the,column,names,for,the,generated,keys,must,be,set,before,the,operation,is,compiled,this,generated,keys,column,names,names
RdbmsOperation -> public void setGeneratedKeysColumnNames(String... names);1525966356;Set the column names of the auto-generated keys._@see java.sql.Connection#prepareStatement(String, String[]);public void setGeneratedKeysColumnNames(String... names) {_		if (isCompiled()) {_			throw new InvalidDataAccessApiUsageException(_					"The column names for the generated keys must be set before the operation is compiled")__		}_		this.generatedKeysColumnNames = names__	};set,the,column,names,of,the,auto,generated,keys,see,java,sql,connection,prepare,statement,string,string;public,void,set,generated,keys,column,names,string,names,if,is,compiled,throw,new,invalid,data,access,api,usage,exception,the,column,names,for,the,generated,keys,must,be,set,before,the,operation,is,compiled,this,generated,keys,column,names,names
RdbmsOperation -> public void setGeneratedKeysColumnNames(String... names);1530174524;Set the column names of the auto-generated keys._@see java.sql.Connection#prepareStatement(String, String[]);public void setGeneratedKeysColumnNames(String... names) {_		if (isCompiled()) {_			throw new InvalidDataAccessApiUsageException(_					"The column names for the generated keys must be set before the operation is compiled")__		}_		this.generatedKeysColumnNames = names__	};set,the,column,names,of,the,auto,generated,keys,see,java,sql,connection,prepare,statement,string,string;public,void,set,generated,keys,column,names,string,names,if,is,compiled,throw,new,invalid,data,access,api,usage,exception,the,column,names,for,the,generated,keys,must,be,set,before,the,operation,is,compiled,this,generated,keys,column,names,names
RdbmsOperation -> public void setMaxRows(int maxRows);1328020251;Set the maximum number of rows for this RDBMS operation. This is important_for processing subsets of large result sets, avoiding to read and hold_the entire result set in the database or in the JDBC driver._<p>Default is 0, indicating to use the driver's default._@see org.springframework.jdbc.core.JdbcTemplate#setMaxRows;public void setMaxRows(int maxRows) {_		this.jdbcTemplate.setMaxRows(maxRows)__	};set,the,maximum,number,of,rows,for,this,rdbms,operation,this,is,important,for,processing,subsets,of,large,result,sets,avoiding,to,read,and,hold,the,entire,result,set,in,the,database,or,in,the,jdbc,driver,p,default,is,0,indicating,to,use,the,driver,s,default,see,org,springframework,jdbc,core,jdbc,template,set,max,rows;public,void,set,max,rows,int,max,rows,this,jdbc,template,set,max,rows,max,rows
RdbmsOperation -> public void setMaxRows(int maxRows);1356735495;Set the maximum number of rows for this RDBMS operation. This is important_for processing subsets of large result sets, avoiding to read and hold_the entire result set in the database or in the JDBC driver._<p>Default is 0, indicating to use the driver's default._@see org.springframework.jdbc.core.JdbcTemplate#setMaxRows;public void setMaxRows(int maxRows) {_		this.jdbcTemplate.setMaxRows(maxRows)__	};set,the,maximum,number,of,rows,for,this,rdbms,operation,this,is,important,for,processing,subsets,of,large,result,sets,avoiding,to,read,and,hold,the,entire,result,set,in,the,database,or,in,the,jdbc,driver,p,default,is,0,indicating,to,use,the,driver,s,default,see,org,springframework,jdbc,core,jdbc,template,set,max,rows;public,void,set,max,rows,int,max,rows,this,jdbc,template,set,max,rows,max,rows
RdbmsOperation -> public void setMaxRows(int maxRows);1357119239;Set the maximum number of rows for this RDBMS operation. This is important_for processing subsets of large result sets, avoiding to read and hold_the entire result set in the database or in the JDBC driver._<p>Default is 0, indicating to use the driver's default._@see org.springframework.jdbc.core.JdbcTemplate#setMaxRows;public void setMaxRows(int maxRows) {_		this.jdbcTemplate.setMaxRows(maxRows)__	};set,the,maximum,number,of,rows,for,this,rdbms,operation,this,is,important,for,processing,subsets,of,large,result,sets,avoiding,to,read,and,hold,the,entire,result,set,in,the,database,or,in,the,jdbc,driver,p,default,is,0,indicating,to,use,the,driver,s,default,see,org,springframework,jdbc,core,jdbc,template,set,max,rows;public,void,set,max,rows,int,max,rows,this,jdbc,template,set,max,rows,max,rows
RdbmsOperation -> public void setMaxRows(int maxRows);1368482696;Set the maximum number of rows for this RDBMS operation. This is important_for processing subsets of large result sets, avoiding to read and hold_the entire result set in the database or in the JDBC driver._<p>Default is 0, indicating to use the driver's default._@see org.springframework.jdbc.core.JdbcTemplate#setMaxRows;public void setMaxRows(int maxRows) {_		this.jdbcTemplate.setMaxRows(maxRows)__	};set,the,maximum,number,of,rows,for,this,rdbms,operation,this,is,important,for,processing,subsets,of,large,result,sets,avoiding,to,read,and,hold,the,entire,result,set,in,the,database,or,in,the,jdbc,driver,p,default,is,0,indicating,to,use,the,driver,s,default,see,org,springframework,jdbc,core,jdbc,template,set,max,rows;public,void,set,max,rows,int,max,rows,this,jdbc,template,set,max,rows,max,rows
RdbmsOperation -> public void setMaxRows(int maxRows);1385412762;Set the maximum number of rows for this RDBMS operation. This is important_for processing subsets of large result sets, avoiding to read and hold_the entire result set in the database or in the JDBC driver._<p>Default is 0, indicating to use the driver's default._@see org.springframework.jdbc.core.JdbcTemplate#setMaxRows;public void setMaxRows(int maxRows) {_		this.jdbcTemplate.setMaxRows(maxRows)__	};set,the,maximum,number,of,rows,for,this,rdbms,operation,this,is,important,for,processing,subsets,of,large,result,sets,avoiding,to,read,and,hold,the,entire,result,set,in,the,database,or,in,the,jdbc,driver,p,default,is,0,indicating,to,use,the,driver,s,default,see,org,springframework,jdbc,core,jdbc,template,set,max,rows;public,void,set,max,rows,int,max,rows,this,jdbc,template,set,max,rows,max,rows
RdbmsOperation -> public void setMaxRows(int maxRows);1407511029;Set the maximum number of rows for this RDBMS operation. This is important_for processing subsets of large result sets, avoiding to read and hold_the entire result set in the database or in the JDBC driver._<p>Default is 0, indicating to use the driver's default._@see org.springframework.jdbc.core.JdbcTemplate#setMaxRows;public void setMaxRows(int maxRows) {_		this.jdbcTemplate.setMaxRows(maxRows)__	};set,the,maximum,number,of,rows,for,this,rdbms,operation,this,is,important,for,processing,subsets,of,large,result,sets,avoiding,to,read,and,hold,the,entire,result,set,in,the,database,or,in,the,jdbc,driver,p,default,is,0,indicating,to,use,the,driver,s,default,see,org,springframework,jdbc,core,jdbc,template,set,max,rows;public,void,set,max,rows,int,max,rows,this,jdbc,template,set,max,rows,max,rows
RdbmsOperation -> public void setMaxRows(int maxRows);1446038912;Set the maximum number of rows for this RDBMS operation. This is important_for processing subsets of large result sets, avoiding to read and hold_the entire result set in the database or in the JDBC driver._<p>Default is 0, indicating to use the driver's default._@see org.springframework.jdbc.core.JdbcTemplate#setMaxRows;public void setMaxRows(int maxRows) {_		this.jdbcTemplate.setMaxRows(maxRows)__	};set,the,maximum,number,of,rows,for,this,rdbms,operation,this,is,important,for,processing,subsets,of,large,result,sets,avoiding,to,read,and,hold,the,entire,result,set,in,the,database,or,in,the,jdbc,driver,p,default,is,0,indicating,to,use,the,driver,s,default,see,org,springframework,jdbc,core,jdbc,template,set,max,rows;public,void,set,max,rows,int,max,rows,this,jdbc,template,set,max,rows,max,rows
RdbmsOperation -> public void setMaxRows(int maxRows);1467730834;Set the maximum number of rows for this RDBMS operation. This is important_for processing subsets of large result sets, avoiding to read and hold_the entire result set in the database or in the JDBC driver._<p>Default is 0, indicating to use the driver's default._@see org.springframework.jdbc.core.JdbcTemplate#setMaxRows;public void setMaxRows(int maxRows) {_		this.jdbcTemplate.setMaxRows(maxRows)__	};set,the,maximum,number,of,rows,for,this,rdbms,operation,this,is,important,for,processing,subsets,of,large,result,sets,avoiding,to,read,and,hold,the,entire,result,set,in,the,database,or,in,the,jdbc,driver,p,default,is,0,indicating,to,use,the,driver,s,default,see,org,springframework,jdbc,core,jdbc,template,set,max,rows;public,void,set,max,rows,int,max,rows,this,jdbc,template,set,max,rows,max,rows
RdbmsOperation -> public void setMaxRows(int maxRows);1495868221;Set the maximum number of rows for this RDBMS operation. This is important_for processing subsets of large result sets, avoiding to read and hold_the entire result set in the database or in the JDBC driver._<p>Default is 0, indicating to use the driver's default._@see org.springframework.jdbc.core.JdbcTemplate#setMaxRows;public void setMaxRows(int maxRows) {_		this.jdbcTemplate.setMaxRows(maxRows)__	};set,the,maximum,number,of,rows,for,this,rdbms,operation,this,is,important,for,processing,subsets,of,large,result,sets,avoiding,to,read,and,hold,the,entire,result,set,in,the,database,or,in,the,jdbc,driver,p,default,is,0,indicating,to,use,the,driver,s,default,see,org,springframework,jdbc,core,jdbc,template,set,max,rows;public,void,set,max,rows,int,max,rows,this,jdbc,template,set,max,rows,max,rows
RdbmsOperation -> public void setMaxRows(int maxRows);1496837955;Set the maximum number of rows for this RDBMS operation. This is important_for processing subsets of large result sets, avoiding to read and hold_the entire result set in the database or in the JDBC driver._<p>Default is 0, indicating to use the driver's default._@see org.springframework.jdbc.core.JdbcTemplate#setMaxRows;public void setMaxRows(int maxRows) {_		this.jdbcTemplate.setMaxRows(maxRows)__	};set,the,maximum,number,of,rows,for,this,rdbms,operation,this,is,important,for,processing,subsets,of,large,result,sets,avoiding,to,read,and,hold,the,entire,result,set,in,the,database,or,in,the,jdbc,driver,p,default,is,0,indicating,to,use,the,driver,s,default,see,org,springframework,jdbc,core,jdbc,template,set,max,rows;public,void,set,max,rows,int,max,rows,this,jdbc,template,set,max,rows,max,rows
RdbmsOperation -> public void setMaxRows(int maxRows);1498780456;Set the maximum number of rows for this RDBMS operation. This is important_for processing subsets of large result sets, avoiding to read and hold_the entire result set in the database or in the JDBC driver._<p>Default is 0, indicating to use the driver's default._@see org.springframework.jdbc.core.JdbcTemplate#setMaxRows;public void setMaxRows(int maxRows) {_		this.jdbcTemplate.setMaxRows(maxRows)__	};set,the,maximum,number,of,rows,for,this,rdbms,operation,this,is,important,for,processing,subsets,of,large,result,sets,avoiding,to,read,and,hold,the,entire,result,set,in,the,database,or,in,the,jdbc,driver,p,default,is,0,indicating,to,use,the,driver,s,default,see,org,springframework,jdbc,core,jdbc,template,set,max,rows;public,void,set,max,rows,int,max,rows,this,jdbc,template,set,max,rows,max,rows
RdbmsOperation -> public void setMaxRows(int maxRows);1506519613;Set the maximum number of rows for this RDBMS operation. This is important_for processing subsets of large result sets, avoiding to read and hold_the entire result set in the database or in the JDBC driver._<p>Default is 0, indicating to use the driver's default._@see org.springframework.jdbc.core.JdbcTemplate#setMaxRows;public void setMaxRows(int maxRows) {_		this.jdbcTemplate.setMaxRows(maxRows)__	};set,the,maximum,number,of,rows,for,this,rdbms,operation,this,is,important,for,processing,subsets,of,large,result,sets,avoiding,to,read,and,hold,the,entire,result,set,in,the,database,or,in,the,jdbc,driver,p,default,is,0,indicating,to,use,the,driver,s,default,see,org,springframework,jdbc,core,jdbc,template,set,max,rows;public,void,set,max,rows,int,max,rows,this,jdbc,template,set,max,rows,max,rows
RdbmsOperation -> public void setMaxRows(int maxRows);1525966356;Set the maximum number of rows for this RDBMS operation. This is important_for processing subsets of large result sets, avoiding to read and hold_the entire result set in the database or in the JDBC driver._<p>Default is 0, indicating to use the driver's default._@see org.springframework.jdbc.core.JdbcTemplate#setMaxRows;public void setMaxRows(int maxRows) {_		this.jdbcTemplate.setMaxRows(maxRows)__	};set,the,maximum,number,of,rows,for,this,rdbms,operation,this,is,important,for,processing,subsets,of,large,result,sets,avoiding,to,read,and,hold,the,entire,result,set,in,the,database,or,in,the,jdbc,driver,p,default,is,0,indicating,to,use,the,driver,s,default,see,org,springframework,jdbc,core,jdbc,template,set,max,rows;public,void,set,max,rows,int,max,rows,this,jdbc,template,set,max,rows,max,rows
RdbmsOperation -> public void setMaxRows(int maxRows);1530174524;Set the maximum number of rows for this RDBMS operation. This is important_for processing subsets of large result sets, avoiding to read and hold_the entire result set in the database or in the JDBC driver._<p>Default is 0, indicating to use the driver's default._@see org.springframework.jdbc.core.JdbcTemplate#setMaxRows;public void setMaxRows(int maxRows) {_		this.jdbcTemplate.setMaxRows(maxRows)__	};set,the,maximum,number,of,rows,for,this,rdbms,operation,this,is,important,for,processing,subsets,of,large,result,sets,avoiding,to,read,and,hold,the,entire,result,set,in,the,database,or,in,the,jdbc,driver,p,default,is,0,indicating,to,use,the,driver,s,default,see,org,springframework,jdbc,core,jdbc,template,set,max,rows;public,void,set,max,rows,int,max,rows,this,jdbc,template,set,max,rows,max,rows
RdbmsOperation -> public void setMaxRows(int maxRows);1542899558;Set the maximum number of rows for this RDBMS operation. This is important_for processing subsets of large result sets, avoiding to read and hold_the entire result set in the database or in the JDBC driver._<p>Default is 0, indicating to use the driver's default._@see org.springframework.jdbc.core.JdbcTemplate#setMaxRows;public void setMaxRows(int maxRows) {_		this.jdbcTemplate.setMaxRows(maxRows)__	};set,the,maximum,number,of,rows,for,this,rdbms,operation,this,is,important,for,processing,subsets,of,large,result,sets,avoiding,to,read,and,hold,the,entire,result,set,in,the,database,or,in,the,jdbc,driver,p,default,is,0,indicating,to,use,the,driver,s,default,see,org,springframework,jdbc,core,jdbc,template,set,max,rows;public,void,set,max,rows,int,max,rows,this,jdbc,template,set,max,rows,max,rows
RdbmsOperation -> public void setUpdatableResults(boolean updatableResults);1328020251;Set whether to use statements that are capable of returning_updatable ResultSets._@see java.sql.Connection#prepareStatement(String, int, int);public void setUpdatableResults(boolean updatableResults) {_		if (isCompiled()) {_			throw new InvalidDataAccessApiUsageException(_					"The updateableResults flag must be set before the operation is compiled")__		}_		this.updatableResults = updatableResults__	};set,whether,to,use,statements,that,are,capable,of,returning,updatable,result,sets,see,java,sql,connection,prepare,statement,string,int,int;public,void,set,updatable,results,boolean,updatable,results,if,is,compiled,throw,new,invalid,data,access,api,usage,exception,the,updateable,results,flag,must,be,set,before,the,operation,is,compiled,this,updatable,results,updatable,results
RdbmsOperation -> public void setUpdatableResults(boolean updatableResults);1356735495;Set whether to use statements that are capable of returning_updatable ResultSets._@see java.sql.Connection#prepareStatement(String, int, int);public void setUpdatableResults(boolean updatableResults) {_		if (isCompiled()) {_			throw new InvalidDataAccessApiUsageException(_					"The updateableResults flag must be set before the operation is compiled")__		}_		this.updatableResults = updatableResults__	};set,whether,to,use,statements,that,are,capable,of,returning,updatable,result,sets,see,java,sql,connection,prepare,statement,string,int,int;public,void,set,updatable,results,boolean,updatable,results,if,is,compiled,throw,new,invalid,data,access,api,usage,exception,the,updateable,results,flag,must,be,set,before,the,operation,is,compiled,this,updatable,results,updatable,results
RdbmsOperation -> public void setUpdatableResults(boolean updatableResults);1357119239;Set whether to use statements that are capable of returning_updatable ResultSets._@see java.sql.Connection#prepareStatement(String, int, int);public void setUpdatableResults(boolean updatableResults) {_		if (isCompiled()) {_			throw new InvalidDataAccessApiUsageException(_					"The updateableResults flag must be set before the operation is compiled")__		}_		this.updatableResults = updatableResults__	};set,whether,to,use,statements,that,are,capable,of,returning,updatable,result,sets,see,java,sql,connection,prepare,statement,string,int,int;public,void,set,updatable,results,boolean,updatable,results,if,is,compiled,throw,new,invalid,data,access,api,usage,exception,the,updateable,results,flag,must,be,set,before,the,operation,is,compiled,this,updatable,results,updatable,results
RdbmsOperation -> public void setUpdatableResults(boolean updatableResults);1368482696;Set whether to use statements that are capable of returning_updatable ResultSets._@see java.sql.Connection#prepareStatement(String, int, int);public void setUpdatableResults(boolean updatableResults) {_		if (isCompiled()) {_			throw new InvalidDataAccessApiUsageException(_					"The updateableResults flag must be set before the operation is compiled")__		}_		this.updatableResults = updatableResults__	};set,whether,to,use,statements,that,are,capable,of,returning,updatable,result,sets,see,java,sql,connection,prepare,statement,string,int,int;public,void,set,updatable,results,boolean,updatable,results,if,is,compiled,throw,new,invalid,data,access,api,usage,exception,the,updateable,results,flag,must,be,set,before,the,operation,is,compiled,this,updatable,results,updatable,results
RdbmsOperation -> public void setUpdatableResults(boolean updatableResults);1385412762;Set whether to use statements that are capable of returning_updatable ResultSets._@see java.sql.Connection#prepareStatement(String, int, int);public void setUpdatableResults(boolean updatableResults) {_		if (isCompiled()) {_			throw new InvalidDataAccessApiUsageException(_					"The updateableResults flag must be set before the operation is compiled")__		}_		this.updatableResults = updatableResults__	};set,whether,to,use,statements,that,are,capable,of,returning,updatable,result,sets,see,java,sql,connection,prepare,statement,string,int,int;public,void,set,updatable,results,boolean,updatable,results,if,is,compiled,throw,new,invalid,data,access,api,usage,exception,the,updateable,results,flag,must,be,set,before,the,operation,is,compiled,this,updatable,results,updatable,results
RdbmsOperation -> public void setUpdatableResults(boolean updatableResults);1407511029;Set whether to use statements that are capable of returning_updatable ResultSets._@see java.sql.Connection#prepareStatement(String, int, int);public void setUpdatableResults(boolean updatableResults) {_		if (isCompiled()) {_			throw new InvalidDataAccessApiUsageException(_					"The updateableResults flag must be set before the operation is compiled")__		}_		this.updatableResults = updatableResults__	};set,whether,to,use,statements,that,are,capable,of,returning,updatable,result,sets,see,java,sql,connection,prepare,statement,string,int,int;public,void,set,updatable,results,boolean,updatable,results,if,is,compiled,throw,new,invalid,data,access,api,usage,exception,the,updateable,results,flag,must,be,set,before,the,operation,is,compiled,this,updatable,results,updatable,results
RdbmsOperation -> public void setUpdatableResults(boolean updatableResults);1446038912;Set whether to use statements that are capable of returning_updatable ResultSets._@see java.sql.Connection#prepareStatement(String, int, int);public void setUpdatableResults(boolean updatableResults) {_		if (isCompiled()) {_			throw new InvalidDataAccessApiUsageException(_					"The updateableResults flag must be set before the operation is compiled")__		}_		this.updatableResults = updatableResults__	};set,whether,to,use,statements,that,are,capable,of,returning,updatable,result,sets,see,java,sql,connection,prepare,statement,string,int,int;public,void,set,updatable,results,boolean,updatable,results,if,is,compiled,throw,new,invalid,data,access,api,usage,exception,the,updateable,results,flag,must,be,set,before,the,operation,is,compiled,this,updatable,results,updatable,results
RdbmsOperation -> public void setUpdatableResults(boolean updatableResults);1467730834;Set whether to use statements that are capable of returning_updatable ResultSets._@see java.sql.Connection#prepareStatement(String, int, int);public void setUpdatableResults(boolean updatableResults) {_		if (isCompiled()) {_			throw new InvalidDataAccessApiUsageException(_					"The updateableResults flag must be set before the operation is compiled")__		}_		this.updatableResults = updatableResults__	};set,whether,to,use,statements,that,are,capable,of,returning,updatable,result,sets,see,java,sql,connection,prepare,statement,string,int,int;public,void,set,updatable,results,boolean,updatable,results,if,is,compiled,throw,new,invalid,data,access,api,usage,exception,the,updateable,results,flag,must,be,set,before,the,operation,is,compiled,this,updatable,results,updatable,results
RdbmsOperation -> public void setUpdatableResults(boolean updatableResults);1495868221;Set whether to use statements that are capable of returning_updatable ResultSets._@see java.sql.Connection#prepareStatement(String, int, int);public void setUpdatableResults(boolean updatableResults) {_		if (isCompiled()) {_			throw new InvalidDataAccessApiUsageException(_					"The updateableResults flag must be set before the operation is compiled")__		}_		this.updatableResults = updatableResults__	};set,whether,to,use,statements,that,are,capable,of,returning,updatable,result,sets,see,java,sql,connection,prepare,statement,string,int,int;public,void,set,updatable,results,boolean,updatable,results,if,is,compiled,throw,new,invalid,data,access,api,usage,exception,the,updateable,results,flag,must,be,set,before,the,operation,is,compiled,this,updatable,results,updatable,results
RdbmsOperation -> public void setUpdatableResults(boolean updatableResults);1496837955;Set whether to use statements that are capable of returning_updatable ResultSets._@see java.sql.Connection#prepareStatement(String, int, int);public void setUpdatableResults(boolean updatableResults) {_		if (isCompiled()) {_			throw new InvalidDataAccessApiUsageException(_					"The updateableResults flag must be set before the operation is compiled")__		}_		this.updatableResults = updatableResults__	};set,whether,to,use,statements,that,are,capable,of,returning,updatable,result,sets,see,java,sql,connection,prepare,statement,string,int,int;public,void,set,updatable,results,boolean,updatable,results,if,is,compiled,throw,new,invalid,data,access,api,usage,exception,the,updateable,results,flag,must,be,set,before,the,operation,is,compiled,this,updatable,results,updatable,results
RdbmsOperation -> public void setUpdatableResults(boolean updatableResults);1498780456;Set whether to use statements that are capable of returning_updatable ResultSets._@see java.sql.Connection#prepareStatement(String, int, int);public void setUpdatableResults(boolean updatableResults) {_		if (isCompiled()) {_			throw new InvalidDataAccessApiUsageException(_					"The updateableResults flag must be set before the operation is compiled")__		}_		this.updatableResults = updatableResults__	};set,whether,to,use,statements,that,are,capable,of,returning,updatable,result,sets,see,java,sql,connection,prepare,statement,string,int,int;public,void,set,updatable,results,boolean,updatable,results,if,is,compiled,throw,new,invalid,data,access,api,usage,exception,the,updateable,results,flag,must,be,set,before,the,operation,is,compiled,this,updatable,results,updatable,results
RdbmsOperation -> public void setUpdatableResults(boolean updatableResults);1506519613;Set whether to use statements that are capable of returning_updatable ResultSets._@see java.sql.Connection#prepareStatement(String, int, int);public void setUpdatableResults(boolean updatableResults) {_		if (isCompiled()) {_			throw new InvalidDataAccessApiUsageException(_					"The updateableResults flag must be set before the operation is compiled")__		}_		this.updatableResults = updatableResults__	};set,whether,to,use,statements,that,are,capable,of,returning,updatable,result,sets,see,java,sql,connection,prepare,statement,string,int,int;public,void,set,updatable,results,boolean,updatable,results,if,is,compiled,throw,new,invalid,data,access,api,usage,exception,the,updateable,results,flag,must,be,set,before,the,operation,is,compiled,this,updatable,results,updatable,results
RdbmsOperation -> public void setUpdatableResults(boolean updatableResults);1525966356;Set whether to use statements that are capable of returning_updatable ResultSets._@see java.sql.Connection#prepareStatement(String, int, int);public void setUpdatableResults(boolean updatableResults) {_		if (isCompiled()) {_			throw new InvalidDataAccessApiUsageException(_					"The updateableResults flag must be set before the operation is compiled")__		}_		this.updatableResults = updatableResults__	};set,whether,to,use,statements,that,are,capable,of,returning,updatable,result,sets,see,java,sql,connection,prepare,statement,string,int,int;public,void,set,updatable,results,boolean,updatable,results,if,is,compiled,throw,new,invalid,data,access,api,usage,exception,the,updateable,results,flag,must,be,set,before,the,operation,is,compiled,this,updatable,results,updatable,results
RdbmsOperation -> public void setUpdatableResults(boolean updatableResults);1530174524;Set whether to use statements that are capable of returning_updatable ResultSets._@see java.sql.Connection#prepareStatement(String, int, int);public void setUpdatableResults(boolean updatableResults) {_		if (isCompiled()) {_			throw new InvalidDataAccessApiUsageException(_					"The updateableResults flag must be set before the operation is compiled")__		}_		this.updatableResults = updatableResults__	};set,whether,to,use,statements,that,are,capable,of,returning,updatable,result,sets,see,java,sql,connection,prepare,statement,string,int,int;public,void,set,updatable,results,boolean,updatable,results,if,is,compiled,throw,new,invalid,data,access,api,usage,exception,the,updateable,results,flag,must,be,set,before,the,operation,is,compiled,this,updatable,results,updatable,results
RdbmsOperation -> public void setUpdatableResults(boolean updatableResults);1542899558;Set whether to use statements that are capable of returning_updatable ResultSets._@see java.sql.Connection#prepareStatement(String, int, int);public void setUpdatableResults(boolean updatableResults) {_		if (isCompiled()) {_			throw new InvalidDataAccessApiUsageException(_					"The updateableResults flag must be set before the operation is compiled")__		}_		this.updatableResults = updatableResults__	};set,whether,to,use,statements,that,are,capable,of,returning,updatable,result,sets,see,java,sql,connection,prepare,statement,string,int,int;public,void,set,updatable,results,boolean,updatable,results,if,is,compiled,throw,new,invalid,data,access,api,usage,exception,the,updateable,results,flag,must,be,set,before,the,operation,is,compiled,this,updatable,results,updatable,results
RdbmsOperation -> public void setFetchSize(int fetchSize);1328020251;Set the fetch size for this RDBMS operation. This is important for processing_large result sets: Setting this higher than the default value will increase_processing speed at the cost of memory consumption_ setting this lower can_avoid transferring row data that will never be read by the application._<p>Default is 0, indicating to use the driver's default._@see org.springframework.jdbc.core.JdbcTemplate#setFetchSize;public void setFetchSize(int fetchSize) {_		this.jdbcTemplate.setFetchSize(fetchSize)__	};set,the,fetch,size,for,this,rdbms,operation,this,is,important,for,processing,large,result,sets,setting,this,higher,than,the,default,value,will,increase,processing,speed,at,the,cost,of,memory,consumption,setting,this,lower,can,avoid,transferring,row,data,that,will,never,be,read,by,the,application,p,default,is,0,indicating,to,use,the,driver,s,default,see,org,springframework,jdbc,core,jdbc,template,set,fetch,size;public,void,set,fetch,size,int,fetch,size,this,jdbc,template,set,fetch,size,fetch,size
RdbmsOperation -> public void setFetchSize(int fetchSize);1356735495;Set the fetch size for this RDBMS operation. This is important for processing_large result sets: Setting this higher than the default value will increase_processing speed at the cost of memory consumption_ setting this lower can_avoid transferring row data that will never be read by the application._<p>Default is 0, indicating to use the driver's default._@see org.springframework.jdbc.core.JdbcTemplate#setFetchSize;public void setFetchSize(int fetchSize) {_		this.jdbcTemplate.setFetchSize(fetchSize)__	};set,the,fetch,size,for,this,rdbms,operation,this,is,important,for,processing,large,result,sets,setting,this,higher,than,the,default,value,will,increase,processing,speed,at,the,cost,of,memory,consumption,setting,this,lower,can,avoid,transferring,row,data,that,will,never,be,read,by,the,application,p,default,is,0,indicating,to,use,the,driver,s,default,see,org,springframework,jdbc,core,jdbc,template,set,fetch,size;public,void,set,fetch,size,int,fetch,size,this,jdbc,template,set,fetch,size,fetch,size
RdbmsOperation -> public void setFetchSize(int fetchSize);1357119239;Set the fetch size for this RDBMS operation. This is important for processing_large result sets: Setting this higher than the default value will increase_processing speed at the cost of memory consumption_ setting this lower can_avoid transferring row data that will never be read by the application._<p>Default is 0, indicating to use the driver's default._@see org.springframework.jdbc.core.JdbcTemplate#setFetchSize;public void setFetchSize(int fetchSize) {_		this.jdbcTemplate.setFetchSize(fetchSize)__	};set,the,fetch,size,for,this,rdbms,operation,this,is,important,for,processing,large,result,sets,setting,this,higher,than,the,default,value,will,increase,processing,speed,at,the,cost,of,memory,consumption,setting,this,lower,can,avoid,transferring,row,data,that,will,never,be,read,by,the,application,p,default,is,0,indicating,to,use,the,driver,s,default,see,org,springframework,jdbc,core,jdbc,template,set,fetch,size;public,void,set,fetch,size,int,fetch,size,this,jdbc,template,set,fetch,size,fetch,size
RdbmsOperation -> public void setFetchSize(int fetchSize);1368482696;Set the fetch size for this RDBMS operation. This is important for processing_large result sets: Setting this higher than the default value will increase_processing speed at the cost of memory consumption_ setting this lower can_avoid transferring row data that will never be read by the application._<p>Default is 0, indicating to use the driver's default._@see org.springframework.jdbc.core.JdbcTemplate#setFetchSize;public void setFetchSize(int fetchSize) {_		this.jdbcTemplate.setFetchSize(fetchSize)__	};set,the,fetch,size,for,this,rdbms,operation,this,is,important,for,processing,large,result,sets,setting,this,higher,than,the,default,value,will,increase,processing,speed,at,the,cost,of,memory,consumption,setting,this,lower,can,avoid,transferring,row,data,that,will,never,be,read,by,the,application,p,default,is,0,indicating,to,use,the,driver,s,default,see,org,springframework,jdbc,core,jdbc,template,set,fetch,size;public,void,set,fetch,size,int,fetch,size,this,jdbc,template,set,fetch,size,fetch,size
RdbmsOperation -> public void setFetchSize(int fetchSize);1385412762;Set the fetch size for this RDBMS operation. This is important for processing_large result sets: Setting this higher than the default value will increase_processing speed at the cost of memory consumption_ setting this lower can_avoid transferring row data that will never be read by the application._<p>Default is 0, indicating to use the driver's default._@see org.springframework.jdbc.core.JdbcTemplate#setFetchSize;public void setFetchSize(int fetchSize) {_		this.jdbcTemplate.setFetchSize(fetchSize)__	};set,the,fetch,size,for,this,rdbms,operation,this,is,important,for,processing,large,result,sets,setting,this,higher,than,the,default,value,will,increase,processing,speed,at,the,cost,of,memory,consumption,setting,this,lower,can,avoid,transferring,row,data,that,will,never,be,read,by,the,application,p,default,is,0,indicating,to,use,the,driver,s,default,see,org,springframework,jdbc,core,jdbc,template,set,fetch,size;public,void,set,fetch,size,int,fetch,size,this,jdbc,template,set,fetch,size,fetch,size
RdbmsOperation -> public void setFetchSize(int fetchSize);1407511029;Set the fetch size for this RDBMS operation. This is important for processing_large result sets: Setting this higher than the default value will increase_processing speed at the cost of memory consumption_ setting this lower can_avoid transferring row data that will never be read by the application._<p>Default is 0, indicating to use the driver's default._@see org.springframework.jdbc.core.JdbcTemplate#setFetchSize;public void setFetchSize(int fetchSize) {_		this.jdbcTemplate.setFetchSize(fetchSize)__	};set,the,fetch,size,for,this,rdbms,operation,this,is,important,for,processing,large,result,sets,setting,this,higher,than,the,default,value,will,increase,processing,speed,at,the,cost,of,memory,consumption,setting,this,lower,can,avoid,transferring,row,data,that,will,never,be,read,by,the,application,p,default,is,0,indicating,to,use,the,driver,s,default,see,org,springframework,jdbc,core,jdbc,template,set,fetch,size;public,void,set,fetch,size,int,fetch,size,this,jdbc,template,set,fetch,size,fetch,size
RdbmsOperation -> public void setFetchSize(int fetchSize);1446038912;Set the fetch size for this RDBMS operation. This is important for processing_large result sets: Setting this higher than the default value will increase_processing speed at the cost of memory consumption_ setting this lower can_avoid transferring row data that will never be read by the application._<p>Default is 0, indicating to use the driver's default._@see org.springframework.jdbc.core.JdbcTemplate#setFetchSize;public void setFetchSize(int fetchSize) {_		this.jdbcTemplate.setFetchSize(fetchSize)__	};set,the,fetch,size,for,this,rdbms,operation,this,is,important,for,processing,large,result,sets,setting,this,higher,than,the,default,value,will,increase,processing,speed,at,the,cost,of,memory,consumption,setting,this,lower,can,avoid,transferring,row,data,that,will,never,be,read,by,the,application,p,default,is,0,indicating,to,use,the,driver,s,default,see,org,springframework,jdbc,core,jdbc,template,set,fetch,size;public,void,set,fetch,size,int,fetch,size,this,jdbc,template,set,fetch,size,fetch,size
RdbmsOperation -> public void setFetchSize(int fetchSize);1467730834;Set the fetch size for this RDBMS operation. This is important for processing_large result sets: Setting this higher than the default value will increase_processing speed at the cost of memory consumption_ setting this lower can_avoid transferring row data that will never be read by the application._<p>Default is 0, indicating to use the driver's default._@see org.springframework.jdbc.core.JdbcTemplate#setFetchSize;public void setFetchSize(int fetchSize) {_		this.jdbcTemplate.setFetchSize(fetchSize)__	};set,the,fetch,size,for,this,rdbms,operation,this,is,important,for,processing,large,result,sets,setting,this,higher,than,the,default,value,will,increase,processing,speed,at,the,cost,of,memory,consumption,setting,this,lower,can,avoid,transferring,row,data,that,will,never,be,read,by,the,application,p,default,is,0,indicating,to,use,the,driver,s,default,see,org,springframework,jdbc,core,jdbc,template,set,fetch,size;public,void,set,fetch,size,int,fetch,size,this,jdbc,template,set,fetch,size,fetch,size
RdbmsOperation -> public void setFetchSize(int fetchSize);1495868221;Set the fetch size for this RDBMS operation. This is important for processing_large result sets: Setting this higher than the default value will increase_processing speed at the cost of memory consumption_ setting this lower can_avoid transferring row data that will never be read by the application._<p>Default is 0, indicating to use the driver's default._@see org.springframework.jdbc.core.JdbcTemplate#setFetchSize;public void setFetchSize(int fetchSize) {_		this.jdbcTemplate.setFetchSize(fetchSize)__	};set,the,fetch,size,for,this,rdbms,operation,this,is,important,for,processing,large,result,sets,setting,this,higher,than,the,default,value,will,increase,processing,speed,at,the,cost,of,memory,consumption,setting,this,lower,can,avoid,transferring,row,data,that,will,never,be,read,by,the,application,p,default,is,0,indicating,to,use,the,driver,s,default,see,org,springframework,jdbc,core,jdbc,template,set,fetch,size;public,void,set,fetch,size,int,fetch,size,this,jdbc,template,set,fetch,size,fetch,size
RdbmsOperation -> public void setFetchSize(int fetchSize);1496837955;Set the fetch size for this RDBMS operation. This is important for processing_large result sets: Setting this higher than the default value will increase_processing speed at the cost of memory consumption_ setting this lower can_avoid transferring row data that will never be read by the application._<p>Default is 0, indicating to use the driver's default._@see org.springframework.jdbc.core.JdbcTemplate#setFetchSize;public void setFetchSize(int fetchSize) {_		this.jdbcTemplate.setFetchSize(fetchSize)__	};set,the,fetch,size,for,this,rdbms,operation,this,is,important,for,processing,large,result,sets,setting,this,higher,than,the,default,value,will,increase,processing,speed,at,the,cost,of,memory,consumption,setting,this,lower,can,avoid,transferring,row,data,that,will,never,be,read,by,the,application,p,default,is,0,indicating,to,use,the,driver,s,default,see,org,springframework,jdbc,core,jdbc,template,set,fetch,size;public,void,set,fetch,size,int,fetch,size,this,jdbc,template,set,fetch,size,fetch,size
RdbmsOperation -> public void setFetchSize(int fetchSize);1498780456;Set the fetch size for this RDBMS operation. This is important for processing_large result sets: Setting this higher than the default value will increase_processing speed at the cost of memory consumption_ setting this lower can_avoid transferring row data that will never be read by the application._<p>Default is 0, indicating to use the driver's default._@see org.springframework.jdbc.core.JdbcTemplate#setFetchSize;public void setFetchSize(int fetchSize) {_		this.jdbcTemplate.setFetchSize(fetchSize)__	};set,the,fetch,size,for,this,rdbms,operation,this,is,important,for,processing,large,result,sets,setting,this,higher,than,the,default,value,will,increase,processing,speed,at,the,cost,of,memory,consumption,setting,this,lower,can,avoid,transferring,row,data,that,will,never,be,read,by,the,application,p,default,is,0,indicating,to,use,the,driver,s,default,see,org,springframework,jdbc,core,jdbc,template,set,fetch,size;public,void,set,fetch,size,int,fetch,size,this,jdbc,template,set,fetch,size,fetch,size
RdbmsOperation -> public void setFetchSize(int fetchSize);1506519613;Set the fetch size for this RDBMS operation. This is important for processing_large result sets: Setting this higher than the default value will increase_processing speed at the cost of memory consumption_ setting this lower can_avoid transferring row data that will never be read by the application._<p>Default is 0, indicating to use the driver's default._@see org.springframework.jdbc.core.JdbcTemplate#setFetchSize;public void setFetchSize(int fetchSize) {_		this.jdbcTemplate.setFetchSize(fetchSize)__	};set,the,fetch,size,for,this,rdbms,operation,this,is,important,for,processing,large,result,sets,setting,this,higher,than,the,default,value,will,increase,processing,speed,at,the,cost,of,memory,consumption,setting,this,lower,can,avoid,transferring,row,data,that,will,never,be,read,by,the,application,p,default,is,0,indicating,to,use,the,driver,s,default,see,org,springframework,jdbc,core,jdbc,template,set,fetch,size;public,void,set,fetch,size,int,fetch,size,this,jdbc,template,set,fetch,size,fetch,size
RdbmsOperation -> public void setFetchSize(int fetchSize);1525966356;Set the fetch size for this RDBMS operation. This is important for processing_large result sets: Setting this higher than the default value will increase_processing speed at the cost of memory consumption_ setting this lower can_avoid transferring row data that will never be read by the application._<p>Default is 0, indicating to use the driver's default._@see org.springframework.jdbc.core.JdbcTemplate#setFetchSize;public void setFetchSize(int fetchSize) {_		this.jdbcTemplate.setFetchSize(fetchSize)__	};set,the,fetch,size,for,this,rdbms,operation,this,is,important,for,processing,large,result,sets,setting,this,higher,than,the,default,value,will,increase,processing,speed,at,the,cost,of,memory,consumption,setting,this,lower,can,avoid,transferring,row,data,that,will,never,be,read,by,the,application,p,default,is,0,indicating,to,use,the,driver,s,default,see,org,springframework,jdbc,core,jdbc,template,set,fetch,size;public,void,set,fetch,size,int,fetch,size,this,jdbc,template,set,fetch,size,fetch,size
RdbmsOperation -> public void setFetchSize(int fetchSize);1530174524;Set the fetch size for this RDBMS operation. This is important for processing_large result sets: Setting this higher than the default value will increase_processing speed at the cost of memory consumption_ setting this lower can_avoid transferring row data that will never be read by the application._<p>Default is 0, indicating to use the driver's default._@see org.springframework.jdbc.core.JdbcTemplate#setFetchSize;public void setFetchSize(int fetchSize) {_		this.jdbcTemplate.setFetchSize(fetchSize)__	};set,the,fetch,size,for,this,rdbms,operation,this,is,important,for,processing,large,result,sets,setting,this,higher,than,the,default,value,will,increase,processing,speed,at,the,cost,of,memory,consumption,setting,this,lower,can,avoid,transferring,row,data,that,will,never,be,read,by,the,application,p,default,is,0,indicating,to,use,the,driver,s,default,see,org,springframework,jdbc,core,jdbc,template,set,fetch,size;public,void,set,fetch,size,int,fetch,size,this,jdbc,template,set,fetch,size,fetch,size
RdbmsOperation -> public void setFetchSize(int fetchSize);1542899558;Set the fetch size for this RDBMS operation. This is important for processing_large result sets: Setting this higher than the default value will increase_processing speed at the cost of memory consumption_ setting this lower can_avoid transferring row data that will never be read by the application._<p>Default is 0, indicating to use the driver's default._@see org.springframework.jdbc.core.JdbcTemplate#setFetchSize;public void setFetchSize(int fetchSize) {_		this.jdbcTemplate.setFetchSize(fetchSize)__	};set,the,fetch,size,for,this,rdbms,operation,this,is,important,for,processing,large,result,sets,setting,this,higher,than,the,default,value,will,increase,processing,speed,at,the,cost,of,memory,consumption,setting,this,lower,can,avoid,transferring,row,data,that,will,never,be,read,by,the,application,p,default,is,0,indicating,to,use,the,driver,s,default,see,org,springframework,jdbc,core,jdbc,template,set,fetch,size;public,void,set,fetch,size,int,fetch,size,this,jdbc,template,set,fetch,size,fetch,size
RdbmsOperation -> public void setReturnGeneratedKeys(boolean returnGeneratedKeys);1328020251;Set whether prepared statements should be capable of returning_auto-generated keys._@see java.sql.Connection#prepareStatement(String, int);public void setReturnGeneratedKeys(boolean returnGeneratedKeys) {_		if (isCompiled()) {_			throw new InvalidDataAccessApiUsageException(_					"The returnGeneratedKeys flag must be set before the operation is compiled")__		}_		this.returnGeneratedKeys = returnGeneratedKeys__	};set,whether,prepared,statements,should,be,capable,of,returning,auto,generated,keys,see,java,sql,connection,prepare,statement,string,int;public,void,set,return,generated,keys,boolean,return,generated,keys,if,is,compiled,throw,new,invalid,data,access,api,usage,exception,the,return,generated,keys,flag,must,be,set,before,the,operation,is,compiled,this,return,generated,keys,return,generated,keys
RdbmsOperation -> public void setReturnGeneratedKeys(boolean returnGeneratedKeys);1356735495;Set whether prepared statements should be capable of returning_auto-generated keys._@see java.sql.Connection#prepareStatement(String, int);public void setReturnGeneratedKeys(boolean returnGeneratedKeys) {_		if (isCompiled()) {_			throw new InvalidDataAccessApiUsageException(_					"The returnGeneratedKeys flag must be set before the operation is compiled")__		}_		this.returnGeneratedKeys = returnGeneratedKeys__	};set,whether,prepared,statements,should,be,capable,of,returning,auto,generated,keys,see,java,sql,connection,prepare,statement,string,int;public,void,set,return,generated,keys,boolean,return,generated,keys,if,is,compiled,throw,new,invalid,data,access,api,usage,exception,the,return,generated,keys,flag,must,be,set,before,the,operation,is,compiled,this,return,generated,keys,return,generated,keys
RdbmsOperation -> public void setReturnGeneratedKeys(boolean returnGeneratedKeys);1357119239;Set whether prepared statements should be capable of returning_auto-generated keys._@see java.sql.Connection#prepareStatement(String, int);public void setReturnGeneratedKeys(boolean returnGeneratedKeys) {_		if (isCompiled()) {_			throw new InvalidDataAccessApiUsageException(_					"The returnGeneratedKeys flag must be set before the operation is compiled")__		}_		this.returnGeneratedKeys = returnGeneratedKeys__	};set,whether,prepared,statements,should,be,capable,of,returning,auto,generated,keys,see,java,sql,connection,prepare,statement,string,int;public,void,set,return,generated,keys,boolean,return,generated,keys,if,is,compiled,throw,new,invalid,data,access,api,usage,exception,the,return,generated,keys,flag,must,be,set,before,the,operation,is,compiled,this,return,generated,keys,return,generated,keys
RdbmsOperation -> public void setReturnGeneratedKeys(boolean returnGeneratedKeys);1368482696;Set whether prepared statements should be capable of returning_auto-generated keys._@see java.sql.Connection#prepareStatement(String, int);public void setReturnGeneratedKeys(boolean returnGeneratedKeys) {_		if (isCompiled()) {_			throw new InvalidDataAccessApiUsageException(_					"The returnGeneratedKeys flag must be set before the operation is compiled")__		}_		this.returnGeneratedKeys = returnGeneratedKeys__	};set,whether,prepared,statements,should,be,capable,of,returning,auto,generated,keys,see,java,sql,connection,prepare,statement,string,int;public,void,set,return,generated,keys,boolean,return,generated,keys,if,is,compiled,throw,new,invalid,data,access,api,usage,exception,the,return,generated,keys,flag,must,be,set,before,the,operation,is,compiled,this,return,generated,keys,return,generated,keys
RdbmsOperation -> public void setReturnGeneratedKeys(boolean returnGeneratedKeys);1385412762;Set whether prepared statements should be capable of returning_auto-generated keys._@see java.sql.Connection#prepareStatement(String, int);public void setReturnGeneratedKeys(boolean returnGeneratedKeys) {_		if (isCompiled()) {_			throw new InvalidDataAccessApiUsageException(_					"The returnGeneratedKeys flag must be set before the operation is compiled")__		}_		this.returnGeneratedKeys = returnGeneratedKeys__	};set,whether,prepared,statements,should,be,capable,of,returning,auto,generated,keys,see,java,sql,connection,prepare,statement,string,int;public,void,set,return,generated,keys,boolean,return,generated,keys,if,is,compiled,throw,new,invalid,data,access,api,usage,exception,the,return,generated,keys,flag,must,be,set,before,the,operation,is,compiled,this,return,generated,keys,return,generated,keys
RdbmsOperation -> public void setReturnGeneratedKeys(boolean returnGeneratedKeys);1407511029;Set whether prepared statements should be capable of returning_auto-generated keys._@see java.sql.Connection#prepareStatement(String, int);public void setReturnGeneratedKeys(boolean returnGeneratedKeys) {_		if (isCompiled()) {_			throw new InvalidDataAccessApiUsageException(_					"The returnGeneratedKeys flag must be set before the operation is compiled")__		}_		this.returnGeneratedKeys = returnGeneratedKeys__	};set,whether,prepared,statements,should,be,capable,of,returning,auto,generated,keys,see,java,sql,connection,prepare,statement,string,int;public,void,set,return,generated,keys,boolean,return,generated,keys,if,is,compiled,throw,new,invalid,data,access,api,usage,exception,the,return,generated,keys,flag,must,be,set,before,the,operation,is,compiled,this,return,generated,keys,return,generated,keys
RdbmsOperation -> public void setReturnGeneratedKeys(boolean returnGeneratedKeys);1446038912;Set whether prepared statements should be capable of returning_auto-generated keys._@see java.sql.Connection#prepareStatement(String, int);public void setReturnGeneratedKeys(boolean returnGeneratedKeys) {_		if (isCompiled()) {_			throw new InvalidDataAccessApiUsageException(_					"The returnGeneratedKeys flag must be set before the operation is compiled")__		}_		this.returnGeneratedKeys = returnGeneratedKeys__	};set,whether,prepared,statements,should,be,capable,of,returning,auto,generated,keys,see,java,sql,connection,prepare,statement,string,int;public,void,set,return,generated,keys,boolean,return,generated,keys,if,is,compiled,throw,new,invalid,data,access,api,usage,exception,the,return,generated,keys,flag,must,be,set,before,the,operation,is,compiled,this,return,generated,keys,return,generated,keys
RdbmsOperation -> public void setReturnGeneratedKeys(boolean returnGeneratedKeys);1467730834;Set whether prepared statements should be capable of returning_auto-generated keys._@see java.sql.Connection#prepareStatement(String, int);public void setReturnGeneratedKeys(boolean returnGeneratedKeys) {_		if (isCompiled()) {_			throw new InvalidDataAccessApiUsageException(_					"The returnGeneratedKeys flag must be set before the operation is compiled")__		}_		this.returnGeneratedKeys = returnGeneratedKeys__	};set,whether,prepared,statements,should,be,capable,of,returning,auto,generated,keys,see,java,sql,connection,prepare,statement,string,int;public,void,set,return,generated,keys,boolean,return,generated,keys,if,is,compiled,throw,new,invalid,data,access,api,usage,exception,the,return,generated,keys,flag,must,be,set,before,the,operation,is,compiled,this,return,generated,keys,return,generated,keys
RdbmsOperation -> public void setReturnGeneratedKeys(boolean returnGeneratedKeys);1495868221;Set whether prepared statements should be capable of returning_auto-generated keys._@see java.sql.Connection#prepareStatement(String, int);public void setReturnGeneratedKeys(boolean returnGeneratedKeys) {_		if (isCompiled()) {_			throw new InvalidDataAccessApiUsageException(_					"The returnGeneratedKeys flag must be set before the operation is compiled")__		}_		this.returnGeneratedKeys = returnGeneratedKeys__	};set,whether,prepared,statements,should,be,capable,of,returning,auto,generated,keys,see,java,sql,connection,prepare,statement,string,int;public,void,set,return,generated,keys,boolean,return,generated,keys,if,is,compiled,throw,new,invalid,data,access,api,usage,exception,the,return,generated,keys,flag,must,be,set,before,the,operation,is,compiled,this,return,generated,keys,return,generated,keys
RdbmsOperation -> public void setReturnGeneratedKeys(boolean returnGeneratedKeys);1496837955;Set whether prepared statements should be capable of returning_auto-generated keys._@see java.sql.Connection#prepareStatement(String, int);public void setReturnGeneratedKeys(boolean returnGeneratedKeys) {_		if (isCompiled()) {_			throw new InvalidDataAccessApiUsageException(_					"The returnGeneratedKeys flag must be set before the operation is compiled")__		}_		this.returnGeneratedKeys = returnGeneratedKeys__	};set,whether,prepared,statements,should,be,capable,of,returning,auto,generated,keys,see,java,sql,connection,prepare,statement,string,int;public,void,set,return,generated,keys,boolean,return,generated,keys,if,is,compiled,throw,new,invalid,data,access,api,usage,exception,the,return,generated,keys,flag,must,be,set,before,the,operation,is,compiled,this,return,generated,keys,return,generated,keys
RdbmsOperation -> public void setReturnGeneratedKeys(boolean returnGeneratedKeys);1498780456;Set whether prepared statements should be capable of returning_auto-generated keys._@see java.sql.Connection#prepareStatement(String, int);public void setReturnGeneratedKeys(boolean returnGeneratedKeys) {_		if (isCompiled()) {_			throw new InvalidDataAccessApiUsageException(_					"The returnGeneratedKeys flag must be set before the operation is compiled")__		}_		this.returnGeneratedKeys = returnGeneratedKeys__	};set,whether,prepared,statements,should,be,capable,of,returning,auto,generated,keys,see,java,sql,connection,prepare,statement,string,int;public,void,set,return,generated,keys,boolean,return,generated,keys,if,is,compiled,throw,new,invalid,data,access,api,usage,exception,the,return,generated,keys,flag,must,be,set,before,the,operation,is,compiled,this,return,generated,keys,return,generated,keys
RdbmsOperation -> public void setReturnGeneratedKeys(boolean returnGeneratedKeys);1506519613;Set whether prepared statements should be capable of returning_auto-generated keys._@see java.sql.Connection#prepareStatement(String, int);public void setReturnGeneratedKeys(boolean returnGeneratedKeys) {_		if (isCompiled()) {_			throw new InvalidDataAccessApiUsageException(_					"The returnGeneratedKeys flag must be set before the operation is compiled")__		}_		this.returnGeneratedKeys = returnGeneratedKeys__	};set,whether,prepared,statements,should,be,capable,of,returning,auto,generated,keys,see,java,sql,connection,prepare,statement,string,int;public,void,set,return,generated,keys,boolean,return,generated,keys,if,is,compiled,throw,new,invalid,data,access,api,usage,exception,the,return,generated,keys,flag,must,be,set,before,the,operation,is,compiled,this,return,generated,keys,return,generated,keys
RdbmsOperation -> public void setReturnGeneratedKeys(boolean returnGeneratedKeys);1525966356;Set whether prepared statements should be capable of returning_auto-generated keys._@see java.sql.Connection#prepareStatement(String, int);public void setReturnGeneratedKeys(boolean returnGeneratedKeys) {_		if (isCompiled()) {_			throw new InvalidDataAccessApiUsageException(_					"The returnGeneratedKeys flag must be set before the operation is compiled")__		}_		this.returnGeneratedKeys = returnGeneratedKeys__	};set,whether,prepared,statements,should,be,capable,of,returning,auto,generated,keys,see,java,sql,connection,prepare,statement,string,int;public,void,set,return,generated,keys,boolean,return,generated,keys,if,is,compiled,throw,new,invalid,data,access,api,usage,exception,the,return,generated,keys,flag,must,be,set,before,the,operation,is,compiled,this,return,generated,keys,return,generated,keys
RdbmsOperation -> public void setReturnGeneratedKeys(boolean returnGeneratedKeys);1530174524;Set whether prepared statements should be capable of returning_auto-generated keys._@see java.sql.Connection#prepareStatement(String, int);public void setReturnGeneratedKeys(boolean returnGeneratedKeys) {_		if (isCompiled()) {_			throw new InvalidDataAccessApiUsageException(_					"The returnGeneratedKeys flag must be set before the operation is compiled")__		}_		this.returnGeneratedKeys = returnGeneratedKeys__	};set,whether,prepared,statements,should,be,capable,of,returning,auto,generated,keys,see,java,sql,connection,prepare,statement,string,int;public,void,set,return,generated,keys,boolean,return,generated,keys,if,is,compiled,throw,new,invalid,data,access,api,usage,exception,the,return,generated,keys,flag,must,be,set,before,the,operation,is,compiled,this,return,generated,keys,return,generated,keys
RdbmsOperation -> public void setReturnGeneratedKeys(boolean returnGeneratedKeys);1542899558;Set whether prepared statements should be capable of returning_auto-generated keys._@see java.sql.Connection#prepareStatement(String, int);public void setReturnGeneratedKeys(boolean returnGeneratedKeys) {_		if (isCompiled()) {_			throw new InvalidDataAccessApiUsageException(_					"The returnGeneratedKeys flag must be set before the operation is compiled")__		}_		this.returnGeneratedKeys = returnGeneratedKeys__	};set,whether,prepared,statements,should,be,capable,of,returning,auto,generated,keys,see,java,sql,connection,prepare,statement,string,int;public,void,set,return,generated,keys,boolean,return,generated,keys,if,is,compiled,throw,new,invalid,data,access,api,usage,exception,the,return,generated,keys,flag,must,be,set,before,the,operation,is,compiled,this,return,generated,keys,return,generated,keys
RdbmsOperation -> public void setSql(String sql);1328020251;Set the SQL executed by this operation.;public void setSql(String sql) {_		this.sql = sql__	};set,the,sql,executed,by,this,operation;public,void,set,sql,string,sql,this,sql,sql
RdbmsOperation -> public void setSql(String sql);1356735495;Set the SQL executed by this operation.;public void setSql(String sql) {_		this.sql = sql__	};set,the,sql,executed,by,this,operation;public,void,set,sql,string,sql,this,sql,sql
RdbmsOperation -> public void setSql(String sql);1357119239;Set the SQL executed by this operation.;public void setSql(String sql) {_		this.sql = sql__	};set,the,sql,executed,by,this,operation;public,void,set,sql,string,sql,this,sql,sql
RdbmsOperation -> public void setSql(String sql);1368482696;Set the SQL executed by this operation.;public void setSql(String sql) {_		this.sql = sql__	};set,the,sql,executed,by,this,operation;public,void,set,sql,string,sql,this,sql,sql
RdbmsOperation -> public void setSql(String sql);1385412762;Set the SQL executed by this operation.;public void setSql(String sql) {_		this.sql = sql__	};set,the,sql,executed,by,this,operation;public,void,set,sql,string,sql,this,sql,sql
RdbmsOperation -> public void setSql(String sql);1407511029;Set the SQL executed by this operation.;public void setSql(String sql) {_		this.sql = sql__	};set,the,sql,executed,by,this,operation;public,void,set,sql,string,sql,this,sql,sql
RdbmsOperation -> public void setSql(String sql);1446038912;Set the SQL executed by this operation.;public void setSql(String sql) {_		this.sql = sql__	};set,the,sql,executed,by,this,operation;public,void,set,sql,string,sql,this,sql,sql
RdbmsOperation -> public void setSql(String sql);1467730834;Set the SQL executed by this operation.;public void setSql(String sql) {_		this.sql = sql__	};set,the,sql,executed,by,this,operation;public,void,set,sql,string,sql,this,sql,sql
RdbmsOperation -> public void setSql(String sql);1495868221;Set the SQL executed by this operation.;public void setSql(String sql) {_		this.sql = sql__	};set,the,sql,executed,by,this,operation;public,void,set,sql,string,sql,this,sql,sql
RdbmsOperation -> public void setSql(String sql);1496837955;Set the SQL executed by this operation.;public void setSql(String sql) {_		this.sql = sql__	};set,the,sql,executed,by,this,operation;public,void,set,sql,string,sql,this,sql,sql
RdbmsOperation -> public void setSql(String sql);1498780456;Set the SQL executed by this operation.;public void setSql(String sql) {_		this.sql = sql__	};set,the,sql,executed,by,this,operation;public,void,set,sql,string,sql,this,sql,sql
RdbmsOperation -> public void setSql(String sql);1506519613;Set the SQL executed by this operation.;public void setSql(String sql) {_		this.sql = sql__	};set,the,sql,executed,by,this,operation;public,void,set,sql,string,sql,this,sql,sql
RdbmsOperation -> public void setSql(String sql);1525966356;Set the SQL executed by this operation.;public void setSql(String sql) {_		this.sql = sql__	};set,the,sql,executed,by,this,operation;public,void,set,sql,string,sql,this,sql,sql
RdbmsOperation -> public void setSql(String sql);1530174524;Set the SQL executed by this operation.;public void setSql(String sql) {_		this.sql = sql__	};set,the,sql,executed,by,this,operation;public,void,set,sql,string,sql,this,sql,sql
RdbmsOperation -> public void afterPropertiesSet();1328020251;Ensures compilation if used in a bean factory.;public void afterPropertiesSet() {_		compile()__	};ensures,compilation,if,used,in,a,bean,factory;public,void,after,properties,set,compile
RdbmsOperation -> public void afterPropertiesSet();1357119239;Ensures compilation if used in a bean factory.;public void afterPropertiesSet() {_		compile()__	};ensures,compilation,if,used,in,a,bean,factory;public,void,after,properties,set,compile
RdbmsOperation -> @Nullable 	public String getSql();1496837955;Subclasses can override this to supply dynamic SQL if they wish, but SQL is_normally set by calling the {@link #setSql} method or in a subclass constructor.;@Nullable_	public String getSql() {_		return this.sql__	};subclasses,can,override,this,to,supply,dynamic,sql,if,they,wish,but,sql,is,normally,set,by,calling,the,link,set,sql,method,or,in,a,subclass,constructor;nullable,public,string,get,sql,return,this,sql
RdbmsOperation -> @Nullable 	public String getSql();1498780456;Subclasses can override this to supply dynamic SQL if they wish, but SQL is_normally set by calling the {@link #setSql} method or in a subclass constructor.;@Nullable_	public String getSql() {_		return this.sql__	};subclasses,can,override,this,to,supply,dynamic,sql,if,they,wish,but,sql,is,normally,set,by,calling,the,link,set,sql,method,or,in,a,subclass,constructor;nullable,public,string,get,sql,return,this,sql
RdbmsOperation -> @Nullable 	public String getSql();1506519613;Subclasses can override this to supply dynamic SQL if they wish, but SQL is_normally set by calling the {@link #setSql} method or in a subclass constructor.;@Nullable_	public String getSql() {_		return this.sql__	};subclasses,can,override,this,to,supply,dynamic,sql,if,they,wish,but,sql,is,normally,set,by,calling,the,link,set,sql,method,or,in,a,subclass,constructor;nullable,public,string,get,sql,return,this,sql
RdbmsOperation -> @Nullable 	public String getSql();1525966356;Subclasses can override this to supply dynamic SQL if they wish, but SQL is_normally set by calling the {@link #setSql} method or in a subclass constructor.;@Nullable_	public String getSql() {_		return this.sql__	};subclasses,can,override,this,to,supply,dynamic,sql,if,they,wish,but,sql,is,normally,set,by,calling,the,link,set,sql,method,or,in,a,subclass,constructor;nullable,public,string,get,sql,return,this,sql
RdbmsOperation -> @Nullable 	public String getSql();1530174524;Subclasses can override this to supply dynamic SQL if they wish, but SQL is_normally set by calling the {@link #setSql} method or in a subclass constructor.;@Nullable_	public String getSql() {_		return this.sql__	};subclasses,can,override,this,to,supply,dynamic,sql,if,they,wish,but,sql,is,normally,set,by,calling,the,link,set,sql,method,or,in,a,subclass,constructor;nullable,public,string,get,sql,return,this,sql
RdbmsOperation -> @Nullable 	public String getSql();1542899558;Subclasses can override this to supply dynamic SQL if they wish, but SQL is_normally set by calling the {@link #setSql} method or in a subclass constructor.;@Nullable_	public String getSql() {_		return this.sql__	};subclasses,can,override,this,to,supply,dynamic,sql,if,they,wish,but,sql,is,normally,set,by,calling,the,link,set,sql,method,or,in,a,subclass,constructor;nullable,public,string,get,sql,return,this,sql
RdbmsOperation -> @Override 	public void afterPropertiesSet();1356735495;Ensures compilation if used in a bean factory.;@Override_	public void afterPropertiesSet() {_		compile()__	};ensures,compilation,if,used,in,a,bean,factory;override,public,void,after,properties,set,compile
RdbmsOperation -> @Override 	public void afterPropertiesSet();1368482696;Ensures compilation if used in a bean factory.;@Override_	public void afterPropertiesSet() {_		compile()__	};ensures,compilation,if,used,in,a,bean,factory;override,public,void,after,properties,set,compile
RdbmsOperation -> @Override 	public void afterPropertiesSet();1385412762;Ensures compilation if used in a bean factory.;@Override_	public void afterPropertiesSet() {_		compile()__	};ensures,compilation,if,used,in,a,bean,factory;override,public,void,after,properties,set,compile
RdbmsOperation -> @Override 	public void afterPropertiesSet();1407511029;Ensures compilation if used in a bean factory.;@Override_	public void afterPropertiesSet() {_		compile()__	};ensures,compilation,if,used,in,a,bean,factory;override,public,void,after,properties,set,compile
RdbmsOperation -> @Override 	public void afterPropertiesSet();1446038912;Ensures compilation if used in a bean factory.;@Override_	public void afterPropertiesSet() {_		compile()__	};ensures,compilation,if,used,in,a,bean,factory;override,public,void,after,properties,set,compile
RdbmsOperation -> @Override 	public void afterPropertiesSet();1467730834;Ensures compilation if used in a bean factory.;@Override_	public void afterPropertiesSet() {_		compile()__	};ensures,compilation,if,used,in,a,bean,factory;override,public,void,after,properties,set,compile
RdbmsOperation -> @Override 	public void afterPropertiesSet();1495868221;Ensures compilation if used in a bean factory.;@Override_	public void afterPropertiesSet() {_		compile()__	};ensures,compilation,if,used,in,a,bean,factory;override,public,void,after,properties,set,compile
RdbmsOperation -> @Override 	public void afterPropertiesSet();1496837955;Ensures compilation if used in a bean factory.;@Override_	public void afterPropertiesSet() {_		compile()__	};ensures,compilation,if,used,in,a,bean,factory;override,public,void,after,properties,set,compile
RdbmsOperation -> @Override 	public void afterPropertiesSet();1498780456;Ensures compilation if used in a bean factory.;@Override_	public void afterPropertiesSet() {_		compile()__	};ensures,compilation,if,used,in,a,bean,factory;override,public,void,after,properties,set,compile
RdbmsOperation -> @Override 	public void afterPropertiesSet();1506519613;Ensures compilation if used in a bean factory.;@Override_	public void afterPropertiesSet() {_		compile()__	};ensures,compilation,if,used,in,a,bean,factory;override,public,void,after,properties,set,compile
RdbmsOperation -> @Override 	public void afterPropertiesSet();1525966356;Ensures compilation if used in a bean factory.;@Override_	public void afterPropertiesSet() {_		compile()__	};ensures,compilation,if,used,in,a,bean,factory;override,public,void,after,properties,set,compile
RdbmsOperation -> @Override 	public void afterPropertiesSet();1530174524;Ensures compilation if used in a bean factory.;@Override_	public void afterPropertiesSet() {_		compile()__	};ensures,compilation,if,used,in,a,bean,factory;override,public,void,after,properties,set,compile
RdbmsOperation -> @Override 	public void afterPropertiesSet();1542899558;Ensures compilation if used in a bean factory.;@Override_	public void afterPropertiesSet() {_		compile()__	};ensures,compilation,if,used,in,a,bean,factory;override,public,void,after,properties,set,compile
RdbmsOperation -> public int getResultSetType();1328020251;Return whether statements will return a specific type of ResultSet.;public int getResultSetType() {_		return this.resultSetType__	};return,whether,statements,will,return,a,specific,type,of,result,set;public,int,get,result,set,type,return,this,result,set,type
RdbmsOperation -> public int getResultSetType();1356735495;Return whether statements will return a specific type of ResultSet.;public int getResultSetType() {_		return this.resultSetType__	};return,whether,statements,will,return,a,specific,type,of,result,set;public,int,get,result,set,type,return,this,result,set,type
RdbmsOperation -> public int getResultSetType();1357119239;Return whether statements will return a specific type of ResultSet.;public int getResultSetType() {_		return this.resultSetType__	};return,whether,statements,will,return,a,specific,type,of,result,set;public,int,get,result,set,type,return,this,result,set,type
RdbmsOperation -> public int getResultSetType();1368482696;Return whether statements will return a specific type of ResultSet.;public int getResultSetType() {_		return this.resultSetType__	};return,whether,statements,will,return,a,specific,type,of,result,set;public,int,get,result,set,type,return,this,result,set,type
RdbmsOperation -> public int getResultSetType();1385412762;Return whether statements will return a specific type of ResultSet.;public int getResultSetType() {_		return this.resultSetType__	};return,whether,statements,will,return,a,specific,type,of,result,set;public,int,get,result,set,type,return,this,result,set,type
RdbmsOperation -> public int getResultSetType();1407511029;Return whether statements will return a specific type of ResultSet.;public int getResultSetType() {_		return this.resultSetType__	};return,whether,statements,will,return,a,specific,type,of,result,set;public,int,get,result,set,type,return,this,result,set,type
RdbmsOperation -> public int getResultSetType();1446038912;Return whether statements will return a specific type of ResultSet.;public int getResultSetType() {_		return this.resultSetType__	};return,whether,statements,will,return,a,specific,type,of,result,set;public,int,get,result,set,type,return,this,result,set,type
RdbmsOperation -> public int getResultSetType();1467730834;Return whether statements will return a specific type of ResultSet.;public int getResultSetType() {_		return this.resultSetType__	};return,whether,statements,will,return,a,specific,type,of,result,set;public,int,get,result,set,type,return,this,result,set,type
RdbmsOperation -> public int getResultSetType();1495868221;Return whether statements will return a specific type of ResultSet.;public int getResultSetType() {_		return this.resultSetType__	};return,whether,statements,will,return,a,specific,type,of,result,set;public,int,get,result,set,type,return,this,result,set,type
RdbmsOperation -> public int getResultSetType();1496837955;Return whether statements will return a specific type of ResultSet.;public int getResultSetType() {_		return this.resultSetType__	};return,whether,statements,will,return,a,specific,type,of,result,set;public,int,get,result,set,type,return,this,result,set,type
RdbmsOperation -> public int getResultSetType();1498780456;Return whether statements will return a specific type of ResultSet.;public int getResultSetType() {_		return this.resultSetType__	};return,whether,statements,will,return,a,specific,type,of,result,set;public,int,get,result,set,type,return,this,result,set,type
RdbmsOperation -> public int getResultSetType();1506519613;Return whether statements will return a specific type of ResultSet.;public int getResultSetType() {_		return this.resultSetType__	};return,whether,statements,will,return,a,specific,type,of,result,set;public,int,get,result,set,type,return,this,result,set,type
RdbmsOperation -> public int getResultSetType();1525966356;Return whether statements will return a specific type of ResultSet.;public int getResultSetType() {_		return this.resultSetType__	};return,whether,statements,will,return,a,specific,type,of,result,set;public,int,get,result,set,type,return,this,result,set,type
RdbmsOperation -> public int getResultSetType();1530174524;Return whether statements will return a specific type of ResultSet.;public int getResultSetType() {_		return this.resultSetType__	};return,whether,statements,will,return,a,specific,type,of,result,set;public,int,get,result,set,type,return,this,result,set,type
RdbmsOperation -> public int getResultSetType();1542899558;Return whether statements will return a specific type of ResultSet.;public int getResultSetType() {_		return this.resultSetType__	};return,whether,statements,will,return,a,specific,type,of,result,set;public,int,get,result,set,type,return,this,result,set,type
RdbmsOperation -> public String[] getGeneratedKeysColumnNames();1328020251;Return the column names of the auto generated keys.;public String[] getGeneratedKeysColumnNames() {_		return this.generatedKeysColumnNames__	};return,the,column,names,of,the,auto,generated,keys;public,string,get,generated,keys,column,names,return,this,generated,keys,column,names
RdbmsOperation -> public String[] getGeneratedKeysColumnNames();1356735495;Return the column names of the auto generated keys.;public String[] getGeneratedKeysColumnNames() {_		return this.generatedKeysColumnNames__	};return,the,column,names,of,the,auto,generated,keys;public,string,get,generated,keys,column,names,return,this,generated,keys,column,names
RdbmsOperation -> public String[] getGeneratedKeysColumnNames();1357119239;Return the column names of the auto generated keys.;public String[] getGeneratedKeysColumnNames() {_		return this.generatedKeysColumnNames__	};return,the,column,names,of,the,auto,generated,keys;public,string,get,generated,keys,column,names,return,this,generated,keys,column,names
RdbmsOperation -> public String[] getGeneratedKeysColumnNames();1368482696;Return the column names of the auto generated keys.;public String[] getGeneratedKeysColumnNames() {_		return this.generatedKeysColumnNames__	};return,the,column,names,of,the,auto,generated,keys;public,string,get,generated,keys,column,names,return,this,generated,keys,column,names
RdbmsOperation -> public String[] getGeneratedKeysColumnNames();1385412762;Return the column names of the auto generated keys.;public String[] getGeneratedKeysColumnNames() {_		return this.generatedKeysColumnNames__	};return,the,column,names,of,the,auto,generated,keys;public,string,get,generated,keys,column,names,return,this,generated,keys,column,names
RdbmsOperation -> public String[] getGeneratedKeysColumnNames();1407511029;Return the column names of the auto generated keys.;public String[] getGeneratedKeysColumnNames() {_		return this.generatedKeysColumnNames__	};return,the,column,names,of,the,auto,generated,keys;public,string,get,generated,keys,column,names,return,this,generated,keys,column,names
RdbmsOperation -> public String[] getGeneratedKeysColumnNames();1446038912;Return the column names of the auto generated keys.;public String[] getGeneratedKeysColumnNames() {_		return this.generatedKeysColumnNames__	};return,the,column,names,of,the,auto,generated,keys;public,string,get,generated,keys,column,names,return,this,generated,keys,column,names
RdbmsOperation -> public String[] getGeneratedKeysColumnNames();1467730834;Return the column names of the auto generated keys.;public String[] getGeneratedKeysColumnNames() {_		return this.generatedKeysColumnNames__	};return,the,column,names,of,the,auto,generated,keys;public,string,get,generated,keys,column,names,return,this,generated,keys,column,names
RdbmsOperation -> public String[] getGeneratedKeysColumnNames();1495868221;Return the column names of the auto generated keys.;public String[] getGeneratedKeysColumnNames() {_		return this.generatedKeysColumnNames__	};return,the,column,names,of,the,auto,generated,keys;public,string,get,generated,keys,column,names,return,this,generated,keys,column,names
RdbmsOperation -> protected void validateParameters(@Nullable Object[] parameters) throws InvalidDataAccessApiUsageException;1495868221;Validate the parameters passed to an execute method based on declared parameters._Subclasses should invoke this method before every {@code executeQuery()}_or {@code update()} method._@param parameters parameters supplied (may be {@code null})_@throws InvalidDataAccessApiUsageException if the parameters are invalid;protected void validateParameters(@Nullable Object[] parameters) throws InvalidDataAccessApiUsageException {_		checkCompiled()__		int declaredInParameters = 0__		for (SqlParameter param : this.declaredParameters) {_			if (param.isInputValueProvided()) {_				if (!supportsLobParameters() &&_						(param.getSqlType() == Types.BLOB || param.getSqlType() == Types.CLOB)) {_					throw new InvalidDataAccessApiUsageException(_							"BLOB or CLOB parameters are not allowed for this kind of operation")__				}_				declaredInParameters++__			}_		}_		validateParameterCount((parameters != null ? parameters.length : 0), declaredInParameters)__	};validate,the,parameters,passed,to,an,execute,method,based,on,declared,parameters,subclasses,should,invoke,this,method,before,every,code,execute,query,or,code,update,method,param,parameters,parameters,supplied,may,be,code,null,throws,invalid,data,access,api,usage,exception,if,the,parameters,are,invalid;protected,void,validate,parameters,nullable,object,parameters,throws,invalid,data,access,api,usage,exception,check,compiled,int,declared,in,parameters,0,for,sql,parameter,param,this,declared,parameters,if,param,is,input,value,provided,if,supports,lob,parameters,param,get,sql,type,types,blob,param,get,sql,type,types,clob,throw,new,invalid,data,access,api,usage,exception,blob,or,clob,parameters,are,not,allowed,for,this,kind,of,operation,declared,in,parameters,validate,parameter,count,parameters,null,parameters,length,0,declared,in,parameters
RdbmsOperation -> protected void validateParameters(@Nullable Object[] parameters) throws InvalidDataAccessApiUsageException;1496837955;Validate the parameters passed to an execute method based on declared parameters._Subclasses should invoke this method before every {@code executeQuery()}_or {@code update()} method._@param parameters parameters supplied (may be {@code null})_@throws InvalidDataAccessApiUsageException if the parameters are invalid;protected void validateParameters(@Nullable Object[] parameters) throws InvalidDataAccessApiUsageException {_		checkCompiled()__		int declaredInParameters = 0__		for (SqlParameter param : this.declaredParameters) {_			if (param.isInputValueProvided()) {_				if (!supportsLobParameters() &&_						(param.getSqlType() == Types.BLOB || param.getSqlType() == Types.CLOB)) {_					throw new InvalidDataAccessApiUsageException(_							"BLOB or CLOB parameters are not allowed for this kind of operation")__				}_				declaredInParameters++__			}_		}_		validateParameterCount((parameters != null ? parameters.length : 0), declaredInParameters)__	};validate,the,parameters,passed,to,an,execute,method,based,on,declared,parameters,subclasses,should,invoke,this,method,before,every,code,execute,query,or,code,update,method,param,parameters,parameters,supplied,may,be,code,null,throws,invalid,data,access,api,usage,exception,if,the,parameters,are,invalid;protected,void,validate,parameters,nullable,object,parameters,throws,invalid,data,access,api,usage,exception,check,compiled,int,declared,in,parameters,0,for,sql,parameter,param,this,declared,parameters,if,param,is,input,value,provided,if,supports,lob,parameters,param,get,sql,type,types,blob,param,get,sql,type,types,clob,throw,new,invalid,data,access,api,usage,exception,blob,or,clob,parameters,are,not,allowed,for,this,kind,of,operation,declared,in,parameters,validate,parameter,count,parameters,null,parameters,length,0,declared,in,parameters
RdbmsOperation -> protected void validateParameters(@Nullable Object[] parameters) throws InvalidDataAccessApiUsageException;1498780456;Validate the parameters passed to an execute method based on declared parameters._Subclasses should invoke this method before every {@code executeQuery()}_or {@code update()} method._@param parameters parameters supplied (may be {@code null})_@throws InvalidDataAccessApiUsageException if the parameters are invalid;protected void validateParameters(@Nullable Object[] parameters) throws InvalidDataAccessApiUsageException {_		checkCompiled()__		int declaredInParameters = 0__		for (SqlParameter param : this.declaredParameters) {_			if (param.isInputValueProvided()) {_				if (!supportsLobParameters() &&_						(param.getSqlType() == Types.BLOB || param.getSqlType() == Types.CLOB)) {_					throw new InvalidDataAccessApiUsageException(_							"BLOB or CLOB parameters are not allowed for this kind of operation")__				}_				declaredInParameters++__			}_		}_		validateParameterCount((parameters != null ? parameters.length : 0), declaredInParameters)__	};validate,the,parameters,passed,to,an,execute,method,based,on,declared,parameters,subclasses,should,invoke,this,method,before,every,code,execute,query,or,code,update,method,param,parameters,parameters,supplied,may,be,code,null,throws,invalid,data,access,api,usage,exception,if,the,parameters,are,invalid;protected,void,validate,parameters,nullable,object,parameters,throws,invalid,data,access,api,usage,exception,check,compiled,int,declared,in,parameters,0,for,sql,parameter,param,this,declared,parameters,if,param,is,input,value,provided,if,supports,lob,parameters,param,get,sql,type,types,blob,param,get,sql,type,types,clob,throw,new,invalid,data,access,api,usage,exception,blob,or,clob,parameters,are,not,allowed,for,this,kind,of,operation,declared,in,parameters,validate,parameter,count,parameters,null,parameters,length,0,declared,in,parameters
RdbmsOperation -> protected void validateParameters(@Nullable Object[] parameters) throws InvalidDataAccessApiUsageException;1506519613;Validate the parameters passed to an execute method based on declared parameters._Subclasses should invoke this method before every {@code executeQuery()}_or {@code update()} method._@param parameters parameters supplied (may be {@code null})_@throws InvalidDataAccessApiUsageException if the parameters are invalid;protected void validateParameters(@Nullable Object[] parameters) throws InvalidDataAccessApiUsageException {_		checkCompiled()__		int declaredInParameters = 0__		for (SqlParameter param : this.declaredParameters) {_			if (param.isInputValueProvided()) {_				if (!supportsLobParameters() &&_						(param.getSqlType() == Types.BLOB || param.getSqlType() == Types.CLOB)) {_					throw new InvalidDataAccessApiUsageException(_							"BLOB or CLOB parameters are not allowed for this kind of operation")__				}_				declaredInParameters++__			}_		}_		validateParameterCount((parameters != null ? parameters.length : 0), declaredInParameters)__	};validate,the,parameters,passed,to,an,execute,method,based,on,declared,parameters,subclasses,should,invoke,this,method,before,every,code,execute,query,or,code,update,method,param,parameters,parameters,supplied,may,be,code,null,throws,invalid,data,access,api,usage,exception,if,the,parameters,are,invalid;protected,void,validate,parameters,nullable,object,parameters,throws,invalid,data,access,api,usage,exception,check,compiled,int,declared,in,parameters,0,for,sql,parameter,param,this,declared,parameters,if,param,is,input,value,provided,if,supports,lob,parameters,param,get,sql,type,types,blob,param,get,sql,type,types,clob,throw,new,invalid,data,access,api,usage,exception,blob,or,clob,parameters,are,not,allowed,for,this,kind,of,operation,declared,in,parameters,validate,parameter,count,parameters,null,parameters,length,0,declared,in,parameters
RdbmsOperation -> protected void validateParameters(@Nullable Object[] parameters) throws InvalidDataAccessApiUsageException;1525966356;Validate the parameters passed to an execute method based on declared parameters._Subclasses should invoke this method before every {@code executeQuery()}_or {@code update()} method._@param parameters parameters supplied (may be {@code null})_@throws InvalidDataAccessApiUsageException if the parameters are invalid;protected void validateParameters(@Nullable Object[] parameters) throws InvalidDataAccessApiUsageException {_		checkCompiled()__		int declaredInParameters = 0__		for (SqlParameter param : this.declaredParameters) {_			if (param.isInputValueProvided()) {_				if (!supportsLobParameters() &&_						(param.getSqlType() == Types.BLOB || param.getSqlType() == Types.CLOB)) {_					throw new InvalidDataAccessApiUsageException(_							"BLOB or CLOB parameters are not allowed for this kind of operation")__				}_				declaredInParameters++__			}_		}_		validateParameterCount((parameters != null ? parameters.length : 0), declaredInParameters)__	};validate,the,parameters,passed,to,an,execute,method,based,on,declared,parameters,subclasses,should,invoke,this,method,before,every,code,execute,query,or,code,update,method,param,parameters,parameters,supplied,may,be,code,null,throws,invalid,data,access,api,usage,exception,if,the,parameters,are,invalid;protected,void,validate,parameters,nullable,object,parameters,throws,invalid,data,access,api,usage,exception,check,compiled,int,declared,in,parameters,0,for,sql,parameter,param,this,declared,parameters,if,param,is,input,value,provided,if,supports,lob,parameters,param,get,sql,type,types,blob,param,get,sql,type,types,clob,throw,new,invalid,data,access,api,usage,exception,blob,or,clob,parameters,are,not,allowed,for,this,kind,of,operation,declared,in,parameters,validate,parameter,count,parameters,null,parameters,length,0,declared,in,parameters
RdbmsOperation -> protected void validateParameters(@Nullable Object[] parameters) throws InvalidDataAccessApiUsageException;1530174524;Validate the parameters passed to an execute method based on declared parameters._Subclasses should invoke this method before every {@code executeQuery()}_or {@code update()} method._@param parameters parameters supplied (may be {@code null})_@throws InvalidDataAccessApiUsageException if the parameters are invalid;protected void validateParameters(@Nullable Object[] parameters) throws InvalidDataAccessApiUsageException {_		checkCompiled()__		int declaredInParameters = 0__		for (SqlParameter param : this.declaredParameters) {_			if (param.isInputValueProvided()) {_				if (!supportsLobParameters() &&_						(param.getSqlType() == Types.BLOB || param.getSqlType() == Types.CLOB)) {_					throw new InvalidDataAccessApiUsageException(_							"BLOB or CLOB parameters are not allowed for this kind of operation")__				}_				declaredInParameters++__			}_		}_		validateParameterCount((parameters != null ? parameters.length : 0), declaredInParameters)__	};validate,the,parameters,passed,to,an,execute,method,based,on,declared,parameters,subclasses,should,invoke,this,method,before,every,code,execute,query,or,code,update,method,param,parameters,parameters,supplied,may,be,code,null,throws,invalid,data,access,api,usage,exception,if,the,parameters,are,invalid;protected,void,validate,parameters,nullable,object,parameters,throws,invalid,data,access,api,usage,exception,check,compiled,int,declared,in,parameters,0,for,sql,parameter,param,this,declared,parameters,if,param,is,input,value,provided,if,supports,lob,parameters,param,get,sql,type,types,blob,param,get,sql,type,types,clob,throw,new,invalid,data,access,api,usage,exception,blob,or,clob,parameters,are,not,allowed,for,this,kind,of,operation,declared,in,parameters,validate,parameter,count,parameters,null,parameters,length,0,declared,in,parameters
RdbmsOperation -> protected void validateParameters(@Nullable Object[] parameters) throws InvalidDataAccessApiUsageException;1542899558;Validate the parameters passed to an execute method based on declared parameters._Subclasses should invoke this method before every {@code executeQuery()}_or {@code update()} method._@param parameters parameters supplied (may be {@code null})_@throws InvalidDataAccessApiUsageException if the parameters are invalid;protected void validateParameters(@Nullable Object[] parameters) throws InvalidDataAccessApiUsageException {_		checkCompiled()__		int declaredInParameters = 0__		for (SqlParameter param : this.declaredParameters) {_			if (param.isInputValueProvided()) {_				if (!supportsLobParameters() &&_						(param.getSqlType() == Types.BLOB || param.getSqlType() == Types.CLOB)) {_					throw new InvalidDataAccessApiUsageException(_							"BLOB or CLOB parameters are not allowed for this kind of operation")__				}_				declaredInParameters++__			}_		}_		validateParameterCount((parameters != null ? parameters.length : 0), declaredInParameters)__	};validate,the,parameters,passed,to,an,execute,method,based,on,declared,parameters,subclasses,should,invoke,this,method,before,every,code,execute,query,or,code,update,method,param,parameters,parameters,supplied,may,be,code,null,throws,invalid,data,access,api,usage,exception,if,the,parameters,are,invalid;protected,void,validate,parameters,nullable,object,parameters,throws,invalid,data,access,api,usage,exception,check,compiled,int,declared,in,parameters,0,for,sql,parameter,param,this,declared,parameters,if,param,is,input,value,provided,if,supports,lob,parameters,param,get,sql,type,types,blob,param,get,sql,type,types,clob,throw,new,invalid,data,access,api,usage,exception,blob,or,clob,parameters,are,not,allowed,for,this,kind,of,operation,declared,in,parameters,validate,parameter,count,parameters,null,parameters,length,0,declared,in,parameters
RdbmsOperation -> protected void validateNamedParameters(Map<String, ?> parameters) throws InvalidDataAccessApiUsageException;1328020251;Validate the named parameters passed to an execute method based on declared parameters._Subclasses should invoke this method before every <code>executeQuery()</code> or_<code>update()</code> method._@param parameters parameter Map supplied. May be <code>null</code>._@throws InvalidDataAccessApiUsageException if the parameters are invalid;protected void validateNamedParameters(Map<String, ?> parameters) throws InvalidDataAccessApiUsageException {_		checkCompiled()__		Map paramsToUse = (parameters != null ? parameters : Collections.emptyMap())__		int declaredInParameters = 0__		for (SqlParameter param : this.declaredParameters) {_			if (param.isInputValueProvided()) {_				if (!supportsLobParameters() &&_						(param.getSqlType() == Types.BLOB || param.getSqlType() == Types.CLOB)) {_					throw new InvalidDataAccessApiUsageException(_							"BLOB or CLOB parameters are not allowed for this kind of operation")__				}_				if (param.getName() != null && !paramsToUse.containsKey(param.getName())) {_					throw new InvalidDataAccessApiUsageException("The parameter named '" + param.getName() +_							"' was not among the parameters supplied: " + paramsToUse.keySet())__				}_				declaredInParameters++__			}_		}_		validateParameterCount(paramsToUse.size(), declaredInParameters)__	};validate,the,named,parameters,passed,to,an,execute,method,based,on,declared,parameters,subclasses,should,invoke,this,method,before,every,code,execute,query,code,or,code,update,code,method,param,parameters,parameter,map,supplied,may,be,code,null,code,throws,invalid,data,access,api,usage,exception,if,the,parameters,are,invalid;protected,void,validate,named,parameters,map,string,parameters,throws,invalid,data,access,api,usage,exception,check,compiled,map,params,to,use,parameters,null,parameters,collections,empty,map,int,declared,in,parameters,0,for,sql,parameter,param,this,declared,parameters,if,param,is,input,value,provided,if,supports,lob,parameters,param,get,sql,type,types,blob,param,get,sql,type,types,clob,throw,new,invalid,data,access,api,usage,exception,blob,or,clob,parameters,are,not,allowed,for,this,kind,of,operation,if,param,get,name,null,params,to,use,contains,key,param,get,name,throw,new,invalid,data,access,api,usage,exception,the,parameter,named,param,get,name,was,not,among,the,parameters,supplied,params,to,use,key,set,declared,in,parameters,validate,parameter,count,params,to,use,size,declared,in,parameters
RdbmsOperation -> protected void validateNamedParameters(Map<String, ?> parameters) throws InvalidDataAccessApiUsageException;1356735495;Validate the named parameters passed to an execute method based on declared parameters._Subclasses should invoke this method before every {@code executeQuery()} or_{@code update()} method._@param parameters parameter Map supplied. May be {@code null}._@throws InvalidDataAccessApiUsageException if the parameters are invalid;protected void validateNamedParameters(Map<String, ?> parameters) throws InvalidDataAccessApiUsageException {_		checkCompiled()__		Map paramsToUse = (parameters != null ? parameters : Collections.emptyMap())__		int declaredInParameters = 0__		for (SqlParameter param : this.declaredParameters) {_			if (param.isInputValueProvided()) {_				if (!supportsLobParameters() &&_						(param.getSqlType() == Types.BLOB || param.getSqlType() == Types.CLOB)) {_					throw new InvalidDataAccessApiUsageException(_							"BLOB or CLOB parameters are not allowed for this kind of operation")__				}_				if (param.getName() != null && !paramsToUse.containsKey(param.getName())) {_					throw new InvalidDataAccessApiUsageException("The parameter named '" + param.getName() +_							"' was not among the parameters supplied: " + paramsToUse.keySet())__				}_				declaredInParameters++__			}_		}_		validateParameterCount(paramsToUse.size(), declaredInParameters)__	};validate,the,named,parameters,passed,to,an,execute,method,based,on,declared,parameters,subclasses,should,invoke,this,method,before,every,code,execute,query,or,code,update,method,param,parameters,parameter,map,supplied,may,be,code,null,throws,invalid,data,access,api,usage,exception,if,the,parameters,are,invalid;protected,void,validate,named,parameters,map,string,parameters,throws,invalid,data,access,api,usage,exception,check,compiled,map,params,to,use,parameters,null,parameters,collections,empty,map,int,declared,in,parameters,0,for,sql,parameter,param,this,declared,parameters,if,param,is,input,value,provided,if,supports,lob,parameters,param,get,sql,type,types,blob,param,get,sql,type,types,clob,throw,new,invalid,data,access,api,usage,exception,blob,or,clob,parameters,are,not,allowed,for,this,kind,of,operation,if,param,get,name,null,params,to,use,contains,key,param,get,name,throw,new,invalid,data,access,api,usage,exception,the,parameter,named,param,get,name,was,not,among,the,parameters,supplied,params,to,use,key,set,declared,in,parameters,validate,parameter,count,params,to,use,size,declared,in,parameters
RdbmsOperation -> protected void validateNamedParameters(Map<String, ?> parameters) throws InvalidDataAccessApiUsageException;1357119239;Validate the named parameters passed to an execute method based on declared parameters._Subclasses should invoke this method before every {@code executeQuery()} or_{@code update()} method._@param parameters parameter Map supplied. May be {@code null}._@throws InvalidDataAccessApiUsageException if the parameters are invalid;protected void validateNamedParameters(Map<String, ?> parameters) throws InvalidDataAccessApiUsageException {_		checkCompiled()__		Map paramsToUse = (parameters != null ? parameters : Collections.emptyMap())__		int declaredInParameters = 0__		for (SqlParameter param : this.declaredParameters) {_			if (param.isInputValueProvided()) {_				if (!supportsLobParameters() &&_						(param.getSqlType() == Types.BLOB || param.getSqlType() == Types.CLOB)) {_					throw new InvalidDataAccessApiUsageException(_							"BLOB or CLOB parameters are not allowed for this kind of operation")__				}_				if (param.getName() != null && !paramsToUse.containsKey(param.getName())) {_					throw new InvalidDataAccessApiUsageException("The parameter named '" + param.getName() +_							"' was not among the parameters supplied: " + paramsToUse.keySet())__				}_				declaredInParameters++__			}_		}_		validateParameterCount(paramsToUse.size(), declaredInParameters)__	};validate,the,named,parameters,passed,to,an,execute,method,based,on,declared,parameters,subclasses,should,invoke,this,method,before,every,code,execute,query,or,code,update,method,param,parameters,parameter,map,supplied,may,be,code,null,throws,invalid,data,access,api,usage,exception,if,the,parameters,are,invalid;protected,void,validate,named,parameters,map,string,parameters,throws,invalid,data,access,api,usage,exception,check,compiled,map,params,to,use,parameters,null,parameters,collections,empty,map,int,declared,in,parameters,0,for,sql,parameter,param,this,declared,parameters,if,param,is,input,value,provided,if,supports,lob,parameters,param,get,sql,type,types,blob,param,get,sql,type,types,clob,throw,new,invalid,data,access,api,usage,exception,blob,or,clob,parameters,are,not,allowed,for,this,kind,of,operation,if,param,get,name,null,params,to,use,contains,key,param,get,name,throw,new,invalid,data,access,api,usage,exception,the,parameter,named,param,get,name,was,not,among,the,parameters,supplied,params,to,use,key,set,declared,in,parameters,validate,parameter,count,params,to,use,size,declared,in,parameters
RdbmsOperation -> protected void validateNamedParameters(Map<String, ?> parameters) throws InvalidDataAccessApiUsageException;1368482696;Validate the named parameters passed to an execute method based on declared parameters._Subclasses should invoke this method before every {@code executeQuery()} or_{@code update()} method._@param parameters parameter Map supplied. May be {@code null}._@throws InvalidDataAccessApiUsageException if the parameters are invalid;protected void validateNamedParameters(Map<String, ?> parameters) throws InvalidDataAccessApiUsageException {_		checkCompiled()__		Map paramsToUse = (parameters != null ? parameters : Collections.emptyMap())__		int declaredInParameters = 0__		for (SqlParameter param : this.declaredParameters) {_			if (param.isInputValueProvided()) {_				if (!supportsLobParameters() &&_						(param.getSqlType() == Types.BLOB || param.getSqlType() == Types.CLOB)) {_					throw new InvalidDataAccessApiUsageException(_							"BLOB or CLOB parameters are not allowed for this kind of operation")__				}_				if (param.getName() != null && !paramsToUse.containsKey(param.getName())) {_					throw new InvalidDataAccessApiUsageException("The parameter named '" + param.getName() +_							"' was not among the parameters supplied: " + paramsToUse.keySet())__				}_				declaredInParameters++__			}_		}_		validateParameterCount(paramsToUse.size(), declaredInParameters)__	};validate,the,named,parameters,passed,to,an,execute,method,based,on,declared,parameters,subclasses,should,invoke,this,method,before,every,code,execute,query,or,code,update,method,param,parameters,parameter,map,supplied,may,be,code,null,throws,invalid,data,access,api,usage,exception,if,the,parameters,are,invalid;protected,void,validate,named,parameters,map,string,parameters,throws,invalid,data,access,api,usage,exception,check,compiled,map,params,to,use,parameters,null,parameters,collections,empty,map,int,declared,in,parameters,0,for,sql,parameter,param,this,declared,parameters,if,param,is,input,value,provided,if,supports,lob,parameters,param,get,sql,type,types,blob,param,get,sql,type,types,clob,throw,new,invalid,data,access,api,usage,exception,blob,or,clob,parameters,are,not,allowed,for,this,kind,of,operation,if,param,get,name,null,params,to,use,contains,key,param,get,name,throw,new,invalid,data,access,api,usage,exception,the,parameter,named,param,get,name,was,not,among,the,parameters,supplied,params,to,use,key,set,declared,in,parameters,validate,parameter,count,params,to,use,size,declared,in,parameters
RdbmsOperation -> protected void validateNamedParameters(Map<String, ?> parameters) throws InvalidDataAccessApiUsageException;1385412762;Validate the named parameters passed to an execute method based on declared parameters._Subclasses should invoke this method before every {@code executeQuery()} or_{@code update()} method._@param parameters parameter Map supplied. May be {@code null}._@throws InvalidDataAccessApiUsageException if the parameters are invalid;protected void validateNamedParameters(Map<String, ?> parameters) throws InvalidDataAccessApiUsageException {_		checkCompiled()__		Map<String, ?> paramsToUse = (parameters != null ? parameters : Collections.<String, Object> emptyMap())__		int declaredInParameters = 0__		for (SqlParameter param : this.declaredParameters) {_			if (param.isInputValueProvided()) {_				if (!supportsLobParameters() &&_						(param.getSqlType() == Types.BLOB || param.getSqlType() == Types.CLOB)) {_					throw new InvalidDataAccessApiUsageException(_							"BLOB or CLOB parameters are not allowed for this kind of operation")__				}_				if (param.getName() != null && !paramsToUse.containsKey(param.getName())) {_					throw new InvalidDataAccessApiUsageException("The parameter named '" + param.getName() +_							"' was not among the parameters supplied: " + paramsToUse.keySet())__				}_				declaredInParameters++__			}_		}_		validateParameterCount(paramsToUse.size(), declaredInParameters)__	};validate,the,named,parameters,passed,to,an,execute,method,based,on,declared,parameters,subclasses,should,invoke,this,method,before,every,code,execute,query,or,code,update,method,param,parameters,parameter,map,supplied,may,be,code,null,throws,invalid,data,access,api,usage,exception,if,the,parameters,are,invalid;protected,void,validate,named,parameters,map,string,parameters,throws,invalid,data,access,api,usage,exception,check,compiled,map,string,params,to,use,parameters,null,parameters,collections,string,object,empty,map,int,declared,in,parameters,0,for,sql,parameter,param,this,declared,parameters,if,param,is,input,value,provided,if,supports,lob,parameters,param,get,sql,type,types,blob,param,get,sql,type,types,clob,throw,new,invalid,data,access,api,usage,exception,blob,or,clob,parameters,are,not,allowed,for,this,kind,of,operation,if,param,get,name,null,params,to,use,contains,key,param,get,name,throw,new,invalid,data,access,api,usage,exception,the,parameter,named,param,get,name,was,not,among,the,parameters,supplied,params,to,use,key,set,declared,in,parameters,validate,parameter,count,params,to,use,size,declared,in,parameters
RdbmsOperation -> protected void validateNamedParameters(Map<String, ?> parameters) throws InvalidDataAccessApiUsageException;1407511029;Validate the named parameters passed to an execute method based on declared parameters._Subclasses should invoke this method before every {@code executeQuery()} or_{@code update()} method._@param parameters parameter Map supplied. May be {@code null}._@throws InvalidDataAccessApiUsageException if the parameters are invalid;protected void validateNamedParameters(Map<String, ?> parameters) throws InvalidDataAccessApiUsageException {_		checkCompiled()__		Map<String, ?> paramsToUse = (parameters != null ? parameters : Collections.<String, Object> emptyMap())__		int declaredInParameters = 0__		for (SqlParameter param : this.declaredParameters) {_			if (param.isInputValueProvided()) {_				if (!supportsLobParameters() &&_						(param.getSqlType() == Types.BLOB || param.getSqlType() == Types.CLOB)) {_					throw new InvalidDataAccessApiUsageException(_							"BLOB or CLOB parameters are not allowed for this kind of operation")__				}_				if (param.getName() != null && !paramsToUse.containsKey(param.getName())) {_					throw new InvalidDataAccessApiUsageException("The parameter named '" + param.getName() +_							"' was not among the parameters supplied: " + paramsToUse.keySet())__				}_				declaredInParameters++__			}_		}_		validateParameterCount(paramsToUse.size(), declaredInParameters)__	};validate,the,named,parameters,passed,to,an,execute,method,based,on,declared,parameters,subclasses,should,invoke,this,method,before,every,code,execute,query,or,code,update,method,param,parameters,parameter,map,supplied,may,be,code,null,throws,invalid,data,access,api,usage,exception,if,the,parameters,are,invalid;protected,void,validate,named,parameters,map,string,parameters,throws,invalid,data,access,api,usage,exception,check,compiled,map,string,params,to,use,parameters,null,parameters,collections,string,object,empty,map,int,declared,in,parameters,0,for,sql,parameter,param,this,declared,parameters,if,param,is,input,value,provided,if,supports,lob,parameters,param,get,sql,type,types,blob,param,get,sql,type,types,clob,throw,new,invalid,data,access,api,usage,exception,blob,or,clob,parameters,are,not,allowed,for,this,kind,of,operation,if,param,get,name,null,params,to,use,contains,key,param,get,name,throw,new,invalid,data,access,api,usage,exception,the,parameter,named,param,get,name,was,not,among,the,parameters,supplied,params,to,use,key,set,declared,in,parameters,validate,parameter,count,params,to,use,size,declared,in,parameters
RdbmsOperation -> protected void validateNamedParameters(Map<String, ?> parameters) throws InvalidDataAccessApiUsageException;1446038912;Validate the named parameters passed to an execute method based on declared parameters._Subclasses should invoke this method before every {@code executeQuery()} or_{@code update()} method._@param parameters parameter Map supplied. May be {@code null}._@throws InvalidDataAccessApiUsageException if the parameters are invalid;protected void validateNamedParameters(Map<String, ?> parameters) throws InvalidDataAccessApiUsageException {_		checkCompiled()__		Map<String, ?> paramsToUse = (parameters != null ? parameters : Collections.<String, Object> emptyMap())__		int declaredInParameters = 0__		for (SqlParameter param : this.declaredParameters) {_			if (param.isInputValueProvided()) {_				if (!supportsLobParameters() &&_						(param.getSqlType() == Types.BLOB || param.getSqlType() == Types.CLOB)) {_					throw new InvalidDataAccessApiUsageException(_							"BLOB or CLOB parameters are not allowed for this kind of operation")__				}_				if (param.getName() != null && !paramsToUse.containsKey(param.getName())) {_					throw new InvalidDataAccessApiUsageException("The parameter named '" + param.getName() +_							"' was not among the parameters supplied: " + paramsToUse.keySet())__				}_				declaredInParameters++__			}_		}_		validateParameterCount(paramsToUse.size(), declaredInParameters)__	};validate,the,named,parameters,passed,to,an,execute,method,based,on,declared,parameters,subclasses,should,invoke,this,method,before,every,code,execute,query,or,code,update,method,param,parameters,parameter,map,supplied,may,be,code,null,throws,invalid,data,access,api,usage,exception,if,the,parameters,are,invalid;protected,void,validate,named,parameters,map,string,parameters,throws,invalid,data,access,api,usage,exception,check,compiled,map,string,params,to,use,parameters,null,parameters,collections,string,object,empty,map,int,declared,in,parameters,0,for,sql,parameter,param,this,declared,parameters,if,param,is,input,value,provided,if,supports,lob,parameters,param,get,sql,type,types,blob,param,get,sql,type,types,clob,throw,new,invalid,data,access,api,usage,exception,blob,or,clob,parameters,are,not,allowed,for,this,kind,of,operation,if,param,get,name,null,params,to,use,contains,key,param,get,name,throw,new,invalid,data,access,api,usage,exception,the,parameter,named,param,get,name,was,not,among,the,parameters,supplied,params,to,use,key,set,declared,in,parameters,validate,parameter,count,params,to,use,size,declared,in,parameters
RdbmsOperation -> protected void validateNamedParameters(Map<String, ?> parameters) throws InvalidDataAccessApiUsageException;1467730834;Validate the named parameters passed to an execute method based on declared parameters._Subclasses should invoke this method before every {@code executeQuery()} or_{@code update()} method._@param parameters parameter Map supplied. May be {@code null}._@throws InvalidDataAccessApiUsageException if the parameters are invalid;protected void validateNamedParameters(Map<String, ?> parameters) throws InvalidDataAccessApiUsageException {_		checkCompiled()__		Map<String, ?> paramsToUse = (parameters != null ? parameters : Collections.<String, Object> emptyMap())__		int declaredInParameters = 0__		for (SqlParameter param : this.declaredParameters) {_			if (param.isInputValueProvided()) {_				if (!supportsLobParameters() &&_						(param.getSqlType() == Types.BLOB || param.getSqlType() == Types.CLOB)) {_					throw new InvalidDataAccessApiUsageException(_							"BLOB or CLOB parameters are not allowed for this kind of operation")__				}_				if (param.getName() != null && !paramsToUse.containsKey(param.getName())) {_					throw new InvalidDataAccessApiUsageException("The parameter named '" + param.getName() +_							"' was not among the parameters supplied: " + paramsToUse.keySet())__				}_				declaredInParameters++__			}_		}_		validateParameterCount(paramsToUse.size(), declaredInParameters)__	};validate,the,named,parameters,passed,to,an,execute,method,based,on,declared,parameters,subclasses,should,invoke,this,method,before,every,code,execute,query,or,code,update,method,param,parameters,parameter,map,supplied,may,be,code,null,throws,invalid,data,access,api,usage,exception,if,the,parameters,are,invalid;protected,void,validate,named,parameters,map,string,parameters,throws,invalid,data,access,api,usage,exception,check,compiled,map,string,params,to,use,parameters,null,parameters,collections,string,object,empty,map,int,declared,in,parameters,0,for,sql,parameter,param,this,declared,parameters,if,param,is,input,value,provided,if,supports,lob,parameters,param,get,sql,type,types,blob,param,get,sql,type,types,clob,throw,new,invalid,data,access,api,usage,exception,blob,or,clob,parameters,are,not,allowed,for,this,kind,of,operation,if,param,get,name,null,params,to,use,contains,key,param,get,name,throw,new,invalid,data,access,api,usage,exception,the,parameter,named,param,get,name,was,not,among,the,parameters,supplied,params,to,use,key,set,declared,in,parameters,validate,parameter,count,params,to,use,size,declared,in,parameters
RdbmsOperation -> protected void validateNamedParameters(@Nullable Map<String, ?> parameters) throws InvalidDataAccessApiUsageException;1495868221;Validate the named parameters passed to an execute method based on declared parameters._Subclasses should invoke this method before every {@code executeQuery()} or_{@code update()} method._@param parameters parameter Map supplied. May be {@code null}._@throws InvalidDataAccessApiUsageException if the parameters are invalid;protected void validateNamedParameters(@Nullable Map<String, ?> parameters) throws InvalidDataAccessApiUsageException {_		checkCompiled()__		Map<String, ?> paramsToUse = (parameters != null ? parameters : Collections.<String, Object> emptyMap())__		int declaredInParameters = 0__		for (SqlParameter param : this.declaredParameters) {_			if (param.isInputValueProvided()) {_				if (!supportsLobParameters() &&_						(param.getSqlType() == Types.BLOB || param.getSqlType() == Types.CLOB)) {_					throw new InvalidDataAccessApiUsageException(_							"BLOB or CLOB parameters are not allowed for this kind of operation")__				}_				if (param.getName() != null && !paramsToUse.containsKey(param.getName())) {_					throw new InvalidDataAccessApiUsageException("The parameter named '" + param.getName() +_							"' was not among the parameters supplied: " + paramsToUse.keySet())__				}_				declaredInParameters++__			}_		}_		validateParameterCount(paramsToUse.size(), declaredInParameters)__	};validate,the,named,parameters,passed,to,an,execute,method,based,on,declared,parameters,subclasses,should,invoke,this,method,before,every,code,execute,query,or,code,update,method,param,parameters,parameter,map,supplied,may,be,code,null,throws,invalid,data,access,api,usage,exception,if,the,parameters,are,invalid;protected,void,validate,named,parameters,nullable,map,string,parameters,throws,invalid,data,access,api,usage,exception,check,compiled,map,string,params,to,use,parameters,null,parameters,collections,string,object,empty,map,int,declared,in,parameters,0,for,sql,parameter,param,this,declared,parameters,if,param,is,input,value,provided,if,supports,lob,parameters,param,get,sql,type,types,blob,param,get,sql,type,types,clob,throw,new,invalid,data,access,api,usage,exception,blob,or,clob,parameters,are,not,allowed,for,this,kind,of,operation,if,param,get,name,null,params,to,use,contains,key,param,get,name,throw,new,invalid,data,access,api,usage,exception,the,parameter,named,param,get,name,was,not,among,the,parameters,supplied,params,to,use,key,set,declared,in,parameters,validate,parameter,count,params,to,use,size,declared,in,parameters
RdbmsOperation -> protected void validateNamedParameters(@Nullable Map<String, ?> parameters) throws InvalidDataAccessApiUsageException;1496837955;Validate the named parameters passed to an execute method based on declared parameters._Subclasses should invoke this method before every {@code executeQuery()} or_{@code update()} method._@param parameters parameter Map supplied. May be {@code null}._@throws InvalidDataAccessApiUsageException if the parameters are invalid;protected void validateNamedParameters(@Nullable Map<String, ?> parameters) throws InvalidDataAccessApiUsageException {_		checkCompiled()__		Map<String, ?> paramsToUse = (parameters != null ? parameters : Collections.<String, Object> emptyMap())__		int declaredInParameters = 0__		for (SqlParameter param : this.declaredParameters) {_			if (param.isInputValueProvided()) {_				if (!supportsLobParameters() &&_						(param.getSqlType() == Types.BLOB || param.getSqlType() == Types.CLOB)) {_					throw new InvalidDataAccessApiUsageException(_							"BLOB or CLOB parameters are not allowed for this kind of operation")__				}_				if (param.getName() != null && !paramsToUse.containsKey(param.getName())) {_					throw new InvalidDataAccessApiUsageException("The parameter named '" + param.getName() +_							"' was not among the parameters supplied: " + paramsToUse.keySet())__				}_				declaredInParameters++__			}_		}_		validateParameterCount(paramsToUse.size(), declaredInParameters)__	};validate,the,named,parameters,passed,to,an,execute,method,based,on,declared,parameters,subclasses,should,invoke,this,method,before,every,code,execute,query,or,code,update,method,param,parameters,parameter,map,supplied,may,be,code,null,throws,invalid,data,access,api,usage,exception,if,the,parameters,are,invalid;protected,void,validate,named,parameters,nullable,map,string,parameters,throws,invalid,data,access,api,usage,exception,check,compiled,map,string,params,to,use,parameters,null,parameters,collections,string,object,empty,map,int,declared,in,parameters,0,for,sql,parameter,param,this,declared,parameters,if,param,is,input,value,provided,if,supports,lob,parameters,param,get,sql,type,types,blob,param,get,sql,type,types,clob,throw,new,invalid,data,access,api,usage,exception,blob,or,clob,parameters,are,not,allowed,for,this,kind,of,operation,if,param,get,name,null,params,to,use,contains,key,param,get,name,throw,new,invalid,data,access,api,usage,exception,the,parameter,named,param,get,name,was,not,among,the,parameters,supplied,params,to,use,key,set,declared,in,parameters,validate,parameter,count,params,to,use,size,declared,in,parameters
RdbmsOperation -> protected void validateNamedParameters(@Nullable Map<String, ?> parameters) throws InvalidDataAccessApiUsageException;1498780456;Validate the named parameters passed to an execute method based on declared parameters._Subclasses should invoke this method before every {@code executeQuery()} or_{@code update()} method._@param parameters parameter Map supplied. May be {@code null}._@throws InvalidDataAccessApiUsageException if the parameters are invalid;protected void validateNamedParameters(@Nullable Map<String, ?> parameters) throws InvalidDataAccessApiUsageException {_		checkCompiled()__		Map<String, ?> paramsToUse = (parameters != null ? parameters : Collections.<String, Object> emptyMap())__		int declaredInParameters = 0__		for (SqlParameter param : this.declaredParameters) {_			if (param.isInputValueProvided()) {_				if (!supportsLobParameters() &&_						(param.getSqlType() == Types.BLOB || param.getSqlType() == Types.CLOB)) {_					throw new InvalidDataAccessApiUsageException(_							"BLOB or CLOB parameters are not allowed for this kind of operation")__				}_				if (param.getName() != null && !paramsToUse.containsKey(param.getName())) {_					throw new InvalidDataAccessApiUsageException("The parameter named '" + param.getName() +_							"' was not among the parameters supplied: " + paramsToUse.keySet())__				}_				declaredInParameters++__			}_		}_		validateParameterCount(paramsToUse.size(), declaredInParameters)__	};validate,the,named,parameters,passed,to,an,execute,method,based,on,declared,parameters,subclasses,should,invoke,this,method,before,every,code,execute,query,or,code,update,method,param,parameters,parameter,map,supplied,may,be,code,null,throws,invalid,data,access,api,usage,exception,if,the,parameters,are,invalid;protected,void,validate,named,parameters,nullable,map,string,parameters,throws,invalid,data,access,api,usage,exception,check,compiled,map,string,params,to,use,parameters,null,parameters,collections,string,object,empty,map,int,declared,in,parameters,0,for,sql,parameter,param,this,declared,parameters,if,param,is,input,value,provided,if,supports,lob,parameters,param,get,sql,type,types,blob,param,get,sql,type,types,clob,throw,new,invalid,data,access,api,usage,exception,blob,or,clob,parameters,are,not,allowed,for,this,kind,of,operation,if,param,get,name,null,params,to,use,contains,key,param,get,name,throw,new,invalid,data,access,api,usage,exception,the,parameter,named,param,get,name,was,not,among,the,parameters,supplied,params,to,use,key,set,declared,in,parameters,validate,parameter,count,params,to,use,size,declared,in,parameters
RdbmsOperation -> protected void validateNamedParameters(@Nullable Map<String, ?> parameters) throws InvalidDataAccessApiUsageException;1506519613;Validate the named parameters passed to an execute method based on declared parameters._Subclasses should invoke this method before every {@code executeQuery()} or_{@code update()} method._@param parameters parameter Map supplied (may be {@code null})_@throws InvalidDataAccessApiUsageException if the parameters are invalid;protected void validateNamedParameters(@Nullable Map<String, ?> parameters) throws InvalidDataAccessApiUsageException {_		checkCompiled()__		Map<String, ?> paramsToUse = (parameters != null ? parameters : Collections.<String, Object> emptyMap())__		int declaredInParameters = 0__		for (SqlParameter param : this.declaredParameters) {_			if (param.isInputValueProvided()) {_				if (!supportsLobParameters() &&_						(param.getSqlType() == Types.BLOB || param.getSqlType() == Types.CLOB)) {_					throw new InvalidDataAccessApiUsageException(_							"BLOB or CLOB parameters are not allowed for this kind of operation")__				}_				if (param.getName() != null && !paramsToUse.containsKey(param.getName())) {_					throw new InvalidDataAccessApiUsageException("The parameter named '" + param.getName() +_							"' was not among the parameters supplied: " + paramsToUse.keySet())__				}_				declaredInParameters++__			}_		}_		validateParameterCount(paramsToUse.size(), declaredInParameters)__	};validate,the,named,parameters,passed,to,an,execute,method,based,on,declared,parameters,subclasses,should,invoke,this,method,before,every,code,execute,query,or,code,update,method,param,parameters,parameter,map,supplied,may,be,code,null,throws,invalid,data,access,api,usage,exception,if,the,parameters,are,invalid;protected,void,validate,named,parameters,nullable,map,string,parameters,throws,invalid,data,access,api,usage,exception,check,compiled,map,string,params,to,use,parameters,null,parameters,collections,string,object,empty,map,int,declared,in,parameters,0,for,sql,parameter,param,this,declared,parameters,if,param,is,input,value,provided,if,supports,lob,parameters,param,get,sql,type,types,blob,param,get,sql,type,types,clob,throw,new,invalid,data,access,api,usage,exception,blob,or,clob,parameters,are,not,allowed,for,this,kind,of,operation,if,param,get,name,null,params,to,use,contains,key,param,get,name,throw,new,invalid,data,access,api,usage,exception,the,parameter,named,param,get,name,was,not,among,the,parameters,supplied,params,to,use,key,set,declared,in,parameters,validate,parameter,count,params,to,use,size,declared,in,parameters
RdbmsOperation -> protected void validateNamedParameters(@Nullable Map<String, ?> parameters) throws InvalidDataAccessApiUsageException;1525966356;Validate the named parameters passed to an execute method based on declared parameters._Subclasses should invoke this method before every {@code executeQuery()} or_{@code update()} method._@param parameters parameter Map supplied (may be {@code null})_@throws InvalidDataAccessApiUsageException if the parameters are invalid;protected void validateNamedParameters(@Nullable Map<String, ?> parameters) throws InvalidDataAccessApiUsageException {_		checkCompiled()__		Map<String, ?> paramsToUse = (parameters != null ? parameters : Collections.<String, Object> emptyMap())__		int declaredInParameters = 0__		for (SqlParameter param : this.declaredParameters) {_			if (param.isInputValueProvided()) {_				if (!supportsLobParameters() &&_						(param.getSqlType() == Types.BLOB || param.getSqlType() == Types.CLOB)) {_					throw new InvalidDataAccessApiUsageException(_							"BLOB or CLOB parameters are not allowed for this kind of operation")__				}_				if (param.getName() != null && !paramsToUse.containsKey(param.getName())) {_					throw new InvalidDataAccessApiUsageException("The parameter named '" + param.getName() +_							"' was not among the parameters supplied: " + paramsToUse.keySet())__				}_				declaredInParameters++__			}_		}_		validateParameterCount(paramsToUse.size(), declaredInParameters)__	};validate,the,named,parameters,passed,to,an,execute,method,based,on,declared,parameters,subclasses,should,invoke,this,method,before,every,code,execute,query,or,code,update,method,param,parameters,parameter,map,supplied,may,be,code,null,throws,invalid,data,access,api,usage,exception,if,the,parameters,are,invalid;protected,void,validate,named,parameters,nullable,map,string,parameters,throws,invalid,data,access,api,usage,exception,check,compiled,map,string,params,to,use,parameters,null,parameters,collections,string,object,empty,map,int,declared,in,parameters,0,for,sql,parameter,param,this,declared,parameters,if,param,is,input,value,provided,if,supports,lob,parameters,param,get,sql,type,types,blob,param,get,sql,type,types,clob,throw,new,invalid,data,access,api,usage,exception,blob,or,clob,parameters,are,not,allowed,for,this,kind,of,operation,if,param,get,name,null,params,to,use,contains,key,param,get,name,throw,new,invalid,data,access,api,usage,exception,the,parameter,named,param,get,name,was,not,among,the,parameters,supplied,params,to,use,key,set,declared,in,parameters,validate,parameter,count,params,to,use,size,declared,in,parameters
RdbmsOperation -> protected void validateNamedParameters(@Nullable Map<String, ?> parameters) throws InvalidDataAccessApiUsageException;1530174524;Validate the named parameters passed to an execute method based on declared parameters._Subclasses should invoke this method before every {@code executeQuery()} or_{@code update()} method._@param parameters parameter Map supplied (may be {@code null})_@throws InvalidDataAccessApiUsageException if the parameters are invalid;protected void validateNamedParameters(@Nullable Map<String, ?> parameters) throws InvalidDataAccessApiUsageException {_		checkCompiled()__		Map<String, ?> paramsToUse = (parameters != null ? parameters : Collections.<String, Object> emptyMap())__		int declaredInParameters = 0__		for (SqlParameter param : this.declaredParameters) {_			if (param.isInputValueProvided()) {_				if (!supportsLobParameters() &&_						(param.getSqlType() == Types.BLOB || param.getSqlType() == Types.CLOB)) {_					throw new InvalidDataAccessApiUsageException(_							"BLOB or CLOB parameters are not allowed for this kind of operation")__				}_				if (param.getName() != null && !paramsToUse.containsKey(param.getName())) {_					throw new InvalidDataAccessApiUsageException("The parameter named '" + param.getName() +_							"' was not among the parameters supplied: " + paramsToUse.keySet())__				}_				declaredInParameters++__			}_		}_		validateParameterCount(paramsToUse.size(), declaredInParameters)__	};validate,the,named,parameters,passed,to,an,execute,method,based,on,declared,parameters,subclasses,should,invoke,this,method,before,every,code,execute,query,or,code,update,method,param,parameters,parameter,map,supplied,may,be,code,null,throws,invalid,data,access,api,usage,exception,if,the,parameters,are,invalid;protected,void,validate,named,parameters,nullable,map,string,parameters,throws,invalid,data,access,api,usage,exception,check,compiled,map,string,params,to,use,parameters,null,parameters,collections,string,object,empty,map,int,declared,in,parameters,0,for,sql,parameter,param,this,declared,parameters,if,param,is,input,value,provided,if,supports,lob,parameters,param,get,sql,type,types,blob,param,get,sql,type,types,clob,throw,new,invalid,data,access,api,usage,exception,blob,or,clob,parameters,are,not,allowed,for,this,kind,of,operation,if,param,get,name,null,params,to,use,contains,key,param,get,name,throw,new,invalid,data,access,api,usage,exception,the,parameter,named,param,get,name,was,not,among,the,parameters,supplied,params,to,use,key,set,declared,in,parameters,validate,parameter,count,params,to,use,size,declared,in,parameters
RdbmsOperation -> protected void validateNamedParameters(@Nullable Map<String, ?> parameters) throws InvalidDataAccessApiUsageException;1542899558;Validate the named parameters passed to an execute method based on declared parameters._Subclasses should invoke this method before every {@code executeQuery()} or_{@code update()} method._@param parameters parameter Map supplied (may be {@code null})_@throws InvalidDataAccessApiUsageException if the parameters are invalid;protected void validateNamedParameters(@Nullable Map<String, ?> parameters) throws InvalidDataAccessApiUsageException {_		checkCompiled()__		Map<String, ?> paramsToUse = (parameters != null ? parameters : Collections.<String, Object> emptyMap())__		int declaredInParameters = 0__		for (SqlParameter param : this.declaredParameters) {_			if (param.isInputValueProvided()) {_				if (!supportsLobParameters() &&_						(param.getSqlType() == Types.BLOB || param.getSqlType() == Types.CLOB)) {_					throw new InvalidDataAccessApiUsageException(_							"BLOB or CLOB parameters are not allowed for this kind of operation")__				}_				if (param.getName() != null && !paramsToUse.containsKey(param.getName())) {_					throw new InvalidDataAccessApiUsageException("The parameter named '" + param.getName() +_							"' was not among the parameters supplied: " + paramsToUse.keySet())__				}_				declaredInParameters++__			}_		}_		validateParameterCount(paramsToUse.size(), declaredInParameters)__	};validate,the,named,parameters,passed,to,an,execute,method,based,on,declared,parameters,subclasses,should,invoke,this,method,before,every,code,execute,query,or,code,update,method,param,parameters,parameter,map,supplied,may,be,code,null,throws,invalid,data,access,api,usage,exception,if,the,parameters,are,invalid;protected,void,validate,named,parameters,nullable,map,string,parameters,throws,invalid,data,access,api,usage,exception,check,compiled,map,string,params,to,use,parameters,null,parameters,collections,string,object,empty,map,int,declared,in,parameters,0,for,sql,parameter,param,this,declared,parameters,if,param,is,input,value,provided,if,supports,lob,parameters,param,get,sql,type,types,blob,param,get,sql,type,types,clob,throw,new,invalid,data,access,api,usage,exception,blob,or,clob,parameters,are,not,allowed,for,this,kind,of,operation,if,param,get,name,null,params,to,use,contains,key,param,get,name,throw,new,invalid,data,access,api,usage,exception,the,parameter,named,param,get,name,was,not,among,the,parameters,supplied,params,to,use,key,set,declared,in,parameters,validate,parameter,count,params,to,use,size,declared,in,parameters
RdbmsOperation -> public boolean isCompiled();1328020251;Is this operation "compiled"? Compilation, as in JDO,_means that the operation is fully configured, and ready to use._The exact meaning of compilation will vary between subclasses._@return whether this operation is compiled, and ready to use.;public boolean isCompiled() {_		return this.compiled__	};is,this,operation,compiled,compilation,as,in,jdo,means,that,the,operation,is,fully,configured,and,ready,to,use,the,exact,meaning,of,compilation,will,vary,between,subclasses,return,whether,this,operation,is,compiled,and,ready,to,use;public,boolean,is,compiled,return,this,compiled
RdbmsOperation -> public boolean isCompiled();1356735495;Is this operation "compiled"? Compilation, as in JDO,_means that the operation is fully configured, and ready to use._The exact meaning of compilation will vary between subclasses._@return whether this operation is compiled, and ready to use.;public boolean isCompiled() {_		return this.compiled__	};is,this,operation,compiled,compilation,as,in,jdo,means,that,the,operation,is,fully,configured,and,ready,to,use,the,exact,meaning,of,compilation,will,vary,between,subclasses,return,whether,this,operation,is,compiled,and,ready,to,use;public,boolean,is,compiled,return,this,compiled
RdbmsOperation -> public boolean isCompiled();1357119239;Is this operation "compiled"? Compilation, as in JDO,_means that the operation is fully configured, and ready to use._The exact meaning of compilation will vary between subclasses._@return whether this operation is compiled, and ready to use.;public boolean isCompiled() {_		return this.compiled__	};is,this,operation,compiled,compilation,as,in,jdo,means,that,the,operation,is,fully,configured,and,ready,to,use,the,exact,meaning,of,compilation,will,vary,between,subclasses,return,whether,this,operation,is,compiled,and,ready,to,use;public,boolean,is,compiled,return,this,compiled
RdbmsOperation -> public boolean isCompiled();1368482696;Is this operation "compiled"? Compilation, as in JDO,_means that the operation is fully configured, and ready to use._The exact meaning of compilation will vary between subclasses._@return whether this operation is compiled, and ready to use.;public boolean isCompiled() {_		return this.compiled__	};is,this,operation,compiled,compilation,as,in,jdo,means,that,the,operation,is,fully,configured,and,ready,to,use,the,exact,meaning,of,compilation,will,vary,between,subclasses,return,whether,this,operation,is,compiled,and,ready,to,use;public,boolean,is,compiled,return,this,compiled
RdbmsOperation -> public boolean isCompiled();1385412762;Is this operation "compiled"? Compilation, as in JDO,_means that the operation is fully configured, and ready to use._The exact meaning of compilation will vary between subclasses._@return whether this operation is compiled, and ready to use.;public boolean isCompiled() {_		return this.compiled__	};is,this,operation,compiled,compilation,as,in,jdo,means,that,the,operation,is,fully,configured,and,ready,to,use,the,exact,meaning,of,compilation,will,vary,between,subclasses,return,whether,this,operation,is,compiled,and,ready,to,use;public,boolean,is,compiled,return,this,compiled
RdbmsOperation -> public boolean isCompiled();1407511029;Is this operation "compiled"? Compilation, as in JDO,_means that the operation is fully configured, and ready to use._The exact meaning of compilation will vary between subclasses._@return whether this operation is compiled, and ready to use.;public boolean isCompiled() {_		return this.compiled__	};is,this,operation,compiled,compilation,as,in,jdo,means,that,the,operation,is,fully,configured,and,ready,to,use,the,exact,meaning,of,compilation,will,vary,between,subclasses,return,whether,this,operation,is,compiled,and,ready,to,use;public,boolean,is,compiled,return,this,compiled
RdbmsOperation -> public boolean isCompiled();1446038912;Is this operation "compiled"? Compilation, as in JDO,_means that the operation is fully configured, and ready to use._The exact meaning of compilation will vary between subclasses._@return whether this operation is compiled and ready to use;public boolean isCompiled() {_		return this.compiled__	};is,this,operation,compiled,compilation,as,in,jdo,means,that,the,operation,is,fully,configured,and,ready,to,use,the,exact,meaning,of,compilation,will,vary,between,subclasses,return,whether,this,operation,is,compiled,and,ready,to,use;public,boolean,is,compiled,return,this,compiled
RdbmsOperation -> public boolean isCompiled();1467730834;Is this operation "compiled"? Compilation, as in JDO,_means that the operation is fully configured, and ready to use._The exact meaning of compilation will vary between subclasses._@return whether this operation is compiled and ready to use;public boolean isCompiled() {_		return this.compiled__	};is,this,operation,compiled,compilation,as,in,jdo,means,that,the,operation,is,fully,configured,and,ready,to,use,the,exact,meaning,of,compilation,will,vary,between,subclasses,return,whether,this,operation,is,compiled,and,ready,to,use;public,boolean,is,compiled,return,this,compiled
RdbmsOperation -> public boolean isCompiled();1495868221;Is this operation "compiled"? Compilation, as in JDO,_means that the operation is fully configured, and ready to use._The exact meaning of compilation will vary between subclasses._@return whether this operation is compiled and ready to use;public boolean isCompiled() {_		return this.compiled__	};is,this,operation,compiled,compilation,as,in,jdo,means,that,the,operation,is,fully,configured,and,ready,to,use,the,exact,meaning,of,compilation,will,vary,between,subclasses,return,whether,this,operation,is,compiled,and,ready,to,use;public,boolean,is,compiled,return,this,compiled
RdbmsOperation -> public boolean isCompiled();1496837955;Is this operation "compiled"? Compilation, as in JDO,_means that the operation is fully configured, and ready to use._The exact meaning of compilation will vary between subclasses._@return whether this operation is compiled and ready to use;public boolean isCompiled() {_		return this.compiled__	};is,this,operation,compiled,compilation,as,in,jdo,means,that,the,operation,is,fully,configured,and,ready,to,use,the,exact,meaning,of,compilation,will,vary,between,subclasses,return,whether,this,operation,is,compiled,and,ready,to,use;public,boolean,is,compiled,return,this,compiled
RdbmsOperation -> public boolean isCompiled();1498780456;Is this operation "compiled"? Compilation, as in JDO,_means that the operation is fully configured, and ready to use._The exact meaning of compilation will vary between subclasses._@return whether this operation is compiled and ready to use;public boolean isCompiled() {_		return this.compiled__	};is,this,operation,compiled,compilation,as,in,jdo,means,that,the,operation,is,fully,configured,and,ready,to,use,the,exact,meaning,of,compilation,will,vary,between,subclasses,return,whether,this,operation,is,compiled,and,ready,to,use;public,boolean,is,compiled,return,this,compiled
RdbmsOperation -> public boolean isCompiled();1506519613;Is this operation "compiled"? Compilation, as in JDO,_means that the operation is fully configured, and ready to use._The exact meaning of compilation will vary between subclasses._@return whether this operation is compiled and ready to use;public boolean isCompiled() {_		return this.compiled__	};is,this,operation,compiled,compilation,as,in,jdo,means,that,the,operation,is,fully,configured,and,ready,to,use,the,exact,meaning,of,compilation,will,vary,between,subclasses,return,whether,this,operation,is,compiled,and,ready,to,use;public,boolean,is,compiled,return,this,compiled
RdbmsOperation -> public boolean isCompiled();1525966356;Is this operation "compiled"? Compilation, as in JDO,_means that the operation is fully configured, and ready to use._The exact meaning of compilation will vary between subclasses._@return whether this operation is compiled and ready to use;public boolean isCompiled() {_		return this.compiled__	};is,this,operation,compiled,compilation,as,in,jdo,means,that,the,operation,is,fully,configured,and,ready,to,use,the,exact,meaning,of,compilation,will,vary,between,subclasses,return,whether,this,operation,is,compiled,and,ready,to,use;public,boolean,is,compiled,return,this,compiled
RdbmsOperation -> public boolean isCompiled();1530174524;Is this operation "compiled"? Compilation, as in JDO,_means that the operation is fully configured, and ready to use._The exact meaning of compilation will vary between subclasses._@return whether this operation is compiled and ready to use;public boolean isCompiled() {_		return this.compiled__	};is,this,operation,compiled,compilation,as,in,jdo,means,that,the,operation,is,fully,configured,and,ready,to,use,the,exact,meaning,of,compilation,will,vary,between,subclasses,return,whether,this,operation,is,compiled,and,ready,to,use;public,boolean,is,compiled,return,this,compiled
RdbmsOperation -> public boolean isCompiled();1542899558;Is this operation "compiled"? Compilation, as in JDO,_means that the operation is fully configured, and ready to use._The exact meaning of compilation will vary between subclasses._@return whether this operation is compiled and ready to use;public boolean isCompiled() {_		return this.compiled__	};is,this,operation,compiled,compilation,as,in,jdo,means,that,the,operation,is,fully,configured,and,ready,to,use,the,exact,meaning,of,compilation,will,vary,between,subclasses,return,whether,this,operation,is,compiled,and,ready,to,use;public,boolean,is,compiled,return,this,compiled
RdbmsOperation -> public boolean isReturnGeneratedKeys();1328020251;Return whether statements should be capable of returning_auto-generated keys.;public boolean isReturnGeneratedKeys() {_		return this.returnGeneratedKeys__	};return,whether,statements,should,be,capable,of,returning,auto,generated,keys;public,boolean,is,return,generated,keys,return,this,return,generated,keys
RdbmsOperation -> public boolean isReturnGeneratedKeys();1356735495;Return whether statements should be capable of returning_auto-generated keys.;public boolean isReturnGeneratedKeys() {_		return this.returnGeneratedKeys__	};return,whether,statements,should,be,capable,of,returning,auto,generated,keys;public,boolean,is,return,generated,keys,return,this,return,generated,keys
RdbmsOperation -> public boolean isReturnGeneratedKeys();1357119239;Return whether statements should be capable of returning_auto-generated keys.;public boolean isReturnGeneratedKeys() {_		return this.returnGeneratedKeys__	};return,whether,statements,should,be,capable,of,returning,auto,generated,keys;public,boolean,is,return,generated,keys,return,this,return,generated,keys
RdbmsOperation -> public boolean isReturnGeneratedKeys();1368482696;Return whether statements should be capable of returning_auto-generated keys.;public boolean isReturnGeneratedKeys() {_		return this.returnGeneratedKeys__	};return,whether,statements,should,be,capable,of,returning,auto,generated,keys;public,boolean,is,return,generated,keys,return,this,return,generated,keys
RdbmsOperation -> public boolean isReturnGeneratedKeys();1385412762;Return whether statements should be capable of returning_auto-generated keys.;public boolean isReturnGeneratedKeys() {_		return this.returnGeneratedKeys__	};return,whether,statements,should,be,capable,of,returning,auto,generated,keys;public,boolean,is,return,generated,keys,return,this,return,generated,keys
RdbmsOperation -> public boolean isReturnGeneratedKeys();1407511029;Return whether statements should be capable of returning_auto-generated keys.;public boolean isReturnGeneratedKeys() {_		return this.returnGeneratedKeys__	};return,whether,statements,should,be,capable,of,returning,auto,generated,keys;public,boolean,is,return,generated,keys,return,this,return,generated,keys
RdbmsOperation -> public boolean isReturnGeneratedKeys();1446038912;Return whether statements should be capable of returning_auto-generated keys.;public boolean isReturnGeneratedKeys() {_		return this.returnGeneratedKeys__	};return,whether,statements,should,be,capable,of,returning,auto,generated,keys;public,boolean,is,return,generated,keys,return,this,return,generated,keys
RdbmsOperation -> public boolean isReturnGeneratedKeys();1467730834;Return whether statements should be capable of returning_auto-generated keys.;public boolean isReturnGeneratedKeys() {_		return this.returnGeneratedKeys__	};return,whether,statements,should,be,capable,of,returning,auto,generated,keys;public,boolean,is,return,generated,keys,return,this,return,generated,keys
RdbmsOperation -> public boolean isReturnGeneratedKeys();1495868221;Return whether statements should be capable of returning_auto-generated keys.;public boolean isReturnGeneratedKeys() {_		return this.returnGeneratedKeys__	};return,whether,statements,should,be,capable,of,returning,auto,generated,keys;public,boolean,is,return,generated,keys,return,this,return,generated,keys
RdbmsOperation -> public boolean isReturnGeneratedKeys();1496837955;Return whether statements should be capable of returning_auto-generated keys.;public boolean isReturnGeneratedKeys() {_		return this.returnGeneratedKeys__	};return,whether,statements,should,be,capable,of,returning,auto,generated,keys;public,boolean,is,return,generated,keys,return,this,return,generated,keys
RdbmsOperation -> public boolean isReturnGeneratedKeys();1498780456;Return whether statements should be capable of returning_auto-generated keys.;public boolean isReturnGeneratedKeys() {_		return this.returnGeneratedKeys__	};return,whether,statements,should,be,capable,of,returning,auto,generated,keys;public,boolean,is,return,generated,keys,return,this,return,generated,keys
RdbmsOperation -> public boolean isReturnGeneratedKeys();1506519613;Return whether statements should be capable of returning_auto-generated keys.;public boolean isReturnGeneratedKeys() {_		return this.returnGeneratedKeys__	};return,whether,statements,should,be,capable,of,returning,auto,generated,keys;public,boolean,is,return,generated,keys,return,this,return,generated,keys
RdbmsOperation -> public boolean isReturnGeneratedKeys();1525966356;Return whether statements should be capable of returning_auto-generated keys.;public boolean isReturnGeneratedKeys() {_		return this.returnGeneratedKeys__	};return,whether,statements,should,be,capable,of,returning,auto,generated,keys;public,boolean,is,return,generated,keys,return,this,return,generated,keys
RdbmsOperation -> public boolean isReturnGeneratedKeys();1530174524;Return whether statements should be capable of returning_auto-generated keys.;public boolean isReturnGeneratedKeys() {_		return this.returnGeneratedKeys__	};return,whether,statements,should,be,capable,of,returning,auto,generated,keys;public,boolean,is,return,generated,keys,return,this,return,generated,keys
RdbmsOperation -> public boolean isReturnGeneratedKeys();1542899558;Return whether statements should be capable of returning_auto-generated keys.;public boolean isReturnGeneratedKeys() {_		return this.returnGeneratedKeys__	};return,whether,statements,should,be,capable,of,returning,auto,generated,keys;public,boolean,is,return,generated,keys,return,this,return,generated,keys
RdbmsOperation -> public void setGeneratedKeysColumnNames(String[] names);1328020251;Set the column names of the auto-generated keys._@see java.sql.Connection#prepareStatement(String, String[]);public void setGeneratedKeysColumnNames(String[] names) {_		if (isCompiled()) {_			throw new InvalidDataAccessApiUsageException(_					"The column names for the generated keys must be set before the operation is compiled")__		}_		this.generatedKeysColumnNames = names__	};set,the,column,names,of,the,auto,generated,keys,see,java,sql,connection,prepare,statement,string,string;public,void,set,generated,keys,column,names,string,names,if,is,compiled,throw,new,invalid,data,access,api,usage,exception,the,column,names,for,the,generated,keys,must,be,set,before,the,operation,is,compiled,this,generated,keys,column,names,names
RdbmsOperation -> public void setGeneratedKeysColumnNames(String[] names);1356735495;Set the column names of the auto-generated keys._@see java.sql.Connection#prepareStatement(String, String[]);public void setGeneratedKeysColumnNames(String[] names) {_		if (isCompiled()) {_			throw new InvalidDataAccessApiUsageException(_					"The column names for the generated keys must be set before the operation is compiled")__		}_		this.generatedKeysColumnNames = names__	};set,the,column,names,of,the,auto,generated,keys,see,java,sql,connection,prepare,statement,string,string;public,void,set,generated,keys,column,names,string,names,if,is,compiled,throw,new,invalid,data,access,api,usage,exception,the,column,names,for,the,generated,keys,must,be,set,before,the,operation,is,compiled,this,generated,keys,column,names,names
RdbmsOperation -> public void setGeneratedKeysColumnNames(String[] names);1357119239;Set the column names of the auto-generated keys._@see java.sql.Connection#prepareStatement(String, String[]);public void setGeneratedKeysColumnNames(String[] names) {_		if (isCompiled()) {_			throw new InvalidDataAccessApiUsageException(_					"The column names for the generated keys must be set before the operation is compiled")__		}_		this.generatedKeysColumnNames = names__	};set,the,column,names,of,the,auto,generated,keys,see,java,sql,connection,prepare,statement,string,string;public,void,set,generated,keys,column,names,string,names,if,is,compiled,throw,new,invalid,data,access,api,usage,exception,the,column,names,for,the,generated,keys,must,be,set,before,the,operation,is,compiled,this,generated,keys,column,names,names
RdbmsOperation -> public void setGeneratedKeysColumnNames(String[] names);1368482696;Set the column names of the auto-generated keys._@see java.sql.Connection#prepareStatement(String, String[]);public void setGeneratedKeysColumnNames(String[] names) {_		if (isCompiled()) {_			throw new InvalidDataAccessApiUsageException(_					"The column names for the generated keys must be set before the operation is compiled")__		}_		this.generatedKeysColumnNames = names__	};set,the,column,names,of,the,auto,generated,keys,see,java,sql,connection,prepare,statement,string,string;public,void,set,generated,keys,column,names,string,names,if,is,compiled,throw,new,invalid,data,access,api,usage,exception,the,column,names,for,the,generated,keys,must,be,set,before,the,operation,is,compiled,this,generated,keys,column,names,names
RdbmsOperation -> public void setGeneratedKeysColumnNames(String[] names);1385412762;Set the column names of the auto-generated keys._@see java.sql.Connection#prepareStatement(String, String[]);public void setGeneratedKeysColumnNames(String[] names) {_		if (isCompiled()) {_			throw new InvalidDataAccessApiUsageException(_					"The column names for the generated keys must be set before the operation is compiled")__		}_		this.generatedKeysColumnNames = names__	};set,the,column,names,of,the,auto,generated,keys,see,java,sql,connection,prepare,statement,string,string;public,void,set,generated,keys,column,names,string,names,if,is,compiled,throw,new,invalid,data,access,api,usage,exception,the,column,names,for,the,generated,keys,must,be,set,before,the,operation,is,compiled,this,generated,keys,column,names,names
RdbmsOperation -> private void validateParameterCount(int suppliedParamCount, int declaredInParamCount);1328020251;Validate the given parameter count against the given declared parameters._@param suppliedParamCount the number of actual parameters given_@param declaredInParamCount the number of input parameters declared;private void validateParameterCount(int suppliedParamCount, int declaredInParamCount) {_		if (suppliedParamCount < declaredInParamCount) {_			throw new InvalidDataAccessApiUsageException(suppliedParamCount + " parameters were supplied, but " +_					declaredInParamCount + " in parameters were declared in class [" + getClass().getName() + "]")__		}_		if (suppliedParamCount > this.declaredParameters.size() && !allowsUnusedParameters()) {_			throw new InvalidDataAccessApiUsageException(suppliedParamCount + " parameters were supplied, but " +_					declaredInParamCount + " parameters were declared in class [" + getClass().getName() + "]")__		}_	};validate,the,given,parameter,count,against,the,given,declared,parameters,param,supplied,param,count,the,number,of,actual,parameters,given,param,declared,in,param,count,the,number,of,input,parameters,declared;private,void,validate,parameter,count,int,supplied,param,count,int,declared,in,param,count,if,supplied,param,count,declared,in,param,count,throw,new,invalid,data,access,api,usage,exception,supplied,param,count,parameters,were,supplied,but,declared,in,param,count,in,parameters,were,declared,in,class,get,class,get,name,if,supplied,param,count,this,declared,parameters,size,allows,unused,parameters,throw,new,invalid,data,access,api,usage,exception,supplied,param,count,parameters,were,supplied,but,declared,in,param,count,parameters,were,declared,in,class,get,class,get,name
RdbmsOperation -> private void validateParameterCount(int suppliedParamCount, int declaredInParamCount);1356735495;Validate the given parameter count against the given declared parameters._@param suppliedParamCount the number of actual parameters given_@param declaredInParamCount the number of input parameters declared;private void validateParameterCount(int suppliedParamCount, int declaredInParamCount) {_		if (suppliedParamCount < declaredInParamCount) {_			throw new InvalidDataAccessApiUsageException(suppliedParamCount + " parameters were supplied, but " +_					declaredInParamCount + " in parameters were declared in class [" + getClass().getName() + "]")__		}_		if (suppliedParamCount > this.declaredParameters.size() && !allowsUnusedParameters()) {_			throw new InvalidDataAccessApiUsageException(suppliedParamCount + " parameters were supplied, but " +_					declaredInParamCount + " parameters were declared in class [" + getClass().getName() + "]")__		}_	};validate,the,given,parameter,count,against,the,given,declared,parameters,param,supplied,param,count,the,number,of,actual,parameters,given,param,declared,in,param,count,the,number,of,input,parameters,declared;private,void,validate,parameter,count,int,supplied,param,count,int,declared,in,param,count,if,supplied,param,count,declared,in,param,count,throw,new,invalid,data,access,api,usage,exception,supplied,param,count,parameters,were,supplied,but,declared,in,param,count,in,parameters,were,declared,in,class,get,class,get,name,if,supplied,param,count,this,declared,parameters,size,allows,unused,parameters,throw,new,invalid,data,access,api,usage,exception,supplied,param,count,parameters,were,supplied,but,declared,in,param,count,parameters,were,declared,in,class,get,class,get,name
RdbmsOperation -> private void validateParameterCount(int suppliedParamCount, int declaredInParamCount);1357119239;Validate the given parameter count against the given declared parameters._@param suppliedParamCount the number of actual parameters given_@param declaredInParamCount the number of input parameters declared;private void validateParameterCount(int suppliedParamCount, int declaredInParamCount) {_		if (suppliedParamCount < declaredInParamCount) {_			throw new InvalidDataAccessApiUsageException(suppliedParamCount + " parameters were supplied, but " +_					declaredInParamCount + " in parameters were declared in class [" + getClass().getName() + "]")__		}_		if (suppliedParamCount > this.declaredParameters.size() && !allowsUnusedParameters()) {_			throw new InvalidDataAccessApiUsageException(suppliedParamCount + " parameters were supplied, but " +_					declaredInParamCount + " parameters were declared in class [" + getClass().getName() + "]")__		}_	};validate,the,given,parameter,count,against,the,given,declared,parameters,param,supplied,param,count,the,number,of,actual,parameters,given,param,declared,in,param,count,the,number,of,input,parameters,declared;private,void,validate,parameter,count,int,supplied,param,count,int,declared,in,param,count,if,supplied,param,count,declared,in,param,count,throw,new,invalid,data,access,api,usage,exception,supplied,param,count,parameters,were,supplied,but,declared,in,param,count,in,parameters,were,declared,in,class,get,class,get,name,if,supplied,param,count,this,declared,parameters,size,allows,unused,parameters,throw,new,invalid,data,access,api,usage,exception,supplied,param,count,parameters,were,supplied,but,declared,in,param,count,parameters,were,declared,in,class,get,class,get,name
RdbmsOperation -> private void validateParameterCount(int suppliedParamCount, int declaredInParamCount);1368482696;Validate the given parameter count against the given declared parameters._@param suppliedParamCount the number of actual parameters given_@param declaredInParamCount the number of input parameters declared;private void validateParameterCount(int suppliedParamCount, int declaredInParamCount) {_		if (suppliedParamCount < declaredInParamCount) {_			throw new InvalidDataAccessApiUsageException(suppliedParamCount + " parameters were supplied, but " +_					declaredInParamCount + " in parameters were declared in class [" + getClass().getName() + "]")__		}_		if (suppliedParamCount > this.declaredParameters.size() && !allowsUnusedParameters()) {_			throw new InvalidDataAccessApiUsageException(suppliedParamCount + " parameters were supplied, but " +_					declaredInParamCount + " parameters were declared in class [" + getClass().getName() + "]")__		}_	};validate,the,given,parameter,count,against,the,given,declared,parameters,param,supplied,param,count,the,number,of,actual,parameters,given,param,declared,in,param,count,the,number,of,input,parameters,declared;private,void,validate,parameter,count,int,supplied,param,count,int,declared,in,param,count,if,supplied,param,count,declared,in,param,count,throw,new,invalid,data,access,api,usage,exception,supplied,param,count,parameters,were,supplied,but,declared,in,param,count,in,parameters,were,declared,in,class,get,class,get,name,if,supplied,param,count,this,declared,parameters,size,allows,unused,parameters,throw,new,invalid,data,access,api,usage,exception,supplied,param,count,parameters,were,supplied,but,declared,in,param,count,parameters,were,declared,in,class,get,class,get,name
RdbmsOperation -> private void validateParameterCount(int suppliedParamCount, int declaredInParamCount);1385412762;Validate the given parameter count against the given declared parameters._@param suppliedParamCount the number of actual parameters given_@param declaredInParamCount the number of input parameters declared;private void validateParameterCount(int suppliedParamCount, int declaredInParamCount) {_		if (suppliedParamCount < declaredInParamCount) {_			throw new InvalidDataAccessApiUsageException(suppliedParamCount + " parameters were supplied, but " +_					declaredInParamCount + " in parameters were declared in class [" + getClass().getName() + "]")__		}_		if (suppliedParamCount > this.declaredParameters.size() && !allowsUnusedParameters()) {_			throw new InvalidDataAccessApiUsageException(suppliedParamCount + " parameters were supplied, but " +_					declaredInParamCount + " parameters were declared in class [" + getClass().getName() + "]")__		}_	};validate,the,given,parameter,count,against,the,given,declared,parameters,param,supplied,param,count,the,number,of,actual,parameters,given,param,declared,in,param,count,the,number,of,input,parameters,declared;private,void,validate,parameter,count,int,supplied,param,count,int,declared,in,param,count,if,supplied,param,count,declared,in,param,count,throw,new,invalid,data,access,api,usage,exception,supplied,param,count,parameters,were,supplied,but,declared,in,param,count,in,parameters,were,declared,in,class,get,class,get,name,if,supplied,param,count,this,declared,parameters,size,allows,unused,parameters,throw,new,invalid,data,access,api,usage,exception,supplied,param,count,parameters,were,supplied,but,declared,in,param,count,parameters,were,declared,in,class,get,class,get,name
RdbmsOperation -> private void validateParameterCount(int suppliedParamCount, int declaredInParamCount);1407511029;Validate the given parameter count against the given declared parameters._@param suppliedParamCount the number of actual parameters given_@param declaredInParamCount the number of input parameters declared;private void validateParameterCount(int suppliedParamCount, int declaredInParamCount) {_		if (suppliedParamCount < declaredInParamCount) {_			throw new InvalidDataAccessApiUsageException(suppliedParamCount + " parameters were supplied, but " +_					declaredInParamCount + " in parameters were declared in class [" + getClass().getName() + "]")__		}_		if (suppliedParamCount > this.declaredParameters.size() && !allowsUnusedParameters()) {_			throw new InvalidDataAccessApiUsageException(suppliedParamCount + " parameters were supplied, but " +_					declaredInParamCount + " parameters were declared in class [" + getClass().getName() + "]")__		}_	};validate,the,given,parameter,count,against,the,given,declared,parameters,param,supplied,param,count,the,number,of,actual,parameters,given,param,declared,in,param,count,the,number,of,input,parameters,declared;private,void,validate,parameter,count,int,supplied,param,count,int,declared,in,param,count,if,supplied,param,count,declared,in,param,count,throw,new,invalid,data,access,api,usage,exception,supplied,param,count,parameters,were,supplied,but,declared,in,param,count,in,parameters,were,declared,in,class,get,class,get,name,if,supplied,param,count,this,declared,parameters,size,allows,unused,parameters,throw,new,invalid,data,access,api,usage,exception,supplied,param,count,parameters,were,supplied,but,declared,in,param,count,parameters,were,declared,in,class,get,class,get,name
RdbmsOperation -> private void validateParameterCount(int suppliedParamCount, int declaredInParamCount);1446038912;Validate the given parameter count against the given declared parameters._@param suppliedParamCount the number of actual parameters given_@param declaredInParamCount the number of input parameters declared;private void validateParameterCount(int suppliedParamCount, int declaredInParamCount) {_		if (suppliedParamCount < declaredInParamCount) {_			throw new InvalidDataAccessApiUsageException(suppliedParamCount + " parameters were supplied, but " +_					declaredInParamCount + " in parameters were declared in class [" + getClass().getName() + "]")__		}_		if (suppliedParamCount > this.declaredParameters.size() && !allowsUnusedParameters()) {_			throw new InvalidDataAccessApiUsageException(suppliedParamCount + " parameters were supplied, but " +_					declaredInParamCount + " parameters were declared in class [" + getClass().getName() + "]")__		}_	};validate,the,given,parameter,count,against,the,given,declared,parameters,param,supplied,param,count,the,number,of,actual,parameters,given,param,declared,in,param,count,the,number,of,input,parameters,declared;private,void,validate,parameter,count,int,supplied,param,count,int,declared,in,param,count,if,supplied,param,count,declared,in,param,count,throw,new,invalid,data,access,api,usage,exception,supplied,param,count,parameters,were,supplied,but,declared,in,param,count,in,parameters,were,declared,in,class,get,class,get,name,if,supplied,param,count,this,declared,parameters,size,allows,unused,parameters,throw,new,invalid,data,access,api,usage,exception,supplied,param,count,parameters,were,supplied,but,declared,in,param,count,parameters,were,declared,in,class,get,class,get,name
RdbmsOperation -> private void validateParameterCount(int suppliedParamCount, int declaredInParamCount);1467730834;Validate the given parameter count against the given declared parameters._@param suppliedParamCount the number of actual parameters given_@param declaredInParamCount the number of input parameters declared;private void validateParameterCount(int suppliedParamCount, int declaredInParamCount) {_		if (suppliedParamCount < declaredInParamCount) {_			throw new InvalidDataAccessApiUsageException(suppliedParamCount + " parameters were supplied, but " +_					declaredInParamCount + " in parameters were declared in class [" + getClass().getName() + "]")__		}_		if (suppliedParamCount > this.declaredParameters.size() && !allowsUnusedParameters()) {_			throw new InvalidDataAccessApiUsageException(suppliedParamCount + " parameters were supplied, but " +_					declaredInParamCount + " parameters were declared in class [" + getClass().getName() + "]")__		}_	};validate,the,given,parameter,count,against,the,given,declared,parameters,param,supplied,param,count,the,number,of,actual,parameters,given,param,declared,in,param,count,the,number,of,input,parameters,declared;private,void,validate,parameter,count,int,supplied,param,count,int,declared,in,param,count,if,supplied,param,count,declared,in,param,count,throw,new,invalid,data,access,api,usage,exception,supplied,param,count,parameters,were,supplied,but,declared,in,param,count,in,parameters,were,declared,in,class,get,class,get,name,if,supplied,param,count,this,declared,parameters,size,allows,unused,parameters,throw,new,invalid,data,access,api,usage,exception,supplied,param,count,parameters,were,supplied,but,declared,in,param,count,parameters,were,declared,in,class,get,class,get,name
RdbmsOperation -> private void validateParameterCount(int suppliedParamCount, int declaredInParamCount);1495868221;Validate the given parameter count against the given declared parameters._@param suppliedParamCount the number of actual parameters given_@param declaredInParamCount the number of input parameters declared;private void validateParameterCount(int suppliedParamCount, int declaredInParamCount) {_		if (suppliedParamCount < declaredInParamCount) {_			throw new InvalidDataAccessApiUsageException(suppliedParamCount + " parameters were supplied, but " +_					declaredInParamCount + " in parameters were declared in class [" + getClass().getName() + "]")__		}_		if (suppliedParamCount > this.declaredParameters.size() && !allowsUnusedParameters()) {_			throw new InvalidDataAccessApiUsageException(suppliedParamCount + " parameters were supplied, but " +_					declaredInParamCount + " parameters were declared in class [" + getClass().getName() + "]")__		}_	};validate,the,given,parameter,count,against,the,given,declared,parameters,param,supplied,param,count,the,number,of,actual,parameters,given,param,declared,in,param,count,the,number,of,input,parameters,declared;private,void,validate,parameter,count,int,supplied,param,count,int,declared,in,param,count,if,supplied,param,count,declared,in,param,count,throw,new,invalid,data,access,api,usage,exception,supplied,param,count,parameters,were,supplied,but,declared,in,param,count,in,parameters,were,declared,in,class,get,class,get,name,if,supplied,param,count,this,declared,parameters,size,allows,unused,parameters,throw,new,invalid,data,access,api,usage,exception,supplied,param,count,parameters,were,supplied,but,declared,in,param,count,parameters,were,declared,in,class,get,class,get,name
RdbmsOperation -> private void validateParameterCount(int suppliedParamCount, int declaredInParamCount);1496837955;Validate the given parameter count against the given declared parameters._@param suppliedParamCount the number of actual parameters given_@param declaredInParamCount the number of input parameters declared;private void validateParameterCount(int suppliedParamCount, int declaredInParamCount) {_		if (suppliedParamCount < declaredInParamCount) {_			throw new InvalidDataAccessApiUsageException(suppliedParamCount + " parameters were supplied, but " +_					declaredInParamCount + " in parameters were declared in class [" + getClass().getName() + "]")__		}_		if (suppliedParamCount > this.declaredParameters.size() && !allowsUnusedParameters()) {_			throw new InvalidDataAccessApiUsageException(suppliedParamCount + " parameters were supplied, but " +_					declaredInParamCount + " parameters were declared in class [" + getClass().getName() + "]")__		}_	};validate,the,given,parameter,count,against,the,given,declared,parameters,param,supplied,param,count,the,number,of,actual,parameters,given,param,declared,in,param,count,the,number,of,input,parameters,declared;private,void,validate,parameter,count,int,supplied,param,count,int,declared,in,param,count,if,supplied,param,count,declared,in,param,count,throw,new,invalid,data,access,api,usage,exception,supplied,param,count,parameters,were,supplied,but,declared,in,param,count,in,parameters,were,declared,in,class,get,class,get,name,if,supplied,param,count,this,declared,parameters,size,allows,unused,parameters,throw,new,invalid,data,access,api,usage,exception,supplied,param,count,parameters,were,supplied,but,declared,in,param,count,parameters,were,declared,in,class,get,class,get,name
RdbmsOperation -> private void validateParameterCount(int suppliedParamCount, int declaredInParamCount);1498780456;Validate the given parameter count against the given declared parameters._@param suppliedParamCount the number of actual parameters given_@param declaredInParamCount the number of input parameters declared;private void validateParameterCount(int suppliedParamCount, int declaredInParamCount) {_		if (suppliedParamCount < declaredInParamCount) {_			throw new InvalidDataAccessApiUsageException(suppliedParamCount + " parameters were supplied, but " +_					declaredInParamCount + " in parameters were declared in class [" + getClass().getName() + "]")__		}_		if (suppliedParamCount > this.declaredParameters.size() && !allowsUnusedParameters()) {_			throw new InvalidDataAccessApiUsageException(suppliedParamCount + " parameters were supplied, but " +_					declaredInParamCount + " parameters were declared in class [" + getClass().getName() + "]")__		}_	};validate,the,given,parameter,count,against,the,given,declared,parameters,param,supplied,param,count,the,number,of,actual,parameters,given,param,declared,in,param,count,the,number,of,input,parameters,declared;private,void,validate,parameter,count,int,supplied,param,count,int,declared,in,param,count,if,supplied,param,count,declared,in,param,count,throw,new,invalid,data,access,api,usage,exception,supplied,param,count,parameters,were,supplied,but,declared,in,param,count,in,parameters,were,declared,in,class,get,class,get,name,if,supplied,param,count,this,declared,parameters,size,allows,unused,parameters,throw,new,invalid,data,access,api,usage,exception,supplied,param,count,parameters,were,supplied,but,declared,in,param,count,parameters,were,declared,in,class,get,class,get,name
RdbmsOperation -> private void validateParameterCount(int suppliedParamCount, int declaredInParamCount);1506519613;Validate the given parameter count against the given declared parameters._@param suppliedParamCount the number of actual parameters given_@param declaredInParamCount the number of input parameters declared;private void validateParameterCount(int suppliedParamCount, int declaredInParamCount) {_		if (suppliedParamCount < declaredInParamCount) {_			throw new InvalidDataAccessApiUsageException(suppliedParamCount + " parameters were supplied, but " +_					declaredInParamCount + " in parameters were declared in class [" + getClass().getName() + "]")__		}_		if (suppliedParamCount > this.declaredParameters.size() && !allowsUnusedParameters()) {_			throw new InvalidDataAccessApiUsageException(suppliedParamCount + " parameters were supplied, but " +_					declaredInParamCount + " parameters were declared in class [" + getClass().getName() + "]")__		}_	};validate,the,given,parameter,count,against,the,given,declared,parameters,param,supplied,param,count,the,number,of,actual,parameters,given,param,declared,in,param,count,the,number,of,input,parameters,declared;private,void,validate,parameter,count,int,supplied,param,count,int,declared,in,param,count,if,supplied,param,count,declared,in,param,count,throw,new,invalid,data,access,api,usage,exception,supplied,param,count,parameters,were,supplied,but,declared,in,param,count,in,parameters,were,declared,in,class,get,class,get,name,if,supplied,param,count,this,declared,parameters,size,allows,unused,parameters,throw,new,invalid,data,access,api,usage,exception,supplied,param,count,parameters,were,supplied,but,declared,in,param,count,parameters,were,declared,in,class,get,class,get,name
RdbmsOperation -> private void validateParameterCount(int suppliedParamCount, int declaredInParamCount);1525966356;Validate the given parameter count against the given declared parameters._@param suppliedParamCount the number of actual parameters given_@param declaredInParamCount the number of input parameters declared;private void validateParameterCount(int suppliedParamCount, int declaredInParamCount) {_		if (suppliedParamCount < declaredInParamCount) {_			throw new InvalidDataAccessApiUsageException(suppliedParamCount + " parameters were supplied, but " +_					declaredInParamCount + " in parameters were declared in class [" + getClass().getName() + "]")__		}_		if (suppliedParamCount > this.declaredParameters.size() && !allowsUnusedParameters()) {_			throw new InvalidDataAccessApiUsageException(suppliedParamCount + " parameters were supplied, but " +_					declaredInParamCount + " parameters were declared in class [" + getClass().getName() + "]")__		}_	};validate,the,given,parameter,count,against,the,given,declared,parameters,param,supplied,param,count,the,number,of,actual,parameters,given,param,declared,in,param,count,the,number,of,input,parameters,declared;private,void,validate,parameter,count,int,supplied,param,count,int,declared,in,param,count,if,supplied,param,count,declared,in,param,count,throw,new,invalid,data,access,api,usage,exception,supplied,param,count,parameters,were,supplied,but,declared,in,param,count,in,parameters,were,declared,in,class,get,class,get,name,if,supplied,param,count,this,declared,parameters,size,allows,unused,parameters,throw,new,invalid,data,access,api,usage,exception,supplied,param,count,parameters,were,supplied,but,declared,in,param,count,parameters,were,declared,in,class,get,class,get,name
RdbmsOperation -> private void validateParameterCount(int suppliedParamCount, int declaredInParamCount);1530174524;Validate the given parameter count against the given declared parameters._@param suppliedParamCount the number of actual parameters given_@param declaredInParamCount the number of input parameters declared;private void validateParameterCount(int suppliedParamCount, int declaredInParamCount) {_		if (suppliedParamCount < declaredInParamCount) {_			throw new InvalidDataAccessApiUsageException(suppliedParamCount + " parameters were supplied, but " +_					declaredInParamCount + " in parameters were declared in class [" + getClass().getName() + "]")__		}_		if (suppliedParamCount > this.declaredParameters.size() && !allowsUnusedParameters()) {_			throw new InvalidDataAccessApiUsageException(suppliedParamCount + " parameters were supplied, but " +_					declaredInParamCount + " parameters were declared in class [" + getClass().getName() + "]")__		}_	};validate,the,given,parameter,count,against,the,given,declared,parameters,param,supplied,param,count,the,number,of,actual,parameters,given,param,declared,in,param,count,the,number,of,input,parameters,declared;private,void,validate,parameter,count,int,supplied,param,count,int,declared,in,param,count,if,supplied,param,count,declared,in,param,count,throw,new,invalid,data,access,api,usage,exception,supplied,param,count,parameters,were,supplied,but,declared,in,param,count,in,parameters,were,declared,in,class,get,class,get,name,if,supplied,param,count,this,declared,parameters,size,allows,unused,parameters,throw,new,invalid,data,access,api,usage,exception,supplied,param,count,parameters,were,supplied,but,declared,in,param,count,parameters,were,declared,in,class,get,class,get,name
RdbmsOperation -> private void validateParameterCount(int suppliedParamCount, int declaredInParamCount);1542899558;Validate the given parameter count against the given declared parameters._@param suppliedParamCount the number of actual parameters given_@param declaredInParamCount the number of input parameters declared;private void validateParameterCount(int suppliedParamCount, int declaredInParamCount) {_		if (suppliedParamCount < declaredInParamCount) {_			throw new InvalidDataAccessApiUsageException(suppliedParamCount + " parameters were supplied, but " +_					declaredInParamCount + " in parameters were declared in class [" + getClass().getName() + "]")__		}_		if (suppliedParamCount > this.declaredParameters.size() && !allowsUnusedParameters()) {_			throw new InvalidDataAccessApiUsageException(suppliedParamCount + " parameters were supplied, but " +_					declaredInParamCount + " parameters were declared in class [" + getClass().getName() + "]")__		}_	};validate,the,given,parameter,count,against,the,given,declared,parameters,param,supplied,param,count,the,number,of,actual,parameters,given,param,declared,in,param,count,the,number,of,input,parameters,declared;private,void,validate,parameter,count,int,supplied,param,count,int,declared,in,param,count,if,supplied,param,count,declared,in,param,count,throw,new,invalid,data,access,api,usage,exception,supplied,param,count,parameters,were,supplied,but,declared,in,param,count,in,parameters,were,declared,in,class,get,class,get,name,if,supplied,param,count,this,declared,parameters,size,allows,unused,parameters,throw,new,invalid,data,access,api,usage,exception,supplied,param,count,parameters,were,supplied,but,declared,in,param,count,parameters,were,declared,in,class,get,class,get,name
RdbmsOperation -> public void setResultSetType(int resultSetType);1328020251;Set whether to use statements that return a specific type of ResultSet._@param resultSetType the ResultSet type_@see java.sql.ResultSet#TYPE_FORWARD_ONLY_@see java.sql.ResultSet#TYPE_SCROLL_INSENSITIVE_@see java.sql.ResultSet#TYPE_SCROLL_SENSITIVE_@see java.sql.Connection#prepareStatement(String, int, int);public void setResultSetType(int resultSetType) {_		this.resultSetType = resultSetType__	};set,whether,to,use,statements,that,return,a,specific,type,of,result,set,param,result,set,type,the,result,set,type,see,java,sql,result,set,see,java,sql,result,set,see,java,sql,result,set,see,java,sql,connection,prepare,statement,string,int,int;public,void,set,result,set,type,int,result,set,type,this,result,set,type,result,set,type
RdbmsOperation -> public void setResultSetType(int resultSetType);1356735495;Set whether to use statements that return a specific type of ResultSet._@param resultSetType the ResultSet type_@see java.sql.ResultSet#TYPE_FORWARD_ONLY_@see java.sql.ResultSet#TYPE_SCROLL_INSENSITIVE_@see java.sql.ResultSet#TYPE_SCROLL_SENSITIVE_@see java.sql.Connection#prepareStatement(String, int, int);public void setResultSetType(int resultSetType) {_		this.resultSetType = resultSetType__	};set,whether,to,use,statements,that,return,a,specific,type,of,result,set,param,result,set,type,the,result,set,type,see,java,sql,result,set,see,java,sql,result,set,see,java,sql,result,set,see,java,sql,connection,prepare,statement,string,int,int;public,void,set,result,set,type,int,result,set,type,this,result,set,type,result,set,type
RdbmsOperation -> public void setResultSetType(int resultSetType);1357119239;Set whether to use statements that return a specific type of ResultSet._@param resultSetType the ResultSet type_@see java.sql.ResultSet#TYPE_FORWARD_ONLY_@see java.sql.ResultSet#TYPE_SCROLL_INSENSITIVE_@see java.sql.ResultSet#TYPE_SCROLL_SENSITIVE_@see java.sql.Connection#prepareStatement(String, int, int);public void setResultSetType(int resultSetType) {_		this.resultSetType = resultSetType__	};set,whether,to,use,statements,that,return,a,specific,type,of,result,set,param,result,set,type,the,result,set,type,see,java,sql,result,set,see,java,sql,result,set,see,java,sql,result,set,see,java,sql,connection,prepare,statement,string,int,int;public,void,set,result,set,type,int,result,set,type,this,result,set,type,result,set,type
RdbmsOperation -> public void setResultSetType(int resultSetType);1368482696;Set whether to use statements that return a specific type of ResultSet._@param resultSetType the ResultSet type_@see java.sql.ResultSet#TYPE_FORWARD_ONLY_@see java.sql.ResultSet#TYPE_SCROLL_INSENSITIVE_@see java.sql.ResultSet#TYPE_SCROLL_SENSITIVE_@see java.sql.Connection#prepareStatement(String, int, int);public void setResultSetType(int resultSetType) {_		this.resultSetType = resultSetType__	};set,whether,to,use,statements,that,return,a,specific,type,of,result,set,param,result,set,type,the,result,set,type,see,java,sql,result,set,see,java,sql,result,set,see,java,sql,result,set,see,java,sql,connection,prepare,statement,string,int,int;public,void,set,result,set,type,int,result,set,type,this,result,set,type,result,set,type
RdbmsOperation -> public void setResultSetType(int resultSetType);1385412762;Set whether to use statements that return a specific type of ResultSet._@param resultSetType the ResultSet type_@see java.sql.ResultSet#TYPE_FORWARD_ONLY_@see java.sql.ResultSet#TYPE_SCROLL_INSENSITIVE_@see java.sql.ResultSet#TYPE_SCROLL_SENSITIVE_@see java.sql.Connection#prepareStatement(String, int, int);public void setResultSetType(int resultSetType) {_		this.resultSetType = resultSetType__	};set,whether,to,use,statements,that,return,a,specific,type,of,result,set,param,result,set,type,the,result,set,type,see,java,sql,result,set,see,java,sql,result,set,see,java,sql,result,set,see,java,sql,connection,prepare,statement,string,int,int;public,void,set,result,set,type,int,result,set,type,this,result,set,type,result,set,type
RdbmsOperation -> public void setResultSetType(int resultSetType);1407511029;Set whether to use statements that return a specific type of ResultSet._@param resultSetType the ResultSet type_@see java.sql.ResultSet#TYPE_FORWARD_ONLY_@see java.sql.ResultSet#TYPE_SCROLL_INSENSITIVE_@see java.sql.ResultSet#TYPE_SCROLL_SENSITIVE_@see java.sql.Connection#prepareStatement(String, int, int);public void setResultSetType(int resultSetType) {_		this.resultSetType = resultSetType__	};set,whether,to,use,statements,that,return,a,specific,type,of,result,set,param,result,set,type,the,result,set,type,see,java,sql,result,set,see,java,sql,result,set,see,java,sql,result,set,see,java,sql,connection,prepare,statement,string,int,int;public,void,set,result,set,type,int,result,set,type,this,result,set,type,result,set,type
RdbmsOperation -> public void setResultSetType(int resultSetType);1446038912;Set whether to use statements that return a specific type of ResultSet._@param resultSetType the ResultSet type_@see java.sql.ResultSet#TYPE_FORWARD_ONLY_@see java.sql.ResultSet#TYPE_SCROLL_INSENSITIVE_@see java.sql.ResultSet#TYPE_SCROLL_SENSITIVE_@see java.sql.Connection#prepareStatement(String, int, int);public void setResultSetType(int resultSetType) {_		this.resultSetType = resultSetType__	};set,whether,to,use,statements,that,return,a,specific,type,of,result,set,param,result,set,type,the,result,set,type,see,java,sql,result,set,see,java,sql,result,set,see,java,sql,result,set,see,java,sql,connection,prepare,statement,string,int,int;public,void,set,result,set,type,int,result,set,type,this,result,set,type,result,set,type
RdbmsOperation -> public void setResultSetType(int resultSetType);1467730834;Set whether to use statements that return a specific type of ResultSet._@param resultSetType the ResultSet type_@see java.sql.ResultSet#TYPE_FORWARD_ONLY_@see java.sql.ResultSet#TYPE_SCROLL_INSENSITIVE_@see java.sql.ResultSet#TYPE_SCROLL_SENSITIVE_@see java.sql.Connection#prepareStatement(String, int, int);public void setResultSetType(int resultSetType) {_		this.resultSetType = resultSetType__	};set,whether,to,use,statements,that,return,a,specific,type,of,result,set,param,result,set,type,the,result,set,type,see,java,sql,result,set,see,java,sql,result,set,see,java,sql,result,set,see,java,sql,connection,prepare,statement,string,int,int;public,void,set,result,set,type,int,result,set,type,this,result,set,type,result,set,type
RdbmsOperation -> public void setResultSetType(int resultSetType);1495868221;Set whether to use statements that return a specific type of ResultSet._@param resultSetType the ResultSet type_@see java.sql.ResultSet#TYPE_FORWARD_ONLY_@see java.sql.ResultSet#TYPE_SCROLL_INSENSITIVE_@see java.sql.ResultSet#TYPE_SCROLL_SENSITIVE_@see java.sql.Connection#prepareStatement(String, int, int);public void setResultSetType(int resultSetType) {_		this.resultSetType = resultSetType__	};set,whether,to,use,statements,that,return,a,specific,type,of,result,set,param,result,set,type,the,result,set,type,see,java,sql,result,set,see,java,sql,result,set,see,java,sql,result,set,see,java,sql,connection,prepare,statement,string,int,int;public,void,set,result,set,type,int,result,set,type,this,result,set,type,result,set,type
RdbmsOperation -> public void setResultSetType(int resultSetType);1496837955;Set whether to use statements that return a specific type of ResultSet._@param resultSetType the ResultSet type_@see java.sql.ResultSet#TYPE_FORWARD_ONLY_@see java.sql.ResultSet#TYPE_SCROLL_INSENSITIVE_@see java.sql.ResultSet#TYPE_SCROLL_SENSITIVE_@see java.sql.Connection#prepareStatement(String, int, int);public void setResultSetType(int resultSetType) {_		this.resultSetType = resultSetType__	};set,whether,to,use,statements,that,return,a,specific,type,of,result,set,param,result,set,type,the,result,set,type,see,java,sql,result,set,see,java,sql,result,set,see,java,sql,result,set,see,java,sql,connection,prepare,statement,string,int,int;public,void,set,result,set,type,int,result,set,type,this,result,set,type,result,set,type
RdbmsOperation -> public void setResultSetType(int resultSetType);1498780456;Set whether to use statements that return a specific type of ResultSet._@param resultSetType the ResultSet type_@see java.sql.ResultSet#TYPE_FORWARD_ONLY_@see java.sql.ResultSet#TYPE_SCROLL_INSENSITIVE_@see java.sql.ResultSet#TYPE_SCROLL_SENSITIVE_@see java.sql.Connection#prepareStatement(String, int, int);public void setResultSetType(int resultSetType) {_		this.resultSetType = resultSetType__	};set,whether,to,use,statements,that,return,a,specific,type,of,result,set,param,result,set,type,the,result,set,type,see,java,sql,result,set,see,java,sql,result,set,see,java,sql,result,set,see,java,sql,connection,prepare,statement,string,int,int;public,void,set,result,set,type,int,result,set,type,this,result,set,type,result,set,type
RdbmsOperation -> public void setResultSetType(int resultSetType);1506519613;Set whether to use statements that return a specific type of ResultSet._@param resultSetType the ResultSet type_@see java.sql.ResultSet#TYPE_FORWARD_ONLY_@see java.sql.ResultSet#TYPE_SCROLL_INSENSITIVE_@see java.sql.ResultSet#TYPE_SCROLL_SENSITIVE_@see java.sql.Connection#prepareStatement(String, int, int);public void setResultSetType(int resultSetType) {_		this.resultSetType = resultSetType__	};set,whether,to,use,statements,that,return,a,specific,type,of,result,set,param,result,set,type,the,result,set,type,see,java,sql,result,set,see,java,sql,result,set,see,java,sql,result,set,see,java,sql,connection,prepare,statement,string,int,int;public,void,set,result,set,type,int,result,set,type,this,result,set,type,result,set,type
RdbmsOperation -> public void setResultSetType(int resultSetType);1525966356;Set whether to use statements that return a specific type of ResultSet._@param resultSetType the ResultSet type_@see java.sql.ResultSet#TYPE_FORWARD_ONLY_@see java.sql.ResultSet#TYPE_SCROLL_INSENSITIVE_@see java.sql.ResultSet#TYPE_SCROLL_SENSITIVE_@see java.sql.Connection#prepareStatement(String, int, int);public void setResultSetType(int resultSetType) {_		this.resultSetType = resultSetType__	};set,whether,to,use,statements,that,return,a,specific,type,of,result,set,param,result,set,type,the,result,set,type,see,java,sql,result,set,see,java,sql,result,set,see,java,sql,result,set,see,java,sql,connection,prepare,statement,string,int,int;public,void,set,result,set,type,int,result,set,type,this,result,set,type,result,set,type
RdbmsOperation -> public void setResultSetType(int resultSetType);1530174524;Set whether to use statements that return a specific type of ResultSet._@param resultSetType the ResultSet type_@see java.sql.ResultSet#TYPE_FORWARD_ONLY_@see java.sql.ResultSet#TYPE_SCROLL_INSENSITIVE_@see java.sql.ResultSet#TYPE_SCROLL_SENSITIVE_@see java.sql.Connection#prepareStatement(String, int, int);public void setResultSetType(int resultSetType) {_		this.resultSetType = resultSetType__	};set,whether,to,use,statements,that,return,a,specific,type,of,result,set,param,result,set,type,the,result,set,type,see,java,sql,result,set,see,java,sql,result,set,see,java,sql,result,set,see,java,sql,connection,prepare,statement,string,int,int;public,void,set,result,set,type,int,result,set,type,this,result,set,type,result,set,type
RdbmsOperation -> public void setResultSetType(int resultSetType);1542899558;Set whether to use statements that return a specific type of ResultSet._@param resultSetType the ResultSet type_@see java.sql.ResultSet#TYPE_FORWARD_ONLY_@see java.sql.ResultSet#TYPE_SCROLL_INSENSITIVE_@see java.sql.ResultSet#TYPE_SCROLL_SENSITIVE_@see java.sql.Connection#prepareStatement(String, int, int);public void setResultSetType(int resultSetType) {_		this.resultSetType = resultSetType__	};set,whether,to,use,statements,that,return,a,specific,type,of,result,set,param,result,set,type,the,result,set,type,see,java,sql,result,set,see,java,sql,result,set,see,java,sql,result,set,see,java,sql,connection,prepare,statement,string,int,int;public,void,set,result,set,type,int,result,set,type,this,result,set,type,result,set,type
RdbmsOperation -> protected List<SqlParameter> getDeclaredParameters();1328020251;Return a list of the declared {@link SqlParameter} objects.;protected List<SqlParameter> getDeclaredParameters() {_		return this.declaredParameters__	};return,a,list,of,the,declared,link,sql,parameter,objects;protected,list,sql,parameter,get,declared,parameters,return,this,declared,parameters
RdbmsOperation -> protected List<SqlParameter> getDeclaredParameters();1356735495;Return a list of the declared {@link SqlParameter} objects.;protected List<SqlParameter> getDeclaredParameters() {_		return this.declaredParameters__	};return,a,list,of,the,declared,link,sql,parameter,objects;protected,list,sql,parameter,get,declared,parameters,return,this,declared,parameters
RdbmsOperation -> protected List<SqlParameter> getDeclaredParameters();1357119239;Return a list of the declared {@link SqlParameter} objects.;protected List<SqlParameter> getDeclaredParameters() {_		return this.declaredParameters__	};return,a,list,of,the,declared,link,sql,parameter,objects;protected,list,sql,parameter,get,declared,parameters,return,this,declared,parameters
RdbmsOperation -> protected List<SqlParameter> getDeclaredParameters();1368482696;Return a list of the declared {@link SqlParameter} objects.;protected List<SqlParameter> getDeclaredParameters() {_		return this.declaredParameters__	};return,a,list,of,the,declared,link,sql,parameter,objects;protected,list,sql,parameter,get,declared,parameters,return,this,declared,parameters
RdbmsOperation -> protected List<SqlParameter> getDeclaredParameters();1385412762;Return a list of the declared {@link SqlParameter} objects.;protected List<SqlParameter> getDeclaredParameters() {_		return this.declaredParameters__	};return,a,list,of,the,declared,link,sql,parameter,objects;protected,list,sql,parameter,get,declared,parameters,return,this,declared,parameters
RdbmsOperation -> protected List<SqlParameter> getDeclaredParameters();1407511029;Return a list of the declared {@link SqlParameter} objects.;protected List<SqlParameter> getDeclaredParameters() {_		return this.declaredParameters__	};return,a,list,of,the,declared,link,sql,parameter,objects;protected,list,sql,parameter,get,declared,parameters,return,this,declared,parameters
RdbmsOperation -> protected List<SqlParameter> getDeclaredParameters();1446038912;Return a list of the declared {@link SqlParameter} objects.;protected List<SqlParameter> getDeclaredParameters() {_		return this.declaredParameters__	};return,a,list,of,the,declared,link,sql,parameter,objects;protected,list,sql,parameter,get,declared,parameters,return,this,declared,parameters
RdbmsOperation -> protected List<SqlParameter> getDeclaredParameters();1467730834;Return a list of the declared {@link SqlParameter} objects.;protected List<SqlParameter> getDeclaredParameters() {_		return this.declaredParameters__	};return,a,list,of,the,declared,link,sql,parameter,objects;protected,list,sql,parameter,get,declared,parameters,return,this,declared,parameters
RdbmsOperation -> protected List<SqlParameter> getDeclaredParameters();1495868221;Return a list of the declared {@link SqlParameter} objects.;protected List<SqlParameter> getDeclaredParameters() {_		return this.declaredParameters__	};return,a,list,of,the,declared,link,sql,parameter,objects;protected,list,sql,parameter,get,declared,parameters,return,this,declared,parameters
RdbmsOperation -> protected List<SqlParameter> getDeclaredParameters();1496837955;Return a list of the declared {@link SqlParameter} objects.;protected List<SqlParameter> getDeclaredParameters() {_		return this.declaredParameters__	};return,a,list,of,the,declared,link,sql,parameter,objects;protected,list,sql,parameter,get,declared,parameters,return,this,declared,parameters
RdbmsOperation -> protected List<SqlParameter> getDeclaredParameters();1498780456;Return a list of the declared {@link SqlParameter} objects.;protected List<SqlParameter> getDeclaredParameters() {_		return this.declaredParameters__	};return,a,list,of,the,declared,link,sql,parameter,objects;protected,list,sql,parameter,get,declared,parameters,return,this,declared,parameters
RdbmsOperation -> protected List<SqlParameter> getDeclaredParameters();1506519613;Return a list of the declared {@link SqlParameter} objects.;protected List<SqlParameter> getDeclaredParameters() {_		return this.declaredParameters__	};return,a,list,of,the,declared,link,sql,parameter,objects;protected,list,sql,parameter,get,declared,parameters,return,this,declared,parameters
RdbmsOperation -> protected List<SqlParameter> getDeclaredParameters();1525966356;Return a list of the declared {@link SqlParameter} objects.;protected List<SqlParameter> getDeclaredParameters() {_		return this.declaredParameters__	};return,a,list,of,the,declared,link,sql,parameter,objects;protected,list,sql,parameter,get,declared,parameters,return,this,declared,parameters
RdbmsOperation -> protected List<SqlParameter> getDeclaredParameters();1530174524;Return a list of the declared {@link SqlParameter} objects.;protected List<SqlParameter> getDeclaredParameters() {_		return this.declaredParameters__	};return,a,list,of,the,declared,link,sql,parameter,objects;protected,list,sql,parameter,get,declared,parameters,return,this,declared,parameters
RdbmsOperation -> protected List<SqlParameter> getDeclaredParameters();1542899558;Return a list of the declared {@link SqlParameter} objects.;protected List<SqlParameter> getDeclaredParameters() {_		return this.declaredParameters__	};return,a,list,of,the,declared,link,sql,parameter,objects;protected,list,sql,parameter,get,declared,parameters,return,this,declared,parameters
RdbmsOperation -> protected void validateParameters(Object[] parameters) throws InvalidDataAccessApiUsageException;1328020251;Validate the parameters passed to an execute method based on declared parameters._Subclasses should invoke this method before every <code>executeQuery()</code>_or <code>update()</code> method._@param parameters parameters supplied (may be <code>null</code>)_@throws InvalidDataAccessApiUsageException if the parameters are invalid;protected void validateParameters(Object[] parameters) throws InvalidDataAccessApiUsageException {_		checkCompiled()__		int declaredInParameters = 0__		for (SqlParameter param : this.declaredParameters) {_			if (param.isInputValueProvided()) {_				if (!supportsLobParameters() &&_						(param.getSqlType() == Types.BLOB || param.getSqlType() == Types.CLOB)) {_					throw new InvalidDataAccessApiUsageException(_							"BLOB or CLOB parameters are not allowed for this kind of operation")__				}_				declaredInParameters++__			}_		}_		validateParameterCount((parameters != null ? parameters.length : 0), declaredInParameters)__	};validate,the,parameters,passed,to,an,execute,method,based,on,declared,parameters,subclasses,should,invoke,this,method,before,every,code,execute,query,code,or,code,update,code,method,param,parameters,parameters,supplied,may,be,code,null,code,throws,invalid,data,access,api,usage,exception,if,the,parameters,are,invalid;protected,void,validate,parameters,object,parameters,throws,invalid,data,access,api,usage,exception,check,compiled,int,declared,in,parameters,0,for,sql,parameter,param,this,declared,parameters,if,param,is,input,value,provided,if,supports,lob,parameters,param,get,sql,type,types,blob,param,get,sql,type,types,clob,throw,new,invalid,data,access,api,usage,exception,blob,or,clob,parameters,are,not,allowed,for,this,kind,of,operation,declared,in,parameters,validate,parameter,count,parameters,null,parameters,length,0,declared,in,parameters
RdbmsOperation -> protected void validateParameters(Object[] parameters) throws InvalidDataAccessApiUsageException;1356735495;Validate the parameters passed to an execute method based on declared parameters._Subclasses should invoke this method before every {@code executeQuery()}_or {@code update()} method._@param parameters parameters supplied (may be {@code null})_@throws InvalidDataAccessApiUsageException if the parameters are invalid;protected void validateParameters(Object[] parameters) throws InvalidDataAccessApiUsageException {_		checkCompiled()__		int declaredInParameters = 0__		for (SqlParameter param : this.declaredParameters) {_			if (param.isInputValueProvided()) {_				if (!supportsLobParameters() &&_						(param.getSqlType() == Types.BLOB || param.getSqlType() == Types.CLOB)) {_					throw new InvalidDataAccessApiUsageException(_							"BLOB or CLOB parameters are not allowed for this kind of operation")__				}_				declaredInParameters++__			}_		}_		validateParameterCount((parameters != null ? parameters.length : 0), declaredInParameters)__	};validate,the,parameters,passed,to,an,execute,method,based,on,declared,parameters,subclasses,should,invoke,this,method,before,every,code,execute,query,or,code,update,method,param,parameters,parameters,supplied,may,be,code,null,throws,invalid,data,access,api,usage,exception,if,the,parameters,are,invalid;protected,void,validate,parameters,object,parameters,throws,invalid,data,access,api,usage,exception,check,compiled,int,declared,in,parameters,0,for,sql,parameter,param,this,declared,parameters,if,param,is,input,value,provided,if,supports,lob,parameters,param,get,sql,type,types,blob,param,get,sql,type,types,clob,throw,new,invalid,data,access,api,usage,exception,blob,or,clob,parameters,are,not,allowed,for,this,kind,of,operation,declared,in,parameters,validate,parameter,count,parameters,null,parameters,length,0,declared,in,parameters
RdbmsOperation -> protected void validateParameters(Object[] parameters) throws InvalidDataAccessApiUsageException;1357119239;Validate the parameters passed to an execute method based on declared parameters._Subclasses should invoke this method before every {@code executeQuery()}_or {@code update()} method._@param parameters parameters supplied (may be {@code null})_@throws InvalidDataAccessApiUsageException if the parameters are invalid;protected void validateParameters(Object[] parameters) throws InvalidDataAccessApiUsageException {_		checkCompiled()__		int declaredInParameters = 0__		for (SqlParameter param : this.declaredParameters) {_			if (param.isInputValueProvided()) {_				if (!supportsLobParameters() &&_						(param.getSqlType() == Types.BLOB || param.getSqlType() == Types.CLOB)) {_					throw new InvalidDataAccessApiUsageException(_							"BLOB or CLOB parameters are not allowed for this kind of operation")__				}_				declaredInParameters++__			}_		}_		validateParameterCount((parameters != null ? parameters.length : 0), declaredInParameters)__	};validate,the,parameters,passed,to,an,execute,method,based,on,declared,parameters,subclasses,should,invoke,this,method,before,every,code,execute,query,or,code,update,method,param,parameters,parameters,supplied,may,be,code,null,throws,invalid,data,access,api,usage,exception,if,the,parameters,are,invalid;protected,void,validate,parameters,object,parameters,throws,invalid,data,access,api,usage,exception,check,compiled,int,declared,in,parameters,0,for,sql,parameter,param,this,declared,parameters,if,param,is,input,value,provided,if,supports,lob,parameters,param,get,sql,type,types,blob,param,get,sql,type,types,clob,throw,new,invalid,data,access,api,usage,exception,blob,or,clob,parameters,are,not,allowed,for,this,kind,of,operation,declared,in,parameters,validate,parameter,count,parameters,null,parameters,length,0,declared,in,parameters
RdbmsOperation -> protected void validateParameters(Object[] parameters) throws InvalidDataAccessApiUsageException;1368482696;Validate the parameters passed to an execute method based on declared parameters._Subclasses should invoke this method before every {@code executeQuery()}_or {@code update()} method._@param parameters parameters supplied (may be {@code null})_@throws InvalidDataAccessApiUsageException if the parameters are invalid;protected void validateParameters(Object[] parameters) throws InvalidDataAccessApiUsageException {_		checkCompiled()__		int declaredInParameters = 0__		for (SqlParameter param : this.declaredParameters) {_			if (param.isInputValueProvided()) {_				if (!supportsLobParameters() &&_						(param.getSqlType() == Types.BLOB || param.getSqlType() == Types.CLOB)) {_					throw new InvalidDataAccessApiUsageException(_							"BLOB or CLOB parameters are not allowed for this kind of operation")__				}_				declaredInParameters++__			}_		}_		validateParameterCount((parameters != null ? parameters.length : 0), declaredInParameters)__	};validate,the,parameters,passed,to,an,execute,method,based,on,declared,parameters,subclasses,should,invoke,this,method,before,every,code,execute,query,or,code,update,method,param,parameters,parameters,supplied,may,be,code,null,throws,invalid,data,access,api,usage,exception,if,the,parameters,are,invalid;protected,void,validate,parameters,object,parameters,throws,invalid,data,access,api,usage,exception,check,compiled,int,declared,in,parameters,0,for,sql,parameter,param,this,declared,parameters,if,param,is,input,value,provided,if,supports,lob,parameters,param,get,sql,type,types,blob,param,get,sql,type,types,clob,throw,new,invalid,data,access,api,usage,exception,blob,or,clob,parameters,are,not,allowed,for,this,kind,of,operation,declared,in,parameters,validate,parameter,count,parameters,null,parameters,length,0,declared,in,parameters
RdbmsOperation -> protected void validateParameters(Object[] parameters) throws InvalidDataAccessApiUsageException;1385412762;Validate the parameters passed to an execute method based on declared parameters._Subclasses should invoke this method before every {@code executeQuery()}_or {@code update()} method._@param parameters parameters supplied (may be {@code null})_@throws InvalidDataAccessApiUsageException if the parameters are invalid;protected void validateParameters(Object[] parameters) throws InvalidDataAccessApiUsageException {_		checkCompiled()__		int declaredInParameters = 0__		for (SqlParameter param : this.declaredParameters) {_			if (param.isInputValueProvided()) {_				if (!supportsLobParameters() &&_						(param.getSqlType() == Types.BLOB || param.getSqlType() == Types.CLOB)) {_					throw new InvalidDataAccessApiUsageException(_							"BLOB or CLOB parameters are not allowed for this kind of operation")__				}_				declaredInParameters++__			}_		}_		validateParameterCount((parameters != null ? parameters.length : 0), declaredInParameters)__	};validate,the,parameters,passed,to,an,execute,method,based,on,declared,parameters,subclasses,should,invoke,this,method,before,every,code,execute,query,or,code,update,method,param,parameters,parameters,supplied,may,be,code,null,throws,invalid,data,access,api,usage,exception,if,the,parameters,are,invalid;protected,void,validate,parameters,object,parameters,throws,invalid,data,access,api,usage,exception,check,compiled,int,declared,in,parameters,0,for,sql,parameter,param,this,declared,parameters,if,param,is,input,value,provided,if,supports,lob,parameters,param,get,sql,type,types,blob,param,get,sql,type,types,clob,throw,new,invalid,data,access,api,usage,exception,blob,or,clob,parameters,are,not,allowed,for,this,kind,of,operation,declared,in,parameters,validate,parameter,count,parameters,null,parameters,length,0,declared,in,parameters
RdbmsOperation -> protected void validateParameters(Object[] parameters) throws InvalidDataAccessApiUsageException;1407511029;Validate the parameters passed to an execute method based on declared parameters._Subclasses should invoke this method before every {@code executeQuery()}_or {@code update()} method._@param parameters parameters supplied (may be {@code null})_@throws InvalidDataAccessApiUsageException if the parameters are invalid;protected void validateParameters(Object[] parameters) throws InvalidDataAccessApiUsageException {_		checkCompiled()__		int declaredInParameters = 0__		for (SqlParameter param : this.declaredParameters) {_			if (param.isInputValueProvided()) {_				if (!supportsLobParameters() &&_						(param.getSqlType() == Types.BLOB || param.getSqlType() == Types.CLOB)) {_					throw new InvalidDataAccessApiUsageException(_							"BLOB or CLOB parameters are not allowed for this kind of operation")__				}_				declaredInParameters++__			}_		}_		validateParameterCount((parameters != null ? parameters.length : 0), declaredInParameters)__	};validate,the,parameters,passed,to,an,execute,method,based,on,declared,parameters,subclasses,should,invoke,this,method,before,every,code,execute,query,or,code,update,method,param,parameters,parameters,supplied,may,be,code,null,throws,invalid,data,access,api,usage,exception,if,the,parameters,are,invalid;protected,void,validate,parameters,object,parameters,throws,invalid,data,access,api,usage,exception,check,compiled,int,declared,in,parameters,0,for,sql,parameter,param,this,declared,parameters,if,param,is,input,value,provided,if,supports,lob,parameters,param,get,sql,type,types,blob,param,get,sql,type,types,clob,throw,new,invalid,data,access,api,usage,exception,blob,or,clob,parameters,are,not,allowed,for,this,kind,of,operation,declared,in,parameters,validate,parameter,count,parameters,null,parameters,length,0,declared,in,parameters
RdbmsOperation -> protected void validateParameters(Object[] parameters) throws InvalidDataAccessApiUsageException;1446038912;Validate the parameters passed to an execute method based on declared parameters._Subclasses should invoke this method before every {@code executeQuery()}_or {@code update()} method._@param parameters parameters supplied (may be {@code null})_@throws InvalidDataAccessApiUsageException if the parameters are invalid;protected void validateParameters(Object[] parameters) throws InvalidDataAccessApiUsageException {_		checkCompiled()__		int declaredInParameters = 0__		for (SqlParameter param : this.declaredParameters) {_			if (param.isInputValueProvided()) {_				if (!supportsLobParameters() &&_						(param.getSqlType() == Types.BLOB || param.getSqlType() == Types.CLOB)) {_					throw new InvalidDataAccessApiUsageException(_							"BLOB or CLOB parameters are not allowed for this kind of operation")__				}_				declaredInParameters++__			}_		}_		validateParameterCount((parameters != null ? parameters.length : 0), declaredInParameters)__	};validate,the,parameters,passed,to,an,execute,method,based,on,declared,parameters,subclasses,should,invoke,this,method,before,every,code,execute,query,or,code,update,method,param,parameters,parameters,supplied,may,be,code,null,throws,invalid,data,access,api,usage,exception,if,the,parameters,are,invalid;protected,void,validate,parameters,object,parameters,throws,invalid,data,access,api,usage,exception,check,compiled,int,declared,in,parameters,0,for,sql,parameter,param,this,declared,parameters,if,param,is,input,value,provided,if,supports,lob,parameters,param,get,sql,type,types,blob,param,get,sql,type,types,clob,throw,new,invalid,data,access,api,usage,exception,blob,or,clob,parameters,are,not,allowed,for,this,kind,of,operation,declared,in,parameters,validate,parameter,count,parameters,null,parameters,length,0,declared,in,parameters
RdbmsOperation -> protected void validateParameters(Object[] parameters) throws InvalidDataAccessApiUsageException;1467730834;Validate the parameters passed to an execute method based on declared parameters._Subclasses should invoke this method before every {@code executeQuery()}_or {@code update()} method._@param parameters parameters supplied (may be {@code null})_@throws InvalidDataAccessApiUsageException if the parameters are invalid;protected void validateParameters(Object[] parameters) throws InvalidDataAccessApiUsageException {_		checkCompiled()__		int declaredInParameters = 0__		for (SqlParameter param : this.declaredParameters) {_			if (param.isInputValueProvided()) {_				if (!supportsLobParameters() &&_						(param.getSqlType() == Types.BLOB || param.getSqlType() == Types.CLOB)) {_					throw new InvalidDataAccessApiUsageException(_							"BLOB or CLOB parameters are not allowed for this kind of operation")__				}_				declaredInParameters++__			}_		}_		validateParameterCount((parameters != null ? parameters.length : 0), declaredInParameters)__	};validate,the,parameters,passed,to,an,execute,method,based,on,declared,parameters,subclasses,should,invoke,this,method,before,every,code,execute,query,or,code,update,method,param,parameters,parameters,supplied,may,be,code,null,throws,invalid,data,access,api,usage,exception,if,the,parameters,are,invalid;protected,void,validate,parameters,object,parameters,throws,invalid,data,access,api,usage,exception,check,compiled,int,declared,in,parameters,0,for,sql,parameter,param,this,declared,parameters,if,param,is,input,value,provided,if,supports,lob,parameters,param,get,sql,type,types,blob,param,get,sql,type,types,clob,throw,new,invalid,data,access,api,usage,exception,blob,or,clob,parameters,are,not,allowed,for,this,kind,of,operation,declared,in,parameters,validate,parameter,count,parameters,null,parameters,length,0,declared,in,parameters
RdbmsOperation -> public void setParameters(SqlParameter[] parameters);1328020251;Add one or more declared parameters. Used for configuring this operation_when used in a bean factory.  Each parameter will specify SQL type and (optionally)_the parameter's name._@param parameters Array containing the declared {@link SqlParameter} objects_@see #declaredParameters;public void setParameters(SqlParameter[] parameters) {_		if (isCompiled()) {_			throw new InvalidDataAccessApiUsageException("Cannot add parameters once the query is compiled")__		}_		for (int i = 0_ i < parameters.length_ i++) {_			if (parameters[i] != null) {_				this.declaredParameters.add(parameters[i])__			}_			else {_				throw new InvalidDataAccessApiUsageException("Cannot add parameter at index " + i + " from " +_						Arrays.asList(parameters) + " since it is 'null'")__			}_		}_	};add,one,or,more,declared,parameters,used,for,configuring,this,operation,when,used,in,a,bean,factory,each,parameter,will,specify,sql,type,and,optionally,the,parameter,s,name,param,parameters,array,containing,the,declared,link,sql,parameter,objects,see,declared,parameters;public,void,set,parameters,sql,parameter,parameters,if,is,compiled,throw,new,invalid,data,access,api,usage,exception,cannot,add,parameters,once,the,query,is,compiled,for,int,i,0,i,parameters,length,i,if,parameters,i,null,this,declared,parameters,add,parameters,i,else,throw,new,invalid,data,access,api,usage,exception,cannot,add,parameter,at,index,i,from,arrays,as,list,parameters,since,it,is,null
RdbmsOperation -> public void setParameters(SqlParameter[] parameters);1356735495;Add one or more declared parameters. Used for configuring this operation_when used in a bean factory.  Each parameter will specify SQL type and (optionally)_the parameter's name._@param parameters Array containing the declared {@link SqlParameter} objects_@see #declaredParameters;public void setParameters(SqlParameter[] parameters) {_		if (isCompiled()) {_			throw new InvalidDataAccessApiUsageException("Cannot add parameters once the query is compiled")__		}_		for (int i = 0_ i < parameters.length_ i++) {_			if (parameters[i] != null) {_				this.declaredParameters.add(parameters[i])__			}_			else {_				throw new InvalidDataAccessApiUsageException("Cannot add parameter at index " + i + " from " +_						Arrays.asList(parameters) + " since it is 'null'")__			}_		}_	};add,one,or,more,declared,parameters,used,for,configuring,this,operation,when,used,in,a,bean,factory,each,parameter,will,specify,sql,type,and,optionally,the,parameter,s,name,param,parameters,array,containing,the,declared,link,sql,parameter,objects,see,declared,parameters;public,void,set,parameters,sql,parameter,parameters,if,is,compiled,throw,new,invalid,data,access,api,usage,exception,cannot,add,parameters,once,the,query,is,compiled,for,int,i,0,i,parameters,length,i,if,parameters,i,null,this,declared,parameters,add,parameters,i,else,throw,new,invalid,data,access,api,usage,exception,cannot,add,parameter,at,index,i,from,arrays,as,list,parameters,since,it,is,null
RdbmsOperation -> public void setParameters(SqlParameter[] parameters);1357119239;Add one or more declared parameters. Used for configuring this operation_when used in a bean factory.  Each parameter will specify SQL type and (optionally)_the parameter's name._@param parameters Array containing the declared {@link SqlParameter} objects_@see #declaredParameters;public void setParameters(SqlParameter[] parameters) {_		if (isCompiled()) {_			throw new InvalidDataAccessApiUsageException("Cannot add parameters once the query is compiled")__		}_		for (int i = 0_ i < parameters.length_ i++) {_			if (parameters[i] != null) {_				this.declaredParameters.add(parameters[i])__			}_			else {_				throw new InvalidDataAccessApiUsageException("Cannot add parameter at index " + i + " from " +_						Arrays.asList(parameters) + " since it is 'null'")__			}_		}_	};add,one,or,more,declared,parameters,used,for,configuring,this,operation,when,used,in,a,bean,factory,each,parameter,will,specify,sql,type,and,optionally,the,parameter,s,name,param,parameters,array,containing,the,declared,link,sql,parameter,objects,see,declared,parameters;public,void,set,parameters,sql,parameter,parameters,if,is,compiled,throw,new,invalid,data,access,api,usage,exception,cannot,add,parameters,once,the,query,is,compiled,for,int,i,0,i,parameters,length,i,if,parameters,i,null,this,declared,parameters,add,parameters,i,else,throw,new,invalid,data,access,api,usage,exception,cannot,add,parameter,at,index,i,from,arrays,as,list,parameters,since,it,is,null
RdbmsOperation -> public void setParameters(SqlParameter[] parameters);1368482696;Add one or more declared parameters. Used for configuring this operation_when used in a bean factory.  Each parameter will specify SQL type and (optionally)_the parameter's name._@param parameters Array containing the declared {@link SqlParameter} objects_@see #declaredParameters;public void setParameters(SqlParameter[] parameters) {_		if (isCompiled()) {_			throw new InvalidDataAccessApiUsageException("Cannot add parameters once the query is compiled")__		}_		for (int i = 0_ i < parameters.length_ i++) {_			if (parameters[i] != null) {_				this.declaredParameters.add(parameters[i])__			}_			else {_				throw new InvalidDataAccessApiUsageException("Cannot add parameter at index " + i + " from " +_						Arrays.asList(parameters) + " since it is 'null'")__			}_		}_	};add,one,or,more,declared,parameters,used,for,configuring,this,operation,when,used,in,a,bean,factory,each,parameter,will,specify,sql,type,and,optionally,the,parameter,s,name,param,parameters,array,containing,the,declared,link,sql,parameter,objects,see,declared,parameters;public,void,set,parameters,sql,parameter,parameters,if,is,compiled,throw,new,invalid,data,access,api,usage,exception,cannot,add,parameters,once,the,query,is,compiled,for,int,i,0,i,parameters,length,i,if,parameters,i,null,this,declared,parameters,add,parameters,i,else,throw,new,invalid,data,access,api,usage,exception,cannot,add,parameter,at,index,i,from,arrays,as,list,parameters,since,it,is,null
RdbmsOperation -> public void setParameters(SqlParameter[] parameters);1385412762;Add one or more declared parameters. Used for configuring this operation_when used in a bean factory.  Each parameter will specify SQL type and (optionally)_the parameter's name._@param parameters Array containing the declared {@link SqlParameter} objects_@see #declaredParameters;public void setParameters(SqlParameter[] parameters) {_		if (isCompiled()) {_			throw new InvalidDataAccessApiUsageException("Cannot add parameters once the query is compiled")__		}_		for (int i = 0_ i < parameters.length_ i++) {_			if (parameters[i] != null) {_				this.declaredParameters.add(parameters[i])__			}_			else {_				throw new InvalidDataAccessApiUsageException("Cannot add parameter at index " + i + " from " +_						Arrays.asList(parameters) + " since it is 'null'")__			}_		}_	};add,one,or,more,declared,parameters,used,for,configuring,this,operation,when,used,in,a,bean,factory,each,parameter,will,specify,sql,type,and,optionally,the,parameter,s,name,param,parameters,array,containing,the,declared,link,sql,parameter,objects,see,declared,parameters;public,void,set,parameters,sql,parameter,parameters,if,is,compiled,throw,new,invalid,data,access,api,usage,exception,cannot,add,parameters,once,the,query,is,compiled,for,int,i,0,i,parameters,length,i,if,parameters,i,null,this,declared,parameters,add,parameters,i,else,throw,new,invalid,data,access,api,usage,exception,cannot,add,parameter,at,index,i,from,arrays,as,list,parameters,since,it,is,null
RdbmsOperation -> public void setParameters(SqlParameter[] parameters);1407511029;Add one or more declared parameters. Used for configuring this operation_when used in a bean factory.  Each parameter will specify SQL type and (optionally)_the parameter's name._@param parameters Array containing the declared {@link SqlParameter} objects_@see #declaredParameters;public void setParameters(SqlParameter[] parameters) {_		if (isCompiled()) {_			throw new InvalidDataAccessApiUsageException("Cannot add parameters once the query is compiled")__		}_		for (int i = 0_ i < parameters.length_ i++) {_			if (parameters[i] != null) {_				this.declaredParameters.add(parameters[i])__			}_			else {_				throw new InvalidDataAccessApiUsageException("Cannot add parameter at index " + i + " from " +_						Arrays.asList(parameters) + " since it is 'null'")__			}_		}_	};add,one,or,more,declared,parameters,used,for,configuring,this,operation,when,used,in,a,bean,factory,each,parameter,will,specify,sql,type,and,optionally,the,parameter,s,name,param,parameters,array,containing,the,declared,link,sql,parameter,objects,see,declared,parameters;public,void,set,parameters,sql,parameter,parameters,if,is,compiled,throw,new,invalid,data,access,api,usage,exception,cannot,add,parameters,once,the,query,is,compiled,for,int,i,0,i,parameters,length,i,if,parameters,i,null,this,declared,parameters,add,parameters,i,else,throw,new,invalid,data,access,api,usage,exception,cannot,add,parameter,at,index,i,from,arrays,as,list,parameters,since,it,is,null
RdbmsOperation -> public void setParameters(SqlParameter[] parameters);1446038912;Add one or more declared parameters. Used for configuring this operation_when used in a bean factory.  Each parameter will specify SQL type and (optionally)_the parameter's name._@param parameters Array containing the declared {@link SqlParameter} objects_@see #declaredParameters;public void setParameters(SqlParameter[] parameters) {_		if (isCompiled()) {_			throw new InvalidDataAccessApiUsageException("Cannot add parameters once the query is compiled")__		}_		for (int i = 0_ i < parameters.length_ i++) {_			if (parameters[i] != null) {_				this.declaredParameters.add(parameters[i])__			}_			else {_				throw new InvalidDataAccessApiUsageException("Cannot add parameter at index " + i + " from " +_						Arrays.asList(parameters) + " since it is 'null'")__			}_		}_	};add,one,or,more,declared,parameters,used,for,configuring,this,operation,when,used,in,a,bean,factory,each,parameter,will,specify,sql,type,and,optionally,the,parameter,s,name,param,parameters,array,containing,the,declared,link,sql,parameter,objects,see,declared,parameters;public,void,set,parameters,sql,parameter,parameters,if,is,compiled,throw,new,invalid,data,access,api,usage,exception,cannot,add,parameters,once,the,query,is,compiled,for,int,i,0,i,parameters,length,i,if,parameters,i,null,this,declared,parameters,add,parameters,i,else,throw,new,invalid,data,access,api,usage,exception,cannot,add,parameter,at,index,i,from,arrays,as,list,parameters,since,it,is,null
RdbmsOperation -> public void setParameters(SqlParameter[] parameters);1467730834;Add one or more declared parameters. Used for configuring this operation_when used in a bean factory.  Each parameter will specify SQL type and (optionally)_the parameter's name._@param parameters Array containing the declared {@link SqlParameter} objects_@see #declaredParameters;public void setParameters(SqlParameter[] parameters) {_		if (isCompiled()) {_			throw new InvalidDataAccessApiUsageException("Cannot add parameters once the query is compiled")__		}_		for (int i = 0_ i < parameters.length_ i++) {_			if (parameters[i] != null) {_				this.declaredParameters.add(parameters[i])__			}_			else {_				throw new InvalidDataAccessApiUsageException("Cannot add parameter at index " + i + " from " +_						Arrays.asList(parameters) + " since it is 'null'")__			}_		}_	};add,one,or,more,declared,parameters,used,for,configuring,this,operation,when,used,in,a,bean,factory,each,parameter,will,specify,sql,type,and,optionally,the,parameter,s,name,param,parameters,array,containing,the,declared,link,sql,parameter,objects,see,declared,parameters;public,void,set,parameters,sql,parameter,parameters,if,is,compiled,throw,new,invalid,data,access,api,usage,exception,cannot,add,parameters,once,the,query,is,compiled,for,int,i,0,i,parameters,length,i,if,parameters,i,null,this,declared,parameters,add,parameters,i,else,throw,new,invalid,data,access,api,usage,exception,cannot,add,parameter,at,index,i,from,arrays,as,list,parameters,since,it,is,null
RdbmsOperation -> public void setParameters(SqlParameter[] parameters);1495868221;Add one or more declared parameters. Used for configuring this operation_when used in a bean factory.  Each parameter will specify SQL type and (optionally)_the parameter's name._@param parameters Array containing the declared {@link SqlParameter} objects_@see #declaredParameters;public void setParameters(SqlParameter[] parameters) {_		if (isCompiled()) {_			throw new InvalidDataAccessApiUsageException("Cannot add parameters once the query is compiled")__		}_		for (int i = 0_ i < parameters.length_ i++) {_			if (parameters[i] != null) {_				this.declaredParameters.add(parameters[i])__			}_			else {_				throw new InvalidDataAccessApiUsageException("Cannot add parameter at index " + i + " from " +_						Arrays.asList(parameters) + " since it is 'null'")__			}_		}_	};add,one,or,more,declared,parameters,used,for,configuring,this,operation,when,used,in,a,bean,factory,each,parameter,will,specify,sql,type,and,optionally,the,parameter,s,name,param,parameters,array,containing,the,declared,link,sql,parameter,objects,see,declared,parameters;public,void,set,parameters,sql,parameter,parameters,if,is,compiled,throw,new,invalid,data,access,api,usage,exception,cannot,add,parameters,once,the,query,is,compiled,for,int,i,0,i,parameters,length,i,if,parameters,i,null,this,declared,parameters,add,parameters,i,else,throw,new,invalid,data,access,api,usage,exception,cannot,add,parameter,at,index,i,from,arrays,as,list,parameters,since,it,is,null
RdbmsOperation -> protected String resolveSql();1496837955;Resolve the configured SQL for actual use._@return the SQL (never {@code null})_@since 5.0;protected String resolveSql() {_		String sql = getSql()__		Assert.state(sql != null, "No SQL set")__		return sql__	};resolve,the,configured,sql,for,actual,use,return,the,sql,never,code,null,since,5,0;protected,string,resolve,sql,string,sql,get,sql,assert,state,sql,null,no,sql,set,return,sql
RdbmsOperation -> protected String resolveSql();1498780456;Resolve the configured SQL for actual use._@return the SQL (never {@code null})_@since 5.0;protected String resolveSql() {_		String sql = getSql()__		Assert.state(sql != null, "No SQL set")__		return sql__	};resolve,the,configured,sql,for,actual,use,return,the,sql,never,code,null,since,5,0;protected,string,resolve,sql,string,sql,get,sql,assert,state,sql,null,no,sql,set,return,sql
RdbmsOperation -> protected String resolveSql();1506519613;Resolve the configured SQL for actual use._@return the SQL (never {@code null})_@since 5.0;protected String resolveSql() {_		String sql = getSql()__		Assert.state(sql != null, "No SQL set")__		return sql__	};resolve,the,configured,sql,for,actual,use,return,the,sql,never,code,null,since,5,0;protected,string,resolve,sql,string,sql,get,sql,assert,state,sql,null,no,sql,set,return,sql
RdbmsOperation -> protected String resolveSql();1525966356;Resolve the configured SQL for actual use._@return the SQL (never {@code null})_@since 5.0;protected String resolveSql() {_		String sql = getSql()__		Assert.state(sql != null, "No SQL set")__		return sql__	};resolve,the,configured,sql,for,actual,use,return,the,sql,never,code,null,since,5,0;protected,string,resolve,sql,string,sql,get,sql,assert,state,sql,null,no,sql,set,return,sql
RdbmsOperation -> protected String resolveSql();1530174524;Resolve the configured SQL for actual use._@return the SQL (never {@code null})_@since 5.0;protected String resolveSql() {_		String sql = getSql()__		Assert.state(sql != null, "No SQL set")__		return sql__	};resolve,the,configured,sql,for,actual,use,return,the,sql,never,code,null,since,5,0;protected,string,resolve,sql,string,sql,get,sql,assert,state,sql,null,no,sql,set,return,sql
RdbmsOperation -> protected String resolveSql();1542899558;Resolve the configured SQL for actual use._@return the SQL (never {@code null})_@since 5.0;protected String resolveSql() {_		String sql = getSql()__		Assert.state(sql != null, "No SQL set")__		return sql__	};resolve,the,configured,sql,for,actual,use,return,the,sql,never,code,null,since,5,0;protected,string,resolve,sql,string,sql,get,sql,assert,state,sql,null,no,sql,set,return,sql
RdbmsOperation -> public boolean isUpdatableResults();1328020251;Return whether statements will return updatable ResultSets.;public boolean isUpdatableResults() {_		return this.updatableResults__	};return,whether,statements,will,return,updatable,result,sets;public,boolean,is,updatable,results,return,this,updatable,results
RdbmsOperation -> public boolean isUpdatableResults();1356735495;Return whether statements will return updatable ResultSets.;public boolean isUpdatableResults() {_		return this.updatableResults__	};return,whether,statements,will,return,updatable,result,sets;public,boolean,is,updatable,results,return,this,updatable,results
RdbmsOperation -> public boolean isUpdatableResults();1357119239;Return whether statements will return updatable ResultSets.;public boolean isUpdatableResults() {_		return this.updatableResults__	};return,whether,statements,will,return,updatable,result,sets;public,boolean,is,updatable,results,return,this,updatable,results
RdbmsOperation -> public boolean isUpdatableResults();1368482696;Return whether statements will return updatable ResultSets.;public boolean isUpdatableResults() {_		return this.updatableResults__	};return,whether,statements,will,return,updatable,result,sets;public,boolean,is,updatable,results,return,this,updatable,results
RdbmsOperation -> public boolean isUpdatableResults();1385412762;Return whether statements will return updatable ResultSets.;public boolean isUpdatableResults() {_		return this.updatableResults__	};return,whether,statements,will,return,updatable,result,sets;public,boolean,is,updatable,results,return,this,updatable,results
RdbmsOperation -> public boolean isUpdatableResults();1407511029;Return whether statements will return updatable ResultSets.;public boolean isUpdatableResults() {_		return this.updatableResults__	};return,whether,statements,will,return,updatable,result,sets;public,boolean,is,updatable,results,return,this,updatable,results
RdbmsOperation -> public boolean isUpdatableResults();1446038912;Return whether statements will return updatable ResultSets.;public boolean isUpdatableResults() {_		return this.updatableResults__	};return,whether,statements,will,return,updatable,result,sets;public,boolean,is,updatable,results,return,this,updatable,results
RdbmsOperation -> public boolean isUpdatableResults();1467730834;Return whether statements will return updatable ResultSets.;public boolean isUpdatableResults() {_		return this.updatableResults__	};return,whether,statements,will,return,updatable,result,sets;public,boolean,is,updatable,results,return,this,updatable,results
RdbmsOperation -> public boolean isUpdatableResults();1495868221;Return whether statements will return updatable ResultSets.;public boolean isUpdatableResults() {_		return this.updatableResults__	};return,whether,statements,will,return,updatable,result,sets;public,boolean,is,updatable,results,return,this,updatable,results
RdbmsOperation -> public boolean isUpdatableResults();1496837955;Return whether statements will return updatable ResultSets.;public boolean isUpdatableResults() {_		return this.updatableResults__	};return,whether,statements,will,return,updatable,result,sets;public,boolean,is,updatable,results,return,this,updatable,results
RdbmsOperation -> public boolean isUpdatableResults();1498780456;Return whether statements will return updatable ResultSets.;public boolean isUpdatableResults() {_		return this.updatableResults__	};return,whether,statements,will,return,updatable,result,sets;public,boolean,is,updatable,results,return,this,updatable,results
RdbmsOperation -> public boolean isUpdatableResults();1506519613;Return whether statements will return updatable ResultSets.;public boolean isUpdatableResults() {_		return this.updatableResults__	};return,whether,statements,will,return,updatable,result,sets;public,boolean,is,updatable,results,return,this,updatable,results
RdbmsOperation -> public boolean isUpdatableResults();1525966356;Return whether statements will return updatable ResultSets.;public boolean isUpdatableResults() {_		return this.updatableResults__	};return,whether,statements,will,return,updatable,result,sets;public,boolean,is,updatable,results,return,this,updatable,results
RdbmsOperation -> public boolean isUpdatableResults();1530174524;Return whether statements will return updatable ResultSets.;public boolean isUpdatableResults() {_		return this.updatableResults__	};return,whether,statements,will,return,updatable,result,sets;public,boolean,is,updatable,results,return,this,updatable,results
RdbmsOperation -> public boolean isUpdatableResults();1542899558;Return whether statements will return updatable ResultSets.;public boolean isUpdatableResults() {_		return this.updatableResults__	};return,whether,statements,will,return,updatable,result,sets;public,boolean,is,updatable,results,return,this,updatable,results
RdbmsOperation -> protected boolean allowsUnusedParameters();1328020251;Return whether this operation accepts additional parameters that are_given but not actually used. Applies in particular to parameter Maps._<p>The default is <code>false</code>._@see StoredProcedure;protected boolean allowsUnusedParameters() {_		return false__	};return,whether,this,operation,accepts,additional,parameters,that,are,given,but,not,actually,used,applies,in,particular,to,parameter,maps,p,the,default,is,code,false,code,see,stored,procedure;protected,boolean,allows,unused,parameters,return,false
RdbmsOperation -> protected boolean allowsUnusedParameters();1356735495;Return whether this operation accepts additional parameters that are_given but not actually used. Applies in particular to parameter Maps._<p>The default is {@code false}._@see StoredProcedure;protected boolean allowsUnusedParameters() {_		return false__	};return,whether,this,operation,accepts,additional,parameters,that,are,given,but,not,actually,used,applies,in,particular,to,parameter,maps,p,the,default,is,code,false,see,stored,procedure;protected,boolean,allows,unused,parameters,return,false
RdbmsOperation -> protected boolean allowsUnusedParameters();1357119239;Return whether this operation accepts additional parameters that are_given but not actually used. Applies in particular to parameter Maps._<p>The default is {@code false}._@see StoredProcedure;protected boolean allowsUnusedParameters() {_		return false__	};return,whether,this,operation,accepts,additional,parameters,that,are,given,but,not,actually,used,applies,in,particular,to,parameter,maps,p,the,default,is,code,false,see,stored,procedure;protected,boolean,allows,unused,parameters,return,false
RdbmsOperation -> protected boolean allowsUnusedParameters();1368482696;Return whether this operation accepts additional parameters that are_given but not actually used. Applies in particular to parameter Maps._<p>The default is {@code false}._@see StoredProcedure;protected boolean allowsUnusedParameters() {_		return false__	};return,whether,this,operation,accepts,additional,parameters,that,are,given,but,not,actually,used,applies,in,particular,to,parameter,maps,p,the,default,is,code,false,see,stored,procedure;protected,boolean,allows,unused,parameters,return,false
RdbmsOperation -> protected boolean allowsUnusedParameters();1385412762;Return whether this operation accepts additional parameters that are_given but not actually used. Applies in particular to parameter Maps._<p>The default is {@code false}._@see StoredProcedure;protected boolean allowsUnusedParameters() {_		return false__	};return,whether,this,operation,accepts,additional,parameters,that,are,given,but,not,actually,used,applies,in,particular,to,parameter,maps,p,the,default,is,code,false,see,stored,procedure;protected,boolean,allows,unused,parameters,return,false
RdbmsOperation -> protected boolean allowsUnusedParameters();1407511029;Return whether this operation accepts additional parameters that are_given but not actually used. Applies in particular to parameter Maps._<p>The default is {@code false}._@see StoredProcedure;protected boolean allowsUnusedParameters() {_		return false__	};return,whether,this,operation,accepts,additional,parameters,that,are,given,but,not,actually,used,applies,in,particular,to,parameter,maps,p,the,default,is,code,false,see,stored,procedure;protected,boolean,allows,unused,parameters,return,false
RdbmsOperation -> protected boolean allowsUnusedParameters();1446038912;Return whether this operation accepts additional parameters that are_given but not actually used. Applies in particular to parameter Maps._<p>The default is {@code false}._@see StoredProcedure;protected boolean allowsUnusedParameters() {_		return false__	};return,whether,this,operation,accepts,additional,parameters,that,are,given,but,not,actually,used,applies,in,particular,to,parameter,maps,p,the,default,is,code,false,see,stored,procedure;protected,boolean,allows,unused,parameters,return,false
RdbmsOperation -> protected boolean allowsUnusedParameters();1467730834;Return whether this operation accepts additional parameters that are_given but not actually used. Applies in particular to parameter Maps._<p>The default is {@code false}._@see StoredProcedure;protected boolean allowsUnusedParameters() {_		return false__	};return,whether,this,operation,accepts,additional,parameters,that,are,given,but,not,actually,used,applies,in,particular,to,parameter,maps,p,the,default,is,code,false,see,stored,procedure;protected,boolean,allows,unused,parameters,return,false
RdbmsOperation -> protected boolean allowsUnusedParameters();1495868221;Return whether this operation accepts additional parameters that are_given but not actually used. Applies in particular to parameter Maps._<p>The default is {@code false}._@see StoredProcedure;protected boolean allowsUnusedParameters() {_		return false__	};return,whether,this,operation,accepts,additional,parameters,that,are,given,but,not,actually,used,applies,in,particular,to,parameter,maps,p,the,default,is,code,false,see,stored,procedure;protected,boolean,allows,unused,parameters,return,false
RdbmsOperation -> protected boolean allowsUnusedParameters();1496837955;Return whether this operation accepts additional parameters that are_given but not actually used. Applies in particular to parameter Maps._<p>The default is {@code false}._@see StoredProcedure;protected boolean allowsUnusedParameters() {_		return false__	};return,whether,this,operation,accepts,additional,parameters,that,are,given,but,not,actually,used,applies,in,particular,to,parameter,maps,p,the,default,is,code,false,see,stored,procedure;protected,boolean,allows,unused,parameters,return,false
RdbmsOperation -> protected boolean allowsUnusedParameters();1498780456;Return whether this operation accepts additional parameters that are_given but not actually used. Applies in particular to parameter Maps._<p>The default is {@code false}._@see StoredProcedure;protected boolean allowsUnusedParameters() {_		return false__	};return,whether,this,operation,accepts,additional,parameters,that,are,given,but,not,actually,used,applies,in,particular,to,parameter,maps,p,the,default,is,code,false,see,stored,procedure;protected,boolean,allows,unused,parameters,return,false
RdbmsOperation -> protected boolean allowsUnusedParameters();1506519613;Return whether this operation accepts additional parameters that are_given but not actually used. Applies in particular to parameter Maps._<p>The default is {@code false}._@see StoredProcedure;protected boolean allowsUnusedParameters() {_		return false__	};return,whether,this,operation,accepts,additional,parameters,that,are,given,but,not,actually,used,applies,in,particular,to,parameter,maps,p,the,default,is,code,false,see,stored,procedure;protected,boolean,allows,unused,parameters,return,false
RdbmsOperation -> protected boolean allowsUnusedParameters();1525966356;Return whether this operation accepts additional parameters that are_given but not actually used. Applies in particular to parameter Maps._<p>The default is {@code false}._@see StoredProcedure;protected boolean allowsUnusedParameters() {_		return false__	};return,whether,this,operation,accepts,additional,parameters,that,are,given,but,not,actually,used,applies,in,particular,to,parameter,maps,p,the,default,is,code,false,see,stored,procedure;protected,boolean,allows,unused,parameters,return,false
RdbmsOperation -> protected boolean allowsUnusedParameters();1530174524;Return whether this operation accepts additional parameters that are_given but not actually used. Applies in particular to parameter Maps._<p>The default is {@code false}._@see StoredProcedure;protected boolean allowsUnusedParameters() {_		return false__	};return,whether,this,operation,accepts,additional,parameters,that,are,given,but,not,actually,used,applies,in,particular,to,parameter,maps,p,the,default,is,code,false,see,stored,procedure;protected,boolean,allows,unused,parameters,return,false
RdbmsOperation -> protected boolean allowsUnusedParameters();1542899558;Return whether this operation accepts additional parameters that are_given but not actually used. Applies in particular to parameter Maps._<p>The default is {@code false}._@see StoredProcedure;protected boolean allowsUnusedParameters() {_		return false__	};return,whether,this,operation,accepts,additional,parameters,that,are,given,but,not,actually,used,applies,in,particular,to,parameter,maps,p,the,default,is,code,false,see,stored,procedure;protected,boolean,allows,unused,parameters,return,false
RdbmsOperation -> public void setTypes(@Nullable int[] types) throws InvalidDataAccessApiUsageException;1496837955;Add anonymous parameters, specifying only their SQL types_as defined in the {@code java.sql.Types} class._<p>Parameter ordering is significant. This method is an alternative_to the {@link #declareParameter} method, which should normally be preferred._@param types array of SQL types as defined in the_{@code java.sql.Types} class_@throws InvalidDataAccessApiUsageException if the operation is already compiled;public void setTypes(@Nullable int[] types) throws InvalidDataAccessApiUsageException {_		if (isCompiled()) {_			throw new InvalidDataAccessApiUsageException("Cannot add parameters once query is compiled")__		}_		if (types != null) {_			for (int type : types) {_				declareParameter(new SqlParameter(type))__			}_		}_	};add,anonymous,parameters,specifying,only,their,sql,types,as,defined,in,the,code,java,sql,types,class,p,parameter,ordering,is,significant,this,method,is,an,alternative,to,the,link,declare,parameter,method,which,should,normally,be,preferred,param,types,array,of,sql,types,as,defined,in,the,code,java,sql,types,class,throws,invalid,data,access,api,usage,exception,if,the,operation,is,already,compiled;public,void,set,types,nullable,int,types,throws,invalid,data,access,api,usage,exception,if,is,compiled,throw,new,invalid,data,access,api,usage,exception,cannot,add,parameters,once,query,is,compiled,if,types,null,for,int,type,types,declare,parameter,new,sql,parameter,type
RdbmsOperation -> public void setTypes(@Nullable int[] types) throws InvalidDataAccessApiUsageException;1498780456;Add anonymous parameters, specifying only their SQL types_as defined in the {@code java.sql.Types} class._<p>Parameter ordering is significant. This method is an alternative_to the {@link #declareParameter} method, which should normally be preferred._@param types array of SQL types as defined in the_{@code java.sql.Types} class_@throws InvalidDataAccessApiUsageException if the operation is already compiled;public void setTypes(@Nullable int[] types) throws InvalidDataAccessApiUsageException {_		if (isCompiled()) {_			throw new InvalidDataAccessApiUsageException("Cannot add parameters once query is compiled")__		}_		if (types != null) {_			for (int type : types) {_				declareParameter(new SqlParameter(type))__			}_		}_	};add,anonymous,parameters,specifying,only,their,sql,types,as,defined,in,the,code,java,sql,types,class,p,parameter,ordering,is,significant,this,method,is,an,alternative,to,the,link,declare,parameter,method,which,should,normally,be,preferred,param,types,array,of,sql,types,as,defined,in,the,code,java,sql,types,class,throws,invalid,data,access,api,usage,exception,if,the,operation,is,already,compiled;public,void,set,types,nullable,int,types,throws,invalid,data,access,api,usage,exception,if,is,compiled,throw,new,invalid,data,access,api,usage,exception,cannot,add,parameters,once,query,is,compiled,if,types,null,for,int,type,types,declare,parameter,new,sql,parameter,type
RdbmsOperation -> public void setTypes(@Nullable int[] types) throws InvalidDataAccessApiUsageException;1506519613;Add anonymous parameters, specifying only their SQL types_as defined in the {@code java.sql.Types} class._<p>Parameter ordering is significant. This method is an alternative_to the {@link #declareParameter} method, which should normally be preferred._@param types array of SQL types as defined in the_{@code java.sql.Types} class_@throws InvalidDataAccessApiUsageException if the operation is already compiled;public void setTypes(@Nullable int[] types) throws InvalidDataAccessApiUsageException {_		if (isCompiled()) {_			throw new InvalidDataAccessApiUsageException("Cannot add parameters once query is compiled")__		}_		if (types != null) {_			for (int type : types) {_				declareParameter(new SqlParameter(type))__			}_		}_	};add,anonymous,parameters,specifying,only,their,sql,types,as,defined,in,the,code,java,sql,types,class,p,parameter,ordering,is,significant,this,method,is,an,alternative,to,the,link,declare,parameter,method,which,should,normally,be,preferred,param,types,array,of,sql,types,as,defined,in,the,code,java,sql,types,class,throws,invalid,data,access,api,usage,exception,if,the,operation,is,already,compiled;public,void,set,types,nullable,int,types,throws,invalid,data,access,api,usage,exception,if,is,compiled,throw,new,invalid,data,access,api,usage,exception,cannot,add,parameters,once,query,is,compiled,if,types,null,for,int,type,types,declare,parameter,new,sql,parameter,type
RdbmsOperation -> public void setTypes(@Nullable int[] types) throws InvalidDataAccessApiUsageException;1525966356;Add anonymous parameters, specifying only their SQL types_as defined in the {@code java.sql.Types} class._<p>Parameter ordering is significant. This method is an alternative_to the {@link #declareParameter} method, which should normally be preferred._@param types array of SQL types as defined in the_{@code java.sql.Types} class_@throws InvalidDataAccessApiUsageException if the operation is already compiled;public void setTypes(@Nullable int[] types) throws InvalidDataAccessApiUsageException {_		if (isCompiled()) {_			throw new InvalidDataAccessApiUsageException("Cannot add parameters once query is compiled")__		}_		if (types != null) {_			for (int type : types) {_				declareParameter(new SqlParameter(type))__			}_		}_	};add,anonymous,parameters,specifying,only,their,sql,types,as,defined,in,the,code,java,sql,types,class,p,parameter,ordering,is,significant,this,method,is,an,alternative,to,the,link,declare,parameter,method,which,should,normally,be,preferred,param,types,array,of,sql,types,as,defined,in,the,code,java,sql,types,class,throws,invalid,data,access,api,usage,exception,if,the,operation,is,already,compiled;public,void,set,types,nullable,int,types,throws,invalid,data,access,api,usage,exception,if,is,compiled,throw,new,invalid,data,access,api,usage,exception,cannot,add,parameters,once,query,is,compiled,if,types,null,for,int,type,types,declare,parameter,new,sql,parameter,type
RdbmsOperation -> public void setTypes(@Nullable int[] types) throws InvalidDataAccessApiUsageException;1530174524;Add anonymous parameters, specifying only their SQL types_as defined in the {@code java.sql.Types} class._<p>Parameter ordering is significant. This method is an alternative_to the {@link #declareParameter} method, which should normally be preferred._@param types array of SQL types as defined in the_{@code java.sql.Types} class_@throws InvalidDataAccessApiUsageException if the operation is already compiled;public void setTypes(@Nullable int[] types) throws InvalidDataAccessApiUsageException {_		if (isCompiled()) {_			throw new InvalidDataAccessApiUsageException("Cannot add parameters once query is compiled")__		}_		if (types != null) {_			for (int type : types) {_				declareParameter(new SqlParameter(type))__			}_		}_	};add,anonymous,parameters,specifying,only,their,sql,types,as,defined,in,the,code,java,sql,types,class,p,parameter,ordering,is,significant,this,method,is,an,alternative,to,the,link,declare,parameter,method,which,should,normally,be,preferred,param,types,array,of,sql,types,as,defined,in,the,code,java,sql,types,class,throws,invalid,data,access,api,usage,exception,if,the,operation,is,already,compiled;public,void,set,types,nullable,int,types,throws,invalid,data,access,api,usage,exception,if,is,compiled,throw,new,invalid,data,access,api,usage,exception,cannot,add,parameters,once,query,is,compiled,if,types,null,for,int,type,types,declare,parameter,new,sql,parameter,type
RdbmsOperation -> public void setTypes(@Nullable int[] types) throws InvalidDataAccessApiUsageException;1542899558;Add anonymous parameters, specifying only their SQL types_as defined in the {@code java.sql.Types} class._<p>Parameter ordering is significant. This method is an alternative_to the {@link #declareParameter} method, which should normally be preferred._@param types array of SQL types as defined in the_{@code java.sql.Types} class_@throws InvalidDataAccessApiUsageException if the operation is already compiled;public void setTypes(@Nullable int[] types) throws InvalidDataAccessApiUsageException {_		if (isCompiled()) {_			throw new InvalidDataAccessApiUsageException("Cannot add parameters once query is compiled")__		}_		if (types != null) {_			for (int type : types) {_				declareParameter(new SqlParameter(type))__			}_		}_	};add,anonymous,parameters,specifying,only,their,sql,types,as,defined,in,the,code,java,sql,types,class,p,parameter,ordering,is,significant,this,method,is,an,alternative,to,the,link,declare,parameter,method,which,should,normally,be,preferred,param,types,array,of,sql,types,as,defined,in,the,code,java,sql,types,class,throws,invalid,data,access,api,usage,exception,if,the,operation,is,already,compiled;public,void,set,types,nullable,int,types,throws,invalid,data,access,api,usage,exception,if,is,compiled,throw,new,invalid,data,access,api,usage,exception,cannot,add,parameters,once,query,is,compiled,if,types,null,for,int,type,types,declare,parameter,new,sql,parameter,type
RdbmsOperation -> public void setQueryTimeout(int queryTimeout);1328020251;Set the query timeout for statements that this RDBMS operation executes._<p>Default is 0, indicating to use the JDBC driver's default._<p>Note: Any timeout specified here will be overridden by the remaining_transaction timeout when executing within a transaction that has a_timeout specified at the transaction level.;public void setQueryTimeout(int queryTimeout) {_		this.jdbcTemplate.setQueryTimeout(queryTimeout)__	};set,the,query,timeout,for,statements,that,this,rdbms,operation,executes,p,default,is,0,indicating,to,use,the,jdbc,driver,s,default,p,note,any,timeout,specified,here,will,be,overridden,by,the,remaining,transaction,timeout,when,executing,within,a,transaction,that,has,a,timeout,specified,at,the,transaction,level;public,void,set,query,timeout,int,query,timeout,this,jdbc,template,set,query,timeout,query,timeout
RdbmsOperation -> public void setQueryTimeout(int queryTimeout);1356735495;Set the query timeout for statements that this RDBMS operation executes._<p>Default is 0, indicating to use the JDBC driver's default._<p>Note: Any timeout specified here will be overridden by the remaining_transaction timeout when executing within a transaction that has a_timeout specified at the transaction level.;public void setQueryTimeout(int queryTimeout) {_		this.jdbcTemplate.setQueryTimeout(queryTimeout)__	};set,the,query,timeout,for,statements,that,this,rdbms,operation,executes,p,default,is,0,indicating,to,use,the,jdbc,driver,s,default,p,note,any,timeout,specified,here,will,be,overridden,by,the,remaining,transaction,timeout,when,executing,within,a,transaction,that,has,a,timeout,specified,at,the,transaction,level;public,void,set,query,timeout,int,query,timeout,this,jdbc,template,set,query,timeout,query,timeout
RdbmsOperation -> public void setQueryTimeout(int queryTimeout);1357119239;Set the query timeout for statements that this RDBMS operation executes._<p>Default is 0, indicating to use the JDBC driver's default._<p>Note: Any timeout specified here will be overridden by the remaining_transaction timeout when executing within a transaction that has a_timeout specified at the transaction level.;public void setQueryTimeout(int queryTimeout) {_		this.jdbcTemplate.setQueryTimeout(queryTimeout)__	};set,the,query,timeout,for,statements,that,this,rdbms,operation,executes,p,default,is,0,indicating,to,use,the,jdbc,driver,s,default,p,note,any,timeout,specified,here,will,be,overridden,by,the,remaining,transaction,timeout,when,executing,within,a,transaction,that,has,a,timeout,specified,at,the,transaction,level;public,void,set,query,timeout,int,query,timeout,this,jdbc,template,set,query,timeout,query,timeout
RdbmsOperation -> public void setQueryTimeout(int queryTimeout);1368482696;Set the query timeout for statements that this RDBMS operation executes._<p>Default is 0, indicating to use the JDBC driver's default._<p>Note: Any timeout specified here will be overridden by the remaining_transaction timeout when executing within a transaction that has a_timeout specified at the transaction level.;public void setQueryTimeout(int queryTimeout) {_		this.jdbcTemplate.setQueryTimeout(queryTimeout)__	};set,the,query,timeout,for,statements,that,this,rdbms,operation,executes,p,default,is,0,indicating,to,use,the,jdbc,driver,s,default,p,note,any,timeout,specified,here,will,be,overridden,by,the,remaining,transaction,timeout,when,executing,within,a,transaction,that,has,a,timeout,specified,at,the,transaction,level;public,void,set,query,timeout,int,query,timeout,this,jdbc,template,set,query,timeout,query,timeout
RdbmsOperation -> public void setQueryTimeout(int queryTimeout);1385412762;Set the query timeout for statements that this RDBMS operation executes._<p>Default is 0, indicating to use the JDBC driver's default._<p>Note: Any timeout specified here will be overridden by the remaining_transaction timeout when executing within a transaction that has a_timeout specified at the transaction level.;public void setQueryTimeout(int queryTimeout) {_		this.jdbcTemplate.setQueryTimeout(queryTimeout)__	};set,the,query,timeout,for,statements,that,this,rdbms,operation,executes,p,default,is,0,indicating,to,use,the,jdbc,driver,s,default,p,note,any,timeout,specified,here,will,be,overridden,by,the,remaining,transaction,timeout,when,executing,within,a,transaction,that,has,a,timeout,specified,at,the,transaction,level;public,void,set,query,timeout,int,query,timeout,this,jdbc,template,set,query,timeout,query,timeout
RdbmsOperation -> public void setQueryTimeout(int queryTimeout);1407511029;Set the query timeout for statements that this RDBMS operation executes._<p>Default is 0, indicating to use the JDBC driver's default._<p>Note: Any timeout specified here will be overridden by the remaining_transaction timeout when executing within a transaction that has a_timeout specified at the transaction level.;public void setQueryTimeout(int queryTimeout) {_		this.jdbcTemplate.setQueryTimeout(queryTimeout)__	};set,the,query,timeout,for,statements,that,this,rdbms,operation,executes,p,default,is,0,indicating,to,use,the,jdbc,driver,s,default,p,note,any,timeout,specified,here,will,be,overridden,by,the,remaining,transaction,timeout,when,executing,within,a,transaction,that,has,a,timeout,specified,at,the,transaction,level;public,void,set,query,timeout,int,query,timeout,this,jdbc,template,set,query,timeout,query,timeout
RdbmsOperation -> public void setQueryTimeout(int queryTimeout);1446038912;Set the query timeout for statements that this RDBMS operation executes._<p>Default is 0, indicating to use the JDBC driver's default._<p>Note: Any timeout specified here will be overridden by the remaining_transaction timeout when executing within a transaction that has a_timeout specified at the transaction level.;public void setQueryTimeout(int queryTimeout) {_		this.jdbcTemplate.setQueryTimeout(queryTimeout)__	};set,the,query,timeout,for,statements,that,this,rdbms,operation,executes,p,default,is,0,indicating,to,use,the,jdbc,driver,s,default,p,note,any,timeout,specified,here,will,be,overridden,by,the,remaining,transaction,timeout,when,executing,within,a,transaction,that,has,a,timeout,specified,at,the,transaction,level;public,void,set,query,timeout,int,query,timeout,this,jdbc,template,set,query,timeout,query,timeout
RdbmsOperation -> public void setQueryTimeout(int queryTimeout);1467730834;Set the query timeout for statements that this RDBMS operation executes._<p>Default is 0, indicating to use the JDBC driver's default._<p>Note: Any timeout specified here will be overridden by the remaining_transaction timeout when executing within a transaction that has a_timeout specified at the transaction level.;public void setQueryTimeout(int queryTimeout) {_		this.jdbcTemplate.setQueryTimeout(queryTimeout)__	};set,the,query,timeout,for,statements,that,this,rdbms,operation,executes,p,default,is,0,indicating,to,use,the,jdbc,driver,s,default,p,note,any,timeout,specified,here,will,be,overridden,by,the,remaining,transaction,timeout,when,executing,within,a,transaction,that,has,a,timeout,specified,at,the,transaction,level;public,void,set,query,timeout,int,query,timeout,this,jdbc,template,set,query,timeout,query,timeout
RdbmsOperation -> public void setQueryTimeout(int queryTimeout);1495868221;Set the query timeout for statements that this RDBMS operation executes._<p>Default is 0, indicating to use the JDBC driver's default._<p>Note: Any timeout specified here will be overridden by the remaining_transaction timeout when executing within a transaction that has a_timeout specified at the transaction level.;public void setQueryTimeout(int queryTimeout) {_		this.jdbcTemplate.setQueryTimeout(queryTimeout)__	};set,the,query,timeout,for,statements,that,this,rdbms,operation,executes,p,default,is,0,indicating,to,use,the,jdbc,driver,s,default,p,note,any,timeout,specified,here,will,be,overridden,by,the,remaining,transaction,timeout,when,executing,within,a,transaction,that,has,a,timeout,specified,at,the,transaction,level;public,void,set,query,timeout,int,query,timeout,this,jdbc,template,set,query,timeout,query,timeout
RdbmsOperation -> public void setQueryTimeout(int queryTimeout);1496837955;Set the query timeout for statements that this RDBMS operation executes._<p>Default is 0, indicating to use the JDBC driver's default._<p>Note: Any timeout specified here will be overridden by the remaining_transaction timeout when executing within a transaction that has a_timeout specified at the transaction level.;public void setQueryTimeout(int queryTimeout) {_		this.jdbcTemplate.setQueryTimeout(queryTimeout)__	};set,the,query,timeout,for,statements,that,this,rdbms,operation,executes,p,default,is,0,indicating,to,use,the,jdbc,driver,s,default,p,note,any,timeout,specified,here,will,be,overridden,by,the,remaining,transaction,timeout,when,executing,within,a,transaction,that,has,a,timeout,specified,at,the,transaction,level;public,void,set,query,timeout,int,query,timeout,this,jdbc,template,set,query,timeout,query,timeout
RdbmsOperation -> public void setQueryTimeout(int queryTimeout);1498780456;Set the query timeout for statements that this RDBMS operation executes._<p>Default is 0, indicating to use the JDBC driver's default._<p>Note: Any timeout specified here will be overridden by the remaining_transaction timeout when executing within a transaction that has a_timeout specified at the transaction level.;public void setQueryTimeout(int queryTimeout) {_		this.jdbcTemplate.setQueryTimeout(queryTimeout)__	};set,the,query,timeout,for,statements,that,this,rdbms,operation,executes,p,default,is,0,indicating,to,use,the,jdbc,driver,s,default,p,note,any,timeout,specified,here,will,be,overridden,by,the,remaining,transaction,timeout,when,executing,within,a,transaction,that,has,a,timeout,specified,at,the,transaction,level;public,void,set,query,timeout,int,query,timeout,this,jdbc,template,set,query,timeout,query,timeout
RdbmsOperation -> public void setQueryTimeout(int queryTimeout);1506519613;Set the query timeout for statements that this RDBMS operation executes._<p>Default is 0, indicating to use the JDBC driver's default._<p>Note: Any timeout specified here will be overridden by the remaining_transaction timeout when executing within a transaction that has a_timeout specified at the transaction level.;public void setQueryTimeout(int queryTimeout) {_		this.jdbcTemplate.setQueryTimeout(queryTimeout)__	};set,the,query,timeout,for,statements,that,this,rdbms,operation,executes,p,default,is,0,indicating,to,use,the,jdbc,driver,s,default,p,note,any,timeout,specified,here,will,be,overridden,by,the,remaining,transaction,timeout,when,executing,within,a,transaction,that,has,a,timeout,specified,at,the,transaction,level;public,void,set,query,timeout,int,query,timeout,this,jdbc,template,set,query,timeout,query,timeout
RdbmsOperation -> public void setQueryTimeout(int queryTimeout);1525966356;Set the query timeout for statements that this RDBMS operation executes._<p>Default is 0, indicating to use the JDBC driver's default._<p>Note: Any timeout specified here will be overridden by the remaining_transaction timeout when executing within a transaction that has a_timeout specified at the transaction level.;public void setQueryTimeout(int queryTimeout) {_		this.jdbcTemplate.setQueryTimeout(queryTimeout)__	};set,the,query,timeout,for,statements,that,this,rdbms,operation,executes,p,default,is,0,indicating,to,use,the,jdbc,driver,s,default,p,note,any,timeout,specified,here,will,be,overridden,by,the,remaining,transaction,timeout,when,executing,within,a,transaction,that,has,a,timeout,specified,at,the,transaction,level;public,void,set,query,timeout,int,query,timeout,this,jdbc,template,set,query,timeout,query,timeout
RdbmsOperation -> public void setQueryTimeout(int queryTimeout);1530174524;Set the query timeout for statements that this RDBMS operation executes._<p>Default is 0, indicating to use the JDBC driver's default._<p>Note: Any timeout specified here will be overridden by the remaining_transaction timeout when executing within a transaction that has a_timeout specified at the transaction level.;public void setQueryTimeout(int queryTimeout) {_		this.jdbcTemplate.setQueryTimeout(queryTimeout)__	};set,the,query,timeout,for,statements,that,this,rdbms,operation,executes,p,default,is,0,indicating,to,use,the,jdbc,driver,s,default,p,note,any,timeout,specified,here,will,be,overridden,by,the,remaining,transaction,timeout,when,executing,within,a,transaction,that,has,a,timeout,specified,at,the,transaction,level;public,void,set,query,timeout,int,query,timeout,this,jdbc,template,set,query,timeout,query,timeout
RdbmsOperation -> public void setQueryTimeout(int queryTimeout);1542899558;Set the query timeout for statements that this RDBMS operation executes._<p>Default is 0, indicating to use the JDBC driver's default._<p>Note: Any timeout specified here will be overridden by the remaining_transaction timeout when executing within a transaction that has a_timeout specified at the transaction level.;public void setQueryTimeout(int queryTimeout) {_		this.jdbcTemplate.setQueryTimeout(queryTimeout)__	};set,the,query,timeout,for,statements,that,this,rdbms,operation,executes,p,default,is,0,indicating,to,use,the,jdbc,driver,s,default,p,note,any,timeout,specified,here,will,be,overridden,by,the,remaining,transaction,timeout,when,executing,within,a,transaction,that,has,a,timeout,specified,at,the,transaction,level;public,void,set,query,timeout,int,query,timeout,this,jdbc,template,set,query,timeout,query,timeout
RdbmsOperation -> public void setJdbcTemplate(JdbcTemplate jdbcTemplate);1328020251;An alternative to the more commonly used setDataSource() when you want to_use the same JdbcTemplate in multiple RdbmsOperations. This is appropriate if the_JdbcTemplate has special configuration such as a SQLExceptionTranslator that should_apply to multiple RdbmsOperation objects.;public void setJdbcTemplate(JdbcTemplate jdbcTemplate) {_		if (jdbcTemplate == null) {_			throw new IllegalArgumentException("jdbcTemplate must not be null")__		}_		this.jdbcTemplate = jdbcTemplate__	};an,alternative,to,the,more,commonly,used,set,data,source,when,you,want,to,use,the,same,jdbc,template,in,multiple,rdbms,operations,this,is,appropriate,if,the,jdbc,template,has,special,configuration,such,as,a,sqlexception,translator,that,should,apply,to,multiple,rdbms,operation,objects;public,void,set,jdbc,template,jdbc,template,jdbc,template,if,jdbc,template,null,throw,new,illegal,argument,exception,jdbc,template,must,not,be,null,this,jdbc,template,jdbc,template
RdbmsOperation -> public void setJdbcTemplate(JdbcTemplate jdbcTemplate);1356735495;An alternative to the more commonly used setDataSource() when you want to_use the same JdbcTemplate in multiple RdbmsOperations. This is appropriate if the_JdbcTemplate has special configuration such as a SQLExceptionTranslator that should_apply to multiple RdbmsOperation objects.;public void setJdbcTemplate(JdbcTemplate jdbcTemplate) {_		if (jdbcTemplate == null) {_			throw new IllegalArgumentException("jdbcTemplate must not be null")__		}_		this.jdbcTemplate = jdbcTemplate__	};an,alternative,to,the,more,commonly,used,set,data,source,when,you,want,to,use,the,same,jdbc,template,in,multiple,rdbms,operations,this,is,appropriate,if,the,jdbc,template,has,special,configuration,such,as,a,sqlexception,translator,that,should,apply,to,multiple,rdbms,operation,objects;public,void,set,jdbc,template,jdbc,template,jdbc,template,if,jdbc,template,null,throw,new,illegal,argument,exception,jdbc,template,must,not,be,null,this,jdbc,template,jdbc,template
RdbmsOperation -> public void setJdbcTemplate(JdbcTemplate jdbcTemplate);1357119239;An alternative to the more commonly used setDataSource() when you want to_use the same JdbcTemplate in multiple RdbmsOperations. This is appropriate if the_JdbcTemplate has special configuration such as a SQLExceptionTranslator that should_apply to multiple RdbmsOperation objects.;public void setJdbcTemplate(JdbcTemplate jdbcTemplate) {_		if (jdbcTemplate == null) {_			throw new IllegalArgumentException("jdbcTemplate must not be null")__		}_		this.jdbcTemplate = jdbcTemplate__	};an,alternative,to,the,more,commonly,used,set,data,source,when,you,want,to,use,the,same,jdbc,template,in,multiple,rdbms,operations,this,is,appropriate,if,the,jdbc,template,has,special,configuration,such,as,a,sqlexception,translator,that,should,apply,to,multiple,rdbms,operation,objects;public,void,set,jdbc,template,jdbc,template,jdbc,template,if,jdbc,template,null,throw,new,illegal,argument,exception,jdbc,template,must,not,be,null,this,jdbc,template,jdbc,template
RdbmsOperation -> public void setJdbcTemplate(JdbcTemplate jdbcTemplate);1368482696;An alternative to the more commonly used setDataSource() when you want to_use the same JdbcTemplate in multiple RdbmsOperations. This is appropriate if the_JdbcTemplate has special configuration such as a SQLExceptionTranslator that should_apply to multiple RdbmsOperation objects.;public void setJdbcTemplate(JdbcTemplate jdbcTemplate) {_		if (jdbcTemplate == null) {_			throw new IllegalArgumentException("jdbcTemplate must not be null")__		}_		this.jdbcTemplate = jdbcTemplate__	};an,alternative,to,the,more,commonly,used,set,data,source,when,you,want,to,use,the,same,jdbc,template,in,multiple,rdbms,operations,this,is,appropriate,if,the,jdbc,template,has,special,configuration,such,as,a,sqlexception,translator,that,should,apply,to,multiple,rdbms,operation,objects;public,void,set,jdbc,template,jdbc,template,jdbc,template,if,jdbc,template,null,throw,new,illegal,argument,exception,jdbc,template,must,not,be,null,this,jdbc,template,jdbc,template
RdbmsOperation -> public void setJdbcTemplate(JdbcTemplate jdbcTemplate);1385412762;An alternative to the more commonly used setDataSource() when you want to_use the same JdbcTemplate in multiple RdbmsOperations. This is appropriate if the_JdbcTemplate has special configuration such as a SQLExceptionTranslator that should_apply to multiple RdbmsOperation objects.;public void setJdbcTemplate(JdbcTemplate jdbcTemplate) {_		if (jdbcTemplate == null) {_			throw new IllegalArgumentException("jdbcTemplate must not be null")__		}_		this.jdbcTemplate = jdbcTemplate__	};an,alternative,to,the,more,commonly,used,set,data,source,when,you,want,to,use,the,same,jdbc,template,in,multiple,rdbms,operations,this,is,appropriate,if,the,jdbc,template,has,special,configuration,such,as,a,sqlexception,translator,that,should,apply,to,multiple,rdbms,operation,objects;public,void,set,jdbc,template,jdbc,template,jdbc,template,if,jdbc,template,null,throw,new,illegal,argument,exception,jdbc,template,must,not,be,null,this,jdbc,template,jdbc,template
RdbmsOperation -> public void setJdbcTemplate(JdbcTemplate jdbcTemplate);1407511029;An alternative to the more commonly used setDataSource() when you want to_use the same JdbcTemplate in multiple RdbmsOperations. This is appropriate if the_JdbcTemplate has special configuration such as a SQLExceptionTranslator that should_apply to multiple RdbmsOperation objects.;public void setJdbcTemplate(JdbcTemplate jdbcTemplate) {_		if (jdbcTemplate == null) {_			throw new IllegalArgumentException("jdbcTemplate must not be null")__		}_		this.jdbcTemplate = jdbcTemplate__	};an,alternative,to,the,more,commonly,used,set,data,source,when,you,want,to,use,the,same,jdbc,template,in,multiple,rdbms,operations,this,is,appropriate,if,the,jdbc,template,has,special,configuration,such,as,a,sqlexception,translator,that,should,apply,to,multiple,rdbms,operation,objects;public,void,set,jdbc,template,jdbc,template,jdbc,template,if,jdbc,template,null,throw,new,illegal,argument,exception,jdbc,template,must,not,be,null,this,jdbc,template,jdbc,template
RdbmsOperation -> public void setJdbcTemplate(JdbcTemplate jdbcTemplate);1446038912;An alternative to the more commonly used setDataSource() when you want to_use the same JdbcTemplate in multiple RdbmsOperations. This is appropriate if the_JdbcTemplate has special configuration such as a SQLExceptionTranslator that should_apply to multiple RdbmsOperation objects.;public void setJdbcTemplate(JdbcTemplate jdbcTemplate) {_		if (jdbcTemplate == null) {_			throw new IllegalArgumentException("jdbcTemplate must not be null")__		}_		this.jdbcTemplate = jdbcTemplate__	};an,alternative,to,the,more,commonly,used,set,data,source,when,you,want,to,use,the,same,jdbc,template,in,multiple,rdbms,operations,this,is,appropriate,if,the,jdbc,template,has,special,configuration,such,as,a,sqlexception,translator,that,should,apply,to,multiple,rdbms,operation,objects;public,void,set,jdbc,template,jdbc,template,jdbc,template,if,jdbc,template,null,throw,new,illegal,argument,exception,jdbc,template,must,not,be,null,this,jdbc,template,jdbc,template
RdbmsOperation -> public void setJdbcTemplate(JdbcTemplate jdbcTemplate);1467730834;An alternative to the more commonly used setDataSource() when you want to_use the same JdbcTemplate in multiple RdbmsOperations. This is appropriate if the_JdbcTemplate has special configuration such as a SQLExceptionTranslator that should_apply to multiple RdbmsOperation objects.;public void setJdbcTemplate(JdbcTemplate jdbcTemplate) {_		if (jdbcTemplate == null) {_			throw new IllegalArgumentException("jdbcTemplate must not be null")__		}_		this.jdbcTemplate = jdbcTemplate__	};an,alternative,to,the,more,commonly,used,set,data,source,when,you,want,to,use,the,same,jdbc,template,in,multiple,rdbms,operations,this,is,appropriate,if,the,jdbc,template,has,special,configuration,such,as,a,sqlexception,translator,that,should,apply,to,multiple,rdbms,operation,objects;public,void,set,jdbc,template,jdbc,template,jdbc,template,if,jdbc,template,null,throw,new,illegal,argument,exception,jdbc,template,must,not,be,null,this,jdbc,template,jdbc,template
RdbmsOperation -> public void setJdbcTemplate(JdbcTemplate jdbcTemplate);1495868221;An alternative to the more commonly used setDataSource() when you want to_use the same JdbcTemplate in multiple RdbmsOperations. This is appropriate if the_JdbcTemplate has special configuration such as a SQLExceptionTranslator that should_apply to multiple RdbmsOperation objects.;public void setJdbcTemplate(JdbcTemplate jdbcTemplate) {_		if (jdbcTemplate == null) {_			throw new IllegalArgumentException("jdbcTemplate must not be null")__		}_		this.jdbcTemplate = jdbcTemplate__	};an,alternative,to,the,more,commonly,used,set,data,source,when,you,want,to,use,the,same,jdbc,template,in,multiple,rdbms,operations,this,is,appropriate,if,the,jdbc,template,has,special,configuration,such,as,a,sqlexception,translator,that,should,apply,to,multiple,rdbms,operation,objects;public,void,set,jdbc,template,jdbc,template,jdbc,template,if,jdbc,template,null,throw,new,illegal,argument,exception,jdbc,template,must,not,be,null,this,jdbc,template,jdbc,template
RdbmsOperation -> public void setJdbcTemplate(JdbcTemplate jdbcTemplate);1496837955;An alternative to the more commonly used setDataSource() when you want to_use the same JdbcTemplate in multiple RdbmsOperations. This is appropriate if the_JdbcTemplate has special configuration such as a SQLExceptionTranslator that should_apply to multiple RdbmsOperation objects.;public void setJdbcTemplate(JdbcTemplate jdbcTemplate) {_		this.jdbcTemplate = jdbcTemplate__	};an,alternative,to,the,more,commonly,used,set,data,source,when,you,want,to,use,the,same,jdbc,template,in,multiple,rdbms,operations,this,is,appropriate,if,the,jdbc,template,has,special,configuration,such,as,a,sqlexception,translator,that,should,apply,to,multiple,rdbms,operation,objects;public,void,set,jdbc,template,jdbc,template,jdbc,template,this,jdbc,template,jdbc,template
RdbmsOperation -> public void setJdbcTemplate(JdbcTemplate jdbcTemplate);1498780456;An alternative to the more commonly used setDataSource() when you want to_use the same JdbcTemplate in multiple RdbmsOperations. This is appropriate if the_JdbcTemplate has special configuration such as a SQLExceptionTranslator that should_apply to multiple RdbmsOperation objects.;public void setJdbcTemplate(JdbcTemplate jdbcTemplate) {_		this.jdbcTemplate = jdbcTemplate__	};an,alternative,to,the,more,commonly,used,set,data,source,when,you,want,to,use,the,same,jdbc,template,in,multiple,rdbms,operations,this,is,appropriate,if,the,jdbc,template,has,special,configuration,such,as,a,sqlexception,translator,that,should,apply,to,multiple,rdbms,operation,objects;public,void,set,jdbc,template,jdbc,template,jdbc,template,this,jdbc,template,jdbc,template
RdbmsOperation -> public void setJdbcTemplate(JdbcTemplate jdbcTemplate);1506519613;An alternative to the more commonly used {@link #setDataSource} when you want to_use the same {@link JdbcTemplate} in multiple {@code RdbmsOperations}. This is_appropriate if the {@code JdbcTemplate} has special configuration such as a_{@link org.springframework.jdbc.support.SQLExceptionTranslator} to be reused.;public void setJdbcTemplate(JdbcTemplate jdbcTemplate) {_		this.jdbcTemplate = jdbcTemplate__	};an,alternative,to,the,more,commonly,used,link,set,data,source,when,you,want,to,use,the,same,link,jdbc,template,in,multiple,code,rdbms,operations,this,is,appropriate,if,the,code,jdbc,template,has,special,configuration,such,as,a,link,org,springframework,jdbc,support,sqlexception,translator,to,be,reused;public,void,set,jdbc,template,jdbc,template,jdbc,template,this,jdbc,template,jdbc,template
RdbmsOperation -> public void setJdbcTemplate(JdbcTemplate jdbcTemplate);1525966356;An alternative to the more commonly used {@link #setDataSource} when you want to_use the same {@link JdbcTemplate} in multiple {@code RdbmsOperations}. This is_appropriate if the {@code JdbcTemplate} has special configuration such as a_{@link org.springframework.jdbc.support.SQLExceptionTranslator} to be reused.;public void setJdbcTemplate(JdbcTemplate jdbcTemplate) {_		this.jdbcTemplate = jdbcTemplate__	};an,alternative,to,the,more,commonly,used,link,set,data,source,when,you,want,to,use,the,same,link,jdbc,template,in,multiple,code,rdbms,operations,this,is,appropriate,if,the,code,jdbc,template,has,special,configuration,such,as,a,link,org,springframework,jdbc,support,sqlexception,translator,to,be,reused;public,void,set,jdbc,template,jdbc,template,jdbc,template,this,jdbc,template,jdbc,template
RdbmsOperation -> public void setJdbcTemplate(JdbcTemplate jdbcTemplate);1530174524;An alternative to the more commonly used {@link #setDataSource} when you want to_use the same {@link JdbcTemplate} in multiple {@code RdbmsOperations}. This is_appropriate if the {@code JdbcTemplate} has special configuration such as a_{@link org.springframework.jdbc.support.SQLExceptionTranslator} to be reused.;public void setJdbcTemplate(JdbcTemplate jdbcTemplate) {_		this.jdbcTemplate = jdbcTemplate__	};an,alternative,to,the,more,commonly,used,link,set,data,source,when,you,want,to,use,the,same,link,jdbc,template,in,multiple,code,rdbms,operations,this,is,appropriate,if,the,code,jdbc,template,has,special,configuration,such,as,a,link,org,springframework,jdbc,support,sqlexception,translator,to,be,reused;public,void,set,jdbc,template,jdbc,template,jdbc,template,this,jdbc,template,jdbc,template
RdbmsOperation -> public void setJdbcTemplate(JdbcTemplate jdbcTemplate);1542899558;An alternative to the more commonly used {@link #setDataSource} when you want to_use the same {@link JdbcTemplate} in multiple {@code RdbmsOperations}. This is_appropriate if the {@code JdbcTemplate} has special configuration such as a_{@link org.springframework.jdbc.support.SQLExceptionTranslator} to be reused.;public void setJdbcTemplate(JdbcTemplate jdbcTemplate) {_		this.jdbcTemplate = jdbcTemplate__	};an,alternative,to,the,more,commonly,used,link,set,data,source,when,you,want,to,use,the,same,link,jdbc,template,in,multiple,code,rdbms,operations,this,is,appropriate,if,the,code,jdbc,template,has,special,configuration,such,as,a,link,org,springframework,jdbc,support,sqlexception,translator,to,be,reused;public,void,set,jdbc,template,jdbc,template,jdbc,template,this,jdbc,template,jdbc,template
RdbmsOperation -> protected abstract void compileInternal() throws InvalidDataAccessApiUsageException_;1328020251;Subclasses must implement this template method to perform their own compilation._Invoked after this base class's compilation is complete._<p>Subclasses can assume that SQL and a DataSource have been supplied._@throws InvalidDataAccessApiUsageException if the subclass hasn't been_properly configured;protected abstract void compileInternal() throws InvalidDataAccessApiUsageException_;subclasses,must,implement,this,template,method,to,perform,their,own,compilation,invoked,after,this,base,class,s,compilation,is,complete,p,subclasses,can,assume,that,sql,and,a,data,source,have,been,supplied,throws,invalid,data,access,api,usage,exception,if,the,subclass,hasn,t,been,properly,configured;protected,abstract,void,compile,internal,throws,invalid,data,access,api,usage,exception
RdbmsOperation -> protected abstract void compileInternal() throws InvalidDataAccessApiUsageException_;1356735495;Subclasses must implement this template method to perform their own compilation._Invoked after this base class's compilation is complete._<p>Subclasses can assume that SQL and a DataSource have been supplied._@throws InvalidDataAccessApiUsageException if the subclass hasn't been_properly configured;protected abstract void compileInternal() throws InvalidDataAccessApiUsageException_;subclasses,must,implement,this,template,method,to,perform,their,own,compilation,invoked,after,this,base,class,s,compilation,is,complete,p,subclasses,can,assume,that,sql,and,a,data,source,have,been,supplied,throws,invalid,data,access,api,usage,exception,if,the,subclass,hasn,t,been,properly,configured;protected,abstract,void,compile,internal,throws,invalid,data,access,api,usage,exception
RdbmsOperation -> protected abstract void compileInternal() throws InvalidDataAccessApiUsageException_;1357119239;Subclasses must implement this template method to perform their own compilation._Invoked after this base class's compilation is complete._<p>Subclasses can assume that SQL and a DataSource have been supplied._@throws InvalidDataAccessApiUsageException if the subclass hasn't been_properly configured;protected abstract void compileInternal() throws InvalidDataAccessApiUsageException_;subclasses,must,implement,this,template,method,to,perform,their,own,compilation,invoked,after,this,base,class,s,compilation,is,complete,p,subclasses,can,assume,that,sql,and,a,data,source,have,been,supplied,throws,invalid,data,access,api,usage,exception,if,the,subclass,hasn,t,been,properly,configured;protected,abstract,void,compile,internal,throws,invalid,data,access,api,usage,exception
RdbmsOperation -> protected abstract void compileInternal() throws InvalidDataAccessApiUsageException_;1368482696;Subclasses must implement this template method to perform their own compilation._Invoked after this base class's compilation is complete._<p>Subclasses can assume that SQL and a DataSource have been supplied._@throws InvalidDataAccessApiUsageException if the subclass hasn't been_properly configured;protected abstract void compileInternal() throws InvalidDataAccessApiUsageException_;subclasses,must,implement,this,template,method,to,perform,their,own,compilation,invoked,after,this,base,class,s,compilation,is,complete,p,subclasses,can,assume,that,sql,and,a,data,source,have,been,supplied,throws,invalid,data,access,api,usage,exception,if,the,subclass,hasn,t,been,properly,configured;protected,abstract,void,compile,internal,throws,invalid,data,access,api,usage,exception
RdbmsOperation -> protected abstract void compileInternal() throws InvalidDataAccessApiUsageException_;1385412762;Subclasses must implement this template method to perform their own compilation._Invoked after this base class's compilation is complete._<p>Subclasses can assume that SQL and a DataSource have been supplied._@throws InvalidDataAccessApiUsageException if the subclass hasn't been_properly configured;protected abstract void compileInternal() throws InvalidDataAccessApiUsageException_;subclasses,must,implement,this,template,method,to,perform,their,own,compilation,invoked,after,this,base,class,s,compilation,is,complete,p,subclasses,can,assume,that,sql,and,a,data,source,have,been,supplied,throws,invalid,data,access,api,usage,exception,if,the,subclass,hasn,t,been,properly,configured;protected,abstract,void,compile,internal,throws,invalid,data,access,api,usage,exception
RdbmsOperation -> protected abstract void compileInternal() throws InvalidDataAccessApiUsageException_;1407511029;Subclasses must implement this template method to perform their own compilation._Invoked after this base class's compilation is complete._<p>Subclasses can assume that SQL and a DataSource have been supplied._@throws InvalidDataAccessApiUsageException if the subclass hasn't been_properly configured;protected abstract void compileInternal() throws InvalidDataAccessApiUsageException_;subclasses,must,implement,this,template,method,to,perform,their,own,compilation,invoked,after,this,base,class,s,compilation,is,complete,p,subclasses,can,assume,that,sql,and,a,data,source,have,been,supplied,throws,invalid,data,access,api,usage,exception,if,the,subclass,hasn,t,been,properly,configured;protected,abstract,void,compile,internal,throws,invalid,data,access,api,usage,exception
RdbmsOperation -> protected abstract void compileInternal() throws InvalidDataAccessApiUsageException_;1446038912;Subclasses must implement this template method to perform their own compilation._Invoked after this base class's compilation is complete._<p>Subclasses can assume that SQL and a DataSource have been supplied._@throws InvalidDataAccessApiUsageException if the subclass hasn't been_properly configured;protected abstract void compileInternal() throws InvalidDataAccessApiUsageException_;subclasses,must,implement,this,template,method,to,perform,their,own,compilation,invoked,after,this,base,class,s,compilation,is,complete,p,subclasses,can,assume,that,sql,and,a,data,source,have,been,supplied,throws,invalid,data,access,api,usage,exception,if,the,subclass,hasn,t,been,properly,configured;protected,abstract,void,compile,internal,throws,invalid,data,access,api,usage,exception
RdbmsOperation -> protected abstract void compileInternal() throws InvalidDataAccessApiUsageException_;1467730834;Subclasses must implement this template method to perform their own compilation._Invoked after this base class's compilation is complete._<p>Subclasses can assume that SQL and a DataSource have been supplied._@throws InvalidDataAccessApiUsageException if the subclass hasn't been_properly configured;protected abstract void compileInternal() throws InvalidDataAccessApiUsageException_;subclasses,must,implement,this,template,method,to,perform,their,own,compilation,invoked,after,this,base,class,s,compilation,is,complete,p,subclasses,can,assume,that,sql,and,a,data,source,have,been,supplied,throws,invalid,data,access,api,usage,exception,if,the,subclass,hasn,t,been,properly,configured;protected,abstract,void,compile,internal,throws,invalid,data,access,api,usage,exception
RdbmsOperation -> protected abstract void compileInternal() throws InvalidDataAccessApiUsageException_;1495868221;Subclasses must implement this template method to perform their own compilation._Invoked after this base class's compilation is complete._<p>Subclasses can assume that SQL and a DataSource have been supplied._@throws InvalidDataAccessApiUsageException if the subclass hasn't been_properly configured;protected abstract void compileInternal() throws InvalidDataAccessApiUsageException_;subclasses,must,implement,this,template,method,to,perform,their,own,compilation,invoked,after,this,base,class,s,compilation,is,complete,p,subclasses,can,assume,that,sql,and,a,data,source,have,been,supplied,throws,invalid,data,access,api,usage,exception,if,the,subclass,hasn,t,been,properly,configured;protected,abstract,void,compile,internal,throws,invalid,data,access,api,usage,exception
RdbmsOperation -> protected abstract void compileInternal() throws InvalidDataAccessApiUsageException_;1496837955;Subclasses must implement this template method to perform their own compilation._Invoked after this base class's compilation is complete._<p>Subclasses can assume that SQL and a DataSource have been supplied._@throws InvalidDataAccessApiUsageException if the subclass hasn't been_properly configured;protected abstract void compileInternal() throws InvalidDataAccessApiUsageException_;subclasses,must,implement,this,template,method,to,perform,their,own,compilation,invoked,after,this,base,class,s,compilation,is,complete,p,subclasses,can,assume,that,sql,and,a,data,source,have,been,supplied,throws,invalid,data,access,api,usage,exception,if,the,subclass,hasn,t,been,properly,configured;protected,abstract,void,compile,internal,throws,invalid,data,access,api,usage,exception
RdbmsOperation -> protected abstract void compileInternal() throws InvalidDataAccessApiUsageException_;1498780456;Subclasses must implement this template method to perform their own compilation._Invoked after this base class's compilation is complete._<p>Subclasses can assume that SQL and a DataSource have been supplied._@throws InvalidDataAccessApiUsageException if the subclass hasn't been_properly configured;protected abstract void compileInternal() throws InvalidDataAccessApiUsageException_;subclasses,must,implement,this,template,method,to,perform,their,own,compilation,invoked,after,this,base,class,s,compilation,is,complete,p,subclasses,can,assume,that,sql,and,a,data,source,have,been,supplied,throws,invalid,data,access,api,usage,exception,if,the,subclass,hasn,t,been,properly,configured;protected,abstract,void,compile,internal,throws,invalid,data,access,api,usage,exception
RdbmsOperation -> protected abstract void compileInternal() throws InvalidDataAccessApiUsageException_;1506519613;Subclasses must implement this template method to perform their own compilation._Invoked after this base class's compilation is complete._<p>Subclasses can assume that SQL and a DataSource have been supplied._@throws InvalidDataAccessApiUsageException if the subclass hasn't been_properly configured;protected abstract void compileInternal() throws InvalidDataAccessApiUsageException_;subclasses,must,implement,this,template,method,to,perform,their,own,compilation,invoked,after,this,base,class,s,compilation,is,complete,p,subclasses,can,assume,that,sql,and,a,data,source,have,been,supplied,throws,invalid,data,access,api,usage,exception,if,the,subclass,hasn,t,been,properly,configured;protected,abstract,void,compile,internal,throws,invalid,data,access,api,usage,exception
RdbmsOperation -> protected abstract void compileInternal() throws InvalidDataAccessApiUsageException_;1525966356;Subclasses must implement this template method to perform their own compilation._Invoked after this base class's compilation is complete._<p>Subclasses can assume that SQL and a DataSource have been supplied._@throws InvalidDataAccessApiUsageException if the subclass hasn't been_properly configured;protected abstract void compileInternal() throws InvalidDataAccessApiUsageException_;subclasses,must,implement,this,template,method,to,perform,their,own,compilation,invoked,after,this,base,class,s,compilation,is,complete,p,subclasses,can,assume,that,sql,and,a,data,source,have,been,supplied,throws,invalid,data,access,api,usage,exception,if,the,subclass,hasn,t,been,properly,configured;protected,abstract,void,compile,internal,throws,invalid,data,access,api,usage,exception
RdbmsOperation -> protected abstract void compileInternal() throws InvalidDataAccessApiUsageException_;1530174524;Subclasses must implement this template method to perform their own compilation._Invoked after this base class's compilation is complete._<p>Subclasses can assume that SQL and a DataSource have been supplied._@throws InvalidDataAccessApiUsageException if the subclass hasn't been_properly configured;protected abstract void compileInternal() throws InvalidDataAccessApiUsageException_;subclasses,must,implement,this,template,method,to,perform,their,own,compilation,invoked,after,this,base,class,s,compilation,is,complete,p,subclasses,can,assume,that,sql,and,a,data,source,have,been,supplied,throws,invalid,data,access,api,usage,exception,if,the,subclass,hasn,t,been,properly,configured;protected,abstract,void,compile,internal,throws,invalid,data,access,api,usage,exception
RdbmsOperation -> protected abstract void compileInternal() throws InvalidDataAccessApiUsageException_;1542899558;Subclasses must implement this template method to perform their own compilation._Invoked after this base class's compilation is complete._<p>Subclasses can assume that SQL and a DataSource have been supplied._@throws InvalidDataAccessApiUsageException if the subclass hasn't been_properly configured;protected abstract void compileInternal() throws InvalidDataAccessApiUsageException_;subclasses,must,implement,this,template,method,to,perform,their,own,compilation,invoked,after,this,base,class,s,compilation,is,complete,p,subclasses,can,assume,that,sql,and,a,data,source,have,been,supplied,throws,invalid,data,access,api,usage,exception,if,the,subclass,hasn,t,been,properly,configured;protected,abstract,void,compile,internal,throws,invalid,data,access,api,usage,exception
RdbmsOperation -> public String getSql();1328020251;Subclasses can override this to supply dynamic SQL if they wish,_but SQL is normally set by calling the setSql() method_or in a subclass constructor.;public String getSql() {_		return this.sql__	};subclasses,can,override,this,to,supply,dynamic,sql,if,they,wish,but,sql,is,normally,set,by,calling,the,set,sql,method,or,in,a,subclass,constructor;public,string,get,sql,return,this,sql
RdbmsOperation -> public String getSql();1356735495;Subclasses can override this to supply dynamic SQL if they wish,_but SQL is normally set by calling the setSql() method_or in a subclass constructor.;public String getSql() {_		return this.sql__	};subclasses,can,override,this,to,supply,dynamic,sql,if,they,wish,but,sql,is,normally,set,by,calling,the,set,sql,method,or,in,a,subclass,constructor;public,string,get,sql,return,this,sql
RdbmsOperation -> public String getSql();1357119239;Subclasses can override this to supply dynamic SQL if they wish,_but SQL is normally set by calling the setSql() method_or in a subclass constructor.;public String getSql() {_		return this.sql__	};subclasses,can,override,this,to,supply,dynamic,sql,if,they,wish,but,sql,is,normally,set,by,calling,the,set,sql,method,or,in,a,subclass,constructor;public,string,get,sql,return,this,sql
RdbmsOperation -> public String getSql();1368482696;Subclasses can override this to supply dynamic SQL if they wish,_but SQL is normally set by calling the setSql() method_or in a subclass constructor.;public String getSql() {_		return this.sql__	};subclasses,can,override,this,to,supply,dynamic,sql,if,they,wish,but,sql,is,normally,set,by,calling,the,set,sql,method,or,in,a,subclass,constructor;public,string,get,sql,return,this,sql
RdbmsOperation -> public String getSql();1385412762;Subclasses can override this to supply dynamic SQL if they wish,_but SQL is normally set by calling the setSql() method_or in a subclass constructor.;public String getSql() {_		return this.sql__	};subclasses,can,override,this,to,supply,dynamic,sql,if,they,wish,but,sql,is,normally,set,by,calling,the,set,sql,method,or,in,a,subclass,constructor;public,string,get,sql,return,this,sql
RdbmsOperation -> public String getSql();1407511029;Subclasses can override this to supply dynamic SQL if they wish,_but SQL is normally set by calling the setSql() method_or in a subclass constructor.;public String getSql() {_		return this.sql__	};subclasses,can,override,this,to,supply,dynamic,sql,if,they,wish,but,sql,is,normally,set,by,calling,the,set,sql,method,or,in,a,subclass,constructor;public,string,get,sql,return,this,sql
RdbmsOperation -> public String getSql();1446038912;Subclasses can override this to supply dynamic SQL if they wish,_but SQL is normally set by calling the setSql() method_or in a subclass constructor.;public String getSql() {_		return this.sql__	};subclasses,can,override,this,to,supply,dynamic,sql,if,they,wish,but,sql,is,normally,set,by,calling,the,set,sql,method,or,in,a,subclass,constructor;public,string,get,sql,return,this,sql
RdbmsOperation -> public String getSql();1467730834;Subclasses can override this to supply dynamic SQL if they wish,_but SQL is normally set by calling the setSql() method_or in a subclass constructor.;public String getSql() {_		return this.sql__	};subclasses,can,override,this,to,supply,dynamic,sql,if,they,wish,but,sql,is,normally,set,by,calling,the,set,sql,method,or,in,a,subclass,constructor;public,string,get,sql,return,this,sql
RdbmsOperation -> public String getSql();1495868221;Subclasses can override this to supply dynamic SQL if they wish,_but SQL is normally set by calling the setSql() method_or in a subclass constructor.;public String getSql() {_		return this.sql__	};subclasses,can,override,this,to,supply,dynamic,sql,if,they,wish,but,sql,is,normally,set,by,calling,the,set,sql,method,or,in,a,subclass,constructor;public,string,get,sql,return,this,sql
RdbmsOperation -> protected void checkCompiled();1328020251;Check whether this operation has been compiled already__lazily compile it if not already compiled._<p>Automatically called by <code>validateParameters</code>._@see #validateParameters;protected void checkCompiled() {_		if (!isCompiled()) {_			logger.debug("SQL operation not compiled before execution - invoking compile")__			compile()__		}_	};check,whether,this,operation,has,been,compiled,already,lazily,compile,it,if,not,already,compiled,p,automatically,called,by,code,validate,parameters,code,see,validate,parameters;protected,void,check,compiled,if,is,compiled,logger,debug,sql,operation,not,compiled,before,execution,invoking,compile,compile
RdbmsOperation -> protected void checkCompiled();1356735495;Check whether this operation has been compiled already__lazily compile it if not already compiled._<p>Automatically called by {@code validateParameters}._@see #validateParameters;protected void checkCompiled() {_		if (!isCompiled()) {_			logger.debug("SQL operation not compiled before execution - invoking compile")__			compile()__		}_	};check,whether,this,operation,has,been,compiled,already,lazily,compile,it,if,not,already,compiled,p,automatically,called,by,code,validate,parameters,see,validate,parameters;protected,void,check,compiled,if,is,compiled,logger,debug,sql,operation,not,compiled,before,execution,invoking,compile,compile
RdbmsOperation -> protected void checkCompiled();1357119239;Check whether this operation has been compiled already__lazily compile it if not already compiled._<p>Automatically called by {@code validateParameters}._@see #validateParameters;protected void checkCompiled() {_		if (!isCompiled()) {_			logger.debug("SQL operation not compiled before execution - invoking compile")__			compile()__		}_	};check,whether,this,operation,has,been,compiled,already,lazily,compile,it,if,not,already,compiled,p,automatically,called,by,code,validate,parameters,see,validate,parameters;protected,void,check,compiled,if,is,compiled,logger,debug,sql,operation,not,compiled,before,execution,invoking,compile,compile
RdbmsOperation -> protected void checkCompiled();1368482696;Check whether this operation has been compiled already__lazily compile it if not already compiled._<p>Automatically called by {@code validateParameters}._@see #validateParameters;protected void checkCompiled() {_		if (!isCompiled()) {_			logger.debug("SQL operation not compiled before execution - invoking compile")__			compile()__		}_	};check,whether,this,operation,has,been,compiled,already,lazily,compile,it,if,not,already,compiled,p,automatically,called,by,code,validate,parameters,see,validate,parameters;protected,void,check,compiled,if,is,compiled,logger,debug,sql,operation,not,compiled,before,execution,invoking,compile,compile
RdbmsOperation -> protected void checkCompiled();1385412762;Check whether this operation has been compiled already__lazily compile it if not already compiled._<p>Automatically called by {@code validateParameters}._@see #validateParameters;protected void checkCompiled() {_		if (!isCompiled()) {_			logger.debug("SQL operation not compiled before execution - invoking compile")__			compile()__		}_	};check,whether,this,operation,has,been,compiled,already,lazily,compile,it,if,not,already,compiled,p,automatically,called,by,code,validate,parameters,see,validate,parameters;protected,void,check,compiled,if,is,compiled,logger,debug,sql,operation,not,compiled,before,execution,invoking,compile,compile
RdbmsOperation -> protected void checkCompiled();1407511029;Check whether this operation has been compiled already__lazily compile it if not already compiled._<p>Automatically called by {@code validateParameters}._@see #validateParameters;protected void checkCompiled() {_		if (!isCompiled()) {_			logger.debug("SQL operation not compiled before execution - invoking compile")__			compile()__		}_	};check,whether,this,operation,has,been,compiled,already,lazily,compile,it,if,not,already,compiled,p,automatically,called,by,code,validate,parameters,see,validate,parameters;protected,void,check,compiled,if,is,compiled,logger,debug,sql,operation,not,compiled,before,execution,invoking,compile,compile
RdbmsOperation -> protected void checkCompiled();1446038912;Check whether this operation has been compiled already__lazily compile it if not already compiled._<p>Automatically called by {@code validateParameters}._@see #validateParameters;protected void checkCompiled() {_		if (!isCompiled()) {_			logger.debug("SQL operation not compiled before execution - invoking compile")__			compile()__		}_	};check,whether,this,operation,has,been,compiled,already,lazily,compile,it,if,not,already,compiled,p,automatically,called,by,code,validate,parameters,see,validate,parameters;protected,void,check,compiled,if,is,compiled,logger,debug,sql,operation,not,compiled,before,execution,invoking,compile,compile
RdbmsOperation -> protected void checkCompiled();1467730834;Check whether this operation has been compiled already__lazily compile it if not already compiled._<p>Automatically called by {@code validateParameters}._@see #validateParameters;protected void checkCompiled() {_		if (!isCompiled()) {_			logger.debug("SQL operation not compiled before execution - invoking compile")__			compile()__		}_	};check,whether,this,operation,has,been,compiled,already,lazily,compile,it,if,not,already,compiled,p,automatically,called,by,code,validate,parameters,see,validate,parameters;protected,void,check,compiled,if,is,compiled,logger,debug,sql,operation,not,compiled,before,execution,invoking,compile,compile
RdbmsOperation -> protected void checkCompiled();1495868221;Check whether this operation has been compiled already__lazily compile it if not already compiled._<p>Automatically called by {@code validateParameters}._@see #validateParameters;protected void checkCompiled() {_		if (!isCompiled()) {_			logger.debug("SQL operation not compiled before execution - invoking compile")__			compile()__		}_	};check,whether,this,operation,has,been,compiled,already,lazily,compile,it,if,not,already,compiled,p,automatically,called,by,code,validate,parameters,see,validate,parameters;protected,void,check,compiled,if,is,compiled,logger,debug,sql,operation,not,compiled,before,execution,invoking,compile,compile
RdbmsOperation -> protected void checkCompiled();1496837955;Check whether this operation has been compiled already__lazily compile it if not already compiled._<p>Automatically called by {@code validateParameters}._@see #validateParameters;protected void checkCompiled() {_		if (!isCompiled()) {_			logger.debug("SQL operation not compiled before execution - invoking compile")__			compile()__		}_	};check,whether,this,operation,has,been,compiled,already,lazily,compile,it,if,not,already,compiled,p,automatically,called,by,code,validate,parameters,see,validate,parameters;protected,void,check,compiled,if,is,compiled,logger,debug,sql,operation,not,compiled,before,execution,invoking,compile,compile
RdbmsOperation -> protected void checkCompiled();1498780456;Check whether this operation has been compiled already__lazily compile it if not already compiled._<p>Automatically called by {@code validateParameters}._@see #validateParameters;protected void checkCompiled() {_		if (!isCompiled()) {_			logger.debug("SQL operation not compiled before execution - invoking compile")__			compile()__		}_	};check,whether,this,operation,has,been,compiled,already,lazily,compile,it,if,not,already,compiled,p,automatically,called,by,code,validate,parameters,see,validate,parameters;protected,void,check,compiled,if,is,compiled,logger,debug,sql,operation,not,compiled,before,execution,invoking,compile,compile
RdbmsOperation -> protected void checkCompiled();1506519613;Check whether this operation has been compiled already__lazily compile it if not already compiled._<p>Automatically called by {@code validateParameters}._@see #validateParameters;protected void checkCompiled() {_		if (!isCompiled()) {_			logger.debug("SQL operation not compiled before execution - invoking compile")__			compile()__		}_	};check,whether,this,operation,has,been,compiled,already,lazily,compile,it,if,not,already,compiled,p,automatically,called,by,code,validate,parameters,see,validate,parameters;protected,void,check,compiled,if,is,compiled,logger,debug,sql,operation,not,compiled,before,execution,invoking,compile,compile
RdbmsOperation -> protected void checkCompiled();1525966356;Check whether this operation has been compiled already__lazily compile it if not already compiled._<p>Automatically called by {@code validateParameters}._@see #validateParameters;protected void checkCompiled() {_		if (!isCompiled()) {_			logger.debug("SQL operation not compiled before execution - invoking compile")__			compile()__		}_	};check,whether,this,operation,has,been,compiled,already,lazily,compile,it,if,not,already,compiled,p,automatically,called,by,code,validate,parameters,see,validate,parameters;protected,void,check,compiled,if,is,compiled,logger,debug,sql,operation,not,compiled,before,execution,invoking,compile,compile
RdbmsOperation -> protected void checkCompiled();1530174524;Check whether this operation has been compiled already__lazily compile it if not already compiled._<p>Automatically called by {@code validateParameters}._@see #validateParameters;protected void checkCompiled() {_		if (!isCompiled()) {_			logger.debug("SQL operation not compiled before execution - invoking compile")__			compile()__		}_	};check,whether,this,operation,has,been,compiled,already,lazily,compile,it,if,not,already,compiled,p,automatically,called,by,code,validate,parameters,see,validate,parameters;protected,void,check,compiled,if,is,compiled,logger,debug,sql,operation,not,compiled,before,execution,invoking,compile,compile
RdbmsOperation -> protected void checkCompiled();1542899558;Check whether this operation has been compiled already__lazily compile it if not already compiled._<p>Automatically called by {@code validateParameters}._@see #validateParameters;protected void checkCompiled() {_		if (!isCompiled()) {_			logger.debug("SQL operation not compiled before execution - invoking compile")__			compile()__		}_	};check,whether,this,operation,has,been,compiled,already,lazily,compile,it,if,not,already,compiled,p,automatically,called,by,code,validate,parameters,see,validate,parameters;protected,void,check,compiled,if,is,compiled,logger,debug,sql,operation,not,compiled,before,execution,invoking,compile,compile
RdbmsOperation -> @Nullable 	public String[] getGeneratedKeysColumnNames();1496837955;Return the column names of the auto generated keys.;@Nullable_	public String[] getGeneratedKeysColumnNames() {_		return this.generatedKeysColumnNames__	};return,the,column,names,of,the,auto,generated,keys;nullable,public,string,get,generated,keys,column,names,return,this,generated,keys,column,names
RdbmsOperation -> @Nullable 	public String[] getGeneratedKeysColumnNames();1498780456;Return the column names of the auto generated keys.;@Nullable_	public String[] getGeneratedKeysColumnNames() {_		return this.generatedKeysColumnNames__	};return,the,column,names,of,the,auto,generated,keys;nullable,public,string,get,generated,keys,column,names,return,this,generated,keys,column,names
RdbmsOperation -> @Nullable 	public String[] getGeneratedKeysColumnNames();1506519613;Return the column names of the auto generated keys.;@Nullable_	public String[] getGeneratedKeysColumnNames() {_		return this.generatedKeysColumnNames__	};return,the,column,names,of,the,auto,generated,keys;nullable,public,string,get,generated,keys,column,names,return,this,generated,keys,column,names
RdbmsOperation -> @Nullable 	public String[] getGeneratedKeysColumnNames();1525966356;Return the column names of the auto generated keys.;@Nullable_	public String[] getGeneratedKeysColumnNames() {_		return this.generatedKeysColumnNames__	};return,the,column,names,of,the,auto,generated,keys;nullable,public,string,get,generated,keys,column,names,return,this,generated,keys,column,names
RdbmsOperation -> @Nullable 	public String[] getGeneratedKeysColumnNames();1530174524;Return the column names of the auto generated keys.;@Nullable_	public String[] getGeneratedKeysColumnNames() {_		return this.generatedKeysColumnNames__	};return,the,column,names,of,the,auto,generated,keys;nullable,public,string,get,generated,keys,column,names,return,this,generated,keys,column,names
RdbmsOperation -> @Nullable 	public String[] getGeneratedKeysColumnNames();1542899558;Return the column names of the auto generated keys.;@Nullable_	public String[] getGeneratedKeysColumnNames() {_		return this.generatedKeysColumnNames__	};return,the,column,names,of,the,auto,generated,keys;nullable,public,string,get,generated,keys,column,names,return,this,generated,keys,column,names
RdbmsOperation -> public void setParameters(SqlParameter... parameters);1496837955;Add one or more declared parameters. Used for configuring this operation_when used in a bean factory.  Each parameter will specify SQL type and (optionally)_the parameter's name._@param parameters Array containing the declared {@link SqlParameter} objects_@see #declaredParameters;public void setParameters(SqlParameter... parameters) {_		if (isCompiled()) {_			throw new InvalidDataAccessApiUsageException("Cannot add parameters once the query is compiled")__		}_		for (int i = 0_ i < parameters.length_ i++) {_			if (parameters[i] != null) {_				this.declaredParameters.add(parameters[i])__			}_			else {_				throw new InvalidDataAccessApiUsageException("Cannot add parameter at index " + i + " from " +_						Arrays.asList(parameters) + " since it is 'null'")__			}_		}_	};add,one,or,more,declared,parameters,used,for,configuring,this,operation,when,used,in,a,bean,factory,each,parameter,will,specify,sql,type,and,optionally,the,parameter,s,name,param,parameters,array,containing,the,declared,link,sql,parameter,objects,see,declared,parameters;public,void,set,parameters,sql,parameter,parameters,if,is,compiled,throw,new,invalid,data,access,api,usage,exception,cannot,add,parameters,once,the,query,is,compiled,for,int,i,0,i,parameters,length,i,if,parameters,i,null,this,declared,parameters,add,parameters,i,else,throw,new,invalid,data,access,api,usage,exception,cannot,add,parameter,at,index,i,from,arrays,as,list,parameters,since,it,is,null
RdbmsOperation -> public void setParameters(SqlParameter... parameters);1498780456;Add one or more declared parameters. Used for configuring this operation_when used in a bean factory.  Each parameter will specify SQL type and (optionally)_the parameter's name._@param parameters Array containing the declared {@link SqlParameter} objects_@see #declaredParameters;public void setParameters(SqlParameter... parameters) {_		if (isCompiled()) {_			throw new InvalidDataAccessApiUsageException("Cannot add parameters once the query is compiled")__		}_		for (int i = 0_ i < parameters.length_ i++) {_			if (parameters[i] != null) {_				this.declaredParameters.add(parameters[i])__			}_			else {_				throw new InvalidDataAccessApiUsageException("Cannot add parameter at index " + i + " from " +_						Arrays.asList(parameters) + " since it is 'null'")__			}_		}_	};add,one,or,more,declared,parameters,used,for,configuring,this,operation,when,used,in,a,bean,factory,each,parameter,will,specify,sql,type,and,optionally,the,parameter,s,name,param,parameters,array,containing,the,declared,link,sql,parameter,objects,see,declared,parameters;public,void,set,parameters,sql,parameter,parameters,if,is,compiled,throw,new,invalid,data,access,api,usage,exception,cannot,add,parameters,once,the,query,is,compiled,for,int,i,0,i,parameters,length,i,if,parameters,i,null,this,declared,parameters,add,parameters,i,else,throw,new,invalid,data,access,api,usage,exception,cannot,add,parameter,at,index,i,from,arrays,as,list,parameters,since,it,is,null
RdbmsOperation -> public void setParameters(SqlParameter... parameters);1506519613;Add one or more declared parameters. Used for configuring this operation_when used in a bean factory.  Each parameter will specify SQL type and (optionally)_the parameter's name._@param parameters Array containing the declared {@link SqlParameter} objects_@see #declaredParameters;public void setParameters(SqlParameter... parameters) {_		if (isCompiled()) {_			throw new InvalidDataAccessApiUsageException("Cannot add parameters once the query is compiled")__		}_		for (int i = 0_ i < parameters.length_ i++) {_			if (parameters[i] != null) {_				this.declaredParameters.add(parameters[i])__			}_			else {_				throw new InvalidDataAccessApiUsageException("Cannot add parameter at index " + i + " from " +_						Arrays.asList(parameters) + " since it is 'null'")__			}_		}_	};add,one,or,more,declared,parameters,used,for,configuring,this,operation,when,used,in,a,bean,factory,each,parameter,will,specify,sql,type,and,optionally,the,parameter,s,name,param,parameters,array,containing,the,declared,link,sql,parameter,objects,see,declared,parameters;public,void,set,parameters,sql,parameter,parameters,if,is,compiled,throw,new,invalid,data,access,api,usage,exception,cannot,add,parameters,once,the,query,is,compiled,for,int,i,0,i,parameters,length,i,if,parameters,i,null,this,declared,parameters,add,parameters,i,else,throw,new,invalid,data,access,api,usage,exception,cannot,add,parameter,at,index,i,from,arrays,as,list,parameters,since,it,is,null
RdbmsOperation -> public void setParameters(SqlParameter... parameters);1525966356;Add one or more declared parameters. Used for configuring this operation_when used in a bean factory.  Each parameter will specify SQL type and (optionally)_the parameter's name._@param parameters Array containing the declared {@link SqlParameter} objects_@see #declaredParameters;public void setParameters(SqlParameter... parameters) {_		if (isCompiled()) {_			throw new InvalidDataAccessApiUsageException("Cannot add parameters once the query is compiled")__		}_		for (int i = 0_ i < parameters.length_ i++) {_			if (parameters[i] != null) {_				this.declaredParameters.add(parameters[i])__			}_			else {_				throw new InvalidDataAccessApiUsageException("Cannot add parameter at index " + i + " from " +_						Arrays.asList(parameters) + " since it is 'null'")__			}_		}_	};add,one,or,more,declared,parameters,used,for,configuring,this,operation,when,used,in,a,bean,factory,each,parameter,will,specify,sql,type,and,optionally,the,parameter,s,name,param,parameters,array,containing,the,declared,link,sql,parameter,objects,see,declared,parameters;public,void,set,parameters,sql,parameter,parameters,if,is,compiled,throw,new,invalid,data,access,api,usage,exception,cannot,add,parameters,once,the,query,is,compiled,for,int,i,0,i,parameters,length,i,if,parameters,i,null,this,declared,parameters,add,parameters,i,else,throw,new,invalid,data,access,api,usage,exception,cannot,add,parameter,at,index,i,from,arrays,as,list,parameters,since,it,is,null
RdbmsOperation -> public void setParameters(SqlParameter... parameters);1530174524;Add one or more declared parameters. Used for configuring this operation_when used in a bean factory.  Each parameter will specify SQL type and (optionally)_the parameter's name._@param parameters an array containing the declared {@link SqlParameter} objects_@see #declaredParameters;public void setParameters(SqlParameter... parameters) {_		if (isCompiled()) {_			throw new InvalidDataAccessApiUsageException("Cannot add parameters once the query is compiled")__		}_		for (int i = 0_ i < parameters.length_ i++) {_			if (parameters[i] != null) {_				this.declaredParameters.add(parameters[i])__			}_			else {_				throw new InvalidDataAccessApiUsageException("Cannot add parameter at index " + i + " from " +_						Arrays.asList(parameters) + " since it is 'null'")__			}_		}_	};add,one,or,more,declared,parameters,used,for,configuring,this,operation,when,used,in,a,bean,factory,each,parameter,will,specify,sql,type,and,optionally,the,parameter,s,name,param,parameters,an,array,containing,the,declared,link,sql,parameter,objects,see,declared,parameters;public,void,set,parameters,sql,parameter,parameters,if,is,compiled,throw,new,invalid,data,access,api,usage,exception,cannot,add,parameters,once,the,query,is,compiled,for,int,i,0,i,parameters,length,i,if,parameters,i,null,this,declared,parameters,add,parameters,i,else,throw,new,invalid,data,access,api,usage,exception,cannot,add,parameter,at,index,i,from,arrays,as,list,parameters,since,it,is,null
RdbmsOperation -> public void setParameters(SqlParameter... parameters);1542899558;Add one or more declared parameters. Used for configuring this operation_when used in a bean factory.  Each parameter will specify SQL type and (optionally)_the parameter's name._@param parameters an array containing the declared {@link SqlParameter} objects_@see #declaredParameters;public void setParameters(SqlParameter... parameters) {_		if (isCompiled()) {_			throw new InvalidDataAccessApiUsageException("Cannot add parameters once the query is compiled")__		}_		for (int i = 0_ i < parameters.length_ i++) {_			if (parameters[i] != null) {_				this.declaredParameters.add(parameters[i])__			}_			else {_				throw new InvalidDataAccessApiUsageException("Cannot add parameter at index " + i + " from " +_						Arrays.asList(parameters) + " since it is 'null'")__			}_		}_	};add,one,or,more,declared,parameters,used,for,configuring,this,operation,when,used,in,a,bean,factory,each,parameter,will,specify,sql,type,and,optionally,the,parameter,s,name,param,parameters,an,array,containing,the,declared,link,sql,parameter,objects,see,declared,parameters;public,void,set,parameters,sql,parameter,parameters,if,is,compiled,throw,new,invalid,data,access,api,usage,exception,cannot,add,parameters,once,the,query,is,compiled,for,int,i,0,i,parameters,length,i,if,parameters,i,null,this,declared,parameters,add,parameters,i,else,throw,new,invalid,data,access,api,usage,exception,cannot,add,parameter,at,index,i,from,arrays,as,list,parameters,since,it,is,null
RdbmsOperation -> public void setDataSource(DataSource dataSource);1328020251;Set the JDBC DataSource to obtain connections from._@see org.springframework.jdbc.core.JdbcTemplate#setDataSource;public void setDataSource(DataSource dataSource) {_		this.jdbcTemplate.setDataSource(dataSource)__	};set,the,jdbc,data,source,to,obtain,connections,from,see,org,springframework,jdbc,core,jdbc,template,set,data,source;public,void,set,data,source,data,source,data,source,this,jdbc,template,set,data,source,data,source
RdbmsOperation -> public void setDataSource(DataSource dataSource);1356735495;Set the JDBC DataSource to obtain connections from._@see org.springframework.jdbc.core.JdbcTemplate#setDataSource;public void setDataSource(DataSource dataSource) {_		this.jdbcTemplate.setDataSource(dataSource)__	};set,the,jdbc,data,source,to,obtain,connections,from,see,org,springframework,jdbc,core,jdbc,template,set,data,source;public,void,set,data,source,data,source,data,source,this,jdbc,template,set,data,source,data,source
RdbmsOperation -> public void setDataSource(DataSource dataSource);1357119239;Set the JDBC DataSource to obtain connections from._@see org.springframework.jdbc.core.JdbcTemplate#setDataSource;public void setDataSource(DataSource dataSource) {_		this.jdbcTemplate.setDataSource(dataSource)__	};set,the,jdbc,data,source,to,obtain,connections,from,see,org,springframework,jdbc,core,jdbc,template,set,data,source;public,void,set,data,source,data,source,data,source,this,jdbc,template,set,data,source,data,source
RdbmsOperation -> public void setDataSource(DataSource dataSource);1368482696;Set the JDBC DataSource to obtain connections from._@see org.springframework.jdbc.core.JdbcTemplate#setDataSource;public void setDataSource(DataSource dataSource) {_		this.jdbcTemplate.setDataSource(dataSource)__	};set,the,jdbc,data,source,to,obtain,connections,from,see,org,springframework,jdbc,core,jdbc,template,set,data,source;public,void,set,data,source,data,source,data,source,this,jdbc,template,set,data,source,data,source
RdbmsOperation -> public void setDataSource(DataSource dataSource);1385412762;Set the JDBC DataSource to obtain connections from._@see org.springframework.jdbc.core.JdbcTemplate#setDataSource;public void setDataSource(DataSource dataSource) {_		this.jdbcTemplate.setDataSource(dataSource)__	};set,the,jdbc,data,source,to,obtain,connections,from,see,org,springframework,jdbc,core,jdbc,template,set,data,source;public,void,set,data,source,data,source,data,source,this,jdbc,template,set,data,source,data,source
RdbmsOperation -> public void setDataSource(DataSource dataSource);1407511029;Set the JDBC DataSource to obtain connections from._@see org.springframework.jdbc.core.JdbcTemplate#setDataSource;public void setDataSource(DataSource dataSource) {_		this.jdbcTemplate.setDataSource(dataSource)__	};set,the,jdbc,data,source,to,obtain,connections,from,see,org,springframework,jdbc,core,jdbc,template,set,data,source;public,void,set,data,source,data,source,data,source,this,jdbc,template,set,data,source,data,source
RdbmsOperation -> public void setDataSource(DataSource dataSource);1446038912;Set the JDBC DataSource to obtain connections from._@see org.springframework.jdbc.core.JdbcTemplate#setDataSource;public void setDataSource(DataSource dataSource) {_		this.jdbcTemplate.setDataSource(dataSource)__	};set,the,jdbc,data,source,to,obtain,connections,from,see,org,springframework,jdbc,core,jdbc,template,set,data,source;public,void,set,data,source,data,source,data,source,this,jdbc,template,set,data,source,data,source
RdbmsOperation -> public void setDataSource(DataSource dataSource);1467730834;Set the JDBC DataSource to obtain connections from._@see org.springframework.jdbc.core.JdbcTemplate#setDataSource;public void setDataSource(DataSource dataSource) {_		this.jdbcTemplate.setDataSource(dataSource)__	};set,the,jdbc,data,source,to,obtain,connections,from,see,org,springframework,jdbc,core,jdbc,template,set,data,source;public,void,set,data,source,data,source,data,source,this,jdbc,template,set,data,source,data,source
RdbmsOperation -> public void setDataSource(DataSource dataSource);1495868221;Set the JDBC DataSource to obtain connections from._@see org.springframework.jdbc.core.JdbcTemplate#setDataSource;public void setDataSource(DataSource dataSource) {_		this.jdbcTemplate.setDataSource(dataSource)__	};set,the,jdbc,data,source,to,obtain,connections,from,see,org,springframework,jdbc,core,jdbc,template,set,data,source;public,void,set,data,source,data,source,data,source,this,jdbc,template,set,data,source,data,source
RdbmsOperation -> public void setDataSource(DataSource dataSource);1496837955;Set the JDBC DataSource to obtain connections from._@see org.springframework.jdbc.core.JdbcTemplate#setDataSource;public void setDataSource(DataSource dataSource) {_		this.jdbcTemplate.setDataSource(dataSource)__	};set,the,jdbc,data,source,to,obtain,connections,from,see,org,springframework,jdbc,core,jdbc,template,set,data,source;public,void,set,data,source,data,source,data,source,this,jdbc,template,set,data,source,data,source
RdbmsOperation -> public void setDataSource(DataSource dataSource);1498780456;Set the JDBC DataSource to obtain connections from._@see org.springframework.jdbc.core.JdbcTemplate#setDataSource;public void setDataSource(DataSource dataSource) {_		this.jdbcTemplate.setDataSource(dataSource)__	};set,the,jdbc,data,source,to,obtain,connections,from,see,org,springframework,jdbc,core,jdbc,template,set,data,source;public,void,set,data,source,data,source,data,source,this,jdbc,template,set,data,source,data,source
RdbmsOperation -> public void setDataSource(DataSource dataSource);1506519613;Set the JDBC {@link DataSource} to obtain connections from._@see org.springframework.jdbc.core.JdbcTemplate#setDataSource;public void setDataSource(DataSource dataSource) {_		this.jdbcTemplate.setDataSource(dataSource)__	};set,the,jdbc,link,data,source,to,obtain,connections,from,see,org,springframework,jdbc,core,jdbc,template,set,data,source;public,void,set,data,source,data,source,data,source,this,jdbc,template,set,data,source,data,source
RdbmsOperation -> public void setDataSource(DataSource dataSource);1525966356;Set the JDBC {@link DataSource} to obtain connections from._@see org.springframework.jdbc.core.JdbcTemplate#setDataSource;public void setDataSource(DataSource dataSource) {_		this.jdbcTemplate.setDataSource(dataSource)__	};set,the,jdbc,link,data,source,to,obtain,connections,from,see,org,springframework,jdbc,core,jdbc,template,set,data,source;public,void,set,data,source,data,source,data,source,this,jdbc,template,set,data,source,data,source
RdbmsOperation -> public void setDataSource(DataSource dataSource);1530174524;Set the JDBC {@link DataSource} to obtain connections from._@see org.springframework.jdbc.core.JdbcTemplate#setDataSource;public void setDataSource(DataSource dataSource) {_		this.jdbcTemplate.setDataSource(dataSource)__	};set,the,jdbc,link,data,source,to,obtain,connections,from,see,org,springframework,jdbc,core,jdbc,template,set,data,source;public,void,set,data,source,data,source,data,source,this,jdbc,template,set,data,source,data,source
RdbmsOperation -> public void setDataSource(DataSource dataSource);1542899558;Set the JDBC {@link DataSource} to obtain connections from._@see org.springframework.jdbc.core.JdbcTemplate#setDataSource;public void setDataSource(DataSource dataSource) {_		this.jdbcTemplate.setDataSource(dataSource)__	};set,the,jdbc,link,data,source,to,obtain,connections,from,see,org,springframework,jdbc,core,jdbc,template,set,data,source;public,void,set,data,source,data,source,data,source,this,jdbc,template,set,data,source,data,source
RdbmsOperation -> public JdbcTemplate getJdbcTemplate();1328020251;Return the JdbcTemplate object used by this object.;public JdbcTemplate getJdbcTemplate() {_		return this.jdbcTemplate__	};return,the,jdbc,template,object,used,by,this,object;public,jdbc,template,get,jdbc,template,return,this,jdbc,template
RdbmsOperation -> public JdbcTemplate getJdbcTemplate();1356735495;Return the JdbcTemplate object used by this object.;public JdbcTemplate getJdbcTemplate() {_		return this.jdbcTemplate__	};return,the,jdbc,template,object,used,by,this,object;public,jdbc,template,get,jdbc,template,return,this,jdbc,template
RdbmsOperation -> public JdbcTemplate getJdbcTemplate();1357119239;Return the JdbcTemplate object used by this object.;public JdbcTemplate getJdbcTemplate() {_		return this.jdbcTemplate__	};return,the,jdbc,template,object,used,by,this,object;public,jdbc,template,get,jdbc,template,return,this,jdbc,template
RdbmsOperation -> public JdbcTemplate getJdbcTemplate();1368482696;Return the JdbcTemplate object used by this object.;public JdbcTemplate getJdbcTemplate() {_		return this.jdbcTemplate__	};return,the,jdbc,template,object,used,by,this,object;public,jdbc,template,get,jdbc,template,return,this,jdbc,template
RdbmsOperation -> public JdbcTemplate getJdbcTemplate();1385412762;Return the JdbcTemplate object used by this object.;public JdbcTemplate getJdbcTemplate() {_		return this.jdbcTemplate__	};return,the,jdbc,template,object,used,by,this,object;public,jdbc,template,get,jdbc,template,return,this,jdbc,template
RdbmsOperation -> public JdbcTemplate getJdbcTemplate();1407511029;Return the JdbcTemplate object used by this object.;public JdbcTemplate getJdbcTemplate() {_		return this.jdbcTemplate__	};return,the,jdbc,template,object,used,by,this,object;public,jdbc,template,get,jdbc,template,return,this,jdbc,template
RdbmsOperation -> public JdbcTemplate getJdbcTemplate();1446038912;Return the JdbcTemplate object used by this object.;public JdbcTemplate getJdbcTemplate() {_		return this.jdbcTemplate__	};return,the,jdbc,template,object,used,by,this,object;public,jdbc,template,get,jdbc,template,return,this,jdbc,template
RdbmsOperation -> public JdbcTemplate getJdbcTemplate();1467730834;Return the JdbcTemplate object used by this object.;public JdbcTemplate getJdbcTemplate() {_		return this.jdbcTemplate__	};return,the,jdbc,template,object,used,by,this,object;public,jdbc,template,get,jdbc,template,return,this,jdbc,template
RdbmsOperation -> public JdbcTemplate getJdbcTemplate();1495868221;Return the JdbcTemplate object used by this object.;public JdbcTemplate getJdbcTemplate() {_		return this.jdbcTemplate__	};return,the,jdbc,template,object,used,by,this,object;public,jdbc,template,get,jdbc,template,return,this,jdbc,template
RdbmsOperation -> public JdbcTemplate getJdbcTemplate();1496837955;Return the JdbcTemplate object used by this object.;public JdbcTemplate getJdbcTemplate() {_		return this.jdbcTemplate__	};return,the,jdbc,template,object,used,by,this,object;public,jdbc,template,get,jdbc,template,return,this,jdbc,template
RdbmsOperation -> public JdbcTemplate getJdbcTemplate();1498780456;Return the JdbcTemplate object used by this object.;public JdbcTemplate getJdbcTemplate() {_		return this.jdbcTemplate__	};return,the,jdbc,template,object,used,by,this,object;public,jdbc,template,get,jdbc,template,return,this,jdbc,template
RdbmsOperation -> public JdbcTemplate getJdbcTemplate();1506519613;Return the {@link JdbcTemplate} used by this operation object.;public JdbcTemplate getJdbcTemplate() {_		return this.jdbcTemplate__	};return,the,link,jdbc,template,used,by,this,operation,object;public,jdbc,template,get,jdbc,template,return,this,jdbc,template
RdbmsOperation -> public JdbcTemplate getJdbcTemplate();1525966356;Return the {@link JdbcTemplate} used by this operation object.;public JdbcTemplate getJdbcTemplate() {_		return this.jdbcTemplate__	};return,the,link,jdbc,template,used,by,this,operation,object;public,jdbc,template,get,jdbc,template,return,this,jdbc,template
RdbmsOperation -> public JdbcTemplate getJdbcTemplate();1530174524;Return the {@link JdbcTemplate} used by this operation object.;public JdbcTemplate getJdbcTemplate() {_		return this.jdbcTemplate__	};return,the,link,jdbc,template,used,by,this,operation,object;public,jdbc,template,get,jdbc,template,return,this,jdbc,template
RdbmsOperation -> public JdbcTemplate getJdbcTemplate();1542899558;Return the {@link JdbcTemplate} used by this operation object.;public JdbcTemplate getJdbcTemplate() {_		return this.jdbcTemplate__	};return,the,link,jdbc,template,used,by,this,operation,object;public,jdbc,template,get,jdbc,template,return,this,jdbc,template
RdbmsOperation -> public final void compile() throws InvalidDataAccessApiUsageException;1328020251;Compile this query._Ignores subsequent attempts to compile._@throws InvalidDataAccessApiUsageException if the object hasn't_been correctly initialized, for example if no DataSource has been provided;public final void compile() throws InvalidDataAccessApiUsageException {_		if (!isCompiled()) {_			if (getSql() == null) {_				throw new InvalidDataAccessApiUsageException("Property 'sql' is required")__			}__			try {_				this.jdbcTemplate.afterPropertiesSet()__			}_			catch (IllegalArgumentException ex) {_				throw new InvalidDataAccessApiUsageException(ex.getMessage())__			}	_		_			compileInternal()__			this.compiled = true___			if (logger.isDebugEnabled()) {_				logger.debug("RdbmsOperation with SQL [" + getSql() + "] compiled")__			}_		}_	};compile,this,query,ignores,subsequent,attempts,to,compile,throws,invalid,data,access,api,usage,exception,if,the,object,hasn,t,been,correctly,initialized,for,example,if,no,data,source,has,been,provided;public,final,void,compile,throws,invalid,data,access,api,usage,exception,if,is,compiled,if,get,sql,null,throw,new,invalid,data,access,api,usage,exception,property,sql,is,required,try,this,jdbc,template,after,properties,set,catch,illegal,argument,exception,ex,throw,new,invalid,data,access,api,usage,exception,ex,get,message,compile,internal,this,compiled,true,if,logger,is,debug,enabled,logger,debug,rdbms,operation,with,sql,get,sql,compiled
RdbmsOperation -> public final void compile() throws InvalidDataAccessApiUsageException;1356735495;Compile this query._Ignores subsequent attempts to compile._@throws InvalidDataAccessApiUsageException if the object hasn't_been correctly initialized, for example if no DataSource has been provided;public final void compile() throws InvalidDataAccessApiUsageException {_		if (!isCompiled()) {_			if (getSql() == null) {_				throw new InvalidDataAccessApiUsageException("Property 'sql' is required")__			}__			try {_				this.jdbcTemplate.afterPropertiesSet()__			}_			catch (IllegalArgumentException ex) {_				throw new InvalidDataAccessApiUsageException(ex.getMessage())__			}__			compileInternal()__			this.compiled = true___			if (logger.isDebugEnabled()) {_				logger.debug("RdbmsOperation with SQL [" + getSql() + "] compiled")__			}_		}_	};compile,this,query,ignores,subsequent,attempts,to,compile,throws,invalid,data,access,api,usage,exception,if,the,object,hasn,t,been,correctly,initialized,for,example,if,no,data,source,has,been,provided;public,final,void,compile,throws,invalid,data,access,api,usage,exception,if,is,compiled,if,get,sql,null,throw,new,invalid,data,access,api,usage,exception,property,sql,is,required,try,this,jdbc,template,after,properties,set,catch,illegal,argument,exception,ex,throw,new,invalid,data,access,api,usage,exception,ex,get,message,compile,internal,this,compiled,true,if,logger,is,debug,enabled,logger,debug,rdbms,operation,with,sql,get,sql,compiled
RdbmsOperation -> public final void compile() throws InvalidDataAccessApiUsageException;1357119239;Compile this query._Ignores subsequent attempts to compile._@throws InvalidDataAccessApiUsageException if the object hasn't_been correctly initialized, for example if no DataSource has been provided;public final void compile() throws InvalidDataAccessApiUsageException {_		if (!isCompiled()) {_			if (getSql() == null) {_				throw new InvalidDataAccessApiUsageException("Property 'sql' is required")__			}__			try {_				this.jdbcTemplate.afterPropertiesSet()__			}_			catch (IllegalArgumentException ex) {_				throw new InvalidDataAccessApiUsageException(ex.getMessage())__			}__			compileInternal()__			this.compiled = true___			if (logger.isDebugEnabled()) {_				logger.debug("RdbmsOperation with SQL [" + getSql() + "] compiled")__			}_		}_	};compile,this,query,ignores,subsequent,attempts,to,compile,throws,invalid,data,access,api,usage,exception,if,the,object,hasn,t,been,correctly,initialized,for,example,if,no,data,source,has,been,provided;public,final,void,compile,throws,invalid,data,access,api,usage,exception,if,is,compiled,if,get,sql,null,throw,new,invalid,data,access,api,usage,exception,property,sql,is,required,try,this,jdbc,template,after,properties,set,catch,illegal,argument,exception,ex,throw,new,invalid,data,access,api,usage,exception,ex,get,message,compile,internal,this,compiled,true,if,logger,is,debug,enabled,logger,debug,rdbms,operation,with,sql,get,sql,compiled
RdbmsOperation -> public final void compile() throws InvalidDataAccessApiUsageException;1368482696;Compile this query._Ignores subsequent attempts to compile._@throws InvalidDataAccessApiUsageException if the object hasn't_been correctly initialized, for example if no DataSource has been provided;public final void compile() throws InvalidDataAccessApiUsageException {_		if (!isCompiled()) {_			if (getSql() == null) {_				throw new InvalidDataAccessApiUsageException("Property 'sql' is required")__			}__			try {_				this.jdbcTemplate.afterPropertiesSet()__			}_			catch (IllegalArgumentException ex) {_				throw new InvalidDataAccessApiUsageException(ex.getMessage())__			}__			compileInternal()__			this.compiled = true___			if (logger.isDebugEnabled()) {_				logger.debug("RdbmsOperation with SQL [" + getSql() + "] compiled")__			}_		}_	};compile,this,query,ignores,subsequent,attempts,to,compile,throws,invalid,data,access,api,usage,exception,if,the,object,hasn,t,been,correctly,initialized,for,example,if,no,data,source,has,been,provided;public,final,void,compile,throws,invalid,data,access,api,usage,exception,if,is,compiled,if,get,sql,null,throw,new,invalid,data,access,api,usage,exception,property,sql,is,required,try,this,jdbc,template,after,properties,set,catch,illegal,argument,exception,ex,throw,new,invalid,data,access,api,usage,exception,ex,get,message,compile,internal,this,compiled,true,if,logger,is,debug,enabled,logger,debug,rdbms,operation,with,sql,get,sql,compiled
RdbmsOperation -> public final void compile() throws InvalidDataAccessApiUsageException;1385412762;Compile this query._Ignores subsequent attempts to compile._@throws InvalidDataAccessApiUsageException if the object hasn't_been correctly initialized, for example if no DataSource has been provided;public final void compile() throws InvalidDataAccessApiUsageException {_		if (!isCompiled()) {_			if (getSql() == null) {_				throw new InvalidDataAccessApiUsageException("Property 'sql' is required")__			}__			try {_				this.jdbcTemplate.afterPropertiesSet()__			}_			catch (IllegalArgumentException ex) {_				throw new InvalidDataAccessApiUsageException(ex.getMessage())__			}__			compileInternal()__			this.compiled = true___			if (logger.isDebugEnabled()) {_				logger.debug("RdbmsOperation with SQL [" + getSql() + "] compiled")__			}_		}_	};compile,this,query,ignores,subsequent,attempts,to,compile,throws,invalid,data,access,api,usage,exception,if,the,object,hasn,t,been,correctly,initialized,for,example,if,no,data,source,has,been,provided;public,final,void,compile,throws,invalid,data,access,api,usage,exception,if,is,compiled,if,get,sql,null,throw,new,invalid,data,access,api,usage,exception,property,sql,is,required,try,this,jdbc,template,after,properties,set,catch,illegal,argument,exception,ex,throw,new,invalid,data,access,api,usage,exception,ex,get,message,compile,internal,this,compiled,true,if,logger,is,debug,enabled,logger,debug,rdbms,operation,with,sql,get,sql,compiled
RdbmsOperation -> public final void compile() throws InvalidDataAccessApiUsageException;1407511029;Compile this query._Ignores subsequent attempts to compile._@throws InvalidDataAccessApiUsageException if the object hasn't_been correctly initialized, for example if no DataSource has been provided;public final void compile() throws InvalidDataAccessApiUsageException {_		if (!isCompiled()) {_			if (getSql() == null) {_				throw new InvalidDataAccessApiUsageException("Property 'sql' is required")__			}__			try {_				this.jdbcTemplate.afterPropertiesSet()__			}_			catch (IllegalArgumentException ex) {_				throw new InvalidDataAccessApiUsageException(ex.getMessage())__			}__			compileInternal()__			this.compiled = true___			if (logger.isDebugEnabled()) {_				logger.debug("RdbmsOperation with SQL [" + getSql() + "] compiled")__			}_		}_	};compile,this,query,ignores,subsequent,attempts,to,compile,throws,invalid,data,access,api,usage,exception,if,the,object,hasn,t,been,correctly,initialized,for,example,if,no,data,source,has,been,provided;public,final,void,compile,throws,invalid,data,access,api,usage,exception,if,is,compiled,if,get,sql,null,throw,new,invalid,data,access,api,usage,exception,property,sql,is,required,try,this,jdbc,template,after,properties,set,catch,illegal,argument,exception,ex,throw,new,invalid,data,access,api,usage,exception,ex,get,message,compile,internal,this,compiled,true,if,logger,is,debug,enabled,logger,debug,rdbms,operation,with,sql,get,sql,compiled
RdbmsOperation -> public final void compile() throws InvalidDataAccessApiUsageException;1446038912;Compile this query._Ignores subsequent attempts to compile._@throws InvalidDataAccessApiUsageException if the object hasn't_been correctly initialized, for example if no DataSource has been provided;public final void compile() throws InvalidDataAccessApiUsageException {_		if (!isCompiled()) {_			if (getSql() == null) {_				throw new InvalidDataAccessApiUsageException("Property 'sql' is required")__			}__			try {_				this.jdbcTemplate.afterPropertiesSet()__			}_			catch (IllegalArgumentException ex) {_				throw new InvalidDataAccessApiUsageException(ex.getMessage())__			}__			compileInternal()__			this.compiled = true___			if (logger.isDebugEnabled()) {_				logger.debug("RdbmsOperation with SQL [" + getSql() + "] compiled")__			}_		}_	};compile,this,query,ignores,subsequent,attempts,to,compile,throws,invalid,data,access,api,usage,exception,if,the,object,hasn,t,been,correctly,initialized,for,example,if,no,data,source,has,been,provided;public,final,void,compile,throws,invalid,data,access,api,usage,exception,if,is,compiled,if,get,sql,null,throw,new,invalid,data,access,api,usage,exception,property,sql,is,required,try,this,jdbc,template,after,properties,set,catch,illegal,argument,exception,ex,throw,new,invalid,data,access,api,usage,exception,ex,get,message,compile,internal,this,compiled,true,if,logger,is,debug,enabled,logger,debug,rdbms,operation,with,sql,get,sql,compiled
RdbmsOperation -> public final void compile() throws InvalidDataAccessApiUsageException;1467730834;Compile this query._Ignores subsequent attempts to compile._@throws InvalidDataAccessApiUsageException if the object hasn't_been correctly initialized, for example if no DataSource has been provided;public final void compile() throws InvalidDataAccessApiUsageException {_		if (!isCompiled()) {_			if (getSql() == null) {_				throw new InvalidDataAccessApiUsageException("Property 'sql' is required")__			}__			try {_				this.jdbcTemplate.afterPropertiesSet()__			}_			catch (IllegalArgumentException ex) {_				throw new InvalidDataAccessApiUsageException(ex.getMessage())__			}__			compileInternal()__			this.compiled = true___			if (logger.isDebugEnabled()) {_				logger.debug("RdbmsOperation with SQL [" + getSql() + "] compiled")__			}_		}_	};compile,this,query,ignores,subsequent,attempts,to,compile,throws,invalid,data,access,api,usage,exception,if,the,object,hasn,t,been,correctly,initialized,for,example,if,no,data,source,has,been,provided;public,final,void,compile,throws,invalid,data,access,api,usage,exception,if,is,compiled,if,get,sql,null,throw,new,invalid,data,access,api,usage,exception,property,sql,is,required,try,this,jdbc,template,after,properties,set,catch,illegal,argument,exception,ex,throw,new,invalid,data,access,api,usage,exception,ex,get,message,compile,internal,this,compiled,true,if,logger,is,debug,enabled,logger,debug,rdbms,operation,with,sql,get,sql,compiled
RdbmsOperation -> public final void compile() throws InvalidDataAccessApiUsageException;1495868221;Compile this query._Ignores subsequent attempts to compile._@throws InvalidDataAccessApiUsageException if the object hasn't_been correctly initialized, for example if no DataSource has been provided;public final void compile() throws InvalidDataAccessApiUsageException {_		if (!isCompiled()) {_			if (getSql() == null) {_				throw new InvalidDataAccessApiUsageException("Property 'sql' is required")__			}__			try {_				this.jdbcTemplate.afterPropertiesSet()__			}_			catch (IllegalArgumentException ex) {_				throw new InvalidDataAccessApiUsageException(ex.getMessage())__			}__			compileInternal()__			this.compiled = true___			if (logger.isDebugEnabled()) {_				logger.debug("RdbmsOperation with SQL [" + getSql() + "] compiled")__			}_		}_	};compile,this,query,ignores,subsequent,attempts,to,compile,throws,invalid,data,access,api,usage,exception,if,the,object,hasn,t,been,correctly,initialized,for,example,if,no,data,source,has,been,provided;public,final,void,compile,throws,invalid,data,access,api,usage,exception,if,is,compiled,if,get,sql,null,throw,new,invalid,data,access,api,usage,exception,property,sql,is,required,try,this,jdbc,template,after,properties,set,catch,illegal,argument,exception,ex,throw,new,invalid,data,access,api,usage,exception,ex,get,message,compile,internal,this,compiled,true,if,logger,is,debug,enabled,logger,debug,rdbms,operation,with,sql,get,sql,compiled
RdbmsOperation -> public final void compile() throws InvalidDataAccessApiUsageException;1496837955;Compile this query._Ignores subsequent attempts to compile._@throws InvalidDataAccessApiUsageException if the object hasn't_been correctly initialized, for example if no DataSource has been provided;public final void compile() throws InvalidDataAccessApiUsageException {_		if (!isCompiled()) {_			if (getSql() == null) {_				throw new InvalidDataAccessApiUsageException("Property 'sql' is required")__			}__			try {_				this.jdbcTemplate.afterPropertiesSet()__			}_			catch (IllegalArgumentException ex) {_				throw new InvalidDataAccessApiUsageException(ex.getMessage())__			}__			compileInternal()__			this.compiled = true___			if (logger.isDebugEnabled()) {_				logger.debug("RdbmsOperation with SQL [" + getSql() + "] compiled")__			}_		}_	};compile,this,query,ignores,subsequent,attempts,to,compile,throws,invalid,data,access,api,usage,exception,if,the,object,hasn,t,been,correctly,initialized,for,example,if,no,data,source,has,been,provided;public,final,void,compile,throws,invalid,data,access,api,usage,exception,if,is,compiled,if,get,sql,null,throw,new,invalid,data,access,api,usage,exception,property,sql,is,required,try,this,jdbc,template,after,properties,set,catch,illegal,argument,exception,ex,throw,new,invalid,data,access,api,usage,exception,ex,get,message,compile,internal,this,compiled,true,if,logger,is,debug,enabled,logger,debug,rdbms,operation,with,sql,get,sql,compiled
RdbmsOperation -> public final void compile() throws InvalidDataAccessApiUsageException;1498780456;Compile this query._Ignores subsequent attempts to compile._@throws InvalidDataAccessApiUsageException if the object hasn't_been correctly initialized, for example if no DataSource has been provided;public final void compile() throws InvalidDataAccessApiUsageException {_		if (!isCompiled()) {_			if (getSql() == null) {_				throw new InvalidDataAccessApiUsageException("Property 'sql' is required")__			}__			try {_				this.jdbcTemplate.afterPropertiesSet()__			}_			catch (IllegalArgumentException ex) {_				throw new InvalidDataAccessApiUsageException(ex.getMessage())__			}__			compileInternal()__			this.compiled = true___			if (logger.isDebugEnabled()) {_				logger.debug("RdbmsOperation with SQL [" + getSql() + "] compiled")__			}_		}_	};compile,this,query,ignores,subsequent,attempts,to,compile,throws,invalid,data,access,api,usage,exception,if,the,object,hasn,t,been,correctly,initialized,for,example,if,no,data,source,has,been,provided;public,final,void,compile,throws,invalid,data,access,api,usage,exception,if,is,compiled,if,get,sql,null,throw,new,invalid,data,access,api,usage,exception,property,sql,is,required,try,this,jdbc,template,after,properties,set,catch,illegal,argument,exception,ex,throw,new,invalid,data,access,api,usage,exception,ex,get,message,compile,internal,this,compiled,true,if,logger,is,debug,enabled,logger,debug,rdbms,operation,with,sql,get,sql,compiled
RdbmsOperation -> public final void compile() throws InvalidDataAccessApiUsageException;1506519613;Compile this query._Ignores subsequent attempts to compile._@throws InvalidDataAccessApiUsageException if the object hasn't_been correctly initialized, for example if no DataSource has been provided;public final void compile() throws InvalidDataAccessApiUsageException {_		if (!isCompiled()) {_			if (getSql() == null) {_				throw new InvalidDataAccessApiUsageException("Property 'sql' is required")__			}__			try {_				this.jdbcTemplate.afterPropertiesSet()__			}_			catch (IllegalArgumentException ex) {_				throw new InvalidDataAccessApiUsageException(ex.getMessage())__			}__			compileInternal()__			this.compiled = true___			if (logger.isDebugEnabled()) {_				logger.debug("RdbmsOperation with SQL [" + getSql() + "] compiled")__			}_		}_	};compile,this,query,ignores,subsequent,attempts,to,compile,throws,invalid,data,access,api,usage,exception,if,the,object,hasn,t,been,correctly,initialized,for,example,if,no,data,source,has,been,provided;public,final,void,compile,throws,invalid,data,access,api,usage,exception,if,is,compiled,if,get,sql,null,throw,new,invalid,data,access,api,usage,exception,property,sql,is,required,try,this,jdbc,template,after,properties,set,catch,illegal,argument,exception,ex,throw,new,invalid,data,access,api,usage,exception,ex,get,message,compile,internal,this,compiled,true,if,logger,is,debug,enabled,logger,debug,rdbms,operation,with,sql,get,sql,compiled
RdbmsOperation -> public final void compile() throws InvalidDataAccessApiUsageException;1525966356;Compile this query._Ignores subsequent attempts to compile._@throws InvalidDataAccessApiUsageException if the object hasn't_been correctly initialized, for example if no DataSource has been provided;public final void compile() throws InvalidDataAccessApiUsageException {_		if (!isCompiled()) {_			if (getSql() == null) {_				throw new InvalidDataAccessApiUsageException("Property 'sql' is required")__			}__			try {_				this.jdbcTemplate.afterPropertiesSet()__			}_			catch (IllegalArgumentException ex) {_				throw new InvalidDataAccessApiUsageException(ex.getMessage())__			}__			compileInternal()__			this.compiled = true___			if (logger.isDebugEnabled()) {_				logger.debug("RdbmsOperation with SQL [" + getSql() + "] compiled")__			}_		}_	};compile,this,query,ignores,subsequent,attempts,to,compile,throws,invalid,data,access,api,usage,exception,if,the,object,hasn,t,been,correctly,initialized,for,example,if,no,data,source,has,been,provided;public,final,void,compile,throws,invalid,data,access,api,usage,exception,if,is,compiled,if,get,sql,null,throw,new,invalid,data,access,api,usage,exception,property,sql,is,required,try,this,jdbc,template,after,properties,set,catch,illegal,argument,exception,ex,throw,new,invalid,data,access,api,usage,exception,ex,get,message,compile,internal,this,compiled,true,if,logger,is,debug,enabled,logger,debug,rdbms,operation,with,sql,get,sql,compiled
RdbmsOperation -> public final void compile() throws InvalidDataAccessApiUsageException;1530174524;Compile this query._Ignores subsequent attempts to compile._@throws InvalidDataAccessApiUsageException if the object hasn't_been correctly initialized, for example if no DataSource has been provided;public final void compile() throws InvalidDataAccessApiUsageException {_		if (!isCompiled()) {_			if (getSql() == null) {_				throw new InvalidDataAccessApiUsageException("Property 'sql' is required")__			}__			try {_				this.jdbcTemplate.afterPropertiesSet()__			}_			catch (IllegalArgumentException ex) {_				throw new InvalidDataAccessApiUsageException(ex.getMessage())__			}__			compileInternal()__			this.compiled = true___			if (logger.isDebugEnabled()) {_				logger.debug("RdbmsOperation with SQL [" + getSql() + "] compiled")__			}_		}_	};compile,this,query,ignores,subsequent,attempts,to,compile,throws,invalid,data,access,api,usage,exception,if,the,object,hasn,t,been,correctly,initialized,for,example,if,no,data,source,has,been,provided;public,final,void,compile,throws,invalid,data,access,api,usage,exception,if,is,compiled,if,get,sql,null,throw,new,invalid,data,access,api,usage,exception,property,sql,is,required,try,this,jdbc,template,after,properties,set,catch,illegal,argument,exception,ex,throw,new,invalid,data,access,api,usage,exception,ex,get,message,compile,internal,this,compiled,true,if,logger,is,debug,enabled,logger,debug,rdbms,operation,with,sql,get,sql,compiled
RdbmsOperation -> public final void compile() throws InvalidDataAccessApiUsageException;1542899558;Compile this query._Ignores subsequent attempts to compile._@throws InvalidDataAccessApiUsageException if the object hasn't_been correctly initialized, for example if no DataSource has been provided;public final void compile() throws InvalidDataAccessApiUsageException {_		if (!isCompiled()) {_			if (getSql() == null) {_				throw new InvalidDataAccessApiUsageException("Property 'sql' is required")__			}__			try {_				this.jdbcTemplate.afterPropertiesSet()__			}_			catch (IllegalArgumentException ex) {_				throw new InvalidDataAccessApiUsageException(ex.getMessage())__			}__			compileInternal()__			this.compiled = true___			if (logger.isDebugEnabled()) {_				logger.debug("RdbmsOperation with SQL [" + getSql() + "] compiled")__			}_		}_	};compile,this,query,ignores,subsequent,attempts,to,compile,throws,invalid,data,access,api,usage,exception,if,the,object,hasn,t,been,correctly,initialized,for,example,if,no,data,source,has,been,provided;public,final,void,compile,throws,invalid,data,access,api,usage,exception,if,is,compiled,if,get,sql,null,throw,new,invalid,data,access,api,usage,exception,property,sql,is,required,try,this,jdbc,template,after,properties,set,catch,illegal,argument,exception,ex,throw,new,invalid,data,access,api,usage,exception,ex,get,message,compile,internal,this,compiled,true,if,logger,is,debug,enabled,logger,debug,rdbms,operation,with,sql,get,sql,compiled
RdbmsOperation -> protected boolean supportsLobParameters();1328020251;Return whether BLOB/CLOB parameters are supported for this kind of operation._<p>The default is <code>true</code>.;protected boolean supportsLobParameters() {_		return true__	};return,whether,blob,clob,parameters,are,supported,for,this,kind,of,operation,p,the,default,is,code,true,code;protected,boolean,supports,lob,parameters,return,true
RdbmsOperation -> protected boolean supportsLobParameters();1356735495;Return whether BLOB/CLOB parameters are supported for this kind of operation._<p>The default is {@code true}.;protected boolean supportsLobParameters() {_		return true__	};return,whether,blob,clob,parameters,are,supported,for,this,kind,of,operation,p,the,default,is,code,true;protected,boolean,supports,lob,parameters,return,true
RdbmsOperation -> protected boolean supportsLobParameters();1357119239;Return whether BLOB/CLOB parameters are supported for this kind of operation._<p>The default is {@code true}.;protected boolean supportsLobParameters() {_		return true__	};return,whether,blob,clob,parameters,are,supported,for,this,kind,of,operation,p,the,default,is,code,true;protected,boolean,supports,lob,parameters,return,true
RdbmsOperation -> protected boolean supportsLobParameters();1368482696;Return whether BLOB/CLOB parameters are supported for this kind of operation._<p>The default is {@code true}.;protected boolean supportsLobParameters() {_		return true__	};return,whether,blob,clob,parameters,are,supported,for,this,kind,of,operation,p,the,default,is,code,true;protected,boolean,supports,lob,parameters,return,true
RdbmsOperation -> protected boolean supportsLobParameters();1385412762;Return whether BLOB/CLOB parameters are supported for this kind of operation._<p>The default is {@code true}.;protected boolean supportsLobParameters() {_		return true__	};return,whether,blob,clob,parameters,are,supported,for,this,kind,of,operation,p,the,default,is,code,true;protected,boolean,supports,lob,parameters,return,true
RdbmsOperation -> protected boolean supportsLobParameters();1407511029;Return whether BLOB/CLOB parameters are supported for this kind of operation._<p>The default is {@code true}.;protected boolean supportsLobParameters() {_		return true__	};return,whether,blob,clob,parameters,are,supported,for,this,kind,of,operation,p,the,default,is,code,true;protected,boolean,supports,lob,parameters,return,true
RdbmsOperation -> protected boolean supportsLobParameters();1446038912;Return whether BLOB/CLOB parameters are supported for this kind of operation._<p>The default is {@code true}.;protected boolean supportsLobParameters() {_		return true__	};return,whether,blob,clob,parameters,are,supported,for,this,kind,of,operation,p,the,default,is,code,true;protected,boolean,supports,lob,parameters,return,true
RdbmsOperation -> protected boolean supportsLobParameters();1467730834;Return whether BLOB/CLOB parameters are supported for this kind of operation._<p>The default is {@code true}.;protected boolean supportsLobParameters() {_		return true__	};return,whether,blob,clob,parameters,are,supported,for,this,kind,of,operation,p,the,default,is,code,true;protected,boolean,supports,lob,parameters,return,true
RdbmsOperation -> protected boolean supportsLobParameters();1495868221;Return whether BLOB/CLOB parameters are supported for this kind of operation._<p>The default is {@code true}.;protected boolean supportsLobParameters() {_		return true__	};return,whether,blob,clob,parameters,are,supported,for,this,kind,of,operation,p,the,default,is,code,true;protected,boolean,supports,lob,parameters,return,true
RdbmsOperation -> protected boolean supportsLobParameters();1496837955;Return whether BLOB/CLOB parameters are supported for this kind of operation._<p>The default is {@code true}.;protected boolean supportsLobParameters() {_		return true__	};return,whether,blob,clob,parameters,are,supported,for,this,kind,of,operation,p,the,default,is,code,true;protected,boolean,supports,lob,parameters,return,true
RdbmsOperation -> protected boolean supportsLobParameters();1498780456;Return whether BLOB/CLOB parameters are supported for this kind of operation._<p>The default is {@code true}.;protected boolean supportsLobParameters() {_		return true__	};return,whether,blob,clob,parameters,are,supported,for,this,kind,of,operation,p,the,default,is,code,true;protected,boolean,supports,lob,parameters,return,true
RdbmsOperation -> protected boolean supportsLobParameters();1506519613;Return whether BLOB/CLOB parameters are supported for this kind of operation._<p>The default is {@code true}.;protected boolean supportsLobParameters() {_		return true__	};return,whether,blob,clob,parameters,are,supported,for,this,kind,of,operation,p,the,default,is,code,true;protected,boolean,supports,lob,parameters,return,true
RdbmsOperation -> protected boolean supportsLobParameters();1525966356;Return whether BLOB/CLOB parameters are supported for this kind of operation._<p>The default is {@code true}.;protected boolean supportsLobParameters() {_		return true__	};return,whether,blob,clob,parameters,are,supported,for,this,kind,of,operation,p,the,default,is,code,true;protected,boolean,supports,lob,parameters,return,true
RdbmsOperation -> protected boolean supportsLobParameters();1530174524;Return whether BLOB/CLOB parameters are supported for this kind of operation._<p>The default is {@code true}.;protected boolean supportsLobParameters() {_		return true__	};return,whether,blob,clob,parameters,are,supported,for,this,kind,of,operation,p,the,default,is,code,true;protected,boolean,supports,lob,parameters,return,true
RdbmsOperation -> protected boolean supportsLobParameters();1542899558;Return whether BLOB/CLOB parameters are supported for this kind of operation._<p>The default is {@code true}.;protected boolean supportsLobParameters() {_		return true__	};return,whether,blob,clob,parameters,are,supported,for,this,kind,of,operation,p,the,default,is,code,true;protected,boolean,supports,lob,parameters,return,true
RdbmsOperation -> public void setTypes(int[] types) throws InvalidDataAccessApiUsageException;1328020251;Add anonymous parameters, specifying only their SQL types_as defined in the <code>java.sql.Types</code> class._<p>Parameter ordering is significant. This method is an alternative_to the {@link #declareParameter} method, which should normally be preferred._@param types array of SQL types as defined in the_<code>java.sql.Types</code> class_@throws InvalidDataAccessApiUsageException if the operation is already compiled;public void setTypes(int[] types) throws InvalidDataAccessApiUsageException {_		if (isCompiled()) {_			throw new InvalidDataAccessApiUsageException("Cannot add parameters once query is compiled")__		}_		if (types != null) {_			for (int type : types) {_				declareParameter(new SqlParameter(type))__			}_		}_	};add,anonymous,parameters,specifying,only,their,sql,types,as,defined,in,the,code,java,sql,types,code,class,p,parameter,ordering,is,significant,this,method,is,an,alternative,to,the,link,declare,parameter,method,which,should,normally,be,preferred,param,types,array,of,sql,types,as,defined,in,the,code,java,sql,types,code,class,throws,invalid,data,access,api,usage,exception,if,the,operation,is,already,compiled;public,void,set,types,int,types,throws,invalid,data,access,api,usage,exception,if,is,compiled,throw,new,invalid,data,access,api,usage,exception,cannot,add,parameters,once,query,is,compiled,if,types,null,for,int,type,types,declare,parameter,new,sql,parameter,type
RdbmsOperation -> public void setTypes(int[] types) throws InvalidDataAccessApiUsageException;1356735495;Add anonymous parameters, specifying only their SQL types_as defined in the {@code java.sql.Types} class._<p>Parameter ordering is significant. This method is an alternative_to the {@link #declareParameter} method, which should normally be preferred._@param types array of SQL types as defined in the_{@code java.sql.Types} class_@throws InvalidDataAccessApiUsageException if the operation is already compiled;public void setTypes(int[] types) throws InvalidDataAccessApiUsageException {_		if (isCompiled()) {_			throw new InvalidDataAccessApiUsageException("Cannot add parameters once query is compiled")__		}_		if (types != null) {_			for (int type : types) {_				declareParameter(new SqlParameter(type))__			}_		}_	};add,anonymous,parameters,specifying,only,their,sql,types,as,defined,in,the,code,java,sql,types,class,p,parameter,ordering,is,significant,this,method,is,an,alternative,to,the,link,declare,parameter,method,which,should,normally,be,preferred,param,types,array,of,sql,types,as,defined,in,the,code,java,sql,types,class,throws,invalid,data,access,api,usage,exception,if,the,operation,is,already,compiled;public,void,set,types,int,types,throws,invalid,data,access,api,usage,exception,if,is,compiled,throw,new,invalid,data,access,api,usage,exception,cannot,add,parameters,once,query,is,compiled,if,types,null,for,int,type,types,declare,parameter,new,sql,parameter,type
RdbmsOperation -> public void setTypes(int[] types) throws InvalidDataAccessApiUsageException;1357119239;Add anonymous parameters, specifying only their SQL types_as defined in the {@code java.sql.Types} class._<p>Parameter ordering is significant. This method is an alternative_to the {@link #declareParameter} method, which should normally be preferred._@param types array of SQL types as defined in the_{@code java.sql.Types} class_@throws InvalidDataAccessApiUsageException if the operation is already compiled;public void setTypes(int[] types) throws InvalidDataAccessApiUsageException {_		if (isCompiled()) {_			throw new InvalidDataAccessApiUsageException("Cannot add parameters once query is compiled")__		}_		if (types != null) {_			for (int type : types) {_				declareParameter(new SqlParameter(type))__			}_		}_	};add,anonymous,parameters,specifying,only,their,sql,types,as,defined,in,the,code,java,sql,types,class,p,parameter,ordering,is,significant,this,method,is,an,alternative,to,the,link,declare,parameter,method,which,should,normally,be,preferred,param,types,array,of,sql,types,as,defined,in,the,code,java,sql,types,class,throws,invalid,data,access,api,usage,exception,if,the,operation,is,already,compiled;public,void,set,types,int,types,throws,invalid,data,access,api,usage,exception,if,is,compiled,throw,new,invalid,data,access,api,usage,exception,cannot,add,parameters,once,query,is,compiled,if,types,null,for,int,type,types,declare,parameter,new,sql,parameter,type
RdbmsOperation -> public void setTypes(int[] types) throws InvalidDataAccessApiUsageException;1368482696;Add anonymous parameters, specifying only their SQL types_as defined in the {@code java.sql.Types} class._<p>Parameter ordering is significant. This method is an alternative_to the {@link #declareParameter} method, which should normally be preferred._@param types array of SQL types as defined in the_{@code java.sql.Types} class_@throws InvalidDataAccessApiUsageException if the operation is already compiled;public void setTypes(int[] types) throws InvalidDataAccessApiUsageException {_		if (isCompiled()) {_			throw new InvalidDataAccessApiUsageException("Cannot add parameters once query is compiled")__		}_		if (types != null) {_			for (int type : types) {_				declareParameter(new SqlParameter(type))__			}_		}_	};add,anonymous,parameters,specifying,only,their,sql,types,as,defined,in,the,code,java,sql,types,class,p,parameter,ordering,is,significant,this,method,is,an,alternative,to,the,link,declare,parameter,method,which,should,normally,be,preferred,param,types,array,of,sql,types,as,defined,in,the,code,java,sql,types,class,throws,invalid,data,access,api,usage,exception,if,the,operation,is,already,compiled;public,void,set,types,int,types,throws,invalid,data,access,api,usage,exception,if,is,compiled,throw,new,invalid,data,access,api,usage,exception,cannot,add,parameters,once,query,is,compiled,if,types,null,for,int,type,types,declare,parameter,new,sql,parameter,type
RdbmsOperation -> public void setTypes(int[] types) throws InvalidDataAccessApiUsageException;1385412762;Add anonymous parameters, specifying only their SQL types_as defined in the {@code java.sql.Types} class._<p>Parameter ordering is significant. This method is an alternative_to the {@link #declareParameter} method, which should normally be preferred._@param types array of SQL types as defined in the_{@code java.sql.Types} class_@throws InvalidDataAccessApiUsageException if the operation is already compiled;public void setTypes(int[] types) throws InvalidDataAccessApiUsageException {_		if (isCompiled()) {_			throw new InvalidDataAccessApiUsageException("Cannot add parameters once query is compiled")__		}_		if (types != null) {_			for (int type : types) {_				declareParameter(new SqlParameter(type))__			}_		}_	};add,anonymous,parameters,specifying,only,their,sql,types,as,defined,in,the,code,java,sql,types,class,p,parameter,ordering,is,significant,this,method,is,an,alternative,to,the,link,declare,parameter,method,which,should,normally,be,preferred,param,types,array,of,sql,types,as,defined,in,the,code,java,sql,types,class,throws,invalid,data,access,api,usage,exception,if,the,operation,is,already,compiled;public,void,set,types,int,types,throws,invalid,data,access,api,usage,exception,if,is,compiled,throw,new,invalid,data,access,api,usage,exception,cannot,add,parameters,once,query,is,compiled,if,types,null,for,int,type,types,declare,parameter,new,sql,parameter,type
RdbmsOperation -> public void setTypes(int[] types) throws InvalidDataAccessApiUsageException;1407511029;Add anonymous parameters, specifying only their SQL types_as defined in the {@code java.sql.Types} class._<p>Parameter ordering is significant. This method is an alternative_to the {@link #declareParameter} method, which should normally be preferred._@param types array of SQL types as defined in the_{@code java.sql.Types} class_@throws InvalidDataAccessApiUsageException if the operation is already compiled;public void setTypes(int[] types) throws InvalidDataAccessApiUsageException {_		if (isCompiled()) {_			throw new InvalidDataAccessApiUsageException("Cannot add parameters once query is compiled")__		}_		if (types != null) {_			for (int type : types) {_				declareParameter(new SqlParameter(type))__			}_		}_	};add,anonymous,parameters,specifying,only,their,sql,types,as,defined,in,the,code,java,sql,types,class,p,parameter,ordering,is,significant,this,method,is,an,alternative,to,the,link,declare,parameter,method,which,should,normally,be,preferred,param,types,array,of,sql,types,as,defined,in,the,code,java,sql,types,class,throws,invalid,data,access,api,usage,exception,if,the,operation,is,already,compiled;public,void,set,types,int,types,throws,invalid,data,access,api,usage,exception,if,is,compiled,throw,new,invalid,data,access,api,usage,exception,cannot,add,parameters,once,query,is,compiled,if,types,null,for,int,type,types,declare,parameter,new,sql,parameter,type
RdbmsOperation -> public void setTypes(int[] types) throws InvalidDataAccessApiUsageException;1446038912;Add anonymous parameters, specifying only their SQL types_as defined in the {@code java.sql.Types} class._<p>Parameter ordering is significant. This method is an alternative_to the {@link #declareParameter} method, which should normally be preferred._@param types array of SQL types as defined in the_{@code java.sql.Types} class_@throws InvalidDataAccessApiUsageException if the operation is already compiled;public void setTypes(int[] types) throws InvalidDataAccessApiUsageException {_		if (isCompiled()) {_			throw new InvalidDataAccessApiUsageException("Cannot add parameters once query is compiled")__		}_		if (types != null) {_			for (int type : types) {_				declareParameter(new SqlParameter(type))__			}_		}_	};add,anonymous,parameters,specifying,only,their,sql,types,as,defined,in,the,code,java,sql,types,class,p,parameter,ordering,is,significant,this,method,is,an,alternative,to,the,link,declare,parameter,method,which,should,normally,be,preferred,param,types,array,of,sql,types,as,defined,in,the,code,java,sql,types,class,throws,invalid,data,access,api,usage,exception,if,the,operation,is,already,compiled;public,void,set,types,int,types,throws,invalid,data,access,api,usage,exception,if,is,compiled,throw,new,invalid,data,access,api,usage,exception,cannot,add,parameters,once,query,is,compiled,if,types,null,for,int,type,types,declare,parameter,new,sql,parameter,type
RdbmsOperation -> public void setTypes(int[] types) throws InvalidDataAccessApiUsageException;1467730834;Add anonymous parameters, specifying only their SQL types_as defined in the {@code java.sql.Types} class._<p>Parameter ordering is significant. This method is an alternative_to the {@link #declareParameter} method, which should normally be preferred._@param types array of SQL types as defined in the_{@code java.sql.Types} class_@throws InvalidDataAccessApiUsageException if the operation is already compiled;public void setTypes(int[] types) throws InvalidDataAccessApiUsageException {_		if (isCompiled()) {_			throw new InvalidDataAccessApiUsageException("Cannot add parameters once query is compiled")__		}_		if (types != null) {_			for (int type : types) {_				declareParameter(new SqlParameter(type))__			}_		}_	};add,anonymous,parameters,specifying,only,their,sql,types,as,defined,in,the,code,java,sql,types,class,p,parameter,ordering,is,significant,this,method,is,an,alternative,to,the,link,declare,parameter,method,which,should,normally,be,preferred,param,types,array,of,sql,types,as,defined,in,the,code,java,sql,types,class,throws,invalid,data,access,api,usage,exception,if,the,operation,is,already,compiled;public,void,set,types,int,types,throws,invalid,data,access,api,usage,exception,if,is,compiled,throw,new,invalid,data,access,api,usage,exception,cannot,add,parameters,once,query,is,compiled,if,types,null,for,int,type,types,declare,parameter,new,sql,parameter,type
RdbmsOperation -> public void setTypes(int[] types) throws InvalidDataAccessApiUsageException;1495868221;Add anonymous parameters, specifying only their SQL types_as defined in the {@code java.sql.Types} class._<p>Parameter ordering is significant. This method is an alternative_to the {@link #declareParameter} method, which should normally be preferred._@param types array of SQL types as defined in the_{@code java.sql.Types} class_@throws InvalidDataAccessApiUsageException if the operation is already compiled;public void setTypes(int[] types) throws InvalidDataAccessApiUsageException {_		if (isCompiled()) {_			throw new InvalidDataAccessApiUsageException("Cannot add parameters once query is compiled")__		}_		if (types != null) {_			for (int type : types) {_				declareParameter(new SqlParameter(type))__			}_		}_	};add,anonymous,parameters,specifying,only,their,sql,types,as,defined,in,the,code,java,sql,types,class,p,parameter,ordering,is,significant,this,method,is,an,alternative,to,the,link,declare,parameter,method,which,should,normally,be,preferred,param,types,array,of,sql,types,as,defined,in,the,code,java,sql,types,class,throws,invalid,data,access,api,usage,exception,if,the,operation,is,already,compiled;public,void,set,types,int,types,throws,invalid,data,access,api,usage,exception,if,is,compiled,throw,new,invalid,data,access,api,usage,exception,cannot,add,parameters,once,query,is,compiled,if,types,null,for,int,type,types,declare,parameter,new,sql,parameter,type
RdbmsOperation -> public void declareParameter(SqlParameter param) throws InvalidDataAccessApiUsageException;1328020251;Declare a parameter for this operation._<p>The order in which this method is called is significant when using_positional parameters. It is not significant when using named parameters_with named SqlParameter objects here_ it remains significant when using_named parameters in combination with unnamed SqlParameter objects here._@param param the SqlParameter to add. This will specify SQL type and (optionally)_the parameter's name. Note that you typically use the {@link SqlParameter} class_itself here, not any of its subclasses._@throws InvalidDataAccessApiUsageException if the operation is already compiled,_and hence cannot be configured further;public void declareParameter(SqlParameter param) throws InvalidDataAccessApiUsageException {_		if (isCompiled()) {_			throw new InvalidDataAccessApiUsageException("Cannot add parameters once the query is compiled")__		}_		this.declaredParameters.add(param)__	};declare,a,parameter,for,this,operation,p,the,order,in,which,this,method,is,called,is,significant,when,using,positional,parameters,it,is,not,significant,when,using,named,parameters,with,named,sql,parameter,objects,here,it,remains,significant,when,using,named,parameters,in,combination,with,unnamed,sql,parameter,objects,here,param,param,the,sql,parameter,to,add,this,will,specify,sql,type,and,optionally,the,parameter,s,name,note,that,you,typically,use,the,link,sql,parameter,class,itself,here,not,any,of,its,subclasses,throws,invalid,data,access,api,usage,exception,if,the,operation,is,already,compiled,and,hence,cannot,be,configured,further;public,void,declare,parameter,sql,parameter,param,throws,invalid,data,access,api,usage,exception,if,is,compiled,throw,new,invalid,data,access,api,usage,exception,cannot,add,parameters,once,the,query,is,compiled,this,declared,parameters,add,param
RdbmsOperation -> public void declareParameter(SqlParameter param) throws InvalidDataAccessApiUsageException;1356735495;Declare a parameter for this operation._<p>The order in which this method is called is significant when using_positional parameters. It is not significant when using named parameters_with named SqlParameter objects here_ it remains significant when using_named parameters in combination with unnamed SqlParameter objects here._@param param the SqlParameter to add. This will specify SQL type and (optionally)_the parameter's name. Note that you typically use the {@link SqlParameter} class_itself here, not any of its subclasses._@throws InvalidDataAccessApiUsageException if the operation is already compiled,_and hence cannot be configured further;public void declareParameter(SqlParameter param) throws InvalidDataAccessApiUsageException {_		if (isCompiled()) {_			throw new InvalidDataAccessApiUsageException("Cannot add parameters once the query is compiled")__		}_		this.declaredParameters.add(param)__	};declare,a,parameter,for,this,operation,p,the,order,in,which,this,method,is,called,is,significant,when,using,positional,parameters,it,is,not,significant,when,using,named,parameters,with,named,sql,parameter,objects,here,it,remains,significant,when,using,named,parameters,in,combination,with,unnamed,sql,parameter,objects,here,param,param,the,sql,parameter,to,add,this,will,specify,sql,type,and,optionally,the,parameter,s,name,note,that,you,typically,use,the,link,sql,parameter,class,itself,here,not,any,of,its,subclasses,throws,invalid,data,access,api,usage,exception,if,the,operation,is,already,compiled,and,hence,cannot,be,configured,further;public,void,declare,parameter,sql,parameter,param,throws,invalid,data,access,api,usage,exception,if,is,compiled,throw,new,invalid,data,access,api,usage,exception,cannot,add,parameters,once,the,query,is,compiled,this,declared,parameters,add,param
RdbmsOperation -> public void declareParameter(SqlParameter param) throws InvalidDataAccessApiUsageException;1357119239;Declare a parameter for this operation._<p>The order in which this method is called is significant when using_positional parameters. It is not significant when using named parameters_with named SqlParameter objects here_ it remains significant when using_named parameters in combination with unnamed SqlParameter objects here._@param param the SqlParameter to add. This will specify SQL type and (optionally)_the parameter's name. Note that you typically use the {@link SqlParameter} class_itself here, not any of its subclasses._@throws InvalidDataAccessApiUsageException if the operation is already compiled,_and hence cannot be configured further;public void declareParameter(SqlParameter param) throws InvalidDataAccessApiUsageException {_		if (isCompiled()) {_			throw new InvalidDataAccessApiUsageException("Cannot add parameters once the query is compiled")__		}_		this.declaredParameters.add(param)__	};declare,a,parameter,for,this,operation,p,the,order,in,which,this,method,is,called,is,significant,when,using,positional,parameters,it,is,not,significant,when,using,named,parameters,with,named,sql,parameter,objects,here,it,remains,significant,when,using,named,parameters,in,combination,with,unnamed,sql,parameter,objects,here,param,param,the,sql,parameter,to,add,this,will,specify,sql,type,and,optionally,the,parameter,s,name,note,that,you,typically,use,the,link,sql,parameter,class,itself,here,not,any,of,its,subclasses,throws,invalid,data,access,api,usage,exception,if,the,operation,is,already,compiled,and,hence,cannot,be,configured,further;public,void,declare,parameter,sql,parameter,param,throws,invalid,data,access,api,usage,exception,if,is,compiled,throw,new,invalid,data,access,api,usage,exception,cannot,add,parameters,once,the,query,is,compiled,this,declared,parameters,add,param
RdbmsOperation -> public void declareParameter(SqlParameter param) throws InvalidDataAccessApiUsageException;1368482696;Declare a parameter for this operation._<p>The order in which this method is called is significant when using_positional parameters. It is not significant when using named parameters_with named SqlParameter objects here_ it remains significant when using_named parameters in combination with unnamed SqlParameter objects here._@param param the SqlParameter to add. This will specify SQL type and (optionally)_the parameter's name. Note that you typically use the {@link SqlParameter} class_itself here, not any of its subclasses._@throws InvalidDataAccessApiUsageException if the operation is already compiled,_and hence cannot be configured further;public void declareParameter(SqlParameter param) throws InvalidDataAccessApiUsageException {_		if (isCompiled()) {_			throw new InvalidDataAccessApiUsageException("Cannot add parameters once the query is compiled")__		}_		this.declaredParameters.add(param)__	};declare,a,parameter,for,this,operation,p,the,order,in,which,this,method,is,called,is,significant,when,using,positional,parameters,it,is,not,significant,when,using,named,parameters,with,named,sql,parameter,objects,here,it,remains,significant,when,using,named,parameters,in,combination,with,unnamed,sql,parameter,objects,here,param,param,the,sql,parameter,to,add,this,will,specify,sql,type,and,optionally,the,parameter,s,name,note,that,you,typically,use,the,link,sql,parameter,class,itself,here,not,any,of,its,subclasses,throws,invalid,data,access,api,usage,exception,if,the,operation,is,already,compiled,and,hence,cannot,be,configured,further;public,void,declare,parameter,sql,parameter,param,throws,invalid,data,access,api,usage,exception,if,is,compiled,throw,new,invalid,data,access,api,usage,exception,cannot,add,parameters,once,the,query,is,compiled,this,declared,parameters,add,param
RdbmsOperation -> public void declareParameter(SqlParameter param) throws InvalidDataAccessApiUsageException;1385412762;Declare a parameter for this operation._<p>The order in which this method is called is significant when using_positional parameters. It is not significant when using named parameters_with named SqlParameter objects here_ it remains significant when using_named parameters in combination with unnamed SqlParameter objects here._@param param the SqlParameter to add. This will specify SQL type and (optionally)_the parameter's name. Note that you typically use the {@link SqlParameter} class_itself here, not any of its subclasses._@throws InvalidDataAccessApiUsageException if the operation is already compiled,_and hence cannot be configured further;public void declareParameter(SqlParameter param) throws InvalidDataAccessApiUsageException {_		if (isCompiled()) {_			throw new InvalidDataAccessApiUsageException("Cannot add parameters once the query is compiled")__		}_		this.declaredParameters.add(param)__	};declare,a,parameter,for,this,operation,p,the,order,in,which,this,method,is,called,is,significant,when,using,positional,parameters,it,is,not,significant,when,using,named,parameters,with,named,sql,parameter,objects,here,it,remains,significant,when,using,named,parameters,in,combination,with,unnamed,sql,parameter,objects,here,param,param,the,sql,parameter,to,add,this,will,specify,sql,type,and,optionally,the,parameter,s,name,note,that,you,typically,use,the,link,sql,parameter,class,itself,here,not,any,of,its,subclasses,throws,invalid,data,access,api,usage,exception,if,the,operation,is,already,compiled,and,hence,cannot,be,configured,further;public,void,declare,parameter,sql,parameter,param,throws,invalid,data,access,api,usage,exception,if,is,compiled,throw,new,invalid,data,access,api,usage,exception,cannot,add,parameters,once,the,query,is,compiled,this,declared,parameters,add,param
RdbmsOperation -> public void declareParameter(SqlParameter param) throws InvalidDataAccessApiUsageException;1407511029;Declare a parameter for this operation._<p>The order in which this method is called is significant when using_positional parameters. It is not significant when using named parameters_with named SqlParameter objects here_ it remains significant when using_named parameters in combination with unnamed SqlParameter objects here._@param param the SqlParameter to add. This will specify SQL type and (optionally)_the parameter's name. Note that you typically use the {@link SqlParameter} class_itself here, not any of its subclasses._@throws InvalidDataAccessApiUsageException if the operation is already compiled,_and hence cannot be configured further;public void declareParameter(SqlParameter param) throws InvalidDataAccessApiUsageException {_		if (isCompiled()) {_			throw new InvalidDataAccessApiUsageException("Cannot add parameters once the query is compiled")__		}_		this.declaredParameters.add(param)__	};declare,a,parameter,for,this,operation,p,the,order,in,which,this,method,is,called,is,significant,when,using,positional,parameters,it,is,not,significant,when,using,named,parameters,with,named,sql,parameter,objects,here,it,remains,significant,when,using,named,parameters,in,combination,with,unnamed,sql,parameter,objects,here,param,param,the,sql,parameter,to,add,this,will,specify,sql,type,and,optionally,the,parameter,s,name,note,that,you,typically,use,the,link,sql,parameter,class,itself,here,not,any,of,its,subclasses,throws,invalid,data,access,api,usage,exception,if,the,operation,is,already,compiled,and,hence,cannot,be,configured,further;public,void,declare,parameter,sql,parameter,param,throws,invalid,data,access,api,usage,exception,if,is,compiled,throw,new,invalid,data,access,api,usage,exception,cannot,add,parameters,once,the,query,is,compiled,this,declared,parameters,add,param
RdbmsOperation -> public void declareParameter(SqlParameter param) throws InvalidDataAccessApiUsageException;1446038912;Declare a parameter for this operation._<p>The order in which this method is called is significant when using_positional parameters. It is not significant when using named parameters_with named SqlParameter objects here_ it remains significant when using_named parameters in combination with unnamed SqlParameter objects here._@param param the SqlParameter to add. This will specify SQL type and (optionally)_the parameter's name. Note that you typically use the {@link SqlParameter} class_itself here, not any of its subclasses._@throws InvalidDataAccessApiUsageException if the operation is already compiled,_and hence cannot be configured further;public void declareParameter(SqlParameter param) throws InvalidDataAccessApiUsageException {_		if (isCompiled()) {_			throw new InvalidDataAccessApiUsageException("Cannot add parameters once the query is compiled")__		}_		this.declaredParameters.add(param)__	};declare,a,parameter,for,this,operation,p,the,order,in,which,this,method,is,called,is,significant,when,using,positional,parameters,it,is,not,significant,when,using,named,parameters,with,named,sql,parameter,objects,here,it,remains,significant,when,using,named,parameters,in,combination,with,unnamed,sql,parameter,objects,here,param,param,the,sql,parameter,to,add,this,will,specify,sql,type,and,optionally,the,parameter,s,name,note,that,you,typically,use,the,link,sql,parameter,class,itself,here,not,any,of,its,subclasses,throws,invalid,data,access,api,usage,exception,if,the,operation,is,already,compiled,and,hence,cannot,be,configured,further;public,void,declare,parameter,sql,parameter,param,throws,invalid,data,access,api,usage,exception,if,is,compiled,throw,new,invalid,data,access,api,usage,exception,cannot,add,parameters,once,the,query,is,compiled,this,declared,parameters,add,param
RdbmsOperation -> public void declareParameter(SqlParameter param) throws InvalidDataAccessApiUsageException;1467730834;Declare a parameter for this operation._<p>The order in which this method is called is significant when using_positional parameters. It is not significant when using named parameters_with named SqlParameter objects here_ it remains significant when using_named parameters in combination with unnamed SqlParameter objects here._@param param the SqlParameter to add. This will specify SQL type and (optionally)_the parameter's name. Note that you typically use the {@link SqlParameter} class_itself here, not any of its subclasses._@throws InvalidDataAccessApiUsageException if the operation is already compiled,_and hence cannot be configured further;public void declareParameter(SqlParameter param) throws InvalidDataAccessApiUsageException {_		if (isCompiled()) {_			throw new InvalidDataAccessApiUsageException("Cannot add parameters once the query is compiled")__		}_		this.declaredParameters.add(param)__	};declare,a,parameter,for,this,operation,p,the,order,in,which,this,method,is,called,is,significant,when,using,positional,parameters,it,is,not,significant,when,using,named,parameters,with,named,sql,parameter,objects,here,it,remains,significant,when,using,named,parameters,in,combination,with,unnamed,sql,parameter,objects,here,param,param,the,sql,parameter,to,add,this,will,specify,sql,type,and,optionally,the,parameter,s,name,note,that,you,typically,use,the,link,sql,parameter,class,itself,here,not,any,of,its,subclasses,throws,invalid,data,access,api,usage,exception,if,the,operation,is,already,compiled,and,hence,cannot,be,configured,further;public,void,declare,parameter,sql,parameter,param,throws,invalid,data,access,api,usage,exception,if,is,compiled,throw,new,invalid,data,access,api,usage,exception,cannot,add,parameters,once,the,query,is,compiled,this,declared,parameters,add,param
RdbmsOperation -> public void declareParameter(SqlParameter param) throws InvalidDataAccessApiUsageException;1495868221;Declare a parameter for this operation._<p>The order in which this method is called is significant when using_positional parameters. It is not significant when using named parameters_with named SqlParameter objects here_ it remains significant when using_named parameters in combination with unnamed SqlParameter objects here._@param param the SqlParameter to add. This will specify SQL type and (optionally)_the parameter's name. Note that you typically use the {@link SqlParameter} class_itself here, not any of its subclasses._@throws InvalidDataAccessApiUsageException if the operation is already compiled,_and hence cannot be configured further;public void declareParameter(SqlParameter param) throws InvalidDataAccessApiUsageException {_		if (isCompiled()) {_			throw new InvalidDataAccessApiUsageException("Cannot add parameters once the query is compiled")__		}_		this.declaredParameters.add(param)__	};declare,a,parameter,for,this,operation,p,the,order,in,which,this,method,is,called,is,significant,when,using,positional,parameters,it,is,not,significant,when,using,named,parameters,with,named,sql,parameter,objects,here,it,remains,significant,when,using,named,parameters,in,combination,with,unnamed,sql,parameter,objects,here,param,param,the,sql,parameter,to,add,this,will,specify,sql,type,and,optionally,the,parameter,s,name,note,that,you,typically,use,the,link,sql,parameter,class,itself,here,not,any,of,its,subclasses,throws,invalid,data,access,api,usage,exception,if,the,operation,is,already,compiled,and,hence,cannot,be,configured,further;public,void,declare,parameter,sql,parameter,param,throws,invalid,data,access,api,usage,exception,if,is,compiled,throw,new,invalid,data,access,api,usage,exception,cannot,add,parameters,once,the,query,is,compiled,this,declared,parameters,add,param
RdbmsOperation -> public void declareParameter(SqlParameter param) throws InvalidDataAccessApiUsageException;1496837955;Declare a parameter for this operation._<p>The order in which this method is called is significant when using_positional parameters. It is not significant when using named parameters_with named SqlParameter objects here_ it remains significant when using_named parameters in combination with unnamed SqlParameter objects here._@param param the SqlParameter to add. This will specify SQL type and (optionally)_the parameter's name. Note that you typically use the {@link SqlParameter} class_itself here, not any of its subclasses._@throws InvalidDataAccessApiUsageException if the operation is already compiled,_and hence cannot be configured further;public void declareParameter(SqlParameter param) throws InvalidDataAccessApiUsageException {_		if (isCompiled()) {_			throw new InvalidDataAccessApiUsageException("Cannot add parameters once the query is compiled")__		}_		this.declaredParameters.add(param)__	};declare,a,parameter,for,this,operation,p,the,order,in,which,this,method,is,called,is,significant,when,using,positional,parameters,it,is,not,significant,when,using,named,parameters,with,named,sql,parameter,objects,here,it,remains,significant,when,using,named,parameters,in,combination,with,unnamed,sql,parameter,objects,here,param,param,the,sql,parameter,to,add,this,will,specify,sql,type,and,optionally,the,parameter,s,name,note,that,you,typically,use,the,link,sql,parameter,class,itself,here,not,any,of,its,subclasses,throws,invalid,data,access,api,usage,exception,if,the,operation,is,already,compiled,and,hence,cannot,be,configured,further;public,void,declare,parameter,sql,parameter,param,throws,invalid,data,access,api,usage,exception,if,is,compiled,throw,new,invalid,data,access,api,usage,exception,cannot,add,parameters,once,the,query,is,compiled,this,declared,parameters,add,param
RdbmsOperation -> public void declareParameter(SqlParameter param) throws InvalidDataAccessApiUsageException;1498780456;Declare a parameter for this operation._<p>The order in which this method is called is significant when using_positional parameters. It is not significant when using named parameters_with named SqlParameter objects here_ it remains significant when using_named parameters in combination with unnamed SqlParameter objects here._@param param the SqlParameter to add. This will specify SQL type and (optionally)_the parameter's name. Note that you typically use the {@link SqlParameter} class_itself here, not any of its subclasses._@throws InvalidDataAccessApiUsageException if the operation is already compiled,_and hence cannot be configured further;public void declareParameter(SqlParameter param) throws InvalidDataAccessApiUsageException {_		if (isCompiled()) {_			throw new InvalidDataAccessApiUsageException("Cannot add parameters once the query is compiled")__		}_		this.declaredParameters.add(param)__	};declare,a,parameter,for,this,operation,p,the,order,in,which,this,method,is,called,is,significant,when,using,positional,parameters,it,is,not,significant,when,using,named,parameters,with,named,sql,parameter,objects,here,it,remains,significant,when,using,named,parameters,in,combination,with,unnamed,sql,parameter,objects,here,param,param,the,sql,parameter,to,add,this,will,specify,sql,type,and,optionally,the,parameter,s,name,note,that,you,typically,use,the,link,sql,parameter,class,itself,here,not,any,of,its,subclasses,throws,invalid,data,access,api,usage,exception,if,the,operation,is,already,compiled,and,hence,cannot,be,configured,further;public,void,declare,parameter,sql,parameter,param,throws,invalid,data,access,api,usage,exception,if,is,compiled,throw,new,invalid,data,access,api,usage,exception,cannot,add,parameters,once,the,query,is,compiled,this,declared,parameters,add,param
RdbmsOperation -> public void declareParameter(SqlParameter param) throws InvalidDataAccessApiUsageException;1506519613;Declare a parameter for this operation._<p>The order in which this method is called is significant when using_positional parameters. It is not significant when using named parameters_with named SqlParameter objects here_ it remains significant when using_named parameters in combination with unnamed SqlParameter objects here._@param param the SqlParameter to add. This will specify SQL type and (optionally)_the parameter's name. Note that you typically use the {@link SqlParameter} class_itself here, not any of its subclasses._@throws InvalidDataAccessApiUsageException if the operation is already compiled,_and hence cannot be configured further;public void declareParameter(SqlParameter param) throws InvalidDataAccessApiUsageException {_		if (isCompiled()) {_			throw new InvalidDataAccessApiUsageException("Cannot add parameters once the query is compiled")__		}_		this.declaredParameters.add(param)__	};declare,a,parameter,for,this,operation,p,the,order,in,which,this,method,is,called,is,significant,when,using,positional,parameters,it,is,not,significant,when,using,named,parameters,with,named,sql,parameter,objects,here,it,remains,significant,when,using,named,parameters,in,combination,with,unnamed,sql,parameter,objects,here,param,param,the,sql,parameter,to,add,this,will,specify,sql,type,and,optionally,the,parameter,s,name,note,that,you,typically,use,the,link,sql,parameter,class,itself,here,not,any,of,its,subclasses,throws,invalid,data,access,api,usage,exception,if,the,operation,is,already,compiled,and,hence,cannot,be,configured,further;public,void,declare,parameter,sql,parameter,param,throws,invalid,data,access,api,usage,exception,if,is,compiled,throw,new,invalid,data,access,api,usage,exception,cannot,add,parameters,once,the,query,is,compiled,this,declared,parameters,add,param
RdbmsOperation -> public void declareParameter(SqlParameter param) throws InvalidDataAccessApiUsageException;1525966356;Declare a parameter for this operation._<p>The order in which this method is called is significant when using_positional parameters. It is not significant when using named parameters_with named SqlParameter objects here_ it remains significant when using_named parameters in combination with unnamed SqlParameter objects here._@param param the SqlParameter to add. This will specify SQL type and (optionally)_the parameter's name. Note that you typically use the {@link SqlParameter} class_itself here, not any of its subclasses._@throws InvalidDataAccessApiUsageException if the operation is already compiled,_and hence cannot be configured further;public void declareParameter(SqlParameter param) throws InvalidDataAccessApiUsageException {_		if (isCompiled()) {_			throw new InvalidDataAccessApiUsageException("Cannot add parameters once the query is compiled")__		}_		this.declaredParameters.add(param)__	};declare,a,parameter,for,this,operation,p,the,order,in,which,this,method,is,called,is,significant,when,using,positional,parameters,it,is,not,significant,when,using,named,parameters,with,named,sql,parameter,objects,here,it,remains,significant,when,using,named,parameters,in,combination,with,unnamed,sql,parameter,objects,here,param,param,the,sql,parameter,to,add,this,will,specify,sql,type,and,optionally,the,parameter,s,name,note,that,you,typically,use,the,link,sql,parameter,class,itself,here,not,any,of,its,subclasses,throws,invalid,data,access,api,usage,exception,if,the,operation,is,already,compiled,and,hence,cannot,be,configured,further;public,void,declare,parameter,sql,parameter,param,throws,invalid,data,access,api,usage,exception,if,is,compiled,throw,new,invalid,data,access,api,usage,exception,cannot,add,parameters,once,the,query,is,compiled,this,declared,parameters,add,param
RdbmsOperation -> public void declareParameter(SqlParameter param) throws InvalidDataAccessApiUsageException;1530174524;Declare a parameter for this operation._<p>The order in which this method is called is significant when using_positional parameters. It is not significant when using named parameters_with named SqlParameter objects here_ it remains significant when using_named parameters in combination with unnamed SqlParameter objects here._@param param the SqlParameter to add. This will specify SQL type and (optionally)_the parameter's name. Note that you typically use the {@link SqlParameter} class_itself here, not any of its subclasses._@throws InvalidDataAccessApiUsageException if the operation is already compiled,_and hence cannot be configured further;public void declareParameter(SqlParameter param) throws InvalidDataAccessApiUsageException {_		if (isCompiled()) {_			throw new InvalidDataAccessApiUsageException("Cannot add parameters once the query is compiled")__		}_		this.declaredParameters.add(param)__	};declare,a,parameter,for,this,operation,p,the,order,in,which,this,method,is,called,is,significant,when,using,positional,parameters,it,is,not,significant,when,using,named,parameters,with,named,sql,parameter,objects,here,it,remains,significant,when,using,named,parameters,in,combination,with,unnamed,sql,parameter,objects,here,param,param,the,sql,parameter,to,add,this,will,specify,sql,type,and,optionally,the,parameter,s,name,note,that,you,typically,use,the,link,sql,parameter,class,itself,here,not,any,of,its,subclasses,throws,invalid,data,access,api,usage,exception,if,the,operation,is,already,compiled,and,hence,cannot,be,configured,further;public,void,declare,parameter,sql,parameter,param,throws,invalid,data,access,api,usage,exception,if,is,compiled,throw,new,invalid,data,access,api,usage,exception,cannot,add,parameters,once,the,query,is,compiled,this,declared,parameters,add,param
RdbmsOperation -> public void declareParameter(SqlParameter param) throws InvalidDataAccessApiUsageException;1542899558;Declare a parameter for this operation._<p>The order in which this method is called is significant when using_positional parameters. It is not significant when using named parameters_with named SqlParameter objects here_ it remains significant when using_named parameters in combination with unnamed SqlParameter objects here._@param param the SqlParameter to add. This will specify SQL type and (optionally)_the parameter's name. Note that you typically use the {@link SqlParameter} class_itself here, not any of its subclasses._@throws InvalidDataAccessApiUsageException if the operation is already compiled,_and hence cannot be configured further;public void declareParameter(SqlParameter param) throws InvalidDataAccessApiUsageException {_		if (isCompiled()) {_			throw new InvalidDataAccessApiUsageException("Cannot add parameters once the query is compiled")__		}_		this.declaredParameters.add(param)__	};declare,a,parameter,for,this,operation,p,the,order,in,which,this,method,is,called,is,significant,when,using,positional,parameters,it,is,not,significant,when,using,named,parameters,with,named,sql,parameter,objects,here,it,remains,significant,when,using,named,parameters,in,combination,with,unnamed,sql,parameter,objects,here,param,param,the,sql,parameter,to,add,this,will,specify,sql,type,and,optionally,the,parameter,s,name,note,that,you,typically,use,the,link,sql,parameter,class,itself,here,not,any,of,its,subclasses,throws,invalid,data,access,api,usage,exception,if,the,operation,is,already,compiled,and,hence,cannot,be,configured,further;public,void,declare,parameter,sql,parameter,param,throws,invalid,data,access,api,usage,exception,if,is,compiled,throw,new,invalid,data,access,api,usage,exception,cannot,add,parameters,once,the,query,is,compiled,this,declared,parameters,add,param
