commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Test(expected = IllegalArgumentException.class) public void withNullBeanPassedToCtor() throws Exception {     new BeanPropertySqlParameterSource(null). }
false;public;0;5;;@Test(expected = IllegalArgumentException.class) public void getValueWhereTheUnderlyingBeanHasNoSuchProperty() throws Exception {     BeanPropertySqlParameterSource source = new BeanPropertySqlParameterSource(new TestBean()).     source.getValue("thisPropertyDoesNotExist"). }
false;public;0;10;;@Test public void successfulPropertyAccess() {     BeanPropertySqlParameterSource source = new BeanPropertySqlParameterSource(new TestBean("tb", 99)).     assertTrue(Arrays.asList(source.getReadablePropertyNames()).contains("name")).     assertTrue(Arrays.asList(source.getReadablePropertyNames()).contains("age")).     assertEquals("tb", source.getValue("name")).     assertEquals(99, source.getValue("age")).     assertEquals(Types.VARCHAR, source.getSqlType("name")).     assertEquals(Types.INTEGER, source.getSqlType("age")). }
false;public;0;9;;@Test public void successfulPropertyAccessWithOverriddenSqlType() {     BeanPropertySqlParameterSource source = new BeanPropertySqlParameterSource(new TestBean("tb", 99)).     source.registerSqlType("age", Types.NUMERIC).     assertEquals("tb", source.getValue("name")).     assertEquals(99, source.getValue("age")).     assertEquals(Types.VARCHAR, source.getSqlType("name")).     assertEquals(Types.NUMERIC, source.getSqlType("age")). }
false;public;0;5;;@Test public void hasValueWhereTheUnderlyingBeanHasNoSuchProperty() throws Exception {     BeanPropertySqlParameterSource source = new BeanPropertySqlParameterSource(new TestBean()).     assertFalse(source.hasValue("thisPropertyDoesNotExist")). }
false;public;0;5;;@Test(expected = IllegalArgumentException.class) public void getValueWhereTheUnderlyingBeanPropertyIsNotReadable() throws Exception {     BeanPropertySqlParameterSource source = new BeanPropertySqlParameterSource(new NoReadableProperties()).     source.getValue("noOp"). }
false;public;0;5;;@Test public void hasValueWhereTheUnderlyingBeanPropertyIsNotReadable() throws Exception {     BeanPropertySqlParameterSource source = new BeanPropertySqlParameterSource(new NoReadableProperties()).     assertFalse(source.hasValue("noOp")). }
false;public;1;2;;public void setNoOp(String noOp) { }
