# id;timestamp;commentText;codeText;commentWords;codeWords
ScriptUtilsUnitTests -> @Test 	public void splitScriptWithSingleQuotesNestedInsideDoubleQuotes() throws Exception;1436876971;See <a href="https://jira.spring.io/browse/SPR-13218">SPR-13218</a>;@Test_	public void splitScriptWithSingleQuotesNestedInsideDoubleQuotes() throws Exception {_		String statement1 = "select '1' as \"Dogbert's owner's\" from dual"__		String statement2 = "select '2' as \"Dilbert's\" from dual"__		char delim = '_'__		String script = statement1 + delim + statement2 + delim__		List<String> statements = new ArrayList<String>()__		splitSqlScript(script, '_', statements)__		assertEquals("wrong number of statements", 2, statements.size())__		assertEquals("statement 1 not split correctly", statement1, statements.get(0))__		assertEquals("statement 2 not split correctly", statement2, statements.get(1))__	};see,a,href,https,jira,spring,io,browse,spr,13218,spr,13218,a;test,public,void,split,script,with,single,quotes,nested,inside,double,quotes,throws,exception,string,statement1,select,1,as,dogbert,s,owner,s,from,dual,string,statement2,select,2,as,dilbert,s,from,dual,char,delim,string,script,statement1,delim,statement2,delim,list,string,statements,new,array,list,string,split,sql,script,script,statements,assert,equals,wrong,number,of,statements,2,statements,size,assert,equals,statement,1,not,split,correctly,statement1,statements,get,0,assert,equals,statement,2,not,split,correctly,statement2,statements,get,1
ScriptUtilsUnitTests -> @Test 	public void splitScriptWithSingleQuotesNestedInsideDoubleQuotes() throws Exception;1467730834;See <a href="https://jira.spring.io/browse/SPR-13218">SPR-13218</a>;@Test_	public void splitScriptWithSingleQuotesNestedInsideDoubleQuotes() throws Exception {_		String statement1 = "select '1' as \"Dogbert's owner's\" from dual"__		String statement2 = "select '2' as \"Dilbert's\" from dual"__		char delim = '_'__		String script = statement1 + delim + statement2 + delim__		List<String> statements = new ArrayList<>()__		splitSqlScript(script, '_', statements)__		assertEquals("wrong number of statements", 2, statements.size())__		assertEquals("statement 1 not split correctly", statement1, statements.get(0))__		assertEquals("statement 2 not split correctly", statement2, statements.get(1))__	};see,a,href,https,jira,spring,io,browse,spr,13218,spr,13218,a;test,public,void,split,script,with,single,quotes,nested,inside,double,quotes,throws,exception,string,statement1,select,1,as,dogbert,s,owner,s,from,dual,string,statement2,select,2,as,dilbert,s,from,dual,char,delim,string,script,statement1,delim,statement2,delim,list,string,statements,new,array,list,split,sql,script,script,statements,assert,equals,wrong,number,of,statements,2,statements,size,assert,equals,statement,1,not,split,correctly,statement1,statements,get,0,assert,equals,statement,2,not,split,correctly,statement2,statements,get,1
ScriptUtilsUnitTests -> @Test 	public void readAndSplitScriptWithMultipleNewlinesAsSeparator() throws Exception;1394984468;See <a href="https://jira.spring.io/browse/SPR-11560">SPR-11560</a>;@Test_	public void readAndSplitScriptWithMultipleNewlinesAsSeparator() throws Exception {_		String script = readScript("db-test-data-multi-newline.sql")__		List<String> statements = new ArrayList<String>()__		splitSqlScript(script, "\n\n", statements)___		String statement1 = "insert into T_TEST (NAME) values ('Keith')"__		String statement2 = "insert into T_TEST (NAME) values ('Dave')"___		assertEquals("wrong number of statements", 2, statements.size())__		assertEquals("statement 1 not split correctly", statement1, statements.get(0))__		assertEquals("statement 2 not split correctly", statement2, statements.get(1))__	};see,a,href,https,jira,spring,io,browse,spr,11560,spr,11560,a;test,public,void,read,and,split,script,with,multiple,newlines,as,separator,throws,exception,string,script,read,script,db,test,data,multi,newline,sql,list,string,statements,new,array,list,string,split,sql,script,script,n,n,statements,string,statement1,insert,into,name,values,keith,string,statement2,insert,into,name,values,dave,assert,equals,wrong,number,of,statements,2,statements,size,assert,equals,statement,1,not,split,correctly,statement1,statements,get,0,assert,equals,statement,2,not,split,correctly,statement2,statements,get,1
ScriptUtilsUnitTests -> @Test 	public void readAndSplitScriptWithMultipleNewlinesAsSeparator() throws Exception;1413848647;See <a href="https://jira.spring.io/browse/SPR-11560">SPR-11560</a>;@Test_	public void readAndSplitScriptWithMultipleNewlinesAsSeparator() throws Exception {_		String script = readScript("db-test-data-multi-newline.sql")__		List<String> statements = new ArrayList<String>()__		splitSqlScript(script, "\n\n", statements)___		String statement1 = "insert into T_TEST (NAME) values ('Keith')"__		String statement2 = "insert into T_TEST (NAME) values ('Dave')"___		assertEquals("wrong number of statements", 2, statements.size())__		assertEquals("statement 1 not split correctly", statement1, statements.get(0))__		assertEquals("statement 2 not split correctly", statement2, statements.get(1))__	};see,a,href,https,jira,spring,io,browse,spr,11560,spr,11560,a;test,public,void,read,and,split,script,with,multiple,newlines,as,separator,throws,exception,string,script,read,script,db,test,data,multi,newline,sql,list,string,statements,new,array,list,string,split,sql,script,script,n,n,statements,string,statement1,insert,into,name,values,keith,string,statement2,insert,into,name,values,dave,assert,equals,wrong,number,of,statements,2,statements,size,assert,equals,statement,1,not,split,correctly,statement1,statements,get,0,assert,equals,statement,2,not,split,correctly,statement2,statements,get,1
ScriptUtilsUnitTests -> @Test 	public void readAndSplitScriptWithMultipleNewlinesAsSeparator() throws Exception;1436876971;See <a href="https://jira.spring.io/browse/SPR-11560">SPR-11560</a>;@Test_	public void readAndSplitScriptWithMultipleNewlinesAsSeparator() throws Exception {_		String script = readScript("db-test-data-multi-newline.sql")__		List<String> statements = new ArrayList<String>()__		splitSqlScript(script, "\n\n", statements)___		String statement1 = "insert into T_TEST (NAME) values ('Keith')"__		String statement2 = "insert into T_TEST (NAME) values ('Dave')"___		assertEquals("wrong number of statements", 2, statements.size())__		assertEquals("statement 1 not split correctly", statement1, statements.get(0))__		assertEquals("statement 2 not split correctly", statement2, statements.get(1))__	};see,a,href,https,jira,spring,io,browse,spr,11560,spr,11560,a;test,public,void,read,and,split,script,with,multiple,newlines,as,separator,throws,exception,string,script,read,script,db,test,data,multi,newline,sql,list,string,statements,new,array,list,string,split,sql,script,script,n,n,statements,string,statement1,insert,into,name,values,keith,string,statement2,insert,into,name,values,dave,assert,equals,wrong,number,of,statements,2,statements,size,assert,equals,statement,1,not,split,correctly,statement1,statements,get,0,assert,equals,statement,2,not,split,correctly,statement2,statements,get,1
ScriptUtilsUnitTests -> @Test 	public void readAndSplitScriptWithMultipleNewlinesAsSeparator() throws Exception;1467730834;See <a href="https://jira.spring.io/browse/SPR-11560">SPR-11560</a>;@Test_	public void readAndSplitScriptWithMultipleNewlinesAsSeparator() throws Exception {_		String script = readScript("db-test-data-multi-newline.sql")__		List<String> statements = new ArrayList<>()__		splitSqlScript(script, "\n\n", statements)___		String statement1 = "insert into T_TEST (NAME) values ('Keith')"__		String statement2 = "insert into T_TEST (NAME) values ('Dave')"___		assertEquals("wrong number of statements", 2, statements.size())__		assertEquals("statement 1 not split correctly", statement1, statements.get(0))__		assertEquals("statement 2 not split correctly", statement2, statements.get(1))__	};see,a,href,https,jira,spring,io,browse,spr,11560,spr,11560,a;test,public,void,read,and,split,script,with,multiple,newlines,as,separator,throws,exception,string,script,read,script,db,test,data,multi,newline,sql,list,string,statements,new,array,list,split,sql,script,script,n,n,statements,string,statement1,insert,into,name,values,keith,string,statement2,insert,into,name,values,dave,assert,equals,wrong,number,of,statements,2,statements,size,assert,equals,statement,1,not,split,correctly,statement1,statements,get,0,assert,equals,statement,2,not,split,correctly,statement2,statements,get,1
ScriptUtilsUnitTests -> @Test 	public void readAndSplitScriptContainingMuliLineComments() throws Exception;1394984468;See <a href="https://jira.spring.io/browse/SPR-9531">SPR-9531</a>;@Test_	public void readAndSplitScriptContainingMuliLineComments() throws Exception {_		String script = readScript("test-data-with-multi-line-comments.sql")__		List<String> statements = new ArrayList<String>()__		splitSqlScript(script, '_', statements)___		String statement1 = "INSERT INTO users(first_name, last_name) VALUES('Juergen', 'Hoeller')"__		String statement2 = "INSERT INTO users(first_name, last_name) VALUES( 'Sam' , 'Brannen' )"___		assertEquals("wrong number of statements", 2, statements.size())__		assertEquals("statement 1 not split correctly", statement1, statements.get(0))__		assertEquals("statement 2 not split correctly", statement2, statements.get(1))__	};see,a,href,https,jira,spring,io,browse,spr,9531,spr,9531,a;test,public,void,read,and,split,script,containing,muli,line,comments,throws,exception,string,script,read,script,test,data,with,multi,line,comments,sql,list,string,statements,new,array,list,string,split,sql,script,script,statements,string,statement1,insert,into,users,values,juergen,hoeller,string,statement2,insert,into,users,values,sam,brannen,assert,equals,wrong,number,of,statements,2,statements,size,assert,equals,statement,1,not,split,correctly,statement1,statements,get,0,assert,equals,statement,2,not,split,correctly,statement2,statements,get,1
ScriptUtilsUnitTests -> @Test 	public void readAndSplitScriptContainingMuliLineComments() throws Exception;1413848647;See <a href="https://jira.spring.io/browse/SPR-9531">SPR-9531</a>;@Test_	public void readAndSplitScriptContainingMuliLineComments() throws Exception {_		String script = readScript("test-data-with-multi-line-comments.sql")__		List<String> statements = new ArrayList<String>()__		splitSqlScript(script, '_', statements)___		String statement1 = "INSERT INTO users(first_name, last_name) VALUES('Juergen', 'Hoeller')"__		String statement2 = "INSERT INTO users(first_name, last_name) VALUES( 'Sam' , 'Brannen' )"___		assertEquals("wrong number of statements", 2, statements.size())__		assertEquals("statement 1 not split correctly", statement1, statements.get(0))__		assertEquals("statement 2 not split correctly", statement2, statements.get(1))__	};see,a,href,https,jira,spring,io,browse,spr,9531,spr,9531,a;test,public,void,read,and,split,script,containing,muli,line,comments,throws,exception,string,script,read,script,test,data,with,multi,line,comments,sql,list,string,statements,new,array,list,string,split,sql,script,script,statements,string,statement1,insert,into,users,values,juergen,hoeller,string,statement2,insert,into,users,values,sam,brannen,assert,equals,wrong,number,of,statements,2,statements,size,assert,equals,statement,1,not,split,correctly,statement1,statements,get,0,assert,equals,statement,2,not,split,correctly,statement2,statements,get,1
ScriptUtilsUnitTests -> @Test 	public void readAndSplitScriptContainingMuliLineComments() throws Exception;1436876971;See <a href="https://jira.spring.io/browse/SPR-9531">SPR-9531</a>;@Test_	public void readAndSplitScriptContainingMuliLineComments() throws Exception {_		String script = readScript("test-data-with-multi-line-comments.sql")__		List<String> statements = new ArrayList<String>()__		splitSqlScript(script, '_', statements)___		String statement1 = "INSERT INTO users(first_name, last_name) VALUES('Juergen', 'Hoeller')"__		String statement2 = "INSERT INTO users(first_name, last_name) VALUES( 'Sam' , 'Brannen' )"___		assertEquals("wrong number of statements", 2, statements.size())__		assertEquals("statement 1 not split correctly", statement1, statements.get(0))__		assertEquals("statement 2 not split correctly", statement2, statements.get(1))__	};see,a,href,https,jira,spring,io,browse,spr,9531,spr,9531,a;test,public,void,read,and,split,script,containing,muli,line,comments,throws,exception,string,script,read,script,test,data,with,multi,line,comments,sql,list,string,statements,new,array,list,string,split,sql,script,script,statements,string,statement1,insert,into,users,values,juergen,hoeller,string,statement2,insert,into,users,values,sam,brannen,assert,equals,wrong,number,of,statements,2,statements,size,assert,equals,statement,1,not,split,correctly,statement1,statements,get,0,assert,equals,statement,2,not,split,correctly,statement2,statements,get,1
ScriptUtilsUnitTests -> @Test 	public void readAndSplitScriptContainingMuliLineComments() throws Exception;1467730834;See <a href="https://jira.spring.io/browse/SPR-9531">SPR-9531</a>;@Test_	public void readAndSplitScriptContainingMuliLineComments() throws Exception {_		String script = readScript("test-data-with-multi-line-comments.sql")__		List<String> statements = new ArrayList<>()__		splitSqlScript(script, '_', statements)___		String statement1 = "INSERT INTO users(first_name, last_name) VALUES('Juergen', 'Hoeller')"__		String statement2 = "INSERT INTO users(first_name, last_name) VALUES( 'Sam' , 'Brannen' )"___		assertEquals("wrong number of statements", 2, statements.size())__		assertEquals("statement 1 not split correctly", statement1, statements.get(0))__		assertEquals("statement 2 not split correctly", statement2, statements.get(1))__	};see,a,href,https,jira,spring,io,browse,spr,9531,spr,9531,a;test,public,void,read,and,split,script,containing,muli,line,comments,throws,exception,string,script,read,script,test,data,with,multi,line,comments,sql,list,string,statements,new,array,list,split,sql,script,script,statements,string,statement1,insert,into,users,values,juergen,hoeller,string,statement2,insert,into,users,values,sam,brannen,assert,equals,wrong,number,of,statements,2,statements,size,assert,equals,statement,1,not,split,correctly,statement1,statements,get,0,assert,equals,statement,2,not,split,correctly,statement2,statements,get,1
ScriptUtilsUnitTests -> @Test 	public void readAndSplitScriptContainingCommentsWithLeadingTabs() throws Exception;1394984468;See <a href="https://jira.spring.io/browse/SPR-10330">SPR-10330</a>;@Test_	public void readAndSplitScriptContainingCommentsWithLeadingTabs() throws Exception {_		String script = readScript("test-data-with-comments-and-leading-tabs.sql")__		List<String> statements = new ArrayList<String>()__		splitSqlScript(script, '_', statements)___		String statement1 = "insert into customer (id, name) values (1, 'Sam Brannen')"__		String statement2 = "insert into orders(id, order_date, customer_id) values (1, '2013-06-08', 1)"__		String statement3 = "insert into orders(id, order_date, customer_id) values (2, '2013-06-08', 1)"___		assertEquals("wrong number of statements", 3, statements.size())__		assertEquals("statement 1 not split correctly", statement1, statements.get(0))__		assertEquals("statement 2 not split correctly", statement2, statements.get(1))__		assertEquals("statement 3 not split correctly", statement3, statements.get(2))__	};see,a,href,https,jira,spring,io,browse,spr,10330,spr,10330,a;test,public,void,read,and,split,script,containing,comments,with,leading,tabs,throws,exception,string,script,read,script,test,data,with,comments,and,leading,tabs,sql,list,string,statements,new,array,list,string,split,sql,script,script,statements,string,statement1,insert,into,customer,id,name,values,1,sam,brannen,string,statement2,insert,into,orders,id,values,1,2013,06,08,1,string,statement3,insert,into,orders,id,values,2,2013,06,08,1,assert,equals,wrong,number,of,statements,3,statements,size,assert,equals,statement,1,not,split,correctly,statement1,statements,get,0,assert,equals,statement,2,not,split,correctly,statement2,statements,get,1,assert,equals,statement,3,not,split,correctly,statement3,statements,get,2
ScriptUtilsUnitTests -> @Test 	public void readAndSplitScriptContainingCommentsWithLeadingTabs() throws Exception;1413848647;See <a href="https://jira.spring.io/browse/SPR-10330">SPR-10330</a>;@Test_	public void readAndSplitScriptContainingCommentsWithLeadingTabs() throws Exception {_		String script = readScript("test-data-with-comments-and-leading-tabs.sql")__		List<String> statements = new ArrayList<String>()__		splitSqlScript(script, '_', statements)___		String statement1 = "insert into customer (id, name) values (1, 'Sam Brannen')"__		String statement2 = "insert into orders(id, order_date, customer_id) values (1, '2013-06-08', 1)"__		String statement3 = "insert into orders(id, order_date, customer_id) values (2, '2013-06-08', 1)"___		assertEquals("wrong number of statements", 3, statements.size())__		assertEquals("statement 1 not split correctly", statement1, statements.get(0))__		assertEquals("statement 2 not split correctly", statement2, statements.get(1))__		assertEquals("statement 3 not split correctly", statement3, statements.get(2))__	};see,a,href,https,jira,spring,io,browse,spr,10330,spr,10330,a;test,public,void,read,and,split,script,containing,comments,with,leading,tabs,throws,exception,string,script,read,script,test,data,with,comments,and,leading,tabs,sql,list,string,statements,new,array,list,string,split,sql,script,script,statements,string,statement1,insert,into,customer,id,name,values,1,sam,brannen,string,statement2,insert,into,orders,id,values,1,2013,06,08,1,string,statement3,insert,into,orders,id,values,2,2013,06,08,1,assert,equals,wrong,number,of,statements,3,statements,size,assert,equals,statement,1,not,split,correctly,statement1,statements,get,0,assert,equals,statement,2,not,split,correctly,statement2,statements,get,1,assert,equals,statement,3,not,split,correctly,statement3,statements,get,2
ScriptUtilsUnitTests -> @Test 	public void readAndSplitScriptContainingCommentsWithLeadingTabs() throws Exception;1436876971;See <a href="https://jira.spring.io/browse/SPR-10330">SPR-10330</a>;@Test_	public void readAndSplitScriptContainingCommentsWithLeadingTabs() throws Exception {_		String script = readScript("test-data-with-comments-and-leading-tabs.sql")__		List<String> statements = new ArrayList<String>()__		splitSqlScript(script, '_', statements)___		String statement1 = "insert into customer (id, name) values (1, 'Sam Brannen')"__		String statement2 = "insert into orders(id, order_date, customer_id) values (1, '2013-06-08', 1)"__		String statement3 = "insert into orders(id, order_date, customer_id) values (2, '2013-06-08', 1)"___		assertEquals("wrong number of statements", 3, statements.size())__		assertEquals("statement 1 not split correctly", statement1, statements.get(0))__		assertEquals("statement 2 not split correctly", statement2, statements.get(1))__		assertEquals("statement 3 not split correctly", statement3, statements.get(2))__	};see,a,href,https,jira,spring,io,browse,spr,10330,spr,10330,a;test,public,void,read,and,split,script,containing,comments,with,leading,tabs,throws,exception,string,script,read,script,test,data,with,comments,and,leading,tabs,sql,list,string,statements,new,array,list,string,split,sql,script,script,statements,string,statement1,insert,into,customer,id,name,values,1,sam,brannen,string,statement2,insert,into,orders,id,values,1,2013,06,08,1,string,statement3,insert,into,orders,id,values,2,2013,06,08,1,assert,equals,wrong,number,of,statements,3,statements,size,assert,equals,statement,1,not,split,correctly,statement1,statements,get,0,assert,equals,statement,2,not,split,correctly,statement2,statements,get,1,assert,equals,statement,3,not,split,correctly,statement3,statements,get,2
ScriptUtilsUnitTests -> @Test 	public void readAndSplitScriptContainingCommentsWithLeadingTabs() throws Exception;1467730834;See <a href="https://jira.spring.io/browse/SPR-10330">SPR-10330</a>;@Test_	public void readAndSplitScriptContainingCommentsWithLeadingTabs() throws Exception {_		String script = readScript("test-data-with-comments-and-leading-tabs.sql")__		List<String> statements = new ArrayList<>()__		splitSqlScript(script, '_', statements)___		String statement1 = "insert into customer (id, name) values (1, 'Sam Brannen')"__		String statement2 = "insert into orders(id, order_date, customer_id) values (1, '2013-06-08', 1)"__		String statement3 = "insert into orders(id, order_date, customer_id) values (2, '2013-06-08', 1)"___		assertEquals("wrong number of statements", 3, statements.size())__		assertEquals("statement 1 not split correctly", statement1, statements.get(0))__		assertEquals("statement 2 not split correctly", statement2, statements.get(1))__		assertEquals("statement 3 not split correctly", statement3, statements.get(2))__	};see,a,href,https,jira,spring,io,browse,spr,10330,spr,10330,a;test,public,void,read,and,split,script,containing,comments,with,leading,tabs,throws,exception,string,script,read,script,test,data,with,comments,and,leading,tabs,sql,list,string,statements,new,array,list,split,sql,script,script,statements,string,statement1,insert,into,customer,id,name,values,1,sam,brannen,string,statement2,insert,into,orders,id,values,1,2013,06,08,1,string,statement3,insert,into,orders,id,values,2,2013,06,08,1,assert,equals,wrong,number,of,statements,3,statements,size,assert,equals,statement,1,not,split,correctly,statement1,statements,get,0,assert,equals,statement,2,not,split,correctly,statement2,statements,get,1,assert,equals,statement,3,not,split,correctly,statement3,statements,get,2
