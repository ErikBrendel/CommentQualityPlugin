commented;modifiers;parameterAmount;loc;comment;code
false;public;0;7;;@Test public void badSqlGrammarException() {     SQLException badSqlGrammarExceptionEx = SQLExceptionSubclassFactory.newSQLDataException("", "", 1).     DataAccessException dae = sext.translate("task", "SQL", badSqlGrammarExceptionEx).     assertEquals(badSqlGrammarExceptionEx, dae.getCause()).     assertThat(dae, instanceOf(BadSqlGrammarException.class)). }
false;public;0;7;;@Test public void dataAccessResourceException() {     SQLException dataAccessResourceEx = SQLExceptionSubclassFactory.newSQLDataException("", "", 2).     DataAccessException dae = sext.translate("task", "SQL", dataAccessResourceEx).     assertEquals(dataAccessResourceEx, dae.getCause()).     assertThat(dae, instanceOf(TransientDataAccessResourceException.class)). }
