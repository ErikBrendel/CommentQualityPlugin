# id;timestamp;commentText;codeText;commentWords;codeWords
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromCurrentRequest();1328020251;Equivalent to {@link #fromRequest(HttpServletRequest)} except the_request is obtained via {@link RequestContextHolder}.;public static ServletUriComponentsBuilder fromCurrentRequest() {_		return fromRequest(getCurrentRequest())__	};equivalent,to,link,from,request,http,servlet,request,except,the,request,is,obtained,via,link,request,context,holder;public,static,servlet,uri,components,builder,from,current,request,return,from,request,get,current,request
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromCurrentRequest();1329142650;Same as {@link #fromRequest(HttpServletRequest)} except the_request is obtained through {@link RequestContextHolder}.;public static ServletUriComponentsBuilder fromCurrentRequest() {_		return fromRequest(getCurrentRequest())__	};same,as,link,from,request,http,servlet,request,except,the,request,is,obtained,through,link,request,context,holder;public,static,servlet,uri,components,builder,from,current,request,return,from,request,get,current,request
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromCurrentRequest();1362408075;Same as {@link #fromRequest(HttpServletRequest)} except the_request is obtained through {@link RequestContextHolder}.;public static ServletUriComponentsBuilder fromCurrentRequest() {_		return fromRequest(getCurrentRequest())__	};same,as,link,from,request,http,servlet,request,except,the,request,is,obtained,through,link,request,context,holder;public,static,servlet,uri,components,builder,from,current,request,return,from,request,get,current,request
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromCurrentRequest();1375199802;Same as {@link #fromRequest(HttpServletRequest)} except the_request is obtained through {@link RequestContextHolder}.;public static ServletUriComponentsBuilder fromCurrentRequest() {_		return fromRequest(getCurrentRequest())__	};same,as,link,from,request,http,servlet,request,except,the,request,is,obtained,through,link,request,context,holder;public,static,servlet,uri,components,builder,from,current,request,return,from,request,get,current,request
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromCurrentRequest();1377797966;Same as {@link #fromRequest(HttpServletRequest)} except the_request is obtained through {@link RequestContextHolder}.;public static ServletUriComponentsBuilder fromCurrentRequest() {_		return fromRequest(getCurrentRequest())__	};same,as,link,from,request,http,servlet,request,except,the,request,is,obtained,through,link,request,context,holder;public,static,servlet,uri,components,builder,from,current,request,return,from,request,get,current,request
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromCurrentRequest();1382387168;Same as {@link #fromRequest(HttpServletRequest)} except the_request is obtained through {@link RequestContextHolder}.;public static ServletUriComponentsBuilder fromCurrentRequest() {_		return fromRequest(getCurrentRequest())__	};same,as,link,from,request,http,servlet,request,except,the,request,is,obtained,through,link,request,context,holder;public,static,servlet,uri,components,builder,from,current,request,return,from,request,get,current,request
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromCurrentRequest();1385423968;Same as {@link #fromRequest(HttpServletRequest)} except the_request is obtained through {@link RequestContextHolder}.;public static ServletUriComponentsBuilder fromCurrentRequest() {_		return fromRequest(getCurrentRequest())__	};same,as,link,from,request,http,servlet,request,except,the,request,is,obtained,through,link,request,context,holder;public,static,servlet,uri,components,builder,from,current,request,return,from,request,get,current,request
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromCurrentRequest();1402540848;Same as {@link #fromRequest(HttpServletRequest)} except the_request is obtained through {@link RequestContextHolder}.;public static ServletUriComponentsBuilder fromCurrentRequest() {_		return fromRequest(getCurrentRequest())__	};same,as,link,from,request,http,servlet,request,except,the,request,is,obtained,through,link,request,context,holder;public,static,servlet,uri,components,builder,from,current,request,return,from,request,get,current,request
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromCurrentRequest();1405032917;Same as {@link #fromRequest(HttpServletRequest)} except the_request is obtained through {@link RequestContextHolder}.;public static ServletUriComponentsBuilder fromCurrentRequest() {_		return fromRequest(getCurrentRequest())__	};same,as,link,from,request,http,servlet,request,except,the,request,is,obtained,through,link,request,context,holder;public,static,servlet,uri,components,builder,from,current,request,return,from,request,get,current,request
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromCurrentRequest();1405084622;Same as {@link #fromRequest(HttpServletRequest)} except the_request is obtained through {@link RequestContextHolder}.;public static ServletUriComponentsBuilder fromCurrentRequest() {_		return fromRequest(getCurrentRequest())__	};same,as,link,from,request,http,servlet,request,except,the,request,is,obtained,through,link,request,context,holder;public,static,servlet,uri,components,builder,from,current,request,return,from,request,get,current,request
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromCurrentRequest();1417632385;Same as {@link #fromRequest(HttpServletRequest)} except the_request is obtained through {@link RequestContextHolder}.;public static ServletUriComponentsBuilder fromCurrentRequest() {_		return fromRequest(getCurrentRequest())__	};same,as,link,from,request,http,servlet,request,except,the,request,is,obtained,through,link,request,context,holder;public,static,servlet,uri,components,builder,from,current,request,return,from,request,get,current,request
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromCurrentRequest();1417706155;Same as {@link #fromRequest(HttpServletRequest)} except the_request is obtained through {@link RequestContextHolder}.;public static ServletUriComponentsBuilder fromCurrentRequest() {_		return fromRequest(getCurrentRequest())__	};same,as,link,from,request,http,servlet,request,except,the,request,is,obtained,through,link,request,context,holder;public,static,servlet,uri,components,builder,from,current,request,return,from,request,get,current,request
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromCurrentRequest();1417707014;Same as {@link #fromRequest(HttpServletRequest)} except the_request is obtained through {@link RequestContextHolder}.;public static ServletUriComponentsBuilder fromCurrentRequest() {_		return fromRequest(getCurrentRequest())__	};same,as,link,from,request,http,servlet,request,except,the,request,is,obtained,through,link,request,context,holder;public,static,servlet,uri,components,builder,from,current,request,return,from,request,get,current,request
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromCurrentRequest();1417799775;Same as {@link #fromRequest(HttpServletRequest)} except the_request is obtained through {@link RequestContextHolder}.;public static ServletUriComponentsBuilder fromCurrentRequest() {_		return fromRequest(getCurrentRequest())__	};same,as,link,from,request,http,servlet,request,except,the,request,is,obtained,through,link,request,context,holder;public,static,servlet,uri,components,builder,from,current,request,return,from,request,get,current,request
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromCurrentRequest();1422572109;Same as {@link #fromRequest(HttpServletRequest)} except the_request is obtained through {@link RequestContextHolder}.;public static ServletUriComponentsBuilder fromCurrentRequest() {_		return fromRequest(getCurrentRequest())__	};same,as,link,from,request,http,servlet,request,except,the,request,is,obtained,through,link,request,context,holder;public,static,servlet,uri,components,builder,from,current,request,return,from,request,get,current,request
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromCurrentRequest();1423547594;Same as {@link #fromRequest(HttpServletRequest)} except the_request is obtained through {@link RequestContextHolder}.;public static ServletUriComponentsBuilder fromCurrentRequest() {_		return fromRequest(getCurrentRequest())__	};same,as,link,from,request,http,servlet,request,except,the,request,is,obtained,through,link,request,context,holder;public,static,servlet,uri,components,builder,from,current,request,return,from,request,get,current,request
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromCurrentRequest();1424272588;Same as {@link #fromRequest(HttpServletRequest)} except the_request is obtained through {@link RequestContextHolder}.;public static ServletUriComponentsBuilder fromCurrentRequest() {_		return fromRequest(getCurrentRequest())__	};same,as,link,from,request,http,servlet,request,except,the,request,is,obtained,through,link,request,context,holder;public,static,servlet,uri,components,builder,from,current,request,return,from,request,get,current,request
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromCurrentRequest();1426553101;Same as {@link #fromRequest(HttpServletRequest)} except the_request is obtained through {@link RequestContextHolder}.;public static ServletUriComponentsBuilder fromCurrentRequest() {_		return fromRequest(getCurrentRequest())__	};same,as,link,from,request,http,servlet,request,except,the,request,is,obtained,through,link,request,context,holder;public,static,servlet,uri,components,builder,from,current,request,return,from,request,get,current,request
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromCurrentRequest();1458830024;Same as {@link #fromRequest(HttpServletRequest)} except the_request is obtained through {@link RequestContextHolder}.;public static ServletUriComponentsBuilder fromCurrentRequest() {_		return fromRequest(getCurrentRequest())__	};same,as,link,from,request,http,servlet,request,except,the,request,is,obtained,through,link,request,context,holder;public,static,servlet,uri,components,builder,from,current,request,return,from,request,get,current,request
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromCurrentRequest();1466187642;Same as {@link #fromRequest(HttpServletRequest)} except the_request is obtained through {@link RequestContextHolder}.;public static ServletUriComponentsBuilder fromCurrentRequest() {_		return fromRequest(getCurrentRequest())__	};same,as,link,from,request,http,servlet,request,except,the,request,is,obtained,through,link,request,context,holder;public,static,servlet,uri,components,builder,from,current,request,return,from,request,get,current,request
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromCurrentRequest();1468963833;Same as {@link #fromRequest(HttpServletRequest)} except the_request is obtained through {@link RequestContextHolder}.;public static ServletUriComponentsBuilder fromCurrentRequest() {_		return fromRequest(getCurrentRequest())__	};same,as,link,from,request,http,servlet,request,except,the,request,is,obtained,through,link,request,context,holder;public,static,servlet,uri,components,builder,from,current,request,return,from,request,get,current,request
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromCurrentRequest();1485810955;Same as {@link #fromRequest(HttpServletRequest)} except the_request is obtained through {@link RequestContextHolder}.;public static ServletUriComponentsBuilder fromCurrentRequest() {_		return fromRequest(getCurrentRequest())__	};same,as,link,from,request,http,servlet,request,except,the,request,is,obtained,through,link,request,context,holder;public,static,servlet,uri,components,builder,from,current,request,return,from,request,get,current,request
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromCurrentRequest();1495868221;Same as {@link #fromRequest(HttpServletRequest)} except the_request is obtained through {@link RequestContextHolder}.;public static ServletUriComponentsBuilder fromCurrentRequest() {_		return fromRequest(getCurrentRequest())__	};same,as,link,from,request,http,servlet,request,except,the,request,is,obtained,through,link,request,context,holder;public,static,servlet,uri,components,builder,from,current,request,return,from,request,get,current,request
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromCurrentRequest();1496370972;Same as {@link #fromRequest(HttpServletRequest)} except the_request is obtained through {@link RequestContextHolder}.__<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs.;public static ServletUriComponentsBuilder fromCurrentRequest() {_		return fromRequest(getCurrentRequest())__	};same,as,link,from,request,http,servlet,request,except,the,request,is,obtained,through,link,request,context,holder,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs;public,static,servlet,uri,components,builder,from,current,request,return,from,request,get,current,request
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromCurrentRequest();1496837955;Same as {@link #fromRequest(HttpServletRequest)} except the_request is obtained through {@link RequestContextHolder}._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs.;public static ServletUriComponentsBuilder fromCurrentRequest() {_		return fromRequest(getCurrentRequest())__	};same,as,link,from,request,http,servlet,request,except,the,request,is,obtained,through,link,request,context,holder,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs;public,static,servlet,uri,components,builder,from,current,request,return,from,request,get,current,request
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromCurrentRequest();1498780456;Same as {@link #fromRequest(HttpServletRequest)} except the_request is obtained through {@link RequestContextHolder}._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs.;public static ServletUriComponentsBuilder fromCurrentRequest() {_		return fromRequest(getCurrentRequest())__	};same,as,link,from,request,http,servlet,request,except,the,request,is,obtained,through,link,request,context,holder,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs;public,static,servlet,uri,components,builder,from,current,request,return,from,request,get,current,request
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromCurrentRequest();1522354261;Same as {@link #fromRequest(HttpServletRequest)} except the_request is obtained through {@link RequestContextHolder}._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs.;public static ServletUriComponentsBuilder fromCurrentRequest() {_		return fromRequest(getCurrentRequest())__	};same,as,link,from,request,http,servlet,request,except,the,request,is,obtained,through,link,request,context,holder,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs;public,static,servlet,uri,components,builder,from,current,request,return,from,request,get,current,request
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromCurrentRequest();1522361849;Same as {@link #fromRequest(HttpServletRequest)} except the_request is obtained through {@link RequestContextHolder}.__<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs.__<p>As of 4.3.15, this method replaces the contextPath with the value_of "X-Forwarded-Prefix" rather than prepending, thus aligning with_{@code ForwardedHeaderFiller}.;public static ServletUriComponentsBuilder fromCurrentRequest() {_		return fromRequest(getCurrentRequest())__	};same,as,link,from,request,http,servlet,request,except,the,request,is,obtained,through,link,request,context,holder,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,p,as,of,4,3,15,this,method,replaces,the,context,path,with,the,value,of,x,forwarded,prefix,rather,than,prepending,thus,aligning,with,code,forwarded,header,filler;public,static,servlet,uri,components,builder,from,current,request,return,from,request,get,current,request
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromCurrentRequest();1526045499;Same as {@link #fromRequest(HttpServletRequest)} except the_request is obtained through {@link RequestContextHolder}.__<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs.__<p>As of 4.3.15, this method replaces the contextPath with the value_of "X-Forwarded-Prefix" rather than prepending, thus aligning with_{@code ForwardedHeaderFiller}.;public static ServletUriComponentsBuilder fromCurrentRequest() {_		return fromRequest(getCurrentRequest())__	};same,as,link,from,request,http,servlet,request,except,the,request,is,obtained,through,link,request,context,holder,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,p,as,of,4,3,15,this,method,replaces,the,context,path,with,the,value,of,x,forwarded,prefix,rather,than,prepending,thus,aligning,with,code,forwarded,header,filler;public,static,servlet,uri,components,builder,from,current,request,return,from,request,get,current,request
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromCurrentRequest();1536336006;Same as {@link #fromRequest(HttpServletRequest)} except the_request is obtained through {@link RequestContextHolder}.__<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs.__<p>As of 4.3.15, this method replaces the contextPath with the value_of "X-Forwarded-Prefix" rather than prepending, thus aligning with_{@code ForwardedHeaderFilter}.;public static ServletUriComponentsBuilder fromCurrentRequest() {_		return fromRequest(getCurrentRequest())__	};same,as,link,from,request,http,servlet,request,except,the,request,is,obtained,through,link,request,context,holder,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,p,as,of,4,3,15,this,method,replaces,the,context,path,with,the,value,of,x,forwarded,prefix,rather,than,prepending,thus,aligning,with,code,forwarded,header,filter;public,static,servlet,uri,components,builder,from,current,request,return,from,request,get,current,request
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromCurrentRequest();1536336678;Same as {@link #fromRequest(HttpServletRequest)} except the_request is obtained through {@link RequestContextHolder}._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._<p>As of 4.3.15, this method replaces the contextPath with the value_of "X-Forwarded-Prefix" rather than prepending, thus aligning with_{@code ForwardedHeaderFilter}.;public static ServletUriComponentsBuilder fromCurrentRequest() {_		return fromRequest(getCurrentRequest())__	};same,as,link,from,request,http,servlet,request,except,the,request,is,obtained,through,link,request,context,holder,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,p,as,of,4,3,15,this,method,replaces,the,context,path,with,the,value,of,x,forwarded,prefix,rather,than,prepending,thus,aligning,with,code,forwarded,header,filter;public,static,servlet,uri,components,builder,from,current,request,return,from,request,get,current,request
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromCurrentRequest();1539118301;Same as {@link #fromRequest(HttpServletRequest)} except the_request is obtained through {@link RequestContextHolder}.;public static ServletUriComponentsBuilder fromCurrentRequest() {_		return fromRequest(getCurrentRequest())__	};same,as,link,from,request,http,servlet,request,except,the,request,is,obtained,through,link,request,context,holder;public,static,servlet,uri,components,builder,from,current,request,return,from,request,get,current,request
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromRequestUri(HttpServletRequest request);1329142650;Prepare a builder from the host, port, scheme, and path of_an HttpSevletRequest.;public static ServletUriComponentsBuilder fromRequestUri(HttpServletRequest request) {_		ServletUriComponentsBuilder builder = fromRequest(request)__		builder.replacePath(request.getRequestURI())__		builder.replaceQuery(null)__		return builder__	};prepare,a,builder,from,the,host,port,scheme,and,path,of,an,http,sevlet,request;public,static,servlet,uri,components,builder,from,request,uri,http,servlet,request,request,servlet,uri,components,builder,builder,from,request,request,builder,replace,path,request,get,request,uri,builder,replace,query,null,return,builder
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromRequestUri(HttpServletRequest request);1362408075;Prepare a builder from the host, port, scheme, and path of_an HttpSevletRequest.;public static ServletUriComponentsBuilder fromRequestUri(HttpServletRequest request) {_		ServletUriComponentsBuilder builder = fromRequest(request)__		builder.replacePath(request.getRequestURI())__		builder.replaceQuery(null)__		return builder__	};prepare,a,builder,from,the,host,port,scheme,and,path,of,an,http,sevlet,request;public,static,servlet,uri,components,builder,from,request,uri,http,servlet,request,request,servlet,uri,components,builder,builder,from,request,request,builder,replace,path,request,get,request,uri,builder,replace,query,null,return,builder
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromRequestUri(HttpServletRequest request);1375199802;Prepare a builder from the host, port, scheme, and path of_an HttpSevletRequest.;public static ServletUriComponentsBuilder fromRequestUri(HttpServletRequest request) {_		ServletUriComponentsBuilder builder = fromRequest(request)__		builder.replacePath(request.getRequestURI())__		builder.replaceQuery(null)__		return builder__	};prepare,a,builder,from,the,host,port,scheme,and,path,of,an,http,sevlet,request;public,static,servlet,uri,components,builder,from,request,uri,http,servlet,request,request,servlet,uri,components,builder,builder,from,request,request,builder,replace,path,request,get,request,uri,builder,replace,query,null,return,builder
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromRequestUri(HttpServletRequest request);1377797966;Prepare a builder from the host, port, scheme, and path of_an HttpSevletRequest.;public static ServletUriComponentsBuilder fromRequestUri(HttpServletRequest request) {_		ServletUriComponentsBuilder builder = fromRequest(request)__		builder.pathFromRequest(request)__		builder.replaceQuery(null)__		return builder__	};prepare,a,builder,from,the,host,port,scheme,and,path,of,an,http,sevlet,request;public,static,servlet,uri,components,builder,from,request,uri,http,servlet,request,request,servlet,uri,components,builder,builder,from,request,request,builder,path,from,request,request,builder,replace,query,null,return,builder
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromRequestUri(HttpServletRequest request);1382387168;Prepare a builder from the host, port, scheme, and path of_an HttpSevletRequest.;public static ServletUriComponentsBuilder fromRequestUri(HttpServletRequest request) {_		ServletUriComponentsBuilder builder = fromRequest(request)__		builder.pathFromRequest(request)__		builder.replaceQuery(null)__		return builder__	};prepare,a,builder,from,the,host,port,scheme,and,path,of,an,http,sevlet,request;public,static,servlet,uri,components,builder,from,request,uri,http,servlet,request,request,servlet,uri,components,builder,builder,from,request,request,builder,path,from,request,request,builder,replace,query,null,return,builder
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromRequestUri(HttpServletRequest request);1385423968;Prepare a builder from the host, port, scheme, and path of_an HttpServletRequest.;public static ServletUriComponentsBuilder fromRequestUri(HttpServletRequest request) {_		ServletUriComponentsBuilder builder = fromRequest(request)__		builder.pathFromRequest(request)__		builder.replaceQuery(null)__		return builder__	};prepare,a,builder,from,the,host,port,scheme,and,path,of,an,http,servlet,request;public,static,servlet,uri,components,builder,from,request,uri,http,servlet,request,request,servlet,uri,components,builder,builder,from,request,request,builder,path,from,request,request,builder,replace,query,null,return,builder
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromRequestUri(HttpServletRequest request);1402540848;Prepare a builder from the host, port, scheme, and path of_an HttpServletRequest.;public static ServletUriComponentsBuilder fromRequestUri(HttpServletRequest request) {_		ServletUriComponentsBuilder builder = fromRequest(request)__		builder.pathFromRequest(request)__		builder.replaceQuery(null)__		return builder__	};prepare,a,builder,from,the,host,port,scheme,and,path,of,an,http,servlet,request;public,static,servlet,uri,components,builder,from,request,uri,http,servlet,request,request,servlet,uri,components,builder,builder,from,request,request,builder,path,from,request,request,builder,replace,query,null,return,builder
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromRequestUri(HttpServletRequest request);1405032917;Prepare a builder from the host, port, scheme, and path of_an HttpServletRequest.;public static ServletUriComponentsBuilder fromRequestUri(HttpServletRequest request) {_		ServletUriComponentsBuilder builder = fromRequest(request)__		builder.pathFromRequest(request)__		builder.replaceQuery(null)__		return builder__	};prepare,a,builder,from,the,host,port,scheme,and,path,of,an,http,servlet,request;public,static,servlet,uri,components,builder,from,request,uri,http,servlet,request,request,servlet,uri,components,builder,builder,from,request,request,builder,path,from,request,request,builder,replace,query,null,return,builder
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromRequestUri(HttpServletRequest request);1405084622;Prepare a builder from the host, port, scheme, and path of_an HttpServletRequest.;public static ServletUriComponentsBuilder fromRequestUri(HttpServletRequest request) {_		ServletUriComponentsBuilder builder = fromRequest(request)__		builder.pathFromRequest(request)__		builder.replaceQuery(null)__		return builder__	};prepare,a,builder,from,the,host,port,scheme,and,path,of,an,http,servlet,request;public,static,servlet,uri,components,builder,from,request,uri,http,servlet,request,request,servlet,uri,components,builder,builder,from,request,request,builder,path,from,request,request,builder,replace,query,null,return,builder
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromRequestUri(HttpServletRequest request);1417632385;Prepare a builder from the host, port, scheme, and path of_an HttpServletRequest.;public static ServletUriComponentsBuilder fromRequestUri(HttpServletRequest request) {_		ServletUriComponentsBuilder builder = fromRequest(request)__		builder.replaceQuery(null)__		return builder__	};prepare,a,builder,from,the,host,port,scheme,and,path,of,an,http,servlet,request;public,static,servlet,uri,components,builder,from,request,uri,http,servlet,request,request,servlet,uri,components,builder,builder,from,request,request,builder,replace,query,null,return,builder
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromRequestUri(HttpServletRequest request);1417706155;Prepare a builder from the host, port, scheme, and path of_an HttpServletRequest.;public static ServletUriComponentsBuilder fromRequestUri(HttpServletRequest request) {_		ServletUriComponentsBuilder builder = fromRequest(request)__		builder.replaceQuery(null)__		return builder__	};prepare,a,builder,from,the,host,port,scheme,and,path,of,an,http,servlet,request;public,static,servlet,uri,components,builder,from,request,uri,http,servlet,request,request,servlet,uri,components,builder,builder,from,request,request,builder,replace,query,null,return,builder
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromRequestUri(HttpServletRequest request);1417707014;Prepare a builder from the host, port, scheme, and path (but not the query)_of the HttpServletRequest.;public static ServletUriComponentsBuilder fromRequestUri(HttpServletRequest request) {_		ServletUriComponentsBuilder builder = initFromRequest(request)__		builder.initPath(prependForwardedPrefix(request, request.getRequestURI()))__		return builder__	};prepare,a,builder,from,the,host,port,scheme,and,path,but,not,the,query,of,the,http,servlet,request;public,static,servlet,uri,components,builder,from,request,uri,http,servlet,request,request,servlet,uri,components,builder,builder,init,from,request,request,builder,init,path,prepend,forwarded,prefix,request,request,get,request,uri,return,builder
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromRequestUri(HttpServletRequest request);1417799775;Prepare a builder from the host, port, scheme, and path (but not the query)_of the HttpServletRequest.;public static ServletUriComponentsBuilder fromRequestUri(HttpServletRequest request) {_		ServletUriComponentsBuilder builder = initFromRequest(request)__		builder.initPath(prependForwardedPrefix(request, request.getRequestURI()))__		return builder__	};prepare,a,builder,from,the,host,port,scheme,and,path,but,not,the,query,of,the,http,servlet,request;public,static,servlet,uri,components,builder,from,request,uri,http,servlet,request,request,servlet,uri,components,builder,builder,init,from,request,request,builder,init,path,prepend,forwarded,prefix,request,request,get,request,uri,return,builder
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromRequestUri(HttpServletRequest request);1422572109;Prepare a builder from the host, port, scheme, and path (but not the query)_of the HttpServletRequest.;public static ServletUriComponentsBuilder fromRequestUri(HttpServletRequest request) {_		ServletUriComponentsBuilder builder = initFromRequest(request)__		builder.initPath(prependForwardedPrefix(request, request.getRequestURI()))__		return builder__	};prepare,a,builder,from,the,host,port,scheme,and,path,but,not,the,query,of,the,http,servlet,request;public,static,servlet,uri,components,builder,from,request,uri,http,servlet,request,request,servlet,uri,components,builder,builder,init,from,request,request,builder,init,path,prepend,forwarded,prefix,request,request,get,request,uri,return,builder
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromRequestUri(HttpServletRequest request);1423547594;Prepare a builder from the host, port, scheme, and path (but not the query)_of the HttpServletRequest.;public static ServletUriComponentsBuilder fromRequestUri(HttpServletRequest request) {_		ServletUriComponentsBuilder builder = initFromRequest(request)__		builder.initPath(prependForwardedPrefix(request, request.getRequestURI()))__		return builder__	};prepare,a,builder,from,the,host,port,scheme,and,path,but,not,the,query,of,the,http,servlet,request;public,static,servlet,uri,components,builder,from,request,uri,http,servlet,request,request,servlet,uri,components,builder,builder,init,from,request,request,builder,init,path,prepend,forwarded,prefix,request,request,get,request,uri,return,builder
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromRequestUri(HttpServletRequest request);1424272588;Prepare a builder from the host, port, scheme, and path (but not the query)_of the HttpServletRequest.;public static ServletUriComponentsBuilder fromRequestUri(HttpServletRequest request) {_		ServletUriComponentsBuilder builder = initFromRequest(request)__		builder.initPath(prependForwardedPrefix(request, request.getRequestURI()))__		return builder__	};prepare,a,builder,from,the,host,port,scheme,and,path,but,not,the,query,of,the,http,servlet,request;public,static,servlet,uri,components,builder,from,request,uri,http,servlet,request,request,servlet,uri,components,builder,builder,init,from,request,request,builder,init,path,prepend,forwarded,prefix,request,request,get,request,uri,return,builder
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromRequestUri(HttpServletRequest request);1426553101;Prepare a builder from the host, port, scheme, and path (but not the query)_of the HttpServletRequest.;public static ServletUriComponentsBuilder fromRequestUri(HttpServletRequest request) {_		ServletUriComponentsBuilder builder = initFromRequest(request)__		builder.initPath(prependForwardedPrefix(request, request.getRequestURI()))__		return builder__	};prepare,a,builder,from,the,host,port,scheme,and,path,but,not,the,query,of,the,http,servlet,request;public,static,servlet,uri,components,builder,from,request,uri,http,servlet,request,request,servlet,uri,components,builder,builder,init,from,request,request,builder,init,path,prepend,forwarded,prefix,request,request,get,request,uri,return,builder
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromRequestUri(HttpServletRequest request);1458830024;Prepare a builder from the host, port, scheme, and path (but not the query)_of the HttpServletRequest.;public static ServletUriComponentsBuilder fromRequestUri(HttpServletRequest request) {_		ServletUriComponentsBuilder builder = initFromRequest(request)__		builder.initPath(prependForwardedPrefix(request, request.getRequestURI()))__		return builder__	};prepare,a,builder,from,the,host,port,scheme,and,path,but,not,the,query,of,the,http,servlet,request;public,static,servlet,uri,components,builder,from,request,uri,http,servlet,request,request,servlet,uri,components,builder,builder,init,from,request,request,builder,init,path,prepend,forwarded,prefix,request,request,get,request,uri,return,builder
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromRequestUri(HttpServletRequest request);1466187642;Prepare a builder from the host, port, scheme, and path (but not the query)_of the HttpServletRequest.;public static ServletUriComponentsBuilder fromRequestUri(HttpServletRequest request) {_		ServletUriComponentsBuilder builder = initFromRequest(request)__		builder.initPath(prependForwardedPrefix(request, request.getRequestURI()))__		return builder__	};prepare,a,builder,from,the,host,port,scheme,and,path,but,not,the,query,of,the,http,servlet,request;public,static,servlet,uri,components,builder,from,request,uri,http,servlet,request,request,servlet,uri,components,builder,builder,init,from,request,request,builder,init,path,prepend,forwarded,prefix,request,request,get,request,uri,return,builder
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromRequestUri(HttpServletRequest request);1468963833;Prepare a builder from the host, port, scheme, and path (but not the query)_of the HttpServletRequest.;public static ServletUriComponentsBuilder fromRequestUri(HttpServletRequest request) {_		ServletUriComponentsBuilder builder = initFromRequest(request)__		builder.initPath(prependForwardedPrefix(request, request.getRequestURI()))__		return builder__	};prepare,a,builder,from,the,host,port,scheme,and,path,but,not,the,query,of,the,http,servlet,request;public,static,servlet,uri,components,builder,from,request,uri,http,servlet,request,request,servlet,uri,components,builder,builder,init,from,request,request,builder,init,path,prepend,forwarded,prefix,request,request,get,request,uri,return,builder
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromRequestUri(HttpServletRequest request);1485810955;Prepare a builder from the host, port, scheme, and path (but not the query)_of the HttpServletRequest.;public static ServletUriComponentsBuilder fromRequestUri(HttpServletRequest request) {_		ServletUriComponentsBuilder builder = initFromRequest(request)__		builder.initPath(prependForwardedPrefix(request, request.getRequestURI()))__		return builder__	};prepare,a,builder,from,the,host,port,scheme,and,path,but,not,the,query,of,the,http,servlet,request;public,static,servlet,uri,components,builder,from,request,uri,http,servlet,request,request,servlet,uri,components,builder,builder,init,from,request,request,builder,init,path,prepend,forwarded,prefix,request,request,get,request,uri,return,builder
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromRequestUri(HttpServletRequest request);1495868221;Prepare a builder from the host, port, scheme, and path (but not the query)_of the HttpServletRequest.;public static ServletUriComponentsBuilder fromRequestUri(HttpServletRequest request) {_		ServletUriComponentsBuilder builder = initFromRequest(request)__		builder.initPath(prependForwardedPrefix(request, request.getRequestURI()))__		return builder__	};prepare,a,builder,from,the,host,port,scheme,and,path,but,not,the,query,of,the,http,servlet,request;public,static,servlet,uri,components,builder,from,request,uri,http,servlet,request,request,servlet,uri,components,builder,builder,init,from,request,request,builder,init,path,prepend,forwarded,prefix,request,request,get,request,uri,return,builder
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromRequestUri(HttpServletRequest request);1496370972;Prepare a builder from the host, port, scheme, and path (but not the query)_of the HttpServletRequest.__<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs.;public static ServletUriComponentsBuilder fromRequestUri(HttpServletRequest request) {_		ServletUriComponentsBuilder builder = initFromRequest(request)__		builder.initPath(prependForwardedPrefix(request, request.getRequestURI()))__		return builder__	};prepare,a,builder,from,the,host,port,scheme,and,path,but,not,the,query,of,the,http,servlet,request,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs;public,static,servlet,uri,components,builder,from,request,uri,http,servlet,request,request,servlet,uri,components,builder,builder,init,from,request,request,builder,init,path,prepend,forwarded,prefix,request,request,get,request,uri,return,builder
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromRequestUri(HttpServletRequest request);1496837955;Prepare a builder from the host, port, scheme, and path (but not the query)_of the HttpServletRequest._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs.;public static ServletUriComponentsBuilder fromRequestUri(HttpServletRequest request) {_		ServletUriComponentsBuilder builder = initFromRequest(request)__		builder.initPath(prependForwardedPrefix(request, request.getRequestURI()))__		return builder__	};prepare,a,builder,from,the,host,port,scheme,and,path,but,not,the,query,of,the,http,servlet,request,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs;public,static,servlet,uri,components,builder,from,request,uri,http,servlet,request,request,servlet,uri,components,builder,builder,init,from,request,request,builder,init,path,prepend,forwarded,prefix,request,request,get,request,uri,return,builder
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromRequestUri(HttpServletRequest request);1498780456;Prepare a builder from the host, port, scheme, and path (but not the query)_of the HttpServletRequest._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs.;public static ServletUriComponentsBuilder fromRequestUri(HttpServletRequest request) {_		ServletUriComponentsBuilder builder = initFromRequest(request)__		builder.initPath(prependForwardedPrefix(request, request.getRequestURI()))__		return builder__	};prepare,a,builder,from,the,host,port,scheme,and,path,but,not,the,query,of,the,http,servlet,request,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs;public,static,servlet,uri,components,builder,from,request,uri,http,servlet,request,request,servlet,uri,components,builder,builder,init,from,request,request,builder,init,path,prepend,forwarded,prefix,request,request,get,request,uri,return,builder
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromRequestUri(HttpServletRequest request);1522354261;Prepare a builder from the host, port, scheme, and path (but not the query)_of the HttpServletRequest._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs.;public static ServletUriComponentsBuilder fromRequestUri(HttpServletRequest request) {_		ServletUriComponentsBuilder builder = initFromRequest(request)__		builder.initPath(prependForwardedPrefix(request, request.getRequestURI()))__		return builder__	};prepare,a,builder,from,the,host,port,scheme,and,path,but,not,the,query,of,the,http,servlet,request,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs;public,static,servlet,uri,components,builder,from,request,uri,http,servlet,request,request,servlet,uri,components,builder,builder,init,from,request,request,builder,init,path,prepend,forwarded,prefix,request,request,get,request,uri,return,builder
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromRequestUri(HttpServletRequest request);1522361849;Prepare a builder from the host, port, scheme, and path (but not the query)_of the HttpServletRequest.__<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs.__<p>As of 4.3.15, this method replaces the contextPath with the value_of "X-Forwarded-Prefix" rather than prepending, thus aligning with_{@code ForwardedHeaderFiller}.;public static ServletUriComponentsBuilder fromRequestUri(HttpServletRequest request) {_		ServletUriComponentsBuilder builder = initFromRequest(request)__		builder.initPath(getRequestUriWithForwardedPrefix(request))__		return builder__	};prepare,a,builder,from,the,host,port,scheme,and,path,but,not,the,query,of,the,http,servlet,request,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,p,as,of,4,3,15,this,method,replaces,the,context,path,with,the,value,of,x,forwarded,prefix,rather,than,prepending,thus,aligning,with,code,forwarded,header,filler;public,static,servlet,uri,components,builder,from,request,uri,http,servlet,request,request,servlet,uri,components,builder,builder,init,from,request,request,builder,init,path,get,request,uri,with,forwarded,prefix,request,return,builder
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromRequestUri(HttpServletRequest request);1526045499;Prepare a builder from the host, port, scheme, and path (but not the query)_of the HttpServletRequest.__<p><strong>Note:</strong> as of 5.1 this method ignores_{@code "Forwarded"} and {@code "X-Forwarded-*"} headers that specify the_client-originated address. Consider using the {@code ForwardedHeaderFilter}_to extract and use, or to discard such headers.;public static ServletUriComponentsBuilder fromRequestUri(HttpServletRequest request) {_		ServletUriComponentsBuilder builder = initFromRequest(request)__		builder.initPath(request.getRequestURI())__		return builder__	};prepare,a,builder,from,the,host,port,scheme,and,path,but,not,the,query,of,the,http,servlet,request,p,strong,note,strong,as,of,5,1,this,method,ignores,code,forwarded,and,code,x,forwarded,headers,that,specify,the,client,originated,address,consider,using,the,code,forwarded,header,filter,to,extract,and,use,or,to,discard,such,headers;public,static,servlet,uri,components,builder,from,request,uri,http,servlet,request,request,servlet,uri,components,builder,builder,init,from,request,request,builder,init,path,request,get,request,uri,return,builder
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromRequestUri(HttpServletRequest request);1536336006;Prepare a builder from the host, port, scheme, and path (but not the query)_of the HttpServletRequest.__<p><strong>Note:</strong> as of 5.1 this method ignores_{@code "Forwarded"} and {@code "X-Forwarded-*"} headers that specify the_client-originated address. Consider using the {@code ForwardedHeaderFilter}_to extract and use, or to discard such headers.;public static ServletUriComponentsBuilder fromRequestUri(HttpServletRequest request) {_		ServletUriComponentsBuilder builder = initFromRequest(request)__		builder.initPath(request.getRequestURI())__		return builder__	};prepare,a,builder,from,the,host,port,scheme,and,path,but,not,the,query,of,the,http,servlet,request,p,strong,note,strong,as,of,5,1,this,method,ignores,code,forwarded,and,code,x,forwarded,headers,that,specify,the,client,originated,address,consider,using,the,code,forwarded,header,filter,to,extract,and,use,or,to,discard,such,headers;public,static,servlet,uri,components,builder,from,request,uri,http,servlet,request,request,servlet,uri,components,builder,builder,init,from,request,request,builder,init,path,request,get,request,uri,return,builder
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromRequestUri(HttpServletRequest request);1536336678;Prepare a builder from the host, port, scheme, and path (but not the query)_of the HttpServletRequest._<p><strong>Note:</strong> As of 5.1, this method ignores_{@code "Forwarded"} and {@code "X-Forwarded-*"} headers that specify the_client-originated address. Consider using the {@code ForwardedHeaderFilter}_to extract and use, or to discard such headers.;public static ServletUriComponentsBuilder fromRequestUri(HttpServletRequest request) {_		ServletUriComponentsBuilder builder = initFromRequest(request)__		builder.initPath(request.getRequestURI())__		return builder__	};prepare,a,builder,from,the,host,port,scheme,and,path,but,not,the,query,of,the,http,servlet,request,p,strong,note,strong,as,of,5,1,this,method,ignores,code,forwarded,and,code,x,forwarded,headers,that,specify,the,client,originated,address,consider,using,the,code,forwarded,header,filter,to,extract,and,use,or,to,discard,such,headers;public,static,servlet,uri,components,builder,from,request,uri,http,servlet,request,request,servlet,uri,components,builder,builder,init,from,request,request,builder,init,path,request,get,request,uri,return,builder
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromRequestUri(HttpServletRequest request);1539118301;Prepare a builder from the host, port, scheme, and path (but not the query)_of the HttpServletRequest.;public static ServletUriComponentsBuilder fromRequestUri(HttpServletRequest request) {_		ServletUriComponentsBuilder builder = initFromRequest(request)__		builder.initPath(request.getRequestURI())__		return builder__	};prepare,a,builder,from,the,host,port,scheme,and,path,but,not,the,query,of,the,http,servlet,request;public,static,servlet,uri,components,builder,from,request,uri,http,servlet,request,request,servlet,uri,components,builder,builder,init,from,request,request,builder,init,path,request,get,request,uri,return,builder
ServletUriComponentsBuilder -> protected ServletUriComponentsBuilder(ServletUriComponentsBuilder other);1417799775;Create a deep copy of the given ServletUriComponentsBuilder._@param other the other builder to copy from;protected ServletUriComponentsBuilder(ServletUriComponentsBuilder other) {_		super(other)__		this.originalPath = other.originalPath__	};create,a,deep,copy,of,the,given,servlet,uri,components,builder,param,other,the,other,builder,to,copy,from;protected,servlet,uri,components,builder,servlet,uri,components,builder,other,super,other,this,original,path,other,original,path
ServletUriComponentsBuilder -> protected ServletUriComponentsBuilder(ServletUriComponentsBuilder other);1422572109;Create a deep copy of the given ServletUriComponentsBuilder._@param other the other builder to copy from;protected ServletUriComponentsBuilder(ServletUriComponentsBuilder other) {_		super(other)__		this.originalPath = other.originalPath__	};create,a,deep,copy,of,the,given,servlet,uri,components,builder,param,other,the,other,builder,to,copy,from;protected,servlet,uri,components,builder,servlet,uri,components,builder,other,super,other,this,original,path,other,original,path
ServletUriComponentsBuilder -> protected ServletUriComponentsBuilder(ServletUriComponentsBuilder other);1423547594;Create a deep copy of the given ServletUriComponentsBuilder._@param other the other builder to copy from;protected ServletUriComponentsBuilder(ServletUriComponentsBuilder other) {_		super(other)__		this.originalPath = other.originalPath__	};create,a,deep,copy,of,the,given,servlet,uri,components,builder,param,other,the,other,builder,to,copy,from;protected,servlet,uri,components,builder,servlet,uri,components,builder,other,super,other,this,original,path,other,original,path
ServletUriComponentsBuilder -> protected ServletUriComponentsBuilder(ServletUriComponentsBuilder other);1424272588;Create a deep copy of the given ServletUriComponentsBuilder._@param other the other builder to copy from;protected ServletUriComponentsBuilder(ServletUriComponentsBuilder other) {_		super(other)__		this.originalPath = other.originalPath__	};create,a,deep,copy,of,the,given,servlet,uri,components,builder,param,other,the,other,builder,to,copy,from;protected,servlet,uri,components,builder,servlet,uri,components,builder,other,super,other,this,original,path,other,original,path
ServletUriComponentsBuilder -> protected ServletUriComponentsBuilder(ServletUriComponentsBuilder other);1426553101;Create a deep copy of the given ServletUriComponentsBuilder._@param other the other builder to copy from;protected ServletUriComponentsBuilder(ServletUriComponentsBuilder other) {_		super(other)__		this.originalPath = other.originalPath__	};create,a,deep,copy,of,the,given,servlet,uri,components,builder,param,other,the,other,builder,to,copy,from;protected,servlet,uri,components,builder,servlet,uri,components,builder,other,super,other,this,original,path,other,original,path
ServletUriComponentsBuilder -> protected ServletUriComponentsBuilder(ServletUriComponentsBuilder other);1458830024;Create a deep copy of the given ServletUriComponentsBuilder._@param other the other builder to copy from;protected ServletUriComponentsBuilder(ServletUriComponentsBuilder other) {_		super(other)__		this.originalPath = other.originalPath__	};create,a,deep,copy,of,the,given,servlet,uri,components,builder,param,other,the,other,builder,to,copy,from;protected,servlet,uri,components,builder,servlet,uri,components,builder,other,super,other,this,original,path,other,original,path
ServletUriComponentsBuilder -> protected ServletUriComponentsBuilder(ServletUriComponentsBuilder other);1466187642;Create a deep copy of the given ServletUriComponentsBuilder._@param other the other builder to copy from;protected ServletUriComponentsBuilder(ServletUriComponentsBuilder other) {_		super(other)__		this.originalPath = other.originalPath__	};create,a,deep,copy,of,the,given,servlet,uri,components,builder,param,other,the,other,builder,to,copy,from;protected,servlet,uri,components,builder,servlet,uri,components,builder,other,super,other,this,original,path,other,original,path
ServletUriComponentsBuilder -> protected ServletUriComponentsBuilder(ServletUriComponentsBuilder other);1468963833;Create a deep copy of the given ServletUriComponentsBuilder._@param other the other builder to copy from;protected ServletUriComponentsBuilder(ServletUriComponentsBuilder other) {_		super(other)__		this.originalPath = other.originalPath__	};create,a,deep,copy,of,the,given,servlet,uri,components,builder,param,other,the,other,builder,to,copy,from;protected,servlet,uri,components,builder,servlet,uri,components,builder,other,super,other,this,original,path,other,original,path
ServletUriComponentsBuilder -> protected ServletUriComponentsBuilder(ServletUriComponentsBuilder other);1485810955;Create a deep copy of the given ServletUriComponentsBuilder._@param other the other builder to copy from;protected ServletUriComponentsBuilder(ServletUriComponentsBuilder other) {_		super(other)__		this.originalPath = other.originalPath__	};create,a,deep,copy,of,the,given,servlet,uri,components,builder,param,other,the,other,builder,to,copy,from;protected,servlet,uri,components,builder,servlet,uri,components,builder,other,super,other,this,original,path,other,original,path
ServletUriComponentsBuilder -> protected ServletUriComponentsBuilder(ServletUriComponentsBuilder other);1495868221;Create a deep copy of the given ServletUriComponentsBuilder._@param other the other builder to copy from;protected ServletUriComponentsBuilder(ServletUriComponentsBuilder other) {_		super(other)__		this.originalPath = other.originalPath__	};create,a,deep,copy,of,the,given,servlet,uri,components,builder,param,other,the,other,builder,to,copy,from;protected,servlet,uri,components,builder,servlet,uri,components,builder,other,super,other,this,original,path,other,original,path
ServletUriComponentsBuilder -> protected ServletUriComponentsBuilder(ServletUriComponentsBuilder other);1496370972;Create a deep copy of the given ServletUriComponentsBuilder._@param other the other builder to copy from;protected ServletUriComponentsBuilder(ServletUriComponentsBuilder other) {_		super(other)__		this.originalPath = other.originalPath__	};create,a,deep,copy,of,the,given,servlet,uri,components,builder,param,other,the,other,builder,to,copy,from;protected,servlet,uri,components,builder,servlet,uri,components,builder,other,super,other,this,original,path,other,original,path
ServletUriComponentsBuilder -> protected ServletUriComponentsBuilder(ServletUriComponentsBuilder other);1496837955;Create a deep copy of the given ServletUriComponentsBuilder._@param other the other builder to copy from;protected ServletUriComponentsBuilder(ServletUriComponentsBuilder other) {_		super(other)__		this.originalPath = other.originalPath__	};create,a,deep,copy,of,the,given,servlet,uri,components,builder,param,other,the,other,builder,to,copy,from;protected,servlet,uri,components,builder,servlet,uri,components,builder,other,super,other,this,original,path,other,original,path
ServletUriComponentsBuilder -> protected ServletUriComponentsBuilder(ServletUriComponentsBuilder other);1498780456;Create a deep copy of the given ServletUriComponentsBuilder._@param other the other builder to copy from;protected ServletUriComponentsBuilder(ServletUriComponentsBuilder other) {_		super(other)__		this.originalPath = other.originalPath__	};create,a,deep,copy,of,the,given,servlet,uri,components,builder,param,other,the,other,builder,to,copy,from;protected,servlet,uri,components,builder,servlet,uri,components,builder,other,super,other,this,original,path,other,original,path
ServletUriComponentsBuilder -> protected ServletUriComponentsBuilder(ServletUriComponentsBuilder other);1522354261;Create a deep copy of the given ServletUriComponentsBuilder._@param other the other builder to copy from;protected ServletUriComponentsBuilder(ServletUriComponentsBuilder other) {_		super(other)__		this.originalPath = other.originalPath__	};create,a,deep,copy,of,the,given,servlet,uri,components,builder,param,other,the,other,builder,to,copy,from;protected,servlet,uri,components,builder,servlet,uri,components,builder,other,super,other,this,original,path,other,original,path
ServletUriComponentsBuilder -> protected ServletUriComponentsBuilder(ServletUriComponentsBuilder other);1522361849;Create a deep copy of the given ServletUriComponentsBuilder._@param other the other builder to copy from;protected ServletUriComponentsBuilder(ServletUriComponentsBuilder other) {_		super(other)__		this.originalPath = other.originalPath__	};create,a,deep,copy,of,the,given,servlet,uri,components,builder,param,other,the,other,builder,to,copy,from;protected,servlet,uri,components,builder,servlet,uri,components,builder,other,super,other,this,original,path,other,original,path
ServletUriComponentsBuilder -> protected ServletUriComponentsBuilder(ServletUriComponentsBuilder other);1526045499;Create a deep copy of the given ServletUriComponentsBuilder._@param other the other builder to copy from;protected ServletUriComponentsBuilder(ServletUriComponentsBuilder other) {_		super(other)__		this.originalPath = other.originalPath__	};create,a,deep,copy,of,the,given,servlet,uri,components,builder,param,other,the,other,builder,to,copy,from;protected,servlet,uri,components,builder,servlet,uri,components,builder,other,super,other,this,original,path,other,original,path
ServletUriComponentsBuilder -> protected ServletUriComponentsBuilder(ServletUriComponentsBuilder other);1536336006;Create a deep copy of the given ServletUriComponentsBuilder._@param other the other builder to copy from;protected ServletUriComponentsBuilder(ServletUriComponentsBuilder other) {_		super(other)__		this.originalPath = other.originalPath__	};create,a,deep,copy,of,the,given,servlet,uri,components,builder,param,other,the,other,builder,to,copy,from;protected,servlet,uri,components,builder,servlet,uri,components,builder,other,super,other,this,original,path,other,original,path
ServletUriComponentsBuilder -> protected ServletUriComponentsBuilder(ServletUriComponentsBuilder other);1536336678;Create a deep copy of the given ServletUriComponentsBuilder._@param other the other builder to copy from;protected ServletUriComponentsBuilder(ServletUriComponentsBuilder other) {_		super(other)__		this.originalPath = other.originalPath__	};create,a,deep,copy,of,the,given,servlet,uri,components,builder,param,other,the,other,builder,to,copy,from;protected,servlet,uri,components,builder,servlet,uri,components,builder,other,super,other,this,original,path,other,original,path
ServletUriComponentsBuilder -> protected ServletUriComponentsBuilder(ServletUriComponentsBuilder other);1539118301;Create a deep copy of the given ServletUriComponentsBuilder._@param other the other builder to copy from;protected ServletUriComponentsBuilder(ServletUriComponentsBuilder other) {_		super(other)__		this.originalPath = other.originalPath__	};create,a,deep,copy,of,the,given,servlet,uri,components,builder,param,other,the,other,builder,to,copy,from;protected,servlet,uri,components,builder,servlet,uri,components,builder,other,super,other,this,original,path,other,original,path
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromRequest(HttpServletRequest request);1328020251;Return a builder initialized with all available information in the given_request including scheme, host, port, path, and query string.;public static ServletUriComponentsBuilder fromRequest(HttpServletRequest request) {_		String scheme = request.getScheme()__		int port = request.getServerPort()___		ServletUriComponentsBuilder builder = new ServletUriComponentsBuilder()__		builder.scheme(scheme)__		builder.host(request.getServerName())__		if ((scheme.equals("http") && port != 80) || (scheme.equals("https") && port != 443)) {_			builder.port(port)__		}_		builder.path(new UrlPathHelper().getRequestUri(request))__		builder.query(request.getQueryString())__		return builder__	};return,a,builder,initialized,with,all,available,information,in,the,given,request,including,scheme,host,port,path,and,query,string;public,static,servlet,uri,components,builder,from,request,http,servlet,request,request,string,scheme,request,get,scheme,int,port,request,get,server,port,servlet,uri,components,builder,builder,new,servlet,uri,components,builder,builder,scheme,scheme,builder,host,request,get,server,name,if,scheme,equals,http,port,80,scheme,equals,https,port,443,builder,port,port,builder,path,new,url,path,helper,get,request,uri,request,builder,query,request,get,query,string,return,builder
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromRequest(HttpServletRequest request);1329142650;Prepare a builder by copying the scheme, host, port, path, and_query string of an HttpServletRequest.;public static ServletUriComponentsBuilder fromRequest(HttpServletRequest request) {_		String scheme = request.getScheme()__		int port = request.getServerPort()___		ServletUriComponentsBuilder builder = new ServletUriComponentsBuilder()__		builder.scheme(scheme)__		builder.host(request.getServerName())__		if ((scheme.equals("http") && port != 80) || (scheme.equals("https") && port != 443)) {_			builder.port(port)__		}_		builder.path(request.getRequestURI())__		builder.query(request.getQueryString())__		return builder__	};prepare,a,builder,by,copying,the,scheme,host,port,path,and,query,string,of,an,http,servlet,request;public,static,servlet,uri,components,builder,from,request,http,servlet,request,request,string,scheme,request,get,scheme,int,port,request,get,server,port,servlet,uri,components,builder,builder,new,servlet,uri,components,builder,builder,scheme,scheme,builder,host,request,get,server,name,if,scheme,equals,http,port,80,scheme,equals,https,port,443,builder,port,port,builder,path,request,get,request,uri,builder,query,request,get,query,string,return,builder
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromRequest(HttpServletRequest request);1362408075;Prepare a builder by copying the scheme, host, port, path, and_query string of an HttpServletRequest.;public static ServletUriComponentsBuilder fromRequest(HttpServletRequest request) {_		String scheme = request.getScheme()__		int port = request.getServerPort()___		String header = request.getHeader("X-Forwarded-Host")__		String host = StringUtils.hasText(header) ? header: request.getServerName()___		ServletUriComponentsBuilder builder = new ServletUriComponentsBuilder()__		builder.scheme(scheme)__		builder.host(host)__		if ((scheme.equals("http") && port != 80) || (scheme.equals("https") && port != 443)) {_			builder.port(port)__		}_		builder.path(request.getRequestURI())__		builder.query(request.getQueryString())__		return builder__	};prepare,a,builder,by,copying,the,scheme,host,port,path,and,query,string,of,an,http,servlet,request;public,static,servlet,uri,components,builder,from,request,http,servlet,request,request,string,scheme,request,get,scheme,int,port,request,get,server,port,string,header,request,get,header,x,forwarded,host,string,host,string,utils,has,text,header,header,request,get,server,name,servlet,uri,components,builder,builder,new,servlet,uri,components,builder,builder,scheme,scheme,builder,host,host,if,scheme,equals,http,port,80,scheme,equals,https,port,443,builder,port,port,builder,path,request,get,request,uri,builder,query,request,get,query,string,return,builder
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromRequest(HttpServletRequest request);1375199802;Prepare a builder by copying the scheme, host, port, path, and_query string of an HttpServletRequest.;public static ServletUriComponentsBuilder fromRequest(HttpServletRequest request) {_		String scheme = request.getScheme()__		int port = request.getServerPort()__		String host = request.getServerName()___		String xForwardedHostHeader = request.getHeader("X-Forwarded-Host")___		if (StringUtils.hasText(xForwardedHostHeader)) {_			if (StringUtils.countOccurrencesOf(xForwardedHostHeader, ":") == 1) {_				String[] hostAndPort = StringUtils.split(xForwardedHostHeader, ":")__				host  = hostAndPort[0]__				port = Integer.parseInt(hostAndPort[1])__			}_			else {_				host = xForwardedHostHeader__			}_		}__		ServletUriComponentsBuilder builder = new ServletUriComponentsBuilder()__		builder.scheme(scheme)__		builder.host(host)__		if ((scheme.equals("http") && port != 80) || (scheme.equals("https") && port != 443)) {_			builder.port(port)__		}_		builder.path(request.getRequestURI())__		builder.query(request.getQueryString())__		return builder__	};prepare,a,builder,by,copying,the,scheme,host,port,path,and,query,string,of,an,http,servlet,request;public,static,servlet,uri,components,builder,from,request,http,servlet,request,request,string,scheme,request,get,scheme,int,port,request,get,server,port,string,host,request,get,server,name,string,x,forwarded,host,header,request,get,header,x,forwarded,host,if,string,utils,has,text,x,forwarded,host,header,if,string,utils,count,occurrences,of,x,forwarded,host,header,1,string,host,and,port,string,utils,split,x,forwarded,host,header,host,host,and,port,0,port,integer,parse,int,host,and,port,1,else,host,x,forwarded,host,header,servlet,uri,components,builder,builder,new,servlet,uri,components,builder,builder,scheme,scheme,builder,host,host,if,scheme,equals,http,port,80,scheme,equals,https,port,443,builder,port,port,builder,path,request,get,request,uri,builder,query,request,get,query,string,return,builder
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromRequest(HttpServletRequest request);1377797966;Prepare a builder by copying the scheme, host, port, path, and_query string of an HttpServletRequest.;public static ServletUriComponentsBuilder fromRequest(HttpServletRequest request) {_		String scheme = request.getScheme()__		int port = request.getServerPort()__		String host = request.getServerName()___		String xForwardedHostHeader = request.getHeader("X-Forwarded-Host")___		if (StringUtils.hasText(xForwardedHostHeader)) {_			if (StringUtils.countOccurrencesOf(xForwardedHostHeader, ":") == 1) {_				String[] hostAndPort = StringUtils.split(xForwardedHostHeader, ":")__				host  = hostAndPort[0]__				port = Integer.parseInt(hostAndPort[1])__			}_			else {_				host = xForwardedHostHeader__			}_		}__		ServletUriComponentsBuilder builder = new ServletUriComponentsBuilder()__		builder.scheme(scheme)__		builder.host(host)__		if ((scheme.equals("http") && port != 80) || (scheme.equals("https") && port != 443)) {_			builder.port(port)__		}_		builder.pathFromRequest(request)__		builder.query(request.getQueryString())__		return builder__	};prepare,a,builder,by,copying,the,scheme,host,port,path,and,query,string,of,an,http,servlet,request;public,static,servlet,uri,components,builder,from,request,http,servlet,request,request,string,scheme,request,get,scheme,int,port,request,get,server,port,string,host,request,get,server,name,string,x,forwarded,host,header,request,get,header,x,forwarded,host,if,string,utils,has,text,x,forwarded,host,header,if,string,utils,count,occurrences,of,x,forwarded,host,header,1,string,host,and,port,string,utils,split,x,forwarded,host,header,host,host,and,port,0,port,integer,parse,int,host,and,port,1,else,host,x,forwarded,host,header,servlet,uri,components,builder,builder,new,servlet,uri,components,builder,builder,scheme,scheme,builder,host,host,if,scheme,equals,http,port,80,scheme,equals,https,port,443,builder,port,port,builder,path,from,request,request,builder,query,request,get,query,string,return,builder
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromRequest(HttpServletRequest request);1382387168;Prepare a builder by copying the scheme, host, port, path, and_query string of an HttpServletRequest.;public static ServletUriComponentsBuilder fromRequest(HttpServletRequest request) {_		String scheme = request.getScheme()__		int port = request.getServerPort()__		String host = request.getServerName()___		String header = request.getHeader("X-Forwarded-Host")___		if (StringUtils.hasText(header)) {_			String[] hosts = StringUtils.commaDelimitedListToStringArray(header)__			String hostToUse = hosts[0]__			if (hostToUse.contains(":")) {_				String[] hostAndPort = StringUtils.split(hostToUse, ":")__				host  = hostAndPort[0]__				port = Integer.parseInt(hostAndPort[1])__			}_			else {_				host = hostToUse__			}_		}__		ServletUriComponentsBuilder builder = new ServletUriComponentsBuilder()__		builder.scheme(scheme)__		builder.host(host)__		if ((scheme.equals("http") && port != 80) || (scheme.equals("https") && port != 443)) {_			builder.port(port)__		}_		builder.pathFromRequest(request)__		builder.query(request.getQueryString())__		return builder__	};prepare,a,builder,by,copying,the,scheme,host,port,path,and,query,string,of,an,http,servlet,request;public,static,servlet,uri,components,builder,from,request,http,servlet,request,request,string,scheme,request,get,scheme,int,port,request,get,server,port,string,host,request,get,server,name,string,header,request,get,header,x,forwarded,host,if,string,utils,has,text,header,string,hosts,string,utils,comma,delimited,list,to,string,array,header,string,host,to,use,hosts,0,if,host,to,use,contains,string,host,and,port,string,utils,split,host,to,use,host,host,and,port,0,port,integer,parse,int,host,and,port,1,else,host,host,to,use,servlet,uri,components,builder,builder,new,servlet,uri,components,builder,builder,scheme,scheme,builder,host,host,if,scheme,equals,http,port,80,scheme,equals,https,port,443,builder,port,port,builder,path,from,request,request,builder,query,request,get,query,string,return,builder
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromRequest(HttpServletRequest request);1385423968;Prepare a builder by copying the scheme, host, port, path, and_query string of an HttpServletRequest.;public static ServletUriComponentsBuilder fromRequest(HttpServletRequest request) {_		String scheme = request.getScheme()__		int port = request.getServerPort()__		String host = request.getServerName()___		String header = request.getHeader("X-Forwarded-Host")___		if (StringUtils.hasText(header)) {_			String[] hosts = StringUtils.commaDelimitedListToStringArray(header)__			String hostToUse = hosts[0]__			if (hostToUse.contains(":")) {_				String[] hostAndPort = StringUtils.split(hostToUse, ":")__				host  = hostAndPort[0]__				port = Integer.parseInt(hostAndPort[1])__			}_			else {_				host = hostToUse__			}_		}__		ServletUriComponentsBuilder builder = new ServletUriComponentsBuilder()__		builder.scheme(scheme)__		builder.host(host)__		if ((scheme.equals("http") && port != 80) || (scheme.equals("https") && port != 443)) {_			builder.port(port)__		}_		builder.pathFromRequest(request)__		builder.query(request.getQueryString())__		return builder__	};prepare,a,builder,by,copying,the,scheme,host,port,path,and,query,string,of,an,http,servlet,request;public,static,servlet,uri,components,builder,from,request,http,servlet,request,request,string,scheme,request,get,scheme,int,port,request,get,server,port,string,host,request,get,server,name,string,header,request,get,header,x,forwarded,host,if,string,utils,has,text,header,string,hosts,string,utils,comma,delimited,list,to,string,array,header,string,host,to,use,hosts,0,if,host,to,use,contains,string,host,and,port,string,utils,split,host,to,use,host,host,and,port,0,port,integer,parse,int,host,and,port,1,else,host,host,to,use,servlet,uri,components,builder,builder,new,servlet,uri,components,builder,builder,scheme,scheme,builder,host,host,if,scheme,equals,http,port,80,scheme,equals,https,port,443,builder,port,port,builder,path,from,request,request,builder,query,request,get,query,string,return,builder
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromRequest(HttpServletRequest request);1402540848;Prepare a builder by copying the scheme, host, port, path, and_query string of an HttpServletRequest.;public static ServletUriComponentsBuilder fromRequest(HttpServletRequest request) {_		String scheme = request.getScheme()__		String host = request.getServerName()__		int port = request.getServerPort()___		String hostHeader = request.getHeader("X-Forwarded-Host")__		if (StringUtils.hasText(hostHeader)) {_			String[] hosts = StringUtils.commaDelimitedListToStringArray(hostHeader)__			String hostToUse = hosts[0]__			if (hostToUse.contains(":")) {_				String[] hostAndPort = StringUtils.split(hostToUse, ":")__				host  = hostAndPort[0]__				port = Integer.parseInt(hostAndPort[1])__			}_			else {_				host = hostToUse__			}_		}__		String portHeader = request.getHeader("X-Forwarded-Port")__		if (StringUtils.hasText(portHeader)) {_			port = Integer.parseInt(portHeader)__		}__		ServletUriComponentsBuilder builder = new ServletUriComponentsBuilder()__		builder.scheme(scheme)__		builder.host(host)__		if ((scheme.equals("http") && port != 80) || (scheme.equals("https") && port != 443)) {_			builder.port(port)__		}_		builder.pathFromRequest(request)__		builder.query(request.getQueryString())__		return builder__	};prepare,a,builder,by,copying,the,scheme,host,port,path,and,query,string,of,an,http,servlet,request;public,static,servlet,uri,components,builder,from,request,http,servlet,request,request,string,scheme,request,get,scheme,string,host,request,get,server,name,int,port,request,get,server,port,string,host,header,request,get,header,x,forwarded,host,if,string,utils,has,text,host,header,string,hosts,string,utils,comma,delimited,list,to,string,array,host,header,string,host,to,use,hosts,0,if,host,to,use,contains,string,host,and,port,string,utils,split,host,to,use,host,host,and,port,0,port,integer,parse,int,host,and,port,1,else,host,host,to,use,string,port,header,request,get,header,x,forwarded,port,if,string,utils,has,text,port,header,port,integer,parse,int,port,header,servlet,uri,components,builder,builder,new,servlet,uri,components,builder,builder,scheme,scheme,builder,host,host,if,scheme,equals,http,port,80,scheme,equals,https,port,443,builder,port,port,builder,path,from,request,request,builder,query,request,get,query,string,return,builder
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromRequest(HttpServletRequest request);1405032917;Prepare a builder by copying the scheme, host, port, path, and_query string of an HttpServletRequest.;public static ServletUriComponentsBuilder fromRequest(HttpServletRequest request) {_		String scheme = request.getScheme()__		String host = request.getServerName()__		int port = request.getServerPort()___		String hostHeader = request.getHeader("X-Forwarded-Host")__		if (StringUtils.hasText(hostHeader)) {_			String[] hosts = StringUtils.commaDelimitedListToStringArray(hostHeader)__			String hostToUse = hosts[0]__			if (hostToUse.contains(":")) {_				String[] hostAndPort = StringUtils.split(hostToUse, ":")__				host  = hostAndPort[0]__				port = Integer.parseInt(hostAndPort[1])__			}_			else {_				host = hostToUse__				port = -1__			}_		}__		String portHeader = request.getHeader("X-Forwarded-Port")__		if (StringUtils.hasText(portHeader)) {_			port = Integer.parseInt(portHeader)__		}__		String protocolHeader = request.getHeader("X-Forwarded-Proto")__		if (StringUtils.hasText(protocolHeader)) {_			scheme = protocolHeader__		}__		ServletUriComponentsBuilder builder = new ServletUriComponentsBuilder()__		builder.scheme(scheme)__		builder.host(host)__		if ((scheme.equals("http") && port != 80) || (scheme.equals("https") && port != 443)) {_			builder.port(port)__		}_		builder.pathFromRequest(request)__		builder.query(request.getQueryString())__		return builder__	};prepare,a,builder,by,copying,the,scheme,host,port,path,and,query,string,of,an,http,servlet,request;public,static,servlet,uri,components,builder,from,request,http,servlet,request,request,string,scheme,request,get,scheme,string,host,request,get,server,name,int,port,request,get,server,port,string,host,header,request,get,header,x,forwarded,host,if,string,utils,has,text,host,header,string,hosts,string,utils,comma,delimited,list,to,string,array,host,header,string,host,to,use,hosts,0,if,host,to,use,contains,string,host,and,port,string,utils,split,host,to,use,host,host,and,port,0,port,integer,parse,int,host,and,port,1,else,host,host,to,use,port,1,string,port,header,request,get,header,x,forwarded,port,if,string,utils,has,text,port,header,port,integer,parse,int,port,header,string,protocol,header,request,get,header,x,forwarded,proto,if,string,utils,has,text,protocol,header,scheme,protocol,header,servlet,uri,components,builder,builder,new,servlet,uri,components,builder,builder,scheme,scheme,builder,host,host,if,scheme,equals,http,port,80,scheme,equals,https,port,443,builder,port,port,builder,path,from,request,request,builder,query,request,get,query,string,return,builder
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromRequest(HttpServletRequest request);1405084622;Prepare a builder by copying the scheme, host, port, path, and_query string of an HttpServletRequest.;public static ServletUriComponentsBuilder fromRequest(HttpServletRequest request) {_		String scheme = request.getScheme()__		String host = request.getServerName()__		int port = request.getServerPort()___		String hostHeader = request.getHeader("X-Forwarded-Host")__		if (StringUtils.hasText(hostHeader)) {_			String[] hosts = StringUtils.commaDelimitedListToStringArray(hostHeader)__			String hostToUse = hosts[0]__			if (hostToUse.contains(":")) {_				String[] hostAndPort = StringUtils.split(hostToUse, ":")__				host  = hostAndPort[0]__				port = Integer.parseInt(hostAndPort[1])__			}_			else {_				host = hostToUse__				port = -1__			}_		}__		String portHeader = request.getHeader("X-Forwarded-Port")__		if (StringUtils.hasText(portHeader)) {_			port = Integer.parseInt(portHeader)__		}__		String protocolHeader = request.getHeader("X-Forwarded-Proto")__		if (StringUtils.hasText(protocolHeader)) {_			scheme = protocolHeader__		}__		ServletUriComponentsBuilder builder = new ServletUriComponentsBuilder()__		builder.scheme(scheme)__		builder.host(host)__		if (scheme.equals("http") && port != 80 || scheme.equals("https") && port != 443) {_			builder.port(port)__		}_		builder.pathFromRequest(request)__		builder.query(request.getQueryString())__		return builder__	};prepare,a,builder,by,copying,the,scheme,host,port,path,and,query,string,of,an,http,servlet,request;public,static,servlet,uri,components,builder,from,request,http,servlet,request,request,string,scheme,request,get,scheme,string,host,request,get,server,name,int,port,request,get,server,port,string,host,header,request,get,header,x,forwarded,host,if,string,utils,has,text,host,header,string,hosts,string,utils,comma,delimited,list,to,string,array,host,header,string,host,to,use,hosts,0,if,host,to,use,contains,string,host,and,port,string,utils,split,host,to,use,host,host,and,port,0,port,integer,parse,int,host,and,port,1,else,host,host,to,use,port,1,string,port,header,request,get,header,x,forwarded,port,if,string,utils,has,text,port,header,port,integer,parse,int,port,header,string,protocol,header,request,get,header,x,forwarded,proto,if,string,utils,has,text,protocol,header,scheme,protocol,header,servlet,uri,components,builder,builder,new,servlet,uri,components,builder,builder,scheme,scheme,builder,host,host,if,scheme,equals,http,port,80,scheme,equals,https,port,443,builder,port,port,builder,path,from,request,request,builder,query,request,get,query,string,return,builder
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromRequest(HttpServletRequest request);1417632385;Prepare a builder by copying the scheme, host, port, path, and_query string of an HttpServletRequest.;public static ServletUriComponentsBuilder fromRequest(HttpServletRequest request) {_		String scheme = request.getScheme()__		String host = request.getServerName()__		int port = request.getServerPort()__		String path = request.getRequestURI()___		String hostHeader = request.getHeader("X-Forwarded-Host")__		if (StringUtils.hasText(hostHeader)) {_			String[] hosts = StringUtils.commaDelimitedListToStringArray(hostHeader)__			String hostToUse = hosts[0]__			if (hostToUse.contains(":")) {_				String[] hostAndPort = StringUtils.split(hostToUse, ":")__				host  = hostAndPort[0]__				port = Integer.parseInt(hostAndPort[1])__			}_			else {_				host = hostToUse__				port = -1__			}_		}__		String portHeader = request.getHeader("X-Forwarded-Port")__		if (StringUtils.hasText(portHeader)) {_			port = Integer.parseInt(portHeader)__		}__		String protocolHeader = request.getHeader("X-Forwarded-Proto")__		if (StringUtils.hasText(protocolHeader)) {_			scheme = protocolHeader__		}__		String prefix = request.getHeader("X-Forwarded-Prefix")__		if (StringUtils.hasText(prefix)) {_			path = prefix + path__		}__		ServletUriComponentsBuilder builder = new ServletUriComponentsBuilder()__		builder.scheme(scheme)__		builder.host(host)__		if (scheme.equals("http") && port != 80 || scheme.equals("https") && port != 443) {_			builder.port(port)__		}_		builder.initPath(path)__		builder.query(request.getQueryString())__		return builder__	};prepare,a,builder,by,copying,the,scheme,host,port,path,and,query,string,of,an,http,servlet,request;public,static,servlet,uri,components,builder,from,request,http,servlet,request,request,string,scheme,request,get,scheme,string,host,request,get,server,name,int,port,request,get,server,port,string,path,request,get,request,uri,string,host,header,request,get,header,x,forwarded,host,if,string,utils,has,text,host,header,string,hosts,string,utils,comma,delimited,list,to,string,array,host,header,string,host,to,use,hosts,0,if,host,to,use,contains,string,host,and,port,string,utils,split,host,to,use,host,host,and,port,0,port,integer,parse,int,host,and,port,1,else,host,host,to,use,port,1,string,port,header,request,get,header,x,forwarded,port,if,string,utils,has,text,port,header,port,integer,parse,int,port,header,string,protocol,header,request,get,header,x,forwarded,proto,if,string,utils,has,text,protocol,header,scheme,protocol,header,string,prefix,request,get,header,x,forwarded,prefix,if,string,utils,has,text,prefix,path,prefix,path,servlet,uri,components,builder,builder,new,servlet,uri,components,builder,builder,scheme,scheme,builder,host,host,if,scheme,equals,http,port,80,scheme,equals,https,port,443,builder,port,port,builder,init,path,path,builder,query,request,get,query,string,return,builder
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromRequest(HttpServletRequest request);1417706155;Prepare a builder by copying the scheme, host, port, path, and_query string of an HttpServletRequest.;public static ServletUriComponentsBuilder fromRequest(HttpServletRequest request) {_		String scheme = request.getScheme()__		String host = request.getServerName()__		int port = request.getServerPort()___		String hostHeader = request.getHeader("X-Forwarded-Host")__		if (StringUtils.hasText(hostHeader)) {_			String[] hosts = StringUtils.commaDelimitedListToStringArray(hostHeader)__			String hostToUse = hosts[0]__			if (hostToUse.contains(":")) {_				String[] hostAndPort = StringUtils.split(hostToUse, ":")__				host  = hostAndPort[0]__				port = Integer.parseInt(hostAndPort[1])__			}_			else {_				host = hostToUse__				port = -1__			}_		}__		String portHeader = request.getHeader("X-Forwarded-Port")__		if (StringUtils.hasText(portHeader)) {_			port = Integer.parseInt(portHeader)__		}__		String protocolHeader = request.getHeader("X-Forwarded-Proto")__		if (StringUtils.hasText(protocolHeader)) {_			scheme = protocolHeader__		}__		String path = request.getRequestURI()__		path = prependForwardedPrefix(request, path)___		ServletUriComponentsBuilder builder = new ServletUriComponentsBuilder()__		builder.scheme(scheme)__		builder.host(host)__		if (scheme.equals("http") && port != 80 || scheme.equals("https") && port != 443) {_			builder.port(port)__		}_		builder.initPath(path)__		builder.query(request.getQueryString())__		return builder__	};prepare,a,builder,by,copying,the,scheme,host,port,path,and,query,string,of,an,http,servlet,request;public,static,servlet,uri,components,builder,from,request,http,servlet,request,request,string,scheme,request,get,scheme,string,host,request,get,server,name,int,port,request,get,server,port,string,host,header,request,get,header,x,forwarded,host,if,string,utils,has,text,host,header,string,hosts,string,utils,comma,delimited,list,to,string,array,host,header,string,host,to,use,hosts,0,if,host,to,use,contains,string,host,and,port,string,utils,split,host,to,use,host,host,and,port,0,port,integer,parse,int,host,and,port,1,else,host,host,to,use,port,1,string,port,header,request,get,header,x,forwarded,port,if,string,utils,has,text,port,header,port,integer,parse,int,port,header,string,protocol,header,request,get,header,x,forwarded,proto,if,string,utils,has,text,protocol,header,scheme,protocol,header,string,path,request,get,request,uri,path,prepend,forwarded,prefix,request,path,servlet,uri,components,builder,builder,new,servlet,uri,components,builder,builder,scheme,scheme,builder,host,host,if,scheme,equals,http,port,80,scheme,equals,https,port,443,builder,port,port,builder,init,path,path,builder,query,request,get,query,string,return,builder
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromRequest(HttpServletRequest request);1417707014;Prepare a builder by copying the scheme, host, port, path, and_query string of an HttpServletRequest.;public static ServletUriComponentsBuilder fromRequest(HttpServletRequest request) {_		ServletUriComponentsBuilder builder = initFromRequest(request)__		builder.initPath(prependForwardedPrefix(request, request.getRequestURI()))__		builder.query(request.getQueryString())__		return builder__	};prepare,a,builder,by,copying,the,scheme,host,port,path,and,query,string,of,an,http,servlet,request;public,static,servlet,uri,components,builder,from,request,http,servlet,request,request,servlet,uri,components,builder,builder,init,from,request,request,builder,init,path,prepend,forwarded,prefix,request,request,get,request,uri,builder,query,request,get,query,string,return,builder
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromRequest(HttpServletRequest request);1417799775;Prepare a builder by copying the scheme, host, port, path, and_query string of an HttpServletRequest.;public static ServletUriComponentsBuilder fromRequest(HttpServletRequest request) {_		ServletUriComponentsBuilder builder = initFromRequest(request)__		builder.initPath(prependForwardedPrefix(request, request.getRequestURI()))__		builder.query(request.getQueryString())__		return builder__	};prepare,a,builder,by,copying,the,scheme,host,port,path,and,query,string,of,an,http,servlet,request;public,static,servlet,uri,components,builder,from,request,http,servlet,request,request,servlet,uri,components,builder,builder,init,from,request,request,builder,init,path,prepend,forwarded,prefix,request,request,get,request,uri,builder,query,request,get,query,string,return,builder
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromRequest(HttpServletRequest request);1422572109;Prepare a builder by copying the scheme, host, port, path, and_query string of an HttpServletRequest.;public static ServletUriComponentsBuilder fromRequest(HttpServletRequest request) {_		ServletUriComponentsBuilder builder = initFromRequest(request)__		builder.initPath(prependForwardedPrefix(request, request.getRequestURI()))__		builder.query(request.getQueryString())__		return builder__	};prepare,a,builder,by,copying,the,scheme,host,port,path,and,query,string,of,an,http,servlet,request;public,static,servlet,uri,components,builder,from,request,http,servlet,request,request,servlet,uri,components,builder,builder,init,from,request,request,builder,init,path,prepend,forwarded,prefix,request,request,get,request,uri,builder,query,request,get,query,string,return,builder
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromRequest(HttpServletRequest request);1423547594;Prepare a builder by copying the scheme, host, port, path, and_query string of an HttpServletRequest.;public static ServletUriComponentsBuilder fromRequest(HttpServletRequest request) {_		ServletUriComponentsBuilder builder = initFromRequest(request)__		builder.initPath(prependForwardedPrefix(request, request.getRequestURI()))__		builder.query(request.getQueryString())__		return builder__	};prepare,a,builder,by,copying,the,scheme,host,port,path,and,query,string,of,an,http,servlet,request;public,static,servlet,uri,components,builder,from,request,http,servlet,request,request,servlet,uri,components,builder,builder,init,from,request,request,builder,init,path,prepend,forwarded,prefix,request,request,get,request,uri,builder,query,request,get,query,string,return,builder
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromRequest(HttpServletRequest request);1424272588;Prepare a builder by copying the scheme, host, port, path, and_query string of an HttpServletRequest.;public static ServletUriComponentsBuilder fromRequest(HttpServletRequest request) {_		ServletUriComponentsBuilder builder = initFromRequest(request)__		builder.initPath(prependForwardedPrefix(request, request.getRequestURI()))__		builder.query(request.getQueryString())__		return builder__	};prepare,a,builder,by,copying,the,scheme,host,port,path,and,query,string,of,an,http,servlet,request;public,static,servlet,uri,components,builder,from,request,http,servlet,request,request,servlet,uri,components,builder,builder,init,from,request,request,builder,init,path,prepend,forwarded,prefix,request,request,get,request,uri,builder,query,request,get,query,string,return,builder
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromRequest(HttpServletRequest request);1426553101;Prepare a builder by copying the scheme, host, port, path, and_query string of an HttpServletRequest.;public static ServletUriComponentsBuilder fromRequest(HttpServletRequest request) {_		ServletUriComponentsBuilder builder = initFromRequest(request)__		builder.initPath(prependForwardedPrefix(request, request.getRequestURI()))__		builder.query(request.getQueryString())__		return builder__	};prepare,a,builder,by,copying,the,scheme,host,port,path,and,query,string,of,an,http,servlet,request;public,static,servlet,uri,components,builder,from,request,http,servlet,request,request,servlet,uri,components,builder,builder,init,from,request,request,builder,init,path,prepend,forwarded,prefix,request,request,get,request,uri,builder,query,request,get,query,string,return,builder
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromRequest(HttpServletRequest request);1458830024;Prepare a builder by copying the scheme, host, port, path, and_query string of an HttpServletRequest.;public static ServletUriComponentsBuilder fromRequest(HttpServletRequest request) {_		ServletUriComponentsBuilder builder = initFromRequest(request)__		builder.initPath(prependForwardedPrefix(request, request.getRequestURI()))__		builder.query(request.getQueryString())__		return builder__	};prepare,a,builder,by,copying,the,scheme,host,port,path,and,query,string,of,an,http,servlet,request;public,static,servlet,uri,components,builder,from,request,http,servlet,request,request,servlet,uri,components,builder,builder,init,from,request,request,builder,init,path,prepend,forwarded,prefix,request,request,get,request,uri,builder,query,request,get,query,string,return,builder
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromRequest(HttpServletRequest request);1466187642;Prepare a builder by copying the scheme, host, port, path, and_query string of an HttpServletRequest.;public static ServletUriComponentsBuilder fromRequest(HttpServletRequest request) {_		ServletUriComponentsBuilder builder = initFromRequest(request)__		builder.initPath(prependForwardedPrefix(request, request.getRequestURI()))__		builder.query(request.getQueryString())__		return builder__	};prepare,a,builder,by,copying,the,scheme,host,port,path,and,query,string,of,an,http,servlet,request;public,static,servlet,uri,components,builder,from,request,http,servlet,request,request,servlet,uri,components,builder,builder,init,from,request,request,builder,init,path,prepend,forwarded,prefix,request,request,get,request,uri,builder,query,request,get,query,string,return,builder
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromRequest(HttpServletRequest request);1468963833;Prepare a builder by copying the scheme, host, port, path, and_query string of an HttpServletRequest.;public static ServletUriComponentsBuilder fromRequest(HttpServletRequest request) {_		ServletUriComponentsBuilder builder = initFromRequest(request)__		builder.initPath(prependForwardedPrefix(request, request.getRequestURI()))__		builder.query(request.getQueryString())__		return builder__	};prepare,a,builder,by,copying,the,scheme,host,port,path,and,query,string,of,an,http,servlet,request;public,static,servlet,uri,components,builder,from,request,http,servlet,request,request,servlet,uri,components,builder,builder,init,from,request,request,builder,init,path,prepend,forwarded,prefix,request,request,get,request,uri,builder,query,request,get,query,string,return,builder
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromRequest(HttpServletRequest request);1485810955;Prepare a builder by copying the scheme, host, port, path, and_query string of an HttpServletRequest.;public static ServletUriComponentsBuilder fromRequest(HttpServletRequest request) {_		ServletUriComponentsBuilder builder = initFromRequest(request)__		builder.initPath(prependForwardedPrefix(request, request.getRequestURI()))__		builder.query(request.getQueryString())__		return builder__	};prepare,a,builder,by,copying,the,scheme,host,port,path,and,query,string,of,an,http,servlet,request;public,static,servlet,uri,components,builder,from,request,http,servlet,request,request,servlet,uri,components,builder,builder,init,from,request,request,builder,init,path,prepend,forwarded,prefix,request,request,get,request,uri,builder,query,request,get,query,string,return,builder
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromRequest(HttpServletRequest request);1495868221;Prepare a builder by copying the scheme, host, port, path, and_query string of an HttpServletRequest.;public static ServletUriComponentsBuilder fromRequest(HttpServletRequest request) {_		ServletUriComponentsBuilder builder = initFromRequest(request)__		builder.initPath(prependForwardedPrefix(request, request.getRequestURI()))__		builder.query(request.getQueryString())__		return builder__	};prepare,a,builder,by,copying,the,scheme,host,port,path,and,query,string,of,an,http,servlet,request;public,static,servlet,uri,components,builder,from,request,http,servlet,request,request,servlet,uri,components,builder,builder,init,from,request,request,builder,init,path,prepend,forwarded,prefix,request,request,get,request,uri,builder,query,request,get,query,string,return,builder
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromRequest(HttpServletRequest request);1496370972;Prepare a builder by copying the scheme, host, port, path, and_query string of an HttpServletRequest.__<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs.;public static ServletUriComponentsBuilder fromRequest(HttpServletRequest request) {_		ServletUriComponentsBuilder builder = initFromRequest(request)__		builder.initPath(prependForwardedPrefix(request, request.getRequestURI()))__		builder.query(request.getQueryString())__		return builder__	};prepare,a,builder,by,copying,the,scheme,host,port,path,and,query,string,of,an,http,servlet,request,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs;public,static,servlet,uri,components,builder,from,request,http,servlet,request,request,servlet,uri,components,builder,builder,init,from,request,request,builder,init,path,prepend,forwarded,prefix,request,request,get,request,uri,builder,query,request,get,query,string,return,builder
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromRequest(HttpServletRequest request);1496837955;Prepare a builder by copying the scheme, host, port, path, and_query string of an HttpServletRequest._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs.;public static ServletUriComponentsBuilder fromRequest(HttpServletRequest request) {_		ServletUriComponentsBuilder builder = initFromRequest(request)__		builder.initPath(prependForwardedPrefix(request, request.getRequestURI()))__		builder.query(request.getQueryString())__		return builder__	};prepare,a,builder,by,copying,the,scheme,host,port,path,and,query,string,of,an,http,servlet,request,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs;public,static,servlet,uri,components,builder,from,request,http,servlet,request,request,servlet,uri,components,builder,builder,init,from,request,request,builder,init,path,prepend,forwarded,prefix,request,request,get,request,uri,builder,query,request,get,query,string,return,builder
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromRequest(HttpServletRequest request);1498780456;Prepare a builder by copying the scheme, host, port, path, and_query string of an HttpServletRequest._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs.;public static ServletUriComponentsBuilder fromRequest(HttpServletRequest request) {_		ServletUriComponentsBuilder builder = initFromRequest(request)__		builder.initPath(prependForwardedPrefix(request, request.getRequestURI()))__		builder.query(request.getQueryString())__		return builder__	};prepare,a,builder,by,copying,the,scheme,host,port,path,and,query,string,of,an,http,servlet,request,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs;public,static,servlet,uri,components,builder,from,request,http,servlet,request,request,servlet,uri,components,builder,builder,init,from,request,request,builder,init,path,prepend,forwarded,prefix,request,request,get,request,uri,builder,query,request,get,query,string,return,builder
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromRequest(HttpServletRequest request);1522354261;Prepare a builder by copying the scheme, host, port, path, and_query string of an HttpServletRequest._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs.;public static ServletUriComponentsBuilder fromRequest(HttpServletRequest request) {_		ServletUriComponentsBuilder builder = initFromRequest(request)__		builder.initPath(prependForwardedPrefix(request, request.getRequestURI()))__		builder.query(request.getQueryString())__		return builder__	};prepare,a,builder,by,copying,the,scheme,host,port,path,and,query,string,of,an,http,servlet,request,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs;public,static,servlet,uri,components,builder,from,request,http,servlet,request,request,servlet,uri,components,builder,builder,init,from,request,request,builder,init,path,prepend,forwarded,prefix,request,request,get,request,uri,builder,query,request,get,query,string,return,builder
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromRequest(HttpServletRequest request);1522361849;Prepare a builder by copying the scheme, host, port, path, and_query string of an HttpServletRequest.__<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs.__<p>As of 4.3.15, this method replaces the contextPath with the value_of "X-Forwarded-Prefix" rather than prepending, thus aligning with_{@code ForwardedHeaderFiller}.;public static ServletUriComponentsBuilder fromRequest(HttpServletRequest request) {_		ServletUriComponentsBuilder builder = initFromRequest(request)__		builder.initPath(getRequestUriWithForwardedPrefix(request))__		builder.query(request.getQueryString())__		return builder__	};prepare,a,builder,by,copying,the,scheme,host,port,path,and,query,string,of,an,http,servlet,request,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,p,as,of,4,3,15,this,method,replaces,the,context,path,with,the,value,of,x,forwarded,prefix,rather,than,prepending,thus,aligning,with,code,forwarded,header,filler;public,static,servlet,uri,components,builder,from,request,http,servlet,request,request,servlet,uri,components,builder,builder,init,from,request,request,builder,init,path,get,request,uri,with,forwarded,prefix,request,builder,query,request,get,query,string,return,builder
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromRequest(HttpServletRequest request);1526045499;Prepare a builder by copying the scheme, host, port, path, and_query string of an HttpServletRequest.__<p><strong>Note:</strong> as of 5.1 this method ignores_{@code "Forwarded"} and {@code "X-Forwarded-*"} headers that specify the_client-originated address. Consider using the {@code ForwardedHeaderFilter}_to extract and use, or to discard such headers.;public static ServletUriComponentsBuilder fromRequest(HttpServletRequest request) {_		ServletUriComponentsBuilder builder = initFromRequest(request)__		builder.initPath(request.getRequestURI())__		builder.query(request.getQueryString())__		return builder__	};prepare,a,builder,by,copying,the,scheme,host,port,path,and,query,string,of,an,http,servlet,request,p,strong,note,strong,as,of,5,1,this,method,ignores,code,forwarded,and,code,x,forwarded,headers,that,specify,the,client,originated,address,consider,using,the,code,forwarded,header,filter,to,extract,and,use,or,to,discard,such,headers;public,static,servlet,uri,components,builder,from,request,http,servlet,request,request,servlet,uri,components,builder,builder,init,from,request,request,builder,init,path,request,get,request,uri,builder,query,request,get,query,string,return,builder
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromRequest(HttpServletRequest request);1536336006;Prepare a builder by copying the scheme, host, port, path, and_query string of an HttpServletRequest.__<p><strong>Note:</strong> as of 5.1 this method ignores_{@code "Forwarded"} and {@code "X-Forwarded-*"} headers that specify the_client-originated address. Consider using the {@code ForwardedHeaderFilter}_to extract and use, or to discard such headers.;public static ServletUriComponentsBuilder fromRequest(HttpServletRequest request) {_		ServletUriComponentsBuilder builder = initFromRequest(request)__		builder.initPath(request.getRequestURI())__		builder.query(request.getQueryString())__		return builder__	};prepare,a,builder,by,copying,the,scheme,host,port,path,and,query,string,of,an,http,servlet,request,p,strong,note,strong,as,of,5,1,this,method,ignores,code,forwarded,and,code,x,forwarded,headers,that,specify,the,client,originated,address,consider,using,the,code,forwarded,header,filter,to,extract,and,use,or,to,discard,such,headers;public,static,servlet,uri,components,builder,from,request,http,servlet,request,request,servlet,uri,components,builder,builder,init,from,request,request,builder,init,path,request,get,request,uri,builder,query,request,get,query,string,return,builder
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromRequest(HttpServletRequest request);1536336678;Prepare a builder by copying the scheme, host, port, path, and_query string of an HttpServletRequest._<p><strong>Note:</strong> As of 5.1, this method ignores_{@code "Forwarded"} and {@code "X-Forwarded-*"} headers that specify the_client-originated address. Consider using the {@code ForwardedHeaderFilter}_to extract and use, or to discard such headers.;public static ServletUriComponentsBuilder fromRequest(HttpServletRequest request) {_		ServletUriComponentsBuilder builder = initFromRequest(request)__		builder.initPath(request.getRequestURI())__		builder.query(request.getQueryString())__		return builder__	};prepare,a,builder,by,copying,the,scheme,host,port,path,and,query,string,of,an,http,servlet,request,p,strong,note,strong,as,of,5,1,this,method,ignores,code,forwarded,and,code,x,forwarded,headers,that,specify,the,client,originated,address,consider,using,the,code,forwarded,header,filter,to,extract,and,use,or,to,discard,such,headers;public,static,servlet,uri,components,builder,from,request,http,servlet,request,request,servlet,uri,components,builder,builder,init,from,request,request,builder,init,path,request,get,request,uri,builder,query,request,get,query,string,return,builder
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromRequest(HttpServletRequest request);1539118301;Prepare a builder by copying the scheme, host, port, path, and_query string of an HttpServletRequest.;public static ServletUriComponentsBuilder fromRequest(HttpServletRequest request) {_		ServletUriComponentsBuilder builder = initFromRequest(request)__		builder.initPath(request.getRequestURI())__		builder.query(request.getQueryString())__		return builder__	};prepare,a,builder,by,copying,the,scheme,host,port,path,and,query,string,of,an,http,servlet,request;public,static,servlet,uri,components,builder,from,request,http,servlet,request,request,servlet,uri,components,builder,builder,init,from,request,request,builder,init,path,request,get,request,uri,builder,query,request,get,query,string,return,builder
ServletUriComponentsBuilder -> protected static HttpServletRequest getCurrentRequest();1362408075;Obtain the request through {@link RequestContextHolder}.;protected static HttpServletRequest getCurrentRequest() {_		RequestAttributes requestAttributes = RequestContextHolder.getRequestAttributes()__		Assert.state(requestAttributes != null, "Could not find current request via RequestContextHolder")__		Assert.isInstanceOf(ServletRequestAttributes.class, requestAttributes)__		HttpServletRequest servletRequest = ((ServletRequestAttributes) requestAttributes).getRequest()__		Assert.state(servletRequest != null, "Could not find current HttpServletRequest")__		return servletRequest__	};obtain,the,request,through,link,request,context,holder;protected,static,http,servlet,request,get,current,request,request,attributes,request,attributes,request,context,holder,get,request,attributes,assert,state,request,attributes,null,could,not,find,current,request,via,request,context,holder,assert,is,instance,of,servlet,request,attributes,class,request,attributes,http,servlet,request,servlet,request,servlet,request,attributes,request,attributes,get,request,assert,state,servlet,request,null,could,not,find,current,http,servlet,request,return,servlet,request
ServletUriComponentsBuilder -> protected static HttpServletRequest getCurrentRequest();1375199802;Obtain the request through {@link RequestContextHolder}.;protected static HttpServletRequest getCurrentRequest() {_		RequestAttributes requestAttributes = RequestContextHolder.getRequestAttributes()__		Assert.state(requestAttributes != null, "Could not find current request via RequestContextHolder")__		Assert.isInstanceOf(ServletRequestAttributes.class, requestAttributes)__		HttpServletRequest servletRequest = ((ServletRequestAttributes) requestAttributes).getRequest()__		Assert.state(servletRequest != null, "Could not find current HttpServletRequest")__		return servletRequest__	};obtain,the,request,through,link,request,context,holder;protected,static,http,servlet,request,get,current,request,request,attributes,request,attributes,request,context,holder,get,request,attributes,assert,state,request,attributes,null,could,not,find,current,request,via,request,context,holder,assert,is,instance,of,servlet,request,attributes,class,request,attributes,http,servlet,request,servlet,request,servlet,request,attributes,request,attributes,get,request,assert,state,servlet,request,null,could,not,find,current,http,servlet,request,return,servlet,request
ServletUriComponentsBuilder -> protected static HttpServletRequest getCurrentRequest();1377797966;Obtain the request through {@link RequestContextHolder}.;protected static HttpServletRequest getCurrentRequest() {_		RequestAttributes requestAttributes = RequestContextHolder.getRequestAttributes()__		Assert.state(requestAttributes != null, "Could not find current request via RequestContextHolder")__		Assert.isInstanceOf(ServletRequestAttributes.class, requestAttributes)__		HttpServletRequest servletRequest = ((ServletRequestAttributes) requestAttributes).getRequest()__		Assert.state(servletRequest != null, "Could not find current HttpServletRequest")__		return servletRequest__	};obtain,the,request,through,link,request,context,holder;protected,static,http,servlet,request,get,current,request,request,attributes,request,attributes,request,context,holder,get,request,attributes,assert,state,request,attributes,null,could,not,find,current,request,via,request,context,holder,assert,is,instance,of,servlet,request,attributes,class,request,attributes,http,servlet,request,servlet,request,servlet,request,attributes,request,attributes,get,request,assert,state,servlet,request,null,could,not,find,current,http,servlet,request,return,servlet,request
ServletUriComponentsBuilder -> protected static HttpServletRequest getCurrentRequest();1382387168;Obtain the request through {@link RequestContextHolder}.;protected static HttpServletRequest getCurrentRequest() {_		RequestAttributes requestAttributes = RequestContextHolder.getRequestAttributes()__		Assert.state(requestAttributes != null, "Could not find current request via RequestContextHolder")__		Assert.isInstanceOf(ServletRequestAttributes.class, requestAttributes)__		HttpServletRequest servletRequest = ((ServletRequestAttributes) requestAttributes).getRequest()__		Assert.state(servletRequest != null, "Could not find current HttpServletRequest")__		return servletRequest__	};obtain,the,request,through,link,request,context,holder;protected,static,http,servlet,request,get,current,request,request,attributes,request,attributes,request,context,holder,get,request,attributes,assert,state,request,attributes,null,could,not,find,current,request,via,request,context,holder,assert,is,instance,of,servlet,request,attributes,class,request,attributes,http,servlet,request,servlet,request,servlet,request,attributes,request,attributes,get,request,assert,state,servlet,request,null,could,not,find,current,http,servlet,request,return,servlet,request
ServletUriComponentsBuilder -> protected static HttpServletRequest getCurrentRequest();1385423968;Obtain the request through {@link RequestContextHolder}.;protected static HttpServletRequest getCurrentRequest() {_		RequestAttributes requestAttributes = RequestContextHolder.getRequestAttributes()__		Assert.state(requestAttributes != null, "Could not find current request via RequestContextHolder")__		Assert.isInstanceOf(ServletRequestAttributes.class, requestAttributes)__		HttpServletRequest servletRequest = ((ServletRequestAttributes) requestAttributes).getRequest()__		Assert.state(servletRequest != null, "Could not find current HttpServletRequest")__		return servletRequest__	};obtain,the,request,through,link,request,context,holder;protected,static,http,servlet,request,get,current,request,request,attributes,request,attributes,request,context,holder,get,request,attributes,assert,state,request,attributes,null,could,not,find,current,request,via,request,context,holder,assert,is,instance,of,servlet,request,attributes,class,request,attributes,http,servlet,request,servlet,request,servlet,request,attributes,request,attributes,get,request,assert,state,servlet,request,null,could,not,find,current,http,servlet,request,return,servlet,request
ServletUriComponentsBuilder -> protected static HttpServletRequest getCurrentRequest();1402540848;Obtain the request through {@link RequestContextHolder}.;protected static HttpServletRequest getCurrentRequest() {_		RequestAttributes requestAttributes = RequestContextHolder.getRequestAttributes()__		Assert.state(requestAttributes != null, "Could not find current request via RequestContextHolder")__		Assert.isInstanceOf(ServletRequestAttributes.class, requestAttributes)__		HttpServletRequest servletRequest = ((ServletRequestAttributes) requestAttributes).getRequest()__		Assert.state(servletRequest != null, "Could not find current HttpServletRequest")__		return servletRequest__	};obtain,the,request,through,link,request,context,holder;protected,static,http,servlet,request,get,current,request,request,attributes,request,attributes,request,context,holder,get,request,attributes,assert,state,request,attributes,null,could,not,find,current,request,via,request,context,holder,assert,is,instance,of,servlet,request,attributes,class,request,attributes,http,servlet,request,servlet,request,servlet,request,attributes,request,attributes,get,request,assert,state,servlet,request,null,could,not,find,current,http,servlet,request,return,servlet,request
ServletUriComponentsBuilder -> protected static HttpServletRequest getCurrentRequest();1405032917;Obtain the request through {@link RequestContextHolder}.;protected static HttpServletRequest getCurrentRequest() {_		RequestAttributes requestAttributes = RequestContextHolder.getRequestAttributes()__		Assert.state(requestAttributes != null, "Could not find current request via RequestContextHolder")__		Assert.isInstanceOf(ServletRequestAttributes.class, requestAttributes)__		HttpServletRequest servletRequest = ((ServletRequestAttributes) requestAttributes).getRequest()__		Assert.state(servletRequest != null, "Could not find current HttpServletRequest")__		return servletRequest__	};obtain,the,request,through,link,request,context,holder;protected,static,http,servlet,request,get,current,request,request,attributes,request,attributes,request,context,holder,get,request,attributes,assert,state,request,attributes,null,could,not,find,current,request,via,request,context,holder,assert,is,instance,of,servlet,request,attributes,class,request,attributes,http,servlet,request,servlet,request,servlet,request,attributes,request,attributes,get,request,assert,state,servlet,request,null,could,not,find,current,http,servlet,request,return,servlet,request
ServletUriComponentsBuilder -> protected static HttpServletRequest getCurrentRequest();1405084622;Obtain the request through {@link RequestContextHolder}.;protected static HttpServletRequest getCurrentRequest() {_		RequestAttributes requestAttributes = RequestContextHolder.getRequestAttributes()__		Assert.state(requestAttributes != null, "Could not find current request via RequestContextHolder")__		Assert.isInstanceOf(ServletRequestAttributes.class, requestAttributes)__		HttpServletRequest servletRequest = ((ServletRequestAttributes) requestAttributes).getRequest()__		Assert.state(servletRequest != null, "Could not find current HttpServletRequest")__		return servletRequest__	};obtain,the,request,through,link,request,context,holder;protected,static,http,servlet,request,get,current,request,request,attributes,request,attributes,request,context,holder,get,request,attributes,assert,state,request,attributes,null,could,not,find,current,request,via,request,context,holder,assert,is,instance,of,servlet,request,attributes,class,request,attributes,http,servlet,request,servlet,request,servlet,request,attributes,request,attributes,get,request,assert,state,servlet,request,null,could,not,find,current,http,servlet,request,return,servlet,request
ServletUriComponentsBuilder -> protected static HttpServletRequest getCurrentRequest();1417632385;Obtain the request through {@link RequestContextHolder}.;protected static HttpServletRequest getCurrentRequest() {_		RequestAttributes requestAttributes = RequestContextHolder.getRequestAttributes()__		Assert.state(requestAttributes != null, "Could not find current request via RequestContextHolder")__		Assert.isInstanceOf(ServletRequestAttributes.class, requestAttributes)__		HttpServletRequest servletRequest = ((ServletRequestAttributes) requestAttributes).getRequest()__		Assert.state(servletRequest != null, "Could not find current HttpServletRequest")__		return servletRequest__	};obtain,the,request,through,link,request,context,holder;protected,static,http,servlet,request,get,current,request,request,attributes,request,attributes,request,context,holder,get,request,attributes,assert,state,request,attributes,null,could,not,find,current,request,via,request,context,holder,assert,is,instance,of,servlet,request,attributes,class,request,attributes,http,servlet,request,servlet,request,servlet,request,attributes,request,attributes,get,request,assert,state,servlet,request,null,could,not,find,current,http,servlet,request,return,servlet,request
ServletUriComponentsBuilder -> protected static HttpServletRequest getCurrentRequest();1417706155;Obtain the request through {@link RequestContextHolder}.;protected static HttpServletRequest getCurrentRequest() {_		RequestAttributes requestAttributes = RequestContextHolder.getRequestAttributes()__		Assert.state(requestAttributes != null, "Could not find current request via RequestContextHolder")__		Assert.isInstanceOf(ServletRequestAttributes.class, requestAttributes)__		HttpServletRequest servletRequest = ((ServletRequestAttributes) requestAttributes).getRequest()__		Assert.state(servletRequest != null, "Could not find current HttpServletRequest")__		return servletRequest__	};obtain,the,request,through,link,request,context,holder;protected,static,http,servlet,request,get,current,request,request,attributes,request,attributes,request,context,holder,get,request,attributes,assert,state,request,attributes,null,could,not,find,current,request,via,request,context,holder,assert,is,instance,of,servlet,request,attributes,class,request,attributes,http,servlet,request,servlet,request,servlet,request,attributes,request,attributes,get,request,assert,state,servlet,request,null,could,not,find,current,http,servlet,request,return,servlet,request
ServletUriComponentsBuilder -> protected static HttpServletRequest getCurrentRequest();1417707014;Get the request through {@link RequestContextHolder}.;protected static HttpServletRequest getCurrentRequest() {_		RequestAttributes requestAttributes = RequestContextHolder.getRequestAttributes()__		Assert.state(requestAttributes != null, "Could not find current request via RequestContextHolder")__		Assert.isInstanceOf(ServletRequestAttributes.class, requestAttributes)__		HttpServletRequest servletRequest = ((ServletRequestAttributes) requestAttributes).getRequest()__		Assert.state(servletRequest != null, "Could not find current HttpServletRequest")__		return servletRequest__	};get,the,request,through,link,request,context,holder;protected,static,http,servlet,request,get,current,request,request,attributes,request,attributes,request,context,holder,get,request,attributes,assert,state,request,attributes,null,could,not,find,current,request,via,request,context,holder,assert,is,instance,of,servlet,request,attributes,class,request,attributes,http,servlet,request,servlet,request,servlet,request,attributes,request,attributes,get,request,assert,state,servlet,request,null,could,not,find,current,http,servlet,request,return,servlet,request
ServletUriComponentsBuilder -> protected static HttpServletRequest getCurrentRequest();1417799775;Get the request through {@link RequestContextHolder}.;protected static HttpServletRequest getCurrentRequest() {_		RequestAttributes requestAttributes = RequestContextHolder.getRequestAttributes()__		Assert.state(requestAttributes != null, "Could not find current request via RequestContextHolder")__		Assert.isInstanceOf(ServletRequestAttributes.class, requestAttributes)__		HttpServletRequest servletRequest = ((ServletRequestAttributes) requestAttributes).getRequest()__		Assert.state(servletRequest != null, "Could not find current HttpServletRequest")__		return servletRequest__	};get,the,request,through,link,request,context,holder;protected,static,http,servlet,request,get,current,request,request,attributes,request,attributes,request,context,holder,get,request,attributes,assert,state,request,attributes,null,could,not,find,current,request,via,request,context,holder,assert,is,instance,of,servlet,request,attributes,class,request,attributes,http,servlet,request,servlet,request,servlet,request,attributes,request,attributes,get,request,assert,state,servlet,request,null,could,not,find,current,http,servlet,request,return,servlet,request
ServletUriComponentsBuilder -> protected static HttpServletRequest getCurrentRequest();1422572109;Get the request through {@link RequestContextHolder}.;protected static HttpServletRequest getCurrentRequest() {_		RequestAttributes requestAttributes = RequestContextHolder.getRequestAttributes()__		Assert.state(requestAttributes != null, "Could not find current request via RequestContextHolder")__		Assert.isInstanceOf(ServletRequestAttributes.class, requestAttributes)__		HttpServletRequest servletRequest = ((ServletRequestAttributes) requestAttributes).getRequest()__		Assert.state(servletRequest != null, "Could not find current HttpServletRequest")__		return servletRequest__	};get,the,request,through,link,request,context,holder;protected,static,http,servlet,request,get,current,request,request,attributes,request,attributes,request,context,holder,get,request,attributes,assert,state,request,attributes,null,could,not,find,current,request,via,request,context,holder,assert,is,instance,of,servlet,request,attributes,class,request,attributes,http,servlet,request,servlet,request,servlet,request,attributes,request,attributes,get,request,assert,state,servlet,request,null,could,not,find,current,http,servlet,request,return,servlet,request
ServletUriComponentsBuilder -> protected static HttpServletRequest getCurrentRequest();1423547594;Get the request through {@link RequestContextHolder}.;protected static HttpServletRequest getCurrentRequest() {_		RequestAttributes requestAttributes = RequestContextHolder.getRequestAttributes()__		Assert.state(requestAttributes != null, "Could not find current request via RequestContextHolder")__		Assert.isInstanceOf(ServletRequestAttributes.class, requestAttributes)__		HttpServletRequest servletRequest = ((ServletRequestAttributes) requestAttributes).getRequest()__		Assert.state(servletRequest != null, "Could not find current HttpServletRequest")__		return servletRequest__	};get,the,request,through,link,request,context,holder;protected,static,http,servlet,request,get,current,request,request,attributes,request,attributes,request,context,holder,get,request,attributes,assert,state,request,attributes,null,could,not,find,current,request,via,request,context,holder,assert,is,instance,of,servlet,request,attributes,class,request,attributes,http,servlet,request,servlet,request,servlet,request,attributes,request,attributes,get,request,assert,state,servlet,request,null,could,not,find,current,http,servlet,request,return,servlet,request
ServletUriComponentsBuilder -> protected static HttpServletRequest getCurrentRequest();1424272588;Obtain current request through {@link RequestContextHolder}.;protected static HttpServletRequest getCurrentRequest() {_		RequestAttributes requestAttributes = RequestContextHolder.getRequestAttributes()__		Assert.state(requestAttributes != null, "Could not find current request via RequestContextHolder")__		Assert.isInstanceOf(ServletRequestAttributes.class, requestAttributes)__		HttpServletRequest servletRequest = ((ServletRequestAttributes) requestAttributes).getRequest()__		Assert.state(servletRequest != null, "Could not find current HttpServletRequest")__		return servletRequest__	};obtain,current,request,through,link,request,context,holder;protected,static,http,servlet,request,get,current,request,request,attributes,request,attributes,request,context,holder,get,request,attributes,assert,state,request,attributes,null,could,not,find,current,request,via,request,context,holder,assert,is,instance,of,servlet,request,attributes,class,request,attributes,http,servlet,request,servlet,request,servlet,request,attributes,request,attributes,get,request,assert,state,servlet,request,null,could,not,find,current,http,servlet,request,return,servlet,request
ServletUriComponentsBuilder -> protected static HttpServletRequest getCurrentRequest();1426553101;Obtain current request through {@link RequestContextHolder}.;protected static HttpServletRequest getCurrentRequest() {_		RequestAttributes requestAttributes = RequestContextHolder.getRequestAttributes()__		Assert.state(requestAttributes != null, "Could not find current request via RequestContextHolder")__		Assert.isInstanceOf(ServletRequestAttributes.class, requestAttributes)__		HttpServletRequest servletRequest = ((ServletRequestAttributes) requestAttributes).getRequest()__		Assert.state(servletRequest != null, "Could not find current HttpServletRequest")__		return servletRequest__	};obtain,current,request,through,link,request,context,holder;protected,static,http,servlet,request,get,current,request,request,attributes,request,attributes,request,context,holder,get,request,attributes,assert,state,request,attributes,null,could,not,find,current,request,via,request,context,holder,assert,is,instance,of,servlet,request,attributes,class,request,attributes,http,servlet,request,servlet,request,servlet,request,attributes,request,attributes,get,request,assert,state,servlet,request,null,could,not,find,current,http,servlet,request,return,servlet,request
ServletUriComponentsBuilder -> protected static HttpServletRequest getCurrentRequest();1458830024;Obtain current request through {@link RequestContextHolder}.;protected static HttpServletRequest getCurrentRequest() {_		RequestAttributes requestAttributes = RequestContextHolder.getRequestAttributes()__		Assert.state(requestAttributes != null, "Could not find current request via RequestContextHolder")__		Assert.isInstanceOf(ServletRequestAttributes.class, requestAttributes)__		HttpServletRequest servletRequest = ((ServletRequestAttributes) requestAttributes).getRequest()__		Assert.state(servletRequest != null, "Could not find current HttpServletRequest")__		return servletRequest__	};obtain,current,request,through,link,request,context,holder;protected,static,http,servlet,request,get,current,request,request,attributes,request,attributes,request,context,holder,get,request,attributes,assert,state,request,attributes,null,could,not,find,current,request,via,request,context,holder,assert,is,instance,of,servlet,request,attributes,class,request,attributes,http,servlet,request,servlet,request,servlet,request,attributes,request,attributes,get,request,assert,state,servlet,request,null,could,not,find,current,http,servlet,request,return,servlet,request
ServletUriComponentsBuilder -> protected static HttpServletRequest getCurrentRequest();1466187642;Obtain current request through {@link RequestContextHolder}.;protected static HttpServletRequest getCurrentRequest() {_		RequestAttributes requestAttributes = RequestContextHolder.getRequestAttributes()__		Assert.state(requestAttributes != null, "Could not find current request via RequestContextHolder")__		Assert.isInstanceOf(ServletRequestAttributes.class, requestAttributes)__		HttpServletRequest servletRequest = ((ServletRequestAttributes) requestAttributes).getRequest()__		Assert.state(servletRequest != null, "Could not find current HttpServletRequest")__		return servletRequest__	};obtain,current,request,through,link,request,context,holder;protected,static,http,servlet,request,get,current,request,request,attributes,request,attributes,request,context,holder,get,request,attributes,assert,state,request,attributes,null,could,not,find,current,request,via,request,context,holder,assert,is,instance,of,servlet,request,attributes,class,request,attributes,http,servlet,request,servlet,request,servlet,request,attributes,request,attributes,get,request,assert,state,servlet,request,null,could,not,find,current,http,servlet,request,return,servlet,request
ServletUriComponentsBuilder -> protected static HttpServletRequest getCurrentRequest();1468963833;Obtain current request through {@link RequestContextHolder}.;protected static HttpServletRequest getCurrentRequest() {_		RequestAttributes requestAttributes = RequestContextHolder.getRequestAttributes()__		Assert.state(requestAttributes != null, "Could not find current request via RequestContextHolder")__		Assert.isInstanceOf(ServletRequestAttributes.class, requestAttributes)__		HttpServletRequest servletRequest = ((ServletRequestAttributes) requestAttributes).getRequest()__		Assert.state(servletRequest != null, "Could not find current HttpServletRequest")__		return servletRequest__	};obtain,current,request,through,link,request,context,holder;protected,static,http,servlet,request,get,current,request,request,attributes,request,attributes,request,context,holder,get,request,attributes,assert,state,request,attributes,null,could,not,find,current,request,via,request,context,holder,assert,is,instance,of,servlet,request,attributes,class,request,attributes,http,servlet,request,servlet,request,servlet,request,attributes,request,attributes,get,request,assert,state,servlet,request,null,could,not,find,current,http,servlet,request,return,servlet,request
ServletUriComponentsBuilder -> protected static HttpServletRequest getCurrentRequest();1485810955;Obtain current request through {@link RequestContextHolder}.;protected static HttpServletRequest getCurrentRequest() {_		RequestAttributes attrs = RequestContextHolder.getRequestAttributes()__		Assert.state(attrs instanceof ServletRequestAttributes, "No current ServletRequestAttributes")__		return ((ServletRequestAttributes) attrs).getRequest()__	};obtain,current,request,through,link,request,context,holder;protected,static,http,servlet,request,get,current,request,request,attributes,attrs,request,context,holder,get,request,attributes,assert,state,attrs,instanceof,servlet,request,attributes,no,current,servlet,request,attributes,return,servlet,request,attributes,attrs,get,request
ServletUriComponentsBuilder -> protected static HttpServletRequest getCurrentRequest();1495868221;Obtain current request through {@link RequestContextHolder}.;protected static HttpServletRequest getCurrentRequest() {_		RequestAttributes attrs = RequestContextHolder.getRequestAttributes()__		Assert.state(attrs instanceof ServletRequestAttributes, "No current ServletRequestAttributes")__		return ((ServletRequestAttributes) attrs).getRequest()__	};obtain,current,request,through,link,request,context,holder;protected,static,http,servlet,request,get,current,request,request,attributes,attrs,request,context,holder,get,request,attributes,assert,state,attrs,instanceof,servlet,request,attributes,no,current,servlet,request,attributes,return,servlet,request,attributes,attrs,get,request
ServletUriComponentsBuilder -> protected static HttpServletRequest getCurrentRequest();1496370972;Obtain current request through {@link RequestContextHolder}.;protected static HttpServletRequest getCurrentRequest() {_		RequestAttributes attrs = RequestContextHolder.getRequestAttributes()__		Assert.state(attrs instanceof ServletRequestAttributes, "No current ServletRequestAttributes")__		return ((ServletRequestAttributes) attrs).getRequest()__	};obtain,current,request,through,link,request,context,holder;protected,static,http,servlet,request,get,current,request,request,attributes,attrs,request,context,holder,get,request,attributes,assert,state,attrs,instanceof,servlet,request,attributes,no,current,servlet,request,attributes,return,servlet,request,attributes,attrs,get,request
ServletUriComponentsBuilder -> protected static HttpServletRequest getCurrentRequest();1496837955;Obtain current request through {@link RequestContextHolder}.;protected static HttpServletRequest getCurrentRequest() {_		RequestAttributes attrs = RequestContextHolder.getRequestAttributes()__		Assert.state(attrs instanceof ServletRequestAttributes, "No current ServletRequestAttributes")__		return ((ServletRequestAttributes) attrs).getRequest()__	};obtain,current,request,through,link,request,context,holder;protected,static,http,servlet,request,get,current,request,request,attributes,attrs,request,context,holder,get,request,attributes,assert,state,attrs,instanceof,servlet,request,attributes,no,current,servlet,request,attributes,return,servlet,request,attributes,attrs,get,request
ServletUriComponentsBuilder -> protected static HttpServletRequest getCurrentRequest();1498780456;Obtain current request through {@link RequestContextHolder}.;protected static HttpServletRequest getCurrentRequest() {_		RequestAttributes attrs = RequestContextHolder.getRequestAttributes()__		Assert.state(attrs instanceof ServletRequestAttributes, "No current ServletRequestAttributes")__		return ((ServletRequestAttributes) attrs).getRequest()__	};obtain,current,request,through,link,request,context,holder;protected,static,http,servlet,request,get,current,request,request,attributes,attrs,request,context,holder,get,request,attributes,assert,state,attrs,instanceof,servlet,request,attributes,no,current,servlet,request,attributes,return,servlet,request,attributes,attrs,get,request
ServletUriComponentsBuilder -> protected static HttpServletRequest getCurrentRequest();1522354261;Obtain current request through {@link RequestContextHolder}.;protected static HttpServletRequest getCurrentRequest() {_		RequestAttributes attrs = RequestContextHolder.getRequestAttributes()__		Assert.state(attrs instanceof ServletRequestAttributes, "No current ServletRequestAttributes")__		return ((ServletRequestAttributes) attrs).getRequest()__	};obtain,current,request,through,link,request,context,holder;protected,static,http,servlet,request,get,current,request,request,attributes,attrs,request,context,holder,get,request,attributes,assert,state,attrs,instanceof,servlet,request,attributes,no,current,servlet,request,attributes,return,servlet,request,attributes,attrs,get,request
ServletUriComponentsBuilder -> protected static HttpServletRequest getCurrentRequest();1522361849;Obtain current request through {@link RequestContextHolder}.;protected static HttpServletRequest getCurrentRequest() {_		RequestAttributes attrs = RequestContextHolder.getRequestAttributes()__		Assert.state(attrs instanceof ServletRequestAttributes, "No current ServletRequestAttributes")__		return ((ServletRequestAttributes) attrs).getRequest()__	};obtain,current,request,through,link,request,context,holder;protected,static,http,servlet,request,get,current,request,request,attributes,attrs,request,context,holder,get,request,attributes,assert,state,attrs,instanceof,servlet,request,attributes,no,current,servlet,request,attributes,return,servlet,request,attributes,attrs,get,request
ServletUriComponentsBuilder -> protected static HttpServletRequest getCurrentRequest();1526045499;Obtain current request through {@link RequestContextHolder}.;protected static HttpServletRequest getCurrentRequest() {_		RequestAttributes attrs = RequestContextHolder.getRequestAttributes()__		Assert.state(attrs instanceof ServletRequestAttributes, "No current ServletRequestAttributes")__		return ((ServletRequestAttributes) attrs).getRequest()__	};obtain,current,request,through,link,request,context,holder;protected,static,http,servlet,request,get,current,request,request,attributes,attrs,request,context,holder,get,request,attributes,assert,state,attrs,instanceof,servlet,request,attributes,no,current,servlet,request,attributes,return,servlet,request,attributes,attrs,get,request
ServletUriComponentsBuilder -> protected static HttpServletRequest getCurrentRequest();1536336006;Obtain current request through {@link RequestContextHolder}.;protected static HttpServletRequest getCurrentRequest() {_		RequestAttributes attrs = RequestContextHolder.getRequestAttributes()__		Assert.state(attrs instanceof ServletRequestAttributes, "No current ServletRequestAttributes")__		return ((ServletRequestAttributes) attrs).getRequest()__	};obtain,current,request,through,link,request,context,holder;protected,static,http,servlet,request,get,current,request,request,attributes,attrs,request,context,holder,get,request,attributes,assert,state,attrs,instanceof,servlet,request,attributes,no,current,servlet,request,attributes,return,servlet,request,attributes,attrs,get,request
ServletUriComponentsBuilder -> protected static HttpServletRequest getCurrentRequest();1536336678;Obtain current request through {@link RequestContextHolder}.;protected static HttpServletRequest getCurrentRequest() {_		RequestAttributes attrs = RequestContextHolder.getRequestAttributes()__		Assert.state(attrs instanceof ServletRequestAttributes, "No current ServletRequestAttributes")__		return ((ServletRequestAttributes) attrs).getRequest()__	};obtain,current,request,through,link,request,context,holder;protected,static,http,servlet,request,get,current,request,request,attributes,attrs,request,context,holder,get,request,attributes,assert,state,attrs,instanceof,servlet,request,attributes,no,current,servlet,request,attributes,return,servlet,request,attributes,attrs,get,request
ServletUriComponentsBuilder -> protected static HttpServletRequest getCurrentRequest();1539118301;Obtain current request through {@link RequestContextHolder}.;protected static HttpServletRequest getCurrentRequest() {_		RequestAttributes attrs = RequestContextHolder.getRequestAttributes()__		Assert.state(attrs instanceof ServletRequestAttributes, "No current ServletRequestAttributes")__		return ((ServletRequestAttributes) attrs).getRequest()__	};obtain,current,request,through,link,request,context,holder;protected,static,http,servlet,request,get,current,request,request,attributes,attrs,request,context,holder,get,request,attributes,assert,state,attrs,instanceof,servlet,request,attributes,no,current,servlet,request,attributes,return,servlet,request,attributes,attrs,get,request
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromServletMapping(HttpServletRequest request);1328020251;Return a builder initialized with the host, port, scheme, context path,_and the servlet mapping of the given request.__<p>For example if the servlet is mapped by name, i.e. {@code "/main/*"},_then the resulting path will be {@code /appContext/main}. If the servlet_path is not mapped by name, i.e. {@code "/"} or {@code "*.html"}, then_the resulting path will contain the context path only.;public static ServletUriComponentsBuilder fromServletMapping(HttpServletRequest request) {_		ServletUriComponentsBuilder builder = fromContextPath(request)__		if (StringUtils.hasText(new UrlPathHelper().getPathWithinServletMapping(request))) {_			builder.path(request.getServletPath())__		}_		return builder__	};return,a,builder,initialized,with,the,host,port,scheme,context,path,and,the,servlet,mapping,of,the,given,request,p,for,example,if,the,servlet,is,mapped,by,name,i,e,code,main,then,the,resulting,path,will,be,code,app,context,main,if,the,servlet,path,is,not,mapped,by,name,i,e,code,or,code,html,then,the,resulting,path,will,contain,the,context,path,only;public,static,servlet,uri,components,builder,from,servlet,mapping,http,servlet,request,request,servlet,uri,components,builder,builder,from,context,path,request,if,string,utils,has,text,new,url,path,helper,get,path,within,servlet,mapping,request,builder,path,request,get,servlet,path,return,builder
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromServletMapping(HttpServletRequest request);1329142650;Prepare a builder from the host, port, scheme, context path, and_servlet mapping of an HttpServletRequest. The results may vary depending_on the type of servlet mapping used.__<p>If the servlet is mapped by name, e.g. {@code "/main/*"}, the path_will end with "/main". If the servlet is mapped otherwise, e.g._{@code "/"} or {@code "*.do"}, the result will be the same as_if calling {@link #fromContextPath(HttpServletRequest)}.;public static ServletUriComponentsBuilder fromServletMapping(HttpServletRequest request) {_		ServletUriComponentsBuilder builder = fromContextPath(request)__		if (StringUtils.hasText(new UrlPathHelper().getPathWithinServletMapping(request))) {_			builder.path(request.getServletPath())__		}_		return builder__	};prepare,a,builder,from,the,host,port,scheme,context,path,and,servlet,mapping,of,an,http,servlet,request,the,results,may,vary,depending,on,the,type,of,servlet,mapping,used,p,if,the,servlet,is,mapped,by,name,e,g,code,main,the,path,will,end,with,main,if,the,servlet,is,mapped,otherwise,e,g,code,or,code,do,the,result,will,be,the,same,as,if,calling,link,from,context,path,http,servlet,request;public,static,servlet,uri,components,builder,from,servlet,mapping,http,servlet,request,request,servlet,uri,components,builder,builder,from,context,path,request,if,string,utils,has,text,new,url,path,helper,get,path,within,servlet,mapping,request,builder,path,request,get,servlet,path,return,builder
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromServletMapping(HttpServletRequest request);1362408075;Prepare a builder from the host, port, scheme, context path, and_servlet mapping of an HttpServletRequest. The results may vary depending_on the type of servlet mapping used.__<p>If the servlet is mapped by name, e.g. {@code "/main/*"}, the path_will end with "/main". If the servlet is mapped otherwise, e.g._{@code "/"} or {@code "*.do"}, the result will be the same as_if calling {@link #fromContextPath(HttpServletRequest)}.;public static ServletUriComponentsBuilder fromServletMapping(HttpServletRequest request) {_		ServletUriComponentsBuilder builder = fromContextPath(request)__		if (StringUtils.hasText(new UrlPathHelper().getPathWithinServletMapping(request))) {_			builder.path(request.getServletPath())__		}_		return builder__	};prepare,a,builder,from,the,host,port,scheme,context,path,and,servlet,mapping,of,an,http,servlet,request,the,results,may,vary,depending,on,the,type,of,servlet,mapping,used,p,if,the,servlet,is,mapped,by,name,e,g,code,main,the,path,will,end,with,main,if,the,servlet,is,mapped,otherwise,e,g,code,or,code,do,the,result,will,be,the,same,as,if,calling,link,from,context,path,http,servlet,request;public,static,servlet,uri,components,builder,from,servlet,mapping,http,servlet,request,request,servlet,uri,components,builder,builder,from,context,path,request,if,string,utils,has,text,new,url,path,helper,get,path,within,servlet,mapping,request,builder,path,request,get,servlet,path,return,builder
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromServletMapping(HttpServletRequest request);1375199802;Prepare a builder from the host, port, scheme, context path, and_servlet mapping of an HttpServletRequest. The results may vary depending_on the type of servlet mapping used.__<p>If the servlet is mapped by name, e.g. {@code "/main/*"}, the path_will end with "/main". If the servlet is mapped otherwise, e.g._{@code "/"} or {@code "*.do"}, the result will be the same as_if calling {@link #fromContextPath(HttpServletRequest)}.;public static ServletUriComponentsBuilder fromServletMapping(HttpServletRequest request) {_		ServletUriComponentsBuilder builder = fromContextPath(request)__		if (StringUtils.hasText(new UrlPathHelper().getPathWithinServletMapping(request))) {_			builder.path(request.getServletPath())__		}_		return builder__	};prepare,a,builder,from,the,host,port,scheme,context,path,and,servlet,mapping,of,an,http,servlet,request,the,results,may,vary,depending,on,the,type,of,servlet,mapping,used,p,if,the,servlet,is,mapped,by,name,e,g,code,main,the,path,will,end,with,main,if,the,servlet,is,mapped,otherwise,e,g,code,or,code,do,the,result,will,be,the,same,as,if,calling,link,from,context,path,http,servlet,request;public,static,servlet,uri,components,builder,from,servlet,mapping,http,servlet,request,request,servlet,uri,components,builder,builder,from,context,path,request,if,string,utils,has,text,new,url,path,helper,get,path,within,servlet,mapping,request,builder,path,request,get,servlet,path,return,builder
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromServletMapping(HttpServletRequest request);1377797966;Prepare a builder from the host, port, scheme, context path, and_servlet mapping of an HttpServletRequest. The results may vary depending_on the type of servlet mapping used.__<p>If the servlet is mapped by name, e.g. {@code "/main/*"}, the path_will end with "/main". If the servlet is mapped otherwise, e.g._{@code "/"} or {@code "*.do"}, the result will be the same as_if calling {@link #fromContextPath(HttpServletRequest)}.;public static ServletUriComponentsBuilder fromServletMapping(HttpServletRequest request) {_		ServletUriComponentsBuilder builder = fromContextPath(request)__		if (StringUtils.hasText(new UrlPathHelper().getPathWithinServletMapping(request))) {_			builder.path(request.getServletPath())__		}_		return builder__	};prepare,a,builder,from,the,host,port,scheme,context,path,and,servlet,mapping,of,an,http,servlet,request,the,results,may,vary,depending,on,the,type,of,servlet,mapping,used,p,if,the,servlet,is,mapped,by,name,e,g,code,main,the,path,will,end,with,main,if,the,servlet,is,mapped,otherwise,e,g,code,or,code,do,the,result,will,be,the,same,as,if,calling,link,from,context,path,http,servlet,request;public,static,servlet,uri,components,builder,from,servlet,mapping,http,servlet,request,request,servlet,uri,components,builder,builder,from,context,path,request,if,string,utils,has,text,new,url,path,helper,get,path,within,servlet,mapping,request,builder,path,request,get,servlet,path,return,builder
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromServletMapping(HttpServletRequest request);1382387168;Prepare a builder from the host, port, scheme, context path, and_servlet mapping of an HttpServletRequest. The results may vary depending_on the type of servlet mapping used.__<p>If the servlet is mapped by name, e.g. {@code "/main/*"}, the path_will end with "/main". If the servlet is mapped otherwise, e.g._{@code "/"} or {@code "*.do"}, the result will be the same as_if calling {@link #fromContextPath(HttpServletRequest)}.;public static ServletUriComponentsBuilder fromServletMapping(HttpServletRequest request) {_		ServletUriComponentsBuilder builder = fromContextPath(request)__		if (StringUtils.hasText(new UrlPathHelper().getPathWithinServletMapping(request))) {_			builder.path(request.getServletPath())__		}_		return builder__	};prepare,a,builder,from,the,host,port,scheme,context,path,and,servlet,mapping,of,an,http,servlet,request,the,results,may,vary,depending,on,the,type,of,servlet,mapping,used,p,if,the,servlet,is,mapped,by,name,e,g,code,main,the,path,will,end,with,main,if,the,servlet,is,mapped,otherwise,e,g,code,or,code,do,the,result,will,be,the,same,as,if,calling,link,from,context,path,http,servlet,request;public,static,servlet,uri,components,builder,from,servlet,mapping,http,servlet,request,request,servlet,uri,components,builder,builder,from,context,path,request,if,string,utils,has,text,new,url,path,helper,get,path,within,servlet,mapping,request,builder,path,request,get,servlet,path,return,builder
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromServletMapping(HttpServletRequest request);1385423968;Prepare a builder from the host, port, scheme, context path, and_servlet mapping of an HttpServletRequest. The results may vary depending_on the type of servlet mapping used.__<p>If the servlet is mapped by name, e.g. {@code "/main/*"}, the path_will end with "/main". If the servlet is mapped otherwise, e.g._{@code "/"} or {@code "*.do"}, the result will be the same as_if calling {@link #fromContextPath(HttpServletRequest)}.;public static ServletUriComponentsBuilder fromServletMapping(HttpServletRequest request) {_		ServletUriComponentsBuilder builder = fromContextPath(request)__		if (StringUtils.hasText(new UrlPathHelper().getPathWithinServletMapping(request))) {_			builder.path(request.getServletPath())__		}_		return builder__	};prepare,a,builder,from,the,host,port,scheme,context,path,and,servlet,mapping,of,an,http,servlet,request,the,results,may,vary,depending,on,the,type,of,servlet,mapping,used,p,if,the,servlet,is,mapped,by,name,e,g,code,main,the,path,will,end,with,main,if,the,servlet,is,mapped,otherwise,e,g,code,or,code,do,the,result,will,be,the,same,as,if,calling,link,from,context,path,http,servlet,request;public,static,servlet,uri,components,builder,from,servlet,mapping,http,servlet,request,request,servlet,uri,components,builder,builder,from,context,path,request,if,string,utils,has,text,new,url,path,helper,get,path,within,servlet,mapping,request,builder,path,request,get,servlet,path,return,builder
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromServletMapping(HttpServletRequest request);1402540848;Prepare a builder from the host, port, scheme, context path, and_servlet mapping of an HttpServletRequest. The results may vary depending_on the type of servlet mapping used.__<p>If the servlet is mapped by name, e.g. {@code "/main/*"}, the path_will end with "/main". If the servlet is mapped otherwise, e.g._{@code "/"} or {@code "*.do"}, the result will be the same as_if calling {@link #fromContextPath(HttpServletRequest)}.;public static ServletUriComponentsBuilder fromServletMapping(HttpServletRequest request) {_		ServletUriComponentsBuilder builder = fromContextPath(request)__		if (StringUtils.hasText(new UrlPathHelper().getPathWithinServletMapping(request))) {_			builder.path(request.getServletPath())__		}_		return builder__	};prepare,a,builder,from,the,host,port,scheme,context,path,and,servlet,mapping,of,an,http,servlet,request,the,results,may,vary,depending,on,the,type,of,servlet,mapping,used,p,if,the,servlet,is,mapped,by,name,e,g,code,main,the,path,will,end,with,main,if,the,servlet,is,mapped,otherwise,e,g,code,or,code,do,the,result,will,be,the,same,as,if,calling,link,from,context,path,http,servlet,request;public,static,servlet,uri,components,builder,from,servlet,mapping,http,servlet,request,request,servlet,uri,components,builder,builder,from,context,path,request,if,string,utils,has,text,new,url,path,helper,get,path,within,servlet,mapping,request,builder,path,request,get,servlet,path,return,builder
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromServletMapping(HttpServletRequest request);1405032917;Prepare a builder from the host, port, scheme, context path, and_servlet mapping of an HttpServletRequest. The results may vary depending_on the type of servlet mapping used.__<p>If the servlet is mapped by name, e.g. {@code "/main/*"}, the path_will end with "/main". If the servlet is mapped otherwise, e.g._{@code "/"} or {@code "*.do"}, the result will be the same as_if calling {@link #fromContextPath(HttpServletRequest)}.;public static ServletUriComponentsBuilder fromServletMapping(HttpServletRequest request) {_		ServletUriComponentsBuilder builder = fromContextPath(request)__		if (StringUtils.hasText(new UrlPathHelper().getPathWithinServletMapping(request))) {_			builder.path(request.getServletPath())__		}_		return builder__	};prepare,a,builder,from,the,host,port,scheme,context,path,and,servlet,mapping,of,an,http,servlet,request,the,results,may,vary,depending,on,the,type,of,servlet,mapping,used,p,if,the,servlet,is,mapped,by,name,e,g,code,main,the,path,will,end,with,main,if,the,servlet,is,mapped,otherwise,e,g,code,or,code,do,the,result,will,be,the,same,as,if,calling,link,from,context,path,http,servlet,request;public,static,servlet,uri,components,builder,from,servlet,mapping,http,servlet,request,request,servlet,uri,components,builder,builder,from,context,path,request,if,string,utils,has,text,new,url,path,helper,get,path,within,servlet,mapping,request,builder,path,request,get,servlet,path,return,builder
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromServletMapping(HttpServletRequest request);1405084622;Prepare a builder from the host, port, scheme, context path, and_servlet mapping of an HttpServletRequest. The results may vary depending_on the type of servlet mapping used.__<p>If the servlet is mapped by name, e.g. {@code "/main/*"}, the path_will end with "/main". If the servlet is mapped otherwise, e.g._{@code "/"} or {@code "*.do"}, the result will be the same as_if calling {@link #fromContextPath(HttpServletRequest)}.;public static ServletUriComponentsBuilder fromServletMapping(HttpServletRequest request) {_		ServletUriComponentsBuilder builder = fromContextPath(request)__		if (StringUtils.hasText(new UrlPathHelper().getPathWithinServletMapping(request))) {_			builder.path(request.getServletPath())__		}_		return builder__	};prepare,a,builder,from,the,host,port,scheme,context,path,and,servlet,mapping,of,an,http,servlet,request,the,results,may,vary,depending,on,the,type,of,servlet,mapping,used,p,if,the,servlet,is,mapped,by,name,e,g,code,main,the,path,will,end,with,main,if,the,servlet,is,mapped,otherwise,e,g,code,or,code,do,the,result,will,be,the,same,as,if,calling,link,from,context,path,http,servlet,request;public,static,servlet,uri,components,builder,from,servlet,mapping,http,servlet,request,request,servlet,uri,components,builder,builder,from,context,path,request,if,string,utils,has,text,new,url,path,helper,get,path,within,servlet,mapping,request,builder,path,request,get,servlet,path,return,builder
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromServletMapping(HttpServletRequest request);1417632385;Prepare a builder from the host, port, scheme, context path, and_servlet mapping of an HttpServletRequest. The results may vary depending_on the type of servlet mapping used.__<p>If the servlet is mapped by name, e.g. {@code "/main/*"}, the path_will end with "/main". If the servlet is mapped otherwise, e.g._{@code "/"} or {@code "*.do"}, the result will be the same as_if calling {@link #fromContextPath(HttpServletRequest)}.;public static ServletUriComponentsBuilder fromServletMapping(HttpServletRequest request) {_		ServletUriComponentsBuilder builder = fromContextPath(request)__		if (StringUtils.hasText(new UrlPathHelper().getPathWithinServletMapping(request))) {_			builder.path(request.getServletPath())__		}_		return builder__	};prepare,a,builder,from,the,host,port,scheme,context,path,and,servlet,mapping,of,an,http,servlet,request,the,results,may,vary,depending,on,the,type,of,servlet,mapping,used,p,if,the,servlet,is,mapped,by,name,e,g,code,main,the,path,will,end,with,main,if,the,servlet,is,mapped,otherwise,e,g,code,or,code,do,the,result,will,be,the,same,as,if,calling,link,from,context,path,http,servlet,request;public,static,servlet,uri,components,builder,from,servlet,mapping,http,servlet,request,request,servlet,uri,components,builder,builder,from,context,path,request,if,string,utils,has,text,new,url,path,helper,get,path,within,servlet,mapping,request,builder,path,request,get,servlet,path,return,builder
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromServletMapping(HttpServletRequest request);1417706155;Prepare a builder from the host, port, scheme, context path, and_servlet mapping of an HttpServletRequest. The results may vary depending_on the type of servlet mapping used.__<p>If the servlet is mapped by name, e.g. {@code "/main/*"}, the path_will end with "/main". If the servlet is mapped otherwise, e.g._{@code "/"} or {@code "*.do"}, the result will be the same as_if calling {@link #fromContextPath(HttpServletRequest)}.;public static ServletUriComponentsBuilder fromServletMapping(HttpServletRequest request) {_		ServletUriComponentsBuilder builder = fromContextPath(request)__		if (StringUtils.hasText(new UrlPathHelper().getPathWithinServletMapping(request))) {_			builder.path(request.getServletPath())__		}_		return builder__	};prepare,a,builder,from,the,host,port,scheme,context,path,and,servlet,mapping,of,an,http,servlet,request,the,results,may,vary,depending,on,the,type,of,servlet,mapping,used,p,if,the,servlet,is,mapped,by,name,e,g,code,main,the,path,will,end,with,main,if,the,servlet,is,mapped,otherwise,e,g,code,or,code,do,the,result,will,be,the,same,as,if,calling,link,from,context,path,http,servlet,request;public,static,servlet,uri,components,builder,from,servlet,mapping,http,servlet,request,request,servlet,uri,components,builder,builder,from,context,path,request,if,string,utils,has,text,new,url,path,helper,get,path,within,servlet,mapping,request,builder,path,request,get,servlet,path,return,builder
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromServletMapping(HttpServletRequest request);1417707014;Prepare a builder from the host, port, scheme, context path, and_servlet mapping of the given HttpServletRequest.__<p>If the servlet is mapped by name, e.g. {@code "/main/*"}, the path_will end with "/main". If the servlet is mapped otherwise, e.g._{@code "/"} or {@code "*.do"}, the result will be the same as_if calling {@link #fromContextPath(HttpServletRequest)}.;public static ServletUriComponentsBuilder fromServletMapping(HttpServletRequest request) {_		ServletUriComponentsBuilder builder = fromContextPath(request)__		if (StringUtils.hasText(new UrlPathHelper().getPathWithinServletMapping(request))) {_			builder.path(request.getServletPath())__		}_		return builder__	};prepare,a,builder,from,the,host,port,scheme,context,path,and,servlet,mapping,of,the,given,http,servlet,request,p,if,the,servlet,is,mapped,by,name,e,g,code,main,the,path,will,end,with,main,if,the,servlet,is,mapped,otherwise,e,g,code,or,code,do,the,result,will,be,the,same,as,if,calling,link,from,context,path,http,servlet,request;public,static,servlet,uri,components,builder,from,servlet,mapping,http,servlet,request,request,servlet,uri,components,builder,builder,from,context,path,request,if,string,utils,has,text,new,url,path,helper,get,path,within,servlet,mapping,request,builder,path,request,get,servlet,path,return,builder
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromServletMapping(HttpServletRequest request);1417799775;Prepare a builder from the host, port, scheme, context path, and_servlet mapping of the given HttpServletRequest.__<p>If the servlet is mapped by name, e.g. {@code "/main/*"}, the path_will end with "/main". If the servlet is mapped otherwise, e.g._{@code "/"} or {@code "*.do"}, the result will be the same as_if calling {@link #fromContextPath(HttpServletRequest)}.;public static ServletUriComponentsBuilder fromServletMapping(HttpServletRequest request) {_		ServletUriComponentsBuilder builder = fromContextPath(request)__		if (StringUtils.hasText(new UrlPathHelper().getPathWithinServletMapping(request))) {_			builder.path(request.getServletPath())__		}_		return builder__	};prepare,a,builder,from,the,host,port,scheme,context,path,and,servlet,mapping,of,the,given,http,servlet,request,p,if,the,servlet,is,mapped,by,name,e,g,code,main,the,path,will,end,with,main,if,the,servlet,is,mapped,otherwise,e,g,code,or,code,do,the,result,will,be,the,same,as,if,calling,link,from,context,path,http,servlet,request;public,static,servlet,uri,components,builder,from,servlet,mapping,http,servlet,request,request,servlet,uri,components,builder,builder,from,context,path,request,if,string,utils,has,text,new,url,path,helper,get,path,within,servlet,mapping,request,builder,path,request,get,servlet,path,return,builder
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromServletMapping(HttpServletRequest request);1422572109;Prepare a builder from the host, port, scheme, context path, and_servlet mapping of the given HttpServletRequest.__<p>If the servlet is mapped by name, e.g. {@code "/main/*"}, the path_will end with "/main". If the servlet is mapped otherwise, e.g._{@code "/"} or {@code "*.do"}, the result will be the same as_if calling {@link #fromContextPath(HttpServletRequest)}.;public static ServletUriComponentsBuilder fromServletMapping(HttpServletRequest request) {_		ServletUriComponentsBuilder builder = fromContextPath(request)__		if (StringUtils.hasText(new UrlPathHelper().getPathWithinServletMapping(request))) {_			builder.path(request.getServletPath())__		}_		return builder__	};prepare,a,builder,from,the,host,port,scheme,context,path,and,servlet,mapping,of,the,given,http,servlet,request,p,if,the,servlet,is,mapped,by,name,e,g,code,main,the,path,will,end,with,main,if,the,servlet,is,mapped,otherwise,e,g,code,or,code,do,the,result,will,be,the,same,as,if,calling,link,from,context,path,http,servlet,request;public,static,servlet,uri,components,builder,from,servlet,mapping,http,servlet,request,request,servlet,uri,components,builder,builder,from,context,path,request,if,string,utils,has,text,new,url,path,helper,get,path,within,servlet,mapping,request,builder,path,request,get,servlet,path,return,builder
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromServletMapping(HttpServletRequest request);1423547594;Prepare a builder from the host, port, scheme, context path, and_servlet mapping of the given HttpServletRequest.__<p>If the servlet is mapped by name, e.g. {@code "/main/*"}, the path_will end with "/main". If the servlet is mapped otherwise, e.g._{@code "/"} or {@code "*.do"}, the result will be the same as_if calling {@link #fromContextPath(HttpServletRequest)}.;public static ServletUriComponentsBuilder fromServletMapping(HttpServletRequest request) {_		ServletUriComponentsBuilder builder = fromContextPath(request)__		if (StringUtils.hasText(new UrlPathHelper().getPathWithinServletMapping(request))) {_			builder.path(request.getServletPath())__		}_		return builder__	};prepare,a,builder,from,the,host,port,scheme,context,path,and,servlet,mapping,of,the,given,http,servlet,request,p,if,the,servlet,is,mapped,by,name,e,g,code,main,the,path,will,end,with,main,if,the,servlet,is,mapped,otherwise,e,g,code,or,code,do,the,result,will,be,the,same,as,if,calling,link,from,context,path,http,servlet,request;public,static,servlet,uri,components,builder,from,servlet,mapping,http,servlet,request,request,servlet,uri,components,builder,builder,from,context,path,request,if,string,utils,has,text,new,url,path,helper,get,path,within,servlet,mapping,request,builder,path,request,get,servlet,path,return,builder
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromServletMapping(HttpServletRequest request);1424272588;Prepare a builder from the host, port, scheme, context path, and_servlet mapping of the given HttpServletRequest._<p>If the servlet is mapped by name, e.g. {@code "/main/*"}, the path_will end with "/main". If the servlet is mapped otherwise, e.g._{@code "/"} or {@code "*.do"}, the result will be the same as_if calling {@link #fromContextPath(HttpServletRequest)}.;public static ServletUriComponentsBuilder fromServletMapping(HttpServletRequest request) {_		ServletUriComponentsBuilder builder = fromContextPath(request)__		if (StringUtils.hasText(new UrlPathHelper().getPathWithinServletMapping(request))) {_			builder.path(request.getServletPath())__		}_		return builder__	};prepare,a,builder,from,the,host,port,scheme,context,path,and,servlet,mapping,of,the,given,http,servlet,request,p,if,the,servlet,is,mapped,by,name,e,g,code,main,the,path,will,end,with,main,if,the,servlet,is,mapped,otherwise,e,g,code,or,code,do,the,result,will,be,the,same,as,if,calling,link,from,context,path,http,servlet,request;public,static,servlet,uri,components,builder,from,servlet,mapping,http,servlet,request,request,servlet,uri,components,builder,builder,from,context,path,request,if,string,utils,has,text,new,url,path,helper,get,path,within,servlet,mapping,request,builder,path,request,get,servlet,path,return,builder
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromServletMapping(HttpServletRequest request);1426553101;Prepare a builder from the host, port, scheme, context path, and_servlet mapping of the given HttpServletRequest._<p>If the servlet is mapped by name, e.g. {@code "/main/*"}, the path_will end with "/main". If the servlet is mapped otherwise, e.g._{@code "/"} or {@code "*.do"}, the result will be the same as_if calling {@link #fromContextPath(HttpServletRequest)}.;public static ServletUriComponentsBuilder fromServletMapping(HttpServletRequest request) {_		ServletUriComponentsBuilder builder = fromContextPath(request)__		if (StringUtils.hasText(new UrlPathHelper().getPathWithinServletMapping(request))) {_			builder.path(request.getServletPath())__		}_		return builder__	};prepare,a,builder,from,the,host,port,scheme,context,path,and,servlet,mapping,of,the,given,http,servlet,request,p,if,the,servlet,is,mapped,by,name,e,g,code,main,the,path,will,end,with,main,if,the,servlet,is,mapped,otherwise,e,g,code,or,code,do,the,result,will,be,the,same,as,if,calling,link,from,context,path,http,servlet,request;public,static,servlet,uri,components,builder,from,servlet,mapping,http,servlet,request,request,servlet,uri,components,builder,builder,from,context,path,request,if,string,utils,has,text,new,url,path,helper,get,path,within,servlet,mapping,request,builder,path,request,get,servlet,path,return,builder
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromServletMapping(HttpServletRequest request);1458830024;Prepare a builder from the host, port, scheme, context path, and_servlet mapping of the given HttpServletRequest._<p>If the servlet is mapped by name, e.g. {@code "/main/*"}, the path_will end with "/main". If the servlet is mapped otherwise, e.g._{@code "/"} or {@code "*.do"}, the result will be the same as_if calling {@link #fromContextPath(HttpServletRequest)}.;public static ServletUriComponentsBuilder fromServletMapping(HttpServletRequest request) {_		ServletUriComponentsBuilder builder = fromContextPath(request)__		if (StringUtils.hasText(new UrlPathHelper().getPathWithinServletMapping(request))) {_			builder.path(request.getServletPath())__		}_		return builder__	};prepare,a,builder,from,the,host,port,scheme,context,path,and,servlet,mapping,of,the,given,http,servlet,request,p,if,the,servlet,is,mapped,by,name,e,g,code,main,the,path,will,end,with,main,if,the,servlet,is,mapped,otherwise,e,g,code,or,code,do,the,result,will,be,the,same,as,if,calling,link,from,context,path,http,servlet,request;public,static,servlet,uri,components,builder,from,servlet,mapping,http,servlet,request,request,servlet,uri,components,builder,builder,from,context,path,request,if,string,utils,has,text,new,url,path,helper,get,path,within,servlet,mapping,request,builder,path,request,get,servlet,path,return,builder
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromServletMapping(HttpServletRequest request);1466187642;Prepare a builder from the host, port, scheme, context path, and_servlet mapping of the given HttpServletRequest._<p>If the servlet is mapped by name, e.g. {@code "/main/*"}, the path_will end with "/main". If the servlet is mapped otherwise, e.g._{@code "/"} or {@code "*.do"}, the result will be the same as_if calling {@link #fromContextPath(HttpServletRequest)}.;public static ServletUriComponentsBuilder fromServletMapping(HttpServletRequest request) {_		ServletUriComponentsBuilder builder = fromContextPath(request)__		if (StringUtils.hasText(new UrlPathHelper().getPathWithinServletMapping(request))) {_			builder.path(request.getServletPath())__		}_		return builder__	};prepare,a,builder,from,the,host,port,scheme,context,path,and,servlet,mapping,of,the,given,http,servlet,request,p,if,the,servlet,is,mapped,by,name,e,g,code,main,the,path,will,end,with,main,if,the,servlet,is,mapped,otherwise,e,g,code,or,code,do,the,result,will,be,the,same,as,if,calling,link,from,context,path,http,servlet,request;public,static,servlet,uri,components,builder,from,servlet,mapping,http,servlet,request,request,servlet,uri,components,builder,builder,from,context,path,request,if,string,utils,has,text,new,url,path,helper,get,path,within,servlet,mapping,request,builder,path,request,get,servlet,path,return,builder
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromServletMapping(HttpServletRequest request);1468963833;Prepare a builder from the host, port, scheme, context path, and_servlet mapping of the given HttpServletRequest._<p>If the servlet is mapped by name, e.g. {@code "/main/*"}, the path_will end with "/main". If the servlet is mapped otherwise, e.g._{@code "/"} or {@code "*.do"}, the result will be the same as_if calling {@link #fromContextPath(HttpServletRequest)}.;public static ServletUriComponentsBuilder fromServletMapping(HttpServletRequest request) {_		ServletUriComponentsBuilder builder = fromContextPath(request)__		if (StringUtils.hasText(new UrlPathHelper().getPathWithinServletMapping(request))) {_			builder.path(request.getServletPath())__		}_		return builder__	};prepare,a,builder,from,the,host,port,scheme,context,path,and,servlet,mapping,of,the,given,http,servlet,request,p,if,the,servlet,is,mapped,by,name,e,g,code,main,the,path,will,end,with,main,if,the,servlet,is,mapped,otherwise,e,g,code,or,code,do,the,result,will,be,the,same,as,if,calling,link,from,context,path,http,servlet,request;public,static,servlet,uri,components,builder,from,servlet,mapping,http,servlet,request,request,servlet,uri,components,builder,builder,from,context,path,request,if,string,utils,has,text,new,url,path,helper,get,path,within,servlet,mapping,request,builder,path,request,get,servlet,path,return,builder
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromServletMapping(HttpServletRequest request);1485810955;Prepare a builder from the host, port, scheme, context path, and_servlet mapping of the given HttpServletRequest._<p>If the servlet is mapped by name, e.g. {@code "/main/*"}, the path_will end with "/main". If the servlet is mapped otherwise, e.g._{@code "/"} or {@code "*.do"}, the result will be the same as_if calling {@link #fromContextPath(HttpServletRequest)}.;public static ServletUriComponentsBuilder fromServletMapping(HttpServletRequest request) {_		ServletUriComponentsBuilder builder = fromContextPath(request)__		if (StringUtils.hasText(new UrlPathHelper().getPathWithinServletMapping(request))) {_			builder.path(request.getServletPath())__		}_		return builder__	};prepare,a,builder,from,the,host,port,scheme,context,path,and,servlet,mapping,of,the,given,http,servlet,request,p,if,the,servlet,is,mapped,by,name,e,g,code,main,the,path,will,end,with,main,if,the,servlet,is,mapped,otherwise,e,g,code,or,code,do,the,result,will,be,the,same,as,if,calling,link,from,context,path,http,servlet,request;public,static,servlet,uri,components,builder,from,servlet,mapping,http,servlet,request,request,servlet,uri,components,builder,builder,from,context,path,request,if,string,utils,has,text,new,url,path,helper,get,path,within,servlet,mapping,request,builder,path,request,get,servlet,path,return,builder
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromServletMapping(HttpServletRequest request);1495868221;Prepare a builder from the host, port, scheme, context path, and_servlet mapping of the given HttpServletRequest._<p>If the servlet is mapped by name, e.g. {@code "/main/*"}, the path_will end with "/main". If the servlet is mapped otherwise, e.g._{@code "/"} or {@code "*.do"}, the result will be the same as_if calling {@link #fromContextPath(HttpServletRequest)}.;public static ServletUriComponentsBuilder fromServletMapping(HttpServletRequest request) {_		ServletUriComponentsBuilder builder = fromContextPath(request)__		if (StringUtils.hasText(new UrlPathHelper().getPathWithinServletMapping(request))) {_			builder.path(request.getServletPath())__		}_		return builder__	};prepare,a,builder,from,the,host,port,scheme,context,path,and,servlet,mapping,of,the,given,http,servlet,request,p,if,the,servlet,is,mapped,by,name,e,g,code,main,the,path,will,end,with,main,if,the,servlet,is,mapped,otherwise,e,g,code,or,code,do,the,result,will,be,the,same,as,if,calling,link,from,context,path,http,servlet,request;public,static,servlet,uri,components,builder,from,servlet,mapping,http,servlet,request,request,servlet,uri,components,builder,builder,from,context,path,request,if,string,utils,has,text,new,url,path,helper,get,path,within,servlet,mapping,request,builder,path,request,get,servlet,path,return,builder
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromServletMapping(HttpServletRequest request);1496370972;Prepare a builder from the host, port, scheme, context path, and_servlet mapping of the given HttpServletRequest._<p>If the servlet is mapped by name, e.g. {@code "/main/*"}, the path_will end with "/main". If the servlet is mapped otherwise, e.g._{@code "/"} or {@code "*.do"}, the result will be the same as_if calling {@link #fromContextPath(HttpServletRequest)}.__<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs.;public static ServletUriComponentsBuilder fromServletMapping(HttpServletRequest request) {_		ServletUriComponentsBuilder builder = fromContextPath(request)__		if (StringUtils.hasText(new UrlPathHelper().getPathWithinServletMapping(request))) {_			builder.path(request.getServletPath())__		}_		return builder__	};prepare,a,builder,from,the,host,port,scheme,context,path,and,servlet,mapping,of,the,given,http,servlet,request,p,if,the,servlet,is,mapped,by,name,e,g,code,main,the,path,will,end,with,main,if,the,servlet,is,mapped,otherwise,e,g,code,or,code,do,the,result,will,be,the,same,as,if,calling,link,from,context,path,http,servlet,request,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs;public,static,servlet,uri,components,builder,from,servlet,mapping,http,servlet,request,request,servlet,uri,components,builder,builder,from,context,path,request,if,string,utils,has,text,new,url,path,helper,get,path,within,servlet,mapping,request,builder,path,request,get,servlet,path,return,builder
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromServletMapping(HttpServletRequest request);1496837955;Prepare a builder from the host, port, scheme, context path, and_servlet mapping of the given HttpServletRequest._<p>If the servlet is mapped by name, e.g. {@code "/main/*"}, the path_will end with "/main". If the servlet is mapped otherwise, e.g._{@code "/"} or {@code "*.do"}, the result will be the same as_if calling {@link #fromContextPath(HttpServletRequest)}._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs.;public static ServletUriComponentsBuilder fromServletMapping(HttpServletRequest request) {_		ServletUriComponentsBuilder builder = fromContextPath(request)__		if (StringUtils.hasText(new UrlPathHelper().getPathWithinServletMapping(request))) {_			builder.path(request.getServletPath())__		}_		return builder__	};prepare,a,builder,from,the,host,port,scheme,context,path,and,servlet,mapping,of,the,given,http,servlet,request,p,if,the,servlet,is,mapped,by,name,e,g,code,main,the,path,will,end,with,main,if,the,servlet,is,mapped,otherwise,e,g,code,or,code,do,the,result,will,be,the,same,as,if,calling,link,from,context,path,http,servlet,request,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs;public,static,servlet,uri,components,builder,from,servlet,mapping,http,servlet,request,request,servlet,uri,components,builder,builder,from,context,path,request,if,string,utils,has,text,new,url,path,helper,get,path,within,servlet,mapping,request,builder,path,request,get,servlet,path,return,builder
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromServletMapping(HttpServletRequest request);1498780456;Prepare a builder from the host, port, scheme, context path, and_servlet mapping of the given HttpServletRequest._<p>If the servlet is mapped by name, e.g. {@code "/main/*"}, the path_will end with "/main". If the servlet is mapped otherwise, e.g._{@code "/"} or {@code "*.do"}, the result will be the same as_if calling {@link #fromContextPath(HttpServletRequest)}._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs.;public static ServletUriComponentsBuilder fromServletMapping(HttpServletRequest request) {_		ServletUriComponentsBuilder builder = fromContextPath(request)__		if (StringUtils.hasText(new UrlPathHelper().getPathWithinServletMapping(request))) {_			builder.path(request.getServletPath())__		}_		return builder__	};prepare,a,builder,from,the,host,port,scheme,context,path,and,servlet,mapping,of,the,given,http,servlet,request,p,if,the,servlet,is,mapped,by,name,e,g,code,main,the,path,will,end,with,main,if,the,servlet,is,mapped,otherwise,e,g,code,or,code,do,the,result,will,be,the,same,as,if,calling,link,from,context,path,http,servlet,request,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs;public,static,servlet,uri,components,builder,from,servlet,mapping,http,servlet,request,request,servlet,uri,components,builder,builder,from,context,path,request,if,string,utils,has,text,new,url,path,helper,get,path,within,servlet,mapping,request,builder,path,request,get,servlet,path,return,builder
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromServletMapping(HttpServletRequest request);1522354261;Prepare a builder from the host, port, scheme, context path, and_servlet mapping of the given HttpServletRequest._<p>If the servlet is mapped by name, e.g. {@code "/main/*"}, the path_will end with "/main". If the servlet is mapped otherwise, e.g._{@code "/"} or {@code "*.do"}, the result will be the same as_if calling {@link #fromContextPath(HttpServletRequest)}._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs.;public static ServletUriComponentsBuilder fromServletMapping(HttpServletRequest request) {_		ServletUriComponentsBuilder builder = fromContextPath(request)__		if (StringUtils.hasText(new UrlPathHelper().getPathWithinServletMapping(request))) {_			builder.path(request.getServletPath())__		}_		return builder__	};prepare,a,builder,from,the,host,port,scheme,context,path,and,servlet,mapping,of,the,given,http,servlet,request,p,if,the,servlet,is,mapped,by,name,e,g,code,main,the,path,will,end,with,main,if,the,servlet,is,mapped,otherwise,e,g,code,or,code,do,the,result,will,be,the,same,as,if,calling,link,from,context,path,http,servlet,request,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs;public,static,servlet,uri,components,builder,from,servlet,mapping,http,servlet,request,request,servlet,uri,components,builder,builder,from,context,path,request,if,string,utils,has,text,new,url,path,helper,get,path,within,servlet,mapping,request,builder,path,request,get,servlet,path,return,builder
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromServletMapping(HttpServletRequest request);1522361849;Prepare a builder from the host, port, scheme, context path, and_servlet mapping of the given HttpServletRequest._<p>If the servlet is mapped by name, e.g. {@code "/main/*"}, the path_will end with "/main". If the servlet is mapped otherwise, e.g._{@code "/"} or {@code "*.do"}, the result will be the same as_if calling {@link #fromContextPath(HttpServletRequest)}.__<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs.__<p>As of 4.3.15, this method replaces the contextPath with the value_of "X-Forwarded-Prefix" rather than prepending, thus aligning with_{@code ForwardedHeaderFiller}.;public static ServletUriComponentsBuilder fromServletMapping(HttpServletRequest request) {_		ServletUriComponentsBuilder builder = fromContextPath(request)__		if (StringUtils.hasText(new UrlPathHelper().getPathWithinServletMapping(request))) {_			builder.path(request.getServletPath())__		}_		return builder__	};prepare,a,builder,from,the,host,port,scheme,context,path,and,servlet,mapping,of,the,given,http,servlet,request,p,if,the,servlet,is,mapped,by,name,e,g,code,main,the,path,will,end,with,main,if,the,servlet,is,mapped,otherwise,e,g,code,or,code,do,the,result,will,be,the,same,as,if,calling,link,from,context,path,http,servlet,request,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,p,as,of,4,3,15,this,method,replaces,the,context,path,with,the,value,of,x,forwarded,prefix,rather,than,prepending,thus,aligning,with,code,forwarded,header,filler;public,static,servlet,uri,components,builder,from,servlet,mapping,http,servlet,request,request,servlet,uri,components,builder,builder,from,context,path,request,if,string,utils,has,text,new,url,path,helper,get,path,within,servlet,mapping,request,builder,path,request,get,servlet,path,return,builder
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromServletMapping(HttpServletRequest request);1526045499;Prepare a builder from the host, port, scheme, context path, and_servlet mapping of the given HttpServletRequest._<p>If the servlet is mapped by name, e.g. {@code "/main/*"}, the path_will end with "/main". If the servlet is mapped otherwise, e.g._{@code "/"} or {@code "*.do"}, the result will be the same as_if calling {@link #fromContextPath(HttpServletRequest)}.__<p><strong>Note:</strong> as of 5.1 this method ignores_{@code "Forwarded"} and {@code "X-Forwarded-*"} headers that specify the_client-originated address. Consider using the {@code ForwardedHeaderFilter}_to extract and use, or to discard such headers.;public static ServletUriComponentsBuilder fromServletMapping(HttpServletRequest request) {_		ServletUriComponentsBuilder builder = fromContextPath(request)__		if (StringUtils.hasText(new UrlPathHelper().getPathWithinServletMapping(request))) {_			builder.path(request.getServletPath())__		}_		return builder__	};prepare,a,builder,from,the,host,port,scheme,context,path,and,servlet,mapping,of,the,given,http,servlet,request,p,if,the,servlet,is,mapped,by,name,e,g,code,main,the,path,will,end,with,main,if,the,servlet,is,mapped,otherwise,e,g,code,or,code,do,the,result,will,be,the,same,as,if,calling,link,from,context,path,http,servlet,request,p,strong,note,strong,as,of,5,1,this,method,ignores,code,forwarded,and,code,x,forwarded,headers,that,specify,the,client,originated,address,consider,using,the,code,forwarded,header,filter,to,extract,and,use,or,to,discard,such,headers;public,static,servlet,uri,components,builder,from,servlet,mapping,http,servlet,request,request,servlet,uri,components,builder,builder,from,context,path,request,if,string,utils,has,text,new,url,path,helper,get,path,within,servlet,mapping,request,builder,path,request,get,servlet,path,return,builder
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromServletMapping(HttpServletRequest request);1536336006;Prepare a builder from the host, port, scheme, context path, and_servlet mapping of the given HttpServletRequest._<p>If the servlet is mapped by name, e.g. {@code "/main/*"}, the path_will end with "/main". If the servlet is mapped otherwise, e.g._{@code "/"} or {@code "*.do"}, the result will be the same as_if calling {@link #fromContextPath(HttpServletRequest)}.__<p><strong>Note:</strong> as of 5.1 this method ignores_{@code "Forwarded"} and {@code "X-Forwarded-*"} headers that specify the_client-originated address. Consider using the {@code ForwardedHeaderFilter}_to extract and use, or to discard such headers.;public static ServletUriComponentsBuilder fromServletMapping(HttpServletRequest request) {_		ServletUriComponentsBuilder builder = fromContextPath(request)__		if (StringUtils.hasText(new UrlPathHelper().getPathWithinServletMapping(request))) {_			builder.path(request.getServletPath())__		}_		return builder__	};prepare,a,builder,from,the,host,port,scheme,context,path,and,servlet,mapping,of,the,given,http,servlet,request,p,if,the,servlet,is,mapped,by,name,e,g,code,main,the,path,will,end,with,main,if,the,servlet,is,mapped,otherwise,e,g,code,or,code,do,the,result,will,be,the,same,as,if,calling,link,from,context,path,http,servlet,request,p,strong,note,strong,as,of,5,1,this,method,ignores,code,forwarded,and,code,x,forwarded,headers,that,specify,the,client,originated,address,consider,using,the,code,forwarded,header,filter,to,extract,and,use,or,to,discard,such,headers;public,static,servlet,uri,components,builder,from,servlet,mapping,http,servlet,request,request,servlet,uri,components,builder,builder,from,context,path,request,if,string,utils,has,text,new,url,path,helper,get,path,within,servlet,mapping,request,builder,path,request,get,servlet,path,return,builder
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromServletMapping(HttpServletRequest request);1536336678;Prepare a builder from the host, port, scheme, context path, and_servlet mapping of the given HttpServletRequest._<p>If the servlet is mapped by name, e.g. {@code "/main/*"}, the path_will end with "/main". If the servlet is mapped otherwise, e.g._{@code "/"} or {@code "*.do"}, the result will be the same as_if calling {@link #fromContextPath(HttpServletRequest)}._<p><strong>Note:</strong> As of 5.1, this method ignores_{@code "Forwarded"} and {@code "X-Forwarded-*"} headers that specify the_client-originated address. Consider using the {@code ForwardedHeaderFilter}_to extract and use, or to discard such headers.;public static ServletUriComponentsBuilder fromServletMapping(HttpServletRequest request) {_		ServletUriComponentsBuilder builder = fromContextPath(request)__		if (StringUtils.hasText(new UrlPathHelper().getPathWithinServletMapping(request))) {_			builder.path(request.getServletPath())__		}_		return builder__	};prepare,a,builder,from,the,host,port,scheme,context,path,and,servlet,mapping,of,the,given,http,servlet,request,p,if,the,servlet,is,mapped,by,name,e,g,code,main,the,path,will,end,with,main,if,the,servlet,is,mapped,otherwise,e,g,code,or,code,do,the,result,will,be,the,same,as,if,calling,link,from,context,path,http,servlet,request,p,strong,note,strong,as,of,5,1,this,method,ignores,code,forwarded,and,code,x,forwarded,headers,that,specify,the,client,originated,address,consider,using,the,code,forwarded,header,filter,to,extract,and,use,or,to,discard,such,headers;public,static,servlet,uri,components,builder,from,servlet,mapping,http,servlet,request,request,servlet,uri,components,builder,builder,from,context,path,request,if,string,utils,has,text,new,url,path,helper,get,path,within,servlet,mapping,request,builder,path,request,get,servlet,path,return,builder
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromServletMapping(HttpServletRequest request);1539118301;Prepare a builder from the host, port, scheme, context path, and_servlet mapping of the given HttpServletRequest._<p>If the servlet is mapped by name, e.g. {@code "/main/*"}, the path_will end with "/main". If the servlet is mapped otherwise, e.g._{@code "/"} or {@code "*.do"}, the result will be the same as_if calling {@link #fromContextPath(HttpServletRequest)}.;public static ServletUriComponentsBuilder fromServletMapping(HttpServletRequest request) {_		ServletUriComponentsBuilder builder = fromContextPath(request)__		if (StringUtils.hasText(new UrlPathHelper().getPathWithinServletMapping(request))) {_			builder.path(request.getServletPath())__		}_		return builder__	};prepare,a,builder,from,the,host,port,scheme,context,path,and,servlet,mapping,of,the,given,http,servlet,request,p,if,the,servlet,is,mapped,by,name,e,g,code,main,the,path,will,end,with,main,if,the,servlet,is,mapped,otherwise,e,g,code,or,code,do,the,result,will,be,the,same,as,if,calling,link,from,context,path,http,servlet,request;public,static,servlet,uri,components,builder,from,servlet,mapping,http,servlet,request,request,servlet,uri,components,builder,builder,from,context,path,request,if,string,utils,has,text,new,url,path,helper,get,path,within,servlet,mapping,request,builder,path,request,get,servlet,path,return,builder
ServletUriComponentsBuilder -> private static ServletUriComponentsBuilder initFromRequest(HttpServletRequest request);1417707014;Initialize a builder with a scheme, host,and port (but not path and query).;private static ServletUriComponentsBuilder initFromRequest(HttpServletRequest request) {_		String scheme = request.getScheme()__		String host = request.getServerName()__		int port = request.getServerPort()___		String hostHeader = request.getHeader("X-Forwarded-Host")__		if (StringUtils.hasText(hostHeader)) {_			String[] hosts = StringUtils.commaDelimitedListToStringArray(hostHeader)__			String hostToUse = hosts[0]__			if (hostToUse.contains(":")) {_				String[] hostAndPort = StringUtils.split(hostToUse, ":")__				host  = hostAndPort[0]__				port = Integer.parseInt(hostAndPort[1])__			}_			else {_				host = hostToUse__				port = -1__			}_		}__		String portHeader = request.getHeader("X-Forwarded-Port")__		if (StringUtils.hasText(portHeader)) {_			port = Integer.parseInt(portHeader)__		}__		String protocolHeader = request.getHeader("X-Forwarded-Proto")__		if (StringUtils.hasText(protocolHeader)) {_			scheme = protocolHeader__		}__		ServletUriComponentsBuilder builder = new ServletUriComponentsBuilder()__		builder.scheme(scheme)__		builder.host(host)__		if (scheme.equals("http") && port != 80 || scheme.equals("https") && port != 443) {_			builder.port(port)__		}_		return builder__	};initialize,a,builder,with,a,scheme,host,and,port,but,not,path,and,query;private,static,servlet,uri,components,builder,init,from,request,http,servlet,request,request,string,scheme,request,get,scheme,string,host,request,get,server,name,int,port,request,get,server,port,string,host,header,request,get,header,x,forwarded,host,if,string,utils,has,text,host,header,string,hosts,string,utils,comma,delimited,list,to,string,array,host,header,string,host,to,use,hosts,0,if,host,to,use,contains,string,host,and,port,string,utils,split,host,to,use,host,host,and,port,0,port,integer,parse,int,host,and,port,1,else,host,host,to,use,port,1,string,port,header,request,get,header,x,forwarded,port,if,string,utils,has,text,port,header,port,integer,parse,int,port,header,string,protocol,header,request,get,header,x,forwarded,proto,if,string,utils,has,text,protocol,header,scheme,protocol,header,servlet,uri,components,builder,builder,new,servlet,uri,components,builder,builder,scheme,scheme,builder,host,host,if,scheme,equals,http,port,80,scheme,equals,https,port,443,builder,port,port,return,builder
ServletUriComponentsBuilder -> private static ServletUriComponentsBuilder initFromRequest(HttpServletRequest request);1417799775;Initialize a builder with a scheme, host,and port (but not path and query).;private static ServletUriComponentsBuilder initFromRequest(HttpServletRequest request) {_		String scheme = request.getScheme()__		String host = request.getServerName()__		int port = request.getServerPort()___		String hostHeader = request.getHeader("X-Forwarded-Host")__		if (StringUtils.hasText(hostHeader)) {_			String[] hosts = StringUtils.commaDelimitedListToStringArray(hostHeader)__			String hostToUse = hosts[0]__			if (hostToUse.contains(":")) {_				String[] hostAndPort = StringUtils.split(hostToUse, ":")__				host  = hostAndPort[0]__				port = Integer.parseInt(hostAndPort[1])__			}_			else {_				host = hostToUse__				port = -1__			}_		}__		String portHeader = request.getHeader("X-Forwarded-Port")__		if (StringUtils.hasText(portHeader)) {_			port = Integer.parseInt(portHeader)__		}__		String protocolHeader = request.getHeader("X-Forwarded-Proto")__		if (StringUtils.hasText(protocolHeader)) {_			scheme = protocolHeader__		}__		ServletUriComponentsBuilder builder = new ServletUriComponentsBuilder()__		builder.scheme(scheme)__		builder.host(host)__		if (scheme.equals("http") && port != 80 || scheme.equals("https") && port != 443) {_			builder.port(port)__		}_		return builder__	};initialize,a,builder,with,a,scheme,host,and,port,but,not,path,and,query;private,static,servlet,uri,components,builder,init,from,request,http,servlet,request,request,string,scheme,request,get,scheme,string,host,request,get,server,name,int,port,request,get,server,port,string,host,header,request,get,header,x,forwarded,host,if,string,utils,has,text,host,header,string,hosts,string,utils,comma,delimited,list,to,string,array,host,header,string,host,to,use,hosts,0,if,host,to,use,contains,string,host,and,port,string,utils,split,host,to,use,host,host,and,port,0,port,integer,parse,int,host,and,port,1,else,host,host,to,use,port,1,string,port,header,request,get,header,x,forwarded,port,if,string,utils,has,text,port,header,port,integer,parse,int,port,header,string,protocol,header,request,get,header,x,forwarded,proto,if,string,utils,has,text,protocol,header,scheme,protocol,header,servlet,uri,components,builder,builder,new,servlet,uri,components,builder,builder,scheme,scheme,builder,host,host,if,scheme,equals,http,port,80,scheme,equals,https,port,443,builder,port,port,return,builder
ServletUriComponentsBuilder -> private static ServletUriComponentsBuilder initFromRequest(HttpServletRequest request);1422572109;Initialize a builder with a scheme, host,and port (but not path and query).;private static ServletUriComponentsBuilder initFromRequest(HttpServletRequest request) {_		String scheme = request.getScheme()__		String host = request.getServerName()__		int port = request.getServerPort()___		String hostHeader = request.getHeader("X-Forwarded-Host")__		if (StringUtils.hasText(hostHeader)) {_			String[] hosts = StringUtils.commaDelimitedListToStringArray(hostHeader)__			String hostToUse = hosts[0]__			if (hostToUse.contains(":")) {_				String[] hostAndPort = StringUtils.split(hostToUse, ":")__				host  = hostAndPort[0]__				port = Integer.parseInt(hostAndPort[1])__			}_			else {_				host = hostToUse__				port = -1__			}_		}__		String portHeader = request.getHeader("X-Forwarded-Port")__		if (StringUtils.hasText(portHeader)) {_			port = Integer.parseInt(portHeader)__		}__		String protocolHeader = request.getHeader("X-Forwarded-Proto")__		if (StringUtils.hasText(protocolHeader)) {_			scheme = protocolHeader__		}__		ServletUriComponentsBuilder builder = new ServletUriComponentsBuilder()__		builder.scheme(scheme)__		builder.host(host)__		if (scheme.equals("http") && port != 80 || scheme.equals("https") && port != 443) {_			builder.port(port)__		}_		return builder__	};initialize,a,builder,with,a,scheme,host,and,port,but,not,path,and,query;private,static,servlet,uri,components,builder,init,from,request,http,servlet,request,request,string,scheme,request,get,scheme,string,host,request,get,server,name,int,port,request,get,server,port,string,host,header,request,get,header,x,forwarded,host,if,string,utils,has,text,host,header,string,hosts,string,utils,comma,delimited,list,to,string,array,host,header,string,host,to,use,hosts,0,if,host,to,use,contains,string,host,and,port,string,utils,split,host,to,use,host,host,and,port,0,port,integer,parse,int,host,and,port,1,else,host,host,to,use,port,1,string,port,header,request,get,header,x,forwarded,port,if,string,utils,has,text,port,header,port,integer,parse,int,port,header,string,protocol,header,request,get,header,x,forwarded,proto,if,string,utils,has,text,protocol,header,scheme,protocol,header,servlet,uri,components,builder,builder,new,servlet,uri,components,builder,builder,scheme,scheme,builder,host,host,if,scheme,equals,http,port,80,scheme,equals,https,port,443,builder,port,port,return,builder
ServletUriComponentsBuilder -> private static ServletUriComponentsBuilder initFromRequest(HttpServletRequest request);1423547594;Initialize a builder with a scheme, host,and port (but not path and query).;private static ServletUriComponentsBuilder initFromRequest(HttpServletRequest request) {_		HttpRequest httpRequest = new ServletServerHttpRequest(request)__		UriComponents uriComponents = UriComponentsBuilder.fromHttpRequest(httpRequest).build()__		String scheme = uriComponents.getScheme()__		String host = uriComponents.getHost()__		int port = uriComponents.getPort()___		ServletUriComponentsBuilder builder = new ServletUriComponentsBuilder()__		builder.scheme(scheme)__		builder.host(host)__		if (scheme.equals("http") && port != 80 || scheme.equals("https") && port != 443) {_			builder.port(port)__		}_		return builder__	};initialize,a,builder,with,a,scheme,host,and,port,but,not,path,and,query;private,static,servlet,uri,components,builder,init,from,request,http,servlet,request,request,http,request,http,request,new,servlet,server,http,request,request,uri,components,uri,components,uri,components,builder,from,http,request,http,request,build,string,scheme,uri,components,get,scheme,string,host,uri,components,get,host,int,port,uri,components,get,port,servlet,uri,components,builder,builder,new,servlet,uri,components,builder,builder,scheme,scheme,builder,host,host,if,scheme,equals,http,port,80,scheme,equals,https,port,443,builder,port,port,return,builder
ServletUriComponentsBuilder -> private static ServletUriComponentsBuilder initFromRequest(HttpServletRequest request);1424272588;Initialize a builder with a scheme, host,and port (but not path and query).;private static ServletUriComponentsBuilder initFromRequest(HttpServletRequest request) {_		HttpRequest httpRequest = new ServletServerHttpRequest(request)__		UriComponents uriComponents = UriComponentsBuilder.fromHttpRequest(httpRequest).build()__		String scheme = uriComponents.getScheme()__		String host = uriComponents.getHost()__		int port = uriComponents.getPort()___		ServletUriComponentsBuilder builder = new ServletUriComponentsBuilder()__		builder.scheme(scheme)__		builder.host(host)__		if (("http".equals(scheme) && port != 80) || ("https".equals(scheme) && port != 443)) {_			builder.port(port)__		}_		return builder__	};initialize,a,builder,with,a,scheme,host,and,port,but,not,path,and,query;private,static,servlet,uri,components,builder,init,from,request,http,servlet,request,request,http,request,http,request,new,servlet,server,http,request,request,uri,components,uri,components,uri,components,builder,from,http,request,http,request,build,string,scheme,uri,components,get,scheme,string,host,uri,components,get,host,int,port,uri,components,get,port,servlet,uri,components,builder,builder,new,servlet,uri,components,builder,builder,scheme,scheme,builder,host,host,if,http,equals,scheme,port,80,https,equals,scheme,port,443,builder,port,port,return,builder
ServletUriComponentsBuilder -> private static ServletUriComponentsBuilder initFromRequest(HttpServletRequest request);1426553101;Initialize a builder with a scheme, host,and port (but not path and query).;private static ServletUriComponentsBuilder initFromRequest(HttpServletRequest request) {_		HttpRequest httpRequest = new ServletServerHttpRequest(request)__		UriComponents uriComponents = UriComponentsBuilder.fromHttpRequest(httpRequest).build()__		String scheme = uriComponents.getScheme()__		String host = uriComponents.getHost()__		int port = uriComponents.getPort()___		ServletUriComponentsBuilder builder = new ServletUriComponentsBuilder()__		builder.scheme(scheme)__		builder.host(host)__		if (("http".equals(scheme) && port != 80) || ("https".equals(scheme) && port != 443)) {_			builder.port(port)__		}_		return builder__	};initialize,a,builder,with,a,scheme,host,and,port,but,not,path,and,query;private,static,servlet,uri,components,builder,init,from,request,http,servlet,request,request,http,request,http,request,new,servlet,server,http,request,request,uri,components,uri,components,uri,components,builder,from,http,request,http,request,build,string,scheme,uri,components,get,scheme,string,host,uri,components,get,host,int,port,uri,components,get,port,servlet,uri,components,builder,builder,new,servlet,uri,components,builder,builder,scheme,scheme,builder,host,host,if,http,equals,scheme,port,80,https,equals,scheme,port,443,builder,port,port,return,builder
ServletUriComponentsBuilder -> private static ServletUriComponentsBuilder initFromRequest(HttpServletRequest request);1458830024;Initialize a builder with a scheme, host,and port (but not path and query).;private static ServletUriComponentsBuilder initFromRequest(HttpServletRequest request) {_		HttpRequest httpRequest = new ServletServerHttpRequest(request)__		UriComponents uriComponents = UriComponentsBuilder.fromHttpRequest(httpRequest).build()__		String scheme = uriComponents.getScheme()__		String host = uriComponents.getHost()__		int port = uriComponents.getPort()___		ServletUriComponentsBuilder builder = new ServletUriComponentsBuilder()__		builder.scheme(scheme)__		builder.host(host)__		if (("http".equals(scheme) && port != 80) || ("https".equals(scheme) && port != 443)) {_			builder.port(port)__		}_		return builder__	};initialize,a,builder,with,a,scheme,host,and,port,but,not,path,and,query;private,static,servlet,uri,components,builder,init,from,request,http,servlet,request,request,http,request,http,request,new,servlet,server,http,request,request,uri,components,uri,components,uri,components,builder,from,http,request,http,request,build,string,scheme,uri,components,get,scheme,string,host,uri,components,get,host,int,port,uri,components,get,port,servlet,uri,components,builder,builder,new,servlet,uri,components,builder,builder,scheme,scheme,builder,host,host,if,http,equals,scheme,port,80,https,equals,scheme,port,443,builder,port,port,return,builder
ServletUriComponentsBuilder -> private static ServletUriComponentsBuilder initFromRequest(HttpServletRequest request);1466187642;Initialize a builder with a scheme, host,and port (but not path and query).;private static ServletUriComponentsBuilder initFromRequest(HttpServletRequest request) {_		HttpRequest httpRequest = new ServletServerHttpRequest(request)__		UriComponents uriComponents = UriComponentsBuilder.fromHttpRequest(httpRequest).build()__		String scheme = uriComponents.getScheme()__		String host = uriComponents.getHost()__		int port = uriComponents.getPort()___		ServletUriComponentsBuilder builder = new ServletUriComponentsBuilder()__		builder.scheme(scheme)__		builder.host(host)__		if (("http".equals(scheme) && port != 80) || ("https".equals(scheme) && port != 443)) {_			builder.port(port)__		}_		return builder__	};initialize,a,builder,with,a,scheme,host,and,port,but,not,path,and,query;private,static,servlet,uri,components,builder,init,from,request,http,servlet,request,request,http,request,http,request,new,servlet,server,http,request,request,uri,components,uri,components,uri,components,builder,from,http,request,http,request,build,string,scheme,uri,components,get,scheme,string,host,uri,components,get,host,int,port,uri,components,get,port,servlet,uri,components,builder,builder,new,servlet,uri,components,builder,builder,scheme,scheme,builder,host,host,if,http,equals,scheme,port,80,https,equals,scheme,port,443,builder,port,port,return,builder
ServletUriComponentsBuilder -> private static ServletUriComponentsBuilder initFromRequest(HttpServletRequest request);1468963833;Initialize a builder with a scheme, host,and port (but not path and query).;private static ServletUriComponentsBuilder initFromRequest(HttpServletRequest request) {_		HttpRequest httpRequest = new ServletServerHttpRequest(request)__		UriComponents uriComponents = UriComponentsBuilder.fromHttpRequest(httpRequest).build()__		String scheme = uriComponents.getScheme()__		String host = uriComponents.getHost()__		int port = uriComponents.getPort()___		ServletUriComponentsBuilder builder = new ServletUriComponentsBuilder()__		builder.scheme(scheme)__		builder.host(host)__		if (("http".equals(scheme) && port != 80) || ("https".equals(scheme) && port != 443)) {_			builder.port(port)__		}_		return builder__	};initialize,a,builder,with,a,scheme,host,and,port,but,not,path,and,query;private,static,servlet,uri,components,builder,init,from,request,http,servlet,request,request,http,request,http,request,new,servlet,server,http,request,request,uri,components,uri,components,uri,components,builder,from,http,request,http,request,build,string,scheme,uri,components,get,scheme,string,host,uri,components,get,host,int,port,uri,components,get,port,servlet,uri,components,builder,builder,new,servlet,uri,components,builder,builder,scheme,scheme,builder,host,host,if,http,equals,scheme,port,80,https,equals,scheme,port,443,builder,port,port,return,builder
ServletUriComponentsBuilder -> private static ServletUriComponentsBuilder initFromRequest(HttpServletRequest request);1485810955;Initialize a builder with a scheme, host,and port (but not path and query).;private static ServletUriComponentsBuilder initFromRequest(HttpServletRequest request) {_		HttpRequest httpRequest = new ServletServerHttpRequest(request)__		UriComponents uriComponents = UriComponentsBuilder.fromHttpRequest(httpRequest).build()__		String scheme = uriComponents.getScheme()__		String host = uriComponents.getHost()__		int port = uriComponents.getPort()___		ServletUriComponentsBuilder builder = new ServletUriComponentsBuilder()__		builder.scheme(scheme)__		builder.host(host)__		if (("http".equals(scheme) && port != 80) || ("https".equals(scheme) && port != 443)) {_			builder.port(port)__		}_		return builder__	};initialize,a,builder,with,a,scheme,host,and,port,but,not,path,and,query;private,static,servlet,uri,components,builder,init,from,request,http,servlet,request,request,http,request,http,request,new,servlet,server,http,request,request,uri,components,uri,components,uri,components,builder,from,http,request,http,request,build,string,scheme,uri,components,get,scheme,string,host,uri,components,get,host,int,port,uri,components,get,port,servlet,uri,components,builder,builder,new,servlet,uri,components,builder,builder,scheme,scheme,builder,host,host,if,http,equals,scheme,port,80,https,equals,scheme,port,443,builder,port,port,return,builder
ServletUriComponentsBuilder -> private static ServletUriComponentsBuilder initFromRequest(HttpServletRequest request);1495868221;Initialize a builder with a scheme, host,and port (but not path and query).;private static ServletUriComponentsBuilder initFromRequest(HttpServletRequest request) {_		HttpRequest httpRequest = new ServletServerHttpRequest(request)__		UriComponents uriComponents = UriComponentsBuilder.fromHttpRequest(httpRequest).build()__		String scheme = uriComponents.getScheme()__		String host = uriComponents.getHost()__		int port = uriComponents.getPort()___		ServletUriComponentsBuilder builder = new ServletUriComponentsBuilder()__		builder.scheme(scheme)__		builder.host(host)__		if (("http".equals(scheme) && port != 80) || ("https".equals(scheme) && port != 443)) {_			builder.port(port)__		}_		return builder__	};initialize,a,builder,with,a,scheme,host,and,port,but,not,path,and,query;private,static,servlet,uri,components,builder,init,from,request,http,servlet,request,request,http,request,http,request,new,servlet,server,http,request,request,uri,components,uri,components,uri,components,builder,from,http,request,http,request,build,string,scheme,uri,components,get,scheme,string,host,uri,components,get,host,int,port,uri,components,get,port,servlet,uri,components,builder,builder,new,servlet,uri,components,builder,builder,scheme,scheme,builder,host,host,if,http,equals,scheme,port,80,https,equals,scheme,port,443,builder,port,port,return,builder
ServletUriComponentsBuilder -> private static ServletUriComponentsBuilder initFromRequest(HttpServletRequest request);1496370972;Initialize a builder with a scheme, host,and port (but not path and query).;private static ServletUriComponentsBuilder initFromRequest(HttpServletRequest request) {_		HttpRequest httpRequest = new ServletServerHttpRequest(request)__		UriComponents uriComponents = UriComponentsBuilder.fromHttpRequest(httpRequest).build()__		String scheme = uriComponents.getScheme()__		String host = uriComponents.getHost()__		int port = uriComponents.getPort()___		ServletUriComponentsBuilder builder = new ServletUriComponentsBuilder()__		builder.scheme(scheme)__		builder.host(host)__		if (("http".equals(scheme) && port != 80) || ("https".equals(scheme) && port != 443)) {_			builder.port(port)__		}_		return builder__	};initialize,a,builder,with,a,scheme,host,and,port,but,not,path,and,query;private,static,servlet,uri,components,builder,init,from,request,http,servlet,request,request,http,request,http,request,new,servlet,server,http,request,request,uri,components,uri,components,uri,components,builder,from,http,request,http,request,build,string,scheme,uri,components,get,scheme,string,host,uri,components,get,host,int,port,uri,components,get,port,servlet,uri,components,builder,builder,new,servlet,uri,components,builder,builder,scheme,scheme,builder,host,host,if,http,equals,scheme,port,80,https,equals,scheme,port,443,builder,port,port,return,builder
ServletUriComponentsBuilder -> private static ServletUriComponentsBuilder initFromRequest(HttpServletRequest request);1496837955;Initialize a builder with a scheme, host,and port (but not path and query).;private static ServletUriComponentsBuilder initFromRequest(HttpServletRequest request) {_		HttpRequest httpRequest = new ServletServerHttpRequest(request)__		UriComponents uriComponents = UriComponentsBuilder.fromHttpRequest(httpRequest).build()__		String scheme = uriComponents.getScheme()__		String host = uriComponents.getHost()__		int port = uriComponents.getPort()___		ServletUriComponentsBuilder builder = new ServletUriComponentsBuilder()__		builder.scheme(scheme)__		builder.host(host)__		if (("http".equals(scheme) && port != 80) || ("https".equals(scheme) && port != 443)) {_			builder.port(port)__		}_		return builder__	};initialize,a,builder,with,a,scheme,host,and,port,but,not,path,and,query;private,static,servlet,uri,components,builder,init,from,request,http,servlet,request,request,http,request,http,request,new,servlet,server,http,request,request,uri,components,uri,components,uri,components,builder,from,http,request,http,request,build,string,scheme,uri,components,get,scheme,string,host,uri,components,get,host,int,port,uri,components,get,port,servlet,uri,components,builder,builder,new,servlet,uri,components,builder,builder,scheme,scheme,builder,host,host,if,http,equals,scheme,port,80,https,equals,scheme,port,443,builder,port,port,return,builder
ServletUriComponentsBuilder -> private static ServletUriComponentsBuilder initFromRequest(HttpServletRequest request);1498780456;Initialize a builder with a scheme, host,and port (but not path and query).;private static ServletUriComponentsBuilder initFromRequest(HttpServletRequest request) {_		HttpRequest httpRequest = new ServletServerHttpRequest(request)__		UriComponents uriComponents = UriComponentsBuilder.fromHttpRequest(httpRequest).build()__		String scheme = uriComponents.getScheme()__		String host = uriComponents.getHost()__		int port = uriComponents.getPort()___		ServletUriComponentsBuilder builder = new ServletUriComponentsBuilder()__		builder.scheme(scheme)__		builder.host(host)__		if (("http".equals(scheme) && port != 80) || ("https".equals(scheme) && port != 443)) {_			builder.port(port)__		}_		return builder__	};initialize,a,builder,with,a,scheme,host,and,port,but,not,path,and,query;private,static,servlet,uri,components,builder,init,from,request,http,servlet,request,request,http,request,http,request,new,servlet,server,http,request,request,uri,components,uri,components,uri,components,builder,from,http,request,http,request,build,string,scheme,uri,components,get,scheme,string,host,uri,components,get,host,int,port,uri,components,get,port,servlet,uri,components,builder,builder,new,servlet,uri,components,builder,builder,scheme,scheme,builder,host,host,if,http,equals,scheme,port,80,https,equals,scheme,port,443,builder,port,port,return,builder
ServletUriComponentsBuilder -> private static ServletUriComponentsBuilder initFromRequest(HttpServletRequest request);1522354261;Initialize a builder with a scheme, host,and port (but not path and query).;private static ServletUriComponentsBuilder initFromRequest(HttpServletRequest request) {_		HttpRequest httpRequest = new ServletServerHttpRequest(request)__		UriComponents uriComponents = UriComponentsBuilder.fromHttpRequest(httpRequest).build()__		String scheme = uriComponents.getScheme()__		String host = uriComponents.getHost()__		int port = uriComponents.getPort()___		ServletUriComponentsBuilder builder = new ServletUriComponentsBuilder()__		builder.scheme(scheme)__		builder.host(host)__		if (("http".equals(scheme) && port != 80) || ("https".equals(scheme) && port != 443)) {_			builder.port(port)__		}_		return builder__	};initialize,a,builder,with,a,scheme,host,and,port,but,not,path,and,query;private,static,servlet,uri,components,builder,init,from,request,http,servlet,request,request,http,request,http,request,new,servlet,server,http,request,request,uri,components,uri,components,uri,components,builder,from,http,request,http,request,build,string,scheme,uri,components,get,scheme,string,host,uri,components,get,host,int,port,uri,components,get,port,servlet,uri,components,builder,builder,new,servlet,uri,components,builder,builder,scheme,scheme,builder,host,host,if,http,equals,scheme,port,80,https,equals,scheme,port,443,builder,port,port,return,builder
ServletUriComponentsBuilder -> private static ServletUriComponentsBuilder initFromRequest(HttpServletRequest request);1522361849;Initialize a builder with a scheme, host,and port (but not path and query).;private static ServletUriComponentsBuilder initFromRequest(HttpServletRequest request) {_		HttpRequest httpRequest = new ServletServerHttpRequest(request)__		UriComponents uriComponents = UriComponentsBuilder.fromHttpRequest(httpRequest).build()__		String scheme = uriComponents.getScheme()__		String host = uriComponents.getHost()__		int port = uriComponents.getPort()___		ServletUriComponentsBuilder builder = new ServletUriComponentsBuilder()__		builder.scheme(scheme)__		builder.host(host)__		if (("http".equals(scheme) && port != 80) || ("https".equals(scheme) && port != 443)) {_			builder.port(port)__		}_		return builder__	};initialize,a,builder,with,a,scheme,host,and,port,but,not,path,and,query;private,static,servlet,uri,components,builder,init,from,request,http,servlet,request,request,http,request,http,request,new,servlet,server,http,request,request,uri,components,uri,components,uri,components,builder,from,http,request,http,request,build,string,scheme,uri,components,get,scheme,string,host,uri,components,get,host,int,port,uri,components,get,port,servlet,uri,components,builder,builder,new,servlet,uri,components,builder,builder,scheme,scheme,builder,host,host,if,http,equals,scheme,port,80,https,equals,scheme,port,443,builder,port,port,return,builder
ServletUriComponentsBuilder -> private static ServletUriComponentsBuilder initFromRequest(HttpServletRequest request);1526045499;Initialize a builder with a scheme, host,and port (but not path and query).;private static ServletUriComponentsBuilder initFromRequest(HttpServletRequest request) {_		String scheme = request.getScheme()__		String host = request.getServerName()__		int port = request.getServerPort()___		ServletUriComponentsBuilder builder = new ServletUriComponentsBuilder()__		builder.scheme(scheme)__		builder.host(host)__		if (("http".equals(scheme) && port != 80) || ("https".equals(scheme) && port != 443)) {_			builder.port(port)__		}_		return builder__	};initialize,a,builder,with,a,scheme,host,and,port,but,not,path,and,query;private,static,servlet,uri,components,builder,init,from,request,http,servlet,request,request,string,scheme,request,get,scheme,string,host,request,get,server,name,int,port,request,get,server,port,servlet,uri,components,builder,builder,new,servlet,uri,components,builder,builder,scheme,scheme,builder,host,host,if,http,equals,scheme,port,80,https,equals,scheme,port,443,builder,port,port,return,builder
ServletUriComponentsBuilder -> private static ServletUriComponentsBuilder initFromRequest(HttpServletRequest request);1536336006;Initialize a builder with a scheme, host,and port (but not path and query).;private static ServletUriComponentsBuilder initFromRequest(HttpServletRequest request) {_		String scheme = request.getScheme()__		String host = request.getServerName()__		int port = request.getServerPort()___		ServletUriComponentsBuilder builder = new ServletUriComponentsBuilder()__		builder.scheme(scheme)__		builder.host(host)__		if (("http".equals(scheme) && port != 80) || ("https".equals(scheme) && port != 443)) {_			builder.port(port)__		}_		return builder__	};initialize,a,builder,with,a,scheme,host,and,port,but,not,path,and,query;private,static,servlet,uri,components,builder,init,from,request,http,servlet,request,request,string,scheme,request,get,scheme,string,host,request,get,server,name,int,port,request,get,server,port,servlet,uri,components,builder,builder,new,servlet,uri,components,builder,builder,scheme,scheme,builder,host,host,if,http,equals,scheme,port,80,https,equals,scheme,port,443,builder,port,port,return,builder
ServletUriComponentsBuilder -> private static ServletUriComponentsBuilder initFromRequest(HttpServletRequest request);1536336678;Initialize a builder with a scheme, host,and port (but not path and query).;private static ServletUriComponentsBuilder initFromRequest(HttpServletRequest request) {_		String scheme = request.getScheme()__		String host = request.getServerName()__		int port = request.getServerPort()___		ServletUriComponentsBuilder builder = new ServletUriComponentsBuilder()__		builder.scheme(scheme)__		builder.host(host)__		if (("http".equals(scheme) && port != 80) || ("https".equals(scheme) && port != 443)) {_			builder.port(port)__		}_		return builder__	};initialize,a,builder,with,a,scheme,host,and,port,but,not,path,and,query;private,static,servlet,uri,components,builder,init,from,request,http,servlet,request,request,string,scheme,request,get,scheme,string,host,request,get,server,name,int,port,request,get,server,port,servlet,uri,components,builder,builder,new,servlet,uri,components,builder,builder,scheme,scheme,builder,host,host,if,http,equals,scheme,port,80,https,equals,scheme,port,443,builder,port,port,return,builder
ServletUriComponentsBuilder -> private static ServletUriComponentsBuilder initFromRequest(HttpServletRequest request);1539118301;Initialize a builder with a scheme, host,and port (but not path and query).;private static ServletUriComponentsBuilder initFromRequest(HttpServletRequest request) {_		String scheme = request.getScheme()__		String host = request.getServerName()__		int port = request.getServerPort()___		ServletUriComponentsBuilder builder = new ServletUriComponentsBuilder()__		builder.scheme(scheme)__		builder.host(host)__		if (("http".equals(scheme) && port != 80) || ("https".equals(scheme) && port != 443)) {_			builder.port(port)__		}_		return builder__	};initialize,a,builder,with,a,scheme,host,and,port,but,not,path,and,query;private,static,servlet,uri,components,builder,init,from,request,http,servlet,request,request,string,scheme,request,get,scheme,string,host,request,get,server,name,int,port,request,get,server,port,servlet,uri,components,builder,builder,new,servlet,uri,components,builder,builder,scheme,scheme,builder,host,host,if,http,equals,scheme,port,80,https,equals,scheme,port,443,builder,port,port,return,builder
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromCurrentServletMapping();1328020251;Equivalent to {@link #fromServletMapping(HttpServletRequest)} except the_request is obtained via {@link RequestContextHolder}.;public static ServletUriComponentsBuilder fromCurrentServletMapping() {_		return fromServletMapping(getCurrentRequest())__	};equivalent,to,link,from,servlet,mapping,http,servlet,request,except,the,request,is,obtained,via,link,request,context,holder;public,static,servlet,uri,components,builder,from,current,servlet,mapping,return,from,servlet,mapping,get,current,request
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromCurrentServletMapping();1329142650;Same as {@link #fromServletMapping(HttpServletRequest)} except the_request is obtained through {@link RequestContextHolder}.;public static ServletUriComponentsBuilder fromCurrentServletMapping() {_		return fromServletMapping(getCurrentRequest())__	};same,as,link,from,servlet,mapping,http,servlet,request,except,the,request,is,obtained,through,link,request,context,holder;public,static,servlet,uri,components,builder,from,current,servlet,mapping,return,from,servlet,mapping,get,current,request
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromCurrentServletMapping();1362408075;Same as {@link #fromServletMapping(HttpServletRequest)} except the_request is obtained through {@link RequestContextHolder}.;public static ServletUriComponentsBuilder fromCurrentServletMapping() {_		return fromServletMapping(getCurrentRequest())__	};same,as,link,from,servlet,mapping,http,servlet,request,except,the,request,is,obtained,through,link,request,context,holder;public,static,servlet,uri,components,builder,from,current,servlet,mapping,return,from,servlet,mapping,get,current,request
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromCurrentServletMapping();1375199802;Same as {@link #fromServletMapping(HttpServletRequest)} except the_request is obtained through {@link RequestContextHolder}.;public static ServletUriComponentsBuilder fromCurrentServletMapping() {_		return fromServletMapping(getCurrentRequest())__	};same,as,link,from,servlet,mapping,http,servlet,request,except,the,request,is,obtained,through,link,request,context,holder;public,static,servlet,uri,components,builder,from,current,servlet,mapping,return,from,servlet,mapping,get,current,request
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromCurrentServletMapping();1377797966;Same as {@link #fromServletMapping(HttpServletRequest)} except the_request is obtained through {@link RequestContextHolder}.;public static ServletUriComponentsBuilder fromCurrentServletMapping() {_		return fromServletMapping(getCurrentRequest())__	};same,as,link,from,servlet,mapping,http,servlet,request,except,the,request,is,obtained,through,link,request,context,holder;public,static,servlet,uri,components,builder,from,current,servlet,mapping,return,from,servlet,mapping,get,current,request
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromCurrentServletMapping();1382387168;Same as {@link #fromServletMapping(HttpServletRequest)} except the_request is obtained through {@link RequestContextHolder}.;public static ServletUriComponentsBuilder fromCurrentServletMapping() {_		return fromServletMapping(getCurrentRequest())__	};same,as,link,from,servlet,mapping,http,servlet,request,except,the,request,is,obtained,through,link,request,context,holder;public,static,servlet,uri,components,builder,from,current,servlet,mapping,return,from,servlet,mapping,get,current,request
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromCurrentServletMapping();1385423968;Same as {@link #fromServletMapping(HttpServletRequest)} except the_request is obtained through {@link RequestContextHolder}.;public static ServletUriComponentsBuilder fromCurrentServletMapping() {_		return fromServletMapping(getCurrentRequest())__	};same,as,link,from,servlet,mapping,http,servlet,request,except,the,request,is,obtained,through,link,request,context,holder;public,static,servlet,uri,components,builder,from,current,servlet,mapping,return,from,servlet,mapping,get,current,request
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromCurrentServletMapping();1402540848;Same as {@link #fromServletMapping(HttpServletRequest)} except the_request is obtained through {@link RequestContextHolder}.;public static ServletUriComponentsBuilder fromCurrentServletMapping() {_		return fromServletMapping(getCurrentRequest())__	};same,as,link,from,servlet,mapping,http,servlet,request,except,the,request,is,obtained,through,link,request,context,holder;public,static,servlet,uri,components,builder,from,current,servlet,mapping,return,from,servlet,mapping,get,current,request
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromCurrentServletMapping();1405032917;Same as {@link #fromServletMapping(HttpServletRequest)} except the_request is obtained through {@link RequestContextHolder}.;public static ServletUriComponentsBuilder fromCurrentServletMapping() {_		return fromServletMapping(getCurrentRequest())__	};same,as,link,from,servlet,mapping,http,servlet,request,except,the,request,is,obtained,through,link,request,context,holder;public,static,servlet,uri,components,builder,from,current,servlet,mapping,return,from,servlet,mapping,get,current,request
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromCurrentServletMapping();1405084622;Same as {@link #fromServletMapping(HttpServletRequest)} except the_request is obtained through {@link RequestContextHolder}.;public static ServletUriComponentsBuilder fromCurrentServletMapping() {_		return fromServletMapping(getCurrentRequest())__	};same,as,link,from,servlet,mapping,http,servlet,request,except,the,request,is,obtained,through,link,request,context,holder;public,static,servlet,uri,components,builder,from,current,servlet,mapping,return,from,servlet,mapping,get,current,request
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromCurrentServletMapping();1417632385;Same as {@link #fromServletMapping(HttpServletRequest)} except the_request is obtained through {@link RequestContextHolder}.;public static ServletUriComponentsBuilder fromCurrentServletMapping() {_		return fromServletMapping(getCurrentRequest())__	};same,as,link,from,servlet,mapping,http,servlet,request,except,the,request,is,obtained,through,link,request,context,holder;public,static,servlet,uri,components,builder,from,current,servlet,mapping,return,from,servlet,mapping,get,current,request
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromCurrentServletMapping();1417706155;Same as {@link #fromServletMapping(HttpServletRequest)} except the_request is obtained through {@link RequestContextHolder}.;public static ServletUriComponentsBuilder fromCurrentServletMapping() {_		return fromServletMapping(getCurrentRequest())__	};same,as,link,from,servlet,mapping,http,servlet,request,except,the,request,is,obtained,through,link,request,context,holder;public,static,servlet,uri,components,builder,from,current,servlet,mapping,return,from,servlet,mapping,get,current,request
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromCurrentServletMapping();1417707014;Same as {@link #fromServletMapping(HttpServletRequest)} except the_request is obtained through {@link RequestContextHolder}.;public static ServletUriComponentsBuilder fromCurrentServletMapping() {_		return fromServletMapping(getCurrentRequest())__	};same,as,link,from,servlet,mapping,http,servlet,request,except,the,request,is,obtained,through,link,request,context,holder;public,static,servlet,uri,components,builder,from,current,servlet,mapping,return,from,servlet,mapping,get,current,request
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromCurrentServletMapping();1417799775;Same as {@link #fromServletMapping(HttpServletRequest)} except the_request is obtained through {@link RequestContextHolder}.;public static ServletUriComponentsBuilder fromCurrentServletMapping() {_		return fromServletMapping(getCurrentRequest())__	};same,as,link,from,servlet,mapping,http,servlet,request,except,the,request,is,obtained,through,link,request,context,holder;public,static,servlet,uri,components,builder,from,current,servlet,mapping,return,from,servlet,mapping,get,current,request
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromCurrentServletMapping();1422572109;Same as {@link #fromServletMapping(HttpServletRequest)} except the_request is obtained through {@link RequestContextHolder}.;public static ServletUriComponentsBuilder fromCurrentServletMapping() {_		return fromServletMapping(getCurrentRequest())__	};same,as,link,from,servlet,mapping,http,servlet,request,except,the,request,is,obtained,through,link,request,context,holder;public,static,servlet,uri,components,builder,from,current,servlet,mapping,return,from,servlet,mapping,get,current,request
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromCurrentServletMapping();1423547594;Same as {@link #fromServletMapping(HttpServletRequest)} except the_request is obtained through {@link RequestContextHolder}.;public static ServletUriComponentsBuilder fromCurrentServletMapping() {_		return fromServletMapping(getCurrentRequest())__	};same,as,link,from,servlet,mapping,http,servlet,request,except,the,request,is,obtained,through,link,request,context,holder;public,static,servlet,uri,components,builder,from,current,servlet,mapping,return,from,servlet,mapping,get,current,request
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromCurrentServletMapping();1424272588;Same as {@link #fromServletMapping(HttpServletRequest)} except the_request is obtained through {@link RequestContextHolder}.;public static ServletUriComponentsBuilder fromCurrentServletMapping() {_		return fromServletMapping(getCurrentRequest())__	};same,as,link,from,servlet,mapping,http,servlet,request,except,the,request,is,obtained,through,link,request,context,holder;public,static,servlet,uri,components,builder,from,current,servlet,mapping,return,from,servlet,mapping,get,current,request
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromCurrentServletMapping();1426553101;Same as {@link #fromServletMapping(HttpServletRequest)} except the_request is obtained through {@link RequestContextHolder}.;public static ServletUriComponentsBuilder fromCurrentServletMapping() {_		return fromServletMapping(getCurrentRequest())__	};same,as,link,from,servlet,mapping,http,servlet,request,except,the,request,is,obtained,through,link,request,context,holder;public,static,servlet,uri,components,builder,from,current,servlet,mapping,return,from,servlet,mapping,get,current,request
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromCurrentServletMapping();1458830024;Same as {@link #fromServletMapping(HttpServletRequest)} except the_request is obtained through {@link RequestContextHolder}.;public static ServletUriComponentsBuilder fromCurrentServletMapping() {_		return fromServletMapping(getCurrentRequest())__	};same,as,link,from,servlet,mapping,http,servlet,request,except,the,request,is,obtained,through,link,request,context,holder;public,static,servlet,uri,components,builder,from,current,servlet,mapping,return,from,servlet,mapping,get,current,request
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromCurrentServletMapping();1466187642;Same as {@link #fromServletMapping(HttpServletRequest)} except the_request is obtained through {@link RequestContextHolder}.;public static ServletUriComponentsBuilder fromCurrentServletMapping() {_		return fromServletMapping(getCurrentRequest())__	};same,as,link,from,servlet,mapping,http,servlet,request,except,the,request,is,obtained,through,link,request,context,holder;public,static,servlet,uri,components,builder,from,current,servlet,mapping,return,from,servlet,mapping,get,current,request
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromCurrentServletMapping();1468963833;Same as {@link #fromServletMapping(HttpServletRequest)} except the_request is obtained through {@link RequestContextHolder}.;public static ServletUriComponentsBuilder fromCurrentServletMapping() {_		return fromServletMapping(getCurrentRequest())__	};same,as,link,from,servlet,mapping,http,servlet,request,except,the,request,is,obtained,through,link,request,context,holder;public,static,servlet,uri,components,builder,from,current,servlet,mapping,return,from,servlet,mapping,get,current,request
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromCurrentServletMapping();1485810955;Same as {@link #fromServletMapping(HttpServletRequest)} except the_request is obtained through {@link RequestContextHolder}.;public static ServletUriComponentsBuilder fromCurrentServletMapping() {_		return fromServletMapping(getCurrentRequest())__	};same,as,link,from,servlet,mapping,http,servlet,request,except,the,request,is,obtained,through,link,request,context,holder;public,static,servlet,uri,components,builder,from,current,servlet,mapping,return,from,servlet,mapping,get,current,request
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromCurrentServletMapping();1495868221;Same as {@link #fromServletMapping(HttpServletRequest)} except the_request is obtained through {@link RequestContextHolder}.;public static ServletUriComponentsBuilder fromCurrentServletMapping() {_		return fromServletMapping(getCurrentRequest())__	};same,as,link,from,servlet,mapping,http,servlet,request,except,the,request,is,obtained,through,link,request,context,holder;public,static,servlet,uri,components,builder,from,current,servlet,mapping,return,from,servlet,mapping,get,current,request
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromCurrentServletMapping();1496370972;Same as {@link #fromServletMapping(HttpServletRequest)} except the_request is obtained through {@link RequestContextHolder}.__<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs.;public static ServletUriComponentsBuilder fromCurrentServletMapping() {_		return fromServletMapping(getCurrentRequest())__	};same,as,link,from,servlet,mapping,http,servlet,request,except,the,request,is,obtained,through,link,request,context,holder,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs;public,static,servlet,uri,components,builder,from,current,servlet,mapping,return,from,servlet,mapping,get,current,request
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromCurrentServletMapping();1496837955;Same as {@link #fromServletMapping(HttpServletRequest)} except the_request is obtained through {@link RequestContextHolder}._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs.;public static ServletUriComponentsBuilder fromCurrentServletMapping() {_		return fromServletMapping(getCurrentRequest())__	};same,as,link,from,servlet,mapping,http,servlet,request,except,the,request,is,obtained,through,link,request,context,holder,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs;public,static,servlet,uri,components,builder,from,current,servlet,mapping,return,from,servlet,mapping,get,current,request
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromCurrentServletMapping();1498780456;Same as {@link #fromServletMapping(HttpServletRequest)} except the_request is obtained through {@link RequestContextHolder}._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs.;public static ServletUriComponentsBuilder fromCurrentServletMapping() {_		return fromServletMapping(getCurrentRequest())__	};same,as,link,from,servlet,mapping,http,servlet,request,except,the,request,is,obtained,through,link,request,context,holder,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs;public,static,servlet,uri,components,builder,from,current,servlet,mapping,return,from,servlet,mapping,get,current,request
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromCurrentServletMapping();1522354261;Same as {@link #fromServletMapping(HttpServletRequest)} except the_request is obtained through {@link RequestContextHolder}._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs.;public static ServletUriComponentsBuilder fromCurrentServletMapping() {_		return fromServletMapping(getCurrentRequest())__	};same,as,link,from,servlet,mapping,http,servlet,request,except,the,request,is,obtained,through,link,request,context,holder,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs;public,static,servlet,uri,components,builder,from,current,servlet,mapping,return,from,servlet,mapping,get,current,request
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromCurrentServletMapping();1522361849;Same as {@link #fromServletMapping(HttpServletRequest)} except the_request is obtained through {@link RequestContextHolder}.__<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs.__<p>As of 4.3.15, this method replaces the contextPath with the value_of "X-Forwarded-Prefix" rather than prepending, thus aligning with_{@code ForwardedHeaderFiller}.;public static ServletUriComponentsBuilder fromCurrentServletMapping() {_		return fromServletMapping(getCurrentRequest())__	};same,as,link,from,servlet,mapping,http,servlet,request,except,the,request,is,obtained,through,link,request,context,holder,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,p,as,of,4,3,15,this,method,replaces,the,context,path,with,the,value,of,x,forwarded,prefix,rather,than,prepending,thus,aligning,with,code,forwarded,header,filler;public,static,servlet,uri,components,builder,from,current,servlet,mapping,return,from,servlet,mapping,get,current,request
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromCurrentServletMapping();1526045499;Same as {@link #fromServletMapping(HttpServletRequest)} except the_request is obtained through {@link RequestContextHolder}.__<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs.__<p>As of 4.3.15, this method replaces the contextPath with the value_of "X-Forwarded-Prefix" rather than prepending, thus aligning with_{@code ForwardedHeaderFiller}.;public static ServletUriComponentsBuilder fromCurrentServletMapping() {_		return fromServletMapping(getCurrentRequest())__	};same,as,link,from,servlet,mapping,http,servlet,request,except,the,request,is,obtained,through,link,request,context,holder,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,p,as,of,4,3,15,this,method,replaces,the,context,path,with,the,value,of,x,forwarded,prefix,rather,than,prepending,thus,aligning,with,code,forwarded,header,filler;public,static,servlet,uri,components,builder,from,current,servlet,mapping,return,from,servlet,mapping,get,current,request
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromCurrentServletMapping();1536336006;Same as {@link #fromServletMapping(HttpServletRequest)} except the_request is obtained through {@link RequestContextHolder}.__<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs.__<p>As of 4.3.15, this method replaces the contextPath with the value_of "X-Forwarded-Prefix" rather than prepending, thus aligning with_{@code ForwardedHeaderFilter}.;public static ServletUriComponentsBuilder fromCurrentServletMapping() {_		return fromServletMapping(getCurrentRequest())__	};same,as,link,from,servlet,mapping,http,servlet,request,except,the,request,is,obtained,through,link,request,context,holder,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,p,as,of,4,3,15,this,method,replaces,the,context,path,with,the,value,of,x,forwarded,prefix,rather,than,prepending,thus,aligning,with,code,forwarded,header,filter;public,static,servlet,uri,components,builder,from,current,servlet,mapping,return,from,servlet,mapping,get,current,request
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromCurrentServletMapping();1536336678;Same as {@link #fromServletMapping(HttpServletRequest)} except the_request is obtained through {@link RequestContextHolder}._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._<p>As of 4.3.15, this method replaces the contextPath with the value_of "X-Forwarded-Prefix" rather than prepending, thus aligning with_{@code ForwardedHeaderFilter}.;public static ServletUriComponentsBuilder fromCurrentServletMapping() {_		return fromServletMapping(getCurrentRequest())__	};same,as,link,from,servlet,mapping,http,servlet,request,except,the,request,is,obtained,through,link,request,context,holder,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,p,as,of,4,3,15,this,method,replaces,the,context,path,with,the,value,of,x,forwarded,prefix,rather,than,prepending,thus,aligning,with,code,forwarded,header,filter;public,static,servlet,uri,components,builder,from,current,servlet,mapping,return,from,servlet,mapping,get,current,request
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromCurrentServletMapping();1539118301;Same as {@link #fromServletMapping(HttpServletRequest)} except the_request is obtained through {@link RequestContextHolder}.;public static ServletUriComponentsBuilder fromCurrentServletMapping() {_		return fromServletMapping(getCurrentRequest())__	};same,as,link,from,servlet,mapping,http,servlet,request,except,the,request,is,obtained,through,link,request,context,holder;public,static,servlet,uri,components,builder,from,current,servlet,mapping,return,from,servlet,mapping,get,current,request
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromCurrentRequestUri();1329142650;Same as {@link #fromRequestUri(HttpServletRequest)} except the_request is obtained through {@link RequestContextHolder}.;public static ServletUriComponentsBuilder fromCurrentRequestUri() {_		return fromRequestUri(getCurrentRequest())__	};same,as,link,from,request,uri,http,servlet,request,except,the,request,is,obtained,through,link,request,context,holder;public,static,servlet,uri,components,builder,from,current,request,uri,return,from,request,uri,get,current,request
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromCurrentRequestUri();1362408075;Same as {@link #fromRequestUri(HttpServletRequest)} except the_request is obtained through {@link RequestContextHolder}.;public static ServletUriComponentsBuilder fromCurrentRequestUri() {_		return fromRequestUri(getCurrentRequest())__	};same,as,link,from,request,uri,http,servlet,request,except,the,request,is,obtained,through,link,request,context,holder;public,static,servlet,uri,components,builder,from,current,request,uri,return,from,request,uri,get,current,request
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromCurrentRequestUri();1375199802;Same as {@link #fromRequestUri(HttpServletRequest)} except the_request is obtained through {@link RequestContextHolder}.;public static ServletUriComponentsBuilder fromCurrentRequestUri() {_		return fromRequestUri(getCurrentRequest())__	};same,as,link,from,request,uri,http,servlet,request,except,the,request,is,obtained,through,link,request,context,holder;public,static,servlet,uri,components,builder,from,current,request,uri,return,from,request,uri,get,current,request
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromCurrentRequestUri();1377797966;Same as {@link #fromRequestUri(HttpServletRequest)} except the_request is obtained through {@link RequestContextHolder}.;public static ServletUriComponentsBuilder fromCurrentRequestUri() {_		return fromRequestUri(getCurrentRequest())__	};same,as,link,from,request,uri,http,servlet,request,except,the,request,is,obtained,through,link,request,context,holder;public,static,servlet,uri,components,builder,from,current,request,uri,return,from,request,uri,get,current,request
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromCurrentRequestUri();1382387168;Same as {@link #fromRequestUri(HttpServletRequest)} except the_request is obtained through {@link RequestContextHolder}.;public static ServletUriComponentsBuilder fromCurrentRequestUri() {_		return fromRequestUri(getCurrentRequest())__	};same,as,link,from,request,uri,http,servlet,request,except,the,request,is,obtained,through,link,request,context,holder;public,static,servlet,uri,components,builder,from,current,request,uri,return,from,request,uri,get,current,request
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromCurrentRequestUri();1385423968;Same as {@link #fromRequestUri(HttpServletRequest)} except the_request is obtained through {@link RequestContextHolder}.;public static ServletUriComponentsBuilder fromCurrentRequestUri() {_		return fromRequestUri(getCurrentRequest())__	};same,as,link,from,request,uri,http,servlet,request,except,the,request,is,obtained,through,link,request,context,holder;public,static,servlet,uri,components,builder,from,current,request,uri,return,from,request,uri,get,current,request
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromCurrentRequestUri();1402540848;Same as {@link #fromRequestUri(HttpServletRequest)} except the_request is obtained through {@link RequestContextHolder}.;public static ServletUriComponentsBuilder fromCurrentRequestUri() {_		return fromRequestUri(getCurrentRequest())__	};same,as,link,from,request,uri,http,servlet,request,except,the,request,is,obtained,through,link,request,context,holder;public,static,servlet,uri,components,builder,from,current,request,uri,return,from,request,uri,get,current,request
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromCurrentRequestUri();1405032917;Same as {@link #fromRequestUri(HttpServletRequest)} except the_request is obtained through {@link RequestContextHolder}.;public static ServletUriComponentsBuilder fromCurrentRequestUri() {_		return fromRequestUri(getCurrentRequest())__	};same,as,link,from,request,uri,http,servlet,request,except,the,request,is,obtained,through,link,request,context,holder;public,static,servlet,uri,components,builder,from,current,request,uri,return,from,request,uri,get,current,request
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromCurrentRequestUri();1405084622;Same as {@link #fromRequestUri(HttpServletRequest)} except the_request is obtained through {@link RequestContextHolder}.;public static ServletUriComponentsBuilder fromCurrentRequestUri() {_		return fromRequestUri(getCurrentRequest())__	};same,as,link,from,request,uri,http,servlet,request,except,the,request,is,obtained,through,link,request,context,holder;public,static,servlet,uri,components,builder,from,current,request,uri,return,from,request,uri,get,current,request
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromCurrentRequestUri();1417632385;Same as {@link #fromRequestUri(HttpServletRequest)} except the_request is obtained through {@link RequestContextHolder}.;public static ServletUriComponentsBuilder fromCurrentRequestUri() {_		return fromRequestUri(getCurrentRequest())__	};same,as,link,from,request,uri,http,servlet,request,except,the,request,is,obtained,through,link,request,context,holder;public,static,servlet,uri,components,builder,from,current,request,uri,return,from,request,uri,get,current,request
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromCurrentRequestUri();1417706155;Same as {@link #fromRequestUri(HttpServletRequest)} except the_request is obtained through {@link RequestContextHolder}.;public static ServletUriComponentsBuilder fromCurrentRequestUri() {_		return fromRequestUri(getCurrentRequest())__	};same,as,link,from,request,uri,http,servlet,request,except,the,request,is,obtained,through,link,request,context,holder;public,static,servlet,uri,components,builder,from,current,request,uri,return,from,request,uri,get,current,request
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromCurrentRequestUri();1417707014;Same as {@link #fromRequestUri(HttpServletRequest)} except the_request is obtained through {@link RequestContextHolder}.;public static ServletUriComponentsBuilder fromCurrentRequestUri() {_		return fromRequestUri(getCurrentRequest())__	};same,as,link,from,request,uri,http,servlet,request,except,the,request,is,obtained,through,link,request,context,holder;public,static,servlet,uri,components,builder,from,current,request,uri,return,from,request,uri,get,current,request
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromCurrentRequestUri();1417799775;Same as {@link #fromRequestUri(HttpServletRequest)} except the_request is obtained through {@link RequestContextHolder}.;public static ServletUriComponentsBuilder fromCurrentRequestUri() {_		return fromRequestUri(getCurrentRequest())__	};same,as,link,from,request,uri,http,servlet,request,except,the,request,is,obtained,through,link,request,context,holder;public,static,servlet,uri,components,builder,from,current,request,uri,return,from,request,uri,get,current,request
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromCurrentRequestUri();1422572109;Same as {@link #fromRequestUri(HttpServletRequest)} except the_request is obtained through {@link RequestContextHolder}.;public static ServletUriComponentsBuilder fromCurrentRequestUri() {_		return fromRequestUri(getCurrentRequest())__	};same,as,link,from,request,uri,http,servlet,request,except,the,request,is,obtained,through,link,request,context,holder;public,static,servlet,uri,components,builder,from,current,request,uri,return,from,request,uri,get,current,request
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromCurrentRequestUri();1423547594;Same as {@link #fromRequestUri(HttpServletRequest)} except the_request is obtained through {@link RequestContextHolder}.;public static ServletUriComponentsBuilder fromCurrentRequestUri() {_		return fromRequestUri(getCurrentRequest())__	};same,as,link,from,request,uri,http,servlet,request,except,the,request,is,obtained,through,link,request,context,holder;public,static,servlet,uri,components,builder,from,current,request,uri,return,from,request,uri,get,current,request
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromCurrentRequestUri();1424272588;Same as {@link #fromRequestUri(HttpServletRequest)} except the_request is obtained through {@link RequestContextHolder}.;public static ServletUriComponentsBuilder fromCurrentRequestUri() {_		return fromRequestUri(getCurrentRequest())__	};same,as,link,from,request,uri,http,servlet,request,except,the,request,is,obtained,through,link,request,context,holder;public,static,servlet,uri,components,builder,from,current,request,uri,return,from,request,uri,get,current,request
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromCurrentRequestUri();1426553101;Same as {@link #fromRequestUri(HttpServletRequest)} except the_request is obtained through {@link RequestContextHolder}.;public static ServletUriComponentsBuilder fromCurrentRequestUri() {_		return fromRequestUri(getCurrentRequest())__	};same,as,link,from,request,uri,http,servlet,request,except,the,request,is,obtained,through,link,request,context,holder;public,static,servlet,uri,components,builder,from,current,request,uri,return,from,request,uri,get,current,request
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromCurrentRequestUri();1458830024;Same as {@link #fromRequestUri(HttpServletRequest)} except the_request is obtained through {@link RequestContextHolder}.;public static ServletUriComponentsBuilder fromCurrentRequestUri() {_		return fromRequestUri(getCurrentRequest())__	};same,as,link,from,request,uri,http,servlet,request,except,the,request,is,obtained,through,link,request,context,holder;public,static,servlet,uri,components,builder,from,current,request,uri,return,from,request,uri,get,current,request
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromCurrentRequestUri();1466187642;Same as {@link #fromRequestUri(HttpServletRequest)} except the_request is obtained through {@link RequestContextHolder}.;public static ServletUriComponentsBuilder fromCurrentRequestUri() {_		return fromRequestUri(getCurrentRequest())__	};same,as,link,from,request,uri,http,servlet,request,except,the,request,is,obtained,through,link,request,context,holder;public,static,servlet,uri,components,builder,from,current,request,uri,return,from,request,uri,get,current,request
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromCurrentRequestUri();1468963833;Same as {@link #fromRequestUri(HttpServletRequest)} except the_request is obtained through {@link RequestContextHolder}.;public static ServletUriComponentsBuilder fromCurrentRequestUri() {_		return fromRequestUri(getCurrentRequest())__	};same,as,link,from,request,uri,http,servlet,request,except,the,request,is,obtained,through,link,request,context,holder;public,static,servlet,uri,components,builder,from,current,request,uri,return,from,request,uri,get,current,request
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromCurrentRequestUri();1485810955;Same as {@link #fromRequestUri(HttpServletRequest)} except the_request is obtained through {@link RequestContextHolder}.;public static ServletUriComponentsBuilder fromCurrentRequestUri() {_		return fromRequestUri(getCurrentRequest())__	};same,as,link,from,request,uri,http,servlet,request,except,the,request,is,obtained,through,link,request,context,holder;public,static,servlet,uri,components,builder,from,current,request,uri,return,from,request,uri,get,current,request
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromCurrentRequestUri();1495868221;Same as {@link #fromRequestUri(HttpServletRequest)} except the_request is obtained through {@link RequestContextHolder}.;public static ServletUriComponentsBuilder fromCurrentRequestUri() {_		return fromRequestUri(getCurrentRequest())__	};same,as,link,from,request,uri,http,servlet,request,except,the,request,is,obtained,through,link,request,context,holder;public,static,servlet,uri,components,builder,from,current,request,uri,return,from,request,uri,get,current,request
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromCurrentRequestUri();1496370972;Same as {@link #fromRequestUri(HttpServletRequest)} except the_request is obtained through {@link RequestContextHolder}.__<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs.;public static ServletUriComponentsBuilder fromCurrentRequestUri() {_		return fromRequestUri(getCurrentRequest())__	};same,as,link,from,request,uri,http,servlet,request,except,the,request,is,obtained,through,link,request,context,holder,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs;public,static,servlet,uri,components,builder,from,current,request,uri,return,from,request,uri,get,current,request
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromCurrentRequestUri();1496837955;Same as {@link #fromRequestUri(HttpServletRequest)} except the_request is obtained through {@link RequestContextHolder}._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs.;public static ServletUriComponentsBuilder fromCurrentRequestUri() {_		return fromRequestUri(getCurrentRequest())__	};same,as,link,from,request,uri,http,servlet,request,except,the,request,is,obtained,through,link,request,context,holder,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs;public,static,servlet,uri,components,builder,from,current,request,uri,return,from,request,uri,get,current,request
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromCurrentRequestUri();1498780456;Same as {@link #fromRequestUri(HttpServletRequest)} except the_request is obtained through {@link RequestContextHolder}._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs.;public static ServletUriComponentsBuilder fromCurrentRequestUri() {_		return fromRequestUri(getCurrentRequest())__	};same,as,link,from,request,uri,http,servlet,request,except,the,request,is,obtained,through,link,request,context,holder,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs;public,static,servlet,uri,components,builder,from,current,request,uri,return,from,request,uri,get,current,request
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromCurrentRequestUri();1522354261;Same as {@link #fromRequestUri(HttpServletRequest)} except the_request is obtained through {@link RequestContextHolder}._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs.;public static ServletUriComponentsBuilder fromCurrentRequestUri() {_		return fromRequestUri(getCurrentRequest())__	};same,as,link,from,request,uri,http,servlet,request,except,the,request,is,obtained,through,link,request,context,holder,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs;public,static,servlet,uri,components,builder,from,current,request,uri,return,from,request,uri,get,current,request
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromCurrentRequestUri();1522361849;Same as {@link #fromRequestUri(HttpServletRequest)} except the_request is obtained through {@link RequestContextHolder}.__<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs.__<p>As of 4.3.15, this method replaces the contextPath with the value_of "X-Forwarded-Prefix" rather than prepending, thus aligning with_{@code ForwardedHeaderFiller}.;public static ServletUriComponentsBuilder fromCurrentRequestUri() {_		return fromRequestUri(getCurrentRequest())__	};same,as,link,from,request,uri,http,servlet,request,except,the,request,is,obtained,through,link,request,context,holder,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,p,as,of,4,3,15,this,method,replaces,the,context,path,with,the,value,of,x,forwarded,prefix,rather,than,prepending,thus,aligning,with,code,forwarded,header,filler;public,static,servlet,uri,components,builder,from,current,request,uri,return,from,request,uri,get,current,request
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromCurrentRequestUri();1526045499;Same as {@link #fromRequestUri(HttpServletRequest)} except the_request is obtained through {@link RequestContextHolder}.__<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs.__<p>As of 4.3.15, this method replaces the contextPath with the value_of "X-Forwarded-Prefix" rather than prepending, thus aligning with_{@code ForwardedHeaderFiller}.;public static ServletUriComponentsBuilder fromCurrentRequestUri() {_		return fromRequestUri(getCurrentRequest())__	};same,as,link,from,request,uri,http,servlet,request,except,the,request,is,obtained,through,link,request,context,holder,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,p,as,of,4,3,15,this,method,replaces,the,context,path,with,the,value,of,x,forwarded,prefix,rather,than,prepending,thus,aligning,with,code,forwarded,header,filler;public,static,servlet,uri,components,builder,from,current,request,uri,return,from,request,uri,get,current,request
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromCurrentRequestUri();1536336006;Same as {@link #fromRequestUri(HttpServletRequest)} except the_request is obtained through {@link RequestContextHolder}.__<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs.__<p>As of 4.3.15, this method replaces the contextPath with the value_of "X-Forwarded-Prefix" rather than prepending, thus aligning with_{@code ForwardedHeaderFilter}.;public static ServletUriComponentsBuilder fromCurrentRequestUri() {_		return fromRequestUri(getCurrentRequest())__	};same,as,link,from,request,uri,http,servlet,request,except,the,request,is,obtained,through,link,request,context,holder,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,p,as,of,4,3,15,this,method,replaces,the,context,path,with,the,value,of,x,forwarded,prefix,rather,than,prepending,thus,aligning,with,code,forwarded,header,filter;public,static,servlet,uri,components,builder,from,current,request,uri,return,from,request,uri,get,current,request
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromCurrentRequestUri();1536336678;Same as {@link #fromRequestUri(HttpServletRequest)} except the_request is obtained through {@link RequestContextHolder}._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._<p>As of 4.3.15, this method replaces the contextPath with the value_of "X-Forwarded-Prefix" rather than prepending, thus aligning with_{@code ForwardedHeaderFilter}.;public static ServletUriComponentsBuilder fromCurrentRequestUri() {_		return fromRequestUri(getCurrentRequest())__	};same,as,link,from,request,uri,http,servlet,request,except,the,request,is,obtained,through,link,request,context,holder,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,p,as,of,4,3,15,this,method,replaces,the,context,path,with,the,value,of,x,forwarded,prefix,rather,than,prepending,thus,aligning,with,code,forwarded,header,filter;public,static,servlet,uri,components,builder,from,current,request,uri,return,from,request,uri,get,current,request
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromCurrentRequestUri();1539118301;Same as {@link #fromRequestUri(HttpServletRequest)} except the_request is obtained through {@link RequestContextHolder}.;public static ServletUriComponentsBuilder fromCurrentRequestUri() {_		return fromRequestUri(getCurrentRequest())__	};same,as,link,from,request,uri,http,servlet,request,except,the,request,is,obtained,through,link,request,context,holder;public,static,servlet,uri,components,builder,from,current,request,uri,return,from,request,uri,get,current,request
ServletUriComponentsBuilder -> protected ServletUriComponentsBuilder();1328020251;Default constructor. Protected to prevent direct instantiation.__@see #fromContextPath(HttpServletRequest)_@see #fromServletMapping(HttpServletRequest)_@see #fromRequest(HttpServletRequest)_@see #fromCurrentContextPath()_@see #fromCurrentServletMapping()_@see #fromCurrentRequest();protected ServletUriComponentsBuilder() {_	};default,constructor,protected,to,prevent,direct,instantiation,see,from,context,path,http,servlet,request,see,from,servlet,mapping,http,servlet,request,see,from,request,http,servlet,request,see,from,current,context,path,see,from,current,servlet,mapping,see,from,current,request;protected,servlet,uri,components,builder
ServletUriComponentsBuilder -> protected ServletUriComponentsBuilder();1329142650;Default constructor. Protected to prevent direct instantiation.__@see #fromContextPath(HttpServletRequest)_@see #fromServletMapping(HttpServletRequest)_@see #fromRequest(HttpServletRequest)_@see #fromCurrentContextPath()_@see #fromCurrentServletMapping()_@see #fromCurrentRequest();protected ServletUriComponentsBuilder() {_	};default,constructor,protected,to,prevent,direct,instantiation,see,from,context,path,http,servlet,request,see,from,servlet,mapping,http,servlet,request,see,from,request,http,servlet,request,see,from,current,context,path,see,from,current,servlet,mapping,see,from,current,request;protected,servlet,uri,components,builder
ServletUriComponentsBuilder -> protected ServletUriComponentsBuilder();1362408075;Default constructor. Protected to prevent direct instantiation.__@see #fromContextPath(HttpServletRequest)_@see #fromServletMapping(HttpServletRequest)_@see #fromRequest(HttpServletRequest)_@see #fromCurrentContextPath()_@see #fromCurrentServletMapping()_@see #fromCurrentRequest();protected ServletUriComponentsBuilder() {_	};default,constructor,protected,to,prevent,direct,instantiation,see,from,context,path,http,servlet,request,see,from,servlet,mapping,http,servlet,request,see,from,request,http,servlet,request,see,from,current,context,path,see,from,current,servlet,mapping,see,from,current,request;protected,servlet,uri,components,builder
ServletUriComponentsBuilder -> protected ServletUriComponentsBuilder();1375199802;Default constructor. Protected to prevent direct instantiation.__@see #fromContextPath(HttpServletRequest)_@see #fromServletMapping(HttpServletRequest)_@see #fromRequest(HttpServletRequest)_@see #fromCurrentContextPath()_@see #fromCurrentServletMapping()_@see #fromCurrentRequest();protected ServletUriComponentsBuilder() {_	};default,constructor,protected,to,prevent,direct,instantiation,see,from,context,path,http,servlet,request,see,from,servlet,mapping,http,servlet,request,see,from,request,http,servlet,request,see,from,current,context,path,see,from,current,servlet,mapping,see,from,current,request;protected,servlet,uri,components,builder
ServletUriComponentsBuilder -> protected ServletUriComponentsBuilder();1377797966;Default constructor. Protected to prevent direct instantiation.__@see #fromContextPath(HttpServletRequest)_@see #fromServletMapping(HttpServletRequest)_@see #fromRequest(HttpServletRequest)_@see #fromCurrentContextPath()_@see #fromCurrentServletMapping()_@see #fromCurrentRequest();protected ServletUriComponentsBuilder() {_	};default,constructor,protected,to,prevent,direct,instantiation,see,from,context,path,http,servlet,request,see,from,servlet,mapping,http,servlet,request,see,from,request,http,servlet,request,see,from,current,context,path,see,from,current,servlet,mapping,see,from,current,request;protected,servlet,uri,components,builder
ServletUriComponentsBuilder -> protected ServletUriComponentsBuilder();1382387168;Default constructor. Protected to prevent direct instantiation.__@see #fromContextPath(HttpServletRequest)_@see #fromServletMapping(HttpServletRequest)_@see #fromRequest(HttpServletRequest)_@see #fromCurrentContextPath()_@see #fromCurrentServletMapping()_@see #fromCurrentRequest();protected ServletUriComponentsBuilder() {_	};default,constructor,protected,to,prevent,direct,instantiation,see,from,context,path,http,servlet,request,see,from,servlet,mapping,http,servlet,request,see,from,request,http,servlet,request,see,from,current,context,path,see,from,current,servlet,mapping,see,from,current,request;protected,servlet,uri,components,builder
ServletUriComponentsBuilder -> protected ServletUriComponentsBuilder();1385423968;Default constructor. Protected to prevent direct instantiation.__@see #fromContextPath(HttpServletRequest)_@see #fromServletMapping(HttpServletRequest)_@see #fromRequest(HttpServletRequest)_@see #fromCurrentContextPath()_@see #fromCurrentServletMapping()_@see #fromCurrentRequest();protected ServletUriComponentsBuilder() {_	};default,constructor,protected,to,prevent,direct,instantiation,see,from,context,path,http,servlet,request,see,from,servlet,mapping,http,servlet,request,see,from,request,http,servlet,request,see,from,current,context,path,see,from,current,servlet,mapping,see,from,current,request;protected,servlet,uri,components,builder
ServletUriComponentsBuilder -> protected ServletUriComponentsBuilder();1402540848;Default constructor. Protected to prevent direct instantiation.__@see #fromContextPath(HttpServletRequest)_@see #fromServletMapping(HttpServletRequest)_@see #fromRequest(HttpServletRequest)_@see #fromCurrentContextPath()_@see #fromCurrentServletMapping()_@see #fromCurrentRequest();protected ServletUriComponentsBuilder() {_	};default,constructor,protected,to,prevent,direct,instantiation,see,from,context,path,http,servlet,request,see,from,servlet,mapping,http,servlet,request,see,from,request,http,servlet,request,see,from,current,context,path,see,from,current,servlet,mapping,see,from,current,request;protected,servlet,uri,components,builder
ServletUriComponentsBuilder -> protected ServletUriComponentsBuilder();1405032917;Default constructor. Protected to prevent direct instantiation.__@see #fromContextPath(HttpServletRequest)_@see #fromServletMapping(HttpServletRequest)_@see #fromRequest(HttpServletRequest)_@see #fromCurrentContextPath()_@see #fromCurrentServletMapping()_@see #fromCurrentRequest();protected ServletUriComponentsBuilder() {_	};default,constructor,protected,to,prevent,direct,instantiation,see,from,context,path,http,servlet,request,see,from,servlet,mapping,http,servlet,request,see,from,request,http,servlet,request,see,from,current,context,path,see,from,current,servlet,mapping,see,from,current,request;protected,servlet,uri,components,builder
ServletUriComponentsBuilder -> protected ServletUriComponentsBuilder();1405084622;Default constructor. Protected to prevent direct instantiation.__@see #fromContextPath(HttpServletRequest)_@see #fromServletMapping(HttpServletRequest)_@see #fromRequest(HttpServletRequest)_@see #fromCurrentContextPath()_@see #fromCurrentServletMapping()_@see #fromCurrentRequest();protected ServletUriComponentsBuilder() {_	};default,constructor,protected,to,prevent,direct,instantiation,see,from,context,path,http,servlet,request,see,from,servlet,mapping,http,servlet,request,see,from,request,http,servlet,request,see,from,current,context,path,see,from,current,servlet,mapping,see,from,current,request;protected,servlet,uri,components,builder
ServletUriComponentsBuilder -> protected ServletUriComponentsBuilder();1417632385;Default constructor. Protected to prevent direct instantiation.__@see #fromContextPath(HttpServletRequest)_@see #fromServletMapping(HttpServletRequest)_@see #fromRequest(HttpServletRequest)_@see #fromCurrentContextPath()_@see #fromCurrentServletMapping()_@see #fromCurrentRequest();protected ServletUriComponentsBuilder() {_	};default,constructor,protected,to,prevent,direct,instantiation,see,from,context,path,http,servlet,request,see,from,servlet,mapping,http,servlet,request,see,from,request,http,servlet,request,see,from,current,context,path,see,from,current,servlet,mapping,see,from,current,request;protected,servlet,uri,components,builder
ServletUriComponentsBuilder -> protected ServletUriComponentsBuilder();1417706155;Default constructor. Protected to prevent direct instantiation.__@see #fromContextPath(HttpServletRequest)_@see #fromServletMapping(HttpServletRequest)_@see #fromRequest(HttpServletRequest)_@see #fromCurrentContextPath()_@see #fromCurrentServletMapping()_@see #fromCurrentRequest();protected ServletUriComponentsBuilder() {_	};default,constructor,protected,to,prevent,direct,instantiation,see,from,context,path,http,servlet,request,see,from,servlet,mapping,http,servlet,request,see,from,request,http,servlet,request,see,from,current,context,path,see,from,current,servlet,mapping,see,from,current,request;protected,servlet,uri,components,builder
ServletUriComponentsBuilder -> protected ServletUriComponentsBuilder();1417707014;Default constructor. Protected to prevent direct instantiation.__@see #fromContextPath(HttpServletRequest)_@see #fromServletMapping(HttpServletRequest)_@see #fromRequest(HttpServletRequest)_@see #fromCurrentContextPath()_@see #fromCurrentServletMapping()_@see #fromCurrentRequest();protected ServletUriComponentsBuilder() {_	};default,constructor,protected,to,prevent,direct,instantiation,see,from,context,path,http,servlet,request,see,from,servlet,mapping,http,servlet,request,see,from,request,http,servlet,request,see,from,current,context,path,see,from,current,servlet,mapping,see,from,current,request;protected,servlet,uri,components,builder
ServletUriComponentsBuilder -> protected ServletUriComponentsBuilder();1417799775;Default constructor. Protected to prevent direct instantiation.__@see #fromContextPath(HttpServletRequest)_@see #fromServletMapping(HttpServletRequest)_@see #fromRequest(HttpServletRequest)_@see #fromCurrentContextPath()_@see #fromCurrentServletMapping()_@see #fromCurrentRequest();protected ServletUriComponentsBuilder() {_	};default,constructor,protected,to,prevent,direct,instantiation,see,from,context,path,http,servlet,request,see,from,servlet,mapping,http,servlet,request,see,from,request,http,servlet,request,see,from,current,context,path,see,from,current,servlet,mapping,see,from,current,request;protected,servlet,uri,components,builder
ServletUriComponentsBuilder -> protected ServletUriComponentsBuilder();1422572109;Default constructor. Protected to prevent direct instantiation.__@see #fromContextPath(HttpServletRequest)_@see #fromServletMapping(HttpServletRequest)_@see #fromRequest(HttpServletRequest)_@see #fromCurrentContextPath()_@see #fromCurrentServletMapping()_@see #fromCurrentRequest();protected ServletUriComponentsBuilder() {_	};default,constructor,protected,to,prevent,direct,instantiation,see,from,context,path,http,servlet,request,see,from,servlet,mapping,http,servlet,request,see,from,request,http,servlet,request,see,from,current,context,path,see,from,current,servlet,mapping,see,from,current,request;protected,servlet,uri,components,builder
ServletUriComponentsBuilder -> protected ServletUriComponentsBuilder();1423547594;Default constructor. Protected to prevent direct instantiation.__@see #fromContextPath(HttpServletRequest)_@see #fromServletMapping(HttpServletRequest)_@see #fromRequest(HttpServletRequest)_@see #fromCurrentContextPath()_@see #fromCurrentServletMapping()_@see #fromCurrentRequest();protected ServletUriComponentsBuilder() {_	};default,constructor,protected,to,prevent,direct,instantiation,see,from,context,path,http,servlet,request,see,from,servlet,mapping,http,servlet,request,see,from,request,http,servlet,request,see,from,current,context,path,see,from,current,servlet,mapping,see,from,current,request;protected,servlet,uri,components,builder
ServletUriComponentsBuilder -> protected ServletUriComponentsBuilder();1424272588;Default constructor. Protected to prevent direct instantiation.__@see #fromContextPath(HttpServletRequest)_@see #fromServletMapping(HttpServletRequest)_@see #fromRequest(HttpServletRequest)_@see #fromCurrentContextPath()_@see #fromCurrentServletMapping()_@see #fromCurrentRequest();protected ServletUriComponentsBuilder() {_	};default,constructor,protected,to,prevent,direct,instantiation,see,from,context,path,http,servlet,request,see,from,servlet,mapping,http,servlet,request,see,from,request,http,servlet,request,see,from,current,context,path,see,from,current,servlet,mapping,see,from,current,request;protected,servlet,uri,components,builder
ServletUriComponentsBuilder -> protected ServletUriComponentsBuilder();1426553101;Default constructor. Protected to prevent direct instantiation.__@see #fromContextPath(HttpServletRequest)_@see #fromServletMapping(HttpServletRequest)_@see #fromRequest(HttpServletRequest)_@see #fromCurrentContextPath()_@see #fromCurrentServletMapping()_@see #fromCurrentRequest();protected ServletUriComponentsBuilder() {_	};default,constructor,protected,to,prevent,direct,instantiation,see,from,context,path,http,servlet,request,see,from,servlet,mapping,http,servlet,request,see,from,request,http,servlet,request,see,from,current,context,path,see,from,current,servlet,mapping,see,from,current,request;protected,servlet,uri,components,builder
ServletUriComponentsBuilder -> protected ServletUriComponentsBuilder();1458830024;Default constructor. Protected to prevent direct instantiation.__@see #fromContextPath(HttpServletRequest)_@see #fromServletMapping(HttpServletRequest)_@see #fromRequest(HttpServletRequest)_@see #fromCurrentContextPath()_@see #fromCurrentServletMapping()_@see #fromCurrentRequest();protected ServletUriComponentsBuilder() {_	};default,constructor,protected,to,prevent,direct,instantiation,see,from,context,path,http,servlet,request,see,from,servlet,mapping,http,servlet,request,see,from,request,http,servlet,request,see,from,current,context,path,see,from,current,servlet,mapping,see,from,current,request;protected,servlet,uri,components,builder
ServletUriComponentsBuilder -> protected ServletUriComponentsBuilder();1466187642;Default constructor. Protected to prevent direct instantiation.__@see #fromContextPath(HttpServletRequest)_@see #fromServletMapping(HttpServletRequest)_@see #fromRequest(HttpServletRequest)_@see #fromCurrentContextPath()_@see #fromCurrentServletMapping()_@see #fromCurrentRequest();protected ServletUriComponentsBuilder() {_	};default,constructor,protected,to,prevent,direct,instantiation,see,from,context,path,http,servlet,request,see,from,servlet,mapping,http,servlet,request,see,from,request,http,servlet,request,see,from,current,context,path,see,from,current,servlet,mapping,see,from,current,request;protected,servlet,uri,components,builder
ServletUriComponentsBuilder -> protected ServletUriComponentsBuilder();1468963833;Default constructor. Protected to prevent direct instantiation._@see #fromContextPath(HttpServletRequest)_@see #fromServletMapping(HttpServletRequest)_@see #fromRequest(HttpServletRequest)_@see #fromCurrentContextPath()_@see #fromCurrentServletMapping()_@see #fromCurrentRequest();protected ServletUriComponentsBuilder() {_	};default,constructor,protected,to,prevent,direct,instantiation,see,from,context,path,http,servlet,request,see,from,servlet,mapping,http,servlet,request,see,from,request,http,servlet,request,see,from,current,context,path,see,from,current,servlet,mapping,see,from,current,request;protected,servlet,uri,components,builder
ServletUriComponentsBuilder -> protected ServletUriComponentsBuilder();1485810955;Default constructor. Protected to prevent direct instantiation._@see #fromContextPath(HttpServletRequest)_@see #fromServletMapping(HttpServletRequest)_@see #fromRequest(HttpServletRequest)_@see #fromCurrentContextPath()_@see #fromCurrentServletMapping()_@see #fromCurrentRequest();protected ServletUriComponentsBuilder() {_	};default,constructor,protected,to,prevent,direct,instantiation,see,from,context,path,http,servlet,request,see,from,servlet,mapping,http,servlet,request,see,from,request,http,servlet,request,see,from,current,context,path,see,from,current,servlet,mapping,see,from,current,request;protected,servlet,uri,components,builder
ServletUriComponentsBuilder -> protected ServletUriComponentsBuilder();1495868221;Default constructor. Protected to prevent direct instantiation._@see #fromContextPath(HttpServletRequest)_@see #fromServletMapping(HttpServletRequest)_@see #fromRequest(HttpServletRequest)_@see #fromCurrentContextPath()_@see #fromCurrentServletMapping()_@see #fromCurrentRequest();protected ServletUriComponentsBuilder() {_	};default,constructor,protected,to,prevent,direct,instantiation,see,from,context,path,http,servlet,request,see,from,servlet,mapping,http,servlet,request,see,from,request,http,servlet,request,see,from,current,context,path,see,from,current,servlet,mapping,see,from,current,request;protected,servlet,uri,components,builder
ServletUriComponentsBuilder -> protected ServletUriComponentsBuilder();1496370972;Default constructor. Protected to prevent direct instantiation._@see #fromContextPath(HttpServletRequest)_@see #fromServletMapping(HttpServletRequest)_@see #fromRequest(HttpServletRequest)_@see #fromCurrentContextPath()_@see #fromCurrentServletMapping()_@see #fromCurrentRequest();protected ServletUriComponentsBuilder() {_	};default,constructor,protected,to,prevent,direct,instantiation,see,from,context,path,http,servlet,request,see,from,servlet,mapping,http,servlet,request,see,from,request,http,servlet,request,see,from,current,context,path,see,from,current,servlet,mapping,see,from,current,request;protected,servlet,uri,components,builder
ServletUriComponentsBuilder -> protected ServletUriComponentsBuilder();1496837955;Default constructor. Protected to prevent direct instantiation._@see #fromContextPath(HttpServletRequest)_@see #fromServletMapping(HttpServletRequest)_@see #fromRequest(HttpServletRequest)_@see #fromCurrentContextPath()_@see #fromCurrentServletMapping()_@see #fromCurrentRequest();protected ServletUriComponentsBuilder() {_	};default,constructor,protected,to,prevent,direct,instantiation,see,from,context,path,http,servlet,request,see,from,servlet,mapping,http,servlet,request,see,from,request,http,servlet,request,see,from,current,context,path,see,from,current,servlet,mapping,see,from,current,request;protected,servlet,uri,components,builder
ServletUriComponentsBuilder -> protected ServletUriComponentsBuilder();1498780456;Default constructor. Protected to prevent direct instantiation._@see #fromContextPath(HttpServletRequest)_@see #fromServletMapping(HttpServletRequest)_@see #fromRequest(HttpServletRequest)_@see #fromCurrentContextPath()_@see #fromCurrentServletMapping()_@see #fromCurrentRequest();protected ServletUriComponentsBuilder() {_	};default,constructor,protected,to,prevent,direct,instantiation,see,from,context,path,http,servlet,request,see,from,servlet,mapping,http,servlet,request,see,from,request,http,servlet,request,see,from,current,context,path,see,from,current,servlet,mapping,see,from,current,request;protected,servlet,uri,components,builder
ServletUriComponentsBuilder -> protected ServletUriComponentsBuilder();1522354261;Default constructor. Protected to prevent direct instantiation._@see #fromContextPath(HttpServletRequest)_@see #fromServletMapping(HttpServletRequest)_@see #fromRequest(HttpServletRequest)_@see #fromCurrentContextPath()_@see #fromCurrentServletMapping()_@see #fromCurrentRequest();protected ServletUriComponentsBuilder() {_	};default,constructor,protected,to,prevent,direct,instantiation,see,from,context,path,http,servlet,request,see,from,servlet,mapping,http,servlet,request,see,from,request,http,servlet,request,see,from,current,context,path,see,from,current,servlet,mapping,see,from,current,request;protected,servlet,uri,components,builder
ServletUriComponentsBuilder -> protected ServletUriComponentsBuilder();1522361849;Default constructor. Protected to prevent direct instantiation._@see #fromContextPath(HttpServletRequest)_@see #fromServletMapping(HttpServletRequest)_@see #fromRequest(HttpServletRequest)_@see #fromCurrentContextPath()_@see #fromCurrentServletMapping()_@see #fromCurrentRequest();protected ServletUriComponentsBuilder() {_	};default,constructor,protected,to,prevent,direct,instantiation,see,from,context,path,http,servlet,request,see,from,servlet,mapping,http,servlet,request,see,from,request,http,servlet,request,see,from,current,context,path,see,from,current,servlet,mapping,see,from,current,request;protected,servlet,uri,components,builder
ServletUriComponentsBuilder -> protected ServletUriComponentsBuilder();1526045499;Default constructor. Protected to prevent direct instantiation._@see #fromContextPath(HttpServletRequest)_@see #fromServletMapping(HttpServletRequest)_@see #fromRequest(HttpServletRequest)_@see #fromCurrentContextPath()_@see #fromCurrentServletMapping()_@see #fromCurrentRequest();protected ServletUriComponentsBuilder() {_	};default,constructor,protected,to,prevent,direct,instantiation,see,from,context,path,http,servlet,request,see,from,servlet,mapping,http,servlet,request,see,from,request,http,servlet,request,see,from,current,context,path,see,from,current,servlet,mapping,see,from,current,request;protected,servlet,uri,components,builder
ServletUriComponentsBuilder -> protected ServletUriComponentsBuilder();1536336006;Default constructor. Protected to prevent direct instantiation._@see #fromContextPath(HttpServletRequest)_@see #fromServletMapping(HttpServletRequest)_@see #fromRequest(HttpServletRequest)_@see #fromCurrentContextPath()_@see #fromCurrentServletMapping()_@see #fromCurrentRequest();protected ServletUriComponentsBuilder() {_	};default,constructor,protected,to,prevent,direct,instantiation,see,from,context,path,http,servlet,request,see,from,servlet,mapping,http,servlet,request,see,from,request,http,servlet,request,see,from,current,context,path,see,from,current,servlet,mapping,see,from,current,request;protected,servlet,uri,components,builder
ServletUriComponentsBuilder -> protected ServletUriComponentsBuilder();1536336678;Default constructor. Protected to prevent direct instantiation._@see #fromContextPath(HttpServletRequest)_@see #fromServletMapping(HttpServletRequest)_@see #fromRequest(HttpServletRequest)_@see #fromCurrentContextPath()_@see #fromCurrentServletMapping()_@see #fromCurrentRequest();protected ServletUriComponentsBuilder() {_	};default,constructor,protected,to,prevent,direct,instantiation,see,from,context,path,http,servlet,request,see,from,servlet,mapping,http,servlet,request,see,from,request,http,servlet,request,see,from,current,context,path,see,from,current,servlet,mapping,see,from,current,request;protected,servlet,uri,components,builder
ServletUriComponentsBuilder -> protected ServletUriComponentsBuilder();1539118301;Default constructor. Protected to prevent direct instantiation._@see #fromContextPath(HttpServletRequest)_@see #fromServletMapping(HttpServletRequest)_@see #fromRequest(HttpServletRequest)_@see #fromCurrentContextPath()_@see #fromCurrentServletMapping()_@see #fromCurrentRequest();protected ServletUriComponentsBuilder() {_	};default,constructor,protected,to,prevent,direct,instantiation,see,from,context,path,http,servlet,request,see,from,servlet,mapping,http,servlet,request,see,from,request,http,servlet,request,see,from,current,context,path,see,from,current,servlet,mapping,see,from,current,request;protected,servlet,uri,components,builder
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromCurrentContextPath();1328020251;Equivalent to {@link #fromContextPath(HttpServletRequest)} except the_request is obtained via {@link RequestContextHolder}.;public static ServletUriComponentsBuilder fromCurrentContextPath() {_		return fromContextPath(getCurrentRequest())__	};equivalent,to,link,from,context,path,http,servlet,request,except,the,request,is,obtained,via,link,request,context,holder;public,static,servlet,uri,components,builder,from,current,context,path,return,from,context,path,get,current,request
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromCurrentContextPath();1329142650;Same as {@link #fromContextPath(HttpServletRequest)} except the_request is obtained through {@link RequestContextHolder}.;public static ServletUriComponentsBuilder fromCurrentContextPath() {_		return fromContextPath(getCurrentRequest())__	};same,as,link,from,context,path,http,servlet,request,except,the,request,is,obtained,through,link,request,context,holder;public,static,servlet,uri,components,builder,from,current,context,path,return,from,context,path,get,current,request
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromCurrentContextPath();1362408075;Same as {@link #fromContextPath(HttpServletRequest)} except the_request is obtained through {@link RequestContextHolder}.;public static ServletUriComponentsBuilder fromCurrentContextPath() {_		return fromContextPath(getCurrentRequest())__	};same,as,link,from,context,path,http,servlet,request,except,the,request,is,obtained,through,link,request,context,holder;public,static,servlet,uri,components,builder,from,current,context,path,return,from,context,path,get,current,request
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromCurrentContextPath();1375199802;Same as {@link #fromContextPath(HttpServletRequest)} except the_request is obtained through {@link RequestContextHolder}.;public static ServletUriComponentsBuilder fromCurrentContextPath() {_		return fromContextPath(getCurrentRequest())__	};same,as,link,from,context,path,http,servlet,request,except,the,request,is,obtained,through,link,request,context,holder;public,static,servlet,uri,components,builder,from,current,context,path,return,from,context,path,get,current,request
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromCurrentContextPath();1377797966;Same as {@link #fromContextPath(HttpServletRequest)} except the_request is obtained through {@link RequestContextHolder}.;public static ServletUriComponentsBuilder fromCurrentContextPath() {_		return fromContextPath(getCurrentRequest())__	};same,as,link,from,context,path,http,servlet,request,except,the,request,is,obtained,through,link,request,context,holder;public,static,servlet,uri,components,builder,from,current,context,path,return,from,context,path,get,current,request
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromCurrentContextPath();1382387168;Same as {@link #fromContextPath(HttpServletRequest)} except the_request is obtained through {@link RequestContextHolder}.;public static ServletUriComponentsBuilder fromCurrentContextPath() {_		return fromContextPath(getCurrentRequest())__	};same,as,link,from,context,path,http,servlet,request,except,the,request,is,obtained,through,link,request,context,holder;public,static,servlet,uri,components,builder,from,current,context,path,return,from,context,path,get,current,request
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromCurrentContextPath();1385423968;Same as {@link #fromContextPath(HttpServletRequest)} except the_request is obtained through {@link RequestContextHolder}.;public static ServletUriComponentsBuilder fromCurrentContextPath() {_		return fromContextPath(getCurrentRequest())__	};same,as,link,from,context,path,http,servlet,request,except,the,request,is,obtained,through,link,request,context,holder;public,static,servlet,uri,components,builder,from,current,context,path,return,from,context,path,get,current,request
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromCurrentContextPath();1402540848;Same as {@link #fromContextPath(HttpServletRequest)} except the_request is obtained through {@link RequestContextHolder}.;public static ServletUriComponentsBuilder fromCurrentContextPath() {_		return fromContextPath(getCurrentRequest())__	};same,as,link,from,context,path,http,servlet,request,except,the,request,is,obtained,through,link,request,context,holder;public,static,servlet,uri,components,builder,from,current,context,path,return,from,context,path,get,current,request
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromCurrentContextPath();1405032917;Same as {@link #fromContextPath(HttpServletRequest)} except the_request is obtained through {@link RequestContextHolder}.;public static ServletUriComponentsBuilder fromCurrentContextPath() {_		return fromContextPath(getCurrentRequest())__	};same,as,link,from,context,path,http,servlet,request,except,the,request,is,obtained,through,link,request,context,holder;public,static,servlet,uri,components,builder,from,current,context,path,return,from,context,path,get,current,request
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromCurrentContextPath();1405084622;Same as {@link #fromContextPath(HttpServletRequest)} except the_request is obtained through {@link RequestContextHolder}.;public static ServletUriComponentsBuilder fromCurrentContextPath() {_		return fromContextPath(getCurrentRequest())__	};same,as,link,from,context,path,http,servlet,request,except,the,request,is,obtained,through,link,request,context,holder;public,static,servlet,uri,components,builder,from,current,context,path,return,from,context,path,get,current,request
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromCurrentContextPath();1417632385;Same as {@link #fromContextPath(HttpServletRequest)} except the_request is obtained through {@link RequestContextHolder}.;public static ServletUriComponentsBuilder fromCurrentContextPath() {_		return fromContextPath(getCurrentRequest())__	};same,as,link,from,context,path,http,servlet,request,except,the,request,is,obtained,through,link,request,context,holder;public,static,servlet,uri,components,builder,from,current,context,path,return,from,context,path,get,current,request
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromCurrentContextPath();1417706155;Same as {@link #fromContextPath(HttpServletRequest)} except the_request is obtained through {@link RequestContextHolder}.;public static ServletUriComponentsBuilder fromCurrentContextPath() {_		return fromContextPath(getCurrentRequest())__	};same,as,link,from,context,path,http,servlet,request,except,the,request,is,obtained,through,link,request,context,holder;public,static,servlet,uri,components,builder,from,current,context,path,return,from,context,path,get,current,request
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromCurrentContextPath();1417707014;Same as {@link #fromContextPath(HttpServletRequest)} except the_request is obtained through {@link RequestContextHolder}.;public static ServletUriComponentsBuilder fromCurrentContextPath() {_		return fromContextPath(getCurrentRequest())__	};same,as,link,from,context,path,http,servlet,request,except,the,request,is,obtained,through,link,request,context,holder;public,static,servlet,uri,components,builder,from,current,context,path,return,from,context,path,get,current,request
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromCurrentContextPath();1417799775;Same as {@link #fromContextPath(HttpServletRequest)} except the_request is obtained through {@link RequestContextHolder}.;public static ServletUriComponentsBuilder fromCurrentContextPath() {_		return fromContextPath(getCurrentRequest())__	};same,as,link,from,context,path,http,servlet,request,except,the,request,is,obtained,through,link,request,context,holder;public,static,servlet,uri,components,builder,from,current,context,path,return,from,context,path,get,current,request
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromCurrentContextPath();1422572109;Same as {@link #fromContextPath(HttpServletRequest)} except the_request is obtained through {@link RequestContextHolder}.;public static ServletUriComponentsBuilder fromCurrentContextPath() {_		return fromContextPath(getCurrentRequest())__	};same,as,link,from,context,path,http,servlet,request,except,the,request,is,obtained,through,link,request,context,holder;public,static,servlet,uri,components,builder,from,current,context,path,return,from,context,path,get,current,request
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromCurrentContextPath();1423547594;Same as {@link #fromContextPath(HttpServletRequest)} except the_request is obtained through {@link RequestContextHolder}.;public static ServletUriComponentsBuilder fromCurrentContextPath() {_		return fromContextPath(getCurrentRequest())__	};same,as,link,from,context,path,http,servlet,request,except,the,request,is,obtained,through,link,request,context,holder;public,static,servlet,uri,components,builder,from,current,context,path,return,from,context,path,get,current,request
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromCurrentContextPath();1424272588;Same as {@link #fromContextPath(HttpServletRequest)} except the_request is obtained through {@link RequestContextHolder}.;public static ServletUriComponentsBuilder fromCurrentContextPath() {_		return fromContextPath(getCurrentRequest())__	};same,as,link,from,context,path,http,servlet,request,except,the,request,is,obtained,through,link,request,context,holder;public,static,servlet,uri,components,builder,from,current,context,path,return,from,context,path,get,current,request
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromCurrentContextPath();1426553101;Same as {@link #fromContextPath(HttpServletRequest)} except the_request is obtained through {@link RequestContextHolder}.;public static ServletUriComponentsBuilder fromCurrentContextPath() {_		return fromContextPath(getCurrentRequest())__	};same,as,link,from,context,path,http,servlet,request,except,the,request,is,obtained,through,link,request,context,holder;public,static,servlet,uri,components,builder,from,current,context,path,return,from,context,path,get,current,request
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromCurrentContextPath();1458830024;Same as {@link #fromContextPath(HttpServletRequest)} except the_request is obtained through {@link RequestContextHolder}.;public static ServletUriComponentsBuilder fromCurrentContextPath() {_		return fromContextPath(getCurrentRequest())__	};same,as,link,from,context,path,http,servlet,request,except,the,request,is,obtained,through,link,request,context,holder;public,static,servlet,uri,components,builder,from,current,context,path,return,from,context,path,get,current,request
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromCurrentContextPath();1466187642;Same as {@link #fromContextPath(HttpServletRequest)} except the_request is obtained through {@link RequestContextHolder}.;public static ServletUriComponentsBuilder fromCurrentContextPath() {_		return fromContextPath(getCurrentRequest())__	};same,as,link,from,context,path,http,servlet,request,except,the,request,is,obtained,through,link,request,context,holder;public,static,servlet,uri,components,builder,from,current,context,path,return,from,context,path,get,current,request
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromCurrentContextPath();1468963833;Same as {@link #fromContextPath(HttpServletRequest)} except the_request is obtained through {@link RequestContextHolder}.;public static ServletUriComponentsBuilder fromCurrentContextPath() {_		return fromContextPath(getCurrentRequest())__	};same,as,link,from,context,path,http,servlet,request,except,the,request,is,obtained,through,link,request,context,holder;public,static,servlet,uri,components,builder,from,current,context,path,return,from,context,path,get,current,request
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromCurrentContextPath();1485810955;Same as {@link #fromContextPath(HttpServletRequest)} except the_request is obtained through {@link RequestContextHolder}.;public static ServletUriComponentsBuilder fromCurrentContextPath() {_		return fromContextPath(getCurrentRequest())__	};same,as,link,from,context,path,http,servlet,request,except,the,request,is,obtained,through,link,request,context,holder;public,static,servlet,uri,components,builder,from,current,context,path,return,from,context,path,get,current,request
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromCurrentContextPath();1495868221;Same as {@link #fromContextPath(HttpServletRequest)} except the_request is obtained through {@link RequestContextHolder}.;public static ServletUriComponentsBuilder fromCurrentContextPath() {_		return fromContextPath(getCurrentRequest())__	};same,as,link,from,context,path,http,servlet,request,except,the,request,is,obtained,through,link,request,context,holder;public,static,servlet,uri,components,builder,from,current,context,path,return,from,context,path,get,current,request
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromCurrentContextPath();1496370972;Same as {@link #fromContextPath(HttpServletRequest)} except the_request is obtained through {@link RequestContextHolder}.__<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs.;public static ServletUriComponentsBuilder fromCurrentContextPath() {_		return fromContextPath(getCurrentRequest())__	};same,as,link,from,context,path,http,servlet,request,except,the,request,is,obtained,through,link,request,context,holder,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs;public,static,servlet,uri,components,builder,from,current,context,path,return,from,context,path,get,current,request
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromCurrentContextPath();1496837955;Same as {@link #fromContextPath(HttpServletRequest)} except the_request is obtained through {@link RequestContextHolder}._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs.;public static ServletUriComponentsBuilder fromCurrentContextPath() {_		return fromContextPath(getCurrentRequest())__	};same,as,link,from,context,path,http,servlet,request,except,the,request,is,obtained,through,link,request,context,holder,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs;public,static,servlet,uri,components,builder,from,current,context,path,return,from,context,path,get,current,request
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromCurrentContextPath();1498780456;Same as {@link #fromContextPath(HttpServletRequest)} except the_request is obtained through {@link RequestContextHolder}._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs.;public static ServletUriComponentsBuilder fromCurrentContextPath() {_		return fromContextPath(getCurrentRequest())__	};same,as,link,from,context,path,http,servlet,request,except,the,request,is,obtained,through,link,request,context,holder,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs;public,static,servlet,uri,components,builder,from,current,context,path,return,from,context,path,get,current,request
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromCurrentContextPath();1522354261;Same as {@link #fromContextPath(HttpServletRequest)} except the_request is obtained through {@link RequestContextHolder}._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs.;public static ServletUriComponentsBuilder fromCurrentContextPath() {_		return fromContextPath(getCurrentRequest())__	};same,as,link,from,context,path,http,servlet,request,except,the,request,is,obtained,through,link,request,context,holder,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs;public,static,servlet,uri,components,builder,from,current,context,path,return,from,context,path,get,current,request
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromCurrentContextPath();1522361849;Same as {@link #fromContextPath(HttpServletRequest)} except the_request is obtained through {@link RequestContextHolder}.__<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs.__<p>As of 4.3.15, this method replaces the contextPath with the value_of "X-Forwarded-Prefix" rather than prepending, thus aligning with_{@code ForwardedHeaderFiller}.;public static ServletUriComponentsBuilder fromCurrentContextPath() {_		return fromContextPath(getCurrentRequest())__	};same,as,link,from,context,path,http,servlet,request,except,the,request,is,obtained,through,link,request,context,holder,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,p,as,of,4,3,15,this,method,replaces,the,context,path,with,the,value,of,x,forwarded,prefix,rather,than,prepending,thus,aligning,with,code,forwarded,header,filler;public,static,servlet,uri,components,builder,from,current,context,path,return,from,context,path,get,current,request
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromCurrentContextPath();1526045499;Same as {@link #fromContextPath(HttpServletRequest)} except the_request is obtained through {@link RequestContextHolder}.__<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs.__<p>As of 4.3.15, this method replaces the contextPath with the value_of "X-Forwarded-Prefix" rather than prepending, thus aligning with_{@code ForwardedHeaderFiller}.;public static ServletUriComponentsBuilder fromCurrentContextPath() {_		return fromContextPath(getCurrentRequest())__	};same,as,link,from,context,path,http,servlet,request,except,the,request,is,obtained,through,link,request,context,holder,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,p,as,of,4,3,15,this,method,replaces,the,context,path,with,the,value,of,x,forwarded,prefix,rather,than,prepending,thus,aligning,with,code,forwarded,header,filler;public,static,servlet,uri,components,builder,from,current,context,path,return,from,context,path,get,current,request
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromCurrentContextPath();1536336006;Same as {@link #fromContextPath(HttpServletRequest)} except the_request is obtained through {@link RequestContextHolder}.__<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs.__<p>As of 4.3.15, this method replaces the contextPath with the value_of "X-Forwarded-Prefix" rather than prepending, thus aligning with_{@code ForwardedHeaderFilter}.;public static ServletUriComponentsBuilder fromCurrentContextPath() {_		return fromContextPath(getCurrentRequest())__	};same,as,link,from,context,path,http,servlet,request,except,the,request,is,obtained,through,link,request,context,holder,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,p,as,of,4,3,15,this,method,replaces,the,context,path,with,the,value,of,x,forwarded,prefix,rather,than,prepending,thus,aligning,with,code,forwarded,header,filter;public,static,servlet,uri,components,builder,from,current,context,path,return,from,context,path,get,current,request
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromCurrentContextPath();1536336678;Same as {@link #fromContextPath(HttpServletRequest)} except the_request is obtained through {@link RequestContextHolder}._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._<p>As of 4.3.15, this method replaces the contextPath with the value_of "X-Forwarded-Prefix" rather than prepending, thus aligning with_{@code ForwardedHeaderFilter}.;public static ServletUriComponentsBuilder fromCurrentContextPath() {_		return fromContextPath(getCurrentRequest())__	};same,as,link,from,context,path,http,servlet,request,except,the,request,is,obtained,through,link,request,context,holder,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,p,as,of,4,3,15,this,method,replaces,the,context,path,with,the,value,of,x,forwarded,prefix,rather,than,prepending,thus,aligning,with,code,forwarded,header,filter;public,static,servlet,uri,components,builder,from,current,context,path,return,from,context,path,get,current,request
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromCurrentContextPath();1539118301;Same as {@link #fromContextPath(HttpServletRequest)} except the_request is obtained through {@link RequestContextHolder}.;public static ServletUriComponentsBuilder fromCurrentContextPath() {_		return fromContextPath(getCurrentRequest())__	};same,as,link,from,context,path,http,servlet,request,except,the,request,is,obtained,through,link,request,context,holder;public,static,servlet,uri,components,builder,from,current,context,path,return,from,context,path,get,current,request
ServletUriComponentsBuilder -> public String removePathExtension();1377797966;Removes any path extension from the {@link HttpServletRequest#getRequestURI()_requestURI}. This method must be invoked before any calls to {@link #path(String)}_or {@link #pathSegment(String...)}._<pre>_// GET http://foo.com/rest/books/6.json__ServletUriComponentsBuilder builder = ServletUriComponentsBuilder.fromRequestUri(this.request)__String ext = builder.removePathExtension()__String uri = builder.path("/pages/1.{ext}").buildAndExpand(ext).toUriString()___assertEquals("http://foo.com/rest/books/6/pages/1.json", result)__</pre>_@return the removed path extension for possible re-use, or {@code null}_@since 4.0;public String removePathExtension() {_		String extension = null__		if (this.servletRequestURI != null) {_			String filename = WebUtils.extractFullFilenameFromUrlPath(this.servletRequestURI)__			extension = StringUtils.getFilenameExtension(filename)__			if (!StringUtils.isEmpty(extension)) {_				int end = this.servletRequestURI.length() - (extension.length() + 1)__				replacePath(this.servletRequestURI.substring(0, end))__			}_			this.servletRequestURI = null__		}_		return extension__	};removes,any,path,extension,from,the,link,http,servlet,request,get,request,uri,request,uri,this,method,must,be,invoked,before,any,calls,to,link,path,string,or,link,path,segment,string,pre,get,http,foo,com,rest,books,6,json,servlet,uri,components,builder,builder,servlet,uri,components,builder,from,request,uri,this,request,string,ext,builder,remove,path,extension,string,uri,builder,path,pages,1,ext,build,and,expand,ext,to,uri,string,assert,equals,http,foo,com,rest,books,6,pages,1,json,result,pre,return,the,removed,path,extension,for,possible,re,use,or,code,null,since,4,0;public,string,remove,path,extension,string,extension,null,if,this,servlet,request,uri,null,string,filename,web,utils,extract,full,filename,from,url,path,this,servlet,request,uri,extension,string,utils,get,filename,extension,filename,if,string,utils,is,empty,extension,int,end,this,servlet,request,uri,length,extension,length,1,replace,path,this,servlet,request,uri,substring,0,end,this,servlet,request,uri,null,return,extension
ServletUriComponentsBuilder -> public String removePathExtension();1382387168;Removes any path extension from the {@link HttpServletRequest#getRequestURI()_requestURI}. This method must be invoked before any calls to {@link #path(String)}_or {@link #pathSegment(String...)}._<pre>_// GET http://foo.com/rest/books/6.json__ServletUriComponentsBuilder builder = ServletUriComponentsBuilder.fromRequestUri(this.request)__String ext = builder.removePathExtension()__String uri = builder.path("/pages/1.{ext}").buildAndExpand(ext).toUriString()___assertEquals("http://foo.com/rest/books/6/pages/1.json", result)__</pre>_@return the removed path extension for possible re-use, or {@code null}_@since 4.0;public String removePathExtension() {_		String extension = null__		if (this.servletRequestURI != null) {_			String filename = WebUtils.extractFullFilenameFromUrlPath(this.servletRequestURI)__			extension = StringUtils.getFilenameExtension(filename)__			if (!StringUtils.isEmpty(extension)) {_				int end = this.servletRequestURI.length() - (extension.length() + 1)__				replacePath(this.servletRequestURI.substring(0, end))__			}_			this.servletRequestURI = null__		}_		return extension__	};removes,any,path,extension,from,the,link,http,servlet,request,get,request,uri,request,uri,this,method,must,be,invoked,before,any,calls,to,link,path,string,or,link,path,segment,string,pre,get,http,foo,com,rest,books,6,json,servlet,uri,components,builder,builder,servlet,uri,components,builder,from,request,uri,this,request,string,ext,builder,remove,path,extension,string,uri,builder,path,pages,1,ext,build,and,expand,ext,to,uri,string,assert,equals,http,foo,com,rest,books,6,pages,1,json,result,pre,return,the,removed,path,extension,for,possible,re,use,or,code,null,since,4,0;public,string,remove,path,extension,string,extension,null,if,this,servlet,request,uri,null,string,filename,web,utils,extract,full,filename,from,url,path,this,servlet,request,uri,extension,string,utils,get,filename,extension,filename,if,string,utils,is,empty,extension,int,end,this,servlet,request,uri,length,extension,length,1,replace,path,this,servlet,request,uri,substring,0,end,this,servlet,request,uri,null,return,extension
ServletUriComponentsBuilder -> public String removePathExtension();1385423968;Removes any path extension from the {@link HttpServletRequest#getRequestURI()_requestURI}. This method must be invoked before any calls to {@link #path(String)}_or {@link #pathSegment(String...)}._<pre>_// GET http://foo.com/rest/books/6.json__ServletUriComponentsBuilder builder = ServletUriComponentsBuilder.fromRequestUri(this.request)__String ext = builder.removePathExtension()__String uri = builder.path("/pages/1.{ext}").buildAndExpand(ext).toUriString()___assertEquals("http://foo.com/rest/books/6/pages/1.json", result)__</pre>_@return the removed path extension for possible re-use, or {@code null}_@since 4.0;public String removePathExtension() {_		String extension = null__		if (this.servletRequestURI != null) {_			String filename = WebUtils.extractFullFilenameFromUrlPath(this.servletRequestURI)__			extension = StringUtils.getFilenameExtension(filename)__			if (!StringUtils.isEmpty(extension)) {_				int end = this.servletRequestURI.length() - (extension.length() + 1)__				replacePath(this.servletRequestURI.substring(0, end))__			}_			this.servletRequestURI = null__		}_		return extension__	};removes,any,path,extension,from,the,link,http,servlet,request,get,request,uri,request,uri,this,method,must,be,invoked,before,any,calls,to,link,path,string,or,link,path,segment,string,pre,get,http,foo,com,rest,books,6,json,servlet,uri,components,builder,builder,servlet,uri,components,builder,from,request,uri,this,request,string,ext,builder,remove,path,extension,string,uri,builder,path,pages,1,ext,build,and,expand,ext,to,uri,string,assert,equals,http,foo,com,rest,books,6,pages,1,json,result,pre,return,the,removed,path,extension,for,possible,re,use,or,code,null,since,4,0;public,string,remove,path,extension,string,extension,null,if,this,servlet,request,uri,null,string,filename,web,utils,extract,full,filename,from,url,path,this,servlet,request,uri,extension,string,utils,get,filename,extension,filename,if,string,utils,is,empty,extension,int,end,this,servlet,request,uri,length,extension,length,1,replace,path,this,servlet,request,uri,substring,0,end,this,servlet,request,uri,null,return,extension
ServletUriComponentsBuilder -> public String removePathExtension();1402540848;Removes any path extension from the {@link HttpServletRequest#getRequestURI()_requestURI}. This method must be invoked before any calls to {@link #path(String)}_or {@link #pathSegment(String...)}._<pre>_// GET http://foo.com/rest/books/6.json__ServletUriComponentsBuilder builder = ServletUriComponentsBuilder.fromRequestUri(this.request)__String ext = builder.removePathExtension()__String uri = builder.path("/pages/1.{ext}").buildAndExpand(ext).toUriString()___assertEquals("http://foo.com/rest/books/6/pages/1.json", result)__</pre>_@return the removed path extension for possible re-use, or {@code null}_@since 4.0;public String removePathExtension() {_		String extension = null__		if (this.servletRequestURI != null) {_			String filename = WebUtils.extractFullFilenameFromUrlPath(this.servletRequestURI)__			extension = StringUtils.getFilenameExtension(filename)__			if (!StringUtils.isEmpty(extension)) {_				int end = this.servletRequestURI.length() - (extension.length() + 1)__				replacePath(this.servletRequestURI.substring(0, end))__			}_			this.servletRequestURI = null__		}_		return extension__	};removes,any,path,extension,from,the,link,http,servlet,request,get,request,uri,request,uri,this,method,must,be,invoked,before,any,calls,to,link,path,string,or,link,path,segment,string,pre,get,http,foo,com,rest,books,6,json,servlet,uri,components,builder,builder,servlet,uri,components,builder,from,request,uri,this,request,string,ext,builder,remove,path,extension,string,uri,builder,path,pages,1,ext,build,and,expand,ext,to,uri,string,assert,equals,http,foo,com,rest,books,6,pages,1,json,result,pre,return,the,removed,path,extension,for,possible,re,use,or,code,null,since,4,0;public,string,remove,path,extension,string,extension,null,if,this,servlet,request,uri,null,string,filename,web,utils,extract,full,filename,from,url,path,this,servlet,request,uri,extension,string,utils,get,filename,extension,filename,if,string,utils,is,empty,extension,int,end,this,servlet,request,uri,length,extension,length,1,replace,path,this,servlet,request,uri,substring,0,end,this,servlet,request,uri,null,return,extension
ServletUriComponentsBuilder -> public String removePathExtension();1405032917;Removes any path extension from the {@link HttpServletRequest#getRequestURI()_requestURI}. This method must be invoked before any calls to {@link #path(String)}_or {@link #pathSegment(String...)}._<pre>_// GET http://foo.com/rest/books/6.json__ServletUriComponentsBuilder builder = ServletUriComponentsBuilder.fromRequestUri(this.request)__String ext = builder.removePathExtension()__String uri = builder.path("/pages/1.{ext}").buildAndExpand(ext).toUriString()___assertEquals("http://foo.com/rest/books/6/pages/1.json", result)__</pre>_@return the removed path extension for possible re-use, or {@code null}_@since 4.0;public String removePathExtension() {_		String extension = null__		if (this.servletRequestURI != null) {_			String filename = WebUtils.extractFullFilenameFromUrlPath(this.servletRequestURI)__			extension = StringUtils.getFilenameExtension(filename)__			if (!StringUtils.isEmpty(extension)) {_				int end = this.servletRequestURI.length() - (extension.length() + 1)__				replacePath(this.servletRequestURI.substring(0, end))__			}_			this.servletRequestURI = null__		}_		return extension__	};removes,any,path,extension,from,the,link,http,servlet,request,get,request,uri,request,uri,this,method,must,be,invoked,before,any,calls,to,link,path,string,or,link,path,segment,string,pre,get,http,foo,com,rest,books,6,json,servlet,uri,components,builder,builder,servlet,uri,components,builder,from,request,uri,this,request,string,ext,builder,remove,path,extension,string,uri,builder,path,pages,1,ext,build,and,expand,ext,to,uri,string,assert,equals,http,foo,com,rest,books,6,pages,1,json,result,pre,return,the,removed,path,extension,for,possible,re,use,or,code,null,since,4,0;public,string,remove,path,extension,string,extension,null,if,this,servlet,request,uri,null,string,filename,web,utils,extract,full,filename,from,url,path,this,servlet,request,uri,extension,string,utils,get,filename,extension,filename,if,string,utils,is,empty,extension,int,end,this,servlet,request,uri,length,extension,length,1,replace,path,this,servlet,request,uri,substring,0,end,this,servlet,request,uri,null,return,extension
ServletUriComponentsBuilder -> public String removePathExtension();1405084622;Removes any path extension from the {@link HttpServletRequest#getRequestURI()_requestURI}. This method must be invoked before any calls to {@link #path(String)}_or {@link #pathSegment(String...)}._<pre>_// GET http://foo.com/rest/books/6.json__ServletUriComponentsBuilder builder = ServletUriComponentsBuilder.fromRequestUri(this.request)__String ext = builder.removePathExtension()__String uri = builder.path("/pages/1.{ext}").buildAndExpand(ext).toUriString()___assertEquals("http://foo.com/rest/books/6/pages/1.json", result)__</pre>_@return the removed path extension for possible re-use, or {@code null}_@since 4.0;public String removePathExtension() {_		String extension = null__		if (this.servletRequestURI != null) {_			String filename = WebUtils.extractFullFilenameFromUrlPath(this.servletRequestURI)__			extension = StringUtils.getFilenameExtension(filename)__			if (!StringUtils.isEmpty(extension)) {_				int end = this.servletRequestURI.length() - (extension.length() + 1)__				replacePath(this.servletRequestURI.substring(0, end))__			}_			this.servletRequestURI = null__		}_		return extension__	};removes,any,path,extension,from,the,link,http,servlet,request,get,request,uri,request,uri,this,method,must,be,invoked,before,any,calls,to,link,path,string,or,link,path,segment,string,pre,get,http,foo,com,rest,books,6,json,servlet,uri,components,builder,builder,servlet,uri,components,builder,from,request,uri,this,request,string,ext,builder,remove,path,extension,string,uri,builder,path,pages,1,ext,build,and,expand,ext,to,uri,string,assert,equals,http,foo,com,rest,books,6,pages,1,json,result,pre,return,the,removed,path,extension,for,possible,re,use,or,code,null,since,4,0;public,string,remove,path,extension,string,extension,null,if,this,servlet,request,uri,null,string,filename,web,utils,extract,full,filename,from,url,path,this,servlet,request,uri,extension,string,utils,get,filename,extension,filename,if,string,utils,is,empty,extension,int,end,this,servlet,request,uri,length,extension,length,1,replace,path,this,servlet,request,uri,substring,0,end,this,servlet,request,uri,null,return,extension
ServletUriComponentsBuilder -> public String removePathExtension();1417632385;Removes any path extension from the {@link HttpServletRequest#getRequestURI()_requestURI}. This method must be invoked before any calls to {@link #path(String)}_or {@link #pathSegment(String...)}._<pre>__GET http://foo.com/rest/books/6.json__ServletUriComponentsBuilder builder = ServletUriComponentsBuilder.fromRequestUri(this.request)__String ext = builder.removePathExtension()__String uri = builder.path("/pages/1.{ext}").buildAndExpand(ext).toUriString()__assertEquals("http://foo.com/rest/books/6/pages/1.json", result)__</pre>_@return the removed path extension for possible re-use, or {@code null}_@since 4.0;public String removePathExtension() {_		String extension = null__		if (this.originalPath != null) {_			String filename = WebUtils.extractFullFilenameFromUrlPath(this.originalPath)__			extension = StringUtils.getFilenameExtension(filename)__			if (!StringUtils.isEmpty(extension)) {_				int end = this.originalPath.length() - (extension.length() + 1)__				replacePath(this.originalPath.substring(0, end))__			}_			this.originalPath = null__		}_		return extension__	};removes,any,path,extension,from,the,link,http,servlet,request,get,request,uri,request,uri,this,method,must,be,invoked,before,any,calls,to,link,path,string,or,link,path,segment,string,pre,get,http,foo,com,rest,books,6,json,servlet,uri,components,builder,builder,servlet,uri,components,builder,from,request,uri,this,request,string,ext,builder,remove,path,extension,string,uri,builder,path,pages,1,ext,build,and,expand,ext,to,uri,string,assert,equals,http,foo,com,rest,books,6,pages,1,json,result,pre,return,the,removed,path,extension,for,possible,re,use,or,code,null,since,4,0;public,string,remove,path,extension,string,extension,null,if,this,original,path,null,string,filename,web,utils,extract,full,filename,from,url,path,this,original,path,extension,string,utils,get,filename,extension,filename,if,string,utils,is,empty,extension,int,end,this,original,path,length,extension,length,1,replace,path,this,original,path,substring,0,end,this,original,path,null,return,extension
ServletUriComponentsBuilder -> public String removePathExtension();1417706155;Removes any path extension from the {@link HttpServletRequest#getRequestURI()_requestURI}. This method must be invoked before any calls to {@link #path(String)}_or {@link #pathSegment(String...)}._<pre>__GET http://foo.com/rest/books/6.json__ServletUriComponentsBuilder builder = ServletUriComponentsBuilder.fromRequestUri(this.request)__String ext = builder.removePathExtension()__String uri = builder.path("/pages/1.{ext}").buildAndExpand(ext).toUriString()__assertEquals("http://foo.com/rest/books/6/pages/1.json", result)__</pre>_@return the removed path extension for possible re-use, or {@code null}_@since 4.0;public String removePathExtension() {_		String extension = null__		if (this.originalPath != null) {_			String filename = WebUtils.extractFullFilenameFromUrlPath(this.originalPath)__			extension = StringUtils.getFilenameExtension(filename)__			if (!StringUtils.isEmpty(extension)) {_				int end = this.originalPath.length() - (extension.length() + 1)__				replacePath(this.originalPath.substring(0, end))__			}_			this.originalPath = null__		}_		return extension__	};removes,any,path,extension,from,the,link,http,servlet,request,get,request,uri,request,uri,this,method,must,be,invoked,before,any,calls,to,link,path,string,or,link,path,segment,string,pre,get,http,foo,com,rest,books,6,json,servlet,uri,components,builder,builder,servlet,uri,components,builder,from,request,uri,this,request,string,ext,builder,remove,path,extension,string,uri,builder,path,pages,1,ext,build,and,expand,ext,to,uri,string,assert,equals,http,foo,com,rest,books,6,pages,1,json,result,pre,return,the,removed,path,extension,for,possible,re,use,or,code,null,since,4,0;public,string,remove,path,extension,string,extension,null,if,this,original,path,null,string,filename,web,utils,extract,full,filename,from,url,path,this,original,path,extension,string,utils,get,filename,extension,filename,if,string,utils,is,empty,extension,int,end,this,original,path,length,extension,length,1,replace,path,this,original,path,substring,0,end,this,original,path,null,return,extension
ServletUriComponentsBuilder -> public String removePathExtension();1417707014;Remove any path extension from the {@link HttpServletRequest#getRequestURI()_requestURI}. This method must be invoked before any calls to {@link #path(String)}_or {@link #pathSegment(String...)}._<pre>__GET http://foo.com/rest/books/6.json__ServletUriComponentsBuilder builder = ServletUriComponentsBuilder.fromRequestUri(this.request)__String ext = builder.removePathExtension()__String uri = builder.path("/pages/1.{ext}").buildAndExpand(ext).toUriString()__assertEquals("http://foo.com/rest/books/6/pages/1.json", result)__</pre>_@return the removed path extension for possible re-use, or {@code null}_@since 4.0;public String removePathExtension() {_		String extension = null__		if (this.originalPath != null) {_			String filename = WebUtils.extractFullFilenameFromUrlPath(this.originalPath)__			extension = StringUtils.getFilenameExtension(filename)__			if (!StringUtils.isEmpty(extension)) {_				int end = this.originalPath.length() - (extension.length() + 1)__				replacePath(this.originalPath.substring(0, end))__			}_			this.originalPath = null__		}_		return extension__	};remove,any,path,extension,from,the,link,http,servlet,request,get,request,uri,request,uri,this,method,must,be,invoked,before,any,calls,to,link,path,string,or,link,path,segment,string,pre,get,http,foo,com,rest,books,6,json,servlet,uri,components,builder,builder,servlet,uri,components,builder,from,request,uri,this,request,string,ext,builder,remove,path,extension,string,uri,builder,path,pages,1,ext,build,and,expand,ext,to,uri,string,assert,equals,http,foo,com,rest,books,6,pages,1,json,result,pre,return,the,removed,path,extension,for,possible,re,use,or,code,null,since,4,0;public,string,remove,path,extension,string,extension,null,if,this,original,path,null,string,filename,web,utils,extract,full,filename,from,url,path,this,original,path,extension,string,utils,get,filename,extension,filename,if,string,utils,is,empty,extension,int,end,this,original,path,length,extension,length,1,replace,path,this,original,path,substring,0,end,this,original,path,null,return,extension
ServletUriComponentsBuilder -> public String removePathExtension();1417799775;Remove any path extension from the {@link HttpServletRequest#getRequestURI()_requestURI}. This method must be invoked before any calls to {@link #path(String)}_or {@link #pathSegment(String...)}._<pre>__GET http://foo.com/rest/books/6.json__ServletUriComponentsBuilder builder = ServletUriComponentsBuilder.fromRequestUri(this.request)__String ext = builder.removePathExtension()__String uri = builder.path("/pages/1.{ext}").buildAndExpand(ext).toUriString()__assertEquals("http://foo.com/rest/books/6/pages/1.json", result)__</pre>_@return the removed path extension for possible re-use, or {@code null}_@since 4.0;public String removePathExtension() {_		String extension = null__		if (this.originalPath != null) {_			String filename = WebUtils.extractFullFilenameFromUrlPath(this.originalPath)__			extension = StringUtils.getFilenameExtension(filename)__			if (!StringUtils.isEmpty(extension)) {_				int end = this.originalPath.length() - (extension.length() + 1)__				replacePath(this.originalPath.substring(0, end))__			}_			this.originalPath = null__		}_		return extension__	};remove,any,path,extension,from,the,link,http,servlet,request,get,request,uri,request,uri,this,method,must,be,invoked,before,any,calls,to,link,path,string,or,link,path,segment,string,pre,get,http,foo,com,rest,books,6,json,servlet,uri,components,builder,builder,servlet,uri,components,builder,from,request,uri,this,request,string,ext,builder,remove,path,extension,string,uri,builder,path,pages,1,ext,build,and,expand,ext,to,uri,string,assert,equals,http,foo,com,rest,books,6,pages,1,json,result,pre,return,the,removed,path,extension,for,possible,re,use,or,code,null,since,4,0;public,string,remove,path,extension,string,extension,null,if,this,original,path,null,string,filename,web,utils,extract,full,filename,from,url,path,this,original,path,extension,string,utils,get,filename,extension,filename,if,string,utils,is,empty,extension,int,end,this,original,path,length,extension,length,1,replace,path,this,original,path,substring,0,end,this,original,path,null,return,extension
ServletUriComponentsBuilder -> public String removePathExtension();1422572109;Remove any path extension from the {@link HttpServletRequest#getRequestURI()_requestURI}. This method must be invoked before any calls to {@link #path(String)}_or {@link #pathSegment(String...)}._<pre>__GET http://foo.com/rest/books/6.json__ServletUriComponentsBuilder builder = ServletUriComponentsBuilder.fromRequestUri(this.request)__String ext = builder.removePathExtension()__String uri = builder.path("/pages/1.{ext}").buildAndExpand(ext).toUriString()__assertEquals("http://foo.com/rest/books/6/pages/1.json", result)__</pre>_@return the removed path extension for possible re-use, or {@code null}_@since 4.0;public String removePathExtension() {_		String extension = null__		if (this.originalPath != null) {_			String filename = WebUtils.extractFullFilenameFromUrlPath(this.originalPath)__			extension = StringUtils.getFilenameExtension(filename)__			if (!StringUtils.isEmpty(extension)) {_				int end = this.originalPath.length() - (extension.length() + 1)__				replacePath(this.originalPath.substring(0, end))__			}_			this.originalPath = null__		}_		return extension__	};remove,any,path,extension,from,the,link,http,servlet,request,get,request,uri,request,uri,this,method,must,be,invoked,before,any,calls,to,link,path,string,or,link,path,segment,string,pre,get,http,foo,com,rest,books,6,json,servlet,uri,components,builder,builder,servlet,uri,components,builder,from,request,uri,this,request,string,ext,builder,remove,path,extension,string,uri,builder,path,pages,1,ext,build,and,expand,ext,to,uri,string,assert,equals,http,foo,com,rest,books,6,pages,1,json,result,pre,return,the,removed,path,extension,for,possible,re,use,or,code,null,since,4,0;public,string,remove,path,extension,string,extension,null,if,this,original,path,null,string,filename,web,utils,extract,full,filename,from,url,path,this,original,path,extension,string,utils,get,filename,extension,filename,if,string,utils,is,empty,extension,int,end,this,original,path,length,extension,length,1,replace,path,this,original,path,substring,0,end,this,original,path,null,return,extension
ServletUriComponentsBuilder -> public String removePathExtension();1423547594;Remove any path extension from the {@link HttpServletRequest#getRequestURI()_requestURI}. This method must be invoked before any calls to {@link #path(String)}_or {@link #pathSegment(String...)}._<pre>__GET http://foo.com/rest/books/6.json__ServletUriComponentsBuilder builder = ServletUriComponentsBuilder.fromRequestUri(this.request)__String ext = builder.removePathExtension()__String uri = builder.path("/pages/1.{ext}").buildAndExpand(ext).toUriString()__assertEquals("http://foo.com/rest/books/6/pages/1.json", result)__</pre>_@return the removed path extension for possible re-use, or {@code null}_@since 4.0;public String removePathExtension() {_		String extension = null__		if (this.originalPath != null) {_			String filename = WebUtils.extractFullFilenameFromUrlPath(this.originalPath)__			extension = StringUtils.getFilenameExtension(filename)__			if (!StringUtils.isEmpty(extension)) {_				int end = this.originalPath.length() - (extension.length() + 1)__				replacePath(this.originalPath.substring(0, end))__			}_			this.originalPath = null__		}_		return extension__	};remove,any,path,extension,from,the,link,http,servlet,request,get,request,uri,request,uri,this,method,must,be,invoked,before,any,calls,to,link,path,string,or,link,path,segment,string,pre,get,http,foo,com,rest,books,6,json,servlet,uri,components,builder,builder,servlet,uri,components,builder,from,request,uri,this,request,string,ext,builder,remove,path,extension,string,uri,builder,path,pages,1,ext,build,and,expand,ext,to,uri,string,assert,equals,http,foo,com,rest,books,6,pages,1,json,result,pre,return,the,removed,path,extension,for,possible,re,use,or,code,null,since,4,0;public,string,remove,path,extension,string,extension,null,if,this,original,path,null,string,filename,web,utils,extract,full,filename,from,url,path,this,original,path,extension,string,utils,get,filename,extension,filename,if,string,utils,is,empty,extension,int,end,this,original,path,length,extension,length,1,replace,path,this,original,path,substring,0,end,this,original,path,null,return,extension
ServletUriComponentsBuilder -> public String removePathExtension();1424272588;Remove any path extension from the {@link HttpServletRequest#getRequestURI()_requestURI}. This method must be invoked before any calls to {@link #path(String)}_or {@link #pathSegment(String...)}._<pre>_GET http://foo.com/rest/books/6.json__ServletUriComponentsBuilder builder = ServletUriComponentsBuilder.fromRequestUri(this.request)__String ext = builder.removePathExtension()__String uri = builder.path("/pages/1.{ext}").buildAndExpand(ext).toUriString()__assertEquals("http://foo.com/rest/books/6/pages/1.json", result)__</pre>_@return the removed path extension for possible re-use, or {@code null}_@since 4.0;public String removePathExtension() {_		String extension = null__		if (this.originalPath != null) {_			String filename = WebUtils.extractFullFilenameFromUrlPath(this.originalPath)__			extension = StringUtils.getFilenameExtension(filename)__			if (!StringUtils.isEmpty(extension)) {_				int end = this.originalPath.length() - (extension.length() + 1)__				replacePath(this.originalPath.substring(0, end))__			}_			this.originalPath = null__		}_		return extension__	};remove,any,path,extension,from,the,link,http,servlet,request,get,request,uri,request,uri,this,method,must,be,invoked,before,any,calls,to,link,path,string,or,link,path,segment,string,pre,get,http,foo,com,rest,books,6,json,servlet,uri,components,builder,builder,servlet,uri,components,builder,from,request,uri,this,request,string,ext,builder,remove,path,extension,string,uri,builder,path,pages,1,ext,build,and,expand,ext,to,uri,string,assert,equals,http,foo,com,rest,books,6,pages,1,json,result,pre,return,the,removed,path,extension,for,possible,re,use,or,code,null,since,4,0;public,string,remove,path,extension,string,extension,null,if,this,original,path,null,string,filename,web,utils,extract,full,filename,from,url,path,this,original,path,extension,string,utils,get,filename,extension,filename,if,string,utils,is,empty,extension,int,end,this,original,path,length,extension,length,1,replace,path,this,original,path,substring,0,end,this,original,path,null,return,extension
ServletUriComponentsBuilder -> public String removePathExtension();1426553101;Remove any path extension from the {@link HttpServletRequest#getRequestURI()_requestURI}. This method must be invoked before any calls to {@link #path(String)}_or {@link #pathSegment(String...)}._<pre>_GET http://foo.com/rest/books/6.json__ServletUriComponentsBuilder builder = ServletUriComponentsBuilder.fromRequestUri(this.request)__String ext = builder.removePathExtension()__String uri = builder.path("/pages/1.{ext}").buildAndExpand(ext).toUriString()__assertEquals("http://foo.com/rest/books/6/pages/1.json", result)__</pre>_@return the removed path extension for possible re-use, or {@code null}_@since 4.0;public String removePathExtension() {_		String extension = null__		if (this.originalPath != null) {_			String filename = WebUtils.extractFullFilenameFromUrlPath(this.originalPath)__			extension = StringUtils.getFilenameExtension(filename)__			if (!StringUtils.isEmpty(extension)) {_				int end = this.originalPath.length() - (extension.length() + 1)__				replacePath(this.originalPath.substring(0, end))__			}_			this.originalPath = null__		}_		return extension__	};remove,any,path,extension,from,the,link,http,servlet,request,get,request,uri,request,uri,this,method,must,be,invoked,before,any,calls,to,link,path,string,or,link,path,segment,string,pre,get,http,foo,com,rest,books,6,json,servlet,uri,components,builder,builder,servlet,uri,components,builder,from,request,uri,this,request,string,ext,builder,remove,path,extension,string,uri,builder,path,pages,1,ext,build,and,expand,ext,to,uri,string,assert,equals,http,foo,com,rest,books,6,pages,1,json,result,pre,return,the,removed,path,extension,for,possible,re,use,or,code,null,since,4,0;public,string,remove,path,extension,string,extension,null,if,this,original,path,null,string,filename,web,utils,extract,full,filename,from,url,path,this,original,path,extension,string,utils,get,filename,extension,filename,if,string,utils,is,empty,extension,int,end,this,original,path,length,extension,length,1,replace,path,this,original,path,substring,0,end,this,original,path,null,return,extension
ServletUriComponentsBuilder -> public String removePathExtension();1458830024;Remove any path extension from the {@link HttpServletRequest#getRequestURI()_requestURI}. This method must be invoked before any calls to {@link #path(String)}_or {@link #pathSegment(String...)}._<pre>_GET http://foo.com/rest/books/6.json__ServletUriComponentsBuilder builder = ServletUriComponentsBuilder.fromRequestUri(this.request)__String ext = builder.removePathExtension()__String uri = builder.path("/pages/1.{ext}").buildAndExpand(ext).toUriString()__assertEquals("http://foo.com/rest/books/6/pages/1.json", result)__</pre>_@return the removed path extension for possible re-use, or {@code null}_@since 4.0;public String removePathExtension() {_		String extension = null__		if (this.originalPath != null) {_			String filename = WebUtils.extractFullFilenameFromUrlPath(this.originalPath)__			extension = StringUtils.getFilenameExtension(filename)__			if (!StringUtils.isEmpty(extension)) {_				int end = this.originalPath.length() - (extension.length() + 1)__				replacePath(this.originalPath.substring(0, end))__			}_			this.originalPath = null__		}_		return extension__	};remove,any,path,extension,from,the,link,http,servlet,request,get,request,uri,request,uri,this,method,must,be,invoked,before,any,calls,to,link,path,string,or,link,path,segment,string,pre,get,http,foo,com,rest,books,6,json,servlet,uri,components,builder,builder,servlet,uri,components,builder,from,request,uri,this,request,string,ext,builder,remove,path,extension,string,uri,builder,path,pages,1,ext,build,and,expand,ext,to,uri,string,assert,equals,http,foo,com,rest,books,6,pages,1,json,result,pre,return,the,removed,path,extension,for,possible,re,use,or,code,null,since,4,0;public,string,remove,path,extension,string,extension,null,if,this,original,path,null,string,filename,web,utils,extract,full,filename,from,url,path,this,original,path,extension,string,utils,get,filename,extension,filename,if,string,utils,is,empty,extension,int,end,this,original,path,length,extension,length,1,replace,path,this,original,path,substring,0,end,this,original,path,null,return,extension
ServletUriComponentsBuilder -> public String removePathExtension();1466187642;Remove any path extension from the {@link HttpServletRequest#getRequestURI()_requestURI}. This method must be invoked before any calls to {@link #path(String)}_or {@link #pathSegment(String...)}._<pre>_GET http://foo.com/rest/books/6.json__ServletUriComponentsBuilder builder = ServletUriComponentsBuilder.fromRequestUri(this.request)__String ext = builder.removePathExtension()__String uri = builder.path("/pages/1.{ext}").buildAndExpand(ext).toUriString()__assertEquals("http://foo.com/rest/books/6/pages/1.json", result)__</pre>_@return the removed path extension for possible re-use, or {@code null}_@since 4.0;public String removePathExtension() {_		String extension = null__		if (this.originalPath != null) {_			String filename = WebUtils.extractFullFilenameFromUrlPath(this.originalPath)__			extension = StringUtils.getFilenameExtension(filename)__			if (!StringUtils.isEmpty(extension)) {_				int end = this.originalPath.length() - (extension.length() + 1)__				replacePath(this.originalPath.substring(0, end))__			}_			this.originalPath = null__		}_		return extension__	};remove,any,path,extension,from,the,link,http,servlet,request,get,request,uri,request,uri,this,method,must,be,invoked,before,any,calls,to,link,path,string,or,link,path,segment,string,pre,get,http,foo,com,rest,books,6,json,servlet,uri,components,builder,builder,servlet,uri,components,builder,from,request,uri,this,request,string,ext,builder,remove,path,extension,string,uri,builder,path,pages,1,ext,build,and,expand,ext,to,uri,string,assert,equals,http,foo,com,rest,books,6,pages,1,json,result,pre,return,the,removed,path,extension,for,possible,re,use,or,code,null,since,4,0;public,string,remove,path,extension,string,extension,null,if,this,original,path,null,string,filename,web,utils,extract,full,filename,from,url,path,this,original,path,extension,string,utils,get,filename,extension,filename,if,string,utils,is,empty,extension,int,end,this,original,path,length,extension,length,1,replace,path,this,original,path,substring,0,end,this,original,path,null,return,extension
ServletUriComponentsBuilder -> public String removePathExtension();1468963833;Remove any path extension from the {@link HttpServletRequest#getRequestURI()_requestURI}. This method must be invoked before any calls to {@link #path(String)}_or {@link #pathSegment(String...)}._<pre>_GET http://foo.com/rest/books/6.json__ServletUriComponentsBuilder builder = ServletUriComponentsBuilder.fromRequestUri(this.request)__String ext = builder.removePathExtension()__String uri = builder.path("/pages/1.{ext}").buildAndExpand(ext).toUriString()__assertEquals("http://foo.com/rest/books/6/pages/1.json", result)__</pre>_@return the removed path extension for possible re-use, or {@code null}_@since 4.0;public String removePathExtension() {_		String extension = null__		if (this.originalPath != null) {_			extension = UriUtils.extractFileExtension(this.originalPath)__			if (!StringUtils.isEmpty(extension)) {_				int end = this.originalPath.length() - (extension.length() + 1)__				replacePath(this.originalPath.substring(0, end))__			}_			this.originalPath = null__		}_		return extension__	};remove,any,path,extension,from,the,link,http,servlet,request,get,request,uri,request,uri,this,method,must,be,invoked,before,any,calls,to,link,path,string,or,link,path,segment,string,pre,get,http,foo,com,rest,books,6,json,servlet,uri,components,builder,builder,servlet,uri,components,builder,from,request,uri,this,request,string,ext,builder,remove,path,extension,string,uri,builder,path,pages,1,ext,build,and,expand,ext,to,uri,string,assert,equals,http,foo,com,rest,books,6,pages,1,json,result,pre,return,the,removed,path,extension,for,possible,re,use,or,code,null,since,4,0;public,string,remove,path,extension,string,extension,null,if,this,original,path,null,extension,uri,utils,extract,file,extension,this,original,path,if,string,utils,is,empty,extension,int,end,this,original,path,length,extension,length,1,replace,path,this,original,path,substring,0,end,this,original,path,null,return,extension
ServletUriComponentsBuilder -> public String removePathExtension();1485810955;Remove any path extension from the {@link HttpServletRequest#getRequestURI()_requestURI}. This method must be invoked before any calls to {@link #path(String)}_or {@link #pathSegment(String...)}._<pre>_GET http://foo.com/rest/books/6.json__ServletUriComponentsBuilder builder = ServletUriComponentsBuilder.fromRequestUri(this.request)__String ext = builder.removePathExtension()__String uri = builder.path("/pages/1.{ext}").buildAndExpand(ext).toUriString()__assertEquals("http://foo.com/rest/books/6/pages/1.json", result)__</pre>_@return the removed path extension for possible re-use, or {@code null}_@since 4.0;public String removePathExtension() {_		String extension = null__		if (this.originalPath != null) {_			extension = UriUtils.extractFileExtension(this.originalPath)__			if (!StringUtils.isEmpty(extension)) {_				int end = this.originalPath.length() - (extension.length() + 1)__				replacePath(this.originalPath.substring(0, end))__			}_			this.originalPath = null__		}_		return extension__	};remove,any,path,extension,from,the,link,http,servlet,request,get,request,uri,request,uri,this,method,must,be,invoked,before,any,calls,to,link,path,string,or,link,path,segment,string,pre,get,http,foo,com,rest,books,6,json,servlet,uri,components,builder,builder,servlet,uri,components,builder,from,request,uri,this,request,string,ext,builder,remove,path,extension,string,uri,builder,path,pages,1,ext,build,and,expand,ext,to,uri,string,assert,equals,http,foo,com,rest,books,6,pages,1,json,result,pre,return,the,removed,path,extension,for,possible,re,use,or,code,null,since,4,0;public,string,remove,path,extension,string,extension,null,if,this,original,path,null,extension,uri,utils,extract,file,extension,this,original,path,if,string,utils,is,empty,extension,int,end,this,original,path,length,extension,length,1,replace,path,this,original,path,substring,0,end,this,original,path,null,return,extension
ServletUriComponentsBuilder -> @Nullable 	public String removePathExtension();1495868221;Remove any path extension from the {@link HttpServletRequest#getRequestURI()_requestURI}. This method must be invoked before any calls to {@link #path(String)}_or {@link #pathSegment(String...)}._<pre>_GET http://foo.com/rest/books/6.json__ServletUriComponentsBuilder builder = ServletUriComponentsBuilder.fromRequestUri(this.request)__String ext = builder.removePathExtension()__String uri = builder.path("/pages/1.{ext}").buildAndExpand(ext).toUriString()__assertEquals("http://foo.com/rest/books/6/pages/1.json", result)__</pre>_@return the removed path extension for possible re-use, or {@code null}_@since 4.0;@Nullable_	public String removePathExtension() {_		String extension = null__		if (this.originalPath != null) {_			extension = UriUtils.extractFileExtension(this.originalPath)__			if (!StringUtils.isEmpty(extension)) {_				int end = this.originalPath.length() - (extension.length() + 1)__				replacePath(this.originalPath.substring(0, end))__			}_			this.originalPath = null__		}_		return extension__	};remove,any,path,extension,from,the,link,http,servlet,request,get,request,uri,request,uri,this,method,must,be,invoked,before,any,calls,to,link,path,string,or,link,path,segment,string,pre,get,http,foo,com,rest,books,6,json,servlet,uri,components,builder,builder,servlet,uri,components,builder,from,request,uri,this,request,string,ext,builder,remove,path,extension,string,uri,builder,path,pages,1,ext,build,and,expand,ext,to,uri,string,assert,equals,http,foo,com,rest,books,6,pages,1,json,result,pre,return,the,removed,path,extension,for,possible,re,use,or,code,null,since,4,0;nullable,public,string,remove,path,extension,string,extension,null,if,this,original,path,null,extension,uri,utils,extract,file,extension,this,original,path,if,string,utils,is,empty,extension,int,end,this,original,path,length,extension,length,1,replace,path,this,original,path,substring,0,end,this,original,path,null,return,extension
ServletUriComponentsBuilder -> @Nullable 	public String removePathExtension();1496370972;Remove any path extension from the {@link HttpServletRequest#getRequestURI()_requestURI}. This method must be invoked before any calls to {@link #path(String)}_or {@link #pathSegment(String...)}._<pre>_GET http://foo.com/rest/books/6.json__ServletUriComponentsBuilder builder = ServletUriComponentsBuilder.fromRequestUri(this.request)__String ext = builder.removePathExtension()__String uri = builder.path("/pages/1.{ext}").buildAndExpand(ext).toUriString()__assertEquals("http://foo.com/rest/books/6/pages/1.json", result)__</pre>_@return the removed path extension for possible re-use, or {@code null}_@since 4.0;@Nullable_	public String removePathExtension() {_		String extension = null__		if (this.originalPath != null) {_			extension = UriUtils.extractFileExtension(this.originalPath)__			if (!StringUtils.isEmpty(extension)) {_				int end = this.originalPath.length() - (extension.length() + 1)__				replacePath(this.originalPath.substring(0, end))__			}_			this.originalPath = null__		}_		return extension__	};remove,any,path,extension,from,the,link,http,servlet,request,get,request,uri,request,uri,this,method,must,be,invoked,before,any,calls,to,link,path,string,or,link,path,segment,string,pre,get,http,foo,com,rest,books,6,json,servlet,uri,components,builder,builder,servlet,uri,components,builder,from,request,uri,this,request,string,ext,builder,remove,path,extension,string,uri,builder,path,pages,1,ext,build,and,expand,ext,to,uri,string,assert,equals,http,foo,com,rest,books,6,pages,1,json,result,pre,return,the,removed,path,extension,for,possible,re,use,or,code,null,since,4,0;nullable,public,string,remove,path,extension,string,extension,null,if,this,original,path,null,extension,uri,utils,extract,file,extension,this,original,path,if,string,utils,is,empty,extension,int,end,this,original,path,length,extension,length,1,replace,path,this,original,path,substring,0,end,this,original,path,null,return,extension
ServletUriComponentsBuilder -> @Nullable 	public String removePathExtension();1496837955;Remove any path extension from the {@link HttpServletRequest#getRequestURI()_requestURI}. This method must be invoked before any calls to {@link #path(String)}_or {@link #pathSegment(String...)}._<pre>_GET http://foo.com/rest/books/6.json__ServletUriComponentsBuilder builder = ServletUriComponentsBuilder.fromRequestUri(this.request)__String ext = builder.removePathExtension()__String uri = builder.path("/pages/1.{ext}").buildAndExpand(ext).toUriString()__assertEquals("http://foo.com/rest/books/6/pages/1.json", result)__</pre>_@return the removed path extension for possible re-use, or {@code null}_@since 4.0;@Nullable_	public String removePathExtension() {_		String extension = null__		if (this.originalPath != null) {_			extension = UriUtils.extractFileExtension(this.originalPath)__			if (!StringUtils.isEmpty(extension)) {_				int end = this.originalPath.length() - (extension.length() + 1)__				replacePath(this.originalPath.substring(0, end))__			}_			this.originalPath = null__		}_		return extension__	};remove,any,path,extension,from,the,link,http,servlet,request,get,request,uri,request,uri,this,method,must,be,invoked,before,any,calls,to,link,path,string,or,link,path,segment,string,pre,get,http,foo,com,rest,books,6,json,servlet,uri,components,builder,builder,servlet,uri,components,builder,from,request,uri,this,request,string,ext,builder,remove,path,extension,string,uri,builder,path,pages,1,ext,build,and,expand,ext,to,uri,string,assert,equals,http,foo,com,rest,books,6,pages,1,json,result,pre,return,the,removed,path,extension,for,possible,re,use,or,code,null,since,4,0;nullable,public,string,remove,path,extension,string,extension,null,if,this,original,path,null,extension,uri,utils,extract,file,extension,this,original,path,if,string,utils,is,empty,extension,int,end,this,original,path,length,extension,length,1,replace,path,this,original,path,substring,0,end,this,original,path,null,return,extension
ServletUriComponentsBuilder -> @Nullable 	public String removePathExtension();1498780456;Remove any path extension from the {@link HttpServletRequest#getRequestURI()_requestURI}. This method must be invoked before any calls to {@link #path(String)}_or {@link #pathSegment(String...)}._<pre>_GET http://foo.com/rest/books/6.json__ServletUriComponentsBuilder builder = ServletUriComponentsBuilder.fromRequestUri(this.request)__String ext = builder.removePathExtension()__String uri = builder.path("/pages/1.{ext}").buildAndExpand(ext).toUriString()__assertEquals("http://foo.com/rest/books/6/pages/1.json", result)__</pre>_@return the removed path extension for possible re-use, or {@code null}_@since 4.0;@Nullable_	public String removePathExtension() {_		String extension = null__		if (this.originalPath != null) {_			extension = UriUtils.extractFileExtension(this.originalPath)__			if (!StringUtils.isEmpty(extension)) {_				int end = this.originalPath.length() - (extension.length() + 1)__				replacePath(this.originalPath.substring(0, end))__			}_			this.originalPath = null__		}_		return extension__	};remove,any,path,extension,from,the,link,http,servlet,request,get,request,uri,request,uri,this,method,must,be,invoked,before,any,calls,to,link,path,string,or,link,path,segment,string,pre,get,http,foo,com,rest,books,6,json,servlet,uri,components,builder,builder,servlet,uri,components,builder,from,request,uri,this,request,string,ext,builder,remove,path,extension,string,uri,builder,path,pages,1,ext,build,and,expand,ext,to,uri,string,assert,equals,http,foo,com,rest,books,6,pages,1,json,result,pre,return,the,removed,path,extension,for,possible,re,use,or,code,null,since,4,0;nullable,public,string,remove,path,extension,string,extension,null,if,this,original,path,null,extension,uri,utils,extract,file,extension,this,original,path,if,string,utils,is,empty,extension,int,end,this,original,path,length,extension,length,1,replace,path,this,original,path,substring,0,end,this,original,path,null,return,extension
ServletUriComponentsBuilder -> @Nullable 	public String removePathExtension();1522354261;Remove any path extension from the {@link HttpServletRequest#getRequestURI()_requestURI}. This method must be invoked before any calls to {@link #path(String)}_or {@link #pathSegment(String...)}._<pre>_GET http://foo.com/rest/books/6.json__ServletUriComponentsBuilder builder = ServletUriComponentsBuilder.fromRequestUri(this.request)__String ext = builder.removePathExtension()__String uri = builder.path("/pages/1.{ext}").buildAndExpand(ext).toUriString()__assertEquals("http://foo.com/rest/books/6/pages/1.json", result)__</pre>_@return the removed path extension for possible re-use, or {@code null}_@since 4.0;@Nullable_	public String removePathExtension() {_		String extension = null__		if (this.originalPath != null) {_			extension = UriUtils.extractFileExtension(this.originalPath)__			if (!StringUtils.isEmpty(extension)) {_				int end = this.originalPath.length() - (extension.length() + 1)__				replacePath(this.originalPath.substring(0, end))__			}_			this.originalPath = null__		}_		return extension__	};remove,any,path,extension,from,the,link,http,servlet,request,get,request,uri,request,uri,this,method,must,be,invoked,before,any,calls,to,link,path,string,or,link,path,segment,string,pre,get,http,foo,com,rest,books,6,json,servlet,uri,components,builder,builder,servlet,uri,components,builder,from,request,uri,this,request,string,ext,builder,remove,path,extension,string,uri,builder,path,pages,1,ext,build,and,expand,ext,to,uri,string,assert,equals,http,foo,com,rest,books,6,pages,1,json,result,pre,return,the,removed,path,extension,for,possible,re,use,or,code,null,since,4,0;nullable,public,string,remove,path,extension,string,extension,null,if,this,original,path,null,extension,uri,utils,extract,file,extension,this,original,path,if,string,utils,is,empty,extension,int,end,this,original,path,length,extension,length,1,replace,path,this,original,path,substring,0,end,this,original,path,null,return,extension
ServletUriComponentsBuilder -> @Nullable 	public String removePathExtension();1522361849;Remove any path extension from the {@link HttpServletRequest#getRequestURI()_requestURI}. This method must be invoked before any calls to {@link #path(String)}_or {@link #pathSegment(String...)}._<pre>_GET http://foo.com/rest/books/6.json__ServletUriComponentsBuilder builder = ServletUriComponentsBuilder.fromRequestUri(this.request)__String ext = builder.removePathExtension()__String uri = builder.path("/pages/1.{ext}").buildAndExpand(ext).toUriString()__assertEquals("http://foo.com/rest/books/6/pages/1.json", result)__</pre>_@return the removed path extension for possible re-use, or {@code null}_@since 4.0;@Nullable_	public String removePathExtension() {_		String extension = null__		if (this.originalPath != null) {_			extension = UriUtils.extractFileExtension(this.originalPath)__			if (!StringUtils.isEmpty(extension)) {_				int end = this.originalPath.length() - (extension.length() + 1)__				replacePath(this.originalPath.substring(0, end))__			}_			this.originalPath = null__		}_		return extension__	};remove,any,path,extension,from,the,link,http,servlet,request,get,request,uri,request,uri,this,method,must,be,invoked,before,any,calls,to,link,path,string,or,link,path,segment,string,pre,get,http,foo,com,rest,books,6,json,servlet,uri,components,builder,builder,servlet,uri,components,builder,from,request,uri,this,request,string,ext,builder,remove,path,extension,string,uri,builder,path,pages,1,ext,build,and,expand,ext,to,uri,string,assert,equals,http,foo,com,rest,books,6,pages,1,json,result,pre,return,the,removed,path,extension,for,possible,re,use,or,code,null,since,4,0;nullable,public,string,remove,path,extension,string,extension,null,if,this,original,path,null,extension,uri,utils,extract,file,extension,this,original,path,if,string,utils,is,empty,extension,int,end,this,original,path,length,extension,length,1,replace,path,this,original,path,substring,0,end,this,original,path,null,return,extension
ServletUriComponentsBuilder -> @Nullable 	public String removePathExtension();1526045499;Remove any path extension from the {@link HttpServletRequest#getRequestURI()_requestURI}. This method must be invoked before any calls to {@link #path(String)}_or {@link #pathSegment(String...)}._<pre>_GET http://foo.com/rest/books/6.json__ServletUriComponentsBuilder builder = ServletUriComponentsBuilder.fromRequestUri(this.request)__String ext = builder.removePathExtension()__String uri = builder.path("/pages/1.{ext}").buildAndExpand(ext).toUriString()__assertEquals("http://foo.com/rest/books/6/pages/1.json", result)__</pre>_@return the removed path extension for possible re-use, or {@code null}_@since 4.0;@Nullable_	public String removePathExtension() {_		String extension = null__		if (this.originalPath != null) {_			extension = UriUtils.extractFileExtension(this.originalPath)__			if (!StringUtils.isEmpty(extension)) {_				int end = this.originalPath.length() - (extension.length() + 1)__				replacePath(this.originalPath.substring(0, end))__			}_			this.originalPath = null__		}_		return extension__	};remove,any,path,extension,from,the,link,http,servlet,request,get,request,uri,request,uri,this,method,must,be,invoked,before,any,calls,to,link,path,string,or,link,path,segment,string,pre,get,http,foo,com,rest,books,6,json,servlet,uri,components,builder,builder,servlet,uri,components,builder,from,request,uri,this,request,string,ext,builder,remove,path,extension,string,uri,builder,path,pages,1,ext,build,and,expand,ext,to,uri,string,assert,equals,http,foo,com,rest,books,6,pages,1,json,result,pre,return,the,removed,path,extension,for,possible,re,use,or,code,null,since,4,0;nullable,public,string,remove,path,extension,string,extension,null,if,this,original,path,null,extension,uri,utils,extract,file,extension,this,original,path,if,string,utils,is,empty,extension,int,end,this,original,path,length,extension,length,1,replace,path,this,original,path,substring,0,end,this,original,path,null,return,extension
ServletUriComponentsBuilder -> @Nullable 	public String removePathExtension();1536336006;Remove any path extension from the {@link HttpServletRequest#getRequestURI()_requestURI}. This method must be invoked before any calls to {@link #path(String)}_or {@link #pathSegment(String...)}._<pre>_GET http://foo.com/rest/books/6.json__ServletUriComponentsBuilder builder = ServletUriComponentsBuilder.fromRequestUri(this.request)__String ext = builder.removePathExtension()__String uri = builder.path("/pages/1.{ext}").buildAndExpand(ext).toUriString()__assertEquals("http://foo.com/rest/books/6/pages/1.json", result)__</pre>_@return the removed path extension for possible re-use, or {@code null}_@since 4.0;@Nullable_	public String removePathExtension() {_		String extension = null__		if (this.originalPath != null) {_			extension = UriUtils.extractFileExtension(this.originalPath)__			if (!StringUtils.isEmpty(extension)) {_				int end = this.originalPath.length() - (extension.length() + 1)__				replacePath(this.originalPath.substring(0, end))__			}_			this.originalPath = null__		}_		return extension__	};remove,any,path,extension,from,the,link,http,servlet,request,get,request,uri,request,uri,this,method,must,be,invoked,before,any,calls,to,link,path,string,or,link,path,segment,string,pre,get,http,foo,com,rest,books,6,json,servlet,uri,components,builder,builder,servlet,uri,components,builder,from,request,uri,this,request,string,ext,builder,remove,path,extension,string,uri,builder,path,pages,1,ext,build,and,expand,ext,to,uri,string,assert,equals,http,foo,com,rest,books,6,pages,1,json,result,pre,return,the,removed,path,extension,for,possible,re,use,or,code,null,since,4,0;nullable,public,string,remove,path,extension,string,extension,null,if,this,original,path,null,extension,uri,utils,extract,file,extension,this,original,path,if,string,utils,is,empty,extension,int,end,this,original,path,length,extension,length,1,replace,path,this,original,path,substring,0,end,this,original,path,null,return,extension
ServletUriComponentsBuilder -> @Nullable 	public String removePathExtension();1536336678;Remove any path extension from the {@link HttpServletRequest#getRequestURI()_requestURI}. This method must be invoked before any calls to {@link #path(String)}_or {@link #pathSegment(String...)}._<pre>_GET http://foo.com/rest/books/6.json__ServletUriComponentsBuilder builder = ServletUriComponentsBuilder.fromRequestUri(this.request)__String ext = builder.removePathExtension()__String uri = builder.path("/pages/1.{ext}").buildAndExpand(ext).toUriString()__assertEquals("http://foo.com/rest/books/6/pages/1.json", result)__</pre>_@return the removed path extension for possible re-use, or {@code null}_@since 4.0;@Nullable_	public String removePathExtension() {_		String extension = null__		if (this.originalPath != null) {_			extension = UriUtils.extractFileExtension(this.originalPath)__			if (!StringUtils.isEmpty(extension)) {_				int end = this.originalPath.length() - (extension.length() + 1)__				replacePath(this.originalPath.substring(0, end))__			}_			this.originalPath = null__		}_		return extension__	};remove,any,path,extension,from,the,link,http,servlet,request,get,request,uri,request,uri,this,method,must,be,invoked,before,any,calls,to,link,path,string,or,link,path,segment,string,pre,get,http,foo,com,rest,books,6,json,servlet,uri,components,builder,builder,servlet,uri,components,builder,from,request,uri,this,request,string,ext,builder,remove,path,extension,string,uri,builder,path,pages,1,ext,build,and,expand,ext,to,uri,string,assert,equals,http,foo,com,rest,books,6,pages,1,json,result,pre,return,the,removed,path,extension,for,possible,re,use,or,code,null,since,4,0;nullable,public,string,remove,path,extension,string,extension,null,if,this,original,path,null,extension,uri,utils,extract,file,extension,this,original,path,if,string,utils,is,empty,extension,int,end,this,original,path,length,extension,length,1,replace,path,this,original,path,substring,0,end,this,original,path,null,return,extension
ServletUriComponentsBuilder -> @Nullable 	public String removePathExtension();1539118301;Remove any path extension from the {@link HttpServletRequest#getRequestURI()_requestURI}. This method must be invoked before any calls to {@link #path(String)}_or {@link #pathSegment(String...)}._<pre>_GET http://foo.com/rest/books/6.json__ServletUriComponentsBuilder builder = ServletUriComponentsBuilder.fromRequestUri(this.request)__String ext = builder.removePathExtension()__String uri = builder.path("/pages/1.{ext}").buildAndExpand(ext).toUriString()__assertEquals("http://foo.com/rest/books/6/pages/1.json", result)__</pre>_@return the removed path extension for possible re-use, or {@code null}_@since 4.0;@Nullable_	public String removePathExtension() {_		String extension = null__		if (this.originalPath != null) {_			extension = UriUtils.extractFileExtension(this.originalPath)__			if (!StringUtils.isEmpty(extension)) {_				int end = this.originalPath.length() - (extension.length() + 1)__				replacePath(this.originalPath.substring(0, end))__			}_			this.originalPath = null__		}_		return extension__	};remove,any,path,extension,from,the,link,http,servlet,request,get,request,uri,request,uri,this,method,must,be,invoked,before,any,calls,to,link,path,string,or,link,path,segment,string,pre,get,http,foo,com,rest,books,6,json,servlet,uri,components,builder,builder,servlet,uri,components,builder,from,request,uri,this,request,string,ext,builder,remove,path,extension,string,uri,builder,path,pages,1,ext,build,and,expand,ext,to,uri,string,assert,equals,http,foo,com,rest,books,6,pages,1,json,result,pre,return,the,removed,path,extension,for,possible,re,use,or,code,null,since,4,0;nullable,public,string,remove,path,extension,string,extension,null,if,this,original,path,null,extension,uri,utils,extract,file,extension,this,original,path,if,string,utils,is,empty,extension,int,end,this,original,path,length,extension,length,1,replace,path,this,original,path,substring,0,end,this,original,path,null,return,extension
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromContextPath(HttpServletRequest request);1328020251;Return a builder initialized with the host, port, scheme, and the_context path of the given request.;public static ServletUriComponentsBuilder fromContextPath(HttpServletRequest request) {_		ServletUriComponentsBuilder builder = fromRequest(request)__		builder.replacePath(new UrlPathHelper().getContextPath(request))__		builder.replaceQuery(null)__		return builder__	};return,a,builder,initialized,with,the,host,port,scheme,and,the,context,path,of,the,given,request;public,static,servlet,uri,components,builder,from,context,path,http,servlet,request,request,servlet,uri,components,builder,builder,from,request,request,builder,replace,path,new,url,path,helper,get,context,path,request,builder,replace,query,null,return,builder
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromContextPath(HttpServletRequest request);1329142650;Prepare a builder from the host, port, scheme, and context path of_an HttpServletRequest.;public static ServletUriComponentsBuilder fromContextPath(HttpServletRequest request) {_		ServletUriComponentsBuilder builder = fromRequest(request)__		builder.replacePath(request.getContextPath())__		builder.replaceQuery(null)__		return builder__	};prepare,a,builder,from,the,host,port,scheme,and,context,path,of,an,http,servlet,request;public,static,servlet,uri,components,builder,from,context,path,http,servlet,request,request,servlet,uri,components,builder,builder,from,request,request,builder,replace,path,request,get,context,path,builder,replace,query,null,return,builder
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromContextPath(HttpServletRequest request);1362408075;Prepare a builder from the host, port, scheme, and context path of_an HttpServletRequest.;public static ServletUriComponentsBuilder fromContextPath(HttpServletRequest request) {_		ServletUriComponentsBuilder builder = fromRequest(request)__		builder.replacePath(request.getContextPath())__		builder.replaceQuery(null)__		return builder__	};prepare,a,builder,from,the,host,port,scheme,and,context,path,of,an,http,servlet,request;public,static,servlet,uri,components,builder,from,context,path,http,servlet,request,request,servlet,uri,components,builder,builder,from,request,request,builder,replace,path,request,get,context,path,builder,replace,query,null,return,builder
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromContextPath(HttpServletRequest request);1375199802;Prepare a builder from the host, port, scheme, and context path of_an HttpServletRequest.;public static ServletUriComponentsBuilder fromContextPath(HttpServletRequest request) {_		ServletUriComponentsBuilder builder = fromRequest(request)__		builder.replacePath(request.getContextPath())__		builder.replaceQuery(null)__		return builder__	};prepare,a,builder,from,the,host,port,scheme,and,context,path,of,an,http,servlet,request;public,static,servlet,uri,components,builder,from,context,path,http,servlet,request,request,servlet,uri,components,builder,builder,from,request,request,builder,replace,path,request,get,context,path,builder,replace,query,null,return,builder
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromContextPath(HttpServletRequest request);1377797966;Prepare a builder from the host, port, scheme, and context path of_an HttpServletRequest.;public static ServletUriComponentsBuilder fromContextPath(HttpServletRequest request) {_		ServletUriComponentsBuilder builder = fromRequest(request)__		builder.replacePath(request.getContextPath())__		builder.replaceQuery(null)__		return builder__	};prepare,a,builder,from,the,host,port,scheme,and,context,path,of,an,http,servlet,request;public,static,servlet,uri,components,builder,from,context,path,http,servlet,request,request,servlet,uri,components,builder,builder,from,request,request,builder,replace,path,request,get,context,path,builder,replace,query,null,return,builder
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromContextPath(HttpServletRequest request);1382387168;Prepare a builder from the host, port, scheme, and context path of_an HttpServletRequest.;public static ServletUriComponentsBuilder fromContextPath(HttpServletRequest request) {_		ServletUriComponentsBuilder builder = fromRequest(request)__		builder.replacePath(request.getContextPath())__		builder.replaceQuery(null)__		return builder__	};prepare,a,builder,from,the,host,port,scheme,and,context,path,of,an,http,servlet,request;public,static,servlet,uri,components,builder,from,context,path,http,servlet,request,request,servlet,uri,components,builder,builder,from,request,request,builder,replace,path,request,get,context,path,builder,replace,query,null,return,builder
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromContextPath(HttpServletRequest request);1385423968;Prepare a builder from the host, port, scheme, and context path of_an HttpServletRequest.;public static ServletUriComponentsBuilder fromContextPath(HttpServletRequest request) {_		ServletUriComponentsBuilder builder = fromRequest(request)__		builder.replacePath(request.getContextPath())__		builder.replaceQuery(null)__		return builder__	};prepare,a,builder,from,the,host,port,scheme,and,context,path,of,an,http,servlet,request;public,static,servlet,uri,components,builder,from,context,path,http,servlet,request,request,servlet,uri,components,builder,builder,from,request,request,builder,replace,path,request,get,context,path,builder,replace,query,null,return,builder
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromContextPath(HttpServletRequest request);1402540848;Prepare a builder from the host, port, scheme, and context path of_an HttpServletRequest.;public static ServletUriComponentsBuilder fromContextPath(HttpServletRequest request) {_		ServletUriComponentsBuilder builder = fromRequest(request)__		builder.replacePath(request.getContextPath())__		builder.replaceQuery(null)__		return builder__	};prepare,a,builder,from,the,host,port,scheme,and,context,path,of,an,http,servlet,request;public,static,servlet,uri,components,builder,from,context,path,http,servlet,request,request,servlet,uri,components,builder,builder,from,request,request,builder,replace,path,request,get,context,path,builder,replace,query,null,return,builder
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromContextPath(HttpServletRequest request);1405032917;Prepare a builder from the host, port, scheme, and context path of_an HttpServletRequest.;public static ServletUriComponentsBuilder fromContextPath(HttpServletRequest request) {_		ServletUriComponentsBuilder builder = fromRequest(request)__		builder.replacePath(request.getContextPath())__		builder.replaceQuery(null)__		return builder__	};prepare,a,builder,from,the,host,port,scheme,and,context,path,of,an,http,servlet,request;public,static,servlet,uri,components,builder,from,context,path,http,servlet,request,request,servlet,uri,components,builder,builder,from,request,request,builder,replace,path,request,get,context,path,builder,replace,query,null,return,builder
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromContextPath(HttpServletRequest request);1405084622;Prepare a builder from the host, port, scheme, and context path of_an HttpServletRequest.;public static ServletUriComponentsBuilder fromContextPath(HttpServletRequest request) {_		ServletUriComponentsBuilder builder = fromRequest(request)__		builder.replacePath(request.getContextPath())__		builder.replaceQuery(null)__		return builder__	};prepare,a,builder,from,the,host,port,scheme,and,context,path,of,an,http,servlet,request;public,static,servlet,uri,components,builder,from,context,path,http,servlet,request,request,servlet,uri,components,builder,builder,from,request,request,builder,replace,path,request,get,context,path,builder,replace,query,null,return,builder
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromContextPath(HttpServletRequest request);1417632385;Prepare a builder from the host, port, scheme, and context path of_an HttpServletRequest.;public static ServletUriComponentsBuilder fromContextPath(HttpServletRequest request) {_		ServletUriComponentsBuilder builder = fromRequest(request)__		builder.replacePath(request.getContextPath())__		builder.replaceQuery(null)__		return builder__	};prepare,a,builder,from,the,host,port,scheme,and,context,path,of,an,http,servlet,request;public,static,servlet,uri,components,builder,from,context,path,http,servlet,request,request,servlet,uri,components,builder,builder,from,request,request,builder,replace,path,request,get,context,path,builder,replace,query,null,return,builder
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromContextPath(HttpServletRequest request);1417706155;Prepare a builder from the host, port, scheme, and context path of_an HttpServletRequest.;public static ServletUriComponentsBuilder fromContextPath(HttpServletRequest request) {_		String path = request.getContextPath()__		path = prependForwardedPrefix(request, path)__		ServletUriComponentsBuilder builder = fromRequest(request)__		builder.replacePath(path)__		builder.replaceQuery(null)__		return builder__	};prepare,a,builder,from,the,host,port,scheme,and,context,path,of,an,http,servlet,request;public,static,servlet,uri,components,builder,from,context,path,http,servlet,request,request,string,path,request,get,context,path,path,prepend,forwarded,prefix,request,path,servlet,uri,components,builder,builder,from,request,request,builder,replace,path,path,builder,replace,query,null,return,builder
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromContextPath(HttpServletRequest request);1417707014;Prepare a builder from the host, port, scheme, and context path of the_given HttpServletRequest.;public static ServletUriComponentsBuilder fromContextPath(HttpServletRequest request) {_		ServletUriComponentsBuilder builder = initFromRequest(request)__		builder.replacePath(prependForwardedPrefix(request, request.getContextPath()))__		return builder__	};prepare,a,builder,from,the,host,port,scheme,and,context,path,of,the,given,http,servlet,request;public,static,servlet,uri,components,builder,from,context,path,http,servlet,request,request,servlet,uri,components,builder,builder,init,from,request,request,builder,replace,path,prepend,forwarded,prefix,request,request,get,context,path,return,builder
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromContextPath(HttpServletRequest request);1417799775;Prepare a builder from the host, port, scheme, and context path of the_given HttpServletRequest.;public static ServletUriComponentsBuilder fromContextPath(HttpServletRequest request) {_		ServletUriComponentsBuilder builder = initFromRequest(request)__		builder.replacePath(prependForwardedPrefix(request, request.getContextPath()))__		return builder__	};prepare,a,builder,from,the,host,port,scheme,and,context,path,of,the,given,http,servlet,request;public,static,servlet,uri,components,builder,from,context,path,http,servlet,request,request,servlet,uri,components,builder,builder,init,from,request,request,builder,replace,path,prepend,forwarded,prefix,request,request,get,context,path,return,builder
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromContextPath(HttpServletRequest request);1422572109;Prepare a builder from the host, port, scheme, and context path of the_given HttpServletRequest.;public static ServletUriComponentsBuilder fromContextPath(HttpServletRequest request) {_		ServletUriComponentsBuilder builder = initFromRequest(request)__		builder.replacePath(prependForwardedPrefix(request, request.getContextPath()))__		return builder__	};prepare,a,builder,from,the,host,port,scheme,and,context,path,of,the,given,http,servlet,request;public,static,servlet,uri,components,builder,from,context,path,http,servlet,request,request,servlet,uri,components,builder,builder,init,from,request,request,builder,replace,path,prepend,forwarded,prefix,request,request,get,context,path,return,builder
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromContextPath(HttpServletRequest request);1423547594;Prepare a builder from the host, port, scheme, and context path of the_given HttpServletRequest.;public static ServletUriComponentsBuilder fromContextPath(HttpServletRequest request) {_		ServletUriComponentsBuilder builder = initFromRequest(request)__		builder.replacePath(prependForwardedPrefix(request, request.getContextPath()))__		return builder__	};prepare,a,builder,from,the,host,port,scheme,and,context,path,of,the,given,http,servlet,request;public,static,servlet,uri,components,builder,from,context,path,http,servlet,request,request,servlet,uri,components,builder,builder,init,from,request,request,builder,replace,path,prepend,forwarded,prefix,request,request,get,context,path,return,builder
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromContextPath(HttpServletRequest request);1424272588;Prepare a builder from the host, port, scheme, and context path of the_given HttpServletRequest.;public static ServletUriComponentsBuilder fromContextPath(HttpServletRequest request) {_		ServletUriComponentsBuilder builder = initFromRequest(request)__		builder.replacePath(prependForwardedPrefix(request, request.getContextPath()))__		return builder__	};prepare,a,builder,from,the,host,port,scheme,and,context,path,of,the,given,http,servlet,request;public,static,servlet,uri,components,builder,from,context,path,http,servlet,request,request,servlet,uri,components,builder,builder,init,from,request,request,builder,replace,path,prepend,forwarded,prefix,request,request,get,context,path,return,builder
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromContextPath(HttpServletRequest request);1426553101;Prepare a builder from the host, port, scheme, and context path of the_given HttpServletRequest.;public static ServletUriComponentsBuilder fromContextPath(HttpServletRequest request) {_		ServletUriComponentsBuilder builder = initFromRequest(request)__		builder.replacePath(prependForwardedPrefix(request, request.getContextPath()))__		return builder__	};prepare,a,builder,from,the,host,port,scheme,and,context,path,of,the,given,http,servlet,request;public,static,servlet,uri,components,builder,from,context,path,http,servlet,request,request,servlet,uri,components,builder,builder,init,from,request,request,builder,replace,path,prepend,forwarded,prefix,request,request,get,context,path,return,builder
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromContextPath(HttpServletRequest request);1458830024;Prepare a builder from the host, port, scheme, and context path of the_given HttpServletRequest.;public static ServletUriComponentsBuilder fromContextPath(HttpServletRequest request) {_		ServletUriComponentsBuilder builder = initFromRequest(request)__		builder.replacePath(prependForwardedPrefix(request, request.getContextPath()))__		return builder__	};prepare,a,builder,from,the,host,port,scheme,and,context,path,of,the,given,http,servlet,request;public,static,servlet,uri,components,builder,from,context,path,http,servlet,request,request,servlet,uri,components,builder,builder,init,from,request,request,builder,replace,path,prepend,forwarded,prefix,request,request,get,context,path,return,builder
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromContextPath(HttpServletRequest request);1466187642;Prepare a builder from the host, port, scheme, and context path of the_given HttpServletRequest.;public static ServletUriComponentsBuilder fromContextPath(HttpServletRequest request) {_		ServletUriComponentsBuilder builder = initFromRequest(request)__		builder.replacePath(prependForwardedPrefix(request, request.getContextPath()))__		return builder__	};prepare,a,builder,from,the,host,port,scheme,and,context,path,of,the,given,http,servlet,request;public,static,servlet,uri,components,builder,from,context,path,http,servlet,request,request,servlet,uri,components,builder,builder,init,from,request,request,builder,replace,path,prepend,forwarded,prefix,request,request,get,context,path,return,builder
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromContextPath(HttpServletRequest request);1468963833;Prepare a builder from the host, port, scheme, and context path of the_given HttpServletRequest.;public static ServletUriComponentsBuilder fromContextPath(HttpServletRequest request) {_		ServletUriComponentsBuilder builder = initFromRequest(request)__		builder.replacePath(prependForwardedPrefix(request, request.getContextPath()))__		return builder__	};prepare,a,builder,from,the,host,port,scheme,and,context,path,of,the,given,http,servlet,request;public,static,servlet,uri,components,builder,from,context,path,http,servlet,request,request,servlet,uri,components,builder,builder,init,from,request,request,builder,replace,path,prepend,forwarded,prefix,request,request,get,context,path,return,builder
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromContextPath(HttpServletRequest request);1485810955;Prepare a builder from the host, port, scheme, and context path of the_given HttpServletRequest.;public static ServletUriComponentsBuilder fromContextPath(HttpServletRequest request) {_		ServletUriComponentsBuilder builder = initFromRequest(request)__		builder.replacePath(prependForwardedPrefix(request, request.getContextPath()))__		return builder__	};prepare,a,builder,from,the,host,port,scheme,and,context,path,of,the,given,http,servlet,request;public,static,servlet,uri,components,builder,from,context,path,http,servlet,request,request,servlet,uri,components,builder,builder,init,from,request,request,builder,replace,path,prepend,forwarded,prefix,request,request,get,context,path,return,builder
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromContextPath(HttpServletRequest request);1495868221;Prepare a builder from the host, port, scheme, and context path of the_given HttpServletRequest.;public static ServletUriComponentsBuilder fromContextPath(HttpServletRequest request) {_		ServletUriComponentsBuilder builder = initFromRequest(request)__		builder.replacePath(prependForwardedPrefix(request, request.getContextPath()))__		return builder__	};prepare,a,builder,from,the,host,port,scheme,and,context,path,of,the,given,http,servlet,request;public,static,servlet,uri,components,builder,from,context,path,http,servlet,request,request,servlet,uri,components,builder,builder,init,from,request,request,builder,replace,path,prepend,forwarded,prefix,request,request,get,context,path,return,builder
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromContextPath(HttpServletRequest request);1496370972;Prepare a builder from the host, port, scheme, and context path of the_given HttpServletRequest.__<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs.;public static ServletUriComponentsBuilder fromContextPath(HttpServletRequest request) {_		ServletUriComponentsBuilder builder = initFromRequest(request)__		builder.replacePath(prependForwardedPrefix(request, request.getContextPath()))__		return builder__	};prepare,a,builder,from,the,host,port,scheme,and,context,path,of,the,given,http,servlet,request,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs;public,static,servlet,uri,components,builder,from,context,path,http,servlet,request,request,servlet,uri,components,builder,builder,init,from,request,request,builder,replace,path,prepend,forwarded,prefix,request,request,get,context,path,return,builder
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromContextPath(HttpServletRequest request);1496837955;Prepare a builder from the host, port, scheme, and context path of the_given HttpServletRequest._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs.;public static ServletUriComponentsBuilder fromContextPath(HttpServletRequest request) {_		ServletUriComponentsBuilder builder = initFromRequest(request)__		builder.replacePath(prependForwardedPrefix(request, request.getContextPath()))__		return builder__	};prepare,a,builder,from,the,host,port,scheme,and,context,path,of,the,given,http,servlet,request,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs;public,static,servlet,uri,components,builder,from,context,path,http,servlet,request,request,servlet,uri,components,builder,builder,init,from,request,request,builder,replace,path,prepend,forwarded,prefix,request,request,get,context,path,return,builder
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromContextPath(HttpServletRequest request);1498780456;Prepare a builder from the host, port, scheme, and context path of the_given HttpServletRequest._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs.;public static ServletUriComponentsBuilder fromContextPath(HttpServletRequest request) {_		ServletUriComponentsBuilder builder = initFromRequest(request)__		builder.replacePath(prependForwardedPrefix(request, request.getContextPath()))__		return builder__	};prepare,a,builder,from,the,host,port,scheme,and,context,path,of,the,given,http,servlet,request,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs;public,static,servlet,uri,components,builder,from,context,path,http,servlet,request,request,servlet,uri,components,builder,builder,init,from,request,request,builder,replace,path,prepend,forwarded,prefix,request,request,get,context,path,return,builder
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromContextPath(HttpServletRequest request);1522354261;Prepare a builder from the host, port, scheme, and context path of the_given HttpServletRequest._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs.;public static ServletUriComponentsBuilder fromContextPath(HttpServletRequest request) {_		ServletUriComponentsBuilder builder = initFromRequest(request)__		builder.replacePath(prependForwardedPrefix(request, request.getContextPath()))__		return builder__	};prepare,a,builder,from,the,host,port,scheme,and,context,path,of,the,given,http,servlet,request,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs;public,static,servlet,uri,components,builder,from,context,path,http,servlet,request,request,servlet,uri,components,builder,builder,init,from,request,request,builder,replace,path,prepend,forwarded,prefix,request,request,get,context,path,return,builder
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromContextPath(HttpServletRequest request);1522361849;Prepare a builder from the host, port, scheme, and context path of the_given HttpServletRequest.__<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs.__<p>As of 4.3.15, this method replaces the contextPath with the value_of "X-Forwarded-Prefix" rather than prepending, thus aligning with_{@code ForwardedHeaderFiller}.;public static ServletUriComponentsBuilder fromContextPath(HttpServletRequest request) {_		ServletUriComponentsBuilder builder = initFromRequest(request)__		String forwardedPrefix = getForwardedPrefix(request)__		builder.replacePath(forwardedPrefix != null ? forwardedPrefix : request.getContextPath())__		return builder__	};prepare,a,builder,from,the,host,port,scheme,and,context,path,of,the,given,http,servlet,request,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,p,as,of,4,3,15,this,method,replaces,the,context,path,with,the,value,of,x,forwarded,prefix,rather,than,prepending,thus,aligning,with,code,forwarded,header,filler;public,static,servlet,uri,components,builder,from,context,path,http,servlet,request,request,servlet,uri,components,builder,builder,init,from,request,request,string,forwarded,prefix,get,forwarded,prefix,request,builder,replace,path,forwarded,prefix,null,forwarded,prefix,request,get,context,path,return,builder
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromContextPath(HttpServletRequest request);1526045499;Prepare a builder from the host, port, scheme, and context path of the_given HttpServletRequest.__<p><strong>Note:</strong> as of 5.1 this method ignores_{@code "Forwarded"} and {@code "X-Forwarded-*"} headers that specify the_client-originated address. Consider using the {@code ForwardedHeaderFilter}_to extract and use, or to discard such headers.;public static ServletUriComponentsBuilder fromContextPath(HttpServletRequest request) {_		ServletUriComponentsBuilder builder = initFromRequest(request)__		builder.replacePath(request.getContextPath())__		return builder__	};prepare,a,builder,from,the,host,port,scheme,and,context,path,of,the,given,http,servlet,request,p,strong,note,strong,as,of,5,1,this,method,ignores,code,forwarded,and,code,x,forwarded,headers,that,specify,the,client,originated,address,consider,using,the,code,forwarded,header,filter,to,extract,and,use,or,to,discard,such,headers;public,static,servlet,uri,components,builder,from,context,path,http,servlet,request,request,servlet,uri,components,builder,builder,init,from,request,request,builder,replace,path,request,get,context,path,return,builder
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromContextPath(HttpServletRequest request);1536336006;Prepare a builder from the host, port, scheme, and context path of the_given HttpServletRequest.__<p><strong>Note:</strong> as of 5.1 this method ignores_{@code "Forwarded"} and {@code "X-Forwarded-*"} headers that specify the_client-originated address. Consider using the {@code ForwardedHeaderFilter}_to extract and use, or to discard such headers.;public static ServletUriComponentsBuilder fromContextPath(HttpServletRequest request) {_		ServletUriComponentsBuilder builder = initFromRequest(request)__		builder.replacePath(request.getContextPath())__		return builder__	};prepare,a,builder,from,the,host,port,scheme,and,context,path,of,the,given,http,servlet,request,p,strong,note,strong,as,of,5,1,this,method,ignores,code,forwarded,and,code,x,forwarded,headers,that,specify,the,client,originated,address,consider,using,the,code,forwarded,header,filter,to,extract,and,use,or,to,discard,such,headers;public,static,servlet,uri,components,builder,from,context,path,http,servlet,request,request,servlet,uri,components,builder,builder,init,from,request,request,builder,replace,path,request,get,context,path,return,builder
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromContextPath(HttpServletRequest request);1536336678;Prepare a builder from the host, port, scheme, and context path of the_given HttpServletRequest._<p><strong>Note:</strong> As of 5.1, this method ignores_{@code "Forwarded"} and {@code "X-Forwarded-*"} headers that specify the_client-originated address. Consider using the {@code ForwardedHeaderFilter}_to extract and use, or to discard such headers.;public static ServletUriComponentsBuilder fromContextPath(HttpServletRequest request) {_		ServletUriComponentsBuilder builder = initFromRequest(request)__		builder.replacePath(request.getContextPath())__		return builder__	};prepare,a,builder,from,the,host,port,scheme,and,context,path,of,the,given,http,servlet,request,p,strong,note,strong,as,of,5,1,this,method,ignores,code,forwarded,and,code,x,forwarded,headers,that,specify,the,client,originated,address,consider,using,the,code,forwarded,header,filter,to,extract,and,use,or,to,discard,such,headers;public,static,servlet,uri,components,builder,from,context,path,http,servlet,request,request,servlet,uri,components,builder,builder,init,from,request,request,builder,replace,path,request,get,context,path,return,builder
ServletUriComponentsBuilder -> public static ServletUriComponentsBuilder fromContextPath(HttpServletRequest request);1539118301;Prepare a builder from the host, port, scheme, and context path of the_given HttpServletRequest.;public static ServletUriComponentsBuilder fromContextPath(HttpServletRequest request) {_		ServletUriComponentsBuilder builder = initFromRequest(request)__		builder.replacePath(request.getContextPath())__		return builder__	};prepare,a,builder,from,the,host,port,scheme,and,context,path,of,the,given,http,servlet,request;public,static,servlet,uri,components,builder,from,context,path,http,servlet,request,request,servlet,uri,components,builder,builder,init,from,request,request,builder,replace,path,request,get,context,path,return,builder
