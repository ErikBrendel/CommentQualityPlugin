# id;timestamp;commentText;codeText;commentWords;codeWords
MappingJackson2XmlView -> @Override 	public void setModelKey(String modelKey);1407939778;{@inheritDoc};@Override_	public void setModelKey(String modelKey) {_		this.modelKey = modelKey__	};inherit,doc;override,public,void,set,model,key,string,model,key,this,model,key,model,key
MappingJackson2XmlView -> @Override 	public void setModelKey(String modelKey);1409790625;{@inheritDoc};@Override_	public void setModelKey(String modelKey) {_		this.modelKey = modelKey__	};inherit,doc;override,public,void,set,model,key,string,model,key,this,model,key,model,key
MappingJackson2XmlView -> @Override 	public void setModelKey(String modelKey);1412047095;{@inheritDoc};@Override_	public void setModelKey(String modelKey) {_		this.modelKey = modelKey__	};inherit,doc;override,public,void,set,model,key,string,model,key,this,model,key,model,key
MappingJackson2XmlView -> @Override 	public void setModelKey(String modelKey);1434375869;{@inheritDoc};@Override_	public void setModelKey(String modelKey) {_		this.modelKey = modelKey__	};inherit,doc;override,public,void,set,model,key,string,model,key,this,model,key,model,key
MappingJackson2XmlView -> @Override 	public void setModelKey(String modelKey);1439985855;{@inheritDoc};@Override_	public void setModelKey(String modelKey) {_		this.modelKey = modelKey__	};inherit,doc;override,public,void,set,model,key,string,model,key,this,model,key,model,key
MappingJackson2XmlView -> @Override 	public void setModelKey(String modelKey);1450368890;{@inheritDoc};@Override_	public void setModelKey(String modelKey) {_		this.modelKey = modelKey__	};inherit,doc;override,public,void,set,model,key,string,model,key,this,model,key,model,key
MappingJackson2XmlView -> @Override 	public void setModelKey(String modelKey);1496837955;{@inheritDoc};@Override_	public void setModelKey(String modelKey) {_		this.modelKey = modelKey__	};inherit,doc;override,public,void,set,model,key,string,model,key,this,model,key,model,key
MappingJackson2XmlView -> @Override 	public void setModelKey(String modelKey);1498780456;{@inheritDoc};@Override_	public void setModelKey(String modelKey) {_		this.modelKey = modelKey__	};inherit,doc;override,public,void,set,model,key,string,model,key,this,model,key,model,key
MappingJackson2XmlView -> @Override 	public void setModelKey(String modelKey);1530174524;{@inheritDoc};@Override_	public void setModelKey(String modelKey) {_		this.modelKey = modelKey__	};inherit,doc;override,public,void,set,model,key,string,model,key,this,model,key,model,key
MappingJackson2XmlView -> public MappingJackson2XmlView(XmlMapper xmlMapper);1439985855;Construct a new {@code MappingJackson2XmlView} using the provided {@link XmlMapper}_and setting the content type to {@code application/xml}._@since 4.2.1;public MappingJackson2XmlView(XmlMapper xmlMapper) {_		super(xmlMapper, DEFAULT_CONTENT_TYPE)__	};construct,a,new,code,mapping,jackson2xml,view,using,the,provided,link,xml,mapper,and,setting,the,content,type,to,code,application,xml,since,4,2,1;public,mapping,jackson2xml,view,xml,mapper,xml,mapper,super,xml,mapper
MappingJackson2XmlView -> public MappingJackson2XmlView(XmlMapper xmlMapper);1450368890;Construct a new {@code MappingJackson2XmlView} using the provided {@link XmlMapper}_and setting the content type to {@code application/xml}._@since 4.2.1;public MappingJackson2XmlView(XmlMapper xmlMapper) {_		super(xmlMapper, DEFAULT_CONTENT_TYPE)__	};construct,a,new,code,mapping,jackson2xml,view,using,the,provided,link,xml,mapper,and,setting,the,content,type,to,code,application,xml,since,4,2,1;public,mapping,jackson2xml,view,xml,mapper,xml,mapper,super,xml,mapper
MappingJackson2XmlView -> public MappingJackson2XmlView(XmlMapper xmlMapper);1496837955;Construct a new {@code MappingJackson2XmlView} using the provided {@link XmlMapper}_and setting the content type to {@code application/xml}._@since 4.2.1;public MappingJackson2XmlView(XmlMapper xmlMapper) {_		super(xmlMapper, DEFAULT_CONTENT_TYPE)__	};construct,a,new,code,mapping,jackson2xml,view,using,the,provided,link,xml,mapper,and,setting,the,content,type,to,code,application,xml,since,4,2,1;public,mapping,jackson2xml,view,xml,mapper,xml,mapper,super,xml,mapper
MappingJackson2XmlView -> public MappingJackson2XmlView(XmlMapper xmlMapper);1498780456;Construct a new {@code MappingJackson2XmlView} using the provided {@link XmlMapper}_and setting the content type to {@code application/xml}._@since 4.2.1;public MappingJackson2XmlView(XmlMapper xmlMapper) {_		super(xmlMapper, DEFAULT_CONTENT_TYPE)__	};construct,a,new,code,mapping,jackson2xml,view,using,the,provided,link,xml,mapper,and,setting,the,content,type,to,code,application,xml,since,4,2,1;public,mapping,jackson2xml,view,xml,mapper,xml,mapper,super,xml,mapper
MappingJackson2XmlView -> public MappingJackson2XmlView(XmlMapper xmlMapper);1530174524;Construct a new {@code MappingJackson2XmlView} using the provided {@link XmlMapper}_and setting the content type to {@code application/xml}._@since 4.2.1;public MappingJackson2XmlView(XmlMapper xmlMapper) {_		super(xmlMapper, DEFAULT_CONTENT_TYPE)__	};construct,a,new,code,mapping,jackson2xml,view,using,the,provided,link,xml,mapper,and,setting,the,content,type,to,code,application,xml,since,4,2,1;public,mapping,jackson2xml,view,xml,mapper,xml,mapper,super,xml,mapper
MappingJackson2XmlView -> public MappingJackson2XmlView(XmlMapper xmlMapper);1534272160;Construct a new {@code MappingJackson2XmlView} using the provided {@link XmlMapper}_and setting the content type to {@code application/xml}._@since 4.2.1;public MappingJackson2XmlView(XmlMapper xmlMapper) {_		super(xmlMapper, DEFAULT_CONTENT_TYPE)__	};construct,a,new,code,mapping,jackson2xml,view,using,the,provided,link,xml,mapper,and,setting,the,content,type,to,code,application,xml,since,4,2,1;public,mapping,jackson2xml,view,xml,mapper,xml,mapper,super,xml,mapper
MappingJackson2XmlView -> @Override 	protected Object filterModel(Map<String, Object> model);1407939778;Filter out undesired attributes from the given model._The return value can be either another {@link Map} or a single value object._@param model the model, as passed on to {@link #renderMergedOutputModel}_@return the value to be rendered;@Override_	protected Object filterModel(Map<String, Object> model) {_		Object value = null__		if (this.modelKey != null) {_			value = model.get(this.modelKey)__			if (value == null) {_				throw new IllegalStateException(_						"Model contains no object with key [" + this.modelKey + "]")__			}_		} else {_			for (Map.Entry<String, Object> entry : model.entrySet()) {_				if (!(entry.getValue() instanceof BindingResult) &&_						!entry.getKey().equals(JsonView.class.getName())) {_					if(value != null) {_						throw new IllegalStateException("Model contains more than one object to render, only one is supported")__					}_					value = entry.getValue()__				}_			}_		}_		return value__	};filter,out,undesired,attributes,from,the,given,model,the,return,value,can,be,either,another,link,map,or,a,single,value,object,param,model,the,model,as,passed,on,to,link,render,merged,output,model,return,the,value,to,be,rendered;override,protected,object,filter,model,map,string,object,model,object,value,null,if,this,model,key,null,value,model,get,this,model,key,if,value,null,throw,new,illegal,state,exception,model,contains,no,object,with,key,this,model,key,else,for,map,entry,string,object,entry,model,entry,set,if,entry,get,value,instanceof,binding,result,entry,get,key,equals,json,view,class,get,name,if,value,null,throw,new,illegal,state,exception,model,contains,more,than,one,object,to,render,only,one,is,supported,value,entry,get,value,return,value
MappingJackson2XmlView -> @Override 	protected Object filterModel(Map<String, Object> model);1409790625;Filter out undesired attributes from the given model._The return value can be either another {@link Map} or a single value object._@param model the model, as passed on to {@link #renderMergedOutputModel}_@return the value to be rendered;@Override_	protected Object filterModel(Map<String, Object> model) {_		Object value = null__		if (this.modelKey != null) {_			value = model.get(this.modelKey)__			if (value == null) {_				throw new IllegalStateException(_						"Model contains no object with key [" + this.modelKey + "]")__			}_		}_		else {_			for (Map.Entry<String, Object> entry : model.entrySet()) {_				if (!(entry.getValue() instanceof BindingResult) && !entry.getKey().equals(JsonView.class.getName())) {_					if (value != null) {_						throw new IllegalStateException("Model contains more than one object to render, only one is supported")__					}_					value = entry.getValue()__				}_			}_		}_		return value__	};filter,out,undesired,attributes,from,the,given,model,the,return,value,can,be,either,another,link,map,or,a,single,value,object,param,model,the,model,as,passed,on,to,link,render,merged,output,model,return,the,value,to,be,rendered;override,protected,object,filter,model,map,string,object,model,object,value,null,if,this,model,key,null,value,model,get,this,model,key,if,value,null,throw,new,illegal,state,exception,model,contains,no,object,with,key,this,model,key,else,for,map,entry,string,object,entry,model,entry,set,if,entry,get,value,instanceof,binding,result,entry,get,key,equals,json,view,class,get,name,if,value,null,throw,new,illegal,state,exception,model,contains,more,than,one,object,to,render,only,one,is,supported,value,entry,get,value,return,value
MappingJackson2XmlView -> @Override 	protected Object filterModel(Map<String, Object> model);1412047095;Filter out undesired attributes from the given model._The return value can be either another {@link Map} or a single value object._@param model the model, as passed on to {@link #renderMergedOutputModel}_@return the value to be rendered;@Override_	protected Object filterModel(Map<String, Object> model) {_		Object value = null__		if (this.modelKey != null) {_			value = model.get(this.modelKey)__			if (value == null) {_				throw new IllegalStateException(_						"Model contains no object with key [" + this.modelKey + "]")__			}_		}_		else {_			for (Map.Entry<String, Object> entry : model.entrySet()) {_				if (!(entry.getValue() instanceof BindingResult) && !entry.getKey().equals(JsonView.class.getName())) {_					if (value != null) {_						throw new IllegalStateException("Model contains more than one object to render, only one is supported")__					}_					value = entry.getValue()__				}_			}_		}_		return value__	};filter,out,undesired,attributes,from,the,given,model,the,return,value,can,be,either,another,link,map,or,a,single,value,object,param,model,the,model,as,passed,on,to,link,render,merged,output,model,return,the,value,to,be,rendered;override,protected,object,filter,model,map,string,object,model,object,value,null,if,this,model,key,null,value,model,get,this,model,key,if,value,null,throw,new,illegal,state,exception,model,contains,no,object,with,key,this,model,key,else,for,map,entry,string,object,entry,model,entry,set,if,entry,get,value,instanceof,binding,result,entry,get,key,equals,json,view,class,get,name,if,value,null,throw,new,illegal,state,exception,model,contains,more,than,one,object,to,render,only,one,is,supported,value,entry,get,value,return,value
MappingJackson2XmlView -> @Override 	protected Object filterModel(Map<String, Object> model);1434375869;Filter out undesired attributes from the given model._The return value can be either another {@link Map} or a single value object._@param model the model, as passed on to {@link #renderMergedOutputModel}_@return the value to be rendered;@Override_	protected Object filterModel(Map<String, Object> model) {_		Object value = null__		if (this.modelKey != null) {_			value = model.get(this.modelKey)__			if (value == null) {_				throw new IllegalStateException(_						"Model contains no object with key [" + this.modelKey + "]")__			}_		}_		else {_			for (Map.Entry<String, Object> entry : model.entrySet()) {_				if (!(entry.getValue() instanceof BindingResult) && !entry.getKey().equals(JsonView.class.getName())) {_					if (value != null) {_						throw new IllegalStateException("Model contains more than one object to render, only one is supported")__					}_					value = entry.getValue()__				}_			}_		}_		return value__	};filter,out,undesired,attributes,from,the,given,model,the,return,value,can,be,either,another,link,map,or,a,single,value,object,param,model,the,model,as,passed,on,to,link,render,merged,output,model,return,the,value,to,be,rendered;override,protected,object,filter,model,map,string,object,model,object,value,null,if,this,model,key,null,value,model,get,this,model,key,if,value,null,throw,new,illegal,state,exception,model,contains,no,object,with,key,this,model,key,else,for,map,entry,string,object,entry,model,entry,set,if,entry,get,value,instanceof,binding,result,entry,get,key,equals,json,view,class,get,name,if,value,null,throw,new,illegal,state,exception,model,contains,more,than,one,object,to,render,only,one,is,supported,value,entry,get,value,return,value
MappingJackson2XmlView -> @Override 	protected Object filterModel(Map<String, Object> model);1439985855;Filter out undesired attributes from the given model._The return value can be either another {@link Map} or a single value object._@param model the model, as passed on to {@link #renderMergedOutputModel}_@return the value to be rendered;@Override_	protected Object filterModel(Map<String, Object> model) {_		Object value = null__		if (this.modelKey != null) {_			value = model.get(this.modelKey)__			if (value == null) {_				throw new IllegalStateException(_						"Model contains no object with key [" + this.modelKey + "]")__			}_		}_		else {_			for (Map.Entry<String, Object> entry : model.entrySet()) {_				if (!(entry.getValue() instanceof BindingResult) && !entry.getKey().equals(JsonView.class.getName())) {_					if (value != null) {_						throw new IllegalStateException("Model contains more than one object to render, only one is supported")__					}_					value = entry.getValue()__				}_			}_		}_		return value__	};filter,out,undesired,attributes,from,the,given,model,the,return,value,can,be,either,another,link,map,or,a,single,value,object,param,model,the,model,as,passed,on,to,link,render,merged,output,model,return,the,value,to,be,rendered;override,protected,object,filter,model,map,string,object,model,object,value,null,if,this,model,key,null,value,model,get,this,model,key,if,value,null,throw,new,illegal,state,exception,model,contains,no,object,with,key,this,model,key,else,for,map,entry,string,object,entry,model,entry,set,if,entry,get,value,instanceof,binding,result,entry,get,key,equals,json,view,class,get,name,if,value,null,throw,new,illegal,state,exception,model,contains,more,than,one,object,to,render,only,one,is,supported,value,entry,get,value,return,value
MappingJackson2XmlView -> @Override 	protected Object filterModel(Map<String, Object> model);1450368890;Filter out undesired attributes from the given model._The return value can be either another {@link Map} or a single value object._@param model the model, as passed on to {@link #renderMergedOutputModel}_@return the value to be rendered;@Override_	protected Object filterModel(Map<String, Object> model) {_		Object value = null__		if (this.modelKey != null) {_			value = model.get(this.modelKey)__			if (value == null) {_				throw new IllegalStateException(_						"Model contains no object with key [" + this.modelKey + "]")__			}_		}_		else {_			for (Map.Entry<String, Object> entry : model.entrySet()) {_				if (!(entry.getValue() instanceof BindingResult) && !entry.getKey().equals(JsonView.class.getName())) {_					if (value != null) {_						throw new IllegalStateException("Model contains more than one object to render, only one is supported")__					}_					value = entry.getValue()__				}_			}_		}_		return value__	};filter,out,undesired,attributes,from,the,given,model,the,return,value,can,be,either,another,link,map,or,a,single,value,object,param,model,the,model,as,passed,on,to,link,render,merged,output,model,return,the,value,to,be,rendered;override,protected,object,filter,model,map,string,object,model,object,value,null,if,this,model,key,null,value,model,get,this,model,key,if,value,null,throw,new,illegal,state,exception,model,contains,no,object,with,key,this,model,key,else,for,map,entry,string,object,entry,model,entry,set,if,entry,get,value,instanceof,binding,result,entry,get,key,equals,json,view,class,get,name,if,value,null,throw,new,illegal,state,exception,model,contains,more,than,one,object,to,render,only,one,is,supported,value,entry,get,value,return,value
MappingJackson2XmlView -> @Override 	protected Object filterModel(Map<String, Object> model);1496837955;Filter out undesired attributes from the given model._The return value can be either another {@link Map} or a single value object._@param model the model, as passed on to {@link #renderMergedOutputModel}_@return the value to be rendered;@Override_	protected Object filterModel(Map<String, Object> model) {_		Object value = null__		if (this.modelKey != null) {_			value = model.get(this.modelKey)__			if (value == null) {_				throw new IllegalStateException(_						"Model contains no object with key [" + this.modelKey + "]")__			}_		}_		else {_			for (Map.Entry<String, Object> entry : model.entrySet()) {_				if (!(entry.getValue() instanceof BindingResult) && !entry.getKey().equals(JsonView.class.getName())) {_					if (value != null) {_						throw new IllegalStateException("Model contains more than one object to render, only one is supported")__					}_					value = entry.getValue()__				}_			}_		}_		Assert.state(value != null, "Model contains no object to render")__		return value__	};filter,out,undesired,attributes,from,the,given,model,the,return,value,can,be,either,another,link,map,or,a,single,value,object,param,model,the,model,as,passed,on,to,link,render,merged,output,model,return,the,value,to,be,rendered;override,protected,object,filter,model,map,string,object,model,object,value,null,if,this,model,key,null,value,model,get,this,model,key,if,value,null,throw,new,illegal,state,exception,model,contains,no,object,with,key,this,model,key,else,for,map,entry,string,object,entry,model,entry,set,if,entry,get,value,instanceof,binding,result,entry,get,key,equals,json,view,class,get,name,if,value,null,throw,new,illegal,state,exception,model,contains,more,than,one,object,to,render,only,one,is,supported,value,entry,get,value,assert,state,value,null,model,contains,no,object,to,render,return,value
MappingJackson2XmlView -> @Override 	protected Object filterModel(Map<String, Object> model);1498780456;Filter out undesired attributes from the given model._The return value can be either another {@link Map} or a single value object._@param model the model, as passed on to {@link #renderMergedOutputModel}_@return the value to be rendered;@Override_	protected Object filterModel(Map<String, Object> model) {_		Object value = null__		if (this.modelKey != null) {_			value = model.get(this.modelKey)__			if (value == null) {_				throw new IllegalStateException(_						"Model contains no object with key [" + this.modelKey + "]")__			}_		}_		else {_			for (Map.Entry<String, Object> entry : model.entrySet()) {_				if (!(entry.getValue() instanceof BindingResult) && !entry.getKey().equals(JsonView.class.getName())) {_					if (value != null) {_						throw new IllegalStateException("Model contains more than one object to render, only one is supported")__					}_					value = entry.getValue()__				}_			}_		}_		Assert.state(value != null, "Model contains no object to render")__		return value__	};filter,out,undesired,attributes,from,the,given,model,the,return,value,can,be,either,another,link,map,or,a,single,value,object,param,model,the,model,as,passed,on,to,link,render,merged,output,model,return,the,value,to,be,rendered;override,protected,object,filter,model,map,string,object,model,object,value,null,if,this,model,key,null,value,model,get,this,model,key,if,value,null,throw,new,illegal,state,exception,model,contains,no,object,with,key,this,model,key,else,for,map,entry,string,object,entry,model,entry,set,if,entry,get,value,instanceof,binding,result,entry,get,key,equals,json,view,class,get,name,if,value,null,throw,new,illegal,state,exception,model,contains,more,than,one,object,to,render,only,one,is,supported,value,entry,get,value,assert,state,value,null,model,contains,no,object,to,render,return,value
MappingJackson2XmlView -> @Override 	protected Object filterModel(Map<String, Object> model);1530174524;Filter out undesired attributes from the given model._The return value can be either another {@link Map} or a single value object._@param model the model, as passed on to {@link #renderMergedOutputModel}_@return the value to be rendered;@Override_	protected Object filterModel(Map<String, Object> model) {_		Object value = null__		if (this.modelKey != null) {_			value = model.get(this.modelKey)__			if (value == null) {_				throw new IllegalStateException(_						"Model contains no object with key [" + this.modelKey + "]")__			}_		}_		else {_			for (Map.Entry<String, Object> entry : model.entrySet()) {_				if (!(entry.getValue() instanceof BindingResult) && !entry.getKey().equals(JsonView.class.getName())) {_					if (value != null) {_						throw new IllegalStateException("Model contains more than one object to render, only one is supported")__					}_					value = entry.getValue()__				}_			}_		}_		Assert.state(value != null, "Model contains no object to render")__		return value__	};filter,out,undesired,attributes,from,the,given,model,the,return,value,can,be,either,another,link,map,or,a,single,value,object,param,model,the,model,as,passed,on,to,link,render,merged,output,model,return,the,value,to,be,rendered;override,protected,object,filter,model,map,string,object,model,object,value,null,if,this,model,key,null,value,model,get,this,model,key,if,value,null,throw,new,illegal,state,exception,model,contains,no,object,with,key,this,model,key,else,for,map,entry,string,object,entry,model,entry,set,if,entry,get,value,instanceof,binding,result,entry,get,key,equals,json,view,class,get,name,if,value,null,throw,new,illegal,state,exception,model,contains,more,than,one,object,to,render,only,one,is,supported,value,entry,get,value,assert,state,value,null,model,contains,no,object,to,render,return,value
MappingJackson2XmlView -> public MappingJackson2XmlView();1412047095;Construct a new {@code MappingJackson2XmlView} using default configuration_provided by {@link Jackson2ObjectMapperBuilder} and setting the content type_to {@code application/xml}.;public MappingJackson2XmlView() {_		super(Jackson2ObjectMapperBuilder.xml().build(), DEFAULT_CONTENT_TYPE)__	};construct,a,new,code,mapping,jackson2xml,view,using,default,configuration,provided,by,link,jackson2object,mapper,builder,and,setting,the,content,type,to,code,application,xml;public,mapping,jackson2xml,view,super,jackson2object,mapper,builder,xml,build
MappingJackson2XmlView -> public MappingJackson2XmlView();1434375869;Construct a new {@code MappingJackson2XmlView} using default configuration_provided by {@link Jackson2ObjectMapperBuilder} and setting the content type_to {@code application/xml}.;public MappingJackson2XmlView() {_		super(Jackson2ObjectMapperBuilder.xml().build(), DEFAULT_CONTENT_TYPE)__	};construct,a,new,code,mapping,jackson2xml,view,using,default,configuration,provided,by,link,jackson2object,mapper,builder,and,setting,the,content,type,to,code,application,xml;public,mapping,jackson2xml,view,super,jackson2object,mapper,builder,xml,build
MappingJackson2XmlView -> public MappingJackson2XmlView();1439985855;Construct a new {@code MappingJackson2XmlView} using default configuration_provided by {@link Jackson2ObjectMapperBuilder} and setting the content type_to {@code application/xml}.;public MappingJackson2XmlView() {_		super(Jackson2ObjectMapperBuilder.xml().build(), DEFAULT_CONTENT_TYPE)__	};construct,a,new,code,mapping,jackson2xml,view,using,default,configuration,provided,by,link,jackson2object,mapper,builder,and,setting,the,content,type,to,code,application,xml;public,mapping,jackson2xml,view,super,jackson2object,mapper,builder,xml,build
MappingJackson2XmlView -> public MappingJackson2XmlView();1450368890;Construct a new {@code MappingJackson2XmlView} using default configuration_provided by {@link Jackson2ObjectMapperBuilder} and setting the content type_to {@code application/xml}.;public MappingJackson2XmlView() {_		super(Jackson2ObjectMapperBuilder.xml().build(), DEFAULT_CONTENT_TYPE)__	};construct,a,new,code,mapping,jackson2xml,view,using,default,configuration,provided,by,link,jackson2object,mapper,builder,and,setting,the,content,type,to,code,application,xml;public,mapping,jackson2xml,view,super,jackson2object,mapper,builder,xml,build
MappingJackson2XmlView -> public MappingJackson2XmlView();1496837955;Construct a new {@code MappingJackson2XmlView} using default configuration_provided by {@link Jackson2ObjectMapperBuilder} and setting the content type_to {@code application/xml}.;public MappingJackson2XmlView() {_		super(Jackson2ObjectMapperBuilder.xml().build(), DEFAULT_CONTENT_TYPE)__	};construct,a,new,code,mapping,jackson2xml,view,using,default,configuration,provided,by,link,jackson2object,mapper,builder,and,setting,the,content,type,to,code,application,xml;public,mapping,jackson2xml,view,super,jackson2object,mapper,builder,xml,build
MappingJackson2XmlView -> public MappingJackson2XmlView();1498780456;Construct a new {@code MappingJackson2XmlView} using default configuration_provided by {@link Jackson2ObjectMapperBuilder} and setting the content type_to {@code application/xml}.;public MappingJackson2XmlView() {_		super(Jackson2ObjectMapperBuilder.xml().build(), DEFAULT_CONTENT_TYPE)__	};construct,a,new,code,mapping,jackson2xml,view,using,default,configuration,provided,by,link,jackson2object,mapper,builder,and,setting,the,content,type,to,code,application,xml;public,mapping,jackson2xml,view,super,jackson2object,mapper,builder,xml,build
MappingJackson2XmlView -> public MappingJackson2XmlView();1530174524;Construct a new {@code MappingJackson2XmlView} using default configuration_provided by {@link Jackson2ObjectMapperBuilder} and setting the content type_to {@code application/xml}.;public MappingJackson2XmlView() {_		super(Jackson2ObjectMapperBuilder.xml().build(), DEFAULT_CONTENT_TYPE)__	};construct,a,new,code,mapping,jackson2xml,view,using,default,configuration,provided,by,link,jackson2object,mapper,builder,and,setting,the,content,type,to,code,application,xml;public,mapping,jackson2xml,view,super,jackson2object,mapper,builder,xml,build
MappingJackson2XmlView -> public MappingJackson2XmlView();1534272160;Construct a new {@code MappingJackson2XmlView} using default configuration_provided by {@link Jackson2ObjectMapperBuilder} and setting the content type_to {@code application/xml}.;public MappingJackson2XmlView() {_		super(Jackson2ObjectMapperBuilder.xml().build(), DEFAULT_CONTENT_TYPE)__	};construct,a,new,code,mapping,jackson2xml,view,using,default,configuration,provided,by,link,jackson2object,mapper,builder,and,setting,the,content,type,to,code,application,xml;public,mapping,jackson2xml,view,super,jackson2object,mapper,builder,xml,build
