# id;timestamp;commentText;codeText;commentWords;codeWords
AbstractHandlerMethodMapping -> protected abstract T getMappingForMethod(Method method, Class<?> handlerType)_;1328020251;Provide the mapping for a handler method. A method for which no_mapping can be provided is not a handler method.__@param method the method to provide a mapping for_@param handlerType the handler type, possibly a sub-type of the method's_declaring class_@return the mapping, or {@code null} if the method is not mapped;protected abstract T getMappingForMethod(Method method, Class<?> handlerType)_;provide,the,mapping,for,a,handler,method,a,method,for,which,no,mapping,can,be,provided,is,not,a,handler,method,param,method,the,method,to,provide,a,mapping,for,param,handler,type,the,handler,type,possibly,a,sub,type,of,the,method,s,declaring,class,return,the,mapping,or,code,null,if,the,method,is,not,mapped;protected,abstract,t,get,mapping,for,method,method,method,class,handler,type
AbstractHandlerMethodMapping -> protected abstract T getMappingForMethod(Method method, Class<?> handlerType)_;1328022204;Provide the mapping for a handler method. A method for which no_mapping can be provided is not a handler method.__@param method the method to provide a mapping for_@param handlerType the handler type, possibly a sub-type of the method's_declaring class_@return the mapping, or {@code null} if the method is not mapped;protected abstract T getMappingForMethod(Method method, Class<?> handlerType)_;provide,the,mapping,for,a,handler,method,a,method,for,which,no,mapping,can,be,provided,is,not,a,handler,method,param,method,the,method,to,provide,a,mapping,for,param,handler,type,the,handler,type,possibly,a,sub,type,of,the,method,s,declaring,class,return,the,mapping,or,code,null,if,the,method,is,not,mapped;protected,abstract,t,get,mapping,for,method,method,method,class,handler,type
AbstractHandlerMethodMapping -> protected abstract T getMappingForMethod(Method method, Class<?> handlerType)_;1336682556;Provide the mapping for a handler method. A method for which no_mapping can be provided is not a handler method.__@param method the method to provide a mapping for_@param handlerType the handler type, possibly a sub-type of the method's_declaring class_@return the mapping, or {@code null} if the method is not mapped;protected abstract T getMappingForMethod(Method method, Class<?> handlerType)_;provide,the,mapping,for,a,handler,method,a,method,for,which,no,mapping,can,be,provided,is,not,a,handler,method,param,method,the,method,to,provide,a,mapping,for,param,handler,type,the,handler,type,possibly,a,sub,type,of,the,method,s,declaring,class,return,the,mapping,or,code,null,if,the,method,is,not,mapped;protected,abstract,t,get,mapping,for,method,method,method,class,handler,type
AbstractHandlerMethodMapping -> protected abstract T getMappingForMethod(Method method, Class<?> handlerType)_;1341441111;Provide the mapping for a handler method. A method for which no_mapping can be provided is not a handler method._@param method the method to provide a mapping for_@param handlerType the handler type, possibly a sub-type of the method's_declaring class_@return the mapping, or {@code null} if the method is not mapped;protected abstract T getMappingForMethod(Method method, Class<?> handlerType)_;provide,the,mapping,for,a,handler,method,a,method,for,which,no,mapping,can,be,provided,is,not,a,handler,method,param,method,the,method,to,provide,a,mapping,for,param,handler,type,the,handler,type,possibly,a,sub,type,of,the,method,s,declaring,class,return,the,mapping,or,code,null,if,the,method,is,not,mapped;protected,abstract,t,get,mapping,for,method,method,method,class,handler,type
AbstractHandlerMethodMapping -> protected abstract T getMappingForMethod(Method method, Class<?> handlerType)_;1356735495;Provide the mapping for a handler method. A method for which no_mapping can be provided is not a handler method._@param method the method to provide a mapping for_@param handlerType the handler type, possibly a sub-type of the method's_declaring class_@return the mapping, or {@code null} if the method is not mapped;protected abstract T getMappingForMethod(Method method, Class<?> handlerType)_;provide,the,mapping,for,a,handler,method,a,method,for,which,no,mapping,can,be,provided,is,not,a,handler,method,param,method,the,method,to,provide,a,mapping,for,param,handler,type,the,handler,type,possibly,a,sub,type,of,the,method,s,declaring,class,return,the,mapping,or,code,null,if,the,method,is,not,mapped;protected,abstract,t,get,mapping,for,method,method,method,class,handler,type
AbstractHandlerMethodMapping -> protected abstract T getMappingForMethod(Method method, Class<?> handlerType)_;1357119239;Provide the mapping for a handler method. A method for which no_mapping can be provided is not a handler method._@param method the method to provide a mapping for_@param handlerType the handler type, possibly a sub-type of the method's_declaring class_@return the mapping, or {@code null} if the method is not mapped;protected abstract T getMappingForMethod(Method method, Class<?> handlerType)_;provide,the,mapping,for,a,handler,method,a,method,for,which,no,mapping,can,be,provided,is,not,a,handler,method,param,method,the,method,to,provide,a,mapping,for,param,handler,type,the,handler,type,possibly,a,sub,type,of,the,method,s,declaring,class,return,the,mapping,or,code,null,if,the,method,is,not,mapped;protected,abstract,t,get,mapping,for,method,method,method,class,handler,type
AbstractHandlerMethodMapping -> protected abstract T getMappingForMethod(Method method, Class<?> handlerType)_;1362408075;Provide the mapping for a handler method. A method for which no_mapping can be provided is not a handler method._@param method the method to provide a mapping for_@param handlerType the handler type, possibly a sub-type of the method's_declaring class_@return the mapping, or {@code null} if the method is not mapped;protected abstract T getMappingForMethod(Method method, Class<?> handlerType)_;provide,the,mapping,for,a,handler,method,a,method,for,which,no,mapping,can,be,provided,is,not,a,handler,method,param,method,the,method,to,provide,a,mapping,for,param,handler,type,the,handler,type,possibly,a,sub,type,of,the,method,s,declaring,class,return,the,mapping,or,code,null,if,the,method,is,not,mapped;protected,abstract,t,get,mapping,for,method,method,method,class,handler,type
AbstractHandlerMethodMapping -> protected abstract T getMappingForMethod(Method method, Class<?> handlerType)_;1368482696;Provide the mapping for a handler method. A method for which no_mapping can be provided is not a handler method._@param method the method to provide a mapping for_@param handlerType the handler type, possibly a sub-type of the method's_declaring class_@return the mapping, or {@code null} if the method is not mapped;protected abstract T getMappingForMethod(Method method, Class<?> handlerType)_;provide,the,mapping,for,a,handler,method,a,method,for,which,no,mapping,can,be,provided,is,not,a,handler,method,param,method,the,method,to,provide,a,mapping,for,param,handler,type,the,handler,type,possibly,a,sub,type,of,the,method,s,declaring,class,return,the,mapping,or,code,null,if,the,method,is,not,mapped;protected,abstract,t,get,mapping,for,method,method,method,class,handler,type
AbstractHandlerMethodMapping -> protected abstract T getMappingForMethod(Method method, Class<?> handlerType)_;1368581529;Provide the mapping for a handler method. A method for which no_mapping can be provided is not a handler method._@param method the method to provide a mapping for_@param handlerType the handler type, possibly a sub-type of the method's_declaring class_@return the mapping, or {@code null} if the method is not mapped;protected abstract T getMappingForMethod(Method method, Class<?> handlerType)_;provide,the,mapping,for,a,handler,method,a,method,for,which,no,mapping,can,be,provided,is,not,a,handler,method,param,method,the,method,to,provide,a,mapping,for,param,handler,type,the,handler,type,possibly,a,sub,type,of,the,method,s,declaring,class,return,the,mapping,or,code,null,if,the,method,is,not,mapped;protected,abstract,t,get,mapping,for,method,method,method,class,handler,type
AbstractHandlerMethodMapping -> protected abstract T getMappingForMethod(Method method, Class<?> handlerType)_;1382665849;Provide the mapping for a handler method. A method for which no_mapping can be provided is not a handler method._@param method the method to provide a mapping for_@param handlerType the handler type, possibly a sub-type of the method's_declaring class_@return the mapping, or {@code null} if the method is not mapped;protected abstract T getMappingForMethod(Method method, Class<?> handlerType)_;provide,the,mapping,for,a,handler,method,a,method,for,which,no,mapping,can,be,provided,is,not,a,handler,method,param,method,the,method,to,provide,a,mapping,for,param,handler,type,the,handler,type,possibly,a,sub,type,of,the,method,s,declaring,class,return,the,mapping,or,code,null,if,the,method,is,not,mapped;protected,abstract,t,get,mapping,for,method,method,method,class,handler,type
AbstractHandlerMethodMapping -> protected abstract T getMappingForMethod(Method method, Class<?> handlerType)_;1392160296;Provide the mapping for a handler method. A method for which no_mapping can be provided is not a handler method._@param method the method to provide a mapping for_@param handlerType the handler type, possibly a sub-type of the method's_declaring class_@return the mapping, or {@code null} if the method is not mapped;protected abstract T getMappingForMethod(Method method, Class<?> handlerType)_;provide,the,mapping,for,a,handler,method,a,method,for,which,no,mapping,can,be,provided,is,not,a,handler,method,param,method,the,method,to,provide,a,mapping,for,param,handler,type,the,handler,type,possibly,a,sub,type,of,the,method,s,declaring,class,return,the,mapping,or,code,null,if,the,method,is,not,mapped;protected,abstract,t,get,mapping,for,method,method,method,class,handler,type
AbstractHandlerMethodMapping -> protected abstract T getMappingForMethod(Method method, Class<?> handlerType)_;1392337816;Provide the mapping for a handler method. A method for which no_mapping can be provided is not a handler method._@param method the method to provide a mapping for_@param handlerType the handler type, possibly a sub-type of the method's_declaring class_@return the mapping, or {@code null} if the method is not mapped;protected abstract T getMappingForMethod(Method method, Class<?> handlerType)_;provide,the,mapping,for,a,handler,method,a,method,for,which,no,mapping,can,be,provided,is,not,a,handler,method,param,method,the,method,to,provide,a,mapping,for,param,handler,type,the,handler,type,possibly,a,sub,type,of,the,method,s,declaring,class,return,the,mapping,or,code,null,if,the,method,is,not,mapped;protected,abstract,t,get,mapping,for,method,method,method,class,handler,type
AbstractHandlerMethodMapping -> protected abstract T getMappingForMethod(Method method, Class<?> handlerType)_;1392407320;Provide the mapping for a handler method. A method for which no_mapping can be provided is not a handler method._@param method the method to provide a mapping for_@param handlerType the handler type, possibly a sub-type of the method's_declaring class_@return the mapping, or {@code null} if the method is not mapped;protected abstract T getMappingForMethod(Method method, Class<?> handlerType)_;provide,the,mapping,for,a,handler,method,a,method,for,which,no,mapping,can,be,provided,is,not,a,handler,method,param,method,the,method,to,provide,a,mapping,for,param,handler,type,the,handler,type,possibly,a,sub,type,of,the,method,s,declaring,class,return,the,mapping,or,code,null,if,the,method,is,not,mapped;protected,abstract,t,get,mapping,for,method,method,method,class,handler,type
AbstractHandlerMethodMapping -> protected abstract T getMappingForMethod(Method method, Class<?> handlerType)_;1395655323;Provide the mapping for a handler method. A method for which no_mapping can be provided is not a handler method._@param method the method to provide a mapping for_@param handlerType the handler type, possibly a sub-type of the method's_declaring class_@return the mapping, or {@code null} if the method is not mapped;protected abstract T getMappingForMethod(Method method, Class<?> handlerType)_;provide,the,mapping,for,a,handler,method,a,method,for,which,no,mapping,can,be,provided,is,not,a,handler,method,param,method,the,method,to,provide,a,mapping,for,param,handler,type,the,handler,type,possibly,a,sub,type,of,the,method,s,declaring,class,return,the,mapping,or,code,null,if,the,method,is,not,mapped;protected,abstract,t,get,mapping,for,method,method,method,class,handler,type
AbstractHandlerMethodMapping -> protected abstract T getMappingForMethod(Method method, Class<?> handlerType)_;1399404473;Provide the mapping for a handler method. A method for which no_mapping can be provided is not a handler method._@param method the method to provide a mapping for_@param handlerType the handler type, possibly a sub-type of the method's_declaring class_@return the mapping, or {@code null} if the method is not mapped;protected abstract T getMappingForMethod(Method method, Class<?> handlerType)_;provide,the,mapping,for,a,handler,method,a,method,for,which,no,mapping,can,be,provided,is,not,a,handler,method,param,method,the,method,to,provide,a,mapping,for,param,handler,type,the,handler,type,possibly,a,sub,type,of,the,method,s,declaring,class,return,the,mapping,or,code,null,if,the,method,is,not,mapped;protected,abstract,t,get,mapping,for,method,method,method,class,handler,type
AbstractHandlerMethodMapping -> protected abstract T getMappingForMethod(Method method, Class<?> handlerType)_;1426869344;Provide the mapping for a handler method. A method for which no_mapping can be provided is not a handler method._@param method the method to provide a mapping for_@param handlerType the handler type, possibly a sub-type of the method's_declaring class_@return the mapping, or {@code null} if the method is not mapped;protected abstract T getMappingForMethod(Method method, Class<?> handlerType)_;provide,the,mapping,for,a,handler,method,a,method,for,which,no,mapping,can,be,provided,is,not,a,handler,method,param,method,the,method,to,provide,a,mapping,for,param,handler,type,the,handler,type,possibly,a,sub,type,of,the,method,s,declaring,class,return,the,mapping,or,code,null,if,the,method,is,not,mapped;protected,abstract,t,get,mapping,for,method,method,method,class,handler,type
AbstractHandlerMethodMapping -> protected abstract T getMappingForMethod(Method method, Class<?> handlerType)_;1427240641;Provide the mapping for a handler method. A method for which no_mapping can be provided is not a handler method._@param method the method to provide a mapping for_@param handlerType the handler type, possibly a sub-type of the method's_declaring class_@return the mapping, or {@code null} if the method is not mapped;protected abstract T getMappingForMethod(Method method, Class<?> handlerType)_;provide,the,mapping,for,a,handler,method,a,method,for,which,no,mapping,can,be,provided,is,not,a,handler,method,param,method,the,method,to,provide,a,mapping,for,param,handler,type,the,handler,type,possibly,a,sub,type,of,the,method,s,declaring,class,return,the,mapping,or,code,null,if,the,method,is,not,mapped;protected,abstract,t,get,mapping,for,method,method,method,class,handler,type
AbstractHandlerMethodMapping -> protected abstract T getMappingForMethod(Method method, Class<?> handlerType)_;1427983931;Provide the mapping for a handler method. A method for which no_mapping can be provided is not a handler method._@param method the method to provide a mapping for_@param handlerType the handler type, possibly a sub-type of the method's_declaring class_@return the mapping, or {@code null} if the method is not mapped;protected abstract T getMappingForMethod(Method method, Class<?> handlerType)_;provide,the,mapping,for,a,handler,method,a,method,for,which,no,mapping,can,be,provided,is,not,a,handler,method,param,method,the,method,to,provide,a,mapping,for,param,handler,type,the,handler,type,possibly,a,sub,type,of,the,method,s,declaring,class,return,the,mapping,or,code,null,if,the,method,is,not,mapped;protected,abstract,t,get,mapping,for,method,method,method,class,handler,type
AbstractHandlerMethodMapping -> protected abstract T getMappingForMethod(Method method, Class<?> handlerType)_;1430734105;Provide the mapping for a handler method. A method for which no_mapping can be provided is not a handler method._@param method the method to provide a mapping for_@param handlerType the handler type, possibly a sub-type of the method's_declaring class_@return the mapping, or {@code null} if the method is not mapped;protected abstract T getMappingForMethod(Method method, Class<?> handlerType)_;provide,the,mapping,for,a,handler,method,a,method,for,which,no,mapping,can,be,provided,is,not,a,handler,method,param,method,the,method,to,provide,a,mapping,for,param,handler,type,the,handler,type,possibly,a,sub,type,of,the,method,s,declaring,class,return,the,mapping,or,code,null,if,the,method,is,not,mapped;protected,abstract,t,get,mapping,for,method,method,method,class,handler,type
AbstractHandlerMethodMapping -> protected abstract T getMappingForMethod(Method method, Class<?> handlerType)_;1430734105;Provide the mapping for a handler method. A method for which no_mapping can be provided is not a handler method._@param method the method to provide a mapping for_@param handlerType the handler type, possibly a sub-type of the method's_declaring class_@return the mapping, or {@code null} if the method is not mapped;protected abstract T getMappingForMethod(Method method, Class<?> handlerType)_;provide,the,mapping,for,a,handler,method,a,method,for,which,no,mapping,can,be,provided,is,not,a,handler,method,param,method,the,method,to,provide,a,mapping,for,param,handler,type,the,handler,type,possibly,a,sub,type,of,the,method,s,declaring,class,return,the,mapping,or,code,null,if,the,method,is,not,mapped;protected,abstract,t,get,mapping,for,method,method,method,class,handler,type
AbstractHandlerMethodMapping -> protected abstract T getMappingForMethod(Method method, Class<?> handlerType)_;1430734106;Provide the mapping for a handler method. A method for which no_mapping can be provided is not a handler method._@param method the method to provide a mapping for_@param handlerType the handler type, possibly a sub-type of the method's_declaring class_@return the mapping, or {@code null} if the method is not mapped;protected abstract T getMappingForMethod(Method method, Class<?> handlerType)_;provide,the,mapping,for,a,handler,method,a,method,for,which,no,mapping,can,be,provided,is,not,a,handler,method,param,method,the,method,to,provide,a,mapping,for,param,handler,type,the,handler,type,possibly,a,sub,type,of,the,method,s,declaring,class,return,the,mapping,or,code,null,if,the,method,is,not,mapped;protected,abstract,t,get,mapping,for,method,method,method,class,handler,type
AbstractHandlerMethodMapping -> protected abstract T getMappingForMethod(Method method, Class<?> handlerType)_;1430774689;Provide the mapping for a handler method. A method for which no_mapping can be provided is not a handler method._@param method the method to provide a mapping for_@param handlerType the handler type, possibly a sub-type of the method's_declaring class_@return the mapping, or {@code null} if the method is not mapped;protected abstract T getMappingForMethod(Method method, Class<?> handlerType)_;provide,the,mapping,for,a,handler,method,a,method,for,which,no,mapping,can,be,provided,is,not,a,handler,method,param,method,the,method,to,provide,a,mapping,for,param,handler,type,the,handler,type,possibly,a,sub,type,of,the,method,s,declaring,class,return,the,mapping,or,code,null,if,the,method,is,not,mapped;protected,abstract,t,get,mapping,for,method,method,method,class,handler,type
AbstractHandlerMethodMapping -> protected abstract T getMappingForMethod(Method method, Class<?> handlerType)_;1430844966;Provide the mapping for a handler method. A method for which no_mapping can be provided is not a handler method._@param method the method to provide a mapping for_@param handlerType the handler type, possibly a sub-type of the method's_declaring class_@return the mapping, or {@code null} if the method is not mapped;protected abstract T getMappingForMethod(Method method, Class<?> handlerType)_;provide,the,mapping,for,a,handler,method,a,method,for,which,no,mapping,can,be,provided,is,not,a,handler,method,param,method,the,method,to,provide,a,mapping,for,param,handler,type,the,handler,type,possibly,a,sub,type,of,the,method,s,declaring,class,return,the,mapping,or,code,null,if,the,method,is,not,mapped;protected,abstract,t,get,mapping,for,method,method,method,class,handler,type
AbstractHandlerMethodMapping -> protected abstract T getMappingForMethod(Method method, Class<?> handlerType)_;1430844967;Provide the mapping for a handler method. A method for which no_mapping can be provided is not a handler method._@param method the method to provide a mapping for_@param handlerType the handler type, possibly a sub-type of the method's_declaring class_@return the mapping, or {@code null} if the method is not mapped;protected abstract T getMappingForMethod(Method method, Class<?> handlerType)_;provide,the,mapping,for,a,handler,method,a,method,for,which,no,mapping,can,be,provided,is,not,a,handler,method,param,method,the,method,to,provide,a,mapping,for,param,handler,type,the,handler,type,possibly,a,sub,type,of,the,method,s,declaring,class,return,the,mapping,or,code,null,if,the,method,is,not,mapped;protected,abstract,t,get,mapping,for,method,method,method,class,handler,type
AbstractHandlerMethodMapping -> protected abstract T getMappingForMethod(Method method, Class<?> handlerType)_;1431730371;Provide the mapping for a handler method. A method for which no_mapping can be provided is not a handler method._@param method the method to provide a mapping for_@param handlerType the handler type, possibly a sub-type of the method's_declaring class_@return the mapping, or {@code null} if the method is not mapped;protected abstract T getMappingForMethod(Method method, Class<?> handlerType)_;provide,the,mapping,for,a,handler,method,a,method,for,which,no,mapping,can,be,provided,is,not,a,handler,method,param,method,the,method,to,provide,a,mapping,for,param,handler,type,the,handler,type,possibly,a,sub,type,of,the,method,s,declaring,class,return,the,mapping,or,code,null,if,the,method,is,not,mapped;protected,abstract,t,get,mapping,for,method,method,method,class,handler,type
AbstractHandlerMethodMapping -> protected abstract T getMappingForMethod(Method method, Class<?> handlerType)_;1439294371;Provide the mapping for a handler method. A method for which no_mapping can be provided is not a handler method._@param method the method to provide a mapping for_@param handlerType the handler type, possibly a sub-type of the method's_declaring class_@return the mapping, or {@code null} if the method is not mapped;protected abstract T getMappingForMethod(Method method, Class<?> handlerType)_;provide,the,mapping,for,a,handler,method,a,method,for,which,no,mapping,can,be,provided,is,not,a,handler,method,param,method,the,method,to,provide,a,mapping,for,param,handler,type,the,handler,type,possibly,a,sub,type,of,the,method,s,declaring,class,return,the,mapping,or,code,null,if,the,method,is,not,mapped;protected,abstract,t,get,mapping,for,method,method,method,class,handler,type
AbstractHandlerMethodMapping -> protected abstract T getMappingForMethod(Method method, Class<?> handlerType)_;1447077465;Provide the mapping for a handler method. A method for which no_mapping can be provided is not a handler method._@param method the method to provide a mapping for_@param handlerType the handler type, possibly a sub-type of the method's_declaring class_@return the mapping, or {@code null} if the method is not mapped;protected abstract T getMappingForMethod(Method method, Class<?> handlerType)_;provide,the,mapping,for,a,handler,method,a,method,for,which,no,mapping,can,be,provided,is,not,a,handler,method,param,method,the,method,to,provide,a,mapping,for,param,handler,type,the,handler,type,possibly,a,sub,type,of,the,method,s,declaring,class,return,the,mapping,or,code,null,if,the,method,is,not,mapped;protected,abstract,t,get,mapping,for,method,method,method,class,handler,type
AbstractHandlerMethodMapping -> protected abstract T getMappingForMethod(Method method, Class<?> handlerType)_;1448483163;Provide the mapping for a handler method. A method for which no_mapping can be provided is not a handler method._@param method the method to provide a mapping for_@param handlerType the handler type, possibly a sub-type of the method's_declaring class_@return the mapping, or {@code null} if the method is not mapped;protected abstract T getMappingForMethod(Method method, Class<?> handlerType)_;provide,the,mapping,for,a,handler,method,a,method,for,which,no,mapping,can,be,provided,is,not,a,handler,method,param,method,the,method,to,provide,a,mapping,for,param,handler,type,the,handler,type,possibly,a,sub,type,of,the,method,s,declaring,class,return,the,mapping,or,code,null,if,the,method,is,not,mapped;protected,abstract,t,get,mapping,for,method,method,method,class,handler,type
AbstractHandlerMethodMapping -> protected abstract T getMappingForMethod(Method method, Class<?> handlerType)_;1452685925;Provide the mapping for a handler method. A method for which no_mapping can be provided is not a handler method._@param method the method to provide a mapping for_@param handlerType the handler type, possibly a sub-type of the method's_declaring class_@return the mapping, or {@code null} if the method is not mapped;protected abstract T getMappingForMethod(Method method, Class<?> handlerType)_;provide,the,mapping,for,a,handler,method,a,method,for,which,no,mapping,can,be,provided,is,not,a,handler,method,param,method,the,method,to,provide,a,mapping,for,param,handler,type,the,handler,type,possibly,a,sub,type,of,the,method,s,declaring,class,return,the,mapping,or,code,null,if,the,method,is,not,mapped;protected,abstract,t,get,mapping,for,method,method,method,class,handler,type
AbstractHandlerMethodMapping -> protected abstract T getMappingForMethod(Method method, Class<?> handlerType)_;1452873718;Provide the mapping for a handler method. A method for which no_mapping can be provided is not a handler method._@param method the method to provide a mapping for_@param handlerType the handler type, possibly a sub-type of the method's_declaring class_@return the mapping, or {@code null} if the method is not mapped;protected abstract T getMappingForMethod(Method method, Class<?> handlerType)_;provide,the,mapping,for,a,handler,method,a,method,for,which,no,mapping,can,be,provided,is,not,a,handler,method,param,method,the,method,to,provide,a,mapping,for,param,handler,type,the,handler,type,possibly,a,sub,type,of,the,method,s,declaring,class,return,the,mapping,or,code,null,if,the,method,is,not,mapped;protected,abstract,t,get,mapping,for,method,method,method,class,handler,type
AbstractHandlerMethodMapping -> protected abstract T getMappingForMethod(Method method, Class<?> handlerType)_;1453843788;Provide the mapping for a handler method. A method for which no_mapping can be provided is not a handler method._@param method the method to provide a mapping for_@param handlerType the handler type, possibly a sub-type of the method's_declaring class_@return the mapping, or {@code null} if the method is not mapped;protected abstract T getMappingForMethod(Method method, Class<?> handlerType)_;provide,the,mapping,for,a,handler,method,a,method,for,which,no,mapping,can,be,provided,is,not,a,handler,method,param,method,the,method,to,provide,a,mapping,for,param,handler,type,the,handler,type,possibly,a,sub,type,of,the,method,s,declaring,class,return,the,mapping,or,code,null,if,the,method,is,not,mapped;protected,abstract,t,get,mapping,for,method,method,method,class,handler,type
AbstractHandlerMethodMapping -> protected abstract T getMappingForMethod(Method method, Class<?> handlerType)_;1467730834;Provide the mapping for a handler method. A method for which no_mapping can be provided is not a handler method._@param method the method to provide a mapping for_@param handlerType the handler type, possibly a sub-type of the method's_declaring class_@return the mapping, or {@code null} if the method is not mapped;protected abstract T getMappingForMethod(Method method, Class<?> handlerType)_;provide,the,mapping,for,a,handler,method,a,method,for,which,no,mapping,can,be,provided,is,not,a,handler,method,param,method,the,method,to,provide,a,mapping,for,param,handler,type,the,handler,type,possibly,a,sub,type,of,the,method,s,declaring,class,return,the,mapping,or,code,null,if,the,method,is,not,mapped;protected,abstract,t,get,mapping,for,method,method,method,class,handler,type
AbstractHandlerMethodMapping -> protected abstract T getMappingForMethod(Method method, Class<?> handlerType)_;1468417354;Provide the mapping for a handler method. A method for which no_mapping can be provided is not a handler method._@param method the method to provide a mapping for_@param handlerType the handler type, possibly a sub-type of the method's_declaring class_@return the mapping, or {@code null} if the method is not mapped;protected abstract T getMappingForMethod(Method method, Class<?> handlerType)_;provide,the,mapping,for,a,handler,method,a,method,for,which,no,mapping,can,be,provided,is,not,a,handler,method,param,method,the,method,to,provide,a,mapping,for,param,handler,type,the,handler,type,possibly,a,sub,type,of,the,method,s,declaring,class,return,the,mapping,or,code,null,if,the,method,is,not,mapped;protected,abstract,t,get,mapping,for,method,method,method,class,handler,type
AbstractHandlerMethodMapping -> protected abstract T getMappingForMethod(Method method, Class<?> handlerType)_;1468596479;Provide the mapping for a handler method. A method for which no_mapping can be provided is not a handler method._@param method the method to provide a mapping for_@param handlerType the handler type, possibly a sub-type of the method's_declaring class_@return the mapping, or {@code null} if the method is not mapped;protected abstract T getMappingForMethod(Method method, Class<?> handlerType)_;provide,the,mapping,for,a,handler,method,a,method,for,which,no,mapping,can,be,provided,is,not,a,handler,method,param,method,the,method,to,provide,a,mapping,for,param,handler,type,the,handler,type,possibly,a,sub,type,of,the,method,s,declaring,class,return,the,mapping,or,code,null,if,the,method,is,not,mapped;protected,abstract,t,get,mapping,for,method,method,method,class,handler,type
AbstractHandlerMethodMapping -> protected abstract T getMappingForMethod(Method method, Class<?> handlerType)_;1474905889;Provide the mapping for a handler method. A method for which no_mapping can be provided is not a handler method._@param method the method to provide a mapping for_@param handlerType the handler type, possibly a sub-type of the method's_declaring class_@return the mapping, or {@code null} if the method is not mapped;protected abstract T getMappingForMethod(Method method, Class<?> handlerType)_;provide,the,mapping,for,a,handler,method,a,method,for,which,no,mapping,can,be,provided,is,not,a,handler,method,param,method,the,method,to,provide,a,mapping,for,param,handler,type,the,handler,type,possibly,a,sub,type,of,the,method,s,declaring,class,return,the,mapping,or,code,null,if,the,method,is,not,mapped;protected,abstract,t,get,mapping,for,method,method,method,class,handler,type
AbstractHandlerMethodMapping -> protected abstract T getMappingForMethod(Method method, Class<?> handlerType)_;1481813056;Provide the mapping for a handler method. A method for which no_mapping can be provided is not a handler method._@param method the method to provide a mapping for_@param handlerType the handler type, possibly a sub-type of the method's_declaring class_@return the mapping, or {@code null} if the method is not mapped;protected abstract T getMappingForMethod(Method method, Class<?> handlerType)_;provide,the,mapping,for,a,handler,method,a,method,for,which,no,mapping,can,be,provided,is,not,a,handler,method,param,method,the,method,to,provide,a,mapping,for,param,handler,type,the,handler,type,possibly,a,sub,type,of,the,method,s,declaring,class,return,the,mapping,or,code,null,if,the,method,is,not,mapped;protected,abstract,t,get,mapping,for,method,method,method,class,handler,type
AbstractHandlerMethodMapping -> protected abstract T getMappingForMethod(Method method, Class<?> handlerType)_;1485810955;Provide the mapping for a handler method. A method for which no_mapping can be provided is not a handler method._@param method the method to provide a mapping for_@param handlerType the handler type, possibly a sub-type of the method's_declaring class_@return the mapping, or {@code null} if the method is not mapped;protected abstract T getMappingForMethod(Method method, Class<?> handlerType)_;provide,the,mapping,for,a,handler,method,a,method,for,which,no,mapping,can,be,provided,is,not,a,handler,method,param,method,the,method,to,provide,a,mapping,for,param,handler,type,the,handler,type,possibly,a,sub,type,of,the,method,s,declaring,class,return,the,mapping,or,code,null,if,the,method,is,not,mapped;protected,abstract,t,get,mapping,for,method,method,method,class,handler,type
AbstractHandlerMethodMapping -> MappingRegistry -> public Map<T, HandlerMethod> getMappings();1430734106;Return all mappings and handler methods. Not thread-safe._@see #acquireReadLock();public Map<T, HandlerMethod> getMappings() {_			return this.mappingLookup__		};return,all,mappings,and,handler,methods,not,thread,safe,see,acquire,read,lock;public,map,t,handler,method,get,mappings,return,this,mapping,lookup
AbstractHandlerMethodMapping -> MappingRegistry -> public Map<T, HandlerMethod> getMappings();1430774689;Return all mappings and handler methods. Not thread-safe._@see #acquireReadLock();public Map<T, HandlerMethod> getMappings() {_			return this.mappingLookup__		};return,all,mappings,and,handler,methods,not,thread,safe,see,acquire,read,lock;public,map,t,handler,method,get,mappings,return,this,mapping,lookup
AbstractHandlerMethodMapping -> MappingRegistry -> public Map<T, HandlerMethod> getMappings();1430844966;Return all mappings and handler methods. Not thread-safe._@see #acquireReadLock();public Map<T, HandlerMethod> getMappings() {_			return this.mappingLookup__		};return,all,mappings,and,handler,methods,not,thread,safe,see,acquire,read,lock;public,map,t,handler,method,get,mappings,return,this,mapping,lookup
AbstractHandlerMethodMapping -> MappingRegistry -> public Map<T, HandlerMethod> getMappings();1430844967;Return all mappings and handler methods. Not thread-safe._@see #acquireReadLock();public Map<T, HandlerMethod> getMappings() {_			return this.mappingLookup__		};return,all,mappings,and,handler,methods,not,thread,safe,see,acquire,read,lock;public,map,t,handler,method,get,mappings,return,this,mapping,lookup
AbstractHandlerMethodMapping -> MappingRegistry -> public Map<T, HandlerMethod> getMappings();1431730371;Return all mappings and handler methods. Not thread-safe._@see #acquireReadLock();public Map<T, HandlerMethod> getMappings() {_			return this.mappingLookup__		};return,all,mappings,and,handler,methods,not,thread,safe,see,acquire,read,lock;public,map,t,handler,method,get,mappings,return,this,mapping,lookup
AbstractHandlerMethodMapping -> MappingRegistry -> public Map<T, HandlerMethod> getMappings();1439294371;Return all mappings and handler methods. Not thread-safe._@see #acquireReadLock();public Map<T, HandlerMethod> getMappings() {_			return this.mappingLookup__		};return,all,mappings,and,handler,methods,not,thread,safe,see,acquire,read,lock;public,map,t,handler,method,get,mappings,return,this,mapping,lookup
AbstractHandlerMethodMapping -> MappingRegistry -> public Map<T, HandlerMethod> getMappings();1447077465;Return all mappings and handler methods. Not thread-safe._@see #acquireReadLock();public Map<T, HandlerMethod> getMappings() {_			return this.mappingLookup__		};return,all,mappings,and,handler,methods,not,thread,safe,see,acquire,read,lock;public,map,t,handler,method,get,mappings,return,this,mapping,lookup
AbstractHandlerMethodMapping -> MappingRegistry -> public Map<T, HandlerMethod> getMappings();1448483163;Return all mappings and handler methods. Not thread-safe._@see #acquireReadLock();public Map<T, HandlerMethod> getMappings() {_			return this.mappingLookup__		};return,all,mappings,and,handler,methods,not,thread,safe,see,acquire,read,lock;public,map,t,handler,method,get,mappings,return,this,mapping,lookup
AbstractHandlerMethodMapping -> MappingRegistry -> public Map<T, HandlerMethod> getMappings();1452685925;Return all mappings and handler methods. Not thread-safe._@see #acquireReadLock();public Map<T, HandlerMethod> getMappings() {_			return this.mappingLookup__		};return,all,mappings,and,handler,methods,not,thread,safe,see,acquire,read,lock;public,map,t,handler,method,get,mappings,return,this,mapping,lookup
AbstractHandlerMethodMapping -> MappingRegistry -> public Map<T, HandlerMethod> getMappings();1452873718;Return all mappings and handler methods. Not thread-safe._@see #acquireReadLock();public Map<T, HandlerMethod> getMappings() {_			return this.mappingLookup__		};return,all,mappings,and,handler,methods,not,thread,safe,see,acquire,read,lock;public,map,t,handler,method,get,mappings,return,this,mapping,lookup
AbstractHandlerMethodMapping -> MappingRegistry -> public Map<T, HandlerMethod> getMappings();1453843788;Return all mappings and handler methods. Not thread-safe._@see #acquireReadLock();public Map<T, HandlerMethod> getMappings() {_			return this.mappingLookup__		};return,all,mappings,and,handler,methods,not,thread,safe,see,acquire,read,lock;public,map,t,handler,method,get,mappings,return,this,mapping,lookup
AbstractHandlerMethodMapping -> MappingRegistry -> public Map<T, HandlerMethod> getMappings();1467730834;Return all mappings and handler methods. Not thread-safe._@see #acquireReadLock();public Map<T, HandlerMethod> getMappings() {_			return this.mappingLookup__		};return,all,mappings,and,handler,methods,not,thread,safe,see,acquire,read,lock;public,map,t,handler,method,get,mappings,return,this,mapping,lookup
AbstractHandlerMethodMapping -> MappingRegistry -> public Map<T, HandlerMethod> getMappings();1468417354;Return all mappings and handler methods. Not thread-safe._@see #acquireReadLock();public Map<T, HandlerMethod> getMappings() {_			return this.mappingLookup__		};return,all,mappings,and,handler,methods,not,thread,safe,see,acquire,read,lock;public,map,t,handler,method,get,mappings,return,this,mapping,lookup
AbstractHandlerMethodMapping -> MappingRegistry -> public Map<T, HandlerMethod> getMappings();1468596479;Return all mappings and handler methods. Not thread-safe._@see #acquireReadLock();public Map<T, HandlerMethod> getMappings() {_			return this.mappingLookup__		};return,all,mappings,and,handler,methods,not,thread,safe,see,acquire,read,lock;public,map,t,handler,method,get,mappings,return,this,mapping,lookup
AbstractHandlerMethodMapping -> MappingRegistry -> public Map<T, HandlerMethod> getMappings();1474905889;Return all mappings and handler methods. Not thread-safe._@see #acquireReadLock();public Map<T, HandlerMethod> getMappings() {_			return this.mappingLookup__		};return,all,mappings,and,handler,methods,not,thread,safe,see,acquire,read,lock;public,map,t,handler,method,get,mappings,return,this,mapping,lookup
AbstractHandlerMethodMapping -> MappingRegistry -> public Map<T, HandlerMethod> getMappings();1481813056;Return all mappings and handler methods. Not thread-safe._@see #acquireReadLock();public Map<T, HandlerMethod> getMappings() {_			return this.mappingLookup__		};return,all,mappings,and,handler,methods,not,thread,safe,see,acquire,read,lock;public,map,t,handler,method,get,mappings,return,this,mapping,lookup
AbstractHandlerMethodMapping -> MappingRegistry -> public Map<T, HandlerMethod> getMappings();1485810955;Return all mappings and handler methods. Not thread-safe._@see #acquireReadLock();public Map<T, HandlerMethod> getMappings() {_			return this.mappingLookup__		};return,all,mappings,and,handler,methods,not,thread,safe,see,acquire,read,lock;public,map,t,handler,method,get,mappings,return,this,mapping,lookup
AbstractHandlerMethodMapping -> MappingRegistry -> public Map<T, HandlerMethod> getMappings();1495868221;Return all mappings and handler methods. Not thread-safe._@see #acquireReadLock();public Map<T, HandlerMethod> getMappings() {_			return this.mappingLookup__		};return,all,mappings,and,handler,methods,not,thread,safe,see,acquire,read,lock;public,map,t,handler,method,get,mappings,return,this,mapping,lookup
AbstractHandlerMethodMapping -> MappingRegistry -> public Map<T, HandlerMethod> getMappings();1496837955;Return all mappings and handler methods. Not thread-safe._@see #acquireReadLock();public Map<T, HandlerMethod> getMappings() {_			return this.mappingLookup__		};return,all,mappings,and,handler,methods,not,thread,safe,see,acquire,read,lock;public,map,t,handler,method,get,mappings,return,this,mapping,lookup
AbstractHandlerMethodMapping -> MappingRegistry -> public Map<T, HandlerMethod> getMappings();1497251962;Return all mappings and handler methods. Not thread-safe._@see #acquireReadLock();public Map<T, HandlerMethod> getMappings() {_			return this.mappingLookup__		};return,all,mappings,and,handler,methods,not,thread,safe,see,acquire,read,lock;public,map,t,handler,method,get,mappings,return,this,mapping,lookup
AbstractHandlerMethodMapping -> MappingRegistry -> public Map<T, HandlerMethod> getMappings();1498780456;Return all mappings and handler methods. Not thread-safe._@see #acquireReadLock();public Map<T, HandlerMethod> getMappings() {_			return this.mappingLookup__		};return,all,mappings,and,handler,methods,not,thread,safe,see,acquire,read,lock;public,map,t,handler,method,get,mappings,return,this,mapping,lookup
AbstractHandlerMethodMapping -> MappingRegistry -> public Map<T, HandlerMethod> getMappings();1518772998;Return all mappings and handler methods. Not thread-safe._@see #acquireReadLock();public Map<T, HandlerMethod> getMappings() {_			return this.mappingLookup__		};return,all,mappings,and,handler,methods,not,thread,safe,see,acquire,read,lock;public,map,t,handler,method,get,mappings,return,this,mapping,lookup
AbstractHandlerMethodMapping -> MappingRegistry -> public Map<T, HandlerMethod> getMappings();1522103912;Return all mappings and handler methods. Not thread-safe._@see #acquireReadLock();public Map<T, HandlerMethod> getMappings() {_			return this.mappingLookup__		};return,all,mappings,and,handler,methods,not,thread,safe,see,acquire,read,lock;public,map,t,handler,method,get,mappings,return,this,mapping,lookup
AbstractHandlerMethodMapping -> MappingRegistry -> public Map<T, HandlerMethod> getMappings();1522843494;Return all mappings and handler methods. Not thread-safe._@see #acquireReadLock();public Map<T, HandlerMethod> getMappings() {_			return this.mappingLookup__		};return,all,mappings,and,handler,methods,not,thread,safe,see,acquire,read,lock;public,map,t,handler,method,get,mappings,return,this,mapping,lookup
AbstractHandlerMethodMapping -> MappingRegistry -> public Map<T, HandlerMethod> getMappings();1529361191;Return all mappings and handler methods. Not thread-safe._@see #acquireReadLock();public Map<T, HandlerMethod> getMappings() {_			return this.mappingLookup__		};return,all,mappings,and,handler,methods,not,thread,safe,see,acquire,read,lock;public,map,t,handler,method,get,mappings,return,this,mapping,lookup
AbstractHandlerMethodMapping -> MappingRegistry -> public Map<T, HandlerMethod> getMappings();1529721864;Return all mappings and handler methods. Not thread-safe._@see #acquireReadLock();public Map<T, HandlerMethod> getMappings() {_			return this.mappingLookup__		};return,all,mappings,and,handler,methods,not,thread,safe,see,acquire,read,lock;public,map,t,handler,method,get,mappings,return,this,mapping,lookup
AbstractHandlerMethodMapping -> MappingRegistry -> public Map<T, HandlerMethod> getMappings();1530174524;Return all mappings and handler methods. Not thread-safe._@see #acquireReadLock();public Map<T, HandlerMethod> getMappings() {_			return this.mappingLookup__		};return,all,mappings,and,handler,methods,not,thread,safe,see,acquire,read,lock;public,map,t,handler,method,get,mappings,return,this,mapping,lookup
AbstractHandlerMethodMapping -> MappingRegistry -> public Map<T, HandlerMethod> getMappings();1530174524;Return all mappings and handler methods. Not thread-safe._@see #acquireReadLock();public Map<T, HandlerMethod> getMappings() {_			return this.mappingLookup__		};return,all,mappings,and,handler,methods,not,thread,safe,see,acquire,read,lock;public,map,t,handler,method,get,mappings,return,this,mapping,lookup
AbstractHandlerMethodMapping -> MappingRegistry -> public Map<T, HandlerMethod> getMappings();1533943217;Return all mappings and handler methods. Not thread-safe._@see #acquireReadLock();public Map<T, HandlerMethod> getMappings() {_			return this.mappingLookup__		};return,all,mappings,and,handler,methods,not,thread,safe,see,acquire,read,lock;public,map,t,handler,method,get,mappings,return,this,mapping,lookup
AbstractHandlerMethodMapping -> MappingRegistry -> public Map<T, HandlerMethod> getMappings();1542407418;Return all mappings and handler methods. Not thread-safe._@see #acquireReadLock();public Map<T, HandlerMethod> getMappings() {_			return this.mappingLookup__		};return,all,mappings,and,handler,methods,not,thread,safe,see,acquire,read,lock;public,map,t,handler,method,get,mappings,return,this,mapping,lookup
AbstractHandlerMethodMapping -> MappingRegistry -> public Map<T, HandlerMethod> getMappings();1542771062;Return all mappings and handler methods. Not thread-safe._@see #acquireReadLock();public Map<T, HandlerMethod> getMappings() {_			return this.mappingLookup__		};return,all,mappings,and,handler,methods,not,thread,safe,see,acquire,read,lock;public,map,t,handler,method,get,mappings,return,this,mapping,lookup
AbstractHandlerMethodMapping -> MappingRegistry -> public Map<T, HandlerMethod> getMappings();1548427561;Return all mappings and handler methods. Not thread-safe._@see #acquireReadLock();public Map<T, HandlerMethod> getMappings() {_			return this.mappingLookup__		};return,all,mappings,and,handler,methods,not,thread,safe,see,acquire,read,lock;public,map,t,handler,method,get,mappings,return,this,mapping,lookup
AbstractHandlerMethodMapping -> MappingRegistry -> public Map<T, HandlerMethod> getMappings();1551093473;Return all mappings and handler methods. Not thread-safe._@see #acquireReadLock();public Map<T, HandlerMethod> getMappings() {_			return this.mappingLookup__		};return,all,mappings,and,handler,methods,not,thread,safe,see,acquire,read,lock;public,map,t,handler,method,get,mappings,return,this,mapping,lookup
AbstractHandlerMethodMapping -> protected abstract Comparator<T> getMappingComparator(HttpServletRequest request)_;1328020251;Return a comparator for sorting matching mappings._The returned comparator should sort 'better' matches higher._@param request the current request_@return the comparator, never {@code null};protected abstract Comparator<T> getMappingComparator(HttpServletRequest request)_;return,a,comparator,for,sorting,matching,mappings,the,returned,comparator,should,sort,better,matches,higher,param,request,the,current,request,return,the,comparator,never,code,null;protected,abstract,comparator,t,get,mapping,comparator,http,servlet,request,request
AbstractHandlerMethodMapping -> protected abstract Comparator<T> getMappingComparator(HttpServletRequest request)_;1328022204;Return a comparator for sorting matching mappings._The returned comparator should sort 'better' matches higher._@param request the current request_@return the comparator, never {@code null};protected abstract Comparator<T> getMappingComparator(HttpServletRequest request)_;return,a,comparator,for,sorting,matching,mappings,the,returned,comparator,should,sort,better,matches,higher,param,request,the,current,request,return,the,comparator,never,code,null;protected,abstract,comparator,t,get,mapping,comparator,http,servlet,request,request
AbstractHandlerMethodMapping -> protected abstract Comparator<T> getMappingComparator(HttpServletRequest request)_;1336682556;Return a comparator for sorting matching mappings._The returned comparator should sort 'better' matches higher._@param request the current request_@return the comparator, never {@code null};protected abstract Comparator<T> getMappingComparator(HttpServletRequest request)_;return,a,comparator,for,sorting,matching,mappings,the,returned,comparator,should,sort,better,matches,higher,param,request,the,current,request,return,the,comparator,never,code,null;protected,abstract,comparator,t,get,mapping,comparator,http,servlet,request,request
AbstractHandlerMethodMapping -> protected abstract Comparator<T> getMappingComparator(HttpServletRequest request)_;1341441111;Return a comparator for sorting matching mappings._The returned comparator should sort 'better' matches higher._@param request the current request_@return the comparator, never {@code null};protected abstract Comparator<T> getMappingComparator(HttpServletRequest request)_;return,a,comparator,for,sorting,matching,mappings,the,returned,comparator,should,sort,better,matches,higher,param,request,the,current,request,return,the,comparator,never,code,null;protected,abstract,comparator,t,get,mapping,comparator,http,servlet,request,request
AbstractHandlerMethodMapping -> protected abstract Comparator<T> getMappingComparator(HttpServletRequest request)_;1356735495;Return a comparator for sorting matching mappings._The returned comparator should sort 'better' matches higher._@param request the current request_@return the comparator, never {@code null};protected abstract Comparator<T> getMappingComparator(HttpServletRequest request)_;return,a,comparator,for,sorting,matching,mappings,the,returned,comparator,should,sort,better,matches,higher,param,request,the,current,request,return,the,comparator,never,code,null;protected,abstract,comparator,t,get,mapping,comparator,http,servlet,request,request
AbstractHandlerMethodMapping -> protected abstract Comparator<T> getMappingComparator(HttpServletRequest request)_;1357119239;Return a comparator for sorting matching mappings._The returned comparator should sort 'better' matches higher._@param request the current request_@return the comparator, never {@code null};protected abstract Comparator<T> getMappingComparator(HttpServletRequest request)_;return,a,comparator,for,sorting,matching,mappings,the,returned,comparator,should,sort,better,matches,higher,param,request,the,current,request,return,the,comparator,never,code,null;protected,abstract,comparator,t,get,mapping,comparator,http,servlet,request,request
AbstractHandlerMethodMapping -> protected abstract Comparator<T> getMappingComparator(HttpServletRequest request)_;1362408075;Return a comparator for sorting matching mappings._The returned comparator should sort 'better' matches higher._@param request the current request_@return the comparator, never {@code null};protected abstract Comparator<T> getMappingComparator(HttpServletRequest request)_;return,a,comparator,for,sorting,matching,mappings,the,returned,comparator,should,sort,better,matches,higher,param,request,the,current,request,return,the,comparator,never,code,null;protected,abstract,comparator,t,get,mapping,comparator,http,servlet,request,request
AbstractHandlerMethodMapping -> protected abstract Comparator<T> getMappingComparator(HttpServletRequest request)_;1368482696;Return a comparator for sorting matching mappings._The returned comparator should sort 'better' matches higher._@param request the current request_@return the comparator, never {@code null};protected abstract Comparator<T> getMappingComparator(HttpServletRequest request)_;return,a,comparator,for,sorting,matching,mappings,the,returned,comparator,should,sort,better,matches,higher,param,request,the,current,request,return,the,comparator,never,code,null;protected,abstract,comparator,t,get,mapping,comparator,http,servlet,request,request
AbstractHandlerMethodMapping -> protected abstract Comparator<T> getMappingComparator(HttpServletRequest request)_;1368581529;Return a comparator for sorting matching mappings._The returned comparator should sort 'better' matches higher._@param request the current request_@return the comparator, never {@code null};protected abstract Comparator<T> getMappingComparator(HttpServletRequest request)_;return,a,comparator,for,sorting,matching,mappings,the,returned,comparator,should,sort,better,matches,higher,param,request,the,current,request,return,the,comparator,never,code,null;protected,abstract,comparator,t,get,mapping,comparator,http,servlet,request,request
AbstractHandlerMethodMapping -> protected abstract Comparator<T> getMappingComparator(HttpServletRequest request)_;1382665849;Return a comparator for sorting matching mappings._The returned comparator should sort 'better' matches higher._@param request the current request_@return the comparator, never {@code null};protected abstract Comparator<T> getMappingComparator(HttpServletRequest request)_;return,a,comparator,for,sorting,matching,mappings,the,returned,comparator,should,sort,better,matches,higher,param,request,the,current,request,return,the,comparator,never,code,null;protected,abstract,comparator,t,get,mapping,comparator,http,servlet,request,request
AbstractHandlerMethodMapping -> protected abstract Comparator<T> getMappingComparator(HttpServletRequest request)_;1392160296;Return a comparator for sorting matching mappings._The returned comparator should sort 'better' matches higher._@param request the current request_@return the comparator, never {@code null};protected abstract Comparator<T> getMappingComparator(HttpServletRequest request)_;return,a,comparator,for,sorting,matching,mappings,the,returned,comparator,should,sort,better,matches,higher,param,request,the,current,request,return,the,comparator,never,code,null;protected,abstract,comparator,t,get,mapping,comparator,http,servlet,request,request
AbstractHandlerMethodMapping -> protected abstract Comparator<T> getMappingComparator(HttpServletRequest request)_;1392337816;Return a comparator for sorting matching mappings._The returned comparator should sort 'better' matches higher._@param request the current request_@return the comparator, never {@code null};protected abstract Comparator<T> getMappingComparator(HttpServletRequest request)_;return,a,comparator,for,sorting,matching,mappings,the,returned,comparator,should,sort,better,matches,higher,param,request,the,current,request,return,the,comparator,never,code,null;protected,abstract,comparator,t,get,mapping,comparator,http,servlet,request,request
AbstractHandlerMethodMapping -> protected abstract Comparator<T> getMappingComparator(HttpServletRequest request)_;1392407320;Return a comparator for sorting matching mappings._The returned comparator should sort 'better' matches higher._@param request the current request_@return the comparator, never {@code null};protected abstract Comparator<T> getMappingComparator(HttpServletRequest request)_;return,a,comparator,for,sorting,matching,mappings,the,returned,comparator,should,sort,better,matches,higher,param,request,the,current,request,return,the,comparator,never,code,null;protected,abstract,comparator,t,get,mapping,comparator,http,servlet,request,request
AbstractHandlerMethodMapping -> protected abstract Comparator<T> getMappingComparator(HttpServletRequest request)_;1395655323;Return a comparator for sorting matching mappings._The returned comparator should sort 'better' matches higher._@param request the current request_@return the comparator, never {@code null};protected abstract Comparator<T> getMappingComparator(HttpServletRequest request)_;return,a,comparator,for,sorting,matching,mappings,the,returned,comparator,should,sort,better,matches,higher,param,request,the,current,request,return,the,comparator,never,code,null;protected,abstract,comparator,t,get,mapping,comparator,http,servlet,request,request
AbstractHandlerMethodMapping -> protected abstract Comparator<T> getMappingComparator(HttpServletRequest request)_;1399404473;Return a comparator for sorting matching mappings._The returned comparator should sort 'better' matches higher._@param request the current request_@return the comparator, never {@code null};protected abstract Comparator<T> getMappingComparator(HttpServletRequest request)_;return,a,comparator,for,sorting,matching,mappings,the,returned,comparator,should,sort,better,matches,higher,param,request,the,current,request,return,the,comparator,never,code,null;protected,abstract,comparator,t,get,mapping,comparator,http,servlet,request,request
AbstractHandlerMethodMapping -> protected abstract Comparator<T> getMappingComparator(HttpServletRequest request)_;1426869344;Return a comparator for sorting matching mappings._The returned comparator should sort 'better' matches higher._@param request the current request_@return the comparator (never {@code null});protected abstract Comparator<T> getMappingComparator(HttpServletRequest request)_;return,a,comparator,for,sorting,matching,mappings,the,returned,comparator,should,sort,better,matches,higher,param,request,the,current,request,return,the,comparator,never,code,null;protected,abstract,comparator,t,get,mapping,comparator,http,servlet,request,request
AbstractHandlerMethodMapping -> protected abstract Comparator<T> getMappingComparator(HttpServletRequest request)_;1427240641;Return a comparator for sorting matching mappings._The returned comparator should sort 'better' matches higher._@param request the current request_@return the comparator (never {@code null});protected abstract Comparator<T> getMappingComparator(HttpServletRequest request)_;return,a,comparator,for,sorting,matching,mappings,the,returned,comparator,should,sort,better,matches,higher,param,request,the,current,request,return,the,comparator,never,code,null;protected,abstract,comparator,t,get,mapping,comparator,http,servlet,request,request
AbstractHandlerMethodMapping -> protected abstract Comparator<T> getMappingComparator(HttpServletRequest request)_;1427983931;Return a comparator for sorting matching mappings._The returned comparator should sort 'better' matches higher._@param request the current request_@return the comparator (never {@code null});protected abstract Comparator<T> getMappingComparator(HttpServletRequest request)_;return,a,comparator,for,sorting,matching,mappings,the,returned,comparator,should,sort,better,matches,higher,param,request,the,current,request,return,the,comparator,never,code,null;protected,abstract,comparator,t,get,mapping,comparator,http,servlet,request,request
AbstractHandlerMethodMapping -> protected abstract Comparator<T> getMappingComparator(HttpServletRequest request)_;1430734105;Return a comparator for sorting matching mappings._The returned comparator should sort 'better' matches higher._@param request the current request_@return the comparator (never {@code null});protected abstract Comparator<T> getMappingComparator(HttpServletRequest request)_;return,a,comparator,for,sorting,matching,mappings,the,returned,comparator,should,sort,better,matches,higher,param,request,the,current,request,return,the,comparator,never,code,null;protected,abstract,comparator,t,get,mapping,comparator,http,servlet,request,request
AbstractHandlerMethodMapping -> protected abstract Comparator<T> getMappingComparator(HttpServletRequest request)_;1430734105;Return a comparator for sorting matching mappings._The returned comparator should sort 'better' matches higher._@param request the current request_@return the comparator (never {@code null});protected abstract Comparator<T> getMappingComparator(HttpServletRequest request)_;return,a,comparator,for,sorting,matching,mappings,the,returned,comparator,should,sort,better,matches,higher,param,request,the,current,request,return,the,comparator,never,code,null;protected,abstract,comparator,t,get,mapping,comparator,http,servlet,request,request
AbstractHandlerMethodMapping -> protected abstract Comparator<T> getMappingComparator(HttpServletRequest request)_;1430734106;Return a comparator for sorting matching mappings._The returned comparator should sort 'better' matches higher._@param request the current request_@return the comparator (never {@code null});protected abstract Comparator<T> getMappingComparator(HttpServletRequest request)_;return,a,comparator,for,sorting,matching,mappings,the,returned,comparator,should,sort,better,matches,higher,param,request,the,current,request,return,the,comparator,never,code,null;protected,abstract,comparator,t,get,mapping,comparator,http,servlet,request,request
AbstractHandlerMethodMapping -> protected abstract Comparator<T> getMappingComparator(HttpServletRequest request)_;1430774689;Return a comparator for sorting matching mappings._The returned comparator should sort 'better' matches higher._@param request the current request_@return the comparator (never {@code null});protected abstract Comparator<T> getMappingComparator(HttpServletRequest request)_;return,a,comparator,for,sorting,matching,mappings,the,returned,comparator,should,sort,better,matches,higher,param,request,the,current,request,return,the,comparator,never,code,null;protected,abstract,comparator,t,get,mapping,comparator,http,servlet,request,request
AbstractHandlerMethodMapping -> protected abstract Comparator<T> getMappingComparator(HttpServletRequest request)_;1430844966;Return a comparator for sorting matching mappings._The returned comparator should sort 'better' matches higher._@param request the current request_@return the comparator (never {@code null});protected abstract Comparator<T> getMappingComparator(HttpServletRequest request)_;return,a,comparator,for,sorting,matching,mappings,the,returned,comparator,should,sort,better,matches,higher,param,request,the,current,request,return,the,comparator,never,code,null;protected,abstract,comparator,t,get,mapping,comparator,http,servlet,request,request
AbstractHandlerMethodMapping -> protected abstract Comparator<T> getMappingComparator(HttpServletRequest request)_;1430844967;Return a comparator for sorting matching mappings._The returned comparator should sort 'better' matches higher._@param request the current request_@return the comparator (never {@code null});protected abstract Comparator<T> getMappingComparator(HttpServletRequest request)_;return,a,comparator,for,sorting,matching,mappings,the,returned,comparator,should,sort,better,matches,higher,param,request,the,current,request,return,the,comparator,never,code,null;protected,abstract,comparator,t,get,mapping,comparator,http,servlet,request,request
AbstractHandlerMethodMapping -> protected abstract Comparator<T> getMappingComparator(HttpServletRequest request)_;1431730371;Return a comparator for sorting matching mappings._The returned comparator should sort 'better' matches higher._@param request the current request_@return the comparator (never {@code null});protected abstract Comparator<T> getMappingComparator(HttpServletRequest request)_;return,a,comparator,for,sorting,matching,mappings,the,returned,comparator,should,sort,better,matches,higher,param,request,the,current,request,return,the,comparator,never,code,null;protected,abstract,comparator,t,get,mapping,comparator,http,servlet,request,request
AbstractHandlerMethodMapping -> protected abstract Comparator<T> getMappingComparator(HttpServletRequest request)_;1439294371;Return a comparator for sorting matching mappings._The returned comparator should sort 'better' matches higher._@param request the current request_@return the comparator (never {@code null});protected abstract Comparator<T> getMappingComparator(HttpServletRequest request)_;return,a,comparator,for,sorting,matching,mappings,the,returned,comparator,should,sort,better,matches,higher,param,request,the,current,request,return,the,comparator,never,code,null;protected,abstract,comparator,t,get,mapping,comparator,http,servlet,request,request
AbstractHandlerMethodMapping -> protected abstract Comparator<T> getMappingComparator(HttpServletRequest request)_;1447077465;Return a comparator for sorting matching mappings._The returned comparator should sort 'better' matches higher._@param request the current request_@return the comparator (never {@code null});protected abstract Comparator<T> getMappingComparator(HttpServletRequest request)_;return,a,comparator,for,sorting,matching,mappings,the,returned,comparator,should,sort,better,matches,higher,param,request,the,current,request,return,the,comparator,never,code,null;protected,abstract,comparator,t,get,mapping,comparator,http,servlet,request,request
AbstractHandlerMethodMapping -> protected abstract Comparator<T> getMappingComparator(HttpServletRequest request)_;1448483163;Return a comparator for sorting matching mappings._The returned comparator should sort 'better' matches higher._@param request the current request_@return the comparator (never {@code null});protected abstract Comparator<T> getMappingComparator(HttpServletRequest request)_;return,a,comparator,for,sorting,matching,mappings,the,returned,comparator,should,sort,better,matches,higher,param,request,the,current,request,return,the,comparator,never,code,null;protected,abstract,comparator,t,get,mapping,comparator,http,servlet,request,request
AbstractHandlerMethodMapping -> protected abstract Comparator<T> getMappingComparator(HttpServletRequest request)_;1452685925;Return a comparator for sorting matching mappings._The returned comparator should sort 'better' matches higher._@param request the current request_@return the comparator (never {@code null});protected abstract Comparator<T> getMappingComparator(HttpServletRequest request)_;return,a,comparator,for,sorting,matching,mappings,the,returned,comparator,should,sort,better,matches,higher,param,request,the,current,request,return,the,comparator,never,code,null;protected,abstract,comparator,t,get,mapping,comparator,http,servlet,request,request
AbstractHandlerMethodMapping -> protected abstract Comparator<T> getMappingComparator(HttpServletRequest request)_;1452873718;Return a comparator for sorting matching mappings._The returned comparator should sort 'better' matches higher._@param request the current request_@return the comparator (never {@code null});protected abstract Comparator<T> getMappingComparator(HttpServletRequest request)_;return,a,comparator,for,sorting,matching,mappings,the,returned,comparator,should,sort,better,matches,higher,param,request,the,current,request,return,the,comparator,never,code,null;protected,abstract,comparator,t,get,mapping,comparator,http,servlet,request,request
AbstractHandlerMethodMapping -> protected abstract Comparator<T> getMappingComparator(HttpServletRequest request)_;1453843788;Return a comparator for sorting matching mappings._The returned comparator should sort 'better' matches higher._@param request the current request_@return the comparator (never {@code null});protected abstract Comparator<T> getMappingComparator(HttpServletRequest request)_;return,a,comparator,for,sorting,matching,mappings,the,returned,comparator,should,sort,better,matches,higher,param,request,the,current,request,return,the,comparator,never,code,null;protected,abstract,comparator,t,get,mapping,comparator,http,servlet,request,request
AbstractHandlerMethodMapping -> protected abstract Comparator<T> getMappingComparator(HttpServletRequest request)_;1467730834;Return a comparator for sorting matching mappings._The returned comparator should sort 'better' matches higher._@param request the current request_@return the comparator (never {@code null});protected abstract Comparator<T> getMappingComparator(HttpServletRequest request)_;return,a,comparator,for,sorting,matching,mappings,the,returned,comparator,should,sort,better,matches,higher,param,request,the,current,request,return,the,comparator,never,code,null;protected,abstract,comparator,t,get,mapping,comparator,http,servlet,request,request
AbstractHandlerMethodMapping -> protected abstract Comparator<T> getMappingComparator(HttpServletRequest request)_;1468417354;Return a comparator for sorting matching mappings._The returned comparator should sort 'better' matches higher._@param request the current request_@return the comparator (never {@code null});protected abstract Comparator<T> getMappingComparator(HttpServletRequest request)_;return,a,comparator,for,sorting,matching,mappings,the,returned,comparator,should,sort,better,matches,higher,param,request,the,current,request,return,the,comparator,never,code,null;protected,abstract,comparator,t,get,mapping,comparator,http,servlet,request,request
AbstractHandlerMethodMapping -> protected abstract Comparator<T> getMappingComparator(HttpServletRequest request)_;1468596479;Return a comparator for sorting matching mappings._The returned comparator should sort 'better' matches higher._@param request the current request_@return the comparator (never {@code null});protected abstract Comparator<T> getMappingComparator(HttpServletRequest request)_;return,a,comparator,for,sorting,matching,mappings,the,returned,comparator,should,sort,better,matches,higher,param,request,the,current,request,return,the,comparator,never,code,null;protected,abstract,comparator,t,get,mapping,comparator,http,servlet,request,request
AbstractHandlerMethodMapping -> protected abstract Comparator<T> getMappingComparator(HttpServletRequest request)_;1474905889;Return a comparator for sorting matching mappings._The returned comparator should sort 'better' matches higher._@param request the current request_@return the comparator (never {@code null});protected abstract Comparator<T> getMappingComparator(HttpServletRequest request)_;return,a,comparator,for,sorting,matching,mappings,the,returned,comparator,should,sort,better,matches,higher,param,request,the,current,request,return,the,comparator,never,code,null;protected,abstract,comparator,t,get,mapping,comparator,http,servlet,request,request
AbstractHandlerMethodMapping -> protected abstract Comparator<T> getMappingComparator(HttpServletRequest request)_;1481813056;Return a comparator for sorting matching mappings._The returned comparator should sort 'better' matches higher._@param request the current request_@return the comparator (never {@code null});protected abstract Comparator<T> getMappingComparator(HttpServletRequest request)_;return,a,comparator,for,sorting,matching,mappings,the,returned,comparator,should,sort,better,matches,higher,param,request,the,current,request,return,the,comparator,never,code,null;protected,abstract,comparator,t,get,mapping,comparator,http,servlet,request,request
AbstractHandlerMethodMapping -> protected abstract Comparator<T> getMappingComparator(HttpServletRequest request)_;1485810955;Return a comparator for sorting matching mappings._The returned comparator should sort 'better' matches higher._@param request the current request_@return the comparator (never {@code null});protected abstract Comparator<T> getMappingComparator(HttpServletRequest request)_;return,a,comparator,for,sorting,matching,mappings,the,returned,comparator,should,sort,better,matches,higher,param,request,the,current,request,return,the,comparator,never,code,null;protected,abstract,comparator,t,get,mapping,comparator,http,servlet,request,request
AbstractHandlerMethodMapping -> protected abstract Comparator<T> getMappingComparator(HttpServletRequest request)_;1495868221;Return a comparator for sorting matching mappings._The returned comparator should sort 'better' matches higher._@param request the current request_@return the comparator (never {@code null});protected abstract Comparator<T> getMappingComparator(HttpServletRequest request)_;return,a,comparator,for,sorting,matching,mappings,the,returned,comparator,should,sort,better,matches,higher,param,request,the,current,request,return,the,comparator,never,code,null;protected,abstract,comparator,t,get,mapping,comparator,http,servlet,request,request
AbstractHandlerMethodMapping -> protected abstract Comparator<T> getMappingComparator(HttpServletRequest request)_;1496837955;Return a comparator for sorting matching mappings._The returned comparator should sort 'better' matches higher._@param request the current request_@return the comparator (never {@code null});protected abstract Comparator<T> getMappingComparator(HttpServletRequest request)_;return,a,comparator,for,sorting,matching,mappings,the,returned,comparator,should,sort,better,matches,higher,param,request,the,current,request,return,the,comparator,never,code,null;protected,abstract,comparator,t,get,mapping,comparator,http,servlet,request,request
AbstractHandlerMethodMapping -> protected abstract Comparator<T> getMappingComparator(HttpServletRequest request)_;1497251962;Return a comparator for sorting matching mappings._The returned comparator should sort 'better' matches higher._@param request the current request_@return the comparator (never {@code null});protected abstract Comparator<T> getMappingComparator(HttpServletRequest request)_;return,a,comparator,for,sorting,matching,mappings,the,returned,comparator,should,sort,better,matches,higher,param,request,the,current,request,return,the,comparator,never,code,null;protected,abstract,comparator,t,get,mapping,comparator,http,servlet,request,request
AbstractHandlerMethodMapping -> protected abstract Comparator<T> getMappingComparator(HttpServletRequest request)_;1498780456;Return a comparator for sorting matching mappings._The returned comparator should sort 'better' matches higher._@param request the current request_@return the comparator (never {@code null});protected abstract Comparator<T> getMappingComparator(HttpServletRequest request)_;return,a,comparator,for,sorting,matching,mappings,the,returned,comparator,should,sort,better,matches,higher,param,request,the,current,request,return,the,comparator,never,code,null;protected,abstract,comparator,t,get,mapping,comparator,http,servlet,request,request
AbstractHandlerMethodMapping -> protected abstract Comparator<T> getMappingComparator(HttpServletRequest request)_;1518772998;Return a comparator for sorting matching mappings._The returned comparator should sort 'better' matches higher._@param request the current request_@return the comparator (never {@code null});protected abstract Comparator<T> getMappingComparator(HttpServletRequest request)_;return,a,comparator,for,sorting,matching,mappings,the,returned,comparator,should,sort,better,matches,higher,param,request,the,current,request,return,the,comparator,never,code,null;protected,abstract,comparator,t,get,mapping,comparator,http,servlet,request,request
AbstractHandlerMethodMapping -> protected abstract Comparator<T> getMappingComparator(HttpServletRequest request)_;1522103912;Return a comparator for sorting matching mappings._The returned comparator should sort 'better' matches higher._@param request the current request_@return the comparator (never {@code null});protected abstract Comparator<T> getMappingComparator(HttpServletRequest request)_;return,a,comparator,for,sorting,matching,mappings,the,returned,comparator,should,sort,better,matches,higher,param,request,the,current,request,return,the,comparator,never,code,null;protected,abstract,comparator,t,get,mapping,comparator,http,servlet,request,request
AbstractHandlerMethodMapping -> protected abstract Comparator<T> getMappingComparator(HttpServletRequest request)_;1522843494;Return a comparator for sorting matching mappings._The returned comparator should sort 'better' matches higher._@param request the current request_@return the comparator (never {@code null});protected abstract Comparator<T> getMappingComparator(HttpServletRequest request)_;return,a,comparator,for,sorting,matching,mappings,the,returned,comparator,should,sort,better,matches,higher,param,request,the,current,request,return,the,comparator,never,code,null;protected,abstract,comparator,t,get,mapping,comparator,http,servlet,request,request
AbstractHandlerMethodMapping -> protected abstract Comparator<T> getMappingComparator(HttpServletRequest request)_;1529361191;Return a comparator for sorting matching mappings._The returned comparator should sort 'better' matches higher._@param request the current request_@return the comparator (never {@code null});protected abstract Comparator<T> getMappingComparator(HttpServletRequest request)_;return,a,comparator,for,sorting,matching,mappings,the,returned,comparator,should,sort,better,matches,higher,param,request,the,current,request,return,the,comparator,never,code,null;protected,abstract,comparator,t,get,mapping,comparator,http,servlet,request,request
AbstractHandlerMethodMapping -> protected abstract Comparator<T> getMappingComparator(HttpServletRequest request)_;1529721864;Return a comparator for sorting matching mappings._The returned comparator should sort 'better' matches higher._@param request the current request_@return the comparator (never {@code null});protected abstract Comparator<T> getMappingComparator(HttpServletRequest request)_;return,a,comparator,for,sorting,matching,mappings,the,returned,comparator,should,sort,better,matches,higher,param,request,the,current,request,return,the,comparator,never,code,null;protected,abstract,comparator,t,get,mapping,comparator,http,servlet,request,request
AbstractHandlerMethodMapping -> protected abstract Comparator<T> getMappingComparator(HttpServletRequest request)_;1530174524;Return a comparator for sorting matching mappings._The returned comparator should sort 'better' matches higher._@param request the current request_@return the comparator (never {@code null});protected abstract Comparator<T> getMappingComparator(HttpServletRequest request)_;return,a,comparator,for,sorting,matching,mappings,the,returned,comparator,should,sort,better,matches,higher,param,request,the,current,request,return,the,comparator,never,code,null;protected,abstract,comparator,t,get,mapping,comparator,http,servlet,request,request
AbstractHandlerMethodMapping -> protected abstract Comparator<T> getMappingComparator(HttpServletRequest request)_;1530174524;Return a comparator for sorting matching mappings._The returned comparator should sort 'better' matches higher._@param request the current request_@return the comparator (never {@code null});protected abstract Comparator<T> getMappingComparator(HttpServletRequest request)_;return,a,comparator,for,sorting,matching,mappings,the,returned,comparator,should,sort,better,matches,higher,param,request,the,current,request,return,the,comparator,never,code,null;protected,abstract,comparator,t,get,mapping,comparator,http,servlet,request,request
AbstractHandlerMethodMapping -> protected abstract Comparator<T> getMappingComparator(HttpServletRequest request)_;1533943217;Return a comparator for sorting matching mappings._The returned comparator should sort 'better' matches higher._@param request the current request_@return the comparator (never {@code null});protected abstract Comparator<T> getMappingComparator(HttpServletRequest request)_;return,a,comparator,for,sorting,matching,mappings,the,returned,comparator,should,sort,better,matches,higher,param,request,the,current,request,return,the,comparator,never,code,null;protected,abstract,comparator,t,get,mapping,comparator,http,servlet,request,request
AbstractHandlerMethodMapping -> protected abstract Comparator<T> getMappingComparator(HttpServletRequest request)_;1542407418;Return a comparator for sorting matching mappings._The returned comparator should sort 'better' matches higher._@param request the current request_@return the comparator (never {@code null});protected abstract Comparator<T> getMappingComparator(HttpServletRequest request)_;return,a,comparator,for,sorting,matching,mappings,the,returned,comparator,should,sort,better,matches,higher,param,request,the,current,request,return,the,comparator,never,code,null;protected,abstract,comparator,t,get,mapping,comparator,http,servlet,request,request
AbstractHandlerMethodMapping -> protected abstract Comparator<T> getMappingComparator(HttpServletRequest request)_;1542771062;Return a comparator for sorting matching mappings._The returned comparator should sort 'better' matches higher._@param request the current request_@return the comparator (never {@code null});protected abstract Comparator<T> getMappingComparator(HttpServletRequest request)_;return,a,comparator,for,sorting,matching,mappings,the,returned,comparator,should,sort,better,matches,higher,param,request,the,current,request,return,the,comparator,never,code,null;protected,abstract,comparator,t,get,mapping,comparator,http,servlet,request,request
AbstractHandlerMethodMapping -> protected abstract Comparator<T> getMappingComparator(HttpServletRequest request)_;1548427561;Return a comparator for sorting matching mappings._The returned comparator should sort 'better' matches higher._@param request the current request_@return the comparator (never {@code null});protected abstract Comparator<T> getMappingComparator(HttpServletRequest request)_;return,a,comparator,for,sorting,matching,mappings,the,returned,comparator,should,sort,better,matches,higher,param,request,the,current,request,return,the,comparator,never,code,null;protected,abstract,comparator,t,get,mapping,comparator,http,servlet,request,request
AbstractHandlerMethodMapping -> protected abstract Comparator<T> getMappingComparator(HttpServletRequest request)_;1551093473;Return a comparator for sorting matching mappings._The returned comparator should sort 'better' matches higher._@param request the current request_@return the comparator (never {@code null});protected abstract Comparator<T> getMappingComparator(HttpServletRequest request)_;return,a,comparator,for,sorting,matching,mappings,the,returned,comparator,should,sort,better,matches,higher,param,request,the,current,request,return,the,comparator,never,code,null;protected,abstract,comparator,t,get,mapping,comparator,http,servlet,request,request
AbstractHandlerMethodMapping -> @Override 	public void afterPropertiesSet();1356735495;Detects handler methods at initialization.;@Override_	public void afterPropertiesSet() {_		initHandlerMethods()__	};detects,handler,methods,at,initialization;override,public,void,after,properties,set,init,handler,methods
AbstractHandlerMethodMapping -> @Override 	public void afterPropertiesSet();1368482696;Detects handler methods at initialization.;@Override_	public void afterPropertiesSet() {_		initHandlerMethods()__	};detects,handler,methods,at,initialization;override,public,void,after,properties,set,init,handler,methods
AbstractHandlerMethodMapping -> @Override 	public void afterPropertiesSet();1368581529;Detects handler methods at initialization.;@Override_	public void afterPropertiesSet() {_		initHandlerMethods()__	};detects,handler,methods,at,initialization;override,public,void,after,properties,set,init,handler,methods
AbstractHandlerMethodMapping -> @Override 	public void afterPropertiesSet();1382665849;Detects handler methods at initialization.;@Override_	public void afterPropertiesSet() {_		initHandlerMethods()__	};detects,handler,methods,at,initialization;override,public,void,after,properties,set,init,handler,methods
AbstractHandlerMethodMapping -> @Override 	public void afterPropertiesSet();1392160296;Detects handler methods at initialization.;@Override_	public void afterPropertiesSet() {_		initHandlerMethods()__	};detects,handler,methods,at,initialization;override,public,void,after,properties,set,init,handler,methods
AbstractHandlerMethodMapping -> @Override 	public void afterPropertiesSet();1392337816;Detects handler methods at initialization.;@Override_	public void afterPropertiesSet() {_		initHandlerMethods()__	};detects,handler,methods,at,initialization;override,public,void,after,properties,set,init,handler,methods
AbstractHandlerMethodMapping -> @Override 	public void afterPropertiesSet();1392407320;Detects handler methods at initialization.;@Override_	public void afterPropertiesSet() {_		initHandlerMethods()__	};detects,handler,methods,at,initialization;override,public,void,after,properties,set,init,handler,methods
AbstractHandlerMethodMapping -> @Override 	public void afterPropertiesSet();1395655323;Detects handler methods at initialization.;@Override_	public void afterPropertiesSet() {_		initHandlerMethods()__	};detects,handler,methods,at,initialization;override,public,void,after,properties,set,init,handler,methods
AbstractHandlerMethodMapping -> @Override 	public void afterPropertiesSet();1399404473;Detects handler methods at initialization.;@Override_	public void afterPropertiesSet() {_		initHandlerMethods()__	};detects,handler,methods,at,initialization;override,public,void,after,properties,set,init,handler,methods
AbstractHandlerMethodMapping -> @Override 	public void afterPropertiesSet();1426869344;Detects handler methods at initialization.;@Override_	public void afterPropertiesSet() {_		initHandlerMethods()__	};detects,handler,methods,at,initialization;override,public,void,after,properties,set,init,handler,methods
AbstractHandlerMethodMapping -> @Override 	public void afterPropertiesSet();1427240641;Detects handler methods at initialization.;@Override_	public void afterPropertiesSet() {_		initHandlerMethods()__	};detects,handler,methods,at,initialization;override,public,void,after,properties,set,init,handler,methods
AbstractHandlerMethodMapping -> @Override 	public void afterPropertiesSet();1427983931;Detects handler methods at initialization.;@Override_	public void afterPropertiesSet() {_		initHandlerMethods()__	};detects,handler,methods,at,initialization;override,public,void,after,properties,set,init,handler,methods
AbstractHandlerMethodMapping -> @Override 	public void afterPropertiesSet();1430734105;Detects handler methods at initialization.;@Override_	public void afterPropertiesSet() {_		initHandlerMethods()__	};detects,handler,methods,at,initialization;override,public,void,after,properties,set,init,handler,methods
AbstractHandlerMethodMapping -> @Override 	public void afterPropertiesSet();1430734105;Detects handler methods at initialization.;@Override_	public void afterPropertiesSet() {_		initHandlerMethods()__	};detects,handler,methods,at,initialization;override,public,void,after,properties,set,init,handler,methods
AbstractHandlerMethodMapping -> @Override 	public void afterPropertiesSet();1430734106;Detects handler methods at initialization.;@Override_	public void afterPropertiesSet() {_		initHandlerMethods()__	};detects,handler,methods,at,initialization;override,public,void,after,properties,set,init,handler,methods
AbstractHandlerMethodMapping -> @Override 	public void afterPropertiesSet();1430774689;Detects handler methods at initialization.;@Override_	public void afterPropertiesSet() {_		initHandlerMethods()__	};detects,handler,methods,at,initialization;override,public,void,after,properties,set,init,handler,methods
AbstractHandlerMethodMapping -> @Override 	public void afterPropertiesSet();1430844966;Detects handler methods at initialization.;@Override_	public void afterPropertiesSet() {_		initHandlerMethods()__	};detects,handler,methods,at,initialization;override,public,void,after,properties,set,init,handler,methods
AbstractHandlerMethodMapping -> @Override 	public void afterPropertiesSet();1430844967;Detects handler methods at initialization.;@Override_	public void afterPropertiesSet() {_		initHandlerMethods()__	};detects,handler,methods,at,initialization;override,public,void,after,properties,set,init,handler,methods
AbstractHandlerMethodMapping -> @Override 	public void afterPropertiesSet();1431730371;Detects handler methods at initialization.;@Override_	public void afterPropertiesSet() {_		initHandlerMethods()__	};detects,handler,methods,at,initialization;override,public,void,after,properties,set,init,handler,methods
AbstractHandlerMethodMapping -> @Override 	public void afterPropertiesSet();1439294371;Detects handler methods at initialization.;@Override_	public void afterPropertiesSet() {_		initHandlerMethods()__	};detects,handler,methods,at,initialization;override,public,void,after,properties,set,init,handler,methods
AbstractHandlerMethodMapping -> @Override 	public void afterPropertiesSet();1447077465;Detects handler methods at initialization.;@Override_	public void afterPropertiesSet() {_		initHandlerMethods()__	};detects,handler,methods,at,initialization;override,public,void,after,properties,set,init,handler,methods
AbstractHandlerMethodMapping -> @Override 	public void afterPropertiesSet();1448483163;Detects handler methods at initialization.;@Override_	public void afterPropertiesSet() {_		initHandlerMethods()__	};detects,handler,methods,at,initialization;override,public,void,after,properties,set,init,handler,methods
AbstractHandlerMethodMapping -> @Override 	public void afterPropertiesSet();1452685925;Detects handler methods at initialization.;@Override_	public void afterPropertiesSet() {_		initHandlerMethods()__	};detects,handler,methods,at,initialization;override,public,void,after,properties,set,init,handler,methods
AbstractHandlerMethodMapping -> @Override 	public void afterPropertiesSet();1452873718;Detects handler methods at initialization.;@Override_	public void afterPropertiesSet() {_		initHandlerMethods()__	};detects,handler,methods,at,initialization;override,public,void,after,properties,set,init,handler,methods
AbstractHandlerMethodMapping -> @Override 	public void afterPropertiesSet();1453843788;Detects handler methods at initialization.;@Override_	public void afterPropertiesSet() {_		initHandlerMethods()__	};detects,handler,methods,at,initialization;override,public,void,after,properties,set,init,handler,methods
AbstractHandlerMethodMapping -> @Override 	public void afterPropertiesSet();1467730834;Detects handler methods at initialization.;@Override_	public void afterPropertiesSet() {_		initHandlerMethods()__	};detects,handler,methods,at,initialization;override,public,void,after,properties,set,init,handler,methods
AbstractHandlerMethodMapping -> @Override 	public void afterPropertiesSet();1468417354;Detects handler methods at initialization.;@Override_	public void afterPropertiesSet() {_		initHandlerMethods()__	};detects,handler,methods,at,initialization;override,public,void,after,properties,set,init,handler,methods
AbstractHandlerMethodMapping -> @Override 	public void afterPropertiesSet();1468596479;Detects handler methods at initialization.;@Override_	public void afterPropertiesSet() {_		initHandlerMethods()__	};detects,handler,methods,at,initialization;override,public,void,after,properties,set,init,handler,methods
AbstractHandlerMethodMapping -> @Override 	public void afterPropertiesSet();1474905889;Detects handler methods at initialization.;@Override_	public void afterPropertiesSet() {_		initHandlerMethods()__	};detects,handler,methods,at,initialization;override,public,void,after,properties,set,init,handler,methods
AbstractHandlerMethodMapping -> @Override 	public void afterPropertiesSet();1481813056;Detects handler methods at initialization.;@Override_	public void afterPropertiesSet() {_		initHandlerMethods()__	};detects,handler,methods,at,initialization;override,public,void,after,properties,set,init,handler,methods
AbstractHandlerMethodMapping -> @Override 	public void afterPropertiesSet();1485810955;Detects handler methods at initialization.;@Override_	public void afterPropertiesSet() {_		initHandlerMethods()__	};detects,handler,methods,at,initialization;override,public,void,after,properties,set,init,handler,methods
AbstractHandlerMethodMapping -> @Override 	public void afterPropertiesSet();1495868221;Detects handler methods at initialization.;@Override_	public void afterPropertiesSet() {_		initHandlerMethods()__	};detects,handler,methods,at,initialization;override,public,void,after,properties,set,init,handler,methods
AbstractHandlerMethodMapping -> @Override 	public void afterPropertiesSet();1496837955;Detects handler methods at initialization.;@Override_	public void afterPropertiesSet() {_		initHandlerMethods()__	};detects,handler,methods,at,initialization;override,public,void,after,properties,set,init,handler,methods
AbstractHandlerMethodMapping -> @Override 	public void afterPropertiesSet();1497251962;Detects handler methods at initialization.;@Override_	public void afterPropertiesSet() {_		initHandlerMethods()__	};detects,handler,methods,at,initialization;override,public,void,after,properties,set,init,handler,methods
AbstractHandlerMethodMapping -> @Override 	public void afterPropertiesSet();1498780456;Detects handler methods at initialization.;@Override_	public void afterPropertiesSet() {_		initHandlerMethods()__	};detects,handler,methods,at,initialization;override,public,void,after,properties,set,init,handler,methods
AbstractHandlerMethodMapping -> @Override 	public void afterPropertiesSet();1518772998;Detects handler methods at initialization.;@Override_	public void afterPropertiesSet() {_		initHandlerMethods()__	};detects,handler,methods,at,initialization;override,public,void,after,properties,set,init,handler,methods
AbstractHandlerMethodMapping -> @Override 	public void afterPropertiesSet();1522103912;Detects handler methods at initialization.;@Override_	public void afterPropertiesSet() {_		initHandlerMethods()__	};detects,handler,methods,at,initialization;override,public,void,after,properties,set,init,handler,methods
AbstractHandlerMethodMapping -> @Override 	public void afterPropertiesSet();1522843494;Detects handler methods at initialization.;@Override_	public void afterPropertiesSet() {_		initHandlerMethods()__	};detects,handler,methods,at,initialization;override,public,void,after,properties,set,init,handler,methods
AbstractHandlerMethodMapping -> @Override 	public void afterPropertiesSet();1529361191;Detects handler methods at initialization.;@Override_	public void afterPropertiesSet() {__		initHandlerMethods()___		if (logger.isDebugEnabled()) {_			_			int total = this.getHandlerMethods().size()__			logger.debug("Detected " + total + " mappings in " + formatMappingName())__		}_	};detects,handler,methods,at,initialization;override,public,void,after,properties,set,init,handler,methods,if,logger,is,debug,enabled,int,total,this,get,handler,methods,size,logger,debug,detected,total,mappings,in,format,mapping,name
AbstractHandlerMethodMapping -> @Override 	public void afterPropertiesSet();1529721864;Detects handler methods at initialization.;@Override_	public void afterPropertiesSet() {__		initHandlerMethods()___		_		int total = this.getHandlerMethods().size()___		if ((logger.isTraceEnabled() && total == 0) || (logger.isDebugEnabled() && total > 0) ) {_			logger.debug(total + " mappings in " + formatMappingName())__		}_	};detects,handler,methods,at,initialization;override,public,void,after,properties,set,init,handler,methods,int,total,this,get,handler,methods,size,if,logger,is,trace,enabled,total,0,logger,is,debug,enabled,total,0,logger,debug,total,mappings,in,format,mapping,name
AbstractHandlerMethodMapping -> @Override 	public void afterPropertiesSet();1530174524;Detects handler methods at initialization.;@Override_	public void afterPropertiesSet() {__		initHandlerMethods()___		_		int total = this.getHandlerMethods().size()___		if ((logger.isTraceEnabled() && total == 0) || (logger.isDebugEnabled() && total > 0) ) {_			logger.debug(total + " mappings in " + formatMappingName())__		}_	};detects,handler,methods,at,initialization;override,public,void,after,properties,set,init,handler,methods,int,total,this,get,handler,methods,size,if,logger,is,trace,enabled,total,0,logger,is,debug,enabled,total,0,logger,debug,total,mappings,in,format,mapping,name
AbstractHandlerMethodMapping -> @Override 	public void afterPropertiesSet();1530174524;Detects handler methods at initialization.;@Override_	public void afterPropertiesSet() {__		initHandlerMethods()___		_		int total = this.getHandlerMethods().size()___		if ((logger.isTraceEnabled() && total == 0) || (logger.isDebugEnabled() && total > 0) ) {_			logger.debug(total + " mappings in " + formatMappingName())__		}_	};detects,handler,methods,at,initialization;override,public,void,after,properties,set,init,handler,methods,int,total,this,get,handler,methods,size,if,logger,is,trace,enabled,total,0,logger,is,debug,enabled,total,0,logger,debug,total,mappings,in,format,mapping,name
AbstractHandlerMethodMapping -> @Override 	public void afterPropertiesSet();1533943217;Detects handler methods at initialization._@see #initHandlerMethods;@Override_	public void afterPropertiesSet() {_		initHandlerMethods()__	};detects,handler,methods,at,initialization,see,init,handler,methods;override,public,void,after,properties,set,init,handler,methods
AbstractHandlerMethodMapping -> @Override 	public void afterPropertiesSet();1542407418;Detects handler methods at initialization._@see #initHandlerMethods;@Override_	public void afterPropertiesSet() {_		initHandlerMethods()__	};detects,handler,methods,at,initialization,see,init,handler,methods;override,public,void,after,properties,set,init,handler,methods
AbstractHandlerMethodMapping -> @Override 	public void afterPropertiesSet();1542771062;Detects handler methods at initialization._@see #initHandlerMethods;@Override_	public void afterPropertiesSet() {_		initHandlerMethods()__	};detects,handler,methods,at,initialization,see,init,handler,methods;override,public,void,after,properties,set,init,handler,methods
AbstractHandlerMethodMapping -> @Override 	public void afterPropertiesSet();1548427561;Detects handler methods at initialization._@see #initHandlerMethods;@Override_	public void afterPropertiesSet() {_		initHandlerMethods()__	};detects,handler,methods,at,initialization,see,init,handler,methods;override,public,void,after,properties,set,init,handler,methods
AbstractHandlerMethodMapping -> @Override 	public void afterPropertiesSet();1551093473;Detects handler methods at initialization._@see #initHandlerMethods;@Override_	public void afterPropertiesSet() {_		initHandlerMethods()__	};detects,handler,methods,at,initialization,see,init,handler,methods;override,public,void,after,properties,set,init,handler,methods
AbstractHandlerMethodMapping -> MappingRegistry -> public void acquireReadLock();1430734106;Acquire the read lock when using getMappings and getMappingKeysByUrl.;public void acquireReadLock() {_			this.readWriteLock.readLock().lock()__		};acquire,the,read,lock,when,using,get,mappings,and,get,mapping,keys,by,url;public,void,acquire,read,lock,this,read,write,lock,read,lock,lock
AbstractHandlerMethodMapping -> MappingRegistry -> public void acquireReadLock();1430774689;Acquire the read lock when using getMappings and getMappingKeysByUrl.;public void acquireReadLock() {_			this.readWriteLock.readLock().lock()__		};acquire,the,read,lock,when,using,get,mappings,and,get,mapping,keys,by,url;public,void,acquire,read,lock,this,read,write,lock,read,lock,lock
AbstractHandlerMethodMapping -> MappingRegistry -> public void acquireReadLock();1430844966;Acquire the read lock when using getMappings and getMappingsByUrl.;public void acquireReadLock() {_			this.readWriteLock.readLock().lock()__		};acquire,the,read,lock,when,using,get,mappings,and,get,mappings,by,url;public,void,acquire,read,lock,this,read,write,lock,read,lock,lock
AbstractHandlerMethodMapping -> MappingRegistry -> public void acquireReadLock();1430844967;Acquire the read lock when using getMappings and getMappingsByUrl.;public void acquireReadLock() {_			this.readWriteLock.readLock().lock()__		};acquire,the,read,lock,when,using,get,mappings,and,get,mappings,by,url;public,void,acquire,read,lock,this,read,write,lock,read,lock,lock
AbstractHandlerMethodMapping -> MappingRegistry -> public void acquireReadLock();1431730371;Acquire the read lock when using getMappings and getMappingsByUrl.;public void acquireReadLock() {_			this.readWriteLock.readLock().lock()__		};acquire,the,read,lock,when,using,get,mappings,and,get,mappings,by,url;public,void,acquire,read,lock,this,read,write,lock,read,lock,lock
AbstractHandlerMethodMapping -> MappingRegistry -> public void acquireReadLock();1439294371;Acquire the read lock when using getMappings and getMappingsByUrl.;public void acquireReadLock() {_			this.readWriteLock.readLock().lock()__		};acquire,the,read,lock,when,using,get,mappings,and,get,mappings,by,url;public,void,acquire,read,lock,this,read,write,lock,read,lock,lock
AbstractHandlerMethodMapping -> MappingRegistry -> public void acquireReadLock();1447077465;Acquire the read lock when using getMappings and getMappingsByUrl.;public void acquireReadLock() {_			this.readWriteLock.readLock().lock()__		};acquire,the,read,lock,when,using,get,mappings,and,get,mappings,by,url;public,void,acquire,read,lock,this,read,write,lock,read,lock,lock
AbstractHandlerMethodMapping -> MappingRegistry -> public void acquireReadLock();1448483163;Acquire the read lock when using getMappings and getMappingsByUrl.;public void acquireReadLock() {_			this.readWriteLock.readLock().lock()__		};acquire,the,read,lock,when,using,get,mappings,and,get,mappings,by,url;public,void,acquire,read,lock,this,read,write,lock,read,lock,lock
AbstractHandlerMethodMapping -> MappingRegistry -> public void acquireReadLock();1452685925;Acquire the read lock when using getMappings and getMappingsByUrl.;public void acquireReadLock() {_			this.readWriteLock.readLock().lock()__		};acquire,the,read,lock,when,using,get,mappings,and,get,mappings,by,url;public,void,acquire,read,lock,this,read,write,lock,read,lock,lock
AbstractHandlerMethodMapping -> MappingRegistry -> public void acquireReadLock();1452873718;Acquire the read lock when using getMappings and getMappingsByUrl.;public void acquireReadLock() {_			this.readWriteLock.readLock().lock()__		};acquire,the,read,lock,when,using,get,mappings,and,get,mappings,by,url;public,void,acquire,read,lock,this,read,write,lock,read,lock,lock
AbstractHandlerMethodMapping -> MappingRegistry -> public void acquireReadLock();1453843788;Acquire the read lock when using getMappings and getMappingsByUrl.;public void acquireReadLock() {_			this.readWriteLock.readLock().lock()__		};acquire,the,read,lock,when,using,get,mappings,and,get,mappings,by,url;public,void,acquire,read,lock,this,read,write,lock,read,lock,lock
AbstractHandlerMethodMapping -> MappingRegistry -> public void acquireReadLock();1467730834;Acquire the read lock when using getMappings and getMappingsByUrl.;public void acquireReadLock() {_			this.readWriteLock.readLock().lock()__		};acquire,the,read,lock,when,using,get,mappings,and,get,mappings,by,url;public,void,acquire,read,lock,this,read,write,lock,read,lock,lock
AbstractHandlerMethodMapping -> MappingRegistry -> public void acquireReadLock();1468417354;Acquire the read lock when using getMappings and getMappingsByUrl.;public void acquireReadLock() {_			this.readWriteLock.readLock().lock()__		};acquire,the,read,lock,when,using,get,mappings,and,get,mappings,by,url;public,void,acquire,read,lock,this,read,write,lock,read,lock,lock
AbstractHandlerMethodMapping -> MappingRegistry -> public void acquireReadLock();1468596479;Acquire the read lock when using getMappings and getMappingsByUrl.;public void acquireReadLock() {_			this.readWriteLock.readLock().lock()__		};acquire,the,read,lock,when,using,get,mappings,and,get,mappings,by,url;public,void,acquire,read,lock,this,read,write,lock,read,lock,lock
AbstractHandlerMethodMapping -> MappingRegistry -> public void acquireReadLock();1474905889;Acquire the read lock when using getMappings and getMappingsByUrl.;public void acquireReadLock() {_			this.readWriteLock.readLock().lock()__		};acquire,the,read,lock,when,using,get,mappings,and,get,mappings,by,url;public,void,acquire,read,lock,this,read,write,lock,read,lock,lock
AbstractHandlerMethodMapping -> MappingRegistry -> public void acquireReadLock();1481813056;Acquire the read lock when using getMappings and getMappingsByUrl.;public void acquireReadLock() {_			this.readWriteLock.readLock().lock()__		};acquire,the,read,lock,when,using,get,mappings,and,get,mappings,by,url;public,void,acquire,read,lock,this,read,write,lock,read,lock,lock
AbstractHandlerMethodMapping -> MappingRegistry -> public void acquireReadLock();1485810955;Acquire the read lock when using getMappings and getMappingsByUrl.;public void acquireReadLock() {_			this.readWriteLock.readLock().lock()__		};acquire,the,read,lock,when,using,get,mappings,and,get,mappings,by,url;public,void,acquire,read,lock,this,read,write,lock,read,lock,lock
AbstractHandlerMethodMapping -> MappingRegistry -> public void acquireReadLock();1495868221;Acquire the read lock when using getMappings and getMappingsByUrl.;public void acquireReadLock() {_			this.readWriteLock.readLock().lock()__		};acquire,the,read,lock,when,using,get,mappings,and,get,mappings,by,url;public,void,acquire,read,lock,this,read,write,lock,read,lock,lock
AbstractHandlerMethodMapping -> MappingRegistry -> public void acquireReadLock();1496837955;Acquire the read lock when using getMappings and getMappingsByUrl.;public void acquireReadLock() {_			this.readWriteLock.readLock().lock()__		};acquire,the,read,lock,when,using,get,mappings,and,get,mappings,by,url;public,void,acquire,read,lock,this,read,write,lock,read,lock,lock
AbstractHandlerMethodMapping -> MappingRegistry -> public void acquireReadLock();1497251962;Acquire the read lock when using getMappings and getMappingsByUrl.;public void acquireReadLock() {_			this.readWriteLock.readLock().lock()__		};acquire,the,read,lock,when,using,get,mappings,and,get,mappings,by,url;public,void,acquire,read,lock,this,read,write,lock,read,lock,lock
AbstractHandlerMethodMapping -> MappingRegistry -> public void acquireReadLock();1498780456;Acquire the read lock when using getMappings and getMappingsByUrl.;public void acquireReadLock() {_			this.readWriteLock.readLock().lock()__		};acquire,the,read,lock,when,using,get,mappings,and,get,mappings,by,url;public,void,acquire,read,lock,this,read,write,lock,read,lock,lock
AbstractHandlerMethodMapping -> MappingRegistry -> public void acquireReadLock();1518772998;Acquire the read lock when using getMappings and getMappingsByUrl.;public void acquireReadLock() {_			this.readWriteLock.readLock().lock()__		};acquire,the,read,lock,when,using,get,mappings,and,get,mappings,by,url;public,void,acquire,read,lock,this,read,write,lock,read,lock,lock
AbstractHandlerMethodMapping -> MappingRegistry -> public void acquireReadLock();1522103912;Acquire the read lock when using getMappings and getMappingsByUrl.;public void acquireReadLock() {_			this.readWriteLock.readLock().lock()__		};acquire,the,read,lock,when,using,get,mappings,and,get,mappings,by,url;public,void,acquire,read,lock,this,read,write,lock,read,lock,lock
AbstractHandlerMethodMapping -> MappingRegistry -> public void acquireReadLock();1522843494;Acquire the read lock when using getMappings and getMappingsByUrl.;public void acquireReadLock() {_			this.readWriteLock.readLock().lock()__		};acquire,the,read,lock,when,using,get,mappings,and,get,mappings,by,url;public,void,acquire,read,lock,this,read,write,lock,read,lock,lock
AbstractHandlerMethodMapping -> MappingRegistry -> public void acquireReadLock();1529361191;Acquire the read lock when using getMappings and getMappingsByUrl.;public void acquireReadLock() {_			this.readWriteLock.readLock().lock()__		};acquire,the,read,lock,when,using,get,mappings,and,get,mappings,by,url;public,void,acquire,read,lock,this,read,write,lock,read,lock,lock
AbstractHandlerMethodMapping -> MappingRegistry -> public void acquireReadLock();1529721864;Acquire the read lock when using getMappings and getMappingsByUrl.;public void acquireReadLock() {_			this.readWriteLock.readLock().lock()__		};acquire,the,read,lock,when,using,get,mappings,and,get,mappings,by,url;public,void,acquire,read,lock,this,read,write,lock,read,lock,lock
AbstractHandlerMethodMapping -> MappingRegistry -> public void acquireReadLock();1530174524;Acquire the read lock when using getMappings and getMappingsByUrl.;public void acquireReadLock() {_			this.readWriteLock.readLock().lock()__		};acquire,the,read,lock,when,using,get,mappings,and,get,mappings,by,url;public,void,acquire,read,lock,this,read,write,lock,read,lock,lock
AbstractHandlerMethodMapping -> MappingRegistry -> public void acquireReadLock();1530174524;Acquire the read lock when using getMappings and getMappingsByUrl.;public void acquireReadLock() {_			this.readWriteLock.readLock().lock()__		};acquire,the,read,lock,when,using,get,mappings,and,get,mappings,by,url;public,void,acquire,read,lock,this,read,write,lock,read,lock,lock
AbstractHandlerMethodMapping -> MappingRegistry -> public void acquireReadLock();1533943217;Acquire the read lock when using getMappings and getMappingsByUrl.;public void acquireReadLock() {_			this.readWriteLock.readLock().lock()__		};acquire,the,read,lock,when,using,get,mappings,and,get,mappings,by,url;public,void,acquire,read,lock,this,read,write,lock,read,lock,lock
AbstractHandlerMethodMapping -> MappingRegistry -> public void acquireReadLock();1542407418;Acquire the read lock when using getMappings and getMappingsByUrl.;public void acquireReadLock() {_			this.readWriteLock.readLock().lock()__		};acquire,the,read,lock,when,using,get,mappings,and,get,mappings,by,url;public,void,acquire,read,lock,this,read,write,lock,read,lock,lock
AbstractHandlerMethodMapping -> MappingRegistry -> public void acquireReadLock();1542771062;Acquire the read lock when using getMappings and getMappingsByUrl.;public void acquireReadLock() {_			this.readWriteLock.readLock().lock()__		};acquire,the,read,lock,when,using,get,mappings,and,get,mappings,by,url;public,void,acquire,read,lock,this,read,write,lock,read,lock,lock
AbstractHandlerMethodMapping -> MappingRegistry -> public void acquireReadLock();1548427561;Acquire the read lock when using getMappings and getMappingsByUrl.;public void acquireReadLock() {_			this.readWriteLock.readLock().lock()__		};acquire,the,read,lock,when,using,get,mappings,and,get,mappings,by,url;public,void,acquire,read,lock,this,read,write,lock,read,lock,lock
AbstractHandlerMethodMapping -> MappingRegistry -> public void acquireReadLock();1551093473;Acquire the read lock when using getMappings and getMappingsByUrl.;public void acquireReadLock() {_			this.readWriteLock.readLock().lock()__		};acquire,the,read,lock,when,using,get,mappings,and,get,mappings,by,url;public,void,acquire,read,lock,this,read,write,lock,read,lock,lock
AbstractHandlerMethodMapping -> @Nullable 	protected HandlerMethod handleNoMatch(Set<T> mappings, String lookupPath, HttpServletRequest request) 			throws Exception;1495868221;Invoked when no matching mapping is not found._@param mappings all registered mappings_@param lookupPath mapping lookup path within the current servlet mapping_@param request the current request_@throws ServletException in case of errors;@Nullable_	protected HandlerMethod handleNoMatch(Set<T> mappings, String lookupPath, HttpServletRequest request)_			throws Exception {__		return null__	};invoked,when,no,matching,mapping,is,not,found,param,mappings,all,registered,mappings,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,request,the,current,request,throws,servlet,exception,in,case,of,errors;nullable,protected,handler,method,handle,no,match,set,t,mappings,string,lookup,path,http,servlet,request,request,throws,exception,return,null
AbstractHandlerMethodMapping -> @Nullable 	protected HandlerMethod handleNoMatch(Set<T> mappings, String lookupPath, HttpServletRequest request) 			throws Exception;1496837955;Invoked when no matching mapping is not found._@param mappings all registered mappings_@param lookupPath mapping lookup path within the current servlet mapping_@param request the current request_@throws ServletException in case of errors;@Nullable_	protected HandlerMethod handleNoMatch(Set<T> mappings, String lookupPath, HttpServletRequest request)_			throws Exception {__		return null__	};invoked,when,no,matching,mapping,is,not,found,param,mappings,all,registered,mappings,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,request,the,current,request,throws,servlet,exception,in,case,of,errors;nullable,protected,handler,method,handle,no,match,set,t,mappings,string,lookup,path,http,servlet,request,request,throws,exception,return,null
AbstractHandlerMethodMapping -> @Nullable 	protected HandlerMethod handleNoMatch(Set<T> mappings, String lookupPath, HttpServletRequest request) 			throws Exception;1497251962;Invoked when no matching mapping is not found._@param mappings all registered mappings_@param lookupPath mapping lookup path within the current servlet mapping_@param request the current request_@throws ServletException in case of errors;@Nullable_	protected HandlerMethod handleNoMatch(Set<T> mappings, String lookupPath, HttpServletRequest request)_			throws Exception {__		return null__	};invoked,when,no,matching,mapping,is,not,found,param,mappings,all,registered,mappings,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,request,the,current,request,throws,servlet,exception,in,case,of,errors;nullable,protected,handler,method,handle,no,match,set,t,mappings,string,lookup,path,http,servlet,request,request,throws,exception,return,null
AbstractHandlerMethodMapping -> @Nullable 	protected HandlerMethod handleNoMatch(Set<T> mappings, String lookupPath, HttpServletRequest request) 			throws Exception;1498780456;Invoked when no matching mapping is not found._@param mappings all registered mappings_@param lookupPath mapping lookup path within the current servlet mapping_@param request the current request_@throws ServletException in case of errors;@Nullable_	protected HandlerMethod handleNoMatch(Set<T> mappings, String lookupPath, HttpServletRequest request)_			throws Exception {__		return null__	};invoked,when,no,matching,mapping,is,not,found,param,mappings,all,registered,mappings,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,request,the,current,request,throws,servlet,exception,in,case,of,errors;nullable,protected,handler,method,handle,no,match,set,t,mappings,string,lookup,path,http,servlet,request,request,throws,exception,return,null
AbstractHandlerMethodMapping -> @Nullable 	protected HandlerMethod handleNoMatch(Set<T> mappings, String lookupPath, HttpServletRequest request) 			throws Exception;1518772998;Invoked when no matching mapping is not found._@param mappings all registered mappings_@param lookupPath mapping lookup path within the current servlet mapping_@param request the current request_@throws ServletException in case of errors;@Nullable_	protected HandlerMethod handleNoMatch(Set<T> mappings, String lookupPath, HttpServletRequest request)_			throws Exception {__		return null__	};invoked,when,no,matching,mapping,is,not,found,param,mappings,all,registered,mappings,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,request,the,current,request,throws,servlet,exception,in,case,of,errors;nullable,protected,handler,method,handle,no,match,set,t,mappings,string,lookup,path,http,servlet,request,request,throws,exception,return,null
AbstractHandlerMethodMapping -> @Nullable 	protected HandlerMethod handleNoMatch(Set<T> mappings, String lookupPath, HttpServletRequest request) 			throws Exception;1522103912;Invoked when no matching mapping is not found._@param mappings all registered mappings_@param lookupPath mapping lookup path within the current servlet mapping_@param request the current request_@throws ServletException in case of errors;@Nullable_	protected HandlerMethod handleNoMatch(Set<T> mappings, String lookupPath, HttpServletRequest request)_			throws Exception {__		return null__	};invoked,when,no,matching,mapping,is,not,found,param,mappings,all,registered,mappings,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,request,the,current,request,throws,servlet,exception,in,case,of,errors;nullable,protected,handler,method,handle,no,match,set,t,mappings,string,lookup,path,http,servlet,request,request,throws,exception,return,null
AbstractHandlerMethodMapping -> @Nullable 	protected HandlerMethod handleNoMatch(Set<T> mappings, String lookupPath, HttpServletRequest request) 			throws Exception;1522843494;Invoked when no matching mapping is not found._@param mappings all registered mappings_@param lookupPath mapping lookup path within the current servlet mapping_@param request the current request_@throws ServletException in case of errors;@Nullable_	protected HandlerMethod handleNoMatch(Set<T> mappings, String lookupPath, HttpServletRequest request)_			throws Exception {__		return null__	};invoked,when,no,matching,mapping,is,not,found,param,mappings,all,registered,mappings,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,request,the,current,request,throws,servlet,exception,in,case,of,errors;nullable,protected,handler,method,handle,no,match,set,t,mappings,string,lookup,path,http,servlet,request,request,throws,exception,return,null
AbstractHandlerMethodMapping -> @Nullable 	protected HandlerMethod handleNoMatch(Set<T> mappings, String lookupPath, HttpServletRequest request) 			throws Exception;1529361191;Invoked when no matching mapping is not found._@param mappings all registered mappings_@param lookupPath mapping lookup path within the current servlet mapping_@param request the current request_@throws ServletException in case of errors;@Nullable_	protected HandlerMethod handleNoMatch(Set<T> mappings, String lookupPath, HttpServletRequest request)_			throws Exception {__		return null__	};invoked,when,no,matching,mapping,is,not,found,param,mappings,all,registered,mappings,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,request,the,current,request,throws,servlet,exception,in,case,of,errors;nullable,protected,handler,method,handle,no,match,set,t,mappings,string,lookup,path,http,servlet,request,request,throws,exception,return,null
AbstractHandlerMethodMapping -> @Nullable 	protected HandlerMethod handleNoMatch(Set<T> mappings, String lookupPath, HttpServletRequest request) 			throws Exception;1529721864;Invoked when no matching mapping is not found._@param mappings all registered mappings_@param lookupPath mapping lookup path within the current servlet mapping_@param request the current request_@throws ServletException in case of errors;@Nullable_	protected HandlerMethod handleNoMatch(Set<T> mappings, String lookupPath, HttpServletRequest request)_			throws Exception {__		return null__	};invoked,when,no,matching,mapping,is,not,found,param,mappings,all,registered,mappings,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,request,the,current,request,throws,servlet,exception,in,case,of,errors;nullable,protected,handler,method,handle,no,match,set,t,mappings,string,lookup,path,http,servlet,request,request,throws,exception,return,null
AbstractHandlerMethodMapping -> @Nullable 	protected HandlerMethod handleNoMatch(Set<T> mappings, String lookupPath, HttpServletRequest request) 			throws Exception;1530174524;Invoked when no matching mapping is not found._@param mappings all registered mappings_@param lookupPath mapping lookup path within the current servlet mapping_@param request the current request_@throws ServletException in case of errors;@Nullable_	protected HandlerMethod handleNoMatch(Set<T> mappings, String lookupPath, HttpServletRequest request)_			throws Exception {__		return null__	};invoked,when,no,matching,mapping,is,not,found,param,mappings,all,registered,mappings,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,request,the,current,request,throws,servlet,exception,in,case,of,errors;nullable,protected,handler,method,handle,no,match,set,t,mappings,string,lookup,path,http,servlet,request,request,throws,exception,return,null
AbstractHandlerMethodMapping -> @Nullable 	protected HandlerMethod handleNoMatch(Set<T> mappings, String lookupPath, HttpServletRequest request) 			throws Exception;1530174524;Invoked when no matching mapping is not found._@param mappings all registered mappings_@param lookupPath mapping lookup path within the current servlet mapping_@param request the current request_@throws ServletException in case of errors;@Nullable_	protected HandlerMethod handleNoMatch(Set<T> mappings, String lookupPath, HttpServletRequest request)_			throws Exception {__		return null__	};invoked,when,no,matching,mapping,is,not,found,param,mappings,all,registered,mappings,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,request,the,current,request,throws,servlet,exception,in,case,of,errors;nullable,protected,handler,method,handle,no,match,set,t,mappings,string,lookup,path,http,servlet,request,request,throws,exception,return,null
AbstractHandlerMethodMapping -> @Nullable 	protected HandlerMethod handleNoMatch(Set<T> mappings, String lookupPath, HttpServletRequest request) 			throws Exception;1533943217;Invoked when no matching mapping is not found._@param mappings all registered mappings_@param lookupPath mapping lookup path within the current servlet mapping_@param request the current request_@throws ServletException in case of errors;@Nullable_	protected HandlerMethod handleNoMatch(Set<T> mappings, String lookupPath, HttpServletRequest request)_			throws Exception {__		return null__	};invoked,when,no,matching,mapping,is,not,found,param,mappings,all,registered,mappings,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,request,the,current,request,throws,servlet,exception,in,case,of,errors;nullable,protected,handler,method,handle,no,match,set,t,mappings,string,lookup,path,http,servlet,request,request,throws,exception,return,null
AbstractHandlerMethodMapping -> @Nullable 	protected HandlerMethod handleNoMatch(Set<T> mappings, String lookupPath, HttpServletRequest request) 			throws Exception;1542407418;Invoked when no matching mapping is not found._@param mappings all registered mappings_@param lookupPath mapping lookup path within the current servlet mapping_@param request the current request_@throws ServletException in case of errors;@Nullable_	protected HandlerMethod handleNoMatch(Set<T> mappings, String lookupPath, HttpServletRequest request)_			throws Exception {__		return null__	};invoked,when,no,matching,mapping,is,not,found,param,mappings,all,registered,mappings,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,request,the,current,request,throws,servlet,exception,in,case,of,errors;nullable,protected,handler,method,handle,no,match,set,t,mappings,string,lookup,path,http,servlet,request,request,throws,exception,return,null
AbstractHandlerMethodMapping -> @Nullable 	protected HandlerMethod handleNoMatch(Set<T> mappings, String lookupPath, HttpServletRequest request) 			throws Exception;1542771062;Invoked when no matching mapping is not found._@param mappings all registered mappings_@param lookupPath mapping lookup path within the current servlet mapping_@param request the current request_@throws ServletException in case of errors;@Nullable_	protected HandlerMethod handleNoMatch(Set<T> mappings, String lookupPath, HttpServletRequest request)_			throws Exception {__		return null__	};invoked,when,no,matching,mapping,is,not,found,param,mappings,all,registered,mappings,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,request,the,current,request,throws,servlet,exception,in,case,of,errors;nullable,protected,handler,method,handle,no,match,set,t,mappings,string,lookup,path,http,servlet,request,request,throws,exception,return,null
AbstractHandlerMethodMapping -> @Nullable 	protected HandlerMethod handleNoMatch(Set<T> mappings, String lookupPath, HttpServletRequest request) 			throws Exception;1548427561;Invoked when no matching mapping is not found._@param mappings all registered mappings_@param lookupPath mapping lookup path within the current servlet mapping_@param request the current request_@throws ServletException in case of errors;@Nullable_	protected HandlerMethod handleNoMatch(Set<T> mappings, String lookupPath, HttpServletRequest request)_			throws Exception {__		return null__	};invoked,when,no,matching,mapping,is,not,found,param,mappings,all,registered,mappings,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,request,the,current,request,throws,servlet,exception,in,case,of,errors;nullable,protected,handler,method,handle,no,match,set,t,mappings,string,lookup,path,http,servlet,request,request,throws,exception,return,null
AbstractHandlerMethodMapping -> @Nullable 	protected HandlerMethod handleNoMatch(Set<T> mappings, String lookupPath, HttpServletRequest request) 			throws Exception;1551093473;Invoked when no matching mapping is not found._@param mappings all registered mappings_@param lookupPath mapping lookup path within the current servlet mapping_@param request the current request_@throws ServletException in case of errors;@Nullable_	protected HandlerMethod handleNoMatch(Set<T> mappings, String lookupPath, HttpServletRequest request)_			throws Exception {__		return null__	};invoked,when,no,matching,mapping,is,not,found,param,mappings,all,registered,mappings,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,request,the,current,request,throws,servlet,exception,in,case,of,errors;nullable,protected,handler,method,handle,no,match,set,t,mappings,string,lookup,path,http,servlet,request,request,throws,exception,return,null
AbstractHandlerMethodMapping -> protected void registerHandlerMethod(Object handler, Method method, T mapping);1328020251;Register a handler method and its unique mapping.__@param handler the bean name of the handler or the handler instance_@param method the method to register_@param mapping the mapping conditions associated with the handler method_@throws IllegalStateException if another method was already registered_under the same mapping;protected void registerHandlerMethod(Object handler, Method method, T mapping) {_		HandlerMethod handlerMethod__		if (handler instanceof String) {_			String beanName = (String) handler__			handlerMethod = new HandlerMethod(beanName, getApplicationContext(), method)__		}_		else {_			handlerMethod = new HandlerMethod(handler, method)__		}_		_		HandlerMethod oldHandlerMethod = handlerMethods.get(mapping)__		if (oldHandlerMethod != null && !oldHandlerMethod.equals(handlerMethod)) {_			throw new IllegalStateException("Ambiguous mapping found. Cannot map '" + handlerMethod.getBean()_					+ "' bean method \n" + handlerMethod + "\nto " + mapping + ": There is already '"_					+ oldHandlerMethod.getBean() + "' bean method\n" + oldHandlerMethod + " mapped.")__		}_		_		handlerMethods.put(mapping, handlerMethod)__		if (logger.isInfoEnabled()) {_			logger.info("Mapped \"" + mapping + "\" onto " + handlerMethod)__		}_		_		Set<String> patterns = getMappingPathPatterns(mapping)__		for (String pattern : patterns) {_			if (!getPathMatcher().isPattern(pattern)) {_				urlMap.add(pattern, mapping)__			}_		}_	};register,a,handler,method,and,its,unique,mapping,param,handler,the,bean,name,of,the,handler,or,the,handler,instance,param,method,the,method,to,register,param,mapping,the,mapping,conditions,associated,with,the,handler,method,throws,illegal,state,exception,if,another,method,was,already,registered,under,the,same,mapping;protected,void,register,handler,method,object,handler,method,method,t,mapping,handler,method,handler,method,if,handler,instanceof,string,string,bean,name,string,handler,handler,method,new,handler,method,bean,name,get,application,context,method,else,handler,method,new,handler,method,handler,method,handler,method,old,handler,method,handler,methods,get,mapping,if,old,handler,method,null,old,handler,method,equals,handler,method,throw,new,illegal,state,exception,ambiguous,mapping,found,cannot,map,handler,method,get,bean,bean,method,n,handler,method,nto,mapping,there,is,already,old,handler,method,get,bean,bean,method,n,old,handler,method,mapped,handler,methods,put,mapping,handler,method,if,logger,is,info,enabled,logger,info,mapped,mapping,onto,handler,method,set,string,patterns,get,mapping,path,patterns,mapping,for,string,pattern,patterns,if,get,path,matcher,is,pattern,pattern,url,map,add,pattern,mapping
AbstractHandlerMethodMapping -> protected void registerHandlerMethod(Object handler, Method method, T mapping);1328022204;Register a handler method and its unique mapping.__@param handler the bean name of the handler or the handler instance_@param method the method to register_@param mapping the mapping conditions associated with the handler method_@throws IllegalStateException if another method was already registered_under the same mapping;protected void registerHandlerMethod(Object handler, Method method, T mapping) {_		HandlerMethod handlerMethod__		if (handler instanceof String) {_			String beanName = (String) handler__			handlerMethod = new HandlerMethod(beanName, getApplicationContext(), method)__		}_		else {_			handlerMethod = new HandlerMethod(handler, method)__		}_		_		HandlerMethod oldHandlerMethod = handlerMethods.get(mapping)__		if (oldHandlerMethod != null && !oldHandlerMethod.equals(handlerMethod)) {_			throw new IllegalStateException("Ambiguous mapping found. Cannot map '" + handlerMethod.getBean()_					+ "' bean method \n" + handlerMethod + "\nto " + mapping + ": There is already '"_					+ oldHandlerMethod.getBean() + "' bean method\n" + oldHandlerMethod + " mapped.")__		}_		_		handlerMethods.put(mapping, handlerMethod)__		if (logger.isInfoEnabled()) {_			logger.info("Mapped \"" + mapping + "\" onto " + handlerMethod)__		}_		_		Set<String> patterns = getMappingPathPatterns(mapping)__		for (String pattern : patterns) {_			if (!getPathMatcher().isPattern(pattern)) {_				urlMap.add(pattern, mapping)__			}_		}_	};register,a,handler,method,and,its,unique,mapping,param,handler,the,bean,name,of,the,handler,or,the,handler,instance,param,method,the,method,to,register,param,mapping,the,mapping,conditions,associated,with,the,handler,method,throws,illegal,state,exception,if,another,method,was,already,registered,under,the,same,mapping;protected,void,register,handler,method,object,handler,method,method,t,mapping,handler,method,handler,method,if,handler,instanceof,string,string,bean,name,string,handler,handler,method,new,handler,method,bean,name,get,application,context,method,else,handler,method,new,handler,method,handler,method,handler,method,old,handler,method,handler,methods,get,mapping,if,old,handler,method,null,old,handler,method,equals,handler,method,throw,new,illegal,state,exception,ambiguous,mapping,found,cannot,map,handler,method,get,bean,bean,method,n,handler,method,nto,mapping,there,is,already,old,handler,method,get,bean,bean,method,n,old,handler,method,mapped,handler,methods,put,mapping,handler,method,if,logger,is,info,enabled,logger,info,mapped,mapping,onto,handler,method,set,string,patterns,get,mapping,path,patterns,mapping,for,string,pattern,patterns,if,get,path,matcher,is,pattern,pattern,url,map,add,pattern,mapping
AbstractHandlerMethodMapping -> protected void registerHandlerMethod(Object handler, Method method, T mapping);1336682556;Register a handler method and its unique mapping.__@param handler the bean name of the handler or the handler instance_@param method the method to register_@param mapping the mapping conditions associated with the handler method_@throws IllegalStateException if another method was already registered_under the same mapping;protected void registerHandlerMethod(Object handler, Method method, T mapping) {_		HandlerMethod handlerMethod__		if (handler instanceof String) {_			String beanName = (String) handler__			handlerMethod = new HandlerMethod(beanName, getApplicationContext(), method)__		}_		else {_			handlerMethod = new HandlerMethod(handler, method)__		}__		HandlerMethod oldHandlerMethod = handlerMethods.get(mapping)__		if (oldHandlerMethod != null && !oldHandlerMethod.equals(handlerMethod)) {_			throw new IllegalStateException("Ambiguous mapping found. Cannot map '" + handlerMethod.getBean()_					+ "' bean method \n" + handlerMethod + "\nto " + mapping + ": There is already '"_					+ oldHandlerMethod.getBean() + "' bean method\n" + oldHandlerMethod + " mapped.")__		}__		handlerMethods.put(mapping, handlerMethod)__		if (logger.isInfoEnabled()) {_			logger.info("Mapped \"" + mapping + "\" onto " + handlerMethod)__		}__		Set<String> patterns = getMappingPathPatterns(mapping)__		for (String pattern : patterns) {_			if (!getPathMatcher().isPattern(pattern)) {_				urlMap.add(pattern, mapping)__			}_		}_	};register,a,handler,method,and,its,unique,mapping,param,handler,the,bean,name,of,the,handler,or,the,handler,instance,param,method,the,method,to,register,param,mapping,the,mapping,conditions,associated,with,the,handler,method,throws,illegal,state,exception,if,another,method,was,already,registered,under,the,same,mapping;protected,void,register,handler,method,object,handler,method,method,t,mapping,handler,method,handler,method,if,handler,instanceof,string,string,bean,name,string,handler,handler,method,new,handler,method,bean,name,get,application,context,method,else,handler,method,new,handler,method,handler,method,handler,method,old,handler,method,handler,methods,get,mapping,if,old,handler,method,null,old,handler,method,equals,handler,method,throw,new,illegal,state,exception,ambiguous,mapping,found,cannot,map,handler,method,get,bean,bean,method,n,handler,method,nto,mapping,there,is,already,old,handler,method,get,bean,bean,method,n,old,handler,method,mapped,handler,methods,put,mapping,handler,method,if,logger,is,info,enabled,logger,info,mapped,mapping,onto,handler,method,set,string,patterns,get,mapping,path,patterns,mapping,for,string,pattern,patterns,if,get,path,matcher,is,pattern,pattern,url,map,add,pattern,mapping
AbstractHandlerMethodMapping -> protected void registerHandlerMethod(Object handler, Method method, T mapping);1341441111;Register a handler method and its unique mapping._@param handler the bean name of the handler or the handler instance_@param method the method to register_@param mapping the mapping conditions associated with the handler method_@throws IllegalStateException if another method was already registered_under the same mapping;protected void registerHandlerMethod(Object handler, Method method, T mapping) {_		HandlerMethod handlerMethod__		if (handler instanceof String) {_			String beanName = (String) handler__			handlerMethod = new HandlerMethod(beanName, getApplicationContext(), method)__		}_		else {_			handlerMethod = new HandlerMethod(handler, method)__		}__		HandlerMethod oldHandlerMethod = handlerMethods.get(mapping)__		if (oldHandlerMethod != null && !oldHandlerMethod.equals(handlerMethod)) {_			throw new IllegalStateException("Ambiguous mapping found. Cannot map '" + handlerMethod.getBean()_					+ "' bean method \n" + handlerMethod + "\nto " + mapping + ": There is already '"_					+ oldHandlerMethod.getBean() + "' bean method\n" + oldHandlerMethod + " mapped.")__		}__		this.handlerMethods.put(mapping, handlerMethod)__		if (logger.isInfoEnabled()) {_			logger.info("Mapped \"" + mapping + "\" onto " + handlerMethod)__		}__		Set<String> patterns = getMappingPathPatterns(mapping)__		for (String pattern : patterns) {_			if (!getPathMatcher().isPattern(pattern)) {_				this.urlMap.add(pattern, mapping)__			}_		}_	};register,a,handler,method,and,its,unique,mapping,param,handler,the,bean,name,of,the,handler,or,the,handler,instance,param,method,the,method,to,register,param,mapping,the,mapping,conditions,associated,with,the,handler,method,throws,illegal,state,exception,if,another,method,was,already,registered,under,the,same,mapping;protected,void,register,handler,method,object,handler,method,method,t,mapping,handler,method,handler,method,if,handler,instanceof,string,string,bean,name,string,handler,handler,method,new,handler,method,bean,name,get,application,context,method,else,handler,method,new,handler,method,handler,method,handler,method,old,handler,method,handler,methods,get,mapping,if,old,handler,method,null,old,handler,method,equals,handler,method,throw,new,illegal,state,exception,ambiguous,mapping,found,cannot,map,handler,method,get,bean,bean,method,n,handler,method,nto,mapping,there,is,already,old,handler,method,get,bean,bean,method,n,old,handler,method,mapped,this,handler,methods,put,mapping,handler,method,if,logger,is,info,enabled,logger,info,mapped,mapping,onto,handler,method,set,string,patterns,get,mapping,path,patterns,mapping,for,string,pattern,patterns,if,get,path,matcher,is,pattern,pattern,this,url,map,add,pattern,mapping
AbstractHandlerMethodMapping -> protected void registerHandlerMethod(Object handler, Method method, T mapping);1356735495;Register a handler method and its unique mapping._@param handler the bean name of the handler or the handler instance_@param method the method to register_@param mapping the mapping conditions associated with the handler method_@throws IllegalStateException if another method was already registered_under the same mapping;protected void registerHandlerMethod(Object handler, Method method, T mapping) {_		HandlerMethod handlerMethod__		if (handler instanceof String) {_			String beanName = (String) handler__			handlerMethod = new HandlerMethod(beanName, getApplicationContext(), method)__		}_		else {_			handlerMethod = new HandlerMethod(handler, method)__		}__		HandlerMethod oldHandlerMethod = handlerMethods.get(mapping)__		if (oldHandlerMethod != null && !oldHandlerMethod.equals(handlerMethod)) {_			throw new IllegalStateException("Ambiguous mapping found. Cannot map '" + handlerMethod.getBean()_					+ "' bean method \n" + handlerMethod + "\nto " + mapping + ": There is already '"_					+ oldHandlerMethod.getBean() + "' bean method\n" + oldHandlerMethod + " mapped.")__		}__		this.handlerMethods.put(mapping, handlerMethod)__		if (logger.isInfoEnabled()) {_			logger.info("Mapped \"" + mapping + "\" onto " + handlerMethod)__		}__		Set<String> patterns = getMappingPathPatterns(mapping)__		for (String pattern : patterns) {_			if (!getPathMatcher().isPattern(pattern)) {_				this.urlMap.add(pattern, mapping)__			}_		}_	};register,a,handler,method,and,its,unique,mapping,param,handler,the,bean,name,of,the,handler,or,the,handler,instance,param,method,the,method,to,register,param,mapping,the,mapping,conditions,associated,with,the,handler,method,throws,illegal,state,exception,if,another,method,was,already,registered,under,the,same,mapping;protected,void,register,handler,method,object,handler,method,method,t,mapping,handler,method,handler,method,if,handler,instanceof,string,string,bean,name,string,handler,handler,method,new,handler,method,bean,name,get,application,context,method,else,handler,method,new,handler,method,handler,method,handler,method,old,handler,method,handler,methods,get,mapping,if,old,handler,method,null,old,handler,method,equals,handler,method,throw,new,illegal,state,exception,ambiguous,mapping,found,cannot,map,handler,method,get,bean,bean,method,n,handler,method,nto,mapping,there,is,already,old,handler,method,get,bean,bean,method,n,old,handler,method,mapped,this,handler,methods,put,mapping,handler,method,if,logger,is,info,enabled,logger,info,mapped,mapping,onto,handler,method,set,string,patterns,get,mapping,path,patterns,mapping,for,string,pattern,patterns,if,get,path,matcher,is,pattern,pattern,this,url,map,add,pattern,mapping
AbstractHandlerMethodMapping -> protected void registerHandlerMethod(Object handler, Method method, T mapping);1357119239;Register a handler method and its unique mapping._@param handler the bean name of the handler or the handler instance_@param method the method to register_@param mapping the mapping conditions associated with the handler method_@throws IllegalStateException if another method was already registered_under the same mapping;protected void registerHandlerMethod(Object handler, Method method, T mapping) {_		HandlerMethod handlerMethod__		if (handler instanceof String) {_			String beanName = (String) handler__			handlerMethod = new HandlerMethod(beanName, getApplicationContext(), method)__		}_		else {_			handlerMethod = new HandlerMethod(handler, method)__		}__		HandlerMethod oldHandlerMethod = handlerMethods.get(mapping)__		if (oldHandlerMethod != null && !oldHandlerMethod.equals(handlerMethod)) {_			throw new IllegalStateException("Ambiguous mapping found. Cannot map '" + handlerMethod.getBean()_					+ "' bean method \n" + handlerMethod + "\nto " + mapping + ": There is already '"_					+ oldHandlerMethod.getBean() + "' bean method\n" + oldHandlerMethod + " mapped.")__		}__		this.handlerMethods.put(mapping, handlerMethod)__		if (logger.isInfoEnabled()) {_			logger.info("Mapped \"" + mapping + "\" onto " + handlerMethod)__		}__		Set<String> patterns = getMappingPathPatterns(mapping)__		for (String pattern : patterns) {_			if (!getPathMatcher().isPattern(pattern)) {_				this.urlMap.add(pattern, mapping)__			}_		}_	};register,a,handler,method,and,its,unique,mapping,param,handler,the,bean,name,of,the,handler,or,the,handler,instance,param,method,the,method,to,register,param,mapping,the,mapping,conditions,associated,with,the,handler,method,throws,illegal,state,exception,if,another,method,was,already,registered,under,the,same,mapping;protected,void,register,handler,method,object,handler,method,method,t,mapping,handler,method,handler,method,if,handler,instanceof,string,string,bean,name,string,handler,handler,method,new,handler,method,bean,name,get,application,context,method,else,handler,method,new,handler,method,handler,method,handler,method,old,handler,method,handler,methods,get,mapping,if,old,handler,method,null,old,handler,method,equals,handler,method,throw,new,illegal,state,exception,ambiguous,mapping,found,cannot,map,handler,method,get,bean,bean,method,n,handler,method,nto,mapping,there,is,already,old,handler,method,get,bean,bean,method,n,old,handler,method,mapped,this,handler,methods,put,mapping,handler,method,if,logger,is,info,enabled,logger,info,mapped,mapping,onto,handler,method,set,string,patterns,get,mapping,path,patterns,mapping,for,string,pattern,patterns,if,get,path,matcher,is,pattern,pattern,this,url,map,add,pattern,mapping
AbstractHandlerMethodMapping -> protected void registerHandlerMethod(Object handler, Method method, T mapping);1362408075;Register a handler method and its unique mapping._@param handler the bean name of the handler or the handler instance_@param method the method to register_@param mapping the mapping conditions associated with the handler method_@throws IllegalStateException if another method was already registered_under the same mapping;protected void registerHandlerMethod(Object handler, Method method, T mapping) {_		HandlerMethod newHandlerMethod = createHandlerMethod(handler, method)__		HandlerMethod oldHandlerMethod = handlerMethods.get(mapping)__		if (oldHandlerMethod != null && !oldHandlerMethod.equals(newHandlerMethod)) {_			throw new IllegalStateException("Ambiguous mapping found. Cannot map '" + newHandlerMethod.getBean()_					+ "' bean method \n" + newHandlerMethod + "\nto " + mapping + ": There is already '"_					+ oldHandlerMethod.getBean() + "' bean method\n" + oldHandlerMethod + " mapped.")__		}__		this.handlerMethods.put(mapping, newHandlerMethod)__		if (logger.isInfoEnabled()) {_			logger.info("Mapped \"" + mapping + "\" onto " + newHandlerMethod)__		}__		Set<String> patterns = getMappingPathPatterns(mapping)__		for (String pattern : patterns) {_			if (!getPathMatcher().isPattern(pattern)) {_				this.urlMap.add(pattern, mapping)__			}_		}_	};register,a,handler,method,and,its,unique,mapping,param,handler,the,bean,name,of,the,handler,or,the,handler,instance,param,method,the,method,to,register,param,mapping,the,mapping,conditions,associated,with,the,handler,method,throws,illegal,state,exception,if,another,method,was,already,registered,under,the,same,mapping;protected,void,register,handler,method,object,handler,method,method,t,mapping,handler,method,new,handler,method,create,handler,method,handler,method,handler,method,old,handler,method,handler,methods,get,mapping,if,old,handler,method,null,old,handler,method,equals,new,handler,method,throw,new,illegal,state,exception,ambiguous,mapping,found,cannot,map,new,handler,method,get,bean,bean,method,n,new,handler,method,nto,mapping,there,is,already,old,handler,method,get,bean,bean,method,n,old,handler,method,mapped,this,handler,methods,put,mapping,new,handler,method,if,logger,is,info,enabled,logger,info,mapped,mapping,onto,new,handler,method,set,string,patterns,get,mapping,path,patterns,mapping,for,string,pattern,patterns,if,get,path,matcher,is,pattern,pattern,this,url,map,add,pattern,mapping
AbstractHandlerMethodMapping -> protected void registerHandlerMethod(Object handler, Method method, T mapping);1368482696;Register a handler method and its unique mapping._@param handler the bean name of the handler or the handler instance_@param method the method to register_@param mapping the mapping conditions associated with the handler method_@throws IllegalStateException if another method was already registered_under the same mapping;protected void registerHandlerMethod(Object handler, Method method, T mapping) {_		HandlerMethod newHandlerMethod = createHandlerMethod(handler, method)__		HandlerMethod oldHandlerMethod = handlerMethods.get(mapping)__		if (oldHandlerMethod != null && !oldHandlerMethod.equals(newHandlerMethod)) {_			throw new IllegalStateException("Ambiguous mapping found. Cannot map '" + newHandlerMethod.getBean()_					+ "' bean method \n" + newHandlerMethod + "\nto " + mapping + ": There is already '"_					+ oldHandlerMethod.getBean() + "' bean method\n" + oldHandlerMethod + " mapped.")__		}__		this.handlerMethods.put(mapping, newHandlerMethod)__		if (logger.isInfoEnabled()) {_			logger.info("Mapped \"" + mapping + "\" onto " + newHandlerMethod)__		}__		Set<String> patterns = getMappingPathPatterns(mapping)__		for (String pattern : patterns) {_			if (!getPathMatcher().isPattern(pattern)) {_				this.urlMap.add(pattern, mapping)__			}_		}_	};register,a,handler,method,and,its,unique,mapping,param,handler,the,bean,name,of,the,handler,or,the,handler,instance,param,method,the,method,to,register,param,mapping,the,mapping,conditions,associated,with,the,handler,method,throws,illegal,state,exception,if,another,method,was,already,registered,under,the,same,mapping;protected,void,register,handler,method,object,handler,method,method,t,mapping,handler,method,new,handler,method,create,handler,method,handler,method,handler,method,old,handler,method,handler,methods,get,mapping,if,old,handler,method,null,old,handler,method,equals,new,handler,method,throw,new,illegal,state,exception,ambiguous,mapping,found,cannot,map,new,handler,method,get,bean,bean,method,n,new,handler,method,nto,mapping,there,is,already,old,handler,method,get,bean,bean,method,n,old,handler,method,mapped,this,handler,methods,put,mapping,new,handler,method,if,logger,is,info,enabled,logger,info,mapped,mapping,onto,new,handler,method,set,string,patterns,get,mapping,path,patterns,mapping,for,string,pattern,patterns,if,get,path,matcher,is,pattern,pattern,this,url,map,add,pattern,mapping
AbstractHandlerMethodMapping -> protected void registerHandlerMethod(Object handler, Method method, T mapping);1368581529;Register a handler method and its unique mapping._@param handler the bean name of the handler or the handler instance_@param method the method to register_@param mapping the mapping conditions associated with the handler method_@throws IllegalStateException if another method was already registered_under the same mapping;protected void registerHandlerMethod(Object handler, Method method, T mapping) {_		HandlerMethod newHandlerMethod = createHandlerMethod(handler, method)__		HandlerMethod oldHandlerMethod = handlerMethods.get(mapping)__		if (oldHandlerMethod != null && !oldHandlerMethod.equals(newHandlerMethod)) {_			throw new IllegalStateException("Ambiguous mapping found. Cannot map '" + newHandlerMethod.getBean()_					+ "' bean method \n" + newHandlerMethod + "\nto " + mapping + ": There is already '"_					+ oldHandlerMethod.getBean() + "' bean method\n" + oldHandlerMethod + " mapped.")__		}__		this.handlerMethods.put(mapping, newHandlerMethod)__		if (logger.isInfoEnabled()) {_			logger.info("Mapped \"" + mapping + "\" onto " + newHandlerMethod)__		}__		Set<String> patterns = getMappingPathPatterns(mapping)__		for (String pattern : patterns) {_			if (!getPathMatcher().isPattern(pattern)) {_				this.urlMap.add(pattern, mapping)__			}_		}_	};register,a,handler,method,and,its,unique,mapping,param,handler,the,bean,name,of,the,handler,or,the,handler,instance,param,method,the,method,to,register,param,mapping,the,mapping,conditions,associated,with,the,handler,method,throws,illegal,state,exception,if,another,method,was,already,registered,under,the,same,mapping;protected,void,register,handler,method,object,handler,method,method,t,mapping,handler,method,new,handler,method,create,handler,method,handler,method,handler,method,old,handler,method,handler,methods,get,mapping,if,old,handler,method,null,old,handler,method,equals,new,handler,method,throw,new,illegal,state,exception,ambiguous,mapping,found,cannot,map,new,handler,method,get,bean,bean,method,n,new,handler,method,nto,mapping,there,is,already,old,handler,method,get,bean,bean,method,n,old,handler,method,mapped,this,handler,methods,put,mapping,new,handler,method,if,logger,is,info,enabled,logger,info,mapped,mapping,onto,new,handler,method,set,string,patterns,get,mapping,path,patterns,mapping,for,string,pattern,patterns,if,get,path,matcher,is,pattern,pattern,this,url,map,add,pattern,mapping
AbstractHandlerMethodMapping -> protected void registerHandlerMethod(Object handler, Method method, T mapping);1382665849;Register a handler method and its unique mapping._@param handler the bean name of the handler or the handler instance_@param method the method to register_@param mapping the mapping conditions associated with the handler method_@throws IllegalStateException if another method was already registered_under the same mapping;protected void registerHandlerMethod(Object handler, Method method, T mapping) {_		HandlerMethod newHandlerMethod = createHandlerMethod(handler, method)__		HandlerMethod oldHandlerMethod = handlerMethods.get(mapping)__		if (oldHandlerMethod != null && !oldHandlerMethod.equals(newHandlerMethod)) {_			throw new IllegalStateException("Ambiguous mapping found. Cannot map '" + newHandlerMethod.getBean()_					+ "' bean method \n" + newHandlerMethod + "\nto " + mapping + ": There is already '"_					+ oldHandlerMethod.getBean() + "' bean method\n" + oldHandlerMethod + " mapped.")__		}__		this.handlerMethods.put(mapping, newHandlerMethod)__		if (logger.isInfoEnabled()) {_			logger.info("Mapped \"" + mapping + "\" onto " + newHandlerMethod)__		}__		Set<String> patterns = getMappingPathPatterns(mapping)__		for (String pattern : patterns) {_			if (!getPathMatcher().isPattern(pattern)) {_				this.urlMap.add(pattern, mapping)__			}_		}_	};register,a,handler,method,and,its,unique,mapping,param,handler,the,bean,name,of,the,handler,or,the,handler,instance,param,method,the,method,to,register,param,mapping,the,mapping,conditions,associated,with,the,handler,method,throws,illegal,state,exception,if,another,method,was,already,registered,under,the,same,mapping;protected,void,register,handler,method,object,handler,method,method,t,mapping,handler,method,new,handler,method,create,handler,method,handler,method,handler,method,old,handler,method,handler,methods,get,mapping,if,old,handler,method,null,old,handler,method,equals,new,handler,method,throw,new,illegal,state,exception,ambiguous,mapping,found,cannot,map,new,handler,method,get,bean,bean,method,n,new,handler,method,nto,mapping,there,is,already,old,handler,method,get,bean,bean,method,n,old,handler,method,mapped,this,handler,methods,put,mapping,new,handler,method,if,logger,is,info,enabled,logger,info,mapped,mapping,onto,new,handler,method,set,string,patterns,get,mapping,path,patterns,mapping,for,string,pattern,patterns,if,get,path,matcher,is,pattern,pattern,this,url,map,add,pattern,mapping
AbstractHandlerMethodMapping -> protected void registerHandlerMethod(Object handler, Method method, T mapping);1392160296;Register a handler method and its unique mapping._@param handler the bean name of the handler or the handler instance_@param method the method to register_@param mapping the mapping conditions associated with the handler method_@throws IllegalStateException if another method was already registered_under the same mapping;protected void registerHandlerMethod(Object handler, Method method, T mapping) {_		HandlerMethod newHandlerMethod = createHandlerMethod(handler, method)__		HandlerMethod oldHandlerMethod = this.handlerMethods.get(mapping)__		if (oldHandlerMethod != null && !oldHandlerMethod.equals(newHandlerMethod)) {_			throw new IllegalStateException("Ambiguous mapping found. Cannot map '" + newHandlerMethod.getBean() +_					"' bean method \n" + newHandlerMethod + "\nto " + mapping + ": There is already '" +_					oldHandlerMethod.getBean() + "' bean method\n" + oldHandlerMethod + " mapped.")__		}__		this.handlerMethods.put(mapping, newHandlerMethod)__		if (logger.isInfoEnabled()) {_			logger.info("Mapped \"" + mapping + "\" onto " + newHandlerMethod)__		}__		Set<String> patterns = getMappingPathPatterns(mapping)__		for (String pattern : patterns) {_			if (!getPathMatcher().isPattern(pattern)) {_				this.urlMap.add(pattern, mapping)__			}_		}_	};register,a,handler,method,and,its,unique,mapping,param,handler,the,bean,name,of,the,handler,or,the,handler,instance,param,method,the,method,to,register,param,mapping,the,mapping,conditions,associated,with,the,handler,method,throws,illegal,state,exception,if,another,method,was,already,registered,under,the,same,mapping;protected,void,register,handler,method,object,handler,method,method,t,mapping,handler,method,new,handler,method,create,handler,method,handler,method,handler,method,old,handler,method,this,handler,methods,get,mapping,if,old,handler,method,null,old,handler,method,equals,new,handler,method,throw,new,illegal,state,exception,ambiguous,mapping,found,cannot,map,new,handler,method,get,bean,bean,method,n,new,handler,method,nto,mapping,there,is,already,old,handler,method,get,bean,bean,method,n,old,handler,method,mapped,this,handler,methods,put,mapping,new,handler,method,if,logger,is,info,enabled,logger,info,mapped,mapping,onto,new,handler,method,set,string,patterns,get,mapping,path,patterns,mapping,for,string,pattern,patterns,if,get,path,matcher,is,pattern,pattern,this,url,map,add,pattern,mapping
AbstractHandlerMethodMapping -> protected void registerHandlerMethod(Object handler, Method method, T mapping);1392337816;Register a handler method and its unique mapping._@param handler the bean name of the handler or the handler instance_@param method the method to register_@param mapping the mapping conditions associated with the handler method_@throws IllegalStateException if another method was already registered_under the same mapping;protected void registerHandlerMethod(Object handler, Method method, T mapping) {_		HandlerMethod newHandlerMethod = createHandlerMethod(handler, method)__		HandlerMethod oldHandlerMethod = this.handlerMethods.get(mapping)__		if (oldHandlerMethod != null && !oldHandlerMethod.equals(newHandlerMethod)) {_			throw new IllegalStateException("Ambiguous mapping found. Cannot map '" + newHandlerMethod.getBean() +_					"' bean method \n" + newHandlerMethod + "\nto " + mapping + ": There is already '" +_					oldHandlerMethod.getBean() + "' bean method\n" + oldHandlerMethod + " mapped.")__		}__		this.handlerMethods.put(mapping, newHandlerMethod)__		if (logger.isInfoEnabled()) {_			logger.info("Mapped \"" + mapping + "\" onto " + newHandlerMethod)__		}__		Set<String> patterns = getMappingPathPatterns(mapping)__		for (String pattern : patterns) {_			if (!getPathMatcher().isPattern(pattern)) {_				this.urlMap.add(pattern, mapping)__			}_		}_	};register,a,handler,method,and,its,unique,mapping,param,handler,the,bean,name,of,the,handler,or,the,handler,instance,param,method,the,method,to,register,param,mapping,the,mapping,conditions,associated,with,the,handler,method,throws,illegal,state,exception,if,another,method,was,already,registered,under,the,same,mapping;protected,void,register,handler,method,object,handler,method,method,t,mapping,handler,method,new,handler,method,create,handler,method,handler,method,handler,method,old,handler,method,this,handler,methods,get,mapping,if,old,handler,method,null,old,handler,method,equals,new,handler,method,throw,new,illegal,state,exception,ambiguous,mapping,found,cannot,map,new,handler,method,get,bean,bean,method,n,new,handler,method,nto,mapping,there,is,already,old,handler,method,get,bean,bean,method,n,old,handler,method,mapped,this,handler,methods,put,mapping,new,handler,method,if,logger,is,info,enabled,logger,info,mapped,mapping,onto,new,handler,method,set,string,patterns,get,mapping,path,patterns,mapping,for,string,pattern,patterns,if,get,path,matcher,is,pattern,pattern,this,url,map,add,pattern,mapping
AbstractHandlerMethodMapping -> protected void registerHandlerMethod(Object handler, Method method, T mapping);1392407320;Register a handler method and its unique mapping._@param handler the bean name of the handler or the handler instance_@param method the method to register_@param mapping the mapping conditions associated with the handler method_@throws IllegalStateException if another method was already registered_under the same mapping;protected void registerHandlerMethod(Object handler, Method method, T mapping) {_		HandlerMethod newHandlerMethod = createHandlerMethod(handler, method)__		HandlerMethod oldHandlerMethod = this.handlerMethods.get(mapping)__		if (oldHandlerMethod != null && !oldHandlerMethod.equals(newHandlerMethod)) {_			throw new IllegalStateException("Ambiguous mapping found. Cannot map '" + newHandlerMethod.getBean() +_					"' bean method \n" + newHandlerMethod + "\nto " + mapping + ": There is already '" +_					oldHandlerMethod.getBean() + "' bean method\n" + oldHandlerMethod + " mapped.")__		}__		this.handlerMethods.put(mapping, newHandlerMethod)__		if (logger.isInfoEnabled()) {_			logger.info("Mapped \"" + mapping + "\" onto " + newHandlerMethod)__		}__		Set<String> patterns = getMappingPathPatterns(mapping)__		for (String pattern : patterns) {_			if (!getPathMatcher().isPattern(pattern)) {_				this.urlMap.add(pattern, mapping)__			}_		}_	};register,a,handler,method,and,its,unique,mapping,param,handler,the,bean,name,of,the,handler,or,the,handler,instance,param,method,the,method,to,register,param,mapping,the,mapping,conditions,associated,with,the,handler,method,throws,illegal,state,exception,if,another,method,was,already,registered,under,the,same,mapping;protected,void,register,handler,method,object,handler,method,method,t,mapping,handler,method,new,handler,method,create,handler,method,handler,method,handler,method,old,handler,method,this,handler,methods,get,mapping,if,old,handler,method,null,old,handler,method,equals,new,handler,method,throw,new,illegal,state,exception,ambiguous,mapping,found,cannot,map,new,handler,method,get,bean,bean,method,n,new,handler,method,nto,mapping,there,is,already,old,handler,method,get,bean,bean,method,n,old,handler,method,mapped,this,handler,methods,put,mapping,new,handler,method,if,logger,is,info,enabled,logger,info,mapped,mapping,onto,new,handler,method,set,string,patterns,get,mapping,path,patterns,mapping,for,string,pattern,patterns,if,get,path,matcher,is,pattern,pattern,this,url,map,add,pattern,mapping
AbstractHandlerMethodMapping -> protected void registerHandlerMethod(Object handler, Method method, T mapping);1395655323;Register a handler method and its unique mapping._@param handler the bean name of the handler or the handler instance_@param method the method to register_@param mapping the mapping conditions associated with the handler method_@throws IllegalStateException if another method was already registered_under the same mapping;protected void registerHandlerMethod(Object handler, Method method, T mapping) {_		HandlerMethod newHandlerMethod = createHandlerMethod(handler, method)__		HandlerMethod oldHandlerMethod = this.handlerMethods.get(mapping)__		if (oldHandlerMethod != null && !oldHandlerMethod.equals(newHandlerMethod)) {_			throw new IllegalStateException("Ambiguous mapping found. Cannot map '" + newHandlerMethod.getBean() +_					"' bean method \n" + newHandlerMethod + "\nto " + mapping + ": There is already '" +_					oldHandlerMethod.getBean() + "' bean method\n" + oldHandlerMethod + " mapped.")__		}__		this.handlerMethods.put(mapping, newHandlerMethod)__		if (logger.isInfoEnabled()) {_			logger.info("Mapped \"" + mapping + "\" onto " + newHandlerMethod)__		}__		Set<String> patterns = getMappingPathPatterns(mapping)__		for (String pattern : patterns) {_			if (!getPathMatcher().isPattern(pattern)) {_				this.urlMap.add(pattern, mapping)__			}_		}_	};register,a,handler,method,and,its,unique,mapping,param,handler,the,bean,name,of,the,handler,or,the,handler,instance,param,method,the,method,to,register,param,mapping,the,mapping,conditions,associated,with,the,handler,method,throws,illegal,state,exception,if,another,method,was,already,registered,under,the,same,mapping;protected,void,register,handler,method,object,handler,method,method,t,mapping,handler,method,new,handler,method,create,handler,method,handler,method,handler,method,old,handler,method,this,handler,methods,get,mapping,if,old,handler,method,null,old,handler,method,equals,new,handler,method,throw,new,illegal,state,exception,ambiguous,mapping,found,cannot,map,new,handler,method,get,bean,bean,method,n,new,handler,method,nto,mapping,there,is,already,old,handler,method,get,bean,bean,method,n,old,handler,method,mapped,this,handler,methods,put,mapping,new,handler,method,if,logger,is,info,enabled,logger,info,mapped,mapping,onto,new,handler,method,set,string,patterns,get,mapping,path,patterns,mapping,for,string,pattern,patterns,if,get,path,matcher,is,pattern,pattern,this,url,map,add,pattern,mapping
AbstractHandlerMethodMapping -> protected void registerHandlerMethod(Object handler, Method method, T mapping);1399404473;Register a handler method and its unique mapping._@param handler the bean name of the handler or the handler instance_@param method the method to register_@param mapping the mapping conditions associated with the handler method_@throws IllegalStateException if another method was already registered_under the same mapping;protected void registerHandlerMethod(Object handler, Method method, T mapping) {_		HandlerMethod newHandlerMethod = createHandlerMethod(handler, method)__		HandlerMethod oldHandlerMethod = this.handlerMethods.get(mapping)__		if (oldHandlerMethod != null && !oldHandlerMethod.equals(newHandlerMethod)) {_			throw new IllegalStateException("Ambiguous mapping found. Cannot map '" + newHandlerMethod.getBean() +_					"' bean method \n" + newHandlerMethod + "\nto " + mapping + ": There is already '" +_					oldHandlerMethod.getBean() + "' bean method\n" + oldHandlerMethod + " mapped.")__		}__		this.handlerMethods.put(mapping, newHandlerMethod)__		if (logger.isInfoEnabled()) {_			logger.info("Mapped \"" + mapping + "\" onto " + newHandlerMethod)__		}__		Set<String> patterns = getMappingPathPatterns(mapping)__		for (String pattern : patterns) {_			if (!getPathMatcher().isPattern(pattern)) {_				this.urlMap.add(pattern, mapping)__			}_		}__		if (this.namingStrategy != null) {_			String name = this.namingStrategy.getName(newHandlerMethod, mapping)__			updateNameMap(name, newHandlerMethod)__		}_	};register,a,handler,method,and,its,unique,mapping,param,handler,the,bean,name,of,the,handler,or,the,handler,instance,param,method,the,method,to,register,param,mapping,the,mapping,conditions,associated,with,the,handler,method,throws,illegal,state,exception,if,another,method,was,already,registered,under,the,same,mapping;protected,void,register,handler,method,object,handler,method,method,t,mapping,handler,method,new,handler,method,create,handler,method,handler,method,handler,method,old,handler,method,this,handler,methods,get,mapping,if,old,handler,method,null,old,handler,method,equals,new,handler,method,throw,new,illegal,state,exception,ambiguous,mapping,found,cannot,map,new,handler,method,get,bean,bean,method,n,new,handler,method,nto,mapping,there,is,already,old,handler,method,get,bean,bean,method,n,old,handler,method,mapped,this,handler,methods,put,mapping,new,handler,method,if,logger,is,info,enabled,logger,info,mapped,mapping,onto,new,handler,method,set,string,patterns,get,mapping,path,patterns,mapping,for,string,pattern,patterns,if,get,path,matcher,is,pattern,pattern,this,url,map,add,pattern,mapping,if,this,naming,strategy,null,string,name,this,naming,strategy,get,name,new,handler,method,mapping,update,name,map,name,new,handler,method
AbstractHandlerMethodMapping -> protected void registerHandlerMethod(Object handler, Method method, T mapping);1426869344;Register a handler method and its unique mapping._@param handler the bean name of the handler or the handler instance_@param method the method to register_@param mapping the mapping conditions associated with the handler method_@throws IllegalStateException if another method was already registered_under the same mapping;protected void registerHandlerMethod(Object handler, Method method, T mapping) {_		HandlerMethod newHandlerMethod = createHandlerMethod(handler, method)__		HandlerMethod oldHandlerMethod = this.handlerMethods.get(mapping)__		if (oldHandlerMethod != null && !oldHandlerMethod.equals(newHandlerMethod)) {_			throw new IllegalStateException("Ambiguous mapping found. Cannot map '" + newHandlerMethod.getBean() +_					"' bean method \n" + newHandlerMethod + "\nto " + mapping + ": There is already '" +_					oldHandlerMethod.getBean() + "' bean method\n" + oldHandlerMethod + " mapped.")__		}__		this.handlerMethods.put(mapping, newHandlerMethod)__		if (logger.isInfoEnabled()) {_			logger.info("Mapped \"" + mapping + "\" onto " + newHandlerMethod)__		}__		Set<String> patterns = getMappingPathPatterns(mapping)__		for (String pattern : patterns) {_			if (!getPathMatcher().isPattern(pattern)) {_				this.urlMap.add(pattern, mapping)__			}_		}__		if (this.namingStrategy != null) {_			String name = this.namingStrategy.getName(newHandlerMethod, mapping)__			updateNameMap(name, newHandlerMethod)__		}_	};register,a,handler,method,and,its,unique,mapping,param,handler,the,bean,name,of,the,handler,or,the,handler,instance,param,method,the,method,to,register,param,mapping,the,mapping,conditions,associated,with,the,handler,method,throws,illegal,state,exception,if,another,method,was,already,registered,under,the,same,mapping;protected,void,register,handler,method,object,handler,method,method,t,mapping,handler,method,new,handler,method,create,handler,method,handler,method,handler,method,old,handler,method,this,handler,methods,get,mapping,if,old,handler,method,null,old,handler,method,equals,new,handler,method,throw,new,illegal,state,exception,ambiguous,mapping,found,cannot,map,new,handler,method,get,bean,bean,method,n,new,handler,method,nto,mapping,there,is,already,old,handler,method,get,bean,bean,method,n,old,handler,method,mapped,this,handler,methods,put,mapping,new,handler,method,if,logger,is,info,enabled,logger,info,mapped,mapping,onto,new,handler,method,set,string,patterns,get,mapping,path,patterns,mapping,for,string,pattern,patterns,if,get,path,matcher,is,pattern,pattern,this,url,map,add,pattern,mapping,if,this,naming,strategy,null,string,name,this,naming,strategy,get,name,new,handler,method,mapping,update,name,map,name,new,handler,method
AbstractHandlerMethodMapping -> protected void registerHandlerMethod(Object handler, Method method, T mapping);1427240641;Register a handler method and its unique mapping._@param handler the bean name of the handler or the handler instance_@param method the method to register_@param mapping the mapping conditions associated with the handler method_@throws IllegalStateException if another method was already registered_under the same mapping;protected void registerHandlerMethod(Object handler, Method method, T mapping) {_		HandlerMethod newHandlerMethod = createHandlerMethod(handler, method)__		HandlerMethod oldHandlerMethod = this.handlerMethods.get(mapping)__		if (oldHandlerMethod != null && !oldHandlerMethod.equals(newHandlerMethod)) {_			throw new IllegalStateException("Ambiguous mapping found. Cannot map '" + newHandlerMethod.getBean() +_					"' bean method \n" + newHandlerMethod + "\nto " + mapping + ": There is already '" +_					oldHandlerMethod.getBean() + "' bean method\n" + oldHandlerMethod + " mapped.")__		}__		this.handlerMethods.put(mapping, newHandlerMethod)__		if (logger.isInfoEnabled()) {_			logger.info("Mapped \"" + mapping + "\" onto " + newHandlerMethod)__		}__		Set<String> patterns = getMappingPathPatterns(mapping)__		for (String pattern : patterns) {_			if (!getPathMatcher().isPattern(pattern)) {_				this.urlMap.add(pattern, mapping)__			}_		}__		if (this.namingStrategy != null) {_			String name = this.namingStrategy.getName(newHandlerMethod, mapping)__			updateNameMap(name, newHandlerMethod)__		}_	};register,a,handler,method,and,its,unique,mapping,param,handler,the,bean,name,of,the,handler,or,the,handler,instance,param,method,the,method,to,register,param,mapping,the,mapping,conditions,associated,with,the,handler,method,throws,illegal,state,exception,if,another,method,was,already,registered,under,the,same,mapping;protected,void,register,handler,method,object,handler,method,method,t,mapping,handler,method,new,handler,method,create,handler,method,handler,method,handler,method,old,handler,method,this,handler,methods,get,mapping,if,old,handler,method,null,old,handler,method,equals,new,handler,method,throw,new,illegal,state,exception,ambiguous,mapping,found,cannot,map,new,handler,method,get,bean,bean,method,n,new,handler,method,nto,mapping,there,is,already,old,handler,method,get,bean,bean,method,n,old,handler,method,mapped,this,handler,methods,put,mapping,new,handler,method,if,logger,is,info,enabled,logger,info,mapped,mapping,onto,new,handler,method,set,string,patterns,get,mapping,path,patterns,mapping,for,string,pattern,patterns,if,get,path,matcher,is,pattern,pattern,this,url,map,add,pattern,mapping,if,this,naming,strategy,null,string,name,this,naming,strategy,get,name,new,handler,method,mapping,update,name,map,name,new,handler,method
AbstractHandlerMethodMapping -> protected void registerHandlerMethod(Object handler, Method method, T mapping);1427983931;Register a handler method and its unique mapping._@param handler the bean name of the handler or the handler instance_@param method the method to register_@param mapping the mapping conditions associated with the handler method_@throws IllegalStateException if another method was already registered_under the same mapping;protected void registerHandlerMethod(Object handler, Method method, T mapping) {_		HandlerMethod newHandlerMethod = createHandlerMethod(handler, method)__		HandlerMethod oldHandlerMethod = this.handlerMethods.get(mapping)__		if (oldHandlerMethod != null && !oldHandlerMethod.equals(newHandlerMethod)) {_			throw new IllegalStateException("Ambiguous mapping found. Cannot map '" + newHandlerMethod.getBean() +_					"' bean method \n" + newHandlerMethod + "\nto " + mapping + ": There is already '" +_					oldHandlerMethod.getBean() + "' bean method\n" + oldHandlerMethod + " mapped.")__		}__		this.handlerMethods.put(mapping, newHandlerMethod)__		if (logger.isInfoEnabled()) {_			logger.info("Mapped \"" + mapping + "\" onto " + newHandlerMethod)__		}__		Set<String> patterns = getMappingPathPatterns(mapping)__		for (String pattern : patterns) {_			if (!getPathMatcher().isPattern(pattern)) {_				this.urlMap.add(pattern, mapping)__			}_		}__		if (this.namingStrategy != null) {_			String name = this.namingStrategy.getName(newHandlerMethod, mapping)__			updateNameMap(name, newHandlerMethod)__		}__		CorsConfiguration config  = initCorsConfiguration(handler, method, mapping)__		if (config != null) {_			this.corsConfigurations.put(method, config)__		}_	};register,a,handler,method,and,its,unique,mapping,param,handler,the,bean,name,of,the,handler,or,the,handler,instance,param,method,the,method,to,register,param,mapping,the,mapping,conditions,associated,with,the,handler,method,throws,illegal,state,exception,if,another,method,was,already,registered,under,the,same,mapping;protected,void,register,handler,method,object,handler,method,method,t,mapping,handler,method,new,handler,method,create,handler,method,handler,method,handler,method,old,handler,method,this,handler,methods,get,mapping,if,old,handler,method,null,old,handler,method,equals,new,handler,method,throw,new,illegal,state,exception,ambiguous,mapping,found,cannot,map,new,handler,method,get,bean,bean,method,n,new,handler,method,nto,mapping,there,is,already,old,handler,method,get,bean,bean,method,n,old,handler,method,mapped,this,handler,methods,put,mapping,new,handler,method,if,logger,is,info,enabled,logger,info,mapped,mapping,onto,new,handler,method,set,string,patterns,get,mapping,path,patterns,mapping,for,string,pattern,patterns,if,get,path,matcher,is,pattern,pattern,this,url,map,add,pattern,mapping,if,this,naming,strategy,null,string,name,this,naming,strategy,get,name,new,handler,method,mapping,update,name,map,name,new,handler,method,cors,configuration,config,init,cors,configuration,handler,method,mapping,if,config,null,this,cors,configurations,put,method,config
AbstractHandlerMethodMapping -> protected void registerHandlerMethod(Object handler, Method method, T mapping);1430734105;Register a handler method and its unique mapping._@param handler the bean name of the handler or the handler instance_@param method the method to register_@param mapping the mapping conditions associated with the handler method_@throws IllegalStateException if another method was already registered_under the same mapping;protected void registerHandlerMethod(Object handler, Method method, T mapping) {_		HandlerMethod newHandlerMethod = createHandlerMethod(handler, method)__		HandlerMethod oldHandlerMethod = this.handlerMethods.get(mapping)__		if (oldHandlerMethod != null && !oldHandlerMethod.equals(newHandlerMethod)) {_			throw new IllegalStateException("Ambiguous mapping found. Cannot map '" + newHandlerMethod.getBean() +_					"' bean method \n" + newHandlerMethod + "\nto " + mapping + ": There is already '" +_					oldHandlerMethod.getBean() + "' bean method\n" + oldHandlerMethod + " mapped.")__		}__		this.handlerMethods.put(mapping, newHandlerMethod)__		if (logger.isInfoEnabled()) {_			logger.info("Mapped \"" + mapping + "\" onto " + newHandlerMethod)__		}__		Set<String> patterns = getMappingPathPatterns(mapping)__		for (String pattern : patterns) {_			if (!getPathMatcher().isPattern(pattern)) {_				this.urlMap.add(pattern, mapping)__			}_		}__		if (this.namingStrategy != null) {_			String name = this.namingStrategy.getName(newHandlerMethod, mapping)__			updateNameMap(name, newHandlerMethod)__		}__		CorsConfiguration config  = initCorsConfiguration(handler, method, mapping)__		if (config != null) {_			this.corsMap.put(method, config)__		}_	};register,a,handler,method,and,its,unique,mapping,param,handler,the,bean,name,of,the,handler,or,the,handler,instance,param,method,the,method,to,register,param,mapping,the,mapping,conditions,associated,with,the,handler,method,throws,illegal,state,exception,if,another,method,was,already,registered,under,the,same,mapping;protected,void,register,handler,method,object,handler,method,method,t,mapping,handler,method,new,handler,method,create,handler,method,handler,method,handler,method,old,handler,method,this,handler,methods,get,mapping,if,old,handler,method,null,old,handler,method,equals,new,handler,method,throw,new,illegal,state,exception,ambiguous,mapping,found,cannot,map,new,handler,method,get,bean,bean,method,n,new,handler,method,nto,mapping,there,is,already,old,handler,method,get,bean,bean,method,n,old,handler,method,mapped,this,handler,methods,put,mapping,new,handler,method,if,logger,is,info,enabled,logger,info,mapped,mapping,onto,new,handler,method,set,string,patterns,get,mapping,path,patterns,mapping,for,string,pattern,patterns,if,get,path,matcher,is,pattern,pattern,this,url,map,add,pattern,mapping,if,this,naming,strategy,null,string,name,this,naming,strategy,get,name,new,handler,method,mapping,update,name,map,name,new,handler,method,cors,configuration,config,init,cors,configuration,handler,method,mapping,if,config,null,this,cors,map,put,method,config
AbstractHandlerMethodMapping -> protected void registerHandlerMethod(Object handler, Method method, T mapping);1430734105;Register a handler method and its unique mapping._@param handler the bean name of the handler or the handler instance_@param method the method to register_@param mapping the mapping conditions associated with the handler method_@throws IllegalStateException if another method was already registered_under the same mapping;protected void registerHandlerMethod(Object handler, Method method, T mapping) {_		this.mappingRegistry.register(handler, method, mapping)__	};register,a,handler,method,and,its,unique,mapping,param,handler,the,bean,name,of,the,handler,or,the,handler,instance,param,method,the,method,to,register,param,mapping,the,mapping,conditions,associated,with,the,handler,method,throws,illegal,state,exception,if,another,method,was,already,registered,under,the,same,mapping;protected,void,register,handler,method,object,handler,method,method,t,mapping,this,mapping,registry,register,handler,method,mapping
AbstractHandlerMethodMapping -> protected void registerHandlerMethod(Object handler, Method method, T mapping);1447077465;Register a handler method and its unique mapping. Invoked at startup for_each detected handler method._@param handler the bean name of the handler or the handler instance_@param method the method to register_@param mapping the mapping conditions associated with the handler method_@throws IllegalStateException if another method was already registered_under the same mapping;protected void registerHandlerMethod(Object handler, Method method, T mapping) {_		this.mappingRegistry.register(mapping, handler, method)__	};register,a,handler,method,and,its,unique,mapping,invoked,at,startup,for,each,detected,handler,method,param,handler,the,bean,name,of,the,handler,or,the,handler,instance,param,method,the,method,to,register,param,mapping,the,mapping,conditions,associated,with,the,handler,method,throws,illegal,state,exception,if,another,method,was,already,registered,under,the,same,mapping;protected,void,register,handler,method,object,handler,method,method,t,mapping,this,mapping,registry,register,mapping,handler,method
AbstractHandlerMethodMapping -> protected void registerHandlerMethod(Object handler, Method method, T mapping);1448483163;Register a handler method and its unique mapping. Invoked at startup for_each detected handler method._@param handler the bean name of the handler or the handler instance_@param method the method to register_@param mapping the mapping conditions associated with the handler method_@throws IllegalStateException if another method was already registered_under the same mapping;protected void registerHandlerMethod(Object handler, Method method, T mapping) {_		this.mappingRegistry.register(mapping, handler, method)__	};register,a,handler,method,and,its,unique,mapping,invoked,at,startup,for,each,detected,handler,method,param,handler,the,bean,name,of,the,handler,or,the,handler,instance,param,method,the,method,to,register,param,mapping,the,mapping,conditions,associated,with,the,handler,method,throws,illegal,state,exception,if,another,method,was,already,registered,under,the,same,mapping;protected,void,register,handler,method,object,handler,method,method,t,mapping,this,mapping,registry,register,mapping,handler,method
AbstractHandlerMethodMapping -> protected void registerHandlerMethod(Object handler, Method method, T mapping);1452685925;Register a handler method and its unique mapping. Invoked at startup for_each detected handler method._@param handler the bean name of the handler or the handler instance_@param method the method to register_@param mapping the mapping conditions associated with the handler method_@throws IllegalStateException if another method was already registered_under the same mapping;protected void registerHandlerMethod(Object handler, Method method, T mapping) {_		this.mappingRegistry.register(mapping, handler, method)__	};register,a,handler,method,and,its,unique,mapping,invoked,at,startup,for,each,detected,handler,method,param,handler,the,bean,name,of,the,handler,or,the,handler,instance,param,method,the,method,to,register,param,mapping,the,mapping,conditions,associated,with,the,handler,method,throws,illegal,state,exception,if,another,method,was,already,registered,under,the,same,mapping;protected,void,register,handler,method,object,handler,method,method,t,mapping,this,mapping,registry,register,mapping,handler,method
AbstractHandlerMethodMapping -> protected void registerHandlerMethod(Object handler, Method method, T mapping);1452873718;Register a handler method and its unique mapping. Invoked at startup for_each detected handler method._@param handler the bean name of the handler or the handler instance_@param method the method to register_@param mapping the mapping conditions associated with the handler method_@throws IllegalStateException if another method was already registered_under the same mapping;protected void registerHandlerMethod(Object handler, Method method, T mapping) {_		this.mappingRegistry.register(mapping, handler, method)__	};register,a,handler,method,and,its,unique,mapping,invoked,at,startup,for,each,detected,handler,method,param,handler,the,bean,name,of,the,handler,or,the,handler,instance,param,method,the,method,to,register,param,mapping,the,mapping,conditions,associated,with,the,handler,method,throws,illegal,state,exception,if,another,method,was,already,registered,under,the,same,mapping;protected,void,register,handler,method,object,handler,method,method,t,mapping,this,mapping,registry,register,mapping,handler,method
AbstractHandlerMethodMapping -> protected void registerHandlerMethod(Object handler, Method method, T mapping);1453843788;Register a handler method and its unique mapping. Invoked at startup for_each detected handler method._@param handler the bean name of the handler or the handler instance_@param method the method to register_@param mapping the mapping conditions associated with the handler method_@throws IllegalStateException if another method was already registered_under the same mapping;protected void registerHandlerMethod(Object handler, Method method, T mapping) {_		this.mappingRegistry.register(mapping, handler, method)__	};register,a,handler,method,and,its,unique,mapping,invoked,at,startup,for,each,detected,handler,method,param,handler,the,bean,name,of,the,handler,or,the,handler,instance,param,method,the,method,to,register,param,mapping,the,mapping,conditions,associated,with,the,handler,method,throws,illegal,state,exception,if,another,method,was,already,registered,under,the,same,mapping;protected,void,register,handler,method,object,handler,method,method,t,mapping,this,mapping,registry,register,mapping,handler,method
AbstractHandlerMethodMapping -> protected void registerHandlerMethod(Object handler, Method method, T mapping);1467730834;Register a handler method and its unique mapping. Invoked at startup for_each detected handler method._@param handler the bean name of the handler or the handler instance_@param method the method to register_@param mapping the mapping conditions associated with the handler method_@throws IllegalStateException if another method was already registered_under the same mapping;protected void registerHandlerMethod(Object handler, Method method, T mapping) {_		this.mappingRegistry.register(mapping, handler, method)__	};register,a,handler,method,and,its,unique,mapping,invoked,at,startup,for,each,detected,handler,method,param,handler,the,bean,name,of,the,handler,or,the,handler,instance,param,method,the,method,to,register,param,mapping,the,mapping,conditions,associated,with,the,handler,method,throws,illegal,state,exception,if,another,method,was,already,registered,under,the,same,mapping;protected,void,register,handler,method,object,handler,method,method,t,mapping,this,mapping,registry,register,mapping,handler,method
AbstractHandlerMethodMapping -> protected void registerHandlerMethod(Object handler, Method method, T mapping);1468417354;Register a handler method and its unique mapping. Invoked at startup for_each detected handler method._@param handler the bean name of the handler or the handler instance_@param method the method to register_@param mapping the mapping conditions associated with the handler method_@throws IllegalStateException if another method was already registered_under the same mapping;protected void registerHandlerMethod(Object handler, Method method, T mapping) {_		this.mappingRegistry.register(mapping, handler, method)__	};register,a,handler,method,and,its,unique,mapping,invoked,at,startup,for,each,detected,handler,method,param,handler,the,bean,name,of,the,handler,or,the,handler,instance,param,method,the,method,to,register,param,mapping,the,mapping,conditions,associated,with,the,handler,method,throws,illegal,state,exception,if,another,method,was,already,registered,under,the,same,mapping;protected,void,register,handler,method,object,handler,method,method,t,mapping,this,mapping,registry,register,mapping,handler,method
AbstractHandlerMethodMapping -> protected void registerHandlerMethod(Object handler, Method method, T mapping);1468596479;Register a handler method and its unique mapping. Invoked at startup for_each detected handler method._@param handler the bean name of the handler or the handler instance_@param method the method to register_@param mapping the mapping conditions associated with the handler method_@throws IllegalStateException if another method was already registered_under the same mapping;protected void registerHandlerMethod(Object handler, Method method, T mapping) {_		this.mappingRegistry.register(mapping, handler, method)__	};register,a,handler,method,and,its,unique,mapping,invoked,at,startup,for,each,detected,handler,method,param,handler,the,bean,name,of,the,handler,or,the,handler,instance,param,method,the,method,to,register,param,mapping,the,mapping,conditions,associated,with,the,handler,method,throws,illegal,state,exception,if,another,method,was,already,registered,under,the,same,mapping;protected,void,register,handler,method,object,handler,method,method,t,mapping,this,mapping,registry,register,mapping,handler,method
AbstractHandlerMethodMapping -> protected void registerHandlerMethod(Object handler, Method method, T mapping);1474905889;Register a handler method and its unique mapping. Invoked at startup for_each detected handler method._@param handler the bean name of the handler or the handler instance_@param method the method to register_@param mapping the mapping conditions associated with the handler method_@throws IllegalStateException if another method was already registered_under the same mapping;protected void registerHandlerMethod(Object handler, Method method, T mapping) {_		this.mappingRegistry.register(mapping, handler, method)__	};register,a,handler,method,and,its,unique,mapping,invoked,at,startup,for,each,detected,handler,method,param,handler,the,bean,name,of,the,handler,or,the,handler,instance,param,method,the,method,to,register,param,mapping,the,mapping,conditions,associated,with,the,handler,method,throws,illegal,state,exception,if,another,method,was,already,registered,under,the,same,mapping;protected,void,register,handler,method,object,handler,method,method,t,mapping,this,mapping,registry,register,mapping,handler,method
AbstractHandlerMethodMapping -> protected void registerHandlerMethod(Object handler, Method method, T mapping);1481813056;Register a handler method and its unique mapping. Invoked at startup for_each detected handler method._@param handler the bean name of the handler or the handler instance_@param method the method to register_@param mapping the mapping conditions associated with the handler method_@throws IllegalStateException if another method was already registered_under the same mapping;protected void registerHandlerMethod(Object handler, Method method, T mapping) {_		this.mappingRegistry.register(mapping, handler, method)__	};register,a,handler,method,and,its,unique,mapping,invoked,at,startup,for,each,detected,handler,method,param,handler,the,bean,name,of,the,handler,or,the,handler,instance,param,method,the,method,to,register,param,mapping,the,mapping,conditions,associated,with,the,handler,method,throws,illegal,state,exception,if,another,method,was,already,registered,under,the,same,mapping;protected,void,register,handler,method,object,handler,method,method,t,mapping,this,mapping,registry,register,mapping,handler,method
AbstractHandlerMethodMapping -> protected void registerHandlerMethod(Object handler, Method method, T mapping);1485810955;Register a handler method and its unique mapping. Invoked at startup for_each detected handler method._@param handler the bean name of the handler or the handler instance_@param method the method to register_@param mapping the mapping conditions associated with the handler method_@throws IllegalStateException if another method was already registered_under the same mapping;protected void registerHandlerMethod(Object handler, Method method, T mapping) {_		this.mappingRegistry.register(mapping, handler, method)__	};register,a,handler,method,and,its,unique,mapping,invoked,at,startup,for,each,detected,handler,method,param,handler,the,bean,name,of,the,handler,or,the,handler,instance,param,method,the,method,to,register,param,mapping,the,mapping,conditions,associated,with,the,handler,method,throws,illegal,state,exception,if,another,method,was,already,registered,under,the,same,mapping;protected,void,register,handler,method,object,handler,method,method,t,mapping,this,mapping,registry,register,mapping,handler,method
AbstractHandlerMethodMapping -> protected void registerHandlerMethod(Object handler, Method method, T mapping);1495868221;Register a handler method and its unique mapping. Invoked at startup for_each detected handler method._@param handler the bean name of the handler or the handler instance_@param method the method to register_@param mapping the mapping conditions associated with the handler method_@throws IllegalStateException if another method was already registered_under the same mapping;protected void registerHandlerMethod(Object handler, Method method, T mapping) {_		this.mappingRegistry.register(mapping, handler, method)__	};register,a,handler,method,and,its,unique,mapping,invoked,at,startup,for,each,detected,handler,method,param,handler,the,bean,name,of,the,handler,or,the,handler,instance,param,method,the,method,to,register,param,mapping,the,mapping,conditions,associated,with,the,handler,method,throws,illegal,state,exception,if,another,method,was,already,registered,under,the,same,mapping;protected,void,register,handler,method,object,handler,method,method,t,mapping,this,mapping,registry,register,mapping,handler,method
AbstractHandlerMethodMapping -> protected void registerHandlerMethod(Object handler, Method method, T mapping);1496837955;Register a handler method and its unique mapping. Invoked at startup for_each detected handler method._@param handler the bean name of the handler or the handler instance_@param method the method to register_@param mapping the mapping conditions associated with the handler method_@throws IllegalStateException if another method was already registered_under the same mapping;protected void registerHandlerMethod(Object handler, Method method, T mapping) {_		this.mappingRegistry.register(mapping, handler, method)__	};register,a,handler,method,and,its,unique,mapping,invoked,at,startup,for,each,detected,handler,method,param,handler,the,bean,name,of,the,handler,or,the,handler,instance,param,method,the,method,to,register,param,mapping,the,mapping,conditions,associated,with,the,handler,method,throws,illegal,state,exception,if,another,method,was,already,registered,under,the,same,mapping;protected,void,register,handler,method,object,handler,method,method,t,mapping,this,mapping,registry,register,mapping,handler,method
AbstractHandlerMethodMapping -> protected void registerHandlerMethod(Object handler, Method method, T mapping);1497251962;Register a handler method and its unique mapping. Invoked at startup for_each detected handler method._@param handler the bean name of the handler or the handler instance_@param method the method to register_@param mapping the mapping conditions associated with the handler method_@throws IllegalStateException if another method was already registered_under the same mapping;protected void registerHandlerMethod(Object handler, Method method, T mapping) {_		this.mappingRegistry.register(mapping, handler, method)__	};register,a,handler,method,and,its,unique,mapping,invoked,at,startup,for,each,detected,handler,method,param,handler,the,bean,name,of,the,handler,or,the,handler,instance,param,method,the,method,to,register,param,mapping,the,mapping,conditions,associated,with,the,handler,method,throws,illegal,state,exception,if,another,method,was,already,registered,under,the,same,mapping;protected,void,register,handler,method,object,handler,method,method,t,mapping,this,mapping,registry,register,mapping,handler,method
AbstractHandlerMethodMapping -> protected void registerHandlerMethod(Object handler, Method method, T mapping);1498780456;Register a handler method and its unique mapping. Invoked at startup for_each detected handler method._@param handler the bean name of the handler or the handler instance_@param method the method to register_@param mapping the mapping conditions associated with the handler method_@throws IllegalStateException if another method was already registered_under the same mapping;protected void registerHandlerMethod(Object handler, Method method, T mapping) {_		this.mappingRegistry.register(mapping, handler, method)__	};register,a,handler,method,and,its,unique,mapping,invoked,at,startup,for,each,detected,handler,method,param,handler,the,bean,name,of,the,handler,or,the,handler,instance,param,method,the,method,to,register,param,mapping,the,mapping,conditions,associated,with,the,handler,method,throws,illegal,state,exception,if,another,method,was,already,registered,under,the,same,mapping;protected,void,register,handler,method,object,handler,method,method,t,mapping,this,mapping,registry,register,mapping,handler,method
AbstractHandlerMethodMapping -> protected void registerHandlerMethod(Object handler, Method method, T mapping);1518772998;Register a handler method and its unique mapping. Invoked at startup for_each detected handler method._@param handler the bean name of the handler or the handler instance_@param method the method to register_@param mapping the mapping conditions associated with the handler method_@throws IllegalStateException if another method was already registered_under the same mapping;protected void registerHandlerMethod(Object handler, Method method, T mapping) {_		this.mappingRegistry.register(mapping, handler, method)__	};register,a,handler,method,and,its,unique,mapping,invoked,at,startup,for,each,detected,handler,method,param,handler,the,bean,name,of,the,handler,or,the,handler,instance,param,method,the,method,to,register,param,mapping,the,mapping,conditions,associated,with,the,handler,method,throws,illegal,state,exception,if,another,method,was,already,registered,under,the,same,mapping;protected,void,register,handler,method,object,handler,method,method,t,mapping,this,mapping,registry,register,mapping,handler,method
AbstractHandlerMethodMapping -> protected void registerHandlerMethod(Object handler, Method method, T mapping);1522103912;Register a handler method and its unique mapping. Invoked at startup for_each detected handler method._@param handler the bean name of the handler or the handler instance_@param method the method to register_@param mapping the mapping conditions associated with the handler method_@throws IllegalStateException if another method was already registered_under the same mapping;protected void registerHandlerMethod(Object handler, Method method, T mapping) {_		this.mappingRegistry.register(mapping, handler, method)__	};register,a,handler,method,and,its,unique,mapping,invoked,at,startup,for,each,detected,handler,method,param,handler,the,bean,name,of,the,handler,or,the,handler,instance,param,method,the,method,to,register,param,mapping,the,mapping,conditions,associated,with,the,handler,method,throws,illegal,state,exception,if,another,method,was,already,registered,under,the,same,mapping;protected,void,register,handler,method,object,handler,method,method,t,mapping,this,mapping,registry,register,mapping,handler,method
AbstractHandlerMethodMapping -> protected void registerHandlerMethod(Object handler, Method method, T mapping);1522843494;Register a handler method and its unique mapping. Invoked at startup for_each detected handler method._@param handler the bean name of the handler or the handler instance_@param method the method to register_@param mapping the mapping conditions associated with the handler method_@throws IllegalStateException if another method was already registered_under the same mapping;protected void registerHandlerMethod(Object handler, Method method, T mapping) {_		this.mappingRegistry.register(mapping, handler, method)__	};register,a,handler,method,and,its,unique,mapping,invoked,at,startup,for,each,detected,handler,method,param,handler,the,bean,name,of,the,handler,or,the,handler,instance,param,method,the,method,to,register,param,mapping,the,mapping,conditions,associated,with,the,handler,method,throws,illegal,state,exception,if,another,method,was,already,registered,under,the,same,mapping;protected,void,register,handler,method,object,handler,method,method,t,mapping,this,mapping,registry,register,mapping,handler,method
AbstractHandlerMethodMapping -> protected void registerHandlerMethod(Object handler, Method method, T mapping);1529361191;Register a handler method and its unique mapping. Invoked at startup for_each detected handler method._@param handler the bean name of the handler or the handler instance_@param method the method to register_@param mapping the mapping conditions associated with the handler method_@throws IllegalStateException if another method was already registered_under the same mapping;protected void registerHandlerMethod(Object handler, Method method, T mapping) {_		this.mappingRegistry.register(mapping, handler, method)__	};register,a,handler,method,and,its,unique,mapping,invoked,at,startup,for,each,detected,handler,method,param,handler,the,bean,name,of,the,handler,or,the,handler,instance,param,method,the,method,to,register,param,mapping,the,mapping,conditions,associated,with,the,handler,method,throws,illegal,state,exception,if,another,method,was,already,registered,under,the,same,mapping;protected,void,register,handler,method,object,handler,method,method,t,mapping,this,mapping,registry,register,mapping,handler,method
AbstractHandlerMethodMapping -> protected void registerHandlerMethod(Object handler, Method method, T mapping);1529721864;Register a handler method and its unique mapping. Invoked at startup for_each detected handler method._@param handler the bean name of the handler or the handler instance_@param method the method to register_@param mapping the mapping conditions associated with the handler method_@throws IllegalStateException if another method was already registered_under the same mapping;protected void registerHandlerMethod(Object handler, Method method, T mapping) {_		this.mappingRegistry.register(mapping, handler, method)__	};register,a,handler,method,and,its,unique,mapping,invoked,at,startup,for,each,detected,handler,method,param,handler,the,bean,name,of,the,handler,or,the,handler,instance,param,method,the,method,to,register,param,mapping,the,mapping,conditions,associated,with,the,handler,method,throws,illegal,state,exception,if,another,method,was,already,registered,under,the,same,mapping;protected,void,register,handler,method,object,handler,method,method,t,mapping,this,mapping,registry,register,mapping,handler,method
AbstractHandlerMethodMapping -> protected void registerHandlerMethod(Object handler, Method method, T mapping);1530174524;Register a handler method and its unique mapping. Invoked at startup for_each detected handler method._@param handler the bean name of the handler or the handler instance_@param method the method to register_@param mapping the mapping conditions associated with the handler method_@throws IllegalStateException if another method was already registered_under the same mapping;protected void registerHandlerMethod(Object handler, Method method, T mapping) {_		this.mappingRegistry.register(mapping, handler, method)__	};register,a,handler,method,and,its,unique,mapping,invoked,at,startup,for,each,detected,handler,method,param,handler,the,bean,name,of,the,handler,or,the,handler,instance,param,method,the,method,to,register,param,mapping,the,mapping,conditions,associated,with,the,handler,method,throws,illegal,state,exception,if,another,method,was,already,registered,under,the,same,mapping;protected,void,register,handler,method,object,handler,method,method,t,mapping,this,mapping,registry,register,mapping,handler,method
AbstractHandlerMethodMapping -> protected void registerHandlerMethod(Object handler, Method method, T mapping);1530174524;Register a handler method and its unique mapping. Invoked at startup for_each detected handler method._@param handler the bean name of the handler or the handler instance_@param method the method to register_@param mapping the mapping conditions associated with the handler method_@throws IllegalStateException if another method was already registered_under the same mapping;protected void registerHandlerMethod(Object handler, Method method, T mapping) {_		this.mappingRegistry.register(mapping, handler, method)__	};register,a,handler,method,and,its,unique,mapping,invoked,at,startup,for,each,detected,handler,method,param,handler,the,bean,name,of,the,handler,or,the,handler,instance,param,method,the,method,to,register,param,mapping,the,mapping,conditions,associated,with,the,handler,method,throws,illegal,state,exception,if,another,method,was,already,registered,under,the,same,mapping;protected,void,register,handler,method,object,handler,method,method,t,mapping,this,mapping,registry,register,mapping,handler,method
AbstractHandlerMethodMapping -> protected void registerHandlerMethod(Object handler, Method method, T mapping);1533943217;Register a handler method and its unique mapping. Invoked at startup for_each detected handler method._@param handler the bean name of the handler or the handler instance_@param method the method to register_@param mapping the mapping conditions associated with the handler method_@throws IllegalStateException if another method was already registered_under the same mapping;protected void registerHandlerMethod(Object handler, Method method, T mapping) {_		this.mappingRegistry.register(mapping, handler, method)__	};register,a,handler,method,and,its,unique,mapping,invoked,at,startup,for,each,detected,handler,method,param,handler,the,bean,name,of,the,handler,or,the,handler,instance,param,method,the,method,to,register,param,mapping,the,mapping,conditions,associated,with,the,handler,method,throws,illegal,state,exception,if,another,method,was,already,registered,under,the,same,mapping;protected,void,register,handler,method,object,handler,method,method,t,mapping,this,mapping,registry,register,mapping,handler,method
AbstractHandlerMethodMapping -> protected void registerHandlerMethod(Object handler, Method method, T mapping);1542407418;Register a handler method and its unique mapping. Invoked at startup for_each detected handler method._@param handler the bean name of the handler or the handler instance_@param method the method to register_@param mapping the mapping conditions associated with the handler method_@throws IllegalStateException if another method was already registered_under the same mapping;protected void registerHandlerMethod(Object handler, Method method, T mapping) {_		this.mappingRegistry.register(mapping, handler, method)__	};register,a,handler,method,and,its,unique,mapping,invoked,at,startup,for,each,detected,handler,method,param,handler,the,bean,name,of,the,handler,or,the,handler,instance,param,method,the,method,to,register,param,mapping,the,mapping,conditions,associated,with,the,handler,method,throws,illegal,state,exception,if,another,method,was,already,registered,under,the,same,mapping;protected,void,register,handler,method,object,handler,method,method,t,mapping,this,mapping,registry,register,mapping,handler,method
AbstractHandlerMethodMapping -> protected void registerHandlerMethod(Object handler, Method method, T mapping);1542771062;Register a handler method and its unique mapping. Invoked at startup for_each detected handler method._@param handler the bean name of the handler or the handler instance_@param method the method to register_@param mapping the mapping conditions associated with the handler method_@throws IllegalStateException if another method was already registered_under the same mapping;protected void registerHandlerMethod(Object handler, Method method, T mapping) {_		this.mappingRegistry.register(mapping, handler, method)__	};register,a,handler,method,and,its,unique,mapping,invoked,at,startup,for,each,detected,handler,method,param,handler,the,bean,name,of,the,handler,or,the,handler,instance,param,method,the,method,to,register,param,mapping,the,mapping,conditions,associated,with,the,handler,method,throws,illegal,state,exception,if,another,method,was,already,registered,under,the,same,mapping;protected,void,register,handler,method,object,handler,method,method,t,mapping,this,mapping,registry,register,mapping,handler,method
AbstractHandlerMethodMapping -> protected void registerHandlerMethod(Object handler, Method method, T mapping);1548427561;Register a handler method and its unique mapping. Invoked at startup for_each detected handler method._@param handler the bean name of the handler or the handler instance_@param method the method to register_@param mapping the mapping conditions associated with the handler method_@throws IllegalStateException if another method was already registered_under the same mapping;protected void registerHandlerMethod(Object handler, Method method, T mapping) {_		this.mappingRegistry.register(mapping, handler, method)__	};register,a,handler,method,and,its,unique,mapping,invoked,at,startup,for,each,detected,handler,method,param,handler,the,bean,name,of,the,handler,or,the,handler,instance,param,method,the,method,to,register,param,mapping,the,mapping,conditions,associated,with,the,handler,method,throws,illegal,state,exception,if,another,method,was,already,registered,under,the,same,mapping;protected,void,register,handler,method,object,handler,method,method,t,mapping,this,mapping,registry,register,mapping,handler,method
AbstractHandlerMethodMapping -> protected void registerHandlerMethod(Object handler, Method method, T mapping);1551093473;Register a handler method and its unique mapping. Invoked at startup for_each detected handler method._@param handler the bean name of the handler or the handler instance_@param method the method to register_@param mapping the mapping conditions associated with the handler method_@throws IllegalStateException if another method was already registered_under the same mapping;protected void registerHandlerMethod(Object handler, Method method, T mapping) {_		this.mappingRegistry.register(mapping, handler, method)__	};register,a,handler,method,and,its,unique,mapping,invoked,at,startup,for,each,detected,handler,method,param,handler,the,bean,name,of,the,handler,or,the,handler,instance,param,method,the,method,to,register,param,mapping,the,mapping,conditions,associated,with,the,handler,method,throws,illegal,state,exception,if,another,method,was,already,registered,under,the,same,mapping;protected,void,register,handler,method,object,handler,method,method,t,mapping,this,mapping,registry,register,mapping,handler,method
AbstractHandlerMethodMapping -> protected HandlerMethod handleNoMatch(Set<T> mappings, String lookupPath, HttpServletRequest request) 			throws Exception;1328020251;Invoked when no matching mapping is not found._@param mappings all registered mappings_@param lookupPath mapping lookup path within the current servlet mapping_@param request the current request_@throws ServletException in case of errors;protected HandlerMethod handleNoMatch(Set<T> mappings, String lookupPath, HttpServletRequest request)_			throws Exception {_		return null__	};invoked,when,no,matching,mapping,is,not,found,param,mappings,all,registered,mappings,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,request,the,current,request,throws,servlet,exception,in,case,of,errors;protected,handler,method,handle,no,match,set,t,mappings,string,lookup,path,http,servlet,request,request,throws,exception,return,null
AbstractHandlerMethodMapping -> protected HandlerMethod handleNoMatch(Set<T> mappings, String lookupPath, HttpServletRequest request) 			throws Exception;1328022204;Invoked when no matching mapping is not found._@param mappings all registered mappings_@param lookupPath mapping lookup path within the current servlet mapping_@param request the current request_@throws ServletException in case of errors;protected HandlerMethod handleNoMatch(Set<T> mappings, String lookupPath, HttpServletRequest request)_			throws Exception {_		return null__	};invoked,when,no,matching,mapping,is,not,found,param,mappings,all,registered,mappings,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,request,the,current,request,throws,servlet,exception,in,case,of,errors;protected,handler,method,handle,no,match,set,t,mappings,string,lookup,path,http,servlet,request,request,throws,exception,return,null
AbstractHandlerMethodMapping -> protected HandlerMethod handleNoMatch(Set<T> mappings, String lookupPath, HttpServletRequest request) 			throws Exception;1336682556;Invoked when no matching mapping is not found._@param mappings all registered mappings_@param lookupPath mapping lookup path within the current servlet mapping_@param request the current request_@throws ServletException in case of errors;protected HandlerMethod handleNoMatch(Set<T> mappings, String lookupPath, HttpServletRequest request)_			throws Exception {_		return null__	};invoked,when,no,matching,mapping,is,not,found,param,mappings,all,registered,mappings,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,request,the,current,request,throws,servlet,exception,in,case,of,errors;protected,handler,method,handle,no,match,set,t,mappings,string,lookup,path,http,servlet,request,request,throws,exception,return,null
AbstractHandlerMethodMapping -> protected HandlerMethod handleNoMatch(Set<T> mappings, String lookupPath, HttpServletRequest request) 			throws Exception;1341441111;Invoked when no matching mapping is not found._@param mappings all registered mappings_@param lookupPath mapping lookup path within the current servlet mapping_@param request the current request_@throws ServletException in case of errors;protected HandlerMethod handleNoMatch(Set<T> mappings, String lookupPath, HttpServletRequest request)_			throws Exception {__		return null__	};invoked,when,no,matching,mapping,is,not,found,param,mappings,all,registered,mappings,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,request,the,current,request,throws,servlet,exception,in,case,of,errors;protected,handler,method,handle,no,match,set,t,mappings,string,lookup,path,http,servlet,request,request,throws,exception,return,null
AbstractHandlerMethodMapping -> protected HandlerMethod handleNoMatch(Set<T> mappings, String lookupPath, HttpServletRequest request) 			throws Exception;1356735495;Invoked when no matching mapping is not found._@param mappings all registered mappings_@param lookupPath mapping lookup path within the current servlet mapping_@param request the current request_@throws ServletException in case of errors;protected HandlerMethod handleNoMatch(Set<T> mappings, String lookupPath, HttpServletRequest request)_			throws Exception {__		return null__	};invoked,when,no,matching,mapping,is,not,found,param,mappings,all,registered,mappings,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,request,the,current,request,throws,servlet,exception,in,case,of,errors;protected,handler,method,handle,no,match,set,t,mappings,string,lookup,path,http,servlet,request,request,throws,exception,return,null
AbstractHandlerMethodMapping -> protected HandlerMethod handleNoMatch(Set<T> mappings, String lookupPath, HttpServletRequest request) 			throws Exception;1357119239;Invoked when no matching mapping is not found._@param mappings all registered mappings_@param lookupPath mapping lookup path within the current servlet mapping_@param request the current request_@throws ServletException in case of errors;protected HandlerMethod handleNoMatch(Set<T> mappings, String lookupPath, HttpServletRequest request)_			throws Exception {__		return null__	};invoked,when,no,matching,mapping,is,not,found,param,mappings,all,registered,mappings,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,request,the,current,request,throws,servlet,exception,in,case,of,errors;protected,handler,method,handle,no,match,set,t,mappings,string,lookup,path,http,servlet,request,request,throws,exception,return,null
AbstractHandlerMethodMapping -> protected HandlerMethod handleNoMatch(Set<T> mappings, String lookupPath, HttpServletRequest request) 			throws Exception;1362408075;Invoked when no matching mapping is not found._@param mappings all registered mappings_@param lookupPath mapping lookup path within the current servlet mapping_@param request the current request_@throws ServletException in case of errors;protected HandlerMethod handleNoMatch(Set<T> mappings, String lookupPath, HttpServletRequest request)_			throws Exception {__		return null__	};invoked,when,no,matching,mapping,is,not,found,param,mappings,all,registered,mappings,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,request,the,current,request,throws,servlet,exception,in,case,of,errors;protected,handler,method,handle,no,match,set,t,mappings,string,lookup,path,http,servlet,request,request,throws,exception,return,null
AbstractHandlerMethodMapping -> protected HandlerMethod handleNoMatch(Set<T> mappings, String lookupPath, HttpServletRequest request) 			throws Exception;1368482696;Invoked when no matching mapping is not found._@param mappings all registered mappings_@param lookupPath mapping lookup path within the current servlet mapping_@param request the current request_@throws ServletException in case of errors;protected HandlerMethod handleNoMatch(Set<T> mappings, String lookupPath, HttpServletRequest request)_			throws Exception {__		return null__	};invoked,when,no,matching,mapping,is,not,found,param,mappings,all,registered,mappings,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,request,the,current,request,throws,servlet,exception,in,case,of,errors;protected,handler,method,handle,no,match,set,t,mappings,string,lookup,path,http,servlet,request,request,throws,exception,return,null
AbstractHandlerMethodMapping -> protected HandlerMethod handleNoMatch(Set<T> mappings, String lookupPath, HttpServletRequest request) 			throws Exception;1368581529;Invoked when no matching mapping is not found._@param mappings all registered mappings_@param lookupPath mapping lookup path within the current servlet mapping_@param request the current request_@throws ServletException in case of errors;protected HandlerMethod handleNoMatch(Set<T> mappings, String lookupPath, HttpServletRequest request)_			throws Exception {__		return null__	};invoked,when,no,matching,mapping,is,not,found,param,mappings,all,registered,mappings,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,request,the,current,request,throws,servlet,exception,in,case,of,errors;protected,handler,method,handle,no,match,set,t,mappings,string,lookup,path,http,servlet,request,request,throws,exception,return,null
AbstractHandlerMethodMapping -> protected HandlerMethod handleNoMatch(Set<T> mappings, String lookupPath, HttpServletRequest request) 			throws Exception;1382665849;Invoked when no matching mapping is not found._@param mappings all registered mappings_@param lookupPath mapping lookup path within the current servlet mapping_@param request the current request_@throws ServletException in case of errors;protected HandlerMethod handleNoMatch(Set<T> mappings, String lookupPath, HttpServletRequest request)_			throws Exception {__		return null__	};invoked,when,no,matching,mapping,is,not,found,param,mappings,all,registered,mappings,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,request,the,current,request,throws,servlet,exception,in,case,of,errors;protected,handler,method,handle,no,match,set,t,mappings,string,lookup,path,http,servlet,request,request,throws,exception,return,null
AbstractHandlerMethodMapping -> protected HandlerMethod handleNoMatch(Set<T> mappings, String lookupPath, HttpServletRequest request) 			throws Exception;1392160296;Invoked when no matching mapping is not found._@param mappings all registered mappings_@param lookupPath mapping lookup path within the current servlet mapping_@param request the current request_@throws ServletException in case of errors;protected HandlerMethod handleNoMatch(Set<T> mappings, String lookupPath, HttpServletRequest request)_			throws Exception {__		return null__	};invoked,when,no,matching,mapping,is,not,found,param,mappings,all,registered,mappings,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,request,the,current,request,throws,servlet,exception,in,case,of,errors;protected,handler,method,handle,no,match,set,t,mappings,string,lookup,path,http,servlet,request,request,throws,exception,return,null
AbstractHandlerMethodMapping -> protected HandlerMethod handleNoMatch(Set<T> mappings, String lookupPath, HttpServletRequest request) 			throws Exception;1392337816;Invoked when no matching mapping is not found._@param mappings all registered mappings_@param lookupPath mapping lookup path within the current servlet mapping_@param request the current request_@throws ServletException in case of errors;protected HandlerMethod handleNoMatch(Set<T> mappings, String lookupPath, HttpServletRequest request)_			throws Exception {__		return null__	};invoked,when,no,matching,mapping,is,not,found,param,mappings,all,registered,mappings,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,request,the,current,request,throws,servlet,exception,in,case,of,errors;protected,handler,method,handle,no,match,set,t,mappings,string,lookup,path,http,servlet,request,request,throws,exception,return,null
AbstractHandlerMethodMapping -> protected HandlerMethod handleNoMatch(Set<T> mappings, String lookupPath, HttpServletRequest request) 			throws Exception;1392407320;Invoked when no matching mapping is not found._@param mappings all registered mappings_@param lookupPath mapping lookup path within the current servlet mapping_@param request the current request_@throws ServletException in case of errors;protected HandlerMethod handleNoMatch(Set<T> mappings, String lookupPath, HttpServletRequest request)_			throws Exception {__		return null__	};invoked,when,no,matching,mapping,is,not,found,param,mappings,all,registered,mappings,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,request,the,current,request,throws,servlet,exception,in,case,of,errors;protected,handler,method,handle,no,match,set,t,mappings,string,lookup,path,http,servlet,request,request,throws,exception,return,null
AbstractHandlerMethodMapping -> protected HandlerMethod handleNoMatch(Set<T> mappings, String lookupPath, HttpServletRequest request) 			throws Exception;1395655323;Invoked when no matching mapping is not found._@param mappings all registered mappings_@param lookupPath mapping lookup path within the current servlet mapping_@param request the current request_@throws ServletException in case of errors;protected HandlerMethod handleNoMatch(Set<T> mappings, String lookupPath, HttpServletRequest request)_			throws Exception {__		return null__	};invoked,when,no,matching,mapping,is,not,found,param,mappings,all,registered,mappings,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,request,the,current,request,throws,servlet,exception,in,case,of,errors;protected,handler,method,handle,no,match,set,t,mappings,string,lookup,path,http,servlet,request,request,throws,exception,return,null
AbstractHandlerMethodMapping -> protected HandlerMethod handleNoMatch(Set<T> mappings, String lookupPath, HttpServletRequest request) 			throws Exception;1399404473;Invoked when no matching mapping is not found._@param mappings all registered mappings_@param lookupPath mapping lookup path within the current servlet mapping_@param request the current request_@throws ServletException in case of errors;protected HandlerMethod handleNoMatch(Set<T> mappings, String lookupPath, HttpServletRequest request)_			throws Exception {__		return null__	};invoked,when,no,matching,mapping,is,not,found,param,mappings,all,registered,mappings,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,request,the,current,request,throws,servlet,exception,in,case,of,errors;protected,handler,method,handle,no,match,set,t,mappings,string,lookup,path,http,servlet,request,request,throws,exception,return,null
AbstractHandlerMethodMapping -> protected HandlerMethod handleNoMatch(Set<T> mappings, String lookupPath, HttpServletRequest request) 			throws Exception;1426869344;Invoked when no matching mapping is not found._@param mappings all registered mappings_@param lookupPath mapping lookup path within the current servlet mapping_@param request the current request_@throws ServletException in case of errors;protected HandlerMethod handleNoMatch(Set<T> mappings, String lookupPath, HttpServletRequest request)_			throws Exception {__		return null__	};invoked,when,no,matching,mapping,is,not,found,param,mappings,all,registered,mappings,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,request,the,current,request,throws,servlet,exception,in,case,of,errors;protected,handler,method,handle,no,match,set,t,mappings,string,lookup,path,http,servlet,request,request,throws,exception,return,null
AbstractHandlerMethodMapping -> protected HandlerMethod handleNoMatch(Set<T> mappings, String lookupPath, HttpServletRequest request) 			throws Exception;1427240641;Invoked when no matching mapping is not found._@param mappings all registered mappings_@param lookupPath mapping lookup path within the current servlet mapping_@param request the current request_@throws ServletException in case of errors;protected HandlerMethod handleNoMatch(Set<T> mappings, String lookupPath, HttpServletRequest request)_			throws Exception {__		return null__	};invoked,when,no,matching,mapping,is,not,found,param,mappings,all,registered,mappings,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,request,the,current,request,throws,servlet,exception,in,case,of,errors;protected,handler,method,handle,no,match,set,t,mappings,string,lookup,path,http,servlet,request,request,throws,exception,return,null
AbstractHandlerMethodMapping -> protected HandlerMethod handleNoMatch(Set<T> mappings, String lookupPath, HttpServletRequest request) 			throws Exception;1427983931;Invoked when no matching mapping is not found._@param mappings all registered mappings_@param lookupPath mapping lookup path within the current servlet mapping_@param request the current request_@throws ServletException in case of errors;protected HandlerMethod handleNoMatch(Set<T> mappings, String lookupPath, HttpServletRequest request)_			throws Exception {__		return null__	};invoked,when,no,matching,mapping,is,not,found,param,mappings,all,registered,mappings,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,request,the,current,request,throws,servlet,exception,in,case,of,errors;protected,handler,method,handle,no,match,set,t,mappings,string,lookup,path,http,servlet,request,request,throws,exception,return,null
AbstractHandlerMethodMapping -> protected HandlerMethod handleNoMatch(Set<T> mappings, String lookupPath, HttpServletRequest request) 			throws Exception;1430734105;Invoked when no matching mapping is not found._@param mappings all registered mappings_@param lookupPath mapping lookup path within the current servlet mapping_@param request the current request_@throws ServletException in case of errors;protected HandlerMethod handleNoMatch(Set<T> mappings, String lookupPath, HttpServletRequest request)_			throws Exception {__		return null__	};invoked,when,no,matching,mapping,is,not,found,param,mappings,all,registered,mappings,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,request,the,current,request,throws,servlet,exception,in,case,of,errors;protected,handler,method,handle,no,match,set,t,mappings,string,lookup,path,http,servlet,request,request,throws,exception,return,null
AbstractHandlerMethodMapping -> protected HandlerMethod handleNoMatch(Set<T> mappings, String lookupPath, HttpServletRequest request) 			throws Exception;1430734105;Invoked when no matching mapping is not found._@param mappings all registered mappings_@param lookupPath mapping lookup path within the current servlet mapping_@param request the current request_@throws ServletException in case of errors;protected HandlerMethod handleNoMatch(Set<T> mappings, String lookupPath, HttpServletRequest request)_			throws Exception {__		return null__	};invoked,when,no,matching,mapping,is,not,found,param,mappings,all,registered,mappings,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,request,the,current,request,throws,servlet,exception,in,case,of,errors;protected,handler,method,handle,no,match,set,t,mappings,string,lookup,path,http,servlet,request,request,throws,exception,return,null
AbstractHandlerMethodMapping -> protected HandlerMethod handleNoMatch(Set<T> mappings, String lookupPath, HttpServletRequest request) 			throws Exception;1430734106;Invoked when no matching mapping is not found._@param mappings all registered mappings_@param lookupPath mapping lookup path within the current servlet mapping_@param request the current request_@throws ServletException in case of errors;protected HandlerMethod handleNoMatch(Set<T> mappings, String lookupPath, HttpServletRequest request)_			throws Exception {__		return null__	};invoked,when,no,matching,mapping,is,not,found,param,mappings,all,registered,mappings,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,request,the,current,request,throws,servlet,exception,in,case,of,errors;protected,handler,method,handle,no,match,set,t,mappings,string,lookup,path,http,servlet,request,request,throws,exception,return,null
AbstractHandlerMethodMapping -> protected HandlerMethod handleNoMatch(Set<T> mappings, String lookupPath, HttpServletRequest request) 			throws Exception;1430774689;Invoked when no matching mapping is not found._@param mappings all registered mappings_@param lookupPath mapping lookup path within the current servlet mapping_@param request the current request_@throws ServletException in case of errors;protected HandlerMethod handleNoMatch(Set<T> mappings, String lookupPath, HttpServletRequest request)_			throws Exception {__		return null__	};invoked,when,no,matching,mapping,is,not,found,param,mappings,all,registered,mappings,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,request,the,current,request,throws,servlet,exception,in,case,of,errors;protected,handler,method,handle,no,match,set,t,mappings,string,lookup,path,http,servlet,request,request,throws,exception,return,null
AbstractHandlerMethodMapping -> protected HandlerMethod handleNoMatch(Set<T> mappings, String lookupPath, HttpServletRequest request) 			throws Exception;1430844966;Invoked when no matching mapping is not found._@param mappings all registered mappings_@param lookupPath mapping lookup path within the current servlet mapping_@param request the current request_@throws ServletException in case of errors;protected HandlerMethod handleNoMatch(Set<T> mappings, String lookupPath, HttpServletRequest request)_			throws Exception {__		return null__	};invoked,when,no,matching,mapping,is,not,found,param,mappings,all,registered,mappings,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,request,the,current,request,throws,servlet,exception,in,case,of,errors;protected,handler,method,handle,no,match,set,t,mappings,string,lookup,path,http,servlet,request,request,throws,exception,return,null
AbstractHandlerMethodMapping -> protected HandlerMethod handleNoMatch(Set<T> mappings, String lookupPath, HttpServletRequest request) 			throws Exception;1430844967;Invoked when no matching mapping is not found._@param mappings all registered mappings_@param lookupPath mapping lookup path within the current servlet mapping_@param request the current request_@throws ServletException in case of errors;protected HandlerMethod handleNoMatch(Set<T> mappings, String lookupPath, HttpServletRequest request)_			throws Exception {__		return null__	};invoked,when,no,matching,mapping,is,not,found,param,mappings,all,registered,mappings,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,request,the,current,request,throws,servlet,exception,in,case,of,errors;protected,handler,method,handle,no,match,set,t,mappings,string,lookup,path,http,servlet,request,request,throws,exception,return,null
AbstractHandlerMethodMapping -> protected HandlerMethod handleNoMatch(Set<T> mappings, String lookupPath, HttpServletRequest request) 			throws Exception;1431730371;Invoked when no matching mapping is not found._@param mappings all registered mappings_@param lookupPath mapping lookup path within the current servlet mapping_@param request the current request_@throws ServletException in case of errors;protected HandlerMethod handleNoMatch(Set<T> mappings, String lookupPath, HttpServletRequest request)_			throws Exception {__		return null__	};invoked,when,no,matching,mapping,is,not,found,param,mappings,all,registered,mappings,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,request,the,current,request,throws,servlet,exception,in,case,of,errors;protected,handler,method,handle,no,match,set,t,mappings,string,lookup,path,http,servlet,request,request,throws,exception,return,null
AbstractHandlerMethodMapping -> protected HandlerMethod handleNoMatch(Set<T> mappings, String lookupPath, HttpServletRequest request) 			throws Exception;1439294371;Invoked when no matching mapping is not found._@param mappings all registered mappings_@param lookupPath mapping lookup path within the current servlet mapping_@param request the current request_@throws ServletException in case of errors;protected HandlerMethod handleNoMatch(Set<T> mappings, String lookupPath, HttpServletRequest request)_			throws Exception {__		return null__	};invoked,when,no,matching,mapping,is,not,found,param,mappings,all,registered,mappings,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,request,the,current,request,throws,servlet,exception,in,case,of,errors;protected,handler,method,handle,no,match,set,t,mappings,string,lookup,path,http,servlet,request,request,throws,exception,return,null
AbstractHandlerMethodMapping -> protected HandlerMethod handleNoMatch(Set<T> mappings, String lookupPath, HttpServletRequest request) 			throws Exception;1447077465;Invoked when no matching mapping is not found._@param mappings all registered mappings_@param lookupPath mapping lookup path within the current servlet mapping_@param request the current request_@throws ServletException in case of errors;protected HandlerMethod handleNoMatch(Set<T> mappings, String lookupPath, HttpServletRequest request)_			throws Exception {__		return null__	};invoked,when,no,matching,mapping,is,not,found,param,mappings,all,registered,mappings,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,request,the,current,request,throws,servlet,exception,in,case,of,errors;protected,handler,method,handle,no,match,set,t,mappings,string,lookup,path,http,servlet,request,request,throws,exception,return,null
AbstractHandlerMethodMapping -> protected HandlerMethod handleNoMatch(Set<T> mappings, String lookupPath, HttpServletRequest request) 			throws Exception;1448483163;Invoked when no matching mapping is not found._@param mappings all registered mappings_@param lookupPath mapping lookup path within the current servlet mapping_@param request the current request_@throws ServletException in case of errors;protected HandlerMethod handleNoMatch(Set<T> mappings, String lookupPath, HttpServletRequest request)_			throws Exception {__		return null__	};invoked,when,no,matching,mapping,is,not,found,param,mappings,all,registered,mappings,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,request,the,current,request,throws,servlet,exception,in,case,of,errors;protected,handler,method,handle,no,match,set,t,mappings,string,lookup,path,http,servlet,request,request,throws,exception,return,null
AbstractHandlerMethodMapping -> protected HandlerMethod handleNoMatch(Set<T> mappings, String lookupPath, HttpServletRequest request) 			throws Exception;1452685925;Invoked when no matching mapping is not found._@param mappings all registered mappings_@param lookupPath mapping lookup path within the current servlet mapping_@param request the current request_@throws ServletException in case of errors;protected HandlerMethod handleNoMatch(Set<T> mappings, String lookupPath, HttpServletRequest request)_			throws Exception {__		return null__	};invoked,when,no,matching,mapping,is,not,found,param,mappings,all,registered,mappings,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,request,the,current,request,throws,servlet,exception,in,case,of,errors;protected,handler,method,handle,no,match,set,t,mappings,string,lookup,path,http,servlet,request,request,throws,exception,return,null
AbstractHandlerMethodMapping -> protected HandlerMethod handleNoMatch(Set<T> mappings, String lookupPath, HttpServletRequest request) 			throws Exception;1452873718;Invoked when no matching mapping is not found._@param mappings all registered mappings_@param lookupPath mapping lookup path within the current servlet mapping_@param request the current request_@throws ServletException in case of errors;protected HandlerMethod handleNoMatch(Set<T> mappings, String lookupPath, HttpServletRequest request)_			throws Exception {__		return null__	};invoked,when,no,matching,mapping,is,not,found,param,mappings,all,registered,mappings,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,request,the,current,request,throws,servlet,exception,in,case,of,errors;protected,handler,method,handle,no,match,set,t,mappings,string,lookup,path,http,servlet,request,request,throws,exception,return,null
AbstractHandlerMethodMapping -> protected HandlerMethod handleNoMatch(Set<T> mappings, String lookupPath, HttpServletRequest request) 			throws Exception;1453843788;Invoked when no matching mapping is not found._@param mappings all registered mappings_@param lookupPath mapping lookup path within the current servlet mapping_@param request the current request_@throws ServletException in case of errors;protected HandlerMethod handleNoMatch(Set<T> mappings, String lookupPath, HttpServletRequest request)_			throws Exception {__		return null__	};invoked,when,no,matching,mapping,is,not,found,param,mappings,all,registered,mappings,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,request,the,current,request,throws,servlet,exception,in,case,of,errors;protected,handler,method,handle,no,match,set,t,mappings,string,lookup,path,http,servlet,request,request,throws,exception,return,null
AbstractHandlerMethodMapping -> protected HandlerMethod handleNoMatch(Set<T> mappings, String lookupPath, HttpServletRequest request) 			throws Exception;1467730834;Invoked when no matching mapping is not found._@param mappings all registered mappings_@param lookupPath mapping lookup path within the current servlet mapping_@param request the current request_@throws ServletException in case of errors;protected HandlerMethod handleNoMatch(Set<T> mappings, String lookupPath, HttpServletRequest request)_			throws Exception {__		return null__	};invoked,when,no,matching,mapping,is,not,found,param,mappings,all,registered,mappings,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,request,the,current,request,throws,servlet,exception,in,case,of,errors;protected,handler,method,handle,no,match,set,t,mappings,string,lookup,path,http,servlet,request,request,throws,exception,return,null
AbstractHandlerMethodMapping -> protected HandlerMethod handleNoMatch(Set<T> mappings, String lookupPath, HttpServletRequest request) 			throws Exception;1468417354;Invoked when no matching mapping is not found._@param mappings all registered mappings_@param lookupPath mapping lookup path within the current servlet mapping_@param request the current request_@throws ServletException in case of errors;protected HandlerMethod handleNoMatch(Set<T> mappings, String lookupPath, HttpServletRequest request)_			throws Exception {__		return null__	};invoked,when,no,matching,mapping,is,not,found,param,mappings,all,registered,mappings,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,request,the,current,request,throws,servlet,exception,in,case,of,errors;protected,handler,method,handle,no,match,set,t,mappings,string,lookup,path,http,servlet,request,request,throws,exception,return,null
AbstractHandlerMethodMapping -> protected HandlerMethod handleNoMatch(Set<T> mappings, String lookupPath, HttpServletRequest request) 			throws Exception;1468596479;Invoked when no matching mapping is not found._@param mappings all registered mappings_@param lookupPath mapping lookup path within the current servlet mapping_@param request the current request_@throws ServletException in case of errors;protected HandlerMethod handleNoMatch(Set<T> mappings, String lookupPath, HttpServletRequest request)_			throws Exception {__		return null__	};invoked,when,no,matching,mapping,is,not,found,param,mappings,all,registered,mappings,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,request,the,current,request,throws,servlet,exception,in,case,of,errors;protected,handler,method,handle,no,match,set,t,mappings,string,lookup,path,http,servlet,request,request,throws,exception,return,null
AbstractHandlerMethodMapping -> protected HandlerMethod handleNoMatch(Set<T> mappings, String lookupPath, HttpServletRequest request) 			throws Exception;1474905889;Invoked when no matching mapping is not found._@param mappings all registered mappings_@param lookupPath mapping lookup path within the current servlet mapping_@param request the current request_@throws ServletException in case of errors;protected HandlerMethod handleNoMatch(Set<T> mappings, String lookupPath, HttpServletRequest request)_			throws Exception {__		return null__	};invoked,when,no,matching,mapping,is,not,found,param,mappings,all,registered,mappings,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,request,the,current,request,throws,servlet,exception,in,case,of,errors;protected,handler,method,handle,no,match,set,t,mappings,string,lookup,path,http,servlet,request,request,throws,exception,return,null
AbstractHandlerMethodMapping -> protected HandlerMethod handleNoMatch(Set<T> mappings, String lookupPath, HttpServletRequest request) 			throws Exception;1481813056;Invoked when no matching mapping is not found._@param mappings all registered mappings_@param lookupPath mapping lookup path within the current servlet mapping_@param request the current request_@throws ServletException in case of errors;protected HandlerMethod handleNoMatch(Set<T> mappings, String lookupPath, HttpServletRequest request)_			throws Exception {__		return null__	};invoked,when,no,matching,mapping,is,not,found,param,mappings,all,registered,mappings,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,request,the,current,request,throws,servlet,exception,in,case,of,errors;protected,handler,method,handle,no,match,set,t,mappings,string,lookup,path,http,servlet,request,request,throws,exception,return,null
AbstractHandlerMethodMapping -> protected HandlerMethod handleNoMatch(Set<T> mappings, String lookupPath, HttpServletRequest request) 			throws Exception;1485810955;Invoked when no matching mapping is not found._@param mappings all registered mappings_@param lookupPath mapping lookup path within the current servlet mapping_@param request the current request_@throws ServletException in case of errors;protected HandlerMethod handleNoMatch(Set<T> mappings, String lookupPath, HttpServletRequest request)_			throws Exception {__		return null__	};invoked,when,no,matching,mapping,is,not,found,param,mappings,all,registered,mappings,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,request,the,current,request,throws,servlet,exception,in,case,of,errors;protected,handler,method,handle,no,match,set,t,mappings,string,lookup,path,http,servlet,request,request,throws,exception,return,null
AbstractHandlerMethodMapping -> protected CorsConfiguration initCorsConfiguration(Object handler, Method method, T mapping);1430734105;Extract and return the CORS configuration for the mapping.;protected CorsConfiguration initCorsConfiguration(Object handler, Method method, T mapping) {_		return null__	};extract,and,return,the,cors,configuration,for,the,mapping;protected,cors,configuration,init,cors,configuration,object,handler,method,method,t,mapping,return,null
AbstractHandlerMethodMapping -> protected CorsConfiguration initCorsConfiguration(Object handler, Method method, T mapping);1430734106;Extract and return the CORS configuration for the mapping.;protected CorsConfiguration initCorsConfiguration(Object handler, Method method, T mapping) {_		return null__	};extract,and,return,the,cors,configuration,for,the,mapping;protected,cors,configuration,init,cors,configuration,object,handler,method,method,t,mapping,return,null
AbstractHandlerMethodMapping -> protected CorsConfiguration initCorsConfiguration(Object handler, Method method, T mapping);1430774689;Extract and return the CORS configuration for the mapping.;protected CorsConfiguration initCorsConfiguration(Object handler, Method method, T mapping) {_		return null__	};extract,and,return,the,cors,configuration,for,the,mapping;protected,cors,configuration,init,cors,configuration,object,handler,method,method,t,mapping,return,null
AbstractHandlerMethodMapping -> protected CorsConfiguration initCorsConfiguration(Object handler, Method method, T mapping);1430844966;Extract and return the CORS configuration for the mapping.;protected CorsConfiguration initCorsConfiguration(Object handler, Method method, T mapping) {_		return null__	};extract,and,return,the,cors,configuration,for,the,mapping;protected,cors,configuration,init,cors,configuration,object,handler,method,method,t,mapping,return,null
AbstractHandlerMethodMapping -> protected CorsConfiguration initCorsConfiguration(Object handler, Method method, T mapping);1430844967;Extract and return the CORS configuration for the mapping.;protected CorsConfiguration initCorsConfiguration(Object handler, Method method, T mapping) {_		return null__	};extract,and,return,the,cors,configuration,for,the,mapping;protected,cors,configuration,init,cors,configuration,object,handler,method,method,t,mapping,return,null
AbstractHandlerMethodMapping -> protected CorsConfiguration initCorsConfiguration(Object handler, Method method, T mapping);1431730371;Extract and return the CORS configuration for the mapping.;protected CorsConfiguration initCorsConfiguration(Object handler, Method method, T mapping) {_		return null__	};extract,and,return,the,cors,configuration,for,the,mapping;protected,cors,configuration,init,cors,configuration,object,handler,method,method,t,mapping,return,null
AbstractHandlerMethodMapping -> protected CorsConfiguration initCorsConfiguration(Object handler, Method method, T mapping);1439294371;Extract and return the CORS configuration for the mapping.;protected CorsConfiguration initCorsConfiguration(Object handler, Method method, T mapping) {_		return null__	};extract,and,return,the,cors,configuration,for,the,mapping;protected,cors,configuration,init,cors,configuration,object,handler,method,method,t,mapping,return,null
AbstractHandlerMethodMapping -> protected CorsConfiguration initCorsConfiguration(Object handler, Method method, T mapping);1447077465;Extract and return the CORS configuration for the mapping.;protected CorsConfiguration initCorsConfiguration(Object handler, Method method, T mapping) {_		return null__	};extract,and,return,the,cors,configuration,for,the,mapping;protected,cors,configuration,init,cors,configuration,object,handler,method,method,t,mapping,return,null
AbstractHandlerMethodMapping -> protected CorsConfiguration initCorsConfiguration(Object handler, Method method, T mapping);1448483163;Extract and return the CORS configuration for the mapping.;protected CorsConfiguration initCorsConfiguration(Object handler, Method method, T mapping) {_		return null__	};extract,and,return,the,cors,configuration,for,the,mapping;protected,cors,configuration,init,cors,configuration,object,handler,method,method,t,mapping,return,null
AbstractHandlerMethodMapping -> protected CorsConfiguration initCorsConfiguration(Object handler, Method method, T mapping);1452685925;Extract and return the CORS configuration for the mapping.;protected CorsConfiguration initCorsConfiguration(Object handler, Method method, T mapping) {_		return null__	};extract,and,return,the,cors,configuration,for,the,mapping;protected,cors,configuration,init,cors,configuration,object,handler,method,method,t,mapping,return,null
AbstractHandlerMethodMapping -> protected CorsConfiguration initCorsConfiguration(Object handler, Method method, T mapping);1452873718;Extract and return the CORS configuration for the mapping.;protected CorsConfiguration initCorsConfiguration(Object handler, Method method, T mapping) {_		return null__	};extract,and,return,the,cors,configuration,for,the,mapping;protected,cors,configuration,init,cors,configuration,object,handler,method,method,t,mapping,return,null
AbstractHandlerMethodMapping -> protected CorsConfiguration initCorsConfiguration(Object handler, Method method, T mapping);1453843788;Extract and return the CORS configuration for the mapping.;protected CorsConfiguration initCorsConfiguration(Object handler, Method method, T mapping) {_		return null__	};extract,and,return,the,cors,configuration,for,the,mapping;protected,cors,configuration,init,cors,configuration,object,handler,method,method,t,mapping,return,null
AbstractHandlerMethodMapping -> protected CorsConfiguration initCorsConfiguration(Object handler, Method method, T mapping);1467730834;Extract and return the CORS configuration for the mapping.;protected CorsConfiguration initCorsConfiguration(Object handler, Method method, T mapping) {_		return null__	};extract,and,return,the,cors,configuration,for,the,mapping;protected,cors,configuration,init,cors,configuration,object,handler,method,method,t,mapping,return,null
AbstractHandlerMethodMapping -> protected CorsConfiguration initCorsConfiguration(Object handler, Method method, T mapping);1468417354;Extract and return the CORS configuration for the mapping.;protected CorsConfiguration initCorsConfiguration(Object handler, Method method, T mapping) {_		return null__	};extract,and,return,the,cors,configuration,for,the,mapping;protected,cors,configuration,init,cors,configuration,object,handler,method,method,t,mapping,return,null
AbstractHandlerMethodMapping -> protected CorsConfiguration initCorsConfiguration(Object handler, Method method, T mapping);1468596479;Extract and return the CORS configuration for the mapping.;protected CorsConfiguration initCorsConfiguration(Object handler, Method method, T mapping) {_		return null__	};extract,and,return,the,cors,configuration,for,the,mapping;protected,cors,configuration,init,cors,configuration,object,handler,method,method,t,mapping,return,null
AbstractHandlerMethodMapping -> protected CorsConfiguration initCorsConfiguration(Object handler, Method method, T mapping);1474905889;Extract and return the CORS configuration for the mapping.;protected CorsConfiguration initCorsConfiguration(Object handler, Method method, T mapping) {_		return null__	};extract,and,return,the,cors,configuration,for,the,mapping;protected,cors,configuration,init,cors,configuration,object,handler,method,method,t,mapping,return,null
AbstractHandlerMethodMapping -> protected CorsConfiguration initCorsConfiguration(Object handler, Method method, T mapping);1481813056;Extract and return the CORS configuration for the mapping.;protected CorsConfiguration initCorsConfiguration(Object handler, Method method, T mapping) {_		return null__	};extract,and,return,the,cors,configuration,for,the,mapping;protected,cors,configuration,init,cors,configuration,object,handler,method,method,t,mapping,return,null
AbstractHandlerMethodMapping -> protected CorsConfiguration initCorsConfiguration(Object handler, Method method, T mapping);1485810955;Extract and return the CORS configuration for the mapping.;protected CorsConfiguration initCorsConfiguration(Object handler, Method method, T mapping) {_		return null__	};extract,and,return,the,cors,configuration,for,the,mapping;protected,cors,configuration,init,cors,configuration,object,handler,method,method,t,mapping,return,null
AbstractHandlerMethodMapping -> protected void processCandidateBean(String beanName);1533943217;Determine the type of the specified candidate bean and call_{@link #detectHandlerMethods} if identified as a handler type._<p>This implementation avoids bean creation through checking_{@link org.springframework.beans.factory.BeanFactory#getType}_and calling {@link #detectHandlerMethods} with the bean name._@param beanName the name of the candidate bean_@since 5.1_@see #isHandler_@see #detectHandlerMethods;protected void processCandidateBean(String beanName) {_		Class<?> beanType = null__		try {_			beanType = obtainApplicationContext().getType(beanName)__		}_		catch (Throwable ex) {_			_			if (logger.isTraceEnabled()) {_				logger.trace("Could not resolve type for bean '" + beanName + "'", ex)__			}_		}_		if (beanType != null && isHandler(beanType)) {_			detectHandlerMethods(beanName)__		}_	};determine,the,type,of,the,specified,candidate,bean,and,call,link,detect,handler,methods,if,identified,as,a,handler,type,p,this,implementation,avoids,bean,creation,through,checking,link,org,springframework,beans,factory,bean,factory,get,type,and,calling,link,detect,handler,methods,with,the,bean,name,param,bean,name,the,name,of,the,candidate,bean,since,5,1,see,is,handler,see,detect,handler,methods;protected,void,process,candidate,bean,string,bean,name,class,bean,type,null,try,bean,type,obtain,application,context,get,type,bean,name,catch,throwable,ex,if,logger,is,trace,enabled,logger,trace,could,not,resolve,type,for,bean,bean,name,ex,if,bean,type,null,is,handler,bean,type,detect,handler,methods,bean,name
AbstractHandlerMethodMapping -> protected void processCandidateBean(String beanName);1542407418;Determine the type of the specified candidate bean and call_{@link #detectHandlerMethods} if identified as a handler type._<p>This implementation avoids bean creation through checking_{@link org.springframework.beans.factory.BeanFactory#getType}_and calling {@link #detectHandlerMethods} with the bean name._@param beanName the name of the candidate bean_@since 5.1_@see #isHandler_@see #detectHandlerMethods;protected void processCandidateBean(String beanName) {_		Class<?> beanType = null__		try {_			beanType = obtainApplicationContext().getType(beanName)__		}_		catch (Throwable ex) {_			_			if (logger.isTraceEnabled()) {_				logger.trace("Could not resolve type for bean '" + beanName + "'", ex)__			}_		}_		if (beanType != null && isHandler(beanType)) {_			detectHandlerMethods(beanName)__		}_	};determine,the,type,of,the,specified,candidate,bean,and,call,link,detect,handler,methods,if,identified,as,a,handler,type,p,this,implementation,avoids,bean,creation,through,checking,link,org,springframework,beans,factory,bean,factory,get,type,and,calling,link,detect,handler,methods,with,the,bean,name,param,bean,name,the,name,of,the,candidate,bean,since,5,1,see,is,handler,see,detect,handler,methods;protected,void,process,candidate,bean,string,bean,name,class,bean,type,null,try,bean,type,obtain,application,context,get,type,bean,name,catch,throwable,ex,if,logger,is,trace,enabled,logger,trace,could,not,resolve,type,for,bean,bean,name,ex,if,bean,type,null,is,handler,bean,type,detect,handler,methods,bean,name
AbstractHandlerMethodMapping -> protected void processCandidateBean(String beanName);1542771062;Determine the type of the specified candidate bean and call_{@link #detectHandlerMethods} if identified as a handler type._<p>This implementation avoids bean creation through checking_{@link org.springframework.beans.factory.BeanFactory#getType}_and calling {@link #detectHandlerMethods} with the bean name._@param beanName the name of the candidate bean_@since 5.1_@see #isHandler_@see #detectHandlerMethods;protected void processCandidateBean(String beanName) {_		Class<?> beanType = null__		try {_			beanType = obtainApplicationContext().getType(beanName)__		}_		catch (Throwable ex) {_			_			if (logger.isTraceEnabled()) {_				logger.trace("Could not resolve type for bean '" + beanName + "'", ex)__			}_		}_		if (beanType != null && isHandler(beanType)) {_			detectHandlerMethods(beanName)__		}_	};determine,the,type,of,the,specified,candidate,bean,and,call,link,detect,handler,methods,if,identified,as,a,handler,type,p,this,implementation,avoids,bean,creation,through,checking,link,org,springframework,beans,factory,bean,factory,get,type,and,calling,link,detect,handler,methods,with,the,bean,name,param,bean,name,the,name,of,the,candidate,bean,since,5,1,see,is,handler,see,detect,handler,methods;protected,void,process,candidate,bean,string,bean,name,class,bean,type,null,try,bean,type,obtain,application,context,get,type,bean,name,catch,throwable,ex,if,logger,is,trace,enabled,logger,trace,could,not,resolve,type,for,bean,bean,name,ex,if,bean,type,null,is,handler,bean,type,detect,handler,methods,bean,name
AbstractHandlerMethodMapping -> protected void processCandidateBean(String beanName);1548427561;Determine the type of the specified candidate bean and call_{@link #detectHandlerMethods} if identified as a handler type._<p>This implementation avoids bean creation through checking_{@link org.springframework.beans.factory.BeanFactory#getType}_and calling {@link #detectHandlerMethods} with the bean name._@param beanName the name of the candidate bean_@since 5.1_@see #isHandler_@see #detectHandlerMethods;protected void processCandidateBean(String beanName) {_		Class<?> beanType = null__		try {_			beanType = obtainApplicationContext().getType(beanName)__		}_		catch (Throwable ex) {_			_			if (logger.isTraceEnabled()) {_				logger.trace("Could not resolve type for bean '" + beanName + "'", ex)__			}_		}_		if (beanType != null && isHandler(beanType)) {_			detectHandlerMethods(beanName)__		}_	};determine,the,type,of,the,specified,candidate,bean,and,call,link,detect,handler,methods,if,identified,as,a,handler,type,p,this,implementation,avoids,bean,creation,through,checking,link,org,springframework,beans,factory,bean,factory,get,type,and,calling,link,detect,handler,methods,with,the,bean,name,param,bean,name,the,name,of,the,candidate,bean,since,5,1,see,is,handler,see,detect,handler,methods;protected,void,process,candidate,bean,string,bean,name,class,bean,type,null,try,bean,type,obtain,application,context,get,type,bean,name,catch,throwable,ex,if,logger,is,trace,enabled,logger,trace,could,not,resolve,type,for,bean,bean,name,ex,if,bean,type,null,is,handler,bean,type,detect,handler,methods,bean,name
AbstractHandlerMethodMapping -> protected void processCandidateBean(String beanName);1551093473;Determine the type of the specified candidate bean and call_{@link #detectHandlerMethods} if identified as a handler type._<p>This implementation avoids bean creation through checking_{@link org.springframework.beans.factory.BeanFactory#getType}_and calling {@link #detectHandlerMethods} with the bean name._@param beanName the name of the candidate bean_@since 5.1_@see #isHandler_@see #detectHandlerMethods;protected void processCandidateBean(String beanName) {_		Class<?> beanType = null__		try {_			beanType = obtainApplicationContext().getType(beanName)__		}_		catch (Throwable ex) {_			_			if (logger.isTraceEnabled()) {_				logger.trace("Could not resolve type for bean '" + beanName + "'", ex)__			}_		}_		if (beanType != null && isHandler(beanType)) {_			detectHandlerMethods(beanName)__		}_	};determine,the,type,of,the,specified,candidate,bean,and,call,link,detect,handler,methods,if,identified,as,a,handler,type,p,this,implementation,avoids,bean,creation,through,checking,link,org,springframework,beans,factory,bean,factory,get,type,and,calling,link,detect,handler,methods,with,the,bean,name,param,bean,name,the,name,of,the,candidate,bean,since,5,1,see,is,handler,see,detect,handler,methods;protected,void,process,candidate,bean,string,bean,name,class,bean,type,null,try,bean,type,obtain,application,context,get,type,bean,name,catch,throwable,ex,if,logger,is,trace,enabled,logger,trace,could,not,resolve,type,for,bean,bean,name,ex,if,bean,type,null,is,handler,bean,type,detect,handler,methods,bean,name
AbstractHandlerMethodMapping -> protected abstract Set<String> getMappingPathPatterns(T mapping)_;1328020251;Extract and return the URL paths contained in a mapping.;protected abstract Set<String> getMappingPathPatterns(T mapping)_;extract,and,return,the,url,paths,contained,in,a,mapping;protected,abstract,set,string,get,mapping,path,patterns,t,mapping
AbstractHandlerMethodMapping -> protected abstract Set<String> getMappingPathPatterns(T mapping)_;1328022204;Extract and return the URL paths contained in a mapping.;protected abstract Set<String> getMappingPathPatterns(T mapping)_;extract,and,return,the,url,paths,contained,in,a,mapping;protected,abstract,set,string,get,mapping,path,patterns,t,mapping
AbstractHandlerMethodMapping -> protected abstract Set<String> getMappingPathPatterns(T mapping)_;1336682556;Extract and return the URL paths contained in a mapping.;protected abstract Set<String> getMappingPathPatterns(T mapping)_;extract,and,return,the,url,paths,contained,in,a,mapping;protected,abstract,set,string,get,mapping,path,patterns,t,mapping
AbstractHandlerMethodMapping -> protected abstract Set<String> getMappingPathPatterns(T mapping)_;1341441111;Extract and return the URL paths contained in a mapping.;protected abstract Set<String> getMappingPathPatterns(T mapping)_;extract,and,return,the,url,paths,contained,in,a,mapping;protected,abstract,set,string,get,mapping,path,patterns,t,mapping
AbstractHandlerMethodMapping -> protected abstract Set<String> getMappingPathPatterns(T mapping)_;1356735495;Extract and return the URL paths contained in a mapping.;protected abstract Set<String> getMappingPathPatterns(T mapping)_;extract,and,return,the,url,paths,contained,in,a,mapping;protected,abstract,set,string,get,mapping,path,patterns,t,mapping
AbstractHandlerMethodMapping -> protected abstract Set<String> getMappingPathPatterns(T mapping)_;1357119239;Extract and return the URL paths contained in a mapping.;protected abstract Set<String> getMappingPathPatterns(T mapping)_;extract,and,return,the,url,paths,contained,in,a,mapping;protected,abstract,set,string,get,mapping,path,patterns,t,mapping
AbstractHandlerMethodMapping -> protected abstract Set<String> getMappingPathPatterns(T mapping)_;1362408075;Extract and return the URL paths contained in a mapping.;protected abstract Set<String> getMappingPathPatterns(T mapping)_;extract,and,return,the,url,paths,contained,in,a,mapping;protected,abstract,set,string,get,mapping,path,patterns,t,mapping
AbstractHandlerMethodMapping -> protected abstract Set<String> getMappingPathPatterns(T mapping)_;1368482696;Extract and return the URL paths contained in a mapping.;protected abstract Set<String> getMappingPathPatterns(T mapping)_;extract,and,return,the,url,paths,contained,in,a,mapping;protected,abstract,set,string,get,mapping,path,patterns,t,mapping
AbstractHandlerMethodMapping -> protected abstract Set<String> getMappingPathPatterns(T mapping)_;1368581529;Extract and return the URL paths contained in a mapping.;protected abstract Set<String> getMappingPathPatterns(T mapping)_;extract,and,return,the,url,paths,contained,in,a,mapping;protected,abstract,set,string,get,mapping,path,patterns,t,mapping
AbstractHandlerMethodMapping -> protected abstract Set<String> getMappingPathPatterns(T mapping)_;1382665849;Extract and return the URL paths contained in a mapping.;protected abstract Set<String> getMappingPathPatterns(T mapping)_;extract,and,return,the,url,paths,contained,in,a,mapping;protected,abstract,set,string,get,mapping,path,patterns,t,mapping
AbstractHandlerMethodMapping -> protected abstract Set<String> getMappingPathPatterns(T mapping)_;1392160296;Extract and return the URL paths contained in a mapping.;protected abstract Set<String> getMappingPathPatterns(T mapping)_;extract,and,return,the,url,paths,contained,in,a,mapping;protected,abstract,set,string,get,mapping,path,patterns,t,mapping
AbstractHandlerMethodMapping -> protected abstract Set<String> getMappingPathPatterns(T mapping)_;1392337816;Extract and return the URL paths contained in a mapping.;protected abstract Set<String> getMappingPathPatterns(T mapping)_;extract,and,return,the,url,paths,contained,in,a,mapping;protected,abstract,set,string,get,mapping,path,patterns,t,mapping
AbstractHandlerMethodMapping -> protected abstract Set<String> getMappingPathPatterns(T mapping)_;1392407320;Extract and return the URL paths contained in a mapping.;protected abstract Set<String> getMappingPathPatterns(T mapping)_;extract,and,return,the,url,paths,contained,in,a,mapping;protected,abstract,set,string,get,mapping,path,patterns,t,mapping
AbstractHandlerMethodMapping -> protected abstract Set<String> getMappingPathPatterns(T mapping)_;1395655323;Extract and return the URL paths contained in a mapping.;protected abstract Set<String> getMappingPathPatterns(T mapping)_;extract,and,return,the,url,paths,contained,in,a,mapping;protected,abstract,set,string,get,mapping,path,patterns,t,mapping
AbstractHandlerMethodMapping -> protected abstract Set<String> getMappingPathPatterns(T mapping)_;1399404473;Extract and return the URL paths contained in a mapping.;protected abstract Set<String> getMappingPathPatterns(T mapping)_;extract,and,return,the,url,paths,contained,in,a,mapping;protected,abstract,set,string,get,mapping,path,patterns,t,mapping
AbstractHandlerMethodMapping -> protected abstract Set<String> getMappingPathPatterns(T mapping)_;1426869344;Extract and return the URL paths contained in a mapping.;protected abstract Set<String> getMappingPathPatterns(T mapping)_;extract,and,return,the,url,paths,contained,in,a,mapping;protected,abstract,set,string,get,mapping,path,patterns,t,mapping
AbstractHandlerMethodMapping -> protected abstract Set<String> getMappingPathPatterns(T mapping)_;1427240641;Extract and return the URL paths contained in a mapping.;protected abstract Set<String> getMappingPathPatterns(T mapping)_;extract,and,return,the,url,paths,contained,in,a,mapping;protected,abstract,set,string,get,mapping,path,patterns,t,mapping
AbstractHandlerMethodMapping -> protected abstract Set<String> getMappingPathPatterns(T mapping)_;1427983931;Extract and return the URL paths contained in a mapping.;protected abstract Set<String> getMappingPathPatterns(T mapping)_;extract,and,return,the,url,paths,contained,in,a,mapping;protected,abstract,set,string,get,mapping,path,patterns,t,mapping
AbstractHandlerMethodMapping -> protected abstract Set<String> getMappingPathPatterns(T mapping)_;1430734105;Extract and return the URL paths contained in a mapping.;protected abstract Set<String> getMappingPathPatterns(T mapping)_;extract,and,return,the,url,paths,contained,in,a,mapping;protected,abstract,set,string,get,mapping,path,patterns,t,mapping
AbstractHandlerMethodMapping -> protected abstract Set<String> getMappingPathPatterns(T mapping)_;1430734105;Extract and return the URL paths contained in a mapping.;protected abstract Set<String> getMappingPathPatterns(T mapping)_;extract,and,return,the,url,paths,contained,in,a,mapping;protected,abstract,set,string,get,mapping,path,patterns,t,mapping
AbstractHandlerMethodMapping -> protected abstract Set<String> getMappingPathPatterns(T mapping)_;1430734106;Extract and return the URL paths contained in a mapping.;protected abstract Set<String> getMappingPathPatterns(T mapping)_;extract,and,return,the,url,paths,contained,in,a,mapping;protected,abstract,set,string,get,mapping,path,patterns,t,mapping
AbstractHandlerMethodMapping -> protected abstract Set<String> getMappingPathPatterns(T mapping)_;1430774689;Extract and return the URL paths contained in a mapping.;protected abstract Set<String> getMappingPathPatterns(T mapping)_;extract,and,return,the,url,paths,contained,in,a,mapping;protected,abstract,set,string,get,mapping,path,patterns,t,mapping
AbstractHandlerMethodMapping -> protected abstract Set<String> getMappingPathPatterns(T mapping)_;1430844966;Extract and return the URL paths contained in a mapping.;protected abstract Set<String> getMappingPathPatterns(T mapping)_;extract,and,return,the,url,paths,contained,in,a,mapping;protected,abstract,set,string,get,mapping,path,patterns,t,mapping
AbstractHandlerMethodMapping -> protected abstract Set<String> getMappingPathPatterns(T mapping)_;1430844967;Extract and return the URL paths contained in a mapping.;protected abstract Set<String> getMappingPathPatterns(T mapping)_;extract,and,return,the,url,paths,contained,in,a,mapping;protected,abstract,set,string,get,mapping,path,patterns,t,mapping
AbstractHandlerMethodMapping -> protected abstract Set<String> getMappingPathPatterns(T mapping)_;1431730371;Extract and return the URL paths contained in a mapping.;protected abstract Set<String> getMappingPathPatterns(T mapping)_;extract,and,return,the,url,paths,contained,in,a,mapping;protected,abstract,set,string,get,mapping,path,patterns,t,mapping
AbstractHandlerMethodMapping -> protected abstract Set<String> getMappingPathPatterns(T mapping)_;1439294371;Extract and return the URL paths contained in a mapping.;protected abstract Set<String> getMappingPathPatterns(T mapping)_;extract,and,return,the,url,paths,contained,in,a,mapping;protected,abstract,set,string,get,mapping,path,patterns,t,mapping
AbstractHandlerMethodMapping -> protected abstract Set<String> getMappingPathPatterns(T mapping)_;1447077465;Extract and return the URL paths contained in a mapping.;protected abstract Set<String> getMappingPathPatterns(T mapping)_;extract,and,return,the,url,paths,contained,in,a,mapping;protected,abstract,set,string,get,mapping,path,patterns,t,mapping
AbstractHandlerMethodMapping -> protected abstract Set<String> getMappingPathPatterns(T mapping)_;1448483163;Extract and return the URL paths contained in a mapping.;protected abstract Set<String> getMappingPathPatterns(T mapping)_;extract,and,return,the,url,paths,contained,in,a,mapping;protected,abstract,set,string,get,mapping,path,patterns,t,mapping
AbstractHandlerMethodMapping -> protected abstract Set<String> getMappingPathPatterns(T mapping)_;1452685925;Extract and return the URL paths contained in a mapping.;protected abstract Set<String> getMappingPathPatterns(T mapping)_;extract,and,return,the,url,paths,contained,in,a,mapping;protected,abstract,set,string,get,mapping,path,patterns,t,mapping
AbstractHandlerMethodMapping -> protected abstract Set<String> getMappingPathPatterns(T mapping)_;1452873718;Extract and return the URL paths contained in a mapping.;protected abstract Set<String> getMappingPathPatterns(T mapping)_;extract,and,return,the,url,paths,contained,in,a,mapping;protected,abstract,set,string,get,mapping,path,patterns,t,mapping
AbstractHandlerMethodMapping -> protected abstract Set<String> getMappingPathPatterns(T mapping)_;1453843788;Extract and return the URL paths contained in a mapping.;protected abstract Set<String> getMappingPathPatterns(T mapping)_;extract,and,return,the,url,paths,contained,in,a,mapping;protected,abstract,set,string,get,mapping,path,patterns,t,mapping
AbstractHandlerMethodMapping -> protected abstract Set<String> getMappingPathPatterns(T mapping)_;1467730834;Extract and return the URL paths contained in a mapping.;protected abstract Set<String> getMappingPathPatterns(T mapping)_;extract,and,return,the,url,paths,contained,in,a,mapping;protected,abstract,set,string,get,mapping,path,patterns,t,mapping
AbstractHandlerMethodMapping -> protected abstract Set<String> getMappingPathPatterns(T mapping)_;1468417354;Extract and return the URL paths contained in a mapping.;protected abstract Set<String> getMappingPathPatterns(T mapping)_;extract,and,return,the,url,paths,contained,in,a,mapping;protected,abstract,set,string,get,mapping,path,patterns,t,mapping
AbstractHandlerMethodMapping -> protected abstract Set<String> getMappingPathPatterns(T mapping)_;1468596479;Extract and return the URL paths contained in a mapping.;protected abstract Set<String> getMappingPathPatterns(T mapping)_;extract,and,return,the,url,paths,contained,in,a,mapping;protected,abstract,set,string,get,mapping,path,patterns,t,mapping
AbstractHandlerMethodMapping -> protected abstract Set<String> getMappingPathPatterns(T mapping)_;1474905889;Extract and return the URL paths contained in a mapping.;protected abstract Set<String> getMappingPathPatterns(T mapping)_;extract,and,return,the,url,paths,contained,in,a,mapping;protected,abstract,set,string,get,mapping,path,patterns,t,mapping
AbstractHandlerMethodMapping -> protected abstract Set<String> getMappingPathPatterns(T mapping)_;1481813056;Extract and return the URL paths contained in a mapping.;protected abstract Set<String> getMappingPathPatterns(T mapping)_;extract,and,return,the,url,paths,contained,in,a,mapping;protected,abstract,set,string,get,mapping,path,patterns,t,mapping
AbstractHandlerMethodMapping -> protected abstract Set<String> getMappingPathPatterns(T mapping)_;1485810955;Extract and return the URL paths contained in a mapping.;protected abstract Set<String> getMappingPathPatterns(T mapping)_;extract,and,return,the,url,paths,contained,in,a,mapping;protected,abstract,set,string,get,mapping,path,patterns,t,mapping
AbstractHandlerMethodMapping -> protected abstract Set<String> getMappingPathPatterns(T mapping)_;1495868221;Extract and return the URL paths contained in a mapping.;protected abstract Set<String> getMappingPathPatterns(T mapping)_;extract,and,return,the,url,paths,contained,in,a,mapping;protected,abstract,set,string,get,mapping,path,patterns,t,mapping
AbstractHandlerMethodMapping -> protected abstract Set<String> getMappingPathPatterns(T mapping)_;1496837955;Extract and return the URL paths contained in a mapping.;protected abstract Set<String> getMappingPathPatterns(T mapping)_;extract,and,return,the,url,paths,contained,in,a,mapping;protected,abstract,set,string,get,mapping,path,patterns,t,mapping
AbstractHandlerMethodMapping -> protected abstract Set<String> getMappingPathPatterns(T mapping)_;1497251962;Extract and return the URL paths contained in a mapping.;protected abstract Set<String> getMappingPathPatterns(T mapping)_;extract,and,return,the,url,paths,contained,in,a,mapping;protected,abstract,set,string,get,mapping,path,patterns,t,mapping
AbstractHandlerMethodMapping -> protected abstract Set<String> getMappingPathPatterns(T mapping)_;1498780456;Extract and return the URL paths contained in a mapping.;protected abstract Set<String> getMappingPathPatterns(T mapping)_;extract,and,return,the,url,paths,contained,in,a,mapping;protected,abstract,set,string,get,mapping,path,patterns,t,mapping
AbstractHandlerMethodMapping -> protected abstract Set<String> getMappingPathPatterns(T mapping)_;1518772998;Extract and return the URL paths contained in a mapping.;protected abstract Set<String> getMappingPathPatterns(T mapping)_;extract,and,return,the,url,paths,contained,in,a,mapping;protected,abstract,set,string,get,mapping,path,patterns,t,mapping
AbstractHandlerMethodMapping -> protected abstract Set<String> getMappingPathPatterns(T mapping)_;1522103912;Extract and return the URL paths contained in a mapping.;protected abstract Set<String> getMappingPathPatterns(T mapping)_;extract,and,return,the,url,paths,contained,in,a,mapping;protected,abstract,set,string,get,mapping,path,patterns,t,mapping
AbstractHandlerMethodMapping -> protected abstract Set<String> getMappingPathPatterns(T mapping)_;1522843494;Extract and return the URL paths contained in a mapping.;protected abstract Set<String> getMappingPathPatterns(T mapping)_;extract,and,return,the,url,paths,contained,in,a,mapping;protected,abstract,set,string,get,mapping,path,patterns,t,mapping
AbstractHandlerMethodMapping -> protected abstract Set<String> getMappingPathPatterns(T mapping)_;1529361191;Extract and return the URL paths contained in a mapping.;protected abstract Set<String> getMappingPathPatterns(T mapping)_;extract,and,return,the,url,paths,contained,in,a,mapping;protected,abstract,set,string,get,mapping,path,patterns,t,mapping
AbstractHandlerMethodMapping -> protected abstract Set<String> getMappingPathPatterns(T mapping)_;1529721864;Extract and return the URL paths contained in a mapping.;protected abstract Set<String> getMappingPathPatterns(T mapping)_;extract,and,return,the,url,paths,contained,in,a,mapping;protected,abstract,set,string,get,mapping,path,patterns,t,mapping
AbstractHandlerMethodMapping -> protected abstract Set<String> getMappingPathPatterns(T mapping)_;1530174524;Extract and return the URL paths contained in a mapping.;protected abstract Set<String> getMappingPathPatterns(T mapping)_;extract,and,return,the,url,paths,contained,in,a,mapping;protected,abstract,set,string,get,mapping,path,patterns,t,mapping
AbstractHandlerMethodMapping -> protected abstract Set<String> getMappingPathPatterns(T mapping)_;1530174524;Extract and return the URL paths contained in a mapping.;protected abstract Set<String> getMappingPathPatterns(T mapping)_;extract,and,return,the,url,paths,contained,in,a,mapping;protected,abstract,set,string,get,mapping,path,patterns,t,mapping
AbstractHandlerMethodMapping -> protected abstract Set<String> getMappingPathPatterns(T mapping)_;1533943217;Extract and return the URL paths contained in a mapping.;protected abstract Set<String> getMappingPathPatterns(T mapping)_;extract,and,return,the,url,paths,contained,in,a,mapping;protected,abstract,set,string,get,mapping,path,patterns,t,mapping
AbstractHandlerMethodMapping -> protected abstract Set<String> getMappingPathPatterns(T mapping)_;1542407418;Extract and return the URL paths contained in a mapping.;protected abstract Set<String> getMappingPathPatterns(T mapping)_;extract,and,return,the,url,paths,contained,in,a,mapping;protected,abstract,set,string,get,mapping,path,patterns,t,mapping
AbstractHandlerMethodMapping -> protected abstract Set<String> getMappingPathPatterns(T mapping)_;1542771062;Extract and return the URL paths contained in a mapping.;protected abstract Set<String> getMappingPathPatterns(T mapping)_;extract,and,return,the,url,paths,contained,in,a,mapping;protected,abstract,set,string,get,mapping,path,patterns,t,mapping
AbstractHandlerMethodMapping -> protected abstract Set<String> getMappingPathPatterns(T mapping)_;1548427561;Extract and return the URL paths contained in a mapping.;protected abstract Set<String> getMappingPathPatterns(T mapping)_;extract,and,return,the,url,paths,contained,in,a,mapping;protected,abstract,set,string,get,mapping,path,patterns,t,mapping
AbstractHandlerMethodMapping -> protected abstract Set<String> getMappingPathPatterns(T mapping)_;1551093473;Extract and return the URL paths contained in a mapping.;protected abstract Set<String> getMappingPathPatterns(T mapping)_;extract,and,return,the,url,paths,contained,in,a,mapping;protected,abstract,set,string,get,mapping,path,patterns,t,mapping
AbstractHandlerMethodMapping -> MappingRegistry -> public CorsConfiguration getCorsConfiguration(HandlerMethod handlerMethod);1430734106;Return CORS configuration. Thread-safe for concurrent use.;public CorsConfiguration getCorsConfiguration(HandlerMethod handlerMethod) {_			Method method = handlerMethod.getMethod()__			MappingDefinition<T> definition = this.methodLookup.get(method)__			return (definition != null ? definition.getCorsConfiguration() : null)__		};return,cors,configuration,thread,safe,for,concurrent,use;public,cors,configuration,get,cors,configuration,handler,method,handler,method,method,method,handler,method,get,method,mapping,definition,t,definition,this,method,lookup,get,method,return,definition,null,definition,get,cors,configuration,null
AbstractHandlerMethodMapping -> MappingRegistry -> public CorsConfiguration getCorsConfiguration(HandlerMethod handlerMethod);1430774689;Return CORS configuration. Thread-safe for concurrent use.;public CorsConfiguration getCorsConfiguration(HandlerMethod handlerMethod) {_			Method method = handlerMethod.getMethod()__			return this.corsLookup.get(method)__		};return,cors,configuration,thread,safe,for,concurrent,use;public,cors,configuration,get,cors,configuration,handler,method,handler,method,method,method,handler,method,get,method,return,this,cors,lookup,get,method
AbstractHandlerMethodMapping -> MappingRegistry -> public CorsConfiguration getCorsConfiguration(HandlerMethod handlerMethod);1430844966;Return CORS configuration. Thread-safe for concurrent use.;public CorsConfiguration getCorsConfiguration(HandlerMethod handlerMethod) {_			Method method = handlerMethod.getMethod()__			return this.corsLookup.get(method)__		};return,cors,configuration,thread,safe,for,concurrent,use;public,cors,configuration,get,cors,configuration,handler,method,handler,method,method,method,handler,method,get,method,return,this,cors,lookup,get,method
AbstractHandlerMethodMapping -> MappingRegistry -> public CorsConfiguration getCorsConfiguration(HandlerMethod handlerMethod);1430844967;Return CORS configuration. Thread-safe for concurrent use.;public CorsConfiguration getCorsConfiguration(HandlerMethod handlerMethod) {_			HandlerMethod original = handlerMethod.getResolvedFromHandlerMethod()__			return this.corsLookup.get(original != null ? original : handlerMethod)__		};return,cors,configuration,thread,safe,for,concurrent,use;public,cors,configuration,get,cors,configuration,handler,method,handler,method,handler,method,original,handler,method,get,resolved,from,handler,method,return,this,cors,lookup,get,original,null,original,handler,method
AbstractHandlerMethodMapping -> MappingRegistry -> public CorsConfiguration getCorsConfiguration(HandlerMethod handlerMethod);1431730371;Return CORS configuration. Thread-safe for concurrent use.;public CorsConfiguration getCorsConfiguration(HandlerMethod handlerMethod) {_			HandlerMethod original = handlerMethod.getResolvedFromHandlerMethod()__			return this.corsLookup.get(original != null ? original : handlerMethod)__		};return,cors,configuration,thread,safe,for,concurrent,use;public,cors,configuration,get,cors,configuration,handler,method,handler,method,handler,method,original,handler,method,get,resolved,from,handler,method,return,this,cors,lookup,get,original,null,original,handler,method
AbstractHandlerMethodMapping -> MappingRegistry -> public CorsConfiguration getCorsConfiguration(HandlerMethod handlerMethod);1439294371;Return CORS configuration. Thread-safe for concurrent use.;public CorsConfiguration getCorsConfiguration(HandlerMethod handlerMethod) {_			HandlerMethod original = handlerMethod.getResolvedFromHandlerMethod()__			return this.corsLookup.get(original != null ? original : handlerMethod)__		};return,cors,configuration,thread,safe,for,concurrent,use;public,cors,configuration,get,cors,configuration,handler,method,handler,method,handler,method,original,handler,method,get,resolved,from,handler,method,return,this,cors,lookup,get,original,null,original,handler,method
AbstractHandlerMethodMapping -> MappingRegistry -> public CorsConfiguration getCorsConfiguration(HandlerMethod handlerMethod);1447077465;Return CORS configuration. Thread-safe for concurrent use.;public CorsConfiguration getCorsConfiguration(HandlerMethod handlerMethod) {_			HandlerMethod original = handlerMethod.getResolvedFromHandlerMethod()__			return this.corsLookup.get(original != null ? original : handlerMethod)__		};return,cors,configuration,thread,safe,for,concurrent,use;public,cors,configuration,get,cors,configuration,handler,method,handler,method,handler,method,original,handler,method,get,resolved,from,handler,method,return,this,cors,lookup,get,original,null,original,handler,method
AbstractHandlerMethodMapping -> MappingRegistry -> public CorsConfiguration getCorsConfiguration(HandlerMethod handlerMethod);1448483163;Return CORS configuration. Thread-safe for concurrent use.;public CorsConfiguration getCorsConfiguration(HandlerMethod handlerMethod) {_			HandlerMethod original = handlerMethod.getResolvedFromHandlerMethod()__			return this.corsLookup.get(original != null ? original : handlerMethod)__		};return,cors,configuration,thread,safe,for,concurrent,use;public,cors,configuration,get,cors,configuration,handler,method,handler,method,handler,method,original,handler,method,get,resolved,from,handler,method,return,this,cors,lookup,get,original,null,original,handler,method
AbstractHandlerMethodMapping -> MappingRegistry -> public CorsConfiguration getCorsConfiguration(HandlerMethod handlerMethod);1452685925;Return CORS configuration. Thread-safe for concurrent use.;public CorsConfiguration getCorsConfiguration(HandlerMethod handlerMethod) {_			HandlerMethod original = handlerMethod.getResolvedFromHandlerMethod()__			return this.corsLookup.get(original != null ? original : handlerMethod)__		};return,cors,configuration,thread,safe,for,concurrent,use;public,cors,configuration,get,cors,configuration,handler,method,handler,method,handler,method,original,handler,method,get,resolved,from,handler,method,return,this,cors,lookup,get,original,null,original,handler,method
AbstractHandlerMethodMapping -> MappingRegistry -> public CorsConfiguration getCorsConfiguration(HandlerMethod handlerMethod);1452873718;Return CORS configuration. Thread-safe for concurrent use.;public CorsConfiguration getCorsConfiguration(HandlerMethod handlerMethod) {_			HandlerMethod original = handlerMethod.getResolvedFromHandlerMethod()__			return this.corsLookup.get(original != null ? original : handlerMethod)__		};return,cors,configuration,thread,safe,for,concurrent,use;public,cors,configuration,get,cors,configuration,handler,method,handler,method,handler,method,original,handler,method,get,resolved,from,handler,method,return,this,cors,lookup,get,original,null,original,handler,method
AbstractHandlerMethodMapping -> MappingRegistry -> public CorsConfiguration getCorsConfiguration(HandlerMethod handlerMethod);1453843788;Return CORS configuration. Thread-safe for concurrent use.;public CorsConfiguration getCorsConfiguration(HandlerMethod handlerMethod) {_			HandlerMethod original = handlerMethod.getResolvedFromHandlerMethod()__			return this.corsLookup.get(original != null ? original : handlerMethod)__		};return,cors,configuration,thread,safe,for,concurrent,use;public,cors,configuration,get,cors,configuration,handler,method,handler,method,handler,method,original,handler,method,get,resolved,from,handler,method,return,this,cors,lookup,get,original,null,original,handler,method
AbstractHandlerMethodMapping -> MappingRegistry -> public CorsConfiguration getCorsConfiguration(HandlerMethod handlerMethod);1467730834;Return CORS configuration. Thread-safe for concurrent use.;public CorsConfiguration getCorsConfiguration(HandlerMethod handlerMethod) {_			HandlerMethod original = handlerMethod.getResolvedFromHandlerMethod()__			return this.corsLookup.get(original != null ? original : handlerMethod)__		};return,cors,configuration,thread,safe,for,concurrent,use;public,cors,configuration,get,cors,configuration,handler,method,handler,method,handler,method,original,handler,method,get,resolved,from,handler,method,return,this,cors,lookup,get,original,null,original,handler,method
AbstractHandlerMethodMapping -> MappingRegistry -> public CorsConfiguration getCorsConfiguration(HandlerMethod handlerMethod);1468417354;Return CORS configuration. Thread-safe for concurrent use.;public CorsConfiguration getCorsConfiguration(HandlerMethod handlerMethod) {_			HandlerMethod original = handlerMethod.getResolvedFromHandlerMethod()__			return this.corsLookup.get(original != null ? original : handlerMethod)__		};return,cors,configuration,thread,safe,for,concurrent,use;public,cors,configuration,get,cors,configuration,handler,method,handler,method,handler,method,original,handler,method,get,resolved,from,handler,method,return,this,cors,lookup,get,original,null,original,handler,method
AbstractHandlerMethodMapping -> MappingRegistry -> public CorsConfiguration getCorsConfiguration(HandlerMethod handlerMethod);1468596479;Return CORS configuration. Thread-safe for concurrent use.;public CorsConfiguration getCorsConfiguration(HandlerMethod handlerMethod) {_			HandlerMethod original = handlerMethod.getResolvedFromHandlerMethod()__			return this.corsLookup.get(original != null ? original : handlerMethod)__		};return,cors,configuration,thread,safe,for,concurrent,use;public,cors,configuration,get,cors,configuration,handler,method,handler,method,handler,method,original,handler,method,get,resolved,from,handler,method,return,this,cors,lookup,get,original,null,original,handler,method
AbstractHandlerMethodMapping -> MappingRegistry -> public CorsConfiguration getCorsConfiguration(HandlerMethod handlerMethod);1474905889;Return CORS configuration. Thread-safe for concurrent use.;public CorsConfiguration getCorsConfiguration(HandlerMethod handlerMethod) {_			HandlerMethod original = handlerMethod.getResolvedFromHandlerMethod()__			return this.corsLookup.get(original != null ? original : handlerMethod)__		};return,cors,configuration,thread,safe,for,concurrent,use;public,cors,configuration,get,cors,configuration,handler,method,handler,method,handler,method,original,handler,method,get,resolved,from,handler,method,return,this,cors,lookup,get,original,null,original,handler,method
AbstractHandlerMethodMapping -> MappingRegistry -> public CorsConfiguration getCorsConfiguration(HandlerMethod handlerMethod);1481813056;Return CORS configuration. Thread-safe for concurrent use.;public CorsConfiguration getCorsConfiguration(HandlerMethod handlerMethod) {_			HandlerMethod original = handlerMethod.getResolvedFromHandlerMethod()__			return this.corsLookup.get(original != null ? original : handlerMethod)__		};return,cors,configuration,thread,safe,for,concurrent,use;public,cors,configuration,get,cors,configuration,handler,method,handler,method,handler,method,original,handler,method,get,resolved,from,handler,method,return,this,cors,lookup,get,original,null,original,handler,method
AbstractHandlerMethodMapping -> MappingRegistry -> public CorsConfiguration getCorsConfiguration(HandlerMethod handlerMethod);1485810955;Return CORS configuration. Thread-safe for concurrent use.;public CorsConfiguration getCorsConfiguration(HandlerMethod handlerMethod) {_			HandlerMethod original = handlerMethod.getResolvedFromHandlerMethod()__			return this.corsLookup.get(original != null ? original : handlerMethod)__		};return,cors,configuration,thread,safe,for,concurrent,use;public,cors,configuration,get,cors,configuration,handler,method,handler,method,handler,method,original,handler,method,get,resolved,from,handler,method,return,this,cors,lookup,get,original,null,original,handler,method
AbstractHandlerMethodMapping -> MappingRegistry -> public CorsConfiguration getCorsConfiguration(HandlerMethod handlerMethod);1495868221;Return CORS configuration. Thread-safe for concurrent use.;public CorsConfiguration getCorsConfiguration(HandlerMethod handlerMethod) {_			HandlerMethod original = handlerMethod.getResolvedFromHandlerMethod()__			return this.corsLookup.get(original != null ? original : handlerMethod)__		};return,cors,configuration,thread,safe,for,concurrent,use;public,cors,configuration,get,cors,configuration,handler,method,handler,method,handler,method,original,handler,method,get,resolved,from,handler,method,return,this,cors,lookup,get,original,null,original,handler,method
AbstractHandlerMethodMapping -> MappingRegistry -> public CorsConfiguration getCorsConfiguration(HandlerMethod handlerMethod);1496837955;Return CORS configuration. Thread-safe for concurrent use.;public CorsConfiguration getCorsConfiguration(HandlerMethod handlerMethod) {_			HandlerMethod original = handlerMethod.getResolvedFromHandlerMethod()__			return this.corsLookup.get(original != null ? original : handlerMethod)__		};return,cors,configuration,thread,safe,for,concurrent,use;public,cors,configuration,get,cors,configuration,handler,method,handler,method,handler,method,original,handler,method,get,resolved,from,handler,method,return,this,cors,lookup,get,original,null,original,handler,method
AbstractHandlerMethodMapping -> MappingRegistry -> public CorsConfiguration getCorsConfiguration(HandlerMethod handlerMethod);1497251962;Return CORS configuration. Thread-safe for concurrent use.;public CorsConfiguration getCorsConfiguration(HandlerMethod handlerMethod) {_			HandlerMethod original = handlerMethod.getResolvedFromHandlerMethod()__			return this.corsLookup.get(original != null ? original : handlerMethod)__		};return,cors,configuration,thread,safe,for,concurrent,use;public,cors,configuration,get,cors,configuration,handler,method,handler,method,handler,method,original,handler,method,get,resolved,from,handler,method,return,this,cors,lookup,get,original,null,original,handler,method
AbstractHandlerMethodMapping -> MappingRegistry -> public CorsConfiguration getCorsConfiguration(HandlerMethod handlerMethod);1498780456;Return CORS configuration. Thread-safe for concurrent use.;public CorsConfiguration getCorsConfiguration(HandlerMethod handlerMethod) {_			HandlerMethod original = handlerMethod.getResolvedFromHandlerMethod()__			return this.corsLookup.get(original != null ? original : handlerMethod)__		};return,cors,configuration,thread,safe,for,concurrent,use;public,cors,configuration,get,cors,configuration,handler,method,handler,method,handler,method,original,handler,method,get,resolved,from,handler,method,return,this,cors,lookup,get,original,null,original,handler,method
AbstractHandlerMethodMapping -> MappingRegistry -> public CorsConfiguration getCorsConfiguration(HandlerMethod handlerMethod);1518772998;Return CORS configuration. Thread-safe for concurrent use.;public CorsConfiguration getCorsConfiguration(HandlerMethod handlerMethod) {_			HandlerMethod original = handlerMethod.getResolvedFromHandlerMethod()__			return this.corsLookup.get(original != null ? original : handlerMethod)__		};return,cors,configuration,thread,safe,for,concurrent,use;public,cors,configuration,get,cors,configuration,handler,method,handler,method,handler,method,original,handler,method,get,resolved,from,handler,method,return,this,cors,lookup,get,original,null,original,handler,method
AbstractHandlerMethodMapping -> MappingRegistry -> public CorsConfiguration getCorsConfiguration(HandlerMethod handlerMethod);1522103912;Return CORS configuration. Thread-safe for concurrent use.;public CorsConfiguration getCorsConfiguration(HandlerMethod handlerMethod) {_			HandlerMethod original = handlerMethod.getResolvedFromHandlerMethod()__			return this.corsLookup.get(original != null ? original : handlerMethod)__		};return,cors,configuration,thread,safe,for,concurrent,use;public,cors,configuration,get,cors,configuration,handler,method,handler,method,handler,method,original,handler,method,get,resolved,from,handler,method,return,this,cors,lookup,get,original,null,original,handler,method
AbstractHandlerMethodMapping -> MappingRegistry -> public CorsConfiguration getCorsConfiguration(HandlerMethod handlerMethod);1522843494;Return CORS configuration. Thread-safe for concurrent use.;public CorsConfiguration getCorsConfiguration(HandlerMethod handlerMethod) {_			HandlerMethod original = handlerMethod.getResolvedFromHandlerMethod()__			return this.corsLookup.get(original != null ? original : handlerMethod)__		};return,cors,configuration,thread,safe,for,concurrent,use;public,cors,configuration,get,cors,configuration,handler,method,handler,method,handler,method,original,handler,method,get,resolved,from,handler,method,return,this,cors,lookup,get,original,null,original,handler,method
AbstractHandlerMethodMapping -> MappingRegistry -> public CorsConfiguration getCorsConfiguration(HandlerMethod handlerMethod);1529361191;Return CORS configuration. Thread-safe for concurrent use.;public CorsConfiguration getCorsConfiguration(HandlerMethod handlerMethod) {_			HandlerMethod original = handlerMethod.getResolvedFromHandlerMethod()__			return this.corsLookup.get(original != null ? original : handlerMethod)__		};return,cors,configuration,thread,safe,for,concurrent,use;public,cors,configuration,get,cors,configuration,handler,method,handler,method,handler,method,original,handler,method,get,resolved,from,handler,method,return,this,cors,lookup,get,original,null,original,handler,method
AbstractHandlerMethodMapping -> MappingRegistry -> public CorsConfiguration getCorsConfiguration(HandlerMethod handlerMethod);1529721864;Return CORS configuration. Thread-safe for concurrent use.;public CorsConfiguration getCorsConfiguration(HandlerMethod handlerMethod) {_			HandlerMethod original = handlerMethod.getResolvedFromHandlerMethod()__			return this.corsLookup.get(original != null ? original : handlerMethod)__		};return,cors,configuration,thread,safe,for,concurrent,use;public,cors,configuration,get,cors,configuration,handler,method,handler,method,handler,method,original,handler,method,get,resolved,from,handler,method,return,this,cors,lookup,get,original,null,original,handler,method
AbstractHandlerMethodMapping -> MappingRegistry -> public CorsConfiguration getCorsConfiguration(HandlerMethod handlerMethod);1530174524;Return CORS configuration. Thread-safe for concurrent use.;public CorsConfiguration getCorsConfiguration(HandlerMethod handlerMethod) {_			HandlerMethod original = handlerMethod.getResolvedFromHandlerMethod()__			return this.corsLookup.get(original != null ? original : handlerMethod)__		};return,cors,configuration,thread,safe,for,concurrent,use;public,cors,configuration,get,cors,configuration,handler,method,handler,method,handler,method,original,handler,method,get,resolved,from,handler,method,return,this,cors,lookup,get,original,null,original,handler,method
AbstractHandlerMethodMapping -> MappingRegistry -> public CorsConfiguration getCorsConfiguration(HandlerMethod handlerMethod);1530174524;Return CORS configuration. Thread-safe for concurrent use.;public CorsConfiguration getCorsConfiguration(HandlerMethod handlerMethod) {_			HandlerMethod original = handlerMethod.getResolvedFromHandlerMethod()__			return this.corsLookup.get(original != null ? original : handlerMethod)__		};return,cors,configuration,thread,safe,for,concurrent,use;public,cors,configuration,get,cors,configuration,handler,method,handler,method,handler,method,original,handler,method,get,resolved,from,handler,method,return,this,cors,lookup,get,original,null,original,handler,method
AbstractHandlerMethodMapping -> MappingRegistry -> public CorsConfiguration getCorsConfiguration(HandlerMethod handlerMethod);1533943217;Return CORS configuration. Thread-safe for concurrent use.;public CorsConfiguration getCorsConfiguration(HandlerMethod handlerMethod) {_			HandlerMethod original = handlerMethod.getResolvedFromHandlerMethod()__			return this.corsLookup.get(original != null ? original : handlerMethod)__		};return,cors,configuration,thread,safe,for,concurrent,use;public,cors,configuration,get,cors,configuration,handler,method,handler,method,handler,method,original,handler,method,get,resolved,from,handler,method,return,this,cors,lookup,get,original,null,original,handler,method
AbstractHandlerMethodMapping -> MappingRegistry -> public CorsConfiguration getCorsConfiguration(HandlerMethod handlerMethod);1542407418;Return CORS configuration. Thread-safe for concurrent use.;public CorsConfiguration getCorsConfiguration(HandlerMethod handlerMethod) {_			HandlerMethod original = handlerMethod.getResolvedFromHandlerMethod()__			return this.corsLookup.get(original != null ? original : handlerMethod)__		};return,cors,configuration,thread,safe,for,concurrent,use;public,cors,configuration,get,cors,configuration,handler,method,handler,method,handler,method,original,handler,method,get,resolved,from,handler,method,return,this,cors,lookup,get,original,null,original,handler,method
AbstractHandlerMethodMapping -> MappingRegistry -> public CorsConfiguration getCorsConfiguration(HandlerMethod handlerMethod);1542771062;Return CORS configuration. Thread-safe for concurrent use.;public CorsConfiguration getCorsConfiguration(HandlerMethod handlerMethod) {_			HandlerMethod original = handlerMethod.getResolvedFromHandlerMethod()__			return this.corsLookup.get(original != null ? original : handlerMethod)__		};return,cors,configuration,thread,safe,for,concurrent,use;public,cors,configuration,get,cors,configuration,handler,method,handler,method,handler,method,original,handler,method,get,resolved,from,handler,method,return,this,cors,lookup,get,original,null,original,handler,method
AbstractHandlerMethodMapping -> MappingRegistry -> public CorsConfiguration getCorsConfiguration(HandlerMethod handlerMethod);1548427561;Return CORS configuration. Thread-safe for concurrent use.;public CorsConfiguration getCorsConfiguration(HandlerMethod handlerMethod) {_			HandlerMethod original = handlerMethod.getResolvedFromHandlerMethod()__			return this.corsLookup.get(original != null ? original : handlerMethod)__		};return,cors,configuration,thread,safe,for,concurrent,use;public,cors,configuration,get,cors,configuration,handler,method,handler,method,handler,method,original,handler,method,get,resolved,from,handler,method,return,this,cors,lookup,get,original,null,original,handler,method
AbstractHandlerMethodMapping -> MappingRegistry -> public CorsConfiguration getCorsConfiguration(HandlerMethod handlerMethod);1551093473;Return CORS configuration. Thread-safe for concurrent use.;public CorsConfiguration getCorsConfiguration(HandlerMethod handlerMethod) {_			HandlerMethod original = handlerMethod.getResolvedFromHandlerMethod()__			return this.corsLookup.get(original != null ? original : handlerMethod)__		};return,cors,configuration,thread,safe,for,concurrent,use;public,cors,configuration,get,cors,configuration,handler,method,handler,method,handler,method,original,handler,method,get,resolved,from,handler,method,return,this,cors,lookup,get,original,null,original,handler,method
AbstractHandlerMethodMapping -> @Override 	public void initApplicationContext() throws ApplicationContextException;1328020251;ApplicationContext initialization and handler method detection.;@Override_	public void initApplicationContext() throws ApplicationContextException {_		super.initApplicationContext()__		initHandlerMethods()__	};application,context,initialization,and,handler,method,detection;override,public,void,init,application,context,throws,application,context,exception,super,init,application,context,init,handler,methods
AbstractHandlerMethodMapping -> @Override 	public void initApplicationContext() throws ApplicationContextException;1328022204;ApplicationContext initialization and handler method detection.;@Override_	public void initApplicationContext() throws ApplicationContextException {_		super.initApplicationContext()__		initHandlerMethods()__	};application,context,initialization,and,handler,method,detection;override,public,void,init,application,context,throws,application,context,exception,super,init,application,context,init,handler,methods
AbstractHandlerMethodMapping -> @Override 	public void initApplicationContext() throws ApplicationContextException;1336682556;ApplicationContext initialization.;@Override_	public void initApplicationContext() throws ApplicationContextException {_		super.initApplicationContext()__	};application,context,initialization;override,public,void,init,application,context,throws,application,context,exception,super,init,application,context
AbstractHandlerMethodMapping -> public void unregisterMapping(T mapping);1430774689;Un-register the given mapping._<p>This method may be invoked at runtime after initialization has completed._@param mapping the mapping to unregister;public void unregisterMapping(T mapping) {_		this.mappingRegistry.unregister(mapping)__	};un,register,the,given,mapping,p,this,method,may,be,invoked,at,runtime,after,initialization,has,completed,param,mapping,the,mapping,to,unregister;public,void,unregister,mapping,t,mapping,this,mapping,registry,unregister,mapping
AbstractHandlerMethodMapping -> public void unregisterMapping(T mapping);1430844966;Un-register the given mapping._<p>This method may be invoked at runtime after initialization has completed._@param mapping the mapping to unregister;public void unregisterMapping(T mapping) {_		this.mappingRegistry.unregister(mapping)__	};un,register,the,given,mapping,p,this,method,may,be,invoked,at,runtime,after,initialization,has,completed,param,mapping,the,mapping,to,unregister;public,void,unregister,mapping,t,mapping,this,mapping,registry,unregister,mapping
AbstractHandlerMethodMapping -> public void unregisterMapping(T mapping);1430844967;Un-register the given mapping._<p>This method may be invoked at runtime after initialization has completed._@param mapping the mapping to unregister;public void unregisterMapping(T mapping) {_		this.mappingRegistry.unregister(mapping)__	};un,register,the,given,mapping,p,this,method,may,be,invoked,at,runtime,after,initialization,has,completed,param,mapping,the,mapping,to,unregister;public,void,unregister,mapping,t,mapping,this,mapping,registry,unregister,mapping
AbstractHandlerMethodMapping -> public void unregisterMapping(T mapping);1431730371;Un-register the given mapping._<p>This method may be invoked at runtime after initialization has completed._@param mapping the mapping to unregister;public void unregisterMapping(T mapping) {_		this.mappingRegistry.unregister(mapping)__	};un,register,the,given,mapping,p,this,method,may,be,invoked,at,runtime,after,initialization,has,completed,param,mapping,the,mapping,to,unregister;public,void,unregister,mapping,t,mapping,this,mapping,registry,unregister,mapping
AbstractHandlerMethodMapping -> public void unregisterMapping(T mapping);1439294371;Un-register the given mapping._<p>This method may be invoked at runtime after initialization has completed._@param mapping the mapping to unregister;public void unregisterMapping(T mapping) {_		this.mappingRegistry.unregister(mapping)__	};un,register,the,given,mapping,p,this,method,may,be,invoked,at,runtime,after,initialization,has,completed,param,mapping,the,mapping,to,unregister;public,void,unregister,mapping,t,mapping,this,mapping,registry,unregister,mapping
AbstractHandlerMethodMapping -> public void unregisterMapping(T mapping);1447077465;Un-register the given mapping._<p>This method may be invoked at runtime after initialization has completed._@param mapping the mapping to unregister;public void unregisterMapping(T mapping) {_		this.mappingRegistry.unregister(mapping)__	};un,register,the,given,mapping,p,this,method,may,be,invoked,at,runtime,after,initialization,has,completed,param,mapping,the,mapping,to,unregister;public,void,unregister,mapping,t,mapping,this,mapping,registry,unregister,mapping
AbstractHandlerMethodMapping -> public void unregisterMapping(T mapping);1448483163;Un-register the given mapping._<p>This method may be invoked at runtime after initialization has completed._@param mapping the mapping to unregister;public void unregisterMapping(T mapping) {_		this.mappingRegistry.unregister(mapping)__	};un,register,the,given,mapping,p,this,method,may,be,invoked,at,runtime,after,initialization,has,completed,param,mapping,the,mapping,to,unregister;public,void,unregister,mapping,t,mapping,this,mapping,registry,unregister,mapping
AbstractHandlerMethodMapping -> public void unregisterMapping(T mapping);1452685925;Un-register the given mapping._<p>This method may be invoked at runtime after initialization has completed._@param mapping the mapping to unregister;public void unregisterMapping(T mapping) {_		this.mappingRegistry.unregister(mapping)__	};un,register,the,given,mapping,p,this,method,may,be,invoked,at,runtime,after,initialization,has,completed,param,mapping,the,mapping,to,unregister;public,void,unregister,mapping,t,mapping,this,mapping,registry,unregister,mapping
AbstractHandlerMethodMapping -> public void unregisterMapping(T mapping);1452873718;Un-register the given mapping._<p>This method may be invoked at runtime after initialization has completed._@param mapping the mapping to unregister;public void unregisterMapping(T mapping) {_		this.mappingRegistry.unregister(mapping)__	};un,register,the,given,mapping,p,this,method,may,be,invoked,at,runtime,after,initialization,has,completed,param,mapping,the,mapping,to,unregister;public,void,unregister,mapping,t,mapping,this,mapping,registry,unregister,mapping
AbstractHandlerMethodMapping -> public void unregisterMapping(T mapping);1453843788;Un-register the given mapping._<p>This method may be invoked at runtime after initialization has completed._@param mapping the mapping to unregister;public void unregisterMapping(T mapping) {_		this.mappingRegistry.unregister(mapping)__	};un,register,the,given,mapping,p,this,method,may,be,invoked,at,runtime,after,initialization,has,completed,param,mapping,the,mapping,to,unregister;public,void,unregister,mapping,t,mapping,this,mapping,registry,unregister,mapping
AbstractHandlerMethodMapping -> public void unregisterMapping(T mapping);1467730834;Un-register the given mapping._<p>This method may be invoked at runtime after initialization has completed._@param mapping the mapping to unregister;public void unregisterMapping(T mapping) {_		this.mappingRegistry.unregister(mapping)__	};un,register,the,given,mapping,p,this,method,may,be,invoked,at,runtime,after,initialization,has,completed,param,mapping,the,mapping,to,unregister;public,void,unregister,mapping,t,mapping,this,mapping,registry,unregister,mapping
AbstractHandlerMethodMapping -> public void unregisterMapping(T mapping);1468417354;Un-register the given mapping._<p>This method may be invoked at runtime after initialization has completed._@param mapping the mapping to unregister;public void unregisterMapping(T mapping) {_		this.mappingRegistry.unregister(mapping)__	};un,register,the,given,mapping,p,this,method,may,be,invoked,at,runtime,after,initialization,has,completed,param,mapping,the,mapping,to,unregister;public,void,unregister,mapping,t,mapping,this,mapping,registry,unregister,mapping
AbstractHandlerMethodMapping -> public void unregisterMapping(T mapping);1468596479;Un-register the given mapping._<p>This method may be invoked at runtime after initialization has completed._@param mapping the mapping to unregister;public void unregisterMapping(T mapping) {_		this.mappingRegistry.unregister(mapping)__	};un,register,the,given,mapping,p,this,method,may,be,invoked,at,runtime,after,initialization,has,completed,param,mapping,the,mapping,to,unregister;public,void,unregister,mapping,t,mapping,this,mapping,registry,unregister,mapping
AbstractHandlerMethodMapping -> public void unregisterMapping(T mapping);1474905889;Un-register the given mapping._<p>This method may be invoked at runtime after initialization has completed._@param mapping the mapping to unregister;public void unregisterMapping(T mapping) {_		this.mappingRegistry.unregister(mapping)__	};un,register,the,given,mapping,p,this,method,may,be,invoked,at,runtime,after,initialization,has,completed,param,mapping,the,mapping,to,unregister;public,void,unregister,mapping,t,mapping,this,mapping,registry,unregister,mapping
AbstractHandlerMethodMapping -> public void unregisterMapping(T mapping);1481813056;Un-register the given mapping._<p>This method may be invoked at runtime after initialization has completed._@param mapping the mapping to unregister;public void unregisterMapping(T mapping) {_		this.mappingRegistry.unregister(mapping)__	};un,register,the,given,mapping,p,this,method,may,be,invoked,at,runtime,after,initialization,has,completed,param,mapping,the,mapping,to,unregister;public,void,unregister,mapping,t,mapping,this,mapping,registry,unregister,mapping
AbstractHandlerMethodMapping -> public void unregisterMapping(T mapping);1485810955;Un-register the given mapping._<p>This method may be invoked at runtime after initialization has completed._@param mapping the mapping to unregister;public void unregisterMapping(T mapping) {_		this.mappingRegistry.unregister(mapping)__	};un,register,the,given,mapping,p,this,method,may,be,invoked,at,runtime,after,initialization,has,completed,param,mapping,the,mapping,to,unregister;public,void,unregister,mapping,t,mapping,this,mapping,registry,unregister,mapping
AbstractHandlerMethodMapping -> public void unregisterMapping(T mapping);1495868221;Un-register the given mapping._<p>This method may be invoked at runtime after initialization has completed._@param mapping the mapping to unregister;public void unregisterMapping(T mapping) {_		this.mappingRegistry.unregister(mapping)__	};un,register,the,given,mapping,p,this,method,may,be,invoked,at,runtime,after,initialization,has,completed,param,mapping,the,mapping,to,unregister;public,void,unregister,mapping,t,mapping,this,mapping,registry,unregister,mapping
AbstractHandlerMethodMapping -> public void unregisterMapping(T mapping);1496837955;Un-register the given mapping._<p>This method may be invoked at runtime after initialization has completed._@param mapping the mapping to unregister;public void unregisterMapping(T mapping) {_		this.mappingRegistry.unregister(mapping)__	};un,register,the,given,mapping,p,this,method,may,be,invoked,at,runtime,after,initialization,has,completed,param,mapping,the,mapping,to,unregister;public,void,unregister,mapping,t,mapping,this,mapping,registry,unregister,mapping
AbstractHandlerMethodMapping -> public void unregisterMapping(T mapping);1497251962;Un-register the given mapping._<p>This method may be invoked at runtime after initialization has completed._@param mapping the mapping to unregister;public void unregisterMapping(T mapping) {_		this.mappingRegistry.unregister(mapping)__	};un,register,the,given,mapping,p,this,method,may,be,invoked,at,runtime,after,initialization,has,completed,param,mapping,the,mapping,to,unregister;public,void,unregister,mapping,t,mapping,this,mapping,registry,unregister,mapping
AbstractHandlerMethodMapping -> public void unregisterMapping(T mapping);1498780456;Un-register the given mapping._<p>This method may be invoked at runtime after initialization has completed._@param mapping the mapping to unregister;public void unregisterMapping(T mapping) {_		this.mappingRegistry.unregister(mapping)__	};un,register,the,given,mapping,p,this,method,may,be,invoked,at,runtime,after,initialization,has,completed,param,mapping,the,mapping,to,unregister;public,void,unregister,mapping,t,mapping,this,mapping,registry,unregister,mapping
AbstractHandlerMethodMapping -> public void unregisterMapping(T mapping);1518772998;Un-register the given mapping._<p>This method may be invoked at runtime after initialization has completed._@param mapping the mapping to unregister;public void unregisterMapping(T mapping) {_		this.mappingRegistry.unregister(mapping)__	};un,register,the,given,mapping,p,this,method,may,be,invoked,at,runtime,after,initialization,has,completed,param,mapping,the,mapping,to,unregister;public,void,unregister,mapping,t,mapping,this,mapping,registry,unregister,mapping
AbstractHandlerMethodMapping -> public void unregisterMapping(T mapping);1522103912;Un-register the given mapping._<p>This method may be invoked at runtime after initialization has completed._@param mapping the mapping to unregister;public void unregisterMapping(T mapping) {_		this.mappingRegistry.unregister(mapping)__	};un,register,the,given,mapping,p,this,method,may,be,invoked,at,runtime,after,initialization,has,completed,param,mapping,the,mapping,to,unregister;public,void,unregister,mapping,t,mapping,this,mapping,registry,unregister,mapping
AbstractHandlerMethodMapping -> public void unregisterMapping(T mapping);1522843494;Un-register the given mapping._<p>This method may be invoked at runtime after initialization has completed._@param mapping the mapping to unregister;public void unregisterMapping(T mapping) {_		this.mappingRegistry.unregister(mapping)__	};un,register,the,given,mapping,p,this,method,may,be,invoked,at,runtime,after,initialization,has,completed,param,mapping,the,mapping,to,unregister;public,void,unregister,mapping,t,mapping,this,mapping,registry,unregister,mapping
AbstractHandlerMethodMapping -> public void unregisterMapping(T mapping);1529361191;Un-register the given mapping._<p>This method may be invoked at runtime after initialization has completed._@param mapping the mapping to unregister;public void unregisterMapping(T mapping) {_		if (logger.isTraceEnabled()) {_			logger.trace("Unregister mapping \"" + mapping)__		}_		this.mappingRegistry.unregister(mapping)__	};un,register,the,given,mapping,p,this,method,may,be,invoked,at,runtime,after,initialization,has,completed,param,mapping,the,mapping,to,unregister;public,void,unregister,mapping,t,mapping,if,logger,is,trace,enabled,logger,trace,unregister,mapping,mapping,this,mapping,registry,unregister,mapping
AbstractHandlerMethodMapping -> public void unregisterMapping(T mapping);1529721864;Un-register the given mapping._<p>This method may be invoked at runtime after initialization has completed._@param mapping the mapping to unregister;public void unregisterMapping(T mapping) {_		if (logger.isTraceEnabled()) {_			logger.trace("Unregister mapping \"" + mapping)__		}_		this.mappingRegistry.unregister(mapping)__	};un,register,the,given,mapping,p,this,method,may,be,invoked,at,runtime,after,initialization,has,completed,param,mapping,the,mapping,to,unregister;public,void,unregister,mapping,t,mapping,if,logger,is,trace,enabled,logger,trace,unregister,mapping,mapping,this,mapping,registry,unregister,mapping
AbstractHandlerMethodMapping -> public void unregisterMapping(T mapping);1530174524;Un-register the given mapping._<p>This method may be invoked at runtime after initialization has completed._@param mapping the mapping to unregister;public void unregisterMapping(T mapping) {_		if (logger.isTraceEnabled()) {_			logger.trace("Unregister mapping \"" + mapping)__		}_		this.mappingRegistry.unregister(mapping)__	};un,register,the,given,mapping,p,this,method,may,be,invoked,at,runtime,after,initialization,has,completed,param,mapping,the,mapping,to,unregister;public,void,unregister,mapping,t,mapping,if,logger,is,trace,enabled,logger,trace,unregister,mapping,mapping,this,mapping,registry,unregister,mapping
AbstractHandlerMethodMapping -> public void unregisterMapping(T mapping);1530174524;Un-register the given mapping._<p>This method may be invoked at runtime after initialization has completed._@param mapping the mapping to unregister;public void unregisterMapping(T mapping) {_		if (logger.isTraceEnabled()) {_			logger.trace("Unregister mapping \"" + mapping)__		}_		this.mappingRegistry.unregister(mapping)__	};un,register,the,given,mapping,p,this,method,may,be,invoked,at,runtime,after,initialization,has,completed,param,mapping,the,mapping,to,unregister;public,void,unregister,mapping,t,mapping,if,logger,is,trace,enabled,logger,trace,unregister,mapping,mapping,this,mapping,registry,unregister,mapping
AbstractHandlerMethodMapping -> public void unregisterMapping(T mapping);1533943217;Un-register the given mapping._<p>This method may be invoked at runtime after initialization has completed._@param mapping the mapping to unregister;public void unregisterMapping(T mapping) {_		if (logger.isTraceEnabled()) {_			logger.trace("Unregister mapping \"" + mapping + "\"")__		}_		this.mappingRegistry.unregister(mapping)__	};un,register,the,given,mapping,p,this,method,may,be,invoked,at,runtime,after,initialization,has,completed,param,mapping,the,mapping,to,unregister;public,void,unregister,mapping,t,mapping,if,logger,is,trace,enabled,logger,trace,unregister,mapping,mapping,this,mapping,registry,unregister,mapping
AbstractHandlerMethodMapping -> public void unregisterMapping(T mapping);1542407418;Un-register the given mapping._<p>This method may be invoked at runtime after initialization has completed._@param mapping the mapping to unregister;public void unregisterMapping(T mapping) {_		if (logger.isTraceEnabled()) {_			logger.trace("Unregister mapping \"" + mapping + "\"")__		}_		this.mappingRegistry.unregister(mapping)__	};un,register,the,given,mapping,p,this,method,may,be,invoked,at,runtime,after,initialization,has,completed,param,mapping,the,mapping,to,unregister;public,void,unregister,mapping,t,mapping,if,logger,is,trace,enabled,logger,trace,unregister,mapping,mapping,this,mapping,registry,unregister,mapping
AbstractHandlerMethodMapping -> public void unregisterMapping(T mapping);1542771062;Un-register the given mapping._<p>This method may be invoked at runtime after initialization has completed._@param mapping the mapping to unregister;public void unregisterMapping(T mapping) {_		if (logger.isTraceEnabled()) {_			logger.trace("Unregister mapping \"" + mapping + "\"")__		}_		this.mappingRegistry.unregister(mapping)__	};un,register,the,given,mapping,p,this,method,may,be,invoked,at,runtime,after,initialization,has,completed,param,mapping,the,mapping,to,unregister;public,void,unregister,mapping,t,mapping,if,logger,is,trace,enabled,logger,trace,unregister,mapping,mapping,this,mapping,registry,unregister,mapping
AbstractHandlerMethodMapping -> public void unregisterMapping(T mapping);1548427561;Un-register the given mapping._<p>This method may be invoked at runtime after initialization has completed._@param mapping the mapping to unregister;public void unregisterMapping(T mapping) {_		if (logger.isTraceEnabled()) {_			logger.trace("Unregister mapping \"" + mapping + "\"")__		}_		this.mappingRegistry.unregister(mapping)__	};un,register,the,given,mapping,p,this,method,may,be,invoked,at,runtime,after,initialization,has,completed,param,mapping,the,mapping,to,unregister;public,void,unregister,mapping,t,mapping,if,logger,is,trace,enabled,logger,trace,unregister,mapping,mapping,this,mapping,registry,unregister,mapping
AbstractHandlerMethodMapping -> public void unregisterMapping(T mapping);1551093473;Un-register the given mapping._<p>This method may be invoked at runtime after initialization has completed._@param mapping the mapping to unregister;public void unregisterMapping(T mapping) {_		if (logger.isTraceEnabled()) {_			logger.trace("Unregister mapping \"" + mapping + "\"")__		}_		this.mappingRegistry.unregister(mapping)__	};un,register,the,given,mapping,p,this,method,may,be,invoked,at,runtime,after,initialization,has,completed,param,mapping,the,mapping,to,unregister;public,void,unregister,mapping,t,mapping,if,logger,is,trace,enabled,logger,trace,unregister,mapping,mapping,this,mapping,registry,unregister,mapping
AbstractHandlerMethodMapping -> MappingRegistry -> @Nullable 		public List<T> getMappingsByUrl(String urlPath);1496837955;Return matches for the given URL path. Not thread-safe._@see #acquireReadLock();@Nullable_		public List<T> getMappingsByUrl(String urlPath) {_			return this.urlLookup.get(urlPath)__		};return,matches,for,the,given,url,path,not,thread,safe,see,acquire,read,lock;nullable,public,list,t,get,mappings,by,url,string,url,path,return,this,url,lookup,get,url,path
AbstractHandlerMethodMapping -> MappingRegistry -> @Nullable 		public List<T> getMappingsByUrl(String urlPath);1497251962;Return matches for the given URL path. Not thread-safe._@see #acquireReadLock();@Nullable_		public List<T> getMappingsByUrl(String urlPath) {_			return this.urlLookup.get(urlPath)__		};return,matches,for,the,given,url,path,not,thread,safe,see,acquire,read,lock;nullable,public,list,t,get,mappings,by,url,string,url,path,return,this,url,lookup,get,url,path
AbstractHandlerMethodMapping -> MappingRegistry -> @Nullable 		public List<T> getMappingsByUrl(String urlPath);1498780456;Return matches for the given URL path. Not thread-safe._@see #acquireReadLock();@Nullable_		public List<T> getMappingsByUrl(String urlPath) {_			return this.urlLookup.get(urlPath)__		};return,matches,for,the,given,url,path,not,thread,safe,see,acquire,read,lock;nullable,public,list,t,get,mappings,by,url,string,url,path,return,this,url,lookup,get,url,path
AbstractHandlerMethodMapping -> MappingRegistry -> @Nullable 		public List<T> getMappingsByUrl(String urlPath);1518772998;Return matches for the given URL path. Not thread-safe._@see #acquireReadLock();@Nullable_		public List<T> getMappingsByUrl(String urlPath) {_			return this.urlLookup.get(urlPath)__		};return,matches,for,the,given,url,path,not,thread,safe,see,acquire,read,lock;nullable,public,list,t,get,mappings,by,url,string,url,path,return,this,url,lookup,get,url,path
AbstractHandlerMethodMapping -> MappingRegistry -> @Nullable 		public List<T> getMappingsByUrl(String urlPath);1522103912;Return matches for the given URL path. Not thread-safe._@see #acquireReadLock();@Nullable_		public List<T> getMappingsByUrl(String urlPath) {_			return this.urlLookup.get(urlPath)__		};return,matches,for,the,given,url,path,not,thread,safe,see,acquire,read,lock;nullable,public,list,t,get,mappings,by,url,string,url,path,return,this,url,lookup,get,url,path
AbstractHandlerMethodMapping -> MappingRegistry -> @Nullable 		public List<T> getMappingsByUrl(String urlPath);1522843494;Return matches for the given URL path. Not thread-safe._@see #acquireReadLock();@Nullable_		public List<T> getMappingsByUrl(String urlPath) {_			return this.urlLookup.get(urlPath)__		};return,matches,for,the,given,url,path,not,thread,safe,see,acquire,read,lock;nullable,public,list,t,get,mappings,by,url,string,url,path,return,this,url,lookup,get,url,path
AbstractHandlerMethodMapping -> MappingRegistry -> @Nullable 		public List<T> getMappingsByUrl(String urlPath);1529361191;Return matches for the given URL path. Not thread-safe._@see #acquireReadLock();@Nullable_		public List<T> getMappingsByUrl(String urlPath) {_			return this.urlLookup.get(urlPath)__		};return,matches,for,the,given,url,path,not,thread,safe,see,acquire,read,lock;nullable,public,list,t,get,mappings,by,url,string,url,path,return,this,url,lookup,get,url,path
AbstractHandlerMethodMapping -> MappingRegistry -> @Nullable 		public List<T> getMappingsByUrl(String urlPath);1529721864;Return matches for the given URL path. Not thread-safe._@see #acquireReadLock();@Nullable_		public List<T> getMappingsByUrl(String urlPath) {_			return this.urlLookup.get(urlPath)__		};return,matches,for,the,given,url,path,not,thread,safe,see,acquire,read,lock;nullable,public,list,t,get,mappings,by,url,string,url,path,return,this,url,lookup,get,url,path
AbstractHandlerMethodMapping -> MappingRegistry -> @Nullable 		public List<T> getMappingsByUrl(String urlPath);1530174524;Return matches for the given URL path. Not thread-safe._@see #acquireReadLock();@Nullable_		public List<T> getMappingsByUrl(String urlPath) {_			return this.urlLookup.get(urlPath)__		};return,matches,for,the,given,url,path,not,thread,safe,see,acquire,read,lock;nullable,public,list,t,get,mappings,by,url,string,url,path,return,this,url,lookup,get,url,path
AbstractHandlerMethodMapping -> MappingRegistry -> @Nullable 		public List<T> getMappingsByUrl(String urlPath);1530174524;Return matches for the given URL path. Not thread-safe._@see #acquireReadLock();@Nullable_		public List<T> getMappingsByUrl(String urlPath) {_			return this.urlLookup.get(urlPath)__		};return,matches,for,the,given,url,path,not,thread,safe,see,acquire,read,lock;nullable,public,list,t,get,mappings,by,url,string,url,path,return,this,url,lookup,get,url,path
AbstractHandlerMethodMapping -> MappingRegistry -> @Nullable 		public List<T> getMappingsByUrl(String urlPath);1533943217;Return matches for the given URL path. Not thread-safe._@see #acquireReadLock();@Nullable_		public List<T> getMappingsByUrl(String urlPath) {_			return this.urlLookup.get(urlPath)__		};return,matches,for,the,given,url,path,not,thread,safe,see,acquire,read,lock;nullable,public,list,t,get,mappings,by,url,string,url,path,return,this,url,lookup,get,url,path
AbstractHandlerMethodMapping -> MappingRegistry -> @Nullable 		public List<T> getMappingsByUrl(String urlPath);1542407418;Return matches for the given URL path. Not thread-safe._@see #acquireReadLock();@Nullable_		public List<T> getMappingsByUrl(String urlPath) {_			return this.urlLookup.get(urlPath)__		};return,matches,for,the,given,url,path,not,thread,safe,see,acquire,read,lock;nullable,public,list,t,get,mappings,by,url,string,url,path,return,this,url,lookup,get,url,path
AbstractHandlerMethodMapping -> MappingRegistry -> @Nullable 		public List<T> getMappingsByUrl(String urlPath);1542771062;Return matches for the given URL path. Not thread-safe._@see #acquireReadLock();@Nullable_		public List<T> getMappingsByUrl(String urlPath) {_			return this.urlLookup.get(urlPath)__		};return,matches,for,the,given,url,path,not,thread,safe,see,acquire,read,lock;nullable,public,list,t,get,mappings,by,url,string,url,path,return,this,url,lookup,get,url,path
AbstractHandlerMethodMapping -> MappingRegistry -> @Nullable 		public List<T> getMappingsByUrl(String urlPath);1548427561;Return matches for the given URL path. Not thread-safe._@see #acquireReadLock();@Nullable_		public List<T> getMappingsByUrl(String urlPath) {_			return this.urlLookup.get(urlPath)__		};return,matches,for,the,given,url,path,not,thread,safe,see,acquire,read,lock;nullable,public,list,t,get,mappings,by,url,string,url,path,return,this,url,lookup,get,url,path
AbstractHandlerMethodMapping -> MappingRegistry -> @Nullable 		public List<T> getMappingsByUrl(String urlPath);1551093473;Return matches for the given URL path. Not thread-safe._@see #acquireReadLock();@Nullable_		public List<T> getMappingsByUrl(String urlPath) {_			return this.urlLookup.get(urlPath)__		};return,matches,for,the,given,url,path,not,thread,safe,see,acquire,read,lock;nullable,public,list,t,get,mappings,by,url,string,url,path,return,this,url,lookup,get,url,path
AbstractHandlerMethodMapping -> protected HandlerMethod lookupHandlerMethod(String lookupPath, HttpServletRequest request) throws Exception;1328020251;Look up the best-matching handler method for the current request._If multiple matches are found, the best match is selected.__@param lookupPath mapping lookup path within the current servlet mapping_@param request the current request_@return the best-matching handler method, or {@code null} if no match__@see #handleMatch(Object, String, HttpServletRequest)_@see #handleNoMatch(Set, String, HttpServletRequest);protected HandlerMethod lookupHandlerMethod(String lookupPath, HttpServletRequest request) throws Exception {_		List<T> mappings = urlMap.get(lookupPath)__		if (mappings == null) {_			mappings = new ArrayList<T>(handlerMethods.keySet())__		}_			_		List<Match> matches = new ArrayList<Match>()__		_		for (T mapping : mappings) {_			T match = getMatchingMapping(mapping, request)__			if (match != null) {_				matches.add(new Match(match, handlerMethods.get(mapping)))__			}_		}__		if (!matches.isEmpty()) {_			Comparator<Match> comparator = new MatchComparator(getMappingComparator(request))__			Collections.sort(matches, comparator)___			if (logger.isTraceEnabled()) {_				logger.trace("Found " + matches.size() + " matching mapping(s) for [" + lookupPath + "] : " + matches)__			}__			Match bestMatch = matches.get(0)__			if (matches.size() > 1) {_				Match secondBestMatch = matches.get(1)__				if (comparator.compare(bestMatch, secondBestMatch) == 0) {_					Method m1 = bestMatch.handlerMethod.getMethod()__					Method m2 = secondBestMatch.handlerMethod.getMethod()__					throw new IllegalStateException(_							"Ambiguous handler methods mapped for HTTP path '" + request.getRequestURL() + "': {" +_							m1 + ", " + m2 + "}")__				}_			}__			handleMatch(bestMatch.mapping, lookupPath, request)__			return bestMatch.handlerMethod__		}_		else {_			return handleNoMatch(handlerMethods.keySet(), lookupPath, request)__		}_	};look,up,the,best,matching,handler,method,for,the,current,request,if,multiple,matches,are,found,the,best,match,is,selected,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,request,the,current,request,return,the,best,matching,handler,method,or,code,null,if,no,match,see,handle,match,object,string,http,servlet,request,see,handle,no,match,set,string,http,servlet,request;protected,handler,method,lookup,handler,method,string,lookup,path,http,servlet,request,request,throws,exception,list,t,mappings,url,map,get,lookup,path,if,mappings,null,mappings,new,array,list,t,handler,methods,key,set,list,match,matches,new,array,list,match,for,t,mapping,mappings,t,match,get,matching,mapping,mapping,request,if,match,null,matches,add,new,match,match,handler,methods,get,mapping,if,matches,is,empty,comparator,match,comparator,new,match,comparator,get,mapping,comparator,request,collections,sort,matches,comparator,if,logger,is,trace,enabled,logger,trace,found,matches,size,matching,mapping,s,for,lookup,path,matches,match,best,match,matches,get,0,if,matches,size,1,match,second,best,match,matches,get,1,if,comparator,compare,best,match,second,best,match,0,method,m1,best,match,handler,method,get,method,method,m2,second,best,match,handler,method,get,method,throw,new,illegal,state,exception,ambiguous,handler,methods,mapped,for,http,path,request,get,request,url,m1,m2,handle,match,best,match,mapping,lookup,path,request,return,best,match,handler,method,else,return,handle,no,match,handler,methods,key,set,lookup,path,request
AbstractHandlerMethodMapping -> protected HandlerMethod lookupHandlerMethod(String lookupPath, HttpServletRequest request) throws Exception;1328022204;Look up the best-matching handler method for the current request._If multiple matches are found, the best match is selected.__@param lookupPath mapping lookup path within the current servlet mapping_@param request the current request_@return the best-matching handler method, or {@code null} if no match__@see #handleMatch(Object, String, HttpServletRequest)_@see #handleNoMatch(Set, String, HttpServletRequest);protected HandlerMethod lookupHandlerMethod(String lookupPath, HttpServletRequest request) throws Exception {_		List<Match> matches = new ArrayList<Match>()___		List<T> directPathMatches = this.urlMap.get(lookupPath)__		if (directPathMatches != null) {_			addMatchingMappings(directPathMatches, matches, request)__		}__		if (matches.isEmpty()) {_			_			addMatchingMappings(this.handlerMethods.keySet(), matches, request)__		}__		if (!matches.isEmpty()) {_			Comparator<Match> comparator = new MatchComparator(getMappingComparator(request))__			Collections.sort(matches, comparator)___			if (logger.isTraceEnabled()) {_				logger.trace("Found " + matches.size() + " matching mapping(s) for [" + lookupPath + "] : " + matches)__			}__			Match bestMatch = matches.get(0)__			if (matches.size() > 1) {_				Match secondBestMatch = matches.get(1)__				if (comparator.compare(bestMatch, secondBestMatch) == 0) {_					Method m1 = bestMatch.handlerMethod.getMethod()__					Method m2 = secondBestMatch.handlerMethod.getMethod()__					throw new IllegalStateException(_							"Ambiguous handler methods mapped for HTTP path '" + request.getRequestURL() + "': {" +_							m1 + ", " + m2 + "}")__				}_			}__			handleMatch(bestMatch.mapping, lookupPath, request)__			return bestMatch.handlerMethod__		}_		else {_			return handleNoMatch(handlerMethods.keySet(), lookupPath, request)__		}_	};look,up,the,best,matching,handler,method,for,the,current,request,if,multiple,matches,are,found,the,best,match,is,selected,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,request,the,current,request,return,the,best,matching,handler,method,or,code,null,if,no,match,see,handle,match,object,string,http,servlet,request,see,handle,no,match,set,string,http,servlet,request;protected,handler,method,lookup,handler,method,string,lookup,path,http,servlet,request,request,throws,exception,list,match,matches,new,array,list,match,list,t,direct,path,matches,this,url,map,get,lookup,path,if,direct,path,matches,null,add,matching,mappings,direct,path,matches,matches,request,if,matches,is,empty,add,matching,mappings,this,handler,methods,key,set,matches,request,if,matches,is,empty,comparator,match,comparator,new,match,comparator,get,mapping,comparator,request,collections,sort,matches,comparator,if,logger,is,trace,enabled,logger,trace,found,matches,size,matching,mapping,s,for,lookup,path,matches,match,best,match,matches,get,0,if,matches,size,1,match,second,best,match,matches,get,1,if,comparator,compare,best,match,second,best,match,0,method,m1,best,match,handler,method,get,method,method,m2,second,best,match,handler,method,get,method,throw,new,illegal,state,exception,ambiguous,handler,methods,mapped,for,http,path,request,get,request,url,m1,m2,handle,match,best,match,mapping,lookup,path,request,return,best,match,handler,method,else,return,handle,no,match,handler,methods,key,set,lookup,path,request
AbstractHandlerMethodMapping -> protected HandlerMethod lookupHandlerMethod(String lookupPath, HttpServletRequest request) throws Exception;1336682556;Look up the best-matching handler method for the current request._If multiple matches are found, the best match is selected.__@param lookupPath mapping lookup path within the current servlet mapping_@param request the current request_@return the best-matching handler method, or {@code null} if no match__@see #handleMatch(Object, String, HttpServletRequest)_@see #handleNoMatch(Set, String, HttpServletRequest);protected HandlerMethod lookupHandlerMethod(String lookupPath, HttpServletRequest request) throws Exception {_		List<Match> matches = new ArrayList<Match>()___		List<T> directPathMatches = this.urlMap.get(lookupPath)__		if (directPathMatches != null) {_			addMatchingMappings(directPathMatches, matches, request)__		}__		if (matches.isEmpty()) {_			_			addMatchingMappings(this.handlerMethods.keySet(), matches, request)__		}__		if (!matches.isEmpty()) {_			Comparator<Match> comparator = new MatchComparator(getMappingComparator(request))__			Collections.sort(matches, comparator)___			if (logger.isTraceEnabled()) {_				logger.trace("Found " + matches.size() + " matching mapping(s) for [" + lookupPath + "] : " + matches)__			}__			Match bestMatch = matches.get(0)__			if (matches.size() > 1) {_				Match secondBestMatch = matches.get(1)__				if (comparator.compare(bestMatch, secondBestMatch) == 0) {_					Method m1 = bestMatch.handlerMethod.getMethod()__					Method m2 = secondBestMatch.handlerMethod.getMethod()__					throw new IllegalStateException(_							"Ambiguous handler methods mapped for HTTP path '" + request.getRequestURL() + "': {" +_							m1 + ", " + m2 + "}")__				}_			}__			handleMatch(bestMatch.mapping, lookupPath, request)__			return bestMatch.handlerMethod__		}_		else {_			return handleNoMatch(handlerMethods.keySet(), lookupPath, request)__		}_	};look,up,the,best,matching,handler,method,for,the,current,request,if,multiple,matches,are,found,the,best,match,is,selected,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,request,the,current,request,return,the,best,matching,handler,method,or,code,null,if,no,match,see,handle,match,object,string,http,servlet,request,see,handle,no,match,set,string,http,servlet,request;protected,handler,method,lookup,handler,method,string,lookup,path,http,servlet,request,request,throws,exception,list,match,matches,new,array,list,match,list,t,direct,path,matches,this,url,map,get,lookup,path,if,direct,path,matches,null,add,matching,mappings,direct,path,matches,matches,request,if,matches,is,empty,add,matching,mappings,this,handler,methods,key,set,matches,request,if,matches,is,empty,comparator,match,comparator,new,match,comparator,get,mapping,comparator,request,collections,sort,matches,comparator,if,logger,is,trace,enabled,logger,trace,found,matches,size,matching,mapping,s,for,lookup,path,matches,match,best,match,matches,get,0,if,matches,size,1,match,second,best,match,matches,get,1,if,comparator,compare,best,match,second,best,match,0,method,m1,best,match,handler,method,get,method,method,m2,second,best,match,handler,method,get,method,throw,new,illegal,state,exception,ambiguous,handler,methods,mapped,for,http,path,request,get,request,url,m1,m2,handle,match,best,match,mapping,lookup,path,request,return,best,match,handler,method,else,return,handle,no,match,handler,methods,key,set,lookup,path,request
AbstractHandlerMethodMapping -> protected HandlerMethod lookupHandlerMethod(String lookupPath, HttpServletRequest request) throws Exception;1341441111;Look up the best-matching handler method for the current request._If multiple matches are found, the best match is selected._@param lookupPath mapping lookup path within the current servlet mapping_@param request the current request_@return the best-matching handler method, or {@code null} if no match_@see #handleMatch(Object, String, HttpServletRequest)_@see #handleNoMatch(Set, String, HttpServletRequest);protected HandlerMethod lookupHandlerMethod(String lookupPath, HttpServletRequest request) throws Exception {_		List<Match> matches = new ArrayList<Match>()___		List<T> directPathMatches = this.urlMap.get(lookupPath)__		if (directPathMatches != null) {_			addMatchingMappings(directPathMatches, matches, request)__		}__		if (matches.isEmpty()) {_			_			addMatchingMappings(this.handlerMethods.keySet(), matches, request)__		}__		if (!matches.isEmpty()) {_			Comparator<Match> comparator = new MatchComparator(getMappingComparator(request))__			Collections.sort(matches, comparator)___			if (logger.isTraceEnabled()) {_				logger.trace("Found " + matches.size() + " matching mapping(s) for [" + lookupPath + "] : " + matches)__			}__			Match bestMatch = matches.get(0)__			if (matches.size() > 1) {_				Match secondBestMatch = matches.get(1)__				if (comparator.compare(bestMatch, secondBestMatch) == 0) {_					Method m1 = bestMatch.handlerMethod.getMethod()__					Method m2 = secondBestMatch.handlerMethod.getMethod()__					throw new IllegalStateException(_							"Ambiguous handler methods mapped for HTTP path '" + request.getRequestURL() + "': {" +_							m1 + ", " + m2 + "}")__				}_			}__			handleMatch(bestMatch.mapping, lookupPath, request)__			return bestMatch.handlerMethod__		}_		else {_			return handleNoMatch(handlerMethods.keySet(), lookupPath, request)__		}_	};look,up,the,best,matching,handler,method,for,the,current,request,if,multiple,matches,are,found,the,best,match,is,selected,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,request,the,current,request,return,the,best,matching,handler,method,or,code,null,if,no,match,see,handle,match,object,string,http,servlet,request,see,handle,no,match,set,string,http,servlet,request;protected,handler,method,lookup,handler,method,string,lookup,path,http,servlet,request,request,throws,exception,list,match,matches,new,array,list,match,list,t,direct,path,matches,this,url,map,get,lookup,path,if,direct,path,matches,null,add,matching,mappings,direct,path,matches,matches,request,if,matches,is,empty,add,matching,mappings,this,handler,methods,key,set,matches,request,if,matches,is,empty,comparator,match,comparator,new,match,comparator,get,mapping,comparator,request,collections,sort,matches,comparator,if,logger,is,trace,enabled,logger,trace,found,matches,size,matching,mapping,s,for,lookup,path,matches,match,best,match,matches,get,0,if,matches,size,1,match,second,best,match,matches,get,1,if,comparator,compare,best,match,second,best,match,0,method,m1,best,match,handler,method,get,method,method,m2,second,best,match,handler,method,get,method,throw,new,illegal,state,exception,ambiguous,handler,methods,mapped,for,http,path,request,get,request,url,m1,m2,handle,match,best,match,mapping,lookup,path,request,return,best,match,handler,method,else,return,handle,no,match,handler,methods,key,set,lookup,path,request
AbstractHandlerMethodMapping -> protected HandlerMethod lookupHandlerMethod(String lookupPath, HttpServletRequest request) throws Exception;1356735495;Look up the best-matching handler method for the current request._If multiple matches are found, the best match is selected._@param lookupPath mapping lookup path within the current servlet mapping_@param request the current request_@return the best-matching handler method, or {@code null} if no match_@see #handleMatch(Object, String, HttpServletRequest)_@see #handleNoMatch(Set, String, HttpServletRequest);protected HandlerMethod lookupHandlerMethod(String lookupPath, HttpServletRequest request) throws Exception {_		List<Match> matches = new ArrayList<Match>()___		List<T> directPathMatches = this.urlMap.get(lookupPath)__		if (directPathMatches != null) {_			addMatchingMappings(directPathMatches, matches, request)__		}__		if (matches.isEmpty()) {_			_			addMatchingMappings(this.handlerMethods.keySet(), matches, request)__		}__		if (!matches.isEmpty()) {_			Comparator<Match> comparator = new MatchComparator(getMappingComparator(request))__			Collections.sort(matches, comparator)___			if (logger.isTraceEnabled()) {_				logger.trace("Found " + matches.size() + " matching mapping(s) for [" + lookupPath + "] : " + matches)__			}__			Match bestMatch = matches.get(0)__			if (matches.size() > 1) {_				Match secondBestMatch = matches.get(1)__				if (comparator.compare(bestMatch, secondBestMatch) == 0) {_					Method m1 = bestMatch.handlerMethod.getMethod()__					Method m2 = secondBestMatch.handlerMethod.getMethod()__					throw new IllegalStateException(_							"Ambiguous handler methods mapped for HTTP path '" + request.getRequestURL() + "': {" +_							m1 + ", " + m2 + "}")__				}_			}__			handleMatch(bestMatch.mapping, lookupPath, request)__			return bestMatch.handlerMethod__		}_		else {_			return handleNoMatch(handlerMethods.keySet(), lookupPath, request)__		}_	};look,up,the,best,matching,handler,method,for,the,current,request,if,multiple,matches,are,found,the,best,match,is,selected,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,request,the,current,request,return,the,best,matching,handler,method,or,code,null,if,no,match,see,handle,match,object,string,http,servlet,request,see,handle,no,match,set,string,http,servlet,request;protected,handler,method,lookup,handler,method,string,lookup,path,http,servlet,request,request,throws,exception,list,match,matches,new,array,list,match,list,t,direct,path,matches,this,url,map,get,lookup,path,if,direct,path,matches,null,add,matching,mappings,direct,path,matches,matches,request,if,matches,is,empty,add,matching,mappings,this,handler,methods,key,set,matches,request,if,matches,is,empty,comparator,match,comparator,new,match,comparator,get,mapping,comparator,request,collections,sort,matches,comparator,if,logger,is,trace,enabled,logger,trace,found,matches,size,matching,mapping,s,for,lookup,path,matches,match,best,match,matches,get,0,if,matches,size,1,match,second,best,match,matches,get,1,if,comparator,compare,best,match,second,best,match,0,method,m1,best,match,handler,method,get,method,method,m2,second,best,match,handler,method,get,method,throw,new,illegal,state,exception,ambiguous,handler,methods,mapped,for,http,path,request,get,request,url,m1,m2,handle,match,best,match,mapping,lookup,path,request,return,best,match,handler,method,else,return,handle,no,match,handler,methods,key,set,lookup,path,request
AbstractHandlerMethodMapping -> protected HandlerMethod lookupHandlerMethod(String lookupPath, HttpServletRequest request) throws Exception;1357119239;Look up the best-matching handler method for the current request._If multiple matches are found, the best match is selected._@param lookupPath mapping lookup path within the current servlet mapping_@param request the current request_@return the best-matching handler method, or {@code null} if no match_@see #handleMatch(Object, String, HttpServletRequest)_@see #handleNoMatch(Set, String, HttpServletRequest);protected HandlerMethod lookupHandlerMethod(String lookupPath, HttpServletRequest request) throws Exception {_		List<Match> matches = new ArrayList<Match>()___		List<T> directPathMatches = this.urlMap.get(lookupPath)__		if (directPathMatches != null) {_			addMatchingMappings(directPathMatches, matches, request)__		}__		if (matches.isEmpty()) {_			_			addMatchingMappings(this.handlerMethods.keySet(), matches, request)__		}__		if (!matches.isEmpty()) {_			Comparator<Match> comparator = new MatchComparator(getMappingComparator(request))__			Collections.sort(matches, comparator)___			if (logger.isTraceEnabled()) {_				logger.trace("Found " + matches.size() + " matching mapping(s) for [" + lookupPath + "] : " + matches)__			}__			Match bestMatch = matches.get(0)__			if (matches.size() > 1) {_				Match secondBestMatch = matches.get(1)__				if (comparator.compare(bestMatch, secondBestMatch) == 0) {_					Method m1 = bestMatch.handlerMethod.getMethod()__					Method m2 = secondBestMatch.handlerMethod.getMethod()__					throw new IllegalStateException(_							"Ambiguous handler methods mapped for HTTP path '" + request.getRequestURL() + "': {" +_							m1 + ", " + m2 + "}")__				}_			}__			handleMatch(bestMatch.mapping, lookupPath, request)__			return bestMatch.handlerMethod__		}_		else {_			return handleNoMatch(handlerMethods.keySet(), lookupPath, request)__		}_	};look,up,the,best,matching,handler,method,for,the,current,request,if,multiple,matches,are,found,the,best,match,is,selected,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,request,the,current,request,return,the,best,matching,handler,method,or,code,null,if,no,match,see,handle,match,object,string,http,servlet,request,see,handle,no,match,set,string,http,servlet,request;protected,handler,method,lookup,handler,method,string,lookup,path,http,servlet,request,request,throws,exception,list,match,matches,new,array,list,match,list,t,direct,path,matches,this,url,map,get,lookup,path,if,direct,path,matches,null,add,matching,mappings,direct,path,matches,matches,request,if,matches,is,empty,add,matching,mappings,this,handler,methods,key,set,matches,request,if,matches,is,empty,comparator,match,comparator,new,match,comparator,get,mapping,comparator,request,collections,sort,matches,comparator,if,logger,is,trace,enabled,logger,trace,found,matches,size,matching,mapping,s,for,lookup,path,matches,match,best,match,matches,get,0,if,matches,size,1,match,second,best,match,matches,get,1,if,comparator,compare,best,match,second,best,match,0,method,m1,best,match,handler,method,get,method,method,m2,second,best,match,handler,method,get,method,throw,new,illegal,state,exception,ambiguous,handler,methods,mapped,for,http,path,request,get,request,url,m1,m2,handle,match,best,match,mapping,lookup,path,request,return,best,match,handler,method,else,return,handle,no,match,handler,methods,key,set,lookup,path,request
AbstractHandlerMethodMapping -> protected HandlerMethod lookupHandlerMethod(String lookupPath, HttpServletRequest request) throws Exception;1362408075;Look up the best-matching handler method for the current request._If multiple matches are found, the best match is selected._@param lookupPath mapping lookup path within the current servlet mapping_@param request the current request_@return the best-matching handler method, or {@code null} if no match_@see #handleMatch(Object, String, HttpServletRequest)_@see #handleNoMatch(Set, String, HttpServletRequest);protected HandlerMethod lookupHandlerMethod(String lookupPath, HttpServletRequest request) throws Exception {_		List<Match> matches = new ArrayList<Match>()___		List<T> directPathMatches = this.urlMap.get(lookupPath)__		if (directPathMatches != null) {_			addMatchingMappings(directPathMatches, matches, request)__		}__		if (matches.isEmpty()) {_			_			addMatchingMappings(this.handlerMethods.keySet(), matches, request)__		}__		if (!matches.isEmpty()) {_			Comparator<Match> comparator = new MatchComparator(getMappingComparator(request))__			Collections.sort(matches, comparator)___			if (logger.isTraceEnabled()) {_				logger.trace("Found " + matches.size() + " matching mapping(s) for [" + lookupPath + "] : " + matches)__			}__			Match bestMatch = matches.get(0)__			if (matches.size() > 1) {_				Match secondBestMatch = matches.get(1)__				if (comparator.compare(bestMatch, secondBestMatch) == 0) {_					Method m1 = bestMatch.handlerMethod.getMethod()__					Method m2 = secondBestMatch.handlerMethod.getMethod()__					throw new IllegalStateException(_							"Ambiguous handler methods mapped for HTTP path '" + request.getRequestURL() + "': {" +_							m1 + ", " + m2 + "}")__				}_			}__			handleMatch(bestMatch.mapping, lookupPath, request)__			return bestMatch.handlerMethod__		}_		else {_			return handleNoMatch(handlerMethods.keySet(), lookupPath, request)__		}_	};look,up,the,best,matching,handler,method,for,the,current,request,if,multiple,matches,are,found,the,best,match,is,selected,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,request,the,current,request,return,the,best,matching,handler,method,or,code,null,if,no,match,see,handle,match,object,string,http,servlet,request,see,handle,no,match,set,string,http,servlet,request;protected,handler,method,lookup,handler,method,string,lookup,path,http,servlet,request,request,throws,exception,list,match,matches,new,array,list,match,list,t,direct,path,matches,this,url,map,get,lookup,path,if,direct,path,matches,null,add,matching,mappings,direct,path,matches,matches,request,if,matches,is,empty,add,matching,mappings,this,handler,methods,key,set,matches,request,if,matches,is,empty,comparator,match,comparator,new,match,comparator,get,mapping,comparator,request,collections,sort,matches,comparator,if,logger,is,trace,enabled,logger,trace,found,matches,size,matching,mapping,s,for,lookup,path,matches,match,best,match,matches,get,0,if,matches,size,1,match,second,best,match,matches,get,1,if,comparator,compare,best,match,second,best,match,0,method,m1,best,match,handler,method,get,method,method,m2,second,best,match,handler,method,get,method,throw,new,illegal,state,exception,ambiguous,handler,methods,mapped,for,http,path,request,get,request,url,m1,m2,handle,match,best,match,mapping,lookup,path,request,return,best,match,handler,method,else,return,handle,no,match,handler,methods,key,set,lookup,path,request
AbstractHandlerMethodMapping -> protected HandlerMethod lookupHandlerMethod(String lookupPath, HttpServletRequest request) throws Exception;1368482696;Look up the best-matching handler method for the current request._If multiple matches are found, the best match is selected._@param lookupPath mapping lookup path within the current servlet mapping_@param request the current request_@return the best-matching handler method, or {@code null} if no match_@see #handleMatch(Object, String, HttpServletRequest)_@see #handleNoMatch(Set, String, HttpServletRequest);protected HandlerMethod lookupHandlerMethod(String lookupPath, HttpServletRequest request) throws Exception {_		List<Match> matches = new ArrayList<Match>()___		List<T> directPathMatches = this.urlMap.get(lookupPath)__		if (directPathMatches != null) {_			addMatchingMappings(directPathMatches, matches, request)__		}__		if (matches.isEmpty()) {_			_			addMatchingMappings(this.handlerMethods.keySet(), matches, request)__		}__		if (!matches.isEmpty()) {_			Comparator<Match> comparator = new MatchComparator(getMappingComparator(request))__			Collections.sort(matches, comparator)___			if (logger.isTraceEnabled()) {_				logger.trace("Found " + matches.size() + " matching mapping(s) for [" + lookupPath + "] : " + matches)__			}__			Match bestMatch = matches.get(0)__			if (matches.size() > 1) {_				Match secondBestMatch = matches.get(1)__				if (comparator.compare(bestMatch, secondBestMatch) == 0) {_					Method m1 = bestMatch.handlerMethod.getMethod()__					Method m2 = secondBestMatch.handlerMethod.getMethod()__					throw new IllegalStateException(_							"Ambiguous handler methods mapped for HTTP path '" + request.getRequestURL() + "': {" +_							m1 + ", " + m2 + "}")__				}_			}__			handleMatch(bestMatch.mapping, lookupPath, request)__			return bestMatch.handlerMethod__		}_		else {_			return handleNoMatch(handlerMethods.keySet(), lookupPath, request)__		}_	};look,up,the,best,matching,handler,method,for,the,current,request,if,multiple,matches,are,found,the,best,match,is,selected,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,request,the,current,request,return,the,best,matching,handler,method,or,code,null,if,no,match,see,handle,match,object,string,http,servlet,request,see,handle,no,match,set,string,http,servlet,request;protected,handler,method,lookup,handler,method,string,lookup,path,http,servlet,request,request,throws,exception,list,match,matches,new,array,list,match,list,t,direct,path,matches,this,url,map,get,lookup,path,if,direct,path,matches,null,add,matching,mappings,direct,path,matches,matches,request,if,matches,is,empty,add,matching,mappings,this,handler,methods,key,set,matches,request,if,matches,is,empty,comparator,match,comparator,new,match,comparator,get,mapping,comparator,request,collections,sort,matches,comparator,if,logger,is,trace,enabled,logger,trace,found,matches,size,matching,mapping,s,for,lookup,path,matches,match,best,match,matches,get,0,if,matches,size,1,match,second,best,match,matches,get,1,if,comparator,compare,best,match,second,best,match,0,method,m1,best,match,handler,method,get,method,method,m2,second,best,match,handler,method,get,method,throw,new,illegal,state,exception,ambiguous,handler,methods,mapped,for,http,path,request,get,request,url,m1,m2,handle,match,best,match,mapping,lookup,path,request,return,best,match,handler,method,else,return,handle,no,match,handler,methods,key,set,lookup,path,request
AbstractHandlerMethodMapping -> protected HandlerMethod lookupHandlerMethod(String lookupPath, HttpServletRequest request) throws Exception;1368581529;Look up the best-matching handler method for the current request._If multiple matches are found, the best match is selected._@param lookupPath mapping lookup path within the current servlet mapping_@param request the current request_@return the best-matching handler method, or {@code null} if no match_@see #handleMatch(Object, String, HttpServletRequest)_@see #handleNoMatch(Set, String, HttpServletRequest);protected HandlerMethod lookupHandlerMethod(String lookupPath, HttpServletRequest request) throws Exception {_		List<Match> matches = new ArrayList<Match>()___		List<T> directPathMatches = this.urlMap.get(lookupPath)__		if (directPathMatches != null) {_			addMatchingMappings(directPathMatches, matches, request)__		}__		if (matches.isEmpty()) {_			_			addMatchingMappings(this.handlerMethods.keySet(), matches, request)__		}__		if (!matches.isEmpty()) {_			Comparator<Match> comparator = new MatchComparator(getMappingComparator(request))__			Collections.sort(matches, comparator)___			if (logger.isTraceEnabled()) {_				logger.trace("Found " + matches.size() + " matching mapping(s) for [" + lookupPath + "] : " + matches)__			}__			Match bestMatch = matches.get(0)__			if (matches.size() > 1) {_				Match secondBestMatch = matches.get(1)__				if (comparator.compare(bestMatch, secondBestMatch) == 0) {_					Method m1 = bestMatch.handlerMethod.getMethod()__					Method m2 = secondBestMatch.handlerMethod.getMethod()__					throw new IllegalStateException(_							"Ambiguous handler methods mapped for HTTP path '" + request.getRequestURL() + "': {" +_							m1 + ", " + m2 + "}")__				}_			}__			handleMatch(bestMatch.mapping, lookupPath, request)__			return bestMatch.handlerMethod__		}_		else {_			return handleNoMatch(handlerMethods.keySet(), lookupPath, request)__		}_	};look,up,the,best,matching,handler,method,for,the,current,request,if,multiple,matches,are,found,the,best,match,is,selected,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,request,the,current,request,return,the,best,matching,handler,method,or,code,null,if,no,match,see,handle,match,object,string,http,servlet,request,see,handle,no,match,set,string,http,servlet,request;protected,handler,method,lookup,handler,method,string,lookup,path,http,servlet,request,request,throws,exception,list,match,matches,new,array,list,match,list,t,direct,path,matches,this,url,map,get,lookup,path,if,direct,path,matches,null,add,matching,mappings,direct,path,matches,matches,request,if,matches,is,empty,add,matching,mappings,this,handler,methods,key,set,matches,request,if,matches,is,empty,comparator,match,comparator,new,match,comparator,get,mapping,comparator,request,collections,sort,matches,comparator,if,logger,is,trace,enabled,logger,trace,found,matches,size,matching,mapping,s,for,lookup,path,matches,match,best,match,matches,get,0,if,matches,size,1,match,second,best,match,matches,get,1,if,comparator,compare,best,match,second,best,match,0,method,m1,best,match,handler,method,get,method,method,m2,second,best,match,handler,method,get,method,throw,new,illegal,state,exception,ambiguous,handler,methods,mapped,for,http,path,request,get,request,url,m1,m2,handle,match,best,match,mapping,lookup,path,request,return,best,match,handler,method,else,return,handle,no,match,handler,methods,key,set,lookup,path,request
AbstractHandlerMethodMapping -> protected HandlerMethod lookupHandlerMethod(String lookupPath, HttpServletRequest request) throws Exception;1382665849;Look up the best-matching handler method for the current request._If multiple matches are found, the best match is selected._@param lookupPath mapping lookup path within the current servlet mapping_@param request the current request_@return the best-matching handler method, or {@code null} if no match_@see #handleMatch(Object, String, HttpServletRequest)_@see #handleNoMatch(Set, String, HttpServletRequest);protected HandlerMethod lookupHandlerMethod(String lookupPath, HttpServletRequest request) throws Exception {_		List<Match> matches = new ArrayList<Match>()___		List<T> directPathMatches = this.urlMap.get(lookupPath)__		if (directPathMatches != null) {_			addMatchingMappings(directPathMatches, matches, request)__		}__		if (matches.isEmpty()) {_			_			addMatchingMappings(this.handlerMethods.keySet(), matches, request)__		}__		if (!matches.isEmpty()) {_			Comparator<Match> comparator = new MatchComparator(getMappingComparator(request))__			Collections.sort(matches, comparator)___			if (logger.isTraceEnabled()) {_				logger.trace("Found " + matches.size() + " matching mapping(s) for [" + lookupPath + "] : " + matches)__			}__			Match bestMatch = matches.get(0)__			if (matches.size() > 1) {_				Match secondBestMatch = matches.get(1)__				if (comparator.compare(bestMatch, secondBestMatch) == 0) {_					Method m1 = bestMatch.handlerMethod.getMethod()__					Method m2 = secondBestMatch.handlerMethod.getMethod()__					throw new IllegalStateException(_							"Ambiguous handler methods mapped for HTTP path '" + request.getRequestURL() + "': {" +_							m1 + ", " + m2 + "}")__				}_			}__			handleMatch(bestMatch.mapping, lookupPath, request)__			return bestMatch.handlerMethod__		}_		else {_			return handleNoMatch(handlerMethods.keySet(), lookupPath, request)__		}_	};look,up,the,best,matching,handler,method,for,the,current,request,if,multiple,matches,are,found,the,best,match,is,selected,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,request,the,current,request,return,the,best,matching,handler,method,or,code,null,if,no,match,see,handle,match,object,string,http,servlet,request,see,handle,no,match,set,string,http,servlet,request;protected,handler,method,lookup,handler,method,string,lookup,path,http,servlet,request,request,throws,exception,list,match,matches,new,array,list,match,list,t,direct,path,matches,this,url,map,get,lookup,path,if,direct,path,matches,null,add,matching,mappings,direct,path,matches,matches,request,if,matches,is,empty,add,matching,mappings,this,handler,methods,key,set,matches,request,if,matches,is,empty,comparator,match,comparator,new,match,comparator,get,mapping,comparator,request,collections,sort,matches,comparator,if,logger,is,trace,enabled,logger,trace,found,matches,size,matching,mapping,s,for,lookup,path,matches,match,best,match,matches,get,0,if,matches,size,1,match,second,best,match,matches,get,1,if,comparator,compare,best,match,second,best,match,0,method,m1,best,match,handler,method,get,method,method,m2,second,best,match,handler,method,get,method,throw,new,illegal,state,exception,ambiguous,handler,methods,mapped,for,http,path,request,get,request,url,m1,m2,handle,match,best,match,mapping,lookup,path,request,return,best,match,handler,method,else,return,handle,no,match,handler,methods,key,set,lookup,path,request
AbstractHandlerMethodMapping -> protected HandlerMethod lookupHandlerMethod(String lookupPath, HttpServletRequest request) throws Exception;1392160296;Look up the best-matching handler method for the current request._If multiple matches are found, the best match is selected._@param lookupPath mapping lookup path within the current servlet mapping_@param request the current request_@return the best-matching handler method, or {@code null} if no match_@see #handleMatch(Object, String, HttpServletRequest)_@see #handleNoMatch(Set, String, HttpServletRequest);protected HandlerMethod lookupHandlerMethod(String lookupPath, HttpServletRequest request) throws Exception {_		List<Match> matches = new ArrayList<Match>()___		List<T> directPathMatches = this.urlMap.get(lookupPath)__		if (directPathMatches != null) {_			addMatchingMappings(directPathMatches, matches, request)__		}__		if (matches.isEmpty()) {_			_			addMatchingMappings(this.handlerMethods.keySet(), matches, request)__		}__		if (!matches.isEmpty()) {_			Comparator<Match> comparator = new MatchComparator(getMappingComparator(request))__			Collections.sort(matches, comparator)___			if (logger.isTraceEnabled()) {_				logger.trace("Found " + matches.size() + " matching mapping(s) for [" + lookupPath + "] : " + matches)__			}__			Match bestMatch = matches.get(0)__			if (matches.size() > 1) {_				Match secondBestMatch = matches.get(1)__				if (comparator.compare(bestMatch, secondBestMatch) == 0) {_					Method m1 = bestMatch.handlerMethod.getMethod()__					Method m2 = secondBestMatch.handlerMethod.getMethod()__					throw new IllegalStateException(_							"Ambiguous handler methods mapped for HTTP path '" + request.getRequestURL() + "': {" +_							m1 + ", " + m2 + "}")__				}_			}__			handleMatch(bestMatch.mapping, lookupPath, request)__			return bestMatch.handlerMethod__		}_		else {_			return handleNoMatch(handlerMethods.keySet(), lookupPath, request)__		}_	};look,up,the,best,matching,handler,method,for,the,current,request,if,multiple,matches,are,found,the,best,match,is,selected,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,request,the,current,request,return,the,best,matching,handler,method,or,code,null,if,no,match,see,handle,match,object,string,http,servlet,request,see,handle,no,match,set,string,http,servlet,request;protected,handler,method,lookup,handler,method,string,lookup,path,http,servlet,request,request,throws,exception,list,match,matches,new,array,list,match,list,t,direct,path,matches,this,url,map,get,lookup,path,if,direct,path,matches,null,add,matching,mappings,direct,path,matches,matches,request,if,matches,is,empty,add,matching,mappings,this,handler,methods,key,set,matches,request,if,matches,is,empty,comparator,match,comparator,new,match,comparator,get,mapping,comparator,request,collections,sort,matches,comparator,if,logger,is,trace,enabled,logger,trace,found,matches,size,matching,mapping,s,for,lookup,path,matches,match,best,match,matches,get,0,if,matches,size,1,match,second,best,match,matches,get,1,if,comparator,compare,best,match,second,best,match,0,method,m1,best,match,handler,method,get,method,method,m2,second,best,match,handler,method,get,method,throw,new,illegal,state,exception,ambiguous,handler,methods,mapped,for,http,path,request,get,request,url,m1,m2,handle,match,best,match,mapping,lookup,path,request,return,best,match,handler,method,else,return,handle,no,match,handler,methods,key,set,lookup,path,request
AbstractHandlerMethodMapping -> protected HandlerMethod lookupHandlerMethod(String lookupPath, HttpServletRequest request) throws Exception;1392337816;Look up the best-matching handler method for the current request._If multiple matches are found, the best match is selected._@param lookupPath mapping lookup path within the current servlet mapping_@param request the current request_@return the best-matching handler method, or {@code null} if no match_@see #handleMatch(Object, String, HttpServletRequest)_@see #handleNoMatch(Set, String, HttpServletRequest);protected HandlerMethod lookupHandlerMethod(String lookupPath, HttpServletRequest request) throws Exception {_		List<Match> matches = new ArrayList<Match>()___		List<T> directPathMatches = this.urlMap.get(lookupPath)__		if (directPathMatches != null) {_			addMatchingMappings(directPathMatches, matches, request)__		}__		if (matches.isEmpty()) {_			_			addMatchingMappings(this.handlerMethods.keySet(), matches, request)__		}__		if (!matches.isEmpty()) {_			Comparator<Match> comparator = new MatchComparator(getMappingComparator(request))__			Collections.sort(matches, comparator)___			if (logger.isTraceEnabled()) {_				logger.trace("Found " + matches.size() + " matching mapping(s) for [" + lookupPath + "] : " + matches)__			}__			Match bestMatch = matches.get(0)__			if (matches.size() > 1) {_				Match secondBestMatch = matches.get(1)__				if (comparator.compare(bestMatch, secondBestMatch) == 0) {_					Method m1 = bestMatch.handlerMethod.getMethod()__					Method m2 = secondBestMatch.handlerMethod.getMethod()__					throw new IllegalStateException(_							"Ambiguous handler methods mapped for HTTP path '" + request.getRequestURL() + "': {" +_							m1 + ", " + m2 + "}")__				}_			}__			handleMatch(bestMatch.mapping, lookupPath, request)__			return bestMatch.handlerMethod__		}_		else {_			return handleNoMatch(handlerMethods.keySet(), lookupPath, request)__		}_	};look,up,the,best,matching,handler,method,for,the,current,request,if,multiple,matches,are,found,the,best,match,is,selected,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,request,the,current,request,return,the,best,matching,handler,method,or,code,null,if,no,match,see,handle,match,object,string,http,servlet,request,see,handle,no,match,set,string,http,servlet,request;protected,handler,method,lookup,handler,method,string,lookup,path,http,servlet,request,request,throws,exception,list,match,matches,new,array,list,match,list,t,direct,path,matches,this,url,map,get,lookup,path,if,direct,path,matches,null,add,matching,mappings,direct,path,matches,matches,request,if,matches,is,empty,add,matching,mappings,this,handler,methods,key,set,matches,request,if,matches,is,empty,comparator,match,comparator,new,match,comparator,get,mapping,comparator,request,collections,sort,matches,comparator,if,logger,is,trace,enabled,logger,trace,found,matches,size,matching,mapping,s,for,lookup,path,matches,match,best,match,matches,get,0,if,matches,size,1,match,second,best,match,matches,get,1,if,comparator,compare,best,match,second,best,match,0,method,m1,best,match,handler,method,get,method,method,m2,second,best,match,handler,method,get,method,throw,new,illegal,state,exception,ambiguous,handler,methods,mapped,for,http,path,request,get,request,url,m1,m2,handle,match,best,match,mapping,lookup,path,request,return,best,match,handler,method,else,return,handle,no,match,handler,methods,key,set,lookup,path,request
AbstractHandlerMethodMapping -> protected HandlerMethod lookupHandlerMethod(String lookupPath, HttpServletRequest request) throws Exception;1392407320;Look up the best-matching handler method for the current request._If multiple matches are found, the best match is selected._@param lookupPath mapping lookup path within the current servlet mapping_@param request the current request_@return the best-matching handler method, or {@code null} if no match_@see #handleMatch(Object, String, HttpServletRequest)_@see #handleNoMatch(Set, String, HttpServletRequest);protected HandlerMethod lookupHandlerMethod(String lookupPath, HttpServletRequest request) throws Exception {_		List<Match> matches = new ArrayList<Match>()__		List<T> directPathMatches = this.urlMap.get(lookupPath)__		if (directPathMatches != null) {_			addMatchingMappings(directPathMatches, matches, request)__		}_		if (matches.isEmpty()) {_			_			addMatchingMappings(this.handlerMethods.keySet(), matches, request)__		}__		if (!matches.isEmpty()) {_			Comparator<Match> comparator = new MatchComparator(getMappingComparator(request))__			Collections.sort(matches, comparator)__			if (logger.isTraceEnabled()) {_				logger.trace("Found " + matches.size() + " matching mapping(s) for [" + lookupPath + "] : " + matches)__			}_			Match bestMatch = matches.get(0)__			if (matches.size() > 1) {_				Match secondBestMatch = matches.get(1)__				if (comparator.compare(bestMatch, secondBestMatch) == 0) {_					Method m1 = bestMatch.handlerMethod.getMethod()__					Method m2 = secondBestMatch.handlerMethod.getMethod()__					throw new IllegalStateException(_							"Ambiguous handler methods mapped for HTTP path '" + request.getRequestURL() + "': {" +_							m1 + ", " + m2 + "}")__				}_			}_			handleMatch(bestMatch.mapping, lookupPath, request)__			return bestMatch.handlerMethod__		}_		else {_			return handleNoMatch(handlerMethods.keySet(), lookupPath, request)__		}_	};look,up,the,best,matching,handler,method,for,the,current,request,if,multiple,matches,are,found,the,best,match,is,selected,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,request,the,current,request,return,the,best,matching,handler,method,or,code,null,if,no,match,see,handle,match,object,string,http,servlet,request,see,handle,no,match,set,string,http,servlet,request;protected,handler,method,lookup,handler,method,string,lookup,path,http,servlet,request,request,throws,exception,list,match,matches,new,array,list,match,list,t,direct,path,matches,this,url,map,get,lookup,path,if,direct,path,matches,null,add,matching,mappings,direct,path,matches,matches,request,if,matches,is,empty,add,matching,mappings,this,handler,methods,key,set,matches,request,if,matches,is,empty,comparator,match,comparator,new,match,comparator,get,mapping,comparator,request,collections,sort,matches,comparator,if,logger,is,trace,enabled,logger,trace,found,matches,size,matching,mapping,s,for,lookup,path,matches,match,best,match,matches,get,0,if,matches,size,1,match,second,best,match,matches,get,1,if,comparator,compare,best,match,second,best,match,0,method,m1,best,match,handler,method,get,method,method,m2,second,best,match,handler,method,get,method,throw,new,illegal,state,exception,ambiguous,handler,methods,mapped,for,http,path,request,get,request,url,m1,m2,handle,match,best,match,mapping,lookup,path,request,return,best,match,handler,method,else,return,handle,no,match,handler,methods,key,set,lookup,path,request
AbstractHandlerMethodMapping -> protected HandlerMethod lookupHandlerMethod(String lookupPath, HttpServletRequest request) throws Exception;1395655323;Look up the best-matching handler method for the current request._If multiple matches are found, the best match is selected._@param lookupPath mapping lookup path within the current servlet mapping_@param request the current request_@return the best-matching handler method, or {@code null} if no match_@see #handleMatch(Object, String, HttpServletRequest)_@see #handleNoMatch(Set, String, HttpServletRequest);protected HandlerMethod lookupHandlerMethod(String lookupPath, HttpServletRequest request) throws Exception {_		List<Match> matches = new ArrayList<Match>()__		List<T> directPathMatches = this.urlMap.get(lookupPath)__		if (directPathMatches != null) {_			addMatchingMappings(directPathMatches, matches, request)__		}_		if (matches.isEmpty()) {_			_			addMatchingMappings(this.handlerMethods.keySet(), matches, request)__		}__		if (!matches.isEmpty()) {_			Comparator<Match> comparator = new MatchComparator(getMappingComparator(request))__			Collections.sort(matches, comparator)__			if (logger.isTraceEnabled()) {_				logger.trace("Found " + matches.size() + " matching mapping(s) for [" + lookupPath + "] : " + matches)__			}_			Match bestMatch = matches.get(0)__			if (matches.size() > 1) {_				Match secondBestMatch = matches.get(1)__				if (comparator.compare(bestMatch, secondBestMatch) == 0) {_					Method m1 = bestMatch.handlerMethod.getMethod()__					Method m2 = secondBestMatch.handlerMethod.getMethod()__					throw new IllegalStateException(_							"Ambiguous handler methods mapped for HTTP path '" + request.getRequestURL() + "': {" +_							m1 + ", " + m2 + "}")__				}_			}_			handleMatch(bestMatch.mapping, lookupPath, request)__			return bestMatch.handlerMethod__		}_		else {_			return handleNoMatch(handlerMethods.keySet(), lookupPath, request)__		}_	};look,up,the,best,matching,handler,method,for,the,current,request,if,multiple,matches,are,found,the,best,match,is,selected,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,request,the,current,request,return,the,best,matching,handler,method,or,code,null,if,no,match,see,handle,match,object,string,http,servlet,request,see,handle,no,match,set,string,http,servlet,request;protected,handler,method,lookup,handler,method,string,lookup,path,http,servlet,request,request,throws,exception,list,match,matches,new,array,list,match,list,t,direct,path,matches,this,url,map,get,lookup,path,if,direct,path,matches,null,add,matching,mappings,direct,path,matches,matches,request,if,matches,is,empty,add,matching,mappings,this,handler,methods,key,set,matches,request,if,matches,is,empty,comparator,match,comparator,new,match,comparator,get,mapping,comparator,request,collections,sort,matches,comparator,if,logger,is,trace,enabled,logger,trace,found,matches,size,matching,mapping,s,for,lookup,path,matches,match,best,match,matches,get,0,if,matches,size,1,match,second,best,match,matches,get,1,if,comparator,compare,best,match,second,best,match,0,method,m1,best,match,handler,method,get,method,method,m2,second,best,match,handler,method,get,method,throw,new,illegal,state,exception,ambiguous,handler,methods,mapped,for,http,path,request,get,request,url,m1,m2,handle,match,best,match,mapping,lookup,path,request,return,best,match,handler,method,else,return,handle,no,match,handler,methods,key,set,lookup,path,request
AbstractHandlerMethodMapping -> protected HandlerMethod lookupHandlerMethod(String lookupPath, HttpServletRequest request) throws Exception;1399404473;Look up the best-matching handler method for the current request._If multiple matches are found, the best match is selected._@param lookupPath mapping lookup path within the current servlet mapping_@param request the current request_@return the best-matching handler method, or {@code null} if no match_@see #handleMatch(Object, String, HttpServletRequest)_@see #handleNoMatch(Set, String, HttpServletRequest);protected HandlerMethod lookupHandlerMethod(String lookupPath, HttpServletRequest request) throws Exception {_		List<Match> matches = new ArrayList<Match>()__		List<T> directPathMatches = this.urlMap.get(lookupPath)__		if (directPathMatches != null) {_			addMatchingMappings(directPathMatches, matches, request)__		}_		if (matches.isEmpty()) {_			_			addMatchingMappings(this.handlerMethods.keySet(), matches, request)__		}__		if (!matches.isEmpty()) {_			Comparator<Match> comparator = new MatchComparator(getMappingComparator(request))__			Collections.sort(matches, comparator)__			if (logger.isTraceEnabled()) {_				logger.trace("Found " + matches.size() + " matching mapping(s) for [" + lookupPath + "] : " + matches)__			}_			Match bestMatch = matches.get(0)__			if (matches.size() > 1) {_				Match secondBestMatch = matches.get(1)__				if (comparator.compare(bestMatch, secondBestMatch) == 0) {_					Method m1 = bestMatch.handlerMethod.getMethod()__					Method m2 = secondBestMatch.handlerMethod.getMethod()__					throw new IllegalStateException(_							"Ambiguous handler methods mapped for HTTP path '" + request.getRequestURL() + "': {" +_							m1 + ", " + m2 + "}")__				}_			}_			handleMatch(bestMatch.mapping, lookupPath, request)__			return bestMatch.handlerMethod__		}_		else {_			return handleNoMatch(handlerMethods.keySet(), lookupPath, request)__		}_	};look,up,the,best,matching,handler,method,for,the,current,request,if,multiple,matches,are,found,the,best,match,is,selected,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,request,the,current,request,return,the,best,matching,handler,method,or,code,null,if,no,match,see,handle,match,object,string,http,servlet,request,see,handle,no,match,set,string,http,servlet,request;protected,handler,method,lookup,handler,method,string,lookup,path,http,servlet,request,request,throws,exception,list,match,matches,new,array,list,match,list,t,direct,path,matches,this,url,map,get,lookup,path,if,direct,path,matches,null,add,matching,mappings,direct,path,matches,matches,request,if,matches,is,empty,add,matching,mappings,this,handler,methods,key,set,matches,request,if,matches,is,empty,comparator,match,comparator,new,match,comparator,get,mapping,comparator,request,collections,sort,matches,comparator,if,logger,is,trace,enabled,logger,trace,found,matches,size,matching,mapping,s,for,lookup,path,matches,match,best,match,matches,get,0,if,matches,size,1,match,second,best,match,matches,get,1,if,comparator,compare,best,match,second,best,match,0,method,m1,best,match,handler,method,get,method,method,m2,second,best,match,handler,method,get,method,throw,new,illegal,state,exception,ambiguous,handler,methods,mapped,for,http,path,request,get,request,url,m1,m2,handle,match,best,match,mapping,lookup,path,request,return,best,match,handler,method,else,return,handle,no,match,handler,methods,key,set,lookup,path,request
AbstractHandlerMethodMapping -> protected HandlerMethod lookupHandlerMethod(String lookupPath, HttpServletRequest request) throws Exception;1426869344;Look up the best-matching handler method for the current request._If multiple matches are found, the best match is selected._@param lookupPath mapping lookup path within the current servlet mapping_@param request the current request_@return the best-matching handler method, or {@code null} if no match_@see #handleMatch(Object, String, HttpServletRequest)_@see #handleNoMatch(Set, String, HttpServletRequest);protected HandlerMethod lookupHandlerMethod(String lookupPath, HttpServletRequest request) throws Exception {_		List<Match> matches = new ArrayList<Match>()__		List<T> directPathMatches = this.urlMap.get(lookupPath)__		if (directPathMatches != null) {_			addMatchingMappings(directPathMatches, matches, request)__		}_		if (matches.isEmpty()) {_			_			addMatchingMappings(this.handlerMethods.keySet(), matches, request)__		}__		if (!matches.isEmpty()) {_			Comparator<Match> comparator = new MatchComparator(getMappingComparator(request))__			Collections.sort(matches, comparator)__			if (logger.isTraceEnabled()) {_				logger.trace("Found " + matches.size() + " matching mapping(s) for [" + lookupPath + "] : " + matches)__			}_			Match bestMatch = matches.get(0)__			if (matches.size() > 1) {_				Match secondBestMatch = matches.get(1)__				if (comparator.compare(bestMatch, secondBestMatch) == 0) {_					Method m1 = bestMatch.handlerMethod.getMethod()__					Method m2 = secondBestMatch.handlerMethod.getMethod()__					throw new IllegalStateException(_							"Ambiguous handler methods mapped for HTTP path '" + request.getRequestURL() + "': {" +_							m1 + ", " + m2 + "}")__				}_			}_			handleMatch(bestMatch.mapping, lookupPath, request)__			return bestMatch.handlerMethod__		}_		else {_			return handleNoMatch(handlerMethods.keySet(), lookupPath, request)__		}_	};look,up,the,best,matching,handler,method,for,the,current,request,if,multiple,matches,are,found,the,best,match,is,selected,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,request,the,current,request,return,the,best,matching,handler,method,or,code,null,if,no,match,see,handle,match,object,string,http,servlet,request,see,handle,no,match,set,string,http,servlet,request;protected,handler,method,lookup,handler,method,string,lookup,path,http,servlet,request,request,throws,exception,list,match,matches,new,array,list,match,list,t,direct,path,matches,this,url,map,get,lookup,path,if,direct,path,matches,null,add,matching,mappings,direct,path,matches,matches,request,if,matches,is,empty,add,matching,mappings,this,handler,methods,key,set,matches,request,if,matches,is,empty,comparator,match,comparator,new,match,comparator,get,mapping,comparator,request,collections,sort,matches,comparator,if,logger,is,trace,enabled,logger,trace,found,matches,size,matching,mapping,s,for,lookup,path,matches,match,best,match,matches,get,0,if,matches,size,1,match,second,best,match,matches,get,1,if,comparator,compare,best,match,second,best,match,0,method,m1,best,match,handler,method,get,method,method,m2,second,best,match,handler,method,get,method,throw,new,illegal,state,exception,ambiguous,handler,methods,mapped,for,http,path,request,get,request,url,m1,m2,handle,match,best,match,mapping,lookup,path,request,return,best,match,handler,method,else,return,handle,no,match,handler,methods,key,set,lookup,path,request
AbstractHandlerMethodMapping -> protected HandlerMethod lookupHandlerMethod(String lookupPath, HttpServletRequest request) throws Exception;1427240641;Look up the best-matching handler method for the current request._If multiple matches are found, the best match is selected._@param lookupPath mapping lookup path within the current servlet mapping_@param request the current request_@return the best-matching handler method, or {@code null} if no match_@see #handleMatch(Object, String, HttpServletRequest)_@see #handleNoMatch(Set, String, HttpServletRequest);protected HandlerMethod lookupHandlerMethod(String lookupPath, HttpServletRequest request) throws Exception {_		List<Match> matches = new ArrayList<Match>()__		List<T> directPathMatches = this.urlMap.get(lookupPath)__		if (directPathMatches != null) {_			addMatchingMappings(directPathMatches, matches, request)__		}_		if (matches.isEmpty()) {_			_			addMatchingMappings(this.handlerMethods.keySet(), matches, request)__		}__		if (!matches.isEmpty()) {_			Comparator<Match> comparator = new MatchComparator(getMappingComparator(request))__			Collections.sort(matches, comparator)__			if (logger.isTraceEnabled()) {_				logger.trace("Found " + matches.size() + " matching mapping(s) for [" + lookupPath + "] : " + matches)__			}_			Match bestMatch = matches.get(0)__			if (matches.size() > 1) {_				Match secondBestMatch = matches.get(1)__				if (comparator.compare(bestMatch, secondBestMatch) == 0) {_					Method m1 = bestMatch.handlerMethod.getMethod()__					Method m2 = secondBestMatch.handlerMethod.getMethod()__					throw new IllegalStateException(_							"Ambiguous handler methods mapped for HTTP path '" + request.getRequestURL() + "': {" +_							m1 + ", " + m2 + "}")__				}_			}_			handleMatch(bestMatch.mapping, lookupPath, request)__			return bestMatch.handlerMethod__		}_		else {_			return handleNoMatch(handlerMethods.keySet(), lookupPath, request)__		}_	};look,up,the,best,matching,handler,method,for,the,current,request,if,multiple,matches,are,found,the,best,match,is,selected,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,request,the,current,request,return,the,best,matching,handler,method,or,code,null,if,no,match,see,handle,match,object,string,http,servlet,request,see,handle,no,match,set,string,http,servlet,request;protected,handler,method,lookup,handler,method,string,lookup,path,http,servlet,request,request,throws,exception,list,match,matches,new,array,list,match,list,t,direct,path,matches,this,url,map,get,lookup,path,if,direct,path,matches,null,add,matching,mappings,direct,path,matches,matches,request,if,matches,is,empty,add,matching,mappings,this,handler,methods,key,set,matches,request,if,matches,is,empty,comparator,match,comparator,new,match,comparator,get,mapping,comparator,request,collections,sort,matches,comparator,if,logger,is,trace,enabled,logger,trace,found,matches,size,matching,mapping,s,for,lookup,path,matches,match,best,match,matches,get,0,if,matches,size,1,match,second,best,match,matches,get,1,if,comparator,compare,best,match,second,best,match,0,method,m1,best,match,handler,method,get,method,method,m2,second,best,match,handler,method,get,method,throw,new,illegal,state,exception,ambiguous,handler,methods,mapped,for,http,path,request,get,request,url,m1,m2,handle,match,best,match,mapping,lookup,path,request,return,best,match,handler,method,else,return,handle,no,match,handler,methods,key,set,lookup,path,request
AbstractHandlerMethodMapping -> protected HandlerMethod lookupHandlerMethod(String lookupPath, HttpServletRequest request) throws Exception;1427983931;Look up the best-matching handler method for the current request._If multiple matches are found, the best match is selected._@param lookupPath mapping lookup path within the current servlet mapping_@param request the current request_@return the best-matching handler method, or {@code null} if no match_@see #handleMatch(Object, String, HttpServletRequest)_@see #handleNoMatch(Set, String, HttpServletRequest);protected HandlerMethod lookupHandlerMethod(String lookupPath, HttpServletRequest request) throws Exception {_		List<Match> matches = new ArrayList<Match>()__		List<T> directPathMatches = this.urlMap.get(lookupPath)__		if (directPathMatches != null) {_			addMatchingMappings(directPathMatches, matches, request)__		}_		if (matches.isEmpty()) {_			_			addMatchingMappings(this.handlerMethods.keySet(), matches, request)__		}__		if (!matches.isEmpty()) {_			Comparator<Match> comparator = new MatchComparator(getMappingComparator(request))__			Collections.sort(matches, comparator)__			if (logger.isTraceEnabled()) {_				logger.trace("Found " + matches.size() + " matching mapping(s) for [" + lookupPath + "] : " + matches)__			}_			Match bestMatch = matches.get(0)__			if (matches.size() > 1) {_				if (CorsUtils.isPreFlightRequest(request)) {_					return PREFLIGHT_MULTI_MATCH_HANDLER_METHOD__				}_				Match secondBestMatch = matches.get(1)__				if (comparator.compare(bestMatch, secondBestMatch) == 0) {_					Method m1 = bestMatch.handlerMethod.getMethod()__					Method m2 = secondBestMatch.handlerMethod.getMethod()__					throw new IllegalStateException(_							"Ambiguous handler methods mapped for HTTP path '" + request.getRequestURL() + "': {" +_							m1 + ", " + m2 + "}")__				}_			}_			handleMatch(bestMatch.mapping, lookupPath, request)__			return bestMatch.handlerMethod__		}_		else {_			return handleNoMatch(handlerMethods.keySet(), lookupPath, request)__		}_	};look,up,the,best,matching,handler,method,for,the,current,request,if,multiple,matches,are,found,the,best,match,is,selected,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,request,the,current,request,return,the,best,matching,handler,method,or,code,null,if,no,match,see,handle,match,object,string,http,servlet,request,see,handle,no,match,set,string,http,servlet,request;protected,handler,method,lookup,handler,method,string,lookup,path,http,servlet,request,request,throws,exception,list,match,matches,new,array,list,match,list,t,direct,path,matches,this,url,map,get,lookup,path,if,direct,path,matches,null,add,matching,mappings,direct,path,matches,matches,request,if,matches,is,empty,add,matching,mappings,this,handler,methods,key,set,matches,request,if,matches,is,empty,comparator,match,comparator,new,match,comparator,get,mapping,comparator,request,collections,sort,matches,comparator,if,logger,is,trace,enabled,logger,trace,found,matches,size,matching,mapping,s,for,lookup,path,matches,match,best,match,matches,get,0,if,matches,size,1,if,cors,utils,is,pre,flight,request,request,return,match,second,best,match,matches,get,1,if,comparator,compare,best,match,second,best,match,0,method,m1,best,match,handler,method,get,method,method,m2,second,best,match,handler,method,get,method,throw,new,illegal,state,exception,ambiguous,handler,methods,mapped,for,http,path,request,get,request,url,m1,m2,handle,match,best,match,mapping,lookup,path,request,return,best,match,handler,method,else,return,handle,no,match,handler,methods,key,set,lookup,path,request
AbstractHandlerMethodMapping -> protected HandlerMethod lookupHandlerMethod(String lookupPath, HttpServletRequest request) throws Exception;1430734105;Look up the best-matching handler method for the current request._If multiple matches are found, the best match is selected._@param lookupPath mapping lookup path within the current servlet mapping_@param request the current request_@return the best-matching handler method, or {@code null} if no match_@see #handleMatch(Object, String, HttpServletRequest)_@see #handleNoMatch(Set, String, HttpServletRequest);protected HandlerMethod lookupHandlerMethod(String lookupPath, HttpServletRequest request) throws Exception {_		List<Match> matches = new ArrayList<Match>()__		List<T> directPathMatches = this.urlMap.get(lookupPath)__		if (directPathMatches != null) {_			addMatchingMappings(directPathMatches, matches, request)__		}_		if (matches.isEmpty()) {_			_			addMatchingMappings(this.handlerMethods.keySet(), matches, request)__		}__		if (!matches.isEmpty()) {_			Comparator<Match> comparator = new MatchComparator(getMappingComparator(request))__			Collections.sort(matches, comparator)__			if (logger.isTraceEnabled()) {_				logger.trace("Found " + matches.size() + " matching mapping(s) for [" + lookupPath + "] : " + matches)__			}_			Match bestMatch = matches.get(0)__			if (matches.size() > 1) {_				if (CorsUtils.isPreFlightRequest(request)) {_					return PREFLIGHT_MULTI_MATCH_HANDLER_METHOD__				}_				Match secondBestMatch = matches.get(1)__				if (comparator.compare(bestMatch, secondBestMatch) == 0) {_					Method m1 = bestMatch.handlerMethod.getMethod()__					Method m2 = secondBestMatch.handlerMethod.getMethod()__					throw new IllegalStateException(_							"Ambiguous handler methods mapped for HTTP path '" + request.getRequestURL() + "': {" +_							m1 + ", " + m2 + "}")__				}_			}_			handleMatch(bestMatch.mapping, lookupPath, request)__			return bestMatch.handlerMethod__		}_		else {_			return handleNoMatch(handlerMethods.keySet(), lookupPath, request)__		}_	};look,up,the,best,matching,handler,method,for,the,current,request,if,multiple,matches,are,found,the,best,match,is,selected,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,request,the,current,request,return,the,best,matching,handler,method,or,code,null,if,no,match,see,handle,match,object,string,http,servlet,request,see,handle,no,match,set,string,http,servlet,request;protected,handler,method,lookup,handler,method,string,lookup,path,http,servlet,request,request,throws,exception,list,match,matches,new,array,list,match,list,t,direct,path,matches,this,url,map,get,lookup,path,if,direct,path,matches,null,add,matching,mappings,direct,path,matches,matches,request,if,matches,is,empty,add,matching,mappings,this,handler,methods,key,set,matches,request,if,matches,is,empty,comparator,match,comparator,new,match,comparator,get,mapping,comparator,request,collections,sort,matches,comparator,if,logger,is,trace,enabled,logger,trace,found,matches,size,matching,mapping,s,for,lookup,path,matches,match,best,match,matches,get,0,if,matches,size,1,if,cors,utils,is,pre,flight,request,request,return,match,second,best,match,matches,get,1,if,comparator,compare,best,match,second,best,match,0,method,m1,best,match,handler,method,get,method,method,m2,second,best,match,handler,method,get,method,throw,new,illegal,state,exception,ambiguous,handler,methods,mapped,for,http,path,request,get,request,url,m1,m2,handle,match,best,match,mapping,lookup,path,request,return,best,match,handler,method,else,return,handle,no,match,handler,methods,key,set,lookup,path,request
AbstractHandlerMethodMapping -> protected HandlerMethod lookupHandlerMethod(String lookupPath, HttpServletRequest request) throws Exception;1430734105;Look up the best-matching handler method for the current request._If multiple matches are found, the best match is selected._@param lookupPath mapping lookup path within the current servlet mapping_@param request the current request_@return the best-matching handler method, or {@code null} if no match_@see #handleMatch(Object, String, HttpServletRequest)_@see #handleNoMatch(Set, String, HttpServletRequest);protected HandlerMethod lookupHandlerMethod(String lookupPath, HttpServletRequest request) throws Exception {_		List<Match> matches = new ArrayList<Match>()__		List<T> directPathMatches = this.mappingRegistry.getMappingKeysByUrl(lookupPath)__		if (directPathMatches != null) {_			addMatchingMappings(directPathMatches, matches, request)__		}_		if (matches.isEmpty()) {_			_			addMatchingMappings(this.mappingRegistry.getMappingKeys(), matches, request)__		}__		if (!matches.isEmpty()) {_			Comparator<Match> comparator = new MatchComparator(getMappingComparator(request))__			Collections.sort(matches, comparator)__			if (logger.isTraceEnabled()) {_				logger.trace("Found " + matches.size() + " matching mapping(s) for [" +_						lookupPath + "] : " + matches)__			}_			Match bestMatch = matches.get(0)__			if (matches.size() > 1) {_				if (CorsUtils.isPreFlightRequest(request)) {_					return PREFLIGHT_AMBIGUOUS_MATCH__				}_				Match secondBestMatch = matches.get(1)__				if (comparator.compare(bestMatch, secondBestMatch) == 0) {_					Method m1 = bestMatch.handlerMethod.getMethod()__					Method m2 = secondBestMatch.handlerMethod.getMethod()__					throw new IllegalStateException("Ambiguous handler methods mapped for HTTP path '" +_							request.getRequestURL() + "': {" + m1 + ", " + m2 + "}")__				}_			}_			handleMatch(bestMatch.mapping, lookupPath, request)__			return bestMatch.handlerMethod__		}_		else {_			return handleNoMatch(this.mappingRegistry.getMappingKeys(), lookupPath, request)__		}_	};look,up,the,best,matching,handler,method,for,the,current,request,if,multiple,matches,are,found,the,best,match,is,selected,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,request,the,current,request,return,the,best,matching,handler,method,or,code,null,if,no,match,see,handle,match,object,string,http,servlet,request,see,handle,no,match,set,string,http,servlet,request;protected,handler,method,lookup,handler,method,string,lookup,path,http,servlet,request,request,throws,exception,list,match,matches,new,array,list,match,list,t,direct,path,matches,this,mapping,registry,get,mapping,keys,by,url,lookup,path,if,direct,path,matches,null,add,matching,mappings,direct,path,matches,matches,request,if,matches,is,empty,add,matching,mappings,this,mapping,registry,get,mapping,keys,matches,request,if,matches,is,empty,comparator,match,comparator,new,match,comparator,get,mapping,comparator,request,collections,sort,matches,comparator,if,logger,is,trace,enabled,logger,trace,found,matches,size,matching,mapping,s,for,lookup,path,matches,match,best,match,matches,get,0,if,matches,size,1,if,cors,utils,is,pre,flight,request,request,return,match,second,best,match,matches,get,1,if,comparator,compare,best,match,second,best,match,0,method,m1,best,match,handler,method,get,method,method,m2,second,best,match,handler,method,get,method,throw,new,illegal,state,exception,ambiguous,handler,methods,mapped,for,http,path,request,get,request,url,m1,m2,handle,match,best,match,mapping,lookup,path,request,return,best,match,handler,method,else,return,handle,no,match,this,mapping,registry,get,mapping,keys,lookup,path,request
AbstractHandlerMethodMapping -> protected HandlerMethod lookupHandlerMethod(String lookupPath, HttpServletRequest request) throws Exception;1430734106;Look up the best-matching handler method for the current request._If multiple matches are found, the best match is selected._@param lookupPath mapping lookup path within the current servlet mapping_@param request the current request_@return the best-matching handler method, or {@code null} if no match_@see #handleMatch(Object, String, HttpServletRequest)_@see #handleNoMatch(Set, String, HttpServletRequest);protected HandlerMethod lookupHandlerMethod(String lookupPath, HttpServletRequest request) throws Exception {_		List<Match> matches = new ArrayList<Match>()__		List<T> directPathMatches = this.mappingRegistry.getMappingKeysByUrl(lookupPath)__		if (directPathMatches != null) {_			addMatchingMappings(directPathMatches, matches, request)__		}_		if (matches.isEmpty()) {_			_			addMatchingMappings(this.mappingRegistry.getMappings().keySet(), matches, request)__		}__		if (!matches.isEmpty()) {_			Comparator<Match> comparator = new MatchComparator(getMappingComparator(request))__			Collections.sort(matches, comparator)__			if (logger.isTraceEnabled()) {_				logger.trace("Found " + matches.size() + " matching mapping(s) for [" +_						lookupPath + "] : " + matches)__			}_			Match bestMatch = matches.get(0)__			if (matches.size() > 1) {_				if (CorsUtils.isPreFlightRequest(request)) {_					return PREFLIGHT_AMBIGUOUS_MATCH__				}_				Match secondBestMatch = matches.get(1)__				if (comparator.compare(bestMatch, secondBestMatch) == 0) {_					Method m1 = bestMatch.handlerMethod.getMethod()__					Method m2 = secondBestMatch.handlerMethod.getMethod()__					throw new IllegalStateException("Ambiguous handler methods mapped for HTTP path '" +_							request.getRequestURL() + "': {" + m1 + ", " + m2 + "}")__				}_			}_			handleMatch(bestMatch.mapping, lookupPath, request)__			return bestMatch.handlerMethod__		}_		else {_			return handleNoMatch(this.mappingRegistry.getMappings().keySet(), lookupPath, request)__		}_	};look,up,the,best,matching,handler,method,for,the,current,request,if,multiple,matches,are,found,the,best,match,is,selected,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,request,the,current,request,return,the,best,matching,handler,method,or,code,null,if,no,match,see,handle,match,object,string,http,servlet,request,see,handle,no,match,set,string,http,servlet,request;protected,handler,method,lookup,handler,method,string,lookup,path,http,servlet,request,request,throws,exception,list,match,matches,new,array,list,match,list,t,direct,path,matches,this,mapping,registry,get,mapping,keys,by,url,lookup,path,if,direct,path,matches,null,add,matching,mappings,direct,path,matches,matches,request,if,matches,is,empty,add,matching,mappings,this,mapping,registry,get,mappings,key,set,matches,request,if,matches,is,empty,comparator,match,comparator,new,match,comparator,get,mapping,comparator,request,collections,sort,matches,comparator,if,logger,is,trace,enabled,logger,trace,found,matches,size,matching,mapping,s,for,lookup,path,matches,match,best,match,matches,get,0,if,matches,size,1,if,cors,utils,is,pre,flight,request,request,return,match,second,best,match,matches,get,1,if,comparator,compare,best,match,second,best,match,0,method,m1,best,match,handler,method,get,method,method,m2,second,best,match,handler,method,get,method,throw,new,illegal,state,exception,ambiguous,handler,methods,mapped,for,http,path,request,get,request,url,m1,m2,handle,match,best,match,mapping,lookup,path,request,return,best,match,handler,method,else,return,handle,no,match,this,mapping,registry,get,mappings,key,set,lookup,path,request
AbstractHandlerMethodMapping -> protected HandlerMethod lookupHandlerMethod(String lookupPath, HttpServletRequest request) throws Exception;1430774689;Look up the best-matching handler method for the current request._If multiple matches are found, the best match is selected._@param lookupPath mapping lookup path within the current servlet mapping_@param request the current request_@return the best-matching handler method, or {@code null} if no match_@see #handleMatch(Object, String, HttpServletRequest)_@see #handleNoMatch(Set, String, HttpServletRequest);protected HandlerMethod lookupHandlerMethod(String lookupPath, HttpServletRequest request) throws Exception {_		List<Match> matches = new ArrayList<Match>()__		List<T> directPathMatches = this.mappingRegistry.getMappingKeysByUrl(lookupPath)__		if (directPathMatches != null) {_			addMatchingMappings(directPathMatches, matches, request)__		}_		if (matches.isEmpty()) {_			_			addMatchingMappings(this.mappingRegistry.getMappings().keySet(), matches, request)__		}__		if (!matches.isEmpty()) {_			Comparator<Match> comparator = new MatchComparator(getMappingComparator(request))__			Collections.sort(matches, comparator)__			if (logger.isTraceEnabled()) {_				logger.trace("Found " + matches.size() + " matching mapping(s) for [" +_						lookupPath + "] : " + matches)__			}_			Match bestMatch = matches.get(0)__			if (matches.size() > 1) {_				if (CorsUtils.isPreFlightRequest(request)) {_					return PREFLIGHT_AMBIGUOUS_MATCH__				}_				Match secondBestMatch = matches.get(1)__				if (comparator.compare(bestMatch, secondBestMatch) == 0) {_					Method m1 = bestMatch.handlerMethod.getMethod()__					Method m2 = secondBestMatch.handlerMethod.getMethod()__					throw new IllegalStateException("Ambiguous handler methods mapped for HTTP path '" +_							request.getRequestURL() + "': {" + m1 + ", " + m2 + "}")__				}_			}_			handleMatch(bestMatch.mapping, lookupPath, request)__			return bestMatch.handlerMethod__		}_		else {_			return handleNoMatch(this.mappingRegistry.getMappings().keySet(), lookupPath, request)__		}_	};look,up,the,best,matching,handler,method,for,the,current,request,if,multiple,matches,are,found,the,best,match,is,selected,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,request,the,current,request,return,the,best,matching,handler,method,or,code,null,if,no,match,see,handle,match,object,string,http,servlet,request,see,handle,no,match,set,string,http,servlet,request;protected,handler,method,lookup,handler,method,string,lookup,path,http,servlet,request,request,throws,exception,list,match,matches,new,array,list,match,list,t,direct,path,matches,this,mapping,registry,get,mapping,keys,by,url,lookup,path,if,direct,path,matches,null,add,matching,mappings,direct,path,matches,matches,request,if,matches,is,empty,add,matching,mappings,this,mapping,registry,get,mappings,key,set,matches,request,if,matches,is,empty,comparator,match,comparator,new,match,comparator,get,mapping,comparator,request,collections,sort,matches,comparator,if,logger,is,trace,enabled,logger,trace,found,matches,size,matching,mapping,s,for,lookup,path,matches,match,best,match,matches,get,0,if,matches,size,1,if,cors,utils,is,pre,flight,request,request,return,match,second,best,match,matches,get,1,if,comparator,compare,best,match,second,best,match,0,method,m1,best,match,handler,method,get,method,method,m2,second,best,match,handler,method,get,method,throw,new,illegal,state,exception,ambiguous,handler,methods,mapped,for,http,path,request,get,request,url,m1,m2,handle,match,best,match,mapping,lookup,path,request,return,best,match,handler,method,else,return,handle,no,match,this,mapping,registry,get,mappings,key,set,lookup,path,request
AbstractHandlerMethodMapping -> protected HandlerMethod lookupHandlerMethod(String lookupPath, HttpServletRequest request) throws Exception;1430844966;Look up the best-matching handler method for the current request._If multiple matches are found, the best match is selected._@param lookupPath mapping lookup path within the current servlet mapping_@param request the current request_@return the best-matching handler method, or {@code null} if no match_@see #handleMatch(Object, String, HttpServletRequest)_@see #handleNoMatch(Set, String, HttpServletRequest);protected HandlerMethod lookupHandlerMethod(String lookupPath, HttpServletRequest request) throws Exception {_		List<Match> matches = new ArrayList<Match>()__		List<T> directPathMatches = this.mappingRegistry.getMappingsByUrl(lookupPath)__		if (directPathMatches != null) {_			addMatchingMappings(directPathMatches, matches, request)__		}_		if (matches.isEmpty()) {_			_			addMatchingMappings(this.mappingRegistry.getMappings().keySet(), matches, request)__		}__		if (!matches.isEmpty()) {_			Comparator<Match> comparator = new MatchComparator(getMappingComparator(request))__			Collections.sort(matches, comparator)__			if (logger.isTraceEnabled()) {_				logger.trace("Found " + matches.size() + " matching mapping(s) for [" +_						lookupPath + "] : " + matches)__			}_			Match bestMatch = matches.get(0)__			if (matches.size() > 1) {_				if (CorsUtils.isPreFlightRequest(request)) {_					return PREFLIGHT_AMBIGUOUS_MATCH__				}_				Match secondBestMatch = matches.get(1)__				if (comparator.compare(bestMatch, secondBestMatch) == 0) {_					Method m1 = bestMatch.handlerMethod.getMethod()__					Method m2 = secondBestMatch.handlerMethod.getMethod()__					throw new IllegalStateException("Ambiguous handler methods mapped for HTTP path '" +_							request.getRequestURL() + "': {" + m1 + ", " + m2 + "}")__				}_			}_			handleMatch(bestMatch.mapping, lookupPath, request)__			return bestMatch.handlerMethod__		}_		else {_			return handleNoMatch(this.mappingRegistry.getMappings().keySet(), lookupPath, request)__		}_	};look,up,the,best,matching,handler,method,for,the,current,request,if,multiple,matches,are,found,the,best,match,is,selected,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,request,the,current,request,return,the,best,matching,handler,method,or,code,null,if,no,match,see,handle,match,object,string,http,servlet,request,see,handle,no,match,set,string,http,servlet,request;protected,handler,method,lookup,handler,method,string,lookup,path,http,servlet,request,request,throws,exception,list,match,matches,new,array,list,match,list,t,direct,path,matches,this,mapping,registry,get,mappings,by,url,lookup,path,if,direct,path,matches,null,add,matching,mappings,direct,path,matches,matches,request,if,matches,is,empty,add,matching,mappings,this,mapping,registry,get,mappings,key,set,matches,request,if,matches,is,empty,comparator,match,comparator,new,match,comparator,get,mapping,comparator,request,collections,sort,matches,comparator,if,logger,is,trace,enabled,logger,trace,found,matches,size,matching,mapping,s,for,lookup,path,matches,match,best,match,matches,get,0,if,matches,size,1,if,cors,utils,is,pre,flight,request,request,return,match,second,best,match,matches,get,1,if,comparator,compare,best,match,second,best,match,0,method,m1,best,match,handler,method,get,method,method,m2,second,best,match,handler,method,get,method,throw,new,illegal,state,exception,ambiguous,handler,methods,mapped,for,http,path,request,get,request,url,m1,m2,handle,match,best,match,mapping,lookup,path,request,return,best,match,handler,method,else,return,handle,no,match,this,mapping,registry,get,mappings,key,set,lookup,path,request
AbstractHandlerMethodMapping -> protected HandlerMethod lookupHandlerMethod(String lookupPath, HttpServletRequest request) throws Exception;1430844967;Look up the best-matching handler method for the current request._If multiple matches are found, the best match is selected._@param lookupPath mapping lookup path within the current servlet mapping_@param request the current request_@return the best-matching handler method, or {@code null} if no match_@see #handleMatch(Object, String, HttpServletRequest)_@see #handleNoMatch(Set, String, HttpServletRequest);protected HandlerMethod lookupHandlerMethod(String lookupPath, HttpServletRequest request) throws Exception {_		List<Match> matches = new ArrayList<Match>()__		List<T> directPathMatches = this.mappingRegistry.getMappingsByUrl(lookupPath)__		if (directPathMatches != null) {_			addMatchingMappings(directPathMatches, matches, request)__		}_		if (matches.isEmpty()) {_			_			addMatchingMappings(this.mappingRegistry.getMappings().keySet(), matches, request)__		}__		if (!matches.isEmpty()) {_			Comparator<Match> comparator = new MatchComparator(getMappingComparator(request))__			Collections.sort(matches, comparator)__			if (logger.isTraceEnabled()) {_				logger.trace("Found " + matches.size() + " matching mapping(s) for [" +_						lookupPath + "] : " + matches)__			}_			Match bestMatch = matches.get(0)__			if (matches.size() > 1) {_				if (CorsUtils.isPreFlightRequest(request)) {_					return PREFLIGHT_AMBIGUOUS_MATCH__				}_				Match secondBestMatch = matches.get(1)__				if (comparator.compare(bestMatch, secondBestMatch) == 0) {_					Method m1 = bestMatch.handlerMethod.getMethod()__					Method m2 = secondBestMatch.handlerMethod.getMethod()__					throw new IllegalStateException("Ambiguous handler methods mapped for HTTP path '" +_							request.getRequestURL() + "': {" + m1 + ", " + m2 + "}")__				}_			}_			handleMatch(bestMatch.mapping, lookupPath, request)__			return bestMatch.handlerMethod__		}_		else {_			return handleNoMatch(this.mappingRegistry.getMappings().keySet(), lookupPath, request)__		}_	};look,up,the,best,matching,handler,method,for,the,current,request,if,multiple,matches,are,found,the,best,match,is,selected,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,request,the,current,request,return,the,best,matching,handler,method,or,code,null,if,no,match,see,handle,match,object,string,http,servlet,request,see,handle,no,match,set,string,http,servlet,request;protected,handler,method,lookup,handler,method,string,lookup,path,http,servlet,request,request,throws,exception,list,match,matches,new,array,list,match,list,t,direct,path,matches,this,mapping,registry,get,mappings,by,url,lookup,path,if,direct,path,matches,null,add,matching,mappings,direct,path,matches,matches,request,if,matches,is,empty,add,matching,mappings,this,mapping,registry,get,mappings,key,set,matches,request,if,matches,is,empty,comparator,match,comparator,new,match,comparator,get,mapping,comparator,request,collections,sort,matches,comparator,if,logger,is,trace,enabled,logger,trace,found,matches,size,matching,mapping,s,for,lookup,path,matches,match,best,match,matches,get,0,if,matches,size,1,if,cors,utils,is,pre,flight,request,request,return,match,second,best,match,matches,get,1,if,comparator,compare,best,match,second,best,match,0,method,m1,best,match,handler,method,get,method,method,m2,second,best,match,handler,method,get,method,throw,new,illegal,state,exception,ambiguous,handler,methods,mapped,for,http,path,request,get,request,url,m1,m2,handle,match,best,match,mapping,lookup,path,request,return,best,match,handler,method,else,return,handle,no,match,this,mapping,registry,get,mappings,key,set,lookup,path,request
AbstractHandlerMethodMapping -> protected HandlerMethod lookupHandlerMethod(String lookupPath, HttpServletRequest request) throws Exception;1431730371;Look up the best-matching handler method for the current request._If multiple matches are found, the best match is selected._@param lookupPath mapping lookup path within the current servlet mapping_@param request the current request_@return the best-matching handler method, or {@code null} if no match_@see #handleMatch(Object, String, HttpServletRequest)_@see #handleNoMatch(Set, String, HttpServletRequest);protected HandlerMethod lookupHandlerMethod(String lookupPath, HttpServletRequest request) throws Exception {_		List<Match> matches = new ArrayList<Match>()__		List<T> directPathMatches = this.mappingRegistry.getMappingsByUrl(lookupPath)__		if (directPathMatches != null) {_			addMatchingMappings(directPathMatches, matches, request)__		}_		if (matches.isEmpty()) {_			_			addMatchingMappings(this.mappingRegistry.getMappings().keySet(), matches, request)__		}__		if (!matches.isEmpty()) {_			Comparator<Match> comparator = new MatchComparator(getMappingComparator(request))__			Collections.sort(matches, comparator)__			if (logger.isTraceEnabled()) {_				logger.trace("Found " + matches.size() + " matching mapping(s) for [" +_						lookupPath + "] : " + matches)__			}_			Match bestMatch = matches.get(0)__			if (matches.size() > 1) {_				if (CorsUtils.isPreFlightRequest(request)) {_					return PREFLIGHT_AMBIGUOUS_MATCH__				}_				Match secondBestMatch = matches.get(1)__				if (comparator.compare(bestMatch, secondBestMatch) == 0) {_					Method m1 = bestMatch.handlerMethod.getMethod()__					Method m2 = secondBestMatch.handlerMethod.getMethod()__					throw new IllegalStateException("Ambiguous handler methods mapped for HTTP path '" +_							request.getRequestURL() + "': {" + m1 + ", " + m2 + "}")__				}_			}_			handleMatch(bestMatch.mapping, lookupPath, request)__			return bestMatch.handlerMethod__		}_		else {_			return handleNoMatch(this.mappingRegistry.getMappings().keySet(), lookupPath, request)__		}_	};look,up,the,best,matching,handler,method,for,the,current,request,if,multiple,matches,are,found,the,best,match,is,selected,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,request,the,current,request,return,the,best,matching,handler,method,or,code,null,if,no,match,see,handle,match,object,string,http,servlet,request,see,handle,no,match,set,string,http,servlet,request;protected,handler,method,lookup,handler,method,string,lookup,path,http,servlet,request,request,throws,exception,list,match,matches,new,array,list,match,list,t,direct,path,matches,this,mapping,registry,get,mappings,by,url,lookup,path,if,direct,path,matches,null,add,matching,mappings,direct,path,matches,matches,request,if,matches,is,empty,add,matching,mappings,this,mapping,registry,get,mappings,key,set,matches,request,if,matches,is,empty,comparator,match,comparator,new,match,comparator,get,mapping,comparator,request,collections,sort,matches,comparator,if,logger,is,trace,enabled,logger,trace,found,matches,size,matching,mapping,s,for,lookup,path,matches,match,best,match,matches,get,0,if,matches,size,1,if,cors,utils,is,pre,flight,request,request,return,match,second,best,match,matches,get,1,if,comparator,compare,best,match,second,best,match,0,method,m1,best,match,handler,method,get,method,method,m2,second,best,match,handler,method,get,method,throw,new,illegal,state,exception,ambiguous,handler,methods,mapped,for,http,path,request,get,request,url,m1,m2,handle,match,best,match,mapping,lookup,path,request,return,best,match,handler,method,else,return,handle,no,match,this,mapping,registry,get,mappings,key,set,lookup,path,request
AbstractHandlerMethodMapping -> protected HandlerMethod lookupHandlerMethod(String lookupPath, HttpServletRequest request) throws Exception;1439294371;Look up the best-matching handler method for the current request._If multiple matches are found, the best match is selected._@param lookupPath mapping lookup path within the current servlet mapping_@param request the current request_@return the best-matching handler method, or {@code null} if no match_@see #handleMatch(Object, String, HttpServletRequest)_@see #handleNoMatch(Set, String, HttpServletRequest);protected HandlerMethod lookupHandlerMethod(String lookupPath, HttpServletRequest request) throws Exception {_		List<Match> matches = new ArrayList<Match>()__		List<T> directPathMatches = this.mappingRegistry.getMappingsByUrl(lookupPath)__		if (directPathMatches != null) {_			addMatchingMappings(directPathMatches, matches, request)__		}_		if (matches.isEmpty()) {_			_			addMatchingMappings(this.mappingRegistry.getMappings().keySet(), matches, request)__		}__		if (!matches.isEmpty()) {_			Comparator<Match> comparator = new MatchComparator(getMappingComparator(request))__			Collections.sort(matches, comparator)__			if (logger.isTraceEnabled()) {_				logger.trace("Found " + matches.size() + " matching mapping(s) for [" +_						lookupPath + "] : " + matches)__			}_			Match bestMatch = matches.get(0)__			if (matches.size() > 1) {_				if (CorsUtils.isPreFlightRequest(request)) {_					return PREFLIGHT_AMBIGUOUS_MATCH__				}_				Match secondBestMatch = matches.get(1)__				if (comparator.compare(bestMatch, secondBestMatch) == 0) {_					Method m1 = bestMatch.handlerMethod.getMethod()__					Method m2 = secondBestMatch.handlerMethod.getMethod()__					throw new IllegalStateException("Ambiguous handler methods mapped for HTTP path '" +_							request.getRequestURL() + "': {" + m1 + ", " + m2 + "}")__				}_			}_			handleMatch(bestMatch.mapping, lookupPath, request)__			return bestMatch.handlerMethod__		}_		else {_			return handleNoMatch(this.mappingRegistry.getMappings().keySet(), lookupPath, request)__		}_	};look,up,the,best,matching,handler,method,for,the,current,request,if,multiple,matches,are,found,the,best,match,is,selected,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,request,the,current,request,return,the,best,matching,handler,method,or,code,null,if,no,match,see,handle,match,object,string,http,servlet,request,see,handle,no,match,set,string,http,servlet,request;protected,handler,method,lookup,handler,method,string,lookup,path,http,servlet,request,request,throws,exception,list,match,matches,new,array,list,match,list,t,direct,path,matches,this,mapping,registry,get,mappings,by,url,lookup,path,if,direct,path,matches,null,add,matching,mappings,direct,path,matches,matches,request,if,matches,is,empty,add,matching,mappings,this,mapping,registry,get,mappings,key,set,matches,request,if,matches,is,empty,comparator,match,comparator,new,match,comparator,get,mapping,comparator,request,collections,sort,matches,comparator,if,logger,is,trace,enabled,logger,trace,found,matches,size,matching,mapping,s,for,lookup,path,matches,match,best,match,matches,get,0,if,matches,size,1,if,cors,utils,is,pre,flight,request,request,return,match,second,best,match,matches,get,1,if,comparator,compare,best,match,second,best,match,0,method,m1,best,match,handler,method,get,method,method,m2,second,best,match,handler,method,get,method,throw,new,illegal,state,exception,ambiguous,handler,methods,mapped,for,http,path,request,get,request,url,m1,m2,handle,match,best,match,mapping,lookup,path,request,return,best,match,handler,method,else,return,handle,no,match,this,mapping,registry,get,mappings,key,set,lookup,path,request
AbstractHandlerMethodMapping -> protected HandlerMethod lookupHandlerMethod(String lookupPath, HttpServletRequest request) throws Exception;1447077465;Look up the best-matching handler method for the current request._If multiple matches are found, the best match is selected._@param lookupPath mapping lookup path within the current servlet mapping_@param request the current request_@return the best-matching handler method, or {@code null} if no match_@see #handleMatch(Object, String, HttpServletRequest)_@see #handleNoMatch(Set, String, HttpServletRequest);protected HandlerMethod lookupHandlerMethod(String lookupPath, HttpServletRequest request) throws Exception {_		List<Match> matches = new ArrayList<Match>()__		List<T> directPathMatches = this.mappingRegistry.getMappingsByUrl(lookupPath)__		if (directPathMatches != null) {_			addMatchingMappings(directPathMatches, matches, request)__		}_		if (matches.isEmpty()) {_			_			addMatchingMappings(this.mappingRegistry.getMappings().keySet(), matches, request)__		}__		if (!matches.isEmpty()) {_			Comparator<Match> comparator = new MatchComparator(getMappingComparator(request))__			Collections.sort(matches, comparator)__			if (logger.isTraceEnabled()) {_				logger.trace("Found " + matches.size() + " matching mapping(s) for [" +_						lookupPath + "] : " + matches)__			}_			Match bestMatch = matches.get(0)__			if (matches.size() > 1) {_				if (CorsUtils.isPreFlightRequest(request)) {_					return PREFLIGHT_AMBIGUOUS_MATCH__				}_				Match secondBestMatch = matches.get(1)__				if (comparator.compare(bestMatch, secondBestMatch) == 0) {_					Method m1 = bestMatch.handlerMethod.getMethod()__					Method m2 = secondBestMatch.handlerMethod.getMethod()__					throw new IllegalStateException("Ambiguous handler methods mapped for HTTP path '" +_							request.getRequestURL() + "': {" + m1 + ", " + m2 + "}")__				}_			}_			handleMatch(bestMatch.mapping, lookupPath, request)__			return bestMatch.handlerMethod__		}_		else {_			return handleNoMatch(this.mappingRegistry.getMappings().keySet(), lookupPath, request)__		}_	};look,up,the,best,matching,handler,method,for,the,current,request,if,multiple,matches,are,found,the,best,match,is,selected,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,request,the,current,request,return,the,best,matching,handler,method,or,code,null,if,no,match,see,handle,match,object,string,http,servlet,request,see,handle,no,match,set,string,http,servlet,request;protected,handler,method,lookup,handler,method,string,lookup,path,http,servlet,request,request,throws,exception,list,match,matches,new,array,list,match,list,t,direct,path,matches,this,mapping,registry,get,mappings,by,url,lookup,path,if,direct,path,matches,null,add,matching,mappings,direct,path,matches,matches,request,if,matches,is,empty,add,matching,mappings,this,mapping,registry,get,mappings,key,set,matches,request,if,matches,is,empty,comparator,match,comparator,new,match,comparator,get,mapping,comparator,request,collections,sort,matches,comparator,if,logger,is,trace,enabled,logger,trace,found,matches,size,matching,mapping,s,for,lookup,path,matches,match,best,match,matches,get,0,if,matches,size,1,if,cors,utils,is,pre,flight,request,request,return,match,second,best,match,matches,get,1,if,comparator,compare,best,match,second,best,match,0,method,m1,best,match,handler,method,get,method,method,m2,second,best,match,handler,method,get,method,throw,new,illegal,state,exception,ambiguous,handler,methods,mapped,for,http,path,request,get,request,url,m1,m2,handle,match,best,match,mapping,lookup,path,request,return,best,match,handler,method,else,return,handle,no,match,this,mapping,registry,get,mappings,key,set,lookup,path,request
AbstractHandlerMethodMapping -> protected HandlerMethod lookupHandlerMethod(String lookupPath, HttpServletRequest request) throws Exception;1448483163;Look up the best-matching handler method for the current request._If multiple matches are found, the best match is selected._@param lookupPath mapping lookup path within the current servlet mapping_@param request the current request_@return the best-matching handler method, or {@code null} if no match_@see #handleMatch(Object, String, HttpServletRequest)_@see #handleNoMatch(Set, String, HttpServletRequest);protected HandlerMethod lookupHandlerMethod(String lookupPath, HttpServletRequest request) throws Exception {_		List<Match> matches = new ArrayList<Match>()__		List<T> directPathMatches = this.mappingRegistry.getMappingsByUrl(lookupPath)__		if (directPathMatches != null) {_			addMatchingMappings(directPathMatches, matches, request)__		}_		if (matches.isEmpty()) {_			_			addMatchingMappings(this.mappingRegistry.getMappings().keySet(), matches, request)__		}__		if (!matches.isEmpty()) {_			Comparator<Match> comparator = new MatchComparator(getMappingComparator(request))__			Collections.sort(matches, comparator)__			if (logger.isTraceEnabled()) {_				logger.trace("Found " + matches.size() + " matching mapping(s) for [" +_						lookupPath + "] : " + matches)__			}_			Match bestMatch = matches.get(0)__			if (matches.size() > 1) {_				if (CorsUtils.isPreFlightRequest(request)) {_					return PREFLIGHT_AMBIGUOUS_MATCH__				}_				Match secondBestMatch = matches.get(1)__				if (comparator.compare(bestMatch, secondBestMatch) == 0) {_					Method m1 = bestMatch.handlerMethod.getMethod()__					Method m2 = secondBestMatch.handlerMethod.getMethod()__					throw new IllegalStateException("Ambiguous handler methods mapped for HTTP path '" +_							request.getRequestURL() + "': {" + m1 + ", " + m2 + "}")__				}_			}_			handleMatch(bestMatch.mapping, lookupPath, request)__			return bestMatch.handlerMethod__		}_		else {_			return handleNoMatch(this.mappingRegistry.getMappings().keySet(), lookupPath, request)__		}_	};look,up,the,best,matching,handler,method,for,the,current,request,if,multiple,matches,are,found,the,best,match,is,selected,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,request,the,current,request,return,the,best,matching,handler,method,or,code,null,if,no,match,see,handle,match,object,string,http,servlet,request,see,handle,no,match,set,string,http,servlet,request;protected,handler,method,lookup,handler,method,string,lookup,path,http,servlet,request,request,throws,exception,list,match,matches,new,array,list,match,list,t,direct,path,matches,this,mapping,registry,get,mappings,by,url,lookup,path,if,direct,path,matches,null,add,matching,mappings,direct,path,matches,matches,request,if,matches,is,empty,add,matching,mappings,this,mapping,registry,get,mappings,key,set,matches,request,if,matches,is,empty,comparator,match,comparator,new,match,comparator,get,mapping,comparator,request,collections,sort,matches,comparator,if,logger,is,trace,enabled,logger,trace,found,matches,size,matching,mapping,s,for,lookup,path,matches,match,best,match,matches,get,0,if,matches,size,1,if,cors,utils,is,pre,flight,request,request,return,match,second,best,match,matches,get,1,if,comparator,compare,best,match,second,best,match,0,method,m1,best,match,handler,method,get,method,method,m2,second,best,match,handler,method,get,method,throw,new,illegal,state,exception,ambiguous,handler,methods,mapped,for,http,path,request,get,request,url,m1,m2,handle,match,best,match,mapping,lookup,path,request,return,best,match,handler,method,else,return,handle,no,match,this,mapping,registry,get,mappings,key,set,lookup,path,request
AbstractHandlerMethodMapping -> protected HandlerMethod lookupHandlerMethod(String lookupPath, HttpServletRequest request) throws Exception;1452685925;Look up the best-matching handler method for the current request._If multiple matches are found, the best match is selected._@param lookupPath mapping lookup path within the current servlet mapping_@param request the current request_@return the best-matching handler method, or {@code null} if no match_@see #handleMatch(Object, String, HttpServletRequest)_@see #handleNoMatch(Set, String, HttpServletRequest);protected HandlerMethod lookupHandlerMethod(String lookupPath, HttpServletRequest request) throws Exception {_		List<Match> matches = new ArrayList<Match>()__		List<T> directPathMatches = this.mappingRegistry.getMappingsByUrl(lookupPath)__		if (directPathMatches != null) {_			addMatchingMappings(directPathMatches, matches, request)__		}_		if (matches.isEmpty()) {_			_			addMatchingMappings(this.mappingRegistry.getMappings().keySet(), matches, request)__		}__		if (!matches.isEmpty()) {_			Comparator<Match> comparator = new MatchComparator(getMappingComparator(request))__			Collections.sort(matches, comparator)__			if (logger.isTraceEnabled()) {_				logger.trace("Found " + matches.size() + " matching mapping(s) for [" +_						lookupPath + "] : " + matches)__			}_			Match bestMatch = matches.get(0)__			if (matches.size() > 1) {_				if (CorsUtils.isPreFlightRequest(request)) {_					return PREFLIGHT_AMBIGUOUS_MATCH__				}_				Match secondBestMatch = matches.get(1)__				if (comparator.compare(bestMatch, secondBestMatch) == 0) {_					Method m1 = bestMatch.handlerMethod.getMethod()__					Method m2 = secondBestMatch.handlerMethod.getMethod()__					throw new IllegalStateException("Ambiguous handler methods mapped for HTTP path '" +_							request.getRequestURL() + "': {" + m1 + ", " + m2 + "}")__				}_			}_			handleMatch(bestMatch.mapping, lookupPath, request)__			return bestMatch.handlerMethod__		}_		else {_			return handleNoMatch(this.mappingRegistry.getMappings().keySet(), lookupPath, request)__		}_	};look,up,the,best,matching,handler,method,for,the,current,request,if,multiple,matches,are,found,the,best,match,is,selected,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,request,the,current,request,return,the,best,matching,handler,method,or,code,null,if,no,match,see,handle,match,object,string,http,servlet,request,see,handle,no,match,set,string,http,servlet,request;protected,handler,method,lookup,handler,method,string,lookup,path,http,servlet,request,request,throws,exception,list,match,matches,new,array,list,match,list,t,direct,path,matches,this,mapping,registry,get,mappings,by,url,lookup,path,if,direct,path,matches,null,add,matching,mappings,direct,path,matches,matches,request,if,matches,is,empty,add,matching,mappings,this,mapping,registry,get,mappings,key,set,matches,request,if,matches,is,empty,comparator,match,comparator,new,match,comparator,get,mapping,comparator,request,collections,sort,matches,comparator,if,logger,is,trace,enabled,logger,trace,found,matches,size,matching,mapping,s,for,lookup,path,matches,match,best,match,matches,get,0,if,matches,size,1,if,cors,utils,is,pre,flight,request,request,return,match,second,best,match,matches,get,1,if,comparator,compare,best,match,second,best,match,0,method,m1,best,match,handler,method,get,method,method,m2,second,best,match,handler,method,get,method,throw,new,illegal,state,exception,ambiguous,handler,methods,mapped,for,http,path,request,get,request,url,m1,m2,handle,match,best,match,mapping,lookup,path,request,return,best,match,handler,method,else,return,handle,no,match,this,mapping,registry,get,mappings,key,set,lookup,path,request
AbstractHandlerMethodMapping -> protected HandlerMethod lookupHandlerMethod(String lookupPath, HttpServletRequest request) throws Exception;1452873718;Look up the best-matching handler method for the current request._If multiple matches are found, the best match is selected._@param lookupPath mapping lookup path within the current servlet mapping_@param request the current request_@return the best-matching handler method, or {@code null} if no match_@see #handleMatch(Object, String, HttpServletRequest)_@see #handleNoMatch(Set, String, HttpServletRequest);protected HandlerMethod lookupHandlerMethod(String lookupPath, HttpServletRequest request) throws Exception {_		List<Match> matches = new ArrayList<Match>()__		List<T> directPathMatches = this.mappingRegistry.getMappingsByUrl(lookupPath)__		if (directPathMatches != null) {_			addMatchingMappings(directPathMatches, matches, request)__		}_		if (matches.isEmpty()) {_			_			addMatchingMappings(this.mappingRegistry.getMappings().keySet(), matches, request)__		}__		if (!matches.isEmpty()) {_			Comparator<Match> comparator = new MatchComparator(getMappingComparator(request))__			Collections.sort(matches, comparator)__			if (logger.isTraceEnabled()) {_				logger.trace("Found " + matches.size() + " matching mapping(s) for [" +_						lookupPath + "] : " + matches)__			}_			Match bestMatch = matches.get(0)__			if (matches.size() > 1) {_				if (CorsUtils.isPreFlightRequest(request)) {_					return PREFLIGHT_AMBIGUOUS_MATCH__				}_				Match secondBestMatch = matches.get(1)__				if (comparator.compare(bestMatch, secondBestMatch) == 0) {_					Method m1 = bestMatch.handlerMethod.getMethod()__					Method m2 = secondBestMatch.handlerMethod.getMethod()__					throw new IllegalStateException("Ambiguous handler methods mapped for HTTP path '" +_							request.getRequestURL() + "': {" + m1 + ", " + m2 + "}")__				}_			}_			handleMatch(bestMatch.mapping, lookupPath, request)__			return bestMatch.handlerMethod__		}_		else {_			return handleNoMatch(this.mappingRegistry.getMappings().keySet(), lookupPath, request)__		}_	};look,up,the,best,matching,handler,method,for,the,current,request,if,multiple,matches,are,found,the,best,match,is,selected,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,request,the,current,request,return,the,best,matching,handler,method,or,code,null,if,no,match,see,handle,match,object,string,http,servlet,request,see,handle,no,match,set,string,http,servlet,request;protected,handler,method,lookup,handler,method,string,lookup,path,http,servlet,request,request,throws,exception,list,match,matches,new,array,list,match,list,t,direct,path,matches,this,mapping,registry,get,mappings,by,url,lookup,path,if,direct,path,matches,null,add,matching,mappings,direct,path,matches,matches,request,if,matches,is,empty,add,matching,mappings,this,mapping,registry,get,mappings,key,set,matches,request,if,matches,is,empty,comparator,match,comparator,new,match,comparator,get,mapping,comparator,request,collections,sort,matches,comparator,if,logger,is,trace,enabled,logger,trace,found,matches,size,matching,mapping,s,for,lookup,path,matches,match,best,match,matches,get,0,if,matches,size,1,if,cors,utils,is,pre,flight,request,request,return,match,second,best,match,matches,get,1,if,comparator,compare,best,match,second,best,match,0,method,m1,best,match,handler,method,get,method,method,m2,second,best,match,handler,method,get,method,throw,new,illegal,state,exception,ambiguous,handler,methods,mapped,for,http,path,request,get,request,url,m1,m2,handle,match,best,match,mapping,lookup,path,request,return,best,match,handler,method,else,return,handle,no,match,this,mapping,registry,get,mappings,key,set,lookup,path,request
AbstractHandlerMethodMapping -> protected HandlerMethod lookupHandlerMethod(String lookupPath, HttpServletRequest request) throws Exception;1453843788;Look up the best-matching handler method for the current request._If multiple matches are found, the best match is selected._@param lookupPath mapping lookup path within the current servlet mapping_@param request the current request_@return the best-matching handler method, or {@code null} if no match_@see #handleMatch(Object, String, HttpServletRequest)_@see #handleNoMatch(Set, String, HttpServletRequest);protected HandlerMethod lookupHandlerMethod(String lookupPath, HttpServletRequest request) throws Exception {_		List<Match> matches = new ArrayList<Match>()__		List<T> directPathMatches = this.mappingRegistry.getMappingsByUrl(lookupPath)__		if (directPathMatches != null) {_			addMatchingMappings(directPathMatches, matches, request)__		}_		if (matches.isEmpty()) {_			_			addMatchingMappings(this.mappingRegistry.getMappings().keySet(), matches, request)__		}__		if (!matches.isEmpty()) {_			Comparator<Match> comparator = new MatchComparator(getMappingComparator(request))__			Collections.sort(matches, comparator)__			if (logger.isTraceEnabled()) {_				logger.trace("Found " + matches.size() + " matching mapping(s) for [" +_						lookupPath + "] : " + matches)__			}_			Match bestMatch = matches.get(0)__			if (matches.size() > 1) {_				if (CorsUtils.isPreFlightRequest(request)) {_					return PREFLIGHT_AMBIGUOUS_MATCH__				}_				Match secondBestMatch = matches.get(1)__				if (comparator.compare(bestMatch, secondBestMatch) == 0) {_					Method m1 = bestMatch.handlerMethod.getMethod()__					Method m2 = secondBestMatch.handlerMethod.getMethod()__					throw new IllegalStateException("Ambiguous handler methods mapped for HTTP path '" +_							request.getRequestURL() + "': {" + m1 + ", " + m2 + "}")__				}_			}_			handleMatch(bestMatch.mapping, lookupPath, request)__			return bestMatch.handlerMethod__		}_		else {_			return handleNoMatch(this.mappingRegistry.getMappings().keySet(), lookupPath, request)__		}_	};look,up,the,best,matching,handler,method,for,the,current,request,if,multiple,matches,are,found,the,best,match,is,selected,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,request,the,current,request,return,the,best,matching,handler,method,or,code,null,if,no,match,see,handle,match,object,string,http,servlet,request,see,handle,no,match,set,string,http,servlet,request;protected,handler,method,lookup,handler,method,string,lookup,path,http,servlet,request,request,throws,exception,list,match,matches,new,array,list,match,list,t,direct,path,matches,this,mapping,registry,get,mappings,by,url,lookup,path,if,direct,path,matches,null,add,matching,mappings,direct,path,matches,matches,request,if,matches,is,empty,add,matching,mappings,this,mapping,registry,get,mappings,key,set,matches,request,if,matches,is,empty,comparator,match,comparator,new,match,comparator,get,mapping,comparator,request,collections,sort,matches,comparator,if,logger,is,trace,enabled,logger,trace,found,matches,size,matching,mapping,s,for,lookup,path,matches,match,best,match,matches,get,0,if,matches,size,1,if,cors,utils,is,pre,flight,request,request,return,match,second,best,match,matches,get,1,if,comparator,compare,best,match,second,best,match,0,method,m1,best,match,handler,method,get,method,method,m2,second,best,match,handler,method,get,method,throw,new,illegal,state,exception,ambiguous,handler,methods,mapped,for,http,path,request,get,request,url,m1,m2,handle,match,best,match,mapping,lookup,path,request,return,best,match,handler,method,else,return,handle,no,match,this,mapping,registry,get,mappings,key,set,lookup,path,request
AbstractHandlerMethodMapping -> protected HandlerMethod lookupHandlerMethod(String lookupPath, HttpServletRequest request) throws Exception;1467730834;Look up the best-matching handler method for the current request._If multiple matches are found, the best match is selected._@param lookupPath mapping lookup path within the current servlet mapping_@param request the current request_@return the best-matching handler method, or {@code null} if no match_@see #handleMatch(Object, String, HttpServletRequest)_@see #handleNoMatch(Set, String, HttpServletRequest);protected HandlerMethod lookupHandlerMethod(String lookupPath, HttpServletRequest request) throws Exception {_		List<Match> matches = new ArrayList<Match>()__		List<T> directPathMatches = this.mappingRegistry.getMappingsByUrl(lookupPath)__		if (directPathMatches != null) {_			addMatchingMappings(directPathMatches, matches, request)__		}_		if (matches.isEmpty()) {_			_			addMatchingMappings(this.mappingRegistry.getMappings().keySet(), matches, request)__		}__		if (!matches.isEmpty()) {_			Comparator<Match> comparator = new MatchComparator(getMappingComparator(request))__			Collections.sort(matches, comparator)__			if (logger.isTraceEnabled()) {_				logger.trace("Found " + matches.size() + " matching mapping(s) for [" +_						lookupPath + "] : " + matches)__			}_			Match bestMatch = matches.get(0)__			if (matches.size() > 1) {_				if (CorsUtils.isPreFlightRequest(request)) {_					return PREFLIGHT_AMBIGUOUS_MATCH__				}_				Match secondBestMatch = matches.get(1)__				if (comparator.compare(bestMatch, secondBestMatch) == 0) {_					Method m1 = bestMatch.handlerMethod.getMethod()__					Method m2 = secondBestMatch.handlerMethod.getMethod()__					throw new IllegalStateException("Ambiguous handler methods mapped for HTTP path '" +_							request.getRequestURL() + "': {" + m1 + ", " + m2 + "}")__				}_			}_			handleMatch(bestMatch.mapping, lookupPath, request)__			return bestMatch.handlerMethod__		}_		else {_			return handleNoMatch(this.mappingRegistry.getMappings().keySet(), lookupPath, request)__		}_	};look,up,the,best,matching,handler,method,for,the,current,request,if,multiple,matches,are,found,the,best,match,is,selected,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,request,the,current,request,return,the,best,matching,handler,method,or,code,null,if,no,match,see,handle,match,object,string,http,servlet,request,see,handle,no,match,set,string,http,servlet,request;protected,handler,method,lookup,handler,method,string,lookup,path,http,servlet,request,request,throws,exception,list,match,matches,new,array,list,match,list,t,direct,path,matches,this,mapping,registry,get,mappings,by,url,lookup,path,if,direct,path,matches,null,add,matching,mappings,direct,path,matches,matches,request,if,matches,is,empty,add,matching,mappings,this,mapping,registry,get,mappings,key,set,matches,request,if,matches,is,empty,comparator,match,comparator,new,match,comparator,get,mapping,comparator,request,collections,sort,matches,comparator,if,logger,is,trace,enabled,logger,trace,found,matches,size,matching,mapping,s,for,lookup,path,matches,match,best,match,matches,get,0,if,matches,size,1,if,cors,utils,is,pre,flight,request,request,return,match,second,best,match,matches,get,1,if,comparator,compare,best,match,second,best,match,0,method,m1,best,match,handler,method,get,method,method,m2,second,best,match,handler,method,get,method,throw,new,illegal,state,exception,ambiguous,handler,methods,mapped,for,http,path,request,get,request,url,m1,m2,handle,match,best,match,mapping,lookup,path,request,return,best,match,handler,method,else,return,handle,no,match,this,mapping,registry,get,mappings,key,set,lookup,path,request
AbstractHandlerMethodMapping -> protected HandlerMethod lookupHandlerMethod(String lookupPath, HttpServletRequest request) throws Exception;1468417354;Look up the best-matching handler method for the current request._If multiple matches are found, the best match is selected._@param lookupPath mapping lookup path within the current servlet mapping_@param request the current request_@return the best-matching handler method, or {@code null} if no match_@see #handleMatch(Object, String, HttpServletRequest)_@see #handleNoMatch(Set, String, HttpServletRequest);protected HandlerMethod lookupHandlerMethod(String lookupPath, HttpServletRequest request) throws Exception {_		List<Match> matches = new ArrayList<Match>()__		List<T> directPathMatches = this.mappingRegistry.getMappingsByUrl(lookupPath)__		if (directPathMatches != null) {_			addMatchingMappings(directPathMatches, matches, request)__		}_		if (matches.isEmpty()) {_			_			addMatchingMappings(this.mappingRegistry.getMappings().keySet(), matches, request)__		}__		if (!matches.isEmpty()) {_			Comparator<Match> comparator = new MatchComparator(getMappingComparator(request))__			Collections.sort(matches, comparator)__			if (logger.isTraceEnabled()) {_				logger.trace("Found " + matches.size() + " matching mapping(s) for [" +_						lookupPath + "] : " + matches)__			}_			Match bestMatch = matches.get(0)__			if (matches.size() > 1) {_				if (CorsUtils.isPreFlightRequest(request)) {_					return PREFLIGHT_AMBIGUOUS_MATCH__				}_				Match secondBestMatch = matches.get(1)__				if (comparator.compare(bestMatch, secondBestMatch) == 0) {_					Method m1 = bestMatch.handlerMethod.getMethod()__					Method m2 = secondBestMatch.handlerMethod.getMethod()__					throw new IllegalStateException("Ambiguous handler methods mapped for HTTP path '" +_							request.getRequestURL() + "': {" + m1 + ", " + m2 + "}")__				}_			}_			handleMatch(bestMatch.mapping, lookupPath, request)__			return bestMatch.handlerMethod__		}_		else {_			return handleNoMatch(this.mappingRegistry.getMappings().keySet(), lookupPath, request)__		}_	};look,up,the,best,matching,handler,method,for,the,current,request,if,multiple,matches,are,found,the,best,match,is,selected,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,request,the,current,request,return,the,best,matching,handler,method,or,code,null,if,no,match,see,handle,match,object,string,http,servlet,request,see,handle,no,match,set,string,http,servlet,request;protected,handler,method,lookup,handler,method,string,lookup,path,http,servlet,request,request,throws,exception,list,match,matches,new,array,list,match,list,t,direct,path,matches,this,mapping,registry,get,mappings,by,url,lookup,path,if,direct,path,matches,null,add,matching,mappings,direct,path,matches,matches,request,if,matches,is,empty,add,matching,mappings,this,mapping,registry,get,mappings,key,set,matches,request,if,matches,is,empty,comparator,match,comparator,new,match,comparator,get,mapping,comparator,request,collections,sort,matches,comparator,if,logger,is,trace,enabled,logger,trace,found,matches,size,matching,mapping,s,for,lookup,path,matches,match,best,match,matches,get,0,if,matches,size,1,if,cors,utils,is,pre,flight,request,request,return,match,second,best,match,matches,get,1,if,comparator,compare,best,match,second,best,match,0,method,m1,best,match,handler,method,get,method,method,m2,second,best,match,handler,method,get,method,throw,new,illegal,state,exception,ambiguous,handler,methods,mapped,for,http,path,request,get,request,url,m1,m2,handle,match,best,match,mapping,lookup,path,request,return,best,match,handler,method,else,return,handle,no,match,this,mapping,registry,get,mappings,key,set,lookup,path,request
AbstractHandlerMethodMapping -> protected HandlerMethod lookupHandlerMethod(String lookupPath, HttpServletRequest request) throws Exception;1468596479;Look up the best-matching handler method for the current request._If multiple matches are found, the best match is selected._@param lookupPath mapping lookup path within the current servlet mapping_@param request the current request_@return the best-matching handler method, or {@code null} if no match_@see #handleMatch(Object, String, HttpServletRequest)_@see #handleNoMatch(Set, String, HttpServletRequest);protected HandlerMethod lookupHandlerMethod(String lookupPath, HttpServletRequest request) throws Exception {_		List<Match> matches = new ArrayList<Match>()__		List<T> directPathMatches = this.mappingRegistry.getMappingsByUrl(lookupPath)__		if (directPathMatches != null) {_			addMatchingMappings(directPathMatches, matches, request)__		}_		if (matches.isEmpty()) {_			_			addMatchingMappings(this.mappingRegistry.getMappings().keySet(), matches, request)__		}__		if (!matches.isEmpty()) {_			Comparator<Match> comparator = new MatchComparator(getMappingComparator(request))__			Collections.sort(matches, comparator)__			if (logger.isTraceEnabled()) {_				logger.trace("Found " + matches.size() + " matching mapping(s) for [" +_						lookupPath + "] : " + matches)__			}_			Match bestMatch = matches.get(0)__			if (matches.size() > 1) {_				if (CorsUtils.isPreFlightRequest(request)) {_					return PREFLIGHT_AMBIGUOUS_MATCH__				}_				Match secondBestMatch = matches.get(1)__				if (comparator.compare(bestMatch, secondBestMatch) == 0) {_					Method m1 = bestMatch.handlerMethod.getMethod()__					Method m2 = secondBestMatch.handlerMethod.getMethod()__					throw new IllegalStateException("Ambiguous handler methods mapped for HTTP path '" +_							request.getRequestURL() + "': {" + m1 + ", " + m2 + "}")__				}_			}_			handleMatch(bestMatch.mapping, lookupPath, request)__			return bestMatch.handlerMethod__		}_		else {_			return handleNoMatch(this.mappingRegistry.getMappings().keySet(), lookupPath, request)__		}_	};look,up,the,best,matching,handler,method,for,the,current,request,if,multiple,matches,are,found,the,best,match,is,selected,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,request,the,current,request,return,the,best,matching,handler,method,or,code,null,if,no,match,see,handle,match,object,string,http,servlet,request,see,handle,no,match,set,string,http,servlet,request;protected,handler,method,lookup,handler,method,string,lookup,path,http,servlet,request,request,throws,exception,list,match,matches,new,array,list,match,list,t,direct,path,matches,this,mapping,registry,get,mappings,by,url,lookup,path,if,direct,path,matches,null,add,matching,mappings,direct,path,matches,matches,request,if,matches,is,empty,add,matching,mappings,this,mapping,registry,get,mappings,key,set,matches,request,if,matches,is,empty,comparator,match,comparator,new,match,comparator,get,mapping,comparator,request,collections,sort,matches,comparator,if,logger,is,trace,enabled,logger,trace,found,matches,size,matching,mapping,s,for,lookup,path,matches,match,best,match,matches,get,0,if,matches,size,1,if,cors,utils,is,pre,flight,request,request,return,match,second,best,match,matches,get,1,if,comparator,compare,best,match,second,best,match,0,method,m1,best,match,handler,method,get,method,method,m2,second,best,match,handler,method,get,method,throw,new,illegal,state,exception,ambiguous,handler,methods,mapped,for,http,path,request,get,request,url,m1,m2,handle,match,best,match,mapping,lookup,path,request,return,best,match,handler,method,else,return,handle,no,match,this,mapping,registry,get,mappings,key,set,lookup,path,request
AbstractHandlerMethodMapping -> protected HandlerMethod lookupHandlerMethod(String lookupPath, HttpServletRequest request) throws Exception;1474905889;Look up the best-matching handler method for the current request._If multiple matches are found, the best match is selected._@param lookupPath mapping lookup path within the current servlet mapping_@param request the current request_@return the best-matching handler method, or {@code null} if no match_@see #handleMatch(Object, String, HttpServletRequest)_@see #handleNoMatch(Set, String, HttpServletRequest);protected HandlerMethod lookupHandlerMethod(String lookupPath, HttpServletRequest request) throws Exception {_		List<Match> matches = new ArrayList<Match>()__		List<T> directPathMatches = this.mappingRegistry.getMappingsByUrl(lookupPath)__		if (directPathMatches != null) {_			addMatchingMappings(directPathMatches, matches, request)__		}_		if (matches.isEmpty()) {_			_			addMatchingMappings(this.mappingRegistry.getMappings().keySet(), matches, request)__		}__		if (!matches.isEmpty()) {_			Comparator<Match> comparator = new MatchComparator(getMappingComparator(request))__			Collections.sort(matches, comparator)__			if (logger.isTraceEnabled()) {_				logger.trace("Found " + matches.size() + " matching mapping(s) for [" +_						lookupPath + "] : " + matches)__			}_			Match bestMatch = matches.get(0)__			if (matches.size() > 1) {_				if (CorsUtils.isPreFlightRequest(request)) {_					return PREFLIGHT_AMBIGUOUS_MATCH__				}_				Match secondBestMatch = matches.get(1)__				if (comparator.compare(bestMatch, secondBestMatch) == 0) {_					Method m1 = bestMatch.handlerMethod.getMethod()__					Method m2 = secondBestMatch.handlerMethod.getMethod()__					throw new IllegalStateException("Ambiguous handler methods mapped for HTTP path '" +_							request.getRequestURL() + "': {" + m1 + ", " + m2 + "}")__				}_			}_			handleMatch(bestMatch.mapping, lookupPath, request)__			return bestMatch.handlerMethod__		}_		else {_			return handleNoMatch(this.mappingRegistry.getMappings().keySet(), lookupPath, request)__		}_	};look,up,the,best,matching,handler,method,for,the,current,request,if,multiple,matches,are,found,the,best,match,is,selected,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,request,the,current,request,return,the,best,matching,handler,method,or,code,null,if,no,match,see,handle,match,object,string,http,servlet,request,see,handle,no,match,set,string,http,servlet,request;protected,handler,method,lookup,handler,method,string,lookup,path,http,servlet,request,request,throws,exception,list,match,matches,new,array,list,match,list,t,direct,path,matches,this,mapping,registry,get,mappings,by,url,lookup,path,if,direct,path,matches,null,add,matching,mappings,direct,path,matches,matches,request,if,matches,is,empty,add,matching,mappings,this,mapping,registry,get,mappings,key,set,matches,request,if,matches,is,empty,comparator,match,comparator,new,match,comparator,get,mapping,comparator,request,collections,sort,matches,comparator,if,logger,is,trace,enabled,logger,trace,found,matches,size,matching,mapping,s,for,lookup,path,matches,match,best,match,matches,get,0,if,matches,size,1,if,cors,utils,is,pre,flight,request,request,return,match,second,best,match,matches,get,1,if,comparator,compare,best,match,second,best,match,0,method,m1,best,match,handler,method,get,method,method,m2,second,best,match,handler,method,get,method,throw,new,illegal,state,exception,ambiguous,handler,methods,mapped,for,http,path,request,get,request,url,m1,m2,handle,match,best,match,mapping,lookup,path,request,return,best,match,handler,method,else,return,handle,no,match,this,mapping,registry,get,mappings,key,set,lookup,path,request
AbstractHandlerMethodMapping -> protected HandlerMethod lookupHandlerMethod(String lookupPath, HttpServletRequest request) throws Exception;1481813056;Look up the best-matching handler method for the current request._If multiple matches are found, the best match is selected._@param lookupPath mapping lookup path within the current servlet mapping_@param request the current request_@return the best-matching handler method, or {@code null} if no match_@see #handleMatch(Object, String, HttpServletRequest)_@see #handleNoMatch(Set, String, HttpServletRequest);protected HandlerMethod lookupHandlerMethod(String lookupPath, HttpServletRequest request) throws Exception {_		List<Match> matches = new ArrayList<Match>()__		List<T> directPathMatches = this.mappingRegistry.getMappingsByUrl(lookupPath)__		if (directPathMatches != null) {_			addMatchingMappings(directPathMatches, matches, request)__		}_		if (matches.isEmpty()) {_			_			addMatchingMappings(this.mappingRegistry.getMappings().keySet(), matches, request)__		}__		if (!matches.isEmpty()) {_			Comparator<Match> comparator = new MatchComparator(getMappingComparator(request))__			Collections.sort(matches, comparator)__			if (logger.isTraceEnabled()) {_				logger.trace("Found " + matches.size() + " matching mapping(s) for [" +_						lookupPath + "] : " + matches)__			}_			Match bestMatch = matches.get(0)__			if (matches.size() > 1) {_				if (CorsUtils.isPreFlightRequest(request)) {_					return PREFLIGHT_AMBIGUOUS_MATCH__				}_				Match secondBestMatch = matches.get(1)__				if (comparator.compare(bestMatch, secondBestMatch) == 0) {_					Method m1 = bestMatch.handlerMethod.getMethod()__					Method m2 = secondBestMatch.handlerMethod.getMethod()__					throw new IllegalStateException("Ambiguous handler methods mapped for HTTP path '" +_							request.getRequestURL() + "': {" + m1 + ", " + m2 + "}")__				}_			}_			handleMatch(bestMatch.mapping, lookupPath, request)__			return bestMatch.handlerMethod__		}_		else {_			return handleNoMatch(this.mappingRegistry.getMappings().keySet(), lookupPath, request)__		}_	};look,up,the,best,matching,handler,method,for,the,current,request,if,multiple,matches,are,found,the,best,match,is,selected,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,request,the,current,request,return,the,best,matching,handler,method,or,code,null,if,no,match,see,handle,match,object,string,http,servlet,request,see,handle,no,match,set,string,http,servlet,request;protected,handler,method,lookup,handler,method,string,lookup,path,http,servlet,request,request,throws,exception,list,match,matches,new,array,list,match,list,t,direct,path,matches,this,mapping,registry,get,mappings,by,url,lookup,path,if,direct,path,matches,null,add,matching,mappings,direct,path,matches,matches,request,if,matches,is,empty,add,matching,mappings,this,mapping,registry,get,mappings,key,set,matches,request,if,matches,is,empty,comparator,match,comparator,new,match,comparator,get,mapping,comparator,request,collections,sort,matches,comparator,if,logger,is,trace,enabled,logger,trace,found,matches,size,matching,mapping,s,for,lookup,path,matches,match,best,match,matches,get,0,if,matches,size,1,if,cors,utils,is,pre,flight,request,request,return,match,second,best,match,matches,get,1,if,comparator,compare,best,match,second,best,match,0,method,m1,best,match,handler,method,get,method,method,m2,second,best,match,handler,method,get,method,throw,new,illegal,state,exception,ambiguous,handler,methods,mapped,for,http,path,request,get,request,url,m1,m2,handle,match,best,match,mapping,lookup,path,request,return,best,match,handler,method,else,return,handle,no,match,this,mapping,registry,get,mappings,key,set,lookup,path,request
AbstractHandlerMethodMapping -> protected HandlerMethod lookupHandlerMethod(String lookupPath, HttpServletRequest request) throws Exception;1485810955;Look up the best-matching handler method for the current request._If multiple matches are found, the best match is selected._@param lookupPath mapping lookup path within the current servlet mapping_@param request the current request_@return the best-matching handler method, or {@code null} if no match_@see #handleMatch(Object, String, HttpServletRequest)_@see #handleNoMatch(Set, String, HttpServletRequest);protected HandlerMethod lookupHandlerMethod(String lookupPath, HttpServletRequest request) throws Exception {_		List<Match> matches = new ArrayList<Match>()__		List<T> directPathMatches = this.mappingRegistry.getMappingsByUrl(lookupPath)__		if (directPathMatches != null) {_			addMatchingMappings(directPathMatches, matches, request)__		}_		if (matches.isEmpty()) {_			_			addMatchingMappings(this.mappingRegistry.getMappings().keySet(), matches, request)__		}__		if (!matches.isEmpty()) {_			Comparator<Match> comparator = new MatchComparator(getMappingComparator(request))__			Collections.sort(matches, comparator)__			if (logger.isTraceEnabled()) {_				logger.trace("Found " + matches.size() + " matching mapping(s) for [" +_						lookupPath + "] : " + matches)__			}_			Match bestMatch = matches.get(0)__			if (matches.size() > 1) {_				if (CorsUtils.isPreFlightRequest(request)) {_					return PREFLIGHT_AMBIGUOUS_MATCH__				}_				Match secondBestMatch = matches.get(1)__				if (comparator.compare(bestMatch, secondBestMatch) == 0) {_					Method m1 = bestMatch.handlerMethod.getMethod()__					Method m2 = secondBestMatch.handlerMethod.getMethod()__					throw new IllegalStateException("Ambiguous handler methods mapped for HTTP path '" +_							request.getRequestURL() + "': {" + m1 + ", " + m2 + "}")__				}_			}_			handleMatch(bestMatch.mapping, lookupPath, request)__			return bestMatch.handlerMethod__		}_		else {_			return handleNoMatch(this.mappingRegistry.getMappings().keySet(), lookupPath, request)__		}_	};look,up,the,best,matching,handler,method,for,the,current,request,if,multiple,matches,are,found,the,best,match,is,selected,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,request,the,current,request,return,the,best,matching,handler,method,or,code,null,if,no,match,see,handle,match,object,string,http,servlet,request,see,handle,no,match,set,string,http,servlet,request;protected,handler,method,lookup,handler,method,string,lookup,path,http,servlet,request,request,throws,exception,list,match,matches,new,array,list,match,list,t,direct,path,matches,this,mapping,registry,get,mappings,by,url,lookup,path,if,direct,path,matches,null,add,matching,mappings,direct,path,matches,matches,request,if,matches,is,empty,add,matching,mappings,this,mapping,registry,get,mappings,key,set,matches,request,if,matches,is,empty,comparator,match,comparator,new,match,comparator,get,mapping,comparator,request,collections,sort,matches,comparator,if,logger,is,trace,enabled,logger,trace,found,matches,size,matching,mapping,s,for,lookup,path,matches,match,best,match,matches,get,0,if,matches,size,1,if,cors,utils,is,pre,flight,request,request,return,match,second,best,match,matches,get,1,if,comparator,compare,best,match,second,best,match,0,method,m1,best,match,handler,method,get,method,method,m2,second,best,match,handler,method,get,method,throw,new,illegal,state,exception,ambiguous,handler,methods,mapped,for,http,path,request,get,request,url,m1,m2,handle,match,best,match,mapping,lookup,path,request,return,best,match,handler,method,else,return,handle,no,match,this,mapping,registry,get,mappings,key,set,lookup,path,request
AbstractHandlerMethodMapping -> public void setDetectHandlerMethodsInAncestorContexts(boolean detectHandlerMethodsInAncestorContexts);1328020251;Whether to detect handler methods in beans in ancestor ApplicationContexts._<p>Default is "false": Only beans in the current ApplicationContext are_considered, i.e. only in the context that this HandlerMapping itself_is defined in (typically the current DispatcherServlet's context)._<p>Switch this flag on to detect handler beans in ancestor contexts_(typically the Spring root WebApplicationContext) as well.;public void setDetectHandlerMethodsInAncestorContexts(boolean detectHandlerMethodsInAncestorContexts) {_		this.detectHandlerMethodsInAncestorContexts = detectHandlerMethodsInAncestorContexts__	};whether,to,detect,handler,methods,in,beans,in,ancestor,application,contexts,p,default,is,false,only,beans,in,the,current,application,context,are,considered,i,e,only,in,the,context,that,this,handler,mapping,itself,is,defined,in,typically,the,current,dispatcher,servlet,s,context,p,switch,this,flag,on,to,detect,handler,beans,in,ancestor,contexts,typically,the,spring,root,web,application,context,as,well;public,void,set,detect,handler,methods,in,ancestor,contexts,boolean,detect,handler,methods,in,ancestor,contexts,this,detect,handler,methods,in,ancestor,contexts,detect,handler,methods,in,ancestor,contexts
AbstractHandlerMethodMapping -> public void setDetectHandlerMethodsInAncestorContexts(boolean detectHandlerMethodsInAncestorContexts);1328022204;Whether to detect handler methods in beans in ancestor ApplicationContexts._<p>Default is "false": Only beans in the current ApplicationContext are_considered, i.e. only in the context that this HandlerMapping itself_is defined in (typically the current DispatcherServlet's context)._<p>Switch this flag on to detect handler beans in ancestor contexts_(typically the Spring root WebApplicationContext) as well.;public void setDetectHandlerMethodsInAncestorContexts(boolean detectHandlerMethodsInAncestorContexts) {_		this.detectHandlerMethodsInAncestorContexts = detectHandlerMethodsInAncestorContexts__	};whether,to,detect,handler,methods,in,beans,in,ancestor,application,contexts,p,default,is,false,only,beans,in,the,current,application,context,are,considered,i,e,only,in,the,context,that,this,handler,mapping,itself,is,defined,in,typically,the,current,dispatcher,servlet,s,context,p,switch,this,flag,on,to,detect,handler,beans,in,ancestor,contexts,typically,the,spring,root,web,application,context,as,well;public,void,set,detect,handler,methods,in,ancestor,contexts,boolean,detect,handler,methods,in,ancestor,contexts,this,detect,handler,methods,in,ancestor,contexts,detect,handler,methods,in,ancestor,contexts
AbstractHandlerMethodMapping -> public void setDetectHandlerMethodsInAncestorContexts(boolean detectHandlerMethodsInAncestorContexts);1336682556;Whether to detect handler methods in beans in ancestor ApplicationContexts._<p>Default is "false": Only beans in the current ApplicationContext are_considered, i.e. only in the context that this HandlerMapping itself_is defined in (typically the current DispatcherServlet's context)._<p>Switch this flag on to detect handler beans in ancestor contexts_(typically the Spring root WebApplicationContext) as well.;public void setDetectHandlerMethodsInAncestorContexts(boolean detectHandlerMethodsInAncestorContexts) {_		this.detectHandlerMethodsInAncestorContexts = detectHandlerMethodsInAncestorContexts__	};whether,to,detect,handler,methods,in,beans,in,ancestor,application,contexts,p,default,is,false,only,beans,in,the,current,application,context,are,considered,i,e,only,in,the,context,that,this,handler,mapping,itself,is,defined,in,typically,the,current,dispatcher,servlet,s,context,p,switch,this,flag,on,to,detect,handler,beans,in,ancestor,contexts,typically,the,spring,root,web,application,context,as,well;public,void,set,detect,handler,methods,in,ancestor,contexts,boolean,detect,handler,methods,in,ancestor,contexts,this,detect,handler,methods,in,ancestor,contexts,detect,handler,methods,in,ancestor,contexts
AbstractHandlerMethodMapping -> public void setDetectHandlerMethodsInAncestorContexts(boolean detectHandlerMethodsInAncestorContexts);1341441111;Whether to detect handler methods in beans in ancestor ApplicationContexts._<p>Default is "false": Only beans in the current ApplicationContext are_considered, i.e. only in the context that this HandlerMapping itself_is defined in (typically the current DispatcherServlet's context)._<p>Switch this flag on to detect handler beans in ancestor contexts_(typically the Spring root WebApplicationContext) as well.;public void setDetectHandlerMethodsInAncestorContexts(boolean detectHandlerMethodsInAncestorContexts) {_		this.detectHandlerMethodsInAncestorContexts = detectHandlerMethodsInAncestorContexts__	};whether,to,detect,handler,methods,in,beans,in,ancestor,application,contexts,p,default,is,false,only,beans,in,the,current,application,context,are,considered,i,e,only,in,the,context,that,this,handler,mapping,itself,is,defined,in,typically,the,current,dispatcher,servlet,s,context,p,switch,this,flag,on,to,detect,handler,beans,in,ancestor,contexts,typically,the,spring,root,web,application,context,as,well;public,void,set,detect,handler,methods,in,ancestor,contexts,boolean,detect,handler,methods,in,ancestor,contexts,this,detect,handler,methods,in,ancestor,contexts,detect,handler,methods,in,ancestor,contexts
AbstractHandlerMethodMapping -> public void setDetectHandlerMethodsInAncestorContexts(boolean detectHandlerMethodsInAncestorContexts);1356735495;Whether to detect handler methods in beans in ancestor ApplicationContexts._<p>Default is "false": Only beans in the current ApplicationContext are_considered, i.e. only in the context that this HandlerMapping itself_is defined in (typically the current DispatcherServlet's context)._<p>Switch this flag on to detect handler beans in ancestor contexts_(typically the Spring root WebApplicationContext) as well.;public void setDetectHandlerMethodsInAncestorContexts(boolean detectHandlerMethodsInAncestorContexts) {_		this.detectHandlerMethodsInAncestorContexts = detectHandlerMethodsInAncestorContexts__	};whether,to,detect,handler,methods,in,beans,in,ancestor,application,contexts,p,default,is,false,only,beans,in,the,current,application,context,are,considered,i,e,only,in,the,context,that,this,handler,mapping,itself,is,defined,in,typically,the,current,dispatcher,servlet,s,context,p,switch,this,flag,on,to,detect,handler,beans,in,ancestor,contexts,typically,the,spring,root,web,application,context,as,well;public,void,set,detect,handler,methods,in,ancestor,contexts,boolean,detect,handler,methods,in,ancestor,contexts,this,detect,handler,methods,in,ancestor,contexts,detect,handler,methods,in,ancestor,contexts
AbstractHandlerMethodMapping -> public void setDetectHandlerMethodsInAncestorContexts(boolean detectHandlerMethodsInAncestorContexts);1357119239;Whether to detect handler methods in beans in ancestor ApplicationContexts._<p>Default is "false": Only beans in the current ApplicationContext are_considered, i.e. only in the context that this HandlerMapping itself_is defined in (typically the current DispatcherServlet's context)._<p>Switch this flag on to detect handler beans in ancestor contexts_(typically the Spring root WebApplicationContext) as well.;public void setDetectHandlerMethodsInAncestorContexts(boolean detectHandlerMethodsInAncestorContexts) {_		this.detectHandlerMethodsInAncestorContexts = detectHandlerMethodsInAncestorContexts__	};whether,to,detect,handler,methods,in,beans,in,ancestor,application,contexts,p,default,is,false,only,beans,in,the,current,application,context,are,considered,i,e,only,in,the,context,that,this,handler,mapping,itself,is,defined,in,typically,the,current,dispatcher,servlet,s,context,p,switch,this,flag,on,to,detect,handler,beans,in,ancestor,contexts,typically,the,spring,root,web,application,context,as,well;public,void,set,detect,handler,methods,in,ancestor,contexts,boolean,detect,handler,methods,in,ancestor,contexts,this,detect,handler,methods,in,ancestor,contexts,detect,handler,methods,in,ancestor,contexts
AbstractHandlerMethodMapping -> public void setDetectHandlerMethodsInAncestorContexts(boolean detectHandlerMethodsInAncestorContexts);1362408075;Whether to detect handler methods in beans in ancestor ApplicationContexts._<p>Default is "false": Only beans in the current ApplicationContext are_considered, i.e. only in the context that this HandlerMapping itself_is defined in (typically the current DispatcherServlet's context)._<p>Switch this flag on to detect handler beans in ancestor contexts_(typically the Spring root WebApplicationContext) as well.;public void setDetectHandlerMethodsInAncestorContexts(boolean detectHandlerMethodsInAncestorContexts) {_		this.detectHandlerMethodsInAncestorContexts = detectHandlerMethodsInAncestorContexts__	};whether,to,detect,handler,methods,in,beans,in,ancestor,application,contexts,p,default,is,false,only,beans,in,the,current,application,context,are,considered,i,e,only,in,the,context,that,this,handler,mapping,itself,is,defined,in,typically,the,current,dispatcher,servlet,s,context,p,switch,this,flag,on,to,detect,handler,beans,in,ancestor,contexts,typically,the,spring,root,web,application,context,as,well;public,void,set,detect,handler,methods,in,ancestor,contexts,boolean,detect,handler,methods,in,ancestor,contexts,this,detect,handler,methods,in,ancestor,contexts,detect,handler,methods,in,ancestor,contexts
AbstractHandlerMethodMapping -> public void setDetectHandlerMethodsInAncestorContexts(boolean detectHandlerMethodsInAncestorContexts);1368482696;Whether to detect handler methods in beans in ancestor ApplicationContexts._<p>Default is "false": Only beans in the current ApplicationContext are_considered, i.e. only in the context that this HandlerMapping itself_is defined in (typically the current DispatcherServlet's context)._<p>Switch this flag on to detect handler beans in ancestor contexts_(typically the Spring root WebApplicationContext) as well.;public void setDetectHandlerMethodsInAncestorContexts(boolean detectHandlerMethodsInAncestorContexts) {_		this.detectHandlerMethodsInAncestorContexts = detectHandlerMethodsInAncestorContexts__	};whether,to,detect,handler,methods,in,beans,in,ancestor,application,contexts,p,default,is,false,only,beans,in,the,current,application,context,are,considered,i,e,only,in,the,context,that,this,handler,mapping,itself,is,defined,in,typically,the,current,dispatcher,servlet,s,context,p,switch,this,flag,on,to,detect,handler,beans,in,ancestor,contexts,typically,the,spring,root,web,application,context,as,well;public,void,set,detect,handler,methods,in,ancestor,contexts,boolean,detect,handler,methods,in,ancestor,contexts,this,detect,handler,methods,in,ancestor,contexts,detect,handler,methods,in,ancestor,contexts
AbstractHandlerMethodMapping -> public void setDetectHandlerMethodsInAncestorContexts(boolean detectHandlerMethodsInAncestorContexts);1368581529;Whether to detect handler methods in beans in ancestor ApplicationContexts._<p>Default is "false": Only beans in the current ApplicationContext are_considered, i.e. only in the context that this HandlerMapping itself_is defined in (typically the current DispatcherServlet's context)._<p>Switch this flag on to detect handler beans in ancestor contexts_(typically the Spring root WebApplicationContext) as well.;public void setDetectHandlerMethodsInAncestorContexts(boolean detectHandlerMethodsInAncestorContexts) {_		this.detectHandlerMethodsInAncestorContexts = detectHandlerMethodsInAncestorContexts__	};whether,to,detect,handler,methods,in,beans,in,ancestor,application,contexts,p,default,is,false,only,beans,in,the,current,application,context,are,considered,i,e,only,in,the,context,that,this,handler,mapping,itself,is,defined,in,typically,the,current,dispatcher,servlet,s,context,p,switch,this,flag,on,to,detect,handler,beans,in,ancestor,contexts,typically,the,spring,root,web,application,context,as,well;public,void,set,detect,handler,methods,in,ancestor,contexts,boolean,detect,handler,methods,in,ancestor,contexts,this,detect,handler,methods,in,ancestor,contexts,detect,handler,methods,in,ancestor,contexts
AbstractHandlerMethodMapping -> public void setDetectHandlerMethodsInAncestorContexts(boolean detectHandlerMethodsInAncestorContexts);1382665849;Whether to detect handler methods in beans in ancestor ApplicationContexts._<p>Default is "false": Only beans in the current ApplicationContext are_considered, i.e. only in the context that this HandlerMapping itself_is defined in (typically the current DispatcherServlet's context)._<p>Switch this flag on to detect handler beans in ancestor contexts_(typically the Spring root WebApplicationContext) as well.;public void setDetectHandlerMethodsInAncestorContexts(boolean detectHandlerMethodsInAncestorContexts) {_		this.detectHandlerMethodsInAncestorContexts = detectHandlerMethodsInAncestorContexts__	};whether,to,detect,handler,methods,in,beans,in,ancestor,application,contexts,p,default,is,false,only,beans,in,the,current,application,context,are,considered,i,e,only,in,the,context,that,this,handler,mapping,itself,is,defined,in,typically,the,current,dispatcher,servlet,s,context,p,switch,this,flag,on,to,detect,handler,beans,in,ancestor,contexts,typically,the,spring,root,web,application,context,as,well;public,void,set,detect,handler,methods,in,ancestor,contexts,boolean,detect,handler,methods,in,ancestor,contexts,this,detect,handler,methods,in,ancestor,contexts,detect,handler,methods,in,ancestor,contexts
AbstractHandlerMethodMapping -> public void setDetectHandlerMethodsInAncestorContexts(boolean detectHandlerMethodsInAncestorContexts);1392160296;Whether to detect handler methods in beans in ancestor ApplicationContexts._<p>Default is "false": Only beans in the current ApplicationContext are_considered, i.e. only in the context that this HandlerMapping itself_is defined in (typically the current DispatcherServlet's context)._<p>Switch this flag on to detect handler beans in ancestor contexts_(typically the Spring root WebApplicationContext) as well.;public void setDetectHandlerMethodsInAncestorContexts(boolean detectHandlerMethodsInAncestorContexts) {_		this.detectHandlerMethodsInAncestorContexts = detectHandlerMethodsInAncestorContexts__	};whether,to,detect,handler,methods,in,beans,in,ancestor,application,contexts,p,default,is,false,only,beans,in,the,current,application,context,are,considered,i,e,only,in,the,context,that,this,handler,mapping,itself,is,defined,in,typically,the,current,dispatcher,servlet,s,context,p,switch,this,flag,on,to,detect,handler,beans,in,ancestor,contexts,typically,the,spring,root,web,application,context,as,well;public,void,set,detect,handler,methods,in,ancestor,contexts,boolean,detect,handler,methods,in,ancestor,contexts,this,detect,handler,methods,in,ancestor,contexts,detect,handler,methods,in,ancestor,contexts
AbstractHandlerMethodMapping -> public void setDetectHandlerMethodsInAncestorContexts(boolean detectHandlerMethodsInAncestorContexts);1392337816;Whether to detect handler methods in beans in ancestor ApplicationContexts._<p>Default is "false": Only beans in the current ApplicationContext are_considered, i.e. only in the context that this HandlerMapping itself_is defined in (typically the current DispatcherServlet's context)._<p>Switch this flag on to detect handler beans in ancestor contexts_(typically the Spring root WebApplicationContext) as well.;public void setDetectHandlerMethodsInAncestorContexts(boolean detectHandlerMethodsInAncestorContexts) {_		this.detectHandlerMethodsInAncestorContexts = detectHandlerMethodsInAncestorContexts__	};whether,to,detect,handler,methods,in,beans,in,ancestor,application,contexts,p,default,is,false,only,beans,in,the,current,application,context,are,considered,i,e,only,in,the,context,that,this,handler,mapping,itself,is,defined,in,typically,the,current,dispatcher,servlet,s,context,p,switch,this,flag,on,to,detect,handler,beans,in,ancestor,contexts,typically,the,spring,root,web,application,context,as,well;public,void,set,detect,handler,methods,in,ancestor,contexts,boolean,detect,handler,methods,in,ancestor,contexts,this,detect,handler,methods,in,ancestor,contexts,detect,handler,methods,in,ancestor,contexts
AbstractHandlerMethodMapping -> public void setDetectHandlerMethodsInAncestorContexts(boolean detectHandlerMethodsInAncestorContexts);1392407320;Whether to detect handler methods in beans in ancestor ApplicationContexts._<p>Default is "false": Only beans in the current ApplicationContext are_considered, i.e. only in the context that this HandlerMapping itself_is defined in (typically the current DispatcherServlet's context)._<p>Switch this flag on to detect handler beans in ancestor contexts_(typically the Spring root WebApplicationContext) as well.;public void setDetectHandlerMethodsInAncestorContexts(boolean detectHandlerMethodsInAncestorContexts) {_		this.detectHandlerMethodsInAncestorContexts = detectHandlerMethodsInAncestorContexts__	};whether,to,detect,handler,methods,in,beans,in,ancestor,application,contexts,p,default,is,false,only,beans,in,the,current,application,context,are,considered,i,e,only,in,the,context,that,this,handler,mapping,itself,is,defined,in,typically,the,current,dispatcher,servlet,s,context,p,switch,this,flag,on,to,detect,handler,beans,in,ancestor,contexts,typically,the,spring,root,web,application,context,as,well;public,void,set,detect,handler,methods,in,ancestor,contexts,boolean,detect,handler,methods,in,ancestor,contexts,this,detect,handler,methods,in,ancestor,contexts,detect,handler,methods,in,ancestor,contexts
AbstractHandlerMethodMapping -> public void setDetectHandlerMethodsInAncestorContexts(boolean detectHandlerMethodsInAncestorContexts);1395655323;Whether to detect handler methods in beans in ancestor ApplicationContexts._<p>Default is "false": Only beans in the current ApplicationContext are_considered, i.e. only in the context that this HandlerMapping itself_is defined in (typically the current DispatcherServlet's context)._<p>Switch this flag on to detect handler beans in ancestor contexts_(typically the Spring root WebApplicationContext) as well.;public void setDetectHandlerMethodsInAncestorContexts(boolean detectHandlerMethodsInAncestorContexts) {_		this.detectHandlerMethodsInAncestorContexts = detectHandlerMethodsInAncestorContexts__	};whether,to,detect,handler,methods,in,beans,in,ancestor,application,contexts,p,default,is,false,only,beans,in,the,current,application,context,are,considered,i,e,only,in,the,context,that,this,handler,mapping,itself,is,defined,in,typically,the,current,dispatcher,servlet,s,context,p,switch,this,flag,on,to,detect,handler,beans,in,ancestor,contexts,typically,the,spring,root,web,application,context,as,well;public,void,set,detect,handler,methods,in,ancestor,contexts,boolean,detect,handler,methods,in,ancestor,contexts,this,detect,handler,methods,in,ancestor,contexts,detect,handler,methods,in,ancestor,contexts
AbstractHandlerMethodMapping -> public void setDetectHandlerMethodsInAncestorContexts(boolean detectHandlerMethodsInAncestorContexts);1399404473;Whether to detect handler methods in beans in ancestor ApplicationContexts._<p>Default is "false": Only beans in the current ApplicationContext are_considered, i.e. only in the context that this HandlerMapping itself_is defined in (typically the current DispatcherServlet's context)._<p>Switch this flag on to detect handler beans in ancestor contexts_(typically the Spring root WebApplicationContext) as well.;public void setDetectHandlerMethodsInAncestorContexts(boolean detectHandlerMethodsInAncestorContexts) {_		this.detectHandlerMethodsInAncestorContexts = detectHandlerMethodsInAncestorContexts__	};whether,to,detect,handler,methods,in,beans,in,ancestor,application,contexts,p,default,is,false,only,beans,in,the,current,application,context,are,considered,i,e,only,in,the,context,that,this,handler,mapping,itself,is,defined,in,typically,the,current,dispatcher,servlet,s,context,p,switch,this,flag,on,to,detect,handler,beans,in,ancestor,contexts,typically,the,spring,root,web,application,context,as,well;public,void,set,detect,handler,methods,in,ancestor,contexts,boolean,detect,handler,methods,in,ancestor,contexts,this,detect,handler,methods,in,ancestor,contexts,detect,handler,methods,in,ancestor,contexts
AbstractHandlerMethodMapping -> public void setDetectHandlerMethodsInAncestorContexts(boolean detectHandlerMethodsInAncestorContexts);1426869344;Whether to detect handler methods in beans in ancestor ApplicationContexts._<p>Default is "false": Only beans in the current ApplicationContext are_considered, i.e. only in the context that this HandlerMapping itself_is defined in (typically the current DispatcherServlet's context)._<p>Switch this flag on to detect handler beans in ancestor contexts_(typically the Spring root WebApplicationContext) as well.;public void setDetectHandlerMethodsInAncestorContexts(boolean detectHandlerMethodsInAncestorContexts) {_		this.detectHandlerMethodsInAncestorContexts = detectHandlerMethodsInAncestorContexts__	};whether,to,detect,handler,methods,in,beans,in,ancestor,application,contexts,p,default,is,false,only,beans,in,the,current,application,context,are,considered,i,e,only,in,the,context,that,this,handler,mapping,itself,is,defined,in,typically,the,current,dispatcher,servlet,s,context,p,switch,this,flag,on,to,detect,handler,beans,in,ancestor,contexts,typically,the,spring,root,web,application,context,as,well;public,void,set,detect,handler,methods,in,ancestor,contexts,boolean,detect,handler,methods,in,ancestor,contexts,this,detect,handler,methods,in,ancestor,contexts,detect,handler,methods,in,ancestor,contexts
AbstractHandlerMethodMapping -> public void setDetectHandlerMethodsInAncestorContexts(boolean detectHandlerMethodsInAncestorContexts);1427240641;Whether to detect handler methods in beans in ancestor ApplicationContexts._<p>Default is "false": Only beans in the current ApplicationContext are_considered, i.e. only in the context that this HandlerMapping itself_is defined in (typically the current DispatcherServlet's context)._<p>Switch this flag on to detect handler beans in ancestor contexts_(typically the Spring root WebApplicationContext) as well.;public void setDetectHandlerMethodsInAncestorContexts(boolean detectHandlerMethodsInAncestorContexts) {_		this.detectHandlerMethodsInAncestorContexts = detectHandlerMethodsInAncestorContexts__	};whether,to,detect,handler,methods,in,beans,in,ancestor,application,contexts,p,default,is,false,only,beans,in,the,current,application,context,are,considered,i,e,only,in,the,context,that,this,handler,mapping,itself,is,defined,in,typically,the,current,dispatcher,servlet,s,context,p,switch,this,flag,on,to,detect,handler,beans,in,ancestor,contexts,typically,the,spring,root,web,application,context,as,well;public,void,set,detect,handler,methods,in,ancestor,contexts,boolean,detect,handler,methods,in,ancestor,contexts,this,detect,handler,methods,in,ancestor,contexts,detect,handler,methods,in,ancestor,contexts
AbstractHandlerMethodMapping -> public void setDetectHandlerMethodsInAncestorContexts(boolean detectHandlerMethodsInAncestorContexts);1427983931;Whether to detect handler methods in beans in ancestor ApplicationContexts._<p>Default is "false": Only beans in the current ApplicationContext are_considered, i.e. only in the context that this HandlerMapping itself_is defined in (typically the current DispatcherServlet's context)._<p>Switch this flag on to detect handler beans in ancestor contexts_(typically the Spring root WebApplicationContext) as well.;public void setDetectHandlerMethodsInAncestorContexts(boolean detectHandlerMethodsInAncestorContexts) {_		this.detectHandlerMethodsInAncestorContexts = detectHandlerMethodsInAncestorContexts__	};whether,to,detect,handler,methods,in,beans,in,ancestor,application,contexts,p,default,is,false,only,beans,in,the,current,application,context,are,considered,i,e,only,in,the,context,that,this,handler,mapping,itself,is,defined,in,typically,the,current,dispatcher,servlet,s,context,p,switch,this,flag,on,to,detect,handler,beans,in,ancestor,contexts,typically,the,spring,root,web,application,context,as,well;public,void,set,detect,handler,methods,in,ancestor,contexts,boolean,detect,handler,methods,in,ancestor,contexts,this,detect,handler,methods,in,ancestor,contexts,detect,handler,methods,in,ancestor,contexts
AbstractHandlerMethodMapping -> public void setDetectHandlerMethodsInAncestorContexts(boolean detectHandlerMethodsInAncestorContexts);1430734105;Whether to detect handler methods in beans in ancestor ApplicationContexts._<p>Default is "false": Only beans in the current ApplicationContext are_considered, i.e. only in the context that this HandlerMapping itself_is defined in (typically the current DispatcherServlet's context)._<p>Switch this flag on to detect handler beans in ancestor contexts_(typically the Spring root WebApplicationContext) as well.;public void setDetectHandlerMethodsInAncestorContexts(boolean detectHandlerMethodsInAncestorContexts) {_		this.detectHandlerMethodsInAncestorContexts = detectHandlerMethodsInAncestorContexts__	};whether,to,detect,handler,methods,in,beans,in,ancestor,application,contexts,p,default,is,false,only,beans,in,the,current,application,context,are,considered,i,e,only,in,the,context,that,this,handler,mapping,itself,is,defined,in,typically,the,current,dispatcher,servlet,s,context,p,switch,this,flag,on,to,detect,handler,beans,in,ancestor,contexts,typically,the,spring,root,web,application,context,as,well;public,void,set,detect,handler,methods,in,ancestor,contexts,boolean,detect,handler,methods,in,ancestor,contexts,this,detect,handler,methods,in,ancestor,contexts,detect,handler,methods,in,ancestor,contexts
AbstractHandlerMethodMapping -> public void setDetectHandlerMethodsInAncestorContexts(boolean detectHandlerMethodsInAncestorContexts);1430734105;Whether to detect handler methods in beans in ancestor ApplicationContexts._<p>Default is "false": Only beans in the current ApplicationContext are_considered, i.e. only in the context that this HandlerMapping itself_is defined in (typically the current DispatcherServlet's context)._<p>Switch this flag on to detect handler beans in ancestor contexts_(typically the Spring root WebApplicationContext) as well.;public void setDetectHandlerMethodsInAncestorContexts(boolean detectHandlerMethodsInAncestorContexts) {_		this.detectHandlerMethodsInAncestorContexts = detectHandlerMethodsInAncestorContexts__	};whether,to,detect,handler,methods,in,beans,in,ancestor,application,contexts,p,default,is,false,only,beans,in,the,current,application,context,are,considered,i,e,only,in,the,context,that,this,handler,mapping,itself,is,defined,in,typically,the,current,dispatcher,servlet,s,context,p,switch,this,flag,on,to,detect,handler,beans,in,ancestor,contexts,typically,the,spring,root,web,application,context,as,well;public,void,set,detect,handler,methods,in,ancestor,contexts,boolean,detect,handler,methods,in,ancestor,contexts,this,detect,handler,methods,in,ancestor,contexts,detect,handler,methods,in,ancestor,contexts
AbstractHandlerMethodMapping -> public void setDetectHandlerMethodsInAncestorContexts(boolean detectHandlerMethodsInAncestorContexts);1430734106;Whether to detect handler methods in beans in ancestor ApplicationContexts._<p>Default is "false": Only beans in the current ApplicationContext are_considered, i.e. only in the context that this HandlerMapping itself_is defined in (typically the current DispatcherServlet's context)._<p>Switch this flag on to detect handler beans in ancestor contexts_(typically the Spring root WebApplicationContext) as well.;public void setDetectHandlerMethodsInAncestorContexts(boolean detectHandlerMethodsInAncestorContexts) {_		this.detectHandlerMethodsInAncestorContexts = detectHandlerMethodsInAncestorContexts__	};whether,to,detect,handler,methods,in,beans,in,ancestor,application,contexts,p,default,is,false,only,beans,in,the,current,application,context,are,considered,i,e,only,in,the,context,that,this,handler,mapping,itself,is,defined,in,typically,the,current,dispatcher,servlet,s,context,p,switch,this,flag,on,to,detect,handler,beans,in,ancestor,contexts,typically,the,spring,root,web,application,context,as,well;public,void,set,detect,handler,methods,in,ancestor,contexts,boolean,detect,handler,methods,in,ancestor,contexts,this,detect,handler,methods,in,ancestor,contexts,detect,handler,methods,in,ancestor,contexts
AbstractHandlerMethodMapping -> public void setDetectHandlerMethodsInAncestorContexts(boolean detectHandlerMethodsInAncestorContexts);1430774689;Whether to detect handler methods in beans in ancestor ApplicationContexts._<p>Default is "false": Only beans in the current ApplicationContext are_considered, i.e. only in the context that this HandlerMapping itself_is defined in (typically the current DispatcherServlet's context)._<p>Switch this flag on to detect handler beans in ancestor contexts_(typically the Spring root WebApplicationContext) as well.;public void setDetectHandlerMethodsInAncestorContexts(boolean detectHandlerMethodsInAncestorContexts) {_		this.detectHandlerMethodsInAncestorContexts = detectHandlerMethodsInAncestorContexts__	};whether,to,detect,handler,methods,in,beans,in,ancestor,application,contexts,p,default,is,false,only,beans,in,the,current,application,context,are,considered,i,e,only,in,the,context,that,this,handler,mapping,itself,is,defined,in,typically,the,current,dispatcher,servlet,s,context,p,switch,this,flag,on,to,detect,handler,beans,in,ancestor,contexts,typically,the,spring,root,web,application,context,as,well;public,void,set,detect,handler,methods,in,ancestor,contexts,boolean,detect,handler,methods,in,ancestor,contexts,this,detect,handler,methods,in,ancestor,contexts,detect,handler,methods,in,ancestor,contexts
AbstractHandlerMethodMapping -> public void setDetectHandlerMethodsInAncestorContexts(boolean detectHandlerMethodsInAncestorContexts);1430844966;Whether to detect handler methods in beans in ancestor ApplicationContexts._<p>Default is "false": Only beans in the current ApplicationContext are_considered, i.e. only in the context that this HandlerMapping itself_is defined in (typically the current DispatcherServlet's context)._<p>Switch this flag on to detect handler beans in ancestor contexts_(typically the Spring root WebApplicationContext) as well.;public void setDetectHandlerMethodsInAncestorContexts(boolean detectHandlerMethodsInAncestorContexts) {_		this.detectHandlerMethodsInAncestorContexts = detectHandlerMethodsInAncestorContexts__	};whether,to,detect,handler,methods,in,beans,in,ancestor,application,contexts,p,default,is,false,only,beans,in,the,current,application,context,are,considered,i,e,only,in,the,context,that,this,handler,mapping,itself,is,defined,in,typically,the,current,dispatcher,servlet,s,context,p,switch,this,flag,on,to,detect,handler,beans,in,ancestor,contexts,typically,the,spring,root,web,application,context,as,well;public,void,set,detect,handler,methods,in,ancestor,contexts,boolean,detect,handler,methods,in,ancestor,contexts,this,detect,handler,methods,in,ancestor,contexts,detect,handler,methods,in,ancestor,contexts
AbstractHandlerMethodMapping -> public void setDetectHandlerMethodsInAncestorContexts(boolean detectHandlerMethodsInAncestorContexts);1430844967;Whether to detect handler methods in beans in ancestor ApplicationContexts._<p>Default is "false": Only beans in the current ApplicationContext are_considered, i.e. only in the context that this HandlerMapping itself_is defined in (typically the current DispatcherServlet's context)._<p>Switch this flag on to detect handler beans in ancestor contexts_(typically the Spring root WebApplicationContext) as well.;public void setDetectHandlerMethodsInAncestorContexts(boolean detectHandlerMethodsInAncestorContexts) {_		this.detectHandlerMethodsInAncestorContexts = detectHandlerMethodsInAncestorContexts__	};whether,to,detect,handler,methods,in,beans,in,ancestor,application,contexts,p,default,is,false,only,beans,in,the,current,application,context,are,considered,i,e,only,in,the,context,that,this,handler,mapping,itself,is,defined,in,typically,the,current,dispatcher,servlet,s,context,p,switch,this,flag,on,to,detect,handler,beans,in,ancestor,contexts,typically,the,spring,root,web,application,context,as,well;public,void,set,detect,handler,methods,in,ancestor,contexts,boolean,detect,handler,methods,in,ancestor,contexts,this,detect,handler,methods,in,ancestor,contexts,detect,handler,methods,in,ancestor,contexts
AbstractHandlerMethodMapping -> public void setDetectHandlerMethodsInAncestorContexts(boolean detectHandlerMethodsInAncestorContexts);1431730371;Whether to detect handler methods in beans in ancestor ApplicationContexts._<p>Default is "false": Only beans in the current ApplicationContext are_considered, i.e. only in the context that this HandlerMapping itself_is defined in (typically the current DispatcherServlet's context)._<p>Switch this flag on to detect handler beans in ancestor contexts_(typically the Spring root WebApplicationContext) as well.;public void setDetectHandlerMethodsInAncestorContexts(boolean detectHandlerMethodsInAncestorContexts) {_		this.detectHandlerMethodsInAncestorContexts = detectHandlerMethodsInAncestorContexts__	};whether,to,detect,handler,methods,in,beans,in,ancestor,application,contexts,p,default,is,false,only,beans,in,the,current,application,context,are,considered,i,e,only,in,the,context,that,this,handler,mapping,itself,is,defined,in,typically,the,current,dispatcher,servlet,s,context,p,switch,this,flag,on,to,detect,handler,beans,in,ancestor,contexts,typically,the,spring,root,web,application,context,as,well;public,void,set,detect,handler,methods,in,ancestor,contexts,boolean,detect,handler,methods,in,ancestor,contexts,this,detect,handler,methods,in,ancestor,contexts,detect,handler,methods,in,ancestor,contexts
AbstractHandlerMethodMapping -> public void setDetectHandlerMethodsInAncestorContexts(boolean detectHandlerMethodsInAncestorContexts);1439294371;Whether to detect handler methods in beans in ancestor ApplicationContexts._<p>Default is "false": Only beans in the current ApplicationContext are_considered, i.e. only in the context that this HandlerMapping itself_is defined in (typically the current DispatcherServlet's context)._<p>Switch this flag on to detect handler beans in ancestor contexts_(typically the Spring root WebApplicationContext) as well.;public void setDetectHandlerMethodsInAncestorContexts(boolean detectHandlerMethodsInAncestorContexts) {_		this.detectHandlerMethodsInAncestorContexts = detectHandlerMethodsInAncestorContexts__	};whether,to,detect,handler,methods,in,beans,in,ancestor,application,contexts,p,default,is,false,only,beans,in,the,current,application,context,are,considered,i,e,only,in,the,context,that,this,handler,mapping,itself,is,defined,in,typically,the,current,dispatcher,servlet,s,context,p,switch,this,flag,on,to,detect,handler,beans,in,ancestor,contexts,typically,the,spring,root,web,application,context,as,well;public,void,set,detect,handler,methods,in,ancestor,contexts,boolean,detect,handler,methods,in,ancestor,contexts,this,detect,handler,methods,in,ancestor,contexts,detect,handler,methods,in,ancestor,contexts
AbstractHandlerMethodMapping -> public void setDetectHandlerMethodsInAncestorContexts(boolean detectHandlerMethodsInAncestorContexts);1447077465;Whether to detect handler methods in beans in ancestor ApplicationContexts._<p>Default is "false": Only beans in the current ApplicationContext are_considered, i.e. only in the context that this HandlerMapping itself_is defined in (typically the current DispatcherServlet's context)._<p>Switch this flag on to detect handler beans in ancestor contexts_(typically the Spring root WebApplicationContext) as well.;public void setDetectHandlerMethodsInAncestorContexts(boolean detectHandlerMethodsInAncestorContexts) {_		this.detectHandlerMethodsInAncestorContexts = detectHandlerMethodsInAncestorContexts__	};whether,to,detect,handler,methods,in,beans,in,ancestor,application,contexts,p,default,is,false,only,beans,in,the,current,application,context,are,considered,i,e,only,in,the,context,that,this,handler,mapping,itself,is,defined,in,typically,the,current,dispatcher,servlet,s,context,p,switch,this,flag,on,to,detect,handler,beans,in,ancestor,contexts,typically,the,spring,root,web,application,context,as,well;public,void,set,detect,handler,methods,in,ancestor,contexts,boolean,detect,handler,methods,in,ancestor,contexts,this,detect,handler,methods,in,ancestor,contexts,detect,handler,methods,in,ancestor,contexts
AbstractHandlerMethodMapping -> public void setDetectHandlerMethodsInAncestorContexts(boolean detectHandlerMethodsInAncestorContexts);1448483163;Whether to detect handler methods in beans in ancestor ApplicationContexts._<p>Default is "false": Only beans in the current ApplicationContext are_considered, i.e. only in the context that this HandlerMapping itself_is defined in (typically the current DispatcherServlet's context)._<p>Switch this flag on to detect handler beans in ancestor contexts_(typically the Spring root WebApplicationContext) as well.;public void setDetectHandlerMethodsInAncestorContexts(boolean detectHandlerMethodsInAncestorContexts) {_		this.detectHandlerMethodsInAncestorContexts = detectHandlerMethodsInAncestorContexts__	};whether,to,detect,handler,methods,in,beans,in,ancestor,application,contexts,p,default,is,false,only,beans,in,the,current,application,context,are,considered,i,e,only,in,the,context,that,this,handler,mapping,itself,is,defined,in,typically,the,current,dispatcher,servlet,s,context,p,switch,this,flag,on,to,detect,handler,beans,in,ancestor,contexts,typically,the,spring,root,web,application,context,as,well;public,void,set,detect,handler,methods,in,ancestor,contexts,boolean,detect,handler,methods,in,ancestor,contexts,this,detect,handler,methods,in,ancestor,contexts,detect,handler,methods,in,ancestor,contexts
AbstractHandlerMethodMapping -> public void setDetectHandlerMethodsInAncestorContexts(boolean detectHandlerMethodsInAncestorContexts);1452685925;Whether to detect handler methods in beans in ancestor ApplicationContexts._<p>Default is "false": Only beans in the current ApplicationContext are_considered, i.e. only in the context that this HandlerMapping itself_is defined in (typically the current DispatcherServlet's context)._<p>Switch this flag on to detect handler beans in ancestor contexts_(typically the Spring root WebApplicationContext) as well.;public void setDetectHandlerMethodsInAncestorContexts(boolean detectHandlerMethodsInAncestorContexts) {_		this.detectHandlerMethodsInAncestorContexts = detectHandlerMethodsInAncestorContexts__	};whether,to,detect,handler,methods,in,beans,in,ancestor,application,contexts,p,default,is,false,only,beans,in,the,current,application,context,are,considered,i,e,only,in,the,context,that,this,handler,mapping,itself,is,defined,in,typically,the,current,dispatcher,servlet,s,context,p,switch,this,flag,on,to,detect,handler,beans,in,ancestor,contexts,typically,the,spring,root,web,application,context,as,well;public,void,set,detect,handler,methods,in,ancestor,contexts,boolean,detect,handler,methods,in,ancestor,contexts,this,detect,handler,methods,in,ancestor,contexts,detect,handler,methods,in,ancestor,contexts
AbstractHandlerMethodMapping -> public void setDetectHandlerMethodsInAncestorContexts(boolean detectHandlerMethodsInAncestorContexts);1452873718;Whether to detect handler methods in beans in ancestor ApplicationContexts._<p>Default is "false": Only beans in the current ApplicationContext are_considered, i.e. only in the context that this HandlerMapping itself_is defined in (typically the current DispatcherServlet's context)._<p>Switch this flag on to detect handler beans in ancestor contexts_(typically the Spring root WebApplicationContext) as well.;public void setDetectHandlerMethodsInAncestorContexts(boolean detectHandlerMethodsInAncestorContexts) {_		this.detectHandlerMethodsInAncestorContexts = detectHandlerMethodsInAncestorContexts__	};whether,to,detect,handler,methods,in,beans,in,ancestor,application,contexts,p,default,is,false,only,beans,in,the,current,application,context,are,considered,i,e,only,in,the,context,that,this,handler,mapping,itself,is,defined,in,typically,the,current,dispatcher,servlet,s,context,p,switch,this,flag,on,to,detect,handler,beans,in,ancestor,contexts,typically,the,spring,root,web,application,context,as,well;public,void,set,detect,handler,methods,in,ancestor,contexts,boolean,detect,handler,methods,in,ancestor,contexts,this,detect,handler,methods,in,ancestor,contexts,detect,handler,methods,in,ancestor,contexts
AbstractHandlerMethodMapping -> public void setDetectHandlerMethodsInAncestorContexts(boolean detectHandlerMethodsInAncestorContexts);1453843788;Whether to detect handler methods in beans in ancestor ApplicationContexts._<p>Default is "false": Only beans in the current ApplicationContext are_considered, i.e. only in the context that this HandlerMapping itself_is defined in (typically the current DispatcherServlet's context)._<p>Switch this flag on to detect handler beans in ancestor contexts_(typically the Spring root WebApplicationContext) as well.;public void setDetectHandlerMethodsInAncestorContexts(boolean detectHandlerMethodsInAncestorContexts) {_		this.detectHandlerMethodsInAncestorContexts = detectHandlerMethodsInAncestorContexts__	};whether,to,detect,handler,methods,in,beans,in,ancestor,application,contexts,p,default,is,false,only,beans,in,the,current,application,context,are,considered,i,e,only,in,the,context,that,this,handler,mapping,itself,is,defined,in,typically,the,current,dispatcher,servlet,s,context,p,switch,this,flag,on,to,detect,handler,beans,in,ancestor,contexts,typically,the,spring,root,web,application,context,as,well;public,void,set,detect,handler,methods,in,ancestor,contexts,boolean,detect,handler,methods,in,ancestor,contexts,this,detect,handler,methods,in,ancestor,contexts,detect,handler,methods,in,ancestor,contexts
AbstractHandlerMethodMapping -> public void setDetectHandlerMethodsInAncestorContexts(boolean detectHandlerMethodsInAncestorContexts);1467730834;Whether to detect handler methods in beans in ancestor ApplicationContexts._<p>Default is "false": Only beans in the current ApplicationContext are_considered, i.e. only in the context that this HandlerMapping itself_is defined in (typically the current DispatcherServlet's context)._<p>Switch this flag on to detect handler beans in ancestor contexts_(typically the Spring root WebApplicationContext) as well.;public void setDetectHandlerMethodsInAncestorContexts(boolean detectHandlerMethodsInAncestorContexts) {_		this.detectHandlerMethodsInAncestorContexts = detectHandlerMethodsInAncestorContexts__	};whether,to,detect,handler,methods,in,beans,in,ancestor,application,contexts,p,default,is,false,only,beans,in,the,current,application,context,are,considered,i,e,only,in,the,context,that,this,handler,mapping,itself,is,defined,in,typically,the,current,dispatcher,servlet,s,context,p,switch,this,flag,on,to,detect,handler,beans,in,ancestor,contexts,typically,the,spring,root,web,application,context,as,well;public,void,set,detect,handler,methods,in,ancestor,contexts,boolean,detect,handler,methods,in,ancestor,contexts,this,detect,handler,methods,in,ancestor,contexts,detect,handler,methods,in,ancestor,contexts
AbstractHandlerMethodMapping -> public void setDetectHandlerMethodsInAncestorContexts(boolean detectHandlerMethodsInAncestorContexts);1468417354;Whether to detect handler methods in beans in ancestor ApplicationContexts._<p>Default is "false": Only beans in the current ApplicationContext are_considered, i.e. only in the context that this HandlerMapping itself_is defined in (typically the current DispatcherServlet's context)._<p>Switch this flag on to detect handler beans in ancestor contexts_(typically the Spring root WebApplicationContext) as well.;public void setDetectHandlerMethodsInAncestorContexts(boolean detectHandlerMethodsInAncestorContexts) {_		this.detectHandlerMethodsInAncestorContexts = detectHandlerMethodsInAncestorContexts__	};whether,to,detect,handler,methods,in,beans,in,ancestor,application,contexts,p,default,is,false,only,beans,in,the,current,application,context,are,considered,i,e,only,in,the,context,that,this,handler,mapping,itself,is,defined,in,typically,the,current,dispatcher,servlet,s,context,p,switch,this,flag,on,to,detect,handler,beans,in,ancestor,contexts,typically,the,spring,root,web,application,context,as,well;public,void,set,detect,handler,methods,in,ancestor,contexts,boolean,detect,handler,methods,in,ancestor,contexts,this,detect,handler,methods,in,ancestor,contexts,detect,handler,methods,in,ancestor,contexts
AbstractHandlerMethodMapping -> public void setDetectHandlerMethodsInAncestorContexts(boolean detectHandlerMethodsInAncestorContexts);1468596479;Whether to detect handler methods in beans in ancestor ApplicationContexts._<p>Default is "false": Only beans in the current ApplicationContext are_considered, i.e. only in the context that this HandlerMapping itself_is defined in (typically the current DispatcherServlet's context)._<p>Switch this flag on to detect handler beans in ancestor contexts_(typically the Spring root WebApplicationContext) as well.;public void setDetectHandlerMethodsInAncestorContexts(boolean detectHandlerMethodsInAncestorContexts) {_		this.detectHandlerMethodsInAncestorContexts = detectHandlerMethodsInAncestorContexts__	};whether,to,detect,handler,methods,in,beans,in,ancestor,application,contexts,p,default,is,false,only,beans,in,the,current,application,context,are,considered,i,e,only,in,the,context,that,this,handler,mapping,itself,is,defined,in,typically,the,current,dispatcher,servlet,s,context,p,switch,this,flag,on,to,detect,handler,beans,in,ancestor,contexts,typically,the,spring,root,web,application,context,as,well;public,void,set,detect,handler,methods,in,ancestor,contexts,boolean,detect,handler,methods,in,ancestor,contexts,this,detect,handler,methods,in,ancestor,contexts,detect,handler,methods,in,ancestor,contexts
AbstractHandlerMethodMapping -> public void setDetectHandlerMethodsInAncestorContexts(boolean detectHandlerMethodsInAncestorContexts);1474905889;Whether to detect handler methods in beans in ancestor ApplicationContexts._<p>Default is "false": Only beans in the current ApplicationContext are_considered, i.e. only in the context that this HandlerMapping itself_is defined in (typically the current DispatcherServlet's context)._<p>Switch this flag on to detect handler beans in ancestor contexts_(typically the Spring root WebApplicationContext) as well.;public void setDetectHandlerMethodsInAncestorContexts(boolean detectHandlerMethodsInAncestorContexts) {_		this.detectHandlerMethodsInAncestorContexts = detectHandlerMethodsInAncestorContexts__	};whether,to,detect,handler,methods,in,beans,in,ancestor,application,contexts,p,default,is,false,only,beans,in,the,current,application,context,are,considered,i,e,only,in,the,context,that,this,handler,mapping,itself,is,defined,in,typically,the,current,dispatcher,servlet,s,context,p,switch,this,flag,on,to,detect,handler,beans,in,ancestor,contexts,typically,the,spring,root,web,application,context,as,well;public,void,set,detect,handler,methods,in,ancestor,contexts,boolean,detect,handler,methods,in,ancestor,contexts,this,detect,handler,methods,in,ancestor,contexts,detect,handler,methods,in,ancestor,contexts
AbstractHandlerMethodMapping -> public void setDetectHandlerMethodsInAncestorContexts(boolean detectHandlerMethodsInAncestorContexts);1481813056;Whether to detect handler methods in beans in ancestor ApplicationContexts._<p>Default is "false": Only beans in the current ApplicationContext are_considered, i.e. only in the context that this HandlerMapping itself_is defined in (typically the current DispatcherServlet's context)._<p>Switch this flag on to detect handler beans in ancestor contexts_(typically the Spring root WebApplicationContext) as well.;public void setDetectHandlerMethodsInAncestorContexts(boolean detectHandlerMethodsInAncestorContexts) {_		this.detectHandlerMethodsInAncestorContexts = detectHandlerMethodsInAncestorContexts__	};whether,to,detect,handler,methods,in,beans,in,ancestor,application,contexts,p,default,is,false,only,beans,in,the,current,application,context,are,considered,i,e,only,in,the,context,that,this,handler,mapping,itself,is,defined,in,typically,the,current,dispatcher,servlet,s,context,p,switch,this,flag,on,to,detect,handler,beans,in,ancestor,contexts,typically,the,spring,root,web,application,context,as,well;public,void,set,detect,handler,methods,in,ancestor,contexts,boolean,detect,handler,methods,in,ancestor,contexts,this,detect,handler,methods,in,ancestor,contexts,detect,handler,methods,in,ancestor,contexts
AbstractHandlerMethodMapping -> public void setDetectHandlerMethodsInAncestorContexts(boolean detectHandlerMethodsInAncestorContexts);1485810955;Whether to detect handler methods in beans in ancestor ApplicationContexts._<p>Default is "false": Only beans in the current ApplicationContext are_considered, i.e. only in the context that this HandlerMapping itself_is defined in (typically the current DispatcherServlet's context)._<p>Switch this flag on to detect handler beans in ancestor contexts_(typically the Spring root WebApplicationContext) as well.;public void setDetectHandlerMethodsInAncestorContexts(boolean detectHandlerMethodsInAncestorContexts) {_		this.detectHandlerMethodsInAncestorContexts = detectHandlerMethodsInAncestorContexts__	};whether,to,detect,handler,methods,in,beans,in,ancestor,application,contexts,p,default,is,false,only,beans,in,the,current,application,context,are,considered,i,e,only,in,the,context,that,this,handler,mapping,itself,is,defined,in,typically,the,current,dispatcher,servlet,s,context,p,switch,this,flag,on,to,detect,handler,beans,in,ancestor,contexts,typically,the,spring,root,web,application,context,as,well;public,void,set,detect,handler,methods,in,ancestor,contexts,boolean,detect,handler,methods,in,ancestor,contexts,this,detect,handler,methods,in,ancestor,contexts,detect,handler,methods,in,ancestor,contexts
AbstractHandlerMethodMapping -> public void setDetectHandlerMethodsInAncestorContexts(boolean detectHandlerMethodsInAncestorContexts);1495868221;Whether to detect handler methods in beans in ancestor ApplicationContexts._<p>Default is "false": Only beans in the current ApplicationContext are_considered, i.e. only in the context that this HandlerMapping itself_is defined in (typically the current DispatcherServlet's context)._<p>Switch this flag on to detect handler beans in ancestor contexts_(typically the Spring root WebApplicationContext) as well.;public void setDetectHandlerMethodsInAncestorContexts(boolean detectHandlerMethodsInAncestorContexts) {_		this.detectHandlerMethodsInAncestorContexts = detectHandlerMethodsInAncestorContexts__	};whether,to,detect,handler,methods,in,beans,in,ancestor,application,contexts,p,default,is,false,only,beans,in,the,current,application,context,are,considered,i,e,only,in,the,context,that,this,handler,mapping,itself,is,defined,in,typically,the,current,dispatcher,servlet,s,context,p,switch,this,flag,on,to,detect,handler,beans,in,ancestor,contexts,typically,the,spring,root,web,application,context,as,well;public,void,set,detect,handler,methods,in,ancestor,contexts,boolean,detect,handler,methods,in,ancestor,contexts,this,detect,handler,methods,in,ancestor,contexts,detect,handler,methods,in,ancestor,contexts
AbstractHandlerMethodMapping -> public void setDetectHandlerMethodsInAncestorContexts(boolean detectHandlerMethodsInAncestorContexts);1496837955;Whether to detect handler methods in beans in ancestor ApplicationContexts._<p>Default is "false": Only beans in the current ApplicationContext are_considered, i.e. only in the context that this HandlerMapping itself_is defined in (typically the current DispatcherServlet's context)._<p>Switch this flag on to detect handler beans in ancestor contexts_(typically the Spring root WebApplicationContext) as well.;public void setDetectHandlerMethodsInAncestorContexts(boolean detectHandlerMethodsInAncestorContexts) {_		this.detectHandlerMethodsInAncestorContexts = detectHandlerMethodsInAncestorContexts__	};whether,to,detect,handler,methods,in,beans,in,ancestor,application,contexts,p,default,is,false,only,beans,in,the,current,application,context,are,considered,i,e,only,in,the,context,that,this,handler,mapping,itself,is,defined,in,typically,the,current,dispatcher,servlet,s,context,p,switch,this,flag,on,to,detect,handler,beans,in,ancestor,contexts,typically,the,spring,root,web,application,context,as,well;public,void,set,detect,handler,methods,in,ancestor,contexts,boolean,detect,handler,methods,in,ancestor,contexts,this,detect,handler,methods,in,ancestor,contexts,detect,handler,methods,in,ancestor,contexts
AbstractHandlerMethodMapping -> public void setDetectHandlerMethodsInAncestorContexts(boolean detectHandlerMethodsInAncestorContexts);1497251962;Whether to detect handler methods in beans in ancestor ApplicationContexts._<p>Default is "false": Only beans in the current ApplicationContext are_considered, i.e. only in the context that this HandlerMapping itself_is defined in (typically the current DispatcherServlet's context)._<p>Switch this flag on to detect handler beans in ancestor contexts_(typically the Spring root WebApplicationContext) as well.;public void setDetectHandlerMethodsInAncestorContexts(boolean detectHandlerMethodsInAncestorContexts) {_		this.detectHandlerMethodsInAncestorContexts = detectHandlerMethodsInAncestorContexts__	};whether,to,detect,handler,methods,in,beans,in,ancestor,application,contexts,p,default,is,false,only,beans,in,the,current,application,context,are,considered,i,e,only,in,the,context,that,this,handler,mapping,itself,is,defined,in,typically,the,current,dispatcher,servlet,s,context,p,switch,this,flag,on,to,detect,handler,beans,in,ancestor,contexts,typically,the,spring,root,web,application,context,as,well;public,void,set,detect,handler,methods,in,ancestor,contexts,boolean,detect,handler,methods,in,ancestor,contexts,this,detect,handler,methods,in,ancestor,contexts,detect,handler,methods,in,ancestor,contexts
AbstractHandlerMethodMapping -> public void setDetectHandlerMethodsInAncestorContexts(boolean detectHandlerMethodsInAncestorContexts);1498780456;Whether to detect handler methods in beans in ancestor ApplicationContexts._<p>Default is "false": Only beans in the current ApplicationContext are_considered, i.e. only in the context that this HandlerMapping itself_is defined in (typically the current DispatcherServlet's context)._<p>Switch this flag on to detect handler beans in ancestor contexts_(typically the Spring root WebApplicationContext) as well.;public void setDetectHandlerMethodsInAncestorContexts(boolean detectHandlerMethodsInAncestorContexts) {_		this.detectHandlerMethodsInAncestorContexts = detectHandlerMethodsInAncestorContexts__	};whether,to,detect,handler,methods,in,beans,in,ancestor,application,contexts,p,default,is,false,only,beans,in,the,current,application,context,are,considered,i,e,only,in,the,context,that,this,handler,mapping,itself,is,defined,in,typically,the,current,dispatcher,servlet,s,context,p,switch,this,flag,on,to,detect,handler,beans,in,ancestor,contexts,typically,the,spring,root,web,application,context,as,well;public,void,set,detect,handler,methods,in,ancestor,contexts,boolean,detect,handler,methods,in,ancestor,contexts,this,detect,handler,methods,in,ancestor,contexts,detect,handler,methods,in,ancestor,contexts
AbstractHandlerMethodMapping -> public void setDetectHandlerMethodsInAncestorContexts(boolean detectHandlerMethodsInAncestorContexts);1518772998;Whether to detect handler methods in beans in ancestor ApplicationContexts._<p>Default is "false": Only beans in the current ApplicationContext are_considered, i.e. only in the context that this HandlerMapping itself_is defined in (typically the current DispatcherServlet's context)._<p>Switch this flag on to detect handler beans in ancestor contexts_(typically the Spring root WebApplicationContext) as well.;public void setDetectHandlerMethodsInAncestorContexts(boolean detectHandlerMethodsInAncestorContexts) {_		this.detectHandlerMethodsInAncestorContexts = detectHandlerMethodsInAncestorContexts__	};whether,to,detect,handler,methods,in,beans,in,ancestor,application,contexts,p,default,is,false,only,beans,in,the,current,application,context,are,considered,i,e,only,in,the,context,that,this,handler,mapping,itself,is,defined,in,typically,the,current,dispatcher,servlet,s,context,p,switch,this,flag,on,to,detect,handler,beans,in,ancestor,contexts,typically,the,spring,root,web,application,context,as,well;public,void,set,detect,handler,methods,in,ancestor,contexts,boolean,detect,handler,methods,in,ancestor,contexts,this,detect,handler,methods,in,ancestor,contexts,detect,handler,methods,in,ancestor,contexts
AbstractHandlerMethodMapping -> public void setDetectHandlerMethodsInAncestorContexts(boolean detectHandlerMethodsInAncestorContexts);1522103912;Whether to detect handler methods in beans in ancestor ApplicationContexts._<p>Default is "false": Only beans in the current ApplicationContext are_considered, i.e. only in the context that this HandlerMapping itself_is defined in (typically the current DispatcherServlet's context)._<p>Switch this flag on to detect handler beans in ancestor contexts_(typically the Spring root WebApplicationContext) as well.;public void setDetectHandlerMethodsInAncestorContexts(boolean detectHandlerMethodsInAncestorContexts) {_		this.detectHandlerMethodsInAncestorContexts = detectHandlerMethodsInAncestorContexts__	};whether,to,detect,handler,methods,in,beans,in,ancestor,application,contexts,p,default,is,false,only,beans,in,the,current,application,context,are,considered,i,e,only,in,the,context,that,this,handler,mapping,itself,is,defined,in,typically,the,current,dispatcher,servlet,s,context,p,switch,this,flag,on,to,detect,handler,beans,in,ancestor,contexts,typically,the,spring,root,web,application,context,as,well;public,void,set,detect,handler,methods,in,ancestor,contexts,boolean,detect,handler,methods,in,ancestor,contexts,this,detect,handler,methods,in,ancestor,contexts,detect,handler,methods,in,ancestor,contexts
AbstractHandlerMethodMapping -> public void setDetectHandlerMethodsInAncestorContexts(boolean detectHandlerMethodsInAncestorContexts);1522843494;Whether to detect handler methods in beans in ancestor ApplicationContexts._<p>Default is "false": Only beans in the current ApplicationContext are_considered, i.e. only in the context that this HandlerMapping itself_is defined in (typically the current DispatcherServlet's context)._<p>Switch this flag on to detect handler beans in ancestor contexts_(typically the Spring root WebApplicationContext) as well.;public void setDetectHandlerMethodsInAncestorContexts(boolean detectHandlerMethodsInAncestorContexts) {_		this.detectHandlerMethodsInAncestorContexts = detectHandlerMethodsInAncestorContexts__	};whether,to,detect,handler,methods,in,beans,in,ancestor,application,contexts,p,default,is,false,only,beans,in,the,current,application,context,are,considered,i,e,only,in,the,context,that,this,handler,mapping,itself,is,defined,in,typically,the,current,dispatcher,servlet,s,context,p,switch,this,flag,on,to,detect,handler,beans,in,ancestor,contexts,typically,the,spring,root,web,application,context,as,well;public,void,set,detect,handler,methods,in,ancestor,contexts,boolean,detect,handler,methods,in,ancestor,contexts,this,detect,handler,methods,in,ancestor,contexts,detect,handler,methods,in,ancestor,contexts
AbstractHandlerMethodMapping -> public void setDetectHandlerMethodsInAncestorContexts(boolean detectHandlerMethodsInAncestorContexts);1529361191;Whether to detect handler methods in beans in ancestor ApplicationContexts._<p>Default is "false": Only beans in the current ApplicationContext are_considered, i.e. only in the context that this HandlerMapping itself_is defined in (typically the current DispatcherServlet's context)._<p>Switch this flag on to detect handler beans in ancestor contexts_(typically the Spring root WebApplicationContext) as well.;public void setDetectHandlerMethodsInAncestorContexts(boolean detectHandlerMethodsInAncestorContexts) {_		this.detectHandlerMethodsInAncestorContexts = detectHandlerMethodsInAncestorContexts__	};whether,to,detect,handler,methods,in,beans,in,ancestor,application,contexts,p,default,is,false,only,beans,in,the,current,application,context,are,considered,i,e,only,in,the,context,that,this,handler,mapping,itself,is,defined,in,typically,the,current,dispatcher,servlet,s,context,p,switch,this,flag,on,to,detect,handler,beans,in,ancestor,contexts,typically,the,spring,root,web,application,context,as,well;public,void,set,detect,handler,methods,in,ancestor,contexts,boolean,detect,handler,methods,in,ancestor,contexts,this,detect,handler,methods,in,ancestor,contexts,detect,handler,methods,in,ancestor,contexts
AbstractHandlerMethodMapping -> public void setDetectHandlerMethodsInAncestorContexts(boolean detectHandlerMethodsInAncestorContexts);1529721864;Whether to detect handler methods in beans in ancestor ApplicationContexts._<p>Default is "false": Only beans in the current ApplicationContext are_considered, i.e. only in the context that this HandlerMapping itself_is defined in (typically the current DispatcherServlet's context)._<p>Switch this flag on to detect handler beans in ancestor contexts_(typically the Spring root WebApplicationContext) as well.;public void setDetectHandlerMethodsInAncestorContexts(boolean detectHandlerMethodsInAncestorContexts) {_		this.detectHandlerMethodsInAncestorContexts = detectHandlerMethodsInAncestorContexts__	};whether,to,detect,handler,methods,in,beans,in,ancestor,application,contexts,p,default,is,false,only,beans,in,the,current,application,context,are,considered,i,e,only,in,the,context,that,this,handler,mapping,itself,is,defined,in,typically,the,current,dispatcher,servlet,s,context,p,switch,this,flag,on,to,detect,handler,beans,in,ancestor,contexts,typically,the,spring,root,web,application,context,as,well;public,void,set,detect,handler,methods,in,ancestor,contexts,boolean,detect,handler,methods,in,ancestor,contexts,this,detect,handler,methods,in,ancestor,contexts,detect,handler,methods,in,ancestor,contexts
AbstractHandlerMethodMapping -> public void setDetectHandlerMethodsInAncestorContexts(boolean detectHandlerMethodsInAncestorContexts);1530174524;Whether to detect handler methods in beans in ancestor ApplicationContexts._<p>Default is "false": Only beans in the current ApplicationContext are_considered, i.e. only in the context that this HandlerMapping itself_is defined in (typically the current DispatcherServlet's context)._<p>Switch this flag on to detect handler beans in ancestor contexts_(typically the Spring root WebApplicationContext) as well.;public void setDetectHandlerMethodsInAncestorContexts(boolean detectHandlerMethodsInAncestorContexts) {_		this.detectHandlerMethodsInAncestorContexts = detectHandlerMethodsInAncestorContexts__	};whether,to,detect,handler,methods,in,beans,in,ancestor,application,contexts,p,default,is,false,only,beans,in,the,current,application,context,are,considered,i,e,only,in,the,context,that,this,handler,mapping,itself,is,defined,in,typically,the,current,dispatcher,servlet,s,context,p,switch,this,flag,on,to,detect,handler,beans,in,ancestor,contexts,typically,the,spring,root,web,application,context,as,well;public,void,set,detect,handler,methods,in,ancestor,contexts,boolean,detect,handler,methods,in,ancestor,contexts,this,detect,handler,methods,in,ancestor,contexts,detect,handler,methods,in,ancestor,contexts
AbstractHandlerMethodMapping -> public void setDetectHandlerMethodsInAncestorContexts(boolean detectHandlerMethodsInAncestorContexts);1530174524;Whether to detect handler methods in beans in ancestor ApplicationContexts._<p>Default is "false": Only beans in the current ApplicationContext are_considered, i.e. only in the context that this HandlerMapping itself_is defined in (typically the current DispatcherServlet's context)._<p>Switch this flag on to detect handler beans in ancestor contexts_(typically the Spring root WebApplicationContext) as well.;public void setDetectHandlerMethodsInAncestorContexts(boolean detectHandlerMethodsInAncestorContexts) {_		this.detectHandlerMethodsInAncestorContexts = detectHandlerMethodsInAncestorContexts__	};whether,to,detect,handler,methods,in,beans,in,ancestor,application,contexts,p,default,is,false,only,beans,in,the,current,application,context,are,considered,i,e,only,in,the,context,that,this,handler,mapping,itself,is,defined,in,typically,the,current,dispatcher,servlet,s,context,p,switch,this,flag,on,to,detect,handler,beans,in,ancestor,contexts,typically,the,spring,root,web,application,context,as,well;public,void,set,detect,handler,methods,in,ancestor,contexts,boolean,detect,handler,methods,in,ancestor,contexts,this,detect,handler,methods,in,ancestor,contexts,detect,handler,methods,in,ancestor,contexts
AbstractHandlerMethodMapping -> public void setDetectHandlerMethodsInAncestorContexts(boolean detectHandlerMethodsInAncestorContexts);1533943217;Whether to detect handler methods in beans in ancestor ApplicationContexts._<p>Default is "false": Only beans in the current ApplicationContext are_considered, i.e. only in the context that this HandlerMapping itself_is defined in (typically the current DispatcherServlet's context)._<p>Switch this flag on to detect handler beans in ancestor contexts_(typically the Spring root WebApplicationContext) as well._@see #getCandidateBeanNames();public void setDetectHandlerMethodsInAncestorContexts(boolean detectHandlerMethodsInAncestorContexts) {_		this.detectHandlerMethodsInAncestorContexts = detectHandlerMethodsInAncestorContexts__	};whether,to,detect,handler,methods,in,beans,in,ancestor,application,contexts,p,default,is,false,only,beans,in,the,current,application,context,are,considered,i,e,only,in,the,context,that,this,handler,mapping,itself,is,defined,in,typically,the,current,dispatcher,servlet,s,context,p,switch,this,flag,on,to,detect,handler,beans,in,ancestor,contexts,typically,the,spring,root,web,application,context,as,well,see,get,candidate,bean,names;public,void,set,detect,handler,methods,in,ancestor,contexts,boolean,detect,handler,methods,in,ancestor,contexts,this,detect,handler,methods,in,ancestor,contexts,detect,handler,methods,in,ancestor,contexts
AbstractHandlerMethodMapping -> public void setDetectHandlerMethodsInAncestorContexts(boolean detectHandlerMethodsInAncestorContexts);1542407418;Whether to detect handler methods in beans in ancestor ApplicationContexts._<p>Default is "false": Only beans in the current ApplicationContext are_considered, i.e. only in the context that this HandlerMapping itself_is defined in (typically the current DispatcherServlet's context)._<p>Switch this flag on to detect handler beans in ancestor contexts_(typically the Spring root WebApplicationContext) as well._@see #getCandidateBeanNames();public void setDetectHandlerMethodsInAncestorContexts(boolean detectHandlerMethodsInAncestorContexts) {_		this.detectHandlerMethodsInAncestorContexts = detectHandlerMethodsInAncestorContexts__	};whether,to,detect,handler,methods,in,beans,in,ancestor,application,contexts,p,default,is,false,only,beans,in,the,current,application,context,are,considered,i,e,only,in,the,context,that,this,handler,mapping,itself,is,defined,in,typically,the,current,dispatcher,servlet,s,context,p,switch,this,flag,on,to,detect,handler,beans,in,ancestor,contexts,typically,the,spring,root,web,application,context,as,well,see,get,candidate,bean,names;public,void,set,detect,handler,methods,in,ancestor,contexts,boolean,detect,handler,methods,in,ancestor,contexts,this,detect,handler,methods,in,ancestor,contexts,detect,handler,methods,in,ancestor,contexts
AbstractHandlerMethodMapping -> public void setDetectHandlerMethodsInAncestorContexts(boolean detectHandlerMethodsInAncestorContexts);1542771062;Whether to detect handler methods in beans in ancestor ApplicationContexts._<p>Default is "false": Only beans in the current ApplicationContext are_considered, i.e. only in the context that this HandlerMapping itself_is defined in (typically the current DispatcherServlet's context)._<p>Switch this flag on to detect handler beans in ancestor contexts_(typically the Spring root WebApplicationContext) as well._@see #getCandidateBeanNames();public void setDetectHandlerMethodsInAncestorContexts(boolean detectHandlerMethodsInAncestorContexts) {_		this.detectHandlerMethodsInAncestorContexts = detectHandlerMethodsInAncestorContexts__	};whether,to,detect,handler,methods,in,beans,in,ancestor,application,contexts,p,default,is,false,only,beans,in,the,current,application,context,are,considered,i,e,only,in,the,context,that,this,handler,mapping,itself,is,defined,in,typically,the,current,dispatcher,servlet,s,context,p,switch,this,flag,on,to,detect,handler,beans,in,ancestor,contexts,typically,the,spring,root,web,application,context,as,well,see,get,candidate,bean,names;public,void,set,detect,handler,methods,in,ancestor,contexts,boolean,detect,handler,methods,in,ancestor,contexts,this,detect,handler,methods,in,ancestor,contexts,detect,handler,methods,in,ancestor,contexts
AbstractHandlerMethodMapping -> public void setDetectHandlerMethodsInAncestorContexts(boolean detectHandlerMethodsInAncestorContexts);1548427561;Whether to detect handler methods in beans in ancestor ApplicationContexts._<p>Default is "false": Only beans in the current ApplicationContext are_considered, i.e. only in the context that this HandlerMapping itself_is defined in (typically the current DispatcherServlet's context)._<p>Switch this flag on to detect handler beans in ancestor contexts_(typically the Spring root WebApplicationContext) as well._@see #getCandidateBeanNames();public void setDetectHandlerMethodsInAncestorContexts(boolean detectHandlerMethodsInAncestorContexts) {_		this.detectHandlerMethodsInAncestorContexts = detectHandlerMethodsInAncestorContexts__	};whether,to,detect,handler,methods,in,beans,in,ancestor,application,contexts,p,default,is,false,only,beans,in,the,current,application,context,are,considered,i,e,only,in,the,context,that,this,handler,mapping,itself,is,defined,in,typically,the,current,dispatcher,servlet,s,context,p,switch,this,flag,on,to,detect,handler,beans,in,ancestor,contexts,typically,the,spring,root,web,application,context,as,well,see,get,candidate,bean,names;public,void,set,detect,handler,methods,in,ancestor,contexts,boolean,detect,handler,methods,in,ancestor,contexts,this,detect,handler,methods,in,ancestor,contexts,detect,handler,methods,in,ancestor,contexts
AbstractHandlerMethodMapping -> public void setDetectHandlerMethodsInAncestorContexts(boolean detectHandlerMethodsInAncestorContexts);1551093473;Whether to detect handler methods in beans in ancestor ApplicationContexts._<p>Default is "false": Only beans in the current ApplicationContext are_considered, i.e. only in the context that this HandlerMapping itself_is defined in (typically the current DispatcherServlet's context)._<p>Switch this flag on to detect handler beans in ancestor contexts_(typically the Spring root WebApplicationContext) as well._@see #getCandidateBeanNames();public void setDetectHandlerMethodsInAncestorContexts(boolean detectHandlerMethodsInAncestorContexts) {_		this.detectHandlerMethodsInAncestorContexts = detectHandlerMethodsInAncestorContexts__	};whether,to,detect,handler,methods,in,beans,in,ancestor,application,contexts,p,default,is,false,only,beans,in,the,current,application,context,are,considered,i,e,only,in,the,context,that,this,handler,mapping,itself,is,defined,in,typically,the,current,dispatcher,servlet,s,context,p,switch,this,flag,on,to,detect,handler,beans,in,ancestor,contexts,typically,the,spring,root,web,application,context,as,well,see,get,candidate,bean,names;public,void,set,detect,handler,methods,in,ancestor,contexts,boolean,detect,handler,methods,in,ancestor,contexts,this,detect,handler,methods,in,ancestor,contexts,detect,handler,methods,in,ancestor,contexts
AbstractHandlerMethodMapping -> protected void initHandlerMethods();1328020251;Scan beans in the ApplicationContext, detect and register handler methods._@see #isHandler(Class)_@see #getMappingForMethod(Method, Class)_@see #handlerMethodsInitialized(Map);protected void initHandlerMethods() {_		if (logger.isDebugEnabled()) {_			logger.debug("Looking for request mappings in application context: " + getApplicationContext())__		}_		_		String[] beanNames = (this.detectHandlerMethodsInAncestorContexts ?_				BeanFactoryUtils.beanNamesForTypeIncludingAncestors(getApplicationContext(), Object.class) :_				getApplicationContext().getBeanNamesForType(Object.class))___		for (String beanName : beanNames) {_			if (isHandler(getApplicationContext().getType(beanName))){_				detectHandlerMethods(beanName)__			}_		}_		handlerMethodsInitialized(getHandlerMethods())__	};scan,beans,in,the,application,context,detect,and,register,handler,methods,see,is,handler,class,see,get,mapping,for,method,method,class,see,handler,methods,initialized,map;protected,void,init,handler,methods,if,logger,is,debug,enabled,logger,debug,looking,for,request,mappings,in,application,context,get,application,context,string,bean,names,this,detect,handler,methods,in,ancestor,contexts,bean,factory,utils,bean,names,for,type,including,ancestors,get,application,context,object,class,get,application,context,get,bean,names,for,type,object,class,for,string,bean,name,bean,names,if,is,handler,get,application,context,get,type,bean,name,detect,handler,methods,bean,name,handler,methods,initialized,get,handler,methods
AbstractHandlerMethodMapping -> protected void initHandlerMethods();1328022204;Scan beans in the ApplicationContext, detect and register handler methods._@see #isHandler(Class)_@see #getMappingForMethod(Method, Class)_@see #handlerMethodsInitialized(Map);protected void initHandlerMethods() {_		if (logger.isDebugEnabled()) {_			logger.debug("Looking for request mappings in application context: " + getApplicationContext())__		}_		_		String[] beanNames = (this.detectHandlerMethodsInAncestorContexts ?_				BeanFactoryUtils.beanNamesForTypeIncludingAncestors(getApplicationContext(), Object.class) :_				getApplicationContext().getBeanNamesForType(Object.class))___		for (String beanName : beanNames) {_			if (isHandler(getApplicationContext().getType(beanName))){_				detectHandlerMethods(beanName)__			}_		}_		handlerMethodsInitialized(getHandlerMethods())__	};scan,beans,in,the,application,context,detect,and,register,handler,methods,see,is,handler,class,see,get,mapping,for,method,method,class,see,handler,methods,initialized,map;protected,void,init,handler,methods,if,logger,is,debug,enabled,logger,debug,looking,for,request,mappings,in,application,context,get,application,context,string,bean,names,this,detect,handler,methods,in,ancestor,contexts,bean,factory,utils,bean,names,for,type,including,ancestors,get,application,context,object,class,get,application,context,get,bean,names,for,type,object,class,for,string,bean,name,bean,names,if,is,handler,get,application,context,get,type,bean,name,detect,handler,methods,bean,name,handler,methods,initialized,get,handler,methods
AbstractHandlerMethodMapping -> protected void initHandlerMethods();1336682556;Scan beans in the ApplicationContext, detect and register handler methods._@see #isHandler(Class)_@see #getMappingForMethod(Method, Class)_@see #handlerMethodsInitialized(Map);protected void initHandlerMethods() {_		if (logger.isDebugEnabled()) {_			logger.debug("Looking for request mappings in application context: " + getApplicationContext())__		}__		String[] beanNames = (this.detectHandlerMethodsInAncestorContexts ?_				BeanFactoryUtils.beanNamesForTypeIncludingAncestors(getApplicationContext(), Object.class) :_				getApplicationContext().getBeanNamesForType(Object.class))___		for (String beanName : beanNames) {_			if (isHandler(getApplicationContext().getType(beanName))){_				detectHandlerMethods(beanName)__			}_		}_		handlerMethodsInitialized(getHandlerMethods())__	};scan,beans,in,the,application,context,detect,and,register,handler,methods,see,is,handler,class,see,get,mapping,for,method,method,class,see,handler,methods,initialized,map;protected,void,init,handler,methods,if,logger,is,debug,enabled,logger,debug,looking,for,request,mappings,in,application,context,get,application,context,string,bean,names,this,detect,handler,methods,in,ancestor,contexts,bean,factory,utils,bean,names,for,type,including,ancestors,get,application,context,object,class,get,application,context,get,bean,names,for,type,object,class,for,string,bean,name,bean,names,if,is,handler,get,application,context,get,type,bean,name,detect,handler,methods,bean,name,handler,methods,initialized,get,handler,methods
AbstractHandlerMethodMapping -> protected void initHandlerMethods();1341441111;Scan beans in the ApplicationContext, detect and register handler methods._@see #isHandler(Class)_@see #getMappingForMethod(Method, Class)_@see #handlerMethodsInitialized(Map);protected void initHandlerMethods() {_		if (logger.isDebugEnabled()) {_			logger.debug("Looking for request mappings in application context: " + getApplicationContext())__		}__		String[] beanNames = (this.detectHandlerMethodsInAncestorContexts ?_				BeanFactoryUtils.beanNamesForTypeIncludingAncestors(getApplicationContext(), Object.class) :_				getApplicationContext().getBeanNamesForType(Object.class))___		for (String beanName : beanNames) {_			if (isHandler(getApplicationContext().getType(beanName))){_				detectHandlerMethods(beanName)__			}_		}_		handlerMethodsInitialized(getHandlerMethods())__	};scan,beans,in,the,application,context,detect,and,register,handler,methods,see,is,handler,class,see,get,mapping,for,method,method,class,see,handler,methods,initialized,map;protected,void,init,handler,methods,if,logger,is,debug,enabled,logger,debug,looking,for,request,mappings,in,application,context,get,application,context,string,bean,names,this,detect,handler,methods,in,ancestor,contexts,bean,factory,utils,bean,names,for,type,including,ancestors,get,application,context,object,class,get,application,context,get,bean,names,for,type,object,class,for,string,bean,name,bean,names,if,is,handler,get,application,context,get,type,bean,name,detect,handler,methods,bean,name,handler,methods,initialized,get,handler,methods
AbstractHandlerMethodMapping -> protected void initHandlerMethods();1356735495;Scan beans in the ApplicationContext, detect and register handler methods._@see #isHandler(Class)_@see #getMappingForMethod(Method, Class)_@see #handlerMethodsInitialized(Map);protected void initHandlerMethods() {_		if (logger.isDebugEnabled()) {_			logger.debug("Looking for request mappings in application context: " + getApplicationContext())__		}__		String[] beanNames = (this.detectHandlerMethodsInAncestorContexts ?_				BeanFactoryUtils.beanNamesForTypeIncludingAncestors(getApplicationContext(), Object.class) :_				getApplicationContext().getBeanNamesForType(Object.class))___		for (String beanName : beanNames) {_			if (isHandler(getApplicationContext().getType(beanName))){_				detectHandlerMethods(beanName)__			}_		}_		handlerMethodsInitialized(getHandlerMethods())__	};scan,beans,in,the,application,context,detect,and,register,handler,methods,see,is,handler,class,see,get,mapping,for,method,method,class,see,handler,methods,initialized,map;protected,void,init,handler,methods,if,logger,is,debug,enabled,logger,debug,looking,for,request,mappings,in,application,context,get,application,context,string,bean,names,this,detect,handler,methods,in,ancestor,contexts,bean,factory,utils,bean,names,for,type,including,ancestors,get,application,context,object,class,get,application,context,get,bean,names,for,type,object,class,for,string,bean,name,bean,names,if,is,handler,get,application,context,get,type,bean,name,detect,handler,methods,bean,name,handler,methods,initialized,get,handler,methods
AbstractHandlerMethodMapping -> protected void initHandlerMethods();1357119239;Scan beans in the ApplicationContext, detect and register handler methods._@see #isHandler(Class)_@see #getMappingForMethod(Method, Class)_@see #handlerMethodsInitialized(Map);protected void initHandlerMethods() {_		if (logger.isDebugEnabled()) {_			logger.debug("Looking for request mappings in application context: " + getApplicationContext())__		}__		String[] beanNames = (this.detectHandlerMethodsInAncestorContexts ?_				BeanFactoryUtils.beanNamesForTypeIncludingAncestors(getApplicationContext(), Object.class) :_				getApplicationContext().getBeanNamesForType(Object.class))___		for (String beanName : beanNames) {_			if (isHandler(getApplicationContext().getType(beanName))){_				detectHandlerMethods(beanName)__			}_		}_		handlerMethodsInitialized(getHandlerMethods())__	};scan,beans,in,the,application,context,detect,and,register,handler,methods,see,is,handler,class,see,get,mapping,for,method,method,class,see,handler,methods,initialized,map;protected,void,init,handler,methods,if,logger,is,debug,enabled,logger,debug,looking,for,request,mappings,in,application,context,get,application,context,string,bean,names,this,detect,handler,methods,in,ancestor,contexts,bean,factory,utils,bean,names,for,type,including,ancestors,get,application,context,object,class,get,application,context,get,bean,names,for,type,object,class,for,string,bean,name,bean,names,if,is,handler,get,application,context,get,type,bean,name,detect,handler,methods,bean,name,handler,methods,initialized,get,handler,methods
AbstractHandlerMethodMapping -> protected void initHandlerMethods();1362408075;Scan beans in the ApplicationContext, detect and register handler methods._@see #isHandler(Class)_@see #getMappingForMethod(Method, Class)_@see #handlerMethodsInitialized(Map);protected void initHandlerMethods() {_		if (logger.isDebugEnabled()) {_			logger.debug("Looking for request mappings in application context: " + getApplicationContext())__		}__		String[] beanNames = (this.detectHandlerMethodsInAncestorContexts ?_				BeanFactoryUtils.beanNamesForTypeIncludingAncestors(getApplicationContext(), Object.class) :_				getApplicationContext().getBeanNamesForType(Object.class))___		for (String beanName : beanNames) {_			if (isHandler(getApplicationContext().getType(beanName))){_				detectHandlerMethods(beanName)__			}_		}_		handlerMethodsInitialized(getHandlerMethods())__	};scan,beans,in,the,application,context,detect,and,register,handler,methods,see,is,handler,class,see,get,mapping,for,method,method,class,see,handler,methods,initialized,map;protected,void,init,handler,methods,if,logger,is,debug,enabled,logger,debug,looking,for,request,mappings,in,application,context,get,application,context,string,bean,names,this,detect,handler,methods,in,ancestor,contexts,bean,factory,utils,bean,names,for,type,including,ancestors,get,application,context,object,class,get,application,context,get,bean,names,for,type,object,class,for,string,bean,name,bean,names,if,is,handler,get,application,context,get,type,bean,name,detect,handler,methods,bean,name,handler,methods,initialized,get,handler,methods
AbstractHandlerMethodMapping -> protected void initHandlerMethods();1368482696;Scan beans in the ApplicationContext, detect and register handler methods._@see #isHandler(Class)_@see #getMappingForMethod(Method, Class)_@see #handlerMethodsInitialized(Map);protected void initHandlerMethods() {_		if (logger.isDebugEnabled()) {_			logger.debug("Looking for request mappings in application context: " + getApplicationContext())__		}__		String[] beanNames = (this.detectHandlerMethodsInAncestorContexts ?_				BeanFactoryUtils.beanNamesForTypeIncludingAncestors(getApplicationContext(), Object.class) :_				getApplicationContext().getBeanNamesForType(Object.class))___		for (String beanName : beanNames) {_			if (isHandler(getApplicationContext().getType(beanName))){_				detectHandlerMethods(beanName)__			}_		}_		handlerMethodsInitialized(getHandlerMethods())__	};scan,beans,in,the,application,context,detect,and,register,handler,methods,see,is,handler,class,see,get,mapping,for,method,method,class,see,handler,methods,initialized,map;protected,void,init,handler,methods,if,logger,is,debug,enabled,logger,debug,looking,for,request,mappings,in,application,context,get,application,context,string,bean,names,this,detect,handler,methods,in,ancestor,contexts,bean,factory,utils,bean,names,for,type,including,ancestors,get,application,context,object,class,get,application,context,get,bean,names,for,type,object,class,for,string,bean,name,bean,names,if,is,handler,get,application,context,get,type,bean,name,detect,handler,methods,bean,name,handler,methods,initialized,get,handler,methods
AbstractHandlerMethodMapping -> protected void initHandlerMethods();1368581529;Scan beans in the ApplicationContext, detect and register handler methods._@see #isHandler(Class)_@see #getMappingForMethod(Method, Class)_@see #handlerMethodsInitialized(Map);protected void initHandlerMethods() {_		if (logger.isDebugEnabled()) {_			logger.debug("Looking for request mappings in application context: " + getApplicationContext())__		}__		String[] beanNames = (this.detectHandlerMethodsInAncestorContexts ?_				BeanFactoryUtils.beanNamesForTypeIncludingAncestors(getApplicationContext(), Object.class) :_				getApplicationContext().getBeanNamesForType(Object.class))___		for (String beanName : beanNames) {_			if (isHandler(getApplicationContext().getType(beanName))){_				detectHandlerMethods(beanName)__			}_		}_		handlerMethodsInitialized(getHandlerMethods())__	};scan,beans,in,the,application,context,detect,and,register,handler,methods,see,is,handler,class,see,get,mapping,for,method,method,class,see,handler,methods,initialized,map;protected,void,init,handler,methods,if,logger,is,debug,enabled,logger,debug,looking,for,request,mappings,in,application,context,get,application,context,string,bean,names,this,detect,handler,methods,in,ancestor,contexts,bean,factory,utils,bean,names,for,type,including,ancestors,get,application,context,object,class,get,application,context,get,bean,names,for,type,object,class,for,string,bean,name,bean,names,if,is,handler,get,application,context,get,type,bean,name,detect,handler,methods,bean,name,handler,methods,initialized,get,handler,methods
AbstractHandlerMethodMapping -> protected void initHandlerMethods();1382665849;Scan beans in the ApplicationContext, detect and register handler methods._@see #isHandler(Class)_@see #getMappingForMethod(Method, Class)_@see #handlerMethodsInitialized(Map);protected void initHandlerMethods() {_		if (logger.isDebugEnabled()) {_			logger.debug("Looking for request mappings in application context: " + getApplicationContext())__		}__		String[] beanNames = (this.detectHandlerMethodsInAncestorContexts ?_				BeanFactoryUtils.beanNamesForTypeIncludingAncestors(getApplicationContext(), Object.class) :_				getApplicationContext().getBeanNamesForType(Object.class))___		for (String beanName : beanNames) {_			if (isHandler(getApplicationContext().getType(beanName))){_				detectHandlerMethods(beanName)__			}_		}_		handlerMethodsInitialized(getHandlerMethods())__	};scan,beans,in,the,application,context,detect,and,register,handler,methods,see,is,handler,class,see,get,mapping,for,method,method,class,see,handler,methods,initialized,map;protected,void,init,handler,methods,if,logger,is,debug,enabled,logger,debug,looking,for,request,mappings,in,application,context,get,application,context,string,bean,names,this,detect,handler,methods,in,ancestor,contexts,bean,factory,utils,bean,names,for,type,including,ancestors,get,application,context,object,class,get,application,context,get,bean,names,for,type,object,class,for,string,bean,name,bean,names,if,is,handler,get,application,context,get,type,bean,name,detect,handler,methods,bean,name,handler,methods,initialized,get,handler,methods
AbstractHandlerMethodMapping -> protected void initHandlerMethods();1392160296;Scan beans in the ApplicationContext, detect and register handler methods._@see #isHandler(Class)_@see #getMappingForMethod(Method, Class)_@see #handlerMethodsInitialized(Map);protected void initHandlerMethods() {_		if (logger.isDebugEnabled()) {_			logger.debug("Looking for request mappings in application context: " + getApplicationContext())__		}__		String[] beanNames = (this.detectHandlerMethodsInAncestorContexts ?_				BeanFactoryUtils.beanNamesForTypeIncludingAncestors(getApplicationContext(), Object.class) :_				getApplicationContext().getBeanNamesForType(Object.class))___		for (String beanName : beanNames) {_			Class<?> candidateType = getApplicationContext().getType(beanName)__			if (isHandler(candidateType)){_				detectHandlerMethods(beanName, candidateType)__			}_		}_		handlerMethodsInitialized(getHandlerMethods())__	};scan,beans,in,the,application,context,detect,and,register,handler,methods,see,is,handler,class,see,get,mapping,for,method,method,class,see,handler,methods,initialized,map;protected,void,init,handler,methods,if,logger,is,debug,enabled,logger,debug,looking,for,request,mappings,in,application,context,get,application,context,string,bean,names,this,detect,handler,methods,in,ancestor,contexts,bean,factory,utils,bean,names,for,type,including,ancestors,get,application,context,object,class,get,application,context,get,bean,names,for,type,object,class,for,string,bean,name,bean,names,class,candidate,type,get,application,context,get,type,bean,name,if,is,handler,candidate,type,detect,handler,methods,bean,name,candidate,type,handler,methods,initialized,get,handler,methods
AbstractHandlerMethodMapping -> protected void initHandlerMethods();1392337816;Scan beans in the ApplicationContext, detect and register handler methods._@see #isHandler(Class)_@see #getMappingForMethod(Method, Class)_@see #handlerMethodsInitialized(Map);protected void initHandlerMethods() {_		if (logger.isDebugEnabled()) {_			logger.debug("Looking for request mappings in application context: " + getApplicationContext())__		}__		String[] beanNames = (this.detectHandlerMethodsInAncestorContexts ?_				BeanFactoryUtils.beanNamesForTypeIncludingAncestors(getApplicationContext(), Object.class) :_				getApplicationContext().getBeanNamesForType(Object.class))___		for (String beanName : beanNames) {_			if (isHandler(getApplicationContext().getType(beanName))){_				detectHandlerMethods(beanName)__			}_		}_		handlerMethodsInitialized(getHandlerMethods())__	};scan,beans,in,the,application,context,detect,and,register,handler,methods,see,is,handler,class,see,get,mapping,for,method,method,class,see,handler,methods,initialized,map;protected,void,init,handler,methods,if,logger,is,debug,enabled,logger,debug,looking,for,request,mappings,in,application,context,get,application,context,string,bean,names,this,detect,handler,methods,in,ancestor,contexts,bean,factory,utils,bean,names,for,type,including,ancestors,get,application,context,object,class,get,application,context,get,bean,names,for,type,object,class,for,string,bean,name,bean,names,if,is,handler,get,application,context,get,type,bean,name,detect,handler,methods,bean,name,handler,methods,initialized,get,handler,methods
AbstractHandlerMethodMapping -> protected void initHandlerMethods();1392407320;Scan beans in the ApplicationContext, detect and register handler methods._@see #isHandler(Class)_@see #getMappingForMethod(Method, Class)_@see #handlerMethodsInitialized(Map);protected void initHandlerMethods() {_		if (logger.isDebugEnabled()) {_			logger.debug("Looking for request mappings in application context: " + getApplicationContext())__		}__		String[] beanNames = (this.detectHandlerMethodsInAncestorContexts ?_				BeanFactoryUtils.beanNamesForTypeIncludingAncestors(getApplicationContext(), Object.class) :_				getApplicationContext().getBeanNamesForType(Object.class))___		for (String beanName : beanNames) {_			if (isHandler(getApplicationContext().getType(beanName))){_				detectHandlerMethods(beanName)__			}_		}_		handlerMethodsInitialized(getHandlerMethods())__	};scan,beans,in,the,application,context,detect,and,register,handler,methods,see,is,handler,class,see,get,mapping,for,method,method,class,see,handler,methods,initialized,map;protected,void,init,handler,methods,if,logger,is,debug,enabled,logger,debug,looking,for,request,mappings,in,application,context,get,application,context,string,bean,names,this,detect,handler,methods,in,ancestor,contexts,bean,factory,utils,bean,names,for,type,including,ancestors,get,application,context,object,class,get,application,context,get,bean,names,for,type,object,class,for,string,bean,name,bean,names,if,is,handler,get,application,context,get,type,bean,name,detect,handler,methods,bean,name,handler,methods,initialized,get,handler,methods
AbstractHandlerMethodMapping -> protected void initHandlerMethods();1395655323;Scan beans in the ApplicationContext, detect and register handler methods._@see #isHandler(Class)_@see #getMappingForMethod(Method, Class)_@see #handlerMethodsInitialized(Map);protected void initHandlerMethods() {_		if (logger.isDebugEnabled()) {_			logger.debug("Looking for request mappings in application context: " + getApplicationContext())__		}__		String[] beanNames = (this.detectHandlerMethodsInAncestorContexts ?_				BeanFactoryUtils.beanNamesForTypeIncludingAncestors(getApplicationContext(), Object.class) :_				getApplicationContext().getBeanNamesForType(Object.class))___		for (String beanName : beanNames) {_			if (!beanName.startsWith(SCOPED_TARGET_NAME_PREFIX) &&_					isHandler(getApplicationContext().getType(beanName))){_				detectHandlerMethods(beanName)__			}_		}_		handlerMethodsInitialized(getHandlerMethods())__	};scan,beans,in,the,application,context,detect,and,register,handler,methods,see,is,handler,class,see,get,mapping,for,method,method,class,see,handler,methods,initialized,map;protected,void,init,handler,methods,if,logger,is,debug,enabled,logger,debug,looking,for,request,mappings,in,application,context,get,application,context,string,bean,names,this,detect,handler,methods,in,ancestor,contexts,bean,factory,utils,bean,names,for,type,including,ancestors,get,application,context,object,class,get,application,context,get,bean,names,for,type,object,class,for,string,bean,name,bean,names,if,bean,name,starts,with,is,handler,get,application,context,get,type,bean,name,detect,handler,methods,bean,name,handler,methods,initialized,get,handler,methods
AbstractHandlerMethodMapping -> protected void initHandlerMethods();1399404473;Scan beans in the ApplicationContext, detect and register handler methods._@see #isHandler(Class)_@see #getMappingForMethod(Method, Class)_@see #handlerMethodsInitialized(Map);protected void initHandlerMethods() {_		if (logger.isDebugEnabled()) {_			logger.debug("Looking for request mappings in application context: " + getApplicationContext())__		}__		String[] beanNames = (this.detectHandlerMethodsInAncestorContexts ?_				BeanFactoryUtils.beanNamesForTypeIncludingAncestors(getApplicationContext(), Object.class) :_				getApplicationContext().getBeanNamesForType(Object.class))___		for (String beanName : beanNames) {_			if (!beanName.startsWith(SCOPED_TARGET_NAME_PREFIX) &&_					isHandler(getApplicationContext().getType(beanName))){_				detectHandlerMethods(beanName)__			}_		}_		handlerMethodsInitialized(getHandlerMethods())__	};scan,beans,in,the,application,context,detect,and,register,handler,methods,see,is,handler,class,see,get,mapping,for,method,method,class,see,handler,methods,initialized,map;protected,void,init,handler,methods,if,logger,is,debug,enabled,logger,debug,looking,for,request,mappings,in,application,context,get,application,context,string,bean,names,this,detect,handler,methods,in,ancestor,contexts,bean,factory,utils,bean,names,for,type,including,ancestors,get,application,context,object,class,get,application,context,get,bean,names,for,type,object,class,for,string,bean,name,bean,names,if,bean,name,starts,with,is,handler,get,application,context,get,type,bean,name,detect,handler,methods,bean,name,handler,methods,initialized,get,handler,methods
AbstractHandlerMethodMapping -> protected void initHandlerMethods();1426869344;Scan beans in the ApplicationContext, detect and register handler methods._@see #isHandler(Class)_@see #getMappingForMethod(Method, Class)_@see #handlerMethodsInitialized(Map);protected void initHandlerMethods() {_		if (logger.isDebugEnabled()) {_			logger.debug("Looking for request mappings in application context: " + getApplicationContext())__		}__		String[] beanNames = (this.detectHandlerMethodsInAncestorContexts ?_				BeanFactoryUtils.beanNamesForTypeIncludingAncestors(getApplicationContext(), Object.class) :_				getApplicationContext().getBeanNamesForType(Object.class))___		for (String beanName : beanNames) {_			if (!beanName.startsWith(SCOPED_TARGET_NAME_PREFIX) &&_					isHandler(getApplicationContext().getType(beanName))){_				detectHandlerMethods(beanName)__			}_		}_		handlerMethodsInitialized(getHandlerMethods())__	};scan,beans,in,the,application,context,detect,and,register,handler,methods,see,is,handler,class,see,get,mapping,for,method,method,class,see,handler,methods,initialized,map;protected,void,init,handler,methods,if,logger,is,debug,enabled,logger,debug,looking,for,request,mappings,in,application,context,get,application,context,string,bean,names,this,detect,handler,methods,in,ancestor,contexts,bean,factory,utils,bean,names,for,type,including,ancestors,get,application,context,object,class,get,application,context,get,bean,names,for,type,object,class,for,string,bean,name,bean,names,if,bean,name,starts,with,is,handler,get,application,context,get,type,bean,name,detect,handler,methods,bean,name,handler,methods,initialized,get,handler,methods
AbstractHandlerMethodMapping -> protected void initHandlerMethods();1427240641;Scan beans in the ApplicationContext, detect and register handler methods._@see #isHandler(Class)_@see #getMappingForMethod(Method, Class)_@see #handlerMethodsInitialized(Map);protected void initHandlerMethods() {_		if (logger.isDebugEnabled()) {_			logger.debug("Looking for request mappings in application context: " + getApplicationContext())__		}__		String[] beanNames = (this.detectHandlerMethodsInAncestorContexts ?_				BeanFactoryUtils.beanNamesForTypeIncludingAncestors(getApplicationContext(), Object.class) :_				getApplicationContext().getBeanNamesForType(Object.class))___		for (String beanName : beanNames) {_			if (!beanName.startsWith(SCOPED_TARGET_NAME_PREFIX) &&_					isHandler(getApplicationContext().getType(beanName))){_				detectHandlerMethods(beanName)__			}_		}_		handlerMethodsInitialized(getHandlerMethods())__	};scan,beans,in,the,application,context,detect,and,register,handler,methods,see,is,handler,class,see,get,mapping,for,method,method,class,see,handler,methods,initialized,map;protected,void,init,handler,methods,if,logger,is,debug,enabled,logger,debug,looking,for,request,mappings,in,application,context,get,application,context,string,bean,names,this,detect,handler,methods,in,ancestor,contexts,bean,factory,utils,bean,names,for,type,including,ancestors,get,application,context,object,class,get,application,context,get,bean,names,for,type,object,class,for,string,bean,name,bean,names,if,bean,name,starts,with,is,handler,get,application,context,get,type,bean,name,detect,handler,methods,bean,name,handler,methods,initialized,get,handler,methods
AbstractHandlerMethodMapping -> protected void initHandlerMethods();1427983931;Scan beans in the ApplicationContext, detect and register handler methods._@see #isHandler(Class)_@see #getMappingForMethod(Method, Class)_@see #handlerMethodsInitialized(Map);protected void initHandlerMethods() {_		if (logger.isDebugEnabled()) {_			logger.debug("Looking for request mappings in application context: " + getApplicationContext())__		}__		String[] beanNames = (this.detectHandlerMethodsInAncestorContexts ?_				BeanFactoryUtils.beanNamesForTypeIncludingAncestors(getApplicationContext(), Object.class) :_				getApplicationContext().getBeanNamesForType(Object.class))___		for (String beanName : beanNames) {_			if (!beanName.startsWith(SCOPED_TARGET_NAME_PREFIX) &&_					isHandler(getApplicationContext().getType(beanName))){_				detectHandlerMethods(beanName)__			}_		}_		registerMultiMatchCorsConfiguration()__		handlerMethodsInitialized(getHandlerMethods())__	};scan,beans,in,the,application,context,detect,and,register,handler,methods,see,is,handler,class,see,get,mapping,for,method,method,class,see,handler,methods,initialized,map;protected,void,init,handler,methods,if,logger,is,debug,enabled,logger,debug,looking,for,request,mappings,in,application,context,get,application,context,string,bean,names,this,detect,handler,methods,in,ancestor,contexts,bean,factory,utils,bean,names,for,type,including,ancestors,get,application,context,object,class,get,application,context,get,bean,names,for,type,object,class,for,string,bean,name,bean,names,if,bean,name,starts,with,is,handler,get,application,context,get,type,bean,name,detect,handler,methods,bean,name,register,multi,match,cors,configuration,handler,methods,initialized,get,handler,methods
AbstractHandlerMethodMapping -> protected void initHandlerMethods();1430734105;Scan beans in the ApplicationContext, detect and register handler methods._@see #isHandler(Class)_@see #getMappingForMethod(Method, Class)_@see #handlerMethodsInitialized(Map);protected void initHandlerMethods() {_		if (logger.isDebugEnabled()) {_			logger.debug("Looking for request mappings in application context: " + getApplicationContext())__		}__		String[] beanNames = (this.detectHandlerMethodsInAncestorContexts ?_				BeanFactoryUtils.beanNamesForTypeIncludingAncestors(getApplicationContext(), Object.class) :_				getApplicationContext().getBeanNamesForType(Object.class))___		for (String name : beanNames) {_			if (!name.startsWith(SCOPED_TARGET_NAME_PREFIX) && isHandler(getApplicationContext().getType(name))) {_				detectHandlerMethods(name)__			}_		}_		registerMultiMatchCorsConfiguration()__		handlerMethodsInitialized(getHandlerMethods())__	};scan,beans,in,the,application,context,detect,and,register,handler,methods,see,is,handler,class,see,get,mapping,for,method,method,class,see,handler,methods,initialized,map;protected,void,init,handler,methods,if,logger,is,debug,enabled,logger,debug,looking,for,request,mappings,in,application,context,get,application,context,string,bean,names,this,detect,handler,methods,in,ancestor,contexts,bean,factory,utils,bean,names,for,type,including,ancestors,get,application,context,object,class,get,application,context,get,bean,names,for,type,object,class,for,string,name,bean,names,if,name,starts,with,is,handler,get,application,context,get,type,name,detect,handler,methods,name,register,multi,match,cors,configuration,handler,methods,initialized,get,handler,methods
AbstractHandlerMethodMapping -> protected void initHandlerMethods();1430734105;Scan beans in the ApplicationContext, detect and register handler methods._@see #isHandler(Class)_@see #getMappingForMethod(Method, Class)_@see #handlerMethodsInitialized(Map);protected void initHandlerMethods() {_		if (logger.isDebugEnabled()) {_			logger.debug("Looking for request mappings in application context: " + getApplicationContext())__		}_		String[] beanNames = (this.detectHandlerMethodsInAncestorContexts ?_				BeanFactoryUtils.beanNamesForTypeIncludingAncestors(getApplicationContext(), Object.class) :_				getApplicationContext().getBeanNamesForType(Object.class))___		for (String name : beanNames) {_			if (!name.startsWith(SCOPED_TARGET_NAME_PREFIX) && isHandler(getApplicationContext().getType(name))) {_				detectHandlerMethods(name)__			}_		}_		handlerMethodsInitialized(getHandlerMethods())__	};scan,beans,in,the,application,context,detect,and,register,handler,methods,see,is,handler,class,see,get,mapping,for,method,method,class,see,handler,methods,initialized,map;protected,void,init,handler,methods,if,logger,is,debug,enabled,logger,debug,looking,for,request,mappings,in,application,context,get,application,context,string,bean,names,this,detect,handler,methods,in,ancestor,contexts,bean,factory,utils,bean,names,for,type,including,ancestors,get,application,context,object,class,get,application,context,get,bean,names,for,type,object,class,for,string,name,bean,names,if,name,starts,with,is,handler,get,application,context,get,type,name,detect,handler,methods,name,handler,methods,initialized,get,handler,methods
AbstractHandlerMethodMapping -> protected void initHandlerMethods();1430734106;Scan beans in the ApplicationContext, detect and register handler methods._@see #isHandler(Class)_@see #getMappingForMethod(Method, Class)_@see #handlerMethodsInitialized(Map);protected void initHandlerMethods() {_		if (logger.isDebugEnabled()) {_			logger.debug("Looking for request mappings in application context: " + getApplicationContext())__		}_		String[] beanNames = (this.detectHandlerMethodsInAncestorContexts ?_				BeanFactoryUtils.beanNamesForTypeIncludingAncestors(getApplicationContext(), Object.class) :_				getApplicationContext().getBeanNamesForType(Object.class))___		for (String name : beanNames) {_			if (!name.startsWith(SCOPED_TARGET_NAME_PREFIX) && isHandler(getApplicationContext().getType(name))) {_				detectHandlerMethods(name)__			}_		}_		handlerMethodsInitialized(getHandlerMethods())__	};scan,beans,in,the,application,context,detect,and,register,handler,methods,see,is,handler,class,see,get,mapping,for,method,method,class,see,handler,methods,initialized,map;protected,void,init,handler,methods,if,logger,is,debug,enabled,logger,debug,looking,for,request,mappings,in,application,context,get,application,context,string,bean,names,this,detect,handler,methods,in,ancestor,contexts,bean,factory,utils,bean,names,for,type,including,ancestors,get,application,context,object,class,get,application,context,get,bean,names,for,type,object,class,for,string,name,bean,names,if,name,starts,with,is,handler,get,application,context,get,type,name,detect,handler,methods,name,handler,methods,initialized,get,handler,methods
AbstractHandlerMethodMapping -> protected void initHandlerMethods();1430774689;Scan beans in the ApplicationContext, detect and register handler methods._@see #isHandler(Class)_@see #getMappingForMethod(Method, Class)_@see #handlerMethodsInitialized(Map);protected void initHandlerMethods() {_		if (logger.isDebugEnabled()) {_			logger.debug("Looking for request mappings in application context: " + getApplicationContext())__		}_		String[] beanNames = (this.detectHandlerMethodsInAncestorContexts ?_				BeanFactoryUtils.beanNamesForTypeIncludingAncestors(getApplicationContext(), Object.class) :_				getApplicationContext().getBeanNamesForType(Object.class))___		for (String name : beanNames) {_			if (!name.startsWith(SCOPED_TARGET_NAME_PREFIX) && isHandler(getApplicationContext().getType(name))) {_				detectHandlerMethods(name)__			}_		}_		handlerMethodsInitialized(getHandlerMethods())__	};scan,beans,in,the,application,context,detect,and,register,handler,methods,see,is,handler,class,see,get,mapping,for,method,method,class,see,handler,methods,initialized,map;protected,void,init,handler,methods,if,logger,is,debug,enabled,logger,debug,looking,for,request,mappings,in,application,context,get,application,context,string,bean,names,this,detect,handler,methods,in,ancestor,contexts,bean,factory,utils,bean,names,for,type,including,ancestors,get,application,context,object,class,get,application,context,get,bean,names,for,type,object,class,for,string,name,bean,names,if,name,starts,with,is,handler,get,application,context,get,type,name,detect,handler,methods,name,handler,methods,initialized,get,handler,methods
AbstractHandlerMethodMapping -> protected void initHandlerMethods();1430844966;Scan beans in the ApplicationContext, detect and register handler methods._@see #isHandler(Class)_@see #getMappingForMethod(Method, Class)_@see #handlerMethodsInitialized(Map);protected void initHandlerMethods() {_		if (logger.isDebugEnabled()) {_			logger.debug("Looking for request mappings in application context: " + getApplicationContext())__		}_		String[] beanNames = (this.detectHandlerMethodsInAncestorContexts ?_				BeanFactoryUtils.beanNamesForTypeIncludingAncestors(getApplicationContext(), Object.class) :_				getApplicationContext().getBeanNamesForType(Object.class))___		for (String name : beanNames) {_			if (!name.startsWith(SCOPED_TARGET_NAME_PREFIX) && isHandler(getApplicationContext().getType(name))) {_				detectHandlerMethods(name)__			}_		}_		handlerMethodsInitialized(getHandlerMethods())__	};scan,beans,in,the,application,context,detect,and,register,handler,methods,see,is,handler,class,see,get,mapping,for,method,method,class,see,handler,methods,initialized,map;protected,void,init,handler,methods,if,logger,is,debug,enabled,logger,debug,looking,for,request,mappings,in,application,context,get,application,context,string,bean,names,this,detect,handler,methods,in,ancestor,contexts,bean,factory,utils,bean,names,for,type,including,ancestors,get,application,context,object,class,get,application,context,get,bean,names,for,type,object,class,for,string,name,bean,names,if,name,starts,with,is,handler,get,application,context,get,type,name,detect,handler,methods,name,handler,methods,initialized,get,handler,methods
AbstractHandlerMethodMapping -> protected void initHandlerMethods();1430844967;Scan beans in the ApplicationContext, detect and register handler methods._@see #isHandler(Class)_@see #getMappingForMethod(Method, Class)_@see #handlerMethodsInitialized(Map);protected void initHandlerMethods() {_		if (logger.isDebugEnabled()) {_			logger.debug("Looking for request mappings in application context: " + getApplicationContext())__		}_		String[] beanNames = (this.detectHandlerMethodsInAncestorContexts ?_				BeanFactoryUtils.beanNamesForTypeIncludingAncestors(getApplicationContext(), Object.class) :_				getApplicationContext().getBeanNamesForType(Object.class))___		for (String name : beanNames) {_			if (!name.startsWith(SCOPED_TARGET_NAME_PREFIX) && isHandler(getApplicationContext().getType(name))) {_				detectHandlerMethods(name)__			}_		}_		handlerMethodsInitialized(getHandlerMethods())__	};scan,beans,in,the,application,context,detect,and,register,handler,methods,see,is,handler,class,see,get,mapping,for,method,method,class,see,handler,methods,initialized,map;protected,void,init,handler,methods,if,logger,is,debug,enabled,logger,debug,looking,for,request,mappings,in,application,context,get,application,context,string,bean,names,this,detect,handler,methods,in,ancestor,contexts,bean,factory,utils,bean,names,for,type,including,ancestors,get,application,context,object,class,get,application,context,get,bean,names,for,type,object,class,for,string,name,bean,names,if,name,starts,with,is,handler,get,application,context,get,type,name,detect,handler,methods,name,handler,methods,initialized,get,handler,methods
AbstractHandlerMethodMapping -> protected void initHandlerMethods();1431730371;Scan beans in the ApplicationContext, detect and register handler methods._@see #isHandler(Class)_@see #getMappingForMethod(Method, Class)_@see #handlerMethodsInitialized(Map);protected void initHandlerMethods() {_		if (logger.isDebugEnabled()) {_			logger.debug("Looking for request mappings in application context: " + getApplicationContext())__		}_		String[] beanNames = (this.detectHandlerMethodsInAncestorContexts ?_				BeanFactoryUtils.beanNamesForTypeIncludingAncestors(getApplicationContext(), Object.class) :_				getApplicationContext().getBeanNamesForType(Object.class))___		for (String name : beanNames) {_			if (!name.startsWith(SCOPED_TARGET_NAME_PREFIX) && isHandler(getApplicationContext().getType(name))) {_				detectHandlerMethods(name)__			}_		}_		handlerMethodsInitialized(getHandlerMethods())__	};scan,beans,in,the,application,context,detect,and,register,handler,methods,see,is,handler,class,see,get,mapping,for,method,method,class,see,handler,methods,initialized,map;protected,void,init,handler,methods,if,logger,is,debug,enabled,logger,debug,looking,for,request,mappings,in,application,context,get,application,context,string,bean,names,this,detect,handler,methods,in,ancestor,contexts,bean,factory,utils,bean,names,for,type,including,ancestors,get,application,context,object,class,get,application,context,get,bean,names,for,type,object,class,for,string,name,bean,names,if,name,starts,with,is,handler,get,application,context,get,type,name,detect,handler,methods,name,handler,methods,initialized,get,handler,methods
AbstractHandlerMethodMapping -> protected void initHandlerMethods();1439294371;Scan beans in the ApplicationContext, detect and register handler methods._@see #isHandler(Class)_@see #getMappingForMethod(Method, Class)_@see #handlerMethodsInitialized(Map);protected void initHandlerMethods() {_		if (logger.isDebugEnabled()) {_			logger.debug("Looking for request mappings in application context: " + getApplicationContext())__		}_		String[] beanNames = (this.detectHandlerMethodsInAncestorContexts ?_				BeanFactoryUtils.beanNamesForTypeIncludingAncestors(getApplicationContext(), Object.class) :_				getApplicationContext().getBeanNamesForType(Object.class))___		for (String name : beanNames) {_			if (!name.startsWith(SCOPED_TARGET_NAME_PREFIX) && isHandler(getApplicationContext().getType(name))) {_				detectHandlerMethods(name)__			}_		}_		handlerMethodsInitialized(getHandlerMethods())__	};scan,beans,in,the,application,context,detect,and,register,handler,methods,see,is,handler,class,see,get,mapping,for,method,method,class,see,handler,methods,initialized,map;protected,void,init,handler,methods,if,logger,is,debug,enabled,logger,debug,looking,for,request,mappings,in,application,context,get,application,context,string,bean,names,this,detect,handler,methods,in,ancestor,contexts,bean,factory,utils,bean,names,for,type,including,ancestors,get,application,context,object,class,get,application,context,get,bean,names,for,type,object,class,for,string,name,bean,names,if,name,starts,with,is,handler,get,application,context,get,type,name,detect,handler,methods,name,handler,methods,initialized,get,handler,methods
AbstractHandlerMethodMapping -> protected void initHandlerMethods();1447077465;Scan beans in the ApplicationContext, detect and register handler methods._@see #isHandler(Class)_@see #getMappingForMethod(Method, Class)_@see #handlerMethodsInitialized(Map);protected void initHandlerMethods() {_		if (logger.isDebugEnabled()) {_			logger.debug("Looking for request mappings in application context: " + getApplicationContext())__		}_		String[] beanNames = (this.detectHandlerMethodsInAncestorContexts ?_				BeanFactoryUtils.beanNamesForTypeIncludingAncestors(getApplicationContext(), Object.class) :_				getApplicationContext().getBeanNamesForType(Object.class))___		for (String name : beanNames) {_			if (!name.startsWith(SCOPED_TARGET_NAME_PREFIX) && isHandler(getApplicationContext().getType(name))) {_				detectHandlerMethods(name)__			}_		}_		handlerMethodsInitialized(getHandlerMethods())__	};scan,beans,in,the,application,context,detect,and,register,handler,methods,see,is,handler,class,see,get,mapping,for,method,method,class,see,handler,methods,initialized,map;protected,void,init,handler,methods,if,logger,is,debug,enabled,logger,debug,looking,for,request,mappings,in,application,context,get,application,context,string,bean,names,this,detect,handler,methods,in,ancestor,contexts,bean,factory,utils,bean,names,for,type,including,ancestors,get,application,context,object,class,get,application,context,get,bean,names,for,type,object,class,for,string,name,bean,names,if,name,starts,with,is,handler,get,application,context,get,type,name,detect,handler,methods,name,handler,methods,initialized,get,handler,methods
AbstractHandlerMethodMapping -> protected void initHandlerMethods();1448483163;Scan beans in the ApplicationContext, detect and register handler methods._@see #isHandler(Class)_@see #getMappingForMethod(Method, Class)_@see #handlerMethodsInitialized(Map);protected void initHandlerMethods() {_		if (logger.isDebugEnabled()) {_			logger.debug("Looking for request mappings in application context: " + getApplicationContext())__		}_		String[] beanNames = (this.detectHandlerMethodsInAncestorContexts ?_				BeanFactoryUtils.beanNamesForTypeIncludingAncestors(getApplicationContext(), Object.class) :_				getApplicationContext().getBeanNamesForType(Object.class))___		for (String beanName : beanNames) {_			if (!beanName.startsWith(SCOPED_TARGET_NAME_PREFIX)) {_				Class<?> beanType = null__				try {_					beanType = getApplicationContext().getType(beanName)__				}_				catch (Throwable ex) {_					_					if (logger.isDebugEnabled()) {_						logger.debug("Could not resolve target class for bean with name '" + beanName + "'", ex)__					}_				}_				if (beanType != null && isHandler(beanType)) {_					detectHandlerMethods(beanName)__				}_			}_		}_		handlerMethodsInitialized(getHandlerMethods())__	};scan,beans,in,the,application,context,detect,and,register,handler,methods,see,is,handler,class,see,get,mapping,for,method,method,class,see,handler,methods,initialized,map;protected,void,init,handler,methods,if,logger,is,debug,enabled,logger,debug,looking,for,request,mappings,in,application,context,get,application,context,string,bean,names,this,detect,handler,methods,in,ancestor,contexts,bean,factory,utils,bean,names,for,type,including,ancestors,get,application,context,object,class,get,application,context,get,bean,names,for,type,object,class,for,string,bean,name,bean,names,if,bean,name,starts,with,class,bean,type,null,try,bean,type,get,application,context,get,type,bean,name,catch,throwable,ex,if,logger,is,debug,enabled,logger,debug,could,not,resolve,target,class,for,bean,with,name,bean,name,ex,if,bean,type,null,is,handler,bean,type,detect,handler,methods,bean,name,handler,methods,initialized,get,handler,methods
AbstractHandlerMethodMapping -> protected void initHandlerMethods();1452685925;Scan beans in the ApplicationContext, detect and register handler methods._@see #isHandler(Class)_@see #getMappingForMethod(Method, Class)_@see #handlerMethodsInitialized(Map);protected void initHandlerMethods() {_		if (logger.isDebugEnabled()) {_			logger.debug("Looking for request mappings in application context: " + getApplicationContext())__		}_		String[] beanNames = (this.detectHandlerMethodsInAncestorContexts ?_				BeanFactoryUtils.beanNamesForTypeIncludingAncestors(getApplicationContext(), Object.class) :_				getApplicationContext().getBeanNamesForType(Object.class))___		for (String beanName : beanNames) {_			if (!beanName.startsWith(SCOPED_TARGET_NAME_PREFIX)) {_				Class<?> beanType = null__				try {_					beanType = getApplicationContext().getType(beanName)__				}_				catch (Throwable ex) {_					_					if (logger.isDebugEnabled()) {_						logger.debug("Could not resolve target class for bean with name '" + beanName + "'", ex)__					}_				}_				if (beanType != null && isHandler(beanType)) {_					detectHandlerMethods(beanName)__				}_			}_		}_		handlerMethodsInitialized(getHandlerMethods())__	};scan,beans,in,the,application,context,detect,and,register,handler,methods,see,is,handler,class,see,get,mapping,for,method,method,class,see,handler,methods,initialized,map;protected,void,init,handler,methods,if,logger,is,debug,enabled,logger,debug,looking,for,request,mappings,in,application,context,get,application,context,string,bean,names,this,detect,handler,methods,in,ancestor,contexts,bean,factory,utils,bean,names,for,type,including,ancestors,get,application,context,object,class,get,application,context,get,bean,names,for,type,object,class,for,string,bean,name,bean,names,if,bean,name,starts,with,class,bean,type,null,try,bean,type,get,application,context,get,type,bean,name,catch,throwable,ex,if,logger,is,debug,enabled,logger,debug,could,not,resolve,target,class,for,bean,with,name,bean,name,ex,if,bean,type,null,is,handler,bean,type,detect,handler,methods,bean,name,handler,methods,initialized,get,handler,methods
AbstractHandlerMethodMapping -> protected void initHandlerMethods();1452873718;Scan beans in the ApplicationContext, detect and register handler methods._@see #isHandler(Class)_@see #getMappingForMethod(Method, Class)_@see #handlerMethodsInitialized(Map);protected void initHandlerMethods() {_		if (logger.isDebugEnabled()) {_			logger.debug("Looking for request mappings in application context: " + getApplicationContext())__		}_		String[] beanNames = (this.detectHandlerMethodsInAncestorContexts ?_				BeanFactoryUtils.beanNamesForTypeIncludingAncestors(getApplicationContext(), Object.class) :_				getApplicationContext().getBeanNamesForType(Object.class))___		for (String beanName : beanNames) {_			if (!beanName.startsWith(SCOPED_TARGET_NAME_PREFIX)) {_				Class<?> beanType = null__				try {_					beanType = getApplicationContext().getType(beanName)__				}_				catch (Throwable ex) {_					_					if (logger.isDebugEnabled()) {_						logger.debug("Could not resolve target class for bean with name '" + beanName + "'", ex)__					}_				}_				if (beanType != null && isHandler(beanType)) {_					detectHandlerMethods(beanName)__				}_			}_		}_		handlerMethodsInitialized(getHandlerMethods())__	};scan,beans,in,the,application,context,detect,and,register,handler,methods,see,is,handler,class,see,get,mapping,for,method,method,class,see,handler,methods,initialized,map;protected,void,init,handler,methods,if,logger,is,debug,enabled,logger,debug,looking,for,request,mappings,in,application,context,get,application,context,string,bean,names,this,detect,handler,methods,in,ancestor,contexts,bean,factory,utils,bean,names,for,type,including,ancestors,get,application,context,object,class,get,application,context,get,bean,names,for,type,object,class,for,string,bean,name,bean,names,if,bean,name,starts,with,class,bean,type,null,try,bean,type,get,application,context,get,type,bean,name,catch,throwable,ex,if,logger,is,debug,enabled,logger,debug,could,not,resolve,target,class,for,bean,with,name,bean,name,ex,if,bean,type,null,is,handler,bean,type,detect,handler,methods,bean,name,handler,methods,initialized,get,handler,methods
AbstractHandlerMethodMapping -> protected void initHandlerMethods();1453843788;Scan beans in the ApplicationContext, detect and register handler methods._@see #isHandler(Class)_@see #getMappingForMethod(Method, Class)_@see #handlerMethodsInitialized(Map);protected void initHandlerMethods() {_		if (logger.isDebugEnabled()) {_			logger.debug("Looking for request mappings in application context: " + getApplicationContext())__		}_		String[] beanNames = (this.detectHandlerMethodsInAncestorContexts ?_				BeanFactoryUtils.beanNamesForTypeIncludingAncestors(getApplicationContext(), Object.class) :_				getApplicationContext().getBeanNamesForType(Object.class))___		for (String beanName : beanNames) {_			if (!beanName.startsWith(SCOPED_TARGET_NAME_PREFIX)) {_				Class<?> beanType = null__				try {_					beanType = getApplicationContext().getType(beanName)__				}_				catch (Throwable ex) {_					_					if (logger.isDebugEnabled()) {_						logger.debug("Could not resolve target class for bean with name '" + beanName + "'", ex)__					}_				}_				if (beanType != null && isHandler(beanType)) {_					detectHandlerMethods(beanName)__				}_			}_		}_		handlerMethodsInitialized(getHandlerMethods())__	};scan,beans,in,the,application,context,detect,and,register,handler,methods,see,is,handler,class,see,get,mapping,for,method,method,class,see,handler,methods,initialized,map;protected,void,init,handler,methods,if,logger,is,debug,enabled,logger,debug,looking,for,request,mappings,in,application,context,get,application,context,string,bean,names,this,detect,handler,methods,in,ancestor,contexts,bean,factory,utils,bean,names,for,type,including,ancestors,get,application,context,object,class,get,application,context,get,bean,names,for,type,object,class,for,string,bean,name,bean,names,if,bean,name,starts,with,class,bean,type,null,try,bean,type,get,application,context,get,type,bean,name,catch,throwable,ex,if,logger,is,debug,enabled,logger,debug,could,not,resolve,target,class,for,bean,with,name,bean,name,ex,if,bean,type,null,is,handler,bean,type,detect,handler,methods,bean,name,handler,methods,initialized,get,handler,methods
AbstractHandlerMethodMapping -> protected void initHandlerMethods();1467730834;Scan beans in the ApplicationContext, detect and register handler methods._@see #isHandler(Class)_@see #getMappingForMethod(Method, Class)_@see #handlerMethodsInitialized(Map);protected void initHandlerMethods() {_		if (logger.isDebugEnabled()) {_			logger.debug("Looking for request mappings in application context: " + getApplicationContext())__		}_		String[] beanNames = (this.detectHandlerMethodsInAncestorContexts ?_				BeanFactoryUtils.beanNamesForTypeIncludingAncestors(getApplicationContext(), Object.class) :_				getApplicationContext().getBeanNamesForType(Object.class))___		for (String beanName : beanNames) {_			if (!beanName.startsWith(SCOPED_TARGET_NAME_PREFIX)) {_				Class<?> beanType = null__				try {_					beanType = getApplicationContext().getType(beanName)__				}_				catch (Throwable ex) {_					_					if (logger.isDebugEnabled()) {_						logger.debug("Could not resolve target class for bean with name '" + beanName + "'", ex)__					}_				}_				if (beanType != null && isHandler(beanType)) {_					detectHandlerMethods(beanName)__				}_			}_		}_		handlerMethodsInitialized(getHandlerMethods())__	};scan,beans,in,the,application,context,detect,and,register,handler,methods,see,is,handler,class,see,get,mapping,for,method,method,class,see,handler,methods,initialized,map;protected,void,init,handler,methods,if,logger,is,debug,enabled,logger,debug,looking,for,request,mappings,in,application,context,get,application,context,string,bean,names,this,detect,handler,methods,in,ancestor,contexts,bean,factory,utils,bean,names,for,type,including,ancestors,get,application,context,object,class,get,application,context,get,bean,names,for,type,object,class,for,string,bean,name,bean,names,if,bean,name,starts,with,class,bean,type,null,try,bean,type,get,application,context,get,type,bean,name,catch,throwable,ex,if,logger,is,debug,enabled,logger,debug,could,not,resolve,target,class,for,bean,with,name,bean,name,ex,if,bean,type,null,is,handler,bean,type,detect,handler,methods,bean,name,handler,methods,initialized,get,handler,methods
AbstractHandlerMethodMapping -> protected void initHandlerMethods();1468417354;Scan beans in the ApplicationContext, detect and register handler methods._@see #isHandler(Class)_@see #getMappingForMethod(Method, Class)_@see #handlerMethodsInitialized(Map);protected void initHandlerMethods() {_		if (logger.isDebugEnabled()) {_			logger.debug("Looking for request mappings in application context: " + getApplicationContext())__		}_		String[] beanNames = (this.detectHandlerMethodsInAncestorContexts ?_				BeanFactoryUtils.beanNamesForTypeIncludingAncestors(getApplicationContext(), Object.class) :_				getApplicationContext().getBeanNamesForType(Object.class))___		for (String beanName : beanNames) {_			if (!beanName.startsWith(SCOPED_TARGET_NAME_PREFIX)) {_				Class<?> beanType = null__				try {_					beanType = getApplicationContext().getType(beanName)__				}_				catch (Throwable ex) {_					_					if (logger.isDebugEnabled()) {_						logger.debug("Could not resolve target class for bean with name '" + beanName + "'", ex)__					}_				}_				if (beanType != null && isHandler(beanType)) {_					detectHandlerMethods(beanName)__				}_			}_		}_		handlerMethodsInitialized(getHandlerMethods())__	};scan,beans,in,the,application,context,detect,and,register,handler,methods,see,is,handler,class,see,get,mapping,for,method,method,class,see,handler,methods,initialized,map;protected,void,init,handler,methods,if,logger,is,debug,enabled,logger,debug,looking,for,request,mappings,in,application,context,get,application,context,string,bean,names,this,detect,handler,methods,in,ancestor,contexts,bean,factory,utils,bean,names,for,type,including,ancestors,get,application,context,object,class,get,application,context,get,bean,names,for,type,object,class,for,string,bean,name,bean,names,if,bean,name,starts,with,class,bean,type,null,try,bean,type,get,application,context,get,type,bean,name,catch,throwable,ex,if,logger,is,debug,enabled,logger,debug,could,not,resolve,target,class,for,bean,with,name,bean,name,ex,if,bean,type,null,is,handler,bean,type,detect,handler,methods,bean,name,handler,methods,initialized,get,handler,methods
AbstractHandlerMethodMapping -> protected void initHandlerMethods();1468596479;Scan beans in the ApplicationContext, detect and register handler methods._@see #isHandler(Class)_@see #getMappingForMethod(Method, Class)_@see #handlerMethodsInitialized(Map);protected void initHandlerMethods() {_		if (logger.isDebugEnabled()) {_			logger.debug("Looking for request mappings in application context: " + getApplicationContext())__		}_		String[] beanNames = (this.detectHandlerMethodsInAncestorContexts ?_				BeanFactoryUtils.beanNamesForTypeIncludingAncestors(getApplicationContext(), Object.class) :_				getApplicationContext().getBeanNamesForType(Object.class))___		for (String beanName : beanNames) {_			if (!beanName.startsWith(SCOPED_TARGET_NAME_PREFIX)) {_				Class<?> beanType = null__				try {_					beanType = getApplicationContext().getType(beanName)__				}_				catch (Throwable ex) {_					_					if (logger.isDebugEnabled()) {_						logger.debug("Could not resolve target class for bean with name '" + beanName + "'", ex)__					}_				}_				if (beanType != null && isHandler(beanType)) {_					detectHandlerMethods(beanName)__				}_			}_		}_		handlerMethodsInitialized(getHandlerMethods())__	};scan,beans,in,the,application,context,detect,and,register,handler,methods,see,is,handler,class,see,get,mapping,for,method,method,class,see,handler,methods,initialized,map;protected,void,init,handler,methods,if,logger,is,debug,enabled,logger,debug,looking,for,request,mappings,in,application,context,get,application,context,string,bean,names,this,detect,handler,methods,in,ancestor,contexts,bean,factory,utils,bean,names,for,type,including,ancestors,get,application,context,object,class,get,application,context,get,bean,names,for,type,object,class,for,string,bean,name,bean,names,if,bean,name,starts,with,class,bean,type,null,try,bean,type,get,application,context,get,type,bean,name,catch,throwable,ex,if,logger,is,debug,enabled,logger,debug,could,not,resolve,target,class,for,bean,with,name,bean,name,ex,if,bean,type,null,is,handler,bean,type,detect,handler,methods,bean,name,handler,methods,initialized,get,handler,methods
AbstractHandlerMethodMapping -> protected void initHandlerMethods();1474905889;Scan beans in the ApplicationContext, detect and register handler methods._@see #isHandler(Class)_@see #getMappingForMethod(Method, Class)_@see #handlerMethodsInitialized(Map);protected void initHandlerMethods() {_		if (logger.isDebugEnabled()) {_			logger.debug("Looking for request mappings in application context: " + getApplicationContext())__		}_		String[] beanNames = (this.detectHandlerMethodsInAncestorContexts ?_				BeanFactoryUtils.beanNamesForTypeIncludingAncestors(getApplicationContext(), Object.class) :_				getApplicationContext().getBeanNamesForType(Object.class))___		for (String beanName : beanNames) {_			if (!beanName.startsWith(SCOPED_TARGET_NAME_PREFIX)) {_				Class<?> beanType = null__				try {_					beanType = getApplicationContext().getType(beanName)__				}_				catch (Throwable ex) {_					_					if (logger.isDebugEnabled()) {_						logger.debug("Could not resolve target class for bean with name '" + beanName + "'", ex)__					}_				}_				if (beanType != null && isHandler(beanType)) {_					detectHandlerMethods(beanName)__				}_			}_		}_		handlerMethodsInitialized(getHandlerMethods())__	};scan,beans,in,the,application,context,detect,and,register,handler,methods,see,is,handler,class,see,get,mapping,for,method,method,class,see,handler,methods,initialized,map;protected,void,init,handler,methods,if,logger,is,debug,enabled,logger,debug,looking,for,request,mappings,in,application,context,get,application,context,string,bean,names,this,detect,handler,methods,in,ancestor,contexts,bean,factory,utils,bean,names,for,type,including,ancestors,get,application,context,object,class,get,application,context,get,bean,names,for,type,object,class,for,string,bean,name,bean,names,if,bean,name,starts,with,class,bean,type,null,try,bean,type,get,application,context,get,type,bean,name,catch,throwable,ex,if,logger,is,debug,enabled,logger,debug,could,not,resolve,target,class,for,bean,with,name,bean,name,ex,if,bean,type,null,is,handler,bean,type,detect,handler,methods,bean,name,handler,methods,initialized,get,handler,methods
AbstractHandlerMethodMapping -> protected void initHandlerMethods();1481813056;Scan beans in the ApplicationContext, detect and register handler methods._@see #isHandler(Class)_@see #getMappingForMethod(Method, Class)_@see #handlerMethodsInitialized(Map);protected void initHandlerMethods() {_		if (logger.isDebugEnabled()) {_			logger.debug("Looking for request mappings in application context: " + getApplicationContext())__		}_		String[] beanNames = (this.detectHandlerMethodsInAncestorContexts ?_				BeanFactoryUtils.beanNamesForTypeIncludingAncestors(getApplicationContext(), Object.class) :_				getApplicationContext().getBeanNamesForType(Object.class))___		for (String beanName : beanNames) {_			if (!beanName.startsWith(SCOPED_TARGET_NAME_PREFIX)) {_				Class<?> beanType = null__				try {_					beanType = getApplicationContext().getType(beanName)__				}_				catch (Throwable ex) {_					_					if (logger.isDebugEnabled()) {_						logger.debug("Could not resolve target class for bean with name '" + beanName + "'", ex)__					}_				}_				if (beanType != null && isHandler(beanType)) {_					detectHandlerMethods(beanName)__				}_			}_		}_		handlerMethodsInitialized(getHandlerMethods())__	};scan,beans,in,the,application,context,detect,and,register,handler,methods,see,is,handler,class,see,get,mapping,for,method,method,class,see,handler,methods,initialized,map;protected,void,init,handler,methods,if,logger,is,debug,enabled,logger,debug,looking,for,request,mappings,in,application,context,get,application,context,string,bean,names,this,detect,handler,methods,in,ancestor,contexts,bean,factory,utils,bean,names,for,type,including,ancestors,get,application,context,object,class,get,application,context,get,bean,names,for,type,object,class,for,string,bean,name,bean,names,if,bean,name,starts,with,class,bean,type,null,try,bean,type,get,application,context,get,type,bean,name,catch,throwable,ex,if,logger,is,debug,enabled,logger,debug,could,not,resolve,target,class,for,bean,with,name,bean,name,ex,if,bean,type,null,is,handler,bean,type,detect,handler,methods,bean,name,handler,methods,initialized,get,handler,methods
AbstractHandlerMethodMapping -> protected void initHandlerMethods();1485810955;Scan beans in the ApplicationContext, detect and register handler methods._@see #isHandler(Class)_@see #getMappingForMethod(Method, Class)_@see #handlerMethodsInitialized(Map);protected void initHandlerMethods() {_		if (logger.isDebugEnabled()) {_			logger.debug("Looking for request mappings in application context: " + getApplicationContext())__		}_		String[] beanNames = (this.detectHandlerMethodsInAncestorContexts ?_				BeanFactoryUtils.beanNamesForTypeIncludingAncestors(getApplicationContext(), Object.class) :_				getApplicationContext().getBeanNamesForType(Object.class))___		for (String beanName : beanNames) {_			if (!beanName.startsWith(SCOPED_TARGET_NAME_PREFIX)) {_				Class<?> beanType = null__				try {_					beanType = getApplicationContext().getType(beanName)__				}_				catch (Throwable ex) {_					_					if (logger.isDebugEnabled()) {_						logger.debug("Could not resolve target class for bean with name '" + beanName + "'", ex)__					}_				}_				if (beanType != null && isHandler(beanType)) {_					detectHandlerMethods(beanName)__				}_			}_		}_		handlerMethodsInitialized(getHandlerMethods())__	};scan,beans,in,the,application,context,detect,and,register,handler,methods,see,is,handler,class,see,get,mapping,for,method,method,class,see,handler,methods,initialized,map;protected,void,init,handler,methods,if,logger,is,debug,enabled,logger,debug,looking,for,request,mappings,in,application,context,get,application,context,string,bean,names,this,detect,handler,methods,in,ancestor,contexts,bean,factory,utils,bean,names,for,type,including,ancestors,get,application,context,object,class,get,application,context,get,bean,names,for,type,object,class,for,string,bean,name,bean,names,if,bean,name,starts,with,class,bean,type,null,try,bean,type,get,application,context,get,type,bean,name,catch,throwable,ex,if,logger,is,debug,enabled,logger,debug,could,not,resolve,target,class,for,bean,with,name,bean,name,ex,if,bean,type,null,is,handler,bean,type,detect,handler,methods,bean,name,handler,methods,initialized,get,handler,methods
AbstractHandlerMethodMapping -> protected void initHandlerMethods();1495868221;Scan beans in the ApplicationContext, detect and register handler methods._@see #isHandler(Class)_@see #getMappingForMethod(Method, Class)_@see #handlerMethodsInitialized(Map);protected void initHandlerMethods() {_		if (logger.isDebugEnabled()) {_			logger.debug("Looking for request mappings in application context: " + getApplicationContext())__		}_		String[] beanNames = (this.detectHandlerMethodsInAncestorContexts ?_				BeanFactoryUtils.beanNamesForTypeIncludingAncestors(getApplicationContext(), Object.class) :_				getApplicationContext().getBeanNamesForType(Object.class))___		for (String beanName : beanNames) {_			if (!beanName.startsWith(SCOPED_TARGET_NAME_PREFIX)) {_				Class<?> beanType = null__				try {_					beanType = getApplicationContext().getType(beanName)__				}_				catch (Throwable ex) {_					_					if (logger.isDebugEnabled()) {_						logger.debug("Could not resolve target class for bean with name '" + beanName + "'", ex)__					}_				}_				if (beanType != null && isHandler(beanType)) {_					detectHandlerMethods(beanName)__				}_			}_		}_		handlerMethodsInitialized(getHandlerMethods())__	};scan,beans,in,the,application,context,detect,and,register,handler,methods,see,is,handler,class,see,get,mapping,for,method,method,class,see,handler,methods,initialized,map;protected,void,init,handler,methods,if,logger,is,debug,enabled,logger,debug,looking,for,request,mappings,in,application,context,get,application,context,string,bean,names,this,detect,handler,methods,in,ancestor,contexts,bean,factory,utils,bean,names,for,type,including,ancestors,get,application,context,object,class,get,application,context,get,bean,names,for,type,object,class,for,string,bean,name,bean,names,if,bean,name,starts,with,class,bean,type,null,try,bean,type,get,application,context,get,type,bean,name,catch,throwable,ex,if,logger,is,debug,enabled,logger,debug,could,not,resolve,target,class,for,bean,with,name,bean,name,ex,if,bean,type,null,is,handler,bean,type,detect,handler,methods,bean,name,handler,methods,initialized,get,handler,methods
AbstractHandlerMethodMapping -> protected void initHandlerMethods();1496837955;Scan beans in the ApplicationContext, detect and register handler methods._@see #isHandler(Class)_@see #getMappingForMethod(Method, Class)_@see #handlerMethodsInitialized(Map);protected void initHandlerMethods() {_		if (logger.isDebugEnabled()) {_			logger.debug("Looking for request mappings in application context: " + getApplicationContext())__		}_		String[] beanNames = (this.detectHandlerMethodsInAncestorContexts ?_				BeanFactoryUtils.beanNamesForTypeIncludingAncestors(obtainApplicationContext(), Object.class) :_				obtainApplicationContext().getBeanNamesForType(Object.class))___		for (String beanName : beanNames) {_			if (!beanName.startsWith(SCOPED_TARGET_NAME_PREFIX)) {_				Class<?> beanType = null__				try {_					beanType = obtainApplicationContext().getType(beanName)__				}_				catch (Throwable ex) {_					_					if (logger.isDebugEnabled()) {_						logger.debug("Could not resolve target class for bean with name '" + beanName + "'", ex)__					}_				}_				if (beanType != null && isHandler(beanType)) {_					detectHandlerMethods(beanName)__				}_			}_		}_		handlerMethodsInitialized(getHandlerMethods())__	};scan,beans,in,the,application,context,detect,and,register,handler,methods,see,is,handler,class,see,get,mapping,for,method,method,class,see,handler,methods,initialized,map;protected,void,init,handler,methods,if,logger,is,debug,enabled,logger,debug,looking,for,request,mappings,in,application,context,get,application,context,string,bean,names,this,detect,handler,methods,in,ancestor,contexts,bean,factory,utils,bean,names,for,type,including,ancestors,obtain,application,context,object,class,obtain,application,context,get,bean,names,for,type,object,class,for,string,bean,name,bean,names,if,bean,name,starts,with,class,bean,type,null,try,bean,type,obtain,application,context,get,type,bean,name,catch,throwable,ex,if,logger,is,debug,enabled,logger,debug,could,not,resolve,target,class,for,bean,with,name,bean,name,ex,if,bean,type,null,is,handler,bean,type,detect,handler,methods,bean,name,handler,methods,initialized,get,handler,methods
AbstractHandlerMethodMapping -> protected void initHandlerMethods();1497251962;Scan beans in the ApplicationContext, detect and register handler methods._@see #isHandler(Class)_@see #getMappingForMethod(Method, Class)_@see #handlerMethodsInitialized(Map);protected void initHandlerMethods() {_		if (logger.isDebugEnabled()) {_			logger.debug("Looking for request mappings in application context: " + getApplicationContext())__		}_		String[] beanNames = (this.detectHandlerMethodsInAncestorContexts ?_				BeanFactoryUtils.beanNamesForTypeIncludingAncestors(obtainApplicationContext(), Object.class) :_				obtainApplicationContext().getBeanNamesForType(Object.class))___		for (String beanName : beanNames) {_			if (!beanName.startsWith(SCOPED_TARGET_NAME_PREFIX)) {_				Class<?> beanType = null__				try {_					beanType = obtainApplicationContext().getType(beanName)__				}_				catch (Throwable ex) {_					_					if (logger.isDebugEnabled()) {_						logger.debug("Could not resolve target class for bean with name '" + beanName + "'", ex)__					}_				}_				if (beanType != null && isHandler(beanType)) {_					detectHandlerMethods(beanName)__				}_			}_		}_		handlerMethodsInitialized(getHandlerMethods())__	};scan,beans,in,the,application,context,detect,and,register,handler,methods,see,is,handler,class,see,get,mapping,for,method,method,class,see,handler,methods,initialized,map;protected,void,init,handler,methods,if,logger,is,debug,enabled,logger,debug,looking,for,request,mappings,in,application,context,get,application,context,string,bean,names,this,detect,handler,methods,in,ancestor,contexts,bean,factory,utils,bean,names,for,type,including,ancestors,obtain,application,context,object,class,obtain,application,context,get,bean,names,for,type,object,class,for,string,bean,name,bean,names,if,bean,name,starts,with,class,bean,type,null,try,bean,type,obtain,application,context,get,type,bean,name,catch,throwable,ex,if,logger,is,debug,enabled,logger,debug,could,not,resolve,target,class,for,bean,with,name,bean,name,ex,if,bean,type,null,is,handler,bean,type,detect,handler,methods,bean,name,handler,methods,initialized,get,handler,methods
AbstractHandlerMethodMapping -> protected void initHandlerMethods();1498780456;Scan beans in the ApplicationContext, detect and register handler methods._@see #isHandler(Class)_@see #getMappingForMethod(Method, Class)_@see #handlerMethodsInitialized(Map);protected void initHandlerMethods() {_		if (logger.isDebugEnabled()) {_			logger.debug("Looking for request mappings in application context: " + getApplicationContext())__		}_		String[] beanNames = (this.detectHandlerMethodsInAncestorContexts ?_				BeanFactoryUtils.beanNamesForTypeIncludingAncestors(obtainApplicationContext(), Object.class) :_				obtainApplicationContext().getBeanNamesForType(Object.class))___		for (String beanName : beanNames) {_			if (!beanName.startsWith(SCOPED_TARGET_NAME_PREFIX)) {_				Class<?> beanType = null__				try {_					beanType = obtainApplicationContext().getType(beanName)__				}_				catch (Throwable ex) {_					_					if (logger.isDebugEnabled()) {_						logger.debug("Could not resolve target class for bean with name '" + beanName + "'", ex)__					}_				}_				if (beanType != null && isHandler(beanType)) {_					detectHandlerMethods(beanName)__				}_			}_		}_		handlerMethodsInitialized(getHandlerMethods())__	};scan,beans,in,the,application,context,detect,and,register,handler,methods,see,is,handler,class,see,get,mapping,for,method,method,class,see,handler,methods,initialized,map;protected,void,init,handler,methods,if,logger,is,debug,enabled,logger,debug,looking,for,request,mappings,in,application,context,get,application,context,string,bean,names,this,detect,handler,methods,in,ancestor,contexts,bean,factory,utils,bean,names,for,type,including,ancestors,obtain,application,context,object,class,obtain,application,context,get,bean,names,for,type,object,class,for,string,bean,name,bean,names,if,bean,name,starts,with,class,bean,type,null,try,bean,type,obtain,application,context,get,type,bean,name,catch,throwable,ex,if,logger,is,debug,enabled,logger,debug,could,not,resolve,target,class,for,bean,with,name,bean,name,ex,if,bean,type,null,is,handler,bean,type,detect,handler,methods,bean,name,handler,methods,initialized,get,handler,methods
AbstractHandlerMethodMapping -> protected void initHandlerMethods();1518772998;Scan beans in the ApplicationContext, detect and register handler methods._@see #isHandler(Class)_@see #getMappingForMethod(Method, Class)_@see #handlerMethodsInitialized(Map);protected void initHandlerMethods() {_		if (logger.isDebugEnabled()) {_			logger.debug("Looking for request mappings in application context: " + getApplicationContext())__		}_		String[] beanNames = (this.detectHandlerMethodsInAncestorContexts ?_				BeanFactoryUtils.beanNamesForTypeIncludingAncestors(obtainApplicationContext(), Object.class) :_				obtainApplicationContext().getBeanNamesForType(Object.class))___		for (String beanName : beanNames) {_			if (!beanName.startsWith(SCOPED_TARGET_NAME_PREFIX)) {_				Class<?> beanType = null__				try {_					beanType = obtainApplicationContext().getType(beanName)__				}_				catch (Throwable ex) {_					_					if (logger.isDebugEnabled()) {_						logger.debug("Could not resolve target class for bean with name '" + beanName + "'", ex)__					}_				}_				if (beanType != null && isHandler(beanType)) {_					detectHandlerMethods(beanName)__				}_			}_		}_		handlerMethodsInitialized(getHandlerMethods())__	};scan,beans,in,the,application,context,detect,and,register,handler,methods,see,is,handler,class,see,get,mapping,for,method,method,class,see,handler,methods,initialized,map;protected,void,init,handler,methods,if,logger,is,debug,enabled,logger,debug,looking,for,request,mappings,in,application,context,get,application,context,string,bean,names,this,detect,handler,methods,in,ancestor,contexts,bean,factory,utils,bean,names,for,type,including,ancestors,obtain,application,context,object,class,obtain,application,context,get,bean,names,for,type,object,class,for,string,bean,name,bean,names,if,bean,name,starts,with,class,bean,type,null,try,bean,type,obtain,application,context,get,type,bean,name,catch,throwable,ex,if,logger,is,debug,enabled,logger,debug,could,not,resolve,target,class,for,bean,with,name,bean,name,ex,if,bean,type,null,is,handler,bean,type,detect,handler,methods,bean,name,handler,methods,initialized,get,handler,methods
AbstractHandlerMethodMapping -> protected void initHandlerMethods();1522103912;Scan beans in the ApplicationContext, detect and register handler methods._@see #isHandler(Class)_@see #getMappingForMethod(Method, Class)_@see #handlerMethodsInitialized(Map);protected void initHandlerMethods() {_		if (logger.isDebugEnabled()) {_			logger.debug("Looking for request mappings in application context: " + getApplicationContext())__		}_		String[] beanNames = (this.detectHandlerMethodsInAncestorContexts ?_				BeanFactoryUtils.beanNamesForTypeIncludingAncestors(obtainApplicationContext(), Object.class) :_				obtainApplicationContext().getBeanNamesForType(Object.class))___		for (String beanName : beanNames) {_			if (!beanName.startsWith(SCOPED_TARGET_NAME_PREFIX)) {_				Class<?> beanType = null__				try {_					beanType = obtainApplicationContext().getType(beanName)__				}_				catch (Throwable ex) {_					_					if (logger.isDebugEnabled()) {_						logger.debug("Could not resolve target class for bean with name '" + beanName + "'", ex)__					}_				}_				if (beanType != null && isHandler(beanType)) {_					detectHandlerMethods(beanName)__				}_			}_		}_		handlerMethodsInitialized(getHandlerMethods())__	};scan,beans,in,the,application,context,detect,and,register,handler,methods,see,is,handler,class,see,get,mapping,for,method,method,class,see,handler,methods,initialized,map;protected,void,init,handler,methods,if,logger,is,debug,enabled,logger,debug,looking,for,request,mappings,in,application,context,get,application,context,string,bean,names,this,detect,handler,methods,in,ancestor,contexts,bean,factory,utils,bean,names,for,type,including,ancestors,obtain,application,context,object,class,obtain,application,context,get,bean,names,for,type,object,class,for,string,bean,name,bean,names,if,bean,name,starts,with,class,bean,type,null,try,bean,type,obtain,application,context,get,type,bean,name,catch,throwable,ex,if,logger,is,debug,enabled,logger,debug,could,not,resolve,target,class,for,bean,with,name,bean,name,ex,if,bean,type,null,is,handler,bean,type,detect,handler,methods,bean,name,handler,methods,initialized,get,handler,methods
AbstractHandlerMethodMapping -> protected void initHandlerMethods();1522843494;Scan beans in the ApplicationContext, detect and register handler methods._@see #isHandler(Class)_@see #getMappingForMethod(Method, Class)_@see #handlerMethodsInitialized(Map);protected void initHandlerMethods() {_		if (logger.isDebugEnabled()) {_			logger.debug("Looking for request mappings in application context: " + getApplicationContext())__		}_		String[] beanNames = (this.detectHandlerMethodsInAncestorContexts ?_				BeanFactoryUtils.beanNamesForTypeIncludingAncestors(obtainApplicationContext(), Object.class) :_				obtainApplicationContext().getBeanNamesForType(Object.class))___		for (String beanName : beanNames) {_			if (!beanName.startsWith(SCOPED_TARGET_NAME_PREFIX)) {_				Class<?> beanType = null__				try {_					beanType = obtainApplicationContext().getType(beanName)__				}_				catch (Throwable ex) {_					_					if (logger.isDebugEnabled()) {_						logger.debug("Could not resolve target class for bean with name '" + beanName + "'", ex)__					}_				}_				if (beanType != null && isHandler(beanType)) {_					detectHandlerMethods(beanName)__				}_			}_		}_		handlerMethodsInitialized(getHandlerMethods())__	};scan,beans,in,the,application,context,detect,and,register,handler,methods,see,is,handler,class,see,get,mapping,for,method,method,class,see,handler,methods,initialized,map;protected,void,init,handler,methods,if,logger,is,debug,enabled,logger,debug,looking,for,request,mappings,in,application,context,get,application,context,string,bean,names,this,detect,handler,methods,in,ancestor,contexts,bean,factory,utils,bean,names,for,type,including,ancestors,obtain,application,context,object,class,obtain,application,context,get,bean,names,for,type,object,class,for,string,bean,name,bean,names,if,bean,name,starts,with,class,bean,type,null,try,bean,type,obtain,application,context,get,type,bean,name,catch,throwable,ex,if,logger,is,debug,enabled,logger,debug,could,not,resolve,target,class,for,bean,with,name,bean,name,ex,if,bean,type,null,is,handler,bean,type,detect,handler,methods,bean,name,handler,methods,initialized,get,handler,methods
AbstractHandlerMethodMapping -> protected void initHandlerMethods();1529361191;Scan beans in the ApplicationContext, detect and register handler methods._@see #isHandler(Class)_@see #getMappingForMethod(Method, Class)_@see #handlerMethodsInitialized(Map);protected void initHandlerMethods() {__		String[] beanNames = (this.detectHandlerMethodsInAncestorContexts ?_				BeanFactoryUtils.beanNamesForTypeIncludingAncestors(obtainApplicationContext(), Object.class) :_				obtainApplicationContext().getBeanNamesForType(Object.class))___		for (String beanName : beanNames) {_			if (!beanName.startsWith(SCOPED_TARGET_NAME_PREFIX)) {_				Class<?> beanType = null__				try {_					beanType = obtainApplicationContext().getType(beanName)__				}_				catch (Throwable ex) {_					_					if (logger.isTraceEnabled()) {_						logger.trace("Could not resolve type for bean '" + beanName + "'", ex)__					}_				}_				if (beanType != null && isHandler(beanType)) {_					detectHandlerMethods(beanName)__				}_			}_		}_		handlerMethodsInitialized(getHandlerMethods())__	};scan,beans,in,the,application,context,detect,and,register,handler,methods,see,is,handler,class,see,get,mapping,for,method,method,class,see,handler,methods,initialized,map;protected,void,init,handler,methods,string,bean,names,this,detect,handler,methods,in,ancestor,contexts,bean,factory,utils,bean,names,for,type,including,ancestors,obtain,application,context,object,class,obtain,application,context,get,bean,names,for,type,object,class,for,string,bean,name,bean,names,if,bean,name,starts,with,class,bean,type,null,try,bean,type,obtain,application,context,get,type,bean,name,catch,throwable,ex,if,logger,is,trace,enabled,logger,trace,could,not,resolve,type,for,bean,bean,name,ex,if,bean,type,null,is,handler,bean,type,detect,handler,methods,bean,name,handler,methods,initialized,get,handler,methods
AbstractHandlerMethodMapping -> protected void initHandlerMethods();1529721864;Scan beans in the ApplicationContext, detect and register handler methods._@see #isHandler(Class)_@see #getMappingForMethod(Method, Class)_@see #handlerMethodsInitialized(Map);protected void initHandlerMethods() {__		String[] beanNames = (this.detectHandlerMethodsInAncestorContexts ?_				BeanFactoryUtils.beanNamesForTypeIncludingAncestors(obtainApplicationContext(), Object.class) :_				obtainApplicationContext().getBeanNamesForType(Object.class))___		for (String beanName : beanNames) {_			if (!beanName.startsWith(SCOPED_TARGET_NAME_PREFIX)) {_				Class<?> beanType = null__				try {_					beanType = obtainApplicationContext().getType(beanName)__				}_				catch (Throwable ex) {_					_					if (logger.isTraceEnabled()) {_						logger.trace("Could not resolve type for bean '" + beanName + "'", ex)__					}_				}_				if (beanType != null && isHandler(beanType)) {_					detectHandlerMethods(beanName)__				}_			}_		}_		handlerMethodsInitialized(getHandlerMethods())__	};scan,beans,in,the,application,context,detect,and,register,handler,methods,see,is,handler,class,see,get,mapping,for,method,method,class,see,handler,methods,initialized,map;protected,void,init,handler,methods,string,bean,names,this,detect,handler,methods,in,ancestor,contexts,bean,factory,utils,bean,names,for,type,including,ancestors,obtain,application,context,object,class,obtain,application,context,get,bean,names,for,type,object,class,for,string,bean,name,bean,names,if,bean,name,starts,with,class,bean,type,null,try,bean,type,obtain,application,context,get,type,bean,name,catch,throwable,ex,if,logger,is,trace,enabled,logger,trace,could,not,resolve,type,for,bean,bean,name,ex,if,bean,type,null,is,handler,bean,type,detect,handler,methods,bean,name,handler,methods,initialized,get,handler,methods
AbstractHandlerMethodMapping -> protected void initHandlerMethods();1530174524;Scan beans in the ApplicationContext, detect and register handler methods._@see #isHandler(Class)_@see #getMappingForMethod(Method, Class)_@see #handlerMethodsInitialized(Map);protected void initHandlerMethods() {__		String[] beanNames = (this.detectHandlerMethodsInAncestorContexts ?_				BeanFactoryUtils.beanNamesForTypeIncludingAncestors(obtainApplicationContext(), Object.class) :_				obtainApplicationContext().getBeanNamesForType(Object.class))___		for (String beanName : beanNames) {_			if (!beanName.startsWith(SCOPED_TARGET_NAME_PREFIX)) {_				Class<?> beanType = null__				try {_					beanType = obtainApplicationContext().getType(beanName)__				}_				catch (Throwable ex) {_					_					if (logger.isTraceEnabled()) {_						logger.trace("Could not resolve type for bean '" + beanName + "'", ex)__					}_				}_				if (beanType != null && isHandler(beanType)) {_					detectHandlerMethods(beanName)__				}_			}_		}_		handlerMethodsInitialized(getHandlerMethods())__	};scan,beans,in,the,application,context,detect,and,register,handler,methods,see,is,handler,class,see,get,mapping,for,method,method,class,see,handler,methods,initialized,map;protected,void,init,handler,methods,string,bean,names,this,detect,handler,methods,in,ancestor,contexts,bean,factory,utils,bean,names,for,type,including,ancestors,obtain,application,context,object,class,obtain,application,context,get,bean,names,for,type,object,class,for,string,bean,name,bean,names,if,bean,name,starts,with,class,bean,type,null,try,bean,type,obtain,application,context,get,type,bean,name,catch,throwable,ex,if,logger,is,trace,enabled,logger,trace,could,not,resolve,type,for,bean,bean,name,ex,if,bean,type,null,is,handler,bean,type,detect,handler,methods,bean,name,handler,methods,initialized,get,handler,methods
AbstractHandlerMethodMapping -> protected void initHandlerMethods();1530174524;Scan beans in the ApplicationContext, detect and register handler methods._@see #isHandler(Class)_@see #getMappingForMethod(Method, Class)_@see #handlerMethodsInitialized(Map);protected void initHandlerMethods() {__		String[] beanNames = (this.detectHandlerMethodsInAncestorContexts ?_				BeanFactoryUtils.beanNamesForTypeIncludingAncestors(obtainApplicationContext(), Object.class) :_				obtainApplicationContext().getBeanNamesForType(Object.class))___		for (String beanName : beanNames) {_			if (!beanName.startsWith(SCOPED_TARGET_NAME_PREFIX)) {_				Class<?> beanType = null__				try {_					beanType = obtainApplicationContext().getType(beanName)__				}_				catch (Throwable ex) {_					_					if (logger.isTraceEnabled()) {_						logger.trace("Could not resolve type for bean '" + beanName + "'", ex)__					}_				}_				if (beanType != null && isHandler(beanType)) {_					detectHandlerMethods(beanName)__				}_			}_		}_		handlerMethodsInitialized(getHandlerMethods())__	};scan,beans,in,the,application,context,detect,and,register,handler,methods,see,is,handler,class,see,get,mapping,for,method,method,class,see,handler,methods,initialized,map;protected,void,init,handler,methods,string,bean,names,this,detect,handler,methods,in,ancestor,contexts,bean,factory,utils,bean,names,for,type,including,ancestors,obtain,application,context,object,class,obtain,application,context,get,bean,names,for,type,object,class,for,string,bean,name,bean,names,if,bean,name,starts,with,class,bean,type,null,try,bean,type,obtain,application,context,get,type,bean,name,catch,throwable,ex,if,logger,is,trace,enabled,logger,trace,could,not,resolve,type,for,bean,bean,name,ex,if,bean,type,null,is,handler,bean,type,detect,handler,methods,bean,name,handler,methods,initialized,get,handler,methods
AbstractHandlerMethodMapping -> protected void initHandlerMethods();1533943217;Scan beans in the ApplicationContext, detect and register handler methods._@see #getCandidateBeanNames()_@see #processCandidateBean_@see #handlerMethodsInitialized;protected void initHandlerMethods() {_		for (String beanName : getCandidateBeanNames()) {_			if (!beanName.startsWith(SCOPED_TARGET_NAME_PREFIX)) {_				processCandidateBean(beanName)__			}_		}_		handlerMethodsInitialized(getHandlerMethods())__	};scan,beans,in,the,application,context,detect,and,register,handler,methods,see,get,candidate,bean,names,see,process,candidate,bean,see,handler,methods,initialized;protected,void,init,handler,methods,for,string,bean,name,get,candidate,bean,names,if,bean,name,starts,with,process,candidate,bean,bean,name,handler,methods,initialized,get,handler,methods
AbstractHandlerMethodMapping -> protected void initHandlerMethods();1542407418;Scan beans in the ApplicationContext, detect and register handler methods._@see #getCandidateBeanNames()_@see #processCandidateBean_@see #handlerMethodsInitialized;protected void initHandlerMethods() {_		for (String beanName : getCandidateBeanNames()) {_			if (!beanName.startsWith(SCOPED_TARGET_NAME_PREFIX)) {_				processCandidateBean(beanName)__			}_		}_		handlerMethodsInitialized(getHandlerMethods())__	};scan,beans,in,the,application,context,detect,and,register,handler,methods,see,get,candidate,bean,names,see,process,candidate,bean,see,handler,methods,initialized;protected,void,init,handler,methods,for,string,bean,name,get,candidate,bean,names,if,bean,name,starts,with,process,candidate,bean,bean,name,handler,methods,initialized,get,handler,methods
AbstractHandlerMethodMapping -> protected void initHandlerMethods();1542771062;Scan beans in the ApplicationContext, detect and register handler methods._@see #getCandidateBeanNames()_@see #processCandidateBean_@see #handlerMethodsInitialized;protected void initHandlerMethods() {_		for (String beanName : getCandidateBeanNames()) {_			if (!beanName.startsWith(SCOPED_TARGET_NAME_PREFIX)) {_				processCandidateBean(beanName)__			}_		}_		handlerMethodsInitialized(getHandlerMethods())__	};scan,beans,in,the,application,context,detect,and,register,handler,methods,see,get,candidate,bean,names,see,process,candidate,bean,see,handler,methods,initialized;protected,void,init,handler,methods,for,string,bean,name,get,candidate,bean,names,if,bean,name,starts,with,process,candidate,bean,bean,name,handler,methods,initialized,get,handler,methods
AbstractHandlerMethodMapping -> protected void initHandlerMethods();1548427561;Scan beans in the ApplicationContext, detect and register handler methods._@see #getCandidateBeanNames()_@see #processCandidateBean_@see #handlerMethodsInitialized;protected void initHandlerMethods() {_		for (String beanName : getCandidateBeanNames()) {_			if (!beanName.startsWith(SCOPED_TARGET_NAME_PREFIX)) {_				processCandidateBean(beanName)__			}_		}_		handlerMethodsInitialized(getHandlerMethods())__	};scan,beans,in,the,application,context,detect,and,register,handler,methods,see,get,candidate,bean,names,see,process,candidate,bean,see,handler,methods,initialized;protected,void,init,handler,methods,for,string,bean,name,get,candidate,bean,names,if,bean,name,starts,with,process,candidate,bean,bean,name,handler,methods,initialized,get,handler,methods
AbstractHandlerMethodMapping -> protected void initHandlerMethods();1551093473;Scan beans in the ApplicationContext, detect and register handler methods._@see #getCandidateBeanNames()_@see #processCandidateBean_@see #handlerMethodsInitialized;protected void initHandlerMethods() {_		for (String beanName : getCandidateBeanNames()) {_			if (!beanName.startsWith(SCOPED_TARGET_NAME_PREFIX)) {_				processCandidateBean(beanName)__			}_		}_		handlerMethodsInitialized(getHandlerMethods())__	};scan,beans,in,the,application,context,detect,and,register,handler,methods,see,get,candidate,bean,names,see,process,candidate,bean,see,handler,methods,initialized;protected,void,init,handler,methods,for,string,bean,name,get,candidate,bean,names,if,bean,name,starts,with,process,candidate,bean,bean,name,handler,methods,initialized,get,handler,methods
AbstractHandlerMethodMapping -> @Nullable 	protected CorsConfiguration initCorsConfiguration(Object handler, Method method, T mapping);1495868221;Extract and return the CORS configuration for the mapping.;@Nullable_	protected CorsConfiguration initCorsConfiguration(Object handler, Method method, T mapping) {_		return null__	};extract,and,return,the,cors,configuration,for,the,mapping;nullable,protected,cors,configuration,init,cors,configuration,object,handler,method,method,t,mapping,return,null
AbstractHandlerMethodMapping -> @Nullable 	protected CorsConfiguration initCorsConfiguration(Object handler, Method method, T mapping);1496837955;Extract and return the CORS configuration for the mapping.;@Nullable_	protected CorsConfiguration initCorsConfiguration(Object handler, Method method, T mapping) {_		return null__	};extract,and,return,the,cors,configuration,for,the,mapping;nullable,protected,cors,configuration,init,cors,configuration,object,handler,method,method,t,mapping,return,null
AbstractHandlerMethodMapping -> @Nullable 	protected CorsConfiguration initCorsConfiguration(Object handler, Method method, T mapping);1497251962;Extract and return the CORS configuration for the mapping.;@Nullable_	protected CorsConfiguration initCorsConfiguration(Object handler, Method method, T mapping) {_		return null__	};extract,and,return,the,cors,configuration,for,the,mapping;nullable,protected,cors,configuration,init,cors,configuration,object,handler,method,method,t,mapping,return,null
AbstractHandlerMethodMapping -> @Nullable 	protected CorsConfiguration initCorsConfiguration(Object handler, Method method, T mapping);1498780456;Extract and return the CORS configuration for the mapping.;@Nullable_	protected CorsConfiguration initCorsConfiguration(Object handler, Method method, T mapping) {_		return null__	};extract,and,return,the,cors,configuration,for,the,mapping;nullable,protected,cors,configuration,init,cors,configuration,object,handler,method,method,t,mapping,return,null
AbstractHandlerMethodMapping -> @Nullable 	protected CorsConfiguration initCorsConfiguration(Object handler, Method method, T mapping);1518772998;Extract and return the CORS configuration for the mapping.;@Nullable_	protected CorsConfiguration initCorsConfiguration(Object handler, Method method, T mapping) {_		return null__	};extract,and,return,the,cors,configuration,for,the,mapping;nullable,protected,cors,configuration,init,cors,configuration,object,handler,method,method,t,mapping,return,null
AbstractHandlerMethodMapping -> @Nullable 	protected CorsConfiguration initCorsConfiguration(Object handler, Method method, T mapping);1522103912;Extract and return the CORS configuration for the mapping.;@Nullable_	protected CorsConfiguration initCorsConfiguration(Object handler, Method method, T mapping) {_		return null__	};extract,and,return,the,cors,configuration,for,the,mapping;nullable,protected,cors,configuration,init,cors,configuration,object,handler,method,method,t,mapping,return,null
AbstractHandlerMethodMapping -> @Nullable 	protected CorsConfiguration initCorsConfiguration(Object handler, Method method, T mapping);1522843494;Extract and return the CORS configuration for the mapping.;@Nullable_	protected CorsConfiguration initCorsConfiguration(Object handler, Method method, T mapping) {_		return null__	};extract,and,return,the,cors,configuration,for,the,mapping;nullable,protected,cors,configuration,init,cors,configuration,object,handler,method,method,t,mapping,return,null
AbstractHandlerMethodMapping -> @Nullable 	protected CorsConfiguration initCorsConfiguration(Object handler, Method method, T mapping);1529361191;Extract and return the CORS configuration for the mapping.;@Nullable_	protected CorsConfiguration initCorsConfiguration(Object handler, Method method, T mapping) {_		return null__	};extract,and,return,the,cors,configuration,for,the,mapping;nullable,protected,cors,configuration,init,cors,configuration,object,handler,method,method,t,mapping,return,null
AbstractHandlerMethodMapping -> @Nullable 	protected CorsConfiguration initCorsConfiguration(Object handler, Method method, T mapping);1529721864;Extract and return the CORS configuration for the mapping.;@Nullable_	protected CorsConfiguration initCorsConfiguration(Object handler, Method method, T mapping) {_		return null__	};extract,and,return,the,cors,configuration,for,the,mapping;nullable,protected,cors,configuration,init,cors,configuration,object,handler,method,method,t,mapping,return,null
AbstractHandlerMethodMapping -> @Nullable 	protected CorsConfiguration initCorsConfiguration(Object handler, Method method, T mapping);1530174524;Extract and return the CORS configuration for the mapping.;@Nullable_	protected CorsConfiguration initCorsConfiguration(Object handler, Method method, T mapping) {_		return null__	};extract,and,return,the,cors,configuration,for,the,mapping;nullable,protected,cors,configuration,init,cors,configuration,object,handler,method,method,t,mapping,return,null
AbstractHandlerMethodMapping -> @Nullable 	protected CorsConfiguration initCorsConfiguration(Object handler, Method method, T mapping);1530174524;Extract and return the CORS configuration for the mapping.;@Nullable_	protected CorsConfiguration initCorsConfiguration(Object handler, Method method, T mapping) {_		return null__	};extract,and,return,the,cors,configuration,for,the,mapping;nullable,protected,cors,configuration,init,cors,configuration,object,handler,method,method,t,mapping,return,null
AbstractHandlerMethodMapping -> @Nullable 	protected CorsConfiguration initCorsConfiguration(Object handler, Method method, T mapping);1533943217;Extract and return the CORS configuration for the mapping.;@Nullable_	protected CorsConfiguration initCorsConfiguration(Object handler, Method method, T mapping) {_		return null__	};extract,and,return,the,cors,configuration,for,the,mapping;nullable,protected,cors,configuration,init,cors,configuration,object,handler,method,method,t,mapping,return,null
AbstractHandlerMethodMapping -> @Nullable 	protected CorsConfiguration initCorsConfiguration(Object handler, Method method, T mapping);1542407418;Extract and return the CORS configuration for the mapping.;@Nullable_	protected CorsConfiguration initCorsConfiguration(Object handler, Method method, T mapping) {_		return null__	};extract,and,return,the,cors,configuration,for,the,mapping;nullable,protected,cors,configuration,init,cors,configuration,object,handler,method,method,t,mapping,return,null
AbstractHandlerMethodMapping -> @Nullable 	protected CorsConfiguration initCorsConfiguration(Object handler, Method method, T mapping);1542771062;Extract and return the CORS configuration for the mapping.;@Nullable_	protected CorsConfiguration initCorsConfiguration(Object handler, Method method, T mapping) {_		return null__	};extract,and,return,the,cors,configuration,for,the,mapping;nullable,protected,cors,configuration,init,cors,configuration,object,handler,method,method,t,mapping,return,null
AbstractHandlerMethodMapping -> @Nullable 	protected CorsConfiguration initCorsConfiguration(Object handler, Method method, T mapping);1548427561;Extract and return the CORS configuration for the mapping.;@Nullable_	protected CorsConfiguration initCorsConfiguration(Object handler, Method method, T mapping) {_		return null__	};extract,and,return,the,cors,configuration,for,the,mapping;nullable,protected,cors,configuration,init,cors,configuration,object,handler,method,method,t,mapping,return,null
AbstractHandlerMethodMapping -> @Nullable 	protected CorsConfiguration initCorsConfiguration(Object handler, Method method, T mapping);1551093473;Extract and return the CORS configuration for the mapping.;@Nullable_	protected CorsConfiguration initCorsConfiguration(Object handler, Method method, T mapping) {_		return null__	};extract,and,return,the,cors,configuration,for,the,mapping;nullable,protected,cors,configuration,init,cors,configuration,object,handler,method,method,t,mapping,return,null
AbstractHandlerMethodMapping -> protected void handlerMethodsInitialized(Map<T, HandlerMethod> handlerMethods);1328020251;Invoked after all handler methods have been detected._@param handlerMethods a read-only map with handler methods and mappings.;protected void handlerMethodsInitialized(Map<T, HandlerMethod> handlerMethods) {_	};invoked,after,all,handler,methods,have,been,detected,param,handler,methods,a,read,only,map,with,handler,methods,and,mappings;protected,void,handler,methods,initialized,map,t,handler,method,handler,methods
AbstractHandlerMethodMapping -> protected void handlerMethodsInitialized(Map<T, HandlerMethod> handlerMethods);1328022204;Invoked after all handler methods have been detected._@param handlerMethods a read-only map with handler methods and mappings.;protected void handlerMethodsInitialized(Map<T, HandlerMethod> handlerMethods) {_	};invoked,after,all,handler,methods,have,been,detected,param,handler,methods,a,read,only,map,with,handler,methods,and,mappings;protected,void,handler,methods,initialized,map,t,handler,method,handler,methods
AbstractHandlerMethodMapping -> protected void handlerMethodsInitialized(Map<T, HandlerMethod> handlerMethods);1336682556;Invoked after all handler methods have been detected._@param handlerMethods a read-only map with handler methods and mappings.;protected void handlerMethodsInitialized(Map<T, HandlerMethod> handlerMethods) {_	};invoked,after,all,handler,methods,have,been,detected,param,handler,methods,a,read,only,map,with,handler,methods,and,mappings;protected,void,handler,methods,initialized,map,t,handler,method,handler,methods
AbstractHandlerMethodMapping -> protected void handlerMethodsInitialized(Map<T, HandlerMethod> handlerMethods);1341441111;Invoked after all handler methods have been detected._@param handlerMethods a read-only map with handler methods and mappings.;protected void handlerMethodsInitialized(Map<T, HandlerMethod> handlerMethods) {_	};invoked,after,all,handler,methods,have,been,detected,param,handler,methods,a,read,only,map,with,handler,methods,and,mappings;protected,void,handler,methods,initialized,map,t,handler,method,handler,methods
AbstractHandlerMethodMapping -> protected void handlerMethodsInitialized(Map<T, HandlerMethod> handlerMethods);1356735495;Invoked after all handler methods have been detected._@param handlerMethods a read-only map with handler methods and mappings.;protected void handlerMethodsInitialized(Map<T, HandlerMethod> handlerMethods) {_	};invoked,after,all,handler,methods,have,been,detected,param,handler,methods,a,read,only,map,with,handler,methods,and,mappings;protected,void,handler,methods,initialized,map,t,handler,method,handler,methods
AbstractHandlerMethodMapping -> protected void handlerMethodsInitialized(Map<T, HandlerMethod> handlerMethods);1357119239;Invoked after all handler methods have been detected._@param handlerMethods a read-only map with handler methods and mappings.;protected void handlerMethodsInitialized(Map<T, HandlerMethod> handlerMethods) {_	};invoked,after,all,handler,methods,have,been,detected,param,handler,methods,a,read,only,map,with,handler,methods,and,mappings;protected,void,handler,methods,initialized,map,t,handler,method,handler,methods
AbstractHandlerMethodMapping -> protected void handlerMethodsInitialized(Map<T, HandlerMethod> handlerMethods);1362408075;Invoked after all handler methods have been detected._@param handlerMethods a read-only map with handler methods and mappings.;protected void handlerMethodsInitialized(Map<T, HandlerMethod> handlerMethods) {_	};invoked,after,all,handler,methods,have,been,detected,param,handler,methods,a,read,only,map,with,handler,methods,and,mappings;protected,void,handler,methods,initialized,map,t,handler,method,handler,methods
AbstractHandlerMethodMapping -> protected void handlerMethodsInitialized(Map<T, HandlerMethod> handlerMethods);1368482696;Invoked after all handler methods have been detected._@param handlerMethods a read-only map with handler methods and mappings.;protected void handlerMethodsInitialized(Map<T, HandlerMethod> handlerMethods) {_	};invoked,after,all,handler,methods,have,been,detected,param,handler,methods,a,read,only,map,with,handler,methods,and,mappings;protected,void,handler,methods,initialized,map,t,handler,method,handler,methods
AbstractHandlerMethodMapping -> protected void handlerMethodsInitialized(Map<T, HandlerMethod> handlerMethods);1368581529;Invoked after all handler methods have been detected._@param handlerMethods a read-only map with handler methods and mappings.;protected void handlerMethodsInitialized(Map<T, HandlerMethod> handlerMethods) {_	};invoked,after,all,handler,methods,have,been,detected,param,handler,methods,a,read,only,map,with,handler,methods,and,mappings;protected,void,handler,methods,initialized,map,t,handler,method,handler,methods
AbstractHandlerMethodMapping -> protected void handlerMethodsInitialized(Map<T, HandlerMethod> handlerMethods);1382665849;Invoked after all handler methods have been detected._@param handlerMethods a read-only map with handler methods and mappings.;protected void handlerMethodsInitialized(Map<T, HandlerMethod> handlerMethods) {_	};invoked,after,all,handler,methods,have,been,detected,param,handler,methods,a,read,only,map,with,handler,methods,and,mappings;protected,void,handler,methods,initialized,map,t,handler,method,handler,methods
AbstractHandlerMethodMapping -> protected void handlerMethodsInitialized(Map<T, HandlerMethod> handlerMethods);1392160296;Invoked after all handler methods have been detected._@param handlerMethods a read-only map with handler methods and mappings.;protected void handlerMethodsInitialized(Map<T, HandlerMethod> handlerMethods) {_	};invoked,after,all,handler,methods,have,been,detected,param,handler,methods,a,read,only,map,with,handler,methods,and,mappings;protected,void,handler,methods,initialized,map,t,handler,method,handler,methods
AbstractHandlerMethodMapping -> protected void handlerMethodsInitialized(Map<T, HandlerMethod> handlerMethods);1392337816;Invoked after all handler methods have been detected._@param handlerMethods a read-only map with handler methods and mappings.;protected void handlerMethodsInitialized(Map<T, HandlerMethod> handlerMethods) {_	};invoked,after,all,handler,methods,have,been,detected,param,handler,methods,a,read,only,map,with,handler,methods,and,mappings;protected,void,handler,methods,initialized,map,t,handler,method,handler,methods
AbstractHandlerMethodMapping -> protected void handlerMethodsInitialized(Map<T, HandlerMethod> handlerMethods);1392407320;Invoked after all handler methods have been detected._@param handlerMethods a read-only map with handler methods and mappings.;protected void handlerMethodsInitialized(Map<T, HandlerMethod> handlerMethods) {_	};invoked,after,all,handler,methods,have,been,detected,param,handler,methods,a,read,only,map,with,handler,methods,and,mappings;protected,void,handler,methods,initialized,map,t,handler,method,handler,methods
AbstractHandlerMethodMapping -> protected void handlerMethodsInitialized(Map<T, HandlerMethod> handlerMethods);1395655323;Invoked after all handler methods have been detected._@param handlerMethods a read-only map with handler methods and mappings.;protected void handlerMethodsInitialized(Map<T, HandlerMethod> handlerMethods) {_	};invoked,after,all,handler,methods,have,been,detected,param,handler,methods,a,read,only,map,with,handler,methods,and,mappings;protected,void,handler,methods,initialized,map,t,handler,method,handler,methods
AbstractHandlerMethodMapping -> protected void handlerMethodsInitialized(Map<T, HandlerMethod> handlerMethods);1399404473;Invoked after all handler methods have been detected._@param handlerMethods a read-only map with handler methods and mappings.;protected void handlerMethodsInitialized(Map<T, HandlerMethod> handlerMethods) {_	};invoked,after,all,handler,methods,have,been,detected,param,handler,methods,a,read,only,map,with,handler,methods,and,mappings;protected,void,handler,methods,initialized,map,t,handler,method,handler,methods
AbstractHandlerMethodMapping -> protected void handlerMethodsInitialized(Map<T, HandlerMethod> handlerMethods);1426869344;Invoked after all handler methods have been detected._@param handlerMethods a read-only map with handler methods and mappings.;protected void handlerMethodsInitialized(Map<T, HandlerMethod> handlerMethods) {_	};invoked,after,all,handler,methods,have,been,detected,param,handler,methods,a,read,only,map,with,handler,methods,and,mappings;protected,void,handler,methods,initialized,map,t,handler,method,handler,methods
AbstractHandlerMethodMapping -> protected void handlerMethodsInitialized(Map<T, HandlerMethod> handlerMethods);1427240641;Invoked after all handler methods have been detected._@param handlerMethods a read-only map with handler methods and mappings.;protected void handlerMethodsInitialized(Map<T, HandlerMethod> handlerMethods) {_	};invoked,after,all,handler,methods,have,been,detected,param,handler,methods,a,read,only,map,with,handler,methods,and,mappings;protected,void,handler,methods,initialized,map,t,handler,method,handler,methods
AbstractHandlerMethodMapping -> protected void handlerMethodsInitialized(Map<T, HandlerMethod> handlerMethods);1427983931;Invoked after all handler methods have been detected._@param handlerMethods a read-only map with handler methods and mappings.;protected void handlerMethodsInitialized(Map<T, HandlerMethod> handlerMethods) {_	};invoked,after,all,handler,methods,have,been,detected,param,handler,methods,a,read,only,map,with,handler,methods,and,mappings;protected,void,handler,methods,initialized,map,t,handler,method,handler,methods
AbstractHandlerMethodMapping -> protected void handlerMethodsInitialized(Map<T, HandlerMethod> handlerMethods);1430734105;Invoked after all handler methods have been detected._@param handlerMethods a read-only map with handler methods and mappings.;protected void handlerMethodsInitialized(Map<T, HandlerMethod> handlerMethods) {_	};invoked,after,all,handler,methods,have,been,detected,param,handler,methods,a,read,only,map,with,handler,methods,and,mappings;protected,void,handler,methods,initialized,map,t,handler,method,handler,methods
AbstractHandlerMethodMapping -> protected void handlerMethodsInitialized(Map<T, HandlerMethod> handlerMethods);1430734105;Invoked after all handler methods have been detected._@param handlerMethods a read-only map with handler methods and mappings.;protected void handlerMethodsInitialized(Map<T, HandlerMethod> handlerMethods) {_	};invoked,after,all,handler,methods,have,been,detected,param,handler,methods,a,read,only,map,with,handler,methods,and,mappings;protected,void,handler,methods,initialized,map,t,handler,method,handler,methods
AbstractHandlerMethodMapping -> protected void handlerMethodsInitialized(Map<T, HandlerMethod> handlerMethods);1430734106;Invoked after all handler methods have been detected._@param handlerMethods a read-only map with handler methods and mappings.;protected void handlerMethodsInitialized(Map<T, HandlerMethod> handlerMethods) {_	};invoked,after,all,handler,methods,have,been,detected,param,handler,methods,a,read,only,map,with,handler,methods,and,mappings;protected,void,handler,methods,initialized,map,t,handler,method,handler,methods
AbstractHandlerMethodMapping -> protected void handlerMethodsInitialized(Map<T, HandlerMethod> handlerMethods);1430774689;Invoked after all handler methods have been detected._@param handlerMethods a read-only map with handler methods and mappings.;protected void handlerMethodsInitialized(Map<T, HandlerMethod> handlerMethods) {_	};invoked,after,all,handler,methods,have,been,detected,param,handler,methods,a,read,only,map,with,handler,methods,and,mappings;protected,void,handler,methods,initialized,map,t,handler,method,handler,methods
AbstractHandlerMethodMapping -> protected void handlerMethodsInitialized(Map<T, HandlerMethod> handlerMethods);1430844966;Invoked after all handler methods have been detected._@param handlerMethods a read-only map with handler methods and mappings.;protected void handlerMethodsInitialized(Map<T, HandlerMethod> handlerMethods) {_	};invoked,after,all,handler,methods,have,been,detected,param,handler,methods,a,read,only,map,with,handler,methods,and,mappings;protected,void,handler,methods,initialized,map,t,handler,method,handler,methods
AbstractHandlerMethodMapping -> protected void handlerMethodsInitialized(Map<T, HandlerMethod> handlerMethods);1430844967;Invoked after all handler methods have been detected._@param handlerMethods a read-only map with handler methods and mappings.;protected void handlerMethodsInitialized(Map<T, HandlerMethod> handlerMethods) {_	};invoked,after,all,handler,methods,have,been,detected,param,handler,methods,a,read,only,map,with,handler,methods,and,mappings;protected,void,handler,methods,initialized,map,t,handler,method,handler,methods
AbstractHandlerMethodMapping -> protected void handlerMethodsInitialized(Map<T, HandlerMethod> handlerMethods);1431730371;Invoked after all handler methods have been detected._@param handlerMethods a read-only map with handler methods and mappings.;protected void handlerMethodsInitialized(Map<T, HandlerMethod> handlerMethods) {_	};invoked,after,all,handler,methods,have,been,detected,param,handler,methods,a,read,only,map,with,handler,methods,and,mappings;protected,void,handler,methods,initialized,map,t,handler,method,handler,methods
AbstractHandlerMethodMapping -> protected void handlerMethodsInitialized(Map<T, HandlerMethod> handlerMethods);1439294371;Invoked after all handler methods have been detected._@param handlerMethods a read-only map with handler methods and mappings.;protected void handlerMethodsInitialized(Map<T, HandlerMethod> handlerMethods) {_	};invoked,after,all,handler,methods,have,been,detected,param,handler,methods,a,read,only,map,with,handler,methods,and,mappings;protected,void,handler,methods,initialized,map,t,handler,method,handler,methods
AbstractHandlerMethodMapping -> protected void handlerMethodsInitialized(Map<T, HandlerMethod> handlerMethods);1447077465;Invoked after all handler methods have been detected._@param handlerMethods a read-only map with handler methods and mappings.;protected void handlerMethodsInitialized(Map<T, HandlerMethod> handlerMethods) {_	};invoked,after,all,handler,methods,have,been,detected,param,handler,methods,a,read,only,map,with,handler,methods,and,mappings;protected,void,handler,methods,initialized,map,t,handler,method,handler,methods
AbstractHandlerMethodMapping -> protected void handlerMethodsInitialized(Map<T, HandlerMethod> handlerMethods);1448483163;Invoked after all handler methods have been detected._@param handlerMethods a read-only map with handler methods and mappings.;protected void handlerMethodsInitialized(Map<T, HandlerMethod> handlerMethods) {_	};invoked,after,all,handler,methods,have,been,detected,param,handler,methods,a,read,only,map,with,handler,methods,and,mappings;protected,void,handler,methods,initialized,map,t,handler,method,handler,methods
AbstractHandlerMethodMapping -> protected void handlerMethodsInitialized(Map<T, HandlerMethod> handlerMethods);1452685925;Invoked after all handler methods have been detected._@param handlerMethods a read-only map with handler methods and mappings.;protected void handlerMethodsInitialized(Map<T, HandlerMethod> handlerMethods) {_	};invoked,after,all,handler,methods,have,been,detected,param,handler,methods,a,read,only,map,with,handler,methods,and,mappings;protected,void,handler,methods,initialized,map,t,handler,method,handler,methods
AbstractHandlerMethodMapping -> protected void handlerMethodsInitialized(Map<T, HandlerMethod> handlerMethods);1452873718;Invoked after all handler methods have been detected._@param handlerMethods a read-only map with handler methods and mappings.;protected void handlerMethodsInitialized(Map<T, HandlerMethod> handlerMethods) {_	};invoked,after,all,handler,methods,have,been,detected,param,handler,methods,a,read,only,map,with,handler,methods,and,mappings;protected,void,handler,methods,initialized,map,t,handler,method,handler,methods
AbstractHandlerMethodMapping -> protected void handlerMethodsInitialized(Map<T, HandlerMethod> handlerMethods);1453843788;Invoked after all handler methods have been detected._@param handlerMethods a read-only map with handler methods and mappings.;protected void handlerMethodsInitialized(Map<T, HandlerMethod> handlerMethods) {_	};invoked,after,all,handler,methods,have,been,detected,param,handler,methods,a,read,only,map,with,handler,methods,and,mappings;protected,void,handler,methods,initialized,map,t,handler,method,handler,methods
AbstractHandlerMethodMapping -> protected void handlerMethodsInitialized(Map<T, HandlerMethod> handlerMethods);1467730834;Invoked after all handler methods have been detected._@param handlerMethods a read-only map with handler methods and mappings.;protected void handlerMethodsInitialized(Map<T, HandlerMethod> handlerMethods) {_	};invoked,after,all,handler,methods,have,been,detected,param,handler,methods,a,read,only,map,with,handler,methods,and,mappings;protected,void,handler,methods,initialized,map,t,handler,method,handler,methods
AbstractHandlerMethodMapping -> protected void handlerMethodsInitialized(Map<T, HandlerMethod> handlerMethods);1468417354;Invoked after all handler methods have been detected._@param handlerMethods a read-only map with handler methods and mappings.;protected void handlerMethodsInitialized(Map<T, HandlerMethod> handlerMethods) {_	};invoked,after,all,handler,methods,have,been,detected,param,handler,methods,a,read,only,map,with,handler,methods,and,mappings;protected,void,handler,methods,initialized,map,t,handler,method,handler,methods
AbstractHandlerMethodMapping -> protected void handlerMethodsInitialized(Map<T, HandlerMethod> handlerMethods);1468596479;Invoked after all handler methods have been detected._@param handlerMethods a read-only map with handler methods and mappings.;protected void handlerMethodsInitialized(Map<T, HandlerMethod> handlerMethods) {_	};invoked,after,all,handler,methods,have,been,detected,param,handler,methods,a,read,only,map,with,handler,methods,and,mappings;protected,void,handler,methods,initialized,map,t,handler,method,handler,methods
AbstractHandlerMethodMapping -> protected void handlerMethodsInitialized(Map<T, HandlerMethod> handlerMethods);1474905889;Invoked after all handler methods have been detected._@param handlerMethods a read-only map with handler methods and mappings.;protected void handlerMethodsInitialized(Map<T, HandlerMethod> handlerMethods) {_	};invoked,after,all,handler,methods,have,been,detected,param,handler,methods,a,read,only,map,with,handler,methods,and,mappings;protected,void,handler,methods,initialized,map,t,handler,method,handler,methods
AbstractHandlerMethodMapping -> protected void handlerMethodsInitialized(Map<T, HandlerMethod> handlerMethods);1481813056;Invoked after all handler methods have been detected._@param handlerMethods a read-only map with handler methods and mappings.;protected void handlerMethodsInitialized(Map<T, HandlerMethod> handlerMethods) {_	};invoked,after,all,handler,methods,have,been,detected,param,handler,methods,a,read,only,map,with,handler,methods,and,mappings;protected,void,handler,methods,initialized,map,t,handler,method,handler,methods
AbstractHandlerMethodMapping -> protected void handlerMethodsInitialized(Map<T, HandlerMethod> handlerMethods);1485810955;Invoked after all handler methods have been detected._@param handlerMethods a read-only map with handler methods and mappings.;protected void handlerMethodsInitialized(Map<T, HandlerMethod> handlerMethods) {_	};invoked,after,all,handler,methods,have,been,detected,param,handler,methods,a,read,only,map,with,handler,methods,and,mappings;protected,void,handler,methods,initialized,map,t,handler,method,handler,methods
AbstractHandlerMethodMapping -> protected void handlerMethodsInitialized(Map<T, HandlerMethod> handlerMethods);1495868221;Invoked after all handler methods have been detected._@param handlerMethods a read-only map with handler methods and mappings.;protected void handlerMethodsInitialized(Map<T, HandlerMethod> handlerMethods) {_	};invoked,after,all,handler,methods,have,been,detected,param,handler,methods,a,read,only,map,with,handler,methods,and,mappings;protected,void,handler,methods,initialized,map,t,handler,method,handler,methods
AbstractHandlerMethodMapping -> protected void handlerMethodsInitialized(Map<T, HandlerMethod> handlerMethods);1496837955;Invoked after all handler methods have been detected._@param handlerMethods a read-only map with handler methods and mappings.;protected void handlerMethodsInitialized(Map<T, HandlerMethod> handlerMethods) {_	};invoked,after,all,handler,methods,have,been,detected,param,handler,methods,a,read,only,map,with,handler,methods,and,mappings;protected,void,handler,methods,initialized,map,t,handler,method,handler,methods
AbstractHandlerMethodMapping -> protected void handlerMethodsInitialized(Map<T, HandlerMethod> handlerMethods);1497251962;Invoked after all handler methods have been detected._@param handlerMethods a read-only map with handler methods and mappings.;protected void handlerMethodsInitialized(Map<T, HandlerMethod> handlerMethods) {_	};invoked,after,all,handler,methods,have,been,detected,param,handler,methods,a,read,only,map,with,handler,methods,and,mappings;protected,void,handler,methods,initialized,map,t,handler,method,handler,methods
AbstractHandlerMethodMapping -> protected void handlerMethodsInitialized(Map<T, HandlerMethod> handlerMethods);1498780456;Invoked after all handler methods have been detected._@param handlerMethods a read-only map with handler methods and mappings.;protected void handlerMethodsInitialized(Map<T, HandlerMethod> handlerMethods) {_	};invoked,after,all,handler,methods,have,been,detected,param,handler,methods,a,read,only,map,with,handler,methods,and,mappings;protected,void,handler,methods,initialized,map,t,handler,method,handler,methods
AbstractHandlerMethodMapping -> protected void handlerMethodsInitialized(Map<T, HandlerMethod> handlerMethods);1518772998;Invoked after all handler methods have been detected._@param handlerMethods a read-only map with handler methods and mappings.;protected void handlerMethodsInitialized(Map<T, HandlerMethod> handlerMethods) {_	};invoked,after,all,handler,methods,have,been,detected,param,handler,methods,a,read,only,map,with,handler,methods,and,mappings;protected,void,handler,methods,initialized,map,t,handler,method,handler,methods
AbstractHandlerMethodMapping -> protected void handlerMethodsInitialized(Map<T, HandlerMethod> handlerMethods);1522103912;Invoked after all handler methods have been detected._@param handlerMethods a read-only map with handler methods and mappings.;protected void handlerMethodsInitialized(Map<T, HandlerMethod> handlerMethods) {_	};invoked,after,all,handler,methods,have,been,detected,param,handler,methods,a,read,only,map,with,handler,methods,and,mappings;protected,void,handler,methods,initialized,map,t,handler,method,handler,methods
AbstractHandlerMethodMapping -> protected void handlerMethodsInitialized(Map<T, HandlerMethod> handlerMethods);1522843494;Invoked after all handler methods have been detected._@param handlerMethods a read-only map with handler methods and mappings.;protected void handlerMethodsInitialized(Map<T, HandlerMethod> handlerMethods) {_	};invoked,after,all,handler,methods,have,been,detected,param,handler,methods,a,read,only,map,with,handler,methods,and,mappings;protected,void,handler,methods,initialized,map,t,handler,method,handler,methods
AbstractHandlerMethodMapping -> protected void handlerMethodsInitialized(Map<T, HandlerMethod> handlerMethods);1529361191;Invoked after all handler methods have been detected._@param handlerMethods a read-only map with handler methods and mappings.;protected void handlerMethodsInitialized(Map<T, HandlerMethod> handlerMethods) {_	};invoked,after,all,handler,methods,have,been,detected,param,handler,methods,a,read,only,map,with,handler,methods,and,mappings;protected,void,handler,methods,initialized,map,t,handler,method,handler,methods
AbstractHandlerMethodMapping -> protected void handlerMethodsInitialized(Map<T, HandlerMethod> handlerMethods);1529721864;Invoked after all handler methods have been detected._@param handlerMethods a read-only map with handler methods and mappings.;protected void handlerMethodsInitialized(Map<T, HandlerMethod> handlerMethods) {_	};invoked,after,all,handler,methods,have,been,detected,param,handler,methods,a,read,only,map,with,handler,methods,and,mappings;protected,void,handler,methods,initialized,map,t,handler,method,handler,methods
AbstractHandlerMethodMapping -> protected void handlerMethodsInitialized(Map<T, HandlerMethod> handlerMethods);1530174524;Invoked after all handler methods have been detected._@param handlerMethods a read-only map with handler methods and mappings.;protected void handlerMethodsInitialized(Map<T, HandlerMethod> handlerMethods) {_	};invoked,after,all,handler,methods,have,been,detected,param,handler,methods,a,read,only,map,with,handler,methods,and,mappings;protected,void,handler,methods,initialized,map,t,handler,method,handler,methods
AbstractHandlerMethodMapping -> protected void handlerMethodsInitialized(Map<T, HandlerMethod> handlerMethods);1530174524;Invoked after all handler methods have been detected._@param handlerMethods a read-only map with handler methods and mappings.;protected void handlerMethodsInitialized(Map<T, HandlerMethod> handlerMethods) {_	};invoked,after,all,handler,methods,have,been,detected,param,handler,methods,a,read,only,map,with,handler,methods,and,mappings;protected,void,handler,methods,initialized,map,t,handler,method,handler,methods
AbstractHandlerMethodMapping -> protected void handlerMethodsInitialized(Map<T, HandlerMethod> handlerMethods);1533943217;Invoked after all handler methods have been detected._@param handlerMethods a read-only map with handler methods and mappings.;protected void handlerMethodsInitialized(Map<T, HandlerMethod> handlerMethods) {_		_		int total = handlerMethods.size()__		if ((logger.isTraceEnabled() && total == 0) || (logger.isDebugEnabled() && total > 0) ) {_			logger.debug(total + " mappings in " + formatMappingName())__		}_	};invoked,after,all,handler,methods,have,been,detected,param,handler,methods,a,read,only,map,with,handler,methods,and,mappings;protected,void,handler,methods,initialized,map,t,handler,method,handler,methods,int,total,handler,methods,size,if,logger,is,trace,enabled,total,0,logger,is,debug,enabled,total,0,logger,debug,total,mappings,in,format,mapping,name
AbstractHandlerMethodMapping -> protected void handlerMethodsInitialized(Map<T, HandlerMethod> handlerMethods);1542407418;Invoked after all handler methods have been detected._@param handlerMethods a read-only map with handler methods and mappings.;protected void handlerMethodsInitialized(Map<T, HandlerMethod> handlerMethods) {_		_		int total = handlerMethods.size()__		if ((logger.isTraceEnabled() && total == 0) || (logger.isDebugEnabled() && total > 0) ) {_			logger.debug(total + " mappings in " + formatMappingName())__		}_	};invoked,after,all,handler,methods,have,been,detected,param,handler,methods,a,read,only,map,with,handler,methods,and,mappings;protected,void,handler,methods,initialized,map,t,handler,method,handler,methods,int,total,handler,methods,size,if,logger,is,trace,enabled,total,0,logger,is,debug,enabled,total,0,logger,debug,total,mappings,in,format,mapping,name
AbstractHandlerMethodMapping -> protected void handlerMethodsInitialized(Map<T, HandlerMethod> handlerMethods);1542771062;Invoked after all handler methods have been detected._@param handlerMethods a read-only map with handler methods and mappings.;protected void handlerMethodsInitialized(Map<T, HandlerMethod> handlerMethods) {_		_		int total = handlerMethods.size()__		if ((logger.isTraceEnabled() && total == 0) || (logger.isDebugEnabled() && total > 0) ) {_			logger.debug(total + " mappings in " + formatMappingName())__		}_	};invoked,after,all,handler,methods,have,been,detected,param,handler,methods,a,read,only,map,with,handler,methods,and,mappings;protected,void,handler,methods,initialized,map,t,handler,method,handler,methods,int,total,handler,methods,size,if,logger,is,trace,enabled,total,0,logger,is,debug,enabled,total,0,logger,debug,total,mappings,in,format,mapping,name
AbstractHandlerMethodMapping -> protected void handlerMethodsInitialized(Map<T, HandlerMethod> handlerMethods);1548427561;Invoked after all handler methods have been detected._@param handlerMethods a read-only map with handler methods and mappings.;protected void handlerMethodsInitialized(Map<T, HandlerMethod> handlerMethods) {_		_		int total = handlerMethods.size()__		if ((logger.isTraceEnabled() && total == 0) || (logger.isDebugEnabled() && total > 0) ) {_			logger.debug(total + " mappings in " + formatMappingName())__		}_	};invoked,after,all,handler,methods,have,been,detected,param,handler,methods,a,read,only,map,with,handler,methods,and,mappings;protected,void,handler,methods,initialized,map,t,handler,method,handler,methods,int,total,handler,methods,size,if,logger,is,trace,enabled,total,0,logger,is,debug,enabled,total,0,logger,debug,total,mappings,in,format,mapping,name
AbstractHandlerMethodMapping -> protected void handlerMethodsInitialized(Map<T, HandlerMethod> handlerMethods);1551093473;Invoked after all handler methods have been detected._@param handlerMethods a read-only map with handler methods and mappings.;protected void handlerMethodsInitialized(Map<T, HandlerMethod> handlerMethods) {_		_		int total = handlerMethods.size()__		if ((logger.isTraceEnabled() && total == 0) || (logger.isDebugEnabled() && total > 0) ) {_			logger.debug(total + " mappings in " + formatMappingName())__		}_	};invoked,after,all,handler,methods,have,been,detected,param,handler,methods,a,read,only,map,with,handler,methods,and,mappings;protected,void,handler,methods,initialized,map,t,handler,method,handler,methods,int,total,handler,methods,size,if,logger,is,trace,enabled,total,0,logger,is,debug,enabled,total,0,logger,debug,total,mappings,in,format,mapping,name
AbstractHandlerMethodMapping -> MappingRegistry -> public List<HandlerMethod> getHandlerMethodsByMappingName(String mappingName);1430734106;Return handler methods by mapping name. Thread-safe for concurrent use.;public List<HandlerMethod> getHandlerMethodsByMappingName(String mappingName) {_			return this.mappingNameLookup.get(mappingName)__		};return,handler,methods,by,mapping,name,thread,safe,for,concurrent,use;public,list,handler,method,get,handler,methods,by,mapping,name,string,mapping,name,return,this,mapping,name,lookup,get,mapping,name
AbstractHandlerMethodMapping -> MappingRegistry -> public List<HandlerMethod> getHandlerMethodsByMappingName(String mappingName);1430774689;Return handler methods by mapping name. Thread-safe for concurrent use.;public List<HandlerMethod> getHandlerMethodsByMappingName(String mappingName) {_			return this.mappingNameLookup.get(mappingName)__		};return,handler,methods,by,mapping,name,thread,safe,for,concurrent,use;public,list,handler,method,get,handler,methods,by,mapping,name,string,mapping,name,return,this,mapping,name,lookup,get,mapping,name
AbstractHandlerMethodMapping -> MappingRegistry -> public List<HandlerMethod> getHandlerMethodsByMappingName(String mappingName);1430844966;Return handler methods by mapping name. Thread-safe for concurrent use.;public List<HandlerMethod> getHandlerMethodsByMappingName(String mappingName) {_			return this.nameLookup.get(mappingName)__		};return,handler,methods,by,mapping,name,thread,safe,for,concurrent,use;public,list,handler,method,get,handler,methods,by,mapping,name,string,mapping,name,return,this,name,lookup,get,mapping,name
AbstractHandlerMethodMapping -> MappingRegistry -> public List<HandlerMethod> getHandlerMethodsByMappingName(String mappingName);1430844967;Return handler methods by mapping name. Thread-safe for concurrent use.;public List<HandlerMethod> getHandlerMethodsByMappingName(String mappingName) {_			return this.nameLookup.get(mappingName)__		};return,handler,methods,by,mapping,name,thread,safe,for,concurrent,use;public,list,handler,method,get,handler,methods,by,mapping,name,string,mapping,name,return,this,name,lookup,get,mapping,name
AbstractHandlerMethodMapping -> MappingRegistry -> public List<HandlerMethod> getHandlerMethodsByMappingName(String mappingName);1431730371;Return handler methods by mapping name. Thread-safe for concurrent use.;public List<HandlerMethod> getHandlerMethodsByMappingName(String mappingName) {_			return this.nameLookup.get(mappingName)__		};return,handler,methods,by,mapping,name,thread,safe,for,concurrent,use;public,list,handler,method,get,handler,methods,by,mapping,name,string,mapping,name,return,this,name,lookup,get,mapping,name
AbstractHandlerMethodMapping -> MappingRegistry -> public List<HandlerMethod> getHandlerMethodsByMappingName(String mappingName);1439294371;Return handler methods by mapping name. Thread-safe for concurrent use.;public List<HandlerMethod> getHandlerMethodsByMappingName(String mappingName) {_			return this.nameLookup.get(mappingName)__		};return,handler,methods,by,mapping,name,thread,safe,for,concurrent,use;public,list,handler,method,get,handler,methods,by,mapping,name,string,mapping,name,return,this,name,lookup,get,mapping,name
AbstractHandlerMethodMapping -> MappingRegistry -> public List<HandlerMethod> getHandlerMethodsByMappingName(String mappingName);1447077465;Return handler methods by mapping name. Thread-safe for concurrent use.;public List<HandlerMethod> getHandlerMethodsByMappingName(String mappingName) {_			return this.nameLookup.get(mappingName)__		};return,handler,methods,by,mapping,name,thread,safe,for,concurrent,use;public,list,handler,method,get,handler,methods,by,mapping,name,string,mapping,name,return,this,name,lookup,get,mapping,name
AbstractHandlerMethodMapping -> MappingRegistry -> public List<HandlerMethod> getHandlerMethodsByMappingName(String mappingName);1448483163;Return handler methods by mapping name. Thread-safe for concurrent use.;public List<HandlerMethod> getHandlerMethodsByMappingName(String mappingName) {_			return this.nameLookup.get(mappingName)__		};return,handler,methods,by,mapping,name,thread,safe,for,concurrent,use;public,list,handler,method,get,handler,methods,by,mapping,name,string,mapping,name,return,this,name,lookup,get,mapping,name
AbstractHandlerMethodMapping -> MappingRegistry -> public List<HandlerMethod> getHandlerMethodsByMappingName(String mappingName);1452685925;Return handler methods by mapping name. Thread-safe for concurrent use.;public List<HandlerMethod> getHandlerMethodsByMappingName(String mappingName) {_			return this.nameLookup.get(mappingName)__		};return,handler,methods,by,mapping,name,thread,safe,for,concurrent,use;public,list,handler,method,get,handler,methods,by,mapping,name,string,mapping,name,return,this,name,lookup,get,mapping,name
AbstractHandlerMethodMapping -> MappingRegistry -> public List<HandlerMethod> getHandlerMethodsByMappingName(String mappingName);1452873718;Return handler methods by mapping name. Thread-safe for concurrent use.;public List<HandlerMethod> getHandlerMethodsByMappingName(String mappingName) {_			return this.nameLookup.get(mappingName)__		};return,handler,methods,by,mapping,name,thread,safe,for,concurrent,use;public,list,handler,method,get,handler,methods,by,mapping,name,string,mapping,name,return,this,name,lookup,get,mapping,name
AbstractHandlerMethodMapping -> MappingRegistry -> public List<HandlerMethod> getHandlerMethodsByMappingName(String mappingName);1453843788;Return handler methods by mapping name. Thread-safe for concurrent use.;public List<HandlerMethod> getHandlerMethodsByMappingName(String mappingName) {_			return this.nameLookup.get(mappingName)__		};return,handler,methods,by,mapping,name,thread,safe,for,concurrent,use;public,list,handler,method,get,handler,methods,by,mapping,name,string,mapping,name,return,this,name,lookup,get,mapping,name
AbstractHandlerMethodMapping -> MappingRegistry -> public List<HandlerMethod> getHandlerMethodsByMappingName(String mappingName);1467730834;Return handler methods by mapping name. Thread-safe for concurrent use.;public List<HandlerMethod> getHandlerMethodsByMappingName(String mappingName) {_			return this.nameLookup.get(mappingName)__		};return,handler,methods,by,mapping,name,thread,safe,for,concurrent,use;public,list,handler,method,get,handler,methods,by,mapping,name,string,mapping,name,return,this,name,lookup,get,mapping,name
AbstractHandlerMethodMapping -> MappingRegistry -> public List<HandlerMethod> getHandlerMethodsByMappingName(String mappingName);1468417354;Return handler methods by mapping name. Thread-safe for concurrent use.;public List<HandlerMethod> getHandlerMethodsByMappingName(String mappingName) {_			return this.nameLookup.get(mappingName)__		};return,handler,methods,by,mapping,name,thread,safe,for,concurrent,use;public,list,handler,method,get,handler,methods,by,mapping,name,string,mapping,name,return,this,name,lookup,get,mapping,name
AbstractHandlerMethodMapping -> MappingRegistry -> public List<HandlerMethod> getHandlerMethodsByMappingName(String mappingName);1468596479;Return handler methods by mapping name. Thread-safe for concurrent use.;public List<HandlerMethod> getHandlerMethodsByMappingName(String mappingName) {_			return this.nameLookup.get(mappingName)__		};return,handler,methods,by,mapping,name,thread,safe,for,concurrent,use;public,list,handler,method,get,handler,methods,by,mapping,name,string,mapping,name,return,this,name,lookup,get,mapping,name
AbstractHandlerMethodMapping -> MappingRegistry -> public List<HandlerMethod> getHandlerMethodsByMappingName(String mappingName);1474905889;Return handler methods by mapping name. Thread-safe for concurrent use.;public List<HandlerMethod> getHandlerMethodsByMappingName(String mappingName) {_			return this.nameLookup.get(mappingName)__		};return,handler,methods,by,mapping,name,thread,safe,for,concurrent,use;public,list,handler,method,get,handler,methods,by,mapping,name,string,mapping,name,return,this,name,lookup,get,mapping,name
AbstractHandlerMethodMapping -> MappingRegistry -> public List<HandlerMethod> getHandlerMethodsByMappingName(String mappingName);1481813056;Return handler methods by mapping name. Thread-safe for concurrent use.;public List<HandlerMethod> getHandlerMethodsByMappingName(String mappingName) {_			return this.nameLookup.get(mappingName)__		};return,handler,methods,by,mapping,name,thread,safe,for,concurrent,use;public,list,handler,method,get,handler,methods,by,mapping,name,string,mapping,name,return,this,name,lookup,get,mapping,name
AbstractHandlerMethodMapping -> MappingRegistry -> public List<HandlerMethod> getHandlerMethodsByMappingName(String mappingName);1485810955;Return handler methods by mapping name. Thread-safe for concurrent use.;public List<HandlerMethod> getHandlerMethodsByMappingName(String mappingName) {_			return this.nameLookup.get(mappingName)__		};return,handler,methods,by,mapping,name,thread,safe,for,concurrent,use;public,list,handler,method,get,handler,methods,by,mapping,name,string,mapping,name,return,this,name,lookup,get,mapping,name
AbstractHandlerMethodMapping -> MappingRegistry -> public List<HandlerMethod> getHandlerMethodsByMappingName(String mappingName);1495868221;Return handler methods by mapping name. Thread-safe for concurrent use.;public List<HandlerMethod> getHandlerMethodsByMappingName(String mappingName) {_			return this.nameLookup.get(mappingName)__		};return,handler,methods,by,mapping,name,thread,safe,for,concurrent,use;public,list,handler,method,get,handler,methods,by,mapping,name,string,mapping,name,return,this,name,lookup,get,mapping,name
AbstractHandlerMethodMapping -> MappingRegistry -> public List<HandlerMethod> getHandlerMethodsByMappingName(String mappingName);1496837955;Return handler methods by mapping name. Thread-safe for concurrent use.;public List<HandlerMethod> getHandlerMethodsByMappingName(String mappingName) {_			return this.nameLookup.get(mappingName)__		};return,handler,methods,by,mapping,name,thread,safe,for,concurrent,use;public,list,handler,method,get,handler,methods,by,mapping,name,string,mapping,name,return,this,name,lookup,get,mapping,name
AbstractHandlerMethodMapping -> MappingRegistry -> public List<HandlerMethod> getHandlerMethodsByMappingName(String mappingName);1497251962;Return handler methods by mapping name. Thread-safe for concurrent use.;public List<HandlerMethod> getHandlerMethodsByMappingName(String mappingName) {_			return this.nameLookup.get(mappingName)__		};return,handler,methods,by,mapping,name,thread,safe,for,concurrent,use;public,list,handler,method,get,handler,methods,by,mapping,name,string,mapping,name,return,this,name,lookup,get,mapping,name
AbstractHandlerMethodMapping -> MappingRegistry -> public List<HandlerMethod> getHandlerMethodsByMappingName(String mappingName);1498780456;Return handler methods by mapping name. Thread-safe for concurrent use.;public List<HandlerMethod> getHandlerMethodsByMappingName(String mappingName) {_			return this.nameLookup.get(mappingName)__		};return,handler,methods,by,mapping,name,thread,safe,for,concurrent,use;public,list,handler,method,get,handler,methods,by,mapping,name,string,mapping,name,return,this,name,lookup,get,mapping,name
AbstractHandlerMethodMapping -> MappingRegistry -> public List<HandlerMethod> getHandlerMethodsByMappingName(String mappingName);1518772998;Return handler methods by mapping name. Thread-safe for concurrent use.;public List<HandlerMethod> getHandlerMethodsByMappingName(String mappingName) {_			return this.nameLookup.get(mappingName)__		};return,handler,methods,by,mapping,name,thread,safe,for,concurrent,use;public,list,handler,method,get,handler,methods,by,mapping,name,string,mapping,name,return,this,name,lookup,get,mapping,name
AbstractHandlerMethodMapping -> MappingRegistry -> public List<HandlerMethod> getHandlerMethodsByMappingName(String mappingName);1522103912;Return handler methods by mapping name. Thread-safe for concurrent use.;public List<HandlerMethod> getHandlerMethodsByMappingName(String mappingName) {_			return this.nameLookup.get(mappingName)__		};return,handler,methods,by,mapping,name,thread,safe,for,concurrent,use;public,list,handler,method,get,handler,methods,by,mapping,name,string,mapping,name,return,this,name,lookup,get,mapping,name
AbstractHandlerMethodMapping -> MappingRegistry -> public List<HandlerMethod> getHandlerMethodsByMappingName(String mappingName);1522843494;Return handler methods by mapping name. Thread-safe for concurrent use.;public List<HandlerMethod> getHandlerMethodsByMappingName(String mappingName) {_			return this.nameLookup.get(mappingName)__		};return,handler,methods,by,mapping,name,thread,safe,for,concurrent,use;public,list,handler,method,get,handler,methods,by,mapping,name,string,mapping,name,return,this,name,lookup,get,mapping,name
AbstractHandlerMethodMapping -> MappingRegistry -> public List<HandlerMethod> getHandlerMethodsByMappingName(String mappingName);1529361191;Return handler methods by mapping name. Thread-safe for concurrent use.;public List<HandlerMethod> getHandlerMethodsByMappingName(String mappingName) {_			return this.nameLookup.get(mappingName)__		};return,handler,methods,by,mapping,name,thread,safe,for,concurrent,use;public,list,handler,method,get,handler,methods,by,mapping,name,string,mapping,name,return,this,name,lookup,get,mapping,name
AbstractHandlerMethodMapping -> MappingRegistry -> public List<HandlerMethod> getHandlerMethodsByMappingName(String mappingName);1529721864;Return handler methods by mapping name. Thread-safe for concurrent use.;public List<HandlerMethod> getHandlerMethodsByMappingName(String mappingName) {_			return this.nameLookup.get(mappingName)__		};return,handler,methods,by,mapping,name,thread,safe,for,concurrent,use;public,list,handler,method,get,handler,methods,by,mapping,name,string,mapping,name,return,this,name,lookup,get,mapping,name
AbstractHandlerMethodMapping -> MappingRegistry -> public List<HandlerMethod> getHandlerMethodsByMappingName(String mappingName);1530174524;Return handler methods by mapping name. Thread-safe for concurrent use.;public List<HandlerMethod> getHandlerMethodsByMappingName(String mappingName) {_			return this.nameLookup.get(mappingName)__		};return,handler,methods,by,mapping,name,thread,safe,for,concurrent,use;public,list,handler,method,get,handler,methods,by,mapping,name,string,mapping,name,return,this,name,lookup,get,mapping,name
AbstractHandlerMethodMapping -> MappingRegistry -> public List<HandlerMethod> getHandlerMethodsByMappingName(String mappingName);1530174524;Return handler methods by mapping name. Thread-safe for concurrent use.;public List<HandlerMethod> getHandlerMethodsByMappingName(String mappingName) {_			return this.nameLookup.get(mappingName)__		};return,handler,methods,by,mapping,name,thread,safe,for,concurrent,use;public,list,handler,method,get,handler,methods,by,mapping,name,string,mapping,name,return,this,name,lookup,get,mapping,name
AbstractHandlerMethodMapping -> MappingRegistry -> public List<HandlerMethod> getHandlerMethodsByMappingName(String mappingName);1533943217;Return handler methods by mapping name. Thread-safe for concurrent use.;public List<HandlerMethod> getHandlerMethodsByMappingName(String mappingName) {_			return this.nameLookup.get(mappingName)__		};return,handler,methods,by,mapping,name,thread,safe,for,concurrent,use;public,list,handler,method,get,handler,methods,by,mapping,name,string,mapping,name,return,this,name,lookup,get,mapping,name
AbstractHandlerMethodMapping -> MappingRegistry -> public List<HandlerMethod> getHandlerMethodsByMappingName(String mappingName);1542407418;Return handler methods by mapping name. Thread-safe for concurrent use.;public List<HandlerMethod> getHandlerMethodsByMappingName(String mappingName) {_			return this.nameLookup.get(mappingName)__		};return,handler,methods,by,mapping,name,thread,safe,for,concurrent,use;public,list,handler,method,get,handler,methods,by,mapping,name,string,mapping,name,return,this,name,lookup,get,mapping,name
AbstractHandlerMethodMapping -> MappingRegistry -> public List<HandlerMethod> getHandlerMethodsByMappingName(String mappingName);1542771062;Return handler methods by mapping name. Thread-safe for concurrent use.;public List<HandlerMethod> getHandlerMethodsByMappingName(String mappingName) {_			return this.nameLookup.get(mappingName)__		};return,handler,methods,by,mapping,name,thread,safe,for,concurrent,use;public,list,handler,method,get,handler,methods,by,mapping,name,string,mapping,name,return,this,name,lookup,get,mapping,name
AbstractHandlerMethodMapping -> MappingRegistry -> public List<HandlerMethod> getHandlerMethodsByMappingName(String mappingName);1548427561;Return handler methods by mapping name. Thread-safe for concurrent use.;public List<HandlerMethod> getHandlerMethodsByMappingName(String mappingName) {_			return this.nameLookup.get(mappingName)__		};return,handler,methods,by,mapping,name,thread,safe,for,concurrent,use;public,list,handler,method,get,handler,methods,by,mapping,name,string,mapping,name,return,this,name,lookup,get,mapping,name
AbstractHandlerMethodMapping -> MappingRegistry -> public List<HandlerMethod> getHandlerMethodsByMappingName(String mappingName);1551093473;Return handler methods by mapping name. Thread-safe for concurrent use.;public List<HandlerMethod> getHandlerMethodsByMappingName(String mappingName) {_			return this.nameLookup.get(mappingName)__		};return,handler,methods,by,mapping,name,thread,safe,for,concurrent,use;public,list,handler,method,get,handler,methods,by,mapping,name,string,mapping,name,return,this,name,lookup,get,mapping,name
AbstractHandlerMethodMapping -> @Deprecated 	protected void registerHandlerMethod(Object handler, Method method, T mapping);1430774689;Register a handler method and its unique mapping. Invoked at startup for_each detected handler method._@param handler the bean name of the handler or the handler instance_@param method the method to register_@param mapping the mapping conditions associated with the handler method_@throws IllegalStateException if another method was already registered_under the same mapping_@deprecated as of 4.2 you can invoke the public methods_{@link #registerMapping(Object, Object, Method)} and_{@link #unregisterMapping(Object)} during initialization or at runtime,_i.e. after initialization is complete.;@Deprecated_	protected void registerHandlerMethod(Object handler, Method method, T mapping) {_		this.mappingRegistry.register(mapping, handler, method)__	};register,a,handler,method,and,its,unique,mapping,invoked,at,startup,for,each,detected,handler,method,param,handler,the,bean,name,of,the,handler,or,the,handler,instance,param,method,the,method,to,register,param,mapping,the,mapping,conditions,associated,with,the,handler,method,throws,illegal,state,exception,if,another,method,was,already,registered,under,the,same,mapping,deprecated,as,of,4,2,you,can,invoke,the,public,methods,link,register,mapping,object,object,method,and,link,unregister,mapping,object,during,initialization,or,at,runtime,i,e,after,initialization,is,complete;deprecated,protected,void,register,handler,method,object,handler,method,method,t,mapping,this,mapping,registry,register,mapping,handler,method
AbstractHandlerMethodMapping -> @Deprecated 	protected void registerHandlerMethod(Object handler, Method method, T mapping);1430844966;Register a handler method and its unique mapping. Invoked at startup for_each detected handler method._@param handler the bean name of the handler or the handler instance_@param method the method to register_@param mapping the mapping conditions associated with the handler method_@throws IllegalStateException if another method was already registered_under the same mapping_@deprecated as of 4.2 you can invoke the public methods_{@link #registerMapping(Object, Object, Method)} and_{@link #unregisterMapping(Object)} during initialization or at runtime,_i.e. after initialization is complete.;@Deprecated_	protected void registerHandlerMethod(Object handler, Method method, T mapping) {_		this.mappingRegistry.register(mapping, handler, method)__	};register,a,handler,method,and,its,unique,mapping,invoked,at,startup,for,each,detected,handler,method,param,handler,the,bean,name,of,the,handler,or,the,handler,instance,param,method,the,method,to,register,param,mapping,the,mapping,conditions,associated,with,the,handler,method,throws,illegal,state,exception,if,another,method,was,already,registered,under,the,same,mapping,deprecated,as,of,4,2,you,can,invoke,the,public,methods,link,register,mapping,object,object,method,and,link,unregister,mapping,object,during,initialization,or,at,runtime,i,e,after,initialization,is,complete;deprecated,protected,void,register,handler,method,object,handler,method,method,t,mapping,this,mapping,registry,register,mapping,handler,method
AbstractHandlerMethodMapping -> @Deprecated 	protected void registerHandlerMethod(Object handler, Method method, T mapping);1430844967;Register a handler method and its unique mapping. Invoked at startup for_each detected handler method._@param handler the bean name of the handler or the handler instance_@param method the method to register_@param mapping the mapping conditions associated with the handler method_@throws IllegalStateException if another method was already registered_under the same mapping_@deprecated as of 4.2 you can invoke the public methods_{@link #registerMapping(Object, Object, Method)} and_{@link #unregisterMapping(Object)} during initialization or at runtime,_i.e. after initialization is complete.;@Deprecated_	protected void registerHandlerMethod(Object handler, Method method, T mapping) {_		this.mappingRegistry.register(mapping, handler, method)__	};register,a,handler,method,and,its,unique,mapping,invoked,at,startup,for,each,detected,handler,method,param,handler,the,bean,name,of,the,handler,or,the,handler,instance,param,method,the,method,to,register,param,mapping,the,mapping,conditions,associated,with,the,handler,method,throws,illegal,state,exception,if,another,method,was,already,registered,under,the,same,mapping,deprecated,as,of,4,2,you,can,invoke,the,public,methods,link,register,mapping,object,object,method,and,link,unregister,mapping,object,during,initialization,or,at,runtime,i,e,after,initialization,is,complete;deprecated,protected,void,register,handler,method,object,handler,method,method,t,mapping,this,mapping,registry,register,mapping,handler,method
AbstractHandlerMethodMapping -> @Deprecated 	protected void registerHandlerMethod(Object handler, Method method, T mapping);1431730371;Register a handler method and its unique mapping. Invoked at startup for_each detected handler method._@param handler the bean name of the handler or the handler instance_@param method the method to register_@param mapping the mapping conditions associated with the handler method_@throws IllegalStateException if another method was already registered_under the same mapping_@deprecated as of 4.2 you can invoke the public methods_{@link #registerMapping(Object, Object, Method)} and_{@link #unregisterMapping(Object)} during initialization or at runtime,_i.e. after initialization is complete.;@Deprecated_	protected void registerHandlerMethod(Object handler, Method method, T mapping) {_		this.mappingRegistry.register(mapping, handler, method)__	};register,a,handler,method,and,its,unique,mapping,invoked,at,startup,for,each,detected,handler,method,param,handler,the,bean,name,of,the,handler,or,the,handler,instance,param,method,the,method,to,register,param,mapping,the,mapping,conditions,associated,with,the,handler,method,throws,illegal,state,exception,if,another,method,was,already,registered,under,the,same,mapping,deprecated,as,of,4,2,you,can,invoke,the,public,methods,link,register,mapping,object,object,method,and,link,unregister,mapping,object,during,initialization,or,at,runtime,i,e,after,initialization,is,complete;deprecated,protected,void,register,handler,method,object,handler,method,method,t,mapping,this,mapping,registry,register,mapping,handler,method
AbstractHandlerMethodMapping -> @Deprecated 	protected void registerHandlerMethod(Object handler, Method method, T mapping);1439294371;Register a handler method and its unique mapping. Invoked at startup for_each detected handler method._@param handler the bean name of the handler or the handler instance_@param method the method to register_@param mapping the mapping conditions associated with the handler method_@throws IllegalStateException if another method was already registered_under the same mapping_@deprecated as of 4.2. You can now invoke the public methods_{@link #registerMapping(Object, Object, Method)} and_{@link #unregisterMapping(Object)} during initialization or at runtime,_i.e. after initialization is complete.;@Deprecated_	protected void registerHandlerMethod(Object handler, Method method, T mapping) {_		this.mappingRegistry.register(mapping, handler, method)__	};register,a,handler,method,and,its,unique,mapping,invoked,at,startup,for,each,detected,handler,method,param,handler,the,bean,name,of,the,handler,or,the,handler,instance,param,method,the,method,to,register,param,mapping,the,mapping,conditions,associated,with,the,handler,method,throws,illegal,state,exception,if,another,method,was,already,registered,under,the,same,mapping,deprecated,as,of,4,2,you,can,now,invoke,the,public,methods,link,register,mapping,object,object,method,and,link,unregister,mapping,object,during,initialization,or,at,runtime,i,e,after,initialization,is,complete;deprecated,protected,void,register,handler,method,object,handler,method,method,t,mapping,this,mapping,registry,register,mapping,handler,method
AbstractHandlerMethodMapping -> protected void handleMatch(T mapping, String lookupPath, HttpServletRequest request);1328020251;Invoked when a matching mapping is found._@param mapping the matching mapping_@param lookupPath mapping lookup path within the current servlet mapping_@param request the current request;protected void handleMatch(T mapping, String lookupPath, HttpServletRequest request) {_		request.setAttribute(HandlerMapping.PATH_WITHIN_HANDLER_MAPPING_ATTRIBUTE, lookupPath)__	};invoked,when,a,matching,mapping,is,found,param,mapping,the,matching,mapping,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,request,the,current,request;protected,void,handle,match,t,mapping,string,lookup,path,http,servlet,request,request,request,set,attribute,handler,mapping,lookup,path
AbstractHandlerMethodMapping -> protected void handleMatch(T mapping, String lookupPath, HttpServletRequest request);1328022204;Invoked when a matching mapping is found._@param mapping the matching mapping_@param lookupPath mapping lookup path within the current servlet mapping_@param request the current request;protected void handleMatch(T mapping, String lookupPath, HttpServletRequest request) {_		request.setAttribute(HandlerMapping.PATH_WITHIN_HANDLER_MAPPING_ATTRIBUTE, lookupPath)__	};invoked,when,a,matching,mapping,is,found,param,mapping,the,matching,mapping,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,request,the,current,request;protected,void,handle,match,t,mapping,string,lookup,path,http,servlet,request,request,request,set,attribute,handler,mapping,lookup,path
AbstractHandlerMethodMapping -> protected void handleMatch(T mapping, String lookupPath, HttpServletRequest request);1336682556;Invoked when a matching mapping is found._@param mapping the matching mapping_@param lookupPath mapping lookup path within the current servlet mapping_@param request the current request;protected void handleMatch(T mapping, String lookupPath, HttpServletRequest request) {_		request.setAttribute(HandlerMapping.PATH_WITHIN_HANDLER_MAPPING_ATTRIBUTE, lookupPath)__	};invoked,when,a,matching,mapping,is,found,param,mapping,the,matching,mapping,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,request,the,current,request;protected,void,handle,match,t,mapping,string,lookup,path,http,servlet,request,request,request,set,attribute,handler,mapping,lookup,path
AbstractHandlerMethodMapping -> protected void handleMatch(T mapping, String lookupPath, HttpServletRequest request);1341441111;Invoked when a matching mapping is found._@param mapping the matching mapping_@param lookupPath mapping lookup path within the current servlet mapping_@param request the current request;protected void handleMatch(T mapping, String lookupPath, HttpServletRequest request) {_		request.setAttribute(HandlerMapping.PATH_WITHIN_HANDLER_MAPPING_ATTRIBUTE, lookupPath)__	};invoked,when,a,matching,mapping,is,found,param,mapping,the,matching,mapping,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,request,the,current,request;protected,void,handle,match,t,mapping,string,lookup,path,http,servlet,request,request,request,set,attribute,handler,mapping,lookup,path
AbstractHandlerMethodMapping -> protected void handleMatch(T mapping, String lookupPath, HttpServletRequest request);1356735495;Invoked when a matching mapping is found._@param mapping the matching mapping_@param lookupPath mapping lookup path within the current servlet mapping_@param request the current request;protected void handleMatch(T mapping, String lookupPath, HttpServletRequest request) {_		request.setAttribute(HandlerMapping.PATH_WITHIN_HANDLER_MAPPING_ATTRIBUTE, lookupPath)__	};invoked,when,a,matching,mapping,is,found,param,mapping,the,matching,mapping,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,request,the,current,request;protected,void,handle,match,t,mapping,string,lookup,path,http,servlet,request,request,request,set,attribute,handler,mapping,lookup,path
AbstractHandlerMethodMapping -> protected void handleMatch(T mapping, String lookupPath, HttpServletRequest request);1357119239;Invoked when a matching mapping is found._@param mapping the matching mapping_@param lookupPath mapping lookup path within the current servlet mapping_@param request the current request;protected void handleMatch(T mapping, String lookupPath, HttpServletRequest request) {_		request.setAttribute(HandlerMapping.PATH_WITHIN_HANDLER_MAPPING_ATTRIBUTE, lookupPath)__	};invoked,when,a,matching,mapping,is,found,param,mapping,the,matching,mapping,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,request,the,current,request;protected,void,handle,match,t,mapping,string,lookup,path,http,servlet,request,request,request,set,attribute,handler,mapping,lookup,path
AbstractHandlerMethodMapping -> protected void handleMatch(T mapping, String lookupPath, HttpServletRequest request);1362408075;Invoked when a matching mapping is found._@param mapping the matching mapping_@param lookupPath mapping lookup path within the current servlet mapping_@param request the current request;protected void handleMatch(T mapping, String lookupPath, HttpServletRequest request) {_		request.setAttribute(HandlerMapping.PATH_WITHIN_HANDLER_MAPPING_ATTRIBUTE, lookupPath)__	};invoked,when,a,matching,mapping,is,found,param,mapping,the,matching,mapping,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,request,the,current,request;protected,void,handle,match,t,mapping,string,lookup,path,http,servlet,request,request,request,set,attribute,handler,mapping,lookup,path
AbstractHandlerMethodMapping -> protected void handleMatch(T mapping, String lookupPath, HttpServletRequest request);1368482696;Invoked when a matching mapping is found._@param mapping the matching mapping_@param lookupPath mapping lookup path within the current servlet mapping_@param request the current request;protected void handleMatch(T mapping, String lookupPath, HttpServletRequest request) {_		request.setAttribute(HandlerMapping.PATH_WITHIN_HANDLER_MAPPING_ATTRIBUTE, lookupPath)__	};invoked,when,a,matching,mapping,is,found,param,mapping,the,matching,mapping,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,request,the,current,request;protected,void,handle,match,t,mapping,string,lookup,path,http,servlet,request,request,request,set,attribute,handler,mapping,lookup,path
AbstractHandlerMethodMapping -> protected void handleMatch(T mapping, String lookupPath, HttpServletRequest request);1368581529;Invoked when a matching mapping is found._@param mapping the matching mapping_@param lookupPath mapping lookup path within the current servlet mapping_@param request the current request;protected void handleMatch(T mapping, String lookupPath, HttpServletRequest request) {_		request.setAttribute(HandlerMapping.PATH_WITHIN_HANDLER_MAPPING_ATTRIBUTE, lookupPath)__	};invoked,when,a,matching,mapping,is,found,param,mapping,the,matching,mapping,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,request,the,current,request;protected,void,handle,match,t,mapping,string,lookup,path,http,servlet,request,request,request,set,attribute,handler,mapping,lookup,path
AbstractHandlerMethodMapping -> protected void handleMatch(T mapping, String lookupPath, HttpServletRequest request);1382665849;Invoked when a matching mapping is found._@param mapping the matching mapping_@param lookupPath mapping lookup path within the current servlet mapping_@param request the current request;protected void handleMatch(T mapping, String lookupPath, HttpServletRequest request) {_		request.setAttribute(HandlerMapping.PATH_WITHIN_HANDLER_MAPPING_ATTRIBUTE, lookupPath)__	};invoked,when,a,matching,mapping,is,found,param,mapping,the,matching,mapping,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,request,the,current,request;protected,void,handle,match,t,mapping,string,lookup,path,http,servlet,request,request,request,set,attribute,handler,mapping,lookup,path
AbstractHandlerMethodMapping -> protected void handleMatch(T mapping, String lookupPath, HttpServletRequest request);1392160296;Invoked when a matching mapping is found._@param mapping the matching mapping_@param lookupPath mapping lookup path within the current servlet mapping_@param request the current request;protected void handleMatch(T mapping, String lookupPath, HttpServletRequest request) {_		request.setAttribute(HandlerMapping.PATH_WITHIN_HANDLER_MAPPING_ATTRIBUTE, lookupPath)__	};invoked,when,a,matching,mapping,is,found,param,mapping,the,matching,mapping,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,request,the,current,request;protected,void,handle,match,t,mapping,string,lookup,path,http,servlet,request,request,request,set,attribute,handler,mapping,lookup,path
AbstractHandlerMethodMapping -> protected void handleMatch(T mapping, String lookupPath, HttpServletRequest request);1392337816;Invoked when a matching mapping is found._@param mapping the matching mapping_@param lookupPath mapping lookup path within the current servlet mapping_@param request the current request;protected void handleMatch(T mapping, String lookupPath, HttpServletRequest request) {_		request.setAttribute(HandlerMapping.PATH_WITHIN_HANDLER_MAPPING_ATTRIBUTE, lookupPath)__	};invoked,when,a,matching,mapping,is,found,param,mapping,the,matching,mapping,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,request,the,current,request;protected,void,handle,match,t,mapping,string,lookup,path,http,servlet,request,request,request,set,attribute,handler,mapping,lookup,path
AbstractHandlerMethodMapping -> protected void handleMatch(T mapping, String lookupPath, HttpServletRequest request);1392407320;Invoked when a matching mapping is found._@param mapping the matching mapping_@param lookupPath mapping lookup path within the current servlet mapping_@param request the current request;protected void handleMatch(T mapping, String lookupPath, HttpServletRequest request) {_		request.setAttribute(HandlerMapping.PATH_WITHIN_HANDLER_MAPPING_ATTRIBUTE, lookupPath)__	};invoked,when,a,matching,mapping,is,found,param,mapping,the,matching,mapping,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,request,the,current,request;protected,void,handle,match,t,mapping,string,lookup,path,http,servlet,request,request,request,set,attribute,handler,mapping,lookup,path
AbstractHandlerMethodMapping -> protected void handleMatch(T mapping, String lookupPath, HttpServletRequest request);1395655323;Invoked when a matching mapping is found._@param mapping the matching mapping_@param lookupPath mapping lookup path within the current servlet mapping_@param request the current request;protected void handleMatch(T mapping, String lookupPath, HttpServletRequest request) {_		request.setAttribute(HandlerMapping.PATH_WITHIN_HANDLER_MAPPING_ATTRIBUTE, lookupPath)__	};invoked,when,a,matching,mapping,is,found,param,mapping,the,matching,mapping,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,request,the,current,request;protected,void,handle,match,t,mapping,string,lookup,path,http,servlet,request,request,request,set,attribute,handler,mapping,lookup,path
AbstractHandlerMethodMapping -> protected void handleMatch(T mapping, String lookupPath, HttpServletRequest request);1399404473;Invoked when a matching mapping is found._@param mapping the matching mapping_@param lookupPath mapping lookup path within the current servlet mapping_@param request the current request;protected void handleMatch(T mapping, String lookupPath, HttpServletRequest request) {_		request.setAttribute(HandlerMapping.PATH_WITHIN_HANDLER_MAPPING_ATTRIBUTE, lookupPath)__	};invoked,when,a,matching,mapping,is,found,param,mapping,the,matching,mapping,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,request,the,current,request;protected,void,handle,match,t,mapping,string,lookup,path,http,servlet,request,request,request,set,attribute,handler,mapping,lookup,path
AbstractHandlerMethodMapping -> protected void handleMatch(T mapping, String lookupPath, HttpServletRequest request);1426869344;Invoked when a matching mapping is found._@param mapping the matching mapping_@param lookupPath mapping lookup path within the current servlet mapping_@param request the current request;protected void handleMatch(T mapping, String lookupPath, HttpServletRequest request) {_		request.setAttribute(HandlerMapping.PATH_WITHIN_HANDLER_MAPPING_ATTRIBUTE, lookupPath)__	};invoked,when,a,matching,mapping,is,found,param,mapping,the,matching,mapping,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,request,the,current,request;protected,void,handle,match,t,mapping,string,lookup,path,http,servlet,request,request,request,set,attribute,handler,mapping,lookup,path
AbstractHandlerMethodMapping -> protected void handleMatch(T mapping, String lookupPath, HttpServletRequest request);1427240641;Invoked when a matching mapping is found._@param mapping the matching mapping_@param lookupPath mapping lookup path within the current servlet mapping_@param request the current request;protected void handleMatch(T mapping, String lookupPath, HttpServletRequest request) {_		request.setAttribute(HandlerMapping.PATH_WITHIN_HANDLER_MAPPING_ATTRIBUTE, lookupPath)__	};invoked,when,a,matching,mapping,is,found,param,mapping,the,matching,mapping,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,request,the,current,request;protected,void,handle,match,t,mapping,string,lookup,path,http,servlet,request,request,request,set,attribute,handler,mapping,lookup,path
AbstractHandlerMethodMapping -> protected void handleMatch(T mapping, String lookupPath, HttpServletRequest request);1427983931;Invoked when a matching mapping is found._@param mapping the matching mapping_@param lookupPath mapping lookup path within the current servlet mapping_@param request the current request;protected void handleMatch(T mapping, String lookupPath, HttpServletRequest request) {_		request.setAttribute(HandlerMapping.PATH_WITHIN_HANDLER_MAPPING_ATTRIBUTE, lookupPath)__	};invoked,when,a,matching,mapping,is,found,param,mapping,the,matching,mapping,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,request,the,current,request;protected,void,handle,match,t,mapping,string,lookup,path,http,servlet,request,request,request,set,attribute,handler,mapping,lookup,path
AbstractHandlerMethodMapping -> protected void handleMatch(T mapping, String lookupPath, HttpServletRequest request);1430734105;Invoked when a matching mapping is found._@param mapping the matching mapping_@param lookupPath mapping lookup path within the current servlet mapping_@param request the current request;protected void handleMatch(T mapping, String lookupPath, HttpServletRequest request) {_		request.setAttribute(HandlerMapping.PATH_WITHIN_HANDLER_MAPPING_ATTRIBUTE, lookupPath)__	};invoked,when,a,matching,mapping,is,found,param,mapping,the,matching,mapping,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,request,the,current,request;protected,void,handle,match,t,mapping,string,lookup,path,http,servlet,request,request,request,set,attribute,handler,mapping,lookup,path
AbstractHandlerMethodMapping -> protected void handleMatch(T mapping, String lookupPath, HttpServletRequest request);1430734105;Invoked when a matching mapping is found._@param mapping the matching mapping_@param lookupPath mapping lookup path within the current servlet mapping_@param request the current request;protected void handleMatch(T mapping, String lookupPath, HttpServletRequest request) {_		request.setAttribute(HandlerMapping.PATH_WITHIN_HANDLER_MAPPING_ATTRIBUTE, lookupPath)__	};invoked,when,a,matching,mapping,is,found,param,mapping,the,matching,mapping,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,request,the,current,request;protected,void,handle,match,t,mapping,string,lookup,path,http,servlet,request,request,request,set,attribute,handler,mapping,lookup,path
AbstractHandlerMethodMapping -> protected void handleMatch(T mapping, String lookupPath, HttpServletRequest request);1430734106;Invoked when a matching mapping is found._@param mapping the matching mapping_@param lookupPath mapping lookup path within the current servlet mapping_@param request the current request;protected void handleMatch(T mapping, String lookupPath, HttpServletRequest request) {_		request.setAttribute(HandlerMapping.PATH_WITHIN_HANDLER_MAPPING_ATTRIBUTE, lookupPath)__	};invoked,when,a,matching,mapping,is,found,param,mapping,the,matching,mapping,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,request,the,current,request;protected,void,handle,match,t,mapping,string,lookup,path,http,servlet,request,request,request,set,attribute,handler,mapping,lookup,path
AbstractHandlerMethodMapping -> protected void handleMatch(T mapping, String lookupPath, HttpServletRequest request);1430774689;Invoked when a matching mapping is found._@param mapping the matching mapping_@param lookupPath mapping lookup path within the current servlet mapping_@param request the current request;protected void handleMatch(T mapping, String lookupPath, HttpServletRequest request) {_		request.setAttribute(HandlerMapping.PATH_WITHIN_HANDLER_MAPPING_ATTRIBUTE, lookupPath)__	};invoked,when,a,matching,mapping,is,found,param,mapping,the,matching,mapping,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,request,the,current,request;protected,void,handle,match,t,mapping,string,lookup,path,http,servlet,request,request,request,set,attribute,handler,mapping,lookup,path
AbstractHandlerMethodMapping -> protected void handleMatch(T mapping, String lookupPath, HttpServletRequest request);1430844966;Invoked when a matching mapping is found._@param mapping the matching mapping_@param lookupPath mapping lookup path within the current servlet mapping_@param request the current request;protected void handleMatch(T mapping, String lookupPath, HttpServletRequest request) {_		request.setAttribute(HandlerMapping.PATH_WITHIN_HANDLER_MAPPING_ATTRIBUTE, lookupPath)__	};invoked,when,a,matching,mapping,is,found,param,mapping,the,matching,mapping,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,request,the,current,request;protected,void,handle,match,t,mapping,string,lookup,path,http,servlet,request,request,request,set,attribute,handler,mapping,lookup,path
AbstractHandlerMethodMapping -> protected void handleMatch(T mapping, String lookupPath, HttpServletRequest request);1430844967;Invoked when a matching mapping is found._@param mapping the matching mapping_@param lookupPath mapping lookup path within the current servlet mapping_@param request the current request;protected void handleMatch(T mapping, String lookupPath, HttpServletRequest request) {_		request.setAttribute(HandlerMapping.PATH_WITHIN_HANDLER_MAPPING_ATTRIBUTE, lookupPath)__	};invoked,when,a,matching,mapping,is,found,param,mapping,the,matching,mapping,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,request,the,current,request;protected,void,handle,match,t,mapping,string,lookup,path,http,servlet,request,request,request,set,attribute,handler,mapping,lookup,path
AbstractHandlerMethodMapping -> protected void handleMatch(T mapping, String lookupPath, HttpServletRequest request);1431730371;Invoked when a matching mapping is found._@param mapping the matching mapping_@param lookupPath mapping lookup path within the current servlet mapping_@param request the current request;protected void handleMatch(T mapping, String lookupPath, HttpServletRequest request) {_		request.setAttribute(HandlerMapping.PATH_WITHIN_HANDLER_MAPPING_ATTRIBUTE, lookupPath)__	};invoked,when,a,matching,mapping,is,found,param,mapping,the,matching,mapping,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,request,the,current,request;protected,void,handle,match,t,mapping,string,lookup,path,http,servlet,request,request,request,set,attribute,handler,mapping,lookup,path
AbstractHandlerMethodMapping -> protected void handleMatch(T mapping, String lookupPath, HttpServletRequest request);1439294371;Invoked when a matching mapping is found._@param mapping the matching mapping_@param lookupPath mapping lookup path within the current servlet mapping_@param request the current request;protected void handleMatch(T mapping, String lookupPath, HttpServletRequest request) {_		request.setAttribute(HandlerMapping.PATH_WITHIN_HANDLER_MAPPING_ATTRIBUTE, lookupPath)__	};invoked,when,a,matching,mapping,is,found,param,mapping,the,matching,mapping,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,request,the,current,request;protected,void,handle,match,t,mapping,string,lookup,path,http,servlet,request,request,request,set,attribute,handler,mapping,lookup,path
AbstractHandlerMethodMapping -> protected void handleMatch(T mapping, String lookupPath, HttpServletRequest request);1447077465;Invoked when a matching mapping is found._@param mapping the matching mapping_@param lookupPath mapping lookup path within the current servlet mapping_@param request the current request;protected void handleMatch(T mapping, String lookupPath, HttpServletRequest request) {_		request.setAttribute(HandlerMapping.PATH_WITHIN_HANDLER_MAPPING_ATTRIBUTE, lookupPath)__	};invoked,when,a,matching,mapping,is,found,param,mapping,the,matching,mapping,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,request,the,current,request;protected,void,handle,match,t,mapping,string,lookup,path,http,servlet,request,request,request,set,attribute,handler,mapping,lookup,path
AbstractHandlerMethodMapping -> protected void handleMatch(T mapping, String lookupPath, HttpServletRequest request);1448483163;Invoked when a matching mapping is found._@param mapping the matching mapping_@param lookupPath mapping lookup path within the current servlet mapping_@param request the current request;protected void handleMatch(T mapping, String lookupPath, HttpServletRequest request) {_		request.setAttribute(HandlerMapping.PATH_WITHIN_HANDLER_MAPPING_ATTRIBUTE, lookupPath)__	};invoked,when,a,matching,mapping,is,found,param,mapping,the,matching,mapping,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,request,the,current,request;protected,void,handle,match,t,mapping,string,lookup,path,http,servlet,request,request,request,set,attribute,handler,mapping,lookup,path
AbstractHandlerMethodMapping -> protected void handleMatch(T mapping, String lookupPath, HttpServletRequest request);1452685925;Invoked when a matching mapping is found._@param mapping the matching mapping_@param lookupPath mapping lookup path within the current servlet mapping_@param request the current request;protected void handleMatch(T mapping, String lookupPath, HttpServletRequest request) {_		request.setAttribute(HandlerMapping.PATH_WITHIN_HANDLER_MAPPING_ATTRIBUTE, lookupPath)__	};invoked,when,a,matching,mapping,is,found,param,mapping,the,matching,mapping,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,request,the,current,request;protected,void,handle,match,t,mapping,string,lookup,path,http,servlet,request,request,request,set,attribute,handler,mapping,lookup,path
AbstractHandlerMethodMapping -> protected void handleMatch(T mapping, String lookupPath, HttpServletRequest request);1452873718;Invoked when a matching mapping is found._@param mapping the matching mapping_@param lookupPath mapping lookup path within the current servlet mapping_@param request the current request;protected void handleMatch(T mapping, String lookupPath, HttpServletRequest request) {_		request.setAttribute(HandlerMapping.PATH_WITHIN_HANDLER_MAPPING_ATTRIBUTE, lookupPath)__	};invoked,when,a,matching,mapping,is,found,param,mapping,the,matching,mapping,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,request,the,current,request;protected,void,handle,match,t,mapping,string,lookup,path,http,servlet,request,request,request,set,attribute,handler,mapping,lookup,path
AbstractHandlerMethodMapping -> protected void handleMatch(T mapping, String lookupPath, HttpServletRequest request);1453843788;Invoked when a matching mapping is found._@param mapping the matching mapping_@param lookupPath mapping lookup path within the current servlet mapping_@param request the current request;protected void handleMatch(T mapping, String lookupPath, HttpServletRequest request) {_		request.setAttribute(HandlerMapping.PATH_WITHIN_HANDLER_MAPPING_ATTRIBUTE, lookupPath)__	};invoked,when,a,matching,mapping,is,found,param,mapping,the,matching,mapping,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,request,the,current,request;protected,void,handle,match,t,mapping,string,lookup,path,http,servlet,request,request,request,set,attribute,handler,mapping,lookup,path
AbstractHandlerMethodMapping -> protected void handleMatch(T mapping, String lookupPath, HttpServletRequest request);1467730834;Invoked when a matching mapping is found._@param mapping the matching mapping_@param lookupPath mapping lookup path within the current servlet mapping_@param request the current request;protected void handleMatch(T mapping, String lookupPath, HttpServletRequest request) {_		request.setAttribute(HandlerMapping.PATH_WITHIN_HANDLER_MAPPING_ATTRIBUTE, lookupPath)__	};invoked,when,a,matching,mapping,is,found,param,mapping,the,matching,mapping,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,request,the,current,request;protected,void,handle,match,t,mapping,string,lookup,path,http,servlet,request,request,request,set,attribute,handler,mapping,lookup,path
AbstractHandlerMethodMapping -> protected void handleMatch(T mapping, String lookupPath, HttpServletRequest request);1468417354;Invoked when a matching mapping is found._@param mapping the matching mapping_@param lookupPath mapping lookup path within the current servlet mapping_@param request the current request;protected void handleMatch(T mapping, String lookupPath, HttpServletRequest request) {_		request.setAttribute(HandlerMapping.PATH_WITHIN_HANDLER_MAPPING_ATTRIBUTE, lookupPath)__	};invoked,when,a,matching,mapping,is,found,param,mapping,the,matching,mapping,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,request,the,current,request;protected,void,handle,match,t,mapping,string,lookup,path,http,servlet,request,request,request,set,attribute,handler,mapping,lookup,path
AbstractHandlerMethodMapping -> protected void handleMatch(T mapping, String lookupPath, HttpServletRequest request);1468596479;Invoked when a matching mapping is found._@param mapping the matching mapping_@param lookupPath mapping lookup path within the current servlet mapping_@param request the current request;protected void handleMatch(T mapping, String lookupPath, HttpServletRequest request) {_		request.setAttribute(HandlerMapping.PATH_WITHIN_HANDLER_MAPPING_ATTRIBUTE, lookupPath)__	};invoked,when,a,matching,mapping,is,found,param,mapping,the,matching,mapping,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,request,the,current,request;protected,void,handle,match,t,mapping,string,lookup,path,http,servlet,request,request,request,set,attribute,handler,mapping,lookup,path
AbstractHandlerMethodMapping -> protected void handleMatch(T mapping, String lookupPath, HttpServletRequest request);1474905889;Invoked when a matching mapping is found._@param mapping the matching mapping_@param lookupPath mapping lookup path within the current servlet mapping_@param request the current request;protected void handleMatch(T mapping, String lookupPath, HttpServletRequest request) {_		request.setAttribute(HandlerMapping.PATH_WITHIN_HANDLER_MAPPING_ATTRIBUTE, lookupPath)__	};invoked,when,a,matching,mapping,is,found,param,mapping,the,matching,mapping,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,request,the,current,request;protected,void,handle,match,t,mapping,string,lookup,path,http,servlet,request,request,request,set,attribute,handler,mapping,lookup,path
AbstractHandlerMethodMapping -> protected void handleMatch(T mapping, String lookupPath, HttpServletRequest request);1481813056;Invoked when a matching mapping is found._@param mapping the matching mapping_@param lookupPath mapping lookup path within the current servlet mapping_@param request the current request;protected void handleMatch(T mapping, String lookupPath, HttpServletRequest request) {_		request.setAttribute(HandlerMapping.PATH_WITHIN_HANDLER_MAPPING_ATTRIBUTE, lookupPath)__	};invoked,when,a,matching,mapping,is,found,param,mapping,the,matching,mapping,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,request,the,current,request;protected,void,handle,match,t,mapping,string,lookup,path,http,servlet,request,request,request,set,attribute,handler,mapping,lookup,path
AbstractHandlerMethodMapping -> protected void handleMatch(T mapping, String lookupPath, HttpServletRequest request);1485810955;Invoked when a matching mapping is found._@param mapping the matching mapping_@param lookupPath mapping lookup path within the current servlet mapping_@param request the current request;protected void handleMatch(T mapping, String lookupPath, HttpServletRequest request) {_		request.setAttribute(HandlerMapping.PATH_WITHIN_HANDLER_MAPPING_ATTRIBUTE, lookupPath)__	};invoked,when,a,matching,mapping,is,found,param,mapping,the,matching,mapping,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,request,the,current,request;protected,void,handle,match,t,mapping,string,lookup,path,http,servlet,request,request,request,set,attribute,handler,mapping,lookup,path
AbstractHandlerMethodMapping -> protected void handleMatch(T mapping, String lookupPath, HttpServletRequest request);1495868221;Invoked when a matching mapping is found._@param mapping the matching mapping_@param lookupPath mapping lookup path within the current servlet mapping_@param request the current request;protected void handleMatch(T mapping, String lookupPath, HttpServletRequest request) {_		request.setAttribute(HandlerMapping.PATH_WITHIN_HANDLER_MAPPING_ATTRIBUTE, lookupPath)__	};invoked,when,a,matching,mapping,is,found,param,mapping,the,matching,mapping,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,request,the,current,request;protected,void,handle,match,t,mapping,string,lookup,path,http,servlet,request,request,request,set,attribute,handler,mapping,lookup,path
AbstractHandlerMethodMapping -> protected void handleMatch(T mapping, String lookupPath, HttpServletRequest request);1496837955;Invoked when a matching mapping is found._@param mapping the matching mapping_@param lookupPath mapping lookup path within the current servlet mapping_@param request the current request;protected void handleMatch(T mapping, String lookupPath, HttpServletRequest request) {_		request.setAttribute(HandlerMapping.PATH_WITHIN_HANDLER_MAPPING_ATTRIBUTE, lookupPath)__	};invoked,when,a,matching,mapping,is,found,param,mapping,the,matching,mapping,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,request,the,current,request;protected,void,handle,match,t,mapping,string,lookup,path,http,servlet,request,request,request,set,attribute,handler,mapping,lookup,path
AbstractHandlerMethodMapping -> protected void handleMatch(T mapping, String lookupPath, HttpServletRequest request);1497251962;Invoked when a matching mapping is found._@param mapping the matching mapping_@param lookupPath mapping lookup path within the current servlet mapping_@param request the current request;protected void handleMatch(T mapping, String lookupPath, HttpServletRequest request) {_		request.setAttribute(HandlerMapping.PATH_WITHIN_HANDLER_MAPPING_ATTRIBUTE, lookupPath)__	};invoked,when,a,matching,mapping,is,found,param,mapping,the,matching,mapping,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,request,the,current,request;protected,void,handle,match,t,mapping,string,lookup,path,http,servlet,request,request,request,set,attribute,handler,mapping,lookup,path
AbstractHandlerMethodMapping -> protected void handleMatch(T mapping, String lookupPath, HttpServletRequest request);1498780456;Invoked when a matching mapping is found._@param mapping the matching mapping_@param lookupPath mapping lookup path within the current servlet mapping_@param request the current request;protected void handleMatch(T mapping, String lookupPath, HttpServletRequest request) {_		request.setAttribute(HandlerMapping.PATH_WITHIN_HANDLER_MAPPING_ATTRIBUTE, lookupPath)__	};invoked,when,a,matching,mapping,is,found,param,mapping,the,matching,mapping,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,request,the,current,request;protected,void,handle,match,t,mapping,string,lookup,path,http,servlet,request,request,request,set,attribute,handler,mapping,lookup,path
AbstractHandlerMethodMapping -> protected void handleMatch(T mapping, String lookupPath, HttpServletRequest request);1518772998;Invoked when a matching mapping is found._@param mapping the matching mapping_@param lookupPath mapping lookup path within the current servlet mapping_@param request the current request;protected void handleMatch(T mapping, String lookupPath, HttpServletRequest request) {_		request.setAttribute(HandlerMapping.PATH_WITHIN_HANDLER_MAPPING_ATTRIBUTE, lookupPath)__	};invoked,when,a,matching,mapping,is,found,param,mapping,the,matching,mapping,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,request,the,current,request;protected,void,handle,match,t,mapping,string,lookup,path,http,servlet,request,request,request,set,attribute,handler,mapping,lookup,path
AbstractHandlerMethodMapping -> protected void handleMatch(T mapping, String lookupPath, HttpServletRequest request);1522103912;Invoked when a matching mapping is found._@param mapping the matching mapping_@param lookupPath mapping lookup path within the current servlet mapping_@param request the current request;protected void handleMatch(T mapping, String lookupPath, HttpServletRequest request) {_		request.setAttribute(HandlerMapping.PATH_WITHIN_HANDLER_MAPPING_ATTRIBUTE, lookupPath)__	};invoked,when,a,matching,mapping,is,found,param,mapping,the,matching,mapping,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,request,the,current,request;protected,void,handle,match,t,mapping,string,lookup,path,http,servlet,request,request,request,set,attribute,handler,mapping,lookup,path
AbstractHandlerMethodMapping -> protected void handleMatch(T mapping, String lookupPath, HttpServletRequest request);1522843494;Invoked when a matching mapping is found._@param mapping the matching mapping_@param lookupPath mapping lookup path within the current servlet mapping_@param request the current request;protected void handleMatch(T mapping, String lookupPath, HttpServletRequest request) {_		request.setAttribute(HandlerMapping.PATH_WITHIN_HANDLER_MAPPING_ATTRIBUTE, lookupPath)__	};invoked,when,a,matching,mapping,is,found,param,mapping,the,matching,mapping,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,request,the,current,request;protected,void,handle,match,t,mapping,string,lookup,path,http,servlet,request,request,request,set,attribute,handler,mapping,lookup,path
AbstractHandlerMethodMapping -> protected void handleMatch(T mapping, String lookupPath, HttpServletRequest request);1529361191;Invoked when a matching mapping is found._@param mapping the matching mapping_@param lookupPath mapping lookup path within the current servlet mapping_@param request the current request;protected void handleMatch(T mapping, String lookupPath, HttpServletRequest request) {_		request.setAttribute(HandlerMapping.PATH_WITHIN_HANDLER_MAPPING_ATTRIBUTE, lookupPath)__	};invoked,when,a,matching,mapping,is,found,param,mapping,the,matching,mapping,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,request,the,current,request;protected,void,handle,match,t,mapping,string,lookup,path,http,servlet,request,request,request,set,attribute,handler,mapping,lookup,path
AbstractHandlerMethodMapping -> protected void handleMatch(T mapping, String lookupPath, HttpServletRequest request);1529721864;Invoked when a matching mapping is found._@param mapping the matching mapping_@param lookupPath mapping lookup path within the current servlet mapping_@param request the current request;protected void handleMatch(T mapping, String lookupPath, HttpServletRequest request) {_		request.setAttribute(HandlerMapping.PATH_WITHIN_HANDLER_MAPPING_ATTRIBUTE, lookupPath)__	};invoked,when,a,matching,mapping,is,found,param,mapping,the,matching,mapping,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,request,the,current,request;protected,void,handle,match,t,mapping,string,lookup,path,http,servlet,request,request,request,set,attribute,handler,mapping,lookup,path
AbstractHandlerMethodMapping -> protected void handleMatch(T mapping, String lookupPath, HttpServletRequest request);1530174524;Invoked when a matching mapping is found._@param mapping the matching mapping_@param lookupPath mapping lookup path within the current servlet mapping_@param request the current request;protected void handleMatch(T mapping, String lookupPath, HttpServletRequest request) {_		request.setAttribute(HandlerMapping.PATH_WITHIN_HANDLER_MAPPING_ATTRIBUTE, lookupPath)__	};invoked,when,a,matching,mapping,is,found,param,mapping,the,matching,mapping,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,request,the,current,request;protected,void,handle,match,t,mapping,string,lookup,path,http,servlet,request,request,request,set,attribute,handler,mapping,lookup,path
AbstractHandlerMethodMapping -> protected void handleMatch(T mapping, String lookupPath, HttpServletRequest request);1530174524;Invoked when a matching mapping is found._@param mapping the matching mapping_@param lookupPath mapping lookup path within the current servlet mapping_@param request the current request;protected void handleMatch(T mapping, String lookupPath, HttpServletRequest request) {_		request.setAttribute(HandlerMapping.PATH_WITHIN_HANDLER_MAPPING_ATTRIBUTE, lookupPath)__	};invoked,when,a,matching,mapping,is,found,param,mapping,the,matching,mapping,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,request,the,current,request;protected,void,handle,match,t,mapping,string,lookup,path,http,servlet,request,request,request,set,attribute,handler,mapping,lookup,path
AbstractHandlerMethodMapping -> protected void handleMatch(T mapping, String lookupPath, HttpServletRequest request);1533943217;Invoked when a matching mapping is found._@param mapping the matching mapping_@param lookupPath mapping lookup path within the current servlet mapping_@param request the current request;protected void handleMatch(T mapping, String lookupPath, HttpServletRequest request) {_		request.setAttribute(HandlerMapping.PATH_WITHIN_HANDLER_MAPPING_ATTRIBUTE, lookupPath)__	};invoked,when,a,matching,mapping,is,found,param,mapping,the,matching,mapping,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,request,the,current,request;protected,void,handle,match,t,mapping,string,lookup,path,http,servlet,request,request,request,set,attribute,handler,mapping,lookup,path
AbstractHandlerMethodMapping -> protected void handleMatch(T mapping, String lookupPath, HttpServletRequest request);1542407418;Invoked when a matching mapping is found._@param mapping the matching mapping_@param lookupPath mapping lookup path within the current servlet mapping_@param request the current request;protected void handleMatch(T mapping, String lookupPath, HttpServletRequest request) {_		request.setAttribute(HandlerMapping.PATH_WITHIN_HANDLER_MAPPING_ATTRIBUTE, lookupPath)__	};invoked,when,a,matching,mapping,is,found,param,mapping,the,matching,mapping,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,request,the,current,request;protected,void,handle,match,t,mapping,string,lookup,path,http,servlet,request,request,request,set,attribute,handler,mapping,lookup,path
AbstractHandlerMethodMapping -> protected void handleMatch(T mapping, String lookupPath, HttpServletRequest request);1542771062;Invoked when a matching mapping is found._@param mapping the matching mapping_@param lookupPath mapping lookup path within the current servlet mapping_@param request the current request;protected void handleMatch(T mapping, String lookupPath, HttpServletRequest request) {_		request.setAttribute(HandlerMapping.PATH_WITHIN_HANDLER_MAPPING_ATTRIBUTE, lookupPath)__	};invoked,when,a,matching,mapping,is,found,param,mapping,the,matching,mapping,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,request,the,current,request;protected,void,handle,match,t,mapping,string,lookup,path,http,servlet,request,request,request,set,attribute,handler,mapping,lookup,path
AbstractHandlerMethodMapping -> protected void handleMatch(T mapping, String lookupPath, HttpServletRequest request);1548427561;Invoked when a matching mapping is found._@param mapping the matching mapping_@param lookupPath mapping lookup path within the current servlet mapping_@param request the current request;protected void handleMatch(T mapping, String lookupPath, HttpServletRequest request) {_		request.setAttribute(HandlerMapping.PATH_WITHIN_HANDLER_MAPPING_ATTRIBUTE, lookupPath)__	};invoked,when,a,matching,mapping,is,found,param,mapping,the,matching,mapping,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,request,the,current,request;protected,void,handle,match,t,mapping,string,lookup,path,http,servlet,request,request,request,set,attribute,handler,mapping,lookup,path
AbstractHandlerMethodMapping -> protected void handleMatch(T mapping, String lookupPath, HttpServletRequest request);1551093473;Invoked when a matching mapping is found._@param mapping the matching mapping_@param lookupPath mapping lookup path within the current servlet mapping_@param request the current request;protected void handleMatch(T mapping, String lookupPath, HttpServletRequest request) {_		request.setAttribute(HandlerMapping.PATH_WITHIN_HANDLER_MAPPING_ATTRIBUTE, lookupPath)__	};invoked,when,a,matching,mapping,is,found,param,mapping,the,matching,mapping,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,request,the,current,request;protected,void,handle,match,t,mapping,string,lookup,path,http,servlet,request,request,request,set,attribute,handler,mapping,lookup,path
AbstractHandlerMethodMapping -> MappingRegistry -> public List<T> getMappingsByUrl(String urlPath);1430844966;Return matches for the given URL path. Not thread-safe._@see #acquireReadLock();public List<T> getMappingsByUrl(String urlPath) {_			return this.urlLookup.get(urlPath)__		};return,matches,for,the,given,url,path,not,thread,safe,see,acquire,read,lock;public,list,t,get,mappings,by,url,string,url,path,return,this,url,lookup,get,url,path
AbstractHandlerMethodMapping -> MappingRegistry -> public List<T> getMappingsByUrl(String urlPath);1430844967;Return matches for the given URL path. Not thread-safe._@see #acquireReadLock();public List<T> getMappingsByUrl(String urlPath) {_			return this.urlLookup.get(urlPath)__		};return,matches,for,the,given,url,path,not,thread,safe,see,acquire,read,lock;public,list,t,get,mappings,by,url,string,url,path,return,this,url,lookup,get,url,path
AbstractHandlerMethodMapping -> MappingRegistry -> public List<T> getMappingsByUrl(String urlPath);1431730371;Return matches for the given URL path. Not thread-safe._@see #acquireReadLock();public List<T> getMappingsByUrl(String urlPath) {_			return this.urlLookup.get(urlPath)__		};return,matches,for,the,given,url,path,not,thread,safe,see,acquire,read,lock;public,list,t,get,mappings,by,url,string,url,path,return,this,url,lookup,get,url,path
AbstractHandlerMethodMapping -> MappingRegistry -> public List<T> getMappingsByUrl(String urlPath);1439294371;Return matches for the given URL path. Not thread-safe._@see #acquireReadLock();public List<T> getMappingsByUrl(String urlPath) {_			return this.urlLookup.get(urlPath)__		};return,matches,for,the,given,url,path,not,thread,safe,see,acquire,read,lock;public,list,t,get,mappings,by,url,string,url,path,return,this,url,lookup,get,url,path
AbstractHandlerMethodMapping -> MappingRegistry -> public List<T> getMappingsByUrl(String urlPath);1447077465;Return matches for the given URL path. Not thread-safe._@see #acquireReadLock();public List<T> getMappingsByUrl(String urlPath) {_			return this.urlLookup.get(urlPath)__		};return,matches,for,the,given,url,path,not,thread,safe,see,acquire,read,lock;public,list,t,get,mappings,by,url,string,url,path,return,this,url,lookup,get,url,path
AbstractHandlerMethodMapping -> MappingRegistry -> public List<T> getMappingsByUrl(String urlPath);1448483163;Return matches for the given URL path. Not thread-safe._@see #acquireReadLock();public List<T> getMappingsByUrl(String urlPath) {_			return this.urlLookup.get(urlPath)__		};return,matches,for,the,given,url,path,not,thread,safe,see,acquire,read,lock;public,list,t,get,mappings,by,url,string,url,path,return,this,url,lookup,get,url,path
AbstractHandlerMethodMapping -> MappingRegistry -> public List<T> getMappingsByUrl(String urlPath);1452685925;Return matches for the given URL path. Not thread-safe._@see #acquireReadLock();public List<T> getMappingsByUrl(String urlPath) {_			return this.urlLookup.get(urlPath)__		};return,matches,for,the,given,url,path,not,thread,safe,see,acquire,read,lock;public,list,t,get,mappings,by,url,string,url,path,return,this,url,lookup,get,url,path
AbstractHandlerMethodMapping -> MappingRegistry -> public List<T> getMappingsByUrl(String urlPath);1452873718;Return matches for the given URL path. Not thread-safe._@see #acquireReadLock();public List<T> getMappingsByUrl(String urlPath) {_			return this.urlLookup.get(urlPath)__		};return,matches,for,the,given,url,path,not,thread,safe,see,acquire,read,lock;public,list,t,get,mappings,by,url,string,url,path,return,this,url,lookup,get,url,path
AbstractHandlerMethodMapping -> MappingRegistry -> public List<T> getMappingsByUrl(String urlPath);1453843788;Return matches for the given URL path. Not thread-safe._@see #acquireReadLock();public List<T> getMappingsByUrl(String urlPath) {_			return this.urlLookup.get(urlPath)__		};return,matches,for,the,given,url,path,not,thread,safe,see,acquire,read,lock;public,list,t,get,mappings,by,url,string,url,path,return,this,url,lookup,get,url,path
AbstractHandlerMethodMapping -> MappingRegistry -> public List<T> getMappingsByUrl(String urlPath);1467730834;Return matches for the given URL path. Not thread-safe._@see #acquireReadLock();public List<T> getMappingsByUrl(String urlPath) {_			return this.urlLookup.get(urlPath)__		};return,matches,for,the,given,url,path,not,thread,safe,see,acquire,read,lock;public,list,t,get,mappings,by,url,string,url,path,return,this,url,lookup,get,url,path
AbstractHandlerMethodMapping -> MappingRegistry -> public List<T> getMappingsByUrl(String urlPath);1468417354;Return matches for the given URL path. Not thread-safe._@see #acquireReadLock();public List<T> getMappingsByUrl(String urlPath) {_			return this.urlLookup.get(urlPath)__		};return,matches,for,the,given,url,path,not,thread,safe,see,acquire,read,lock;public,list,t,get,mappings,by,url,string,url,path,return,this,url,lookup,get,url,path
AbstractHandlerMethodMapping -> MappingRegistry -> public List<T> getMappingsByUrl(String urlPath);1468596479;Return matches for the given URL path. Not thread-safe._@see #acquireReadLock();public List<T> getMappingsByUrl(String urlPath) {_			return this.urlLookup.get(urlPath)__		};return,matches,for,the,given,url,path,not,thread,safe,see,acquire,read,lock;public,list,t,get,mappings,by,url,string,url,path,return,this,url,lookup,get,url,path
AbstractHandlerMethodMapping -> MappingRegistry -> public List<T> getMappingsByUrl(String urlPath);1474905889;Return matches for the given URL path. Not thread-safe._@see #acquireReadLock();public List<T> getMappingsByUrl(String urlPath) {_			return this.urlLookup.get(urlPath)__		};return,matches,for,the,given,url,path,not,thread,safe,see,acquire,read,lock;public,list,t,get,mappings,by,url,string,url,path,return,this,url,lookup,get,url,path
AbstractHandlerMethodMapping -> MappingRegistry -> public List<T> getMappingsByUrl(String urlPath);1481813056;Return matches for the given URL path. Not thread-safe._@see #acquireReadLock();public List<T> getMappingsByUrl(String urlPath) {_			return this.urlLookup.get(urlPath)__		};return,matches,for,the,given,url,path,not,thread,safe,see,acquire,read,lock;public,list,t,get,mappings,by,url,string,url,path,return,this,url,lookup,get,url,path
AbstractHandlerMethodMapping -> MappingRegistry -> public List<T> getMappingsByUrl(String urlPath);1485810955;Return matches for the given URL path. Not thread-safe._@see #acquireReadLock();public List<T> getMappingsByUrl(String urlPath) {_			return this.urlLookup.get(urlPath)__		};return,matches,for,the,given,url,path,not,thread,safe,see,acquire,read,lock;public,list,t,get,mappings,by,url,string,url,path,return,this,url,lookup,get,url,path
AbstractHandlerMethodMapping -> MappingRegistry -> public List<T> getMappingsByUrl(String urlPath);1495868221;Return matches for the given URL path. Not thread-safe._@see #acquireReadLock();public List<T> getMappingsByUrl(String urlPath) {_			return this.urlLookup.get(urlPath)__		};return,matches,for,the,given,url,path,not,thread,safe,see,acquire,read,lock;public,list,t,get,mappings,by,url,string,url,path,return,this,url,lookup,get,url,path
AbstractHandlerMethodMapping -> public void setHandlerMethodMappingNamingStrategy(HandlerMethodMappingNamingStrategy<T> namingStrategy);1399404473;Configure the naming strategy to use for assigning a default name to every_mapped handler method.__@param namingStrategy strategy to use.;public void setHandlerMethodMappingNamingStrategy(HandlerMethodMappingNamingStrategy<T> namingStrategy) {_		this.namingStrategy = namingStrategy__	};configure,the,naming,strategy,to,use,for,assigning,a,default,name,to,every,mapped,handler,method,param,naming,strategy,strategy,to,use;public,void,set,handler,method,mapping,naming,strategy,handler,method,mapping,naming,strategy,t,naming,strategy,this,naming,strategy,naming,strategy
AbstractHandlerMethodMapping -> public void setHandlerMethodMappingNamingStrategy(HandlerMethodMappingNamingStrategy<T> namingStrategy);1426869344;Configure the naming strategy to use for assigning a default name to every_mapped handler method.;public void setHandlerMethodMappingNamingStrategy(HandlerMethodMappingNamingStrategy<T> namingStrategy) {_		this.namingStrategy = namingStrategy__	};configure,the,naming,strategy,to,use,for,assigning,a,default,name,to,every,mapped,handler,method;public,void,set,handler,method,mapping,naming,strategy,handler,method,mapping,naming,strategy,t,naming,strategy,this,naming,strategy,naming,strategy
AbstractHandlerMethodMapping -> public void setHandlerMethodMappingNamingStrategy(HandlerMethodMappingNamingStrategy<T> namingStrategy);1427240641;Configure the naming strategy to use for assigning a default name to every_mapped handler method.;public void setHandlerMethodMappingNamingStrategy(HandlerMethodMappingNamingStrategy<T> namingStrategy) {_		this.namingStrategy = namingStrategy__	};configure,the,naming,strategy,to,use,for,assigning,a,default,name,to,every,mapped,handler,method;public,void,set,handler,method,mapping,naming,strategy,handler,method,mapping,naming,strategy,t,naming,strategy,this,naming,strategy,naming,strategy
AbstractHandlerMethodMapping -> public void setHandlerMethodMappingNamingStrategy(HandlerMethodMappingNamingStrategy<T> namingStrategy);1427983931;Configure the naming strategy to use for assigning a default name to every_mapped handler method.;public void setHandlerMethodMappingNamingStrategy(HandlerMethodMappingNamingStrategy<T> namingStrategy) {_		this.namingStrategy = namingStrategy__	};configure,the,naming,strategy,to,use,for,assigning,a,default,name,to,every,mapped,handler,method;public,void,set,handler,method,mapping,naming,strategy,handler,method,mapping,naming,strategy,t,naming,strategy,this,naming,strategy,naming,strategy
AbstractHandlerMethodMapping -> public void setHandlerMethodMappingNamingStrategy(HandlerMethodMappingNamingStrategy<T> namingStrategy);1430734105;Configure the naming strategy to use for assigning a default name to every_mapped handler method.;public void setHandlerMethodMappingNamingStrategy(HandlerMethodMappingNamingStrategy<T> namingStrategy) {_		this.namingStrategy = namingStrategy__	};configure,the,naming,strategy,to,use,for,assigning,a,default,name,to,every,mapped,handler,method;public,void,set,handler,method,mapping,naming,strategy,handler,method,mapping,naming,strategy,t,naming,strategy,this,naming,strategy,naming,strategy
AbstractHandlerMethodMapping -> public void setHandlerMethodMappingNamingStrategy(HandlerMethodMappingNamingStrategy<T> namingStrategy);1430734105;Configure the naming strategy to use for assigning a default name to every_mapped handler method._<p>The default naming strategy is based on the capital letters of the_class name followed by "#" and then the method name, e.g. "TC#getFoo"_for a class named TestController with method getFoo.;public void setHandlerMethodMappingNamingStrategy(HandlerMethodMappingNamingStrategy<T> namingStrategy) {_		this.namingStrategy = namingStrategy__	};configure,the,naming,strategy,to,use,for,assigning,a,default,name,to,every,mapped,handler,method,p,the,default,naming,strategy,is,based,on,the,capital,letters,of,the,class,name,followed,by,and,then,the,method,name,e,g,tc,get,foo,for,a,class,named,test,controller,with,method,get,foo;public,void,set,handler,method,mapping,naming,strategy,handler,method,mapping,naming,strategy,t,naming,strategy,this,naming,strategy,naming,strategy
AbstractHandlerMethodMapping -> public void setHandlerMethodMappingNamingStrategy(HandlerMethodMappingNamingStrategy<T> namingStrategy);1430734106;Configure the naming strategy to use for assigning a default name to every_mapped handler method._<p>The default naming strategy is based on the capital letters of the_class name followed by "#" and then the method name, e.g. "TC#getFoo"_for a class named TestController with method getFoo.;public void setHandlerMethodMappingNamingStrategy(HandlerMethodMappingNamingStrategy<T> namingStrategy) {_		this.namingStrategy = namingStrategy__	};configure,the,naming,strategy,to,use,for,assigning,a,default,name,to,every,mapped,handler,method,p,the,default,naming,strategy,is,based,on,the,capital,letters,of,the,class,name,followed,by,and,then,the,method,name,e,g,tc,get,foo,for,a,class,named,test,controller,with,method,get,foo;public,void,set,handler,method,mapping,naming,strategy,handler,method,mapping,naming,strategy,t,naming,strategy,this,naming,strategy,naming,strategy
AbstractHandlerMethodMapping -> public void setHandlerMethodMappingNamingStrategy(HandlerMethodMappingNamingStrategy<T> namingStrategy);1430774689;Configure the naming strategy to use for assigning a default name to every_mapped handler method._<p>The default naming strategy is based on the capital letters of the_class name followed by "#" and then the method name, e.g. "TC#getFoo"_for a class named TestController with method getFoo.;public void setHandlerMethodMappingNamingStrategy(HandlerMethodMappingNamingStrategy<T> namingStrategy) {_		this.namingStrategy = namingStrategy__	};configure,the,naming,strategy,to,use,for,assigning,a,default,name,to,every,mapped,handler,method,p,the,default,naming,strategy,is,based,on,the,capital,letters,of,the,class,name,followed,by,and,then,the,method,name,e,g,tc,get,foo,for,a,class,named,test,controller,with,method,get,foo;public,void,set,handler,method,mapping,naming,strategy,handler,method,mapping,naming,strategy,t,naming,strategy,this,naming,strategy,naming,strategy
AbstractHandlerMethodMapping -> public void setHandlerMethodMappingNamingStrategy(HandlerMethodMappingNamingStrategy<T> namingStrategy);1430844966;Configure the naming strategy to use for assigning a default name to every_mapped handler method._<p>The default naming strategy is based on the capital letters of the_class name followed by "#" and then the method name, e.g. "TC#getFoo"_for a class named TestController with method getFoo.;public void setHandlerMethodMappingNamingStrategy(HandlerMethodMappingNamingStrategy<T> namingStrategy) {_		this.namingStrategy = namingStrategy__	};configure,the,naming,strategy,to,use,for,assigning,a,default,name,to,every,mapped,handler,method,p,the,default,naming,strategy,is,based,on,the,capital,letters,of,the,class,name,followed,by,and,then,the,method,name,e,g,tc,get,foo,for,a,class,named,test,controller,with,method,get,foo;public,void,set,handler,method,mapping,naming,strategy,handler,method,mapping,naming,strategy,t,naming,strategy,this,naming,strategy,naming,strategy
AbstractHandlerMethodMapping -> public void setHandlerMethodMappingNamingStrategy(HandlerMethodMappingNamingStrategy<T> namingStrategy);1430844967;Configure the naming strategy to use for assigning a default name to every_mapped handler method._<p>The default naming strategy is based on the capital letters of the_class name followed by "#" and then the method name, e.g. "TC#getFoo"_for a class named TestController with method getFoo.;public void setHandlerMethodMappingNamingStrategy(HandlerMethodMappingNamingStrategy<T> namingStrategy) {_		this.namingStrategy = namingStrategy__	};configure,the,naming,strategy,to,use,for,assigning,a,default,name,to,every,mapped,handler,method,p,the,default,naming,strategy,is,based,on,the,capital,letters,of,the,class,name,followed,by,and,then,the,method,name,e,g,tc,get,foo,for,a,class,named,test,controller,with,method,get,foo;public,void,set,handler,method,mapping,naming,strategy,handler,method,mapping,naming,strategy,t,naming,strategy,this,naming,strategy,naming,strategy
AbstractHandlerMethodMapping -> public void setHandlerMethodMappingNamingStrategy(HandlerMethodMappingNamingStrategy<T> namingStrategy);1431730371;Configure the naming strategy to use for assigning a default name to every_mapped handler method._<p>The default naming strategy is based on the capital letters of the_class name followed by "#" and then the method name, e.g. "TC#getFoo"_for a class named TestController with method getFoo.;public void setHandlerMethodMappingNamingStrategy(HandlerMethodMappingNamingStrategy<T> namingStrategy) {_		this.namingStrategy = namingStrategy__	};configure,the,naming,strategy,to,use,for,assigning,a,default,name,to,every,mapped,handler,method,p,the,default,naming,strategy,is,based,on,the,capital,letters,of,the,class,name,followed,by,and,then,the,method,name,e,g,tc,get,foo,for,a,class,named,test,controller,with,method,get,foo;public,void,set,handler,method,mapping,naming,strategy,handler,method,mapping,naming,strategy,t,naming,strategy,this,naming,strategy,naming,strategy
AbstractHandlerMethodMapping -> public void setHandlerMethodMappingNamingStrategy(HandlerMethodMappingNamingStrategy<T> namingStrategy);1439294371;Configure the naming strategy to use for assigning a default name to every_mapped handler method._<p>The default naming strategy is based on the capital letters of the_class name followed by "#" and then the method name, e.g. "TC#getFoo"_for a class named TestController with method getFoo.;public void setHandlerMethodMappingNamingStrategy(HandlerMethodMappingNamingStrategy<T> namingStrategy) {_		this.namingStrategy = namingStrategy__	};configure,the,naming,strategy,to,use,for,assigning,a,default,name,to,every,mapped,handler,method,p,the,default,naming,strategy,is,based,on,the,capital,letters,of,the,class,name,followed,by,and,then,the,method,name,e,g,tc,get,foo,for,a,class,named,test,controller,with,method,get,foo;public,void,set,handler,method,mapping,naming,strategy,handler,method,mapping,naming,strategy,t,naming,strategy,this,naming,strategy,naming,strategy
AbstractHandlerMethodMapping -> public void setHandlerMethodMappingNamingStrategy(HandlerMethodMappingNamingStrategy<T> namingStrategy);1447077465;Configure the naming strategy to use for assigning a default name to every_mapped handler method._<p>The default naming strategy is based on the capital letters of the_class name followed by "#" and then the method name, e.g. "TC#getFoo"_for a class named TestController with method getFoo.;public void setHandlerMethodMappingNamingStrategy(HandlerMethodMappingNamingStrategy<T> namingStrategy) {_		this.namingStrategy = namingStrategy__	};configure,the,naming,strategy,to,use,for,assigning,a,default,name,to,every,mapped,handler,method,p,the,default,naming,strategy,is,based,on,the,capital,letters,of,the,class,name,followed,by,and,then,the,method,name,e,g,tc,get,foo,for,a,class,named,test,controller,with,method,get,foo;public,void,set,handler,method,mapping,naming,strategy,handler,method,mapping,naming,strategy,t,naming,strategy,this,naming,strategy,naming,strategy
AbstractHandlerMethodMapping -> public void setHandlerMethodMappingNamingStrategy(HandlerMethodMappingNamingStrategy<T> namingStrategy);1448483163;Configure the naming strategy to use for assigning a default name to every_mapped handler method._<p>The default naming strategy is based on the capital letters of the_class name followed by "#" and then the method name, e.g. "TC#getFoo"_for a class named TestController with method getFoo.;public void setHandlerMethodMappingNamingStrategy(HandlerMethodMappingNamingStrategy<T> namingStrategy) {_		this.namingStrategy = namingStrategy__	};configure,the,naming,strategy,to,use,for,assigning,a,default,name,to,every,mapped,handler,method,p,the,default,naming,strategy,is,based,on,the,capital,letters,of,the,class,name,followed,by,and,then,the,method,name,e,g,tc,get,foo,for,a,class,named,test,controller,with,method,get,foo;public,void,set,handler,method,mapping,naming,strategy,handler,method,mapping,naming,strategy,t,naming,strategy,this,naming,strategy,naming,strategy
AbstractHandlerMethodMapping -> public void setHandlerMethodMappingNamingStrategy(HandlerMethodMappingNamingStrategy<T> namingStrategy);1452685925;Configure the naming strategy to use for assigning a default name to every_mapped handler method._<p>The default naming strategy is based on the capital letters of the_class name followed by "#" and then the method name, e.g. "TC#getFoo"_for a class named TestController with method getFoo.;public void setHandlerMethodMappingNamingStrategy(HandlerMethodMappingNamingStrategy<T> namingStrategy) {_		this.namingStrategy = namingStrategy__	};configure,the,naming,strategy,to,use,for,assigning,a,default,name,to,every,mapped,handler,method,p,the,default,naming,strategy,is,based,on,the,capital,letters,of,the,class,name,followed,by,and,then,the,method,name,e,g,tc,get,foo,for,a,class,named,test,controller,with,method,get,foo;public,void,set,handler,method,mapping,naming,strategy,handler,method,mapping,naming,strategy,t,naming,strategy,this,naming,strategy,naming,strategy
AbstractHandlerMethodMapping -> public void setHandlerMethodMappingNamingStrategy(HandlerMethodMappingNamingStrategy<T> namingStrategy);1452873718;Configure the naming strategy to use for assigning a default name to every_mapped handler method._<p>The default naming strategy is based on the capital letters of the_class name followed by "#" and then the method name, e.g. "TC#getFoo"_for a class named TestController with method getFoo.;public void setHandlerMethodMappingNamingStrategy(HandlerMethodMappingNamingStrategy<T> namingStrategy) {_		this.namingStrategy = namingStrategy__	};configure,the,naming,strategy,to,use,for,assigning,a,default,name,to,every,mapped,handler,method,p,the,default,naming,strategy,is,based,on,the,capital,letters,of,the,class,name,followed,by,and,then,the,method,name,e,g,tc,get,foo,for,a,class,named,test,controller,with,method,get,foo;public,void,set,handler,method,mapping,naming,strategy,handler,method,mapping,naming,strategy,t,naming,strategy,this,naming,strategy,naming,strategy
AbstractHandlerMethodMapping -> public void setHandlerMethodMappingNamingStrategy(HandlerMethodMappingNamingStrategy<T> namingStrategy);1453843788;Configure the naming strategy to use for assigning a default name to every_mapped handler method._<p>The default naming strategy is based on the capital letters of the_class name followed by "#" and then the method name, e.g. "TC#getFoo"_for a class named TestController with method getFoo.;public void setHandlerMethodMappingNamingStrategy(HandlerMethodMappingNamingStrategy<T> namingStrategy) {_		this.namingStrategy = namingStrategy__	};configure,the,naming,strategy,to,use,for,assigning,a,default,name,to,every,mapped,handler,method,p,the,default,naming,strategy,is,based,on,the,capital,letters,of,the,class,name,followed,by,and,then,the,method,name,e,g,tc,get,foo,for,a,class,named,test,controller,with,method,get,foo;public,void,set,handler,method,mapping,naming,strategy,handler,method,mapping,naming,strategy,t,naming,strategy,this,naming,strategy,naming,strategy
AbstractHandlerMethodMapping -> public void setHandlerMethodMappingNamingStrategy(HandlerMethodMappingNamingStrategy<T> namingStrategy);1467730834;Configure the naming strategy to use for assigning a default name to every_mapped handler method._<p>The default naming strategy is based on the capital letters of the_class name followed by "#" and then the method name, e.g. "TC#getFoo"_for a class named TestController with method getFoo.;public void setHandlerMethodMappingNamingStrategy(HandlerMethodMappingNamingStrategy<T> namingStrategy) {_		this.namingStrategy = namingStrategy__	};configure,the,naming,strategy,to,use,for,assigning,a,default,name,to,every,mapped,handler,method,p,the,default,naming,strategy,is,based,on,the,capital,letters,of,the,class,name,followed,by,and,then,the,method,name,e,g,tc,get,foo,for,a,class,named,test,controller,with,method,get,foo;public,void,set,handler,method,mapping,naming,strategy,handler,method,mapping,naming,strategy,t,naming,strategy,this,naming,strategy,naming,strategy
AbstractHandlerMethodMapping -> public void setHandlerMethodMappingNamingStrategy(HandlerMethodMappingNamingStrategy<T> namingStrategy);1468417354;Configure the naming strategy to use for assigning a default name to every_mapped handler method._<p>The default naming strategy is based on the capital letters of the_class name followed by "#" and then the method name, e.g. "TC#getFoo"_for a class named TestController with method getFoo.;public void setHandlerMethodMappingNamingStrategy(HandlerMethodMappingNamingStrategy<T> namingStrategy) {_		this.namingStrategy = namingStrategy__	};configure,the,naming,strategy,to,use,for,assigning,a,default,name,to,every,mapped,handler,method,p,the,default,naming,strategy,is,based,on,the,capital,letters,of,the,class,name,followed,by,and,then,the,method,name,e,g,tc,get,foo,for,a,class,named,test,controller,with,method,get,foo;public,void,set,handler,method,mapping,naming,strategy,handler,method,mapping,naming,strategy,t,naming,strategy,this,naming,strategy,naming,strategy
AbstractHandlerMethodMapping -> public void setHandlerMethodMappingNamingStrategy(HandlerMethodMappingNamingStrategy<T> namingStrategy);1468596479;Configure the naming strategy to use for assigning a default name to every_mapped handler method._<p>The default naming strategy is based on the capital letters of the_class name followed by "#" and then the method name, e.g. "TC#getFoo"_for a class named TestController with method getFoo.;public void setHandlerMethodMappingNamingStrategy(HandlerMethodMappingNamingStrategy<T> namingStrategy) {_		this.namingStrategy = namingStrategy__	};configure,the,naming,strategy,to,use,for,assigning,a,default,name,to,every,mapped,handler,method,p,the,default,naming,strategy,is,based,on,the,capital,letters,of,the,class,name,followed,by,and,then,the,method,name,e,g,tc,get,foo,for,a,class,named,test,controller,with,method,get,foo;public,void,set,handler,method,mapping,naming,strategy,handler,method,mapping,naming,strategy,t,naming,strategy,this,naming,strategy,naming,strategy
AbstractHandlerMethodMapping -> public void setHandlerMethodMappingNamingStrategy(HandlerMethodMappingNamingStrategy<T> namingStrategy);1474905889;Configure the naming strategy to use for assigning a default name to every_mapped handler method._<p>The default naming strategy is based on the capital letters of the_class name followed by "#" and then the method name, e.g. "TC#getFoo"_for a class named TestController with method getFoo.;public void setHandlerMethodMappingNamingStrategy(HandlerMethodMappingNamingStrategy<T> namingStrategy) {_		this.namingStrategy = namingStrategy__	};configure,the,naming,strategy,to,use,for,assigning,a,default,name,to,every,mapped,handler,method,p,the,default,naming,strategy,is,based,on,the,capital,letters,of,the,class,name,followed,by,and,then,the,method,name,e,g,tc,get,foo,for,a,class,named,test,controller,with,method,get,foo;public,void,set,handler,method,mapping,naming,strategy,handler,method,mapping,naming,strategy,t,naming,strategy,this,naming,strategy,naming,strategy
AbstractHandlerMethodMapping -> public void setHandlerMethodMappingNamingStrategy(HandlerMethodMappingNamingStrategy<T> namingStrategy);1481813056;Configure the naming strategy to use for assigning a default name to every_mapped handler method._<p>The default naming strategy is based on the capital letters of the_class name followed by "#" and then the method name, e.g. "TC#getFoo"_for a class named TestController with method getFoo.;public void setHandlerMethodMappingNamingStrategy(HandlerMethodMappingNamingStrategy<T> namingStrategy) {_		this.namingStrategy = namingStrategy__	};configure,the,naming,strategy,to,use,for,assigning,a,default,name,to,every,mapped,handler,method,p,the,default,naming,strategy,is,based,on,the,capital,letters,of,the,class,name,followed,by,and,then,the,method,name,e,g,tc,get,foo,for,a,class,named,test,controller,with,method,get,foo;public,void,set,handler,method,mapping,naming,strategy,handler,method,mapping,naming,strategy,t,naming,strategy,this,naming,strategy,naming,strategy
AbstractHandlerMethodMapping -> public void setHandlerMethodMappingNamingStrategy(HandlerMethodMappingNamingStrategy<T> namingStrategy);1485810955;Configure the naming strategy to use for assigning a default name to every_mapped handler method._<p>The default naming strategy is based on the capital letters of the_class name followed by "#" and then the method name, e.g. "TC#getFoo"_for a class named TestController with method getFoo.;public void setHandlerMethodMappingNamingStrategy(HandlerMethodMappingNamingStrategy<T> namingStrategy) {_		this.namingStrategy = namingStrategy__	};configure,the,naming,strategy,to,use,for,assigning,a,default,name,to,every,mapped,handler,method,p,the,default,naming,strategy,is,based,on,the,capital,letters,of,the,class,name,followed,by,and,then,the,method,name,e,g,tc,get,foo,for,a,class,named,test,controller,with,method,get,foo;public,void,set,handler,method,mapping,naming,strategy,handler,method,mapping,naming,strategy,t,naming,strategy,this,naming,strategy,naming,strategy
AbstractHandlerMethodMapping -> public void setHandlerMethodMappingNamingStrategy(HandlerMethodMappingNamingStrategy<T> namingStrategy);1495868221;Configure the naming strategy to use for assigning a default name to every_mapped handler method._<p>The default naming strategy is based on the capital letters of the_class name followed by "#" and then the method name, e.g. "TC#getFoo"_for a class named TestController with method getFoo.;public void setHandlerMethodMappingNamingStrategy(HandlerMethodMappingNamingStrategy<T> namingStrategy) {_		this.namingStrategy = namingStrategy__	};configure,the,naming,strategy,to,use,for,assigning,a,default,name,to,every,mapped,handler,method,p,the,default,naming,strategy,is,based,on,the,capital,letters,of,the,class,name,followed,by,and,then,the,method,name,e,g,tc,get,foo,for,a,class,named,test,controller,with,method,get,foo;public,void,set,handler,method,mapping,naming,strategy,handler,method,mapping,naming,strategy,t,naming,strategy,this,naming,strategy,naming,strategy
AbstractHandlerMethodMapping -> public void setHandlerMethodMappingNamingStrategy(HandlerMethodMappingNamingStrategy<T> namingStrategy);1496837955;Configure the naming strategy to use for assigning a default name to every_mapped handler method._<p>The default naming strategy is based on the capital letters of the_class name followed by "#" and then the method name, e.g. "TC#getFoo"_for a class named TestController with method getFoo.;public void setHandlerMethodMappingNamingStrategy(HandlerMethodMappingNamingStrategy<T> namingStrategy) {_		this.namingStrategy = namingStrategy__	};configure,the,naming,strategy,to,use,for,assigning,a,default,name,to,every,mapped,handler,method,p,the,default,naming,strategy,is,based,on,the,capital,letters,of,the,class,name,followed,by,and,then,the,method,name,e,g,tc,get,foo,for,a,class,named,test,controller,with,method,get,foo;public,void,set,handler,method,mapping,naming,strategy,handler,method,mapping,naming,strategy,t,naming,strategy,this,naming,strategy,naming,strategy
AbstractHandlerMethodMapping -> public void setHandlerMethodMappingNamingStrategy(HandlerMethodMappingNamingStrategy<T> namingStrategy);1497251962;Configure the naming strategy to use for assigning a default name to every_mapped handler method._<p>The default naming strategy is based on the capital letters of the_class name followed by "#" and then the method name, e.g. "TC#getFoo"_for a class named TestController with method getFoo.;public void setHandlerMethodMappingNamingStrategy(HandlerMethodMappingNamingStrategy<T> namingStrategy) {_		this.namingStrategy = namingStrategy__	};configure,the,naming,strategy,to,use,for,assigning,a,default,name,to,every,mapped,handler,method,p,the,default,naming,strategy,is,based,on,the,capital,letters,of,the,class,name,followed,by,and,then,the,method,name,e,g,tc,get,foo,for,a,class,named,test,controller,with,method,get,foo;public,void,set,handler,method,mapping,naming,strategy,handler,method,mapping,naming,strategy,t,naming,strategy,this,naming,strategy,naming,strategy
AbstractHandlerMethodMapping -> public void setHandlerMethodMappingNamingStrategy(HandlerMethodMappingNamingStrategy<T> namingStrategy);1498780456;Configure the naming strategy to use for assigning a default name to every_mapped handler method._<p>The default naming strategy is based on the capital letters of the_class name followed by "#" and then the method name, e.g. "TC#getFoo"_for a class named TestController with method getFoo.;public void setHandlerMethodMappingNamingStrategy(HandlerMethodMappingNamingStrategy<T> namingStrategy) {_		this.namingStrategy = namingStrategy__	};configure,the,naming,strategy,to,use,for,assigning,a,default,name,to,every,mapped,handler,method,p,the,default,naming,strategy,is,based,on,the,capital,letters,of,the,class,name,followed,by,and,then,the,method,name,e,g,tc,get,foo,for,a,class,named,test,controller,with,method,get,foo;public,void,set,handler,method,mapping,naming,strategy,handler,method,mapping,naming,strategy,t,naming,strategy,this,naming,strategy,naming,strategy
AbstractHandlerMethodMapping -> public void setHandlerMethodMappingNamingStrategy(HandlerMethodMappingNamingStrategy<T> namingStrategy);1518772998;Configure the naming strategy to use for assigning a default name to every_mapped handler method._<p>The default naming strategy is based on the capital letters of the_class name followed by "#" and then the method name, e.g. "TC#getFoo"_for a class named TestController with method getFoo.;public void setHandlerMethodMappingNamingStrategy(HandlerMethodMappingNamingStrategy<T> namingStrategy) {_		this.namingStrategy = namingStrategy__	};configure,the,naming,strategy,to,use,for,assigning,a,default,name,to,every,mapped,handler,method,p,the,default,naming,strategy,is,based,on,the,capital,letters,of,the,class,name,followed,by,and,then,the,method,name,e,g,tc,get,foo,for,a,class,named,test,controller,with,method,get,foo;public,void,set,handler,method,mapping,naming,strategy,handler,method,mapping,naming,strategy,t,naming,strategy,this,naming,strategy,naming,strategy
AbstractHandlerMethodMapping -> public void setHandlerMethodMappingNamingStrategy(HandlerMethodMappingNamingStrategy<T> namingStrategy);1522103912;Configure the naming strategy to use for assigning a default name to every_mapped handler method._<p>The default naming strategy is based on the capital letters of the_class name followed by "#" and then the method name, e.g. "TC#getFoo"_for a class named TestController with method getFoo.;public void setHandlerMethodMappingNamingStrategy(HandlerMethodMappingNamingStrategy<T> namingStrategy) {_		this.namingStrategy = namingStrategy__	};configure,the,naming,strategy,to,use,for,assigning,a,default,name,to,every,mapped,handler,method,p,the,default,naming,strategy,is,based,on,the,capital,letters,of,the,class,name,followed,by,and,then,the,method,name,e,g,tc,get,foo,for,a,class,named,test,controller,with,method,get,foo;public,void,set,handler,method,mapping,naming,strategy,handler,method,mapping,naming,strategy,t,naming,strategy,this,naming,strategy,naming,strategy
AbstractHandlerMethodMapping -> public void setHandlerMethodMappingNamingStrategy(HandlerMethodMappingNamingStrategy<T> namingStrategy);1522843494;Configure the naming strategy to use for assigning a default name to every_mapped handler method._<p>The default naming strategy is based on the capital letters of the_class name followed by "#" and then the method name, e.g. "TC#getFoo"_for a class named TestController with method getFoo.;public void setHandlerMethodMappingNamingStrategy(HandlerMethodMappingNamingStrategy<T> namingStrategy) {_		this.namingStrategy = namingStrategy__	};configure,the,naming,strategy,to,use,for,assigning,a,default,name,to,every,mapped,handler,method,p,the,default,naming,strategy,is,based,on,the,capital,letters,of,the,class,name,followed,by,and,then,the,method,name,e,g,tc,get,foo,for,a,class,named,test,controller,with,method,get,foo;public,void,set,handler,method,mapping,naming,strategy,handler,method,mapping,naming,strategy,t,naming,strategy,this,naming,strategy,naming,strategy
AbstractHandlerMethodMapping -> public void setHandlerMethodMappingNamingStrategy(HandlerMethodMappingNamingStrategy<T> namingStrategy);1529361191;Configure the naming strategy to use for assigning a default name to every_mapped handler method._<p>The default naming strategy is based on the capital letters of the_class name followed by "#" and then the method name, e.g. "TC#getFoo"_for a class named TestController with method getFoo.;public void setHandlerMethodMappingNamingStrategy(HandlerMethodMappingNamingStrategy<T> namingStrategy) {_		this.namingStrategy = namingStrategy__	};configure,the,naming,strategy,to,use,for,assigning,a,default,name,to,every,mapped,handler,method,p,the,default,naming,strategy,is,based,on,the,capital,letters,of,the,class,name,followed,by,and,then,the,method,name,e,g,tc,get,foo,for,a,class,named,test,controller,with,method,get,foo;public,void,set,handler,method,mapping,naming,strategy,handler,method,mapping,naming,strategy,t,naming,strategy,this,naming,strategy,naming,strategy
AbstractHandlerMethodMapping -> public void setHandlerMethodMappingNamingStrategy(HandlerMethodMappingNamingStrategy<T> namingStrategy);1529721864;Configure the naming strategy to use for assigning a default name to every_mapped handler method._<p>The default naming strategy is based on the capital letters of the_class name followed by "#" and then the method name, e.g. "TC#getFoo"_for a class named TestController with method getFoo.;public void setHandlerMethodMappingNamingStrategy(HandlerMethodMappingNamingStrategy<T> namingStrategy) {_		this.namingStrategy = namingStrategy__	};configure,the,naming,strategy,to,use,for,assigning,a,default,name,to,every,mapped,handler,method,p,the,default,naming,strategy,is,based,on,the,capital,letters,of,the,class,name,followed,by,and,then,the,method,name,e,g,tc,get,foo,for,a,class,named,test,controller,with,method,get,foo;public,void,set,handler,method,mapping,naming,strategy,handler,method,mapping,naming,strategy,t,naming,strategy,this,naming,strategy,naming,strategy
AbstractHandlerMethodMapping -> public void setHandlerMethodMappingNamingStrategy(HandlerMethodMappingNamingStrategy<T> namingStrategy);1530174524;Configure the naming strategy to use for assigning a default name to every_mapped handler method._<p>The default naming strategy is based on the capital letters of the_class name followed by "#" and then the method name, e.g. "TC#getFoo"_for a class named TestController with method getFoo.;public void setHandlerMethodMappingNamingStrategy(HandlerMethodMappingNamingStrategy<T> namingStrategy) {_		this.namingStrategy = namingStrategy__	};configure,the,naming,strategy,to,use,for,assigning,a,default,name,to,every,mapped,handler,method,p,the,default,naming,strategy,is,based,on,the,capital,letters,of,the,class,name,followed,by,and,then,the,method,name,e,g,tc,get,foo,for,a,class,named,test,controller,with,method,get,foo;public,void,set,handler,method,mapping,naming,strategy,handler,method,mapping,naming,strategy,t,naming,strategy,this,naming,strategy,naming,strategy
AbstractHandlerMethodMapping -> public void setHandlerMethodMappingNamingStrategy(HandlerMethodMappingNamingStrategy<T> namingStrategy);1530174524;Configure the naming strategy to use for assigning a default name to every_mapped handler method._<p>The default naming strategy is based on the capital letters of the_class name followed by "#" and then the method name, e.g. "TC#getFoo"_for a class named TestController with method getFoo.;public void setHandlerMethodMappingNamingStrategy(HandlerMethodMappingNamingStrategy<T> namingStrategy) {_		this.namingStrategy = namingStrategy__	};configure,the,naming,strategy,to,use,for,assigning,a,default,name,to,every,mapped,handler,method,p,the,default,naming,strategy,is,based,on,the,capital,letters,of,the,class,name,followed,by,and,then,the,method,name,e,g,tc,get,foo,for,a,class,named,test,controller,with,method,get,foo;public,void,set,handler,method,mapping,naming,strategy,handler,method,mapping,naming,strategy,t,naming,strategy,this,naming,strategy,naming,strategy
AbstractHandlerMethodMapping -> public void setHandlerMethodMappingNamingStrategy(HandlerMethodMappingNamingStrategy<T> namingStrategy);1533943217;Configure the naming strategy to use for assigning a default name to every_mapped handler method._<p>The default naming strategy is based on the capital letters of the_class name followed by "#" and then the method name, e.g. "TC#getFoo"_for a class named TestController with method getFoo.;public void setHandlerMethodMappingNamingStrategy(HandlerMethodMappingNamingStrategy<T> namingStrategy) {_		this.namingStrategy = namingStrategy__	};configure,the,naming,strategy,to,use,for,assigning,a,default,name,to,every,mapped,handler,method,p,the,default,naming,strategy,is,based,on,the,capital,letters,of,the,class,name,followed,by,and,then,the,method,name,e,g,tc,get,foo,for,a,class,named,test,controller,with,method,get,foo;public,void,set,handler,method,mapping,naming,strategy,handler,method,mapping,naming,strategy,t,naming,strategy,this,naming,strategy,naming,strategy
AbstractHandlerMethodMapping -> public void setHandlerMethodMappingNamingStrategy(HandlerMethodMappingNamingStrategy<T> namingStrategy);1542407418;Configure the naming strategy to use for assigning a default name to every_mapped handler method._<p>The default naming strategy is based on the capital letters of the_class name followed by "#" and then the method name, e.g. "TC#getFoo"_for a class named TestController with method getFoo.;public void setHandlerMethodMappingNamingStrategy(HandlerMethodMappingNamingStrategy<T> namingStrategy) {_		this.namingStrategy = namingStrategy__	};configure,the,naming,strategy,to,use,for,assigning,a,default,name,to,every,mapped,handler,method,p,the,default,naming,strategy,is,based,on,the,capital,letters,of,the,class,name,followed,by,and,then,the,method,name,e,g,tc,get,foo,for,a,class,named,test,controller,with,method,get,foo;public,void,set,handler,method,mapping,naming,strategy,handler,method,mapping,naming,strategy,t,naming,strategy,this,naming,strategy,naming,strategy
AbstractHandlerMethodMapping -> public void setHandlerMethodMappingNamingStrategy(HandlerMethodMappingNamingStrategy<T> namingStrategy);1542771062;Configure the naming strategy to use for assigning a default name to every_mapped handler method._<p>The default naming strategy is based on the capital letters of the_class name followed by "#" and then the method name, e.g. "TC#getFoo"_for a class named TestController with method getFoo.;public void setHandlerMethodMappingNamingStrategy(HandlerMethodMappingNamingStrategy<T> namingStrategy) {_		this.namingStrategy = namingStrategy__	};configure,the,naming,strategy,to,use,for,assigning,a,default,name,to,every,mapped,handler,method,p,the,default,naming,strategy,is,based,on,the,capital,letters,of,the,class,name,followed,by,and,then,the,method,name,e,g,tc,get,foo,for,a,class,named,test,controller,with,method,get,foo;public,void,set,handler,method,mapping,naming,strategy,handler,method,mapping,naming,strategy,t,naming,strategy,this,naming,strategy,naming,strategy
AbstractHandlerMethodMapping -> public void setHandlerMethodMappingNamingStrategy(HandlerMethodMappingNamingStrategy<T> namingStrategy);1548427561;Configure the naming strategy to use for assigning a default name to every_mapped handler method._<p>The default naming strategy is based on the capital letters of the_class name followed by "#" and then the method name, e.g. "TC#getFoo"_for a class named TestController with method getFoo.;public void setHandlerMethodMappingNamingStrategy(HandlerMethodMappingNamingStrategy<T> namingStrategy) {_		this.namingStrategy = namingStrategy__	};configure,the,naming,strategy,to,use,for,assigning,a,default,name,to,every,mapped,handler,method,p,the,default,naming,strategy,is,based,on,the,capital,letters,of,the,class,name,followed,by,and,then,the,method,name,e,g,tc,get,foo,for,a,class,named,test,controller,with,method,get,foo;public,void,set,handler,method,mapping,naming,strategy,handler,method,mapping,naming,strategy,t,naming,strategy,this,naming,strategy,naming,strategy
AbstractHandlerMethodMapping -> public void setHandlerMethodMappingNamingStrategy(HandlerMethodMappingNamingStrategy<T> namingStrategy);1551093473;Configure the naming strategy to use for assigning a default name to every_mapped handler method._<p>The default naming strategy is based on the capital letters of the_class name followed by "#" and then the method name, e.g. "TC#getFoo"_for a class named TestController with method getFoo.;public void setHandlerMethodMappingNamingStrategy(HandlerMethodMappingNamingStrategy<T> namingStrategy) {_		this.namingStrategy = namingStrategy__	};configure,the,naming,strategy,to,use,for,assigning,a,default,name,to,every,mapped,handler,method,p,the,default,naming,strategy,is,based,on,the,capital,letters,of,the,class,name,followed,by,and,then,the,method,name,e,g,tc,get,foo,for,a,class,named,test,controller,with,method,get,foo;public,void,set,handler,method,mapping,naming,strategy,handler,method,mapping,naming,strategy,t,naming,strategy,this,naming,strategy,naming,strategy
AbstractHandlerMethodMapping -> public Map<T, HandlerMethod> getHandlerMethods();1328020251;Return a map with all handler methods and their mappings.;public Map<T, HandlerMethod> getHandlerMethods() {_		return Collections.unmodifiableMap(handlerMethods)__	};return,a,map,with,all,handler,methods,and,their,mappings;public,map,t,handler,method,get,handler,methods,return,collections,unmodifiable,map,handler,methods
AbstractHandlerMethodMapping -> public Map<T, HandlerMethod> getHandlerMethods();1328022204;Return a map with all handler methods and their mappings.;public Map<T, HandlerMethod> getHandlerMethods() {_		return Collections.unmodifiableMap(handlerMethods)__	};return,a,map,with,all,handler,methods,and,their,mappings;public,map,t,handler,method,get,handler,methods,return,collections,unmodifiable,map,handler,methods
AbstractHandlerMethodMapping -> public Map<T, HandlerMethod> getHandlerMethods();1336682556;Return a map with all handler methods and their mappings.;public Map<T, HandlerMethod> getHandlerMethods() {_		return Collections.unmodifiableMap(handlerMethods)__	};return,a,map,with,all,handler,methods,and,their,mappings;public,map,t,handler,method,get,handler,methods,return,collections,unmodifiable,map,handler,methods
AbstractHandlerMethodMapping -> public Map<T, HandlerMethod> getHandlerMethods();1341441111;Return a map with all handler methods and their mappings.;public Map<T, HandlerMethod> getHandlerMethods() {_		return Collections.unmodifiableMap(this.handlerMethods)__	};return,a,map,with,all,handler,methods,and,their,mappings;public,map,t,handler,method,get,handler,methods,return,collections,unmodifiable,map,this,handler,methods
AbstractHandlerMethodMapping -> public Map<T, HandlerMethod> getHandlerMethods();1356735495;Return a map with all handler methods and their mappings.;public Map<T, HandlerMethod> getHandlerMethods() {_		return Collections.unmodifiableMap(this.handlerMethods)__	};return,a,map,with,all,handler,methods,and,their,mappings;public,map,t,handler,method,get,handler,methods,return,collections,unmodifiable,map,this,handler,methods
AbstractHandlerMethodMapping -> public Map<T, HandlerMethod> getHandlerMethods();1357119239;Return a map with all handler methods and their mappings.;public Map<T, HandlerMethod> getHandlerMethods() {_		return Collections.unmodifiableMap(this.handlerMethods)__	};return,a,map,with,all,handler,methods,and,their,mappings;public,map,t,handler,method,get,handler,methods,return,collections,unmodifiable,map,this,handler,methods
AbstractHandlerMethodMapping -> public Map<T, HandlerMethod> getHandlerMethods();1362408075;Return a map with all handler methods and their mappings.;public Map<T, HandlerMethod> getHandlerMethods() {_		return Collections.unmodifiableMap(this.handlerMethods)__	};return,a,map,with,all,handler,methods,and,their,mappings;public,map,t,handler,method,get,handler,methods,return,collections,unmodifiable,map,this,handler,methods
AbstractHandlerMethodMapping -> public Map<T, HandlerMethod> getHandlerMethods();1368482696;Return a map with all handler methods and their mappings.;public Map<T, HandlerMethod> getHandlerMethods() {_		return Collections.unmodifiableMap(this.handlerMethods)__	};return,a,map,with,all,handler,methods,and,their,mappings;public,map,t,handler,method,get,handler,methods,return,collections,unmodifiable,map,this,handler,methods
AbstractHandlerMethodMapping -> public Map<T, HandlerMethod> getHandlerMethods();1368581529;Return a map with all handler methods and their mappings.;public Map<T, HandlerMethod> getHandlerMethods() {_		return Collections.unmodifiableMap(this.handlerMethods)__	};return,a,map,with,all,handler,methods,and,their,mappings;public,map,t,handler,method,get,handler,methods,return,collections,unmodifiable,map,this,handler,methods
AbstractHandlerMethodMapping -> public Map<T, HandlerMethod> getHandlerMethods();1382665849;Return a map with all handler methods and their mappings.;public Map<T, HandlerMethod> getHandlerMethods() {_		return Collections.unmodifiableMap(this.handlerMethods)__	};return,a,map,with,all,handler,methods,and,their,mappings;public,map,t,handler,method,get,handler,methods,return,collections,unmodifiable,map,this,handler,methods
AbstractHandlerMethodMapping -> public Map<T, HandlerMethod> getHandlerMethods();1392160296;Return a map with all handler methods and their mappings.;public Map<T, HandlerMethod> getHandlerMethods() {_		return Collections.unmodifiableMap(this.handlerMethods)__	};return,a,map,with,all,handler,methods,and,their,mappings;public,map,t,handler,method,get,handler,methods,return,collections,unmodifiable,map,this,handler,methods
AbstractHandlerMethodMapping -> public Map<T, HandlerMethod> getHandlerMethods();1392337816;Return a map with all handler methods and their mappings.;public Map<T, HandlerMethod> getHandlerMethods() {_		return Collections.unmodifiableMap(this.handlerMethods)__	};return,a,map,with,all,handler,methods,and,their,mappings;public,map,t,handler,method,get,handler,methods,return,collections,unmodifiable,map,this,handler,methods
AbstractHandlerMethodMapping -> public Map<T, HandlerMethod> getHandlerMethods();1392407320;Return a map with all handler methods and their mappings.;public Map<T, HandlerMethod> getHandlerMethods() {_		return Collections.unmodifiableMap(this.handlerMethods)__	};return,a,map,with,all,handler,methods,and,their,mappings;public,map,t,handler,method,get,handler,methods,return,collections,unmodifiable,map,this,handler,methods
AbstractHandlerMethodMapping -> public Map<T, HandlerMethod> getHandlerMethods();1395655323;Return a map with all handler methods and their mappings.;public Map<T, HandlerMethod> getHandlerMethods() {_		return Collections.unmodifiableMap(this.handlerMethods)__	};return,a,map,with,all,handler,methods,and,their,mappings;public,map,t,handler,method,get,handler,methods,return,collections,unmodifiable,map,this,handler,methods
AbstractHandlerMethodMapping -> public Map<T, HandlerMethod> getHandlerMethods();1399404473;Return a map with all handler methods and their mappings.;public Map<T, HandlerMethod> getHandlerMethods() {_		return Collections.unmodifiableMap(this.handlerMethods)__	};return,a,map,with,all,handler,methods,and,their,mappings;public,map,t,handler,method,get,handler,methods,return,collections,unmodifiable,map,this,handler,methods
AbstractHandlerMethodMapping -> public Map<T, HandlerMethod> getHandlerMethods();1426869344;Return a map with all handler methods and their mappings.;public Map<T, HandlerMethod> getHandlerMethods() {_		return Collections.unmodifiableMap(this.handlerMethods)__	};return,a,map,with,all,handler,methods,and,their,mappings;public,map,t,handler,method,get,handler,methods,return,collections,unmodifiable,map,this,handler,methods
AbstractHandlerMethodMapping -> public Map<T, HandlerMethod> getHandlerMethods();1427240641;Return a map with all handler methods and their mappings.;public Map<T, HandlerMethod> getHandlerMethods() {_		return Collections.unmodifiableMap(this.handlerMethods)__	};return,a,map,with,all,handler,methods,and,their,mappings;public,map,t,handler,method,get,handler,methods,return,collections,unmodifiable,map,this,handler,methods
AbstractHandlerMethodMapping -> public Map<T, HandlerMethod> getHandlerMethods();1427983931;Return a map with all handler methods and their mappings.;public Map<T, HandlerMethod> getHandlerMethods() {_		return Collections.unmodifiableMap(this.handlerMethods)__	};return,a,map,with,all,handler,methods,and,their,mappings;public,map,t,handler,method,get,handler,methods,return,collections,unmodifiable,map,this,handler,methods
AbstractHandlerMethodMapping -> public Map<T, HandlerMethod> getHandlerMethods();1430734105;Return a map with all handler methods and their mappings.;public Map<T, HandlerMethod> getHandlerMethods() {_		return Collections.unmodifiableMap(this.handlerMethods)__	};return,a,map,with,all,handler,methods,and,their,mappings;public,map,t,handler,method,get,handler,methods,return,collections,unmodifiable,map,this,handler,methods
AbstractHandlerMethodMapping -> public Map<T, HandlerMethod> getHandlerMethods();1430734105;Return a read-only map with all mapped HandlerMethod's.;public Map<T, HandlerMethod> getHandlerMethods() {_		return this.mappingRegistry.getMappings()__	};return,a,read,only,map,with,all,mapped,handler,method,s;public,map,t,handler,method,get,handler,methods,return,this,mapping,registry,get,mappings
AbstractHandlerMethodMapping -> public Map<T, HandlerMethod> getHandlerMethods();1430734106;Return a (read-only) map with all mappings and HandlerMethod's.;public Map<T, HandlerMethod> getHandlerMethods() {_		this.mappingRegistry.acquireReadLock()__		try {_			return Collections.unmodifiableMap(this.mappingRegistry.getMappings())__		}_		finally {_			this.mappingRegistry.releaseReadLock()__		}_	};return,a,read,only,map,with,all,mappings,and,handler,method,s;public,map,t,handler,method,get,handler,methods,this,mapping,registry,acquire,read,lock,try,return,collections,unmodifiable,map,this,mapping,registry,get,mappings,finally,this,mapping,registry,release,read,lock
AbstractHandlerMethodMapping -> public Map<T, HandlerMethod> getHandlerMethods();1430774689;Return a (read-only) map with all mappings and HandlerMethod's.;public Map<T, HandlerMethod> getHandlerMethods() {_		this.mappingRegistry.acquireReadLock()__		try {_			return Collections.unmodifiableMap(this.mappingRegistry.getMappings())__		}_		finally {_			this.mappingRegistry.releaseReadLock()__		}_	};return,a,read,only,map,with,all,mappings,and,handler,method,s;public,map,t,handler,method,get,handler,methods,this,mapping,registry,acquire,read,lock,try,return,collections,unmodifiable,map,this,mapping,registry,get,mappings,finally,this,mapping,registry,release,read,lock
AbstractHandlerMethodMapping -> public Map<T, HandlerMethod> getHandlerMethods();1430844966;Return a (read-only) map with all mappings and HandlerMethod's.;public Map<T, HandlerMethod> getHandlerMethods() {_		this.mappingRegistry.acquireReadLock()__		try {_			return Collections.unmodifiableMap(this.mappingRegistry.getMappings())__		}_		finally {_			this.mappingRegistry.releaseReadLock()__		}_	};return,a,read,only,map,with,all,mappings,and,handler,method,s;public,map,t,handler,method,get,handler,methods,this,mapping,registry,acquire,read,lock,try,return,collections,unmodifiable,map,this,mapping,registry,get,mappings,finally,this,mapping,registry,release,read,lock
AbstractHandlerMethodMapping -> public Map<T, HandlerMethod> getHandlerMethods();1430844967;Return a (read-only) map with all mappings and HandlerMethod's.;public Map<T, HandlerMethod> getHandlerMethods() {_		this.mappingRegistry.acquireReadLock()__		try {_			return Collections.unmodifiableMap(this.mappingRegistry.getMappings())__		}_		finally {_			this.mappingRegistry.releaseReadLock()__		}_	};return,a,read,only,map,with,all,mappings,and,handler,method,s;public,map,t,handler,method,get,handler,methods,this,mapping,registry,acquire,read,lock,try,return,collections,unmodifiable,map,this,mapping,registry,get,mappings,finally,this,mapping,registry,release,read,lock
AbstractHandlerMethodMapping -> public Map<T, HandlerMethod> getHandlerMethods();1431730371;Return a (read-only) map with all mappings and HandlerMethod's.;public Map<T, HandlerMethod> getHandlerMethods() {_		this.mappingRegistry.acquireReadLock()__		try {_			return Collections.unmodifiableMap(this.mappingRegistry.getMappings())__		}_		finally {_			this.mappingRegistry.releaseReadLock()__		}_	};return,a,read,only,map,with,all,mappings,and,handler,method,s;public,map,t,handler,method,get,handler,methods,this,mapping,registry,acquire,read,lock,try,return,collections,unmodifiable,map,this,mapping,registry,get,mappings,finally,this,mapping,registry,release,read,lock
AbstractHandlerMethodMapping -> public Map<T, HandlerMethod> getHandlerMethods();1439294371;Return a (read-only) map with all mappings and HandlerMethod's.;public Map<T, HandlerMethod> getHandlerMethods() {_		this.mappingRegistry.acquireReadLock()__		try {_			return Collections.unmodifiableMap(this.mappingRegistry.getMappings())__		}_		finally {_			this.mappingRegistry.releaseReadLock()__		}_	};return,a,read,only,map,with,all,mappings,and,handler,method,s;public,map,t,handler,method,get,handler,methods,this,mapping,registry,acquire,read,lock,try,return,collections,unmodifiable,map,this,mapping,registry,get,mappings,finally,this,mapping,registry,release,read,lock
AbstractHandlerMethodMapping -> public Map<T, HandlerMethod> getHandlerMethods();1447077465;Return a (read-only) map with all mappings and HandlerMethod's.;public Map<T, HandlerMethod> getHandlerMethods() {_		this.mappingRegistry.acquireReadLock()__		try {_			return Collections.unmodifiableMap(this.mappingRegistry.getMappings())__		}_		finally {_			this.mappingRegistry.releaseReadLock()__		}_	};return,a,read,only,map,with,all,mappings,and,handler,method,s;public,map,t,handler,method,get,handler,methods,this,mapping,registry,acquire,read,lock,try,return,collections,unmodifiable,map,this,mapping,registry,get,mappings,finally,this,mapping,registry,release,read,lock
AbstractHandlerMethodMapping -> public Map<T, HandlerMethod> getHandlerMethods();1448483163;Return a (read-only) map with all mappings and HandlerMethod's.;public Map<T, HandlerMethod> getHandlerMethods() {_		this.mappingRegistry.acquireReadLock()__		try {_			return Collections.unmodifiableMap(this.mappingRegistry.getMappings())__		}_		finally {_			this.mappingRegistry.releaseReadLock()__		}_	};return,a,read,only,map,with,all,mappings,and,handler,method,s;public,map,t,handler,method,get,handler,methods,this,mapping,registry,acquire,read,lock,try,return,collections,unmodifiable,map,this,mapping,registry,get,mappings,finally,this,mapping,registry,release,read,lock
AbstractHandlerMethodMapping -> public Map<T, HandlerMethod> getHandlerMethods();1452685925;Return a (read-only) map with all mappings and HandlerMethod's.;public Map<T, HandlerMethod> getHandlerMethods() {_		this.mappingRegistry.acquireReadLock()__		try {_			return Collections.unmodifiableMap(this.mappingRegistry.getMappings())__		}_		finally {_			this.mappingRegistry.releaseReadLock()__		}_	};return,a,read,only,map,with,all,mappings,and,handler,method,s;public,map,t,handler,method,get,handler,methods,this,mapping,registry,acquire,read,lock,try,return,collections,unmodifiable,map,this,mapping,registry,get,mappings,finally,this,mapping,registry,release,read,lock
AbstractHandlerMethodMapping -> public Map<T, HandlerMethod> getHandlerMethods();1452873718;Return a (read-only) map with all mappings and HandlerMethod's.;public Map<T, HandlerMethod> getHandlerMethods() {_		this.mappingRegistry.acquireReadLock()__		try {_			return Collections.unmodifiableMap(this.mappingRegistry.getMappings())__		}_		finally {_			this.mappingRegistry.releaseReadLock()__		}_	};return,a,read,only,map,with,all,mappings,and,handler,method,s;public,map,t,handler,method,get,handler,methods,this,mapping,registry,acquire,read,lock,try,return,collections,unmodifiable,map,this,mapping,registry,get,mappings,finally,this,mapping,registry,release,read,lock
AbstractHandlerMethodMapping -> public Map<T, HandlerMethod> getHandlerMethods();1453843788;Return a (read-only) map with all mappings and HandlerMethod's.;public Map<T, HandlerMethod> getHandlerMethods() {_		this.mappingRegistry.acquireReadLock()__		try {_			return Collections.unmodifiableMap(this.mappingRegistry.getMappings())__		}_		finally {_			this.mappingRegistry.releaseReadLock()__		}_	};return,a,read,only,map,with,all,mappings,and,handler,method,s;public,map,t,handler,method,get,handler,methods,this,mapping,registry,acquire,read,lock,try,return,collections,unmodifiable,map,this,mapping,registry,get,mappings,finally,this,mapping,registry,release,read,lock
AbstractHandlerMethodMapping -> public Map<T, HandlerMethod> getHandlerMethods();1467730834;Return a (read-only) map with all mappings and HandlerMethod's.;public Map<T, HandlerMethod> getHandlerMethods() {_		this.mappingRegistry.acquireReadLock()__		try {_			return Collections.unmodifiableMap(this.mappingRegistry.getMappings())__		}_		finally {_			this.mappingRegistry.releaseReadLock()__		}_	};return,a,read,only,map,with,all,mappings,and,handler,method,s;public,map,t,handler,method,get,handler,methods,this,mapping,registry,acquire,read,lock,try,return,collections,unmodifiable,map,this,mapping,registry,get,mappings,finally,this,mapping,registry,release,read,lock
AbstractHandlerMethodMapping -> public Map<T, HandlerMethod> getHandlerMethods();1468417354;Return a (read-only) map with all mappings and HandlerMethod's.;public Map<T, HandlerMethod> getHandlerMethods() {_		this.mappingRegistry.acquireReadLock()__		try {_			return Collections.unmodifiableMap(this.mappingRegistry.getMappings())__		}_		finally {_			this.mappingRegistry.releaseReadLock()__		}_	};return,a,read,only,map,with,all,mappings,and,handler,method,s;public,map,t,handler,method,get,handler,methods,this,mapping,registry,acquire,read,lock,try,return,collections,unmodifiable,map,this,mapping,registry,get,mappings,finally,this,mapping,registry,release,read,lock
AbstractHandlerMethodMapping -> public Map<T, HandlerMethod> getHandlerMethods();1468596479;Return a (read-only) map with all mappings and HandlerMethod's.;public Map<T, HandlerMethod> getHandlerMethods() {_		this.mappingRegistry.acquireReadLock()__		try {_			return Collections.unmodifiableMap(this.mappingRegistry.getMappings())__		}_		finally {_			this.mappingRegistry.releaseReadLock()__		}_	};return,a,read,only,map,with,all,mappings,and,handler,method,s;public,map,t,handler,method,get,handler,methods,this,mapping,registry,acquire,read,lock,try,return,collections,unmodifiable,map,this,mapping,registry,get,mappings,finally,this,mapping,registry,release,read,lock
AbstractHandlerMethodMapping -> public Map<T, HandlerMethod> getHandlerMethods();1474905889;Return a (read-only) map with all mappings and HandlerMethod's.;public Map<T, HandlerMethod> getHandlerMethods() {_		this.mappingRegistry.acquireReadLock()__		try {_			return Collections.unmodifiableMap(this.mappingRegistry.getMappings())__		}_		finally {_			this.mappingRegistry.releaseReadLock()__		}_	};return,a,read,only,map,with,all,mappings,and,handler,method,s;public,map,t,handler,method,get,handler,methods,this,mapping,registry,acquire,read,lock,try,return,collections,unmodifiable,map,this,mapping,registry,get,mappings,finally,this,mapping,registry,release,read,lock
AbstractHandlerMethodMapping -> public Map<T, HandlerMethod> getHandlerMethods();1481813056;Return a (read-only) map with all mappings and HandlerMethod's.;public Map<T, HandlerMethod> getHandlerMethods() {_		this.mappingRegistry.acquireReadLock()__		try {_			return Collections.unmodifiableMap(this.mappingRegistry.getMappings())__		}_		finally {_			this.mappingRegistry.releaseReadLock()__		}_	};return,a,read,only,map,with,all,mappings,and,handler,method,s;public,map,t,handler,method,get,handler,methods,this,mapping,registry,acquire,read,lock,try,return,collections,unmodifiable,map,this,mapping,registry,get,mappings,finally,this,mapping,registry,release,read,lock
AbstractHandlerMethodMapping -> public Map<T, HandlerMethod> getHandlerMethods();1485810955;Return a (read-only) map with all mappings and HandlerMethod's.;public Map<T, HandlerMethod> getHandlerMethods() {_		this.mappingRegistry.acquireReadLock()__		try {_			return Collections.unmodifiableMap(this.mappingRegistry.getMappings())__		}_		finally {_			this.mappingRegistry.releaseReadLock()__		}_	};return,a,read,only,map,with,all,mappings,and,handler,method,s;public,map,t,handler,method,get,handler,methods,this,mapping,registry,acquire,read,lock,try,return,collections,unmodifiable,map,this,mapping,registry,get,mappings,finally,this,mapping,registry,release,read,lock
AbstractHandlerMethodMapping -> public Map<T, HandlerMethod> getHandlerMethods();1495868221;Return a (read-only) map with all mappings and HandlerMethod's.;public Map<T, HandlerMethod> getHandlerMethods() {_		this.mappingRegistry.acquireReadLock()__		try {_			return Collections.unmodifiableMap(this.mappingRegistry.getMappings())__		}_		finally {_			this.mappingRegistry.releaseReadLock()__		}_	};return,a,read,only,map,with,all,mappings,and,handler,method,s;public,map,t,handler,method,get,handler,methods,this,mapping,registry,acquire,read,lock,try,return,collections,unmodifiable,map,this,mapping,registry,get,mappings,finally,this,mapping,registry,release,read,lock
AbstractHandlerMethodMapping -> public Map<T, HandlerMethod> getHandlerMethods();1496837955;Return a (read-only) map with all mappings and HandlerMethod's.;public Map<T, HandlerMethod> getHandlerMethods() {_		this.mappingRegistry.acquireReadLock()__		try {_			return Collections.unmodifiableMap(this.mappingRegistry.getMappings())__		}_		finally {_			this.mappingRegistry.releaseReadLock()__		}_	};return,a,read,only,map,with,all,mappings,and,handler,method,s;public,map,t,handler,method,get,handler,methods,this,mapping,registry,acquire,read,lock,try,return,collections,unmodifiable,map,this,mapping,registry,get,mappings,finally,this,mapping,registry,release,read,lock
AbstractHandlerMethodMapping -> public Map<T, HandlerMethod> getHandlerMethods();1497251962;Return a (read-only) map with all mappings and HandlerMethod's.;public Map<T, HandlerMethod> getHandlerMethods() {_		this.mappingRegistry.acquireReadLock()__		try {_			return Collections.unmodifiableMap(this.mappingRegistry.getMappings())__		}_		finally {_			this.mappingRegistry.releaseReadLock()__		}_	};return,a,read,only,map,with,all,mappings,and,handler,method,s;public,map,t,handler,method,get,handler,methods,this,mapping,registry,acquire,read,lock,try,return,collections,unmodifiable,map,this,mapping,registry,get,mappings,finally,this,mapping,registry,release,read,lock
AbstractHandlerMethodMapping -> public Map<T, HandlerMethod> getHandlerMethods();1498780456;Return a (read-only) map with all mappings and HandlerMethod's.;public Map<T, HandlerMethod> getHandlerMethods() {_		this.mappingRegistry.acquireReadLock()__		try {_			return Collections.unmodifiableMap(this.mappingRegistry.getMappings())__		}_		finally {_			this.mappingRegistry.releaseReadLock()__		}_	};return,a,read,only,map,with,all,mappings,and,handler,method,s;public,map,t,handler,method,get,handler,methods,this,mapping,registry,acquire,read,lock,try,return,collections,unmodifiable,map,this,mapping,registry,get,mappings,finally,this,mapping,registry,release,read,lock
AbstractHandlerMethodMapping -> public Map<T, HandlerMethod> getHandlerMethods();1518772998;Return a (read-only) map with all mappings and HandlerMethod's.;public Map<T, HandlerMethod> getHandlerMethods() {_		this.mappingRegistry.acquireReadLock()__		try {_			return Collections.unmodifiableMap(this.mappingRegistry.getMappings())__		}_		finally {_			this.mappingRegistry.releaseReadLock()__		}_	};return,a,read,only,map,with,all,mappings,and,handler,method,s;public,map,t,handler,method,get,handler,methods,this,mapping,registry,acquire,read,lock,try,return,collections,unmodifiable,map,this,mapping,registry,get,mappings,finally,this,mapping,registry,release,read,lock
AbstractHandlerMethodMapping -> public Map<T, HandlerMethod> getHandlerMethods();1522103912;Return a (read-only) map with all mappings and HandlerMethod's.;public Map<T, HandlerMethod> getHandlerMethods() {_		this.mappingRegistry.acquireReadLock()__		try {_			return Collections.unmodifiableMap(this.mappingRegistry.getMappings())__		}_		finally {_			this.mappingRegistry.releaseReadLock()__		}_	};return,a,read,only,map,with,all,mappings,and,handler,method,s;public,map,t,handler,method,get,handler,methods,this,mapping,registry,acquire,read,lock,try,return,collections,unmodifiable,map,this,mapping,registry,get,mappings,finally,this,mapping,registry,release,read,lock
AbstractHandlerMethodMapping -> public Map<T, HandlerMethod> getHandlerMethods();1522843494;Return a (read-only) map with all mappings and HandlerMethod's.;public Map<T, HandlerMethod> getHandlerMethods() {_		this.mappingRegistry.acquireReadLock()__		try {_			return Collections.unmodifiableMap(this.mappingRegistry.getMappings())__		}_		finally {_			this.mappingRegistry.releaseReadLock()__		}_	};return,a,read,only,map,with,all,mappings,and,handler,method,s;public,map,t,handler,method,get,handler,methods,this,mapping,registry,acquire,read,lock,try,return,collections,unmodifiable,map,this,mapping,registry,get,mappings,finally,this,mapping,registry,release,read,lock
AbstractHandlerMethodMapping -> public Map<T, HandlerMethod> getHandlerMethods();1529361191;Return a (read-only) map with all mappings and HandlerMethod's.;public Map<T, HandlerMethod> getHandlerMethods() {_		this.mappingRegistry.acquireReadLock()__		try {_			return Collections.unmodifiableMap(this.mappingRegistry.getMappings())__		}_		finally {_			this.mappingRegistry.releaseReadLock()__		}_	};return,a,read,only,map,with,all,mappings,and,handler,method,s;public,map,t,handler,method,get,handler,methods,this,mapping,registry,acquire,read,lock,try,return,collections,unmodifiable,map,this,mapping,registry,get,mappings,finally,this,mapping,registry,release,read,lock
AbstractHandlerMethodMapping -> public Map<T, HandlerMethod> getHandlerMethods();1529721864;Return a (read-only) map with all mappings and HandlerMethod's.;public Map<T, HandlerMethod> getHandlerMethods() {_		this.mappingRegistry.acquireReadLock()__		try {_			return Collections.unmodifiableMap(this.mappingRegistry.getMappings())__		}_		finally {_			this.mappingRegistry.releaseReadLock()__		}_	};return,a,read,only,map,with,all,mappings,and,handler,method,s;public,map,t,handler,method,get,handler,methods,this,mapping,registry,acquire,read,lock,try,return,collections,unmodifiable,map,this,mapping,registry,get,mappings,finally,this,mapping,registry,release,read,lock
AbstractHandlerMethodMapping -> public Map<T, HandlerMethod> getHandlerMethods();1530174524;Return a (read-only) map with all mappings and HandlerMethod's.;public Map<T, HandlerMethod> getHandlerMethods() {_		this.mappingRegistry.acquireReadLock()__		try {_			return Collections.unmodifiableMap(this.mappingRegistry.getMappings())__		}_		finally {_			this.mappingRegistry.releaseReadLock()__		}_	};return,a,read,only,map,with,all,mappings,and,handler,method,s;public,map,t,handler,method,get,handler,methods,this,mapping,registry,acquire,read,lock,try,return,collections,unmodifiable,map,this,mapping,registry,get,mappings,finally,this,mapping,registry,release,read,lock
AbstractHandlerMethodMapping -> public Map<T, HandlerMethod> getHandlerMethods();1530174524;Return a (read-only) map with all mappings and HandlerMethod's.;public Map<T, HandlerMethod> getHandlerMethods() {_		this.mappingRegistry.acquireReadLock()__		try {_			return Collections.unmodifiableMap(this.mappingRegistry.getMappings())__		}_		finally {_			this.mappingRegistry.releaseReadLock()__		}_	};return,a,read,only,map,with,all,mappings,and,handler,method,s;public,map,t,handler,method,get,handler,methods,this,mapping,registry,acquire,read,lock,try,return,collections,unmodifiable,map,this,mapping,registry,get,mappings,finally,this,mapping,registry,release,read,lock
AbstractHandlerMethodMapping -> public Map<T, HandlerMethod> getHandlerMethods();1533943217;Return a (read-only) map with all mappings and HandlerMethod's.;public Map<T, HandlerMethod> getHandlerMethods() {_		this.mappingRegistry.acquireReadLock()__		try {_			return Collections.unmodifiableMap(this.mappingRegistry.getMappings())__		}_		finally {_			this.mappingRegistry.releaseReadLock()__		}_	};return,a,read,only,map,with,all,mappings,and,handler,method,s;public,map,t,handler,method,get,handler,methods,this,mapping,registry,acquire,read,lock,try,return,collections,unmodifiable,map,this,mapping,registry,get,mappings,finally,this,mapping,registry,release,read,lock
AbstractHandlerMethodMapping -> public Map<T, HandlerMethod> getHandlerMethods();1542407418;Return a (read-only) map with all mappings and HandlerMethod's.;public Map<T, HandlerMethod> getHandlerMethods() {_		this.mappingRegistry.acquireReadLock()__		try {_			return Collections.unmodifiableMap(this.mappingRegistry.getMappings())__		}_		finally {_			this.mappingRegistry.releaseReadLock()__		}_	};return,a,read,only,map,with,all,mappings,and,handler,method,s;public,map,t,handler,method,get,handler,methods,this,mapping,registry,acquire,read,lock,try,return,collections,unmodifiable,map,this,mapping,registry,get,mappings,finally,this,mapping,registry,release,read,lock
AbstractHandlerMethodMapping -> public Map<T, HandlerMethod> getHandlerMethods();1542771062;Return a (read-only) map with all mappings and HandlerMethod's.;public Map<T, HandlerMethod> getHandlerMethods() {_		this.mappingRegistry.acquireReadLock()__		try {_			return Collections.unmodifiableMap(this.mappingRegistry.getMappings())__		}_		finally {_			this.mappingRegistry.releaseReadLock()__		}_	};return,a,read,only,map,with,all,mappings,and,handler,method,s;public,map,t,handler,method,get,handler,methods,this,mapping,registry,acquire,read,lock,try,return,collections,unmodifiable,map,this,mapping,registry,get,mappings,finally,this,mapping,registry,release,read,lock
AbstractHandlerMethodMapping -> public Map<T, HandlerMethod> getHandlerMethods();1548427561;Return a (read-only) map with all mappings and HandlerMethod's.;public Map<T, HandlerMethod> getHandlerMethods() {_		this.mappingRegistry.acquireReadLock()__		try {_			return Collections.unmodifiableMap(this.mappingRegistry.getMappings())__		}_		finally {_			this.mappingRegistry.releaseReadLock()__		}_	};return,a,read,only,map,with,all,mappings,and,handler,method,s;public,map,t,handler,method,get,handler,methods,this,mapping,registry,acquire,read,lock,try,return,collections,unmodifiable,map,this,mapping,registry,get,mappings,finally,this,mapping,registry,release,read,lock
AbstractHandlerMethodMapping -> public Map<T, HandlerMethod> getHandlerMethods();1551093473;Return a (read-only) map with all mappings and HandlerMethod's.;public Map<T, HandlerMethod> getHandlerMethods() {_		this.mappingRegistry.acquireReadLock()__		try {_			return Collections.unmodifiableMap(this.mappingRegistry.getMappings())__		}_		finally {_			this.mappingRegistry.releaseReadLock()__		}_	};return,a,read,only,map,with,all,mappings,and,handler,method,s;public,map,t,handler,method,get,handler,methods,this,mapping,registry,acquire,read,lock,try,return,collections,unmodifiable,map,this,mapping,registry,get,mappings,finally,this,mapping,registry,release,read,lock
AbstractHandlerMethodMapping -> @Nullable 	public List<HandlerMethod> getHandlerMethodsForMappingName(String mappingName);1495868221;Return the handler methods for the given mapping name._@param mappingName the mapping name_@return a list of matching HandlerMethod's or {@code null}_ the returned_list will never be modified and is safe to iterate._@see #setHandlerMethodMappingNamingStrategy;@Nullable_	public List<HandlerMethod> getHandlerMethodsForMappingName(String mappingName) {_		return this.mappingRegistry.getHandlerMethodsByMappingName(mappingName)__	};return,the,handler,methods,for,the,given,mapping,name,param,mapping,name,the,mapping,name,return,a,list,of,matching,handler,method,s,or,code,null,the,returned,list,will,never,be,modified,and,is,safe,to,iterate,see,set,handler,method,mapping,naming,strategy;nullable,public,list,handler,method,get,handler,methods,for,mapping,name,string,mapping,name,return,this,mapping,registry,get,handler,methods,by,mapping,name,mapping,name
AbstractHandlerMethodMapping -> @Nullable 	public List<HandlerMethod> getHandlerMethodsForMappingName(String mappingName);1496837955;Return the handler methods for the given mapping name._@param mappingName the mapping name_@return a list of matching HandlerMethod's or {@code null}_ the returned_list will never be modified and is safe to iterate._@see #setHandlerMethodMappingNamingStrategy;@Nullable_	public List<HandlerMethod> getHandlerMethodsForMappingName(String mappingName) {_		return this.mappingRegistry.getHandlerMethodsByMappingName(mappingName)__	};return,the,handler,methods,for,the,given,mapping,name,param,mapping,name,the,mapping,name,return,a,list,of,matching,handler,method,s,or,code,null,the,returned,list,will,never,be,modified,and,is,safe,to,iterate,see,set,handler,method,mapping,naming,strategy;nullable,public,list,handler,method,get,handler,methods,for,mapping,name,string,mapping,name,return,this,mapping,registry,get,handler,methods,by,mapping,name,mapping,name
AbstractHandlerMethodMapping -> @Nullable 	public List<HandlerMethod> getHandlerMethodsForMappingName(String mappingName);1497251962;Return the handler methods for the given mapping name._@param mappingName the mapping name_@return a list of matching HandlerMethod's or {@code null}_ the returned_list will never be modified and is safe to iterate._@see #setHandlerMethodMappingNamingStrategy;@Nullable_	public List<HandlerMethod> getHandlerMethodsForMappingName(String mappingName) {_		return this.mappingRegistry.getHandlerMethodsByMappingName(mappingName)__	};return,the,handler,methods,for,the,given,mapping,name,param,mapping,name,the,mapping,name,return,a,list,of,matching,handler,method,s,or,code,null,the,returned,list,will,never,be,modified,and,is,safe,to,iterate,see,set,handler,method,mapping,naming,strategy;nullable,public,list,handler,method,get,handler,methods,for,mapping,name,string,mapping,name,return,this,mapping,registry,get,handler,methods,by,mapping,name,mapping,name
AbstractHandlerMethodMapping -> @Nullable 	public List<HandlerMethod> getHandlerMethodsForMappingName(String mappingName);1498780456;Return the handler methods for the given mapping name._@param mappingName the mapping name_@return a list of matching HandlerMethod's or {@code null}_ the returned_list will never be modified and is safe to iterate._@see #setHandlerMethodMappingNamingStrategy;@Nullable_	public List<HandlerMethod> getHandlerMethodsForMappingName(String mappingName) {_		return this.mappingRegistry.getHandlerMethodsByMappingName(mappingName)__	};return,the,handler,methods,for,the,given,mapping,name,param,mapping,name,the,mapping,name,return,a,list,of,matching,handler,method,s,or,code,null,the,returned,list,will,never,be,modified,and,is,safe,to,iterate,see,set,handler,method,mapping,naming,strategy;nullable,public,list,handler,method,get,handler,methods,for,mapping,name,string,mapping,name,return,this,mapping,registry,get,handler,methods,by,mapping,name,mapping,name
AbstractHandlerMethodMapping -> @Nullable 	public List<HandlerMethod> getHandlerMethodsForMappingName(String mappingName);1518772998;Return the handler methods for the given mapping name._@param mappingName the mapping name_@return a list of matching HandlerMethod's or {@code null}_ the returned_list will never be modified and is safe to iterate._@see #setHandlerMethodMappingNamingStrategy;@Nullable_	public List<HandlerMethod> getHandlerMethodsForMappingName(String mappingName) {_		return this.mappingRegistry.getHandlerMethodsByMappingName(mappingName)__	};return,the,handler,methods,for,the,given,mapping,name,param,mapping,name,the,mapping,name,return,a,list,of,matching,handler,method,s,or,code,null,the,returned,list,will,never,be,modified,and,is,safe,to,iterate,see,set,handler,method,mapping,naming,strategy;nullable,public,list,handler,method,get,handler,methods,for,mapping,name,string,mapping,name,return,this,mapping,registry,get,handler,methods,by,mapping,name,mapping,name
AbstractHandlerMethodMapping -> @Nullable 	public List<HandlerMethod> getHandlerMethodsForMappingName(String mappingName);1522103912;Return the handler methods for the given mapping name._@param mappingName the mapping name_@return a list of matching HandlerMethod's or {@code null}_ the returned_list will never be modified and is safe to iterate._@see #setHandlerMethodMappingNamingStrategy;@Nullable_	public List<HandlerMethod> getHandlerMethodsForMappingName(String mappingName) {_		return this.mappingRegistry.getHandlerMethodsByMappingName(mappingName)__	};return,the,handler,methods,for,the,given,mapping,name,param,mapping,name,the,mapping,name,return,a,list,of,matching,handler,method,s,or,code,null,the,returned,list,will,never,be,modified,and,is,safe,to,iterate,see,set,handler,method,mapping,naming,strategy;nullable,public,list,handler,method,get,handler,methods,for,mapping,name,string,mapping,name,return,this,mapping,registry,get,handler,methods,by,mapping,name,mapping,name
AbstractHandlerMethodMapping -> @Nullable 	public List<HandlerMethod> getHandlerMethodsForMappingName(String mappingName);1522843494;Return the handler methods for the given mapping name._@param mappingName the mapping name_@return a list of matching HandlerMethod's or {@code null}_ the returned_list will never be modified and is safe to iterate._@see #setHandlerMethodMappingNamingStrategy;@Nullable_	public List<HandlerMethod> getHandlerMethodsForMappingName(String mappingName) {_		return this.mappingRegistry.getHandlerMethodsByMappingName(mappingName)__	};return,the,handler,methods,for,the,given,mapping,name,param,mapping,name,the,mapping,name,return,a,list,of,matching,handler,method,s,or,code,null,the,returned,list,will,never,be,modified,and,is,safe,to,iterate,see,set,handler,method,mapping,naming,strategy;nullable,public,list,handler,method,get,handler,methods,for,mapping,name,string,mapping,name,return,this,mapping,registry,get,handler,methods,by,mapping,name,mapping,name
AbstractHandlerMethodMapping -> @Nullable 	public List<HandlerMethod> getHandlerMethodsForMappingName(String mappingName);1529361191;Return the handler methods for the given mapping name._@param mappingName the mapping name_@return a list of matching HandlerMethod's or {@code null}_ the returned_list will never be modified and is safe to iterate._@see #setHandlerMethodMappingNamingStrategy;@Nullable_	public List<HandlerMethod> getHandlerMethodsForMappingName(String mappingName) {_		return this.mappingRegistry.getHandlerMethodsByMappingName(mappingName)__	};return,the,handler,methods,for,the,given,mapping,name,param,mapping,name,the,mapping,name,return,a,list,of,matching,handler,method,s,or,code,null,the,returned,list,will,never,be,modified,and,is,safe,to,iterate,see,set,handler,method,mapping,naming,strategy;nullable,public,list,handler,method,get,handler,methods,for,mapping,name,string,mapping,name,return,this,mapping,registry,get,handler,methods,by,mapping,name,mapping,name
AbstractHandlerMethodMapping -> @Nullable 	public List<HandlerMethod> getHandlerMethodsForMappingName(String mappingName);1529721864;Return the handler methods for the given mapping name._@param mappingName the mapping name_@return a list of matching HandlerMethod's or {@code null}_ the returned_list will never be modified and is safe to iterate._@see #setHandlerMethodMappingNamingStrategy;@Nullable_	public List<HandlerMethod> getHandlerMethodsForMappingName(String mappingName) {_		return this.mappingRegistry.getHandlerMethodsByMappingName(mappingName)__	};return,the,handler,methods,for,the,given,mapping,name,param,mapping,name,the,mapping,name,return,a,list,of,matching,handler,method,s,or,code,null,the,returned,list,will,never,be,modified,and,is,safe,to,iterate,see,set,handler,method,mapping,naming,strategy;nullable,public,list,handler,method,get,handler,methods,for,mapping,name,string,mapping,name,return,this,mapping,registry,get,handler,methods,by,mapping,name,mapping,name
AbstractHandlerMethodMapping -> @Nullable 	public List<HandlerMethod> getHandlerMethodsForMappingName(String mappingName);1530174524;Return the handler methods for the given mapping name._@param mappingName the mapping name_@return a list of matching HandlerMethod's or {@code null}_ the returned_list will never be modified and is safe to iterate._@see #setHandlerMethodMappingNamingStrategy;@Nullable_	public List<HandlerMethod> getHandlerMethodsForMappingName(String mappingName) {_		return this.mappingRegistry.getHandlerMethodsByMappingName(mappingName)__	};return,the,handler,methods,for,the,given,mapping,name,param,mapping,name,the,mapping,name,return,a,list,of,matching,handler,method,s,or,code,null,the,returned,list,will,never,be,modified,and,is,safe,to,iterate,see,set,handler,method,mapping,naming,strategy;nullable,public,list,handler,method,get,handler,methods,for,mapping,name,string,mapping,name,return,this,mapping,registry,get,handler,methods,by,mapping,name,mapping,name
AbstractHandlerMethodMapping -> @Nullable 	public List<HandlerMethod> getHandlerMethodsForMappingName(String mappingName);1530174524;Return the handler methods for the given mapping name._@param mappingName the mapping name_@return a list of matching HandlerMethod's or {@code null}_ the returned_list will never be modified and is safe to iterate._@see #setHandlerMethodMappingNamingStrategy;@Nullable_	public List<HandlerMethod> getHandlerMethodsForMappingName(String mappingName) {_		return this.mappingRegistry.getHandlerMethodsByMappingName(mappingName)__	};return,the,handler,methods,for,the,given,mapping,name,param,mapping,name,the,mapping,name,return,a,list,of,matching,handler,method,s,or,code,null,the,returned,list,will,never,be,modified,and,is,safe,to,iterate,see,set,handler,method,mapping,naming,strategy;nullable,public,list,handler,method,get,handler,methods,for,mapping,name,string,mapping,name,return,this,mapping,registry,get,handler,methods,by,mapping,name,mapping,name
AbstractHandlerMethodMapping -> @Nullable 	public List<HandlerMethod> getHandlerMethodsForMappingName(String mappingName);1533943217;Return the handler methods for the given mapping name._@param mappingName the mapping name_@return a list of matching HandlerMethod's or {@code null}_ the returned_list will never be modified and is safe to iterate._@see #setHandlerMethodMappingNamingStrategy;@Nullable_	public List<HandlerMethod> getHandlerMethodsForMappingName(String mappingName) {_		return this.mappingRegistry.getHandlerMethodsByMappingName(mappingName)__	};return,the,handler,methods,for,the,given,mapping,name,param,mapping,name,the,mapping,name,return,a,list,of,matching,handler,method,s,or,code,null,the,returned,list,will,never,be,modified,and,is,safe,to,iterate,see,set,handler,method,mapping,naming,strategy;nullable,public,list,handler,method,get,handler,methods,for,mapping,name,string,mapping,name,return,this,mapping,registry,get,handler,methods,by,mapping,name,mapping,name
AbstractHandlerMethodMapping -> @Nullable 	public List<HandlerMethod> getHandlerMethodsForMappingName(String mappingName);1542407418;Return the handler methods for the given mapping name._@param mappingName the mapping name_@return a list of matching HandlerMethod's or {@code null}_ the returned_list will never be modified and is safe to iterate._@see #setHandlerMethodMappingNamingStrategy;@Nullable_	public List<HandlerMethod> getHandlerMethodsForMappingName(String mappingName) {_		return this.mappingRegistry.getHandlerMethodsByMappingName(mappingName)__	};return,the,handler,methods,for,the,given,mapping,name,param,mapping,name,the,mapping,name,return,a,list,of,matching,handler,method,s,or,code,null,the,returned,list,will,never,be,modified,and,is,safe,to,iterate,see,set,handler,method,mapping,naming,strategy;nullable,public,list,handler,method,get,handler,methods,for,mapping,name,string,mapping,name,return,this,mapping,registry,get,handler,methods,by,mapping,name,mapping,name
AbstractHandlerMethodMapping -> @Nullable 	public List<HandlerMethod> getHandlerMethodsForMappingName(String mappingName);1542771062;Return the handler methods for the given mapping name._@param mappingName the mapping name_@return a list of matching HandlerMethod's or {@code null}_ the returned_list will never be modified and is safe to iterate._@see #setHandlerMethodMappingNamingStrategy;@Nullable_	public List<HandlerMethod> getHandlerMethodsForMappingName(String mappingName) {_		return this.mappingRegistry.getHandlerMethodsByMappingName(mappingName)__	};return,the,handler,methods,for,the,given,mapping,name,param,mapping,name,the,mapping,name,return,a,list,of,matching,handler,method,s,or,code,null,the,returned,list,will,never,be,modified,and,is,safe,to,iterate,see,set,handler,method,mapping,naming,strategy;nullable,public,list,handler,method,get,handler,methods,for,mapping,name,string,mapping,name,return,this,mapping,registry,get,handler,methods,by,mapping,name,mapping,name
AbstractHandlerMethodMapping -> @Nullable 	public List<HandlerMethod> getHandlerMethodsForMappingName(String mappingName);1548427561;Return the handler methods for the given mapping name._@param mappingName the mapping name_@return a list of matching HandlerMethod's or {@code null}_ the returned_list will never be modified and is safe to iterate._@see #setHandlerMethodMappingNamingStrategy;@Nullable_	public List<HandlerMethod> getHandlerMethodsForMappingName(String mappingName) {_		return this.mappingRegistry.getHandlerMethodsByMappingName(mappingName)__	};return,the,handler,methods,for,the,given,mapping,name,param,mapping,name,the,mapping,name,return,a,list,of,matching,handler,method,s,or,code,null,the,returned,list,will,never,be,modified,and,is,safe,to,iterate,see,set,handler,method,mapping,naming,strategy;nullable,public,list,handler,method,get,handler,methods,for,mapping,name,string,mapping,name,return,this,mapping,registry,get,handler,methods,by,mapping,name,mapping,name
AbstractHandlerMethodMapping -> @Nullable 	public List<HandlerMethod> getHandlerMethodsForMappingName(String mappingName);1551093473;Return the handler methods for the given mapping name._@param mappingName the mapping name_@return a list of matching HandlerMethod's or {@code null}_ the returned_list will never be modified and is safe to iterate._@see #setHandlerMethodMappingNamingStrategy;@Nullable_	public List<HandlerMethod> getHandlerMethodsForMappingName(String mappingName) {_		return this.mappingRegistry.getHandlerMethodsByMappingName(mappingName)__	};return,the,handler,methods,for,the,given,mapping,name,param,mapping,name,the,mapping,name,return,a,list,of,matching,handler,method,s,or,code,null,the,returned,list,will,never,be,modified,and,is,safe,to,iterate,see,set,handler,method,mapping,naming,strategy;nullable,public,list,handler,method,get,handler,methods,for,mapping,name,string,mapping,name,return,this,mapping,registry,get,handler,methods,by,mapping,name,mapping,name
AbstractHandlerMethodMapping -> protected HandlerMethod createHandlerMethod(Object handler, Method method);1362408075;Create the HandlerMethod instance._@param handler either a bean name or an actual handler instance_@param method the target method_@return the created HandlerMethod;protected HandlerMethod createHandlerMethod(Object handler, Method method) {_		HandlerMethod handlerMethod__		if (handler instanceof String) {_			String beanName = (String) handler__			handlerMethod = new HandlerMethod(beanName, getApplicationContext(), method)__		}_		else {_			handlerMethod = new HandlerMethod(handler, method)__		}_		return handlerMethod__	};create,the,handler,method,instance,param,handler,either,a,bean,name,or,an,actual,handler,instance,param,method,the,target,method,return,the,created,handler,method;protected,handler,method,create,handler,method,object,handler,method,method,handler,method,handler,method,if,handler,instanceof,string,string,bean,name,string,handler,handler,method,new,handler,method,bean,name,get,application,context,method,else,handler,method,new,handler,method,handler,method,return,handler,method
AbstractHandlerMethodMapping -> protected HandlerMethod createHandlerMethod(Object handler, Method method);1368482696;Create the HandlerMethod instance._@param handler either a bean name or an actual handler instance_@param method the target method_@return the created HandlerMethod;protected HandlerMethod createHandlerMethod(Object handler, Method method) {_		HandlerMethod handlerMethod__		if (handler instanceof String) {_			String beanName = (String) handler__			handlerMethod = new HandlerMethod(beanName, getApplicationContext(), method)__		}_		else {_			handlerMethod = new HandlerMethod(handler, method)__		}_		return handlerMethod__	};create,the,handler,method,instance,param,handler,either,a,bean,name,or,an,actual,handler,instance,param,method,the,target,method,return,the,created,handler,method;protected,handler,method,create,handler,method,object,handler,method,method,handler,method,handler,method,if,handler,instanceof,string,string,bean,name,string,handler,handler,method,new,handler,method,bean,name,get,application,context,method,else,handler,method,new,handler,method,handler,method,return,handler,method
AbstractHandlerMethodMapping -> protected HandlerMethod createHandlerMethod(Object handler, Method method);1368581529;Create the HandlerMethod instance._@param handler either a bean name or an actual handler instance_@param method the target method_@return the created HandlerMethod;protected HandlerMethod createHandlerMethod(Object handler, Method method) {_		HandlerMethod handlerMethod__		if (handler instanceof String) {_			String beanName = (String) handler__			handlerMethod = new HandlerMethod(beanName, getApplicationContext(), method)__		}_		else {_			handlerMethod = new HandlerMethod(handler, method)__		}_		return handlerMethod__	};create,the,handler,method,instance,param,handler,either,a,bean,name,or,an,actual,handler,instance,param,method,the,target,method,return,the,created,handler,method;protected,handler,method,create,handler,method,object,handler,method,method,handler,method,handler,method,if,handler,instanceof,string,string,bean,name,string,handler,handler,method,new,handler,method,bean,name,get,application,context,method,else,handler,method,new,handler,method,handler,method,return,handler,method
AbstractHandlerMethodMapping -> protected HandlerMethod createHandlerMethod(Object handler, Method method);1382665849;Create the HandlerMethod instance._@param handler either a bean name or an actual handler instance_@param method the target method_@return the created HandlerMethod;protected HandlerMethod createHandlerMethod(Object handler, Method method) {_		HandlerMethod handlerMethod__		if (handler instanceof String) {_			String beanName = (String) handler__			handlerMethod = new HandlerMethod(beanName, getApplicationContext(), method)__		}_		else {_			handlerMethod = new HandlerMethod(handler, method)__		}_		return handlerMethod__	};create,the,handler,method,instance,param,handler,either,a,bean,name,or,an,actual,handler,instance,param,method,the,target,method,return,the,created,handler,method;protected,handler,method,create,handler,method,object,handler,method,method,handler,method,handler,method,if,handler,instanceof,string,string,bean,name,string,handler,handler,method,new,handler,method,bean,name,get,application,context,method,else,handler,method,new,handler,method,handler,method,return,handler,method
AbstractHandlerMethodMapping -> protected HandlerMethod createHandlerMethod(Object handler, Method method);1392160296;Create the HandlerMethod instance._@param handler either a bean name or an actual handler instance_@param method the target method_@return the created HandlerMethod;protected HandlerMethod createHandlerMethod(Object handler, Method method) {_		HandlerMethod handlerMethod__		if (handler instanceof String) {_			String beanName = (String) handler__			handlerMethod = new HandlerMethod(beanName, getApplicationContext(), method)__		}_		else {_			handlerMethod = new HandlerMethod(handler, method)__		}_		return handlerMethod__	};create,the,handler,method,instance,param,handler,either,a,bean,name,or,an,actual,handler,instance,param,method,the,target,method,return,the,created,handler,method;protected,handler,method,create,handler,method,object,handler,method,method,handler,method,handler,method,if,handler,instanceof,string,string,bean,name,string,handler,handler,method,new,handler,method,bean,name,get,application,context,method,else,handler,method,new,handler,method,handler,method,return,handler,method
AbstractHandlerMethodMapping -> protected HandlerMethod createHandlerMethod(Object handler, Method method);1392337816;Create the HandlerMethod instance._@param handler either a bean name or an actual handler instance_@param method the target method_@return the created HandlerMethod;protected HandlerMethod createHandlerMethod(Object handler, Method method) {_		HandlerMethod handlerMethod__		if (handler instanceof String) {_			String beanName = (String) handler__			handlerMethod = new HandlerMethod(beanName, getApplicationContext(), method)__		}_		else {_			handlerMethod = new HandlerMethod(handler, method)__		}_		return handlerMethod__	};create,the,handler,method,instance,param,handler,either,a,bean,name,or,an,actual,handler,instance,param,method,the,target,method,return,the,created,handler,method;protected,handler,method,create,handler,method,object,handler,method,method,handler,method,handler,method,if,handler,instanceof,string,string,bean,name,string,handler,handler,method,new,handler,method,bean,name,get,application,context,method,else,handler,method,new,handler,method,handler,method,return,handler,method
AbstractHandlerMethodMapping -> protected HandlerMethod createHandlerMethod(Object handler, Method method);1392407320;Create the HandlerMethod instance._@param handler either a bean name or an actual handler instance_@param method the target method_@return the created HandlerMethod;protected HandlerMethod createHandlerMethod(Object handler, Method method) {_		HandlerMethod handlerMethod__		if (handler instanceof String) {_			String beanName = (String) handler__			handlerMethod = new HandlerMethod(beanName, getApplicationContext(), method)__		}_		else {_			handlerMethod = new HandlerMethod(handler, method)__		}_		return handlerMethod__	};create,the,handler,method,instance,param,handler,either,a,bean,name,or,an,actual,handler,instance,param,method,the,target,method,return,the,created,handler,method;protected,handler,method,create,handler,method,object,handler,method,method,handler,method,handler,method,if,handler,instanceof,string,string,bean,name,string,handler,handler,method,new,handler,method,bean,name,get,application,context,method,else,handler,method,new,handler,method,handler,method,return,handler,method
AbstractHandlerMethodMapping -> protected HandlerMethod createHandlerMethod(Object handler, Method method);1395655323;Create the HandlerMethod instance._@param handler either a bean name or an actual handler instance_@param method the target method_@return the created HandlerMethod;protected HandlerMethod createHandlerMethod(Object handler, Method method) {_		HandlerMethod handlerMethod__		if (handler instanceof String) {_			String beanName = (String) handler__			handlerMethod = new HandlerMethod(beanName, getApplicationContext(), method)__		}_		else {_			handlerMethod = new HandlerMethod(handler, method)__		}_		return handlerMethod__	};create,the,handler,method,instance,param,handler,either,a,bean,name,or,an,actual,handler,instance,param,method,the,target,method,return,the,created,handler,method;protected,handler,method,create,handler,method,object,handler,method,method,handler,method,handler,method,if,handler,instanceof,string,string,bean,name,string,handler,handler,method,new,handler,method,bean,name,get,application,context,method,else,handler,method,new,handler,method,handler,method,return,handler,method
AbstractHandlerMethodMapping -> protected HandlerMethod createHandlerMethod(Object handler, Method method);1399404473;Create the HandlerMethod instance._@param handler either a bean name or an actual handler instance_@param method the target method_@return the created HandlerMethod;protected HandlerMethod createHandlerMethod(Object handler, Method method) {_		HandlerMethod handlerMethod__		if (handler instanceof String) {_			String beanName = (String) handler__			handlerMethod = new HandlerMethod(beanName, getApplicationContext(), method)__		}_		else {_			handlerMethod = new HandlerMethod(handler, method)__		}_		return handlerMethod__	};create,the,handler,method,instance,param,handler,either,a,bean,name,or,an,actual,handler,instance,param,method,the,target,method,return,the,created,handler,method;protected,handler,method,create,handler,method,object,handler,method,method,handler,method,handler,method,if,handler,instanceof,string,string,bean,name,string,handler,handler,method,new,handler,method,bean,name,get,application,context,method,else,handler,method,new,handler,method,handler,method,return,handler,method
AbstractHandlerMethodMapping -> protected HandlerMethod createHandlerMethod(Object handler, Method method);1426869344;Create the HandlerMethod instance._@param handler either a bean name or an actual handler instance_@param method the target method_@return the created HandlerMethod;protected HandlerMethod createHandlerMethod(Object handler, Method method) {_		HandlerMethod handlerMethod__		if (handler instanceof String) {_			String beanName = (String) handler__			handlerMethod = new HandlerMethod(beanName,_					getApplicationContext().getAutowireCapableBeanFactory(), method)__		}_		else {_			handlerMethod = new HandlerMethod(handler, method)__		}_		return handlerMethod__	};create,the,handler,method,instance,param,handler,either,a,bean,name,or,an,actual,handler,instance,param,method,the,target,method,return,the,created,handler,method;protected,handler,method,create,handler,method,object,handler,method,method,handler,method,handler,method,if,handler,instanceof,string,string,bean,name,string,handler,handler,method,new,handler,method,bean,name,get,application,context,get,autowire,capable,bean,factory,method,else,handler,method,new,handler,method,handler,method,return,handler,method
AbstractHandlerMethodMapping -> protected HandlerMethod createHandlerMethod(Object handler, Method method);1427240641;Create the HandlerMethod instance._@param handler either a bean name or an actual handler instance_@param method the target method_@return the created HandlerMethod;protected HandlerMethod createHandlerMethod(Object handler, Method method) {_		HandlerMethod handlerMethod__		if (handler instanceof String) {_			String beanName = (String) handler__			handlerMethod = new HandlerMethod(beanName,_					getApplicationContext().getAutowireCapableBeanFactory(), method)__		}_		else {_			handlerMethod = new HandlerMethod(handler, method)__		}_		return handlerMethod__	};create,the,handler,method,instance,param,handler,either,a,bean,name,or,an,actual,handler,instance,param,method,the,target,method,return,the,created,handler,method;protected,handler,method,create,handler,method,object,handler,method,method,handler,method,handler,method,if,handler,instanceof,string,string,bean,name,string,handler,handler,method,new,handler,method,bean,name,get,application,context,get,autowire,capable,bean,factory,method,else,handler,method,new,handler,method,handler,method,return,handler,method
AbstractHandlerMethodMapping -> protected HandlerMethod createHandlerMethod(Object handler, Method method);1427983931;Create the HandlerMethod instance._@param handler either a bean name or an actual handler instance_@param method the target method_@return the created HandlerMethod;protected HandlerMethod createHandlerMethod(Object handler, Method method) {_		HandlerMethod handlerMethod__		if (handler instanceof String) {_			String beanName = (String) handler__			handlerMethod = new HandlerMethod(beanName,_					getApplicationContext().getAutowireCapableBeanFactory(), method)__		}_		else {_			handlerMethod = new HandlerMethod(handler, method)__		}_		return handlerMethod__	};create,the,handler,method,instance,param,handler,either,a,bean,name,or,an,actual,handler,instance,param,method,the,target,method,return,the,created,handler,method;protected,handler,method,create,handler,method,object,handler,method,method,handler,method,handler,method,if,handler,instanceof,string,string,bean,name,string,handler,handler,method,new,handler,method,bean,name,get,application,context,get,autowire,capable,bean,factory,method,else,handler,method,new,handler,method,handler,method,return,handler,method
AbstractHandlerMethodMapping -> protected HandlerMethod createHandlerMethod(Object handler, Method method);1430734105;Create the HandlerMethod instance._@param handler either a bean name or an actual handler instance_@param method the target method_@return the created HandlerMethod;protected HandlerMethod createHandlerMethod(Object handler, Method method) {_		HandlerMethod handlerMethod__		if (handler instanceof String) {_			String beanName = (String) handler__			handlerMethod = new HandlerMethod(beanName,_					getApplicationContext().getAutowireCapableBeanFactory(), method)__		}_		else {_			handlerMethod = new HandlerMethod(handler, method)__		}_		return handlerMethod__	};create,the,handler,method,instance,param,handler,either,a,bean,name,or,an,actual,handler,instance,param,method,the,target,method,return,the,created,handler,method;protected,handler,method,create,handler,method,object,handler,method,method,handler,method,handler,method,if,handler,instanceof,string,string,bean,name,string,handler,handler,method,new,handler,method,bean,name,get,application,context,get,autowire,capable,bean,factory,method,else,handler,method,new,handler,method,handler,method,return,handler,method
AbstractHandlerMethodMapping -> protected HandlerMethod createHandlerMethod(Object handler, Method method);1430734105;Create the HandlerMethod instance._@param handler either a bean name or an actual handler instance_@param method the target method_@return the created HandlerMethod;protected HandlerMethod createHandlerMethod(Object handler, Method method) {_		HandlerMethod handlerMethod__		if (handler instanceof String) {_			String beanName = (String) handler__			handlerMethod = new HandlerMethod(beanName,_					getApplicationContext().getAutowireCapableBeanFactory(), method)__		}_		else {_			handlerMethod = new HandlerMethod(handler, method)__		}_		return handlerMethod__	};create,the,handler,method,instance,param,handler,either,a,bean,name,or,an,actual,handler,instance,param,method,the,target,method,return,the,created,handler,method;protected,handler,method,create,handler,method,object,handler,method,method,handler,method,handler,method,if,handler,instanceof,string,string,bean,name,string,handler,handler,method,new,handler,method,bean,name,get,application,context,get,autowire,capable,bean,factory,method,else,handler,method,new,handler,method,handler,method,return,handler,method
AbstractHandlerMethodMapping -> protected HandlerMethod createHandlerMethod(Object handler, Method method);1430734106;Create the HandlerMethod instance._@param handler either a bean name or an actual handler instance_@param method the target method_@return the created HandlerMethod;protected HandlerMethod createHandlerMethod(Object handler, Method method) {_		HandlerMethod handlerMethod__		if (handler instanceof String) {_			String beanName = (String) handler__			handlerMethod = new HandlerMethod(beanName,_					getApplicationContext().getAutowireCapableBeanFactory(), method)__		}_		else {_			handlerMethod = new HandlerMethod(handler, method)__		}_		return handlerMethod__	};create,the,handler,method,instance,param,handler,either,a,bean,name,or,an,actual,handler,instance,param,method,the,target,method,return,the,created,handler,method;protected,handler,method,create,handler,method,object,handler,method,method,handler,method,handler,method,if,handler,instanceof,string,string,bean,name,string,handler,handler,method,new,handler,method,bean,name,get,application,context,get,autowire,capable,bean,factory,method,else,handler,method,new,handler,method,handler,method,return,handler,method
AbstractHandlerMethodMapping -> protected HandlerMethod createHandlerMethod(Object handler, Method method);1430774689;Create the HandlerMethod instance._@param handler either a bean name or an actual handler instance_@param method the target method_@return the created HandlerMethod;protected HandlerMethod createHandlerMethod(Object handler, Method method) {_		HandlerMethod handlerMethod__		if (handler instanceof String) {_			String beanName = (String) handler__			handlerMethod = new HandlerMethod(beanName,_					getApplicationContext().getAutowireCapableBeanFactory(), method)__		}_		else {_			handlerMethod = new HandlerMethod(handler, method)__		}_		return handlerMethod__	};create,the,handler,method,instance,param,handler,either,a,bean,name,or,an,actual,handler,instance,param,method,the,target,method,return,the,created,handler,method;protected,handler,method,create,handler,method,object,handler,method,method,handler,method,handler,method,if,handler,instanceof,string,string,bean,name,string,handler,handler,method,new,handler,method,bean,name,get,application,context,get,autowire,capable,bean,factory,method,else,handler,method,new,handler,method,handler,method,return,handler,method
AbstractHandlerMethodMapping -> protected HandlerMethod createHandlerMethod(Object handler, Method method);1430844966;Create the HandlerMethod instance._@param handler either a bean name or an actual handler instance_@param method the target method_@return the created HandlerMethod;protected HandlerMethod createHandlerMethod(Object handler, Method method) {_		HandlerMethod handlerMethod__		if (handler instanceof String) {_			String beanName = (String) handler__			handlerMethod = new HandlerMethod(beanName,_					getApplicationContext().getAutowireCapableBeanFactory(), method)__		}_		else {_			handlerMethod = new HandlerMethod(handler, method)__		}_		return handlerMethod__	};create,the,handler,method,instance,param,handler,either,a,bean,name,or,an,actual,handler,instance,param,method,the,target,method,return,the,created,handler,method;protected,handler,method,create,handler,method,object,handler,method,method,handler,method,handler,method,if,handler,instanceof,string,string,bean,name,string,handler,handler,method,new,handler,method,bean,name,get,application,context,get,autowire,capable,bean,factory,method,else,handler,method,new,handler,method,handler,method,return,handler,method
AbstractHandlerMethodMapping -> protected HandlerMethod createHandlerMethod(Object handler, Method method);1430844967;Create the HandlerMethod instance._@param handler either a bean name or an actual handler instance_@param method the target method_@return the created HandlerMethod;protected HandlerMethod createHandlerMethod(Object handler, Method method) {_		HandlerMethod handlerMethod__		if (handler instanceof String) {_			String beanName = (String) handler__			handlerMethod = new HandlerMethod(beanName,_					getApplicationContext().getAutowireCapableBeanFactory(), method)__		}_		else {_			handlerMethod = new HandlerMethod(handler, method)__		}_		return handlerMethod__	};create,the,handler,method,instance,param,handler,either,a,bean,name,or,an,actual,handler,instance,param,method,the,target,method,return,the,created,handler,method;protected,handler,method,create,handler,method,object,handler,method,method,handler,method,handler,method,if,handler,instanceof,string,string,bean,name,string,handler,handler,method,new,handler,method,bean,name,get,application,context,get,autowire,capable,bean,factory,method,else,handler,method,new,handler,method,handler,method,return,handler,method
AbstractHandlerMethodMapping -> protected HandlerMethod createHandlerMethod(Object handler, Method method);1431730371;Create the HandlerMethod instance._@param handler either a bean name or an actual handler instance_@param method the target method_@return the created HandlerMethod;protected HandlerMethod createHandlerMethod(Object handler, Method method) {_		HandlerMethod handlerMethod__		if (handler instanceof String) {_			String beanName = (String) handler__			handlerMethod = new HandlerMethod(beanName,_					getApplicationContext().getAutowireCapableBeanFactory(), method)__		}_		else {_			handlerMethod = new HandlerMethod(handler, method)__		}_		return handlerMethod__	};create,the,handler,method,instance,param,handler,either,a,bean,name,or,an,actual,handler,instance,param,method,the,target,method,return,the,created,handler,method;protected,handler,method,create,handler,method,object,handler,method,method,handler,method,handler,method,if,handler,instanceof,string,string,bean,name,string,handler,handler,method,new,handler,method,bean,name,get,application,context,get,autowire,capable,bean,factory,method,else,handler,method,new,handler,method,handler,method,return,handler,method
AbstractHandlerMethodMapping -> protected HandlerMethod createHandlerMethod(Object handler, Method method);1439294371;Create the HandlerMethod instance._@param handler either a bean name or an actual handler instance_@param method the target method_@return the created HandlerMethod;protected HandlerMethod createHandlerMethod(Object handler, Method method) {_		HandlerMethod handlerMethod__		if (handler instanceof String) {_			String beanName = (String) handler__			handlerMethod = new HandlerMethod(beanName,_					getApplicationContext().getAutowireCapableBeanFactory(), method)__		}_		else {_			handlerMethod = new HandlerMethod(handler, method)__		}_		return handlerMethod__	};create,the,handler,method,instance,param,handler,either,a,bean,name,or,an,actual,handler,instance,param,method,the,target,method,return,the,created,handler,method;protected,handler,method,create,handler,method,object,handler,method,method,handler,method,handler,method,if,handler,instanceof,string,string,bean,name,string,handler,handler,method,new,handler,method,bean,name,get,application,context,get,autowire,capable,bean,factory,method,else,handler,method,new,handler,method,handler,method,return,handler,method
AbstractHandlerMethodMapping -> protected HandlerMethod createHandlerMethod(Object handler, Method method);1447077465;Create the HandlerMethod instance._@param handler either a bean name or an actual handler instance_@param method the target method_@return the created HandlerMethod;protected HandlerMethod createHandlerMethod(Object handler, Method method) {_		HandlerMethod handlerMethod__		if (handler instanceof String) {_			String beanName = (String) handler__			handlerMethod = new HandlerMethod(beanName,_					getApplicationContext().getAutowireCapableBeanFactory(), method)__		}_		else {_			handlerMethod = new HandlerMethod(handler, method)__		}_		return handlerMethod__	};create,the,handler,method,instance,param,handler,either,a,bean,name,or,an,actual,handler,instance,param,method,the,target,method,return,the,created,handler,method;protected,handler,method,create,handler,method,object,handler,method,method,handler,method,handler,method,if,handler,instanceof,string,string,bean,name,string,handler,handler,method,new,handler,method,bean,name,get,application,context,get,autowire,capable,bean,factory,method,else,handler,method,new,handler,method,handler,method,return,handler,method
AbstractHandlerMethodMapping -> protected HandlerMethod createHandlerMethod(Object handler, Method method);1448483163;Create the HandlerMethod instance._@param handler either a bean name or an actual handler instance_@param method the target method_@return the created HandlerMethod;protected HandlerMethod createHandlerMethod(Object handler, Method method) {_		HandlerMethod handlerMethod__		if (handler instanceof String) {_			String beanName = (String) handler__			handlerMethod = new HandlerMethod(beanName,_					getApplicationContext().getAutowireCapableBeanFactory(), method)__		}_		else {_			handlerMethod = new HandlerMethod(handler, method)__		}_		return handlerMethod__	};create,the,handler,method,instance,param,handler,either,a,bean,name,or,an,actual,handler,instance,param,method,the,target,method,return,the,created,handler,method;protected,handler,method,create,handler,method,object,handler,method,method,handler,method,handler,method,if,handler,instanceof,string,string,bean,name,string,handler,handler,method,new,handler,method,bean,name,get,application,context,get,autowire,capable,bean,factory,method,else,handler,method,new,handler,method,handler,method,return,handler,method
AbstractHandlerMethodMapping -> protected HandlerMethod createHandlerMethod(Object handler, Method method);1452685925;Create the HandlerMethod instance._@param handler either a bean name or an actual handler instance_@param method the target method_@return the created HandlerMethod;protected HandlerMethod createHandlerMethod(Object handler, Method method) {_		HandlerMethod handlerMethod__		if (handler instanceof String) {_			String beanName = (String) handler__			handlerMethod = new HandlerMethod(beanName,_					getApplicationContext().getAutowireCapableBeanFactory(), method)__		}_		else {_			handlerMethod = new HandlerMethod(handler, method)__		}_		return handlerMethod__	};create,the,handler,method,instance,param,handler,either,a,bean,name,or,an,actual,handler,instance,param,method,the,target,method,return,the,created,handler,method;protected,handler,method,create,handler,method,object,handler,method,method,handler,method,handler,method,if,handler,instanceof,string,string,bean,name,string,handler,handler,method,new,handler,method,bean,name,get,application,context,get,autowire,capable,bean,factory,method,else,handler,method,new,handler,method,handler,method,return,handler,method
AbstractHandlerMethodMapping -> protected HandlerMethod createHandlerMethod(Object handler, Method method);1452873718;Create the HandlerMethod instance._@param handler either a bean name or an actual handler instance_@param method the target method_@return the created HandlerMethod;protected HandlerMethod createHandlerMethod(Object handler, Method method) {_		HandlerMethod handlerMethod__		if (handler instanceof String) {_			String beanName = (String) handler__			handlerMethod = new HandlerMethod(beanName,_					getApplicationContext().getAutowireCapableBeanFactory(), method)__		}_		else {_			handlerMethod = new HandlerMethod(handler, method)__		}_		return handlerMethod__	};create,the,handler,method,instance,param,handler,either,a,bean,name,or,an,actual,handler,instance,param,method,the,target,method,return,the,created,handler,method;protected,handler,method,create,handler,method,object,handler,method,method,handler,method,handler,method,if,handler,instanceof,string,string,bean,name,string,handler,handler,method,new,handler,method,bean,name,get,application,context,get,autowire,capable,bean,factory,method,else,handler,method,new,handler,method,handler,method,return,handler,method
AbstractHandlerMethodMapping -> protected HandlerMethod createHandlerMethod(Object handler, Method method);1453843788;Create the HandlerMethod instance._@param handler either a bean name or an actual handler instance_@param method the target method_@return the created HandlerMethod;protected HandlerMethod createHandlerMethod(Object handler, Method method) {_		HandlerMethod handlerMethod__		if (handler instanceof String) {_			String beanName = (String) handler__			handlerMethod = new HandlerMethod(beanName,_					getApplicationContext().getAutowireCapableBeanFactory(), method)__		}_		else {_			handlerMethod = new HandlerMethod(handler, method)__		}_		return handlerMethod__	};create,the,handler,method,instance,param,handler,either,a,bean,name,or,an,actual,handler,instance,param,method,the,target,method,return,the,created,handler,method;protected,handler,method,create,handler,method,object,handler,method,method,handler,method,handler,method,if,handler,instanceof,string,string,bean,name,string,handler,handler,method,new,handler,method,bean,name,get,application,context,get,autowire,capable,bean,factory,method,else,handler,method,new,handler,method,handler,method,return,handler,method
AbstractHandlerMethodMapping -> protected HandlerMethod createHandlerMethod(Object handler, Method method);1467730834;Create the HandlerMethod instance._@param handler either a bean name or an actual handler instance_@param method the target method_@return the created HandlerMethod;protected HandlerMethod createHandlerMethod(Object handler, Method method) {_		HandlerMethod handlerMethod__		if (handler instanceof String) {_			String beanName = (String) handler__			handlerMethod = new HandlerMethod(beanName,_					getApplicationContext().getAutowireCapableBeanFactory(), method)__		}_		else {_			handlerMethod = new HandlerMethod(handler, method)__		}_		return handlerMethod__	};create,the,handler,method,instance,param,handler,either,a,bean,name,or,an,actual,handler,instance,param,method,the,target,method,return,the,created,handler,method;protected,handler,method,create,handler,method,object,handler,method,method,handler,method,handler,method,if,handler,instanceof,string,string,bean,name,string,handler,handler,method,new,handler,method,bean,name,get,application,context,get,autowire,capable,bean,factory,method,else,handler,method,new,handler,method,handler,method,return,handler,method
AbstractHandlerMethodMapping -> protected HandlerMethod createHandlerMethod(Object handler, Method method);1468417354;Create the HandlerMethod instance._@param handler either a bean name or an actual handler instance_@param method the target method_@return the created HandlerMethod;protected HandlerMethod createHandlerMethod(Object handler, Method method) {_		HandlerMethod handlerMethod__		if (handler instanceof String) {_			String beanName = (String) handler__			handlerMethod = new HandlerMethod(beanName,_					getApplicationContext().getAutowireCapableBeanFactory(), method)__		}_		else {_			handlerMethod = new HandlerMethod(handler, method)__		}_		return handlerMethod__	};create,the,handler,method,instance,param,handler,either,a,bean,name,or,an,actual,handler,instance,param,method,the,target,method,return,the,created,handler,method;protected,handler,method,create,handler,method,object,handler,method,method,handler,method,handler,method,if,handler,instanceof,string,string,bean,name,string,handler,handler,method,new,handler,method,bean,name,get,application,context,get,autowire,capable,bean,factory,method,else,handler,method,new,handler,method,handler,method,return,handler,method
AbstractHandlerMethodMapping -> protected HandlerMethod createHandlerMethod(Object handler, Method method);1468596479;Create the HandlerMethod instance._@param handler either a bean name or an actual handler instance_@param method the target method_@return the created HandlerMethod;protected HandlerMethod createHandlerMethod(Object handler, Method method) {_		HandlerMethod handlerMethod__		if (handler instanceof String) {_			String beanName = (String) handler__			handlerMethod = new HandlerMethod(beanName,_					getApplicationContext().getAutowireCapableBeanFactory(), method)__		}_		else {_			handlerMethod = new HandlerMethod(handler, method)__		}_		return handlerMethod__	};create,the,handler,method,instance,param,handler,either,a,bean,name,or,an,actual,handler,instance,param,method,the,target,method,return,the,created,handler,method;protected,handler,method,create,handler,method,object,handler,method,method,handler,method,handler,method,if,handler,instanceof,string,string,bean,name,string,handler,handler,method,new,handler,method,bean,name,get,application,context,get,autowire,capable,bean,factory,method,else,handler,method,new,handler,method,handler,method,return,handler,method
AbstractHandlerMethodMapping -> protected HandlerMethod createHandlerMethod(Object handler, Method method);1474905889;Create the HandlerMethod instance._@param handler either a bean name or an actual handler instance_@param method the target method_@return the created HandlerMethod;protected HandlerMethod createHandlerMethod(Object handler, Method method) {_		HandlerMethod handlerMethod__		if (handler instanceof String) {_			String beanName = (String) handler__			handlerMethod = new HandlerMethod(beanName,_					getApplicationContext().getAutowireCapableBeanFactory(), method)__		}_		else {_			handlerMethod = new HandlerMethod(handler, method)__		}_		return handlerMethod__	};create,the,handler,method,instance,param,handler,either,a,bean,name,or,an,actual,handler,instance,param,method,the,target,method,return,the,created,handler,method;protected,handler,method,create,handler,method,object,handler,method,method,handler,method,handler,method,if,handler,instanceof,string,string,bean,name,string,handler,handler,method,new,handler,method,bean,name,get,application,context,get,autowire,capable,bean,factory,method,else,handler,method,new,handler,method,handler,method,return,handler,method
AbstractHandlerMethodMapping -> protected HandlerMethod createHandlerMethod(Object handler, Method method);1481813056;Create the HandlerMethod instance._@param handler either a bean name or an actual handler instance_@param method the target method_@return the created HandlerMethod;protected HandlerMethod createHandlerMethod(Object handler, Method method) {_		HandlerMethod handlerMethod__		if (handler instanceof String) {_			String beanName = (String) handler__			handlerMethod = new HandlerMethod(beanName,_					getApplicationContext().getAutowireCapableBeanFactory(), method)__		}_		else {_			handlerMethod = new HandlerMethod(handler, method)__		}_		return handlerMethod__	};create,the,handler,method,instance,param,handler,either,a,bean,name,or,an,actual,handler,instance,param,method,the,target,method,return,the,created,handler,method;protected,handler,method,create,handler,method,object,handler,method,method,handler,method,handler,method,if,handler,instanceof,string,string,bean,name,string,handler,handler,method,new,handler,method,bean,name,get,application,context,get,autowire,capable,bean,factory,method,else,handler,method,new,handler,method,handler,method,return,handler,method
AbstractHandlerMethodMapping -> protected HandlerMethod createHandlerMethod(Object handler, Method method);1485810955;Create the HandlerMethod instance._@param handler either a bean name or an actual handler instance_@param method the target method_@return the created HandlerMethod;protected HandlerMethod createHandlerMethod(Object handler, Method method) {_		HandlerMethod handlerMethod__		if (handler instanceof String) {_			String beanName = (String) handler__			handlerMethod = new HandlerMethod(beanName,_					getApplicationContext().getAutowireCapableBeanFactory(), method)__		}_		else {_			handlerMethod = new HandlerMethod(handler, method)__		}_		return handlerMethod__	};create,the,handler,method,instance,param,handler,either,a,bean,name,or,an,actual,handler,instance,param,method,the,target,method,return,the,created,handler,method;protected,handler,method,create,handler,method,object,handler,method,method,handler,method,handler,method,if,handler,instanceof,string,string,bean,name,string,handler,handler,method,new,handler,method,bean,name,get,application,context,get,autowire,capable,bean,factory,method,else,handler,method,new,handler,method,handler,method,return,handler,method
AbstractHandlerMethodMapping -> protected HandlerMethod createHandlerMethod(Object handler, Method method);1495868221;Create the HandlerMethod instance._@param handler either a bean name or an actual handler instance_@param method the target method_@return the created HandlerMethod;protected HandlerMethod createHandlerMethod(Object handler, Method method) {_		HandlerMethod handlerMethod__		if (handler instanceof String) {_			String beanName = (String) handler__			handlerMethod = new HandlerMethod(beanName,_					getApplicationContext().getAutowireCapableBeanFactory(), method)__		}_		else {_			handlerMethod = new HandlerMethod(handler, method)__		}_		return handlerMethod__	};create,the,handler,method,instance,param,handler,either,a,bean,name,or,an,actual,handler,instance,param,method,the,target,method,return,the,created,handler,method;protected,handler,method,create,handler,method,object,handler,method,method,handler,method,handler,method,if,handler,instanceof,string,string,bean,name,string,handler,handler,method,new,handler,method,bean,name,get,application,context,get,autowire,capable,bean,factory,method,else,handler,method,new,handler,method,handler,method,return,handler,method
AbstractHandlerMethodMapping -> protected HandlerMethod createHandlerMethod(Object handler, Method method);1496837955;Create the HandlerMethod instance._@param handler either a bean name or an actual handler instance_@param method the target method_@return the created HandlerMethod;protected HandlerMethod createHandlerMethod(Object handler, Method method) {_		HandlerMethod handlerMethod__		if (handler instanceof String) {_			String beanName = (String) handler__			handlerMethod = new HandlerMethod(beanName,_					obtainApplicationContext().getAutowireCapableBeanFactory(), method)__		}_		else {_			handlerMethod = new HandlerMethod(handler, method)__		}_		return handlerMethod__	};create,the,handler,method,instance,param,handler,either,a,bean,name,or,an,actual,handler,instance,param,method,the,target,method,return,the,created,handler,method;protected,handler,method,create,handler,method,object,handler,method,method,handler,method,handler,method,if,handler,instanceof,string,string,bean,name,string,handler,handler,method,new,handler,method,bean,name,obtain,application,context,get,autowire,capable,bean,factory,method,else,handler,method,new,handler,method,handler,method,return,handler,method
AbstractHandlerMethodMapping -> protected HandlerMethod createHandlerMethod(Object handler, Method method);1497251962;Create the HandlerMethod instance._@param handler either a bean name or an actual handler instance_@param method the target method_@return the created HandlerMethod;protected HandlerMethod createHandlerMethod(Object handler, Method method) {_		HandlerMethod handlerMethod__		if (handler instanceof String) {_			String beanName = (String) handler__			handlerMethod = new HandlerMethod(beanName,_					obtainApplicationContext().getAutowireCapableBeanFactory(), method)__		}_		else {_			handlerMethod = new HandlerMethod(handler, method)__		}_		return handlerMethod__	};create,the,handler,method,instance,param,handler,either,a,bean,name,or,an,actual,handler,instance,param,method,the,target,method,return,the,created,handler,method;protected,handler,method,create,handler,method,object,handler,method,method,handler,method,handler,method,if,handler,instanceof,string,string,bean,name,string,handler,handler,method,new,handler,method,bean,name,obtain,application,context,get,autowire,capable,bean,factory,method,else,handler,method,new,handler,method,handler,method,return,handler,method
AbstractHandlerMethodMapping -> protected HandlerMethod createHandlerMethod(Object handler, Method method);1498780456;Create the HandlerMethod instance._@param handler either a bean name or an actual handler instance_@param method the target method_@return the created HandlerMethod;protected HandlerMethod createHandlerMethod(Object handler, Method method) {_		HandlerMethod handlerMethod__		if (handler instanceof String) {_			String beanName = (String) handler__			handlerMethod = new HandlerMethod(beanName,_					obtainApplicationContext().getAutowireCapableBeanFactory(), method)__		}_		else {_			handlerMethod = new HandlerMethod(handler, method)__		}_		return handlerMethod__	};create,the,handler,method,instance,param,handler,either,a,bean,name,or,an,actual,handler,instance,param,method,the,target,method,return,the,created,handler,method;protected,handler,method,create,handler,method,object,handler,method,method,handler,method,handler,method,if,handler,instanceof,string,string,bean,name,string,handler,handler,method,new,handler,method,bean,name,obtain,application,context,get,autowire,capable,bean,factory,method,else,handler,method,new,handler,method,handler,method,return,handler,method
AbstractHandlerMethodMapping -> protected HandlerMethod createHandlerMethod(Object handler, Method method);1518772998;Create the HandlerMethod instance._@param handler either a bean name or an actual handler instance_@param method the target method_@return the created HandlerMethod;protected HandlerMethod createHandlerMethod(Object handler, Method method) {_		HandlerMethod handlerMethod__		if (handler instanceof String) {_			String beanName = (String) handler__			handlerMethod = new HandlerMethod(beanName,_					obtainApplicationContext().getAutowireCapableBeanFactory(), method)__		}_		else {_			handlerMethod = new HandlerMethod(handler, method)__		}_		return handlerMethod__	};create,the,handler,method,instance,param,handler,either,a,bean,name,or,an,actual,handler,instance,param,method,the,target,method,return,the,created,handler,method;protected,handler,method,create,handler,method,object,handler,method,method,handler,method,handler,method,if,handler,instanceof,string,string,bean,name,string,handler,handler,method,new,handler,method,bean,name,obtain,application,context,get,autowire,capable,bean,factory,method,else,handler,method,new,handler,method,handler,method,return,handler,method
AbstractHandlerMethodMapping -> protected HandlerMethod createHandlerMethod(Object handler, Method method);1522103912;Create the HandlerMethod instance._@param handler either a bean name or an actual handler instance_@param method the target method_@return the created HandlerMethod;protected HandlerMethod createHandlerMethod(Object handler, Method method) {_		HandlerMethod handlerMethod__		if (handler instanceof String) {_			String beanName = (String) handler__			handlerMethod = new HandlerMethod(beanName,_					obtainApplicationContext().getAutowireCapableBeanFactory(), method)__		}_		else {_			handlerMethod = new HandlerMethod(handler, method)__		}_		return handlerMethod__	};create,the,handler,method,instance,param,handler,either,a,bean,name,or,an,actual,handler,instance,param,method,the,target,method,return,the,created,handler,method;protected,handler,method,create,handler,method,object,handler,method,method,handler,method,handler,method,if,handler,instanceof,string,string,bean,name,string,handler,handler,method,new,handler,method,bean,name,obtain,application,context,get,autowire,capable,bean,factory,method,else,handler,method,new,handler,method,handler,method,return,handler,method
AbstractHandlerMethodMapping -> protected HandlerMethod createHandlerMethod(Object handler, Method method);1522843494;Create the HandlerMethod instance._@param handler either a bean name or an actual handler instance_@param method the target method_@return the created HandlerMethod;protected HandlerMethod createHandlerMethod(Object handler, Method method) {_		HandlerMethod handlerMethod__		if (handler instanceof String) {_			String beanName = (String) handler__			handlerMethod = new HandlerMethod(beanName,_					obtainApplicationContext().getAutowireCapableBeanFactory(), method)__		}_		else {_			handlerMethod = new HandlerMethod(handler, method)__		}_		return handlerMethod__	};create,the,handler,method,instance,param,handler,either,a,bean,name,or,an,actual,handler,instance,param,method,the,target,method,return,the,created,handler,method;protected,handler,method,create,handler,method,object,handler,method,method,handler,method,handler,method,if,handler,instanceof,string,string,bean,name,string,handler,handler,method,new,handler,method,bean,name,obtain,application,context,get,autowire,capable,bean,factory,method,else,handler,method,new,handler,method,handler,method,return,handler,method
AbstractHandlerMethodMapping -> protected HandlerMethod createHandlerMethod(Object handler, Method method);1529361191;Create the HandlerMethod instance._@param handler either a bean name or an actual handler instance_@param method the target method_@return the created HandlerMethod;protected HandlerMethod createHandlerMethod(Object handler, Method method) {_		HandlerMethod handlerMethod__		if (handler instanceof String) {_			String beanName = (String) handler__			handlerMethod = new HandlerMethod(beanName,_					obtainApplicationContext().getAutowireCapableBeanFactory(), method)__		}_		else {_			handlerMethod = new HandlerMethod(handler, method)__		}_		return handlerMethod__	};create,the,handler,method,instance,param,handler,either,a,bean,name,or,an,actual,handler,instance,param,method,the,target,method,return,the,created,handler,method;protected,handler,method,create,handler,method,object,handler,method,method,handler,method,handler,method,if,handler,instanceof,string,string,bean,name,string,handler,handler,method,new,handler,method,bean,name,obtain,application,context,get,autowire,capable,bean,factory,method,else,handler,method,new,handler,method,handler,method,return,handler,method
AbstractHandlerMethodMapping -> protected HandlerMethod createHandlerMethod(Object handler, Method method);1529721864;Create the HandlerMethod instance._@param handler either a bean name or an actual handler instance_@param method the target method_@return the created HandlerMethod;protected HandlerMethod createHandlerMethod(Object handler, Method method) {_		HandlerMethod handlerMethod__		if (handler instanceof String) {_			String beanName = (String) handler__			handlerMethod = new HandlerMethod(beanName,_					obtainApplicationContext().getAutowireCapableBeanFactory(), method)__		}_		else {_			handlerMethod = new HandlerMethod(handler, method)__		}_		return handlerMethod__	};create,the,handler,method,instance,param,handler,either,a,bean,name,or,an,actual,handler,instance,param,method,the,target,method,return,the,created,handler,method;protected,handler,method,create,handler,method,object,handler,method,method,handler,method,handler,method,if,handler,instanceof,string,string,bean,name,string,handler,handler,method,new,handler,method,bean,name,obtain,application,context,get,autowire,capable,bean,factory,method,else,handler,method,new,handler,method,handler,method,return,handler,method
AbstractHandlerMethodMapping -> protected HandlerMethod createHandlerMethod(Object handler, Method method);1530174524;Create the HandlerMethod instance._@param handler either a bean name or an actual handler instance_@param method the target method_@return the created HandlerMethod;protected HandlerMethod createHandlerMethod(Object handler, Method method) {_		HandlerMethod handlerMethod__		if (handler instanceof String) {_			String beanName = (String) handler__			handlerMethod = new HandlerMethod(beanName,_					obtainApplicationContext().getAutowireCapableBeanFactory(), method)__		}_		else {_			handlerMethod = new HandlerMethod(handler, method)__		}_		return handlerMethod__	};create,the,handler,method,instance,param,handler,either,a,bean,name,or,an,actual,handler,instance,param,method,the,target,method,return,the,created,handler,method;protected,handler,method,create,handler,method,object,handler,method,method,handler,method,handler,method,if,handler,instanceof,string,string,bean,name,string,handler,handler,method,new,handler,method,bean,name,obtain,application,context,get,autowire,capable,bean,factory,method,else,handler,method,new,handler,method,handler,method,return,handler,method
AbstractHandlerMethodMapping -> protected HandlerMethod createHandlerMethod(Object handler, Method method);1530174524;Create the HandlerMethod instance._@param handler either a bean name or an actual handler instance_@param method the target method_@return the created HandlerMethod;protected HandlerMethod createHandlerMethod(Object handler, Method method) {_		HandlerMethod handlerMethod__		if (handler instanceof String) {_			String beanName = (String) handler__			handlerMethod = new HandlerMethod(beanName,_					obtainApplicationContext().getAutowireCapableBeanFactory(), method)__		}_		else {_			handlerMethod = new HandlerMethod(handler, method)__		}_		return handlerMethod__	};create,the,handler,method,instance,param,handler,either,a,bean,name,or,an,actual,handler,instance,param,method,the,target,method,return,the,created,handler,method;protected,handler,method,create,handler,method,object,handler,method,method,handler,method,handler,method,if,handler,instanceof,string,string,bean,name,string,handler,handler,method,new,handler,method,bean,name,obtain,application,context,get,autowire,capable,bean,factory,method,else,handler,method,new,handler,method,handler,method,return,handler,method
AbstractHandlerMethodMapping -> protected HandlerMethod createHandlerMethod(Object handler, Method method);1533943217;Create the HandlerMethod instance._@param handler either a bean name or an actual handler instance_@param method the target method_@return the created HandlerMethod;protected HandlerMethod createHandlerMethod(Object handler, Method method) {_		HandlerMethod handlerMethod__		if (handler instanceof String) {_			String beanName = (String) handler__			handlerMethod = new HandlerMethod(beanName,_					obtainApplicationContext().getAutowireCapableBeanFactory(), method)__		}_		else {_			handlerMethod = new HandlerMethod(handler, method)__		}_		return handlerMethod__	};create,the,handler,method,instance,param,handler,either,a,bean,name,or,an,actual,handler,instance,param,method,the,target,method,return,the,created,handler,method;protected,handler,method,create,handler,method,object,handler,method,method,handler,method,handler,method,if,handler,instanceof,string,string,bean,name,string,handler,handler,method,new,handler,method,bean,name,obtain,application,context,get,autowire,capable,bean,factory,method,else,handler,method,new,handler,method,handler,method,return,handler,method
AbstractHandlerMethodMapping -> protected HandlerMethod createHandlerMethod(Object handler, Method method);1542407418;Create the HandlerMethod instance._@param handler either a bean name or an actual handler instance_@param method the target method_@return the created HandlerMethod;protected HandlerMethod createHandlerMethod(Object handler, Method method) {_		HandlerMethod handlerMethod__		if (handler instanceof String) {_			String beanName = (String) handler__			handlerMethod = new HandlerMethod(beanName,_					obtainApplicationContext().getAutowireCapableBeanFactory(), method)__		}_		else {_			handlerMethod = new HandlerMethod(handler, method)__		}_		return handlerMethod__	};create,the,handler,method,instance,param,handler,either,a,bean,name,or,an,actual,handler,instance,param,method,the,target,method,return,the,created,handler,method;protected,handler,method,create,handler,method,object,handler,method,method,handler,method,handler,method,if,handler,instanceof,string,string,bean,name,string,handler,handler,method,new,handler,method,bean,name,obtain,application,context,get,autowire,capable,bean,factory,method,else,handler,method,new,handler,method,handler,method,return,handler,method
AbstractHandlerMethodMapping -> protected HandlerMethod createHandlerMethod(Object handler, Method method);1542771062;Create the HandlerMethod instance._@param handler either a bean name or an actual handler instance_@param method the target method_@return the created HandlerMethod;protected HandlerMethod createHandlerMethod(Object handler, Method method) {_		HandlerMethod handlerMethod__		if (handler instanceof String) {_			String beanName = (String) handler__			handlerMethod = new HandlerMethod(beanName,_					obtainApplicationContext().getAutowireCapableBeanFactory(), method)__		}_		else {_			handlerMethod = new HandlerMethod(handler, method)__		}_		return handlerMethod__	};create,the,handler,method,instance,param,handler,either,a,bean,name,or,an,actual,handler,instance,param,method,the,target,method,return,the,created,handler,method;protected,handler,method,create,handler,method,object,handler,method,method,handler,method,handler,method,if,handler,instanceof,string,string,bean,name,string,handler,handler,method,new,handler,method,bean,name,obtain,application,context,get,autowire,capable,bean,factory,method,else,handler,method,new,handler,method,handler,method,return,handler,method
AbstractHandlerMethodMapping -> protected HandlerMethod createHandlerMethod(Object handler, Method method);1548427561;Create the HandlerMethod instance._@param handler either a bean name or an actual handler instance_@param method the target method_@return the created HandlerMethod;protected HandlerMethod createHandlerMethod(Object handler, Method method) {_		HandlerMethod handlerMethod__		if (handler instanceof String) {_			String beanName = (String) handler__			handlerMethod = new HandlerMethod(beanName,_					obtainApplicationContext().getAutowireCapableBeanFactory(), method)__		}_		else {_			handlerMethod = new HandlerMethod(handler, method)__		}_		return handlerMethod__	};create,the,handler,method,instance,param,handler,either,a,bean,name,or,an,actual,handler,instance,param,method,the,target,method,return,the,created,handler,method;protected,handler,method,create,handler,method,object,handler,method,method,handler,method,handler,method,if,handler,instanceof,string,string,bean,name,string,handler,handler,method,new,handler,method,bean,name,obtain,application,context,get,autowire,capable,bean,factory,method,else,handler,method,new,handler,method,handler,method,return,handler,method
AbstractHandlerMethodMapping -> protected HandlerMethod createHandlerMethod(Object handler, Method method);1551093473;Create the HandlerMethod instance._@param handler either a bean name or an actual handler instance_@param method the target method_@return the created HandlerMethod;protected HandlerMethod createHandlerMethod(Object handler, Method method) {_		if (handler instanceof String) {_			return new HandlerMethod((String) handler,_					obtainApplicationContext().getAutowireCapableBeanFactory(), method)__		}_		return new HandlerMethod(handler, method)__	};create,the,handler,method,instance,param,handler,either,a,bean,name,or,an,actual,handler,instance,param,method,the,target,method,return,the,created,handler,method;protected,handler,method,create,handler,method,object,handler,method,method,if,handler,instanceof,string,return,new,handler,method,string,handler,obtain,application,context,get,autowire,capable,bean,factory,method,return,new,handler,method,handler,method
AbstractHandlerMethodMapping -> MappingRegistry -> public HandlerMethod getHandlerMethod(T mapping);1430734106;Return the handler method for the mapping key. Not thread-safe._@see #acquireReadLock();public HandlerMethod getHandlerMethod(T mapping) {_			return this.mappingLookup.get(mapping)__		};return,the,handler,method,for,the,mapping,key,not,thread,safe,see,acquire,read,lock;public,handler,method,get,handler,method,t,mapping,return,this,mapping,lookup,get,mapping
AbstractHandlerMethodMapping -> MappingRegistry -> public HandlerMethod getHandlerMethod(T mapping);1430774689;Return the handler method for the mapping key. Not thread-safe._@see #acquireReadLock();public HandlerMethod getHandlerMethod(T mapping) {_			return this.mappingLookup.get(mapping)__		};return,the,handler,method,for,the,mapping,key,not,thread,safe,see,acquire,read,lock;public,handler,method,get,handler,method,t,mapping,return,this,mapping,lookup,get,mapping
AbstractHandlerMethodMapping -> MappingRegistry -> public void releaseReadLock();1430734106;Release the read lock after using getMappings and getMappingKeysByUrl.;public void releaseReadLock() {_			this.readWriteLock.readLock().unlock()__		};release,the,read,lock,after,using,get,mappings,and,get,mapping,keys,by,url;public,void,release,read,lock,this,read,write,lock,read,lock,unlock
AbstractHandlerMethodMapping -> MappingRegistry -> public void releaseReadLock();1430774689;Release the read lock after using getMappings and getMappingKeysByUrl.;public void releaseReadLock() {_			this.readWriteLock.readLock().unlock()__		};release,the,read,lock,after,using,get,mappings,and,get,mapping,keys,by,url;public,void,release,read,lock,this,read,write,lock,read,lock,unlock
AbstractHandlerMethodMapping -> MappingRegistry -> public void releaseReadLock();1430844966;Release the read lock after using getMappings and getMappingsByUrl.;public void releaseReadLock() {_			this.readWriteLock.readLock().unlock()__		};release,the,read,lock,after,using,get,mappings,and,get,mappings,by,url;public,void,release,read,lock,this,read,write,lock,read,lock,unlock
AbstractHandlerMethodMapping -> MappingRegistry -> public void releaseReadLock();1430844967;Release the read lock after using getMappings and getMappingsByUrl.;public void releaseReadLock() {_			this.readWriteLock.readLock().unlock()__		};release,the,read,lock,after,using,get,mappings,and,get,mappings,by,url;public,void,release,read,lock,this,read,write,lock,read,lock,unlock
AbstractHandlerMethodMapping -> MappingRegistry -> public void releaseReadLock();1431730371;Release the read lock after using getMappings and getMappingsByUrl.;public void releaseReadLock() {_			this.readWriteLock.readLock().unlock()__		};release,the,read,lock,after,using,get,mappings,and,get,mappings,by,url;public,void,release,read,lock,this,read,write,lock,read,lock,unlock
AbstractHandlerMethodMapping -> MappingRegistry -> public void releaseReadLock();1439294371;Release the read lock after using getMappings and getMappingsByUrl.;public void releaseReadLock() {_			this.readWriteLock.readLock().unlock()__		};release,the,read,lock,after,using,get,mappings,and,get,mappings,by,url;public,void,release,read,lock,this,read,write,lock,read,lock,unlock
AbstractHandlerMethodMapping -> MappingRegistry -> public void releaseReadLock();1447077465;Release the read lock after using getMappings and getMappingsByUrl.;public void releaseReadLock() {_			this.readWriteLock.readLock().unlock()__		};release,the,read,lock,after,using,get,mappings,and,get,mappings,by,url;public,void,release,read,lock,this,read,write,lock,read,lock,unlock
AbstractHandlerMethodMapping -> MappingRegistry -> public void releaseReadLock();1448483163;Release the read lock after using getMappings and getMappingsByUrl.;public void releaseReadLock() {_			this.readWriteLock.readLock().unlock()__		};release,the,read,lock,after,using,get,mappings,and,get,mappings,by,url;public,void,release,read,lock,this,read,write,lock,read,lock,unlock
AbstractHandlerMethodMapping -> MappingRegistry -> public void releaseReadLock();1452685925;Release the read lock after using getMappings and getMappingsByUrl.;public void releaseReadLock() {_			this.readWriteLock.readLock().unlock()__		};release,the,read,lock,after,using,get,mappings,and,get,mappings,by,url;public,void,release,read,lock,this,read,write,lock,read,lock,unlock
AbstractHandlerMethodMapping -> MappingRegistry -> public void releaseReadLock();1452873718;Release the read lock after using getMappings and getMappingsByUrl.;public void releaseReadLock() {_			this.readWriteLock.readLock().unlock()__		};release,the,read,lock,after,using,get,mappings,and,get,mappings,by,url;public,void,release,read,lock,this,read,write,lock,read,lock,unlock
AbstractHandlerMethodMapping -> MappingRegistry -> public void releaseReadLock();1453843788;Release the read lock after using getMappings and getMappingsByUrl.;public void releaseReadLock() {_			this.readWriteLock.readLock().unlock()__		};release,the,read,lock,after,using,get,mappings,and,get,mappings,by,url;public,void,release,read,lock,this,read,write,lock,read,lock,unlock
AbstractHandlerMethodMapping -> MappingRegistry -> public void releaseReadLock();1467730834;Release the read lock after using getMappings and getMappingsByUrl.;public void releaseReadLock() {_			this.readWriteLock.readLock().unlock()__		};release,the,read,lock,after,using,get,mappings,and,get,mappings,by,url;public,void,release,read,lock,this,read,write,lock,read,lock,unlock
AbstractHandlerMethodMapping -> MappingRegistry -> public void releaseReadLock();1468417354;Release the read lock after using getMappings and getMappingsByUrl.;public void releaseReadLock() {_			this.readWriteLock.readLock().unlock()__		};release,the,read,lock,after,using,get,mappings,and,get,mappings,by,url;public,void,release,read,lock,this,read,write,lock,read,lock,unlock
AbstractHandlerMethodMapping -> MappingRegistry -> public void releaseReadLock();1468596479;Release the read lock after using getMappings and getMappingsByUrl.;public void releaseReadLock() {_			this.readWriteLock.readLock().unlock()__		};release,the,read,lock,after,using,get,mappings,and,get,mappings,by,url;public,void,release,read,lock,this,read,write,lock,read,lock,unlock
AbstractHandlerMethodMapping -> MappingRegistry -> public void releaseReadLock();1474905889;Release the read lock after using getMappings and getMappingsByUrl.;public void releaseReadLock() {_			this.readWriteLock.readLock().unlock()__		};release,the,read,lock,after,using,get,mappings,and,get,mappings,by,url;public,void,release,read,lock,this,read,write,lock,read,lock,unlock
AbstractHandlerMethodMapping -> MappingRegistry -> public void releaseReadLock();1481813056;Release the read lock after using getMappings and getMappingsByUrl.;public void releaseReadLock() {_			this.readWriteLock.readLock().unlock()__		};release,the,read,lock,after,using,get,mappings,and,get,mappings,by,url;public,void,release,read,lock,this,read,write,lock,read,lock,unlock
AbstractHandlerMethodMapping -> MappingRegistry -> public void releaseReadLock();1485810955;Release the read lock after using getMappings and getMappingsByUrl.;public void releaseReadLock() {_			this.readWriteLock.readLock().unlock()__		};release,the,read,lock,after,using,get,mappings,and,get,mappings,by,url;public,void,release,read,lock,this,read,write,lock,read,lock,unlock
AbstractHandlerMethodMapping -> MappingRegistry -> public void releaseReadLock();1495868221;Release the read lock after using getMappings and getMappingsByUrl.;public void releaseReadLock() {_			this.readWriteLock.readLock().unlock()__		};release,the,read,lock,after,using,get,mappings,and,get,mappings,by,url;public,void,release,read,lock,this,read,write,lock,read,lock,unlock
AbstractHandlerMethodMapping -> MappingRegistry -> public void releaseReadLock();1496837955;Release the read lock after using getMappings and getMappingsByUrl.;public void releaseReadLock() {_			this.readWriteLock.readLock().unlock()__		};release,the,read,lock,after,using,get,mappings,and,get,mappings,by,url;public,void,release,read,lock,this,read,write,lock,read,lock,unlock
AbstractHandlerMethodMapping -> MappingRegistry -> public void releaseReadLock();1497251962;Release the read lock after using getMappings and getMappingsByUrl.;public void releaseReadLock() {_			this.readWriteLock.readLock().unlock()__		};release,the,read,lock,after,using,get,mappings,and,get,mappings,by,url;public,void,release,read,lock,this,read,write,lock,read,lock,unlock
AbstractHandlerMethodMapping -> MappingRegistry -> public void releaseReadLock();1498780456;Release the read lock after using getMappings and getMappingsByUrl.;public void releaseReadLock() {_			this.readWriteLock.readLock().unlock()__		};release,the,read,lock,after,using,get,mappings,and,get,mappings,by,url;public,void,release,read,lock,this,read,write,lock,read,lock,unlock
AbstractHandlerMethodMapping -> MappingRegistry -> public void releaseReadLock();1518772998;Release the read lock after using getMappings and getMappingsByUrl.;public void releaseReadLock() {_			this.readWriteLock.readLock().unlock()__		};release,the,read,lock,after,using,get,mappings,and,get,mappings,by,url;public,void,release,read,lock,this,read,write,lock,read,lock,unlock
AbstractHandlerMethodMapping -> MappingRegistry -> public void releaseReadLock();1522103912;Release the read lock after using getMappings and getMappingsByUrl.;public void releaseReadLock() {_			this.readWriteLock.readLock().unlock()__		};release,the,read,lock,after,using,get,mappings,and,get,mappings,by,url;public,void,release,read,lock,this,read,write,lock,read,lock,unlock
AbstractHandlerMethodMapping -> MappingRegistry -> public void releaseReadLock();1522843494;Release the read lock after using getMappings and getMappingsByUrl.;public void releaseReadLock() {_			this.readWriteLock.readLock().unlock()__		};release,the,read,lock,after,using,get,mappings,and,get,mappings,by,url;public,void,release,read,lock,this,read,write,lock,read,lock,unlock
AbstractHandlerMethodMapping -> MappingRegistry -> public void releaseReadLock();1529361191;Release the read lock after using getMappings and getMappingsByUrl.;public void releaseReadLock() {_			this.readWriteLock.readLock().unlock()__		};release,the,read,lock,after,using,get,mappings,and,get,mappings,by,url;public,void,release,read,lock,this,read,write,lock,read,lock,unlock
AbstractHandlerMethodMapping -> MappingRegistry -> public void releaseReadLock();1529721864;Release the read lock after using getMappings and getMappingsByUrl.;public void releaseReadLock() {_			this.readWriteLock.readLock().unlock()__		};release,the,read,lock,after,using,get,mappings,and,get,mappings,by,url;public,void,release,read,lock,this,read,write,lock,read,lock,unlock
AbstractHandlerMethodMapping -> MappingRegistry -> public void releaseReadLock();1530174524;Release the read lock after using getMappings and getMappingsByUrl.;public void releaseReadLock() {_			this.readWriteLock.readLock().unlock()__		};release,the,read,lock,after,using,get,mappings,and,get,mappings,by,url;public,void,release,read,lock,this,read,write,lock,read,lock,unlock
AbstractHandlerMethodMapping -> MappingRegistry -> public void releaseReadLock();1530174524;Release the read lock after using getMappings and getMappingsByUrl.;public void releaseReadLock() {_			this.readWriteLock.readLock().unlock()__		};release,the,read,lock,after,using,get,mappings,and,get,mappings,by,url;public,void,release,read,lock,this,read,write,lock,read,lock,unlock
AbstractHandlerMethodMapping -> MappingRegistry -> public void releaseReadLock();1533943217;Release the read lock after using getMappings and getMappingsByUrl.;public void releaseReadLock() {_			this.readWriteLock.readLock().unlock()__		};release,the,read,lock,after,using,get,mappings,and,get,mappings,by,url;public,void,release,read,lock,this,read,write,lock,read,lock,unlock
AbstractHandlerMethodMapping -> MappingRegistry -> public void releaseReadLock();1542407418;Release the read lock after using getMappings and getMappingsByUrl.;public void releaseReadLock() {_			this.readWriteLock.readLock().unlock()__		};release,the,read,lock,after,using,get,mappings,and,get,mappings,by,url;public,void,release,read,lock,this,read,write,lock,read,lock,unlock
AbstractHandlerMethodMapping -> MappingRegistry -> public void releaseReadLock();1542771062;Release the read lock after using getMappings and getMappingsByUrl.;public void releaseReadLock() {_			this.readWriteLock.readLock().unlock()__		};release,the,read,lock,after,using,get,mappings,and,get,mappings,by,url;public,void,release,read,lock,this,read,write,lock,read,lock,unlock
AbstractHandlerMethodMapping -> MappingRegistry -> public void releaseReadLock();1548427561;Release the read lock after using getMappings and getMappingsByUrl.;public void releaseReadLock() {_			this.readWriteLock.readLock().unlock()__		};release,the,read,lock,after,using,get,mappings,and,get,mappings,by,url;public,void,release,read,lock,this,read,write,lock,read,lock,unlock
AbstractHandlerMethodMapping -> MappingRegistry -> public void releaseReadLock();1551093473;Release the read lock after using getMappings and getMappingsByUrl.;public void releaseReadLock() {_			this.readWriteLock.readLock().unlock()__		};release,the,read,lock,after,using,get,mappings,and,get,mappings,by,url;public,void,release,read,lock,this,read,write,lock,read,lock,unlock
AbstractHandlerMethodMapping -> @Override 	protected HandlerMethod getHandlerInternal(HttpServletRequest request) throws Exception;1328020251;Look up a handler method for the given request.;@Override_	protected HandlerMethod getHandlerInternal(HttpServletRequest request) throws Exception {_		String lookupPath = getUrlPathHelper().getLookupPathForRequest(request)__		if (logger.isDebugEnabled()) {_			logger.debug("Looking up handler method for path " + lookupPath)__		}__		HandlerMethod handlerMethod = lookupHandlerMethod(lookupPath, request)___		if (logger.isDebugEnabled()) {_			if (handlerMethod != null) {_				logger.debug("Returning handler method [" + handlerMethod + "]")__			}_			else {_				logger.debug("Did not find handler method for [" + lookupPath + "]")__			}_		}__		return (handlerMethod != null) ? handlerMethod.createWithResolvedBean() : null__	};look,up,a,handler,method,for,the,given,request;override,protected,handler,method,get,handler,internal,http,servlet,request,request,throws,exception,string,lookup,path,get,url,path,helper,get,lookup,path,for,request,request,if,logger,is,debug,enabled,logger,debug,looking,up,handler,method,for,path,lookup,path,handler,method,handler,method,lookup,handler,method,lookup,path,request,if,logger,is,debug,enabled,if,handler,method,null,logger,debug,returning,handler,method,handler,method,else,logger,debug,did,not,find,handler,method,for,lookup,path,return,handler,method,null,handler,method,create,with,resolved,bean,null
AbstractHandlerMethodMapping -> @Override 	protected HandlerMethod getHandlerInternal(HttpServletRequest request) throws Exception;1328022204;Look up a handler method for the given request.;@Override_	protected HandlerMethod getHandlerInternal(HttpServletRequest request) throws Exception {_		String lookupPath = getUrlPathHelper().getLookupPathForRequest(request)__		if (logger.isDebugEnabled()) {_			logger.debug("Looking up handler method for path " + lookupPath)__		}__		HandlerMethod handlerMethod = lookupHandlerMethod(lookupPath, request)___		if (logger.isDebugEnabled()) {_			if (handlerMethod != null) {_				logger.debug("Returning handler method [" + handlerMethod + "]")__			}_			else {_				logger.debug("Did not find handler method for [" + lookupPath + "]")__			}_		}__		return (handlerMethod != null) ? handlerMethod.createWithResolvedBean() : null__	};look,up,a,handler,method,for,the,given,request;override,protected,handler,method,get,handler,internal,http,servlet,request,request,throws,exception,string,lookup,path,get,url,path,helper,get,lookup,path,for,request,request,if,logger,is,debug,enabled,logger,debug,looking,up,handler,method,for,path,lookup,path,handler,method,handler,method,lookup,handler,method,lookup,path,request,if,logger,is,debug,enabled,if,handler,method,null,logger,debug,returning,handler,method,handler,method,else,logger,debug,did,not,find,handler,method,for,lookup,path,return,handler,method,null,handler,method,create,with,resolved,bean,null
AbstractHandlerMethodMapping -> @Override 	protected HandlerMethod getHandlerInternal(HttpServletRequest request) throws Exception;1336682556;Look up a handler method for the given request.;@Override_	protected HandlerMethod getHandlerInternal(HttpServletRequest request) throws Exception {_		String lookupPath = getUrlPathHelper().getLookupPathForRequest(request)__		if (logger.isDebugEnabled()) {_			logger.debug("Looking up handler method for path " + lookupPath)__		}__		HandlerMethod handlerMethod = lookupHandlerMethod(lookupPath, request)___		if (logger.isDebugEnabled()) {_			if (handlerMethod != null) {_				logger.debug("Returning handler method [" + handlerMethod + "]")__			}_			else {_				logger.debug("Did not find handler method for [" + lookupPath + "]")__			}_		}__		return (handlerMethod != null) ? handlerMethod.createWithResolvedBean() : null__	};look,up,a,handler,method,for,the,given,request;override,protected,handler,method,get,handler,internal,http,servlet,request,request,throws,exception,string,lookup,path,get,url,path,helper,get,lookup,path,for,request,request,if,logger,is,debug,enabled,logger,debug,looking,up,handler,method,for,path,lookup,path,handler,method,handler,method,lookup,handler,method,lookup,path,request,if,logger,is,debug,enabled,if,handler,method,null,logger,debug,returning,handler,method,handler,method,else,logger,debug,did,not,find,handler,method,for,lookup,path,return,handler,method,null,handler,method,create,with,resolved,bean,null
AbstractHandlerMethodMapping -> @Override 	protected HandlerMethod getHandlerInternal(HttpServletRequest request) throws Exception;1341441111;Look up a handler method for the given request.;@Override_	protected HandlerMethod getHandlerInternal(HttpServletRequest request) throws Exception {_		String lookupPath = getUrlPathHelper().getLookupPathForRequest(request)__		if (logger.isDebugEnabled()) {_			logger.debug("Looking up handler method for path " + lookupPath)__		}__		HandlerMethod handlerMethod = lookupHandlerMethod(lookupPath, request)___		if (logger.isDebugEnabled()) {_			if (handlerMethod != null) {_				logger.debug("Returning handler method [" + handlerMethod + "]")__			}_			else {_				logger.debug("Did not find handler method for [" + lookupPath + "]")__			}_		}__		return (handlerMethod != null) ? handlerMethod.createWithResolvedBean() : null__	};look,up,a,handler,method,for,the,given,request;override,protected,handler,method,get,handler,internal,http,servlet,request,request,throws,exception,string,lookup,path,get,url,path,helper,get,lookup,path,for,request,request,if,logger,is,debug,enabled,logger,debug,looking,up,handler,method,for,path,lookup,path,handler,method,handler,method,lookup,handler,method,lookup,path,request,if,logger,is,debug,enabled,if,handler,method,null,logger,debug,returning,handler,method,handler,method,else,logger,debug,did,not,find,handler,method,for,lookup,path,return,handler,method,null,handler,method,create,with,resolved,bean,null
AbstractHandlerMethodMapping -> @Override 	protected HandlerMethod getHandlerInternal(HttpServletRequest request) throws Exception;1356735495;Look up a handler method for the given request.;@Override_	protected HandlerMethod getHandlerInternal(HttpServletRequest request) throws Exception {_		String lookupPath = getUrlPathHelper().getLookupPathForRequest(request)__		if (logger.isDebugEnabled()) {_			logger.debug("Looking up handler method for path " + lookupPath)__		}__		HandlerMethod handlerMethod = lookupHandlerMethod(lookupPath, request)___		if (logger.isDebugEnabled()) {_			if (handlerMethod != null) {_				logger.debug("Returning handler method [" + handlerMethod + "]")__			}_			else {_				logger.debug("Did not find handler method for [" + lookupPath + "]")__			}_		}__		return (handlerMethod != null) ? handlerMethod.createWithResolvedBean() : null__	};look,up,a,handler,method,for,the,given,request;override,protected,handler,method,get,handler,internal,http,servlet,request,request,throws,exception,string,lookup,path,get,url,path,helper,get,lookup,path,for,request,request,if,logger,is,debug,enabled,logger,debug,looking,up,handler,method,for,path,lookup,path,handler,method,handler,method,lookup,handler,method,lookup,path,request,if,logger,is,debug,enabled,if,handler,method,null,logger,debug,returning,handler,method,handler,method,else,logger,debug,did,not,find,handler,method,for,lookup,path,return,handler,method,null,handler,method,create,with,resolved,bean,null
AbstractHandlerMethodMapping -> @Override 	protected HandlerMethod getHandlerInternal(HttpServletRequest request) throws Exception;1357119239;Look up a handler method for the given request.;@Override_	protected HandlerMethod getHandlerInternal(HttpServletRequest request) throws Exception {_		String lookupPath = getUrlPathHelper().getLookupPathForRequest(request)__		if (logger.isDebugEnabled()) {_			logger.debug("Looking up handler method for path " + lookupPath)__		}__		HandlerMethod handlerMethod = lookupHandlerMethod(lookupPath, request)___		if (logger.isDebugEnabled()) {_			if (handlerMethod != null) {_				logger.debug("Returning handler method [" + handlerMethod + "]")__			}_			else {_				logger.debug("Did not find handler method for [" + lookupPath + "]")__			}_		}__		return (handlerMethod != null) ? handlerMethod.createWithResolvedBean() : null__	};look,up,a,handler,method,for,the,given,request;override,protected,handler,method,get,handler,internal,http,servlet,request,request,throws,exception,string,lookup,path,get,url,path,helper,get,lookup,path,for,request,request,if,logger,is,debug,enabled,logger,debug,looking,up,handler,method,for,path,lookup,path,handler,method,handler,method,lookup,handler,method,lookup,path,request,if,logger,is,debug,enabled,if,handler,method,null,logger,debug,returning,handler,method,handler,method,else,logger,debug,did,not,find,handler,method,for,lookup,path,return,handler,method,null,handler,method,create,with,resolved,bean,null
AbstractHandlerMethodMapping -> @Override 	protected HandlerMethod getHandlerInternal(HttpServletRequest request) throws Exception;1362408075;Look up a handler method for the given request.;@Override_	protected HandlerMethod getHandlerInternal(HttpServletRequest request) throws Exception {_		String lookupPath = getUrlPathHelper().getLookupPathForRequest(request)__		if (logger.isDebugEnabled()) {_			logger.debug("Looking up handler method for path " + lookupPath)__		}__		HandlerMethod handlerMethod = lookupHandlerMethod(lookupPath, request)___		if (logger.isDebugEnabled()) {_			if (handlerMethod != null) {_				logger.debug("Returning handler method [" + handlerMethod + "]")__			}_			else {_				logger.debug("Did not find handler method for [" + lookupPath + "]")__			}_		}__		return (handlerMethod != null) ? handlerMethod.createWithResolvedBean() : null__	};look,up,a,handler,method,for,the,given,request;override,protected,handler,method,get,handler,internal,http,servlet,request,request,throws,exception,string,lookup,path,get,url,path,helper,get,lookup,path,for,request,request,if,logger,is,debug,enabled,logger,debug,looking,up,handler,method,for,path,lookup,path,handler,method,handler,method,lookup,handler,method,lookup,path,request,if,logger,is,debug,enabled,if,handler,method,null,logger,debug,returning,handler,method,handler,method,else,logger,debug,did,not,find,handler,method,for,lookup,path,return,handler,method,null,handler,method,create,with,resolved,bean,null
AbstractHandlerMethodMapping -> @Override 	protected HandlerMethod getHandlerInternal(HttpServletRequest request) throws Exception;1368482696;Look up a handler method for the given request.;@Override_	protected HandlerMethod getHandlerInternal(HttpServletRequest request) throws Exception {_		String lookupPath = getUrlPathHelper().getLookupPathForRequest(request)__		if (logger.isDebugEnabled()) {_			logger.debug("Looking up handler method for path " + lookupPath)__		}__		HandlerMethod handlerMethod = lookupHandlerMethod(lookupPath, request)___		if (logger.isDebugEnabled()) {_			if (handlerMethod != null) {_				logger.debug("Returning handler method [" + handlerMethod + "]")__			}_			else {_				logger.debug("Did not find handler method for [" + lookupPath + "]")__			}_		}__		return (handlerMethod != null) ? handlerMethod.createWithResolvedBean() : null__	};look,up,a,handler,method,for,the,given,request;override,protected,handler,method,get,handler,internal,http,servlet,request,request,throws,exception,string,lookup,path,get,url,path,helper,get,lookup,path,for,request,request,if,logger,is,debug,enabled,logger,debug,looking,up,handler,method,for,path,lookup,path,handler,method,handler,method,lookup,handler,method,lookup,path,request,if,logger,is,debug,enabled,if,handler,method,null,logger,debug,returning,handler,method,handler,method,else,logger,debug,did,not,find,handler,method,for,lookup,path,return,handler,method,null,handler,method,create,with,resolved,bean,null
AbstractHandlerMethodMapping -> @Override 	protected HandlerMethod getHandlerInternal(HttpServletRequest request) throws Exception;1368581529;Look up a handler method for the given request.;@Override_	protected HandlerMethod getHandlerInternal(HttpServletRequest request) throws Exception {_		String lookupPath = getUrlPathHelper().getLookupPathForRequest(request)__		if (logger.isDebugEnabled()) {_			logger.debug("Looking up handler method for path " + lookupPath)__		}__		HandlerMethod handlerMethod = lookupHandlerMethod(lookupPath, request)___		if (logger.isDebugEnabled()) {_			if (handlerMethod != null) {_				logger.debug("Returning handler method [" + handlerMethod + "]")__			}_			else {_				logger.debug("Did not find handler method for [" + lookupPath + "]")__			}_		}__		return (handlerMethod != null) ? handlerMethod.createWithResolvedBean() : null__	};look,up,a,handler,method,for,the,given,request;override,protected,handler,method,get,handler,internal,http,servlet,request,request,throws,exception,string,lookup,path,get,url,path,helper,get,lookup,path,for,request,request,if,logger,is,debug,enabled,logger,debug,looking,up,handler,method,for,path,lookup,path,handler,method,handler,method,lookup,handler,method,lookup,path,request,if,logger,is,debug,enabled,if,handler,method,null,logger,debug,returning,handler,method,handler,method,else,logger,debug,did,not,find,handler,method,for,lookup,path,return,handler,method,null,handler,method,create,with,resolved,bean,null
AbstractHandlerMethodMapping -> @Override 	protected HandlerMethod getHandlerInternal(HttpServletRequest request) throws Exception;1382665849;Look up a handler method for the given request.;@Override_	protected HandlerMethod getHandlerInternal(HttpServletRequest request) throws Exception {_		String lookupPath = getUrlPathHelper().getLookupPathForRequest(request)__		if (logger.isDebugEnabled()) {_			logger.debug("Looking up handler method for path " + lookupPath)__		}__		HandlerMethod handlerMethod = lookupHandlerMethod(lookupPath, request)___		if (logger.isDebugEnabled()) {_			if (handlerMethod != null) {_				logger.debug("Returning handler method [" + handlerMethod + "]")__			}_			else {_				logger.debug("Did not find handler method for [" + lookupPath + "]")__			}_		}__		return (handlerMethod != null) ? handlerMethod.createWithResolvedBean() : null__	};look,up,a,handler,method,for,the,given,request;override,protected,handler,method,get,handler,internal,http,servlet,request,request,throws,exception,string,lookup,path,get,url,path,helper,get,lookup,path,for,request,request,if,logger,is,debug,enabled,logger,debug,looking,up,handler,method,for,path,lookup,path,handler,method,handler,method,lookup,handler,method,lookup,path,request,if,logger,is,debug,enabled,if,handler,method,null,logger,debug,returning,handler,method,handler,method,else,logger,debug,did,not,find,handler,method,for,lookup,path,return,handler,method,null,handler,method,create,with,resolved,bean,null
AbstractHandlerMethodMapping -> @Override 	protected HandlerMethod getHandlerInternal(HttpServletRequest request) throws Exception;1392160296;Look up a handler method for the given request.;@Override_	protected HandlerMethod getHandlerInternal(HttpServletRequest request) throws Exception {_		String lookupPath = getUrlPathHelper().getLookupPathForRequest(request)__		if (logger.isDebugEnabled()) {_			logger.debug("Looking up handler method for path " + lookupPath)__		}_		HandlerMethod handlerMethod = lookupHandlerMethod(lookupPath, request)__		if (logger.isDebugEnabled()) {_			if (handlerMethod != null) {_				logger.debug("Returning handler method [" + handlerMethod + "]")__			}_			else {_				logger.debug("Did not find handler method for [" + lookupPath + "]")__			}_		}_		return (handlerMethod != null ? handlerMethod.createWithResolvedBean() : null)__	};look,up,a,handler,method,for,the,given,request;override,protected,handler,method,get,handler,internal,http,servlet,request,request,throws,exception,string,lookup,path,get,url,path,helper,get,lookup,path,for,request,request,if,logger,is,debug,enabled,logger,debug,looking,up,handler,method,for,path,lookup,path,handler,method,handler,method,lookup,handler,method,lookup,path,request,if,logger,is,debug,enabled,if,handler,method,null,logger,debug,returning,handler,method,handler,method,else,logger,debug,did,not,find,handler,method,for,lookup,path,return,handler,method,null,handler,method,create,with,resolved,bean,null
AbstractHandlerMethodMapping -> @Override 	protected HandlerMethod getHandlerInternal(HttpServletRequest request) throws Exception;1392337816;Look up a handler method for the given request.;@Override_	protected HandlerMethod getHandlerInternal(HttpServletRequest request) throws Exception {_		String lookupPath = getUrlPathHelper().getLookupPathForRequest(request)__		if (logger.isDebugEnabled()) {_			logger.debug("Looking up handler method for path " + lookupPath)__		}_		HandlerMethod handlerMethod = lookupHandlerMethod(lookupPath, request)__		if (logger.isDebugEnabled()) {_			if (handlerMethod != null) {_				logger.debug("Returning handler method [" + handlerMethod + "]")__			}_			else {_				logger.debug("Did not find handler method for [" + lookupPath + "]")__			}_		}_		return (handlerMethod != null ? handlerMethod.createWithResolvedBean() : null)__	};look,up,a,handler,method,for,the,given,request;override,protected,handler,method,get,handler,internal,http,servlet,request,request,throws,exception,string,lookup,path,get,url,path,helper,get,lookup,path,for,request,request,if,logger,is,debug,enabled,logger,debug,looking,up,handler,method,for,path,lookup,path,handler,method,handler,method,lookup,handler,method,lookup,path,request,if,logger,is,debug,enabled,if,handler,method,null,logger,debug,returning,handler,method,handler,method,else,logger,debug,did,not,find,handler,method,for,lookup,path,return,handler,method,null,handler,method,create,with,resolved,bean,null
AbstractHandlerMethodMapping -> @Override 	protected HandlerMethod getHandlerInternal(HttpServletRequest request) throws Exception;1392407320;Look up a handler method for the given request.;@Override_	protected HandlerMethod getHandlerInternal(HttpServletRequest request) throws Exception {_		String lookupPath = getUrlPathHelper().getLookupPathForRequest(request)__		if (logger.isDebugEnabled()) {_			logger.debug("Looking up handler method for path " + lookupPath)__		}_		HandlerMethod handlerMethod = lookupHandlerMethod(lookupPath, request)__		if (logger.isDebugEnabled()) {_			if (handlerMethod != null) {_				logger.debug("Returning handler method [" + handlerMethod + "]")__			}_			else {_				logger.debug("Did not find handler method for [" + lookupPath + "]")__			}_		}_		return (handlerMethod != null ? handlerMethod.createWithResolvedBean() : null)__	};look,up,a,handler,method,for,the,given,request;override,protected,handler,method,get,handler,internal,http,servlet,request,request,throws,exception,string,lookup,path,get,url,path,helper,get,lookup,path,for,request,request,if,logger,is,debug,enabled,logger,debug,looking,up,handler,method,for,path,lookup,path,handler,method,handler,method,lookup,handler,method,lookup,path,request,if,logger,is,debug,enabled,if,handler,method,null,logger,debug,returning,handler,method,handler,method,else,logger,debug,did,not,find,handler,method,for,lookup,path,return,handler,method,null,handler,method,create,with,resolved,bean,null
AbstractHandlerMethodMapping -> @Override 	protected HandlerMethod getHandlerInternal(HttpServletRequest request) throws Exception;1395655323;Look up a handler method for the given request.;@Override_	protected HandlerMethod getHandlerInternal(HttpServletRequest request) throws Exception {_		String lookupPath = getUrlPathHelper().getLookupPathForRequest(request)__		if (logger.isDebugEnabled()) {_			logger.debug("Looking up handler method for path " + lookupPath)__		}_		HandlerMethod handlerMethod = lookupHandlerMethod(lookupPath, request)__		if (logger.isDebugEnabled()) {_			if (handlerMethod != null) {_				logger.debug("Returning handler method [" + handlerMethod + "]")__			}_			else {_				logger.debug("Did not find handler method for [" + lookupPath + "]")__			}_		}_		return (handlerMethod != null ? handlerMethod.createWithResolvedBean() : null)__	};look,up,a,handler,method,for,the,given,request;override,protected,handler,method,get,handler,internal,http,servlet,request,request,throws,exception,string,lookup,path,get,url,path,helper,get,lookup,path,for,request,request,if,logger,is,debug,enabled,logger,debug,looking,up,handler,method,for,path,lookup,path,handler,method,handler,method,lookup,handler,method,lookup,path,request,if,logger,is,debug,enabled,if,handler,method,null,logger,debug,returning,handler,method,handler,method,else,logger,debug,did,not,find,handler,method,for,lookup,path,return,handler,method,null,handler,method,create,with,resolved,bean,null
AbstractHandlerMethodMapping -> @Override 	protected HandlerMethod getHandlerInternal(HttpServletRequest request) throws Exception;1399404473;Look up a handler method for the given request.;@Override_	protected HandlerMethod getHandlerInternal(HttpServletRequest request) throws Exception {_		String lookupPath = getUrlPathHelper().getLookupPathForRequest(request)__		if (logger.isDebugEnabled()) {_			logger.debug("Looking up handler method for path " + lookupPath)__		}_		HandlerMethod handlerMethod = lookupHandlerMethod(lookupPath, request)__		if (logger.isDebugEnabled()) {_			if (handlerMethod != null) {_				logger.debug("Returning handler method [" + handlerMethod + "]")__			}_			else {_				logger.debug("Did not find handler method for [" + lookupPath + "]")__			}_		}_		return (handlerMethod != null ? handlerMethod.createWithResolvedBean() : null)__	};look,up,a,handler,method,for,the,given,request;override,protected,handler,method,get,handler,internal,http,servlet,request,request,throws,exception,string,lookup,path,get,url,path,helper,get,lookup,path,for,request,request,if,logger,is,debug,enabled,logger,debug,looking,up,handler,method,for,path,lookup,path,handler,method,handler,method,lookup,handler,method,lookup,path,request,if,logger,is,debug,enabled,if,handler,method,null,logger,debug,returning,handler,method,handler,method,else,logger,debug,did,not,find,handler,method,for,lookup,path,return,handler,method,null,handler,method,create,with,resolved,bean,null
AbstractHandlerMethodMapping -> @Override 	protected HandlerMethod getHandlerInternal(HttpServletRequest request) throws Exception;1426869344;Look up a handler method for the given request.;@Override_	protected HandlerMethod getHandlerInternal(HttpServletRequest request) throws Exception {_		String lookupPath = getUrlPathHelper().getLookupPathForRequest(request)__		if (logger.isDebugEnabled()) {_			logger.debug("Looking up handler method for path " + lookupPath)__		}_		HandlerMethod handlerMethod = lookupHandlerMethod(lookupPath, request)__		if (logger.isDebugEnabled()) {_			if (handlerMethod != null) {_				logger.debug("Returning handler method [" + handlerMethod + "]")__			}_			else {_				logger.debug("Did not find handler method for [" + lookupPath + "]")__			}_		}_		return (handlerMethod != null ? handlerMethod.createWithResolvedBean() : null)__	};look,up,a,handler,method,for,the,given,request;override,protected,handler,method,get,handler,internal,http,servlet,request,request,throws,exception,string,lookup,path,get,url,path,helper,get,lookup,path,for,request,request,if,logger,is,debug,enabled,logger,debug,looking,up,handler,method,for,path,lookup,path,handler,method,handler,method,lookup,handler,method,lookup,path,request,if,logger,is,debug,enabled,if,handler,method,null,logger,debug,returning,handler,method,handler,method,else,logger,debug,did,not,find,handler,method,for,lookup,path,return,handler,method,null,handler,method,create,with,resolved,bean,null
AbstractHandlerMethodMapping -> @Override 	protected HandlerMethod getHandlerInternal(HttpServletRequest request) throws Exception;1427240641;Look up a handler method for the given request.;@Override_	protected HandlerMethod getHandlerInternal(HttpServletRequest request) throws Exception {_		String lookupPath = getUrlPathHelper().getLookupPathForRequest(request)__		if (logger.isDebugEnabled()) {_			logger.debug("Looking up handler method for path " + lookupPath)__		}_		HandlerMethod handlerMethod = lookupHandlerMethod(lookupPath, request)__		if (logger.isDebugEnabled()) {_			if (handlerMethod != null) {_				logger.debug("Returning handler method [" + handlerMethod + "]")__			}_			else {_				logger.debug("Did not find handler method for [" + lookupPath + "]")__			}_		}_		return (handlerMethod != null ? handlerMethod.createWithResolvedBean() : null)__	};look,up,a,handler,method,for,the,given,request;override,protected,handler,method,get,handler,internal,http,servlet,request,request,throws,exception,string,lookup,path,get,url,path,helper,get,lookup,path,for,request,request,if,logger,is,debug,enabled,logger,debug,looking,up,handler,method,for,path,lookup,path,handler,method,handler,method,lookup,handler,method,lookup,path,request,if,logger,is,debug,enabled,if,handler,method,null,logger,debug,returning,handler,method,handler,method,else,logger,debug,did,not,find,handler,method,for,lookup,path,return,handler,method,null,handler,method,create,with,resolved,bean,null
AbstractHandlerMethodMapping -> @Override 	protected HandlerMethod getHandlerInternal(HttpServletRequest request) throws Exception;1427983931;Look up a handler method for the given request.;@Override_	protected HandlerMethod getHandlerInternal(HttpServletRequest request) throws Exception {_		String lookupPath = getUrlPathHelper().getLookupPathForRequest(request)__		if (logger.isDebugEnabled()) {_			logger.debug("Looking up handler method for path " + lookupPath)__		}_		HandlerMethod handlerMethod = lookupHandlerMethod(lookupPath, request)__		if (logger.isDebugEnabled()) {_			if (handlerMethod != null) {_				logger.debug("Returning handler method [" + handlerMethod + "]")__			}_			else {_				logger.debug("Did not find handler method for [" + lookupPath + "]")__			}_		}_		return (handlerMethod != null ? handlerMethod.createWithResolvedBean() : null)__	};look,up,a,handler,method,for,the,given,request;override,protected,handler,method,get,handler,internal,http,servlet,request,request,throws,exception,string,lookup,path,get,url,path,helper,get,lookup,path,for,request,request,if,logger,is,debug,enabled,logger,debug,looking,up,handler,method,for,path,lookup,path,handler,method,handler,method,lookup,handler,method,lookup,path,request,if,logger,is,debug,enabled,if,handler,method,null,logger,debug,returning,handler,method,handler,method,else,logger,debug,did,not,find,handler,method,for,lookup,path,return,handler,method,null,handler,method,create,with,resolved,bean,null
AbstractHandlerMethodMapping -> @Override 	protected HandlerMethod getHandlerInternal(HttpServletRequest request) throws Exception;1430734105;Look up a handler method for the given request.;@Override_	protected HandlerMethod getHandlerInternal(HttpServletRequest request) throws Exception {_		String lookupPath = getUrlPathHelper().getLookupPathForRequest(request)__		if (logger.isDebugEnabled()) {_			logger.debug("Looking up handler method for path " + lookupPath)__		}_		HandlerMethod handlerMethod = lookupHandlerMethod(lookupPath, request)__		if (logger.isDebugEnabled()) {_			if (handlerMethod != null) {_				logger.debug("Returning handler method [" + handlerMethod + "]")__			}_			else {_				logger.debug("Did not find handler method for [" + lookupPath + "]")__			}_		}_		return (handlerMethod != null ? handlerMethod.createWithResolvedBean() : null)__	};look,up,a,handler,method,for,the,given,request;override,protected,handler,method,get,handler,internal,http,servlet,request,request,throws,exception,string,lookup,path,get,url,path,helper,get,lookup,path,for,request,request,if,logger,is,debug,enabled,logger,debug,looking,up,handler,method,for,path,lookup,path,handler,method,handler,method,lookup,handler,method,lookup,path,request,if,logger,is,debug,enabled,if,handler,method,null,logger,debug,returning,handler,method,handler,method,else,logger,debug,did,not,find,handler,method,for,lookup,path,return,handler,method,null,handler,method,create,with,resolved,bean,null
AbstractHandlerMethodMapping -> @Override 	protected HandlerMethod getHandlerInternal(HttpServletRequest request) throws Exception;1430734105;Look up a handler method for the given request.;@Override_	protected HandlerMethod getHandlerInternal(HttpServletRequest request) throws Exception {_		String lookupPath = getUrlPathHelper().getLookupPathForRequest(request)__		if (logger.isDebugEnabled()) {_			logger.debug("Looking up handler method for path " + lookupPath)__		}_		HandlerMethod handlerMethod = lookupHandlerMethod(lookupPath, request)__		if (logger.isDebugEnabled()) {_			if (handlerMethod != null) {_				logger.debug("Returning handler method [" + handlerMethod + "]")__			}_			else {_				logger.debug("Did not find handler method for [" + lookupPath + "]")__			}_		}_		return (handlerMethod != null ? handlerMethod.createWithResolvedBean() : null)__	};look,up,a,handler,method,for,the,given,request;override,protected,handler,method,get,handler,internal,http,servlet,request,request,throws,exception,string,lookup,path,get,url,path,helper,get,lookup,path,for,request,request,if,logger,is,debug,enabled,logger,debug,looking,up,handler,method,for,path,lookup,path,handler,method,handler,method,lookup,handler,method,lookup,path,request,if,logger,is,debug,enabled,if,handler,method,null,logger,debug,returning,handler,method,handler,method,else,logger,debug,did,not,find,handler,method,for,lookup,path,return,handler,method,null,handler,method,create,with,resolved,bean,null
AbstractHandlerMethodMapping -> @Override 	protected HandlerMethod getHandlerInternal(HttpServletRequest request) throws Exception;1430734106;Look up a handler method for the given request.;@Override_	protected HandlerMethod getHandlerInternal(HttpServletRequest request) throws Exception {_		String lookupPath = getUrlPathHelper().getLookupPathForRequest(request)__		if (logger.isDebugEnabled()) {_			logger.debug("Looking up handler method for path " + lookupPath)__		}_		this.mappingRegistry.acquireReadLock()__		try {_			HandlerMethod handlerMethod = lookupHandlerMethod(lookupPath, request)__			if (logger.isDebugEnabled()) {_				if (handlerMethod != null) {_					logger.debug("Returning handler method [" + handlerMethod + "]")__				}_				else {_					logger.debug("Did not find handler method for [" + lookupPath + "]")__				}_			}_			return (handlerMethod != null ? handlerMethod.createWithResolvedBean() : null)__		}_		finally {_			this.mappingRegistry.releaseReadLock()__		}_	};look,up,a,handler,method,for,the,given,request;override,protected,handler,method,get,handler,internal,http,servlet,request,request,throws,exception,string,lookup,path,get,url,path,helper,get,lookup,path,for,request,request,if,logger,is,debug,enabled,logger,debug,looking,up,handler,method,for,path,lookup,path,this,mapping,registry,acquire,read,lock,try,handler,method,handler,method,lookup,handler,method,lookup,path,request,if,logger,is,debug,enabled,if,handler,method,null,logger,debug,returning,handler,method,handler,method,else,logger,debug,did,not,find,handler,method,for,lookup,path,return,handler,method,null,handler,method,create,with,resolved,bean,null,finally,this,mapping,registry,release,read,lock
AbstractHandlerMethodMapping -> @Override 	protected HandlerMethod getHandlerInternal(HttpServletRequest request) throws Exception;1430774689;Look up a handler method for the given request.;@Override_	protected HandlerMethod getHandlerInternal(HttpServletRequest request) throws Exception {_		String lookupPath = getUrlPathHelper().getLookupPathForRequest(request)__		if (logger.isDebugEnabled()) {_			logger.debug("Looking up handler method for path " + lookupPath)__		}_		this.mappingRegistry.acquireReadLock()__		try {_			HandlerMethod handlerMethod = lookupHandlerMethod(lookupPath, request)__			if (logger.isDebugEnabled()) {_				if (handlerMethod != null) {_					logger.debug("Returning handler method [" + handlerMethod + "]")__				}_				else {_					logger.debug("Did not find handler method for [" + lookupPath + "]")__				}_			}_			return (handlerMethod != null ? handlerMethod.createWithResolvedBean() : null)__		}_		finally {_			this.mappingRegistry.releaseReadLock()__		}_	};look,up,a,handler,method,for,the,given,request;override,protected,handler,method,get,handler,internal,http,servlet,request,request,throws,exception,string,lookup,path,get,url,path,helper,get,lookup,path,for,request,request,if,logger,is,debug,enabled,logger,debug,looking,up,handler,method,for,path,lookup,path,this,mapping,registry,acquire,read,lock,try,handler,method,handler,method,lookup,handler,method,lookup,path,request,if,logger,is,debug,enabled,if,handler,method,null,logger,debug,returning,handler,method,handler,method,else,logger,debug,did,not,find,handler,method,for,lookup,path,return,handler,method,null,handler,method,create,with,resolved,bean,null,finally,this,mapping,registry,release,read,lock
AbstractHandlerMethodMapping -> @Override 	protected HandlerMethod getHandlerInternal(HttpServletRequest request) throws Exception;1430844966;Look up a handler method for the given request.;@Override_	protected HandlerMethod getHandlerInternal(HttpServletRequest request) throws Exception {_		String lookupPath = getUrlPathHelper().getLookupPathForRequest(request)__		if (logger.isDebugEnabled()) {_			logger.debug("Looking up handler method for path " + lookupPath)__		}_		this.mappingRegistry.acquireReadLock()__		try {_			HandlerMethod handlerMethod = lookupHandlerMethod(lookupPath, request)__			if (logger.isDebugEnabled()) {_				if (handlerMethod != null) {_					logger.debug("Returning handler method [" + handlerMethod + "]")__				}_				else {_					logger.debug("Did not find handler method for [" + lookupPath + "]")__				}_			}_			return (handlerMethod != null ? handlerMethod.createWithResolvedBean() : null)__		}_		finally {_			this.mappingRegistry.releaseReadLock()__		}_	};look,up,a,handler,method,for,the,given,request;override,protected,handler,method,get,handler,internal,http,servlet,request,request,throws,exception,string,lookup,path,get,url,path,helper,get,lookup,path,for,request,request,if,logger,is,debug,enabled,logger,debug,looking,up,handler,method,for,path,lookup,path,this,mapping,registry,acquire,read,lock,try,handler,method,handler,method,lookup,handler,method,lookup,path,request,if,logger,is,debug,enabled,if,handler,method,null,logger,debug,returning,handler,method,handler,method,else,logger,debug,did,not,find,handler,method,for,lookup,path,return,handler,method,null,handler,method,create,with,resolved,bean,null,finally,this,mapping,registry,release,read,lock
AbstractHandlerMethodMapping -> @Override 	protected HandlerMethod getHandlerInternal(HttpServletRequest request) throws Exception;1430844967;Look up a handler method for the given request.;@Override_	protected HandlerMethod getHandlerInternal(HttpServletRequest request) throws Exception {_		String lookupPath = getUrlPathHelper().getLookupPathForRequest(request)__		if (logger.isDebugEnabled()) {_			logger.debug("Looking up handler method for path " + lookupPath)__		}_		this.mappingRegistry.acquireReadLock()__		try {_			HandlerMethod handlerMethod = lookupHandlerMethod(lookupPath, request)__			if (logger.isDebugEnabled()) {_				if (handlerMethod != null) {_					logger.debug("Returning handler method [" + handlerMethod + "]")__				}_				else {_					logger.debug("Did not find handler method for [" + lookupPath + "]")__				}_			}_			return (handlerMethod != null ? handlerMethod.createWithResolvedBean() : null)__		}_		finally {_			this.mappingRegistry.releaseReadLock()__		}_	};look,up,a,handler,method,for,the,given,request;override,protected,handler,method,get,handler,internal,http,servlet,request,request,throws,exception,string,lookup,path,get,url,path,helper,get,lookup,path,for,request,request,if,logger,is,debug,enabled,logger,debug,looking,up,handler,method,for,path,lookup,path,this,mapping,registry,acquire,read,lock,try,handler,method,handler,method,lookup,handler,method,lookup,path,request,if,logger,is,debug,enabled,if,handler,method,null,logger,debug,returning,handler,method,handler,method,else,logger,debug,did,not,find,handler,method,for,lookup,path,return,handler,method,null,handler,method,create,with,resolved,bean,null,finally,this,mapping,registry,release,read,lock
AbstractHandlerMethodMapping -> @Override 	protected HandlerMethod getHandlerInternal(HttpServletRequest request) throws Exception;1431730371;Look up a handler method for the given request.;@Override_	protected HandlerMethod getHandlerInternal(HttpServletRequest request) throws Exception {_		String lookupPath = getUrlPathHelper().getLookupPathForRequest(request)__		if (logger.isDebugEnabled()) {_			logger.debug("Looking up handler method for path " + lookupPath)__		}_		this.mappingRegistry.acquireReadLock()__		try {_			HandlerMethod handlerMethod = lookupHandlerMethod(lookupPath, request)__			if (logger.isDebugEnabled()) {_				if (handlerMethod != null) {_					logger.debug("Returning handler method [" + handlerMethod + "]")__				}_				else {_					logger.debug("Did not find handler method for [" + lookupPath + "]")__				}_			}_			return (handlerMethod != null ? handlerMethod.createWithResolvedBean() : null)__		}_		finally {_			this.mappingRegistry.releaseReadLock()__		}_	};look,up,a,handler,method,for,the,given,request;override,protected,handler,method,get,handler,internal,http,servlet,request,request,throws,exception,string,lookup,path,get,url,path,helper,get,lookup,path,for,request,request,if,logger,is,debug,enabled,logger,debug,looking,up,handler,method,for,path,lookup,path,this,mapping,registry,acquire,read,lock,try,handler,method,handler,method,lookup,handler,method,lookup,path,request,if,logger,is,debug,enabled,if,handler,method,null,logger,debug,returning,handler,method,handler,method,else,logger,debug,did,not,find,handler,method,for,lookup,path,return,handler,method,null,handler,method,create,with,resolved,bean,null,finally,this,mapping,registry,release,read,lock
AbstractHandlerMethodMapping -> @Override 	protected HandlerMethod getHandlerInternal(HttpServletRequest request) throws Exception;1439294371;Look up a handler method for the given request.;@Override_	protected HandlerMethod getHandlerInternal(HttpServletRequest request) throws Exception {_		String lookupPath = getUrlPathHelper().getLookupPathForRequest(request)__		if (logger.isDebugEnabled()) {_			logger.debug("Looking up handler method for path " + lookupPath)__		}_		this.mappingRegistry.acquireReadLock()__		try {_			HandlerMethod handlerMethod = lookupHandlerMethod(lookupPath, request)__			if (logger.isDebugEnabled()) {_				if (handlerMethod != null) {_					logger.debug("Returning handler method [" + handlerMethod + "]")__				}_				else {_					logger.debug("Did not find handler method for [" + lookupPath + "]")__				}_			}_			return (handlerMethod != null ? handlerMethod.createWithResolvedBean() : null)__		}_		finally {_			this.mappingRegistry.releaseReadLock()__		}_	};look,up,a,handler,method,for,the,given,request;override,protected,handler,method,get,handler,internal,http,servlet,request,request,throws,exception,string,lookup,path,get,url,path,helper,get,lookup,path,for,request,request,if,logger,is,debug,enabled,logger,debug,looking,up,handler,method,for,path,lookup,path,this,mapping,registry,acquire,read,lock,try,handler,method,handler,method,lookup,handler,method,lookup,path,request,if,logger,is,debug,enabled,if,handler,method,null,logger,debug,returning,handler,method,handler,method,else,logger,debug,did,not,find,handler,method,for,lookup,path,return,handler,method,null,handler,method,create,with,resolved,bean,null,finally,this,mapping,registry,release,read,lock
AbstractHandlerMethodMapping -> @Override 	protected HandlerMethod getHandlerInternal(HttpServletRequest request) throws Exception;1447077465;Look up a handler method for the given request.;@Override_	protected HandlerMethod getHandlerInternal(HttpServletRequest request) throws Exception {_		String lookupPath = getUrlPathHelper().getLookupPathForRequest(request)__		if (logger.isDebugEnabled()) {_			logger.debug("Looking up handler method for path " + lookupPath)__		}_		this.mappingRegistry.acquireReadLock()__		try {_			HandlerMethod handlerMethod = lookupHandlerMethod(lookupPath, request)__			if (logger.isDebugEnabled()) {_				if (handlerMethod != null) {_					logger.debug("Returning handler method [" + handlerMethod + "]")__				}_				else {_					logger.debug("Did not find handler method for [" + lookupPath + "]")__				}_			}_			return (handlerMethod != null ? handlerMethod.createWithResolvedBean() : null)__		}_		finally {_			this.mappingRegistry.releaseReadLock()__		}_	};look,up,a,handler,method,for,the,given,request;override,protected,handler,method,get,handler,internal,http,servlet,request,request,throws,exception,string,lookup,path,get,url,path,helper,get,lookup,path,for,request,request,if,logger,is,debug,enabled,logger,debug,looking,up,handler,method,for,path,lookup,path,this,mapping,registry,acquire,read,lock,try,handler,method,handler,method,lookup,handler,method,lookup,path,request,if,logger,is,debug,enabled,if,handler,method,null,logger,debug,returning,handler,method,handler,method,else,logger,debug,did,not,find,handler,method,for,lookup,path,return,handler,method,null,handler,method,create,with,resolved,bean,null,finally,this,mapping,registry,release,read,lock
AbstractHandlerMethodMapping -> @Override 	protected HandlerMethod getHandlerInternal(HttpServletRequest request) throws Exception;1448483163;Look up a handler method for the given request.;@Override_	protected HandlerMethod getHandlerInternal(HttpServletRequest request) throws Exception {_		String lookupPath = getUrlPathHelper().getLookupPathForRequest(request)__		if (logger.isDebugEnabled()) {_			logger.debug("Looking up handler method for path " + lookupPath)__		}_		this.mappingRegistry.acquireReadLock()__		try {_			HandlerMethod handlerMethod = lookupHandlerMethod(lookupPath, request)__			if (logger.isDebugEnabled()) {_				if (handlerMethod != null) {_					logger.debug("Returning handler method [" + handlerMethod + "]")__				}_				else {_					logger.debug("Did not find handler method for [" + lookupPath + "]")__				}_			}_			return (handlerMethod != null ? handlerMethod.createWithResolvedBean() : null)__		}_		finally {_			this.mappingRegistry.releaseReadLock()__		}_	};look,up,a,handler,method,for,the,given,request;override,protected,handler,method,get,handler,internal,http,servlet,request,request,throws,exception,string,lookup,path,get,url,path,helper,get,lookup,path,for,request,request,if,logger,is,debug,enabled,logger,debug,looking,up,handler,method,for,path,lookup,path,this,mapping,registry,acquire,read,lock,try,handler,method,handler,method,lookup,handler,method,lookup,path,request,if,logger,is,debug,enabled,if,handler,method,null,logger,debug,returning,handler,method,handler,method,else,logger,debug,did,not,find,handler,method,for,lookup,path,return,handler,method,null,handler,method,create,with,resolved,bean,null,finally,this,mapping,registry,release,read,lock
AbstractHandlerMethodMapping -> @Override 	protected HandlerMethod getHandlerInternal(HttpServletRequest request) throws Exception;1452685925;Look up a handler method for the given request.;@Override_	protected HandlerMethod getHandlerInternal(HttpServletRequest request) throws Exception {_		String lookupPath = getUrlPathHelper().getLookupPathForRequest(request)__		if (logger.isDebugEnabled()) {_			logger.debug("Looking up handler method for path " + lookupPath)__		}_		this.mappingRegistry.acquireReadLock()__		try {_			HandlerMethod handlerMethod = lookupHandlerMethod(lookupPath, request)__			if (logger.isDebugEnabled()) {_				if (handlerMethod != null) {_					logger.debug("Returning handler method [" + handlerMethod + "]")__				}_				else {_					logger.debug("Did not find handler method for [" + lookupPath + "]")__				}_			}_			return (handlerMethod != null ? handlerMethod.createWithResolvedBean() : null)__		}_		finally {_			this.mappingRegistry.releaseReadLock()__		}_	};look,up,a,handler,method,for,the,given,request;override,protected,handler,method,get,handler,internal,http,servlet,request,request,throws,exception,string,lookup,path,get,url,path,helper,get,lookup,path,for,request,request,if,logger,is,debug,enabled,logger,debug,looking,up,handler,method,for,path,lookup,path,this,mapping,registry,acquire,read,lock,try,handler,method,handler,method,lookup,handler,method,lookup,path,request,if,logger,is,debug,enabled,if,handler,method,null,logger,debug,returning,handler,method,handler,method,else,logger,debug,did,not,find,handler,method,for,lookup,path,return,handler,method,null,handler,method,create,with,resolved,bean,null,finally,this,mapping,registry,release,read,lock
AbstractHandlerMethodMapping -> @Override 	protected HandlerMethod getHandlerInternal(HttpServletRequest request) throws Exception;1452873718;Look up a handler method for the given request.;@Override_	protected HandlerMethod getHandlerInternal(HttpServletRequest request) throws Exception {_		String lookupPath = getUrlPathHelper().getLookupPathForRequest(request)__		if (logger.isDebugEnabled()) {_			logger.debug("Looking up handler method for path " + lookupPath)__		}_		this.mappingRegistry.acquireReadLock()__		try {_			HandlerMethod handlerMethod = lookupHandlerMethod(lookupPath, request)__			if (logger.isDebugEnabled()) {_				if (handlerMethod != null) {_					logger.debug("Returning handler method [" + handlerMethod + "]")__				}_				else {_					logger.debug("Did not find handler method for [" + lookupPath + "]")__				}_			}_			return (handlerMethod != null ? handlerMethod.createWithResolvedBean() : null)__		}_		finally {_			this.mappingRegistry.releaseReadLock()__		}_	};look,up,a,handler,method,for,the,given,request;override,protected,handler,method,get,handler,internal,http,servlet,request,request,throws,exception,string,lookup,path,get,url,path,helper,get,lookup,path,for,request,request,if,logger,is,debug,enabled,logger,debug,looking,up,handler,method,for,path,lookup,path,this,mapping,registry,acquire,read,lock,try,handler,method,handler,method,lookup,handler,method,lookup,path,request,if,logger,is,debug,enabled,if,handler,method,null,logger,debug,returning,handler,method,handler,method,else,logger,debug,did,not,find,handler,method,for,lookup,path,return,handler,method,null,handler,method,create,with,resolved,bean,null,finally,this,mapping,registry,release,read,lock
AbstractHandlerMethodMapping -> @Override 	protected HandlerMethod getHandlerInternal(HttpServletRequest request) throws Exception;1453843788;Look up a handler method for the given request.;@Override_	protected HandlerMethod getHandlerInternal(HttpServletRequest request) throws Exception {_		String lookupPath = getUrlPathHelper().getLookupPathForRequest(request)__		if (logger.isDebugEnabled()) {_			logger.debug("Looking up handler method for path " + lookupPath)__		}_		this.mappingRegistry.acquireReadLock()__		try {_			HandlerMethod handlerMethod = lookupHandlerMethod(lookupPath, request)__			if (logger.isDebugEnabled()) {_				if (handlerMethod != null) {_					logger.debug("Returning handler method [" + handlerMethod + "]")__				}_				else {_					logger.debug("Did not find handler method for [" + lookupPath + "]")__				}_			}_			return (handlerMethod != null ? handlerMethod.createWithResolvedBean() : null)__		}_		finally {_			this.mappingRegistry.releaseReadLock()__		}_	};look,up,a,handler,method,for,the,given,request;override,protected,handler,method,get,handler,internal,http,servlet,request,request,throws,exception,string,lookup,path,get,url,path,helper,get,lookup,path,for,request,request,if,logger,is,debug,enabled,logger,debug,looking,up,handler,method,for,path,lookup,path,this,mapping,registry,acquire,read,lock,try,handler,method,handler,method,lookup,handler,method,lookup,path,request,if,logger,is,debug,enabled,if,handler,method,null,logger,debug,returning,handler,method,handler,method,else,logger,debug,did,not,find,handler,method,for,lookup,path,return,handler,method,null,handler,method,create,with,resolved,bean,null,finally,this,mapping,registry,release,read,lock
AbstractHandlerMethodMapping -> @Override 	protected HandlerMethod getHandlerInternal(HttpServletRequest request) throws Exception;1467730834;Look up a handler method for the given request.;@Override_	protected HandlerMethod getHandlerInternal(HttpServletRequest request) throws Exception {_		String lookupPath = getUrlPathHelper().getLookupPathForRequest(request)__		if (logger.isDebugEnabled()) {_			logger.debug("Looking up handler method for path " + lookupPath)__		}_		this.mappingRegistry.acquireReadLock()__		try {_			HandlerMethod handlerMethod = lookupHandlerMethod(lookupPath, request)__			if (logger.isDebugEnabled()) {_				if (handlerMethod != null) {_					logger.debug("Returning handler method [" + handlerMethod + "]")__				}_				else {_					logger.debug("Did not find handler method for [" + lookupPath + "]")__				}_			}_			return (handlerMethod != null ? handlerMethod.createWithResolvedBean() : null)__		}_		finally {_			this.mappingRegistry.releaseReadLock()__		}_	};look,up,a,handler,method,for,the,given,request;override,protected,handler,method,get,handler,internal,http,servlet,request,request,throws,exception,string,lookup,path,get,url,path,helper,get,lookup,path,for,request,request,if,logger,is,debug,enabled,logger,debug,looking,up,handler,method,for,path,lookup,path,this,mapping,registry,acquire,read,lock,try,handler,method,handler,method,lookup,handler,method,lookup,path,request,if,logger,is,debug,enabled,if,handler,method,null,logger,debug,returning,handler,method,handler,method,else,logger,debug,did,not,find,handler,method,for,lookup,path,return,handler,method,null,handler,method,create,with,resolved,bean,null,finally,this,mapping,registry,release,read,lock
AbstractHandlerMethodMapping -> @Override 	protected HandlerMethod getHandlerInternal(HttpServletRequest request) throws Exception;1468417354;Look up a handler method for the given request.;@Override_	protected HandlerMethod getHandlerInternal(HttpServletRequest request) throws Exception {_		String lookupPath = getUrlPathHelper().getLookupPathForRequest(request)__		if (logger.isDebugEnabled()) {_			logger.debug("Looking up handler method for path " + lookupPath)__		}_		this.mappingRegistry.acquireReadLock()__		try {_			HandlerMethod handlerMethod = lookupHandlerMethod(lookupPath, request)__			if (logger.isDebugEnabled()) {_				if (handlerMethod != null) {_					logger.debug("Returning handler method [" + handlerMethod + "]")__				}_				else {_					logger.debug("Did not find handler method for [" + lookupPath + "]")__				}_			}_			return (handlerMethod != null ? handlerMethod.createWithResolvedBean() : null)__		}_		finally {_			this.mappingRegistry.releaseReadLock()__		}_	};look,up,a,handler,method,for,the,given,request;override,protected,handler,method,get,handler,internal,http,servlet,request,request,throws,exception,string,lookup,path,get,url,path,helper,get,lookup,path,for,request,request,if,logger,is,debug,enabled,logger,debug,looking,up,handler,method,for,path,lookup,path,this,mapping,registry,acquire,read,lock,try,handler,method,handler,method,lookup,handler,method,lookup,path,request,if,logger,is,debug,enabled,if,handler,method,null,logger,debug,returning,handler,method,handler,method,else,logger,debug,did,not,find,handler,method,for,lookup,path,return,handler,method,null,handler,method,create,with,resolved,bean,null,finally,this,mapping,registry,release,read,lock
AbstractHandlerMethodMapping -> @Override 	protected HandlerMethod getHandlerInternal(HttpServletRequest request) throws Exception;1468596479;Look up a handler method for the given request.;@Override_	protected HandlerMethod getHandlerInternal(HttpServletRequest request) throws Exception {_		String lookupPath = getUrlPathHelper().getLookupPathForRequest(request)__		if (logger.isDebugEnabled()) {_			logger.debug("Looking up handler method for path " + lookupPath)__		}_		this.mappingRegistry.acquireReadLock()__		try {_			HandlerMethod handlerMethod = lookupHandlerMethod(lookupPath, request)__			if (logger.isDebugEnabled()) {_				if (handlerMethod != null) {_					logger.debug("Returning handler method [" + handlerMethod + "]")__				}_				else {_					logger.debug("Did not find handler method for [" + lookupPath + "]")__				}_			}_			return (handlerMethod != null ? handlerMethod.createWithResolvedBean() : null)__		}_		finally {_			this.mappingRegistry.releaseReadLock()__		}_	};look,up,a,handler,method,for,the,given,request;override,protected,handler,method,get,handler,internal,http,servlet,request,request,throws,exception,string,lookup,path,get,url,path,helper,get,lookup,path,for,request,request,if,logger,is,debug,enabled,logger,debug,looking,up,handler,method,for,path,lookup,path,this,mapping,registry,acquire,read,lock,try,handler,method,handler,method,lookup,handler,method,lookup,path,request,if,logger,is,debug,enabled,if,handler,method,null,logger,debug,returning,handler,method,handler,method,else,logger,debug,did,not,find,handler,method,for,lookup,path,return,handler,method,null,handler,method,create,with,resolved,bean,null,finally,this,mapping,registry,release,read,lock
AbstractHandlerMethodMapping -> @Override 	protected HandlerMethod getHandlerInternal(HttpServletRequest request) throws Exception;1474905889;Look up a handler method for the given request.;@Override_	protected HandlerMethod getHandlerInternal(HttpServletRequest request) throws Exception {_		String lookupPath = getUrlPathHelper().getLookupPathForRequest(request)__		if (logger.isDebugEnabled()) {_			logger.debug("Looking up handler method for path " + lookupPath)__		}_		this.mappingRegistry.acquireReadLock()__		try {_			HandlerMethod handlerMethod = lookupHandlerMethod(lookupPath, request)__			if (logger.isDebugEnabled()) {_				if (handlerMethod != null) {_					logger.debug("Returning handler method [" + handlerMethod + "]")__				}_				else {_					logger.debug("Did not find handler method for [" + lookupPath + "]")__				}_			}_			return (handlerMethod != null ? handlerMethod.createWithResolvedBean() : null)__		}_		finally {_			this.mappingRegistry.releaseReadLock()__		}_	};look,up,a,handler,method,for,the,given,request;override,protected,handler,method,get,handler,internal,http,servlet,request,request,throws,exception,string,lookup,path,get,url,path,helper,get,lookup,path,for,request,request,if,logger,is,debug,enabled,logger,debug,looking,up,handler,method,for,path,lookup,path,this,mapping,registry,acquire,read,lock,try,handler,method,handler,method,lookup,handler,method,lookup,path,request,if,logger,is,debug,enabled,if,handler,method,null,logger,debug,returning,handler,method,handler,method,else,logger,debug,did,not,find,handler,method,for,lookup,path,return,handler,method,null,handler,method,create,with,resolved,bean,null,finally,this,mapping,registry,release,read,lock
AbstractHandlerMethodMapping -> @Override 	protected HandlerMethod getHandlerInternal(HttpServletRequest request) throws Exception;1481813056;Look up a handler method for the given request.;@Override_	protected HandlerMethod getHandlerInternal(HttpServletRequest request) throws Exception {_		String lookupPath = getUrlPathHelper().getLookupPathForRequest(request)__		if (logger.isDebugEnabled()) {_			logger.debug("Looking up handler method for path " + lookupPath)__		}_		this.mappingRegistry.acquireReadLock()__		try {_			HandlerMethod handlerMethod = lookupHandlerMethod(lookupPath, request)__			if (logger.isDebugEnabled()) {_				if (handlerMethod != null) {_					logger.debug("Returning handler method [" + handlerMethod + "]")__				}_				else {_					logger.debug("Did not find handler method for [" + lookupPath + "]")__				}_			}_			return (handlerMethod != null ? handlerMethod.createWithResolvedBean() : null)__		}_		finally {_			this.mappingRegistry.releaseReadLock()__		}_	};look,up,a,handler,method,for,the,given,request;override,protected,handler,method,get,handler,internal,http,servlet,request,request,throws,exception,string,lookup,path,get,url,path,helper,get,lookup,path,for,request,request,if,logger,is,debug,enabled,logger,debug,looking,up,handler,method,for,path,lookup,path,this,mapping,registry,acquire,read,lock,try,handler,method,handler,method,lookup,handler,method,lookup,path,request,if,logger,is,debug,enabled,if,handler,method,null,logger,debug,returning,handler,method,handler,method,else,logger,debug,did,not,find,handler,method,for,lookup,path,return,handler,method,null,handler,method,create,with,resolved,bean,null,finally,this,mapping,registry,release,read,lock
AbstractHandlerMethodMapping -> @Override 	protected HandlerMethod getHandlerInternal(HttpServletRequest request) throws Exception;1485810955;Look up a handler method for the given request.;@Override_	protected HandlerMethod getHandlerInternal(HttpServletRequest request) throws Exception {_		String lookupPath = getUrlPathHelper().getLookupPathForRequest(request)__		if (logger.isDebugEnabled()) {_			logger.debug("Looking up handler method for path " + lookupPath)__		}_		this.mappingRegistry.acquireReadLock()__		try {_			HandlerMethod handlerMethod = lookupHandlerMethod(lookupPath, request)__			if (logger.isDebugEnabled()) {_				if (handlerMethod != null) {_					logger.debug("Returning handler method [" + handlerMethod + "]")__				}_				else {_					logger.debug("Did not find handler method for [" + lookupPath + "]")__				}_			}_			return (handlerMethod != null ? handlerMethod.createWithResolvedBean() : null)__		}_		finally {_			this.mappingRegistry.releaseReadLock()__		}_	};look,up,a,handler,method,for,the,given,request;override,protected,handler,method,get,handler,internal,http,servlet,request,request,throws,exception,string,lookup,path,get,url,path,helper,get,lookup,path,for,request,request,if,logger,is,debug,enabled,logger,debug,looking,up,handler,method,for,path,lookup,path,this,mapping,registry,acquire,read,lock,try,handler,method,handler,method,lookup,handler,method,lookup,path,request,if,logger,is,debug,enabled,if,handler,method,null,logger,debug,returning,handler,method,handler,method,else,logger,debug,did,not,find,handler,method,for,lookup,path,return,handler,method,null,handler,method,create,with,resolved,bean,null,finally,this,mapping,registry,release,read,lock
AbstractHandlerMethodMapping -> @Override 	protected HandlerMethod getHandlerInternal(HttpServletRequest request) throws Exception;1495868221;Look up a handler method for the given request.;@Override_	protected HandlerMethod getHandlerInternal(HttpServletRequest request) throws Exception {_		String lookupPath = getUrlPathHelper().getLookupPathForRequest(request)__		if (logger.isDebugEnabled()) {_			logger.debug("Looking up handler method for path " + lookupPath)__		}_		this.mappingRegistry.acquireReadLock()__		try {_			HandlerMethod handlerMethod = lookupHandlerMethod(lookupPath, request)__			if (logger.isDebugEnabled()) {_				if (handlerMethod != null) {_					logger.debug("Returning handler method [" + handlerMethod + "]")__				}_				else {_					logger.debug("Did not find handler method for [" + lookupPath + "]")__				}_			}_			return (handlerMethod != null ? handlerMethod.createWithResolvedBean() : null)__		}_		finally {_			this.mappingRegistry.releaseReadLock()__		}_	};look,up,a,handler,method,for,the,given,request;override,protected,handler,method,get,handler,internal,http,servlet,request,request,throws,exception,string,lookup,path,get,url,path,helper,get,lookup,path,for,request,request,if,logger,is,debug,enabled,logger,debug,looking,up,handler,method,for,path,lookup,path,this,mapping,registry,acquire,read,lock,try,handler,method,handler,method,lookup,handler,method,lookup,path,request,if,logger,is,debug,enabled,if,handler,method,null,logger,debug,returning,handler,method,handler,method,else,logger,debug,did,not,find,handler,method,for,lookup,path,return,handler,method,null,handler,method,create,with,resolved,bean,null,finally,this,mapping,registry,release,read,lock
AbstractHandlerMethodMapping -> @Override 	protected HandlerMethod getHandlerInternal(HttpServletRequest request) throws Exception;1496837955;Look up a handler method for the given request.;@Override_	protected HandlerMethod getHandlerInternal(HttpServletRequest request) throws Exception {_		String lookupPath = getUrlPathHelper().getLookupPathForRequest(request)__		if (logger.isDebugEnabled()) {_			logger.debug("Looking up handler method for path " + lookupPath)__		}_		this.mappingRegistry.acquireReadLock()__		try {_			HandlerMethod handlerMethod = lookupHandlerMethod(lookupPath, request)__			if (logger.isDebugEnabled()) {_				if (handlerMethod != null) {_					logger.debug("Returning handler method [" + handlerMethod + "]")__				}_				else {_					logger.debug("Did not find handler method for [" + lookupPath + "]")__				}_			}_			return (handlerMethod != null ? handlerMethod.createWithResolvedBean() : null)__		}_		finally {_			this.mappingRegistry.releaseReadLock()__		}_	};look,up,a,handler,method,for,the,given,request;override,protected,handler,method,get,handler,internal,http,servlet,request,request,throws,exception,string,lookup,path,get,url,path,helper,get,lookup,path,for,request,request,if,logger,is,debug,enabled,logger,debug,looking,up,handler,method,for,path,lookup,path,this,mapping,registry,acquire,read,lock,try,handler,method,handler,method,lookup,handler,method,lookup,path,request,if,logger,is,debug,enabled,if,handler,method,null,logger,debug,returning,handler,method,handler,method,else,logger,debug,did,not,find,handler,method,for,lookup,path,return,handler,method,null,handler,method,create,with,resolved,bean,null,finally,this,mapping,registry,release,read,lock
AbstractHandlerMethodMapping -> @Override 	protected HandlerMethod getHandlerInternal(HttpServletRequest request) throws Exception;1497251962;Look up a handler method for the given request.;@Override_	protected HandlerMethod getHandlerInternal(HttpServletRequest request) throws Exception {_		String lookupPath = getUrlPathHelper().getLookupPathForRequest(request)__		if (logger.isDebugEnabled()) {_			logger.debug("Looking up handler method for path " + lookupPath)__		}_		this.mappingRegistry.acquireReadLock()__		try {_			HandlerMethod handlerMethod = lookupHandlerMethod(lookupPath, request)__			if (logger.isDebugEnabled()) {_				if (handlerMethod != null) {_					logger.debug("Returning handler method [" + handlerMethod + "]")__				}_				else {_					logger.debug("Did not find handler method for [" + lookupPath + "]")__				}_			}_			return (handlerMethod != null ? handlerMethod.createWithResolvedBean() : null)__		}_		finally {_			this.mappingRegistry.releaseReadLock()__		}_	};look,up,a,handler,method,for,the,given,request;override,protected,handler,method,get,handler,internal,http,servlet,request,request,throws,exception,string,lookup,path,get,url,path,helper,get,lookup,path,for,request,request,if,logger,is,debug,enabled,logger,debug,looking,up,handler,method,for,path,lookup,path,this,mapping,registry,acquire,read,lock,try,handler,method,handler,method,lookup,handler,method,lookup,path,request,if,logger,is,debug,enabled,if,handler,method,null,logger,debug,returning,handler,method,handler,method,else,logger,debug,did,not,find,handler,method,for,lookup,path,return,handler,method,null,handler,method,create,with,resolved,bean,null,finally,this,mapping,registry,release,read,lock
AbstractHandlerMethodMapping -> @Override 	protected HandlerMethod getHandlerInternal(HttpServletRequest request) throws Exception;1498780456;Look up a handler method for the given request.;@Override_	protected HandlerMethod getHandlerInternal(HttpServletRequest request) throws Exception {_		String lookupPath = getUrlPathHelper().getLookupPathForRequest(request)__		if (logger.isDebugEnabled()) {_			logger.debug("Looking up handler method for path " + lookupPath)__		}_		this.mappingRegistry.acquireReadLock()__		try {_			HandlerMethod handlerMethod = lookupHandlerMethod(lookupPath, request)__			if (logger.isDebugEnabled()) {_				if (handlerMethod != null) {_					logger.debug("Returning handler method [" + handlerMethod + "]")__				}_				else {_					logger.debug("Did not find handler method for [" + lookupPath + "]")__				}_			}_			return (handlerMethod != null ? handlerMethod.createWithResolvedBean() : null)__		}_		finally {_			this.mappingRegistry.releaseReadLock()__		}_	};look,up,a,handler,method,for,the,given,request;override,protected,handler,method,get,handler,internal,http,servlet,request,request,throws,exception,string,lookup,path,get,url,path,helper,get,lookup,path,for,request,request,if,logger,is,debug,enabled,logger,debug,looking,up,handler,method,for,path,lookup,path,this,mapping,registry,acquire,read,lock,try,handler,method,handler,method,lookup,handler,method,lookup,path,request,if,logger,is,debug,enabled,if,handler,method,null,logger,debug,returning,handler,method,handler,method,else,logger,debug,did,not,find,handler,method,for,lookup,path,return,handler,method,null,handler,method,create,with,resolved,bean,null,finally,this,mapping,registry,release,read,lock
AbstractHandlerMethodMapping -> @Override 	protected HandlerMethod getHandlerInternal(HttpServletRequest request) throws Exception;1518772998;Look up a handler method for the given request.;@Override_	protected HandlerMethod getHandlerInternal(HttpServletRequest request) throws Exception {_		String lookupPath = getUrlPathHelper().getLookupPathForRequest(request)__		if (logger.isDebugEnabled()) {_			logger.debug("Looking up handler method for path " + lookupPath)__		}_		this.mappingRegistry.acquireReadLock()__		try {_			HandlerMethod handlerMethod = lookupHandlerMethod(lookupPath, request)__			if (logger.isDebugEnabled()) {_				if (handlerMethod != null) {_					logger.debug("Returning handler method [" + handlerMethod + "]")__				}_				else {_					logger.debug("Did not find handler method for [" + lookupPath + "]")__				}_			}_			return (handlerMethod != null ? handlerMethod.createWithResolvedBean() : null)__		}_		finally {_			this.mappingRegistry.releaseReadLock()__		}_	};look,up,a,handler,method,for,the,given,request;override,protected,handler,method,get,handler,internal,http,servlet,request,request,throws,exception,string,lookup,path,get,url,path,helper,get,lookup,path,for,request,request,if,logger,is,debug,enabled,logger,debug,looking,up,handler,method,for,path,lookup,path,this,mapping,registry,acquire,read,lock,try,handler,method,handler,method,lookup,handler,method,lookup,path,request,if,logger,is,debug,enabled,if,handler,method,null,logger,debug,returning,handler,method,handler,method,else,logger,debug,did,not,find,handler,method,for,lookup,path,return,handler,method,null,handler,method,create,with,resolved,bean,null,finally,this,mapping,registry,release,read,lock
AbstractHandlerMethodMapping -> @Override 	protected HandlerMethod getHandlerInternal(HttpServletRequest request) throws Exception;1522103912;Look up a handler method for the given request.;@Override_	protected HandlerMethod getHandlerInternal(HttpServletRequest request) throws Exception {_		String lookupPath = getUrlPathHelper().getLookupPathForRequest(request)__		if (logger.isDebugEnabled()) {_			logger.debug("Looking up handler method for path " + lookupPath)__		}_		this.mappingRegistry.acquireReadLock()__		try {_			HandlerMethod handlerMethod = lookupHandlerMethod(lookupPath, request)__			if (logger.isDebugEnabled()) {_				if (handlerMethod != null) {_					logger.debug("Returning handler method [" + handlerMethod + "]")__				}_				else {_					logger.debug("Did not find handler method for [" + lookupPath + "]")__				}_			}_			return (handlerMethod != null ? handlerMethod.createWithResolvedBean() : null)__		}_		finally {_			this.mappingRegistry.releaseReadLock()__		}_	};look,up,a,handler,method,for,the,given,request;override,protected,handler,method,get,handler,internal,http,servlet,request,request,throws,exception,string,lookup,path,get,url,path,helper,get,lookup,path,for,request,request,if,logger,is,debug,enabled,logger,debug,looking,up,handler,method,for,path,lookup,path,this,mapping,registry,acquire,read,lock,try,handler,method,handler,method,lookup,handler,method,lookup,path,request,if,logger,is,debug,enabled,if,handler,method,null,logger,debug,returning,handler,method,handler,method,else,logger,debug,did,not,find,handler,method,for,lookup,path,return,handler,method,null,handler,method,create,with,resolved,bean,null,finally,this,mapping,registry,release,read,lock
AbstractHandlerMethodMapping -> @Override 	protected HandlerMethod getHandlerInternal(HttpServletRequest request) throws Exception;1522843494;Look up a handler method for the given request.;@Override_	protected HandlerMethod getHandlerInternal(HttpServletRequest request) throws Exception {_		String lookupPath = getUrlPathHelper().getLookupPathForRequest(request)__		if (logger.isDebugEnabled()) {_			logger.debug("Looking up handler method for path " + lookupPath)__		}_		this.mappingRegistry.acquireReadLock()__		try {_			HandlerMethod handlerMethod = lookupHandlerMethod(lookupPath, request)__			if (logger.isDebugEnabled()) {_				if (handlerMethod != null) {_					logger.debug("Returning handler method [" + handlerMethod + "]")__				}_				else {_					logger.debug("Did not find handler method for [" + lookupPath + "]")__				}_			}_			return (handlerMethod != null ? handlerMethod.createWithResolvedBean() : null)__		}_		finally {_			this.mappingRegistry.releaseReadLock()__		}_	};look,up,a,handler,method,for,the,given,request;override,protected,handler,method,get,handler,internal,http,servlet,request,request,throws,exception,string,lookup,path,get,url,path,helper,get,lookup,path,for,request,request,if,logger,is,debug,enabled,logger,debug,looking,up,handler,method,for,path,lookup,path,this,mapping,registry,acquire,read,lock,try,handler,method,handler,method,lookup,handler,method,lookup,path,request,if,logger,is,debug,enabled,if,handler,method,null,logger,debug,returning,handler,method,handler,method,else,logger,debug,did,not,find,handler,method,for,lookup,path,return,handler,method,null,handler,method,create,with,resolved,bean,null,finally,this,mapping,registry,release,read,lock
AbstractHandlerMethodMapping -> @Override 	protected HandlerMethod getHandlerInternal(HttpServletRequest request) throws Exception;1529361191;Look up a handler method for the given request.;@Override_	protected HandlerMethod getHandlerInternal(HttpServletRequest request) throws Exception {_		String lookupPath = getUrlPathHelper().getLookupPathForRequest(request)__		this.mappingRegistry.acquireReadLock()__		try {_			HandlerMethod handlerMethod = lookupHandlerMethod(lookupPath, request)__			return (handlerMethod != null ? handlerMethod.createWithResolvedBean() : null)__		}_		finally {_			this.mappingRegistry.releaseReadLock()__		}_	};look,up,a,handler,method,for,the,given,request;override,protected,handler,method,get,handler,internal,http,servlet,request,request,throws,exception,string,lookup,path,get,url,path,helper,get,lookup,path,for,request,request,this,mapping,registry,acquire,read,lock,try,handler,method,handler,method,lookup,handler,method,lookup,path,request,return,handler,method,null,handler,method,create,with,resolved,bean,null,finally,this,mapping,registry,release,read,lock
AbstractHandlerMethodMapping -> @Override 	protected HandlerMethod getHandlerInternal(HttpServletRequest request) throws Exception;1529721864;Look up a handler method for the given request.;@Override_	protected HandlerMethod getHandlerInternal(HttpServletRequest request) throws Exception {_		String lookupPath = getUrlPathHelper().getLookupPathForRequest(request)__		this.mappingRegistry.acquireReadLock()__		try {_			HandlerMethod handlerMethod = lookupHandlerMethod(lookupPath, request)__			return (handlerMethod != null ? handlerMethod.createWithResolvedBean() : null)__		}_		finally {_			this.mappingRegistry.releaseReadLock()__		}_	};look,up,a,handler,method,for,the,given,request;override,protected,handler,method,get,handler,internal,http,servlet,request,request,throws,exception,string,lookup,path,get,url,path,helper,get,lookup,path,for,request,request,this,mapping,registry,acquire,read,lock,try,handler,method,handler,method,lookup,handler,method,lookup,path,request,return,handler,method,null,handler,method,create,with,resolved,bean,null,finally,this,mapping,registry,release,read,lock
AbstractHandlerMethodMapping -> @Override 	protected HandlerMethod getHandlerInternal(HttpServletRequest request) throws Exception;1530174524;Look up a handler method for the given request.;@Override_	protected HandlerMethod getHandlerInternal(HttpServletRequest request) throws Exception {_		String lookupPath = getUrlPathHelper().getLookupPathForRequest(request)__		this.mappingRegistry.acquireReadLock()__		try {_			HandlerMethod handlerMethod = lookupHandlerMethod(lookupPath, request)__			return (handlerMethod != null ? handlerMethod.createWithResolvedBean() : null)__		}_		finally {_			this.mappingRegistry.releaseReadLock()__		}_	};look,up,a,handler,method,for,the,given,request;override,protected,handler,method,get,handler,internal,http,servlet,request,request,throws,exception,string,lookup,path,get,url,path,helper,get,lookup,path,for,request,request,this,mapping,registry,acquire,read,lock,try,handler,method,handler,method,lookup,handler,method,lookup,path,request,return,handler,method,null,handler,method,create,with,resolved,bean,null,finally,this,mapping,registry,release,read,lock
AbstractHandlerMethodMapping -> @Override 	protected HandlerMethod getHandlerInternal(HttpServletRequest request) throws Exception;1530174524;Look up a handler method for the given request.;@Override_	protected HandlerMethod getHandlerInternal(HttpServletRequest request) throws Exception {_		String lookupPath = getUrlPathHelper().getLookupPathForRequest(request)__		this.mappingRegistry.acquireReadLock()__		try {_			HandlerMethod handlerMethod = lookupHandlerMethod(lookupPath, request)__			return (handlerMethod != null ? handlerMethod.createWithResolvedBean() : null)__		}_		finally {_			this.mappingRegistry.releaseReadLock()__		}_	};look,up,a,handler,method,for,the,given,request;override,protected,handler,method,get,handler,internal,http,servlet,request,request,throws,exception,string,lookup,path,get,url,path,helper,get,lookup,path,for,request,request,this,mapping,registry,acquire,read,lock,try,handler,method,handler,method,lookup,handler,method,lookup,path,request,return,handler,method,null,handler,method,create,with,resolved,bean,null,finally,this,mapping,registry,release,read,lock
AbstractHandlerMethodMapping -> @Override 	protected HandlerMethod getHandlerInternal(HttpServletRequest request) throws Exception;1533943217;Look up a handler method for the given request.;@Override_	protected HandlerMethod getHandlerInternal(HttpServletRequest request) throws Exception {_		String lookupPath = getUrlPathHelper().getLookupPathForRequest(request)__		this.mappingRegistry.acquireReadLock()__		try {_			HandlerMethod handlerMethod = lookupHandlerMethod(lookupPath, request)__			return (handlerMethod != null ? handlerMethod.createWithResolvedBean() : null)__		}_		finally {_			this.mappingRegistry.releaseReadLock()__		}_	};look,up,a,handler,method,for,the,given,request;override,protected,handler,method,get,handler,internal,http,servlet,request,request,throws,exception,string,lookup,path,get,url,path,helper,get,lookup,path,for,request,request,this,mapping,registry,acquire,read,lock,try,handler,method,handler,method,lookup,handler,method,lookup,path,request,return,handler,method,null,handler,method,create,with,resolved,bean,null,finally,this,mapping,registry,release,read,lock
AbstractHandlerMethodMapping -> @Override 	protected HandlerMethod getHandlerInternal(HttpServletRequest request) throws Exception;1542407418;Look up a handler method for the given request.;@Override_	protected HandlerMethod getHandlerInternal(HttpServletRequest request) throws Exception {_		String lookupPath = getUrlPathHelper().getLookupPathForRequest(request)__		this.mappingRegistry.acquireReadLock()__		try {_			HandlerMethod handlerMethod = lookupHandlerMethod(lookupPath, request)__			return (handlerMethod != null ? handlerMethod.createWithResolvedBean() : null)__		}_		finally {_			this.mappingRegistry.releaseReadLock()__		}_	};look,up,a,handler,method,for,the,given,request;override,protected,handler,method,get,handler,internal,http,servlet,request,request,throws,exception,string,lookup,path,get,url,path,helper,get,lookup,path,for,request,request,this,mapping,registry,acquire,read,lock,try,handler,method,handler,method,lookup,handler,method,lookup,path,request,return,handler,method,null,handler,method,create,with,resolved,bean,null,finally,this,mapping,registry,release,read,lock
AbstractHandlerMethodMapping -> @Override 	protected HandlerMethod getHandlerInternal(HttpServletRequest request) throws Exception;1542771062;Look up a handler method for the given request.;@Override_	protected HandlerMethod getHandlerInternal(HttpServletRequest request) throws Exception {_		String lookupPath = getUrlPathHelper().getLookupPathForRequest(request)__		this.mappingRegistry.acquireReadLock()__		try {_			HandlerMethod handlerMethod = lookupHandlerMethod(lookupPath, request)__			return (handlerMethod != null ? handlerMethod.createWithResolvedBean() : null)__		}_		finally {_			this.mappingRegistry.releaseReadLock()__		}_	};look,up,a,handler,method,for,the,given,request;override,protected,handler,method,get,handler,internal,http,servlet,request,request,throws,exception,string,lookup,path,get,url,path,helper,get,lookup,path,for,request,request,this,mapping,registry,acquire,read,lock,try,handler,method,handler,method,lookup,handler,method,lookup,path,request,return,handler,method,null,handler,method,create,with,resolved,bean,null,finally,this,mapping,registry,release,read,lock
AbstractHandlerMethodMapping -> @Override 	protected HandlerMethod getHandlerInternal(HttpServletRequest request) throws Exception;1548427561;Look up a handler method for the given request.;@Override_	protected HandlerMethod getHandlerInternal(HttpServletRequest request) throws Exception {_		String lookupPath = getUrlPathHelper().getLookupPathForRequest(request)__		this.mappingRegistry.acquireReadLock()__		try {_			HandlerMethod handlerMethod = lookupHandlerMethod(lookupPath, request)__			return (handlerMethod != null ? handlerMethod.createWithResolvedBean() : null)__		}_		finally {_			this.mappingRegistry.releaseReadLock()__		}_	};look,up,a,handler,method,for,the,given,request;override,protected,handler,method,get,handler,internal,http,servlet,request,request,throws,exception,string,lookup,path,get,url,path,helper,get,lookup,path,for,request,request,this,mapping,registry,acquire,read,lock,try,handler,method,handler,method,lookup,handler,method,lookup,path,request,return,handler,method,null,handler,method,create,with,resolved,bean,null,finally,this,mapping,registry,release,read,lock
AbstractHandlerMethodMapping -> @Override 	protected HandlerMethod getHandlerInternal(HttpServletRequest request) throws Exception;1551093473;Look up a handler method for the given request.;@Override_	protected HandlerMethod getHandlerInternal(HttpServletRequest request) throws Exception {_		String lookupPath = getUrlPathHelper().getLookupPathForRequest(request)__		this.mappingRegistry.acquireReadLock()__		try {_			HandlerMethod handlerMethod = lookupHandlerMethod(lookupPath, request)__			return (handlerMethod != null ? handlerMethod.createWithResolvedBean() : null)__		}_		finally {_			this.mappingRegistry.releaseReadLock()__		}_	};look,up,a,handler,method,for,the,given,request;override,protected,handler,method,get,handler,internal,http,servlet,request,request,throws,exception,string,lookup,path,get,url,path,helper,get,lookup,path,for,request,request,this,mapping,registry,acquire,read,lock,try,handler,method,handler,method,lookup,handler,method,lookup,path,request,return,handler,method,null,handler,method,create,with,resolved,bean,null,finally,this,mapping,registry,release,read,lock
AbstractHandlerMethodMapping -> public HandlerMethodMappingNamingStrategy<T> getNamingStrategy();1430734105;Return the configured naming strategy or {@code null}.;public HandlerMethodMappingNamingStrategy<T> getNamingStrategy() {_		return this.namingStrategy__	};return,the,configured,naming,strategy,or,code,null;public,handler,method,mapping,naming,strategy,t,get,naming,strategy,return,this,naming,strategy
AbstractHandlerMethodMapping -> public HandlerMethodMappingNamingStrategy<T> getNamingStrategy();1430734106;Return the configured naming strategy or {@code null}.;public HandlerMethodMappingNamingStrategy<T> getNamingStrategy() {_		return this.namingStrategy__	};return,the,configured,naming,strategy,or,code,null;public,handler,method,mapping,naming,strategy,t,get,naming,strategy,return,this,naming,strategy
AbstractHandlerMethodMapping -> public HandlerMethodMappingNamingStrategy<T> getNamingStrategy();1430774689;Return the configured naming strategy or {@code null}.;public HandlerMethodMappingNamingStrategy<T> getNamingStrategy() {_		return this.namingStrategy__	};return,the,configured,naming,strategy,or,code,null;public,handler,method,mapping,naming,strategy,t,get,naming,strategy,return,this,naming,strategy
AbstractHandlerMethodMapping -> public HandlerMethodMappingNamingStrategy<T> getNamingStrategy();1430844966;Return the configured naming strategy or {@code null}.;public HandlerMethodMappingNamingStrategy<T> getNamingStrategy() {_		return this.namingStrategy__	};return,the,configured,naming,strategy,or,code,null;public,handler,method,mapping,naming,strategy,t,get,naming,strategy,return,this,naming,strategy
AbstractHandlerMethodMapping -> public HandlerMethodMappingNamingStrategy<T> getNamingStrategy();1430844967;Return the configured naming strategy or {@code null}.;public HandlerMethodMappingNamingStrategy<T> getNamingStrategy() {_		return this.namingStrategy__	};return,the,configured,naming,strategy,or,code,null;public,handler,method,mapping,naming,strategy,t,get,naming,strategy,return,this,naming,strategy
AbstractHandlerMethodMapping -> public HandlerMethodMappingNamingStrategy<T> getNamingStrategy();1431730371;Return the configured naming strategy or {@code null}.;public HandlerMethodMappingNamingStrategy<T> getNamingStrategy() {_		return this.namingStrategy__	};return,the,configured,naming,strategy,or,code,null;public,handler,method,mapping,naming,strategy,t,get,naming,strategy,return,this,naming,strategy
AbstractHandlerMethodMapping -> public HandlerMethodMappingNamingStrategy<T> getNamingStrategy();1439294371;Return the configured naming strategy or {@code null}.;public HandlerMethodMappingNamingStrategy<T> getNamingStrategy() {_		return this.namingStrategy__	};return,the,configured,naming,strategy,or,code,null;public,handler,method,mapping,naming,strategy,t,get,naming,strategy,return,this,naming,strategy
AbstractHandlerMethodMapping -> public HandlerMethodMappingNamingStrategy<T> getNamingStrategy();1447077465;Return the configured naming strategy or {@code null}.;public HandlerMethodMappingNamingStrategy<T> getNamingStrategy() {_		return this.namingStrategy__	};return,the,configured,naming,strategy,or,code,null;public,handler,method,mapping,naming,strategy,t,get,naming,strategy,return,this,naming,strategy
AbstractHandlerMethodMapping -> public HandlerMethodMappingNamingStrategy<T> getNamingStrategy();1448483163;Return the configured naming strategy or {@code null}.;public HandlerMethodMappingNamingStrategy<T> getNamingStrategy() {_		return this.namingStrategy__	};return,the,configured,naming,strategy,or,code,null;public,handler,method,mapping,naming,strategy,t,get,naming,strategy,return,this,naming,strategy
AbstractHandlerMethodMapping -> public HandlerMethodMappingNamingStrategy<T> getNamingStrategy();1452685925;Return the configured naming strategy or {@code null}.;public HandlerMethodMappingNamingStrategy<T> getNamingStrategy() {_		return this.namingStrategy__	};return,the,configured,naming,strategy,or,code,null;public,handler,method,mapping,naming,strategy,t,get,naming,strategy,return,this,naming,strategy
AbstractHandlerMethodMapping -> public HandlerMethodMappingNamingStrategy<T> getNamingStrategy();1452873718;Return the configured naming strategy or {@code null}.;public HandlerMethodMappingNamingStrategy<T> getNamingStrategy() {_		return this.namingStrategy__	};return,the,configured,naming,strategy,or,code,null;public,handler,method,mapping,naming,strategy,t,get,naming,strategy,return,this,naming,strategy
AbstractHandlerMethodMapping -> public HandlerMethodMappingNamingStrategy<T> getNamingStrategy();1453843788;Return the configured naming strategy or {@code null}.;public HandlerMethodMappingNamingStrategy<T> getNamingStrategy() {_		return this.namingStrategy__	};return,the,configured,naming,strategy,or,code,null;public,handler,method,mapping,naming,strategy,t,get,naming,strategy,return,this,naming,strategy
AbstractHandlerMethodMapping -> public HandlerMethodMappingNamingStrategy<T> getNamingStrategy();1467730834;Return the configured naming strategy or {@code null}.;public HandlerMethodMappingNamingStrategy<T> getNamingStrategy() {_		return this.namingStrategy__	};return,the,configured,naming,strategy,or,code,null;public,handler,method,mapping,naming,strategy,t,get,naming,strategy,return,this,naming,strategy
AbstractHandlerMethodMapping -> public HandlerMethodMappingNamingStrategy<T> getNamingStrategy();1468417354;Return the configured naming strategy or {@code null}.;public HandlerMethodMappingNamingStrategy<T> getNamingStrategy() {_		return this.namingStrategy__	};return,the,configured,naming,strategy,or,code,null;public,handler,method,mapping,naming,strategy,t,get,naming,strategy,return,this,naming,strategy
AbstractHandlerMethodMapping -> public HandlerMethodMappingNamingStrategy<T> getNamingStrategy();1468596479;Return the configured naming strategy or {@code null}.;public HandlerMethodMappingNamingStrategy<T> getNamingStrategy() {_		return this.namingStrategy__	};return,the,configured,naming,strategy,or,code,null;public,handler,method,mapping,naming,strategy,t,get,naming,strategy,return,this,naming,strategy
AbstractHandlerMethodMapping -> public HandlerMethodMappingNamingStrategy<T> getNamingStrategy();1474905889;Return the configured naming strategy or {@code null}.;public HandlerMethodMappingNamingStrategy<T> getNamingStrategy() {_		return this.namingStrategy__	};return,the,configured,naming,strategy,or,code,null;public,handler,method,mapping,naming,strategy,t,get,naming,strategy,return,this,naming,strategy
AbstractHandlerMethodMapping -> public HandlerMethodMappingNamingStrategy<T> getNamingStrategy();1481813056;Return the configured naming strategy or {@code null}.;public HandlerMethodMappingNamingStrategy<T> getNamingStrategy() {_		return this.namingStrategy__	};return,the,configured,naming,strategy,or,code,null;public,handler,method,mapping,naming,strategy,t,get,naming,strategy,return,this,naming,strategy
AbstractHandlerMethodMapping -> public HandlerMethodMappingNamingStrategy<T> getNamingStrategy();1485810955;Return the configured naming strategy or {@code null}.;public HandlerMethodMappingNamingStrategy<T> getNamingStrategy() {_		return this.namingStrategy__	};return,the,configured,naming,strategy,or,code,null;public,handler,method,mapping,naming,strategy,t,get,naming,strategy,return,this,naming,strategy
AbstractHandlerMethodMapping -> @Nullable 	protected abstract T getMatchingMapping(T mapping, HttpServletRequest request)_;1495868221;Check if a mapping matches the current request and return a (potentially_new) mapping with conditions relevant to the current request._@param mapping the mapping to get a match for_@param request the current HTTP servlet request_@return the match, or {@code null} if the mapping doesn't match;@Nullable_	protected abstract T getMatchingMapping(T mapping, HttpServletRequest request)_;check,if,a,mapping,matches,the,current,request,and,return,a,potentially,new,mapping,with,conditions,relevant,to,the,current,request,param,mapping,the,mapping,to,get,a,match,for,param,request,the,current,http,servlet,request,return,the,match,or,code,null,if,the,mapping,doesn,t,match;nullable,protected,abstract,t,get,matching,mapping,t,mapping,http,servlet,request,request
AbstractHandlerMethodMapping -> @Nullable 	protected abstract T getMatchingMapping(T mapping, HttpServletRequest request)_;1496837955;Check if a mapping matches the current request and return a (potentially_new) mapping with conditions relevant to the current request._@param mapping the mapping to get a match for_@param request the current HTTP servlet request_@return the match, or {@code null} if the mapping doesn't match;@Nullable_	protected abstract T getMatchingMapping(T mapping, HttpServletRequest request)_;check,if,a,mapping,matches,the,current,request,and,return,a,potentially,new,mapping,with,conditions,relevant,to,the,current,request,param,mapping,the,mapping,to,get,a,match,for,param,request,the,current,http,servlet,request,return,the,match,or,code,null,if,the,mapping,doesn,t,match;nullable,protected,abstract,t,get,matching,mapping,t,mapping,http,servlet,request,request
AbstractHandlerMethodMapping -> @Nullable 	protected abstract T getMatchingMapping(T mapping, HttpServletRequest request)_;1497251962;Check if a mapping matches the current request and return a (potentially_new) mapping with conditions relevant to the current request._@param mapping the mapping to get a match for_@param request the current HTTP servlet request_@return the match, or {@code null} if the mapping doesn't match;@Nullable_	protected abstract T getMatchingMapping(T mapping, HttpServletRequest request)_;check,if,a,mapping,matches,the,current,request,and,return,a,potentially,new,mapping,with,conditions,relevant,to,the,current,request,param,mapping,the,mapping,to,get,a,match,for,param,request,the,current,http,servlet,request,return,the,match,or,code,null,if,the,mapping,doesn,t,match;nullable,protected,abstract,t,get,matching,mapping,t,mapping,http,servlet,request,request
AbstractHandlerMethodMapping -> @Nullable 	protected abstract T getMatchingMapping(T mapping, HttpServletRequest request)_;1498780456;Check if a mapping matches the current request and return a (potentially_new) mapping with conditions relevant to the current request._@param mapping the mapping to get a match for_@param request the current HTTP servlet request_@return the match, or {@code null} if the mapping doesn't match;@Nullable_	protected abstract T getMatchingMapping(T mapping, HttpServletRequest request)_;check,if,a,mapping,matches,the,current,request,and,return,a,potentially,new,mapping,with,conditions,relevant,to,the,current,request,param,mapping,the,mapping,to,get,a,match,for,param,request,the,current,http,servlet,request,return,the,match,or,code,null,if,the,mapping,doesn,t,match;nullable,protected,abstract,t,get,matching,mapping,t,mapping,http,servlet,request,request
AbstractHandlerMethodMapping -> @Nullable 	protected abstract T getMatchingMapping(T mapping, HttpServletRequest request)_;1518772998;Check if a mapping matches the current request and return a (potentially_new) mapping with conditions relevant to the current request._@param mapping the mapping to get a match for_@param request the current HTTP servlet request_@return the match, or {@code null} if the mapping doesn't match;@Nullable_	protected abstract T getMatchingMapping(T mapping, HttpServletRequest request)_;check,if,a,mapping,matches,the,current,request,and,return,a,potentially,new,mapping,with,conditions,relevant,to,the,current,request,param,mapping,the,mapping,to,get,a,match,for,param,request,the,current,http,servlet,request,return,the,match,or,code,null,if,the,mapping,doesn,t,match;nullable,protected,abstract,t,get,matching,mapping,t,mapping,http,servlet,request,request
AbstractHandlerMethodMapping -> @Nullable 	protected abstract T getMatchingMapping(T mapping, HttpServletRequest request)_;1522103912;Check if a mapping matches the current request and return a (potentially_new) mapping with conditions relevant to the current request._@param mapping the mapping to get a match for_@param request the current HTTP servlet request_@return the match, or {@code null} if the mapping doesn't match;@Nullable_	protected abstract T getMatchingMapping(T mapping, HttpServletRequest request)_;check,if,a,mapping,matches,the,current,request,and,return,a,potentially,new,mapping,with,conditions,relevant,to,the,current,request,param,mapping,the,mapping,to,get,a,match,for,param,request,the,current,http,servlet,request,return,the,match,or,code,null,if,the,mapping,doesn,t,match;nullable,protected,abstract,t,get,matching,mapping,t,mapping,http,servlet,request,request
AbstractHandlerMethodMapping -> @Nullable 	protected abstract T getMatchingMapping(T mapping, HttpServletRequest request)_;1522843494;Check if a mapping matches the current request and return a (potentially_new) mapping with conditions relevant to the current request._@param mapping the mapping to get a match for_@param request the current HTTP servlet request_@return the match, or {@code null} if the mapping doesn't match;@Nullable_	protected abstract T getMatchingMapping(T mapping, HttpServletRequest request)_;check,if,a,mapping,matches,the,current,request,and,return,a,potentially,new,mapping,with,conditions,relevant,to,the,current,request,param,mapping,the,mapping,to,get,a,match,for,param,request,the,current,http,servlet,request,return,the,match,or,code,null,if,the,mapping,doesn,t,match;nullable,protected,abstract,t,get,matching,mapping,t,mapping,http,servlet,request,request
AbstractHandlerMethodMapping -> @Nullable 	protected abstract T getMatchingMapping(T mapping, HttpServletRequest request)_;1529361191;Check if a mapping matches the current request and return a (potentially_new) mapping with conditions relevant to the current request._@param mapping the mapping to get a match for_@param request the current HTTP servlet request_@return the match, or {@code null} if the mapping doesn't match;@Nullable_	protected abstract T getMatchingMapping(T mapping, HttpServletRequest request)_;check,if,a,mapping,matches,the,current,request,and,return,a,potentially,new,mapping,with,conditions,relevant,to,the,current,request,param,mapping,the,mapping,to,get,a,match,for,param,request,the,current,http,servlet,request,return,the,match,or,code,null,if,the,mapping,doesn,t,match;nullable,protected,abstract,t,get,matching,mapping,t,mapping,http,servlet,request,request
AbstractHandlerMethodMapping -> @Nullable 	protected abstract T getMatchingMapping(T mapping, HttpServletRequest request)_;1529721864;Check if a mapping matches the current request and return a (potentially_new) mapping with conditions relevant to the current request._@param mapping the mapping to get a match for_@param request the current HTTP servlet request_@return the match, or {@code null} if the mapping doesn't match;@Nullable_	protected abstract T getMatchingMapping(T mapping, HttpServletRequest request)_;check,if,a,mapping,matches,the,current,request,and,return,a,potentially,new,mapping,with,conditions,relevant,to,the,current,request,param,mapping,the,mapping,to,get,a,match,for,param,request,the,current,http,servlet,request,return,the,match,or,code,null,if,the,mapping,doesn,t,match;nullable,protected,abstract,t,get,matching,mapping,t,mapping,http,servlet,request,request
AbstractHandlerMethodMapping -> @Nullable 	protected abstract T getMatchingMapping(T mapping, HttpServletRequest request)_;1530174524;Check if a mapping matches the current request and return a (potentially_new) mapping with conditions relevant to the current request._@param mapping the mapping to get a match for_@param request the current HTTP servlet request_@return the match, or {@code null} if the mapping doesn't match;@Nullable_	protected abstract T getMatchingMapping(T mapping, HttpServletRequest request)_;check,if,a,mapping,matches,the,current,request,and,return,a,potentially,new,mapping,with,conditions,relevant,to,the,current,request,param,mapping,the,mapping,to,get,a,match,for,param,request,the,current,http,servlet,request,return,the,match,or,code,null,if,the,mapping,doesn,t,match;nullable,protected,abstract,t,get,matching,mapping,t,mapping,http,servlet,request,request
AbstractHandlerMethodMapping -> @Nullable 	protected abstract T getMatchingMapping(T mapping, HttpServletRequest request)_;1530174524;Check if a mapping matches the current request and return a (potentially_new) mapping with conditions relevant to the current request._@param mapping the mapping to get a match for_@param request the current HTTP servlet request_@return the match, or {@code null} if the mapping doesn't match;@Nullable_	protected abstract T getMatchingMapping(T mapping, HttpServletRequest request)_;check,if,a,mapping,matches,the,current,request,and,return,a,potentially,new,mapping,with,conditions,relevant,to,the,current,request,param,mapping,the,mapping,to,get,a,match,for,param,request,the,current,http,servlet,request,return,the,match,or,code,null,if,the,mapping,doesn,t,match;nullable,protected,abstract,t,get,matching,mapping,t,mapping,http,servlet,request,request
AbstractHandlerMethodMapping -> @Nullable 	protected abstract T getMatchingMapping(T mapping, HttpServletRequest request)_;1533943217;Check if a mapping matches the current request and return a (potentially_new) mapping with conditions relevant to the current request._@param mapping the mapping to get a match for_@param request the current HTTP servlet request_@return the match, or {@code null} if the mapping doesn't match;@Nullable_	protected abstract T getMatchingMapping(T mapping, HttpServletRequest request)_;check,if,a,mapping,matches,the,current,request,and,return,a,potentially,new,mapping,with,conditions,relevant,to,the,current,request,param,mapping,the,mapping,to,get,a,match,for,param,request,the,current,http,servlet,request,return,the,match,or,code,null,if,the,mapping,doesn,t,match;nullable,protected,abstract,t,get,matching,mapping,t,mapping,http,servlet,request,request
AbstractHandlerMethodMapping -> @Nullable 	protected abstract T getMatchingMapping(T mapping, HttpServletRequest request)_;1542407418;Check if a mapping matches the current request and return a (potentially_new) mapping with conditions relevant to the current request._@param mapping the mapping to get a match for_@param request the current HTTP servlet request_@return the match, or {@code null} if the mapping doesn't match;@Nullable_	protected abstract T getMatchingMapping(T mapping, HttpServletRequest request)_;check,if,a,mapping,matches,the,current,request,and,return,a,potentially,new,mapping,with,conditions,relevant,to,the,current,request,param,mapping,the,mapping,to,get,a,match,for,param,request,the,current,http,servlet,request,return,the,match,or,code,null,if,the,mapping,doesn,t,match;nullable,protected,abstract,t,get,matching,mapping,t,mapping,http,servlet,request,request
AbstractHandlerMethodMapping -> @Nullable 	protected abstract T getMatchingMapping(T mapping, HttpServletRequest request)_;1542771062;Check if a mapping matches the current request and return a (potentially_new) mapping with conditions relevant to the current request._@param mapping the mapping to get a match for_@param request the current HTTP servlet request_@return the match, or {@code null} if the mapping doesn't match;@Nullable_	protected abstract T getMatchingMapping(T mapping, HttpServletRequest request)_;check,if,a,mapping,matches,the,current,request,and,return,a,potentially,new,mapping,with,conditions,relevant,to,the,current,request,param,mapping,the,mapping,to,get,a,match,for,param,request,the,current,http,servlet,request,return,the,match,or,code,null,if,the,mapping,doesn,t,match;nullable,protected,abstract,t,get,matching,mapping,t,mapping,http,servlet,request,request
AbstractHandlerMethodMapping -> @Nullable 	protected abstract T getMatchingMapping(T mapping, HttpServletRequest request)_;1548427561;Check if a mapping matches the current request and return a (potentially_new) mapping with conditions relevant to the current request._@param mapping the mapping to get a match for_@param request the current HTTP servlet request_@return the match, or {@code null} if the mapping doesn't match;@Nullable_	protected abstract T getMatchingMapping(T mapping, HttpServletRequest request)_;check,if,a,mapping,matches,the,current,request,and,return,a,potentially,new,mapping,with,conditions,relevant,to,the,current,request,param,mapping,the,mapping,to,get,a,match,for,param,request,the,current,http,servlet,request,return,the,match,or,code,null,if,the,mapping,doesn,t,match;nullable,protected,abstract,t,get,matching,mapping,t,mapping,http,servlet,request,request
AbstractHandlerMethodMapping -> @Nullable 	protected abstract T getMatchingMapping(T mapping, HttpServletRequest request)_;1551093473;Check if a mapping matches the current request and return a (potentially_new) mapping with conditions relevant to the current request._@param mapping the mapping to get a match for_@param request the current HTTP servlet request_@return the match, or {@code null} if the mapping doesn't match;@Nullable_	protected abstract T getMatchingMapping(T mapping, HttpServletRequest request)_;check,if,a,mapping,matches,the,current,request,and,return,a,potentially,new,mapping,with,conditions,relevant,to,the,current,request,param,mapping,the,mapping,to,get,a,match,for,param,request,the,current,http,servlet,request,return,the,match,or,code,null,if,the,mapping,doesn,t,match;nullable,protected,abstract,t,get,matching,mapping,t,mapping,http,servlet,request,request
AbstractHandlerMethodMapping -> public void afterPropertiesSet();1336682556;Detects handler methods at initialization.;public void afterPropertiesSet() {_		initHandlerMethods()__	};detects,handler,methods,at,initialization;public,void,after,properties,set,init,handler,methods
AbstractHandlerMethodMapping -> public void afterPropertiesSet();1341441111;Detects handler methods at initialization.;public void afterPropertiesSet() {_		initHandlerMethods()__	};detects,handler,methods,at,initialization;public,void,after,properties,set,init,handler,methods
AbstractHandlerMethodMapping -> public void afterPropertiesSet();1357119239;Detects handler methods at initialization.;public void afterPropertiesSet() {_		initHandlerMethods()__	};detects,handler,methods,at,initialization;public,void,after,properties,set,init,handler,methods
AbstractHandlerMethodMapping -> public void afterPropertiesSet();1362408075;Detects handler methods at initialization.;public void afterPropertiesSet() {_		initHandlerMethods()__	};detects,handler,methods,at,initialization;public,void,after,properties,set,init,handler,methods
AbstractHandlerMethodMapping -> public void registerMapping(T mapping, Object handler, Method method);1430774689;Register the given mapping._<p>This method may be invoked at runtime after initialization has completed._@param mapping the mapping for the handler method_@param handler the handler_@param method the method;public void registerMapping(T mapping, Object handler, Method method) {_		this.mappingRegistry.register(mapping, handler, method)__	};register,the,given,mapping,p,this,method,may,be,invoked,at,runtime,after,initialization,has,completed,param,mapping,the,mapping,for,the,handler,method,param,handler,the,handler,param,method,the,method;public,void,register,mapping,t,mapping,object,handler,method,method,this,mapping,registry,register,mapping,handler,method
AbstractHandlerMethodMapping -> public void registerMapping(T mapping, Object handler, Method method);1430844966;Register the given mapping._<p>This method may be invoked at runtime after initialization has completed._@param mapping the mapping for the handler method_@param handler the handler_@param method the method;public void registerMapping(T mapping, Object handler, Method method) {_		this.mappingRegistry.register(mapping, handler, method)__	};register,the,given,mapping,p,this,method,may,be,invoked,at,runtime,after,initialization,has,completed,param,mapping,the,mapping,for,the,handler,method,param,handler,the,handler,param,method,the,method;public,void,register,mapping,t,mapping,object,handler,method,method,this,mapping,registry,register,mapping,handler,method
AbstractHandlerMethodMapping -> public void registerMapping(T mapping, Object handler, Method method);1430844967;Register the given mapping._<p>This method may be invoked at runtime after initialization has completed._@param mapping the mapping for the handler method_@param handler the handler_@param method the method;public void registerMapping(T mapping, Object handler, Method method) {_		this.mappingRegistry.register(mapping, handler, method)__	};register,the,given,mapping,p,this,method,may,be,invoked,at,runtime,after,initialization,has,completed,param,mapping,the,mapping,for,the,handler,method,param,handler,the,handler,param,method,the,method;public,void,register,mapping,t,mapping,object,handler,method,method,this,mapping,registry,register,mapping,handler,method
AbstractHandlerMethodMapping -> public void registerMapping(T mapping, Object handler, Method method);1431730371;Register the given mapping._<p>This method may be invoked at runtime after initialization has completed._@param mapping the mapping for the handler method_@param handler the handler_@param method the method;public void registerMapping(T mapping, Object handler, Method method) {_		this.mappingRegistry.register(mapping, handler, method)__	};register,the,given,mapping,p,this,method,may,be,invoked,at,runtime,after,initialization,has,completed,param,mapping,the,mapping,for,the,handler,method,param,handler,the,handler,param,method,the,method;public,void,register,mapping,t,mapping,object,handler,method,method,this,mapping,registry,register,mapping,handler,method
AbstractHandlerMethodMapping -> public void registerMapping(T mapping, Object handler, Method method);1439294371;Register the given mapping._<p>This method may be invoked at runtime after initialization has completed._@param mapping the mapping for the handler method_@param handler the handler_@param method the method;public void registerMapping(T mapping, Object handler, Method method) {_		this.mappingRegistry.register(mapping, handler, method)__	};register,the,given,mapping,p,this,method,may,be,invoked,at,runtime,after,initialization,has,completed,param,mapping,the,mapping,for,the,handler,method,param,handler,the,handler,param,method,the,method;public,void,register,mapping,t,mapping,object,handler,method,method,this,mapping,registry,register,mapping,handler,method
AbstractHandlerMethodMapping -> public void registerMapping(T mapping, Object handler, Method method);1447077465;Register the given mapping._<p>This method may be invoked at runtime after initialization has completed._@param mapping the mapping for the handler method_@param handler the handler_@param method the method;public void registerMapping(T mapping, Object handler, Method method) {_		this.mappingRegistry.register(mapping, handler, method)__	};register,the,given,mapping,p,this,method,may,be,invoked,at,runtime,after,initialization,has,completed,param,mapping,the,mapping,for,the,handler,method,param,handler,the,handler,param,method,the,method;public,void,register,mapping,t,mapping,object,handler,method,method,this,mapping,registry,register,mapping,handler,method
AbstractHandlerMethodMapping -> public void registerMapping(T mapping, Object handler, Method method);1448483163;Register the given mapping._<p>This method may be invoked at runtime after initialization has completed._@param mapping the mapping for the handler method_@param handler the handler_@param method the method;public void registerMapping(T mapping, Object handler, Method method) {_		this.mappingRegistry.register(mapping, handler, method)__	};register,the,given,mapping,p,this,method,may,be,invoked,at,runtime,after,initialization,has,completed,param,mapping,the,mapping,for,the,handler,method,param,handler,the,handler,param,method,the,method;public,void,register,mapping,t,mapping,object,handler,method,method,this,mapping,registry,register,mapping,handler,method
AbstractHandlerMethodMapping -> public void registerMapping(T mapping, Object handler, Method method);1452685925;Register the given mapping._<p>This method may be invoked at runtime after initialization has completed._@param mapping the mapping for the handler method_@param handler the handler_@param method the method;public void registerMapping(T mapping, Object handler, Method method) {_		this.mappingRegistry.register(mapping, handler, method)__	};register,the,given,mapping,p,this,method,may,be,invoked,at,runtime,after,initialization,has,completed,param,mapping,the,mapping,for,the,handler,method,param,handler,the,handler,param,method,the,method;public,void,register,mapping,t,mapping,object,handler,method,method,this,mapping,registry,register,mapping,handler,method
AbstractHandlerMethodMapping -> public void registerMapping(T mapping, Object handler, Method method);1452873718;Register the given mapping._<p>This method may be invoked at runtime after initialization has completed._@param mapping the mapping for the handler method_@param handler the handler_@param method the method;public void registerMapping(T mapping, Object handler, Method method) {_		this.mappingRegistry.register(mapping, handler, method)__	};register,the,given,mapping,p,this,method,may,be,invoked,at,runtime,after,initialization,has,completed,param,mapping,the,mapping,for,the,handler,method,param,handler,the,handler,param,method,the,method;public,void,register,mapping,t,mapping,object,handler,method,method,this,mapping,registry,register,mapping,handler,method
AbstractHandlerMethodMapping -> public void registerMapping(T mapping, Object handler, Method method);1453843788;Register the given mapping._<p>This method may be invoked at runtime after initialization has completed._@param mapping the mapping for the handler method_@param handler the handler_@param method the method;public void registerMapping(T mapping, Object handler, Method method) {_		this.mappingRegistry.register(mapping, handler, method)__	};register,the,given,mapping,p,this,method,may,be,invoked,at,runtime,after,initialization,has,completed,param,mapping,the,mapping,for,the,handler,method,param,handler,the,handler,param,method,the,method;public,void,register,mapping,t,mapping,object,handler,method,method,this,mapping,registry,register,mapping,handler,method
AbstractHandlerMethodMapping -> public void registerMapping(T mapping, Object handler, Method method);1467730834;Register the given mapping._<p>This method may be invoked at runtime after initialization has completed._@param mapping the mapping for the handler method_@param handler the handler_@param method the method;public void registerMapping(T mapping, Object handler, Method method) {_		this.mappingRegistry.register(mapping, handler, method)__	};register,the,given,mapping,p,this,method,may,be,invoked,at,runtime,after,initialization,has,completed,param,mapping,the,mapping,for,the,handler,method,param,handler,the,handler,param,method,the,method;public,void,register,mapping,t,mapping,object,handler,method,method,this,mapping,registry,register,mapping,handler,method
AbstractHandlerMethodMapping -> public void registerMapping(T mapping, Object handler, Method method);1468417354;Register the given mapping._<p>This method may be invoked at runtime after initialization has completed._@param mapping the mapping for the handler method_@param handler the handler_@param method the method;public void registerMapping(T mapping, Object handler, Method method) {_		this.mappingRegistry.register(mapping, handler, method)__	};register,the,given,mapping,p,this,method,may,be,invoked,at,runtime,after,initialization,has,completed,param,mapping,the,mapping,for,the,handler,method,param,handler,the,handler,param,method,the,method;public,void,register,mapping,t,mapping,object,handler,method,method,this,mapping,registry,register,mapping,handler,method
AbstractHandlerMethodMapping -> public void registerMapping(T mapping, Object handler, Method method);1468596479;Register the given mapping._<p>This method may be invoked at runtime after initialization has completed._@param mapping the mapping for the handler method_@param handler the handler_@param method the method;public void registerMapping(T mapping, Object handler, Method method) {_		this.mappingRegistry.register(mapping, handler, method)__	};register,the,given,mapping,p,this,method,may,be,invoked,at,runtime,after,initialization,has,completed,param,mapping,the,mapping,for,the,handler,method,param,handler,the,handler,param,method,the,method;public,void,register,mapping,t,mapping,object,handler,method,method,this,mapping,registry,register,mapping,handler,method
AbstractHandlerMethodMapping -> public void registerMapping(T mapping, Object handler, Method method);1474905889;Register the given mapping._<p>This method may be invoked at runtime after initialization has completed._@param mapping the mapping for the handler method_@param handler the handler_@param method the method;public void registerMapping(T mapping, Object handler, Method method) {_		this.mappingRegistry.register(mapping, handler, method)__	};register,the,given,mapping,p,this,method,may,be,invoked,at,runtime,after,initialization,has,completed,param,mapping,the,mapping,for,the,handler,method,param,handler,the,handler,param,method,the,method;public,void,register,mapping,t,mapping,object,handler,method,method,this,mapping,registry,register,mapping,handler,method
AbstractHandlerMethodMapping -> public void registerMapping(T mapping, Object handler, Method method);1481813056;Register the given mapping._<p>This method may be invoked at runtime after initialization has completed._@param mapping the mapping for the handler method_@param handler the handler_@param method the method;public void registerMapping(T mapping, Object handler, Method method) {_		this.mappingRegistry.register(mapping, handler, method)__	};register,the,given,mapping,p,this,method,may,be,invoked,at,runtime,after,initialization,has,completed,param,mapping,the,mapping,for,the,handler,method,param,handler,the,handler,param,method,the,method;public,void,register,mapping,t,mapping,object,handler,method,method,this,mapping,registry,register,mapping,handler,method
AbstractHandlerMethodMapping -> public void registerMapping(T mapping, Object handler, Method method);1485810955;Register the given mapping._<p>This method may be invoked at runtime after initialization has completed._@param mapping the mapping for the handler method_@param handler the handler_@param method the method;public void registerMapping(T mapping, Object handler, Method method) {_		this.mappingRegistry.register(mapping, handler, method)__	};register,the,given,mapping,p,this,method,may,be,invoked,at,runtime,after,initialization,has,completed,param,mapping,the,mapping,for,the,handler,method,param,handler,the,handler,param,method,the,method;public,void,register,mapping,t,mapping,object,handler,method,method,this,mapping,registry,register,mapping,handler,method
AbstractHandlerMethodMapping -> public void registerMapping(T mapping, Object handler, Method method);1495868221;Register the given mapping._<p>This method may be invoked at runtime after initialization has completed._@param mapping the mapping for the handler method_@param handler the handler_@param method the method;public void registerMapping(T mapping, Object handler, Method method) {_		this.mappingRegistry.register(mapping, handler, method)__	};register,the,given,mapping,p,this,method,may,be,invoked,at,runtime,after,initialization,has,completed,param,mapping,the,mapping,for,the,handler,method,param,handler,the,handler,param,method,the,method;public,void,register,mapping,t,mapping,object,handler,method,method,this,mapping,registry,register,mapping,handler,method
AbstractHandlerMethodMapping -> public void registerMapping(T mapping, Object handler, Method method);1496837955;Register the given mapping._<p>This method may be invoked at runtime after initialization has completed._@param mapping the mapping for the handler method_@param handler the handler_@param method the method;public void registerMapping(T mapping, Object handler, Method method) {_		this.mappingRegistry.register(mapping, handler, method)__	};register,the,given,mapping,p,this,method,may,be,invoked,at,runtime,after,initialization,has,completed,param,mapping,the,mapping,for,the,handler,method,param,handler,the,handler,param,method,the,method;public,void,register,mapping,t,mapping,object,handler,method,method,this,mapping,registry,register,mapping,handler,method
AbstractHandlerMethodMapping -> public void registerMapping(T mapping, Object handler, Method method);1497251962;Register the given mapping._<p>This method may be invoked at runtime after initialization has completed._@param mapping the mapping for the handler method_@param handler the handler_@param method the method;public void registerMapping(T mapping, Object handler, Method method) {_		this.mappingRegistry.register(mapping, handler, method)__	};register,the,given,mapping,p,this,method,may,be,invoked,at,runtime,after,initialization,has,completed,param,mapping,the,mapping,for,the,handler,method,param,handler,the,handler,param,method,the,method;public,void,register,mapping,t,mapping,object,handler,method,method,this,mapping,registry,register,mapping,handler,method
AbstractHandlerMethodMapping -> public void registerMapping(T mapping, Object handler, Method method);1498780456;Register the given mapping._<p>This method may be invoked at runtime after initialization has completed._@param mapping the mapping for the handler method_@param handler the handler_@param method the method;public void registerMapping(T mapping, Object handler, Method method) {_		this.mappingRegistry.register(mapping, handler, method)__	};register,the,given,mapping,p,this,method,may,be,invoked,at,runtime,after,initialization,has,completed,param,mapping,the,mapping,for,the,handler,method,param,handler,the,handler,param,method,the,method;public,void,register,mapping,t,mapping,object,handler,method,method,this,mapping,registry,register,mapping,handler,method
AbstractHandlerMethodMapping -> public void registerMapping(T mapping, Object handler, Method method);1518772998;Register the given mapping._<p>This method may be invoked at runtime after initialization has completed._@param mapping the mapping for the handler method_@param handler the handler_@param method the method;public void registerMapping(T mapping, Object handler, Method method) {_		this.mappingRegistry.register(mapping, handler, method)__	};register,the,given,mapping,p,this,method,may,be,invoked,at,runtime,after,initialization,has,completed,param,mapping,the,mapping,for,the,handler,method,param,handler,the,handler,param,method,the,method;public,void,register,mapping,t,mapping,object,handler,method,method,this,mapping,registry,register,mapping,handler,method
AbstractHandlerMethodMapping -> public void registerMapping(T mapping, Object handler, Method method);1522103912;Register the given mapping._<p>This method may be invoked at runtime after initialization has completed._@param mapping the mapping for the handler method_@param handler the handler_@param method the method;public void registerMapping(T mapping, Object handler, Method method) {_		this.mappingRegistry.register(mapping, handler, method)__	};register,the,given,mapping,p,this,method,may,be,invoked,at,runtime,after,initialization,has,completed,param,mapping,the,mapping,for,the,handler,method,param,handler,the,handler,param,method,the,method;public,void,register,mapping,t,mapping,object,handler,method,method,this,mapping,registry,register,mapping,handler,method
AbstractHandlerMethodMapping -> public void registerMapping(T mapping, Object handler, Method method);1522843494;Register the given mapping._<p>This method may be invoked at runtime after initialization has completed._@param mapping the mapping for the handler method_@param handler the handler_@param method the method;public void registerMapping(T mapping, Object handler, Method method) {_		this.mappingRegistry.register(mapping, handler, method)__	};register,the,given,mapping,p,this,method,may,be,invoked,at,runtime,after,initialization,has,completed,param,mapping,the,mapping,for,the,handler,method,param,handler,the,handler,param,method,the,method;public,void,register,mapping,t,mapping,object,handler,method,method,this,mapping,registry,register,mapping,handler,method
AbstractHandlerMethodMapping -> public void registerMapping(T mapping, Object handler, Method method);1529361191;Register the given mapping._<p>This method may be invoked at runtime after initialization has completed._@param mapping the mapping for the handler method_@param handler the handler_@param method the method;public void registerMapping(T mapping, Object handler, Method method) {_		if (logger.isTraceEnabled()) {_			logger.trace("Register \"" + mapping + "\" to " + method.toGenericString())__		}_		this.mappingRegistry.register(mapping, handler, method)__	};register,the,given,mapping,p,this,method,may,be,invoked,at,runtime,after,initialization,has,completed,param,mapping,the,mapping,for,the,handler,method,param,handler,the,handler,param,method,the,method;public,void,register,mapping,t,mapping,object,handler,method,method,if,logger,is,trace,enabled,logger,trace,register,mapping,to,method,to,generic,string,this,mapping,registry,register,mapping,handler,method
AbstractHandlerMethodMapping -> public void registerMapping(T mapping, Object handler, Method method);1529721864;Register the given mapping._<p>This method may be invoked at runtime after initialization has completed._@param mapping the mapping for the handler method_@param handler the handler_@param method the method;public void registerMapping(T mapping, Object handler, Method method) {_		if (logger.isTraceEnabled()) {_			logger.trace("Register \"" + mapping + "\" to " + method.toGenericString())__		}_		this.mappingRegistry.register(mapping, handler, method)__	};register,the,given,mapping,p,this,method,may,be,invoked,at,runtime,after,initialization,has,completed,param,mapping,the,mapping,for,the,handler,method,param,handler,the,handler,param,method,the,method;public,void,register,mapping,t,mapping,object,handler,method,method,if,logger,is,trace,enabled,logger,trace,register,mapping,to,method,to,generic,string,this,mapping,registry,register,mapping,handler,method
AbstractHandlerMethodMapping -> public void registerMapping(T mapping, Object handler, Method method);1530174524;Register the given mapping._<p>This method may be invoked at runtime after initialization has completed._@param mapping the mapping for the handler method_@param handler the handler_@param method the method;public void registerMapping(T mapping, Object handler, Method method) {_		if (logger.isTraceEnabled()) {_			logger.trace("Register \"" + mapping + "\" to " + method.toGenericString())__		}_		this.mappingRegistry.register(mapping, handler, method)__	};register,the,given,mapping,p,this,method,may,be,invoked,at,runtime,after,initialization,has,completed,param,mapping,the,mapping,for,the,handler,method,param,handler,the,handler,param,method,the,method;public,void,register,mapping,t,mapping,object,handler,method,method,if,logger,is,trace,enabled,logger,trace,register,mapping,to,method,to,generic,string,this,mapping,registry,register,mapping,handler,method
AbstractHandlerMethodMapping -> public void registerMapping(T mapping, Object handler, Method method);1530174524;Register the given mapping._<p>This method may be invoked at runtime after initialization has completed._@param mapping the mapping for the handler method_@param handler the handler_@param method the method;public void registerMapping(T mapping, Object handler, Method method) {_		if (logger.isTraceEnabled()) {_			logger.trace("Register \"" + mapping + "\" to " + method.toGenericString())__		}_		this.mappingRegistry.register(mapping, handler, method)__	};register,the,given,mapping,p,this,method,may,be,invoked,at,runtime,after,initialization,has,completed,param,mapping,the,mapping,for,the,handler,method,param,handler,the,handler,param,method,the,method;public,void,register,mapping,t,mapping,object,handler,method,method,if,logger,is,trace,enabled,logger,trace,register,mapping,to,method,to,generic,string,this,mapping,registry,register,mapping,handler,method
AbstractHandlerMethodMapping -> public void registerMapping(T mapping, Object handler, Method method);1533943217;Register the given mapping._<p>This method may be invoked at runtime after initialization has completed._@param mapping the mapping for the handler method_@param handler the handler_@param method the method;public void registerMapping(T mapping, Object handler, Method method) {_		if (logger.isTraceEnabled()) {_			logger.trace("Register \"" + mapping + "\" to " + method.toGenericString())__		}_		this.mappingRegistry.register(mapping, handler, method)__	};register,the,given,mapping,p,this,method,may,be,invoked,at,runtime,after,initialization,has,completed,param,mapping,the,mapping,for,the,handler,method,param,handler,the,handler,param,method,the,method;public,void,register,mapping,t,mapping,object,handler,method,method,if,logger,is,trace,enabled,logger,trace,register,mapping,to,method,to,generic,string,this,mapping,registry,register,mapping,handler,method
AbstractHandlerMethodMapping -> public void registerMapping(T mapping, Object handler, Method method);1542407418;Register the given mapping._<p>This method may be invoked at runtime after initialization has completed._@param mapping the mapping for the handler method_@param handler the handler_@param method the method;public void registerMapping(T mapping, Object handler, Method method) {_		if (logger.isTraceEnabled()) {_			logger.trace("Register \"" + mapping + "\" to " + method.toGenericString())__		}_		this.mappingRegistry.register(mapping, handler, method)__	};register,the,given,mapping,p,this,method,may,be,invoked,at,runtime,after,initialization,has,completed,param,mapping,the,mapping,for,the,handler,method,param,handler,the,handler,param,method,the,method;public,void,register,mapping,t,mapping,object,handler,method,method,if,logger,is,trace,enabled,logger,trace,register,mapping,to,method,to,generic,string,this,mapping,registry,register,mapping,handler,method
AbstractHandlerMethodMapping -> public void registerMapping(T mapping, Object handler, Method method);1542771062;Register the given mapping._<p>This method may be invoked at runtime after initialization has completed._@param mapping the mapping for the handler method_@param handler the handler_@param method the method;public void registerMapping(T mapping, Object handler, Method method) {_		if (logger.isTraceEnabled()) {_			logger.trace("Register \"" + mapping + "\" to " + method.toGenericString())__		}_		this.mappingRegistry.register(mapping, handler, method)__	};register,the,given,mapping,p,this,method,may,be,invoked,at,runtime,after,initialization,has,completed,param,mapping,the,mapping,for,the,handler,method,param,handler,the,handler,param,method,the,method;public,void,register,mapping,t,mapping,object,handler,method,method,if,logger,is,trace,enabled,logger,trace,register,mapping,to,method,to,generic,string,this,mapping,registry,register,mapping,handler,method
AbstractHandlerMethodMapping -> public void registerMapping(T mapping, Object handler, Method method);1548427561;Register the given mapping._<p>This method may be invoked at runtime after initialization has completed._@param mapping the mapping for the handler method_@param handler the handler_@param method the method;public void registerMapping(T mapping, Object handler, Method method) {_		if (logger.isTraceEnabled()) {_			logger.trace("Register \"" + mapping + "\" to " + method.toGenericString())__		}_		this.mappingRegistry.register(mapping, handler, method)__	};register,the,given,mapping,p,this,method,may,be,invoked,at,runtime,after,initialization,has,completed,param,mapping,the,mapping,for,the,handler,method,param,handler,the,handler,param,method,the,method;public,void,register,mapping,t,mapping,object,handler,method,method,if,logger,is,trace,enabled,logger,trace,register,mapping,to,method,to,generic,string,this,mapping,registry,register,mapping,handler,method
AbstractHandlerMethodMapping -> public void registerMapping(T mapping, Object handler, Method method);1551093473;Register the given mapping._<p>This method may be invoked at runtime after initialization has completed._@param mapping the mapping for the handler method_@param handler the handler_@param method the method;public void registerMapping(T mapping, Object handler, Method method) {_		if (logger.isTraceEnabled()) {_			logger.trace("Register \"" + mapping + "\" to " + method.toGenericString())__		}_		this.mappingRegistry.register(mapping, handler, method)__	};register,the,given,mapping,p,this,method,may,be,invoked,at,runtime,after,initialization,has,completed,param,mapping,the,mapping,for,the,handler,method,param,handler,the,handler,param,method,the,method;public,void,register,mapping,t,mapping,object,handler,method,method,if,logger,is,trace,enabled,logger,trace,register,mapping,to,method,to,generic,string,this,mapping,registry,register,mapping,handler,method
AbstractHandlerMethodMapping -> MappingRegistry getMappingRegistry();1430844966;Return the internal mapping registry. Provided for testing purposes.;MappingRegistry getMappingRegistry() {_		return this.mappingRegistry__	};return,the,internal,mapping,registry,provided,for,testing,purposes;mapping,registry,get,mapping,registry,return,this,mapping,registry
AbstractHandlerMethodMapping -> MappingRegistry getMappingRegistry();1430844967;Return the internal mapping registry. Provided for testing purposes.;MappingRegistry getMappingRegistry() {_		return this.mappingRegistry__	};return,the,internal,mapping,registry,provided,for,testing,purposes;mapping,registry,get,mapping,registry,return,this,mapping,registry
AbstractHandlerMethodMapping -> MappingRegistry getMappingRegistry();1431730371;Return the internal mapping registry. Provided for testing purposes.;MappingRegistry getMappingRegistry() {_		return this.mappingRegistry__	};return,the,internal,mapping,registry,provided,for,testing,purposes;mapping,registry,get,mapping,registry,return,this,mapping,registry
AbstractHandlerMethodMapping -> MappingRegistry getMappingRegistry();1439294371;Return the internal mapping registry. Provided for testing purposes.;MappingRegistry getMappingRegistry() {_		return this.mappingRegistry__	};return,the,internal,mapping,registry,provided,for,testing,purposes;mapping,registry,get,mapping,registry,return,this,mapping,registry
AbstractHandlerMethodMapping -> MappingRegistry getMappingRegistry();1447077465;Return the internal mapping registry. Provided for testing purposes.;MappingRegistry getMappingRegistry() {_		return this.mappingRegistry__	};return,the,internal,mapping,registry,provided,for,testing,purposes;mapping,registry,get,mapping,registry,return,this,mapping,registry
AbstractHandlerMethodMapping -> MappingRegistry getMappingRegistry();1448483163;Return the internal mapping registry. Provided for testing purposes.;MappingRegistry getMappingRegistry() {_		return this.mappingRegistry__	};return,the,internal,mapping,registry,provided,for,testing,purposes;mapping,registry,get,mapping,registry,return,this,mapping,registry
AbstractHandlerMethodMapping -> MappingRegistry getMappingRegistry();1452685925;Return the internal mapping registry. Provided for testing purposes.;MappingRegistry getMappingRegistry() {_		return this.mappingRegistry__	};return,the,internal,mapping,registry,provided,for,testing,purposes;mapping,registry,get,mapping,registry,return,this,mapping,registry
AbstractHandlerMethodMapping -> MappingRegistry getMappingRegistry();1452873718;Return the internal mapping registry. Provided for testing purposes.;MappingRegistry getMappingRegistry() {_		return this.mappingRegistry__	};return,the,internal,mapping,registry,provided,for,testing,purposes;mapping,registry,get,mapping,registry,return,this,mapping,registry
AbstractHandlerMethodMapping -> MappingRegistry getMappingRegistry();1453843788;Return the internal mapping registry. Provided for testing purposes.;MappingRegistry getMappingRegistry() {_		return this.mappingRegistry__	};return,the,internal,mapping,registry,provided,for,testing,purposes;mapping,registry,get,mapping,registry,return,this,mapping,registry
AbstractHandlerMethodMapping -> MappingRegistry getMappingRegistry();1467730834;Return the internal mapping registry. Provided for testing purposes.;MappingRegistry getMappingRegistry() {_		return this.mappingRegistry__	};return,the,internal,mapping,registry,provided,for,testing,purposes;mapping,registry,get,mapping,registry,return,this,mapping,registry
AbstractHandlerMethodMapping -> MappingRegistry getMappingRegistry();1468417354;Return the internal mapping registry. Provided for testing purposes.;MappingRegistry getMappingRegistry() {_		return this.mappingRegistry__	};return,the,internal,mapping,registry,provided,for,testing,purposes;mapping,registry,get,mapping,registry,return,this,mapping,registry
AbstractHandlerMethodMapping -> MappingRegistry getMappingRegistry();1468596479;Return the internal mapping registry. Provided for testing purposes.;MappingRegistry getMappingRegistry() {_		return this.mappingRegistry__	};return,the,internal,mapping,registry,provided,for,testing,purposes;mapping,registry,get,mapping,registry,return,this,mapping,registry
AbstractHandlerMethodMapping -> MappingRegistry getMappingRegistry();1474905889;Return the internal mapping registry. Provided for testing purposes.;MappingRegistry getMappingRegistry() {_		return this.mappingRegistry__	};return,the,internal,mapping,registry,provided,for,testing,purposes;mapping,registry,get,mapping,registry,return,this,mapping,registry
AbstractHandlerMethodMapping -> MappingRegistry getMappingRegistry();1481813056;Return the internal mapping registry. Provided for testing purposes.;MappingRegistry getMappingRegistry() {_		return this.mappingRegistry__	};return,the,internal,mapping,registry,provided,for,testing,purposes;mapping,registry,get,mapping,registry,return,this,mapping,registry
AbstractHandlerMethodMapping -> MappingRegistry getMappingRegistry();1485810955;Return the internal mapping registry. Provided for testing purposes.;MappingRegistry getMappingRegistry() {_		return this.mappingRegistry__	};return,the,internal,mapping,registry,provided,for,testing,purposes;mapping,registry,get,mapping,registry,return,this,mapping,registry
AbstractHandlerMethodMapping -> MappingRegistry getMappingRegistry();1495868221;Return the internal mapping registry. Provided for testing purposes.;MappingRegistry getMappingRegistry() {_		return this.mappingRegistry__	};return,the,internal,mapping,registry,provided,for,testing,purposes;mapping,registry,get,mapping,registry,return,this,mapping,registry
AbstractHandlerMethodMapping -> MappingRegistry getMappingRegistry();1496837955;Return the internal mapping registry. Provided for testing purposes.;MappingRegistry getMappingRegistry() {_		return this.mappingRegistry__	};return,the,internal,mapping,registry,provided,for,testing,purposes;mapping,registry,get,mapping,registry,return,this,mapping,registry
AbstractHandlerMethodMapping -> MappingRegistry getMappingRegistry();1497251962;Return the internal mapping registry. Provided for testing purposes.;MappingRegistry getMappingRegistry() {_		return this.mappingRegistry__	};return,the,internal,mapping,registry,provided,for,testing,purposes;mapping,registry,get,mapping,registry,return,this,mapping,registry
AbstractHandlerMethodMapping -> MappingRegistry getMappingRegistry();1498780456;Return the internal mapping registry. Provided for testing purposes.;MappingRegistry getMappingRegistry() {_		return this.mappingRegistry__	};return,the,internal,mapping,registry,provided,for,testing,purposes;mapping,registry,get,mapping,registry,return,this,mapping,registry
AbstractHandlerMethodMapping -> MappingRegistry getMappingRegistry();1518772998;Return the internal mapping registry. Provided for testing purposes.;MappingRegistry getMappingRegistry() {_		return this.mappingRegistry__	};return,the,internal,mapping,registry,provided,for,testing,purposes;mapping,registry,get,mapping,registry,return,this,mapping,registry
AbstractHandlerMethodMapping -> MappingRegistry getMappingRegistry();1522103912;Return the internal mapping registry. Provided for testing purposes.;MappingRegistry getMappingRegistry() {_		return this.mappingRegistry__	};return,the,internal,mapping,registry,provided,for,testing,purposes;mapping,registry,get,mapping,registry,return,this,mapping,registry
AbstractHandlerMethodMapping -> MappingRegistry getMappingRegistry();1522843494;Return the internal mapping registry. Provided for testing purposes.;MappingRegistry getMappingRegistry() {_		return this.mappingRegistry__	};return,the,internal,mapping,registry,provided,for,testing,purposes;mapping,registry,get,mapping,registry,return,this,mapping,registry
AbstractHandlerMethodMapping -> MappingRegistry getMappingRegistry();1529361191;Return the internal mapping registry. Provided for testing purposes.;MappingRegistry getMappingRegistry() {_		return this.mappingRegistry__	};return,the,internal,mapping,registry,provided,for,testing,purposes;mapping,registry,get,mapping,registry,return,this,mapping,registry
AbstractHandlerMethodMapping -> MappingRegistry getMappingRegistry();1529721864;Return the internal mapping registry. Provided for testing purposes.;MappingRegistry getMappingRegistry() {_		return this.mappingRegistry__	};return,the,internal,mapping,registry,provided,for,testing,purposes;mapping,registry,get,mapping,registry,return,this,mapping,registry
AbstractHandlerMethodMapping -> MappingRegistry getMappingRegistry();1530174524;Return the internal mapping registry. Provided for testing purposes.;MappingRegistry getMappingRegistry() {_		return this.mappingRegistry__	};return,the,internal,mapping,registry,provided,for,testing,purposes;mapping,registry,get,mapping,registry,return,this,mapping,registry
AbstractHandlerMethodMapping -> MappingRegistry getMappingRegistry();1530174524;Return the internal mapping registry. Provided for testing purposes.;MappingRegistry getMappingRegistry() {_		return this.mappingRegistry__	};return,the,internal,mapping,registry,provided,for,testing,purposes;mapping,registry,get,mapping,registry,return,this,mapping,registry
AbstractHandlerMethodMapping -> MappingRegistry getMappingRegistry();1533943217;Return the internal mapping registry. Provided for testing purposes.;MappingRegistry getMappingRegistry() {_		return this.mappingRegistry__	};return,the,internal,mapping,registry,provided,for,testing,purposes;mapping,registry,get,mapping,registry,return,this,mapping,registry
AbstractHandlerMethodMapping -> MappingRegistry getMappingRegistry();1542407418;Return the internal mapping registry. Provided for testing purposes.;MappingRegistry getMappingRegistry() {_		return this.mappingRegistry__	};return,the,internal,mapping,registry,provided,for,testing,purposes;mapping,registry,get,mapping,registry,return,this,mapping,registry
AbstractHandlerMethodMapping -> MappingRegistry getMappingRegistry();1542771062;Return the internal mapping registry. Provided for testing purposes.;MappingRegistry getMappingRegistry() {_		return this.mappingRegistry__	};return,the,internal,mapping,registry,provided,for,testing,purposes;mapping,registry,get,mapping,registry,return,this,mapping,registry
AbstractHandlerMethodMapping -> MappingRegistry getMappingRegistry();1548427561;Return the internal mapping registry. Provided for testing purposes.;MappingRegistry getMappingRegistry() {_		return this.mappingRegistry__	};return,the,internal,mapping,registry,provided,for,testing,purposes;mapping,registry,get,mapping,registry,return,this,mapping,registry
AbstractHandlerMethodMapping -> MappingRegistry getMappingRegistry();1551093473;Return the internal mapping registry. Provided for testing purposes.;MappingRegistry getMappingRegistry() {_		return this.mappingRegistry__	};return,the,internal,mapping,registry,provided,for,testing,purposes;mapping,registry,get,mapping,registry,return,this,mapping,registry
AbstractHandlerMethodMapping -> protected void detectHandlerMethods(Object handler);1533943217;Look for handler methods in the specified handler bean._@param handler either a bean name or an actual handler instance_@see #getMappingForMethod;protected void detectHandlerMethods(Object handler) {_		Class<?> handlerType = (handler instanceof String ?_				obtainApplicationContext().getType((String) handler) : handler.getClass())___		if (handlerType != null) {_			Class<?> userType = ClassUtils.getUserClass(handlerType)__			Map<Method, T> methods = MethodIntrospector.selectMethods(userType,_					(MethodIntrospector.MetadataLookup<T>) method -> {_						try {_							return getMappingForMethod(method, userType)__						}_						catch (Throwable ex) {_							throw new IllegalStateException("Invalid mapping on handler class [" +_									userType.getName() + "]: " + method, ex)__						}_					})__			if (logger.isTraceEnabled()) {_				logger.trace("Mapped " + methods.size() + " handler method(s) for " + userType + ": " + methods)__			}_			methods.forEach((method, mapping) -> {_				Method invocableMethod = AopUtils.selectInvocableMethod(method, userType)__				registerHandlerMethod(handler, invocableMethod, mapping)__			})__		}_	};look,for,handler,methods,in,the,specified,handler,bean,param,handler,either,a,bean,name,or,an,actual,handler,instance,see,get,mapping,for,method;protected,void,detect,handler,methods,object,handler,class,handler,type,handler,instanceof,string,obtain,application,context,get,type,string,handler,handler,get,class,if,handler,type,null,class,user,type,class,utils,get,user,class,handler,type,map,method,t,methods,method,introspector,select,methods,user,type,method,introspector,metadata,lookup,t,method,try,return,get,mapping,for,method,method,user,type,catch,throwable,ex,throw,new,illegal,state,exception,invalid,mapping,on,handler,class,user,type,get,name,method,ex,if,logger,is,trace,enabled,logger,trace,mapped,methods,size,handler,method,s,for,user,type,methods,methods,for,each,method,mapping,method,invocable,method,aop,utils,select,invocable,method,method,user,type,register,handler,method,handler,invocable,method,mapping
AbstractHandlerMethodMapping -> protected void detectHandlerMethods(Object handler);1542407418;Look for handler methods in the specified handler bean._@param handler either a bean name or an actual handler instance_@see #getMappingForMethod;protected void detectHandlerMethods(Object handler) {_		Class<?> handlerType = (handler instanceof String ?_				obtainApplicationContext().getType((String) handler) : handler.getClass())___		if (handlerType != null) {_			Class<?> userType = ClassUtils.getUserClass(handlerType)__			Map<Method, T> methods = MethodIntrospector.selectMethods(userType,_					(MethodIntrospector.MetadataLookup<T>) method -> {_						try {_							return getMappingForMethod(method, userType)__						}_						catch (Throwable ex) {_							throw new IllegalStateException("Invalid mapping on handler class [" +_									userType.getName() + "]: " + method, ex)__						}_					})__			if (logger.isTraceEnabled()) {_				logger.trace(formatMappings(userType, methods))__			}_			methods.forEach((method, mapping) -> {_				Method invocableMethod = AopUtils.selectInvocableMethod(method, userType)__				registerHandlerMethod(handler, invocableMethod, mapping)__			})__		}_	};look,for,handler,methods,in,the,specified,handler,bean,param,handler,either,a,bean,name,or,an,actual,handler,instance,see,get,mapping,for,method;protected,void,detect,handler,methods,object,handler,class,handler,type,handler,instanceof,string,obtain,application,context,get,type,string,handler,handler,get,class,if,handler,type,null,class,user,type,class,utils,get,user,class,handler,type,map,method,t,methods,method,introspector,select,methods,user,type,method,introspector,metadata,lookup,t,method,try,return,get,mapping,for,method,method,user,type,catch,throwable,ex,throw,new,illegal,state,exception,invalid,mapping,on,handler,class,user,type,get,name,method,ex,if,logger,is,trace,enabled,logger,trace,format,mappings,user,type,methods,methods,for,each,method,mapping,method,invocable,method,aop,utils,select,invocable,method,method,user,type,register,handler,method,handler,invocable,method,mapping
AbstractHandlerMethodMapping -> protected void detectHandlerMethods(Object handler);1542771062;Look for handler methods in the specified handler bean._@param handler either a bean name or an actual handler instance_@see #getMappingForMethod;protected void detectHandlerMethods(Object handler) {_		Class<?> handlerType = (handler instanceof String ?_				obtainApplicationContext().getType((String) handler) : handler.getClass())___		if (handlerType != null) {_			Class<?> userType = ClassUtils.getUserClass(handlerType)__			Map<Method, T> methods = MethodIntrospector.selectMethods(userType,_					(MethodIntrospector.MetadataLookup<T>) method -> {_						try {_							return getMappingForMethod(method, userType)__						}_						catch (Throwable ex) {_							throw new IllegalStateException("Invalid mapping on handler class [" +_									userType.getName() + "]: " + method, ex)__						}_					})__			if (logger.isTraceEnabled()) {_				logger.trace(formatMappings(userType, methods))__			}_			methods.forEach((method, mapping) -> {_				Method invocableMethod = AopUtils.selectInvocableMethod(method, userType)__				registerHandlerMethod(handler, invocableMethod, mapping)__			})__		}_	};look,for,handler,methods,in,the,specified,handler,bean,param,handler,either,a,bean,name,or,an,actual,handler,instance,see,get,mapping,for,method;protected,void,detect,handler,methods,object,handler,class,handler,type,handler,instanceof,string,obtain,application,context,get,type,string,handler,handler,get,class,if,handler,type,null,class,user,type,class,utils,get,user,class,handler,type,map,method,t,methods,method,introspector,select,methods,user,type,method,introspector,metadata,lookup,t,method,try,return,get,mapping,for,method,method,user,type,catch,throwable,ex,throw,new,illegal,state,exception,invalid,mapping,on,handler,class,user,type,get,name,method,ex,if,logger,is,trace,enabled,logger,trace,format,mappings,user,type,methods,methods,for,each,method,mapping,method,invocable,method,aop,utils,select,invocable,method,method,user,type,register,handler,method,handler,invocable,method,mapping
AbstractHandlerMethodMapping -> protected void detectHandlerMethods(Object handler);1548427561;Look for handler methods in the specified handler bean._@param handler either a bean name or an actual handler instance_@see #getMappingForMethod;protected void detectHandlerMethods(Object handler) {_		Class<?> handlerType = (handler instanceof String ?_				obtainApplicationContext().getType((String) handler) : handler.getClass())___		if (handlerType != null) {_			Class<?> userType = ClassUtils.getUserClass(handlerType)__			Map<Method, T> methods = MethodIntrospector.selectMethods(userType,_					(MethodIntrospector.MetadataLookup<T>) method -> {_						try {_							return getMappingForMethod(method, userType)__						}_						catch (Throwable ex) {_							throw new IllegalStateException("Invalid mapping on handler class [" +_									userType.getName() + "]: " + method, ex)__						}_					})__			if (logger.isTraceEnabled()) {_				logger.trace(formatMappings(userType, methods))__			}_			methods.forEach((method, mapping) -> {_				Method invocableMethod = AopUtils.selectInvocableMethod(method, userType)__				registerHandlerMethod(handler, invocableMethod, mapping)__			})__		}_	};look,for,handler,methods,in,the,specified,handler,bean,param,handler,either,a,bean,name,or,an,actual,handler,instance,see,get,mapping,for,method;protected,void,detect,handler,methods,object,handler,class,handler,type,handler,instanceof,string,obtain,application,context,get,type,string,handler,handler,get,class,if,handler,type,null,class,user,type,class,utils,get,user,class,handler,type,map,method,t,methods,method,introspector,select,methods,user,type,method,introspector,metadata,lookup,t,method,try,return,get,mapping,for,method,method,user,type,catch,throwable,ex,throw,new,illegal,state,exception,invalid,mapping,on,handler,class,user,type,get,name,method,ex,if,logger,is,trace,enabled,logger,trace,format,mappings,user,type,methods,methods,for,each,method,mapping,method,invocable,method,aop,utils,select,invocable,method,method,user,type,register,handler,method,handler,invocable,method,mapping
AbstractHandlerMethodMapping -> protected void detectHandlerMethods(Object handler);1551093473;Look for handler methods in the specified handler bean._@param handler either a bean name or an actual handler instance_@see #getMappingForMethod;protected void detectHandlerMethods(Object handler) {_		Class<?> handlerType = (handler instanceof String ?_				obtainApplicationContext().getType((String) handler) : handler.getClass())___		if (handlerType != null) {_			Class<?> userType = ClassUtils.getUserClass(handlerType)__			Map<Method, T> methods = MethodIntrospector.selectMethods(userType,_					(MethodIntrospector.MetadataLookup<T>) method -> {_						try {_							return getMappingForMethod(method, userType)__						}_						catch (Throwable ex) {_							throw new IllegalStateException("Invalid mapping on handler class [" +_									userType.getName() + "]: " + method, ex)__						}_					})__			if (logger.isTraceEnabled()) {_				logger.trace(formatMappings(userType, methods))__			}_			methods.forEach((method, mapping) -> {_				Method invocableMethod = AopUtils.selectInvocableMethod(method, userType)__				registerHandlerMethod(handler, invocableMethod, mapping)__			})__		}_	};look,for,handler,methods,in,the,specified,handler,bean,param,handler,either,a,bean,name,or,an,actual,handler,instance,see,get,mapping,for,method;protected,void,detect,handler,methods,object,handler,class,handler,type,handler,instanceof,string,obtain,application,context,get,type,string,handler,handler,get,class,if,handler,type,null,class,user,type,class,utils,get,user,class,handler,type,map,method,t,methods,method,introspector,select,methods,user,type,method,introspector,metadata,lookup,t,method,try,return,get,mapping,for,method,method,user,type,catch,throwable,ex,throw,new,illegal,state,exception,invalid,mapping,on,handler,class,user,type,get,name,method,ex,if,logger,is,trace,enabled,logger,trace,format,mappings,user,type,methods,methods,for,each,method,mapping,method,invocable,method,aop,utils,select,invocable,method,method,user,type,register,handler,method,handler,invocable,method,mapping
AbstractHandlerMethodMapping -> MappingRegistry -> public List<T> getMappingKeysByUrl(String urlPath);1430734106;Return matches for the given URL path. Not thread-safe._@see #acquireReadLock();public List<T> getMappingKeysByUrl(String urlPath) {_			return this.urlLookup.get(urlPath)__		};return,matches,for,the,given,url,path,not,thread,safe,see,acquire,read,lock;public,list,t,get,mapping,keys,by,url,string,url,path,return,this,url,lookup,get,url,path
AbstractHandlerMethodMapping -> MappingRegistry -> public List<T> getMappingKeysByUrl(String urlPath);1430774689;Return matches for the given URL path. Not thread-safe._@see #acquireReadLock();public List<T> getMappingKeysByUrl(String urlPath) {_			return this.urlLookup.get(urlPath)__		};return,matches,for,the,given,url,path,not,thread,safe,see,acquire,read,lock;public,list,t,get,mapping,keys,by,url,string,url,path,return,this,url,lookup,get,url,path
AbstractHandlerMethodMapping -> protected void detectHandlerMethods(final Object handler);1328020251;Look for handler methods in a handler._@param handler the bean name of a handler or a handler instance;protected void detectHandlerMethods(final Object handler) {_		Class<?> handlerType = (handler instanceof String) ? _				getApplicationContext().getType((String) handler) : handler.getClass()___		final Class<?> userType = ClassUtils.getUserClass(handlerType)__				_		Set<Method> methods = HandlerMethodSelector.selectMethods(userType, new MethodFilter() {_			public boolean matches(Method method) {_				return getMappingForMethod(method, userType) != null__			}_		})__		_		for (Method method : methods) {_			T mapping = getMappingForMethod(method, userType)__			registerHandlerMethod(handler, method, mapping)__		}_	};look,for,handler,methods,in,a,handler,param,handler,the,bean,name,of,a,handler,or,a,handler,instance;protected,void,detect,handler,methods,final,object,handler,class,handler,type,handler,instanceof,string,get,application,context,get,type,string,handler,handler,get,class,final,class,user,type,class,utils,get,user,class,handler,type,set,method,methods,handler,method,selector,select,methods,user,type,new,method,filter,public,boolean,matches,method,method,return,get,mapping,for,method,method,user,type,null,for,method,method,methods,t,mapping,get,mapping,for,method,method,user,type,register,handler,method,handler,method,mapping
AbstractHandlerMethodMapping -> protected void detectHandlerMethods(final Object handler);1328022204;Look for handler methods in a handler._@param handler the bean name of a handler or a handler instance;protected void detectHandlerMethods(final Object handler) {_		Class<?> handlerType = (handler instanceof String) ? _				getApplicationContext().getType((String) handler) : handler.getClass()___		final Class<?> userType = ClassUtils.getUserClass(handlerType)__				_		Set<Method> methods = HandlerMethodSelector.selectMethods(userType, new MethodFilter() {_			public boolean matches(Method method) {_				return getMappingForMethod(method, userType) != null__			}_		})__		_		for (Method method : methods) {_			T mapping = getMappingForMethod(method, userType)__			registerHandlerMethod(handler, method, mapping)__		}_	};look,for,handler,methods,in,a,handler,param,handler,the,bean,name,of,a,handler,or,a,handler,instance;protected,void,detect,handler,methods,final,object,handler,class,handler,type,handler,instanceof,string,get,application,context,get,type,string,handler,handler,get,class,final,class,user,type,class,utils,get,user,class,handler,type,set,method,methods,handler,method,selector,select,methods,user,type,new,method,filter,public,boolean,matches,method,method,return,get,mapping,for,method,method,user,type,null,for,method,method,methods,t,mapping,get,mapping,for,method,method,user,type,register,handler,method,handler,method,mapping
AbstractHandlerMethodMapping -> protected void detectHandlerMethods(final Object handler);1336682556;Look for handler methods in a handler._@param handler the bean name of a handler or a handler instance;protected void detectHandlerMethods(final Object handler) {_		Class<?> handlerType = (handler instanceof String) ?_				getApplicationContext().getType((String) handler) : handler.getClass()___		final Class<?> userType = ClassUtils.getUserClass(handlerType)___		Set<Method> methods = HandlerMethodSelector.selectMethods(userType, new MethodFilter() {_			public boolean matches(Method method) {_				return getMappingForMethod(method, userType) != null__			}_		})___		for (Method method : methods) {_			T mapping = getMappingForMethod(method, userType)__			registerHandlerMethod(handler, method, mapping)__		}_	};look,for,handler,methods,in,a,handler,param,handler,the,bean,name,of,a,handler,or,a,handler,instance;protected,void,detect,handler,methods,final,object,handler,class,handler,type,handler,instanceof,string,get,application,context,get,type,string,handler,handler,get,class,final,class,user,type,class,utils,get,user,class,handler,type,set,method,methods,handler,method,selector,select,methods,user,type,new,method,filter,public,boolean,matches,method,method,return,get,mapping,for,method,method,user,type,null,for,method,method,methods,t,mapping,get,mapping,for,method,method,user,type,register,handler,method,handler,method,mapping
AbstractHandlerMethodMapping -> protected void detectHandlerMethods(final Object handler);1341441111;Look for handler methods in a handler._@param handler the bean name of a handler or a handler instance;protected void detectHandlerMethods(final Object handler) {_		Class<?> handlerType = (handler instanceof String) ?_				getApplicationContext().getType((String) handler) : handler.getClass()___		final Class<?> userType = ClassUtils.getUserClass(handlerType)___		Set<Method> methods = HandlerMethodSelector.selectMethods(userType, new MethodFilter() {_			public boolean matches(Method method) {_				return getMappingForMethod(method, userType) != null__			}_		})___		for (Method method : methods) {_			T mapping = getMappingForMethod(method, userType)__			registerHandlerMethod(handler, method, mapping)__		}_	};look,for,handler,methods,in,a,handler,param,handler,the,bean,name,of,a,handler,or,a,handler,instance;protected,void,detect,handler,methods,final,object,handler,class,handler,type,handler,instanceof,string,get,application,context,get,type,string,handler,handler,get,class,final,class,user,type,class,utils,get,user,class,handler,type,set,method,methods,handler,method,selector,select,methods,user,type,new,method,filter,public,boolean,matches,method,method,return,get,mapping,for,method,method,user,type,null,for,method,method,methods,t,mapping,get,mapping,for,method,method,user,type,register,handler,method,handler,method,mapping
AbstractHandlerMethodMapping -> protected void detectHandlerMethods(final Object handler);1356735495;Look for handler methods in a handler._@param handler the bean name of a handler or a handler instance;protected void detectHandlerMethods(final Object handler) {_		Class<?> handlerType = (handler instanceof String) ?_				getApplicationContext().getType((String) handler) : handler.getClass()___		final Class<?> userType = ClassUtils.getUserClass(handlerType)___		Set<Method> methods = HandlerMethodSelector.selectMethods(userType, new MethodFilter() {_			@Override_			public boolean matches(Method method) {_				return getMappingForMethod(method, userType) != null__			}_		})___		for (Method method : methods) {_			T mapping = getMappingForMethod(method, userType)__			registerHandlerMethod(handler, method, mapping)__		}_	};look,for,handler,methods,in,a,handler,param,handler,the,bean,name,of,a,handler,or,a,handler,instance;protected,void,detect,handler,methods,final,object,handler,class,handler,type,handler,instanceof,string,get,application,context,get,type,string,handler,handler,get,class,final,class,user,type,class,utils,get,user,class,handler,type,set,method,methods,handler,method,selector,select,methods,user,type,new,method,filter,override,public,boolean,matches,method,method,return,get,mapping,for,method,method,user,type,null,for,method,method,methods,t,mapping,get,mapping,for,method,method,user,type,register,handler,method,handler,method,mapping
AbstractHandlerMethodMapping -> protected void detectHandlerMethods(final Object handler);1357119239;Look for handler methods in a handler._@param handler the bean name of a handler or a handler instance;protected void detectHandlerMethods(final Object handler) {_		Class<?> handlerType = (handler instanceof String) ?_				getApplicationContext().getType((String) handler) : handler.getClass()___		final Class<?> userType = ClassUtils.getUserClass(handlerType)___		Set<Method> methods = HandlerMethodSelector.selectMethods(userType, new MethodFilter() {_			public boolean matches(Method method) {_				return getMappingForMethod(method, userType) != null__			}_		})___		for (Method method : methods) {_			T mapping = getMappingForMethod(method, userType)__			registerHandlerMethod(handler, method, mapping)__		}_	};look,for,handler,methods,in,a,handler,param,handler,the,bean,name,of,a,handler,or,a,handler,instance;protected,void,detect,handler,methods,final,object,handler,class,handler,type,handler,instanceof,string,get,application,context,get,type,string,handler,handler,get,class,final,class,user,type,class,utils,get,user,class,handler,type,set,method,methods,handler,method,selector,select,methods,user,type,new,method,filter,public,boolean,matches,method,method,return,get,mapping,for,method,method,user,type,null,for,method,method,methods,t,mapping,get,mapping,for,method,method,user,type,register,handler,method,handler,method,mapping
AbstractHandlerMethodMapping -> protected void detectHandlerMethods(final Object handler);1362408075;Look for handler methods in a handler._@param handler the bean name of a handler or a handler instance;protected void detectHandlerMethods(final Object handler) {_		Class<?> handlerType = (handler instanceof String) ?_				getApplicationContext().getType((String) handler) : handler.getClass()___		final Class<?> userType = ClassUtils.getUserClass(handlerType)___		Set<Method> methods = HandlerMethodSelector.selectMethods(userType, new MethodFilter() {_			public boolean matches(Method method) {_				return getMappingForMethod(method, userType) != null__			}_		})___		for (Method method : methods) {_			T mapping = getMappingForMethod(method, userType)__			registerHandlerMethod(handler, method, mapping)__		}_	};look,for,handler,methods,in,a,handler,param,handler,the,bean,name,of,a,handler,or,a,handler,instance;protected,void,detect,handler,methods,final,object,handler,class,handler,type,handler,instanceof,string,get,application,context,get,type,string,handler,handler,get,class,final,class,user,type,class,utils,get,user,class,handler,type,set,method,methods,handler,method,selector,select,methods,user,type,new,method,filter,public,boolean,matches,method,method,return,get,mapping,for,method,method,user,type,null,for,method,method,methods,t,mapping,get,mapping,for,method,method,user,type,register,handler,method,handler,method,mapping
AbstractHandlerMethodMapping -> protected void detectHandlerMethods(final Object handler);1368482696;Look for handler methods in a handler._@param handler the bean name of a handler or a handler instance;protected void detectHandlerMethods(final Object handler) {_		Class<?> handlerType = (handler instanceof String) ?_				getApplicationContext().getType((String) handler) : handler.getClass()___		final Class<?> userType = ClassUtils.getUserClass(handlerType)___		Set<Method> methods = HandlerMethodSelector.selectMethods(userType, new MethodFilter() {_			@Override_			public boolean matches(Method method) {_				return getMappingForMethod(method, userType) != null__			}_		})___		for (Method method : methods) {_			T mapping = getMappingForMethod(method, userType)__			registerHandlerMethod(handler, method, mapping)__		}_	};look,for,handler,methods,in,a,handler,param,handler,the,bean,name,of,a,handler,or,a,handler,instance;protected,void,detect,handler,methods,final,object,handler,class,handler,type,handler,instanceof,string,get,application,context,get,type,string,handler,handler,get,class,final,class,user,type,class,utils,get,user,class,handler,type,set,method,methods,handler,method,selector,select,methods,user,type,new,method,filter,override,public,boolean,matches,method,method,return,get,mapping,for,method,method,user,type,null,for,method,method,methods,t,mapping,get,mapping,for,method,method,user,type,register,handler,method,handler,method,mapping
AbstractHandlerMethodMapping -> protected void detectHandlerMethods(final Object handler);1368581529;Look for handler methods in a handler._@param handler the bean name of a handler or a handler instance;protected void detectHandlerMethods(final Object handler) {_		Class<?> handlerType = (handler instanceof String) ?_				getApplicationContext().getType((String) handler) : handler.getClass()___		final Class<?> userType = ClassUtils.getUserClass(handlerType)___		Set<Method> methods = HandlerMethodSelector.selectMethods(userType, new MethodFilter() {_			@Override_			public boolean matches(Method method) {_				return getMappingForMethod(method, userType) != null__			}_		})___		for (Method method : methods) {_			T mapping = getMappingForMethod(method, userType)__			registerHandlerMethod(handler, method, mapping)__		}_	};look,for,handler,methods,in,a,handler,param,handler,the,bean,name,of,a,handler,or,a,handler,instance;protected,void,detect,handler,methods,final,object,handler,class,handler,type,handler,instanceof,string,get,application,context,get,type,string,handler,handler,get,class,final,class,user,type,class,utils,get,user,class,handler,type,set,method,methods,handler,method,selector,select,methods,user,type,new,method,filter,override,public,boolean,matches,method,method,return,get,mapping,for,method,method,user,type,null,for,method,method,methods,t,mapping,get,mapping,for,method,method,user,type,register,handler,method,handler,method,mapping
AbstractHandlerMethodMapping -> protected void detectHandlerMethods(final Object handler);1382665849;Look for handler methods in a handler._@param handler the bean name of a handler or a handler instance;protected void detectHandlerMethods(final Object handler) {_		Class<?> handlerType = (handler instanceof String) ?_				getApplicationContext().getType((String) handler) : handler.getClass()___		final Class<?> userType = ClassUtils.getUserClass(handlerType)___		Set<Method> methods = HandlerMethodSelector.selectMethods(userType, new MethodFilter() {_			@Override_			public boolean matches(Method method) {_				return getMappingForMethod(method, userType) != null__			}_		})___		for (Method method : methods) {_			T mapping = getMappingForMethod(method, userType)__			registerHandlerMethod(handler, method, mapping)__		}_	};look,for,handler,methods,in,a,handler,param,handler,the,bean,name,of,a,handler,or,a,handler,instance;protected,void,detect,handler,methods,final,object,handler,class,handler,type,handler,instanceof,string,get,application,context,get,type,string,handler,handler,get,class,final,class,user,type,class,utils,get,user,class,handler,type,set,method,methods,handler,method,selector,select,methods,user,type,new,method,filter,override,public,boolean,matches,method,method,return,get,mapping,for,method,method,user,type,null,for,method,method,methods,t,mapping,get,mapping,for,method,method,user,type,register,handler,method,handler,method,mapping
AbstractHandlerMethodMapping -> protected void detectHandlerMethods(final Object handler);1392160296;Look for handler methods in a handler._<p>Delegates to {@link #detectHandlerMethods(Object, Class)} for actual processing._@param handler the bean name of a handler or a handler instance;protected void detectHandlerMethods(final Object handler) {_		Class<?> handlerType =_				(handler instanceof String ? getApplicationContext().getType((String) handler) : handler.getClass())__		detectHandlerMethods(handler, handlerType)__	};look,for,handler,methods,in,a,handler,p,delegates,to,link,detect,handler,methods,object,class,for,actual,processing,param,handler,the,bean,name,of,a,handler,or,a,handler,instance;protected,void,detect,handler,methods,final,object,handler,class,handler,type,handler,instanceof,string,get,application,context,get,type,string,handler,handler,get,class,detect,handler,methods,handler,handler,type
AbstractHandlerMethodMapping -> protected void detectHandlerMethods(final Object handler);1392337816;Look for handler methods in a handler._@param handler the bean name of a handler or a handler instance;protected void detectHandlerMethods(final Object handler) {_		Class<?> handlerType =_				(handler instanceof String ? getApplicationContext().getType((String) handler) : handler.getClass())___		final Class<?> userType = ClassUtils.getUserClass(handlerType)__		Set<Method> methods = HandlerMethodSelector.selectMethods(userType, new MethodFilter() {_			@Override_			public boolean matches(Method method) {_				return getMappingForMethod(method, userType) != null__			}_		})___		for (Method method : methods) {_			T mapping = getMappingForMethod(method, userType)__			registerHandlerMethod(handler, method, mapping)__		}_	};look,for,handler,methods,in,a,handler,param,handler,the,bean,name,of,a,handler,or,a,handler,instance;protected,void,detect,handler,methods,final,object,handler,class,handler,type,handler,instanceof,string,get,application,context,get,type,string,handler,handler,get,class,final,class,user,type,class,utils,get,user,class,handler,type,set,method,methods,handler,method,selector,select,methods,user,type,new,method,filter,override,public,boolean,matches,method,method,return,get,mapping,for,method,method,user,type,null,for,method,method,methods,t,mapping,get,mapping,for,method,method,user,type,register,handler,method,handler,method,mapping
AbstractHandlerMethodMapping -> protected void detectHandlerMethods(final Object handler);1392407320;Look for handler methods in a handler._@param handler the bean name of a handler or a handler instance;protected void detectHandlerMethods(final Object handler) {_		Class<?> handlerType =_				(handler instanceof String ? getApplicationContext().getType((String) handler) : handler.getClass())___		_		final Map<Method, T> mappings = new IdentityHashMap<Method, T>()__		final Class<?> userType = ClassUtils.getUserClass(handlerType)___		Set<Method> methods = HandlerMethodSelector.selectMethods(userType, new MethodFilter() {_			@Override_			public boolean matches(Method method) {_				T mapping = getMappingForMethod(method, userType)__				if (mapping != null) {_					mappings.put(method, mapping)__					return true__				}_				else {_					return false__				}_			}_		})___		for (Method method : methods) {_			registerHandlerMethod(handler, method, mappings.get(method))__		}_	};look,for,handler,methods,in,a,handler,param,handler,the,bean,name,of,a,handler,or,a,handler,instance;protected,void,detect,handler,methods,final,object,handler,class,handler,type,handler,instanceof,string,get,application,context,get,type,string,handler,handler,get,class,final,map,method,t,mappings,new,identity,hash,map,method,t,final,class,user,type,class,utils,get,user,class,handler,type,set,method,methods,handler,method,selector,select,methods,user,type,new,method,filter,override,public,boolean,matches,method,method,t,mapping,get,mapping,for,method,method,user,type,if,mapping,null,mappings,put,method,mapping,return,true,else,return,false,for,method,method,methods,register,handler,method,handler,method,mappings,get,method
AbstractHandlerMethodMapping -> protected void detectHandlerMethods(final Object handler);1395655323;Look for handler methods in a handler._@param handler the bean name of a handler or a handler instance;protected void detectHandlerMethods(final Object handler) {_		Class<?> handlerType =_				(handler instanceof String ? getApplicationContext().getType((String) handler) : handler.getClass())___		_		final Map<Method, T> mappings = new IdentityHashMap<Method, T>()__		final Class<?> userType = ClassUtils.getUserClass(handlerType)___		Set<Method> methods = HandlerMethodSelector.selectMethods(userType, new MethodFilter() {_			@Override_			public boolean matches(Method method) {_				T mapping = getMappingForMethod(method, userType)__				if (mapping != null) {_					mappings.put(method, mapping)__					return true__				}_				else {_					return false__				}_			}_		})___		for (Method method : methods) {_			registerHandlerMethod(handler, method, mappings.get(method))__		}_	};look,for,handler,methods,in,a,handler,param,handler,the,bean,name,of,a,handler,or,a,handler,instance;protected,void,detect,handler,methods,final,object,handler,class,handler,type,handler,instanceof,string,get,application,context,get,type,string,handler,handler,get,class,final,map,method,t,mappings,new,identity,hash,map,method,t,final,class,user,type,class,utils,get,user,class,handler,type,set,method,methods,handler,method,selector,select,methods,user,type,new,method,filter,override,public,boolean,matches,method,method,t,mapping,get,mapping,for,method,method,user,type,if,mapping,null,mappings,put,method,mapping,return,true,else,return,false,for,method,method,methods,register,handler,method,handler,method,mappings,get,method
AbstractHandlerMethodMapping -> protected void detectHandlerMethods(final Object handler);1399404473;Look for handler methods in a handler._@param handler the bean name of a handler or a handler instance;protected void detectHandlerMethods(final Object handler) {_		Class<?> handlerType =_				(handler instanceof String ? getApplicationContext().getType((String) handler) : handler.getClass())___		_		final Map<Method, T> mappings = new IdentityHashMap<Method, T>()__		final Class<?> userType = ClassUtils.getUserClass(handlerType)___		Set<Method> methods = HandlerMethodSelector.selectMethods(userType, new MethodFilter() {_			@Override_			public boolean matches(Method method) {_				T mapping = getMappingForMethod(method, userType)__				if (mapping != null) {_					mappings.put(method, mapping)__					return true__				}_				else {_					return false__				}_			}_		})___		for (Method method : methods) {_			registerHandlerMethod(handler, method, mappings.get(method))__		}_	};look,for,handler,methods,in,a,handler,param,handler,the,bean,name,of,a,handler,or,a,handler,instance;protected,void,detect,handler,methods,final,object,handler,class,handler,type,handler,instanceof,string,get,application,context,get,type,string,handler,handler,get,class,final,map,method,t,mappings,new,identity,hash,map,method,t,final,class,user,type,class,utils,get,user,class,handler,type,set,method,methods,handler,method,selector,select,methods,user,type,new,method,filter,override,public,boolean,matches,method,method,t,mapping,get,mapping,for,method,method,user,type,if,mapping,null,mappings,put,method,mapping,return,true,else,return,false,for,method,method,methods,register,handler,method,handler,method,mappings,get,method
AbstractHandlerMethodMapping -> protected void detectHandlerMethods(final Object handler);1426869344;Look for handler methods in a handler._@param handler the bean name of a handler or a handler instance;protected void detectHandlerMethods(final Object handler) {_		Class<?> handlerType =_				(handler instanceof String ? getApplicationContext().getType((String) handler) : handler.getClass())___		_		final Map<Method, T> mappings = new IdentityHashMap<Method, T>()__		final Class<?> userType = ClassUtils.getUserClass(handlerType)___		Set<Method> methods = HandlerMethodSelector.selectMethods(userType, new MethodFilter() {_			@Override_			public boolean matches(Method method) {_				T mapping = getMappingForMethod(method, userType)__				if (mapping != null) {_					mappings.put(method, mapping)__					return true__				}_				else {_					return false__				}_			}_		})___		for (Method method : methods) {_			registerHandlerMethod(handler, method, mappings.get(method))__		}_	};look,for,handler,methods,in,a,handler,param,handler,the,bean,name,of,a,handler,or,a,handler,instance;protected,void,detect,handler,methods,final,object,handler,class,handler,type,handler,instanceof,string,get,application,context,get,type,string,handler,handler,get,class,final,map,method,t,mappings,new,identity,hash,map,method,t,final,class,user,type,class,utils,get,user,class,handler,type,set,method,methods,handler,method,selector,select,methods,user,type,new,method,filter,override,public,boolean,matches,method,method,t,mapping,get,mapping,for,method,method,user,type,if,mapping,null,mappings,put,method,mapping,return,true,else,return,false,for,method,method,methods,register,handler,method,handler,method,mappings,get,method
AbstractHandlerMethodMapping -> protected void detectHandlerMethods(final Object handler);1427240641;Look for handler methods in a handler._@param handler the bean name of a handler or a handler instance;protected void detectHandlerMethods(final Object handler) {_		Class<?> handlerType =_				(handler instanceof String ? getApplicationContext().getType((String) handler) : handler.getClass())___		_		final Map<Method, T> mappings = new IdentityHashMap<Method, T>()__		final Class<?> userType = ClassUtils.getUserClass(handlerType)___		Set<Method> methods = HandlerMethodSelector.selectMethods(userType, new MethodFilter() {_			@Override_			public boolean matches(Method method) {_				T mapping = getMappingForMethod(method, userType)__				if (mapping != null) {_					mappings.put(method, mapping)__					return true__				}_				else {_					return false__				}_			}_		})___		for (Method method : methods) {_			registerHandlerMethod(handler, method, mappings.get(method))__		}_	};look,for,handler,methods,in,a,handler,param,handler,the,bean,name,of,a,handler,or,a,handler,instance;protected,void,detect,handler,methods,final,object,handler,class,handler,type,handler,instanceof,string,get,application,context,get,type,string,handler,handler,get,class,final,map,method,t,mappings,new,identity,hash,map,method,t,final,class,user,type,class,utils,get,user,class,handler,type,set,method,methods,handler,method,selector,select,methods,user,type,new,method,filter,override,public,boolean,matches,method,method,t,mapping,get,mapping,for,method,method,user,type,if,mapping,null,mappings,put,method,mapping,return,true,else,return,false,for,method,method,methods,register,handler,method,handler,method,mappings,get,method
AbstractHandlerMethodMapping -> protected void detectHandlerMethods(final Object handler);1427983931;Look for handler methods in a handler._@param handler the bean name of a handler or a handler instance;protected void detectHandlerMethods(final Object handler) {_		Class<?> handlerType =_				(handler instanceof String ? getApplicationContext().getType((String) handler) : handler.getClass())___		_		final Map<Method, T> mappings = new IdentityHashMap<Method, T>()__		final Class<?> userType = ClassUtils.getUserClass(handlerType)___		Set<Method> methods = HandlerMethodSelector.selectMethods(userType, new MethodFilter() {_			@Override_			public boolean matches(Method method) {_				T mapping = getMappingForMethod(method, userType)__				if (mapping != null) {_					mappings.put(method, mapping)__					return true__				}_				else {_					return false__				}_			}_		})___		for (Method method : methods) {_			registerHandlerMethod(handler, method, mappings.get(method))__		}_	};look,for,handler,methods,in,a,handler,param,handler,the,bean,name,of,a,handler,or,a,handler,instance;protected,void,detect,handler,methods,final,object,handler,class,handler,type,handler,instanceof,string,get,application,context,get,type,string,handler,handler,get,class,final,map,method,t,mappings,new,identity,hash,map,method,t,final,class,user,type,class,utils,get,user,class,handler,type,set,method,methods,handler,method,selector,select,methods,user,type,new,method,filter,override,public,boolean,matches,method,method,t,mapping,get,mapping,for,method,method,user,type,if,mapping,null,mappings,put,method,mapping,return,true,else,return,false,for,method,method,methods,register,handler,method,handler,method,mappings,get,method
AbstractHandlerMethodMapping -> protected void detectHandlerMethods(final Object handler);1430734105;Look for handler methods in a handler._@param handler the bean name of a handler or a handler instance;protected void detectHandlerMethods(final Object handler) {_		Class<?> handlerType =_				(handler instanceof String ? getApplicationContext().getType((String) handler) : handler.getClass())___		_		final Map<Method, T> mappings = new IdentityHashMap<Method, T>()__		final Class<?> userType = ClassUtils.getUserClass(handlerType)___		Set<Method> methods = HandlerMethodSelector.selectMethods(userType, new MethodFilter() {_			@Override_			public boolean matches(Method method) {_				T mapping = getMappingForMethod(method, userType)__				if (mapping != null) {_					mappings.put(method, mapping)__					return true__				}_				else {_					return false__				}_			}_		})___		for (Method method : methods) {_			registerHandlerMethod(handler, method, mappings.get(method))__		}_	};look,for,handler,methods,in,a,handler,param,handler,the,bean,name,of,a,handler,or,a,handler,instance;protected,void,detect,handler,methods,final,object,handler,class,handler,type,handler,instanceof,string,get,application,context,get,type,string,handler,handler,get,class,final,map,method,t,mappings,new,identity,hash,map,method,t,final,class,user,type,class,utils,get,user,class,handler,type,set,method,methods,handler,method,selector,select,methods,user,type,new,method,filter,override,public,boolean,matches,method,method,t,mapping,get,mapping,for,method,method,user,type,if,mapping,null,mappings,put,method,mapping,return,true,else,return,false,for,method,method,methods,register,handler,method,handler,method,mappings,get,method
AbstractHandlerMethodMapping -> protected void detectHandlerMethods(final Object handler);1430734105;Look for handler methods in a handler._@param handler the bean name of a handler or a handler instance;protected void detectHandlerMethods(final Object handler) {_		Class<?> handlerType =_				(handler instanceof String ? getApplicationContext().getType((String) handler) : handler.getClass())___		_		final Map<Method, T> mappings = new IdentityHashMap<Method, T>()__		final Class<?> userType = ClassUtils.getUserClass(handlerType)___		Set<Method> methods = HandlerMethodSelector.selectMethods(userType, new MethodFilter() {_			@Override_			public boolean matches(Method method) {_				T mapping = getMappingForMethod(method, userType)__				if (mapping != null) {_					mappings.put(method, mapping)__					return true__				}_				else {_					return false__				}_			}_		})___		for (Method method : methods) {_			registerHandlerMethod(handler, method, mappings.get(method))__		}_	};look,for,handler,methods,in,a,handler,param,handler,the,bean,name,of,a,handler,or,a,handler,instance;protected,void,detect,handler,methods,final,object,handler,class,handler,type,handler,instanceof,string,get,application,context,get,type,string,handler,handler,get,class,final,map,method,t,mappings,new,identity,hash,map,method,t,final,class,user,type,class,utils,get,user,class,handler,type,set,method,methods,handler,method,selector,select,methods,user,type,new,method,filter,override,public,boolean,matches,method,method,t,mapping,get,mapping,for,method,method,user,type,if,mapping,null,mappings,put,method,mapping,return,true,else,return,false,for,method,method,methods,register,handler,method,handler,method,mappings,get,method
AbstractHandlerMethodMapping -> protected void detectHandlerMethods(final Object handler);1430734106;Look for handler methods in a handler._@param handler the bean name of a handler or a handler instance;protected void detectHandlerMethods(final Object handler) {_		Class<?> handlerType =_				(handler instanceof String ? getApplicationContext().getType((String) handler) : handler.getClass())___		_		final Map<Method, T> mappings = new IdentityHashMap<Method, T>()__		final Class<?> userType = ClassUtils.getUserClass(handlerType)___		Set<Method> methods = HandlerMethodSelector.selectMethods(userType, new MethodFilter() {_			@Override_			public boolean matches(Method method) {_				T mapping = getMappingForMethod(method, userType)__				if (mapping != null) {_					mappings.put(method, mapping)__					return true__				}_				else {_					return false__				}_			}_		})___		for (Method method : methods) {_			registerHandlerMethod(handler, method, mappings.get(method))__		}_	};look,for,handler,methods,in,a,handler,param,handler,the,bean,name,of,a,handler,or,a,handler,instance;protected,void,detect,handler,methods,final,object,handler,class,handler,type,handler,instanceof,string,get,application,context,get,type,string,handler,handler,get,class,final,map,method,t,mappings,new,identity,hash,map,method,t,final,class,user,type,class,utils,get,user,class,handler,type,set,method,methods,handler,method,selector,select,methods,user,type,new,method,filter,override,public,boolean,matches,method,method,t,mapping,get,mapping,for,method,method,user,type,if,mapping,null,mappings,put,method,mapping,return,true,else,return,false,for,method,method,methods,register,handler,method,handler,method,mappings,get,method
AbstractHandlerMethodMapping -> protected void detectHandlerMethods(final Object handler);1430774689;Look for handler methods in a handler._@param handler the bean name of a handler or a handler instance;protected void detectHandlerMethods(final Object handler) {_		Class<?> handlerType =_				(handler instanceof String ? getApplicationContext().getType((String) handler) : handler.getClass())___		_		final Map<Method, T> mappings = new IdentityHashMap<Method, T>()__		final Class<?> userType = ClassUtils.getUserClass(handlerType)___		Set<Method> methods = HandlerMethodSelector.selectMethods(userType, new MethodFilter() {_			@Override_			public boolean matches(Method method) {_				T mapping = getMappingForMethod(method, userType)__				if (mapping != null) {_					mappings.put(method, mapping)__					return true__				}_				else {_					return false__				}_			}_		})___		for (Method method : methods) {_			registerHandlerMethod(handler, method, mappings.get(method))__		}_	};look,for,handler,methods,in,a,handler,param,handler,the,bean,name,of,a,handler,or,a,handler,instance;protected,void,detect,handler,methods,final,object,handler,class,handler,type,handler,instanceof,string,get,application,context,get,type,string,handler,handler,get,class,final,map,method,t,mappings,new,identity,hash,map,method,t,final,class,user,type,class,utils,get,user,class,handler,type,set,method,methods,handler,method,selector,select,methods,user,type,new,method,filter,override,public,boolean,matches,method,method,t,mapping,get,mapping,for,method,method,user,type,if,mapping,null,mappings,put,method,mapping,return,true,else,return,false,for,method,method,methods,register,handler,method,handler,method,mappings,get,method
AbstractHandlerMethodMapping -> protected void detectHandlerMethods(final Object handler);1430844966;Look for handler methods in a handler._@param handler the bean name of a handler or a handler instance;protected void detectHandlerMethods(final Object handler) {_		Class<?> handlerType =_				(handler instanceof String ? getApplicationContext().getType((String) handler) : handler.getClass())___		_		final Map<Method, T> mappings = new IdentityHashMap<Method, T>()__		final Class<?> userType = ClassUtils.getUserClass(handlerType)___		Set<Method> methods = HandlerMethodSelector.selectMethods(userType, new MethodFilter() {_			@Override_			public boolean matches(Method method) {_				T mapping = getMappingForMethod(method, userType)__				if (mapping != null) {_					mappings.put(method, mapping)__					return true__				}_				else {_					return false__				}_			}_		})___		for (Method method : methods) {_			registerHandlerMethod(handler, method, mappings.get(method))__		}_	};look,for,handler,methods,in,a,handler,param,handler,the,bean,name,of,a,handler,or,a,handler,instance;protected,void,detect,handler,methods,final,object,handler,class,handler,type,handler,instanceof,string,get,application,context,get,type,string,handler,handler,get,class,final,map,method,t,mappings,new,identity,hash,map,method,t,final,class,user,type,class,utils,get,user,class,handler,type,set,method,methods,handler,method,selector,select,methods,user,type,new,method,filter,override,public,boolean,matches,method,method,t,mapping,get,mapping,for,method,method,user,type,if,mapping,null,mappings,put,method,mapping,return,true,else,return,false,for,method,method,methods,register,handler,method,handler,method,mappings,get,method
AbstractHandlerMethodMapping -> protected void detectHandlerMethods(final Object handler);1430844967;Look for handler methods in a handler._@param handler the bean name of a handler or a handler instance;protected void detectHandlerMethods(final Object handler) {_		Class<?> handlerType =_				(handler instanceof String ? getApplicationContext().getType((String) handler) : handler.getClass())___		_		final Map<Method, T> mappings = new IdentityHashMap<Method, T>()__		final Class<?> userType = ClassUtils.getUserClass(handlerType)___		Set<Method> methods = HandlerMethodSelector.selectMethods(userType, new MethodFilter() {_			@Override_			public boolean matches(Method method) {_				T mapping = getMappingForMethod(method, userType)__				if (mapping != null) {_					mappings.put(method, mapping)__					return true__				}_				else {_					return false__				}_			}_		})___		for (Method method : methods) {_			registerHandlerMethod(handler, method, mappings.get(method))__		}_	};look,for,handler,methods,in,a,handler,param,handler,the,bean,name,of,a,handler,or,a,handler,instance;protected,void,detect,handler,methods,final,object,handler,class,handler,type,handler,instanceof,string,get,application,context,get,type,string,handler,handler,get,class,final,map,method,t,mappings,new,identity,hash,map,method,t,final,class,user,type,class,utils,get,user,class,handler,type,set,method,methods,handler,method,selector,select,methods,user,type,new,method,filter,override,public,boolean,matches,method,method,t,mapping,get,mapping,for,method,method,user,type,if,mapping,null,mappings,put,method,mapping,return,true,else,return,false,for,method,method,methods,register,handler,method,handler,method,mappings,get,method
AbstractHandlerMethodMapping -> protected void detectHandlerMethods(final Object handler);1431730371;Look for handler methods in a handler._@param handler the bean name of a handler or a handler instance;protected void detectHandlerMethods(final Object handler) {_		Class<?> handlerType =_				(handler instanceof String ? getApplicationContext().getType((String) handler) : handler.getClass())___		_		final Map<Method, T> mappings = new IdentityHashMap<Method, T>()__		final Class<?> userType = ClassUtils.getUserClass(handlerType)___		Set<Method> methods = HandlerMethodSelector.selectMethods(userType, new MethodFilter() {_			@Override_			public boolean matches(Method method) {_				T mapping = getMappingForMethod(method, userType)__				if (mapping != null) {_					mappings.put(method, mapping)__					return true__				}_				else {_					return false__				}_			}_		})___		for (Method method : methods) {_			registerHandlerMethod(handler, method, mappings.get(method))__		}_	};look,for,handler,methods,in,a,handler,param,handler,the,bean,name,of,a,handler,or,a,handler,instance;protected,void,detect,handler,methods,final,object,handler,class,handler,type,handler,instanceof,string,get,application,context,get,type,string,handler,handler,get,class,final,map,method,t,mappings,new,identity,hash,map,method,t,final,class,user,type,class,utils,get,user,class,handler,type,set,method,methods,handler,method,selector,select,methods,user,type,new,method,filter,override,public,boolean,matches,method,method,t,mapping,get,mapping,for,method,method,user,type,if,mapping,null,mappings,put,method,mapping,return,true,else,return,false,for,method,method,methods,register,handler,method,handler,method,mappings,get,method
AbstractHandlerMethodMapping -> protected void detectHandlerMethods(final Object handler);1439294371;Look for handler methods in a handler._@param handler the bean name of a handler or a handler instance;protected void detectHandlerMethods(final Object handler) {_		Class<?> handlerType =_				(handler instanceof String ? getApplicationContext().getType((String) handler) : handler.getClass())___		_		final Map<Method, T> mappings = new IdentityHashMap<Method, T>()__		final Class<?> userType = ClassUtils.getUserClass(handlerType)___		Set<Method> methods = HandlerMethodSelector.selectMethods(userType, new MethodFilter() {_			@Override_			public boolean matches(Method method) {_				T mapping = getMappingForMethod(method, userType)__				if (mapping != null) {_					mappings.put(method, mapping)__					return true__				}_				else {_					return false__				}_			}_		})___		for (Method method : methods) {_			registerHandlerMethod(handler, method, mappings.get(method))__		}_	};look,for,handler,methods,in,a,handler,param,handler,the,bean,name,of,a,handler,or,a,handler,instance;protected,void,detect,handler,methods,final,object,handler,class,handler,type,handler,instanceof,string,get,application,context,get,type,string,handler,handler,get,class,final,map,method,t,mappings,new,identity,hash,map,method,t,final,class,user,type,class,utils,get,user,class,handler,type,set,method,methods,handler,method,selector,select,methods,user,type,new,method,filter,override,public,boolean,matches,method,method,t,mapping,get,mapping,for,method,method,user,type,if,mapping,null,mappings,put,method,mapping,return,true,else,return,false,for,method,method,methods,register,handler,method,handler,method,mappings,get,method
AbstractHandlerMethodMapping -> protected void detectHandlerMethods(final Object handler);1447077465;Look for handler methods in a handler._@param handler the bean name of a handler or a handler instance;protected void detectHandlerMethods(final Object handler) {_		Class<?> handlerType = (handler instanceof String ?_				getApplicationContext().getType((String) handler) : handler.getClass())__		final Class<?> userType = ClassUtils.getUserClass(handlerType)___		Map<Method, T> methods = MethodIntrospector.selectMethods(userType,_				new MethodIntrospector.MetadataLookup<T>() {_					@Override_					public T inspect(Method method) {_						return getMappingForMethod(method, userType)__					}_				})___		if (logger.isDebugEnabled()) {_			logger.debug(methods.size() + " request handler methods found on " + userType + ": " + methods)__		}_		for (Map.Entry<Method, T> entry : methods.entrySet()) {_			registerHandlerMethod(handler, entry.getKey(), entry.getValue())__		}_	};look,for,handler,methods,in,a,handler,param,handler,the,bean,name,of,a,handler,or,a,handler,instance;protected,void,detect,handler,methods,final,object,handler,class,handler,type,handler,instanceof,string,get,application,context,get,type,string,handler,handler,get,class,final,class,user,type,class,utils,get,user,class,handler,type,map,method,t,methods,method,introspector,select,methods,user,type,new,method,introspector,metadata,lookup,t,override,public,t,inspect,method,method,return,get,mapping,for,method,method,user,type,if,logger,is,debug,enabled,logger,debug,methods,size,request,handler,methods,found,on,user,type,methods,for,map,entry,method,t,entry,methods,entry,set,register,handler,method,handler,entry,get,key,entry,get,value
AbstractHandlerMethodMapping -> protected void detectHandlerMethods(final Object handler);1448483163;Look for handler methods in a handler._@param handler the bean name of a handler or a handler instance;protected void detectHandlerMethods(final Object handler) {_		Class<?> handlerType = (handler instanceof String ?_				getApplicationContext().getType((String) handler) : handler.getClass())__		final Class<?> userType = ClassUtils.getUserClass(handlerType)___		Map<Method, T> methods = MethodIntrospector.selectMethods(userType,_				new MethodIntrospector.MetadataLookup<T>() {_					@Override_					public T inspect(Method method) {_						return getMappingForMethod(method, userType)__					}_				})___		if (logger.isDebugEnabled()) {_			logger.debug(methods.size() + " request handler methods found on " + userType + ": " + methods)__		}_		for (Map.Entry<Method, T> entry : methods.entrySet()) {_			registerHandlerMethod(handler, entry.getKey(), entry.getValue())__		}_	};look,for,handler,methods,in,a,handler,param,handler,the,bean,name,of,a,handler,or,a,handler,instance;protected,void,detect,handler,methods,final,object,handler,class,handler,type,handler,instanceof,string,get,application,context,get,type,string,handler,handler,get,class,final,class,user,type,class,utils,get,user,class,handler,type,map,method,t,methods,method,introspector,select,methods,user,type,new,method,introspector,metadata,lookup,t,override,public,t,inspect,method,method,return,get,mapping,for,method,method,user,type,if,logger,is,debug,enabled,logger,debug,methods,size,request,handler,methods,found,on,user,type,methods,for,map,entry,method,t,entry,methods,entry,set,register,handler,method,handler,entry,get,key,entry,get,value
AbstractHandlerMethodMapping -> protected void detectHandlerMethods(final Object handler);1452685925;Look for handler methods in a handler._@param handler the bean name of a handler or a handler instance;protected void detectHandlerMethods(final Object handler) {_		Class<?> handlerType = (handler instanceof String ?_				getApplicationContext().getType((String) handler) : handler.getClass())__		final Class<?> userType = ClassUtils.getUserClass(handlerType)___		Map<Method, T> methods = MethodIntrospector.selectMethods(userType,_				new MethodIntrospector.MetadataLookup<T>() {_					@Override_					public T inspect(Method method) {_						return getMappingForMethod(method, userType)__					}_				})___		if (logger.isDebugEnabled()) {_			logger.debug(methods.size() + " request handler methods found on " + userType + ": " + methods)__		}_		for (Map.Entry<Method, T> entry : methods.entrySet()) {_			registerHandlerMethod(handler, entry.getKey(), entry.getValue())__		}_	};look,for,handler,methods,in,a,handler,param,handler,the,bean,name,of,a,handler,or,a,handler,instance;protected,void,detect,handler,methods,final,object,handler,class,handler,type,handler,instanceof,string,get,application,context,get,type,string,handler,handler,get,class,final,class,user,type,class,utils,get,user,class,handler,type,map,method,t,methods,method,introspector,select,methods,user,type,new,method,introspector,metadata,lookup,t,override,public,t,inspect,method,method,return,get,mapping,for,method,method,user,type,if,logger,is,debug,enabled,logger,debug,methods,size,request,handler,methods,found,on,user,type,methods,for,map,entry,method,t,entry,methods,entry,set,register,handler,method,handler,entry,get,key,entry,get,value
AbstractHandlerMethodMapping -> protected void detectHandlerMethods(final Object handler);1452873718;Look for handler methods in a handler._@param handler the bean name of a handler or a handler instance;protected void detectHandlerMethods(final Object handler) {_		Class<?> handlerType = (handler instanceof String ?_				getApplicationContext().getType((String) handler) : handler.getClass())__		final Class<?> userType = ClassUtils.getUserClass(handlerType)___		Map<Method, T> methods = MethodIntrospector.selectMethods(userType,_				new MethodIntrospector.MetadataLookup<T>() {_					@Override_					public T inspect(Method method) {_						return getMappingForMethod(method, userType)__					}_				})___		if (logger.isDebugEnabled()) {_			logger.debug(methods.size() + " request handler methods found on " + userType + ": " + methods)__		}_		for (Map.Entry<Method, T> entry : methods.entrySet()) {_			Method invocableMethod = AopUtils.selectInvocableMethod(entry.getKey(), userType)__			T mapping = entry.getValue()__			registerHandlerMethod(handler, invocableMethod, mapping)__		}_	};look,for,handler,methods,in,a,handler,param,handler,the,bean,name,of,a,handler,or,a,handler,instance;protected,void,detect,handler,methods,final,object,handler,class,handler,type,handler,instanceof,string,get,application,context,get,type,string,handler,handler,get,class,final,class,user,type,class,utils,get,user,class,handler,type,map,method,t,methods,method,introspector,select,methods,user,type,new,method,introspector,metadata,lookup,t,override,public,t,inspect,method,method,return,get,mapping,for,method,method,user,type,if,logger,is,debug,enabled,logger,debug,methods,size,request,handler,methods,found,on,user,type,methods,for,map,entry,method,t,entry,methods,entry,set,method,invocable,method,aop,utils,select,invocable,method,entry,get,key,user,type,t,mapping,entry,get,value,register,handler,method,handler,invocable,method,mapping
AbstractHandlerMethodMapping -> protected void detectHandlerMethods(final Object handler);1453843788;Look for handler methods in a handler._@param handler the bean name of a handler or a handler instance;protected void detectHandlerMethods(final Object handler) {_		Class<?> handlerType = (handler instanceof String ?_				getApplicationContext().getType((String) handler) : handler.getClass())__		final Class<?> userType = ClassUtils.getUserClass(handlerType)___		Map<Method, T> methods = MethodIntrospector.selectMethods(userType,_				new MethodIntrospector.MetadataLookup<T>() {_					@Override_					public T inspect(Method method) {_						return getMappingForMethod(method, userType)__					}_				})___		if (logger.isDebugEnabled()) {_			logger.debug(methods.size() + " request handler methods found on " + userType + ": " + methods)__		}_		for (Map.Entry<Method, T> entry : methods.entrySet()) {_			Method invocableMethod = AopUtils.selectInvocableMethod(entry.getKey(), userType)__			T mapping = entry.getValue()__			registerHandlerMethod(handler, invocableMethod, mapping)__		}_	};look,for,handler,methods,in,a,handler,param,handler,the,bean,name,of,a,handler,or,a,handler,instance;protected,void,detect,handler,methods,final,object,handler,class,handler,type,handler,instanceof,string,get,application,context,get,type,string,handler,handler,get,class,final,class,user,type,class,utils,get,user,class,handler,type,map,method,t,methods,method,introspector,select,methods,user,type,new,method,introspector,metadata,lookup,t,override,public,t,inspect,method,method,return,get,mapping,for,method,method,user,type,if,logger,is,debug,enabled,logger,debug,methods,size,request,handler,methods,found,on,user,type,methods,for,map,entry,method,t,entry,methods,entry,set,method,invocable,method,aop,utils,select,invocable,method,entry,get,key,user,type,t,mapping,entry,get,value,register,handler,method,handler,invocable,method,mapping
AbstractHandlerMethodMapping -> protected void detectHandlerMethods(final Object handler);1467730834;Look for handler methods in a handler._@param handler the bean name of a handler or a handler instance;protected void detectHandlerMethods(final Object handler) {_		Class<?> handlerType = (handler instanceof String ?_				getApplicationContext().getType((String) handler) : handler.getClass())__		final Class<?> userType = ClassUtils.getUserClass(handlerType)___		Map<Method, T> methods = MethodIntrospector.selectMethods(userType,_				new MethodIntrospector.MetadataLookup<T>() {_					@Override_					public T inspect(Method method) {_						return getMappingForMethod(method, userType)__					}_				})___		if (logger.isDebugEnabled()) {_			logger.debug(methods.size() + " request handler methods found on " + userType + ": " + methods)__		}_		for (Map.Entry<Method, T> entry : methods.entrySet()) {_			Method invocableMethod = AopUtils.selectInvocableMethod(entry.getKey(), userType)__			T mapping = entry.getValue()__			registerHandlerMethod(handler, invocableMethod, mapping)__		}_	};look,for,handler,methods,in,a,handler,param,handler,the,bean,name,of,a,handler,or,a,handler,instance;protected,void,detect,handler,methods,final,object,handler,class,handler,type,handler,instanceof,string,get,application,context,get,type,string,handler,handler,get,class,final,class,user,type,class,utils,get,user,class,handler,type,map,method,t,methods,method,introspector,select,methods,user,type,new,method,introspector,metadata,lookup,t,override,public,t,inspect,method,method,return,get,mapping,for,method,method,user,type,if,logger,is,debug,enabled,logger,debug,methods,size,request,handler,methods,found,on,user,type,methods,for,map,entry,method,t,entry,methods,entry,set,method,invocable,method,aop,utils,select,invocable,method,entry,get,key,user,type,t,mapping,entry,get,value,register,handler,method,handler,invocable,method,mapping
AbstractHandlerMethodMapping -> protected void detectHandlerMethods(final Object handler);1468417354;Look for handler methods in a handler._@param handler the bean name of a handler or a handler instance;protected void detectHandlerMethods(final Object handler) {_		Class<?> handlerType = (handler instanceof String ?_				getApplicationContext().getType((String) handler) : handler.getClass())__		final Class<?> userType = ClassUtils.getUserClass(handlerType)___		Map<Method, T> methods = MethodIntrospector.selectMethods(userType,_				new MethodIntrospector.MetadataLookup<T>() {_					@Override_					public T inspect(Method method) {_						try {_							return getMappingForMethod(method, userType)__						}_						catch (Throwable ex) {_							throw new IllegalStateException("Invalid mapping on handler class [" +_									handlerType.getName() + "]: " + method, ex)__						}_					}_				})___		if (logger.isDebugEnabled()) {_			logger.debug(methods.size() + " request handler methods found on " + userType + ": " + methods)__		}_		for (Map.Entry<Method, T> entry : methods.entrySet()) {_			Method invocableMethod = AopUtils.selectInvocableMethod(entry.getKey(), userType)__			T mapping = entry.getValue()__			registerHandlerMethod(handler, invocableMethod, mapping)__		}_	};look,for,handler,methods,in,a,handler,param,handler,the,bean,name,of,a,handler,or,a,handler,instance;protected,void,detect,handler,methods,final,object,handler,class,handler,type,handler,instanceof,string,get,application,context,get,type,string,handler,handler,get,class,final,class,user,type,class,utils,get,user,class,handler,type,map,method,t,methods,method,introspector,select,methods,user,type,new,method,introspector,metadata,lookup,t,override,public,t,inspect,method,method,try,return,get,mapping,for,method,method,user,type,catch,throwable,ex,throw,new,illegal,state,exception,invalid,mapping,on,handler,class,handler,type,get,name,method,ex,if,logger,is,debug,enabled,logger,debug,methods,size,request,handler,methods,found,on,user,type,methods,for,map,entry,method,t,entry,methods,entry,set,method,invocable,method,aop,utils,select,invocable,method,entry,get,key,user,type,t,mapping,entry,get,value,register,handler,method,handler,invocable,method,mapping
AbstractHandlerMethodMapping -> protected void detectHandlerMethods(final Object handler);1468596479;Look for handler methods in a handler._@param handler the bean name of a handler or a handler instance;protected void detectHandlerMethods(final Object handler) {_		Class<?> handlerType = (handler instanceof String ?_				getApplicationContext().getType((String) handler) : handler.getClass())__		final Class<?> userType = ClassUtils.getUserClass(handlerType)___		Map<Method, T> methods = MethodIntrospector.selectMethods(userType,_				new MethodIntrospector.MetadataLookup<T>() {_					@Override_					public T inspect(Method method) {_						try {_							return getMappingForMethod(method, userType)__						}_						catch (Throwable ex) {_							throw new IllegalStateException("Invalid mapping on handler class [" +_									userType.getName() + "]: " + method, ex)__						}_					}_				})___		if (logger.isDebugEnabled()) {_			logger.debug(methods.size() + " request handler methods found on " + userType + ": " + methods)__		}_		for (Map.Entry<Method, T> entry : methods.entrySet()) {_			Method invocableMethod = AopUtils.selectInvocableMethod(entry.getKey(), userType)__			T mapping = entry.getValue()__			registerHandlerMethod(handler, invocableMethod, mapping)__		}_	};look,for,handler,methods,in,a,handler,param,handler,the,bean,name,of,a,handler,or,a,handler,instance;protected,void,detect,handler,methods,final,object,handler,class,handler,type,handler,instanceof,string,get,application,context,get,type,string,handler,handler,get,class,final,class,user,type,class,utils,get,user,class,handler,type,map,method,t,methods,method,introspector,select,methods,user,type,new,method,introspector,metadata,lookup,t,override,public,t,inspect,method,method,try,return,get,mapping,for,method,method,user,type,catch,throwable,ex,throw,new,illegal,state,exception,invalid,mapping,on,handler,class,user,type,get,name,method,ex,if,logger,is,debug,enabled,logger,debug,methods,size,request,handler,methods,found,on,user,type,methods,for,map,entry,method,t,entry,methods,entry,set,method,invocable,method,aop,utils,select,invocable,method,entry,get,key,user,type,t,mapping,entry,get,value,register,handler,method,handler,invocable,method,mapping
AbstractHandlerMethodMapping -> protected void detectHandlerMethods(final Object handler);1474905889;Look for handler methods in a handler._@param handler the bean name of a handler or a handler instance;protected void detectHandlerMethods(final Object handler) {_		Class<?> handlerType = (handler instanceof String ?_				getApplicationContext().getType((String) handler) : handler.getClass())__		final Class<?> userType = ClassUtils.getUserClass(handlerType)___		Map<Method, T> methods = MethodIntrospector.selectMethods(userType,_				new MethodIntrospector.MetadataLookup<T>() {_					@Override_					public T inspect(Method method) {_						try {_							return getMappingForMethod(method, userType)__						}_						catch (Throwable ex) {_							throw new IllegalStateException("Invalid mapping on handler class [" +_									userType.getName() + "]: " + method, ex)__						}_					}_				})___		if (logger.isDebugEnabled()) {_			logger.debug(methods.size() + " request handler methods found on " + userType + ": " + methods)__		}_		for (Map.Entry<Method, T> entry : methods.entrySet()) {_			Method invocableMethod = AopUtils.selectInvocableMethod(entry.getKey(), userType)__			T mapping = entry.getValue()__			registerHandlerMethod(handler, invocableMethod, mapping)__		}_	};look,for,handler,methods,in,a,handler,param,handler,the,bean,name,of,a,handler,or,a,handler,instance;protected,void,detect,handler,methods,final,object,handler,class,handler,type,handler,instanceof,string,get,application,context,get,type,string,handler,handler,get,class,final,class,user,type,class,utils,get,user,class,handler,type,map,method,t,methods,method,introspector,select,methods,user,type,new,method,introspector,metadata,lookup,t,override,public,t,inspect,method,method,try,return,get,mapping,for,method,method,user,type,catch,throwable,ex,throw,new,illegal,state,exception,invalid,mapping,on,handler,class,user,type,get,name,method,ex,if,logger,is,debug,enabled,logger,debug,methods,size,request,handler,methods,found,on,user,type,methods,for,map,entry,method,t,entry,methods,entry,set,method,invocable,method,aop,utils,select,invocable,method,entry,get,key,user,type,t,mapping,entry,get,value,register,handler,method,handler,invocable,method,mapping
AbstractHandlerMethodMapping -> protected void detectHandlerMethods(final Object handler);1481813056;Look for handler methods in a handler._@param handler the bean name of a handler or a handler instance;protected void detectHandlerMethods(final Object handler) {_		Class<?> handlerType = (handler instanceof String ?_				getApplicationContext().getType((String) handler) : handler.getClass())__		final Class<?> userType = ClassUtils.getUserClass(handlerType)___		Map<Method, T> methods = MethodIntrospector.selectMethods(userType,_				new MethodIntrospector.MetadataLookup<T>() {_					@Override_					public T inspect(Method method) {_						try {_							return getMappingForMethod(method, userType)__						}_						catch (Throwable ex) {_							throw new IllegalStateException("Invalid mapping on handler class [" +_									userType.getName() + "]: " + method, ex)__						}_					}_				})___		if (logger.isDebugEnabled()) {_			logger.debug(methods.size() + " request handler methods found on " + userType + ": " + methods)__		}_		for (Map.Entry<Method, T> entry : methods.entrySet()) {_			Method invocableMethod = AopUtils.selectInvocableMethod(entry.getKey(), userType)__			T mapping = entry.getValue()__			registerHandlerMethod(handler, invocableMethod, mapping)__		}_	};look,for,handler,methods,in,a,handler,param,handler,the,bean,name,of,a,handler,or,a,handler,instance;protected,void,detect,handler,methods,final,object,handler,class,handler,type,handler,instanceof,string,get,application,context,get,type,string,handler,handler,get,class,final,class,user,type,class,utils,get,user,class,handler,type,map,method,t,methods,method,introspector,select,methods,user,type,new,method,introspector,metadata,lookup,t,override,public,t,inspect,method,method,try,return,get,mapping,for,method,method,user,type,catch,throwable,ex,throw,new,illegal,state,exception,invalid,mapping,on,handler,class,user,type,get,name,method,ex,if,logger,is,debug,enabled,logger,debug,methods,size,request,handler,methods,found,on,user,type,methods,for,map,entry,method,t,entry,methods,entry,set,method,invocable,method,aop,utils,select,invocable,method,entry,get,key,user,type,t,mapping,entry,get,value,register,handler,method,handler,invocable,method,mapping
AbstractHandlerMethodMapping -> protected void detectHandlerMethods(final Object handler);1485810955;Look for handler methods in a handler._@param handler the bean name of a handler or a handler instance;protected void detectHandlerMethods(final Object handler) {_		Class<?> handlerType = (handler instanceof String ?_				getApplicationContext().getType((String) handler) : handler.getClass())__		final Class<?> userType = ClassUtils.getUserClass(handlerType)___		Map<Method, T> methods = MethodIntrospector.selectMethods(userType,_				new MethodIntrospector.MetadataLookup<T>() {_					@Override_					public T inspect(Method method) {_						try {_							return getMappingForMethod(method, userType)__						}_						catch (Throwable ex) {_							throw new IllegalStateException("Invalid mapping on handler class [" +_									userType.getName() + "]: " + method, ex)__						}_					}_				})___		if (logger.isDebugEnabled()) {_			logger.debug(methods.size() + " request handler methods found on " + userType + ": " + methods)__		}_		for (Map.Entry<Method, T> entry : methods.entrySet()) {_			Method invocableMethod = AopUtils.selectInvocableMethod(entry.getKey(), userType)__			T mapping = entry.getValue()__			registerHandlerMethod(handler, invocableMethod, mapping)__		}_	};look,for,handler,methods,in,a,handler,param,handler,the,bean,name,of,a,handler,or,a,handler,instance;protected,void,detect,handler,methods,final,object,handler,class,handler,type,handler,instanceof,string,get,application,context,get,type,string,handler,handler,get,class,final,class,user,type,class,utils,get,user,class,handler,type,map,method,t,methods,method,introspector,select,methods,user,type,new,method,introspector,metadata,lookup,t,override,public,t,inspect,method,method,try,return,get,mapping,for,method,method,user,type,catch,throwable,ex,throw,new,illegal,state,exception,invalid,mapping,on,handler,class,user,type,get,name,method,ex,if,logger,is,debug,enabled,logger,debug,methods,size,request,handler,methods,found,on,user,type,methods,for,map,entry,method,t,entry,methods,entry,set,method,invocable,method,aop,utils,select,invocable,method,entry,get,key,user,type,t,mapping,entry,get,value,register,handler,method,handler,invocable,method,mapping
AbstractHandlerMethodMapping -> protected void detectHandlerMethods(final Object handler);1495868221;Look for handler methods in a handler._@param handler the bean name of a handler or a handler instance;protected void detectHandlerMethods(final Object handler) {_		Class<?> handlerType = (handler instanceof String ?_				getApplicationContext().getType((String) handler) : handler.getClass())__		final Class<?> userType = ClassUtils.getUserClass(handlerType)___		Map<Method, T> methods = MethodIntrospector.selectMethods(userType,_				new MethodIntrospector.MetadataLookup<T>() {_					@Override_					public T inspect(Method method) {_						try {_							return getMappingForMethod(method, userType)__						}_						catch (Throwable ex) {_							throw new IllegalStateException("Invalid mapping on handler class [" +_									userType.getName() + "]: " + method, ex)__						}_					}_				})___		if (logger.isDebugEnabled()) {_			logger.debug(methods.size() + " request handler methods found on " + userType + ": " + methods)__		}_		for (Map.Entry<Method, T> entry : methods.entrySet()) {_			Method invocableMethod = AopUtils.selectInvocableMethod(entry.getKey(), userType)__			T mapping = entry.getValue()__			registerHandlerMethod(handler, invocableMethod, mapping)__		}_	};look,for,handler,methods,in,a,handler,param,handler,the,bean,name,of,a,handler,or,a,handler,instance;protected,void,detect,handler,methods,final,object,handler,class,handler,type,handler,instanceof,string,get,application,context,get,type,string,handler,handler,get,class,final,class,user,type,class,utils,get,user,class,handler,type,map,method,t,methods,method,introspector,select,methods,user,type,new,method,introspector,metadata,lookup,t,override,public,t,inspect,method,method,try,return,get,mapping,for,method,method,user,type,catch,throwable,ex,throw,new,illegal,state,exception,invalid,mapping,on,handler,class,user,type,get,name,method,ex,if,logger,is,debug,enabled,logger,debug,methods,size,request,handler,methods,found,on,user,type,methods,for,map,entry,method,t,entry,methods,entry,set,method,invocable,method,aop,utils,select,invocable,method,entry,get,key,user,type,t,mapping,entry,get,value,register,handler,method,handler,invocable,method,mapping
AbstractHandlerMethodMapping -> protected void detectHandlerMethods(final Object handler);1496837955;Look for handler methods in a handler._@param handler the bean name of a handler or a handler instance;protected void detectHandlerMethods(final Object handler) {_		Class<?> handlerType = (handler instanceof String ?_				obtainApplicationContext().getType((String) handler) : handler.getClass())___		if (handlerType != null) {_			final Class<?> userType = ClassUtils.getUserClass(handlerType)__			Map<Method, T> methods = MethodIntrospector.selectMethods(userType,_					(MethodIntrospector.MetadataLookup<T>) method -> {_						try {_							return getMappingForMethod(method, userType)__						}_						catch (Throwable ex) {_							throw new IllegalStateException("Invalid mapping on handler class [" +_									userType.getName() + "]: " + method, ex)__						}_					})__			if (logger.isDebugEnabled()) {_				logger.debug(methods.size() + " request handler methods found on " + userType + ": " + methods)__			}_			for (Map.Entry<Method, T> entry : methods.entrySet()) {_				Method invocableMethod = AopUtils.selectInvocableMethod(entry.getKey(), userType)__				T mapping = entry.getValue()__				registerHandlerMethod(handler, invocableMethod, mapping)__			}_		}_	};look,for,handler,methods,in,a,handler,param,handler,the,bean,name,of,a,handler,or,a,handler,instance;protected,void,detect,handler,methods,final,object,handler,class,handler,type,handler,instanceof,string,obtain,application,context,get,type,string,handler,handler,get,class,if,handler,type,null,final,class,user,type,class,utils,get,user,class,handler,type,map,method,t,methods,method,introspector,select,methods,user,type,method,introspector,metadata,lookup,t,method,try,return,get,mapping,for,method,method,user,type,catch,throwable,ex,throw,new,illegal,state,exception,invalid,mapping,on,handler,class,user,type,get,name,method,ex,if,logger,is,debug,enabled,logger,debug,methods,size,request,handler,methods,found,on,user,type,methods,for,map,entry,method,t,entry,methods,entry,set,method,invocable,method,aop,utils,select,invocable,method,entry,get,key,user,type,t,mapping,entry,get,value,register,handler,method,handler,invocable,method,mapping
AbstractHandlerMethodMapping -> protected void detectHandlerMethods(final Object handler);1497251962;Look for handler methods in a handler._@param handler the bean name of a handler or a handler instance;protected void detectHandlerMethods(final Object handler) {_		Class<?> handlerType = (handler instanceof String ?_				obtainApplicationContext().getType((String) handler) : handler.getClass())___		if (handlerType != null) {_			final Class<?> userType = ClassUtils.getUserClass(handlerType)__			Map<Method, T> methods = MethodIntrospector.selectMethods(userType,_					(MethodIntrospector.MetadataLookup<T>) method -> {_						try {_							return getMappingForMethod(method, userType)__						}_						catch (Throwable ex) {_							throw new IllegalStateException("Invalid mapping on handler class [" +_									userType.getName() + "]: " + method, ex)__						}_					})__			if (logger.isDebugEnabled()) {_				logger.debug(methods.size() + " request handler methods found on " + userType + ": " + methods)__			}_			for (Map.Entry<Method, T> entry : methods.entrySet()) {_				Method invocableMethod = AopUtils.selectInvocableMethod(entry.getKey(), userType)__				T mapping = entry.getValue()__				registerHandlerMethod(handler, invocableMethod, mapping)__			}_		}_	};look,for,handler,methods,in,a,handler,param,handler,the,bean,name,of,a,handler,or,a,handler,instance;protected,void,detect,handler,methods,final,object,handler,class,handler,type,handler,instanceof,string,obtain,application,context,get,type,string,handler,handler,get,class,if,handler,type,null,final,class,user,type,class,utils,get,user,class,handler,type,map,method,t,methods,method,introspector,select,methods,user,type,method,introspector,metadata,lookup,t,method,try,return,get,mapping,for,method,method,user,type,catch,throwable,ex,throw,new,illegal,state,exception,invalid,mapping,on,handler,class,user,type,get,name,method,ex,if,logger,is,debug,enabled,logger,debug,methods,size,request,handler,methods,found,on,user,type,methods,for,map,entry,method,t,entry,methods,entry,set,method,invocable,method,aop,utils,select,invocable,method,entry,get,key,user,type,t,mapping,entry,get,value,register,handler,method,handler,invocable,method,mapping
AbstractHandlerMethodMapping -> protected void detectHandlerMethods(final Object handler);1498780456;Look for handler methods in a handler._@param handler the bean name of a handler or a handler instance;protected void detectHandlerMethods(final Object handler) {_		Class<?> handlerType = (handler instanceof String ?_				obtainApplicationContext().getType((String) handler) : handler.getClass())___		if (handlerType != null) {_			final Class<?> userType = ClassUtils.getUserClass(handlerType)__			Map<Method, T> methods = MethodIntrospector.selectMethods(userType,_					(MethodIntrospector.MetadataLookup<T>) method -> {_						try {_							return getMappingForMethod(method, userType)__						}_						catch (Throwable ex) {_							throw new IllegalStateException("Invalid mapping on handler class [" +_									userType.getName() + "]: " + method, ex)__						}_					})__			if (logger.isDebugEnabled()) {_				logger.debug(methods.size() + " request handler methods found on " + userType + ": " + methods)__			}_			for (Map.Entry<Method, T> entry : methods.entrySet()) {_				Method invocableMethod = AopUtils.selectInvocableMethod(entry.getKey(), userType)__				T mapping = entry.getValue()__				registerHandlerMethod(handler, invocableMethod, mapping)__			}_		}_	};look,for,handler,methods,in,a,handler,param,handler,the,bean,name,of,a,handler,or,a,handler,instance;protected,void,detect,handler,methods,final,object,handler,class,handler,type,handler,instanceof,string,obtain,application,context,get,type,string,handler,handler,get,class,if,handler,type,null,final,class,user,type,class,utils,get,user,class,handler,type,map,method,t,methods,method,introspector,select,methods,user,type,method,introspector,metadata,lookup,t,method,try,return,get,mapping,for,method,method,user,type,catch,throwable,ex,throw,new,illegal,state,exception,invalid,mapping,on,handler,class,user,type,get,name,method,ex,if,logger,is,debug,enabled,logger,debug,methods,size,request,handler,methods,found,on,user,type,methods,for,map,entry,method,t,entry,methods,entry,set,method,invocable,method,aop,utils,select,invocable,method,entry,get,key,user,type,t,mapping,entry,get,value,register,handler,method,handler,invocable,method,mapping
AbstractHandlerMethodMapping -> protected void detectHandlerMethods(final Object handler);1518772998;Look for handler methods in a handler._@param handler the bean name of a handler or a handler instance;protected void detectHandlerMethods(final Object handler) {_		Class<?> handlerType = (handler instanceof String ?_				obtainApplicationContext().getType((String) handler) : handler.getClass())___		if (handlerType != null) {_			final Class<?> userType = ClassUtils.getUserClass(handlerType)__			Map<Method, T> methods = MethodIntrospector.selectMethods(userType,_					(MethodIntrospector.MetadataLookup<T>) method -> {_						try {_							return getMappingForMethod(method, userType)__						}_						catch (Throwable ex) {_							throw new IllegalStateException("Invalid mapping on handler class [" +_									userType.getName() + "]: " + method, ex)__						}_					})__			if (logger.isDebugEnabled()) {_				logger.debug(methods.size() + " request handler methods found on " + userType + ": " + methods)__			}_			for (Map.Entry<Method, T> entry : methods.entrySet()) {_				Method invocableMethod = AopUtils.selectInvocableMethod(entry.getKey(), userType)__				T mapping = entry.getValue()__				registerHandlerMethod(handler, invocableMethod, mapping)__			}_		}_	};look,for,handler,methods,in,a,handler,param,handler,the,bean,name,of,a,handler,or,a,handler,instance;protected,void,detect,handler,methods,final,object,handler,class,handler,type,handler,instanceof,string,obtain,application,context,get,type,string,handler,handler,get,class,if,handler,type,null,final,class,user,type,class,utils,get,user,class,handler,type,map,method,t,methods,method,introspector,select,methods,user,type,method,introspector,metadata,lookup,t,method,try,return,get,mapping,for,method,method,user,type,catch,throwable,ex,throw,new,illegal,state,exception,invalid,mapping,on,handler,class,user,type,get,name,method,ex,if,logger,is,debug,enabled,logger,debug,methods,size,request,handler,methods,found,on,user,type,methods,for,map,entry,method,t,entry,methods,entry,set,method,invocable,method,aop,utils,select,invocable,method,entry,get,key,user,type,t,mapping,entry,get,value,register,handler,method,handler,invocable,method,mapping
AbstractHandlerMethodMapping -> protected void detectHandlerMethods(final Object handler);1522103912;Look for handler methods in a handler._@param handler the bean name of a handler or a handler instance;protected void detectHandlerMethods(final Object handler) {_		Class<?> handlerType = (handler instanceof String ?_				obtainApplicationContext().getType((String) handler) : handler.getClass())___		if (handlerType != null) {_			final Class<?> userType = ClassUtils.getUserClass(handlerType)__			Map<Method, T> methods = MethodIntrospector.selectMethods(userType,_					(MethodIntrospector.MetadataLookup<T>) method -> {_						try {_							return getMappingForMethod(method, userType)__						}_						catch (Throwable ex) {_							throw new IllegalStateException("Invalid mapping on handler class [" +_									userType.getName() + "]: " + method, ex)__						}_					})__			if (logger.isDebugEnabled()) {_				logger.debug(methods.size() + " request handler methods found on " + userType + ": " + methods)__			}_			methods.forEach((method, mapping) -> {_				Method invocableMethod = AopUtils.selectInvocableMethod(method, userType)__				registerHandlerMethod(handler, invocableMethod, mapping)__			})__		}_	};look,for,handler,methods,in,a,handler,param,handler,the,bean,name,of,a,handler,or,a,handler,instance;protected,void,detect,handler,methods,final,object,handler,class,handler,type,handler,instanceof,string,obtain,application,context,get,type,string,handler,handler,get,class,if,handler,type,null,final,class,user,type,class,utils,get,user,class,handler,type,map,method,t,methods,method,introspector,select,methods,user,type,method,introspector,metadata,lookup,t,method,try,return,get,mapping,for,method,method,user,type,catch,throwable,ex,throw,new,illegal,state,exception,invalid,mapping,on,handler,class,user,type,get,name,method,ex,if,logger,is,debug,enabled,logger,debug,methods,size,request,handler,methods,found,on,user,type,methods,methods,for,each,method,mapping,method,invocable,method,aop,utils,select,invocable,method,method,user,type,register,handler,method,handler,invocable,method,mapping
AbstractHandlerMethodMapping -> protected void detectHandlerMethods(final Object handler);1522843494;Look for handler methods in a handler._@param handler the bean name of a handler or a handler instance;protected void detectHandlerMethods(final Object handler) {_		Class<?> handlerType = (handler instanceof String ?_				obtainApplicationContext().getType((String) handler) : handler.getClass())___		if (handlerType != null) {_			final Class<?> userType = ClassUtils.getUserClass(handlerType)__			Map<Method, T> methods = MethodIntrospector.selectMethods(userType,_					(MethodIntrospector.MetadataLookup<T>) method -> {_						try {_							return getMappingForMethod(method, userType)__						}_						catch (Throwable ex) {_							throw new IllegalStateException("Invalid mapping on handler class [" +_									userType.getName() + "]: " + method, ex)__						}_					})__			if (logger.isDebugEnabled()) {_				logger.debug(methods.size() + " request handler methods found on " + userType + ": " + methods)__			}_			methods.forEach((method, mapping) -> {_				Method invocableMethod = AopUtils.selectInvocableMethod(method, userType)__				registerHandlerMethod(handler, invocableMethod, mapping)__			})__		}_	};look,for,handler,methods,in,a,handler,param,handler,the,bean,name,of,a,handler,or,a,handler,instance;protected,void,detect,handler,methods,final,object,handler,class,handler,type,handler,instanceof,string,obtain,application,context,get,type,string,handler,handler,get,class,if,handler,type,null,final,class,user,type,class,utils,get,user,class,handler,type,map,method,t,methods,method,introspector,select,methods,user,type,method,introspector,metadata,lookup,t,method,try,return,get,mapping,for,method,method,user,type,catch,throwable,ex,throw,new,illegal,state,exception,invalid,mapping,on,handler,class,user,type,get,name,method,ex,if,logger,is,debug,enabled,logger,debug,methods,size,request,handler,methods,found,on,user,type,methods,methods,for,each,method,mapping,method,invocable,method,aop,utils,select,invocable,method,method,user,type,register,handler,method,handler,invocable,method,mapping
AbstractHandlerMethodMapping -> protected void detectHandlerMethods(final Object handler);1529361191;Look for handler methods in a handler._@param handler the bean name of a handler or a handler instance;protected void detectHandlerMethods(final Object handler) {_		Class<?> handlerType = (handler instanceof String ?_				obtainApplicationContext().getType((String) handler) : handler.getClass())___		if (handlerType != null) {_			final Class<?> userType = ClassUtils.getUserClass(handlerType)__			Map<Method, T> methods = MethodIntrospector.selectMethods(userType,_					(MethodIntrospector.MetadataLookup<T>) method -> {_						try {_							return getMappingForMethod(method, userType)__						}_						catch (Throwable ex) {_							throw new IllegalStateException("Invalid mapping on handler class [" +_									userType.getName() + "]: " + method, ex)__						}_					})__			if (logger.isTraceEnabled()) {_				logger.trace("Mapped " + methods.size() + " handler method(s) for " + userType + ": " + methods)__			}_			methods.forEach((method, mapping) -> {_				Method invocableMethod = AopUtils.selectInvocableMethod(method, userType)__				registerHandlerMethod(handler, invocableMethod, mapping)__			})__		}_	};look,for,handler,methods,in,a,handler,param,handler,the,bean,name,of,a,handler,or,a,handler,instance;protected,void,detect,handler,methods,final,object,handler,class,handler,type,handler,instanceof,string,obtain,application,context,get,type,string,handler,handler,get,class,if,handler,type,null,final,class,user,type,class,utils,get,user,class,handler,type,map,method,t,methods,method,introspector,select,methods,user,type,method,introspector,metadata,lookup,t,method,try,return,get,mapping,for,method,method,user,type,catch,throwable,ex,throw,new,illegal,state,exception,invalid,mapping,on,handler,class,user,type,get,name,method,ex,if,logger,is,trace,enabled,logger,trace,mapped,methods,size,handler,method,s,for,user,type,methods,methods,for,each,method,mapping,method,invocable,method,aop,utils,select,invocable,method,method,user,type,register,handler,method,handler,invocable,method,mapping
AbstractHandlerMethodMapping -> protected void detectHandlerMethods(final Object handler);1529721864;Look for handler methods in a handler._@param handler the bean name of a handler or a handler instance;protected void detectHandlerMethods(final Object handler) {_		Class<?> handlerType = (handler instanceof String ?_				obtainApplicationContext().getType((String) handler) : handler.getClass())___		if (handlerType != null) {_			final Class<?> userType = ClassUtils.getUserClass(handlerType)__			Map<Method, T> methods = MethodIntrospector.selectMethods(userType,_					(MethodIntrospector.MetadataLookup<T>) method -> {_						try {_							return getMappingForMethod(method, userType)__						}_						catch (Throwable ex) {_							throw new IllegalStateException("Invalid mapping on handler class [" +_									userType.getName() + "]: " + method, ex)__						}_					})__			if (logger.isTraceEnabled()) {_				logger.trace("Mapped " + methods.size() + " handler method(s) for " + userType + ": " + methods)__			}_			methods.forEach((method, mapping) -> {_				Method invocableMethod = AopUtils.selectInvocableMethod(method, userType)__				registerHandlerMethod(handler, invocableMethod, mapping)__			})__		}_	};look,for,handler,methods,in,a,handler,param,handler,the,bean,name,of,a,handler,or,a,handler,instance;protected,void,detect,handler,methods,final,object,handler,class,handler,type,handler,instanceof,string,obtain,application,context,get,type,string,handler,handler,get,class,if,handler,type,null,final,class,user,type,class,utils,get,user,class,handler,type,map,method,t,methods,method,introspector,select,methods,user,type,method,introspector,metadata,lookup,t,method,try,return,get,mapping,for,method,method,user,type,catch,throwable,ex,throw,new,illegal,state,exception,invalid,mapping,on,handler,class,user,type,get,name,method,ex,if,logger,is,trace,enabled,logger,trace,mapped,methods,size,handler,method,s,for,user,type,methods,methods,for,each,method,mapping,method,invocable,method,aop,utils,select,invocable,method,method,user,type,register,handler,method,handler,invocable,method,mapping
AbstractHandlerMethodMapping -> protected void detectHandlerMethods(final Object handler);1530174524;Look for handler methods in a handler._@param handler the bean name of a handler or a handler instance;protected void detectHandlerMethods(final Object handler) {_		Class<?> handlerType = (handler instanceof String ?_				obtainApplicationContext().getType((String) handler) : handler.getClass())___		if (handlerType != null) {_			final Class<?> userType = ClassUtils.getUserClass(handlerType)__			Map<Method, T> methods = MethodIntrospector.selectMethods(userType,_					(MethodIntrospector.MetadataLookup<T>) method -> {_						try {_							return getMappingForMethod(method, userType)__						}_						catch (Throwable ex) {_							throw new IllegalStateException("Invalid mapping on handler class [" +_									userType.getName() + "]: " + method, ex)__						}_					})__			if (logger.isTraceEnabled()) {_				logger.trace("Mapped " + methods.size() + " handler method(s) for " + userType + ": " + methods)__			}_			methods.forEach((method, mapping) -> {_				Method invocableMethod = AopUtils.selectInvocableMethod(method, userType)__				registerHandlerMethod(handler, invocableMethod, mapping)__			})__		}_	};look,for,handler,methods,in,a,handler,param,handler,the,bean,name,of,a,handler,or,a,handler,instance;protected,void,detect,handler,methods,final,object,handler,class,handler,type,handler,instanceof,string,obtain,application,context,get,type,string,handler,handler,get,class,if,handler,type,null,final,class,user,type,class,utils,get,user,class,handler,type,map,method,t,methods,method,introspector,select,methods,user,type,method,introspector,metadata,lookup,t,method,try,return,get,mapping,for,method,method,user,type,catch,throwable,ex,throw,new,illegal,state,exception,invalid,mapping,on,handler,class,user,type,get,name,method,ex,if,logger,is,trace,enabled,logger,trace,mapped,methods,size,handler,method,s,for,user,type,methods,methods,for,each,method,mapping,method,invocable,method,aop,utils,select,invocable,method,method,user,type,register,handler,method,handler,invocable,method,mapping
AbstractHandlerMethodMapping -> protected void detectHandlerMethods(final Object handler);1530174524;Look for handler methods in a handler._@param handler the bean name of a handler or a handler instance;protected void detectHandlerMethods(final Object handler) {_		Class<?> handlerType = (handler instanceof String ?_				obtainApplicationContext().getType((String) handler) : handler.getClass())___		if (handlerType != null) {_			final Class<?> userType = ClassUtils.getUserClass(handlerType)__			Map<Method, T> methods = MethodIntrospector.selectMethods(userType,_					(MethodIntrospector.MetadataLookup<T>) method -> {_						try {_							return getMappingForMethod(method, userType)__						}_						catch (Throwable ex) {_							throw new IllegalStateException("Invalid mapping on handler class [" +_									userType.getName() + "]: " + method, ex)__						}_					})__			if (logger.isTraceEnabled()) {_				logger.trace("Mapped " + methods.size() + " handler method(s) for " + userType + ": " + methods)__			}_			methods.forEach((method, mapping) -> {_				Method invocableMethod = AopUtils.selectInvocableMethod(method, userType)__				registerHandlerMethod(handler, invocableMethod, mapping)__			})__		}_	};look,for,handler,methods,in,a,handler,param,handler,the,bean,name,of,a,handler,or,a,handler,instance;protected,void,detect,handler,methods,final,object,handler,class,handler,type,handler,instanceof,string,obtain,application,context,get,type,string,handler,handler,get,class,if,handler,type,null,final,class,user,type,class,utils,get,user,class,handler,type,map,method,t,methods,method,introspector,select,methods,user,type,method,introspector,metadata,lookup,t,method,try,return,get,mapping,for,method,method,user,type,catch,throwable,ex,throw,new,illegal,state,exception,invalid,mapping,on,handler,class,user,type,get,name,method,ex,if,logger,is,trace,enabled,logger,trace,mapped,methods,size,handler,method,s,for,user,type,methods,methods,for,each,method,mapping,method,invocable,method,aop,utils,select,invocable,method,method,user,type,register,handler,method,handler,invocable,method,mapping
AbstractHandlerMethodMapping -> protected abstract boolean isHandler(Class<?> beanType)_;1328020251;Whether the given type is a handler with handler methods._@param beanType the type of the bean being checked_@return "true" if this a handler type, "false" otherwise.;protected abstract boolean isHandler(Class<?> beanType)_;whether,the,given,type,is,a,handler,with,handler,methods,param,bean,type,the,type,of,the,bean,being,checked,return,true,if,this,a,handler,type,false,otherwise;protected,abstract,boolean,is,handler,class,bean,type
AbstractHandlerMethodMapping -> protected abstract boolean isHandler(Class<?> beanType)_;1328022204;Whether the given type is a handler with handler methods._@param beanType the type of the bean being checked_@return "true" if this a handler type, "false" otherwise.;protected abstract boolean isHandler(Class<?> beanType)_;whether,the,given,type,is,a,handler,with,handler,methods,param,bean,type,the,type,of,the,bean,being,checked,return,true,if,this,a,handler,type,false,otherwise;protected,abstract,boolean,is,handler,class,bean,type
AbstractHandlerMethodMapping -> protected abstract boolean isHandler(Class<?> beanType)_;1336682556;Whether the given type is a handler with handler methods._@param beanType the type of the bean being checked_@return "true" if this a handler type, "false" otherwise.;protected abstract boolean isHandler(Class<?> beanType)_;whether,the,given,type,is,a,handler,with,handler,methods,param,bean,type,the,type,of,the,bean,being,checked,return,true,if,this,a,handler,type,false,otherwise;protected,abstract,boolean,is,handler,class,bean,type
AbstractHandlerMethodMapping -> protected abstract boolean isHandler(Class<?> beanType)_;1341441111;Whether the given type is a handler with handler methods._@param beanType the type of the bean being checked_@return "true" if this a handler type, "false" otherwise.;protected abstract boolean isHandler(Class<?> beanType)_;whether,the,given,type,is,a,handler,with,handler,methods,param,bean,type,the,type,of,the,bean,being,checked,return,true,if,this,a,handler,type,false,otherwise;protected,abstract,boolean,is,handler,class,bean,type
AbstractHandlerMethodMapping -> protected abstract boolean isHandler(Class<?> beanType)_;1356735495;Whether the given type is a handler with handler methods._@param beanType the type of the bean being checked_@return "true" if this a handler type, "false" otherwise.;protected abstract boolean isHandler(Class<?> beanType)_;whether,the,given,type,is,a,handler,with,handler,methods,param,bean,type,the,type,of,the,bean,being,checked,return,true,if,this,a,handler,type,false,otherwise;protected,abstract,boolean,is,handler,class,bean,type
AbstractHandlerMethodMapping -> protected abstract boolean isHandler(Class<?> beanType)_;1357119239;Whether the given type is a handler with handler methods._@param beanType the type of the bean being checked_@return "true" if this a handler type, "false" otherwise.;protected abstract boolean isHandler(Class<?> beanType)_;whether,the,given,type,is,a,handler,with,handler,methods,param,bean,type,the,type,of,the,bean,being,checked,return,true,if,this,a,handler,type,false,otherwise;protected,abstract,boolean,is,handler,class,bean,type
AbstractHandlerMethodMapping -> protected abstract boolean isHandler(Class<?> beanType)_;1362408075;Whether the given type is a handler with handler methods._@param beanType the type of the bean being checked_@return "true" if this a handler type, "false" otherwise.;protected abstract boolean isHandler(Class<?> beanType)_;whether,the,given,type,is,a,handler,with,handler,methods,param,bean,type,the,type,of,the,bean,being,checked,return,true,if,this,a,handler,type,false,otherwise;protected,abstract,boolean,is,handler,class,bean,type
AbstractHandlerMethodMapping -> protected abstract boolean isHandler(Class<?> beanType)_;1368482696;Whether the given type is a handler with handler methods._@param beanType the type of the bean being checked_@return "true" if this a handler type, "false" otherwise.;protected abstract boolean isHandler(Class<?> beanType)_;whether,the,given,type,is,a,handler,with,handler,methods,param,bean,type,the,type,of,the,bean,being,checked,return,true,if,this,a,handler,type,false,otherwise;protected,abstract,boolean,is,handler,class,bean,type
AbstractHandlerMethodMapping -> protected abstract boolean isHandler(Class<?> beanType)_;1368581529;Whether the given type is a handler with handler methods._@param beanType the type of the bean being checked_@return "true" if this a handler type, "false" otherwise.;protected abstract boolean isHandler(Class<?> beanType)_;whether,the,given,type,is,a,handler,with,handler,methods,param,bean,type,the,type,of,the,bean,being,checked,return,true,if,this,a,handler,type,false,otherwise;protected,abstract,boolean,is,handler,class,bean,type
AbstractHandlerMethodMapping -> protected abstract boolean isHandler(Class<?> beanType)_;1382665849;Whether the given type is a handler with handler methods._@param beanType the type of the bean being checked_@return "true" if this a handler type, "false" otherwise.;protected abstract boolean isHandler(Class<?> beanType)_;whether,the,given,type,is,a,handler,with,handler,methods,param,bean,type,the,type,of,the,bean,being,checked,return,true,if,this,a,handler,type,false,otherwise;protected,abstract,boolean,is,handler,class,bean,type
AbstractHandlerMethodMapping -> protected abstract boolean isHandler(Class<?> beanType)_;1392160296;Whether the given type is a handler with handler methods._@param beanType the type of the bean being checked_@return "true" if this a handler type, "false" otherwise.;protected abstract boolean isHandler(Class<?> beanType)_;whether,the,given,type,is,a,handler,with,handler,methods,param,bean,type,the,type,of,the,bean,being,checked,return,true,if,this,a,handler,type,false,otherwise;protected,abstract,boolean,is,handler,class,bean,type
AbstractHandlerMethodMapping -> protected abstract boolean isHandler(Class<?> beanType)_;1392337816;Whether the given type is a handler with handler methods._@param beanType the type of the bean being checked_@return "true" if this a handler type, "false" otherwise.;protected abstract boolean isHandler(Class<?> beanType)_;whether,the,given,type,is,a,handler,with,handler,methods,param,bean,type,the,type,of,the,bean,being,checked,return,true,if,this,a,handler,type,false,otherwise;protected,abstract,boolean,is,handler,class,bean,type
AbstractHandlerMethodMapping -> protected abstract boolean isHandler(Class<?> beanType)_;1392407320;Whether the given type is a handler with handler methods._@param beanType the type of the bean being checked_@return "true" if this a handler type, "false" otherwise.;protected abstract boolean isHandler(Class<?> beanType)_;whether,the,given,type,is,a,handler,with,handler,methods,param,bean,type,the,type,of,the,bean,being,checked,return,true,if,this,a,handler,type,false,otherwise;protected,abstract,boolean,is,handler,class,bean,type
AbstractHandlerMethodMapping -> protected abstract boolean isHandler(Class<?> beanType)_;1395655323;Whether the given type is a handler with handler methods._@param beanType the type of the bean being checked_@return "true" if this a handler type, "false" otherwise.;protected abstract boolean isHandler(Class<?> beanType)_;whether,the,given,type,is,a,handler,with,handler,methods,param,bean,type,the,type,of,the,bean,being,checked,return,true,if,this,a,handler,type,false,otherwise;protected,abstract,boolean,is,handler,class,bean,type
AbstractHandlerMethodMapping -> protected abstract boolean isHandler(Class<?> beanType)_;1399404473;Whether the given type is a handler with handler methods._@param beanType the type of the bean being checked_@return "true" if this a handler type, "false" otherwise.;protected abstract boolean isHandler(Class<?> beanType)_;whether,the,given,type,is,a,handler,with,handler,methods,param,bean,type,the,type,of,the,bean,being,checked,return,true,if,this,a,handler,type,false,otherwise;protected,abstract,boolean,is,handler,class,bean,type
AbstractHandlerMethodMapping -> protected abstract boolean isHandler(Class<?> beanType)_;1426869344;Whether the given type is a handler with handler methods._@param beanType the type of the bean being checked_@return "true" if this a handler type, "false" otherwise.;protected abstract boolean isHandler(Class<?> beanType)_;whether,the,given,type,is,a,handler,with,handler,methods,param,bean,type,the,type,of,the,bean,being,checked,return,true,if,this,a,handler,type,false,otherwise;protected,abstract,boolean,is,handler,class,bean,type
AbstractHandlerMethodMapping -> protected abstract boolean isHandler(Class<?> beanType)_;1427240641;Whether the given type is a handler with handler methods._@param beanType the type of the bean being checked_@return "true" if this a handler type, "false" otherwise.;protected abstract boolean isHandler(Class<?> beanType)_;whether,the,given,type,is,a,handler,with,handler,methods,param,bean,type,the,type,of,the,bean,being,checked,return,true,if,this,a,handler,type,false,otherwise;protected,abstract,boolean,is,handler,class,bean,type
AbstractHandlerMethodMapping -> protected abstract boolean isHandler(Class<?> beanType)_;1427983931;Whether the given type is a handler with handler methods._@param beanType the type of the bean being checked_@return "true" if this a handler type, "false" otherwise.;protected abstract boolean isHandler(Class<?> beanType)_;whether,the,given,type,is,a,handler,with,handler,methods,param,bean,type,the,type,of,the,bean,being,checked,return,true,if,this,a,handler,type,false,otherwise;protected,abstract,boolean,is,handler,class,bean,type
AbstractHandlerMethodMapping -> protected abstract boolean isHandler(Class<?> beanType)_;1430734105;Whether the given type is a handler with handler methods._@param beanType the type of the bean being checked_@return "true" if this a handler type, "false" otherwise.;protected abstract boolean isHandler(Class<?> beanType)_;whether,the,given,type,is,a,handler,with,handler,methods,param,bean,type,the,type,of,the,bean,being,checked,return,true,if,this,a,handler,type,false,otherwise;protected,abstract,boolean,is,handler,class,bean,type
AbstractHandlerMethodMapping -> protected abstract boolean isHandler(Class<?> beanType)_;1430734105;Whether the given type is a handler with handler methods._@param beanType the type of the bean being checked_@return "true" if this a handler type, "false" otherwise.;protected abstract boolean isHandler(Class<?> beanType)_;whether,the,given,type,is,a,handler,with,handler,methods,param,bean,type,the,type,of,the,bean,being,checked,return,true,if,this,a,handler,type,false,otherwise;protected,abstract,boolean,is,handler,class,bean,type
AbstractHandlerMethodMapping -> protected abstract boolean isHandler(Class<?> beanType)_;1430734106;Whether the given type is a handler with handler methods._@param beanType the type of the bean being checked_@return "true" if this a handler type, "false" otherwise.;protected abstract boolean isHandler(Class<?> beanType)_;whether,the,given,type,is,a,handler,with,handler,methods,param,bean,type,the,type,of,the,bean,being,checked,return,true,if,this,a,handler,type,false,otherwise;protected,abstract,boolean,is,handler,class,bean,type
AbstractHandlerMethodMapping -> protected abstract boolean isHandler(Class<?> beanType)_;1430774689;Whether the given type is a handler with handler methods._@param beanType the type of the bean being checked_@return "true" if this a handler type, "false" otherwise.;protected abstract boolean isHandler(Class<?> beanType)_;whether,the,given,type,is,a,handler,with,handler,methods,param,bean,type,the,type,of,the,bean,being,checked,return,true,if,this,a,handler,type,false,otherwise;protected,abstract,boolean,is,handler,class,bean,type
AbstractHandlerMethodMapping -> protected abstract boolean isHandler(Class<?> beanType)_;1430844966;Whether the given type is a handler with handler methods._@param beanType the type of the bean being checked_@return "true" if this a handler type, "false" otherwise.;protected abstract boolean isHandler(Class<?> beanType)_;whether,the,given,type,is,a,handler,with,handler,methods,param,bean,type,the,type,of,the,bean,being,checked,return,true,if,this,a,handler,type,false,otherwise;protected,abstract,boolean,is,handler,class,bean,type
AbstractHandlerMethodMapping -> protected abstract boolean isHandler(Class<?> beanType)_;1430844967;Whether the given type is a handler with handler methods._@param beanType the type of the bean being checked_@return "true" if this a handler type, "false" otherwise.;protected abstract boolean isHandler(Class<?> beanType)_;whether,the,given,type,is,a,handler,with,handler,methods,param,bean,type,the,type,of,the,bean,being,checked,return,true,if,this,a,handler,type,false,otherwise;protected,abstract,boolean,is,handler,class,bean,type
AbstractHandlerMethodMapping -> protected abstract boolean isHandler(Class<?> beanType)_;1431730371;Whether the given type is a handler with handler methods._@param beanType the type of the bean being checked_@return "true" if this a handler type, "false" otherwise.;protected abstract boolean isHandler(Class<?> beanType)_;whether,the,given,type,is,a,handler,with,handler,methods,param,bean,type,the,type,of,the,bean,being,checked,return,true,if,this,a,handler,type,false,otherwise;protected,abstract,boolean,is,handler,class,bean,type
AbstractHandlerMethodMapping -> protected abstract boolean isHandler(Class<?> beanType)_;1439294371;Whether the given type is a handler with handler methods._@param beanType the type of the bean being checked_@return "true" if this a handler type, "false" otherwise.;protected abstract boolean isHandler(Class<?> beanType)_;whether,the,given,type,is,a,handler,with,handler,methods,param,bean,type,the,type,of,the,bean,being,checked,return,true,if,this,a,handler,type,false,otherwise;protected,abstract,boolean,is,handler,class,bean,type
AbstractHandlerMethodMapping -> protected abstract boolean isHandler(Class<?> beanType)_;1447077465;Whether the given type is a handler with handler methods._@param beanType the type of the bean being checked_@return "true" if this a handler type, "false" otherwise.;protected abstract boolean isHandler(Class<?> beanType)_;whether,the,given,type,is,a,handler,with,handler,methods,param,bean,type,the,type,of,the,bean,being,checked,return,true,if,this,a,handler,type,false,otherwise;protected,abstract,boolean,is,handler,class,bean,type
AbstractHandlerMethodMapping -> protected abstract boolean isHandler(Class<?> beanType)_;1448483163;Whether the given type is a handler with handler methods._@param beanType the type of the bean being checked_@return "true" if this a handler type, "false" otherwise.;protected abstract boolean isHandler(Class<?> beanType)_;whether,the,given,type,is,a,handler,with,handler,methods,param,bean,type,the,type,of,the,bean,being,checked,return,true,if,this,a,handler,type,false,otherwise;protected,abstract,boolean,is,handler,class,bean,type
AbstractHandlerMethodMapping -> protected abstract boolean isHandler(Class<?> beanType)_;1452685925;Whether the given type is a handler with handler methods._@param beanType the type of the bean being checked_@return "true" if this a handler type, "false" otherwise.;protected abstract boolean isHandler(Class<?> beanType)_;whether,the,given,type,is,a,handler,with,handler,methods,param,bean,type,the,type,of,the,bean,being,checked,return,true,if,this,a,handler,type,false,otherwise;protected,abstract,boolean,is,handler,class,bean,type
AbstractHandlerMethodMapping -> protected abstract boolean isHandler(Class<?> beanType)_;1452873718;Whether the given type is a handler with handler methods._@param beanType the type of the bean being checked_@return "true" if this a handler type, "false" otherwise.;protected abstract boolean isHandler(Class<?> beanType)_;whether,the,given,type,is,a,handler,with,handler,methods,param,bean,type,the,type,of,the,bean,being,checked,return,true,if,this,a,handler,type,false,otherwise;protected,abstract,boolean,is,handler,class,bean,type
AbstractHandlerMethodMapping -> protected abstract boolean isHandler(Class<?> beanType)_;1453843788;Whether the given type is a handler with handler methods._@param beanType the type of the bean being checked_@return "true" if this a handler type, "false" otherwise.;protected abstract boolean isHandler(Class<?> beanType)_;whether,the,given,type,is,a,handler,with,handler,methods,param,bean,type,the,type,of,the,bean,being,checked,return,true,if,this,a,handler,type,false,otherwise;protected,abstract,boolean,is,handler,class,bean,type
AbstractHandlerMethodMapping -> protected abstract boolean isHandler(Class<?> beanType)_;1467730834;Whether the given type is a handler with handler methods._@param beanType the type of the bean being checked_@return "true" if this a handler type, "false" otherwise.;protected abstract boolean isHandler(Class<?> beanType)_;whether,the,given,type,is,a,handler,with,handler,methods,param,bean,type,the,type,of,the,bean,being,checked,return,true,if,this,a,handler,type,false,otherwise;protected,abstract,boolean,is,handler,class,bean,type
AbstractHandlerMethodMapping -> protected abstract boolean isHandler(Class<?> beanType)_;1468417354;Whether the given type is a handler with handler methods._@param beanType the type of the bean being checked_@return "true" if this a handler type, "false" otherwise.;protected abstract boolean isHandler(Class<?> beanType)_;whether,the,given,type,is,a,handler,with,handler,methods,param,bean,type,the,type,of,the,bean,being,checked,return,true,if,this,a,handler,type,false,otherwise;protected,abstract,boolean,is,handler,class,bean,type
AbstractHandlerMethodMapping -> protected abstract boolean isHandler(Class<?> beanType)_;1468596479;Whether the given type is a handler with handler methods._@param beanType the type of the bean being checked_@return "true" if this a handler type, "false" otherwise.;protected abstract boolean isHandler(Class<?> beanType)_;whether,the,given,type,is,a,handler,with,handler,methods,param,bean,type,the,type,of,the,bean,being,checked,return,true,if,this,a,handler,type,false,otherwise;protected,abstract,boolean,is,handler,class,bean,type
AbstractHandlerMethodMapping -> protected abstract boolean isHandler(Class<?> beanType)_;1474905889;Whether the given type is a handler with handler methods._@param beanType the type of the bean being checked_@return "true" if this a handler type, "false" otherwise.;protected abstract boolean isHandler(Class<?> beanType)_;whether,the,given,type,is,a,handler,with,handler,methods,param,bean,type,the,type,of,the,bean,being,checked,return,true,if,this,a,handler,type,false,otherwise;protected,abstract,boolean,is,handler,class,bean,type
AbstractHandlerMethodMapping -> protected abstract boolean isHandler(Class<?> beanType)_;1481813056;Whether the given type is a handler with handler methods._@param beanType the type of the bean being checked_@return "true" if this a handler type, "false" otherwise.;protected abstract boolean isHandler(Class<?> beanType)_;whether,the,given,type,is,a,handler,with,handler,methods,param,bean,type,the,type,of,the,bean,being,checked,return,true,if,this,a,handler,type,false,otherwise;protected,abstract,boolean,is,handler,class,bean,type
AbstractHandlerMethodMapping -> protected abstract boolean isHandler(Class<?> beanType)_;1485810955;Whether the given type is a handler with handler methods._@param beanType the type of the bean being checked_@return "true" if this a handler type, "false" otherwise.;protected abstract boolean isHandler(Class<?> beanType)_;whether,the,given,type,is,a,handler,with,handler,methods,param,bean,type,the,type,of,the,bean,being,checked,return,true,if,this,a,handler,type,false,otherwise;protected,abstract,boolean,is,handler,class,bean,type
AbstractHandlerMethodMapping -> protected abstract boolean isHandler(Class<?> beanType)_;1495868221;Whether the given type is a handler with handler methods._@param beanType the type of the bean being checked_@return "true" if this a handler type, "false" otherwise.;protected abstract boolean isHandler(Class<?> beanType)_;whether,the,given,type,is,a,handler,with,handler,methods,param,bean,type,the,type,of,the,bean,being,checked,return,true,if,this,a,handler,type,false,otherwise;protected,abstract,boolean,is,handler,class,bean,type
AbstractHandlerMethodMapping -> protected abstract boolean isHandler(Class<?> beanType)_;1496837955;Whether the given type is a handler with handler methods._@param beanType the type of the bean being checked_@return "true" if this a handler type, "false" otherwise.;protected abstract boolean isHandler(Class<?> beanType)_;whether,the,given,type,is,a,handler,with,handler,methods,param,bean,type,the,type,of,the,bean,being,checked,return,true,if,this,a,handler,type,false,otherwise;protected,abstract,boolean,is,handler,class,bean,type
AbstractHandlerMethodMapping -> protected abstract boolean isHandler(Class<?> beanType)_;1497251962;Whether the given type is a handler with handler methods._@param beanType the type of the bean being checked_@return "true" if this a handler type, "false" otherwise.;protected abstract boolean isHandler(Class<?> beanType)_;whether,the,given,type,is,a,handler,with,handler,methods,param,bean,type,the,type,of,the,bean,being,checked,return,true,if,this,a,handler,type,false,otherwise;protected,abstract,boolean,is,handler,class,bean,type
AbstractHandlerMethodMapping -> protected abstract boolean isHandler(Class<?> beanType)_;1498780456;Whether the given type is a handler with handler methods._@param beanType the type of the bean being checked_@return "true" if this a handler type, "false" otherwise.;protected abstract boolean isHandler(Class<?> beanType)_;whether,the,given,type,is,a,handler,with,handler,methods,param,bean,type,the,type,of,the,bean,being,checked,return,true,if,this,a,handler,type,false,otherwise;protected,abstract,boolean,is,handler,class,bean,type
AbstractHandlerMethodMapping -> protected abstract boolean isHandler(Class<?> beanType)_;1518772998;Whether the given type is a handler with handler methods._@param beanType the type of the bean being checked_@return "true" if this a handler type, "false" otherwise.;protected abstract boolean isHandler(Class<?> beanType)_;whether,the,given,type,is,a,handler,with,handler,methods,param,bean,type,the,type,of,the,bean,being,checked,return,true,if,this,a,handler,type,false,otherwise;protected,abstract,boolean,is,handler,class,bean,type
AbstractHandlerMethodMapping -> protected abstract boolean isHandler(Class<?> beanType)_;1522103912;Whether the given type is a handler with handler methods._@param beanType the type of the bean being checked_@return "true" if this a handler type, "false" otherwise.;protected abstract boolean isHandler(Class<?> beanType)_;whether,the,given,type,is,a,handler,with,handler,methods,param,bean,type,the,type,of,the,bean,being,checked,return,true,if,this,a,handler,type,false,otherwise;protected,abstract,boolean,is,handler,class,bean,type
AbstractHandlerMethodMapping -> protected abstract boolean isHandler(Class<?> beanType)_;1522843494;Whether the given type is a handler with handler methods._@param beanType the type of the bean being checked_@return "true" if this a handler type, "false" otherwise.;protected abstract boolean isHandler(Class<?> beanType)_;whether,the,given,type,is,a,handler,with,handler,methods,param,bean,type,the,type,of,the,bean,being,checked,return,true,if,this,a,handler,type,false,otherwise;protected,abstract,boolean,is,handler,class,bean,type
AbstractHandlerMethodMapping -> protected abstract boolean isHandler(Class<?> beanType)_;1529361191;Whether the given type is a handler with handler methods._@param beanType the type of the bean being checked_@return "true" if this a handler type, "false" otherwise.;protected abstract boolean isHandler(Class<?> beanType)_;whether,the,given,type,is,a,handler,with,handler,methods,param,bean,type,the,type,of,the,bean,being,checked,return,true,if,this,a,handler,type,false,otherwise;protected,abstract,boolean,is,handler,class,bean,type
AbstractHandlerMethodMapping -> protected abstract boolean isHandler(Class<?> beanType)_;1529721864;Whether the given type is a handler with handler methods._@param beanType the type of the bean being checked_@return "true" if this a handler type, "false" otherwise.;protected abstract boolean isHandler(Class<?> beanType)_;whether,the,given,type,is,a,handler,with,handler,methods,param,bean,type,the,type,of,the,bean,being,checked,return,true,if,this,a,handler,type,false,otherwise;protected,abstract,boolean,is,handler,class,bean,type
AbstractHandlerMethodMapping -> protected abstract boolean isHandler(Class<?> beanType)_;1530174524;Whether the given type is a handler with handler methods._@param beanType the type of the bean being checked_@return "true" if this a handler type, "false" otherwise.;protected abstract boolean isHandler(Class<?> beanType)_;whether,the,given,type,is,a,handler,with,handler,methods,param,bean,type,the,type,of,the,bean,being,checked,return,true,if,this,a,handler,type,false,otherwise;protected,abstract,boolean,is,handler,class,bean,type
AbstractHandlerMethodMapping -> protected abstract boolean isHandler(Class<?> beanType)_;1530174524;Whether the given type is a handler with handler methods._@param beanType the type of the bean being checked_@return "true" if this a handler type, "false" otherwise.;protected abstract boolean isHandler(Class<?> beanType)_;whether,the,given,type,is,a,handler,with,handler,methods,param,bean,type,the,type,of,the,bean,being,checked,return,true,if,this,a,handler,type,false,otherwise;protected,abstract,boolean,is,handler,class,bean,type
AbstractHandlerMethodMapping -> protected abstract boolean isHandler(Class<?> beanType)_;1533943217;Whether the given type is a handler with handler methods._@param beanType the type of the bean being checked_@return "true" if this a handler type, "false" otherwise.;protected abstract boolean isHandler(Class<?> beanType)_;whether,the,given,type,is,a,handler,with,handler,methods,param,bean,type,the,type,of,the,bean,being,checked,return,true,if,this,a,handler,type,false,otherwise;protected,abstract,boolean,is,handler,class,bean,type
AbstractHandlerMethodMapping -> protected abstract boolean isHandler(Class<?> beanType)_;1542407418;Whether the given type is a handler with handler methods._@param beanType the type of the bean being checked_@return "true" if this a handler type, "false" otherwise.;protected abstract boolean isHandler(Class<?> beanType)_;whether,the,given,type,is,a,handler,with,handler,methods,param,bean,type,the,type,of,the,bean,being,checked,return,true,if,this,a,handler,type,false,otherwise;protected,abstract,boolean,is,handler,class,bean,type
AbstractHandlerMethodMapping -> protected abstract boolean isHandler(Class<?> beanType)_;1542771062;Whether the given type is a handler with handler methods._@param beanType the type of the bean being checked_@return "true" if this a handler type, "false" otherwise.;protected abstract boolean isHandler(Class<?> beanType)_;whether,the,given,type,is,a,handler,with,handler,methods,param,bean,type,the,type,of,the,bean,being,checked,return,true,if,this,a,handler,type,false,otherwise;protected,abstract,boolean,is,handler,class,bean,type
AbstractHandlerMethodMapping -> protected abstract boolean isHandler(Class<?> beanType)_;1548427561;Whether the given type is a handler with handler methods._@param beanType the type of the bean being checked_@return "true" if this a handler type, "false" otherwise.;protected abstract boolean isHandler(Class<?> beanType)_;whether,the,given,type,is,a,handler,with,handler,methods,param,bean,type,the,type,of,the,bean,being,checked,return,true,if,this,a,handler,type,false,otherwise;protected,abstract,boolean,is,handler,class,bean,type
AbstractHandlerMethodMapping -> protected abstract boolean isHandler(Class<?> beanType)_;1551093473;Whether the given type is a handler with handler methods._@param beanType the type of the bean being checked_@return "true" if this a handler type, "false" otherwise.;protected abstract boolean isHandler(Class<?> beanType)_;whether,the,given,type,is,a,handler,with,handler,methods,param,bean,type,the,type,of,the,bean,being,checked,return,true,if,this,a,handler,type,false,otherwise;protected,abstract,boolean,is,handler,class,bean,type
AbstractHandlerMethodMapping -> @Nullable 	protected abstract T getMappingForMethod(Method method, Class<?> handlerType)_;1495868221;Provide the mapping for a handler method. A method for which no_mapping can be provided is not a handler method._@param method the method to provide a mapping for_@param handlerType the handler type, possibly a sub-type of the method's_declaring class_@return the mapping, or {@code null} if the method is not mapped;@Nullable_	protected abstract T getMappingForMethod(Method method, Class<?> handlerType)_;provide,the,mapping,for,a,handler,method,a,method,for,which,no,mapping,can,be,provided,is,not,a,handler,method,param,method,the,method,to,provide,a,mapping,for,param,handler,type,the,handler,type,possibly,a,sub,type,of,the,method,s,declaring,class,return,the,mapping,or,code,null,if,the,method,is,not,mapped;nullable,protected,abstract,t,get,mapping,for,method,method,method,class,handler,type
AbstractHandlerMethodMapping -> @Nullable 	protected abstract T getMappingForMethod(Method method, Class<?> handlerType)_;1496837955;Provide the mapping for a handler method. A method for which no_mapping can be provided is not a handler method._@param method the method to provide a mapping for_@param handlerType the handler type, possibly a sub-type of the method's_declaring class_@return the mapping, or {@code null} if the method is not mapped;@Nullable_	protected abstract T getMappingForMethod(Method method, Class<?> handlerType)_;provide,the,mapping,for,a,handler,method,a,method,for,which,no,mapping,can,be,provided,is,not,a,handler,method,param,method,the,method,to,provide,a,mapping,for,param,handler,type,the,handler,type,possibly,a,sub,type,of,the,method,s,declaring,class,return,the,mapping,or,code,null,if,the,method,is,not,mapped;nullable,protected,abstract,t,get,mapping,for,method,method,method,class,handler,type
AbstractHandlerMethodMapping -> @Nullable 	protected abstract T getMappingForMethod(Method method, Class<?> handlerType)_;1497251962;Provide the mapping for a handler method. A method for which no_mapping can be provided is not a handler method._@param method the method to provide a mapping for_@param handlerType the handler type, possibly a sub-type of the method's_declaring class_@return the mapping, or {@code null} if the method is not mapped;@Nullable_	protected abstract T getMappingForMethod(Method method, Class<?> handlerType)_;provide,the,mapping,for,a,handler,method,a,method,for,which,no,mapping,can,be,provided,is,not,a,handler,method,param,method,the,method,to,provide,a,mapping,for,param,handler,type,the,handler,type,possibly,a,sub,type,of,the,method,s,declaring,class,return,the,mapping,or,code,null,if,the,method,is,not,mapped;nullable,protected,abstract,t,get,mapping,for,method,method,method,class,handler,type
AbstractHandlerMethodMapping -> @Nullable 	protected abstract T getMappingForMethod(Method method, Class<?> handlerType)_;1498780456;Provide the mapping for a handler method. A method for which no_mapping can be provided is not a handler method._@param method the method to provide a mapping for_@param handlerType the handler type, possibly a sub-type of the method's_declaring class_@return the mapping, or {@code null} if the method is not mapped;@Nullable_	protected abstract T getMappingForMethod(Method method, Class<?> handlerType)_;provide,the,mapping,for,a,handler,method,a,method,for,which,no,mapping,can,be,provided,is,not,a,handler,method,param,method,the,method,to,provide,a,mapping,for,param,handler,type,the,handler,type,possibly,a,sub,type,of,the,method,s,declaring,class,return,the,mapping,or,code,null,if,the,method,is,not,mapped;nullable,protected,abstract,t,get,mapping,for,method,method,method,class,handler,type
AbstractHandlerMethodMapping -> @Nullable 	protected abstract T getMappingForMethod(Method method, Class<?> handlerType)_;1518772998;Provide the mapping for a handler method. A method for which no_mapping can be provided is not a handler method._@param method the method to provide a mapping for_@param handlerType the handler type, possibly a sub-type of the method's_declaring class_@return the mapping, or {@code null} if the method is not mapped;@Nullable_	protected abstract T getMappingForMethod(Method method, Class<?> handlerType)_;provide,the,mapping,for,a,handler,method,a,method,for,which,no,mapping,can,be,provided,is,not,a,handler,method,param,method,the,method,to,provide,a,mapping,for,param,handler,type,the,handler,type,possibly,a,sub,type,of,the,method,s,declaring,class,return,the,mapping,or,code,null,if,the,method,is,not,mapped;nullable,protected,abstract,t,get,mapping,for,method,method,method,class,handler,type
AbstractHandlerMethodMapping -> @Nullable 	protected abstract T getMappingForMethod(Method method, Class<?> handlerType)_;1522103912;Provide the mapping for a handler method. A method for which no_mapping can be provided is not a handler method._@param method the method to provide a mapping for_@param handlerType the handler type, possibly a sub-type of the method's_declaring class_@return the mapping, or {@code null} if the method is not mapped;@Nullable_	protected abstract T getMappingForMethod(Method method, Class<?> handlerType)_;provide,the,mapping,for,a,handler,method,a,method,for,which,no,mapping,can,be,provided,is,not,a,handler,method,param,method,the,method,to,provide,a,mapping,for,param,handler,type,the,handler,type,possibly,a,sub,type,of,the,method,s,declaring,class,return,the,mapping,or,code,null,if,the,method,is,not,mapped;nullable,protected,abstract,t,get,mapping,for,method,method,method,class,handler,type
AbstractHandlerMethodMapping -> @Nullable 	protected abstract T getMappingForMethod(Method method, Class<?> handlerType)_;1522843494;Provide the mapping for a handler method. A method for which no_mapping can be provided is not a handler method._@param method the method to provide a mapping for_@param handlerType the handler type, possibly a sub-type of the method's_declaring class_@return the mapping, or {@code null} if the method is not mapped;@Nullable_	protected abstract T getMappingForMethod(Method method, Class<?> handlerType)_;provide,the,mapping,for,a,handler,method,a,method,for,which,no,mapping,can,be,provided,is,not,a,handler,method,param,method,the,method,to,provide,a,mapping,for,param,handler,type,the,handler,type,possibly,a,sub,type,of,the,method,s,declaring,class,return,the,mapping,or,code,null,if,the,method,is,not,mapped;nullable,protected,abstract,t,get,mapping,for,method,method,method,class,handler,type
AbstractHandlerMethodMapping -> @Nullable 	protected abstract T getMappingForMethod(Method method, Class<?> handlerType)_;1529361191;Provide the mapping for a handler method. A method for which no_mapping can be provided is not a handler method._@param method the method to provide a mapping for_@param handlerType the handler type, possibly a sub-type of the method's_declaring class_@return the mapping, or {@code null} if the method is not mapped;@Nullable_	protected abstract T getMappingForMethod(Method method, Class<?> handlerType)_;provide,the,mapping,for,a,handler,method,a,method,for,which,no,mapping,can,be,provided,is,not,a,handler,method,param,method,the,method,to,provide,a,mapping,for,param,handler,type,the,handler,type,possibly,a,sub,type,of,the,method,s,declaring,class,return,the,mapping,or,code,null,if,the,method,is,not,mapped;nullable,protected,abstract,t,get,mapping,for,method,method,method,class,handler,type
AbstractHandlerMethodMapping -> @Nullable 	protected abstract T getMappingForMethod(Method method, Class<?> handlerType)_;1529721864;Provide the mapping for a handler method. A method for which no_mapping can be provided is not a handler method._@param method the method to provide a mapping for_@param handlerType the handler type, possibly a sub-type of the method's_declaring class_@return the mapping, or {@code null} if the method is not mapped;@Nullable_	protected abstract T getMappingForMethod(Method method, Class<?> handlerType)_;provide,the,mapping,for,a,handler,method,a,method,for,which,no,mapping,can,be,provided,is,not,a,handler,method,param,method,the,method,to,provide,a,mapping,for,param,handler,type,the,handler,type,possibly,a,sub,type,of,the,method,s,declaring,class,return,the,mapping,or,code,null,if,the,method,is,not,mapped;nullable,protected,abstract,t,get,mapping,for,method,method,method,class,handler,type
AbstractHandlerMethodMapping -> @Nullable 	protected abstract T getMappingForMethod(Method method, Class<?> handlerType)_;1530174524;Provide the mapping for a handler method. A method for which no_mapping can be provided is not a handler method._@param method the method to provide a mapping for_@param handlerType the handler type, possibly a sub-type of the method's_declaring class_@return the mapping, or {@code null} if the method is not mapped;@Nullable_	protected abstract T getMappingForMethod(Method method, Class<?> handlerType)_;provide,the,mapping,for,a,handler,method,a,method,for,which,no,mapping,can,be,provided,is,not,a,handler,method,param,method,the,method,to,provide,a,mapping,for,param,handler,type,the,handler,type,possibly,a,sub,type,of,the,method,s,declaring,class,return,the,mapping,or,code,null,if,the,method,is,not,mapped;nullable,protected,abstract,t,get,mapping,for,method,method,method,class,handler,type
AbstractHandlerMethodMapping -> @Nullable 	protected abstract T getMappingForMethod(Method method, Class<?> handlerType)_;1530174524;Provide the mapping for a handler method. A method for which no_mapping can be provided is not a handler method._@param method the method to provide a mapping for_@param handlerType the handler type, possibly a sub-type of the method's_declaring class_@return the mapping, or {@code null} if the method is not mapped;@Nullable_	protected abstract T getMappingForMethod(Method method, Class<?> handlerType)_;provide,the,mapping,for,a,handler,method,a,method,for,which,no,mapping,can,be,provided,is,not,a,handler,method,param,method,the,method,to,provide,a,mapping,for,param,handler,type,the,handler,type,possibly,a,sub,type,of,the,method,s,declaring,class,return,the,mapping,or,code,null,if,the,method,is,not,mapped;nullable,protected,abstract,t,get,mapping,for,method,method,method,class,handler,type
AbstractHandlerMethodMapping -> @Nullable 	protected abstract T getMappingForMethod(Method method, Class<?> handlerType)_;1533943217;Provide the mapping for a handler method. A method for which no_mapping can be provided is not a handler method._@param method the method to provide a mapping for_@param handlerType the handler type, possibly a sub-type of the method's_declaring class_@return the mapping, or {@code null} if the method is not mapped;@Nullable_	protected abstract T getMappingForMethod(Method method, Class<?> handlerType)_;provide,the,mapping,for,a,handler,method,a,method,for,which,no,mapping,can,be,provided,is,not,a,handler,method,param,method,the,method,to,provide,a,mapping,for,param,handler,type,the,handler,type,possibly,a,sub,type,of,the,method,s,declaring,class,return,the,mapping,or,code,null,if,the,method,is,not,mapped;nullable,protected,abstract,t,get,mapping,for,method,method,method,class,handler,type
AbstractHandlerMethodMapping -> @Nullable 	protected abstract T getMappingForMethod(Method method, Class<?> handlerType)_;1542407418;Provide the mapping for a handler method. A method for which no_mapping can be provided is not a handler method._@param method the method to provide a mapping for_@param handlerType the handler type, possibly a sub-type of the method's_declaring class_@return the mapping, or {@code null} if the method is not mapped;@Nullable_	protected abstract T getMappingForMethod(Method method, Class<?> handlerType)_;provide,the,mapping,for,a,handler,method,a,method,for,which,no,mapping,can,be,provided,is,not,a,handler,method,param,method,the,method,to,provide,a,mapping,for,param,handler,type,the,handler,type,possibly,a,sub,type,of,the,method,s,declaring,class,return,the,mapping,or,code,null,if,the,method,is,not,mapped;nullable,protected,abstract,t,get,mapping,for,method,method,method,class,handler,type
AbstractHandlerMethodMapping -> @Nullable 	protected abstract T getMappingForMethod(Method method, Class<?> handlerType)_;1542771062;Provide the mapping for a handler method. A method for which no_mapping can be provided is not a handler method._@param method the method to provide a mapping for_@param handlerType the handler type, possibly a sub-type of the method's_declaring class_@return the mapping, or {@code null} if the method is not mapped;@Nullable_	protected abstract T getMappingForMethod(Method method, Class<?> handlerType)_;provide,the,mapping,for,a,handler,method,a,method,for,which,no,mapping,can,be,provided,is,not,a,handler,method,param,method,the,method,to,provide,a,mapping,for,param,handler,type,the,handler,type,possibly,a,sub,type,of,the,method,s,declaring,class,return,the,mapping,or,code,null,if,the,method,is,not,mapped;nullable,protected,abstract,t,get,mapping,for,method,method,method,class,handler,type
AbstractHandlerMethodMapping -> @Nullable 	protected abstract T getMappingForMethod(Method method, Class<?> handlerType)_;1548427561;Provide the mapping for a handler method. A method for which no_mapping can be provided is not a handler method._@param method the method to provide a mapping for_@param handlerType the handler type, possibly a sub-type of the method's_declaring class_@return the mapping, or {@code null} if the method is not mapped;@Nullable_	protected abstract T getMappingForMethod(Method method, Class<?> handlerType)_;provide,the,mapping,for,a,handler,method,a,method,for,which,no,mapping,can,be,provided,is,not,a,handler,method,param,method,the,method,to,provide,a,mapping,for,param,handler,type,the,handler,type,possibly,a,sub,type,of,the,method,s,declaring,class,return,the,mapping,or,code,null,if,the,method,is,not,mapped;nullable,protected,abstract,t,get,mapping,for,method,method,method,class,handler,type
AbstractHandlerMethodMapping -> @Nullable 	protected abstract T getMappingForMethod(Method method, Class<?> handlerType)_;1551093473;Provide the mapping for a handler method. A method for which no_mapping can be provided is not a handler method._@param method the method to provide a mapping for_@param handlerType the handler type, possibly a sub-type of the method's_declaring class_@return the mapping, or {@code null} if the method is not mapped;@Nullable_	protected abstract T getMappingForMethod(Method method, Class<?> handlerType)_;provide,the,mapping,for,a,handler,method,a,method,for,which,no,mapping,can,be,provided,is,not,a,handler,method,param,method,the,method,to,provide,a,mapping,for,param,handler,type,the,handler,type,possibly,a,sub,type,of,the,method,s,declaring,class,return,the,mapping,or,code,null,if,the,method,is,not,mapped;nullable,protected,abstract,t,get,mapping,for,method,method,method,class,handler,type
AbstractHandlerMethodMapping -> protected String[] getCandidateBeanNames();1533943217;Determine the names of candidate beans in the application context._@since 5.1_@see #setDetectHandlerMethodsInAncestorContexts_@see BeanFactoryUtils#beanNamesForTypeIncludingAncestors;protected String[] getCandidateBeanNames() {_		return (this.detectHandlerMethodsInAncestorContexts ?_				BeanFactoryUtils.beanNamesForTypeIncludingAncestors(obtainApplicationContext(), Object.class) :_				obtainApplicationContext().getBeanNamesForType(Object.class))__	};determine,the,names,of,candidate,beans,in,the,application,context,since,5,1,see,set,detect,handler,methods,in,ancestor,contexts,see,bean,factory,utils,bean,names,for,type,including,ancestors;protected,string,get,candidate,bean,names,return,this,detect,handler,methods,in,ancestor,contexts,bean,factory,utils,bean,names,for,type,including,ancestors,obtain,application,context,object,class,obtain,application,context,get,bean,names,for,type,object,class
AbstractHandlerMethodMapping -> protected String[] getCandidateBeanNames();1542407418;Determine the names of candidate beans in the application context._@since 5.1_@see #setDetectHandlerMethodsInAncestorContexts_@see BeanFactoryUtils#beanNamesForTypeIncludingAncestors;protected String[] getCandidateBeanNames() {_		return (this.detectHandlerMethodsInAncestorContexts ?_				BeanFactoryUtils.beanNamesForTypeIncludingAncestors(obtainApplicationContext(), Object.class) :_				obtainApplicationContext().getBeanNamesForType(Object.class))__	};determine,the,names,of,candidate,beans,in,the,application,context,since,5,1,see,set,detect,handler,methods,in,ancestor,contexts,see,bean,factory,utils,bean,names,for,type,including,ancestors;protected,string,get,candidate,bean,names,return,this,detect,handler,methods,in,ancestor,contexts,bean,factory,utils,bean,names,for,type,including,ancestors,obtain,application,context,object,class,obtain,application,context,get,bean,names,for,type,object,class
AbstractHandlerMethodMapping -> protected String[] getCandidateBeanNames();1542771062;Determine the names of candidate beans in the application context._@since 5.1_@see #setDetectHandlerMethodsInAncestorContexts_@see BeanFactoryUtils#beanNamesForTypeIncludingAncestors;protected String[] getCandidateBeanNames() {_		return (this.detectHandlerMethodsInAncestorContexts ?_				BeanFactoryUtils.beanNamesForTypeIncludingAncestors(obtainApplicationContext(), Object.class) :_				obtainApplicationContext().getBeanNamesForType(Object.class))__	};determine,the,names,of,candidate,beans,in,the,application,context,since,5,1,see,set,detect,handler,methods,in,ancestor,contexts,see,bean,factory,utils,bean,names,for,type,including,ancestors;protected,string,get,candidate,bean,names,return,this,detect,handler,methods,in,ancestor,contexts,bean,factory,utils,bean,names,for,type,including,ancestors,obtain,application,context,object,class,obtain,application,context,get,bean,names,for,type,object,class
AbstractHandlerMethodMapping -> protected String[] getCandidateBeanNames();1548427561;Determine the names of candidate beans in the application context._@since 5.1_@see #setDetectHandlerMethodsInAncestorContexts_@see BeanFactoryUtils#beanNamesForTypeIncludingAncestors;protected String[] getCandidateBeanNames() {_		return (this.detectHandlerMethodsInAncestorContexts ?_				BeanFactoryUtils.beanNamesForTypeIncludingAncestors(obtainApplicationContext(), Object.class) :_				obtainApplicationContext().getBeanNamesForType(Object.class))__	};determine,the,names,of,candidate,beans,in,the,application,context,since,5,1,see,set,detect,handler,methods,in,ancestor,contexts,see,bean,factory,utils,bean,names,for,type,including,ancestors;protected,string,get,candidate,bean,names,return,this,detect,handler,methods,in,ancestor,contexts,bean,factory,utils,bean,names,for,type,including,ancestors,obtain,application,context,object,class,obtain,application,context,get,bean,names,for,type,object,class
AbstractHandlerMethodMapping -> protected String[] getCandidateBeanNames();1551093473;Determine the names of candidate beans in the application context._@since 5.1_@see #setDetectHandlerMethodsInAncestorContexts_@see BeanFactoryUtils#beanNamesForTypeIncludingAncestors;protected String[] getCandidateBeanNames() {_		return (this.detectHandlerMethodsInAncestorContexts ?_				BeanFactoryUtils.beanNamesForTypeIncludingAncestors(obtainApplicationContext(), Object.class) :_				obtainApplicationContext().getBeanNamesForType(Object.class))__	};determine,the,names,of,candidate,beans,in,the,application,context,since,5,1,see,set,detect,handler,methods,in,ancestor,contexts,see,bean,factory,utils,bean,names,for,type,including,ancestors;protected,string,get,candidate,bean,names,return,this,detect,handler,methods,in,ancestor,contexts,bean,factory,utils,bean,names,for,type,including,ancestors,obtain,application,context,object,class,obtain,application,context,get,bean,names,for,type,object,class
AbstractHandlerMethodMapping -> @Nullable 	protected HandlerMethod lookupHandlerMethod(String lookupPath, HttpServletRequest request) throws Exception;1495868221;Look up the best-matching handler method for the current request._If multiple matches are found, the best match is selected._@param lookupPath mapping lookup path within the current servlet mapping_@param request the current request_@return the best-matching handler method, or {@code null} if no match_@see #handleMatch(Object, String, HttpServletRequest)_@see #handleNoMatch(Set, String, HttpServletRequest);@Nullable_	protected HandlerMethod lookupHandlerMethod(String lookupPath, HttpServletRequest request) throws Exception {_		List<Match> matches = new ArrayList<Match>()__		List<T> directPathMatches = this.mappingRegistry.getMappingsByUrl(lookupPath)__		if (directPathMatches != null) {_			addMatchingMappings(directPathMatches, matches, request)__		}_		if (matches.isEmpty()) {_			_			addMatchingMappings(this.mappingRegistry.getMappings().keySet(), matches, request)__		}__		if (!matches.isEmpty()) {_			Comparator<Match> comparator = new MatchComparator(getMappingComparator(request))__			Collections.sort(matches, comparator)__			if (logger.isTraceEnabled()) {_				logger.trace("Found " + matches.size() + " matching mapping(s) for [" +_						lookupPath + "] : " + matches)__			}_			Match bestMatch = matches.get(0)__			if (matches.size() > 1) {_				if (CorsUtils.isPreFlightRequest(request)) {_					return PREFLIGHT_AMBIGUOUS_MATCH__				}_				Match secondBestMatch = matches.get(1)__				if (comparator.compare(bestMatch, secondBestMatch) == 0) {_					Method m1 = bestMatch.handlerMethod.getMethod()__					Method m2 = secondBestMatch.handlerMethod.getMethod()__					throw new IllegalStateException("Ambiguous handler methods mapped for HTTP path '" +_							request.getRequestURL() + "': {" + m1 + ", " + m2 + "}")__				}_			}_			handleMatch(bestMatch.mapping, lookupPath, request)__			return bestMatch.handlerMethod__		}_		else {_			return handleNoMatch(this.mappingRegistry.getMappings().keySet(), lookupPath, request)__		}_	};look,up,the,best,matching,handler,method,for,the,current,request,if,multiple,matches,are,found,the,best,match,is,selected,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,request,the,current,request,return,the,best,matching,handler,method,or,code,null,if,no,match,see,handle,match,object,string,http,servlet,request,see,handle,no,match,set,string,http,servlet,request;nullable,protected,handler,method,lookup,handler,method,string,lookup,path,http,servlet,request,request,throws,exception,list,match,matches,new,array,list,match,list,t,direct,path,matches,this,mapping,registry,get,mappings,by,url,lookup,path,if,direct,path,matches,null,add,matching,mappings,direct,path,matches,matches,request,if,matches,is,empty,add,matching,mappings,this,mapping,registry,get,mappings,key,set,matches,request,if,matches,is,empty,comparator,match,comparator,new,match,comparator,get,mapping,comparator,request,collections,sort,matches,comparator,if,logger,is,trace,enabled,logger,trace,found,matches,size,matching,mapping,s,for,lookup,path,matches,match,best,match,matches,get,0,if,matches,size,1,if,cors,utils,is,pre,flight,request,request,return,match,second,best,match,matches,get,1,if,comparator,compare,best,match,second,best,match,0,method,m1,best,match,handler,method,get,method,method,m2,second,best,match,handler,method,get,method,throw,new,illegal,state,exception,ambiguous,handler,methods,mapped,for,http,path,request,get,request,url,m1,m2,handle,match,best,match,mapping,lookup,path,request,return,best,match,handler,method,else,return,handle,no,match,this,mapping,registry,get,mappings,key,set,lookup,path,request
AbstractHandlerMethodMapping -> @Nullable 	protected HandlerMethod lookupHandlerMethod(String lookupPath, HttpServletRequest request) throws Exception;1496837955;Look up the best-matching handler method for the current request._If multiple matches are found, the best match is selected._@param lookupPath mapping lookup path within the current servlet mapping_@param request the current request_@return the best-matching handler method, or {@code null} if no match_@see #handleMatch(Object, String, HttpServletRequest)_@see #handleNoMatch(Set, String, HttpServletRequest);@Nullable_	protected HandlerMethod lookupHandlerMethod(String lookupPath, HttpServletRequest request) throws Exception {_		List<Match> matches = new ArrayList<Match>()__		List<T> directPathMatches = this.mappingRegistry.getMappingsByUrl(lookupPath)__		if (directPathMatches != null) {_			addMatchingMappings(directPathMatches, matches, request)__		}_		if (matches.isEmpty()) {_			_			addMatchingMappings(this.mappingRegistry.getMappings().keySet(), matches, request)__		}__		if (!matches.isEmpty()) {_			Comparator<Match> comparator = new MatchComparator(getMappingComparator(request))__			Collections.sort(matches, comparator)__			if (logger.isTraceEnabled()) {_				logger.trace("Found " + matches.size() + " matching mapping(s) for [" +_						lookupPath + "] : " + matches)__			}_			Match bestMatch = matches.get(0)__			if (matches.size() > 1) {_				if (CorsUtils.isPreFlightRequest(request)) {_					return PREFLIGHT_AMBIGUOUS_MATCH__				}_				Match secondBestMatch = matches.get(1)__				if (comparator.compare(bestMatch, secondBestMatch) == 0) {_					Method m1 = bestMatch.handlerMethod.getMethod()__					Method m2 = secondBestMatch.handlerMethod.getMethod()__					throw new IllegalStateException("Ambiguous handler methods mapped for HTTP path '" +_							request.getRequestURL() + "': {" + m1 + ", " + m2 + "}")__				}_			}_			handleMatch(bestMatch.mapping, lookupPath, request)__			return bestMatch.handlerMethod__		}_		else {_			return handleNoMatch(this.mappingRegistry.getMappings().keySet(), lookupPath, request)__		}_	};look,up,the,best,matching,handler,method,for,the,current,request,if,multiple,matches,are,found,the,best,match,is,selected,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,request,the,current,request,return,the,best,matching,handler,method,or,code,null,if,no,match,see,handle,match,object,string,http,servlet,request,see,handle,no,match,set,string,http,servlet,request;nullable,protected,handler,method,lookup,handler,method,string,lookup,path,http,servlet,request,request,throws,exception,list,match,matches,new,array,list,match,list,t,direct,path,matches,this,mapping,registry,get,mappings,by,url,lookup,path,if,direct,path,matches,null,add,matching,mappings,direct,path,matches,matches,request,if,matches,is,empty,add,matching,mappings,this,mapping,registry,get,mappings,key,set,matches,request,if,matches,is,empty,comparator,match,comparator,new,match,comparator,get,mapping,comparator,request,collections,sort,matches,comparator,if,logger,is,trace,enabled,logger,trace,found,matches,size,matching,mapping,s,for,lookup,path,matches,match,best,match,matches,get,0,if,matches,size,1,if,cors,utils,is,pre,flight,request,request,return,match,second,best,match,matches,get,1,if,comparator,compare,best,match,second,best,match,0,method,m1,best,match,handler,method,get,method,method,m2,second,best,match,handler,method,get,method,throw,new,illegal,state,exception,ambiguous,handler,methods,mapped,for,http,path,request,get,request,url,m1,m2,handle,match,best,match,mapping,lookup,path,request,return,best,match,handler,method,else,return,handle,no,match,this,mapping,registry,get,mappings,key,set,lookup,path,request
AbstractHandlerMethodMapping -> @Nullable 	protected HandlerMethod lookupHandlerMethod(String lookupPath, HttpServletRequest request) throws Exception;1497251962;Look up the best-matching handler method for the current request._If multiple matches are found, the best match is selected._@param lookupPath mapping lookup path within the current servlet mapping_@param request the current request_@return the best-matching handler method, or {@code null} if no match_@see #handleMatch(Object, String, HttpServletRequest)_@see #handleNoMatch(Set, String, HttpServletRequest);@Nullable_	protected HandlerMethod lookupHandlerMethod(String lookupPath, HttpServletRequest request) throws Exception {_		List<Match> matches = new ArrayList<>()__		List<T> directPathMatches = this.mappingRegistry.getMappingsByUrl(lookupPath)__		if (directPathMatches != null) {_			addMatchingMappings(directPathMatches, matches, request)__		}_		if (matches.isEmpty()) {_			_			addMatchingMappings(this.mappingRegistry.getMappings().keySet(), matches, request)__		}__		if (!matches.isEmpty()) {_			Comparator<Match> comparator = new MatchComparator(getMappingComparator(request))__			Collections.sort(matches, comparator)__			if (logger.isTraceEnabled()) {_				logger.trace("Found " + matches.size() + " matching mapping(s) for [" +_						lookupPath + "] : " + matches)__			}_			Match bestMatch = matches.get(0)__			if (matches.size() > 1) {_				if (CorsUtils.isPreFlightRequest(request)) {_					return PREFLIGHT_AMBIGUOUS_MATCH__				}_				Match secondBestMatch = matches.get(1)__				if (comparator.compare(bestMatch, secondBestMatch) == 0) {_					Method m1 = bestMatch.handlerMethod.getMethod()__					Method m2 = secondBestMatch.handlerMethod.getMethod()__					throw new IllegalStateException("Ambiguous handler methods mapped for HTTP path '" +_							request.getRequestURL() + "': {" + m1 + ", " + m2 + "}")__				}_			}_			handleMatch(bestMatch.mapping, lookupPath, request)__			return bestMatch.handlerMethod__		}_		else {_			return handleNoMatch(this.mappingRegistry.getMappings().keySet(), lookupPath, request)__		}_	};look,up,the,best,matching,handler,method,for,the,current,request,if,multiple,matches,are,found,the,best,match,is,selected,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,request,the,current,request,return,the,best,matching,handler,method,or,code,null,if,no,match,see,handle,match,object,string,http,servlet,request,see,handle,no,match,set,string,http,servlet,request;nullable,protected,handler,method,lookup,handler,method,string,lookup,path,http,servlet,request,request,throws,exception,list,match,matches,new,array,list,list,t,direct,path,matches,this,mapping,registry,get,mappings,by,url,lookup,path,if,direct,path,matches,null,add,matching,mappings,direct,path,matches,matches,request,if,matches,is,empty,add,matching,mappings,this,mapping,registry,get,mappings,key,set,matches,request,if,matches,is,empty,comparator,match,comparator,new,match,comparator,get,mapping,comparator,request,collections,sort,matches,comparator,if,logger,is,trace,enabled,logger,trace,found,matches,size,matching,mapping,s,for,lookup,path,matches,match,best,match,matches,get,0,if,matches,size,1,if,cors,utils,is,pre,flight,request,request,return,match,second,best,match,matches,get,1,if,comparator,compare,best,match,second,best,match,0,method,m1,best,match,handler,method,get,method,method,m2,second,best,match,handler,method,get,method,throw,new,illegal,state,exception,ambiguous,handler,methods,mapped,for,http,path,request,get,request,url,m1,m2,handle,match,best,match,mapping,lookup,path,request,return,best,match,handler,method,else,return,handle,no,match,this,mapping,registry,get,mappings,key,set,lookup,path,request
AbstractHandlerMethodMapping -> @Nullable 	protected HandlerMethod lookupHandlerMethod(String lookupPath, HttpServletRequest request) throws Exception;1498780456;Look up the best-matching handler method for the current request._If multiple matches are found, the best match is selected._@param lookupPath mapping lookup path within the current servlet mapping_@param request the current request_@return the best-matching handler method, or {@code null} if no match_@see #handleMatch(Object, String, HttpServletRequest)_@see #handleNoMatch(Set, String, HttpServletRequest);@Nullable_	protected HandlerMethod lookupHandlerMethod(String lookupPath, HttpServletRequest request) throws Exception {_		List<Match> matches = new ArrayList<>()__		List<T> directPathMatches = this.mappingRegistry.getMappingsByUrl(lookupPath)__		if (directPathMatches != null) {_			addMatchingMappings(directPathMatches, matches, request)__		}_		if (matches.isEmpty()) {_			_			addMatchingMappings(this.mappingRegistry.getMappings().keySet(), matches, request)__		}__		if (!matches.isEmpty()) {_			Comparator<Match> comparator = new MatchComparator(getMappingComparator(request))__			Collections.sort(matches, comparator)__			if (logger.isTraceEnabled()) {_				logger.trace("Found " + matches.size() + " matching mapping(s) for [" +_						lookupPath + "] : " + matches)__			}_			Match bestMatch = matches.get(0)__			if (matches.size() > 1) {_				if (CorsUtils.isPreFlightRequest(request)) {_					return PREFLIGHT_AMBIGUOUS_MATCH__				}_				Match secondBestMatch = matches.get(1)__				if (comparator.compare(bestMatch, secondBestMatch) == 0) {_					Method m1 = bestMatch.handlerMethod.getMethod()__					Method m2 = secondBestMatch.handlerMethod.getMethod()__					throw new IllegalStateException("Ambiguous handler methods mapped for HTTP path '" +_							request.getRequestURL() + "': {" + m1 + ", " + m2 + "}")__				}_			}_			handleMatch(bestMatch.mapping, lookupPath, request)__			return bestMatch.handlerMethod__		}_		else {_			return handleNoMatch(this.mappingRegistry.getMappings().keySet(), lookupPath, request)__		}_	};look,up,the,best,matching,handler,method,for,the,current,request,if,multiple,matches,are,found,the,best,match,is,selected,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,request,the,current,request,return,the,best,matching,handler,method,or,code,null,if,no,match,see,handle,match,object,string,http,servlet,request,see,handle,no,match,set,string,http,servlet,request;nullable,protected,handler,method,lookup,handler,method,string,lookup,path,http,servlet,request,request,throws,exception,list,match,matches,new,array,list,list,t,direct,path,matches,this,mapping,registry,get,mappings,by,url,lookup,path,if,direct,path,matches,null,add,matching,mappings,direct,path,matches,matches,request,if,matches,is,empty,add,matching,mappings,this,mapping,registry,get,mappings,key,set,matches,request,if,matches,is,empty,comparator,match,comparator,new,match,comparator,get,mapping,comparator,request,collections,sort,matches,comparator,if,logger,is,trace,enabled,logger,trace,found,matches,size,matching,mapping,s,for,lookup,path,matches,match,best,match,matches,get,0,if,matches,size,1,if,cors,utils,is,pre,flight,request,request,return,match,second,best,match,matches,get,1,if,comparator,compare,best,match,second,best,match,0,method,m1,best,match,handler,method,get,method,method,m2,second,best,match,handler,method,get,method,throw,new,illegal,state,exception,ambiguous,handler,methods,mapped,for,http,path,request,get,request,url,m1,m2,handle,match,best,match,mapping,lookup,path,request,return,best,match,handler,method,else,return,handle,no,match,this,mapping,registry,get,mappings,key,set,lookup,path,request
AbstractHandlerMethodMapping -> @Nullable 	protected HandlerMethod lookupHandlerMethod(String lookupPath, HttpServletRequest request) throws Exception;1518772998;Look up the best-matching handler method for the current request._If multiple matches are found, the best match is selected._@param lookupPath mapping lookup path within the current servlet mapping_@param request the current request_@return the best-matching handler method, or {@code null} if no match_@see #handleMatch(Object, String, HttpServletRequest)_@see #handleNoMatch(Set, String, HttpServletRequest);@Nullable_	protected HandlerMethod lookupHandlerMethod(String lookupPath, HttpServletRequest request) throws Exception {_		List<Match> matches = new ArrayList<>()__		List<T> directPathMatches = this.mappingRegistry.getMappingsByUrl(lookupPath)__		if (directPathMatches != null) {_			addMatchingMappings(directPathMatches, matches, request)__		}_		if (matches.isEmpty()) {_			_			addMatchingMappings(this.mappingRegistry.getMappings().keySet(), matches, request)__		}__		if (!matches.isEmpty()) {_			Comparator<Match> comparator = new MatchComparator(getMappingComparator(request))__			matches.sort(comparator)__			if (logger.isTraceEnabled()) {_				logger.trace("Found " + matches.size() + " matching mapping(s) for [" + lookupPath + "] : " + matches)__			}_			Match bestMatch = matches.get(0)__			if (matches.size() > 1) {_				if (CorsUtils.isPreFlightRequest(request)) {_					return PREFLIGHT_AMBIGUOUS_MATCH__				}_				Match secondBestMatch = matches.get(1)__				if (comparator.compare(bestMatch, secondBestMatch) == 0) {_					Method m1 = bestMatch.handlerMethod.getMethod()__					Method m2 = secondBestMatch.handlerMethod.getMethod()__					throw new IllegalStateException("Ambiguous handler methods mapped for HTTP path '" +_							request.getRequestURL() + "': {" + m1 + ", " + m2 + "}")__				}_			}_			handleMatch(bestMatch.mapping, lookupPath, request)__			return bestMatch.handlerMethod__		}_		else {_			return handleNoMatch(this.mappingRegistry.getMappings().keySet(), lookupPath, request)__		}_	};look,up,the,best,matching,handler,method,for,the,current,request,if,multiple,matches,are,found,the,best,match,is,selected,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,request,the,current,request,return,the,best,matching,handler,method,or,code,null,if,no,match,see,handle,match,object,string,http,servlet,request,see,handle,no,match,set,string,http,servlet,request;nullable,protected,handler,method,lookup,handler,method,string,lookup,path,http,servlet,request,request,throws,exception,list,match,matches,new,array,list,list,t,direct,path,matches,this,mapping,registry,get,mappings,by,url,lookup,path,if,direct,path,matches,null,add,matching,mappings,direct,path,matches,matches,request,if,matches,is,empty,add,matching,mappings,this,mapping,registry,get,mappings,key,set,matches,request,if,matches,is,empty,comparator,match,comparator,new,match,comparator,get,mapping,comparator,request,matches,sort,comparator,if,logger,is,trace,enabled,logger,trace,found,matches,size,matching,mapping,s,for,lookup,path,matches,match,best,match,matches,get,0,if,matches,size,1,if,cors,utils,is,pre,flight,request,request,return,match,second,best,match,matches,get,1,if,comparator,compare,best,match,second,best,match,0,method,m1,best,match,handler,method,get,method,method,m2,second,best,match,handler,method,get,method,throw,new,illegal,state,exception,ambiguous,handler,methods,mapped,for,http,path,request,get,request,url,m1,m2,handle,match,best,match,mapping,lookup,path,request,return,best,match,handler,method,else,return,handle,no,match,this,mapping,registry,get,mappings,key,set,lookup,path,request
AbstractHandlerMethodMapping -> @Nullable 	protected HandlerMethod lookupHandlerMethod(String lookupPath, HttpServletRequest request) throws Exception;1522103912;Look up the best-matching handler method for the current request._If multiple matches are found, the best match is selected._@param lookupPath mapping lookup path within the current servlet mapping_@param request the current request_@return the best-matching handler method, or {@code null} if no match_@see #handleMatch(Object, String, HttpServletRequest)_@see #handleNoMatch(Set, String, HttpServletRequest);@Nullable_	protected HandlerMethod lookupHandlerMethod(String lookupPath, HttpServletRequest request) throws Exception {_		List<Match> matches = new ArrayList<>()__		List<T> directPathMatches = this.mappingRegistry.getMappingsByUrl(lookupPath)__		if (directPathMatches != null) {_			addMatchingMappings(directPathMatches, matches, request)__		}_		if (matches.isEmpty()) {_			_			addMatchingMappings(this.mappingRegistry.getMappings().keySet(), matches, request)__		}__		if (!matches.isEmpty()) {_			Comparator<Match> comparator = new MatchComparator(getMappingComparator(request))__			matches.sort(comparator)__			if (logger.isTraceEnabled()) {_				logger.trace("Found " + matches.size() + " matching mapping(s) for [" + lookupPath + "] : " + matches)__			}_			Match bestMatch = matches.get(0)__			if (matches.size() > 1) {_				if (CorsUtils.isPreFlightRequest(request)) {_					return PREFLIGHT_AMBIGUOUS_MATCH__				}_				Match secondBestMatch = matches.get(1)__				if (comparator.compare(bestMatch, secondBestMatch) == 0) {_					Method m1 = bestMatch.handlerMethod.getMethod()__					Method m2 = secondBestMatch.handlerMethod.getMethod()__					throw new IllegalStateException("Ambiguous handler methods mapped for HTTP path '" +_							request.getRequestURL() + "': {" + m1 + ", " + m2 + "}")__				}_			}_			handleMatch(bestMatch.mapping, lookupPath, request)__			return bestMatch.handlerMethod__		}_		else {_			return handleNoMatch(this.mappingRegistry.getMappings().keySet(), lookupPath, request)__		}_	};look,up,the,best,matching,handler,method,for,the,current,request,if,multiple,matches,are,found,the,best,match,is,selected,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,request,the,current,request,return,the,best,matching,handler,method,or,code,null,if,no,match,see,handle,match,object,string,http,servlet,request,see,handle,no,match,set,string,http,servlet,request;nullable,protected,handler,method,lookup,handler,method,string,lookup,path,http,servlet,request,request,throws,exception,list,match,matches,new,array,list,list,t,direct,path,matches,this,mapping,registry,get,mappings,by,url,lookup,path,if,direct,path,matches,null,add,matching,mappings,direct,path,matches,matches,request,if,matches,is,empty,add,matching,mappings,this,mapping,registry,get,mappings,key,set,matches,request,if,matches,is,empty,comparator,match,comparator,new,match,comparator,get,mapping,comparator,request,matches,sort,comparator,if,logger,is,trace,enabled,logger,trace,found,matches,size,matching,mapping,s,for,lookup,path,matches,match,best,match,matches,get,0,if,matches,size,1,if,cors,utils,is,pre,flight,request,request,return,match,second,best,match,matches,get,1,if,comparator,compare,best,match,second,best,match,0,method,m1,best,match,handler,method,get,method,method,m2,second,best,match,handler,method,get,method,throw,new,illegal,state,exception,ambiguous,handler,methods,mapped,for,http,path,request,get,request,url,m1,m2,handle,match,best,match,mapping,lookup,path,request,return,best,match,handler,method,else,return,handle,no,match,this,mapping,registry,get,mappings,key,set,lookup,path,request
AbstractHandlerMethodMapping -> @Nullable 	protected HandlerMethod lookupHandlerMethod(String lookupPath, HttpServletRequest request) throws Exception;1522843494;Look up the best-matching handler method for the current request._If multiple matches are found, the best match is selected._@param lookupPath mapping lookup path within the current servlet mapping_@param request the current request_@return the best-matching handler method, or {@code null} if no match_@see #handleMatch(Object, String, HttpServletRequest)_@see #handleNoMatch(Set, String, HttpServletRequest);@Nullable_	protected HandlerMethod lookupHandlerMethod(String lookupPath, HttpServletRequest request) throws Exception {_		List<Match> matches = new ArrayList<>()__		List<T> directPathMatches = this.mappingRegistry.getMappingsByUrl(lookupPath)__		if (directPathMatches != null) {_			addMatchingMappings(directPathMatches, matches, request)__		}_		if (matches.isEmpty()) {_			_			addMatchingMappings(this.mappingRegistry.getMappings().keySet(), matches, request)__		}__		if (!matches.isEmpty()) {_			Comparator<Match> comparator = new MatchComparator(getMappingComparator(request))__			matches.sort(comparator)__			if (logger.isTraceEnabled()) {_				logger.trace("Found " + matches.size() + " matching mapping(s) for [" + lookupPath + "] : " + matches)__			}_			Match bestMatch = matches.get(0)__			if (matches.size() > 1) {_				if (CorsUtils.isPreFlightRequest(request)) {_					return PREFLIGHT_AMBIGUOUS_MATCH__				}_				Match secondBestMatch = matches.get(1)__				if (comparator.compare(bestMatch, secondBestMatch) == 0) {_					Method m1 = bestMatch.handlerMethod.getMethod()__					Method m2 = secondBestMatch.handlerMethod.getMethod()__					throw new IllegalStateException("Ambiguous handler methods mapped for HTTP path '" +_							request.getRequestURL() + "': {" + m1 + ", " + m2 + "}")__				}_			}_			handleMatch(bestMatch.mapping, lookupPath, request)__			return bestMatch.handlerMethod__		}_		else {_			return handleNoMatch(this.mappingRegistry.getMappings().keySet(), lookupPath, request)__		}_	};look,up,the,best,matching,handler,method,for,the,current,request,if,multiple,matches,are,found,the,best,match,is,selected,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,request,the,current,request,return,the,best,matching,handler,method,or,code,null,if,no,match,see,handle,match,object,string,http,servlet,request,see,handle,no,match,set,string,http,servlet,request;nullable,protected,handler,method,lookup,handler,method,string,lookup,path,http,servlet,request,request,throws,exception,list,match,matches,new,array,list,list,t,direct,path,matches,this,mapping,registry,get,mappings,by,url,lookup,path,if,direct,path,matches,null,add,matching,mappings,direct,path,matches,matches,request,if,matches,is,empty,add,matching,mappings,this,mapping,registry,get,mappings,key,set,matches,request,if,matches,is,empty,comparator,match,comparator,new,match,comparator,get,mapping,comparator,request,matches,sort,comparator,if,logger,is,trace,enabled,logger,trace,found,matches,size,matching,mapping,s,for,lookup,path,matches,match,best,match,matches,get,0,if,matches,size,1,if,cors,utils,is,pre,flight,request,request,return,match,second,best,match,matches,get,1,if,comparator,compare,best,match,second,best,match,0,method,m1,best,match,handler,method,get,method,method,m2,second,best,match,handler,method,get,method,throw,new,illegal,state,exception,ambiguous,handler,methods,mapped,for,http,path,request,get,request,url,m1,m2,handle,match,best,match,mapping,lookup,path,request,return,best,match,handler,method,else,return,handle,no,match,this,mapping,registry,get,mappings,key,set,lookup,path,request
AbstractHandlerMethodMapping -> @Nullable 	protected HandlerMethod lookupHandlerMethod(String lookupPath, HttpServletRequest request) throws Exception;1529361191;Look up the best-matching handler method for the current request._If multiple matches are found, the best match is selected._@param lookupPath mapping lookup path within the current servlet mapping_@param request the current request_@return the best-matching handler method, or {@code null} if no match_@see #handleMatch(Object, String, HttpServletRequest)_@see #handleNoMatch(Set, String, HttpServletRequest);@Nullable_	protected HandlerMethod lookupHandlerMethod(String lookupPath, HttpServletRequest request) throws Exception {_		List<Match> matches = new ArrayList<>()__		List<T> directPathMatches = this.mappingRegistry.getMappingsByUrl(lookupPath)__		if (directPathMatches != null) {_			addMatchingMappings(directPathMatches, matches, request)__		}_		if (matches.isEmpty()) {_			_			addMatchingMappings(this.mappingRegistry.getMappings().keySet(), matches, request)__		}__		if (!matches.isEmpty()) {_			Comparator<Match> comparator = new MatchComparator(getMappingComparator(request))__			matches.sort(comparator)__			Match bestMatch = matches.get(0)__			if (matches.size() > 1) {_				if (logger.isTraceEnabled()) {_					logger.trace(matches.size() + " matching mapppings: " + matches)__				}_				if (CorsUtils.isPreFlightRequest(request)) {_					return PREFLIGHT_AMBIGUOUS_MATCH__				}_				Match secondBestMatch = matches.get(1)__				if (comparator.compare(bestMatch, secondBestMatch) == 0) {_					Method m1 = bestMatch.handlerMethod.getMethod()__					Method m2 = secondBestMatch.handlerMethod.getMethod()__					String uri = request.getRequestURI()__					throw new IllegalStateException(_							"Ambiguous handler methods mapped for '" + uri + "': {" + m1 + ", " + m2 + "}")__				}_			}_			handleMatch(bestMatch.mapping, lookupPath, request)__			return bestMatch.handlerMethod__		}_		else {_			return handleNoMatch(this.mappingRegistry.getMappings().keySet(), lookupPath, request)__		}_	};look,up,the,best,matching,handler,method,for,the,current,request,if,multiple,matches,are,found,the,best,match,is,selected,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,request,the,current,request,return,the,best,matching,handler,method,or,code,null,if,no,match,see,handle,match,object,string,http,servlet,request,see,handle,no,match,set,string,http,servlet,request;nullable,protected,handler,method,lookup,handler,method,string,lookup,path,http,servlet,request,request,throws,exception,list,match,matches,new,array,list,list,t,direct,path,matches,this,mapping,registry,get,mappings,by,url,lookup,path,if,direct,path,matches,null,add,matching,mappings,direct,path,matches,matches,request,if,matches,is,empty,add,matching,mappings,this,mapping,registry,get,mappings,key,set,matches,request,if,matches,is,empty,comparator,match,comparator,new,match,comparator,get,mapping,comparator,request,matches,sort,comparator,match,best,match,matches,get,0,if,matches,size,1,if,logger,is,trace,enabled,logger,trace,matches,size,matching,mapppings,matches,if,cors,utils,is,pre,flight,request,request,return,match,second,best,match,matches,get,1,if,comparator,compare,best,match,second,best,match,0,method,m1,best,match,handler,method,get,method,method,m2,second,best,match,handler,method,get,method,string,uri,request,get,request,uri,throw,new,illegal,state,exception,ambiguous,handler,methods,mapped,for,uri,m1,m2,handle,match,best,match,mapping,lookup,path,request,return,best,match,handler,method,else,return,handle,no,match,this,mapping,registry,get,mappings,key,set,lookup,path,request
AbstractHandlerMethodMapping -> @Nullable 	protected HandlerMethod lookupHandlerMethod(String lookupPath, HttpServletRequest request) throws Exception;1529721864;Look up the best-matching handler method for the current request._If multiple matches are found, the best match is selected._@param lookupPath mapping lookup path within the current servlet mapping_@param request the current request_@return the best-matching handler method, or {@code null} if no match_@see #handleMatch(Object, String, HttpServletRequest)_@see #handleNoMatch(Set, String, HttpServletRequest);@Nullable_	protected HandlerMethod lookupHandlerMethod(String lookupPath, HttpServletRequest request) throws Exception {_		List<Match> matches = new ArrayList<>()__		List<T> directPathMatches = this.mappingRegistry.getMappingsByUrl(lookupPath)__		if (directPathMatches != null) {_			addMatchingMappings(directPathMatches, matches, request)__		}_		if (matches.isEmpty()) {_			_			addMatchingMappings(this.mappingRegistry.getMappings().keySet(), matches, request)__		}__		if (!matches.isEmpty()) {_			Comparator<Match> comparator = new MatchComparator(getMappingComparator(request))__			matches.sort(comparator)__			Match bestMatch = matches.get(0)__			if (matches.size() > 1) {_				if (logger.isTraceEnabled()) {_					logger.trace(matches.size() + " matching mappings: " + matches)__				}_				if (CorsUtils.isPreFlightRequest(request)) {_					return PREFLIGHT_AMBIGUOUS_MATCH__				}_				Match secondBestMatch = matches.get(1)__				if (comparator.compare(bestMatch, secondBestMatch) == 0) {_					Method m1 = bestMatch.handlerMethod.getMethod()__					Method m2 = secondBestMatch.handlerMethod.getMethod()__					String uri = request.getRequestURI()__					throw new IllegalStateException(_							"Ambiguous handler methods mapped for '" + uri + "': {" + m1 + ", " + m2 + "}")__				}_			}_			handleMatch(bestMatch.mapping, lookupPath, request)__			return bestMatch.handlerMethod__		}_		else {_			return handleNoMatch(this.mappingRegistry.getMappings().keySet(), lookupPath, request)__		}_	};look,up,the,best,matching,handler,method,for,the,current,request,if,multiple,matches,are,found,the,best,match,is,selected,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,request,the,current,request,return,the,best,matching,handler,method,or,code,null,if,no,match,see,handle,match,object,string,http,servlet,request,see,handle,no,match,set,string,http,servlet,request;nullable,protected,handler,method,lookup,handler,method,string,lookup,path,http,servlet,request,request,throws,exception,list,match,matches,new,array,list,list,t,direct,path,matches,this,mapping,registry,get,mappings,by,url,lookup,path,if,direct,path,matches,null,add,matching,mappings,direct,path,matches,matches,request,if,matches,is,empty,add,matching,mappings,this,mapping,registry,get,mappings,key,set,matches,request,if,matches,is,empty,comparator,match,comparator,new,match,comparator,get,mapping,comparator,request,matches,sort,comparator,match,best,match,matches,get,0,if,matches,size,1,if,logger,is,trace,enabled,logger,trace,matches,size,matching,mappings,matches,if,cors,utils,is,pre,flight,request,request,return,match,second,best,match,matches,get,1,if,comparator,compare,best,match,second,best,match,0,method,m1,best,match,handler,method,get,method,method,m2,second,best,match,handler,method,get,method,string,uri,request,get,request,uri,throw,new,illegal,state,exception,ambiguous,handler,methods,mapped,for,uri,m1,m2,handle,match,best,match,mapping,lookup,path,request,return,best,match,handler,method,else,return,handle,no,match,this,mapping,registry,get,mappings,key,set,lookup,path,request
AbstractHandlerMethodMapping -> @Nullable 	protected HandlerMethod lookupHandlerMethod(String lookupPath, HttpServletRequest request) throws Exception;1530174524;Look up the best-matching handler method for the current request._If multiple matches are found, the best match is selected._@param lookupPath mapping lookup path within the current servlet mapping_@param request the current request_@return the best-matching handler method, or {@code null} if no match_@see #handleMatch(Object, String, HttpServletRequest)_@see #handleNoMatch(Set, String, HttpServletRequest);@Nullable_	protected HandlerMethod lookupHandlerMethod(String lookupPath, HttpServletRequest request) throws Exception {_		List<Match> matches = new ArrayList<>()__		List<T> directPathMatches = this.mappingRegistry.getMappingsByUrl(lookupPath)__		if (directPathMatches != null) {_			addMatchingMappings(directPathMatches, matches, request)__		}_		if (matches.isEmpty()) {_			_			addMatchingMappings(this.mappingRegistry.getMappings().keySet(), matches, request)__		}__		if (!matches.isEmpty()) {_			Comparator<Match> comparator = new MatchComparator(getMappingComparator(request))__			matches.sort(comparator)__			Match bestMatch = matches.get(0)__			if (matches.size() > 1) {_				if (logger.isTraceEnabled()) {_					logger.trace(matches.size() + " matching mappings: " + matches)__				}_				if (CorsUtils.isPreFlightRequest(request)) {_					return PREFLIGHT_AMBIGUOUS_MATCH__				}_				Match secondBestMatch = matches.get(1)__				if (comparator.compare(bestMatch, secondBestMatch) == 0) {_					Method m1 = bestMatch.handlerMethod.getMethod()__					Method m2 = secondBestMatch.handlerMethod.getMethod()__					String uri = request.getRequestURI()__					throw new IllegalStateException(_							"Ambiguous handler methods mapped for '" + uri + "': {" + m1 + ", " + m2 + "}")__				}_			}_			handleMatch(bestMatch.mapping, lookupPath, request)__			return bestMatch.handlerMethod__		}_		else {_			return handleNoMatch(this.mappingRegistry.getMappings().keySet(), lookupPath, request)__		}_	};look,up,the,best,matching,handler,method,for,the,current,request,if,multiple,matches,are,found,the,best,match,is,selected,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,request,the,current,request,return,the,best,matching,handler,method,or,code,null,if,no,match,see,handle,match,object,string,http,servlet,request,see,handle,no,match,set,string,http,servlet,request;nullable,protected,handler,method,lookup,handler,method,string,lookup,path,http,servlet,request,request,throws,exception,list,match,matches,new,array,list,list,t,direct,path,matches,this,mapping,registry,get,mappings,by,url,lookup,path,if,direct,path,matches,null,add,matching,mappings,direct,path,matches,matches,request,if,matches,is,empty,add,matching,mappings,this,mapping,registry,get,mappings,key,set,matches,request,if,matches,is,empty,comparator,match,comparator,new,match,comparator,get,mapping,comparator,request,matches,sort,comparator,match,best,match,matches,get,0,if,matches,size,1,if,logger,is,trace,enabled,logger,trace,matches,size,matching,mappings,matches,if,cors,utils,is,pre,flight,request,request,return,match,second,best,match,matches,get,1,if,comparator,compare,best,match,second,best,match,0,method,m1,best,match,handler,method,get,method,method,m2,second,best,match,handler,method,get,method,string,uri,request,get,request,uri,throw,new,illegal,state,exception,ambiguous,handler,methods,mapped,for,uri,m1,m2,handle,match,best,match,mapping,lookup,path,request,return,best,match,handler,method,else,return,handle,no,match,this,mapping,registry,get,mappings,key,set,lookup,path,request
AbstractHandlerMethodMapping -> @Nullable 	protected HandlerMethod lookupHandlerMethod(String lookupPath, HttpServletRequest request) throws Exception;1530174524;Look up the best-matching handler method for the current request._If multiple matches are found, the best match is selected._@param lookupPath mapping lookup path within the current servlet mapping_@param request the current request_@return the best-matching handler method, or {@code null} if no match_@see #handleMatch(Object, String, HttpServletRequest)_@see #handleNoMatch(Set, String, HttpServletRequest);@Nullable_	protected HandlerMethod lookupHandlerMethod(String lookupPath, HttpServletRequest request) throws Exception {_		List<Match> matches = new ArrayList<>()__		List<T> directPathMatches = this.mappingRegistry.getMappingsByUrl(lookupPath)__		if (directPathMatches != null) {_			addMatchingMappings(directPathMatches, matches, request)__		}_		if (matches.isEmpty()) {_			_			addMatchingMappings(this.mappingRegistry.getMappings().keySet(), matches, request)__		}__		if (!matches.isEmpty()) {_			Comparator<Match> comparator = new MatchComparator(getMappingComparator(request))__			matches.sort(comparator)__			Match bestMatch = matches.get(0)__			if (matches.size() > 1) {_				if (logger.isTraceEnabled()) {_					logger.trace(matches.size() + " matching mappings: " + matches)__				}_				if (CorsUtils.isPreFlightRequest(request)) {_					return PREFLIGHT_AMBIGUOUS_MATCH__				}_				Match secondBestMatch = matches.get(1)__				if (comparator.compare(bestMatch, secondBestMatch) == 0) {_					Method m1 = bestMatch.handlerMethod.getMethod()__					Method m2 = secondBestMatch.handlerMethod.getMethod()__					String uri = request.getRequestURI()__					throw new IllegalStateException(_							"Ambiguous handler methods mapped for '" + uri + "': {" + m1 + ", " + m2 + "}")__				}_			}_			handleMatch(bestMatch.mapping, lookupPath, request)__			return bestMatch.handlerMethod__		}_		else {_			return handleNoMatch(this.mappingRegistry.getMappings().keySet(), lookupPath, request)__		}_	};look,up,the,best,matching,handler,method,for,the,current,request,if,multiple,matches,are,found,the,best,match,is,selected,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,request,the,current,request,return,the,best,matching,handler,method,or,code,null,if,no,match,see,handle,match,object,string,http,servlet,request,see,handle,no,match,set,string,http,servlet,request;nullable,protected,handler,method,lookup,handler,method,string,lookup,path,http,servlet,request,request,throws,exception,list,match,matches,new,array,list,list,t,direct,path,matches,this,mapping,registry,get,mappings,by,url,lookup,path,if,direct,path,matches,null,add,matching,mappings,direct,path,matches,matches,request,if,matches,is,empty,add,matching,mappings,this,mapping,registry,get,mappings,key,set,matches,request,if,matches,is,empty,comparator,match,comparator,new,match,comparator,get,mapping,comparator,request,matches,sort,comparator,match,best,match,matches,get,0,if,matches,size,1,if,logger,is,trace,enabled,logger,trace,matches,size,matching,mappings,matches,if,cors,utils,is,pre,flight,request,request,return,match,second,best,match,matches,get,1,if,comparator,compare,best,match,second,best,match,0,method,m1,best,match,handler,method,get,method,method,m2,second,best,match,handler,method,get,method,string,uri,request,get,request,uri,throw,new,illegal,state,exception,ambiguous,handler,methods,mapped,for,uri,m1,m2,handle,match,best,match,mapping,lookup,path,request,return,best,match,handler,method,else,return,handle,no,match,this,mapping,registry,get,mappings,key,set,lookup,path,request
AbstractHandlerMethodMapping -> @Nullable 	protected HandlerMethod lookupHandlerMethod(String lookupPath, HttpServletRequest request) throws Exception;1533943217;Look up the best-matching handler method for the current request._If multiple matches are found, the best match is selected._@param lookupPath mapping lookup path within the current servlet mapping_@param request the current request_@return the best-matching handler method, or {@code null} if no match_@see #handleMatch(Object, String, HttpServletRequest)_@see #handleNoMatch(Set, String, HttpServletRequest);@Nullable_	protected HandlerMethod lookupHandlerMethod(String lookupPath, HttpServletRequest request) throws Exception {_		List<Match> matches = new ArrayList<>()__		List<T> directPathMatches = this.mappingRegistry.getMappingsByUrl(lookupPath)__		if (directPathMatches != null) {_			addMatchingMappings(directPathMatches, matches, request)__		}_		if (matches.isEmpty()) {_			_			addMatchingMappings(this.mappingRegistry.getMappings().keySet(), matches, request)__		}__		if (!matches.isEmpty()) {_			Comparator<Match> comparator = new MatchComparator(getMappingComparator(request))__			matches.sort(comparator)__			Match bestMatch = matches.get(0)__			if (matches.size() > 1) {_				if (logger.isTraceEnabled()) {_					logger.trace(matches.size() + " matching mappings: " + matches)__				}_				if (CorsUtils.isPreFlightRequest(request)) {_					return PREFLIGHT_AMBIGUOUS_MATCH__				}_				Match secondBestMatch = matches.get(1)__				if (comparator.compare(bestMatch, secondBestMatch) == 0) {_					Method m1 = bestMatch.handlerMethod.getMethod()__					Method m2 = secondBestMatch.handlerMethod.getMethod()__					String uri = request.getRequestURI()__					throw new IllegalStateException(_							"Ambiguous handler methods mapped for '" + uri + "': {" + m1 + ", " + m2 + "}")__				}_			}_			handleMatch(bestMatch.mapping, lookupPath, request)__			return bestMatch.handlerMethod__		}_		else {_			return handleNoMatch(this.mappingRegistry.getMappings().keySet(), lookupPath, request)__		}_	};look,up,the,best,matching,handler,method,for,the,current,request,if,multiple,matches,are,found,the,best,match,is,selected,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,request,the,current,request,return,the,best,matching,handler,method,or,code,null,if,no,match,see,handle,match,object,string,http,servlet,request,see,handle,no,match,set,string,http,servlet,request;nullable,protected,handler,method,lookup,handler,method,string,lookup,path,http,servlet,request,request,throws,exception,list,match,matches,new,array,list,list,t,direct,path,matches,this,mapping,registry,get,mappings,by,url,lookup,path,if,direct,path,matches,null,add,matching,mappings,direct,path,matches,matches,request,if,matches,is,empty,add,matching,mappings,this,mapping,registry,get,mappings,key,set,matches,request,if,matches,is,empty,comparator,match,comparator,new,match,comparator,get,mapping,comparator,request,matches,sort,comparator,match,best,match,matches,get,0,if,matches,size,1,if,logger,is,trace,enabled,logger,trace,matches,size,matching,mappings,matches,if,cors,utils,is,pre,flight,request,request,return,match,second,best,match,matches,get,1,if,comparator,compare,best,match,second,best,match,0,method,m1,best,match,handler,method,get,method,method,m2,second,best,match,handler,method,get,method,string,uri,request,get,request,uri,throw,new,illegal,state,exception,ambiguous,handler,methods,mapped,for,uri,m1,m2,handle,match,best,match,mapping,lookup,path,request,return,best,match,handler,method,else,return,handle,no,match,this,mapping,registry,get,mappings,key,set,lookup,path,request
AbstractHandlerMethodMapping -> @Nullable 	protected HandlerMethod lookupHandlerMethod(String lookupPath, HttpServletRequest request) throws Exception;1542407418;Look up the best-matching handler method for the current request._If multiple matches are found, the best match is selected._@param lookupPath mapping lookup path within the current servlet mapping_@param request the current request_@return the best-matching handler method, or {@code null} if no match_@see #handleMatch(Object, String, HttpServletRequest)_@see #handleNoMatch(Set, String, HttpServletRequest);@Nullable_	protected HandlerMethod lookupHandlerMethod(String lookupPath, HttpServletRequest request) throws Exception {_		List<Match> matches = new ArrayList<>()__		List<T> directPathMatches = this.mappingRegistry.getMappingsByUrl(lookupPath)__		if (directPathMatches != null) {_			addMatchingMappings(directPathMatches, matches, request)__		}_		if (matches.isEmpty()) {_			_			addMatchingMappings(this.mappingRegistry.getMappings().keySet(), matches, request)__		}__		if (!matches.isEmpty()) {_			Comparator<Match> comparator = new MatchComparator(getMappingComparator(request))__			matches.sort(comparator)__			Match bestMatch = matches.get(0)__			if (matches.size() > 1) {_				if (logger.isTraceEnabled()) {_					logger.trace(matches.size() + " matching mappings: " + matches)__				}_				if (CorsUtils.isPreFlightRequest(request)) {_					return PREFLIGHT_AMBIGUOUS_MATCH__				}_				Match secondBestMatch = matches.get(1)__				if (comparator.compare(bestMatch, secondBestMatch) == 0) {_					Method m1 = bestMatch.handlerMethod.getMethod()__					Method m2 = secondBestMatch.handlerMethod.getMethod()__					String uri = request.getRequestURI()__					throw new IllegalStateException(_							"Ambiguous handler methods mapped for '" + uri + "': {" + m1 + ", " + m2 + "}")__				}_			}_			handleMatch(bestMatch.mapping, lookupPath, request)__			return bestMatch.handlerMethod__		}_		else {_			return handleNoMatch(this.mappingRegistry.getMappings().keySet(), lookupPath, request)__		}_	};look,up,the,best,matching,handler,method,for,the,current,request,if,multiple,matches,are,found,the,best,match,is,selected,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,request,the,current,request,return,the,best,matching,handler,method,or,code,null,if,no,match,see,handle,match,object,string,http,servlet,request,see,handle,no,match,set,string,http,servlet,request;nullable,protected,handler,method,lookup,handler,method,string,lookup,path,http,servlet,request,request,throws,exception,list,match,matches,new,array,list,list,t,direct,path,matches,this,mapping,registry,get,mappings,by,url,lookup,path,if,direct,path,matches,null,add,matching,mappings,direct,path,matches,matches,request,if,matches,is,empty,add,matching,mappings,this,mapping,registry,get,mappings,key,set,matches,request,if,matches,is,empty,comparator,match,comparator,new,match,comparator,get,mapping,comparator,request,matches,sort,comparator,match,best,match,matches,get,0,if,matches,size,1,if,logger,is,trace,enabled,logger,trace,matches,size,matching,mappings,matches,if,cors,utils,is,pre,flight,request,request,return,match,second,best,match,matches,get,1,if,comparator,compare,best,match,second,best,match,0,method,m1,best,match,handler,method,get,method,method,m2,second,best,match,handler,method,get,method,string,uri,request,get,request,uri,throw,new,illegal,state,exception,ambiguous,handler,methods,mapped,for,uri,m1,m2,handle,match,best,match,mapping,lookup,path,request,return,best,match,handler,method,else,return,handle,no,match,this,mapping,registry,get,mappings,key,set,lookup,path,request
AbstractHandlerMethodMapping -> @Nullable 	protected HandlerMethod lookupHandlerMethod(String lookupPath, HttpServletRequest request) throws Exception;1542771062;Look up the best-matching handler method for the current request._If multiple matches are found, the best match is selected._@param lookupPath mapping lookup path within the current servlet mapping_@param request the current request_@return the best-matching handler method, or {@code null} if no match_@see #handleMatch(Object, String, HttpServletRequest)_@see #handleNoMatch(Set, String, HttpServletRequest);@Nullable_	protected HandlerMethod lookupHandlerMethod(String lookupPath, HttpServletRequest request) throws Exception {_		List<Match> matches = new ArrayList<>()__		List<T> directPathMatches = this.mappingRegistry.getMappingsByUrl(lookupPath)__		if (directPathMatches != null) {_			addMatchingMappings(directPathMatches, matches, request)__		}_		if (matches.isEmpty()) {_			_			addMatchingMappings(this.mappingRegistry.getMappings().keySet(), matches, request)__		}__		if (!matches.isEmpty()) {_			Comparator<Match> comparator = new MatchComparator(getMappingComparator(request))__			matches.sort(comparator)__			Match bestMatch = matches.get(0)__			if (matches.size() > 1) {_				if (logger.isTraceEnabled()) {_					logger.trace(matches.size() + " matching mappings: " + matches)__				}_				if (CorsUtils.isPreFlightRequest(request)) {_					return PREFLIGHT_AMBIGUOUS_MATCH__				}_				Match secondBestMatch = matches.get(1)__				if (comparator.compare(bestMatch, secondBestMatch) == 0) {_					Method m1 = bestMatch.handlerMethod.getMethod()__					Method m2 = secondBestMatch.handlerMethod.getMethod()__					String uri = request.getRequestURI()__					throw new IllegalStateException(_							"Ambiguous handler methods mapped for '" + uri + "': {" + m1 + ", " + m2 + "}")__				}_			}_			request.setAttribute(BEST_MATCHING_HANDLER_ATTRIBUTE, bestMatch.handlerMethod)__			handleMatch(bestMatch.mapping, lookupPath, request)__			return bestMatch.handlerMethod__		}_		else {_			return handleNoMatch(this.mappingRegistry.getMappings().keySet(), lookupPath, request)__		}_	};look,up,the,best,matching,handler,method,for,the,current,request,if,multiple,matches,are,found,the,best,match,is,selected,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,request,the,current,request,return,the,best,matching,handler,method,or,code,null,if,no,match,see,handle,match,object,string,http,servlet,request,see,handle,no,match,set,string,http,servlet,request;nullable,protected,handler,method,lookup,handler,method,string,lookup,path,http,servlet,request,request,throws,exception,list,match,matches,new,array,list,list,t,direct,path,matches,this,mapping,registry,get,mappings,by,url,lookup,path,if,direct,path,matches,null,add,matching,mappings,direct,path,matches,matches,request,if,matches,is,empty,add,matching,mappings,this,mapping,registry,get,mappings,key,set,matches,request,if,matches,is,empty,comparator,match,comparator,new,match,comparator,get,mapping,comparator,request,matches,sort,comparator,match,best,match,matches,get,0,if,matches,size,1,if,logger,is,trace,enabled,logger,trace,matches,size,matching,mappings,matches,if,cors,utils,is,pre,flight,request,request,return,match,second,best,match,matches,get,1,if,comparator,compare,best,match,second,best,match,0,method,m1,best,match,handler,method,get,method,method,m2,second,best,match,handler,method,get,method,string,uri,request,get,request,uri,throw,new,illegal,state,exception,ambiguous,handler,methods,mapped,for,uri,m1,m2,request,set,attribute,best,match,handler,method,handle,match,best,match,mapping,lookup,path,request,return,best,match,handler,method,else,return,handle,no,match,this,mapping,registry,get,mappings,key,set,lookup,path,request
AbstractHandlerMethodMapping -> @Nullable 	protected HandlerMethod lookupHandlerMethod(String lookupPath, HttpServletRequest request) throws Exception;1548427561;Look up the best-matching handler method for the current request._If multiple matches are found, the best match is selected._@param lookupPath mapping lookup path within the current servlet mapping_@param request the current request_@return the best-matching handler method, or {@code null} if no match_@see #handleMatch(Object, String, HttpServletRequest)_@see #handleNoMatch(Set, String, HttpServletRequest);@Nullable_	protected HandlerMethod lookupHandlerMethod(String lookupPath, HttpServletRequest request) throws Exception {_		List<Match> matches = new ArrayList<>()__		List<T> directPathMatches = this.mappingRegistry.getMappingsByUrl(lookupPath)__		if (directPathMatches != null) {_			addMatchingMappings(directPathMatches, matches, request)__		}_		if (matches.isEmpty()) {_			_			addMatchingMappings(this.mappingRegistry.getMappings().keySet(), matches, request)__		}__		if (!matches.isEmpty()) {_			Comparator<Match> comparator = new MatchComparator(getMappingComparator(request))__			matches.sort(comparator)__			Match bestMatch = matches.get(0)__			if (matches.size() > 1) {_				if (logger.isTraceEnabled()) {_					logger.trace(matches.size() + " matching mappings: " + matches)__				}_				if (CorsUtils.isPreFlightRequest(request)) {_					return PREFLIGHT_AMBIGUOUS_MATCH__				}_				Match secondBestMatch = matches.get(1)__				if (comparator.compare(bestMatch, secondBestMatch) == 0) {_					Method m1 = bestMatch.handlerMethod.getMethod()__					Method m2 = secondBestMatch.handlerMethod.getMethod()__					String uri = request.getRequestURI()__					throw new IllegalStateException(_							"Ambiguous handler methods mapped for '" + uri + "': {" + m1 + ", " + m2 + "}")__				}_			}_			request.setAttribute(BEST_MATCHING_HANDLER_ATTRIBUTE, bestMatch.handlerMethod)__			handleMatch(bestMatch.mapping, lookupPath, request)__			return bestMatch.handlerMethod__		}_		else {_			return handleNoMatch(this.mappingRegistry.getMappings().keySet(), lookupPath, request)__		}_	};look,up,the,best,matching,handler,method,for,the,current,request,if,multiple,matches,are,found,the,best,match,is,selected,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,request,the,current,request,return,the,best,matching,handler,method,or,code,null,if,no,match,see,handle,match,object,string,http,servlet,request,see,handle,no,match,set,string,http,servlet,request;nullable,protected,handler,method,lookup,handler,method,string,lookup,path,http,servlet,request,request,throws,exception,list,match,matches,new,array,list,list,t,direct,path,matches,this,mapping,registry,get,mappings,by,url,lookup,path,if,direct,path,matches,null,add,matching,mappings,direct,path,matches,matches,request,if,matches,is,empty,add,matching,mappings,this,mapping,registry,get,mappings,key,set,matches,request,if,matches,is,empty,comparator,match,comparator,new,match,comparator,get,mapping,comparator,request,matches,sort,comparator,match,best,match,matches,get,0,if,matches,size,1,if,logger,is,trace,enabled,logger,trace,matches,size,matching,mappings,matches,if,cors,utils,is,pre,flight,request,request,return,match,second,best,match,matches,get,1,if,comparator,compare,best,match,second,best,match,0,method,m1,best,match,handler,method,get,method,method,m2,second,best,match,handler,method,get,method,string,uri,request,get,request,uri,throw,new,illegal,state,exception,ambiguous,handler,methods,mapped,for,uri,m1,m2,request,set,attribute,best,match,handler,method,handle,match,best,match,mapping,lookup,path,request,return,best,match,handler,method,else,return,handle,no,match,this,mapping,registry,get,mappings,key,set,lookup,path,request
AbstractHandlerMethodMapping -> @Nullable 	protected HandlerMethod lookupHandlerMethod(String lookupPath, HttpServletRequest request) throws Exception;1551093473;Look up the best-matching handler method for the current request._If multiple matches are found, the best match is selected._@param lookupPath mapping lookup path within the current servlet mapping_@param request the current request_@return the best-matching handler method, or {@code null} if no match_@see #handleMatch(Object, String, HttpServletRequest)_@see #handleNoMatch(Set, String, HttpServletRequest);@Nullable_	protected HandlerMethod lookupHandlerMethod(String lookupPath, HttpServletRequest request) throws Exception {_		List<Match> matches = new ArrayList<>()__		List<T> directPathMatches = this.mappingRegistry.getMappingsByUrl(lookupPath)__		if (directPathMatches != null) {_			addMatchingMappings(directPathMatches, matches, request)__		}_		if (matches.isEmpty()) {_			_			addMatchingMappings(this.mappingRegistry.getMappings().keySet(), matches, request)__		}__		if (!matches.isEmpty()) {_			Comparator<Match> comparator = new MatchComparator(getMappingComparator(request))__			matches.sort(comparator)__			Match bestMatch = matches.get(0)__			if (matches.size() > 1) {_				if (logger.isTraceEnabled()) {_					logger.trace(matches.size() + " matching mappings: " + matches)__				}_				if (CorsUtils.isPreFlightRequest(request)) {_					return PREFLIGHT_AMBIGUOUS_MATCH__				}_				Match secondBestMatch = matches.get(1)__				if (comparator.compare(bestMatch, secondBestMatch) == 0) {_					Method m1 = bestMatch.handlerMethod.getMethod()__					Method m2 = secondBestMatch.handlerMethod.getMethod()__					String uri = request.getRequestURI()__					throw new IllegalStateException(_							"Ambiguous handler methods mapped for '" + uri + "': {" + m1 + ", " + m2 + "}")__				}_			}_			request.setAttribute(BEST_MATCHING_HANDLER_ATTRIBUTE, bestMatch.handlerMethod)__			handleMatch(bestMatch.mapping, lookupPath, request)__			return bestMatch.handlerMethod__		}_		else {_			return handleNoMatch(this.mappingRegistry.getMappings().keySet(), lookupPath, request)__		}_	};look,up,the,best,matching,handler,method,for,the,current,request,if,multiple,matches,are,found,the,best,match,is,selected,param,lookup,path,mapping,lookup,path,within,the,current,servlet,mapping,param,request,the,current,request,return,the,best,matching,handler,method,or,code,null,if,no,match,see,handle,match,object,string,http,servlet,request,see,handle,no,match,set,string,http,servlet,request;nullable,protected,handler,method,lookup,handler,method,string,lookup,path,http,servlet,request,request,throws,exception,list,match,matches,new,array,list,list,t,direct,path,matches,this,mapping,registry,get,mappings,by,url,lookup,path,if,direct,path,matches,null,add,matching,mappings,direct,path,matches,matches,request,if,matches,is,empty,add,matching,mappings,this,mapping,registry,get,mappings,key,set,matches,request,if,matches,is,empty,comparator,match,comparator,new,match,comparator,get,mapping,comparator,request,matches,sort,comparator,match,best,match,matches,get,0,if,matches,size,1,if,logger,is,trace,enabled,logger,trace,matches,size,matching,mappings,matches,if,cors,utils,is,pre,flight,request,request,return,match,second,best,match,matches,get,1,if,comparator,compare,best,match,second,best,match,0,method,m1,best,match,handler,method,get,method,method,m2,second,best,match,handler,method,get,method,string,uri,request,get,request,uri,throw,new,illegal,state,exception,ambiguous,handler,methods,mapped,for,uri,m1,m2,request,set,attribute,best,match,handler,method,handle,match,best,match,mapping,lookup,path,request,return,best,match,handler,method,else,return,handle,no,match,this,mapping,registry,get,mappings,key,set,lookup,path,request
AbstractHandlerMethodMapping -> public List<HandlerMethod> getHandlerMethodsForMappingName(String mappingName);1399404473;Return the handler methods mapped to the mapping with the given name._@param mappingName the mapping name;public List<HandlerMethod> getHandlerMethodsForMappingName(String mappingName) {_		return this.nameMap.get(mappingName)__	};return,the,handler,methods,mapped,to,the,mapping,with,the,given,name,param,mapping,name,the,mapping,name;public,list,handler,method,get,handler,methods,for,mapping,name,string,mapping,name,return,this,name,map,get,mapping,name
AbstractHandlerMethodMapping -> public List<HandlerMethod> getHandlerMethodsForMappingName(String mappingName);1426869344;Return the handler methods mapped to the mapping with the given name._@param mappingName the mapping name;public List<HandlerMethod> getHandlerMethodsForMappingName(String mappingName) {_		return this.nameMap.get(mappingName)__	};return,the,handler,methods,mapped,to,the,mapping,with,the,given,name,param,mapping,name,the,mapping,name;public,list,handler,method,get,handler,methods,for,mapping,name,string,mapping,name,return,this,name,map,get,mapping,name
AbstractHandlerMethodMapping -> public List<HandlerMethod> getHandlerMethodsForMappingName(String mappingName);1427240641;Return the handler methods mapped to the mapping with the given name._@param mappingName the mapping name;public List<HandlerMethod> getHandlerMethodsForMappingName(String mappingName) {_		return this.nameMap.get(mappingName)__	};return,the,handler,methods,mapped,to,the,mapping,with,the,given,name,param,mapping,name,the,mapping,name;public,list,handler,method,get,handler,methods,for,mapping,name,string,mapping,name,return,this,name,map,get,mapping,name
AbstractHandlerMethodMapping -> public List<HandlerMethod> getHandlerMethodsForMappingName(String mappingName);1427983931;Return the handler methods mapped to the mapping with the given name._@param mappingName the mapping name;public List<HandlerMethod> getHandlerMethodsForMappingName(String mappingName) {_		return this.nameMap.get(mappingName)__	};return,the,handler,methods,mapped,to,the,mapping,with,the,given,name,param,mapping,name,the,mapping,name;public,list,handler,method,get,handler,methods,for,mapping,name,string,mapping,name,return,this,name,map,get,mapping,name
AbstractHandlerMethodMapping -> public List<HandlerMethod> getHandlerMethodsForMappingName(String mappingName);1430734105;Return the handler methods mapped to the mapping with the given name._@param mappingName the mapping name;public List<HandlerMethod> getHandlerMethodsForMappingName(String mappingName) {_		return this.nameMap.get(mappingName)__	};return,the,handler,methods,mapped,to,the,mapping,with,the,given,name,param,mapping,name,the,mapping,name;public,list,handler,method,get,handler,methods,for,mapping,name,string,mapping,name,return,this,name,map,get,mapping,name
AbstractHandlerMethodMapping -> public List<HandlerMethod> getHandlerMethodsForMappingName(String mappingName);1430734105;Return the handler methods for the given mapping name._@param mappingName the mapping name_@return a list of matching HandlerMethod's or {@code null}_ the returned_list will never be modified and is safe to iterate._@see #setHandlerMethodMappingNamingStrategy;public List<HandlerMethod> getHandlerMethodsForMappingName(String mappingName) {_		return this.mappingRegistry.getHandlerMethodsByMappingName(mappingName)__	};return,the,handler,methods,for,the,given,mapping,name,param,mapping,name,the,mapping,name,return,a,list,of,matching,handler,method,s,or,code,null,the,returned,list,will,never,be,modified,and,is,safe,to,iterate,see,set,handler,method,mapping,naming,strategy;public,list,handler,method,get,handler,methods,for,mapping,name,string,mapping,name,return,this,mapping,registry,get,handler,methods,by,mapping,name,mapping,name
AbstractHandlerMethodMapping -> public List<HandlerMethod> getHandlerMethodsForMappingName(String mappingName);1430734106;Return the handler methods for the given mapping name._@param mappingName the mapping name_@return a list of matching HandlerMethod's or {@code null}_ the returned_list will never be modified and is safe to iterate._@see #setHandlerMethodMappingNamingStrategy;public List<HandlerMethod> getHandlerMethodsForMappingName(String mappingName) {_		return this.mappingRegistry.getHandlerMethodsByMappingName(mappingName)__	};return,the,handler,methods,for,the,given,mapping,name,param,mapping,name,the,mapping,name,return,a,list,of,matching,handler,method,s,or,code,null,the,returned,list,will,never,be,modified,and,is,safe,to,iterate,see,set,handler,method,mapping,naming,strategy;public,list,handler,method,get,handler,methods,for,mapping,name,string,mapping,name,return,this,mapping,registry,get,handler,methods,by,mapping,name,mapping,name
AbstractHandlerMethodMapping -> public List<HandlerMethod> getHandlerMethodsForMappingName(String mappingName);1430774689;Return the handler methods for the given mapping name._@param mappingName the mapping name_@return a list of matching HandlerMethod's or {@code null}_ the returned_list will never be modified and is safe to iterate._@see #setHandlerMethodMappingNamingStrategy;public List<HandlerMethod> getHandlerMethodsForMappingName(String mappingName) {_		return this.mappingRegistry.getHandlerMethodsByMappingName(mappingName)__	};return,the,handler,methods,for,the,given,mapping,name,param,mapping,name,the,mapping,name,return,a,list,of,matching,handler,method,s,or,code,null,the,returned,list,will,never,be,modified,and,is,safe,to,iterate,see,set,handler,method,mapping,naming,strategy;public,list,handler,method,get,handler,methods,for,mapping,name,string,mapping,name,return,this,mapping,registry,get,handler,methods,by,mapping,name,mapping,name
AbstractHandlerMethodMapping -> public List<HandlerMethod> getHandlerMethodsForMappingName(String mappingName);1430844966;Return the handler methods for the given mapping name._@param mappingName the mapping name_@return a list of matching HandlerMethod's or {@code null}_ the returned_list will never be modified and is safe to iterate._@see #setHandlerMethodMappingNamingStrategy;public List<HandlerMethod> getHandlerMethodsForMappingName(String mappingName) {_		return this.mappingRegistry.getHandlerMethodsByMappingName(mappingName)__	};return,the,handler,methods,for,the,given,mapping,name,param,mapping,name,the,mapping,name,return,a,list,of,matching,handler,method,s,or,code,null,the,returned,list,will,never,be,modified,and,is,safe,to,iterate,see,set,handler,method,mapping,naming,strategy;public,list,handler,method,get,handler,methods,for,mapping,name,string,mapping,name,return,this,mapping,registry,get,handler,methods,by,mapping,name,mapping,name
AbstractHandlerMethodMapping -> public List<HandlerMethod> getHandlerMethodsForMappingName(String mappingName);1430844967;Return the handler methods for the given mapping name._@param mappingName the mapping name_@return a list of matching HandlerMethod's or {@code null}_ the returned_list will never be modified and is safe to iterate._@see #setHandlerMethodMappingNamingStrategy;public List<HandlerMethod> getHandlerMethodsForMappingName(String mappingName) {_		return this.mappingRegistry.getHandlerMethodsByMappingName(mappingName)__	};return,the,handler,methods,for,the,given,mapping,name,param,mapping,name,the,mapping,name,return,a,list,of,matching,handler,method,s,or,code,null,the,returned,list,will,never,be,modified,and,is,safe,to,iterate,see,set,handler,method,mapping,naming,strategy;public,list,handler,method,get,handler,methods,for,mapping,name,string,mapping,name,return,this,mapping,registry,get,handler,methods,by,mapping,name,mapping,name
AbstractHandlerMethodMapping -> public List<HandlerMethod> getHandlerMethodsForMappingName(String mappingName);1431730371;Return the handler methods for the given mapping name._@param mappingName the mapping name_@return a list of matching HandlerMethod's or {@code null}_ the returned_list will never be modified and is safe to iterate._@see #setHandlerMethodMappingNamingStrategy;public List<HandlerMethod> getHandlerMethodsForMappingName(String mappingName) {_		return this.mappingRegistry.getHandlerMethodsByMappingName(mappingName)__	};return,the,handler,methods,for,the,given,mapping,name,param,mapping,name,the,mapping,name,return,a,list,of,matching,handler,method,s,or,code,null,the,returned,list,will,never,be,modified,and,is,safe,to,iterate,see,set,handler,method,mapping,naming,strategy;public,list,handler,method,get,handler,methods,for,mapping,name,string,mapping,name,return,this,mapping,registry,get,handler,methods,by,mapping,name,mapping,name
AbstractHandlerMethodMapping -> public List<HandlerMethod> getHandlerMethodsForMappingName(String mappingName);1439294371;Return the handler methods for the given mapping name._@param mappingName the mapping name_@return a list of matching HandlerMethod's or {@code null}_ the returned_list will never be modified and is safe to iterate._@see #setHandlerMethodMappingNamingStrategy;public List<HandlerMethod> getHandlerMethodsForMappingName(String mappingName) {_		return this.mappingRegistry.getHandlerMethodsByMappingName(mappingName)__	};return,the,handler,methods,for,the,given,mapping,name,param,mapping,name,the,mapping,name,return,a,list,of,matching,handler,method,s,or,code,null,the,returned,list,will,never,be,modified,and,is,safe,to,iterate,see,set,handler,method,mapping,naming,strategy;public,list,handler,method,get,handler,methods,for,mapping,name,string,mapping,name,return,this,mapping,registry,get,handler,methods,by,mapping,name,mapping,name
AbstractHandlerMethodMapping -> public List<HandlerMethod> getHandlerMethodsForMappingName(String mappingName);1447077465;Return the handler methods for the given mapping name._@param mappingName the mapping name_@return a list of matching HandlerMethod's or {@code null}_ the returned_list will never be modified and is safe to iterate._@see #setHandlerMethodMappingNamingStrategy;public List<HandlerMethod> getHandlerMethodsForMappingName(String mappingName) {_		return this.mappingRegistry.getHandlerMethodsByMappingName(mappingName)__	};return,the,handler,methods,for,the,given,mapping,name,param,mapping,name,the,mapping,name,return,a,list,of,matching,handler,method,s,or,code,null,the,returned,list,will,never,be,modified,and,is,safe,to,iterate,see,set,handler,method,mapping,naming,strategy;public,list,handler,method,get,handler,methods,for,mapping,name,string,mapping,name,return,this,mapping,registry,get,handler,methods,by,mapping,name,mapping,name
AbstractHandlerMethodMapping -> public List<HandlerMethod> getHandlerMethodsForMappingName(String mappingName);1448483163;Return the handler methods for the given mapping name._@param mappingName the mapping name_@return a list of matching HandlerMethod's or {@code null}_ the returned_list will never be modified and is safe to iterate._@see #setHandlerMethodMappingNamingStrategy;public List<HandlerMethod> getHandlerMethodsForMappingName(String mappingName) {_		return this.mappingRegistry.getHandlerMethodsByMappingName(mappingName)__	};return,the,handler,methods,for,the,given,mapping,name,param,mapping,name,the,mapping,name,return,a,list,of,matching,handler,method,s,or,code,null,the,returned,list,will,never,be,modified,and,is,safe,to,iterate,see,set,handler,method,mapping,naming,strategy;public,list,handler,method,get,handler,methods,for,mapping,name,string,mapping,name,return,this,mapping,registry,get,handler,methods,by,mapping,name,mapping,name
AbstractHandlerMethodMapping -> public List<HandlerMethod> getHandlerMethodsForMappingName(String mappingName);1452685925;Return the handler methods for the given mapping name._@param mappingName the mapping name_@return a list of matching HandlerMethod's or {@code null}_ the returned_list will never be modified and is safe to iterate._@see #setHandlerMethodMappingNamingStrategy;public List<HandlerMethod> getHandlerMethodsForMappingName(String mappingName) {_		return this.mappingRegistry.getHandlerMethodsByMappingName(mappingName)__	};return,the,handler,methods,for,the,given,mapping,name,param,mapping,name,the,mapping,name,return,a,list,of,matching,handler,method,s,or,code,null,the,returned,list,will,never,be,modified,and,is,safe,to,iterate,see,set,handler,method,mapping,naming,strategy;public,list,handler,method,get,handler,methods,for,mapping,name,string,mapping,name,return,this,mapping,registry,get,handler,methods,by,mapping,name,mapping,name
AbstractHandlerMethodMapping -> public List<HandlerMethod> getHandlerMethodsForMappingName(String mappingName);1452873718;Return the handler methods for the given mapping name._@param mappingName the mapping name_@return a list of matching HandlerMethod's or {@code null}_ the returned_list will never be modified and is safe to iterate._@see #setHandlerMethodMappingNamingStrategy;public List<HandlerMethod> getHandlerMethodsForMappingName(String mappingName) {_		return this.mappingRegistry.getHandlerMethodsByMappingName(mappingName)__	};return,the,handler,methods,for,the,given,mapping,name,param,mapping,name,the,mapping,name,return,a,list,of,matching,handler,method,s,or,code,null,the,returned,list,will,never,be,modified,and,is,safe,to,iterate,see,set,handler,method,mapping,naming,strategy;public,list,handler,method,get,handler,methods,for,mapping,name,string,mapping,name,return,this,mapping,registry,get,handler,methods,by,mapping,name,mapping,name
AbstractHandlerMethodMapping -> public List<HandlerMethod> getHandlerMethodsForMappingName(String mappingName);1453843788;Return the handler methods for the given mapping name._@param mappingName the mapping name_@return a list of matching HandlerMethod's or {@code null}_ the returned_list will never be modified and is safe to iterate._@see #setHandlerMethodMappingNamingStrategy;public List<HandlerMethod> getHandlerMethodsForMappingName(String mappingName) {_		return this.mappingRegistry.getHandlerMethodsByMappingName(mappingName)__	};return,the,handler,methods,for,the,given,mapping,name,param,mapping,name,the,mapping,name,return,a,list,of,matching,handler,method,s,or,code,null,the,returned,list,will,never,be,modified,and,is,safe,to,iterate,see,set,handler,method,mapping,naming,strategy;public,list,handler,method,get,handler,methods,for,mapping,name,string,mapping,name,return,this,mapping,registry,get,handler,methods,by,mapping,name,mapping,name
AbstractHandlerMethodMapping -> public List<HandlerMethod> getHandlerMethodsForMappingName(String mappingName);1467730834;Return the handler methods for the given mapping name._@param mappingName the mapping name_@return a list of matching HandlerMethod's or {@code null}_ the returned_list will never be modified and is safe to iterate._@see #setHandlerMethodMappingNamingStrategy;public List<HandlerMethod> getHandlerMethodsForMappingName(String mappingName) {_		return this.mappingRegistry.getHandlerMethodsByMappingName(mappingName)__	};return,the,handler,methods,for,the,given,mapping,name,param,mapping,name,the,mapping,name,return,a,list,of,matching,handler,method,s,or,code,null,the,returned,list,will,never,be,modified,and,is,safe,to,iterate,see,set,handler,method,mapping,naming,strategy;public,list,handler,method,get,handler,methods,for,mapping,name,string,mapping,name,return,this,mapping,registry,get,handler,methods,by,mapping,name,mapping,name
AbstractHandlerMethodMapping -> public List<HandlerMethod> getHandlerMethodsForMappingName(String mappingName);1468417354;Return the handler methods for the given mapping name._@param mappingName the mapping name_@return a list of matching HandlerMethod's or {@code null}_ the returned_list will never be modified and is safe to iterate._@see #setHandlerMethodMappingNamingStrategy;public List<HandlerMethod> getHandlerMethodsForMappingName(String mappingName) {_		return this.mappingRegistry.getHandlerMethodsByMappingName(mappingName)__	};return,the,handler,methods,for,the,given,mapping,name,param,mapping,name,the,mapping,name,return,a,list,of,matching,handler,method,s,or,code,null,the,returned,list,will,never,be,modified,and,is,safe,to,iterate,see,set,handler,method,mapping,naming,strategy;public,list,handler,method,get,handler,methods,for,mapping,name,string,mapping,name,return,this,mapping,registry,get,handler,methods,by,mapping,name,mapping,name
AbstractHandlerMethodMapping -> public List<HandlerMethod> getHandlerMethodsForMappingName(String mappingName);1468596479;Return the handler methods for the given mapping name._@param mappingName the mapping name_@return a list of matching HandlerMethod's or {@code null}_ the returned_list will never be modified and is safe to iterate._@see #setHandlerMethodMappingNamingStrategy;public List<HandlerMethod> getHandlerMethodsForMappingName(String mappingName) {_		return this.mappingRegistry.getHandlerMethodsByMappingName(mappingName)__	};return,the,handler,methods,for,the,given,mapping,name,param,mapping,name,the,mapping,name,return,a,list,of,matching,handler,method,s,or,code,null,the,returned,list,will,never,be,modified,and,is,safe,to,iterate,see,set,handler,method,mapping,naming,strategy;public,list,handler,method,get,handler,methods,for,mapping,name,string,mapping,name,return,this,mapping,registry,get,handler,methods,by,mapping,name,mapping,name
AbstractHandlerMethodMapping -> public List<HandlerMethod> getHandlerMethodsForMappingName(String mappingName);1474905889;Return the handler methods for the given mapping name._@param mappingName the mapping name_@return a list of matching HandlerMethod's or {@code null}_ the returned_list will never be modified and is safe to iterate._@see #setHandlerMethodMappingNamingStrategy;public List<HandlerMethod> getHandlerMethodsForMappingName(String mappingName) {_		return this.mappingRegistry.getHandlerMethodsByMappingName(mappingName)__	};return,the,handler,methods,for,the,given,mapping,name,param,mapping,name,the,mapping,name,return,a,list,of,matching,handler,method,s,or,code,null,the,returned,list,will,never,be,modified,and,is,safe,to,iterate,see,set,handler,method,mapping,naming,strategy;public,list,handler,method,get,handler,methods,for,mapping,name,string,mapping,name,return,this,mapping,registry,get,handler,methods,by,mapping,name,mapping,name
AbstractHandlerMethodMapping -> public List<HandlerMethod> getHandlerMethodsForMappingName(String mappingName);1481813056;Return the handler methods for the given mapping name._@param mappingName the mapping name_@return a list of matching HandlerMethod's or {@code null}_ the returned_list will never be modified and is safe to iterate._@see #setHandlerMethodMappingNamingStrategy;public List<HandlerMethod> getHandlerMethodsForMappingName(String mappingName) {_		return this.mappingRegistry.getHandlerMethodsByMappingName(mappingName)__	};return,the,handler,methods,for,the,given,mapping,name,param,mapping,name,the,mapping,name,return,a,list,of,matching,handler,method,s,or,code,null,the,returned,list,will,never,be,modified,and,is,safe,to,iterate,see,set,handler,method,mapping,naming,strategy;public,list,handler,method,get,handler,methods,for,mapping,name,string,mapping,name,return,this,mapping,registry,get,handler,methods,by,mapping,name,mapping,name
AbstractHandlerMethodMapping -> public List<HandlerMethod> getHandlerMethodsForMappingName(String mappingName);1485810955;Return the handler methods for the given mapping name._@param mappingName the mapping name_@return a list of matching HandlerMethod's or {@code null}_ the returned_list will never be modified and is safe to iterate._@see #setHandlerMethodMappingNamingStrategy;public List<HandlerMethod> getHandlerMethodsForMappingName(String mappingName) {_		return this.mappingRegistry.getHandlerMethodsByMappingName(mappingName)__	};return,the,handler,methods,for,the,given,mapping,name,param,mapping,name,the,mapping,name,return,a,list,of,matching,handler,method,s,or,code,null,the,returned,list,will,never,be,modified,and,is,safe,to,iterate,see,set,handler,method,mapping,naming,strategy;public,list,handler,method,get,handler,methods,for,mapping,name,string,mapping,name,return,this,mapping,registry,get,handler,methods,by,mapping,name,mapping,name
AbstractHandlerMethodMapping -> @Nullable 	public HandlerMethodMappingNamingStrategy<T> getNamingStrategy();1495868221;Return the configured naming strategy or {@code null}.;@Nullable_	public HandlerMethodMappingNamingStrategy<T> getNamingStrategy() {_		return this.namingStrategy__	};return,the,configured,naming,strategy,or,code,null;nullable,public,handler,method,mapping,naming,strategy,t,get,naming,strategy,return,this,naming,strategy
AbstractHandlerMethodMapping -> @Nullable 	public HandlerMethodMappingNamingStrategy<T> getNamingStrategy();1496837955;Return the configured naming strategy or {@code null}.;@Nullable_	public HandlerMethodMappingNamingStrategy<T> getNamingStrategy() {_		return this.namingStrategy__	};return,the,configured,naming,strategy,or,code,null;nullable,public,handler,method,mapping,naming,strategy,t,get,naming,strategy,return,this,naming,strategy
AbstractHandlerMethodMapping -> @Nullable 	public HandlerMethodMappingNamingStrategy<T> getNamingStrategy();1497251962;Return the configured naming strategy or {@code null}.;@Nullable_	public HandlerMethodMappingNamingStrategy<T> getNamingStrategy() {_		return this.namingStrategy__	};return,the,configured,naming,strategy,or,code,null;nullable,public,handler,method,mapping,naming,strategy,t,get,naming,strategy,return,this,naming,strategy
AbstractHandlerMethodMapping -> @Nullable 	public HandlerMethodMappingNamingStrategy<T> getNamingStrategy();1498780456;Return the configured naming strategy or {@code null}.;@Nullable_	public HandlerMethodMappingNamingStrategy<T> getNamingStrategy() {_		return this.namingStrategy__	};return,the,configured,naming,strategy,or,code,null;nullable,public,handler,method,mapping,naming,strategy,t,get,naming,strategy,return,this,naming,strategy
AbstractHandlerMethodMapping -> @Nullable 	public HandlerMethodMappingNamingStrategy<T> getNamingStrategy();1518772998;Return the configured naming strategy or {@code null}.;@Nullable_	public HandlerMethodMappingNamingStrategy<T> getNamingStrategy() {_		return this.namingStrategy__	};return,the,configured,naming,strategy,or,code,null;nullable,public,handler,method,mapping,naming,strategy,t,get,naming,strategy,return,this,naming,strategy
AbstractHandlerMethodMapping -> @Nullable 	public HandlerMethodMappingNamingStrategy<T> getNamingStrategy();1522103912;Return the configured naming strategy or {@code null}.;@Nullable_	public HandlerMethodMappingNamingStrategy<T> getNamingStrategy() {_		return this.namingStrategy__	};return,the,configured,naming,strategy,or,code,null;nullable,public,handler,method,mapping,naming,strategy,t,get,naming,strategy,return,this,naming,strategy
AbstractHandlerMethodMapping -> @Nullable 	public HandlerMethodMappingNamingStrategy<T> getNamingStrategy();1522843494;Return the configured naming strategy or {@code null}.;@Nullable_	public HandlerMethodMappingNamingStrategy<T> getNamingStrategy() {_		return this.namingStrategy__	};return,the,configured,naming,strategy,or,code,null;nullable,public,handler,method,mapping,naming,strategy,t,get,naming,strategy,return,this,naming,strategy
AbstractHandlerMethodMapping -> @Nullable 	public HandlerMethodMappingNamingStrategy<T> getNamingStrategy();1529361191;Return the configured naming strategy or {@code null}.;@Nullable_	public HandlerMethodMappingNamingStrategy<T> getNamingStrategy() {_		return this.namingStrategy__	};return,the,configured,naming,strategy,or,code,null;nullable,public,handler,method,mapping,naming,strategy,t,get,naming,strategy,return,this,naming,strategy
AbstractHandlerMethodMapping -> @Nullable 	public HandlerMethodMappingNamingStrategy<T> getNamingStrategy();1529721864;Return the configured naming strategy or {@code null}.;@Nullable_	public HandlerMethodMappingNamingStrategy<T> getNamingStrategy() {_		return this.namingStrategy__	};return,the,configured,naming,strategy,or,code,null;nullable,public,handler,method,mapping,naming,strategy,t,get,naming,strategy,return,this,naming,strategy
AbstractHandlerMethodMapping -> @Nullable 	public HandlerMethodMappingNamingStrategy<T> getNamingStrategy();1530174524;Return the configured naming strategy or {@code null}.;@Nullable_	public HandlerMethodMappingNamingStrategy<T> getNamingStrategy() {_		return this.namingStrategy__	};return,the,configured,naming,strategy,or,code,null;nullable,public,handler,method,mapping,naming,strategy,t,get,naming,strategy,return,this,naming,strategy
AbstractHandlerMethodMapping -> @Nullable 	public HandlerMethodMappingNamingStrategy<T> getNamingStrategy();1530174524;Return the configured naming strategy or {@code null}.;@Nullable_	public HandlerMethodMappingNamingStrategy<T> getNamingStrategy() {_		return this.namingStrategy__	};return,the,configured,naming,strategy,or,code,null;nullable,public,handler,method,mapping,naming,strategy,t,get,naming,strategy,return,this,naming,strategy
AbstractHandlerMethodMapping -> @Nullable 	public HandlerMethodMappingNamingStrategy<T> getNamingStrategy();1533943217;Return the configured naming strategy or {@code null}.;@Nullable_	public HandlerMethodMappingNamingStrategy<T> getNamingStrategy() {_		return this.namingStrategy__	};return,the,configured,naming,strategy,or,code,null;nullable,public,handler,method,mapping,naming,strategy,t,get,naming,strategy,return,this,naming,strategy
AbstractHandlerMethodMapping -> @Nullable 	public HandlerMethodMappingNamingStrategy<T> getNamingStrategy();1542407418;Return the configured naming strategy or {@code null}.;@Nullable_	public HandlerMethodMappingNamingStrategy<T> getNamingStrategy() {_		return this.namingStrategy__	};return,the,configured,naming,strategy,or,code,null;nullable,public,handler,method,mapping,naming,strategy,t,get,naming,strategy,return,this,naming,strategy
AbstractHandlerMethodMapping -> @Nullable 	public HandlerMethodMappingNamingStrategy<T> getNamingStrategy();1542771062;Return the configured naming strategy or {@code null}.;@Nullable_	public HandlerMethodMappingNamingStrategy<T> getNamingStrategy() {_		return this.namingStrategy__	};return,the,configured,naming,strategy,or,code,null;nullable,public,handler,method,mapping,naming,strategy,t,get,naming,strategy,return,this,naming,strategy
AbstractHandlerMethodMapping -> @Nullable 	public HandlerMethodMappingNamingStrategy<T> getNamingStrategy();1548427561;Return the configured naming strategy or {@code null}.;@Nullable_	public HandlerMethodMappingNamingStrategy<T> getNamingStrategy() {_		return this.namingStrategy__	};return,the,configured,naming,strategy,or,code,null;nullable,public,handler,method,mapping,naming,strategy,t,get,naming,strategy,return,this,naming,strategy
AbstractHandlerMethodMapping -> @Nullable 	public HandlerMethodMappingNamingStrategy<T> getNamingStrategy();1551093473;Return the configured naming strategy or {@code null}.;@Nullable_	public HandlerMethodMappingNamingStrategy<T> getNamingStrategy() {_		return this.namingStrategy__	};return,the,configured,naming,strategy,or,code,null;nullable,public,handler,method,mapping,naming,strategy,t,get,naming,strategy,return,this,naming,strategy
AbstractHandlerMethodMapping -> protected abstract T getMatchingMapping(T mapping, HttpServletRequest request)_;1328020251;Check if a mapping matches the current request and return a (potentially_new) mapping with conditions relevant to the current request.__@param mapping the mapping to get a match for_@param request the current HTTP servlet request_@return the match, or {@code null} if the mapping doesn't match;protected abstract T getMatchingMapping(T mapping, HttpServletRequest request)_;check,if,a,mapping,matches,the,current,request,and,return,a,potentially,new,mapping,with,conditions,relevant,to,the,current,request,param,mapping,the,mapping,to,get,a,match,for,param,request,the,current,http,servlet,request,return,the,match,or,code,null,if,the,mapping,doesn,t,match;protected,abstract,t,get,matching,mapping,t,mapping,http,servlet,request,request
AbstractHandlerMethodMapping -> protected abstract T getMatchingMapping(T mapping, HttpServletRequest request)_;1328022204;Check if a mapping matches the current request and return a (potentially_new) mapping with conditions relevant to the current request.__@param mapping the mapping to get a match for_@param request the current HTTP servlet request_@return the match, or {@code null} if the mapping doesn't match;protected abstract T getMatchingMapping(T mapping, HttpServletRequest request)_;check,if,a,mapping,matches,the,current,request,and,return,a,potentially,new,mapping,with,conditions,relevant,to,the,current,request,param,mapping,the,mapping,to,get,a,match,for,param,request,the,current,http,servlet,request,return,the,match,or,code,null,if,the,mapping,doesn,t,match;protected,abstract,t,get,matching,mapping,t,mapping,http,servlet,request,request
AbstractHandlerMethodMapping -> protected abstract T getMatchingMapping(T mapping, HttpServletRequest request)_;1336682556;Check if a mapping matches the current request and return a (potentially_new) mapping with conditions relevant to the current request.__@param mapping the mapping to get a match for_@param request the current HTTP servlet request_@return the match, or {@code null} if the mapping doesn't match;protected abstract T getMatchingMapping(T mapping, HttpServletRequest request)_;check,if,a,mapping,matches,the,current,request,and,return,a,potentially,new,mapping,with,conditions,relevant,to,the,current,request,param,mapping,the,mapping,to,get,a,match,for,param,request,the,current,http,servlet,request,return,the,match,or,code,null,if,the,mapping,doesn,t,match;protected,abstract,t,get,matching,mapping,t,mapping,http,servlet,request,request
AbstractHandlerMethodMapping -> protected abstract T getMatchingMapping(T mapping, HttpServletRequest request)_;1341441111;Check if a mapping matches the current request and return a (potentially_new) mapping with conditions relevant to the current request._@param mapping the mapping to get a match for_@param request the current HTTP servlet request_@return the match, or {@code null} if the mapping doesn't match;protected abstract T getMatchingMapping(T mapping, HttpServletRequest request)_;check,if,a,mapping,matches,the,current,request,and,return,a,potentially,new,mapping,with,conditions,relevant,to,the,current,request,param,mapping,the,mapping,to,get,a,match,for,param,request,the,current,http,servlet,request,return,the,match,or,code,null,if,the,mapping,doesn,t,match;protected,abstract,t,get,matching,mapping,t,mapping,http,servlet,request,request
AbstractHandlerMethodMapping -> protected abstract T getMatchingMapping(T mapping, HttpServletRequest request)_;1356735495;Check if a mapping matches the current request and return a (potentially_new) mapping with conditions relevant to the current request._@param mapping the mapping to get a match for_@param request the current HTTP servlet request_@return the match, or {@code null} if the mapping doesn't match;protected abstract T getMatchingMapping(T mapping, HttpServletRequest request)_;check,if,a,mapping,matches,the,current,request,and,return,a,potentially,new,mapping,with,conditions,relevant,to,the,current,request,param,mapping,the,mapping,to,get,a,match,for,param,request,the,current,http,servlet,request,return,the,match,or,code,null,if,the,mapping,doesn,t,match;protected,abstract,t,get,matching,mapping,t,mapping,http,servlet,request,request
AbstractHandlerMethodMapping -> protected abstract T getMatchingMapping(T mapping, HttpServletRequest request)_;1357119239;Check if a mapping matches the current request and return a (potentially_new) mapping with conditions relevant to the current request._@param mapping the mapping to get a match for_@param request the current HTTP servlet request_@return the match, or {@code null} if the mapping doesn't match;protected abstract T getMatchingMapping(T mapping, HttpServletRequest request)_;check,if,a,mapping,matches,the,current,request,and,return,a,potentially,new,mapping,with,conditions,relevant,to,the,current,request,param,mapping,the,mapping,to,get,a,match,for,param,request,the,current,http,servlet,request,return,the,match,or,code,null,if,the,mapping,doesn,t,match;protected,abstract,t,get,matching,mapping,t,mapping,http,servlet,request,request
AbstractHandlerMethodMapping -> protected abstract T getMatchingMapping(T mapping, HttpServletRequest request)_;1362408075;Check if a mapping matches the current request and return a (potentially_new) mapping with conditions relevant to the current request._@param mapping the mapping to get a match for_@param request the current HTTP servlet request_@return the match, or {@code null} if the mapping doesn't match;protected abstract T getMatchingMapping(T mapping, HttpServletRequest request)_;check,if,a,mapping,matches,the,current,request,and,return,a,potentially,new,mapping,with,conditions,relevant,to,the,current,request,param,mapping,the,mapping,to,get,a,match,for,param,request,the,current,http,servlet,request,return,the,match,or,code,null,if,the,mapping,doesn,t,match;protected,abstract,t,get,matching,mapping,t,mapping,http,servlet,request,request
AbstractHandlerMethodMapping -> protected abstract T getMatchingMapping(T mapping, HttpServletRequest request)_;1368482696;Check if a mapping matches the current request and return a (potentially_new) mapping with conditions relevant to the current request._@param mapping the mapping to get a match for_@param request the current HTTP servlet request_@return the match, or {@code null} if the mapping doesn't match;protected abstract T getMatchingMapping(T mapping, HttpServletRequest request)_;check,if,a,mapping,matches,the,current,request,and,return,a,potentially,new,mapping,with,conditions,relevant,to,the,current,request,param,mapping,the,mapping,to,get,a,match,for,param,request,the,current,http,servlet,request,return,the,match,or,code,null,if,the,mapping,doesn,t,match;protected,abstract,t,get,matching,mapping,t,mapping,http,servlet,request,request
AbstractHandlerMethodMapping -> protected abstract T getMatchingMapping(T mapping, HttpServletRequest request)_;1368581529;Check if a mapping matches the current request and return a (potentially_new) mapping with conditions relevant to the current request._@param mapping the mapping to get a match for_@param request the current HTTP servlet request_@return the match, or {@code null} if the mapping doesn't match;protected abstract T getMatchingMapping(T mapping, HttpServletRequest request)_;check,if,a,mapping,matches,the,current,request,and,return,a,potentially,new,mapping,with,conditions,relevant,to,the,current,request,param,mapping,the,mapping,to,get,a,match,for,param,request,the,current,http,servlet,request,return,the,match,or,code,null,if,the,mapping,doesn,t,match;protected,abstract,t,get,matching,mapping,t,mapping,http,servlet,request,request
AbstractHandlerMethodMapping -> protected abstract T getMatchingMapping(T mapping, HttpServletRequest request)_;1382665849;Check if a mapping matches the current request and return a (potentially_new) mapping with conditions relevant to the current request._@param mapping the mapping to get a match for_@param request the current HTTP servlet request_@return the match, or {@code null} if the mapping doesn't match;protected abstract T getMatchingMapping(T mapping, HttpServletRequest request)_;check,if,a,mapping,matches,the,current,request,and,return,a,potentially,new,mapping,with,conditions,relevant,to,the,current,request,param,mapping,the,mapping,to,get,a,match,for,param,request,the,current,http,servlet,request,return,the,match,or,code,null,if,the,mapping,doesn,t,match;protected,abstract,t,get,matching,mapping,t,mapping,http,servlet,request,request
AbstractHandlerMethodMapping -> protected abstract T getMatchingMapping(T mapping, HttpServletRequest request)_;1392160296;Check if a mapping matches the current request and return a (potentially_new) mapping with conditions relevant to the current request._@param mapping the mapping to get a match for_@param request the current HTTP servlet request_@return the match, or {@code null} if the mapping doesn't match;protected abstract T getMatchingMapping(T mapping, HttpServletRequest request)_;check,if,a,mapping,matches,the,current,request,and,return,a,potentially,new,mapping,with,conditions,relevant,to,the,current,request,param,mapping,the,mapping,to,get,a,match,for,param,request,the,current,http,servlet,request,return,the,match,or,code,null,if,the,mapping,doesn,t,match;protected,abstract,t,get,matching,mapping,t,mapping,http,servlet,request,request
AbstractHandlerMethodMapping -> protected abstract T getMatchingMapping(T mapping, HttpServletRequest request)_;1392337816;Check if a mapping matches the current request and return a (potentially_new) mapping with conditions relevant to the current request._@param mapping the mapping to get a match for_@param request the current HTTP servlet request_@return the match, or {@code null} if the mapping doesn't match;protected abstract T getMatchingMapping(T mapping, HttpServletRequest request)_;check,if,a,mapping,matches,the,current,request,and,return,a,potentially,new,mapping,with,conditions,relevant,to,the,current,request,param,mapping,the,mapping,to,get,a,match,for,param,request,the,current,http,servlet,request,return,the,match,or,code,null,if,the,mapping,doesn,t,match;protected,abstract,t,get,matching,mapping,t,mapping,http,servlet,request,request
AbstractHandlerMethodMapping -> protected abstract T getMatchingMapping(T mapping, HttpServletRequest request)_;1392407320;Check if a mapping matches the current request and return a (potentially_new) mapping with conditions relevant to the current request._@param mapping the mapping to get a match for_@param request the current HTTP servlet request_@return the match, or {@code null} if the mapping doesn't match;protected abstract T getMatchingMapping(T mapping, HttpServletRequest request)_;check,if,a,mapping,matches,the,current,request,and,return,a,potentially,new,mapping,with,conditions,relevant,to,the,current,request,param,mapping,the,mapping,to,get,a,match,for,param,request,the,current,http,servlet,request,return,the,match,or,code,null,if,the,mapping,doesn,t,match;protected,abstract,t,get,matching,mapping,t,mapping,http,servlet,request,request
AbstractHandlerMethodMapping -> protected abstract T getMatchingMapping(T mapping, HttpServletRequest request)_;1395655323;Check if a mapping matches the current request and return a (potentially_new) mapping with conditions relevant to the current request._@param mapping the mapping to get a match for_@param request the current HTTP servlet request_@return the match, or {@code null} if the mapping doesn't match;protected abstract T getMatchingMapping(T mapping, HttpServletRequest request)_;check,if,a,mapping,matches,the,current,request,and,return,a,potentially,new,mapping,with,conditions,relevant,to,the,current,request,param,mapping,the,mapping,to,get,a,match,for,param,request,the,current,http,servlet,request,return,the,match,or,code,null,if,the,mapping,doesn,t,match;protected,abstract,t,get,matching,mapping,t,mapping,http,servlet,request,request
AbstractHandlerMethodMapping -> protected abstract T getMatchingMapping(T mapping, HttpServletRequest request)_;1399404473;Check if a mapping matches the current request and return a (potentially_new) mapping with conditions relevant to the current request._@param mapping the mapping to get a match for_@param request the current HTTP servlet request_@return the match, or {@code null} if the mapping doesn't match;protected abstract T getMatchingMapping(T mapping, HttpServletRequest request)_;check,if,a,mapping,matches,the,current,request,and,return,a,potentially,new,mapping,with,conditions,relevant,to,the,current,request,param,mapping,the,mapping,to,get,a,match,for,param,request,the,current,http,servlet,request,return,the,match,or,code,null,if,the,mapping,doesn,t,match;protected,abstract,t,get,matching,mapping,t,mapping,http,servlet,request,request
AbstractHandlerMethodMapping -> protected abstract T getMatchingMapping(T mapping, HttpServletRequest request)_;1426869344;Check if a mapping matches the current request and return a (potentially_new) mapping with conditions relevant to the current request._@param mapping the mapping to get a match for_@param request the current HTTP servlet request_@return the match, or {@code null} if the mapping doesn't match;protected abstract T getMatchingMapping(T mapping, HttpServletRequest request)_;check,if,a,mapping,matches,the,current,request,and,return,a,potentially,new,mapping,with,conditions,relevant,to,the,current,request,param,mapping,the,mapping,to,get,a,match,for,param,request,the,current,http,servlet,request,return,the,match,or,code,null,if,the,mapping,doesn,t,match;protected,abstract,t,get,matching,mapping,t,mapping,http,servlet,request,request
AbstractHandlerMethodMapping -> protected abstract T getMatchingMapping(T mapping, HttpServletRequest request)_;1427240641;Check if a mapping matches the current request and return a (potentially_new) mapping with conditions relevant to the current request._@param mapping the mapping to get a match for_@param request the current HTTP servlet request_@return the match, or {@code null} if the mapping doesn't match;protected abstract T getMatchingMapping(T mapping, HttpServletRequest request)_;check,if,a,mapping,matches,the,current,request,and,return,a,potentially,new,mapping,with,conditions,relevant,to,the,current,request,param,mapping,the,mapping,to,get,a,match,for,param,request,the,current,http,servlet,request,return,the,match,or,code,null,if,the,mapping,doesn,t,match;protected,abstract,t,get,matching,mapping,t,mapping,http,servlet,request,request
AbstractHandlerMethodMapping -> protected abstract T getMatchingMapping(T mapping, HttpServletRequest request)_;1427983931;Check if a mapping matches the current request and return a (potentially_new) mapping with conditions relevant to the current request._@param mapping the mapping to get a match for_@param request the current HTTP servlet request_@return the match, or {@code null} if the mapping doesn't match;protected abstract T getMatchingMapping(T mapping, HttpServletRequest request)_;check,if,a,mapping,matches,the,current,request,and,return,a,potentially,new,mapping,with,conditions,relevant,to,the,current,request,param,mapping,the,mapping,to,get,a,match,for,param,request,the,current,http,servlet,request,return,the,match,or,code,null,if,the,mapping,doesn,t,match;protected,abstract,t,get,matching,mapping,t,mapping,http,servlet,request,request
AbstractHandlerMethodMapping -> protected abstract T getMatchingMapping(T mapping, HttpServletRequest request)_;1430734105;Check if a mapping matches the current request and return a (potentially_new) mapping with conditions relevant to the current request._@param mapping the mapping to get a match for_@param request the current HTTP servlet request_@return the match, or {@code null} if the mapping doesn't match;protected abstract T getMatchingMapping(T mapping, HttpServletRequest request)_;check,if,a,mapping,matches,the,current,request,and,return,a,potentially,new,mapping,with,conditions,relevant,to,the,current,request,param,mapping,the,mapping,to,get,a,match,for,param,request,the,current,http,servlet,request,return,the,match,or,code,null,if,the,mapping,doesn,t,match;protected,abstract,t,get,matching,mapping,t,mapping,http,servlet,request,request
AbstractHandlerMethodMapping -> protected abstract T getMatchingMapping(T mapping, HttpServletRequest request)_;1430734105;Check if a mapping matches the current request and return a (potentially_new) mapping with conditions relevant to the current request._@param mapping the mapping to get a match for_@param request the current HTTP servlet request_@return the match, or {@code null} if the mapping doesn't match;protected abstract T getMatchingMapping(T mapping, HttpServletRequest request)_;check,if,a,mapping,matches,the,current,request,and,return,a,potentially,new,mapping,with,conditions,relevant,to,the,current,request,param,mapping,the,mapping,to,get,a,match,for,param,request,the,current,http,servlet,request,return,the,match,or,code,null,if,the,mapping,doesn,t,match;protected,abstract,t,get,matching,mapping,t,mapping,http,servlet,request,request
AbstractHandlerMethodMapping -> protected abstract T getMatchingMapping(T mapping, HttpServletRequest request)_;1430734106;Check if a mapping matches the current request and return a (potentially_new) mapping with conditions relevant to the current request._@param mapping the mapping to get a match for_@param request the current HTTP servlet request_@return the match, or {@code null} if the mapping doesn't match;protected abstract T getMatchingMapping(T mapping, HttpServletRequest request)_;check,if,a,mapping,matches,the,current,request,and,return,a,potentially,new,mapping,with,conditions,relevant,to,the,current,request,param,mapping,the,mapping,to,get,a,match,for,param,request,the,current,http,servlet,request,return,the,match,or,code,null,if,the,mapping,doesn,t,match;protected,abstract,t,get,matching,mapping,t,mapping,http,servlet,request,request
AbstractHandlerMethodMapping -> protected abstract T getMatchingMapping(T mapping, HttpServletRequest request)_;1430774689;Check if a mapping matches the current request and return a (potentially_new) mapping with conditions relevant to the current request._@param mapping the mapping to get a match for_@param request the current HTTP servlet request_@return the match, or {@code null} if the mapping doesn't match;protected abstract T getMatchingMapping(T mapping, HttpServletRequest request)_;check,if,a,mapping,matches,the,current,request,and,return,a,potentially,new,mapping,with,conditions,relevant,to,the,current,request,param,mapping,the,mapping,to,get,a,match,for,param,request,the,current,http,servlet,request,return,the,match,or,code,null,if,the,mapping,doesn,t,match;protected,abstract,t,get,matching,mapping,t,mapping,http,servlet,request,request
AbstractHandlerMethodMapping -> protected abstract T getMatchingMapping(T mapping, HttpServletRequest request)_;1430844966;Check if a mapping matches the current request and return a (potentially_new) mapping with conditions relevant to the current request._@param mapping the mapping to get a match for_@param request the current HTTP servlet request_@return the match, or {@code null} if the mapping doesn't match;protected abstract T getMatchingMapping(T mapping, HttpServletRequest request)_;check,if,a,mapping,matches,the,current,request,and,return,a,potentially,new,mapping,with,conditions,relevant,to,the,current,request,param,mapping,the,mapping,to,get,a,match,for,param,request,the,current,http,servlet,request,return,the,match,or,code,null,if,the,mapping,doesn,t,match;protected,abstract,t,get,matching,mapping,t,mapping,http,servlet,request,request
AbstractHandlerMethodMapping -> protected abstract T getMatchingMapping(T mapping, HttpServletRequest request)_;1430844967;Check if a mapping matches the current request and return a (potentially_new) mapping with conditions relevant to the current request._@param mapping the mapping to get a match for_@param request the current HTTP servlet request_@return the match, or {@code null} if the mapping doesn't match;protected abstract T getMatchingMapping(T mapping, HttpServletRequest request)_;check,if,a,mapping,matches,the,current,request,and,return,a,potentially,new,mapping,with,conditions,relevant,to,the,current,request,param,mapping,the,mapping,to,get,a,match,for,param,request,the,current,http,servlet,request,return,the,match,or,code,null,if,the,mapping,doesn,t,match;protected,abstract,t,get,matching,mapping,t,mapping,http,servlet,request,request
AbstractHandlerMethodMapping -> protected abstract T getMatchingMapping(T mapping, HttpServletRequest request)_;1431730371;Check if a mapping matches the current request and return a (potentially_new) mapping with conditions relevant to the current request._@param mapping the mapping to get a match for_@param request the current HTTP servlet request_@return the match, or {@code null} if the mapping doesn't match;protected abstract T getMatchingMapping(T mapping, HttpServletRequest request)_;check,if,a,mapping,matches,the,current,request,and,return,a,potentially,new,mapping,with,conditions,relevant,to,the,current,request,param,mapping,the,mapping,to,get,a,match,for,param,request,the,current,http,servlet,request,return,the,match,or,code,null,if,the,mapping,doesn,t,match;protected,abstract,t,get,matching,mapping,t,mapping,http,servlet,request,request
AbstractHandlerMethodMapping -> protected abstract T getMatchingMapping(T mapping, HttpServletRequest request)_;1439294371;Check if a mapping matches the current request and return a (potentially_new) mapping with conditions relevant to the current request._@param mapping the mapping to get a match for_@param request the current HTTP servlet request_@return the match, or {@code null} if the mapping doesn't match;protected abstract T getMatchingMapping(T mapping, HttpServletRequest request)_;check,if,a,mapping,matches,the,current,request,and,return,a,potentially,new,mapping,with,conditions,relevant,to,the,current,request,param,mapping,the,mapping,to,get,a,match,for,param,request,the,current,http,servlet,request,return,the,match,or,code,null,if,the,mapping,doesn,t,match;protected,abstract,t,get,matching,mapping,t,mapping,http,servlet,request,request
AbstractHandlerMethodMapping -> protected abstract T getMatchingMapping(T mapping, HttpServletRequest request)_;1447077465;Check if a mapping matches the current request and return a (potentially_new) mapping with conditions relevant to the current request._@param mapping the mapping to get a match for_@param request the current HTTP servlet request_@return the match, or {@code null} if the mapping doesn't match;protected abstract T getMatchingMapping(T mapping, HttpServletRequest request)_;check,if,a,mapping,matches,the,current,request,and,return,a,potentially,new,mapping,with,conditions,relevant,to,the,current,request,param,mapping,the,mapping,to,get,a,match,for,param,request,the,current,http,servlet,request,return,the,match,or,code,null,if,the,mapping,doesn,t,match;protected,abstract,t,get,matching,mapping,t,mapping,http,servlet,request,request
AbstractHandlerMethodMapping -> protected abstract T getMatchingMapping(T mapping, HttpServletRequest request)_;1448483163;Check if a mapping matches the current request and return a (potentially_new) mapping with conditions relevant to the current request._@param mapping the mapping to get a match for_@param request the current HTTP servlet request_@return the match, or {@code null} if the mapping doesn't match;protected abstract T getMatchingMapping(T mapping, HttpServletRequest request)_;check,if,a,mapping,matches,the,current,request,and,return,a,potentially,new,mapping,with,conditions,relevant,to,the,current,request,param,mapping,the,mapping,to,get,a,match,for,param,request,the,current,http,servlet,request,return,the,match,or,code,null,if,the,mapping,doesn,t,match;protected,abstract,t,get,matching,mapping,t,mapping,http,servlet,request,request
AbstractHandlerMethodMapping -> protected abstract T getMatchingMapping(T mapping, HttpServletRequest request)_;1452685925;Check if a mapping matches the current request and return a (potentially_new) mapping with conditions relevant to the current request._@param mapping the mapping to get a match for_@param request the current HTTP servlet request_@return the match, or {@code null} if the mapping doesn't match;protected abstract T getMatchingMapping(T mapping, HttpServletRequest request)_;check,if,a,mapping,matches,the,current,request,and,return,a,potentially,new,mapping,with,conditions,relevant,to,the,current,request,param,mapping,the,mapping,to,get,a,match,for,param,request,the,current,http,servlet,request,return,the,match,or,code,null,if,the,mapping,doesn,t,match;protected,abstract,t,get,matching,mapping,t,mapping,http,servlet,request,request
AbstractHandlerMethodMapping -> protected abstract T getMatchingMapping(T mapping, HttpServletRequest request)_;1452873718;Check if a mapping matches the current request and return a (potentially_new) mapping with conditions relevant to the current request._@param mapping the mapping to get a match for_@param request the current HTTP servlet request_@return the match, or {@code null} if the mapping doesn't match;protected abstract T getMatchingMapping(T mapping, HttpServletRequest request)_;check,if,a,mapping,matches,the,current,request,and,return,a,potentially,new,mapping,with,conditions,relevant,to,the,current,request,param,mapping,the,mapping,to,get,a,match,for,param,request,the,current,http,servlet,request,return,the,match,or,code,null,if,the,mapping,doesn,t,match;protected,abstract,t,get,matching,mapping,t,mapping,http,servlet,request,request
AbstractHandlerMethodMapping -> protected abstract T getMatchingMapping(T mapping, HttpServletRequest request)_;1453843788;Check if a mapping matches the current request and return a (potentially_new) mapping with conditions relevant to the current request._@param mapping the mapping to get a match for_@param request the current HTTP servlet request_@return the match, or {@code null} if the mapping doesn't match;protected abstract T getMatchingMapping(T mapping, HttpServletRequest request)_;check,if,a,mapping,matches,the,current,request,and,return,a,potentially,new,mapping,with,conditions,relevant,to,the,current,request,param,mapping,the,mapping,to,get,a,match,for,param,request,the,current,http,servlet,request,return,the,match,or,code,null,if,the,mapping,doesn,t,match;protected,abstract,t,get,matching,mapping,t,mapping,http,servlet,request,request
AbstractHandlerMethodMapping -> protected abstract T getMatchingMapping(T mapping, HttpServletRequest request)_;1467730834;Check if a mapping matches the current request and return a (potentially_new) mapping with conditions relevant to the current request._@param mapping the mapping to get a match for_@param request the current HTTP servlet request_@return the match, or {@code null} if the mapping doesn't match;protected abstract T getMatchingMapping(T mapping, HttpServletRequest request)_;check,if,a,mapping,matches,the,current,request,and,return,a,potentially,new,mapping,with,conditions,relevant,to,the,current,request,param,mapping,the,mapping,to,get,a,match,for,param,request,the,current,http,servlet,request,return,the,match,or,code,null,if,the,mapping,doesn,t,match;protected,abstract,t,get,matching,mapping,t,mapping,http,servlet,request,request
AbstractHandlerMethodMapping -> protected abstract T getMatchingMapping(T mapping, HttpServletRequest request)_;1468417354;Check if a mapping matches the current request and return a (potentially_new) mapping with conditions relevant to the current request._@param mapping the mapping to get a match for_@param request the current HTTP servlet request_@return the match, or {@code null} if the mapping doesn't match;protected abstract T getMatchingMapping(T mapping, HttpServletRequest request)_;check,if,a,mapping,matches,the,current,request,and,return,a,potentially,new,mapping,with,conditions,relevant,to,the,current,request,param,mapping,the,mapping,to,get,a,match,for,param,request,the,current,http,servlet,request,return,the,match,or,code,null,if,the,mapping,doesn,t,match;protected,abstract,t,get,matching,mapping,t,mapping,http,servlet,request,request
AbstractHandlerMethodMapping -> protected abstract T getMatchingMapping(T mapping, HttpServletRequest request)_;1468596479;Check if a mapping matches the current request and return a (potentially_new) mapping with conditions relevant to the current request._@param mapping the mapping to get a match for_@param request the current HTTP servlet request_@return the match, or {@code null} if the mapping doesn't match;protected abstract T getMatchingMapping(T mapping, HttpServletRequest request)_;check,if,a,mapping,matches,the,current,request,and,return,a,potentially,new,mapping,with,conditions,relevant,to,the,current,request,param,mapping,the,mapping,to,get,a,match,for,param,request,the,current,http,servlet,request,return,the,match,or,code,null,if,the,mapping,doesn,t,match;protected,abstract,t,get,matching,mapping,t,mapping,http,servlet,request,request
AbstractHandlerMethodMapping -> protected abstract T getMatchingMapping(T mapping, HttpServletRequest request)_;1474905889;Check if a mapping matches the current request and return a (potentially_new) mapping with conditions relevant to the current request._@param mapping the mapping to get a match for_@param request the current HTTP servlet request_@return the match, or {@code null} if the mapping doesn't match;protected abstract T getMatchingMapping(T mapping, HttpServletRequest request)_;check,if,a,mapping,matches,the,current,request,and,return,a,potentially,new,mapping,with,conditions,relevant,to,the,current,request,param,mapping,the,mapping,to,get,a,match,for,param,request,the,current,http,servlet,request,return,the,match,or,code,null,if,the,mapping,doesn,t,match;protected,abstract,t,get,matching,mapping,t,mapping,http,servlet,request,request
AbstractHandlerMethodMapping -> protected abstract T getMatchingMapping(T mapping, HttpServletRequest request)_;1481813056;Check if a mapping matches the current request and return a (potentially_new) mapping with conditions relevant to the current request._@param mapping the mapping to get a match for_@param request the current HTTP servlet request_@return the match, or {@code null} if the mapping doesn't match;protected abstract T getMatchingMapping(T mapping, HttpServletRequest request)_;check,if,a,mapping,matches,the,current,request,and,return,a,potentially,new,mapping,with,conditions,relevant,to,the,current,request,param,mapping,the,mapping,to,get,a,match,for,param,request,the,current,http,servlet,request,return,the,match,or,code,null,if,the,mapping,doesn,t,match;protected,abstract,t,get,matching,mapping,t,mapping,http,servlet,request,request
AbstractHandlerMethodMapping -> protected abstract T getMatchingMapping(T mapping, HttpServletRequest request)_;1485810955;Check if a mapping matches the current request and return a (potentially_new) mapping with conditions relevant to the current request._@param mapping the mapping to get a match for_@param request the current HTTP servlet request_@return the match, or {@code null} if the mapping doesn't match;protected abstract T getMatchingMapping(T mapping, HttpServletRequest request)_;check,if,a,mapping,matches,the,current,request,and,return,a,potentially,new,mapping,with,conditions,relevant,to,the,current,request,param,mapping,the,mapping,to,get,a,match,for,param,request,the,current,http,servlet,request,return,the,match,or,code,null,if,the,mapping,doesn,t,match;protected,abstract,t,get,matching,mapping,t,mapping,http,servlet,request,request
