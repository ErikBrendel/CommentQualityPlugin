commented;modifiers;parameterAmount;loc;comment;code
false;protected;1;4;;@Override protected String getBeanClassName(Element element) {     return "org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer". }
false;protected;3;4;;@Override protected String resolveId(Element element, AbstractBeanDefinition definition, ParserContext parserContext) {     return BEAN_NAME. }
false;protected;3;14;;@Override protected void doParse(Element element, ParserContext parserContext, BeanDefinitionBuilder builder) {     List<Element> childElements = DomUtils.getChildElementsByTagName(element, "template-loader-path").     if (!childElements.isEmpty()) {         List<String> locations = new ArrayList<>(childElements.size()).         for (Element childElement : childElements) {             locations.add(childElement.getAttribute("location")).         }         if (locations.isEmpty()) {             locations.add("/WEB-INF/").         }         builder.addPropertyValue("templateLoaderPaths", StringUtils.toStringArray(locations)).     } }
