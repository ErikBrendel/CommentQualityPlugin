# id;timestamp;commentText;codeText;commentWords;codeWords
MvcUriComponentsBuilder -> public static <T> T mock(Class<T> controllerType);1382754578;Return a "mock" controller instance. When a method on the mock is invoked, the_supplied argument values are remembered and the result can then be used to_prepare a UriComponents through the factory method {@link #fromLastCall(Object)}._<p>_The controller can be invoked more than once. However, only the last invocation_is remembered. This means the same mock controller can be used to create_multiple links in succession, for example:__<pre>_CustomerController controller = MvcUriComponentsBuilder.mock(CustomController.class)___MvcUriComponentsBuilder.fromLastCall(controller.getFoo(1)).build()__MvcUriComponentsBuilder.fromLastCall(controller.getFoo(2)).build()___MvcUriComponentsBuilder.fromLastCall(controller.getBar(1)).build()__MvcUriComponentsBuilder.fromLastCall(controller.getBar(2)).build()__</pre>__If a controller method returns void, use the following style:__<pre>_CustomerController controller = MvcUriComponentsBuilder.mock(CustomController.class)___controller.handleFoo(1)__MvcUriComponentsBuilder.fromLastCall(controller).build()___controller.handleFoo(2)_MvcUriComponentsBuilder.fromLastCall(controller).build()__</pre>__@param controllerType the type of controller to mock;public static <T> T mock(Class<T> controllerType) {_		Assert.notNull(controllerType, "'controllerType' must not be null")__		return initProxy(controllerType, new ControllerMethodInvocationInterceptor())__	};return,a,mock,controller,instance,when,a,method,on,the,mock,is,invoked,the,supplied,argument,values,are,remembered,and,the,result,can,then,be,used,to,prepare,a,uri,components,through,the,factory,method,link,from,last,call,object,p,the,controller,can,be,invoked,more,than,once,however,only,the,last,invocation,is,remembered,this,means,the,same,mock,controller,can,be,used,to,create,multiple,links,in,succession,for,example,pre,customer,controller,controller,mvc,uri,components,builder,mock,custom,controller,class,mvc,uri,components,builder,from,last,call,controller,get,foo,1,build,mvc,uri,components,builder,from,last,call,controller,get,foo,2,build,mvc,uri,components,builder,from,last,call,controller,get,bar,1,build,mvc,uri,components,builder,from,last,call,controller,get,bar,2,build,pre,if,a,controller,method,returns,void,use,the,following,style,pre,customer,controller,controller,mvc,uri,components,builder,mock,custom,controller,class,controller,handle,foo,1,mvc,uri,components,builder,from,last,call,controller,build,controller,handle,foo,2,mvc,uri,components,builder,from,last,call,controller,build,pre,param,controller,type,the,type,of,controller,to,mock;public,static,t,t,mock,class,t,controller,type,assert,not,null,controller,type,controller,type,must,not,be,null,return,init,proxy,controller,type,new,controller,method,invocation,interceptor
MvcUriComponentsBuilder -> public static <T> T mock(Class<T> controllerType);1382757913;Return a "mock" controller instance. When a method on the mock is invoked, the_supplied argument values are remembered and the result can then be used to_prepare a UriComponents through the factory method {@link #fromLastCall(Object)}._<p>_The controller can be invoked more than once. However, only the last invocation_is remembered. This means the same mock controller can be used to create_multiple links in succession, for example:__<pre>_CustomerController controller = MvcUriComponentsBuilder.mock(CustomController.class)___MvcUriComponentsBuilder.fromLastCall(controller.getFoo(1)).build()__MvcUriComponentsBuilder.fromLastCall(controller.getFoo(2)).build()___MvcUriComponentsBuilder.fromLastCall(controller.getBar(1)).build()__MvcUriComponentsBuilder.fromLastCall(controller.getBar(2)).build()__</pre>__If a controller method returns void, use the following style:__<pre>_CustomerController controller = MvcUriComponentsBuilder.mock(CustomController.class)___controller.handleFoo(1)__MvcUriComponentsBuilder.fromLastCall(controller).build()___controller.handleFoo(2)_MvcUriComponentsBuilder.fromLastCall(controller).build()__</pre>__@param controllerType the type of controller to mock;public static <T> T mock(Class<T> controllerType) {_		Assert.notNull(controllerType, "'controllerType' must not be null")__		return initProxy(controllerType, new ControllerMethodInvocationInterceptor())__	};return,a,mock,controller,instance,when,a,method,on,the,mock,is,invoked,the,supplied,argument,values,are,remembered,and,the,result,can,then,be,used,to,prepare,a,uri,components,through,the,factory,method,link,from,last,call,object,p,the,controller,can,be,invoked,more,than,once,however,only,the,last,invocation,is,remembered,this,means,the,same,mock,controller,can,be,used,to,create,multiple,links,in,succession,for,example,pre,customer,controller,controller,mvc,uri,components,builder,mock,custom,controller,class,mvc,uri,components,builder,from,last,call,controller,get,foo,1,build,mvc,uri,components,builder,from,last,call,controller,get,foo,2,build,mvc,uri,components,builder,from,last,call,controller,get,bar,1,build,mvc,uri,components,builder,from,last,call,controller,get,bar,2,build,pre,if,a,controller,method,returns,void,use,the,following,style,pre,customer,controller,controller,mvc,uri,components,builder,mock,custom,controller,class,controller,handle,foo,1,mvc,uri,components,builder,from,last,call,controller,build,controller,handle,foo,2,mvc,uri,components,builder,from,last,call,controller,build,pre,param,controller,type,the,type,of,controller,to,mock;public,static,t,t,mock,class,t,controller,type,assert,not,null,controller,type,controller,type,must,not,be,null,return,init,proxy,controller,type,new,controller,method,invocation,interceptor
MvcUriComponentsBuilder -> public static <T> T mock(Class<T> controllerType);1382911216;Return a "mock" controller instance. When a method on the mock is invoked, the_supplied argument values are remembered and the result can then be used to_prepare a UriComponents through the factory method {@link #fromLastCall(Object)}._<p>_The controller can be invoked more than once. However, only the last invocation_is remembered. This means the same mock controller can be used to create_multiple links in succession, for example:__<pre>_CustomerController controller = MvcUriComponentsBuilder.mock(CustomController.class)___MvcUriComponentsBuilder.fromLastCall(controller.getFoo(1)).build()__MvcUriComponentsBuilder.fromLastCall(controller.getFoo(2)).build()___MvcUriComponentsBuilder.fromLastCall(controller.getBar(1)).build()__MvcUriComponentsBuilder.fromLastCall(controller.getBar(2)).build()__</pre>__If a controller method returns void, use the following style:__<pre>_CustomerController controller = MvcUriComponentsBuilder.mock(CustomController.class)___controller.handleFoo(1)__MvcUriComponentsBuilder.fromLastCall(controller).build()___controller.handleFoo(2)_MvcUriComponentsBuilder.fromLastCall(controller).build()__</pre>__@param controllerType the type of controller to mock;public static <T> T mock(Class<T> controllerType) {_		Assert.notNull(controllerType, "'controllerType' must not be null")__		return initProxy(controllerType, new ControllerMethodInvocationInterceptor())__	};return,a,mock,controller,instance,when,a,method,on,the,mock,is,invoked,the,supplied,argument,values,are,remembered,and,the,result,can,then,be,used,to,prepare,a,uri,components,through,the,factory,method,link,from,last,call,object,p,the,controller,can,be,invoked,more,than,once,however,only,the,last,invocation,is,remembered,this,means,the,same,mock,controller,can,be,used,to,create,multiple,links,in,succession,for,example,pre,customer,controller,controller,mvc,uri,components,builder,mock,custom,controller,class,mvc,uri,components,builder,from,last,call,controller,get,foo,1,build,mvc,uri,components,builder,from,last,call,controller,get,foo,2,build,mvc,uri,components,builder,from,last,call,controller,get,bar,1,build,mvc,uri,components,builder,from,last,call,controller,get,bar,2,build,pre,if,a,controller,method,returns,void,use,the,following,style,pre,customer,controller,controller,mvc,uri,components,builder,mock,custom,controller,class,controller,handle,foo,1,mvc,uri,components,builder,from,last,call,controller,build,controller,handle,foo,2,mvc,uri,components,builder,from,last,call,controller,build,pre,param,controller,type,the,type,of,controller,to,mock;public,static,t,t,mock,class,t,controller,type,assert,not,null,controller,type,controller,type,must,not,be,null,return,init,proxy,controller,type,new,controller,method,invocation,interceptor
MvcUriComponentsBuilder -> public UriComponentsBuilder withMethod(Method method, Object... args);1429801417;An alternative to {@link #fromMethod(java.lang.reflect.Method, Object...)}_for use with an instance of this class created via {@link #relativeTo}.;public UriComponentsBuilder withMethod(Method method, Object... args) {_		return fromMethod(this.baseUrl, method, args)__	};an,alternative,to,link,from,method,java,lang,reflect,method,object,for,use,with,an,instance,of,this,class,created,via,link,relative,to;public,uri,components,builder,with,method,method,method,object,args,return,from,method,this,base,url,method,args
MvcUriComponentsBuilder -> public UriComponentsBuilder withMethod(Method method, Object... args);1429801944;An alternative to {@link #fromMethod(java.lang.reflect.Method, Object...)}_for use with an instance of this class created via {@link #relativeTo}.;public UriComponentsBuilder withMethod(Method method, Object... args) {_		return fromMethod(this.baseUrl, method, args)__	};an,alternative,to,link,from,method,java,lang,reflect,method,object,for,use,with,an,instance,of,this,class,created,via,link,relative,to;public,uri,components,builder,with,method,method,method,object,args,return,from,method,this,base,url,method,args
MvcUriComponentsBuilder -> public UriComponentsBuilder withMethod(Method method, Object... args);1429802180;An alternative to {@link #fromMethod(java.lang.reflect.Method, Object...)}_for use with an instance of this class created via {@link #relativeTo}.;public UriComponentsBuilder withMethod(Method method, Object... args) {_		return fromMethod(this.baseUrl, method, args)__	};an,alternative,to,link,from,method,java,lang,reflect,method,object,for,use,with,an,instance,of,this,class,created,via,link,relative,to;public,uri,components,builder,with,method,method,method,object,args,return,from,method,this,base,url,method,args
MvcUriComponentsBuilder -> public UriComponentsBuilder withMethod(Method method, Object... args);1429886024;An alternative to {@link #fromMethod(java.lang.reflect.Method, Object...)}_for use with an instance of this class created via {@link #relativeTo}.;public UriComponentsBuilder withMethod(Method method, Object... args) {_		return fromMethod(this.baseUrl, method, args)__	};an,alternative,to,link,from,method,java,lang,reflect,method,object,for,use,with,an,instance,of,this,class,created,via,link,relative,to;public,uri,components,builder,with,method,method,method,object,args,return,from,method,this,base,url,method,args
MvcUriComponentsBuilder -> public UriComponentsBuilder withMethod(Method method, Object... args);1429888980;An alternative to {@link #fromMethod(java.lang.reflect.Method, Object...)}_for use with an instance of this class created via {@link #relativeTo}.;public UriComponentsBuilder withMethod(Method method, Object... args) {_		return fromMethod(this.baseUrl, method, args)__	};an,alternative,to,link,from,method,java,lang,reflect,method,object,for,use,with,an,instance,of,this,class,created,via,link,relative,to;public,uri,components,builder,with,method,method,method,object,args,return,from,method,this,base,url,method,args
MvcUriComponentsBuilder -> public UriComponentsBuilder withMethod(Method method, Object... args);1430739806;An alternative to {@link #fromMethod(java.lang.reflect.Method, Object...)}_for use with an instance of this class created via {@link #relativeTo}.;public UriComponentsBuilder withMethod(Method method, Object... args) {_		return fromMethod(this.baseUrl, method, args)__	};an,alternative,to,link,from,method,java,lang,reflect,method,object,for,use,with,an,instance,of,this,class,created,via,link,relative,to;public,uri,components,builder,with,method,method,method,object,args,return,from,method,this,base,url,method,args
MvcUriComponentsBuilder -> public UriComponentsBuilder withMethod(Method method, Object... args);1430747547;An alternative to {@link #fromMethod(java.lang.reflect.Method, Object...)}_for use with an instance of this class created via {@link #relativeTo}.;public UriComponentsBuilder withMethod(Method method, Object... args) {_		return fromMethod(this.baseUrl, method, args)__	};an,alternative,to,link,from,method,java,lang,reflect,method,object,for,use,with,an,instance,of,this,class,created,via,link,relative,to;public,uri,components,builder,with,method,method,method,object,args,return,from,method,this,base,url,method,args
MvcUriComponentsBuilder -> public UriComponentsBuilder withMethod(Method method, Object... args);1430749606;An alternative to {@link #fromMethod(java.lang.reflect.Method, Object...)}_for use with an instance of this class created via {@link #relativeTo}.;public UriComponentsBuilder withMethod(Method method, Object... args) {_		return fromMethod(this.baseUrl, method, args)__	};an,alternative,to,link,from,method,java,lang,reflect,method,object,for,use,with,an,instance,of,this,class,created,via,link,relative,to;public,uri,components,builder,with,method,method,method,object,args,return,from,method,this,base,url,method,args
MvcUriComponentsBuilder -> public UriComponentsBuilder withController(Class<?> controllerType);1429801417;An alternative to {@link #fromController(Class)} for use with an instance_of this class created via a call to {@link #relativeTo}.;public UriComponentsBuilder withController(Class<?> controllerType) {_		return fromController(this.baseUrl, controllerType)__	};an,alternative,to,link,from,controller,class,for,use,with,an,instance,of,this,class,created,via,a,call,to,link,relative,to;public,uri,components,builder,with,controller,class,controller,type,return,from,controller,this,base,url,controller,type
MvcUriComponentsBuilder -> public UriComponentsBuilder withController(Class<?> controllerType);1429801944;An alternative to {@link #fromController(Class)} for use with an instance_of this class created via a call to {@link #relativeTo}.;public UriComponentsBuilder withController(Class<?> controllerType) {_		return fromController(this.baseUrl, controllerType)__	};an,alternative,to,link,from,controller,class,for,use,with,an,instance,of,this,class,created,via,a,call,to,link,relative,to;public,uri,components,builder,with,controller,class,controller,type,return,from,controller,this,base,url,controller,type
MvcUriComponentsBuilder -> public UriComponentsBuilder withController(Class<?> controllerType);1429802180;An alternative to {@link #fromController(Class)} for use with an instance_of this class created via a call to {@link #relativeTo}.;public UriComponentsBuilder withController(Class<?> controllerType) {_		return fromController(this.baseUrl, controllerType)__	};an,alternative,to,link,from,controller,class,for,use,with,an,instance,of,this,class,created,via,a,call,to,link,relative,to;public,uri,components,builder,with,controller,class,controller,type,return,from,controller,this,base,url,controller,type
MvcUriComponentsBuilder -> public UriComponentsBuilder withController(Class<?> controllerType);1429886024;An alternative to {@link #fromController(Class)} for use with an instance_of this class created via a call to {@link #relativeTo}.;public UriComponentsBuilder withController(Class<?> controllerType) {_		return fromController(this.baseUrl, controllerType)__	};an,alternative,to,link,from,controller,class,for,use,with,an,instance,of,this,class,created,via,a,call,to,link,relative,to;public,uri,components,builder,with,controller,class,controller,type,return,from,controller,this,base,url,controller,type
MvcUriComponentsBuilder -> public UriComponentsBuilder withController(Class<?> controllerType);1429888980;An alternative to {@link #fromController(Class)} for use with an instance_of this class created via a call to {@link #relativeTo}.;public UriComponentsBuilder withController(Class<?> controllerType) {_		return fromController(this.baseUrl, controllerType)__	};an,alternative,to,link,from,controller,class,for,use,with,an,instance,of,this,class,created,via,a,call,to,link,relative,to;public,uri,components,builder,with,controller,class,controller,type,return,from,controller,this,base,url,controller,type
MvcUriComponentsBuilder -> public UriComponentsBuilder withController(Class<?> controllerType);1430739806;An alternative to {@link #fromController(Class)} for use with an instance_of this class created via a call to {@link #relativeTo}.;public UriComponentsBuilder withController(Class<?> controllerType) {_		return fromController(this.baseUrl, controllerType)__	};an,alternative,to,link,from,controller,class,for,use,with,an,instance,of,this,class,created,via,a,call,to,link,relative,to;public,uri,components,builder,with,controller,class,controller,type,return,from,controller,this,base,url,controller,type
MvcUriComponentsBuilder -> public UriComponentsBuilder withController(Class<?> controllerType);1430747547;An alternative to {@link #fromController(Class)} for use with an instance_of this class created via a call to {@link #relativeTo}.;public UriComponentsBuilder withController(Class<?> controllerType) {_		return fromController(this.baseUrl, controllerType)__	};an,alternative,to,link,from,controller,class,for,use,with,an,instance,of,this,class,created,via,a,call,to,link,relative,to;public,uri,components,builder,with,controller,class,controller,type,return,from,controller,this,base,url,controller,type
MvcUriComponentsBuilder -> public UriComponentsBuilder withController(Class<?> controllerType);1430749606;An alternative to {@link #fromController(Class)} for use with an instance_of this class created via a call to {@link #relativeTo}.;public UriComponentsBuilder withController(Class<?> controllerType) {_		return fromController(this.baseUrl, controllerType)__	};an,alternative,to,link,from,controller,class,for,use,with,an,instance,of,this,class,created,via,a,call,to,link,relative,to;public,uri,components,builder,with,controller,class,controller,type,return,from,controller,this,base,url,controller,type
MvcUriComponentsBuilder -> public UriComponentsBuilder withController(Class<?> controllerType);1431975386;An alternative to {@link #fromController(Class)} for use with an instance_of this class created via a call to {@link #relativeTo}.;public UriComponentsBuilder withController(Class<?> controllerType) {_		return fromController(this.baseUrl, controllerType)__	};an,alternative,to,link,from,controller,class,for,use,with,an,instance,of,this,class,created,via,a,call,to,link,relative,to;public,uri,components,builder,with,controller,class,controller,type,return,from,controller,this,base,url,controller,type
MvcUriComponentsBuilder -> public UriComponentsBuilder withController(Class<?> controllerType);1432125256;An alternative to {@link #fromController(Class)} for use with an instance_of this class created via a call to {@link #relativeTo}.;public UriComponentsBuilder withController(Class<?> controllerType) {_		return fromController(this.baseUrl, controllerType)__	};an,alternative,to,link,from,controller,class,for,use,with,an,instance,of,this,class,created,via,a,call,to,link,relative,to;public,uri,components,builder,with,controller,class,controller,type,return,from,controller,this,base,url,controller,type
MvcUriComponentsBuilder -> public UriComponentsBuilder withController(Class<?> controllerType);1432156007;An alternative to {@link #fromController(Class)} for use with an instance_of this class created via a call to {@link #relativeTo}.;public UriComponentsBuilder withController(Class<?> controllerType) {_		return fromController(this.baseUrl, controllerType)__	};an,alternative,to,link,from,controller,class,for,use,with,an,instance,of,this,class,created,via,a,call,to,link,relative,to;public,uri,components,builder,with,controller,class,controller,type,return,from,controller,this,base,url,controller,type
MvcUriComponentsBuilder -> public UriComponentsBuilder withController(Class<?> controllerType);1432856630;An alternative to {@link #fromController(Class)} for use with an instance_of this class created via a call to {@link #relativeTo}.;public UriComponentsBuilder withController(Class<?> controllerType) {_		return fromController(this.baseUrl, controllerType)__	};an,alternative,to,link,from,controller,class,for,use,with,an,instance,of,this,class,created,via,a,call,to,link,relative,to;public,uri,components,builder,with,controller,class,controller,type,return,from,controller,this,base,url,controller,type
MvcUriComponentsBuilder -> public UriComponentsBuilder withController(Class<?> controllerType);1432857824;An alternative to {@link #fromController(Class)} for use with an instance_of this class created via a call to {@link #relativeTo}.;public UriComponentsBuilder withController(Class<?> controllerType) {_		return fromController(this.baseUrl, controllerType)__	};an,alternative,to,link,from,controller,class,for,use,with,an,instance,of,this,class,created,via,a,call,to,link,relative,to;public,uri,components,builder,with,controller,class,controller,type,return,from,controller,this,base,url,controller,type
MvcUriComponentsBuilder -> public UriComponentsBuilder withController(Class<?> controllerType);1434234880;An alternative to {@link #fromController(Class)} for use with an instance_of this class created via a call to {@link #relativeTo}.;public UriComponentsBuilder withController(Class<?> controllerType) {_		return fromController(this.baseUrl, controllerType)__	};an,alternative,to,link,from,controller,class,for,use,with,an,instance,of,this,class,created,via,a,call,to,link,relative,to;public,uri,components,builder,with,controller,class,controller,type,return,from,controller,this,base,url,controller,type
MvcUriComponentsBuilder -> public UriComponentsBuilder withController(Class<?> controllerType);1434484897;An alternative to {@link #fromController(Class)} for use with an instance_of this class created via a call to {@link #relativeTo}.;public UriComponentsBuilder withController(Class<?> controllerType) {_		return fromController(this.baseUrl, controllerType)__	};an,alternative,to,link,from,controller,class,for,use,with,an,instance,of,this,class,created,via,a,call,to,link,relative,to;public,uri,components,builder,with,controller,class,controller,type,return,from,controller,this,base,url,controller,type
MvcUriComponentsBuilder -> public UriComponentsBuilder withController(Class<?> controllerType);1434726592;An alternative to {@link #fromController(Class)} for use with an instance_of this class created via a call to {@link #relativeTo}.;public UriComponentsBuilder withController(Class<?> controllerType) {_		return fromController(this.baseUrl, controllerType)__	};an,alternative,to,link,from,controller,class,for,use,with,an,instance,of,this,class,created,via,a,call,to,link,relative,to;public,uri,components,builder,with,controller,class,controller,type,return,from,controller,this,base,url,controller,type
MvcUriComponentsBuilder -> public UriComponentsBuilder withController(Class<?> controllerType);1435615322;An alternative to {@link #fromController(Class)} for use with an instance_of this class created via a call to {@link #relativeTo}.;public UriComponentsBuilder withController(Class<?> controllerType) {_		return fromController(this.baseUrl, controllerType)__	};an,alternative,to,link,from,controller,class,for,use,with,an,instance,of,this,class,created,via,a,call,to,link,relative,to;public,uri,components,builder,with,controller,class,controller,type,return,from,controller,this,base,url,controller,type
MvcUriComponentsBuilder -> public UriComponentsBuilder withController(Class<?> controllerType);1439294371;An alternative to {@link #fromController(Class)} for use with an instance_of this class created via a call to {@link #relativeTo}._@since 4.2;public UriComponentsBuilder withController(Class<?> controllerType) {_		return fromController(this.baseUrl, controllerType)__	};an,alternative,to,link,from,controller,class,for,use,with,an,instance,of,this,class,created,via,a,call,to,link,relative,to,since,4,2;public,uri,components,builder,with,controller,class,controller,type,return,from,controller,this,base,url,controller,type
MvcUriComponentsBuilder -> public UriComponentsBuilder withController(Class<?> controllerType);1447077465;An alternative to {@link #fromController(Class)} for use with an instance_of this class created via a call to {@link #relativeTo}._@since 4.2;public UriComponentsBuilder withController(Class<?> controllerType) {_		return fromController(this.baseUrl, controllerType)__	};an,alternative,to,link,from,controller,class,for,use,with,an,instance,of,this,class,created,via,a,call,to,link,relative,to,since,4,2;public,uri,components,builder,with,controller,class,controller,type,return,from,controller,this,base,url,controller,type
MvcUriComponentsBuilder -> public UriComponentsBuilder withController(Class<?> controllerType);1458830024;An alternative to {@link #fromController(Class)} for use with an instance_of this class created via a call to {@link #relativeTo}._@since 4.2;public UriComponentsBuilder withController(Class<?> controllerType) {_		return fromController(this.baseUrl, controllerType)__	};an,alternative,to,link,from,controller,class,for,use,with,an,instance,of,this,class,created,via,a,call,to,link,relative,to,since,4,2;public,uri,components,builder,with,controller,class,controller,type,return,from,controller,this,base,url,controller,type
MvcUriComponentsBuilder -> public UriComponentsBuilder withController(Class<?> controllerType);1461047077;An alternative to {@link #fromController(Class)} for use with an instance_of this class created via a call to {@link #relativeTo}._@since 4.2;public UriComponentsBuilder withController(Class<?> controllerType) {_		return fromController(this.baseUrl, controllerType)__	};an,alternative,to,link,from,controller,class,for,use,with,an,instance,of,this,class,created,via,a,call,to,link,relative,to,since,4,2;public,uri,components,builder,with,controller,class,controller,type,return,from,controller,this,base,url,controller,type
MvcUriComponentsBuilder -> public UriComponentsBuilder withController(Class<?> controllerType);1467677340;An alternative to {@link #fromController(Class)} for use with an instance_of this class created via a call to {@link #relativeTo}._@since 4.2;public UriComponentsBuilder withController(Class<?> controllerType) {_		return fromController(this.baseUrl, controllerType)__	};an,alternative,to,link,from,controller,class,for,use,with,an,instance,of,this,class,created,via,a,call,to,link,relative,to,since,4,2;public,uri,components,builder,with,controller,class,controller,type,return,from,controller,this,base,url,controller,type
MvcUriComponentsBuilder -> public UriComponentsBuilder withController(Class<?> controllerType);1467726769;An alternative to {@link #fromController(Class)} for use with an instance_of this class created via a call to {@link #relativeTo}._@since 4.2;public UriComponentsBuilder withController(Class<?> controllerType) {_		return fromController(this.baseUrl, controllerType)__	};an,alternative,to,link,from,controller,class,for,use,with,an,instance,of,this,class,created,via,a,call,to,link,relative,to,since,4,2;public,uri,components,builder,with,controller,class,controller,type,return,from,controller,this,base,url,controller,type
MvcUriComponentsBuilder -> public UriComponentsBuilder withController(Class<?> controllerType);1467730834;An alternative to {@link #fromController(Class)} for use with an instance_of this class created via a call to {@link #relativeTo}._@since 4.2;public UriComponentsBuilder withController(Class<?> controllerType) {_		return fromController(this.baseUrl, controllerType)__	};an,alternative,to,link,from,controller,class,for,use,with,an,instance,of,this,class,created,via,a,call,to,link,relative,to,since,4,2;public,uri,components,builder,with,controller,class,controller,type,return,from,controller,this,base,url,controller,type
MvcUriComponentsBuilder -> public UriComponentsBuilder withController(Class<?> controllerType);1467846264;An alternative to {@link #fromController(Class)} for use with an instance_of this class created via a call to {@link #relativeTo}._@since 4.2;public UriComponentsBuilder withController(Class<?> controllerType) {_		return fromController(this.baseUrl, controllerType)__	};an,alternative,to,link,from,controller,class,for,use,with,an,instance,of,this,class,created,via,a,call,to,link,relative,to,since,4,2;public,uri,components,builder,with,controller,class,controller,type,return,from,controller,this,base,url,controller,type
MvcUriComponentsBuilder -> public UriComponentsBuilder withController(Class<?> controllerType);1468613531;An alternative to {@link #fromController(Class)} for use with an instance_of this class created via a call to {@link #relativeTo}._@since 4.2;public UriComponentsBuilder withController(Class<?> controllerType) {_		return fromController(this.baseUrl, controllerType)__	};an,alternative,to,link,from,controller,class,for,use,with,an,instance,of,this,class,created,via,a,call,to,link,relative,to,since,4,2;public,uri,components,builder,with,controller,class,controller,type,return,from,controller,this,base,url,controller,type
MvcUriComponentsBuilder -> public UriComponentsBuilder withController(Class<?> controllerType);1468948866;An alternative to {@link #fromController(Class)} for use with an instance_of this class created via a call to {@link #relativeTo}._@since 4.2;public UriComponentsBuilder withController(Class<?> controllerType) {_		return fromController(this.baseUrl, controllerType)__	};an,alternative,to,link,from,controller,class,for,use,with,an,instance,of,this,class,created,via,a,call,to,link,relative,to,since,4,2;public,uri,components,builder,with,controller,class,controller,type,return,from,controller,this,base,url,controller,type
MvcUriComponentsBuilder -> public UriComponentsBuilder withController(Class<?> controllerType);1485810955;An alternative to {@link #fromController(Class)} for use with an instance_of this class created via a call to {@link #relativeTo}._@since 4.2;public UriComponentsBuilder withController(Class<?> controllerType) {_		return fromController(this.baseUrl, controllerType)__	};an,alternative,to,link,from,controller,class,for,use,with,an,instance,of,this,class,created,via,a,call,to,link,relative,to,since,4,2;public,uri,components,builder,with,controller,class,controller,type,return,from,controller,this,base,url,controller,type
MvcUriComponentsBuilder -> public UriComponentsBuilder withController(Class<?> controllerType);1486634978;An alternative to {@link #fromController(Class)} for use with an instance_of this class created via a call to {@link #relativeTo}._@since 4.2;public UriComponentsBuilder withController(Class<?> controllerType) {_		return fromController(this.baseUrl, controllerType)__	};an,alternative,to,link,from,controller,class,for,use,with,an,instance,of,this,class,created,via,a,call,to,link,relative,to,since,4,2;public,uri,components,builder,with,controller,class,controller,type,return,from,controller,this,base,url,controller,type
MvcUriComponentsBuilder -> public UriComponentsBuilder withController(Class<?> controllerType);1486635693;An alternative to {@link #fromController(Class)} for use with an instance_of this class created via a call to {@link #relativeTo}._@since 4.2;public UriComponentsBuilder withController(Class<?> controllerType) {_		return fromController(this.baseUrl, controllerType)__	};an,alternative,to,link,from,controller,class,for,use,with,an,instance,of,this,class,created,via,a,call,to,link,relative,to,since,4,2;public,uri,components,builder,with,controller,class,controller,type,return,from,controller,this,base,url,controller,type
MvcUriComponentsBuilder -> public UriComponentsBuilder withController(Class<?> controllerType);1495868221;An alternative to {@link #fromController(Class)} for use with an instance_of this class created via a call to {@link #relativeTo}._@since 4.2;public UriComponentsBuilder withController(Class<?> controllerType) {_		return fromController(this.baseUrl, controllerType)__	};an,alternative,to,link,from,controller,class,for,use,with,an,instance,of,this,class,created,via,a,call,to,link,relative,to,since,4,2;public,uri,components,builder,with,controller,class,controller,type,return,from,controller,this,base,url,controller,type
MvcUriComponentsBuilder -> public UriComponentsBuilder withController(Class<?> controllerType);1496242568;An alternative to {@link #fromController(Class)} for use with an instance_of this class created via a call to {@link #relativeTo}._@since 4.2;public UriComponentsBuilder withController(Class<?> controllerType) {_		return fromController(this.baseUrl, controllerType)__	};an,alternative,to,link,from,controller,class,for,use,with,an,instance,of,this,class,created,via,a,call,to,link,relative,to,since,4,2;public,uri,components,builder,with,controller,class,controller,type,return,from,controller,this,base,url,controller,type
MvcUriComponentsBuilder -> public UriComponentsBuilder withController(Class<?> controllerType);1496259743;An alternative to {@link #fromController(Class)} for use with an instance_of this class created via a call to {@link #relativeTo}._@since 4.2;public UriComponentsBuilder withController(Class<?> controllerType) {_		return fromController(this.baseUrl, controllerType)__	};an,alternative,to,link,from,controller,class,for,use,with,an,instance,of,this,class,created,via,a,call,to,link,relative,to,since,4,2;public,uri,components,builder,with,controller,class,controller,type,return,from,controller,this,base,url,controller,type
MvcUriComponentsBuilder -> public UriComponentsBuilder withController(Class<?> controllerType);1496370972;An alternative to {@link #fromController(Class)} for use with an instance_of this class created via a call to {@link #relativeTo}._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@since 4.2;public UriComponentsBuilder withController(Class<?> controllerType) {_		return fromController(this.baseUrl, controllerType)__	};an,alternative,to,link,from,controller,class,for,use,with,an,instance,of,this,class,created,via,a,call,to,link,relative,to,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,since,4,2;public,uri,components,builder,with,controller,class,controller,type,return,from,controller,this,base,url,controller,type
MvcUriComponentsBuilder -> public UriComponentsBuilder withController(Class<?> controllerType);1496837955;An alternative to {@link #fromController(Class)} for use with an instance_of this class created via a call to {@link #relativeTo}._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@since 4.2;public UriComponentsBuilder withController(Class<?> controllerType) {_		return fromController(this.baseUrl, controllerType)__	};an,alternative,to,link,from,controller,class,for,use,with,an,instance,of,this,class,created,via,a,call,to,link,relative,to,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,since,4,2;public,uri,components,builder,with,controller,class,controller,type,return,from,controller,this,base,url,controller,type
MvcUriComponentsBuilder -> public UriComponentsBuilder withController(Class<?> controllerType);1497341397;An alternative to {@link #fromController(Class)} for use with an instance_of this class created via a call to {@link #relativeTo}._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@since 4.2;public UriComponentsBuilder withController(Class<?> controllerType) {_		return fromController(this.baseUrl, controllerType)__	};an,alternative,to,link,from,controller,class,for,use,with,an,instance,of,this,class,created,via,a,call,to,link,relative,to,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,since,4,2;public,uri,components,builder,with,controller,class,controller,type,return,from,controller,this,base,url,controller,type
MvcUriComponentsBuilder -> public UriComponentsBuilder withController(Class<?> controllerType);1498780456;An alternative to {@link #fromController(Class)} for use with an instance_of this class created via a call to {@link #relativeTo}._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@since 4.2;public UriComponentsBuilder withController(Class<?> controllerType) {_		return fromController(this.baseUrl, controllerType)__	};an,alternative,to,link,from,controller,class,for,use,with,an,instance,of,this,class,created,via,a,call,to,link,relative,to,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,since,4,2;public,uri,components,builder,with,controller,class,controller,type,return,from,controller,this,base,url,controller,type
MvcUriComponentsBuilder -> public UriComponentsBuilder withController(Class<?> controllerType);1500416137;An alternative to {@link #fromController(Class)} for use with an instance_of this class created via a call to {@link #relativeTo}._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@since 4.2;public UriComponentsBuilder withController(Class<?> controllerType) {_		return fromController(this.baseUrl, controllerType)__	};an,alternative,to,link,from,controller,class,for,use,with,an,instance,of,this,class,created,via,a,call,to,link,relative,to,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,since,4,2;public,uri,components,builder,with,controller,class,controller,type,return,from,controller,this,base,url,controller,type
MvcUriComponentsBuilder -> public UriComponentsBuilder withController(Class<?> controllerType);1506097334;An alternative to {@link #fromController(Class)} for use with an instance_of this class created via a call to {@link #relativeTo}._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@since 4.2;public UriComponentsBuilder withController(Class<?> controllerType) {_		return fromController(this.baseUrl, controllerType)__	};an,alternative,to,link,from,controller,class,for,use,with,an,instance,of,this,class,created,via,a,call,to,link,relative,to,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,since,4,2;public,uri,components,builder,with,controller,class,controller,type,return,from,controller,this,base,url,controller,type
MvcUriComponentsBuilder -> public UriComponentsBuilder withController(Class<?> controllerType);1518770299;An alternative to {@link #fromController(Class)} for use with an instance_of this class created via a call to {@link #relativeTo}._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@since 4.2;public UriComponentsBuilder withController(Class<?> controllerType) {_		return fromController(this.baseUrl, controllerType)__	};an,alternative,to,link,from,controller,class,for,use,with,an,instance,of,this,class,created,via,a,call,to,link,relative,to,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,since,4,2;public,uri,components,builder,with,controller,class,controller,type,return,from,controller,this,base,url,controller,type
MvcUriComponentsBuilder -> public UriComponentsBuilder withController(Class<?> controllerType);1522354261;An alternative to {@link #fromController(Class)} for use with an instance_of this class created via a call to {@link #relativeTo}._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@since 4.2;public UriComponentsBuilder withController(Class<?> controllerType) {_		return fromController(this.baseUrl, controllerType)__	};an,alternative,to,link,from,controller,class,for,use,with,an,instance,of,this,class,created,via,a,call,to,link,relative,to,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,since,4,2;public,uri,components,builder,with,controller,class,controller,type,return,from,controller,this,base,url,controller,type
MvcUriComponentsBuilder -> public UriComponentsBuilder withController(Class<?> controllerType);1523455554;An alternative to {@link #fromController(Class)} for use with an instance_of this class created via a call to {@link #relativeTo}._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@since 4.2;public UriComponentsBuilder withController(Class<?> controllerType) {_		return fromController(this.baseUrl, controllerType)__	};an,alternative,to,link,from,controller,class,for,use,with,an,instance,of,this,class,created,via,a,call,to,link,relative,to,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,since,4,2;public,uri,components,builder,with,controller,class,controller,type,return,from,controller,this,base,url,controller,type
MvcUriComponentsBuilder -> public UriComponentsBuilder withController(Class<?> controllerType);1529028426;An alternative to {@link #fromController(Class)} for use with an instance_of this class created via a call to {@link #relativeTo}._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@since 4.2;public UriComponentsBuilder withController(Class<?> controllerType) {_		return fromController(this.baseUrl, controllerType)__	};an,alternative,to,link,from,controller,class,for,use,with,an,instance,of,this,class,created,via,a,call,to,link,relative,to,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,since,4,2;public,uri,components,builder,with,controller,class,controller,type,return,from,controller,this,base,url,controller,type
MvcUriComponentsBuilder -> public UriComponentsBuilder withController(Class<?> controllerType);1529028426;An alternative to {@link #fromController(Class)} for use with an instance_of this class created via a call to {@link #relativeTo}._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@since 4.2;public UriComponentsBuilder withController(Class<?> controllerType) {_		return fromController(this.baseUrl, controllerType)__	};an,alternative,to,link,from,controller,class,for,use,with,an,instance,of,this,class,created,via,a,call,to,link,relative,to,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,since,4,2;public,uri,components,builder,with,controller,class,controller,type,return,from,controller,this,base,url,controller,type
MvcUriComponentsBuilder -> public UriComponentsBuilder withController(Class<?> controllerType);1529028713;An alternative to {@link #fromController(Class)} for use with an instance_of this class created via a call to {@link #relativeTo}._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@since 4.2;public UriComponentsBuilder withController(Class<?> controllerType) {_		return fromController(this.baseUrl, controllerType)__	};an,alternative,to,link,from,controller,class,for,use,with,an,instance,of,this,class,created,via,a,call,to,link,relative,to,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,since,4,2;public,uri,components,builder,with,controller,class,controller,type,return,from,controller,this,base,url,controller,type
MvcUriComponentsBuilder -> public UriComponentsBuilder withController(Class<?> controllerType);1529361191;An alternative to {@link #fromController(Class)} for use with an instance_of this class created via a call to {@link #relativeTo}._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@since 4.2;public UriComponentsBuilder withController(Class<?> controllerType) {_		return fromController(this.baseUrl, controllerType)__	};an,alternative,to,link,from,controller,class,for,use,with,an,instance,of,this,class,created,via,a,call,to,link,relative,to,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,since,4,2;public,uri,components,builder,with,controller,class,controller,type,return,from,controller,this,base,url,controller,type
MvcUriComponentsBuilder -> public UriComponentsBuilder withController(Class<?> controllerType);1530174524;An alternative to {@link #fromController(Class)} for use with an instance_of this class created via a call to {@link #relativeTo}._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@since 4.2;public UriComponentsBuilder withController(Class<?> controllerType) {_		return fromController(this.baseUrl, controllerType)__	};an,alternative,to,link,from,controller,class,for,use,with,an,instance,of,this,class,created,via,a,call,to,link,relative,to,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,since,4,2;public,uri,components,builder,with,controller,class,controller,type,return,from,controller,this,base,url,controller,type
MvcUriComponentsBuilder -> public UriComponentsBuilder withController(Class<?> controllerType);1532041662;An alternative to {@link #fromController(Class)} for use with an instance_of this class created via a call to {@link #relativeTo}._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@since 4.2;public UriComponentsBuilder withController(Class<?> controllerType) {_		return fromController(this.baseUrl, controllerType)__	};an,alternative,to,link,from,controller,class,for,use,with,an,instance,of,this,class,created,via,a,call,to,link,relative,to,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,since,4,2;public,uri,components,builder,with,controller,class,controller,type,return,from,controller,this,base,url,controller,type
MvcUriComponentsBuilder -> public UriComponentsBuilder withController(Class<?> controllerType);1532041662;An alternative to {@link #fromController(Class)} for use with an instance_of this class created via a call to {@link #relativeTo}._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@since 4.2;public UriComponentsBuilder withController(Class<?> controllerType) {_		return fromController(this.baseUrl, controllerType)__	};an,alternative,to,link,from,controller,class,for,use,with,an,instance,of,this,class,created,via,a,call,to,link,relative,to,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,since,4,2;public,uri,components,builder,with,controller,class,controller,type,return,from,controller,this,base,url,controller,type
MvcUriComponentsBuilder -> public UriComponentsBuilder withController(Class<?> controllerType);1548943222;An alternative to {@link #fromController(Class)} for use with an instance_of this class created via a call to {@link #relativeTo}._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@since 4.2;public UriComponentsBuilder withController(Class<?> controllerType) {_		return fromController(this.baseUrl, controllerType)__	};an,alternative,to,link,from,controller,class,for,use,with,an,instance,of,this,class,created,via,a,call,to,link,relative,to,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,since,4,2;public,uri,components,builder,with,controller,class,controller,type,return,from,controller,this,base,url,controller,type
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodName(Class<?> controllerType, 			String methodName, Object... args);1431975386;Create a {@link UriComponentsBuilder} from the mapping of a controller_method and an array of method argument values. This method delegates_to {@link #fromMethod(java.lang.reflect.Method, Object...)}._@param controllerType the controller_@param methodName the method name_@param args the argument values_@return a UriComponentsBuilder instance, never {@code null}_@throws IllegalArgumentException if there is no matching or_if there is more than one matching method;public static UriComponentsBuilder fromMethodName(Class<?> controllerType,_			String methodName, Object... args) {__		Method method = getMethod(controllerType, methodName, args)__		return fromMethodInternal(null, controllerType, method, args)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,method,and,an,array,of,method,argument,values,this,method,delegates,to,link,from,method,java,lang,reflect,method,object,param,controller,type,the,controller,param,method,name,the,method,name,param,args,the,argument,values,return,a,uri,components,builder,instance,never,code,null,throws,illegal,argument,exception,if,there,is,no,matching,or,if,there,is,more,than,one,matching,method;public,static,uri,components,builder,from,method,name,class,controller,type,string,method,name,object,args,method,method,get,method,controller,type,method,name,args,return,from,method,internal,null,controller,type,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodName(Class<?> controllerType, 			String methodName, Object... args);1432125256;Create a {@link UriComponentsBuilder} from the mapping of a controller_method and an array of method argument values. This method delegates_to {@link #fromMethod(java.lang.reflect.Method, Object...)}._@param controllerType the controller_@param methodName the method name_@param args the argument values_@return a UriComponentsBuilder instance, never {@code null}_@throws IllegalArgumentException if there is no matching or_if there is more than one matching method;public static UriComponentsBuilder fromMethodName(Class<?> controllerType,_			String methodName, Object... args) {__		Method method = getMethod(controllerType, methodName, args)__		return fromMethodInternal(null, controllerType, method, args)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,method,and,an,array,of,method,argument,values,this,method,delegates,to,link,from,method,java,lang,reflect,method,object,param,controller,type,the,controller,param,method,name,the,method,name,param,args,the,argument,values,return,a,uri,components,builder,instance,never,code,null,throws,illegal,argument,exception,if,there,is,no,matching,or,if,there,is,more,than,one,matching,method;public,static,uri,components,builder,from,method,name,class,controller,type,string,method,name,object,args,method,method,get,method,controller,type,method,name,args,return,from,method,internal,null,controller,type,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodName(Class<?> controllerType, 			String methodName, Object... args);1432156007;Create a {@link UriComponentsBuilder} from the mapping of a controller_method and an array of method argument values. This method delegates_to {@link #fromMethod(java.lang.reflect.Method, Object...)}._@param controllerType the controller_@param methodName the method name_@param args the argument values_@return a UriComponentsBuilder instance, never {@code null}_@throws IllegalArgumentException if there is no matching or_if there is more than one matching method;public static UriComponentsBuilder fromMethodName(Class<?> controllerType,_			String methodName, Object... args) {__		Method method = getMethod(controllerType, methodName, args)__		return fromMethodInternal(null, controllerType, method, args)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,method,and,an,array,of,method,argument,values,this,method,delegates,to,link,from,method,java,lang,reflect,method,object,param,controller,type,the,controller,param,method,name,the,method,name,param,args,the,argument,values,return,a,uri,components,builder,instance,never,code,null,throws,illegal,argument,exception,if,there,is,no,matching,or,if,there,is,more,than,one,matching,method;public,static,uri,components,builder,from,method,name,class,controller,type,string,method,name,object,args,method,method,get,method,controller,type,method,name,args,return,from,method,internal,null,controller,type,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodName(Class<?> controllerType, 			String methodName, Object... args);1432856630;Create a {@link UriComponentsBuilder} from the mapping of a controller_method and an array of method argument values. This method delegates_to {@link #fromMethod(java.lang.reflect.Method, Object...)}._@param controllerType the controller_@param methodName the method name_@param args the argument values_@return a UriComponentsBuilder instance, never {@code null}_@throws IllegalArgumentException if there is no matching or_if there is more than one matching method;public static UriComponentsBuilder fromMethodName(Class<?> controllerType,_			String methodName, Object... args) {__		Method method = getMethod(controllerType, methodName, args)__		return fromMethodInternal(null, controllerType, method, args)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,method,and,an,array,of,method,argument,values,this,method,delegates,to,link,from,method,java,lang,reflect,method,object,param,controller,type,the,controller,param,method,name,the,method,name,param,args,the,argument,values,return,a,uri,components,builder,instance,never,code,null,throws,illegal,argument,exception,if,there,is,no,matching,or,if,there,is,more,than,one,matching,method;public,static,uri,components,builder,from,method,name,class,controller,type,string,method,name,object,args,method,method,get,method,controller,type,method,name,args,return,from,method,internal,null,controller,type,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodName(Class<?> controllerType, 			String methodName, Object... args);1432857824;Create a {@link UriComponentsBuilder} from the mapping of a controller_method and an array of method argument values. This method delegates_to {@link #fromMethod(java.lang.reflect.Method, Object...)}._@param controllerType the controller_@param methodName the method name_@param args the argument values_@return a UriComponentsBuilder instance, never {@code null}_@throws IllegalArgumentException if there is no matching or_if there is more than one matching method;public static UriComponentsBuilder fromMethodName(Class<?> controllerType,_			String methodName, Object... args) {__		Method method = getMethod(controllerType, methodName, args)__		return fromMethodInternal(null, controllerType, method, args)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,method,and,an,array,of,method,argument,values,this,method,delegates,to,link,from,method,java,lang,reflect,method,object,param,controller,type,the,controller,param,method,name,the,method,name,param,args,the,argument,values,return,a,uri,components,builder,instance,never,code,null,throws,illegal,argument,exception,if,there,is,no,matching,or,if,there,is,more,than,one,matching,method;public,static,uri,components,builder,from,method,name,class,controller,type,string,method,name,object,args,method,method,get,method,controller,type,method,name,args,return,from,method,internal,null,controller,type,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodName(Class<?> controllerType, 			String methodName, Object... args);1434234880;Create a {@link UriComponentsBuilder} from the mapping of a controller_method and an array of method argument values. This method delegates_to {@link #fromMethod(java.lang.reflect.Method, Object...)}._@param controllerType the controller_@param methodName the method name_@param args the argument values_@return a UriComponentsBuilder instance, never {@code null}_@throws IllegalArgumentException if there is no matching or_if there is more than one matching method;public static UriComponentsBuilder fromMethodName(Class<?> controllerType,_			String methodName, Object... args) {__		Method method = getMethod(controllerType, methodName, args)__		return fromMethodInternal(null, controllerType, method, args)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,method,and,an,array,of,method,argument,values,this,method,delegates,to,link,from,method,java,lang,reflect,method,object,param,controller,type,the,controller,param,method,name,the,method,name,param,args,the,argument,values,return,a,uri,components,builder,instance,never,code,null,throws,illegal,argument,exception,if,there,is,no,matching,or,if,there,is,more,than,one,matching,method;public,static,uri,components,builder,from,method,name,class,controller,type,string,method,name,object,args,method,method,get,method,controller,type,method,name,args,return,from,method,internal,null,controller,type,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodName(Class<?> controllerType, 			String methodName, Object... args);1434484897;Create a {@link UriComponentsBuilder} from the mapping of a controller_method and an array of method argument values. This method delegates_to {@link #fromMethod(java.lang.reflect.Method, Object...)}._@param controllerType the controller_@param methodName the method name_@param args the argument values_@return a UriComponentsBuilder instance, never {@code null}_@throws IllegalArgumentException if there is no matching or_if there is more than one matching method;public static UriComponentsBuilder fromMethodName(Class<?> controllerType,_			String methodName, Object... args) {__		Method method = getMethod(controllerType, methodName, args)__		return fromMethodInternal(null, controllerType, method, args)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,method,and,an,array,of,method,argument,values,this,method,delegates,to,link,from,method,java,lang,reflect,method,object,param,controller,type,the,controller,param,method,name,the,method,name,param,args,the,argument,values,return,a,uri,components,builder,instance,never,code,null,throws,illegal,argument,exception,if,there,is,no,matching,or,if,there,is,more,than,one,matching,method;public,static,uri,components,builder,from,method,name,class,controller,type,string,method,name,object,args,method,method,get,method,controller,type,method,name,args,return,from,method,internal,null,controller,type,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodName(Class<?> controllerType, 			String methodName, Object... args);1434726592;Create a {@link UriComponentsBuilder} from the mapping of a controller_method and an array of method argument values. This method delegates_to {@link #fromMethod(java.lang.reflect.Method, Object...)}._@param controllerType the controller_@param methodName the method name_@param args the argument values_@return a UriComponentsBuilder instance, never {@code null}_@throws IllegalArgumentException if there is no matching or_if there is more than one matching method;public static UriComponentsBuilder fromMethodName(Class<?> controllerType,_			String methodName, Object... args) {__		Method method = getMethod(controllerType, methodName, args)__		return fromMethodInternal(null, controllerType, method, args)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,method,and,an,array,of,method,argument,values,this,method,delegates,to,link,from,method,java,lang,reflect,method,object,param,controller,type,the,controller,param,method,name,the,method,name,param,args,the,argument,values,return,a,uri,components,builder,instance,never,code,null,throws,illegal,argument,exception,if,there,is,no,matching,or,if,there,is,more,than,one,matching,method;public,static,uri,components,builder,from,method,name,class,controller,type,string,method,name,object,args,method,method,get,method,controller,type,method,name,args,return,from,method,internal,null,controller,type,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodName(Class<?> controllerType, 			String methodName, Object... args);1435615322;Create a {@link UriComponentsBuilder} from the mapping of a controller_method and an array of method argument values. This method delegates_to {@link #fromMethod(java.lang.reflect.Method, Object...)}._@param controllerType the controller_@param methodName the method name_@param args the argument values_@return a UriComponentsBuilder instance, never {@code null}_@throws IllegalArgumentException if there is no matching or_if there is more than one matching method;public static UriComponentsBuilder fromMethodName(Class<?> controllerType,_			String methodName, Object... args) {__		Method method = getMethod(controllerType, methodName, args)__		return fromMethodInternal(null, controllerType, method, args)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,method,and,an,array,of,method,argument,values,this,method,delegates,to,link,from,method,java,lang,reflect,method,object,param,controller,type,the,controller,param,method,name,the,method,name,param,args,the,argument,values,return,a,uri,components,builder,instance,never,code,null,throws,illegal,argument,exception,if,there,is,no,matching,or,if,there,is,more,than,one,matching,method;public,static,uri,components,builder,from,method,name,class,controller,type,string,method,name,object,args,method,method,get,method,controller,type,method,name,args,return,from,method,internal,null,controller,type,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodName(Class<?> controllerType, 			String methodName, Object... args);1439294371;Create a {@link UriComponentsBuilder} from the mapping of a controller_method and an array of method argument values. This method delegates_to {@link #fromMethod(java.lang.reflect.Method, Object...)}._@param controllerType the controller_@param methodName the method name_@param args the argument values_@return a UriComponentsBuilder instance, never {@code null}_@throws IllegalArgumentException if there is no matching or_if there is more than one matching method;public static UriComponentsBuilder fromMethodName(Class<?> controllerType,_			String methodName, Object... args) {__		Method method = getMethod(controllerType, methodName, args)__		return fromMethodInternal(null, controllerType, method, args)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,method,and,an,array,of,method,argument,values,this,method,delegates,to,link,from,method,java,lang,reflect,method,object,param,controller,type,the,controller,param,method,name,the,method,name,param,args,the,argument,values,return,a,uri,components,builder,instance,never,code,null,throws,illegal,argument,exception,if,there,is,no,matching,or,if,there,is,more,than,one,matching,method;public,static,uri,components,builder,from,method,name,class,controller,type,string,method,name,object,args,method,method,get,method,controller,type,method,name,args,return,from,method,internal,null,controller,type,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodName(Class<?> controllerType, 			String methodName, Object... args);1447077465;Create a {@link UriComponentsBuilder} from the mapping of a controller_method and an array of method argument values. This method delegates_to {@link #fromMethod(java.lang.reflect.Method, Object...)}._@param controllerType the controller_@param methodName the method name_@param args the argument values_@return a UriComponentsBuilder instance, never {@code null}_@throws IllegalArgumentException if there is no matching or_if there is more than one matching method;public static UriComponentsBuilder fromMethodName(Class<?> controllerType,_			String methodName, Object... args) {__		Method method = getMethod(controllerType, methodName, args)__		return fromMethodInternal(null, controllerType, method, args)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,method,and,an,array,of,method,argument,values,this,method,delegates,to,link,from,method,java,lang,reflect,method,object,param,controller,type,the,controller,param,method,name,the,method,name,param,args,the,argument,values,return,a,uri,components,builder,instance,never,code,null,throws,illegal,argument,exception,if,there,is,no,matching,or,if,there,is,more,than,one,matching,method;public,static,uri,components,builder,from,method,name,class,controller,type,string,method,name,object,args,method,method,get,method,controller,type,method,name,args,return,from,method,internal,null,controller,type,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodName(Class<?> controllerType, 			String methodName, Object... args);1458830024;Create a {@link UriComponentsBuilder} from the mapping of a controller_method and an array of method argument values. This method delegates_to {@link #fromMethod(java.lang.reflect.Method, Object...)}._@param controllerType the controller_@param methodName the method name_@param args the argument values_@return a UriComponentsBuilder instance, never {@code null}_@throws IllegalArgumentException if there is no matching or_if there is more than one matching method;public static UriComponentsBuilder fromMethodName(Class<?> controllerType,_			String methodName, Object... args) {__		Method method = getMethod(controllerType, methodName, args)__		return fromMethodInternal(null, controllerType, method, args)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,method,and,an,array,of,method,argument,values,this,method,delegates,to,link,from,method,java,lang,reflect,method,object,param,controller,type,the,controller,param,method,name,the,method,name,param,args,the,argument,values,return,a,uri,components,builder,instance,never,code,null,throws,illegal,argument,exception,if,there,is,no,matching,or,if,there,is,more,than,one,matching,method;public,static,uri,components,builder,from,method,name,class,controller,type,string,method,name,object,args,method,method,get,method,controller,type,method,name,args,return,from,method,internal,null,controller,type,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodName(Class<?> controllerType, 			String methodName, Object... args);1461047077;Create a {@link UriComponentsBuilder} from the mapping of a controller_method and an array of method argument values. This method delegates_to {@link #fromMethod(java.lang.reflect.Method, Object...)}._@param controllerType the controller_@param methodName the method name_@param args the argument values_@return a UriComponentsBuilder instance, never {@code null}_@throws IllegalArgumentException if there is no matching or_if there is more than one matching method;public static UriComponentsBuilder fromMethodName(Class<?> controllerType,_			String methodName, Object... args) {__		Method method = getMethod(controllerType, methodName, args)__		return fromMethodInternal(null, controllerType, method, args)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,method,and,an,array,of,method,argument,values,this,method,delegates,to,link,from,method,java,lang,reflect,method,object,param,controller,type,the,controller,param,method,name,the,method,name,param,args,the,argument,values,return,a,uri,components,builder,instance,never,code,null,throws,illegal,argument,exception,if,there,is,no,matching,or,if,there,is,more,than,one,matching,method;public,static,uri,components,builder,from,method,name,class,controller,type,string,method,name,object,args,method,method,get,method,controller,type,method,name,args,return,from,method,internal,null,controller,type,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodName(Class<?> controllerType, 			String methodName, Object... args);1467677340;Create a {@link UriComponentsBuilder} from the mapping of a controller_method and an array of method argument values. This method delegates_to {@link #fromMethod(java.lang.reflect.Method, Object...)}._@param controllerType the controller_@param methodName the method name_@param args the argument values_@return a UriComponentsBuilder instance, never {@code null}_@throws IllegalArgumentException if there is no matching or_if there is more than one matching method;public static UriComponentsBuilder fromMethodName(Class<?> controllerType,_			String methodName, Object... args) {__		Method method = getMethod(controllerType, methodName, args)__		return fromMethodInternal(null, controllerType, method, args)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,method,and,an,array,of,method,argument,values,this,method,delegates,to,link,from,method,java,lang,reflect,method,object,param,controller,type,the,controller,param,method,name,the,method,name,param,args,the,argument,values,return,a,uri,components,builder,instance,never,code,null,throws,illegal,argument,exception,if,there,is,no,matching,or,if,there,is,more,than,one,matching,method;public,static,uri,components,builder,from,method,name,class,controller,type,string,method,name,object,args,method,method,get,method,controller,type,method,name,args,return,from,method,internal,null,controller,type,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodName(Class<?> controllerType, 			String methodName, Object... args);1467726769;Create a {@link UriComponentsBuilder} from the mapping of a controller_method and an array of method argument values. This method delegates_to {@link #fromMethod(java.lang.reflect.Method, Object...)}._@param controllerType the controller_@param methodName the method name_@param args the argument values_@return a UriComponentsBuilder instance, never {@code null}_@throws IllegalArgumentException if there is no matching or_if there is more than one matching method;public static UriComponentsBuilder fromMethodName(Class<?> controllerType,_			String methodName, Object... args) {__		Method method = getMethod(controllerType, methodName, args)__		return fromMethodInternal(null, controllerType, method, args)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,method,and,an,array,of,method,argument,values,this,method,delegates,to,link,from,method,java,lang,reflect,method,object,param,controller,type,the,controller,param,method,name,the,method,name,param,args,the,argument,values,return,a,uri,components,builder,instance,never,code,null,throws,illegal,argument,exception,if,there,is,no,matching,or,if,there,is,more,than,one,matching,method;public,static,uri,components,builder,from,method,name,class,controller,type,string,method,name,object,args,method,method,get,method,controller,type,method,name,args,return,from,method,internal,null,controller,type,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodName(Class<?> controllerType, 			String methodName, Object... args);1467730834;Create a {@link UriComponentsBuilder} from the mapping of a controller_method and an array of method argument values. This method delegates_to {@link #fromMethod(java.lang.reflect.Method, Object...)}._@param controllerType the controller_@param methodName the method name_@param args the argument values_@return a UriComponentsBuilder instance, never {@code null}_@throws IllegalArgumentException if there is no matching or_if there is more than one matching method;public static UriComponentsBuilder fromMethodName(Class<?> controllerType,_			String methodName, Object... args) {__		Method method = getMethod(controllerType, methodName, args)__		return fromMethodInternal(null, controllerType, method, args)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,method,and,an,array,of,method,argument,values,this,method,delegates,to,link,from,method,java,lang,reflect,method,object,param,controller,type,the,controller,param,method,name,the,method,name,param,args,the,argument,values,return,a,uri,components,builder,instance,never,code,null,throws,illegal,argument,exception,if,there,is,no,matching,or,if,there,is,more,than,one,matching,method;public,static,uri,components,builder,from,method,name,class,controller,type,string,method,name,object,args,method,method,get,method,controller,type,method,name,args,return,from,method,internal,null,controller,type,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodName(Class<?> controllerType, 			String methodName, Object... args);1467846264;Create a {@link UriComponentsBuilder} from the mapping of a controller_method and an array of method argument values. This method delegates_to {@link #fromMethod(java.lang.reflect.Method, Object...)}._@param controllerType the controller_@param methodName the method name_@param args the argument values_@return a UriComponentsBuilder instance, never {@code null}_@throws IllegalArgumentException if there is no matching or_if there is more than one matching method;public static UriComponentsBuilder fromMethodName(Class<?> controllerType,_			String methodName, Object... args) {__		Method method = getMethod(controllerType, methodName, args)__		return fromMethodInternal(null, controllerType, method, args)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,method,and,an,array,of,method,argument,values,this,method,delegates,to,link,from,method,java,lang,reflect,method,object,param,controller,type,the,controller,param,method,name,the,method,name,param,args,the,argument,values,return,a,uri,components,builder,instance,never,code,null,throws,illegal,argument,exception,if,there,is,no,matching,or,if,there,is,more,than,one,matching,method;public,static,uri,components,builder,from,method,name,class,controller,type,string,method,name,object,args,method,method,get,method,controller,type,method,name,args,return,from,method,internal,null,controller,type,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodName(Class<?> controllerType, 			String methodName, Object... args);1468613531;Create a {@link UriComponentsBuilder} from the mapping of a controller_method and an array of method argument values. This method delegates_to {@link #fromMethod(Class, Method, Object...)}._@param controllerType the controller_@param methodName the method name_@param args the argument values_@return a UriComponentsBuilder instance, never {@code null}_@throws IllegalArgumentException if there is no matching or_if there is more than one matching method;public static UriComponentsBuilder fromMethodName(Class<?> controllerType,_			String methodName, Object... args) {__		Method method = getMethod(controllerType, methodName, args)__		return fromMethodInternal(null, controllerType, method, args)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,method,and,an,array,of,method,argument,values,this,method,delegates,to,link,from,method,class,method,object,param,controller,type,the,controller,param,method,name,the,method,name,param,args,the,argument,values,return,a,uri,components,builder,instance,never,code,null,throws,illegal,argument,exception,if,there,is,no,matching,or,if,there,is,more,than,one,matching,method;public,static,uri,components,builder,from,method,name,class,controller,type,string,method,name,object,args,method,method,get,method,controller,type,method,name,args,return,from,method,internal,null,controller,type,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodName(Class<?> controllerType, 			String methodName, Object... args);1468948866;Create a {@link UriComponentsBuilder} from the mapping of a controller_method and an array of method argument values. This method delegates_to {@link #fromMethod(Class, Method, Object...)}._@param controllerType the controller_@param methodName the method name_@param args the argument values_@return a UriComponentsBuilder instance, never {@code null}_@throws IllegalArgumentException if there is no matching or_if there is more than one matching method;public static UriComponentsBuilder fromMethodName(Class<?> controllerType,_			String methodName, Object... args) {__		Method method = getMethod(controllerType, methodName, args)__		return fromMethodInternal(null, controllerType, method, args)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,method,and,an,array,of,method,argument,values,this,method,delegates,to,link,from,method,class,method,object,param,controller,type,the,controller,param,method,name,the,method,name,param,args,the,argument,values,return,a,uri,components,builder,instance,never,code,null,throws,illegal,argument,exception,if,there,is,no,matching,or,if,there,is,more,than,one,matching,method;public,static,uri,components,builder,from,method,name,class,controller,type,string,method,name,object,args,method,method,get,method,controller,type,method,name,args,return,from,method,internal,null,controller,type,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodName(Class<?> controllerType, 			String methodName, Object... args);1485810955;Create a {@link UriComponentsBuilder} from the mapping of a controller_method and an array of method argument values. This method delegates_to {@link #fromMethod(Class, Method, Object...)}._@param controllerType the controller_@param methodName the method name_@param args the argument values_@return a UriComponentsBuilder instance, never {@code null}_@throws IllegalArgumentException if there is no matching or_if there is more than one matching method;public static UriComponentsBuilder fromMethodName(Class<?> controllerType,_			String methodName, Object... args) {__		Method method = getMethod(controllerType, methodName, args)__		return fromMethodInternal(null, controllerType, method, args)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,method,and,an,array,of,method,argument,values,this,method,delegates,to,link,from,method,class,method,object,param,controller,type,the,controller,param,method,name,the,method,name,param,args,the,argument,values,return,a,uri,components,builder,instance,never,code,null,throws,illegal,argument,exception,if,there,is,no,matching,or,if,there,is,more,than,one,matching,method;public,static,uri,components,builder,from,method,name,class,controller,type,string,method,name,object,args,method,method,get,method,controller,type,method,name,args,return,from,method,internal,null,controller,type,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodName(Class<?> controllerType, 			String methodName, Object... args);1486634978;Create a {@link UriComponentsBuilder} from the mapping of a controller_method and an array of method argument values. This method delegates_to {@link #fromMethod(Class, Method, Object...)}._@param controllerType the controller_@param methodName the method name_@param args the argument values_@return a UriComponentsBuilder instance, never {@code null}_@throws IllegalArgumentException if there is no matching or_if there is more than one matching method;public static UriComponentsBuilder fromMethodName(Class<?> controllerType,_			String methodName, Object... args) {__		Method method = getMethod(controllerType, methodName, args)__		return fromMethodInternal(null, controllerType, method, args)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,method,and,an,array,of,method,argument,values,this,method,delegates,to,link,from,method,class,method,object,param,controller,type,the,controller,param,method,name,the,method,name,param,args,the,argument,values,return,a,uri,components,builder,instance,never,code,null,throws,illegal,argument,exception,if,there,is,no,matching,or,if,there,is,more,than,one,matching,method;public,static,uri,components,builder,from,method,name,class,controller,type,string,method,name,object,args,method,method,get,method,controller,type,method,name,args,return,from,method,internal,null,controller,type,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodName(Class<?> controllerType, 			String methodName, Object... args);1486635693;Create a {@link UriComponentsBuilder} from the mapping of a controller_method and an array of method argument values. This method delegates_to {@link #fromMethod(Class, Method, Object...)}._@param controllerType the controller_@param methodName the method name_@param args the argument values_@return a UriComponentsBuilder instance, never {@code null}_@throws IllegalArgumentException if there is no matching or_if there is more than one matching method;public static UriComponentsBuilder fromMethodName(Class<?> controllerType,_			String methodName, Object... args) {__		Method method = getMethod(controllerType, methodName, args)__		return fromMethodInternal(null, controllerType, method, args)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,method,and,an,array,of,method,argument,values,this,method,delegates,to,link,from,method,class,method,object,param,controller,type,the,controller,param,method,name,the,method,name,param,args,the,argument,values,return,a,uri,components,builder,instance,never,code,null,throws,illegal,argument,exception,if,there,is,no,matching,or,if,there,is,more,than,one,matching,method;public,static,uri,components,builder,from,method,name,class,controller,type,string,method,name,object,args,method,method,get,method,controller,type,method,name,args,return,from,method,internal,null,controller,type,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodName(Class<?> controllerType, 			String methodName, Object... args);1495868221;Create a {@link UriComponentsBuilder} from the mapping of a controller_method and an array of method argument values. This method delegates_to {@link #fromMethod(Class, Method, Object...)}._@param controllerType the controller_@param methodName the method name_@param args the argument values_@return a UriComponentsBuilder instance, never {@code null}_@throws IllegalArgumentException if there is no matching or_if there is more than one matching method;public static UriComponentsBuilder fromMethodName(Class<?> controllerType,_			String methodName, Object... args) {__		Method method = getMethod(controllerType, methodName, args)__		return fromMethodInternal(null, controllerType, method, args)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,method,and,an,array,of,method,argument,values,this,method,delegates,to,link,from,method,class,method,object,param,controller,type,the,controller,param,method,name,the,method,name,param,args,the,argument,values,return,a,uri,components,builder,instance,never,code,null,throws,illegal,argument,exception,if,there,is,no,matching,or,if,there,is,more,than,one,matching,method;public,static,uri,components,builder,from,method,name,class,controller,type,string,method,name,object,args,method,method,get,method,controller,type,method,name,args,return,from,method,internal,null,controller,type,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodName(Class<?> controllerType, 			String methodName, Object... args);1496242568;Create a {@link UriComponentsBuilder} from the mapping of a controller_method and an array of method argument values. This method delegates_to {@link #fromMethod(Class, Method, Object...)}._@param controllerType the controller_@param methodName the method name_@param args the argument values_@return a UriComponentsBuilder instance, never {@code null}_@throws IllegalArgumentException if there is no matching or_if there is more than one matching method;public static UriComponentsBuilder fromMethodName(Class<?> controllerType,_			String methodName, Object... args) {__		Method method = getMethod(controllerType, methodName, args)__		return fromMethodInternal(null, controllerType, method, args)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,method,and,an,array,of,method,argument,values,this,method,delegates,to,link,from,method,class,method,object,param,controller,type,the,controller,param,method,name,the,method,name,param,args,the,argument,values,return,a,uri,components,builder,instance,never,code,null,throws,illegal,argument,exception,if,there,is,no,matching,or,if,there,is,more,than,one,matching,method;public,static,uri,components,builder,from,method,name,class,controller,type,string,method,name,object,args,method,method,get,method,controller,type,method,name,args,return,from,method,internal,null,controller,type,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodName(Class<?> controllerType, 			String methodName, Object... args);1496259743;Create a {@link UriComponentsBuilder} from the mapping of a controller_method and an array of method argument values. This method delegates_to {@link #fromMethod(Class, Method, Object...)}._@param controllerType the controller_@param methodName the method name_@param args the argument values_@return a UriComponentsBuilder instance, never {@code null}_@throws IllegalArgumentException if there is no matching or_if there is more than one matching method;public static UriComponentsBuilder fromMethodName(Class<?> controllerType,_			String methodName, Object... args) {__		Method method = getMethod(controllerType, methodName, args)__		return fromMethodInternal(null, controllerType, method, args)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,method,and,an,array,of,method,argument,values,this,method,delegates,to,link,from,method,class,method,object,param,controller,type,the,controller,param,method,name,the,method,name,param,args,the,argument,values,return,a,uri,components,builder,instance,never,code,null,throws,illegal,argument,exception,if,there,is,no,matching,or,if,there,is,more,than,one,matching,method;public,static,uri,components,builder,from,method,name,class,controller,type,string,method,name,object,args,method,method,get,method,controller,type,method,name,args,return,from,method,internal,null,controller,type,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodName(Class<?> controllerType, 			String methodName, Object... args);1496370972;Create a {@link UriComponentsBuilder} from the mapping of a controller_method and an array of method argument values. This method delegates_to {@link #fromMethod(Class, Method, Object...)}._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param controllerType the controller_@param methodName the method name_@param args the argument values_@return a UriComponentsBuilder instance, never {@code null}_@throws IllegalArgumentException if there is no matching or_if there is more than one matching method;public static UriComponentsBuilder fromMethodName(Class<?> controllerType,_			String methodName, Object... args) {__		Method method = getMethod(controllerType, methodName, args)__		return fromMethodInternal(null, controllerType, method, args)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,method,and,an,array,of,method,argument,values,this,method,delegates,to,link,from,method,class,method,object,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,controller,type,the,controller,param,method,name,the,method,name,param,args,the,argument,values,return,a,uri,components,builder,instance,never,code,null,throws,illegal,argument,exception,if,there,is,no,matching,or,if,there,is,more,than,one,matching,method;public,static,uri,components,builder,from,method,name,class,controller,type,string,method,name,object,args,method,method,get,method,controller,type,method,name,args,return,from,method,internal,null,controller,type,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodName(Class<?> controllerType, 			String methodName, Object... args);1496837955;Create a {@link UriComponentsBuilder} from the mapping of a controller_method and an array of method argument values. This method delegates_to {@link #fromMethod(Class, Method, Object...)}._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param controllerType the controller_@param methodName the method name_@param args the argument values_@return a UriComponentsBuilder instance, never {@code null}_@throws IllegalArgumentException if there is no matching or_if there is more than one matching method;public static UriComponentsBuilder fromMethodName(Class<?> controllerType,_			String methodName, Object... args) {__		Method method = getMethod(controllerType, methodName, args)__		return fromMethodInternal(null, controllerType, method, args)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,method,and,an,array,of,method,argument,values,this,method,delegates,to,link,from,method,class,method,object,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,controller,type,the,controller,param,method,name,the,method,name,param,args,the,argument,values,return,a,uri,components,builder,instance,never,code,null,throws,illegal,argument,exception,if,there,is,no,matching,or,if,there,is,more,than,one,matching,method;public,static,uri,components,builder,from,method,name,class,controller,type,string,method,name,object,args,method,method,get,method,controller,type,method,name,args,return,from,method,internal,null,controller,type,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodName(Class<?> controllerType, 			String methodName, Object... args);1497341397;Create a {@link UriComponentsBuilder} from the mapping of a controller_method and an array of method argument values. This method delegates_to {@link #fromMethod(Class, Method, Object...)}._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param controllerType the controller_@param methodName the method name_@param args the argument values_@return a UriComponentsBuilder instance, never {@code null}_@throws IllegalArgumentException if there is no matching or_if there is more than one matching method;public static UriComponentsBuilder fromMethodName(Class<?> controllerType,_			String methodName, Object... args) {__		Method method = getMethod(controllerType, methodName, args)__		return fromMethodInternal(null, controllerType, method, args)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,method,and,an,array,of,method,argument,values,this,method,delegates,to,link,from,method,class,method,object,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,controller,type,the,controller,param,method,name,the,method,name,param,args,the,argument,values,return,a,uri,components,builder,instance,never,code,null,throws,illegal,argument,exception,if,there,is,no,matching,or,if,there,is,more,than,one,matching,method;public,static,uri,components,builder,from,method,name,class,controller,type,string,method,name,object,args,method,method,get,method,controller,type,method,name,args,return,from,method,internal,null,controller,type,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodName(Class<?> controllerType, 			String methodName, Object... args);1498780456;Create a {@link UriComponentsBuilder} from the mapping of a controller_method and an array of method argument values. This method delegates_to {@link #fromMethod(Class, Method, Object...)}._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param controllerType the controller_@param methodName the method name_@param args the argument values_@return a UriComponentsBuilder instance, never {@code null}_@throws IllegalArgumentException if there is no matching or_if there is more than one matching method;public static UriComponentsBuilder fromMethodName(Class<?> controllerType,_			String methodName, Object... args) {__		Method method = getMethod(controllerType, methodName, args)__		return fromMethodInternal(null, controllerType, method, args)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,method,and,an,array,of,method,argument,values,this,method,delegates,to,link,from,method,class,method,object,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,controller,type,the,controller,param,method,name,the,method,name,param,args,the,argument,values,return,a,uri,components,builder,instance,never,code,null,throws,illegal,argument,exception,if,there,is,no,matching,or,if,there,is,more,than,one,matching,method;public,static,uri,components,builder,from,method,name,class,controller,type,string,method,name,object,args,method,method,get,method,controller,type,method,name,args,return,from,method,internal,null,controller,type,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodName(Class<?> controllerType, 			String methodName, Object... args);1500416137;Create a {@link UriComponentsBuilder} from the mapping of a controller_method and an array of method argument values. This method delegates_to {@link #fromMethod(Class, Method, Object...)}._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param controllerType the controller_@param methodName the method name_@param args the argument values_@return a UriComponentsBuilder instance, never {@code null}_@throws IllegalArgumentException if there is no matching or_if there is more than one matching method;public static UriComponentsBuilder fromMethodName(Class<?> controllerType,_			String methodName, Object... args) {__		Method method = getMethod(controllerType, methodName, args)__		return fromMethodInternal(null, controllerType, method, args)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,method,and,an,array,of,method,argument,values,this,method,delegates,to,link,from,method,class,method,object,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,controller,type,the,controller,param,method,name,the,method,name,param,args,the,argument,values,return,a,uri,components,builder,instance,never,code,null,throws,illegal,argument,exception,if,there,is,no,matching,or,if,there,is,more,than,one,matching,method;public,static,uri,components,builder,from,method,name,class,controller,type,string,method,name,object,args,method,method,get,method,controller,type,method,name,args,return,from,method,internal,null,controller,type,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodName(Class<?> controllerType, 			String methodName, Object... args);1506097334;Create a {@link UriComponentsBuilder} from the mapping of a controller_method and an array of method argument values. This method delegates_to {@link #fromMethod(Class, Method, Object...)}._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param controllerType the controller_@param methodName the method name_@param args the argument values_@return a UriComponentsBuilder instance, never {@code null}_@throws IllegalArgumentException if there is no matching or_if there is more than one matching method;public static UriComponentsBuilder fromMethodName(Class<?> controllerType,_			String methodName, Object... args) {__		Method method = getMethod(controllerType, methodName, args)__		return fromMethodInternal(null, controllerType, method, args)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,method,and,an,array,of,method,argument,values,this,method,delegates,to,link,from,method,class,method,object,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,controller,type,the,controller,param,method,name,the,method,name,param,args,the,argument,values,return,a,uri,components,builder,instance,never,code,null,throws,illegal,argument,exception,if,there,is,no,matching,or,if,there,is,more,than,one,matching,method;public,static,uri,components,builder,from,method,name,class,controller,type,string,method,name,object,args,method,method,get,method,controller,type,method,name,args,return,from,method,internal,null,controller,type,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodName(Class<?> controllerType, 			String methodName, Object... args);1518770299;Create a {@link UriComponentsBuilder} from the mapping of a controller_method and an array of method argument values. This method delegates_to {@link #fromMethod(Class, Method, Object...)}._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param controllerType the controller_@param methodName the method name_@param args the argument values_@return a UriComponentsBuilder instance, never {@code null}_@throws IllegalArgumentException if there is no matching or_if there is more than one matching method;public static UriComponentsBuilder fromMethodName(Class<?> controllerType,_			String methodName, Object... args) {__		Method method = getMethod(controllerType, methodName, args)__		return fromMethodInternal(null, controllerType, method, args)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,method,and,an,array,of,method,argument,values,this,method,delegates,to,link,from,method,class,method,object,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,controller,type,the,controller,param,method,name,the,method,name,param,args,the,argument,values,return,a,uri,components,builder,instance,never,code,null,throws,illegal,argument,exception,if,there,is,no,matching,or,if,there,is,more,than,one,matching,method;public,static,uri,components,builder,from,method,name,class,controller,type,string,method,name,object,args,method,method,get,method,controller,type,method,name,args,return,from,method,internal,null,controller,type,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodName(Class<?> controllerType, 			String methodName, Object... args);1522354261;Create a {@link UriComponentsBuilder} from the mapping of a controller_method and an array of method argument values. This method delegates_to {@link #fromMethod(Class, Method, Object...)}._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param controllerType the controller_@param methodName the method name_@param args the argument values_@return a UriComponentsBuilder instance, never {@code null}_@throws IllegalArgumentException if there is no matching or_if there is more than one matching method;public static UriComponentsBuilder fromMethodName(Class<?> controllerType,_			String methodName, Object... args) {__		Method method = getMethod(controllerType, methodName, args)__		return fromMethodInternal(null, controllerType, method, args)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,method,and,an,array,of,method,argument,values,this,method,delegates,to,link,from,method,class,method,object,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,controller,type,the,controller,param,method,name,the,method,name,param,args,the,argument,values,return,a,uri,components,builder,instance,never,code,null,throws,illegal,argument,exception,if,there,is,no,matching,or,if,there,is,more,than,one,matching,method;public,static,uri,components,builder,from,method,name,class,controller,type,string,method,name,object,args,method,method,get,method,controller,type,method,name,args,return,from,method,internal,null,controller,type,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodName(Class<?> controllerType, 			String methodName, Object... args);1523455554;Create a {@link UriComponentsBuilder} from the mapping of a controller_method and an array of method argument values. This method delegates_to {@link #fromMethod(Class, Method, Object...)}._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param controllerType the controller_@param methodName the method name_@param args the argument values_@return a UriComponentsBuilder instance, never {@code null}_@throws IllegalArgumentException if there is no matching or_if there is more than one matching method;public static UriComponentsBuilder fromMethodName(Class<?> controllerType,_			String methodName, Object... args) {__		Method method = getMethod(controllerType, methodName, args)__		return fromMethodInternal(null, controllerType, method, args)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,method,and,an,array,of,method,argument,values,this,method,delegates,to,link,from,method,class,method,object,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,controller,type,the,controller,param,method,name,the,method,name,param,args,the,argument,values,return,a,uri,components,builder,instance,never,code,null,throws,illegal,argument,exception,if,there,is,no,matching,or,if,there,is,more,than,one,matching,method;public,static,uri,components,builder,from,method,name,class,controller,type,string,method,name,object,args,method,method,get,method,controller,type,method,name,args,return,from,method,internal,null,controller,type,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodName(Class<?> controllerType, 			String methodName, Object... args);1529028426;Create a {@link UriComponentsBuilder} from the mapping of a controller_method and an array of method argument values. This method delegates_to {@link #fromMethod(Class, Method, Object...)}._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param controllerType the controller_@param methodName the method name_@param args the argument values_@return a UriComponentsBuilder instance, never {@code null}_@throws IllegalArgumentException if there is no matching or_if there is more than one matching method;public static UriComponentsBuilder fromMethodName(Class<?> controllerType,_			String methodName, Object... args) {__		Method method = getMethod(controllerType, methodName, args)__		return fromMethodInternal(null, controllerType, method, args)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,method,and,an,array,of,method,argument,values,this,method,delegates,to,link,from,method,class,method,object,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,controller,type,the,controller,param,method,name,the,method,name,param,args,the,argument,values,return,a,uri,components,builder,instance,never,code,null,throws,illegal,argument,exception,if,there,is,no,matching,or,if,there,is,more,than,one,matching,method;public,static,uri,components,builder,from,method,name,class,controller,type,string,method,name,object,args,method,method,get,method,controller,type,method,name,args,return,from,method,internal,null,controller,type,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodName(Class<?> controllerType, 			String methodName, Object... args);1529028426;Create a {@link UriComponentsBuilder} from the mapping of a controller_method and an array of method argument values. This method delegates_to {@link #fromMethod(Class, Method, Object...)}._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param controllerType the controller_@param methodName the method name_@param args the argument values_@return a UriComponentsBuilder instance, never {@code null}_@throws IllegalArgumentException if there is no matching or_if there is more than one matching method;public static UriComponentsBuilder fromMethodName(Class<?> controllerType,_			String methodName, Object... args) {__		Method method = getMethod(controllerType, methodName, args)__		return fromMethodInternal(null, controllerType, method, args)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,method,and,an,array,of,method,argument,values,this,method,delegates,to,link,from,method,class,method,object,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,controller,type,the,controller,param,method,name,the,method,name,param,args,the,argument,values,return,a,uri,components,builder,instance,never,code,null,throws,illegal,argument,exception,if,there,is,no,matching,or,if,there,is,more,than,one,matching,method;public,static,uri,components,builder,from,method,name,class,controller,type,string,method,name,object,args,method,method,get,method,controller,type,method,name,args,return,from,method,internal,null,controller,type,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodName(Class<?> controllerType, 			String methodName, Object... args);1529028713;Create a {@link UriComponentsBuilder} from the mapping of a controller_method and an array of method argument values. This method delegates_to {@link #fromMethod(Class, Method, Object...)}._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param controllerType the controller_@param methodName the method name_@param args the argument values_@return a UriComponentsBuilder instance, never {@code null}_@throws IllegalArgumentException if there is no matching or_if there is more than one matching method;public static UriComponentsBuilder fromMethodName(Class<?> controllerType,_			String methodName, Object... args) {__		Method method = getMethod(controllerType, methodName, args)__		return fromMethodInternal(null, controllerType, method, args)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,method,and,an,array,of,method,argument,values,this,method,delegates,to,link,from,method,class,method,object,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,controller,type,the,controller,param,method,name,the,method,name,param,args,the,argument,values,return,a,uri,components,builder,instance,never,code,null,throws,illegal,argument,exception,if,there,is,no,matching,or,if,there,is,more,than,one,matching,method;public,static,uri,components,builder,from,method,name,class,controller,type,string,method,name,object,args,method,method,get,method,controller,type,method,name,args,return,from,method,internal,null,controller,type,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodName(Class<?> controllerType, 			String methodName, Object... args);1529361191;Create a {@link UriComponentsBuilder} from the mapping of a controller_method and an array of method argument values. This method delegates_to {@link #fromMethod(Class, Method, Object...)}._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param controllerType the controller_@param methodName the method name_@param args the argument values_@return a UriComponentsBuilder instance, never {@code null}_@throws IllegalArgumentException if there is no matching or_if there is more than one matching method;public static UriComponentsBuilder fromMethodName(Class<?> controllerType,_			String methodName, Object... args) {__		Method method = getMethod(controllerType, methodName, args)__		return fromMethodInternal(null, controllerType, method, args)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,method,and,an,array,of,method,argument,values,this,method,delegates,to,link,from,method,class,method,object,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,controller,type,the,controller,param,method,name,the,method,name,param,args,the,argument,values,return,a,uri,components,builder,instance,never,code,null,throws,illegal,argument,exception,if,there,is,no,matching,or,if,there,is,more,than,one,matching,method;public,static,uri,components,builder,from,method,name,class,controller,type,string,method,name,object,args,method,method,get,method,controller,type,method,name,args,return,from,method,internal,null,controller,type,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodName(Class<?> controllerType, 			String methodName, Object... args);1530174524;Create a {@link UriComponentsBuilder} from the mapping of a controller_method and an array of method argument values. This method delegates_to {@link #fromMethod(Class, Method, Object...)}._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param controllerType the controller_@param methodName the method name_@param args the argument values_@return a UriComponentsBuilder instance, never {@code null}_@throws IllegalArgumentException if there is no matching or_if there is more than one matching method;public static UriComponentsBuilder fromMethodName(Class<?> controllerType,_			String methodName, Object... args) {__		Method method = getMethod(controllerType, methodName, args)__		return fromMethodInternal(null, controllerType, method, args)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,method,and,an,array,of,method,argument,values,this,method,delegates,to,link,from,method,class,method,object,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,controller,type,the,controller,param,method,name,the,method,name,param,args,the,argument,values,return,a,uri,components,builder,instance,never,code,null,throws,illegal,argument,exception,if,there,is,no,matching,or,if,there,is,more,than,one,matching,method;public,static,uri,components,builder,from,method,name,class,controller,type,string,method,name,object,args,method,method,get,method,controller,type,method,name,args,return,from,method,internal,null,controller,type,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodName(Class<?> controllerType, 			String methodName, Object... args);1532041662;Create a {@link UriComponentsBuilder} from the mapping of a controller_method and an array of method argument values. This method delegates_to {@link #fromMethod(Class, Method, Object...)}._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param controllerType the controller_@param methodName the method name_@param args the argument values_@return a UriComponentsBuilder instance, never {@code null}_@throws IllegalArgumentException if there is no matching or_if there is more than one matching method;public static UriComponentsBuilder fromMethodName(Class<?> controllerType,_			String methodName, Object... args) {__		Method method = getMethod(controllerType, methodName, args)__		return fromMethodInternal(null, controllerType, method, args)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,method,and,an,array,of,method,argument,values,this,method,delegates,to,link,from,method,class,method,object,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,controller,type,the,controller,param,method,name,the,method,name,param,args,the,argument,values,return,a,uri,components,builder,instance,never,code,null,throws,illegal,argument,exception,if,there,is,no,matching,or,if,there,is,more,than,one,matching,method;public,static,uri,components,builder,from,method,name,class,controller,type,string,method,name,object,args,method,method,get,method,controller,type,method,name,args,return,from,method,internal,null,controller,type,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodName(Class<?> controllerType, 			String methodName, Object... args);1532041662;Create a {@link UriComponentsBuilder} from the mapping of a controller_method and an array of method argument values. This method delegates_to {@link #fromMethod(Class, Method, Object...)}._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param controllerType the controller_@param methodName the method name_@param args the argument values_@return a UriComponentsBuilder instance, never {@code null}_@throws IllegalArgumentException if there is no matching or_if there is more than one matching method;public static UriComponentsBuilder fromMethodName(Class<?> controllerType,_			String methodName, Object... args) {__		Method method = getMethod(controllerType, methodName, args)__		return fromMethodInternal(null, controllerType, method, args)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,method,and,an,array,of,method,argument,values,this,method,delegates,to,link,from,method,class,method,object,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,controller,type,the,controller,param,method,name,the,method,name,param,args,the,argument,values,return,a,uri,components,builder,instance,never,code,null,throws,illegal,argument,exception,if,there,is,no,matching,or,if,there,is,more,than,one,matching,method;public,static,uri,components,builder,from,method,name,class,controller,type,string,method,name,object,args,method,method,get,method,controller,type,method,name,args,return,from,method,internal,null,controller,type,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodName(Class<?> controllerType, 			String methodName, Object... args);1548943222;Create a {@link UriComponentsBuilder} from the mapping of a controller_method and an array of method argument values. This method delegates_to {@link #fromMethod(Class, Method, Object...)}._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param controllerType the controller_@param methodName the method name_@param args the argument values_@return a UriComponentsBuilder instance, never {@code null}_@throws IllegalArgumentException if there is no matching or_if there is more than one matching method;public static UriComponentsBuilder fromMethodName(Class<?> controllerType,_			String methodName, Object... args) {__		Method method = getMethod(controllerType, methodName, args)__		return fromMethodInternal(null, controllerType, method, args)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,method,and,an,array,of,method,argument,values,this,method,delegates,to,link,from,method,class,method,object,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,controller,type,the,controller,param,method,name,the,method,name,param,args,the,argument,values,return,a,uri,components,builder,instance,never,code,null,throws,illegal,argument,exception,if,there,is,no,matching,or,if,there,is,more,than,one,matching,method;public,static,uri,components,builder,from,method,name,class,controller,type,string,method,name,object,args,method,method,get,method,controller,type,method,name,args,return,from,method,internal,null,controller,type,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodCall(UriComponentsBuilder builder, Object invocationInfo);1426553101;An alternative to {@link #fromMethodCall(Object)} that accepts a_{@code UriComponentsBuilder} representing the base URL. This is useful_when using MvcUriComponentsBuilder outside the context of processing a_request or to apply a custom baseUrl not matching the current request._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param invocationInfo either the value returned from a "mock" controller_invocation or the "mock" controller itself after an invocation_@return a UriComponents instance;public static UriComponentsBuilder fromMethodCall(UriComponentsBuilder builder, Object invocationInfo) {_		Assert.isInstanceOf(MethodInvocationInfo.class, invocationInfo)__		MethodInvocationInfo info = (MethodInvocationInfo) invocationInfo__		return fromMethod(builder, info.getControllerMethod(), info.getArgumentValues())__	};an,alternative,to,link,from,method,call,object,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,invocation,info,either,the,value,returned,from,a,mock,controller,invocation,or,the,mock,controller,itself,after,an,invocation,return,a,uri,components,instance;public,static,uri,components,builder,from,method,call,uri,components,builder,builder,object,invocation,info,assert,is,instance,of,method,invocation,info,class,invocation,info,method,invocation,info,info,method,invocation,info,invocation,info,return,from,method,builder,info,get,controller,method,info,get,argument,values
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodCall(UriComponentsBuilder builder, Object invocationInfo);1429801417;An alternative to {@link #fromMethodCall(Object)} that accepts a_{@code UriComponentsBuilder} representing the base URL. This is useful_when using MvcUriComponentsBuilder outside the context of processing a_request or to apply a custom baseUrl not matching the current request._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param invocationInfo either the value returned from a "mock" controller_invocation or the "mock" controller itself after an invocation_@return a UriComponents instance;public static UriComponentsBuilder fromMethodCall(UriComponentsBuilder builder, Object invocationInfo) {_		Assert.isInstanceOf(MethodInvocationInfo.class, invocationInfo)__		MethodInvocationInfo info = (MethodInvocationInfo) invocationInfo__		return fromMethod(builder, info.getControllerMethod(), info.getArgumentValues())__	};an,alternative,to,link,from,method,call,object,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,invocation,info,either,the,value,returned,from,a,mock,controller,invocation,or,the,mock,controller,itself,after,an,invocation,return,a,uri,components,instance;public,static,uri,components,builder,from,method,call,uri,components,builder,builder,object,invocation,info,assert,is,instance,of,method,invocation,info,class,invocation,info,method,invocation,info,info,method,invocation,info,invocation,info,return,from,method,builder,info,get,controller,method,info,get,argument,values
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodCall(UriComponentsBuilder builder, Object invocationInfo);1429801944;An alternative to {@link #fromMethodCall(Object)} that accepts a_{@code UriComponentsBuilder} representing the base URL. This is useful_when using MvcUriComponentsBuilder outside the context of processing a_request or to apply a custom baseUrl not matching the current request._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param invocationInfo either the value returned from a "mock" controller_invocation or the "mock" controller itself after an invocation_@return a UriComponents instance;public static UriComponentsBuilder fromMethodCall(UriComponentsBuilder builder, Object invocationInfo) {_		Assert.isInstanceOf(MethodInvocationInfo.class, invocationInfo)__		MethodInvocationInfo info = (MethodInvocationInfo) invocationInfo__		return fromMethod(builder, info.getControllerMethod(), info.getArgumentValues())__	};an,alternative,to,link,from,method,call,object,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,invocation,info,either,the,value,returned,from,a,mock,controller,invocation,or,the,mock,controller,itself,after,an,invocation,return,a,uri,components,instance;public,static,uri,components,builder,from,method,call,uri,components,builder,builder,object,invocation,info,assert,is,instance,of,method,invocation,info,class,invocation,info,method,invocation,info,info,method,invocation,info,invocation,info,return,from,method,builder,info,get,controller,method,info,get,argument,values
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodCall(UriComponentsBuilder builder, Object invocationInfo);1429802180;An alternative to {@link #fromMethodCall(Object)} that accepts a_{@code UriComponentsBuilder} representing the base URL. This is useful_when using MvcUriComponentsBuilder outside the context of processing a_request or to apply a custom baseUrl not matching the current request._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param invocationInfo either the value returned from a "mock" controller_invocation or the "mock" controller itself after an invocation_@return a UriComponents instance;public static UriComponentsBuilder fromMethodCall(UriComponentsBuilder builder, Object invocationInfo) {_		Assert.isInstanceOf(MethodInvocationInfo.class, invocationInfo)__		MethodInvocationInfo info = (MethodInvocationInfo) invocationInfo__		return fromMethod(builder, info.getControllerMethod(), info.getArgumentValues())__	};an,alternative,to,link,from,method,call,object,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,invocation,info,either,the,value,returned,from,a,mock,controller,invocation,or,the,mock,controller,itself,after,an,invocation,return,a,uri,components,instance;public,static,uri,components,builder,from,method,call,uri,components,builder,builder,object,invocation,info,assert,is,instance,of,method,invocation,info,class,invocation,info,method,invocation,info,info,method,invocation,info,invocation,info,return,from,method,builder,info,get,controller,method,info,get,argument,values
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodCall(UriComponentsBuilder builder, Object invocationInfo);1429886024;An alternative to {@link #fromMethodCall(Object)} that accepts a_{@code UriComponentsBuilder} representing the base URL. This is useful_when using MvcUriComponentsBuilder outside the context of processing a_request or to apply a custom baseUrl not matching the current request._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param invocationInfo either the value returned from a "mock" controller_invocation or the "mock" controller itself after an invocation_@return a UriComponents instance;public static UriComponentsBuilder fromMethodCall(UriComponentsBuilder builder, Object invocationInfo) {_		Assert.isInstanceOf(MethodInvocationInfo.class, invocationInfo)__		MethodInvocationInfo info = (MethodInvocationInfo) invocationInfo__		return fromMethod(builder, info.getControllerMethod(), info.getArgumentValues())__	};an,alternative,to,link,from,method,call,object,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,invocation,info,either,the,value,returned,from,a,mock,controller,invocation,or,the,mock,controller,itself,after,an,invocation,return,a,uri,components,instance;public,static,uri,components,builder,from,method,call,uri,components,builder,builder,object,invocation,info,assert,is,instance,of,method,invocation,info,class,invocation,info,method,invocation,info,info,method,invocation,info,invocation,info,return,from,method,builder,info,get,controller,method,info,get,argument,values
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodCall(UriComponentsBuilder builder, Object invocationInfo);1429888980;An alternative to {@link #fromMethodCall(Object)} that accepts a_{@code UriComponentsBuilder} representing the base URL. This is useful_when using MvcUriComponentsBuilder outside the context of processing a_request or to apply a custom baseUrl not matching the current request._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param invocationInfo either the value returned from a "mock" controller_invocation or the "mock" controller itself after an invocation_@return a UriComponents instance;public static UriComponentsBuilder fromMethodCall(UriComponentsBuilder builder, Object invocationInfo) {_		Assert.isInstanceOf(MethodInvocationInfo.class, invocationInfo)__		MethodInvocationInfo info = (MethodInvocationInfo) invocationInfo__		return fromMethod(builder, info.getControllerMethod(), info.getArgumentValues())__	};an,alternative,to,link,from,method,call,object,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,invocation,info,either,the,value,returned,from,a,mock,controller,invocation,or,the,mock,controller,itself,after,an,invocation,return,a,uri,components,instance;public,static,uri,components,builder,from,method,call,uri,components,builder,builder,object,invocation,info,assert,is,instance,of,method,invocation,info,class,invocation,info,method,invocation,info,info,method,invocation,info,invocation,info,return,from,method,builder,info,get,controller,method,info,get,argument,values
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodCall(UriComponentsBuilder builder, Object invocationInfo);1430739806;An alternative to {@link #fromMethodCall(Object)} that accepts a_{@code UriComponentsBuilder} representing the base URL. This is useful_when using MvcUriComponentsBuilder outside the context of processing a_request or to apply a custom baseUrl not matching the current request._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param invocationInfo either the value returned from a "mock" controller_invocation or the "mock" controller itself after an invocation_@return a UriComponents instance;public static UriComponentsBuilder fromMethodCall(UriComponentsBuilder builder, Object invocationInfo) {_		Assert.isInstanceOf(MethodInvocationInfo.class, invocationInfo)__		MethodInvocationInfo info = (MethodInvocationInfo) invocationInfo__		return fromMethod(builder, info.getControllerMethod(), info.getArgumentValues())__	};an,alternative,to,link,from,method,call,object,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,invocation,info,either,the,value,returned,from,a,mock,controller,invocation,or,the,mock,controller,itself,after,an,invocation,return,a,uri,components,instance;public,static,uri,components,builder,from,method,call,uri,components,builder,builder,object,invocation,info,assert,is,instance,of,method,invocation,info,class,invocation,info,method,invocation,info,info,method,invocation,info,invocation,info,return,from,method,builder,info,get,controller,method,info,get,argument,values
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodCall(UriComponentsBuilder builder, Object invocationInfo);1430747547;An alternative to {@link #fromMethodCall(Object)} that accepts a_{@code UriComponentsBuilder} representing the base URL. This is useful_when using MvcUriComponentsBuilder outside the context of processing a_request or to apply a custom baseUrl not matching the current request._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param invocationInfo either the value returned from a "mock" controller_invocation or the "mock" controller itself after an invocation_@return a UriComponents instance;public static UriComponentsBuilder fromMethodCall(UriComponentsBuilder builder, Object invocationInfo) {_		Assert.isInstanceOf(MethodInvocationInfo.class, invocationInfo)__		MethodInvocationInfo info = (MethodInvocationInfo) invocationInfo__		return fromMethod(builder, info.getControllerMethod(), info.getArgumentValues())__	};an,alternative,to,link,from,method,call,object,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,invocation,info,either,the,value,returned,from,a,mock,controller,invocation,or,the,mock,controller,itself,after,an,invocation,return,a,uri,components,instance;public,static,uri,components,builder,from,method,call,uri,components,builder,builder,object,invocation,info,assert,is,instance,of,method,invocation,info,class,invocation,info,method,invocation,info,info,method,invocation,info,invocation,info,return,from,method,builder,info,get,controller,method,info,get,argument,values
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodCall(UriComponentsBuilder builder, Object invocationInfo);1430749606;An alternative to {@link #fromMethodCall(Object)} that accepts a_{@code UriComponentsBuilder} representing the base URL. This is useful_when using MvcUriComponentsBuilder outside the context of processing a_request or to apply a custom baseUrl not matching the current request._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param invocationInfo either the value returned from a "mock" controller_invocation or the "mock" controller itself after an invocation_@return a UriComponents instance;public static UriComponentsBuilder fromMethodCall(UriComponentsBuilder builder, Object invocationInfo) {_		Assert.isInstanceOf(MethodInvocationInfo.class, invocationInfo)__		MethodInvocationInfo info = (MethodInvocationInfo) invocationInfo__		return fromMethod(builder, info.getControllerMethod(), info.getArgumentValues())__	};an,alternative,to,link,from,method,call,object,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,invocation,info,either,the,value,returned,from,a,mock,controller,invocation,or,the,mock,controller,itself,after,an,invocation,return,a,uri,components,instance;public,static,uri,components,builder,from,method,call,uri,components,builder,builder,object,invocation,info,assert,is,instance,of,method,invocation,info,class,invocation,info,method,invocation,info,info,method,invocation,info,invocation,info,return,from,method,builder,info,get,controller,method,info,get,argument,values
MvcUriComponentsBuilder -> protected MvcUriComponentsBuilder();1417799775;Default constructor. Protected to prevent direct instantiation.__@see #fromController(Class)_@see #fromMethodName(Class, String, Object...)_@see #fromMethodCall(Object)_@see #fromMappingName(String)_@see #fromMethod(java.lang.reflect.Method, Object...);protected MvcUriComponentsBuilder() {_	};default,constructor,protected,to,prevent,direct,instantiation,see,from,controller,class,see,from,method,name,class,string,object,see,from,method,call,object,see,from,mapping,name,string,see,from,method,java,lang,reflect,method,object;protected,mvc,uri,components,builder
MvcUriComponentsBuilder -> protected MvcUriComponentsBuilder();1424972092;Default constructor. Protected to prevent direct instantiation.__@see #fromController(Class)_@see #fromMethodName(Class, String, Object...)_@see #fromMethodCall(Object)_@see #fromMappingName(String)_@see #fromMethod(java.lang.reflect.Method, Object...);protected MvcUriComponentsBuilder() {_	};default,constructor,protected,to,prevent,direct,instantiation,see,from,controller,class,see,from,method,name,class,string,object,see,from,method,call,object,see,from,mapping,name,string,see,from,method,java,lang,reflect,method,object;protected,mvc,uri,components,builder
MvcUriComponentsBuilder -> protected MvcUriComponentsBuilder();1426553101;Default constructor. Protected to prevent direct instantiation.__@see #fromController(Class)_@see #fromMethodName(Class, String, Object...)_@see #fromMethodCall(Object)_@see #fromMappingName(String)_@see #fromMethod(java.lang.reflect.Method, Object...);protected MvcUriComponentsBuilder() {_	};default,constructor,protected,to,prevent,direct,instantiation,see,from,controller,class,see,from,method,name,class,string,object,see,from,method,call,object,see,from,mapping,name,string,see,from,method,java,lang,reflect,method,object;protected,mvc,uri,components,builder
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodCall(UriComponentsBuilder builder, Object info);1431975386;An alternative to {@link #fromMethodCall(Object)} that accepts a_{@code UriComponentsBuilder} representing the base URL. This is useful_when using MvcUriComponentsBuilder outside the context of processing a_request or to apply a custom baseUrl not matching the current request._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param info either the value returned from a "mock" controller_invocation or the "mock" controller itself after an invocation_@return a UriComponents instance;public static UriComponentsBuilder fromMethodCall(UriComponentsBuilder builder, Object info) {_		Assert.isInstanceOf(MethodInvocationInfo.class, info)__		MethodInvocationInfo invocationInfo = (MethodInvocationInfo) info__		Class<?> controllerType = invocationInfo.getControllerType()__		Method method = invocationInfo.getControllerMethod()__		Object[] arguments = invocationInfo.getArgumentValues()__		return fromMethodInternal(builder, controllerType, method, arguments)__	};an,alternative,to,link,from,method,call,object,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,info,either,the,value,returned,from,a,mock,controller,invocation,or,the,mock,controller,itself,after,an,invocation,return,a,uri,components,instance;public,static,uri,components,builder,from,method,call,uri,components,builder,builder,object,info,assert,is,instance,of,method,invocation,info,class,info,method,invocation,info,invocation,info,method,invocation,info,info,class,controller,type,invocation,info,get,controller,type,method,method,invocation,info,get,controller,method,object,arguments,invocation,info,get,argument,values,return,from,method,internal,builder,controller,type,method,arguments
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodCall(UriComponentsBuilder builder, Object info);1432125256;An alternative to {@link #fromMethodCall(Object)} that accepts a_{@code UriComponentsBuilder} representing the base URL. This is useful_when using MvcUriComponentsBuilder outside the context of processing a_request or to apply a custom baseUrl not matching the current request._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param info either the value returned from a "mock" controller_invocation or the "mock" controller itself after an invocation_@return a UriComponents instance;public static UriComponentsBuilder fromMethodCall(UriComponentsBuilder builder, Object info) {_		Assert.isInstanceOf(MethodInvocationInfo.class, info)__		MethodInvocationInfo invocationInfo = (MethodInvocationInfo) info__		Class<?> controllerType = invocationInfo.getControllerType()__		Method method = invocationInfo.getControllerMethod()__		Object[] arguments = invocationInfo.getArgumentValues()__		return fromMethodInternal(builder, controllerType, method, arguments)__	};an,alternative,to,link,from,method,call,object,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,info,either,the,value,returned,from,a,mock,controller,invocation,or,the,mock,controller,itself,after,an,invocation,return,a,uri,components,instance;public,static,uri,components,builder,from,method,call,uri,components,builder,builder,object,info,assert,is,instance,of,method,invocation,info,class,info,method,invocation,info,invocation,info,method,invocation,info,info,class,controller,type,invocation,info,get,controller,type,method,method,invocation,info,get,controller,method,object,arguments,invocation,info,get,argument,values,return,from,method,internal,builder,controller,type,method,arguments
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodCall(UriComponentsBuilder builder, Object info);1432156007;An alternative to {@link #fromMethodCall(Object)} that accepts a_{@code UriComponentsBuilder} representing the base URL. This is useful_when using MvcUriComponentsBuilder outside the context of processing a_request or to apply a custom baseUrl not matching the current request._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param info either the value returned from a "mock" controller_invocation or the "mock" controller itself after an invocation_@return a UriComponents instance;public static UriComponentsBuilder fromMethodCall(UriComponentsBuilder builder, Object info) {_		Assert.isInstanceOf(MethodInvocationInfo.class, info)__		MethodInvocationInfo invocationInfo = (MethodInvocationInfo) info__		Class<?> controllerType = invocationInfo.getControllerType()__		Method method = invocationInfo.getControllerMethod()__		Object[] arguments = invocationInfo.getArgumentValues()__		return fromMethodInternal(builder, controllerType, method, arguments)__	};an,alternative,to,link,from,method,call,object,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,info,either,the,value,returned,from,a,mock,controller,invocation,or,the,mock,controller,itself,after,an,invocation,return,a,uri,components,instance;public,static,uri,components,builder,from,method,call,uri,components,builder,builder,object,info,assert,is,instance,of,method,invocation,info,class,info,method,invocation,info,invocation,info,method,invocation,info,info,class,controller,type,invocation,info,get,controller,type,method,method,invocation,info,get,controller,method,object,arguments,invocation,info,get,argument,values,return,from,method,internal,builder,controller,type,method,arguments
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodCall(UriComponentsBuilder builder, Object info);1432856630;An alternative to {@link #fromMethodCall(Object)} that accepts a_{@code UriComponentsBuilder} representing the base URL. This is useful_when using MvcUriComponentsBuilder outside the context of processing a_request or to apply a custom baseUrl not matching the current request._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param info either the value returned from a "mock" controller_invocation or the "mock" controller itself after an invocation_@return a UriComponents instance;public static UriComponentsBuilder fromMethodCall(UriComponentsBuilder builder, Object info) {_		Assert.isInstanceOf(MethodInvocationInfo.class, info)__		MethodInvocationInfo invocationInfo = (MethodInvocationInfo) info__		Class<?> controllerType = invocationInfo.getControllerType()__		Method method = invocationInfo.getControllerMethod()__		Object[] arguments = invocationInfo.getArgumentValues()__		return fromMethodInternal(builder, controllerType, method, arguments)__	};an,alternative,to,link,from,method,call,object,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,info,either,the,value,returned,from,a,mock,controller,invocation,or,the,mock,controller,itself,after,an,invocation,return,a,uri,components,instance;public,static,uri,components,builder,from,method,call,uri,components,builder,builder,object,info,assert,is,instance,of,method,invocation,info,class,info,method,invocation,info,invocation,info,method,invocation,info,info,class,controller,type,invocation,info,get,controller,type,method,method,invocation,info,get,controller,method,object,arguments,invocation,info,get,argument,values,return,from,method,internal,builder,controller,type,method,arguments
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodCall(UriComponentsBuilder builder, Object info);1432857824;An alternative to {@link #fromMethodCall(Object)} that accepts a_{@code UriComponentsBuilder} representing the base URL. This is useful_when using MvcUriComponentsBuilder outside the context of processing a_request or to apply a custom baseUrl not matching the current request._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param info either the value returned from a "mock" controller_invocation or the "mock" controller itself after an invocation_@return a UriComponents instance;public static UriComponentsBuilder fromMethodCall(UriComponentsBuilder builder, Object info) {_		Assert.isInstanceOf(MethodInvocationInfo.class, info)__		MethodInvocationInfo invocationInfo = (MethodInvocationInfo) info__		Class<?> controllerType = invocationInfo.getControllerType()__		Method method = invocationInfo.getControllerMethod()__		Object[] arguments = invocationInfo.getArgumentValues()__		return fromMethodInternal(builder, controllerType, method, arguments)__	};an,alternative,to,link,from,method,call,object,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,info,either,the,value,returned,from,a,mock,controller,invocation,or,the,mock,controller,itself,after,an,invocation,return,a,uri,components,instance;public,static,uri,components,builder,from,method,call,uri,components,builder,builder,object,info,assert,is,instance,of,method,invocation,info,class,info,method,invocation,info,invocation,info,method,invocation,info,info,class,controller,type,invocation,info,get,controller,type,method,method,invocation,info,get,controller,method,object,arguments,invocation,info,get,argument,values,return,from,method,internal,builder,controller,type,method,arguments
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodCall(UriComponentsBuilder builder, Object info);1434234880;An alternative to {@link #fromMethodCall(Object)} that accepts a_{@code UriComponentsBuilder} representing the base URL. This is useful_when using MvcUriComponentsBuilder outside the context of processing a_request or to apply a custom baseUrl not matching the current request._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param info either the value returned from a "mock" controller_invocation or the "mock" controller itself after an invocation_@return a UriComponents instance;public static UriComponentsBuilder fromMethodCall(UriComponentsBuilder builder, Object info) {_		Assert.isInstanceOf(MethodInvocationInfo.class, info)__		MethodInvocationInfo invocationInfo = (MethodInvocationInfo) info__		Class<?> controllerType = invocationInfo.getControllerType()__		Method method = invocationInfo.getControllerMethod()__		Object[] arguments = invocationInfo.getArgumentValues()__		return fromMethodInternal(builder, controllerType, method, arguments)__	};an,alternative,to,link,from,method,call,object,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,info,either,the,value,returned,from,a,mock,controller,invocation,or,the,mock,controller,itself,after,an,invocation,return,a,uri,components,instance;public,static,uri,components,builder,from,method,call,uri,components,builder,builder,object,info,assert,is,instance,of,method,invocation,info,class,info,method,invocation,info,invocation,info,method,invocation,info,info,class,controller,type,invocation,info,get,controller,type,method,method,invocation,info,get,controller,method,object,arguments,invocation,info,get,argument,values,return,from,method,internal,builder,controller,type,method,arguments
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodCall(UriComponentsBuilder builder, Object info);1434484897;An alternative to {@link #fromMethodCall(Object)} that accepts a_{@code UriComponentsBuilder} representing the base URL. This is useful_when using MvcUriComponentsBuilder outside the context of processing a_request or to apply a custom baseUrl not matching the current request._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param info either the value returned from a "mock" controller_invocation or the "mock" controller itself after an invocation_@return a UriComponents instance;public static UriComponentsBuilder fromMethodCall(UriComponentsBuilder builder, Object info) {_		Assert.isInstanceOf(MethodInvocationInfo.class, info)__		MethodInvocationInfo invocationInfo = (MethodInvocationInfo) info__		Class<?> controllerType = invocationInfo.getControllerType()__		Method method = invocationInfo.getControllerMethod()__		Object[] arguments = invocationInfo.getArgumentValues()__		return fromMethodInternal(builder, controllerType, method, arguments)__	};an,alternative,to,link,from,method,call,object,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,info,either,the,value,returned,from,a,mock,controller,invocation,or,the,mock,controller,itself,after,an,invocation,return,a,uri,components,instance;public,static,uri,components,builder,from,method,call,uri,components,builder,builder,object,info,assert,is,instance,of,method,invocation,info,class,info,method,invocation,info,invocation,info,method,invocation,info,info,class,controller,type,invocation,info,get,controller,type,method,method,invocation,info,get,controller,method,object,arguments,invocation,info,get,argument,values,return,from,method,internal,builder,controller,type,method,arguments
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodCall(UriComponentsBuilder builder, Object info);1434726592;An alternative to {@link #fromMethodCall(Object)} that accepts a_{@code UriComponentsBuilder} representing the base URL. This is useful_when using MvcUriComponentsBuilder outside the context of processing a_request or to apply a custom baseUrl not matching the current request._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param info either the value returned from a "mock" controller_invocation or the "mock" controller itself after an invocation_@return a UriComponents instance;public static UriComponentsBuilder fromMethodCall(UriComponentsBuilder builder, Object info) {_		Assert.isInstanceOf(MethodInvocationInfo.class, info)__		MethodInvocationInfo invocationInfo = (MethodInvocationInfo) info__		Class<?> controllerType = invocationInfo.getControllerType()__		Method method = invocationInfo.getControllerMethod()__		Object[] arguments = invocationInfo.getArgumentValues()__		return fromMethodInternal(builder, controllerType, method, arguments)__	};an,alternative,to,link,from,method,call,object,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,info,either,the,value,returned,from,a,mock,controller,invocation,or,the,mock,controller,itself,after,an,invocation,return,a,uri,components,instance;public,static,uri,components,builder,from,method,call,uri,components,builder,builder,object,info,assert,is,instance,of,method,invocation,info,class,info,method,invocation,info,invocation,info,method,invocation,info,info,class,controller,type,invocation,info,get,controller,type,method,method,invocation,info,get,controller,method,object,arguments,invocation,info,get,argument,values,return,from,method,internal,builder,controller,type,method,arguments
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodCall(UriComponentsBuilder builder, Object info);1435615322;An alternative to {@link #fromMethodCall(Object)} that accepts a_{@code UriComponentsBuilder} representing the base URL. This is useful_when using MvcUriComponentsBuilder outside the context of processing a_request or to apply a custom baseUrl not matching the current request._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param info either the value returned from a "mock" controller_invocation or the "mock" controller itself after an invocation_@return a UriComponents instance;public static UriComponentsBuilder fromMethodCall(UriComponentsBuilder builder, Object info) {_		Assert.isInstanceOf(MethodInvocationInfo.class, info)__		MethodInvocationInfo invocationInfo = (MethodInvocationInfo) info__		Class<?> controllerType = invocationInfo.getControllerType()__		Method method = invocationInfo.getControllerMethod()__		Object[] arguments = invocationInfo.getArgumentValues()__		return fromMethodInternal(builder, controllerType, method, arguments)__	};an,alternative,to,link,from,method,call,object,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,info,either,the,value,returned,from,a,mock,controller,invocation,or,the,mock,controller,itself,after,an,invocation,return,a,uri,components,instance;public,static,uri,components,builder,from,method,call,uri,components,builder,builder,object,info,assert,is,instance,of,method,invocation,info,class,info,method,invocation,info,invocation,info,method,invocation,info,info,class,controller,type,invocation,info,get,controller,type,method,method,invocation,info,get,controller,method,object,arguments,invocation,info,get,argument,values,return,from,method,internal,builder,controller,type,method,arguments
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodCall(UriComponentsBuilder builder, Object info);1439294371;An alternative to {@link #fromMethodCall(Object)} that accepts a_{@code UriComponentsBuilder} representing the base URL. This is useful_when using MvcUriComponentsBuilder outside the context of processing a_request or to apply a custom baseUrl not matching the current request._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param info either the value returned from a "mock" controller_invocation or the "mock" controller itself after an invocation_@return a UriComponents instance;public static UriComponentsBuilder fromMethodCall(UriComponentsBuilder builder, Object info) {_		Assert.isInstanceOf(MethodInvocationInfo.class, info)__		MethodInvocationInfo invocationInfo = (MethodInvocationInfo) info__		Class<?> controllerType = invocationInfo.getControllerType()__		Method method = invocationInfo.getControllerMethod()__		Object[] arguments = invocationInfo.getArgumentValues()__		return fromMethodInternal(builder, controllerType, method, arguments)__	};an,alternative,to,link,from,method,call,object,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,info,either,the,value,returned,from,a,mock,controller,invocation,or,the,mock,controller,itself,after,an,invocation,return,a,uri,components,instance;public,static,uri,components,builder,from,method,call,uri,components,builder,builder,object,info,assert,is,instance,of,method,invocation,info,class,info,method,invocation,info,invocation,info,method,invocation,info,info,class,controller,type,invocation,info,get,controller,type,method,method,invocation,info,get,controller,method,object,arguments,invocation,info,get,argument,values,return,from,method,internal,builder,controller,type,method,arguments
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodCall(UriComponentsBuilder builder, Object info);1447077465;An alternative to {@link #fromMethodCall(Object)} that accepts a_{@code UriComponentsBuilder} representing the base URL. This is useful_when using MvcUriComponentsBuilder outside the context of processing a_request or to apply a custom baseUrl not matching the current request._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param info either the value returned from a "mock" controller_invocation or the "mock" controller itself after an invocation_@return a UriComponents instance;public static UriComponentsBuilder fromMethodCall(UriComponentsBuilder builder, Object info) {_		Assert.isInstanceOf(MethodInvocationInfo.class, info)__		MethodInvocationInfo invocationInfo = (MethodInvocationInfo) info__		Class<?> controllerType = invocationInfo.getControllerType()__		Method method = invocationInfo.getControllerMethod()__		Object[] arguments = invocationInfo.getArgumentValues()__		return fromMethodInternal(builder, controllerType, method, arguments)__	};an,alternative,to,link,from,method,call,object,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,info,either,the,value,returned,from,a,mock,controller,invocation,or,the,mock,controller,itself,after,an,invocation,return,a,uri,components,instance;public,static,uri,components,builder,from,method,call,uri,components,builder,builder,object,info,assert,is,instance,of,method,invocation,info,class,info,method,invocation,info,invocation,info,method,invocation,info,info,class,controller,type,invocation,info,get,controller,type,method,method,invocation,info,get,controller,method,object,arguments,invocation,info,get,argument,values,return,from,method,internal,builder,controller,type,method,arguments
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodCall(UriComponentsBuilder builder, Object info);1458830024;An alternative to {@link #fromMethodCall(Object)} that accepts a_{@code UriComponentsBuilder} representing the base URL. This is useful_when using MvcUriComponentsBuilder outside the context of processing a_request or to apply a custom baseUrl not matching the current request._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param info either the value returned from a "mock" controller_invocation or the "mock" controller itself after an invocation_@return a UriComponents instance;public static UriComponentsBuilder fromMethodCall(UriComponentsBuilder builder, Object info) {_		Assert.isInstanceOf(MethodInvocationInfo.class, info)__		MethodInvocationInfo invocationInfo = (MethodInvocationInfo) info__		Class<?> controllerType = invocationInfo.getControllerType()__		Method method = invocationInfo.getControllerMethod()__		Object[] arguments = invocationInfo.getArgumentValues()__		return fromMethodInternal(builder, controllerType, method, arguments)__	};an,alternative,to,link,from,method,call,object,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,info,either,the,value,returned,from,a,mock,controller,invocation,or,the,mock,controller,itself,after,an,invocation,return,a,uri,components,instance;public,static,uri,components,builder,from,method,call,uri,components,builder,builder,object,info,assert,is,instance,of,method,invocation,info,class,info,method,invocation,info,invocation,info,method,invocation,info,info,class,controller,type,invocation,info,get,controller,type,method,method,invocation,info,get,controller,method,object,arguments,invocation,info,get,argument,values,return,from,method,internal,builder,controller,type,method,arguments
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodCall(UriComponentsBuilder builder, Object info);1461047077;An alternative to {@link #fromMethodCall(Object)} that accepts a_{@code UriComponentsBuilder} representing the base URL. This is useful_when using MvcUriComponentsBuilder outside the context of processing a_request or to apply a custom baseUrl not matching the current request._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param info either the value returned from a "mock" controller_invocation or the "mock" controller itself after an invocation_@return a UriComponents instance;public static UriComponentsBuilder fromMethodCall(UriComponentsBuilder builder, Object info) {_		Assert.isInstanceOf(MethodInvocationInfo.class, info)__		MethodInvocationInfo invocationInfo = (MethodInvocationInfo) info__		Class<?> controllerType = invocationInfo.getControllerType()__		Method method = invocationInfo.getControllerMethod()__		Object[] arguments = invocationInfo.getArgumentValues()__		return fromMethodInternal(builder, controllerType, method, arguments)__	};an,alternative,to,link,from,method,call,object,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,info,either,the,value,returned,from,a,mock,controller,invocation,or,the,mock,controller,itself,after,an,invocation,return,a,uri,components,instance;public,static,uri,components,builder,from,method,call,uri,components,builder,builder,object,info,assert,is,instance,of,method,invocation,info,class,info,method,invocation,info,invocation,info,method,invocation,info,info,class,controller,type,invocation,info,get,controller,type,method,method,invocation,info,get,controller,method,object,arguments,invocation,info,get,argument,values,return,from,method,internal,builder,controller,type,method,arguments
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodCall(UriComponentsBuilder builder, Object info);1467677340;An alternative to {@link #fromMethodCall(Object)} that accepts a_{@code UriComponentsBuilder} representing the base URL. This is useful_when using MvcUriComponentsBuilder outside the context of processing a_request or to apply a custom baseUrl not matching the current request._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param info either the value returned from a "mock" controller_invocation or the "mock" controller itself after an invocation_@return a UriComponents instance;public static UriComponentsBuilder fromMethodCall(UriComponentsBuilder builder, Object info) {_		Assert.isInstanceOf(MethodInvocationInfo.class, info)__		MethodInvocationInfo invocationInfo = (MethodInvocationInfo) info__		Class<?> controllerType = invocationInfo.getControllerType()__		Method method = invocationInfo.getControllerMethod()__		Object[] arguments = invocationInfo.getArgumentValues()__		return fromMethodInternal(builder, controllerType, method, arguments)__	};an,alternative,to,link,from,method,call,object,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,info,either,the,value,returned,from,a,mock,controller,invocation,or,the,mock,controller,itself,after,an,invocation,return,a,uri,components,instance;public,static,uri,components,builder,from,method,call,uri,components,builder,builder,object,info,assert,is,instance,of,method,invocation,info,class,info,method,invocation,info,invocation,info,method,invocation,info,info,class,controller,type,invocation,info,get,controller,type,method,method,invocation,info,get,controller,method,object,arguments,invocation,info,get,argument,values,return,from,method,internal,builder,controller,type,method,arguments
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodCall(UriComponentsBuilder builder, Object info);1467726769;An alternative to {@link #fromMethodCall(Object)} that accepts a_{@code UriComponentsBuilder} representing the base URL. This is useful_when using MvcUriComponentsBuilder outside the context of processing a_request or to apply a custom baseUrl not matching the current request._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param info either the value returned from a "mock" controller_invocation or the "mock" controller itself after an invocation_@return a UriComponents instance;public static UriComponentsBuilder fromMethodCall(UriComponentsBuilder builder, Object info) {_		Assert.isInstanceOf(MethodInvocationInfo.class, info)__		MethodInvocationInfo invocationInfo = (MethodInvocationInfo) info__		Class<?> controllerType = invocationInfo.getControllerType()__		Method method = invocationInfo.getControllerMethod()__		Object[] arguments = invocationInfo.getArgumentValues()__		return fromMethodInternal(builder, controllerType, method, arguments)__	};an,alternative,to,link,from,method,call,object,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,info,either,the,value,returned,from,a,mock,controller,invocation,or,the,mock,controller,itself,after,an,invocation,return,a,uri,components,instance;public,static,uri,components,builder,from,method,call,uri,components,builder,builder,object,info,assert,is,instance,of,method,invocation,info,class,info,method,invocation,info,invocation,info,method,invocation,info,info,class,controller,type,invocation,info,get,controller,type,method,method,invocation,info,get,controller,method,object,arguments,invocation,info,get,argument,values,return,from,method,internal,builder,controller,type,method,arguments
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodCall(UriComponentsBuilder builder, Object info);1467730834;An alternative to {@link #fromMethodCall(Object)} that accepts a_{@code UriComponentsBuilder} representing the base URL. This is useful_when using MvcUriComponentsBuilder outside the context of processing a_request or to apply a custom baseUrl not matching the current request._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param info either the value returned from a "mock" controller_invocation or the "mock" controller itself after an invocation_@return a UriComponents instance;public static UriComponentsBuilder fromMethodCall(UriComponentsBuilder builder, Object info) {_		Assert.isInstanceOf(MethodInvocationInfo.class, info)__		MethodInvocationInfo invocationInfo = (MethodInvocationInfo) info__		Class<?> controllerType = invocationInfo.getControllerType()__		Method method = invocationInfo.getControllerMethod()__		Object[] arguments = invocationInfo.getArgumentValues()__		return fromMethodInternal(builder, controllerType, method, arguments)__	};an,alternative,to,link,from,method,call,object,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,info,either,the,value,returned,from,a,mock,controller,invocation,or,the,mock,controller,itself,after,an,invocation,return,a,uri,components,instance;public,static,uri,components,builder,from,method,call,uri,components,builder,builder,object,info,assert,is,instance,of,method,invocation,info,class,info,method,invocation,info,invocation,info,method,invocation,info,info,class,controller,type,invocation,info,get,controller,type,method,method,invocation,info,get,controller,method,object,arguments,invocation,info,get,argument,values,return,from,method,internal,builder,controller,type,method,arguments
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodCall(UriComponentsBuilder builder, Object info);1467846264;An alternative to {@link #fromMethodCall(Object)} that accepts a_{@code UriComponentsBuilder} representing the base URL. This is useful_when using MvcUriComponentsBuilder outside the context of processing a_request or to apply a custom baseUrl not matching the current request._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param info either the value returned from a "mock" controller_invocation or the "mock" controller itself after an invocation_@return a UriComponents instance;public static UriComponentsBuilder fromMethodCall(UriComponentsBuilder builder, Object info) {_		Assert.isInstanceOf(MethodInvocationInfo.class, info)__		MethodInvocationInfo invocationInfo = (MethodInvocationInfo) info__		Class<?> controllerType = invocationInfo.getControllerType()__		Method method = invocationInfo.getControllerMethod()__		Object[] arguments = invocationInfo.getArgumentValues()__		return fromMethodInternal(builder, controllerType, method, arguments)__	};an,alternative,to,link,from,method,call,object,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,info,either,the,value,returned,from,a,mock,controller,invocation,or,the,mock,controller,itself,after,an,invocation,return,a,uri,components,instance;public,static,uri,components,builder,from,method,call,uri,components,builder,builder,object,info,assert,is,instance,of,method,invocation,info,class,info,method,invocation,info,invocation,info,method,invocation,info,info,class,controller,type,invocation,info,get,controller,type,method,method,invocation,info,get,controller,method,object,arguments,invocation,info,get,argument,values,return,from,method,internal,builder,controller,type,method,arguments
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodCall(UriComponentsBuilder builder, Object info);1468613531;An alternative to {@link #fromMethodCall(Object)} that accepts a_{@code UriComponentsBuilder} representing the base URL. This is useful_when using MvcUriComponentsBuilder outside the context of processing a_request or to apply a custom baseUrl not matching the current request._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param info either the value returned from a "mock" controller_invocation or the "mock" controller itself after an invocation_@return a UriComponents instance;public static UriComponentsBuilder fromMethodCall(UriComponentsBuilder builder, Object info) {_		Assert.isInstanceOf(MethodInvocationInfo.class, info)__		MethodInvocationInfo invocationInfo = (MethodInvocationInfo) info__		Class<?> controllerType = invocationInfo.getControllerType()__		Method method = invocationInfo.getControllerMethod()__		Object[] arguments = invocationInfo.getArgumentValues()__		return fromMethodInternal(builder, controllerType, method, arguments)__	};an,alternative,to,link,from,method,call,object,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,info,either,the,value,returned,from,a,mock,controller,invocation,or,the,mock,controller,itself,after,an,invocation,return,a,uri,components,instance;public,static,uri,components,builder,from,method,call,uri,components,builder,builder,object,info,assert,is,instance,of,method,invocation,info,class,info,method,invocation,info,invocation,info,method,invocation,info,info,class,controller,type,invocation,info,get,controller,type,method,method,invocation,info,get,controller,method,object,arguments,invocation,info,get,argument,values,return,from,method,internal,builder,controller,type,method,arguments
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodCall(UriComponentsBuilder builder, Object info);1468948866;An alternative to {@link #fromMethodCall(Object)} that accepts a_{@code UriComponentsBuilder} representing the base URL. This is useful_when using MvcUriComponentsBuilder outside the context of processing a_request or to apply a custom baseUrl not matching the current request._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param info either the value returned from a "mock" controller_invocation or the "mock" controller itself after an invocation_@return a UriComponents instance;public static UriComponentsBuilder fromMethodCall(UriComponentsBuilder builder, Object info) {_		Assert.isInstanceOf(MethodInvocationInfo.class, info)__		MethodInvocationInfo invocationInfo = (MethodInvocationInfo) info__		Class<?> controllerType = invocationInfo.getControllerType()__		Method method = invocationInfo.getControllerMethod()__		Object[] arguments = invocationInfo.getArgumentValues()__		return fromMethodInternal(builder, controllerType, method, arguments)__	};an,alternative,to,link,from,method,call,object,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,info,either,the,value,returned,from,a,mock,controller,invocation,or,the,mock,controller,itself,after,an,invocation,return,a,uri,components,instance;public,static,uri,components,builder,from,method,call,uri,components,builder,builder,object,info,assert,is,instance,of,method,invocation,info,class,info,method,invocation,info,invocation,info,method,invocation,info,info,class,controller,type,invocation,info,get,controller,type,method,method,invocation,info,get,controller,method,object,arguments,invocation,info,get,argument,values,return,from,method,internal,builder,controller,type,method,arguments
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodCall(UriComponentsBuilder builder, Object info);1485810955;An alternative to {@link #fromMethodCall(Object)} that accepts a_{@code UriComponentsBuilder} representing the base URL. This is useful_when using MvcUriComponentsBuilder outside the context of processing a_request or to apply a custom baseUrl not matching the current request._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param info either the value returned from a "mock" controller_invocation or the "mock" controller itself after an invocation_@return a UriComponents instance;public static UriComponentsBuilder fromMethodCall(UriComponentsBuilder builder, Object info) {_		Assert.isInstanceOf(MethodInvocationInfo.class, info, "MethodInvocationInfo required")__		MethodInvocationInfo invocationInfo = (MethodInvocationInfo) info__		Class<?> controllerType = invocationInfo.getControllerType()__		Method method = invocationInfo.getControllerMethod()__		Object[] arguments = invocationInfo.getArgumentValues()__		return fromMethodInternal(builder, controllerType, method, arguments)__	};an,alternative,to,link,from,method,call,object,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,info,either,the,value,returned,from,a,mock,controller,invocation,or,the,mock,controller,itself,after,an,invocation,return,a,uri,components,instance;public,static,uri,components,builder,from,method,call,uri,components,builder,builder,object,info,assert,is,instance,of,method,invocation,info,class,info,method,invocation,info,required,method,invocation,info,invocation,info,method,invocation,info,info,class,controller,type,invocation,info,get,controller,type,method,method,invocation,info,get,controller,method,object,arguments,invocation,info,get,argument,values,return,from,method,internal,builder,controller,type,method,arguments
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodCall(UriComponentsBuilder builder, Object info);1486634978;An alternative to {@link #fromMethodCall(Object)} that accepts a_{@code UriComponentsBuilder} representing the base URL. This is useful_when using MvcUriComponentsBuilder outside the context of processing a_request or to apply a custom baseUrl not matching the current request._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param info either the value returned from a "mock" controller_invocation or the "mock" controller itself after an invocation_@return a UriComponents instance;public static UriComponentsBuilder fromMethodCall(UriComponentsBuilder builder, Object info) {_		Assert.isInstanceOf(MethodInvocationInfo.class, info, "MethodInvocationInfo required")__		MethodInvocationInfo invocationInfo = (MethodInvocationInfo) info__		Class<?> controllerType = invocationInfo.getControllerType()__		Method method = invocationInfo.getControllerMethod()__		Object[] arguments = invocationInfo.getArgumentValues()__		return fromMethodInternal(builder, controllerType, method, arguments)__	};an,alternative,to,link,from,method,call,object,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,info,either,the,value,returned,from,a,mock,controller,invocation,or,the,mock,controller,itself,after,an,invocation,return,a,uri,components,instance;public,static,uri,components,builder,from,method,call,uri,components,builder,builder,object,info,assert,is,instance,of,method,invocation,info,class,info,method,invocation,info,required,method,invocation,info,invocation,info,method,invocation,info,info,class,controller,type,invocation,info,get,controller,type,method,method,invocation,info,get,controller,method,object,arguments,invocation,info,get,argument,values,return,from,method,internal,builder,controller,type,method,arguments
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodCall(UriComponentsBuilder builder, Object info);1486635693;An alternative to {@link #fromMethodCall(Object)} that accepts a_{@code UriComponentsBuilder} representing the base URL. This is useful_when using MvcUriComponentsBuilder outside the context of processing a_request or to apply a custom baseUrl not matching the current request._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param info either the value returned from a "mock" controller_invocation or the "mock" controller itself after an invocation_@return a UriComponents instance;public static UriComponentsBuilder fromMethodCall(UriComponentsBuilder builder, Object info) {_		Assert.isInstanceOf(MethodInvocationInfo.class, info, "MethodInvocationInfo required")__		MethodInvocationInfo invocationInfo = (MethodInvocationInfo) info__		Class<?> controllerType = invocationInfo.getControllerType()__		Method method = invocationInfo.getControllerMethod()__		Object[] arguments = invocationInfo.getArgumentValues()__		return fromMethodInternal(builder, controllerType, method, arguments)__	};an,alternative,to,link,from,method,call,object,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,info,either,the,value,returned,from,a,mock,controller,invocation,or,the,mock,controller,itself,after,an,invocation,return,a,uri,components,instance;public,static,uri,components,builder,from,method,call,uri,components,builder,builder,object,info,assert,is,instance,of,method,invocation,info,class,info,method,invocation,info,required,method,invocation,info,invocation,info,method,invocation,info,info,class,controller,type,invocation,info,get,controller,type,method,method,invocation,info,get,controller,method,object,arguments,invocation,info,get,argument,values,return,from,method,internal,builder,controller,type,method,arguments
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodCall(UriComponentsBuilder builder, Object info);1495868221;An alternative to {@link #fromMethodCall(Object)} that accepts a_{@code UriComponentsBuilder} representing the base URL. This is useful_when using MvcUriComponentsBuilder outside the context of processing a_request or to apply a custom baseUrl not matching the current request._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param info either the value returned from a "mock" controller_invocation or the "mock" controller itself after an invocation_@return a UriComponents instance;public static UriComponentsBuilder fromMethodCall(UriComponentsBuilder builder, Object info) {_		Assert.isInstanceOf(MethodInvocationInfo.class, info, "MethodInvocationInfo required")__		MethodInvocationInfo invocationInfo = (MethodInvocationInfo) info__		Class<?> controllerType = invocationInfo.getControllerType()__		Method method = invocationInfo.getControllerMethod()__		Object[] arguments = invocationInfo.getArgumentValues()__		return fromMethodInternal(builder, controllerType, method, arguments)__	};an,alternative,to,link,from,method,call,object,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,info,either,the,value,returned,from,a,mock,controller,invocation,or,the,mock,controller,itself,after,an,invocation,return,a,uri,components,instance;public,static,uri,components,builder,from,method,call,uri,components,builder,builder,object,info,assert,is,instance,of,method,invocation,info,class,info,method,invocation,info,required,method,invocation,info,invocation,info,method,invocation,info,info,class,controller,type,invocation,info,get,controller,type,method,method,invocation,info,get,controller,method,object,arguments,invocation,info,get,argument,values,return,from,method,internal,builder,controller,type,method,arguments
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodCall(UriComponentsBuilder builder, Object info);1496242568;An alternative to {@link #fromMethodCall(Object)} that accepts a_{@code UriComponentsBuilder} representing the base URL. This is useful_when using MvcUriComponentsBuilder outside the context of processing a_request or to apply a custom baseUrl not matching the current request._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param info either the value returned from a "mock" controller_invocation or the "mock" controller itself after an invocation_@return a UriComponents instance;public static UriComponentsBuilder fromMethodCall(UriComponentsBuilder builder, Object info) {_		Assert.isInstanceOf(MethodInvocationInfo.class, info, "MethodInvocationInfo required")__		MethodInvocationInfo invocationInfo = (MethodInvocationInfo) info__		Class<?> controllerType = invocationInfo.getControllerType()__		Method method = invocationInfo.getControllerMethod()__		Object[] arguments = invocationInfo.getArgumentValues()__		return fromMethodInternal(builder, controllerType, method, arguments)__	};an,alternative,to,link,from,method,call,object,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,info,either,the,value,returned,from,a,mock,controller,invocation,or,the,mock,controller,itself,after,an,invocation,return,a,uri,components,instance;public,static,uri,components,builder,from,method,call,uri,components,builder,builder,object,info,assert,is,instance,of,method,invocation,info,class,info,method,invocation,info,required,method,invocation,info,invocation,info,method,invocation,info,info,class,controller,type,invocation,info,get,controller,type,method,method,invocation,info,get,controller,method,object,arguments,invocation,info,get,argument,values,return,from,method,internal,builder,controller,type,method,arguments
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodCall(UriComponentsBuilder builder, Object info);1496259743;An alternative to {@link #fromMethodCall(Object)} that accepts a_{@code UriComponentsBuilder} representing the base URL. This is useful_when using MvcUriComponentsBuilder outside the context of processing a_request or to apply a custom baseUrl not matching the current request._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param info either the value returned from a "mock" controller_invocation or the "mock" controller itself after an invocation_@return a UriComponents instance;public static UriComponentsBuilder fromMethodCall(UriComponentsBuilder builder, Object info) {_		Assert.isInstanceOf(MethodInvocationInfo.class, info, "MethodInvocationInfo required")__		MethodInvocationInfo invocationInfo = (MethodInvocationInfo) info__		Class<?> controllerType = invocationInfo.getControllerType()__		Method method = invocationInfo.getControllerMethod()__		Object[] arguments = invocationInfo.getArgumentValues()__		return fromMethodInternal(builder, controllerType, method, arguments)__	};an,alternative,to,link,from,method,call,object,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,info,either,the,value,returned,from,a,mock,controller,invocation,or,the,mock,controller,itself,after,an,invocation,return,a,uri,components,instance;public,static,uri,components,builder,from,method,call,uri,components,builder,builder,object,info,assert,is,instance,of,method,invocation,info,class,info,method,invocation,info,required,method,invocation,info,invocation,info,method,invocation,info,info,class,controller,type,invocation,info,get,controller,type,method,method,invocation,info,get,controller,method,object,arguments,invocation,info,get,argument,values,return,from,method,internal,builder,controller,type,method,arguments
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodCall(UriComponentsBuilder builder, Object info);1496370972;An alternative to {@link #fromMethodCall(Object)} that accepts a_{@code UriComponentsBuilder} representing the base URL. This is useful_when using MvcUriComponentsBuilder outside the context of processing a_request or to apply a custom baseUrl not matching the current request._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param info either the value returned from a "mock" controller_invocation or the "mock" controller itself after an invocation_@return a UriComponents instance;public static UriComponentsBuilder fromMethodCall(UriComponentsBuilder builder, Object info) {_		Assert.isInstanceOf(MethodInvocationInfo.class, info, "MethodInvocationInfo required")__		MethodInvocationInfo invocationInfo = (MethodInvocationInfo) info__		Class<?> controllerType = invocationInfo.getControllerType()__		Method method = invocationInfo.getControllerMethod()__		Object[] arguments = invocationInfo.getArgumentValues()__		return fromMethodInternal(builder, controllerType, method, arguments)__	};an,alternative,to,link,from,method,call,object,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,info,either,the,value,returned,from,a,mock,controller,invocation,or,the,mock,controller,itself,after,an,invocation,return,a,uri,components,instance;public,static,uri,components,builder,from,method,call,uri,components,builder,builder,object,info,assert,is,instance,of,method,invocation,info,class,info,method,invocation,info,required,method,invocation,info,invocation,info,method,invocation,info,info,class,controller,type,invocation,info,get,controller,type,method,method,invocation,info,get,controller,method,object,arguments,invocation,info,get,argument,values,return,from,method,internal,builder,controller,type,method,arguments
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodCall(UriComponentsBuilder builder, Object info);1496837955;An alternative to {@link #fromMethodCall(Object)} that accepts a_{@code UriComponentsBuilder} representing the base URL. This is useful_when using MvcUriComponentsBuilder outside the context of processing a_request or to apply a custom baseUrl not matching the current request._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param info either the value returned from a "mock" controller_invocation or the "mock" controller itself after an invocation_@return a UriComponents instance;public static UriComponentsBuilder fromMethodCall(UriComponentsBuilder builder, Object info) {_		Assert.isInstanceOf(MethodInvocationInfo.class, info, "MethodInvocationInfo required")__		MethodInvocationInfo invocationInfo = (MethodInvocationInfo) info__		Class<?> controllerType = invocationInfo.getControllerType()__		Method method = invocationInfo.getControllerMethod()__		Object[] arguments = invocationInfo.getArgumentValues()__		return fromMethodInternal(builder, controllerType, method, arguments)__	};an,alternative,to,link,from,method,call,object,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,info,either,the,value,returned,from,a,mock,controller,invocation,or,the,mock,controller,itself,after,an,invocation,return,a,uri,components,instance;public,static,uri,components,builder,from,method,call,uri,components,builder,builder,object,info,assert,is,instance,of,method,invocation,info,class,info,method,invocation,info,required,method,invocation,info,invocation,info,method,invocation,info,info,class,controller,type,invocation,info,get,controller,type,method,method,invocation,info,get,controller,method,object,arguments,invocation,info,get,argument,values,return,from,method,internal,builder,controller,type,method,arguments
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodCall(UriComponentsBuilder builder, Object info);1497341397;An alternative to {@link #fromMethodCall(Object)} that accepts a_{@code UriComponentsBuilder} representing the base URL. This is useful_when using MvcUriComponentsBuilder outside the context of processing a_request or to apply a custom baseUrl not matching the current request._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param info either the value returned from a "mock" controller_invocation or the "mock" controller itself after an invocation_@return a UriComponents instance;public static UriComponentsBuilder fromMethodCall(UriComponentsBuilder builder, Object info) {_		Assert.isInstanceOf(MethodInvocationInfo.class, info, "MethodInvocationInfo required")__		MethodInvocationInfo invocationInfo = (MethodInvocationInfo) info__		Class<?> controllerType = invocationInfo.getControllerType()__		Method method = invocationInfo.getControllerMethod()__		Object[] arguments = invocationInfo.getArgumentValues()__		return fromMethodInternal(builder, controllerType, method, arguments)__	};an,alternative,to,link,from,method,call,object,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,info,either,the,value,returned,from,a,mock,controller,invocation,or,the,mock,controller,itself,after,an,invocation,return,a,uri,components,instance;public,static,uri,components,builder,from,method,call,uri,components,builder,builder,object,info,assert,is,instance,of,method,invocation,info,class,info,method,invocation,info,required,method,invocation,info,invocation,info,method,invocation,info,info,class,controller,type,invocation,info,get,controller,type,method,method,invocation,info,get,controller,method,object,arguments,invocation,info,get,argument,values,return,from,method,internal,builder,controller,type,method,arguments
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodCall(UriComponentsBuilder builder, Object info);1498780456;An alternative to {@link #fromMethodCall(Object)} that accepts a_{@code UriComponentsBuilder} representing the base URL. This is useful_when using MvcUriComponentsBuilder outside the context of processing a_request or to apply a custom baseUrl not matching the current request._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param info either the value returned from a "mock" controller_invocation or the "mock" controller itself after an invocation_@return a UriComponents instance;public static UriComponentsBuilder fromMethodCall(UriComponentsBuilder builder, Object info) {_		Assert.isInstanceOf(MethodInvocationInfo.class, info, "MethodInvocationInfo required")__		MethodInvocationInfo invocationInfo = (MethodInvocationInfo) info__		Class<?> controllerType = invocationInfo.getControllerType()__		Method method = invocationInfo.getControllerMethod()__		Object[] arguments = invocationInfo.getArgumentValues()__		return fromMethodInternal(builder, controllerType, method, arguments)__	};an,alternative,to,link,from,method,call,object,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,info,either,the,value,returned,from,a,mock,controller,invocation,or,the,mock,controller,itself,after,an,invocation,return,a,uri,components,instance;public,static,uri,components,builder,from,method,call,uri,components,builder,builder,object,info,assert,is,instance,of,method,invocation,info,class,info,method,invocation,info,required,method,invocation,info,invocation,info,method,invocation,info,info,class,controller,type,invocation,info,get,controller,type,method,method,invocation,info,get,controller,method,object,arguments,invocation,info,get,argument,values,return,from,method,internal,builder,controller,type,method,arguments
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodCall(UriComponentsBuilder builder, Object info);1500416137;An alternative to {@link #fromMethodCall(Object)} that accepts a_{@code UriComponentsBuilder} representing the base URL. This is useful_when using MvcUriComponentsBuilder outside the context of processing a_request or to apply a custom baseUrl not matching the current request._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param info either the value returned from a "mock" controller_invocation or the "mock" controller itself after an invocation_@return a UriComponents instance;public static UriComponentsBuilder fromMethodCall(UriComponentsBuilder builder, Object info) {_		Assert.isInstanceOf(MethodInvocationInfo.class, info, "MethodInvocationInfo required")__		MethodInvocationInfo invocationInfo = (MethodInvocationInfo) info__		Class<?> controllerType = invocationInfo.getControllerType()__		Method method = invocationInfo.getControllerMethod()__		Object[] arguments = invocationInfo.getArgumentValues()__		return fromMethodInternal(builder, controllerType, method, arguments)__	};an,alternative,to,link,from,method,call,object,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,info,either,the,value,returned,from,a,mock,controller,invocation,or,the,mock,controller,itself,after,an,invocation,return,a,uri,components,instance;public,static,uri,components,builder,from,method,call,uri,components,builder,builder,object,info,assert,is,instance,of,method,invocation,info,class,info,method,invocation,info,required,method,invocation,info,invocation,info,method,invocation,info,info,class,controller,type,invocation,info,get,controller,type,method,method,invocation,info,get,controller,method,object,arguments,invocation,info,get,argument,values,return,from,method,internal,builder,controller,type,method,arguments
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodCall(UriComponentsBuilder builder, Object info);1506097334;An alternative to {@link #fromMethodCall(Object)} that accepts a_{@code UriComponentsBuilder} representing the base URL. This is useful_when using MvcUriComponentsBuilder outside the context of processing a_request or to apply a custom baseUrl not matching the current request._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param info either the value returned from a "mock" controller_invocation or the "mock" controller itself after an invocation_@return a UriComponents instance;public static UriComponentsBuilder fromMethodCall(UriComponentsBuilder builder, Object info) {_		Assert.isInstanceOf(MethodInvocationInfo.class, info, "MethodInvocationInfo required")__		MethodInvocationInfo invocationInfo = (MethodInvocationInfo) info__		Class<?> controllerType = invocationInfo.getControllerType()__		Method method = invocationInfo.getControllerMethod()__		Object[] arguments = invocationInfo.getArgumentValues()__		return fromMethodInternal(builder, controllerType, method, arguments)__	};an,alternative,to,link,from,method,call,object,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,info,either,the,value,returned,from,a,mock,controller,invocation,or,the,mock,controller,itself,after,an,invocation,return,a,uri,components,instance;public,static,uri,components,builder,from,method,call,uri,components,builder,builder,object,info,assert,is,instance,of,method,invocation,info,class,info,method,invocation,info,required,method,invocation,info,invocation,info,method,invocation,info,info,class,controller,type,invocation,info,get,controller,type,method,method,invocation,info,get,controller,method,object,arguments,invocation,info,get,argument,values,return,from,method,internal,builder,controller,type,method,arguments
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodCall(UriComponentsBuilder builder, Object info);1518770299;An alternative to {@link #fromMethodCall(Object)} that accepts a_{@code UriComponentsBuilder} representing the base URL. This is useful_when using MvcUriComponentsBuilder outside the context of processing a_request or to apply a custom baseUrl not matching the current request._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param info either the value returned from a "mock" controller_invocation or the "mock" controller itself after an invocation_@return a UriComponents instance;public static UriComponentsBuilder fromMethodCall(UriComponentsBuilder builder, Object info) {_		Assert.isInstanceOf(MethodInvocationInfo.class, info, "MethodInvocationInfo required")__		MethodInvocationInfo invocationInfo = (MethodInvocationInfo) info__		Class<?> controllerType = invocationInfo.getControllerType()__		Method method = invocationInfo.getControllerMethod()__		Object[] arguments = invocationInfo.getArgumentValues()__		return fromMethodInternal(builder, controllerType, method, arguments)__	};an,alternative,to,link,from,method,call,object,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,info,either,the,value,returned,from,a,mock,controller,invocation,or,the,mock,controller,itself,after,an,invocation,return,a,uri,components,instance;public,static,uri,components,builder,from,method,call,uri,components,builder,builder,object,info,assert,is,instance,of,method,invocation,info,class,info,method,invocation,info,required,method,invocation,info,invocation,info,method,invocation,info,info,class,controller,type,invocation,info,get,controller,type,method,method,invocation,info,get,controller,method,object,arguments,invocation,info,get,argument,values,return,from,method,internal,builder,controller,type,method,arguments
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodCall(UriComponentsBuilder builder, Object info);1522354261;An alternative to {@link #fromMethodCall(Object)} that accepts a_{@code UriComponentsBuilder} representing the base URL. This is useful_when using MvcUriComponentsBuilder outside the context of processing a_request or to apply a custom baseUrl not matching the current request._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param info either the value returned from a "mock" controller_invocation or the "mock" controller itself after an invocation_@return a UriComponents instance;public static UriComponentsBuilder fromMethodCall(UriComponentsBuilder builder, Object info) {_		Assert.isInstanceOf(MethodInvocationInfo.class, info, "MethodInvocationInfo required")__		MethodInvocationInfo invocationInfo = (MethodInvocationInfo) info__		Class<?> controllerType = invocationInfo.getControllerType()__		Method method = invocationInfo.getControllerMethod()__		Object[] arguments = invocationInfo.getArgumentValues()__		return fromMethodInternal(builder, controllerType, method, arguments)__	};an,alternative,to,link,from,method,call,object,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,info,either,the,value,returned,from,a,mock,controller,invocation,or,the,mock,controller,itself,after,an,invocation,return,a,uri,components,instance;public,static,uri,components,builder,from,method,call,uri,components,builder,builder,object,info,assert,is,instance,of,method,invocation,info,class,info,method,invocation,info,required,method,invocation,info,invocation,info,method,invocation,info,info,class,controller,type,invocation,info,get,controller,type,method,method,invocation,info,get,controller,method,object,arguments,invocation,info,get,argument,values,return,from,method,internal,builder,controller,type,method,arguments
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodCall(UriComponentsBuilder builder, Object info);1523455554;An alternative to {@link #fromMethodCall(Object)} that accepts a_{@code UriComponentsBuilder} representing the base URL. This is useful_when using MvcUriComponentsBuilder outside the context of processing a_request or to apply a custom baseUrl not matching the current request._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param info either the value returned from a "mock" controller_invocation or the "mock" controller itself after an invocation_@return a UriComponents instance;public static UriComponentsBuilder fromMethodCall(UriComponentsBuilder builder, Object info) {_		Assert.isInstanceOf(MethodInvocationInfo.class, info, "MethodInvocationInfo required")__		MethodInvocationInfo invocationInfo = (MethodInvocationInfo) info__		Class<?> controllerType = invocationInfo.getControllerType()__		Method method = invocationInfo.getControllerMethod()__		Object[] arguments = invocationInfo.getArgumentValues()__		return fromMethodInternal(builder, controllerType, method, arguments)__	};an,alternative,to,link,from,method,call,object,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,info,either,the,value,returned,from,a,mock,controller,invocation,or,the,mock,controller,itself,after,an,invocation,return,a,uri,components,instance;public,static,uri,components,builder,from,method,call,uri,components,builder,builder,object,info,assert,is,instance,of,method,invocation,info,class,info,method,invocation,info,required,method,invocation,info,invocation,info,method,invocation,info,info,class,controller,type,invocation,info,get,controller,type,method,method,invocation,info,get,controller,method,object,arguments,invocation,info,get,argument,values,return,from,method,internal,builder,controller,type,method,arguments
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodCall(UriComponentsBuilder builder, Object info);1529028426;An alternative to {@link #fromMethodCall(Object)} that accepts a_{@code UriComponentsBuilder} representing the base URL. This is useful_when using MvcUriComponentsBuilder outside the context of processing a_request or to apply a custom baseUrl not matching the current request._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param info either the value returned from a "mock" controller_invocation or the "mock" controller itself after an invocation_@return a UriComponents instance;public static UriComponentsBuilder fromMethodCall(UriComponentsBuilder builder, Object info) {_		Assert.isInstanceOf(MethodInvocationInfo.class, info, "MethodInvocationInfo required")__		MethodInvocationInfo invocationInfo = (MethodInvocationInfo) info__		Class<?> controllerType = invocationInfo.getControllerType()__		Method method = invocationInfo.getControllerMethod()__		Object[] arguments = invocationInfo.getArgumentValues()__		return fromMethodInternal(builder, controllerType, method, arguments)__	};an,alternative,to,link,from,method,call,object,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,info,either,the,value,returned,from,a,mock,controller,invocation,or,the,mock,controller,itself,after,an,invocation,return,a,uri,components,instance;public,static,uri,components,builder,from,method,call,uri,components,builder,builder,object,info,assert,is,instance,of,method,invocation,info,class,info,method,invocation,info,required,method,invocation,info,invocation,info,method,invocation,info,info,class,controller,type,invocation,info,get,controller,type,method,method,invocation,info,get,controller,method,object,arguments,invocation,info,get,argument,values,return,from,method,internal,builder,controller,type,method,arguments
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodCall(UriComponentsBuilder builder, Object info);1529028426;An alternative to {@link #fromMethodCall(Object)} that accepts a_{@code UriComponentsBuilder} representing the base URL. This is useful_when using MvcUriComponentsBuilder outside the context of processing a_request or to apply a custom baseUrl not matching the current request._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param info either the value returned from a "mock" controller_invocation or the "mock" controller itself after an invocation_@return a UriComponents instance;public static UriComponentsBuilder fromMethodCall(UriComponentsBuilder builder, Object info) {_		Assert.isInstanceOf(MethodInvocationInfo.class, info, "MethodInvocationInfo required")__		MethodInvocationInfo invocationInfo = (MethodInvocationInfo) info__		Class<?> controllerType = invocationInfo.getControllerType()__		Method method = invocationInfo.getControllerMethod()__		Object[] arguments = invocationInfo.getArgumentValues()__		return fromMethodInternal(builder, controllerType, method, arguments)__	};an,alternative,to,link,from,method,call,object,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,info,either,the,value,returned,from,a,mock,controller,invocation,or,the,mock,controller,itself,after,an,invocation,return,a,uri,components,instance;public,static,uri,components,builder,from,method,call,uri,components,builder,builder,object,info,assert,is,instance,of,method,invocation,info,class,info,method,invocation,info,required,method,invocation,info,invocation,info,method,invocation,info,info,class,controller,type,invocation,info,get,controller,type,method,method,invocation,info,get,controller,method,object,arguments,invocation,info,get,argument,values,return,from,method,internal,builder,controller,type,method,arguments
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodCall(UriComponentsBuilder builder, Object info);1529028713;An alternative to {@link #fromMethodCall(Object)} that accepts a_{@code UriComponentsBuilder} representing the base URL. This is useful_when using MvcUriComponentsBuilder outside the context of processing a_request or to apply a custom baseUrl not matching the current request._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param info either the value returned from a "mock" controller_invocation or the "mock" controller itself after an invocation_@return a UriComponents instance;public static UriComponentsBuilder fromMethodCall(UriComponentsBuilder builder, Object info) {_		Assert.isInstanceOf(MethodInvocationInfo.class, info, "MethodInvocationInfo required")__		MethodInvocationInfo invocationInfo = (MethodInvocationInfo) info__		Class<?> controllerType = invocationInfo.getControllerType()__		Method method = invocationInfo.getControllerMethod()__		Object[] arguments = invocationInfo.getArgumentValues()__		return fromMethodInternal(builder, controllerType, method, arguments)__	};an,alternative,to,link,from,method,call,object,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,info,either,the,value,returned,from,a,mock,controller,invocation,or,the,mock,controller,itself,after,an,invocation,return,a,uri,components,instance;public,static,uri,components,builder,from,method,call,uri,components,builder,builder,object,info,assert,is,instance,of,method,invocation,info,class,info,method,invocation,info,required,method,invocation,info,invocation,info,method,invocation,info,info,class,controller,type,invocation,info,get,controller,type,method,method,invocation,info,get,controller,method,object,arguments,invocation,info,get,argument,values,return,from,method,internal,builder,controller,type,method,arguments
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodCall(UriComponentsBuilder builder, Object info);1529361191;An alternative to {@link #fromMethodCall(Object)} that accepts a_{@code UriComponentsBuilder} representing the base URL. This is useful_when using MvcUriComponentsBuilder outside the context of processing a_request or to apply a custom baseUrl not matching the current request._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param info either the value returned from a "mock" controller_invocation or the "mock" controller itself after an invocation_@return a UriComponents instance;public static UriComponentsBuilder fromMethodCall(UriComponentsBuilder builder, Object info) {_		Assert.isInstanceOf(MethodInvocationInfo.class, info, "MethodInvocationInfo required")__		MethodInvocationInfo invocationInfo = (MethodInvocationInfo) info__		Class<?> controllerType = invocationInfo.getControllerType()__		Method method = invocationInfo.getControllerMethod()__		Object[] arguments = invocationInfo.getArgumentValues()__		return fromMethodInternal(builder, controllerType, method, arguments)__	};an,alternative,to,link,from,method,call,object,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,info,either,the,value,returned,from,a,mock,controller,invocation,or,the,mock,controller,itself,after,an,invocation,return,a,uri,components,instance;public,static,uri,components,builder,from,method,call,uri,components,builder,builder,object,info,assert,is,instance,of,method,invocation,info,class,info,method,invocation,info,required,method,invocation,info,invocation,info,method,invocation,info,info,class,controller,type,invocation,info,get,controller,type,method,method,invocation,info,get,controller,method,object,arguments,invocation,info,get,argument,values,return,from,method,internal,builder,controller,type,method,arguments
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodCall(UriComponentsBuilder builder, Object info);1530174524;An alternative to {@link #fromMethodCall(Object)} that accepts a_{@code UriComponentsBuilder} representing the base URL. This is useful_when using MvcUriComponentsBuilder outside the context of processing a_request or to apply a custom baseUrl not matching the current request._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param info either the value returned from a "mock" controller_invocation or the "mock" controller itself after an invocation_@return a UriComponents instance;public static UriComponentsBuilder fromMethodCall(UriComponentsBuilder builder, Object info) {_		Assert.isInstanceOf(MethodInvocationInfo.class, info, "MethodInvocationInfo required")__		MethodInvocationInfo invocationInfo = (MethodInvocationInfo) info__		Class<?> controllerType = invocationInfo.getControllerType()__		Method method = invocationInfo.getControllerMethod()__		Object[] arguments = invocationInfo.getArgumentValues()__		return fromMethodInternal(builder, controllerType, method, arguments)__	};an,alternative,to,link,from,method,call,object,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,info,either,the,value,returned,from,a,mock,controller,invocation,or,the,mock,controller,itself,after,an,invocation,return,a,uri,components,instance;public,static,uri,components,builder,from,method,call,uri,components,builder,builder,object,info,assert,is,instance,of,method,invocation,info,class,info,method,invocation,info,required,method,invocation,info,invocation,info,method,invocation,info,info,class,controller,type,invocation,info,get,controller,type,method,method,invocation,info,get,controller,method,object,arguments,invocation,info,get,argument,values,return,from,method,internal,builder,controller,type,method,arguments
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodCall(UriComponentsBuilder builder, Object info);1532041662;An alternative to {@link #fromMethodCall(Object)} that accepts a_{@code UriComponentsBuilder} representing the base URL. This is useful_when using MvcUriComponentsBuilder outside the context of processing a_request or to apply a custom baseUrl not matching the current request._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param info either the value returned from a "mock" controller_invocation or the "mock" controller itself after an invocation_@return a UriComponents instance;public static UriComponentsBuilder fromMethodCall(UriComponentsBuilder builder, Object info) {_		Assert.isInstanceOf(MethodInvocationInfo.class, info, "MethodInvocationInfo required")__		MethodInvocationInfo invocationInfo = (MethodInvocationInfo) info__		Class<?> controllerType = invocationInfo.getControllerType()__		Method method = invocationInfo.getControllerMethod()__		Object[] arguments = invocationInfo.getArgumentValues()__		return fromMethodInternal(builder, controllerType, method, arguments)__	};an,alternative,to,link,from,method,call,object,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,info,either,the,value,returned,from,a,mock,controller,invocation,or,the,mock,controller,itself,after,an,invocation,return,a,uri,components,instance;public,static,uri,components,builder,from,method,call,uri,components,builder,builder,object,info,assert,is,instance,of,method,invocation,info,class,info,method,invocation,info,required,method,invocation,info,invocation,info,method,invocation,info,info,class,controller,type,invocation,info,get,controller,type,method,method,invocation,info,get,controller,method,object,arguments,invocation,info,get,argument,values,return,from,method,internal,builder,controller,type,method,arguments
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodCall(UriComponentsBuilder builder, Object info);1532041662;An alternative to {@link #fromMethodCall(Object)} that accepts a_{@code UriComponentsBuilder} representing the base URL. This is useful_when using MvcUriComponentsBuilder outside the context of processing a_request or to apply a custom baseUrl not matching the current request._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param info either the value returned from a "mock" controller_invocation or the "mock" controller itself after an invocation_@return a UriComponents instance;public static UriComponentsBuilder fromMethodCall(UriComponentsBuilder builder, Object info) {_		Assert.isInstanceOf(MethodInvocationInfo.class, info, "MethodInvocationInfo required")__		MethodInvocationInfo invocationInfo = (MethodInvocationInfo) info__		Class<?> controllerType = invocationInfo.getControllerType()__		Method method = invocationInfo.getControllerMethod()__		Object[] arguments = invocationInfo.getArgumentValues()__		return fromMethodInternal(builder, controllerType, method, arguments)__	};an,alternative,to,link,from,method,call,object,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,info,either,the,value,returned,from,a,mock,controller,invocation,or,the,mock,controller,itself,after,an,invocation,return,a,uri,components,instance;public,static,uri,components,builder,from,method,call,uri,components,builder,builder,object,info,assert,is,instance,of,method,invocation,info,class,info,method,invocation,info,required,method,invocation,info,invocation,info,method,invocation,info,info,class,controller,type,invocation,info,get,controller,type,method,method,invocation,info,get,controller,method,object,arguments,invocation,info,get,argument,values,return,from,method,internal,builder,controller,type,method,arguments
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodCall(UriComponentsBuilder builder, Object info);1548943222;An alternative to {@link #fromMethodCall(Object)} that accepts a_{@code UriComponentsBuilder} representing the base URL. This is useful_when using MvcUriComponentsBuilder outside the context of processing a_request or to apply a custom baseUrl not matching the current request._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param info either the value returned from a "mock" controller_invocation or the "mock" controller itself after an invocation_@return a UriComponents instance;public static UriComponentsBuilder fromMethodCall(UriComponentsBuilder builder, Object info) {_		Assert.isInstanceOf(MethodInvocationInfo.class, info, "MethodInvocationInfo required")__		MethodInvocationInfo invocationInfo = (MethodInvocationInfo) info__		Class<?> controllerType = invocationInfo.getControllerType()__		Method method = invocationInfo.getControllerMethod()__		Object[] arguments = invocationInfo.getArgumentValues()__		return fromMethodInternal(builder, controllerType, method, arguments)__	};an,alternative,to,link,from,method,call,object,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,info,either,the,value,returned,from,a,mock,controller,invocation,or,the,mock,controller,itself,after,an,invocation,return,a,uri,components,instance;public,static,uri,components,builder,from,method,call,uri,components,builder,builder,object,info,assert,is,instance,of,method,invocation,info,class,info,method,invocation,info,required,method,invocation,info,invocation,info,method,invocation,info,info,class,controller,type,invocation,info,get,controller,type,method,method,invocation,info,get,controller,method,object,arguments,invocation,info,get,argument,values,return,from,method,internal,builder,controller,type,method,arguments
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodName(Class<?> controllerType, String methodName, Object... argumentValues);1387386512;Create a {@link UriComponentsBuilder} by pointing to a controller method and_providing method argument values. The method is matched based on the provided_method name and the number of argument values. If that results in a clash_(i.e. overloaded methods with the same number of parameters), use_{@link #fromMethod(java.lang.reflect.Method, Object...)} instead._<p>The argument values are used to prepare the URI for example expanding_path variables, or adding query parameters. Any other arguments not_relevant to the URI can be provided as {@literal null} and will be ignored._<p>Additional (custom) argument types can be supported through an implementation_of {@link org.springframework.web.method.support.UriComponentsContributor}._@param controllerType the target controller type_@param methodName the target method name_@param argumentValues argument values matching to method parameters_@return a UriComponentsBuilder instance;public static UriComponentsBuilder fromMethodName(Class<?> controllerType, String methodName, Object... argumentValues) {_		Method match = null__		for (Method method : controllerType.getDeclaredMethods()) {_			if (method.getName().equals(methodName) && method.getParameterTypes().length == argumentValues.length) {_				if (match != null) {_					throw new IllegalStateException("Found two methods named '" + methodName + "' having " +_							Arrays.asList(argumentValues) + " arguments, controller " + controllerType.getName())__				}_				match = method__			}_		}_		if (match == null) {_			throw new IllegalArgumentException("No method '" + methodName + "' with " + argumentValues.length +_					" parameters found in " + controllerType.getName())__		}_		return fromMethod(match, argumentValues)__	};create,a,link,uri,components,builder,by,pointing,to,a,controller,method,and,providing,method,argument,values,the,method,is,matched,based,on,the,provided,method,name,and,the,number,of,argument,values,if,that,results,in,a,clash,i,e,overloaded,methods,with,the,same,number,of,parameters,use,link,from,method,java,lang,reflect,method,object,instead,p,the,argument,values,are,used,to,prepare,the,uri,for,example,expanding,path,variables,or,adding,query,parameters,any,other,arguments,not,relevant,to,the,uri,can,be,provided,as,literal,null,and,will,be,ignored,p,additional,custom,argument,types,can,be,supported,through,an,implementation,of,link,org,springframework,web,method,support,uri,components,contributor,param,controller,type,the,target,controller,type,param,method,name,the,target,method,name,param,argument,values,argument,values,matching,to,method,parameters,return,a,uri,components,builder,instance;public,static,uri,components,builder,from,method,name,class,controller,type,string,method,name,object,argument,values,method,match,null,for,method,method,controller,type,get,declared,methods,if,method,get,name,equals,method,name,method,get,parameter,types,length,argument,values,length,if,match,null,throw,new,illegal,state,exception,found,two,methods,named,method,name,having,arrays,as,list,argument,values,arguments,controller,controller,type,get,name,match,method,if,match,null,throw,new,illegal,argument,exception,no,method,method,name,with,argument,values,length,parameters,found,in,controller,type,get,name,return,from,method,match,argument,values
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodName(Class<?> controllerType, String methodName, Object... argumentValues);1391714711;Create a {@link UriComponentsBuilder} by pointing to a controller method and_providing method argument values. The method is matched based on the provided_method name and the number of argument values. If that results in a clash_(i.e. overloaded methods with the same number of parameters), use_{@link #fromMethod(java.lang.reflect.Method, Object...)} instead._<p>The argument values are used to prepare the URI for example expanding_path variables, or adding query parameters. Any other arguments not_relevant to the URI can be provided as {@literal null} and will be ignored._<p>Additional (custom) argument types can be supported through an implementation_of {@link org.springframework.web.method.support.UriComponentsContributor}._@param controllerType the target controller type_@param methodName the target method name_@param argumentValues argument values matching to method parameters_@return a UriComponentsBuilder instance;public static UriComponentsBuilder fromMethodName(Class<?> controllerType, String methodName, Object... argumentValues) {_		Method match = null__		for (Method method : controllerType.getDeclaredMethods()) {_			if (method.getName().equals(methodName) && method.getParameterTypes().length == argumentValues.length) {_				if (match != null) {_					throw new IllegalStateException("Found two methods named '" + methodName + "' having " +_							Arrays.asList(argumentValues) + " arguments, controller " + controllerType.getName())__				}_				match = method__			}_		}_		if (match == null) {_			throw new IllegalArgumentException("No method '" + methodName + "' with " + argumentValues.length +_					" parameters found in " + controllerType.getName())__		}_		return fromMethod(match, argumentValues)__	};create,a,link,uri,components,builder,by,pointing,to,a,controller,method,and,providing,method,argument,values,the,method,is,matched,based,on,the,provided,method,name,and,the,number,of,argument,values,if,that,results,in,a,clash,i,e,overloaded,methods,with,the,same,number,of,parameters,use,link,from,method,java,lang,reflect,method,object,instead,p,the,argument,values,are,used,to,prepare,the,uri,for,example,expanding,path,variables,or,adding,query,parameters,any,other,arguments,not,relevant,to,the,uri,can,be,provided,as,literal,null,and,will,be,ignored,p,additional,custom,argument,types,can,be,supported,through,an,implementation,of,link,org,springframework,web,method,support,uri,components,contributor,param,controller,type,the,target,controller,type,param,method,name,the,target,method,name,param,argument,values,argument,values,matching,to,method,parameters,return,a,uri,components,builder,instance;public,static,uri,components,builder,from,method,name,class,controller,type,string,method,name,object,argument,values,method,match,null,for,method,method,controller,type,get,declared,methods,if,method,get,name,equals,method,name,method,get,parameter,types,length,argument,values,length,if,match,null,throw,new,illegal,state,exception,found,two,methods,named,method,name,having,arrays,as,list,argument,values,arguments,controller,controller,type,get,name,match,method,if,match,null,throw,new,illegal,argument,exception,no,method,method,name,with,argument,values,length,parameters,found,in,controller,type,get,name,return,from,method,match,argument,values
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodName(Class<?> controllerType, String methodName, Object... argumentValues);1391723719;Create a {@link UriComponentsBuilder} from the mapping of a controller method_and an array of method argument values. This method delegates to_{@link #fromMethod(java.lang.reflect.Method, Object...)}.__@param controllerType the controller_@param methodName the method name_@param argumentValues the argument values_@return a UriComponentsBuilder instance, never {@code null}__@throws java.lang.IllegalStateException if there is no matching or more than_one matching method.;public static UriComponentsBuilder fromMethodName(Class<?> controllerType, String methodName, Object... argumentValues) {_		Method method = getMethod(controllerType, methodName, argumentValues)__		return fromMethod(method, argumentValues)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,method,and,an,array,of,method,argument,values,this,method,delegates,to,link,from,method,java,lang,reflect,method,object,param,controller,type,the,controller,param,method,name,the,method,name,param,argument,values,the,argument,values,return,a,uri,components,builder,instance,never,code,null,throws,java,lang,illegal,state,exception,if,there,is,no,matching,or,more,than,one,matching,method;public,static,uri,components,builder,from,method,name,class,controller,type,string,method,name,object,argument,values,method,method,get,method,controller,type,method,name,argument,values,return,from,method,method,argument,values
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodName(Class<?> controllerType, String methodName, Object... argumentValues);1391723719;Create a {@link UriComponentsBuilder} from the mapping of a controller method_and an array of method argument values. This method delegates to_{@link #fromMethod(java.lang.reflect.Method, Object...)}.__@param controllerType the controller_@param methodName the method name_@param argumentValues the argument values_@return a UriComponentsBuilder instance, never {@code null}__@throws java.lang.IllegalStateException if there is no matching or more than_one matching method.;public static UriComponentsBuilder fromMethodName(Class<?> controllerType, String methodName, Object... argumentValues) {_		Method method = getMethod(controllerType, methodName, argumentValues)__		return fromMethod(method, argumentValues)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,method,and,an,array,of,method,argument,values,this,method,delegates,to,link,from,method,java,lang,reflect,method,object,param,controller,type,the,controller,param,method,name,the,method,name,param,argument,values,the,argument,values,return,a,uri,components,builder,instance,never,code,null,throws,java,lang,illegal,state,exception,if,there,is,no,matching,or,more,than,one,matching,method;public,static,uri,components,builder,from,method,name,class,controller,type,string,method,name,object,argument,values,method,method,get,method,controller,type,method,name,argument,values,return,from,method,method,argument,values
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodName(Class<?> controllerType, String methodName, Object... argumentValues);1399404473;Create a {@link UriComponentsBuilder} from the mapping of a controller method_and an array of method argument values. This method delegates to_{@link #fromMethod(java.lang.reflect.Method, Object...)}.__@param controllerType the controller_@param methodName the method name_@param argumentValues the argument values_@return a UriComponentsBuilder instance, never {@code null}__@throws java.lang.IllegalStateException if there is no matching or more than_one matching method.;public static UriComponentsBuilder fromMethodName(Class<?> controllerType, String methodName, Object... argumentValues) {_		Method method = getMethod(controllerType, methodName, argumentValues)__		return fromMethod(method, argumentValues)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,method,and,an,array,of,method,argument,values,this,method,delegates,to,link,from,method,java,lang,reflect,method,object,param,controller,type,the,controller,param,method,name,the,method,name,param,argument,values,the,argument,values,return,a,uri,components,builder,instance,never,code,null,throws,java,lang,illegal,state,exception,if,there,is,no,matching,or,more,than,one,matching,method;public,static,uri,components,builder,from,method,name,class,controller,type,string,method,name,object,argument,values,method,method,get,method,controller,type,method,name,argument,values,return,from,method,method,argument,values
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodName(Class<?> controllerType, String methodName, Object... argumentValues);1400538909;Create a {@link UriComponentsBuilder} from the mapping of a controller method_and an array of method argument values. This method delegates to_{@link #fromMethod(java.lang.reflect.Method, Object...)}._@param controllerType the controller_@param methodName the method name_@param argumentValues the argument values_@return a UriComponentsBuilder instance, never {@code null}_@throws IllegalStateException if there is no matching or more than one matching method;public static UriComponentsBuilder fromMethodName(Class<?> controllerType, String methodName, Object... argumentValues) {_		Method method = getMethod(controllerType, methodName, argumentValues)__		return fromMethod(method, argumentValues)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,method,and,an,array,of,method,argument,values,this,method,delegates,to,link,from,method,java,lang,reflect,method,object,param,controller,type,the,controller,param,method,name,the,method,name,param,argument,values,the,argument,values,return,a,uri,components,builder,instance,never,code,null,throws,illegal,state,exception,if,there,is,no,matching,or,more,than,one,matching,method;public,static,uri,components,builder,from,method,name,class,controller,type,string,method,name,object,argument,values,method,method,get,method,controller,type,method,name,argument,values,return,from,method,method,argument,values
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodName(Class<?> controllerType, String methodName, Object... argumentValues);1400542981;Create a {@link UriComponentsBuilder} from the mapping of a controller_method and an array of method argument values. This method delegates_to {@link #fromMethod(java.lang.reflect.Method, Object...)}._@param controllerType the controller_@param methodName the method name_@param argumentValues the argument values_@return a UriComponentsBuilder instance, never {@code null}_@throws IllegalArgumentException if there is no matching or_if there is more than one matching method;public static UriComponentsBuilder fromMethodName(Class<?> controllerType, String methodName, Object... argumentValues) {_		Method method = getMethod(controllerType, methodName, argumentValues)__		return fromMethod(method, argumentValues)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,method,and,an,array,of,method,argument,values,this,method,delegates,to,link,from,method,java,lang,reflect,method,object,param,controller,type,the,controller,param,method,name,the,method,name,param,argument,values,the,argument,values,return,a,uri,components,builder,instance,never,code,null,throws,illegal,argument,exception,if,there,is,no,matching,or,if,there,is,more,than,one,matching,method;public,static,uri,components,builder,from,method,name,class,controller,type,string,method,name,object,argument,values,method,method,get,method,controller,type,method,name,argument,values,return,from,method,method,argument,values
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodName(Class<?> controllerType, String methodName, Object... argumentValues);1402438271;Create a {@link UriComponentsBuilder} from the mapping of a controller_method and an array of method argument values. This method delegates_to {@link #fromMethod(java.lang.reflect.Method, Object...)}._@param controllerType the controller_@param methodName the method name_@param argumentValues the argument values_@return a UriComponentsBuilder instance, never {@code null}_@throws IllegalArgumentException if there is no matching or_if there is more than one matching method;public static UriComponentsBuilder fromMethodName(Class<?> controllerType, String methodName, Object... argumentValues) {_		Method method = getMethod(controllerType, methodName, argumentValues)__		return fromMethod(method, argumentValues)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,method,and,an,array,of,method,argument,values,this,method,delegates,to,link,from,method,java,lang,reflect,method,object,param,controller,type,the,controller,param,method,name,the,method,name,param,argument,values,the,argument,values,return,a,uri,components,builder,instance,never,code,null,throws,illegal,argument,exception,if,there,is,no,matching,or,if,there,is,more,than,one,matching,method;public,static,uri,components,builder,from,method,name,class,controller,type,string,method,name,object,argument,values,method,method,get,method,controller,type,method,name,argument,values,return,from,method,method,argument,values
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodName(Class<?> controllerType, String methodName, Object... argumentValues);1413848647;Create a {@link UriComponentsBuilder} from the mapping of a controller_method and an array of method argument values. This method delegates_to {@link #fromMethod(java.lang.reflect.Method, Object...)}._@param controllerType the controller_@param methodName the method name_@param argumentValues the argument values_@return a UriComponentsBuilder instance, never {@code null}_@throws IllegalArgumentException if there is no matching or_if there is more than one matching method;public static UriComponentsBuilder fromMethodName(Class<?> controllerType, String methodName, Object... argumentValues) {_		Method method = getMethod(controllerType, methodName, argumentValues)__		return fromMethod(method, argumentValues)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,method,and,an,array,of,method,argument,values,this,method,delegates,to,link,from,method,java,lang,reflect,method,object,param,controller,type,the,controller,param,method,name,the,method,name,param,argument,values,the,argument,values,return,a,uri,components,builder,instance,never,code,null,throws,illegal,argument,exception,if,there,is,no,matching,or,if,there,is,more,than,one,matching,method;public,static,uri,components,builder,from,method,name,class,controller,type,string,method,name,object,argument,values,method,method,get,method,controller,type,method,name,argument,values,return,from,method,method,argument,values
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodName(Class<?> controllerType, String methodName, Object... argumentValues);1417799775;Create a {@link UriComponentsBuilder} from the mapping of a controller_method and an array of method argument values. This method delegates_to {@link #fromMethod(java.lang.reflect.Method, Object...)}._@param controllerType the controller_@param methodName the method name_@param argumentValues the argument values_@return a UriComponentsBuilder instance, never {@code null}_@throws IllegalArgumentException if there is no matching or_if there is more than one matching method;public static UriComponentsBuilder fromMethodName(Class<?> controllerType, String methodName, Object... argumentValues) {_		Method method = getMethod(controllerType, methodName, argumentValues)__		return fromMethod(method, argumentValues)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,method,and,an,array,of,method,argument,values,this,method,delegates,to,link,from,method,java,lang,reflect,method,object,param,controller,type,the,controller,param,method,name,the,method,name,param,argument,values,the,argument,values,return,a,uri,components,builder,instance,never,code,null,throws,illegal,argument,exception,if,there,is,no,matching,or,if,there,is,more,than,one,matching,method;public,static,uri,components,builder,from,method,name,class,controller,type,string,method,name,object,argument,values,method,method,get,method,controller,type,method,name,argument,values,return,from,method,method,argument,values
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodName(Class<?> controllerType, String methodName, Object... argumentValues);1424972092;Create a {@link UriComponentsBuilder} from the mapping of a controller_method and an array of method argument values. This method delegates_to {@link #fromMethod(java.lang.reflect.Method, Object...)}._@param controllerType the controller_@param methodName the method name_@param argumentValues the argument values_@return a UriComponentsBuilder instance, never {@code null}_@throws IllegalArgumentException if there is no matching or_if there is more than one matching method;public static UriComponentsBuilder fromMethodName(Class<?> controllerType, String methodName, Object... argumentValues) {_		Method method = getMethod(controllerType, methodName, argumentValues)__		return fromMethod(method, argumentValues)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,method,and,an,array,of,method,argument,values,this,method,delegates,to,link,from,method,java,lang,reflect,method,object,param,controller,type,the,controller,param,method,name,the,method,name,param,argument,values,the,argument,values,return,a,uri,components,builder,instance,never,code,null,throws,illegal,argument,exception,if,there,is,no,matching,or,if,there,is,more,than,one,matching,method;public,static,uri,components,builder,from,method,name,class,controller,type,string,method,name,object,argument,values,method,method,get,method,controller,type,method,name,argument,values,return,from,method,method,argument,values
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethod(Class<?> controllerType, Method method, Object... args);1431975386;Create a {@link UriComponentsBuilder} from the mapping of a controller method_and an array of method argument values. The array of values  must match the_signature of the controller method. Values for {@code @RequestParam} and_{@code @PathVariable} are used for building the URI (via implementations of_{@link org.springframework.web.method.support.UriComponentsContributor_UriComponentsContributor}) while remaining argument values are ignored and_can be {@code null}._@param controllerType the controller type_@param method the controller method_@param args argument values for the controller method_@return a UriComponentsBuilder instance, never {@code null};public static UriComponentsBuilder fromMethod(Class<?> controllerType, Method method, Object... args) {_		return fromMethodInternal(null, controllerType, method, args)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,method,and,an,array,of,method,argument,values,the,array,of,values,must,match,the,signature,of,the,controller,method,values,for,code,request,param,and,code,path,variable,are,used,for,building,the,uri,via,implementations,of,link,org,springframework,web,method,support,uri,components,contributor,uri,components,contributor,while,remaining,argument,values,are,ignored,and,can,be,code,null,param,controller,type,the,controller,type,param,method,the,controller,method,param,args,argument,values,for,the,controller,method,return,a,uri,components,builder,instance,never,code,null;public,static,uri,components,builder,from,method,class,controller,type,method,method,object,args,return,from,method,internal,null,controller,type,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethod(Class<?> controllerType, Method method, Object... args);1432125256;Create a {@link UriComponentsBuilder} from the mapping of a controller method_and an array of method argument values. The array of values  must match the_signature of the controller method. Values for {@code @RequestParam} and_{@code @PathVariable} are used for building the URI (via implementations of_{@link org.springframework.web.method.support.UriComponentsContributor_UriComponentsContributor}) while remaining argument values are ignored and_can be {@code null}._@param controllerType the controller type_@param method the controller method_@param args argument values for the controller method_@return a UriComponentsBuilder instance, never {@code null};public static UriComponentsBuilder fromMethod(Class<?> controllerType, Method method, Object... args) {_		return fromMethodInternal(null, controllerType, method, args)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,method,and,an,array,of,method,argument,values,the,array,of,values,must,match,the,signature,of,the,controller,method,values,for,code,request,param,and,code,path,variable,are,used,for,building,the,uri,via,implementations,of,link,org,springframework,web,method,support,uri,components,contributor,uri,components,contributor,while,remaining,argument,values,are,ignored,and,can,be,code,null,param,controller,type,the,controller,type,param,method,the,controller,method,param,args,argument,values,for,the,controller,method,return,a,uri,components,builder,instance,never,code,null;public,static,uri,components,builder,from,method,class,controller,type,method,method,object,args,return,from,method,internal,null,controller,type,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethod(Class<?> controllerType, Method method, Object... args);1432156007;Create a {@link UriComponentsBuilder} from the mapping of a controller method_and an array of method argument values. The array of values  must match the_signature of the controller method. Values for {@code @RequestParam} and_{@code @PathVariable} are used for building the URI (via implementations of_{@link org.springframework.web.method.support.UriComponentsContributor_UriComponentsContributor}) while remaining argument values are ignored and_can be {@code null}._@param controllerType the controller type_@param method the controller method_@param args argument values for the controller method_@return a UriComponentsBuilder instance, never {@code null};public static UriComponentsBuilder fromMethod(Class<?> controllerType, Method method, Object... args) {_		return fromMethodInternal(null, controllerType, method, args)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,method,and,an,array,of,method,argument,values,the,array,of,values,must,match,the,signature,of,the,controller,method,values,for,code,request,param,and,code,path,variable,are,used,for,building,the,uri,via,implementations,of,link,org,springframework,web,method,support,uri,components,contributor,uri,components,contributor,while,remaining,argument,values,are,ignored,and,can,be,code,null,param,controller,type,the,controller,type,param,method,the,controller,method,param,args,argument,values,for,the,controller,method,return,a,uri,components,builder,instance,never,code,null;public,static,uri,components,builder,from,method,class,controller,type,method,method,object,args,return,from,method,internal,null,controller,type,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethod(Class<?> controllerType, Method method, Object... args);1432856630;Create a {@link UriComponentsBuilder} from the mapping of a controller method_and an array of method argument values. The array of values  must match the_signature of the controller method. Values for {@code @RequestParam} and_{@code @PathVariable} are used for building the URI (via implementations of_{@link org.springframework.web.method.support.UriComponentsContributor_UriComponentsContributor}) while remaining argument values are ignored and_can be {@code null}._@param controllerType the controller type_@param method the controller method_@param args argument values for the controller method_@return a UriComponentsBuilder instance, never {@code null};public static UriComponentsBuilder fromMethod(Class<?> controllerType, Method method, Object... args) {_		return fromMethodInternal(null, controllerType, method, args)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,method,and,an,array,of,method,argument,values,the,array,of,values,must,match,the,signature,of,the,controller,method,values,for,code,request,param,and,code,path,variable,are,used,for,building,the,uri,via,implementations,of,link,org,springframework,web,method,support,uri,components,contributor,uri,components,contributor,while,remaining,argument,values,are,ignored,and,can,be,code,null,param,controller,type,the,controller,type,param,method,the,controller,method,param,args,argument,values,for,the,controller,method,return,a,uri,components,builder,instance,never,code,null;public,static,uri,components,builder,from,method,class,controller,type,method,method,object,args,return,from,method,internal,null,controller,type,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethod(Class<?> controllerType, Method method, Object... args);1432857824;Create a {@link UriComponentsBuilder} from the mapping of a controller method_and an array of method argument values. The array of values  must match the_signature of the controller method. Values for {@code @RequestParam} and_{@code @PathVariable} are used for building the URI (via implementations of_{@link org.springframework.web.method.support.UriComponentsContributor_UriComponentsContributor}) while remaining argument values are ignored and_can be {@code null}._@param controllerType the controller type_@param method the controller method_@param args argument values for the controller method_@return a UriComponentsBuilder instance, never {@code null};public static UriComponentsBuilder fromMethod(Class<?> controllerType, Method method, Object... args) {_		return fromMethodInternal(null, controllerType, method, args)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,method,and,an,array,of,method,argument,values,the,array,of,values,must,match,the,signature,of,the,controller,method,values,for,code,request,param,and,code,path,variable,are,used,for,building,the,uri,via,implementations,of,link,org,springframework,web,method,support,uri,components,contributor,uri,components,contributor,while,remaining,argument,values,are,ignored,and,can,be,code,null,param,controller,type,the,controller,type,param,method,the,controller,method,param,args,argument,values,for,the,controller,method,return,a,uri,components,builder,instance,never,code,null;public,static,uri,components,builder,from,method,class,controller,type,method,method,object,args,return,from,method,internal,null,controller,type,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethod(Class<?> controllerType, Method method, Object... args);1434234880;Create a {@link UriComponentsBuilder} from the mapping of a controller method_and an array of method argument values. The array of values  must match the_signature of the controller method. Values for {@code @RequestParam} and_{@code @PathVariable} are used for building the URI (via implementations of_{@link org.springframework.web.method.support.UriComponentsContributor_UriComponentsContributor}) while remaining argument values are ignored and_can be {@code null}._@param controllerType the controller type_@param method the controller method_@param args argument values for the controller method_@return a UriComponentsBuilder instance, never {@code null};public static UriComponentsBuilder fromMethod(Class<?> controllerType, Method method, Object... args) {_		return fromMethodInternal(null, controllerType, method, args)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,method,and,an,array,of,method,argument,values,the,array,of,values,must,match,the,signature,of,the,controller,method,values,for,code,request,param,and,code,path,variable,are,used,for,building,the,uri,via,implementations,of,link,org,springframework,web,method,support,uri,components,contributor,uri,components,contributor,while,remaining,argument,values,are,ignored,and,can,be,code,null,param,controller,type,the,controller,type,param,method,the,controller,method,param,args,argument,values,for,the,controller,method,return,a,uri,components,builder,instance,never,code,null;public,static,uri,components,builder,from,method,class,controller,type,method,method,object,args,return,from,method,internal,null,controller,type,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethod(Class<?> controllerType, Method method, Object... args);1434484897;Create a {@link UriComponentsBuilder} from the mapping of a controller method_and an array of method argument values. The array of values  must match the_signature of the controller method. Values for {@code @RequestParam} and_{@code @PathVariable} are used for building the URI (via implementations of_{@link org.springframework.web.method.support.UriComponentsContributor_UriComponentsContributor}) while remaining argument values are ignored and_can be {@code null}._@param controllerType the controller type_@param method the controller method_@param args argument values for the controller method_@return a UriComponentsBuilder instance, never {@code null};public static UriComponentsBuilder fromMethod(Class<?> controllerType, Method method, Object... args) {_		return fromMethodInternal(null, controllerType, method, args)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,method,and,an,array,of,method,argument,values,the,array,of,values,must,match,the,signature,of,the,controller,method,values,for,code,request,param,and,code,path,variable,are,used,for,building,the,uri,via,implementations,of,link,org,springframework,web,method,support,uri,components,contributor,uri,components,contributor,while,remaining,argument,values,are,ignored,and,can,be,code,null,param,controller,type,the,controller,type,param,method,the,controller,method,param,args,argument,values,for,the,controller,method,return,a,uri,components,builder,instance,never,code,null;public,static,uri,components,builder,from,method,class,controller,type,method,method,object,args,return,from,method,internal,null,controller,type,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethod(Class<?> controllerType, Method method, Object... args);1434726592;Create a {@link UriComponentsBuilder} from the mapping of a controller method_and an array of method argument values. The array of values  must match the_signature of the controller method. Values for {@code @RequestParam} and_{@code @PathVariable} are used for building the URI (via implementations of_{@link org.springframework.web.method.support.UriComponentsContributor_UriComponentsContributor}) while remaining argument values are ignored and_can be {@code null}._@param controllerType the controller type_@param method the controller method_@param args argument values for the controller method_@return a UriComponentsBuilder instance, never {@code null};public static UriComponentsBuilder fromMethod(Class<?> controllerType, Method method, Object... args) {_		return fromMethodInternal(null, controllerType, method, args)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,method,and,an,array,of,method,argument,values,the,array,of,values,must,match,the,signature,of,the,controller,method,values,for,code,request,param,and,code,path,variable,are,used,for,building,the,uri,via,implementations,of,link,org,springframework,web,method,support,uri,components,contributor,uri,components,contributor,while,remaining,argument,values,are,ignored,and,can,be,code,null,param,controller,type,the,controller,type,param,method,the,controller,method,param,args,argument,values,for,the,controller,method,return,a,uri,components,builder,instance,never,code,null;public,static,uri,components,builder,from,method,class,controller,type,method,method,object,args,return,from,method,internal,null,controller,type,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethod(Class<?> controllerType, Method method, Object... args);1435615322;Create a {@link UriComponentsBuilder} from the mapping of a controller method_and an array of method argument values. The array of values  must match the_signature of the controller method. Values for {@code @RequestParam} and_{@code @PathVariable} are used for building the URI (via implementations of_{@link org.springframework.web.method.support.UriComponentsContributor_UriComponentsContributor}) while remaining argument values are ignored and_can be {@code null}._@param controllerType the controller type_@param method the controller method_@param args argument values for the controller method_@return a UriComponentsBuilder instance, never {@code null};public static UriComponentsBuilder fromMethod(Class<?> controllerType, Method method, Object... args) {_		return fromMethodInternal(null, controllerType, method, args)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,method,and,an,array,of,method,argument,values,the,array,of,values,must,match,the,signature,of,the,controller,method,values,for,code,request,param,and,code,path,variable,are,used,for,building,the,uri,via,implementations,of,link,org,springframework,web,method,support,uri,components,contributor,uri,components,contributor,while,remaining,argument,values,are,ignored,and,can,be,code,null,param,controller,type,the,controller,type,param,method,the,controller,method,param,args,argument,values,for,the,controller,method,return,a,uri,components,builder,instance,never,code,null;public,static,uri,components,builder,from,method,class,controller,type,method,method,object,args,return,from,method,internal,null,controller,type,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethod(Class<?> controllerType, Method method, Object... args);1439294371;Create a {@link UriComponentsBuilder} from the mapping of a controller method_and an array of method argument values. The array of values  must match the_signature of the controller method. Values for {@code @RequestParam} and_{@code @PathVariable} are used for building the URI (via implementations of_{@link org.springframework.web.method.support.UriComponentsContributor_UriComponentsContributor}) while remaining argument values are ignored and_can be {@code null}._@param controllerType the controller type_@param method the controller method_@param args argument values for the controller method_@return a UriComponentsBuilder instance, never {@code null}_@since 4.2;public static UriComponentsBuilder fromMethod(Class<?> controllerType, Method method, Object... args) {_		return fromMethodInternal(null, controllerType, method, args)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,method,and,an,array,of,method,argument,values,the,array,of,values,must,match,the,signature,of,the,controller,method,values,for,code,request,param,and,code,path,variable,are,used,for,building,the,uri,via,implementations,of,link,org,springframework,web,method,support,uri,components,contributor,uri,components,contributor,while,remaining,argument,values,are,ignored,and,can,be,code,null,param,controller,type,the,controller,type,param,method,the,controller,method,param,args,argument,values,for,the,controller,method,return,a,uri,components,builder,instance,never,code,null,since,4,2;public,static,uri,components,builder,from,method,class,controller,type,method,method,object,args,return,from,method,internal,null,controller,type,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethod(Class<?> controllerType, Method method, Object... args);1447077465;Create a {@link UriComponentsBuilder} from the mapping of a controller method_and an array of method argument values. The array of values  must match the_signature of the controller method. Values for {@code @RequestParam} and_{@code @PathVariable} are used for building the URI (via implementations of_{@link org.springframework.web.method.support.UriComponentsContributor_UriComponentsContributor}) while remaining argument values are ignored and_can be {@code null}._@param controllerType the controller type_@param method the controller method_@param args argument values for the controller method_@return a UriComponentsBuilder instance, never {@code null}_@since 4.2;public static UriComponentsBuilder fromMethod(Class<?> controllerType, Method method, Object... args) {_		return fromMethodInternal(null, controllerType, method, args)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,method,and,an,array,of,method,argument,values,the,array,of,values,must,match,the,signature,of,the,controller,method,values,for,code,request,param,and,code,path,variable,are,used,for,building,the,uri,via,implementations,of,link,org,springframework,web,method,support,uri,components,contributor,uri,components,contributor,while,remaining,argument,values,are,ignored,and,can,be,code,null,param,controller,type,the,controller,type,param,method,the,controller,method,param,args,argument,values,for,the,controller,method,return,a,uri,components,builder,instance,never,code,null,since,4,2;public,static,uri,components,builder,from,method,class,controller,type,method,method,object,args,return,from,method,internal,null,controller,type,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethod(Class<?> controllerType, Method method, Object... args);1458830024;Create a {@link UriComponentsBuilder} from the mapping of a controller method_and an array of method argument values. The array of values  must match the_signature of the controller method. Values for {@code @RequestParam} and_{@code @PathVariable} are used for building the URI (via implementations of_{@link org.springframework.web.method.support.UriComponentsContributor_UriComponentsContributor}) while remaining argument values are ignored and_can be {@code null}._@param controllerType the controller type_@param method the controller method_@param args argument values for the controller method_@return a UriComponentsBuilder instance, never {@code null}_@since 4.2;public static UriComponentsBuilder fromMethod(Class<?> controllerType, Method method, Object... args) {_		return fromMethodInternal(null, controllerType, method, args)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,method,and,an,array,of,method,argument,values,the,array,of,values,must,match,the,signature,of,the,controller,method,values,for,code,request,param,and,code,path,variable,are,used,for,building,the,uri,via,implementations,of,link,org,springframework,web,method,support,uri,components,contributor,uri,components,contributor,while,remaining,argument,values,are,ignored,and,can,be,code,null,param,controller,type,the,controller,type,param,method,the,controller,method,param,args,argument,values,for,the,controller,method,return,a,uri,components,builder,instance,never,code,null,since,4,2;public,static,uri,components,builder,from,method,class,controller,type,method,method,object,args,return,from,method,internal,null,controller,type,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethod(Class<?> controllerType, Method method, Object... args);1461047077;Create a {@link UriComponentsBuilder} from the mapping of a controller method_and an array of method argument values. The array of values  must match the_signature of the controller method. Values for {@code @RequestParam} and_{@code @PathVariable} are used for building the URI (via implementations of_{@link org.springframework.web.method.support.UriComponentsContributor_UriComponentsContributor}) while remaining argument values are ignored and_can be {@code null}._@param controllerType the controller type_@param method the controller method_@param args argument values for the controller method_@return a UriComponentsBuilder instance, never {@code null}_@since 4.2;public static UriComponentsBuilder fromMethod(Class<?> controllerType, Method method, Object... args) {_		return fromMethodInternal(null, controllerType, method, args)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,method,and,an,array,of,method,argument,values,the,array,of,values,must,match,the,signature,of,the,controller,method,values,for,code,request,param,and,code,path,variable,are,used,for,building,the,uri,via,implementations,of,link,org,springframework,web,method,support,uri,components,contributor,uri,components,contributor,while,remaining,argument,values,are,ignored,and,can,be,code,null,param,controller,type,the,controller,type,param,method,the,controller,method,param,args,argument,values,for,the,controller,method,return,a,uri,components,builder,instance,never,code,null,since,4,2;public,static,uri,components,builder,from,method,class,controller,type,method,method,object,args,return,from,method,internal,null,controller,type,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethod(Class<?> controllerType, Method method, Object... args);1467677340;Create a {@link UriComponentsBuilder} from the mapping of a controller method_and an array of method argument values. The array of values  must match the_signature of the controller method. Values for {@code @RequestParam} and_{@code @PathVariable} are used for building the URI (via implementations of_{@link org.springframework.web.method.support.UriComponentsContributor_UriComponentsContributor}) while remaining argument values are ignored and_can be {@code null}._@param controllerType the controller type_@param method the controller method_@param args argument values for the controller method_@return a UriComponentsBuilder instance, never {@code null}_@since 4.2;public static UriComponentsBuilder fromMethod(Class<?> controllerType, Method method, Object... args) {_		return fromMethodInternal(null, controllerType, method, args)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,method,and,an,array,of,method,argument,values,the,array,of,values,must,match,the,signature,of,the,controller,method,values,for,code,request,param,and,code,path,variable,are,used,for,building,the,uri,via,implementations,of,link,org,springframework,web,method,support,uri,components,contributor,uri,components,contributor,while,remaining,argument,values,are,ignored,and,can,be,code,null,param,controller,type,the,controller,type,param,method,the,controller,method,param,args,argument,values,for,the,controller,method,return,a,uri,components,builder,instance,never,code,null,since,4,2;public,static,uri,components,builder,from,method,class,controller,type,method,method,object,args,return,from,method,internal,null,controller,type,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethod(Class<?> controllerType, Method method, Object... args);1467726769;Create a {@link UriComponentsBuilder} from the mapping of a controller method_and an array of method argument values. The array of values  must match the_signature of the controller method. Values for {@code @RequestParam} and_{@code @PathVariable} are used for building the URI (via implementations of_{@link org.springframework.web.method.support.UriComponentsContributor_UriComponentsContributor}) while remaining argument values are ignored and_can be {@code null}._@param controllerType the controller type_@param method the controller method_@param args argument values for the controller method_@return a UriComponentsBuilder instance, never {@code null}_@since 4.2;public static UriComponentsBuilder fromMethod(Class<?> controllerType, Method method, Object... args) {_		return fromMethodInternal(null, controllerType, method, args)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,method,and,an,array,of,method,argument,values,the,array,of,values,must,match,the,signature,of,the,controller,method,values,for,code,request,param,and,code,path,variable,are,used,for,building,the,uri,via,implementations,of,link,org,springframework,web,method,support,uri,components,contributor,uri,components,contributor,while,remaining,argument,values,are,ignored,and,can,be,code,null,param,controller,type,the,controller,type,param,method,the,controller,method,param,args,argument,values,for,the,controller,method,return,a,uri,components,builder,instance,never,code,null,since,4,2;public,static,uri,components,builder,from,method,class,controller,type,method,method,object,args,return,from,method,internal,null,controller,type,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethod(Class<?> controllerType, Method method, Object... args);1467730834;Create a {@link UriComponentsBuilder} from the mapping of a controller method_and an array of method argument values. The array of values  must match the_signature of the controller method. Values for {@code @RequestParam} and_{@code @PathVariable} are used for building the URI (via implementations of_{@link org.springframework.web.method.support.UriComponentsContributor_UriComponentsContributor}) while remaining argument values are ignored and_can be {@code null}._@param controllerType the controller type_@param method the controller method_@param args argument values for the controller method_@return a UriComponentsBuilder instance, never {@code null}_@since 4.2;public static UriComponentsBuilder fromMethod(Class<?> controllerType, Method method, Object... args) {_		return fromMethodInternal(null, controllerType, method, args)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,method,and,an,array,of,method,argument,values,the,array,of,values,must,match,the,signature,of,the,controller,method,values,for,code,request,param,and,code,path,variable,are,used,for,building,the,uri,via,implementations,of,link,org,springframework,web,method,support,uri,components,contributor,uri,components,contributor,while,remaining,argument,values,are,ignored,and,can,be,code,null,param,controller,type,the,controller,type,param,method,the,controller,method,param,args,argument,values,for,the,controller,method,return,a,uri,components,builder,instance,never,code,null,since,4,2;public,static,uri,components,builder,from,method,class,controller,type,method,method,object,args,return,from,method,internal,null,controller,type,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethod(Class<?> controllerType, Method method, Object... args);1467846264;Create a {@link UriComponentsBuilder} from the mapping of a controller method_and an array of method argument values. The array of values  must match the_signature of the controller method. Values for {@code @RequestParam} and_{@code @PathVariable} are used for building the URI (via implementations of_{@link org.springframework.web.method.support.UriComponentsContributor_UriComponentsContributor}) while remaining argument values are ignored and_can be {@code null}._@param controllerType the controller type_@param method the controller method_@param args argument values for the controller method_@return a UriComponentsBuilder instance, never {@code null}_@since 4.2;public static UriComponentsBuilder fromMethod(Class<?> controllerType, Method method, Object... args) {_		return fromMethodInternal(null, controllerType, method, args)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,method,and,an,array,of,method,argument,values,the,array,of,values,must,match,the,signature,of,the,controller,method,values,for,code,request,param,and,code,path,variable,are,used,for,building,the,uri,via,implementations,of,link,org,springframework,web,method,support,uri,components,contributor,uri,components,contributor,while,remaining,argument,values,are,ignored,and,can,be,code,null,param,controller,type,the,controller,type,param,method,the,controller,method,param,args,argument,values,for,the,controller,method,return,a,uri,components,builder,instance,never,code,null,since,4,2;public,static,uri,components,builder,from,method,class,controller,type,method,method,object,args,return,from,method,internal,null,controller,type,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethod(Class<?> controllerType, Method method, Object... args);1468613531;Create a {@link UriComponentsBuilder} from the mapping of a controller method_and an array of method argument values. The array of values  must match the_signature of the controller method. Values for {@code @RequestParam} and_{@code @PathVariable} are used for building the URI (via implementations of_{@link org.springframework.web.method.support.UriComponentsContributor_UriComponentsContributor}) while remaining argument values are ignored and_can be {@code null}._@param controllerType the controller type_@param method the controller method_@param args argument values for the controller method_@return a UriComponentsBuilder instance, never {@code null}_@since 4.2;public static UriComponentsBuilder fromMethod(Class<?> controllerType, Method method, Object... args) {_		return fromMethodInternal(null, controllerType, method, args)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,method,and,an,array,of,method,argument,values,the,array,of,values,must,match,the,signature,of,the,controller,method,values,for,code,request,param,and,code,path,variable,are,used,for,building,the,uri,via,implementations,of,link,org,springframework,web,method,support,uri,components,contributor,uri,components,contributor,while,remaining,argument,values,are,ignored,and,can,be,code,null,param,controller,type,the,controller,type,param,method,the,controller,method,param,args,argument,values,for,the,controller,method,return,a,uri,components,builder,instance,never,code,null,since,4,2;public,static,uri,components,builder,from,method,class,controller,type,method,method,object,args,return,from,method,internal,null,controller,type,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethod(Class<?> controllerType, Method method, Object... args);1468948866;Create a {@link UriComponentsBuilder} from the mapping of a controller method_and an array of method argument values. The array of values  must match the_signature of the controller method. Values for {@code @RequestParam} and_{@code @PathVariable} are used for building the URI (via implementations of_{@link org.springframework.web.method.support.UriComponentsContributor_UriComponentsContributor}) while remaining argument values are ignored and_can be {@code null}._@param controllerType the controller type_@param method the controller method_@param args argument values for the controller method_@return a UriComponentsBuilder instance, never {@code null}_@since 4.2;public static UriComponentsBuilder fromMethod(Class<?> controllerType, Method method, Object... args) {_		return fromMethodInternal(null, controllerType, method, args)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,method,and,an,array,of,method,argument,values,the,array,of,values,must,match,the,signature,of,the,controller,method,values,for,code,request,param,and,code,path,variable,are,used,for,building,the,uri,via,implementations,of,link,org,springframework,web,method,support,uri,components,contributor,uri,components,contributor,while,remaining,argument,values,are,ignored,and,can,be,code,null,param,controller,type,the,controller,type,param,method,the,controller,method,param,args,argument,values,for,the,controller,method,return,a,uri,components,builder,instance,never,code,null,since,4,2;public,static,uri,components,builder,from,method,class,controller,type,method,method,object,args,return,from,method,internal,null,controller,type,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethod(Class<?> controllerType, Method method, Object... args);1485810955;Create a {@link UriComponentsBuilder} from the mapping of a controller method_and an array of method argument values. The array of values  must match the_signature of the controller method. Values for {@code @RequestParam} and_{@code @PathVariable} are used for building the URI (via implementations of_{@link org.springframework.web.method.support.UriComponentsContributor_UriComponentsContributor}) while remaining argument values are ignored and_can be {@code null}._@param controllerType the controller type_@param method the controller method_@param args argument values for the controller method_@return a UriComponentsBuilder instance, never {@code null}_@since 4.2;public static UriComponentsBuilder fromMethod(Class<?> controllerType, Method method, Object... args) {_		return fromMethodInternal(null, controllerType, method, args)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,method,and,an,array,of,method,argument,values,the,array,of,values,must,match,the,signature,of,the,controller,method,values,for,code,request,param,and,code,path,variable,are,used,for,building,the,uri,via,implementations,of,link,org,springframework,web,method,support,uri,components,contributor,uri,components,contributor,while,remaining,argument,values,are,ignored,and,can,be,code,null,param,controller,type,the,controller,type,param,method,the,controller,method,param,args,argument,values,for,the,controller,method,return,a,uri,components,builder,instance,never,code,null,since,4,2;public,static,uri,components,builder,from,method,class,controller,type,method,method,object,args,return,from,method,internal,null,controller,type,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethod(Class<?> controllerType, Method method, Object... args);1486634978;Create a {@link UriComponentsBuilder} from the mapping of a controller method_and an array of method argument values. The array of values  must match the_signature of the controller method. Values for {@code @RequestParam} and_{@code @PathVariable} are used for building the URI (via implementations of_{@link org.springframework.web.method.support.UriComponentsContributor_UriComponentsContributor}) while remaining argument values are ignored and_can be {@code null}._@param controllerType the controller type_@param method the controller method_@param args argument values for the controller method_@return a UriComponentsBuilder instance, never {@code null}_@since 4.2;public static UriComponentsBuilder fromMethod(Class<?> controllerType, Method method, Object... args) {_		return fromMethodInternal(null, controllerType, method, args)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,method,and,an,array,of,method,argument,values,the,array,of,values,must,match,the,signature,of,the,controller,method,values,for,code,request,param,and,code,path,variable,are,used,for,building,the,uri,via,implementations,of,link,org,springframework,web,method,support,uri,components,contributor,uri,components,contributor,while,remaining,argument,values,are,ignored,and,can,be,code,null,param,controller,type,the,controller,type,param,method,the,controller,method,param,args,argument,values,for,the,controller,method,return,a,uri,components,builder,instance,never,code,null,since,4,2;public,static,uri,components,builder,from,method,class,controller,type,method,method,object,args,return,from,method,internal,null,controller,type,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethod(Class<?> controllerType, Method method, Object... args);1486635693;Create a {@link UriComponentsBuilder} from the mapping of a controller method_and an array of method argument values. The array of values  must match the_signature of the controller method. Values for {@code @RequestParam} and_{@code @PathVariable} are used for building the URI (via implementations of_{@link org.springframework.web.method.support.UriComponentsContributor_UriComponentsContributor}) while remaining argument values are ignored and_can be {@code null}._@param controllerType the controller type_@param method the controller method_@param args argument values for the controller method_@return a UriComponentsBuilder instance, never {@code null}_@since 4.2;public static UriComponentsBuilder fromMethod(Class<?> controllerType, Method method, Object... args) {_		return fromMethodInternal(null, controllerType, method, args)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,method,and,an,array,of,method,argument,values,the,array,of,values,must,match,the,signature,of,the,controller,method,values,for,code,request,param,and,code,path,variable,are,used,for,building,the,uri,via,implementations,of,link,org,springframework,web,method,support,uri,components,contributor,uri,components,contributor,while,remaining,argument,values,are,ignored,and,can,be,code,null,param,controller,type,the,controller,type,param,method,the,controller,method,param,args,argument,values,for,the,controller,method,return,a,uri,components,builder,instance,never,code,null,since,4,2;public,static,uri,components,builder,from,method,class,controller,type,method,method,object,args,return,from,method,internal,null,controller,type,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethod(Class<?> controllerType, Method method, Object... args);1495868221;Create a {@link UriComponentsBuilder} from the mapping of a controller method_and an array of method argument values. The array of values  must match the_signature of the controller method. Values for {@code @RequestParam} and_{@code @PathVariable} are used for building the URI (via implementations of_{@link org.springframework.web.method.support.UriComponentsContributor_UriComponentsContributor}) while remaining argument values are ignored and_can be {@code null}._@param controllerType the controller type_@param method the controller method_@param args argument values for the controller method_@return a UriComponentsBuilder instance, never {@code null}_@since 4.2;public static UriComponentsBuilder fromMethod(Class<?> controllerType, Method method, Object... args) {_		return fromMethodInternal(null, controllerType, method, args)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,method,and,an,array,of,method,argument,values,the,array,of,values,must,match,the,signature,of,the,controller,method,values,for,code,request,param,and,code,path,variable,are,used,for,building,the,uri,via,implementations,of,link,org,springframework,web,method,support,uri,components,contributor,uri,components,contributor,while,remaining,argument,values,are,ignored,and,can,be,code,null,param,controller,type,the,controller,type,param,method,the,controller,method,param,args,argument,values,for,the,controller,method,return,a,uri,components,builder,instance,never,code,null,since,4,2;public,static,uri,components,builder,from,method,class,controller,type,method,method,object,args,return,from,method,internal,null,controller,type,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethod(Class<?> controllerType, Method method, Object... args);1496242568;Create a {@link UriComponentsBuilder} from the mapping of a controller method_and an array of method argument values. The array of values  must match the_signature of the controller method. Values for {@code @RequestParam} and_{@code @PathVariable} are used for building the URI (via implementations of_{@link org.springframework.web.method.support.UriComponentsContributor_UriComponentsContributor}) while remaining argument values are ignored and_can be {@code null}._@param controllerType the controller type_@param method the controller method_@param args argument values for the controller method_@return a UriComponentsBuilder instance, never {@code null}_@since 4.2;public static UriComponentsBuilder fromMethod(Class<?> controllerType, Method method, Object... args) {_		return fromMethodInternal(null, controllerType, method, args)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,method,and,an,array,of,method,argument,values,the,array,of,values,must,match,the,signature,of,the,controller,method,values,for,code,request,param,and,code,path,variable,are,used,for,building,the,uri,via,implementations,of,link,org,springframework,web,method,support,uri,components,contributor,uri,components,contributor,while,remaining,argument,values,are,ignored,and,can,be,code,null,param,controller,type,the,controller,type,param,method,the,controller,method,param,args,argument,values,for,the,controller,method,return,a,uri,components,builder,instance,never,code,null,since,4,2;public,static,uri,components,builder,from,method,class,controller,type,method,method,object,args,return,from,method,internal,null,controller,type,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethod(Class<?> controllerType, Method method, Object... args);1496259743;Create a {@link UriComponentsBuilder} from the mapping of a controller method_and an array of method argument values. The array of values  must match the_signature of the controller method. Values for {@code @RequestParam} and_{@code @PathVariable} are used for building the URI (via implementations of_{@link org.springframework.web.method.support.UriComponentsContributor_UriComponentsContributor}) while remaining argument values are ignored and_can be {@code null}._@param controllerType the controller type_@param method the controller method_@param args argument values for the controller method_@return a UriComponentsBuilder instance, never {@code null}_@since 4.2;public static UriComponentsBuilder fromMethod(Class<?> controllerType, Method method, Object... args) {_		return fromMethodInternal(null, controllerType, method, args)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,method,and,an,array,of,method,argument,values,the,array,of,values,must,match,the,signature,of,the,controller,method,values,for,code,request,param,and,code,path,variable,are,used,for,building,the,uri,via,implementations,of,link,org,springframework,web,method,support,uri,components,contributor,uri,components,contributor,while,remaining,argument,values,are,ignored,and,can,be,code,null,param,controller,type,the,controller,type,param,method,the,controller,method,param,args,argument,values,for,the,controller,method,return,a,uri,components,builder,instance,never,code,null,since,4,2;public,static,uri,components,builder,from,method,class,controller,type,method,method,object,args,return,from,method,internal,null,controller,type,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethod(Class<?> controllerType, Method method, Object... args);1496370972;Create a {@link UriComponentsBuilder} from the mapping of a controller method_and an array of method argument values. The array of values  must match the_signature of the controller method. Values for {@code @RequestParam} and_{@code @PathVariable} are used for building the URI (via implementations of_{@link org.springframework.web.method.support.UriComponentsContributor_UriComponentsContributor}) while remaining argument values are ignored and_can be {@code null}._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param controllerType the controller type_@param method the controller method_@param args argument values for the controller method_@return a UriComponentsBuilder instance, never {@code null}_@since 4.2;public static UriComponentsBuilder fromMethod(Class<?> controllerType, Method method, Object... args) {_		return fromMethodInternal(null, controllerType, method, args)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,method,and,an,array,of,method,argument,values,the,array,of,values,must,match,the,signature,of,the,controller,method,values,for,code,request,param,and,code,path,variable,are,used,for,building,the,uri,via,implementations,of,link,org,springframework,web,method,support,uri,components,contributor,uri,components,contributor,while,remaining,argument,values,are,ignored,and,can,be,code,null,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,controller,type,the,controller,type,param,method,the,controller,method,param,args,argument,values,for,the,controller,method,return,a,uri,components,builder,instance,never,code,null,since,4,2;public,static,uri,components,builder,from,method,class,controller,type,method,method,object,args,return,from,method,internal,null,controller,type,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethod(Class<?> controllerType, Method method, Object... args);1496837955;Create a {@link UriComponentsBuilder} from the mapping of a controller method_and an array of method argument values. The array of values  must match the_signature of the controller method. Values for {@code @RequestParam} and_{@code @PathVariable} are used for building the URI (via implementations of_{@link org.springframework.web.method.support.UriComponentsContributor_UriComponentsContributor}) while remaining argument values are ignored and_can be {@code null}._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param controllerType the controller type_@param method the controller method_@param args argument values for the controller method_@return a UriComponentsBuilder instance, never {@code null}_@since 4.2;public static UriComponentsBuilder fromMethod(Class<?> controllerType, Method method, Object... args) {_		return fromMethodInternal(null, controllerType, method, args)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,method,and,an,array,of,method,argument,values,the,array,of,values,must,match,the,signature,of,the,controller,method,values,for,code,request,param,and,code,path,variable,are,used,for,building,the,uri,via,implementations,of,link,org,springframework,web,method,support,uri,components,contributor,uri,components,contributor,while,remaining,argument,values,are,ignored,and,can,be,code,null,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,controller,type,the,controller,type,param,method,the,controller,method,param,args,argument,values,for,the,controller,method,return,a,uri,components,builder,instance,never,code,null,since,4,2;public,static,uri,components,builder,from,method,class,controller,type,method,method,object,args,return,from,method,internal,null,controller,type,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethod(Class<?> controllerType, Method method, Object... args);1497341397;Create a {@link UriComponentsBuilder} from the mapping of a controller method_and an array of method argument values. The array of values  must match the_signature of the controller method. Values for {@code @RequestParam} and_{@code @PathVariable} are used for building the URI (via implementations of_{@link org.springframework.web.method.support.UriComponentsContributor_UriComponentsContributor}) while remaining argument values are ignored and_can be {@code null}._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param controllerType the controller type_@param method the controller method_@param args argument values for the controller method_@return a UriComponentsBuilder instance, never {@code null}_@since 4.2;public static UriComponentsBuilder fromMethod(Class<?> controllerType, Method method, Object... args) {_		return fromMethodInternal(null, controllerType, method, args)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,method,and,an,array,of,method,argument,values,the,array,of,values,must,match,the,signature,of,the,controller,method,values,for,code,request,param,and,code,path,variable,are,used,for,building,the,uri,via,implementations,of,link,org,springframework,web,method,support,uri,components,contributor,uri,components,contributor,while,remaining,argument,values,are,ignored,and,can,be,code,null,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,controller,type,the,controller,type,param,method,the,controller,method,param,args,argument,values,for,the,controller,method,return,a,uri,components,builder,instance,never,code,null,since,4,2;public,static,uri,components,builder,from,method,class,controller,type,method,method,object,args,return,from,method,internal,null,controller,type,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethod(Class<?> controllerType, Method method, Object... args);1498780456;Create a {@link UriComponentsBuilder} from the mapping of a controller method_and an array of method argument values. The array of values  must match the_signature of the controller method. Values for {@code @RequestParam} and_{@code @PathVariable} are used for building the URI (via implementations of_{@link org.springframework.web.method.support.UriComponentsContributor_UriComponentsContributor}) while remaining argument values are ignored and_can be {@code null}._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param controllerType the controller type_@param method the controller method_@param args argument values for the controller method_@return a UriComponentsBuilder instance, never {@code null}_@since 4.2;public static UriComponentsBuilder fromMethod(Class<?> controllerType, Method method, Object... args) {_		return fromMethodInternal(null, controllerType, method, args)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,method,and,an,array,of,method,argument,values,the,array,of,values,must,match,the,signature,of,the,controller,method,values,for,code,request,param,and,code,path,variable,are,used,for,building,the,uri,via,implementations,of,link,org,springframework,web,method,support,uri,components,contributor,uri,components,contributor,while,remaining,argument,values,are,ignored,and,can,be,code,null,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,controller,type,the,controller,type,param,method,the,controller,method,param,args,argument,values,for,the,controller,method,return,a,uri,components,builder,instance,never,code,null,since,4,2;public,static,uri,components,builder,from,method,class,controller,type,method,method,object,args,return,from,method,internal,null,controller,type,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethod(Class<?> controllerType, Method method, Object... args);1500416137;Create a {@link UriComponentsBuilder} from the mapping of a controller method_and an array of method argument values. The array of values  must match the_signature of the controller method. Values for {@code @RequestParam} and_{@code @PathVariable} are used for building the URI (via implementations of_{@link org.springframework.web.method.support.UriComponentsContributor_UriComponentsContributor}) while remaining argument values are ignored and_can be {@code null}._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param controllerType the controller type_@param method the controller method_@param args argument values for the controller method_@return a UriComponentsBuilder instance, never {@code null}_@since 4.2;public static UriComponentsBuilder fromMethod(Class<?> controllerType, Method method, Object... args) {_		return fromMethodInternal(null, controllerType, method, args)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,method,and,an,array,of,method,argument,values,the,array,of,values,must,match,the,signature,of,the,controller,method,values,for,code,request,param,and,code,path,variable,are,used,for,building,the,uri,via,implementations,of,link,org,springframework,web,method,support,uri,components,contributor,uri,components,contributor,while,remaining,argument,values,are,ignored,and,can,be,code,null,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,controller,type,the,controller,type,param,method,the,controller,method,param,args,argument,values,for,the,controller,method,return,a,uri,components,builder,instance,never,code,null,since,4,2;public,static,uri,components,builder,from,method,class,controller,type,method,method,object,args,return,from,method,internal,null,controller,type,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethod(Class<?> controllerType, Method method, Object... args);1506097334;Create a {@link UriComponentsBuilder} from the mapping of a controller method_and an array of method argument values. The array of values  must match the_signature of the controller method. Values for {@code @RequestParam} and_{@code @PathVariable} are used for building the URI (via implementations of_{@link org.springframework.web.method.support.UriComponentsContributor_UriComponentsContributor}) while remaining argument values are ignored and_can be {@code null}._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param controllerType the controller type_@param method the controller method_@param args argument values for the controller method_@return a UriComponentsBuilder instance, never {@code null}_@since 4.2;public static UriComponentsBuilder fromMethod(Class<?> controllerType, Method method, Object... args) {_		return fromMethodInternal(null, controllerType, method, args)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,method,and,an,array,of,method,argument,values,the,array,of,values,must,match,the,signature,of,the,controller,method,values,for,code,request,param,and,code,path,variable,are,used,for,building,the,uri,via,implementations,of,link,org,springframework,web,method,support,uri,components,contributor,uri,components,contributor,while,remaining,argument,values,are,ignored,and,can,be,code,null,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,controller,type,the,controller,type,param,method,the,controller,method,param,args,argument,values,for,the,controller,method,return,a,uri,components,builder,instance,never,code,null,since,4,2;public,static,uri,components,builder,from,method,class,controller,type,method,method,object,args,return,from,method,internal,null,controller,type,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethod(Class<?> controllerType, Method method, Object... args);1518770299;Create a {@link UriComponentsBuilder} from the mapping of a controller method_and an array of method argument values. The array of values  must match the_signature of the controller method. Values for {@code @RequestParam} and_{@code @PathVariable} are used for building the URI (via implementations of_{@link org.springframework.web.method.support.UriComponentsContributor_UriComponentsContributor}) while remaining argument values are ignored and_can be {@code null}._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param controllerType the controller type_@param method the controller method_@param args argument values for the controller method_@return a UriComponentsBuilder instance, never {@code null}_@since 4.2;public static UriComponentsBuilder fromMethod(Class<?> controllerType, Method method, Object... args) {_		return fromMethodInternal(null, controllerType, method, args)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,method,and,an,array,of,method,argument,values,the,array,of,values,must,match,the,signature,of,the,controller,method,values,for,code,request,param,and,code,path,variable,are,used,for,building,the,uri,via,implementations,of,link,org,springframework,web,method,support,uri,components,contributor,uri,components,contributor,while,remaining,argument,values,are,ignored,and,can,be,code,null,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,controller,type,the,controller,type,param,method,the,controller,method,param,args,argument,values,for,the,controller,method,return,a,uri,components,builder,instance,never,code,null,since,4,2;public,static,uri,components,builder,from,method,class,controller,type,method,method,object,args,return,from,method,internal,null,controller,type,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethod(Class<?> controllerType, Method method, Object... args);1522354261;Create a {@link UriComponentsBuilder} from the mapping of a controller method_and an array of method argument values. The array of values  must match the_signature of the controller method. Values for {@code @RequestParam} and_{@code @PathVariable} are used for building the URI (via implementations of_{@link org.springframework.web.method.support.UriComponentsContributor_UriComponentsContributor}) while remaining argument values are ignored and_can be {@code null}._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param controllerType the controller type_@param method the controller method_@param args argument values for the controller method_@return a UriComponentsBuilder instance, never {@code null}_@since 4.2;public static UriComponentsBuilder fromMethod(Class<?> controllerType, Method method, Object... args) {_		return fromMethodInternal(null, controllerType, method, args)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,method,and,an,array,of,method,argument,values,the,array,of,values,must,match,the,signature,of,the,controller,method,values,for,code,request,param,and,code,path,variable,are,used,for,building,the,uri,via,implementations,of,link,org,springframework,web,method,support,uri,components,contributor,uri,components,contributor,while,remaining,argument,values,are,ignored,and,can,be,code,null,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,controller,type,the,controller,type,param,method,the,controller,method,param,args,argument,values,for,the,controller,method,return,a,uri,components,builder,instance,never,code,null,since,4,2;public,static,uri,components,builder,from,method,class,controller,type,method,method,object,args,return,from,method,internal,null,controller,type,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethod(Class<?> controllerType, Method method, Object... args);1523455554;Create a {@link UriComponentsBuilder} from the mapping of a controller method_and an array of method argument values. The array of values  must match the_signature of the controller method. Values for {@code @RequestParam} and_{@code @PathVariable} are used for building the URI (via implementations of_{@link org.springframework.web.method.support.UriComponentsContributor_UriComponentsContributor}) while remaining argument values are ignored and_can be {@code null}._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param controllerType the controller type_@param method the controller method_@param args argument values for the controller method_@return a UriComponentsBuilder instance, never {@code null}_@since 4.2;public static UriComponentsBuilder fromMethod(Class<?> controllerType, Method method, Object... args) {_		return fromMethodInternal(null, controllerType, method, args)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,method,and,an,array,of,method,argument,values,the,array,of,values,must,match,the,signature,of,the,controller,method,values,for,code,request,param,and,code,path,variable,are,used,for,building,the,uri,via,implementations,of,link,org,springframework,web,method,support,uri,components,contributor,uri,components,contributor,while,remaining,argument,values,are,ignored,and,can,be,code,null,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,controller,type,the,controller,type,param,method,the,controller,method,param,args,argument,values,for,the,controller,method,return,a,uri,components,builder,instance,never,code,null,since,4,2;public,static,uri,components,builder,from,method,class,controller,type,method,method,object,args,return,from,method,internal,null,controller,type,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethod(Class<?> controllerType, Method method, Object... args);1529028426;Create a {@link UriComponentsBuilder} from the mapping of a controller method_and an array of method argument values. The array of values  must match the_signature of the controller method. Values for {@code @RequestParam} and_{@code @PathVariable} are used for building the URI (via implementations of_{@link org.springframework.web.method.support.UriComponentsContributor_UriComponentsContributor}) while remaining argument values are ignored and_can be {@code null}._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param controllerType the controller type_@param method the controller method_@param args argument values for the controller method_@return a UriComponentsBuilder instance, never {@code null}_@since 4.2;public static UriComponentsBuilder fromMethod(Class<?> controllerType, Method method, Object... args) {_		return fromMethodInternal(null, controllerType, method, args)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,method,and,an,array,of,method,argument,values,the,array,of,values,must,match,the,signature,of,the,controller,method,values,for,code,request,param,and,code,path,variable,are,used,for,building,the,uri,via,implementations,of,link,org,springframework,web,method,support,uri,components,contributor,uri,components,contributor,while,remaining,argument,values,are,ignored,and,can,be,code,null,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,controller,type,the,controller,type,param,method,the,controller,method,param,args,argument,values,for,the,controller,method,return,a,uri,components,builder,instance,never,code,null,since,4,2;public,static,uri,components,builder,from,method,class,controller,type,method,method,object,args,return,from,method,internal,null,controller,type,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethod(Class<?> controllerType, Method method, Object... args);1529028426;Create a {@link UriComponentsBuilder} from the mapping of a controller method_and an array of method argument values. The array of values  must match the_signature of the controller method. Values for {@code @RequestParam} and_{@code @PathVariable} are used for building the URI (via implementations of_{@link org.springframework.web.method.support.UriComponentsContributor_UriComponentsContributor}) while remaining argument values are ignored and_can be {@code null}._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param controllerType the controller type_@param method the controller method_@param args argument values for the controller method_@return a UriComponentsBuilder instance, never {@code null}_@since 4.2;public static UriComponentsBuilder fromMethod(Class<?> controllerType, Method method, Object... args) {_		return fromMethodInternal(null, controllerType, method, args)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,method,and,an,array,of,method,argument,values,the,array,of,values,must,match,the,signature,of,the,controller,method,values,for,code,request,param,and,code,path,variable,are,used,for,building,the,uri,via,implementations,of,link,org,springframework,web,method,support,uri,components,contributor,uri,components,contributor,while,remaining,argument,values,are,ignored,and,can,be,code,null,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,controller,type,the,controller,type,param,method,the,controller,method,param,args,argument,values,for,the,controller,method,return,a,uri,components,builder,instance,never,code,null,since,4,2;public,static,uri,components,builder,from,method,class,controller,type,method,method,object,args,return,from,method,internal,null,controller,type,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethod(Class<?> controllerType, Method method, Object... args);1529028713;Create a {@link UriComponentsBuilder} from the mapping of a controller method_and an array of method argument values. The array of values  must match the_signature of the controller method. Values for {@code @RequestParam} and_{@code @PathVariable} are used for building the URI (via implementations of_{@link org.springframework.web.method.support.UriComponentsContributor_UriComponentsContributor}) while remaining argument values are ignored and_can be {@code null}._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param controllerType the controller type_@param method the controller method_@param args argument values for the controller method_@return a UriComponentsBuilder instance, never {@code null}_@since 4.2;public static UriComponentsBuilder fromMethod(Class<?> controllerType, Method method, Object... args) {_		return fromMethodInternal(null, controllerType, method, args)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,method,and,an,array,of,method,argument,values,the,array,of,values,must,match,the,signature,of,the,controller,method,values,for,code,request,param,and,code,path,variable,are,used,for,building,the,uri,via,implementations,of,link,org,springframework,web,method,support,uri,components,contributor,uri,components,contributor,while,remaining,argument,values,are,ignored,and,can,be,code,null,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,controller,type,the,controller,type,param,method,the,controller,method,param,args,argument,values,for,the,controller,method,return,a,uri,components,builder,instance,never,code,null,since,4,2;public,static,uri,components,builder,from,method,class,controller,type,method,method,object,args,return,from,method,internal,null,controller,type,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethod(Class<?> controllerType, Method method, Object... args);1529361191;Create a {@link UriComponentsBuilder} from the mapping of a controller method_and an array of method argument values. The array of values  must match the_signature of the controller method. Values for {@code @RequestParam} and_{@code @PathVariable} are used for building the URI (via implementations of_{@link org.springframework.web.method.support.UriComponentsContributor_UriComponentsContributor}) while remaining argument values are ignored and_can be {@code null}._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param controllerType the controller type_@param method the controller method_@param args argument values for the controller method_@return a UriComponentsBuilder instance, never {@code null}_@since 4.2;public static UriComponentsBuilder fromMethod(Class<?> controllerType, Method method, Object... args) {_		return fromMethodInternal(null, controllerType, method, args)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,method,and,an,array,of,method,argument,values,the,array,of,values,must,match,the,signature,of,the,controller,method,values,for,code,request,param,and,code,path,variable,are,used,for,building,the,uri,via,implementations,of,link,org,springframework,web,method,support,uri,components,contributor,uri,components,contributor,while,remaining,argument,values,are,ignored,and,can,be,code,null,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,controller,type,the,controller,type,param,method,the,controller,method,param,args,argument,values,for,the,controller,method,return,a,uri,components,builder,instance,never,code,null,since,4,2;public,static,uri,components,builder,from,method,class,controller,type,method,method,object,args,return,from,method,internal,null,controller,type,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethod(Class<?> controllerType, Method method, Object... args);1530174524;Create a {@link UriComponentsBuilder} from the mapping of a controller method_and an array of method argument values. The array of values  must match the_signature of the controller method. Values for {@code @RequestParam} and_{@code @PathVariable} are used for building the URI (via implementations of_{@link org.springframework.web.method.support.UriComponentsContributor_UriComponentsContributor}) while remaining argument values are ignored and_can be {@code null}._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param controllerType the controller type_@param method the controller method_@param args argument values for the controller method_@return a UriComponentsBuilder instance, never {@code null}_@since 4.2;public static UriComponentsBuilder fromMethod(Class<?> controllerType, Method method, Object... args) {_		return fromMethodInternal(null, controllerType, method, args)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,method,and,an,array,of,method,argument,values,the,array,of,values,must,match,the,signature,of,the,controller,method,values,for,code,request,param,and,code,path,variable,are,used,for,building,the,uri,via,implementations,of,link,org,springframework,web,method,support,uri,components,contributor,uri,components,contributor,while,remaining,argument,values,are,ignored,and,can,be,code,null,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,controller,type,the,controller,type,param,method,the,controller,method,param,args,argument,values,for,the,controller,method,return,a,uri,components,builder,instance,never,code,null,since,4,2;public,static,uri,components,builder,from,method,class,controller,type,method,method,object,args,return,from,method,internal,null,controller,type,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethod(Class<?> controllerType, Method method, Object... args);1532041662;Create a {@link UriComponentsBuilder} from the mapping of a controller method_and an array of method argument values. The array of values  must match the_signature of the controller method. Values for {@code @RequestParam} and_{@code @PathVariable} are used for building the URI (via implementations of_{@link org.springframework.web.method.support.UriComponentsContributor_UriComponentsContributor}) while remaining argument values are ignored and_can be {@code null}._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param controllerType the controller type_@param method the controller method_@param args argument values for the controller method_@return a UriComponentsBuilder instance, never {@code null}_@since 4.2;public static UriComponentsBuilder fromMethod(Class<?> controllerType, Method method, Object... args) {_		return fromMethodInternal(null, controllerType, method, args)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,method,and,an,array,of,method,argument,values,the,array,of,values,must,match,the,signature,of,the,controller,method,values,for,code,request,param,and,code,path,variable,are,used,for,building,the,uri,via,implementations,of,link,org,springframework,web,method,support,uri,components,contributor,uri,components,contributor,while,remaining,argument,values,are,ignored,and,can,be,code,null,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,controller,type,the,controller,type,param,method,the,controller,method,param,args,argument,values,for,the,controller,method,return,a,uri,components,builder,instance,never,code,null,since,4,2;public,static,uri,components,builder,from,method,class,controller,type,method,method,object,args,return,from,method,internal,null,controller,type,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethod(Class<?> controllerType, Method method, Object... args);1532041662;Create a {@link UriComponentsBuilder} from the mapping of a controller method_and an array of method argument values. The array of values  must match the_signature of the controller method. Values for {@code @RequestParam} and_{@code @PathVariable} are used for building the URI (via implementations of_{@link org.springframework.web.method.support.UriComponentsContributor_UriComponentsContributor}) while remaining argument values are ignored and_can be {@code null}._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param controllerType the controller type_@param method the controller method_@param args argument values for the controller method_@return a UriComponentsBuilder instance, never {@code null}_@since 4.2;public static UriComponentsBuilder fromMethod(Class<?> controllerType, Method method, Object... args) {_		return fromMethodInternal(null, controllerType, method, args)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,method,and,an,array,of,method,argument,values,the,array,of,values,must,match,the,signature,of,the,controller,method,values,for,code,request,param,and,code,path,variable,are,used,for,building,the,uri,via,implementations,of,link,org,springframework,web,method,support,uri,components,contributor,uri,components,contributor,while,remaining,argument,values,are,ignored,and,can,be,code,null,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,controller,type,the,controller,type,param,method,the,controller,method,param,args,argument,values,for,the,controller,method,return,a,uri,components,builder,instance,never,code,null,since,4,2;public,static,uri,components,builder,from,method,class,controller,type,method,method,object,args,return,from,method,internal,null,controller,type,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethod(Class<?> controllerType, Method method, Object... args);1548943222;Create a {@link UriComponentsBuilder} from the mapping of a controller method_and an array of method argument values. The array of values  must match the_signature of the controller method. Values for {@code @RequestParam} and_{@code @PathVariable} are used for building the URI (via implementations of_{@link org.springframework.web.method.support.UriComponentsContributor_UriComponentsContributor}) while remaining argument values are ignored and_can be {@code null}._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param controllerType the controller type_@param method the controller method_@param args argument values for the controller method_@return a UriComponentsBuilder instance, never {@code null}_@since 4.2;public static UriComponentsBuilder fromMethod(Class<?> controllerType, Method method, Object... args) {_		return fromMethodInternal(null, controllerType, method, args)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,method,and,an,array,of,method,argument,values,the,array,of,values,must,match,the,signature,of,the,controller,method,values,for,code,request,param,and,code,path,variable,are,used,for,building,the,uri,via,implementations,of,link,org,springframework,web,method,support,uri,components,contributor,uri,components,contributor,while,remaining,argument,values,are,ignored,and,can,be,code,null,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,controller,type,the,controller,type,param,method,the,controller,method,param,args,argument,values,for,the,controller,method,return,a,uri,components,builder,instance,never,code,null,since,4,2;public,static,uri,components,builder,from,method,class,controller,type,method,method,object,args,return,from,method,internal,null,controller,type,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethod(UriComponentsBuilder baseUrl, 			@Nullable Class<?> controllerType, Method method, Object... args);1496837955;An alternative to {@link #fromMethod(Class, Method, Object...)}_that accepts a {@code UriComponentsBuilder} representing the base URL._This is useful when using MvcUriComponentsBuilder outside the context of_processing a request or to apply a custom baseUrl not matching the_current request._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param baseUrl the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param controllerType the controller type_@param method the controller method_@param args argument values for the controller method_@return a UriComponentsBuilder instance (never {@code null})_@since 4.2;public static UriComponentsBuilder fromMethod(UriComponentsBuilder baseUrl,_			@Nullable Class<?> controllerType, Method method, Object... args) {__		return fromMethodInternal(baseUrl,_				(controllerType != null ? controllerType : method.getDeclaringClass()), method, args)__	};an,alternative,to,link,from,method,class,method,object,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,base,url,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,controller,type,the,controller,type,param,method,the,controller,method,param,args,argument,values,for,the,controller,method,return,a,uri,components,builder,instance,never,code,null,since,4,2;public,static,uri,components,builder,from,method,uri,components,builder,base,url,nullable,class,controller,type,method,method,object,args,return,from,method,internal,base,url,controller,type,null,controller,type,method,get,declaring,class,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethod(UriComponentsBuilder baseUrl, 			@Nullable Class<?> controllerType, Method method, Object... args);1497341397;An alternative to {@link #fromMethod(Class, Method, Object...)}_that accepts a {@code UriComponentsBuilder} representing the base URL._This is useful when using MvcUriComponentsBuilder outside the context of_processing a request or to apply a custom baseUrl not matching the_current request._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param baseUrl the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param controllerType the controller type_@param method the controller method_@param args argument values for the controller method_@return a UriComponentsBuilder instance (never {@code null})_@since 4.2;public static UriComponentsBuilder fromMethod(UriComponentsBuilder baseUrl,_			@Nullable Class<?> controllerType, Method method, Object... args) {__		return fromMethodInternal(baseUrl,_				(controllerType != null ? controllerType : method.getDeclaringClass()), method, args)__	};an,alternative,to,link,from,method,class,method,object,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,base,url,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,controller,type,the,controller,type,param,method,the,controller,method,param,args,argument,values,for,the,controller,method,return,a,uri,components,builder,instance,never,code,null,since,4,2;public,static,uri,components,builder,from,method,uri,components,builder,base,url,nullable,class,controller,type,method,method,object,args,return,from,method,internal,base,url,controller,type,null,controller,type,method,get,declaring,class,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethod(UriComponentsBuilder baseUrl, 			@Nullable Class<?> controllerType, Method method, Object... args);1498780456;An alternative to {@link #fromMethod(Class, Method, Object...)}_that accepts a {@code UriComponentsBuilder} representing the base URL._This is useful when using MvcUriComponentsBuilder outside the context of_processing a request or to apply a custom baseUrl not matching the_current request._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param baseUrl the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param controllerType the controller type_@param method the controller method_@param args argument values for the controller method_@return a UriComponentsBuilder instance (never {@code null})_@since 4.2;public static UriComponentsBuilder fromMethod(UriComponentsBuilder baseUrl,_			@Nullable Class<?> controllerType, Method method, Object... args) {__		return fromMethodInternal(baseUrl,_				(controllerType != null ? controllerType : method.getDeclaringClass()), method, args)__	};an,alternative,to,link,from,method,class,method,object,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,base,url,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,controller,type,the,controller,type,param,method,the,controller,method,param,args,argument,values,for,the,controller,method,return,a,uri,components,builder,instance,never,code,null,since,4,2;public,static,uri,components,builder,from,method,uri,components,builder,base,url,nullable,class,controller,type,method,method,object,args,return,from,method,internal,base,url,controller,type,null,controller,type,method,get,declaring,class,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethod(UriComponentsBuilder baseUrl, 			@Nullable Class<?> controllerType, Method method, Object... args);1500416137;An alternative to {@link #fromMethod(Class, Method, Object...)}_that accepts a {@code UriComponentsBuilder} representing the base URL._This is useful when using MvcUriComponentsBuilder outside the context of_processing a request or to apply a custom baseUrl not matching the_current request._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param baseUrl the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param controllerType the controller type_@param method the controller method_@param args argument values for the controller method_@return a UriComponentsBuilder instance (never {@code null})_@since 4.2;public static UriComponentsBuilder fromMethod(UriComponentsBuilder baseUrl,_			@Nullable Class<?> controllerType, Method method, Object... args) {__		return fromMethodInternal(baseUrl,_				(controllerType != null ? controllerType : method.getDeclaringClass()), method, args)__	};an,alternative,to,link,from,method,class,method,object,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,base,url,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,controller,type,the,controller,type,param,method,the,controller,method,param,args,argument,values,for,the,controller,method,return,a,uri,components,builder,instance,never,code,null,since,4,2;public,static,uri,components,builder,from,method,uri,components,builder,base,url,nullable,class,controller,type,method,method,object,args,return,from,method,internal,base,url,controller,type,null,controller,type,method,get,declaring,class,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethod(UriComponentsBuilder baseUrl, 			@Nullable Class<?> controllerType, Method method, Object... args);1506097334;An alternative to {@link #fromMethod(Class, Method, Object...)}_that accepts a {@code UriComponentsBuilder} representing the base URL._This is useful when using MvcUriComponentsBuilder outside the context of_processing a request or to apply a custom baseUrl not matching the_current request._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param baseUrl the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param controllerType the controller type_@param method the controller method_@param args argument values for the controller method_@return a UriComponentsBuilder instance (never {@code null})_@since 4.2;public static UriComponentsBuilder fromMethod(UriComponentsBuilder baseUrl,_			@Nullable Class<?> controllerType, Method method, Object... args) {__		return fromMethodInternal(baseUrl,_				(controllerType != null ? controllerType : method.getDeclaringClass()), method, args)__	};an,alternative,to,link,from,method,class,method,object,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,base,url,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,controller,type,the,controller,type,param,method,the,controller,method,param,args,argument,values,for,the,controller,method,return,a,uri,components,builder,instance,never,code,null,since,4,2;public,static,uri,components,builder,from,method,uri,components,builder,base,url,nullable,class,controller,type,method,method,object,args,return,from,method,internal,base,url,controller,type,null,controller,type,method,get,declaring,class,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethod(UriComponentsBuilder baseUrl, 			@Nullable Class<?> controllerType, Method method, Object... args);1518770299;An alternative to {@link #fromMethod(Class, Method, Object...)}_that accepts a {@code UriComponentsBuilder} representing the base URL._This is useful when using MvcUriComponentsBuilder outside the context of_processing a request or to apply a custom baseUrl not matching the_current request._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param baseUrl the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param controllerType the controller type_@param method the controller method_@param args argument values for the controller method_@return a UriComponentsBuilder instance (never {@code null})_@since 4.2;public static UriComponentsBuilder fromMethod(UriComponentsBuilder baseUrl,_			@Nullable Class<?> controllerType, Method method, Object... args) {__		return fromMethodInternal(baseUrl,_				(controllerType != null ? controllerType : method.getDeclaringClass()), method, args)__	};an,alternative,to,link,from,method,class,method,object,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,base,url,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,controller,type,the,controller,type,param,method,the,controller,method,param,args,argument,values,for,the,controller,method,return,a,uri,components,builder,instance,never,code,null,since,4,2;public,static,uri,components,builder,from,method,uri,components,builder,base,url,nullable,class,controller,type,method,method,object,args,return,from,method,internal,base,url,controller,type,null,controller,type,method,get,declaring,class,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethod(UriComponentsBuilder baseUrl, 			@Nullable Class<?> controllerType, Method method, Object... args);1522354261;An alternative to {@link #fromMethod(Class, Method, Object...)}_that accepts a {@code UriComponentsBuilder} representing the base URL._This is useful when using MvcUriComponentsBuilder outside the context of_processing a request or to apply a custom baseUrl not matching the_current request._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param baseUrl the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param controllerType the controller type_@param method the controller method_@param args argument values for the controller method_@return a UriComponentsBuilder instance (never {@code null})_@since 4.2;public static UriComponentsBuilder fromMethod(UriComponentsBuilder baseUrl,_			@Nullable Class<?> controllerType, Method method, Object... args) {__		return fromMethodInternal(baseUrl,_				(controllerType != null ? controllerType : method.getDeclaringClass()), method, args)__	};an,alternative,to,link,from,method,class,method,object,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,base,url,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,controller,type,the,controller,type,param,method,the,controller,method,param,args,argument,values,for,the,controller,method,return,a,uri,components,builder,instance,never,code,null,since,4,2;public,static,uri,components,builder,from,method,uri,components,builder,base,url,nullable,class,controller,type,method,method,object,args,return,from,method,internal,base,url,controller,type,null,controller,type,method,get,declaring,class,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethod(UriComponentsBuilder baseUrl, 			@Nullable Class<?> controllerType, Method method, Object... args);1523455554;An alternative to {@link #fromMethod(Class, Method, Object...)}_that accepts a {@code UriComponentsBuilder} representing the base URL._This is useful when using MvcUriComponentsBuilder outside the context of_processing a request or to apply a custom baseUrl not matching the_current request._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param baseUrl the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param controllerType the controller type_@param method the controller method_@param args argument values for the controller method_@return a UriComponentsBuilder instance (never {@code null})_@since 4.2;public static UriComponentsBuilder fromMethod(UriComponentsBuilder baseUrl,_			@Nullable Class<?> controllerType, Method method, Object... args) {__		return fromMethodInternal(baseUrl,_				(controllerType != null ? controllerType : method.getDeclaringClass()), method, args)__	};an,alternative,to,link,from,method,class,method,object,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,base,url,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,controller,type,the,controller,type,param,method,the,controller,method,param,args,argument,values,for,the,controller,method,return,a,uri,components,builder,instance,never,code,null,since,4,2;public,static,uri,components,builder,from,method,uri,components,builder,base,url,nullable,class,controller,type,method,method,object,args,return,from,method,internal,base,url,controller,type,null,controller,type,method,get,declaring,class,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethod(UriComponentsBuilder baseUrl, 			@Nullable Class<?> controllerType, Method method, Object... args);1529028426;An alternative to {@link #fromMethod(Class, Method, Object...)}_that accepts a {@code UriComponentsBuilder} representing the base URL._This is useful when using MvcUriComponentsBuilder outside the context of_processing a request or to apply a custom baseUrl not matching the_current request._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param baseUrl the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param controllerType the controller type_@param method the controller method_@param args argument values for the controller method_@return a UriComponentsBuilder instance (never {@code null})_@since 4.2;public static UriComponentsBuilder fromMethod(UriComponentsBuilder baseUrl,_			@Nullable Class<?> controllerType, Method method, Object... args) {__		return fromMethodInternal(baseUrl,_				(controllerType != null ? controllerType : method.getDeclaringClass()), method, args)__	};an,alternative,to,link,from,method,class,method,object,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,base,url,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,controller,type,the,controller,type,param,method,the,controller,method,param,args,argument,values,for,the,controller,method,return,a,uri,components,builder,instance,never,code,null,since,4,2;public,static,uri,components,builder,from,method,uri,components,builder,base,url,nullable,class,controller,type,method,method,object,args,return,from,method,internal,base,url,controller,type,null,controller,type,method,get,declaring,class,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethod(UriComponentsBuilder baseUrl, 			@Nullable Class<?> controllerType, Method method, Object... args);1529028426;An alternative to {@link #fromMethod(Class, Method, Object...)}_that accepts a {@code UriComponentsBuilder} representing the base URL._This is useful when using MvcUriComponentsBuilder outside the context of_processing a request or to apply a custom baseUrl not matching the_current request._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param baseUrl the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param controllerType the controller type_@param method the controller method_@param args argument values for the controller method_@return a UriComponentsBuilder instance (never {@code null})_@since 4.2;public static UriComponentsBuilder fromMethod(UriComponentsBuilder baseUrl,_			@Nullable Class<?> controllerType, Method method, Object... args) {__		return fromMethodInternal(baseUrl,_				(controllerType != null ? controllerType : method.getDeclaringClass()), method, args)__	};an,alternative,to,link,from,method,class,method,object,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,base,url,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,controller,type,the,controller,type,param,method,the,controller,method,param,args,argument,values,for,the,controller,method,return,a,uri,components,builder,instance,never,code,null,since,4,2;public,static,uri,components,builder,from,method,uri,components,builder,base,url,nullable,class,controller,type,method,method,object,args,return,from,method,internal,base,url,controller,type,null,controller,type,method,get,declaring,class,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethod(UriComponentsBuilder baseUrl, 			@Nullable Class<?> controllerType, Method method, Object... args);1529028713;An alternative to {@link #fromMethod(Class, Method, Object...)}_that accepts a {@code UriComponentsBuilder} representing the base URL._This is useful when using MvcUriComponentsBuilder outside the context of_processing a request or to apply a custom baseUrl not matching the_current request._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param baseUrl the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param controllerType the controller type_@param method the controller method_@param args argument values for the controller method_@return a UriComponentsBuilder instance (never {@code null})_@since 4.2;public static UriComponentsBuilder fromMethod(UriComponentsBuilder baseUrl,_			@Nullable Class<?> controllerType, Method method, Object... args) {__		return fromMethodInternal(baseUrl,_				(controllerType != null ? controllerType : method.getDeclaringClass()), method, args)__	};an,alternative,to,link,from,method,class,method,object,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,base,url,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,controller,type,the,controller,type,param,method,the,controller,method,param,args,argument,values,for,the,controller,method,return,a,uri,components,builder,instance,never,code,null,since,4,2;public,static,uri,components,builder,from,method,uri,components,builder,base,url,nullable,class,controller,type,method,method,object,args,return,from,method,internal,base,url,controller,type,null,controller,type,method,get,declaring,class,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethod(UriComponentsBuilder baseUrl, 			@Nullable Class<?> controllerType, Method method, Object... args);1529361191;An alternative to {@link #fromMethod(Class, Method, Object...)}_that accepts a {@code UriComponentsBuilder} representing the base URL._This is useful when using MvcUriComponentsBuilder outside the context of_processing a request or to apply a custom baseUrl not matching the_current request._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param baseUrl the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param controllerType the controller type_@param method the controller method_@param args argument values for the controller method_@return a UriComponentsBuilder instance (never {@code null})_@since 4.2;public static UriComponentsBuilder fromMethod(UriComponentsBuilder baseUrl,_			@Nullable Class<?> controllerType, Method method, Object... args) {__		return fromMethodInternal(baseUrl,_				(controllerType != null ? controllerType : method.getDeclaringClass()), method, args)__	};an,alternative,to,link,from,method,class,method,object,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,base,url,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,controller,type,the,controller,type,param,method,the,controller,method,param,args,argument,values,for,the,controller,method,return,a,uri,components,builder,instance,never,code,null,since,4,2;public,static,uri,components,builder,from,method,uri,components,builder,base,url,nullable,class,controller,type,method,method,object,args,return,from,method,internal,base,url,controller,type,null,controller,type,method,get,declaring,class,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethod(UriComponentsBuilder baseUrl, 			@Nullable Class<?> controllerType, Method method, Object... args);1530174524;An alternative to {@link #fromMethod(Class, Method, Object...)}_that accepts a {@code UriComponentsBuilder} representing the base URL._This is useful when using MvcUriComponentsBuilder outside the context of_processing a request or to apply a custom baseUrl not matching the_current request._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param baseUrl the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param controllerType the controller type_@param method the controller method_@param args argument values for the controller method_@return a UriComponentsBuilder instance (never {@code null})_@since 4.2;public static UriComponentsBuilder fromMethod(UriComponentsBuilder baseUrl,_			@Nullable Class<?> controllerType, Method method, Object... args) {__		return fromMethodInternal(baseUrl,_				(controllerType != null ? controllerType : method.getDeclaringClass()), method, args)__	};an,alternative,to,link,from,method,class,method,object,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,base,url,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,controller,type,the,controller,type,param,method,the,controller,method,param,args,argument,values,for,the,controller,method,return,a,uri,components,builder,instance,never,code,null,since,4,2;public,static,uri,components,builder,from,method,uri,components,builder,base,url,nullable,class,controller,type,method,method,object,args,return,from,method,internal,base,url,controller,type,null,controller,type,method,get,declaring,class,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethod(UriComponentsBuilder baseUrl, 			@Nullable Class<?> controllerType, Method method, Object... args);1532041662;An alternative to {@link #fromMethod(Class, Method, Object...)}_that accepts a {@code UriComponentsBuilder} representing the base URL._This is useful when using MvcUriComponentsBuilder outside the context of_processing a request or to apply a custom baseUrl not matching the_current request._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param baseUrl the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param controllerType the controller type_@param method the controller method_@param args argument values for the controller method_@return a UriComponentsBuilder instance (never {@code null})_@since 4.2;public static UriComponentsBuilder fromMethod(UriComponentsBuilder baseUrl,_			@Nullable Class<?> controllerType, Method method, Object... args) {__		return fromMethodInternal(baseUrl,_				(controllerType != null ? controllerType : method.getDeclaringClass()), method, args)__	};an,alternative,to,link,from,method,class,method,object,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,base,url,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,controller,type,the,controller,type,param,method,the,controller,method,param,args,argument,values,for,the,controller,method,return,a,uri,components,builder,instance,never,code,null,since,4,2;public,static,uri,components,builder,from,method,uri,components,builder,base,url,nullable,class,controller,type,method,method,object,args,return,from,method,internal,base,url,controller,type,null,controller,type,method,get,declaring,class,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethod(UriComponentsBuilder baseUrl, 			@Nullable Class<?> controllerType, Method method, Object... args);1532041662;An alternative to {@link #fromMethod(Class, Method, Object...)}_that accepts a {@code UriComponentsBuilder} representing the base URL._This is useful when using MvcUriComponentsBuilder outside the context of_processing a request or to apply a custom baseUrl not matching the_current request._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param baseUrl the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param controllerType the controller type_@param method the controller method_@param args argument values for the controller method_@return a UriComponentsBuilder instance (never {@code null})_@since 4.2;public static UriComponentsBuilder fromMethod(UriComponentsBuilder baseUrl,_			@Nullable Class<?> controllerType, Method method, Object... args) {__		return fromMethodInternal(baseUrl,_				(controllerType != null ? controllerType : method.getDeclaringClass()), method, args)__	};an,alternative,to,link,from,method,class,method,object,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,base,url,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,controller,type,the,controller,type,param,method,the,controller,method,param,args,argument,values,for,the,controller,method,return,a,uri,components,builder,instance,never,code,null,since,4,2;public,static,uri,components,builder,from,method,uri,components,builder,base,url,nullable,class,controller,type,method,method,object,args,return,from,method,internal,base,url,controller,type,null,controller,type,method,get,declaring,class,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethod(UriComponentsBuilder baseUrl, 			@Nullable Class<?> controllerType, Method method, Object... args);1548943222;An alternative to {@link #fromMethod(Class, Method, Object...)}_that accepts a {@code UriComponentsBuilder} representing the base URL._This is useful when using MvcUriComponentsBuilder outside the context of_processing a request or to apply a custom baseUrl not matching the_current request._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param baseUrl the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param controllerType the controller type_@param method the controller method_@param args argument values for the controller method_@return a UriComponentsBuilder instance (never {@code null})_@since 4.2;public static UriComponentsBuilder fromMethod(UriComponentsBuilder baseUrl,_			@Nullable Class<?> controllerType, Method method, Object... args) {__		return fromMethodInternal(baseUrl,_				(controllerType != null ? controllerType : method.getDeclaringClass()), method, args)__	};an,alternative,to,link,from,method,class,method,object,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,base,url,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,controller,type,the,controller,type,param,method,the,controller,method,param,args,argument,values,for,the,controller,method,return,a,uri,components,builder,instance,never,code,null,since,4,2;public,static,uri,components,builder,from,method,uri,components,builder,base,url,nullable,class,controller,type,method,method,object,args,return,from,method,internal,base,url,controller,type,null,controller,type,method,get,declaring,class,method,args
MvcUriComponentsBuilder -> public static MvcUriComponentsBuilder relativeTo(UriComponentsBuilder baseUrl);1429801417;Create an instance of this class with a base URL. After that calls to one_of the instance based {@code withXxx(...}} methods will create URLs relative_to the given base URL.;public static MvcUriComponentsBuilder relativeTo(UriComponentsBuilder baseUrl) {_		return new MvcUriComponentsBuilder(baseUrl)__	};create,an,instance,of,this,class,with,a,base,url,after,that,calls,to,one,of,the,instance,based,code,with,xxx,methods,will,create,urls,relative,to,the,given,base,url;public,static,mvc,uri,components,builder,relative,to,uri,components,builder,base,url,return,new,mvc,uri,components,builder,base,url
MvcUriComponentsBuilder -> public static MvcUriComponentsBuilder relativeTo(UriComponentsBuilder baseUrl);1429801944;Create an instance of this class with a base URL. After that calls to one_of the instance based {@code withXxx(...}} methods will create URLs relative_to the given base URL.;public static MvcUriComponentsBuilder relativeTo(UriComponentsBuilder baseUrl) {_		return new MvcUriComponentsBuilder(baseUrl)__	};create,an,instance,of,this,class,with,a,base,url,after,that,calls,to,one,of,the,instance,based,code,with,xxx,methods,will,create,urls,relative,to,the,given,base,url;public,static,mvc,uri,components,builder,relative,to,uri,components,builder,base,url,return,new,mvc,uri,components,builder,base,url
MvcUriComponentsBuilder -> public static MvcUriComponentsBuilder relativeTo(UriComponentsBuilder baseUrl);1429802180;Create an instance of this class with a base URL. After that calls to one_of the instance based {@code withXxx(...}} methods will create URLs relative_to the given base URL.;public static MvcUriComponentsBuilder relativeTo(UriComponentsBuilder baseUrl) {_		return new MvcUriComponentsBuilder(baseUrl)__	};create,an,instance,of,this,class,with,a,base,url,after,that,calls,to,one,of,the,instance,based,code,with,xxx,methods,will,create,urls,relative,to,the,given,base,url;public,static,mvc,uri,components,builder,relative,to,uri,components,builder,base,url,return,new,mvc,uri,components,builder,base,url
MvcUriComponentsBuilder -> public static MvcUriComponentsBuilder relativeTo(UriComponentsBuilder baseUrl);1429886024;Create an instance of this class with a base URL. After that calls to one_of the instance based {@code withXxx(...}} methods will create URLs relative_to the given base URL.;public static MvcUriComponentsBuilder relativeTo(UriComponentsBuilder baseUrl) {_		return new MvcUriComponentsBuilder(baseUrl)__	};create,an,instance,of,this,class,with,a,base,url,after,that,calls,to,one,of,the,instance,based,code,with,xxx,methods,will,create,urls,relative,to,the,given,base,url;public,static,mvc,uri,components,builder,relative,to,uri,components,builder,base,url,return,new,mvc,uri,components,builder,base,url
MvcUriComponentsBuilder -> public static MvcUriComponentsBuilder relativeTo(UriComponentsBuilder baseUrl);1429888980;Create an instance of this class with a base URL. After that calls to one_of the instance based {@code withXxx(...}} methods will create URLs relative_to the given base URL.;public static MvcUriComponentsBuilder relativeTo(UriComponentsBuilder baseUrl) {_		return new MvcUriComponentsBuilder(baseUrl)__	};create,an,instance,of,this,class,with,a,base,url,after,that,calls,to,one,of,the,instance,based,code,with,xxx,methods,will,create,urls,relative,to,the,given,base,url;public,static,mvc,uri,components,builder,relative,to,uri,components,builder,base,url,return,new,mvc,uri,components,builder,base,url
MvcUriComponentsBuilder -> public static MvcUriComponentsBuilder relativeTo(UriComponentsBuilder baseUrl);1430739806;Create an instance of this class with a base URL. After that calls to one_of the instance based {@code withXxx(...}} methods will create URLs relative_to the given base URL.;public static MvcUriComponentsBuilder relativeTo(UriComponentsBuilder baseUrl) {_		return new MvcUriComponentsBuilder(baseUrl)__	};create,an,instance,of,this,class,with,a,base,url,after,that,calls,to,one,of,the,instance,based,code,with,xxx,methods,will,create,urls,relative,to,the,given,base,url;public,static,mvc,uri,components,builder,relative,to,uri,components,builder,base,url,return,new,mvc,uri,components,builder,base,url
MvcUriComponentsBuilder -> public static MvcUriComponentsBuilder relativeTo(UriComponentsBuilder baseUrl);1430747547;Create an instance of this class with a base URL. After that calls to one_of the instance based {@code withXxx(...}} methods will create URLs relative_to the given base URL.;public static MvcUriComponentsBuilder relativeTo(UriComponentsBuilder baseUrl) {_		return new MvcUriComponentsBuilder(baseUrl)__	};create,an,instance,of,this,class,with,a,base,url,after,that,calls,to,one,of,the,instance,based,code,with,xxx,methods,will,create,urls,relative,to,the,given,base,url;public,static,mvc,uri,components,builder,relative,to,uri,components,builder,base,url,return,new,mvc,uri,components,builder,base,url
MvcUriComponentsBuilder -> public static MvcUriComponentsBuilder relativeTo(UriComponentsBuilder baseUrl);1430749606;Create an instance of this class with a base URL. After that calls to one_of the instance based {@code withXxx(...}} methods will create URLs relative_to the given base URL.;public static MvcUriComponentsBuilder relativeTo(UriComponentsBuilder baseUrl) {_		return new MvcUriComponentsBuilder(baseUrl)__	};create,an,instance,of,this,class,with,a,base,url,after,that,calls,to,one,of,the,instance,based,code,with,xxx,methods,will,create,urls,relative,to,the,given,base,url;public,static,mvc,uri,components,builder,relative,to,uri,components,builder,base,url,return,new,mvc,uri,components,builder,base,url
MvcUriComponentsBuilder -> public static MvcUriComponentsBuilder relativeTo(UriComponentsBuilder baseUrl);1431975386;Create an instance of this class with a base URL. After that calls to one_of the instance based {@code withXxx(...}} methods will create URLs relative_to the given base URL.;public static MvcUriComponentsBuilder relativeTo(UriComponentsBuilder baseUrl) {_		return new MvcUriComponentsBuilder(baseUrl)__	};create,an,instance,of,this,class,with,a,base,url,after,that,calls,to,one,of,the,instance,based,code,with,xxx,methods,will,create,urls,relative,to,the,given,base,url;public,static,mvc,uri,components,builder,relative,to,uri,components,builder,base,url,return,new,mvc,uri,components,builder,base,url
MvcUriComponentsBuilder -> public static MvcUriComponentsBuilder relativeTo(UriComponentsBuilder baseUrl);1432125256;Create an instance of this class with a base URL. After that calls to one_of the instance based {@code withXxx(...}} methods will create URLs relative_to the given base URL.;public static MvcUriComponentsBuilder relativeTo(UriComponentsBuilder baseUrl) {_		return new MvcUriComponentsBuilder(baseUrl)__	};create,an,instance,of,this,class,with,a,base,url,after,that,calls,to,one,of,the,instance,based,code,with,xxx,methods,will,create,urls,relative,to,the,given,base,url;public,static,mvc,uri,components,builder,relative,to,uri,components,builder,base,url,return,new,mvc,uri,components,builder,base,url
MvcUriComponentsBuilder -> public static MvcUriComponentsBuilder relativeTo(UriComponentsBuilder baseUrl);1432156007;Create an instance of this class with a base URL. After that calls to one_of the instance based {@code withXxx(...}} methods will create URLs relative_to the given base URL.;public static MvcUriComponentsBuilder relativeTo(UriComponentsBuilder baseUrl) {_		return new MvcUriComponentsBuilder(baseUrl)__	};create,an,instance,of,this,class,with,a,base,url,after,that,calls,to,one,of,the,instance,based,code,with,xxx,methods,will,create,urls,relative,to,the,given,base,url;public,static,mvc,uri,components,builder,relative,to,uri,components,builder,base,url,return,new,mvc,uri,components,builder,base,url
MvcUriComponentsBuilder -> public static MvcUriComponentsBuilder relativeTo(UriComponentsBuilder baseUrl);1432856630;Create an instance of this class with a base URL. After that calls to one_of the instance based {@code withXxx(...}} methods will create URLs relative_to the given base URL.;public static MvcUriComponentsBuilder relativeTo(UriComponentsBuilder baseUrl) {_		return new MvcUriComponentsBuilder(baseUrl)__	};create,an,instance,of,this,class,with,a,base,url,after,that,calls,to,one,of,the,instance,based,code,with,xxx,methods,will,create,urls,relative,to,the,given,base,url;public,static,mvc,uri,components,builder,relative,to,uri,components,builder,base,url,return,new,mvc,uri,components,builder,base,url
MvcUriComponentsBuilder -> public static MvcUriComponentsBuilder relativeTo(UriComponentsBuilder baseUrl);1432857824;Create an instance of this class with a base URL. After that calls to one_of the instance based {@code withXxx(...}} methods will create URLs relative_to the given base URL.;public static MvcUriComponentsBuilder relativeTo(UriComponentsBuilder baseUrl) {_		return new MvcUriComponentsBuilder(baseUrl)__	};create,an,instance,of,this,class,with,a,base,url,after,that,calls,to,one,of,the,instance,based,code,with,xxx,methods,will,create,urls,relative,to,the,given,base,url;public,static,mvc,uri,components,builder,relative,to,uri,components,builder,base,url,return,new,mvc,uri,components,builder,base,url
MvcUriComponentsBuilder -> public static MvcUriComponentsBuilder relativeTo(UriComponentsBuilder baseUrl);1434234880;Create an instance of this class with a base URL. After that calls to one_of the instance based {@code withXxx(...}} methods will create URLs relative_to the given base URL.;public static MvcUriComponentsBuilder relativeTo(UriComponentsBuilder baseUrl) {_		return new MvcUriComponentsBuilder(baseUrl)__	};create,an,instance,of,this,class,with,a,base,url,after,that,calls,to,one,of,the,instance,based,code,with,xxx,methods,will,create,urls,relative,to,the,given,base,url;public,static,mvc,uri,components,builder,relative,to,uri,components,builder,base,url,return,new,mvc,uri,components,builder,base,url
MvcUriComponentsBuilder -> public static MvcUriComponentsBuilder relativeTo(UriComponentsBuilder baseUrl);1434484897;Create an instance of this class with a base URL. After that calls to one_of the instance based {@code withXxx(...}} methods will create URLs relative_to the given base URL.;public static MvcUriComponentsBuilder relativeTo(UriComponentsBuilder baseUrl) {_		return new MvcUriComponentsBuilder(baseUrl)__	};create,an,instance,of,this,class,with,a,base,url,after,that,calls,to,one,of,the,instance,based,code,with,xxx,methods,will,create,urls,relative,to,the,given,base,url;public,static,mvc,uri,components,builder,relative,to,uri,components,builder,base,url,return,new,mvc,uri,components,builder,base,url
MvcUriComponentsBuilder -> public static MvcUriComponentsBuilder relativeTo(UriComponentsBuilder baseUrl);1434726592;Create an instance of this class with a base URL. After that calls to one_of the instance based {@code withXxx(...}} methods will create URLs relative_to the given base URL.;public static MvcUriComponentsBuilder relativeTo(UriComponentsBuilder baseUrl) {_		return new MvcUriComponentsBuilder(baseUrl)__	};create,an,instance,of,this,class,with,a,base,url,after,that,calls,to,one,of,the,instance,based,code,with,xxx,methods,will,create,urls,relative,to,the,given,base,url;public,static,mvc,uri,components,builder,relative,to,uri,components,builder,base,url,return,new,mvc,uri,components,builder,base,url
MvcUriComponentsBuilder -> public static MvcUriComponentsBuilder relativeTo(UriComponentsBuilder baseUrl);1435615322;Create an instance of this class with a base URL. After that calls to one_of the instance based {@code withXxx(...}} methods will create URLs relative_to the given base URL.;public static MvcUriComponentsBuilder relativeTo(UriComponentsBuilder baseUrl) {_		return new MvcUriComponentsBuilder(baseUrl)__	};create,an,instance,of,this,class,with,a,base,url,after,that,calls,to,one,of,the,instance,based,code,with,xxx,methods,will,create,urls,relative,to,the,given,base,url;public,static,mvc,uri,components,builder,relative,to,uri,components,builder,base,url,return,new,mvc,uri,components,builder,base,url
MvcUriComponentsBuilder -> public static MvcUriComponentsBuilder relativeTo(UriComponentsBuilder baseUrl);1439294371;Create an instance of this class with a base URL. After that calls to one_of the instance based {@code withXxx(...}} methods will create URLs relative_to the given base URL.;public static MvcUriComponentsBuilder relativeTo(UriComponentsBuilder baseUrl) {_		return new MvcUriComponentsBuilder(baseUrl)__	};create,an,instance,of,this,class,with,a,base,url,after,that,calls,to,one,of,the,instance,based,code,with,xxx,methods,will,create,urls,relative,to,the,given,base,url;public,static,mvc,uri,components,builder,relative,to,uri,components,builder,base,url,return,new,mvc,uri,components,builder,base,url
MvcUriComponentsBuilder -> public static MvcUriComponentsBuilder relativeTo(UriComponentsBuilder baseUrl);1447077465;Create an instance of this class with a base URL. After that calls to one_of the instance based {@code withXxx(...}} methods will create URLs relative_to the given base URL.;public static MvcUriComponentsBuilder relativeTo(UriComponentsBuilder baseUrl) {_		return new MvcUriComponentsBuilder(baseUrl)__	};create,an,instance,of,this,class,with,a,base,url,after,that,calls,to,one,of,the,instance,based,code,with,xxx,methods,will,create,urls,relative,to,the,given,base,url;public,static,mvc,uri,components,builder,relative,to,uri,components,builder,base,url,return,new,mvc,uri,components,builder,base,url
MvcUriComponentsBuilder -> public static MvcUriComponentsBuilder relativeTo(UriComponentsBuilder baseUrl);1458830024;Create an instance of this class with a base URL. After that calls to one_of the instance based {@code withXxx(...}} methods will create URLs relative_to the given base URL.;public static MvcUriComponentsBuilder relativeTo(UriComponentsBuilder baseUrl) {_		return new MvcUriComponentsBuilder(baseUrl)__	};create,an,instance,of,this,class,with,a,base,url,after,that,calls,to,one,of,the,instance,based,code,with,xxx,methods,will,create,urls,relative,to,the,given,base,url;public,static,mvc,uri,components,builder,relative,to,uri,components,builder,base,url,return,new,mvc,uri,components,builder,base,url
MvcUriComponentsBuilder -> public static MvcUriComponentsBuilder relativeTo(UriComponentsBuilder baseUrl);1461047077;Create an instance of this class with a base URL. After that calls to one_of the instance based {@code withXxx(...}} methods will create URLs relative_to the given base URL.;public static MvcUriComponentsBuilder relativeTo(UriComponentsBuilder baseUrl) {_		return new MvcUriComponentsBuilder(baseUrl)__	};create,an,instance,of,this,class,with,a,base,url,after,that,calls,to,one,of,the,instance,based,code,with,xxx,methods,will,create,urls,relative,to,the,given,base,url;public,static,mvc,uri,components,builder,relative,to,uri,components,builder,base,url,return,new,mvc,uri,components,builder,base,url
MvcUriComponentsBuilder -> public static MvcUriComponentsBuilder relativeTo(UriComponentsBuilder baseUrl);1467677340;Create an instance of this class with a base URL. After that calls to one_of the instance based {@code withXxx(...}} methods will create URLs relative_to the given base URL.;public static MvcUriComponentsBuilder relativeTo(UriComponentsBuilder baseUrl) {_		return new MvcUriComponentsBuilder(baseUrl)__	};create,an,instance,of,this,class,with,a,base,url,after,that,calls,to,one,of,the,instance,based,code,with,xxx,methods,will,create,urls,relative,to,the,given,base,url;public,static,mvc,uri,components,builder,relative,to,uri,components,builder,base,url,return,new,mvc,uri,components,builder,base,url
MvcUriComponentsBuilder -> public static MvcUriComponentsBuilder relativeTo(UriComponentsBuilder baseUrl);1467726769;Create an instance of this class with a base URL. After that calls to one_of the instance based {@code withXxx(...}} methods will create URLs relative_to the given base URL.;public static MvcUriComponentsBuilder relativeTo(UriComponentsBuilder baseUrl) {_		return new MvcUriComponentsBuilder(baseUrl)__	};create,an,instance,of,this,class,with,a,base,url,after,that,calls,to,one,of,the,instance,based,code,with,xxx,methods,will,create,urls,relative,to,the,given,base,url;public,static,mvc,uri,components,builder,relative,to,uri,components,builder,base,url,return,new,mvc,uri,components,builder,base,url
MvcUriComponentsBuilder -> public static MvcUriComponentsBuilder relativeTo(UriComponentsBuilder baseUrl);1467730834;Create an instance of this class with a base URL. After that calls to one_of the instance based {@code withXxx(...}} methods will create URLs relative_to the given base URL.;public static MvcUriComponentsBuilder relativeTo(UriComponentsBuilder baseUrl) {_		return new MvcUriComponentsBuilder(baseUrl)__	};create,an,instance,of,this,class,with,a,base,url,after,that,calls,to,one,of,the,instance,based,code,with,xxx,methods,will,create,urls,relative,to,the,given,base,url;public,static,mvc,uri,components,builder,relative,to,uri,components,builder,base,url,return,new,mvc,uri,components,builder,base,url
MvcUriComponentsBuilder -> public static MvcUriComponentsBuilder relativeTo(UriComponentsBuilder baseUrl);1467846264;Create an instance of this class with a base URL. After that calls to one_of the instance based {@code withXxx(...}} methods will create URLs relative_to the given base URL.;public static MvcUriComponentsBuilder relativeTo(UriComponentsBuilder baseUrl) {_		return new MvcUriComponentsBuilder(baseUrl)__	};create,an,instance,of,this,class,with,a,base,url,after,that,calls,to,one,of,the,instance,based,code,with,xxx,methods,will,create,urls,relative,to,the,given,base,url;public,static,mvc,uri,components,builder,relative,to,uri,components,builder,base,url,return,new,mvc,uri,components,builder,base,url
MvcUriComponentsBuilder -> public static MvcUriComponentsBuilder relativeTo(UriComponentsBuilder baseUrl);1468613531;Create an instance of this class with a base URL. After that calls to one_of the instance based {@code withXxx(...}} methods will create URLs relative_to the given base URL.;public static MvcUriComponentsBuilder relativeTo(UriComponentsBuilder baseUrl) {_		return new MvcUriComponentsBuilder(baseUrl)__	};create,an,instance,of,this,class,with,a,base,url,after,that,calls,to,one,of,the,instance,based,code,with,xxx,methods,will,create,urls,relative,to,the,given,base,url;public,static,mvc,uri,components,builder,relative,to,uri,components,builder,base,url,return,new,mvc,uri,components,builder,base,url
MvcUriComponentsBuilder -> public static MvcUriComponentsBuilder relativeTo(UriComponentsBuilder baseUrl);1468948866;Create an instance of this class with a base URL. After that calls to one_of the instance based {@code withXxx(...}} methods will create URLs relative_to the given base URL.;public static MvcUriComponentsBuilder relativeTo(UriComponentsBuilder baseUrl) {_		return new MvcUriComponentsBuilder(baseUrl)__	};create,an,instance,of,this,class,with,a,base,url,after,that,calls,to,one,of,the,instance,based,code,with,xxx,methods,will,create,urls,relative,to,the,given,base,url;public,static,mvc,uri,components,builder,relative,to,uri,components,builder,base,url,return,new,mvc,uri,components,builder,base,url
MvcUriComponentsBuilder -> public static MvcUriComponentsBuilder relativeTo(UriComponentsBuilder baseUrl);1485810955;Create an instance of this class with a base URL. After that calls to one_of the instance based {@code withXxx(...}} methods will create URLs relative_to the given base URL.;public static MvcUriComponentsBuilder relativeTo(UriComponentsBuilder baseUrl) {_		return new MvcUriComponentsBuilder(baseUrl)__	};create,an,instance,of,this,class,with,a,base,url,after,that,calls,to,one,of,the,instance,based,code,with,xxx,methods,will,create,urls,relative,to,the,given,base,url;public,static,mvc,uri,components,builder,relative,to,uri,components,builder,base,url,return,new,mvc,uri,components,builder,base,url
MvcUriComponentsBuilder -> public static MvcUriComponentsBuilder relativeTo(UriComponentsBuilder baseUrl);1486634978;Create an instance of this class with a base URL. After that calls to one_of the instance based {@code withXxx(...}} methods will create URLs relative_to the given base URL.;public static MvcUriComponentsBuilder relativeTo(UriComponentsBuilder baseUrl) {_		return new MvcUriComponentsBuilder(baseUrl)__	};create,an,instance,of,this,class,with,a,base,url,after,that,calls,to,one,of,the,instance,based,code,with,xxx,methods,will,create,urls,relative,to,the,given,base,url;public,static,mvc,uri,components,builder,relative,to,uri,components,builder,base,url,return,new,mvc,uri,components,builder,base,url
MvcUriComponentsBuilder -> public static MvcUriComponentsBuilder relativeTo(UriComponentsBuilder baseUrl);1486635693;Create an instance of this class with a base URL. After that calls to one_of the instance based {@code withXxx(...}} methods will create URLs relative_to the given base URL.;public static MvcUriComponentsBuilder relativeTo(UriComponentsBuilder baseUrl) {_		return new MvcUriComponentsBuilder(baseUrl)__	};create,an,instance,of,this,class,with,a,base,url,after,that,calls,to,one,of,the,instance,based,code,with,xxx,methods,will,create,urls,relative,to,the,given,base,url;public,static,mvc,uri,components,builder,relative,to,uri,components,builder,base,url,return,new,mvc,uri,components,builder,base,url
MvcUriComponentsBuilder -> public static MvcUriComponentsBuilder relativeTo(UriComponentsBuilder baseUrl);1495868221;Create an instance of this class with a base URL. After that calls to one_of the instance based {@code withXxx(...}} methods will create URLs relative_to the given base URL.;public static MvcUriComponentsBuilder relativeTo(UriComponentsBuilder baseUrl) {_		return new MvcUriComponentsBuilder(baseUrl)__	};create,an,instance,of,this,class,with,a,base,url,after,that,calls,to,one,of,the,instance,based,code,with,xxx,methods,will,create,urls,relative,to,the,given,base,url;public,static,mvc,uri,components,builder,relative,to,uri,components,builder,base,url,return,new,mvc,uri,components,builder,base,url
MvcUriComponentsBuilder -> public static MvcUriComponentsBuilder relativeTo(UriComponentsBuilder baseUrl);1496242568;Create an instance of this class with a base URL. After that calls to one_of the instance based {@code withXxx(...}} methods will create URLs relative_to the given base URL.;public static MvcUriComponentsBuilder relativeTo(UriComponentsBuilder baseUrl) {_		return new MvcUriComponentsBuilder(baseUrl)__	};create,an,instance,of,this,class,with,a,base,url,after,that,calls,to,one,of,the,instance,based,code,with,xxx,methods,will,create,urls,relative,to,the,given,base,url;public,static,mvc,uri,components,builder,relative,to,uri,components,builder,base,url,return,new,mvc,uri,components,builder,base,url
MvcUriComponentsBuilder -> public static MvcUriComponentsBuilder relativeTo(UriComponentsBuilder baseUrl);1496259743;Create an instance of this class with a base URL. After that calls to one_of the instance based {@code withXxx(...}} methods will create URLs relative_to the given base URL.;public static MvcUriComponentsBuilder relativeTo(UriComponentsBuilder baseUrl) {_		return new MvcUriComponentsBuilder(baseUrl)__	};create,an,instance,of,this,class,with,a,base,url,after,that,calls,to,one,of,the,instance,based,code,with,xxx,methods,will,create,urls,relative,to,the,given,base,url;public,static,mvc,uri,components,builder,relative,to,uri,components,builder,base,url,return,new,mvc,uri,components,builder,base,url
MvcUriComponentsBuilder -> public static MvcUriComponentsBuilder relativeTo(UriComponentsBuilder baseUrl);1496370972;Create an instance of this class with a base URL. After that calls to one_of the instance based {@code withXxx(...}} methods will create URLs relative_to the given base URL.;public static MvcUriComponentsBuilder relativeTo(UriComponentsBuilder baseUrl) {_		return new MvcUriComponentsBuilder(baseUrl)__	};create,an,instance,of,this,class,with,a,base,url,after,that,calls,to,one,of,the,instance,based,code,with,xxx,methods,will,create,urls,relative,to,the,given,base,url;public,static,mvc,uri,components,builder,relative,to,uri,components,builder,base,url,return,new,mvc,uri,components,builder,base,url
MvcUriComponentsBuilder -> public static MvcUriComponentsBuilder relativeTo(UriComponentsBuilder baseUrl);1496837955;Create an instance of this class with a base URL. After that calls to one_of the instance based {@code withXxx(...}} methods will create URLs relative_to the given base URL.;public static MvcUriComponentsBuilder relativeTo(UriComponentsBuilder baseUrl) {_		return new MvcUriComponentsBuilder(baseUrl)__	};create,an,instance,of,this,class,with,a,base,url,after,that,calls,to,one,of,the,instance,based,code,with,xxx,methods,will,create,urls,relative,to,the,given,base,url;public,static,mvc,uri,components,builder,relative,to,uri,components,builder,base,url,return,new,mvc,uri,components,builder,base,url
MvcUriComponentsBuilder -> public static MvcUriComponentsBuilder relativeTo(UriComponentsBuilder baseUrl);1497341397;Create an instance of this class with a base URL. After that calls to one_of the instance based {@code withXxx(...}} methods will create URLs relative_to the given base URL.;public static MvcUriComponentsBuilder relativeTo(UriComponentsBuilder baseUrl) {_		return new MvcUriComponentsBuilder(baseUrl)__	};create,an,instance,of,this,class,with,a,base,url,after,that,calls,to,one,of,the,instance,based,code,with,xxx,methods,will,create,urls,relative,to,the,given,base,url;public,static,mvc,uri,components,builder,relative,to,uri,components,builder,base,url,return,new,mvc,uri,components,builder,base,url
MvcUriComponentsBuilder -> public static MvcUriComponentsBuilder relativeTo(UriComponentsBuilder baseUrl);1498780456;Create an instance of this class with a base URL. After that calls to one_of the instance based {@code withXxx(...}} methods will create URLs relative_to the given base URL.;public static MvcUriComponentsBuilder relativeTo(UriComponentsBuilder baseUrl) {_		return new MvcUriComponentsBuilder(baseUrl)__	};create,an,instance,of,this,class,with,a,base,url,after,that,calls,to,one,of,the,instance,based,code,with,xxx,methods,will,create,urls,relative,to,the,given,base,url;public,static,mvc,uri,components,builder,relative,to,uri,components,builder,base,url,return,new,mvc,uri,components,builder,base,url
MvcUriComponentsBuilder -> public static MvcUriComponentsBuilder relativeTo(UriComponentsBuilder baseUrl);1500416137;Create an instance of this class with a base URL. After that calls to one_of the instance based {@code withXxx(...}} methods will create URLs relative_to the given base URL.;public static MvcUriComponentsBuilder relativeTo(UriComponentsBuilder baseUrl) {_		return new MvcUriComponentsBuilder(baseUrl)__	};create,an,instance,of,this,class,with,a,base,url,after,that,calls,to,one,of,the,instance,based,code,with,xxx,methods,will,create,urls,relative,to,the,given,base,url;public,static,mvc,uri,components,builder,relative,to,uri,components,builder,base,url,return,new,mvc,uri,components,builder,base,url
MvcUriComponentsBuilder -> public static MvcUriComponentsBuilder relativeTo(UriComponentsBuilder baseUrl);1506097334;Create an instance of this class with a base URL. After that calls to one_of the instance based {@code withXxx(...}} methods will create URLs relative_to the given base URL.;public static MvcUriComponentsBuilder relativeTo(UriComponentsBuilder baseUrl) {_		return new MvcUriComponentsBuilder(baseUrl)__	};create,an,instance,of,this,class,with,a,base,url,after,that,calls,to,one,of,the,instance,based,code,with,xxx,methods,will,create,urls,relative,to,the,given,base,url;public,static,mvc,uri,components,builder,relative,to,uri,components,builder,base,url,return,new,mvc,uri,components,builder,base,url
MvcUriComponentsBuilder -> public static MvcUriComponentsBuilder relativeTo(UriComponentsBuilder baseUrl);1518770299;Create an instance of this class with a base URL. After that calls to one_of the instance based {@code withXxx(...}} methods will create URLs relative_to the given base URL.;public static MvcUriComponentsBuilder relativeTo(UriComponentsBuilder baseUrl) {_		return new MvcUriComponentsBuilder(baseUrl)__	};create,an,instance,of,this,class,with,a,base,url,after,that,calls,to,one,of,the,instance,based,code,with,xxx,methods,will,create,urls,relative,to,the,given,base,url;public,static,mvc,uri,components,builder,relative,to,uri,components,builder,base,url,return,new,mvc,uri,components,builder,base,url
MvcUriComponentsBuilder -> public static MvcUriComponentsBuilder relativeTo(UriComponentsBuilder baseUrl);1522354261;Create an instance of this class with a base URL. After that calls to one_of the instance based {@code withXxx(...}} methods will create URLs relative_to the given base URL.;public static MvcUriComponentsBuilder relativeTo(UriComponentsBuilder baseUrl) {_		return new MvcUriComponentsBuilder(baseUrl)__	};create,an,instance,of,this,class,with,a,base,url,after,that,calls,to,one,of,the,instance,based,code,with,xxx,methods,will,create,urls,relative,to,the,given,base,url;public,static,mvc,uri,components,builder,relative,to,uri,components,builder,base,url,return,new,mvc,uri,components,builder,base,url
MvcUriComponentsBuilder -> public static MvcUriComponentsBuilder relativeTo(UriComponentsBuilder baseUrl);1523455554;Create an instance of this class with a base URL. After that calls to one_of the instance based {@code withXxx(...}} methods will create URLs relative_to the given base URL.;public static MvcUriComponentsBuilder relativeTo(UriComponentsBuilder baseUrl) {_		return new MvcUriComponentsBuilder(baseUrl)__	};create,an,instance,of,this,class,with,a,base,url,after,that,calls,to,one,of,the,instance,based,code,with,xxx,methods,will,create,urls,relative,to,the,given,base,url;public,static,mvc,uri,components,builder,relative,to,uri,components,builder,base,url,return,new,mvc,uri,components,builder,base,url
MvcUriComponentsBuilder -> public static MvcUriComponentsBuilder relativeTo(UriComponentsBuilder baseUrl);1529028426;Create an instance of this class with a base URL. After that calls to one_of the instance based {@code withXxx(...}} methods will create URLs relative_to the given base URL.;public static MvcUriComponentsBuilder relativeTo(UriComponentsBuilder baseUrl) {_		return new MvcUriComponentsBuilder(baseUrl)__	};create,an,instance,of,this,class,with,a,base,url,after,that,calls,to,one,of,the,instance,based,code,with,xxx,methods,will,create,urls,relative,to,the,given,base,url;public,static,mvc,uri,components,builder,relative,to,uri,components,builder,base,url,return,new,mvc,uri,components,builder,base,url
MvcUriComponentsBuilder -> public static MvcUriComponentsBuilder relativeTo(UriComponentsBuilder baseUrl);1529028426;Create an instance of this class with a base URL. After that calls to one_of the instance based {@code withXxx(...}} methods will create URLs relative_to the given base URL.;public static MvcUriComponentsBuilder relativeTo(UriComponentsBuilder baseUrl) {_		return new MvcUriComponentsBuilder(baseUrl)__	};create,an,instance,of,this,class,with,a,base,url,after,that,calls,to,one,of,the,instance,based,code,with,xxx,methods,will,create,urls,relative,to,the,given,base,url;public,static,mvc,uri,components,builder,relative,to,uri,components,builder,base,url,return,new,mvc,uri,components,builder,base,url
MvcUriComponentsBuilder -> public static MvcUriComponentsBuilder relativeTo(UriComponentsBuilder baseUrl);1529028713;Create an instance of this class with a base URL. After that calls to one_of the instance based {@code withXxx(...}} methods will create URLs relative_to the given base URL.;public static MvcUriComponentsBuilder relativeTo(UriComponentsBuilder baseUrl) {_		return new MvcUriComponentsBuilder(baseUrl)__	};create,an,instance,of,this,class,with,a,base,url,after,that,calls,to,one,of,the,instance,based,code,with,xxx,methods,will,create,urls,relative,to,the,given,base,url;public,static,mvc,uri,components,builder,relative,to,uri,components,builder,base,url,return,new,mvc,uri,components,builder,base,url
MvcUriComponentsBuilder -> public static MvcUriComponentsBuilder relativeTo(UriComponentsBuilder baseUrl);1529361191;Create an instance of this class with a base URL. After that calls to one_of the instance based {@code withXxx(...}} methods will create URLs relative_to the given base URL.;public static MvcUriComponentsBuilder relativeTo(UriComponentsBuilder baseUrl) {_		return new MvcUriComponentsBuilder(baseUrl)__	};create,an,instance,of,this,class,with,a,base,url,after,that,calls,to,one,of,the,instance,based,code,with,xxx,methods,will,create,urls,relative,to,the,given,base,url;public,static,mvc,uri,components,builder,relative,to,uri,components,builder,base,url,return,new,mvc,uri,components,builder,base,url
MvcUriComponentsBuilder -> public static MvcUriComponentsBuilder relativeTo(UriComponentsBuilder baseUrl);1530174524;Create an instance of this class with a base URL. After that calls to one_of the instance based {@code withXxx(...}} methods will create URLs relative_to the given base URL.;public static MvcUriComponentsBuilder relativeTo(UriComponentsBuilder baseUrl) {_		return new MvcUriComponentsBuilder(baseUrl)__	};create,an,instance,of,this,class,with,a,base,url,after,that,calls,to,one,of,the,instance,based,code,with,xxx,methods,will,create,urls,relative,to,the,given,base,url;public,static,mvc,uri,components,builder,relative,to,uri,components,builder,base,url,return,new,mvc,uri,components,builder,base,url
MvcUriComponentsBuilder -> public static MvcUriComponentsBuilder relativeTo(UriComponentsBuilder baseUrl);1532041662;Create an instance of this class with a base URL. After that calls to one_of the instance based {@code withXxx(...}} methods will create URLs relative_to the given base URL.;public static MvcUriComponentsBuilder relativeTo(UriComponentsBuilder baseUrl) {_		return new MvcUriComponentsBuilder(baseUrl)__	};create,an,instance,of,this,class,with,a,base,url,after,that,calls,to,one,of,the,instance,based,code,with,xxx,methods,will,create,urls,relative,to,the,given,base,url;public,static,mvc,uri,components,builder,relative,to,uri,components,builder,base,url,return,new,mvc,uri,components,builder,base,url
MvcUriComponentsBuilder -> public static MvcUriComponentsBuilder relativeTo(UriComponentsBuilder baseUrl);1532041662;Create an instance of this class with a base URL. After that calls to one_of the instance based {@code withXxx(...}} methods will create URLs relative_to the given base URL.;public static MvcUriComponentsBuilder relativeTo(UriComponentsBuilder baseUrl) {_		return new MvcUriComponentsBuilder(baseUrl)__	};create,an,instance,of,this,class,with,a,base,url,after,that,calls,to,one,of,the,instance,based,code,with,xxx,methods,will,create,urls,relative,to,the,given,base,url;public,static,mvc,uri,components,builder,relative,to,uri,components,builder,base,url,return,new,mvc,uri,components,builder,base,url
MvcUriComponentsBuilder -> public static MvcUriComponentsBuilder relativeTo(UriComponentsBuilder baseUrl);1548943222;Create an instance of this class with a base URL. After that calls to one_of the instance based {@code withXxx(...}} methods will create URLs relative_to the given base URL.;public static MvcUriComponentsBuilder relativeTo(UriComponentsBuilder baseUrl) {_		return new MvcUriComponentsBuilder(baseUrl)__	};create,an,instance,of,this,class,with,a,base,url,after,that,calls,to,one,of,the,instance,based,code,with,xxx,methods,will,create,urls,relative,to,the,given,base,url;public,static,mvc,uri,components,builder,relative,to,uri,components,builder,base,url,return,new,mvc,uri,components,builder,base,url
MvcUriComponentsBuilder -> MethodArgumentBuilder -> public MethodArgumentBuilder(@Nullable UriComponentsBuilder baseUrl, Class<?> controllerType, Method method);1496837955;@since 4.2;public MethodArgumentBuilder(@Nullable UriComponentsBuilder baseUrl, Class<?> controllerType, Method method) {_			Assert.notNull(controllerType, "'controllerType' is required")__			Assert.notNull(method, "'method' is required")__			this.baseUrl = (baseUrl != null ? baseUrl : initBaseUrl())__			this.controllerType = controllerType__			this.method = method__			this.argumentValues = new Object[method.getParameterCount()]__			for (int i = 0_ i < this.argumentValues.length_ i++) {_				this.argumentValues[i] = null__			}_		};since,4,2;public,method,argument,builder,nullable,uri,components,builder,base,url,class,controller,type,method,method,assert,not,null,controller,type,controller,type,is,required,assert,not,null,method,method,is,required,this,base,url,base,url,null,base,url,init,base,url,this,controller,type,controller,type,this,method,method,this,argument,values,new,object,method,get,parameter,count,for,int,i,0,i,this,argument,values,length,i,this,argument,values,i,null
MvcUriComponentsBuilder -> MethodArgumentBuilder -> public MethodArgumentBuilder(@Nullable UriComponentsBuilder baseUrl, Class<?> controllerType, Method method);1497341397;@since 4.2;public MethodArgumentBuilder(@Nullable UriComponentsBuilder baseUrl, Class<?> controllerType, Method method) {_			Assert.notNull(controllerType, "'controllerType' is required")__			Assert.notNull(method, "'method' is required")__			this.baseUrl = (baseUrl != null ? baseUrl : initBaseUrl())__			this.controllerType = controllerType__			this.method = method__			this.argumentValues = new Object[method.getParameterCount()]__			for (int i = 0_ i < this.argumentValues.length_ i++) {_				this.argumentValues[i] = null__			}_		};since,4,2;public,method,argument,builder,nullable,uri,components,builder,base,url,class,controller,type,method,method,assert,not,null,controller,type,controller,type,is,required,assert,not,null,method,method,is,required,this,base,url,base,url,null,base,url,init,base,url,this,controller,type,controller,type,this,method,method,this,argument,values,new,object,method,get,parameter,count,for,int,i,0,i,this,argument,values,length,i,this,argument,values,i,null
MvcUriComponentsBuilder -> MethodArgumentBuilder -> public MethodArgumentBuilder(@Nullable UriComponentsBuilder baseUrl, Class<?> controllerType, Method method);1498780456;@since 4.2;public MethodArgumentBuilder(@Nullable UriComponentsBuilder baseUrl, Class<?> controllerType, Method method) {_			Assert.notNull(controllerType, "'controllerType' is required")__			Assert.notNull(method, "'method' is required")__			this.baseUrl = (baseUrl != null ? baseUrl : initBaseUrl())__			this.controllerType = controllerType__			this.method = method__			this.argumentValues = new Object[method.getParameterCount()]__			for (int i = 0_ i < this.argumentValues.length_ i++) {_				this.argumentValues[i] = null__			}_		};since,4,2;public,method,argument,builder,nullable,uri,components,builder,base,url,class,controller,type,method,method,assert,not,null,controller,type,controller,type,is,required,assert,not,null,method,method,is,required,this,base,url,base,url,null,base,url,init,base,url,this,controller,type,controller,type,this,method,method,this,argument,values,new,object,method,get,parameter,count,for,int,i,0,i,this,argument,values,length,i,this,argument,values,i,null
MvcUriComponentsBuilder -> MethodArgumentBuilder -> public MethodArgumentBuilder(@Nullable UriComponentsBuilder baseUrl, Class<?> controllerType, Method method);1500416137;@since 4.2;public MethodArgumentBuilder(@Nullable UriComponentsBuilder baseUrl, Class<?> controllerType, Method method) {_			Assert.notNull(controllerType, "'controllerType' is required")__			Assert.notNull(method, "'method' is required")__			this.baseUrl = (baseUrl != null ? baseUrl : initBaseUrl())__			this.controllerType = controllerType__			this.method = method__			this.argumentValues = new Object[method.getParameterCount()]__			for (int i = 0_ i < this.argumentValues.length_ i++) {_				this.argumentValues[i] = null__			}_		};since,4,2;public,method,argument,builder,nullable,uri,components,builder,base,url,class,controller,type,method,method,assert,not,null,controller,type,controller,type,is,required,assert,not,null,method,method,is,required,this,base,url,base,url,null,base,url,init,base,url,this,controller,type,controller,type,this,method,method,this,argument,values,new,object,method,get,parameter,count,for,int,i,0,i,this,argument,values,length,i,this,argument,values,i,null
MvcUriComponentsBuilder -> MethodArgumentBuilder -> public MethodArgumentBuilder(@Nullable UriComponentsBuilder baseUrl, Class<?> controllerType, Method method);1506097334;@since 4.2;public MethodArgumentBuilder(@Nullable UriComponentsBuilder baseUrl, Class<?> controllerType, Method method) {_			Assert.notNull(controllerType, "'controllerType' is required")__			Assert.notNull(method, "'method' is required")__			this.baseUrl = (baseUrl != null ? baseUrl : initBaseUrl())__			this.controllerType = controllerType__			this.method = method__			this.argumentValues = new Object[method.getParameterCount()]__			for (int i = 0_ i < this.argumentValues.length_ i++) {_				this.argumentValues[i] = null__			}_		};since,4,2;public,method,argument,builder,nullable,uri,components,builder,base,url,class,controller,type,method,method,assert,not,null,controller,type,controller,type,is,required,assert,not,null,method,method,is,required,this,base,url,base,url,null,base,url,init,base,url,this,controller,type,controller,type,this,method,method,this,argument,values,new,object,method,get,parameter,count,for,int,i,0,i,this,argument,values,length,i,this,argument,values,i,null
MvcUriComponentsBuilder -> MethodArgumentBuilder -> public MethodArgumentBuilder(@Nullable UriComponentsBuilder baseUrl, Class<?> controllerType, Method method);1518770299;@since 4.2;public MethodArgumentBuilder(@Nullable UriComponentsBuilder baseUrl, Class<?> controllerType, Method method) {_			Assert.notNull(controllerType, "'controllerType' is required")__			Assert.notNull(method, "'method' is required")__			this.baseUrl = (baseUrl != null ? baseUrl : initBaseUrl())__			this.controllerType = controllerType__			this.method = method__			this.argumentValues = new Object[method.getParameterCount()]__			for (int i = 0_ i < this.argumentValues.length_ i++) {_				this.argumentValues[i] = null__			}_		};since,4,2;public,method,argument,builder,nullable,uri,components,builder,base,url,class,controller,type,method,method,assert,not,null,controller,type,controller,type,is,required,assert,not,null,method,method,is,required,this,base,url,base,url,null,base,url,init,base,url,this,controller,type,controller,type,this,method,method,this,argument,values,new,object,method,get,parameter,count,for,int,i,0,i,this,argument,values,length,i,this,argument,values,i,null
MvcUriComponentsBuilder -> MethodArgumentBuilder -> public MethodArgumentBuilder(@Nullable UriComponentsBuilder baseUrl, Class<?> controllerType, Method method);1522354261;@since 4.2;public MethodArgumentBuilder(@Nullable UriComponentsBuilder baseUrl, Class<?> controllerType, Method method) {_			Assert.notNull(controllerType, "'controllerType' is required")__			Assert.notNull(method, "'method' is required")__			this.baseUrl = (baseUrl != null ? baseUrl : initBaseUrl())__			this.controllerType = controllerType__			this.method = method__			this.argumentValues = new Object[method.getParameterCount()]__			for (int i = 0_ i < this.argumentValues.length_ i++) {_				this.argumentValues[i] = null__			}_		};since,4,2;public,method,argument,builder,nullable,uri,components,builder,base,url,class,controller,type,method,method,assert,not,null,controller,type,controller,type,is,required,assert,not,null,method,method,is,required,this,base,url,base,url,null,base,url,init,base,url,this,controller,type,controller,type,this,method,method,this,argument,values,new,object,method,get,parameter,count,for,int,i,0,i,this,argument,values,length,i,this,argument,values,i,null
MvcUriComponentsBuilder -> MethodArgumentBuilder -> public MethodArgumentBuilder(@Nullable UriComponentsBuilder baseUrl, Class<?> controllerType, Method method);1523455554;@since 4.2;public MethodArgumentBuilder(@Nullable UriComponentsBuilder baseUrl, Class<?> controllerType, Method method) {_			Assert.notNull(controllerType, "'controllerType' is required")__			Assert.notNull(method, "'method' is required")__			this.baseUrl = (baseUrl != null ? baseUrl : initBaseUrl())__			this.controllerType = controllerType__			this.method = method__			this.argumentValues = new Object[method.getParameterCount()]__			for (int i = 0_ i < this.argumentValues.length_ i++) {_				this.argumentValues[i] = null__			}_		};since,4,2;public,method,argument,builder,nullable,uri,components,builder,base,url,class,controller,type,method,method,assert,not,null,controller,type,controller,type,is,required,assert,not,null,method,method,is,required,this,base,url,base,url,null,base,url,init,base,url,this,controller,type,controller,type,this,method,method,this,argument,values,new,object,method,get,parameter,count,for,int,i,0,i,this,argument,values,length,i,this,argument,values,i,null
MvcUriComponentsBuilder -> MethodArgumentBuilder -> public MethodArgumentBuilder(@Nullable UriComponentsBuilder baseUrl, Class<?> controllerType, Method method);1529028426;@since 4.2;public MethodArgumentBuilder(@Nullable UriComponentsBuilder baseUrl, Class<?> controllerType, Method method) {_			Assert.notNull(controllerType, "'controllerType' is required")__			Assert.notNull(method, "'method' is required")__			this.baseUrl = (baseUrl != null ? baseUrl : initBaseUrl())__			this.controllerType = controllerType__			this.method = method__			this.argumentValues = new Object[method.getParameterCount()]__			for (int i = 0_ i < this.argumentValues.length_ i++) {_				this.argumentValues[i] = null__			}_		};since,4,2;public,method,argument,builder,nullable,uri,components,builder,base,url,class,controller,type,method,method,assert,not,null,controller,type,controller,type,is,required,assert,not,null,method,method,is,required,this,base,url,base,url,null,base,url,init,base,url,this,controller,type,controller,type,this,method,method,this,argument,values,new,object,method,get,parameter,count,for,int,i,0,i,this,argument,values,length,i,this,argument,values,i,null
MvcUriComponentsBuilder -> MethodArgumentBuilder -> public MethodArgumentBuilder(@Nullable UriComponentsBuilder baseUrl, Class<?> controllerType, Method method);1529028426;@since 4.2;public MethodArgumentBuilder(@Nullable UriComponentsBuilder baseUrl, Class<?> controllerType, Method method) {_			Assert.notNull(controllerType, "'controllerType' is required")__			Assert.notNull(method, "'method' is required")__			this.baseUrl = (baseUrl != null ? baseUrl : initBaseUrl())__			this.controllerType = controllerType__			this.method = method__			this.argumentValues = new Object[method.getParameterCount()]__			for (int i = 0_ i < this.argumentValues.length_ i++) {_				this.argumentValues[i] = null__			}_		};since,4,2;public,method,argument,builder,nullable,uri,components,builder,base,url,class,controller,type,method,method,assert,not,null,controller,type,controller,type,is,required,assert,not,null,method,method,is,required,this,base,url,base,url,null,base,url,init,base,url,this,controller,type,controller,type,this,method,method,this,argument,values,new,object,method,get,parameter,count,for,int,i,0,i,this,argument,values,length,i,this,argument,values,i,null
MvcUriComponentsBuilder -> MethodArgumentBuilder -> public MethodArgumentBuilder(@Nullable UriComponentsBuilder baseUrl, Class<?> controllerType, Method method);1529028713;@since 4.2;public MethodArgumentBuilder(@Nullable UriComponentsBuilder baseUrl, Class<?> controllerType, Method method) {_			Assert.notNull(controllerType, "'controllerType' is required")__			Assert.notNull(method, "'method' is required")__			this.baseUrl = (baseUrl != null ? baseUrl : initBaseUrl())__			this.controllerType = controllerType__			this.method = method__			this.argumentValues = new Object[method.getParameterCount()]__			for (int i = 0_ i < this.argumentValues.length_ i++) {_				this.argumentValues[i] = null__			}_		};since,4,2;public,method,argument,builder,nullable,uri,components,builder,base,url,class,controller,type,method,method,assert,not,null,controller,type,controller,type,is,required,assert,not,null,method,method,is,required,this,base,url,base,url,null,base,url,init,base,url,this,controller,type,controller,type,this,method,method,this,argument,values,new,object,method,get,parameter,count,for,int,i,0,i,this,argument,values,length,i,this,argument,values,i,null
MvcUriComponentsBuilder -> MethodArgumentBuilder -> public MethodArgumentBuilder(@Nullable UriComponentsBuilder baseUrl, Class<?> controllerType, Method method);1529361191;@since 4.2;public MethodArgumentBuilder(@Nullable UriComponentsBuilder baseUrl, Class<?> controllerType, Method method) {_			Assert.notNull(controllerType, "'controllerType' is required")__			Assert.notNull(method, "'method' is required")__			this.baseUrl = (baseUrl != null ? baseUrl : initBaseUrl())__			this.controllerType = controllerType__			this.method = method__			this.argumentValues = new Object[method.getParameterCount()]__			for (int i = 0_ i < this.argumentValues.length_ i++) {_				this.argumentValues[i] = null__			}_		};since,4,2;public,method,argument,builder,nullable,uri,components,builder,base,url,class,controller,type,method,method,assert,not,null,controller,type,controller,type,is,required,assert,not,null,method,method,is,required,this,base,url,base,url,null,base,url,init,base,url,this,controller,type,controller,type,this,method,method,this,argument,values,new,object,method,get,parameter,count,for,int,i,0,i,this,argument,values,length,i,this,argument,values,i,null
MvcUriComponentsBuilder -> MethodArgumentBuilder -> public MethodArgumentBuilder(@Nullable UriComponentsBuilder baseUrl, Class<?> controllerType, Method method);1530174524;Create a new {@link MethodArgumentBuilder} instance._@since 4.2;public MethodArgumentBuilder(@Nullable UriComponentsBuilder baseUrl, Class<?> controllerType, Method method) {_			Assert.notNull(controllerType, "'controllerType' is required")__			Assert.notNull(method, "'method' is required")__			this.baseUrl = (baseUrl != null ? baseUrl : initBaseUrl())__			this.controllerType = controllerType__			this.method = method__			this.argumentValues = new Object[method.getParameterCount()]__			for (int i = 0_ i < this.argumentValues.length_ i++) {_				this.argumentValues[i] = null__			}_		};create,a,new,link,method,argument,builder,instance,since,4,2;public,method,argument,builder,nullable,uri,components,builder,base,url,class,controller,type,method,method,assert,not,null,controller,type,controller,type,is,required,assert,not,null,method,method,is,required,this,base,url,base,url,null,base,url,init,base,url,this,controller,type,controller,type,this,method,method,this,argument,values,new,object,method,get,parameter,count,for,int,i,0,i,this,argument,values,length,i,this,argument,values,i,null
MvcUriComponentsBuilder -> MethodArgumentBuilder -> public MethodArgumentBuilder(@Nullable UriComponentsBuilder baseUrl, Class<?> controllerType, Method method);1532041662;Create a new {@link MethodArgumentBuilder} instance._@since 4.2;public MethodArgumentBuilder(@Nullable UriComponentsBuilder baseUrl, Class<?> controllerType, Method method) {_			Assert.notNull(controllerType, "'controllerType' is required")__			Assert.notNull(method, "'method' is required")__			this.baseUrl = baseUrl != null ? baseUrl : UriComponentsBuilder.fromPath(getPath())__			this.controllerType = controllerType__			this.method = method__			this.argumentValues = new Object[method.getParameterCount()]__			for (int i = 0_ i < this.argumentValues.length_ i++) {_				this.argumentValues[i] = null__			}_		};create,a,new,link,method,argument,builder,instance,since,4,2;public,method,argument,builder,nullable,uri,components,builder,base,url,class,controller,type,method,method,assert,not,null,controller,type,controller,type,is,required,assert,not,null,method,method,is,required,this,base,url,base,url,null,base,url,uri,components,builder,from,path,get,path,this,controller,type,controller,type,this,method,method,this,argument,values,new,object,method,get,parameter,count,for,int,i,0,i,this,argument,values,length,i,this,argument,values,i,null
MvcUriComponentsBuilder -> MethodArgumentBuilder -> public MethodArgumentBuilder(@Nullable UriComponentsBuilder baseUrl, Class<?> controllerType, Method method);1532041662;Create a new {@link MethodArgumentBuilder} instance._@since 4.2;public MethodArgumentBuilder(@Nullable UriComponentsBuilder baseUrl, Class<?> controllerType, Method method) {_			Assert.notNull(controllerType, "'controllerType' is required")__			Assert.notNull(method, "'method' is required")__			this.baseUrl = baseUrl != null ? baseUrl : UriComponentsBuilder.fromPath(getPath())__			this.controllerType = controllerType__			this.method = method__			this.argumentValues = new Object[method.getParameterCount()]__			for (int i = 0_ i < this.argumentValues.length_ i++) {_				this.argumentValues[i] = null__			}_		};create,a,new,link,method,argument,builder,instance,since,4,2;public,method,argument,builder,nullable,uri,components,builder,base,url,class,controller,type,method,method,assert,not,null,controller,type,controller,type,is,required,assert,not,null,method,method,is,required,this,base,url,base,url,null,base,url,uri,components,builder,from,path,get,path,this,controller,type,controller,type,this,method,method,this,argument,values,new,object,method,get,parameter,count,for,int,i,0,i,this,argument,values,length,i,this,argument,values,i,null
MvcUriComponentsBuilder -> MethodArgumentBuilder -> public MethodArgumentBuilder(@Nullable UriComponentsBuilder baseUrl, Class<?> controllerType, Method method);1548943222;Create a new {@link MethodArgumentBuilder} instance._@since 4.2;public MethodArgumentBuilder(@Nullable UriComponentsBuilder baseUrl, Class<?> controllerType, Method method) {_			Assert.notNull(controllerType, "'controllerType' is required")__			Assert.notNull(method, "'method' is required")__			this.baseUrl = baseUrl != null ? baseUrl : UriComponentsBuilder.fromPath(getPath())__			this.controllerType = controllerType__			this.method = method__			this.argumentValues = new Object[method.getParameterCount()]__		};create,a,new,link,method,argument,builder,instance,since,4,2;public,method,argument,builder,nullable,uri,components,builder,base,url,class,controller,type,method,method,assert,not,null,controller,type,controller,type,is,required,assert,not,null,method,method,is,required,this,base,url,base,url,null,base,url,uri,components,builder,from,path,get,path,this,controller,type,controller,type,this,method,method,this,argument,values,new,object,method,get,parameter,count
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromController(Class<?> controllerType);1382754578;Create a {@link UriComponentsBuilder} by pointing to a controller class. The_resulting builder contains the current request information up to and including_the Servlet mapping plus any type-level request mapping. If the controller_contains multiple mappings, the first one is used.__@param controllerType the controller to create a URI for__@return a UriComponentsBuilder instance;public static UriComponentsBuilder fromController(Class<?> controllerType) {_		String mapping = getTypeRequestMapping(controllerType)__		return ServletUriComponentsBuilder.fromCurrentServletMapping().path(mapping)__	};create,a,link,uri,components,builder,by,pointing,to,a,controller,class,the,resulting,builder,contains,the,current,request,information,up,to,and,including,the,servlet,mapping,plus,any,type,level,request,mapping,if,the,controller,contains,multiple,mappings,the,first,one,is,used,param,controller,type,the,controller,to,create,a,uri,for,return,a,uri,components,builder,instance;public,static,uri,components,builder,from,controller,class,controller,type,string,mapping,get,type,request,mapping,controller,type,return,servlet,uri,components,builder,from,current,servlet,mapping,path,mapping
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromController(Class<?> controllerType);1382757913;Create a {@link UriComponentsBuilder} by pointing to a controller class. The_resulting builder contains the current request information up to and including_the Servlet mapping plus any type-level request mapping. If the controller_contains multiple mappings, the first one is used.__@param controllerType the controller to create a URI for__@return a UriComponentsBuilder instance;public static UriComponentsBuilder fromController(Class<?> controllerType) {_		String mapping = getTypeRequestMapping(controllerType)__		return ServletUriComponentsBuilder.fromCurrentServletMapping().path(mapping)__	};create,a,link,uri,components,builder,by,pointing,to,a,controller,class,the,resulting,builder,contains,the,current,request,information,up,to,and,including,the,servlet,mapping,plus,any,type,level,request,mapping,if,the,controller,contains,multiple,mappings,the,first,one,is,used,param,controller,type,the,controller,to,create,a,uri,for,return,a,uri,components,builder,instance;public,static,uri,components,builder,from,controller,class,controller,type,string,mapping,get,type,request,mapping,controller,type,return,servlet,uri,components,builder,from,current,servlet,mapping,path,mapping
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromController(Class<?> controllerType);1382911216;Create a {@link UriComponentsBuilder} by pointing to a controller class. The_resulting builder contains the current request information up to and including_the Servlet mapping plus any type-level request mapping. If the controller_contains multiple mappings, the first one is used.__@param controllerType the controller to create a URI for__@return a UriComponentsBuilder instance;public static UriComponentsBuilder fromController(Class<?> controllerType) {_		String mapping = getTypeRequestMapping(controllerType)__		return ServletUriComponentsBuilder.fromCurrentServletMapping().path(mapping)__	};create,a,link,uri,components,builder,by,pointing,to,a,controller,class,the,resulting,builder,contains,the,current,request,information,up,to,and,including,the,servlet,mapping,plus,any,type,level,request,mapping,if,the,controller,contains,multiple,mappings,the,first,one,is,used,param,controller,type,the,controller,to,create,a,uri,for,return,a,uri,components,builder,instance;public,static,uri,components,builder,from,controller,class,controller,type,string,mapping,get,type,request,mapping,controller,type,return,servlet,uri,components,builder,from,current,servlet,mapping,path,mapping
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromController(Class<?> controllerType);1383061199;Create a {@link UriComponentsBuilder} by pointing to a controller class. The_resulting builder contains the current request information up to and including_the Servlet mapping plus any type-level request mapping. If the controller_contains multiple mappings, the first one is used.__@param controllerType the controller to create a URI for__@return a UriComponentsBuilder instance;public static UriComponentsBuilder fromController(Class<?> controllerType) {_		String mapping = getTypeRequestMapping(controllerType)__		return ServletUriComponentsBuilder.fromCurrentServletMapping().path(mapping)__	};create,a,link,uri,components,builder,by,pointing,to,a,controller,class,the,resulting,builder,contains,the,current,request,information,up,to,and,including,the,servlet,mapping,plus,any,type,level,request,mapping,if,the,controller,contains,multiple,mappings,the,first,one,is,used,param,controller,type,the,controller,to,create,a,uri,for,return,a,uri,components,builder,instance;public,static,uri,components,builder,from,controller,class,controller,type,string,mapping,get,type,request,mapping,controller,type,return,servlet,uri,components,builder,from,current,servlet,mapping,path,mapping
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromController(Class<?> controllerType);1385412762;Create a {@link UriComponentsBuilder} by pointing to a controller class. The_resulting builder contains the current request information up to and including_the Servlet mapping plus any type-level request mapping. If the controller_contains multiple mappings, the first one is used.__@param controllerType the controller to create a URI for__@return a UriComponentsBuilder instance;public static UriComponentsBuilder fromController(Class<?> controllerType) {_		String mapping = getTypeRequestMapping(controllerType)__		return ServletUriComponentsBuilder.fromCurrentServletMapping().path(mapping)__	};create,a,link,uri,components,builder,by,pointing,to,a,controller,class,the,resulting,builder,contains,the,current,request,information,up,to,and,including,the,servlet,mapping,plus,any,type,level,request,mapping,if,the,controller,contains,multiple,mappings,the,first,one,is,used,param,controller,type,the,controller,to,create,a,uri,for,return,a,uri,components,builder,instance;public,static,uri,components,builder,from,controller,class,controller,type,string,mapping,get,type,request,mapping,controller,type,return,servlet,uri,components,builder,from,current,servlet,mapping,path,mapping
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromController(Class<?> controllerType);1385501137;Create a {@link UriComponentsBuilder} by pointing to a controller class. The_resulting builder contains the current request information up to and including_the Servlet mapping plus any type-level request mapping. If the controller_contains multiple mappings, the first one is used.__@param controllerType the controller to create a URI for__@return a UriComponentsBuilder instance;public static UriComponentsBuilder fromController(Class<?> controllerType) {_		String mapping = getTypeRequestMapping(controllerType)__		return ServletUriComponentsBuilder.fromCurrentServletMapping().path(mapping)__	};create,a,link,uri,components,builder,by,pointing,to,a,controller,class,the,resulting,builder,contains,the,current,request,information,up,to,and,including,the,servlet,mapping,plus,any,type,level,request,mapping,if,the,controller,contains,multiple,mappings,the,first,one,is,used,param,controller,type,the,controller,to,create,a,uri,for,return,a,uri,components,builder,instance;public,static,uri,components,builder,from,controller,class,controller,type,string,mapping,get,type,request,mapping,controller,type,return,servlet,uri,components,builder,from,current,servlet,mapping,path,mapping
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromController(Class<?> controllerType);1385507478;Create a {@link UriComponentsBuilder} by pointing to a controller class. The_resulting builder contains the current request information up to and including_the Servlet mapping plus any type-level request mapping. If the controller_contains multiple mappings, the first one is used._@param controllerType the controller to create a URI for_@return a UriComponentsBuilder instance;public static UriComponentsBuilder fromController(Class<?> controllerType) {_		String mapping = getTypeRequestMapping(controllerType)__		return ServletUriComponentsBuilder.fromCurrentServletMapping().path(mapping)__	};create,a,link,uri,components,builder,by,pointing,to,a,controller,class,the,resulting,builder,contains,the,current,request,information,up,to,and,including,the,servlet,mapping,plus,any,type,level,request,mapping,if,the,controller,contains,multiple,mappings,the,first,one,is,used,param,controller,type,the,controller,to,create,a,uri,for,return,a,uri,components,builder,instance;public,static,uri,components,builder,from,controller,class,controller,type,string,mapping,get,type,request,mapping,controller,type,return,servlet,uri,components,builder,from,current,servlet,mapping,path,mapping
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromController(Class<?> controllerType);1387386512;Create a {@link UriComponentsBuilder} by pointing to a controller class. The_resulting builder contains the current request information up to and including_the Servlet mapping plus any type-level request mapping. If the controller_contains multiple mappings, the first one is used._@param controllerType the controller to create a URI for_@return a UriComponentsBuilder instance;public static UriComponentsBuilder fromController(Class<?> controllerType) {_		String mapping = getTypeRequestMapping(controllerType)__		return ServletUriComponentsBuilder.fromCurrentServletMapping().path(mapping)__	};create,a,link,uri,components,builder,by,pointing,to,a,controller,class,the,resulting,builder,contains,the,current,request,information,up,to,and,including,the,servlet,mapping,plus,any,type,level,request,mapping,if,the,controller,contains,multiple,mappings,the,first,one,is,used,param,controller,type,the,controller,to,create,a,uri,for,return,a,uri,components,builder,instance;public,static,uri,components,builder,from,controller,class,controller,type,string,mapping,get,type,request,mapping,controller,type,return,servlet,uri,components,builder,from,current,servlet,mapping,path,mapping
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromController(Class<?> controllerType);1391714711;Create a {@link UriComponentsBuilder} by pointing to a controller class. The_resulting builder contains the current request information up to and including_the Servlet mapping plus any type-level request mapping. If the controller_contains multiple mappings, the first one is used._@param controllerType the controller to create a URI for_@return a UriComponentsBuilder instance;public static UriComponentsBuilder fromController(Class<?> controllerType) {_		String mapping = getTypeRequestMapping(controllerType)__		return ServletUriComponentsBuilder.fromCurrentServletMapping().path(mapping)__	};create,a,link,uri,components,builder,by,pointing,to,a,controller,class,the,resulting,builder,contains,the,current,request,information,up,to,and,including,the,servlet,mapping,plus,any,type,level,request,mapping,if,the,controller,contains,multiple,mappings,the,first,one,is,used,param,controller,type,the,controller,to,create,a,uri,for,return,a,uri,components,builder,instance;public,static,uri,components,builder,from,controller,class,controller,type,string,mapping,get,type,request,mapping,controller,type,return,servlet,uri,components,builder,from,current,servlet,mapping,path,mapping
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromController(Class<?> controllerType);1391723719;Create a {@link UriComponentsBuilder} from the mapping of a controller class_and current request information including Servlet mapping. If the controller_contains multiple mappings, only the first one is used.__@param controllerType the controller to build a URI for_@return a UriComponentsBuilder instance, never {@code null};public static UriComponentsBuilder fromController(Class<?> controllerType) {_		String mapping = getTypeRequestMapping(controllerType)__		return ServletUriComponentsBuilder.fromCurrentServletMapping().path(mapping)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,class,and,current,request,information,including,servlet,mapping,if,the,controller,contains,multiple,mappings,only,the,first,one,is,used,param,controller,type,the,controller,to,build,a,uri,for,return,a,uri,components,builder,instance,never,code,null;public,static,uri,components,builder,from,controller,class,controller,type,string,mapping,get,type,request,mapping,controller,type,return,servlet,uri,components,builder,from,current,servlet,mapping,path,mapping
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromController(Class<?> controllerType);1391723719;Create a {@link UriComponentsBuilder} from the mapping of a controller class_and current request information including Servlet mapping. If the controller_contains multiple mappings, only the first one is used.__@param controllerType the controller to build a URI for_@return a UriComponentsBuilder instance, never {@code null};public static UriComponentsBuilder fromController(Class<?> controllerType) {_		String mapping = getTypeRequestMapping(controllerType)__		return ServletUriComponentsBuilder.fromCurrentServletMapping().path(mapping)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,class,and,current,request,information,including,servlet,mapping,if,the,controller,contains,multiple,mappings,only,the,first,one,is,used,param,controller,type,the,controller,to,build,a,uri,for,return,a,uri,components,builder,instance,never,code,null;public,static,uri,components,builder,from,controller,class,controller,type,string,mapping,get,type,request,mapping,controller,type,return,servlet,uri,components,builder,from,current,servlet,mapping,path,mapping
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromController(Class<?> controllerType);1399404473;Create a {@link UriComponentsBuilder} from the mapping of a controller class_and current request information including Servlet mapping. If the controller_contains multiple mappings, only the first one is used.__@param controllerType the controller to build a URI for_@return a UriComponentsBuilder instance, never {@code null};public static UriComponentsBuilder fromController(Class<?> controllerType) {_		String mapping = getTypeRequestMapping(controllerType)__		return ServletUriComponentsBuilder.fromCurrentServletMapping().path(mapping)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,class,and,current,request,information,including,servlet,mapping,if,the,controller,contains,multiple,mappings,only,the,first,one,is,used,param,controller,type,the,controller,to,build,a,uri,for,return,a,uri,components,builder,instance,never,code,null;public,static,uri,components,builder,from,controller,class,controller,type,string,mapping,get,type,request,mapping,controller,type,return,servlet,uri,components,builder,from,current,servlet,mapping,path,mapping
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromController(Class<?> controllerType);1400538909;Create a {@link UriComponentsBuilder} from the mapping of a controller class_and current request information including Servlet mapping. If the controller_contains multiple mappings, only the first one is used._@param controllerType the controller to build a URI for_@return a UriComponentsBuilder instance (never {@code null});public static UriComponentsBuilder fromController(Class<?> controllerType) {_		String mapping = getTypeRequestMapping(controllerType)__		return ServletUriComponentsBuilder.fromCurrentServletMapping().path(mapping)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,class,and,current,request,information,including,servlet,mapping,if,the,controller,contains,multiple,mappings,only,the,first,one,is,used,param,controller,type,the,controller,to,build,a,uri,for,return,a,uri,components,builder,instance,never,code,null;public,static,uri,components,builder,from,controller,class,controller,type,string,mapping,get,type,request,mapping,controller,type,return,servlet,uri,components,builder,from,current,servlet,mapping,path,mapping
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromController(Class<?> controllerType);1400542981;Create a {@link UriComponentsBuilder} from the mapping of a controller class_and current request information including Servlet mapping. If the controller_contains multiple mappings, only the first one is used._@param controllerType the controller to build a URI for_@return a UriComponentsBuilder instance (never {@code null});public static UriComponentsBuilder fromController(Class<?> controllerType) {_		String mapping = getTypeRequestMapping(controllerType)__		return ServletUriComponentsBuilder.fromCurrentServletMapping().path(mapping)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,class,and,current,request,information,including,servlet,mapping,if,the,controller,contains,multiple,mappings,only,the,first,one,is,used,param,controller,type,the,controller,to,build,a,uri,for,return,a,uri,components,builder,instance,never,code,null;public,static,uri,components,builder,from,controller,class,controller,type,string,mapping,get,type,request,mapping,controller,type,return,servlet,uri,components,builder,from,current,servlet,mapping,path,mapping
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromController(Class<?> controllerType);1402438271;Create a {@link UriComponentsBuilder} from the mapping of a controller class_and current request information including Servlet mapping. If the controller_contains multiple mappings, only the first one is used._@param controllerType the controller to build a URI for_@return a UriComponentsBuilder instance (never {@code null});public static UriComponentsBuilder fromController(Class<?> controllerType) {_		String mapping = getTypeRequestMapping(controllerType)__		return ServletUriComponentsBuilder.fromCurrentServletMapping().path(mapping)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,class,and,current,request,information,including,servlet,mapping,if,the,controller,contains,multiple,mappings,only,the,first,one,is,used,param,controller,type,the,controller,to,build,a,uri,for,return,a,uri,components,builder,instance,never,code,null;public,static,uri,components,builder,from,controller,class,controller,type,string,mapping,get,type,request,mapping,controller,type,return,servlet,uri,components,builder,from,current,servlet,mapping,path,mapping
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromController(Class<?> controllerType);1413848647;Create a {@link UriComponentsBuilder} from the mapping of a controller class_and current request information including Servlet mapping. If the controller_contains multiple mappings, only the first one is used._@param controllerType the controller to build a URI for_@return a UriComponentsBuilder instance (never {@code null});public static UriComponentsBuilder fromController(Class<?> controllerType) {_		String mapping = getTypeRequestMapping(controllerType)__		return ServletUriComponentsBuilder.fromCurrentServletMapping().path(mapping)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,class,and,current,request,information,including,servlet,mapping,if,the,controller,contains,multiple,mappings,only,the,first,one,is,used,param,controller,type,the,controller,to,build,a,uri,for,return,a,uri,components,builder,instance,never,code,null;public,static,uri,components,builder,from,controller,class,controller,type,string,mapping,get,type,request,mapping,controller,type,return,servlet,uri,components,builder,from,current,servlet,mapping,path,mapping
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromController(Class<?> controllerType);1417799775;Create a {@link UriComponentsBuilder} from the mapping of a controller class_and current request information including Servlet mapping. If the controller_contains multiple mappings, only the first one is used._@param controllerType the controller to build a URI for_@return a UriComponentsBuilder instance (never {@code null});public static UriComponentsBuilder fromController(Class<?> controllerType) {_		String mapping = getTypeRequestMapping(controllerType)__		return ServletUriComponentsBuilder.fromCurrentServletMapping().path(mapping)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,class,and,current,request,information,including,servlet,mapping,if,the,controller,contains,multiple,mappings,only,the,first,one,is,used,param,controller,type,the,controller,to,build,a,uri,for,return,a,uri,components,builder,instance,never,code,null;public,static,uri,components,builder,from,controller,class,controller,type,string,mapping,get,type,request,mapping,controller,type,return,servlet,uri,components,builder,from,current,servlet,mapping,path,mapping
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromController(Class<?> controllerType);1424972092;Create a {@link UriComponentsBuilder} from the mapping of a controller class_and current request information including Servlet mapping. If the controller_contains multiple mappings, only the first one is used._@param controllerType the controller to build a URI for_@return a UriComponentsBuilder instance (never {@code null});public static UriComponentsBuilder fromController(Class<?> controllerType) {_		String mapping = getTypeRequestMapping(controllerType)__		return ServletUriComponentsBuilder.fromCurrentServletMapping().path(mapping)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,class,and,current,request,information,including,servlet,mapping,if,the,controller,contains,multiple,mappings,only,the,first,one,is,used,param,controller,type,the,controller,to,build,a,uri,for,return,a,uri,components,builder,instance,never,code,null;public,static,uri,components,builder,from,controller,class,controller,type,string,mapping,get,type,request,mapping,controller,type,return,servlet,uri,components,builder,from,current,servlet,mapping,path,mapping
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromController(Class<?> controllerType);1426553101;Create a {@link UriComponentsBuilder} from the mapping of a controller class_and current request information including Servlet mapping. If the controller_contains multiple mappings, only the first one is used._@param controllerType the controller to build a URI for_@return a UriComponentsBuilder instance (never {@code null});public static UriComponentsBuilder fromController(Class<?> controllerType) {_		return fromController(null, controllerType)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,class,and,current,request,information,including,servlet,mapping,if,the,controller,contains,multiple,mappings,only,the,first,one,is,used,param,controller,type,the,controller,to,build,a,uri,for,return,a,uri,components,builder,instance,never,code,null;public,static,uri,components,builder,from,controller,class,controller,type,return,from,controller,null,controller,type
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromController(Class<?> controllerType);1429801417;Create a {@link UriComponentsBuilder} from the mapping of a controller class_and current request information including Servlet mapping. If the controller_contains multiple mappings, only the first one is used._@param controllerType the controller to build a URI for_@return a UriComponentsBuilder instance (never {@code null});public static UriComponentsBuilder fromController(Class<?> controllerType) {_		return fromController(null, controllerType)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,class,and,current,request,information,including,servlet,mapping,if,the,controller,contains,multiple,mappings,only,the,first,one,is,used,param,controller,type,the,controller,to,build,a,uri,for,return,a,uri,components,builder,instance,never,code,null;public,static,uri,components,builder,from,controller,class,controller,type,return,from,controller,null,controller,type
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromController(Class<?> controllerType);1429801944;Create a {@link UriComponentsBuilder} from the mapping of a controller class_and current request information including Servlet mapping. If the controller_contains multiple mappings, only the first one is used._@param controllerType the controller to build a URI for_@return a UriComponentsBuilder instance (never {@code null});public static UriComponentsBuilder fromController(Class<?> controllerType) {_		return fromController(null, controllerType)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,class,and,current,request,information,including,servlet,mapping,if,the,controller,contains,multiple,mappings,only,the,first,one,is,used,param,controller,type,the,controller,to,build,a,uri,for,return,a,uri,components,builder,instance,never,code,null;public,static,uri,components,builder,from,controller,class,controller,type,return,from,controller,null,controller,type
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromController(Class<?> controllerType);1429802180;Create a {@link UriComponentsBuilder} from the mapping of a controller class_and current request information including Servlet mapping. If the controller_contains multiple mappings, only the first one is used._@param controllerType the controller to build a URI for_@return a UriComponentsBuilder instance (never {@code null});public static UriComponentsBuilder fromController(Class<?> controllerType) {_		return fromController(null, controllerType)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,class,and,current,request,information,including,servlet,mapping,if,the,controller,contains,multiple,mappings,only,the,first,one,is,used,param,controller,type,the,controller,to,build,a,uri,for,return,a,uri,components,builder,instance,never,code,null;public,static,uri,components,builder,from,controller,class,controller,type,return,from,controller,null,controller,type
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromController(Class<?> controllerType);1429886024;Create a {@link UriComponentsBuilder} from the mapping of a controller class_and current request information including Servlet mapping. If the controller_contains multiple mappings, only the first one is used._@param controllerType the controller to build a URI for_@return a UriComponentsBuilder instance (never {@code null});public static UriComponentsBuilder fromController(Class<?> controllerType) {_		return fromController(null, controllerType)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,class,and,current,request,information,including,servlet,mapping,if,the,controller,contains,multiple,mappings,only,the,first,one,is,used,param,controller,type,the,controller,to,build,a,uri,for,return,a,uri,components,builder,instance,never,code,null;public,static,uri,components,builder,from,controller,class,controller,type,return,from,controller,null,controller,type
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromController(Class<?> controllerType);1429888980;Create a {@link UriComponentsBuilder} from the mapping of a controller class_and current request information including Servlet mapping. If the controller_contains multiple mappings, only the first one is used._@param controllerType the controller to build a URI for_@return a UriComponentsBuilder instance (never {@code null});public static UriComponentsBuilder fromController(Class<?> controllerType) {_		return fromController(null, controllerType)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,class,and,current,request,information,including,servlet,mapping,if,the,controller,contains,multiple,mappings,only,the,first,one,is,used,param,controller,type,the,controller,to,build,a,uri,for,return,a,uri,components,builder,instance,never,code,null;public,static,uri,components,builder,from,controller,class,controller,type,return,from,controller,null,controller,type
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromController(Class<?> controllerType);1430739806;Create a {@link UriComponentsBuilder} from the mapping of a controller class_and current request information including Servlet mapping. If the controller_contains multiple mappings, only the first one is used._@param controllerType the controller to build a URI for_@return a UriComponentsBuilder instance (never {@code null});public static UriComponentsBuilder fromController(Class<?> controllerType) {_		return fromController(null, controllerType)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,class,and,current,request,information,including,servlet,mapping,if,the,controller,contains,multiple,mappings,only,the,first,one,is,used,param,controller,type,the,controller,to,build,a,uri,for,return,a,uri,components,builder,instance,never,code,null;public,static,uri,components,builder,from,controller,class,controller,type,return,from,controller,null,controller,type
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromController(Class<?> controllerType);1430747547;Create a {@link UriComponentsBuilder} from the mapping of a controller class_and current request information including Servlet mapping. If the controller_contains multiple mappings, only the first one is used._@param controllerType the controller to build a URI for_@return a UriComponentsBuilder instance (never {@code null});public static UriComponentsBuilder fromController(Class<?> controllerType) {_		return fromController(null, controllerType)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,class,and,current,request,information,including,servlet,mapping,if,the,controller,contains,multiple,mappings,only,the,first,one,is,used,param,controller,type,the,controller,to,build,a,uri,for,return,a,uri,components,builder,instance,never,code,null;public,static,uri,components,builder,from,controller,class,controller,type,return,from,controller,null,controller,type
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromController(Class<?> controllerType);1430749606;Create a {@link UriComponentsBuilder} from the mapping of a controller class_and current request information including Servlet mapping. If the controller_contains multiple mappings, only the first one is used._@param controllerType the controller to build a URI for_@return a UriComponentsBuilder instance (never {@code null});public static UriComponentsBuilder fromController(Class<?> controllerType) {_		return fromController(null, controllerType)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,class,and,current,request,information,including,servlet,mapping,if,the,controller,contains,multiple,mappings,only,the,first,one,is,used,param,controller,type,the,controller,to,build,a,uri,for,return,a,uri,components,builder,instance,never,code,null;public,static,uri,components,builder,from,controller,class,controller,type,return,from,controller,null,controller,type
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromController(Class<?> controllerType);1431975386;Create a {@link UriComponentsBuilder} from the mapping of a controller class_and current request information including Servlet mapping. If the controller_contains multiple mappings, only the first one is used._@param controllerType the controller to build a URI for_@return a UriComponentsBuilder instance (never {@code null});public static UriComponentsBuilder fromController(Class<?> controllerType) {_		return fromController(null, controllerType)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,class,and,current,request,information,including,servlet,mapping,if,the,controller,contains,multiple,mappings,only,the,first,one,is,used,param,controller,type,the,controller,to,build,a,uri,for,return,a,uri,components,builder,instance,never,code,null;public,static,uri,components,builder,from,controller,class,controller,type,return,from,controller,null,controller,type
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromController(Class<?> controllerType);1432125256;Create a {@link UriComponentsBuilder} from the mapping of a controller class_and current request information including Servlet mapping. If the controller_contains multiple mappings, only the first one is used._@param controllerType the controller to build a URI for_@return a UriComponentsBuilder instance (never {@code null});public static UriComponentsBuilder fromController(Class<?> controllerType) {_		return fromController(null, controllerType)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,class,and,current,request,information,including,servlet,mapping,if,the,controller,contains,multiple,mappings,only,the,first,one,is,used,param,controller,type,the,controller,to,build,a,uri,for,return,a,uri,components,builder,instance,never,code,null;public,static,uri,components,builder,from,controller,class,controller,type,return,from,controller,null,controller,type
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromController(Class<?> controllerType);1432156007;Create a {@link UriComponentsBuilder} from the mapping of a controller class_and current request information including Servlet mapping. If the controller_contains multiple mappings, only the first one is used._@param controllerType the controller to build a URI for_@return a UriComponentsBuilder instance (never {@code null});public static UriComponentsBuilder fromController(Class<?> controllerType) {_		return fromController(null, controllerType)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,class,and,current,request,information,including,servlet,mapping,if,the,controller,contains,multiple,mappings,only,the,first,one,is,used,param,controller,type,the,controller,to,build,a,uri,for,return,a,uri,components,builder,instance,never,code,null;public,static,uri,components,builder,from,controller,class,controller,type,return,from,controller,null,controller,type
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromController(Class<?> controllerType);1432856630;Create a {@link UriComponentsBuilder} from the mapping of a controller class_and current request information including Servlet mapping. If the controller_contains multiple mappings, only the first one is used._@param controllerType the controller to build a URI for_@return a UriComponentsBuilder instance (never {@code null});public static UriComponentsBuilder fromController(Class<?> controllerType) {_		return fromController(null, controllerType)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,class,and,current,request,information,including,servlet,mapping,if,the,controller,contains,multiple,mappings,only,the,first,one,is,used,param,controller,type,the,controller,to,build,a,uri,for,return,a,uri,components,builder,instance,never,code,null;public,static,uri,components,builder,from,controller,class,controller,type,return,from,controller,null,controller,type
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromController(Class<?> controllerType);1432857824;Create a {@link UriComponentsBuilder} from the mapping of a controller class_and current request information including Servlet mapping. If the controller_contains multiple mappings, only the first one is used._@param controllerType the controller to build a URI for_@return a UriComponentsBuilder instance (never {@code null});public static UriComponentsBuilder fromController(Class<?> controllerType) {_		return fromController(null, controllerType)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,class,and,current,request,information,including,servlet,mapping,if,the,controller,contains,multiple,mappings,only,the,first,one,is,used,param,controller,type,the,controller,to,build,a,uri,for,return,a,uri,components,builder,instance,never,code,null;public,static,uri,components,builder,from,controller,class,controller,type,return,from,controller,null,controller,type
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromController(Class<?> controllerType);1434234880;Create a {@link UriComponentsBuilder} from the mapping of a controller class_and current request information including Servlet mapping. If the controller_contains multiple mappings, only the first one is used._@param controllerType the controller to build a URI for_@return a UriComponentsBuilder instance (never {@code null});public static UriComponentsBuilder fromController(Class<?> controllerType) {_		return fromController(null, controllerType)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,class,and,current,request,information,including,servlet,mapping,if,the,controller,contains,multiple,mappings,only,the,first,one,is,used,param,controller,type,the,controller,to,build,a,uri,for,return,a,uri,components,builder,instance,never,code,null;public,static,uri,components,builder,from,controller,class,controller,type,return,from,controller,null,controller,type
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromController(Class<?> controllerType);1434484897;Create a {@link UriComponentsBuilder} from the mapping of a controller class_and current request information including Servlet mapping. If the controller_contains multiple mappings, only the first one is used._@param controllerType the controller to build a URI for_@return a UriComponentsBuilder instance (never {@code null});public static UriComponentsBuilder fromController(Class<?> controllerType) {_		return fromController(null, controllerType)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,class,and,current,request,information,including,servlet,mapping,if,the,controller,contains,multiple,mappings,only,the,first,one,is,used,param,controller,type,the,controller,to,build,a,uri,for,return,a,uri,components,builder,instance,never,code,null;public,static,uri,components,builder,from,controller,class,controller,type,return,from,controller,null,controller,type
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromController(Class<?> controllerType);1434726592;Create a {@link UriComponentsBuilder} from the mapping of a controller class_and current request information including Servlet mapping. If the controller_contains multiple mappings, only the first one is used._@param controllerType the controller to build a URI for_@return a UriComponentsBuilder instance (never {@code null});public static UriComponentsBuilder fromController(Class<?> controllerType) {_		return fromController(null, controllerType)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,class,and,current,request,information,including,servlet,mapping,if,the,controller,contains,multiple,mappings,only,the,first,one,is,used,param,controller,type,the,controller,to,build,a,uri,for,return,a,uri,components,builder,instance,never,code,null;public,static,uri,components,builder,from,controller,class,controller,type,return,from,controller,null,controller,type
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromController(Class<?> controllerType);1435615322;Create a {@link UriComponentsBuilder} from the mapping of a controller class_and current request information including Servlet mapping. If the controller_contains multiple mappings, only the first one is used._@param controllerType the controller to build a URI for_@return a UriComponentsBuilder instance (never {@code null});public static UriComponentsBuilder fromController(Class<?> controllerType) {_		return fromController(null, controllerType)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,class,and,current,request,information,including,servlet,mapping,if,the,controller,contains,multiple,mappings,only,the,first,one,is,used,param,controller,type,the,controller,to,build,a,uri,for,return,a,uri,components,builder,instance,never,code,null;public,static,uri,components,builder,from,controller,class,controller,type,return,from,controller,null,controller,type
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromController(Class<?> controllerType);1439294371;Create a {@link UriComponentsBuilder} from the mapping of a controller class_and current request information including Servlet mapping. If the controller_contains multiple mappings, only the first one is used._@param controllerType the controller to build a URI for_@return a UriComponentsBuilder instance (never {@code null});public static UriComponentsBuilder fromController(Class<?> controllerType) {_		return fromController(null, controllerType)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,class,and,current,request,information,including,servlet,mapping,if,the,controller,contains,multiple,mappings,only,the,first,one,is,used,param,controller,type,the,controller,to,build,a,uri,for,return,a,uri,components,builder,instance,never,code,null;public,static,uri,components,builder,from,controller,class,controller,type,return,from,controller,null,controller,type
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromController(Class<?> controllerType);1447077465;Create a {@link UriComponentsBuilder} from the mapping of a controller class_and current request information including Servlet mapping. If the controller_contains multiple mappings, only the first one is used._@param controllerType the controller to build a URI for_@return a UriComponentsBuilder instance (never {@code null});public static UriComponentsBuilder fromController(Class<?> controllerType) {_		return fromController(null, controllerType)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,class,and,current,request,information,including,servlet,mapping,if,the,controller,contains,multiple,mappings,only,the,first,one,is,used,param,controller,type,the,controller,to,build,a,uri,for,return,a,uri,components,builder,instance,never,code,null;public,static,uri,components,builder,from,controller,class,controller,type,return,from,controller,null,controller,type
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromController(Class<?> controllerType);1458830024;Create a {@link UriComponentsBuilder} from the mapping of a controller class_and current request information including Servlet mapping. If the controller_contains multiple mappings, only the first one is used._@param controllerType the controller to build a URI for_@return a UriComponentsBuilder instance (never {@code null});public static UriComponentsBuilder fromController(Class<?> controllerType) {_		return fromController(null, controllerType)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,class,and,current,request,information,including,servlet,mapping,if,the,controller,contains,multiple,mappings,only,the,first,one,is,used,param,controller,type,the,controller,to,build,a,uri,for,return,a,uri,components,builder,instance,never,code,null;public,static,uri,components,builder,from,controller,class,controller,type,return,from,controller,null,controller,type
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromController(Class<?> controllerType);1461047077;Create a {@link UriComponentsBuilder} from the mapping of a controller class_and current request information including Servlet mapping. If the controller_contains multiple mappings, only the first one is used._@param controllerType the controller to build a URI for_@return a UriComponentsBuilder instance (never {@code null});public static UriComponentsBuilder fromController(Class<?> controllerType) {_		return fromController(null, controllerType)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,class,and,current,request,information,including,servlet,mapping,if,the,controller,contains,multiple,mappings,only,the,first,one,is,used,param,controller,type,the,controller,to,build,a,uri,for,return,a,uri,components,builder,instance,never,code,null;public,static,uri,components,builder,from,controller,class,controller,type,return,from,controller,null,controller,type
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromController(Class<?> controllerType);1467677340;Create a {@link UriComponentsBuilder} from the mapping of a controller class_and current request information including Servlet mapping. If the controller_contains multiple mappings, only the first one is used._@param controllerType the controller to build a URI for_@return a UriComponentsBuilder instance (never {@code null});public static UriComponentsBuilder fromController(Class<?> controllerType) {_		return fromController(null, controllerType)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,class,and,current,request,information,including,servlet,mapping,if,the,controller,contains,multiple,mappings,only,the,first,one,is,used,param,controller,type,the,controller,to,build,a,uri,for,return,a,uri,components,builder,instance,never,code,null;public,static,uri,components,builder,from,controller,class,controller,type,return,from,controller,null,controller,type
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromController(Class<?> controllerType);1467726769;Create a {@link UriComponentsBuilder} from the mapping of a controller class_and current request information including Servlet mapping. If the controller_contains multiple mappings, only the first one is used._@param controllerType the controller to build a URI for_@return a UriComponentsBuilder instance (never {@code null});public static UriComponentsBuilder fromController(Class<?> controllerType) {_		return fromController(null, controllerType)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,class,and,current,request,information,including,servlet,mapping,if,the,controller,contains,multiple,mappings,only,the,first,one,is,used,param,controller,type,the,controller,to,build,a,uri,for,return,a,uri,components,builder,instance,never,code,null;public,static,uri,components,builder,from,controller,class,controller,type,return,from,controller,null,controller,type
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromController(Class<?> controllerType);1467730834;Create a {@link UriComponentsBuilder} from the mapping of a controller class_and current request information including Servlet mapping. If the controller_contains multiple mappings, only the first one is used._@param controllerType the controller to build a URI for_@return a UriComponentsBuilder instance (never {@code null});public static UriComponentsBuilder fromController(Class<?> controllerType) {_		return fromController(null, controllerType)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,class,and,current,request,information,including,servlet,mapping,if,the,controller,contains,multiple,mappings,only,the,first,one,is,used,param,controller,type,the,controller,to,build,a,uri,for,return,a,uri,components,builder,instance,never,code,null;public,static,uri,components,builder,from,controller,class,controller,type,return,from,controller,null,controller,type
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromController(Class<?> controllerType);1467846264;Create a {@link UriComponentsBuilder} from the mapping of a controller class_and current request information including Servlet mapping. If the controller_contains multiple mappings, only the first one is used._@param controllerType the controller to build a URI for_@return a UriComponentsBuilder instance (never {@code null});public static UriComponentsBuilder fromController(Class<?> controllerType) {_		return fromController(null, controllerType)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,class,and,current,request,information,including,servlet,mapping,if,the,controller,contains,multiple,mappings,only,the,first,one,is,used,param,controller,type,the,controller,to,build,a,uri,for,return,a,uri,components,builder,instance,never,code,null;public,static,uri,components,builder,from,controller,class,controller,type,return,from,controller,null,controller,type
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromController(Class<?> controllerType);1468613531;Create a {@link UriComponentsBuilder} from the mapping of a controller class_and current request information including Servlet mapping. If the controller_contains multiple mappings, only the first one is used._@param controllerType the controller to build a URI for_@return a UriComponentsBuilder instance (never {@code null});public static UriComponentsBuilder fromController(Class<?> controllerType) {_		return fromController(null, controllerType)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,class,and,current,request,information,including,servlet,mapping,if,the,controller,contains,multiple,mappings,only,the,first,one,is,used,param,controller,type,the,controller,to,build,a,uri,for,return,a,uri,components,builder,instance,never,code,null;public,static,uri,components,builder,from,controller,class,controller,type,return,from,controller,null,controller,type
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromController(Class<?> controllerType);1468948866;Create a {@link UriComponentsBuilder} from the mapping of a controller class_and current request information including Servlet mapping. If the controller_contains multiple mappings, only the first one is used._@param controllerType the controller to build a URI for_@return a UriComponentsBuilder instance (never {@code null});public static UriComponentsBuilder fromController(Class<?> controllerType) {_		return fromController(null, controllerType)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,class,and,current,request,information,including,servlet,mapping,if,the,controller,contains,multiple,mappings,only,the,first,one,is,used,param,controller,type,the,controller,to,build,a,uri,for,return,a,uri,components,builder,instance,never,code,null;public,static,uri,components,builder,from,controller,class,controller,type,return,from,controller,null,controller,type
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromController(Class<?> controllerType);1485810955;Create a {@link UriComponentsBuilder} from the mapping of a controller class_and current request information including Servlet mapping. If the controller_contains multiple mappings, only the first one is used._@param controllerType the controller to build a URI for_@return a UriComponentsBuilder instance (never {@code null});public static UriComponentsBuilder fromController(Class<?> controllerType) {_		return fromController(null, controllerType)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,class,and,current,request,information,including,servlet,mapping,if,the,controller,contains,multiple,mappings,only,the,first,one,is,used,param,controller,type,the,controller,to,build,a,uri,for,return,a,uri,components,builder,instance,never,code,null;public,static,uri,components,builder,from,controller,class,controller,type,return,from,controller,null,controller,type
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromController(Class<?> controllerType);1486634978;Create a {@link UriComponentsBuilder} from the mapping of a controller class_and current request information including Servlet mapping. If the controller_contains multiple mappings, only the first one is used._@param controllerType the controller to build a URI for_@return a UriComponentsBuilder instance (never {@code null});public static UriComponentsBuilder fromController(Class<?> controllerType) {_		return fromController(null, controllerType)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,class,and,current,request,information,including,servlet,mapping,if,the,controller,contains,multiple,mappings,only,the,first,one,is,used,param,controller,type,the,controller,to,build,a,uri,for,return,a,uri,components,builder,instance,never,code,null;public,static,uri,components,builder,from,controller,class,controller,type,return,from,controller,null,controller,type
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromController(Class<?> controllerType);1486635693;Create a {@link UriComponentsBuilder} from the mapping of a controller class_and current request information including Servlet mapping. If the controller_contains multiple mappings, only the first one is used._@param controllerType the controller to build a URI for_@return a UriComponentsBuilder instance (never {@code null});public static UriComponentsBuilder fromController(Class<?> controllerType) {_		return fromController(null, controllerType)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,class,and,current,request,information,including,servlet,mapping,if,the,controller,contains,multiple,mappings,only,the,first,one,is,used,param,controller,type,the,controller,to,build,a,uri,for,return,a,uri,components,builder,instance,never,code,null;public,static,uri,components,builder,from,controller,class,controller,type,return,from,controller,null,controller,type
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromController(Class<?> controllerType);1495868221;Create a {@link UriComponentsBuilder} from the mapping of a controller class_and current request information including Servlet mapping. If the controller_contains multiple mappings, only the first one is used._@param controllerType the controller to build a URI for_@return a UriComponentsBuilder instance (never {@code null});public static UriComponentsBuilder fromController(Class<?> controllerType) {_		return fromController(null, controllerType)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,class,and,current,request,information,including,servlet,mapping,if,the,controller,contains,multiple,mappings,only,the,first,one,is,used,param,controller,type,the,controller,to,build,a,uri,for,return,a,uri,components,builder,instance,never,code,null;public,static,uri,components,builder,from,controller,class,controller,type,return,from,controller,null,controller,type
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromController(Class<?> controllerType);1496242568;Create a {@link UriComponentsBuilder} from the mapping of a controller class_and current request information including Servlet mapping. If the controller_contains multiple mappings, only the first one is used._@param controllerType the controller to build a URI for_@return a UriComponentsBuilder instance (never {@code null});public static UriComponentsBuilder fromController(Class<?> controllerType) {_		return fromController(null, controllerType)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,class,and,current,request,information,including,servlet,mapping,if,the,controller,contains,multiple,mappings,only,the,first,one,is,used,param,controller,type,the,controller,to,build,a,uri,for,return,a,uri,components,builder,instance,never,code,null;public,static,uri,components,builder,from,controller,class,controller,type,return,from,controller,null,controller,type
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromController(Class<?> controllerType);1496259743;Create a {@link UriComponentsBuilder} from the mapping of a controller class_and current request information including Servlet mapping. If the controller_contains multiple mappings, only the first one is used._@param controllerType the controller to build a URI for_@return a UriComponentsBuilder instance (never {@code null});public static UriComponentsBuilder fromController(Class<?> controllerType) {_		return fromController(null, controllerType)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,class,and,current,request,information,including,servlet,mapping,if,the,controller,contains,multiple,mappings,only,the,first,one,is,used,param,controller,type,the,controller,to,build,a,uri,for,return,a,uri,components,builder,instance,never,code,null;public,static,uri,components,builder,from,controller,class,controller,type,return,from,controller,null,controller,type
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromController(Class<?> controllerType);1496370972;Create a {@link UriComponentsBuilder} from the mapping of a controller class_and current request information including Servlet mapping. If the controller_contains multiple mappings, only the first one is used._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param controllerType the controller to build a URI for_@return a UriComponentsBuilder instance (never {@code null});public static UriComponentsBuilder fromController(Class<?> controllerType) {_		return fromController(null, controllerType)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,class,and,current,request,information,including,servlet,mapping,if,the,controller,contains,multiple,mappings,only,the,first,one,is,used,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,controller,type,the,controller,to,build,a,uri,for,return,a,uri,components,builder,instance,never,code,null;public,static,uri,components,builder,from,controller,class,controller,type,return,from,controller,null,controller,type
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromController(Class<?> controllerType);1496837955;Create a {@link UriComponentsBuilder} from the mapping of a controller class_and current request information including Servlet mapping. If the controller_contains multiple mappings, only the first one is used._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param controllerType the controller to build a URI for_@return a UriComponentsBuilder instance (never {@code null});public static UriComponentsBuilder fromController(Class<?> controllerType) {_		return fromController(null, controllerType)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,class,and,current,request,information,including,servlet,mapping,if,the,controller,contains,multiple,mappings,only,the,first,one,is,used,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,controller,type,the,controller,to,build,a,uri,for,return,a,uri,components,builder,instance,never,code,null;public,static,uri,components,builder,from,controller,class,controller,type,return,from,controller,null,controller,type
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromController(Class<?> controllerType);1497341397;Create a {@link UriComponentsBuilder} from the mapping of a controller class_and current request information including Servlet mapping. If the controller_contains multiple mappings, only the first one is used._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param controllerType the controller to build a URI for_@return a UriComponentsBuilder instance (never {@code null});public static UriComponentsBuilder fromController(Class<?> controllerType) {_		return fromController(null, controllerType)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,class,and,current,request,information,including,servlet,mapping,if,the,controller,contains,multiple,mappings,only,the,first,one,is,used,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,controller,type,the,controller,to,build,a,uri,for,return,a,uri,components,builder,instance,never,code,null;public,static,uri,components,builder,from,controller,class,controller,type,return,from,controller,null,controller,type
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromController(Class<?> controllerType);1498780456;Create a {@link UriComponentsBuilder} from the mapping of a controller class_and current request information including Servlet mapping. If the controller_contains multiple mappings, only the first one is used._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param controllerType the controller to build a URI for_@return a UriComponentsBuilder instance (never {@code null});public static UriComponentsBuilder fromController(Class<?> controllerType) {_		return fromController(null, controllerType)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,class,and,current,request,information,including,servlet,mapping,if,the,controller,contains,multiple,mappings,only,the,first,one,is,used,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,controller,type,the,controller,to,build,a,uri,for,return,a,uri,components,builder,instance,never,code,null;public,static,uri,components,builder,from,controller,class,controller,type,return,from,controller,null,controller,type
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromController(Class<?> controllerType);1500416137;Create a {@link UriComponentsBuilder} from the mapping of a controller class_and current request information including Servlet mapping. If the controller_contains multiple mappings, only the first one is used._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param controllerType the controller to build a URI for_@return a UriComponentsBuilder instance (never {@code null});public static UriComponentsBuilder fromController(Class<?> controllerType) {_		return fromController(null, controllerType)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,class,and,current,request,information,including,servlet,mapping,if,the,controller,contains,multiple,mappings,only,the,first,one,is,used,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,controller,type,the,controller,to,build,a,uri,for,return,a,uri,components,builder,instance,never,code,null;public,static,uri,components,builder,from,controller,class,controller,type,return,from,controller,null,controller,type
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromController(Class<?> controllerType);1506097334;Create a {@link UriComponentsBuilder} from the mapping of a controller class_and current request information including Servlet mapping. If the controller_contains multiple mappings, only the first one is used._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param controllerType the controller to build a URI for_@return a UriComponentsBuilder instance (never {@code null});public static UriComponentsBuilder fromController(Class<?> controllerType) {_		return fromController(null, controllerType)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,class,and,current,request,information,including,servlet,mapping,if,the,controller,contains,multiple,mappings,only,the,first,one,is,used,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,controller,type,the,controller,to,build,a,uri,for,return,a,uri,components,builder,instance,never,code,null;public,static,uri,components,builder,from,controller,class,controller,type,return,from,controller,null,controller,type
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromController(Class<?> controllerType);1518770299;Create a {@link UriComponentsBuilder} from the mapping of a controller class_and current request information including Servlet mapping. If the controller_contains multiple mappings, only the first one is used._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param controllerType the controller to build a URI for_@return a UriComponentsBuilder instance (never {@code null});public static UriComponentsBuilder fromController(Class<?> controllerType) {_		return fromController(null, controllerType)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,class,and,current,request,information,including,servlet,mapping,if,the,controller,contains,multiple,mappings,only,the,first,one,is,used,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,controller,type,the,controller,to,build,a,uri,for,return,a,uri,components,builder,instance,never,code,null;public,static,uri,components,builder,from,controller,class,controller,type,return,from,controller,null,controller,type
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromController(Class<?> controllerType);1522354261;Create a {@link UriComponentsBuilder} from the mapping of a controller class_and current request information including Servlet mapping. If the controller_contains multiple mappings, only the first one is used._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param controllerType the controller to build a URI for_@return a UriComponentsBuilder instance (never {@code null});public static UriComponentsBuilder fromController(Class<?> controllerType) {_		return fromController(null, controllerType)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,class,and,current,request,information,including,servlet,mapping,if,the,controller,contains,multiple,mappings,only,the,first,one,is,used,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,controller,type,the,controller,to,build,a,uri,for,return,a,uri,components,builder,instance,never,code,null;public,static,uri,components,builder,from,controller,class,controller,type,return,from,controller,null,controller,type
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromController(Class<?> controllerType);1523455554;Create a {@link UriComponentsBuilder} from the mapping of a controller class_and current request information including Servlet mapping. If the controller_contains multiple mappings, only the first one is used._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param controllerType the controller to build a URI for_@return a UriComponentsBuilder instance (never {@code null});public static UriComponentsBuilder fromController(Class<?> controllerType) {_		return fromController(null, controllerType)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,class,and,current,request,information,including,servlet,mapping,if,the,controller,contains,multiple,mappings,only,the,first,one,is,used,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,controller,type,the,controller,to,build,a,uri,for,return,a,uri,components,builder,instance,never,code,null;public,static,uri,components,builder,from,controller,class,controller,type,return,from,controller,null,controller,type
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromController(Class<?> controllerType);1529028426;Create a {@link UriComponentsBuilder} from the mapping of a controller class_and current request information including Servlet mapping. If the controller_contains multiple mappings, only the first one is used._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param controllerType the controller to build a URI for_@return a UriComponentsBuilder instance (never {@code null});public static UriComponentsBuilder fromController(Class<?> controllerType) {_		return fromController(null, controllerType)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,class,and,current,request,information,including,servlet,mapping,if,the,controller,contains,multiple,mappings,only,the,first,one,is,used,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,controller,type,the,controller,to,build,a,uri,for,return,a,uri,components,builder,instance,never,code,null;public,static,uri,components,builder,from,controller,class,controller,type,return,from,controller,null,controller,type
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromController(Class<?> controllerType);1529028426;Create a {@link UriComponentsBuilder} from the mapping of a controller class_and current request information including Servlet mapping. If the controller_contains multiple mappings, only the first one is used._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param controllerType the controller to build a URI for_@return a UriComponentsBuilder instance (never {@code null});public static UriComponentsBuilder fromController(Class<?> controllerType) {_		return fromController(null, controllerType)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,class,and,current,request,information,including,servlet,mapping,if,the,controller,contains,multiple,mappings,only,the,first,one,is,used,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,controller,type,the,controller,to,build,a,uri,for,return,a,uri,components,builder,instance,never,code,null;public,static,uri,components,builder,from,controller,class,controller,type,return,from,controller,null,controller,type
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromController(Class<?> controllerType);1529028713;Create a {@link UriComponentsBuilder} from the mapping of a controller class_and current request information including Servlet mapping. If the controller_contains multiple mappings, only the first one is used._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param controllerType the controller to build a URI for_@return a UriComponentsBuilder instance (never {@code null});public static UriComponentsBuilder fromController(Class<?> controllerType) {_		return fromController(null, controllerType)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,class,and,current,request,information,including,servlet,mapping,if,the,controller,contains,multiple,mappings,only,the,first,one,is,used,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,controller,type,the,controller,to,build,a,uri,for,return,a,uri,components,builder,instance,never,code,null;public,static,uri,components,builder,from,controller,class,controller,type,return,from,controller,null,controller,type
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromController(Class<?> controllerType);1529361191;Create a {@link UriComponentsBuilder} from the mapping of a controller class_and current request information including Servlet mapping. If the controller_contains multiple mappings, only the first one is used._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param controllerType the controller to build a URI for_@return a UriComponentsBuilder instance (never {@code null});public static UriComponentsBuilder fromController(Class<?> controllerType) {_		return fromController(null, controllerType)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,class,and,current,request,information,including,servlet,mapping,if,the,controller,contains,multiple,mappings,only,the,first,one,is,used,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,controller,type,the,controller,to,build,a,uri,for,return,a,uri,components,builder,instance,never,code,null;public,static,uri,components,builder,from,controller,class,controller,type,return,from,controller,null,controller,type
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromController(Class<?> controllerType);1530174524;Create a {@link UriComponentsBuilder} from the mapping of a controller class_and current request information including Servlet mapping. If the controller_contains multiple mappings, only the first one is used._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param controllerType the controller to build a URI for_@return a UriComponentsBuilder instance (never {@code null});public static UriComponentsBuilder fromController(Class<?> controllerType) {_		return fromController(null, controllerType)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,class,and,current,request,information,including,servlet,mapping,if,the,controller,contains,multiple,mappings,only,the,first,one,is,used,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,controller,type,the,controller,to,build,a,uri,for,return,a,uri,components,builder,instance,never,code,null;public,static,uri,components,builder,from,controller,class,controller,type,return,from,controller,null,controller,type
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromController(Class<?> controllerType);1532041662;Create a {@link UriComponentsBuilder} from the mapping of a controller class_and current request information including Servlet mapping. If the controller_contains multiple mappings, only the first one is used._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param controllerType the controller to build a URI for_@return a UriComponentsBuilder instance (never {@code null});public static UriComponentsBuilder fromController(Class<?> controllerType) {_		return fromController(null, controllerType)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,class,and,current,request,information,including,servlet,mapping,if,the,controller,contains,multiple,mappings,only,the,first,one,is,used,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,controller,type,the,controller,to,build,a,uri,for,return,a,uri,components,builder,instance,never,code,null;public,static,uri,components,builder,from,controller,class,controller,type,return,from,controller,null,controller,type
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromController(Class<?> controllerType);1532041662;Create a {@link UriComponentsBuilder} from the mapping of a controller class_and current request information including Servlet mapping. If the controller_contains multiple mappings, only the first one is used._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param controllerType the controller to build a URI for_@return a UriComponentsBuilder instance (never {@code null});public static UriComponentsBuilder fromController(Class<?> controllerType) {_		return fromController(null, controllerType)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,class,and,current,request,information,including,servlet,mapping,if,the,controller,contains,multiple,mappings,only,the,first,one,is,used,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,controller,type,the,controller,to,build,a,uri,for,return,a,uri,components,builder,instance,never,code,null;public,static,uri,components,builder,from,controller,class,controller,type,return,from,controller,null,controller,type
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromController(Class<?> controllerType);1548943222;Create a {@link UriComponentsBuilder} from the mapping of a controller class_and current request information including Servlet mapping. If the controller_contains multiple mappings, only the first one is used._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param controllerType the controller to build a URI for_@return a UriComponentsBuilder instance (never {@code null});public static UriComponentsBuilder fromController(Class<?> controllerType) {_		return fromController(null, controllerType)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,class,and,current,request,information,including,servlet,mapping,if,the,controller,contains,multiple,mappings,only,the,first,one,is,used,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,controller,type,the,controller,to,build,a,uri,for,return,a,uri,components,builder,instance,never,code,null;public,static,uri,components,builder,from,controller,class,controller,type,return,from,controller,null,controller,type
MvcUriComponentsBuilder -> public static MethodArgumentBuilder fromMappingName(@Nullable UriComponentsBuilder builder, String name);1496259743;An alternative to {@link #fromMappingName(String)} that accepts a_{@code UriComponentsBuilder} representing the base URL. This is useful_when using MvcUriComponentsBuilder outside the context of processing a_request or to apply a custom baseUrl not matching the current request._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param name the mapping name_@return a builder to prepare the URI String_@throws IllegalArgumentException if the mapping name is not found or_if there is no unique match_@since 4.2;public static MethodArgumentBuilder fromMappingName(@Nullable UriComponentsBuilder builder, String name) {_		RequestMappingInfoHandlerMapping handlerMapping = getRequestMappingInfoHandlerMapping()__		List<HandlerMethod> handlerMethods = handlerMapping.getHandlerMethodsForMappingName(name)__		if (handlerMethods == null) {_			throw new IllegalArgumentException("Mapping mappingName not found: " + name)__		}_		if (handlerMethods.size() != 1) {_			throw new IllegalArgumentException("No unique match for mapping mappingName " +_					name + ": " + handlerMethods)__		}_		HandlerMethod handlerMethod = handlerMethods.get(0)__		Class<?> controllerType = handlerMethod.getBeanType()__		Method method = handlerMethod.getMethod()__		return new MethodArgumentBuilder(builder, controllerType, method)__	};an,alternative,to,link,from,mapping,name,string,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,name,the,mapping,name,return,a,builder,to,prepare,the,uri,string,throws,illegal,argument,exception,if,the,mapping,name,is,not,found,or,if,there,is,no,unique,match,since,4,2;public,static,method,argument,builder,from,mapping,name,nullable,uri,components,builder,builder,string,name,request,mapping,info,handler,mapping,handler,mapping,get,request,mapping,info,handler,mapping,list,handler,method,handler,methods,handler,mapping,get,handler,methods,for,mapping,name,name,if,handler,methods,null,throw,new,illegal,argument,exception,mapping,mapping,name,not,found,name,if,handler,methods,size,1,throw,new,illegal,argument,exception,no,unique,match,for,mapping,mapping,name,name,handler,methods,handler,method,handler,method,handler,methods,get,0,class,controller,type,handler,method,get,bean,type,method,method,handler,method,get,method,return,new,method,argument,builder,builder,controller,type,method
MvcUriComponentsBuilder -> public static MethodArgumentBuilder fromMappingName(@Nullable UriComponentsBuilder builder, String name);1496370972;An alternative to {@link #fromMappingName(String)} that accepts a_{@code UriComponentsBuilder} representing the base URL. This is useful_when using MvcUriComponentsBuilder outside the context of processing a_request or to apply a custom baseUrl not matching the current request._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param name the mapping name_@return a builder to prepare the URI String_@throws IllegalArgumentException if the mapping name is not found or_if there is no unique match_@since 4.2;public static MethodArgumentBuilder fromMappingName(@Nullable UriComponentsBuilder builder, String name) {_		RequestMappingInfoHandlerMapping handlerMapping = getRequestMappingInfoHandlerMapping()__		List<HandlerMethod> handlerMethods = handlerMapping.getHandlerMethodsForMappingName(name)__		if (handlerMethods == null) {_			throw new IllegalArgumentException("Mapping mappingName not found: " + name)__		}_		if (handlerMethods.size() != 1) {_			throw new IllegalArgumentException("No unique match for mapping mappingName " +_					name + ": " + handlerMethods)__		}_		HandlerMethod handlerMethod = handlerMethods.get(0)__		Class<?> controllerType = handlerMethod.getBeanType()__		Method method = handlerMethod.getMethod()__		return new MethodArgumentBuilder(builder, controllerType, method)__	};an,alternative,to,link,from,mapping,name,string,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,name,the,mapping,name,return,a,builder,to,prepare,the,uri,string,throws,illegal,argument,exception,if,the,mapping,name,is,not,found,or,if,there,is,no,unique,match,since,4,2;public,static,method,argument,builder,from,mapping,name,nullable,uri,components,builder,builder,string,name,request,mapping,info,handler,mapping,handler,mapping,get,request,mapping,info,handler,mapping,list,handler,method,handler,methods,handler,mapping,get,handler,methods,for,mapping,name,name,if,handler,methods,null,throw,new,illegal,argument,exception,mapping,mapping,name,not,found,name,if,handler,methods,size,1,throw,new,illegal,argument,exception,no,unique,match,for,mapping,mapping,name,name,handler,methods,handler,method,handler,method,handler,methods,get,0,class,controller,type,handler,method,get,bean,type,method,method,handler,method,get,method,return,new,method,argument,builder,builder,controller,type,method
MvcUriComponentsBuilder -> public static MethodArgumentBuilder fromMappingName(@Nullable UriComponentsBuilder builder, String name);1496837955;An alternative to {@link #fromMappingName(String)} that accepts a_{@code UriComponentsBuilder} representing the base URL. This is useful_when using MvcUriComponentsBuilder outside the context of processing a_request or to apply a custom baseUrl not matching the current request._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param name the mapping name_@return a builder to prepare the URI String_@throws IllegalArgumentException if the mapping name is not found or_if there is no unique match_@since 4.2;public static MethodArgumentBuilder fromMappingName(@Nullable UriComponentsBuilder builder, String name) {_		RequestMappingInfoHandlerMapping handlerMapping = getRequestMappingInfoHandlerMapping()__		List<HandlerMethod> handlerMethods = handlerMapping.getHandlerMethodsForMappingName(name)__		if (handlerMethods == null) {_			throw new IllegalArgumentException("Mapping mappingName not found: " + name)__		}_		if (handlerMethods.size() != 1) {_			throw new IllegalArgumentException("No unique match for mapping mappingName " +_					name + ": " + handlerMethods)__		}_		HandlerMethod handlerMethod = handlerMethods.get(0)__		Class<?> controllerType = handlerMethod.getBeanType()__		Method method = handlerMethod.getMethod()__		return new MethodArgumentBuilder(builder, controllerType, method)__	};an,alternative,to,link,from,mapping,name,string,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,name,the,mapping,name,return,a,builder,to,prepare,the,uri,string,throws,illegal,argument,exception,if,the,mapping,name,is,not,found,or,if,there,is,no,unique,match,since,4,2;public,static,method,argument,builder,from,mapping,name,nullable,uri,components,builder,builder,string,name,request,mapping,info,handler,mapping,handler,mapping,get,request,mapping,info,handler,mapping,list,handler,method,handler,methods,handler,mapping,get,handler,methods,for,mapping,name,name,if,handler,methods,null,throw,new,illegal,argument,exception,mapping,mapping,name,not,found,name,if,handler,methods,size,1,throw,new,illegal,argument,exception,no,unique,match,for,mapping,mapping,name,name,handler,methods,handler,method,handler,method,handler,methods,get,0,class,controller,type,handler,method,get,bean,type,method,method,handler,method,get,method,return,new,method,argument,builder,builder,controller,type,method
MvcUriComponentsBuilder -> public static MethodArgumentBuilder fromMappingName(@Nullable UriComponentsBuilder builder, String name);1497341397;An alternative to {@link #fromMappingName(String)} that accepts a_{@code UriComponentsBuilder} representing the base URL. This is useful_when using MvcUriComponentsBuilder outside the context of processing a_request or to apply a custom baseUrl not matching the current request._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param name the mapping name_@return a builder to prepare the URI String_@throws IllegalArgumentException if the mapping name is not found or_if there is no unique match_@since 4.2;public static MethodArgumentBuilder fromMappingName(@Nullable UriComponentsBuilder builder, String name) {_		RequestMappingInfoHandlerMapping handlerMapping = getRequestMappingInfoHandlerMapping()__		List<HandlerMethod> handlerMethods = handlerMapping.getHandlerMethodsForMappingName(name)__		if (handlerMethods == null) {_			throw new IllegalArgumentException("Mapping mappingName not found: " + name)__		}_		if (handlerMethods.size() != 1) {_			throw new IllegalArgumentException("No unique match for mapping mappingName " +_					name + ": " + handlerMethods)__		}_		HandlerMethod handlerMethod = handlerMethods.get(0)__		Class<?> controllerType = handlerMethod.getBeanType()__		Method method = handlerMethod.getMethod()__		return new MethodArgumentBuilder(builder, controllerType, method)__	};an,alternative,to,link,from,mapping,name,string,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,name,the,mapping,name,return,a,builder,to,prepare,the,uri,string,throws,illegal,argument,exception,if,the,mapping,name,is,not,found,or,if,there,is,no,unique,match,since,4,2;public,static,method,argument,builder,from,mapping,name,nullable,uri,components,builder,builder,string,name,request,mapping,info,handler,mapping,handler,mapping,get,request,mapping,info,handler,mapping,list,handler,method,handler,methods,handler,mapping,get,handler,methods,for,mapping,name,name,if,handler,methods,null,throw,new,illegal,argument,exception,mapping,mapping,name,not,found,name,if,handler,methods,size,1,throw,new,illegal,argument,exception,no,unique,match,for,mapping,mapping,name,name,handler,methods,handler,method,handler,method,handler,methods,get,0,class,controller,type,handler,method,get,bean,type,method,method,handler,method,get,method,return,new,method,argument,builder,builder,controller,type,method
MvcUriComponentsBuilder -> public static MethodArgumentBuilder fromMappingName(@Nullable UriComponentsBuilder builder, String name);1498780456;An alternative to {@link #fromMappingName(String)} that accepts a_{@code UriComponentsBuilder} representing the base URL. This is useful_when using MvcUriComponentsBuilder outside the context of processing a_request or to apply a custom baseUrl not matching the current request._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param name the mapping name_@return a builder to prepare the URI String_@throws IllegalArgumentException if the mapping name is not found or_if there is no unique match_@since 4.2;public static MethodArgumentBuilder fromMappingName(@Nullable UriComponentsBuilder builder, String name) {_		RequestMappingInfoHandlerMapping handlerMapping = getRequestMappingInfoHandlerMapping()__		List<HandlerMethod> handlerMethods = handlerMapping.getHandlerMethodsForMappingName(name)__		if (handlerMethods == null) {_			throw new IllegalArgumentException("Mapping mappingName not found: " + name)__		}_		if (handlerMethods.size() != 1) {_			throw new IllegalArgumentException("No unique match for mapping mappingName " +_					name + ": " + handlerMethods)__		}_		HandlerMethod handlerMethod = handlerMethods.get(0)__		Class<?> controllerType = handlerMethod.getBeanType()__		Method method = handlerMethod.getMethod()__		return new MethodArgumentBuilder(builder, controllerType, method)__	};an,alternative,to,link,from,mapping,name,string,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,name,the,mapping,name,return,a,builder,to,prepare,the,uri,string,throws,illegal,argument,exception,if,the,mapping,name,is,not,found,or,if,there,is,no,unique,match,since,4,2;public,static,method,argument,builder,from,mapping,name,nullable,uri,components,builder,builder,string,name,request,mapping,info,handler,mapping,handler,mapping,get,request,mapping,info,handler,mapping,list,handler,method,handler,methods,handler,mapping,get,handler,methods,for,mapping,name,name,if,handler,methods,null,throw,new,illegal,argument,exception,mapping,mapping,name,not,found,name,if,handler,methods,size,1,throw,new,illegal,argument,exception,no,unique,match,for,mapping,mapping,name,name,handler,methods,handler,method,handler,method,handler,methods,get,0,class,controller,type,handler,method,get,bean,type,method,method,handler,method,get,method,return,new,method,argument,builder,builder,controller,type,method
MvcUriComponentsBuilder -> public static MethodArgumentBuilder fromMappingName(@Nullable UriComponentsBuilder builder, String name);1500416137;An alternative to {@link #fromMappingName(String)} that accepts a_{@code UriComponentsBuilder} representing the base URL. This is useful_when using MvcUriComponentsBuilder outside the context of processing a_request or to apply a custom baseUrl not matching the current request._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param name the mapping name_@return a builder to prepare the URI String_@throws IllegalArgumentException if the mapping name is not found or_if there is no unique match_@since 4.2;public static MethodArgumentBuilder fromMappingName(@Nullable UriComponentsBuilder builder, String name) {_		RequestMappingInfoHandlerMapping handlerMapping = getRequestMappingInfoHandlerMapping()__		List<HandlerMethod> handlerMethods = handlerMapping.getHandlerMethodsForMappingName(name)__		if (handlerMethods == null) {_			throw new IllegalArgumentException("Mapping mappingName not found: " + name)__		}_		if (handlerMethods.size() != 1) {_			throw new IllegalArgumentException("No unique match for mapping mappingName " +_					name + ": " + handlerMethods)__		}_		HandlerMethod handlerMethod = handlerMethods.get(0)__		Class<?> controllerType = handlerMethod.getBeanType()__		Method method = handlerMethod.getMethod()__		return new MethodArgumentBuilder(builder, controllerType, method)__	};an,alternative,to,link,from,mapping,name,string,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,name,the,mapping,name,return,a,builder,to,prepare,the,uri,string,throws,illegal,argument,exception,if,the,mapping,name,is,not,found,or,if,there,is,no,unique,match,since,4,2;public,static,method,argument,builder,from,mapping,name,nullable,uri,components,builder,builder,string,name,request,mapping,info,handler,mapping,handler,mapping,get,request,mapping,info,handler,mapping,list,handler,method,handler,methods,handler,mapping,get,handler,methods,for,mapping,name,name,if,handler,methods,null,throw,new,illegal,argument,exception,mapping,mapping,name,not,found,name,if,handler,methods,size,1,throw,new,illegal,argument,exception,no,unique,match,for,mapping,mapping,name,name,handler,methods,handler,method,handler,method,handler,methods,get,0,class,controller,type,handler,method,get,bean,type,method,method,handler,method,get,method,return,new,method,argument,builder,builder,controller,type,method
MvcUriComponentsBuilder -> public static MethodArgumentBuilder fromMappingName(@Nullable UriComponentsBuilder builder, String name);1506097334;An alternative to {@link #fromMappingName(String)} that accepts a_{@code UriComponentsBuilder} representing the base URL. This is useful_when using MvcUriComponentsBuilder outside the context of processing a_request or to apply a custom baseUrl not matching the current request._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param name the mapping name_@return a builder to prepare the URI String_@throws IllegalArgumentException if the mapping name is not found or_if there is no unique match_@since 4.2;public static MethodArgumentBuilder fromMappingName(@Nullable UriComponentsBuilder builder, String name) {_		RequestMappingInfoHandlerMapping handlerMapping = getRequestMappingInfoHandlerMapping()__		List<HandlerMethod> handlerMethods = handlerMapping.getHandlerMethodsForMappingName(name)__		if (handlerMethods == null) {_			throw new IllegalArgumentException("Mapping mappingName not found: " + name)__		}_		if (handlerMethods.size() != 1) {_			throw new IllegalArgumentException("No unique match for mapping mappingName " +_					name + ": " + handlerMethods)__		}_		HandlerMethod handlerMethod = handlerMethods.get(0)__		Class<?> controllerType = handlerMethod.getBeanType()__		Method method = handlerMethod.getMethod()__		return new MethodArgumentBuilder(builder, controllerType, method)__	};an,alternative,to,link,from,mapping,name,string,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,name,the,mapping,name,return,a,builder,to,prepare,the,uri,string,throws,illegal,argument,exception,if,the,mapping,name,is,not,found,or,if,there,is,no,unique,match,since,4,2;public,static,method,argument,builder,from,mapping,name,nullable,uri,components,builder,builder,string,name,request,mapping,info,handler,mapping,handler,mapping,get,request,mapping,info,handler,mapping,list,handler,method,handler,methods,handler,mapping,get,handler,methods,for,mapping,name,name,if,handler,methods,null,throw,new,illegal,argument,exception,mapping,mapping,name,not,found,name,if,handler,methods,size,1,throw,new,illegal,argument,exception,no,unique,match,for,mapping,mapping,name,name,handler,methods,handler,method,handler,method,handler,methods,get,0,class,controller,type,handler,method,get,bean,type,method,method,handler,method,get,method,return,new,method,argument,builder,builder,controller,type,method
MvcUriComponentsBuilder -> public static MethodArgumentBuilder fromMappingName(@Nullable UriComponentsBuilder builder, String name);1518770299;An alternative to {@link #fromMappingName(String)} that accepts a_{@code UriComponentsBuilder} representing the base URL. This is useful_when using MvcUriComponentsBuilder outside the context of processing a_request or to apply a custom baseUrl not matching the current request._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param name the mapping name_@return a builder to prepare the URI String_@throws IllegalArgumentException if the mapping name is not found or_if there is no unique match_@since 4.2;public static MethodArgumentBuilder fromMappingName(@Nullable UriComponentsBuilder builder, String name) {_		RequestMappingInfoHandlerMapping handlerMapping = getRequestMappingInfoHandlerMapping()__		List<HandlerMethod> handlerMethods = handlerMapping.getHandlerMethodsForMappingName(name)__		if (handlerMethods == null) {_			throw new IllegalArgumentException("Mapping mappingName not found: " + name)__		}_		if (handlerMethods.size() != 1) {_			throw new IllegalArgumentException("No unique match for mapping mappingName " +_					name + ": " + handlerMethods)__		}_		HandlerMethod handlerMethod = handlerMethods.get(0)__		Class<?> controllerType = handlerMethod.getBeanType()__		Method method = handlerMethod.getMethod()__		return new MethodArgumentBuilder(builder, controllerType, method)__	};an,alternative,to,link,from,mapping,name,string,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,name,the,mapping,name,return,a,builder,to,prepare,the,uri,string,throws,illegal,argument,exception,if,the,mapping,name,is,not,found,or,if,there,is,no,unique,match,since,4,2;public,static,method,argument,builder,from,mapping,name,nullable,uri,components,builder,builder,string,name,request,mapping,info,handler,mapping,handler,mapping,get,request,mapping,info,handler,mapping,list,handler,method,handler,methods,handler,mapping,get,handler,methods,for,mapping,name,name,if,handler,methods,null,throw,new,illegal,argument,exception,mapping,mapping,name,not,found,name,if,handler,methods,size,1,throw,new,illegal,argument,exception,no,unique,match,for,mapping,mapping,name,name,handler,methods,handler,method,handler,method,handler,methods,get,0,class,controller,type,handler,method,get,bean,type,method,method,handler,method,get,method,return,new,method,argument,builder,builder,controller,type,method
MvcUriComponentsBuilder -> public static MethodArgumentBuilder fromMappingName(@Nullable UriComponentsBuilder builder, String name);1522354261;An alternative to {@link #fromMappingName(String)} that accepts a_{@code UriComponentsBuilder} representing the base URL. This is useful_when using MvcUriComponentsBuilder outside the context of processing a_request or to apply a custom baseUrl not matching the current request._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param name the mapping name_@return a builder to prepare the URI String_@throws IllegalArgumentException if the mapping name is not found or_if there is no unique match_@since 4.2;public static MethodArgumentBuilder fromMappingName(@Nullable UriComponentsBuilder builder, String name) {_		RequestMappingInfoHandlerMapping handlerMapping = getRequestMappingInfoHandlerMapping()__		List<HandlerMethod> handlerMethods = handlerMapping.getHandlerMethodsForMappingName(name)__		if (handlerMethods == null) {_			throw new IllegalArgumentException("Mapping mappingName not found: " + name)__		}_		if (handlerMethods.size() != 1) {_			throw new IllegalArgumentException("No unique match for mapping mappingName " +_					name + ": " + handlerMethods)__		}_		HandlerMethod handlerMethod = handlerMethods.get(0)__		Class<?> controllerType = handlerMethod.getBeanType()__		Method method = handlerMethod.getMethod()__		return new MethodArgumentBuilder(builder, controllerType, method)__	};an,alternative,to,link,from,mapping,name,string,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,name,the,mapping,name,return,a,builder,to,prepare,the,uri,string,throws,illegal,argument,exception,if,the,mapping,name,is,not,found,or,if,there,is,no,unique,match,since,4,2;public,static,method,argument,builder,from,mapping,name,nullable,uri,components,builder,builder,string,name,request,mapping,info,handler,mapping,handler,mapping,get,request,mapping,info,handler,mapping,list,handler,method,handler,methods,handler,mapping,get,handler,methods,for,mapping,name,name,if,handler,methods,null,throw,new,illegal,argument,exception,mapping,mapping,name,not,found,name,if,handler,methods,size,1,throw,new,illegal,argument,exception,no,unique,match,for,mapping,mapping,name,name,handler,methods,handler,method,handler,method,handler,methods,get,0,class,controller,type,handler,method,get,bean,type,method,method,handler,method,get,method,return,new,method,argument,builder,builder,controller,type,method
MvcUriComponentsBuilder -> public static MethodArgumentBuilder fromMappingName(@Nullable UriComponentsBuilder builder, String name);1523455554;An alternative to {@link #fromMappingName(String)} that accepts a_{@code UriComponentsBuilder} representing the base URL. This is useful_when using MvcUriComponentsBuilder outside the context of processing a_request or to apply a custom baseUrl not matching the current request._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param name the mapping name_@return a builder to prepare the URI String_@throws IllegalArgumentException if the mapping name is not found or_if there is no unique match_@since 4.2;public static MethodArgumentBuilder fromMappingName(@Nullable UriComponentsBuilder builder, String name) {_		RequestMappingInfoHandlerMapping handlerMapping = getRequestMappingInfoHandlerMapping()__		List<HandlerMethod> handlerMethods = handlerMapping.getHandlerMethodsForMappingName(name)__		if (handlerMethods == null) {_			throw new IllegalArgumentException("Mapping mappingName not found: " + name)__		}_		if (handlerMethods.size() != 1) {_			throw new IllegalArgumentException("No unique match for mapping mappingName " +_					name + ": " + handlerMethods)__		}_		HandlerMethod handlerMethod = handlerMethods.get(0)__		Class<?> controllerType = handlerMethod.getBeanType()__		Method method = handlerMethod.getMethod()__		return new MethodArgumentBuilder(builder, controllerType, method)__	};an,alternative,to,link,from,mapping,name,string,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,name,the,mapping,name,return,a,builder,to,prepare,the,uri,string,throws,illegal,argument,exception,if,the,mapping,name,is,not,found,or,if,there,is,no,unique,match,since,4,2;public,static,method,argument,builder,from,mapping,name,nullable,uri,components,builder,builder,string,name,request,mapping,info,handler,mapping,handler,mapping,get,request,mapping,info,handler,mapping,list,handler,method,handler,methods,handler,mapping,get,handler,methods,for,mapping,name,name,if,handler,methods,null,throw,new,illegal,argument,exception,mapping,mapping,name,not,found,name,if,handler,methods,size,1,throw,new,illegal,argument,exception,no,unique,match,for,mapping,mapping,name,name,handler,methods,handler,method,handler,method,handler,methods,get,0,class,controller,type,handler,method,get,bean,type,method,method,handler,method,get,method,return,new,method,argument,builder,builder,controller,type,method
MvcUriComponentsBuilder -> public static MethodArgumentBuilder fromMappingName(@Nullable UriComponentsBuilder builder, String name);1529028426;An alternative to {@link #fromMappingName(String)} that accepts a_{@code UriComponentsBuilder} representing the base URL. This is useful_when using MvcUriComponentsBuilder outside the context of processing a_request or to apply a custom baseUrl not matching the current request._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param name the mapping name_@return a builder to prepare the URI String_@throws IllegalArgumentException if the mapping name is not found or_if there is no unique match_@since 4.2;public static MethodArgumentBuilder fromMappingName(@Nullable UriComponentsBuilder builder, String name) {_		WebApplicationContext wac = getWebApplicationContext()__		Assert.notNull(wac, "Cannot lookup handler method mappings without WebApplicationContext")__		RequestMappingInfoHandlerMapping mapping = wac.getBean(RequestMappingInfoHandlerMapping.class)__		List<HandlerMethod> handlerMethods = mapping.getHandlerMethodsForMappingName(name)__		if (handlerMethods == null) {_			throw new IllegalArgumentException("Mapping not found: " + name)__		}_		else if (handlerMethods.size() != 1) {_			throw new IllegalArgumentException("No unique match for mapping " + name + ": " + handlerMethods)__		}_		else {_			HandlerMethod handlerMethod = handlerMethods.get(0)__			Class<?> controllerType = handlerMethod.getBeanType()__			Method method = handlerMethod.getMethod()__			return new MethodArgumentBuilder(builder, controllerType, method)__		}_	};an,alternative,to,link,from,mapping,name,string,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,name,the,mapping,name,return,a,builder,to,prepare,the,uri,string,throws,illegal,argument,exception,if,the,mapping,name,is,not,found,or,if,there,is,no,unique,match,since,4,2;public,static,method,argument,builder,from,mapping,name,nullable,uri,components,builder,builder,string,name,web,application,context,wac,get,web,application,context,assert,not,null,wac,cannot,lookup,handler,method,mappings,without,web,application,context,request,mapping,info,handler,mapping,mapping,wac,get,bean,request,mapping,info,handler,mapping,class,list,handler,method,handler,methods,mapping,get,handler,methods,for,mapping,name,name,if,handler,methods,null,throw,new,illegal,argument,exception,mapping,not,found,name,else,if,handler,methods,size,1,throw,new,illegal,argument,exception,no,unique,match,for,mapping,name,handler,methods,else,handler,method,handler,method,handler,methods,get,0,class,controller,type,handler,method,get,bean,type,method,method,handler,method,get,method,return,new,method,argument,builder,builder,controller,type,method
MvcUriComponentsBuilder -> public static MethodArgumentBuilder fromMappingName(@Nullable UriComponentsBuilder builder, String name);1529028426;An alternative to {@link #fromMappingName(String)} that accepts a_{@code UriComponentsBuilder} representing the base URL. This is useful_when using MvcUriComponentsBuilder outside the context of processing a_request or to apply a custom baseUrl not matching the current request._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param name the mapping name_@return a builder to prepare the URI String_@throws IllegalArgumentException if the mapping name is not found or_if there is no unique match_@since 4.2;public static MethodArgumentBuilder fromMappingName(@Nullable UriComponentsBuilder builder, String name) {_		WebApplicationContext wac = getWebApplicationContext()__		Assert.notNull(wac, "No WebApplicationContext. ")__		Map<String, RequestMappingInfoHandlerMapping> map = wac.getBeansOfType(RequestMappingInfoHandlerMapping.class)__		List<HandlerMethod> handlerMethods = null__		for (RequestMappingInfoHandlerMapping mapping : map.values()) {_			handlerMethods = mapping.getHandlerMethodsForMappingName(name)__			if (handlerMethods != null) {_				break__			}_		}_		if (handlerMethods == null) {_			throw new IllegalArgumentException("Mapping not found: " + name)__		}_		else if (handlerMethods.size() != 1) {_			throw new IllegalArgumentException("No unique match for mapping " + name + ": " + handlerMethods)__		}_		else {_			HandlerMethod handlerMethod = handlerMethods.get(0)__			Class<?> controllerType = handlerMethod.getBeanType()__			Method method = handlerMethod.getMethod()__			return new MethodArgumentBuilder(builder, controllerType, method)__		}_	};an,alternative,to,link,from,mapping,name,string,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,name,the,mapping,name,return,a,builder,to,prepare,the,uri,string,throws,illegal,argument,exception,if,the,mapping,name,is,not,found,or,if,there,is,no,unique,match,since,4,2;public,static,method,argument,builder,from,mapping,name,nullable,uri,components,builder,builder,string,name,web,application,context,wac,get,web,application,context,assert,not,null,wac,no,web,application,context,map,string,request,mapping,info,handler,mapping,map,wac,get,beans,of,type,request,mapping,info,handler,mapping,class,list,handler,method,handler,methods,null,for,request,mapping,info,handler,mapping,mapping,map,values,handler,methods,mapping,get,handler,methods,for,mapping,name,name,if,handler,methods,null,break,if,handler,methods,null,throw,new,illegal,argument,exception,mapping,not,found,name,else,if,handler,methods,size,1,throw,new,illegal,argument,exception,no,unique,match,for,mapping,name,handler,methods,else,handler,method,handler,method,handler,methods,get,0,class,controller,type,handler,method,get,bean,type,method,method,handler,method,get,method,return,new,method,argument,builder,builder,controller,type,method
MvcUriComponentsBuilder -> public static MethodArgumentBuilder fromMappingName(@Nullable UriComponentsBuilder builder, String name);1529028713;An alternative to {@link #fromMappingName(String)} that accepts a_{@code UriComponentsBuilder} representing the base URL. This is useful_when using MvcUriComponentsBuilder outside the context of processing a_request or to apply a custom baseUrl not matching the current request._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param name the mapping name_@return a builder to prepare the URI String_@throws IllegalArgumentException if the mapping name is not found or_if there is no unique match_@since 4.2;public static MethodArgumentBuilder fromMappingName(@Nullable UriComponentsBuilder builder, String name) {_		WebApplicationContext wac = getWebApplicationContext()__		Assert.notNull(wac, "No WebApplicationContext. ")__		Map<String, RequestMappingInfoHandlerMapping> map = wac.getBeansOfType(RequestMappingInfoHandlerMapping.class)__		List<HandlerMethod> handlerMethods = null__		for (RequestMappingInfoHandlerMapping mapping : map.values()) {_			handlerMethods = mapping.getHandlerMethodsForMappingName(name)__			if (handlerMethods != null) {_				break__			}_		}_		if (handlerMethods == null) {_			throw new IllegalArgumentException("Mapping not found: " + name)__		}_		else if (handlerMethods.size() != 1) {_			throw new IllegalArgumentException("No unique match for mapping " + name + ": " + handlerMethods)__		}_		else {_			HandlerMethod handlerMethod = handlerMethods.get(0)__			Class<?> controllerType = handlerMethod.getBeanType()__			Method method = handlerMethod.getMethod()__			return new MethodArgumentBuilder(builder, controllerType, method)__		}_	};an,alternative,to,link,from,mapping,name,string,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,name,the,mapping,name,return,a,builder,to,prepare,the,uri,string,throws,illegal,argument,exception,if,the,mapping,name,is,not,found,or,if,there,is,no,unique,match,since,4,2;public,static,method,argument,builder,from,mapping,name,nullable,uri,components,builder,builder,string,name,web,application,context,wac,get,web,application,context,assert,not,null,wac,no,web,application,context,map,string,request,mapping,info,handler,mapping,map,wac,get,beans,of,type,request,mapping,info,handler,mapping,class,list,handler,method,handler,methods,null,for,request,mapping,info,handler,mapping,mapping,map,values,handler,methods,mapping,get,handler,methods,for,mapping,name,name,if,handler,methods,null,break,if,handler,methods,null,throw,new,illegal,argument,exception,mapping,not,found,name,else,if,handler,methods,size,1,throw,new,illegal,argument,exception,no,unique,match,for,mapping,name,handler,methods,else,handler,method,handler,method,handler,methods,get,0,class,controller,type,handler,method,get,bean,type,method,method,handler,method,get,method,return,new,method,argument,builder,builder,controller,type,method
MvcUriComponentsBuilder -> public static MethodArgumentBuilder fromMappingName(@Nullable UriComponentsBuilder builder, String name);1529361191;An alternative to {@link #fromMappingName(String)} that accepts a_{@code UriComponentsBuilder} representing the base URL. This is useful_when using MvcUriComponentsBuilder outside the context of processing a_request or to apply a custom baseUrl not matching the current request._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param name the mapping name_@return a builder to prepare the URI String_@throws IllegalArgumentException if the mapping name is not found or_if there is no unique match_@since 4.2;public static MethodArgumentBuilder fromMappingName(@Nullable UriComponentsBuilder builder, String name) {_		WebApplicationContext wac = getWebApplicationContext()__		Assert.notNull(wac, "No WebApplicationContext. ")__		Map<String, RequestMappingInfoHandlerMapping> map = wac.getBeansOfType(RequestMappingInfoHandlerMapping.class)__		List<HandlerMethod> handlerMethods = null__		for (RequestMappingInfoHandlerMapping mapping : map.values()) {_			handlerMethods = mapping.getHandlerMethodsForMappingName(name)__			if (handlerMethods != null) {_				break__			}_		}_		if (handlerMethods == null) {_			throw new IllegalArgumentException("Mapping not found: " + name)__		}_		else if (handlerMethods.size() != 1) {_			throw new IllegalArgumentException("No unique match for mapping " + name + ": " + handlerMethods)__		}_		else {_			HandlerMethod handlerMethod = handlerMethods.get(0)__			Class<?> controllerType = handlerMethod.getBeanType()__			Method method = handlerMethod.getMethod()__			return new MethodArgumentBuilder(builder, controllerType, method)__		}_	};an,alternative,to,link,from,mapping,name,string,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,name,the,mapping,name,return,a,builder,to,prepare,the,uri,string,throws,illegal,argument,exception,if,the,mapping,name,is,not,found,or,if,there,is,no,unique,match,since,4,2;public,static,method,argument,builder,from,mapping,name,nullable,uri,components,builder,builder,string,name,web,application,context,wac,get,web,application,context,assert,not,null,wac,no,web,application,context,map,string,request,mapping,info,handler,mapping,map,wac,get,beans,of,type,request,mapping,info,handler,mapping,class,list,handler,method,handler,methods,null,for,request,mapping,info,handler,mapping,mapping,map,values,handler,methods,mapping,get,handler,methods,for,mapping,name,name,if,handler,methods,null,break,if,handler,methods,null,throw,new,illegal,argument,exception,mapping,not,found,name,else,if,handler,methods,size,1,throw,new,illegal,argument,exception,no,unique,match,for,mapping,name,handler,methods,else,handler,method,handler,method,handler,methods,get,0,class,controller,type,handler,method,get,bean,type,method,method,handler,method,get,method,return,new,method,argument,builder,builder,controller,type,method
MvcUriComponentsBuilder -> public static MethodArgumentBuilder fromMappingName(@Nullable UriComponentsBuilder builder, String name);1530174524;An alternative to {@link #fromMappingName(String)} that accepts a_{@code UriComponentsBuilder} representing the base URL. This is useful_when using MvcUriComponentsBuilder outside the context of processing a_request or to apply a custom baseUrl not matching the current request._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param name the mapping name_@return a builder to prepare the URI String_@throws IllegalArgumentException if the mapping name is not found or_if there is no unique match_@since 4.2;public static MethodArgumentBuilder fromMappingName(@Nullable UriComponentsBuilder builder, String name) {_		WebApplicationContext wac = getWebApplicationContext()__		Assert.notNull(wac, "No WebApplicationContext. ")__		Map<String, RequestMappingInfoHandlerMapping> map = wac.getBeansOfType(RequestMappingInfoHandlerMapping.class)__		List<HandlerMethod> handlerMethods = null__		for (RequestMappingInfoHandlerMapping mapping : map.values()) {_			handlerMethods = mapping.getHandlerMethodsForMappingName(name)__			if (handlerMethods != null) {_				break__			}_		}_		if (handlerMethods == null) {_			throw new IllegalArgumentException("Mapping not found: " + name)__		}_		else if (handlerMethods.size() != 1) {_			throw new IllegalArgumentException("No unique match for mapping " + name + ": " + handlerMethods)__		}_		else {_			HandlerMethod handlerMethod = handlerMethods.get(0)__			Class<?> controllerType = handlerMethod.getBeanType()__			Method method = handlerMethod.getMethod()__			return new MethodArgumentBuilder(builder, controllerType, method)__		}_	};an,alternative,to,link,from,mapping,name,string,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,name,the,mapping,name,return,a,builder,to,prepare,the,uri,string,throws,illegal,argument,exception,if,the,mapping,name,is,not,found,or,if,there,is,no,unique,match,since,4,2;public,static,method,argument,builder,from,mapping,name,nullable,uri,components,builder,builder,string,name,web,application,context,wac,get,web,application,context,assert,not,null,wac,no,web,application,context,map,string,request,mapping,info,handler,mapping,map,wac,get,beans,of,type,request,mapping,info,handler,mapping,class,list,handler,method,handler,methods,null,for,request,mapping,info,handler,mapping,mapping,map,values,handler,methods,mapping,get,handler,methods,for,mapping,name,name,if,handler,methods,null,break,if,handler,methods,null,throw,new,illegal,argument,exception,mapping,not,found,name,else,if,handler,methods,size,1,throw,new,illegal,argument,exception,no,unique,match,for,mapping,name,handler,methods,else,handler,method,handler,method,handler,methods,get,0,class,controller,type,handler,method,get,bean,type,method,method,handler,method,get,method,return,new,method,argument,builder,builder,controller,type,method
MvcUriComponentsBuilder -> public static MethodArgumentBuilder fromMappingName(@Nullable UriComponentsBuilder builder, String name);1532041662;An alternative to {@link #fromMappingName(String)} that accepts a_{@code UriComponentsBuilder} representing the base URL. This is useful_when using MvcUriComponentsBuilder outside the context of processing a_request or to apply a custom baseUrl not matching the current request._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param name the mapping name_@return a builder to prepare the URI String_@throws IllegalArgumentException if the mapping name is not found or_if there is no unique match_@since 4.2;public static MethodArgumentBuilder fromMappingName(@Nullable UriComponentsBuilder builder, String name) {_		WebApplicationContext wac = getWebApplicationContext()__		Assert.notNull(wac, "No WebApplicationContext. ")__		Map<String, RequestMappingInfoHandlerMapping> map = wac.getBeansOfType(RequestMappingInfoHandlerMapping.class)__		List<HandlerMethod> handlerMethods = null__		for (RequestMappingInfoHandlerMapping mapping : map.values()) {_			handlerMethods = mapping.getHandlerMethodsForMappingName(name)__			if (handlerMethods != null) {_				break__			}_		}_		if (handlerMethods == null) {_			throw new IllegalArgumentException("Mapping not found: " + name)__		}_		else if (handlerMethods.size() != 1) {_			throw new IllegalArgumentException("No unique match for mapping " + name + ": " + handlerMethods)__		}_		else {_			HandlerMethod handlerMethod = handlerMethods.get(0)__			Class<?> controllerType = handlerMethod.getBeanType()__			Method method = handlerMethod.getMethod()__			return new MethodArgumentBuilder(builder, controllerType, method)__		}_	};an,alternative,to,link,from,mapping,name,string,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,name,the,mapping,name,return,a,builder,to,prepare,the,uri,string,throws,illegal,argument,exception,if,the,mapping,name,is,not,found,or,if,there,is,no,unique,match,since,4,2;public,static,method,argument,builder,from,mapping,name,nullable,uri,components,builder,builder,string,name,web,application,context,wac,get,web,application,context,assert,not,null,wac,no,web,application,context,map,string,request,mapping,info,handler,mapping,map,wac,get,beans,of,type,request,mapping,info,handler,mapping,class,list,handler,method,handler,methods,null,for,request,mapping,info,handler,mapping,mapping,map,values,handler,methods,mapping,get,handler,methods,for,mapping,name,name,if,handler,methods,null,break,if,handler,methods,null,throw,new,illegal,argument,exception,mapping,not,found,name,else,if,handler,methods,size,1,throw,new,illegal,argument,exception,no,unique,match,for,mapping,name,handler,methods,else,handler,method,handler,method,handler,methods,get,0,class,controller,type,handler,method,get,bean,type,method,method,handler,method,get,method,return,new,method,argument,builder,builder,controller,type,method
MvcUriComponentsBuilder -> public static MethodArgumentBuilder fromMappingName(@Nullable UriComponentsBuilder builder, String name);1532041662;An alternative to {@link #fromMappingName(String)} that accepts a_{@code UriComponentsBuilder} representing the base URL. This is useful_when using MvcUriComponentsBuilder outside the context of processing a_request or to apply a custom baseUrl not matching the current request._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param name the mapping name_@return a builder to prepare the URI String_@throws IllegalArgumentException if the mapping name is not found or_if there is no unique match_@since 4.2;public static MethodArgumentBuilder fromMappingName(@Nullable UriComponentsBuilder builder, String name) {_		WebApplicationContext wac = getWebApplicationContext()__		Assert.notNull(wac, "No WebApplicationContext. ")__		Map<String, RequestMappingInfoHandlerMapping> map = wac.getBeansOfType(RequestMappingInfoHandlerMapping.class)__		List<HandlerMethod> handlerMethods = null__		for (RequestMappingInfoHandlerMapping mapping : map.values()) {_			handlerMethods = mapping.getHandlerMethodsForMappingName(name)__			if (handlerMethods != null) {_				break__			}_		}_		if (handlerMethods == null) {_			throw new IllegalArgumentException("Mapping not found: " + name)__		}_		else if (handlerMethods.size() != 1) {_			throw new IllegalArgumentException("No unique match for mapping " + name + ": " + handlerMethods)__		}_		else {_			HandlerMethod handlerMethod = handlerMethods.get(0)__			Class<?> controllerType = handlerMethod.getBeanType()__			Method method = handlerMethod.getMethod()__			return new MethodArgumentBuilder(builder, controllerType, method)__		}_	};an,alternative,to,link,from,mapping,name,string,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,name,the,mapping,name,return,a,builder,to,prepare,the,uri,string,throws,illegal,argument,exception,if,the,mapping,name,is,not,found,or,if,there,is,no,unique,match,since,4,2;public,static,method,argument,builder,from,mapping,name,nullable,uri,components,builder,builder,string,name,web,application,context,wac,get,web,application,context,assert,not,null,wac,no,web,application,context,map,string,request,mapping,info,handler,mapping,map,wac,get,beans,of,type,request,mapping,info,handler,mapping,class,list,handler,method,handler,methods,null,for,request,mapping,info,handler,mapping,mapping,map,values,handler,methods,mapping,get,handler,methods,for,mapping,name,name,if,handler,methods,null,break,if,handler,methods,null,throw,new,illegal,argument,exception,mapping,not,found,name,else,if,handler,methods,size,1,throw,new,illegal,argument,exception,no,unique,match,for,mapping,name,handler,methods,else,handler,method,handler,method,handler,methods,get,0,class,controller,type,handler,method,get,bean,type,method,method,handler,method,get,method,return,new,method,argument,builder,builder,controller,type,method
MvcUriComponentsBuilder -> public static MethodArgumentBuilder fromMappingName(@Nullable UriComponentsBuilder builder, String name);1548943222;An alternative to {@link #fromMappingName(String)} that accepts a_{@code UriComponentsBuilder} representing the base URL. This is useful_when using MvcUriComponentsBuilder outside the context of processing a_request or to apply a custom baseUrl not matching the current request._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param name the mapping name_@return a builder to prepare the URI String_@throws IllegalArgumentException if the mapping name is not found or_if there is no unique match_@since 4.2;public static MethodArgumentBuilder fromMappingName(@Nullable UriComponentsBuilder builder, String name) {_		WebApplicationContext wac = getWebApplicationContext()__		Assert.notNull(wac, "No WebApplicationContext. ")__		Map<String, RequestMappingInfoHandlerMapping> map = wac.getBeansOfType(RequestMappingInfoHandlerMapping.class)__		List<HandlerMethod> handlerMethods = null__		for (RequestMappingInfoHandlerMapping mapping : map.values()) {_			handlerMethods = mapping.getHandlerMethodsForMappingName(name)__			if (handlerMethods != null) {_				break__			}_		}_		if (handlerMethods == null) {_			throw new IllegalArgumentException("Mapping not found: " + name)__		}_		else if (handlerMethods.size() != 1) {_			throw new IllegalArgumentException("No unique match for mapping " + name + ": " + handlerMethods)__		}_		else {_			HandlerMethod handlerMethod = handlerMethods.get(0)__			Class<?> controllerType = handlerMethod.getBeanType()__			Method method = handlerMethod.getMethod()__			return new MethodArgumentBuilder(builder, controllerType, method)__		}_	};an,alternative,to,link,from,mapping,name,string,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,name,the,mapping,name,return,a,builder,to,prepare,the,uri,string,throws,illegal,argument,exception,if,the,mapping,name,is,not,found,or,if,there,is,no,unique,match,since,4,2;public,static,method,argument,builder,from,mapping,name,nullable,uri,components,builder,builder,string,name,web,application,context,wac,get,web,application,context,assert,not,null,wac,no,web,application,context,map,string,request,mapping,info,handler,mapping,map,wac,get,beans,of,type,request,mapping,info,handler,mapping,class,list,handler,method,handler,methods,null,for,request,mapping,info,handler,mapping,mapping,map,values,handler,methods,mapping,get,handler,methods,for,mapping,name,name,if,handler,methods,null,break,if,handler,methods,null,throw,new,illegal,argument,exception,mapping,not,found,name,else,if,handler,methods,size,1,throw,new,illegal,argument,exception,no,unique,match,for,mapping,name,handler,methods,else,handler,method,handler,method,handler,methods,get,0,class,controller,type,handler,method,get,bean,type,method,method,handler,method,get,method,return,new,method,argument,builder,builder,controller,type,method
MvcUriComponentsBuilder -> public UriComponentsBuilder withMethodCall(Object invocationInfo);1429801417;An alternative to {@link #fromMethodCall(Object)} for use with an instance_of this class created via {@link #relativeTo}.;public UriComponentsBuilder withMethodCall(Object invocationInfo) {_		return fromMethodCall(this.baseUrl, invocationInfo)__	};an,alternative,to,link,from,method,call,object,for,use,with,an,instance,of,this,class,created,via,link,relative,to;public,uri,components,builder,with,method,call,object,invocation,info,return,from,method,call,this,base,url,invocation,info
MvcUriComponentsBuilder -> public UriComponentsBuilder withMethodCall(Object invocationInfo);1429801944;An alternative to {@link #fromMethodCall(Object)} for use with an instance_of this class created via {@link #relativeTo}.;public UriComponentsBuilder withMethodCall(Object invocationInfo) {_		return fromMethodCall(this.baseUrl, invocationInfo)__	};an,alternative,to,link,from,method,call,object,for,use,with,an,instance,of,this,class,created,via,link,relative,to;public,uri,components,builder,with,method,call,object,invocation,info,return,from,method,call,this,base,url,invocation,info
MvcUriComponentsBuilder -> public UriComponentsBuilder withMethodCall(Object invocationInfo);1429802180;An alternative to {@link #fromMethodCall(Object)} for use with an instance_of this class created via {@link #relativeTo}.;public UriComponentsBuilder withMethodCall(Object invocationInfo) {_		return fromMethodCall(this.baseUrl, invocationInfo)__	};an,alternative,to,link,from,method,call,object,for,use,with,an,instance,of,this,class,created,via,link,relative,to;public,uri,components,builder,with,method,call,object,invocation,info,return,from,method,call,this,base,url,invocation,info
MvcUriComponentsBuilder -> public UriComponentsBuilder withMethodCall(Object invocationInfo);1429886024;An alternative to {@link #fromMethodCall(Object)} for use with an instance_of this class created via {@link #relativeTo}.;public UriComponentsBuilder withMethodCall(Object invocationInfo) {_		return fromMethodCall(this.baseUrl, invocationInfo)__	};an,alternative,to,link,from,method,call,object,for,use,with,an,instance,of,this,class,created,via,link,relative,to;public,uri,components,builder,with,method,call,object,invocation,info,return,from,method,call,this,base,url,invocation,info
MvcUriComponentsBuilder -> public UriComponentsBuilder withMethodCall(Object invocationInfo);1429888980;An alternative to {@link #fromMethodCall(Object)} for use with an instance_of this class created via {@link #relativeTo}.;public UriComponentsBuilder withMethodCall(Object invocationInfo) {_		return fromMethodCall(this.baseUrl, invocationInfo)__	};an,alternative,to,link,from,method,call,object,for,use,with,an,instance,of,this,class,created,via,link,relative,to;public,uri,components,builder,with,method,call,object,invocation,info,return,from,method,call,this,base,url,invocation,info
MvcUriComponentsBuilder -> public UriComponentsBuilder withMethodCall(Object invocationInfo);1430739806;An alternative to {@link #fromMethodCall(Object)} for use with an instance_of this class created via {@link #relativeTo}.;public UriComponentsBuilder withMethodCall(Object invocationInfo) {_		return fromMethodCall(this.baseUrl, invocationInfo)__	};an,alternative,to,link,from,method,call,object,for,use,with,an,instance,of,this,class,created,via,link,relative,to;public,uri,components,builder,with,method,call,object,invocation,info,return,from,method,call,this,base,url,invocation,info
MvcUriComponentsBuilder -> public UriComponentsBuilder withMethodCall(Object invocationInfo);1430747547;An alternative to {@link #fromMethodCall(Object)} for use with an instance_of this class created via {@link #relativeTo}.;public UriComponentsBuilder withMethodCall(Object invocationInfo) {_		return fromMethodCall(this.baseUrl, invocationInfo)__	};an,alternative,to,link,from,method,call,object,for,use,with,an,instance,of,this,class,created,via,link,relative,to;public,uri,components,builder,with,method,call,object,invocation,info,return,from,method,call,this,base,url,invocation,info
MvcUriComponentsBuilder -> public UriComponentsBuilder withMethodCall(Object invocationInfo);1430749606;An alternative to {@link #fromMethodCall(Object)} for use with an instance_of this class created via {@link #relativeTo}.;public UriComponentsBuilder withMethodCall(Object invocationInfo) {_		return fromMethodCall(this.baseUrl, invocationInfo)__	};an,alternative,to,link,from,method,call,object,for,use,with,an,instance,of,this,class,created,via,link,relative,to;public,uri,components,builder,with,method,call,object,invocation,info,return,from,method,call,this,base,url,invocation,info
MvcUriComponentsBuilder -> public UriComponentsBuilder withMethodCall(Object invocationInfo);1431975386;An alternative to {@link #fromMethodCall(Object)} for use with an instance_of this class created via {@link #relativeTo}.;public UriComponentsBuilder withMethodCall(Object invocationInfo) {_		return fromMethodCall(this.baseUrl, invocationInfo)__	};an,alternative,to,link,from,method,call,object,for,use,with,an,instance,of,this,class,created,via,link,relative,to;public,uri,components,builder,with,method,call,object,invocation,info,return,from,method,call,this,base,url,invocation,info
MvcUriComponentsBuilder -> public UriComponentsBuilder withMethodCall(Object invocationInfo);1432125256;An alternative to {@link #fromMethodCall(Object)} for use with an instance_of this class created via {@link #relativeTo}.;public UriComponentsBuilder withMethodCall(Object invocationInfo) {_		return fromMethodCall(this.baseUrl, invocationInfo)__	};an,alternative,to,link,from,method,call,object,for,use,with,an,instance,of,this,class,created,via,link,relative,to;public,uri,components,builder,with,method,call,object,invocation,info,return,from,method,call,this,base,url,invocation,info
MvcUriComponentsBuilder -> public UriComponentsBuilder withMethodCall(Object invocationInfo);1432156007;An alternative to {@link #fromMethodCall(Object)} for use with an instance_of this class created via {@link #relativeTo}.;public UriComponentsBuilder withMethodCall(Object invocationInfo) {_		return fromMethodCall(this.baseUrl, invocationInfo)__	};an,alternative,to,link,from,method,call,object,for,use,with,an,instance,of,this,class,created,via,link,relative,to;public,uri,components,builder,with,method,call,object,invocation,info,return,from,method,call,this,base,url,invocation,info
MvcUriComponentsBuilder -> public UriComponentsBuilder withMethodCall(Object invocationInfo);1432856630;An alternative to {@link #fromMethodCall(Object)} for use with an instance_of this class created via {@link #relativeTo}.;public UriComponentsBuilder withMethodCall(Object invocationInfo) {_		return fromMethodCall(this.baseUrl, invocationInfo)__	};an,alternative,to,link,from,method,call,object,for,use,with,an,instance,of,this,class,created,via,link,relative,to;public,uri,components,builder,with,method,call,object,invocation,info,return,from,method,call,this,base,url,invocation,info
MvcUriComponentsBuilder -> public UriComponentsBuilder withMethodCall(Object invocationInfo);1432857824;An alternative to {@link #fromMethodCall(Object)} for use with an instance_of this class created via {@link #relativeTo}.;public UriComponentsBuilder withMethodCall(Object invocationInfo) {_		return fromMethodCall(this.baseUrl, invocationInfo)__	};an,alternative,to,link,from,method,call,object,for,use,with,an,instance,of,this,class,created,via,link,relative,to;public,uri,components,builder,with,method,call,object,invocation,info,return,from,method,call,this,base,url,invocation,info
MvcUriComponentsBuilder -> public UriComponentsBuilder withMethodCall(Object invocationInfo);1434234880;An alternative to {@link #fromMethodCall(Object)} for use with an instance_of this class created via {@link #relativeTo}.;public UriComponentsBuilder withMethodCall(Object invocationInfo) {_		return fromMethodCall(this.baseUrl, invocationInfo)__	};an,alternative,to,link,from,method,call,object,for,use,with,an,instance,of,this,class,created,via,link,relative,to;public,uri,components,builder,with,method,call,object,invocation,info,return,from,method,call,this,base,url,invocation,info
MvcUriComponentsBuilder -> public UriComponentsBuilder withMethodCall(Object invocationInfo);1434484897;An alternative to {@link #fromMethodCall(Object)} for use with an instance_of this class created via {@link #relativeTo}.;public UriComponentsBuilder withMethodCall(Object invocationInfo) {_		return fromMethodCall(this.baseUrl, invocationInfo)__	};an,alternative,to,link,from,method,call,object,for,use,with,an,instance,of,this,class,created,via,link,relative,to;public,uri,components,builder,with,method,call,object,invocation,info,return,from,method,call,this,base,url,invocation,info
MvcUriComponentsBuilder -> public UriComponentsBuilder withMethodCall(Object invocationInfo);1434726592;An alternative to {@link #fromMethodCall(Object)} for use with an instance_of this class created via {@link #relativeTo}.;public UriComponentsBuilder withMethodCall(Object invocationInfo) {_		return fromMethodCall(this.baseUrl, invocationInfo)__	};an,alternative,to,link,from,method,call,object,for,use,with,an,instance,of,this,class,created,via,link,relative,to;public,uri,components,builder,with,method,call,object,invocation,info,return,from,method,call,this,base,url,invocation,info
MvcUriComponentsBuilder -> public UriComponentsBuilder withMethodCall(Object invocationInfo);1435615322;An alternative to {@link #fromMethodCall(Object)} for use with an instance_of this class created via {@link #relativeTo}.;public UriComponentsBuilder withMethodCall(Object invocationInfo) {_		return fromMethodCall(this.baseUrl, invocationInfo)__	};an,alternative,to,link,from,method,call,object,for,use,with,an,instance,of,this,class,created,via,link,relative,to;public,uri,components,builder,with,method,call,object,invocation,info,return,from,method,call,this,base,url,invocation,info
MvcUriComponentsBuilder -> public UriComponentsBuilder withMethodCall(Object invocationInfo);1439294371;An alternative to {@link #fromMethodCall(Object)} for use with an instance_of this class created via {@link #relativeTo}._@since 4.2;public UriComponentsBuilder withMethodCall(Object invocationInfo) {_		return fromMethodCall(this.baseUrl, invocationInfo)__	};an,alternative,to,link,from,method,call,object,for,use,with,an,instance,of,this,class,created,via,link,relative,to,since,4,2;public,uri,components,builder,with,method,call,object,invocation,info,return,from,method,call,this,base,url,invocation,info
MvcUriComponentsBuilder -> public UriComponentsBuilder withMethodCall(Object invocationInfo);1447077465;An alternative to {@link #fromMethodCall(Object)} for use with an instance_of this class created via {@link #relativeTo}._@since 4.2;public UriComponentsBuilder withMethodCall(Object invocationInfo) {_		return fromMethodCall(this.baseUrl, invocationInfo)__	};an,alternative,to,link,from,method,call,object,for,use,with,an,instance,of,this,class,created,via,link,relative,to,since,4,2;public,uri,components,builder,with,method,call,object,invocation,info,return,from,method,call,this,base,url,invocation,info
MvcUriComponentsBuilder -> public UriComponentsBuilder withMethodCall(Object invocationInfo);1458830024;An alternative to {@link #fromMethodCall(Object)} for use with an instance_of this class created via {@link #relativeTo}._@since 4.2;public UriComponentsBuilder withMethodCall(Object invocationInfo) {_		return fromMethodCall(this.baseUrl, invocationInfo)__	};an,alternative,to,link,from,method,call,object,for,use,with,an,instance,of,this,class,created,via,link,relative,to,since,4,2;public,uri,components,builder,with,method,call,object,invocation,info,return,from,method,call,this,base,url,invocation,info
MvcUriComponentsBuilder -> public UriComponentsBuilder withMethodCall(Object invocationInfo);1461047077;An alternative to {@link #fromMethodCall(Object)} for use with an instance_of this class created via {@link #relativeTo}._@since 4.2;public UriComponentsBuilder withMethodCall(Object invocationInfo) {_		return fromMethodCall(this.baseUrl, invocationInfo)__	};an,alternative,to,link,from,method,call,object,for,use,with,an,instance,of,this,class,created,via,link,relative,to,since,4,2;public,uri,components,builder,with,method,call,object,invocation,info,return,from,method,call,this,base,url,invocation,info
MvcUriComponentsBuilder -> public UriComponentsBuilder withMethodCall(Object invocationInfo);1467677340;An alternative to {@link #fromMethodCall(Object)} for use with an instance_of this class created via {@link #relativeTo}._@since 4.2;public UriComponentsBuilder withMethodCall(Object invocationInfo) {_		return fromMethodCall(this.baseUrl, invocationInfo)__	};an,alternative,to,link,from,method,call,object,for,use,with,an,instance,of,this,class,created,via,link,relative,to,since,4,2;public,uri,components,builder,with,method,call,object,invocation,info,return,from,method,call,this,base,url,invocation,info
MvcUriComponentsBuilder -> public UriComponentsBuilder withMethodCall(Object invocationInfo);1467726769;An alternative to {@link #fromMethodCall(Object)} for use with an instance_of this class created via {@link #relativeTo}._@since 4.2;public UriComponentsBuilder withMethodCall(Object invocationInfo) {_		return fromMethodCall(this.baseUrl, invocationInfo)__	};an,alternative,to,link,from,method,call,object,for,use,with,an,instance,of,this,class,created,via,link,relative,to,since,4,2;public,uri,components,builder,with,method,call,object,invocation,info,return,from,method,call,this,base,url,invocation,info
MvcUriComponentsBuilder -> public UriComponentsBuilder withMethodCall(Object invocationInfo);1467730834;An alternative to {@link #fromMethodCall(Object)} for use with an instance_of this class created via {@link #relativeTo}._@since 4.2;public UriComponentsBuilder withMethodCall(Object invocationInfo) {_		return fromMethodCall(this.baseUrl, invocationInfo)__	};an,alternative,to,link,from,method,call,object,for,use,with,an,instance,of,this,class,created,via,link,relative,to,since,4,2;public,uri,components,builder,with,method,call,object,invocation,info,return,from,method,call,this,base,url,invocation,info
MvcUriComponentsBuilder -> public UriComponentsBuilder withMethodCall(Object invocationInfo);1467846264;An alternative to {@link #fromMethodCall(Object)} for use with an instance_of this class created via {@link #relativeTo}._@since 4.2;public UriComponentsBuilder withMethodCall(Object invocationInfo) {_		return fromMethodCall(this.baseUrl, invocationInfo)__	};an,alternative,to,link,from,method,call,object,for,use,with,an,instance,of,this,class,created,via,link,relative,to,since,4,2;public,uri,components,builder,with,method,call,object,invocation,info,return,from,method,call,this,base,url,invocation,info
MvcUriComponentsBuilder -> public UriComponentsBuilder withMethodCall(Object invocationInfo);1468613531;An alternative to {@link #fromMethodCall(Object)} for use with an instance_of this class created via {@link #relativeTo}._@since 4.2;public UriComponentsBuilder withMethodCall(Object invocationInfo) {_		return fromMethodCall(this.baseUrl, invocationInfo)__	};an,alternative,to,link,from,method,call,object,for,use,with,an,instance,of,this,class,created,via,link,relative,to,since,4,2;public,uri,components,builder,with,method,call,object,invocation,info,return,from,method,call,this,base,url,invocation,info
MvcUriComponentsBuilder -> public UriComponentsBuilder withMethodCall(Object invocationInfo);1468948866;An alternative to {@link #fromMethodCall(Object)} for use with an instance_of this class created via {@link #relativeTo}._@since 4.2;public UriComponentsBuilder withMethodCall(Object invocationInfo) {_		return fromMethodCall(this.baseUrl, invocationInfo)__	};an,alternative,to,link,from,method,call,object,for,use,with,an,instance,of,this,class,created,via,link,relative,to,since,4,2;public,uri,components,builder,with,method,call,object,invocation,info,return,from,method,call,this,base,url,invocation,info
MvcUriComponentsBuilder -> public UriComponentsBuilder withMethodCall(Object invocationInfo);1485810955;An alternative to {@link #fromMethodCall(Object)} for use with an instance_of this class created via {@link #relativeTo}._@since 4.2;public UriComponentsBuilder withMethodCall(Object invocationInfo) {_		return fromMethodCall(this.baseUrl, invocationInfo)__	};an,alternative,to,link,from,method,call,object,for,use,with,an,instance,of,this,class,created,via,link,relative,to,since,4,2;public,uri,components,builder,with,method,call,object,invocation,info,return,from,method,call,this,base,url,invocation,info
MvcUriComponentsBuilder -> public UriComponentsBuilder withMethodCall(Object invocationInfo);1486634978;An alternative to {@link #fromMethodCall(Object)} for use with an instance_of this class created via {@link #relativeTo}._@since 4.2;public UriComponentsBuilder withMethodCall(Object invocationInfo) {_		return fromMethodCall(this.baseUrl, invocationInfo)__	};an,alternative,to,link,from,method,call,object,for,use,with,an,instance,of,this,class,created,via,link,relative,to,since,4,2;public,uri,components,builder,with,method,call,object,invocation,info,return,from,method,call,this,base,url,invocation,info
MvcUriComponentsBuilder -> public UriComponentsBuilder withMethodCall(Object invocationInfo);1486635693;An alternative to {@link #fromMethodCall(Object)} for use with an instance_of this class created via {@link #relativeTo}._@since 4.2;public UriComponentsBuilder withMethodCall(Object invocationInfo) {_		return fromMethodCall(this.baseUrl, invocationInfo)__	};an,alternative,to,link,from,method,call,object,for,use,with,an,instance,of,this,class,created,via,link,relative,to,since,4,2;public,uri,components,builder,with,method,call,object,invocation,info,return,from,method,call,this,base,url,invocation,info
MvcUriComponentsBuilder -> public UriComponentsBuilder withMethodCall(Object invocationInfo);1495868221;An alternative to {@link #fromMethodCall(Object)} for use with an instance_of this class created via {@link #relativeTo}._@since 4.2;public UriComponentsBuilder withMethodCall(Object invocationInfo) {_		return fromMethodCall(this.baseUrl, invocationInfo)__	};an,alternative,to,link,from,method,call,object,for,use,with,an,instance,of,this,class,created,via,link,relative,to,since,4,2;public,uri,components,builder,with,method,call,object,invocation,info,return,from,method,call,this,base,url,invocation,info
MvcUriComponentsBuilder -> public UriComponentsBuilder withMethodCall(Object invocationInfo);1496242568;An alternative to {@link #fromMethodCall(Object)} for use with an instance_of this class created via {@link #relativeTo}._@since 4.2;public UriComponentsBuilder withMethodCall(Object invocationInfo) {_		return fromMethodCall(this.baseUrl, invocationInfo)__	};an,alternative,to,link,from,method,call,object,for,use,with,an,instance,of,this,class,created,via,link,relative,to,since,4,2;public,uri,components,builder,with,method,call,object,invocation,info,return,from,method,call,this,base,url,invocation,info
MvcUriComponentsBuilder -> public UriComponentsBuilder withMethodCall(Object invocationInfo);1496259743;An alternative to {@link #fromMethodCall(Object)} for use with an instance_of this class created via {@link #relativeTo}._@since 4.2;public UriComponentsBuilder withMethodCall(Object invocationInfo) {_		return fromMethodCall(this.baseUrl, invocationInfo)__	};an,alternative,to,link,from,method,call,object,for,use,with,an,instance,of,this,class,created,via,link,relative,to,since,4,2;public,uri,components,builder,with,method,call,object,invocation,info,return,from,method,call,this,base,url,invocation,info
MvcUriComponentsBuilder -> public UriComponentsBuilder withMethodCall(Object invocationInfo);1496370972;An alternative to {@link #fromMethodCall(Object)} for use with an instance_of this class created via {@link #relativeTo}._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@since 4.2;public UriComponentsBuilder withMethodCall(Object invocationInfo) {_		return fromMethodCall(this.baseUrl, invocationInfo)__	};an,alternative,to,link,from,method,call,object,for,use,with,an,instance,of,this,class,created,via,link,relative,to,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,since,4,2;public,uri,components,builder,with,method,call,object,invocation,info,return,from,method,call,this,base,url,invocation,info
MvcUriComponentsBuilder -> public UriComponentsBuilder withMethodCall(Object invocationInfo);1496837955;An alternative to {@link #fromMethodCall(Object)} for use with an instance_of this class created via {@link #relativeTo}._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@since 4.2;public UriComponentsBuilder withMethodCall(Object invocationInfo) {_		return fromMethodCall(this.baseUrl, invocationInfo)__	};an,alternative,to,link,from,method,call,object,for,use,with,an,instance,of,this,class,created,via,link,relative,to,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,since,4,2;public,uri,components,builder,with,method,call,object,invocation,info,return,from,method,call,this,base,url,invocation,info
MvcUriComponentsBuilder -> public UriComponentsBuilder withMethodCall(Object invocationInfo);1497341397;An alternative to {@link #fromMethodCall(Object)} for use with an instance_of this class created via {@link #relativeTo}._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@since 4.2;public UriComponentsBuilder withMethodCall(Object invocationInfo) {_		return fromMethodCall(this.baseUrl, invocationInfo)__	};an,alternative,to,link,from,method,call,object,for,use,with,an,instance,of,this,class,created,via,link,relative,to,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,since,4,2;public,uri,components,builder,with,method,call,object,invocation,info,return,from,method,call,this,base,url,invocation,info
MvcUriComponentsBuilder -> public UriComponentsBuilder withMethodCall(Object invocationInfo);1498780456;An alternative to {@link #fromMethodCall(Object)} for use with an instance_of this class created via {@link #relativeTo}._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@since 4.2;public UriComponentsBuilder withMethodCall(Object invocationInfo) {_		return fromMethodCall(this.baseUrl, invocationInfo)__	};an,alternative,to,link,from,method,call,object,for,use,with,an,instance,of,this,class,created,via,link,relative,to,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,since,4,2;public,uri,components,builder,with,method,call,object,invocation,info,return,from,method,call,this,base,url,invocation,info
MvcUriComponentsBuilder -> public UriComponentsBuilder withMethodCall(Object invocationInfo);1500416137;An alternative to {@link #fromMethodCall(Object)} for use with an instance_of this class created via {@link #relativeTo}._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@since 4.2;public UriComponentsBuilder withMethodCall(Object invocationInfo) {_		return fromMethodCall(this.baseUrl, invocationInfo)__	};an,alternative,to,link,from,method,call,object,for,use,with,an,instance,of,this,class,created,via,link,relative,to,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,since,4,2;public,uri,components,builder,with,method,call,object,invocation,info,return,from,method,call,this,base,url,invocation,info
MvcUriComponentsBuilder -> public UriComponentsBuilder withMethodCall(Object invocationInfo);1506097334;An alternative to {@link #fromMethodCall(Object)} for use with an instance_of this class created via {@link #relativeTo}._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@since 4.2;public UriComponentsBuilder withMethodCall(Object invocationInfo) {_		return fromMethodCall(this.baseUrl, invocationInfo)__	};an,alternative,to,link,from,method,call,object,for,use,with,an,instance,of,this,class,created,via,link,relative,to,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,since,4,2;public,uri,components,builder,with,method,call,object,invocation,info,return,from,method,call,this,base,url,invocation,info
MvcUriComponentsBuilder -> public UriComponentsBuilder withMethodCall(Object invocationInfo);1518770299;An alternative to {@link #fromMethodCall(Object)} for use with an instance_of this class created via {@link #relativeTo}._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@since 4.2;public UriComponentsBuilder withMethodCall(Object invocationInfo) {_		return fromMethodCall(this.baseUrl, invocationInfo)__	};an,alternative,to,link,from,method,call,object,for,use,with,an,instance,of,this,class,created,via,link,relative,to,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,since,4,2;public,uri,components,builder,with,method,call,object,invocation,info,return,from,method,call,this,base,url,invocation,info
MvcUriComponentsBuilder -> public UriComponentsBuilder withMethodCall(Object invocationInfo);1522354261;An alternative to {@link #fromMethodCall(Object)} for use with an instance_of this class created via {@link #relativeTo}._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@since 4.2;public UriComponentsBuilder withMethodCall(Object invocationInfo) {_		return fromMethodCall(this.baseUrl, invocationInfo)__	};an,alternative,to,link,from,method,call,object,for,use,with,an,instance,of,this,class,created,via,link,relative,to,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,since,4,2;public,uri,components,builder,with,method,call,object,invocation,info,return,from,method,call,this,base,url,invocation,info
MvcUriComponentsBuilder -> public UriComponentsBuilder withMethodCall(Object invocationInfo);1523455554;An alternative to {@link #fromMethodCall(Object)} for use with an instance_of this class created via {@link #relativeTo}._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@since 4.2;public UriComponentsBuilder withMethodCall(Object invocationInfo) {_		return fromMethodCall(this.baseUrl, invocationInfo)__	};an,alternative,to,link,from,method,call,object,for,use,with,an,instance,of,this,class,created,via,link,relative,to,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,since,4,2;public,uri,components,builder,with,method,call,object,invocation,info,return,from,method,call,this,base,url,invocation,info
MvcUriComponentsBuilder -> public UriComponentsBuilder withMethodCall(Object invocationInfo);1529028426;An alternative to {@link #fromMethodCall(Object)} for use with an instance_of this class created via {@link #relativeTo}._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@since 4.2;public UriComponentsBuilder withMethodCall(Object invocationInfo) {_		return fromMethodCall(this.baseUrl, invocationInfo)__	};an,alternative,to,link,from,method,call,object,for,use,with,an,instance,of,this,class,created,via,link,relative,to,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,since,4,2;public,uri,components,builder,with,method,call,object,invocation,info,return,from,method,call,this,base,url,invocation,info
MvcUriComponentsBuilder -> public UriComponentsBuilder withMethodCall(Object invocationInfo);1529028426;An alternative to {@link #fromMethodCall(Object)} for use with an instance_of this class created via {@link #relativeTo}._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@since 4.2;public UriComponentsBuilder withMethodCall(Object invocationInfo) {_		return fromMethodCall(this.baseUrl, invocationInfo)__	};an,alternative,to,link,from,method,call,object,for,use,with,an,instance,of,this,class,created,via,link,relative,to,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,since,4,2;public,uri,components,builder,with,method,call,object,invocation,info,return,from,method,call,this,base,url,invocation,info
MvcUriComponentsBuilder -> public UriComponentsBuilder withMethodCall(Object invocationInfo);1529028713;An alternative to {@link #fromMethodCall(Object)} for use with an instance_of this class created via {@link #relativeTo}._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@since 4.2;public UriComponentsBuilder withMethodCall(Object invocationInfo) {_		return fromMethodCall(this.baseUrl, invocationInfo)__	};an,alternative,to,link,from,method,call,object,for,use,with,an,instance,of,this,class,created,via,link,relative,to,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,since,4,2;public,uri,components,builder,with,method,call,object,invocation,info,return,from,method,call,this,base,url,invocation,info
MvcUriComponentsBuilder -> public UriComponentsBuilder withMethodCall(Object invocationInfo);1529361191;An alternative to {@link #fromMethodCall(Object)} for use with an instance_of this class created via {@link #relativeTo}._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@since 4.2;public UriComponentsBuilder withMethodCall(Object invocationInfo) {_		return fromMethodCall(this.baseUrl, invocationInfo)__	};an,alternative,to,link,from,method,call,object,for,use,with,an,instance,of,this,class,created,via,link,relative,to,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,since,4,2;public,uri,components,builder,with,method,call,object,invocation,info,return,from,method,call,this,base,url,invocation,info
MvcUriComponentsBuilder -> public UriComponentsBuilder withMethodCall(Object invocationInfo);1530174524;An alternative to {@link #fromMethodCall(Object)} for use with an instance_of this class created via {@link #relativeTo}._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@since 4.2;public UriComponentsBuilder withMethodCall(Object invocationInfo) {_		return fromMethodCall(this.baseUrl, invocationInfo)__	};an,alternative,to,link,from,method,call,object,for,use,with,an,instance,of,this,class,created,via,link,relative,to,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,since,4,2;public,uri,components,builder,with,method,call,object,invocation,info,return,from,method,call,this,base,url,invocation,info
MvcUriComponentsBuilder -> public UriComponentsBuilder withMethodCall(Object invocationInfo);1532041662;An alternative to {@link #fromMethodCall(Object)} for use with an instance_of this class created via {@link #relativeTo}._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@since 4.2;public UriComponentsBuilder withMethodCall(Object invocationInfo) {_		return fromMethodCall(this.baseUrl, invocationInfo)__	};an,alternative,to,link,from,method,call,object,for,use,with,an,instance,of,this,class,created,via,link,relative,to,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,since,4,2;public,uri,components,builder,with,method,call,object,invocation,info,return,from,method,call,this,base,url,invocation,info
MvcUriComponentsBuilder -> public UriComponentsBuilder withMethodCall(Object invocationInfo);1532041662;An alternative to {@link #fromMethodCall(Object)} for use with an instance_of this class created via {@link #relativeTo}._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@since 4.2;public UriComponentsBuilder withMethodCall(Object invocationInfo) {_		return fromMethodCall(this.baseUrl, invocationInfo)__	};an,alternative,to,link,from,method,call,object,for,use,with,an,instance,of,this,class,created,via,link,relative,to,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,since,4,2;public,uri,components,builder,with,method,call,object,invocation,info,return,from,method,call,this,base,url,invocation,info
MvcUriComponentsBuilder -> public UriComponentsBuilder withMethodCall(Object invocationInfo);1548943222;An alternative to {@link #fromMethodCall(Object)} for use with an instance_of this class created via {@link #relativeTo}._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@since 4.2;public UriComponentsBuilder withMethodCall(Object invocationInfo) {_		return fromMethodCall(this.baseUrl, invocationInfo)__	};an,alternative,to,link,from,method,call,object,for,use,with,an,instance,of,this,class,created,via,link,relative,to,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,since,4,2;public,uri,components,builder,with,method,call,object,invocation,info,return,from,method,call,this,base,url,invocation,info
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromLastCall(Object methodInvocationInfo);1382754578;Create a {@link UriComponents} by invoking a method on a "mock" controller, similar_to how test frameworks provide mock objects and record method invocations._<p>_For example given this controller:__<pre class="code">_&#064_RequestMapping("/people/{id}/addresses")_class AddressController {__&#064_RequestMapping("/{country}")_public HttpEntity<Void> getAddressesForCountry(&#064_PathVariable String country) { … }__&#064_RequestMapping(value="/", method=RequestMethod.POST)_public void addAddress(Address address) { … }__</pre>__A "mock" controller can be used as follows:__<pre>__// Inline style with static import of MvcUriComponentsBuilder.mock__MvcUriComponentsBuilder.fromLastCall(_mock(CustomerController.class).showAddresses("US")).buildAndExpand(1)___// Longer style for preparing multiple URIs and for void controller methods__CustomerController controller = MvcUriComponentsBuilder.mock(CustomController.class)__controller.addAddress(null)___MvcUriComponentsBuilder.fromLastCall(controller)___</pre>__The above  supports {@codce @PathVariable} and {@code @RequestParam} method parameters._Any other arguments can be provided as {@literal null} and will be ignored._<p>_Additional (custom) argument types can be supported through an implementation_of {@link org.springframework.web.method.support.UriComponentsContributor}.__@param methodInvocationInfo either the value returned from a "mock" controller_invocation or the "mock" controller itself after an invocation__@return a UriComponents instance;public static UriComponentsBuilder fromLastCall(Object methodInvocationInfo) {__		Assert.isInstanceOf(MethodInvocationInfo.class, methodInvocationInfo)__		MethodInvocationInfo info = (MethodInvocationInfo) methodInvocationInfo___		Method method = info.getControllerMethod()__		Object[] argumentValues = info.getArgumentValues()___		UriComponentsBuilder builder = ServletUriComponentsBuilder.newInstance().path(getMethodRequestMapping(method))__		UriComponents uriComponents = applyContributors(builder, method, argumentValues)___		String typeMapping = getTypeRequestMapping(method.getDeclaringClass())__		String methodMapping = uriComponents.getPath()__		String path = pathMatcher.combine(typeMapping, methodMapping)___		return ServletUriComponentsBuilder.fromCurrentServletMapping().path(_				path).queryParams(uriComponents.getQueryParams())__	};create,a,link,uri,components,by,invoking,a,method,on,a,mock,controller,similar,to,how,test,frameworks,provide,mock,objects,and,record,method,invocations,p,for,example,given,this,controller,pre,class,code,064,request,mapping,people,id,addresses,class,address,controller,064,request,mapping,country,public,http,entity,void,get,addresses,for,country,064,path,variable,string,country,064,request,mapping,value,method,request,method,post,public,void,add,address,address,address,pre,a,mock,controller,can,be,used,as,follows,pre,inline,style,with,static,import,of,mvc,uri,components,builder,mock,mvc,uri,components,builder,from,last,call,mock,customer,controller,class,show,addresses,us,build,and,expand,1,longer,style,for,preparing,multiple,uris,and,for,void,controller,methods,customer,controller,controller,mvc,uri,components,builder,mock,custom,controller,class,controller,add,address,null,mvc,uri,components,builder,from,last,call,controller,pre,the,above,supports,codce,path,variable,and,code,request,param,method,parameters,any,other,arguments,can,be,provided,as,literal,null,and,will,be,ignored,p,additional,custom,argument,types,can,be,supported,through,an,implementation,of,link,org,springframework,web,method,support,uri,components,contributor,param,method,invocation,info,either,the,value,returned,from,a,mock,controller,invocation,or,the,mock,controller,itself,after,an,invocation,return,a,uri,components,instance;public,static,uri,components,builder,from,last,call,object,method,invocation,info,assert,is,instance,of,method,invocation,info,class,method,invocation,info,method,invocation,info,info,method,invocation,info,method,invocation,info,method,method,info,get,controller,method,object,argument,values,info,get,argument,values,uri,components,builder,builder,servlet,uri,components,builder,new,instance,path,get,method,request,mapping,method,uri,components,uri,components,apply,contributors,builder,method,argument,values,string,type,mapping,get,type,request,mapping,method,get,declaring,class,string,method,mapping,uri,components,get,path,string,path,path,matcher,combine,type,mapping,method,mapping,return,servlet,uri,components,builder,from,current,servlet,mapping,path,path,query,params,uri,components,get,query,params
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromLastCall(Object methodInvocationInfo);1382757913;Create a {@link UriComponents} by invoking a method on a "mock" controller, similar_to how test frameworks provide mock objects and record method invocations._<p>_For example given this controller:__<pre class="code">_&#064_RequestMapping("/people/{id}/addresses")_class AddressController {__&#064_RequestMapping("/{country}")_public HttpEntity<Void> getAddressesForCountry(&#064_PathVariable String country) { … }__&#064_RequestMapping(value="/", method=RequestMethod.POST)_public void addAddress(Address address) { … }__</pre>__A "mock" controller can be used as follows:__<pre>__// Inline style with static import of MvcUriComponentsBuilder.mock__MvcUriComponentsBuilder.fromLastCall(_mock(CustomerController.class).showAddresses("US")).buildAndExpand(1)___// Longer style for preparing multiple URIs and for void controller methods__CustomerController controller = MvcUriComponentsBuilder.mock(CustomController.class)__controller.addAddress(null)___MvcUriComponentsBuilder.fromLastCall(controller)___</pre>__The above  supports {@codce @PathVariable} and {@code @RequestParam} method parameters._Any other arguments can be provided as {@literal null} and will be ignored._<p>_Additional (custom) argument types can be supported through an implementation_of {@link org.springframework.web.method.support.UriComponentsContributor}.__@param methodInvocationInfo either the value returned from a "mock" controller_invocation or the "mock" controller itself after an invocation__@return a UriComponents instance;public static UriComponentsBuilder fromLastCall(Object methodInvocationInfo) {__		Assert.isInstanceOf(MethodInvocationInfo.class, methodInvocationInfo)__		MethodInvocationInfo info = (MethodInvocationInfo) methodInvocationInfo___		Method method = info.getControllerMethod()__		Object[] argumentValues = info.getArgumentValues()___		UriComponentsBuilder builder = ServletUriComponentsBuilder.newInstance().path(getMethodRequestMapping(method))__		UriComponents uriComponents = applyContributors(builder, method, argumentValues)___		String typeMapping = getTypeRequestMapping(method.getDeclaringClass())__		String methodMapping = uriComponents.getPath()__		String path = pathMatcher.combine(typeMapping, methodMapping)___		return ServletUriComponentsBuilder.fromCurrentServletMapping().path(_				path).queryParams(uriComponents.getQueryParams())__	};create,a,link,uri,components,by,invoking,a,method,on,a,mock,controller,similar,to,how,test,frameworks,provide,mock,objects,and,record,method,invocations,p,for,example,given,this,controller,pre,class,code,064,request,mapping,people,id,addresses,class,address,controller,064,request,mapping,country,public,http,entity,void,get,addresses,for,country,064,path,variable,string,country,064,request,mapping,value,method,request,method,post,public,void,add,address,address,address,pre,a,mock,controller,can,be,used,as,follows,pre,inline,style,with,static,import,of,mvc,uri,components,builder,mock,mvc,uri,components,builder,from,last,call,mock,customer,controller,class,show,addresses,us,build,and,expand,1,longer,style,for,preparing,multiple,uris,and,for,void,controller,methods,customer,controller,controller,mvc,uri,components,builder,mock,custom,controller,class,controller,add,address,null,mvc,uri,components,builder,from,last,call,controller,pre,the,above,supports,codce,path,variable,and,code,request,param,method,parameters,any,other,arguments,can,be,provided,as,literal,null,and,will,be,ignored,p,additional,custom,argument,types,can,be,supported,through,an,implementation,of,link,org,springframework,web,method,support,uri,components,contributor,param,method,invocation,info,either,the,value,returned,from,a,mock,controller,invocation,or,the,mock,controller,itself,after,an,invocation,return,a,uri,components,instance;public,static,uri,components,builder,from,last,call,object,method,invocation,info,assert,is,instance,of,method,invocation,info,class,method,invocation,info,method,invocation,info,info,method,invocation,info,method,invocation,info,method,method,info,get,controller,method,object,argument,values,info,get,argument,values,uri,components,builder,builder,servlet,uri,components,builder,new,instance,path,get,method,request,mapping,method,uri,components,uri,components,apply,contributors,builder,method,argument,values,string,type,mapping,get,type,request,mapping,method,get,declaring,class,string,method,mapping,uri,components,get,path,string,path,path,matcher,combine,type,mapping,method,mapping,return,servlet,uri,components,builder,from,current,servlet,mapping,path,path,query,params,uri,components,get,query,params
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromLastCall(Object methodInvocationInfo);1382911216;Create a {@link UriComponents} by invoking a method on a "mock" controller, similar_to how test frameworks provide mock objects and record method invocations._<p>_For example given this controller:__<pre class="code">_&#064_RequestMapping("/people/{id}/addresses")_class AddressController {__&#064_RequestMapping("/{country}")_public HttpEntity<Void> getAddressesForCountry(&#064_PathVariable String country) { … }__&#064_RequestMapping(value="/", method=RequestMethod.POST)_public void addAddress(Address address) { … }__</pre>__A "mock" controller can be used as follows:__<pre>__// Inline style with static import of MvcUriComponentsBuilder.mock__MvcUriComponentsBuilder.fromLastCall(_mock(CustomerController.class).showAddresses("US")).buildAndExpand(1)___// Longer style for preparing multiple URIs and for void controller methods__CustomerController controller = MvcUriComponentsBuilder.mock(CustomController.class)__controller.addAddress(null)___MvcUriComponentsBuilder.fromLastCall(controller)___</pre>__The above  supports {@codce @PathVariable} and {@code @RequestParam} method parameters._Any other arguments can be provided as {@literal null} and will be ignored._<p>_Additional (custom) argument types can be supported through an implementation_of {@link org.springframework.web.method.support.UriComponentsContributor}.__@param methodInvocationInfo either the value returned from a "mock" controller_invocation or the "mock" controller itself after an invocation__@return a UriComponents instance;public static UriComponentsBuilder fromLastCall(Object methodInvocationInfo) {__		Assert.isInstanceOf(MethodInvocationInfo.class, methodInvocationInfo)__		MethodInvocationInfo info = (MethodInvocationInfo) methodInvocationInfo___		Method method = info.getControllerMethod()__		Object[] argumentValues = info.getArgumentValues()___		UriComponentsBuilder builder = ServletUriComponentsBuilder.newInstance().path(getMethodRequestMapping(method))__		UriComponents uriComponents = applyContributors(builder, method, argumentValues)___		String typeMapping = getTypeRequestMapping(method.getDeclaringClass())__		String methodMapping = uriComponents.getPath()__		String path = pathMatcher.combine(typeMapping, methodMapping)___		return ServletUriComponentsBuilder.fromCurrentServletMapping().path(_				path).queryParams(uriComponents.getQueryParams())__	};create,a,link,uri,components,by,invoking,a,method,on,a,mock,controller,similar,to,how,test,frameworks,provide,mock,objects,and,record,method,invocations,p,for,example,given,this,controller,pre,class,code,064,request,mapping,people,id,addresses,class,address,controller,064,request,mapping,country,public,http,entity,void,get,addresses,for,country,064,path,variable,string,country,064,request,mapping,value,method,request,method,post,public,void,add,address,address,address,pre,a,mock,controller,can,be,used,as,follows,pre,inline,style,with,static,import,of,mvc,uri,components,builder,mock,mvc,uri,components,builder,from,last,call,mock,customer,controller,class,show,addresses,us,build,and,expand,1,longer,style,for,preparing,multiple,uris,and,for,void,controller,methods,customer,controller,controller,mvc,uri,components,builder,mock,custom,controller,class,controller,add,address,null,mvc,uri,components,builder,from,last,call,controller,pre,the,above,supports,codce,path,variable,and,code,request,param,method,parameters,any,other,arguments,can,be,provided,as,literal,null,and,will,be,ignored,p,additional,custom,argument,types,can,be,supported,through,an,implementation,of,link,org,springframework,web,method,support,uri,components,contributor,param,method,invocation,info,either,the,value,returned,from,a,mock,controller,invocation,or,the,mock,controller,itself,after,an,invocation,return,a,uri,components,instance;public,static,uri,components,builder,from,last,call,object,method,invocation,info,assert,is,instance,of,method,invocation,info,class,method,invocation,info,method,invocation,info,info,method,invocation,info,method,invocation,info,method,method,info,get,controller,method,object,argument,values,info,get,argument,values,uri,components,builder,builder,servlet,uri,components,builder,new,instance,path,get,method,request,mapping,method,uri,components,uri,components,apply,contributors,builder,method,argument,values,string,type,mapping,get,type,request,mapping,method,get,declaring,class,string,method,mapping,uri,components,get,path,string,path,path,matcher,combine,type,mapping,method,mapping,return,servlet,uri,components,builder,from,current,servlet,mapping,path,path,query,params,uri,components,get,query,params
MvcUriComponentsBuilder -> MethodInvocationInfo -> Method getControllerMethod()_;1530174524;Return the controller method.;Method getControllerMethod()_;return,the,controller,method;method,get,controller,method
MvcUriComponentsBuilder -> MethodInvocationInfo -> Method getControllerMethod()_;1532041662;Return the controller method.;Method getControllerMethod()_;return,the,controller,method;method,get,controller,method
MvcUriComponentsBuilder -> MethodInvocationInfo -> Method getControllerMethod()_;1532041662;Return the controller method.;Method getControllerMethod()_;return,the,controller,method;method,get,controller,method
MvcUriComponentsBuilder -> MethodInvocationInfo -> Method getControllerMethod()_;1548943222;Return the controller method.;Method getControllerMethod()_;return,the,controller,method;method,get,controller,method
MvcUriComponentsBuilder -> public static <T> T controller(Class<T> controllerType);1383061199;Return a "mock" controller instance. When an {@code @RequestMapping} method_on the controller is invoked, the supplied argument values are remembered_and the result can then be used to prepare a URL to the method via_{@link #fromMethodCall(Object)}._<p>_This is a longer version of {@link #on(Class)} for use with void controller_methods as well as for creating multiple links in succession.__<pre>_FooController fooController = controller(FooController.class)___fooController.saveFoo(1, null)__builder = MvcUriComponentsBuilder.fromMethodCall(fooController)___fooController.saveFoo(2, null)__builder = MvcUriComponentsBuilder.fromMethodCall(fooController)__</pre>__@param controllerType the target controller;public static <T> T controller(Class<T> controllerType) {_		Assert.notNull(controllerType, "'controllerType' must not be null")__		return initProxy(controllerType, new ControllerMethodInvocationInterceptor())__	};return,a,mock,controller,instance,when,an,code,request,mapping,method,on,the,controller,is,invoked,the,supplied,argument,values,are,remembered,and,the,result,can,then,be,used,to,prepare,a,url,to,the,method,via,link,from,method,call,object,p,this,is,a,longer,version,of,link,on,class,for,use,with,void,controller,methods,as,well,as,for,creating,multiple,links,in,succession,pre,foo,controller,foo,controller,controller,foo,controller,class,foo,controller,save,foo,1,null,builder,mvc,uri,components,builder,from,method,call,foo,controller,foo,controller,save,foo,2,null,builder,mvc,uri,components,builder,from,method,call,foo,controller,pre,param,controller,type,the,target,controller;public,static,t,t,controller,class,t,controller,type,assert,not,null,controller,type,controller,type,must,not,be,null,return,init,proxy,controller,type,new,controller,method,invocation,interceptor
MvcUriComponentsBuilder -> public static <T> T controller(Class<T> controllerType);1385412762;Return a "mock" controller instance. When an {@code @RequestMapping} method_on the controller is invoked, the supplied argument values are remembered_and the result can then be used to prepare a URL to the method via_{@link #fromMethodCall(Object)}._<p>_This is a longer version of {@link #on(Class)} for use with void controller_methods as well as for creating multiple links in succession.__<pre>_FooController fooController = controller(FooController.class)___fooController.saveFoo(1, null)__builder = MvcUriComponentsBuilder.fromMethodCall(fooController)___fooController.saveFoo(2, null)__builder = MvcUriComponentsBuilder.fromMethodCall(fooController)__</pre>__@param controllerType the target controller;public static <T> T controller(Class<T> controllerType) {_		Assert.notNull(controllerType, "'controllerType' must not be null")__		return initProxy(controllerType, new ControllerMethodInvocationInterceptor())__	};return,a,mock,controller,instance,when,an,code,request,mapping,method,on,the,controller,is,invoked,the,supplied,argument,values,are,remembered,and,the,result,can,then,be,used,to,prepare,a,url,to,the,method,via,link,from,method,call,object,p,this,is,a,longer,version,of,link,on,class,for,use,with,void,controller,methods,as,well,as,for,creating,multiple,links,in,succession,pre,foo,controller,foo,controller,controller,foo,controller,class,foo,controller,save,foo,1,null,builder,mvc,uri,components,builder,from,method,call,foo,controller,foo,controller,save,foo,2,null,builder,mvc,uri,components,builder,from,method,call,foo,controller,pre,param,controller,type,the,target,controller;public,static,t,t,controller,class,t,controller,type,assert,not,null,controller,type,controller,type,must,not,be,null,return,init,proxy,controller,type,new,controller,method,invocation,interceptor
MvcUriComponentsBuilder -> public static <T> T controller(Class<T> controllerType);1385501137;Return a "mock" controller instance. When an {@code @RequestMapping} method_on the controller is invoked, the supplied argument values are remembered_and the result can then be used to prepare a URL to the method via_{@link #fromMethodCall(Object)}._<p>_This is a longer version of {@link #on(Class)} for use with void controller_methods as well as for creating multiple links in succession.__<pre>_FooController fooController = controller(FooController.class)___fooController.saveFoo(1, null)__builder = MvcUriComponentsBuilder.fromMethodCall(fooController)___fooController.saveFoo(2, null)__builder = MvcUriComponentsBuilder.fromMethodCall(fooController)__</pre>__@param controllerType the target controller;public static <T> T controller(Class<T> controllerType) {_		Assert.notNull(controllerType, "'controllerType' must not be null")__		return initProxy(controllerType, new ControllerMethodInvocationInterceptor())__	};return,a,mock,controller,instance,when,an,code,request,mapping,method,on,the,controller,is,invoked,the,supplied,argument,values,are,remembered,and,the,result,can,then,be,used,to,prepare,a,url,to,the,method,via,link,from,method,call,object,p,this,is,a,longer,version,of,link,on,class,for,use,with,void,controller,methods,as,well,as,for,creating,multiple,links,in,succession,pre,foo,controller,foo,controller,controller,foo,controller,class,foo,controller,save,foo,1,null,builder,mvc,uri,components,builder,from,method,call,foo,controller,foo,controller,save,foo,2,null,builder,mvc,uri,components,builder,from,method,call,foo,controller,pre,param,controller,type,the,target,controller;public,static,t,t,controller,class,t,controller,type,assert,not,null,controller,type,controller,type,must,not,be,null,return,init,proxy,controller,type,new,controller,method,invocation,interceptor
MvcUriComponentsBuilder -> public static <T> T controller(Class<T> controllerType);1385507478;Return a "mock" controller instance. When an {@code @RequestMapping} method_on the controller is invoked, the supplied argument values are remembered_and the result can then be used to prepare a URL to the method via_{@link #fromMethodCall(Object)}._<p>This is a longer version of {@link #on(Class)} for use with void controller_methods as well as for creating multiple links in succession._<pre>_FooController fooController = controller(FooController.class)___fooController.saveFoo(1, null)__builder = MvcUriComponentsBuilder.fromMethodCall(fooController)___fooController.saveFoo(2, null)__builder = MvcUriComponentsBuilder.fromMethodCall(fooController)__</pre>_@param controllerType the target controller;public static <T> T controller(Class<T> controllerType) {_		Assert.notNull(controllerType, "'controllerType' must not be null")__		return initProxy(controllerType, new ControllerMethodInvocationInterceptor())__	};return,a,mock,controller,instance,when,an,code,request,mapping,method,on,the,controller,is,invoked,the,supplied,argument,values,are,remembered,and,the,result,can,then,be,used,to,prepare,a,url,to,the,method,via,link,from,method,call,object,p,this,is,a,longer,version,of,link,on,class,for,use,with,void,controller,methods,as,well,as,for,creating,multiple,links,in,succession,pre,foo,controller,foo,controller,controller,foo,controller,class,foo,controller,save,foo,1,null,builder,mvc,uri,components,builder,from,method,call,foo,controller,foo,controller,save,foo,2,null,builder,mvc,uri,components,builder,from,method,call,foo,controller,pre,param,controller,type,the,target,controller;public,static,t,t,controller,class,t,controller,type,assert,not,null,controller,type,controller,type,must,not,be,null,return,init,proxy,controller,type,new,controller,method,invocation,interceptor
MvcUriComponentsBuilder -> public static <T> T controller(Class<T> controllerType);1387386512;Return a "mock" controller instance. When an {@code @RequestMapping} method_on the controller is invoked, the supplied argument values are remembered_and the result can then be used to prepare a URL to the method via_{@link #fromMethodCall(Object)}._<p>This is a longer version of {@link #on(Class)} for use with void controller_methods as well as for creating multiple links in succession._<pre class="code">_FooController fooController = controller(FooController.class)___fooController.saveFoo(1, null)__builder = MvcUriComponentsBuilder.fromMethodCall(fooController)___fooController.saveFoo(2, null)__builder = MvcUriComponentsBuilder.fromMethodCall(fooController)__</pre>_@param controllerType the target controller;public static <T> T controller(Class<T> controllerType) {_		Assert.notNull(controllerType, "'controllerType' must not be null")__		return initProxy(controllerType, new ControllerMethodInvocationInterceptor())__	};return,a,mock,controller,instance,when,an,code,request,mapping,method,on,the,controller,is,invoked,the,supplied,argument,values,are,remembered,and,the,result,can,then,be,used,to,prepare,a,url,to,the,method,via,link,from,method,call,object,p,this,is,a,longer,version,of,link,on,class,for,use,with,void,controller,methods,as,well,as,for,creating,multiple,links,in,succession,pre,class,code,foo,controller,foo,controller,controller,foo,controller,class,foo,controller,save,foo,1,null,builder,mvc,uri,components,builder,from,method,call,foo,controller,foo,controller,save,foo,2,null,builder,mvc,uri,components,builder,from,method,call,foo,controller,pre,param,controller,type,the,target,controller;public,static,t,t,controller,class,t,controller,type,assert,not,null,controller,type,controller,type,must,not,be,null,return,init,proxy,controller,type,new,controller,method,invocation,interceptor
MvcUriComponentsBuilder -> public static <T> T controller(Class<T> controllerType);1391714711;Return a "mock" controller instance. When an {@code @RequestMapping} method_on the controller is invoked, the supplied argument values are remembered_and the result can then be used to prepare a URL to the method via_{@link #fromMethodCall(Object)}._<p>This is a longer version of {@link #on(Class)} for use with void controller_methods as well as for creating multiple links in succession._<pre class="code">_FooController fooController = controller(FooController.class)___fooController.saveFoo(1, null)__builder = MvcUriComponentsBuilder.fromMethodCall(fooController)___fooController.saveFoo(2, null)__builder = MvcUriComponentsBuilder.fromMethodCall(fooController)__</pre>_@param controllerType the target controller;public static <T> T controller(Class<T> controllerType) {_		Assert.notNull(controllerType, "'controllerType' must not be null")__		return initProxy(controllerType, new ControllerMethodInvocationInterceptor())__	};return,a,mock,controller,instance,when,an,code,request,mapping,method,on,the,controller,is,invoked,the,supplied,argument,values,are,remembered,and,the,result,can,then,be,used,to,prepare,a,url,to,the,method,via,link,from,method,call,object,p,this,is,a,longer,version,of,link,on,class,for,use,with,void,controller,methods,as,well,as,for,creating,multiple,links,in,succession,pre,class,code,foo,controller,foo,controller,controller,foo,controller,class,foo,controller,save,foo,1,null,builder,mvc,uri,components,builder,from,method,call,foo,controller,foo,controller,save,foo,2,null,builder,mvc,uri,components,builder,from,method,call,foo,controller,pre,param,controller,type,the,target,controller;public,static,t,t,controller,class,t,controller,type,assert,not,null,controller,type,controller,type,must,not,be,null,return,init,proxy,controller,type,new,controller,method,invocation,interceptor
MvcUriComponentsBuilder -> public static <T> T controller(Class<T> controllerType);1391723719;Return a "mock" controller instance. When an {@code @RequestMapping} method_on the controller is invoked, the supplied argument values are remembered_and the result can then be used to create {@code UriComponentsBuilder} via_{@link #fromMethodCall(Object)}._<p>_This is a longer version of {@link #on(Class)}. It is needed with controller_methods returning void as well for repeated invocations._<pre class="code">_FooController fooController = controller(FooController.class)___fooController.saveFoo(1, null)__builder = MvcUriComponentsBuilder.fromMethodCall(fooController)___fooController.saveFoo(2, null)__builder = MvcUriComponentsBuilder.fromMethodCall(fooController)__</pre>_@param controllerType the target controller;public static <T> T controller(Class<T> controllerType) {_		Assert.notNull(controllerType, "'controllerType' must not be null")__		return initProxy(controllerType, new ControllerMethodInvocationInterceptor())__	};return,a,mock,controller,instance,when,an,code,request,mapping,method,on,the,controller,is,invoked,the,supplied,argument,values,are,remembered,and,the,result,can,then,be,used,to,create,code,uri,components,builder,via,link,from,method,call,object,p,this,is,a,longer,version,of,link,on,class,it,is,needed,with,controller,methods,returning,void,as,well,for,repeated,invocations,pre,class,code,foo,controller,foo,controller,controller,foo,controller,class,foo,controller,save,foo,1,null,builder,mvc,uri,components,builder,from,method,call,foo,controller,foo,controller,save,foo,2,null,builder,mvc,uri,components,builder,from,method,call,foo,controller,pre,param,controller,type,the,target,controller;public,static,t,t,controller,class,t,controller,type,assert,not,null,controller,type,controller,type,must,not,be,null,return,init,proxy,controller,type,new,controller,method,invocation,interceptor
MvcUriComponentsBuilder -> public static <T> T controller(Class<T> controllerType);1391723719;Return a "mock" controller instance. When an {@code @RequestMapping} method_on the controller is invoked, the supplied argument values are remembered_and the result can then be used to create {@code UriComponentsBuilder} via_{@link #fromMethodCall(Object)}._<p>_This is a longer version of {@link #on(Class)}. It is needed with controller_methods returning void as well for repeated invocations._<pre class="code">_FooController fooController = controller(FooController.class)___fooController.saveFoo(1, null)__builder = MvcUriComponentsBuilder.fromMethodCall(fooController)___fooController.saveFoo(2, null)__builder = MvcUriComponentsBuilder.fromMethodCall(fooController)__</pre>_@param controllerType the target controller;public static <T> T controller(Class<T> controllerType) {_		Assert.notNull(controllerType, "'controllerType' must not be null")__		return initProxy(controllerType, new ControllerMethodInvocationInterceptor())__	};return,a,mock,controller,instance,when,an,code,request,mapping,method,on,the,controller,is,invoked,the,supplied,argument,values,are,remembered,and,the,result,can,then,be,used,to,create,code,uri,components,builder,via,link,from,method,call,object,p,this,is,a,longer,version,of,link,on,class,it,is,needed,with,controller,methods,returning,void,as,well,for,repeated,invocations,pre,class,code,foo,controller,foo,controller,controller,foo,controller,class,foo,controller,save,foo,1,null,builder,mvc,uri,components,builder,from,method,call,foo,controller,foo,controller,save,foo,2,null,builder,mvc,uri,components,builder,from,method,call,foo,controller,pre,param,controller,type,the,target,controller;public,static,t,t,controller,class,t,controller,type,assert,not,null,controller,type,controller,type,must,not,be,null,return,init,proxy,controller,type,new,controller,method,invocation,interceptor
MvcUriComponentsBuilder -> public static <T> T controller(Class<T> controllerType);1399404473;Return a "mock" controller instance. When an {@code @RequestMapping} method_on the controller is invoked, the supplied argument values are remembered_and the result can then be used to create {@code UriComponentsBuilder} via_{@link #fromMethodCall(Object)}._<p>_This is a longer version of {@link #on(Class)}. It is needed with controller_methods returning void as well for repeated invocations._<pre class="code">_FooController fooController = controller(FooController.class)___fooController.saveFoo(1, null)__builder = MvcUriComponentsBuilder.fromMethodCall(fooController)___fooController.saveFoo(2, null)__builder = MvcUriComponentsBuilder.fromMethodCall(fooController)__</pre>_@param controllerType the target controller;public static <T> T controller(Class<T> controllerType) {_		Assert.notNull(controllerType, "'controllerType' must not be null")__		return initProxy(controllerType, new ControllerMethodInvocationInterceptor())__	};return,a,mock,controller,instance,when,an,code,request,mapping,method,on,the,controller,is,invoked,the,supplied,argument,values,are,remembered,and,the,result,can,then,be,used,to,create,code,uri,components,builder,via,link,from,method,call,object,p,this,is,a,longer,version,of,link,on,class,it,is,needed,with,controller,methods,returning,void,as,well,for,repeated,invocations,pre,class,code,foo,controller,foo,controller,controller,foo,controller,class,foo,controller,save,foo,1,null,builder,mvc,uri,components,builder,from,method,call,foo,controller,foo,controller,save,foo,2,null,builder,mvc,uri,components,builder,from,method,call,foo,controller,pre,param,controller,type,the,target,controller;public,static,t,t,controller,class,t,controller,type,assert,not,null,controller,type,controller,type,must,not,be,null,return,init,proxy,controller,type,new,controller,method,invocation,interceptor
MvcUriComponentsBuilder -> public static <T> T controller(Class<T> controllerType);1400538909;Return a "mock" controller instance. When an {@code @RequestMapping} method_on the controller is invoked, the supplied argument values are remembered_and the result can then be used to create {@code UriComponentsBuilder} via_{@link #fromMethodCall(Object)}._<p>_This is a longer version of {@link #on(Class)}. It is needed with controller_methods returning void as well for repeated invocations._<pre class="code">_FooController fooController = controller(FooController.class)___fooController.saveFoo(1, null)__builder = MvcUriComponentsBuilder.fromMethodCall(fooController)___fooController.saveFoo(2, null)__builder = MvcUriComponentsBuilder.fromMethodCall(fooController)__</pre>_@param controllerType the target controller;public static <T> T controller(Class<T> controllerType) {_		Assert.notNull(controllerType, "'controllerType' must not be null")__		return initProxy(controllerType, new ControllerMethodInvocationInterceptor())__	};return,a,mock,controller,instance,when,an,code,request,mapping,method,on,the,controller,is,invoked,the,supplied,argument,values,are,remembered,and,the,result,can,then,be,used,to,create,code,uri,components,builder,via,link,from,method,call,object,p,this,is,a,longer,version,of,link,on,class,it,is,needed,with,controller,methods,returning,void,as,well,for,repeated,invocations,pre,class,code,foo,controller,foo,controller,controller,foo,controller,class,foo,controller,save,foo,1,null,builder,mvc,uri,components,builder,from,method,call,foo,controller,foo,controller,save,foo,2,null,builder,mvc,uri,components,builder,from,method,call,foo,controller,pre,param,controller,type,the,target,controller;public,static,t,t,controller,class,t,controller,type,assert,not,null,controller,type,controller,type,must,not,be,null,return,init,proxy,controller,type,new,controller,method,invocation,interceptor
MvcUriComponentsBuilder -> public static <T> T controller(Class<T> controllerType);1400542981;Return a "mock" controller instance. When an {@code @RequestMapping} method_on the controller is invoked, the supplied argument values are remembered_and the result can then be used to create {@code UriComponentsBuilder} via_{@link #fromMethodCall(Object)}._<p>_This is a longer version of {@link #on(Class)}. It is needed with controller_methods returning void as well for repeated invocations._<pre class="code">_FooController fooController = controller(FooController.class)___fooController.saveFoo(1, null)__builder = MvcUriComponentsBuilder.fromMethodCall(fooController)___fooController.saveFoo(2, null)__builder = MvcUriComponentsBuilder.fromMethodCall(fooController)__</pre>_@param controllerType the target controller;public static <T> T controller(Class<T> controllerType) {_		Assert.notNull(controllerType, "'controllerType' must not be null")__		return initProxy(controllerType, new ControllerMethodInvocationInterceptor())__	};return,a,mock,controller,instance,when,an,code,request,mapping,method,on,the,controller,is,invoked,the,supplied,argument,values,are,remembered,and,the,result,can,then,be,used,to,create,code,uri,components,builder,via,link,from,method,call,object,p,this,is,a,longer,version,of,link,on,class,it,is,needed,with,controller,methods,returning,void,as,well,for,repeated,invocations,pre,class,code,foo,controller,foo,controller,controller,foo,controller,class,foo,controller,save,foo,1,null,builder,mvc,uri,components,builder,from,method,call,foo,controller,foo,controller,save,foo,2,null,builder,mvc,uri,components,builder,from,method,call,foo,controller,pre,param,controller,type,the,target,controller;public,static,t,t,controller,class,t,controller,type,assert,not,null,controller,type,controller,type,must,not,be,null,return,init,proxy,controller,type,new,controller,method,invocation,interceptor
MvcUriComponentsBuilder -> public static <T> T controller(Class<T> controllerType);1402438271;Return a "mock" controller instance. When an {@code @RequestMapping} method_on the controller is invoked, the supplied argument values are remembered_and the result can then be used to create {@code UriComponentsBuilder} via_{@link #fromMethodCall(Object)}._<p>_This is a longer version of {@link #on(Class)}. It is needed with controller_methods returning void as well for repeated invocations._<pre class="code">_FooController fooController = controller(FooController.class)___fooController.saveFoo(1, null)__builder = MvcUriComponentsBuilder.fromMethodCall(fooController)___fooController.saveFoo(2, null)__builder = MvcUriComponentsBuilder.fromMethodCall(fooController)__</pre>_@param controllerType the target controller;public static <T> T controller(Class<T> controllerType) {_		Assert.notNull(controllerType, "'controllerType' must not be null")__		return initProxy(controllerType, new ControllerMethodInvocationInterceptor())__	};return,a,mock,controller,instance,when,an,code,request,mapping,method,on,the,controller,is,invoked,the,supplied,argument,values,are,remembered,and,the,result,can,then,be,used,to,create,code,uri,components,builder,via,link,from,method,call,object,p,this,is,a,longer,version,of,link,on,class,it,is,needed,with,controller,methods,returning,void,as,well,for,repeated,invocations,pre,class,code,foo,controller,foo,controller,controller,foo,controller,class,foo,controller,save,foo,1,null,builder,mvc,uri,components,builder,from,method,call,foo,controller,foo,controller,save,foo,2,null,builder,mvc,uri,components,builder,from,method,call,foo,controller,pre,param,controller,type,the,target,controller;public,static,t,t,controller,class,t,controller,type,assert,not,null,controller,type,controller,type,must,not,be,null,return,init,proxy,controller,type,new,controller,method,invocation,interceptor
MvcUriComponentsBuilder -> public static <T> T controller(Class<T> controllerType);1413848647;Return a "mock" controller instance. When an {@code @RequestMapping} method_on the controller is invoked, the supplied argument values are remembered_and the result can then be used to create {@code UriComponentsBuilder} via_{@link #fromMethodCall(Object)}._<p>_This is a longer version of {@link #on(Class)}. It is needed with controller_methods returning void as well for repeated invocations._<pre class="code">_FooController fooController = controller(FooController.class)___fooController.saveFoo(1, null)__builder = MvcUriComponentsBuilder.fromMethodCall(fooController)___fooController.saveFoo(2, null)__builder = MvcUriComponentsBuilder.fromMethodCall(fooController)__</pre>_@param controllerType the target controller;public static <T> T controller(Class<T> controllerType) {_		Assert.notNull(controllerType, "'controllerType' must not be null")__		return initProxy(controllerType, new ControllerMethodInvocationInterceptor())__	};return,a,mock,controller,instance,when,an,code,request,mapping,method,on,the,controller,is,invoked,the,supplied,argument,values,are,remembered,and,the,result,can,then,be,used,to,create,code,uri,components,builder,via,link,from,method,call,object,p,this,is,a,longer,version,of,link,on,class,it,is,needed,with,controller,methods,returning,void,as,well,for,repeated,invocations,pre,class,code,foo,controller,foo,controller,controller,foo,controller,class,foo,controller,save,foo,1,null,builder,mvc,uri,components,builder,from,method,call,foo,controller,foo,controller,save,foo,2,null,builder,mvc,uri,components,builder,from,method,call,foo,controller,pre,param,controller,type,the,target,controller;public,static,t,t,controller,class,t,controller,type,assert,not,null,controller,type,controller,type,must,not,be,null,return,init,proxy,controller,type,new,controller,method,invocation,interceptor
MvcUriComponentsBuilder -> public static <T> T controller(Class<T> controllerType);1417799775;Return a "mock" controller instance. When an {@code @RequestMapping} method_on the controller is invoked, the supplied argument values are remembered_and the result can then be used to create {@code UriComponentsBuilder} via_{@link #fromMethodCall(Object)}._<p>_This is a longer version of {@link #on(Class)}. It is needed with controller_methods returning void as well for repeated invocations._<pre class="code">_FooController fooController = controller(FooController.class)___fooController.saveFoo(1, null)__builder = MvcUriComponentsBuilder.fromMethodCall(fooController)___fooController.saveFoo(2, null)__builder = MvcUriComponentsBuilder.fromMethodCall(fooController)__</pre>_@param controllerType the target controller;public static <T> T controller(Class<T> controllerType) {_		Assert.notNull(controllerType, "'controllerType' must not be null")__		return initProxy(controllerType, new ControllerMethodInvocationInterceptor())__	};return,a,mock,controller,instance,when,an,code,request,mapping,method,on,the,controller,is,invoked,the,supplied,argument,values,are,remembered,and,the,result,can,then,be,used,to,create,code,uri,components,builder,via,link,from,method,call,object,p,this,is,a,longer,version,of,link,on,class,it,is,needed,with,controller,methods,returning,void,as,well,for,repeated,invocations,pre,class,code,foo,controller,foo,controller,controller,foo,controller,class,foo,controller,save,foo,1,null,builder,mvc,uri,components,builder,from,method,call,foo,controller,foo,controller,save,foo,2,null,builder,mvc,uri,components,builder,from,method,call,foo,controller,pre,param,controller,type,the,target,controller;public,static,t,t,controller,class,t,controller,type,assert,not,null,controller,type,controller,type,must,not,be,null,return,init,proxy,controller,type,new,controller,method,invocation,interceptor
MvcUriComponentsBuilder -> public static <T> T controller(Class<T> controllerType);1424972092;Return a "mock" controller instance. When an {@code @RequestMapping} method_on the controller is invoked, the supplied argument values are remembered_and the result can then be used to create {@code UriComponentsBuilder} via_{@link #fromMethodCall(Object)}._<p>_This is a longer version of {@link #on(Class)}. It is needed with controller_methods returning void as well for repeated invocations._<pre class="code">_FooController fooController = controller(FooController.class)___fooController.saveFoo(1, null)__builder = MvcUriComponentsBuilder.fromMethodCall(fooController)___fooController.saveFoo(2, null)__builder = MvcUriComponentsBuilder.fromMethodCall(fooController)__</pre>_@param controllerType the target controller;public static <T> T controller(Class<T> controllerType) {_		Assert.notNull(controllerType, "'controllerType' must not be null")__		return initProxy(controllerType, new ControllerMethodInvocationInterceptor())__	};return,a,mock,controller,instance,when,an,code,request,mapping,method,on,the,controller,is,invoked,the,supplied,argument,values,are,remembered,and,the,result,can,then,be,used,to,create,code,uri,components,builder,via,link,from,method,call,object,p,this,is,a,longer,version,of,link,on,class,it,is,needed,with,controller,methods,returning,void,as,well,for,repeated,invocations,pre,class,code,foo,controller,foo,controller,controller,foo,controller,class,foo,controller,save,foo,1,null,builder,mvc,uri,components,builder,from,method,call,foo,controller,foo,controller,save,foo,2,null,builder,mvc,uri,components,builder,from,method,call,foo,controller,pre,param,controller,type,the,target,controller;public,static,t,t,controller,class,t,controller,type,assert,not,null,controller,type,controller,type,must,not,be,null,return,init,proxy,controller,type,new,controller,method,invocation,interceptor
MvcUriComponentsBuilder -> public static <T> T controller(Class<T> controllerType);1426553101;Return a "mock" controller instance. When an {@code @RequestMapping} method_on the controller is invoked, the supplied argument values are remembered_and the result can then be used to create {@code UriComponentsBuilder} via_{@link #fromMethodCall(Object)}._<p>_This is a longer version of {@link #on(Class)}. It is needed with controller_methods returning void as well for repeated invocations._<pre class="code">_FooController fooController = controller(FooController.class)___fooController.saveFoo(1, null)__builder = MvcUriComponentsBuilder.fromMethodCall(fooController)___fooController.saveFoo(2, null)__builder = MvcUriComponentsBuilder.fromMethodCall(fooController)__</pre>_@param controllerType the target controller;public static <T> T controller(Class<T> controllerType) {_		Assert.notNull(controllerType, "'controllerType' must not be null")__		return initProxy(controllerType, new ControllerMethodInvocationInterceptor())__	};return,a,mock,controller,instance,when,an,code,request,mapping,method,on,the,controller,is,invoked,the,supplied,argument,values,are,remembered,and,the,result,can,then,be,used,to,create,code,uri,components,builder,via,link,from,method,call,object,p,this,is,a,longer,version,of,link,on,class,it,is,needed,with,controller,methods,returning,void,as,well,for,repeated,invocations,pre,class,code,foo,controller,foo,controller,controller,foo,controller,class,foo,controller,save,foo,1,null,builder,mvc,uri,components,builder,from,method,call,foo,controller,foo,controller,save,foo,2,null,builder,mvc,uri,components,builder,from,method,call,foo,controller,pre,param,controller,type,the,target,controller;public,static,t,t,controller,class,t,controller,type,assert,not,null,controller,type,controller,type,must,not,be,null,return,init,proxy,controller,type,new,controller,method,invocation,interceptor
MvcUriComponentsBuilder -> public static <T> T controller(Class<T> controllerType);1429801417;Return a "mock" controller instance. When an {@code @RequestMapping} method_on the controller is invoked, the supplied argument values are remembered_and the result can then be used to create {@code UriComponentsBuilder} via_{@link #fromMethodCall(Object)}._<p>_This is a longer version of {@link #on(Class)}. It is needed with controller_methods returning void as well for repeated invocations._<pre class="code">_FooController fooController = controller(FooController.class)___fooController.saveFoo(1, null)__builder = MvcUriComponentsBuilder.fromMethodCall(fooController)___fooController.saveFoo(2, null)__builder = MvcUriComponentsBuilder.fromMethodCall(fooController)__</pre>_@param controllerType the target controller;public static <T> T controller(Class<T> controllerType) {_		Assert.notNull(controllerType, "'controllerType' must not be null")__		return initProxy(controllerType, new ControllerMethodInvocationInterceptor())__	};return,a,mock,controller,instance,when,an,code,request,mapping,method,on,the,controller,is,invoked,the,supplied,argument,values,are,remembered,and,the,result,can,then,be,used,to,create,code,uri,components,builder,via,link,from,method,call,object,p,this,is,a,longer,version,of,link,on,class,it,is,needed,with,controller,methods,returning,void,as,well,for,repeated,invocations,pre,class,code,foo,controller,foo,controller,controller,foo,controller,class,foo,controller,save,foo,1,null,builder,mvc,uri,components,builder,from,method,call,foo,controller,foo,controller,save,foo,2,null,builder,mvc,uri,components,builder,from,method,call,foo,controller,pre,param,controller,type,the,target,controller;public,static,t,t,controller,class,t,controller,type,assert,not,null,controller,type,controller,type,must,not,be,null,return,init,proxy,controller,type,new,controller,method,invocation,interceptor
MvcUriComponentsBuilder -> public static <T> T controller(Class<T> controllerType);1429801944;Return a "mock" controller instance. When an {@code @RequestMapping} method_on the controller is invoked, the supplied argument values are remembered_and the result can then be used to create {@code UriComponentsBuilder} via_{@link #fromMethodCall(Object)}._<p>_This is a longer version of {@link #on(Class)}. It is needed with controller_methods returning void as well for repeated invocations._<pre class="code">_FooController fooController = controller(FooController.class)___fooController.saveFoo(1, null)__builder = MvcUriComponentsBuilder.fromMethodCall(fooController)___fooController.saveFoo(2, null)__builder = MvcUriComponentsBuilder.fromMethodCall(fooController)__</pre>_@param controllerType the target controller;public static <T> T controller(Class<T> controllerType) {_		Assert.notNull(controllerType, "'controllerType' must not be null")__		return initProxy(controllerType, new ControllerMethodInvocationInterceptor())__	};return,a,mock,controller,instance,when,an,code,request,mapping,method,on,the,controller,is,invoked,the,supplied,argument,values,are,remembered,and,the,result,can,then,be,used,to,create,code,uri,components,builder,via,link,from,method,call,object,p,this,is,a,longer,version,of,link,on,class,it,is,needed,with,controller,methods,returning,void,as,well,for,repeated,invocations,pre,class,code,foo,controller,foo,controller,controller,foo,controller,class,foo,controller,save,foo,1,null,builder,mvc,uri,components,builder,from,method,call,foo,controller,foo,controller,save,foo,2,null,builder,mvc,uri,components,builder,from,method,call,foo,controller,pre,param,controller,type,the,target,controller;public,static,t,t,controller,class,t,controller,type,assert,not,null,controller,type,controller,type,must,not,be,null,return,init,proxy,controller,type,new,controller,method,invocation,interceptor
MvcUriComponentsBuilder -> public static <T> T controller(Class<T> controllerType);1429802180;Return a "mock" controller instance. When an {@code @RequestMapping} method_on the controller is invoked, the supplied argument values are remembered_and the result can then be used to create {@code UriComponentsBuilder} via_{@link #fromMethodCall(Object)}._<p>_This is a longer version of {@link #on(Class)}. It is needed with controller_methods returning void as well for repeated invocations._<pre class="code">_FooController fooController = controller(FooController.class)___fooController.saveFoo(1, null)__builder = MvcUriComponentsBuilder.fromMethodCall(fooController)___fooController.saveFoo(2, null)__builder = MvcUriComponentsBuilder.fromMethodCall(fooController)__</pre>_@param controllerType the target controller;public static <T> T controller(Class<T> controllerType) {_		Assert.notNull(controllerType, "'controllerType' must not be null")__		return initProxy(controllerType, new ControllerMethodInvocationInterceptor())__	};return,a,mock,controller,instance,when,an,code,request,mapping,method,on,the,controller,is,invoked,the,supplied,argument,values,are,remembered,and,the,result,can,then,be,used,to,create,code,uri,components,builder,via,link,from,method,call,object,p,this,is,a,longer,version,of,link,on,class,it,is,needed,with,controller,methods,returning,void,as,well,for,repeated,invocations,pre,class,code,foo,controller,foo,controller,controller,foo,controller,class,foo,controller,save,foo,1,null,builder,mvc,uri,components,builder,from,method,call,foo,controller,foo,controller,save,foo,2,null,builder,mvc,uri,components,builder,from,method,call,foo,controller,pre,param,controller,type,the,target,controller;public,static,t,t,controller,class,t,controller,type,assert,not,null,controller,type,controller,type,must,not,be,null,return,init,proxy,controller,type,new,controller,method,invocation,interceptor
MvcUriComponentsBuilder -> public static <T> T controller(Class<T> controllerType);1429886024;Return a "mock" controller instance. When an {@code @RequestMapping} method_on the controller is invoked, the supplied argument values are remembered_and the result can then be used to create {@code UriComponentsBuilder} via_{@link #fromMethodCall(Object)}._<p>_This is a longer version of {@link #on(Class)}. It is needed with controller_methods returning void as well for repeated invocations._<pre class="code">_FooController fooController = controller(FooController.class)___fooController.saveFoo(1, null)__builder = MvcUriComponentsBuilder.fromMethodCall(fooController)___fooController.saveFoo(2, null)__builder = MvcUriComponentsBuilder.fromMethodCall(fooController)__</pre>_@param controllerType the target controller;public static <T> T controller(Class<T> controllerType) {_		Assert.notNull(controllerType, "'controllerType' must not be null")__		return initProxy(controllerType, new ControllerMethodInvocationInterceptor())__	};return,a,mock,controller,instance,when,an,code,request,mapping,method,on,the,controller,is,invoked,the,supplied,argument,values,are,remembered,and,the,result,can,then,be,used,to,create,code,uri,components,builder,via,link,from,method,call,object,p,this,is,a,longer,version,of,link,on,class,it,is,needed,with,controller,methods,returning,void,as,well,for,repeated,invocations,pre,class,code,foo,controller,foo,controller,controller,foo,controller,class,foo,controller,save,foo,1,null,builder,mvc,uri,components,builder,from,method,call,foo,controller,foo,controller,save,foo,2,null,builder,mvc,uri,components,builder,from,method,call,foo,controller,pre,param,controller,type,the,target,controller;public,static,t,t,controller,class,t,controller,type,assert,not,null,controller,type,controller,type,must,not,be,null,return,init,proxy,controller,type,new,controller,method,invocation,interceptor
MvcUriComponentsBuilder -> public static <T> T controller(Class<T> controllerType);1429888980;Return a "mock" controller instance. When an {@code @RequestMapping} method_on the controller is invoked, the supplied argument values are remembered_and the result can then be used to create {@code UriComponentsBuilder} via_{@link #fromMethodCall(Object)}._<p>_This is a longer version of {@link #on(Class)}. It is needed with controller_methods returning void as well for repeated invocations._<pre class="code">_FooController fooController = controller(FooController.class)___fooController.saveFoo(1, null)__builder = MvcUriComponentsBuilder.fromMethodCall(fooController)___fooController.saveFoo(2, null)__builder = MvcUriComponentsBuilder.fromMethodCall(fooController)__</pre>_@param controllerType the target controller;public static <T> T controller(Class<T> controllerType) {_		Assert.notNull(controllerType, "'controllerType' must not be null")__		return initProxy(controllerType, new ControllerMethodInvocationInterceptor())__	};return,a,mock,controller,instance,when,an,code,request,mapping,method,on,the,controller,is,invoked,the,supplied,argument,values,are,remembered,and,the,result,can,then,be,used,to,create,code,uri,components,builder,via,link,from,method,call,object,p,this,is,a,longer,version,of,link,on,class,it,is,needed,with,controller,methods,returning,void,as,well,for,repeated,invocations,pre,class,code,foo,controller,foo,controller,controller,foo,controller,class,foo,controller,save,foo,1,null,builder,mvc,uri,components,builder,from,method,call,foo,controller,foo,controller,save,foo,2,null,builder,mvc,uri,components,builder,from,method,call,foo,controller,pre,param,controller,type,the,target,controller;public,static,t,t,controller,class,t,controller,type,assert,not,null,controller,type,controller,type,must,not,be,null,return,init,proxy,controller,type,new,controller,method,invocation,interceptor
MvcUriComponentsBuilder -> public static <T> T controller(Class<T> controllerType);1430739806;Return a "mock" controller instance. When an {@code @RequestMapping} method_on the controller is invoked, the supplied argument values are remembered_and the result can then be used to create {@code UriComponentsBuilder} via_{@link #fromMethodCall(Object)}._<p>_This is a longer version of {@link #on(Class)}. It is needed with controller_methods returning void as well for repeated invocations._<pre class="code">_FooController fooController = controller(FooController.class)___fooController.saveFoo(1, null)__builder = MvcUriComponentsBuilder.fromMethodCall(fooController)___fooController.saveFoo(2, null)__builder = MvcUriComponentsBuilder.fromMethodCall(fooController)__</pre>_@param controllerType the target controller;public static <T> T controller(Class<T> controllerType) {_		Assert.notNull(controllerType, "'controllerType' must not be null")__		return initProxy(controllerType, new ControllerMethodInvocationInterceptor())__	};return,a,mock,controller,instance,when,an,code,request,mapping,method,on,the,controller,is,invoked,the,supplied,argument,values,are,remembered,and,the,result,can,then,be,used,to,create,code,uri,components,builder,via,link,from,method,call,object,p,this,is,a,longer,version,of,link,on,class,it,is,needed,with,controller,methods,returning,void,as,well,for,repeated,invocations,pre,class,code,foo,controller,foo,controller,controller,foo,controller,class,foo,controller,save,foo,1,null,builder,mvc,uri,components,builder,from,method,call,foo,controller,foo,controller,save,foo,2,null,builder,mvc,uri,components,builder,from,method,call,foo,controller,pre,param,controller,type,the,target,controller;public,static,t,t,controller,class,t,controller,type,assert,not,null,controller,type,controller,type,must,not,be,null,return,init,proxy,controller,type,new,controller,method,invocation,interceptor
MvcUriComponentsBuilder -> public static <T> T controller(Class<T> controllerType);1430747547;Return a "mock" controller instance. When an {@code @RequestMapping} method_on the controller is invoked, the supplied argument values are remembered_and the result can then be used to create {@code UriComponentsBuilder} via_{@link #fromMethodCall(Object)}._<p>_This is a longer version of {@link #on(Class)}. It is needed with controller_methods returning void as well for repeated invocations._<pre class="code">_FooController fooController = controller(FooController.class)___fooController.saveFoo(1, null)__builder = MvcUriComponentsBuilder.fromMethodCall(fooController)___fooController.saveFoo(2, null)__builder = MvcUriComponentsBuilder.fromMethodCall(fooController)__</pre>_@param controllerType the target controller;public static <T> T controller(Class<T> controllerType) {_		Assert.notNull(controllerType, "'controllerType' must not be null")__		return initProxy(controllerType, new ControllerMethodInvocationInterceptor())__	};return,a,mock,controller,instance,when,an,code,request,mapping,method,on,the,controller,is,invoked,the,supplied,argument,values,are,remembered,and,the,result,can,then,be,used,to,create,code,uri,components,builder,via,link,from,method,call,object,p,this,is,a,longer,version,of,link,on,class,it,is,needed,with,controller,methods,returning,void,as,well,for,repeated,invocations,pre,class,code,foo,controller,foo,controller,controller,foo,controller,class,foo,controller,save,foo,1,null,builder,mvc,uri,components,builder,from,method,call,foo,controller,foo,controller,save,foo,2,null,builder,mvc,uri,components,builder,from,method,call,foo,controller,pre,param,controller,type,the,target,controller;public,static,t,t,controller,class,t,controller,type,assert,not,null,controller,type,controller,type,must,not,be,null,return,init,proxy,controller,type,new,controller,method,invocation,interceptor
MvcUriComponentsBuilder -> public static <T> T controller(Class<T> controllerType);1430749606;Return a "mock" controller instance. When an {@code @RequestMapping} method_on the controller is invoked, the supplied argument values are remembered_and the result can then be used to create {@code UriComponentsBuilder} via_{@link #fromMethodCall(Object)}._<p>_This is a longer version of {@link #on(Class)}. It is needed with controller_methods returning void as well for repeated invocations._<pre class="code">_FooController fooController = controller(FooController.class)___fooController.saveFoo(1, null)__builder = MvcUriComponentsBuilder.fromMethodCall(fooController)___fooController.saveFoo(2, null)__builder = MvcUriComponentsBuilder.fromMethodCall(fooController)__</pre>_@param controllerType the target controller;public static <T> T controller(Class<T> controllerType) {_		Assert.notNull(controllerType, "'controllerType' must not be null")__		return initProxy(controllerType, new ControllerMethodInvocationInterceptor())__	};return,a,mock,controller,instance,when,an,code,request,mapping,method,on,the,controller,is,invoked,the,supplied,argument,values,are,remembered,and,the,result,can,then,be,used,to,create,code,uri,components,builder,via,link,from,method,call,object,p,this,is,a,longer,version,of,link,on,class,it,is,needed,with,controller,methods,returning,void,as,well,for,repeated,invocations,pre,class,code,foo,controller,foo,controller,controller,foo,controller,class,foo,controller,save,foo,1,null,builder,mvc,uri,components,builder,from,method,call,foo,controller,foo,controller,save,foo,2,null,builder,mvc,uri,components,builder,from,method,call,foo,controller,pre,param,controller,type,the,target,controller;public,static,t,t,controller,class,t,controller,type,assert,not,null,controller,type,controller,type,must,not,be,null,return,init,proxy,controller,type,new,controller,method,invocation,interceptor
MvcUriComponentsBuilder -> public static <T> T controller(Class<T> controllerType);1431975386;Return a "mock" controller instance. When an {@code @RequestMapping} method_on the controller is invoked, the supplied argument values are remembered_and the result can then be used to create {@code UriComponentsBuilder} via_{@link #fromMethodCall(Object)}._<p>_This is a longer version of {@link #on(Class)}. It is needed with controller_methods returning void as well for repeated invocations._<pre class="code">_FooController fooController = controller(FooController.class)___fooController.saveFoo(1, null)__builder = MvcUriComponentsBuilder.fromMethodCall(fooController)___fooController.saveFoo(2, null)__builder = MvcUriComponentsBuilder.fromMethodCall(fooController)__</pre>_@param controllerType the target controller;public static <T> T controller(Class<T> controllerType) {_		Assert.notNull(controllerType, "'controllerType' must not be null")__		return initProxy(controllerType, new ControllerMethodInvocationInterceptor(controllerType))__	};return,a,mock,controller,instance,when,an,code,request,mapping,method,on,the,controller,is,invoked,the,supplied,argument,values,are,remembered,and,the,result,can,then,be,used,to,create,code,uri,components,builder,via,link,from,method,call,object,p,this,is,a,longer,version,of,link,on,class,it,is,needed,with,controller,methods,returning,void,as,well,for,repeated,invocations,pre,class,code,foo,controller,foo,controller,controller,foo,controller,class,foo,controller,save,foo,1,null,builder,mvc,uri,components,builder,from,method,call,foo,controller,foo,controller,save,foo,2,null,builder,mvc,uri,components,builder,from,method,call,foo,controller,pre,param,controller,type,the,target,controller;public,static,t,t,controller,class,t,controller,type,assert,not,null,controller,type,controller,type,must,not,be,null,return,init,proxy,controller,type,new,controller,method,invocation,interceptor,controller,type
MvcUriComponentsBuilder -> public static <T> T controller(Class<T> controllerType);1432125256;Return a "mock" controller instance. When an {@code @RequestMapping} method_on the controller is invoked, the supplied argument values are remembered_and the result can then be used to create {@code UriComponentsBuilder} via_{@link #fromMethodCall(Object)}._<p>_This is a longer version of {@link #on(Class)}. It is needed with controller_methods returning void as well for repeated invocations._<pre class="code">_FooController fooController = controller(FooController.class)___fooController.saveFoo(1, null)__builder = MvcUriComponentsBuilder.fromMethodCall(fooController)___fooController.saveFoo(2, null)__builder = MvcUriComponentsBuilder.fromMethodCall(fooController)__</pre>_@param controllerType the target controller;public static <T> T controller(Class<T> controllerType) {_		Assert.notNull(controllerType, "'controllerType' must not be null")__		return initProxy(controllerType, new ControllerMethodInvocationInterceptor(controllerType))__	};return,a,mock,controller,instance,when,an,code,request,mapping,method,on,the,controller,is,invoked,the,supplied,argument,values,are,remembered,and,the,result,can,then,be,used,to,create,code,uri,components,builder,via,link,from,method,call,object,p,this,is,a,longer,version,of,link,on,class,it,is,needed,with,controller,methods,returning,void,as,well,for,repeated,invocations,pre,class,code,foo,controller,foo,controller,controller,foo,controller,class,foo,controller,save,foo,1,null,builder,mvc,uri,components,builder,from,method,call,foo,controller,foo,controller,save,foo,2,null,builder,mvc,uri,components,builder,from,method,call,foo,controller,pre,param,controller,type,the,target,controller;public,static,t,t,controller,class,t,controller,type,assert,not,null,controller,type,controller,type,must,not,be,null,return,init,proxy,controller,type,new,controller,method,invocation,interceptor,controller,type
MvcUriComponentsBuilder -> public static <T> T controller(Class<T> controllerType);1432156007;Return a "mock" controller instance. When an {@code @RequestMapping} method_on the controller is invoked, the supplied argument values are remembered_and the result can then be used to create {@code UriComponentsBuilder} via_{@link #fromMethodCall(Object)}._<p>_This is a longer version of {@link #on(Class)}. It is needed with controller_methods returning void as well for repeated invocations._<pre class="code">_FooController fooController = controller(FooController.class)___fooController.saveFoo(1, null)__builder = MvcUriComponentsBuilder.fromMethodCall(fooController)___fooController.saveFoo(2, null)__builder = MvcUriComponentsBuilder.fromMethodCall(fooController)__</pre>_@param controllerType the target controller;public static <T> T controller(Class<T> controllerType) {_		Assert.notNull(controllerType, "'controllerType' must not be null")__		return initProxy(controllerType, new ControllerMethodInvocationInterceptor(controllerType))__	};return,a,mock,controller,instance,when,an,code,request,mapping,method,on,the,controller,is,invoked,the,supplied,argument,values,are,remembered,and,the,result,can,then,be,used,to,create,code,uri,components,builder,via,link,from,method,call,object,p,this,is,a,longer,version,of,link,on,class,it,is,needed,with,controller,methods,returning,void,as,well,for,repeated,invocations,pre,class,code,foo,controller,foo,controller,controller,foo,controller,class,foo,controller,save,foo,1,null,builder,mvc,uri,components,builder,from,method,call,foo,controller,foo,controller,save,foo,2,null,builder,mvc,uri,components,builder,from,method,call,foo,controller,pre,param,controller,type,the,target,controller;public,static,t,t,controller,class,t,controller,type,assert,not,null,controller,type,controller,type,must,not,be,null,return,init,proxy,controller,type,new,controller,method,invocation,interceptor,controller,type
MvcUriComponentsBuilder -> public static <T> T controller(Class<T> controllerType);1432856630;Return a "mock" controller instance. When an {@code @RequestMapping} method_on the controller is invoked, the supplied argument values are remembered_and the result can then be used to create {@code UriComponentsBuilder} via_{@link #fromMethodCall(Object)}._<p>_This is a longer version of {@link #on(Class)}. It is needed with controller_methods returning void as well for repeated invocations._<pre class="code">_FooController fooController = controller(FooController.class)___fooController.saveFoo(1, null)__builder = MvcUriComponentsBuilder.fromMethodCall(fooController)___fooController.saveFoo(2, null)__builder = MvcUriComponentsBuilder.fromMethodCall(fooController)__</pre>_@param controllerType the target controller;public static <T> T controller(Class<T> controllerType) {_		Assert.notNull(controllerType, "'controllerType' must not be null")__		return initProxy(controllerType, new ControllerMethodInvocationInterceptor(controllerType))__	};return,a,mock,controller,instance,when,an,code,request,mapping,method,on,the,controller,is,invoked,the,supplied,argument,values,are,remembered,and,the,result,can,then,be,used,to,create,code,uri,components,builder,via,link,from,method,call,object,p,this,is,a,longer,version,of,link,on,class,it,is,needed,with,controller,methods,returning,void,as,well,for,repeated,invocations,pre,class,code,foo,controller,foo,controller,controller,foo,controller,class,foo,controller,save,foo,1,null,builder,mvc,uri,components,builder,from,method,call,foo,controller,foo,controller,save,foo,2,null,builder,mvc,uri,components,builder,from,method,call,foo,controller,pre,param,controller,type,the,target,controller;public,static,t,t,controller,class,t,controller,type,assert,not,null,controller,type,controller,type,must,not,be,null,return,init,proxy,controller,type,new,controller,method,invocation,interceptor,controller,type
MvcUriComponentsBuilder -> public static <T> T controller(Class<T> controllerType);1432857824;Return a "mock" controller instance. When an {@code @RequestMapping} method_on the controller is invoked, the supplied argument values are remembered_and the result can then be used to create {@code UriComponentsBuilder} via_{@link #fromMethodCall(Object)}._<p>_This is a longer version of {@link #on(Class)}. It is needed with controller_methods returning void as well for repeated invocations._<pre class="code">_FooController fooController = controller(FooController.class)___fooController.saveFoo(1, null)__builder = MvcUriComponentsBuilder.fromMethodCall(fooController)___fooController.saveFoo(2, null)__builder = MvcUriComponentsBuilder.fromMethodCall(fooController)__</pre>_@param controllerType the target controller;public static <T> T controller(Class<T> controllerType) {_		Assert.notNull(controllerType, "'controllerType' must not be null")__		return initProxy(controllerType, new ControllerMethodInvocationInterceptor(controllerType))__	};return,a,mock,controller,instance,when,an,code,request,mapping,method,on,the,controller,is,invoked,the,supplied,argument,values,are,remembered,and,the,result,can,then,be,used,to,create,code,uri,components,builder,via,link,from,method,call,object,p,this,is,a,longer,version,of,link,on,class,it,is,needed,with,controller,methods,returning,void,as,well,for,repeated,invocations,pre,class,code,foo,controller,foo,controller,controller,foo,controller,class,foo,controller,save,foo,1,null,builder,mvc,uri,components,builder,from,method,call,foo,controller,foo,controller,save,foo,2,null,builder,mvc,uri,components,builder,from,method,call,foo,controller,pre,param,controller,type,the,target,controller;public,static,t,t,controller,class,t,controller,type,assert,not,null,controller,type,controller,type,must,not,be,null,return,init,proxy,controller,type,new,controller,method,invocation,interceptor,controller,type
MvcUriComponentsBuilder -> public static <T> T controller(Class<T> controllerType);1434234880;Return a "mock" controller instance. When an {@code @RequestMapping} method_on the controller is invoked, the supplied argument values are remembered_and the result can then be used to create {@code UriComponentsBuilder} via_{@link #fromMethodCall(Object)}._<p>_This is a longer version of {@link #on(Class)}. It is needed with controller_methods returning void as well for repeated invocations._<pre class="code">_FooController fooController = controller(FooController.class)___fooController.saveFoo(1, null)__builder = MvcUriComponentsBuilder.fromMethodCall(fooController)___fooController.saveFoo(2, null)__builder = MvcUriComponentsBuilder.fromMethodCall(fooController)__</pre>_@param controllerType the target controller;public static <T> T controller(Class<T> controllerType) {_		Assert.notNull(controllerType, "'controllerType' must not be null")__		return initProxy(controllerType, new ControllerMethodInvocationInterceptor(controllerType))__	};return,a,mock,controller,instance,when,an,code,request,mapping,method,on,the,controller,is,invoked,the,supplied,argument,values,are,remembered,and,the,result,can,then,be,used,to,create,code,uri,components,builder,via,link,from,method,call,object,p,this,is,a,longer,version,of,link,on,class,it,is,needed,with,controller,methods,returning,void,as,well,for,repeated,invocations,pre,class,code,foo,controller,foo,controller,controller,foo,controller,class,foo,controller,save,foo,1,null,builder,mvc,uri,components,builder,from,method,call,foo,controller,foo,controller,save,foo,2,null,builder,mvc,uri,components,builder,from,method,call,foo,controller,pre,param,controller,type,the,target,controller;public,static,t,t,controller,class,t,controller,type,assert,not,null,controller,type,controller,type,must,not,be,null,return,init,proxy,controller,type,new,controller,method,invocation,interceptor,controller,type
MvcUriComponentsBuilder -> public static <T> T controller(Class<T> controllerType);1434484897;Return a "mock" controller instance. When an {@code @RequestMapping} method_on the controller is invoked, the supplied argument values are remembered_and the result can then be used to create {@code UriComponentsBuilder} via_{@link #fromMethodCall(Object)}._<p>_This is a longer version of {@link #on(Class)}. It is needed with controller_methods returning void as well for repeated invocations._<pre class="code">_FooController fooController = controller(FooController.class)___fooController.saveFoo(1, null)__builder = MvcUriComponentsBuilder.fromMethodCall(fooController)___fooController.saveFoo(2, null)__builder = MvcUriComponentsBuilder.fromMethodCall(fooController)__</pre>_@param controllerType the target controller;public static <T> T controller(Class<T> controllerType) {_		Assert.notNull(controllerType, "'controllerType' must not be null")__		return initProxy(controllerType, new ControllerMethodInvocationInterceptor(controllerType))__	};return,a,mock,controller,instance,when,an,code,request,mapping,method,on,the,controller,is,invoked,the,supplied,argument,values,are,remembered,and,the,result,can,then,be,used,to,create,code,uri,components,builder,via,link,from,method,call,object,p,this,is,a,longer,version,of,link,on,class,it,is,needed,with,controller,methods,returning,void,as,well,for,repeated,invocations,pre,class,code,foo,controller,foo,controller,controller,foo,controller,class,foo,controller,save,foo,1,null,builder,mvc,uri,components,builder,from,method,call,foo,controller,foo,controller,save,foo,2,null,builder,mvc,uri,components,builder,from,method,call,foo,controller,pre,param,controller,type,the,target,controller;public,static,t,t,controller,class,t,controller,type,assert,not,null,controller,type,controller,type,must,not,be,null,return,init,proxy,controller,type,new,controller,method,invocation,interceptor,controller,type
MvcUriComponentsBuilder -> public static <T> T controller(Class<T> controllerType);1434726592;Return a "mock" controller instance. When an {@code @RequestMapping} method_on the controller is invoked, the supplied argument values are remembered_and the result can then be used to create {@code UriComponentsBuilder} via_{@link #fromMethodCall(Object)}._<p>_This is a longer version of {@link #on(Class)}. It is needed with controller_methods returning void as well for repeated invocations._<pre class="code">_FooController fooController = controller(FooController.class)___fooController.saveFoo(1, null)__builder = MvcUriComponentsBuilder.fromMethodCall(fooController)___fooController.saveFoo(2, null)__builder = MvcUriComponentsBuilder.fromMethodCall(fooController)__</pre>_@param controllerType the target controller;public static <T> T controller(Class<T> controllerType) {_		Assert.notNull(controllerType, "'controllerType' must not be null")__		return initProxy(controllerType, new ControllerMethodInvocationInterceptor(controllerType))__	};return,a,mock,controller,instance,when,an,code,request,mapping,method,on,the,controller,is,invoked,the,supplied,argument,values,are,remembered,and,the,result,can,then,be,used,to,create,code,uri,components,builder,via,link,from,method,call,object,p,this,is,a,longer,version,of,link,on,class,it,is,needed,with,controller,methods,returning,void,as,well,for,repeated,invocations,pre,class,code,foo,controller,foo,controller,controller,foo,controller,class,foo,controller,save,foo,1,null,builder,mvc,uri,components,builder,from,method,call,foo,controller,foo,controller,save,foo,2,null,builder,mvc,uri,components,builder,from,method,call,foo,controller,pre,param,controller,type,the,target,controller;public,static,t,t,controller,class,t,controller,type,assert,not,null,controller,type,controller,type,must,not,be,null,return,init,proxy,controller,type,new,controller,method,invocation,interceptor,controller,type
MvcUriComponentsBuilder -> public static <T> T controller(Class<T> controllerType);1435615322;Return a "mock" controller instance. When an {@code @RequestMapping} method_on the controller is invoked, the supplied argument values are remembered_and the result can then be used to create {@code UriComponentsBuilder} via_{@link #fromMethodCall(Object)}._<p>_This is a longer version of {@link #on(Class)}. It is needed with controller_methods returning void as well for repeated invocations._<pre class="code">_FooController fooController = controller(FooController.class)___fooController.saveFoo(1, null)__builder = MvcUriComponentsBuilder.fromMethodCall(fooController)___fooController.saveFoo(2, null)__builder = MvcUriComponentsBuilder.fromMethodCall(fooController)__</pre>_@param controllerType the target controller;public static <T> T controller(Class<T> controllerType) {_		Assert.notNull(controllerType, "'controllerType' must not be null")__		return initProxy(controllerType, new ControllerMethodInvocationInterceptor(controllerType))__	};return,a,mock,controller,instance,when,an,code,request,mapping,method,on,the,controller,is,invoked,the,supplied,argument,values,are,remembered,and,the,result,can,then,be,used,to,create,code,uri,components,builder,via,link,from,method,call,object,p,this,is,a,longer,version,of,link,on,class,it,is,needed,with,controller,methods,returning,void,as,well,for,repeated,invocations,pre,class,code,foo,controller,foo,controller,controller,foo,controller,class,foo,controller,save,foo,1,null,builder,mvc,uri,components,builder,from,method,call,foo,controller,foo,controller,save,foo,2,null,builder,mvc,uri,components,builder,from,method,call,foo,controller,pre,param,controller,type,the,target,controller;public,static,t,t,controller,class,t,controller,type,assert,not,null,controller,type,controller,type,must,not,be,null,return,init,proxy,controller,type,new,controller,method,invocation,interceptor,controller,type
MvcUriComponentsBuilder -> public static <T> T controller(Class<T> controllerType);1439294371;Return a "mock" controller instance. When an {@code @RequestMapping} method_on the controller is invoked, the supplied argument values are remembered_and the result can then be used to create {@code UriComponentsBuilder} via_{@link #fromMethodCall(Object)}._<p>_This is a longer version of {@link #on(Class)}. It is needed with controller_methods returning void as well for repeated invocations._<pre class="code">_FooController fooController = controller(FooController.class)___fooController.saveFoo(1, null)__builder = MvcUriComponentsBuilder.fromMethodCall(fooController)___fooController.saveFoo(2, null)__builder = MvcUriComponentsBuilder.fromMethodCall(fooController)__</pre>_@param controllerType the target controller;public static <T> T controller(Class<T> controllerType) {_		Assert.notNull(controllerType, "'controllerType' must not be null")__		return initProxy(controllerType, new ControllerMethodInvocationInterceptor(controllerType))__	};return,a,mock,controller,instance,when,an,code,request,mapping,method,on,the,controller,is,invoked,the,supplied,argument,values,are,remembered,and,the,result,can,then,be,used,to,create,code,uri,components,builder,via,link,from,method,call,object,p,this,is,a,longer,version,of,link,on,class,it,is,needed,with,controller,methods,returning,void,as,well,for,repeated,invocations,pre,class,code,foo,controller,foo,controller,controller,foo,controller,class,foo,controller,save,foo,1,null,builder,mvc,uri,components,builder,from,method,call,foo,controller,foo,controller,save,foo,2,null,builder,mvc,uri,components,builder,from,method,call,foo,controller,pre,param,controller,type,the,target,controller;public,static,t,t,controller,class,t,controller,type,assert,not,null,controller,type,controller,type,must,not,be,null,return,init,proxy,controller,type,new,controller,method,invocation,interceptor,controller,type
MvcUriComponentsBuilder -> public static <T> T controller(Class<T> controllerType);1447077465;Return a "mock" controller instance. When an {@code @RequestMapping} method_on the controller is invoked, the supplied argument values are remembered_and the result can then be used to create {@code UriComponentsBuilder} via_{@link #fromMethodCall(Object)}._<p>_This is a longer version of {@link #on(Class)}. It is needed with controller_methods returning void as well for repeated invocations._<pre class="code">_FooController fooController = controller(FooController.class)___fooController.saveFoo(1, null)__builder = MvcUriComponentsBuilder.fromMethodCall(fooController)___fooController.saveFoo(2, null)__builder = MvcUriComponentsBuilder.fromMethodCall(fooController)__</pre>_@param controllerType the target controller;public static <T> T controller(Class<T> controllerType) {_		Assert.notNull(controllerType, "'controllerType' must not be null")__		return initProxy(controllerType, new ControllerMethodInvocationInterceptor(controllerType))__	};return,a,mock,controller,instance,when,an,code,request,mapping,method,on,the,controller,is,invoked,the,supplied,argument,values,are,remembered,and,the,result,can,then,be,used,to,create,code,uri,components,builder,via,link,from,method,call,object,p,this,is,a,longer,version,of,link,on,class,it,is,needed,with,controller,methods,returning,void,as,well,for,repeated,invocations,pre,class,code,foo,controller,foo,controller,controller,foo,controller,class,foo,controller,save,foo,1,null,builder,mvc,uri,components,builder,from,method,call,foo,controller,foo,controller,save,foo,2,null,builder,mvc,uri,components,builder,from,method,call,foo,controller,pre,param,controller,type,the,target,controller;public,static,t,t,controller,class,t,controller,type,assert,not,null,controller,type,controller,type,must,not,be,null,return,init,proxy,controller,type,new,controller,method,invocation,interceptor,controller,type
MvcUriComponentsBuilder -> public static <T> T controller(Class<T> controllerType);1458830024;Return a "mock" controller instance. When an {@code @RequestMapping} method_on the controller is invoked, the supplied argument values are remembered_and the result can then be used to create {@code UriComponentsBuilder} via_{@link #fromMethodCall(Object)}._<p>_This is a longer version of {@link #on(Class)}. It is needed with controller_methods returning void as well for repeated invocations._<pre class="code">_FooController fooController = controller(FooController.class)___fooController.saveFoo(1, null)__builder = MvcUriComponentsBuilder.fromMethodCall(fooController)___fooController.saveFoo(2, null)__builder = MvcUriComponentsBuilder.fromMethodCall(fooController)__</pre>_@param controllerType the target controller;public static <T> T controller(Class<T> controllerType) {_		Assert.notNull(controllerType, "'controllerType' must not be null")__		return initProxy(controllerType, new ControllerMethodInvocationInterceptor(controllerType))__	};return,a,mock,controller,instance,when,an,code,request,mapping,method,on,the,controller,is,invoked,the,supplied,argument,values,are,remembered,and,the,result,can,then,be,used,to,create,code,uri,components,builder,via,link,from,method,call,object,p,this,is,a,longer,version,of,link,on,class,it,is,needed,with,controller,methods,returning,void,as,well,for,repeated,invocations,pre,class,code,foo,controller,foo,controller,controller,foo,controller,class,foo,controller,save,foo,1,null,builder,mvc,uri,components,builder,from,method,call,foo,controller,foo,controller,save,foo,2,null,builder,mvc,uri,components,builder,from,method,call,foo,controller,pre,param,controller,type,the,target,controller;public,static,t,t,controller,class,t,controller,type,assert,not,null,controller,type,controller,type,must,not,be,null,return,init,proxy,controller,type,new,controller,method,invocation,interceptor,controller,type
MvcUriComponentsBuilder -> public static <T> T controller(Class<T> controllerType);1461047077;Return a "mock" controller instance. When an {@code @RequestMapping} method_on the controller is invoked, the supplied argument values are remembered_and the result can then be used to create {@code UriComponentsBuilder} via_{@link #fromMethodCall(Object)}._<p>_This is a longer version of {@link #on(Class)}. It is needed with controller_methods returning void as well for repeated invocations._<pre class="code">_FooController fooController = controller(FooController.class)___fooController.saveFoo(1, null)__builder = MvcUriComponentsBuilder.fromMethodCall(fooController)___fooController.saveFoo(2, null)__builder = MvcUriComponentsBuilder.fromMethodCall(fooController)__</pre>_@param controllerType the target controller;public static <T> T controller(Class<T> controllerType) {_		Assert.notNull(controllerType, "'controllerType' must not be null")__		return initProxy(controllerType, new ControllerMethodInvocationInterceptor(controllerType))__	};return,a,mock,controller,instance,when,an,code,request,mapping,method,on,the,controller,is,invoked,the,supplied,argument,values,are,remembered,and,the,result,can,then,be,used,to,create,code,uri,components,builder,via,link,from,method,call,object,p,this,is,a,longer,version,of,link,on,class,it,is,needed,with,controller,methods,returning,void,as,well,for,repeated,invocations,pre,class,code,foo,controller,foo,controller,controller,foo,controller,class,foo,controller,save,foo,1,null,builder,mvc,uri,components,builder,from,method,call,foo,controller,foo,controller,save,foo,2,null,builder,mvc,uri,components,builder,from,method,call,foo,controller,pre,param,controller,type,the,target,controller;public,static,t,t,controller,class,t,controller,type,assert,not,null,controller,type,controller,type,must,not,be,null,return,init,proxy,controller,type,new,controller,method,invocation,interceptor,controller,type
MvcUriComponentsBuilder -> public static <T> T controller(Class<T> controllerType);1467677340;Return a "mock" controller instance. When an {@code @RequestMapping} method_on the controller is invoked, the supplied argument values are remembered_and the result can then be used to create {@code UriComponentsBuilder} via_{@link #fromMethodCall(Object)}._<p>_This is a longer version of {@link #on(Class)}. It is needed with controller_methods returning void as well for repeated invocations._<pre class="code">_FooController fooController = controller(FooController.class)___fooController.saveFoo(1, null)__builder = MvcUriComponentsBuilder.fromMethodCall(fooController)___fooController.saveFoo(2, null)__builder = MvcUriComponentsBuilder.fromMethodCall(fooController)__</pre>_@param controllerType the target controller;public static <T> T controller(Class<T> controllerType) {_		Assert.notNull(controllerType, "'controllerType' must not be null")__		return initProxy(controllerType, new ControllerMethodInvocationInterceptor(controllerType))__	};return,a,mock,controller,instance,when,an,code,request,mapping,method,on,the,controller,is,invoked,the,supplied,argument,values,are,remembered,and,the,result,can,then,be,used,to,create,code,uri,components,builder,via,link,from,method,call,object,p,this,is,a,longer,version,of,link,on,class,it,is,needed,with,controller,methods,returning,void,as,well,for,repeated,invocations,pre,class,code,foo,controller,foo,controller,controller,foo,controller,class,foo,controller,save,foo,1,null,builder,mvc,uri,components,builder,from,method,call,foo,controller,foo,controller,save,foo,2,null,builder,mvc,uri,components,builder,from,method,call,foo,controller,pre,param,controller,type,the,target,controller;public,static,t,t,controller,class,t,controller,type,assert,not,null,controller,type,controller,type,must,not,be,null,return,init,proxy,controller,type,new,controller,method,invocation,interceptor,controller,type
MvcUriComponentsBuilder -> public static <T> T controller(Class<T> controllerType);1467726769;Return a "mock" controller instance. When an {@code @RequestMapping} method_on the controller is invoked, the supplied argument values are remembered_and the result can then be used to create {@code UriComponentsBuilder} via_{@link #fromMethodCall(Object)}._<p>_This is a longer version of {@link #on(Class)}. It is needed with controller_methods returning void as well for repeated invocations._<pre class="code">_FooController fooController = controller(FooController.class)___fooController.saveFoo(1, null)__builder = MvcUriComponentsBuilder.fromMethodCall(fooController)___fooController.saveFoo(2, null)__builder = MvcUriComponentsBuilder.fromMethodCall(fooController)__</pre>_@param controllerType the target controller;public static <T> T controller(Class<T> controllerType) {_		Assert.notNull(controllerType, "'controllerType' must not be null")__		return initProxy(controllerType, new ControllerMethodInvocationInterceptor(controllerType))__	};return,a,mock,controller,instance,when,an,code,request,mapping,method,on,the,controller,is,invoked,the,supplied,argument,values,are,remembered,and,the,result,can,then,be,used,to,create,code,uri,components,builder,via,link,from,method,call,object,p,this,is,a,longer,version,of,link,on,class,it,is,needed,with,controller,methods,returning,void,as,well,for,repeated,invocations,pre,class,code,foo,controller,foo,controller,controller,foo,controller,class,foo,controller,save,foo,1,null,builder,mvc,uri,components,builder,from,method,call,foo,controller,foo,controller,save,foo,2,null,builder,mvc,uri,components,builder,from,method,call,foo,controller,pre,param,controller,type,the,target,controller;public,static,t,t,controller,class,t,controller,type,assert,not,null,controller,type,controller,type,must,not,be,null,return,init,proxy,controller,type,new,controller,method,invocation,interceptor,controller,type
MvcUriComponentsBuilder -> public static <T> T controller(Class<T> controllerType);1467730834;Return a "mock" controller instance. When an {@code @RequestMapping} method_on the controller is invoked, the supplied argument values are remembered_and the result can then be used to create {@code UriComponentsBuilder} via_{@link #fromMethodCall(Object)}._<p>_This is a longer version of {@link #on(Class)}. It is needed with controller_methods returning void as well for repeated invocations._<pre class="code">_FooController fooController = controller(FooController.class)___fooController.saveFoo(1, null)__builder = MvcUriComponentsBuilder.fromMethodCall(fooController)___fooController.saveFoo(2, null)__builder = MvcUriComponentsBuilder.fromMethodCall(fooController)__</pre>_@param controllerType the target controller;public static <T> T controller(Class<T> controllerType) {_		Assert.notNull(controllerType, "'controllerType' must not be null")__		return initProxy(controllerType, new ControllerMethodInvocationInterceptor(controllerType))__	};return,a,mock,controller,instance,when,an,code,request,mapping,method,on,the,controller,is,invoked,the,supplied,argument,values,are,remembered,and,the,result,can,then,be,used,to,create,code,uri,components,builder,via,link,from,method,call,object,p,this,is,a,longer,version,of,link,on,class,it,is,needed,with,controller,methods,returning,void,as,well,for,repeated,invocations,pre,class,code,foo,controller,foo,controller,controller,foo,controller,class,foo,controller,save,foo,1,null,builder,mvc,uri,components,builder,from,method,call,foo,controller,foo,controller,save,foo,2,null,builder,mvc,uri,components,builder,from,method,call,foo,controller,pre,param,controller,type,the,target,controller;public,static,t,t,controller,class,t,controller,type,assert,not,null,controller,type,controller,type,must,not,be,null,return,init,proxy,controller,type,new,controller,method,invocation,interceptor,controller,type
MvcUriComponentsBuilder -> public static <T> T controller(Class<T> controllerType);1467846264;Return a "mock" controller instance. When an {@code @RequestMapping} method_on the controller is invoked, the supplied argument values are remembered_and the result can then be used to create {@code UriComponentsBuilder} via_{@link #fromMethodCall(Object)}._<p>_This is a longer version of {@link #on(Class)}. It is needed with controller_methods returning void as well for repeated invocations._<pre class="code">_FooController fooController = controller(FooController.class)___fooController.saveFoo(1, null)__builder = MvcUriComponentsBuilder.fromMethodCall(fooController)___fooController.saveFoo(2, null)__builder = MvcUriComponentsBuilder.fromMethodCall(fooController)__</pre>_@param controllerType the target controller;public static <T> T controller(Class<T> controllerType) {_		Assert.notNull(controllerType, "'controllerType' must not be null")__		return initProxy(controllerType, new ControllerMethodInvocationInterceptor(controllerType))__	};return,a,mock,controller,instance,when,an,code,request,mapping,method,on,the,controller,is,invoked,the,supplied,argument,values,are,remembered,and,the,result,can,then,be,used,to,create,code,uri,components,builder,via,link,from,method,call,object,p,this,is,a,longer,version,of,link,on,class,it,is,needed,with,controller,methods,returning,void,as,well,for,repeated,invocations,pre,class,code,foo,controller,foo,controller,controller,foo,controller,class,foo,controller,save,foo,1,null,builder,mvc,uri,components,builder,from,method,call,foo,controller,foo,controller,save,foo,2,null,builder,mvc,uri,components,builder,from,method,call,foo,controller,pre,param,controller,type,the,target,controller;public,static,t,t,controller,class,t,controller,type,assert,not,null,controller,type,controller,type,must,not,be,null,return,init,proxy,controller,type,new,controller,method,invocation,interceptor,controller,type
MvcUriComponentsBuilder -> public static <T> T controller(Class<T> controllerType);1468613531;Return a "mock" controller instance. When an {@code @RequestMapping} method_on the controller is invoked, the supplied argument values are remembered_and the result can then be used to create {@code UriComponentsBuilder} via_{@link #fromMethodCall(Object)}._<p>This is a longer version of {@link #on(Class)}. It is needed with controller_methods returning void as well for repeated invocations._<pre class="code">_FooController fooController = controller(FooController.class)___fooController.saveFoo(1, null)__builder = MvcUriComponentsBuilder.fromMethodCall(fooController)___fooController.saveFoo(2, null)__builder = MvcUriComponentsBuilder.fromMethodCall(fooController)__</pre>_@param controllerType the target controller;public static <T> T controller(Class<T> controllerType) {_		Assert.notNull(controllerType, "'controllerType' must not be null")__		return initProxy(controllerType, new ControllerMethodInvocationInterceptor(controllerType))__	};return,a,mock,controller,instance,when,an,code,request,mapping,method,on,the,controller,is,invoked,the,supplied,argument,values,are,remembered,and,the,result,can,then,be,used,to,create,code,uri,components,builder,via,link,from,method,call,object,p,this,is,a,longer,version,of,link,on,class,it,is,needed,with,controller,methods,returning,void,as,well,for,repeated,invocations,pre,class,code,foo,controller,foo,controller,controller,foo,controller,class,foo,controller,save,foo,1,null,builder,mvc,uri,components,builder,from,method,call,foo,controller,foo,controller,save,foo,2,null,builder,mvc,uri,components,builder,from,method,call,foo,controller,pre,param,controller,type,the,target,controller;public,static,t,t,controller,class,t,controller,type,assert,not,null,controller,type,controller,type,must,not,be,null,return,init,proxy,controller,type,new,controller,method,invocation,interceptor,controller,type
MvcUriComponentsBuilder -> public static <T> T controller(Class<T> controllerType);1468948866;Return a "mock" controller instance. When an {@code @RequestMapping} method_on the controller is invoked, the supplied argument values are remembered_and the result can then be used to create {@code UriComponentsBuilder} via_{@link #fromMethodCall(Object)}._<p>This is a longer version of {@link #on(Class)}. It is needed with controller_methods returning void as well for repeated invocations._<pre class="code">_FooController fooController = controller(FooController.class)___fooController.saveFoo(1, null)__builder = MvcUriComponentsBuilder.fromMethodCall(fooController)___fooController.saveFoo(2, null)__builder = MvcUriComponentsBuilder.fromMethodCall(fooController)__</pre>_@param controllerType the target controller;public static <T> T controller(Class<T> controllerType) {_		Assert.notNull(controllerType, "'controllerType' must not be null")__		return initProxy(controllerType, new ControllerMethodInvocationInterceptor(controllerType))__	};return,a,mock,controller,instance,when,an,code,request,mapping,method,on,the,controller,is,invoked,the,supplied,argument,values,are,remembered,and,the,result,can,then,be,used,to,create,code,uri,components,builder,via,link,from,method,call,object,p,this,is,a,longer,version,of,link,on,class,it,is,needed,with,controller,methods,returning,void,as,well,for,repeated,invocations,pre,class,code,foo,controller,foo,controller,controller,foo,controller,class,foo,controller,save,foo,1,null,builder,mvc,uri,components,builder,from,method,call,foo,controller,foo,controller,save,foo,2,null,builder,mvc,uri,components,builder,from,method,call,foo,controller,pre,param,controller,type,the,target,controller;public,static,t,t,controller,class,t,controller,type,assert,not,null,controller,type,controller,type,must,not,be,null,return,init,proxy,controller,type,new,controller,method,invocation,interceptor,controller,type
MvcUriComponentsBuilder -> public static <T> T controller(Class<T> controllerType);1485810955;Return a "mock" controller instance. When an {@code @RequestMapping} method_on the controller is invoked, the supplied argument values are remembered_and the result can then be used to create {@code UriComponentsBuilder} via_{@link #fromMethodCall(Object)}._<p>This is a longer version of {@link #on(Class)}. It is needed with controller_methods returning void as well for repeated invocations._<pre class="code">_FooController fooController = controller(FooController.class)___fooController.saveFoo(1, null)__builder = MvcUriComponentsBuilder.fromMethodCall(fooController)___fooController.saveFoo(2, null)__builder = MvcUriComponentsBuilder.fromMethodCall(fooController)__</pre>_@param controllerType the target controller;public static <T> T controller(Class<T> controllerType) {_		Assert.notNull(controllerType, "'controllerType' must not be null")__		return initProxy(controllerType, new ControllerMethodInvocationInterceptor(controllerType))__	};return,a,mock,controller,instance,when,an,code,request,mapping,method,on,the,controller,is,invoked,the,supplied,argument,values,are,remembered,and,the,result,can,then,be,used,to,create,code,uri,components,builder,via,link,from,method,call,object,p,this,is,a,longer,version,of,link,on,class,it,is,needed,with,controller,methods,returning,void,as,well,for,repeated,invocations,pre,class,code,foo,controller,foo,controller,controller,foo,controller,class,foo,controller,save,foo,1,null,builder,mvc,uri,components,builder,from,method,call,foo,controller,foo,controller,save,foo,2,null,builder,mvc,uri,components,builder,from,method,call,foo,controller,pre,param,controller,type,the,target,controller;public,static,t,t,controller,class,t,controller,type,assert,not,null,controller,type,controller,type,must,not,be,null,return,init,proxy,controller,type,new,controller,method,invocation,interceptor,controller,type
MvcUriComponentsBuilder -> public static <T> T controller(Class<T> controllerType);1486634978;Return a "mock" controller instance. When an {@code @RequestMapping} method_on the controller is invoked, the supplied argument values are remembered_and the result can then be used to create {@code UriComponentsBuilder} via_{@link #fromMethodCall(Object)}._<p>This is a longer version of {@link #on(Class)}. It is needed with controller_methods returning void as well for repeated invocations._<pre class="code">_FooController fooController = controller(FooController.class)___fooController.saveFoo(1, null)__builder = MvcUriComponentsBuilder.fromMethodCall(fooController)___fooController.saveFoo(2, null)__builder = MvcUriComponentsBuilder.fromMethodCall(fooController)__</pre>_@param controllerType the target controller;public static <T> T controller(Class<T> controllerType) {_		Assert.notNull(controllerType, "'controllerType' must not be null")__		return initProxy(controllerType, new ControllerMethodInvocationInterceptor(controllerType))__	};return,a,mock,controller,instance,when,an,code,request,mapping,method,on,the,controller,is,invoked,the,supplied,argument,values,are,remembered,and,the,result,can,then,be,used,to,create,code,uri,components,builder,via,link,from,method,call,object,p,this,is,a,longer,version,of,link,on,class,it,is,needed,with,controller,methods,returning,void,as,well,for,repeated,invocations,pre,class,code,foo,controller,foo,controller,controller,foo,controller,class,foo,controller,save,foo,1,null,builder,mvc,uri,components,builder,from,method,call,foo,controller,foo,controller,save,foo,2,null,builder,mvc,uri,components,builder,from,method,call,foo,controller,pre,param,controller,type,the,target,controller;public,static,t,t,controller,class,t,controller,type,assert,not,null,controller,type,controller,type,must,not,be,null,return,init,proxy,controller,type,new,controller,method,invocation,interceptor,controller,type
MvcUriComponentsBuilder -> public static <T> T controller(Class<T> controllerType);1486635693;Return a "mock" controller instance. When an {@code @RequestMapping} method_on the controller is invoked, the supplied argument values are remembered_and the result can then be used to create {@code UriComponentsBuilder} via_{@link #fromMethodCall(Object)}._<p>This is a longer version of {@link #on(Class)}. It is needed with controller_methods returning void as well for repeated invocations._<pre class="code">_FooController fooController = controller(FooController.class)___fooController.saveFoo(1, null)__builder = MvcUriComponentsBuilder.fromMethodCall(fooController)___fooController.saveFoo(2, null)__builder = MvcUriComponentsBuilder.fromMethodCall(fooController)__</pre>_@param controllerType the target controller;public static <T> T controller(Class<T> controllerType) {_		Assert.notNull(controllerType, "'controllerType' must not be null")__		return initProxy(controllerType, new ControllerMethodInvocationInterceptor(controllerType))__	};return,a,mock,controller,instance,when,an,code,request,mapping,method,on,the,controller,is,invoked,the,supplied,argument,values,are,remembered,and,the,result,can,then,be,used,to,create,code,uri,components,builder,via,link,from,method,call,object,p,this,is,a,longer,version,of,link,on,class,it,is,needed,with,controller,methods,returning,void,as,well,for,repeated,invocations,pre,class,code,foo,controller,foo,controller,controller,foo,controller,class,foo,controller,save,foo,1,null,builder,mvc,uri,components,builder,from,method,call,foo,controller,foo,controller,save,foo,2,null,builder,mvc,uri,components,builder,from,method,call,foo,controller,pre,param,controller,type,the,target,controller;public,static,t,t,controller,class,t,controller,type,assert,not,null,controller,type,controller,type,must,not,be,null,return,init,proxy,controller,type,new,controller,method,invocation,interceptor,controller,type
MvcUriComponentsBuilder -> public static <T> T controller(Class<T> controllerType);1495868221;Return a "mock" controller instance. When an {@code @RequestMapping} method_on the controller is invoked, the supplied argument values are remembered_and the result can then be used to create {@code UriComponentsBuilder} via_{@link #fromMethodCall(Object)}._<p>This is a longer version of {@link #on(Class)}. It is needed with controller_methods returning void as well for repeated invocations._<pre class="code">_FooController fooController = controller(FooController.class)___fooController.saveFoo(1, null)__builder = MvcUriComponentsBuilder.fromMethodCall(fooController)___fooController.saveFoo(2, null)__builder = MvcUriComponentsBuilder.fromMethodCall(fooController)__</pre>_@param controllerType the target controller;public static <T> T controller(Class<T> controllerType) {_		Assert.notNull(controllerType, "'controllerType' must not be null")__		return initProxy(controllerType, new ControllerMethodInvocationInterceptor(controllerType))__	};return,a,mock,controller,instance,when,an,code,request,mapping,method,on,the,controller,is,invoked,the,supplied,argument,values,are,remembered,and,the,result,can,then,be,used,to,create,code,uri,components,builder,via,link,from,method,call,object,p,this,is,a,longer,version,of,link,on,class,it,is,needed,with,controller,methods,returning,void,as,well,for,repeated,invocations,pre,class,code,foo,controller,foo,controller,controller,foo,controller,class,foo,controller,save,foo,1,null,builder,mvc,uri,components,builder,from,method,call,foo,controller,foo,controller,save,foo,2,null,builder,mvc,uri,components,builder,from,method,call,foo,controller,pre,param,controller,type,the,target,controller;public,static,t,t,controller,class,t,controller,type,assert,not,null,controller,type,controller,type,must,not,be,null,return,init,proxy,controller,type,new,controller,method,invocation,interceptor,controller,type
MvcUriComponentsBuilder -> public static <T> T controller(Class<T> controllerType);1496242568;Return a "mock" controller instance. When an {@code @RequestMapping} method_on the controller is invoked, the supplied argument values are remembered_and the result can then be used to create {@code UriComponentsBuilder} via_{@link #fromMethodCall(Object)}._<p>This is a longer version of {@link #on(Class)}. It is needed with controller_methods returning void as well for repeated invocations._<pre class="code">_FooController fooController = controller(FooController.class)___fooController.saveFoo(1, null)__builder = MvcUriComponentsBuilder.fromMethodCall(fooController)___fooController.saveFoo(2, null)__builder = MvcUriComponentsBuilder.fromMethodCall(fooController)__</pre>_@param controllerType the target controller;public static <T> T controller(Class<T> controllerType) {_		Assert.notNull(controllerType, "'controllerType' must not be null")__		return initProxy(controllerType, new ControllerMethodInvocationInterceptor(controllerType))__	};return,a,mock,controller,instance,when,an,code,request,mapping,method,on,the,controller,is,invoked,the,supplied,argument,values,are,remembered,and,the,result,can,then,be,used,to,create,code,uri,components,builder,via,link,from,method,call,object,p,this,is,a,longer,version,of,link,on,class,it,is,needed,with,controller,methods,returning,void,as,well,for,repeated,invocations,pre,class,code,foo,controller,foo,controller,controller,foo,controller,class,foo,controller,save,foo,1,null,builder,mvc,uri,components,builder,from,method,call,foo,controller,foo,controller,save,foo,2,null,builder,mvc,uri,components,builder,from,method,call,foo,controller,pre,param,controller,type,the,target,controller;public,static,t,t,controller,class,t,controller,type,assert,not,null,controller,type,controller,type,must,not,be,null,return,init,proxy,controller,type,new,controller,method,invocation,interceptor,controller,type
MvcUriComponentsBuilder -> public static <T> T controller(Class<T> controllerType);1496259743;Return a "mock" controller instance. When an {@code @RequestMapping} method_on the controller is invoked, the supplied argument values are remembered_and the result can then be used to create {@code UriComponentsBuilder} via_{@link #fromMethodCall(Object)}._<p>This is a longer version of {@link #on(Class)}. It is needed with controller_methods returning void as well for repeated invocations._<pre class="code">_FooController fooController = controller(FooController.class)___fooController.saveFoo(1, null)__builder = MvcUriComponentsBuilder.fromMethodCall(fooController)___fooController.saveFoo(2, null)__builder = MvcUriComponentsBuilder.fromMethodCall(fooController)__</pre>_@param controllerType the target controller;public static <T> T controller(Class<T> controllerType) {_		Assert.notNull(controllerType, "'controllerType' must not be null")__		return initProxy(controllerType, new ControllerMethodInvocationInterceptor(controllerType))__	};return,a,mock,controller,instance,when,an,code,request,mapping,method,on,the,controller,is,invoked,the,supplied,argument,values,are,remembered,and,the,result,can,then,be,used,to,create,code,uri,components,builder,via,link,from,method,call,object,p,this,is,a,longer,version,of,link,on,class,it,is,needed,with,controller,methods,returning,void,as,well,for,repeated,invocations,pre,class,code,foo,controller,foo,controller,controller,foo,controller,class,foo,controller,save,foo,1,null,builder,mvc,uri,components,builder,from,method,call,foo,controller,foo,controller,save,foo,2,null,builder,mvc,uri,components,builder,from,method,call,foo,controller,pre,param,controller,type,the,target,controller;public,static,t,t,controller,class,t,controller,type,assert,not,null,controller,type,controller,type,must,not,be,null,return,init,proxy,controller,type,new,controller,method,invocation,interceptor,controller,type
MvcUriComponentsBuilder -> public static <T> T controller(Class<T> controllerType);1496370972;Return a "mock" controller instance. When an {@code @RequestMapping} method_on the controller is invoked, the supplied argument values are remembered_and the result can then be used to create {@code UriComponentsBuilder} via_{@link #fromMethodCall(Object)}._<p>This is a longer version of {@link #on(Class)}. It is needed with controller_methods returning void as well for repeated invocations._<pre class="code">_FooController fooController = controller(FooController.class)___fooController.saveFoo(1, null)__builder = MvcUriComponentsBuilder.fromMethodCall(fooController)___fooController.saveFoo(2, null)__builder = MvcUriComponentsBuilder.fromMethodCall(fooController)__</pre>_<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param controllerType the target controller;public static <T> T controller(Class<T> controllerType) {_		Assert.notNull(controllerType, "'controllerType' must not be null")__		return initProxy(controllerType, new ControllerMethodInvocationInterceptor(controllerType))__	};return,a,mock,controller,instance,when,an,code,request,mapping,method,on,the,controller,is,invoked,the,supplied,argument,values,are,remembered,and,the,result,can,then,be,used,to,create,code,uri,components,builder,via,link,from,method,call,object,p,this,is,a,longer,version,of,link,on,class,it,is,needed,with,controller,methods,returning,void,as,well,for,repeated,invocations,pre,class,code,foo,controller,foo,controller,controller,foo,controller,class,foo,controller,save,foo,1,null,builder,mvc,uri,components,builder,from,method,call,foo,controller,foo,controller,save,foo,2,null,builder,mvc,uri,components,builder,from,method,call,foo,controller,pre,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,controller,type,the,target,controller;public,static,t,t,controller,class,t,controller,type,assert,not,null,controller,type,controller,type,must,not,be,null,return,init,proxy,controller,type,new,controller,method,invocation,interceptor,controller,type
MvcUriComponentsBuilder -> public static <T> T controller(Class<T> controllerType);1496837955;Return a "mock" controller instance. When an {@code @RequestMapping} method_on the controller is invoked, the supplied argument values are remembered_and the result can then be used to create {@code UriComponentsBuilder} via_{@link #fromMethodCall(Object)}._<p>This is a longer version of {@link #on(Class)}. It is needed with controller_methods returning void as well for repeated invocations._<pre class="code">_FooController fooController = controller(FooController.class)___fooController.saveFoo(1, null)__builder = MvcUriComponentsBuilder.fromMethodCall(fooController)___fooController.saveFoo(2, null)__builder = MvcUriComponentsBuilder.fromMethodCall(fooController)__</pre>_<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param controllerType the target controller;public static <T> T controller(Class<T> controllerType) {_		Assert.notNull(controllerType, "'controllerType' must not be null")__		return initProxy(controllerType, new ControllerMethodInvocationInterceptor(controllerType))__	};return,a,mock,controller,instance,when,an,code,request,mapping,method,on,the,controller,is,invoked,the,supplied,argument,values,are,remembered,and,the,result,can,then,be,used,to,create,code,uri,components,builder,via,link,from,method,call,object,p,this,is,a,longer,version,of,link,on,class,it,is,needed,with,controller,methods,returning,void,as,well,for,repeated,invocations,pre,class,code,foo,controller,foo,controller,controller,foo,controller,class,foo,controller,save,foo,1,null,builder,mvc,uri,components,builder,from,method,call,foo,controller,foo,controller,save,foo,2,null,builder,mvc,uri,components,builder,from,method,call,foo,controller,pre,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,controller,type,the,target,controller;public,static,t,t,controller,class,t,controller,type,assert,not,null,controller,type,controller,type,must,not,be,null,return,init,proxy,controller,type,new,controller,method,invocation,interceptor,controller,type
MvcUriComponentsBuilder -> public static <T> T controller(Class<T> controllerType);1497341397;Return a "mock" controller instance. When an {@code @RequestMapping} method_on the controller is invoked, the supplied argument values are remembered_and the result can then be used to create {@code UriComponentsBuilder} via_{@link #fromMethodCall(Object)}._<p>This is a longer version of {@link #on(Class)}. It is needed with controller_methods returning void as well for repeated invocations._<pre class="code">_FooController fooController = controller(FooController.class)___fooController.saveFoo(1, null)__builder = MvcUriComponentsBuilder.fromMethodCall(fooController)___fooController.saveFoo(2, null)__builder = MvcUriComponentsBuilder.fromMethodCall(fooController)__</pre>_<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param controllerType the target controller;public static <T> T controller(Class<T> controllerType) {_		Assert.notNull(controllerType, "'controllerType' must not be null")__		return initProxy(controllerType, new ControllerMethodInvocationInterceptor(controllerType))__	};return,a,mock,controller,instance,when,an,code,request,mapping,method,on,the,controller,is,invoked,the,supplied,argument,values,are,remembered,and,the,result,can,then,be,used,to,create,code,uri,components,builder,via,link,from,method,call,object,p,this,is,a,longer,version,of,link,on,class,it,is,needed,with,controller,methods,returning,void,as,well,for,repeated,invocations,pre,class,code,foo,controller,foo,controller,controller,foo,controller,class,foo,controller,save,foo,1,null,builder,mvc,uri,components,builder,from,method,call,foo,controller,foo,controller,save,foo,2,null,builder,mvc,uri,components,builder,from,method,call,foo,controller,pre,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,controller,type,the,target,controller;public,static,t,t,controller,class,t,controller,type,assert,not,null,controller,type,controller,type,must,not,be,null,return,init,proxy,controller,type,new,controller,method,invocation,interceptor,controller,type
MvcUriComponentsBuilder -> public static <T> T controller(Class<T> controllerType);1498780456;Return a "mock" controller instance. When an {@code @RequestMapping} method_on the controller is invoked, the supplied argument values are remembered_and the result can then be used to create {@code UriComponentsBuilder} via_{@link #fromMethodCall(Object)}._<p>This is a longer version of {@link #on(Class)}. It is needed with controller_methods returning void as well for repeated invocations._<pre class="code">_FooController fooController = controller(FooController.class)___fooController.saveFoo(1, null)__builder = MvcUriComponentsBuilder.fromMethodCall(fooController)___fooController.saveFoo(2, null)__builder = MvcUriComponentsBuilder.fromMethodCall(fooController)__</pre>_<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param controllerType the target controller;public static <T> T controller(Class<T> controllerType) {_		Assert.notNull(controllerType, "'controllerType' must not be null")__		return initProxy(controllerType, new ControllerMethodInvocationInterceptor(controllerType))__	};return,a,mock,controller,instance,when,an,code,request,mapping,method,on,the,controller,is,invoked,the,supplied,argument,values,are,remembered,and,the,result,can,then,be,used,to,create,code,uri,components,builder,via,link,from,method,call,object,p,this,is,a,longer,version,of,link,on,class,it,is,needed,with,controller,methods,returning,void,as,well,for,repeated,invocations,pre,class,code,foo,controller,foo,controller,controller,foo,controller,class,foo,controller,save,foo,1,null,builder,mvc,uri,components,builder,from,method,call,foo,controller,foo,controller,save,foo,2,null,builder,mvc,uri,components,builder,from,method,call,foo,controller,pre,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,controller,type,the,target,controller;public,static,t,t,controller,class,t,controller,type,assert,not,null,controller,type,controller,type,must,not,be,null,return,init,proxy,controller,type,new,controller,method,invocation,interceptor,controller,type
MvcUriComponentsBuilder -> public static <T> T controller(Class<T> controllerType);1500416137;Return a "mock" controller instance. When an {@code @RequestMapping} method_on the controller is invoked, the supplied argument values are remembered_and the result can then be used to create {@code UriComponentsBuilder} via_{@link #fromMethodCall(Object)}._<p>This is a longer version of {@link #on(Class)}. It is needed with controller_methods returning void as well for repeated invocations._<pre class="code">_FooController fooController = controller(FooController.class)___fooController.saveFoo(1, null)__builder = MvcUriComponentsBuilder.fromMethodCall(fooController)___fooController.saveFoo(2, null)__builder = MvcUriComponentsBuilder.fromMethodCall(fooController)__</pre>_<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param controllerType the target controller;public static <T> T controller(Class<T> controllerType) {_		Assert.notNull(controllerType, "'controllerType' must not be null")__		return initProxy(controllerType, new ControllerMethodInvocationInterceptor(controllerType))__	};return,a,mock,controller,instance,when,an,code,request,mapping,method,on,the,controller,is,invoked,the,supplied,argument,values,are,remembered,and,the,result,can,then,be,used,to,create,code,uri,components,builder,via,link,from,method,call,object,p,this,is,a,longer,version,of,link,on,class,it,is,needed,with,controller,methods,returning,void,as,well,for,repeated,invocations,pre,class,code,foo,controller,foo,controller,controller,foo,controller,class,foo,controller,save,foo,1,null,builder,mvc,uri,components,builder,from,method,call,foo,controller,foo,controller,save,foo,2,null,builder,mvc,uri,components,builder,from,method,call,foo,controller,pre,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,controller,type,the,target,controller;public,static,t,t,controller,class,t,controller,type,assert,not,null,controller,type,controller,type,must,not,be,null,return,init,proxy,controller,type,new,controller,method,invocation,interceptor,controller,type
MvcUriComponentsBuilder -> public static <T> T controller(Class<T> controllerType);1506097334;Return a "mock" controller instance. When an {@code @RequestMapping} method_on the controller is invoked, the supplied argument values are remembered_and the result can then be used to create {@code UriComponentsBuilder} via_{@link #fromMethodCall(Object)}._<p>This is a longer version of {@link #on(Class)}. It is needed with controller_methods returning void as well for repeated invocations._<pre class="code">_FooController fooController = controller(FooController.class)___fooController.saveFoo(1, null)__builder = MvcUriComponentsBuilder.fromMethodCall(fooController)___fooController.saveFoo(2, null)__builder = MvcUriComponentsBuilder.fromMethodCall(fooController)__</pre>_<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param controllerType the target controller;public static <T> T controller(Class<T> controllerType) {_		Assert.notNull(controllerType, "'controllerType' must not be null")__		return initProxy(controllerType, new ControllerMethodInvocationInterceptor(controllerType))__	};return,a,mock,controller,instance,when,an,code,request,mapping,method,on,the,controller,is,invoked,the,supplied,argument,values,are,remembered,and,the,result,can,then,be,used,to,create,code,uri,components,builder,via,link,from,method,call,object,p,this,is,a,longer,version,of,link,on,class,it,is,needed,with,controller,methods,returning,void,as,well,for,repeated,invocations,pre,class,code,foo,controller,foo,controller,controller,foo,controller,class,foo,controller,save,foo,1,null,builder,mvc,uri,components,builder,from,method,call,foo,controller,foo,controller,save,foo,2,null,builder,mvc,uri,components,builder,from,method,call,foo,controller,pre,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,controller,type,the,target,controller;public,static,t,t,controller,class,t,controller,type,assert,not,null,controller,type,controller,type,must,not,be,null,return,init,proxy,controller,type,new,controller,method,invocation,interceptor,controller,type
MvcUriComponentsBuilder -> public static <T> T controller(Class<T> controllerType);1518770299;Return a "mock" controller instance. When an {@code @RequestMapping} method_on the controller is invoked, the supplied argument values are remembered_and the result can then be used to create {@code UriComponentsBuilder} via_{@link #fromMethodCall(Object)}._<p>This is a longer version of {@link #on(Class)}. It is needed with controller_methods returning void as well for repeated invocations._<pre class="code">_FooController fooController = controller(FooController.class)___fooController.saveFoo(1, null)__builder = MvcUriComponentsBuilder.fromMethodCall(fooController)___fooController.saveFoo(2, null)__builder = MvcUriComponentsBuilder.fromMethodCall(fooController)__</pre>_<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param controllerType the target controller;public static <T> T controller(Class<T> controllerType) {_		Assert.notNull(controllerType, "'controllerType' must not be null")__		return initProxy(controllerType, new ControllerMethodInvocationInterceptor(controllerType))__	};return,a,mock,controller,instance,when,an,code,request,mapping,method,on,the,controller,is,invoked,the,supplied,argument,values,are,remembered,and,the,result,can,then,be,used,to,create,code,uri,components,builder,via,link,from,method,call,object,p,this,is,a,longer,version,of,link,on,class,it,is,needed,with,controller,methods,returning,void,as,well,for,repeated,invocations,pre,class,code,foo,controller,foo,controller,controller,foo,controller,class,foo,controller,save,foo,1,null,builder,mvc,uri,components,builder,from,method,call,foo,controller,foo,controller,save,foo,2,null,builder,mvc,uri,components,builder,from,method,call,foo,controller,pre,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,controller,type,the,target,controller;public,static,t,t,controller,class,t,controller,type,assert,not,null,controller,type,controller,type,must,not,be,null,return,init,proxy,controller,type,new,controller,method,invocation,interceptor,controller,type
MvcUriComponentsBuilder -> public static <T> T controller(Class<T> controllerType);1522354261;Return a "mock" controller instance. When an {@code @RequestMapping} method_on the controller is invoked, the supplied argument values are remembered_and the result can then be used to create {@code UriComponentsBuilder} via_{@link #fromMethodCall(Object)}._<p>This is a longer version of {@link #on(Class)}. It is needed with controller_methods returning void as well for repeated invocations._<pre class="code">_FooController fooController = controller(FooController.class)___fooController.saveFoo(1, null)__builder = MvcUriComponentsBuilder.fromMethodCall(fooController)___fooController.saveFoo(2, null)__builder = MvcUriComponentsBuilder.fromMethodCall(fooController)__</pre>_<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param controllerType the target controller;public static <T> T controller(Class<T> controllerType) {_		Assert.notNull(controllerType, "'controllerType' must not be null")__		return initProxy(controllerType, new ControllerMethodInvocationInterceptor(controllerType))__	};return,a,mock,controller,instance,when,an,code,request,mapping,method,on,the,controller,is,invoked,the,supplied,argument,values,are,remembered,and,the,result,can,then,be,used,to,create,code,uri,components,builder,via,link,from,method,call,object,p,this,is,a,longer,version,of,link,on,class,it,is,needed,with,controller,methods,returning,void,as,well,for,repeated,invocations,pre,class,code,foo,controller,foo,controller,controller,foo,controller,class,foo,controller,save,foo,1,null,builder,mvc,uri,components,builder,from,method,call,foo,controller,foo,controller,save,foo,2,null,builder,mvc,uri,components,builder,from,method,call,foo,controller,pre,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,controller,type,the,target,controller;public,static,t,t,controller,class,t,controller,type,assert,not,null,controller,type,controller,type,must,not,be,null,return,init,proxy,controller,type,new,controller,method,invocation,interceptor,controller,type
MvcUriComponentsBuilder -> public static <T> T controller(Class<T> controllerType);1523455554;Return a "mock" controller instance. When an {@code @RequestMapping} method_on the controller is invoked, the supplied argument values are remembered_and the result can then be used to create {@code UriComponentsBuilder} via_{@link #fromMethodCall(Object)}._<p>This is a longer version of {@link #on(Class)}. It is needed with controller_methods returning void as well for repeated invocations._<pre class="code">_FooController fooController = controller(FooController.class)___fooController.saveFoo(1, null)__builder = MvcUriComponentsBuilder.fromMethodCall(fooController)___fooController.saveFoo(2, null)__builder = MvcUriComponentsBuilder.fromMethodCall(fooController)__</pre>_<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param controllerType the target controller;public static <T> T controller(Class<T> controllerType) {_		Assert.notNull(controllerType, "'controllerType' must not be null")__		return initProxy(controllerType, new ControllerMethodInvocationInterceptor(controllerType))__	};return,a,mock,controller,instance,when,an,code,request,mapping,method,on,the,controller,is,invoked,the,supplied,argument,values,are,remembered,and,the,result,can,then,be,used,to,create,code,uri,components,builder,via,link,from,method,call,object,p,this,is,a,longer,version,of,link,on,class,it,is,needed,with,controller,methods,returning,void,as,well,for,repeated,invocations,pre,class,code,foo,controller,foo,controller,controller,foo,controller,class,foo,controller,save,foo,1,null,builder,mvc,uri,components,builder,from,method,call,foo,controller,foo,controller,save,foo,2,null,builder,mvc,uri,components,builder,from,method,call,foo,controller,pre,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,controller,type,the,target,controller;public,static,t,t,controller,class,t,controller,type,assert,not,null,controller,type,controller,type,must,not,be,null,return,init,proxy,controller,type,new,controller,method,invocation,interceptor,controller,type
MvcUriComponentsBuilder -> public static <T> T controller(Class<T> controllerType);1529028426;Return a "mock" controller instance. When an {@code @RequestMapping} method_on the controller is invoked, the supplied argument values are remembered_and the result can then be used to create {@code UriComponentsBuilder} via_{@link #fromMethodCall(Object)}._<p>This is a longer version of {@link #on(Class)}. It is needed with controller_methods returning void as well for repeated invocations._<pre class="code">_FooController fooController = controller(FooController.class)___fooController.saveFoo(1, null)__builder = MvcUriComponentsBuilder.fromMethodCall(fooController)___fooController.saveFoo(2, null)__builder = MvcUriComponentsBuilder.fromMethodCall(fooController)__</pre>_<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param controllerType the target controller;public static <T> T controller(Class<T> controllerType) {_		Assert.notNull(controllerType, "'controllerType' must not be null")__		return ControllerMethodInvocationInterceptor.initProxy(controllerType, null)__	};return,a,mock,controller,instance,when,an,code,request,mapping,method,on,the,controller,is,invoked,the,supplied,argument,values,are,remembered,and,the,result,can,then,be,used,to,create,code,uri,components,builder,via,link,from,method,call,object,p,this,is,a,longer,version,of,link,on,class,it,is,needed,with,controller,methods,returning,void,as,well,for,repeated,invocations,pre,class,code,foo,controller,foo,controller,controller,foo,controller,class,foo,controller,save,foo,1,null,builder,mvc,uri,components,builder,from,method,call,foo,controller,foo,controller,save,foo,2,null,builder,mvc,uri,components,builder,from,method,call,foo,controller,pre,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,controller,type,the,target,controller;public,static,t,t,controller,class,t,controller,type,assert,not,null,controller,type,controller,type,must,not,be,null,return,controller,method,invocation,interceptor,init,proxy,controller,type,null
MvcUriComponentsBuilder -> public static <T> T controller(Class<T> controllerType);1529028426;Return a "mock" controller instance. When an {@code @RequestMapping} method_on the controller is invoked, the supplied argument values are remembered_and the result can then be used to create {@code UriComponentsBuilder} via_{@link #fromMethodCall(Object)}._<p>This is a longer version of {@link #on(Class)}. It is needed with controller_methods returning void as well for repeated invocations._<pre class="code">_FooController fooController = controller(FooController.class)___fooController.saveFoo(1, null)__builder = MvcUriComponentsBuilder.fromMethodCall(fooController)___fooController.saveFoo(2, null)__builder = MvcUriComponentsBuilder.fromMethodCall(fooController)__</pre>_<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param controllerType the target controller;public static <T> T controller(Class<T> controllerType) {_		Assert.notNull(controllerType, "'controllerType' must not be null")__		return ControllerMethodInvocationInterceptor.initProxy(controllerType, null)__	};return,a,mock,controller,instance,when,an,code,request,mapping,method,on,the,controller,is,invoked,the,supplied,argument,values,are,remembered,and,the,result,can,then,be,used,to,create,code,uri,components,builder,via,link,from,method,call,object,p,this,is,a,longer,version,of,link,on,class,it,is,needed,with,controller,methods,returning,void,as,well,for,repeated,invocations,pre,class,code,foo,controller,foo,controller,controller,foo,controller,class,foo,controller,save,foo,1,null,builder,mvc,uri,components,builder,from,method,call,foo,controller,foo,controller,save,foo,2,null,builder,mvc,uri,components,builder,from,method,call,foo,controller,pre,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,controller,type,the,target,controller;public,static,t,t,controller,class,t,controller,type,assert,not,null,controller,type,controller,type,must,not,be,null,return,controller,method,invocation,interceptor,init,proxy,controller,type,null
MvcUriComponentsBuilder -> public static <T> T controller(Class<T> controllerType);1529028713;Return a "mock" controller instance. When an {@code @RequestMapping} method_on the controller is invoked, the supplied argument values are remembered_and the result can then be used to create {@code UriComponentsBuilder} via_{@link #fromMethodCall(Object)}._<p>This is a longer version of {@link #on(Class)}. It is needed with controller_methods returning void as well for repeated invocations._<pre class="code">_FooController fooController = controller(FooController.class)___fooController.saveFoo(1, null)__builder = MvcUriComponentsBuilder.fromMethodCall(fooController)___fooController.saveFoo(2, null)__builder = MvcUriComponentsBuilder.fromMethodCall(fooController)__</pre>_<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param controllerType the target controller;public static <T> T controller(Class<T> controllerType) {_		Assert.notNull(controllerType, "'controllerType' must not be null")__		return ControllerMethodInvocationInterceptor.initProxy(controllerType, null)__	};return,a,mock,controller,instance,when,an,code,request,mapping,method,on,the,controller,is,invoked,the,supplied,argument,values,are,remembered,and,the,result,can,then,be,used,to,create,code,uri,components,builder,via,link,from,method,call,object,p,this,is,a,longer,version,of,link,on,class,it,is,needed,with,controller,methods,returning,void,as,well,for,repeated,invocations,pre,class,code,foo,controller,foo,controller,controller,foo,controller,class,foo,controller,save,foo,1,null,builder,mvc,uri,components,builder,from,method,call,foo,controller,foo,controller,save,foo,2,null,builder,mvc,uri,components,builder,from,method,call,foo,controller,pre,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,controller,type,the,target,controller;public,static,t,t,controller,class,t,controller,type,assert,not,null,controller,type,controller,type,must,not,be,null,return,controller,method,invocation,interceptor,init,proxy,controller,type,null
MvcUriComponentsBuilder -> public static <T> T controller(Class<T> controllerType);1529361191;Return a "mock" controller instance. When an {@code @RequestMapping} method_on the controller is invoked, the supplied argument values are remembered_and the result can then be used to create {@code UriComponentsBuilder} via_{@link #fromMethodCall(Object)}._<p>This is a longer version of {@link #on(Class)}. It is needed with controller_methods returning void as well for repeated invocations._<pre class="code">_FooController fooController = controller(FooController.class)___fooController.saveFoo(1, null)__builder = MvcUriComponentsBuilder.fromMethodCall(fooController)___fooController.saveFoo(2, null)__builder = MvcUriComponentsBuilder.fromMethodCall(fooController)__</pre>_<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param controllerType the target controller;public static <T> T controller(Class<T> controllerType) {_		Assert.notNull(controllerType, "'controllerType' must not be null")__		return ControllerMethodInvocationInterceptor.initProxy(controllerType, null)__	};return,a,mock,controller,instance,when,an,code,request,mapping,method,on,the,controller,is,invoked,the,supplied,argument,values,are,remembered,and,the,result,can,then,be,used,to,create,code,uri,components,builder,via,link,from,method,call,object,p,this,is,a,longer,version,of,link,on,class,it,is,needed,with,controller,methods,returning,void,as,well,for,repeated,invocations,pre,class,code,foo,controller,foo,controller,controller,foo,controller,class,foo,controller,save,foo,1,null,builder,mvc,uri,components,builder,from,method,call,foo,controller,foo,controller,save,foo,2,null,builder,mvc,uri,components,builder,from,method,call,foo,controller,pre,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,controller,type,the,target,controller;public,static,t,t,controller,class,t,controller,type,assert,not,null,controller,type,controller,type,must,not,be,null,return,controller,method,invocation,interceptor,init,proxy,controller,type,null
MvcUriComponentsBuilder -> public static <T> T controller(Class<T> controllerType);1530174524;Return a "mock" controller instance. When an {@code @RequestMapping} method_on the controller is invoked, the supplied argument values are remembered_and the result can then be used to create {@code UriComponentsBuilder} via_{@link #fromMethodCall(Object)}._<p>This is a longer version of {@link #on(Class)}. It is needed with controller_methods returning void as well for repeated invocations._<pre class="code">_FooController fooController = controller(FooController.class)___fooController.saveFoo(1, null)__builder = MvcUriComponentsBuilder.fromMethodCall(fooController)___fooController.saveFoo(2, null)__builder = MvcUriComponentsBuilder.fromMethodCall(fooController)__</pre>_<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param controllerType the target controller;public static <T> T controller(Class<T> controllerType) {_		Assert.notNull(controllerType, "'controllerType' must not be null")__		return ControllerMethodInvocationInterceptor.initProxy(controllerType, null)__	};return,a,mock,controller,instance,when,an,code,request,mapping,method,on,the,controller,is,invoked,the,supplied,argument,values,are,remembered,and,the,result,can,then,be,used,to,create,code,uri,components,builder,via,link,from,method,call,object,p,this,is,a,longer,version,of,link,on,class,it,is,needed,with,controller,methods,returning,void,as,well,for,repeated,invocations,pre,class,code,foo,controller,foo,controller,controller,foo,controller,class,foo,controller,save,foo,1,null,builder,mvc,uri,components,builder,from,method,call,foo,controller,foo,controller,save,foo,2,null,builder,mvc,uri,components,builder,from,method,call,foo,controller,pre,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,controller,type,the,target,controller;public,static,t,t,controller,class,t,controller,type,assert,not,null,controller,type,controller,type,must,not,be,null,return,controller,method,invocation,interceptor,init,proxy,controller,type,null
MvcUriComponentsBuilder -> public static <T> T controller(Class<T> controllerType);1532041662;Return a "mock" controller instance. When an {@code @RequestMapping} method_on the controller is invoked, the supplied argument values are remembered_and the result can then be used to create {@code UriComponentsBuilder} via_{@link #fromMethodCall(Object)}._<p>This is a longer version of {@link #on(Class)}. It is needed with controller_methods returning void as well for repeated invocations._<pre class="code">_FooController fooController = controller(FooController.class)___fooController.saveFoo(1, null)__builder = MvcUriComponentsBuilder.fromMethodCall(fooController)___fooController.saveFoo(2, null)__builder = MvcUriComponentsBuilder.fromMethodCall(fooController)__</pre>_<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param controllerType the target controller;public static <T> T controller(Class<T> controllerType) {_		Assert.notNull(controllerType, "'controllerType' must not be null")__		return ControllerMethodInvocationInterceptor.initProxy(controllerType, null)__	};return,a,mock,controller,instance,when,an,code,request,mapping,method,on,the,controller,is,invoked,the,supplied,argument,values,are,remembered,and,the,result,can,then,be,used,to,create,code,uri,components,builder,via,link,from,method,call,object,p,this,is,a,longer,version,of,link,on,class,it,is,needed,with,controller,methods,returning,void,as,well,for,repeated,invocations,pre,class,code,foo,controller,foo,controller,controller,foo,controller,class,foo,controller,save,foo,1,null,builder,mvc,uri,components,builder,from,method,call,foo,controller,foo,controller,save,foo,2,null,builder,mvc,uri,components,builder,from,method,call,foo,controller,pre,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,controller,type,the,target,controller;public,static,t,t,controller,class,t,controller,type,assert,not,null,controller,type,controller,type,must,not,be,null,return,controller,method,invocation,interceptor,init,proxy,controller,type,null
MvcUriComponentsBuilder -> public static <T> T controller(Class<T> controllerType);1532041662;Return a "mock" controller instance. When an {@code @RequestMapping} method_on the controller is invoked, the supplied argument values are remembered_and the result can then be used to create {@code UriComponentsBuilder} via_{@link #fromMethodCall(Object)}._<p>This is a longer version of {@link #on(Class)}. It is needed with controller_methods returning void as well for repeated invocations._<pre class="code">_FooController fooController = controller(FooController.class)___fooController.saveFoo(1, null)__builder = MvcUriComponentsBuilder.fromMethodCall(fooController)___fooController.saveFoo(2, null)__builder = MvcUriComponentsBuilder.fromMethodCall(fooController)__</pre>_<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param controllerType the target controller;public static <T> T controller(Class<T> controllerType) {_		Assert.notNull(controllerType, "'controllerType' must not be null")__		return ControllerMethodInvocationInterceptor.initProxy(controllerType, null)__	};return,a,mock,controller,instance,when,an,code,request,mapping,method,on,the,controller,is,invoked,the,supplied,argument,values,are,remembered,and,the,result,can,then,be,used,to,create,code,uri,components,builder,via,link,from,method,call,object,p,this,is,a,longer,version,of,link,on,class,it,is,needed,with,controller,methods,returning,void,as,well,for,repeated,invocations,pre,class,code,foo,controller,foo,controller,controller,foo,controller,class,foo,controller,save,foo,1,null,builder,mvc,uri,components,builder,from,method,call,foo,controller,foo,controller,save,foo,2,null,builder,mvc,uri,components,builder,from,method,call,foo,controller,pre,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,controller,type,the,target,controller;public,static,t,t,controller,class,t,controller,type,assert,not,null,controller,type,controller,type,must,not,be,null,return,controller,method,invocation,interceptor,init,proxy,controller,type,null
MvcUriComponentsBuilder -> public static <T> T controller(Class<T> controllerType);1548943222;Return a "mock" controller instance. When an {@code @RequestMapping} method_on the controller is invoked, the supplied argument values are remembered_and the result can then be used to create {@code UriComponentsBuilder} via_{@link #fromMethodCall(Object)}._<p>This is a longer version of {@link #on(Class)}. It is needed with controller_methods returning void as well for repeated invocations._<pre class="code">_FooController fooController = controller(FooController.class)___fooController.saveFoo(1, null)__builder = MvcUriComponentsBuilder.fromMethodCall(fooController)___fooController.saveFoo(2, null)__builder = MvcUriComponentsBuilder.fromMethodCall(fooController)__</pre>_<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param controllerType the target controller;public static <T> T controller(Class<T> controllerType) {_		Assert.notNull(controllerType, "'controllerType' must not be null")__		return ControllerMethodInvocationInterceptor.initProxy(controllerType, null)__	};return,a,mock,controller,instance,when,an,code,request,mapping,method,on,the,controller,is,invoked,the,supplied,argument,values,are,remembered,and,the,result,can,then,be,used,to,create,code,uri,components,builder,via,link,from,method,call,object,p,this,is,a,longer,version,of,link,on,class,it,is,needed,with,controller,methods,returning,void,as,well,for,repeated,invocations,pre,class,code,foo,controller,foo,controller,controller,foo,controller,class,foo,controller,save,foo,1,null,builder,mvc,uri,components,builder,from,method,call,foo,controller,foo,controller,save,foo,2,null,builder,mvc,uri,components,builder,from,method,call,foo,controller,pre,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,controller,type,the,target,controller;public,static,t,t,controller,class,t,controller,type,assert,not,null,controller,type,controller,type,must,not,be,null,return,controller,method,invocation,interceptor,init,proxy,controller,type,null
MvcUriComponentsBuilder -> public UriComponentsBuilder withMethodName(Class<?> controllerType, String methodName, Object... args);1429801417;An alternative to {@link #fromMethodName(Class, String, Object...)}} for_use with an instance of this class created via {@link #relativeTo}.;public UriComponentsBuilder withMethodName(Class<?> controllerType, String methodName, Object... args) {_		return fromMethodName(this.baseUrl, controllerType, methodName, args)__	};an,alternative,to,link,from,method,name,class,string,object,for,use,with,an,instance,of,this,class,created,via,link,relative,to;public,uri,components,builder,with,method,name,class,controller,type,string,method,name,object,args,return,from,method,name,this,base,url,controller,type,method,name,args
MvcUriComponentsBuilder -> public UriComponentsBuilder withMethodName(Class<?> controllerType, String methodName, Object... args);1429801944;An alternative to {@link #fromMethodName(Class, String, Object...)}} for_use with an instance of this class created via {@link #relativeTo}.;public UriComponentsBuilder withMethodName(Class<?> controllerType, String methodName, Object... args) {_		return fromMethodName(this.baseUrl, controllerType, methodName, args)__	};an,alternative,to,link,from,method,name,class,string,object,for,use,with,an,instance,of,this,class,created,via,link,relative,to;public,uri,components,builder,with,method,name,class,controller,type,string,method,name,object,args,return,from,method,name,this,base,url,controller,type,method,name,args
MvcUriComponentsBuilder -> public UriComponentsBuilder withMethodName(Class<?> controllerType, String methodName, Object... args);1429802180;An alternative to {@link #fromMethodName(Class, String, Object...)}} for_use with an instance of this class created via {@link #relativeTo}.;public UriComponentsBuilder withMethodName(Class<?> controllerType, String methodName, Object... args) {_		return fromMethodName(this.baseUrl, controllerType, methodName, args)__	};an,alternative,to,link,from,method,name,class,string,object,for,use,with,an,instance,of,this,class,created,via,link,relative,to;public,uri,components,builder,with,method,name,class,controller,type,string,method,name,object,args,return,from,method,name,this,base,url,controller,type,method,name,args
MvcUriComponentsBuilder -> public UriComponentsBuilder withMethodName(Class<?> controllerType, String methodName, Object... args);1429886024;An alternative to {@link #fromMethodName(Class, String, Object...)}} for_use with an instance of this class created via {@link #relativeTo}.;public UriComponentsBuilder withMethodName(Class<?> controllerType, String methodName, Object... args) {_		return fromMethodName(this.baseUrl, controllerType, methodName, args)__	};an,alternative,to,link,from,method,name,class,string,object,for,use,with,an,instance,of,this,class,created,via,link,relative,to;public,uri,components,builder,with,method,name,class,controller,type,string,method,name,object,args,return,from,method,name,this,base,url,controller,type,method,name,args
MvcUriComponentsBuilder -> public UriComponentsBuilder withMethodName(Class<?> controllerType, String methodName, Object... args);1429888980;An alternative to {@link #fromMethodName(Class, String, Object...)}} for_use with an instance of this class created via {@link #relativeTo}.;public UriComponentsBuilder withMethodName(Class<?> controllerType, String methodName, Object... args) {_		return fromMethodName(this.baseUrl, controllerType, methodName, args)__	};an,alternative,to,link,from,method,name,class,string,object,for,use,with,an,instance,of,this,class,created,via,link,relative,to;public,uri,components,builder,with,method,name,class,controller,type,string,method,name,object,args,return,from,method,name,this,base,url,controller,type,method,name,args
MvcUriComponentsBuilder -> public UriComponentsBuilder withMethodName(Class<?> controllerType, String methodName, Object... args);1430739806;An alternative to {@link #fromMethodName(Class, String, Object...)}} for_use with an instance of this class created via {@link #relativeTo}.;public UriComponentsBuilder withMethodName(Class<?> controllerType, String methodName, Object... args) {_		return fromMethodName(this.baseUrl, controllerType, methodName, args)__	};an,alternative,to,link,from,method,name,class,string,object,for,use,with,an,instance,of,this,class,created,via,link,relative,to;public,uri,components,builder,with,method,name,class,controller,type,string,method,name,object,args,return,from,method,name,this,base,url,controller,type,method,name,args
MvcUriComponentsBuilder -> public UriComponentsBuilder withMethodName(Class<?> controllerType, String methodName, Object... args);1430747547;An alternative to {@link #fromMethodName(Class, String, Object...)}} for_use with an instance of this class created via {@link #relativeTo}.;public UriComponentsBuilder withMethodName(Class<?> controllerType, String methodName, Object... args) {_		return fromMethodName(this.baseUrl, controllerType, methodName, args)__	};an,alternative,to,link,from,method,name,class,string,object,for,use,with,an,instance,of,this,class,created,via,link,relative,to;public,uri,components,builder,with,method,name,class,controller,type,string,method,name,object,args,return,from,method,name,this,base,url,controller,type,method,name,args
MvcUriComponentsBuilder -> public UriComponentsBuilder withMethodName(Class<?> controllerType, String methodName, Object... args);1430749606;An alternative to {@link #fromMethodName(Class, String, Object...)}} for_use with an instance of this class created via {@link #relativeTo}.;public UriComponentsBuilder withMethodName(Class<?> controllerType, String methodName, Object... args) {_		return fromMethodName(this.baseUrl, controllerType, methodName, args)__	};an,alternative,to,link,from,method,name,class,string,object,for,use,with,an,instance,of,this,class,created,via,link,relative,to;public,uri,components,builder,with,method,name,class,controller,type,string,method,name,object,args,return,from,method,name,this,base,url,controller,type,method,name,args
MvcUriComponentsBuilder -> public UriComponentsBuilder withMethodName(Class<?> controllerType, String methodName, Object... args);1431975386;An alternative to {@link #fromMethodName(Class, String, Object...)}} for_use with an instance of this class created via {@link #relativeTo}.;public UriComponentsBuilder withMethodName(Class<?> controllerType, String methodName, Object... args) {_		return fromMethodName(this.baseUrl, controllerType, methodName, args)__	};an,alternative,to,link,from,method,name,class,string,object,for,use,with,an,instance,of,this,class,created,via,link,relative,to;public,uri,components,builder,with,method,name,class,controller,type,string,method,name,object,args,return,from,method,name,this,base,url,controller,type,method,name,args
MvcUriComponentsBuilder -> public UriComponentsBuilder withMethodName(Class<?> controllerType, String methodName, Object... args);1432125256;An alternative to {@link #fromMethodName(Class, String, Object...)}} for_use with an instance of this class created via {@link #relativeTo}.;public UriComponentsBuilder withMethodName(Class<?> controllerType, String methodName, Object... args) {_		return fromMethodName(this.baseUrl, controllerType, methodName, args)__	};an,alternative,to,link,from,method,name,class,string,object,for,use,with,an,instance,of,this,class,created,via,link,relative,to;public,uri,components,builder,with,method,name,class,controller,type,string,method,name,object,args,return,from,method,name,this,base,url,controller,type,method,name,args
MvcUriComponentsBuilder -> public UriComponentsBuilder withMethodName(Class<?> controllerType, String methodName, Object... args);1432156007;An alternative to {@link #fromMethodName(Class, String, Object...)}} for_use with an instance of this class created via {@link #relativeTo}.;public UriComponentsBuilder withMethodName(Class<?> controllerType, String methodName, Object... args) {_		return fromMethodName(this.baseUrl, controllerType, methodName, args)__	};an,alternative,to,link,from,method,name,class,string,object,for,use,with,an,instance,of,this,class,created,via,link,relative,to;public,uri,components,builder,with,method,name,class,controller,type,string,method,name,object,args,return,from,method,name,this,base,url,controller,type,method,name,args
MvcUriComponentsBuilder -> public UriComponentsBuilder withMethodName(Class<?> controllerType, String methodName, Object... args);1432856630;An alternative to {@link #fromMethodName(Class, String, Object...)}} for_use with an instance of this class created via {@link #relativeTo}.;public UriComponentsBuilder withMethodName(Class<?> controllerType, String methodName, Object... args) {_		return fromMethodName(this.baseUrl, controllerType, methodName, args)__	};an,alternative,to,link,from,method,name,class,string,object,for,use,with,an,instance,of,this,class,created,via,link,relative,to;public,uri,components,builder,with,method,name,class,controller,type,string,method,name,object,args,return,from,method,name,this,base,url,controller,type,method,name,args
MvcUriComponentsBuilder -> public UriComponentsBuilder withMethodName(Class<?> controllerType, String methodName, Object... args);1432857824;An alternative to {@link #fromMethodName(Class, String, Object...)}} for_use with an instance of this class created via {@link #relativeTo}.;public UriComponentsBuilder withMethodName(Class<?> controllerType, String methodName, Object... args) {_		return fromMethodName(this.baseUrl, controllerType, methodName, args)__	};an,alternative,to,link,from,method,name,class,string,object,for,use,with,an,instance,of,this,class,created,via,link,relative,to;public,uri,components,builder,with,method,name,class,controller,type,string,method,name,object,args,return,from,method,name,this,base,url,controller,type,method,name,args
MvcUriComponentsBuilder -> public UriComponentsBuilder withMethodName(Class<?> controllerType, String methodName, Object... args);1434234880;An alternative to {@link #fromMethodName(Class, String, Object...)}} for_use with an instance of this class created via {@link #relativeTo}.;public UriComponentsBuilder withMethodName(Class<?> controllerType, String methodName, Object... args) {_		return fromMethodName(this.baseUrl, controllerType, methodName, args)__	};an,alternative,to,link,from,method,name,class,string,object,for,use,with,an,instance,of,this,class,created,via,link,relative,to;public,uri,components,builder,with,method,name,class,controller,type,string,method,name,object,args,return,from,method,name,this,base,url,controller,type,method,name,args
MvcUriComponentsBuilder -> public UriComponentsBuilder withMethodName(Class<?> controllerType, String methodName, Object... args);1434484897;An alternative to {@link #fromMethodName(Class, String, Object...)}} for_use with an instance of this class created via {@link #relativeTo}.;public UriComponentsBuilder withMethodName(Class<?> controllerType, String methodName, Object... args) {_		return fromMethodName(this.baseUrl, controllerType, methodName, args)__	};an,alternative,to,link,from,method,name,class,string,object,for,use,with,an,instance,of,this,class,created,via,link,relative,to;public,uri,components,builder,with,method,name,class,controller,type,string,method,name,object,args,return,from,method,name,this,base,url,controller,type,method,name,args
MvcUriComponentsBuilder -> public UriComponentsBuilder withMethodName(Class<?> controllerType, String methodName, Object... args);1434726592;An alternative to {@link #fromMethodName(Class, String, Object...)}} for_use with an instance of this class created via {@link #relativeTo}.;public UriComponentsBuilder withMethodName(Class<?> controllerType, String methodName, Object... args) {_		return fromMethodName(this.baseUrl, controllerType, methodName, args)__	};an,alternative,to,link,from,method,name,class,string,object,for,use,with,an,instance,of,this,class,created,via,link,relative,to;public,uri,components,builder,with,method,name,class,controller,type,string,method,name,object,args,return,from,method,name,this,base,url,controller,type,method,name,args
MvcUriComponentsBuilder -> public UriComponentsBuilder withMethodName(Class<?> controllerType, String methodName, Object... args);1435615322;An alternative to {@link #fromMethodName(Class, String, Object...)}} for_use with an instance of this class created via {@link #relativeTo}.;public UriComponentsBuilder withMethodName(Class<?> controllerType, String methodName, Object... args) {_		return fromMethodName(this.baseUrl, controllerType, methodName, args)__	};an,alternative,to,link,from,method,name,class,string,object,for,use,with,an,instance,of,this,class,created,via,link,relative,to;public,uri,components,builder,with,method,name,class,controller,type,string,method,name,object,args,return,from,method,name,this,base,url,controller,type,method,name,args
MvcUriComponentsBuilder -> public UriComponentsBuilder withMethodName(Class<?> controllerType, String methodName, Object... args);1439294371;An alternative to {@link #fromMethodName(Class, String, Object...)}} for_use with an instance of this class created via {@link #relativeTo}._@since 4.2;public UriComponentsBuilder withMethodName(Class<?> controllerType, String methodName, Object... args) {_		return fromMethodName(this.baseUrl, controllerType, methodName, args)__	};an,alternative,to,link,from,method,name,class,string,object,for,use,with,an,instance,of,this,class,created,via,link,relative,to,since,4,2;public,uri,components,builder,with,method,name,class,controller,type,string,method,name,object,args,return,from,method,name,this,base,url,controller,type,method,name,args
MvcUriComponentsBuilder -> public UriComponentsBuilder withMethodName(Class<?> controllerType, String methodName, Object... args);1447077465;An alternative to {@link #fromMethodName(Class, String, Object...)}} for_use with an instance of this class created via {@link #relativeTo}._@since 4.2;public UriComponentsBuilder withMethodName(Class<?> controllerType, String methodName, Object... args) {_		return fromMethodName(this.baseUrl, controllerType, methodName, args)__	};an,alternative,to,link,from,method,name,class,string,object,for,use,with,an,instance,of,this,class,created,via,link,relative,to,since,4,2;public,uri,components,builder,with,method,name,class,controller,type,string,method,name,object,args,return,from,method,name,this,base,url,controller,type,method,name,args
MvcUriComponentsBuilder -> public UriComponentsBuilder withMethodName(Class<?> controllerType, String methodName, Object... args);1458830024;An alternative to {@link #fromMethodName(Class, String, Object...)}} for_use with an instance of this class created via {@link #relativeTo}._@since 4.2;public UriComponentsBuilder withMethodName(Class<?> controllerType, String methodName, Object... args) {_		return fromMethodName(this.baseUrl, controllerType, methodName, args)__	};an,alternative,to,link,from,method,name,class,string,object,for,use,with,an,instance,of,this,class,created,via,link,relative,to,since,4,2;public,uri,components,builder,with,method,name,class,controller,type,string,method,name,object,args,return,from,method,name,this,base,url,controller,type,method,name,args
MvcUriComponentsBuilder -> public UriComponentsBuilder withMethodName(Class<?> controllerType, String methodName, Object... args);1461047077;An alternative to {@link #fromMethodName(Class, String, Object...)}} for_use with an instance of this class created via {@link #relativeTo}._@since 4.2;public UriComponentsBuilder withMethodName(Class<?> controllerType, String methodName, Object... args) {_		return fromMethodName(this.baseUrl, controllerType, methodName, args)__	};an,alternative,to,link,from,method,name,class,string,object,for,use,with,an,instance,of,this,class,created,via,link,relative,to,since,4,2;public,uri,components,builder,with,method,name,class,controller,type,string,method,name,object,args,return,from,method,name,this,base,url,controller,type,method,name,args
MvcUriComponentsBuilder -> public UriComponentsBuilder withMethodName(Class<?> controllerType, String methodName, Object... args);1467677340;An alternative to {@link #fromMethodName(Class, String, Object...)}} for_use with an instance of this class created via {@link #relativeTo}._@since 4.2;public UriComponentsBuilder withMethodName(Class<?> controllerType, String methodName, Object... args) {_		return fromMethodName(this.baseUrl, controllerType, methodName, args)__	};an,alternative,to,link,from,method,name,class,string,object,for,use,with,an,instance,of,this,class,created,via,link,relative,to,since,4,2;public,uri,components,builder,with,method,name,class,controller,type,string,method,name,object,args,return,from,method,name,this,base,url,controller,type,method,name,args
MvcUriComponentsBuilder -> public UriComponentsBuilder withMethodName(Class<?> controllerType, String methodName, Object... args);1467726769;An alternative to {@link #fromMethodName(Class, String, Object...)}} for_use with an instance of this class created via {@link #relativeTo}._@since 4.2;public UriComponentsBuilder withMethodName(Class<?> controllerType, String methodName, Object... args) {_		return fromMethodName(this.baseUrl, controllerType, methodName, args)__	};an,alternative,to,link,from,method,name,class,string,object,for,use,with,an,instance,of,this,class,created,via,link,relative,to,since,4,2;public,uri,components,builder,with,method,name,class,controller,type,string,method,name,object,args,return,from,method,name,this,base,url,controller,type,method,name,args
MvcUriComponentsBuilder -> public UriComponentsBuilder withMethodName(Class<?> controllerType, String methodName, Object... args);1467730834;An alternative to {@link #fromMethodName(Class, String, Object...)}} for_use with an instance of this class created via {@link #relativeTo}._@since 4.2;public UriComponentsBuilder withMethodName(Class<?> controllerType, String methodName, Object... args) {_		return fromMethodName(this.baseUrl, controllerType, methodName, args)__	};an,alternative,to,link,from,method,name,class,string,object,for,use,with,an,instance,of,this,class,created,via,link,relative,to,since,4,2;public,uri,components,builder,with,method,name,class,controller,type,string,method,name,object,args,return,from,method,name,this,base,url,controller,type,method,name,args
MvcUriComponentsBuilder -> public UriComponentsBuilder withMethodName(Class<?> controllerType, String methodName, Object... args);1467846264;An alternative to {@link #fromMethodName(Class, String, Object...)}} for_use with an instance of this class created via {@link #relativeTo}._@since 4.2;public UriComponentsBuilder withMethodName(Class<?> controllerType, String methodName, Object... args) {_		return fromMethodName(this.baseUrl, controllerType, methodName, args)__	};an,alternative,to,link,from,method,name,class,string,object,for,use,with,an,instance,of,this,class,created,via,link,relative,to,since,4,2;public,uri,components,builder,with,method,name,class,controller,type,string,method,name,object,args,return,from,method,name,this,base,url,controller,type,method,name,args
MvcUriComponentsBuilder -> public UriComponentsBuilder withMethodName(Class<?> controllerType, String methodName, Object... args);1468613531;An alternative to {@link #fromMethodName(Class, String, Object...)}} for_use with an instance of this class created via {@link #relativeTo}._@since 4.2;public UriComponentsBuilder withMethodName(Class<?> controllerType, String methodName, Object... args) {_		return fromMethodName(this.baseUrl, controllerType, methodName, args)__	};an,alternative,to,link,from,method,name,class,string,object,for,use,with,an,instance,of,this,class,created,via,link,relative,to,since,4,2;public,uri,components,builder,with,method,name,class,controller,type,string,method,name,object,args,return,from,method,name,this,base,url,controller,type,method,name,args
MvcUriComponentsBuilder -> public UriComponentsBuilder withMethodName(Class<?> controllerType, String methodName, Object... args);1468948866;An alternative to {@link #fromMethodName(Class, String, Object...)}} for_use with an instance of this class created via {@link #relativeTo}._@since 4.2;public UriComponentsBuilder withMethodName(Class<?> controllerType, String methodName, Object... args) {_		return fromMethodName(this.baseUrl, controllerType, methodName, args)__	};an,alternative,to,link,from,method,name,class,string,object,for,use,with,an,instance,of,this,class,created,via,link,relative,to,since,4,2;public,uri,components,builder,with,method,name,class,controller,type,string,method,name,object,args,return,from,method,name,this,base,url,controller,type,method,name,args
MvcUriComponentsBuilder -> public UriComponentsBuilder withMethodName(Class<?> controllerType, String methodName, Object... args);1485810955;An alternative to {@link #fromMethodName(Class, String, Object...)}} for_use with an instance of this class created via {@link #relativeTo}._@since 4.2;public UriComponentsBuilder withMethodName(Class<?> controllerType, String methodName, Object... args) {_		return fromMethodName(this.baseUrl, controllerType, methodName, args)__	};an,alternative,to,link,from,method,name,class,string,object,for,use,with,an,instance,of,this,class,created,via,link,relative,to,since,4,2;public,uri,components,builder,with,method,name,class,controller,type,string,method,name,object,args,return,from,method,name,this,base,url,controller,type,method,name,args
MvcUriComponentsBuilder -> public UriComponentsBuilder withMethodName(Class<?> controllerType, String methodName, Object... args);1486634978;An alternative to {@link #fromMethodName(Class, String, Object...)}} for_use with an instance of this class created via {@link #relativeTo}._@since 4.2;public UriComponentsBuilder withMethodName(Class<?> controllerType, String methodName, Object... args) {_		return fromMethodName(this.baseUrl, controllerType, methodName, args)__	};an,alternative,to,link,from,method,name,class,string,object,for,use,with,an,instance,of,this,class,created,via,link,relative,to,since,4,2;public,uri,components,builder,with,method,name,class,controller,type,string,method,name,object,args,return,from,method,name,this,base,url,controller,type,method,name,args
MvcUriComponentsBuilder -> public UriComponentsBuilder withMethodName(Class<?> controllerType, String methodName, Object... args);1486635693;An alternative to {@link #fromMethodName(Class, String, Object...)}} for_use with an instance of this class created via {@link #relativeTo}._@since 4.2;public UriComponentsBuilder withMethodName(Class<?> controllerType, String methodName, Object... args) {_		return fromMethodName(this.baseUrl, controllerType, methodName, args)__	};an,alternative,to,link,from,method,name,class,string,object,for,use,with,an,instance,of,this,class,created,via,link,relative,to,since,4,2;public,uri,components,builder,with,method,name,class,controller,type,string,method,name,object,args,return,from,method,name,this,base,url,controller,type,method,name,args
MvcUriComponentsBuilder -> public UriComponentsBuilder withMethodName(Class<?> controllerType, String methodName, Object... args);1495868221;An alternative to {@link #fromMethodName(Class, String, Object...)}} for_use with an instance of this class created via {@link #relativeTo}._@since 4.2;public UriComponentsBuilder withMethodName(Class<?> controllerType, String methodName, Object... args) {_		return fromMethodName(this.baseUrl, controllerType, methodName, args)__	};an,alternative,to,link,from,method,name,class,string,object,for,use,with,an,instance,of,this,class,created,via,link,relative,to,since,4,2;public,uri,components,builder,with,method,name,class,controller,type,string,method,name,object,args,return,from,method,name,this,base,url,controller,type,method,name,args
MvcUriComponentsBuilder -> public UriComponentsBuilder withMethodName(Class<?> controllerType, String methodName, Object... args);1496242568;An alternative to {@link #fromMethodName(Class, String, Object...)}} for_use with an instance of this class created via {@link #relativeTo}._@since 4.2;public UriComponentsBuilder withMethodName(Class<?> controllerType, String methodName, Object... args) {_		return fromMethodName(this.baseUrl, controllerType, methodName, args)__	};an,alternative,to,link,from,method,name,class,string,object,for,use,with,an,instance,of,this,class,created,via,link,relative,to,since,4,2;public,uri,components,builder,with,method,name,class,controller,type,string,method,name,object,args,return,from,method,name,this,base,url,controller,type,method,name,args
MvcUriComponentsBuilder -> public UriComponentsBuilder withMethodName(Class<?> controllerType, String methodName, Object... args);1496259743;An alternative to {@link #fromMethodName(Class, String, Object...)}} for_use with an instance of this class created via {@link #relativeTo}._@since 4.2;public UriComponentsBuilder withMethodName(Class<?> controllerType, String methodName, Object... args) {_		return fromMethodName(this.baseUrl, controllerType, methodName, args)__	};an,alternative,to,link,from,method,name,class,string,object,for,use,with,an,instance,of,this,class,created,via,link,relative,to,since,4,2;public,uri,components,builder,with,method,name,class,controller,type,string,method,name,object,args,return,from,method,name,this,base,url,controller,type,method,name,args
MvcUriComponentsBuilder -> public UriComponentsBuilder withMethodName(Class<?> controllerType, String methodName, Object... args);1496370972;An alternative to {@link #fromMethodName(Class, String, Object...)}} for_use with an instance of this class created via {@link #relativeTo}._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@since 4.2;public UriComponentsBuilder withMethodName(Class<?> controllerType, String methodName, Object... args) {_		return fromMethodName(this.baseUrl, controllerType, methodName, args)__	};an,alternative,to,link,from,method,name,class,string,object,for,use,with,an,instance,of,this,class,created,via,link,relative,to,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,since,4,2;public,uri,components,builder,with,method,name,class,controller,type,string,method,name,object,args,return,from,method,name,this,base,url,controller,type,method,name,args
MvcUriComponentsBuilder -> public UriComponentsBuilder withMethodName(Class<?> controllerType, String methodName, Object... args);1496837955;An alternative to {@link #fromMethodName(Class, String, Object...)}} for_use with an instance of this class created via {@link #relativeTo}._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@since 4.2;public UriComponentsBuilder withMethodName(Class<?> controllerType, String methodName, Object... args) {_		return fromMethodName(this.baseUrl, controllerType, methodName, args)__	};an,alternative,to,link,from,method,name,class,string,object,for,use,with,an,instance,of,this,class,created,via,link,relative,to,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,since,4,2;public,uri,components,builder,with,method,name,class,controller,type,string,method,name,object,args,return,from,method,name,this,base,url,controller,type,method,name,args
MvcUriComponentsBuilder -> public UriComponentsBuilder withMethodName(Class<?> controllerType, String methodName, Object... args);1497341397;An alternative to {@link #fromMethodName(Class, String, Object...)}} for_use with an instance of this class created via {@link #relativeTo}._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@since 4.2;public UriComponentsBuilder withMethodName(Class<?> controllerType, String methodName, Object... args) {_		return fromMethodName(this.baseUrl, controllerType, methodName, args)__	};an,alternative,to,link,from,method,name,class,string,object,for,use,with,an,instance,of,this,class,created,via,link,relative,to,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,since,4,2;public,uri,components,builder,with,method,name,class,controller,type,string,method,name,object,args,return,from,method,name,this,base,url,controller,type,method,name,args
MvcUriComponentsBuilder -> public UriComponentsBuilder withMethodName(Class<?> controllerType, String methodName, Object... args);1498780456;An alternative to {@link #fromMethodName(Class, String, Object...)}} for_use with an instance of this class created via {@link #relativeTo}._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@since 4.2;public UriComponentsBuilder withMethodName(Class<?> controllerType, String methodName, Object... args) {_		return fromMethodName(this.baseUrl, controllerType, methodName, args)__	};an,alternative,to,link,from,method,name,class,string,object,for,use,with,an,instance,of,this,class,created,via,link,relative,to,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,since,4,2;public,uri,components,builder,with,method,name,class,controller,type,string,method,name,object,args,return,from,method,name,this,base,url,controller,type,method,name,args
MvcUriComponentsBuilder -> public UriComponentsBuilder withMethodName(Class<?> controllerType, String methodName, Object... args);1500416137;An alternative to {@link #fromMethodName(Class, String, Object...)}} for_use with an instance of this class created via {@link #relativeTo}._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@since 4.2;public UriComponentsBuilder withMethodName(Class<?> controllerType, String methodName, Object... args) {_		return fromMethodName(this.baseUrl, controllerType, methodName, args)__	};an,alternative,to,link,from,method,name,class,string,object,for,use,with,an,instance,of,this,class,created,via,link,relative,to,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,since,4,2;public,uri,components,builder,with,method,name,class,controller,type,string,method,name,object,args,return,from,method,name,this,base,url,controller,type,method,name,args
MvcUriComponentsBuilder -> public UriComponentsBuilder withMethodName(Class<?> controllerType, String methodName, Object... args);1506097334;An alternative to {@link #fromMethodName(Class, String, Object...)}} for_use with an instance of this class created via {@link #relativeTo}._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@since 4.2;public UriComponentsBuilder withMethodName(Class<?> controllerType, String methodName, Object... args) {_		return fromMethodName(this.baseUrl, controllerType, methodName, args)__	};an,alternative,to,link,from,method,name,class,string,object,for,use,with,an,instance,of,this,class,created,via,link,relative,to,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,since,4,2;public,uri,components,builder,with,method,name,class,controller,type,string,method,name,object,args,return,from,method,name,this,base,url,controller,type,method,name,args
MvcUriComponentsBuilder -> public UriComponentsBuilder withMethodName(Class<?> controllerType, String methodName, Object... args);1518770299;An alternative to {@link #fromMethodName(Class, String, Object...)}} for_use with an instance of this class created via {@link #relativeTo}._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@since 4.2;public UriComponentsBuilder withMethodName(Class<?> controllerType, String methodName, Object... args) {_		return fromMethodName(this.baseUrl, controllerType, methodName, args)__	};an,alternative,to,link,from,method,name,class,string,object,for,use,with,an,instance,of,this,class,created,via,link,relative,to,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,since,4,2;public,uri,components,builder,with,method,name,class,controller,type,string,method,name,object,args,return,from,method,name,this,base,url,controller,type,method,name,args
MvcUriComponentsBuilder -> public UriComponentsBuilder withMethodName(Class<?> controllerType, String methodName, Object... args);1522354261;An alternative to {@link #fromMethodName(Class, String, Object...)}} for_use with an instance of this class created via {@link #relativeTo}._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@since 4.2;public UriComponentsBuilder withMethodName(Class<?> controllerType, String methodName, Object... args) {_		return fromMethodName(this.baseUrl, controllerType, methodName, args)__	};an,alternative,to,link,from,method,name,class,string,object,for,use,with,an,instance,of,this,class,created,via,link,relative,to,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,since,4,2;public,uri,components,builder,with,method,name,class,controller,type,string,method,name,object,args,return,from,method,name,this,base,url,controller,type,method,name,args
MvcUriComponentsBuilder -> public UriComponentsBuilder withMethodName(Class<?> controllerType, String methodName, Object... args);1523455554;An alternative to {@link #fromMethodName(Class, String, Object...)}} for_use with an instance of this class created via {@link #relativeTo}._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@since 4.2;public UriComponentsBuilder withMethodName(Class<?> controllerType, String methodName, Object... args) {_		return fromMethodName(this.baseUrl, controllerType, methodName, args)__	};an,alternative,to,link,from,method,name,class,string,object,for,use,with,an,instance,of,this,class,created,via,link,relative,to,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,since,4,2;public,uri,components,builder,with,method,name,class,controller,type,string,method,name,object,args,return,from,method,name,this,base,url,controller,type,method,name,args
MvcUriComponentsBuilder -> public UriComponentsBuilder withMethodName(Class<?> controllerType, String methodName, Object... args);1529028426;An alternative to {@link #fromMethodName(Class, String, Object...)}} for_use with an instance of this class created via {@link #relativeTo}._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@since 4.2;public UriComponentsBuilder withMethodName(Class<?> controllerType, String methodName, Object... args) {_		return fromMethodName(this.baseUrl, controllerType, methodName, args)__	};an,alternative,to,link,from,method,name,class,string,object,for,use,with,an,instance,of,this,class,created,via,link,relative,to,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,since,4,2;public,uri,components,builder,with,method,name,class,controller,type,string,method,name,object,args,return,from,method,name,this,base,url,controller,type,method,name,args
MvcUriComponentsBuilder -> public UriComponentsBuilder withMethodName(Class<?> controllerType, String methodName, Object... args);1529028426;An alternative to {@link #fromMethodName(Class, String, Object...)}} for_use with an instance of this class created via {@link #relativeTo}._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@since 4.2;public UriComponentsBuilder withMethodName(Class<?> controllerType, String methodName, Object... args) {_		return fromMethodName(this.baseUrl, controllerType, methodName, args)__	};an,alternative,to,link,from,method,name,class,string,object,for,use,with,an,instance,of,this,class,created,via,link,relative,to,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,since,4,2;public,uri,components,builder,with,method,name,class,controller,type,string,method,name,object,args,return,from,method,name,this,base,url,controller,type,method,name,args
MvcUriComponentsBuilder -> public UriComponentsBuilder withMethodName(Class<?> controllerType, String methodName, Object... args);1529028713;An alternative to {@link #fromMethodName(Class, String, Object...)}} for_use with an instance of this class created via {@link #relativeTo}._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@since 4.2;public UriComponentsBuilder withMethodName(Class<?> controllerType, String methodName, Object... args) {_		return fromMethodName(this.baseUrl, controllerType, methodName, args)__	};an,alternative,to,link,from,method,name,class,string,object,for,use,with,an,instance,of,this,class,created,via,link,relative,to,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,since,4,2;public,uri,components,builder,with,method,name,class,controller,type,string,method,name,object,args,return,from,method,name,this,base,url,controller,type,method,name,args
MvcUriComponentsBuilder -> public UriComponentsBuilder withMethodName(Class<?> controllerType, String methodName, Object... args);1529361191;An alternative to {@link #fromMethodName(Class, String, Object...)}} for_use with an instance of this class created via {@link #relativeTo}._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@since 4.2;public UriComponentsBuilder withMethodName(Class<?> controllerType, String methodName, Object... args) {_		return fromMethodName(this.baseUrl, controllerType, methodName, args)__	};an,alternative,to,link,from,method,name,class,string,object,for,use,with,an,instance,of,this,class,created,via,link,relative,to,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,since,4,2;public,uri,components,builder,with,method,name,class,controller,type,string,method,name,object,args,return,from,method,name,this,base,url,controller,type,method,name,args
MvcUriComponentsBuilder -> public UriComponentsBuilder withMethodName(Class<?> controllerType, String methodName, Object... args);1530174524;An alternative to {@link #fromMethodName(Class, String, Object...)}} for_use with an instance of this class created via {@link #relativeTo}._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@since 4.2;public UriComponentsBuilder withMethodName(Class<?> controllerType, String methodName, Object... args) {_		return fromMethodName(this.baseUrl, controllerType, methodName, args)__	};an,alternative,to,link,from,method,name,class,string,object,for,use,with,an,instance,of,this,class,created,via,link,relative,to,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,since,4,2;public,uri,components,builder,with,method,name,class,controller,type,string,method,name,object,args,return,from,method,name,this,base,url,controller,type,method,name,args
MvcUriComponentsBuilder -> public UriComponentsBuilder withMethodName(Class<?> controllerType, String methodName, Object... args);1532041662;An alternative to {@link #fromMethodName(Class, String, Object...)}} for_use with an instance of this class created via {@link #relativeTo}._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@since 4.2;public UriComponentsBuilder withMethodName(Class<?> controllerType, String methodName, Object... args) {_		return fromMethodName(this.baseUrl, controllerType, methodName, args)__	};an,alternative,to,link,from,method,name,class,string,object,for,use,with,an,instance,of,this,class,created,via,link,relative,to,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,since,4,2;public,uri,components,builder,with,method,name,class,controller,type,string,method,name,object,args,return,from,method,name,this,base,url,controller,type,method,name,args
MvcUriComponentsBuilder -> public UriComponentsBuilder withMethodName(Class<?> controllerType, String methodName, Object... args);1532041662;An alternative to {@link #fromMethodName(Class, String, Object...)}} for_use with an instance of this class created via {@link #relativeTo}._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@since 4.2;public UriComponentsBuilder withMethodName(Class<?> controllerType, String methodName, Object... args) {_		return fromMethodName(this.baseUrl, controllerType, methodName, args)__	};an,alternative,to,link,from,method,name,class,string,object,for,use,with,an,instance,of,this,class,created,via,link,relative,to,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,since,4,2;public,uri,components,builder,with,method,name,class,controller,type,string,method,name,object,args,return,from,method,name,this,base,url,controller,type,method,name,args
MvcUriComponentsBuilder -> public UriComponentsBuilder withMethodName(Class<?> controllerType, String methodName, Object... args);1548943222;An alternative to {@link #fromMethodName(Class, String, Object...)}} for_use with an instance of this class created via {@link #relativeTo}._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@since 4.2;public UriComponentsBuilder withMethodName(Class<?> controllerType, String methodName, Object... args) {_		return fromMethodName(this.baseUrl, controllerType, methodName, args)__	};an,alternative,to,link,from,method,name,class,string,object,for,use,with,an,instance,of,this,class,created,via,link,relative,to,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,since,4,2;public,uri,components,builder,with,method,name,class,controller,type,string,method,name,object,args,return,from,method,name,this,base,url,controller,type,method,name,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethod(UriComponentsBuilder baseUrl, 			Class<?> controllerType, Method method, Object... args);1431975386;An alternative to {@link #fromMethod(java.lang.reflect.Method, Object...)}_that accepts a {@code UriComponentsBuilder} representing the base URL._This is useful when using MvcUriComponentsBuilder outside the context of_processing a request or to apply a custom baseUrl not matching the_current request._@param baseUrl the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param controllerType the controller type_@param method the controller method_@param args argument values for the controller method_@return a UriComponentsBuilder instance, never {@code null};public static UriComponentsBuilder fromMethod(UriComponentsBuilder baseUrl,_			Class<?> controllerType, Method method, Object... args) {__		return fromMethodInternal(baseUrl, method.getDeclaringClass(), method, args)__	};an,alternative,to,link,from,method,java,lang,reflect,method,object,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,base,url,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,controller,type,the,controller,type,param,method,the,controller,method,param,args,argument,values,for,the,controller,method,return,a,uri,components,builder,instance,never,code,null;public,static,uri,components,builder,from,method,uri,components,builder,base,url,class,controller,type,method,method,object,args,return,from,method,internal,base,url,method,get,declaring,class,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethod(UriComponentsBuilder baseUrl, 			Class<?> controllerType, Method method, Object... args);1432125256;An alternative to {@link #fromMethod(java.lang.reflect.Method, Object...)}_that accepts a {@code UriComponentsBuilder} representing the base URL._This is useful when using MvcUriComponentsBuilder outside the context of_processing a request or to apply a custom baseUrl not matching the_current request._@param baseUrl the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param controllerType the controller type_@param method the controller method_@param args argument values for the controller method_@return a UriComponentsBuilder instance, never {@code null};public static UriComponentsBuilder fromMethod(UriComponentsBuilder baseUrl,_			Class<?> controllerType, Method method, Object... args) {__		return fromMethodInternal(baseUrl, method.getDeclaringClass(), method, args)__	};an,alternative,to,link,from,method,java,lang,reflect,method,object,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,base,url,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,controller,type,the,controller,type,param,method,the,controller,method,param,args,argument,values,for,the,controller,method,return,a,uri,components,builder,instance,never,code,null;public,static,uri,components,builder,from,method,uri,components,builder,base,url,class,controller,type,method,method,object,args,return,from,method,internal,base,url,method,get,declaring,class,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethod(UriComponentsBuilder baseUrl, 			Class<?> controllerType, Method method, Object... args);1432156007;An alternative to {@link #fromMethod(java.lang.reflect.Method, Object...)}_that accepts a {@code UriComponentsBuilder} representing the base URL._This is useful when using MvcUriComponentsBuilder outside the context of_processing a request or to apply a custom baseUrl not matching the_current request._@param baseUrl the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param controllerType the controller type_@param method the controller method_@param args argument values for the controller method_@return a UriComponentsBuilder instance, never {@code null};public static UriComponentsBuilder fromMethod(UriComponentsBuilder baseUrl,_			Class<?> controllerType, Method method, Object... args) {__		return fromMethodInternal(baseUrl, method.getDeclaringClass(), method, args)__	};an,alternative,to,link,from,method,java,lang,reflect,method,object,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,base,url,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,controller,type,the,controller,type,param,method,the,controller,method,param,args,argument,values,for,the,controller,method,return,a,uri,components,builder,instance,never,code,null;public,static,uri,components,builder,from,method,uri,components,builder,base,url,class,controller,type,method,method,object,args,return,from,method,internal,base,url,method,get,declaring,class,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethod(UriComponentsBuilder baseUrl, 			Class<?> controllerType, Method method, Object... args);1432856630;An alternative to {@link #fromMethod(java.lang.reflect.Method, Object...)}_that accepts a {@code UriComponentsBuilder} representing the base URL._This is useful when using MvcUriComponentsBuilder outside the context of_processing a request or to apply a custom baseUrl not matching the_current request._@param baseUrl the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param controllerType the controller type_@param method the controller method_@param args argument values for the controller method_@return a UriComponentsBuilder instance, never {@code null};public static UriComponentsBuilder fromMethod(UriComponentsBuilder baseUrl,_			Class<?> controllerType, Method method, Object... args) {__		return fromMethodInternal(baseUrl, method.getDeclaringClass(), method, args)__	};an,alternative,to,link,from,method,java,lang,reflect,method,object,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,base,url,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,controller,type,the,controller,type,param,method,the,controller,method,param,args,argument,values,for,the,controller,method,return,a,uri,components,builder,instance,never,code,null;public,static,uri,components,builder,from,method,uri,components,builder,base,url,class,controller,type,method,method,object,args,return,from,method,internal,base,url,method,get,declaring,class,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethod(UriComponentsBuilder baseUrl, 			Class<?> controllerType, Method method, Object... args);1432857824;An alternative to {@link #fromMethod(java.lang.reflect.Method, Object...)}_that accepts a {@code UriComponentsBuilder} representing the base URL._This is useful when using MvcUriComponentsBuilder outside the context of_processing a request or to apply a custom baseUrl not matching the_current request._@param baseUrl the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param controllerType the controller type_@param method the controller method_@param args argument values for the controller method_@return a UriComponentsBuilder instance, never {@code null};public static UriComponentsBuilder fromMethod(UriComponentsBuilder baseUrl,_			Class<?> controllerType, Method method, Object... args) {__		return fromMethodInternal(baseUrl, method.getDeclaringClass(), method, args)__	};an,alternative,to,link,from,method,java,lang,reflect,method,object,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,base,url,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,controller,type,the,controller,type,param,method,the,controller,method,param,args,argument,values,for,the,controller,method,return,a,uri,components,builder,instance,never,code,null;public,static,uri,components,builder,from,method,uri,components,builder,base,url,class,controller,type,method,method,object,args,return,from,method,internal,base,url,method,get,declaring,class,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethod(UriComponentsBuilder baseUrl, 			Class<?> controllerType, Method method, Object... args);1434234880;An alternative to {@link #fromMethod(java.lang.reflect.Method, Object...)}_that accepts a {@code UriComponentsBuilder} representing the base URL._This is useful when using MvcUriComponentsBuilder outside the context of_processing a request or to apply a custom baseUrl not matching the_current request._@param baseUrl the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param controllerType the controller type_@param method the controller method_@param args argument values for the controller method_@return a UriComponentsBuilder instance, never {@code null};public static UriComponentsBuilder fromMethod(UriComponentsBuilder baseUrl,_			Class<?> controllerType, Method method, Object... args) {__		return fromMethodInternal(baseUrl, method.getDeclaringClass(), method, args)__	};an,alternative,to,link,from,method,java,lang,reflect,method,object,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,base,url,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,controller,type,the,controller,type,param,method,the,controller,method,param,args,argument,values,for,the,controller,method,return,a,uri,components,builder,instance,never,code,null;public,static,uri,components,builder,from,method,uri,components,builder,base,url,class,controller,type,method,method,object,args,return,from,method,internal,base,url,method,get,declaring,class,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethod(UriComponentsBuilder baseUrl, 			Class<?> controllerType, Method method, Object... args);1434484897;An alternative to {@link #fromMethod(java.lang.reflect.Method, Object...)}_that accepts a {@code UriComponentsBuilder} representing the base URL._This is useful when using MvcUriComponentsBuilder outside the context of_processing a request or to apply a custom baseUrl not matching the_current request._@param baseUrl the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param controllerType the controller type_@param method the controller method_@param args argument values for the controller method_@return a UriComponentsBuilder instance, never {@code null};public static UriComponentsBuilder fromMethod(UriComponentsBuilder baseUrl,_			Class<?> controllerType, Method method, Object... args) {__		return fromMethodInternal(baseUrl, method.getDeclaringClass(), method, args)__	};an,alternative,to,link,from,method,java,lang,reflect,method,object,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,base,url,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,controller,type,the,controller,type,param,method,the,controller,method,param,args,argument,values,for,the,controller,method,return,a,uri,components,builder,instance,never,code,null;public,static,uri,components,builder,from,method,uri,components,builder,base,url,class,controller,type,method,method,object,args,return,from,method,internal,base,url,method,get,declaring,class,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethod(UriComponentsBuilder baseUrl, 			Class<?> controllerType, Method method, Object... args);1434726592;An alternative to {@link #fromMethod(java.lang.reflect.Method, Object...)}_that accepts a {@code UriComponentsBuilder} representing the base URL._This is useful when using MvcUriComponentsBuilder outside the context of_processing a request or to apply a custom baseUrl not matching the_current request._@param baseUrl the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param controllerType the controller type_@param method the controller method_@param args argument values for the controller method_@return a UriComponentsBuilder instance, never {@code null};public static UriComponentsBuilder fromMethod(UriComponentsBuilder baseUrl,_			Class<?> controllerType, Method method, Object... args) {__		return fromMethodInternal(baseUrl, method.getDeclaringClass(), method, args)__	};an,alternative,to,link,from,method,java,lang,reflect,method,object,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,base,url,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,controller,type,the,controller,type,param,method,the,controller,method,param,args,argument,values,for,the,controller,method,return,a,uri,components,builder,instance,never,code,null;public,static,uri,components,builder,from,method,uri,components,builder,base,url,class,controller,type,method,method,object,args,return,from,method,internal,base,url,method,get,declaring,class,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethod(UriComponentsBuilder baseUrl, 			Class<?> controllerType, Method method, Object... args);1435615322;An alternative to {@link #fromMethod(java.lang.reflect.Method, Object...)}_that accepts a {@code UriComponentsBuilder} representing the base URL._This is useful when using MvcUriComponentsBuilder outside the context of_processing a request or to apply a custom baseUrl not matching the_current request._@param baseUrl the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param controllerType the controller type_@param method the controller method_@param args argument values for the controller method_@return a UriComponentsBuilder instance, never {@code null};public static UriComponentsBuilder fromMethod(UriComponentsBuilder baseUrl,_			Class<?> controllerType, Method method, Object... args) {__		return fromMethodInternal(baseUrl, method.getDeclaringClass(), method, args)__	};an,alternative,to,link,from,method,java,lang,reflect,method,object,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,base,url,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,controller,type,the,controller,type,param,method,the,controller,method,param,args,argument,values,for,the,controller,method,return,a,uri,components,builder,instance,never,code,null;public,static,uri,components,builder,from,method,uri,components,builder,base,url,class,controller,type,method,method,object,args,return,from,method,internal,base,url,method,get,declaring,class,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethod(UriComponentsBuilder baseUrl, 			Class<?> controllerType, Method method, Object... args);1439294371;An alternative to {@link #fromMethod(java.lang.reflect.Method, Object...)}_that accepts a {@code UriComponentsBuilder} representing the base URL._This is useful when using MvcUriComponentsBuilder outside the context of_processing a request or to apply a custom baseUrl not matching the_current request._@param baseUrl the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param controllerType the controller type_@param method the controller method_@param args argument values for the controller method_@return a UriComponentsBuilder instance (never {@code null})_@since 4.2;public static UriComponentsBuilder fromMethod(UriComponentsBuilder baseUrl,_			Class<?> controllerType, Method method, Object... args) {__		return fromMethodInternal(baseUrl,_				(controllerType != null ? controllerType : method.getDeclaringClass()), method, args)__	};an,alternative,to,link,from,method,java,lang,reflect,method,object,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,base,url,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,controller,type,the,controller,type,param,method,the,controller,method,param,args,argument,values,for,the,controller,method,return,a,uri,components,builder,instance,never,code,null,since,4,2;public,static,uri,components,builder,from,method,uri,components,builder,base,url,class,controller,type,method,method,object,args,return,from,method,internal,base,url,controller,type,null,controller,type,method,get,declaring,class,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethod(UriComponentsBuilder baseUrl, 			Class<?> controllerType, Method method, Object... args);1447077465;An alternative to {@link #fromMethod(java.lang.reflect.Method, Object...)}_that accepts a {@code UriComponentsBuilder} representing the base URL._This is useful when using MvcUriComponentsBuilder outside the context of_processing a request or to apply a custom baseUrl not matching the_current request._@param baseUrl the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param controllerType the controller type_@param method the controller method_@param args argument values for the controller method_@return a UriComponentsBuilder instance (never {@code null})_@since 4.2;public static UriComponentsBuilder fromMethod(UriComponentsBuilder baseUrl,_			Class<?> controllerType, Method method, Object... args) {__		return fromMethodInternal(baseUrl,_				(controllerType != null ? controllerType : method.getDeclaringClass()), method, args)__	};an,alternative,to,link,from,method,java,lang,reflect,method,object,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,base,url,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,controller,type,the,controller,type,param,method,the,controller,method,param,args,argument,values,for,the,controller,method,return,a,uri,components,builder,instance,never,code,null,since,4,2;public,static,uri,components,builder,from,method,uri,components,builder,base,url,class,controller,type,method,method,object,args,return,from,method,internal,base,url,controller,type,null,controller,type,method,get,declaring,class,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethod(UriComponentsBuilder baseUrl, 			Class<?> controllerType, Method method, Object... args);1458830024;An alternative to {@link #fromMethod(java.lang.reflect.Method, Object...)}_that accepts a {@code UriComponentsBuilder} representing the base URL._This is useful when using MvcUriComponentsBuilder outside the context of_processing a request or to apply a custom baseUrl not matching the_current request._@param baseUrl the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param controllerType the controller type_@param method the controller method_@param args argument values for the controller method_@return a UriComponentsBuilder instance (never {@code null})_@since 4.2;public static UriComponentsBuilder fromMethod(UriComponentsBuilder baseUrl,_			Class<?> controllerType, Method method, Object... args) {__		return fromMethodInternal(baseUrl,_				(controllerType != null ? controllerType : method.getDeclaringClass()), method, args)__	};an,alternative,to,link,from,method,java,lang,reflect,method,object,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,base,url,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,controller,type,the,controller,type,param,method,the,controller,method,param,args,argument,values,for,the,controller,method,return,a,uri,components,builder,instance,never,code,null,since,4,2;public,static,uri,components,builder,from,method,uri,components,builder,base,url,class,controller,type,method,method,object,args,return,from,method,internal,base,url,controller,type,null,controller,type,method,get,declaring,class,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethod(UriComponentsBuilder baseUrl, 			Class<?> controllerType, Method method, Object... args);1461047077;An alternative to {@link #fromMethod(java.lang.reflect.Method, Object...)}_that accepts a {@code UriComponentsBuilder} representing the base URL._This is useful when using MvcUriComponentsBuilder outside the context of_processing a request or to apply a custom baseUrl not matching the_current request._@param baseUrl the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param controllerType the controller type_@param method the controller method_@param args argument values for the controller method_@return a UriComponentsBuilder instance (never {@code null})_@since 4.2;public static UriComponentsBuilder fromMethod(UriComponentsBuilder baseUrl,_			Class<?> controllerType, Method method, Object... args) {__		return fromMethodInternal(baseUrl,_				(controllerType != null ? controllerType : method.getDeclaringClass()), method, args)__	};an,alternative,to,link,from,method,java,lang,reflect,method,object,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,base,url,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,controller,type,the,controller,type,param,method,the,controller,method,param,args,argument,values,for,the,controller,method,return,a,uri,components,builder,instance,never,code,null,since,4,2;public,static,uri,components,builder,from,method,uri,components,builder,base,url,class,controller,type,method,method,object,args,return,from,method,internal,base,url,controller,type,null,controller,type,method,get,declaring,class,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethod(UriComponentsBuilder baseUrl, 			Class<?> controllerType, Method method, Object... args);1467677340;An alternative to {@link #fromMethod(java.lang.reflect.Method, Object...)}_that accepts a {@code UriComponentsBuilder} representing the base URL._This is useful when using MvcUriComponentsBuilder outside the context of_processing a request or to apply a custom baseUrl not matching the_current request._@param baseUrl the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param controllerType the controller type_@param method the controller method_@param args argument values for the controller method_@return a UriComponentsBuilder instance (never {@code null})_@since 4.2;public static UriComponentsBuilder fromMethod(UriComponentsBuilder baseUrl,_			Class<?> controllerType, Method method, Object... args) {__		return fromMethodInternal(baseUrl,_				(controllerType != null ? controllerType : method.getDeclaringClass()), method, args)__	};an,alternative,to,link,from,method,java,lang,reflect,method,object,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,base,url,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,controller,type,the,controller,type,param,method,the,controller,method,param,args,argument,values,for,the,controller,method,return,a,uri,components,builder,instance,never,code,null,since,4,2;public,static,uri,components,builder,from,method,uri,components,builder,base,url,class,controller,type,method,method,object,args,return,from,method,internal,base,url,controller,type,null,controller,type,method,get,declaring,class,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethod(UriComponentsBuilder baseUrl, 			Class<?> controllerType, Method method, Object... args);1467726769;An alternative to {@link #fromMethod(java.lang.reflect.Method, Object...)}_that accepts a {@code UriComponentsBuilder} representing the base URL._This is useful when using MvcUriComponentsBuilder outside the context of_processing a request or to apply a custom baseUrl not matching the_current request._@param baseUrl the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param controllerType the controller type_@param method the controller method_@param args argument values for the controller method_@return a UriComponentsBuilder instance (never {@code null})_@since 4.2;public static UriComponentsBuilder fromMethod(UriComponentsBuilder baseUrl,_			Class<?> controllerType, Method method, Object... args) {__		return fromMethodInternal(baseUrl,_				(controllerType != null ? controllerType : method.getDeclaringClass()), method, args)__	};an,alternative,to,link,from,method,java,lang,reflect,method,object,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,base,url,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,controller,type,the,controller,type,param,method,the,controller,method,param,args,argument,values,for,the,controller,method,return,a,uri,components,builder,instance,never,code,null,since,4,2;public,static,uri,components,builder,from,method,uri,components,builder,base,url,class,controller,type,method,method,object,args,return,from,method,internal,base,url,controller,type,null,controller,type,method,get,declaring,class,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethod(UriComponentsBuilder baseUrl, 			Class<?> controllerType, Method method, Object... args);1467730834;An alternative to {@link #fromMethod(java.lang.reflect.Method, Object...)}_that accepts a {@code UriComponentsBuilder} representing the base URL._This is useful when using MvcUriComponentsBuilder outside the context of_processing a request or to apply a custom baseUrl not matching the_current request._@param baseUrl the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param controllerType the controller type_@param method the controller method_@param args argument values for the controller method_@return a UriComponentsBuilder instance (never {@code null})_@since 4.2;public static UriComponentsBuilder fromMethod(UriComponentsBuilder baseUrl,_			Class<?> controllerType, Method method, Object... args) {__		return fromMethodInternal(baseUrl,_				(controllerType != null ? controllerType : method.getDeclaringClass()), method, args)__	};an,alternative,to,link,from,method,java,lang,reflect,method,object,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,base,url,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,controller,type,the,controller,type,param,method,the,controller,method,param,args,argument,values,for,the,controller,method,return,a,uri,components,builder,instance,never,code,null,since,4,2;public,static,uri,components,builder,from,method,uri,components,builder,base,url,class,controller,type,method,method,object,args,return,from,method,internal,base,url,controller,type,null,controller,type,method,get,declaring,class,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethod(UriComponentsBuilder baseUrl, 			Class<?> controllerType, Method method, Object... args);1467846264;An alternative to {@link #fromMethod(java.lang.reflect.Method, Object...)}_that accepts a {@code UriComponentsBuilder} representing the base URL._This is useful when using MvcUriComponentsBuilder outside the context of_processing a request or to apply a custom baseUrl not matching the_current request._@param baseUrl the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param controllerType the controller type_@param method the controller method_@param args argument values for the controller method_@return a UriComponentsBuilder instance (never {@code null})_@since 4.2;public static UriComponentsBuilder fromMethod(UriComponentsBuilder baseUrl,_			Class<?> controllerType, Method method, Object... args) {__		return fromMethodInternal(baseUrl,_				(controllerType != null ? controllerType : method.getDeclaringClass()), method, args)__	};an,alternative,to,link,from,method,java,lang,reflect,method,object,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,base,url,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,controller,type,the,controller,type,param,method,the,controller,method,param,args,argument,values,for,the,controller,method,return,a,uri,components,builder,instance,never,code,null,since,4,2;public,static,uri,components,builder,from,method,uri,components,builder,base,url,class,controller,type,method,method,object,args,return,from,method,internal,base,url,controller,type,null,controller,type,method,get,declaring,class,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethod(UriComponentsBuilder baseUrl, 			Class<?> controllerType, Method method, Object... args);1468613531;An alternative to {@link #fromMethod(Class, Method, Object...)}_that accepts a {@code UriComponentsBuilder} representing the base URL._This is useful when using MvcUriComponentsBuilder outside the context of_processing a request or to apply a custom baseUrl not matching the_current request._@param baseUrl the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param controllerType the controller type_@param method the controller method_@param args argument values for the controller method_@return a UriComponentsBuilder instance (never {@code null})_@since 4.2;public static UriComponentsBuilder fromMethod(UriComponentsBuilder baseUrl,_			Class<?> controllerType, Method method, Object... args) {__		return fromMethodInternal(baseUrl,_				(controllerType != null ? controllerType : method.getDeclaringClass()), method, args)__	};an,alternative,to,link,from,method,class,method,object,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,base,url,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,controller,type,the,controller,type,param,method,the,controller,method,param,args,argument,values,for,the,controller,method,return,a,uri,components,builder,instance,never,code,null,since,4,2;public,static,uri,components,builder,from,method,uri,components,builder,base,url,class,controller,type,method,method,object,args,return,from,method,internal,base,url,controller,type,null,controller,type,method,get,declaring,class,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethod(UriComponentsBuilder baseUrl, 			Class<?> controllerType, Method method, Object... args);1468948866;An alternative to {@link #fromMethod(Class, Method, Object...)}_that accepts a {@code UriComponentsBuilder} representing the base URL._This is useful when using MvcUriComponentsBuilder outside the context of_processing a request or to apply a custom baseUrl not matching the_current request._@param baseUrl the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param controllerType the controller type_@param method the controller method_@param args argument values for the controller method_@return a UriComponentsBuilder instance (never {@code null})_@since 4.2;public static UriComponentsBuilder fromMethod(UriComponentsBuilder baseUrl,_			Class<?> controllerType, Method method, Object... args) {__		return fromMethodInternal(baseUrl,_				(controllerType != null ? controllerType : method.getDeclaringClass()), method, args)__	};an,alternative,to,link,from,method,class,method,object,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,base,url,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,controller,type,the,controller,type,param,method,the,controller,method,param,args,argument,values,for,the,controller,method,return,a,uri,components,builder,instance,never,code,null,since,4,2;public,static,uri,components,builder,from,method,uri,components,builder,base,url,class,controller,type,method,method,object,args,return,from,method,internal,base,url,controller,type,null,controller,type,method,get,declaring,class,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethod(UriComponentsBuilder baseUrl, 			Class<?> controllerType, Method method, Object... args);1485810955;An alternative to {@link #fromMethod(Class, Method, Object...)}_that accepts a {@code UriComponentsBuilder} representing the base URL._This is useful when using MvcUriComponentsBuilder outside the context of_processing a request or to apply a custom baseUrl not matching the_current request._@param baseUrl the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param controllerType the controller type_@param method the controller method_@param args argument values for the controller method_@return a UriComponentsBuilder instance (never {@code null})_@since 4.2;public static UriComponentsBuilder fromMethod(UriComponentsBuilder baseUrl,_			Class<?> controllerType, Method method, Object... args) {__		return fromMethodInternal(baseUrl,_				(controllerType != null ? controllerType : method.getDeclaringClass()), method, args)__	};an,alternative,to,link,from,method,class,method,object,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,base,url,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,controller,type,the,controller,type,param,method,the,controller,method,param,args,argument,values,for,the,controller,method,return,a,uri,components,builder,instance,never,code,null,since,4,2;public,static,uri,components,builder,from,method,uri,components,builder,base,url,class,controller,type,method,method,object,args,return,from,method,internal,base,url,controller,type,null,controller,type,method,get,declaring,class,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethod(UriComponentsBuilder baseUrl, 			Class<?> controllerType, Method method, Object... args);1486634978;An alternative to {@link #fromMethod(Class, Method, Object...)}_that accepts a {@code UriComponentsBuilder} representing the base URL._This is useful when using MvcUriComponentsBuilder outside the context of_processing a request or to apply a custom baseUrl not matching the_current request._@param baseUrl the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param controllerType the controller type_@param method the controller method_@param args argument values for the controller method_@return a UriComponentsBuilder instance (never {@code null})_@since 4.2;public static UriComponentsBuilder fromMethod(UriComponentsBuilder baseUrl,_			Class<?> controllerType, Method method, Object... args) {__		return fromMethodInternal(baseUrl,_				(controllerType != null ? controllerType : method.getDeclaringClass()), method, args)__	};an,alternative,to,link,from,method,class,method,object,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,base,url,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,controller,type,the,controller,type,param,method,the,controller,method,param,args,argument,values,for,the,controller,method,return,a,uri,components,builder,instance,never,code,null,since,4,2;public,static,uri,components,builder,from,method,uri,components,builder,base,url,class,controller,type,method,method,object,args,return,from,method,internal,base,url,controller,type,null,controller,type,method,get,declaring,class,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethod(UriComponentsBuilder baseUrl, 			Class<?> controllerType, Method method, Object... args);1486635693;An alternative to {@link #fromMethod(Class, Method, Object...)}_that accepts a {@code UriComponentsBuilder} representing the base URL._This is useful when using MvcUriComponentsBuilder outside the context of_processing a request or to apply a custom baseUrl not matching the_current request._@param baseUrl the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param controllerType the controller type_@param method the controller method_@param args argument values for the controller method_@return a UriComponentsBuilder instance (never {@code null})_@since 4.2;public static UriComponentsBuilder fromMethod(UriComponentsBuilder baseUrl,_			Class<?> controllerType, Method method, Object... args) {__		return fromMethodInternal(baseUrl,_				(controllerType != null ? controllerType : method.getDeclaringClass()), method, args)__	};an,alternative,to,link,from,method,class,method,object,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,base,url,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,controller,type,the,controller,type,param,method,the,controller,method,param,args,argument,values,for,the,controller,method,return,a,uri,components,builder,instance,never,code,null,since,4,2;public,static,uri,components,builder,from,method,uri,components,builder,base,url,class,controller,type,method,method,object,args,return,from,method,internal,base,url,controller,type,null,controller,type,method,get,declaring,class,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethod(UriComponentsBuilder baseUrl, 			Class<?> controllerType, Method method, Object... args);1495868221;An alternative to {@link #fromMethod(Class, Method, Object...)}_that accepts a {@code UriComponentsBuilder} representing the base URL._This is useful when using MvcUriComponentsBuilder outside the context of_processing a request or to apply a custom baseUrl not matching the_current request._@param baseUrl the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param controllerType the controller type_@param method the controller method_@param args argument values for the controller method_@return a UriComponentsBuilder instance (never {@code null})_@since 4.2;public static UriComponentsBuilder fromMethod(UriComponentsBuilder baseUrl,_			Class<?> controllerType, Method method, Object... args) {__		return fromMethodInternal(baseUrl,_				(controllerType != null ? controllerType : method.getDeclaringClass()), method, args)__	};an,alternative,to,link,from,method,class,method,object,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,base,url,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,controller,type,the,controller,type,param,method,the,controller,method,param,args,argument,values,for,the,controller,method,return,a,uri,components,builder,instance,never,code,null,since,4,2;public,static,uri,components,builder,from,method,uri,components,builder,base,url,class,controller,type,method,method,object,args,return,from,method,internal,base,url,controller,type,null,controller,type,method,get,declaring,class,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethod(UriComponentsBuilder baseUrl, 			Class<?> controllerType, Method method, Object... args);1496242568;An alternative to {@link #fromMethod(Class, Method, Object...)}_that accepts a {@code UriComponentsBuilder} representing the base URL._This is useful when using MvcUriComponentsBuilder outside the context of_processing a request or to apply a custom baseUrl not matching the_current request._@param baseUrl the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param controllerType the controller type_@param method the controller method_@param args argument values for the controller method_@return a UriComponentsBuilder instance (never {@code null})_@since 4.2;public static UriComponentsBuilder fromMethod(UriComponentsBuilder baseUrl,_			Class<?> controllerType, Method method, Object... args) {__		return fromMethodInternal(baseUrl,_				(controllerType != null ? controllerType : method.getDeclaringClass()), method, args)__	};an,alternative,to,link,from,method,class,method,object,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,base,url,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,controller,type,the,controller,type,param,method,the,controller,method,param,args,argument,values,for,the,controller,method,return,a,uri,components,builder,instance,never,code,null,since,4,2;public,static,uri,components,builder,from,method,uri,components,builder,base,url,class,controller,type,method,method,object,args,return,from,method,internal,base,url,controller,type,null,controller,type,method,get,declaring,class,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethod(UriComponentsBuilder baseUrl, 			Class<?> controllerType, Method method, Object... args);1496259743;An alternative to {@link #fromMethod(Class, Method, Object...)}_that accepts a {@code UriComponentsBuilder} representing the base URL._This is useful when using MvcUriComponentsBuilder outside the context of_processing a request or to apply a custom baseUrl not matching the_current request._@param baseUrl the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param controllerType the controller type_@param method the controller method_@param args argument values for the controller method_@return a UriComponentsBuilder instance (never {@code null})_@since 4.2;public static UriComponentsBuilder fromMethod(UriComponentsBuilder baseUrl,_			Class<?> controllerType, Method method, Object... args) {__		return fromMethodInternal(baseUrl,_				(controllerType != null ? controllerType : method.getDeclaringClass()), method, args)__	};an,alternative,to,link,from,method,class,method,object,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,base,url,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,controller,type,the,controller,type,param,method,the,controller,method,param,args,argument,values,for,the,controller,method,return,a,uri,components,builder,instance,never,code,null,since,4,2;public,static,uri,components,builder,from,method,uri,components,builder,base,url,class,controller,type,method,method,object,args,return,from,method,internal,base,url,controller,type,null,controller,type,method,get,declaring,class,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethod(UriComponentsBuilder baseUrl, 			Class<?> controllerType, Method method, Object... args);1496370972;An alternative to {@link #fromMethod(Class, Method, Object...)}_that accepts a {@code UriComponentsBuilder} representing the base URL._This is useful when using MvcUriComponentsBuilder outside the context of_processing a request or to apply a custom baseUrl not matching the_current request._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param baseUrl the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param controllerType the controller type_@param method the controller method_@param args argument values for the controller method_@return a UriComponentsBuilder instance (never {@code null})_@since 4.2;public static UriComponentsBuilder fromMethod(UriComponentsBuilder baseUrl,_			Class<?> controllerType, Method method, Object... args) {__		return fromMethodInternal(baseUrl,_				(controllerType != null ? controllerType : method.getDeclaringClass()), method, args)__	};an,alternative,to,link,from,method,class,method,object,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,base,url,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,controller,type,the,controller,type,param,method,the,controller,method,param,args,argument,values,for,the,controller,method,return,a,uri,components,builder,instance,never,code,null,since,4,2;public,static,uri,components,builder,from,method,uri,components,builder,base,url,class,controller,type,method,method,object,args,return,from,method,internal,base,url,controller,type,null,controller,type,method,get,declaring,class,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethod(Method method, Object... args);1426553101;Create a {@link UriComponentsBuilder} from the mapping of a controller method_and an array of method argument values. The array of values  must match the_signature of the controller method. Values for {@code @RequestParam} and_{@code @PathVariable} are used for building the URI (via implementations of_{@link org.springframework.web.method.support.UriComponentsContributor_UriComponentsContributor}) while remaining argument values are ignored and_can be {@code null}._@param method the controller method_@param args argument values for the controller method_@return a UriComponentsBuilder instance, never {@code null};public static UriComponentsBuilder fromMethod(Method method, Object... args) {_		return fromMethod(null, method, args)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,method,and,an,array,of,method,argument,values,the,array,of,values,must,match,the,signature,of,the,controller,method,values,for,code,request,param,and,code,path,variable,are,used,for,building,the,uri,via,implementations,of,link,org,springframework,web,method,support,uri,components,contributor,uri,components,contributor,while,remaining,argument,values,are,ignored,and,can,be,code,null,param,method,the,controller,method,param,args,argument,values,for,the,controller,method,return,a,uri,components,builder,instance,never,code,null;public,static,uri,components,builder,from,method,method,method,object,args,return,from,method,null,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethod(Method method, Object... args);1429801417;Create a {@link UriComponentsBuilder} from the mapping of a controller method_and an array of method argument values. The array of values  must match the_signature of the controller method. Values for {@code @RequestParam} and_{@code @PathVariable} are used for building the URI (via implementations of_{@link org.springframework.web.method.support.UriComponentsContributor_UriComponentsContributor}) while remaining argument values are ignored and_can be {@code null}._@param method the controller method_@param args argument values for the controller method_@return a UriComponentsBuilder instance, never {@code null};public static UriComponentsBuilder fromMethod(Method method, Object... args) {_		return fromMethod(null, method, args)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,method,and,an,array,of,method,argument,values,the,array,of,values,must,match,the,signature,of,the,controller,method,values,for,code,request,param,and,code,path,variable,are,used,for,building,the,uri,via,implementations,of,link,org,springframework,web,method,support,uri,components,contributor,uri,components,contributor,while,remaining,argument,values,are,ignored,and,can,be,code,null,param,method,the,controller,method,param,args,argument,values,for,the,controller,method,return,a,uri,components,builder,instance,never,code,null;public,static,uri,components,builder,from,method,method,method,object,args,return,from,method,null,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethod(Method method, Object... args);1429801944;Create a {@link UriComponentsBuilder} from the mapping of a controller method_and an array of method argument values. The array of values  must match the_signature of the controller method. Values for {@code @RequestParam} and_{@code @PathVariable} are used for building the URI (via implementations of_{@link org.springframework.web.method.support.UriComponentsContributor_UriComponentsContributor}) while remaining argument values are ignored and_can be {@code null}._@param method the controller method_@param args argument values for the controller method_@return a UriComponentsBuilder instance, never {@code null};public static UriComponentsBuilder fromMethod(Method method, Object... args) {_		return fromMethod(null, method, args)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,method,and,an,array,of,method,argument,values,the,array,of,values,must,match,the,signature,of,the,controller,method,values,for,code,request,param,and,code,path,variable,are,used,for,building,the,uri,via,implementations,of,link,org,springframework,web,method,support,uri,components,contributor,uri,components,contributor,while,remaining,argument,values,are,ignored,and,can,be,code,null,param,method,the,controller,method,param,args,argument,values,for,the,controller,method,return,a,uri,components,builder,instance,never,code,null;public,static,uri,components,builder,from,method,method,method,object,args,return,from,method,null,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethod(Method method, Object... args);1429802180;Create a {@link UriComponentsBuilder} from the mapping of a controller method_and an array of method argument values. The array of values  must match the_signature of the controller method. Values for {@code @RequestParam} and_{@code @PathVariable} are used for building the URI (via implementations of_{@link org.springframework.web.method.support.UriComponentsContributor_UriComponentsContributor}) while remaining argument values are ignored and_can be {@code null}._@param method the controller method_@param args argument values for the controller method_@return a UriComponentsBuilder instance, never {@code null};public static UriComponentsBuilder fromMethod(Method method, Object... args) {_		return fromMethod(null, method, args)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,method,and,an,array,of,method,argument,values,the,array,of,values,must,match,the,signature,of,the,controller,method,values,for,code,request,param,and,code,path,variable,are,used,for,building,the,uri,via,implementations,of,link,org,springframework,web,method,support,uri,components,contributor,uri,components,contributor,while,remaining,argument,values,are,ignored,and,can,be,code,null,param,method,the,controller,method,param,args,argument,values,for,the,controller,method,return,a,uri,components,builder,instance,never,code,null;public,static,uri,components,builder,from,method,method,method,object,args,return,from,method,null,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethod(Method method, Object... args);1429886024;Create a {@link UriComponentsBuilder} from the mapping of a controller method_and an array of method argument values. The array of values  must match the_signature of the controller method. Values for {@code @RequestParam} and_{@code @PathVariable} are used for building the URI (via implementations of_{@link org.springframework.web.method.support.UriComponentsContributor_UriComponentsContributor}) while remaining argument values are ignored and_can be {@code null}._@param method the controller method_@param args argument values for the controller method_@return a UriComponentsBuilder instance, never {@code null};public static UriComponentsBuilder fromMethod(Method method, Object... args) {_		return fromMethod(null, method, args)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,method,and,an,array,of,method,argument,values,the,array,of,values,must,match,the,signature,of,the,controller,method,values,for,code,request,param,and,code,path,variable,are,used,for,building,the,uri,via,implementations,of,link,org,springframework,web,method,support,uri,components,contributor,uri,components,contributor,while,remaining,argument,values,are,ignored,and,can,be,code,null,param,method,the,controller,method,param,args,argument,values,for,the,controller,method,return,a,uri,components,builder,instance,never,code,null;public,static,uri,components,builder,from,method,method,method,object,args,return,from,method,null,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethod(Method method, Object... args);1429888980;Create a {@link UriComponentsBuilder} from the mapping of a controller method_and an array of method argument values. The array of values  must match the_signature of the controller method. Values for {@code @RequestParam} and_{@code @PathVariable} are used for building the URI (via implementations of_{@link org.springframework.web.method.support.UriComponentsContributor_UriComponentsContributor}) while remaining argument values are ignored and_can be {@code null}._@param method the controller method_@param args argument values for the controller method_@return a UriComponentsBuilder instance, never {@code null};public static UriComponentsBuilder fromMethod(Method method, Object... args) {_		return fromMethod(null, method, args)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,method,and,an,array,of,method,argument,values,the,array,of,values,must,match,the,signature,of,the,controller,method,values,for,code,request,param,and,code,path,variable,are,used,for,building,the,uri,via,implementations,of,link,org,springframework,web,method,support,uri,components,contributor,uri,components,contributor,while,remaining,argument,values,are,ignored,and,can,be,code,null,param,method,the,controller,method,param,args,argument,values,for,the,controller,method,return,a,uri,components,builder,instance,never,code,null;public,static,uri,components,builder,from,method,method,method,object,args,return,from,method,null,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethod(Method method, Object... args);1430739806;Create a {@link UriComponentsBuilder} from the mapping of a controller method_and an array of method argument values. The array of values  must match the_signature of the controller method. Values for {@code @RequestParam} and_{@code @PathVariable} are used for building the URI (via implementations of_{@link org.springframework.web.method.support.UriComponentsContributor_UriComponentsContributor}) while remaining argument values are ignored and_can be {@code null}._@param method the controller method_@param args argument values for the controller method_@return a UriComponentsBuilder instance, never {@code null};public static UriComponentsBuilder fromMethod(Method method, Object... args) {_		return fromMethod(null, method, args)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,method,and,an,array,of,method,argument,values,the,array,of,values,must,match,the,signature,of,the,controller,method,values,for,code,request,param,and,code,path,variable,are,used,for,building,the,uri,via,implementations,of,link,org,springframework,web,method,support,uri,components,contributor,uri,components,contributor,while,remaining,argument,values,are,ignored,and,can,be,code,null,param,method,the,controller,method,param,args,argument,values,for,the,controller,method,return,a,uri,components,builder,instance,never,code,null;public,static,uri,components,builder,from,method,method,method,object,args,return,from,method,null,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethod(Method method, Object... args);1430747547;Create a {@link UriComponentsBuilder} from the mapping of a controller method_and an array of method argument values. The array of values  must match the_signature of the controller method. Values for {@code @RequestParam} and_{@code @PathVariable} are used for building the URI (via implementations of_{@link org.springframework.web.method.support.UriComponentsContributor_UriComponentsContributor}) while remaining argument values are ignored and_can be {@code null}._@param method the controller method_@param args argument values for the controller method_@return a UriComponentsBuilder instance, never {@code null};public static UriComponentsBuilder fromMethod(Method method, Object... args) {_		return fromMethod(null, method, args)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,method,and,an,array,of,method,argument,values,the,array,of,values,must,match,the,signature,of,the,controller,method,values,for,code,request,param,and,code,path,variable,are,used,for,building,the,uri,via,implementations,of,link,org,springframework,web,method,support,uri,components,contributor,uri,components,contributor,while,remaining,argument,values,are,ignored,and,can,be,code,null,param,method,the,controller,method,param,args,argument,values,for,the,controller,method,return,a,uri,components,builder,instance,never,code,null;public,static,uri,components,builder,from,method,method,method,object,args,return,from,method,null,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethod(Method method, Object... args);1430749606;Create a {@link UriComponentsBuilder} from the mapping of a controller method_and an array of method argument values. The array of values  must match the_signature of the controller method. Values for {@code @RequestParam} and_{@code @PathVariable} are used for building the URI (via implementations of_{@link org.springframework.web.method.support.UriComponentsContributor_UriComponentsContributor}) while remaining argument values are ignored and_can be {@code null}._@param method the controller method_@param args argument values for the controller method_@return a UriComponentsBuilder instance, never {@code null};public static UriComponentsBuilder fromMethod(Method method, Object... args) {_		return fromMethod(null, method, args)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,method,and,an,array,of,method,argument,values,the,array,of,values,must,match,the,signature,of,the,controller,method,values,for,code,request,param,and,code,path,variable,are,used,for,building,the,uri,via,implementations,of,link,org,springframework,web,method,support,uri,components,contributor,uri,components,contributor,while,remaining,argument,values,are,ignored,and,can,be,code,null,param,method,the,controller,method,param,args,argument,values,for,the,controller,method,return,a,uri,components,builder,instance,never,code,null;public,static,uri,components,builder,from,method,method,method,object,args,return,from,method,null,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethod(Method method, Object... argumentValues);1382754578;Create a {@link UriComponentsBuilder} by pointing to a controller method and_providing method argument values. The method argument values are used to_prepare the URI for example expanding path variables, or adding request_parameters. Any other arguments not relevant to the URL can be provided as_{@literal null} and will be ignored._<p>_Additional (custom) argument types can be supported through an implementation_of {@link org.springframework.web.method.support.UriComponentsContributor}.__@param method the target controller method_@param argumentValues argument values matching to method parameters__@return a UriComponentsBuilder instance;public static UriComponentsBuilder fromMethod(Method method, Object... argumentValues) {__		UriComponentsBuilder builder = ServletUriComponentsBuilder.newInstance().path(getMethodRequestMapping(method))__		UriComponents uriComponents = applyContributors(builder, method, argumentValues)___		String typePath = getTypeRequestMapping(method.getDeclaringClass())__		String methodPath = uriComponents.getPath()__		String path = pathMatcher.combine(typePath, methodPath)___		return ServletUriComponentsBuilder.fromCurrentServletMapping().path(_				path).queryParams(uriComponents.getQueryParams())__	};create,a,link,uri,components,builder,by,pointing,to,a,controller,method,and,providing,method,argument,values,the,method,argument,values,are,used,to,prepare,the,uri,for,example,expanding,path,variables,or,adding,request,parameters,any,other,arguments,not,relevant,to,the,url,can,be,provided,as,literal,null,and,will,be,ignored,p,additional,custom,argument,types,can,be,supported,through,an,implementation,of,link,org,springframework,web,method,support,uri,components,contributor,param,method,the,target,controller,method,param,argument,values,argument,values,matching,to,method,parameters,return,a,uri,components,builder,instance;public,static,uri,components,builder,from,method,method,method,object,argument,values,uri,components,builder,builder,servlet,uri,components,builder,new,instance,path,get,method,request,mapping,method,uri,components,uri,components,apply,contributors,builder,method,argument,values,string,type,path,get,type,request,mapping,method,get,declaring,class,string,method,path,uri,components,get,path,string,path,path,matcher,combine,type,path,method,path,return,servlet,uri,components,builder,from,current,servlet,mapping,path,path,query,params,uri,components,get,query,params
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethod(Method method, Object... argumentValues);1382757913;Create a {@link UriComponentsBuilder} by pointing to a controller method and_providing method argument values. The method argument values are used to_prepare the URI for example expanding path variables, or adding request_parameters. Any other arguments not relevant to the URL can be provided as_{@literal null} and will be ignored._<p>_Additional (custom) argument types can be supported through an implementation_of {@link org.springframework.web.method.support.UriComponentsContributor}.__@param method the target controller method_@param argumentValues argument values matching to method parameters__@return a UriComponentsBuilder instance;public static UriComponentsBuilder fromMethod(Method method, Object... argumentValues) {__		UriComponentsBuilder builder = ServletUriComponentsBuilder.newInstance().path(getMethodRequestMapping(method))__		UriComponents uriComponents = applyContributors(builder, method, argumentValues)___		String typePath = getTypeRequestMapping(method.getDeclaringClass())__		String methodPath = uriComponents.getPath()__		String path = pathMatcher.combine(typePath, methodPath)___		return ServletUriComponentsBuilder.fromCurrentServletMapping().path(_				path).queryParams(uriComponents.getQueryParams())__	};create,a,link,uri,components,builder,by,pointing,to,a,controller,method,and,providing,method,argument,values,the,method,argument,values,are,used,to,prepare,the,uri,for,example,expanding,path,variables,or,adding,request,parameters,any,other,arguments,not,relevant,to,the,url,can,be,provided,as,literal,null,and,will,be,ignored,p,additional,custom,argument,types,can,be,supported,through,an,implementation,of,link,org,springframework,web,method,support,uri,components,contributor,param,method,the,target,controller,method,param,argument,values,argument,values,matching,to,method,parameters,return,a,uri,components,builder,instance;public,static,uri,components,builder,from,method,method,method,object,argument,values,uri,components,builder,builder,servlet,uri,components,builder,new,instance,path,get,method,request,mapping,method,uri,components,uri,components,apply,contributors,builder,method,argument,values,string,type,path,get,type,request,mapping,method,get,declaring,class,string,method,path,uri,components,get,path,string,path,path,matcher,combine,type,path,method,path,return,servlet,uri,components,builder,from,current,servlet,mapping,path,path,query,params,uri,components,get,query,params
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethod(Method method, Object... argumentValues);1382911216;Create a {@link UriComponentsBuilder} by pointing to a controller method and_providing method argument values. The method argument values are used to_prepare the URI for example expanding path variables, or adding request_parameters. Any other arguments not relevant to the URL can be provided as_{@literal null} and will be ignored._<p>_Additional (custom) argument types can be supported through an implementation_of {@link org.springframework.web.method.support.UriComponentsContributor}.__@param method the target controller method_@param argumentValues argument values matching to method parameters__@return a UriComponentsBuilder instance;public static UriComponentsBuilder fromMethod(Method method, Object... argumentValues) {__		UriComponentsBuilder builder = ServletUriComponentsBuilder.newInstance().path(getMethodRequestMapping(method))__		UriComponents uriComponents = applyContributors(builder, method, argumentValues)___		String typePath = getTypeRequestMapping(method.getDeclaringClass())__		String methodPath = uriComponents.getPath()__		String path = pathMatcher.combine(typePath, methodPath)___		return ServletUriComponentsBuilder.fromCurrentServletMapping().path(_				path).queryParams(uriComponents.getQueryParams())__	};create,a,link,uri,components,builder,by,pointing,to,a,controller,method,and,providing,method,argument,values,the,method,argument,values,are,used,to,prepare,the,uri,for,example,expanding,path,variables,or,adding,request,parameters,any,other,arguments,not,relevant,to,the,url,can,be,provided,as,literal,null,and,will,be,ignored,p,additional,custom,argument,types,can,be,supported,through,an,implementation,of,link,org,springframework,web,method,support,uri,components,contributor,param,method,the,target,controller,method,param,argument,values,argument,values,matching,to,method,parameters,return,a,uri,components,builder,instance;public,static,uri,components,builder,from,method,method,method,object,argument,values,uri,components,builder,builder,servlet,uri,components,builder,new,instance,path,get,method,request,mapping,method,uri,components,uri,components,apply,contributors,builder,method,argument,values,string,type,path,get,type,request,mapping,method,get,declaring,class,string,method,path,uri,components,get,path,string,path,path,matcher,combine,type,path,method,path,return,servlet,uri,components,builder,from,current,servlet,mapping,path,path,query,params,uri,components,get,query,params
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethod(Method method, Object... argumentValues);1383061199;Create a {@link UriComponentsBuilder} by pointing to a controller method and_providing method argument values. The method argument values are used to_prepare the URI for example expanding path variables, or adding request_parameters. Any other arguments not relevant to the URL can be provided as_{@literal null} and will be ignored._<p>_Additional (custom) argument types can be supported through an implementation_of {@link org.springframework.web.method.support.UriComponentsContributor}.__@param method the target controller method_@param argumentValues argument values matching to method parameters__@return a UriComponentsBuilder instance;public static UriComponentsBuilder fromMethod(Method method, Object... argumentValues) {__		UriComponentsBuilder builder = ServletUriComponentsBuilder.newInstance().path(getMethodRequestMapping(method))__		UriComponents uriComponents = applyContributors(builder, method, argumentValues)___		String typePath = getTypeRequestMapping(method.getDeclaringClass())__		String methodPath = uriComponents.getPath()__		String path = pathMatcher.combine(typePath, methodPath)___		return ServletUriComponentsBuilder.fromCurrentServletMapping().path(_				path).queryParams(uriComponents.getQueryParams())__	};create,a,link,uri,components,builder,by,pointing,to,a,controller,method,and,providing,method,argument,values,the,method,argument,values,are,used,to,prepare,the,uri,for,example,expanding,path,variables,or,adding,request,parameters,any,other,arguments,not,relevant,to,the,url,can,be,provided,as,literal,null,and,will,be,ignored,p,additional,custom,argument,types,can,be,supported,through,an,implementation,of,link,org,springframework,web,method,support,uri,components,contributor,param,method,the,target,controller,method,param,argument,values,argument,values,matching,to,method,parameters,return,a,uri,components,builder,instance;public,static,uri,components,builder,from,method,method,method,object,argument,values,uri,components,builder,builder,servlet,uri,components,builder,new,instance,path,get,method,request,mapping,method,uri,components,uri,components,apply,contributors,builder,method,argument,values,string,type,path,get,type,request,mapping,method,get,declaring,class,string,method,path,uri,components,get,path,string,path,path,matcher,combine,type,path,method,path,return,servlet,uri,components,builder,from,current,servlet,mapping,path,path,query,params,uri,components,get,query,params
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethod(Method method, Object... argumentValues);1385412762;Create a {@link UriComponentsBuilder} by pointing to a controller method and_providing method argument values. The method argument values are used to_prepare the URI for example expanding path variables, or adding request_parameters. Any other arguments not relevant to the URL can be provided as_{@literal null} and will be ignored._<p>_Additional (custom) argument types can be supported through an implementation_of {@link org.springframework.web.method.support.UriComponentsContributor}.__@param method the target controller method_@param argumentValues argument values matching to method parameters__@return a UriComponentsBuilder instance;public static UriComponentsBuilder fromMethod(Method method, Object... argumentValues) {__		UriComponentsBuilder builder = ServletUriComponentsBuilder.newInstance().path(getMethodRequestMapping(method))__		UriComponents uriComponents = applyContributors(builder, method, argumentValues)___		String typePath = getTypeRequestMapping(method.getDeclaringClass())__		String methodPath = uriComponents.getPath()__		String path = pathMatcher.combine(typePath, methodPath)___		return ServletUriComponentsBuilder.fromCurrentServletMapping().path(_				path).queryParams(uriComponents.getQueryParams())__	};create,a,link,uri,components,builder,by,pointing,to,a,controller,method,and,providing,method,argument,values,the,method,argument,values,are,used,to,prepare,the,uri,for,example,expanding,path,variables,or,adding,request,parameters,any,other,arguments,not,relevant,to,the,url,can,be,provided,as,literal,null,and,will,be,ignored,p,additional,custom,argument,types,can,be,supported,through,an,implementation,of,link,org,springframework,web,method,support,uri,components,contributor,param,method,the,target,controller,method,param,argument,values,argument,values,matching,to,method,parameters,return,a,uri,components,builder,instance;public,static,uri,components,builder,from,method,method,method,object,argument,values,uri,components,builder,builder,servlet,uri,components,builder,new,instance,path,get,method,request,mapping,method,uri,components,uri,components,apply,contributors,builder,method,argument,values,string,type,path,get,type,request,mapping,method,get,declaring,class,string,method,path,uri,components,get,path,string,path,path,matcher,combine,type,path,method,path,return,servlet,uri,components,builder,from,current,servlet,mapping,path,path,query,params,uri,components,get,query,params
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethod(Method method, Object... argumentValues);1385501137;Create a {@link UriComponentsBuilder} by pointing to a controller method and_providing method argument values. The method argument values are used to_prepare the URI for example expanding path variables, or adding request_parameters. Any other arguments not relevant to the URL can be provided as_{@literal null} and will be ignored._<p>_Additional (custom) argument types can be supported through an implementation_of {@link org.springframework.web.method.support.UriComponentsContributor}.__@param method the target controller method_@param argumentValues argument values matching to method parameters__@return a UriComponentsBuilder instance;public static UriComponentsBuilder fromMethod(Method method, Object... argumentValues) {__		UriComponentsBuilder builder = ServletUriComponentsBuilder.newInstance().path(getMethodRequestMapping(method))__		UriComponents uriComponents = applyContributors(builder, method, argumentValues)___		String typePath = getTypeRequestMapping(method.getDeclaringClass())__		String methodPath = uriComponents.getPath()__		String path = pathMatcher.combine(typePath, methodPath)___		return ServletUriComponentsBuilder.fromCurrentServletMapping().path(_				path).queryParams(uriComponents.getQueryParams())__	};create,a,link,uri,components,builder,by,pointing,to,a,controller,method,and,providing,method,argument,values,the,method,argument,values,are,used,to,prepare,the,uri,for,example,expanding,path,variables,or,adding,request,parameters,any,other,arguments,not,relevant,to,the,url,can,be,provided,as,literal,null,and,will,be,ignored,p,additional,custom,argument,types,can,be,supported,through,an,implementation,of,link,org,springframework,web,method,support,uri,components,contributor,param,method,the,target,controller,method,param,argument,values,argument,values,matching,to,method,parameters,return,a,uri,components,builder,instance;public,static,uri,components,builder,from,method,method,method,object,argument,values,uri,components,builder,builder,servlet,uri,components,builder,new,instance,path,get,method,request,mapping,method,uri,components,uri,components,apply,contributors,builder,method,argument,values,string,type,path,get,type,request,mapping,method,get,declaring,class,string,method,path,uri,components,get,path,string,path,path,matcher,combine,type,path,method,path,return,servlet,uri,components,builder,from,current,servlet,mapping,path,path,query,params,uri,components,get,query,params
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethod(Method method, Object... argumentValues);1385507478;Create a {@link UriComponentsBuilder} by pointing to a controller method and_providing method argument values. The method argument values are used to_prepare the URI for example expanding path variables, or adding request_parameters. Any other arguments not relevant to the URL can be provided as_{@literal null} and will be ignored._<p>Additional (custom) argument types can be supported through an implementation_of {@link org.springframework.web.method.support.UriComponentsContributor}._@param method the target controller method_@param argumentValues argument values matching to method parameters_@return a UriComponentsBuilder instance;public static UriComponentsBuilder fromMethod(Method method, Object... argumentValues) {__		UriComponentsBuilder builder = ServletUriComponentsBuilder.newInstance().path(getMethodRequestMapping(method))__		UriComponents uriComponents = applyContributors(builder, method, argumentValues)___		String typePath = getTypeRequestMapping(method.getDeclaringClass())__		String methodPath = uriComponents.getPath()__		String path = pathMatcher.combine(typePath, methodPath)___		return ServletUriComponentsBuilder.fromCurrentServletMapping().path(_				path).queryParams(uriComponents.getQueryParams())__	};create,a,link,uri,components,builder,by,pointing,to,a,controller,method,and,providing,method,argument,values,the,method,argument,values,are,used,to,prepare,the,uri,for,example,expanding,path,variables,or,adding,request,parameters,any,other,arguments,not,relevant,to,the,url,can,be,provided,as,literal,null,and,will,be,ignored,p,additional,custom,argument,types,can,be,supported,through,an,implementation,of,link,org,springframework,web,method,support,uri,components,contributor,param,method,the,target,controller,method,param,argument,values,argument,values,matching,to,method,parameters,return,a,uri,components,builder,instance;public,static,uri,components,builder,from,method,method,method,object,argument,values,uri,components,builder,builder,servlet,uri,components,builder,new,instance,path,get,method,request,mapping,method,uri,components,uri,components,apply,contributors,builder,method,argument,values,string,type,path,get,type,request,mapping,method,get,declaring,class,string,method,path,uri,components,get,path,string,path,path,matcher,combine,type,path,method,path,return,servlet,uri,components,builder,from,current,servlet,mapping,path,path,query,params,uri,components,get,query,params
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethod(Method method, Object... argumentValues);1387386512;Create a {@link UriComponentsBuilder} by pointing to a controller method and_providing method argument values. The method argument values are used to_prepare the URI for example expanding path variables, or adding request_parameters. Any other arguments not relevant to the URL can be provided as_{@literal null} and will be ignored._<p>Additional (custom) argument types can be supported through an implementation_of {@link org.springframework.web.method.support.UriComponentsContributor}._@param method the target controller method_@param argumentValues argument values matching to method parameters_@return a UriComponentsBuilder instance;public static UriComponentsBuilder fromMethod(Method method, Object... argumentValues) {_		UriComponentsBuilder builder = ServletUriComponentsBuilder.newInstance().path(getMethodRequestMapping(method))__		UriComponents uriComponents = applyContributors(builder, method, argumentValues)___		String typePath = getTypeRequestMapping(method.getDeclaringClass())__		String methodPath = uriComponents.getPath()__		String path = pathMatcher.combine(typePath, methodPath)___		return ServletUriComponentsBuilder.fromCurrentServletMapping().path(path).queryParams(uriComponents.getQueryParams())__	};create,a,link,uri,components,builder,by,pointing,to,a,controller,method,and,providing,method,argument,values,the,method,argument,values,are,used,to,prepare,the,uri,for,example,expanding,path,variables,or,adding,request,parameters,any,other,arguments,not,relevant,to,the,url,can,be,provided,as,literal,null,and,will,be,ignored,p,additional,custom,argument,types,can,be,supported,through,an,implementation,of,link,org,springframework,web,method,support,uri,components,contributor,param,method,the,target,controller,method,param,argument,values,argument,values,matching,to,method,parameters,return,a,uri,components,builder,instance;public,static,uri,components,builder,from,method,method,method,object,argument,values,uri,components,builder,builder,servlet,uri,components,builder,new,instance,path,get,method,request,mapping,method,uri,components,uri,components,apply,contributors,builder,method,argument,values,string,type,path,get,type,request,mapping,method,get,declaring,class,string,method,path,uri,components,get,path,string,path,path,matcher,combine,type,path,method,path,return,servlet,uri,components,builder,from,current,servlet,mapping,path,path,query,params,uri,components,get,query,params
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethod(Method method, Object... argumentValues);1391714711;Create a {@link UriComponentsBuilder} by pointing to a controller method and_providing method argument values. The method argument values are used to_prepare the URI for example expanding path variables, or adding request_parameters. Any other arguments not relevant to the URL can be provided as_{@literal null} and will be ignored._<p>Additional (custom) argument types can be supported through an implementation_of {@link org.springframework.web.method.support.UriComponentsContributor}._@param method the target controller method_@param argumentValues argument values matching to method parameters_@return a UriComponentsBuilder instance;public static UriComponentsBuilder fromMethod(Method method, Object... argumentValues) {_		UriComponentsBuilder builder = ServletUriComponentsBuilder.newInstance().path(getMethodRequestMapping(method))__		UriComponents uriComponents = applyContributors(builder, method, argumentValues)___		String typePath = getTypeRequestMapping(method.getDeclaringClass())__		String methodPath = uriComponents.getPath()__		String path = pathMatcher.combine(typePath, methodPath)___		return ServletUriComponentsBuilder.fromCurrentServletMapping().path(path).queryParams(uriComponents.getQueryParams())__	};create,a,link,uri,components,builder,by,pointing,to,a,controller,method,and,providing,method,argument,values,the,method,argument,values,are,used,to,prepare,the,uri,for,example,expanding,path,variables,or,adding,request,parameters,any,other,arguments,not,relevant,to,the,url,can,be,provided,as,literal,null,and,will,be,ignored,p,additional,custom,argument,types,can,be,supported,through,an,implementation,of,link,org,springframework,web,method,support,uri,components,contributor,param,method,the,target,controller,method,param,argument,values,argument,values,matching,to,method,parameters,return,a,uri,components,builder,instance;public,static,uri,components,builder,from,method,method,method,object,argument,values,uri,components,builder,builder,servlet,uri,components,builder,new,instance,path,get,method,request,mapping,method,uri,components,uri,components,apply,contributors,builder,method,argument,values,string,type,path,get,type,request,mapping,method,get,declaring,class,string,method,path,uri,components,get,path,string,path,path,matcher,combine,type,path,method,path,return,servlet,uri,components,builder,from,current,servlet,mapping,path,path,query,params,uri,components,get,query,params
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethod(Method method, Object... argumentValues);1391723719;Create a {@link UriComponentsBuilder} from the mapping of a controller method_and an array of method argument values. The array of values  must match the_signature of the controller method. Values for {@code @RequestParam} and_{@code @PathVariable} are used for building the URI (via implementations of_{@link org.springframework.web.method.support.UriComponentsContributor})_while remaining argument values are ignored and can be {@code null}.__@param method the controller method_@param argumentValues argument values for the controller method_@return a UriComponentsBuilder instance, never {@code null};public static UriComponentsBuilder fromMethod(Method method, Object... argumentValues) {__		UriComponentsBuilder builder = ServletUriComponentsBuilder.newInstance().path(getMethodRequestMapping(method))__		UriComponents uriComponents = applyContributors(builder, method, argumentValues)___		String typePath = getTypeRequestMapping(method.getDeclaringClass())__		String methodPath = uriComponents.getPath()__		String path = pathMatcher.combine(typePath, methodPath)___		return ServletUriComponentsBuilder.fromCurrentServletMapping().path(path)_				.queryParams(uriComponents.getQueryParams())__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,method,and,an,array,of,method,argument,values,the,array,of,values,must,match,the,signature,of,the,controller,method,values,for,code,request,param,and,code,path,variable,are,used,for,building,the,uri,via,implementations,of,link,org,springframework,web,method,support,uri,components,contributor,while,remaining,argument,values,are,ignored,and,can,be,code,null,param,method,the,controller,method,param,argument,values,argument,values,for,the,controller,method,return,a,uri,components,builder,instance,never,code,null;public,static,uri,components,builder,from,method,method,method,object,argument,values,uri,components,builder,builder,servlet,uri,components,builder,new,instance,path,get,method,request,mapping,method,uri,components,uri,components,apply,contributors,builder,method,argument,values,string,type,path,get,type,request,mapping,method,get,declaring,class,string,method,path,uri,components,get,path,string,path,path,matcher,combine,type,path,method,path,return,servlet,uri,components,builder,from,current,servlet,mapping,path,path,query,params,uri,components,get,query,params
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethod(Method method, Object... argumentValues);1391723719;Create a {@link UriComponentsBuilder} from the mapping of a controller method_and an array of method argument values. The array of values  must match the_signature of the controller method. Values for {@code @RequestParam} and_{@code @PathVariable} are used for building the URI (via implementations of_{@link org.springframework.web.method.support.UriComponentsContributor})_while remaining argument values are ignored and can be {@code null}.__@param method the controller method_@param argumentValues argument values for the controller method_@return a UriComponentsBuilder instance, never {@code null};public static UriComponentsBuilder fromMethod(Method method, Object... argumentValues) {__		String typePath = getTypeRequestMapping(method.getDeclaringClass())__		String methodPath = getMethodRequestMapping(method)__		String path = pathMatcher.combine(typePath, methodPath)___		UriComponentsBuilder builder = ServletUriComponentsBuilder.fromCurrentServletMapping().path(path)__		UriComponents uriComponents = applyContributors(builder, method, argumentValues)___		return ServletUriComponentsBuilder.newInstance().uriComponents(uriComponents)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,method,and,an,array,of,method,argument,values,the,array,of,values,must,match,the,signature,of,the,controller,method,values,for,code,request,param,and,code,path,variable,are,used,for,building,the,uri,via,implementations,of,link,org,springframework,web,method,support,uri,components,contributor,while,remaining,argument,values,are,ignored,and,can,be,code,null,param,method,the,controller,method,param,argument,values,argument,values,for,the,controller,method,return,a,uri,components,builder,instance,never,code,null;public,static,uri,components,builder,from,method,method,method,object,argument,values,string,type,path,get,type,request,mapping,method,get,declaring,class,string,method,path,get,method,request,mapping,method,string,path,path,matcher,combine,type,path,method,path,uri,components,builder,builder,servlet,uri,components,builder,from,current,servlet,mapping,path,path,uri,components,uri,components,apply,contributors,builder,method,argument,values,return,servlet,uri,components,builder,new,instance,uri,components,uri,components
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethod(Method method, Object... argumentValues);1399404473;Create a {@link UriComponentsBuilder} from the mapping of a controller method_and an array of method argument values. The array of values  must match the_signature of the controller method. Values for {@code @RequestParam} and_{@code @PathVariable} are used for building the URI (via implementations of_{@link org.springframework.web.method.support.UriComponentsContributor})_while remaining argument values are ignored and can be {@code null}.__@param method the controller method_@param argumentValues argument values for the controller method_@return a UriComponentsBuilder instance, never {@code null};public static UriComponentsBuilder fromMethod(Method method, Object... argumentValues) {__		String typePath = getTypeRequestMapping(method.getDeclaringClass())__		String methodPath = getMethodRequestMapping(method)__		String path = pathMatcher.combine(typePath, methodPath)___		UriComponentsBuilder builder = ServletUriComponentsBuilder.fromCurrentServletMapping().path(path)__		UriComponents uriComponents = applyContributors(builder, method, argumentValues)___		return ServletUriComponentsBuilder.newInstance().uriComponents(uriComponents)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,method,and,an,array,of,method,argument,values,the,array,of,values,must,match,the,signature,of,the,controller,method,values,for,code,request,param,and,code,path,variable,are,used,for,building,the,uri,via,implementations,of,link,org,springframework,web,method,support,uri,components,contributor,while,remaining,argument,values,are,ignored,and,can,be,code,null,param,method,the,controller,method,param,argument,values,argument,values,for,the,controller,method,return,a,uri,components,builder,instance,never,code,null;public,static,uri,components,builder,from,method,method,method,object,argument,values,string,type,path,get,type,request,mapping,method,get,declaring,class,string,method,path,get,method,request,mapping,method,string,path,path,matcher,combine,type,path,method,path,uri,components,builder,builder,servlet,uri,components,builder,from,current,servlet,mapping,path,path,uri,components,uri,components,apply,contributors,builder,method,argument,values,return,servlet,uri,components,builder,new,instance,uri,components,uri,components
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethod(Method method, Object... argumentValues);1400538909;Create a {@link UriComponentsBuilder} from the mapping of a controller method_and an array of method argument values. The array of values  must match the_signature of the controller method. Values for {@code @RequestParam} and_{@code @PathVariable} are used for building the URI (via implementations of_{@link org.springframework.web.method.support.UriComponentsContributor})_while remaining argument values are ignored and can be {@code null}._@param method the controller method_@param argumentValues argument values for the controller method_@return a UriComponentsBuilder instance, never {@code null};public static UriComponentsBuilder fromMethod(Method method, Object... argumentValues) {_		String typePath = getTypeRequestMapping(method.getDeclaringClass())__		String methodPath = getMethodRequestMapping(method)__		String path = pathMatcher.combine(typePath, methodPath)___		UriComponentsBuilder builder = ServletUriComponentsBuilder.fromCurrentServletMapping().path(path)__		UriComponents uriComponents = applyContributors(builder, method, argumentValues)__		return ServletUriComponentsBuilder.newInstance().uriComponents(uriComponents)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,method,and,an,array,of,method,argument,values,the,array,of,values,must,match,the,signature,of,the,controller,method,values,for,code,request,param,and,code,path,variable,are,used,for,building,the,uri,via,implementations,of,link,org,springframework,web,method,support,uri,components,contributor,while,remaining,argument,values,are,ignored,and,can,be,code,null,param,method,the,controller,method,param,argument,values,argument,values,for,the,controller,method,return,a,uri,components,builder,instance,never,code,null;public,static,uri,components,builder,from,method,method,method,object,argument,values,string,type,path,get,type,request,mapping,method,get,declaring,class,string,method,path,get,method,request,mapping,method,string,path,path,matcher,combine,type,path,method,path,uri,components,builder,builder,servlet,uri,components,builder,from,current,servlet,mapping,path,path,uri,components,uri,components,apply,contributors,builder,method,argument,values,return,servlet,uri,components,builder,new,instance,uri,components,uri,components
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethod(Method method, Object... argumentValues);1400542981;Create a {@link UriComponentsBuilder} from the mapping of a controller method_and an array of method argument values. The array of values  must match the_signature of the controller method. Values for {@code @RequestParam} and_{@code @PathVariable} are used for building the URI (via implementations of_{@link org.springframework.web.method.support.UriComponentsContributor})_while remaining argument values are ignored and can be {@code null}._@param method the controller method_@param argumentValues argument values for the controller method_@return a UriComponentsBuilder instance, never {@code null};public static UriComponentsBuilder fromMethod(Method method, Object... argumentValues) {_		String typePath = getTypeRequestMapping(method.getDeclaringClass())__		String methodPath = getMethodRequestMapping(method)__		String path = pathMatcher.combine(typePath, methodPath)___		UriComponentsBuilder builder = ServletUriComponentsBuilder.fromCurrentServletMapping().path(path)__		UriComponents uriComponents = applyContributors(builder, method, argumentValues)__		return ServletUriComponentsBuilder.newInstance().uriComponents(uriComponents)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,method,and,an,array,of,method,argument,values,the,array,of,values,must,match,the,signature,of,the,controller,method,values,for,code,request,param,and,code,path,variable,are,used,for,building,the,uri,via,implementations,of,link,org,springframework,web,method,support,uri,components,contributor,while,remaining,argument,values,are,ignored,and,can,be,code,null,param,method,the,controller,method,param,argument,values,argument,values,for,the,controller,method,return,a,uri,components,builder,instance,never,code,null;public,static,uri,components,builder,from,method,method,method,object,argument,values,string,type,path,get,type,request,mapping,method,get,declaring,class,string,method,path,get,method,request,mapping,method,string,path,path,matcher,combine,type,path,method,path,uri,components,builder,builder,servlet,uri,components,builder,from,current,servlet,mapping,path,path,uri,components,uri,components,apply,contributors,builder,method,argument,values,return,servlet,uri,components,builder,new,instance,uri,components,uri,components
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethod(Method method, Object... argumentValues);1402438271;Create a {@link UriComponentsBuilder} from the mapping of a controller method_and an array of method argument values. The array of values  must match the_signature of the controller method. Values for {@code @RequestParam} and_{@code @PathVariable} are used for building the URI (via implementations of_{@link org.springframework.web.method.support.UriComponentsContributor})_while remaining argument values are ignored and can be {@code null}._@param method the controller method_@param argumentValues argument values for the controller method_@return a UriComponentsBuilder instance, never {@code null};public static UriComponentsBuilder fromMethod(Method method, Object... argumentValues) {_		String typePath = getTypeRequestMapping(method.getDeclaringClass())__		String methodPath = getMethodRequestMapping(method)__		String path = pathMatcher.combine(typePath, methodPath)___		UriComponentsBuilder builder = ServletUriComponentsBuilder.fromCurrentServletMapping().path(path)__		UriComponents uriComponents = applyContributors(builder, method, argumentValues)__		return ServletUriComponentsBuilder.newInstance().uriComponents(uriComponents)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,method,and,an,array,of,method,argument,values,the,array,of,values,must,match,the,signature,of,the,controller,method,values,for,code,request,param,and,code,path,variable,are,used,for,building,the,uri,via,implementations,of,link,org,springframework,web,method,support,uri,components,contributor,while,remaining,argument,values,are,ignored,and,can,be,code,null,param,method,the,controller,method,param,argument,values,argument,values,for,the,controller,method,return,a,uri,components,builder,instance,never,code,null;public,static,uri,components,builder,from,method,method,method,object,argument,values,string,type,path,get,type,request,mapping,method,get,declaring,class,string,method,path,get,method,request,mapping,method,string,path,path,matcher,combine,type,path,method,path,uri,components,builder,builder,servlet,uri,components,builder,from,current,servlet,mapping,path,path,uri,components,uri,components,apply,contributors,builder,method,argument,values,return,servlet,uri,components,builder,new,instance,uri,components,uri,components
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethod(Method method, Object... argumentValues);1413848647;Create a {@link UriComponentsBuilder} from the mapping of a controller method_and an array of method argument values. The array of values  must match the_signature of the controller method. Values for {@code @RequestParam} and_{@code @PathVariable} are used for building the URI (via implementations of_{@link org.springframework.web.method.support.UriComponentsContributor})_while remaining argument values are ignored and can be {@code null}._@param method the controller method_@param argumentValues argument values for the controller method_@return a UriComponentsBuilder instance, never {@code null};public static UriComponentsBuilder fromMethod(Method method, Object... argumentValues) {_		String typePath = getTypeRequestMapping(method.getDeclaringClass())__		String methodPath = getMethodRequestMapping(method)__		String path = pathMatcher.combine(typePath, methodPath)___		UriComponentsBuilder builder = ServletUriComponentsBuilder.fromCurrentServletMapping().path(path)__		UriComponents uriComponents = applyContributors(builder, method, argumentValues)__		return ServletUriComponentsBuilder.newInstance().uriComponents(uriComponents)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,method,and,an,array,of,method,argument,values,the,array,of,values,must,match,the,signature,of,the,controller,method,values,for,code,request,param,and,code,path,variable,are,used,for,building,the,uri,via,implementations,of,link,org,springframework,web,method,support,uri,components,contributor,while,remaining,argument,values,are,ignored,and,can,be,code,null,param,method,the,controller,method,param,argument,values,argument,values,for,the,controller,method,return,a,uri,components,builder,instance,never,code,null;public,static,uri,components,builder,from,method,method,method,object,argument,values,string,type,path,get,type,request,mapping,method,get,declaring,class,string,method,path,get,method,request,mapping,method,string,path,path,matcher,combine,type,path,method,path,uri,components,builder,builder,servlet,uri,components,builder,from,current,servlet,mapping,path,path,uri,components,uri,components,apply,contributors,builder,method,argument,values,return,servlet,uri,components,builder,new,instance,uri,components,uri,components
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethod(Method method, Object... argumentValues);1417799775;Create a {@link UriComponentsBuilder} from the mapping of a controller method_and an array of method argument values. The array of values  must match the_signature of the controller method. Values for {@code @RequestParam} and_{@code @PathVariable} are used for building the URI (via implementations of_{@link org.springframework.web.method.support.UriComponentsContributor})_while remaining argument values are ignored and can be {@code null}._@param method the controller method_@param argumentValues argument values for the controller method_@return a UriComponentsBuilder instance, never {@code null};public static UriComponentsBuilder fromMethod(Method method, Object... argumentValues) {_		String typePath = getTypeRequestMapping(method.getDeclaringClass())__		String methodPath = getMethodRequestMapping(method)__		String path = pathMatcher.combine(typePath, methodPath)___		UriComponentsBuilder builder = ServletUriComponentsBuilder.fromCurrentServletMapping().path(path)__		UriComponents uriComponents = applyContributors(builder, method, argumentValues)__		return ServletUriComponentsBuilder.newInstance().uriComponents(uriComponents)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,method,and,an,array,of,method,argument,values,the,array,of,values,must,match,the,signature,of,the,controller,method,values,for,code,request,param,and,code,path,variable,are,used,for,building,the,uri,via,implementations,of,link,org,springframework,web,method,support,uri,components,contributor,while,remaining,argument,values,are,ignored,and,can,be,code,null,param,method,the,controller,method,param,argument,values,argument,values,for,the,controller,method,return,a,uri,components,builder,instance,never,code,null;public,static,uri,components,builder,from,method,method,method,object,argument,values,string,type,path,get,type,request,mapping,method,get,declaring,class,string,method,path,get,method,request,mapping,method,string,path,path,matcher,combine,type,path,method,path,uri,components,builder,builder,servlet,uri,components,builder,from,current,servlet,mapping,path,path,uri,components,uri,components,apply,contributors,builder,method,argument,values,return,servlet,uri,components,builder,new,instance,uri,components,uri,components
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethod(Method method, Object... argumentValues);1424972092;Create a {@link UriComponentsBuilder} from the mapping of a controller method_and an array of method argument values. The array of values  must match the_signature of the controller method. Values for {@code @RequestParam} and_{@code @PathVariable} are used for building the URI (via implementations of_{@link org.springframework.web.method.support.UriComponentsContributor})_while remaining argument values are ignored and can be {@code null}._@param method the controller method_@param argumentValues argument values for the controller method_@return a UriComponentsBuilder instance, never {@code null};public static UriComponentsBuilder fromMethod(Method method, Object... argumentValues) {_		String typePath = getTypeRequestMapping(method.getDeclaringClass())__		String methodPath = getMethodRequestMapping(method)__		String path = pathMatcher.combine(typePath, methodPath)___		UriComponentsBuilder builder = ServletUriComponentsBuilder.fromCurrentServletMapping().path(path)__		UriComponents uriComponents = applyContributors(builder, method, argumentValues)__		return ServletUriComponentsBuilder.newInstance().uriComponents(uriComponents)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,method,and,an,array,of,method,argument,values,the,array,of,values,must,match,the,signature,of,the,controller,method,values,for,code,request,param,and,code,path,variable,are,used,for,building,the,uri,via,implementations,of,link,org,springframework,web,method,support,uri,components,contributor,while,remaining,argument,values,are,ignored,and,can,be,code,null,param,method,the,controller,method,param,argument,values,argument,values,for,the,controller,method,return,a,uri,components,builder,instance,never,code,null;public,static,uri,components,builder,from,method,method,method,object,argument,values,string,type,path,get,type,request,mapping,method,get,declaring,class,string,method,path,get,method,request,mapping,method,string,path,path,matcher,combine,type,path,method,path,uri,components,builder,builder,servlet,uri,components,builder,from,current,servlet,mapping,path,path,uri,components,uri,components,apply,contributors,builder,method,argument,values,return,servlet,uri,components,builder,new,instance,uri,components,uri,components
MvcUriComponentsBuilder -> public MethodArgumentBuilder withMappingName(String mappingName);1429801417;An alternative to {@link #fromMappingName(String)} for use with an instance_of this class created via {@link #relativeTo}.;public MethodArgumentBuilder withMappingName(String mappingName) {_		return fromMappingName(this.baseUrl, mappingName)__	};an,alternative,to,link,from,mapping,name,string,for,use,with,an,instance,of,this,class,created,via,link,relative,to;public,method,argument,builder,with,mapping,name,string,mapping,name,return,from,mapping,name,this,base,url,mapping,name
MvcUriComponentsBuilder -> public MethodArgumentBuilder withMappingName(String mappingName);1429801944;An alternative to {@link #fromMappingName(String)} for use with an instance_of this class created via {@link #relativeTo}.;public MethodArgumentBuilder withMappingName(String mappingName) {_		return fromMappingName(this.baseUrl, mappingName)__	};an,alternative,to,link,from,mapping,name,string,for,use,with,an,instance,of,this,class,created,via,link,relative,to;public,method,argument,builder,with,mapping,name,string,mapping,name,return,from,mapping,name,this,base,url,mapping,name
MvcUriComponentsBuilder -> public MethodArgumentBuilder withMappingName(String mappingName);1429802180;An alternative to {@link #fromMappingName(String)} for use with an instance_of this class created via {@link #relativeTo}.;public MethodArgumentBuilder withMappingName(String mappingName) {_		return fromMappingName(this.baseUrl, mappingName)__	};an,alternative,to,link,from,mapping,name,string,for,use,with,an,instance,of,this,class,created,via,link,relative,to;public,method,argument,builder,with,mapping,name,string,mapping,name,return,from,mapping,name,this,base,url,mapping,name
MvcUriComponentsBuilder -> public MethodArgumentBuilder withMappingName(String mappingName);1429886024;An alternative to {@link #fromMappingName(String)} for use with an instance_of this class created via {@link #relativeTo}.;public MethodArgumentBuilder withMappingName(String mappingName) {_		return fromMappingName(this.baseUrl, mappingName)__	};an,alternative,to,link,from,mapping,name,string,for,use,with,an,instance,of,this,class,created,via,link,relative,to;public,method,argument,builder,with,mapping,name,string,mapping,name,return,from,mapping,name,this,base,url,mapping,name
MvcUriComponentsBuilder -> public MethodArgumentBuilder withMappingName(String mappingName);1429888980;An alternative to {@link #fromMappingName(String)} for use with an instance_of this class created via {@link #relativeTo}.;public MethodArgumentBuilder withMappingName(String mappingName) {_		return fromMappingName(this.baseUrl, mappingName)__	};an,alternative,to,link,from,mapping,name,string,for,use,with,an,instance,of,this,class,created,via,link,relative,to;public,method,argument,builder,with,mapping,name,string,mapping,name,return,from,mapping,name,this,base,url,mapping,name
MvcUriComponentsBuilder -> public MethodArgumentBuilder withMappingName(String mappingName);1430739806;An alternative to {@link #fromMappingName(String)} for use with an instance_of this class created via {@link #relativeTo}.;public MethodArgumentBuilder withMappingName(String mappingName) {_		return fromMappingName(this.baseUrl, mappingName)__	};an,alternative,to,link,from,mapping,name,string,for,use,with,an,instance,of,this,class,created,via,link,relative,to;public,method,argument,builder,with,mapping,name,string,mapping,name,return,from,mapping,name,this,base,url,mapping,name
MvcUriComponentsBuilder -> public MethodArgumentBuilder withMappingName(String mappingName);1430747547;An alternative to {@link #fromMappingName(String)} for use with an instance_of this class created via {@link #relativeTo}.;public MethodArgumentBuilder withMappingName(String mappingName) {_		return fromMappingName(this.baseUrl, mappingName)__	};an,alternative,to,link,from,mapping,name,string,for,use,with,an,instance,of,this,class,created,via,link,relative,to;public,method,argument,builder,with,mapping,name,string,mapping,name,return,from,mapping,name,this,base,url,mapping,name
MvcUriComponentsBuilder -> public MethodArgumentBuilder withMappingName(String mappingName);1430749606;An alternative to {@link #fromMappingName(String)} for use with an instance_of this class created via {@link #relativeTo}.;public MethodArgumentBuilder withMappingName(String mappingName) {_		return fromMappingName(this.baseUrl, mappingName)__	};an,alternative,to,link,from,mapping,name,string,for,use,with,an,instance,of,this,class,created,via,link,relative,to;public,method,argument,builder,with,mapping,name,string,mapping,name,return,from,mapping,name,this,base,url,mapping,name
MvcUriComponentsBuilder -> public MethodArgumentBuilder withMappingName(String mappingName);1431975386;An alternative to {@link #fromMappingName(String)} for use with an instance_of this class created via {@link #relativeTo}.;public MethodArgumentBuilder withMappingName(String mappingName) {_		return fromMappingName(this.baseUrl, mappingName)__	};an,alternative,to,link,from,mapping,name,string,for,use,with,an,instance,of,this,class,created,via,link,relative,to;public,method,argument,builder,with,mapping,name,string,mapping,name,return,from,mapping,name,this,base,url,mapping,name
MvcUriComponentsBuilder -> public MethodArgumentBuilder withMappingName(String mappingName);1432125256;An alternative to {@link #fromMappingName(String)} for use with an instance_of this class created via {@link #relativeTo}.;public MethodArgumentBuilder withMappingName(String mappingName) {_		return fromMappingName(this.baseUrl, mappingName)__	};an,alternative,to,link,from,mapping,name,string,for,use,with,an,instance,of,this,class,created,via,link,relative,to;public,method,argument,builder,with,mapping,name,string,mapping,name,return,from,mapping,name,this,base,url,mapping,name
MvcUriComponentsBuilder -> public MethodArgumentBuilder withMappingName(String mappingName);1432156007;An alternative to {@link #fromMappingName(String)} for use with an instance_of this class created via {@link #relativeTo}.;public MethodArgumentBuilder withMappingName(String mappingName) {_		return fromMappingName(this.baseUrl, mappingName)__	};an,alternative,to,link,from,mapping,name,string,for,use,with,an,instance,of,this,class,created,via,link,relative,to;public,method,argument,builder,with,mapping,name,string,mapping,name,return,from,mapping,name,this,base,url,mapping,name
MvcUriComponentsBuilder -> public MethodArgumentBuilder withMappingName(String mappingName);1432856630;An alternative to {@link #fromMappingName(String)} for use with an instance_of this class created via {@link #relativeTo}.;public MethodArgumentBuilder withMappingName(String mappingName) {_		return fromMappingName(this.baseUrl, mappingName)__	};an,alternative,to,link,from,mapping,name,string,for,use,with,an,instance,of,this,class,created,via,link,relative,to;public,method,argument,builder,with,mapping,name,string,mapping,name,return,from,mapping,name,this,base,url,mapping,name
MvcUriComponentsBuilder -> public MethodArgumentBuilder withMappingName(String mappingName);1432857824;An alternative to {@link #fromMappingName(String)} for use with an instance_of this class created via {@link #relativeTo}.;public MethodArgumentBuilder withMappingName(String mappingName) {_		return fromMappingName(this.baseUrl, mappingName)__	};an,alternative,to,link,from,mapping,name,string,for,use,with,an,instance,of,this,class,created,via,link,relative,to;public,method,argument,builder,with,mapping,name,string,mapping,name,return,from,mapping,name,this,base,url,mapping,name
MvcUriComponentsBuilder -> public MethodArgumentBuilder withMappingName(String mappingName);1434234880;An alternative to {@link #fromMappingName(String)} for use with an instance_of this class created via {@link #relativeTo}.;public MethodArgumentBuilder withMappingName(String mappingName) {_		return fromMappingName(this.baseUrl, mappingName)__	};an,alternative,to,link,from,mapping,name,string,for,use,with,an,instance,of,this,class,created,via,link,relative,to;public,method,argument,builder,with,mapping,name,string,mapping,name,return,from,mapping,name,this,base,url,mapping,name
MvcUriComponentsBuilder -> public MethodArgumentBuilder withMappingName(String mappingName);1434484897;An alternative to {@link #fromMappingName(String)} for use with an instance_of this class created via {@link #relativeTo}.;public MethodArgumentBuilder withMappingName(String mappingName) {_		return fromMappingName(this.baseUrl, mappingName)__	};an,alternative,to,link,from,mapping,name,string,for,use,with,an,instance,of,this,class,created,via,link,relative,to;public,method,argument,builder,with,mapping,name,string,mapping,name,return,from,mapping,name,this,base,url,mapping,name
MvcUriComponentsBuilder -> public MethodArgumentBuilder withMappingName(String mappingName);1434726592;An alternative to {@link #fromMappingName(String)} for use with an instance_of this class created via {@link #relativeTo}.;public MethodArgumentBuilder withMappingName(String mappingName) {_		return fromMappingName(this.baseUrl, mappingName)__	};an,alternative,to,link,from,mapping,name,string,for,use,with,an,instance,of,this,class,created,via,link,relative,to;public,method,argument,builder,with,mapping,name,string,mapping,name,return,from,mapping,name,this,base,url,mapping,name
MvcUriComponentsBuilder -> public MethodArgumentBuilder withMappingName(String mappingName);1435615322;An alternative to {@link #fromMappingName(String)} for use with an instance_of this class created via {@link #relativeTo}.;public MethodArgumentBuilder withMappingName(String mappingName) {_		return fromMappingName(this.baseUrl, mappingName)__	};an,alternative,to,link,from,mapping,name,string,for,use,with,an,instance,of,this,class,created,via,link,relative,to;public,method,argument,builder,with,mapping,name,string,mapping,name,return,from,mapping,name,this,base,url,mapping,name
MvcUriComponentsBuilder -> public MethodArgumentBuilder withMappingName(String mappingName);1439294371;An alternative to {@link #fromMappingName(String)} for use with an instance_of this class created via {@link #relativeTo}._@since 4.2;public MethodArgumentBuilder withMappingName(String mappingName) {_		return fromMappingName(this.baseUrl, mappingName)__	};an,alternative,to,link,from,mapping,name,string,for,use,with,an,instance,of,this,class,created,via,link,relative,to,since,4,2;public,method,argument,builder,with,mapping,name,string,mapping,name,return,from,mapping,name,this,base,url,mapping,name
MvcUriComponentsBuilder -> public MethodArgumentBuilder withMappingName(String mappingName);1447077465;An alternative to {@link #fromMappingName(String)} for use with an instance_of this class created via {@link #relativeTo}._@since 4.2;public MethodArgumentBuilder withMappingName(String mappingName) {_		return fromMappingName(this.baseUrl, mappingName)__	};an,alternative,to,link,from,mapping,name,string,for,use,with,an,instance,of,this,class,created,via,link,relative,to,since,4,2;public,method,argument,builder,with,mapping,name,string,mapping,name,return,from,mapping,name,this,base,url,mapping,name
MvcUriComponentsBuilder -> public MethodArgumentBuilder withMappingName(String mappingName);1458830024;An alternative to {@link #fromMappingName(String)} for use with an instance_of this class created via {@link #relativeTo}._@since 4.2;public MethodArgumentBuilder withMappingName(String mappingName) {_		return fromMappingName(this.baseUrl, mappingName)__	};an,alternative,to,link,from,mapping,name,string,for,use,with,an,instance,of,this,class,created,via,link,relative,to,since,4,2;public,method,argument,builder,with,mapping,name,string,mapping,name,return,from,mapping,name,this,base,url,mapping,name
MvcUriComponentsBuilder -> public MethodArgumentBuilder withMappingName(String mappingName);1461047077;An alternative to {@link #fromMappingName(String)} for use with an instance_of this class created via {@link #relativeTo}._@since 4.2;public MethodArgumentBuilder withMappingName(String mappingName) {_		return fromMappingName(this.baseUrl, mappingName)__	};an,alternative,to,link,from,mapping,name,string,for,use,with,an,instance,of,this,class,created,via,link,relative,to,since,4,2;public,method,argument,builder,with,mapping,name,string,mapping,name,return,from,mapping,name,this,base,url,mapping,name
MvcUriComponentsBuilder -> public MethodArgumentBuilder withMappingName(String mappingName);1467677340;An alternative to {@link #fromMappingName(String)} for use with an instance_of this class created via {@link #relativeTo}._@since 4.2;public MethodArgumentBuilder withMappingName(String mappingName) {_		return fromMappingName(this.baseUrl, mappingName)__	};an,alternative,to,link,from,mapping,name,string,for,use,with,an,instance,of,this,class,created,via,link,relative,to,since,4,2;public,method,argument,builder,with,mapping,name,string,mapping,name,return,from,mapping,name,this,base,url,mapping,name
MvcUriComponentsBuilder -> public MethodArgumentBuilder withMappingName(String mappingName);1467726769;An alternative to {@link #fromMappingName(String)} for use with an instance_of this class created via {@link #relativeTo}._@since 4.2;public MethodArgumentBuilder withMappingName(String mappingName) {_		return fromMappingName(this.baseUrl, mappingName)__	};an,alternative,to,link,from,mapping,name,string,for,use,with,an,instance,of,this,class,created,via,link,relative,to,since,4,2;public,method,argument,builder,with,mapping,name,string,mapping,name,return,from,mapping,name,this,base,url,mapping,name
MvcUriComponentsBuilder -> public MethodArgumentBuilder withMappingName(String mappingName);1467730834;An alternative to {@link #fromMappingName(String)} for use with an instance_of this class created via {@link #relativeTo}._@since 4.2;public MethodArgumentBuilder withMappingName(String mappingName) {_		return fromMappingName(this.baseUrl, mappingName)__	};an,alternative,to,link,from,mapping,name,string,for,use,with,an,instance,of,this,class,created,via,link,relative,to,since,4,2;public,method,argument,builder,with,mapping,name,string,mapping,name,return,from,mapping,name,this,base,url,mapping,name
MvcUriComponentsBuilder -> public MethodArgumentBuilder withMappingName(String mappingName);1467846264;An alternative to {@link #fromMappingName(String)} for use with an instance_of this class created via {@link #relativeTo}._@since 4.2;public MethodArgumentBuilder withMappingName(String mappingName) {_		return fromMappingName(this.baseUrl, mappingName)__	};an,alternative,to,link,from,mapping,name,string,for,use,with,an,instance,of,this,class,created,via,link,relative,to,since,4,2;public,method,argument,builder,with,mapping,name,string,mapping,name,return,from,mapping,name,this,base,url,mapping,name
MvcUriComponentsBuilder -> public MethodArgumentBuilder withMappingName(String mappingName);1468613531;An alternative to {@link #fromMappingName(String)} for use with an instance_of this class created via {@link #relativeTo}._@since 4.2;public MethodArgumentBuilder withMappingName(String mappingName) {_		return fromMappingName(this.baseUrl, mappingName)__	};an,alternative,to,link,from,mapping,name,string,for,use,with,an,instance,of,this,class,created,via,link,relative,to,since,4,2;public,method,argument,builder,with,mapping,name,string,mapping,name,return,from,mapping,name,this,base,url,mapping,name
MvcUriComponentsBuilder -> public MethodArgumentBuilder withMappingName(String mappingName);1468948866;An alternative to {@link #fromMappingName(String)} for use with an instance_of this class created via {@link #relativeTo}._@since 4.2;public MethodArgumentBuilder withMappingName(String mappingName) {_		return fromMappingName(this.baseUrl, mappingName)__	};an,alternative,to,link,from,mapping,name,string,for,use,with,an,instance,of,this,class,created,via,link,relative,to,since,4,2;public,method,argument,builder,with,mapping,name,string,mapping,name,return,from,mapping,name,this,base,url,mapping,name
MvcUriComponentsBuilder -> public MethodArgumentBuilder withMappingName(String mappingName);1485810955;An alternative to {@link #fromMappingName(String)} for use with an instance_of this class created via {@link #relativeTo}._@since 4.2;public MethodArgumentBuilder withMappingName(String mappingName) {_		return fromMappingName(this.baseUrl, mappingName)__	};an,alternative,to,link,from,mapping,name,string,for,use,with,an,instance,of,this,class,created,via,link,relative,to,since,4,2;public,method,argument,builder,with,mapping,name,string,mapping,name,return,from,mapping,name,this,base,url,mapping,name
MvcUriComponentsBuilder -> public MethodArgumentBuilder withMappingName(String mappingName);1486634978;An alternative to {@link #fromMappingName(String)} for use with an instance_of this class created via {@link #relativeTo}._@since 4.2;public MethodArgumentBuilder withMappingName(String mappingName) {_		return fromMappingName(this.baseUrl, mappingName)__	};an,alternative,to,link,from,mapping,name,string,for,use,with,an,instance,of,this,class,created,via,link,relative,to,since,4,2;public,method,argument,builder,with,mapping,name,string,mapping,name,return,from,mapping,name,this,base,url,mapping,name
MvcUriComponentsBuilder -> public MethodArgumentBuilder withMappingName(String mappingName);1486635693;An alternative to {@link #fromMappingName(String)} for use with an instance_of this class created via {@link #relativeTo}._@since 4.2;public MethodArgumentBuilder withMappingName(String mappingName) {_		return fromMappingName(this.baseUrl, mappingName)__	};an,alternative,to,link,from,mapping,name,string,for,use,with,an,instance,of,this,class,created,via,link,relative,to,since,4,2;public,method,argument,builder,with,mapping,name,string,mapping,name,return,from,mapping,name,this,base,url,mapping,name
MvcUriComponentsBuilder -> public MethodArgumentBuilder withMappingName(String mappingName);1495868221;An alternative to {@link #fromMappingName(String)} for use with an instance_of this class created via {@link #relativeTo}._@since 4.2;public MethodArgumentBuilder withMappingName(String mappingName) {_		return fromMappingName(this.baseUrl, mappingName)__	};an,alternative,to,link,from,mapping,name,string,for,use,with,an,instance,of,this,class,created,via,link,relative,to,since,4,2;public,method,argument,builder,with,mapping,name,string,mapping,name,return,from,mapping,name,this,base,url,mapping,name
MvcUriComponentsBuilder -> public MethodArgumentBuilder withMappingName(String mappingName);1496242568;An alternative to {@link #fromMappingName(String)} for use with an instance_of this class created via {@link #relativeTo}._@since 4.2;public MethodArgumentBuilder withMappingName(String mappingName) {_		return fromMappingName(this.baseUrl, mappingName)__	};an,alternative,to,link,from,mapping,name,string,for,use,with,an,instance,of,this,class,created,via,link,relative,to,since,4,2;public,method,argument,builder,with,mapping,name,string,mapping,name,return,from,mapping,name,this,base,url,mapping,name
MvcUriComponentsBuilder -> public MethodArgumentBuilder withMappingName(String mappingName);1496259743;An alternative to {@link #fromMappingName(String)} for use with an instance_of this class created via {@link #relativeTo}._@since 4.2;public MethodArgumentBuilder withMappingName(String mappingName) {_		return fromMappingName(this.baseUrl, mappingName)__	};an,alternative,to,link,from,mapping,name,string,for,use,with,an,instance,of,this,class,created,via,link,relative,to,since,4,2;public,method,argument,builder,with,mapping,name,string,mapping,name,return,from,mapping,name,this,base,url,mapping,name
MvcUriComponentsBuilder -> public MethodArgumentBuilder withMappingName(String mappingName);1496370972;An alternative to {@link #fromMappingName(String)} for use with an instance_of this class created via {@link #relativeTo}._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@since 4.2;public MethodArgumentBuilder withMappingName(String mappingName) {_		return fromMappingName(this.baseUrl, mappingName)__	};an,alternative,to,link,from,mapping,name,string,for,use,with,an,instance,of,this,class,created,via,link,relative,to,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,since,4,2;public,method,argument,builder,with,mapping,name,string,mapping,name,return,from,mapping,name,this,base,url,mapping,name
MvcUriComponentsBuilder -> public MethodArgumentBuilder withMappingName(String mappingName);1496837955;An alternative to {@link #fromMappingName(String)} for use with an instance_of this class created via {@link #relativeTo}._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@since 4.2;public MethodArgumentBuilder withMappingName(String mappingName) {_		return fromMappingName(this.baseUrl, mappingName)__	};an,alternative,to,link,from,mapping,name,string,for,use,with,an,instance,of,this,class,created,via,link,relative,to,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,since,4,2;public,method,argument,builder,with,mapping,name,string,mapping,name,return,from,mapping,name,this,base,url,mapping,name
MvcUriComponentsBuilder -> public MethodArgumentBuilder withMappingName(String mappingName);1497341397;An alternative to {@link #fromMappingName(String)} for use with an instance_of this class created via {@link #relativeTo}._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@since 4.2;public MethodArgumentBuilder withMappingName(String mappingName) {_		return fromMappingName(this.baseUrl, mappingName)__	};an,alternative,to,link,from,mapping,name,string,for,use,with,an,instance,of,this,class,created,via,link,relative,to,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,since,4,2;public,method,argument,builder,with,mapping,name,string,mapping,name,return,from,mapping,name,this,base,url,mapping,name
MvcUriComponentsBuilder -> public MethodArgumentBuilder withMappingName(String mappingName);1498780456;An alternative to {@link #fromMappingName(String)} for use with an instance_of this class created via {@link #relativeTo}._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@since 4.2;public MethodArgumentBuilder withMappingName(String mappingName) {_		return fromMappingName(this.baseUrl, mappingName)__	};an,alternative,to,link,from,mapping,name,string,for,use,with,an,instance,of,this,class,created,via,link,relative,to,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,since,4,2;public,method,argument,builder,with,mapping,name,string,mapping,name,return,from,mapping,name,this,base,url,mapping,name
MvcUriComponentsBuilder -> public MethodArgumentBuilder withMappingName(String mappingName);1500416137;An alternative to {@link #fromMappingName(String)} for use with an instance_of this class created via {@link #relativeTo}._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@since 4.2;public MethodArgumentBuilder withMappingName(String mappingName) {_		return fromMappingName(this.baseUrl, mappingName)__	};an,alternative,to,link,from,mapping,name,string,for,use,with,an,instance,of,this,class,created,via,link,relative,to,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,since,4,2;public,method,argument,builder,with,mapping,name,string,mapping,name,return,from,mapping,name,this,base,url,mapping,name
MvcUriComponentsBuilder -> public MethodArgumentBuilder withMappingName(String mappingName);1506097334;An alternative to {@link #fromMappingName(String)} for use with an instance_of this class created via {@link #relativeTo}._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@since 4.2;public MethodArgumentBuilder withMappingName(String mappingName) {_		return fromMappingName(this.baseUrl, mappingName)__	};an,alternative,to,link,from,mapping,name,string,for,use,with,an,instance,of,this,class,created,via,link,relative,to,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,since,4,2;public,method,argument,builder,with,mapping,name,string,mapping,name,return,from,mapping,name,this,base,url,mapping,name
MvcUriComponentsBuilder -> public MethodArgumentBuilder withMappingName(String mappingName);1518770299;An alternative to {@link #fromMappingName(String)} for use with an instance_of this class created via {@link #relativeTo}._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@since 4.2;public MethodArgumentBuilder withMappingName(String mappingName) {_		return fromMappingName(this.baseUrl, mappingName)__	};an,alternative,to,link,from,mapping,name,string,for,use,with,an,instance,of,this,class,created,via,link,relative,to,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,since,4,2;public,method,argument,builder,with,mapping,name,string,mapping,name,return,from,mapping,name,this,base,url,mapping,name
MvcUriComponentsBuilder -> public MethodArgumentBuilder withMappingName(String mappingName);1522354261;An alternative to {@link #fromMappingName(String)} for use with an instance_of this class created via {@link #relativeTo}._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@since 4.2;public MethodArgumentBuilder withMappingName(String mappingName) {_		return fromMappingName(this.baseUrl, mappingName)__	};an,alternative,to,link,from,mapping,name,string,for,use,with,an,instance,of,this,class,created,via,link,relative,to,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,since,4,2;public,method,argument,builder,with,mapping,name,string,mapping,name,return,from,mapping,name,this,base,url,mapping,name
MvcUriComponentsBuilder -> public MethodArgumentBuilder withMappingName(String mappingName);1523455554;An alternative to {@link #fromMappingName(String)} for use with an instance_of this class created via {@link #relativeTo}._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@since 4.2;public MethodArgumentBuilder withMappingName(String mappingName) {_		return fromMappingName(this.baseUrl, mappingName)__	};an,alternative,to,link,from,mapping,name,string,for,use,with,an,instance,of,this,class,created,via,link,relative,to,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,since,4,2;public,method,argument,builder,with,mapping,name,string,mapping,name,return,from,mapping,name,this,base,url,mapping,name
MvcUriComponentsBuilder -> public MethodArgumentBuilder withMappingName(String mappingName);1529028426;An alternative to {@link #fromMappingName(String)} for use with an instance_of this class created via {@link #relativeTo}._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@since 4.2;public MethodArgumentBuilder withMappingName(String mappingName) {_		return fromMappingName(this.baseUrl, mappingName)__	};an,alternative,to,link,from,mapping,name,string,for,use,with,an,instance,of,this,class,created,via,link,relative,to,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,since,4,2;public,method,argument,builder,with,mapping,name,string,mapping,name,return,from,mapping,name,this,base,url,mapping,name
MvcUriComponentsBuilder -> public MethodArgumentBuilder withMappingName(String mappingName);1529028426;An alternative to {@link #fromMappingName(String)} for use with an instance_of this class created via {@link #relativeTo}._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@since 4.2;public MethodArgumentBuilder withMappingName(String mappingName) {_		return fromMappingName(this.baseUrl, mappingName)__	};an,alternative,to,link,from,mapping,name,string,for,use,with,an,instance,of,this,class,created,via,link,relative,to,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,since,4,2;public,method,argument,builder,with,mapping,name,string,mapping,name,return,from,mapping,name,this,base,url,mapping,name
MvcUriComponentsBuilder -> public MethodArgumentBuilder withMappingName(String mappingName);1529028713;An alternative to {@link #fromMappingName(String)} for use with an instance_of this class created via {@link #relativeTo}._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@since 4.2;public MethodArgumentBuilder withMappingName(String mappingName) {_		return fromMappingName(this.baseUrl, mappingName)__	};an,alternative,to,link,from,mapping,name,string,for,use,with,an,instance,of,this,class,created,via,link,relative,to,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,since,4,2;public,method,argument,builder,with,mapping,name,string,mapping,name,return,from,mapping,name,this,base,url,mapping,name
MvcUriComponentsBuilder -> public MethodArgumentBuilder withMappingName(String mappingName);1529361191;An alternative to {@link #fromMappingName(String)} for use with an instance_of this class created via {@link #relativeTo}._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@since 4.2;public MethodArgumentBuilder withMappingName(String mappingName) {_		return fromMappingName(this.baseUrl, mappingName)__	};an,alternative,to,link,from,mapping,name,string,for,use,with,an,instance,of,this,class,created,via,link,relative,to,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,since,4,2;public,method,argument,builder,with,mapping,name,string,mapping,name,return,from,mapping,name,this,base,url,mapping,name
MvcUriComponentsBuilder -> public MethodArgumentBuilder withMappingName(String mappingName);1530174524;An alternative to {@link #fromMappingName(String)} for use with an instance_of this class created via {@link #relativeTo}._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@since 4.2;public MethodArgumentBuilder withMappingName(String mappingName) {_		return fromMappingName(this.baseUrl, mappingName)__	};an,alternative,to,link,from,mapping,name,string,for,use,with,an,instance,of,this,class,created,via,link,relative,to,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,since,4,2;public,method,argument,builder,with,mapping,name,string,mapping,name,return,from,mapping,name,this,base,url,mapping,name
MvcUriComponentsBuilder -> public MethodArgumentBuilder withMappingName(String mappingName);1532041662;An alternative to {@link #fromMappingName(String)} for use with an instance_of this class created via {@link #relativeTo}._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@since 4.2;public MethodArgumentBuilder withMappingName(String mappingName) {_		return fromMappingName(this.baseUrl, mappingName)__	};an,alternative,to,link,from,mapping,name,string,for,use,with,an,instance,of,this,class,created,via,link,relative,to,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,since,4,2;public,method,argument,builder,with,mapping,name,string,mapping,name,return,from,mapping,name,this,base,url,mapping,name
MvcUriComponentsBuilder -> public MethodArgumentBuilder withMappingName(String mappingName);1532041662;An alternative to {@link #fromMappingName(String)} for use with an instance_of this class created via {@link #relativeTo}._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@since 4.2;public MethodArgumentBuilder withMappingName(String mappingName) {_		return fromMappingName(this.baseUrl, mappingName)__	};an,alternative,to,link,from,mapping,name,string,for,use,with,an,instance,of,this,class,created,via,link,relative,to,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,since,4,2;public,method,argument,builder,with,mapping,name,string,mapping,name,return,from,mapping,name,this,base,url,mapping,name
MvcUriComponentsBuilder -> public MethodArgumentBuilder withMappingName(String mappingName);1548943222;An alternative to {@link #fromMappingName(String)} for use with an instance_of this class created via {@link #relativeTo}._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@since 4.2;public MethodArgumentBuilder withMappingName(String mappingName) {_		return fromMappingName(this.baseUrl, mappingName)__	};an,alternative,to,link,from,mapping,name,string,for,use,with,an,instance,of,this,class,created,via,link,relative,to,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,since,4,2;public,method,argument,builder,with,mapping,name,string,mapping,name,return,from,mapping,name,this,base,url,mapping,name
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodCall(Object info);1431975386;Create a {@link UriComponentsBuilder} by invoking a "mock" controller method._The controller method and the supplied argument values are then used to_delegate to {@link #fromMethod(java.lang.reflect.Method, Object...)}._<p>For example, given this controller:_<pre class="code">_&#064_RequestMapping("/people/{id}/addresses")_class AddressController {__&#064_RequestMapping("/{country}")_public HttpEntity<Void> getAddressesForCountry(&#064_PathVariable String country) { ... }__&#064_RequestMapping(value="/", method=RequestMethod.POST)_public void addAddress(Address address) { ... }__</pre>_A UriComponentsBuilder can be created:_<pre class="code">_// Inline style with static import of "MvcUriComponentsBuilder.on"__MvcUriComponentsBuilder.fromMethodCall(_on(AddressController.class).getAddressesForCountry("US")).buildAndExpand(1)___// Longer form useful for repeated invocation (and void controller methods)__AddressController controller = MvcUriComponentsBuilder.on(AddressController.class)__controller.addAddress(null)__builder = MvcUriComponentsBuilder.fromMethodCall(controller)__controller.getAddressesForCountry("US")_builder = MvcUriComponentsBuilder.fromMethodCall(controller)__</pre>_@param info either the value returned from a "mock" controller_invocation or the "mock" controller itself after an invocation_@return a UriComponents instance;public static UriComponentsBuilder fromMethodCall(Object info) {_		Assert.isInstanceOf(MethodInvocationInfo.class, info)__		MethodInvocationInfo invocationInfo = (MethodInvocationInfo) info__		Class<?> controllerType = invocationInfo.getControllerType()__		Method method = invocationInfo.getControllerMethod()__		Object[] arguments = invocationInfo.getArgumentValues()__		return fromMethodInternal(null, controllerType, method, arguments)__	};create,a,link,uri,components,builder,by,invoking,a,mock,controller,method,the,controller,method,and,the,supplied,argument,values,are,then,used,to,delegate,to,link,from,method,java,lang,reflect,method,object,p,for,example,given,this,controller,pre,class,code,064,request,mapping,people,id,addresses,class,address,controller,064,request,mapping,country,public,http,entity,void,get,addresses,for,country,064,path,variable,string,country,064,request,mapping,value,method,request,method,post,public,void,add,address,address,address,pre,a,uri,components,builder,can,be,created,pre,class,code,inline,style,with,static,import,of,mvc,uri,components,builder,on,mvc,uri,components,builder,from,method,call,on,address,controller,class,get,addresses,for,country,us,build,and,expand,1,longer,form,useful,for,repeated,invocation,and,void,controller,methods,address,controller,controller,mvc,uri,components,builder,on,address,controller,class,controller,add,address,null,builder,mvc,uri,components,builder,from,method,call,controller,controller,get,addresses,for,country,us,builder,mvc,uri,components,builder,from,method,call,controller,pre,param,info,either,the,value,returned,from,a,mock,controller,invocation,or,the,mock,controller,itself,after,an,invocation,return,a,uri,components,instance;public,static,uri,components,builder,from,method,call,object,info,assert,is,instance,of,method,invocation,info,class,info,method,invocation,info,invocation,info,method,invocation,info,info,class,controller,type,invocation,info,get,controller,type,method,method,invocation,info,get,controller,method,object,arguments,invocation,info,get,argument,values,return,from,method,internal,null,controller,type,method,arguments
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodCall(Object info);1432125256;Create a {@link UriComponentsBuilder} by invoking a "mock" controller method._The controller method and the supplied argument values are then used to_delegate to {@link #fromMethod(java.lang.reflect.Method, Object...)}._<p>For example, given this controller:_<pre class="code">_&#064_RequestMapping("/people/{id}/addresses")_class AddressController {__&#064_RequestMapping("/{country}")_public HttpEntity<Void> getAddressesForCountry(&#064_PathVariable String country) { ... }__&#064_RequestMapping(value="/", method=RequestMethod.POST)_public void addAddress(Address address) { ... }__</pre>_A UriComponentsBuilder can be created:_<pre class="code">_// Inline style with static import of "MvcUriComponentsBuilder.on"__MvcUriComponentsBuilder.fromMethodCall(_on(AddressController.class).getAddressesForCountry("US")).buildAndExpand(1)___// Longer form useful for repeated invocation (and void controller methods)__AddressController controller = MvcUriComponentsBuilder.on(AddressController.class)__controller.addAddress(null)__builder = MvcUriComponentsBuilder.fromMethodCall(controller)__controller.getAddressesForCountry("US")_builder = MvcUriComponentsBuilder.fromMethodCall(controller)__</pre>_@param info either the value returned from a "mock" controller_invocation or the "mock" controller itself after an invocation_@return a UriComponents instance;public static UriComponentsBuilder fromMethodCall(Object info) {_		Assert.isInstanceOf(MethodInvocationInfo.class, info)__		MethodInvocationInfo invocationInfo = (MethodInvocationInfo) info__		Class<?> controllerType = invocationInfo.getControllerType()__		Method method = invocationInfo.getControllerMethod()__		Object[] arguments = invocationInfo.getArgumentValues()__		return fromMethodInternal(null, controllerType, method, arguments)__	};create,a,link,uri,components,builder,by,invoking,a,mock,controller,method,the,controller,method,and,the,supplied,argument,values,are,then,used,to,delegate,to,link,from,method,java,lang,reflect,method,object,p,for,example,given,this,controller,pre,class,code,064,request,mapping,people,id,addresses,class,address,controller,064,request,mapping,country,public,http,entity,void,get,addresses,for,country,064,path,variable,string,country,064,request,mapping,value,method,request,method,post,public,void,add,address,address,address,pre,a,uri,components,builder,can,be,created,pre,class,code,inline,style,with,static,import,of,mvc,uri,components,builder,on,mvc,uri,components,builder,from,method,call,on,address,controller,class,get,addresses,for,country,us,build,and,expand,1,longer,form,useful,for,repeated,invocation,and,void,controller,methods,address,controller,controller,mvc,uri,components,builder,on,address,controller,class,controller,add,address,null,builder,mvc,uri,components,builder,from,method,call,controller,controller,get,addresses,for,country,us,builder,mvc,uri,components,builder,from,method,call,controller,pre,param,info,either,the,value,returned,from,a,mock,controller,invocation,or,the,mock,controller,itself,after,an,invocation,return,a,uri,components,instance;public,static,uri,components,builder,from,method,call,object,info,assert,is,instance,of,method,invocation,info,class,info,method,invocation,info,invocation,info,method,invocation,info,info,class,controller,type,invocation,info,get,controller,type,method,method,invocation,info,get,controller,method,object,arguments,invocation,info,get,argument,values,return,from,method,internal,null,controller,type,method,arguments
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodCall(Object info);1432156007;Create a {@link UriComponentsBuilder} by invoking a "mock" controller method._The controller method and the supplied argument values are then used to_delegate to {@link #fromMethod(java.lang.reflect.Method, Object...)}._<p>For example, given this controller:_<pre class="code">_&#064_RequestMapping("/people/{id}/addresses")_class AddressController {__&#064_RequestMapping("/{country}")_public HttpEntity<Void> getAddressesForCountry(&#064_PathVariable String country) { ... }__&#064_RequestMapping(value="/", method=RequestMethod.POST)_public void addAddress(Address address) { ... }__</pre>_A UriComponentsBuilder can be created:_<pre class="code">_// Inline style with static import of "MvcUriComponentsBuilder.on"__MvcUriComponentsBuilder.fromMethodCall(_on(AddressController.class).getAddressesForCountry("US")).buildAndExpand(1)___// Longer form useful for repeated invocation (and void controller methods)__AddressController controller = MvcUriComponentsBuilder.on(AddressController.class)__controller.addAddress(null)__builder = MvcUriComponentsBuilder.fromMethodCall(controller)__controller.getAddressesForCountry("US")_builder = MvcUriComponentsBuilder.fromMethodCall(controller)__</pre>_@param info either the value returned from a "mock" controller_invocation or the "mock" controller itself after an invocation_@return a UriComponents instance;public static UriComponentsBuilder fromMethodCall(Object info) {_		Assert.isInstanceOf(MethodInvocationInfo.class, info)__		MethodInvocationInfo invocationInfo = (MethodInvocationInfo) info__		Class<?> controllerType = invocationInfo.getControllerType()__		Method method = invocationInfo.getControllerMethod()__		Object[] arguments = invocationInfo.getArgumentValues()__		return fromMethodInternal(null, controllerType, method, arguments)__	};create,a,link,uri,components,builder,by,invoking,a,mock,controller,method,the,controller,method,and,the,supplied,argument,values,are,then,used,to,delegate,to,link,from,method,java,lang,reflect,method,object,p,for,example,given,this,controller,pre,class,code,064,request,mapping,people,id,addresses,class,address,controller,064,request,mapping,country,public,http,entity,void,get,addresses,for,country,064,path,variable,string,country,064,request,mapping,value,method,request,method,post,public,void,add,address,address,address,pre,a,uri,components,builder,can,be,created,pre,class,code,inline,style,with,static,import,of,mvc,uri,components,builder,on,mvc,uri,components,builder,from,method,call,on,address,controller,class,get,addresses,for,country,us,build,and,expand,1,longer,form,useful,for,repeated,invocation,and,void,controller,methods,address,controller,controller,mvc,uri,components,builder,on,address,controller,class,controller,add,address,null,builder,mvc,uri,components,builder,from,method,call,controller,controller,get,addresses,for,country,us,builder,mvc,uri,components,builder,from,method,call,controller,pre,param,info,either,the,value,returned,from,a,mock,controller,invocation,or,the,mock,controller,itself,after,an,invocation,return,a,uri,components,instance;public,static,uri,components,builder,from,method,call,object,info,assert,is,instance,of,method,invocation,info,class,info,method,invocation,info,invocation,info,method,invocation,info,info,class,controller,type,invocation,info,get,controller,type,method,method,invocation,info,get,controller,method,object,arguments,invocation,info,get,argument,values,return,from,method,internal,null,controller,type,method,arguments
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodCall(Object info);1432856630;Create a {@link UriComponentsBuilder} by invoking a "mock" controller method._The controller method and the supplied argument values are then used to_delegate to {@link #fromMethod(java.lang.reflect.Method, Object...)}._<p>For example, given this controller:_<pre class="code">_&#064_RequestMapping("/people/{id}/addresses")_class AddressController {__&#064_RequestMapping("/{country}")_public HttpEntity<Void> getAddressesForCountry(&#064_PathVariable String country) { ... }__&#064_RequestMapping(value="/", method=RequestMethod.POST)_public void addAddress(Address address) { ... }__</pre>_A UriComponentsBuilder can be created:_<pre class="code">_// Inline style with static import of "MvcUriComponentsBuilder.on"__MvcUriComponentsBuilder.fromMethodCall(_on(AddressController.class).getAddressesForCountry("US")).buildAndExpand(1)___// Longer form useful for repeated invocation (and void controller methods)__AddressController controller = MvcUriComponentsBuilder.on(AddressController.class)__controller.addAddress(null)__builder = MvcUriComponentsBuilder.fromMethodCall(controller)__controller.getAddressesForCountry("US")_builder = MvcUriComponentsBuilder.fromMethodCall(controller)__</pre>_@param info either the value returned from a "mock" controller_invocation or the "mock" controller itself after an invocation_@return a UriComponents instance;public static UriComponentsBuilder fromMethodCall(Object info) {_		Assert.isInstanceOf(MethodInvocationInfo.class, info)__		MethodInvocationInfo invocationInfo = (MethodInvocationInfo) info__		Class<?> controllerType = invocationInfo.getControllerType()__		Method method = invocationInfo.getControllerMethod()__		Object[] arguments = invocationInfo.getArgumentValues()__		return fromMethodInternal(null, controllerType, method, arguments)__	};create,a,link,uri,components,builder,by,invoking,a,mock,controller,method,the,controller,method,and,the,supplied,argument,values,are,then,used,to,delegate,to,link,from,method,java,lang,reflect,method,object,p,for,example,given,this,controller,pre,class,code,064,request,mapping,people,id,addresses,class,address,controller,064,request,mapping,country,public,http,entity,void,get,addresses,for,country,064,path,variable,string,country,064,request,mapping,value,method,request,method,post,public,void,add,address,address,address,pre,a,uri,components,builder,can,be,created,pre,class,code,inline,style,with,static,import,of,mvc,uri,components,builder,on,mvc,uri,components,builder,from,method,call,on,address,controller,class,get,addresses,for,country,us,build,and,expand,1,longer,form,useful,for,repeated,invocation,and,void,controller,methods,address,controller,controller,mvc,uri,components,builder,on,address,controller,class,controller,add,address,null,builder,mvc,uri,components,builder,from,method,call,controller,controller,get,addresses,for,country,us,builder,mvc,uri,components,builder,from,method,call,controller,pre,param,info,either,the,value,returned,from,a,mock,controller,invocation,or,the,mock,controller,itself,after,an,invocation,return,a,uri,components,instance;public,static,uri,components,builder,from,method,call,object,info,assert,is,instance,of,method,invocation,info,class,info,method,invocation,info,invocation,info,method,invocation,info,info,class,controller,type,invocation,info,get,controller,type,method,method,invocation,info,get,controller,method,object,arguments,invocation,info,get,argument,values,return,from,method,internal,null,controller,type,method,arguments
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodCall(Object info);1432857824;Create a {@link UriComponentsBuilder} by invoking a "mock" controller method._The controller method and the supplied argument values are then used to_delegate to {@link #fromMethod(java.lang.reflect.Method, Object...)}._<p>For example, given this controller:_<pre class="code">_&#064_RequestMapping("/people/{id}/addresses")_class AddressController {__&#064_RequestMapping("/{country}")_public HttpEntity<Void> getAddressesForCountry(&#064_PathVariable String country) { ... }__&#064_RequestMapping(value="/", method=RequestMethod.POST)_public void addAddress(Address address) { ... }__</pre>_A UriComponentsBuilder can be created:_<pre class="code">_// Inline style with static import of "MvcUriComponentsBuilder.on"__MvcUriComponentsBuilder.fromMethodCall(_on(AddressController.class).getAddressesForCountry("US")).buildAndExpand(1)___// Longer form useful for repeated invocation (and void controller methods)__AddressController controller = MvcUriComponentsBuilder.on(AddressController.class)__controller.addAddress(null)__builder = MvcUriComponentsBuilder.fromMethodCall(controller)__controller.getAddressesForCountry("US")_builder = MvcUriComponentsBuilder.fromMethodCall(controller)__</pre>_@param info either the value returned from a "mock" controller_invocation or the "mock" controller itself after an invocation_@return a UriComponents instance;public static UriComponentsBuilder fromMethodCall(Object info) {_		Assert.isInstanceOf(MethodInvocationInfo.class, info)__		MethodInvocationInfo invocationInfo = (MethodInvocationInfo) info__		Class<?> controllerType = invocationInfo.getControllerType()__		Method method = invocationInfo.getControllerMethod()__		Object[] arguments = invocationInfo.getArgumentValues()__		return fromMethodInternal(null, controllerType, method, arguments)__	};create,a,link,uri,components,builder,by,invoking,a,mock,controller,method,the,controller,method,and,the,supplied,argument,values,are,then,used,to,delegate,to,link,from,method,java,lang,reflect,method,object,p,for,example,given,this,controller,pre,class,code,064,request,mapping,people,id,addresses,class,address,controller,064,request,mapping,country,public,http,entity,void,get,addresses,for,country,064,path,variable,string,country,064,request,mapping,value,method,request,method,post,public,void,add,address,address,address,pre,a,uri,components,builder,can,be,created,pre,class,code,inline,style,with,static,import,of,mvc,uri,components,builder,on,mvc,uri,components,builder,from,method,call,on,address,controller,class,get,addresses,for,country,us,build,and,expand,1,longer,form,useful,for,repeated,invocation,and,void,controller,methods,address,controller,controller,mvc,uri,components,builder,on,address,controller,class,controller,add,address,null,builder,mvc,uri,components,builder,from,method,call,controller,controller,get,addresses,for,country,us,builder,mvc,uri,components,builder,from,method,call,controller,pre,param,info,either,the,value,returned,from,a,mock,controller,invocation,or,the,mock,controller,itself,after,an,invocation,return,a,uri,components,instance;public,static,uri,components,builder,from,method,call,object,info,assert,is,instance,of,method,invocation,info,class,info,method,invocation,info,invocation,info,method,invocation,info,info,class,controller,type,invocation,info,get,controller,type,method,method,invocation,info,get,controller,method,object,arguments,invocation,info,get,argument,values,return,from,method,internal,null,controller,type,method,arguments
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodCall(Object info);1434234880;Create a {@link UriComponentsBuilder} by invoking a "mock" controller method._The controller method and the supplied argument values are then used to_delegate to {@link #fromMethod(java.lang.reflect.Method, Object...)}._<p>For example, given this controller:_<pre class="code">_&#064_RequestMapping("/people/{id}/addresses")_class AddressController {__&#064_RequestMapping("/{country}")_public HttpEntity<Void> getAddressesForCountry(&#064_PathVariable String country) { ... }__&#064_RequestMapping(value="/", method=RequestMethod.POST)_public void addAddress(Address address) { ... }__</pre>_A UriComponentsBuilder can be created:_<pre class="code">_// Inline style with static import of "MvcUriComponentsBuilder.on"__MvcUriComponentsBuilder.fromMethodCall(_on(AddressController.class).getAddressesForCountry("US")).buildAndExpand(1)___// Longer form useful for repeated invocation (and void controller methods)__AddressController controller = MvcUriComponentsBuilder.on(AddressController.class)__controller.addAddress(null)__builder = MvcUriComponentsBuilder.fromMethodCall(controller)__controller.getAddressesForCountry("US")_builder = MvcUriComponentsBuilder.fromMethodCall(controller)__</pre>_@param info either the value returned from a "mock" controller_invocation or the "mock" controller itself after an invocation_@return a UriComponents instance;public static UriComponentsBuilder fromMethodCall(Object info) {_		Assert.isInstanceOf(MethodInvocationInfo.class, info)__		MethodInvocationInfo invocationInfo = (MethodInvocationInfo) info__		Class<?> controllerType = invocationInfo.getControllerType()__		Method method = invocationInfo.getControllerMethod()__		Object[] arguments = invocationInfo.getArgumentValues()__		return fromMethodInternal(null, controllerType, method, arguments)__	};create,a,link,uri,components,builder,by,invoking,a,mock,controller,method,the,controller,method,and,the,supplied,argument,values,are,then,used,to,delegate,to,link,from,method,java,lang,reflect,method,object,p,for,example,given,this,controller,pre,class,code,064,request,mapping,people,id,addresses,class,address,controller,064,request,mapping,country,public,http,entity,void,get,addresses,for,country,064,path,variable,string,country,064,request,mapping,value,method,request,method,post,public,void,add,address,address,address,pre,a,uri,components,builder,can,be,created,pre,class,code,inline,style,with,static,import,of,mvc,uri,components,builder,on,mvc,uri,components,builder,from,method,call,on,address,controller,class,get,addresses,for,country,us,build,and,expand,1,longer,form,useful,for,repeated,invocation,and,void,controller,methods,address,controller,controller,mvc,uri,components,builder,on,address,controller,class,controller,add,address,null,builder,mvc,uri,components,builder,from,method,call,controller,controller,get,addresses,for,country,us,builder,mvc,uri,components,builder,from,method,call,controller,pre,param,info,either,the,value,returned,from,a,mock,controller,invocation,or,the,mock,controller,itself,after,an,invocation,return,a,uri,components,instance;public,static,uri,components,builder,from,method,call,object,info,assert,is,instance,of,method,invocation,info,class,info,method,invocation,info,invocation,info,method,invocation,info,info,class,controller,type,invocation,info,get,controller,type,method,method,invocation,info,get,controller,method,object,arguments,invocation,info,get,argument,values,return,from,method,internal,null,controller,type,method,arguments
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodCall(Object info);1434484897;Create a {@link UriComponentsBuilder} by invoking a "mock" controller method._The controller method and the supplied argument values are then used to_delegate to {@link #fromMethod(java.lang.reflect.Method, Object...)}._<p>For example, given this controller:_<pre class="code">_&#064_RequestMapping("/people/{id}/addresses")_class AddressController {__&#064_RequestMapping("/{country}")_public HttpEntity<Void> getAddressesForCountry(&#064_PathVariable String country) { ... }__&#064_RequestMapping(value="/", method=RequestMethod.POST)_public void addAddress(Address address) { ... }__</pre>_A UriComponentsBuilder can be created:_<pre class="code">_// Inline style with static import of "MvcUriComponentsBuilder.on"__MvcUriComponentsBuilder.fromMethodCall(_on(AddressController.class).getAddressesForCountry("US")).buildAndExpand(1)___// Longer form useful for repeated invocation (and void controller methods)__AddressController controller = MvcUriComponentsBuilder.on(AddressController.class)__controller.addAddress(null)__builder = MvcUriComponentsBuilder.fromMethodCall(controller)__controller.getAddressesForCountry("US")_builder = MvcUriComponentsBuilder.fromMethodCall(controller)__</pre>_@param info either the value returned from a "mock" controller_invocation or the "mock" controller itself after an invocation_@return a UriComponents instance;public static UriComponentsBuilder fromMethodCall(Object info) {_		Assert.isInstanceOf(MethodInvocationInfo.class, info)__		MethodInvocationInfo invocationInfo = (MethodInvocationInfo) info__		Class<?> controllerType = invocationInfo.getControllerType()__		Method method = invocationInfo.getControllerMethod()__		Object[] arguments = invocationInfo.getArgumentValues()__		return fromMethodInternal(null, controllerType, method, arguments)__	};create,a,link,uri,components,builder,by,invoking,a,mock,controller,method,the,controller,method,and,the,supplied,argument,values,are,then,used,to,delegate,to,link,from,method,java,lang,reflect,method,object,p,for,example,given,this,controller,pre,class,code,064,request,mapping,people,id,addresses,class,address,controller,064,request,mapping,country,public,http,entity,void,get,addresses,for,country,064,path,variable,string,country,064,request,mapping,value,method,request,method,post,public,void,add,address,address,address,pre,a,uri,components,builder,can,be,created,pre,class,code,inline,style,with,static,import,of,mvc,uri,components,builder,on,mvc,uri,components,builder,from,method,call,on,address,controller,class,get,addresses,for,country,us,build,and,expand,1,longer,form,useful,for,repeated,invocation,and,void,controller,methods,address,controller,controller,mvc,uri,components,builder,on,address,controller,class,controller,add,address,null,builder,mvc,uri,components,builder,from,method,call,controller,controller,get,addresses,for,country,us,builder,mvc,uri,components,builder,from,method,call,controller,pre,param,info,either,the,value,returned,from,a,mock,controller,invocation,or,the,mock,controller,itself,after,an,invocation,return,a,uri,components,instance;public,static,uri,components,builder,from,method,call,object,info,assert,is,instance,of,method,invocation,info,class,info,method,invocation,info,invocation,info,method,invocation,info,info,class,controller,type,invocation,info,get,controller,type,method,method,invocation,info,get,controller,method,object,arguments,invocation,info,get,argument,values,return,from,method,internal,null,controller,type,method,arguments
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodCall(Object info);1434726592;Create a {@link UriComponentsBuilder} by invoking a "mock" controller method._The controller method and the supplied argument values are then used to_delegate to {@link #fromMethod(java.lang.reflect.Method, Object...)}._<p>For example, given this controller:_<pre class="code">_&#064_RequestMapping("/people/{id}/addresses")_class AddressController {__&#064_RequestMapping("/{country}")_public HttpEntity<Void> getAddressesForCountry(&#064_PathVariable String country) { ... }__&#064_RequestMapping(value="/", method=RequestMethod.POST)_public void addAddress(Address address) { ... }__</pre>_A UriComponentsBuilder can be created:_<pre class="code">_// Inline style with static import of "MvcUriComponentsBuilder.on"__MvcUriComponentsBuilder.fromMethodCall(_on(AddressController.class).getAddressesForCountry("US")).buildAndExpand(1)___// Longer form useful for repeated invocation (and void controller methods)__AddressController controller = MvcUriComponentsBuilder.on(AddressController.class)__controller.addAddress(null)__builder = MvcUriComponentsBuilder.fromMethodCall(controller)__controller.getAddressesForCountry("US")_builder = MvcUriComponentsBuilder.fromMethodCall(controller)__</pre>_@param info either the value returned from a "mock" controller_invocation or the "mock" controller itself after an invocation_@return a UriComponents instance;public static UriComponentsBuilder fromMethodCall(Object info) {_		Assert.isInstanceOf(MethodInvocationInfo.class, info)__		MethodInvocationInfo invocationInfo = (MethodInvocationInfo) info__		Class<?> controllerType = invocationInfo.getControllerType()__		Method method = invocationInfo.getControllerMethod()__		Object[] arguments = invocationInfo.getArgumentValues()__		return fromMethodInternal(null, controllerType, method, arguments)__	};create,a,link,uri,components,builder,by,invoking,a,mock,controller,method,the,controller,method,and,the,supplied,argument,values,are,then,used,to,delegate,to,link,from,method,java,lang,reflect,method,object,p,for,example,given,this,controller,pre,class,code,064,request,mapping,people,id,addresses,class,address,controller,064,request,mapping,country,public,http,entity,void,get,addresses,for,country,064,path,variable,string,country,064,request,mapping,value,method,request,method,post,public,void,add,address,address,address,pre,a,uri,components,builder,can,be,created,pre,class,code,inline,style,with,static,import,of,mvc,uri,components,builder,on,mvc,uri,components,builder,from,method,call,on,address,controller,class,get,addresses,for,country,us,build,and,expand,1,longer,form,useful,for,repeated,invocation,and,void,controller,methods,address,controller,controller,mvc,uri,components,builder,on,address,controller,class,controller,add,address,null,builder,mvc,uri,components,builder,from,method,call,controller,controller,get,addresses,for,country,us,builder,mvc,uri,components,builder,from,method,call,controller,pre,param,info,either,the,value,returned,from,a,mock,controller,invocation,or,the,mock,controller,itself,after,an,invocation,return,a,uri,components,instance;public,static,uri,components,builder,from,method,call,object,info,assert,is,instance,of,method,invocation,info,class,info,method,invocation,info,invocation,info,method,invocation,info,info,class,controller,type,invocation,info,get,controller,type,method,method,invocation,info,get,controller,method,object,arguments,invocation,info,get,argument,values,return,from,method,internal,null,controller,type,method,arguments
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodCall(Object info);1435615322;Create a {@link UriComponentsBuilder} by invoking a "mock" controller method._The controller method and the supplied argument values are then used to_delegate to {@link #fromMethod(java.lang.reflect.Method, Object...)}._<p>For example, given this controller:_<pre class="code">_&#064_RequestMapping("/people/{id}/addresses")_class AddressController {__&#064_RequestMapping("/{country}")_public HttpEntity<Void> getAddressesForCountry(&#064_PathVariable String country) { ... }__&#064_RequestMapping(value="/", method=RequestMethod.POST)_public void addAddress(Address address) { ... }__</pre>_A UriComponentsBuilder can be created:_<pre class="code">_// Inline style with static import of "MvcUriComponentsBuilder.on"__MvcUriComponentsBuilder.fromMethodCall(_on(AddressController.class).getAddressesForCountry("US")).buildAndExpand(1)___// Longer form useful for repeated invocation (and void controller methods)__AddressController controller = MvcUriComponentsBuilder.on(AddressController.class)__controller.addAddress(null)__builder = MvcUriComponentsBuilder.fromMethodCall(controller)__controller.getAddressesForCountry("US")_builder = MvcUriComponentsBuilder.fromMethodCall(controller)__</pre>_@param info either the value returned from a "mock" controller_invocation or the "mock" controller itself after an invocation_@return a UriComponents instance;public static UriComponentsBuilder fromMethodCall(Object info) {_		Assert.isInstanceOf(MethodInvocationInfo.class, info)__		MethodInvocationInfo invocationInfo = (MethodInvocationInfo) info__		Class<?> controllerType = invocationInfo.getControllerType()__		Method method = invocationInfo.getControllerMethod()__		Object[] arguments = invocationInfo.getArgumentValues()__		return fromMethodInternal(null, controllerType, method, arguments)__	};create,a,link,uri,components,builder,by,invoking,a,mock,controller,method,the,controller,method,and,the,supplied,argument,values,are,then,used,to,delegate,to,link,from,method,java,lang,reflect,method,object,p,for,example,given,this,controller,pre,class,code,064,request,mapping,people,id,addresses,class,address,controller,064,request,mapping,country,public,http,entity,void,get,addresses,for,country,064,path,variable,string,country,064,request,mapping,value,method,request,method,post,public,void,add,address,address,address,pre,a,uri,components,builder,can,be,created,pre,class,code,inline,style,with,static,import,of,mvc,uri,components,builder,on,mvc,uri,components,builder,from,method,call,on,address,controller,class,get,addresses,for,country,us,build,and,expand,1,longer,form,useful,for,repeated,invocation,and,void,controller,methods,address,controller,controller,mvc,uri,components,builder,on,address,controller,class,controller,add,address,null,builder,mvc,uri,components,builder,from,method,call,controller,controller,get,addresses,for,country,us,builder,mvc,uri,components,builder,from,method,call,controller,pre,param,info,either,the,value,returned,from,a,mock,controller,invocation,or,the,mock,controller,itself,after,an,invocation,return,a,uri,components,instance;public,static,uri,components,builder,from,method,call,object,info,assert,is,instance,of,method,invocation,info,class,info,method,invocation,info,invocation,info,method,invocation,info,info,class,controller,type,invocation,info,get,controller,type,method,method,invocation,info,get,controller,method,object,arguments,invocation,info,get,argument,values,return,from,method,internal,null,controller,type,method,arguments
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodCall(Object info);1439294371;Create a {@link UriComponentsBuilder} by invoking a "mock" controller method._The controller method and the supplied argument values are then used to_delegate to {@link #fromMethod(java.lang.reflect.Method, Object...)}._<p>For example, given this controller:_<pre class="code">_&#064_RequestMapping("/people/{id}/addresses")_class AddressController {__&#064_RequestMapping("/{country}")_public HttpEntity<Void> getAddressesForCountry(&#064_PathVariable String country) { ... }__&#064_RequestMapping(value="/", method=RequestMethod.POST)_public void addAddress(Address address) { ... }__</pre>_A UriComponentsBuilder can be created:_<pre class="code">_// Inline style with static import of "MvcUriComponentsBuilder.on"__MvcUriComponentsBuilder.fromMethodCall(_on(AddressController.class).getAddressesForCountry("US")).buildAndExpand(1)___// Longer form useful for repeated invocation (and void controller methods)__AddressController controller = MvcUriComponentsBuilder.on(AddressController.class)__controller.addAddress(null)__builder = MvcUriComponentsBuilder.fromMethodCall(controller)__controller.getAddressesForCountry("US")_builder = MvcUriComponentsBuilder.fromMethodCall(controller)__</pre>_@param info either the value returned from a "mock" controller_invocation or the "mock" controller itself after an invocation_@return a UriComponents instance;public static UriComponentsBuilder fromMethodCall(Object info) {_		Assert.isInstanceOf(MethodInvocationInfo.class, info)__		MethodInvocationInfo invocationInfo = (MethodInvocationInfo) info__		Class<?> controllerType = invocationInfo.getControllerType()__		Method method = invocationInfo.getControllerMethod()__		Object[] arguments = invocationInfo.getArgumentValues()__		return fromMethodInternal(null, controllerType, method, arguments)__	};create,a,link,uri,components,builder,by,invoking,a,mock,controller,method,the,controller,method,and,the,supplied,argument,values,are,then,used,to,delegate,to,link,from,method,java,lang,reflect,method,object,p,for,example,given,this,controller,pre,class,code,064,request,mapping,people,id,addresses,class,address,controller,064,request,mapping,country,public,http,entity,void,get,addresses,for,country,064,path,variable,string,country,064,request,mapping,value,method,request,method,post,public,void,add,address,address,address,pre,a,uri,components,builder,can,be,created,pre,class,code,inline,style,with,static,import,of,mvc,uri,components,builder,on,mvc,uri,components,builder,from,method,call,on,address,controller,class,get,addresses,for,country,us,build,and,expand,1,longer,form,useful,for,repeated,invocation,and,void,controller,methods,address,controller,controller,mvc,uri,components,builder,on,address,controller,class,controller,add,address,null,builder,mvc,uri,components,builder,from,method,call,controller,controller,get,addresses,for,country,us,builder,mvc,uri,components,builder,from,method,call,controller,pre,param,info,either,the,value,returned,from,a,mock,controller,invocation,or,the,mock,controller,itself,after,an,invocation,return,a,uri,components,instance;public,static,uri,components,builder,from,method,call,object,info,assert,is,instance,of,method,invocation,info,class,info,method,invocation,info,invocation,info,method,invocation,info,info,class,controller,type,invocation,info,get,controller,type,method,method,invocation,info,get,controller,method,object,arguments,invocation,info,get,argument,values,return,from,method,internal,null,controller,type,method,arguments
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodCall(Object info);1447077465;Create a {@link UriComponentsBuilder} by invoking a "mock" controller method._The controller method and the supplied argument values are then used to_delegate to {@link #fromMethod(java.lang.reflect.Method, Object...)}._<p>For example, given this controller:_<pre class="code">_&#064_RequestMapping("/people/{id}/addresses")_class AddressController {__&#064_RequestMapping("/{country}")_public HttpEntity<Void> getAddressesForCountry(&#064_PathVariable String country) { ... }__&#064_RequestMapping(value="/", method=RequestMethod.POST)_public void addAddress(Address address) { ... }__</pre>_A UriComponentsBuilder can be created:_<pre class="code">_// Inline style with static import of "MvcUriComponentsBuilder.on"__MvcUriComponentsBuilder.fromMethodCall(_on(AddressController.class).getAddressesForCountry("US")).buildAndExpand(1)___// Longer form useful for repeated invocation (and void controller methods)__AddressController controller = MvcUriComponentsBuilder.on(AddressController.class)__controller.addAddress(null)__builder = MvcUriComponentsBuilder.fromMethodCall(controller)__controller.getAddressesForCountry("US")_builder = MvcUriComponentsBuilder.fromMethodCall(controller)__</pre>_@param info either the value returned from a "mock" controller_invocation or the "mock" controller itself after an invocation_@return a UriComponents instance;public static UriComponentsBuilder fromMethodCall(Object info) {_		Assert.isInstanceOf(MethodInvocationInfo.class, info)__		MethodInvocationInfo invocationInfo = (MethodInvocationInfo) info__		Class<?> controllerType = invocationInfo.getControllerType()__		Method method = invocationInfo.getControllerMethod()__		Object[] arguments = invocationInfo.getArgumentValues()__		return fromMethodInternal(null, controllerType, method, arguments)__	};create,a,link,uri,components,builder,by,invoking,a,mock,controller,method,the,controller,method,and,the,supplied,argument,values,are,then,used,to,delegate,to,link,from,method,java,lang,reflect,method,object,p,for,example,given,this,controller,pre,class,code,064,request,mapping,people,id,addresses,class,address,controller,064,request,mapping,country,public,http,entity,void,get,addresses,for,country,064,path,variable,string,country,064,request,mapping,value,method,request,method,post,public,void,add,address,address,address,pre,a,uri,components,builder,can,be,created,pre,class,code,inline,style,with,static,import,of,mvc,uri,components,builder,on,mvc,uri,components,builder,from,method,call,on,address,controller,class,get,addresses,for,country,us,build,and,expand,1,longer,form,useful,for,repeated,invocation,and,void,controller,methods,address,controller,controller,mvc,uri,components,builder,on,address,controller,class,controller,add,address,null,builder,mvc,uri,components,builder,from,method,call,controller,controller,get,addresses,for,country,us,builder,mvc,uri,components,builder,from,method,call,controller,pre,param,info,either,the,value,returned,from,a,mock,controller,invocation,or,the,mock,controller,itself,after,an,invocation,return,a,uri,components,instance;public,static,uri,components,builder,from,method,call,object,info,assert,is,instance,of,method,invocation,info,class,info,method,invocation,info,invocation,info,method,invocation,info,info,class,controller,type,invocation,info,get,controller,type,method,method,invocation,info,get,controller,method,object,arguments,invocation,info,get,argument,values,return,from,method,internal,null,controller,type,method,arguments
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodCall(Object info);1458830024;Create a {@link UriComponentsBuilder} by invoking a "mock" controller method._The controller method and the supplied argument values are then used to_delegate to {@link #fromMethod(java.lang.reflect.Method, Object...)}._<p>For example, given this controller:_<pre class="code">_&#064_RequestMapping("/people/{id}/addresses")_class AddressController {__&#064_RequestMapping("/{country}")_public HttpEntity<Void> getAddressesForCountry(&#064_PathVariable String country) { ... }__&#064_RequestMapping(value="/", method=RequestMethod.POST)_public void addAddress(Address address) { ... }__</pre>_A UriComponentsBuilder can be created:_<pre class="code">_// Inline style with static import of "MvcUriComponentsBuilder.on"__MvcUriComponentsBuilder.fromMethodCall(_on(AddressController.class).getAddressesForCountry("US")).buildAndExpand(1)___// Longer form useful for repeated invocation (and void controller methods)__AddressController controller = MvcUriComponentsBuilder.on(AddressController.class)__controller.addAddress(null)__builder = MvcUriComponentsBuilder.fromMethodCall(controller)__controller.getAddressesForCountry("US")_builder = MvcUriComponentsBuilder.fromMethodCall(controller)__</pre>_@param info either the value returned from a "mock" controller_invocation or the "mock" controller itself after an invocation_@return a UriComponents instance;public static UriComponentsBuilder fromMethodCall(Object info) {_		Assert.isInstanceOf(MethodInvocationInfo.class, info)__		MethodInvocationInfo invocationInfo = (MethodInvocationInfo) info__		Class<?> controllerType = invocationInfo.getControllerType()__		Method method = invocationInfo.getControllerMethod()__		Object[] arguments = invocationInfo.getArgumentValues()__		return fromMethodInternal(null, controllerType, method, arguments)__	};create,a,link,uri,components,builder,by,invoking,a,mock,controller,method,the,controller,method,and,the,supplied,argument,values,are,then,used,to,delegate,to,link,from,method,java,lang,reflect,method,object,p,for,example,given,this,controller,pre,class,code,064,request,mapping,people,id,addresses,class,address,controller,064,request,mapping,country,public,http,entity,void,get,addresses,for,country,064,path,variable,string,country,064,request,mapping,value,method,request,method,post,public,void,add,address,address,address,pre,a,uri,components,builder,can,be,created,pre,class,code,inline,style,with,static,import,of,mvc,uri,components,builder,on,mvc,uri,components,builder,from,method,call,on,address,controller,class,get,addresses,for,country,us,build,and,expand,1,longer,form,useful,for,repeated,invocation,and,void,controller,methods,address,controller,controller,mvc,uri,components,builder,on,address,controller,class,controller,add,address,null,builder,mvc,uri,components,builder,from,method,call,controller,controller,get,addresses,for,country,us,builder,mvc,uri,components,builder,from,method,call,controller,pre,param,info,either,the,value,returned,from,a,mock,controller,invocation,or,the,mock,controller,itself,after,an,invocation,return,a,uri,components,instance;public,static,uri,components,builder,from,method,call,object,info,assert,is,instance,of,method,invocation,info,class,info,method,invocation,info,invocation,info,method,invocation,info,info,class,controller,type,invocation,info,get,controller,type,method,method,invocation,info,get,controller,method,object,arguments,invocation,info,get,argument,values,return,from,method,internal,null,controller,type,method,arguments
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodCall(Object info);1461047077;Create a {@link UriComponentsBuilder} by invoking a "mock" controller method._The controller method and the supplied argument values are then used to_delegate to {@link #fromMethod(java.lang.reflect.Method, Object...)}._<p>For example, given this controller:_<pre class="code">_&#064_RequestMapping("/people/{id}/addresses")_class AddressController {__&#064_RequestMapping("/{country}")_public HttpEntity<Void> getAddressesForCountry(&#064_PathVariable String country) { ... }__&#064_RequestMapping(value="/", method=RequestMethod.POST)_public void addAddress(Address address) { ... }__</pre>_A UriComponentsBuilder can be created:_<pre class="code">_// Inline style with static import of "MvcUriComponentsBuilder.on"__MvcUriComponentsBuilder.fromMethodCall(_on(AddressController.class).getAddressesForCountry("US")).buildAndExpand(1)___// Longer form useful for repeated invocation (and void controller methods)__AddressController controller = MvcUriComponentsBuilder.on(AddressController.class)__controller.addAddress(null)__builder = MvcUriComponentsBuilder.fromMethodCall(controller)__controller.getAddressesForCountry("US")_builder = MvcUriComponentsBuilder.fromMethodCall(controller)__</pre>_@param info either the value returned from a "mock" controller_invocation or the "mock" controller itself after an invocation_@return a UriComponents instance;public static UriComponentsBuilder fromMethodCall(Object info) {_		Assert.isInstanceOf(MethodInvocationInfo.class, info)__		MethodInvocationInfo invocationInfo = (MethodInvocationInfo) info__		Class<?> controllerType = invocationInfo.getControllerType()__		Method method = invocationInfo.getControllerMethod()__		Object[] arguments = invocationInfo.getArgumentValues()__		return fromMethodInternal(null, controllerType, method, arguments)__	};create,a,link,uri,components,builder,by,invoking,a,mock,controller,method,the,controller,method,and,the,supplied,argument,values,are,then,used,to,delegate,to,link,from,method,java,lang,reflect,method,object,p,for,example,given,this,controller,pre,class,code,064,request,mapping,people,id,addresses,class,address,controller,064,request,mapping,country,public,http,entity,void,get,addresses,for,country,064,path,variable,string,country,064,request,mapping,value,method,request,method,post,public,void,add,address,address,address,pre,a,uri,components,builder,can,be,created,pre,class,code,inline,style,with,static,import,of,mvc,uri,components,builder,on,mvc,uri,components,builder,from,method,call,on,address,controller,class,get,addresses,for,country,us,build,and,expand,1,longer,form,useful,for,repeated,invocation,and,void,controller,methods,address,controller,controller,mvc,uri,components,builder,on,address,controller,class,controller,add,address,null,builder,mvc,uri,components,builder,from,method,call,controller,controller,get,addresses,for,country,us,builder,mvc,uri,components,builder,from,method,call,controller,pre,param,info,either,the,value,returned,from,a,mock,controller,invocation,or,the,mock,controller,itself,after,an,invocation,return,a,uri,components,instance;public,static,uri,components,builder,from,method,call,object,info,assert,is,instance,of,method,invocation,info,class,info,method,invocation,info,invocation,info,method,invocation,info,info,class,controller,type,invocation,info,get,controller,type,method,method,invocation,info,get,controller,method,object,arguments,invocation,info,get,argument,values,return,from,method,internal,null,controller,type,method,arguments
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodCall(Object info);1467677340;Create a {@link UriComponentsBuilder} by invoking a "mock" controller method._The controller method and the supplied argument values are then used to_delegate to {@link #fromMethod(java.lang.reflect.Method, Object...)}._<p>For example, given this controller:_<pre class="code">_&#064_RequestMapping("/people/{id}/addresses")_class AddressController {__&#064_RequestMapping("/{country}")_public HttpEntity<Void> getAddressesForCountry(&#064_PathVariable String country) { ... }__&#064_RequestMapping(value="/", method=RequestMethod.POST)_public void addAddress(Address address) { ... }__</pre>_A UriComponentsBuilder can be created:_<pre class="code">_// Inline style with static import of "MvcUriComponentsBuilder.on"__MvcUriComponentsBuilder.fromMethodCall(_on(AddressController.class).getAddressesForCountry("US")).buildAndExpand(1)___// Longer form useful for repeated invocation (and void controller methods)__AddressController controller = MvcUriComponentsBuilder.on(AddressController.class)__controller.addAddress(null)__builder = MvcUriComponentsBuilder.fromMethodCall(controller)__controller.getAddressesForCountry("US")_builder = MvcUriComponentsBuilder.fromMethodCall(controller)__</pre>_@param info either the value returned from a "mock" controller_invocation or the "mock" controller itself after an invocation_@return a UriComponents instance;public static UriComponentsBuilder fromMethodCall(Object info) {_		Assert.isInstanceOf(MethodInvocationInfo.class, info)__		MethodInvocationInfo invocationInfo = (MethodInvocationInfo) info__		Class<?> controllerType = invocationInfo.getControllerType()__		Method method = invocationInfo.getControllerMethod()__		Object[] arguments = invocationInfo.getArgumentValues()__		return fromMethodInternal(null, controllerType, method, arguments)__	};create,a,link,uri,components,builder,by,invoking,a,mock,controller,method,the,controller,method,and,the,supplied,argument,values,are,then,used,to,delegate,to,link,from,method,java,lang,reflect,method,object,p,for,example,given,this,controller,pre,class,code,064,request,mapping,people,id,addresses,class,address,controller,064,request,mapping,country,public,http,entity,void,get,addresses,for,country,064,path,variable,string,country,064,request,mapping,value,method,request,method,post,public,void,add,address,address,address,pre,a,uri,components,builder,can,be,created,pre,class,code,inline,style,with,static,import,of,mvc,uri,components,builder,on,mvc,uri,components,builder,from,method,call,on,address,controller,class,get,addresses,for,country,us,build,and,expand,1,longer,form,useful,for,repeated,invocation,and,void,controller,methods,address,controller,controller,mvc,uri,components,builder,on,address,controller,class,controller,add,address,null,builder,mvc,uri,components,builder,from,method,call,controller,controller,get,addresses,for,country,us,builder,mvc,uri,components,builder,from,method,call,controller,pre,param,info,either,the,value,returned,from,a,mock,controller,invocation,or,the,mock,controller,itself,after,an,invocation,return,a,uri,components,instance;public,static,uri,components,builder,from,method,call,object,info,assert,is,instance,of,method,invocation,info,class,info,method,invocation,info,invocation,info,method,invocation,info,info,class,controller,type,invocation,info,get,controller,type,method,method,invocation,info,get,controller,method,object,arguments,invocation,info,get,argument,values,return,from,method,internal,null,controller,type,method,arguments
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodCall(Object info);1467726769;Create a {@link UriComponentsBuilder} by invoking a "mock" controller method._The controller method and the supplied argument values are then used to_delegate to {@link #fromMethod(java.lang.reflect.Method, Object...)}._<p>For example, given this controller:_<pre class="code">_&#064_RequestMapping("/people/{id}/addresses")_class AddressController {__&#064_RequestMapping("/{country}")_public HttpEntity<Void> getAddressesForCountry(&#064_PathVariable String country) { ... }__&#064_RequestMapping(value="/", method=RequestMethod.POST)_public void addAddress(Address address) { ... }__</pre>_A UriComponentsBuilder can be created:_<pre class="code">_// Inline style with static import of "MvcUriComponentsBuilder.on"__MvcUriComponentsBuilder.fromMethodCall(_on(AddressController.class).getAddressesForCountry("US")).buildAndExpand(1)___// Longer form useful for repeated invocation (and void controller methods)__AddressController controller = MvcUriComponentsBuilder.on(AddressController.class)__controller.addAddress(null)__builder = MvcUriComponentsBuilder.fromMethodCall(controller)__controller.getAddressesForCountry("US")_builder = MvcUriComponentsBuilder.fromMethodCall(controller)__</pre>_@param info either the value returned from a "mock" controller_invocation or the "mock" controller itself after an invocation_@return a UriComponents instance;public static UriComponentsBuilder fromMethodCall(Object info) {_		Assert.isInstanceOf(MethodInvocationInfo.class, info)__		MethodInvocationInfo invocationInfo = (MethodInvocationInfo) info__		Class<?> controllerType = invocationInfo.getControllerType()__		Method method = invocationInfo.getControllerMethod()__		Object[] arguments = invocationInfo.getArgumentValues()__		return fromMethodInternal(null, controllerType, method, arguments)__	};create,a,link,uri,components,builder,by,invoking,a,mock,controller,method,the,controller,method,and,the,supplied,argument,values,are,then,used,to,delegate,to,link,from,method,java,lang,reflect,method,object,p,for,example,given,this,controller,pre,class,code,064,request,mapping,people,id,addresses,class,address,controller,064,request,mapping,country,public,http,entity,void,get,addresses,for,country,064,path,variable,string,country,064,request,mapping,value,method,request,method,post,public,void,add,address,address,address,pre,a,uri,components,builder,can,be,created,pre,class,code,inline,style,with,static,import,of,mvc,uri,components,builder,on,mvc,uri,components,builder,from,method,call,on,address,controller,class,get,addresses,for,country,us,build,and,expand,1,longer,form,useful,for,repeated,invocation,and,void,controller,methods,address,controller,controller,mvc,uri,components,builder,on,address,controller,class,controller,add,address,null,builder,mvc,uri,components,builder,from,method,call,controller,controller,get,addresses,for,country,us,builder,mvc,uri,components,builder,from,method,call,controller,pre,param,info,either,the,value,returned,from,a,mock,controller,invocation,or,the,mock,controller,itself,after,an,invocation,return,a,uri,components,instance;public,static,uri,components,builder,from,method,call,object,info,assert,is,instance,of,method,invocation,info,class,info,method,invocation,info,invocation,info,method,invocation,info,info,class,controller,type,invocation,info,get,controller,type,method,method,invocation,info,get,controller,method,object,arguments,invocation,info,get,argument,values,return,from,method,internal,null,controller,type,method,arguments
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodCall(Object info);1467730834;Create a {@link UriComponentsBuilder} by invoking a "mock" controller method._The controller method and the supplied argument values are then used to_delegate to {@link #fromMethod(java.lang.reflect.Method, Object...)}._<p>For example, given this controller:_<pre class="code">_&#064_RequestMapping("/people/{id}/addresses")_class AddressController {__&#064_RequestMapping("/{country}")_public HttpEntity<Void> getAddressesForCountry(&#064_PathVariable String country) { ... }__&#064_RequestMapping(value="/", method=RequestMethod.POST)_public void addAddress(Address address) { ... }__</pre>_A UriComponentsBuilder can be created:_<pre class="code">_// Inline style with static import of "MvcUriComponentsBuilder.on"__MvcUriComponentsBuilder.fromMethodCall(_on(AddressController.class).getAddressesForCountry("US")).buildAndExpand(1)___// Longer form useful for repeated invocation (and void controller methods)__AddressController controller = MvcUriComponentsBuilder.on(AddressController.class)__controller.addAddress(null)__builder = MvcUriComponentsBuilder.fromMethodCall(controller)__controller.getAddressesForCountry("US")_builder = MvcUriComponentsBuilder.fromMethodCall(controller)__</pre>_@param info either the value returned from a "mock" controller_invocation or the "mock" controller itself after an invocation_@return a UriComponents instance;public static UriComponentsBuilder fromMethodCall(Object info) {_		Assert.isInstanceOf(MethodInvocationInfo.class, info)__		MethodInvocationInfo invocationInfo = (MethodInvocationInfo) info__		Class<?> controllerType = invocationInfo.getControllerType()__		Method method = invocationInfo.getControllerMethod()__		Object[] arguments = invocationInfo.getArgumentValues()__		return fromMethodInternal(null, controllerType, method, arguments)__	};create,a,link,uri,components,builder,by,invoking,a,mock,controller,method,the,controller,method,and,the,supplied,argument,values,are,then,used,to,delegate,to,link,from,method,java,lang,reflect,method,object,p,for,example,given,this,controller,pre,class,code,064,request,mapping,people,id,addresses,class,address,controller,064,request,mapping,country,public,http,entity,void,get,addresses,for,country,064,path,variable,string,country,064,request,mapping,value,method,request,method,post,public,void,add,address,address,address,pre,a,uri,components,builder,can,be,created,pre,class,code,inline,style,with,static,import,of,mvc,uri,components,builder,on,mvc,uri,components,builder,from,method,call,on,address,controller,class,get,addresses,for,country,us,build,and,expand,1,longer,form,useful,for,repeated,invocation,and,void,controller,methods,address,controller,controller,mvc,uri,components,builder,on,address,controller,class,controller,add,address,null,builder,mvc,uri,components,builder,from,method,call,controller,controller,get,addresses,for,country,us,builder,mvc,uri,components,builder,from,method,call,controller,pre,param,info,either,the,value,returned,from,a,mock,controller,invocation,or,the,mock,controller,itself,after,an,invocation,return,a,uri,components,instance;public,static,uri,components,builder,from,method,call,object,info,assert,is,instance,of,method,invocation,info,class,info,method,invocation,info,invocation,info,method,invocation,info,info,class,controller,type,invocation,info,get,controller,type,method,method,invocation,info,get,controller,method,object,arguments,invocation,info,get,argument,values,return,from,method,internal,null,controller,type,method,arguments
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodCall(Object info);1467846264;Create a {@link UriComponentsBuilder} by invoking a "mock" controller method._The controller method and the supplied argument values are then used to_delegate to {@link #fromMethod(java.lang.reflect.Method, Object...)}._<p>For example, given this controller:_<pre class="code">_&#064_RequestMapping("/people/{id}/addresses")_class AddressController {__&#064_RequestMapping("/{country}")_public HttpEntity<Void> getAddressesForCountry(&#064_PathVariable String country) { ... }__&#064_RequestMapping(value="/", method=RequestMethod.POST)_public void addAddress(Address address) { ... }__</pre>_A UriComponentsBuilder can be created:_<pre class="code">_// Inline style with static import of "MvcUriComponentsBuilder.on"__MvcUriComponentsBuilder.fromMethodCall(_on(AddressController.class).getAddressesForCountry("US")).buildAndExpand(1)___// Longer form useful for repeated invocation (and void controller methods)__AddressController controller = MvcUriComponentsBuilder.on(AddressController.class)__controller.addAddress(null)__builder = MvcUriComponentsBuilder.fromMethodCall(controller)__controller.getAddressesForCountry("US")_builder = MvcUriComponentsBuilder.fromMethodCall(controller)__</pre>_@param info either the value returned from a "mock" controller_invocation or the "mock" controller itself after an invocation_@return a UriComponents instance;public static UriComponentsBuilder fromMethodCall(Object info) {_		Assert.isInstanceOf(MethodInvocationInfo.class, info)__		MethodInvocationInfo invocationInfo = (MethodInvocationInfo) info__		Class<?> controllerType = invocationInfo.getControllerType()__		Method method = invocationInfo.getControllerMethod()__		Object[] arguments = invocationInfo.getArgumentValues()__		return fromMethodInternal(null, controllerType, method, arguments)__	};create,a,link,uri,components,builder,by,invoking,a,mock,controller,method,the,controller,method,and,the,supplied,argument,values,are,then,used,to,delegate,to,link,from,method,java,lang,reflect,method,object,p,for,example,given,this,controller,pre,class,code,064,request,mapping,people,id,addresses,class,address,controller,064,request,mapping,country,public,http,entity,void,get,addresses,for,country,064,path,variable,string,country,064,request,mapping,value,method,request,method,post,public,void,add,address,address,address,pre,a,uri,components,builder,can,be,created,pre,class,code,inline,style,with,static,import,of,mvc,uri,components,builder,on,mvc,uri,components,builder,from,method,call,on,address,controller,class,get,addresses,for,country,us,build,and,expand,1,longer,form,useful,for,repeated,invocation,and,void,controller,methods,address,controller,controller,mvc,uri,components,builder,on,address,controller,class,controller,add,address,null,builder,mvc,uri,components,builder,from,method,call,controller,controller,get,addresses,for,country,us,builder,mvc,uri,components,builder,from,method,call,controller,pre,param,info,either,the,value,returned,from,a,mock,controller,invocation,or,the,mock,controller,itself,after,an,invocation,return,a,uri,components,instance;public,static,uri,components,builder,from,method,call,object,info,assert,is,instance,of,method,invocation,info,class,info,method,invocation,info,invocation,info,method,invocation,info,info,class,controller,type,invocation,info,get,controller,type,method,method,invocation,info,get,controller,method,object,arguments,invocation,info,get,argument,values,return,from,method,internal,null,controller,type,method,arguments
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodCall(Object info);1468613531;Create a {@link UriComponentsBuilder} by invoking a "mock" controller method._The controller method and the supplied argument values are then used to_delegate to {@link #fromMethod(Class, Method, Object...)}._<p>For example, given this controller:_<pre class="code">_&#064_RequestMapping("/people/{id}/addresses")_class AddressController {__&#064_RequestMapping("/{country}")_public HttpEntity<Void> getAddressesForCountry(&#064_PathVariable String country) { ... }__&#064_RequestMapping(value="/", method=RequestMethod.POST)_public void addAddress(Address address) { ... }__</pre>_A UriComponentsBuilder can be created:_<pre class="code">_// Inline style with static import of "MvcUriComponentsBuilder.on"__MvcUriComponentsBuilder.fromMethodCall(_on(AddressController.class).getAddressesForCountry("US")).buildAndExpand(1)___// Longer form useful for repeated invocation (and void controller methods)__AddressController controller = MvcUriComponentsBuilder.on(AddressController.class)__controller.addAddress(null)__builder = MvcUriComponentsBuilder.fromMethodCall(controller)__controller.getAddressesForCountry("US")_builder = MvcUriComponentsBuilder.fromMethodCall(controller)__</pre>_@param info either the value returned from a "mock" controller_invocation or the "mock" controller itself after an invocation_@return a UriComponents instance;public static UriComponentsBuilder fromMethodCall(Object info) {_		Assert.isInstanceOf(MethodInvocationInfo.class, info)__		MethodInvocationInfo invocationInfo = (MethodInvocationInfo) info__		Class<?> controllerType = invocationInfo.getControllerType()__		Method method = invocationInfo.getControllerMethod()__		Object[] arguments = invocationInfo.getArgumentValues()__		return fromMethodInternal(null, controllerType, method, arguments)__	};create,a,link,uri,components,builder,by,invoking,a,mock,controller,method,the,controller,method,and,the,supplied,argument,values,are,then,used,to,delegate,to,link,from,method,class,method,object,p,for,example,given,this,controller,pre,class,code,064,request,mapping,people,id,addresses,class,address,controller,064,request,mapping,country,public,http,entity,void,get,addresses,for,country,064,path,variable,string,country,064,request,mapping,value,method,request,method,post,public,void,add,address,address,address,pre,a,uri,components,builder,can,be,created,pre,class,code,inline,style,with,static,import,of,mvc,uri,components,builder,on,mvc,uri,components,builder,from,method,call,on,address,controller,class,get,addresses,for,country,us,build,and,expand,1,longer,form,useful,for,repeated,invocation,and,void,controller,methods,address,controller,controller,mvc,uri,components,builder,on,address,controller,class,controller,add,address,null,builder,mvc,uri,components,builder,from,method,call,controller,controller,get,addresses,for,country,us,builder,mvc,uri,components,builder,from,method,call,controller,pre,param,info,either,the,value,returned,from,a,mock,controller,invocation,or,the,mock,controller,itself,after,an,invocation,return,a,uri,components,instance;public,static,uri,components,builder,from,method,call,object,info,assert,is,instance,of,method,invocation,info,class,info,method,invocation,info,invocation,info,method,invocation,info,info,class,controller,type,invocation,info,get,controller,type,method,method,invocation,info,get,controller,method,object,arguments,invocation,info,get,argument,values,return,from,method,internal,null,controller,type,method,arguments
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodCall(Object info);1468948866;Create a {@link UriComponentsBuilder} by invoking a "mock" controller method._The controller method and the supplied argument values are then used to_delegate to {@link #fromMethod(Class, Method, Object...)}._<p>For example, given this controller:_<pre class="code">_&#064_RequestMapping("/people/{id}/addresses")_class AddressController {__&#064_RequestMapping("/{country}")_public HttpEntity<Void> getAddressesForCountry(&#064_PathVariable String country) { ... }__&#064_RequestMapping(value="/", method=RequestMethod.POST)_public void addAddress(Address address) { ... }__</pre>_A UriComponentsBuilder can be created:_<pre class="code">_// Inline style with static import of "MvcUriComponentsBuilder.on"__MvcUriComponentsBuilder.fromMethodCall(_on(AddressController.class).getAddressesForCountry("US")).buildAndExpand(1)___// Longer form useful for repeated invocation (and void controller methods)__AddressController controller = MvcUriComponentsBuilder.on(AddressController.class)__controller.addAddress(null)__builder = MvcUriComponentsBuilder.fromMethodCall(controller)__controller.getAddressesForCountry("US")_builder = MvcUriComponentsBuilder.fromMethodCall(controller)__</pre>_@param info either the value returned from a "mock" controller_invocation or the "mock" controller itself after an invocation_@return a UriComponents instance;public static UriComponentsBuilder fromMethodCall(Object info) {_		Assert.isInstanceOf(MethodInvocationInfo.class, info)__		MethodInvocationInfo invocationInfo = (MethodInvocationInfo) info__		Class<?> controllerType = invocationInfo.getControllerType()__		Method method = invocationInfo.getControllerMethod()__		Object[] arguments = invocationInfo.getArgumentValues()__		return fromMethodInternal(null, controllerType, method, arguments)__	};create,a,link,uri,components,builder,by,invoking,a,mock,controller,method,the,controller,method,and,the,supplied,argument,values,are,then,used,to,delegate,to,link,from,method,class,method,object,p,for,example,given,this,controller,pre,class,code,064,request,mapping,people,id,addresses,class,address,controller,064,request,mapping,country,public,http,entity,void,get,addresses,for,country,064,path,variable,string,country,064,request,mapping,value,method,request,method,post,public,void,add,address,address,address,pre,a,uri,components,builder,can,be,created,pre,class,code,inline,style,with,static,import,of,mvc,uri,components,builder,on,mvc,uri,components,builder,from,method,call,on,address,controller,class,get,addresses,for,country,us,build,and,expand,1,longer,form,useful,for,repeated,invocation,and,void,controller,methods,address,controller,controller,mvc,uri,components,builder,on,address,controller,class,controller,add,address,null,builder,mvc,uri,components,builder,from,method,call,controller,controller,get,addresses,for,country,us,builder,mvc,uri,components,builder,from,method,call,controller,pre,param,info,either,the,value,returned,from,a,mock,controller,invocation,or,the,mock,controller,itself,after,an,invocation,return,a,uri,components,instance;public,static,uri,components,builder,from,method,call,object,info,assert,is,instance,of,method,invocation,info,class,info,method,invocation,info,invocation,info,method,invocation,info,info,class,controller,type,invocation,info,get,controller,type,method,method,invocation,info,get,controller,method,object,arguments,invocation,info,get,argument,values,return,from,method,internal,null,controller,type,method,arguments
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodCall(Object info);1485810955;Create a {@link UriComponentsBuilder} by invoking a "mock" controller method._The controller method and the supplied argument values are then used to_delegate to {@link #fromMethod(Class, Method, Object...)}._<p>For example, given this controller:_<pre class="code">_&#064_RequestMapping("/people/{id}/addresses")_class AddressController {__&#064_RequestMapping("/{country}")_public HttpEntity<Void> getAddressesForCountry(&#064_PathVariable String country) { ... }__&#064_RequestMapping(value="/", method=RequestMethod.POST)_public void addAddress(Address address) { ... }__</pre>_A UriComponentsBuilder can be created:_<pre class="code">_// Inline style with static import of "MvcUriComponentsBuilder.on"__MvcUriComponentsBuilder.fromMethodCall(_on(AddressController.class).getAddressesForCountry("US")).buildAndExpand(1)___// Longer form useful for repeated invocation (and void controller methods)__AddressController controller = MvcUriComponentsBuilder.on(AddressController.class)__controller.addAddress(null)__builder = MvcUriComponentsBuilder.fromMethodCall(controller)__controller.getAddressesForCountry("US")_builder = MvcUriComponentsBuilder.fromMethodCall(controller)__</pre>_@param info either the value returned from a "mock" controller_invocation or the "mock" controller itself after an invocation_@return a UriComponents instance;public static UriComponentsBuilder fromMethodCall(Object info) {_		Assert.isInstanceOf(MethodInvocationInfo.class, info, "MethodInvocationInfo required")__		MethodInvocationInfo invocationInfo = (MethodInvocationInfo) info__		Class<?> controllerType = invocationInfo.getControllerType()__		Method method = invocationInfo.getControllerMethod()__		Object[] arguments = invocationInfo.getArgumentValues()__		return fromMethodInternal(null, controllerType, method, arguments)__	};create,a,link,uri,components,builder,by,invoking,a,mock,controller,method,the,controller,method,and,the,supplied,argument,values,are,then,used,to,delegate,to,link,from,method,class,method,object,p,for,example,given,this,controller,pre,class,code,064,request,mapping,people,id,addresses,class,address,controller,064,request,mapping,country,public,http,entity,void,get,addresses,for,country,064,path,variable,string,country,064,request,mapping,value,method,request,method,post,public,void,add,address,address,address,pre,a,uri,components,builder,can,be,created,pre,class,code,inline,style,with,static,import,of,mvc,uri,components,builder,on,mvc,uri,components,builder,from,method,call,on,address,controller,class,get,addresses,for,country,us,build,and,expand,1,longer,form,useful,for,repeated,invocation,and,void,controller,methods,address,controller,controller,mvc,uri,components,builder,on,address,controller,class,controller,add,address,null,builder,mvc,uri,components,builder,from,method,call,controller,controller,get,addresses,for,country,us,builder,mvc,uri,components,builder,from,method,call,controller,pre,param,info,either,the,value,returned,from,a,mock,controller,invocation,or,the,mock,controller,itself,after,an,invocation,return,a,uri,components,instance;public,static,uri,components,builder,from,method,call,object,info,assert,is,instance,of,method,invocation,info,class,info,method,invocation,info,required,method,invocation,info,invocation,info,method,invocation,info,info,class,controller,type,invocation,info,get,controller,type,method,method,invocation,info,get,controller,method,object,arguments,invocation,info,get,argument,values,return,from,method,internal,null,controller,type,method,arguments
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodCall(Object info);1486634978;Create a {@link UriComponentsBuilder} by invoking a "mock" controller method._The controller method and the supplied argument values are then used to_delegate to {@link #fromMethod(Class, Method, Object...)}._<p>For example, given this controller:_<pre class="code">_&#064_RequestMapping("/people/{id}/addresses")_class AddressController {__&#064_RequestMapping("/{country}")_public HttpEntity<Void> getAddressesForCountry(&#064_PathVariable String country) { ... }__&#064_RequestMapping(value="/", method=RequestMethod.POST)_public void addAddress(Address address) { ... }__</pre>_A UriComponentsBuilder can be created:_<pre class="code">_// Inline style with static import of "MvcUriComponentsBuilder.on"__MvcUriComponentsBuilder.fromMethodCall(_on(AddressController.class).getAddressesForCountry("US")).buildAndExpand(1)___// Longer form useful for repeated invocation (and void controller methods)__AddressController controller = MvcUriComponentsBuilder.on(AddressController.class)__controller.addAddress(null)__builder = MvcUriComponentsBuilder.fromMethodCall(controller)__controller.getAddressesForCountry("US")_builder = MvcUriComponentsBuilder.fromMethodCall(controller)__</pre>_@param info either the value returned from a "mock" controller_invocation or the "mock" controller itself after an invocation_@return a UriComponents instance;public static UriComponentsBuilder fromMethodCall(Object info) {_		Assert.isInstanceOf(MethodInvocationInfo.class, info, "MethodInvocationInfo required")__		MethodInvocationInfo invocationInfo = (MethodInvocationInfo) info__		Class<?> controllerType = invocationInfo.getControllerType()__		Method method = invocationInfo.getControllerMethod()__		Object[] arguments = invocationInfo.getArgumentValues()__		return fromMethodInternal(null, controllerType, method, arguments)__	};create,a,link,uri,components,builder,by,invoking,a,mock,controller,method,the,controller,method,and,the,supplied,argument,values,are,then,used,to,delegate,to,link,from,method,class,method,object,p,for,example,given,this,controller,pre,class,code,064,request,mapping,people,id,addresses,class,address,controller,064,request,mapping,country,public,http,entity,void,get,addresses,for,country,064,path,variable,string,country,064,request,mapping,value,method,request,method,post,public,void,add,address,address,address,pre,a,uri,components,builder,can,be,created,pre,class,code,inline,style,with,static,import,of,mvc,uri,components,builder,on,mvc,uri,components,builder,from,method,call,on,address,controller,class,get,addresses,for,country,us,build,and,expand,1,longer,form,useful,for,repeated,invocation,and,void,controller,methods,address,controller,controller,mvc,uri,components,builder,on,address,controller,class,controller,add,address,null,builder,mvc,uri,components,builder,from,method,call,controller,controller,get,addresses,for,country,us,builder,mvc,uri,components,builder,from,method,call,controller,pre,param,info,either,the,value,returned,from,a,mock,controller,invocation,or,the,mock,controller,itself,after,an,invocation,return,a,uri,components,instance;public,static,uri,components,builder,from,method,call,object,info,assert,is,instance,of,method,invocation,info,class,info,method,invocation,info,required,method,invocation,info,invocation,info,method,invocation,info,info,class,controller,type,invocation,info,get,controller,type,method,method,invocation,info,get,controller,method,object,arguments,invocation,info,get,argument,values,return,from,method,internal,null,controller,type,method,arguments
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodCall(Object info);1486635693;Create a {@link UriComponentsBuilder} by invoking a "mock" controller method._The controller method and the supplied argument values are then used to_delegate to {@link #fromMethod(Class, Method, Object...)}._<p>For example, given this controller:_<pre class="code">_&#064_RequestMapping("/people/{id}/addresses")_class AddressController {__&#064_RequestMapping("/{country}")_public HttpEntity<Void> getAddressesForCountry(&#064_PathVariable String country) { ... }__&#064_RequestMapping(value="/", method=RequestMethod.POST)_public void addAddress(Address address) { ... }__</pre>_A UriComponentsBuilder can be created:_<pre class="code">_// Inline style with static import of "MvcUriComponentsBuilder.on"__MvcUriComponentsBuilder.fromMethodCall(_on(AddressController.class).getAddressesForCountry("US")).buildAndExpand(1)___// Longer form useful for repeated invocation (and void controller methods)__AddressController controller = MvcUriComponentsBuilder.on(AddressController.class)__controller.addAddress(null)__builder = MvcUriComponentsBuilder.fromMethodCall(controller)__controller.getAddressesForCountry("US")_builder = MvcUriComponentsBuilder.fromMethodCall(controller)__</pre>_@param info either the value returned from a "mock" controller_invocation or the "mock" controller itself after an invocation_@return a UriComponents instance;public static UriComponentsBuilder fromMethodCall(Object info) {_		Assert.isInstanceOf(MethodInvocationInfo.class, info, "MethodInvocationInfo required")__		MethodInvocationInfo invocationInfo = (MethodInvocationInfo) info__		Class<?> controllerType = invocationInfo.getControllerType()__		Method method = invocationInfo.getControllerMethod()__		Object[] arguments = invocationInfo.getArgumentValues()__		return fromMethodInternal(null, controllerType, method, arguments)__	};create,a,link,uri,components,builder,by,invoking,a,mock,controller,method,the,controller,method,and,the,supplied,argument,values,are,then,used,to,delegate,to,link,from,method,class,method,object,p,for,example,given,this,controller,pre,class,code,064,request,mapping,people,id,addresses,class,address,controller,064,request,mapping,country,public,http,entity,void,get,addresses,for,country,064,path,variable,string,country,064,request,mapping,value,method,request,method,post,public,void,add,address,address,address,pre,a,uri,components,builder,can,be,created,pre,class,code,inline,style,with,static,import,of,mvc,uri,components,builder,on,mvc,uri,components,builder,from,method,call,on,address,controller,class,get,addresses,for,country,us,build,and,expand,1,longer,form,useful,for,repeated,invocation,and,void,controller,methods,address,controller,controller,mvc,uri,components,builder,on,address,controller,class,controller,add,address,null,builder,mvc,uri,components,builder,from,method,call,controller,controller,get,addresses,for,country,us,builder,mvc,uri,components,builder,from,method,call,controller,pre,param,info,either,the,value,returned,from,a,mock,controller,invocation,or,the,mock,controller,itself,after,an,invocation,return,a,uri,components,instance;public,static,uri,components,builder,from,method,call,object,info,assert,is,instance,of,method,invocation,info,class,info,method,invocation,info,required,method,invocation,info,invocation,info,method,invocation,info,info,class,controller,type,invocation,info,get,controller,type,method,method,invocation,info,get,controller,method,object,arguments,invocation,info,get,argument,values,return,from,method,internal,null,controller,type,method,arguments
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodCall(Object info);1495868221;Create a {@link UriComponentsBuilder} by invoking a "mock" controller method._The controller method and the supplied argument values are then used to_delegate to {@link #fromMethod(Class, Method, Object...)}._<p>For example, given this controller:_<pre class="code">_&#064_RequestMapping("/people/{id}/addresses")_class AddressController {__&#064_RequestMapping("/{country}")_public HttpEntity<Void> getAddressesForCountry(&#064_PathVariable String country) { ... }__&#064_RequestMapping(value="/", method=RequestMethod.POST)_public void addAddress(Address address) { ... }__</pre>_A UriComponentsBuilder can be created:_<pre class="code">_// Inline style with static import of "MvcUriComponentsBuilder.on"__MvcUriComponentsBuilder.fromMethodCall(_on(AddressController.class).getAddressesForCountry("US")).buildAndExpand(1)___// Longer form useful for repeated invocation (and void controller methods)__AddressController controller = MvcUriComponentsBuilder.on(AddressController.class)__controller.addAddress(null)__builder = MvcUriComponentsBuilder.fromMethodCall(controller)__controller.getAddressesForCountry("US")_builder = MvcUriComponentsBuilder.fromMethodCall(controller)__</pre>_@param info either the value returned from a "mock" controller_invocation or the "mock" controller itself after an invocation_@return a UriComponents instance;public static UriComponentsBuilder fromMethodCall(Object info) {_		Assert.isInstanceOf(MethodInvocationInfo.class, info, "MethodInvocationInfo required")__		MethodInvocationInfo invocationInfo = (MethodInvocationInfo) info__		Class<?> controllerType = invocationInfo.getControllerType()__		Method method = invocationInfo.getControllerMethod()__		Object[] arguments = invocationInfo.getArgumentValues()__		return fromMethodInternal(null, controllerType, method, arguments)__	};create,a,link,uri,components,builder,by,invoking,a,mock,controller,method,the,controller,method,and,the,supplied,argument,values,are,then,used,to,delegate,to,link,from,method,class,method,object,p,for,example,given,this,controller,pre,class,code,064,request,mapping,people,id,addresses,class,address,controller,064,request,mapping,country,public,http,entity,void,get,addresses,for,country,064,path,variable,string,country,064,request,mapping,value,method,request,method,post,public,void,add,address,address,address,pre,a,uri,components,builder,can,be,created,pre,class,code,inline,style,with,static,import,of,mvc,uri,components,builder,on,mvc,uri,components,builder,from,method,call,on,address,controller,class,get,addresses,for,country,us,build,and,expand,1,longer,form,useful,for,repeated,invocation,and,void,controller,methods,address,controller,controller,mvc,uri,components,builder,on,address,controller,class,controller,add,address,null,builder,mvc,uri,components,builder,from,method,call,controller,controller,get,addresses,for,country,us,builder,mvc,uri,components,builder,from,method,call,controller,pre,param,info,either,the,value,returned,from,a,mock,controller,invocation,or,the,mock,controller,itself,after,an,invocation,return,a,uri,components,instance;public,static,uri,components,builder,from,method,call,object,info,assert,is,instance,of,method,invocation,info,class,info,method,invocation,info,required,method,invocation,info,invocation,info,method,invocation,info,info,class,controller,type,invocation,info,get,controller,type,method,method,invocation,info,get,controller,method,object,arguments,invocation,info,get,argument,values,return,from,method,internal,null,controller,type,method,arguments
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodCall(Object info);1496242568;Create a {@link UriComponentsBuilder} by invoking a "mock" controller method._The controller method and the supplied argument values are then used to_delegate to {@link #fromMethod(Class, Method, Object...)}._<p>For example, given this controller:_<pre class="code">_&#064_RequestMapping("/people/{id}/addresses")_class AddressController {__&#064_RequestMapping("/{country}")_public HttpEntity<Void> getAddressesForCountry(&#064_PathVariable String country) { ... }__&#064_RequestMapping(value="/", method=RequestMethod.POST)_public void addAddress(Address address) { ... }__</pre>_A UriComponentsBuilder can be created:_<pre class="code">_// Inline style with static import of "MvcUriComponentsBuilder.on"__MvcUriComponentsBuilder.fromMethodCall(_on(AddressController.class).getAddressesForCountry("US")).buildAndExpand(1)___// Longer form useful for repeated invocation (and void controller methods)__AddressController controller = MvcUriComponentsBuilder.on(AddressController.class)__controller.addAddress(null)__builder = MvcUriComponentsBuilder.fromMethodCall(controller)__controller.getAddressesForCountry("US")_builder = MvcUriComponentsBuilder.fromMethodCall(controller)__</pre>_@param info either the value returned from a "mock" controller_invocation or the "mock" controller itself after an invocation_@return a UriComponents instance;public static UriComponentsBuilder fromMethodCall(Object info) {_		Assert.isInstanceOf(MethodInvocationInfo.class, info, "MethodInvocationInfo required")__		MethodInvocationInfo invocationInfo = (MethodInvocationInfo) info__		Class<?> controllerType = invocationInfo.getControllerType()__		Method method = invocationInfo.getControllerMethod()__		Object[] arguments = invocationInfo.getArgumentValues()__		return fromMethodInternal(null, controllerType, method, arguments)__	};create,a,link,uri,components,builder,by,invoking,a,mock,controller,method,the,controller,method,and,the,supplied,argument,values,are,then,used,to,delegate,to,link,from,method,class,method,object,p,for,example,given,this,controller,pre,class,code,064,request,mapping,people,id,addresses,class,address,controller,064,request,mapping,country,public,http,entity,void,get,addresses,for,country,064,path,variable,string,country,064,request,mapping,value,method,request,method,post,public,void,add,address,address,address,pre,a,uri,components,builder,can,be,created,pre,class,code,inline,style,with,static,import,of,mvc,uri,components,builder,on,mvc,uri,components,builder,from,method,call,on,address,controller,class,get,addresses,for,country,us,build,and,expand,1,longer,form,useful,for,repeated,invocation,and,void,controller,methods,address,controller,controller,mvc,uri,components,builder,on,address,controller,class,controller,add,address,null,builder,mvc,uri,components,builder,from,method,call,controller,controller,get,addresses,for,country,us,builder,mvc,uri,components,builder,from,method,call,controller,pre,param,info,either,the,value,returned,from,a,mock,controller,invocation,or,the,mock,controller,itself,after,an,invocation,return,a,uri,components,instance;public,static,uri,components,builder,from,method,call,object,info,assert,is,instance,of,method,invocation,info,class,info,method,invocation,info,required,method,invocation,info,invocation,info,method,invocation,info,info,class,controller,type,invocation,info,get,controller,type,method,method,invocation,info,get,controller,method,object,arguments,invocation,info,get,argument,values,return,from,method,internal,null,controller,type,method,arguments
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodCall(Object info);1496259743;Create a {@link UriComponentsBuilder} by invoking a "mock" controller method._The controller method and the supplied argument values are then used to_delegate to {@link #fromMethod(Class, Method, Object...)}._<p>For example, given this controller:_<pre class="code">_&#064_RequestMapping("/people/{id}/addresses")_class AddressController {__&#064_RequestMapping("/{country}")_public HttpEntity<Void> getAddressesForCountry(&#064_PathVariable String country) { ... }__&#064_RequestMapping(value="/", method=RequestMethod.POST)_public void addAddress(Address address) { ... }__</pre>_A UriComponentsBuilder can be created:_<pre class="code">_// Inline style with static import of "MvcUriComponentsBuilder.on"__MvcUriComponentsBuilder.fromMethodCall(_on(AddressController.class).getAddressesForCountry("US")).buildAndExpand(1)___// Longer form useful for repeated invocation (and void controller methods)__AddressController controller = MvcUriComponentsBuilder.on(AddressController.class)__controller.addAddress(null)__builder = MvcUriComponentsBuilder.fromMethodCall(controller)__controller.getAddressesForCountry("US")_builder = MvcUriComponentsBuilder.fromMethodCall(controller)__</pre>_@param info either the value returned from a "mock" controller_invocation or the "mock" controller itself after an invocation_@return a UriComponents instance;public static UriComponentsBuilder fromMethodCall(Object info) {_		Assert.isInstanceOf(MethodInvocationInfo.class, info, "MethodInvocationInfo required")__		MethodInvocationInfo invocationInfo = (MethodInvocationInfo) info__		Class<?> controllerType = invocationInfo.getControllerType()__		Method method = invocationInfo.getControllerMethod()__		Object[] arguments = invocationInfo.getArgumentValues()__		return fromMethodInternal(null, controllerType, method, arguments)__	};create,a,link,uri,components,builder,by,invoking,a,mock,controller,method,the,controller,method,and,the,supplied,argument,values,are,then,used,to,delegate,to,link,from,method,class,method,object,p,for,example,given,this,controller,pre,class,code,064,request,mapping,people,id,addresses,class,address,controller,064,request,mapping,country,public,http,entity,void,get,addresses,for,country,064,path,variable,string,country,064,request,mapping,value,method,request,method,post,public,void,add,address,address,address,pre,a,uri,components,builder,can,be,created,pre,class,code,inline,style,with,static,import,of,mvc,uri,components,builder,on,mvc,uri,components,builder,from,method,call,on,address,controller,class,get,addresses,for,country,us,build,and,expand,1,longer,form,useful,for,repeated,invocation,and,void,controller,methods,address,controller,controller,mvc,uri,components,builder,on,address,controller,class,controller,add,address,null,builder,mvc,uri,components,builder,from,method,call,controller,controller,get,addresses,for,country,us,builder,mvc,uri,components,builder,from,method,call,controller,pre,param,info,either,the,value,returned,from,a,mock,controller,invocation,or,the,mock,controller,itself,after,an,invocation,return,a,uri,components,instance;public,static,uri,components,builder,from,method,call,object,info,assert,is,instance,of,method,invocation,info,class,info,method,invocation,info,required,method,invocation,info,invocation,info,method,invocation,info,info,class,controller,type,invocation,info,get,controller,type,method,method,invocation,info,get,controller,method,object,arguments,invocation,info,get,argument,values,return,from,method,internal,null,controller,type,method,arguments
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodCall(Object info);1496370972;Create a {@link UriComponentsBuilder} by invoking a "mock" controller method._The controller method and the supplied argument values are then used to_delegate to {@link #fromMethod(Class, Method, Object...)}._<p>For example, given this controller:_<pre class="code">_&#064_RequestMapping("/people/{id}/addresses")_class AddressController {__&#064_RequestMapping("/{country}")_public HttpEntity<Void> getAddressesForCountry(&#064_PathVariable String country) { ... }__&#064_RequestMapping(value="/", method=RequestMethod.POST)_public void addAddress(Address address) { ... }__</pre>_A UriComponentsBuilder can be created:_<pre class="code">_// Inline style with static import of "MvcUriComponentsBuilder.on"__MvcUriComponentsBuilder.fromMethodCall(_on(AddressController.class).getAddressesForCountry("US")).buildAndExpand(1)___// Longer form useful for repeated invocation (and void controller methods)__AddressController controller = MvcUriComponentsBuilder.on(AddressController.class)__controller.addAddress(null)__builder = MvcUriComponentsBuilder.fromMethodCall(controller)__controller.getAddressesForCountry("US")_builder = MvcUriComponentsBuilder.fromMethodCall(controller)__</pre>__<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs.__@param info either the value returned from a "mock" controller_invocation or the "mock" controller itself after an invocation_@return a UriComponents instance;public static UriComponentsBuilder fromMethodCall(Object info) {_		Assert.isInstanceOf(MethodInvocationInfo.class, info, "MethodInvocationInfo required")__		MethodInvocationInfo invocationInfo = (MethodInvocationInfo) info__		Class<?> controllerType = invocationInfo.getControllerType()__		Method method = invocationInfo.getControllerMethod()__		Object[] arguments = invocationInfo.getArgumentValues()__		return fromMethodInternal(null, controllerType, method, arguments)__	};create,a,link,uri,components,builder,by,invoking,a,mock,controller,method,the,controller,method,and,the,supplied,argument,values,are,then,used,to,delegate,to,link,from,method,class,method,object,p,for,example,given,this,controller,pre,class,code,064,request,mapping,people,id,addresses,class,address,controller,064,request,mapping,country,public,http,entity,void,get,addresses,for,country,064,path,variable,string,country,064,request,mapping,value,method,request,method,post,public,void,add,address,address,address,pre,a,uri,components,builder,can,be,created,pre,class,code,inline,style,with,static,import,of,mvc,uri,components,builder,on,mvc,uri,components,builder,from,method,call,on,address,controller,class,get,addresses,for,country,us,build,and,expand,1,longer,form,useful,for,repeated,invocation,and,void,controller,methods,address,controller,controller,mvc,uri,components,builder,on,address,controller,class,controller,add,address,null,builder,mvc,uri,components,builder,from,method,call,controller,controller,get,addresses,for,country,us,builder,mvc,uri,components,builder,from,method,call,controller,pre,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,info,either,the,value,returned,from,a,mock,controller,invocation,or,the,mock,controller,itself,after,an,invocation,return,a,uri,components,instance;public,static,uri,components,builder,from,method,call,object,info,assert,is,instance,of,method,invocation,info,class,info,method,invocation,info,required,method,invocation,info,invocation,info,method,invocation,info,info,class,controller,type,invocation,info,get,controller,type,method,method,invocation,info,get,controller,method,object,arguments,invocation,info,get,argument,values,return,from,method,internal,null,controller,type,method,arguments
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodCall(Object info);1496837955;Create a {@link UriComponentsBuilder} by invoking a "mock" controller method._The controller method and the supplied argument values are then used to_delegate to {@link #fromMethod(Class, Method, Object...)}._<p>For example, given this controller:_<pre class="code">_&#064_RequestMapping("/people/{id}/addresses")_class AddressController {__&#064_RequestMapping("/{country}")_public HttpEntity<Void> getAddressesForCountry(&#064_PathVariable String country) { ... }__&#064_RequestMapping(value="/", method=RequestMethod.POST)_public void addAddress(Address address) { ... }__</pre>_A UriComponentsBuilder can be created:_<pre class="code">_// Inline style with static import of "MvcUriComponentsBuilder.on"__MvcUriComponentsBuilder.fromMethodCall(_on(AddressController.class).getAddressesForCountry("US")).buildAndExpand(1)___// Longer form useful for repeated invocation (and void controller methods)__AddressController controller = MvcUriComponentsBuilder.on(AddressController.class)__controller.addAddress(null)__builder = MvcUriComponentsBuilder.fromMethodCall(controller)__controller.getAddressesForCountry("US")_builder = MvcUriComponentsBuilder.fromMethodCall(controller)__</pre>__<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs.__@param info either the value returned from a "mock" controller_invocation or the "mock" controller itself after an invocation_@return a UriComponents instance;public static UriComponentsBuilder fromMethodCall(Object info) {_		Assert.isInstanceOf(MethodInvocationInfo.class, info, "MethodInvocationInfo required")__		MethodInvocationInfo invocationInfo = (MethodInvocationInfo) info__		Class<?> controllerType = invocationInfo.getControllerType()__		Method method = invocationInfo.getControllerMethod()__		Object[] arguments = invocationInfo.getArgumentValues()__		return fromMethodInternal(null, controllerType, method, arguments)__	};create,a,link,uri,components,builder,by,invoking,a,mock,controller,method,the,controller,method,and,the,supplied,argument,values,are,then,used,to,delegate,to,link,from,method,class,method,object,p,for,example,given,this,controller,pre,class,code,064,request,mapping,people,id,addresses,class,address,controller,064,request,mapping,country,public,http,entity,void,get,addresses,for,country,064,path,variable,string,country,064,request,mapping,value,method,request,method,post,public,void,add,address,address,address,pre,a,uri,components,builder,can,be,created,pre,class,code,inline,style,with,static,import,of,mvc,uri,components,builder,on,mvc,uri,components,builder,from,method,call,on,address,controller,class,get,addresses,for,country,us,build,and,expand,1,longer,form,useful,for,repeated,invocation,and,void,controller,methods,address,controller,controller,mvc,uri,components,builder,on,address,controller,class,controller,add,address,null,builder,mvc,uri,components,builder,from,method,call,controller,controller,get,addresses,for,country,us,builder,mvc,uri,components,builder,from,method,call,controller,pre,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,info,either,the,value,returned,from,a,mock,controller,invocation,or,the,mock,controller,itself,after,an,invocation,return,a,uri,components,instance;public,static,uri,components,builder,from,method,call,object,info,assert,is,instance,of,method,invocation,info,class,info,method,invocation,info,required,method,invocation,info,invocation,info,method,invocation,info,info,class,controller,type,invocation,info,get,controller,type,method,method,invocation,info,get,controller,method,object,arguments,invocation,info,get,argument,values,return,from,method,internal,null,controller,type,method,arguments
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodCall(Object info);1497341397;Create a {@link UriComponentsBuilder} by invoking a "mock" controller method._The controller method and the supplied argument values are then used to_delegate to {@link #fromMethod(Class, Method, Object...)}._<p>For example, given this controller:_<pre class="code">_&#064_RequestMapping("/people/{id}/addresses")_class AddressController {__&#064_RequestMapping("/{country}")_public HttpEntity<Void> getAddressesForCountry(&#064_PathVariable String country) { ... }__&#064_RequestMapping(value="/", method=RequestMethod.POST)_public void addAddress(Address address) { ... }__</pre>_A UriComponentsBuilder can be created:_<pre class="code">_// Inline style with static import of "MvcUriComponentsBuilder.on"__MvcUriComponentsBuilder.fromMethodCall(_on(AddressController.class).getAddressesForCountry("US")).buildAndExpand(1)___// Longer form useful for repeated invocation (and void controller methods)__AddressController controller = MvcUriComponentsBuilder.on(AddressController.class)__controller.addAddress(null)__builder = MvcUriComponentsBuilder.fromMethodCall(controller)__controller.getAddressesForCountry("US")_builder = MvcUriComponentsBuilder.fromMethodCall(controller)__</pre>__<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs.__@param info either the value returned from a "mock" controller_invocation or the "mock" controller itself after an invocation_@return a UriComponents instance;public static UriComponentsBuilder fromMethodCall(Object info) {_		Assert.isInstanceOf(MethodInvocationInfo.class, info, "MethodInvocationInfo required")__		MethodInvocationInfo invocationInfo = (MethodInvocationInfo) info__		Class<?> controllerType = invocationInfo.getControllerType()__		Method method = invocationInfo.getControllerMethod()__		Object[] arguments = invocationInfo.getArgumentValues()__		return fromMethodInternal(null, controllerType, method, arguments)__	};create,a,link,uri,components,builder,by,invoking,a,mock,controller,method,the,controller,method,and,the,supplied,argument,values,are,then,used,to,delegate,to,link,from,method,class,method,object,p,for,example,given,this,controller,pre,class,code,064,request,mapping,people,id,addresses,class,address,controller,064,request,mapping,country,public,http,entity,void,get,addresses,for,country,064,path,variable,string,country,064,request,mapping,value,method,request,method,post,public,void,add,address,address,address,pre,a,uri,components,builder,can,be,created,pre,class,code,inline,style,with,static,import,of,mvc,uri,components,builder,on,mvc,uri,components,builder,from,method,call,on,address,controller,class,get,addresses,for,country,us,build,and,expand,1,longer,form,useful,for,repeated,invocation,and,void,controller,methods,address,controller,controller,mvc,uri,components,builder,on,address,controller,class,controller,add,address,null,builder,mvc,uri,components,builder,from,method,call,controller,controller,get,addresses,for,country,us,builder,mvc,uri,components,builder,from,method,call,controller,pre,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,info,either,the,value,returned,from,a,mock,controller,invocation,or,the,mock,controller,itself,after,an,invocation,return,a,uri,components,instance;public,static,uri,components,builder,from,method,call,object,info,assert,is,instance,of,method,invocation,info,class,info,method,invocation,info,required,method,invocation,info,invocation,info,method,invocation,info,info,class,controller,type,invocation,info,get,controller,type,method,method,invocation,info,get,controller,method,object,arguments,invocation,info,get,argument,values,return,from,method,internal,null,controller,type,method,arguments
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodCall(Object info);1498780456;Create a {@link UriComponentsBuilder} by invoking a "mock" controller method._The controller method and the supplied argument values are then used to_delegate to {@link #fromMethod(Class, Method, Object...)}._<p>For example, given this controller:_<pre class="code">_&#064_RequestMapping("/people/{id}/addresses")_class AddressController {__&#064_RequestMapping("/{country}")_public HttpEntity<Void> getAddressesForCountry(&#064_PathVariable String country) { ... }__&#064_RequestMapping(value="/", method=RequestMethod.POST)_public void addAddress(Address address) { ... }__</pre>_A UriComponentsBuilder can be created:_<pre class="code">_// Inline style with static import of "MvcUriComponentsBuilder.on"__MvcUriComponentsBuilder.fromMethodCall(_on(AddressController.class).getAddressesForCountry("US")).buildAndExpand(1)___// Longer form useful for repeated invocation (and void controller methods)__AddressController controller = MvcUriComponentsBuilder.on(AddressController.class)__controller.addAddress(null)__builder = MvcUriComponentsBuilder.fromMethodCall(controller)__controller.getAddressesForCountry("US")_builder = MvcUriComponentsBuilder.fromMethodCall(controller)__</pre>__<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs.__@param info either the value returned from a "mock" controller_invocation or the "mock" controller itself after an invocation_@return a UriComponents instance;public static UriComponentsBuilder fromMethodCall(Object info) {_		Assert.isInstanceOf(MethodInvocationInfo.class, info, "MethodInvocationInfo required")__		MethodInvocationInfo invocationInfo = (MethodInvocationInfo) info__		Class<?> controllerType = invocationInfo.getControllerType()__		Method method = invocationInfo.getControllerMethod()__		Object[] arguments = invocationInfo.getArgumentValues()__		return fromMethodInternal(null, controllerType, method, arguments)__	};create,a,link,uri,components,builder,by,invoking,a,mock,controller,method,the,controller,method,and,the,supplied,argument,values,are,then,used,to,delegate,to,link,from,method,class,method,object,p,for,example,given,this,controller,pre,class,code,064,request,mapping,people,id,addresses,class,address,controller,064,request,mapping,country,public,http,entity,void,get,addresses,for,country,064,path,variable,string,country,064,request,mapping,value,method,request,method,post,public,void,add,address,address,address,pre,a,uri,components,builder,can,be,created,pre,class,code,inline,style,with,static,import,of,mvc,uri,components,builder,on,mvc,uri,components,builder,from,method,call,on,address,controller,class,get,addresses,for,country,us,build,and,expand,1,longer,form,useful,for,repeated,invocation,and,void,controller,methods,address,controller,controller,mvc,uri,components,builder,on,address,controller,class,controller,add,address,null,builder,mvc,uri,components,builder,from,method,call,controller,controller,get,addresses,for,country,us,builder,mvc,uri,components,builder,from,method,call,controller,pre,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,info,either,the,value,returned,from,a,mock,controller,invocation,or,the,mock,controller,itself,after,an,invocation,return,a,uri,components,instance;public,static,uri,components,builder,from,method,call,object,info,assert,is,instance,of,method,invocation,info,class,info,method,invocation,info,required,method,invocation,info,invocation,info,method,invocation,info,info,class,controller,type,invocation,info,get,controller,type,method,method,invocation,info,get,controller,method,object,arguments,invocation,info,get,argument,values,return,from,method,internal,null,controller,type,method,arguments
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodCall(Object info);1500416137;Create a {@link UriComponentsBuilder} by invoking a "mock" controller method._The controller method and the supplied argument values are then used to_delegate to {@link #fromMethod(Class, Method, Object...)}._<p>For example, given this controller:_<pre class="code">_&#064_RequestMapping("/people/{id}/addresses")_class AddressController {__&#064_RequestMapping("/{country}")_public HttpEntity<Void> getAddressesForCountry(&#064_PathVariable String country) { ... }__&#064_RequestMapping(value="/", method=RequestMethod.POST)_public void addAddress(Address address) { ... }__</pre>_A UriComponentsBuilder can be created:_<pre class="code">_// Inline style with static import of "MvcUriComponentsBuilder.on"__MvcUriComponentsBuilder.fromMethodCall(_on(AddressController.class).getAddressesForCountry("US")).buildAndExpand(1)___// Longer form useful for repeated invocation (and void controller methods)__AddressController controller = MvcUriComponentsBuilder.on(AddressController.class)__controller.addAddress(null)__builder = MvcUriComponentsBuilder.fromMethodCall(controller)__controller.getAddressesForCountry("US")_builder = MvcUriComponentsBuilder.fromMethodCall(controller)__</pre>__<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs.__@param info either the value returned from a "mock" controller_invocation or the "mock" controller itself after an invocation_@return a UriComponents instance;public static UriComponentsBuilder fromMethodCall(Object info) {_		Assert.isInstanceOf(MethodInvocationInfo.class, info, "MethodInvocationInfo required")__		MethodInvocationInfo invocationInfo = (MethodInvocationInfo) info__		Class<?> controllerType = invocationInfo.getControllerType()__		Method method = invocationInfo.getControllerMethod()__		Object[] arguments = invocationInfo.getArgumentValues()__		return fromMethodInternal(null, controllerType, method, arguments)__	};create,a,link,uri,components,builder,by,invoking,a,mock,controller,method,the,controller,method,and,the,supplied,argument,values,are,then,used,to,delegate,to,link,from,method,class,method,object,p,for,example,given,this,controller,pre,class,code,064,request,mapping,people,id,addresses,class,address,controller,064,request,mapping,country,public,http,entity,void,get,addresses,for,country,064,path,variable,string,country,064,request,mapping,value,method,request,method,post,public,void,add,address,address,address,pre,a,uri,components,builder,can,be,created,pre,class,code,inline,style,with,static,import,of,mvc,uri,components,builder,on,mvc,uri,components,builder,from,method,call,on,address,controller,class,get,addresses,for,country,us,build,and,expand,1,longer,form,useful,for,repeated,invocation,and,void,controller,methods,address,controller,controller,mvc,uri,components,builder,on,address,controller,class,controller,add,address,null,builder,mvc,uri,components,builder,from,method,call,controller,controller,get,addresses,for,country,us,builder,mvc,uri,components,builder,from,method,call,controller,pre,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,info,either,the,value,returned,from,a,mock,controller,invocation,or,the,mock,controller,itself,after,an,invocation,return,a,uri,components,instance;public,static,uri,components,builder,from,method,call,object,info,assert,is,instance,of,method,invocation,info,class,info,method,invocation,info,required,method,invocation,info,invocation,info,method,invocation,info,info,class,controller,type,invocation,info,get,controller,type,method,method,invocation,info,get,controller,method,object,arguments,invocation,info,get,argument,values,return,from,method,internal,null,controller,type,method,arguments
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodCall(Object info);1506097334;Create a {@link UriComponentsBuilder} by invoking a "mock" controller method._The controller method and the supplied argument values are then used to_delegate to {@link #fromMethod(Class, Method, Object...)}._<p>For example, given this controller:_<pre class="code">_&#064_RequestMapping("/people/{id}/addresses")_class AddressController {__&#064_RequestMapping("/{country}")_public HttpEntity<Void> getAddressesForCountry(&#064_PathVariable String country) { ... }__&#064_RequestMapping(value="/", method=RequestMethod.POST)_public void addAddress(Address address) { ... }__</pre>_A UriComponentsBuilder can be created:_<pre class="code">_// Inline style with static import of "MvcUriComponentsBuilder.on"__MvcUriComponentsBuilder.fromMethodCall(_on(AddressController.class).getAddressesForCountry("US")).buildAndExpand(1)___// Longer form useful for repeated invocation (and void controller methods)__AddressController controller = MvcUriComponentsBuilder.on(AddressController.class)__controller.addAddress(null)__builder = MvcUriComponentsBuilder.fromMethodCall(controller)__controller.getAddressesForCountry("US")_builder = MvcUriComponentsBuilder.fromMethodCall(controller)__</pre>__<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs.__@param info either the value returned from a "mock" controller_invocation or the "mock" controller itself after an invocation_@return a UriComponents instance;public static UriComponentsBuilder fromMethodCall(Object info) {_		Assert.isInstanceOf(MethodInvocationInfo.class, info, "MethodInvocationInfo required")__		MethodInvocationInfo invocationInfo = (MethodInvocationInfo) info__		Class<?> controllerType = invocationInfo.getControllerType()__		Method method = invocationInfo.getControllerMethod()__		Object[] arguments = invocationInfo.getArgumentValues()__		return fromMethodInternal(null, controllerType, method, arguments)__	};create,a,link,uri,components,builder,by,invoking,a,mock,controller,method,the,controller,method,and,the,supplied,argument,values,are,then,used,to,delegate,to,link,from,method,class,method,object,p,for,example,given,this,controller,pre,class,code,064,request,mapping,people,id,addresses,class,address,controller,064,request,mapping,country,public,http,entity,void,get,addresses,for,country,064,path,variable,string,country,064,request,mapping,value,method,request,method,post,public,void,add,address,address,address,pre,a,uri,components,builder,can,be,created,pre,class,code,inline,style,with,static,import,of,mvc,uri,components,builder,on,mvc,uri,components,builder,from,method,call,on,address,controller,class,get,addresses,for,country,us,build,and,expand,1,longer,form,useful,for,repeated,invocation,and,void,controller,methods,address,controller,controller,mvc,uri,components,builder,on,address,controller,class,controller,add,address,null,builder,mvc,uri,components,builder,from,method,call,controller,controller,get,addresses,for,country,us,builder,mvc,uri,components,builder,from,method,call,controller,pre,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,info,either,the,value,returned,from,a,mock,controller,invocation,or,the,mock,controller,itself,after,an,invocation,return,a,uri,components,instance;public,static,uri,components,builder,from,method,call,object,info,assert,is,instance,of,method,invocation,info,class,info,method,invocation,info,required,method,invocation,info,invocation,info,method,invocation,info,info,class,controller,type,invocation,info,get,controller,type,method,method,invocation,info,get,controller,method,object,arguments,invocation,info,get,argument,values,return,from,method,internal,null,controller,type,method,arguments
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodCall(Object info);1518770299;Create a {@link UriComponentsBuilder} by invoking a "mock" controller method._The controller method and the supplied argument values are then used to_delegate to {@link #fromMethod(Class, Method, Object...)}._<p>For example, given this controller:_<pre class="code">_&#064_RequestMapping("/people/{id}/addresses")_class AddressController {__&#064_RequestMapping("/{country}")_public HttpEntity<Void> getAddressesForCountry(&#064_PathVariable String country) { ... }__&#064_RequestMapping(value="/", method=RequestMethod.POST)_public void addAddress(Address address) { ... }__</pre>_A UriComponentsBuilder can be created:_<pre class="code">_// Inline style with static import of "MvcUriComponentsBuilder.on"__MvcUriComponentsBuilder.fromMethodCall(_on(AddressController.class).getAddressesForCountry("US")).buildAndExpand(1)___// Longer form useful for repeated invocation (and void controller methods)__AddressController controller = MvcUriComponentsBuilder.on(AddressController.class)__controller.addAddress(null)__builder = MvcUriComponentsBuilder.fromMethodCall(controller)__controller.getAddressesForCountry("US")_builder = MvcUriComponentsBuilder.fromMethodCall(controller)__</pre>__<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs.__@param info either the value returned from a "mock" controller_invocation or the "mock" controller itself after an invocation_@return a UriComponents instance;public static UriComponentsBuilder fromMethodCall(Object info) {_		Assert.isInstanceOf(MethodInvocationInfo.class, info, "MethodInvocationInfo required")__		MethodInvocationInfo invocationInfo = (MethodInvocationInfo) info__		Class<?> controllerType = invocationInfo.getControllerType()__		Method method = invocationInfo.getControllerMethod()__		Object[] arguments = invocationInfo.getArgumentValues()__		return fromMethodInternal(null, controllerType, method, arguments)__	};create,a,link,uri,components,builder,by,invoking,a,mock,controller,method,the,controller,method,and,the,supplied,argument,values,are,then,used,to,delegate,to,link,from,method,class,method,object,p,for,example,given,this,controller,pre,class,code,064,request,mapping,people,id,addresses,class,address,controller,064,request,mapping,country,public,http,entity,void,get,addresses,for,country,064,path,variable,string,country,064,request,mapping,value,method,request,method,post,public,void,add,address,address,address,pre,a,uri,components,builder,can,be,created,pre,class,code,inline,style,with,static,import,of,mvc,uri,components,builder,on,mvc,uri,components,builder,from,method,call,on,address,controller,class,get,addresses,for,country,us,build,and,expand,1,longer,form,useful,for,repeated,invocation,and,void,controller,methods,address,controller,controller,mvc,uri,components,builder,on,address,controller,class,controller,add,address,null,builder,mvc,uri,components,builder,from,method,call,controller,controller,get,addresses,for,country,us,builder,mvc,uri,components,builder,from,method,call,controller,pre,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,info,either,the,value,returned,from,a,mock,controller,invocation,or,the,mock,controller,itself,after,an,invocation,return,a,uri,components,instance;public,static,uri,components,builder,from,method,call,object,info,assert,is,instance,of,method,invocation,info,class,info,method,invocation,info,required,method,invocation,info,invocation,info,method,invocation,info,info,class,controller,type,invocation,info,get,controller,type,method,method,invocation,info,get,controller,method,object,arguments,invocation,info,get,argument,values,return,from,method,internal,null,controller,type,method,arguments
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodCall(Object info);1522354261;Create a {@link UriComponentsBuilder} by invoking a "mock" controller method._The controller method and the supplied argument values are then used to_delegate to {@link #fromMethod(Class, Method, Object...)}._<p>For example, given this controller:_<pre class="code">_&#064_RequestMapping("/people/{id}/addresses")_class AddressController {__&#064_RequestMapping("/{country}")_public HttpEntity<Void> getAddressesForCountry(&#064_PathVariable String country) { ... }__&#064_RequestMapping(value="/", method=RequestMethod.POST)_public void addAddress(Address address) { ... }__</pre>_A UriComponentsBuilder can be created:_<pre class="code">_// Inline style with static import of "MvcUriComponentsBuilder.on"__MvcUriComponentsBuilder.fromMethodCall(_on(AddressController.class).getAddressesForCountry("US")).buildAndExpand(1)___// Longer form useful for repeated invocation (and void controller methods)__AddressController controller = MvcUriComponentsBuilder.on(AddressController.class)__controller.addAddress(null)__builder = MvcUriComponentsBuilder.fromMethodCall(controller)__controller.getAddressesForCountry("US")_builder = MvcUriComponentsBuilder.fromMethodCall(controller)__</pre>__<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs.__@param info either the value returned from a "mock" controller_invocation or the "mock" controller itself after an invocation_@return a UriComponents instance;public static UriComponentsBuilder fromMethodCall(Object info) {_		Assert.isInstanceOf(MethodInvocationInfo.class, info, "MethodInvocationInfo required")__		MethodInvocationInfo invocationInfo = (MethodInvocationInfo) info__		Class<?> controllerType = invocationInfo.getControllerType()__		Method method = invocationInfo.getControllerMethod()__		Object[] arguments = invocationInfo.getArgumentValues()__		return fromMethodInternal(null, controllerType, method, arguments)__	};create,a,link,uri,components,builder,by,invoking,a,mock,controller,method,the,controller,method,and,the,supplied,argument,values,are,then,used,to,delegate,to,link,from,method,class,method,object,p,for,example,given,this,controller,pre,class,code,064,request,mapping,people,id,addresses,class,address,controller,064,request,mapping,country,public,http,entity,void,get,addresses,for,country,064,path,variable,string,country,064,request,mapping,value,method,request,method,post,public,void,add,address,address,address,pre,a,uri,components,builder,can,be,created,pre,class,code,inline,style,with,static,import,of,mvc,uri,components,builder,on,mvc,uri,components,builder,from,method,call,on,address,controller,class,get,addresses,for,country,us,build,and,expand,1,longer,form,useful,for,repeated,invocation,and,void,controller,methods,address,controller,controller,mvc,uri,components,builder,on,address,controller,class,controller,add,address,null,builder,mvc,uri,components,builder,from,method,call,controller,controller,get,addresses,for,country,us,builder,mvc,uri,components,builder,from,method,call,controller,pre,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,info,either,the,value,returned,from,a,mock,controller,invocation,or,the,mock,controller,itself,after,an,invocation,return,a,uri,components,instance;public,static,uri,components,builder,from,method,call,object,info,assert,is,instance,of,method,invocation,info,class,info,method,invocation,info,required,method,invocation,info,invocation,info,method,invocation,info,info,class,controller,type,invocation,info,get,controller,type,method,method,invocation,info,get,controller,method,object,arguments,invocation,info,get,argument,values,return,from,method,internal,null,controller,type,method,arguments
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodCall(Object info);1523455554;Create a {@link UriComponentsBuilder} by invoking a "mock" controller method._The controller method and the supplied argument values are then used to_delegate to {@link #fromMethod(Class, Method, Object...)}._<p>For example, given this controller:_<pre class="code">_&#064_RequestMapping("/people/{id}/addresses")_class AddressController {__&#064_RequestMapping("/{country}")_public HttpEntity<Void> getAddressesForCountry(&#064_PathVariable String country) { ... }__&#064_RequestMapping(value="/", method=RequestMethod.POST)_public void addAddress(Address address) { ... }__</pre>_A UriComponentsBuilder can be created:_<pre class="code">_// Inline style with static import of "MvcUriComponentsBuilder.on"__MvcUriComponentsBuilder.fromMethodCall(_on(AddressController.class).getAddressesForCountry("US")).buildAndExpand(1)___// Longer form useful for repeated invocation (and void controller methods)__AddressController controller = MvcUriComponentsBuilder.on(AddressController.class)__controller.addAddress(null)__builder = MvcUriComponentsBuilder.fromMethodCall(controller)__controller.getAddressesForCountry("US")_builder = MvcUriComponentsBuilder.fromMethodCall(controller)__</pre>_<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param info either the value returned from a "mock" controller_invocation or the "mock" controller itself after an invocation_@return a UriComponents instance;public static UriComponentsBuilder fromMethodCall(Object info) {_		Assert.isInstanceOf(MethodInvocationInfo.class, info, "MethodInvocationInfo required")__		MethodInvocationInfo invocationInfo = (MethodInvocationInfo) info__		Class<?> controllerType = invocationInfo.getControllerType()__		Method method = invocationInfo.getControllerMethod()__		Object[] arguments = invocationInfo.getArgumentValues()__		return fromMethodInternal(null, controllerType, method, arguments)__	};create,a,link,uri,components,builder,by,invoking,a,mock,controller,method,the,controller,method,and,the,supplied,argument,values,are,then,used,to,delegate,to,link,from,method,class,method,object,p,for,example,given,this,controller,pre,class,code,064,request,mapping,people,id,addresses,class,address,controller,064,request,mapping,country,public,http,entity,void,get,addresses,for,country,064,path,variable,string,country,064,request,mapping,value,method,request,method,post,public,void,add,address,address,address,pre,a,uri,components,builder,can,be,created,pre,class,code,inline,style,with,static,import,of,mvc,uri,components,builder,on,mvc,uri,components,builder,from,method,call,on,address,controller,class,get,addresses,for,country,us,build,and,expand,1,longer,form,useful,for,repeated,invocation,and,void,controller,methods,address,controller,controller,mvc,uri,components,builder,on,address,controller,class,controller,add,address,null,builder,mvc,uri,components,builder,from,method,call,controller,controller,get,addresses,for,country,us,builder,mvc,uri,components,builder,from,method,call,controller,pre,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,info,either,the,value,returned,from,a,mock,controller,invocation,or,the,mock,controller,itself,after,an,invocation,return,a,uri,components,instance;public,static,uri,components,builder,from,method,call,object,info,assert,is,instance,of,method,invocation,info,class,info,method,invocation,info,required,method,invocation,info,invocation,info,method,invocation,info,info,class,controller,type,invocation,info,get,controller,type,method,method,invocation,info,get,controller,method,object,arguments,invocation,info,get,argument,values,return,from,method,internal,null,controller,type,method,arguments
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodCall(Object info);1529028426;Create a {@link UriComponentsBuilder} by invoking a "mock" controller method._The controller method and the supplied argument values are then used to_delegate to {@link #fromMethod(Class, Method, Object...)}._<p>For example, given this controller:_<pre class="code">_&#064_RequestMapping("/people/{id}/addresses")_class AddressController {__&#064_RequestMapping("/{country}")_public HttpEntity<Void> getAddressesForCountry(&#064_PathVariable String country) { ... }__&#064_RequestMapping(value="/", method=RequestMethod.POST)_public void addAddress(Address address) { ... }__</pre>_A UriComponentsBuilder can be created:_<pre class="code">_// Inline style with static import of "MvcUriComponentsBuilder.on"__MvcUriComponentsBuilder.fromMethodCall(_on(AddressController.class).getAddressesForCountry("US")).buildAndExpand(1)___// Longer form useful for repeated invocation (and void controller methods)__AddressController controller = MvcUriComponentsBuilder.on(AddressController.class)__controller.addAddress(null)__builder = MvcUriComponentsBuilder.fromMethodCall(controller)__controller.getAddressesForCountry("US")_builder = MvcUriComponentsBuilder.fromMethodCall(controller)__</pre>_<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param info either the value returned from a "mock" controller_invocation or the "mock" controller itself after an invocation_@return a UriComponents instance_@see #on(Class)_@see #controller(Class);public static UriComponentsBuilder fromMethodCall(Object info) {_		Assert.isInstanceOf(MethodInvocationInfo.class, info, "MethodInvocationInfo required")__		MethodInvocationInfo invocationInfo = (MethodInvocationInfo) info__		Class<?> controllerType = invocationInfo.getControllerType()__		Method method = invocationInfo.getControllerMethod()__		Object[] arguments = invocationInfo.getArgumentValues()__		return fromMethodInternal(null, controllerType, method, arguments)__	};create,a,link,uri,components,builder,by,invoking,a,mock,controller,method,the,controller,method,and,the,supplied,argument,values,are,then,used,to,delegate,to,link,from,method,class,method,object,p,for,example,given,this,controller,pre,class,code,064,request,mapping,people,id,addresses,class,address,controller,064,request,mapping,country,public,http,entity,void,get,addresses,for,country,064,path,variable,string,country,064,request,mapping,value,method,request,method,post,public,void,add,address,address,address,pre,a,uri,components,builder,can,be,created,pre,class,code,inline,style,with,static,import,of,mvc,uri,components,builder,on,mvc,uri,components,builder,from,method,call,on,address,controller,class,get,addresses,for,country,us,build,and,expand,1,longer,form,useful,for,repeated,invocation,and,void,controller,methods,address,controller,controller,mvc,uri,components,builder,on,address,controller,class,controller,add,address,null,builder,mvc,uri,components,builder,from,method,call,controller,controller,get,addresses,for,country,us,builder,mvc,uri,components,builder,from,method,call,controller,pre,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,info,either,the,value,returned,from,a,mock,controller,invocation,or,the,mock,controller,itself,after,an,invocation,return,a,uri,components,instance,see,on,class,see,controller,class;public,static,uri,components,builder,from,method,call,object,info,assert,is,instance,of,method,invocation,info,class,info,method,invocation,info,required,method,invocation,info,invocation,info,method,invocation,info,info,class,controller,type,invocation,info,get,controller,type,method,method,invocation,info,get,controller,method,object,arguments,invocation,info,get,argument,values,return,from,method,internal,null,controller,type,method,arguments
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodCall(Object info);1529028426;Create a {@link UriComponentsBuilder} by invoking a "mock" controller method._The controller method and the supplied argument values are then used to_delegate to {@link #fromMethod(Class, Method, Object...)}._<p>For example, given this controller:_<pre class="code">_&#064_RequestMapping("/people/{id}/addresses")_class AddressController {__&#064_RequestMapping("/{country}")_public HttpEntity<Void> getAddressesForCountry(&#064_PathVariable String country) { ... }__&#064_RequestMapping(value="/", method=RequestMethod.POST)_public void addAddress(Address address) { ... }__</pre>_A UriComponentsBuilder can be created:_<pre class="code">_// Inline style with static import of "MvcUriComponentsBuilder.on"__MvcUriComponentsBuilder.fromMethodCall(_on(AddressController.class).getAddressesForCountry("US")).buildAndExpand(1)___// Longer form useful for repeated invocation (and void controller methods)__AddressController controller = MvcUriComponentsBuilder.on(AddressController.class)__controller.addAddress(null)__builder = MvcUriComponentsBuilder.fromMethodCall(controller)__controller.getAddressesForCountry("US")_builder = MvcUriComponentsBuilder.fromMethodCall(controller)__</pre>_<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param info either the value returned from a "mock" controller_invocation or the "mock" controller itself after an invocation_@return a UriComponents instance_@see #on(Class)_@see #controller(Class);public static UriComponentsBuilder fromMethodCall(Object info) {_		Assert.isInstanceOf(MethodInvocationInfo.class, info, "MethodInvocationInfo required")__		MethodInvocationInfo invocationInfo = (MethodInvocationInfo) info__		Class<?> controllerType = invocationInfo.getControllerType()__		Method method = invocationInfo.getControllerMethod()__		Object[] arguments = invocationInfo.getArgumentValues()__		return fromMethodInternal(null, controllerType, method, arguments)__	};create,a,link,uri,components,builder,by,invoking,a,mock,controller,method,the,controller,method,and,the,supplied,argument,values,are,then,used,to,delegate,to,link,from,method,class,method,object,p,for,example,given,this,controller,pre,class,code,064,request,mapping,people,id,addresses,class,address,controller,064,request,mapping,country,public,http,entity,void,get,addresses,for,country,064,path,variable,string,country,064,request,mapping,value,method,request,method,post,public,void,add,address,address,address,pre,a,uri,components,builder,can,be,created,pre,class,code,inline,style,with,static,import,of,mvc,uri,components,builder,on,mvc,uri,components,builder,from,method,call,on,address,controller,class,get,addresses,for,country,us,build,and,expand,1,longer,form,useful,for,repeated,invocation,and,void,controller,methods,address,controller,controller,mvc,uri,components,builder,on,address,controller,class,controller,add,address,null,builder,mvc,uri,components,builder,from,method,call,controller,controller,get,addresses,for,country,us,builder,mvc,uri,components,builder,from,method,call,controller,pre,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,info,either,the,value,returned,from,a,mock,controller,invocation,or,the,mock,controller,itself,after,an,invocation,return,a,uri,components,instance,see,on,class,see,controller,class;public,static,uri,components,builder,from,method,call,object,info,assert,is,instance,of,method,invocation,info,class,info,method,invocation,info,required,method,invocation,info,invocation,info,method,invocation,info,info,class,controller,type,invocation,info,get,controller,type,method,method,invocation,info,get,controller,method,object,arguments,invocation,info,get,argument,values,return,from,method,internal,null,controller,type,method,arguments
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodCall(Object info);1529028713;Create a {@link UriComponentsBuilder} by invoking a "mock" controller method._The controller method and the supplied argument values are then used to_delegate to {@link #fromMethod(Class, Method, Object...)}._<p>For example, given this controller:_<pre class="code">_&#064_RequestMapping("/people/{id}/addresses")_class AddressController {__&#064_RequestMapping("/{country}")_public HttpEntity<Void> getAddressesForCountry(&#064_PathVariable String country) { ... }__&#064_RequestMapping(value="/", method=RequestMethod.POST)_public void addAddress(Address address) { ... }__</pre>_A UriComponentsBuilder can be created:_<pre class="code">_// Inline style with static import of "MvcUriComponentsBuilder.on"__MvcUriComponentsBuilder.fromMethodCall(_on(AddressController.class).getAddressesForCountry("US")).buildAndExpand(1)___// Longer form useful for repeated invocation (and void controller methods)__AddressController controller = MvcUriComponentsBuilder.on(AddressController.class)__controller.addAddress(null)__builder = MvcUriComponentsBuilder.fromMethodCall(controller)__controller.getAddressesForCountry("US")_builder = MvcUriComponentsBuilder.fromMethodCall(controller)__</pre>_<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param info either the value returned from a "mock" controller_invocation or the "mock" controller itself after an invocation_@return a UriComponents instance_@see #on(Class)_@see #controller(Class);public static UriComponentsBuilder fromMethodCall(Object info) {_		Assert.isInstanceOf(MethodInvocationInfo.class, info, "MethodInvocationInfo required")__		MethodInvocationInfo invocationInfo = (MethodInvocationInfo) info__		Class<?> controllerType = invocationInfo.getControllerType()__		Method method = invocationInfo.getControllerMethod()__		Object[] arguments = invocationInfo.getArgumentValues()__		return fromMethodInternal(null, controllerType, method, arguments)__	};create,a,link,uri,components,builder,by,invoking,a,mock,controller,method,the,controller,method,and,the,supplied,argument,values,are,then,used,to,delegate,to,link,from,method,class,method,object,p,for,example,given,this,controller,pre,class,code,064,request,mapping,people,id,addresses,class,address,controller,064,request,mapping,country,public,http,entity,void,get,addresses,for,country,064,path,variable,string,country,064,request,mapping,value,method,request,method,post,public,void,add,address,address,address,pre,a,uri,components,builder,can,be,created,pre,class,code,inline,style,with,static,import,of,mvc,uri,components,builder,on,mvc,uri,components,builder,from,method,call,on,address,controller,class,get,addresses,for,country,us,build,and,expand,1,longer,form,useful,for,repeated,invocation,and,void,controller,methods,address,controller,controller,mvc,uri,components,builder,on,address,controller,class,controller,add,address,null,builder,mvc,uri,components,builder,from,method,call,controller,controller,get,addresses,for,country,us,builder,mvc,uri,components,builder,from,method,call,controller,pre,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,info,either,the,value,returned,from,a,mock,controller,invocation,or,the,mock,controller,itself,after,an,invocation,return,a,uri,components,instance,see,on,class,see,controller,class;public,static,uri,components,builder,from,method,call,object,info,assert,is,instance,of,method,invocation,info,class,info,method,invocation,info,required,method,invocation,info,invocation,info,method,invocation,info,info,class,controller,type,invocation,info,get,controller,type,method,method,invocation,info,get,controller,method,object,arguments,invocation,info,get,argument,values,return,from,method,internal,null,controller,type,method,arguments
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodCall(Object info);1529361191;Create a {@link UriComponentsBuilder} by invoking a "mock" controller method._The controller method and the supplied argument values are then used to_delegate to {@link #fromMethod(Class, Method, Object...)}._<p>For example, given this controller:_<pre class="code">_&#064_RequestMapping("/people/{id}/addresses")_class AddressController {__&#064_RequestMapping("/{country}")_public HttpEntity<Void> getAddressesForCountry(&#064_PathVariable String country) { ... }__&#064_RequestMapping(value="/", method=RequestMethod.POST)_public void addAddress(Address address) { ... }__</pre>_A UriComponentsBuilder can be created:_<pre class="code">_// Inline style with static import of "MvcUriComponentsBuilder.on"__MvcUriComponentsBuilder.fromMethodCall(_on(AddressController.class).getAddressesForCountry("US")).buildAndExpand(1)___// Longer form useful for repeated invocation (and void controller methods)__AddressController controller = MvcUriComponentsBuilder.on(AddressController.class)__controller.addAddress(null)__builder = MvcUriComponentsBuilder.fromMethodCall(controller)__controller.getAddressesForCountry("US")_builder = MvcUriComponentsBuilder.fromMethodCall(controller)__</pre>_<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param info either the value returned from a "mock" controller_invocation or the "mock" controller itself after an invocation_@return a UriComponents instance_@see #on(Class)_@see #controller(Class);public static UriComponentsBuilder fromMethodCall(Object info) {_		Assert.isInstanceOf(MethodInvocationInfo.class, info, "MethodInvocationInfo required")__		MethodInvocationInfo invocationInfo = (MethodInvocationInfo) info__		Class<?> controllerType = invocationInfo.getControllerType()__		Method method = invocationInfo.getControllerMethod()__		Object[] arguments = invocationInfo.getArgumentValues()__		return fromMethodInternal(null, controllerType, method, arguments)__	};create,a,link,uri,components,builder,by,invoking,a,mock,controller,method,the,controller,method,and,the,supplied,argument,values,are,then,used,to,delegate,to,link,from,method,class,method,object,p,for,example,given,this,controller,pre,class,code,064,request,mapping,people,id,addresses,class,address,controller,064,request,mapping,country,public,http,entity,void,get,addresses,for,country,064,path,variable,string,country,064,request,mapping,value,method,request,method,post,public,void,add,address,address,address,pre,a,uri,components,builder,can,be,created,pre,class,code,inline,style,with,static,import,of,mvc,uri,components,builder,on,mvc,uri,components,builder,from,method,call,on,address,controller,class,get,addresses,for,country,us,build,and,expand,1,longer,form,useful,for,repeated,invocation,and,void,controller,methods,address,controller,controller,mvc,uri,components,builder,on,address,controller,class,controller,add,address,null,builder,mvc,uri,components,builder,from,method,call,controller,controller,get,addresses,for,country,us,builder,mvc,uri,components,builder,from,method,call,controller,pre,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,info,either,the,value,returned,from,a,mock,controller,invocation,or,the,mock,controller,itself,after,an,invocation,return,a,uri,components,instance,see,on,class,see,controller,class;public,static,uri,components,builder,from,method,call,object,info,assert,is,instance,of,method,invocation,info,class,info,method,invocation,info,required,method,invocation,info,invocation,info,method,invocation,info,info,class,controller,type,invocation,info,get,controller,type,method,method,invocation,info,get,controller,method,object,arguments,invocation,info,get,argument,values,return,from,method,internal,null,controller,type,method,arguments
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodCall(Object info);1530174524;Create a {@link UriComponentsBuilder} by invoking a "mock" controller method._The controller method and the supplied argument values are then used to_delegate to {@link #fromMethod(Class, Method, Object...)}._<p>For example, given this controller:_<pre class="code">_&#064_RequestMapping("/people/{id}/addresses")_class AddressController {__&#064_RequestMapping("/{country}")_public HttpEntity&lt_Void&gt_ getAddressesForCountry(&#064_PathVariable String country) { ... }__&#064_RequestMapping(value="/", method=RequestMethod.POST)_public void addAddress(Address address) { ... }__</pre>_A UriComponentsBuilder can be created:_<pre class="code">_// Inline style with static import of "MvcUriComponentsBuilder.on"__MvcUriComponentsBuilder.fromMethodCall(_on(AddressController.class).getAddressesForCountry("US")).buildAndExpand(1)___// Longer form useful for repeated invocation (and void controller methods)__AddressController controller = MvcUriComponentsBuilder.on(AddressController.class)__controller.addAddress(null)__builder = MvcUriComponentsBuilder.fromMethodCall(controller)__controller.getAddressesForCountry("US")_builder = MvcUriComponentsBuilder.fromMethodCall(controller)__</pre>_<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param info either the value returned from a "mock" controller_invocation or the "mock" controller itself after an invocation_@return a UriComponents instance_@see #on(Class)_@see #controller(Class);public static UriComponentsBuilder fromMethodCall(Object info) {_		Assert.isInstanceOf(MethodInvocationInfo.class, info, "MethodInvocationInfo required")__		MethodInvocationInfo invocationInfo = (MethodInvocationInfo) info__		Class<?> controllerType = invocationInfo.getControllerType()__		Method method = invocationInfo.getControllerMethod()__		Object[] arguments = invocationInfo.getArgumentValues()__		return fromMethodInternal(null, controllerType, method, arguments)__	};create,a,link,uri,components,builder,by,invoking,a,mock,controller,method,the,controller,method,and,the,supplied,argument,values,are,then,used,to,delegate,to,link,from,method,class,method,object,p,for,example,given,this,controller,pre,class,code,064,request,mapping,people,id,addresses,class,address,controller,064,request,mapping,country,public,http,entity,lt,void,gt,get,addresses,for,country,064,path,variable,string,country,064,request,mapping,value,method,request,method,post,public,void,add,address,address,address,pre,a,uri,components,builder,can,be,created,pre,class,code,inline,style,with,static,import,of,mvc,uri,components,builder,on,mvc,uri,components,builder,from,method,call,on,address,controller,class,get,addresses,for,country,us,build,and,expand,1,longer,form,useful,for,repeated,invocation,and,void,controller,methods,address,controller,controller,mvc,uri,components,builder,on,address,controller,class,controller,add,address,null,builder,mvc,uri,components,builder,from,method,call,controller,controller,get,addresses,for,country,us,builder,mvc,uri,components,builder,from,method,call,controller,pre,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,info,either,the,value,returned,from,a,mock,controller,invocation,or,the,mock,controller,itself,after,an,invocation,return,a,uri,components,instance,see,on,class,see,controller,class;public,static,uri,components,builder,from,method,call,object,info,assert,is,instance,of,method,invocation,info,class,info,method,invocation,info,required,method,invocation,info,invocation,info,method,invocation,info,info,class,controller,type,invocation,info,get,controller,type,method,method,invocation,info,get,controller,method,object,arguments,invocation,info,get,argument,values,return,from,method,internal,null,controller,type,method,arguments
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodCall(Object info);1532041662;Create a {@link UriComponentsBuilder} by invoking a "mock" controller method._The controller method and the supplied argument values are then used to_delegate to {@link #fromMethod(Class, Method, Object...)}._<p>For example, given this controller:_<pre class="code">_&#064_RequestMapping("/people/{id}/addresses")_class AddressController {__&#064_RequestMapping("/{country}")_public HttpEntity&lt_Void&gt_ getAddressesForCountry(&#064_PathVariable String country) { ... }__&#064_RequestMapping(value="/", method=RequestMethod.POST)_public void addAddress(Address address) { ... }__</pre>_A UriComponentsBuilder can be created:_<pre class="code">_// Inline style with static import of "MvcUriComponentsBuilder.on"__MvcUriComponentsBuilder.fromMethodCall(_on(AddressController.class).getAddressesForCountry("US")).buildAndExpand(1)___// Longer form useful for repeated invocation (and void controller methods)__AddressController controller = MvcUriComponentsBuilder.on(AddressController.class)__controller.addAddress(null)__builder = MvcUriComponentsBuilder.fromMethodCall(controller)__controller.getAddressesForCountry("US")_builder = MvcUriComponentsBuilder.fromMethodCall(controller)__</pre>_<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param info either the value returned from a "mock" controller_invocation or the "mock" controller itself after an invocation_@return a UriComponents instance_@see #on(Class)_@see #controller(Class);public static UriComponentsBuilder fromMethodCall(Object info) {_		Assert.isInstanceOf(MethodInvocationInfo.class, info, "MethodInvocationInfo required")__		MethodInvocationInfo invocationInfo = (MethodInvocationInfo) info__		Class<?> controllerType = invocationInfo.getControllerType()__		Method method = invocationInfo.getControllerMethod()__		Object[] arguments = invocationInfo.getArgumentValues()__		return fromMethodInternal(null, controllerType, method, arguments)__	};create,a,link,uri,components,builder,by,invoking,a,mock,controller,method,the,controller,method,and,the,supplied,argument,values,are,then,used,to,delegate,to,link,from,method,class,method,object,p,for,example,given,this,controller,pre,class,code,064,request,mapping,people,id,addresses,class,address,controller,064,request,mapping,country,public,http,entity,lt,void,gt,get,addresses,for,country,064,path,variable,string,country,064,request,mapping,value,method,request,method,post,public,void,add,address,address,address,pre,a,uri,components,builder,can,be,created,pre,class,code,inline,style,with,static,import,of,mvc,uri,components,builder,on,mvc,uri,components,builder,from,method,call,on,address,controller,class,get,addresses,for,country,us,build,and,expand,1,longer,form,useful,for,repeated,invocation,and,void,controller,methods,address,controller,controller,mvc,uri,components,builder,on,address,controller,class,controller,add,address,null,builder,mvc,uri,components,builder,from,method,call,controller,controller,get,addresses,for,country,us,builder,mvc,uri,components,builder,from,method,call,controller,pre,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,info,either,the,value,returned,from,a,mock,controller,invocation,or,the,mock,controller,itself,after,an,invocation,return,a,uri,components,instance,see,on,class,see,controller,class;public,static,uri,components,builder,from,method,call,object,info,assert,is,instance,of,method,invocation,info,class,info,method,invocation,info,required,method,invocation,info,invocation,info,method,invocation,info,info,class,controller,type,invocation,info,get,controller,type,method,method,invocation,info,get,controller,method,object,arguments,invocation,info,get,argument,values,return,from,method,internal,null,controller,type,method,arguments
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodCall(Object info);1532041662;Create a {@link UriComponentsBuilder} by invoking a "mock" controller method._The controller method and the supplied argument values are then used to_delegate to {@link #fromMethod(Class, Method, Object...)}._<p>For example, given this controller:_<pre class="code">_&#064_RequestMapping("/people/{id}/addresses")_class AddressController {__&#064_RequestMapping("/{country}")_public HttpEntity&lt_Void&gt_ getAddressesForCountry(&#064_PathVariable String country) { ... }__&#064_RequestMapping(value="/", method=RequestMethod.POST)_public void addAddress(Address address) { ... }__</pre>_A UriComponentsBuilder can be created:_<pre class="code">_// Inline style with static import of "MvcUriComponentsBuilder.on"__MvcUriComponentsBuilder.fromMethodCall(_on(AddressController.class).getAddressesForCountry("US")).buildAndExpand(1)___// Longer form useful for repeated invocation (and void controller methods)__AddressController controller = MvcUriComponentsBuilder.on(AddressController.class)__controller.addAddress(null)__builder = MvcUriComponentsBuilder.fromMethodCall(controller)__controller.getAddressesForCountry("US")_builder = MvcUriComponentsBuilder.fromMethodCall(controller)__</pre>_<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param info either the value returned from a "mock" controller_invocation or the "mock" controller itself after an invocation_@return a UriComponents instance_@see #on(Class)_@see #controller(Class);public static UriComponentsBuilder fromMethodCall(Object info) {_		Assert.isInstanceOf(MethodInvocationInfo.class, info, "MethodInvocationInfo required")__		MethodInvocationInfo invocationInfo = (MethodInvocationInfo) info__		Class<?> controllerType = invocationInfo.getControllerType()__		Method method = invocationInfo.getControllerMethod()__		Object[] arguments = invocationInfo.getArgumentValues()__		return fromMethodInternal(null, controllerType, method, arguments)__	};create,a,link,uri,components,builder,by,invoking,a,mock,controller,method,the,controller,method,and,the,supplied,argument,values,are,then,used,to,delegate,to,link,from,method,class,method,object,p,for,example,given,this,controller,pre,class,code,064,request,mapping,people,id,addresses,class,address,controller,064,request,mapping,country,public,http,entity,lt,void,gt,get,addresses,for,country,064,path,variable,string,country,064,request,mapping,value,method,request,method,post,public,void,add,address,address,address,pre,a,uri,components,builder,can,be,created,pre,class,code,inline,style,with,static,import,of,mvc,uri,components,builder,on,mvc,uri,components,builder,from,method,call,on,address,controller,class,get,addresses,for,country,us,build,and,expand,1,longer,form,useful,for,repeated,invocation,and,void,controller,methods,address,controller,controller,mvc,uri,components,builder,on,address,controller,class,controller,add,address,null,builder,mvc,uri,components,builder,from,method,call,controller,controller,get,addresses,for,country,us,builder,mvc,uri,components,builder,from,method,call,controller,pre,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,info,either,the,value,returned,from,a,mock,controller,invocation,or,the,mock,controller,itself,after,an,invocation,return,a,uri,components,instance,see,on,class,see,controller,class;public,static,uri,components,builder,from,method,call,object,info,assert,is,instance,of,method,invocation,info,class,info,method,invocation,info,required,method,invocation,info,invocation,info,method,invocation,info,info,class,controller,type,invocation,info,get,controller,type,method,method,invocation,info,get,controller,method,object,arguments,invocation,info,get,argument,values,return,from,method,internal,null,controller,type,method,arguments
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodCall(Object info);1548943222;Create a {@link UriComponentsBuilder} by invoking a "mock" controller method._The controller method and the supplied argument values are then used to_delegate to {@link #fromMethod(Class, Method, Object...)}._<p>For example, given this controller:_<pre class="code">_&#064_RequestMapping("/people/{id}/addresses")_class AddressController {__&#064_RequestMapping("/{country}")_public HttpEntity&lt_Void&gt_ getAddressesForCountry(&#064_PathVariable String country) { ... }__&#064_RequestMapping(value="/", method=RequestMethod.POST)_public void addAddress(Address address) { ... }__</pre>_A UriComponentsBuilder can be created:_<pre class="code">_// Inline style with static import of "MvcUriComponentsBuilder.on"__MvcUriComponentsBuilder.fromMethodCall(_on(AddressController.class).getAddressesForCountry("US")).buildAndExpand(1)___// Longer form useful for repeated invocation (and void controller methods)__AddressController controller = MvcUriComponentsBuilder.on(AddressController.class)__controller.addAddress(null)__builder = MvcUriComponentsBuilder.fromMethodCall(controller)__controller.getAddressesForCountry("US")_builder = MvcUriComponentsBuilder.fromMethodCall(controller)__</pre>_<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param info either the value returned from a "mock" controller_invocation or the "mock" controller itself after an invocation_@return a UriComponents instance_@see #on(Class)_@see #controller(Class);public static UriComponentsBuilder fromMethodCall(Object info) {_		Assert.isInstanceOf(MethodInvocationInfo.class, info, "MethodInvocationInfo required")__		MethodInvocationInfo invocationInfo = (MethodInvocationInfo) info__		Class<?> controllerType = invocationInfo.getControllerType()__		Method method = invocationInfo.getControllerMethod()__		Object[] arguments = invocationInfo.getArgumentValues()__		return fromMethodInternal(null, controllerType, method, arguments)__	};create,a,link,uri,components,builder,by,invoking,a,mock,controller,method,the,controller,method,and,the,supplied,argument,values,are,then,used,to,delegate,to,link,from,method,class,method,object,p,for,example,given,this,controller,pre,class,code,064,request,mapping,people,id,addresses,class,address,controller,064,request,mapping,country,public,http,entity,lt,void,gt,get,addresses,for,country,064,path,variable,string,country,064,request,mapping,value,method,request,method,post,public,void,add,address,address,address,pre,a,uri,components,builder,can,be,created,pre,class,code,inline,style,with,static,import,of,mvc,uri,components,builder,on,mvc,uri,components,builder,from,method,call,on,address,controller,class,get,addresses,for,country,us,build,and,expand,1,longer,form,useful,for,repeated,invocation,and,void,controller,methods,address,controller,controller,mvc,uri,components,builder,on,address,controller,class,controller,add,address,null,builder,mvc,uri,components,builder,from,method,call,controller,controller,get,addresses,for,country,us,builder,mvc,uri,components,builder,from,method,call,controller,pre,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,info,either,the,value,returned,from,a,mock,controller,invocation,or,the,mock,controller,itself,after,an,invocation,return,a,uri,components,instance,see,on,class,see,controller,class;public,static,uri,components,builder,from,method,call,object,info,assert,is,instance,of,method,invocation,info,class,info,method,invocation,info,required,method,invocation,info,invocation,info,method,invocation,info,info,class,controller,type,invocation,info,get,controller,type,method,method,invocation,info,get,controller,method,object,arguments,invocation,info,get,argument,values,return,from,method,internal,null,controller,type,method,arguments
MvcUriComponentsBuilder -> MethodArgumentBuilder -> public MethodArgumentBuilder(UriComponentsBuilder baseUrl, Class<?> controllerType, Method method);1439294371;@since 4.2;public MethodArgumentBuilder(UriComponentsBuilder baseUrl, Class<?> controllerType, Method method) {_			Assert.notNull(controllerType, "'controllerType' is required")__			Assert.notNull(method, "'method' is required")__			this.baseUrl = (baseUrl != null ? baseUrl : initBaseUrl())__			this.controllerType = controllerType__			this.method = method__			this.argumentValues = new Object[method.getParameterTypes().length]__			for (int i = 0_ i < this.argumentValues.length_ i++) {_				this.argumentValues[i] = null__			}_		};since,4,2;public,method,argument,builder,uri,components,builder,base,url,class,controller,type,method,method,assert,not,null,controller,type,controller,type,is,required,assert,not,null,method,method,is,required,this,base,url,base,url,null,base,url,init,base,url,this,controller,type,controller,type,this,method,method,this,argument,values,new,object,method,get,parameter,types,length,for,int,i,0,i,this,argument,values,length,i,this,argument,values,i,null
MvcUriComponentsBuilder -> MethodArgumentBuilder -> public MethodArgumentBuilder(UriComponentsBuilder baseUrl, Class<?> controllerType, Method method);1447077465;@since 4.2;public MethodArgumentBuilder(UriComponentsBuilder baseUrl, Class<?> controllerType, Method method) {_			Assert.notNull(controllerType, "'controllerType' is required")__			Assert.notNull(method, "'method' is required")__			this.baseUrl = (baseUrl != null ? baseUrl : initBaseUrl())__			this.controllerType = controllerType__			this.method = method__			this.argumentValues = new Object[method.getParameterTypes().length]__			for (int i = 0_ i < this.argumentValues.length_ i++) {_				this.argumentValues[i] = null__			}_		};since,4,2;public,method,argument,builder,uri,components,builder,base,url,class,controller,type,method,method,assert,not,null,controller,type,controller,type,is,required,assert,not,null,method,method,is,required,this,base,url,base,url,null,base,url,init,base,url,this,controller,type,controller,type,this,method,method,this,argument,values,new,object,method,get,parameter,types,length,for,int,i,0,i,this,argument,values,length,i,this,argument,values,i,null
MvcUriComponentsBuilder -> MethodArgumentBuilder -> public MethodArgumentBuilder(UriComponentsBuilder baseUrl, Class<?> controllerType, Method method);1458830024;@since 4.2;public MethodArgumentBuilder(UriComponentsBuilder baseUrl, Class<?> controllerType, Method method) {_			Assert.notNull(controllerType, "'controllerType' is required")__			Assert.notNull(method, "'method' is required")__			this.baseUrl = (baseUrl != null ? baseUrl : initBaseUrl())__			this.controllerType = controllerType__			this.method = method__			this.argumentValues = new Object[method.getParameterTypes().length]__			for (int i = 0_ i < this.argumentValues.length_ i++) {_				this.argumentValues[i] = null__			}_		};since,4,2;public,method,argument,builder,uri,components,builder,base,url,class,controller,type,method,method,assert,not,null,controller,type,controller,type,is,required,assert,not,null,method,method,is,required,this,base,url,base,url,null,base,url,init,base,url,this,controller,type,controller,type,this,method,method,this,argument,values,new,object,method,get,parameter,types,length,for,int,i,0,i,this,argument,values,length,i,this,argument,values,i,null
MvcUriComponentsBuilder -> MethodArgumentBuilder -> public MethodArgumentBuilder(UriComponentsBuilder baseUrl, Class<?> controllerType, Method method);1461047077;@since 4.2;public MethodArgumentBuilder(UriComponentsBuilder baseUrl, Class<?> controllerType, Method method) {_			Assert.notNull(controllerType, "'controllerType' is required")__			Assert.notNull(method, "'method' is required")__			this.baseUrl = (baseUrl != null ? baseUrl : initBaseUrl())__			this.controllerType = controllerType__			this.method = method__			this.argumentValues = new Object[method.getParameterTypes().length]__			for (int i = 0_ i < this.argumentValues.length_ i++) {_				this.argumentValues[i] = null__			}_		};since,4,2;public,method,argument,builder,uri,components,builder,base,url,class,controller,type,method,method,assert,not,null,controller,type,controller,type,is,required,assert,not,null,method,method,is,required,this,base,url,base,url,null,base,url,init,base,url,this,controller,type,controller,type,this,method,method,this,argument,values,new,object,method,get,parameter,types,length,for,int,i,0,i,this,argument,values,length,i,this,argument,values,i,null
MvcUriComponentsBuilder -> MethodArgumentBuilder -> public MethodArgumentBuilder(UriComponentsBuilder baseUrl, Class<?> controllerType, Method method);1467677340;@since 4.2;public MethodArgumentBuilder(UriComponentsBuilder baseUrl, Class<?> controllerType, Method method) {_			Assert.notNull(controllerType, "'controllerType' is required")__			Assert.notNull(method, "'method' is required")__			this.baseUrl = (baseUrl != null ? baseUrl : initBaseUrl())__			this.controllerType = controllerType__			this.method = method__			this.argumentValues = new Object[method.getParameterTypes().length]__			for (int i = 0_ i < this.argumentValues.length_ i++) {_				this.argumentValues[i] = null__			}_		};since,4,2;public,method,argument,builder,uri,components,builder,base,url,class,controller,type,method,method,assert,not,null,controller,type,controller,type,is,required,assert,not,null,method,method,is,required,this,base,url,base,url,null,base,url,init,base,url,this,controller,type,controller,type,this,method,method,this,argument,values,new,object,method,get,parameter,types,length,for,int,i,0,i,this,argument,values,length,i,this,argument,values,i,null
MvcUriComponentsBuilder -> MethodArgumentBuilder -> public MethodArgumentBuilder(UriComponentsBuilder baseUrl, Class<?> controllerType, Method method);1467726769;@since 4.2;public MethodArgumentBuilder(UriComponentsBuilder baseUrl, Class<?> controllerType, Method method) {_			Assert.notNull(controllerType, "'controllerType' is required")__			Assert.notNull(method, "'method' is required")__			this.baseUrl = (baseUrl != null ? baseUrl : initBaseUrl())__			this.controllerType = controllerType__			this.method = method__			this.argumentValues = new Object[method.getParameterTypes().length]__			for (int i = 0_ i < this.argumentValues.length_ i++) {_				this.argumentValues[i] = null__			}_		};since,4,2;public,method,argument,builder,uri,components,builder,base,url,class,controller,type,method,method,assert,not,null,controller,type,controller,type,is,required,assert,not,null,method,method,is,required,this,base,url,base,url,null,base,url,init,base,url,this,controller,type,controller,type,this,method,method,this,argument,values,new,object,method,get,parameter,types,length,for,int,i,0,i,this,argument,values,length,i,this,argument,values,i,null
MvcUriComponentsBuilder -> MethodArgumentBuilder -> public MethodArgumentBuilder(UriComponentsBuilder baseUrl, Class<?> controllerType, Method method);1467730834;@since 4.2;public MethodArgumentBuilder(UriComponentsBuilder baseUrl, Class<?> controllerType, Method method) {_			Assert.notNull(controllerType, "'controllerType' is required")__			Assert.notNull(method, "'method' is required")__			this.baseUrl = (baseUrl != null ? baseUrl : initBaseUrl())__			this.controllerType = controllerType__			this.method = method__			this.argumentValues = new Object[method.getParameterTypes().length]__			for (int i = 0_ i < this.argumentValues.length_ i++) {_				this.argumentValues[i] = null__			}_		};since,4,2;public,method,argument,builder,uri,components,builder,base,url,class,controller,type,method,method,assert,not,null,controller,type,controller,type,is,required,assert,not,null,method,method,is,required,this,base,url,base,url,null,base,url,init,base,url,this,controller,type,controller,type,this,method,method,this,argument,values,new,object,method,get,parameter,types,length,for,int,i,0,i,this,argument,values,length,i,this,argument,values,i,null
MvcUriComponentsBuilder -> MethodArgumentBuilder -> public MethodArgumentBuilder(UriComponentsBuilder baseUrl, Class<?> controllerType, Method method);1467846264;@since 4.2;public MethodArgumentBuilder(UriComponentsBuilder baseUrl, Class<?> controllerType, Method method) {_			Assert.notNull(controllerType, "'controllerType' is required")__			Assert.notNull(method, "'method' is required")__			this.baseUrl = (baseUrl != null ? baseUrl : initBaseUrl())__			this.controllerType = controllerType__			this.method = method__			this.argumentValues = new Object[method.getParameterCount()]__			for (int i = 0_ i < this.argumentValues.length_ i++) {_				this.argumentValues[i] = null__			}_		};since,4,2;public,method,argument,builder,uri,components,builder,base,url,class,controller,type,method,method,assert,not,null,controller,type,controller,type,is,required,assert,not,null,method,method,is,required,this,base,url,base,url,null,base,url,init,base,url,this,controller,type,controller,type,this,method,method,this,argument,values,new,object,method,get,parameter,count,for,int,i,0,i,this,argument,values,length,i,this,argument,values,i,null
MvcUriComponentsBuilder -> MethodArgumentBuilder -> public MethodArgumentBuilder(UriComponentsBuilder baseUrl, Class<?> controllerType, Method method);1468613531;@since 4.2;public MethodArgumentBuilder(UriComponentsBuilder baseUrl, Class<?> controllerType, Method method) {_			Assert.notNull(controllerType, "'controllerType' is required")__			Assert.notNull(method, "'method' is required")__			this.baseUrl = (baseUrl != null ? baseUrl : initBaseUrl())__			this.controllerType = controllerType__			this.method = method__			this.argumentValues = new Object[method.getParameterCount()]__			for (int i = 0_ i < this.argumentValues.length_ i++) {_				this.argumentValues[i] = null__			}_		};since,4,2;public,method,argument,builder,uri,components,builder,base,url,class,controller,type,method,method,assert,not,null,controller,type,controller,type,is,required,assert,not,null,method,method,is,required,this,base,url,base,url,null,base,url,init,base,url,this,controller,type,controller,type,this,method,method,this,argument,values,new,object,method,get,parameter,count,for,int,i,0,i,this,argument,values,length,i,this,argument,values,i,null
MvcUriComponentsBuilder -> MethodArgumentBuilder -> public MethodArgumentBuilder(UriComponentsBuilder baseUrl, Class<?> controllerType, Method method);1468948866;@since 4.2;public MethodArgumentBuilder(UriComponentsBuilder baseUrl, Class<?> controllerType, Method method) {_			Assert.notNull(controllerType, "'controllerType' is required")__			Assert.notNull(method, "'method' is required")__			this.baseUrl = (baseUrl != null ? baseUrl : initBaseUrl())__			this.controllerType = controllerType__			this.method = method__			this.argumentValues = new Object[method.getParameterCount()]__			for (int i = 0_ i < this.argumentValues.length_ i++) {_				this.argumentValues[i] = null__			}_		};since,4,2;public,method,argument,builder,uri,components,builder,base,url,class,controller,type,method,method,assert,not,null,controller,type,controller,type,is,required,assert,not,null,method,method,is,required,this,base,url,base,url,null,base,url,init,base,url,this,controller,type,controller,type,this,method,method,this,argument,values,new,object,method,get,parameter,count,for,int,i,0,i,this,argument,values,length,i,this,argument,values,i,null
MvcUriComponentsBuilder -> MethodArgumentBuilder -> public MethodArgumentBuilder(UriComponentsBuilder baseUrl, Class<?> controllerType, Method method);1485810955;@since 4.2;public MethodArgumentBuilder(UriComponentsBuilder baseUrl, Class<?> controllerType, Method method) {_			Assert.notNull(controllerType, "'controllerType' is required")__			Assert.notNull(method, "'method' is required")__			this.baseUrl = (baseUrl != null ? baseUrl : initBaseUrl())__			this.controllerType = controllerType__			this.method = method__			this.argumentValues = new Object[method.getParameterCount()]__			for (int i = 0_ i < this.argumentValues.length_ i++) {_				this.argumentValues[i] = null__			}_		};since,4,2;public,method,argument,builder,uri,components,builder,base,url,class,controller,type,method,method,assert,not,null,controller,type,controller,type,is,required,assert,not,null,method,method,is,required,this,base,url,base,url,null,base,url,init,base,url,this,controller,type,controller,type,this,method,method,this,argument,values,new,object,method,get,parameter,count,for,int,i,0,i,this,argument,values,length,i,this,argument,values,i,null
MvcUriComponentsBuilder -> MethodArgumentBuilder -> public MethodArgumentBuilder(UriComponentsBuilder baseUrl, Class<?> controllerType, Method method);1486634978;@since 4.2;public MethodArgumentBuilder(UriComponentsBuilder baseUrl, Class<?> controllerType, Method method) {_			Assert.notNull(controllerType, "'controllerType' is required")__			Assert.notNull(method, "'method' is required")__			this.baseUrl = (baseUrl != null ? baseUrl : initBaseUrl())__			this.controllerType = controllerType__			this.method = method__			this.argumentValues = new Object[method.getParameterCount()]__			for (int i = 0_ i < this.argumentValues.length_ i++) {_				this.argumentValues[i] = null__			}_		};since,4,2;public,method,argument,builder,uri,components,builder,base,url,class,controller,type,method,method,assert,not,null,controller,type,controller,type,is,required,assert,not,null,method,method,is,required,this,base,url,base,url,null,base,url,init,base,url,this,controller,type,controller,type,this,method,method,this,argument,values,new,object,method,get,parameter,count,for,int,i,0,i,this,argument,values,length,i,this,argument,values,i,null
MvcUriComponentsBuilder -> MethodArgumentBuilder -> public MethodArgumentBuilder(UriComponentsBuilder baseUrl, Class<?> controllerType, Method method);1486635693;@since 4.2;public MethodArgumentBuilder(UriComponentsBuilder baseUrl, Class<?> controllerType, Method method) {_			Assert.notNull(controllerType, "'controllerType' is required")__			Assert.notNull(method, "'method' is required")__			this.baseUrl = (baseUrl != null ? baseUrl : initBaseUrl())__			this.controllerType = controllerType__			this.method = method__			this.argumentValues = new Object[method.getParameterCount()]__			for (int i = 0_ i < this.argumentValues.length_ i++) {_				this.argumentValues[i] = null__			}_		};since,4,2;public,method,argument,builder,uri,components,builder,base,url,class,controller,type,method,method,assert,not,null,controller,type,controller,type,is,required,assert,not,null,method,method,is,required,this,base,url,base,url,null,base,url,init,base,url,this,controller,type,controller,type,this,method,method,this,argument,values,new,object,method,get,parameter,count,for,int,i,0,i,this,argument,values,length,i,this,argument,values,i,null
MvcUriComponentsBuilder -> MethodArgumentBuilder -> public MethodArgumentBuilder(UriComponentsBuilder baseUrl, Class<?> controllerType, Method method);1495868221;@since 4.2;public MethodArgumentBuilder(UriComponentsBuilder baseUrl, Class<?> controllerType, Method method) {_			Assert.notNull(controllerType, "'controllerType' is required")__			Assert.notNull(method, "'method' is required")__			this.baseUrl = (baseUrl != null ? baseUrl : initBaseUrl())__			this.controllerType = controllerType__			this.method = method__			this.argumentValues = new Object[method.getParameterCount()]__			for (int i = 0_ i < this.argumentValues.length_ i++) {_				this.argumentValues[i] = null__			}_		};since,4,2;public,method,argument,builder,uri,components,builder,base,url,class,controller,type,method,method,assert,not,null,controller,type,controller,type,is,required,assert,not,null,method,method,is,required,this,base,url,base,url,null,base,url,init,base,url,this,controller,type,controller,type,this,method,method,this,argument,values,new,object,method,get,parameter,count,for,int,i,0,i,this,argument,values,length,i,this,argument,values,i,null
MvcUriComponentsBuilder -> MethodArgumentBuilder -> public MethodArgumentBuilder(UriComponentsBuilder baseUrl, Class<?> controllerType, Method method);1496242568;@since 4.2;public MethodArgumentBuilder(UriComponentsBuilder baseUrl, Class<?> controllerType, Method method) {_			Assert.notNull(controllerType, "'controllerType' is required")__			Assert.notNull(method, "'method' is required")__			this.baseUrl = (baseUrl != null ? baseUrl : initBaseUrl())__			this.controllerType = controllerType__			this.method = method__			this.argumentValues = new Object[method.getParameterCount()]__			for (int i = 0_ i < this.argumentValues.length_ i++) {_				this.argumentValues[i] = null__			}_		};since,4,2;public,method,argument,builder,uri,components,builder,base,url,class,controller,type,method,method,assert,not,null,controller,type,controller,type,is,required,assert,not,null,method,method,is,required,this,base,url,base,url,null,base,url,init,base,url,this,controller,type,controller,type,this,method,method,this,argument,values,new,object,method,get,parameter,count,for,int,i,0,i,this,argument,values,length,i,this,argument,values,i,null
MvcUriComponentsBuilder -> MethodArgumentBuilder -> public MethodArgumentBuilder(UriComponentsBuilder baseUrl, Class<?> controllerType, Method method);1496259743;@since 4.2;public MethodArgumentBuilder(UriComponentsBuilder baseUrl, Class<?> controllerType, Method method) {_			Assert.notNull(controllerType, "'controllerType' is required")__			Assert.notNull(method, "'method' is required")__			this.baseUrl = (baseUrl != null ? baseUrl : initBaseUrl())__			this.controllerType = controllerType__			this.method = method__			this.argumentValues = new Object[method.getParameterCount()]__			for (int i = 0_ i < this.argumentValues.length_ i++) {_				this.argumentValues[i] = null__			}_		};since,4,2;public,method,argument,builder,uri,components,builder,base,url,class,controller,type,method,method,assert,not,null,controller,type,controller,type,is,required,assert,not,null,method,method,is,required,this,base,url,base,url,null,base,url,init,base,url,this,controller,type,controller,type,this,method,method,this,argument,values,new,object,method,get,parameter,count,for,int,i,0,i,this,argument,values,length,i,this,argument,values,i,null
MvcUriComponentsBuilder -> MethodArgumentBuilder -> public MethodArgumentBuilder(UriComponentsBuilder baseUrl, Class<?> controllerType, Method method);1496370972;@since 4.2;public MethodArgumentBuilder(UriComponentsBuilder baseUrl, Class<?> controllerType, Method method) {_			Assert.notNull(controllerType, "'controllerType' is required")__			Assert.notNull(method, "'method' is required")__			this.baseUrl = (baseUrl != null ? baseUrl : initBaseUrl())__			this.controllerType = controllerType__			this.method = method__			this.argumentValues = new Object[method.getParameterCount()]__			for (int i = 0_ i < this.argumentValues.length_ i++) {_				this.argumentValues[i] = null__			}_		};since,4,2;public,method,argument,builder,uri,components,builder,base,url,class,controller,type,method,method,assert,not,null,controller,type,controller,type,is,required,assert,not,null,method,method,is,required,this,base,url,base,url,null,base,url,init,base,url,this,controller,type,controller,type,this,method,method,this,argument,values,new,object,method,get,parameter,count,for,int,i,0,i,this,argument,values,length,i,this,argument,values,i,null
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethod(UriComponentsBuilder baseUrl, Method method, Object... args);1429801944;An alternative to {@link #fromMethod(java.lang.reflect.Method, Object...)}_that accepts a {@code UriComponentsBuilder} representing the base URL._This is useful when using MvcUriComponentsBuilder outside the context of_processing a request or to apply a custom baseUrl not matching the_current request._@param baseUrl the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param method the controller method_@param args argument values for the controller method_@return a UriComponentsBuilder instance, never {@code null};public static UriComponentsBuilder fromMethod(UriComponentsBuilder baseUrl, Method method, Object... args) {_		baseUrl = getBaseUrlToUse(baseUrl)__		String typePath = getTypeRequestMapping(method.getDeclaringClass())__		String methodPath = getMethodRequestMapping(method)__		String path = pathMatcher.combine(typePath, methodPath)__		baseUrl.path(path)__		UriComponents uriComponents = applyContributors(baseUrl, method, args)__		return UriComponentsBuilder.newInstance().uriComponents(uriComponents)__	};an,alternative,to,link,from,method,java,lang,reflect,method,object,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,base,url,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,method,the,controller,method,param,args,argument,values,for,the,controller,method,return,a,uri,components,builder,instance,never,code,null;public,static,uri,components,builder,from,method,uri,components,builder,base,url,method,method,object,args,base,url,get,base,url,to,use,base,url,string,type,path,get,type,request,mapping,method,get,declaring,class,string,method,path,get,method,request,mapping,method,string,path,path,matcher,combine,type,path,method,path,base,url,path,path,uri,components,uri,components,apply,contributors,base,url,method,args,return,uri,components,builder,new,instance,uri,components,uri,components
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethod(UriComponentsBuilder baseUrl, Method method, Object... args);1429802180;An alternative to {@link #fromMethod(java.lang.reflect.Method, Object...)}_that accepts a {@code UriComponentsBuilder} representing the base URL._This is useful when using MvcUriComponentsBuilder outside the context of_processing a request or to apply a custom baseUrl not matching the_current request._@param baseUrl the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param method the controller method_@param args argument values for the controller method_@return a UriComponentsBuilder instance, never {@code null};public static UriComponentsBuilder fromMethod(UriComponentsBuilder baseUrl, Method method, Object... args) {_		baseUrl = getBaseUrlToUse(baseUrl)__		String typePath = getTypeRequestMapping(method.getDeclaringClass())__		String methodPath = getMethodRequestMapping(method)__		String path = pathMatcher.combine(typePath, methodPath)__		baseUrl.path(path)__		UriComponents uriComponents = applyContributors(baseUrl, method, args)__		return UriComponentsBuilder.newInstance().uriComponents(uriComponents)__	};an,alternative,to,link,from,method,java,lang,reflect,method,object,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,base,url,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,method,the,controller,method,param,args,argument,values,for,the,controller,method,return,a,uri,components,builder,instance,never,code,null;public,static,uri,components,builder,from,method,uri,components,builder,base,url,method,method,object,args,base,url,get,base,url,to,use,base,url,string,type,path,get,type,request,mapping,method,get,declaring,class,string,method,path,get,method,request,mapping,method,string,path,path,matcher,combine,type,path,method,path,base,url,path,path,uri,components,uri,components,apply,contributors,base,url,method,args,return,uri,components,builder,new,instance,uri,components,uri,components
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethod(UriComponentsBuilder baseUrl, Method method, Object... args);1429886024;An alternative to {@link #fromMethod(java.lang.reflect.Method, Object...)}_that accepts a {@code UriComponentsBuilder} representing the base URL._This is useful when using MvcUriComponentsBuilder outside the context of_processing a request or to apply a custom baseUrl not matching the_current request._@param baseUrl the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param method the controller method_@param args argument values for the controller method_@return a UriComponentsBuilder instance, never {@code null};public static UriComponentsBuilder fromMethod(UriComponentsBuilder baseUrl, Method method, Object... args) {_		baseUrl = getBaseUrlToUse(baseUrl)__		String typePath = getTypeRequestMapping(method.getDeclaringClass())__		String methodPath = getMethodRequestMapping(method)__		String path = pathMatcher.combine(typePath, methodPath)__		baseUrl.path(path)__		UriComponents uriComponents = applyContributors(baseUrl, method, args)__		return UriComponentsBuilder.newInstance().uriComponents(uriComponents)__	};an,alternative,to,link,from,method,java,lang,reflect,method,object,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,base,url,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,method,the,controller,method,param,args,argument,values,for,the,controller,method,return,a,uri,components,builder,instance,never,code,null;public,static,uri,components,builder,from,method,uri,components,builder,base,url,method,method,object,args,base,url,get,base,url,to,use,base,url,string,type,path,get,type,request,mapping,method,get,declaring,class,string,method,path,get,method,request,mapping,method,string,path,path,matcher,combine,type,path,method,path,base,url,path,path,uri,components,uri,components,apply,contributors,base,url,method,args,return,uri,components,builder,new,instance,uri,components,uri,components
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethod(UriComponentsBuilder baseUrl, Method method, Object... args);1429888980;An alternative to {@link #fromMethod(java.lang.reflect.Method, Object...)}_that accepts a {@code UriComponentsBuilder} representing the base URL._This is useful when using MvcUriComponentsBuilder outside the context of_processing a request or to apply a custom baseUrl not matching the_current request._@param baseUrl the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param method the controller method_@param args argument values for the controller method_@return a UriComponentsBuilder instance, never {@code null};public static UriComponentsBuilder fromMethod(UriComponentsBuilder baseUrl, Method method, Object... args) {_		baseUrl = getBaseUrlToUse(baseUrl)__		String typePath = getTypeRequestMapping(method.getDeclaringClass())__		String methodPath = getMethodRequestMapping(method)__		String path = pathMatcher.combine(typePath, methodPath)__		baseUrl.path(path)__		UriComponents uriComponents = applyContributors(baseUrl, method, args)__		return UriComponentsBuilder.newInstance().uriComponents(uriComponents)__	};an,alternative,to,link,from,method,java,lang,reflect,method,object,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,base,url,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,method,the,controller,method,param,args,argument,values,for,the,controller,method,return,a,uri,components,builder,instance,never,code,null;public,static,uri,components,builder,from,method,uri,components,builder,base,url,method,method,object,args,base,url,get,base,url,to,use,base,url,string,type,path,get,type,request,mapping,method,get,declaring,class,string,method,path,get,method,request,mapping,method,string,path,path,matcher,combine,type,path,method,path,base,url,path,path,uri,components,uri,components,apply,contributors,base,url,method,args,return,uri,components,builder,new,instance,uri,components,uri,components
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethod(UriComponentsBuilder baseUrl, Method method, Object... args);1430739806;An alternative to {@link #fromMethod(java.lang.reflect.Method, Object...)}_that accepts a {@code UriComponentsBuilder} representing the base URL._This is useful when using MvcUriComponentsBuilder outside the context of_processing a request or to apply a custom baseUrl not matching the_current request._@param baseUrl the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param method the controller method_@param args argument values for the controller method_@return a UriComponentsBuilder instance, never {@code null};public static UriComponentsBuilder fromMethod(UriComponentsBuilder baseUrl, Method method, Object... args) {_		baseUrl = getBaseUrlToUse(baseUrl)__		String typePath = getTypeRequestMapping(method.getDeclaringClass())__		String methodPath = getMethodRequestMapping(method)__		String path = pathMatcher.combine(typePath, methodPath)__		baseUrl.path(path)__		UriComponents uriComponents = applyContributors(baseUrl, method, args)__		return UriComponentsBuilder.newInstance().uriComponents(uriComponents)__	};an,alternative,to,link,from,method,java,lang,reflect,method,object,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,base,url,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,method,the,controller,method,param,args,argument,values,for,the,controller,method,return,a,uri,components,builder,instance,never,code,null;public,static,uri,components,builder,from,method,uri,components,builder,base,url,method,method,object,args,base,url,get,base,url,to,use,base,url,string,type,path,get,type,request,mapping,method,get,declaring,class,string,method,path,get,method,request,mapping,method,string,path,path,matcher,combine,type,path,method,path,base,url,path,path,uri,components,uri,components,apply,contributors,base,url,method,args,return,uri,components,builder,new,instance,uri,components,uri,components
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethod(UriComponentsBuilder baseUrl, Method method, Object... args);1430747547;An alternative to {@link #fromMethod(java.lang.reflect.Method, Object...)}_that accepts a {@code UriComponentsBuilder} representing the base URL._This is useful when using MvcUriComponentsBuilder outside the context of_processing a request or to apply a custom baseUrl not matching the_current request._@param baseUrl the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param method the controller method_@param args argument values for the controller method_@return a UriComponentsBuilder instance, never {@code null};public static UriComponentsBuilder fromMethod(UriComponentsBuilder baseUrl, Method method, Object... args) {_		baseUrl = getBaseUrlToUse(baseUrl)__		String typePath = getTypeRequestMapping(method.getDeclaringClass())__		String methodPath = getMethodRequestMapping(method)__		String path = pathMatcher.combine(typePath, methodPath)__		baseUrl.path(path)__		UriComponents uriComponents = applyContributors(baseUrl, method, args)__		return UriComponentsBuilder.newInstance().uriComponents(uriComponents)__	};an,alternative,to,link,from,method,java,lang,reflect,method,object,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,base,url,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,method,the,controller,method,param,args,argument,values,for,the,controller,method,return,a,uri,components,builder,instance,never,code,null;public,static,uri,components,builder,from,method,uri,components,builder,base,url,method,method,object,args,base,url,get,base,url,to,use,base,url,string,type,path,get,type,request,mapping,method,get,declaring,class,string,method,path,get,method,request,mapping,method,string,path,path,matcher,combine,type,path,method,path,base,url,path,path,uri,components,uri,components,apply,contributors,base,url,method,args,return,uri,components,builder,new,instance,uri,components,uri,components
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethod(UriComponentsBuilder baseUrl, Method method, Object... args);1430749606;An alternative to {@link #fromMethod(java.lang.reflect.Method, Object...)}_that accepts a {@code UriComponentsBuilder} representing the base URL._This is useful when using MvcUriComponentsBuilder outside the context of_processing a request or to apply a custom baseUrl not matching the_current request._@param baseUrl the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param method the controller method_@param args argument values for the controller method_@return a UriComponentsBuilder instance, never {@code null};public static UriComponentsBuilder fromMethod(UriComponentsBuilder baseUrl, Method method, Object... args) {_		baseUrl = getBaseUrlToUse(baseUrl)__		String typePath = getTypeRequestMapping(method.getDeclaringClass())__		String methodPath = getMethodRequestMapping(method)__		String path = pathMatcher.combine(typePath, methodPath)__		baseUrl.path(path)__		UriComponents uriComponents = applyContributors(baseUrl, method, args)__		return UriComponentsBuilder.newInstance().uriComponents(uriComponents)__	};an,alternative,to,link,from,method,java,lang,reflect,method,object,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,base,url,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,method,the,controller,method,param,args,argument,values,for,the,controller,method,return,a,uri,components,builder,instance,never,code,null;public,static,uri,components,builder,from,method,uri,components,builder,base,url,method,method,object,args,base,url,get,base,url,to,use,base,url,string,type,path,get,type,request,mapping,method,get,declaring,class,string,method,path,get,method,request,mapping,method,string,path,path,matcher,combine,type,path,method,path,base,url,path,path,uri,components,uri,components,apply,contributors,base,url,method,args,return,uri,components,builder,new,instance,uri,components,uri,components
MvcUriComponentsBuilder -> public static MethodArgumentBuilder fromMappingName(String mappingName);1402438271;Create a URL from the name of a Spring MVC controller method's request mapping.__<p>The configured_{@link org.springframework.web.servlet.handler.HandlerMethodMappingNamingStrategy_HandlerMethodMappingNamingStrategy} determines the names of controller_method request mappings at startup. By default all mappings are assigned_a name based on the capital letters of the class name, followed by "#" as_separator, and then the method name. For example "PC#getPerson"_for a class named PersonController with method getPerson. In case the_naming convention does not produce unique results, an explicit name may_be assigned through the name attribute of the {@code @RequestMapping}_annotation.__<p>This is aimed primarily for use in view rendering technologies and EL_expressions. The Spring URL tag library registers this method as a function_called "mvcUrl".__<p>For example, given this controller:_<pre class="code">_&#064_RequestMapping("/people")_class PersonController {__&#064_RequestMapping("/{id}")_public HttpEntity<Void> getPerson(&#064_PathVariable String id) { ... }___</pre>__A JSP can prepare a URL to the controller method as follows:__<pre class="code">_<%@ taglib uri="http://www.springframework.org/tags" prefix="s" %>__&lt_a href="${s:mvcUrl('PC#getPerson').arg(0,"123").build()}"&gt_Get Person&lt_/a&gt__</pre>__<p>Note that it's not necessary to specify all arguments. Only the ones_required to prepare the URL, mainly {@code @RequestParam} and {@code @PathVariable}).__@param mappingName the mapping name_@return a builder to to prepare the URI String_@throws IllegalArgumentException if the mapping name is not found or_if there is no unique match_@since 4.1;public static MethodArgumentBuilder fromMappingName(String mappingName) {_		RequestMappingInfoHandlerMapping handlerMapping = getRequestMappingInfoHandlerMapping()__		List<HandlerMethod> handlerMethods = handlerMapping.getHandlerMethodsForMappingName(mappingName)__		if (handlerMethods == null) {_			throw new IllegalArgumentException("Mapping mappingName not found: " + mappingName)__		}_		if (handlerMethods.size() != 1) {_			throw new IllegalArgumentException(_					"No unique match for mapping mappingName " + mappingName + ": " + handlerMethods)__		}_		return new MethodArgumentBuilder(handlerMethods.get(0).getMethod())__	};create,a,url,from,the,name,of,a,spring,mvc,controller,method,s,request,mapping,p,the,configured,link,org,springframework,web,servlet,handler,handler,method,mapping,naming,strategy,handler,method,mapping,naming,strategy,determines,the,names,of,controller,method,request,mappings,at,startup,by,default,all,mappings,are,assigned,a,name,based,on,the,capital,letters,of,the,class,name,followed,by,as,separator,and,then,the,method,name,for,example,pc,get,person,for,a,class,named,person,controller,with,method,get,person,in,case,the,naming,convention,does,not,produce,unique,results,an,explicit,name,may,be,assigned,through,the,name,attribute,of,the,code,request,mapping,annotation,p,this,is,aimed,primarily,for,use,in,view,rendering,technologies,and,el,expressions,the,spring,url,tag,library,registers,this,method,as,a,function,called,mvc,url,p,for,example,given,this,controller,pre,class,code,064,request,mapping,people,class,person,controller,064,request,mapping,id,public,http,entity,void,get,person,064,path,variable,string,id,pre,a,jsp,can,prepare,a,url,to,the,controller,method,as,follows,pre,class,code,taglib,uri,http,www,springframework,org,tags,prefix,s,lt,a,href,s,mvc,url,pc,get,person,arg,0,123,build,gt,get,person,lt,a,gt,pre,p,note,that,it,s,not,necessary,to,specify,all,arguments,only,the,ones,required,to,prepare,the,url,mainly,code,request,param,and,code,path,variable,param,mapping,name,the,mapping,name,return,a,builder,to,to,prepare,the,uri,string,throws,illegal,argument,exception,if,the,mapping,name,is,not,found,or,if,there,is,no,unique,match,since,4,1;public,static,method,argument,builder,from,mapping,name,string,mapping,name,request,mapping,info,handler,mapping,handler,mapping,get,request,mapping,info,handler,mapping,list,handler,method,handler,methods,handler,mapping,get,handler,methods,for,mapping,name,mapping,name,if,handler,methods,null,throw,new,illegal,argument,exception,mapping,mapping,name,not,found,mapping,name,if,handler,methods,size,1,throw,new,illegal,argument,exception,no,unique,match,for,mapping,mapping,name,mapping,name,handler,methods,return,new,method,argument,builder,handler,methods,get,0,get,method
MvcUriComponentsBuilder -> public static MethodArgumentBuilder fromMappingName(String mappingName);1413848647;Create a URL from the name of a Spring MVC controller method's request mapping.__<p>The configured_{@link org.springframework.web.servlet.handler.HandlerMethodMappingNamingStrategy_HandlerMethodMappingNamingStrategy} determines the names of controller_method request mappings at startup. By default all mappings are assigned_a name based on the capital letters of the class name, followed by "#" as_separator, and then the method name. For example "PC#getPerson"_for a class named PersonController with method getPerson. In case the_naming convention does not produce unique results, an explicit name may_be assigned through the name attribute of the {@code @RequestMapping}_annotation.__<p>This is aimed primarily for use in view rendering technologies and EL_expressions. The Spring URL tag library registers this method as a function_called "mvcUrl".__<p>For example, given this controller:_<pre class="code">_&#064_RequestMapping("/people")_class PersonController {__&#064_RequestMapping("/{id}")_public HttpEntity<Void> getPerson(&#064_PathVariable String id) { ... }___</pre>__A JSP can prepare a URL to the controller method as follows:__<pre class="code">_<%@ taglib uri="http://www.springframework.org/tags" prefix="s" %>__&lt_a href="${s:mvcUrl('PC#getPerson').arg(0,"123").build()}"&gt_Get Person&lt_/a&gt__</pre>__<p>Note that it's not necessary to specify all arguments. Only the ones_required to prepare the URL, mainly {@code @RequestParam} and {@code @PathVariable}).__@param mappingName the mapping name_@return a builder to to prepare the URI String_@throws IllegalArgumentException if the mapping name is not found or_if there is no unique match_@since 4.1;public static MethodArgumentBuilder fromMappingName(String mappingName) {_		RequestMappingInfoHandlerMapping handlerMapping = getRequestMappingInfoHandlerMapping()__		List<HandlerMethod> handlerMethods = handlerMapping.getHandlerMethodsForMappingName(mappingName)__		if (handlerMethods == null) {_			throw new IllegalArgumentException("Mapping mappingName not found: " + mappingName)__		}_		if (handlerMethods.size() != 1) {_			throw new IllegalArgumentException(_					"No unique match for mapping mappingName " + mappingName + ": " + handlerMethods)__		}_		return new MethodArgumentBuilder(handlerMethods.get(0).getMethod())__	};create,a,url,from,the,name,of,a,spring,mvc,controller,method,s,request,mapping,p,the,configured,link,org,springframework,web,servlet,handler,handler,method,mapping,naming,strategy,handler,method,mapping,naming,strategy,determines,the,names,of,controller,method,request,mappings,at,startup,by,default,all,mappings,are,assigned,a,name,based,on,the,capital,letters,of,the,class,name,followed,by,as,separator,and,then,the,method,name,for,example,pc,get,person,for,a,class,named,person,controller,with,method,get,person,in,case,the,naming,convention,does,not,produce,unique,results,an,explicit,name,may,be,assigned,through,the,name,attribute,of,the,code,request,mapping,annotation,p,this,is,aimed,primarily,for,use,in,view,rendering,technologies,and,el,expressions,the,spring,url,tag,library,registers,this,method,as,a,function,called,mvc,url,p,for,example,given,this,controller,pre,class,code,064,request,mapping,people,class,person,controller,064,request,mapping,id,public,http,entity,void,get,person,064,path,variable,string,id,pre,a,jsp,can,prepare,a,url,to,the,controller,method,as,follows,pre,class,code,taglib,uri,http,www,springframework,org,tags,prefix,s,lt,a,href,s,mvc,url,pc,get,person,arg,0,123,build,gt,get,person,lt,a,gt,pre,p,note,that,it,s,not,necessary,to,specify,all,arguments,only,the,ones,required,to,prepare,the,url,mainly,code,request,param,and,code,path,variable,param,mapping,name,the,mapping,name,return,a,builder,to,to,prepare,the,uri,string,throws,illegal,argument,exception,if,the,mapping,name,is,not,found,or,if,there,is,no,unique,match,since,4,1;public,static,method,argument,builder,from,mapping,name,string,mapping,name,request,mapping,info,handler,mapping,handler,mapping,get,request,mapping,info,handler,mapping,list,handler,method,handler,methods,handler,mapping,get,handler,methods,for,mapping,name,mapping,name,if,handler,methods,null,throw,new,illegal,argument,exception,mapping,mapping,name,not,found,mapping,name,if,handler,methods,size,1,throw,new,illegal,argument,exception,no,unique,match,for,mapping,mapping,name,mapping,name,handler,methods,return,new,method,argument,builder,handler,methods,get,0,get,method
MvcUriComponentsBuilder -> public static MethodArgumentBuilder fromMappingName(String mappingName);1417799775;Create a URL from the name of a Spring MVC controller method's request mapping.__<p>The configured_{@link org.springframework.web.servlet.handler.HandlerMethodMappingNamingStrategy_HandlerMethodMappingNamingStrategy} determines the names of controller_method request mappings at startup. By default all mappings are assigned_a name based on the capital letters of the class name, followed by "#" as_separator, and then the method name. For example "PC#getPerson"_for a class named PersonController with method getPerson. In case the_naming convention does not produce unique results, an explicit name may_be assigned through the name attribute of the {@code @RequestMapping}_annotation.__<p>This is aimed primarily for use in view rendering technologies and EL_expressions. The Spring URL tag library registers this method as a function_called "mvcUrl".__<p>For example, given this controller:_<pre class="code">_&#064_RequestMapping("/people")_class PersonController {__&#064_RequestMapping("/{id}")_public HttpEntity<Void> getPerson(&#064_PathVariable String id) { ... }___</pre>__A JSP can prepare a URL to the controller method as follows:__<pre class="code">_<%@ taglib uri="http://www.springframework.org/tags" prefix="s" %>__&lt_a href="${s:mvcUrl('PC#getPerson').arg(0,"123").build()}"&gt_Get Person&lt_/a&gt__</pre>__<p>Note that it's not necessary to specify all arguments. Only the ones_required to prepare the URL, mainly {@code @RequestParam} and {@code @PathVariable}).__@param mappingName the mapping name_@return a builder to to prepare the URI String_@throws IllegalArgumentException if the mapping name is not found or_if there is no unique match_@since 4.1;public static MethodArgumentBuilder fromMappingName(String mappingName) {_		RequestMappingInfoHandlerMapping handlerMapping = getRequestMappingInfoHandlerMapping()__		List<HandlerMethod> handlerMethods = handlerMapping.getHandlerMethodsForMappingName(mappingName)__		if (handlerMethods == null) {_			throw new IllegalArgumentException("Mapping mappingName not found: " + mappingName)__		}_		if (handlerMethods.size() != 1) {_			throw new IllegalArgumentException(_					"No unique match for mapping mappingName " + mappingName + ": " + handlerMethods)__		}_		return new MethodArgumentBuilder(handlerMethods.get(0).getMethod())__	};create,a,url,from,the,name,of,a,spring,mvc,controller,method,s,request,mapping,p,the,configured,link,org,springframework,web,servlet,handler,handler,method,mapping,naming,strategy,handler,method,mapping,naming,strategy,determines,the,names,of,controller,method,request,mappings,at,startup,by,default,all,mappings,are,assigned,a,name,based,on,the,capital,letters,of,the,class,name,followed,by,as,separator,and,then,the,method,name,for,example,pc,get,person,for,a,class,named,person,controller,with,method,get,person,in,case,the,naming,convention,does,not,produce,unique,results,an,explicit,name,may,be,assigned,through,the,name,attribute,of,the,code,request,mapping,annotation,p,this,is,aimed,primarily,for,use,in,view,rendering,technologies,and,el,expressions,the,spring,url,tag,library,registers,this,method,as,a,function,called,mvc,url,p,for,example,given,this,controller,pre,class,code,064,request,mapping,people,class,person,controller,064,request,mapping,id,public,http,entity,void,get,person,064,path,variable,string,id,pre,a,jsp,can,prepare,a,url,to,the,controller,method,as,follows,pre,class,code,taglib,uri,http,www,springframework,org,tags,prefix,s,lt,a,href,s,mvc,url,pc,get,person,arg,0,123,build,gt,get,person,lt,a,gt,pre,p,note,that,it,s,not,necessary,to,specify,all,arguments,only,the,ones,required,to,prepare,the,url,mainly,code,request,param,and,code,path,variable,param,mapping,name,the,mapping,name,return,a,builder,to,to,prepare,the,uri,string,throws,illegal,argument,exception,if,the,mapping,name,is,not,found,or,if,there,is,no,unique,match,since,4,1;public,static,method,argument,builder,from,mapping,name,string,mapping,name,request,mapping,info,handler,mapping,handler,mapping,get,request,mapping,info,handler,mapping,list,handler,method,handler,methods,handler,mapping,get,handler,methods,for,mapping,name,mapping,name,if,handler,methods,null,throw,new,illegal,argument,exception,mapping,mapping,name,not,found,mapping,name,if,handler,methods,size,1,throw,new,illegal,argument,exception,no,unique,match,for,mapping,mapping,name,mapping,name,handler,methods,return,new,method,argument,builder,handler,methods,get,0,get,method
MvcUriComponentsBuilder -> public static MethodArgumentBuilder fromMappingName(String mappingName);1424972092;Create a URL from the name of a Spring MVC controller method's request mapping.__<p>The configured_{@link org.springframework.web.servlet.handler.HandlerMethodMappingNamingStrategy_HandlerMethodMappingNamingStrategy} determines the names of controller_method request mappings at startup. By default all mappings are assigned_a name based on the capital letters of the class name, followed by "#" as_separator, and then the method name. For example "PC#getPerson"_for a class named PersonController with method getPerson. In case the_naming convention does not produce unique results, an explicit name may_be assigned through the name attribute of the {@code @RequestMapping}_annotation.__<p>This is aimed primarily for use in view rendering technologies and EL_expressions. The Spring URL tag library registers this method as a function_called "mvcUrl".__<p>For example, given this controller:_<pre class="code">_&#064_RequestMapping("/people")_class PersonController {__&#064_RequestMapping("/{id}")_public HttpEntity<Void> getPerson(&#064_PathVariable String id) { ... }___</pre>__A JSP can prepare a URL to the controller method as follows:__<pre class="code">_<%@ taglib uri="http://www.springframework.org/tags" prefix="s" %>__&lt_a href="${s:mvcUrl('PC#getPerson').arg(0,"123").build()}"&gt_Get Person&lt_/a&gt__</pre>__<p>Note that it's not necessary to specify all arguments. Only the ones_required to prepare the URL, mainly {@code @RequestParam} and {@code @PathVariable}).__@param mappingName the mapping name_@return a builder to to prepare the URI String_@throws IllegalArgumentException if the mapping name is not found or_if there is no unique match_@since 4.1;public static MethodArgumentBuilder fromMappingName(String mappingName) {_		RequestMappingInfoHandlerMapping handlerMapping = getRequestMappingInfoHandlerMapping()__		List<HandlerMethod> handlerMethods = handlerMapping.getHandlerMethodsForMappingName(mappingName)__		if (handlerMethods == null) {_			throw new IllegalArgumentException("Mapping mappingName not found: " + mappingName)__		}_		if (handlerMethods.size() != 1) {_			throw new IllegalArgumentException(_					"No unique match for mapping mappingName " + mappingName + ": " + handlerMethods)__		}_		return new MethodArgumentBuilder(handlerMethods.get(0).getMethod())__	};create,a,url,from,the,name,of,a,spring,mvc,controller,method,s,request,mapping,p,the,configured,link,org,springframework,web,servlet,handler,handler,method,mapping,naming,strategy,handler,method,mapping,naming,strategy,determines,the,names,of,controller,method,request,mappings,at,startup,by,default,all,mappings,are,assigned,a,name,based,on,the,capital,letters,of,the,class,name,followed,by,as,separator,and,then,the,method,name,for,example,pc,get,person,for,a,class,named,person,controller,with,method,get,person,in,case,the,naming,convention,does,not,produce,unique,results,an,explicit,name,may,be,assigned,through,the,name,attribute,of,the,code,request,mapping,annotation,p,this,is,aimed,primarily,for,use,in,view,rendering,technologies,and,el,expressions,the,spring,url,tag,library,registers,this,method,as,a,function,called,mvc,url,p,for,example,given,this,controller,pre,class,code,064,request,mapping,people,class,person,controller,064,request,mapping,id,public,http,entity,void,get,person,064,path,variable,string,id,pre,a,jsp,can,prepare,a,url,to,the,controller,method,as,follows,pre,class,code,taglib,uri,http,www,springframework,org,tags,prefix,s,lt,a,href,s,mvc,url,pc,get,person,arg,0,123,build,gt,get,person,lt,a,gt,pre,p,note,that,it,s,not,necessary,to,specify,all,arguments,only,the,ones,required,to,prepare,the,url,mainly,code,request,param,and,code,path,variable,param,mapping,name,the,mapping,name,return,a,builder,to,to,prepare,the,uri,string,throws,illegal,argument,exception,if,the,mapping,name,is,not,found,or,if,there,is,no,unique,match,since,4,1;public,static,method,argument,builder,from,mapping,name,string,mapping,name,request,mapping,info,handler,mapping,handler,mapping,get,request,mapping,info,handler,mapping,list,handler,method,handler,methods,handler,mapping,get,handler,methods,for,mapping,name,mapping,name,if,handler,methods,null,throw,new,illegal,argument,exception,mapping,mapping,name,not,found,mapping,name,if,handler,methods,size,1,throw,new,illegal,argument,exception,no,unique,match,for,mapping,mapping,name,mapping,name,handler,methods,return,new,method,argument,builder,handler,methods,get,0,get,method
MvcUriComponentsBuilder -> public static MethodArgumentBuilder fromMappingName(String mappingName);1426553101;Create a URL from the name of a Spring MVC controller method's request mapping.__<p>The configured_{@link org.springframework.web.servlet.handler.HandlerMethodMappingNamingStrategy_HandlerMethodMappingNamingStrategy} determines the names of controller_method request mappings at startup. By default all mappings are assigned_a name based on the capital letters of the class name, followed by "#" as_separator, and then the method name. For example "PC#getPerson"_for a class named PersonController with method getPerson. In case the_naming convention does not produce unique results, an explicit name may_be assigned through the name attribute of the {@code @RequestMapping}_annotation.__<p>This is aimed primarily for use in view rendering technologies and EL_expressions. The Spring URL tag library registers this method as a function_called "mvcUrl".__<p>For example, given this controller:_<pre class="code">_&#064_RequestMapping("/people")_class PersonController {__&#064_RequestMapping("/{id}")_public HttpEntity<Void> getPerson(&#064_PathVariable String id) { ... }___</pre>__A JSP can prepare a URL to the controller method as follows:__<pre class="code">_<%@ taglib uri="http://www.springframework.org/tags" prefix="s" %>__&lt_a href="${s:mvcUrl('PC#getPerson').arg(0,"123").build()}"&gt_Get Person&lt_/a&gt__</pre>__<p>Note that it's not necessary to specify all arguments. Only the ones_required to prepare the URL, mainly {@code @RequestParam} and {@code @PathVariable}).__@param mappingName the mapping name_@return a builder to to prepare the URI String_@throws IllegalArgumentException if the mapping name is not found or_if there is no unique match_@since 4.1;public static MethodArgumentBuilder fromMappingName(String mappingName) {_		RequestMappingInfoHandlerMapping handlerMapping = getRequestMappingInfoHandlerMapping()__		List<HandlerMethod> handlerMethods = handlerMapping.getHandlerMethodsForMappingName(mappingName)__		if (handlerMethods == null) {_			throw new IllegalArgumentException("Mapping mappingName not found: " + mappingName)__		}_		if (handlerMethods.size() != 1) {_			throw new IllegalArgumentException(_					"No unique match for mapping mappingName " + mappingName + ": " + handlerMethods)__		}_		return new MethodArgumentBuilder(handlerMethods.get(0).getMethod())__	};create,a,url,from,the,name,of,a,spring,mvc,controller,method,s,request,mapping,p,the,configured,link,org,springframework,web,servlet,handler,handler,method,mapping,naming,strategy,handler,method,mapping,naming,strategy,determines,the,names,of,controller,method,request,mappings,at,startup,by,default,all,mappings,are,assigned,a,name,based,on,the,capital,letters,of,the,class,name,followed,by,as,separator,and,then,the,method,name,for,example,pc,get,person,for,a,class,named,person,controller,with,method,get,person,in,case,the,naming,convention,does,not,produce,unique,results,an,explicit,name,may,be,assigned,through,the,name,attribute,of,the,code,request,mapping,annotation,p,this,is,aimed,primarily,for,use,in,view,rendering,technologies,and,el,expressions,the,spring,url,tag,library,registers,this,method,as,a,function,called,mvc,url,p,for,example,given,this,controller,pre,class,code,064,request,mapping,people,class,person,controller,064,request,mapping,id,public,http,entity,void,get,person,064,path,variable,string,id,pre,a,jsp,can,prepare,a,url,to,the,controller,method,as,follows,pre,class,code,taglib,uri,http,www,springframework,org,tags,prefix,s,lt,a,href,s,mvc,url,pc,get,person,arg,0,123,build,gt,get,person,lt,a,gt,pre,p,note,that,it,s,not,necessary,to,specify,all,arguments,only,the,ones,required,to,prepare,the,url,mainly,code,request,param,and,code,path,variable,param,mapping,name,the,mapping,name,return,a,builder,to,to,prepare,the,uri,string,throws,illegal,argument,exception,if,the,mapping,name,is,not,found,or,if,there,is,no,unique,match,since,4,1;public,static,method,argument,builder,from,mapping,name,string,mapping,name,request,mapping,info,handler,mapping,handler,mapping,get,request,mapping,info,handler,mapping,list,handler,method,handler,methods,handler,mapping,get,handler,methods,for,mapping,name,mapping,name,if,handler,methods,null,throw,new,illegal,argument,exception,mapping,mapping,name,not,found,mapping,name,if,handler,methods,size,1,throw,new,illegal,argument,exception,no,unique,match,for,mapping,mapping,name,mapping,name,handler,methods,return,new,method,argument,builder,handler,methods,get,0,get,method
MvcUriComponentsBuilder -> public static MethodArgumentBuilder fromMappingName(String mappingName);1429801417;Create a URL from the name of a Spring MVC controller method's request mapping.__<p>The configured_{@link org.springframework.web.servlet.handler.HandlerMethodMappingNamingStrategy_HandlerMethodMappingNamingStrategy} determines the names of controller_method request mappings at startup. By default all mappings are assigned_a name based on the capital letters of the class name, followed by "#" as_separator, and then the method name. For example "PC#getPerson"_for a class named PersonController with method getPerson. In case the_naming convention does not produce unique results, an explicit name may_be assigned through the name attribute of the {@code @RequestMapping}_annotation.__<p>This is aimed primarily for use in view rendering technologies and EL_expressions. The Spring URL tag library registers this method as a function_called "mvcUrl".__<p>For example, given this controller:_<pre class="code">_&#064_RequestMapping("/people")_class PersonController {__&#064_RequestMapping("/{id}")_public HttpEntity<Void> getPerson(&#064_PathVariable String id) { ... }___</pre>__A JSP can prepare a URL to the controller method as follows:__<pre class="code">_<%@ taglib uri="http://www.springframework.org/tags" prefix="s" %>__&lt_a href="${s:mvcUrl('PC#getPerson').arg(0,"123").build()}"&gt_Get Person&lt_/a&gt__</pre>__<p>Note that it's not necessary to specify all arguments. Only the ones_required to prepare the URL, mainly {@code @RequestParam} and {@code @PathVariable}).__@param mappingName the mapping name_@return a builder to to prepare the URI String_@throws IllegalArgumentException if the mapping name is not found or_if there is no unique match_@since 4.1;public static MethodArgumentBuilder fromMappingName(String mappingName) {_		return fromMappingName(null, mappingName)__	};create,a,url,from,the,name,of,a,spring,mvc,controller,method,s,request,mapping,p,the,configured,link,org,springframework,web,servlet,handler,handler,method,mapping,naming,strategy,handler,method,mapping,naming,strategy,determines,the,names,of,controller,method,request,mappings,at,startup,by,default,all,mappings,are,assigned,a,name,based,on,the,capital,letters,of,the,class,name,followed,by,as,separator,and,then,the,method,name,for,example,pc,get,person,for,a,class,named,person,controller,with,method,get,person,in,case,the,naming,convention,does,not,produce,unique,results,an,explicit,name,may,be,assigned,through,the,name,attribute,of,the,code,request,mapping,annotation,p,this,is,aimed,primarily,for,use,in,view,rendering,technologies,and,el,expressions,the,spring,url,tag,library,registers,this,method,as,a,function,called,mvc,url,p,for,example,given,this,controller,pre,class,code,064,request,mapping,people,class,person,controller,064,request,mapping,id,public,http,entity,void,get,person,064,path,variable,string,id,pre,a,jsp,can,prepare,a,url,to,the,controller,method,as,follows,pre,class,code,taglib,uri,http,www,springframework,org,tags,prefix,s,lt,a,href,s,mvc,url,pc,get,person,arg,0,123,build,gt,get,person,lt,a,gt,pre,p,note,that,it,s,not,necessary,to,specify,all,arguments,only,the,ones,required,to,prepare,the,url,mainly,code,request,param,and,code,path,variable,param,mapping,name,the,mapping,name,return,a,builder,to,to,prepare,the,uri,string,throws,illegal,argument,exception,if,the,mapping,name,is,not,found,or,if,there,is,no,unique,match,since,4,1;public,static,method,argument,builder,from,mapping,name,string,mapping,name,return,from,mapping,name,null,mapping,name
MvcUriComponentsBuilder -> public static MethodArgumentBuilder fromMappingName(String mappingName);1429801944;Create a URL from the name of a Spring MVC controller method's request mapping.__<p>The configured_{@link org.springframework.web.servlet.handler.HandlerMethodMappingNamingStrategy_HandlerMethodMappingNamingStrategy} determines the names of controller_method request mappings at startup. By default all mappings are assigned_a name based on the capital letters of the class name, followed by "#" as_separator, and then the method name. For example "PC#getPerson"_for a class named PersonController with method getPerson. In case the_naming convention does not produce unique results, an explicit name may_be assigned through the name attribute of the {@code @RequestMapping}_annotation.__<p>This is aimed primarily for use in view rendering technologies and EL_expressions. The Spring URL tag library registers this method as a function_called "mvcUrl".__<p>For example, given this controller:_<pre class="code">_&#064_RequestMapping("/people")_class PersonController {__&#064_RequestMapping("/{id}")_public HttpEntity<Void> getPerson(&#064_PathVariable String id) { ... }___</pre>__A JSP can prepare a URL to the controller method as follows:__<pre class="code">_<%@ taglib uri="http://www.springframework.org/tags" prefix="s" %>__&lt_a href="${s:mvcUrl('PC#getPerson').arg(0,"123").build()}"&gt_Get Person&lt_/a&gt__</pre>__<p>Note that it's not necessary to specify all arguments. Only the ones_required to prepare the URL, mainly {@code @RequestParam} and {@code @PathVariable}).__@param mappingName the mapping name_@return a builder to to prepare the URI String_@throws IllegalArgumentException if the mapping name is not found or_if there is no unique match_@since 4.1;public static MethodArgumentBuilder fromMappingName(String mappingName) {_		return fromMappingName(null, mappingName)__	};create,a,url,from,the,name,of,a,spring,mvc,controller,method,s,request,mapping,p,the,configured,link,org,springframework,web,servlet,handler,handler,method,mapping,naming,strategy,handler,method,mapping,naming,strategy,determines,the,names,of,controller,method,request,mappings,at,startup,by,default,all,mappings,are,assigned,a,name,based,on,the,capital,letters,of,the,class,name,followed,by,as,separator,and,then,the,method,name,for,example,pc,get,person,for,a,class,named,person,controller,with,method,get,person,in,case,the,naming,convention,does,not,produce,unique,results,an,explicit,name,may,be,assigned,through,the,name,attribute,of,the,code,request,mapping,annotation,p,this,is,aimed,primarily,for,use,in,view,rendering,technologies,and,el,expressions,the,spring,url,tag,library,registers,this,method,as,a,function,called,mvc,url,p,for,example,given,this,controller,pre,class,code,064,request,mapping,people,class,person,controller,064,request,mapping,id,public,http,entity,void,get,person,064,path,variable,string,id,pre,a,jsp,can,prepare,a,url,to,the,controller,method,as,follows,pre,class,code,taglib,uri,http,www,springframework,org,tags,prefix,s,lt,a,href,s,mvc,url,pc,get,person,arg,0,123,build,gt,get,person,lt,a,gt,pre,p,note,that,it,s,not,necessary,to,specify,all,arguments,only,the,ones,required,to,prepare,the,url,mainly,code,request,param,and,code,path,variable,param,mapping,name,the,mapping,name,return,a,builder,to,to,prepare,the,uri,string,throws,illegal,argument,exception,if,the,mapping,name,is,not,found,or,if,there,is,no,unique,match,since,4,1;public,static,method,argument,builder,from,mapping,name,string,mapping,name,return,from,mapping,name,null,mapping,name
MvcUriComponentsBuilder -> public static MethodArgumentBuilder fromMappingName(String mappingName);1429802180;Create a URL from the name of a Spring MVC controller method's request mapping.__<p>The configured_{@link org.springframework.web.servlet.handler.HandlerMethodMappingNamingStrategy_HandlerMethodMappingNamingStrategy} determines the names of controller_method request mappings at startup. By default all mappings are assigned_a name based on the capital letters of the class name, followed by "#" as_separator, and then the method name. For example "PC#getPerson"_for a class named PersonController with method getPerson. In case the_naming convention does not produce unique results, an explicit name may_be assigned through the name attribute of the {@code @RequestMapping}_annotation.__<p>This is aimed primarily for use in view rendering technologies and EL_expressions. The Spring URL tag library registers this method as a function_called "mvcUrl".__<p>For example, given this controller:_<pre class="code">_&#064_RequestMapping("/people")_class PersonController {__&#064_RequestMapping("/{id}")_public HttpEntity<Void> getPerson(&#064_PathVariable String id) { ... }___</pre>__A JSP can prepare a URL to the controller method as follows:__<pre class="code">_<%@ taglib uri="http://www.springframework.org/tags" prefix="s" %>__&lt_a href="${s:mvcUrl('PC#getPerson').arg(0,"123").build()}"&gt_Get Person&lt_/a&gt__</pre>__<p>Note that it's not necessary to specify all arguments. Only the ones_required to prepare the URL, mainly {@code @RequestParam} and {@code @PathVariable}).__@param mappingName the mapping name_@return a builder to to prepare the URI String_@throws IllegalArgumentException if the mapping name is not found or_if there is no unique match_@since 4.1;public static MethodArgumentBuilder fromMappingName(String mappingName) {_		return fromMappingName(null, mappingName)__	};create,a,url,from,the,name,of,a,spring,mvc,controller,method,s,request,mapping,p,the,configured,link,org,springframework,web,servlet,handler,handler,method,mapping,naming,strategy,handler,method,mapping,naming,strategy,determines,the,names,of,controller,method,request,mappings,at,startup,by,default,all,mappings,are,assigned,a,name,based,on,the,capital,letters,of,the,class,name,followed,by,as,separator,and,then,the,method,name,for,example,pc,get,person,for,a,class,named,person,controller,with,method,get,person,in,case,the,naming,convention,does,not,produce,unique,results,an,explicit,name,may,be,assigned,through,the,name,attribute,of,the,code,request,mapping,annotation,p,this,is,aimed,primarily,for,use,in,view,rendering,technologies,and,el,expressions,the,spring,url,tag,library,registers,this,method,as,a,function,called,mvc,url,p,for,example,given,this,controller,pre,class,code,064,request,mapping,people,class,person,controller,064,request,mapping,id,public,http,entity,void,get,person,064,path,variable,string,id,pre,a,jsp,can,prepare,a,url,to,the,controller,method,as,follows,pre,class,code,taglib,uri,http,www,springframework,org,tags,prefix,s,lt,a,href,s,mvc,url,pc,get,person,arg,0,123,build,gt,get,person,lt,a,gt,pre,p,note,that,it,s,not,necessary,to,specify,all,arguments,only,the,ones,required,to,prepare,the,url,mainly,code,request,param,and,code,path,variable,param,mapping,name,the,mapping,name,return,a,builder,to,to,prepare,the,uri,string,throws,illegal,argument,exception,if,the,mapping,name,is,not,found,or,if,there,is,no,unique,match,since,4,1;public,static,method,argument,builder,from,mapping,name,string,mapping,name,return,from,mapping,name,null,mapping,name
MvcUriComponentsBuilder -> public static MethodArgumentBuilder fromMappingName(String mappingName);1429886024;Create a URL from the name of a Spring MVC controller method's request mapping.__<p>The configured_{@link org.springframework.web.servlet.handler.HandlerMethodMappingNamingStrategy_HandlerMethodMappingNamingStrategy} determines the names of controller_method request mappings at startup. By default all mappings are assigned_a name based on the capital letters of the class name, followed by "#" as_separator, and then the method name. For example "PC#getPerson"_for a class named PersonController with method getPerson. In case the_naming convention does not produce unique results, an explicit name may_be assigned through the name attribute of the {@code @RequestMapping}_annotation.__<p>This is aimed primarily for use in view rendering technologies and EL_expressions. The Spring URL tag library registers this method as a function_called "mvcUrl".__<p>For example, given this controller:_<pre class="code">_&#064_RequestMapping("/people")_class PersonController {__&#064_RequestMapping("/{id}")_public HttpEntity<Void> getPerson(&#064_PathVariable String id) { ... }___</pre>__A JSP can prepare a URL to the controller method as follows:__<pre class="code">_<%@ taglib uri="http://www.springframework.org/tags" prefix="s" %>__&lt_a href="${s:mvcUrl('PC#getPerson').arg(0,"123").build()}"&gt_Get Person&lt_/a&gt__</pre>__<p>Note that it's not necessary to specify all arguments. Only the ones_required to prepare the URL, mainly {@code @RequestParam} and {@code @PathVariable}).__@param mappingName the mapping name_@return a builder to to prepare the URI String_@throws IllegalArgumentException if the mapping name is not found or_if there is no unique match_@since 4.1;public static MethodArgumentBuilder fromMappingName(String mappingName) {_		return fromMappingName(null, mappingName)__	};create,a,url,from,the,name,of,a,spring,mvc,controller,method,s,request,mapping,p,the,configured,link,org,springframework,web,servlet,handler,handler,method,mapping,naming,strategy,handler,method,mapping,naming,strategy,determines,the,names,of,controller,method,request,mappings,at,startup,by,default,all,mappings,are,assigned,a,name,based,on,the,capital,letters,of,the,class,name,followed,by,as,separator,and,then,the,method,name,for,example,pc,get,person,for,a,class,named,person,controller,with,method,get,person,in,case,the,naming,convention,does,not,produce,unique,results,an,explicit,name,may,be,assigned,through,the,name,attribute,of,the,code,request,mapping,annotation,p,this,is,aimed,primarily,for,use,in,view,rendering,technologies,and,el,expressions,the,spring,url,tag,library,registers,this,method,as,a,function,called,mvc,url,p,for,example,given,this,controller,pre,class,code,064,request,mapping,people,class,person,controller,064,request,mapping,id,public,http,entity,void,get,person,064,path,variable,string,id,pre,a,jsp,can,prepare,a,url,to,the,controller,method,as,follows,pre,class,code,taglib,uri,http,www,springframework,org,tags,prefix,s,lt,a,href,s,mvc,url,pc,get,person,arg,0,123,build,gt,get,person,lt,a,gt,pre,p,note,that,it,s,not,necessary,to,specify,all,arguments,only,the,ones,required,to,prepare,the,url,mainly,code,request,param,and,code,path,variable,param,mapping,name,the,mapping,name,return,a,builder,to,to,prepare,the,uri,string,throws,illegal,argument,exception,if,the,mapping,name,is,not,found,or,if,there,is,no,unique,match,since,4,1;public,static,method,argument,builder,from,mapping,name,string,mapping,name,return,from,mapping,name,null,mapping,name
MvcUriComponentsBuilder -> public static MethodArgumentBuilder fromMappingName(String mappingName);1429888980;Create a URL from the name of a Spring MVC controller method's request mapping.__<p>The configured_{@link org.springframework.web.servlet.handler.HandlerMethodMappingNamingStrategy_HandlerMethodMappingNamingStrategy} determines the names of controller_method request mappings at startup. By default all mappings are assigned_a name based on the capital letters of the class name, followed by "#" as_separator, and then the method name. For example "PC#getPerson"_for a class named PersonController with method getPerson. In case the_naming convention does not produce unique results, an explicit name may_be assigned through the name attribute of the {@code @RequestMapping}_annotation.__<p>This is aimed primarily for use in view rendering technologies and EL_expressions. The Spring URL tag library registers this method as a function_called "mvcUrl".__<p>For example, given this controller:_<pre class="code">_&#064_RequestMapping("/people")_class PersonController {__&#064_RequestMapping("/{id}")_public HttpEntity<Void> getPerson(&#064_PathVariable String id) { ... }___</pre>__A JSP can prepare a URL to the controller method as follows:__<pre class="code">_<%@ taglib uri="http://www.springframework.org/tags" prefix="s" %>__&lt_a href="${s:mvcUrl('PC#getPerson').arg(0,"123").build()}"&gt_Get Person&lt_/a&gt__</pre>__<p>Note that it's not necessary to specify all arguments. Only the ones_required to prepare the URL, mainly {@code @RequestParam} and {@code @PathVariable}).__@param mappingName the mapping name_@return a builder to to prepare the URI String_@throws IllegalArgumentException if the mapping name is not found or_if there is no unique match_@since 4.1;public static MethodArgumentBuilder fromMappingName(String mappingName) {_		return fromMappingName(null, mappingName)__	};create,a,url,from,the,name,of,a,spring,mvc,controller,method,s,request,mapping,p,the,configured,link,org,springframework,web,servlet,handler,handler,method,mapping,naming,strategy,handler,method,mapping,naming,strategy,determines,the,names,of,controller,method,request,mappings,at,startup,by,default,all,mappings,are,assigned,a,name,based,on,the,capital,letters,of,the,class,name,followed,by,as,separator,and,then,the,method,name,for,example,pc,get,person,for,a,class,named,person,controller,with,method,get,person,in,case,the,naming,convention,does,not,produce,unique,results,an,explicit,name,may,be,assigned,through,the,name,attribute,of,the,code,request,mapping,annotation,p,this,is,aimed,primarily,for,use,in,view,rendering,technologies,and,el,expressions,the,spring,url,tag,library,registers,this,method,as,a,function,called,mvc,url,p,for,example,given,this,controller,pre,class,code,064,request,mapping,people,class,person,controller,064,request,mapping,id,public,http,entity,void,get,person,064,path,variable,string,id,pre,a,jsp,can,prepare,a,url,to,the,controller,method,as,follows,pre,class,code,taglib,uri,http,www,springframework,org,tags,prefix,s,lt,a,href,s,mvc,url,pc,get,person,arg,0,123,build,gt,get,person,lt,a,gt,pre,p,note,that,it,s,not,necessary,to,specify,all,arguments,only,the,ones,required,to,prepare,the,url,mainly,code,request,param,and,code,path,variable,param,mapping,name,the,mapping,name,return,a,builder,to,to,prepare,the,uri,string,throws,illegal,argument,exception,if,the,mapping,name,is,not,found,or,if,there,is,no,unique,match,since,4,1;public,static,method,argument,builder,from,mapping,name,string,mapping,name,return,from,mapping,name,null,mapping,name
MvcUriComponentsBuilder -> public static MethodArgumentBuilder fromMappingName(String mappingName);1430739806;Create a URL from the name of a Spring MVC controller method's request mapping.__<p>The configured_{@link org.springframework.web.servlet.handler.HandlerMethodMappingNamingStrategy_HandlerMethodMappingNamingStrategy} determines the names of controller_method request mappings at startup. By default all mappings are assigned_a name based on the capital letters of the class name, followed by "#" as_separator, and then the method name. For example "PC#getPerson"_for a class named PersonController with method getPerson. In case the_naming convention does not produce unique results, an explicit name may_be assigned through the name attribute of the {@code @RequestMapping}_annotation.__<p>This is aimed primarily for use in view rendering technologies and EL_expressions. The Spring URL tag library registers this method as a function_called "mvcUrl".__<p>For example, given this controller:_<pre class="code">_&#064_RequestMapping("/people")_class PersonController {__&#064_RequestMapping("/{id}")_public HttpEntity<Void> getPerson(&#064_PathVariable String id) { ... }___</pre>__A JSP can prepare a URL to the controller method as follows:__<pre class="code">_<%@ taglib uri="http://www.springframework.org/tags" prefix="s" %>__&lt_a href="${s:mvcUrl('PC#getPerson').arg(0,"123").build()}"&gt_Get Person&lt_/a&gt__</pre>__<p>Note that it's not necessary to specify all arguments. Only the ones_required to prepare the URL, mainly {@code @RequestParam} and {@code @PathVariable}).__@param mappingName the mapping name_@return a builder to to prepare the URI String_@throws IllegalArgumentException if the mapping name is not found or_if there is no unique match_@since 4.1;public static MethodArgumentBuilder fromMappingName(String mappingName) {_		return fromMappingName(null, mappingName)__	};create,a,url,from,the,name,of,a,spring,mvc,controller,method,s,request,mapping,p,the,configured,link,org,springframework,web,servlet,handler,handler,method,mapping,naming,strategy,handler,method,mapping,naming,strategy,determines,the,names,of,controller,method,request,mappings,at,startup,by,default,all,mappings,are,assigned,a,name,based,on,the,capital,letters,of,the,class,name,followed,by,as,separator,and,then,the,method,name,for,example,pc,get,person,for,a,class,named,person,controller,with,method,get,person,in,case,the,naming,convention,does,not,produce,unique,results,an,explicit,name,may,be,assigned,through,the,name,attribute,of,the,code,request,mapping,annotation,p,this,is,aimed,primarily,for,use,in,view,rendering,technologies,and,el,expressions,the,spring,url,tag,library,registers,this,method,as,a,function,called,mvc,url,p,for,example,given,this,controller,pre,class,code,064,request,mapping,people,class,person,controller,064,request,mapping,id,public,http,entity,void,get,person,064,path,variable,string,id,pre,a,jsp,can,prepare,a,url,to,the,controller,method,as,follows,pre,class,code,taglib,uri,http,www,springframework,org,tags,prefix,s,lt,a,href,s,mvc,url,pc,get,person,arg,0,123,build,gt,get,person,lt,a,gt,pre,p,note,that,it,s,not,necessary,to,specify,all,arguments,only,the,ones,required,to,prepare,the,url,mainly,code,request,param,and,code,path,variable,param,mapping,name,the,mapping,name,return,a,builder,to,to,prepare,the,uri,string,throws,illegal,argument,exception,if,the,mapping,name,is,not,found,or,if,there,is,no,unique,match,since,4,1;public,static,method,argument,builder,from,mapping,name,string,mapping,name,return,from,mapping,name,null,mapping,name
MvcUriComponentsBuilder -> public static MethodArgumentBuilder fromMappingName(String mappingName);1430747547;Create a URL from the name of a Spring MVC controller method's request mapping.__<p>The configured_{@link org.springframework.web.servlet.handler.HandlerMethodMappingNamingStrategy_HandlerMethodMappingNamingStrategy} determines the names of controller_method request mappings at startup. By default all mappings are assigned_a name based on the capital letters of the class name, followed by "#" as_separator, and then the method name. For example "PC#getPerson"_for a class named PersonController with method getPerson. In case the_naming convention does not produce unique results, an explicit name may_be assigned through the name attribute of the {@code @RequestMapping}_annotation.__<p>This is aimed primarily for use in view rendering technologies and EL_expressions. The Spring URL tag library registers this method as a function_called "mvcUrl".__<p>For example, given this controller:_<pre class="code">_&#064_RequestMapping("/people")_class PersonController {__&#064_RequestMapping("/{id}")_public HttpEntity<Void> getPerson(&#064_PathVariable String id) { ... }___</pre>__A JSP can prepare a URL to the controller method as follows:__<pre class="code">_<%@ taglib uri="http://www.springframework.org/tags" prefix="s" %>__&lt_a href="${s:mvcUrl('PC#getPerson').arg(0,"123").build()}"&gt_Get Person&lt_/a&gt__</pre>__<p>Note that it's not necessary to specify all arguments. Only the ones_required to prepare the URL, mainly {@code @RequestParam} and {@code @PathVariable}).__@param mappingName the mapping name_@return a builder to to prepare the URI String_@throws IllegalArgumentException if the mapping name is not found or_if there is no unique match_@since 4.1;public static MethodArgumentBuilder fromMappingName(String mappingName) {_		return fromMappingName(null, mappingName)__	};create,a,url,from,the,name,of,a,spring,mvc,controller,method,s,request,mapping,p,the,configured,link,org,springframework,web,servlet,handler,handler,method,mapping,naming,strategy,handler,method,mapping,naming,strategy,determines,the,names,of,controller,method,request,mappings,at,startup,by,default,all,mappings,are,assigned,a,name,based,on,the,capital,letters,of,the,class,name,followed,by,as,separator,and,then,the,method,name,for,example,pc,get,person,for,a,class,named,person,controller,with,method,get,person,in,case,the,naming,convention,does,not,produce,unique,results,an,explicit,name,may,be,assigned,through,the,name,attribute,of,the,code,request,mapping,annotation,p,this,is,aimed,primarily,for,use,in,view,rendering,technologies,and,el,expressions,the,spring,url,tag,library,registers,this,method,as,a,function,called,mvc,url,p,for,example,given,this,controller,pre,class,code,064,request,mapping,people,class,person,controller,064,request,mapping,id,public,http,entity,void,get,person,064,path,variable,string,id,pre,a,jsp,can,prepare,a,url,to,the,controller,method,as,follows,pre,class,code,taglib,uri,http,www,springframework,org,tags,prefix,s,lt,a,href,s,mvc,url,pc,get,person,arg,0,123,build,gt,get,person,lt,a,gt,pre,p,note,that,it,s,not,necessary,to,specify,all,arguments,only,the,ones,required,to,prepare,the,url,mainly,code,request,param,and,code,path,variable,param,mapping,name,the,mapping,name,return,a,builder,to,to,prepare,the,uri,string,throws,illegal,argument,exception,if,the,mapping,name,is,not,found,or,if,there,is,no,unique,match,since,4,1;public,static,method,argument,builder,from,mapping,name,string,mapping,name,return,from,mapping,name,null,mapping,name
MvcUriComponentsBuilder -> public static MethodArgumentBuilder fromMappingName(String mappingName);1430749606;Create a URL from the name of a Spring MVC controller method's request mapping.__<p>The configured_{@link org.springframework.web.servlet.handler.HandlerMethodMappingNamingStrategy_HandlerMethodMappingNamingStrategy} determines the names of controller_method request mappings at startup. By default all mappings are assigned_a name based on the capital letters of the class name, followed by "#" as_separator, and then the method name. For example "PC#getPerson"_for a class named PersonController with method getPerson. In case the_naming convention does not produce unique results, an explicit name may_be assigned through the name attribute of the {@code @RequestMapping}_annotation.__<p>This is aimed primarily for use in view rendering technologies and EL_expressions. The Spring URL tag library registers this method as a function_called "mvcUrl".__<p>For example, given this controller:_<pre class="code">_&#064_RequestMapping("/people")_class PersonController {__&#064_RequestMapping("/{id}")_public HttpEntity<Void> getPerson(&#064_PathVariable String id) { ... }___</pre>__A JSP can prepare a URL to the controller method as follows:__<pre class="code">_<%@ taglib uri="http://www.springframework.org/tags" prefix="s" %>__&lt_a href="${s:mvcUrl('PC#getPerson').arg(0,"123").build()}"&gt_Get Person&lt_/a&gt__</pre>__<p>Note that it's not necessary to specify all arguments. Only the ones_required to prepare the URL, mainly {@code @RequestParam} and {@code @PathVariable}).__@param mappingName the mapping name_@return a builder to to prepare the URI String_@throws IllegalArgumentException if the mapping name is not found or_if there is no unique match_@since 4.1;public static MethodArgumentBuilder fromMappingName(String mappingName) {_		return fromMappingName(null, mappingName)__	};create,a,url,from,the,name,of,a,spring,mvc,controller,method,s,request,mapping,p,the,configured,link,org,springframework,web,servlet,handler,handler,method,mapping,naming,strategy,handler,method,mapping,naming,strategy,determines,the,names,of,controller,method,request,mappings,at,startup,by,default,all,mappings,are,assigned,a,name,based,on,the,capital,letters,of,the,class,name,followed,by,as,separator,and,then,the,method,name,for,example,pc,get,person,for,a,class,named,person,controller,with,method,get,person,in,case,the,naming,convention,does,not,produce,unique,results,an,explicit,name,may,be,assigned,through,the,name,attribute,of,the,code,request,mapping,annotation,p,this,is,aimed,primarily,for,use,in,view,rendering,technologies,and,el,expressions,the,spring,url,tag,library,registers,this,method,as,a,function,called,mvc,url,p,for,example,given,this,controller,pre,class,code,064,request,mapping,people,class,person,controller,064,request,mapping,id,public,http,entity,void,get,person,064,path,variable,string,id,pre,a,jsp,can,prepare,a,url,to,the,controller,method,as,follows,pre,class,code,taglib,uri,http,www,springframework,org,tags,prefix,s,lt,a,href,s,mvc,url,pc,get,person,arg,0,123,build,gt,get,person,lt,a,gt,pre,p,note,that,it,s,not,necessary,to,specify,all,arguments,only,the,ones,required,to,prepare,the,url,mainly,code,request,param,and,code,path,variable,param,mapping,name,the,mapping,name,return,a,builder,to,to,prepare,the,uri,string,throws,illegal,argument,exception,if,the,mapping,name,is,not,found,or,if,there,is,no,unique,match,since,4,1;public,static,method,argument,builder,from,mapping,name,string,mapping,name,return,from,mapping,name,null,mapping,name
MvcUriComponentsBuilder -> public static MethodArgumentBuilder fromMappingName(String mappingName);1431975386;Create a URL from the name of a Spring MVC controller method's request mapping.__<p>The configured_{@link org.springframework.web.servlet.handler.HandlerMethodMappingNamingStrategy_HandlerMethodMappingNamingStrategy} determines the names of controller_method request mappings at startup. By default all mappings are assigned_a name based on the capital letters of the class name, followed by "#" as_separator, and then the method name. For example "PC#getPerson"_for a class named PersonController with method getPerson. In case the_naming convention does not produce unique results, an explicit name may_be assigned through the name attribute of the {@code @RequestMapping}_annotation.__<p>This is aimed primarily for use in view rendering technologies and EL_expressions. The Spring URL tag library registers this method as a function_called "mvcUrl".__<p>For example, given this controller:_<pre class="code">_&#064_RequestMapping("/people")_class PersonController {__&#064_RequestMapping("/{id}")_public HttpEntity<Void> getPerson(&#064_PathVariable String id) { ... }___</pre>__A JSP can prepare a URL to the controller method as follows:__<pre class="code">_<%@ taglib uri="http://www.springframework.org/tags" prefix="s" %>__&lt_a href="${s:mvcUrl('PC#getPerson').arg(0,"123").build()}"&gt_Get Person&lt_/a&gt__</pre>__<p>Note that it's not necessary to specify all arguments. Only the ones_required to prepare the URL, mainly {@code @RequestParam} and {@code @PathVariable}).__@param mappingName the mapping name_@return a builder to to prepare the URI String_@throws IllegalArgumentException if the mapping name is not found or_if there is no unique match_@since 4.1;public static MethodArgumentBuilder fromMappingName(String mappingName) {_		return fromMappingName(null, mappingName)__	};create,a,url,from,the,name,of,a,spring,mvc,controller,method,s,request,mapping,p,the,configured,link,org,springframework,web,servlet,handler,handler,method,mapping,naming,strategy,handler,method,mapping,naming,strategy,determines,the,names,of,controller,method,request,mappings,at,startup,by,default,all,mappings,are,assigned,a,name,based,on,the,capital,letters,of,the,class,name,followed,by,as,separator,and,then,the,method,name,for,example,pc,get,person,for,a,class,named,person,controller,with,method,get,person,in,case,the,naming,convention,does,not,produce,unique,results,an,explicit,name,may,be,assigned,through,the,name,attribute,of,the,code,request,mapping,annotation,p,this,is,aimed,primarily,for,use,in,view,rendering,technologies,and,el,expressions,the,spring,url,tag,library,registers,this,method,as,a,function,called,mvc,url,p,for,example,given,this,controller,pre,class,code,064,request,mapping,people,class,person,controller,064,request,mapping,id,public,http,entity,void,get,person,064,path,variable,string,id,pre,a,jsp,can,prepare,a,url,to,the,controller,method,as,follows,pre,class,code,taglib,uri,http,www,springframework,org,tags,prefix,s,lt,a,href,s,mvc,url,pc,get,person,arg,0,123,build,gt,get,person,lt,a,gt,pre,p,note,that,it,s,not,necessary,to,specify,all,arguments,only,the,ones,required,to,prepare,the,url,mainly,code,request,param,and,code,path,variable,param,mapping,name,the,mapping,name,return,a,builder,to,to,prepare,the,uri,string,throws,illegal,argument,exception,if,the,mapping,name,is,not,found,or,if,there,is,no,unique,match,since,4,1;public,static,method,argument,builder,from,mapping,name,string,mapping,name,return,from,mapping,name,null,mapping,name
MvcUriComponentsBuilder -> public static MethodArgumentBuilder fromMappingName(String mappingName);1432125256;Create a URL from the name of a Spring MVC controller method's request mapping.__<p>The configured_{@link org.springframework.web.servlet.handler.HandlerMethodMappingNamingStrategy_HandlerMethodMappingNamingStrategy} determines the names of controller_method request mappings at startup. By default all mappings are assigned_a name based on the capital letters of the class name, followed by "#" as_separator, and then the method name. For example "PC#getPerson"_for a class named PersonController with method getPerson. In case the_naming convention does not produce unique results, an explicit name may_be assigned through the name attribute of the {@code @RequestMapping}_annotation.__<p>This is aimed primarily for use in view rendering technologies and EL_expressions. The Spring URL tag library registers this method as a function_called "mvcUrl".__<p>For example, given this controller:_<pre class="code">_&#064_RequestMapping("/people")_class PersonController {__&#064_RequestMapping("/{id}")_public HttpEntity<Void> getPerson(&#064_PathVariable String id) { ... }___</pre>__A JSP can prepare a URL to the controller method as follows:__<pre class="code">_<%@ taglib uri="http://www.springframework.org/tags" prefix="s" %>__&lt_a href="${s:mvcUrl('PC#getPerson').arg(0,"123").build()}"&gt_Get Person&lt_/a&gt__</pre>__<p>Note that it's not necessary to specify all arguments. Only the ones_required to prepare the URL, mainly {@code @RequestParam} and {@code @PathVariable}).__@param mappingName the mapping name_@return a builder to to prepare the URI String_@throws IllegalArgumentException if the mapping name is not found or_if there is no unique match_@since 4.1;public static MethodArgumentBuilder fromMappingName(String mappingName) {_		return fromMappingName(null, mappingName)__	};create,a,url,from,the,name,of,a,spring,mvc,controller,method,s,request,mapping,p,the,configured,link,org,springframework,web,servlet,handler,handler,method,mapping,naming,strategy,handler,method,mapping,naming,strategy,determines,the,names,of,controller,method,request,mappings,at,startup,by,default,all,mappings,are,assigned,a,name,based,on,the,capital,letters,of,the,class,name,followed,by,as,separator,and,then,the,method,name,for,example,pc,get,person,for,a,class,named,person,controller,with,method,get,person,in,case,the,naming,convention,does,not,produce,unique,results,an,explicit,name,may,be,assigned,through,the,name,attribute,of,the,code,request,mapping,annotation,p,this,is,aimed,primarily,for,use,in,view,rendering,technologies,and,el,expressions,the,spring,url,tag,library,registers,this,method,as,a,function,called,mvc,url,p,for,example,given,this,controller,pre,class,code,064,request,mapping,people,class,person,controller,064,request,mapping,id,public,http,entity,void,get,person,064,path,variable,string,id,pre,a,jsp,can,prepare,a,url,to,the,controller,method,as,follows,pre,class,code,taglib,uri,http,www,springframework,org,tags,prefix,s,lt,a,href,s,mvc,url,pc,get,person,arg,0,123,build,gt,get,person,lt,a,gt,pre,p,note,that,it,s,not,necessary,to,specify,all,arguments,only,the,ones,required,to,prepare,the,url,mainly,code,request,param,and,code,path,variable,param,mapping,name,the,mapping,name,return,a,builder,to,to,prepare,the,uri,string,throws,illegal,argument,exception,if,the,mapping,name,is,not,found,or,if,there,is,no,unique,match,since,4,1;public,static,method,argument,builder,from,mapping,name,string,mapping,name,return,from,mapping,name,null,mapping,name
MvcUriComponentsBuilder -> public static MethodArgumentBuilder fromMappingName(String mappingName);1432156007;Create a URL from the name of a Spring MVC controller method's request mapping.__<p>The configured_{@link org.springframework.web.servlet.handler.HandlerMethodMappingNamingStrategy_HandlerMethodMappingNamingStrategy} determines the names of controller_method request mappings at startup. By default all mappings are assigned_a name based on the capital letters of the class name, followed by "#" as_separator, and then the method name. For example "PC#getPerson"_for a class named PersonController with method getPerson. In case the_naming convention does not produce unique results, an explicit name may_be assigned through the name attribute of the {@code @RequestMapping}_annotation.__<p>This is aimed primarily for use in view rendering technologies and EL_expressions. The Spring URL tag library registers this method as a function_called "mvcUrl".__<p>For example, given this controller:_<pre class="code">_&#064_RequestMapping("/people")_class PersonController {__&#064_RequestMapping("/{id}")_public HttpEntity<Void> getPerson(&#064_PathVariable String id) { ... }___</pre>__A JSP can prepare a URL to the controller method as follows:__<pre class="code">_<%@ taglib uri="http://www.springframework.org/tags" prefix="s" %>__&lt_a href="${s:mvcUrl('PC#getPerson').arg(0,"123").build()}"&gt_Get Person&lt_/a&gt__</pre>__<p>Note that it's not necessary to specify all arguments. Only the ones_required to prepare the URL, mainly {@code @RequestParam} and {@code @PathVariable}).__@param mappingName the mapping name_@return a builder to to prepare the URI String_@throws IllegalArgumentException if the mapping name is not found or_if there is no unique match_@since 4.1;public static MethodArgumentBuilder fromMappingName(String mappingName) {_		return fromMappingName(null, mappingName)__	};create,a,url,from,the,name,of,a,spring,mvc,controller,method,s,request,mapping,p,the,configured,link,org,springframework,web,servlet,handler,handler,method,mapping,naming,strategy,handler,method,mapping,naming,strategy,determines,the,names,of,controller,method,request,mappings,at,startup,by,default,all,mappings,are,assigned,a,name,based,on,the,capital,letters,of,the,class,name,followed,by,as,separator,and,then,the,method,name,for,example,pc,get,person,for,a,class,named,person,controller,with,method,get,person,in,case,the,naming,convention,does,not,produce,unique,results,an,explicit,name,may,be,assigned,through,the,name,attribute,of,the,code,request,mapping,annotation,p,this,is,aimed,primarily,for,use,in,view,rendering,technologies,and,el,expressions,the,spring,url,tag,library,registers,this,method,as,a,function,called,mvc,url,p,for,example,given,this,controller,pre,class,code,064,request,mapping,people,class,person,controller,064,request,mapping,id,public,http,entity,void,get,person,064,path,variable,string,id,pre,a,jsp,can,prepare,a,url,to,the,controller,method,as,follows,pre,class,code,taglib,uri,http,www,springframework,org,tags,prefix,s,lt,a,href,s,mvc,url,pc,get,person,arg,0,123,build,gt,get,person,lt,a,gt,pre,p,note,that,it,s,not,necessary,to,specify,all,arguments,only,the,ones,required,to,prepare,the,url,mainly,code,request,param,and,code,path,variable,param,mapping,name,the,mapping,name,return,a,builder,to,to,prepare,the,uri,string,throws,illegal,argument,exception,if,the,mapping,name,is,not,found,or,if,there,is,no,unique,match,since,4,1;public,static,method,argument,builder,from,mapping,name,string,mapping,name,return,from,mapping,name,null,mapping,name
MvcUriComponentsBuilder -> public static MethodArgumentBuilder fromMappingName(String mappingName);1432856630;Create a URL from the name of a Spring MVC controller method's request mapping.__<p>The configured_{@link org.springframework.web.servlet.handler.HandlerMethodMappingNamingStrategy_HandlerMethodMappingNamingStrategy} determines the names of controller_method request mappings at startup. By default all mappings are assigned_a name based on the capital letters of the class name, followed by "#" as_separator, and then the method name. For example "PC#getPerson"_for a class named PersonController with method getPerson. In case the_naming convention does not produce unique results, an explicit name may_be assigned through the name attribute of the {@code @RequestMapping}_annotation.__<p>This is aimed primarily for use in view rendering technologies and EL_expressions. The Spring URL tag library registers this method as a function_called "mvcUrl".__<p>For example, given this controller:_<pre class="code">_&#064_RequestMapping("/people")_class PersonController {__&#064_RequestMapping("/{id}")_public HttpEntity<Void> getPerson(&#064_PathVariable String id) { ... }___</pre>__A JSP can prepare a URL to the controller method as follows:__<pre class="code">_<%@ taglib uri="http://www.springframework.org/tags" prefix="s" %>__&lt_a href="${s:mvcUrl('PC#getPerson').arg(0,"123").build()}"&gt_Get Person&lt_/a&gt__</pre>__<p>Note that it's not necessary to specify all arguments. Only the ones_required to prepare the URL, mainly {@code @RequestParam} and {@code @PathVariable}).__@param mappingName the mapping name_@return a builder to to prepare the URI String_@throws IllegalArgumentException if the mapping name is not found or_if there is no unique match_@since 4.1;public static MethodArgumentBuilder fromMappingName(String mappingName) {_		return fromMappingName(null, mappingName)__	};create,a,url,from,the,name,of,a,spring,mvc,controller,method,s,request,mapping,p,the,configured,link,org,springframework,web,servlet,handler,handler,method,mapping,naming,strategy,handler,method,mapping,naming,strategy,determines,the,names,of,controller,method,request,mappings,at,startup,by,default,all,mappings,are,assigned,a,name,based,on,the,capital,letters,of,the,class,name,followed,by,as,separator,and,then,the,method,name,for,example,pc,get,person,for,a,class,named,person,controller,with,method,get,person,in,case,the,naming,convention,does,not,produce,unique,results,an,explicit,name,may,be,assigned,through,the,name,attribute,of,the,code,request,mapping,annotation,p,this,is,aimed,primarily,for,use,in,view,rendering,technologies,and,el,expressions,the,spring,url,tag,library,registers,this,method,as,a,function,called,mvc,url,p,for,example,given,this,controller,pre,class,code,064,request,mapping,people,class,person,controller,064,request,mapping,id,public,http,entity,void,get,person,064,path,variable,string,id,pre,a,jsp,can,prepare,a,url,to,the,controller,method,as,follows,pre,class,code,taglib,uri,http,www,springframework,org,tags,prefix,s,lt,a,href,s,mvc,url,pc,get,person,arg,0,123,build,gt,get,person,lt,a,gt,pre,p,note,that,it,s,not,necessary,to,specify,all,arguments,only,the,ones,required,to,prepare,the,url,mainly,code,request,param,and,code,path,variable,param,mapping,name,the,mapping,name,return,a,builder,to,to,prepare,the,uri,string,throws,illegal,argument,exception,if,the,mapping,name,is,not,found,or,if,there,is,no,unique,match,since,4,1;public,static,method,argument,builder,from,mapping,name,string,mapping,name,return,from,mapping,name,null,mapping,name
MvcUriComponentsBuilder -> public static MethodArgumentBuilder fromMappingName(String mappingName);1432857824;Create a URL from the name of a Spring MVC controller method's request mapping.__<p>The configured_{@link org.springframework.web.servlet.handler.HandlerMethodMappingNamingStrategy_HandlerMethodMappingNamingStrategy} determines the names of controller_method request mappings at startup. By default all mappings are assigned_a name based on the capital letters of the class name, followed by "#" as_separator, and then the method name. For example "PC#getPerson"_for a class named PersonController with method getPerson. In case the_naming convention does not produce unique results, an explicit name may_be assigned through the name attribute of the {@code @RequestMapping}_annotation.__<p>This is aimed primarily for use in view rendering technologies and EL_expressions. The Spring URL tag library registers this method as a function_called "mvcUrl".__<p>For example, given this controller:_<pre class="code">_&#064_RequestMapping("/people")_class PersonController {__&#064_RequestMapping("/{id}")_public HttpEntity<Void> getPerson(&#064_PathVariable String id) { ... }___</pre>__A JSP can prepare a URL to the controller method as follows:__<pre class="code">_<%@ taglib uri="http://www.springframework.org/tags" prefix="s" %>__&lt_a href="${s:mvcUrl('PC#getPerson').arg(0,"123").build()}"&gt_Get Person&lt_/a&gt__</pre>__<p>Note that it's not necessary to specify all arguments. Only the ones_required to prepare the URL, mainly {@code @RequestParam} and {@code @PathVariable}).__@param mappingName the mapping name_@return a builder to to prepare the URI String_@throws IllegalArgumentException if the mapping name is not found or_if there is no unique match_@since 4.1;public static MethodArgumentBuilder fromMappingName(String mappingName) {_		return fromMappingName(null, mappingName)__	};create,a,url,from,the,name,of,a,spring,mvc,controller,method,s,request,mapping,p,the,configured,link,org,springframework,web,servlet,handler,handler,method,mapping,naming,strategy,handler,method,mapping,naming,strategy,determines,the,names,of,controller,method,request,mappings,at,startup,by,default,all,mappings,are,assigned,a,name,based,on,the,capital,letters,of,the,class,name,followed,by,as,separator,and,then,the,method,name,for,example,pc,get,person,for,a,class,named,person,controller,with,method,get,person,in,case,the,naming,convention,does,not,produce,unique,results,an,explicit,name,may,be,assigned,through,the,name,attribute,of,the,code,request,mapping,annotation,p,this,is,aimed,primarily,for,use,in,view,rendering,technologies,and,el,expressions,the,spring,url,tag,library,registers,this,method,as,a,function,called,mvc,url,p,for,example,given,this,controller,pre,class,code,064,request,mapping,people,class,person,controller,064,request,mapping,id,public,http,entity,void,get,person,064,path,variable,string,id,pre,a,jsp,can,prepare,a,url,to,the,controller,method,as,follows,pre,class,code,taglib,uri,http,www,springframework,org,tags,prefix,s,lt,a,href,s,mvc,url,pc,get,person,arg,0,123,build,gt,get,person,lt,a,gt,pre,p,note,that,it,s,not,necessary,to,specify,all,arguments,only,the,ones,required,to,prepare,the,url,mainly,code,request,param,and,code,path,variable,param,mapping,name,the,mapping,name,return,a,builder,to,to,prepare,the,uri,string,throws,illegal,argument,exception,if,the,mapping,name,is,not,found,or,if,there,is,no,unique,match,since,4,1;public,static,method,argument,builder,from,mapping,name,string,mapping,name,return,from,mapping,name,null,mapping,name
MvcUriComponentsBuilder -> public static MethodArgumentBuilder fromMappingName(String mappingName);1434234880;Create a URL from the name of a Spring MVC controller method's request mapping.__<p>The configured_{@link org.springframework.web.servlet.handler.HandlerMethodMappingNamingStrategy_HandlerMethodMappingNamingStrategy} determines the names of controller_method request mappings at startup. By default all mappings are assigned_a name based on the capital letters of the class name, followed by "#" as_separator, and then the method name. For example "PC#getPerson"_for a class named PersonController with method getPerson. In case the_naming convention does not produce unique results, an explicit name may_be assigned through the name attribute of the {@code @RequestMapping}_annotation.__<p>This is aimed primarily for use in view rendering technologies and EL_expressions. The Spring URL tag library registers this method as a function_called "mvcUrl".__<p>For example, given this controller:_<pre class="code">_&#064_RequestMapping("/people")_class PersonController {__&#064_RequestMapping("/{id}")_public HttpEntity<Void> getPerson(&#064_PathVariable String id) { ... }___</pre>__A JSP can prepare a URL to the controller method as follows:__<pre class="code">_<%@ taglib uri="http://www.springframework.org/tags" prefix="s" %>__&lt_a href="${s:mvcUrl('PC#getPerson').arg(0,"123").build()}"&gt_Get Person&lt_/a&gt__</pre>__<p>Note that it's not necessary to specify all arguments. Only the ones_required to prepare the URL, mainly {@code @RequestParam} and {@code @PathVariable}).__@param mappingName the mapping name_@return a builder to to prepare the URI String_@throws IllegalArgumentException if the mapping name is not found or_if there is no unique match_@since 4.1;public static MethodArgumentBuilder fromMappingName(String mappingName) {_		return fromMappingName(null, mappingName)__	};create,a,url,from,the,name,of,a,spring,mvc,controller,method,s,request,mapping,p,the,configured,link,org,springframework,web,servlet,handler,handler,method,mapping,naming,strategy,handler,method,mapping,naming,strategy,determines,the,names,of,controller,method,request,mappings,at,startup,by,default,all,mappings,are,assigned,a,name,based,on,the,capital,letters,of,the,class,name,followed,by,as,separator,and,then,the,method,name,for,example,pc,get,person,for,a,class,named,person,controller,with,method,get,person,in,case,the,naming,convention,does,not,produce,unique,results,an,explicit,name,may,be,assigned,through,the,name,attribute,of,the,code,request,mapping,annotation,p,this,is,aimed,primarily,for,use,in,view,rendering,technologies,and,el,expressions,the,spring,url,tag,library,registers,this,method,as,a,function,called,mvc,url,p,for,example,given,this,controller,pre,class,code,064,request,mapping,people,class,person,controller,064,request,mapping,id,public,http,entity,void,get,person,064,path,variable,string,id,pre,a,jsp,can,prepare,a,url,to,the,controller,method,as,follows,pre,class,code,taglib,uri,http,www,springframework,org,tags,prefix,s,lt,a,href,s,mvc,url,pc,get,person,arg,0,123,build,gt,get,person,lt,a,gt,pre,p,note,that,it,s,not,necessary,to,specify,all,arguments,only,the,ones,required,to,prepare,the,url,mainly,code,request,param,and,code,path,variable,param,mapping,name,the,mapping,name,return,a,builder,to,to,prepare,the,uri,string,throws,illegal,argument,exception,if,the,mapping,name,is,not,found,or,if,there,is,no,unique,match,since,4,1;public,static,method,argument,builder,from,mapping,name,string,mapping,name,return,from,mapping,name,null,mapping,name
MvcUriComponentsBuilder -> public static MethodArgumentBuilder fromMappingName(String mappingName);1434484897;Create a URL from the name of a Spring MVC controller method's request mapping.__<p>The configured_{@link org.springframework.web.servlet.handler.HandlerMethodMappingNamingStrategy_HandlerMethodMappingNamingStrategy} determines the names of controller_method request mappings at startup. By default all mappings are assigned_a name based on the capital letters of the class name, followed by "#" as_separator, and then the method name. For example "PC#getPerson"_for a class named PersonController with method getPerson. In case the_naming convention does not produce unique results, an explicit name may_be assigned through the name attribute of the {@code @RequestMapping}_annotation.__<p>This is aimed primarily for use in view rendering technologies and EL_expressions. The Spring URL tag library registers this method as a function_called "mvcUrl".__<p>For example, given this controller:_<pre class="code">_&#064_RequestMapping("/people")_class PersonController {__&#064_RequestMapping("/{id}")_public HttpEntity<Void> getPerson(&#064_PathVariable String id) { ... }___</pre>__A JSP can prepare a URL to the controller method as follows:__<pre class="code">_<%@ taglib uri="http://www.springframework.org/tags" prefix="s" %>__&lt_a href="${s:mvcUrl('PC#getPerson').arg(0,"123").build()}"&gt_Get Person&lt_/a&gt__</pre>__<p>Note that it's not necessary to specify all arguments. Only the ones_required to prepare the URL, mainly {@code @RequestParam} and {@code @PathVariable}).__@param mappingName the mapping name_@return a builder to to prepare the URI String_@throws IllegalArgumentException if the mapping name is not found or_if there is no unique match_@since 4.1;public static MethodArgumentBuilder fromMappingName(String mappingName) {_		return fromMappingName(null, mappingName)__	};create,a,url,from,the,name,of,a,spring,mvc,controller,method,s,request,mapping,p,the,configured,link,org,springframework,web,servlet,handler,handler,method,mapping,naming,strategy,handler,method,mapping,naming,strategy,determines,the,names,of,controller,method,request,mappings,at,startup,by,default,all,mappings,are,assigned,a,name,based,on,the,capital,letters,of,the,class,name,followed,by,as,separator,and,then,the,method,name,for,example,pc,get,person,for,a,class,named,person,controller,with,method,get,person,in,case,the,naming,convention,does,not,produce,unique,results,an,explicit,name,may,be,assigned,through,the,name,attribute,of,the,code,request,mapping,annotation,p,this,is,aimed,primarily,for,use,in,view,rendering,technologies,and,el,expressions,the,spring,url,tag,library,registers,this,method,as,a,function,called,mvc,url,p,for,example,given,this,controller,pre,class,code,064,request,mapping,people,class,person,controller,064,request,mapping,id,public,http,entity,void,get,person,064,path,variable,string,id,pre,a,jsp,can,prepare,a,url,to,the,controller,method,as,follows,pre,class,code,taglib,uri,http,www,springframework,org,tags,prefix,s,lt,a,href,s,mvc,url,pc,get,person,arg,0,123,build,gt,get,person,lt,a,gt,pre,p,note,that,it,s,not,necessary,to,specify,all,arguments,only,the,ones,required,to,prepare,the,url,mainly,code,request,param,and,code,path,variable,param,mapping,name,the,mapping,name,return,a,builder,to,to,prepare,the,uri,string,throws,illegal,argument,exception,if,the,mapping,name,is,not,found,or,if,there,is,no,unique,match,since,4,1;public,static,method,argument,builder,from,mapping,name,string,mapping,name,return,from,mapping,name,null,mapping,name
MvcUriComponentsBuilder -> public static MethodArgumentBuilder fromMappingName(String mappingName);1434726592;Create a URL from the name of a Spring MVC controller method's request mapping.__<p>The configured_{@link org.springframework.web.servlet.handler.HandlerMethodMappingNamingStrategy_HandlerMethodMappingNamingStrategy} determines the names of controller_method request mappings at startup. By default all mappings are assigned_a name based on the capital letters of the class name, followed by "#" as_separator, and then the method name. For example "PC#getPerson"_for a class named PersonController with method getPerson. In case the_naming convention does not produce unique results, an explicit name may_be assigned through the name attribute of the {@code @RequestMapping}_annotation.__<p>This is aimed primarily for use in view rendering technologies and EL_expressions. The Spring URL tag library registers this method as a function_called "mvcUrl".__<p>For example, given this controller:_<pre class="code">_&#064_RequestMapping("/people")_class PersonController {__&#064_RequestMapping("/{id}")_public HttpEntity<Void> getPerson(&#064_PathVariable String id) { ... }___</pre>__A JSP can prepare a URL to the controller method as follows:__<pre class="code">_<%@ taglib uri="http://www.springframework.org/tags" prefix="s" %>__&lt_a href="${s:mvcUrl('PC#getPerson').arg(0,"123").build()}"&gt_Get Person&lt_/a&gt__</pre>__<p>Note that it's not necessary to specify all arguments. Only the ones_required to prepare the URL, mainly {@code @RequestParam} and {@code @PathVariable}).__@param mappingName the mapping name_@return a builder to to prepare the URI String_@throws IllegalArgumentException if the mapping name is not found or_if there is no unique match_@since 4.1;public static MethodArgumentBuilder fromMappingName(String mappingName) {_		return fromMappingName(null, mappingName)__	};create,a,url,from,the,name,of,a,spring,mvc,controller,method,s,request,mapping,p,the,configured,link,org,springframework,web,servlet,handler,handler,method,mapping,naming,strategy,handler,method,mapping,naming,strategy,determines,the,names,of,controller,method,request,mappings,at,startup,by,default,all,mappings,are,assigned,a,name,based,on,the,capital,letters,of,the,class,name,followed,by,as,separator,and,then,the,method,name,for,example,pc,get,person,for,a,class,named,person,controller,with,method,get,person,in,case,the,naming,convention,does,not,produce,unique,results,an,explicit,name,may,be,assigned,through,the,name,attribute,of,the,code,request,mapping,annotation,p,this,is,aimed,primarily,for,use,in,view,rendering,technologies,and,el,expressions,the,spring,url,tag,library,registers,this,method,as,a,function,called,mvc,url,p,for,example,given,this,controller,pre,class,code,064,request,mapping,people,class,person,controller,064,request,mapping,id,public,http,entity,void,get,person,064,path,variable,string,id,pre,a,jsp,can,prepare,a,url,to,the,controller,method,as,follows,pre,class,code,taglib,uri,http,www,springframework,org,tags,prefix,s,lt,a,href,s,mvc,url,pc,get,person,arg,0,123,build,gt,get,person,lt,a,gt,pre,p,note,that,it,s,not,necessary,to,specify,all,arguments,only,the,ones,required,to,prepare,the,url,mainly,code,request,param,and,code,path,variable,param,mapping,name,the,mapping,name,return,a,builder,to,to,prepare,the,uri,string,throws,illegal,argument,exception,if,the,mapping,name,is,not,found,or,if,there,is,no,unique,match,since,4,1;public,static,method,argument,builder,from,mapping,name,string,mapping,name,return,from,mapping,name,null,mapping,name
MvcUriComponentsBuilder -> public static MethodArgumentBuilder fromMappingName(String mappingName);1435615322;Create a URL from the name of a Spring MVC controller method's request mapping.__<p>The configured_{@link org.springframework.web.servlet.handler.HandlerMethodMappingNamingStrategy_HandlerMethodMappingNamingStrategy} determines the names of controller_method request mappings at startup. By default all mappings are assigned_a name based on the capital letters of the class name, followed by "#" as_separator, and then the method name. For example "PC#getPerson"_for a class named PersonController with method getPerson. In case the_naming convention does not produce unique results, an explicit name may_be assigned through the name attribute of the {@code @RequestMapping}_annotation.__<p>This is aimed primarily for use in view rendering technologies and EL_expressions. The Spring URL tag library registers this method as a function_called "mvcUrl".__<p>For example, given this controller:_<pre class="code">_&#064_RequestMapping("/people")_class PersonController {__&#064_RequestMapping("/{id}")_public HttpEntity<Void> getPerson(&#064_PathVariable String id) { ... }___</pre>__A JSP can prepare a URL to the controller method as follows:__<pre class="code">_<%@ taglib uri="http://www.springframework.org/tags" prefix="s" %>__&lt_a href="${s:mvcUrl('PC#getPerson').arg(0,"123").build()}"&gt_Get Person&lt_/a&gt__</pre>__<p>Note that it's not necessary to specify all arguments. Only the ones_required to prepare the URL, mainly {@code @RequestParam} and {@code @PathVariable}).__@param mappingName the mapping name_@return a builder to to prepare the URI String_@throws IllegalArgumentException if the mapping name is not found or_if there is no unique match_@since 4.1;public static MethodArgumentBuilder fromMappingName(String mappingName) {_		return fromMappingName(null, mappingName)__	};create,a,url,from,the,name,of,a,spring,mvc,controller,method,s,request,mapping,p,the,configured,link,org,springframework,web,servlet,handler,handler,method,mapping,naming,strategy,handler,method,mapping,naming,strategy,determines,the,names,of,controller,method,request,mappings,at,startup,by,default,all,mappings,are,assigned,a,name,based,on,the,capital,letters,of,the,class,name,followed,by,as,separator,and,then,the,method,name,for,example,pc,get,person,for,a,class,named,person,controller,with,method,get,person,in,case,the,naming,convention,does,not,produce,unique,results,an,explicit,name,may,be,assigned,through,the,name,attribute,of,the,code,request,mapping,annotation,p,this,is,aimed,primarily,for,use,in,view,rendering,technologies,and,el,expressions,the,spring,url,tag,library,registers,this,method,as,a,function,called,mvc,url,p,for,example,given,this,controller,pre,class,code,064,request,mapping,people,class,person,controller,064,request,mapping,id,public,http,entity,void,get,person,064,path,variable,string,id,pre,a,jsp,can,prepare,a,url,to,the,controller,method,as,follows,pre,class,code,taglib,uri,http,www,springframework,org,tags,prefix,s,lt,a,href,s,mvc,url,pc,get,person,arg,0,123,build,gt,get,person,lt,a,gt,pre,p,note,that,it,s,not,necessary,to,specify,all,arguments,only,the,ones,required,to,prepare,the,url,mainly,code,request,param,and,code,path,variable,param,mapping,name,the,mapping,name,return,a,builder,to,to,prepare,the,uri,string,throws,illegal,argument,exception,if,the,mapping,name,is,not,found,or,if,there,is,no,unique,match,since,4,1;public,static,method,argument,builder,from,mapping,name,string,mapping,name,return,from,mapping,name,null,mapping,name
MvcUriComponentsBuilder -> public static MethodArgumentBuilder fromMappingName(String mappingName);1439294371;Create a URL from the name of a Spring MVC controller method's request mapping._<p>The configured_{@link org.springframework.web.servlet.handler.HandlerMethodMappingNamingStrategy_HandlerMethodMappingNamingStrategy} determines the names of controller_method request mappings at startup. By default all mappings are assigned_a name based on the capital letters of the class name, followed by "#" as_separator, and then the method name. For example "PC#getPerson"_for a class named PersonController with method getPerson. In case the_naming convention does not produce unique results, an explicit name may_be assigned through the name attribute of the {@code @RequestMapping}_annotation._<p>This is aimed primarily for use in view rendering technologies and EL_expressions. The Spring URL tag library registers this method as a function_called "mvcUrl"._<p>For example, given this controller:_<pre class="code">_&#064_RequestMapping("/people")_class PersonController {__&#064_RequestMapping("/{id}")_public HttpEntity<Void> getPerson(&#064_PathVariable String id) { ... }___</pre>__A JSP can prepare a URL to the controller method as follows:__<pre class="code">_<%@ taglib uri="http://www.springframework.org/tags" prefix="s" %>__&lt_a href="${s:mvcUrl('PC#getPerson').arg(0,"123").build()}"&gt_Get Person&lt_/a&gt__</pre>_<p>Note that it's not necessary to specify all arguments. Only the ones_required to prepare the URL, mainly {@code @RequestParam} and {@code @PathVariable})._@param mappingName the mapping name_@return a builder to to prepare the URI String_@throws IllegalArgumentException if the mapping name is not found or_if there is no unique match_@since 4.1;public static MethodArgumentBuilder fromMappingName(String mappingName) {_		return fromMappingName(null, mappingName)__	};create,a,url,from,the,name,of,a,spring,mvc,controller,method,s,request,mapping,p,the,configured,link,org,springframework,web,servlet,handler,handler,method,mapping,naming,strategy,handler,method,mapping,naming,strategy,determines,the,names,of,controller,method,request,mappings,at,startup,by,default,all,mappings,are,assigned,a,name,based,on,the,capital,letters,of,the,class,name,followed,by,as,separator,and,then,the,method,name,for,example,pc,get,person,for,a,class,named,person,controller,with,method,get,person,in,case,the,naming,convention,does,not,produce,unique,results,an,explicit,name,may,be,assigned,through,the,name,attribute,of,the,code,request,mapping,annotation,p,this,is,aimed,primarily,for,use,in,view,rendering,technologies,and,el,expressions,the,spring,url,tag,library,registers,this,method,as,a,function,called,mvc,url,p,for,example,given,this,controller,pre,class,code,064,request,mapping,people,class,person,controller,064,request,mapping,id,public,http,entity,void,get,person,064,path,variable,string,id,pre,a,jsp,can,prepare,a,url,to,the,controller,method,as,follows,pre,class,code,taglib,uri,http,www,springframework,org,tags,prefix,s,lt,a,href,s,mvc,url,pc,get,person,arg,0,123,build,gt,get,person,lt,a,gt,pre,p,note,that,it,s,not,necessary,to,specify,all,arguments,only,the,ones,required,to,prepare,the,url,mainly,code,request,param,and,code,path,variable,param,mapping,name,the,mapping,name,return,a,builder,to,to,prepare,the,uri,string,throws,illegal,argument,exception,if,the,mapping,name,is,not,found,or,if,there,is,no,unique,match,since,4,1;public,static,method,argument,builder,from,mapping,name,string,mapping,name,return,from,mapping,name,null,mapping,name
MvcUriComponentsBuilder -> public static MethodArgumentBuilder fromMappingName(String mappingName);1447077465;Create a URL from the name of a Spring MVC controller method's request mapping._<p>The configured_{@link org.springframework.web.servlet.handler.HandlerMethodMappingNamingStrategy_HandlerMethodMappingNamingStrategy} determines the names of controller_method request mappings at startup. By default all mappings are assigned_a name based on the capital letters of the class name, followed by "#" as_separator, and then the method name. For example "PC#getPerson"_for a class named PersonController with method getPerson. In case the_naming convention does not produce unique results, an explicit name may_be assigned through the name attribute of the {@code @RequestMapping}_annotation._<p>This is aimed primarily for use in view rendering technologies and EL_expressions. The Spring URL tag library registers this method as a function_called "mvcUrl"._<p>For example, given this controller:_<pre class="code">_&#064_RequestMapping("/people")_class PersonController {__&#064_RequestMapping("/{id}")_public HttpEntity<Void> getPerson(&#064_PathVariable String id) { ... }___</pre>__A JSP can prepare a URL to the controller method as follows:__<pre class="code">_<%@ taglib uri="http://www.springframework.org/tags" prefix="s" %>__&lt_a href="${s:mvcUrl('PC#getPerson').arg(0,"123").build()}"&gt_Get Person&lt_/a&gt__</pre>_<p>Note that it's not necessary to specify all arguments. Only the ones_required to prepare the URL, mainly {@code @RequestParam} and {@code @PathVariable})._@param mappingName the mapping name_@return a builder to to prepare the URI String_@throws IllegalArgumentException if the mapping name is not found or_if there is no unique match_@since 4.1;public static MethodArgumentBuilder fromMappingName(String mappingName) {_		return fromMappingName(null, mappingName)__	};create,a,url,from,the,name,of,a,spring,mvc,controller,method,s,request,mapping,p,the,configured,link,org,springframework,web,servlet,handler,handler,method,mapping,naming,strategy,handler,method,mapping,naming,strategy,determines,the,names,of,controller,method,request,mappings,at,startup,by,default,all,mappings,are,assigned,a,name,based,on,the,capital,letters,of,the,class,name,followed,by,as,separator,and,then,the,method,name,for,example,pc,get,person,for,a,class,named,person,controller,with,method,get,person,in,case,the,naming,convention,does,not,produce,unique,results,an,explicit,name,may,be,assigned,through,the,name,attribute,of,the,code,request,mapping,annotation,p,this,is,aimed,primarily,for,use,in,view,rendering,technologies,and,el,expressions,the,spring,url,tag,library,registers,this,method,as,a,function,called,mvc,url,p,for,example,given,this,controller,pre,class,code,064,request,mapping,people,class,person,controller,064,request,mapping,id,public,http,entity,void,get,person,064,path,variable,string,id,pre,a,jsp,can,prepare,a,url,to,the,controller,method,as,follows,pre,class,code,taglib,uri,http,www,springframework,org,tags,prefix,s,lt,a,href,s,mvc,url,pc,get,person,arg,0,123,build,gt,get,person,lt,a,gt,pre,p,note,that,it,s,not,necessary,to,specify,all,arguments,only,the,ones,required,to,prepare,the,url,mainly,code,request,param,and,code,path,variable,param,mapping,name,the,mapping,name,return,a,builder,to,to,prepare,the,uri,string,throws,illegal,argument,exception,if,the,mapping,name,is,not,found,or,if,there,is,no,unique,match,since,4,1;public,static,method,argument,builder,from,mapping,name,string,mapping,name,return,from,mapping,name,null,mapping,name
MvcUriComponentsBuilder -> public static MethodArgumentBuilder fromMappingName(String mappingName);1458830024;Create a URL from the name of a Spring MVC controller method's request mapping._<p>The configured_{@link org.springframework.web.servlet.handler.HandlerMethodMappingNamingStrategy_HandlerMethodMappingNamingStrategy} determines the names of controller_method request mappings at startup. By default all mappings are assigned_a name based on the capital letters of the class name, followed by "#" as_separator, and then the method name. For example "PC#getPerson"_for a class named PersonController with method getPerson. In case the_naming convention does not produce unique results, an explicit name may_be assigned through the name attribute of the {@code @RequestMapping}_annotation._<p>This is aimed primarily for use in view rendering technologies and EL_expressions. The Spring URL tag library registers this method as a function_called "mvcUrl"._<p>For example, given this controller:_<pre class="code">_&#064_RequestMapping("/people")_class PersonController {__&#064_RequestMapping("/{id}")_public HttpEntity<Void> getPerson(&#064_PathVariable String id) { ... }___</pre>__A JSP can prepare a URL to the controller method as follows:__<pre class="code">_<%@ taglib uri="http://www.springframework.org/tags" prefix="s" %>__&lt_a href="${s:mvcUrl('PC#getPerson').arg(0,"123").build()}"&gt_Get Person&lt_/a&gt__</pre>_<p>Note that it's not necessary to specify all arguments. Only the ones_required to prepare the URL, mainly {@code @RequestParam} and {@code @PathVariable})._@param mappingName the mapping name_@return a builder to to prepare the URI String_@throws IllegalArgumentException if the mapping name is not found or_if there is no unique match_@since 4.1;public static MethodArgumentBuilder fromMappingName(String mappingName) {_		return fromMappingName(null, mappingName)__	};create,a,url,from,the,name,of,a,spring,mvc,controller,method,s,request,mapping,p,the,configured,link,org,springframework,web,servlet,handler,handler,method,mapping,naming,strategy,handler,method,mapping,naming,strategy,determines,the,names,of,controller,method,request,mappings,at,startup,by,default,all,mappings,are,assigned,a,name,based,on,the,capital,letters,of,the,class,name,followed,by,as,separator,and,then,the,method,name,for,example,pc,get,person,for,a,class,named,person,controller,with,method,get,person,in,case,the,naming,convention,does,not,produce,unique,results,an,explicit,name,may,be,assigned,through,the,name,attribute,of,the,code,request,mapping,annotation,p,this,is,aimed,primarily,for,use,in,view,rendering,technologies,and,el,expressions,the,spring,url,tag,library,registers,this,method,as,a,function,called,mvc,url,p,for,example,given,this,controller,pre,class,code,064,request,mapping,people,class,person,controller,064,request,mapping,id,public,http,entity,void,get,person,064,path,variable,string,id,pre,a,jsp,can,prepare,a,url,to,the,controller,method,as,follows,pre,class,code,taglib,uri,http,www,springframework,org,tags,prefix,s,lt,a,href,s,mvc,url,pc,get,person,arg,0,123,build,gt,get,person,lt,a,gt,pre,p,note,that,it,s,not,necessary,to,specify,all,arguments,only,the,ones,required,to,prepare,the,url,mainly,code,request,param,and,code,path,variable,param,mapping,name,the,mapping,name,return,a,builder,to,to,prepare,the,uri,string,throws,illegal,argument,exception,if,the,mapping,name,is,not,found,or,if,there,is,no,unique,match,since,4,1;public,static,method,argument,builder,from,mapping,name,string,mapping,name,return,from,mapping,name,null,mapping,name
MvcUriComponentsBuilder -> public static MethodArgumentBuilder fromMappingName(String mappingName);1461047077;Create a URL from the name of a Spring MVC controller method's request mapping._<p>The configured_{@link org.springframework.web.servlet.handler.HandlerMethodMappingNamingStrategy_HandlerMethodMappingNamingStrategy} determines the names of controller_method request mappings at startup. By default all mappings are assigned_a name based on the capital letters of the class name, followed by "#" as_separator, and then the method name. For example "PC#getPerson"_for a class named PersonController with method getPerson. In case the_naming convention does not produce unique results, an explicit name may_be assigned through the name attribute of the {@code @RequestMapping}_annotation._<p>This is aimed primarily for use in view rendering technologies and EL_expressions. The Spring URL tag library registers this method as a function_called "mvcUrl"._<p>For example, given this controller:_<pre class="code">_&#064_RequestMapping("/people")_class PersonController {__&#064_RequestMapping("/{id}")_public HttpEntity<Void> getPerson(&#064_PathVariable String id) { ... }___</pre>__A JSP can prepare a URL to the controller method as follows:__<pre class="code">_<%@ taglib uri="http://www.springframework.org/tags" prefix="s" %>__&lt_a href="${s:mvcUrl('PC#getPerson').arg(0,"123").build()}"&gt_Get Person&lt_/a&gt__</pre>_<p>Note that it's not necessary to specify all arguments. Only the ones_required to prepare the URL, mainly {@code @RequestParam} and {@code @PathVariable})._@param mappingName the mapping name_@return a builder to prepare the URI String_@throws IllegalArgumentException if the mapping name is not found or_if there is no unique match_@since 4.1;public static MethodArgumentBuilder fromMappingName(String mappingName) {_		return fromMappingName(null, mappingName)__	};create,a,url,from,the,name,of,a,spring,mvc,controller,method,s,request,mapping,p,the,configured,link,org,springframework,web,servlet,handler,handler,method,mapping,naming,strategy,handler,method,mapping,naming,strategy,determines,the,names,of,controller,method,request,mappings,at,startup,by,default,all,mappings,are,assigned,a,name,based,on,the,capital,letters,of,the,class,name,followed,by,as,separator,and,then,the,method,name,for,example,pc,get,person,for,a,class,named,person,controller,with,method,get,person,in,case,the,naming,convention,does,not,produce,unique,results,an,explicit,name,may,be,assigned,through,the,name,attribute,of,the,code,request,mapping,annotation,p,this,is,aimed,primarily,for,use,in,view,rendering,technologies,and,el,expressions,the,spring,url,tag,library,registers,this,method,as,a,function,called,mvc,url,p,for,example,given,this,controller,pre,class,code,064,request,mapping,people,class,person,controller,064,request,mapping,id,public,http,entity,void,get,person,064,path,variable,string,id,pre,a,jsp,can,prepare,a,url,to,the,controller,method,as,follows,pre,class,code,taglib,uri,http,www,springframework,org,tags,prefix,s,lt,a,href,s,mvc,url,pc,get,person,arg,0,123,build,gt,get,person,lt,a,gt,pre,p,note,that,it,s,not,necessary,to,specify,all,arguments,only,the,ones,required,to,prepare,the,url,mainly,code,request,param,and,code,path,variable,param,mapping,name,the,mapping,name,return,a,builder,to,prepare,the,uri,string,throws,illegal,argument,exception,if,the,mapping,name,is,not,found,or,if,there,is,no,unique,match,since,4,1;public,static,method,argument,builder,from,mapping,name,string,mapping,name,return,from,mapping,name,null,mapping,name
MvcUriComponentsBuilder -> public static MethodArgumentBuilder fromMappingName(String mappingName);1467677340;Create a URL from the name of a Spring MVC controller method's request mapping._<p>The configured_{@link org.springframework.web.servlet.handler.HandlerMethodMappingNamingStrategy_HandlerMethodMappingNamingStrategy} determines the names of controller_method request mappings at startup. By default all mappings are assigned_a name based on the capital letters of the class name, followed by "#" as_separator, and then the method name. For example "PC#getPerson"_for a class named PersonController with method getPerson. In case the_naming convention does not produce unique results, an explicit name may_be assigned through the name attribute of the {@code @RequestMapping}_annotation._<p>This is aimed primarily for use in view rendering technologies and EL_expressions. The Spring URL tag library registers this method as a function_called "mvcUrl"._<p>For example, given this controller:_<pre class="code">_&#064_RequestMapping("/people")_class PersonController {__&#064_RequestMapping("/{id}")_public HttpEntity<Void> getPerson(&#064_PathVariable String id) { ... }___</pre>__A JSP can prepare a URL to the controller method as follows:__<pre class="code">_<%@ taglib uri="http://www.springframework.org/tags" prefix="s" %>__&lt_a href="${s:mvcUrl('PC#getPerson').arg(0,"123").build()}"&gt_Get Person&lt_/a&gt__</pre>_<p>Note that it's not necessary to specify all arguments. Only the ones_required to prepare the URL, mainly {@code @RequestParam} and {@code @PathVariable})._@param mappingName the mapping name_@return a builder to prepare the URI String_@throws IllegalArgumentException if the mapping name is not found or_if there is no unique match_@since 4.1;public static MethodArgumentBuilder fromMappingName(String mappingName) {_		return fromMappingName(null, mappingName)__	};create,a,url,from,the,name,of,a,spring,mvc,controller,method,s,request,mapping,p,the,configured,link,org,springframework,web,servlet,handler,handler,method,mapping,naming,strategy,handler,method,mapping,naming,strategy,determines,the,names,of,controller,method,request,mappings,at,startup,by,default,all,mappings,are,assigned,a,name,based,on,the,capital,letters,of,the,class,name,followed,by,as,separator,and,then,the,method,name,for,example,pc,get,person,for,a,class,named,person,controller,with,method,get,person,in,case,the,naming,convention,does,not,produce,unique,results,an,explicit,name,may,be,assigned,through,the,name,attribute,of,the,code,request,mapping,annotation,p,this,is,aimed,primarily,for,use,in,view,rendering,technologies,and,el,expressions,the,spring,url,tag,library,registers,this,method,as,a,function,called,mvc,url,p,for,example,given,this,controller,pre,class,code,064,request,mapping,people,class,person,controller,064,request,mapping,id,public,http,entity,void,get,person,064,path,variable,string,id,pre,a,jsp,can,prepare,a,url,to,the,controller,method,as,follows,pre,class,code,taglib,uri,http,www,springframework,org,tags,prefix,s,lt,a,href,s,mvc,url,pc,get,person,arg,0,123,build,gt,get,person,lt,a,gt,pre,p,note,that,it,s,not,necessary,to,specify,all,arguments,only,the,ones,required,to,prepare,the,url,mainly,code,request,param,and,code,path,variable,param,mapping,name,the,mapping,name,return,a,builder,to,prepare,the,uri,string,throws,illegal,argument,exception,if,the,mapping,name,is,not,found,or,if,there,is,no,unique,match,since,4,1;public,static,method,argument,builder,from,mapping,name,string,mapping,name,return,from,mapping,name,null,mapping,name
MvcUriComponentsBuilder -> public static MethodArgumentBuilder fromMappingName(String mappingName);1467726769;Create a URL from the name of a Spring MVC controller method's request mapping._<p>The configured_{@link org.springframework.web.servlet.handler.HandlerMethodMappingNamingStrategy_HandlerMethodMappingNamingStrategy} determines the names of controller_method request mappings at startup. By default all mappings are assigned_a name based on the capital letters of the class name, followed by "#" as_separator, and then the method name. For example "PC#getPerson"_for a class named PersonController with method getPerson. In case the_naming convention does not produce unique results, an explicit name may_be assigned through the name attribute of the {@code @RequestMapping}_annotation._<p>This is aimed primarily for use in view rendering technologies and EL_expressions. The Spring URL tag library registers this method as a function_called "mvcUrl"._<p>For example, given this controller:_<pre class="code">_&#064_RequestMapping("/people")_class PersonController {__&#064_RequestMapping("/{id}")_public HttpEntity<Void> getPerson(&#064_PathVariable String id) { ... }___</pre>__A JSP can prepare a URL to the controller method as follows:__<pre class="code">_<%@ taglib uri="http://www.springframework.org/tags" prefix="s" %>__&lt_a href="${s:mvcUrl('PC#getPerson').arg(0,"123").build()}"&gt_Get Person&lt_/a&gt__</pre>_<p>Note that it's not necessary to specify all arguments. Only the ones_required to prepare the URL, mainly {@code @RequestParam} and {@code @PathVariable})._@param mappingName the mapping name_@return a builder to prepare the URI String_@throws IllegalArgumentException if the mapping name is not found or_if there is no unique match_@since 4.1;public static MethodArgumentBuilder fromMappingName(String mappingName) {_		return fromMappingName(null, mappingName)__	};create,a,url,from,the,name,of,a,spring,mvc,controller,method,s,request,mapping,p,the,configured,link,org,springframework,web,servlet,handler,handler,method,mapping,naming,strategy,handler,method,mapping,naming,strategy,determines,the,names,of,controller,method,request,mappings,at,startup,by,default,all,mappings,are,assigned,a,name,based,on,the,capital,letters,of,the,class,name,followed,by,as,separator,and,then,the,method,name,for,example,pc,get,person,for,a,class,named,person,controller,with,method,get,person,in,case,the,naming,convention,does,not,produce,unique,results,an,explicit,name,may,be,assigned,through,the,name,attribute,of,the,code,request,mapping,annotation,p,this,is,aimed,primarily,for,use,in,view,rendering,technologies,and,el,expressions,the,spring,url,tag,library,registers,this,method,as,a,function,called,mvc,url,p,for,example,given,this,controller,pre,class,code,064,request,mapping,people,class,person,controller,064,request,mapping,id,public,http,entity,void,get,person,064,path,variable,string,id,pre,a,jsp,can,prepare,a,url,to,the,controller,method,as,follows,pre,class,code,taglib,uri,http,www,springframework,org,tags,prefix,s,lt,a,href,s,mvc,url,pc,get,person,arg,0,123,build,gt,get,person,lt,a,gt,pre,p,note,that,it,s,not,necessary,to,specify,all,arguments,only,the,ones,required,to,prepare,the,url,mainly,code,request,param,and,code,path,variable,param,mapping,name,the,mapping,name,return,a,builder,to,prepare,the,uri,string,throws,illegal,argument,exception,if,the,mapping,name,is,not,found,or,if,there,is,no,unique,match,since,4,1;public,static,method,argument,builder,from,mapping,name,string,mapping,name,return,from,mapping,name,null,mapping,name
MvcUriComponentsBuilder -> public static MethodArgumentBuilder fromMappingName(String mappingName);1467730834;Create a URL from the name of a Spring MVC controller method's request mapping._<p>The configured_{@link org.springframework.web.servlet.handler.HandlerMethodMappingNamingStrategy_HandlerMethodMappingNamingStrategy} determines the names of controller_method request mappings at startup. By default all mappings are assigned_a name based on the capital letters of the class name, followed by "#" as_separator, and then the method name. For example "PC#getPerson"_for a class named PersonController with method getPerson. In case the_naming convention does not produce unique results, an explicit name may_be assigned through the name attribute of the {@code @RequestMapping}_annotation._<p>This is aimed primarily for use in view rendering technologies and EL_expressions. The Spring URL tag library registers this method as a function_called "mvcUrl"._<p>For example, given this controller:_<pre class="code">_&#064_RequestMapping("/people")_class PersonController {__&#064_RequestMapping("/{id}")_public HttpEntity<Void> getPerson(&#064_PathVariable String id) { ... }___</pre>__A JSP can prepare a URL to the controller method as follows:__<pre class="code">_<%@ taglib uri="http://www.springframework.org/tags" prefix="s" %>__&lt_a href="${s:mvcUrl('PC#getPerson').arg(0,"123").build()}"&gt_Get Person&lt_/a&gt__</pre>_<p>Note that it's not necessary to specify all arguments. Only the ones_required to prepare the URL, mainly {@code @RequestParam} and {@code @PathVariable})._@param mappingName the mapping name_@return a builder to prepare the URI String_@throws IllegalArgumentException if the mapping name is not found or_if there is no unique match_@since 4.1;public static MethodArgumentBuilder fromMappingName(String mappingName) {_		return fromMappingName(null, mappingName)__	};create,a,url,from,the,name,of,a,spring,mvc,controller,method,s,request,mapping,p,the,configured,link,org,springframework,web,servlet,handler,handler,method,mapping,naming,strategy,handler,method,mapping,naming,strategy,determines,the,names,of,controller,method,request,mappings,at,startup,by,default,all,mappings,are,assigned,a,name,based,on,the,capital,letters,of,the,class,name,followed,by,as,separator,and,then,the,method,name,for,example,pc,get,person,for,a,class,named,person,controller,with,method,get,person,in,case,the,naming,convention,does,not,produce,unique,results,an,explicit,name,may,be,assigned,through,the,name,attribute,of,the,code,request,mapping,annotation,p,this,is,aimed,primarily,for,use,in,view,rendering,technologies,and,el,expressions,the,spring,url,tag,library,registers,this,method,as,a,function,called,mvc,url,p,for,example,given,this,controller,pre,class,code,064,request,mapping,people,class,person,controller,064,request,mapping,id,public,http,entity,void,get,person,064,path,variable,string,id,pre,a,jsp,can,prepare,a,url,to,the,controller,method,as,follows,pre,class,code,taglib,uri,http,www,springframework,org,tags,prefix,s,lt,a,href,s,mvc,url,pc,get,person,arg,0,123,build,gt,get,person,lt,a,gt,pre,p,note,that,it,s,not,necessary,to,specify,all,arguments,only,the,ones,required,to,prepare,the,url,mainly,code,request,param,and,code,path,variable,param,mapping,name,the,mapping,name,return,a,builder,to,prepare,the,uri,string,throws,illegal,argument,exception,if,the,mapping,name,is,not,found,or,if,there,is,no,unique,match,since,4,1;public,static,method,argument,builder,from,mapping,name,string,mapping,name,return,from,mapping,name,null,mapping,name
MvcUriComponentsBuilder -> public static MethodArgumentBuilder fromMappingName(String mappingName);1467846264;Create a URL from the name of a Spring MVC controller method's request mapping._<p>The configured_{@link org.springframework.web.servlet.handler.HandlerMethodMappingNamingStrategy_HandlerMethodMappingNamingStrategy} determines the names of controller_method request mappings at startup. By default all mappings are assigned_a name based on the capital letters of the class name, followed by "#" as_separator, and then the method name. For example "PC#getPerson"_for a class named PersonController with method getPerson. In case the_naming convention does not produce unique results, an explicit name may_be assigned through the name attribute of the {@code @RequestMapping}_annotation._<p>This is aimed primarily for use in view rendering technologies and EL_expressions. The Spring URL tag library registers this method as a function_called "mvcUrl"._<p>For example, given this controller:_<pre class="code">_&#064_RequestMapping("/people")_class PersonController {__&#064_RequestMapping("/{id}")_public HttpEntity<Void> getPerson(&#064_PathVariable String id) { ... }___</pre>__A JSP can prepare a URL to the controller method as follows:__<pre class="code">_<%@ taglib uri="http://www.springframework.org/tags" prefix="s" %>__&lt_a href="${s:mvcUrl('PC#getPerson').arg(0,"123").build()}"&gt_Get Person&lt_/a&gt__</pre>_<p>Note that it's not necessary to specify all arguments. Only the ones_required to prepare the URL, mainly {@code @RequestParam} and {@code @PathVariable})._@param mappingName the mapping name_@return a builder to prepare the URI String_@throws IllegalArgumentException if the mapping name is not found or_if there is no unique match_@since 4.1;public static MethodArgumentBuilder fromMappingName(String mappingName) {_		return fromMappingName(null, mappingName)__	};create,a,url,from,the,name,of,a,spring,mvc,controller,method,s,request,mapping,p,the,configured,link,org,springframework,web,servlet,handler,handler,method,mapping,naming,strategy,handler,method,mapping,naming,strategy,determines,the,names,of,controller,method,request,mappings,at,startup,by,default,all,mappings,are,assigned,a,name,based,on,the,capital,letters,of,the,class,name,followed,by,as,separator,and,then,the,method,name,for,example,pc,get,person,for,a,class,named,person,controller,with,method,get,person,in,case,the,naming,convention,does,not,produce,unique,results,an,explicit,name,may,be,assigned,through,the,name,attribute,of,the,code,request,mapping,annotation,p,this,is,aimed,primarily,for,use,in,view,rendering,technologies,and,el,expressions,the,spring,url,tag,library,registers,this,method,as,a,function,called,mvc,url,p,for,example,given,this,controller,pre,class,code,064,request,mapping,people,class,person,controller,064,request,mapping,id,public,http,entity,void,get,person,064,path,variable,string,id,pre,a,jsp,can,prepare,a,url,to,the,controller,method,as,follows,pre,class,code,taglib,uri,http,www,springframework,org,tags,prefix,s,lt,a,href,s,mvc,url,pc,get,person,arg,0,123,build,gt,get,person,lt,a,gt,pre,p,note,that,it,s,not,necessary,to,specify,all,arguments,only,the,ones,required,to,prepare,the,url,mainly,code,request,param,and,code,path,variable,param,mapping,name,the,mapping,name,return,a,builder,to,prepare,the,uri,string,throws,illegal,argument,exception,if,the,mapping,name,is,not,found,or,if,there,is,no,unique,match,since,4,1;public,static,method,argument,builder,from,mapping,name,string,mapping,name,return,from,mapping,name,null,mapping,name
MvcUriComponentsBuilder -> public static MethodArgumentBuilder fromMappingName(String mappingName);1468613531;Create a URL from the name of a Spring MVC controller method's request mapping._<p>The configured_{@link org.springframework.web.servlet.handler.HandlerMethodMappingNamingStrategy_HandlerMethodMappingNamingStrategy} determines the names of controller_method request mappings at startup. By default all mappings are assigned_a name based on the capital letters of the class name, followed by "#" as_separator, and then the method name. For example "PC#getPerson"_for a class named PersonController with method getPerson. In case the_naming convention does not produce unique results, an explicit name may_be assigned through the name attribute of the {@code @RequestMapping}_annotation._<p>This is aimed primarily for use in view rendering technologies and EL_expressions. The Spring URL tag library registers this method as a function_called "mvcUrl"._<p>For example, given this controller:_<pre class="code">_&#064_RequestMapping("/people")_class PersonController {__&#064_RequestMapping("/{id}")_public HttpEntity<Void> getPerson(&#064_PathVariable String id) { ... }___</pre>__A JSP can prepare a URL to the controller method as follows:__<pre class="code">_<%@ taglib uri="http://www.springframework.org/tags" prefix="s" %>__&lt_a href="${s:mvcUrl('PC#getPerson').arg(0,"123").build()}"&gt_Get Person&lt_/a&gt__</pre>_<p>Note that it's not necessary to specify all arguments. Only the ones_required to prepare the URL, mainly {@code @RequestParam} and {@code @PathVariable})._@param mappingName the mapping name_@return a builder to prepare the URI String_@throws IllegalArgumentException if the mapping name is not found or_if there is no unique match_@since 4.1;public static MethodArgumentBuilder fromMappingName(String mappingName) {_		return fromMappingName(null, mappingName)__	};create,a,url,from,the,name,of,a,spring,mvc,controller,method,s,request,mapping,p,the,configured,link,org,springframework,web,servlet,handler,handler,method,mapping,naming,strategy,handler,method,mapping,naming,strategy,determines,the,names,of,controller,method,request,mappings,at,startup,by,default,all,mappings,are,assigned,a,name,based,on,the,capital,letters,of,the,class,name,followed,by,as,separator,and,then,the,method,name,for,example,pc,get,person,for,a,class,named,person,controller,with,method,get,person,in,case,the,naming,convention,does,not,produce,unique,results,an,explicit,name,may,be,assigned,through,the,name,attribute,of,the,code,request,mapping,annotation,p,this,is,aimed,primarily,for,use,in,view,rendering,technologies,and,el,expressions,the,spring,url,tag,library,registers,this,method,as,a,function,called,mvc,url,p,for,example,given,this,controller,pre,class,code,064,request,mapping,people,class,person,controller,064,request,mapping,id,public,http,entity,void,get,person,064,path,variable,string,id,pre,a,jsp,can,prepare,a,url,to,the,controller,method,as,follows,pre,class,code,taglib,uri,http,www,springframework,org,tags,prefix,s,lt,a,href,s,mvc,url,pc,get,person,arg,0,123,build,gt,get,person,lt,a,gt,pre,p,note,that,it,s,not,necessary,to,specify,all,arguments,only,the,ones,required,to,prepare,the,url,mainly,code,request,param,and,code,path,variable,param,mapping,name,the,mapping,name,return,a,builder,to,prepare,the,uri,string,throws,illegal,argument,exception,if,the,mapping,name,is,not,found,or,if,there,is,no,unique,match,since,4,1;public,static,method,argument,builder,from,mapping,name,string,mapping,name,return,from,mapping,name,null,mapping,name
MvcUriComponentsBuilder -> public static MethodArgumentBuilder fromMappingName(String mappingName);1468948866;Create a URL from the name of a Spring MVC controller method's request mapping._<p>The configured_{@link org.springframework.web.servlet.handler.HandlerMethodMappingNamingStrategy_HandlerMethodMappingNamingStrategy} determines the names of controller_method request mappings at startup. By default all mappings are assigned_a name based on the capital letters of the class name, followed by "#" as_separator, and then the method name. For example "PC#getPerson"_for a class named PersonController with method getPerson. In case the_naming convention does not produce unique results, an explicit name may_be assigned through the name attribute of the {@code @RequestMapping}_annotation._<p>This is aimed primarily for use in view rendering technologies and EL_expressions. The Spring URL tag library registers this method as a function_called "mvcUrl"._<p>For example, given this controller:_<pre class="code">_&#064_RequestMapping("/people")_class PersonController {__&#064_RequestMapping("/{id}")_public HttpEntity<Void> getPerson(&#064_PathVariable String id) { ... }___</pre>__A JSP can prepare a URL to the controller method as follows:__<pre class="code">_<%@ taglib uri="http://www.springframework.org/tags" prefix="s" %>__&lt_a href="${s:mvcUrl('PC#getPerson').arg(0,"123").build()}"&gt_Get Person&lt_/a&gt__</pre>_<p>Note that it's not necessary to specify all arguments. Only the ones_required to prepare the URL, mainly {@code @RequestParam} and {@code @PathVariable})._@param mappingName the mapping name_@return a builder to prepare the URI String_@throws IllegalArgumentException if the mapping name is not found or_if there is no unique match_@since 4.1;public static MethodArgumentBuilder fromMappingName(String mappingName) {_		return fromMappingName(null, mappingName)__	};create,a,url,from,the,name,of,a,spring,mvc,controller,method,s,request,mapping,p,the,configured,link,org,springframework,web,servlet,handler,handler,method,mapping,naming,strategy,handler,method,mapping,naming,strategy,determines,the,names,of,controller,method,request,mappings,at,startup,by,default,all,mappings,are,assigned,a,name,based,on,the,capital,letters,of,the,class,name,followed,by,as,separator,and,then,the,method,name,for,example,pc,get,person,for,a,class,named,person,controller,with,method,get,person,in,case,the,naming,convention,does,not,produce,unique,results,an,explicit,name,may,be,assigned,through,the,name,attribute,of,the,code,request,mapping,annotation,p,this,is,aimed,primarily,for,use,in,view,rendering,technologies,and,el,expressions,the,spring,url,tag,library,registers,this,method,as,a,function,called,mvc,url,p,for,example,given,this,controller,pre,class,code,064,request,mapping,people,class,person,controller,064,request,mapping,id,public,http,entity,void,get,person,064,path,variable,string,id,pre,a,jsp,can,prepare,a,url,to,the,controller,method,as,follows,pre,class,code,taglib,uri,http,www,springframework,org,tags,prefix,s,lt,a,href,s,mvc,url,pc,get,person,arg,0,123,build,gt,get,person,lt,a,gt,pre,p,note,that,it,s,not,necessary,to,specify,all,arguments,only,the,ones,required,to,prepare,the,url,mainly,code,request,param,and,code,path,variable,param,mapping,name,the,mapping,name,return,a,builder,to,prepare,the,uri,string,throws,illegal,argument,exception,if,the,mapping,name,is,not,found,or,if,there,is,no,unique,match,since,4,1;public,static,method,argument,builder,from,mapping,name,string,mapping,name,return,from,mapping,name,null,mapping,name
MvcUriComponentsBuilder -> public static MethodArgumentBuilder fromMappingName(String mappingName);1485810955;Create a URL from the name of a Spring MVC controller method's request mapping._<p>The configured_{@link org.springframework.web.servlet.handler.HandlerMethodMappingNamingStrategy_HandlerMethodMappingNamingStrategy} determines the names of controller_method request mappings at startup. By default all mappings are assigned_a name based on the capital letters of the class name, followed by "#" as_separator, and then the method name. For example "PC#getPerson"_for a class named PersonController with method getPerson. In case the_naming convention does not produce unique results, an explicit name may_be assigned through the name attribute of the {@code @RequestMapping}_annotation._<p>This is aimed primarily for use in view rendering technologies and EL_expressions. The Spring URL tag library registers this method as a function_called "mvcUrl"._<p>For example, given this controller:_<pre class="code">_&#064_RequestMapping("/people")_class PersonController {__&#064_RequestMapping("/{id}")_public HttpEntity<Void> getPerson(&#064_PathVariable String id) { ... }___</pre>__A JSP can prepare a URL to the controller method as follows:__<pre class="code">_<%@ taglib uri="http://www.springframework.org/tags" prefix="s" %>__&lt_a href="${s:mvcUrl('PC#getPerson').arg(0,"123").build()}"&gt_Get Person&lt_/a&gt__</pre>_<p>Note that it's not necessary to specify all arguments. Only the ones_required to prepare the URL, mainly {@code @RequestParam} and {@code @PathVariable})._@param mappingName the mapping name_@return a builder to prepare the URI String_@throws IllegalArgumentException if the mapping name is not found or_if there is no unique match_@since 4.1;public static MethodArgumentBuilder fromMappingName(String mappingName) {_		return fromMappingName(null, mappingName)__	};create,a,url,from,the,name,of,a,spring,mvc,controller,method,s,request,mapping,p,the,configured,link,org,springframework,web,servlet,handler,handler,method,mapping,naming,strategy,handler,method,mapping,naming,strategy,determines,the,names,of,controller,method,request,mappings,at,startup,by,default,all,mappings,are,assigned,a,name,based,on,the,capital,letters,of,the,class,name,followed,by,as,separator,and,then,the,method,name,for,example,pc,get,person,for,a,class,named,person,controller,with,method,get,person,in,case,the,naming,convention,does,not,produce,unique,results,an,explicit,name,may,be,assigned,through,the,name,attribute,of,the,code,request,mapping,annotation,p,this,is,aimed,primarily,for,use,in,view,rendering,technologies,and,el,expressions,the,spring,url,tag,library,registers,this,method,as,a,function,called,mvc,url,p,for,example,given,this,controller,pre,class,code,064,request,mapping,people,class,person,controller,064,request,mapping,id,public,http,entity,void,get,person,064,path,variable,string,id,pre,a,jsp,can,prepare,a,url,to,the,controller,method,as,follows,pre,class,code,taglib,uri,http,www,springframework,org,tags,prefix,s,lt,a,href,s,mvc,url,pc,get,person,arg,0,123,build,gt,get,person,lt,a,gt,pre,p,note,that,it,s,not,necessary,to,specify,all,arguments,only,the,ones,required,to,prepare,the,url,mainly,code,request,param,and,code,path,variable,param,mapping,name,the,mapping,name,return,a,builder,to,prepare,the,uri,string,throws,illegal,argument,exception,if,the,mapping,name,is,not,found,or,if,there,is,no,unique,match,since,4,1;public,static,method,argument,builder,from,mapping,name,string,mapping,name,return,from,mapping,name,null,mapping,name
MvcUriComponentsBuilder -> public static MethodArgumentBuilder fromMappingName(String mappingName);1486634978;Create a URL from the name of a Spring MVC controller method's request mapping._<p>The configured_{@link org.springframework.web.servlet.handler.HandlerMethodMappingNamingStrategy_HandlerMethodMappingNamingStrategy} determines the names of controller_method request mappings at startup. By default all mappings are assigned_a name based on the capital letters of the class name, followed by "#" as_separator, and then the method name. For example "PC#getPerson"_for a class named PersonController with method getPerson. In case the_naming convention does not produce unique results, an explicit name may_be assigned through the name attribute of the {@code @RequestMapping}_annotation._<p>This is aimed primarily for use in view rendering technologies and EL_expressions. The Spring URL tag library registers this method as a function_called "mvcUrl"._<p>For example, given this controller:_<pre class="code">_&#064_RequestMapping("/people")_class PersonController {__&#064_RequestMapping("/{id}")_public HttpEntity<Void> getPerson(&#064_PathVariable String id) { ... }___</pre>__A JSP can prepare a URL to the controller method as follows:__<pre class="code">_<%@ taglib uri="http://www.springframework.org/tags" prefix="s" %>__&lt_a href="${s:mvcUrl('PC#getPerson').arg(0,"123").build()}"&gt_Get Person&lt_/a&gt__</pre>_<p>Note that it's not necessary to specify all arguments. Only the ones_required to prepare the URL, mainly {@code @RequestParam} and {@code @PathVariable})._@param mappingName the mapping name_@return a builder to prepare the URI String_@throws IllegalArgumentException if the mapping name is not found or_if there is no unique match_@since 4.1;public static MethodArgumentBuilder fromMappingName(String mappingName) {_		return fromMappingName(null, mappingName)__	};create,a,url,from,the,name,of,a,spring,mvc,controller,method,s,request,mapping,p,the,configured,link,org,springframework,web,servlet,handler,handler,method,mapping,naming,strategy,handler,method,mapping,naming,strategy,determines,the,names,of,controller,method,request,mappings,at,startup,by,default,all,mappings,are,assigned,a,name,based,on,the,capital,letters,of,the,class,name,followed,by,as,separator,and,then,the,method,name,for,example,pc,get,person,for,a,class,named,person,controller,with,method,get,person,in,case,the,naming,convention,does,not,produce,unique,results,an,explicit,name,may,be,assigned,through,the,name,attribute,of,the,code,request,mapping,annotation,p,this,is,aimed,primarily,for,use,in,view,rendering,technologies,and,el,expressions,the,spring,url,tag,library,registers,this,method,as,a,function,called,mvc,url,p,for,example,given,this,controller,pre,class,code,064,request,mapping,people,class,person,controller,064,request,mapping,id,public,http,entity,void,get,person,064,path,variable,string,id,pre,a,jsp,can,prepare,a,url,to,the,controller,method,as,follows,pre,class,code,taglib,uri,http,www,springframework,org,tags,prefix,s,lt,a,href,s,mvc,url,pc,get,person,arg,0,123,build,gt,get,person,lt,a,gt,pre,p,note,that,it,s,not,necessary,to,specify,all,arguments,only,the,ones,required,to,prepare,the,url,mainly,code,request,param,and,code,path,variable,param,mapping,name,the,mapping,name,return,a,builder,to,prepare,the,uri,string,throws,illegal,argument,exception,if,the,mapping,name,is,not,found,or,if,there,is,no,unique,match,since,4,1;public,static,method,argument,builder,from,mapping,name,string,mapping,name,return,from,mapping,name,null,mapping,name
MvcUriComponentsBuilder -> public static MethodArgumentBuilder fromMappingName(String mappingName);1486635693;Create a URL from the name of a Spring MVC controller method's request mapping._<p>The configured_{@link org.springframework.web.servlet.handler.HandlerMethodMappingNamingStrategy_HandlerMethodMappingNamingStrategy} determines the names of controller_method request mappings at startup. By default all mappings are assigned_a name based on the capital letters of the class name, followed by "#" as_separator, and then the method name. For example "PC#getPerson"_for a class named PersonController with method getPerson. In case the_naming convention does not produce unique results, an explicit name may_be assigned through the name attribute of the {@code @RequestMapping}_annotation._<p>This is aimed primarily for use in view rendering technologies and EL_expressions. The Spring URL tag library registers this method as a function_called "mvcUrl"._<p>For example, given this controller:_<pre class="code">_&#064_RequestMapping("/people")_class PersonController {__&#064_RequestMapping("/{id}")_public HttpEntity<Void> getPerson(&#064_PathVariable String id) { ... }___</pre>__A JSP can prepare a URL to the controller method as follows:__<pre class="code">_<%@ taglib uri="http://www.springframework.org/tags" prefix="s" %>__&lt_a href="${s:mvcUrl('PC#getPerson').arg(0,"123").build()}"&gt_Get Person&lt_/a&gt__</pre>_<p>Note that it's not necessary to specify all arguments. Only the ones_required to prepare the URL, mainly {@code @RequestParam} and {@code @PathVariable})._@param mappingName the mapping name_@return a builder to prepare the URI String_@throws IllegalArgumentException if the mapping name is not found or_if there is no unique match_@since 4.1;public static MethodArgumentBuilder fromMappingName(String mappingName) {_		return fromMappingName(null, mappingName)__	};create,a,url,from,the,name,of,a,spring,mvc,controller,method,s,request,mapping,p,the,configured,link,org,springframework,web,servlet,handler,handler,method,mapping,naming,strategy,handler,method,mapping,naming,strategy,determines,the,names,of,controller,method,request,mappings,at,startup,by,default,all,mappings,are,assigned,a,name,based,on,the,capital,letters,of,the,class,name,followed,by,as,separator,and,then,the,method,name,for,example,pc,get,person,for,a,class,named,person,controller,with,method,get,person,in,case,the,naming,convention,does,not,produce,unique,results,an,explicit,name,may,be,assigned,through,the,name,attribute,of,the,code,request,mapping,annotation,p,this,is,aimed,primarily,for,use,in,view,rendering,technologies,and,el,expressions,the,spring,url,tag,library,registers,this,method,as,a,function,called,mvc,url,p,for,example,given,this,controller,pre,class,code,064,request,mapping,people,class,person,controller,064,request,mapping,id,public,http,entity,void,get,person,064,path,variable,string,id,pre,a,jsp,can,prepare,a,url,to,the,controller,method,as,follows,pre,class,code,taglib,uri,http,www,springframework,org,tags,prefix,s,lt,a,href,s,mvc,url,pc,get,person,arg,0,123,build,gt,get,person,lt,a,gt,pre,p,note,that,it,s,not,necessary,to,specify,all,arguments,only,the,ones,required,to,prepare,the,url,mainly,code,request,param,and,code,path,variable,param,mapping,name,the,mapping,name,return,a,builder,to,prepare,the,uri,string,throws,illegal,argument,exception,if,the,mapping,name,is,not,found,or,if,there,is,no,unique,match,since,4,1;public,static,method,argument,builder,from,mapping,name,string,mapping,name,return,from,mapping,name,null,mapping,name
MvcUriComponentsBuilder -> public static MethodArgumentBuilder fromMappingName(String mappingName);1495868221;Create a URL from the name of a Spring MVC controller method's request mapping._<p>The configured_{@link org.springframework.web.servlet.handler.HandlerMethodMappingNamingStrategy_HandlerMethodMappingNamingStrategy} determines the names of controller_method request mappings at startup. By default all mappings are assigned_a name based on the capital letters of the class name, followed by "#" as_separator, and then the method name. For example "PC#getPerson"_for a class named PersonController with method getPerson. In case the_naming convention does not produce unique results, an explicit name may_be assigned through the name attribute of the {@code @RequestMapping}_annotation._<p>This is aimed primarily for use in view rendering technologies and EL_expressions. The Spring URL tag library registers this method as a function_called "mvcUrl"._<p>For example, given this controller:_<pre class="code">_&#064_RequestMapping("/people")_class PersonController {__&#064_RequestMapping("/{id}")_public HttpEntity<Void> getPerson(&#064_PathVariable String id) { ... }___</pre>__A JSP can prepare a URL to the controller method as follows:__<pre class="code">_<%@ taglib uri="http://www.springframework.org/tags" prefix="s" %>__&lt_a href="${s:mvcUrl('PC#getPerson').arg(0,"123").build()}"&gt_Get Person&lt_/a&gt__</pre>_<p>Note that it's not necessary to specify all arguments. Only the ones_required to prepare the URL, mainly {@code @RequestParam} and {@code @PathVariable})._@param mappingName the mapping name_@return a builder to prepare the URI String_@throws IllegalArgumentException if the mapping name is not found or_if there is no unique match_@since 4.1;public static MethodArgumentBuilder fromMappingName(String mappingName) {_		return fromMappingName(null, mappingName)__	};create,a,url,from,the,name,of,a,spring,mvc,controller,method,s,request,mapping,p,the,configured,link,org,springframework,web,servlet,handler,handler,method,mapping,naming,strategy,handler,method,mapping,naming,strategy,determines,the,names,of,controller,method,request,mappings,at,startup,by,default,all,mappings,are,assigned,a,name,based,on,the,capital,letters,of,the,class,name,followed,by,as,separator,and,then,the,method,name,for,example,pc,get,person,for,a,class,named,person,controller,with,method,get,person,in,case,the,naming,convention,does,not,produce,unique,results,an,explicit,name,may,be,assigned,through,the,name,attribute,of,the,code,request,mapping,annotation,p,this,is,aimed,primarily,for,use,in,view,rendering,technologies,and,el,expressions,the,spring,url,tag,library,registers,this,method,as,a,function,called,mvc,url,p,for,example,given,this,controller,pre,class,code,064,request,mapping,people,class,person,controller,064,request,mapping,id,public,http,entity,void,get,person,064,path,variable,string,id,pre,a,jsp,can,prepare,a,url,to,the,controller,method,as,follows,pre,class,code,taglib,uri,http,www,springframework,org,tags,prefix,s,lt,a,href,s,mvc,url,pc,get,person,arg,0,123,build,gt,get,person,lt,a,gt,pre,p,note,that,it,s,not,necessary,to,specify,all,arguments,only,the,ones,required,to,prepare,the,url,mainly,code,request,param,and,code,path,variable,param,mapping,name,the,mapping,name,return,a,builder,to,prepare,the,uri,string,throws,illegal,argument,exception,if,the,mapping,name,is,not,found,or,if,there,is,no,unique,match,since,4,1;public,static,method,argument,builder,from,mapping,name,string,mapping,name,return,from,mapping,name,null,mapping,name
MvcUriComponentsBuilder -> public static MethodArgumentBuilder fromMappingName(String mappingName);1496242568;Create a URL from the name of a Spring MVC controller method's request mapping._<p>The configured_{@link org.springframework.web.servlet.handler.HandlerMethodMappingNamingStrategy_HandlerMethodMappingNamingStrategy} determines the names of controller_method request mappings at startup. By default all mappings are assigned_a name based on the capital letters of the class name, followed by "#" as_separator, and then the method name. For example "PC#getPerson"_for a class named PersonController with method getPerson. In case the_naming convention does not produce unique results, an explicit name may_be assigned through the name attribute of the {@code @RequestMapping}_annotation._<p>This is aimed primarily for use in view rendering technologies and EL_expressions. The Spring URL tag library registers this method as a function_called "mvcUrl"._<p>For example, given this controller:_<pre class="code">_&#064_RequestMapping("/people")_class PersonController {__&#064_RequestMapping("/{id}")_public HttpEntity<Void> getPerson(&#064_PathVariable String id) { ... }___</pre>__A JSP can prepare a URL to the controller method as follows:__<pre class="code">_<%@ taglib uri="http://www.springframework.org/tags" prefix="s" %>__&lt_a href="${s:mvcUrl('PC#getPerson').arg(0,"123").build()}"&gt_Get Person&lt_/a&gt__</pre>_<p>Note that it's not necessary to specify all arguments. Only the ones_required to prepare the URL, mainly {@code @RequestParam} and {@code @PathVariable})._@param mappingName the mapping name_@return a builder to prepare the URI String_@throws IllegalArgumentException if the mapping name is not found or_if there is no unique match_@since 4.1;public static MethodArgumentBuilder fromMappingName(String mappingName) {_		return fromMappingName(null, mappingName)__	};create,a,url,from,the,name,of,a,spring,mvc,controller,method,s,request,mapping,p,the,configured,link,org,springframework,web,servlet,handler,handler,method,mapping,naming,strategy,handler,method,mapping,naming,strategy,determines,the,names,of,controller,method,request,mappings,at,startup,by,default,all,mappings,are,assigned,a,name,based,on,the,capital,letters,of,the,class,name,followed,by,as,separator,and,then,the,method,name,for,example,pc,get,person,for,a,class,named,person,controller,with,method,get,person,in,case,the,naming,convention,does,not,produce,unique,results,an,explicit,name,may,be,assigned,through,the,name,attribute,of,the,code,request,mapping,annotation,p,this,is,aimed,primarily,for,use,in,view,rendering,technologies,and,el,expressions,the,spring,url,tag,library,registers,this,method,as,a,function,called,mvc,url,p,for,example,given,this,controller,pre,class,code,064,request,mapping,people,class,person,controller,064,request,mapping,id,public,http,entity,void,get,person,064,path,variable,string,id,pre,a,jsp,can,prepare,a,url,to,the,controller,method,as,follows,pre,class,code,taglib,uri,http,www,springframework,org,tags,prefix,s,lt,a,href,s,mvc,url,pc,get,person,arg,0,123,build,gt,get,person,lt,a,gt,pre,p,note,that,it,s,not,necessary,to,specify,all,arguments,only,the,ones,required,to,prepare,the,url,mainly,code,request,param,and,code,path,variable,param,mapping,name,the,mapping,name,return,a,builder,to,prepare,the,uri,string,throws,illegal,argument,exception,if,the,mapping,name,is,not,found,or,if,there,is,no,unique,match,since,4,1;public,static,method,argument,builder,from,mapping,name,string,mapping,name,return,from,mapping,name,null,mapping,name
MvcUriComponentsBuilder -> public static MethodArgumentBuilder fromMappingName(String mappingName);1496259743;Create a URL from the name of a Spring MVC controller method's request mapping._<p>The configured_{@link org.springframework.web.servlet.handler.HandlerMethodMappingNamingStrategy_HandlerMethodMappingNamingStrategy} determines the names of controller_method request mappings at startup. By default all mappings are assigned_a name based on the capital letters of the class name, followed by "#" as_separator, and then the method name. For example "PC#getPerson"_for a class named PersonController with method getPerson. In case the_naming convention does not produce unique results, an explicit name may_be assigned through the name attribute of the {@code @RequestMapping}_annotation._<p>This is aimed primarily for use in view rendering technologies and EL_expressions. The Spring URL tag library registers this method as a function_called "mvcUrl"._<p>For example, given this controller:_<pre class="code">_&#064_RequestMapping("/people")_class PersonController {__&#064_RequestMapping("/{id}")_public HttpEntity<Void> getPerson(&#064_PathVariable String id) { ... }___</pre>__A JSP can prepare a URL to the controller method as follows:__<pre class="code">_<%@ taglib uri="http://www.springframework.org/tags" prefix="s" %>__&lt_a href="${s:mvcUrl('PC#getPerson').arg(0,"123").build()}"&gt_Get Person&lt_/a&gt__</pre>_<p>Note that it's not necessary to specify all arguments. Only the ones_required to prepare the URL, mainly {@code @RequestParam} and {@code @PathVariable})._@param mappingName the mapping name_@return a builder to prepare the URI String_@throws IllegalArgumentException if the mapping name is not found or_if there is no unique match_@since 4.1;public static MethodArgumentBuilder fromMappingName(String mappingName) {_		return fromMappingName(null, mappingName)__	};create,a,url,from,the,name,of,a,spring,mvc,controller,method,s,request,mapping,p,the,configured,link,org,springframework,web,servlet,handler,handler,method,mapping,naming,strategy,handler,method,mapping,naming,strategy,determines,the,names,of,controller,method,request,mappings,at,startup,by,default,all,mappings,are,assigned,a,name,based,on,the,capital,letters,of,the,class,name,followed,by,as,separator,and,then,the,method,name,for,example,pc,get,person,for,a,class,named,person,controller,with,method,get,person,in,case,the,naming,convention,does,not,produce,unique,results,an,explicit,name,may,be,assigned,through,the,name,attribute,of,the,code,request,mapping,annotation,p,this,is,aimed,primarily,for,use,in,view,rendering,technologies,and,el,expressions,the,spring,url,tag,library,registers,this,method,as,a,function,called,mvc,url,p,for,example,given,this,controller,pre,class,code,064,request,mapping,people,class,person,controller,064,request,mapping,id,public,http,entity,void,get,person,064,path,variable,string,id,pre,a,jsp,can,prepare,a,url,to,the,controller,method,as,follows,pre,class,code,taglib,uri,http,www,springframework,org,tags,prefix,s,lt,a,href,s,mvc,url,pc,get,person,arg,0,123,build,gt,get,person,lt,a,gt,pre,p,note,that,it,s,not,necessary,to,specify,all,arguments,only,the,ones,required,to,prepare,the,url,mainly,code,request,param,and,code,path,variable,param,mapping,name,the,mapping,name,return,a,builder,to,prepare,the,uri,string,throws,illegal,argument,exception,if,the,mapping,name,is,not,found,or,if,there,is,no,unique,match,since,4,1;public,static,method,argument,builder,from,mapping,name,string,mapping,name,return,from,mapping,name,null,mapping,name
MvcUriComponentsBuilder -> public static MethodArgumentBuilder fromMappingName(String mappingName);1496370972;Create a URL from the name of a Spring MVC controller method's request mapping._<p>The configured_{@link org.springframework.web.servlet.handler.HandlerMethodMappingNamingStrategy_HandlerMethodMappingNamingStrategy} determines the names of controller_method request mappings at startup. By default all mappings are assigned_a name based on the capital letters of the class name, followed by "#" as_separator, and then the method name. For example "PC#getPerson"_for a class named PersonController with method getPerson. In case the_naming convention does not produce unique results, an explicit name may_be assigned through the name attribute of the {@code @RequestMapping}_annotation._<p>This is aimed primarily for use in view rendering technologies and EL_expressions. The Spring URL tag library registers this method as a function_called "mvcUrl"._<p>For example, given this controller:_<pre class="code">_&#064_RequestMapping("/people")_class PersonController {__&#064_RequestMapping("/{id}")_public HttpEntity<Void> getPerson(&#064_PathVariable String id) { ... }___</pre>__A JSP can prepare a URL to the controller method as follows:__<pre class="code">_<%@ taglib uri="http://www.springframework.org/tags" prefix="s" %>__&lt_a href="${s:mvcUrl('PC#getPerson').arg(0,"123").build()}"&gt_Get Person&lt_/a&gt__</pre>_<p>Note that it's not necessary to specify all arguments. Only the ones_required to prepare the URL, mainly {@code @RequestParam} and {@code @PathVariable}).__<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs.__@param mappingName the mapping name_@return a builder to prepare the URI String_@throws IllegalArgumentException if the mapping name is not found or_if there is no unique match_@since 4.1;public static MethodArgumentBuilder fromMappingName(String mappingName) {_		return fromMappingName(null, mappingName)__	};create,a,url,from,the,name,of,a,spring,mvc,controller,method,s,request,mapping,p,the,configured,link,org,springframework,web,servlet,handler,handler,method,mapping,naming,strategy,handler,method,mapping,naming,strategy,determines,the,names,of,controller,method,request,mappings,at,startup,by,default,all,mappings,are,assigned,a,name,based,on,the,capital,letters,of,the,class,name,followed,by,as,separator,and,then,the,method,name,for,example,pc,get,person,for,a,class,named,person,controller,with,method,get,person,in,case,the,naming,convention,does,not,produce,unique,results,an,explicit,name,may,be,assigned,through,the,name,attribute,of,the,code,request,mapping,annotation,p,this,is,aimed,primarily,for,use,in,view,rendering,technologies,and,el,expressions,the,spring,url,tag,library,registers,this,method,as,a,function,called,mvc,url,p,for,example,given,this,controller,pre,class,code,064,request,mapping,people,class,person,controller,064,request,mapping,id,public,http,entity,void,get,person,064,path,variable,string,id,pre,a,jsp,can,prepare,a,url,to,the,controller,method,as,follows,pre,class,code,taglib,uri,http,www,springframework,org,tags,prefix,s,lt,a,href,s,mvc,url,pc,get,person,arg,0,123,build,gt,get,person,lt,a,gt,pre,p,note,that,it,s,not,necessary,to,specify,all,arguments,only,the,ones,required,to,prepare,the,url,mainly,code,request,param,and,code,path,variable,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,mapping,name,the,mapping,name,return,a,builder,to,prepare,the,uri,string,throws,illegal,argument,exception,if,the,mapping,name,is,not,found,or,if,there,is,no,unique,match,since,4,1;public,static,method,argument,builder,from,mapping,name,string,mapping,name,return,from,mapping,name,null,mapping,name
MvcUriComponentsBuilder -> public static MethodArgumentBuilder fromMappingName(String mappingName);1496837955;Create a URL from the name of a Spring MVC controller method's request mapping._<p>The configured_{@link org.springframework.web.servlet.handler.HandlerMethodMappingNamingStrategy_HandlerMethodMappingNamingStrategy} determines the names of controller_method request mappings at startup. By default all mappings are assigned_a name based on the capital letters of the class name, followed by "#" as_separator, and then the method name. For example "PC#getPerson"_for a class named PersonController with method getPerson. In case the_naming convention does not produce unique results, an explicit name may_be assigned through the name attribute of the {@code @RequestMapping}_annotation._<p>This is aimed primarily for use in view rendering technologies and EL_expressions. The Spring URL tag library registers this method as a function_called "mvcUrl"._<p>For example, given this controller:_<pre class="code">_&#064_RequestMapping("/people")_class PersonController {__&#064_RequestMapping("/{id}")_public HttpEntity<Void> getPerson(&#064_PathVariable String id) { ... }___</pre>__A JSP can prepare a URL to the controller method as follows:__<pre class="code">_<%@ taglib uri="http://www.springframework.org/tags" prefix="s" %>__&lt_a href="${s:mvcUrl('PC#getPerson').arg(0,"123").build()}"&gt_Get Person&lt_/a&gt__</pre>_<p>Note that it's not necessary to specify all arguments. Only the ones_required to prepare the URL, mainly {@code @RequestParam} and {@code @PathVariable}).__<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs.__@param mappingName the mapping name_@return a builder to prepare the URI String_@throws IllegalArgumentException if the mapping name is not found or_if there is no unique match_@since 4.1;public static MethodArgumentBuilder fromMappingName(String mappingName) {_		return fromMappingName(null, mappingName)__	};create,a,url,from,the,name,of,a,spring,mvc,controller,method,s,request,mapping,p,the,configured,link,org,springframework,web,servlet,handler,handler,method,mapping,naming,strategy,handler,method,mapping,naming,strategy,determines,the,names,of,controller,method,request,mappings,at,startup,by,default,all,mappings,are,assigned,a,name,based,on,the,capital,letters,of,the,class,name,followed,by,as,separator,and,then,the,method,name,for,example,pc,get,person,for,a,class,named,person,controller,with,method,get,person,in,case,the,naming,convention,does,not,produce,unique,results,an,explicit,name,may,be,assigned,through,the,name,attribute,of,the,code,request,mapping,annotation,p,this,is,aimed,primarily,for,use,in,view,rendering,technologies,and,el,expressions,the,spring,url,tag,library,registers,this,method,as,a,function,called,mvc,url,p,for,example,given,this,controller,pre,class,code,064,request,mapping,people,class,person,controller,064,request,mapping,id,public,http,entity,void,get,person,064,path,variable,string,id,pre,a,jsp,can,prepare,a,url,to,the,controller,method,as,follows,pre,class,code,taglib,uri,http,www,springframework,org,tags,prefix,s,lt,a,href,s,mvc,url,pc,get,person,arg,0,123,build,gt,get,person,lt,a,gt,pre,p,note,that,it,s,not,necessary,to,specify,all,arguments,only,the,ones,required,to,prepare,the,url,mainly,code,request,param,and,code,path,variable,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,mapping,name,the,mapping,name,return,a,builder,to,prepare,the,uri,string,throws,illegal,argument,exception,if,the,mapping,name,is,not,found,or,if,there,is,no,unique,match,since,4,1;public,static,method,argument,builder,from,mapping,name,string,mapping,name,return,from,mapping,name,null,mapping,name
MvcUriComponentsBuilder -> public static MethodArgumentBuilder fromMappingName(String mappingName);1497341397;Create a URL from the name of a Spring MVC controller method's request mapping._<p>The configured_{@link org.springframework.web.servlet.handler.HandlerMethodMappingNamingStrategy_HandlerMethodMappingNamingStrategy} determines the names of controller_method request mappings at startup. By default all mappings are assigned_a name based on the capital letters of the class name, followed by "#" as_separator, and then the method name. For example "PC#getPerson"_for a class named PersonController with method getPerson. In case the_naming convention does not produce unique results, an explicit name may_be assigned through the name attribute of the {@code @RequestMapping}_annotation._<p>This is aimed primarily for use in view rendering technologies and EL_expressions. The Spring URL tag library registers this method as a function_called "mvcUrl"._<p>For example, given this controller:_<pre class="code">_&#064_RequestMapping("/people")_class PersonController {__&#064_RequestMapping("/{id}")_public HttpEntity<Void> getPerson(&#064_PathVariable String id) { ... }___</pre>__A JSP can prepare a URL to the controller method as follows:__<pre class="code">_<%@ taglib uri="http://www.springframework.org/tags" prefix="s" %>__&lt_a href="${s:mvcUrl('PC#getPerson').arg(0,"123").build()}"&gt_Get Person&lt_/a&gt__</pre>_<p>Note that it's not necessary to specify all arguments. Only the ones_required to prepare the URL, mainly {@code @RequestParam} and {@code @PathVariable}).__<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs.__@param mappingName the mapping name_@return a builder to prepare the URI String_@throws IllegalArgumentException if the mapping name is not found or_if there is no unique match_@since 4.1;public static MethodArgumentBuilder fromMappingName(String mappingName) {_		return fromMappingName(null, mappingName)__	};create,a,url,from,the,name,of,a,spring,mvc,controller,method,s,request,mapping,p,the,configured,link,org,springframework,web,servlet,handler,handler,method,mapping,naming,strategy,handler,method,mapping,naming,strategy,determines,the,names,of,controller,method,request,mappings,at,startup,by,default,all,mappings,are,assigned,a,name,based,on,the,capital,letters,of,the,class,name,followed,by,as,separator,and,then,the,method,name,for,example,pc,get,person,for,a,class,named,person,controller,with,method,get,person,in,case,the,naming,convention,does,not,produce,unique,results,an,explicit,name,may,be,assigned,through,the,name,attribute,of,the,code,request,mapping,annotation,p,this,is,aimed,primarily,for,use,in,view,rendering,technologies,and,el,expressions,the,spring,url,tag,library,registers,this,method,as,a,function,called,mvc,url,p,for,example,given,this,controller,pre,class,code,064,request,mapping,people,class,person,controller,064,request,mapping,id,public,http,entity,void,get,person,064,path,variable,string,id,pre,a,jsp,can,prepare,a,url,to,the,controller,method,as,follows,pre,class,code,taglib,uri,http,www,springframework,org,tags,prefix,s,lt,a,href,s,mvc,url,pc,get,person,arg,0,123,build,gt,get,person,lt,a,gt,pre,p,note,that,it,s,not,necessary,to,specify,all,arguments,only,the,ones,required,to,prepare,the,url,mainly,code,request,param,and,code,path,variable,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,mapping,name,the,mapping,name,return,a,builder,to,prepare,the,uri,string,throws,illegal,argument,exception,if,the,mapping,name,is,not,found,or,if,there,is,no,unique,match,since,4,1;public,static,method,argument,builder,from,mapping,name,string,mapping,name,return,from,mapping,name,null,mapping,name
MvcUriComponentsBuilder -> public static MethodArgumentBuilder fromMappingName(String mappingName);1498780456;Create a URL from the name of a Spring MVC controller method's request mapping._<p>The configured_{@link org.springframework.web.servlet.handler.HandlerMethodMappingNamingStrategy_HandlerMethodMappingNamingStrategy} determines the names of controller_method request mappings at startup. By default all mappings are assigned_a name based on the capital letters of the class name, followed by "#" as_separator, and then the method name. For example "PC#getPerson"_for a class named PersonController with method getPerson. In case the_naming convention does not produce unique results, an explicit name may_be assigned through the name attribute of the {@code @RequestMapping}_annotation._<p>This is aimed primarily for use in view rendering technologies and EL_expressions. The Spring URL tag library registers this method as a function_called "mvcUrl"._<p>For example, given this controller:_<pre class="code">_&#064_RequestMapping("/people")_class PersonController {__&#064_RequestMapping("/{id}")_public HttpEntity<Void> getPerson(&#064_PathVariable String id) { ... }___</pre>__A JSP can prepare a URL to the controller method as follows:__<pre class="code">_<%@ taglib uri="http://www.springframework.org/tags" prefix="s" %>__&lt_a href="${s:mvcUrl('PC#getPerson').arg(0,"123").build()}"&gt_Get Person&lt_/a&gt__</pre>_<p>Note that it's not necessary to specify all arguments. Only the ones_required to prepare the URL, mainly {@code @RequestParam} and {@code @PathVariable}).__<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs.__@param mappingName the mapping name_@return a builder to prepare the URI String_@throws IllegalArgumentException if the mapping name is not found or_if there is no unique match_@since 4.1;public static MethodArgumentBuilder fromMappingName(String mappingName) {_		return fromMappingName(null, mappingName)__	};create,a,url,from,the,name,of,a,spring,mvc,controller,method,s,request,mapping,p,the,configured,link,org,springframework,web,servlet,handler,handler,method,mapping,naming,strategy,handler,method,mapping,naming,strategy,determines,the,names,of,controller,method,request,mappings,at,startup,by,default,all,mappings,are,assigned,a,name,based,on,the,capital,letters,of,the,class,name,followed,by,as,separator,and,then,the,method,name,for,example,pc,get,person,for,a,class,named,person,controller,with,method,get,person,in,case,the,naming,convention,does,not,produce,unique,results,an,explicit,name,may,be,assigned,through,the,name,attribute,of,the,code,request,mapping,annotation,p,this,is,aimed,primarily,for,use,in,view,rendering,technologies,and,el,expressions,the,spring,url,tag,library,registers,this,method,as,a,function,called,mvc,url,p,for,example,given,this,controller,pre,class,code,064,request,mapping,people,class,person,controller,064,request,mapping,id,public,http,entity,void,get,person,064,path,variable,string,id,pre,a,jsp,can,prepare,a,url,to,the,controller,method,as,follows,pre,class,code,taglib,uri,http,www,springframework,org,tags,prefix,s,lt,a,href,s,mvc,url,pc,get,person,arg,0,123,build,gt,get,person,lt,a,gt,pre,p,note,that,it,s,not,necessary,to,specify,all,arguments,only,the,ones,required,to,prepare,the,url,mainly,code,request,param,and,code,path,variable,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,mapping,name,the,mapping,name,return,a,builder,to,prepare,the,uri,string,throws,illegal,argument,exception,if,the,mapping,name,is,not,found,or,if,there,is,no,unique,match,since,4,1;public,static,method,argument,builder,from,mapping,name,string,mapping,name,return,from,mapping,name,null,mapping,name
MvcUriComponentsBuilder -> public static MethodArgumentBuilder fromMappingName(String mappingName);1500416137;Create a URL from the name of a Spring MVC controller method's request mapping._<p>The configured_{@link org.springframework.web.servlet.handler.HandlerMethodMappingNamingStrategy_HandlerMethodMappingNamingStrategy} determines the names of controller_method request mappings at startup. By default all mappings are assigned_a name based on the capital letters of the class name, followed by "#" as_separator, and then the method name. For example "PC#getPerson"_for a class named PersonController with method getPerson. In case the_naming convention does not produce unique results, an explicit name may_be assigned through the name attribute of the {@code @RequestMapping}_annotation._<p>This is aimed primarily for use in view rendering technologies and EL_expressions. The Spring URL tag library registers this method as a function_called "mvcUrl"._<p>For example, given this controller:_<pre class="code">_&#064_RequestMapping("/people")_class PersonController {__&#064_RequestMapping("/{id}")_public HttpEntity<Void> getPerson(&#064_PathVariable String id) { ... }___</pre>__A JSP can prepare a URL to the controller method as follows:__<pre class="code">_<%@ taglib uri="http://www.springframework.org/tags" prefix="s" %>__&lt_a href="${s:mvcUrl('PC#getPerson').arg(0,"123").build()}"&gt_Get Person&lt_/a&gt__</pre>_<p>Note that it's not necessary to specify all arguments. Only the ones_required to prepare the URL, mainly {@code @RequestParam} and {@code @PathVariable}).__<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs.__@param mappingName the mapping name_@return a builder to prepare the URI String_@throws IllegalArgumentException if the mapping name is not found or_if there is no unique match_@since 4.1;public static MethodArgumentBuilder fromMappingName(String mappingName) {_		return fromMappingName(null, mappingName)__	};create,a,url,from,the,name,of,a,spring,mvc,controller,method,s,request,mapping,p,the,configured,link,org,springframework,web,servlet,handler,handler,method,mapping,naming,strategy,handler,method,mapping,naming,strategy,determines,the,names,of,controller,method,request,mappings,at,startup,by,default,all,mappings,are,assigned,a,name,based,on,the,capital,letters,of,the,class,name,followed,by,as,separator,and,then,the,method,name,for,example,pc,get,person,for,a,class,named,person,controller,with,method,get,person,in,case,the,naming,convention,does,not,produce,unique,results,an,explicit,name,may,be,assigned,through,the,name,attribute,of,the,code,request,mapping,annotation,p,this,is,aimed,primarily,for,use,in,view,rendering,technologies,and,el,expressions,the,spring,url,tag,library,registers,this,method,as,a,function,called,mvc,url,p,for,example,given,this,controller,pre,class,code,064,request,mapping,people,class,person,controller,064,request,mapping,id,public,http,entity,void,get,person,064,path,variable,string,id,pre,a,jsp,can,prepare,a,url,to,the,controller,method,as,follows,pre,class,code,taglib,uri,http,www,springframework,org,tags,prefix,s,lt,a,href,s,mvc,url,pc,get,person,arg,0,123,build,gt,get,person,lt,a,gt,pre,p,note,that,it,s,not,necessary,to,specify,all,arguments,only,the,ones,required,to,prepare,the,url,mainly,code,request,param,and,code,path,variable,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,mapping,name,the,mapping,name,return,a,builder,to,prepare,the,uri,string,throws,illegal,argument,exception,if,the,mapping,name,is,not,found,or,if,there,is,no,unique,match,since,4,1;public,static,method,argument,builder,from,mapping,name,string,mapping,name,return,from,mapping,name,null,mapping,name
MvcUriComponentsBuilder -> public static MethodArgumentBuilder fromMappingName(String mappingName);1506097334;Create a URL from the name of a Spring MVC controller method's request mapping._<p>The configured_{@link org.springframework.web.servlet.handler.HandlerMethodMappingNamingStrategy_HandlerMethodMappingNamingStrategy} determines the names of controller_method request mappings at startup. By default all mappings are assigned_a name based on the capital letters of the class name, followed by "#" as_separator, and then the method name. For example "PC#getPerson"_for a class named PersonController with method getPerson. In case the_naming convention does not produce unique results, an explicit name may_be assigned through the name attribute of the {@code @RequestMapping}_annotation._<p>This is aimed primarily for use in view rendering technologies and EL_expressions. The Spring URL tag library registers this method as a function_called "mvcUrl"._<p>For example, given this controller:_<pre class="code">_&#064_RequestMapping("/people")_class PersonController {__&#064_RequestMapping("/{id}")_public HttpEntity<Void> getPerson(&#064_PathVariable String id) { ... }___</pre>__A JSP can prepare a URL to the controller method as follows:__<pre class="code">_<%@ taglib uri="http://www.springframework.org/tags" prefix="s" %>__&lt_a href="${s:mvcUrl('PC#getPerson').arg(0,"123").build()}"&gt_Get Person&lt_/a&gt__</pre>_<p>Note that it's not necessary to specify all arguments. Only the ones_required to prepare the URL, mainly {@code @RequestParam} and {@code @PathVariable}).__<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs.__@param mappingName the mapping name_@return a builder to prepare the URI String_@throws IllegalArgumentException if the mapping name is not found or_if there is no unique match_@since 4.1;public static MethodArgumentBuilder fromMappingName(String mappingName) {_		return fromMappingName(null, mappingName)__	};create,a,url,from,the,name,of,a,spring,mvc,controller,method,s,request,mapping,p,the,configured,link,org,springframework,web,servlet,handler,handler,method,mapping,naming,strategy,handler,method,mapping,naming,strategy,determines,the,names,of,controller,method,request,mappings,at,startup,by,default,all,mappings,are,assigned,a,name,based,on,the,capital,letters,of,the,class,name,followed,by,as,separator,and,then,the,method,name,for,example,pc,get,person,for,a,class,named,person,controller,with,method,get,person,in,case,the,naming,convention,does,not,produce,unique,results,an,explicit,name,may,be,assigned,through,the,name,attribute,of,the,code,request,mapping,annotation,p,this,is,aimed,primarily,for,use,in,view,rendering,technologies,and,el,expressions,the,spring,url,tag,library,registers,this,method,as,a,function,called,mvc,url,p,for,example,given,this,controller,pre,class,code,064,request,mapping,people,class,person,controller,064,request,mapping,id,public,http,entity,void,get,person,064,path,variable,string,id,pre,a,jsp,can,prepare,a,url,to,the,controller,method,as,follows,pre,class,code,taglib,uri,http,www,springframework,org,tags,prefix,s,lt,a,href,s,mvc,url,pc,get,person,arg,0,123,build,gt,get,person,lt,a,gt,pre,p,note,that,it,s,not,necessary,to,specify,all,arguments,only,the,ones,required,to,prepare,the,url,mainly,code,request,param,and,code,path,variable,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,mapping,name,the,mapping,name,return,a,builder,to,prepare,the,uri,string,throws,illegal,argument,exception,if,the,mapping,name,is,not,found,or,if,there,is,no,unique,match,since,4,1;public,static,method,argument,builder,from,mapping,name,string,mapping,name,return,from,mapping,name,null,mapping,name
MvcUriComponentsBuilder -> public static MethodArgumentBuilder fromMappingName(String mappingName);1518770299;Create a URL from the name of a Spring MVC controller method's request mapping._<p>The configured_{@link org.springframework.web.servlet.handler.HandlerMethodMappingNamingStrategy_HandlerMethodMappingNamingStrategy} determines the names of controller_method request mappings at startup. By default all mappings are assigned_a name based on the capital letters of the class name, followed by "#" as_separator, and then the method name. For example "PC#getPerson"_for a class named PersonController with method getPerson. In case the_naming convention does not produce unique results, an explicit name may_be assigned through the name attribute of the {@code @RequestMapping}_annotation._<p>This is aimed primarily for use in view rendering technologies and EL_expressions. The Spring URL tag library registers this method as a function_called "mvcUrl"._<p>For example, given this controller:_<pre class="code">_&#064_RequestMapping("/people")_class PersonController {__&#064_RequestMapping("/{id}")_public HttpEntity<Void> getPerson(&#064_PathVariable String id) { ... }___</pre>__A JSP can prepare a URL to the controller method as follows:__<pre class="code">_<%@ taglib uri="http://www.springframework.org/tags" prefix="s" %>__&lt_a href="${s:mvcUrl('PC#getPerson').arg(0,"123").build()}"&gt_Get Person&lt_/a&gt__</pre>_<p>Note that it's not necessary to specify all arguments. Only the ones_required to prepare the URL, mainly {@code @RequestParam} and {@code @PathVariable}).__<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs.__@param mappingName the mapping name_@return a builder to prepare the URI String_@throws IllegalArgumentException if the mapping name is not found or_if there is no unique match_@since 4.1;public static MethodArgumentBuilder fromMappingName(String mappingName) {_		return fromMappingName(null, mappingName)__	};create,a,url,from,the,name,of,a,spring,mvc,controller,method,s,request,mapping,p,the,configured,link,org,springframework,web,servlet,handler,handler,method,mapping,naming,strategy,handler,method,mapping,naming,strategy,determines,the,names,of,controller,method,request,mappings,at,startup,by,default,all,mappings,are,assigned,a,name,based,on,the,capital,letters,of,the,class,name,followed,by,as,separator,and,then,the,method,name,for,example,pc,get,person,for,a,class,named,person,controller,with,method,get,person,in,case,the,naming,convention,does,not,produce,unique,results,an,explicit,name,may,be,assigned,through,the,name,attribute,of,the,code,request,mapping,annotation,p,this,is,aimed,primarily,for,use,in,view,rendering,technologies,and,el,expressions,the,spring,url,tag,library,registers,this,method,as,a,function,called,mvc,url,p,for,example,given,this,controller,pre,class,code,064,request,mapping,people,class,person,controller,064,request,mapping,id,public,http,entity,void,get,person,064,path,variable,string,id,pre,a,jsp,can,prepare,a,url,to,the,controller,method,as,follows,pre,class,code,taglib,uri,http,www,springframework,org,tags,prefix,s,lt,a,href,s,mvc,url,pc,get,person,arg,0,123,build,gt,get,person,lt,a,gt,pre,p,note,that,it,s,not,necessary,to,specify,all,arguments,only,the,ones,required,to,prepare,the,url,mainly,code,request,param,and,code,path,variable,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,mapping,name,the,mapping,name,return,a,builder,to,prepare,the,uri,string,throws,illegal,argument,exception,if,the,mapping,name,is,not,found,or,if,there,is,no,unique,match,since,4,1;public,static,method,argument,builder,from,mapping,name,string,mapping,name,return,from,mapping,name,null,mapping,name
MvcUriComponentsBuilder -> public static MethodArgumentBuilder fromMappingName(String mappingName);1522354261;Create a URL from the name of a Spring MVC controller method's request mapping._<p>The configured_{@link org.springframework.web.servlet.handler.HandlerMethodMappingNamingStrategy_HandlerMethodMappingNamingStrategy} determines the names of controller_method request mappings at startup. By default all mappings are assigned_a name based on the capital letters of the class name, followed by "#" as_separator, and then the method name. For example "PC#getPerson"_for a class named PersonController with method getPerson. In case the_naming convention does not produce unique results, an explicit name may_be assigned through the name attribute of the {@code @RequestMapping}_annotation._<p>This is aimed primarily for use in view rendering technologies and EL_expressions. The Spring URL tag library registers this method as a function_called "mvcUrl"._<p>For example, given this controller:_<pre class="code">_&#064_RequestMapping("/people")_class PersonController {__&#064_RequestMapping("/{id}")_public HttpEntity<Void> getPerson(&#064_PathVariable String id) { ... }___</pre>__A JSP can prepare a URL to the controller method as follows:__<pre class="code">_<%@ taglib uri="http://www.springframework.org/tags" prefix="s" %>__&lt_a href="${s:mvcUrl('PC#getPerson').arg(0,"123").build()}"&gt_Get Person&lt_/a&gt__</pre>_<p>Note that it's not necessary to specify all arguments. Only the ones_required to prepare the URL, mainly {@code @RequestParam} and {@code @PathVariable}).__<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs.__@param mappingName the mapping name_@return a builder to prepare the URI String_@throws IllegalArgumentException if the mapping name is not found or_if there is no unique match_@since 4.1;public static MethodArgumentBuilder fromMappingName(String mappingName) {_		return fromMappingName(null, mappingName)__	};create,a,url,from,the,name,of,a,spring,mvc,controller,method,s,request,mapping,p,the,configured,link,org,springframework,web,servlet,handler,handler,method,mapping,naming,strategy,handler,method,mapping,naming,strategy,determines,the,names,of,controller,method,request,mappings,at,startup,by,default,all,mappings,are,assigned,a,name,based,on,the,capital,letters,of,the,class,name,followed,by,as,separator,and,then,the,method,name,for,example,pc,get,person,for,a,class,named,person,controller,with,method,get,person,in,case,the,naming,convention,does,not,produce,unique,results,an,explicit,name,may,be,assigned,through,the,name,attribute,of,the,code,request,mapping,annotation,p,this,is,aimed,primarily,for,use,in,view,rendering,technologies,and,el,expressions,the,spring,url,tag,library,registers,this,method,as,a,function,called,mvc,url,p,for,example,given,this,controller,pre,class,code,064,request,mapping,people,class,person,controller,064,request,mapping,id,public,http,entity,void,get,person,064,path,variable,string,id,pre,a,jsp,can,prepare,a,url,to,the,controller,method,as,follows,pre,class,code,taglib,uri,http,www,springframework,org,tags,prefix,s,lt,a,href,s,mvc,url,pc,get,person,arg,0,123,build,gt,get,person,lt,a,gt,pre,p,note,that,it,s,not,necessary,to,specify,all,arguments,only,the,ones,required,to,prepare,the,url,mainly,code,request,param,and,code,path,variable,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,mapping,name,the,mapping,name,return,a,builder,to,prepare,the,uri,string,throws,illegal,argument,exception,if,the,mapping,name,is,not,found,or,if,there,is,no,unique,match,since,4,1;public,static,method,argument,builder,from,mapping,name,string,mapping,name,return,from,mapping,name,null,mapping,name
MvcUriComponentsBuilder -> public static MethodArgumentBuilder fromMappingName(String mappingName);1523455554;Create a URL from the name of a Spring MVC controller method's request mapping._<p>The configured_{@link org.springframework.web.servlet.handler.HandlerMethodMappingNamingStrategy_HandlerMethodMappingNamingStrategy} determines the names of controller_method request mappings at startup. By default all mappings are assigned_a name based on the capital letters of the class name, followed by "#" as_separator, and then the method name. For example "PC#getPerson"_for a class named PersonController with method getPerson. In case the_naming convention does not produce unique results, an explicit name may_be assigned through the name attribute of the {@code @RequestMapping}_annotation._<p>This is aimed primarily for use in view rendering technologies and EL_expressions. The Spring URL tag library registers this method as a function_called "mvcUrl"._<p>For example, given this controller:_<pre class="code">_&#064_RequestMapping("/people")_class PersonController {__&#064_RequestMapping("/{id}")_public HttpEntity<Void> getPerson(&#064_PathVariable String id) { ... }___</pre>__A JSP can prepare a URL to the controller method as follows:__<pre class="code">_<%@ taglib uri="http://www.springframework.org/tags" prefix="s" %>__&lt_a href="${s:mvcUrl('PC#getPerson').arg(0,"123").build()}"&gt_Get Person&lt_/a&gt__</pre>_<p>Note that it's not necessary to specify all arguments. Only the ones_required to prepare the URL, mainly {@code @RequestParam} and {@code @PathVariable}).__<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs.__@param mappingName the mapping name_@return a builder to prepare the URI String_@throws IllegalArgumentException if the mapping name is not found or_if there is no unique match_@since 4.1;public static MethodArgumentBuilder fromMappingName(String mappingName) {_		return fromMappingName(null, mappingName)__	};create,a,url,from,the,name,of,a,spring,mvc,controller,method,s,request,mapping,p,the,configured,link,org,springframework,web,servlet,handler,handler,method,mapping,naming,strategy,handler,method,mapping,naming,strategy,determines,the,names,of,controller,method,request,mappings,at,startup,by,default,all,mappings,are,assigned,a,name,based,on,the,capital,letters,of,the,class,name,followed,by,as,separator,and,then,the,method,name,for,example,pc,get,person,for,a,class,named,person,controller,with,method,get,person,in,case,the,naming,convention,does,not,produce,unique,results,an,explicit,name,may,be,assigned,through,the,name,attribute,of,the,code,request,mapping,annotation,p,this,is,aimed,primarily,for,use,in,view,rendering,technologies,and,el,expressions,the,spring,url,tag,library,registers,this,method,as,a,function,called,mvc,url,p,for,example,given,this,controller,pre,class,code,064,request,mapping,people,class,person,controller,064,request,mapping,id,public,http,entity,void,get,person,064,path,variable,string,id,pre,a,jsp,can,prepare,a,url,to,the,controller,method,as,follows,pre,class,code,taglib,uri,http,www,springframework,org,tags,prefix,s,lt,a,href,s,mvc,url,pc,get,person,arg,0,123,build,gt,get,person,lt,a,gt,pre,p,note,that,it,s,not,necessary,to,specify,all,arguments,only,the,ones,required,to,prepare,the,url,mainly,code,request,param,and,code,path,variable,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,mapping,name,the,mapping,name,return,a,builder,to,prepare,the,uri,string,throws,illegal,argument,exception,if,the,mapping,name,is,not,found,or,if,there,is,no,unique,match,since,4,1;public,static,method,argument,builder,from,mapping,name,string,mapping,name,return,from,mapping,name,null,mapping,name
MvcUriComponentsBuilder -> public static MethodArgumentBuilder fromMappingName(String mappingName);1529028426;Create a URL from the name of a Spring MVC controller method's request mapping._<p>The configured_{@link org.springframework.web.servlet.handler.HandlerMethodMappingNamingStrategy_HandlerMethodMappingNamingStrategy} determines the names of controller_method request mappings at startup. By default all mappings are assigned_a name based on the capital letters of the class name, followed by "#" as_separator, and then the method name. For example "PC#getPerson"_for a class named PersonController with method getPerson. In case the_naming convention does not produce unique results, an explicit name may_be assigned through the name attribute of the {@code @RequestMapping}_annotation._<p>This is aimed primarily for use in view rendering technologies and EL_expressions. The Spring URL tag library registers this method as a function_called "mvcUrl"._<p>For example, given this controller:_<pre class="code">_&#064_RequestMapping("/people")_class PersonController {__&#064_RequestMapping("/{id}")_public HttpEntity<Void> getPerson(&#064_PathVariable String id) { ... }___</pre>__A JSP can prepare a URL to the controller method as follows:__<pre class="code">_<%@ taglib uri="http://www.springframework.org/tags" prefix="s" %>__&lt_a href="${s:mvcUrl('PC#getPerson').arg(0,"123").build()}"&gt_Get Person&lt_/a&gt__</pre>_<p>Note that it's not necessary to specify all arguments. Only the ones_required to prepare the URL, mainly {@code @RequestParam} and {@code @PathVariable}).__<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs.__@param mappingName the mapping name_@return a builder to prepare the URI String_@throws IllegalArgumentException if the mapping name is not found or_if there is no unique match_@since 4.1;public static MethodArgumentBuilder fromMappingName(String mappingName) {_		return fromMappingName(null, mappingName)__	};create,a,url,from,the,name,of,a,spring,mvc,controller,method,s,request,mapping,p,the,configured,link,org,springframework,web,servlet,handler,handler,method,mapping,naming,strategy,handler,method,mapping,naming,strategy,determines,the,names,of,controller,method,request,mappings,at,startup,by,default,all,mappings,are,assigned,a,name,based,on,the,capital,letters,of,the,class,name,followed,by,as,separator,and,then,the,method,name,for,example,pc,get,person,for,a,class,named,person,controller,with,method,get,person,in,case,the,naming,convention,does,not,produce,unique,results,an,explicit,name,may,be,assigned,through,the,name,attribute,of,the,code,request,mapping,annotation,p,this,is,aimed,primarily,for,use,in,view,rendering,technologies,and,el,expressions,the,spring,url,tag,library,registers,this,method,as,a,function,called,mvc,url,p,for,example,given,this,controller,pre,class,code,064,request,mapping,people,class,person,controller,064,request,mapping,id,public,http,entity,void,get,person,064,path,variable,string,id,pre,a,jsp,can,prepare,a,url,to,the,controller,method,as,follows,pre,class,code,taglib,uri,http,www,springframework,org,tags,prefix,s,lt,a,href,s,mvc,url,pc,get,person,arg,0,123,build,gt,get,person,lt,a,gt,pre,p,note,that,it,s,not,necessary,to,specify,all,arguments,only,the,ones,required,to,prepare,the,url,mainly,code,request,param,and,code,path,variable,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,mapping,name,the,mapping,name,return,a,builder,to,prepare,the,uri,string,throws,illegal,argument,exception,if,the,mapping,name,is,not,found,or,if,there,is,no,unique,match,since,4,1;public,static,method,argument,builder,from,mapping,name,string,mapping,name,return,from,mapping,name,null,mapping,name
MvcUriComponentsBuilder -> public static MethodArgumentBuilder fromMappingName(String mappingName);1529028426;Create a URL from the name of a Spring MVC controller method's request mapping._<p>The configured_{@link org.springframework.web.servlet.handler.HandlerMethodMappingNamingStrategy_HandlerMethodMappingNamingStrategy} determines the names of controller_method request mappings at startup. By default all mappings are assigned_a name based on the capital letters of the class name, followed by "#" as_separator, and then the method name. For example "PC#getPerson"_for a class named PersonController with method getPerson. In case the_naming convention does not produce unique results, an explicit name may_be assigned through the name attribute of the {@code @RequestMapping}_annotation._<p>This is aimed primarily for use in view rendering technologies and EL_expressions. The Spring URL tag library registers this method as a function_called "mvcUrl"._<p>For example, given this controller:_<pre class="code">_&#064_RequestMapping("/people")_class PersonController {__&#064_RequestMapping("/{id}")_public HttpEntity<Void> getPerson(&#064_PathVariable String id) { ... }___</pre>__A JSP can prepare a URL to the controller method as follows:__<pre class="code">_<%@ taglib uri="http://www.springframework.org/tags" prefix="s" %>__&lt_a href="${s:mvcUrl('PC#getPerson').arg(0,"123").build()}"&gt_Get Person&lt_/a&gt__</pre>_<p>Note that it's not necessary to specify all arguments. Only the ones_required to prepare the URL, mainly {@code @RequestParam} and {@code @PathVariable}).__<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs.__@param mappingName the mapping name_@return a builder to prepare the URI String_@throws IllegalArgumentException if the mapping name is not found or_if there is no unique match_@since 4.1;public static MethodArgumentBuilder fromMappingName(String mappingName) {_		return fromMappingName(null, mappingName)__	};create,a,url,from,the,name,of,a,spring,mvc,controller,method,s,request,mapping,p,the,configured,link,org,springframework,web,servlet,handler,handler,method,mapping,naming,strategy,handler,method,mapping,naming,strategy,determines,the,names,of,controller,method,request,mappings,at,startup,by,default,all,mappings,are,assigned,a,name,based,on,the,capital,letters,of,the,class,name,followed,by,as,separator,and,then,the,method,name,for,example,pc,get,person,for,a,class,named,person,controller,with,method,get,person,in,case,the,naming,convention,does,not,produce,unique,results,an,explicit,name,may,be,assigned,through,the,name,attribute,of,the,code,request,mapping,annotation,p,this,is,aimed,primarily,for,use,in,view,rendering,technologies,and,el,expressions,the,spring,url,tag,library,registers,this,method,as,a,function,called,mvc,url,p,for,example,given,this,controller,pre,class,code,064,request,mapping,people,class,person,controller,064,request,mapping,id,public,http,entity,void,get,person,064,path,variable,string,id,pre,a,jsp,can,prepare,a,url,to,the,controller,method,as,follows,pre,class,code,taglib,uri,http,www,springframework,org,tags,prefix,s,lt,a,href,s,mvc,url,pc,get,person,arg,0,123,build,gt,get,person,lt,a,gt,pre,p,note,that,it,s,not,necessary,to,specify,all,arguments,only,the,ones,required,to,prepare,the,url,mainly,code,request,param,and,code,path,variable,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,mapping,name,the,mapping,name,return,a,builder,to,prepare,the,uri,string,throws,illegal,argument,exception,if,the,mapping,name,is,not,found,or,if,there,is,no,unique,match,since,4,1;public,static,method,argument,builder,from,mapping,name,string,mapping,name,return,from,mapping,name,null,mapping,name
MvcUriComponentsBuilder -> public static MethodArgumentBuilder fromMappingName(String mappingName);1529028713;Create a URL from the name of a Spring MVC controller method's request mapping._<p>The configured_{@link org.springframework.web.servlet.handler.HandlerMethodMappingNamingStrategy_HandlerMethodMappingNamingStrategy} determines the names of controller_method request mappings at startup. By default all mappings are assigned_a name based on the capital letters of the class name, followed by "#" as_separator, and then the method name. For example "PC#getPerson"_for a class named PersonController with method getPerson. In case the_naming convention does not produce unique results, an explicit name may_be assigned through the name attribute of the {@code @RequestMapping}_annotation._<p>This is aimed primarily for use in view rendering technologies and EL_expressions. The Spring URL tag library registers this method as a function_called "mvcUrl"._<p>For example, given this controller:_<pre class="code">_&#064_RequestMapping("/people")_class PersonController {__&#064_RequestMapping("/{id}")_public HttpEntity<Void> getPerson(&#064_PathVariable String id) { ... }___</pre>__A JSP can prepare a URL to the controller method as follows:__<pre class="code">_<%@ taglib uri="http://www.springframework.org/tags" prefix="s" %>__&lt_a href="${s:mvcUrl('PC#getPerson').arg(0,"123").build()}"&gt_Get Person&lt_/a&gt__</pre>_<p>Note that it's not necessary to specify all arguments. Only the ones_required to prepare the URL, mainly {@code @RequestParam} and {@code @PathVariable}).__<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs.__@param mappingName the mapping name_@return a builder to prepare the URI String_@throws IllegalArgumentException if the mapping name is not found or_if there is no unique match_@since 4.1;public static MethodArgumentBuilder fromMappingName(String mappingName) {_		return fromMappingName(null, mappingName)__	};create,a,url,from,the,name,of,a,spring,mvc,controller,method,s,request,mapping,p,the,configured,link,org,springframework,web,servlet,handler,handler,method,mapping,naming,strategy,handler,method,mapping,naming,strategy,determines,the,names,of,controller,method,request,mappings,at,startup,by,default,all,mappings,are,assigned,a,name,based,on,the,capital,letters,of,the,class,name,followed,by,as,separator,and,then,the,method,name,for,example,pc,get,person,for,a,class,named,person,controller,with,method,get,person,in,case,the,naming,convention,does,not,produce,unique,results,an,explicit,name,may,be,assigned,through,the,name,attribute,of,the,code,request,mapping,annotation,p,this,is,aimed,primarily,for,use,in,view,rendering,technologies,and,el,expressions,the,spring,url,tag,library,registers,this,method,as,a,function,called,mvc,url,p,for,example,given,this,controller,pre,class,code,064,request,mapping,people,class,person,controller,064,request,mapping,id,public,http,entity,void,get,person,064,path,variable,string,id,pre,a,jsp,can,prepare,a,url,to,the,controller,method,as,follows,pre,class,code,taglib,uri,http,www,springframework,org,tags,prefix,s,lt,a,href,s,mvc,url,pc,get,person,arg,0,123,build,gt,get,person,lt,a,gt,pre,p,note,that,it,s,not,necessary,to,specify,all,arguments,only,the,ones,required,to,prepare,the,url,mainly,code,request,param,and,code,path,variable,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,mapping,name,the,mapping,name,return,a,builder,to,prepare,the,uri,string,throws,illegal,argument,exception,if,the,mapping,name,is,not,found,or,if,there,is,no,unique,match,since,4,1;public,static,method,argument,builder,from,mapping,name,string,mapping,name,return,from,mapping,name,null,mapping,name
MvcUriComponentsBuilder -> public static MethodArgumentBuilder fromMappingName(String mappingName);1529361191;Create a URL from the name of a Spring MVC controller method's request mapping._<p>The configured_{@link org.springframework.web.servlet.handler.HandlerMethodMappingNamingStrategy_HandlerMethodMappingNamingStrategy} determines the names of controller_method request mappings at startup. By default all mappings are assigned_a name based on the capital letters of the class name, followed by "#" as_separator, and then the method name. For example "PC#getPerson"_for a class named PersonController with method getPerson. In case the_naming convention does not produce unique results, an explicit name may_be assigned through the name attribute of the {@code @RequestMapping}_annotation._<p>This is aimed primarily for use in view rendering technologies and EL_expressions. The Spring URL tag library registers this method as a function_called "mvcUrl"._<p>For example, given this controller:_<pre class="code">_&#064_RequestMapping("/people")_class PersonController {__&#064_RequestMapping("/{id}")_public HttpEntity<Void> getPerson(&#064_PathVariable String id) { ... }___</pre>__A JSP can prepare a URL to the controller method as follows:__<pre class="code">_<%@ taglib uri="http://www.springframework.org/tags" prefix="s" %>__&lt_a href="${s:mvcUrl('PC#getPerson').arg(0,"123").build()}"&gt_Get Person&lt_/a&gt__</pre>_<p>Note that it's not necessary to specify all arguments. Only the ones_required to prepare the URL, mainly {@code @RequestParam} and {@code @PathVariable}).__<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs.__@param mappingName the mapping name_@return a builder to prepare the URI String_@throws IllegalArgumentException if the mapping name is not found or_if there is no unique match_@since 4.1;public static MethodArgumentBuilder fromMappingName(String mappingName) {_		return fromMappingName(null, mappingName)__	};create,a,url,from,the,name,of,a,spring,mvc,controller,method,s,request,mapping,p,the,configured,link,org,springframework,web,servlet,handler,handler,method,mapping,naming,strategy,handler,method,mapping,naming,strategy,determines,the,names,of,controller,method,request,mappings,at,startup,by,default,all,mappings,are,assigned,a,name,based,on,the,capital,letters,of,the,class,name,followed,by,as,separator,and,then,the,method,name,for,example,pc,get,person,for,a,class,named,person,controller,with,method,get,person,in,case,the,naming,convention,does,not,produce,unique,results,an,explicit,name,may,be,assigned,through,the,name,attribute,of,the,code,request,mapping,annotation,p,this,is,aimed,primarily,for,use,in,view,rendering,technologies,and,el,expressions,the,spring,url,tag,library,registers,this,method,as,a,function,called,mvc,url,p,for,example,given,this,controller,pre,class,code,064,request,mapping,people,class,person,controller,064,request,mapping,id,public,http,entity,void,get,person,064,path,variable,string,id,pre,a,jsp,can,prepare,a,url,to,the,controller,method,as,follows,pre,class,code,taglib,uri,http,www,springframework,org,tags,prefix,s,lt,a,href,s,mvc,url,pc,get,person,arg,0,123,build,gt,get,person,lt,a,gt,pre,p,note,that,it,s,not,necessary,to,specify,all,arguments,only,the,ones,required,to,prepare,the,url,mainly,code,request,param,and,code,path,variable,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,mapping,name,the,mapping,name,return,a,builder,to,prepare,the,uri,string,throws,illegal,argument,exception,if,the,mapping,name,is,not,found,or,if,there,is,no,unique,match,since,4,1;public,static,method,argument,builder,from,mapping,name,string,mapping,name,return,from,mapping,name,null,mapping,name
MvcUriComponentsBuilder -> public static MethodArgumentBuilder fromMappingName(String mappingName);1530174524;Create a URL from the name of a Spring MVC controller method's request mapping._<p>The configured_{@link org.springframework.web.servlet.handler.HandlerMethodMappingNamingStrategy_HandlerMethodMappingNamingStrategy} determines the names of controller_method request mappings at startup. By default all mappings are assigned_a name based on the capital letters of the class name, followed by "#" as_separator, and then the method name. For example "PC#getPerson"_for a class named PersonController with method getPerson. In case the_naming convention does not produce unique results, an explicit name may_be assigned through the name attribute of the {@code @RequestMapping}_annotation._<p>This is aimed primarily for use in view rendering technologies and EL_expressions. The Spring URL tag library registers this method as a function_called "mvcUrl"._<p>For example, given this controller:_<pre class="code">_&#064_RequestMapping("/people")_class PersonController {__&#064_RequestMapping("/{id}")_public HttpEntity&lt_Void&gt_ getPerson(&#064_PathVariable String id) { ... }___</pre>__A JSP can prepare a URL to the controller method as follows:__<pre class="code">_<%@ taglib uri="http://www.springframework.org/tags" prefix="s" %>__&lt_a href="${s:mvcUrl('PC#getPerson').arg(0,"123").build()}"&gt_Get Person&lt_/a&gt__</pre>_<p>Note that it's not necessary to specify all arguments. Only the ones_required to prepare the URL, mainly {@code @RequestParam} and {@code @PathVariable}).__<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs.__@param mappingName the mapping name_@return a builder to prepare the URI String_@throws IllegalArgumentException if the mapping name is not found or_if there is no unique match_@since 4.1;public static MethodArgumentBuilder fromMappingName(String mappingName) {_		return fromMappingName(null, mappingName)__	};create,a,url,from,the,name,of,a,spring,mvc,controller,method,s,request,mapping,p,the,configured,link,org,springframework,web,servlet,handler,handler,method,mapping,naming,strategy,handler,method,mapping,naming,strategy,determines,the,names,of,controller,method,request,mappings,at,startup,by,default,all,mappings,are,assigned,a,name,based,on,the,capital,letters,of,the,class,name,followed,by,as,separator,and,then,the,method,name,for,example,pc,get,person,for,a,class,named,person,controller,with,method,get,person,in,case,the,naming,convention,does,not,produce,unique,results,an,explicit,name,may,be,assigned,through,the,name,attribute,of,the,code,request,mapping,annotation,p,this,is,aimed,primarily,for,use,in,view,rendering,technologies,and,el,expressions,the,spring,url,tag,library,registers,this,method,as,a,function,called,mvc,url,p,for,example,given,this,controller,pre,class,code,064,request,mapping,people,class,person,controller,064,request,mapping,id,public,http,entity,lt,void,gt,get,person,064,path,variable,string,id,pre,a,jsp,can,prepare,a,url,to,the,controller,method,as,follows,pre,class,code,taglib,uri,http,www,springframework,org,tags,prefix,s,lt,a,href,s,mvc,url,pc,get,person,arg,0,123,build,gt,get,person,lt,a,gt,pre,p,note,that,it,s,not,necessary,to,specify,all,arguments,only,the,ones,required,to,prepare,the,url,mainly,code,request,param,and,code,path,variable,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,mapping,name,the,mapping,name,return,a,builder,to,prepare,the,uri,string,throws,illegal,argument,exception,if,the,mapping,name,is,not,found,or,if,there,is,no,unique,match,since,4,1;public,static,method,argument,builder,from,mapping,name,string,mapping,name,return,from,mapping,name,null,mapping,name
MvcUriComponentsBuilder -> public static MethodArgumentBuilder fromMappingName(String mappingName);1532041662;Create a URL from the name of a Spring MVC controller method's request mapping._<p>The configured_{@link org.springframework.web.servlet.handler.HandlerMethodMappingNamingStrategy_HandlerMethodMappingNamingStrategy} determines the names of controller_method request mappings at startup. By default all mappings are assigned_a name based on the capital letters of the class name, followed by "#" as_separator, and then the method name. For example "PC#getPerson"_for a class named PersonController with method getPerson. In case the_naming convention does not produce unique results, an explicit name may_be assigned through the name attribute of the {@code @RequestMapping}_annotation._<p>This is aimed primarily for use in view rendering technologies and EL_expressions. The Spring URL tag library registers this method as a function_called "mvcUrl"._<p>For example, given this controller:_<pre class="code">_&#064_RequestMapping("/people")_class PersonController {__&#064_RequestMapping("/{id}")_public HttpEntity&lt_Void&gt_ getPerson(&#064_PathVariable String id) { ... }___</pre>__A JSP can prepare a URL to the controller method as follows:__<pre class="code">_<%@ taglib uri="http://www.springframework.org/tags" prefix="s" %>__&lt_a href="${s:mvcUrl('PC#getPerson').arg(0,"123").build()}"&gt_Get Person&lt_/a&gt__</pre>_<p>Note that it's not necessary to specify all arguments. Only the ones_required to prepare the URL, mainly {@code @RequestParam} and {@code @PathVariable}).__<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs.__@param mappingName the mapping name_@return a builder to prepare the URI String_@throws IllegalArgumentException if the mapping name is not found or_if there is no unique match_@since 4.1;public static MethodArgumentBuilder fromMappingName(String mappingName) {_		return fromMappingName(null, mappingName)__	};create,a,url,from,the,name,of,a,spring,mvc,controller,method,s,request,mapping,p,the,configured,link,org,springframework,web,servlet,handler,handler,method,mapping,naming,strategy,handler,method,mapping,naming,strategy,determines,the,names,of,controller,method,request,mappings,at,startup,by,default,all,mappings,are,assigned,a,name,based,on,the,capital,letters,of,the,class,name,followed,by,as,separator,and,then,the,method,name,for,example,pc,get,person,for,a,class,named,person,controller,with,method,get,person,in,case,the,naming,convention,does,not,produce,unique,results,an,explicit,name,may,be,assigned,through,the,name,attribute,of,the,code,request,mapping,annotation,p,this,is,aimed,primarily,for,use,in,view,rendering,technologies,and,el,expressions,the,spring,url,tag,library,registers,this,method,as,a,function,called,mvc,url,p,for,example,given,this,controller,pre,class,code,064,request,mapping,people,class,person,controller,064,request,mapping,id,public,http,entity,lt,void,gt,get,person,064,path,variable,string,id,pre,a,jsp,can,prepare,a,url,to,the,controller,method,as,follows,pre,class,code,taglib,uri,http,www,springframework,org,tags,prefix,s,lt,a,href,s,mvc,url,pc,get,person,arg,0,123,build,gt,get,person,lt,a,gt,pre,p,note,that,it,s,not,necessary,to,specify,all,arguments,only,the,ones,required,to,prepare,the,url,mainly,code,request,param,and,code,path,variable,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,mapping,name,the,mapping,name,return,a,builder,to,prepare,the,uri,string,throws,illegal,argument,exception,if,the,mapping,name,is,not,found,or,if,there,is,no,unique,match,since,4,1;public,static,method,argument,builder,from,mapping,name,string,mapping,name,return,from,mapping,name,null,mapping,name
MvcUriComponentsBuilder -> public static MethodArgumentBuilder fromMappingName(String mappingName);1532041662;Create a URL from the name of a Spring MVC controller method's request mapping._<p>The configured_{@link org.springframework.web.servlet.handler.HandlerMethodMappingNamingStrategy_HandlerMethodMappingNamingStrategy} determines the names of controller_method request mappings at startup. By default all mappings are assigned_a name based on the capital letters of the class name, followed by "#" as_separator, and then the method name. For example "PC#getPerson"_for a class named PersonController with method getPerson. In case the_naming convention does not produce unique results, an explicit name may_be assigned through the name attribute of the {@code @RequestMapping}_annotation._<p>This is aimed primarily for use in view rendering technologies and EL_expressions. The Spring URL tag library registers this method as a function_called "mvcUrl"._<p>For example, given this controller:_<pre class="code">_&#064_RequestMapping("/people")_class PersonController {__&#064_RequestMapping("/{id}")_public HttpEntity&lt_Void&gt_ getPerson(&#064_PathVariable String id) { ... }___</pre>__A JSP can prepare a URL to the controller method as follows:__<pre class="code">_<%@ taglib uri="http://www.springframework.org/tags" prefix="s" %>__&lt_a href="${s:mvcUrl('PC#getPerson').arg(0,"123").build()}"&gt_Get Person&lt_/a&gt__</pre>_<p>Note that it's not necessary to specify all arguments. Only the ones_required to prepare the URL, mainly {@code @RequestParam} and {@code @PathVariable}).__<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs.__@param mappingName the mapping name_@return a builder to prepare the URI String_@throws IllegalArgumentException if the mapping name is not found or_if there is no unique match_@since 4.1;public static MethodArgumentBuilder fromMappingName(String mappingName) {_		return fromMappingName(null, mappingName)__	};create,a,url,from,the,name,of,a,spring,mvc,controller,method,s,request,mapping,p,the,configured,link,org,springframework,web,servlet,handler,handler,method,mapping,naming,strategy,handler,method,mapping,naming,strategy,determines,the,names,of,controller,method,request,mappings,at,startup,by,default,all,mappings,are,assigned,a,name,based,on,the,capital,letters,of,the,class,name,followed,by,as,separator,and,then,the,method,name,for,example,pc,get,person,for,a,class,named,person,controller,with,method,get,person,in,case,the,naming,convention,does,not,produce,unique,results,an,explicit,name,may,be,assigned,through,the,name,attribute,of,the,code,request,mapping,annotation,p,this,is,aimed,primarily,for,use,in,view,rendering,technologies,and,el,expressions,the,spring,url,tag,library,registers,this,method,as,a,function,called,mvc,url,p,for,example,given,this,controller,pre,class,code,064,request,mapping,people,class,person,controller,064,request,mapping,id,public,http,entity,lt,void,gt,get,person,064,path,variable,string,id,pre,a,jsp,can,prepare,a,url,to,the,controller,method,as,follows,pre,class,code,taglib,uri,http,www,springframework,org,tags,prefix,s,lt,a,href,s,mvc,url,pc,get,person,arg,0,123,build,gt,get,person,lt,a,gt,pre,p,note,that,it,s,not,necessary,to,specify,all,arguments,only,the,ones,required,to,prepare,the,url,mainly,code,request,param,and,code,path,variable,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,mapping,name,the,mapping,name,return,a,builder,to,prepare,the,uri,string,throws,illegal,argument,exception,if,the,mapping,name,is,not,found,or,if,there,is,no,unique,match,since,4,1;public,static,method,argument,builder,from,mapping,name,string,mapping,name,return,from,mapping,name,null,mapping,name
MvcUriComponentsBuilder -> public static MethodArgumentBuilder fromMappingName(String mappingName);1548943222;Create a URL from the name of a Spring MVC controller method's request mapping._<p>The configured_{@link org.springframework.web.servlet.handler.HandlerMethodMappingNamingStrategy_HandlerMethodMappingNamingStrategy} determines the names of controller_method request mappings at startup. By default all mappings are assigned_a name based on the capital letters of the class name, followed by "#" as_separator, and then the method name. For example "PC#getPerson"_for a class named PersonController with method getPerson. In case the_naming convention does not produce unique results, an explicit name may_be assigned through the name attribute of the {@code @RequestMapping}_annotation._<p>This is aimed primarily for use in view rendering technologies and EL_expressions. The Spring URL tag library registers this method as a function_called "mvcUrl"._<p>For example, given this controller:_<pre class="code">_&#064_RequestMapping("/people")_class PersonController {__&#064_RequestMapping("/{id}")_public HttpEntity&lt_Void&gt_ getPerson(&#064_PathVariable String id) { ... }___</pre>__A JSP can prepare a URL to the controller method as follows:__<pre class="code">_<%@ taglib uri="http://www.springframework.org/tags" prefix="s" %>__&lt_a href="${s:mvcUrl('PC#getPerson').arg(0,"123").build()}"&gt_Get Person&lt_/a&gt__</pre>_<p>Note that it's not necessary to specify all arguments. Only the ones_required to prepare the URL, mainly {@code @RequestParam} and {@code @PathVariable}).__<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs.__@param mappingName the mapping name_@return a builder to prepare the URI String_@throws IllegalArgumentException if the mapping name is not found or_if there is no unique match_@since 4.1;public static MethodArgumentBuilder fromMappingName(String mappingName) {_		return fromMappingName(null, mappingName)__	};create,a,url,from,the,name,of,a,spring,mvc,controller,method,s,request,mapping,p,the,configured,link,org,springframework,web,servlet,handler,handler,method,mapping,naming,strategy,handler,method,mapping,naming,strategy,determines,the,names,of,controller,method,request,mappings,at,startup,by,default,all,mappings,are,assigned,a,name,based,on,the,capital,letters,of,the,class,name,followed,by,as,separator,and,then,the,method,name,for,example,pc,get,person,for,a,class,named,person,controller,with,method,get,person,in,case,the,naming,convention,does,not,produce,unique,results,an,explicit,name,may,be,assigned,through,the,name,attribute,of,the,code,request,mapping,annotation,p,this,is,aimed,primarily,for,use,in,view,rendering,technologies,and,el,expressions,the,spring,url,tag,library,registers,this,method,as,a,function,called,mvc,url,p,for,example,given,this,controller,pre,class,code,064,request,mapping,people,class,person,controller,064,request,mapping,id,public,http,entity,lt,void,gt,get,person,064,path,variable,string,id,pre,a,jsp,can,prepare,a,url,to,the,controller,method,as,follows,pre,class,code,taglib,uri,http,www,springframework,org,tags,prefix,s,lt,a,href,s,mvc,url,pc,get,person,arg,0,123,build,gt,get,person,lt,a,gt,pre,p,note,that,it,s,not,necessary,to,specify,all,arguments,only,the,ones,required,to,prepare,the,url,mainly,code,request,param,and,code,path,variable,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,mapping,name,the,mapping,name,return,a,builder,to,prepare,the,uri,string,throws,illegal,argument,exception,if,the,mapping,name,is,not,found,or,if,there,is,no,unique,match,since,4,1;public,static,method,argument,builder,from,mapping,name,string,mapping,name,return,from,mapping,name,null,mapping,name
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethod(UriComponentsBuilder builder, Method method, Object... args);1426553101;An alternative to {@link #fromMethod(java.lang.reflect.Method, Object...)}_that accepts a {@code UriComponentsBuilder} representing the base URL._This is useful when using MvcUriComponentsBuilder outside the context of_processing a request or to apply a custom baseUrl not matching the_current request._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param method the controller method_@param args argument values for the controller method_@return a UriComponentsBuilder instance, never {@code null};public static UriComponentsBuilder fromMethod(UriComponentsBuilder builder, Method method, Object... args) {_		if (builder != null) {_			builder = (UriComponentsBuilder) builder.clone()__		}_		else {_			builder = ServletUriComponentsBuilder.fromCurrentServletMapping()__		}_		String typePath = getTypeRequestMapping(method.getDeclaringClass())__		String methodPath = getMethodRequestMapping(method)__		String path = pathMatcher.combine(typePath, methodPath)__		builder.path(path)__		UriComponents uriComponents = applyContributors(builder, method, args)__		return UriComponentsBuilder.newInstance().uriComponents(uriComponents)__	};an,alternative,to,link,from,method,java,lang,reflect,method,object,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,method,the,controller,method,param,args,argument,values,for,the,controller,method,return,a,uri,components,builder,instance,never,code,null;public,static,uri,components,builder,from,method,uri,components,builder,builder,method,method,object,args,if,builder,null,builder,uri,components,builder,builder,clone,else,builder,servlet,uri,components,builder,from,current,servlet,mapping,string,type,path,get,type,request,mapping,method,get,declaring,class,string,method,path,get,method,request,mapping,method,string,path,path,matcher,combine,type,path,method,path,builder,path,path,uri,components,uri,components,apply,contributors,builder,method,args,return,uri,components,builder,new,instance,uri,components,uri,components
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethod(UriComponentsBuilder builder, Method method, Object... args);1429801417;An alternative to {@link #fromMethod(java.lang.reflect.Method, Object...)}_that accepts a {@code UriComponentsBuilder} representing the base URL._This is useful when using MvcUriComponentsBuilder outside the context of_processing a request or to apply a custom baseUrl not matching the_current request._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param method the controller method_@param args argument values for the controller method_@return a UriComponentsBuilder instance, never {@code null};public static UriComponentsBuilder fromMethod(UriComponentsBuilder builder, Method method, Object... args) {_		if (builder != null) {_			builder = (UriComponentsBuilder) builder.clone()__		}_		else {_			builder = ServletUriComponentsBuilder.fromCurrentServletMapping()__		}_		String typePath = getTypeRequestMapping(method.getDeclaringClass())__		String methodPath = getMethodRequestMapping(method)__		String path = pathMatcher.combine(typePath, methodPath)__		builder.path(path)__		UriComponents uriComponents = applyContributors(builder, method, args)__		return UriComponentsBuilder.newInstance().uriComponents(uriComponents)__	};an,alternative,to,link,from,method,java,lang,reflect,method,object,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,method,the,controller,method,param,args,argument,values,for,the,controller,method,return,a,uri,components,builder,instance,never,code,null;public,static,uri,components,builder,from,method,uri,components,builder,builder,method,method,object,args,if,builder,null,builder,uri,components,builder,builder,clone,else,builder,servlet,uri,components,builder,from,current,servlet,mapping,string,type,path,get,type,request,mapping,method,get,declaring,class,string,method,path,get,method,request,mapping,method,string,path,path,matcher,combine,type,path,method,path,builder,path,path,uri,components,uri,components,apply,contributors,builder,method,args,return,uri,components,builder,new,instance,uri,components,uri,components
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodCall(Object methodInvocationInfo);1383061199;Create a {@link UriComponents} by invoking a method on a "mock" controller, similar_to how test frameworks provide mock objects and record method invocations._<p>_For example given this controller:__<pre class="code">_&#064_RequestMapping("/people/{id}/addresses")_class AddressController {__&#064_RequestMapping("/{country}")_public HttpEntity<Void> getAddressesForCountry(&#064_PathVariable String country) { … }__&#064_RequestMapping(value="/", method=RequestMethod.POST)_public void addAddress(Address address) { … }__</pre>__A "mock" controller can be used as follows:__<pre>__// Inline style with static import of MvcUriComponentsBuilder.mock__MvcUriComponentsBuilder.fromMethodCall(_mock(CustomerController.class).showAddresses("US")).buildAndExpand(1)___// Longer style for preparing multiple URIs and for void controller methods__CustomerController controller = MvcUriComponentsBuilder.mock(CustomController.class)__controller.addAddress(null)___MvcUriComponentsBuilder.fromMethodCall(controller)___</pre>__The above  supports {@codce @PathVariable} and {@code @RequestParam} method parameters._Any other arguments can be provided as {@literal null} and will be ignored._<p>_Additional (custom) argument types can be supported through an implementation_of {@link org.springframework.web.method.support.UriComponentsContributor}.__@param methodInvocationInfo either the value returned from a "mock" controller_invocation or the "mock" controller itself after an invocation__@return a UriComponents instance;public static UriComponentsBuilder fromMethodCall(Object methodInvocationInfo) {__		Assert.isInstanceOf(MethodInvocationInfo.class, methodInvocationInfo)__		MethodInvocationInfo info = (MethodInvocationInfo) methodInvocationInfo___		Method method = info.getControllerMethod()__		Object[] argumentValues = info.getArgumentValues()___		UriComponentsBuilder builder = ServletUriComponentsBuilder.newInstance().path(getMethodRequestMapping(method))__		UriComponents uriComponents = applyContributors(builder, method, argumentValues)___		String typeMapping = getTypeRequestMapping(method.getDeclaringClass())__		String methodMapping = uriComponents.getPath()__		String path = pathMatcher.combine(typeMapping, methodMapping)___		return ServletUriComponentsBuilder.fromCurrentServletMapping().path(_				path).queryParams(uriComponents.getQueryParams())__	};create,a,link,uri,components,by,invoking,a,method,on,a,mock,controller,similar,to,how,test,frameworks,provide,mock,objects,and,record,method,invocations,p,for,example,given,this,controller,pre,class,code,064,request,mapping,people,id,addresses,class,address,controller,064,request,mapping,country,public,http,entity,void,get,addresses,for,country,064,path,variable,string,country,064,request,mapping,value,method,request,method,post,public,void,add,address,address,address,pre,a,mock,controller,can,be,used,as,follows,pre,inline,style,with,static,import,of,mvc,uri,components,builder,mock,mvc,uri,components,builder,from,method,call,mock,customer,controller,class,show,addresses,us,build,and,expand,1,longer,style,for,preparing,multiple,uris,and,for,void,controller,methods,customer,controller,controller,mvc,uri,components,builder,mock,custom,controller,class,controller,add,address,null,mvc,uri,components,builder,from,method,call,controller,pre,the,above,supports,codce,path,variable,and,code,request,param,method,parameters,any,other,arguments,can,be,provided,as,literal,null,and,will,be,ignored,p,additional,custom,argument,types,can,be,supported,through,an,implementation,of,link,org,springframework,web,method,support,uri,components,contributor,param,method,invocation,info,either,the,value,returned,from,a,mock,controller,invocation,or,the,mock,controller,itself,after,an,invocation,return,a,uri,components,instance;public,static,uri,components,builder,from,method,call,object,method,invocation,info,assert,is,instance,of,method,invocation,info,class,method,invocation,info,method,invocation,info,info,method,invocation,info,method,invocation,info,method,method,info,get,controller,method,object,argument,values,info,get,argument,values,uri,components,builder,builder,servlet,uri,components,builder,new,instance,path,get,method,request,mapping,method,uri,components,uri,components,apply,contributors,builder,method,argument,values,string,type,mapping,get,type,request,mapping,method,get,declaring,class,string,method,mapping,uri,components,get,path,string,path,path,matcher,combine,type,mapping,method,mapping,return,servlet,uri,components,builder,from,current,servlet,mapping,path,path,query,params,uri,components,get,query,params
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodCall(Object methodInvocationInfo);1385412762;Create a {@link UriComponents} by invoking a method on a "mock" controller, similar_to how test frameworks provide mock objects and record method invocations._<p>_For example given this controller:__<pre class="code">_&#064_RequestMapping("/people/{id}/addresses")_class AddressController {__&#064_RequestMapping("/{country}")_public HttpEntity<Void> getAddressesForCountry(&#064_PathVariable String country) { ... }__&#064_RequestMapping(value="/", method=RequestMethod.POST)_public void addAddress(Address address) { ... }__</pre>__A "mock" controller can be used as follows:__<pre>__// Inline style with static import of MvcUriComponentsBuilder.mock__MvcUriComponentsBuilder.fromMethodCall(_mock(CustomerController.class).showAddresses("US")).buildAndExpand(1)___// Longer style for preparing multiple URIs and for void controller methods__CustomerController controller = MvcUriComponentsBuilder.mock(CustomController.class)__controller.addAddress(null)___MvcUriComponentsBuilder.fromMethodCall(controller)___</pre>__The above  supports {@codce @PathVariable} and {@code @RequestParam} method parameters._Any other arguments can be provided as {@literal null} and will be ignored._<p>_Additional (custom) argument types can be supported through an implementation_of {@link org.springframework.web.method.support.UriComponentsContributor}.__@param methodInvocationInfo either the value returned from a "mock" controller_invocation or the "mock" controller itself after an invocation__@return a UriComponents instance;public static UriComponentsBuilder fromMethodCall(Object methodInvocationInfo) {__		Assert.isInstanceOf(MethodInvocationInfo.class, methodInvocationInfo)__		MethodInvocationInfo info = (MethodInvocationInfo) methodInvocationInfo___		Method method = info.getControllerMethod()__		Object[] argumentValues = info.getArgumentValues()___		UriComponentsBuilder builder = ServletUriComponentsBuilder.newInstance().path(getMethodRequestMapping(method))__		UriComponents uriComponents = applyContributors(builder, method, argumentValues)___		String typeMapping = getTypeRequestMapping(method.getDeclaringClass())__		String methodMapping = uriComponents.getPath()__		String path = pathMatcher.combine(typeMapping, methodMapping)___		return ServletUriComponentsBuilder.fromCurrentServletMapping().path(_				path).queryParams(uriComponents.getQueryParams())__	};create,a,link,uri,components,by,invoking,a,method,on,a,mock,controller,similar,to,how,test,frameworks,provide,mock,objects,and,record,method,invocations,p,for,example,given,this,controller,pre,class,code,064,request,mapping,people,id,addresses,class,address,controller,064,request,mapping,country,public,http,entity,void,get,addresses,for,country,064,path,variable,string,country,064,request,mapping,value,method,request,method,post,public,void,add,address,address,address,pre,a,mock,controller,can,be,used,as,follows,pre,inline,style,with,static,import,of,mvc,uri,components,builder,mock,mvc,uri,components,builder,from,method,call,mock,customer,controller,class,show,addresses,us,build,and,expand,1,longer,style,for,preparing,multiple,uris,and,for,void,controller,methods,customer,controller,controller,mvc,uri,components,builder,mock,custom,controller,class,controller,add,address,null,mvc,uri,components,builder,from,method,call,controller,pre,the,above,supports,codce,path,variable,and,code,request,param,method,parameters,any,other,arguments,can,be,provided,as,literal,null,and,will,be,ignored,p,additional,custom,argument,types,can,be,supported,through,an,implementation,of,link,org,springframework,web,method,support,uri,components,contributor,param,method,invocation,info,either,the,value,returned,from,a,mock,controller,invocation,or,the,mock,controller,itself,after,an,invocation,return,a,uri,components,instance;public,static,uri,components,builder,from,method,call,object,method,invocation,info,assert,is,instance,of,method,invocation,info,class,method,invocation,info,method,invocation,info,info,method,invocation,info,method,invocation,info,method,method,info,get,controller,method,object,argument,values,info,get,argument,values,uri,components,builder,builder,servlet,uri,components,builder,new,instance,path,get,method,request,mapping,method,uri,components,uri,components,apply,contributors,builder,method,argument,values,string,type,mapping,get,type,request,mapping,method,get,declaring,class,string,method,mapping,uri,components,get,path,string,path,path,matcher,combine,type,mapping,method,mapping,return,servlet,uri,components,builder,from,current,servlet,mapping,path,path,query,params,uri,components,get,query,params
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodCall(Object methodInvocationInfo);1385501137;Create a {@link UriComponents} by invoking a method on a "mock" controller, similar_to how test frameworks provide mock objects and record method invocations._<p>_For example given this controller:__<pre class="code">_&#064_RequestMapping("/people/{id}/addresses")_class AddressController {__&#064_RequestMapping("/{country}")_public HttpEntity<Void> getAddressesForCountry(&#064_PathVariable String country) { ... }__&#064_RequestMapping(value="/", method=RequestMethod.POST)_public void addAddress(Address address) { ... }__</pre>__A "mock" controller can be used as follows:__<pre>__// Inline style with static import of MvcUriComponentsBuilder.mock__MvcUriComponentsBuilder.fromMethodCall(_mock(CustomerController.class).showAddresses("US")).buildAndExpand(1)___// Longer style for preparing multiple URIs and for void controller methods__CustomerController controller = MvcUriComponentsBuilder.mock(CustomController.class)__controller.addAddress(null)___MvcUriComponentsBuilder.fromMethodCall(controller)___</pre>__The above  supports {@code @PathVariable} and {@code @RequestParam} method parameters._Any other arguments can be provided as {@literal null} and will be ignored._<p>_Additional (custom) argument types can be supported through an implementation_of {@link org.springframework.web.method.support.UriComponentsContributor}.__@param methodInvocationInfo either the value returned from a "mock" controller_invocation or the "mock" controller itself after an invocation__@return a UriComponents instance;public static UriComponentsBuilder fromMethodCall(Object methodInvocationInfo) {__		Assert.isInstanceOf(MethodInvocationInfo.class, methodInvocationInfo)__		MethodInvocationInfo info = (MethodInvocationInfo) methodInvocationInfo___		Method method = info.getControllerMethod()__		Object[] argumentValues = info.getArgumentValues()___		UriComponentsBuilder builder = ServletUriComponentsBuilder.newInstance().path(getMethodRequestMapping(method))__		UriComponents uriComponents = applyContributors(builder, method, argumentValues)___		String typeMapping = getTypeRequestMapping(method.getDeclaringClass())__		String methodMapping = uriComponents.getPath()__		String path = pathMatcher.combine(typeMapping, methodMapping)___		return ServletUriComponentsBuilder.fromCurrentServletMapping().path(_				path).queryParams(uriComponents.getQueryParams())__	};create,a,link,uri,components,by,invoking,a,method,on,a,mock,controller,similar,to,how,test,frameworks,provide,mock,objects,and,record,method,invocations,p,for,example,given,this,controller,pre,class,code,064,request,mapping,people,id,addresses,class,address,controller,064,request,mapping,country,public,http,entity,void,get,addresses,for,country,064,path,variable,string,country,064,request,mapping,value,method,request,method,post,public,void,add,address,address,address,pre,a,mock,controller,can,be,used,as,follows,pre,inline,style,with,static,import,of,mvc,uri,components,builder,mock,mvc,uri,components,builder,from,method,call,mock,customer,controller,class,show,addresses,us,build,and,expand,1,longer,style,for,preparing,multiple,uris,and,for,void,controller,methods,customer,controller,controller,mvc,uri,components,builder,mock,custom,controller,class,controller,add,address,null,mvc,uri,components,builder,from,method,call,controller,pre,the,above,supports,code,path,variable,and,code,request,param,method,parameters,any,other,arguments,can,be,provided,as,literal,null,and,will,be,ignored,p,additional,custom,argument,types,can,be,supported,through,an,implementation,of,link,org,springframework,web,method,support,uri,components,contributor,param,method,invocation,info,either,the,value,returned,from,a,mock,controller,invocation,or,the,mock,controller,itself,after,an,invocation,return,a,uri,components,instance;public,static,uri,components,builder,from,method,call,object,method,invocation,info,assert,is,instance,of,method,invocation,info,class,method,invocation,info,method,invocation,info,info,method,invocation,info,method,invocation,info,method,method,info,get,controller,method,object,argument,values,info,get,argument,values,uri,components,builder,builder,servlet,uri,components,builder,new,instance,path,get,method,request,mapping,method,uri,components,uri,components,apply,contributors,builder,method,argument,values,string,type,mapping,get,type,request,mapping,method,get,declaring,class,string,method,mapping,uri,components,get,path,string,path,path,matcher,combine,type,mapping,method,mapping,return,servlet,uri,components,builder,from,current,servlet,mapping,path,path,query,params,uri,components,get,query,params
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodCall(Object methodInvocationInfo);1385507478;Create a {@link UriComponents} by invoking a method on a "mock" controller, similar_to how test frameworks provide mock objects and record method invocations._<p>For example given this controller:__<pre class="code">_&#064_RequestMapping("/people/{id}/addresses")_class AddressController {__&#064_RequestMapping("/{country}")_public HttpEntity<Void> getAddressesForCountry(&#064_PathVariable String country) { ... }__&#064_RequestMapping(value="/", method=RequestMethod.POST)_public void addAddress(Address address) { ... }__</pre>__A "mock" controller can be used as follows:__<pre>__// Inline style with static import of MvcUriComponentsBuilder.mock__MvcUriComponentsBuilder.fromMethodCall(_mock(CustomerController.class).showAddresses("US")).buildAndExpand(1)___// Longer style for preparing multiple URIs and for void controller methods__CustomerController controller = MvcUriComponentsBuilder.mock(CustomController.class)__controller.addAddress(null)___MvcUriComponentsBuilder.fromMethodCall(controller)___</pre>__The above  supports {@code @PathVariable} and {@code @RequestParam} method parameters._Any other arguments can be provided as {@literal null} and will be ignored._<p>Additional (custom) argument types can be supported through an implementation_of {@link org.springframework.web.method.support.UriComponentsContributor}._@param methodInvocationInfo either the value returned from a "mock" controller_invocation or the "mock" controller itself after an invocation_@return a UriComponents instance;public static UriComponentsBuilder fromMethodCall(Object methodInvocationInfo) {__		Assert.isInstanceOf(MethodInvocationInfo.class, methodInvocationInfo)__		MethodInvocationInfo info = (MethodInvocationInfo) methodInvocationInfo___		Method method = info.getControllerMethod()__		Object[] argumentValues = info.getArgumentValues()___		UriComponentsBuilder builder = ServletUriComponentsBuilder.newInstance().path(getMethodRequestMapping(method))__		UriComponents uriComponents = applyContributors(builder, method, argumentValues)___		String typeMapping = getTypeRequestMapping(method.getDeclaringClass())__		String methodMapping = uriComponents.getPath()__		String path = pathMatcher.combine(typeMapping, methodMapping)___		return ServletUriComponentsBuilder.fromCurrentServletMapping().path(_				path).queryParams(uriComponents.getQueryParams())__	};create,a,link,uri,components,by,invoking,a,method,on,a,mock,controller,similar,to,how,test,frameworks,provide,mock,objects,and,record,method,invocations,p,for,example,given,this,controller,pre,class,code,064,request,mapping,people,id,addresses,class,address,controller,064,request,mapping,country,public,http,entity,void,get,addresses,for,country,064,path,variable,string,country,064,request,mapping,value,method,request,method,post,public,void,add,address,address,address,pre,a,mock,controller,can,be,used,as,follows,pre,inline,style,with,static,import,of,mvc,uri,components,builder,mock,mvc,uri,components,builder,from,method,call,mock,customer,controller,class,show,addresses,us,build,and,expand,1,longer,style,for,preparing,multiple,uris,and,for,void,controller,methods,customer,controller,controller,mvc,uri,components,builder,mock,custom,controller,class,controller,add,address,null,mvc,uri,components,builder,from,method,call,controller,pre,the,above,supports,code,path,variable,and,code,request,param,method,parameters,any,other,arguments,can,be,provided,as,literal,null,and,will,be,ignored,p,additional,custom,argument,types,can,be,supported,through,an,implementation,of,link,org,springframework,web,method,support,uri,components,contributor,param,method,invocation,info,either,the,value,returned,from,a,mock,controller,invocation,or,the,mock,controller,itself,after,an,invocation,return,a,uri,components,instance;public,static,uri,components,builder,from,method,call,object,method,invocation,info,assert,is,instance,of,method,invocation,info,class,method,invocation,info,method,invocation,info,info,method,invocation,info,method,invocation,info,method,method,info,get,controller,method,object,argument,values,info,get,argument,values,uri,components,builder,builder,servlet,uri,components,builder,new,instance,path,get,method,request,mapping,method,uri,components,uri,components,apply,contributors,builder,method,argument,values,string,type,mapping,get,type,request,mapping,method,get,declaring,class,string,method,mapping,uri,components,get,path,string,path,path,matcher,combine,type,mapping,method,mapping,return,servlet,uri,components,builder,from,current,servlet,mapping,path,path,query,params,uri,components,get,query,params
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodCall(Object methodInvocationInfo);1387386512;Create a {@link UriComponents} by invoking a method on a "mock" controller, similar_to how test frameworks provide mock objects and record method invocations._<p>For example given this controller:_<pre class="code">_&#064_RequestMapping("/people/{id}/addresses")_class AddressController {__&#064_RequestMapping("/{country}")_public HttpEntity<Void> getAddressesForCountry(&#064_PathVariable String country) { ... }__&#064_RequestMapping(value="/", method=RequestMethod.POST)_public void addAddress(Address address) { ... }__</pre>_A "mock" controller can be used as follows:_<pre class="code">_// Inline style with static import of MvcUriComponentsBuilder.mock__MvcUriComponentsBuilder.fromMethodCall(_mock(CustomerController.class).showAddresses("US")).buildAndExpand(1)___// Longer style for preparing multiple URIs and for void controller methods__CustomerController controller = MvcUriComponentsBuilder.mock(CustomController.class)__controller.addAddress(null)___MvcUriComponentsBuilder.fromMethodCall(controller)__</pre>_The above  supports {@code @PathVariable} and {@code @RequestParam} method parameters._Any other arguments can be provided as {@literal null} and will be ignored._<p>Additional (custom) argument types can be supported through an implementation_of {@link org.springframework.web.method.support.UriComponentsContributor}._@param methodInvocationInfo either the value returned from a "mock" controller_invocation or the "mock" controller itself after an invocation_@return a UriComponents instance;public static UriComponentsBuilder fromMethodCall(Object methodInvocationInfo) {_		Assert.isInstanceOf(MethodInvocationInfo.class, methodInvocationInfo)__		MethodInvocationInfo info = (MethodInvocationInfo) methodInvocationInfo___		Method method = info.getControllerMethod()__		Object[] argumentValues = info.getArgumentValues()___		UriComponentsBuilder builder = ServletUriComponentsBuilder.newInstance().path(getMethodRequestMapping(method))__		UriComponents uriComponents = applyContributors(builder, method, argumentValues)___		String typeMapping = getTypeRequestMapping(method.getDeclaringClass())__		String methodMapping = uriComponents.getPath()__		String path = pathMatcher.combine(typeMapping, methodMapping)___		return ServletUriComponentsBuilder.fromCurrentServletMapping().path(path).queryParams(uriComponents.getQueryParams())__	};create,a,link,uri,components,by,invoking,a,method,on,a,mock,controller,similar,to,how,test,frameworks,provide,mock,objects,and,record,method,invocations,p,for,example,given,this,controller,pre,class,code,064,request,mapping,people,id,addresses,class,address,controller,064,request,mapping,country,public,http,entity,void,get,addresses,for,country,064,path,variable,string,country,064,request,mapping,value,method,request,method,post,public,void,add,address,address,address,pre,a,mock,controller,can,be,used,as,follows,pre,class,code,inline,style,with,static,import,of,mvc,uri,components,builder,mock,mvc,uri,components,builder,from,method,call,mock,customer,controller,class,show,addresses,us,build,and,expand,1,longer,style,for,preparing,multiple,uris,and,for,void,controller,methods,customer,controller,controller,mvc,uri,components,builder,mock,custom,controller,class,controller,add,address,null,mvc,uri,components,builder,from,method,call,controller,pre,the,above,supports,code,path,variable,and,code,request,param,method,parameters,any,other,arguments,can,be,provided,as,literal,null,and,will,be,ignored,p,additional,custom,argument,types,can,be,supported,through,an,implementation,of,link,org,springframework,web,method,support,uri,components,contributor,param,method,invocation,info,either,the,value,returned,from,a,mock,controller,invocation,or,the,mock,controller,itself,after,an,invocation,return,a,uri,components,instance;public,static,uri,components,builder,from,method,call,object,method,invocation,info,assert,is,instance,of,method,invocation,info,class,method,invocation,info,method,invocation,info,info,method,invocation,info,method,invocation,info,method,method,info,get,controller,method,object,argument,values,info,get,argument,values,uri,components,builder,builder,servlet,uri,components,builder,new,instance,path,get,method,request,mapping,method,uri,components,uri,components,apply,contributors,builder,method,argument,values,string,type,mapping,get,type,request,mapping,method,get,declaring,class,string,method,mapping,uri,components,get,path,string,path,path,matcher,combine,type,mapping,method,mapping,return,servlet,uri,components,builder,from,current,servlet,mapping,path,path,query,params,uri,components,get,query,params
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodCall(Object methodInvocationInfo);1391714711;Create a {@link UriComponents} by invoking a method on a "mock" controller, similar_to how test frameworks provide mock objects and record method invocations._<p>For example given this controller:_<pre class="code">_&#064_RequestMapping("/people/{id}/addresses")_class AddressController {__&#064_RequestMapping("/{country}")_public HttpEntity<Void> getAddressesForCountry(&#064_PathVariable String country) { ... }__&#064_RequestMapping(value="/", method=RequestMethod.POST)_public void addAddress(Address address) { ... }__</pre>_A "mock" controller can be used as follows:_<pre class="code">_// Inline style with static import of MvcUriComponentsBuilder.mock__MvcUriComponentsBuilder.fromMethodCall(_mock(CustomerController.class).showAddresses("US")).buildAndExpand(1)___// Longer style for preparing multiple URIs and for void controller methods__CustomerController controller = MvcUriComponentsBuilder.mock(CustomController.class)__controller.addAddress(null)___MvcUriComponentsBuilder.fromMethodCall(controller)__</pre>_The above  supports {@code @PathVariable} and {@code @RequestParam} method parameters._Any other arguments can be provided as {@literal null} and will be ignored._<p>Additional (custom) argument types can be supported through an implementation_of {@link org.springframework.web.method.support.UriComponentsContributor}._@param methodInvocationInfo either the value returned from a "mock" controller_invocation or the "mock" controller itself after an invocation_@return a UriComponents instance;public static UriComponentsBuilder fromMethodCall(Object methodInvocationInfo) {_		Assert.isInstanceOf(MethodInvocationInfo.class, methodInvocationInfo)__		MethodInvocationInfo info = (MethodInvocationInfo) methodInvocationInfo___		Method method = info.getControllerMethod()__		Object[] argumentValues = info.getArgumentValues()___		UriComponentsBuilder builder = ServletUriComponentsBuilder.newInstance().path(getMethodRequestMapping(method))__		UriComponents uriComponents = applyContributors(builder, method, argumentValues)___		String typeMapping = getTypeRequestMapping(method.getDeclaringClass())__		String methodMapping = uriComponents.getPath()__		String path = pathMatcher.combine(typeMapping, methodMapping)___		return ServletUriComponentsBuilder.fromCurrentServletMapping().path(path).queryParams(uriComponents.getQueryParams())__	};create,a,link,uri,components,by,invoking,a,method,on,a,mock,controller,similar,to,how,test,frameworks,provide,mock,objects,and,record,method,invocations,p,for,example,given,this,controller,pre,class,code,064,request,mapping,people,id,addresses,class,address,controller,064,request,mapping,country,public,http,entity,void,get,addresses,for,country,064,path,variable,string,country,064,request,mapping,value,method,request,method,post,public,void,add,address,address,address,pre,a,mock,controller,can,be,used,as,follows,pre,class,code,inline,style,with,static,import,of,mvc,uri,components,builder,mock,mvc,uri,components,builder,from,method,call,mock,customer,controller,class,show,addresses,us,build,and,expand,1,longer,style,for,preparing,multiple,uris,and,for,void,controller,methods,customer,controller,controller,mvc,uri,components,builder,mock,custom,controller,class,controller,add,address,null,mvc,uri,components,builder,from,method,call,controller,pre,the,above,supports,code,path,variable,and,code,request,param,method,parameters,any,other,arguments,can,be,provided,as,literal,null,and,will,be,ignored,p,additional,custom,argument,types,can,be,supported,through,an,implementation,of,link,org,springframework,web,method,support,uri,components,contributor,param,method,invocation,info,either,the,value,returned,from,a,mock,controller,invocation,or,the,mock,controller,itself,after,an,invocation,return,a,uri,components,instance;public,static,uri,components,builder,from,method,call,object,method,invocation,info,assert,is,instance,of,method,invocation,info,class,method,invocation,info,method,invocation,info,info,method,invocation,info,method,invocation,info,method,method,info,get,controller,method,object,argument,values,info,get,argument,values,uri,components,builder,builder,servlet,uri,components,builder,new,instance,path,get,method,request,mapping,method,uri,components,uri,components,apply,contributors,builder,method,argument,values,string,type,mapping,get,type,request,mapping,method,get,declaring,class,string,method,mapping,uri,components,get,path,string,path,path,matcher,combine,type,mapping,method,mapping,return,servlet,uri,components,builder,from,current,servlet,mapping,path,path,query,params,uri,components,get,query,params
MvcUriComponentsBuilder -> MethodInvocationInfo -> Class<?> getControllerType()_;1530174524;Return the controller types.;Class<?> getControllerType()_;return,the,controller,types;class,get,controller,type
MvcUriComponentsBuilder -> MethodInvocationInfo -> Class<?> getControllerType()_;1532041662;Return the controller types.;Class<?> getControllerType()_;return,the,controller,types;class,get,controller,type
MvcUriComponentsBuilder -> MethodInvocationInfo -> Class<?> getControllerType()_;1532041662;Return the controller types.;Class<?> getControllerType()_;return,the,controller,types;class,get,controller,type
MvcUriComponentsBuilder -> MethodInvocationInfo -> Class<?> getControllerType()_;1548943222;Return the controller types.;Class<?> getControllerType()_;return,the,controller,types;class,get,controller,type
MvcUriComponentsBuilder -> public static <T> T on(Class<T> controllerType);1383061199;Return a "mock" controller instance. When an {@code @RequestMapping} method_on the controller is invoked, the supplied argument values are remembered_and the result can then be used to prepare a URL to the method via_{@link #fromMethodCall(Object)}._<p>_This is a shorthand version of {@link #controller(Class)} intended for_inline use as follows:__<pre>_UriComponentsBuilder builder = MvcUriComponentsBuilder.fromMethodCall(_on(FooController.class).getFoo(1)).build()__</pre>__@param controllerType the target controller;public static <T> T on(Class<T> controllerType) {_		return controller(controllerType)__	};return,a,mock,controller,instance,when,an,code,request,mapping,method,on,the,controller,is,invoked,the,supplied,argument,values,are,remembered,and,the,result,can,then,be,used,to,prepare,a,url,to,the,method,via,link,from,method,call,object,p,this,is,a,shorthand,version,of,link,controller,class,intended,for,inline,use,as,follows,pre,uri,components,builder,builder,mvc,uri,components,builder,from,method,call,on,foo,controller,class,get,foo,1,build,pre,param,controller,type,the,target,controller;public,static,t,t,on,class,t,controller,type,return,controller,controller,type
MvcUriComponentsBuilder -> public static <T> T on(Class<T> controllerType);1385412762;Return a "mock" controller instance. When an {@code @RequestMapping} method_on the controller is invoked, the supplied argument values are remembered_and the result can then be used to prepare a URL to the method via_{@link #fromMethodCall(Object)}._<p>_This is a shorthand version of {@link #controller(Class)} intended for_inline use as follows:__<pre>_UriComponentsBuilder builder = MvcUriComponentsBuilder.fromMethodCall(_on(FooController.class).getFoo(1)).build()__</pre>__@param controllerType the target controller;public static <T> T on(Class<T> controllerType) {_		return controller(controllerType)__	};return,a,mock,controller,instance,when,an,code,request,mapping,method,on,the,controller,is,invoked,the,supplied,argument,values,are,remembered,and,the,result,can,then,be,used,to,prepare,a,url,to,the,method,via,link,from,method,call,object,p,this,is,a,shorthand,version,of,link,controller,class,intended,for,inline,use,as,follows,pre,uri,components,builder,builder,mvc,uri,components,builder,from,method,call,on,foo,controller,class,get,foo,1,build,pre,param,controller,type,the,target,controller;public,static,t,t,on,class,t,controller,type,return,controller,controller,type
MvcUriComponentsBuilder -> public static <T> T on(Class<T> controllerType);1385501137;Return a "mock" controller instance. When an {@code @RequestMapping} method_on the controller is invoked, the supplied argument values are remembered_and the result can then be used to prepare a URL to the method via_{@link #fromMethodCall(Object)}._<p>_This is a shorthand version of {@link #controller(Class)} intended for_inline use as follows:__<pre>_UriComponentsBuilder builder = MvcUriComponentsBuilder.fromMethodCall(_on(FooController.class).getFoo(1)).build()__</pre>__@param controllerType the target controller;public static <T> T on(Class<T> controllerType) {_		return controller(controllerType)__	};return,a,mock,controller,instance,when,an,code,request,mapping,method,on,the,controller,is,invoked,the,supplied,argument,values,are,remembered,and,the,result,can,then,be,used,to,prepare,a,url,to,the,method,via,link,from,method,call,object,p,this,is,a,shorthand,version,of,link,controller,class,intended,for,inline,use,as,follows,pre,uri,components,builder,builder,mvc,uri,components,builder,from,method,call,on,foo,controller,class,get,foo,1,build,pre,param,controller,type,the,target,controller;public,static,t,t,on,class,t,controller,type,return,controller,controller,type
MvcUriComponentsBuilder -> public static <T> T on(Class<T> controllerType);1385507478;Return a "mock" controller instance. When an {@code @RequestMapping} method_on the controller is invoked, the supplied argument values are remembered_and the result can then be used to prepare a URL to the method via_{@link #fromMethodCall(Object)}._<p>This is a shorthand version of {@link #controller(Class)} intended for_inline use as follows:_<pre>_UriComponentsBuilder builder = MvcUriComponentsBuilder.fromMethodCall(_on(FooController.class).getFoo(1)).build()__</pre>_@param controllerType the target controller;public static <T> T on(Class<T> controllerType) {_		return controller(controllerType)__	};return,a,mock,controller,instance,when,an,code,request,mapping,method,on,the,controller,is,invoked,the,supplied,argument,values,are,remembered,and,the,result,can,then,be,used,to,prepare,a,url,to,the,method,via,link,from,method,call,object,p,this,is,a,shorthand,version,of,link,controller,class,intended,for,inline,use,as,follows,pre,uri,components,builder,builder,mvc,uri,components,builder,from,method,call,on,foo,controller,class,get,foo,1,build,pre,param,controller,type,the,target,controller;public,static,t,t,on,class,t,controller,type,return,controller,controller,type
MvcUriComponentsBuilder -> public static <T> T on(Class<T> controllerType);1387386512;Return a "mock" controller instance. When an {@code @RequestMapping} method_on the controller is invoked, the supplied argument values are remembered_and the result can then be used to prepare a URL to the method via_{@link #fromMethodCall(Object)}._<p>This is a shorthand version of {@link #controller(Class)} intended for_inline use as follows:_<pre class="code">_UriComponentsBuilder builder = MvcUriComponentsBuilder.fromMethodCall(_on(FooController.class).getFoo(1)).build()__</pre>_@param controllerType the target controller;public static <T> T on(Class<T> controllerType) {_		return controller(controllerType)__	};return,a,mock,controller,instance,when,an,code,request,mapping,method,on,the,controller,is,invoked,the,supplied,argument,values,are,remembered,and,the,result,can,then,be,used,to,prepare,a,url,to,the,method,via,link,from,method,call,object,p,this,is,a,shorthand,version,of,link,controller,class,intended,for,inline,use,as,follows,pre,class,code,uri,components,builder,builder,mvc,uri,components,builder,from,method,call,on,foo,controller,class,get,foo,1,build,pre,param,controller,type,the,target,controller;public,static,t,t,on,class,t,controller,type,return,controller,controller,type
MvcUriComponentsBuilder -> public static <T> T on(Class<T> controllerType);1391714711;Return a "mock" controller instance. When an {@code @RequestMapping} method_on the controller is invoked, the supplied argument values are remembered_and the result can then be used to prepare a URL to the method via_{@link #fromMethodCall(Object)}._<p>This is a shorthand version of {@link #controller(Class)} intended for_inline use as follows:_<pre class="code">_UriComponentsBuilder builder = MvcUriComponentsBuilder.fromMethodCall(_on(FooController.class).getFoo(1)).build()__</pre>_@param controllerType the target controller;public static <T> T on(Class<T> controllerType) {_		return controller(controllerType)__	};return,a,mock,controller,instance,when,an,code,request,mapping,method,on,the,controller,is,invoked,the,supplied,argument,values,are,remembered,and,the,result,can,then,be,used,to,prepare,a,url,to,the,method,via,link,from,method,call,object,p,this,is,a,shorthand,version,of,link,controller,class,intended,for,inline,use,as,follows,pre,class,code,uri,components,builder,builder,mvc,uri,components,builder,from,method,call,on,foo,controller,class,get,foo,1,build,pre,param,controller,type,the,target,controller;public,static,t,t,on,class,t,controller,type,return,controller,controller,type
MvcUriComponentsBuilder -> public static <T> T on(Class<T> controllerType);1391723719;Return a "mock" controller instance. When an {@code @RequestMapping} method_on the controller is invoked, the supplied argument values are remembered_and the result can then be used to create a {@code UriComponentsBuilder}_via {@link #fromMethodCall(Object)}._<p>_Note that this is a shorthand version of {@link #controller(Class)} intended_for inline use (with a static import), for example:_<pre class="code">_MvcUriComponentsBuilder.fromMethodCall(on(FooController.class).getFoo(1)).build()__</pre>_@param controllerType the target controller;public static <T> T on(Class<T> controllerType) {_		return controller(controllerType)__	};return,a,mock,controller,instance,when,an,code,request,mapping,method,on,the,controller,is,invoked,the,supplied,argument,values,are,remembered,and,the,result,can,then,be,used,to,create,a,code,uri,components,builder,via,link,from,method,call,object,p,note,that,this,is,a,shorthand,version,of,link,controller,class,intended,for,inline,use,with,a,static,import,for,example,pre,class,code,mvc,uri,components,builder,from,method,call,on,foo,controller,class,get,foo,1,build,pre,param,controller,type,the,target,controller;public,static,t,t,on,class,t,controller,type,return,controller,controller,type
MvcUriComponentsBuilder -> public static <T> T on(Class<T> controllerType);1391723719;Return a "mock" controller instance. When an {@code @RequestMapping} method_on the controller is invoked, the supplied argument values are remembered_and the result can then be used to create a {@code UriComponentsBuilder}_via {@link #fromMethodCall(Object)}._<p>_Note that this is a shorthand version of {@link #controller(Class)} intended_for inline use (with a static import), for example:_<pre class="code">_MvcUriComponentsBuilder.fromMethodCall(on(FooController.class).getFoo(1)).build()__</pre>_@param controllerType the target controller;public static <T> T on(Class<T> controllerType) {_		return controller(controllerType)__	};return,a,mock,controller,instance,when,an,code,request,mapping,method,on,the,controller,is,invoked,the,supplied,argument,values,are,remembered,and,the,result,can,then,be,used,to,create,a,code,uri,components,builder,via,link,from,method,call,object,p,note,that,this,is,a,shorthand,version,of,link,controller,class,intended,for,inline,use,with,a,static,import,for,example,pre,class,code,mvc,uri,components,builder,from,method,call,on,foo,controller,class,get,foo,1,build,pre,param,controller,type,the,target,controller;public,static,t,t,on,class,t,controller,type,return,controller,controller,type
MvcUriComponentsBuilder -> public static <T> T on(Class<T> controllerType);1399404473;Return a "mock" controller instance. When an {@code @RequestMapping} method_on the controller is invoked, the supplied argument values are remembered_and the result can then be used to create a {@code UriComponentsBuilder}_via {@link #fromMethodCall(Object)}._<p>_Note that this is a shorthand version of {@link #controller(Class)} intended_for inline use (with a static import), for example:_<pre class="code">_MvcUriComponentsBuilder.fromMethodCall(on(FooController.class).getFoo(1)).build()__</pre>_@param controllerType the target controller;public static <T> T on(Class<T> controllerType) {_		return controller(controllerType)__	};return,a,mock,controller,instance,when,an,code,request,mapping,method,on,the,controller,is,invoked,the,supplied,argument,values,are,remembered,and,the,result,can,then,be,used,to,create,a,code,uri,components,builder,via,link,from,method,call,object,p,note,that,this,is,a,shorthand,version,of,link,controller,class,intended,for,inline,use,with,a,static,import,for,example,pre,class,code,mvc,uri,components,builder,from,method,call,on,foo,controller,class,get,foo,1,build,pre,param,controller,type,the,target,controller;public,static,t,t,on,class,t,controller,type,return,controller,controller,type
MvcUriComponentsBuilder -> public static <T> T on(Class<T> controllerType);1400538909;Return a "mock" controller instance. When an {@code @RequestMapping} method_on the controller is invoked, the supplied argument values are remembered_and the result can then be used to create a {@code UriComponentsBuilder}_via {@link #fromMethodCall(Object)}._<p>_Note that this is a shorthand version of {@link #controller(Class)} intended_for inline use (with a static import), for example:_<pre class="code">_MvcUriComponentsBuilder.fromMethodCall(on(FooController.class).getFoo(1)).build()__</pre>_@param controllerType the target controller;public static <T> T on(Class<T> controllerType) {_		return controller(controllerType)__	};return,a,mock,controller,instance,when,an,code,request,mapping,method,on,the,controller,is,invoked,the,supplied,argument,values,are,remembered,and,the,result,can,then,be,used,to,create,a,code,uri,components,builder,via,link,from,method,call,object,p,note,that,this,is,a,shorthand,version,of,link,controller,class,intended,for,inline,use,with,a,static,import,for,example,pre,class,code,mvc,uri,components,builder,from,method,call,on,foo,controller,class,get,foo,1,build,pre,param,controller,type,the,target,controller;public,static,t,t,on,class,t,controller,type,return,controller,controller,type
MvcUriComponentsBuilder -> public static <T> T on(Class<T> controllerType);1400542981;Return a "mock" controller instance. When an {@code @RequestMapping} method_on the controller is invoked, the supplied argument values are remembered_and the result can then be used to create a {@code UriComponentsBuilder}_via {@link #fromMethodCall(Object)}._<p>_Note that this is a shorthand version of {@link #controller(Class)} intended_for inline use (with a static import), for example:_<pre class="code">_MvcUriComponentsBuilder.fromMethodCall(on(FooController.class).getFoo(1)).build()__</pre>_@param controllerType the target controller;public static <T> T on(Class<T> controllerType) {_		return controller(controllerType)__	};return,a,mock,controller,instance,when,an,code,request,mapping,method,on,the,controller,is,invoked,the,supplied,argument,values,are,remembered,and,the,result,can,then,be,used,to,create,a,code,uri,components,builder,via,link,from,method,call,object,p,note,that,this,is,a,shorthand,version,of,link,controller,class,intended,for,inline,use,with,a,static,import,for,example,pre,class,code,mvc,uri,components,builder,from,method,call,on,foo,controller,class,get,foo,1,build,pre,param,controller,type,the,target,controller;public,static,t,t,on,class,t,controller,type,return,controller,controller,type
MvcUriComponentsBuilder -> public static <T> T on(Class<T> controllerType);1402438271;Return a "mock" controller instance. When an {@code @RequestMapping} method_on the controller is invoked, the supplied argument values are remembered_and the result can then be used to create a {@code UriComponentsBuilder}_via {@link #fromMethodCall(Object)}._<p>_Note that this is a shorthand version of {@link #controller(Class)} intended_for inline use (with a static import), for example:_<pre class="code">_MvcUriComponentsBuilder.fromMethodCall(on(FooController.class).getFoo(1)).build()__</pre>_@param controllerType the target controller;public static <T> T on(Class<T> controllerType) {_		return controller(controllerType)__	};return,a,mock,controller,instance,when,an,code,request,mapping,method,on,the,controller,is,invoked,the,supplied,argument,values,are,remembered,and,the,result,can,then,be,used,to,create,a,code,uri,components,builder,via,link,from,method,call,object,p,note,that,this,is,a,shorthand,version,of,link,controller,class,intended,for,inline,use,with,a,static,import,for,example,pre,class,code,mvc,uri,components,builder,from,method,call,on,foo,controller,class,get,foo,1,build,pre,param,controller,type,the,target,controller;public,static,t,t,on,class,t,controller,type,return,controller,controller,type
MvcUriComponentsBuilder -> public static <T> T on(Class<T> controllerType);1413848647;Return a "mock" controller instance. When an {@code @RequestMapping} method_on the controller is invoked, the supplied argument values are remembered_and the result can then be used to create a {@code UriComponentsBuilder}_via {@link #fromMethodCall(Object)}._<p>_Note that this is a shorthand version of {@link #controller(Class)} intended_for inline use (with a static import), for example:_<pre class="code">_MvcUriComponentsBuilder.fromMethodCall(on(FooController.class).getFoo(1)).build()__</pre>_@param controllerType the target controller;public static <T> T on(Class<T> controllerType) {_		return controller(controllerType)__	};return,a,mock,controller,instance,when,an,code,request,mapping,method,on,the,controller,is,invoked,the,supplied,argument,values,are,remembered,and,the,result,can,then,be,used,to,create,a,code,uri,components,builder,via,link,from,method,call,object,p,note,that,this,is,a,shorthand,version,of,link,controller,class,intended,for,inline,use,with,a,static,import,for,example,pre,class,code,mvc,uri,components,builder,from,method,call,on,foo,controller,class,get,foo,1,build,pre,param,controller,type,the,target,controller;public,static,t,t,on,class,t,controller,type,return,controller,controller,type
MvcUriComponentsBuilder -> public static <T> T on(Class<T> controllerType);1417799775;Return a "mock" controller instance. When an {@code @RequestMapping} method_on the controller is invoked, the supplied argument values are remembered_and the result can then be used to create a {@code UriComponentsBuilder}_via {@link #fromMethodCall(Object)}._<p>_Note that this is a shorthand version of {@link #controller(Class)} intended_for inline use (with a static import), for example:_<pre class="code">_MvcUriComponentsBuilder.fromMethodCall(on(FooController.class).getFoo(1)).build()__</pre>_@param controllerType the target controller;public static <T> T on(Class<T> controllerType) {_		return controller(controllerType)__	};return,a,mock,controller,instance,when,an,code,request,mapping,method,on,the,controller,is,invoked,the,supplied,argument,values,are,remembered,and,the,result,can,then,be,used,to,create,a,code,uri,components,builder,via,link,from,method,call,object,p,note,that,this,is,a,shorthand,version,of,link,controller,class,intended,for,inline,use,with,a,static,import,for,example,pre,class,code,mvc,uri,components,builder,from,method,call,on,foo,controller,class,get,foo,1,build,pre,param,controller,type,the,target,controller;public,static,t,t,on,class,t,controller,type,return,controller,controller,type
MvcUriComponentsBuilder -> public static <T> T on(Class<T> controllerType);1424972092;Return a "mock" controller instance. When an {@code @RequestMapping} method_on the controller is invoked, the supplied argument values are remembered_and the result can then be used to create a {@code UriComponentsBuilder}_via {@link #fromMethodCall(Object)}._<p>_Note that this is a shorthand version of {@link #controller(Class)} intended_for inline use (with a static import), for example:_<pre class="code">_MvcUriComponentsBuilder.fromMethodCall(on(FooController.class).getFoo(1)).build()__</pre>_@param controllerType the target controller;public static <T> T on(Class<T> controllerType) {_		return controller(controllerType)__	};return,a,mock,controller,instance,when,an,code,request,mapping,method,on,the,controller,is,invoked,the,supplied,argument,values,are,remembered,and,the,result,can,then,be,used,to,create,a,code,uri,components,builder,via,link,from,method,call,object,p,note,that,this,is,a,shorthand,version,of,link,controller,class,intended,for,inline,use,with,a,static,import,for,example,pre,class,code,mvc,uri,components,builder,from,method,call,on,foo,controller,class,get,foo,1,build,pre,param,controller,type,the,target,controller;public,static,t,t,on,class,t,controller,type,return,controller,controller,type
MvcUriComponentsBuilder -> public static <T> T on(Class<T> controllerType);1426553101;Return a "mock" controller instance. When an {@code @RequestMapping} method_on the controller is invoked, the supplied argument values are remembered_and the result can then be used to create a {@code UriComponentsBuilder}_via {@link #fromMethodCall(Object)}._<p>_Note that this is a shorthand version of {@link #controller(Class)} intended_for inline use (with a static import), for example:_<pre class="code">_MvcUriComponentsBuilder.fromMethodCall(on(FooController.class).getFoo(1)).build()__</pre>_@param controllerType the target controller;public static <T> T on(Class<T> controllerType) {_		return controller(controllerType)__	};return,a,mock,controller,instance,when,an,code,request,mapping,method,on,the,controller,is,invoked,the,supplied,argument,values,are,remembered,and,the,result,can,then,be,used,to,create,a,code,uri,components,builder,via,link,from,method,call,object,p,note,that,this,is,a,shorthand,version,of,link,controller,class,intended,for,inline,use,with,a,static,import,for,example,pre,class,code,mvc,uri,components,builder,from,method,call,on,foo,controller,class,get,foo,1,build,pre,param,controller,type,the,target,controller;public,static,t,t,on,class,t,controller,type,return,controller,controller,type
MvcUriComponentsBuilder -> public static <T> T on(Class<T> controllerType);1429801417;Return a "mock" controller instance. When an {@code @RequestMapping} method_on the controller is invoked, the supplied argument values are remembered_and the result can then be used to create a {@code UriComponentsBuilder}_via {@link #fromMethodCall(Object)}._<p>_Note that this is a shorthand version of {@link #controller(Class)} intended_for inline use (with a static import), for example:_<pre class="code">_MvcUriComponentsBuilder.fromMethodCall(on(FooController.class).getFoo(1)).build()__</pre>_@param controllerType the target controller;public static <T> T on(Class<T> controllerType) {_		return controller(controllerType)__	};return,a,mock,controller,instance,when,an,code,request,mapping,method,on,the,controller,is,invoked,the,supplied,argument,values,are,remembered,and,the,result,can,then,be,used,to,create,a,code,uri,components,builder,via,link,from,method,call,object,p,note,that,this,is,a,shorthand,version,of,link,controller,class,intended,for,inline,use,with,a,static,import,for,example,pre,class,code,mvc,uri,components,builder,from,method,call,on,foo,controller,class,get,foo,1,build,pre,param,controller,type,the,target,controller;public,static,t,t,on,class,t,controller,type,return,controller,controller,type
MvcUriComponentsBuilder -> public static <T> T on(Class<T> controllerType);1429801944;Return a "mock" controller instance. When an {@code @RequestMapping} method_on the controller is invoked, the supplied argument values are remembered_and the result can then be used to create a {@code UriComponentsBuilder}_via {@link #fromMethodCall(Object)}._<p>_Note that this is a shorthand version of {@link #controller(Class)} intended_for inline use (with a static import), for example:_<pre class="code">_MvcUriComponentsBuilder.fromMethodCall(on(FooController.class).getFoo(1)).build()__</pre>_@param controllerType the target controller;public static <T> T on(Class<T> controllerType) {_		return controller(controllerType)__	};return,a,mock,controller,instance,when,an,code,request,mapping,method,on,the,controller,is,invoked,the,supplied,argument,values,are,remembered,and,the,result,can,then,be,used,to,create,a,code,uri,components,builder,via,link,from,method,call,object,p,note,that,this,is,a,shorthand,version,of,link,controller,class,intended,for,inline,use,with,a,static,import,for,example,pre,class,code,mvc,uri,components,builder,from,method,call,on,foo,controller,class,get,foo,1,build,pre,param,controller,type,the,target,controller;public,static,t,t,on,class,t,controller,type,return,controller,controller,type
MvcUriComponentsBuilder -> public static <T> T on(Class<T> controllerType);1429802180;Return a "mock" controller instance. When an {@code @RequestMapping} method_on the controller is invoked, the supplied argument values are remembered_and the result can then be used to create a {@code UriComponentsBuilder}_via {@link #fromMethodCall(Object)}._<p>_Note that this is a shorthand version of {@link #controller(Class)} intended_for inline use (with a static import), for example:_<pre class="code">_MvcUriComponentsBuilder.fromMethodCall(on(FooController.class).getFoo(1)).build()__</pre>_@param controllerType the target controller;public static <T> T on(Class<T> controllerType) {_		return controller(controllerType)__	};return,a,mock,controller,instance,when,an,code,request,mapping,method,on,the,controller,is,invoked,the,supplied,argument,values,are,remembered,and,the,result,can,then,be,used,to,create,a,code,uri,components,builder,via,link,from,method,call,object,p,note,that,this,is,a,shorthand,version,of,link,controller,class,intended,for,inline,use,with,a,static,import,for,example,pre,class,code,mvc,uri,components,builder,from,method,call,on,foo,controller,class,get,foo,1,build,pre,param,controller,type,the,target,controller;public,static,t,t,on,class,t,controller,type,return,controller,controller,type
MvcUriComponentsBuilder -> public static <T> T on(Class<T> controllerType);1429886024;Return a "mock" controller instance. When an {@code @RequestMapping} method_on the controller is invoked, the supplied argument values are remembered_and the result can then be used to create a {@code UriComponentsBuilder}_via {@link #fromMethodCall(Object)}._<p>_Note that this is a shorthand version of {@link #controller(Class)} intended_for inline use (with a static import), for example:_<pre class="code">_MvcUriComponentsBuilder.fromMethodCall(on(FooController.class).getFoo(1)).build()__</pre>_@param controllerType the target controller;public static <T> T on(Class<T> controllerType) {_		return controller(controllerType)__	};return,a,mock,controller,instance,when,an,code,request,mapping,method,on,the,controller,is,invoked,the,supplied,argument,values,are,remembered,and,the,result,can,then,be,used,to,create,a,code,uri,components,builder,via,link,from,method,call,object,p,note,that,this,is,a,shorthand,version,of,link,controller,class,intended,for,inline,use,with,a,static,import,for,example,pre,class,code,mvc,uri,components,builder,from,method,call,on,foo,controller,class,get,foo,1,build,pre,param,controller,type,the,target,controller;public,static,t,t,on,class,t,controller,type,return,controller,controller,type
MvcUriComponentsBuilder -> public static <T> T on(Class<T> controllerType);1429888980;Return a "mock" controller instance. When an {@code @RequestMapping} method_on the controller is invoked, the supplied argument values are remembered_and the result can then be used to create a {@code UriComponentsBuilder}_via {@link #fromMethodCall(Object)}._<p>_Note that this is a shorthand version of {@link #controller(Class)} intended_for inline use (with a static import), for example:_<pre class="code">_MvcUriComponentsBuilder.fromMethodCall(on(FooController.class).getFoo(1)).build()__</pre>_@param controllerType the target controller;public static <T> T on(Class<T> controllerType) {_		return controller(controllerType)__	};return,a,mock,controller,instance,when,an,code,request,mapping,method,on,the,controller,is,invoked,the,supplied,argument,values,are,remembered,and,the,result,can,then,be,used,to,create,a,code,uri,components,builder,via,link,from,method,call,object,p,note,that,this,is,a,shorthand,version,of,link,controller,class,intended,for,inline,use,with,a,static,import,for,example,pre,class,code,mvc,uri,components,builder,from,method,call,on,foo,controller,class,get,foo,1,build,pre,param,controller,type,the,target,controller;public,static,t,t,on,class,t,controller,type,return,controller,controller,type
MvcUriComponentsBuilder -> public static <T> T on(Class<T> controllerType);1430739806;Return a "mock" controller instance. When an {@code @RequestMapping} method_on the controller is invoked, the supplied argument values are remembered_and the result can then be used to create a {@code UriComponentsBuilder}_via {@link #fromMethodCall(Object)}._<p>_Note that this is a shorthand version of {@link #controller(Class)} intended_for inline use (with a static import), for example:_<pre class="code">_MvcUriComponentsBuilder.fromMethodCall(on(FooController.class).getFoo(1)).build()__</pre>_@param controllerType the target controller;public static <T> T on(Class<T> controllerType) {_		return controller(controllerType)__	};return,a,mock,controller,instance,when,an,code,request,mapping,method,on,the,controller,is,invoked,the,supplied,argument,values,are,remembered,and,the,result,can,then,be,used,to,create,a,code,uri,components,builder,via,link,from,method,call,object,p,note,that,this,is,a,shorthand,version,of,link,controller,class,intended,for,inline,use,with,a,static,import,for,example,pre,class,code,mvc,uri,components,builder,from,method,call,on,foo,controller,class,get,foo,1,build,pre,param,controller,type,the,target,controller;public,static,t,t,on,class,t,controller,type,return,controller,controller,type
MvcUriComponentsBuilder -> public static <T> T on(Class<T> controllerType);1430747547;Return a "mock" controller instance. When an {@code @RequestMapping} method_on the controller is invoked, the supplied argument values are remembered_and the result can then be used to create a {@code UriComponentsBuilder}_via {@link #fromMethodCall(Object)}._<p>_Note that this is a shorthand version of {@link #controller(Class)} intended_for inline use (with a static import), for example:_<pre class="code">_MvcUriComponentsBuilder.fromMethodCall(on(FooController.class).getFoo(1)).build()__</pre>_@param controllerType the target controller;public static <T> T on(Class<T> controllerType) {_		return controller(controllerType)__	};return,a,mock,controller,instance,when,an,code,request,mapping,method,on,the,controller,is,invoked,the,supplied,argument,values,are,remembered,and,the,result,can,then,be,used,to,create,a,code,uri,components,builder,via,link,from,method,call,object,p,note,that,this,is,a,shorthand,version,of,link,controller,class,intended,for,inline,use,with,a,static,import,for,example,pre,class,code,mvc,uri,components,builder,from,method,call,on,foo,controller,class,get,foo,1,build,pre,param,controller,type,the,target,controller;public,static,t,t,on,class,t,controller,type,return,controller,controller,type
MvcUriComponentsBuilder -> public static <T> T on(Class<T> controllerType);1430749606;Return a "mock" controller instance. When an {@code @RequestMapping} method_on the controller is invoked, the supplied argument values are remembered_and the result can then be used to create a {@code UriComponentsBuilder}_via {@link #fromMethodCall(Object)}._<p>_Note that this is a shorthand version of {@link #controller(Class)} intended_for inline use (with a static import), for example:_<pre class="code">_MvcUriComponentsBuilder.fromMethodCall(on(FooController.class).getFoo(1)).build()__</pre>_@param controllerType the target controller;public static <T> T on(Class<T> controllerType) {_		return controller(controllerType)__	};return,a,mock,controller,instance,when,an,code,request,mapping,method,on,the,controller,is,invoked,the,supplied,argument,values,are,remembered,and,the,result,can,then,be,used,to,create,a,code,uri,components,builder,via,link,from,method,call,object,p,note,that,this,is,a,shorthand,version,of,link,controller,class,intended,for,inline,use,with,a,static,import,for,example,pre,class,code,mvc,uri,components,builder,from,method,call,on,foo,controller,class,get,foo,1,build,pre,param,controller,type,the,target,controller;public,static,t,t,on,class,t,controller,type,return,controller,controller,type
MvcUriComponentsBuilder -> public static <T> T on(Class<T> controllerType);1431975386;Return a "mock" controller instance. When an {@code @RequestMapping} method_on the controller is invoked, the supplied argument values are remembered_and the result can then be used to create a {@code UriComponentsBuilder}_via {@link #fromMethodCall(Object)}._<p>_Note that this is a shorthand version of {@link #controller(Class)} intended_for inline use (with a static import), for example:_<pre class="code">_MvcUriComponentsBuilder.fromMethodCall(on(FooController.class).getFoo(1)).build()__</pre>_@param controllerType the target controller;public static <T> T on(Class<T> controllerType) {_		return controller(controllerType)__	};return,a,mock,controller,instance,when,an,code,request,mapping,method,on,the,controller,is,invoked,the,supplied,argument,values,are,remembered,and,the,result,can,then,be,used,to,create,a,code,uri,components,builder,via,link,from,method,call,object,p,note,that,this,is,a,shorthand,version,of,link,controller,class,intended,for,inline,use,with,a,static,import,for,example,pre,class,code,mvc,uri,components,builder,from,method,call,on,foo,controller,class,get,foo,1,build,pre,param,controller,type,the,target,controller;public,static,t,t,on,class,t,controller,type,return,controller,controller,type
MvcUriComponentsBuilder -> public static <T> T on(Class<T> controllerType);1432125256;Return a "mock" controller instance. When an {@code @RequestMapping} method_on the controller is invoked, the supplied argument values are remembered_and the result can then be used to create a {@code UriComponentsBuilder}_via {@link #fromMethodCall(Object)}._<p>_Note that this is a shorthand version of {@link #controller(Class)} intended_for inline use (with a static import), for example:_<pre class="code">_MvcUriComponentsBuilder.fromMethodCall(on(FooController.class).getFoo(1)).build()__</pre>_@param controllerType the target controller;public static <T> T on(Class<T> controllerType) {_		return controller(controllerType)__	};return,a,mock,controller,instance,when,an,code,request,mapping,method,on,the,controller,is,invoked,the,supplied,argument,values,are,remembered,and,the,result,can,then,be,used,to,create,a,code,uri,components,builder,via,link,from,method,call,object,p,note,that,this,is,a,shorthand,version,of,link,controller,class,intended,for,inline,use,with,a,static,import,for,example,pre,class,code,mvc,uri,components,builder,from,method,call,on,foo,controller,class,get,foo,1,build,pre,param,controller,type,the,target,controller;public,static,t,t,on,class,t,controller,type,return,controller,controller,type
MvcUriComponentsBuilder -> public static <T> T on(Class<T> controllerType);1432156007;Return a "mock" controller instance. When an {@code @RequestMapping} method_on the controller is invoked, the supplied argument values are remembered_and the result can then be used to create a {@code UriComponentsBuilder}_via {@link #fromMethodCall(Object)}._<p>_Note that this is a shorthand version of {@link #controller(Class)} intended_for inline use (with a static import), for example:_<pre class="code">_MvcUriComponentsBuilder.fromMethodCall(on(FooController.class).getFoo(1)).build()__</pre>_@param controllerType the target controller;public static <T> T on(Class<T> controllerType) {_		return controller(controllerType)__	};return,a,mock,controller,instance,when,an,code,request,mapping,method,on,the,controller,is,invoked,the,supplied,argument,values,are,remembered,and,the,result,can,then,be,used,to,create,a,code,uri,components,builder,via,link,from,method,call,object,p,note,that,this,is,a,shorthand,version,of,link,controller,class,intended,for,inline,use,with,a,static,import,for,example,pre,class,code,mvc,uri,components,builder,from,method,call,on,foo,controller,class,get,foo,1,build,pre,param,controller,type,the,target,controller;public,static,t,t,on,class,t,controller,type,return,controller,controller,type
MvcUriComponentsBuilder -> public static <T> T on(Class<T> controllerType);1432856630;Return a "mock" controller instance. When an {@code @RequestMapping} method_on the controller is invoked, the supplied argument values are remembered_and the result can then be used to create a {@code UriComponentsBuilder}_via {@link #fromMethodCall(Object)}._<p>_Note that this is a shorthand version of {@link #controller(Class)} intended_for inline use (with a static import), for example:_<pre class="code">_MvcUriComponentsBuilder.fromMethodCall(on(FooController.class).getFoo(1)).build()__</pre>_@param controllerType the target controller;public static <T> T on(Class<T> controllerType) {_		return controller(controllerType)__	};return,a,mock,controller,instance,when,an,code,request,mapping,method,on,the,controller,is,invoked,the,supplied,argument,values,are,remembered,and,the,result,can,then,be,used,to,create,a,code,uri,components,builder,via,link,from,method,call,object,p,note,that,this,is,a,shorthand,version,of,link,controller,class,intended,for,inline,use,with,a,static,import,for,example,pre,class,code,mvc,uri,components,builder,from,method,call,on,foo,controller,class,get,foo,1,build,pre,param,controller,type,the,target,controller;public,static,t,t,on,class,t,controller,type,return,controller,controller,type
MvcUriComponentsBuilder -> public static <T> T on(Class<T> controllerType);1432857824;Return a "mock" controller instance. When an {@code @RequestMapping} method_on the controller is invoked, the supplied argument values are remembered_and the result can then be used to create a {@code UriComponentsBuilder}_via {@link #fromMethodCall(Object)}._<p>_Note that this is a shorthand version of {@link #controller(Class)} intended_for inline use (with a static import), for example:_<pre class="code">_MvcUriComponentsBuilder.fromMethodCall(on(FooController.class).getFoo(1)).build()__</pre>_@param controllerType the target controller;public static <T> T on(Class<T> controllerType) {_		return controller(controllerType)__	};return,a,mock,controller,instance,when,an,code,request,mapping,method,on,the,controller,is,invoked,the,supplied,argument,values,are,remembered,and,the,result,can,then,be,used,to,create,a,code,uri,components,builder,via,link,from,method,call,object,p,note,that,this,is,a,shorthand,version,of,link,controller,class,intended,for,inline,use,with,a,static,import,for,example,pre,class,code,mvc,uri,components,builder,from,method,call,on,foo,controller,class,get,foo,1,build,pre,param,controller,type,the,target,controller;public,static,t,t,on,class,t,controller,type,return,controller,controller,type
MvcUriComponentsBuilder -> public static <T> T on(Class<T> controllerType);1434234880;Return a "mock" controller instance. When an {@code @RequestMapping} method_on the controller is invoked, the supplied argument values are remembered_and the result can then be used to create a {@code UriComponentsBuilder}_via {@link #fromMethodCall(Object)}._<p>_Note that this is a shorthand version of {@link #controller(Class)} intended_for inline use (with a static import), for example:_<pre class="code">_MvcUriComponentsBuilder.fromMethodCall(on(FooController.class).getFoo(1)).build()__</pre>_@param controllerType the target controller;public static <T> T on(Class<T> controllerType) {_		return controller(controllerType)__	};return,a,mock,controller,instance,when,an,code,request,mapping,method,on,the,controller,is,invoked,the,supplied,argument,values,are,remembered,and,the,result,can,then,be,used,to,create,a,code,uri,components,builder,via,link,from,method,call,object,p,note,that,this,is,a,shorthand,version,of,link,controller,class,intended,for,inline,use,with,a,static,import,for,example,pre,class,code,mvc,uri,components,builder,from,method,call,on,foo,controller,class,get,foo,1,build,pre,param,controller,type,the,target,controller;public,static,t,t,on,class,t,controller,type,return,controller,controller,type
MvcUriComponentsBuilder -> public static <T> T on(Class<T> controllerType);1434484897;Return a "mock" controller instance. When an {@code @RequestMapping} method_on the controller is invoked, the supplied argument values are remembered_and the result can then be used to create a {@code UriComponentsBuilder}_via {@link #fromMethodCall(Object)}._<p>_Note that this is a shorthand version of {@link #controller(Class)} intended_for inline use (with a static import), for example:_<pre class="code">_MvcUriComponentsBuilder.fromMethodCall(on(FooController.class).getFoo(1)).build()__</pre>_@param controllerType the target controller;public static <T> T on(Class<T> controllerType) {_		return controller(controllerType)__	};return,a,mock,controller,instance,when,an,code,request,mapping,method,on,the,controller,is,invoked,the,supplied,argument,values,are,remembered,and,the,result,can,then,be,used,to,create,a,code,uri,components,builder,via,link,from,method,call,object,p,note,that,this,is,a,shorthand,version,of,link,controller,class,intended,for,inline,use,with,a,static,import,for,example,pre,class,code,mvc,uri,components,builder,from,method,call,on,foo,controller,class,get,foo,1,build,pre,param,controller,type,the,target,controller;public,static,t,t,on,class,t,controller,type,return,controller,controller,type
MvcUriComponentsBuilder -> public static <T> T on(Class<T> controllerType);1434726592;Return a "mock" controller instance. When an {@code @RequestMapping} method_on the controller is invoked, the supplied argument values are remembered_and the result can then be used to create a {@code UriComponentsBuilder}_via {@link #fromMethodCall(Object)}._<p>_Note that this is a shorthand version of {@link #controller(Class)} intended_for inline use (with a static import), for example:_<pre class="code">_MvcUriComponentsBuilder.fromMethodCall(on(FooController.class).getFoo(1)).build()__</pre>_@param controllerType the target controller;public static <T> T on(Class<T> controllerType) {_		return controller(controllerType)__	};return,a,mock,controller,instance,when,an,code,request,mapping,method,on,the,controller,is,invoked,the,supplied,argument,values,are,remembered,and,the,result,can,then,be,used,to,create,a,code,uri,components,builder,via,link,from,method,call,object,p,note,that,this,is,a,shorthand,version,of,link,controller,class,intended,for,inline,use,with,a,static,import,for,example,pre,class,code,mvc,uri,components,builder,from,method,call,on,foo,controller,class,get,foo,1,build,pre,param,controller,type,the,target,controller;public,static,t,t,on,class,t,controller,type,return,controller,controller,type
MvcUriComponentsBuilder -> public static <T> T on(Class<T> controllerType);1435615322;Return a "mock" controller instance. When an {@code @RequestMapping} method_on the controller is invoked, the supplied argument values are remembered_and the result can then be used to create a {@code UriComponentsBuilder}_via {@link #fromMethodCall(Object)}._<p>_Note that this is a shorthand version of {@link #controller(Class)} intended_for inline use (with a static import), for example:_<pre class="code">_MvcUriComponentsBuilder.fromMethodCall(on(FooController.class).getFoo(1)).build()__</pre>_@param controllerType the target controller;public static <T> T on(Class<T> controllerType) {_		return controller(controllerType)__	};return,a,mock,controller,instance,when,an,code,request,mapping,method,on,the,controller,is,invoked,the,supplied,argument,values,are,remembered,and,the,result,can,then,be,used,to,create,a,code,uri,components,builder,via,link,from,method,call,object,p,note,that,this,is,a,shorthand,version,of,link,controller,class,intended,for,inline,use,with,a,static,import,for,example,pre,class,code,mvc,uri,components,builder,from,method,call,on,foo,controller,class,get,foo,1,build,pre,param,controller,type,the,target,controller;public,static,t,t,on,class,t,controller,type,return,controller,controller,type
MvcUriComponentsBuilder -> public static <T> T on(Class<T> controllerType);1439294371;Return a "mock" controller instance. When an {@code @RequestMapping} method_on the controller is invoked, the supplied argument values are remembered_and the result can then be used to create a {@code UriComponentsBuilder}_via {@link #fromMethodCall(Object)}._<p>_Note that this is a shorthand version of {@link #controller(Class)} intended_for inline use (with a static import), for example:_<pre class="code">_MvcUriComponentsBuilder.fromMethodCall(on(FooController.class).getFoo(1)).build()__</pre>_@param controllerType the target controller;public static <T> T on(Class<T> controllerType) {_		return controller(controllerType)__	};return,a,mock,controller,instance,when,an,code,request,mapping,method,on,the,controller,is,invoked,the,supplied,argument,values,are,remembered,and,the,result,can,then,be,used,to,create,a,code,uri,components,builder,via,link,from,method,call,object,p,note,that,this,is,a,shorthand,version,of,link,controller,class,intended,for,inline,use,with,a,static,import,for,example,pre,class,code,mvc,uri,components,builder,from,method,call,on,foo,controller,class,get,foo,1,build,pre,param,controller,type,the,target,controller;public,static,t,t,on,class,t,controller,type,return,controller,controller,type
MvcUriComponentsBuilder -> public static <T> T on(Class<T> controllerType);1447077465;Return a "mock" controller instance. When an {@code @RequestMapping} method_on the controller is invoked, the supplied argument values are remembered_and the result can then be used to create a {@code UriComponentsBuilder}_via {@link #fromMethodCall(Object)}._<p>_Note that this is a shorthand version of {@link #controller(Class)} intended_for inline use (with a static import), for example:_<pre class="code">_MvcUriComponentsBuilder.fromMethodCall(on(FooController.class).getFoo(1)).build()__</pre>_@param controllerType the target controller;public static <T> T on(Class<T> controllerType) {_		return controller(controllerType)__	};return,a,mock,controller,instance,when,an,code,request,mapping,method,on,the,controller,is,invoked,the,supplied,argument,values,are,remembered,and,the,result,can,then,be,used,to,create,a,code,uri,components,builder,via,link,from,method,call,object,p,note,that,this,is,a,shorthand,version,of,link,controller,class,intended,for,inline,use,with,a,static,import,for,example,pre,class,code,mvc,uri,components,builder,from,method,call,on,foo,controller,class,get,foo,1,build,pre,param,controller,type,the,target,controller;public,static,t,t,on,class,t,controller,type,return,controller,controller,type
MvcUriComponentsBuilder -> public static <T> T on(Class<T> controllerType);1458830024;Return a "mock" controller instance. When an {@code @RequestMapping} method_on the controller is invoked, the supplied argument values are remembered_and the result can then be used to create a {@code UriComponentsBuilder}_via {@link #fromMethodCall(Object)}._<p>_Note that this is a shorthand version of {@link #controller(Class)} intended_for inline use (with a static import), for example:_<pre class="code">_MvcUriComponentsBuilder.fromMethodCall(on(FooController.class).getFoo(1)).build()__</pre>_@param controllerType the target controller;public static <T> T on(Class<T> controllerType) {_		return controller(controllerType)__	};return,a,mock,controller,instance,when,an,code,request,mapping,method,on,the,controller,is,invoked,the,supplied,argument,values,are,remembered,and,the,result,can,then,be,used,to,create,a,code,uri,components,builder,via,link,from,method,call,object,p,note,that,this,is,a,shorthand,version,of,link,controller,class,intended,for,inline,use,with,a,static,import,for,example,pre,class,code,mvc,uri,components,builder,from,method,call,on,foo,controller,class,get,foo,1,build,pre,param,controller,type,the,target,controller;public,static,t,t,on,class,t,controller,type,return,controller,controller,type
MvcUriComponentsBuilder -> public static <T> T on(Class<T> controllerType);1461047077;Return a "mock" controller instance. When an {@code @RequestMapping} method_on the controller is invoked, the supplied argument values are remembered_and the result can then be used to create a {@code UriComponentsBuilder}_via {@link #fromMethodCall(Object)}._<p>_Note that this is a shorthand version of {@link #controller(Class)} intended_for inline use (with a static import), for example:_<pre class="code">_MvcUriComponentsBuilder.fromMethodCall(on(FooController.class).getFoo(1)).build()__</pre>_@param controllerType the target controller;public static <T> T on(Class<T> controllerType) {_		return controller(controllerType)__	};return,a,mock,controller,instance,when,an,code,request,mapping,method,on,the,controller,is,invoked,the,supplied,argument,values,are,remembered,and,the,result,can,then,be,used,to,create,a,code,uri,components,builder,via,link,from,method,call,object,p,note,that,this,is,a,shorthand,version,of,link,controller,class,intended,for,inline,use,with,a,static,import,for,example,pre,class,code,mvc,uri,components,builder,from,method,call,on,foo,controller,class,get,foo,1,build,pre,param,controller,type,the,target,controller;public,static,t,t,on,class,t,controller,type,return,controller,controller,type
MvcUriComponentsBuilder -> public static <T> T on(Class<T> controllerType);1467677340;Return a "mock" controller instance. When an {@code @RequestMapping} method_on the controller is invoked, the supplied argument values are remembered_and the result can then be used to create a {@code UriComponentsBuilder}_via {@link #fromMethodCall(Object)}._<p>_Note that this is a shorthand version of {@link #controller(Class)} intended_for inline use (with a static import), for example:_<pre class="code">_MvcUriComponentsBuilder.fromMethodCall(on(FooController.class).getFoo(1)).build()__</pre>_@param controllerType the target controller;public static <T> T on(Class<T> controllerType) {_		return controller(controllerType)__	};return,a,mock,controller,instance,when,an,code,request,mapping,method,on,the,controller,is,invoked,the,supplied,argument,values,are,remembered,and,the,result,can,then,be,used,to,create,a,code,uri,components,builder,via,link,from,method,call,object,p,note,that,this,is,a,shorthand,version,of,link,controller,class,intended,for,inline,use,with,a,static,import,for,example,pre,class,code,mvc,uri,components,builder,from,method,call,on,foo,controller,class,get,foo,1,build,pre,param,controller,type,the,target,controller;public,static,t,t,on,class,t,controller,type,return,controller,controller,type
MvcUriComponentsBuilder -> public static <T> T on(Class<T> controllerType);1467726769;Return a "mock" controller instance. When an {@code @RequestMapping} method_on the controller is invoked, the supplied argument values are remembered_and the result can then be used to create a {@code UriComponentsBuilder}_via {@link #fromMethodCall(Object)}._<p>_Note that this is a shorthand version of {@link #controller(Class)} intended_for inline use (with a static import), for example:_<pre class="code">_MvcUriComponentsBuilder.fromMethodCall(on(FooController.class).getFoo(1)).build()__</pre>_@param controllerType the target controller;public static <T> T on(Class<T> controllerType) {_		return controller(controllerType)__	};return,a,mock,controller,instance,when,an,code,request,mapping,method,on,the,controller,is,invoked,the,supplied,argument,values,are,remembered,and,the,result,can,then,be,used,to,create,a,code,uri,components,builder,via,link,from,method,call,object,p,note,that,this,is,a,shorthand,version,of,link,controller,class,intended,for,inline,use,with,a,static,import,for,example,pre,class,code,mvc,uri,components,builder,from,method,call,on,foo,controller,class,get,foo,1,build,pre,param,controller,type,the,target,controller;public,static,t,t,on,class,t,controller,type,return,controller,controller,type
MvcUriComponentsBuilder -> public static <T> T on(Class<T> controllerType);1467730834;Return a "mock" controller instance. When an {@code @RequestMapping} method_on the controller is invoked, the supplied argument values are remembered_and the result can then be used to create a {@code UriComponentsBuilder}_via {@link #fromMethodCall(Object)}._<p>_Note that this is a shorthand version of {@link #controller(Class)} intended_for inline use (with a static import), for example:_<pre class="code">_MvcUriComponentsBuilder.fromMethodCall(on(FooController.class).getFoo(1)).build()__</pre>_@param controllerType the target controller;public static <T> T on(Class<T> controllerType) {_		return controller(controllerType)__	};return,a,mock,controller,instance,when,an,code,request,mapping,method,on,the,controller,is,invoked,the,supplied,argument,values,are,remembered,and,the,result,can,then,be,used,to,create,a,code,uri,components,builder,via,link,from,method,call,object,p,note,that,this,is,a,shorthand,version,of,link,controller,class,intended,for,inline,use,with,a,static,import,for,example,pre,class,code,mvc,uri,components,builder,from,method,call,on,foo,controller,class,get,foo,1,build,pre,param,controller,type,the,target,controller;public,static,t,t,on,class,t,controller,type,return,controller,controller,type
MvcUriComponentsBuilder -> public static <T> T on(Class<T> controllerType);1467846264;Return a "mock" controller instance. When an {@code @RequestMapping} method_on the controller is invoked, the supplied argument values are remembered_and the result can then be used to create a {@code UriComponentsBuilder}_via {@link #fromMethodCall(Object)}._<p>_Note that this is a shorthand version of {@link #controller(Class)} intended_for inline use (with a static import), for example:_<pre class="code">_MvcUriComponentsBuilder.fromMethodCall(on(FooController.class).getFoo(1)).build()__</pre>_@param controllerType the target controller;public static <T> T on(Class<T> controllerType) {_		return controller(controllerType)__	};return,a,mock,controller,instance,when,an,code,request,mapping,method,on,the,controller,is,invoked,the,supplied,argument,values,are,remembered,and,the,result,can,then,be,used,to,create,a,code,uri,components,builder,via,link,from,method,call,object,p,note,that,this,is,a,shorthand,version,of,link,controller,class,intended,for,inline,use,with,a,static,import,for,example,pre,class,code,mvc,uri,components,builder,from,method,call,on,foo,controller,class,get,foo,1,build,pre,param,controller,type,the,target,controller;public,static,t,t,on,class,t,controller,type,return,controller,controller,type
MvcUriComponentsBuilder -> public static <T> T on(Class<T> controllerType);1468613531;Return a "mock" controller instance. When an {@code @RequestMapping} method_on the controller is invoked, the supplied argument values are remembered_and the result can then be used to create a {@code UriComponentsBuilder}_via {@link #fromMethodCall(Object)}._<p>Note that this is a shorthand version of {@link #controller(Class)} intended_for inline use (with a static import), for example:_<pre class="code">_MvcUriComponentsBuilder.fromMethodCall(on(FooController.class).getFoo(1)).build()__</pre>_@param controllerType the target controller;public static <T> T on(Class<T> controllerType) {_		return controller(controllerType)__	};return,a,mock,controller,instance,when,an,code,request,mapping,method,on,the,controller,is,invoked,the,supplied,argument,values,are,remembered,and,the,result,can,then,be,used,to,create,a,code,uri,components,builder,via,link,from,method,call,object,p,note,that,this,is,a,shorthand,version,of,link,controller,class,intended,for,inline,use,with,a,static,import,for,example,pre,class,code,mvc,uri,components,builder,from,method,call,on,foo,controller,class,get,foo,1,build,pre,param,controller,type,the,target,controller;public,static,t,t,on,class,t,controller,type,return,controller,controller,type
MvcUriComponentsBuilder -> public static <T> T on(Class<T> controllerType);1468948866;Return a "mock" controller instance. When an {@code @RequestMapping} method_on the controller is invoked, the supplied argument values are remembered_and the result can then be used to create a {@code UriComponentsBuilder}_via {@link #fromMethodCall(Object)}._<p>Note that this is a shorthand version of {@link #controller(Class)} intended_for inline use (with a static import), for example:_<pre class="code">_MvcUriComponentsBuilder.fromMethodCall(on(FooController.class).getFoo(1)).build()__</pre>_@param controllerType the target controller;public static <T> T on(Class<T> controllerType) {_		return controller(controllerType)__	};return,a,mock,controller,instance,when,an,code,request,mapping,method,on,the,controller,is,invoked,the,supplied,argument,values,are,remembered,and,the,result,can,then,be,used,to,create,a,code,uri,components,builder,via,link,from,method,call,object,p,note,that,this,is,a,shorthand,version,of,link,controller,class,intended,for,inline,use,with,a,static,import,for,example,pre,class,code,mvc,uri,components,builder,from,method,call,on,foo,controller,class,get,foo,1,build,pre,param,controller,type,the,target,controller;public,static,t,t,on,class,t,controller,type,return,controller,controller,type
MvcUriComponentsBuilder -> public static <T> T on(Class<T> controllerType);1485810955;Return a "mock" controller instance. When an {@code @RequestMapping} method_on the controller is invoked, the supplied argument values are remembered_and the result can then be used to create a {@code UriComponentsBuilder}_via {@link #fromMethodCall(Object)}._<p>Note that this is a shorthand version of {@link #controller(Class)} intended_for inline use (with a static import), for example:_<pre class="code">_MvcUriComponentsBuilder.fromMethodCall(on(FooController.class).getFoo(1)).build()__</pre>_@param controllerType the target controller;public static <T> T on(Class<T> controllerType) {_		return controller(controllerType)__	};return,a,mock,controller,instance,when,an,code,request,mapping,method,on,the,controller,is,invoked,the,supplied,argument,values,are,remembered,and,the,result,can,then,be,used,to,create,a,code,uri,components,builder,via,link,from,method,call,object,p,note,that,this,is,a,shorthand,version,of,link,controller,class,intended,for,inline,use,with,a,static,import,for,example,pre,class,code,mvc,uri,components,builder,from,method,call,on,foo,controller,class,get,foo,1,build,pre,param,controller,type,the,target,controller;public,static,t,t,on,class,t,controller,type,return,controller,controller,type
MvcUriComponentsBuilder -> public static <T> T on(Class<T> controllerType);1486634978;Return a "mock" controller instance. When an {@code @RequestMapping} method_on the controller is invoked, the supplied argument values are remembered_and the result can then be used to create a {@code UriComponentsBuilder}_via {@link #fromMethodCall(Object)}._<p>Note that this is a shorthand version of {@link #controller(Class)} intended_for inline use (with a static import), for example:_<pre class="code">_MvcUriComponentsBuilder.fromMethodCall(on(FooController.class).getFoo(1)).build()__</pre>_@param controllerType the target controller;public static <T> T on(Class<T> controllerType) {_		return controller(controllerType)__	};return,a,mock,controller,instance,when,an,code,request,mapping,method,on,the,controller,is,invoked,the,supplied,argument,values,are,remembered,and,the,result,can,then,be,used,to,create,a,code,uri,components,builder,via,link,from,method,call,object,p,note,that,this,is,a,shorthand,version,of,link,controller,class,intended,for,inline,use,with,a,static,import,for,example,pre,class,code,mvc,uri,components,builder,from,method,call,on,foo,controller,class,get,foo,1,build,pre,param,controller,type,the,target,controller;public,static,t,t,on,class,t,controller,type,return,controller,controller,type
MvcUriComponentsBuilder -> public static <T> T on(Class<T> controllerType);1486635693;Return a "mock" controller instance. When an {@code @RequestMapping} method_on the controller is invoked, the supplied argument values are remembered_and the result can then be used to create a {@code UriComponentsBuilder}_via {@link #fromMethodCall(Object)}._<p>Note that this is a shorthand version of {@link #controller(Class)} intended_for inline use (with a static import), for example:_<pre class="code">_MvcUriComponentsBuilder.fromMethodCall(on(FooController.class).getFoo(1)).build()__</pre>_@param controllerType the target controller;public static <T> T on(Class<T> controllerType) {_		return controller(controllerType)__	};return,a,mock,controller,instance,when,an,code,request,mapping,method,on,the,controller,is,invoked,the,supplied,argument,values,are,remembered,and,the,result,can,then,be,used,to,create,a,code,uri,components,builder,via,link,from,method,call,object,p,note,that,this,is,a,shorthand,version,of,link,controller,class,intended,for,inline,use,with,a,static,import,for,example,pre,class,code,mvc,uri,components,builder,from,method,call,on,foo,controller,class,get,foo,1,build,pre,param,controller,type,the,target,controller;public,static,t,t,on,class,t,controller,type,return,controller,controller,type
MvcUriComponentsBuilder -> public static <T> T on(Class<T> controllerType);1495868221;Return a "mock" controller instance. When an {@code @RequestMapping} method_on the controller is invoked, the supplied argument values are remembered_and the result can then be used to create a {@code UriComponentsBuilder}_via {@link #fromMethodCall(Object)}._<p>Note that this is a shorthand version of {@link #controller(Class)} intended_for inline use (with a static import), for example:_<pre class="code">_MvcUriComponentsBuilder.fromMethodCall(on(FooController.class).getFoo(1)).build()__</pre>_@param controllerType the target controller;public static <T> T on(Class<T> controllerType) {_		return controller(controllerType)__	};return,a,mock,controller,instance,when,an,code,request,mapping,method,on,the,controller,is,invoked,the,supplied,argument,values,are,remembered,and,the,result,can,then,be,used,to,create,a,code,uri,components,builder,via,link,from,method,call,object,p,note,that,this,is,a,shorthand,version,of,link,controller,class,intended,for,inline,use,with,a,static,import,for,example,pre,class,code,mvc,uri,components,builder,from,method,call,on,foo,controller,class,get,foo,1,build,pre,param,controller,type,the,target,controller;public,static,t,t,on,class,t,controller,type,return,controller,controller,type
MvcUriComponentsBuilder -> public static <T> T on(Class<T> controllerType);1496242568;Return a "mock" controller instance. When an {@code @RequestMapping} method_on the controller is invoked, the supplied argument values are remembered_and the result can then be used to create a {@code UriComponentsBuilder}_via {@link #fromMethodCall(Object)}._<p>Note that this is a shorthand version of {@link #controller(Class)} intended_for inline use (with a static import), for example:_<pre class="code">_MvcUriComponentsBuilder.fromMethodCall(on(FooController.class).getFoo(1)).build()__</pre>_@param controllerType the target controller;public static <T> T on(Class<T> controllerType) {_		return controller(controllerType)__	};return,a,mock,controller,instance,when,an,code,request,mapping,method,on,the,controller,is,invoked,the,supplied,argument,values,are,remembered,and,the,result,can,then,be,used,to,create,a,code,uri,components,builder,via,link,from,method,call,object,p,note,that,this,is,a,shorthand,version,of,link,controller,class,intended,for,inline,use,with,a,static,import,for,example,pre,class,code,mvc,uri,components,builder,from,method,call,on,foo,controller,class,get,foo,1,build,pre,param,controller,type,the,target,controller;public,static,t,t,on,class,t,controller,type,return,controller,controller,type
MvcUriComponentsBuilder -> public static <T> T on(Class<T> controllerType);1496259743;Return a "mock" controller instance. When an {@code @RequestMapping} method_on the controller is invoked, the supplied argument values are remembered_and the result can then be used to create a {@code UriComponentsBuilder}_via {@link #fromMethodCall(Object)}._<p>Note that this is a shorthand version of {@link #controller(Class)} intended_for inline use (with a static import), for example:_<pre class="code">_MvcUriComponentsBuilder.fromMethodCall(on(FooController.class).getFoo(1)).build()__</pre>_@param controllerType the target controller;public static <T> T on(Class<T> controllerType) {_		return controller(controllerType)__	};return,a,mock,controller,instance,when,an,code,request,mapping,method,on,the,controller,is,invoked,the,supplied,argument,values,are,remembered,and,the,result,can,then,be,used,to,create,a,code,uri,components,builder,via,link,from,method,call,object,p,note,that,this,is,a,shorthand,version,of,link,controller,class,intended,for,inline,use,with,a,static,import,for,example,pre,class,code,mvc,uri,components,builder,from,method,call,on,foo,controller,class,get,foo,1,build,pre,param,controller,type,the,target,controller;public,static,t,t,on,class,t,controller,type,return,controller,controller,type
MvcUriComponentsBuilder -> public static <T> T on(Class<T> controllerType);1496370972;Return a "mock" controller instance. When an {@code @RequestMapping} method_on the controller is invoked, the supplied argument values are remembered_and the result can then be used to create a {@code UriComponentsBuilder}_via {@link #fromMethodCall(Object)}._<p>Note that this is a shorthand version of {@link #controller(Class)} intended_for inline use (with a static import), for example:_<pre class="code">_MvcUriComponentsBuilder.fromMethodCall(on(FooController.class).getFoo(1)).build()__</pre>_<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs.__@param controllerType the target controller;public static <T> T on(Class<T> controllerType) {_		return controller(controllerType)__	};return,a,mock,controller,instance,when,an,code,request,mapping,method,on,the,controller,is,invoked,the,supplied,argument,values,are,remembered,and,the,result,can,then,be,used,to,create,a,code,uri,components,builder,via,link,from,method,call,object,p,note,that,this,is,a,shorthand,version,of,link,controller,class,intended,for,inline,use,with,a,static,import,for,example,pre,class,code,mvc,uri,components,builder,from,method,call,on,foo,controller,class,get,foo,1,build,pre,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,controller,type,the,target,controller;public,static,t,t,on,class,t,controller,type,return,controller,controller,type
MvcUriComponentsBuilder -> public static <T> T on(Class<T> controllerType);1496837955;Return a "mock" controller instance. When an {@code @RequestMapping} method_on the controller is invoked, the supplied argument values are remembered_and the result can then be used to create a {@code UriComponentsBuilder}_via {@link #fromMethodCall(Object)}._<p>Note that this is a shorthand version of {@link #controller(Class)} intended_for inline use (with a static import), for example:_<pre class="code">_MvcUriComponentsBuilder.fromMethodCall(on(FooController.class).getFoo(1)).build()__</pre>_<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs.__@param controllerType the target controller;public static <T> T on(Class<T> controllerType) {_		return controller(controllerType)__	};return,a,mock,controller,instance,when,an,code,request,mapping,method,on,the,controller,is,invoked,the,supplied,argument,values,are,remembered,and,the,result,can,then,be,used,to,create,a,code,uri,components,builder,via,link,from,method,call,object,p,note,that,this,is,a,shorthand,version,of,link,controller,class,intended,for,inline,use,with,a,static,import,for,example,pre,class,code,mvc,uri,components,builder,from,method,call,on,foo,controller,class,get,foo,1,build,pre,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,controller,type,the,target,controller;public,static,t,t,on,class,t,controller,type,return,controller,controller,type
MvcUriComponentsBuilder -> public static <T> T on(Class<T> controllerType);1497341397;Return a "mock" controller instance. When an {@code @RequestMapping} method_on the controller is invoked, the supplied argument values are remembered_and the result can then be used to create a {@code UriComponentsBuilder}_via {@link #fromMethodCall(Object)}._<p>Note that this is a shorthand version of {@link #controller(Class)} intended_for inline use (with a static import), for example:_<pre class="code">_MvcUriComponentsBuilder.fromMethodCall(on(FooController.class).getFoo(1)).build()__</pre>_<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs.__@param controllerType the target controller;public static <T> T on(Class<T> controllerType) {_		return controller(controllerType)__	};return,a,mock,controller,instance,when,an,code,request,mapping,method,on,the,controller,is,invoked,the,supplied,argument,values,are,remembered,and,the,result,can,then,be,used,to,create,a,code,uri,components,builder,via,link,from,method,call,object,p,note,that,this,is,a,shorthand,version,of,link,controller,class,intended,for,inline,use,with,a,static,import,for,example,pre,class,code,mvc,uri,components,builder,from,method,call,on,foo,controller,class,get,foo,1,build,pre,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,controller,type,the,target,controller;public,static,t,t,on,class,t,controller,type,return,controller,controller,type
MvcUriComponentsBuilder -> public static <T> T on(Class<T> controllerType);1498780456;Return a "mock" controller instance. When an {@code @RequestMapping} method_on the controller is invoked, the supplied argument values are remembered_and the result can then be used to create a {@code UriComponentsBuilder}_via {@link #fromMethodCall(Object)}._<p>Note that this is a shorthand version of {@link #controller(Class)} intended_for inline use (with a static import), for example:_<pre class="code">_MvcUriComponentsBuilder.fromMethodCall(on(FooController.class).getFoo(1)).build()__</pre>_<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs.__@param controllerType the target controller;public static <T> T on(Class<T> controllerType) {_		return controller(controllerType)__	};return,a,mock,controller,instance,when,an,code,request,mapping,method,on,the,controller,is,invoked,the,supplied,argument,values,are,remembered,and,the,result,can,then,be,used,to,create,a,code,uri,components,builder,via,link,from,method,call,object,p,note,that,this,is,a,shorthand,version,of,link,controller,class,intended,for,inline,use,with,a,static,import,for,example,pre,class,code,mvc,uri,components,builder,from,method,call,on,foo,controller,class,get,foo,1,build,pre,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,controller,type,the,target,controller;public,static,t,t,on,class,t,controller,type,return,controller,controller,type
MvcUriComponentsBuilder -> public static <T> T on(Class<T> controllerType);1500416137;Return a "mock" controller instance. When an {@code @RequestMapping} method_on the controller is invoked, the supplied argument values are remembered_and the result can then be used to create a {@code UriComponentsBuilder}_via {@link #fromMethodCall(Object)}._<p>Note that this is a shorthand version of {@link #controller(Class)} intended_for inline use (with a static import), for example:_<pre class="code">_MvcUriComponentsBuilder.fromMethodCall(on(FooController.class).getFoo(1)).build()__</pre>_<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs.__@param controllerType the target controller;public static <T> T on(Class<T> controllerType) {_		return controller(controllerType)__	};return,a,mock,controller,instance,when,an,code,request,mapping,method,on,the,controller,is,invoked,the,supplied,argument,values,are,remembered,and,the,result,can,then,be,used,to,create,a,code,uri,components,builder,via,link,from,method,call,object,p,note,that,this,is,a,shorthand,version,of,link,controller,class,intended,for,inline,use,with,a,static,import,for,example,pre,class,code,mvc,uri,components,builder,from,method,call,on,foo,controller,class,get,foo,1,build,pre,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,controller,type,the,target,controller;public,static,t,t,on,class,t,controller,type,return,controller,controller,type
MvcUriComponentsBuilder -> public static <T> T on(Class<T> controllerType);1506097334;Return a "mock" controller instance. When an {@code @RequestMapping} method_on the controller is invoked, the supplied argument values are remembered_and the result can then be used to create a {@code UriComponentsBuilder}_via {@link #fromMethodCall(Object)}._<p>Note that this is a shorthand version of {@link #controller(Class)} intended_for inline use (with a static import), for example:_<pre class="code">_MvcUriComponentsBuilder.fromMethodCall(on(FooController.class).getFoo(1)).build()__</pre>_<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs.__@param controllerType the target controller;public static <T> T on(Class<T> controllerType) {_		return controller(controllerType)__	};return,a,mock,controller,instance,when,an,code,request,mapping,method,on,the,controller,is,invoked,the,supplied,argument,values,are,remembered,and,the,result,can,then,be,used,to,create,a,code,uri,components,builder,via,link,from,method,call,object,p,note,that,this,is,a,shorthand,version,of,link,controller,class,intended,for,inline,use,with,a,static,import,for,example,pre,class,code,mvc,uri,components,builder,from,method,call,on,foo,controller,class,get,foo,1,build,pre,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,controller,type,the,target,controller;public,static,t,t,on,class,t,controller,type,return,controller,controller,type
MvcUriComponentsBuilder -> public static <T> T on(Class<T> controllerType);1518770299;Return a "mock" controller instance. When an {@code @RequestMapping} method_on the controller is invoked, the supplied argument values are remembered_and the result can then be used to create a {@code UriComponentsBuilder}_via {@link #fromMethodCall(Object)}._<p>Note that this is a shorthand version of {@link #controller(Class)} intended_for inline use (with a static import), for example:_<pre class="code">_MvcUriComponentsBuilder.fromMethodCall(on(FooController.class).getFoo(1)).build()__</pre>_<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs.__@param controllerType the target controller;public static <T> T on(Class<T> controllerType) {_		return controller(controllerType)__	};return,a,mock,controller,instance,when,an,code,request,mapping,method,on,the,controller,is,invoked,the,supplied,argument,values,are,remembered,and,the,result,can,then,be,used,to,create,a,code,uri,components,builder,via,link,from,method,call,object,p,note,that,this,is,a,shorthand,version,of,link,controller,class,intended,for,inline,use,with,a,static,import,for,example,pre,class,code,mvc,uri,components,builder,from,method,call,on,foo,controller,class,get,foo,1,build,pre,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,controller,type,the,target,controller;public,static,t,t,on,class,t,controller,type,return,controller,controller,type
MvcUriComponentsBuilder -> public static <T> T on(Class<T> controllerType);1522354261;Return a "mock" controller instance. When an {@code @RequestMapping} method_on the controller is invoked, the supplied argument values are remembered_and the result can then be used to create a {@code UriComponentsBuilder}_via {@link #fromMethodCall(Object)}._<p>Note that this is a shorthand version of {@link #controller(Class)} intended_for inline use (with a static import), for example:_<pre class="code">_MvcUriComponentsBuilder.fromMethodCall(on(FooController.class).getFoo(1)).build()__</pre>_<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs.__@param controllerType the target controller;public static <T> T on(Class<T> controllerType) {_		return controller(controllerType)__	};return,a,mock,controller,instance,when,an,code,request,mapping,method,on,the,controller,is,invoked,the,supplied,argument,values,are,remembered,and,the,result,can,then,be,used,to,create,a,code,uri,components,builder,via,link,from,method,call,object,p,note,that,this,is,a,shorthand,version,of,link,controller,class,intended,for,inline,use,with,a,static,import,for,example,pre,class,code,mvc,uri,components,builder,from,method,call,on,foo,controller,class,get,foo,1,build,pre,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,controller,type,the,target,controller;public,static,t,t,on,class,t,controller,type,return,controller,controller,type
MvcUriComponentsBuilder -> public static <T> T on(Class<T> controllerType);1523455554;Return a "mock" controller instance. When an {@code @RequestMapping} method_on the controller is invoked, the supplied argument values are remembered_and the result can then be used to create a {@code UriComponentsBuilder}_via {@link #fromMethodCall(Object)}._<p>Note that this is a shorthand version of {@link #controller(Class)} intended_for inline use (with a static import), for example:_<pre class="code">_MvcUriComponentsBuilder.fromMethodCall(on(FooController.class).getFoo(1)).build()__</pre>_<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs.__@param controllerType the target controller;public static <T> T on(Class<T> controllerType) {_		return controller(controllerType)__	};return,a,mock,controller,instance,when,an,code,request,mapping,method,on,the,controller,is,invoked,the,supplied,argument,values,are,remembered,and,the,result,can,then,be,used,to,create,a,code,uri,components,builder,via,link,from,method,call,object,p,note,that,this,is,a,shorthand,version,of,link,controller,class,intended,for,inline,use,with,a,static,import,for,example,pre,class,code,mvc,uri,components,builder,from,method,call,on,foo,controller,class,get,foo,1,build,pre,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,controller,type,the,target,controller;public,static,t,t,on,class,t,controller,type,return,controller,controller,type
MvcUriComponentsBuilder -> public static <T> T on(Class<T> controllerType);1529028426;Return a "mock" controller instance. When an {@code @RequestMapping} method_on the controller is invoked, the supplied argument values are remembered_and the result can then be used to create a {@code UriComponentsBuilder}_via {@link #fromMethodCall(Object)}._<p>Note that this is a shorthand version of {@link #controller(Class)} intended_for inline use (with a static import), for example:_<pre class="code">_MvcUriComponentsBuilder.fromMethodCall(on(FooController.class).getFoo(1)).build()__</pre>_<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs.__@param controllerType the target controller;public static <T> T on(Class<T> controllerType) {_		return controller(controllerType)__	};return,a,mock,controller,instance,when,an,code,request,mapping,method,on,the,controller,is,invoked,the,supplied,argument,values,are,remembered,and,the,result,can,then,be,used,to,create,a,code,uri,components,builder,via,link,from,method,call,object,p,note,that,this,is,a,shorthand,version,of,link,controller,class,intended,for,inline,use,with,a,static,import,for,example,pre,class,code,mvc,uri,components,builder,from,method,call,on,foo,controller,class,get,foo,1,build,pre,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,controller,type,the,target,controller;public,static,t,t,on,class,t,controller,type,return,controller,controller,type
MvcUriComponentsBuilder -> public static <T> T on(Class<T> controllerType);1529028426;Return a "mock" controller instance. When an {@code @RequestMapping} method_on the controller is invoked, the supplied argument values are remembered_and the result can then be used to create a {@code UriComponentsBuilder}_via {@link #fromMethodCall(Object)}._<p>Note that this is a shorthand version of {@link #controller(Class)} intended_for inline use (with a static import), for example:_<pre class="code">_MvcUriComponentsBuilder.fromMethodCall(on(FooController.class).getFoo(1)).build()__</pre>_<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs.__@param controllerType the target controller;public static <T> T on(Class<T> controllerType) {_		return controller(controllerType)__	};return,a,mock,controller,instance,when,an,code,request,mapping,method,on,the,controller,is,invoked,the,supplied,argument,values,are,remembered,and,the,result,can,then,be,used,to,create,a,code,uri,components,builder,via,link,from,method,call,object,p,note,that,this,is,a,shorthand,version,of,link,controller,class,intended,for,inline,use,with,a,static,import,for,example,pre,class,code,mvc,uri,components,builder,from,method,call,on,foo,controller,class,get,foo,1,build,pre,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,controller,type,the,target,controller;public,static,t,t,on,class,t,controller,type,return,controller,controller,type
MvcUriComponentsBuilder -> public static <T> T on(Class<T> controllerType);1529028713;Return a "mock" controller instance. When an {@code @RequestMapping} method_on the controller is invoked, the supplied argument values are remembered_and the result can then be used to create a {@code UriComponentsBuilder}_via {@link #fromMethodCall(Object)}._<p>Note that this is a shorthand version of {@link #controller(Class)} intended_for inline use (with a static import), for example:_<pre class="code">_MvcUriComponentsBuilder.fromMethodCall(on(FooController.class).getFoo(1)).build()__</pre>_<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs.__@param controllerType the target controller;public static <T> T on(Class<T> controllerType) {_		return controller(controllerType)__	};return,a,mock,controller,instance,when,an,code,request,mapping,method,on,the,controller,is,invoked,the,supplied,argument,values,are,remembered,and,the,result,can,then,be,used,to,create,a,code,uri,components,builder,via,link,from,method,call,object,p,note,that,this,is,a,shorthand,version,of,link,controller,class,intended,for,inline,use,with,a,static,import,for,example,pre,class,code,mvc,uri,components,builder,from,method,call,on,foo,controller,class,get,foo,1,build,pre,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,controller,type,the,target,controller;public,static,t,t,on,class,t,controller,type,return,controller,controller,type
MvcUriComponentsBuilder -> public static <T> T on(Class<T> controllerType);1529361191;Return a "mock" controller instance. When an {@code @RequestMapping} method_on the controller is invoked, the supplied argument values are remembered_and the result can then be used to create a {@code UriComponentsBuilder}_via {@link #fromMethodCall(Object)}._<p>Note that this is a shorthand version of {@link #controller(Class)} intended_for inline use (with a static import), for example:_<pre class="code">_MvcUriComponentsBuilder.fromMethodCall(on(FooController.class).getFoo(1)).build()__</pre>_<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs.__@param controllerType the target controller;public static <T> T on(Class<T> controllerType) {_		return controller(controllerType)__	};return,a,mock,controller,instance,when,an,code,request,mapping,method,on,the,controller,is,invoked,the,supplied,argument,values,are,remembered,and,the,result,can,then,be,used,to,create,a,code,uri,components,builder,via,link,from,method,call,object,p,note,that,this,is,a,shorthand,version,of,link,controller,class,intended,for,inline,use,with,a,static,import,for,example,pre,class,code,mvc,uri,components,builder,from,method,call,on,foo,controller,class,get,foo,1,build,pre,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,controller,type,the,target,controller;public,static,t,t,on,class,t,controller,type,return,controller,controller,type
MvcUriComponentsBuilder -> public static <T> T on(Class<T> controllerType);1530174524;Return a "mock" controller instance. When an {@code @RequestMapping} method_on the controller is invoked, the supplied argument values are remembered_and the result can then be used to create a {@code UriComponentsBuilder}_via {@link #fromMethodCall(Object)}._<p>Note that this is a shorthand version of {@link #controller(Class)} intended_for inline use (with a static import), for example:_<pre class="code">_MvcUriComponentsBuilder.fromMethodCall(on(FooController.class).getFoo(1)).build()__</pre>_<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs.__@param controllerType the target controller;public static <T> T on(Class<T> controllerType) {_		return controller(controllerType)__	};return,a,mock,controller,instance,when,an,code,request,mapping,method,on,the,controller,is,invoked,the,supplied,argument,values,are,remembered,and,the,result,can,then,be,used,to,create,a,code,uri,components,builder,via,link,from,method,call,object,p,note,that,this,is,a,shorthand,version,of,link,controller,class,intended,for,inline,use,with,a,static,import,for,example,pre,class,code,mvc,uri,components,builder,from,method,call,on,foo,controller,class,get,foo,1,build,pre,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,controller,type,the,target,controller;public,static,t,t,on,class,t,controller,type,return,controller,controller,type
MvcUriComponentsBuilder -> public static <T> T on(Class<T> controllerType);1532041662;Return a "mock" controller instance. When an {@code @RequestMapping} method_on the controller is invoked, the supplied argument values are remembered_and the result can then be used to create a {@code UriComponentsBuilder}_via {@link #fromMethodCall(Object)}._<p>Note that this is a shorthand version of {@link #controller(Class)} intended_for inline use (with a static import), for example:_<pre class="code">_MvcUriComponentsBuilder.fromMethodCall(on(FooController.class).getFoo(1)).build()__</pre>_<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs.__@param controllerType the target controller;public static <T> T on(Class<T> controllerType) {_		return controller(controllerType)__	};return,a,mock,controller,instance,when,an,code,request,mapping,method,on,the,controller,is,invoked,the,supplied,argument,values,are,remembered,and,the,result,can,then,be,used,to,create,a,code,uri,components,builder,via,link,from,method,call,object,p,note,that,this,is,a,shorthand,version,of,link,controller,class,intended,for,inline,use,with,a,static,import,for,example,pre,class,code,mvc,uri,components,builder,from,method,call,on,foo,controller,class,get,foo,1,build,pre,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,controller,type,the,target,controller;public,static,t,t,on,class,t,controller,type,return,controller,controller,type
MvcUriComponentsBuilder -> public static <T> T on(Class<T> controllerType);1532041662;Return a "mock" controller instance. When an {@code @RequestMapping} method_on the controller is invoked, the supplied argument values are remembered_and the result can then be used to create a {@code UriComponentsBuilder}_via {@link #fromMethodCall(Object)}._<p>Note that this is a shorthand version of {@link #controller(Class)} intended_for inline use (with a static import), for example:_<pre class="code">_MvcUriComponentsBuilder.fromMethodCall(on(FooController.class).getFoo(1)).build()__</pre>_<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs.__@param controllerType the target controller;public static <T> T on(Class<T> controllerType) {_		return controller(controllerType)__	};return,a,mock,controller,instance,when,an,code,request,mapping,method,on,the,controller,is,invoked,the,supplied,argument,values,are,remembered,and,the,result,can,then,be,used,to,create,a,code,uri,components,builder,via,link,from,method,call,object,p,note,that,this,is,a,shorthand,version,of,link,controller,class,intended,for,inline,use,with,a,static,import,for,example,pre,class,code,mvc,uri,components,builder,from,method,call,on,foo,controller,class,get,foo,1,build,pre,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,controller,type,the,target,controller;public,static,t,t,on,class,t,controller,type,return,controller,controller,type
MvcUriComponentsBuilder -> public static <T> T on(Class<T> controllerType);1548943222;Return a "mock" controller instance. When an {@code @RequestMapping} method_on the controller is invoked, the supplied argument values are remembered_and the result can then be used to create a {@code UriComponentsBuilder}_via {@link #fromMethodCall(Object)}._<p>Note that this is a shorthand version of {@link #controller(Class)} intended_for inline use (with a static import), for example:_<pre class="code">_MvcUriComponentsBuilder.fromMethodCall(on(FooController.class).getFoo(1)).build()__</pre>_<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs.__@param controllerType the target controller;public static <T> T on(Class<T> controllerType) {_		return controller(controllerType)__	};return,a,mock,controller,instance,when,an,code,request,mapping,method,on,the,controller,is,invoked,the,supplied,argument,values,are,remembered,and,the,result,can,then,be,used,to,create,a,code,uri,components,builder,via,link,from,method,call,object,p,note,that,this,is,a,shorthand,version,of,link,controller,class,intended,for,inline,use,with,a,static,import,for,example,pre,class,code,mvc,uri,components,builder,from,method,call,on,foo,controller,class,get,foo,1,build,pre,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,controller,type,the,target,controller;public,static,t,t,on,class,t,controller,type,return,controller,controller,type
MvcUriComponentsBuilder -> public static MethodArgumentBuilder fromMappingName(UriComponentsBuilder builder, String name);1429801944;An alternative to {@link #fromMappingName(String)} that accepts a_{@code UriComponentsBuilder} representing the base URL. This is useful_when using MvcUriComponentsBuilder outside the context of processing a_request or to apply a custom baseUrl not matching the current request._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param name the mapping name_@return a builder to to prepare the URI String_@throws IllegalArgumentException if the mapping name is not found or_if there is no unique match_@since 4.2;public static MethodArgumentBuilder fromMappingName(UriComponentsBuilder builder, String name) {_		RequestMappingInfoHandlerMapping handlerMapping = getRequestMappingInfoHandlerMapping()__		List<HandlerMethod> handlerMethods = handlerMapping.getHandlerMethodsForMappingName(name)__		if (handlerMethods == null) {_			throw new IllegalArgumentException("Mapping mappingName not found: " + name)__		}_		if (handlerMethods.size() != 1) {_			throw new IllegalArgumentException("No unique match for mapping mappingName " +_					name + ": " + handlerMethods)__		}_		return new MethodArgumentBuilder(builder, handlerMethods.get(0).getMethod())__	};an,alternative,to,link,from,mapping,name,string,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,name,the,mapping,name,return,a,builder,to,to,prepare,the,uri,string,throws,illegal,argument,exception,if,the,mapping,name,is,not,found,or,if,there,is,no,unique,match,since,4,2;public,static,method,argument,builder,from,mapping,name,uri,components,builder,builder,string,name,request,mapping,info,handler,mapping,handler,mapping,get,request,mapping,info,handler,mapping,list,handler,method,handler,methods,handler,mapping,get,handler,methods,for,mapping,name,name,if,handler,methods,null,throw,new,illegal,argument,exception,mapping,mapping,name,not,found,name,if,handler,methods,size,1,throw,new,illegal,argument,exception,no,unique,match,for,mapping,mapping,name,name,handler,methods,return,new,method,argument,builder,builder,handler,methods,get,0,get,method
MvcUriComponentsBuilder -> public static MethodArgumentBuilder fromMappingName(UriComponentsBuilder builder, String name);1429802180;An alternative to {@link #fromMappingName(String)} that accepts a_{@code UriComponentsBuilder} representing the base URL. This is useful_when using MvcUriComponentsBuilder outside the context of processing a_request or to apply a custom baseUrl not matching the current request._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param name the mapping name_@return a builder to to prepare the URI String_@throws IllegalArgumentException if the mapping name is not found or_if there is no unique match_@since 4.2;public static MethodArgumentBuilder fromMappingName(UriComponentsBuilder builder, String name) {_		RequestMappingInfoHandlerMapping handlerMapping = getRequestMappingInfoHandlerMapping()__		List<HandlerMethod> handlerMethods = handlerMapping.getHandlerMethodsForMappingName(name)__		if (handlerMethods == null) {_			throw new IllegalArgumentException("Mapping mappingName not found: " + name)__		}_		if (handlerMethods.size() != 1) {_			throw new IllegalArgumentException("No unique match for mapping mappingName " +_					name + ": " + handlerMethods)__		}_		return new MethodArgumentBuilder(builder, handlerMethods.get(0).getMethod())__	};an,alternative,to,link,from,mapping,name,string,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,name,the,mapping,name,return,a,builder,to,to,prepare,the,uri,string,throws,illegal,argument,exception,if,the,mapping,name,is,not,found,or,if,there,is,no,unique,match,since,4,2;public,static,method,argument,builder,from,mapping,name,uri,components,builder,builder,string,name,request,mapping,info,handler,mapping,handler,mapping,get,request,mapping,info,handler,mapping,list,handler,method,handler,methods,handler,mapping,get,handler,methods,for,mapping,name,name,if,handler,methods,null,throw,new,illegal,argument,exception,mapping,mapping,name,not,found,name,if,handler,methods,size,1,throw,new,illegal,argument,exception,no,unique,match,for,mapping,mapping,name,name,handler,methods,return,new,method,argument,builder,builder,handler,methods,get,0,get,method
MvcUriComponentsBuilder -> public static MethodArgumentBuilder fromMappingName(UriComponentsBuilder builder, String name);1429886024;An alternative to {@link #fromMappingName(String)} that accepts a_{@code UriComponentsBuilder} representing the base URL. This is useful_when using MvcUriComponentsBuilder outside the context of processing a_request or to apply a custom baseUrl not matching the current request._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param name the mapping name_@return a builder to to prepare the URI String_@throws IllegalArgumentException if the mapping name is not found or_if there is no unique match_@since 4.2;public static MethodArgumentBuilder fromMappingName(UriComponentsBuilder builder, String name) {_		RequestMappingInfoHandlerMapping handlerMapping = getRequestMappingInfoHandlerMapping()__		List<HandlerMethod> handlerMethods = handlerMapping.getHandlerMethodsForMappingName(name)__		if (handlerMethods == null) {_			throw new IllegalArgumentException("Mapping mappingName not found: " + name)__		}_		if (handlerMethods.size() != 1) {_			throw new IllegalArgumentException("No unique match for mapping mappingName " +_					name + ": " + handlerMethods)__		}_		return new MethodArgumentBuilder(builder, handlerMethods.get(0).getMethod())__	};an,alternative,to,link,from,mapping,name,string,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,name,the,mapping,name,return,a,builder,to,to,prepare,the,uri,string,throws,illegal,argument,exception,if,the,mapping,name,is,not,found,or,if,there,is,no,unique,match,since,4,2;public,static,method,argument,builder,from,mapping,name,uri,components,builder,builder,string,name,request,mapping,info,handler,mapping,handler,mapping,get,request,mapping,info,handler,mapping,list,handler,method,handler,methods,handler,mapping,get,handler,methods,for,mapping,name,name,if,handler,methods,null,throw,new,illegal,argument,exception,mapping,mapping,name,not,found,name,if,handler,methods,size,1,throw,new,illegal,argument,exception,no,unique,match,for,mapping,mapping,name,name,handler,methods,return,new,method,argument,builder,builder,handler,methods,get,0,get,method
MvcUriComponentsBuilder -> public static MethodArgumentBuilder fromMappingName(UriComponentsBuilder builder, String name);1429888980;An alternative to {@link #fromMappingName(String)} that accepts a_{@code UriComponentsBuilder} representing the base URL. This is useful_when using MvcUriComponentsBuilder outside the context of processing a_request or to apply a custom baseUrl not matching the current request._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param name the mapping name_@return a builder to to prepare the URI String_@throws IllegalArgumentException if the mapping name is not found or_if there is no unique match_@since 4.2;public static MethodArgumentBuilder fromMappingName(UriComponentsBuilder builder, String name) {_		RequestMappingInfoHandlerMapping handlerMapping = getRequestMappingInfoHandlerMapping()__		List<HandlerMethod> handlerMethods = handlerMapping.getHandlerMethodsForMappingName(name)__		if (handlerMethods == null) {_			throw new IllegalArgumentException("Mapping mappingName not found: " + name)__		}_		if (handlerMethods.size() != 1) {_			throw new IllegalArgumentException("No unique match for mapping mappingName " +_					name + ": " + handlerMethods)__		}_		return new MethodArgumentBuilder(builder, handlerMethods.get(0).getMethod())__	};an,alternative,to,link,from,mapping,name,string,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,name,the,mapping,name,return,a,builder,to,to,prepare,the,uri,string,throws,illegal,argument,exception,if,the,mapping,name,is,not,found,or,if,there,is,no,unique,match,since,4,2;public,static,method,argument,builder,from,mapping,name,uri,components,builder,builder,string,name,request,mapping,info,handler,mapping,handler,mapping,get,request,mapping,info,handler,mapping,list,handler,method,handler,methods,handler,mapping,get,handler,methods,for,mapping,name,name,if,handler,methods,null,throw,new,illegal,argument,exception,mapping,mapping,name,not,found,name,if,handler,methods,size,1,throw,new,illegal,argument,exception,no,unique,match,for,mapping,mapping,name,name,handler,methods,return,new,method,argument,builder,builder,handler,methods,get,0,get,method
MvcUriComponentsBuilder -> public static MethodArgumentBuilder fromMappingName(UriComponentsBuilder builder, String name);1430739806;An alternative to {@link #fromMappingName(String)} that accepts a_{@code UriComponentsBuilder} representing the base URL. This is useful_when using MvcUriComponentsBuilder outside the context of processing a_request or to apply a custom baseUrl not matching the current request._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param name the mapping name_@return a builder to to prepare the URI String_@throws IllegalArgumentException if the mapping name is not found or_if there is no unique match_@since 4.2;public static MethodArgumentBuilder fromMappingName(UriComponentsBuilder builder, String name) {_		RequestMappingInfoHandlerMapping handlerMapping = getRequestMappingInfoHandlerMapping()__		List<HandlerMethod> handlerMethods = handlerMapping.getHandlerMethodsForMappingName(name)__		if (handlerMethods == null) {_			throw new IllegalArgumentException("Mapping mappingName not found: " + name)__		}_		if (handlerMethods.size() != 1) {_			throw new IllegalArgumentException("No unique match for mapping mappingName " +_					name + ": " + handlerMethods)__		}_		return new MethodArgumentBuilder(builder, handlerMethods.get(0).getMethod())__	};an,alternative,to,link,from,mapping,name,string,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,name,the,mapping,name,return,a,builder,to,to,prepare,the,uri,string,throws,illegal,argument,exception,if,the,mapping,name,is,not,found,or,if,there,is,no,unique,match,since,4,2;public,static,method,argument,builder,from,mapping,name,uri,components,builder,builder,string,name,request,mapping,info,handler,mapping,handler,mapping,get,request,mapping,info,handler,mapping,list,handler,method,handler,methods,handler,mapping,get,handler,methods,for,mapping,name,name,if,handler,methods,null,throw,new,illegal,argument,exception,mapping,mapping,name,not,found,name,if,handler,methods,size,1,throw,new,illegal,argument,exception,no,unique,match,for,mapping,mapping,name,name,handler,methods,return,new,method,argument,builder,builder,handler,methods,get,0,get,method
MvcUriComponentsBuilder -> public static MethodArgumentBuilder fromMappingName(UriComponentsBuilder builder, String name);1430747547;An alternative to {@link #fromMappingName(String)} that accepts a_{@code UriComponentsBuilder} representing the base URL. This is useful_when using MvcUriComponentsBuilder outside the context of processing a_request or to apply a custom baseUrl not matching the current request._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param name the mapping name_@return a builder to to prepare the URI String_@throws IllegalArgumentException if the mapping name is not found or_if there is no unique match_@since 4.2;public static MethodArgumentBuilder fromMappingName(UriComponentsBuilder builder, String name) {_		RequestMappingInfoHandlerMapping handlerMapping = getRequestMappingInfoHandlerMapping()__		List<HandlerMethod> handlerMethods = handlerMapping.getHandlerMethodsForMappingName(name)__		if (handlerMethods == null) {_			throw new IllegalArgumentException("Mapping mappingName not found: " + name)__		}_		if (handlerMethods.size() != 1) {_			throw new IllegalArgumentException("No unique match for mapping mappingName " +_					name + ": " + handlerMethods)__		}_		return new MethodArgumentBuilder(builder, handlerMethods.get(0).getMethod())__	};an,alternative,to,link,from,mapping,name,string,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,name,the,mapping,name,return,a,builder,to,to,prepare,the,uri,string,throws,illegal,argument,exception,if,the,mapping,name,is,not,found,or,if,there,is,no,unique,match,since,4,2;public,static,method,argument,builder,from,mapping,name,uri,components,builder,builder,string,name,request,mapping,info,handler,mapping,handler,mapping,get,request,mapping,info,handler,mapping,list,handler,method,handler,methods,handler,mapping,get,handler,methods,for,mapping,name,name,if,handler,methods,null,throw,new,illegal,argument,exception,mapping,mapping,name,not,found,name,if,handler,methods,size,1,throw,new,illegal,argument,exception,no,unique,match,for,mapping,mapping,name,name,handler,methods,return,new,method,argument,builder,builder,handler,methods,get,0,get,method
MvcUriComponentsBuilder -> public static MethodArgumentBuilder fromMappingName(UriComponentsBuilder builder, String name);1430749606;An alternative to {@link #fromMappingName(String)} that accepts a_{@code UriComponentsBuilder} representing the base URL. This is useful_when using MvcUriComponentsBuilder outside the context of processing a_request or to apply a custom baseUrl not matching the current request._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param name the mapping name_@return a builder to to prepare the URI String_@throws IllegalArgumentException if the mapping name is not found or_if there is no unique match_@since 4.2;public static MethodArgumentBuilder fromMappingName(UriComponentsBuilder builder, String name) {_		RequestMappingInfoHandlerMapping handlerMapping = getRequestMappingInfoHandlerMapping()__		List<HandlerMethod> handlerMethods = handlerMapping.getHandlerMethodsForMappingName(name)__		if (handlerMethods == null) {_			throw new IllegalArgumentException("Mapping mappingName not found: " + name)__		}_		if (handlerMethods.size() != 1) {_			throw new IllegalArgumentException("No unique match for mapping mappingName " +_					name + ": " + handlerMethods)__		}_		return new MethodArgumentBuilder(builder, handlerMethods.get(0).getMethod())__	};an,alternative,to,link,from,mapping,name,string,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,name,the,mapping,name,return,a,builder,to,to,prepare,the,uri,string,throws,illegal,argument,exception,if,the,mapping,name,is,not,found,or,if,there,is,no,unique,match,since,4,2;public,static,method,argument,builder,from,mapping,name,uri,components,builder,builder,string,name,request,mapping,info,handler,mapping,handler,mapping,get,request,mapping,info,handler,mapping,list,handler,method,handler,methods,handler,mapping,get,handler,methods,for,mapping,name,name,if,handler,methods,null,throw,new,illegal,argument,exception,mapping,mapping,name,not,found,name,if,handler,methods,size,1,throw,new,illegal,argument,exception,no,unique,match,for,mapping,mapping,name,name,handler,methods,return,new,method,argument,builder,builder,handler,methods,get,0,get,method
MvcUriComponentsBuilder -> public static MethodArgumentBuilder fromMappingName(UriComponentsBuilder builder, String name);1431975386;An alternative to {@link #fromMappingName(String)} that accepts a_{@code UriComponentsBuilder} representing the base URL. This is useful_when using MvcUriComponentsBuilder outside the context of processing a_request or to apply a custom baseUrl not matching the current request._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param name the mapping name_@return a builder to to prepare the URI String_@throws IllegalArgumentException if the mapping name is not found or_if there is no unique match_@since 4.2;public static MethodArgumentBuilder fromMappingName(UriComponentsBuilder builder, String name) {_		RequestMappingInfoHandlerMapping handlerMapping = getRequestMappingInfoHandlerMapping()__		List<HandlerMethod> handlerMethods = handlerMapping.getHandlerMethodsForMappingName(name)__		if (handlerMethods == null) {_			throw new IllegalArgumentException("Mapping mappingName not found: " + name)__		}_		if (handlerMethods.size() != 1) {_			throw new IllegalArgumentException("No unique match for mapping mappingName " +_					name + ": " + handlerMethods)__		}_		HandlerMethod handlerMethod = handlerMethods.get(0)__		Class<?> controllerType = handlerMethod.getBeanType()__		Method method = handlerMethod.getMethod()__		return new MethodArgumentBuilder(builder, controllerType, method)__	};an,alternative,to,link,from,mapping,name,string,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,name,the,mapping,name,return,a,builder,to,to,prepare,the,uri,string,throws,illegal,argument,exception,if,the,mapping,name,is,not,found,or,if,there,is,no,unique,match,since,4,2;public,static,method,argument,builder,from,mapping,name,uri,components,builder,builder,string,name,request,mapping,info,handler,mapping,handler,mapping,get,request,mapping,info,handler,mapping,list,handler,method,handler,methods,handler,mapping,get,handler,methods,for,mapping,name,name,if,handler,methods,null,throw,new,illegal,argument,exception,mapping,mapping,name,not,found,name,if,handler,methods,size,1,throw,new,illegal,argument,exception,no,unique,match,for,mapping,mapping,name,name,handler,methods,handler,method,handler,method,handler,methods,get,0,class,controller,type,handler,method,get,bean,type,method,method,handler,method,get,method,return,new,method,argument,builder,builder,controller,type,method
MvcUriComponentsBuilder -> public static MethodArgumentBuilder fromMappingName(UriComponentsBuilder builder, String name);1432125256;An alternative to {@link #fromMappingName(String)} that accepts a_{@code UriComponentsBuilder} representing the base URL. This is useful_when using MvcUriComponentsBuilder outside the context of processing a_request or to apply a custom baseUrl not matching the current request._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param name the mapping name_@return a builder to to prepare the URI String_@throws IllegalArgumentException if the mapping name is not found or_if there is no unique match_@since 4.2;public static MethodArgumentBuilder fromMappingName(UriComponentsBuilder builder, String name) {_		RequestMappingInfoHandlerMapping handlerMapping = getRequestMappingInfoHandlerMapping()__		List<HandlerMethod> handlerMethods = handlerMapping.getHandlerMethodsForMappingName(name)__		if (handlerMethods == null) {_			throw new IllegalArgumentException("Mapping mappingName not found: " + name)__		}_		if (handlerMethods.size() != 1) {_			throw new IllegalArgumentException("No unique match for mapping mappingName " +_					name + ": " + handlerMethods)__		}_		HandlerMethod handlerMethod = handlerMethods.get(0)__		Class<?> controllerType = handlerMethod.getBeanType()__		Method method = handlerMethod.getMethod()__		return new MethodArgumentBuilder(builder, controllerType, method)__	};an,alternative,to,link,from,mapping,name,string,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,name,the,mapping,name,return,a,builder,to,to,prepare,the,uri,string,throws,illegal,argument,exception,if,the,mapping,name,is,not,found,or,if,there,is,no,unique,match,since,4,2;public,static,method,argument,builder,from,mapping,name,uri,components,builder,builder,string,name,request,mapping,info,handler,mapping,handler,mapping,get,request,mapping,info,handler,mapping,list,handler,method,handler,methods,handler,mapping,get,handler,methods,for,mapping,name,name,if,handler,methods,null,throw,new,illegal,argument,exception,mapping,mapping,name,not,found,name,if,handler,methods,size,1,throw,new,illegal,argument,exception,no,unique,match,for,mapping,mapping,name,name,handler,methods,handler,method,handler,method,handler,methods,get,0,class,controller,type,handler,method,get,bean,type,method,method,handler,method,get,method,return,new,method,argument,builder,builder,controller,type,method
MvcUriComponentsBuilder -> public static MethodArgumentBuilder fromMappingName(UriComponentsBuilder builder, String name);1432156007;An alternative to {@link #fromMappingName(String)} that accepts a_{@code UriComponentsBuilder} representing the base URL. This is useful_when using MvcUriComponentsBuilder outside the context of processing a_request or to apply a custom baseUrl not matching the current request._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param name the mapping name_@return a builder to to prepare the URI String_@throws IllegalArgumentException if the mapping name is not found or_if there is no unique match_@since 4.2;public static MethodArgumentBuilder fromMappingName(UriComponentsBuilder builder, String name) {_		RequestMappingInfoHandlerMapping handlerMapping = getRequestMappingInfoHandlerMapping()__		List<HandlerMethod> handlerMethods = handlerMapping.getHandlerMethodsForMappingName(name)__		if (handlerMethods == null) {_			throw new IllegalArgumentException("Mapping mappingName not found: " + name)__		}_		if (handlerMethods.size() != 1) {_			throw new IllegalArgumentException("No unique match for mapping mappingName " +_					name + ": " + handlerMethods)__		}_		HandlerMethod handlerMethod = handlerMethods.get(0)__		Class<?> controllerType = handlerMethod.getBeanType()__		Method method = handlerMethod.getMethod()__		return new MethodArgumentBuilder(builder, controllerType, method)__	};an,alternative,to,link,from,mapping,name,string,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,name,the,mapping,name,return,a,builder,to,to,prepare,the,uri,string,throws,illegal,argument,exception,if,the,mapping,name,is,not,found,or,if,there,is,no,unique,match,since,4,2;public,static,method,argument,builder,from,mapping,name,uri,components,builder,builder,string,name,request,mapping,info,handler,mapping,handler,mapping,get,request,mapping,info,handler,mapping,list,handler,method,handler,methods,handler,mapping,get,handler,methods,for,mapping,name,name,if,handler,methods,null,throw,new,illegal,argument,exception,mapping,mapping,name,not,found,name,if,handler,methods,size,1,throw,new,illegal,argument,exception,no,unique,match,for,mapping,mapping,name,name,handler,methods,handler,method,handler,method,handler,methods,get,0,class,controller,type,handler,method,get,bean,type,method,method,handler,method,get,method,return,new,method,argument,builder,builder,controller,type,method
MvcUriComponentsBuilder -> public static MethodArgumentBuilder fromMappingName(UriComponentsBuilder builder, String name);1432856630;An alternative to {@link #fromMappingName(String)} that accepts a_{@code UriComponentsBuilder} representing the base URL. This is useful_when using MvcUriComponentsBuilder outside the context of processing a_request or to apply a custom baseUrl not matching the current request._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param name the mapping name_@return a builder to to prepare the URI String_@throws IllegalArgumentException if the mapping name is not found or_if there is no unique match_@since 4.2;public static MethodArgumentBuilder fromMappingName(UriComponentsBuilder builder, String name) {_		RequestMappingInfoHandlerMapping handlerMapping = getRequestMappingInfoHandlerMapping()__		List<HandlerMethod> handlerMethods = handlerMapping.getHandlerMethodsForMappingName(name)__		if (handlerMethods == null) {_			throw new IllegalArgumentException("Mapping mappingName not found: " + name)__		}_		if (handlerMethods.size() != 1) {_			throw new IllegalArgumentException("No unique match for mapping mappingName " +_					name + ": " + handlerMethods)__		}_		HandlerMethod handlerMethod = handlerMethods.get(0)__		Class<?> controllerType = handlerMethod.getBeanType()__		Method method = handlerMethod.getMethod()__		return new MethodArgumentBuilder(builder, controllerType, method)__	};an,alternative,to,link,from,mapping,name,string,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,name,the,mapping,name,return,a,builder,to,to,prepare,the,uri,string,throws,illegal,argument,exception,if,the,mapping,name,is,not,found,or,if,there,is,no,unique,match,since,4,2;public,static,method,argument,builder,from,mapping,name,uri,components,builder,builder,string,name,request,mapping,info,handler,mapping,handler,mapping,get,request,mapping,info,handler,mapping,list,handler,method,handler,methods,handler,mapping,get,handler,methods,for,mapping,name,name,if,handler,methods,null,throw,new,illegal,argument,exception,mapping,mapping,name,not,found,name,if,handler,methods,size,1,throw,new,illegal,argument,exception,no,unique,match,for,mapping,mapping,name,name,handler,methods,handler,method,handler,method,handler,methods,get,0,class,controller,type,handler,method,get,bean,type,method,method,handler,method,get,method,return,new,method,argument,builder,builder,controller,type,method
MvcUriComponentsBuilder -> public static MethodArgumentBuilder fromMappingName(UriComponentsBuilder builder, String name);1432857824;An alternative to {@link #fromMappingName(String)} that accepts a_{@code UriComponentsBuilder} representing the base URL. This is useful_when using MvcUriComponentsBuilder outside the context of processing a_request or to apply a custom baseUrl not matching the current request._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param name the mapping name_@return a builder to to prepare the URI String_@throws IllegalArgumentException if the mapping name is not found or_if there is no unique match_@since 4.2;public static MethodArgumentBuilder fromMappingName(UriComponentsBuilder builder, String name) {_		RequestMappingInfoHandlerMapping handlerMapping = getRequestMappingInfoHandlerMapping()__		List<HandlerMethod> handlerMethods = handlerMapping.getHandlerMethodsForMappingName(name)__		if (handlerMethods == null) {_			throw new IllegalArgumentException("Mapping mappingName not found: " + name)__		}_		if (handlerMethods.size() != 1) {_			throw new IllegalArgumentException("No unique match for mapping mappingName " +_					name + ": " + handlerMethods)__		}_		HandlerMethod handlerMethod = handlerMethods.get(0)__		Class<?> controllerType = handlerMethod.getBeanType()__		Method method = handlerMethod.getMethod()__		return new MethodArgumentBuilder(builder, controllerType, method)__	};an,alternative,to,link,from,mapping,name,string,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,name,the,mapping,name,return,a,builder,to,to,prepare,the,uri,string,throws,illegal,argument,exception,if,the,mapping,name,is,not,found,or,if,there,is,no,unique,match,since,4,2;public,static,method,argument,builder,from,mapping,name,uri,components,builder,builder,string,name,request,mapping,info,handler,mapping,handler,mapping,get,request,mapping,info,handler,mapping,list,handler,method,handler,methods,handler,mapping,get,handler,methods,for,mapping,name,name,if,handler,methods,null,throw,new,illegal,argument,exception,mapping,mapping,name,not,found,name,if,handler,methods,size,1,throw,new,illegal,argument,exception,no,unique,match,for,mapping,mapping,name,name,handler,methods,handler,method,handler,method,handler,methods,get,0,class,controller,type,handler,method,get,bean,type,method,method,handler,method,get,method,return,new,method,argument,builder,builder,controller,type,method
MvcUriComponentsBuilder -> public static MethodArgumentBuilder fromMappingName(UriComponentsBuilder builder, String name);1434234880;An alternative to {@link #fromMappingName(String)} that accepts a_{@code UriComponentsBuilder} representing the base URL. This is useful_when using MvcUriComponentsBuilder outside the context of processing a_request or to apply a custom baseUrl not matching the current request._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param name the mapping name_@return a builder to to prepare the URI String_@throws IllegalArgumentException if the mapping name is not found or_if there is no unique match_@since 4.2;public static MethodArgumentBuilder fromMappingName(UriComponentsBuilder builder, String name) {_		RequestMappingInfoHandlerMapping handlerMapping = getRequestMappingInfoHandlerMapping()__		List<HandlerMethod> handlerMethods = handlerMapping.getHandlerMethodsForMappingName(name)__		if (handlerMethods == null) {_			throw new IllegalArgumentException("Mapping mappingName not found: " + name)__		}_		if (handlerMethods.size() != 1) {_			throw new IllegalArgumentException("No unique match for mapping mappingName " +_					name + ": " + handlerMethods)__		}_		HandlerMethod handlerMethod = handlerMethods.get(0)__		Class<?> controllerType = handlerMethod.getBeanType()__		Method method = handlerMethod.getMethod()__		return new MethodArgumentBuilder(builder, controllerType, method)__	};an,alternative,to,link,from,mapping,name,string,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,name,the,mapping,name,return,a,builder,to,to,prepare,the,uri,string,throws,illegal,argument,exception,if,the,mapping,name,is,not,found,or,if,there,is,no,unique,match,since,4,2;public,static,method,argument,builder,from,mapping,name,uri,components,builder,builder,string,name,request,mapping,info,handler,mapping,handler,mapping,get,request,mapping,info,handler,mapping,list,handler,method,handler,methods,handler,mapping,get,handler,methods,for,mapping,name,name,if,handler,methods,null,throw,new,illegal,argument,exception,mapping,mapping,name,not,found,name,if,handler,methods,size,1,throw,new,illegal,argument,exception,no,unique,match,for,mapping,mapping,name,name,handler,methods,handler,method,handler,method,handler,methods,get,0,class,controller,type,handler,method,get,bean,type,method,method,handler,method,get,method,return,new,method,argument,builder,builder,controller,type,method
MvcUriComponentsBuilder -> public static MethodArgumentBuilder fromMappingName(UriComponentsBuilder builder, String name);1434484897;An alternative to {@link #fromMappingName(String)} that accepts a_{@code UriComponentsBuilder} representing the base URL. This is useful_when using MvcUriComponentsBuilder outside the context of processing a_request or to apply a custom baseUrl not matching the current request._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param name the mapping name_@return a builder to to prepare the URI String_@throws IllegalArgumentException if the mapping name is not found or_if there is no unique match_@since 4.2;public static MethodArgumentBuilder fromMappingName(UriComponentsBuilder builder, String name) {_		RequestMappingInfoHandlerMapping handlerMapping = getRequestMappingInfoHandlerMapping()__		List<HandlerMethod> handlerMethods = handlerMapping.getHandlerMethodsForMappingName(name)__		if (handlerMethods == null) {_			throw new IllegalArgumentException("Mapping mappingName not found: " + name)__		}_		if (handlerMethods.size() != 1) {_			throw new IllegalArgumentException("No unique match for mapping mappingName " +_					name + ": " + handlerMethods)__		}_		HandlerMethod handlerMethod = handlerMethods.get(0)__		Class<?> controllerType = handlerMethod.getBeanType()__		Method method = handlerMethod.getMethod()__		return new MethodArgumentBuilder(builder, controllerType, method)__	};an,alternative,to,link,from,mapping,name,string,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,name,the,mapping,name,return,a,builder,to,to,prepare,the,uri,string,throws,illegal,argument,exception,if,the,mapping,name,is,not,found,or,if,there,is,no,unique,match,since,4,2;public,static,method,argument,builder,from,mapping,name,uri,components,builder,builder,string,name,request,mapping,info,handler,mapping,handler,mapping,get,request,mapping,info,handler,mapping,list,handler,method,handler,methods,handler,mapping,get,handler,methods,for,mapping,name,name,if,handler,methods,null,throw,new,illegal,argument,exception,mapping,mapping,name,not,found,name,if,handler,methods,size,1,throw,new,illegal,argument,exception,no,unique,match,for,mapping,mapping,name,name,handler,methods,handler,method,handler,method,handler,methods,get,0,class,controller,type,handler,method,get,bean,type,method,method,handler,method,get,method,return,new,method,argument,builder,builder,controller,type,method
MvcUriComponentsBuilder -> public static MethodArgumentBuilder fromMappingName(UriComponentsBuilder builder, String name);1434726592;An alternative to {@link #fromMappingName(String)} that accepts a_{@code UriComponentsBuilder} representing the base URL. This is useful_when using MvcUriComponentsBuilder outside the context of processing a_request or to apply a custom baseUrl not matching the current request._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param name the mapping name_@return a builder to to prepare the URI String_@throws IllegalArgumentException if the mapping name is not found or_if there is no unique match_@since 4.2;public static MethodArgumentBuilder fromMappingName(UriComponentsBuilder builder, String name) {_		RequestMappingInfoHandlerMapping handlerMapping = getRequestMappingInfoHandlerMapping()__		List<HandlerMethod> handlerMethods = handlerMapping.getHandlerMethodsForMappingName(name)__		if (handlerMethods == null) {_			throw new IllegalArgumentException("Mapping mappingName not found: " + name)__		}_		if (handlerMethods.size() != 1) {_			throw new IllegalArgumentException("No unique match for mapping mappingName " +_					name + ": " + handlerMethods)__		}_		HandlerMethod handlerMethod = handlerMethods.get(0)__		Class<?> controllerType = handlerMethod.getBeanType()__		Method method = handlerMethod.getMethod()__		return new MethodArgumentBuilder(builder, controllerType, method)__	};an,alternative,to,link,from,mapping,name,string,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,name,the,mapping,name,return,a,builder,to,to,prepare,the,uri,string,throws,illegal,argument,exception,if,the,mapping,name,is,not,found,or,if,there,is,no,unique,match,since,4,2;public,static,method,argument,builder,from,mapping,name,uri,components,builder,builder,string,name,request,mapping,info,handler,mapping,handler,mapping,get,request,mapping,info,handler,mapping,list,handler,method,handler,methods,handler,mapping,get,handler,methods,for,mapping,name,name,if,handler,methods,null,throw,new,illegal,argument,exception,mapping,mapping,name,not,found,name,if,handler,methods,size,1,throw,new,illegal,argument,exception,no,unique,match,for,mapping,mapping,name,name,handler,methods,handler,method,handler,method,handler,methods,get,0,class,controller,type,handler,method,get,bean,type,method,method,handler,method,get,method,return,new,method,argument,builder,builder,controller,type,method
MvcUriComponentsBuilder -> public static MethodArgumentBuilder fromMappingName(UriComponentsBuilder builder, String name);1435615322;An alternative to {@link #fromMappingName(String)} that accepts a_{@code UriComponentsBuilder} representing the base URL. This is useful_when using MvcUriComponentsBuilder outside the context of processing a_request or to apply a custom baseUrl not matching the current request._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param name the mapping name_@return a builder to to prepare the URI String_@throws IllegalArgumentException if the mapping name is not found or_if there is no unique match_@since 4.2;public static MethodArgumentBuilder fromMappingName(UriComponentsBuilder builder, String name) {_		RequestMappingInfoHandlerMapping handlerMapping = getRequestMappingInfoHandlerMapping()__		List<HandlerMethod> handlerMethods = handlerMapping.getHandlerMethodsForMappingName(name)__		if (handlerMethods == null) {_			throw new IllegalArgumentException("Mapping mappingName not found: " + name)__		}_		if (handlerMethods.size() != 1) {_			throw new IllegalArgumentException("No unique match for mapping mappingName " +_					name + ": " + handlerMethods)__		}_		HandlerMethod handlerMethod = handlerMethods.get(0)__		Class<?> controllerType = handlerMethod.getBeanType()__		Method method = handlerMethod.getMethod()__		return new MethodArgumentBuilder(builder, controllerType, method)__	};an,alternative,to,link,from,mapping,name,string,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,name,the,mapping,name,return,a,builder,to,to,prepare,the,uri,string,throws,illegal,argument,exception,if,the,mapping,name,is,not,found,or,if,there,is,no,unique,match,since,4,2;public,static,method,argument,builder,from,mapping,name,uri,components,builder,builder,string,name,request,mapping,info,handler,mapping,handler,mapping,get,request,mapping,info,handler,mapping,list,handler,method,handler,methods,handler,mapping,get,handler,methods,for,mapping,name,name,if,handler,methods,null,throw,new,illegal,argument,exception,mapping,mapping,name,not,found,name,if,handler,methods,size,1,throw,new,illegal,argument,exception,no,unique,match,for,mapping,mapping,name,name,handler,methods,handler,method,handler,method,handler,methods,get,0,class,controller,type,handler,method,get,bean,type,method,method,handler,method,get,method,return,new,method,argument,builder,builder,controller,type,method
MvcUriComponentsBuilder -> public static MethodArgumentBuilder fromMappingName(UriComponentsBuilder builder, String name);1439294371;An alternative to {@link #fromMappingName(String)} that accepts a_{@code UriComponentsBuilder} representing the base URL. This is useful_when using MvcUriComponentsBuilder outside the context of processing a_request or to apply a custom baseUrl not matching the current request._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param name the mapping name_@return a builder to to prepare the URI String_@throws IllegalArgumentException if the mapping name is not found or_if there is no unique match_@since 4.2;public static MethodArgumentBuilder fromMappingName(UriComponentsBuilder builder, String name) {_		RequestMappingInfoHandlerMapping handlerMapping = getRequestMappingInfoHandlerMapping()__		List<HandlerMethod> handlerMethods = handlerMapping.getHandlerMethodsForMappingName(name)__		if (handlerMethods == null) {_			throw new IllegalArgumentException("Mapping mappingName not found: " + name)__		}_		if (handlerMethods.size() != 1) {_			throw new IllegalArgumentException("No unique match for mapping mappingName " +_					name + ": " + handlerMethods)__		}_		HandlerMethod handlerMethod = handlerMethods.get(0)__		Class<?> controllerType = handlerMethod.getBeanType()__		Method method = handlerMethod.getMethod()__		return new MethodArgumentBuilder(builder, controllerType, method)__	};an,alternative,to,link,from,mapping,name,string,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,name,the,mapping,name,return,a,builder,to,to,prepare,the,uri,string,throws,illegal,argument,exception,if,the,mapping,name,is,not,found,or,if,there,is,no,unique,match,since,4,2;public,static,method,argument,builder,from,mapping,name,uri,components,builder,builder,string,name,request,mapping,info,handler,mapping,handler,mapping,get,request,mapping,info,handler,mapping,list,handler,method,handler,methods,handler,mapping,get,handler,methods,for,mapping,name,name,if,handler,methods,null,throw,new,illegal,argument,exception,mapping,mapping,name,not,found,name,if,handler,methods,size,1,throw,new,illegal,argument,exception,no,unique,match,for,mapping,mapping,name,name,handler,methods,handler,method,handler,method,handler,methods,get,0,class,controller,type,handler,method,get,bean,type,method,method,handler,method,get,method,return,new,method,argument,builder,builder,controller,type,method
MvcUriComponentsBuilder -> public static MethodArgumentBuilder fromMappingName(UriComponentsBuilder builder, String name);1447077465;An alternative to {@link #fromMappingName(String)} that accepts a_{@code UriComponentsBuilder} representing the base URL. This is useful_when using MvcUriComponentsBuilder outside the context of processing a_request or to apply a custom baseUrl not matching the current request._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param name the mapping name_@return a builder to to prepare the URI String_@throws IllegalArgumentException if the mapping name is not found or_if there is no unique match_@since 4.2;public static MethodArgumentBuilder fromMappingName(UriComponentsBuilder builder, String name) {_		RequestMappingInfoHandlerMapping handlerMapping = getRequestMappingInfoHandlerMapping()__		List<HandlerMethod> handlerMethods = handlerMapping.getHandlerMethodsForMappingName(name)__		if (handlerMethods == null) {_			throw new IllegalArgumentException("Mapping mappingName not found: " + name)__		}_		if (handlerMethods.size() != 1) {_			throw new IllegalArgumentException("No unique match for mapping mappingName " +_					name + ": " + handlerMethods)__		}_		HandlerMethod handlerMethod = handlerMethods.get(0)__		Class<?> controllerType = handlerMethod.getBeanType()__		Method method = handlerMethod.getMethod()__		return new MethodArgumentBuilder(builder, controllerType, method)__	};an,alternative,to,link,from,mapping,name,string,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,name,the,mapping,name,return,a,builder,to,to,prepare,the,uri,string,throws,illegal,argument,exception,if,the,mapping,name,is,not,found,or,if,there,is,no,unique,match,since,4,2;public,static,method,argument,builder,from,mapping,name,uri,components,builder,builder,string,name,request,mapping,info,handler,mapping,handler,mapping,get,request,mapping,info,handler,mapping,list,handler,method,handler,methods,handler,mapping,get,handler,methods,for,mapping,name,name,if,handler,methods,null,throw,new,illegal,argument,exception,mapping,mapping,name,not,found,name,if,handler,methods,size,1,throw,new,illegal,argument,exception,no,unique,match,for,mapping,mapping,name,name,handler,methods,handler,method,handler,method,handler,methods,get,0,class,controller,type,handler,method,get,bean,type,method,method,handler,method,get,method,return,new,method,argument,builder,builder,controller,type,method
MvcUriComponentsBuilder -> public static MethodArgumentBuilder fromMappingName(UriComponentsBuilder builder, String name);1458830024;An alternative to {@link #fromMappingName(String)} that accepts a_{@code UriComponentsBuilder} representing the base URL. This is useful_when using MvcUriComponentsBuilder outside the context of processing a_request or to apply a custom baseUrl not matching the current request._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param name the mapping name_@return a builder to to prepare the URI String_@throws IllegalArgumentException if the mapping name is not found or_if there is no unique match_@since 4.2;public static MethodArgumentBuilder fromMappingName(UriComponentsBuilder builder, String name) {_		RequestMappingInfoHandlerMapping handlerMapping = getRequestMappingInfoHandlerMapping()__		List<HandlerMethod> handlerMethods = handlerMapping.getHandlerMethodsForMappingName(name)__		if (handlerMethods == null) {_			throw new IllegalArgumentException("Mapping mappingName not found: " + name)__		}_		if (handlerMethods.size() != 1) {_			throw new IllegalArgumentException("No unique match for mapping mappingName " +_					name + ": " + handlerMethods)__		}_		HandlerMethod handlerMethod = handlerMethods.get(0)__		Class<?> controllerType = handlerMethod.getBeanType()__		Method method = handlerMethod.getMethod()__		return new MethodArgumentBuilder(builder, controllerType, method)__	};an,alternative,to,link,from,mapping,name,string,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,name,the,mapping,name,return,a,builder,to,to,prepare,the,uri,string,throws,illegal,argument,exception,if,the,mapping,name,is,not,found,or,if,there,is,no,unique,match,since,4,2;public,static,method,argument,builder,from,mapping,name,uri,components,builder,builder,string,name,request,mapping,info,handler,mapping,handler,mapping,get,request,mapping,info,handler,mapping,list,handler,method,handler,methods,handler,mapping,get,handler,methods,for,mapping,name,name,if,handler,methods,null,throw,new,illegal,argument,exception,mapping,mapping,name,not,found,name,if,handler,methods,size,1,throw,new,illegal,argument,exception,no,unique,match,for,mapping,mapping,name,name,handler,methods,handler,method,handler,method,handler,methods,get,0,class,controller,type,handler,method,get,bean,type,method,method,handler,method,get,method,return,new,method,argument,builder,builder,controller,type,method
MvcUriComponentsBuilder -> public static MethodArgumentBuilder fromMappingName(UriComponentsBuilder builder, String name);1461047077;An alternative to {@link #fromMappingName(String)} that accepts a_{@code UriComponentsBuilder} representing the base URL. This is useful_when using MvcUriComponentsBuilder outside the context of processing a_request or to apply a custom baseUrl not matching the current request._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param name the mapping name_@return a builder to prepare the URI String_@throws IllegalArgumentException if the mapping name is not found or_if there is no unique match_@since 4.2;public static MethodArgumentBuilder fromMappingName(UriComponentsBuilder builder, String name) {_		RequestMappingInfoHandlerMapping handlerMapping = getRequestMappingInfoHandlerMapping()__		List<HandlerMethod> handlerMethods = handlerMapping.getHandlerMethodsForMappingName(name)__		if (handlerMethods == null) {_			throw new IllegalArgumentException("Mapping mappingName not found: " + name)__		}_		if (handlerMethods.size() != 1) {_			throw new IllegalArgumentException("No unique match for mapping mappingName " +_					name + ": " + handlerMethods)__		}_		HandlerMethod handlerMethod = handlerMethods.get(0)__		Class<?> controllerType = handlerMethod.getBeanType()__		Method method = handlerMethod.getMethod()__		return new MethodArgumentBuilder(builder, controllerType, method)__	};an,alternative,to,link,from,mapping,name,string,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,name,the,mapping,name,return,a,builder,to,prepare,the,uri,string,throws,illegal,argument,exception,if,the,mapping,name,is,not,found,or,if,there,is,no,unique,match,since,4,2;public,static,method,argument,builder,from,mapping,name,uri,components,builder,builder,string,name,request,mapping,info,handler,mapping,handler,mapping,get,request,mapping,info,handler,mapping,list,handler,method,handler,methods,handler,mapping,get,handler,methods,for,mapping,name,name,if,handler,methods,null,throw,new,illegal,argument,exception,mapping,mapping,name,not,found,name,if,handler,methods,size,1,throw,new,illegal,argument,exception,no,unique,match,for,mapping,mapping,name,name,handler,methods,handler,method,handler,method,handler,methods,get,0,class,controller,type,handler,method,get,bean,type,method,method,handler,method,get,method,return,new,method,argument,builder,builder,controller,type,method
MvcUriComponentsBuilder -> public static MethodArgumentBuilder fromMappingName(UriComponentsBuilder builder, String name);1467677340;An alternative to {@link #fromMappingName(String)} that accepts a_{@code UriComponentsBuilder} representing the base URL. This is useful_when using MvcUriComponentsBuilder outside the context of processing a_request or to apply a custom baseUrl not matching the current request._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param name the mapping name_@return a builder to prepare the URI String_@throws IllegalArgumentException if the mapping name is not found or_if there is no unique match_@since 4.2;public static MethodArgumentBuilder fromMappingName(UriComponentsBuilder builder, String name) {_		RequestMappingInfoHandlerMapping handlerMapping = getRequestMappingInfoHandlerMapping()__		List<HandlerMethod> handlerMethods = handlerMapping.getHandlerMethodsForMappingName(name)__		if (handlerMethods == null) {_			throw new IllegalArgumentException("Mapping mappingName not found: " + name)__		}_		if (handlerMethods.size() != 1) {_			throw new IllegalArgumentException("No unique match for mapping mappingName " +_					name + ": " + handlerMethods)__		}_		HandlerMethod handlerMethod = handlerMethods.get(0)__		Class<?> controllerType = handlerMethod.getBeanType()__		Method method = handlerMethod.getMethod()__		return new MethodArgumentBuilder(builder, controllerType, method)__	};an,alternative,to,link,from,mapping,name,string,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,name,the,mapping,name,return,a,builder,to,prepare,the,uri,string,throws,illegal,argument,exception,if,the,mapping,name,is,not,found,or,if,there,is,no,unique,match,since,4,2;public,static,method,argument,builder,from,mapping,name,uri,components,builder,builder,string,name,request,mapping,info,handler,mapping,handler,mapping,get,request,mapping,info,handler,mapping,list,handler,method,handler,methods,handler,mapping,get,handler,methods,for,mapping,name,name,if,handler,methods,null,throw,new,illegal,argument,exception,mapping,mapping,name,not,found,name,if,handler,methods,size,1,throw,new,illegal,argument,exception,no,unique,match,for,mapping,mapping,name,name,handler,methods,handler,method,handler,method,handler,methods,get,0,class,controller,type,handler,method,get,bean,type,method,method,handler,method,get,method,return,new,method,argument,builder,builder,controller,type,method
MvcUriComponentsBuilder -> public static MethodArgumentBuilder fromMappingName(UriComponentsBuilder builder, String name);1467726769;An alternative to {@link #fromMappingName(String)} that accepts a_{@code UriComponentsBuilder} representing the base URL. This is useful_when using MvcUriComponentsBuilder outside the context of processing a_request or to apply a custom baseUrl not matching the current request._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param name the mapping name_@return a builder to prepare the URI String_@throws IllegalArgumentException if the mapping name is not found or_if there is no unique match_@since 4.2;public static MethodArgumentBuilder fromMappingName(UriComponentsBuilder builder, String name) {_		RequestMappingInfoHandlerMapping handlerMapping = getRequestMappingInfoHandlerMapping()__		List<HandlerMethod> handlerMethods = handlerMapping.getHandlerMethodsForMappingName(name)__		if (handlerMethods == null) {_			throw new IllegalArgumentException("Mapping mappingName not found: " + name)__		}_		if (handlerMethods.size() != 1) {_			throw new IllegalArgumentException("No unique match for mapping mappingName " +_					name + ": " + handlerMethods)__		}_		HandlerMethod handlerMethod = handlerMethods.get(0)__		Class<?> controllerType = handlerMethod.getBeanType()__		Method method = handlerMethod.getMethod()__		return new MethodArgumentBuilder(builder, controllerType, method)__	};an,alternative,to,link,from,mapping,name,string,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,name,the,mapping,name,return,a,builder,to,prepare,the,uri,string,throws,illegal,argument,exception,if,the,mapping,name,is,not,found,or,if,there,is,no,unique,match,since,4,2;public,static,method,argument,builder,from,mapping,name,uri,components,builder,builder,string,name,request,mapping,info,handler,mapping,handler,mapping,get,request,mapping,info,handler,mapping,list,handler,method,handler,methods,handler,mapping,get,handler,methods,for,mapping,name,name,if,handler,methods,null,throw,new,illegal,argument,exception,mapping,mapping,name,not,found,name,if,handler,methods,size,1,throw,new,illegal,argument,exception,no,unique,match,for,mapping,mapping,name,name,handler,methods,handler,method,handler,method,handler,methods,get,0,class,controller,type,handler,method,get,bean,type,method,method,handler,method,get,method,return,new,method,argument,builder,builder,controller,type,method
MvcUriComponentsBuilder -> public static MethodArgumentBuilder fromMappingName(UriComponentsBuilder builder, String name);1467730834;An alternative to {@link #fromMappingName(String)} that accepts a_{@code UriComponentsBuilder} representing the base URL. This is useful_when using MvcUriComponentsBuilder outside the context of processing a_request or to apply a custom baseUrl not matching the current request._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param name the mapping name_@return a builder to prepare the URI String_@throws IllegalArgumentException if the mapping name is not found or_if there is no unique match_@since 4.2;public static MethodArgumentBuilder fromMappingName(UriComponentsBuilder builder, String name) {_		RequestMappingInfoHandlerMapping handlerMapping = getRequestMappingInfoHandlerMapping()__		List<HandlerMethod> handlerMethods = handlerMapping.getHandlerMethodsForMappingName(name)__		if (handlerMethods == null) {_			throw new IllegalArgumentException("Mapping mappingName not found: " + name)__		}_		if (handlerMethods.size() != 1) {_			throw new IllegalArgumentException("No unique match for mapping mappingName " +_					name + ": " + handlerMethods)__		}_		HandlerMethod handlerMethod = handlerMethods.get(0)__		Class<?> controllerType = handlerMethod.getBeanType()__		Method method = handlerMethod.getMethod()__		return new MethodArgumentBuilder(builder, controllerType, method)__	};an,alternative,to,link,from,mapping,name,string,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,name,the,mapping,name,return,a,builder,to,prepare,the,uri,string,throws,illegal,argument,exception,if,the,mapping,name,is,not,found,or,if,there,is,no,unique,match,since,4,2;public,static,method,argument,builder,from,mapping,name,uri,components,builder,builder,string,name,request,mapping,info,handler,mapping,handler,mapping,get,request,mapping,info,handler,mapping,list,handler,method,handler,methods,handler,mapping,get,handler,methods,for,mapping,name,name,if,handler,methods,null,throw,new,illegal,argument,exception,mapping,mapping,name,not,found,name,if,handler,methods,size,1,throw,new,illegal,argument,exception,no,unique,match,for,mapping,mapping,name,name,handler,methods,handler,method,handler,method,handler,methods,get,0,class,controller,type,handler,method,get,bean,type,method,method,handler,method,get,method,return,new,method,argument,builder,builder,controller,type,method
MvcUriComponentsBuilder -> public static MethodArgumentBuilder fromMappingName(UriComponentsBuilder builder, String name);1467846264;An alternative to {@link #fromMappingName(String)} that accepts a_{@code UriComponentsBuilder} representing the base URL. This is useful_when using MvcUriComponentsBuilder outside the context of processing a_request or to apply a custom baseUrl not matching the current request._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param name the mapping name_@return a builder to prepare the URI String_@throws IllegalArgumentException if the mapping name is not found or_if there is no unique match_@since 4.2;public static MethodArgumentBuilder fromMappingName(UriComponentsBuilder builder, String name) {_		RequestMappingInfoHandlerMapping handlerMapping = getRequestMappingInfoHandlerMapping()__		List<HandlerMethod> handlerMethods = handlerMapping.getHandlerMethodsForMappingName(name)__		if (handlerMethods == null) {_			throw new IllegalArgumentException("Mapping mappingName not found: " + name)__		}_		if (handlerMethods.size() != 1) {_			throw new IllegalArgumentException("No unique match for mapping mappingName " +_					name + ": " + handlerMethods)__		}_		HandlerMethod handlerMethod = handlerMethods.get(0)__		Class<?> controllerType = handlerMethod.getBeanType()__		Method method = handlerMethod.getMethod()__		return new MethodArgumentBuilder(builder, controllerType, method)__	};an,alternative,to,link,from,mapping,name,string,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,name,the,mapping,name,return,a,builder,to,prepare,the,uri,string,throws,illegal,argument,exception,if,the,mapping,name,is,not,found,or,if,there,is,no,unique,match,since,4,2;public,static,method,argument,builder,from,mapping,name,uri,components,builder,builder,string,name,request,mapping,info,handler,mapping,handler,mapping,get,request,mapping,info,handler,mapping,list,handler,method,handler,methods,handler,mapping,get,handler,methods,for,mapping,name,name,if,handler,methods,null,throw,new,illegal,argument,exception,mapping,mapping,name,not,found,name,if,handler,methods,size,1,throw,new,illegal,argument,exception,no,unique,match,for,mapping,mapping,name,name,handler,methods,handler,method,handler,method,handler,methods,get,0,class,controller,type,handler,method,get,bean,type,method,method,handler,method,get,method,return,new,method,argument,builder,builder,controller,type,method
MvcUriComponentsBuilder -> public static MethodArgumentBuilder fromMappingName(UriComponentsBuilder builder, String name);1468613531;An alternative to {@link #fromMappingName(String)} that accepts a_{@code UriComponentsBuilder} representing the base URL. This is useful_when using MvcUriComponentsBuilder outside the context of processing a_request or to apply a custom baseUrl not matching the current request._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param name the mapping name_@return a builder to prepare the URI String_@throws IllegalArgumentException if the mapping name is not found or_if there is no unique match_@since 4.2;public static MethodArgumentBuilder fromMappingName(UriComponentsBuilder builder, String name) {_		RequestMappingInfoHandlerMapping handlerMapping = getRequestMappingInfoHandlerMapping()__		List<HandlerMethod> handlerMethods = handlerMapping.getHandlerMethodsForMappingName(name)__		if (handlerMethods == null) {_			throw new IllegalArgumentException("Mapping mappingName not found: " + name)__		}_		if (handlerMethods.size() != 1) {_			throw new IllegalArgumentException("No unique match for mapping mappingName " +_					name + ": " + handlerMethods)__		}_		HandlerMethod handlerMethod = handlerMethods.get(0)__		Class<?> controllerType = handlerMethod.getBeanType()__		Method method = handlerMethod.getMethod()__		return new MethodArgumentBuilder(builder, controllerType, method)__	};an,alternative,to,link,from,mapping,name,string,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,name,the,mapping,name,return,a,builder,to,prepare,the,uri,string,throws,illegal,argument,exception,if,the,mapping,name,is,not,found,or,if,there,is,no,unique,match,since,4,2;public,static,method,argument,builder,from,mapping,name,uri,components,builder,builder,string,name,request,mapping,info,handler,mapping,handler,mapping,get,request,mapping,info,handler,mapping,list,handler,method,handler,methods,handler,mapping,get,handler,methods,for,mapping,name,name,if,handler,methods,null,throw,new,illegal,argument,exception,mapping,mapping,name,not,found,name,if,handler,methods,size,1,throw,new,illegal,argument,exception,no,unique,match,for,mapping,mapping,name,name,handler,methods,handler,method,handler,method,handler,methods,get,0,class,controller,type,handler,method,get,bean,type,method,method,handler,method,get,method,return,new,method,argument,builder,builder,controller,type,method
MvcUriComponentsBuilder -> public static MethodArgumentBuilder fromMappingName(UriComponentsBuilder builder, String name);1468948866;An alternative to {@link #fromMappingName(String)} that accepts a_{@code UriComponentsBuilder} representing the base URL. This is useful_when using MvcUriComponentsBuilder outside the context of processing a_request or to apply a custom baseUrl not matching the current request._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param name the mapping name_@return a builder to prepare the URI String_@throws IllegalArgumentException if the mapping name is not found or_if there is no unique match_@since 4.2;public static MethodArgumentBuilder fromMappingName(UriComponentsBuilder builder, String name) {_		RequestMappingInfoHandlerMapping handlerMapping = getRequestMappingInfoHandlerMapping()__		List<HandlerMethod> handlerMethods = handlerMapping.getHandlerMethodsForMappingName(name)__		if (handlerMethods == null) {_			throw new IllegalArgumentException("Mapping mappingName not found: " + name)__		}_		if (handlerMethods.size() != 1) {_			throw new IllegalArgumentException("No unique match for mapping mappingName " +_					name + ": " + handlerMethods)__		}_		HandlerMethod handlerMethod = handlerMethods.get(0)__		Class<?> controllerType = handlerMethod.getBeanType()__		Method method = handlerMethod.getMethod()__		return new MethodArgumentBuilder(builder, controllerType, method)__	};an,alternative,to,link,from,mapping,name,string,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,name,the,mapping,name,return,a,builder,to,prepare,the,uri,string,throws,illegal,argument,exception,if,the,mapping,name,is,not,found,or,if,there,is,no,unique,match,since,4,2;public,static,method,argument,builder,from,mapping,name,uri,components,builder,builder,string,name,request,mapping,info,handler,mapping,handler,mapping,get,request,mapping,info,handler,mapping,list,handler,method,handler,methods,handler,mapping,get,handler,methods,for,mapping,name,name,if,handler,methods,null,throw,new,illegal,argument,exception,mapping,mapping,name,not,found,name,if,handler,methods,size,1,throw,new,illegal,argument,exception,no,unique,match,for,mapping,mapping,name,name,handler,methods,handler,method,handler,method,handler,methods,get,0,class,controller,type,handler,method,get,bean,type,method,method,handler,method,get,method,return,new,method,argument,builder,builder,controller,type,method
MvcUriComponentsBuilder -> public static MethodArgumentBuilder fromMappingName(UriComponentsBuilder builder, String name);1485810955;An alternative to {@link #fromMappingName(String)} that accepts a_{@code UriComponentsBuilder} representing the base URL. This is useful_when using MvcUriComponentsBuilder outside the context of processing a_request or to apply a custom baseUrl not matching the current request._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param name the mapping name_@return a builder to prepare the URI String_@throws IllegalArgumentException if the mapping name is not found or_if there is no unique match_@since 4.2;public static MethodArgumentBuilder fromMappingName(UriComponentsBuilder builder, String name) {_		RequestMappingInfoHandlerMapping handlerMapping = getRequestMappingInfoHandlerMapping()__		List<HandlerMethod> handlerMethods = handlerMapping.getHandlerMethodsForMappingName(name)__		if (handlerMethods == null) {_			throw new IllegalArgumentException("Mapping mappingName not found: " + name)__		}_		if (handlerMethods.size() != 1) {_			throw new IllegalArgumentException("No unique match for mapping mappingName " +_					name + ": " + handlerMethods)__		}_		HandlerMethod handlerMethod = handlerMethods.get(0)__		Class<?> controllerType = handlerMethod.getBeanType()__		Method method = handlerMethod.getMethod()__		return new MethodArgumentBuilder(builder, controllerType, method)__	};an,alternative,to,link,from,mapping,name,string,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,name,the,mapping,name,return,a,builder,to,prepare,the,uri,string,throws,illegal,argument,exception,if,the,mapping,name,is,not,found,or,if,there,is,no,unique,match,since,4,2;public,static,method,argument,builder,from,mapping,name,uri,components,builder,builder,string,name,request,mapping,info,handler,mapping,handler,mapping,get,request,mapping,info,handler,mapping,list,handler,method,handler,methods,handler,mapping,get,handler,methods,for,mapping,name,name,if,handler,methods,null,throw,new,illegal,argument,exception,mapping,mapping,name,not,found,name,if,handler,methods,size,1,throw,new,illegal,argument,exception,no,unique,match,for,mapping,mapping,name,name,handler,methods,handler,method,handler,method,handler,methods,get,0,class,controller,type,handler,method,get,bean,type,method,method,handler,method,get,method,return,new,method,argument,builder,builder,controller,type,method
MvcUriComponentsBuilder -> public static MethodArgumentBuilder fromMappingName(UriComponentsBuilder builder, String name);1486634978;An alternative to {@link #fromMappingName(String)} that accepts a_{@code UriComponentsBuilder} representing the base URL. This is useful_when using MvcUriComponentsBuilder outside the context of processing a_request or to apply a custom baseUrl not matching the current request._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param name the mapping name_@return a builder to prepare the URI String_@throws IllegalArgumentException if the mapping name is not found or_if there is no unique match_@since 4.2;public static MethodArgumentBuilder fromMappingName(UriComponentsBuilder builder, String name) {_		RequestMappingInfoHandlerMapping handlerMapping = getRequestMappingInfoHandlerMapping()__		List<HandlerMethod> handlerMethods = handlerMapping.getHandlerMethodsForMappingName(name)__		if (handlerMethods == null) {_			throw new IllegalArgumentException("Mapping mappingName not found: " + name)__		}_		if (handlerMethods.size() != 1) {_			throw new IllegalArgumentException("No unique match for mapping mappingName " +_					name + ": " + handlerMethods)__		}_		HandlerMethod handlerMethod = handlerMethods.get(0)__		Class<?> controllerType = handlerMethod.getBeanType()__		Method method = handlerMethod.getMethod()__		return new MethodArgumentBuilder(builder, controllerType, method)__	};an,alternative,to,link,from,mapping,name,string,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,name,the,mapping,name,return,a,builder,to,prepare,the,uri,string,throws,illegal,argument,exception,if,the,mapping,name,is,not,found,or,if,there,is,no,unique,match,since,4,2;public,static,method,argument,builder,from,mapping,name,uri,components,builder,builder,string,name,request,mapping,info,handler,mapping,handler,mapping,get,request,mapping,info,handler,mapping,list,handler,method,handler,methods,handler,mapping,get,handler,methods,for,mapping,name,name,if,handler,methods,null,throw,new,illegal,argument,exception,mapping,mapping,name,not,found,name,if,handler,methods,size,1,throw,new,illegal,argument,exception,no,unique,match,for,mapping,mapping,name,name,handler,methods,handler,method,handler,method,handler,methods,get,0,class,controller,type,handler,method,get,bean,type,method,method,handler,method,get,method,return,new,method,argument,builder,builder,controller,type,method
MvcUriComponentsBuilder -> public static MethodArgumentBuilder fromMappingName(UriComponentsBuilder builder, String name);1486635693;An alternative to {@link #fromMappingName(String)} that accepts a_{@code UriComponentsBuilder} representing the base URL. This is useful_when using MvcUriComponentsBuilder outside the context of processing a_request or to apply a custom baseUrl not matching the current request._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param name the mapping name_@return a builder to prepare the URI String_@throws IllegalArgumentException if the mapping name is not found or_if there is no unique match_@since 4.2;public static MethodArgumentBuilder fromMappingName(UriComponentsBuilder builder, String name) {_		RequestMappingInfoHandlerMapping handlerMapping = getRequestMappingInfoHandlerMapping()__		List<HandlerMethod> handlerMethods = handlerMapping.getHandlerMethodsForMappingName(name)__		if (handlerMethods == null) {_			throw new IllegalArgumentException("Mapping mappingName not found: " + name)__		}_		if (handlerMethods.size() != 1) {_			throw new IllegalArgumentException("No unique match for mapping mappingName " +_					name + ": " + handlerMethods)__		}_		HandlerMethod handlerMethod = handlerMethods.get(0)__		Class<?> controllerType = handlerMethod.getBeanType()__		Method method = handlerMethod.getMethod()__		return new MethodArgumentBuilder(builder, controllerType, method)__	};an,alternative,to,link,from,mapping,name,string,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,name,the,mapping,name,return,a,builder,to,prepare,the,uri,string,throws,illegal,argument,exception,if,the,mapping,name,is,not,found,or,if,there,is,no,unique,match,since,4,2;public,static,method,argument,builder,from,mapping,name,uri,components,builder,builder,string,name,request,mapping,info,handler,mapping,handler,mapping,get,request,mapping,info,handler,mapping,list,handler,method,handler,methods,handler,mapping,get,handler,methods,for,mapping,name,name,if,handler,methods,null,throw,new,illegal,argument,exception,mapping,mapping,name,not,found,name,if,handler,methods,size,1,throw,new,illegal,argument,exception,no,unique,match,for,mapping,mapping,name,name,handler,methods,handler,method,handler,method,handler,methods,get,0,class,controller,type,handler,method,get,bean,type,method,method,handler,method,get,method,return,new,method,argument,builder,builder,controller,type,method
MvcUriComponentsBuilder -> public static MethodArgumentBuilder fromMappingName(UriComponentsBuilder builder, String name);1495868221;An alternative to {@link #fromMappingName(String)} that accepts a_{@code UriComponentsBuilder} representing the base URL. This is useful_when using MvcUriComponentsBuilder outside the context of processing a_request or to apply a custom baseUrl not matching the current request._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param name the mapping name_@return a builder to prepare the URI String_@throws IllegalArgumentException if the mapping name is not found or_if there is no unique match_@since 4.2;public static MethodArgumentBuilder fromMappingName(UriComponentsBuilder builder, String name) {_		RequestMappingInfoHandlerMapping handlerMapping = getRequestMappingInfoHandlerMapping()__		List<HandlerMethod> handlerMethods = handlerMapping.getHandlerMethodsForMappingName(name)__		if (handlerMethods == null) {_			throw new IllegalArgumentException("Mapping mappingName not found: " + name)__		}_		if (handlerMethods.size() != 1) {_			throw new IllegalArgumentException("No unique match for mapping mappingName " +_					name + ": " + handlerMethods)__		}_		HandlerMethod handlerMethod = handlerMethods.get(0)__		Class<?> controllerType = handlerMethod.getBeanType()__		Method method = handlerMethod.getMethod()__		return new MethodArgumentBuilder(builder, controllerType, method)__	};an,alternative,to,link,from,mapping,name,string,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,name,the,mapping,name,return,a,builder,to,prepare,the,uri,string,throws,illegal,argument,exception,if,the,mapping,name,is,not,found,or,if,there,is,no,unique,match,since,4,2;public,static,method,argument,builder,from,mapping,name,uri,components,builder,builder,string,name,request,mapping,info,handler,mapping,handler,mapping,get,request,mapping,info,handler,mapping,list,handler,method,handler,methods,handler,mapping,get,handler,methods,for,mapping,name,name,if,handler,methods,null,throw,new,illegal,argument,exception,mapping,mapping,name,not,found,name,if,handler,methods,size,1,throw,new,illegal,argument,exception,no,unique,match,for,mapping,mapping,name,name,handler,methods,handler,method,handler,method,handler,methods,get,0,class,controller,type,handler,method,get,bean,type,method,method,handler,method,get,method,return,new,method,argument,builder,builder,controller,type,method
MvcUriComponentsBuilder -> public static MethodArgumentBuilder fromMappingName(UriComponentsBuilder builder, String name);1496242568;An alternative to {@link #fromMappingName(String)} that accepts a_{@code UriComponentsBuilder} representing the base URL. This is useful_when using MvcUriComponentsBuilder outside the context of processing a_request or to apply a custom baseUrl not matching the current request._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param name the mapping name_@return a builder to prepare the URI String_@throws IllegalArgumentException if the mapping name is not found or_if there is no unique match_@since 4.2;public static MethodArgumentBuilder fromMappingName(UriComponentsBuilder builder, String name) {_		RequestMappingInfoHandlerMapping handlerMapping = getRequestMappingInfoHandlerMapping()__		List<HandlerMethod> handlerMethods = handlerMapping.getHandlerMethodsForMappingName(name)__		if (handlerMethods == null) {_			throw new IllegalArgumentException("Mapping mappingName not found: " + name)__		}_		if (handlerMethods.size() != 1) {_			throw new IllegalArgumentException("No unique match for mapping mappingName " +_					name + ": " + handlerMethods)__		}_		HandlerMethod handlerMethod = handlerMethods.get(0)__		Class<?> controllerType = handlerMethod.getBeanType()__		Method method = handlerMethod.getMethod()__		return new MethodArgumentBuilder(builder, controllerType, method)__	};an,alternative,to,link,from,mapping,name,string,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,name,the,mapping,name,return,a,builder,to,prepare,the,uri,string,throws,illegal,argument,exception,if,the,mapping,name,is,not,found,or,if,there,is,no,unique,match,since,4,2;public,static,method,argument,builder,from,mapping,name,uri,components,builder,builder,string,name,request,mapping,info,handler,mapping,handler,mapping,get,request,mapping,info,handler,mapping,list,handler,method,handler,methods,handler,mapping,get,handler,methods,for,mapping,name,name,if,handler,methods,null,throw,new,illegal,argument,exception,mapping,mapping,name,not,found,name,if,handler,methods,size,1,throw,new,illegal,argument,exception,no,unique,match,for,mapping,mapping,name,name,handler,methods,handler,method,handler,method,handler,methods,get,0,class,controller,type,handler,method,get,bean,type,method,method,handler,method,get,method,return,new,method,argument,builder,builder,controller,type,method
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodName(Class<?> controllerType, String methodName, Object... args);1426553101;Create a {@link UriComponentsBuilder} from the mapping of a controller_method and an array of method argument values. This method delegates_to {@link #fromMethod(java.lang.reflect.Method, Object...)}._@param controllerType the controller_@param methodName the method name_@param args the argument values_@return a UriComponentsBuilder instance, never {@code null}_@throws IllegalArgumentException if there is no matching or_if there is more than one matching method;public static UriComponentsBuilder fromMethodName(Class<?> controllerType, String methodName, Object... args) {_		return fromMethodName(null, controllerType, methodName, args)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,method,and,an,array,of,method,argument,values,this,method,delegates,to,link,from,method,java,lang,reflect,method,object,param,controller,type,the,controller,param,method,name,the,method,name,param,args,the,argument,values,return,a,uri,components,builder,instance,never,code,null,throws,illegal,argument,exception,if,there,is,no,matching,or,if,there,is,more,than,one,matching,method;public,static,uri,components,builder,from,method,name,class,controller,type,string,method,name,object,args,return,from,method,name,null,controller,type,method,name,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodName(Class<?> controllerType, String methodName, Object... args);1429801417;Create a {@link UriComponentsBuilder} from the mapping of a controller_method and an array of method argument values. This method delegates_to {@link #fromMethod(java.lang.reflect.Method, Object...)}._@param controllerType the controller_@param methodName the method name_@param args the argument values_@return a UriComponentsBuilder instance, never {@code null}_@throws IllegalArgumentException if there is no matching or_if there is more than one matching method;public static UriComponentsBuilder fromMethodName(Class<?> controllerType, String methodName, Object... args) {_		return fromMethodName(null, controllerType, methodName, args)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,method,and,an,array,of,method,argument,values,this,method,delegates,to,link,from,method,java,lang,reflect,method,object,param,controller,type,the,controller,param,method,name,the,method,name,param,args,the,argument,values,return,a,uri,components,builder,instance,never,code,null,throws,illegal,argument,exception,if,there,is,no,matching,or,if,there,is,more,than,one,matching,method;public,static,uri,components,builder,from,method,name,class,controller,type,string,method,name,object,args,return,from,method,name,null,controller,type,method,name,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodName(Class<?> controllerType, String methodName, Object... args);1429801944;Create a {@link UriComponentsBuilder} from the mapping of a controller_method and an array of method argument values. This method delegates_to {@link #fromMethod(java.lang.reflect.Method, Object...)}._@param controllerType the controller_@param methodName the method name_@param args the argument values_@return a UriComponentsBuilder instance, never {@code null}_@throws IllegalArgumentException if there is no matching or_if there is more than one matching method;public static UriComponentsBuilder fromMethodName(Class<?> controllerType, String methodName, Object... args) {_		return fromMethodName(null, controllerType, methodName, args)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,method,and,an,array,of,method,argument,values,this,method,delegates,to,link,from,method,java,lang,reflect,method,object,param,controller,type,the,controller,param,method,name,the,method,name,param,args,the,argument,values,return,a,uri,components,builder,instance,never,code,null,throws,illegal,argument,exception,if,there,is,no,matching,or,if,there,is,more,than,one,matching,method;public,static,uri,components,builder,from,method,name,class,controller,type,string,method,name,object,args,return,from,method,name,null,controller,type,method,name,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodName(Class<?> controllerType, String methodName, Object... args);1429802180;Create a {@link UriComponentsBuilder} from the mapping of a controller_method and an array of method argument values. This method delegates_to {@link #fromMethod(java.lang.reflect.Method, Object...)}._@param controllerType the controller_@param methodName the method name_@param args the argument values_@return a UriComponentsBuilder instance, never {@code null}_@throws IllegalArgumentException if there is no matching or_if there is more than one matching method;public static UriComponentsBuilder fromMethodName(Class<?> controllerType, String methodName, Object... args) {_		return fromMethodName(null, controllerType, methodName, args)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,method,and,an,array,of,method,argument,values,this,method,delegates,to,link,from,method,java,lang,reflect,method,object,param,controller,type,the,controller,param,method,name,the,method,name,param,args,the,argument,values,return,a,uri,components,builder,instance,never,code,null,throws,illegal,argument,exception,if,there,is,no,matching,or,if,there,is,more,than,one,matching,method;public,static,uri,components,builder,from,method,name,class,controller,type,string,method,name,object,args,return,from,method,name,null,controller,type,method,name,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodName(Class<?> controllerType, String methodName, Object... args);1429886024;Create a {@link UriComponentsBuilder} from the mapping of a controller_method and an array of method argument values. This method delegates_to {@link #fromMethod(java.lang.reflect.Method, Object...)}._@param controllerType the controller_@param methodName the method name_@param args the argument values_@return a UriComponentsBuilder instance, never {@code null}_@throws IllegalArgumentException if there is no matching or_if there is more than one matching method;public static UriComponentsBuilder fromMethodName(Class<?> controllerType, String methodName, Object... args) {_		return fromMethodName(null, controllerType, methodName, args)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,method,and,an,array,of,method,argument,values,this,method,delegates,to,link,from,method,java,lang,reflect,method,object,param,controller,type,the,controller,param,method,name,the,method,name,param,args,the,argument,values,return,a,uri,components,builder,instance,never,code,null,throws,illegal,argument,exception,if,there,is,no,matching,or,if,there,is,more,than,one,matching,method;public,static,uri,components,builder,from,method,name,class,controller,type,string,method,name,object,args,return,from,method,name,null,controller,type,method,name,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodName(Class<?> controllerType, String methodName, Object... args);1429888980;Create a {@link UriComponentsBuilder} from the mapping of a controller_method and an array of method argument values. This method delegates_to {@link #fromMethod(java.lang.reflect.Method, Object...)}._@param controllerType the controller_@param methodName the method name_@param args the argument values_@return a UriComponentsBuilder instance, never {@code null}_@throws IllegalArgumentException if there is no matching or_if there is more than one matching method;public static UriComponentsBuilder fromMethodName(Class<?> controllerType, String methodName, Object... args) {_		return fromMethodName(null, controllerType, methodName, args)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,method,and,an,array,of,method,argument,values,this,method,delegates,to,link,from,method,java,lang,reflect,method,object,param,controller,type,the,controller,param,method,name,the,method,name,param,args,the,argument,values,return,a,uri,components,builder,instance,never,code,null,throws,illegal,argument,exception,if,there,is,no,matching,or,if,there,is,more,than,one,matching,method;public,static,uri,components,builder,from,method,name,class,controller,type,string,method,name,object,args,return,from,method,name,null,controller,type,method,name,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodName(Class<?> controllerType, String methodName, Object... args);1430739806;Create a {@link UriComponentsBuilder} from the mapping of a controller_method and an array of method argument values. This method delegates_to {@link #fromMethod(java.lang.reflect.Method, Object...)}._@param controllerType the controller_@param methodName the method name_@param args the argument values_@return a UriComponentsBuilder instance, never {@code null}_@throws IllegalArgumentException if there is no matching or_if there is more than one matching method;public static UriComponentsBuilder fromMethodName(Class<?> controllerType, String methodName, Object... args) {_		return fromMethodName(null, controllerType, methodName, args)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,method,and,an,array,of,method,argument,values,this,method,delegates,to,link,from,method,java,lang,reflect,method,object,param,controller,type,the,controller,param,method,name,the,method,name,param,args,the,argument,values,return,a,uri,components,builder,instance,never,code,null,throws,illegal,argument,exception,if,there,is,no,matching,or,if,there,is,more,than,one,matching,method;public,static,uri,components,builder,from,method,name,class,controller,type,string,method,name,object,args,return,from,method,name,null,controller,type,method,name,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodName(Class<?> controllerType, String methodName, Object... args);1430747547;Create a {@link UriComponentsBuilder} from the mapping of a controller_method and an array of method argument values. This method delegates_to {@link #fromMethod(java.lang.reflect.Method, Object...)}._@param controllerType the controller_@param methodName the method name_@param args the argument values_@return a UriComponentsBuilder instance, never {@code null}_@throws IllegalArgumentException if there is no matching or_if there is more than one matching method;public static UriComponentsBuilder fromMethodName(Class<?> controllerType, String methodName, Object... args) {_		return fromMethodName(null, controllerType, methodName, args)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,method,and,an,array,of,method,argument,values,this,method,delegates,to,link,from,method,java,lang,reflect,method,object,param,controller,type,the,controller,param,method,name,the,method,name,param,args,the,argument,values,return,a,uri,components,builder,instance,never,code,null,throws,illegal,argument,exception,if,there,is,no,matching,or,if,there,is,more,than,one,matching,method;public,static,uri,components,builder,from,method,name,class,controller,type,string,method,name,object,args,return,from,method,name,null,controller,type,method,name,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodName(Class<?> controllerType, String methodName, Object... args);1430749606;Create a {@link UriComponentsBuilder} from the mapping of a controller_method and an array of method argument values. This method delegates_to {@link #fromMethod(java.lang.reflect.Method, Object...)}._@param controllerType the controller_@param methodName the method name_@param args the argument values_@return a UriComponentsBuilder instance, never {@code null}_@throws IllegalArgumentException if there is no matching or_if there is more than one matching method;public static UriComponentsBuilder fromMethodName(Class<?> controllerType, String methodName, Object... args) {_		return fromMethodName(null, controllerType, methodName, args)__	};create,a,link,uri,components,builder,from,the,mapping,of,a,controller,method,and,an,array,of,method,argument,values,this,method,delegates,to,link,from,method,java,lang,reflect,method,object,param,controller,type,the,controller,param,method,name,the,method,name,param,args,the,argument,values,return,a,uri,components,builder,instance,never,code,null,throws,illegal,argument,exception,if,there,is,no,matching,or,if,there,is,more,than,one,matching,method;public,static,uri,components,builder,from,method,name,class,controller,type,string,method,name,object,args,return,from,method,name,null,controller,type,method,name,args
MvcUriComponentsBuilder -> protected MvcUriComponentsBuilder(MvcUriComponentsBuilder other);1417799775;Create a deep copy of the given MvcUriComponentsBuilder._@param other the other builder to copy from;protected MvcUriComponentsBuilder(MvcUriComponentsBuilder other) {_		super(other)__	};create,a,deep,copy,of,the,given,mvc,uri,components,builder,param,other,the,other,builder,to,copy,from;protected,mvc,uri,components,builder,mvc,uri,components,builder,other,super,other
MvcUriComponentsBuilder -> protected MvcUriComponentsBuilder(MvcUriComponentsBuilder other);1424972092;Create a deep copy of the given MvcUriComponentsBuilder._@param other the other builder to copy from;protected MvcUriComponentsBuilder(MvcUriComponentsBuilder other) {_		super(other)__	};create,a,deep,copy,of,the,given,mvc,uri,components,builder,param,other,the,other,builder,to,copy,from;protected,mvc,uri,components,builder,mvc,uri,components,builder,other,super,other
MvcUriComponentsBuilder -> protected MvcUriComponentsBuilder(MvcUriComponentsBuilder other);1426553101;Create a deep copy of the given MvcUriComponentsBuilder._@param other the other builder to copy from;protected MvcUriComponentsBuilder(MvcUriComponentsBuilder other) {_		super(other)__	};create,a,deep,copy,of,the,given,mvc,uri,components,builder,param,other,the,other,builder,to,copy,from;protected,mvc,uri,components,builder,mvc,uri,components,builder,other,super,other
MvcUriComponentsBuilder -> protected MvcUriComponentsBuilder(MvcUriComponentsBuilder other);1429801417;Create a deep copy of the given MvcUriComponentsBuilder._@param other the other builder to copy from;protected MvcUriComponentsBuilder(MvcUriComponentsBuilder other) {_		super(other)__		this.baseUrl = other.baseUrl__	};create,a,deep,copy,of,the,given,mvc,uri,components,builder,param,other,the,other,builder,to,copy,from;protected,mvc,uri,components,builder,mvc,uri,components,builder,other,super,other,this,base,url,other,base,url
MvcUriComponentsBuilder -> protected MvcUriComponentsBuilder(MvcUriComponentsBuilder other);1429801944;Create a deep copy of the given MvcUriComponentsBuilder._@param other the other builder to copy from;protected MvcUriComponentsBuilder(MvcUriComponentsBuilder other) {_		super(other)__		this.baseUrl = other.baseUrl__	};create,a,deep,copy,of,the,given,mvc,uri,components,builder,param,other,the,other,builder,to,copy,from;protected,mvc,uri,components,builder,mvc,uri,components,builder,other,super,other,this,base,url,other,base,url
MvcUriComponentsBuilder -> MethodArgumentBuilder -> @Deprecated 		public MethodArgumentBuilder(Method method);1431975386;@deprecated as of 4.2 deprecated in favor of alternative constructors_that accept the controllerType.;@Deprecated_		public MethodArgumentBuilder(Method method) {_			this(method.getDeclaringClass(), method)__		};deprecated,as,of,4,2,deprecated,in,favor,of,alternative,constructors,that,accept,the,controller,type;deprecated,public,method,argument,builder,method,method,this,method,get,declaring,class,method
MvcUriComponentsBuilder -> MethodArgumentBuilder -> @Deprecated 		public MethodArgumentBuilder(Method method);1432125256;@deprecated as of 4.2 deprecated in favor of alternative constructors_that accept the controllerType.;@Deprecated_		public MethodArgumentBuilder(Method method) {_			this(method.getDeclaringClass(), method)__		};deprecated,as,of,4,2,deprecated,in,favor,of,alternative,constructors,that,accept,the,controller,type;deprecated,public,method,argument,builder,method,method,this,method,get,declaring,class,method
MvcUriComponentsBuilder -> MethodArgumentBuilder -> @Deprecated 		public MethodArgumentBuilder(Method method);1432856630;@deprecated as of 4.2 deprecated in favor of alternative constructors_that accept the controllerType.;@Deprecated_		public MethodArgumentBuilder(Method method) {_			this(method.getDeclaringClass(), method)__		};deprecated,as,of,4,2,deprecated,in,favor,of,alternative,constructors,that,accept,the,controller,type;deprecated,public,method,argument,builder,method,method,this,method,get,declaring,class,method
MvcUriComponentsBuilder -> MethodArgumentBuilder -> @Deprecated 		public MethodArgumentBuilder(Method method);1432857824;@deprecated as of 4.2 deprecated in favor of alternative constructors_that accept the controllerType.;@Deprecated_		public MethodArgumentBuilder(Method method) {_			this(method.getDeclaringClass(), method)__		};deprecated,as,of,4,2,deprecated,in,favor,of,alternative,constructors,that,accept,the,controller,type;deprecated,public,method,argument,builder,method,method,this,method,get,declaring,class,method
MvcUriComponentsBuilder -> MethodArgumentBuilder -> @Deprecated 		public MethodArgumentBuilder(Method method);1434234880;@deprecated as of 4.2 deprecated in favor of alternative constructors_that accept the controllerType.;@Deprecated_		public MethodArgumentBuilder(Method method) {_			this(method.getDeclaringClass(), method)__		};deprecated,as,of,4,2,deprecated,in,favor,of,alternative,constructors,that,accept,the,controller,type;deprecated,public,method,argument,builder,method,method,this,method,get,declaring,class,method
MvcUriComponentsBuilder -> MethodArgumentBuilder -> @Deprecated 		public MethodArgumentBuilder(Method method);1434484897;@deprecated as of 4.2 deprecated in favor of alternative constructors_that accept the controllerType.;@Deprecated_		public MethodArgumentBuilder(Method method) {_			this(method.getDeclaringClass(), method)__		};deprecated,as,of,4,2,deprecated,in,favor,of,alternative,constructors,that,accept,the,controller,type;deprecated,public,method,argument,builder,method,method,this,method,get,declaring,class,method
MvcUriComponentsBuilder -> MethodArgumentBuilder -> @Deprecated 		public MethodArgumentBuilder(Method method);1434726592;@deprecated as of 4.2 deprecated in favor of alternative constructors_that accept the controllerType.;@Deprecated_		public MethodArgumentBuilder(Method method) {_			this(method.getDeclaringClass(), method)__		};deprecated,as,of,4,2,deprecated,in,favor,of,alternative,constructors,that,accept,the,controller,type;deprecated,public,method,argument,builder,method,method,this,method,get,declaring,class,method
MvcUriComponentsBuilder -> MethodArgumentBuilder -> @Deprecated 		public MethodArgumentBuilder(Method method);1435615322;@deprecated as of 4.2 deprecated in favor of alternative constructors_that accept the controllerType.;@Deprecated_		public MethodArgumentBuilder(Method method) {_			this(method.getDeclaringClass(), method)__		};deprecated,as,of,4,2,deprecated,in,favor,of,alternative,constructors,that,accept,the,controller,type;deprecated,public,method,argument,builder,method,method,this,method,get,declaring,class,method
MvcUriComponentsBuilder -> MethodArgumentBuilder -> @Deprecated 		public MethodArgumentBuilder(Method method);1439294371;@see #MethodArgumentBuilder(Class, Method)_@deprecated as of 4.2, this is deprecated in favor of alternative constructors_that accept a controllerType argument;@Deprecated_		public MethodArgumentBuilder(Method method) {_			this(method.getDeclaringClass(), method)__		};see,method,argument,builder,class,method,deprecated,as,of,4,2,this,is,deprecated,in,favor,of,alternative,constructors,that,accept,a,controller,type,argument;deprecated,public,method,argument,builder,method,method,this,method,get,declaring,class,method
MvcUriComponentsBuilder -> MethodArgumentBuilder -> @Deprecated 		public MethodArgumentBuilder(Method method);1447077465;@see #MethodArgumentBuilder(Class, Method)_@deprecated as of 4.2, this is deprecated in favor of alternative constructors_that accept a controllerType argument;@Deprecated_		public MethodArgumentBuilder(Method method) {_			this(method.getDeclaringClass(), method)__		};see,method,argument,builder,class,method,deprecated,as,of,4,2,this,is,deprecated,in,favor,of,alternative,constructors,that,accept,a,controller,type,argument;deprecated,public,method,argument,builder,method,method,this,method,get,declaring,class,method
MvcUriComponentsBuilder -> MethodArgumentBuilder -> @Deprecated 		public MethodArgumentBuilder(Method method);1458830024;@see #MethodArgumentBuilder(Class, Method)_@deprecated as of 4.2, this is deprecated in favor of alternative constructors_that accept a controllerType argument;@Deprecated_		public MethodArgumentBuilder(Method method) {_			this(method.getDeclaringClass(), method)__		};see,method,argument,builder,class,method,deprecated,as,of,4,2,this,is,deprecated,in,favor,of,alternative,constructors,that,accept,a,controller,type,argument;deprecated,public,method,argument,builder,method,method,this,method,get,declaring,class,method
MvcUriComponentsBuilder -> MethodArgumentBuilder -> @Deprecated 		public MethodArgumentBuilder(Method method);1461047077;@see #MethodArgumentBuilder(Class, Method)_@deprecated as of 4.2, this is deprecated in favor of alternative constructors_that accept a controllerType argument;@Deprecated_		public MethodArgumentBuilder(Method method) {_			this(method.getDeclaringClass(), method)__		};see,method,argument,builder,class,method,deprecated,as,of,4,2,this,is,deprecated,in,favor,of,alternative,constructors,that,accept,a,controller,type,argument;deprecated,public,method,argument,builder,method,method,this,method,get,declaring,class,method
MvcUriComponentsBuilder -> MethodArgumentBuilder -> @Deprecated 		public MethodArgumentBuilder(Method method);1467677340;@deprecated as of 4.2, this is deprecated in favor of alternative constructors_that accept a controllerType argument;@Deprecated_		public MethodArgumentBuilder(Method method) {_			this(method.getDeclaringClass(), method)__		};deprecated,as,of,4,2,this,is,deprecated,in,favor,of,alternative,constructors,that,accept,a,controller,type,argument;deprecated,public,method,argument,builder,method,method,this,method,get,declaring,class,method
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodCall(Object invocationInfo);1391723719;Create a {@link UriComponentsBuilder} by invoking a "mock" controller method._The controller method and the supplied argument values are then used to_delegate to {@link #fromMethod(java.lang.reflect.Method, Object...)}._<p>_For example given this controller:_<pre class="code">_&#064_RequestMapping("/people/{id}/addresses")_class AddressController {__&#064_RequestMapping("/{country}")_public HttpEntity<Void> getAddressesForCountry(&#064_PathVariable String country) { ... }__&#064_RequestMapping(value="/", method=RequestMethod.POST)_public void addAddress(Address address) { ... }__</pre>_A UriComponentsBuilder can be created:_<pre class="code">_// Inline style with static import of "MvcUriComponentsBuilder.on"__MvcUriComponentsBuilder.fromMethodCall(_on(CustomerController.class).showAddresses("US")).buildAndExpand(1)___// Longer form useful for repeated invocation (and void controller methods)__CustomerController controller = MvcUriComponentsBuilder.on(CustomController.class)__controller.addAddress(null)__builder = MvcUriComponentsBuilder.fromMethodCall(controller)__controller.getAddressesForCountry("US")_builder = MvcUriComponentsBuilder.fromMethodCall(controller)__</pre>__@param invocationInfo either the value returned from a "mock" controller_invocation or the "mock" controller itself after an invocation_@return a UriComponents instance;public static UriComponentsBuilder fromMethodCall(Object invocationInfo) {_		Assert.isInstanceOf(MethodInvocationInfo.class, invocationInfo)__		MethodInvocationInfo info = (MethodInvocationInfo) invocationInfo__		return fromMethod(info.getControllerMethod(), info.getArgumentValues())__	};create,a,link,uri,components,builder,by,invoking,a,mock,controller,method,the,controller,method,and,the,supplied,argument,values,are,then,used,to,delegate,to,link,from,method,java,lang,reflect,method,object,p,for,example,given,this,controller,pre,class,code,064,request,mapping,people,id,addresses,class,address,controller,064,request,mapping,country,public,http,entity,void,get,addresses,for,country,064,path,variable,string,country,064,request,mapping,value,method,request,method,post,public,void,add,address,address,address,pre,a,uri,components,builder,can,be,created,pre,class,code,inline,style,with,static,import,of,mvc,uri,components,builder,on,mvc,uri,components,builder,from,method,call,on,customer,controller,class,show,addresses,us,build,and,expand,1,longer,form,useful,for,repeated,invocation,and,void,controller,methods,customer,controller,controller,mvc,uri,components,builder,on,custom,controller,class,controller,add,address,null,builder,mvc,uri,components,builder,from,method,call,controller,controller,get,addresses,for,country,us,builder,mvc,uri,components,builder,from,method,call,controller,pre,param,invocation,info,either,the,value,returned,from,a,mock,controller,invocation,or,the,mock,controller,itself,after,an,invocation,return,a,uri,components,instance;public,static,uri,components,builder,from,method,call,object,invocation,info,assert,is,instance,of,method,invocation,info,class,invocation,info,method,invocation,info,info,method,invocation,info,invocation,info,return,from,method,info,get,controller,method,info,get,argument,values
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodCall(Object invocationInfo);1391723719;Create a {@link UriComponentsBuilder} by invoking a "mock" controller method._The controller method and the supplied argument values are then used to_delegate to {@link #fromMethod(java.lang.reflect.Method, Object...)}._<p>_For example given this controller:_<pre class="code">_&#064_RequestMapping("/people/{id}/addresses")_class AddressController {__&#064_RequestMapping("/{country}")_public HttpEntity<Void> getAddressesForCountry(&#064_PathVariable String country) { ... }__&#064_RequestMapping(value="/", method=RequestMethod.POST)_public void addAddress(Address address) { ... }__</pre>_A UriComponentsBuilder can be created:_<pre class="code">_// Inline style with static import of "MvcUriComponentsBuilder.on"__MvcUriComponentsBuilder.fromMethodCall(_on(CustomerController.class).showAddresses("US")).buildAndExpand(1)___// Longer form useful for repeated invocation (and void controller methods)__CustomerController controller = MvcUriComponentsBuilder.on(CustomController.class)__controller.addAddress(null)__builder = MvcUriComponentsBuilder.fromMethodCall(controller)__controller.getAddressesForCountry("US")_builder = MvcUriComponentsBuilder.fromMethodCall(controller)__</pre>__@param invocationInfo either the value returned from a "mock" controller_invocation or the "mock" controller itself after an invocation_@return a UriComponents instance;public static UriComponentsBuilder fromMethodCall(Object invocationInfo) {_		Assert.isInstanceOf(MethodInvocationInfo.class, invocationInfo)__		MethodInvocationInfo info = (MethodInvocationInfo) invocationInfo__		return fromMethod(info.getControllerMethod(), info.getArgumentValues())__	};create,a,link,uri,components,builder,by,invoking,a,mock,controller,method,the,controller,method,and,the,supplied,argument,values,are,then,used,to,delegate,to,link,from,method,java,lang,reflect,method,object,p,for,example,given,this,controller,pre,class,code,064,request,mapping,people,id,addresses,class,address,controller,064,request,mapping,country,public,http,entity,void,get,addresses,for,country,064,path,variable,string,country,064,request,mapping,value,method,request,method,post,public,void,add,address,address,address,pre,a,uri,components,builder,can,be,created,pre,class,code,inline,style,with,static,import,of,mvc,uri,components,builder,on,mvc,uri,components,builder,from,method,call,on,customer,controller,class,show,addresses,us,build,and,expand,1,longer,form,useful,for,repeated,invocation,and,void,controller,methods,customer,controller,controller,mvc,uri,components,builder,on,custom,controller,class,controller,add,address,null,builder,mvc,uri,components,builder,from,method,call,controller,controller,get,addresses,for,country,us,builder,mvc,uri,components,builder,from,method,call,controller,pre,param,invocation,info,either,the,value,returned,from,a,mock,controller,invocation,or,the,mock,controller,itself,after,an,invocation,return,a,uri,components,instance;public,static,uri,components,builder,from,method,call,object,invocation,info,assert,is,instance,of,method,invocation,info,class,invocation,info,method,invocation,info,info,method,invocation,info,invocation,info,return,from,method,info,get,controller,method,info,get,argument,values
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodCall(Object invocationInfo);1399404473;Create a {@link UriComponentsBuilder} by invoking a "mock" controller method._The controller method and the supplied argument values are then used to_delegate to {@link #fromMethod(java.lang.reflect.Method, Object...)}._<p>_For example given this controller:_<pre class="code">_&#064_RequestMapping("/people/{id}/addresses")_class AddressController {__&#064_RequestMapping("/{country}")_public HttpEntity<Void> getAddressesForCountry(&#064_PathVariable String country) { ... }__&#064_RequestMapping(value="/", method=RequestMethod.POST)_public void addAddress(Address address) { ... }__</pre>_A UriComponentsBuilder can be created:_<pre class="code">_// Inline style with static import of "MvcUriComponentsBuilder.on"__MvcUriComponentsBuilder.fromMethodCall(_on(CustomerController.class).showAddresses("US")).buildAndExpand(1)___// Longer form useful for repeated invocation (and void controller methods)__CustomerController controller = MvcUriComponentsBuilder.on(CustomController.class)__controller.addAddress(null)__builder = MvcUriComponentsBuilder.fromMethodCall(controller)__controller.getAddressesForCountry("US")_builder = MvcUriComponentsBuilder.fromMethodCall(controller)__</pre>__@param invocationInfo either the value returned from a "mock" controller_invocation or the "mock" controller itself after an invocation_@return a UriComponents instance;public static UriComponentsBuilder fromMethodCall(Object invocationInfo) {_		Assert.isInstanceOf(MethodInvocationInfo.class, invocationInfo)__		MethodInvocationInfo info = (MethodInvocationInfo) invocationInfo__		return fromMethod(info.getControllerMethod(), info.getArgumentValues())__	};create,a,link,uri,components,builder,by,invoking,a,mock,controller,method,the,controller,method,and,the,supplied,argument,values,are,then,used,to,delegate,to,link,from,method,java,lang,reflect,method,object,p,for,example,given,this,controller,pre,class,code,064,request,mapping,people,id,addresses,class,address,controller,064,request,mapping,country,public,http,entity,void,get,addresses,for,country,064,path,variable,string,country,064,request,mapping,value,method,request,method,post,public,void,add,address,address,address,pre,a,uri,components,builder,can,be,created,pre,class,code,inline,style,with,static,import,of,mvc,uri,components,builder,on,mvc,uri,components,builder,from,method,call,on,customer,controller,class,show,addresses,us,build,and,expand,1,longer,form,useful,for,repeated,invocation,and,void,controller,methods,customer,controller,controller,mvc,uri,components,builder,on,custom,controller,class,controller,add,address,null,builder,mvc,uri,components,builder,from,method,call,controller,controller,get,addresses,for,country,us,builder,mvc,uri,components,builder,from,method,call,controller,pre,param,invocation,info,either,the,value,returned,from,a,mock,controller,invocation,or,the,mock,controller,itself,after,an,invocation,return,a,uri,components,instance;public,static,uri,components,builder,from,method,call,object,invocation,info,assert,is,instance,of,method,invocation,info,class,invocation,info,method,invocation,info,info,method,invocation,info,invocation,info,return,from,method,info,get,controller,method,info,get,argument,values
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodCall(Object invocationInfo);1400538909;Create a {@link UriComponentsBuilder} by invoking a "mock" controller method._The controller method and the supplied argument values are then used to_delegate to {@link #fromMethod(java.lang.reflect.Method, Object...)}._<p>For example, given this controller:_<pre class="code">_&#064_RequestMapping("/people/{id}/addresses")_class AddressController {__&#064_RequestMapping("/{country}")_public HttpEntity<Void> getAddressesForCountry(&#064_PathVariable String country) { ... }__&#064_RequestMapping(value="/", method=RequestMethod.POST)_public void addAddress(Address address) { ... }__</pre>_A UriComponentsBuilder can be created:_<pre class="code">_// Inline style with static import of "MvcUriComponentsBuilder.on"__MvcUriComponentsBuilder.fromMethodCall(_on(CustomerController.class).showAddresses("US")).buildAndExpand(1)___// Longer form useful for repeated invocation (and void controller methods)__CustomerController controller = MvcUriComponentsBuilder.on(CustomController.class)__controller.addAddress(null)__builder = MvcUriComponentsBuilder.fromMethodCall(controller)__controller.getAddressesForCountry("US")_builder = MvcUriComponentsBuilder.fromMethodCall(controller)__</pre>_@param invocationInfo either the value returned from a "mock" controller_invocation or the "mock" controller itself after an invocation_@return a UriComponents instance;public static UriComponentsBuilder fromMethodCall(Object invocationInfo) {_		Assert.isInstanceOf(MethodInvocationInfo.class, invocationInfo)__		MethodInvocationInfo info = (MethodInvocationInfo) invocationInfo__		return fromMethod(info.getControllerMethod(), info.getArgumentValues())__	};create,a,link,uri,components,builder,by,invoking,a,mock,controller,method,the,controller,method,and,the,supplied,argument,values,are,then,used,to,delegate,to,link,from,method,java,lang,reflect,method,object,p,for,example,given,this,controller,pre,class,code,064,request,mapping,people,id,addresses,class,address,controller,064,request,mapping,country,public,http,entity,void,get,addresses,for,country,064,path,variable,string,country,064,request,mapping,value,method,request,method,post,public,void,add,address,address,address,pre,a,uri,components,builder,can,be,created,pre,class,code,inline,style,with,static,import,of,mvc,uri,components,builder,on,mvc,uri,components,builder,from,method,call,on,customer,controller,class,show,addresses,us,build,and,expand,1,longer,form,useful,for,repeated,invocation,and,void,controller,methods,customer,controller,controller,mvc,uri,components,builder,on,custom,controller,class,controller,add,address,null,builder,mvc,uri,components,builder,from,method,call,controller,controller,get,addresses,for,country,us,builder,mvc,uri,components,builder,from,method,call,controller,pre,param,invocation,info,either,the,value,returned,from,a,mock,controller,invocation,or,the,mock,controller,itself,after,an,invocation,return,a,uri,components,instance;public,static,uri,components,builder,from,method,call,object,invocation,info,assert,is,instance,of,method,invocation,info,class,invocation,info,method,invocation,info,info,method,invocation,info,invocation,info,return,from,method,info,get,controller,method,info,get,argument,values
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodCall(Object invocationInfo);1400542981;Create a {@link UriComponentsBuilder} by invoking a "mock" controller method._The controller method and the supplied argument values are then used to_delegate to {@link #fromMethod(java.lang.reflect.Method, Object...)}._<p>For example, given this controller:_<pre class="code">_&#064_RequestMapping("/people/{id}/addresses")_class AddressController {__&#064_RequestMapping("/{country}")_public HttpEntity<Void> getAddressesForCountry(&#064_PathVariable String country) { ... }__&#064_RequestMapping(value="/", method=RequestMethod.POST)_public void addAddress(Address address) { ... }__</pre>_A UriComponentsBuilder can be created:_<pre class="code">_// Inline style with static import of "MvcUriComponentsBuilder.on"__MvcUriComponentsBuilder.fromMethodCall(_on(CustomerController.class).showAddresses("US")).buildAndExpand(1)___// Longer form useful for repeated invocation (and void controller methods)__CustomerController controller = MvcUriComponentsBuilder.on(CustomController.class)__controller.addAddress(null)__builder = MvcUriComponentsBuilder.fromMethodCall(controller)__controller.getAddressesForCountry("US")_builder = MvcUriComponentsBuilder.fromMethodCall(controller)__</pre>_@param invocationInfo either the value returned from a "mock" controller_invocation or the "mock" controller itself after an invocation_@return a UriComponents instance;public static UriComponentsBuilder fromMethodCall(Object invocationInfo) {_		Assert.isInstanceOf(MethodInvocationInfo.class, invocationInfo)__		MethodInvocationInfo info = (MethodInvocationInfo) invocationInfo__		return fromMethod(info.getControllerMethod(), info.getArgumentValues())__	};create,a,link,uri,components,builder,by,invoking,a,mock,controller,method,the,controller,method,and,the,supplied,argument,values,are,then,used,to,delegate,to,link,from,method,java,lang,reflect,method,object,p,for,example,given,this,controller,pre,class,code,064,request,mapping,people,id,addresses,class,address,controller,064,request,mapping,country,public,http,entity,void,get,addresses,for,country,064,path,variable,string,country,064,request,mapping,value,method,request,method,post,public,void,add,address,address,address,pre,a,uri,components,builder,can,be,created,pre,class,code,inline,style,with,static,import,of,mvc,uri,components,builder,on,mvc,uri,components,builder,from,method,call,on,customer,controller,class,show,addresses,us,build,and,expand,1,longer,form,useful,for,repeated,invocation,and,void,controller,methods,customer,controller,controller,mvc,uri,components,builder,on,custom,controller,class,controller,add,address,null,builder,mvc,uri,components,builder,from,method,call,controller,controller,get,addresses,for,country,us,builder,mvc,uri,components,builder,from,method,call,controller,pre,param,invocation,info,either,the,value,returned,from,a,mock,controller,invocation,or,the,mock,controller,itself,after,an,invocation,return,a,uri,components,instance;public,static,uri,components,builder,from,method,call,object,invocation,info,assert,is,instance,of,method,invocation,info,class,invocation,info,method,invocation,info,info,method,invocation,info,invocation,info,return,from,method,info,get,controller,method,info,get,argument,values
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodCall(Object invocationInfo);1402438271;Create a {@link UriComponentsBuilder} by invoking a "mock" controller method._The controller method and the supplied argument values are then used to_delegate to {@link #fromMethod(java.lang.reflect.Method, Object...)}._<p>For example, given this controller:_<pre class="code">_&#064_RequestMapping("/people/{id}/addresses")_class AddressController {__&#064_RequestMapping("/{country}")_public HttpEntity<Void> getAddressesForCountry(&#064_PathVariable String country) { ... }__&#064_RequestMapping(value="/", method=RequestMethod.POST)_public void addAddress(Address address) { ... }__</pre>_A UriComponentsBuilder can be created:_<pre class="code">_// Inline style with static import of "MvcUriComponentsBuilder.on"__MvcUriComponentsBuilder.fromMethodCall(_on(CustomerController.class).showAddresses("US")).buildAndExpand(1)___// Longer form useful for repeated invocation (and void controller methods)__CustomerController controller = MvcUriComponentsBuilder.on(CustomController.class)__controller.addAddress(null)__builder = MvcUriComponentsBuilder.fromMethodCall(controller)__controller.getAddressesForCountry("US")_builder = MvcUriComponentsBuilder.fromMethodCall(controller)__</pre>_@param invocationInfo either the value returned from a "mock" controller_invocation or the "mock" controller itself after an invocation_@return a UriComponents instance;public static UriComponentsBuilder fromMethodCall(Object invocationInfo) {_		Assert.isInstanceOf(MethodInvocationInfo.class, invocationInfo)__		MethodInvocationInfo info = (MethodInvocationInfo) invocationInfo__		return fromMethod(info.getControllerMethod(), info.getArgumentValues())__	};create,a,link,uri,components,builder,by,invoking,a,mock,controller,method,the,controller,method,and,the,supplied,argument,values,are,then,used,to,delegate,to,link,from,method,java,lang,reflect,method,object,p,for,example,given,this,controller,pre,class,code,064,request,mapping,people,id,addresses,class,address,controller,064,request,mapping,country,public,http,entity,void,get,addresses,for,country,064,path,variable,string,country,064,request,mapping,value,method,request,method,post,public,void,add,address,address,address,pre,a,uri,components,builder,can,be,created,pre,class,code,inline,style,with,static,import,of,mvc,uri,components,builder,on,mvc,uri,components,builder,from,method,call,on,customer,controller,class,show,addresses,us,build,and,expand,1,longer,form,useful,for,repeated,invocation,and,void,controller,methods,customer,controller,controller,mvc,uri,components,builder,on,custom,controller,class,controller,add,address,null,builder,mvc,uri,components,builder,from,method,call,controller,controller,get,addresses,for,country,us,builder,mvc,uri,components,builder,from,method,call,controller,pre,param,invocation,info,either,the,value,returned,from,a,mock,controller,invocation,or,the,mock,controller,itself,after,an,invocation,return,a,uri,components,instance;public,static,uri,components,builder,from,method,call,object,invocation,info,assert,is,instance,of,method,invocation,info,class,invocation,info,method,invocation,info,info,method,invocation,info,invocation,info,return,from,method,info,get,controller,method,info,get,argument,values
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodCall(Object invocationInfo);1413848647;Create a {@link UriComponentsBuilder} by invoking a "mock" controller method._The controller method and the supplied argument values are then used to_delegate to {@link #fromMethod(java.lang.reflect.Method, Object...)}._<p>For example, given this controller:_<pre class="code">_&#064_RequestMapping("/people/{id}/addresses")_class AddressController {__&#064_RequestMapping("/{country}")_public HttpEntity<Void> getAddressesForCountry(&#064_PathVariable String country) { ... }__&#064_RequestMapping(value="/", method=RequestMethod.POST)_public void addAddress(Address address) { ... }__</pre>_A UriComponentsBuilder can be created:_<pre class="code">_// Inline style with static import of "MvcUriComponentsBuilder.on"__MvcUriComponentsBuilder.fromMethodCall(_on(CustomerController.class).showAddresses("US")).buildAndExpand(1)___// Longer form useful for repeated invocation (and void controller methods)__CustomerController controller = MvcUriComponentsBuilder.on(CustomController.class)__controller.addAddress(null)__builder = MvcUriComponentsBuilder.fromMethodCall(controller)__controller.getAddressesForCountry("US")_builder = MvcUriComponentsBuilder.fromMethodCall(controller)__</pre>_@param invocationInfo either the value returned from a "mock" controller_invocation or the "mock" controller itself after an invocation_@return a UriComponents instance;public static UriComponentsBuilder fromMethodCall(Object invocationInfo) {_		Assert.isInstanceOf(MethodInvocationInfo.class, invocationInfo)__		MethodInvocationInfo info = (MethodInvocationInfo) invocationInfo__		return fromMethod(info.getControllerMethod(), info.getArgumentValues())__	};create,a,link,uri,components,builder,by,invoking,a,mock,controller,method,the,controller,method,and,the,supplied,argument,values,are,then,used,to,delegate,to,link,from,method,java,lang,reflect,method,object,p,for,example,given,this,controller,pre,class,code,064,request,mapping,people,id,addresses,class,address,controller,064,request,mapping,country,public,http,entity,void,get,addresses,for,country,064,path,variable,string,country,064,request,mapping,value,method,request,method,post,public,void,add,address,address,address,pre,a,uri,components,builder,can,be,created,pre,class,code,inline,style,with,static,import,of,mvc,uri,components,builder,on,mvc,uri,components,builder,from,method,call,on,customer,controller,class,show,addresses,us,build,and,expand,1,longer,form,useful,for,repeated,invocation,and,void,controller,methods,customer,controller,controller,mvc,uri,components,builder,on,custom,controller,class,controller,add,address,null,builder,mvc,uri,components,builder,from,method,call,controller,controller,get,addresses,for,country,us,builder,mvc,uri,components,builder,from,method,call,controller,pre,param,invocation,info,either,the,value,returned,from,a,mock,controller,invocation,or,the,mock,controller,itself,after,an,invocation,return,a,uri,components,instance;public,static,uri,components,builder,from,method,call,object,invocation,info,assert,is,instance,of,method,invocation,info,class,invocation,info,method,invocation,info,info,method,invocation,info,invocation,info,return,from,method,info,get,controller,method,info,get,argument,values
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodCall(Object invocationInfo);1417799775;Create a {@link UriComponentsBuilder} by invoking a "mock" controller method._The controller method and the supplied argument values are then used to_delegate to {@link #fromMethod(java.lang.reflect.Method, Object...)}._<p>For example, given this controller:_<pre class="code">_&#064_RequestMapping("/people/{id}/addresses")_class AddressController {__&#064_RequestMapping("/{country}")_public HttpEntity<Void> getAddressesForCountry(&#064_PathVariable String country) { ... }__&#064_RequestMapping(value="/", method=RequestMethod.POST)_public void addAddress(Address address) { ... }__</pre>_A UriComponentsBuilder can be created:_<pre class="code">_// Inline style with static import of "MvcUriComponentsBuilder.on"__MvcUriComponentsBuilder.fromMethodCall(_on(CustomerController.class).showAddresses("US")).buildAndExpand(1)___// Longer form useful for repeated invocation (and void controller methods)__CustomerController controller = MvcUriComponentsBuilder.on(CustomController.class)__controller.addAddress(null)__builder = MvcUriComponentsBuilder.fromMethodCall(controller)__controller.getAddressesForCountry("US")_builder = MvcUriComponentsBuilder.fromMethodCall(controller)__</pre>_@param invocationInfo either the value returned from a "mock" controller_invocation or the "mock" controller itself after an invocation_@return a UriComponents instance;public static UriComponentsBuilder fromMethodCall(Object invocationInfo) {_		Assert.isInstanceOf(MethodInvocationInfo.class, invocationInfo)__		MethodInvocationInfo info = (MethodInvocationInfo) invocationInfo__		return fromMethod(info.getControllerMethod(), info.getArgumentValues())__	};create,a,link,uri,components,builder,by,invoking,a,mock,controller,method,the,controller,method,and,the,supplied,argument,values,are,then,used,to,delegate,to,link,from,method,java,lang,reflect,method,object,p,for,example,given,this,controller,pre,class,code,064,request,mapping,people,id,addresses,class,address,controller,064,request,mapping,country,public,http,entity,void,get,addresses,for,country,064,path,variable,string,country,064,request,mapping,value,method,request,method,post,public,void,add,address,address,address,pre,a,uri,components,builder,can,be,created,pre,class,code,inline,style,with,static,import,of,mvc,uri,components,builder,on,mvc,uri,components,builder,from,method,call,on,customer,controller,class,show,addresses,us,build,and,expand,1,longer,form,useful,for,repeated,invocation,and,void,controller,methods,customer,controller,controller,mvc,uri,components,builder,on,custom,controller,class,controller,add,address,null,builder,mvc,uri,components,builder,from,method,call,controller,controller,get,addresses,for,country,us,builder,mvc,uri,components,builder,from,method,call,controller,pre,param,invocation,info,either,the,value,returned,from,a,mock,controller,invocation,or,the,mock,controller,itself,after,an,invocation,return,a,uri,components,instance;public,static,uri,components,builder,from,method,call,object,invocation,info,assert,is,instance,of,method,invocation,info,class,invocation,info,method,invocation,info,info,method,invocation,info,invocation,info,return,from,method,info,get,controller,method,info,get,argument,values
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodCall(Object invocationInfo);1424972092;Create a {@link UriComponentsBuilder} by invoking a "mock" controller method._The controller method and the supplied argument values are then used to_delegate to {@link #fromMethod(java.lang.reflect.Method, Object...)}._<p>For example, given this controller:_<pre class="code">_&#064_RequestMapping("/people/{id}/addresses")_class AddressController {__&#064_RequestMapping("/{country}")_public HttpEntity<Void> getAddressesForCountry(&#064_PathVariable String country) { ... }__&#064_RequestMapping(value="/", method=RequestMethod.POST)_public void addAddress(Address address) { ... }__</pre>_A UriComponentsBuilder can be created:_<pre class="code">_// Inline style with static import of "MvcUriComponentsBuilder.on"__MvcUriComponentsBuilder.fromMethodCall(_on(CustomerController.class).showAddresses("US")).buildAndExpand(1)___// Longer form useful for repeated invocation (and void controller methods)__CustomerController controller = MvcUriComponentsBuilder.on(CustomController.class)__controller.addAddress(null)__builder = MvcUriComponentsBuilder.fromMethodCall(controller)__controller.getAddressesForCountry("US")_builder = MvcUriComponentsBuilder.fromMethodCall(controller)__</pre>_@param invocationInfo either the value returned from a "mock" controller_invocation or the "mock" controller itself after an invocation_@return a UriComponents instance;public static UriComponentsBuilder fromMethodCall(Object invocationInfo) {_		Assert.isInstanceOf(MethodInvocationInfo.class, invocationInfo)__		MethodInvocationInfo info = (MethodInvocationInfo) invocationInfo__		return fromMethod(info.getControllerMethod(), info.getArgumentValues())__	};create,a,link,uri,components,builder,by,invoking,a,mock,controller,method,the,controller,method,and,the,supplied,argument,values,are,then,used,to,delegate,to,link,from,method,java,lang,reflect,method,object,p,for,example,given,this,controller,pre,class,code,064,request,mapping,people,id,addresses,class,address,controller,064,request,mapping,country,public,http,entity,void,get,addresses,for,country,064,path,variable,string,country,064,request,mapping,value,method,request,method,post,public,void,add,address,address,address,pre,a,uri,components,builder,can,be,created,pre,class,code,inline,style,with,static,import,of,mvc,uri,components,builder,on,mvc,uri,components,builder,from,method,call,on,customer,controller,class,show,addresses,us,build,and,expand,1,longer,form,useful,for,repeated,invocation,and,void,controller,methods,customer,controller,controller,mvc,uri,components,builder,on,custom,controller,class,controller,add,address,null,builder,mvc,uri,components,builder,from,method,call,controller,controller,get,addresses,for,country,us,builder,mvc,uri,components,builder,from,method,call,controller,pre,param,invocation,info,either,the,value,returned,from,a,mock,controller,invocation,or,the,mock,controller,itself,after,an,invocation,return,a,uri,components,instance;public,static,uri,components,builder,from,method,call,object,invocation,info,assert,is,instance,of,method,invocation,info,class,invocation,info,method,invocation,info,info,method,invocation,info,invocation,info,return,from,method,info,get,controller,method,info,get,argument,values
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodCall(Object invocationInfo);1426553101;Create a {@link UriComponentsBuilder} by invoking a "mock" controller method._The controller method and the supplied argument values are then used to_delegate to {@link #fromMethod(java.lang.reflect.Method, Object...)}._<p>For example, given this controller:_<pre class="code">_&#064_RequestMapping("/people/{id}/addresses")_class AddressController {__&#064_RequestMapping("/{country}")_public HttpEntity<Void> getAddressesForCountry(&#064_PathVariable String country) { ... }__&#064_RequestMapping(value="/", method=RequestMethod.POST)_public void addAddress(Address address) { ... }__</pre>_A UriComponentsBuilder can be created:_<pre class="code">_// Inline style with static import of "MvcUriComponentsBuilder.on"__MvcUriComponentsBuilder.fromMethodCall(_on(CustomerController.class).showAddresses("US")).buildAndExpand(1)___// Longer form useful for repeated invocation (and void controller methods)__CustomerController controller = MvcUriComponentsBuilder.on(CustomController.class)__controller.addAddress(null)__builder = MvcUriComponentsBuilder.fromMethodCall(controller)__controller.getAddressesForCountry("US")_builder = MvcUriComponentsBuilder.fromMethodCall(controller)__</pre>_@param invocationInfo either the value returned from a "mock" controller_invocation or the "mock" controller itself after an invocation_@return a UriComponents instance;public static UriComponentsBuilder fromMethodCall(Object invocationInfo) {_		return fromMethodCall(null, invocationInfo)__	};create,a,link,uri,components,builder,by,invoking,a,mock,controller,method,the,controller,method,and,the,supplied,argument,values,are,then,used,to,delegate,to,link,from,method,java,lang,reflect,method,object,p,for,example,given,this,controller,pre,class,code,064,request,mapping,people,id,addresses,class,address,controller,064,request,mapping,country,public,http,entity,void,get,addresses,for,country,064,path,variable,string,country,064,request,mapping,value,method,request,method,post,public,void,add,address,address,address,pre,a,uri,components,builder,can,be,created,pre,class,code,inline,style,with,static,import,of,mvc,uri,components,builder,on,mvc,uri,components,builder,from,method,call,on,customer,controller,class,show,addresses,us,build,and,expand,1,longer,form,useful,for,repeated,invocation,and,void,controller,methods,customer,controller,controller,mvc,uri,components,builder,on,custom,controller,class,controller,add,address,null,builder,mvc,uri,components,builder,from,method,call,controller,controller,get,addresses,for,country,us,builder,mvc,uri,components,builder,from,method,call,controller,pre,param,invocation,info,either,the,value,returned,from,a,mock,controller,invocation,or,the,mock,controller,itself,after,an,invocation,return,a,uri,components,instance;public,static,uri,components,builder,from,method,call,object,invocation,info,return,from,method,call,null,invocation,info
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodCall(Object invocationInfo);1429801417;Create a {@link UriComponentsBuilder} by invoking a "mock" controller method._The controller method and the supplied argument values are then used to_delegate to {@link #fromMethod(java.lang.reflect.Method, Object...)}._<p>For example, given this controller:_<pre class="code">_&#064_RequestMapping("/people/{id}/addresses")_class AddressController {__&#064_RequestMapping("/{country}")_public HttpEntity<Void> getAddressesForCountry(&#064_PathVariable String country) { ... }__&#064_RequestMapping(value="/", method=RequestMethod.POST)_public void addAddress(Address address) { ... }__</pre>_A UriComponentsBuilder can be created:_<pre class="code">_// Inline style with static import of "MvcUriComponentsBuilder.on"__MvcUriComponentsBuilder.fromMethodCall(_on(CustomerController.class).showAddresses("US")).buildAndExpand(1)___// Longer form useful for repeated invocation (and void controller methods)__CustomerController controller = MvcUriComponentsBuilder.on(CustomController.class)__controller.addAddress(null)__builder = MvcUriComponentsBuilder.fromMethodCall(controller)__controller.getAddressesForCountry("US")_builder = MvcUriComponentsBuilder.fromMethodCall(controller)__</pre>_@param invocationInfo either the value returned from a "mock" controller_invocation or the "mock" controller itself after an invocation_@return a UriComponents instance;public static UriComponentsBuilder fromMethodCall(Object invocationInfo) {_		return fromMethodCall(null, invocationInfo)__	};create,a,link,uri,components,builder,by,invoking,a,mock,controller,method,the,controller,method,and,the,supplied,argument,values,are,then,used,to,delegate,to,link,from,method,java,lang,reflect,method,object,p,for,example,given,this,controller,pre,class,code,064,request,mapping,people,id,addresses,class,address,controller,064,request,mapping,country,public,http,entity,void,get,addresses,for,country,064,path,variable,string,country,064,request,mapping,value,method,request,method,post,public,void,add,address,address,address,pre,a,uri,components,builder,can,be,created,pre,class,code,inline,style,with,static,import,of,mvc,uri,components,builder,on,mvc,uri,components,builder,from,method,call,on,customer,controller,class,show,addresses,us,build,and,expand,1,longer,form,useful,for,repeated,invocation,and,void,controller,methods,customer,controller,controller,mvc,uri,components,builder,on,custom,controller,class,controller,add,address,null,builder,mvc,uri,components,builder,from,method,call,controller,controller,get,addresses,for,country,us,builder,mvc,uri,components,builder,from,method,call,controller,pre,param,invocation,info,either,the,value,returned,from,a,mock,controller,invocation,or,the,mock,controller,itself,after,an,invocation,return,a,uri,components,instance;public,static,uri,components,builder,from,method,call,object,invocation,info,return,from,method,call,null,invocation,info
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodCall(Object invocationInfo);1429801944;Create a {@link UriComponentsBuilder} by invoking a "mock" controller method._The controller method and the supplied argument values are then used to_delegate to {@link #fromMethod(java.lang.reflect.Method, Object...)}._<p>For example, given this controller:_<pre class="code">_&#064_RequestMapping("/people/{id}/addresses")_class AddressController {__&#064_RequestMapping("/{country}")_public HttpEntity<Void> getAddressesForCountry(&#064_PathVariable String country) { ... }__&#064_RequestMapping(value="/", method=RequestMethod.POST)_public void addAddress(Address address) { ... }__</pre>_A UriComponentsBuilder can be created:_<pre class="code">_// Inline style with static import of "MvcUriComponentsBuilder.on"__MvcUriComponentsBuilder.fromMethodCall(_on(CustomerController.class).showAddresses("US")).buildAndExpand(1)___// Longer form useful for repeated invocation (and void controller methods)__CustomerController controller = MvcUriComponentsBuilder.on(CustomController.class)__controller.addAddress(null)__builder = MvcUriComponentsBuilder.fromMethodCall(controller)__controller.getAddressesForCountry("US")_builder = MvcUriComponentsBuilder.fromMethodCall(controller)__</pre>_@param invocationInfo either the value returned from a "mock" controller_invocation or the "mock" controller itself after an invocation_@return a UriComponents instance;public static UriComponentsBuilder fromMethodCall(Object invocationInfo) {_		return fromMethodCall(null, invocationInfo)__	};create,a,link,uri,components,builder,by,invoking,a,mock,controller,method,the,controller,method,and,the,supplied,argument,values,are,then,used,to,delegate,to,link,from,method,java,lang,reflect,method,object,p,for,example,given,this,controller,pre,class,code,064,request,mapping,people,id,addresses,class,address,controller,064,request,mapping,country,public,http,entity,void,get,addresses,for,country,064,path,variable,string,country,064,request,mapping,value,method,request,method,post,public,void,add,address,address,address,pre,a,uri,components,builder,can,be,created,pre,class,code,inline,style,with,static,import,of,mvc,uri,components,builder,on,mvc,uri,components,builder,from,method,call,on,customer,controller,class,show,addresses,us,build,and,expand,1,longer,form,useful,for,repeated,invocation,and,void,controller,methods,customer,controller,controller,mvc,uri,components,builder,on,custom,controller,class,controller,add,address,null,builder,mvc,uri,components,builder,from,method,call,controller,controller,get,addresses,for,country,us,builder,mvc,uri,components,builder,from,method,call,controller,pre,param,invocation,info,either,the,value,returned,from,a,mock,controller,invocation,or,the,mock,controller,itself,after,an,invocation,return,a,uri,components,instance;public,static,uri,components,builder,from,method,call,object,invocation,info,return,from,method,call,null,invocation,info
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodCall(Object invocationInfo);1429802180;Create a {@link UriComponentsBuilder} by invoking a "mock" controller method._The controller method and the supplied argument values are then used to_delegate to {@link #fromMethod(java.lang.reflect.Method, Object...)}._<p>For example, given this controller:_<pre class="code">_&#064_RequestMapping("/people/{id}/addresses")_class AddressController {__&#064_RequestMapping("/{country}")_public HttpEntity<Void> getAddressesForCountry(&#064_PathVariable String country) { ... }__&#064_RequestMapping(value="/", method=RequestMethod.POST)_public void addAddress(Address address) { ... }__</pre>_A UriComponentsBuilder can be created:_<pre class="code">_// Inline style with static import of "MvcUriComponentsBuilder.on"__MvcUriComponentsBuilder.fromMethodCall(_on(CustomerController.class).showAddresses("US")).buildAndExpand(1)___// Longer form useful for repeated invocation (and void controller methods)__CustomerController controller = MvcUriComponentsBuilder.on(CustomController.class)__controller.addAddress(null)__builder = MvcUriComponentsBuilder.fromMethodCall(controller)__controller.getAddressesForCountry("US")_builder = MvcUriComponentsBuilder.fromMethodCall(controller)__</pre>_@param invocationInfo either the value returned from a "mock" controller_invocation or the "mock" controller itself after an invocation_@return a UriComponents instance;public static UriComponentsBuilder fromMethodCall(Object invocationInfo) {_		return fromMethodCall(null, invocationInfo)__	};create,a,link,uri,components,builder,by,invoking,a,mock,controller,method,the,controller,method,and,the,supplied,argument,values,are,then,used,to,delegate,to,link,from,method,java,lang,reflect,method,object,p,for,example,given,this,controller,pre,class,code,064,request,mapping,people,id,addresses,class,address,controller,064,request,mapping,country,public,http,entity,void,get,addresses,for,country,064,path,variable,string,country,064,request,mapping,value,method,request,method,post,public,void,add,address,address,address,pre,a,uri,components,builder,can,be,created,pre,class,code,inline,style,with,static,import,of,mvc,uri,components,builder,on,mvc,uri,components,builder,from,method,call,on,customer,controller,class,show,addresses,us,build,and,expand,1,longer,form,useful,for,repeated,invocation,and,void,controller,methods,customer,controller,controller,mvc,uri,components,builder,on,custom,controller,class,controller,add,address,null,builder,mvc,uri,components,builder,from,method,call,controller,controller,get,addresses,for,country,us,builder,mvc,uri,components,builder,from,method,call,controller,pre,param,invocation,info,either,the,value,returned,from,a,mock,controller,invocation,or,the,mock,controller,itself,after,an,invocation,return,a,uri,components,instance;public,static,uri,components,builder,from,method,call,object,invocation,info,return,from,method,call,null,invocation,info
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodCall(Object invocationInfo);1429886024;Create a {@link UriComponentsBuilder} by invoking a "mock" controller method._The controller method and the supplied argument values are then used to_delegate to {@link #fromMethod(java.lang.reflect.Method, Object...)}._<p>For example, given this controller:_<pre class="code">_&#064_RequestMapping("/people/{id}/addresses")_class AddressController {__&#064_RequestMapping("/{country}")_public HttpEntity<Void> getAddressesForCountry(&#064_PathVariable String country) { ... }__&#064_RequestMapping(value="/", method=RequestMethod.POST)_public void addAddress(Address address) { ... }__</pre>_A UriComponentsBuilder can be created:_<pre class="code">_// Inline style with static import of "MvcUriComponentsBuilder.on"__MvcUriComponentsBuilder.fromMethodCall(_on(CustomerController.class).showAddresses("US")).buildAndExpand(1)___// Longer form useful for repeated invocation (and void controller methods)__CustomerController controller = MvcUriComponentsBuilder.on(CustomController.class)__controller.addAddress(null)__builder = MvcUriComponentsBuilder.fromMethodCall(controller)__controller.getAddressesForCountry("US")_builder = MvcUriComponentsBuilder.fromMethodCall(controller)__</pre>_@param invocationInfo either the value returned from a "mock" controller_invocation or the "mock" controller itself after an invocation_@return a UriComponents instance;public static UriComponentsBuilder fromMethodCall(Object invocationInfo) {_		return fromMethodCall(null, invocationInfo)__	};create,a,link,uri,components,builder,by,invoking,a,mock,controller,method,the,controller,method,and,the,supplied,argument,values,are,then,used,to,delegate,to,link,from,method,java,lang,reflect,method,object,p,for,example,given,this,controller,pre,class,code,064,request,mapping,people,id,addresses,class,address,controller,064,request,mapping,country,public,http,entity,void,get,addresses,for,country,064,path,variable,string,country,064,request,mapping,value,method,request,method,post,public,void,add,address,address,address,pre,a,uri,components,builder,can,be,created,pre,class,code,inline,style,with,static,import,of,mvc,uri,components,builder,on,mvc,uri,components,builder,from,method,call,on,customer,controller,class,show,addresses,us,build,and,expand,1,longer,form,useful,for,repeated,invocation,and,void,controller,methods,customer,controller,controller,mvc,uri,components,builder,on,custom,controller,class,controller,add,address,null,builder,mvc,uri,components,builder,from,method,call,controller,controller,get,addresses,for,country,us,builder,mvc,uri,components,builder,from,method,call,controller,pre,param,invocation,info,either,the,value,returned,from,a,mock,controller,invocation,or,the,mock,controller,itself,after,an,invocation,return,a,uri,components,instance;public,static,uri,components,builder,from,method,call,object,invocation,info,return,from,method,call,null,invocation,info
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodCall(Object invocationInfo);1429888980;Create a {@link UriComponentsBuilder} by invoking a "mock" controller method._The controller method and the supplied argument values are then used to_delegate to {@link #fromMethod(java.lang.reflect.Method, Object...)}._<p>For example, given this controller:_<pre class="code">_&#064_RequestMapping("/people/{id}/addresses")_class AddressController {__&#064_RequestMapping("/{country}")_public HttpEntity<Void> getAddressesForCountry(&#064_PathVariable String country) { ... }__&#064_RequestMapping(value="/", method=RequestMethod.POST)_public void addAddress(Address address) { ... }__</pre>_A UriComponentsBuilder can be created:_<pre class="code">_// Inline style with static import of "MvcUriComponentsBuilder.on"__MvcUriComponentsBuilder.fromMethodCall(_on(CustomerController.class).showAddresses("US")).buildAndExpand(1)___// Longer form useful for repeated invocation (and void controller methods)__CustomerController controller = MvcUriComponentsBuilder.on(CustomController.class)__controller.addAddress(null)__builder = MvcUriComponentsBuilder.fromMethodCall(controller)__controller.getAddressesForCountry("US")_builder = MvcUriComponentsBuilder.fromMethodCall(controller)__</pre>_@param invocationInfo either the value returned from a "mock" controller_invocation or the "mock" controller itself after an invocation_@return a UriComponents instance;public static UriComponentsBuilder fromMethodCall(Object invocationInfo) {_		return fromMethodCall(null, invocationInfo)__	};create,a,link,uri,components,builder,by,invoking,a,mock,controller,method,the,controller,method,and,the,supplied,argument,values,are,then,used,to,delegate,to,link,from,method,java,lang,reflect,method,object,p,for,example,given,this,controller,pre,class,code,064,request,mapping,people,id,addresses,class,address,controller,064,request,mapping,country,public,http,entity,void,get,addresses,for,country,064,path,variable,string,country,064,request,mapping,value,method,request,method,post,public,void,add,address,address,address,pre,a,uri,components,builder,can,be,created,pre,class,code,inline,style,with,static,import,of,mvc,uri,components,builder,on,mvc,uri,components,builder,from,method,call,on,customer,controller,class,show,addresses,us,build,and,expand,1,longer,form,useful,for,repeated,invocation,and,void,controller,methods,customer,controller,controller,mvc,uri,components,builder,on,custom,controller,class,controller,add,address,null,builder,mvc,uri,components,builder,from,method,call,controller,controller,get,addresses,for,country,us,builder,mvc,uri,components,builder,from,method,call,controller,pre,param,invocation,info,either,the,value,returned,from,a,mock,controller,invocation,or,the,mock,controller,itself,after,an,invocation,return,a,uri,components,instance;public,static,uri,components,builder,from,method,call,object,invocation,info,return,from,method,call,null,invocation,info
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodCall(Object invocationInfo);1430739806;Create a {@link UriComponentsBuilder} by invoking a "mock" controller method._The controller method and the supplied argument values are then used to_delegate to {@link #fromMethod(java.lang.reflect.Method, Object...)}._<p>For example, given this controller:_<pre class="code">_&#064_RequestMapping("/people/{id}/addresses")_class AddressController {__&#064_RequestMapping("/{country}")_public HttpEntity<Void> getAddressesForCountry(&#064_PathVariable String country) { ... }__&#064_RequestMapping(value="/", method=RequestMethod.POST)_public void addAddress(Address address) { ... }__</pre>_A UriComponentsBuilder can be created:_<pre class="code">_// Inline style with static import of "MvcUriComponentsBuilder.on"__MvcUriComponentsBuilder.fromMethodCall(_on(AddressController.class).getAddressesForCountry("US")).buildAndExpand(1)___// Longer form useful for repeated invocation (and void controller methods)__AddressController controller = MvcUriComponentsBuilder.on(AddressController.class)__controller.addAddress(null)__builder = MvcUriComponentsBuilder.fromMethodCall(controller)__controller.getAddressesForCountry("US")_builder = MvcUriComponentsBuilder.fromMethodCall(controller)__</pre>_@param invocationInfo either the value returned from a "mock" controller_invocation or the "mock" controller itself after an invocation_@return a UriComponents instance;public static UriComponentsBuilder fromMethodCall(Object invocationInfo) {_		return fromMethodCall(null, invocationInfo)__	};create,a,link,uri,components,builder,by,invoking,a,mock,controller,method,the,controller,method,and,the,supplied,argument,values,are,then,used,to,delegate,to,link,from,method,java,lang,reflect,method,object,p,for,example,given,this,controller,pre,class,code,064,request,mapping,people,id,addresses,class,address,controller,064,request,mapping,country,public,http,entity,void,get,addresses,for,country,064,path,variable,string,country,064,request,mapping,value,method,request,method,post,public,void,add,address,address,address,pre,a,uri,components,builder,can,be,created,pre,class,code,inline,style,with,static,import,of,mvc,uri,components,builder,on,mvc,uri,components,builder,from,method,call,on,address,controller,class,get,addresses,for,country,us,build,and,expand,1,longer,form,useful,for,repeated,invocation,and,void,controller,methods,address,controller,controller,mvc,uri,components,builder,on,address,controller,class,controller,add,address,null,builder,mvc,uri,components,builder,from,method,call,controller,controller,get,addresses,for,country,us,builder,mvc,uri,components,builder,from,method,call,controller,pre,param,invocation,info,either,the,value,returned,from,a,mock,controller,invocation,or,the,mock,controller,itself,after,an,invocation,return,a,uri,components,instance;public,static,uri,components,builder,from,method,call,object,invocation,info,return,from,method,call,null,invocation,info
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodCall(Object invocationInfo);1430747547;Create a {@link UriComponentsBuilder} by invoking a "mock" controller method._The controller method and the supplied argument values are then used to_delegate to {@link #fromMethod(java.lang.reflect.Method, Object...)}._<p>For example, given this controller:_<pre class="code">_&#064_RequestMapping("/people/{id}/addresses")_class AddressController {__&#064_RequestMapping("/{country}")_public HttpEntity<Void> getAddressesForCountry(&#064_PathVariable String country) { ... }__&#064_RequestMapping(value="/", method=RequestMethod.POST)_public void addAddress(Address address) { ... }__</pre>_A UriComponentsBuilder can be created:_<pre class="code">_// Inline style with static import of "MvcUriComponentsBuilder.on"__MvcUriComponentsBuilder.fromMethodCall(_on(AddressController.class).getAddressesForCountry("US")).buildAndExpand(1)___// Longer form useful for repeated invocation (and void controller methods)__AddressController controller = MvcUriComponentsBuilder.on(AddressController.class)__controller.addAddress(null)__builder = MvcUriComponentsBuilder.fromMethodCall(controller)__controller.getAddressesForCountry("US")_builder = MvcUriComponentsBuilder.fromMethodCall(controller)__</pre>_@param invocationInfo either the value returned from a "mock" controller_invocation or the "mock" controller itself after an invocation_@return a UriComponents instance;public static UriComponentsBuilder fromMethodCall(Object invocationInfo) {_		return fromMethodCall(null, invocationInfo)__	};create,a,link,uri,components,builder,by,invoking,a,mock,controller,method,the,controller,method,and,the,supplied,argument,values,are,then,used,to,delegate,to,link,from,method,java,lang,reflect,method,object,p,for,example,given,this,controller,pre,class,code,064,request,mapping,people,id,addresses,class,address,controller,064,request,mapping,country,public,http,entity,void,get,addresses,for,country,064,path,variable,string,country,064,request,mapping,value,method,request,method,post,public,void,add,address,address,address,pre,a,uri,components,builder,can,be,created,pre,class,code,inline,style,with,static,import,of,mvc,uri,components,builder,on,mvc,uri,components,builder,from,method,call,on,address,controller,class,get,addresses,for,country,us,build,and,expand,1,longer,form,useful,for,repeated,invocation,and,void,controller,methods,address,controller,controller,mvc,uri,components,builder,on,address,controller,class,controller,add,address,null,builder,mvc,uri,components,builder,from,method,call,controller,controller,get,addresses,for,country,us,builder,mvc,uri,components,builder,from,method,call,controller,pre,param,invocation,info,either,the,value,returned,from,a,mock,controller,invocation,or,the,mock,controller,itself,after,an,invocation,return,a,uri,components,instance;public,static,uri,components,builder,from,method,call,object,invocation,info,return,from,method,call,null,invocation,info
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodCall(Object invocationInfo);1430749606;Create a {@link UriComponentsBuilder} by invoking a "mock" controller method._The controller method and the supplied argument values are then used to_delegate to {@link #fromMethod(java.lang.reflect.Method, Object...)}._<p>For example, given this controller:_<pre class="code">_&#064_RequestMapping("/people/{id}/addresses")_class AddressController {__&#064_RequestMapping("/{country}")_public HttpEntity<Void> getAddressesForCountry(&#064_PathVariable String country) { ... }__&#064_RequestMapping(value="/", method=RequestMethod.POST)_public void addAddress(Address address) { ... }__</pre>_A UriComponentsBuilder can be created:_<pre class="code">_// Inline style with static import of "MvcUriComponentsBuilder.on"__MvcUriComponentsBuilder.fromMethodCall(_on(AddressController.class).getAddressesForCountry("US")).buildAndExpand(1)___// Longer form useful for repeated invocation (and void controller methods)__AddressController controller = MvcUriComponentsBuilder.on(AddressController.class)__controller.addAddress(null)__builder = MvcUriComponentsBuilder.fromMethodCall(controller)__controller.getAddressesForCountry("US")_builder = MvcUriComponentsBuilder.fromMethodCall(controller)__</pre>_@param invocationInfo either the value returned from a "mock" controller_invocation or the "mock" controller itself after an invocation_@return a UriComponents instance;public static UriComponentsBuilder fromMethodCall(Object invocationInfo) {_		return fromMethodCall(null, invocationInfo)__	};create,a,link,uri,components,builder,by,invoking,a,mock,controller,method,the,controller,method,and,the,supplied,argument,values,are,then,used,to,delegate,to,link,from,method,java,lang,reflect,method,object,p,for,example,given,this,controller,pre,class,code,064,request,mapping,people,id,addresses,class,address,controller,064,request,mapping,country,public,http,entity,void,get,addresses,for,country,064,path,variable,string,country,064,request,mapping,value,method,request,method,post,public,void,add,address,address,address,pre,a,uri,components,builder,can,be,created,pre,class,code,inline,style,with,static,import,of,mvc,uri,components,builder,on,mvc,uri,components,builder,from,method,call,on,address,controller,class,get,addresses,for,country,us,build,and,expand,1,longer,form,useful,for,repeated,invocation,and,void,controller,methods,address,controller,controller,mvc,uri,components,builder,on,address,controller,class,controller,add,address,null,builder,mvc,uri,components,builder,from,method,call,controller,controller,get,addresses,for,country,us,builder,mvc,uri,components,builder,from,method,call,controller,pre,param,invocation,info,either,the,value,returned,from,a,mock,controller,invocation,or,the,mock,controller,itself,after,an,invocation,return,a,uri,components,instance;public,static,uri,components,builder,from,method,call,object,invocation,info,return,from,method,call,null,invocation,info
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromController(@Nullable UriComponentsBuilder builder, 			Class<?> controllerType);1496259743;An alternative to {@link #fromController(Class)} that accepts a_{@code UriComponentsBuilder} representing the base URL. This is useful_when using MvcUriComponentsBuilder outside the context of processing a_request or to apply a custom baseUrl not matching the current request._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param controllerType the controller to build a URI for_@return a UriComponentsBuilder instance (never {@code null});public static UriComponentsBuilder fromController(@Nullable UriComponentsBuilder builder,_			Class<?> controllerType) {__		builder = getBaseUrlToUse(builder)__		String mapping = getTypeRequestMapping(controllerType)__		return builder.path(mapping)__	};an,alternative,to,link,from,controller,class,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,controller,type,the,controller,to,build,a,uri,for,return,a,uri,components,builder,instance,never,code,null;public,static,uri,components,builder,from,controller,nullable,uri,components,builder,builder,class,controller,type,builder,get,base,url,to,use,builder,string,mapping,get,type,request,mapping,controller,type,return,builder,path,mapping
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromController(@Nullable UriComponentsBuilder builder, 			Class<?> controllerType);1496370972;An alternative to {@link #fromController(Class)} that accepts a_{@code UriComponentsBuilder} representing the base URL. This is useful_when using MvcUriComponentsBuilder outside the context of processing a_request or to apply a custom baseUrl not matching the current request._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param controllerType the controller to build a URI for_@return a UriComponentsBuilder instance (never {@code null});public static UriComponentsBuilder fromController(@Nullable UriComponentsBuilder builder,_			Class<?> controllerType) {__		builder = getBaseUrlToUse(builder)__		String mapping = getTypeRequestMapping(controllerType)__		return builder.path(mapping)__	};an,alternative,to,link,from,controller,class,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,controller,type,the,controller,to,build,a,uri,for,return,a,uri,components,builder,instance,never,code,null;public,static,uri,components,builder,from,controller,nullable,uri,components,builder,builder,class,controller,type,builder,get,base,url,to,use,builder,string,mapping,get,type,request,mapping,controller,type,return,builder,path,mapping
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromController(@Nullable UriComponentsBuilder builder, 			Class<?> controllerType);1496837955;An alternative to {@link #fromController(Class)} that accepts a_{@code UriComponentsBuilder} representing the base URL. This is useful_when using MvcUriComponentsBuilder outside the context of processing a_request or to apply a custom baseUrl not matching the current request._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param controllerType the controller to build a URI for_@return a UriComponentsBuilder instance (never {@code null});public static UriComponentsBuilder fromController(@Nullable UriComponentsBuilder builder,_			Class<?> controllerType) {__		builder = getBaseUrlToUse(builder)__		String mapping = getTypeRequestMapping(controllerType)__		return builder.path(mapping)__	};an,alternative,to,link,from,controller,class,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,controller,type,the,controller,to,build,a,uri,for,return,a,uri,components,builder,instance,never,code,null;public,static,uri,components,builder,from,controller,nullable,uri,components,builder,builder,class,controller,type,builder,get,base,url,to,use,builder,string,mapping,get,type,request,mapping,controller,type,return,builder,path,mapping
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromController(@Nullable UriComponentsBuilder builder, 			Class<?> controllerType);1497341397;An alternative to {@link #fromController(Class)} that accepts a_{@code UriComponentsBuilder} representing the base URL. This is useful_when using MvcUriComponentsBuilder outside the context of processing a_request or to apply a custom baseUrl not matching the current request._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param controllerType the controller to build a URI for_@return a UriComponentsBuilder instance (never {@code null});public static UriComponentsBuilder fromController(@Nullable UriComponentsBuilder builder,_			Class<?> controllerType) {__		builder = getBaseUrlToUse(builder)__		String mapping = getTypeRequestMapping(controllerType)__		return builder.path(mapping)__	};an,alternative,to,link,from,controller,class,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,controller,type,the,controller,to,build,a,uri,for,return,a,uri,components,builder,instance,never,code,null;public,static,uri,components,builder,from,controller,nullable,uri,components,builder,builder,class,controller,type,builder,get,base,url,to,use,builder,string,mapping,get,type,request,mapping,controller,type,return,builder,path,mapping
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromController(@Nullable UriComponentsBuilder builder, 			Class<?> controllerType);1498780456;An alternative to {@link #fromController(Class)} that accepts a_{@code UriComponentsBuilder} representing the base URL. This is useful_when using MvcUriComponentsBuilder outside the context of processing a_request or to apply a custom baseUrl not matching the current request._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param controllerType the controller to build a URI for_@return a UriComponentsBuilder instance (never {@code null});public static UriComponentsBuilder fromController(@Nullable UriComponentsBuilder builder,_			Class<?> controllerType) {__		builder = getBaseUrlToUse(builder)__		String mapping = getTypeRequestMapping(controllerType)__		return builder.path(mapping)__	};an,alternative,to,link,from,controller,class,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,controller,type,the,controller,to,build,a,uri,for,return,a,uri,components,builder,instance,never,code,null;public,static,uri,components,builder,from,controller,nullable,uri,components,builder,builder,class,controller,type,builder,get,base,url,to,use,builder,string,mapping,get,type,request,mapping,controller,type,return,builder,path,mapping
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromController(@Nullable UriComponentsBuilder builder, 			Class<?> controllerType);1500416137;An alternative to {@link #fromController(Class)} that accepts a_{@code UriComponentsBuilder} representing the base URL. This is useful_when using MvcUriComponentsBuilder outside the context of processing a_request or to apply a custom baseUrl not matching the current request._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param controllerType the controller to build a URI for_@return a UriComponentsBuilder instance (never {@code null});public static UriComponentsBuilder fromController(@Nullable UriComponentsBuilder builder,_			Class<?> controllerType) {__		builder = getBaseUrlToUse(builder)__		String mapping = getTypeRequestMapping(controllerType)__		return builder.path(mapping)__	};an,alternative,to,link,from,controller,class,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,controller,type,the,controller,to,build,a,uri,for,return,a,uri,components,builder,instance,never,code,null;public,static,uri,components,builder,from,controller,nullable,uri,components,builder,builder,class,controller,type,builder,get,base,url,to,use,builder,string,mapping,get,type,request,mapping,controller,type,return,builder,path,mapping
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromController(@Nullable UriComponentsBuilder builder, 			Class<?> controllerType);1506097334;An alternative to {@link #fromController(Class)} that accepts a_{@code UriComponentsBuilder} representing the base URL. This is useful_when using MvcUriComponentsBuilder outside the context of processing a_request or to apply a custom baseUrl not matching the current request._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param controllerType the controller to build a URI for_@return a UriComponentsBuilder instance (never {@code null});public static UriComponentsBuilder fromController(@Nullable UriComponentsBuilder builder,_			Class<?> controllerType) {__		builder = getBaseUrlToUse(builder)__		String mapping = getTypeRequestMapping(controllerType)__		return builder.path(mapping)__	};an,alternative,to,link,from,controller,class,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,controller,type,the,controller,to,build,a,uri,for,return,a,uri,components,builder,instance,never,code,null;public,static,uri,components,builder,from,controller,nullable,uri,components,builder,builder,class,controller,type,builder,get,base,url,to,use,builder,string,mapping,get,type,request,mapping,controller,type,return,builder,path,mapping
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromController(@Nullable UriComponentsBuilder builder, 			Class<?> controllerType);1518770299;An alternative to {@link #fromController(Class)} that accepts a_{@code UriComponentsBuilder} representing the base URL. This is useful_when using MvcUriComponentsBuilder outside the context of processing a_request or to apply a custom baseUrl not matching the current request._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param controllerType the controller to build a URI for_@return a UriComponentsBuilder instance (never {@code null});public static UriComponentsBuilder fromController(@Nullable UriComponentsBuilder builder,_			Class<?> controllerType) {__		builder = getBaseUrlToUse(builder)__		String mapping = getTypeRequestMapping(controllerType)__		return builder.path(mapping)__	};an,alternative,to,link,from,controller,class,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,controller,type,the,controller,to,build,a,uri,for,return,a,uri,components,builder,instance,never,code,null;public,static,uri,components,builder,from,controller,nullable,uri,components,builder,builder,class,controller,type,builder,get,base,url,to,use,builder,string,mapping,get,type,request,mapping,controller,type,return,builder,path,mapping
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromController(@Nullable UriComponentsBuilder builder, 			Class<?> controllerType);1522354261;An alternative to {@link #fromController(Class)} that accepts a_{@code UriComponentsBuilder} representing the base URL. This is useful_when using MvcUriComponentsBuilder outside the context of processing a_request or to apply a custom baseUrl not matching the current request._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param controllerType the controller to build a URI for_@return a UriComponentsBuilder instance (never {@code null});public static UriComponentsBuilder fromController(@Nullable UriComponentsBuilder builder,_			Class<?> controllerType) {__		builder = getBaseUrlToUse(builder)__		String mapping = getTypeRequestMapping(controllerType)__		return builder.path(mapping)__	};an,alternative,to,link,from,controller,class,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,controller,type,the,controller,to,build,a,uri,for,return,a,uri,components,builder,instance,never,code,null;public,static,uri,components,builder,from,controller,nullable,uri,components,builder,builder,class,controller,type,builder,get,base,url,to,use,builder,string,mapping,get,type,request,mapping,controller,type,return,builder,path,mapping
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromController(@Nullable UriComponentsBuilder builder, 			Class<?> controllerType);1523455554;An alternative to {@link #fromController(Class)} that accepts a_{@code UriComponentsBuilder} representing the base URL. This is useful_when using MvcUriComponentsBuilder outside the context of processing a_request or to apply a custom baseUrl not matching the current request._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param controllerType the controller to build a URI for_@return a UriComponentsBuilder instance (never {@code null});public static UriComponentsBuilder fromController(@Nullable UriComponentsBuilder builder,_			Class<?> controllerType) {__		builder = getBaseUrlToUse(builder)__		String mapping = getTypeRequestMapping(controllerType)__		return builder.path(mapping)__	};an,alternative,to,link,from,controller,class,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,controller,type,the,controller,to,build,a,uri,for,return,a,uri,components,builder,instance,never,code,null;public,static,uri,components,builder,from,controller,nullable,uri,components,builder,builder,class,controller,type,builder,get,base,url,to,use,builder,string,mapping,get,type,request,mapping,controller,type,return,builder,path,mapping
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromController(@Nullable UriComponentsBuilder builder, 			Class<?> controllerType);1529028426;An alternative to {@link #fromController(Class)} that accepts a_{@code UriComponentsBuilder} representing the base URL. This is useful_when using MvcUriComponentsBuilder outside the context of processing a_request or to apply a custom baseUrl not matching the current request._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param controllerType the controller to build a URI for_@return a UriComponentsBuilder instance (never {@code null});public static UriComponentsBuilder fromController(@Nullable UriComponentsBuilder builder,_			Class<?> controllerType) {__		builder = getBaseUrlToUse(builder)__		String mapping = getClassMapping(controllerType)__		return builder.path(mapping)__	};an,alternative,to,link,from,controller,class,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,controller,type,the,controller,to,build,a,uri,for,return,a,uri,components,builder,instance,never,code,null;public,static,uri,components,builder,from,controller,nullable,uri,components,builder,builder,class,controller,type,builder,get,base,url,to,use,builder,string,mapping,get,class,mapping,controller,type,return,builder,path,mapping
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromController(@Nullable UriComponentsBuilder builder, 			Class<?> controllerType);1529028426;An alternative to {@link #fromController(Class)} that accepts a_{@code UriComponentsBuilder} representing the base URL. This is useful_when using MvcUriComponentsBuilder outside the context of processing a_request or to apply a custom baseUrl not matching the current request._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param controllerType the controller to build a URI for_@return a UriComponentsBuilder instance (never {@code null});public static UriComponentsBuilder fromController(@Nullable UriComponentsBuilder builder,_			Class<?> controllerType) {__		builder = getBaseUrlToUse(builder)__		String mapping = getClassMapping(controllerType)__		return builder.path(mapping)__	};an,alternative,to,link,from,controller,class,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,controller,type,the,controller,to,build,a,uri,for,return,a,uri,components,builder,instance,never,code,null;public,static,uri,components,builder,from,controller,nullable,uri,components,builder,builder,class,controller,type,builder,get,base,url,to,use,builder,string,mapping,get,class,mapping,controller,type,return,builder,path,mapping
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromController(@Nullable UriComponentsBuilder builder, 			Class<?> controllerType);1529028713;An alternative to {@link #fromController(Class)} that accepts a_{@code UriComponentsBuilder} representing the base URL. This is useful_when using MvcUriComponentsBuilder outside the context of processing a_request or to apply a custom baseUrl not matching the current request._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param controllerType the controller to build a URI for_@return a UriComponentsBuilder instance (never {@code null});public static UriComponentsBuilder fromController(@Nullable UriComponentsBuilder builder,_			Class<?> controllerType) {__		builder = getBaseUrlToUse(builder)___		_		String prefix = getPathPrefix(controllerType)__		builder.path(prefix)___		String mapping = getClassMapping(controllerType)__		builder.path(mapping)___		return builder__	};an,alternative,to,link,from,controller,class,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,controller,type,the,controller,to,build,a,uri,for,return,a,uri,components,builder,instance,never,code,null;public,static,uri,components,builder,from,controller,nullable,uri,components,builder,builder,class,controller,type,builder,get,base,url,to,use,builder,string,prefix,get,path,prefix,controller,type,builder,path,prefix,string,mapping,get,class,mapping,controller,type,builder,path,mapping,return,builder
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromController(@Nullable UriComponentsBuilder builder, 			Class<?> controllerType);1529361191;An alternative to {@link #fromController(Class)} that accepts a_{@code UriComponentsBuilder} representing the base URL. This is useful_when using MvcUriComponentsBuilder outside the context of processing a_request or to apply a custom baseUrl not matching the current request._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param controllerType the controller to build a URI for_@return a UriComponentsBuilder instance (never {@code null});public static UriComponentsBuilder fromController(@Nullable UriComponentsBuilder builder,_			Class<?> controllerType) {__		builder = getBaseUrlToUse(builder)___		_		String prefix = getPathPrefix(controllerType)__		builder.path(prefix)___		String mapping = getClassMapping(controllerType)__		builder.path(mapping)___		return builder__	};an,alternative,to,link,from,controller,class,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,controller,type,the,controller,to,build,a,uri,for,return,a,uri,components,builder,instance,never,code,null;public,static,uri,components,builder,from,controller,nullable,uri,components,builder,builder,class,controller,type,builder,get,base,url,to,use,builder,string,prefix,get,path,prefix,controller,type,builder,path,prefix,string,mapping,get,class,mapping,controller,type,builder,path,mapping,return,builder
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromController(@Nullable UriComponentsBuilder builder, 			Class<?> controllerType);1530174524;An alternative to {@link #fromController(Class)} that accepts a_{@code UriComponentsBuilder} representing the base URL. This is useful_when using MvcUriComponentsBuilder outside the context of processing a_request or to apply a custom baseUrl not matching the current request._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param controllerType the controller to build a URI for_@return a UriComponentsBuilder instance (never {@code null});public static UriComponentsBuilder fromController(@Nullable UriComponentsBuilder builder,_			Class<?> controllerType) {__		builder = getBaseUrlToUse(builder)___		_		String prefix = getPathPrefix(controllerType)__		builder.path(prefix)___		String mapping = getClassMapping(controllerType)__		builder.path(mapping)___		return builder__	};an,alternative,to,link,from,controller,class,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,controller,type,the,controller,to,build,a,uri,for,return,a,uri,components,builder,instance,never,code,null;public,static,uri,components,builder,from,controller,nullable,uri,components,builder,builder,class,controller,type,builder,get,base,url,to,use,builder,string,prefix,get,path,prefix,controller,type,builder,path,prefix,string,mapping,get,class,mapping,controller,type,builder,path,mapping,return,builder
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromController(@Nullable UriComponentsBuilder builder, 			Class<?> controllerType);1532041662;An alternative to {@link #fromController(Class)} that accepts a_{@code UriComponentsBuilder} representing the base URL. This is useful_when using MvcUriComponentsBuilder outside the context of processing a_request or to apply a custom baseUrl not matching the current request._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param controllerType the controller to build a URI for_@return a UriComponentsBuilder instance (never {@code null});public static UriComponentsBuilder fromController(@Nullable UriComponentsBuilder builder,_			Class<?> controllerType) {__		builder = getBaseUrlToUse(builder)___		_		String prefix = getPathPrefix(controllerType)__		builder.path(prefix)___		String mapping = getClassMapping(controllerType)__		builder.path(mapping)___		return builder__	};an,alternative,to,link,from,controller,class,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,controller,type,the,controller,to,build,a,uri,for,return,a,uri,components,builder,instance,never,code,null;public,static,uri,components,builder,from,controller,nullable,uri,components,builder,builder,class,controller,type,builder,get,base,url,to,use,builder,string,prefix,get,path,prefix,controller,type,builder,path,prefix,string,mapping,get,class,mapping,controller,type,builder,path,mapping,return,builder
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromController(@Nullable UriComponentsBuilder builder, 			Class<?> controllerType);1532041662;An alternative to {@link #fromController(Class)} that accepts a_{@code UriComponentsBuilder} representing the base URL. This is useful_when using MvcUriComponentsBuilder outside the context of processing a_request or to apply a custom baseUrl not matching the current request._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param controllerType the controller to build a URI for_@return a UriComponentsBuilder instance (never {@code null});public static UriComponentsBuilder fromController(@Nullable UriComponentsBuilder builder,_			Class<?> controllerType) {__		builder = getBaseUrlToUse(builder)___		_		String prefix = getPathPrefix(controllerType)__		builder.path(prefix)___		String mapping = getClassMapping(controllerType)__		builder.path(mapping)___		return builder__	};an,alternative,to,link,from,controller,class,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,controller,type,the,controller,to,build,a,uri,for,return,a,uri,components,builder,instance,never,code,null;public,static,uri,components,builder,from,controller,nullable,uri,components,builder,builder,class,controller,type,builder,get,base,url,to,use,builder,string,prefix,get,path,prefix,controller,type,builder,path,prefix,string,mapping,get,class,mapping,controller,type,builder,path,mapping,return,builder
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromController(@Nullable UriComponentsBuilder builder, 			Class<?> controllerType);1548943222;An alternative to {@link #fromController(Class)} that accepts a_{@code UriComponentsBuilder} representing the base URL. This is useful_when using MvcUriComponentsBuilder outside the context of processing a_request or to apply a custom baseUrl not matching the current request._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param controllerType the controller to build a URI for_@return a UriComponentsBuilder instance (never {@code null});public static UriComponentsBuilder fromController(@Nullable UriComponentsBuilder builder,_			Class<?> controllerType) {__		builder = getBaseUrlToUse(builder)___		_		String prefix = getPathPrefix(controllerType)__		builder.path(prefix)___		String mapping = getClassMapping(controllerType)__		builder.path(mapping)___		return builder__	};an,alternative,to,link,from,controller,class,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,controller,type,the,controller,to,build,a,uri,for,return,a,uri,components,builder,instance,never,code,null;public,static,uri,components,builder,from,controller,nullable,uri,components,builder,builder,class,controller,type,builder,get,base,url,to,use,builder,string,prefix,get,path,prefix,controller,type,builder,path,prefix,string,mapping,get,class,mapping,controller,type,builder,path,mapping,return,builder
MvcUriComponentsBuilder -> MethodInvocationInfo -> Object[] getArgumentValues()_;1530174524;Return the argument values.;Object[] getArgumentValues()_;return,the,argument,values;object,get,argument,values
MvcUriComponentsBuilder -> MethodInvocationInfo -> Object[] getArgumentValues()_;1532041662;Return the argument values.;Object[] getArgumentValues()_;return,the,argument,values;object,get,argument,values
MvcUriComponentsBuilder -> MethodInvocationInfo -> Object[] getArgumentValues()_;1532041662;Return the argument values.;Object[] getArgumentValues()_;return,the,argument,values;object,get,argument,values
MvcUriComponentsBuilder -> MethodInvocationInfo -> Object[] getArgumentValues()_;1548943222;Return the argument values.;Object[] getArgumentValues()_;return,the,argument,values;object,get,argument,values
MvcUriComponentsBuilder -> protected MvcUriComponentsBuilder(UriComponentsBuilder baseUrl);1429801417;Default constructor. Protected to prevent direct instantiation.__@see #fromController(Class)_@see #fromMethodName(Class, String, Object...)_@see #fromMethodCall(Object)_@see #fromMappingName(String)_@see #fromMethod(java.lang.reflect.Method, Object...);protected MvcUriComponentsBuilder(UriComponentsBuilder baseUrl) {_		Assert.notNull(baseUrl, "'baseUrl' is required")__		this.baseUrl = baseUrl__	};default,constructor,protected,to,prevent,direct,instantiation,see,from,controller,class,see,from,method,name,class,string,object,see,from,method,call,object,see,from,mapping,name,string,see,from,method,java,lang,reflect,method,object;protected,mvc,uri,components,builder,uri,components,builder,base,url,assert,not,null,base,url,base,url,is,required,this,base,url,base,url
MvcUriComponentsBuilder -> protected MvcUriComponentsBuilder(UriComponentsBuilder baseUrl);1429801944;Default constructor. Protected to prevent direct instantiation.__@see #fromController(Class)_@see #fromMethodName(Class, String, Object...)_@see #fromMethodCall(Object)_@see #fromMappingName(String)_@see #fromMethod(java.lang.reflect.Method, Object...);protected MvcUriComponentsBuilder(UriComponentsBuilder baseUrl) {_		Assert.notNull(baseUrl, "'baseUrl' is required")__		this.baseUrl = baseUrl__	};default,constructor,protected,to,prevent,direct,instantiation,see,from,controller,class,see,from,method,name,class,string,object,see,from,method,call,object,see,from,mapping,name,string,see,from,method,java,lang,reflect,method,object;protected,mvc,uri,components,builder,uri,components,builder,base,url,assert,not,null,base,url,base,url,is,required,this,base,url,base,url
MvcUriComponentsBuilder -> protected MvcUriComponentsBuilder(UriComponentsBuilder baseUrl);1429802180;Default constructor. Protected to prevent direct instantiation.__@see #fromController(Class)_@see #fromMethodName(Class, String, Object...)_@see #fromMethodCall(Object)_@see #fromMappingName(String)_@see #fromMethod(java.lang.reflect.Method, Object...);protected MvcUriComponentsBuilder(UriComponentsBuilder baseUrl) {_		Assert.notNull(baseUrl, "'baseUrl' is required")__		this.baseUrl = baseUrl__	};default,constructor,protected,to,prevent,direct,instantiation,see,from,controller,class,see,from,method,name,class,string,object,see,from,method,call,object,see,from,mapping,name,string,see,from,method,java,lang,reflect,method,object;protected,mvc,uri,components,builder,uri,components,builder,base,url,assert,not,null,base,url,base,url,is,required,this,base,url,base,url
MvcUriComponentsBuilder -> protected MvcUriComponentsBuilder(UriComponentsBuilder baseUrl);1429886024;Default constructor. Protected to prevent direct instantiation.__@see #fromController(Class)_@see #fromMethodName(Class, String, Object...)_@see #fromMethodCall(Object)_@see #fromMappingName(String)_@see #fromMethod(java.lang.reflect.Method, Object...);protected MvcUriComponentsBuilder(UriComponentsBuilder baseUrl) {_		Assert.notNull(baseUrl, "'baseUrl' is required")__		this.baseUrl = baseUrl__	};default,constructor,protected,to,prevent,direct,instantiation,see,from,controller,class,see,from,method,name,class,string,object,see,from,method,call,object,see,from,mapping,name,string,see,from,method,java,lang,reflect,method,object;protected,mvc,uri,components,builder,uri,components,builder,base,url,assert,not,null,base,url,base,url,is,required,this,base,url,base,url
MvcUriComponentsBuilder -> protected MvcUriComponentsBuilder(UriComponentsBuilder baseUrl);1429888980;Default constructor. Protected to prevent direct instantiation.__@see #fromController(Class)_@see #fromMethodName(Class, String, Object...)_@see #fromMethodCall(Object)_@see #fromMappingName(String)_@see #fromMethod(java.lang.reflect.Method, Object...);protected MvcUriComponentsBuilder(UriComponentsBuilder baseUrl) {_		Assert.notNull(baseUrl, "'baseUrl' is required")__		this.baseUrl = baseUrl__	};default,constructor,protected,to,prevent,direct,instantiation,see,from,controller,class,see,from,method,name,class,string,object,see,from,method,call,object,see,from,mapping,name,string,see,from,method,java,lang,reflect,method,object;protected,mvc,uri,components,builder,uri,components,builder,base,url,assert,not,null,base,url,base,url,is,required,this,base,url,base,url
MvcUriComponentsBuilder -> protected MvcUriComponentsBuilder(UriComponentsBuilder baseUrl);1430739806;Default constructor. Protected to prevent direct instantiation.__@see #fromController(Class)_@see #fromMethodName(Class, String, Object...)_@see #fromMethodCall(Object)_@see #fromMappingName(String)_@see #fromMethod(java.lang.reflect.Method, Object...);protected MvcUriComponentsBuilder(UriComponentsBuilder baseUrl) {_		Assert.notNull(baseUrl, "'baseUrl' is required")__		this.baseUrl = baseUrl__	};default,constructor,protected,to,prevent,direct,instantiation,see,from,controller,class,see,from,method,name,class,string,object,see,from,method,call,object,see,from,mapping,name,string,see,from,method,java,lang,reflect,method,object;protected,mvc,uri,components,builder,uri,components,builder,base,url,assert,not,null,base,url,base,url,is,required,this,base,url,base,url
MvcUriComponentsBuilder -> protected MvcUriComponentsBuilder(UriComponentsBuilder baseUrl);1430747547;Default constructor. Protected to prevent direct instantiation.__@see #fromController(Class)_@see #fromMethodName(Class, String, Object...)_@see #fromMethodCall(Object)_@see #fromMappingName(String)_@see #fromMethod(java.lang.reflect.Method, Object...);protected MvcUriComponentsBuilder(UriComponentsBuilder baseUrl) {_		Assert.notNull(baseUrl, "'baseUrl' is required")__		this.baseUrl = baseUrl__	};default,constructor,protected,to,prevent,direct,instantiation,see,from,controller,class,see,from,method,name,class,string,object,see,from,method,call,object,see,from,mapping,name,string,see,from,method,java,lang,reflect,method,object;protected,mvc,uri,components,builder,uri,components,builder,base,url,assert,not,null,base,url,base,url,is,required,this,base,url,base,url
MvcUriComponentsBuilder -> protected MvcUriComponentsBuilder(UriComponentsBuilder baseUrl);1430749606;Default constructor. Protected to prevent direct instantiation.__@see #fromController(Class)_@see #fromMethodName(Class, String, Object...)_@see #fromMethodCall(Object)_@see #fromMappingName(String)_@see #fromMethod(java.lang.reflect.Method, Object...);protected MvcUriComponentsBuilder(UriComponentsBuilder baseUrl) {_		Assert.notNull(baseUrl, "'baseUrl' is required")__		this.baseUrl = baseUrl__	};default,constructor,protected,to,prevent,direct,instantiation,see,from,controller,class,see,from,method,name,class,string,object,see,from,method,call,object,see,from,mapping,name,string,see,from,method,java,lang,reflect,method,object;protected,mvc,uri,components,builder,uri,components,builder,base,url,assert,not,null,base,url,base,url,is,required,this,base,url,base,url
MvcUriComponentsBuilder -> protected MvcUriComponentsBuilder(UriComponentsBuilder baseUrl);1431975386;Default constructor. Protected to prevent direct instantiation.__@see #fromController(Class)_@see #fromMethodName(Class, String, Object...)_@see #fromMethodCall(Object)_@see #fromMappingName(String)_@see #fromMethod(java.lang.reflect.Method, Object...);protected MvcUriComponentsBuilder(UriComponentsBuilder baseUrl) {_		Assert.notNull(baseUrl, "'baseUrl' is required")__		this.baseUrl = baseUrl__	};default,constructor,protected,to,prevent,direct,instantiation,see,from,controller,class,see,from,method,name,class,string,object,see,from,method,call,object,see,from,mapping,name,string,see,from,method,java,lang,reflect,method,object;protected,mvc,uri,components,builder,uri,components,builder,base,url,assert,not,null,base,url,base,url,is,required,this,base,url,base,url
MvcUriComponentsBuilder -> protected MvcUriComponentsBuilder(UriComponentsBuilder baseUrl);1432125256;Default constructor. Protected to prevent direct instantiation.__@see #fromController(Class)_@see #fromMethodName(Class, String, Object...)_@see #fromMethodCall(Object)_@see #fromMappingName(String)_@see #fromMethod(java.lang.reflect.Method, Object...);protected MvcUriComponentsBuilder(UriComponentsBuilder baseUrl) {_		Assert.notNull(baseUrl, "'baseUrl' is required")__		this.baseUrl = baseUrl__	};default,constructor,protected,to,prevent,direct,instantiation,see,from,controller,class,see,from,method,name,class,string,object,see,from,method,call,object,see,from,mapping,name,string,see,from,method,java,lang,reflect,method,object;protected,mvc,uri,components,builder,uri,components,builder,base,url,assert,not,null,base,url,base,url,is,required,this,base,url,base,url
MvcUriComponentsBuilder -> protected MvcUriComponentsBuilder(UriComponentsBuilder baseUrl);1432156007;Default constructor. Protected to prevent direct instantiation.__@see #fromController(Class)_@see #fromMethodName(Class, String, Object...)_@see #fromMethodCall(Object)_@see #fromMappingName(String)_@see #fromMethod(java.lang.reflect.Method, Object...);protected MvcUriComponentsBuilder(UriComponentsBuilder baseUrl) {_		Assert.notNull(baseUrl, "'baseUrl' is required")__		this.baseUrl = baseUrl__	};default,constructor,protected,to,prevent,direct,instantiation,see,from,controller,class,see,from,method,name,class,string,object,see,from,method,call,object,see,from,mapping,name,string,see,from,method,java,lang,reflect,method,object;protected,mvc,uri,components,builder,uri,components,builder,base,url,assert,not,null,base,url,base,url,is,required,this,base,url,base,url
MvcUriComponentsBuilder -> protected MvcUriComponentsBuilder(UriComponentsBuilder baseUrl);1432856630;Default constructor. Protected to prevent direct instantiation.__@see #fromController(Class)_@see #fromMethodName(Class, String, Object...)_@see #fromMethodCall(Object)_@see #fromMappingName(String)_@see #fromMethod(java.lang.reflect.Method, Object...);protected MvcUriComponentsBuilder(UriComponentsBuilder baseUrl) {_		Assert.notNull(baseUrl, "'baseUrl' is required")__		this.baseUrl = baseUrl__	};default,constructor,protected,to,prevent,direct,instantiation,see,from,controller,class,see,from,method,name,class,string,object,see,from,method,call,object,see,from,mapping,name,string,see,from,method,java,lang,reflect,method,object;protected,mvc,uri,components,builder,uri,components,builder,base,url,assert,not,null,base,url,base,url,is,required,this,base,url,base,url
MvcUriComponentsBuilder -> protected MvcUriComponentsBuilder(UriComponentsBuilder baseUrl);1432857824;Default constructor. Protected to prevent direct instantiation.__@see #fromController(Class)_@see #fromMethodName(Class, String, Object...)_@see #fromMethodCall(Object)_@see #fromMappingName(String)_@see #fromMethod(java.lang.reflect.Method, Object...);protected MvcUriComponentsBuilder(UriComponentsBuilder baseUrl) {_		Assert.notNull(baseUrl, "'baseUrl' is required")__		this.baseUrl = baseUrl__	};default,constructor,protected,to,prevent,direct,instantiation,see,from,controller,class,see,from,method,name,class,string,object,see,from,method,call,object,see,from,mapping,name,string,see,from,method,java,lang,reflect,method,object;protected,mvc,uri,components,builder,uri,components,builder,base,url,assert,not,null,base,url,base,url,is,required,this,base,url,base,url
MvcUriComponentsBuilder -> protected MvcUriComponentsBuilder(UriComponentsBuilder baseUrl);1434234880;Default constructor. Protected to prevent direct instantiation.__@see #fromController(Class)_@see #fromMethodName(Class, String, Object...)_@see #fromMethodCall(Object)_@see #fromMappingName(String)_@see #fromMethod(java.lang.reflect.Method, Object...);protected MvcUriComponentsBuilder(UriComponentsBuilder baseUrl) {_		Assert.notNull(baseUrl, "'baseUrl' is required")__		this.baseUrl = baseUrl__	};default,constructor,protected,to,prevent,direct,instantiation,see,from,controller,class,see,from,method,name,class,string,object,see,from,method,call,object,see,from,mapping,name,string,see,from,method,java,lang,reflect,method,object;protected,mvc,uri,components,builder,uri,components,builder,base,url,assert,not,null,base,url,base,url,is,required,this,base,url,base,url
MvcUriComponentsBuilder -> protected MvcUriComponentsBuilder(UriComponentsBuilder baseUrl);1434484897;Default constructor. Protected to prevent direct instantiation.__@see #fromController(Class)_@see #fromMethodName(Class, String, Object...)_@see #fromMethodCall(Object)_@see #fromMappingName(String)_@see #fromMethod(java.lang.reflect.Method, Object...);protected MvcUriComponentsBuilder(UriComponentsBuilder baseUrl) {_		Assert.notNull(baseUrl, "'baseUrl' is required")__		this.baseUrl = baseUrl__	};default,constructor,protected,to,prevent,direct,instantiation,see,from,controller,class,see,from,method,name,class,string,object,see,from,method,call,object,see,from,mapping,name,string,see,from,method,java,lang,reflect,method,object;protected,mvc,uri,components,builder,uri,components,builder,base,url,assert,not,null,base,url,base,url,is,required,this,base,url,base,url
MvcUriComponentsBuilder -> protected MvcUriComponentsBuilder(UriComponentsBuilder baseUrl);1434726592;Default constructor. Protected to prevent direct instantiation.__@see #fromController(Class)_@see #fromMethodName(Class, String, Object...)_@see #fromMethodCall(Object)_@see #fromMappingName(String)_@see #fromMethod(java.lang.reflect.Method, Object...);protected MvcUriComponentsBuilder(UriComponentsBuilder baseUrl) {_		Assert.notNull(baseUrl, "'baseUrl' is required")__		this.baseUrl = baseUrl__	};default,constructor,protected,to,prevent,direct,instantiation,see,from,controller,class,see,from,method,name,class,string,object,see,from,method,call,object,see,from,mapping,name,string,see,from,method,java,lang,reflect,method,object;protected,mvc,uri,components,builder,uri,components,builder,base,url,assert,not,null,base,url,base,url,is,required,this,base,url,base,url
MvcUriComponentsBuilder -> protected MvcUriComponentsBuilder(UriComponentsBuilder baseUrl);1435615322;Default constructor. Protected to prevent direct instantiation.__@see #fromController(Class)_@see #fromMethodName(Class, String, Object...)_@see #fromMethodCall(Object)_@see #fromMappingName(String)_@see #fromMethod(java.lang.reflect.Method, Object...);protected MvcUriComponentsBuilder(UriComponentsBuilder baseUrl) {_		Assert.notNull(baseUrl, "'baseUrl' is required")__		this.baseUrl = baseUrl__	};default,constructor,protected,to,prevent,direct,instantiation,see,from,controller,class,see,from,method,name,class,string,object,see,from,method,call,object,see,from,mapping,name,string,see,from,method,java,lang,reflect,method,object;protected,mvc,uri,components,builder,uri,components,builder,base,url,assert,not,null,base,url,base,url,is,required,this,base,url,base,url
MvcUriComponentsBuilder -> protected MvcUriComponentsBuilder(UriComponentsBuilder baseUrl);1439294371;Default constructor. Protected to prevent direct instantiation._@see #fromController(Class)_@see #fromMethodName(Class, String, Object...)_@see #fromMethodCall(Object)_@see #fromMappingName(String)_@see #fromMethod(java.lang.reflect.Method, Object...);protected MvcUriComponentsBuilder(UriComponentsBuilder baseUrl) {_		Assert.notNull(baseUrl, "'baseUrl' is required")__		this.baseUrl = baseUrl__	};default,constructor,protected,to,prevent,direct,instantiation,see,from,controller,class,see,from,method,name,class,string,object,see,from,method,call,object,see,from,mapping,name,string,see,from,method,java,lang,reflect,method,object;protected,mvc,uri,components,builder,uri,components,builder,base,url,assert,not,null,base,url,base,url,is,required,this,base,url,base,url
MvcUriComponentsBuilder -> protected MvcUriComponentsBuilder(UriComponentsBuilder baseUrl);1447077465;Default constructor. Protected to prevent direct instantiation._@see #fromController(Class)_@see #fromMethodName(Class, String, Object...)_@see #fromMethodCall(Object)_@see #fromMappingName(String)_@see #fromMethod(java.lang.reflect.Method, Object...);protected MvcUriComponentsBuilder(UriComponentsBuilder baseUrl) {_		Assert.notNull(baseUrl, "'baseUrl' is required")__		this.baseUrl = baseUrl__	};default,constructor,protected,to,prevent,direct,instantiation,see,from,controller,class,see,from,method,name,class,string,object,see,from,method,call,object,see,from,mapping,name,string,see,from,method,java,lang,reflect,method,object;protected,mvc,uri,components,builder,uri,components,builder,base,url,assert,not,null,base,url,base,url,is,required,this,base,url,base,url
MvcUriComponentsBuilder -> protected MvcUriComponentsBuilder(UriComponentsBuilder baseUrl);1458830024;Default constructor. Protected to prevent direct instantiation._@see #fromController(Class)_@see #fromMethodName(Class, String, Object...)_@see #fromMethodCall(Object)_@see #fromMappingName(String)_@see #fromMethod(java.lang.reflect.Method, Object...);protected MvcUriComponentsBuilder(UriComponentsBuilder baseUrl) {_		Assert.notNull(baseUrl, "'baseUrl' is required")__		this.baseUrl = baseUrl__	};default,constructor,protected,to,prevent,direct,instantiation,see,from,controller,class,see,from,method,name,class,string,object,see,from,method,call,object,see,from,mapping,name,string,see,from,method,java,lang,reflect,method,object;protected,mvc,uri,components,builder,uri,components,builder,base,url,assert,not,null,base,url,base,url,is,required,this,base,url,base,url
MvcUriComponentsBuilder -> protected MvcUriComponentsBuilder(UriComponentsBuilder baseUrl);1461047077;Default constructor. Protected to prevent direct instantiation._@see #fromController(Class)_@see #fromMethodName(Class, String, Object...)_@see #fromMethodCall(Object)_@see #fromMappingName(String)_@see #fromMethod(java.lang.reflect.Method, Object...);protected MvcUriComponentsBuilder(UriComponentsBuilder baseUrl) {_		Assert.notNull(baseUrl, "'baseUrl' is required")__		this.baseUrl = baseUrl__	};default,constructor,protected,to,prevent,direct,instantiation,see,from,controller,class,see,from,method,name,class,string,object,see,from,method,call,object,see,from,mapping,name,string,see,from,method,java,lang,reflect,method,object;protected,mvc,uri,components,builder,uri,components,builder,base,url,assert,not,null,base,url,base,url,is,required,this,base,url,base,url
MvcUriComponentsBuilder -> protected MvcUriComponentsBuilder(UriComponentsBuilder baseUrl);1467677340;Default constructor. Protected to prevent direct instantiation._@see #fromController(Class)_@see #fromMethodName(Class, String, Object...)_@see #fromMethodCall(Object)_@see #fromMappingName(String)_@see #fromMethod(java.lang.reflect.Method, Object...);protected MvcUriComponentsBuilder(UriComponentsBuilder baseUrl) {_		Assert.notNull(baseUrl, "'baseUrl' is required")__		this.baseUrl = baseUrl__	};default,constructor,protected,to,prevent,direct,instantiation,see,from,controller,class,see,from,method,name,class,string,object,see,from,method,call,object,see,from,mapping,name,string,see,from,method,java,lang,reflect,method,object;protected,mvc,uri,components,builder,uri,components,builder,base,url,assert,not,null,base,url,base,url,is,required,this,base,url,base,url
MvcUriComponentsBuilder -> protected MvcUriComponentsBuilder(UriComponentsBuilder baseUrl);1467726769;Default constructor. Protected to prevent direct instantiation._@see #fromController(Class)_@see #fromMethodName(Class, String, Object...)_@see #fromMethodCall(Object)_@see #fromMappingName(String)_@see #fromMethod(java.lang.reflect.Method, Object...);protected MvcUriComponentsBuilder(UriComponentsBuilder baseUrl) {_		Assert.notNull(baseUrl, "'baseUrl' is required")__		this.baseUrl = baseUrl__	};default,constructor,protected,to,prevent,direct,instantiation,see,from,controller,class,see,from,method,name,class,string,object,see,from,method,call,object,see,from,mapping,name,string,see,from,method,java,lang,reflect,method,object;protected,mvc,uri,components,builder,uri,components,builder,base,url,assert,not,null,base,url,base,url,is,required,this,base,url,base,url
MvcUriComponentsBuilder -> protected MvcUriComponentsBuilder(UriComponentsBuilder baseUrl);1467730834;Default constructor. Protected to prevent direct instantiation._@see #fromController(Class)_@see #fromMethodName(Class, String, Object...)_@see #fromMethodCall(Object)_@see #fromMappingName(String)_@see #fromMethod(java.lang.reflect.Method, Object...);protected MvcUriComponentsBuilder(UriComponentsBuilder baseUrl) {_		Assert.notNull(baseUrl, "'baseUrl' is required")__		this.baseUrl = baseUrl__	};default,constructor,protected,to,prevent,direct,instantiation,see,from,controller,class,see,from,method,name,class,string,object,see,from,method,call,object,see,from,mapping,name,string,see,from,method,java,lang,reflect,method,object;protected,mvc,uri,components,builder,uri,components,builder,base,url,assert,not,null,base,url,base,url,is,required,this,base,url,base,url
MvcUriComponentsBuilder -> protected MvcUriComponentsBuilder(UriComponentsBuilder baseUrl);1467846264;Default constructor. Protected to prevent direct instantiation._@see #fromController(Class)_@see #fromMethodName(Class, String, Object...)_@see #fromMethodCall(Object)_@see #fromMappingName(String)_@see #fromMethod(java.lang.reflect.Method, Object...);protected MvcUriComponentsBuilder(UriComponentsBuilder baseUrl) {_		Assert.notNull(baseUrl, "'baseUrl' is required")__		this.baseUrl = baseUrl__	};default,constructor,protected,to,prevent,direct,instantiation,see,from,controller,class,see,from,method,name,class,string,object,see,from,method,call,object,see,from,mapping,name,string,see,from,method,java,lang,reflect,method,object;protected,mvc,uri,components,builder,uri,components,builder,base,url,assert,not,null,base,url,base,url,is,required,this,base,url,base,url
MvcUriComponentsBuilder -> protected MvcUriComponentsBuilder(UriComponentsBuilder baseUrl);1468613531;Default constructor. Protected to prevent direct instantiation._@see #fromController(Class)_@see #fromMethodName(Class, String, Object...)_@see #fromMethodCall(Object)_@see #fromMappingName(String)_@see #fromMethod(Class, Method, Object...);protected MvcUriComponentsBuilder(UriComponentsBuilder baseUrl) {_		Assert.notNull(baseUrl, "'baseUrl' is required")__		this.baseUrl = baseUrl__	};default,constructor,protected,to,prevent,direct,instantiation,see,from,controller,class,see,from,method,name,class,string,object,see,from,method,call,object,see,from,mapping,name,string,see,from,method,class,method,object;protected,mvc,uri,components,builder,uri,components,builder,base,url,assert,not,null,base,url,base,url,is,required,this,base,url,base,url
MvcUriComponentsBuilder -> protected MvcUriComponentsBuilder(UriComponentsBuilder baseUrl);1468948866;Default constructor. Protected to prevent direct instantiation._@see #fromController(Class)_@see #fromMethodName(Class, String, Object...)_@see #fromMethodCall(Object)_@see #fromMappingName(String)_@see #fromMethod(Class, Method, Object...);protected MvcUriComponentsBuilder(UriComponentsBuilder baseUrl) {_		Assert.notNull(baseUrl, "'baseUrl' is required")__		this.baseUrl = baseUrl__	};default,constructor,protected,to,prevent,direct,instantiation,see,from,controller,class,see,from,method,name,class,string,object,see,from,method,call,object,see,from,mapping,name,string,see,from,method,class,method,object;protected,mvc,uri,components,builder,uri,components,builder,base,url,assert,not,null,base,url,base,url,is,required,this,base,url,base,url
MvcUriComponentsBuilder -> protected MvcUriComponentsBuilder(UriComponentsBuilder baseUrl);1485810955;Default constructor. Protected to prevent direct instantiation._@see #fromController(Class)_@see #fromMethodName(Class, String, Object...)_@see #fromMethodCall(Object)_@see #fromMappingName(String)_@see #fromMethod(Class, Method, Object...);protected MvcUriComponentsBuilder(UriComponentsBuilder baseUrl) {_		Assert.notNull(baseUrl, "'baseUrl' is required")__		this.baseUrl = baseUrl__	};default,constructor,protected,to,prevent,direct,instantiation,see,from,controller,class,see,from,method,name,class,string,object,see,from,method,call,object,see,from,mapping,name,string,see,from,method,class,method,object;protected,mvc,uri,components,builder,uri,components,builder,base,url,assert,not,null,base,url,base,url,is,required,this,base,url,base,url
MvcUriComponentsBuilder -> protected MvcUriComponentsBuilder(UriComponentsBuilder baseUrl);1486634978;Default constructor. Protected to prevent direct instantiation._@see #fromController(Class)_@see #fromMethodName(Class, String, Object...)_@see #fromMethodCall(Object)_@see #fromMappingName(String)_@see #fromMethod(Class, Method, Object...);protected MvcUriComponentsBuilder(UriComponentsBuilder baseUrl) {_		Assert.notNull(baseUrl, "'baseUrl' is required")__		this.baseUrl = baseUrl__	};default,constructor,protected,to,prevent,direct,instantiation,see,from,controller,class,see,from,method,name,class,string,object,see,from,method,call,object,see,from,mapping,name,string,see,from,method,class,method,object;protected,mvc,uri,components,builder,uri,components,builder,base,url,assert,not,null,base,url,base,url,is,required,this,base,url,base,url
MvcUriComponentsBuilder -> protected MvcUriComponentsBuilder(UriComponentsBuilder baseUrl);1486635693;Default constructor. Protected to prevent direct instantiation._@see #fromController(Class)_@see #fromMethodName(Class, String, Object...)_@see #fromMethodCall(Object)_@see #fromMappingName(String)_@see #fromMethod(Class, Method, Object...);protected MvcUriComponentsBuilder(UriComponentsBuilder baseUrl) {_		Assert.notNull(baseUrl, "'baseUrl' is required")__		this.baseUrl = baseUrl__	};default,constructor,protected,to,prevent,direct,instantiation,see,from,controller,class,see,from,method,name,class,string,object,see,from,method,call,object,see,from,mapping,name,string,see,from,method,class,method,object;protected,mvc,uri,components,builder,uri,components,builder,base,url,assert,not,null,base,url,base,url,is,required,this,base,url,base,url
MvcUriComponentsBuilder -> protected MvcUriComponentsBuilder(UriComponentsBuilder baseUrl);1495868221;Default constructor. Protected to prevent direct instantiation._@see #fromController(Class)_@see #fromMethodName(Class, String, Object...)_@see #fromMethodCall(Object)_@see #fromMappingName(String)_@see #fromMethod(Class, Method, Object...);protected MvcUriComponentsBuilder(UriComponentsBuilder baseUrl) {_		Assert.notNull(baseUrl, "'baseUrl' is required")__		this.baseUrl = baseUrl__	};default,constructor,protected,to,prevent,direct,instantiation,see,from,controller,class,see,from,method,name,class,string,object,see,from,method,call,object,see,from,mapping,name,string,see,from,method,class,method,object;protected,mvc,uri,components,builder,uri,components,builder,base,url,assert,not,null,base,url,base,url,is,required,this,base,url,base,url
MvcUriComponentsBuilder -> protected MvcUriComponentsBuilder(UriComponentsBuilder baseUrl);1496242568;Default constructor. Protected to prevent direct instantiation._@see #fromController(Class)_@see #fromMethodName(Class, String, Object...)_@see #fromMethodCall(Object)_@see #fromMappingName(String)_@see #fromMethod(Class, Method, Object...);protected MvcUriComponentsBuilder(UriComponentsBuilder baseUrl) {_		Assert.notNull(baseUrl, "'baseUrl' is required")__		this.baseUrl = baseUrl__	};default,constructor,protected,to,prevent,direct,instantiation,see,from,controller,class,see,from,method,name,class,string,object,see,from,method,call,object,see,from,mapping,name,string,see,from,method,class,method,object;protected,mvc,uri,components,builder,uri,components,builder,base,url,assert,not,null,base,url,base,url,is,required,this,base,url,base,url
MvcUriComponentsBuilder -> protected MvcUriComponentsBuilder(UriComponentsBuilder baseUrl);1496259743;Default constructor. Protected to prevent direct instantiation._@see #fromController(Class)_@see #fromMethodName(Class, String, Object...)_@see #fromMethodCall(Object)_@see #fromMappingName(String)_@see #fromMethod(Class, Method, Object...);protected MvcUriComponentsBuilder(UriComponentsBuilder baseUrl) {_		Assert.notNull(baseUrl, "'baseUrl' is required")__		this.baseUrl = baseUrl__	};default,constructor,protected,to,prevent,direct,instantiation,see,from,controller,class,see,from,method,name,class,string,object,see,from,method,call,object,see,from,mapping,name,string,see,from,method,class,method,object;protected,mvc,uri,components,builder,uri,components,builder,base,url,assert,not,null,base,url,base,url,is,required,this,base,url,base,url
MvcUriComponentsBuilder -> protected MvcUriComponentsBuilder(UriComponentsBuilder baseUrl);1496370972;Default constructor. Protected to prevent direct instantiation._@see #fromController(Class)_@see #fromMethodName(Class, String, Object...)_@see #fromMethodCall(Object)_@see #fromMappingName(String)_@see #fromMethod(Class, Method, Object...);protected MvcUriComponentsBuilder(UriComponentsBuilder baseUrl) {_		Assert.notNull(baseUrl, "'baseUrl' is required")__		this.baseUrl = baseUrl__	};default,constructor,protected,to,prevent,direct,instantiation,see,from,controller,class,see,from,method,name,class,string,object,see,from,method,call,object,see,from,mapping,name,string,see,from,method,class,method,object;protected,mvc,uri,components,builder,uri,components,builder,base,url,assert,not,null,base,url,base,url,is,required,this,base,url,base,url
MvcUriComponentsBuilder -> protected MvcUriComponentsBuilder(UriComponentsBuilder baseUrl);1496837955;Default constructor. Protected to prevent direct instantiation._@see #fromController(Class)_@see #fromMethodName(Class, String, Object...)_@see #fromMethodCall(Object)_@see #fromMappingName(String)_@see #fromMethod(Class, Method, Object...);protected MvcUriComponentsBuilder(UriComponentsBuilder baseUrl) {_		Assert.notNull(baseUrl, "'baseUrl' is required")__		this.baseUrl = baseUrl__	};default,constructor,protected,to,prevent,direct,instantiation,see,from,controller,class,see,from,method,name,class,string,object,see,from,method,call,object,see,from,mapping,name,string,see,from,method,class,method,object;protected,mvc,uri,components,builder,uri,components,builder,base,url,assert,not,null,base,url,base,url,is,required,this,base,url,base,url
MvcUriComponentsBuilder -> protected MvcUriComponentsBuilder(UriComponentsBuilder baseUrl);1497341397;Default constructor. Protected to prevent direct instantiation._@see #fromController(Class)_@see #fromMethodName(Class, String, Object...)_@see #fromMethodCall(Object)_@see #fromMappingName(String)_@see #fromMethod(Class, Method, Object...);protected MvcUriComponentsBuilder(UriComponentsBuilder baseUrl) {_		Assert.notNull(baseUrl, "'baseUrl' is required")__		this.baseUrl = baseUrl__	};default,constructor,protected,to,prevent,direct,instantiation,see,from,controller,class,see,from,method,name,class,string,object,see,from,method,call,object,see,from,mapping,name,string,see,from,method,class,method,object;protected,mvc,uri,components,builder,uri,components,builder,base,url,assert,not,null,base,url,base,url,is,required,this,base,url,base,url
MvcUriComponentsBuilder -> protected MvcUriComponentsBuilder(UriComponentsBuilder baseUrl);1498780456;Default constructor. Protected to prevent direct instantiation._@see #fromController(Class)_@see #fromMethodName(Class, String, Object...)_@see #fromMethodCall(Object)_@see #fromMappingName(String)_@see #fromMethod(Class, Method, Object...);protected MvcUriComponentsBuilder(UriComponentsBuilder baseUrl) {_		Assert.notNull(baseUrl, "'baseUrl' is required")__		this.baseUrl = baseUrl__	};default,constructor,protected,to,prevent,direct,instantiation,see,from,controller,class,see,from,method,name,class,string,object,see,from,method,call,object,see,from,mapping,name,string,see,from,method,class,method,object;protected,mvc,uri,components,builder,uri,components,builder,base,url,assert,not,null,base,url,base,url,is,required,this,base,url,base,url
MvcUriComponentsBuilder -> protected MvcUriComponentsBuilder(UriComponentsBuilder baseUrl);1500416137;Default constructor. Protected to prevent direct instantiation._@see #fromController(Class)_@see #fromMethodName(Class, String, Object...)_@see #fromMethodCall(Object)_@see #fromMappingName(String)_@see #fromMethod(Class, Method, Object...);protected MvcUriComponentsBuilder(UriComponentsBuilder baseUrl) {_		Assert.notNull(baseUrl, "'baseUrl' is required")__		this.baseUrl = baseUrl__	};default,constructor,protected,to,prevent,direct,instantiation,see,from,controller,class,see,from,method,name,class,string,object,see,from,method,call,object,see,from,mapping,name,string,see,from,method,class,method,object;protected,mvc,uri,components,builder,uri,components,builder,base,url,assert,not,null,base,url,base,url,is,required,this,base,url,base,url
MvcUriComponentsBuilder -> protected MvcUriComponentsBuilder(UriComponentsBuilder baseUrl);1506097334;Default constructor. Protected to prevent direct instantiation._@see #fromController(Class)_@see #fromMethodName(Class, String, Object...)_@see #fromMethodCall(Object)_@see #fromMappingName(String)_@see #fromMethod(Class, Method, Object...);protected MvcUriComponentsBuilder(UriComponentsBuilder baseUrl) {_		Assert.notNull(baseUrl, "'baseUrl' is required")__		this.baseUrl = baseUrl__	};default,constructor,protected,to,prevent,direct,instantiation,see,from,controller,class,see,from,method,name,class,string,object,see,from,method,call,object,see,from,mapping,name,string,see,from,method,class,method,object;protected,mvc,uri,components,builder,uri,components,builder,base,url,assert,not,null,base,url,base,url,is,required,this,base,url,base,url
MvcUriComponentsBuilder -> protected MvcUriComponentsBuilder(UriComponentsBuilder baseUrl);1518770299;Default constructor. Protected to prevent direct instantiation._@see #fromController(Class)_@see #fromMethodName(Class, String, Object...)_@see #fromMethodCall(Object)_@see #fromMappingName(String)_@see #fromMethod(Class, Method, Object...);protected MvcUriComponentsBuilder(UriComponentsBuilder baseUrl) {_		Assert.notNull(baseUrl, "'baseUrl' is required")__		this.baseUrl = baseUrl__	};default,constructor,protected,to,prevent,direct,instantiation,see,from,controller,class,see,from,method,name,class,string,object,see,from,method,call,object,see,from,mapping,name,string,see,from,method,class,method,object;protected,mvc,uri,components,builder,uri,components,builder,base,url,assert,not,null,base,url,base,url,is,required,this,base,url,base,url
MvcUriComponentsBuilder -> protected MvcUriComponentsBuilder(UriComponentsBuilder baseUrl);1522354261;Default constructor. Protected to prevent direct instantiation._@see #fromController(Class)_@see #fromMethodName(Class, String, Object...)_@see #fromMethodCall(Object)_@see #fromMappingName(String)_@see #fromMethod(Class, Method, Object...);protected MvcUriComponentsBuilder(UriComponentsBuilder baseUrl) {_		Assert.notNull(baseUrl, "'baseUrl' is required")__		this.baseUrl = baseUrl__	};default,constructor,protected,to,prevent,direct,instantiation,see,from,controller,class,see,from,method,name,class,string,object,see,from,method,call,object,see,from,mapping,name,string,see,from,method,class,method,object;protected,mvc,uri,components,builder,uri,components,builder,base,url,assert,not,null,base,url,base,url,is,required,this,base,url,base,url
MvcUriComponentsBuilder -> protected MvcUriComponentsBuilder(UriComponentsBuilder baseUrl);1523455554;Default constructor. Protected to prevent direct instantiation._@see #fromController(Class)_@see #fromMethodName(Class, String, Object...)_@see #fromMethodCall(Object)_@see #fromMappingName(String)_@see #fromMethod(Class, Method, Object...);protected MvcUriComponentsBuilder(UriComponentsBuilder baseUrl) {_		Assert.notNull(baseUrl, "'baseUrl' is required")__		this.baseUrl = baseUrl__	};default,constructor,protected,to,prevent,direct,instantiation,see,from,controller,class,see,from,method,name,class,string,object,see,from,method,call,object,see,from,mapping,name,string,see,from,method,class,method,object;protected,mvc,uri,components,builder,uri,components,builder,base,url,assert,not,null,base,url,base,url,is,required,this,base,url,base,url
MvcUriComponentsBuilder -> protected MvcUriComponentsBuilder(UriComponentsBuilder baseUrl);1529028426;Default constructor. Protected to prevent direct instantiation._@see #fromController(Class)_@see #fromMethodName(Class, String, Object...)_@see #fromMethodCall(Object)_@see #fromMappingName(String)_@see #fromMethod(Class, Method, Object...);protected MvcUriComponentsBuilder(UriComponentsBuilder baseUrl) {_		Assert.notNull(baseUrl, "'baseUrl' is required")__		this.baseUrl = baseUrl__	};default,constructor,protected,to,prevent,direct,instantiation,see,from,controller,class,see,from,method,name,class,string,object,see,from,method,call,object,see,from,mapping,name,string,see,from,method,class,method,object;protected,mvc,uri,components,builder,uri,components,builder,base,url,assert,not,null,base,url,base,url,is,required,this,base,url,base,url
MvcUriComponentsBuilder -> protected MvcUriComponentsBuilder(UriComponentsBuilder baseUrl);1529028426;Default constructor. Protected to prevent direct instantiation._@see #fromController(Class)_@see #fromMethodName(Class, String, Object...)_@see #fromMethodCall(Object)_@see #fromMappingName(String)_@see #fromMethod(Class, Method, Object...);protected MvcUriComponentsBuilder(UriComponentsBuilder baseUrl) {_		Assert.notNull(baseUrl, "'baseUrl' is required")__		this.baseUrl = baseUrl__	};default,constructor,protected,to,prevent,direct,instantiation,see,from,controller,class,see,from,method,name,class,string,object,see,from,method,call,object,see,from,mapping,name,string,see,from,method,class,method,object;protected,mvc,uri,components,builder,uri,components,builder,base,url,assert,not,null,base,url,base,url,is,required,this,base,url,base,url
MvcUriComponentsBuilder -> protected MvcUriComponentsBuilder(UriComponentsBuilder baseUrl);1529028713;Default constructor. Protected to prevent direct instantiation._@see #fromController(Class)_@see #fromMethodName(Class, String, Object...)_@see #fromMethodCall(Object)_@see #fromMappingName(String)_@see #fromMethod(Class, Method, Object...);protected MvcUriComponentsBuilder(UriComponentsBuilder baseUrl) {_		Assert.notNull(baseUrl, "'baseUrl' is required")__		this.baseUrl = baseUrl__	};default,constructor,protected,to,prevent,direct,instantiation,see,from,controller,class,see,from,method,name,class,string,object,see,from,method,call,object,see,from,mapping,name,string,see,from,method,class,method,object;protected,mvc,uri,components,builder,uri,components,builder,base,url,assert,not,null,base,url,base,url,is,required,this,base,url,base,url
MvcUriComponentsBuilder -> protected MvcUriComponentsBuilder(UriComponentsBuilder baseUrl);1529361191;Default constructor. Protected to prevent direct instantiation._@see #fromController(Class)_@see #fromMethodName(Class, String, Object...)_@see #fromMethodCall(Object)_@see #fromMappingName(String)_@see #fromMethod(Class, Method, Object...);protected MvcUriComponentsBuilder(UriComponentsBuilder baseUrl) {_		Assert.notNull(baseUrl, "'baseUrl' is required")__		this.baseUrl = baseUrl__	};default,constructor,protected,to,prevent,direct,instantiation,see,from,controller,class,see,from,method,name,class,string,object,see,from,method,call,object,see,from,mapping,name,string,see,from,method,class,method,object;protected,mvc,uri,components,builder,uri,components,builder,base,url,assert,not,null,base,url,base,url,is,required,this,base,url,base,url
MvcUriComponentsBuilder -> protected MvcUriComponentsBuilder(UriComponentsBuilder baseUrl);1530174524;Default constructor. Protected to prevent direct instantiation._@see #fromController(Class)_@see #fromMethodName(Class, String, Object...)_@see #fromMethodCall(Object)_@see #fromMappingName(String)_@see #fromMethod(Class, Method, Object...);protected MvcUriComponentsBuilder(UriComponentsBuilder baseUrl) {_		Assert.notNull(baseUrl, "'baseUrl' is required")__		this.baseUrl = baseUrl__	};default,constructor,protected,to,prevent,direct,instantiation,see,from,controller,class,see,from,method,name,class,string,object,see,from,method,call,object,see,from,mapping,name,string,see,from,method,class,method,object;protected,mvc,uri,components,builder,uri,components,builder,base,url,assert,not,null,base,url,base,url,is,required,this,base,url,base,url
MvcUriComponentsBuilder -> protected MvcUriComponentsBuilder(UriComponentsBuilder baseUrl);1532041662;Default constructor. Protected to prevent direct instantiation._@see #fromController(Class)_@see #fromMethodName(Class, String, Object...)_@see #fromMethodCall(Object)_@see #fromMappingName(String)_@see #fromMethod(Class, Method, Object...);protected MvcUriComponentsBuilder(UriComponentsBuilder baseUrl) {_		Assert.notNull(baseUrl, "'baseUrl' is required")__		this.baseUrl = baseUrl__	};default,constructor,protected,to,prevent,direct,instantiation,see,from,controller,class,see,from,method,name,class,string,object,see,from,method,call,object,see,from,mapping,name,string,see,from,method,class,method,object;protected,mvc,uri,components,builder,uri,components,builder,base,url,assert,not,null,base,url,base,url,is,required,this,base,url,base,url
MvcUriComponentsBuilder -> protected MvcUriComponentsBuilder(UriComponentsBuilder baseUrl);1532041662;Default constructor. Protected to prevent direct instantiation._@see #fromController(Class)_@see #fromMethodName(Class, String, Object...)_@see #fromMethodCall(Object)_@see #fromMappingName(String)_@see #fromMethod(Class, Method, Object...);protected MvcUriComponentsBuilder(UriComponentsBuilder baseUrl) {_		Assert.notNull(baseUrl, "'baseUrl' is required")__		this.baseUrl = baseUrl__	};default,constructor,protected,to,prevent,direct,instantiation,see,from,controller,class,see,from,method,name,class,string,object,see,from,method,call,object,see,from,mapping,name,string,see,from,method,class,method,object;protected,mvc,uri,components,builder,uri,components,builder,base,url,assert,not,null,base,url,base,url,is,required,this,base,url,base,url
MvcUriComponentsBuilder -> protected MvcUriComponentsBuilder(UriComponentsBuilder baseUrl);1548943222;Default constructor. Protected to prevent direct instantiation._@see #fromController(Class)_@see #fromMethodName(Class, String, Object...)_@see #fromMethodCall(Object)_@see #fromMappingName(String)_@see #fromMethod(Class, Method, Object...);protected MvcUriComponentsBuilder(UriComponentsBuilder baseUrl) {_		Assert.notNull(baseUrl, "'baseUrl' is required")__		this.baseUrl = baseUrl__	};default,constructor,protected,to,prevent,direct,instantiation,see,from,controller,class,see,from,method,name,class,string,object,see,from,method,call,object,see,from,mapping,name,string,see,from,method,class,method,object;protected,mvc,uri,components,builder,uri,components,builder,base,url,assert,not,null,base,url,base,url,is,required,this,base,url,base,url
MvcUriComponentsBuilder -> public UriComponentsBuilder withMethod(Class<?> controllerType, Method method, Object... args);1431975386;An alternative to {@link #fromMethod(Class, Method, Object...)}_for use with an instance of this class created via {@link #relativeTo}.;public UriComponentsBuilder withMethod(Class<?> controllerType, Method method, Object... args) {_		return fromMethod(this.baseUrl, controllerType, method, args)__	};an,alternative,to,link,from,method,class,method,object,for,use,with,an,instance,of,this,class,created,via,link,relative,to;public,uri,components,builder,with,method,class,controller,type,method,method,object,args,return,from,method,this,base,url,controller,type,method,args
MvcUriComponentsBuilder -> public UriComponentsBuilder withMethod(Class<?> controllerType, Method method, Object... args);1432125256;An alternative to {@link #fromMethod(Class, Method, Object...)}_for use with an instance of this class created via {@link #relativeTo}.;public UriComponentsBuilder withMethod(Class<?> controllerType, Method method, Object... args) {_		return fromMethod(this.baseUrl, controllerType, method, args)__	};an,alternative,to,link,from,method,class,method,object,for,use,with,an,instance,of,this,class,created,via,link,relative,to;public,uri,components,builder,with,method,class,controller,type,method,method,object,args,return,from,method,this,base,url,controller,type,method,args
MvcUriComponentsBuilder -> public UriComponentsBuilder withMethod(Class<?> controllerType, Method method, Object... args);1432156007;An alternative to {@link #fromMethod(Class, Method, Object...)}_for use with an instance of this class created via {@link #relativeTo}.;public UriComponentsBuilder withMethod(Class<?> controllerType, Method method, Object... args) {_		return fromMethod(this.baseUrl, controllerType, method, args)__	};an,alternative,to,link,from,method,class,method,object,for,use,with,an,instance,of,this,class,created,via,link,relative,to;public,uri,components,builder,with,method,class,controller,type,method,method,object,args,return,from,method,this,base,url,controller,type,method,args
MvcUriComponentsBuilder -> public UriComponentsBuilder withMethod(Class<?> controllerType, Method method, Object... args);1432856630;An alternative to {@link #fromMethod(Class, Method, Object...)}_for use with an instance of this class created via {@link #relativeTo}.;public UriComponentsBuilder withMethod(Class<?> controllerType, Method method, Object... args) {_		return fromMethod(this.baseUrl, controllerType, method, args)__	};an,alternative,to,link,from,method,class,method,object,for,use,with,an,instance,of,this,class,created,via,link,relative,to;public,uri,components,builder,with,method,class,controller,type,method,method,object,args,return,from,method,this,base,url,controller,type,method,args
MvcUriComponentsBuilder -> public UriComponentsBuilder withMethod(Class<?> controllerType, Method method, Object... args);1432857824;An alternative to {@link #fromMethod(Class, Method, Object...)}_for use with an instance of this class created via {@link #relativeTo}.;public UriComponentsBuilder withMethod(Class<?> controllerType, Method method, Object... args) {_		return fromMethod(this.baseUrl, controllerType, method, args)__	};an,alternative,to,link,from,method,class,method,object,for,use,with,an,instance,of,this,class,created,via,link,relative,to;public,uri,components,builder,with,method,class,controller,type,method,method,object,args,return,from,method,this,base,url,controller,type,method,args
MvcUriComponentsBuilder -> public UriComponentsBuilder withMethod(Class<?> controllerType, Method method, Object... args);1434234880;An alternative to {@link #fromMethod(Class, Method, Object...)}_for use with an instance of this class created via {@link #relativeTo}.;public UriComponentsBuilder withMethod(Class<?> controllerType, Method method, Object... args) {_		return fromMethod(this.baseUrl, controllerType, method, args)__	};an,alternative,to,link,from,method,class,method,object,for,use,with,an,instance,of,this,class,created,via,link,relative,to;public,uri,components,builder,with,method,class,controller,type,method,method,object,args,return,from,method,this,base,url,controller,type,method,args
MvcUriComponentsBuilder -> public UriComponentsBuilder withMethod(Class<?> controllerType, Method method, Object... args);1434484897;An alternative to {@link #fromMethod(Class, Method, Object...)}_for use with an instance of this class created via {@link #relativeTo}.;public UriComponentsBuilder withMethod(Class<?> controllerType, Method method, Object... args) {_		return fromMethod(this.baseUrl, controllerType, method, args)__	};an,alternative,to,link,from,method,class,method,object,for,use,with,an,instance,of,this,class,created,via,link,relative,to;public,uri,components,builder,with,method,class,controller,type,method,method,object,args,return,from,method,this,base,url,controller,type,method,args
MvcUriComponentsBuilder -> public UriComponentsBuilder withMethod(Class<?> controllerType, Method method, Object... args);1434726592;An alternative to {@link #fromMethod(Class, Method, Object...)}_for use with an instance of this class created via {@link #relativeTo}.;public UriComponentsBuilder withMethod(Class<?> controllerType, Method method, Object... args) {_		return fromMethod(this.baseUrl, controllerType, method, args)__	};an,alternative,to,link,from,method,class,method,object,for,use,with,an,instance,of,this,class,created,via,link,relative,to;public,uri,components,builder,with,method,class,controller,type,method,method,object,args,return,from,method,this,base,url,controller,type,method,args
MvcUriComponentsBuilder -> public UriComponentsBuilder withMethod(Class<?> controllerType, Method method, Object... args);1435615322;An alternative to {@link #fromMethod(Class, Method, Object...)}_for use with an instance of this class created via {@link #relativeTo}.;public UriComponentsBuilder withMethod(Class<?> controllerType, Method method, Object... args) {_		return fromMethod(this.baseUrl, controllerType, method, args)__	};an,alternative,to,link,from,method,class,method,object,for,use,with,an,instance,of,this,class,created,via,link,relative,to;public,uri,components,builder,with,method,class,controller,type,method,method,object,args,return,from,method,this,base,url,controller,type,method,args
MvcUriComponentsBuilder -> public UriComponentsBuilder withMethod(Class<?> controllerType, Method method, Object... args);1439294371;An alternative to {@link #fromMethod(Class, Method, Object...)}_for use with an instance of this class created via {@link #relativeTo}._@since 4.2;public UriComponentsBuilder withMethod(Class<?> controllerType, Method method, Object... args) {_		return fromMethod(this.baseUrl, controllerType, method, args)__	};an,alternative,to,link,from,method,class,method,object,for,use,with,an,instance,of,this,class,created,via,link,relative,to,since,4,2;public,uri,components,builder,with,method,class,controller,type,method,method,object,args,return,from,method,this,base,url,controller,type,method,args
MvcUriComponentsBuilder -> public UriComponentsBuilder withMethod(Class<?> controllerType, Method method, Object... args);1447077465;An alternative to {@link #fromMethod(Class, Method, Object...)}_for use with an instance of this class created via {@link #relativeTo}._@since 4.2;public UriComponentsBuilder withMethod(Class<?> controllerType, Method method, Object... args) {_		return fromMethod(this.baseUrl, controllerType, method, args)__	};an,alternative,to,link,from,method,class,method,object,for,use,with,an,instance,of,this,class,created,via,link,relative,to,since,4,2;public,uri,components,builder,with,method,class,controller,type,method,method,object,args,return,from,method,this,base,url,controller,type,method,args
MvcUriComponentsBuilder -> public UriComponentsBuilder withMethod(Class<?> controllerType, Method method, Object... args);1458830024;An alternative to {@link #fromMethod(Class, Method, Object...)}_for use with an instance of this class created via {@link #relativeTo}._@since 4.2;public UriComponentsBuilder withMethod(Class<?> controllerType, Method method, Object... args) {_		return fromMethod(this.baseUrl, controllerType, method, args)__	};an,alternative,to,link,from,method,class,method,object,for,use,with,an,instance,of,this,class,created,via,link,relative,to,since,4,2;public,uri,components,builder,with,method,class,controller,type,method,method,object,args,return,from,method,this,base,url,controller,type,method,args
MvcUriComponentsBuilder -> public UriComponentsBuilder withMethod(Class<?> controllerType, Method method, Object... args);1461047077;An alternative to {@link #fromMethod(Class, Method, Object...)}_for use with an instance of this class created via {@link #relativeTo}._@since 4.2;public UriComponentsBuilder withMethod(Class<?> controllerType, Method method, Object... args) {_		return fromMethod(this.baseUrl, controllerType, method, args)__	};an,alternative,to,link,from,method,class,method,object,for,use,with,an,instance,of,this,class,created,via,link,relative,to,since,4,2;public,uri,components,builder,with,method,class,controller,type,method,method,object,args,return,from,method,this,base,url,controller,type,method,args
MvcUriComponentsBuilder -> public UriComponentsBuilder withMethod(Class<?> controllerType, Method method, Object... args);1467677340;An alternative to {@link #fromMethod(Class, Method, Object...)}_for use with an instance of this class created via {@link #relativeTo}._@since 4.2;public UriComponentsBuilder withMethod(Class<?> controllerType, Method method, Object... args) {_		return fromMethod(this.baseUrl, controllerType, method, args)__	};an,alternative,to,link,from,method,class,method,object,for,use,with,an,instance,of,this,class,created,via,link,relative,to,since,4,2;public,uri,components,builder,with,method,class,controller,type,method,method,object,args,return,from,method,this,base,url,controller,type,method,args
MvcUriComponentsBuilder -> public UriComponentsBuilder withMethod(Class<?> controllerType, Method method, Object... args);1467726769;An alternative to {@link #fromMethod(Class, Method, Object...)}_for use with an instance of this class created via {@link #relativeTo}._@since 4.2;public UriComponentsBuilder withMethod(Class<?> controllerType, Method method, Object... args) {_		return fromMethod(this.baseUrl, controllerType, method, args)__	};an,alternative,to,link,from,method,class,method,object,for,use,with,an,instance,of,this,class,created,via,link,relative,to,since,4,2;public,uri,components,builder,with,method,class,controller,type,method,method,object,args,return,from,method,this,base,url,controller,type,method,args
MvcUriComponentsBuilder -> public UriComponentsBuilder withMethod(Class<?> controllerType, Method method, Object... args);1467730834;An alternative to {@link #fromMethod(Class, Method, Object...)}_for use with an instance of this class created via {@link #relativeTo}._@since 4.2;public UriComponentsBuilder withMethod(Class<?> controllerType, Method method, Object... args) {_		return fromMethod(this.baseUrl, controllerType, method, args)__	};an,alternative,to,link,from,method,class,method,object,for,use,with,an,instance,of,this,class,created,via,link,relative,to,since,4,2;public,uri,components,builder,with,method,class,controller,type,method,method,object,args,return,from,method,this,base,url,controller,type,method,args
MvcUriComponentsBuilder -> public UriComponentsBuilder withMethod(Class<?> controllerType, Method method, Object... args);1467846264;An alternative to {@link #fromMethod(Class, Method, Object...)}_for use with an instance of this class created via {@link #relativeTo}._@since 4.2;public UriComponentsBuilder withMethod(Class<?> controllerType, Method method, Object... args) {_		return fromMethod(this.baseUrl, controllerType, method, args)__	};an,alternative,to,link,from,method,class,method,object,for,use,with,an,instance,of,this,class,created,via,link,relative,to,since,4,2;public,uri,components,builder,with,method,class,controller,type,method,method,object,args,return,from,method,this,base,url,controller,type,method,args
MvcUriComponentsBuilder -> public UriComponentsBuilder withMethod(Class<?> controllerType, Method method, Object... args);1468613531;An alternative to {@link #fromMethod(Class, Method, Object...)}_for use with an instance of this class created via {@link #relativeTo}._@since 4.2;public UriComponentsBuilder withMethod(Class<?> controllerType, Method method, Object... args) {_		return fromMethod(this.baseUrl, controllerType, method, args)__	};an,alternative,to,link,from,method,class,method,object,for,use,with,an,instance,of,this,class,created,via,link,relative,to,since,4,2;public,uri,components,builder,with,method,class,controller,type,method,method,object,args,return,from,method,this,base,url,controller,type,method,args
MvcUriComponentsBuilder -> public UriComponentsBuilder withMethod(Class<?> controllerType, Method method, Object... args);1468948866;An alternative to {@link #fromMethod(Class, Method, Object...)}_for use with an instance of this class created via {@link #relativeTo}._@since 4.2;public UriComponentsBuilder withMethod(Class<?> controllerType, Method method, Object... args) {_		return fromMethod(this.baseUrl, controllerType, method, args)__	};an,alternative,to,link,from,method,class,method,object,for,use,with,an,instance,of,this,class,created,via,link,relative,to,since,4,2;public,uri,components,builder,with,method,class,controller,type,method,method,object,args,return,from,method,this,base,url,controller,type,method,args
MvcUriComponentsBuilder -> public UriComponentsBuilder withMethod(Class<?> controllerType, Method method, Object... args);1485810955;An alternative to {@link #fromMethod(Class, Method, Object...)}_for use with an instance of this class created via {@link #relativeTo}._@since 4.2;public UriComponentsBuilder withMethod(Class<?> controllerType, Method method, Object... args) {_		return fromMethod(this.baseUrl, controllerType, method, args)__	};an,alternative,to,link,from,method,class,method,object,for,use,with,an,instance,of,this,class,created,via,link,relative,to,since,4,2;public,uri,components,builder,with,method,class,controller,type,method,method,object,args,return,from,method,this,base,url,controller,type,method,args
MvcUriComponentsBuilder -> public UriComponentsBuilder withMethod(Class<?> controllerType, Method method, Object... args);1486634978;An alternative to {@link #fromMethod(Class, Method, Object...)}_for use with an instance of this class created via {@link #relativeTo}._@since 4.2;public UriComponentsBuilder withMethod(Class<?> controllerType, Method method, Object... args) {_		return fromMethod(this.baseUrl, controllerType, method, args)__	};an,alternative,to,link,from,method,class,method,object,for,use,with,an,instance,of,this,class,created,via,link,relative,to,since,4,2;public,uri,components,builder,with,method,class,controller,type,method,method,object,args,return,from,method,this,base,url,controller,type,method,args
MvcUriComponentsBuilder -> public UriComponentsBuilder withMethod(Class<?> controllerType, Method method, Object... args);1486635693;An alternative to {@link #fromMethod(Class, Method, Object...)}_for use with an instance of this class created via {@link #relativeTo}._@since 4.2;public UriComponentsBuilder withMethod(Class<?> controllerType, Method method, Object... args) {_		return fromMethod(this.baseUrl, controllerType, method, args)__	};an,alternative,to,link,from,method,class,method,object,for,use,with,an,instance,of,this,class,created,via,link,relative,to,since,4,2;public,uri,components,builder,with,method,class,controller,type,method,method,object,args,return,from,method,this,base,url,controller,type,method,args
MvcUriComponentsBuilder -> public UriComponentsBuilder withMethod(Class<?> controllerType, Method method, Object... args);1495868221;An alternative to {@link #fromMethod(Class, Method, Object...)}_for use with an instance of this class created via {@link #relativeTo}._@since 4.2;public UriComponentsBuilder withMethod(Class<?> controllerType, Method method, Object... args) {_		return fromMethod(this.baseUrl, controllerType, method, args)__	};an,alternative,to,link,from,method,class,method,object,for,use,with,an,instance,of,this,class,created,via,link,relative,to,since,4,2;public,uri,components,builder,with,method,class,controller,type,method,method,object,args,return,from,method,this,base,url,controller,type,method,args
MvcUriComponentsBuilder -> public UriComponentsBuilder withMethod(Class<?> controllerType, Method method, Object... args);1496242568;An alternative to {@link #fromMethod(Class, Method, Object...)}_for use with an instance of this class created via {@link #relativeTo}._@since 4.2;public UriComponentsBuilder withMethod(Class<?> controllerType, Method method, Object... args) {_		return fromMethod(this.baseUrl, controllerType, method, args)__	};an,alternative,to,link,from,method,class,method,object,for,use,with,an,instance,of,this,class,created,via,link,relative,to,since,4,2;public,uri,components,builder,with,method,class,controller,type,method,method,object,args,return,from,method,this,base,url,controller,type,method,args
MvcUriComponentsBuilder -> public UriComponentsBuilder withMethod(Class<?> controllerType, Method method, Object... args);1496259743;An alternative to {@link #fromMethod(Class, Method, Object...)}_for use with an instance of this class created via {@link #relativeTo}._@since 4.2;public UriComponentsBuilder withMethod(Class<?> controllerType, Method method, Object... args) {_		return fromMethod(this.baseUrl, controllerType, method, args)__	};an,alternative,to,link,from,method,class,method,object,for,use,with,an,instance,of,this,class,created,via,link,relative,to,since,4,2;public,uri,components,builder,with,method,class,controller,type,method,method,object,args,return,from,method,this,base,url,controller,type,method,args
MvcUriComponentsBuilder -> public UriComponentsBuilder withMethod(Class<?> controllerType, Method method, Object... args);1496370972;An alternative to {@link #fromMethod(Class, Method, Object...)}_for use with an instance of this class created via {@link #relativeTo}._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@since 4.2;public UriComponentsBuilder withMethod(Class<?> controllerType, Method method, Object... args) {_		return fromMethod(this.baseUrl, controllerType, method, args)__	};an,alternative,to,link,from,method,class,method,object,for,use,with,an,instance,of,this,class,created,via,link,relative,to,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,since,4,2;public,uri,components,builder,with,method,class,controller,type,method,method,object,args,return,from,method,this,base,url,controller,type,method,args
MvcUriComponentsBuilder -> public UriComponentsBuilder withMethod(Class<?> controllerType, Method method, Object... args);1496837955;An alternative to {@link #fromMethod(Class, Method, Object...)}_for use with an instance of this class created via {@link #relativeTo}._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@since 4.2;public UriComponentsBuilder withMethod(Class<?> controllerType, Method method, Object... args) {_		return fromMethod(this.baseUrl, controllerType, method, args)__	};an,alternative,to,link,from,method,class,method,object,for,use,with,an,instance,of,this,class,created,via,link,relative,to,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,since,4,2;public,uri,components,builder,with,method,class,controller,type,method,method,object,args,return,from,method,this,base,url,controller,type,method,args
MvcUriComponentsBuilder -> public UriComponentsBuilder withMethod(Class<?> controllerType, Method method, Object... args);1497341397;An alternative to {@link #fromMethod(Class, Method, Object...)}_for use with an instance of this class created via {@link #relativeTo}._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@since 4.2;public UriComponentsBuilder withMethod(Class<?> controllerType, Method method, Object... args) {_		return fromMethod(this.baseUrl, controllerType, method, args)__	};an,alternative,to,link,from,method,class,method,object,for,use,with,an,instance,of,this,class,created,via,link,relative,to,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,since,4,2;public,uri,components,builder,with,method,class,controller,type,method,method,object,args,return,from,method,this,base,url,controller,type,method,args
MvcUriComponentsBuilder -> public UriComponentsBuilder withMethod(Class<?> controllerType, Method method, Object... args);1498780456;An alternative to {@link #fromMethod(Class, Method, Object...)}_for use with an instance of this class created via {@link #relativeTo}._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@since 4.2;public UriComponentsBuilder withMethod(Class<?> controllerType, Method method, Object... args) {_		return fromMethod(this.baseUrl, controllerType, method, args)__	};an,alternative,to,link,from,method,class,method,object,for,use,with,an,instance,of,this,class,created,via,link,relative,to,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,since,4,2;public,uri,components,builder,with,method,class,controller,type,method,method,object,args,return,from,method,this,base,url,controller,type,method,args
MvcUriComponentsBuilder -> public UriComponentsBuilder withMethod(Class<?> controllerType, Method method, Object... args);1500416137;An alternative to {@link #fromMethod(Class, Method, Object...)}_for use with an instance of this class created via {@link #relativeTo}._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@since 4.2;public UriComponentsBuilder withMethod(Class<?> controllerType, Method method, Object... args) {_		return fromMethod(this.baseUrl, controllerType, method, args)__	};an,alternative,to,link,from,method,class,method,object,for,use,with,an,instance,of,this,class,created,via,link,relative,to,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,since,4,2;public,uri,components,builder,with,method,class,controller,type,method,method,object,args,return,from,method,this,base,url,controller,type,method,args
MvcUriComponentsBuilder -> public UriComponentsBuilder withMethod(Class<?> controllerType, Method method, Object... args);1506097334;An alternative to {@link #fromMethod(Class, Method, Object...)}_for use with an instance of this class created via {@link #relativeTo}._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@since 4.2;public UriComponentsBuilder withMethod(Class<?> controllerType, Method method, Object... args) {_		return fromMethod(this.baseUrl, controllerType, method, args)__	};an,alternative,to,link,from,method,class,method,object,for,use,with,an,instance,of,this,class,created,via,link,relative,to,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,since,4,2;public,uri,components,builder,with,method,class,controller,type,method,method,object,args,return,from,method,this,base,url,controller,type,method,args
MvcUriComponentsBuilder -> public UriComponentsBuilder withMethod(Class<?> controllerType, Method method, Object... args);1518770299;An alternative to {@link #fromMethod(Class, Method, Object...)}_for use with an instance of this class created via {@link #relativeTo}._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@since 4.2;public UriComponentsBuilder withMethod(Class<?> controllerType, Method method, Object... args) {_		return fromMethod(this.baseUrl, controllerType, method, args)__	};an,alternative,to,link,from,method,class,method,object,for,use,with,an,instance,of,this,class,created,via,link,relative,to,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,since,4,2;public,uri,components,builder,with,method,class,controller,type,method,method,object,args,return,from,method,this,base,url,controller,type,method,args
MvcUriComponentsBuilder -> public UriComponentsBuilder withMethod(Class<?> controllerType, Method method, Object... args);1522354261;An alternative to {@link #fromMethod(Class, Method, Object...)}_for use with an instance of this class created via {@link #relativeTo}._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@since 4.2;public UriComponentsBuilder withMethod(Class<?> controllerType, Method method, Object... args) {_		return fromMethod(this.baseUrl, controllerType, method, args)__	};an,alternative,to,link,from,method,class,method,object,for,use,with,an,instance,of,this,class,created,via,link,relative,to,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,since,4,2;public,uri,components,builder,with,method,class,controller,type,method,method,object,args,return,from,method,this,base,url,controller,type,method,args
MvcUriComponentsBuilder -> public UriComponentsBuilder withMethod(Class<?> controllerType, Method method, Object... args);1523455554;An alternative to {@link #fromMethod(Class, Method, Object...)}_for use with an instance of this class created via {@link #relativeTo}._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@since 4.2;public UriComponentsBuilder withMethod(Class<?> controllerType, Method method, Object... args) {_		return fromMethod(this.baseUrl, controllerType, method, args)__	};an,alternative,to,link,from,method,class,method,object,for,use,with,an,instance,of,this,class,created,via,link,relative,to,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,since,4,2;public,uri,components,builder,with,method,class,controller,type,method,method,object,args,return,from,method,this,base,url,controller,type,method,args
MvcUriComponentsBuilder -> public UriComponentsBuilder withMethod(Class<?> controllerType, Method method, Object... args);1529028426;An alternative to {@link #fromMethod(Class, Method, Object...)}_for use with an instance of this class created via {@link #relativeTo}._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@since 4.2;public UriComponentsBuilder withMethod(Class<?> controllerType, Method method, Object... args) {_		return fromMethod(this.baseUrl, controllerType, method, args)__	};an,alternative,to,link,from,method,class,method,object,for,use,with,an,instance,of,this,class,created,via,link,relative,to,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,since,4,2;public,uri,components,builder,with,method,class,controller,type,method,method,object,args,return,from,method,this,base,url,controller,type,method,args
MvcUriComponentsBuilder -> public UriComponentsBuilder withMethod(Class<?> controllerType, Method method, Object... args);1529028426;An alternative to {@link #fromMethod(Class, Method, Object...)}_for use with an instance of this class created via {@link #relativeTo}._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@since 4.2;public UriComponentsBuilder withMethod(Class<?> controllerType, Method method, Object... args) {_		return fromMethod(this.baseUrl, controllerType, method, args)__	};an,alternative,to,link,from,method,class,method,object,for,use,with,an,instance,of,this,class,created,via,link,relative,to,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,since,4,2;public,uri,components,builder,with,method,class,controller,type,method,method,object,args,return,from,method,this,base,url,controller,type,method,args
MvcUriComponentsBuilder -> public UriComponentsBuilder withMethod(Class<?> controllerType, Method method, Object... args);1529028713;An alternative to {@link #fromMethod(Class, Method, Object...)}_for use with an instance of this class created via {@link #relativeTo}._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@since 4.2;public UriComponentsBuilder withMethod(Class<?> controllerType, Method method, Object... args) {_		return fromMethod(this.baseUrl, controllerType, method, args)__	};an,alternative,to,link,from,method,class,method,object,for,use,with,an,instance,of,this,class,created,via,link,relative,to,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,since,4,2;public,uri,components,builder,with,method,class,controller,type,method,method,object,args,return,from,method,this,base,url,controller,type,method,args
MvcUriComponentsBuilder -> public UriComponentsBuilder withMethod(Class<?> controllerType, Method method, Object... args);1529361191;An alternative to {@link #fromMethod(Class, Method, Object...)}_for use with an instance of this class created via {@link #relativeTo}._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@since 4.2;public UriComponentsBuilder withMethod(Class<?> controllerType, Method method, Object... args) {_		return fromMethod(this.baseUrl, controllerType, method, args)__	};an,alternative,to,link,from,method,class,method,object,for,use,with,an,instance,of,this,class,created,via,link,relative,to,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,since,4,2;public,uri,components,builder,with,method,class,controller,type,method,method,object,args,return,from,method,this,base,url,controller,type,method,args
MvcUriComponentsBuilder -> public UriComponentsBuilder withMethod(Class<?> controllerType, Method method, Object... args);1530174524;An alternative to {@link #fromMethod(Class, Method, Object...)}_for use with an instance of this class created via {@link #relativeTo}._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@since 4.2;public UriComponentsBuilder withMethod(Class<?> controllerType, Method method, Object... args) {_		return fromMethod(this.baseUrl, controllerType, method, args)__	};an,alternative,to,link,from,method,class,method,object,for,use,with,an,instance,of,this,class,created,via,link,relative,to,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,since,4,2;public,uri,components,builder,with,method,class,controller,type,method,method,object,args,return,from,method,this,base,url,controller,type,method,args
MvcUriComponentsBuilder -> public UriComponentsBuilder withMethod(Class<?> controllerType, Method method, Object... args);1532041662;An alternative to {@link #fromMethod(Class, Method, Object...)}_for use with an instance of this class created via {@link #relativeTo}._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@since 4.2;public UriComponentsBuilder withMethod(Class<?> controllerType, Method method, Object... args) {_		return fromMethod(this.baseUrl, controllerType, method, args)__	};an,alternative,to,link,from,method,class,method,object,for,use,with,an,instance,of,this,class,created,via,link,relative,to,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,since,4,2;public,uri,components,builder,with,method,class,controller,type,method,method,object,args,return,from,method,this,base,url,controller,type,method,args
MvcUriComponentsBuilder -> public UriComponentsBuilder withMethod(Class<?> controllerType, Method method, Object... args);1532041662;An alternative to {@link #fromMethod(Class, Method, Object...)}_for use with an instance of this class created via {@link #relativeTo}._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@since 4.2;public UriComponentsBuilder withMethod(Class<?> controllerType, Method method, Object... args) {_		return fromMethod(this.baseUrl, controllerType, method, args)__	};an,alternative,to,link,from,method,class,method,object,for,use,with,an,instance,of,this,class,created,via,link,relative,to,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,since,4,2;public,uri,components,builder,with,method,class,controller,type,method,method,object,args,return,from,method,this,base,url,controller,type,method,args
MvcUriComponentsBuilder -> public UriComponentsBuilder withMethod(Class<?> controllerType, Method method, Object... args);1548943222;An alternative to {@link #fromMethod(Class, Method, Object...)}_for use with an instance of this class created via {@link #relativeTo}._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@since 4.2;public UriComponentsBuilder withMethod(Class<?> controllerType, Method method, Object... args) {_		return fromMethod(this.baseUrl, controllerType, method, args)__	};an,alternative,to,link,from,method,class,method,object,for,use,with,an,instance,of,this,class,created,via,link,relative,to,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,since,4,2;public,uri,components,builder,with,method,class,controller,type,method,method,object,args,return,from,method,this,base,url,controller,type,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMappingName(String name, Object... argumentValues);1399404473;Create a {@link UriComponentsBuilder} from a request mapping identified_by name. The configured_{@link org.springframework.web.servlet.handler.HandlerMethodMappingNamingStrategy_HandlerMethodMappingNamingStrategy} assigns a default name to every_{@code @RequestMapping} method but an explicit name may also be assigned_through the {@code @RequestMapping} name attribute.__<p>This is intended for use in EL expressions, typically in JSPs or other_view templates, which can use the convenience method:_{@link org.springframework.web.servlet.support.RequestContext#getMvcUrl(String, Object...)_RequestContext.getMvcUrl(String, Object...)}).__<p>The default naming convention for mappings is based on the capital_letters of the class name, followed by "#" as a separator, and the method_name. For example "TC#getFoo" for a class named TestController with method_getFoo. Use explicit names where the naming convention does not produce_unique results.__@param name the mapping name_@param argumentValues argument values for the controller method_ those values_are important for {@code @RequestParam} and {@code @PathVariable} arguments_but may be passed as {@code null} otherwise.__@return the UriComponentsBuilder__@throws java.lang.IllegalStateException if the mapping name is not found_or there is no unique match;public static UriComponentsBuilder fromMappingName(String name, Object... argumentValues) {_		RequestMappingInfoHandlerMapping hm = getRequestMappingInfoHandlerMapping()__		List<HandlerMethod> handlerMethods = hm.getHandlerMethodsForMappingName(name)__		Assert.state(handlerMethods != null, "Mapping name not found: " + name)__		Assert.state(handlerMethods.size() == 1, "No unique match for mapping name " + name + ": " + handlerMethods)__		return fromMethod(handlerMethods.get(0).getMethod(), argumentValues)__	};create,a,link,uri,components,builder,from,a,request,mapping,identified,by,name,the,configured,link,org,springframework,web,servlet,handler,handler,method,mapping,naming,strategy,handler,method,mapping,naming,strategy,assigns,a,default,name,to,every,code,request,mapping,method,but,an,explicit,name,may,also,be,assigned,through,the,code,request,mapping,name,attribute,p,this,is,intended,for,use,in,el,expressions,typically,in,jsps,or,other,view,templates,which,can,use,the,convenience,method,link,org,springframework,web,servlet,support,request,context,get,mvc,url,string,object,request,context,get,mvc,url,string,object,p,the,default,naming,convention,for,mappings,is,based,on,the,capital,letters,of,the,class,name,followed,by,as,a,separator,and,the,method,name,for,example,tc,get,foo,for,a,class,named,test,controller,with,method,get,foo,use,explicit,names,where,the,naming,convention,does,not,produce,unique,results,param,name,the,mapping,name,param,argument,values,argument,values,for,the,controller,method,those,values,are,important,for,code,request,param,and,code,path,variable,arguments,but,may,be,passed,as,code,null,otherwise,return,the,uri,components,builder,throws,java,lang,illegal,state,exception,if,the,mapping,name,is,not,found,or,there,is,no,unique,match;public,static,uri,components,builder,from,mapping,name,string,name,object,argument,values,request,mapping,info,handler,mapping,hm,get,request,mapping,info,handler,mapping,list,handler,method,handler,methods,hm,get,handler,methods,for,mapping,name,name,assert,state,handler,methods,null,mapping,name,not,found,name,assert,state,handler,methods,size,1,no,unique,match,for,mapping,name,name,handler,methods,return,from,method,handler,methods,get,0,get,method,argument,values
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMappingName(String name, Object... argumentValues);1400538909;Create a {@link UriComponentsBuilder} from a request mapping identified_by name. The configured_{@link org.springframework.web.servlet.handler.HandlerMethodMappingNamingStrategy_HandlerMethodMappingNamingStrategy} assigns a default name to every_{@code @RequestMapping} method but an explicit name may also be assigned_through the {@code @RequestMapping} name attribute._<p>This is intended for use in EL expressions, typically in JSPs or other_view templates, which can use the convenience method {@link #toUriString()}._<p>The default naming convention for mappings is based on the capital_letters of the class name, followed by "#" as a separator, and the method_name. For example "TC#getFoo" for a class named TestController with method_getFoo. Use explicit names where the naming convention does not produce_unique results._@param name the mapping name_@param argumentValues argument values for the controller method_ those values_are important for {@code @RequestParam} and {@code @PathVariable} arguments_but may be passed as {@code null} otherwise._@return the UriComponentsBuilder_@throws IllegalStateException if the mapping name is not found or there is no unique match;public static UriComponentsBuilder fromMappingName(String name, Object... argumentValues) {_		RequestMappingInfoHandlerMapping hm = getRequestMappingInfoHandlerMapping()__		List<HandlerMethod> handlerMethods = hm.getHandlerMethodsForMappingName(name)__		Assert.state(handlerMethods != null, "Mapping name not found: " + name)__		Assert.state(handlerMethods.size() == 1, "No unique match for mapping name " + name + ": " + handlerMethods)__		return fromMethod(handlerMethods.get(0).getMethod(), argumentValues)__	};create,a,link,uri,components,builder,from,a,request,mapping,identified,by,name,the,configured,link,org,springframework,web,servlet,handler,handler,method,mapping,naming,strategy,handler,method,mapping,naming,strategy,assigns,a,default,name,to,every,code,request,mapping,method,but,an,explicit,name,may,also,be,assigned,through,the,code,request,mapping,name,attribute,p,this,is,intended,for,use,in,el,expressions,typically,in,jsps,or,other,view,templates,which,can,use,the,convenience,method,link,to,uri,string,p,the,default,naming,convention,for,mappings,is,based,on,the,capital,letters,of,the,class,name,followed,by,as,a,separator,and,the,method,name,for,example,tc,get,foo,for,a,class,named,test,controller,with,method,get,foo,use,explicit,names,where,the,naming,convention,does,not,produce,unique,results,param,name,the,mapping,name,param,argument,values,argument,values,for,the,controller,method,those,values,are,important,for,code,request,param,and,code,path,variable,arguments,but,may,be,passed,as,code,null,otherwise,return,the,uri,components,builder,throws,illegal,state,exception,if,the,mapping,name,is,not,found,or,there,is,no,unique,match;public,static,uri,components,builder,from,mapping,name,string,name,object,argument,values,request,mapping,info,handler,mapping,hm,get,request,mapping,info,handler,mapping,list,handler,method,handler,methods,hm,get,handler,methods,for,mapping,name,name,assert,state,handler,methods,null,mapping,name,not,found,name,assert,state,handler,methods,size,1,no,unique,match,for,mapping,name,name,handler,methods,return,from,method,handler,methods,get,0,get,method,argument,values
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMappingName(String name, Object... argumentValues);1400542981;Create a {@link UriComponentsBuilder} from a request mapping identified_by name. The configured_{@link org.springframework.web.servlet.handler.HandlerMethodMappingNamingStrategy_HandlerMethodMappingNamingStrategy} assigns a default name to every_{@code @RequestMapping} method but an explicit name may also be assigned_through the {@code @RequestMapping} name attribute._<p>This is intended for use in EL expressions, typically in JSPs or other_view templates, which can use the convenience method {@link #toUriString()}._<p>The default naming convention for mappings is based on the capital_letters of the class name, followed by "#" as a separator, and the method_name. For example "TC#getFoo" for a class named TestController with method_getFoo. Use explicit names where the naming convention does not produce_unique results._@param name the mapping name_@param argumentValues argument values for the controller method_ those values_are important for {@code @RequestParam} and {@code @PathVariable} arguments_but may be passed as {@code null} otherwise._@return the UriComponentsBuilder_@throws IllegalArgumentException if the mapping name is not found or_if there is no unique match_@since 4.1;public static UriComponentsBuilder fromMappingName(String name, Object... argumentValues) {_		RequestMappingInfoHandlerMapping hm = getRequestMappingInfoHandlerMapping()__		List<HandlerMethod> handlerMethods = hm.getHandlerMethodsForMappingName(name)__		if (handlerMethods == null) {_			throw new IllegalArgumentException("Mapping name not found: " + name)__		}_		if (handlerMethods.size() != 1) {_			throw new IllegalArgumentException("No unique match for mapping name " + name + ": " + handlerMethods)__		}_		return fromMethod(handlerMethods.get(0).getMethod(), argumentValues)__	};create,a,link,uri,components,builder,from,a,request,mapping,identified,by,name,the,configured,link,org,springframework,web,servlet,handler,handler,method,mapping,naming,strategy,handler,method,mapping,naming,strategy,assigns,a,default,name,to,every,code,request,mapping,method,but,an,explicit,name,may,also,be,assigned,through,the,code,request,mapping,name,attribute,p,this,is,intended,for,use,in,el,expressions,typically,in,jsps,or,other,view,templates,which,can,use,the,convenience,method,link,to,uri,string,p,the,default,naming,convention,for,mappings,is,based,on,the,capital,letters,of,the,class,name,followed,by,as,a,separator,and,the,method,name,for,example,tc,get,foo,for,a,class,named,test,controller,with,method,get,foo,use,explicit,names,where,the,naming,convention,does,not,produce,unique,results,param,name,the,mapping,name,param,argument,values,argument,values,for,the,controller,method,those,values,are,important,for,code,request,param,and,code,path,variable,arguments,but,may,be,passed,as,code,null,otherwise,return,the,uri,components,builder,throws,illegal,argument,exception,if,the,mapping,name,is,not,found,or,if,there,is,no,unique,match,since,4,1;public,static,uri,components,builder,from,mapping,name,string,name,object,argument,values,request,mapping,info,handler,mapping,hm,get,request,mapping,info,handler,mapping,list,handler,method,handler,methods,hm,get,handler,methods,for,mapping,name,name,if,handler,methods,null,throw,new,illegal,argument,exception,mapping,name,not,found,name,if,handler,methods,size,1,throw,new,illegal,argument,exception,no,unique,match,for,mapping,name,name,handler,methods,return,from,method,handler,methods,get,0,get,method,argument,values
MvcUriComponentsBuilder -> @Deprecated 	public static UriComponentsBuilder fromMethod(Method method, Object... args);1431975386;See {@link #fromMethod(Class, Method, Object...)}._@deprecated as of 4.2 this is deprecated in favor of the overloaded_method that also accepts a controllerType.;@Deprecated_	public static UriComponentsBuilder fromMethod(Method method, Object... args) {_		return fromMethodInternal(null, method.getDeclaringClass(), method, args)__	};see,link,from,method,class,method,object,deprecated,as,of,4,2,this,is,deprecated,in,favor,of,the,overloaded,method,that,also,accepts,a,controller,type;deprecated,public,static,uri,components,builder,from,method,method,method,object,args,return,from,method,internal,null,method,get,declaring,class,method,args
MvcUriComponentsBuilder -> @Deprecated 	public static UriComponentsBuilder fromMethod(Method method, Object... args);1432125256;See {@link #fromMethod(Class, Method, Object...)}._@deprecated as of 4.2 this is deprecated in favor of the overloaded_method that also accepts a controllerType.;@Deprecated_	public static UriComponentsBuilder fromMethod(Method method, Object... args) {_		return fromMethodInternal(null, method.getDeclaringClass(), method, args)__	};see,link,from,method,class,method,object,deprecated,as,of,4,2,this,is,deprecated,in,favor,of,the,overloaded,method,that,also,accepts,a,controller,type;deprecated,public,static,uri,components,builder,from,method,method,method,object,args,return,from,method,internal,null,method,get,declaring,class,method,args
MvcUriComponentsBuilder -> @Deprecated 	public static UriComponentsBuilder fromMethod(Method method, Object... args);1432156007;See {@link #fromMethod(Class, Method, Object...)}._@deprecated as of 4.2 this is deprecated in favor of the overloaded_method that also accepts a controllerType.;@Deprecated_	public static UriComponentsBuilder fromMethod(Method method, Object... args) {_		return fromMethodInternal(null, method.getDeclaringClass(), method, args)__	};see,link,from,method,class,method,object,deprecated,as,of,4,2,this,is,deprecated,in,favor,of,the,overloaded,method,that,also,accepts,a,controller,type;deprecated,public,static,uri,components,builder,from,method,method,method,object,args,return,from,method,internal,null,method,get,declaring,class,method,args
MvcUriComponentsBuilder -> @Deprecated 	public static UriComponentsBuilder fromMethod(Method method, Object... args);1432856630;See {@link #fromMethod(Class, Method, Object...)}._@deprecated as of 4.2 this is deprecated in favor of the overloaded_method that also accepts a controllerType.;@Deprecated_	public static UriComponentsBuilder fromMethod(Method method, Object... args) {_		return fromMethodInternal(null, method.getDeclaringClass(), method, args)__	};see,link,from,method,class,method,object,deprecated,as,of,4,2,this,is,deprecated,in,favor,of,the,overloaded,method,that,also,accepts,a,controller,type;deprecated,public,static,uri,components,builder,from,method,method,method,object,args,return,from,method,internal,null,method,get,declaring,class,method,args
MvcUriComponentsBuilder -> @Deprecated 	public static UriComponentsBuilder fromMethod(Method method, Object... args);1432857824;See {@link #fromMethod(Class, Method, Object...)}._@deprecated as of 4.2 this is deprecated in favor of the overloaded_method that also accepts a controllerType.;@Deprecated_	public static UriComponentsBuilder fromMethod(Method method, Object... args) {_		return fromMethodInternal(null, method.getDeclaringClass(), method, args)__	};see,link,from,method,class,method,object,deprecated,as,of,4,2,this,is,deprecated,in,favor,of,the,overloaded,method,that,also,accepts,a,controller,type;deprecated,public,static,uri,components,builder,from,method,method,method,object,args,return,from,method,internal,null,method,get,declaring,class,method,args
MvcUriComponentsBuilder -> @Deprecated 	public static UriComponentsBuilder fromMethod(Method method, Object... args);1434234880;See {@link #fromMethod(Class, Method, Object...)}._@deprecated as of 4.2 this is deprecated in favor of the overloaded_method that also accepts a controllerType.;@Deprecated_	public static UriComponentsBuilder fromMethod(Method method, Object... args) {_		return fromMethodInternal(null, method.getDeclaringClass(), method, args)__	};see,link,from,method,class,method,object,deprecated,as,of,4,2,this,is,deprecated,in,favor,of,the,overloaded,method,that,also,accepts,a,controller,type;deprecated,public,static,uri,components,builder,from,method,method,method,object,args,return,from,method,internal,null,method,get,declaring,class,method,args
MvcUriComponentsBuilder -> @Deprecated 	public static UriComponentsBuilder fromMethod(Method method, Object... args);1434484897;See {@link #fromMethod(Class, Method, Object...)}._@deprecated as of 4.2 this is deprecated in favor of the overloaded_method that also accepts a controllerType.;@Deprecated_	public static UriComponentsBuilder fromMethod(Method method, Object... args) {_		return fromMethodInternal(null, method.getDeclaringClass(), method, args)__	};see,link,from,method,class,method,object,deprecated,as,of,4,2,this,is,deprecated,in,favor,of,the,overloaded,method,that,also,accepts,a,controller,type;deprecated,public,static,uri,components,builder,from,method,method,method,object,args,return,from,method,internal,null,method,get,declaring,class,method,args
MvcUriComponentsBuilder -> @Deprecated 	public static UriComponentsBuilder fromMethod(Method method, Object... args);1434726592;See {@link #fromMethod(Class, Method, Object...)}._@deprecated as of 4.2 this is deprecated in favor of the overloaded_method that also accepts a controllerType.;@Deprecated_	public static UriComponentsBuilder fromMethod(Method method, Object... args) {_		return fromMethodInternal(null, method.getDeclaringClass(), method, args)__	};see,link,from,method,class,method,object,deprecated,as,of,4,2,this,is,deprecated,in,favor,of,the,overloaded,method,that,also,accepts,a,controller,type;deprecated,public,static,uri,components,builder,from,method,method,method,object,args,return,from,method,internal,null,method,get,declaring,class,method,args
MvcUriComponentsBuilder -> @Deprecated 	public static UriComponentsBuilder fromMethod(Method method, Object... args);1435615322;See {@link #fromMethod(Class, Method, Object...)}._@deprecated as of 4.2 this is deprecated in favor of the overloaded_method that also accepts a controllerType.;@Deprecated_	public static UriComponentsBuilder fromMethod(Method method, Object... args) {_		return fromMethodInternal(null, method.getDeclaringClass(), method, args)__	};see,link,from,method,class,method,object,deprecated,as,of,4,2,this,is,deprecated,in,favor,of,the,overloaded,method,that,also,accepts,a,controller,type;deprecated,public,static,uri,components,builder,from,method,method,method,object,args,return,from,method,internal,null,method,get,declaring,class,method,args
MvcUriComponentsBuilder -> @Deprecated 	public static UriComponentsBuilder fromMethod(Method method, Object... args);1439294371;@see #fromMethod(Class, Method, Object...)_@see #fromMethod(UriComponentsBuilder, Class, Method, Object...)_@deprecated as of 4.2, this is deprecated in favor of the overloaded_method that also accepts a controllerType argument;@Deprecated_	public static UriComponentsBuilder fromMethod(Method method, Object... args) {_		return fromMethodInternal(null, method.getDeclaringClass(), method, args)__	};see,from,method,class,method,object,see,from,method,uri,components,builder,class,method,object,deprecated,as,of,4,2,this,is,deprecated,in,favor,of,the,overloaded,method,that,also,accepts,a,controller,type,argument;deprecated,public,static,uri,components,builder,from,method,method,method,object,args,return,from,method,internal,null,method,get,declaring,class,method,args
MvcUriComponentsBuilder -> @Deprecated 	public static UriComponentsBuilder fromMethod(Method method, Object... args);1447077465;@see #fromMethod(Class, Method, Object...)_@see #fromMethod(UriComponentsBuilder, Class, Method, Object...)_@deprecated as of 4.2, this is deprecated in favor of the overloaded_method that also accepts a controllerType argument;@Deprecated_	public static UriComponentsBuilder fromMethod(Method method, Object... args) {_		return fromMethodInternal(null, method.getDeclaringClass(), method, args)__	};see,from,method,class,method,object,see,from,method,uri,components,builder,class,method,object,deprecated,as,of,4,2,this,is,deprecated,in,favor,of,the,overloaded,method,that,also,accepts,a,controller,type,argument;deprecated,public,static,uri,components,builder,from,method,method,method,object,args,return,from,method,internal,null,method,get,declaring,class,method,args
MvcUriComponentsBuilder -> @Deprecated 	public static UriComponentsBuilder fromMethod(Method method, Object... args);1458830024;@see #fromMethod(Class, Method, Object...)_@see #fromMethod(UriComponentsBuilder, Class, Method, Object...)_@deprecated as of 4.2, this is deprecated in favor of the overloaded_method that also accepts a controllerType argument;@Deprecated_	public static UriComponentsBuilder fromMethod(Method method, Object... args) {_		return fromMethodInternal(null, method.getDeclaringClass(), method, args)__	};see,from,method,class,method,object,see,from,method,uri,components,builder,class,method,object,deprecated,as,of,4,2,this,is,deprecated,in,favor,of,the,overloaded,method,that,also,accepts,a,controller,type,argument;deprecated,public,static,uri,components,builder,from,method,method,method,object,args,return,from,method,internal,null,method,get,declaring,class,method,args
MvcUriComponentsBuilder -> @Deprecated 	public static UriComponentsBuilder fromMethod(Method method, Object... args);1461047077;@see #fromMethod(Class, Method, Object...)_@see #fromMethod(UriComponentsBuilder, Class, Method, Object...)_@deprecated as of 4.2, this is deprecated in favor of the overloaded_method that also accepts a controllerType argument;@Deprecated_	public static UriComponentsBuilder fromMethod(Method method, Object... args) {_		return fromMethodInternal(null, method.getDeclaringClass(), method, args)__	};see,from,method,class,method,object,see,from,method,uri,components,builder,class,method,object,deprecated,as,of,4,2,this,is,deprecated,in,favor,of,the,overloaded,method,that,also,accepts,a,controller,type,argument;deprecated,public,static,uri,components,builder,from,method,method,method,object,args,return,from,method,internal,null,method,get,declaring,class,method,args
MvcUriComponentsBuilder -> @Deprecated 	public static UriComponentsBuilder fromMethod(Method method, Object... args);1467677340;@see #fromMethod(Class, Method, Object...)_@see #fromMethod(UriComponentsBuilder, Class, Method, Object...)_@deprecated as of 4.2, this is deprecated in favor of the overloaded_method that also accepts a controllerType argument;@Deprecated_	public static UriComponentsBuilder fromMethod(Method method, Object... args) {_		return fromMethodInternal(null, method.getDeclaringClass(), method, args)__	};see,from,method,class,method,object,see,from,method,uri,components,builder,class,method,object,deprecated,as,of,4,2,this,is,deprecated,in,favor,of,the,overloaded,method,that,also,accepts,a,controller,type,argument;deprecated,public,static,uri,components,builder,from,method,method,method,object,args,return,from,method,internal,null,method,get,declaring,class,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodName(UriComponentsBuilder builder, 			Class<?> controllerType, String methodName, Object... args);1426553101;An alternative to {@link #fromMethodName(Class, String, Object...)} that_accepts a {@code UriComponentsBuilder} representing the base URL. This is_useful when using MvcUriComponentsBuilder outside the context of processing_a request or to apply a custom baseUrl not matching the current request._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param controllerType the controller_@param methodName the method name_@param args the argument values_@return a UriComponentsBuilder instance, never {@code null}_@throws IllegalArgumentException if there is no matching or_if there is more than one matching method;public static UriComponentsBuilder fromMethodName(UriComponentsBuilder builder,_			Class<?> controllerType, String methodName, Object... args) {__		Method method = getMethod(controllerType, methodName, args)__		return fromMethod(builder, method, args)__	};an,alternative,to,link,from,method,name,class,string,object,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,controller,type,the,controller,param,method,name,the,method,name,param,args,the,argument,values,return,a,uri,components,builder,instance,never,code,null,throws,illegal,argument,exception,if,there,is,no,matching,or,if,there,is,more,than,one,matching,method;public,static,uri,components,builder,from,method,name,uri,components,builder,builder,class,controller,type,string,method,name,object,args,method,method,get,method,controller,type,method,name,args,return,from,method,builder,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodName(UriComponentsBuilder builder, 			Class<?> controllerType, String methodName, Object... args);1429801417;An alternative to {@link #fromMethodName(Class, String, Object...)} that_accepts a {@code UriComponentsBuilder} representing the base URL. This is_useful when using MvcUriComponentsBuilder outside the context of processing_a request or to apply a custom baseUrl not matching the current request._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param controllerType the controller_@param methodName the method name_@param args the argument values_@return a UriComponentsBuilder instance, never {@code null}_@throws IllegalArgumentException if there is no matching or_if there is more than one matching method;public static UriComponentsBuilder fromMethodName(UriComponentsBuilder builder,_			Class<?> controllerType, String methodName, Object... args) {__		Method method = getMethod(controllerType, methodName, args)__		return fromMethod(builder, method, args)__	};an,alternative,to,link,from,method,name,class,string,object,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,controller,type,the,controller,param,method,name,the,method,name,param,args,the,argument,values,return,a,uri,components,builder,instance,never,code,null,throws,illegal,argument,exception,if,there,is,no,matching,or,if,there,is,more,than,one,matching,method;public,static,uri,components,builder,from,method,name,uri,components,builder,builder,class,controller,type,string,method,name,object,args,method,method,get,method,controller,type,method,name,args,return,from,method,builder,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodName(UriComponentsBuilder builder, 			Class<?> controllerType, String methodName, Object... args);1429801944;An alternative to {@link #fromMethodName(Class, String, Object...)} that_accepts a {@code UriComponentsBuilder} representing the base URL. This is_useful when using MvcUriComponentsBuilder outside the context of processing_a request or to apply a custom baseUrl not matching the current request._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param controllerType the controller_@param methodName the method name_@param args the argument values_@return a UriComponentsBuilder instance, never {@code null}_@throws IllegalArgumentException if there is no matching or_if there is more than one matching method;public static UriComponentsBuilder fromMethodName(UriComponentsBuilder builder,_			Class<?> controllerType, String methodName, Object... args) {__		Method method = getMethod(controllerType, methodName, args)__		return fromMethod(builder, method, args)__	};an,alternative,to,link,from,method,name,class,string,object,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,controller,type,the,controller,param,method,name,the,method,name,param,args,the,argument,values,return,a,uri,components,builder,instance,never,code,null,throws,illegal,argument,exception,if,there,is,no,matching,or,if,there,is,more,than,one,matching,method;public,static,uri,components,builder,from,method,name,uri,components,builder,builder,class,controller,type,string,method,name,object,args,method,method,get,method,controller,type,method,name,args,return,from,method,builder,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodName(UriComponentsBuilder builder, 			Class<?> controllerType, String methodName, Object... args);1429802180;An alternative to {@link #fromMethodName(Class, String, Object...)} that_accepts a {@code UriComponentsBuilder} representing the base URL. This is_useful when using MvcUriComponentsBuilder outside the context of processing_a request or to apply a custom baseUrl not matching the current request._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param controllerType the controller_@param methodName the method name_@param args the argument values_@return a UriComponentsBuilder instance, never {@code null}_@throws IllegalArgumentException if there is no matching or_if there is more than one matching method;public static UriComponentsBuilder fromMethodName(UriComponentsBuilder builder,_			Class<?> controllerType, String methodName, Object... args) {__		Method method = getMethod(controllerType, methodName, args)__		return fromMethod(builder, method, args)__	};an,alternative,to,link,from,method,name,class,string,object,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,controller,type,the,controller,param,method,name,the,method,name,param,args,the,argument,values,return,a,uri,components,builder,instance,never,code,null,throws,illegal,argument,exception,if,there,is,no,matching,or,if,there,is,more,than,one,matching,method;public,static,uri,components,builder,from,method,name,uri,components,builder,builder,class,controller,type,string,method,name,object,args,method,method,get,method,controller,type,method,name,args,return,from,method,builder,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodName(UriComponentsBuilder builder, 			Class<?> controllerType, String methodName, Object... args);1429886024;An alternative to {@link #fromMethodName(Class, String, Object...)} that_accepts a {@code UriComponentsBuilder} representing the base URL. This is_useful when using MvcUriComponentsBuilder outside the context of processing_a request or to apply a custom baseUrl not matching the current request._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param controllerType the controller_@param methodName the method name_@param args the argument values_@return a UriComponentsBuilder instance, never {@code null}_@throws IllegalArgumentException if there is no matching or_if there is more than one matching method;public static UriComponentsBuilder fromMethodName(UriComponentsBuilder builder,_			Class<?> controllerType, String methodName, Object... args) {__		Method method = getMethod(controllerType, methodName, args)__		return fromMethod(builder, method, args)__	};an,alternative,to,link,from,method,name,class,string,object,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,controller,type,the,controller,param,method,name,the,method,name,param,args,the,argument,values,return,a,uri,components,builder,instance,never,code,null,throws,illegal,argument,exception,if,there,is,no,matching,or,if,there,is,more,than,one,matching,method;public,static,uri,components,builder,from,method,name,uri,components,builder,builder,class,controller,type,string,method,name,object,args,method,method,get,method,controller,type,method,name,args,return,from,method,builder,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodName(UriComponentsBuilder builder, 			Class<?> controllerType, String methodName, Object... args);1429888980;An alternative to {@link #fromMethodName(Class, String, Object...)} that_accepts a {@code UriComponentsBuilder} representing the base URL. This is_useful when using MvcUriComponentsBuilder outside the context of processing_a request or to apply a custom baseUrl not matching the current request._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param controllerType the controller_@param methodName the method name_@param args the argument values_@return a UriComponentsBuilder instance, never {@code null}_@throws IllegalArgumentException if there is no matching or_if there is more than one matching method;public static UriComponentsBuilder fromMethodName(UriComponentsBuilder builder,_			Class<?> controllerType, String methodName, Object... args) {__		Method method = getMethod(controllerType, methodName, args)__		return fromMethod(builder, method, args)__	};an,alternative,to,link,from,method,name,class,string,object,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,controller,type,the,controller,param,method,name,the,method,name,param,args,the,argument,values,return,a,uri,components,builder,instance,never,code,null,throws,illegal,argument,exception,if,there,is,no,matching,or,if,there,is,more,than,one,matching,method;public,static,uri,components,builder,from,method,name,uri,components,builder,builder,class,controller,type,string,method,name,object,args,method,method,get,method,controller,type,method,name,args,return,from,method,builder,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodName(UriComponentsBuilder builder, 			Class<?> controllerType, String methodName, Object... args);1430739806;An alternative to {@link #fromMethodName(Class, String, Object...)} that_accepts a {@code UriComponentsBuilder} representing the base URL. This is_useful when using MvcUriComponentsBuilder outside the context of processing_a request or to apply a custom baseUrl not matching the current request._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param controllerType the controller_@param methodName the method name_@param args the argument values_@return a UriComponentsBuilder instance, never {@code null}_@throws IllegalArgumentException if there is no matching or_if there is more than one matching method;public static UriComponentsBuilder fromMethodName(UriComponentsBuilder builder,_			Class<?> controllerType, String methodName, Object... args) {__		Method method = getMethod(controllerType, methodName, args)__		return fromMethod(builder, method, args)__	};an,alternative,to,link,from,method,name,class,string,object,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,controller,type,the,controller,param,method,name,the,method,name,param,args,the,argument,values,return,a,uri,components,builder,instance,never,code,null,throws,illegal,argument,exception,if,there,is,no,matching,or,if,there,is,more,than,one,matching,method;public,static,uri,components,builder,from,method,name,uri,components,builder,builder,class,controller,type,string,method,name,object,args,method,method,get,method,controller,type,method,name,args,return,from,method,builder,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodName(UriComponentsBuilder builder, 			Class<?> controllerType, String methodName, Object... args);1430747547;An alternative to {@link #fromMethodName(Class, String, Object...)} that_accepts a {@code UriComponentsBuilder} representing the base URL. This is_useful when using MvcUriComponentsBuilder outside the context of processing_a request or to apply a custom baseUrl not matching the current request._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param controllerType the controller_@param methodName the method name_@param args the argument values_@return a UriComponentsBuilder instance, never {@code null}_@throws IllegalArgumentException if there is no matching or_if there is more than one matching method;public static UriComponentsBuilder fromMethodName(UriComponentsBuilder builder,_			Class<?> controllerType, String methodName, Object... args) {__		Method method = getMethod(controllerType, methodName, args)__		return fromMethod(builder, method, args)__	};an,alternative,to,link,from,method,name,class,string,object,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,controller,type,the,controller,param,method,name,the,method,name,param,args,the,argument,values,return,a,uri,components,builder,instance,never,code,null,throws,illegal,argument,exception,if,there,is,no,matching,or,if,there,is,more,than,one,matching,method;public,static,uri,components,builder,from,method,name,uri,components,builder,builder,class,controller,type,string,method,name,object,args,method,method,get,method,controller,type,method,name,args,return,from,method,builder,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodName(UriComponentsBuilder builder, 			Class<?> controllerType, String methodName, Object... args);1430749606;An alternative to {@link #fromMethodName(Class, String, Object...)} that_accepts a {@code UriComponentsBuilder} representing the base URL. This is_useful when using MvcUriComponentsBuilder outside the context of processing_a request or to apply a custom baseUrl not matching the current request._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param controllerType the controller_@param methodName the method name_@param args the argument values_@return a UriComponentsBuilder instance, never {@code null}_@throws IllegalArgumentException if there is no matching or_if there is more than one matching method;public static UriComponentsBuilder fromMethodName(UriComponentsBuilder builder,_			Class<?> controllerType, String methodName, Object... args) {__		Method method = getMethod(controllerType, methodName, args)__		return fromMethod(builder, method, args)__	};an,alternative,to,link,from,method,name,class,string,object,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,controller,type,the,controller,param,method,name,the,method,name,param,args,the,argument,values,return,a,uri,components,builder,instance,never,code,null,throws,illegal,argument,exception,if,there,is,no,matching,or,if,there,is,more,than,one,matching,method;public,static,uri,components,builder,from,method,name,uri,components,builder,builder,class,controller,type,string,method,name,object,args,method,method,get,method,controller,type,method,name,args,return,from,method,builder,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodName(UriComponentsBuilder builder, 			Class<?> controllerType, String methodName, Object... args);1431975386;An alternative to {@link #fromMethodName(Class, String, Object...)} that_accepts a {@code UriComponentsBuilder} representing the base URL. This is_useful when using MvcUriComponentsBuilder outside the context of processing_a request or to apply a custom baseUrl not matching the current request._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param controllerType the controller_@param methodName the method name_@param args the argument values_@return a UriComponentsBuilder instance, never {@code null}_@throws IllegalArgumentException if there is no matching or_if there is more than one matching method;public static UriComponentsBuilder fromMethodName(UriComponentsBuilder builder,_			Class<?> controllerType, String methodName, Object... args) {__		Method method = getMethod(controllerType, methodName, args)__		return fromMethodInternal(builder, controllerType, method, args)__	};an,alternative,to,link,from,method,name,class,string,object,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,controller,type,the,controller,param,method,name,the,method,name,param,args,the,argument,values,return,a,uri,components,builder,instance,never,code,null,throws,illegal,argument,exception,if,there,is,no,matching,or,if,there,is,more,than,one,matching,method;public,static,uri,components,builder,from,method,name,uri,components,builder,builder,class,controller,type,string,method,name,object,args,method,method,get,method,controller,type,method,name,args,return,from,method,internal,builder,controller,type,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodName(UriComponentsBuilder builder, 			Class<?> controllerType, String methodName, Object... args);1432125256;An alternative to {@link #fromMethodName(Class, String, Object...)} that_accepts a {@code UriComponentsBuilder} representing the base URL. This is_useful when using MvcUriComponentsBuilder outside the context of processing_a request or to apply a custom baseUrl not matching the current request._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param controllerType the controller_@param methodName the method name_@param args the argument values_@return a UriComponentsBuilder instance, never {@code null}_@throws IllegalArgumentException if there is no matching or_if there is more than one matching method;public static UriComponentsBuilder fromMethodName(UriComponentsBuilder builder,_			Class<?> controllerType, String methodName, Object... args) {__		Method method = getMethod(controllerType, methodName, args)__		return fromMethodInternal(builder, controllerType, method, args)__	};an,alternative,to,link,from,method,name,class,string,object,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,controller,type,the,controller,param,method,name,the,method,name,param,args,the,argument,values,return,a,uri,components,builder,instance,never,code,null,throws,illegal,argument,exception,if,there,is,no,matching,or,if,there,is,more,than,one,matching,method;public,static,uri,components,builder,from,method,name,uri,components,builder,builder,class,controller,type,string,method,name,object,args,method,method,get,method,controller,type,method,name,args,return,from,method,internal,builder,controller,type,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodName(UriComponentsBuilder builder, 			Class<?> controllerType, String methodName, Object... args);1432156007;An alternative to {@link #fromMethodName(Class, String, Object...)} that_accepts a {@code UriComponentsBuilder} representing the base URL. This is_useful when using MvcUriComponentsBuilder outside the context of processing_a request or to apply a custom baseUrl not matching the current request._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param controllerType the controller_@param methodName the method name_@param args the argument values_@return a UriComponentsBuilder instance, never {@code null}_@throws IllegalArgumentException if there is no matching or_if there is more than one matching method;public static UriComponentsBuilder fromMethodName(UriComponentsBuilder builder,_			Class<?> controllerType, String methodName, Object... args) {__		Method method = getMethod(controllerType, methodName, args)__		return fromMethodInternal(builder, controllerType, method, args)__	};an,alternative,to,link,from,method,name,class,string,object,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,controller,type,the,controller,param,method,name,the,method,name,param,args,the,argument,values,return,a,uri,components,builder,instance,never,code,null,throws,illegal,argument,exception,if,there,is,no,matching,or,if,there,is,more,than,one,matching,method;public,static,uri,components,builder,from,method,name,uri,components,builder,builder,class,controller,type,string,method,name,object,args,method,method,get,method,controller,type,method,name,args,return,from,method,internal,builder,controller,type,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodName(UriComponentsBuilder builder, 			Class<?> controllerType, String methodName, Object... args);1432856630;An alternative to {@link #fromMethodName(Class, String, Object...)} that_accepts a {@code UriComponentsBuilder} representing the base URL. This is_useful when using MvcUriComponentsBuilder outside the context of processing_a request or to apply a custom baseUrl not matching the current request._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param controllerType the controller_@param methodName the method name_@param args the argument values_@return a UriComponentsBuilder instance, never {@code null}_@throws IllegalArgumentException if there is no matching or_if there is more than one matching method;public static UriComponentsBuilder fromMethodName(UriComponentsBuilder builder,_			Class<?> controllerType, String methodName, Object... args) {__		Method method = getMethod(controllerType, methodName, args)__		return fromMethodInternal(builder, controllerType, method, args)__	};an,alternative,to,link,from,method,name,class,string,object,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,controller,type,the,controller,param,method,name,the,method,name,param,args,the,argument,values,return,a,uri,components,builder,instance,never,code,null,throws,illegal,argument,exception,if,there,is,no,matching,or,if,there,is,more,than,one,matching,method;public,static,uri,components,builder,from,method,name,uri,components,builder,builder,class,controller,type,string,method,name,object,args,method,method,get,method,controller,type,method,name,args,return,from,method,internal,builder,controller,type,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodName(UriComponentsBuilder builder, 			Class<?> controllerType, String methodName, Object... args);1432857824;An alternative to {@link #fromMethodName(Class, String, Object...)} that_accepts a {@code UriComponentsBuilder} representing the base URL. This is_useful when using MvcUriComponentsBuilder outside the context of processing_a request or to apply a custom baseUrl not matching the current request._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param controllerType the controller_@param methodName the method name_@param args the argument values_@return a UriComponentsBuilder instance, never {@code null}_@throws IllegalArgumentException if there is no matching or_if there is more than one matching method;public static UriComponentsBuilder fromMethodName(UriComponentsBuilder builder,_			Class<?> controllerType, String methodName, Object... args) {__		Method method = getMethod(controllerType, methodName, args)__		return fromMethodInternal(builder, controllerType, method, args)__	};an,alternative,to,link,from,method,name,class,string,object,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,controller,type,the,controller,param,method,name,the,method,name,param,args,the,argument,values,return,a,uri,components,builder,instance,never,code,null,throws,illegal,argument,exception,if,there,is,no,matching,or,if,there,is,more,than,one,matching,method;public,static,uri,components,builder,from,method,name,uri,components,builder,builder,class,controller,type,string,method,name,object,args,method,method,get,method,controller,type,method,name,args,return,from,method,internal,builder,controller,type,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodName(UriComponentsBuilder builder, 			Class<?> controllerType, String methodName, Object... args);1434234880;An alternative to {@link #fromMethodName(Class, String, Object...)} that_accepts a {@code UriComponentsBuilder} representing the base URL. This is_useful when using MvcUriComponentsBuilder outside the context of processing_a request or to apply a custom baseUrl not matching the current request._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param controllerType the controller_@param methodName the method name_@param args the argument values_@return a UriComponentsBuilder instance, never {@code null}_@throws IllegalArgumentException if there is no matching or_if there is more than one matching method;public static UriComponentsBuilder fromMethodName(UriComponentsBuilder builder,_			Class<?> controllerType, String methodName, Object... args) {__		Method method = getMethod(controllerType, methodName, args)__		return fromMethodInternal(builder, controllerType, method, args)__	};an,alternative,to,link,from,method,name,class,string,object,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,controller,type,the,controller,param,method,name,the,method,name,param,args,the,argument,values,return,a,uri,components,builder,instance,never,code,null,throws,illegal,argument,exception,if,there,is,no,matching,or,if,there,is,more,than,one,matching,method;public,static,uri,components,builder,from,method,name,uri,components,builder,builder,class,controller,type,string,method,name,object,args,method,method,get,method,controller,type,method,name,args,return,from,method,internal,builder,controller,type,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodName(UriComponentsBuilder builder, 			Class<?> controllerType, String methodName, Object... args);1434484897;An alternative to {@link #fromMethodName(Class, String, Object...)} that_accepts a {@code UriComponentsBuilder} representing the base URL. This is_useful when using MvcUriComponentsBuilder outside the context of processing_a request or to apply a custom baseUrl not matching the current request._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param controllerType the controller_@param methodName the method name_@param args the argument values_@return a UriComponentsBuilder instance, never {@code null}_@throws IllegalArgumentException if there is no matching or_if there is more than one matching method;public static UriComponentsBuilder fromMethodName(UriComponentsBuilder builder,_			Class<?> controllerType, String methodName, Object... args) {__		Method method = getMethod(controllerType, methodName, args)__		return fromMethodInternal(builder, controllerType, method, args)__	};an,alternative,to,link,from,method,name,class,string,object,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,controller,type,the,controller,param,method,name,the,method,name,param,args,the,argument,values,return,a,uri,components,builder,instance,never,code,null,throws,illegal,argument,exception,if,there,is,no,matching,or,if,there,is,more,than,one,matching,method;public,static,uri,components,builder,from,method,name,uri,components,builder,builder,class,controller,type,string,method,name,object,args,method,method,get,method,controller,type,method,name,args,return,from,method,internal,builder,controller,type,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodName(UriComponentsBuilder builder, 			Class<?> controllerType, String methodName, Object... args);1434726592;An alternative to {@link #fromMethodName(Class, String, Object...)} that_accepts a {@code UriComponentsBuilder} representing the base URL. This is_useful when using MvcUriComponentsBuilder outside the context of processing_a request or to apply a custom baseUrl not matching the current request._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param controllerType the controller_@param methodName the method name_@param args the argument values_@return a UriComponentsBuilder instance, never {@code null}_@throws IllegalArgumentException if there is no matching or_if there is more than one matching method;public static UriComponentsBuilder fromMethodName(UriComponentsBuilder builder,_			Class<?> controllerType, String methodName, Object... args) {__		Method method = getMethod(controllerType, methodName, args)__		return fromMethodInternal(builder, controllerType, method, args)__	};an,alternative,to,link,from,method,name,class,string,object,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,controller,type,the,controller,param,method,name,the,method,name,param,args,the,argument,values,return,a,uri,components,builder,instance,never,code,null,throws,illegal,argument,exception,if,there,is,no,matching,or,if,there,is,more,than,one,matching,method;public,static,uri,components,builder,from,method,name,uri,components,builder,builder,class,controller,type,string,method,name,object,args,method,method,get,method,controller,type,method,name,args,return,from,method,internal,builder,controller,type,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodName(UriComponentsBuilder builder, 			Class<?> controllerType, String methodName, Object... args);1435615322;An alternative to {@link #fromMethodName(Class, String, Object...)} that_accepts a {@code UriComponentsBuilder} representing the base URL. This is_useful when using MvcUriComponentsBuilder outside the context of processing_a request or to apply a custom baseUrl not matching the current request._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param controllerType the controller_@param methodName the method name_@param args the argument values_@return a UriComponentsBuilder instance, never {@code null}_@throws IllegalArgumentException if there is no matching or_if there is more than one matching method;public static UriComponentsBuilder fromMethodName(UriComponentsBuilder builder,_			Class<?> controllerType, String methodName, Object... args) {__		Method method = getMethod(controllerType, methodName, args)__		return fromMethodInternal(builder, controllerType, method, args)__	};an,alternative,to,link,from,method,name,class,string,object,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,controller,type,the,controller,param,method,name,the,method,name,param,args,the,argument,values,return,a,uri,components,builder,instance,never,code,null,throws,illegal,argument,exception,if,there,is,no,matching,or,if,there,is,more,than,one,matching,method;public,static,uri,components,builder,from,method,name,uri,components,builder,builder,class,controller,type,string,method,name,object,args,method,method,get,method,controller,type,method,name,args,return,from,method,internal,builder,controller,type,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodName(UriComponentsBuilder builder, 			Class<?> controllerType, String methodName, Object... args);1439294371;An alternative to {@link #fromMethodName(Class, String, Object...)} that_accepts a {@code UriComponentsBuilder} representing the base URL. This is_useful when using MvcUriComponentsBuilder outside the context of processing_a request or to apply a custom baseUrl not matching the current request._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param controllerType the controller_@param methodName the method name_@param args the argument values_@return a UriComponentsBuilder instance, never {@code null}_@throws IllegalArgumentException if there is no matching or_if there is more than one matching method;public static UriComponentsBuilder fromMethodName(UriComponentsBuilder builder,_			Class<?> controllerType, String methodName, Object... args) {__		Method method = getMethod(controllerType, methodName, args)__		return fromMethodInternal(builder, controllerType, method, args)__	};an,alternative,to,link,from,method,name,class,string,object,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,controller,type,the,controller,param,method,name,the,method,name,param,args,the,argument,values,return,a,uri,components,builder,instance,never,code,null,throws,illegal,argument,exception,if,there,is,no,matching,or,if,there,is,more,than,one,matching,method;public,static,uri,components,builder,from,method,name,uri,components,builder,builder,class,controller,type,string,method,name,object,args,method,method,get,method,controller,type,method,name,args,return,from,method,internal,builder,controller,type,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodName(UriComponentsBuilder builder, 			Class<?> controllerType, String methodName, Object... args);1447077465;An alternative to {@link #fromMethodName(Class, String, Object...)} that_accepts a {@code UriComponentsBuilder} representing the base URL. This is_useful when using MvcUriComponentsBuilder outside the context of processing_a request or to apply a custom baseUrl not matching the current request._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param controllerType the controller_@param methodName the method name_@param args the argument values_@return a UriComponentsBuilder instance, never {@code null}_@throws IllegalArgumentException if there is no matching or_if there is more than one matching method;public static UriComponentsBuilder fromMethodName(UriComponentsBuilder builder,_			Class<?> controllerType, String methodName, Object... args) {__		Method method = getMethod(controllerType, methodName, args)__		return fromMethodInternal(builder, controllerType, method, args)__	};an,alternative,to,link,from,method,name,class,string,object,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,controller,type,the,controller,param,method,name,the,method,name,param,args,the,argument,values,return,a,uri,components,builder,instance,never,code,null,throws,illegal,argument,exception,if,there,is,no,matching,or,if,there,is,more,than,one,matching,method;public,static,uri,components,builder,from,method,name,uri,components,builder,builder,class,controller,type,string,method,name,object,args,method,method,get,method,controller,type,method,name,args,return,from,method,internal,builder,controller,type,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodName(UriComponentsBuilder builder, 			Class<?> controllerType, String methodName, Object... args);1458830024;An alternative to {@link #fromMethodName(Class, String, Object...)} that_accepts a {@code UriComponentsBuilder} representing the base URL. This is_useful when using MvcUriComponentsBuilder outside the context of processing_a request or to apply a custom baseUrl not matching the current request._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param controllerType the controller_@param methodName the method name_@param args the argument values_@return a UriComponentsBuilder instance, never {@code null}_@throws IllegalArgumentException if there is no matching or_if there is more than one matching method;public static UriComponentsBuilder fromMethodName(UriComponentsBuilder builder,_			Class<?> controllerType, String methodName, Object... args) {__		Method method = getMethod(controllerType, methodName, args)__		return fromMethodInternal(builder, controllerType, method, args)__	};an,alternative,to,link,from,method,name,class,string,object,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,controller,type,the,controller,param,method,name,the,method,name,param,args,the,argument,values,return,a,uri,components,builder,instance,never,code,null,throws,illegal,argument,exception,if,there,is,no,matching,or,if,there,is,more,than,one,matching,method;public,static,uri,components,builder,from,method,name,uri,components,builder,builder,class,controller,type,string,method,name,object,args,method,method,get,method,controller,type,method,name,args,return,from,method,internal,builder,controller,type,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodName(UriComponentsBuilder builder, 			Class<?> controllerType, String methodName, Object... args);1461047077;An alternative to {@link #fromMethodName(Class, String, Object...)} that_accepts a {@code UriComponentsBuilder} representing the base URL. This is_useful when using MvcUriComponentsBuilder outside the context of processing_a request or to apply a custom baseUrl not matching the current request._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param controllerType the controller_@param methodName the method name_@param args the argument values_@return a UriComponentsBuilder instance, never {@code null}_@throws IllegalArgumentException if there is no matching or_if there is more than one matching method;public static UriComponentsBuilder fromMethodName(UriComponentsBuilder builder,_			Class<?> controllerType, String methodName, Object... args) {__		Method method = getMethod(controllerType, methodName, args)__		return fromMethodInternal(builder, controllerType, method, args)__	};an,alternative,to,link,from,method,name,class,string,object,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,controller,type,the,controller,param,method,name,the,method,name,param,args,the,argument,values,return,a,uri,components,builder,instance,never,code,null,throws,illegal,argument,exception,if,there,is,no,matching,or,if,there,is,more,than,one,matching,method;public,static,uri,components,builder,from,method,name,uri,components,builder,builder,class,controller,type,string,method,name,object,args,method,method,get,method,controller,type,method,name,args,return,from,method,internal,builder,controller,type,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodName(UriComponentsBuilder builder, 			Class<?> controllerType, String methodName, Object... args);1467677340;An alternative to {@link #fromMethodName(Class, String, Object...)} that_accepts a {@code UriComponentsBuilder} representing the base URL. This is_useful when using MvcUriComponentsBuilder outside the context of processing_a request or to apply a custom baseUrl not matching the current request._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param controllerType the controller_@param methodName the method name_@param args the argument values_@return a UriComponentsBuilder instance, never {@code null}_@throws IllegalArgumentException if there is no matching or_if there is more than one matching method;public static UriComponentsBuilder fromMethodName(UriComponentsBuilder builder,_			Class<?> controllerType, String methodName, Object... args) {__		Method method = getMethod(controllerType, methodName, args)__		return fromMethodInternal(builder, controllerType, method, args)__	};an,alternative,to,link,from,method,name,class,string,object,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,controller,type,the,controller,param,method,name,the,method,name,param,args,the,argument,values,return,a,uri,components,builder,instance,never,code,null,throws,illegal,argument,exception,if,there,is,no,matching,or,if,there,is,more,than,one,matching,method;public,static,uri,components,builder,from,method,name,uri,components,builder,builder,class,controller,type,string,method,name,object,args,method,method,get,method,controller,type,method,name,args,return,from,method,internal,builder,controller,type,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodName(UriComponentsBuilder builder, 			Class<?> controllerType, String methodName, Object... args);1467726769;An alternative to {@link #fromMethodName(Class, String, Object...)} that_accepts a {@code UriComponentsBuilder} representing the base URL. This is_useful when using MvcUriComponentsBuilder outside the context of processing_a request or to apply a custom baseUrl not matching the current request._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param controllerType the controller_@param methodName the method name_@param args the argument values_@return a UriComponentsBuilder instance, never {@code null}_@throws IllegalArgumentException if there is no matching or_if there is more than one matching method;public static UriComponentsBuilder fromMethodName(UriComponentsBuilder builder,_			Class<?> controllerType, String methodName, Object... args) {__		Method method = getMethod(controllerType, methodName, args)__		return fromMethodInternal(builder, controllerType, method, args)__	};an,alternative,to,link,from,method,name,class,string,object,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,controller,type,the,controller,param,method,name,the,method,name,param,args,the,argument,values,return,a,uri,components,builder,instance,never,code,null,throws,illegal,argument,exception,if,there,is,no,matching,or,if,there,is,more,than,one,matching,method;public,static,uri,components,builder,from,method,name,uri,components,builder,builder,class,controller,type,string,method,name,object,args,method,method,get,method,controller,type,method,name,args,return,from,method,internal,builder,controller,type,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodName(UriComponentsBuilder builder, 			Class<?> controllerType, String methodName, Object... args);1467730834;An alternative to {@link #fromMethodName(Class, String, Object...)} that_accepts a {@code UriComponentsBuilder} representing the base URL. This is_useful when using MvcUriComponentsBuilder outside the context of processing_a request or to apply a custom baseUrl not matching the current request._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param controllerType the controller_@param methodName the method name_@param args the argument values_@return a UriComponentsBuilder instance, never {@code null}_@throws IllegalArgumentException if there is no matching or_if there is more than one matching method;public static UriComponentsBuilder fromMethodName(UriComponentsBuilder builder,_			Class<?> controllerType, String methodName, Object... args) {__		Method method = getMethod(controllerType, methodName, args)__		return fromMethodInternal(builder, controllerType, method, args)__	};an,alternative,to,link,from,method,name,class,string,object,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,controller,type,the,controller,param,method,name,the,method,name,param,args,the,argument,values,return,a,uri,components,builder,instance,never,code,null,throws,illegal,argument,exception,if,there,is,no,matching,or,if,there,is,more,than,one,matching,method;public,static,uri,components,builder,from,method,name,uri,components,builder,builder,class,controller,type,string,method,name,object,args,method,method,get,method,controller,type,method,name,args,return,from,method,internal,builder,controller,type,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodName(UriComponentsBuilder builder, 			Class<?> controllerType, String methodName, Object... args);1467846264;An alternative to {@link #fromMethodName(Class, String, Object...)} that_accepts a {@code UriComponentsBuilder} representing the base URL. This is_useful when using MvcUriComponentsBuilder outside the context of processing_a request or to apply a custom baseUrl not matching the current request._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param controllerType the controller_@param methodName the method name_@param args the argument values_@return a UriComponentsBuilder instance, never {@code null}_@throws IllegalArgumentException if there is no matching or_if there is more than one matching method;public static UriComponentsBuilder fromMethodName(UriComponentsBuilder builder,_			Class<?> controllerType, String methodName, Object... args) {__		Method method = getMethod(controllerType, methodName, args)__		return fromMethodInternal(builder, controllerType, method, args)__	};an,alternative,to,link,from,method,name,class,string,object,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,controller,type,the,controller,param,method,name,the,method,name,param,args,the,argument,values,return,a,uri,components,builder,instance,never,code,null,throws,illegal,argument,exception,if,there,is,no,matching,or,if,there,is,more,than,one,matching,method;public,static,uri,components,builder,from,method,name,uri,components,builder,builder,class,controller,type,string,method,name,object,args,method,method,get,method,controller,type,method,name,args,return,from,method,internal,builder,controller,type,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodName(UriComponentsBuilder builder, 			Class<?> controllerType, String methodName, Object... args);1468613531;An alternative to {@link #fromMethodName(Class, String, Object...)} that_accepts a {@code UriComponentsBuilder} representing the base URL. This is_useful when using MvcUriComponentsBuilder outside the context of processing_a request or to apply a custom baseUrl not matching the current request._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param controllerType the controller_@param methodName the method name_@param args the argument values_@return a UriComponentsBuilder instance, never {@code null}_@throws IllegalArgumentException if there is no matching or_if there is more than one matching method;public static UriComponentsBuilder fromMethodName(UriComponentsBuilder builder,_			Class<?> controllerType, String methodName, Object... args) {__		Method method = getMethod(controllerType, methodName, args)__		return fromMethodInternal(builder, controllerType, method, args)__	};an,alternative,to,link,from,method,name,class,string,object,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,controller,type,the,controller,param,method,name,the,method,name,param,args,the,argument,values,return,a,uri,components,builder,instance,never,code,null,throws,illegal,argument,exception,if,there,is,no,matching,or,if,there,is,more,than,one,matching,method;public,static,uri,components,builder,from,method,name,uri,components,builder,builder,class,controller,type,string,method,name,object,args,method,method,get,method,controller,type,method,name,args,return,from,method,internal,builder,controller,type,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodName(UriComponentsBuilder builder, 			Class<?> controllerType, String methodName, Object... args);1468948866;An alternative to {@link #fromMethodName(Class, String, Object...)} that_accepts a {@code UriComponentsBuilder} representing the base URL. This is_useful when using MvcUriComponentsBuilder outside the context of processing_a request or to apply a custom baseUrl not matching the current request._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param controllerType the controller_@param methodName the method name_@param args the argument values_@return a UriComponentsBuilder instance, never {@code null}_@throws IllegalArgumentException if there is no matching or_if there is more than one matching method;public static UriComponentsBuilder fromMethodName(UriComponentsBuilder builder,_			Class<?> controllerType, String methodName, Object... args) {__		Method method = getMethod(controllerType, methodName, args)__		return fromMethodInternal(builder, controllerType, method, args)__	};an,alternative,to,link,from,method,name,class,string,object,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,controller,type,the,controller,param,method,name,the,method,name,param,args,the,argument,values,return,a,uri,components,builder,instance,never,code,null,throws,illegal,argument,exception,if,there,is,no,matching,or,if,there,is,more,than,one,matching,method;public,static,uri,components,builder,from,method,name,uri,components,builder,builder,class,controller,type,string,method,name,object,args,method,method,get,method,controller,type,method,name,args,return,from,method,internal,builder,controller,type,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodName(UriComponentsBuilder builder, 			Class<?> controllerType, String methodName, Object... args);1485810955;An alternative to {@link #fromMethodName(Class, String, Object...)} that_accepts a {@code UriComponentsBuilder} representing the base URL. This is_useful when using MvcUriComponentsBuilder outside the context of processing_a request or to apply a custom baseUrl not matching the current request._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param controllerType the controller_@param methodName the method name_@param args the argument values_@return a UriComponentsBuilder instance, never {@code null}_@throws IllegalArgumentException if there is no matching or_if there is more than one matching method;public static UriComponentsBuilder fromMethodName(UriComponentsBuilder builder,_			Class<?> controllerType, String methodName, Object... args) {__		Method method = getMethod(controllerType, methodName, args)__		return fromMethodInternal(builder, controllerType, method, args)__	};an,alternative,to,link,from,method,name,class,string,object,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,controller,type,the,controller,param,method,name,the,method,name,param,args,the,argument,values,return,a,uri,components,builder,instance,never,code,null,throws,illegal,argument,exception,if,there,is,no,matching,or,if,there,is,more,than,one,matching,method;public,static,uri,components,builder,from,method,name,uri,components,builder,builder,class,controller,type,string,method,name,object,args,method,method,get,method,controller,type,method,name,args,return,from,method,internal,builder,controller,type,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodName(UriComponentsBuilder builder, 			Class<?> controllerType, String methodName, Object... args);1486634978;An alternative to {@link #fromMethodName(Class, String, Object...)} that_accepts a {@code UriComponentsBuilder} representing the base URL. This is_useful when using MvcUriComponentsBuilder outside the context of processing_a request or to apply a custom baseUrl not matching the current request._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param controllerType the controller_@param methodName the method name_@param args the argument values_@return a UriComponentsBuilder instance, never {@code null}_@throws IllegalArgumentException if there is no matching or_if there is more than one matching method;public static UriComponentsBuilder fromMethodName(UriComponentsBuilder builder,_			Class<?> controllerType, String methodName, Object... args) {__		Method method = getMethod(controllerType, methodName, args)__		return fromMethodInternal(builder, controllerType, method, args)__	};an,alternative,to,link,from,method,name,class,string,object,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,controller,type,the,controller,param,method,name,the,method,name,param,args,the,argument,values,return,a,uri,components,builder,instance,never,code,null,throws,illegal,argument,exception,if,there,is,no,matching,or,if,there,is,more,than,one,matching,method;public,static,uri,components,builder,from,method,name,uri,components,builder,builder,class,controller,type,string,method,name,object,args,method,method,get,method,controller,type,method,name,args,return,from,method,internal,builder,controller,type,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodName(UriComponentsBuilder builder, 			Class<?> controllerType, String methodName, Object... args);1486635693;An alternative to {@link #fromMethodName(Class, String, Object...)} that_accepts a {@code UriComponentsBuilder} representing the base URL. This is_useful when using MvcUriComponentsBuilder outside the context of processing_a request or to apply a custom baseUrl not matching the current request._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param controllerType the controller_@param methodName the method name_@param args the argument values_@return a UriComponentsBuilder instance, never {@code null}_@throws IllegalArgumentException if there is no matching or_if there is more than one matching method;public static UriComponentsBuilder fromMethodName(UriComponentsBuilder builder,_			Class<?> controllerType, String methodName, Object... args) {__		Method method = getMethod(controllerType, methodName, args)__		return fromMethodInternal(builder, controllerType, method, args)__	};an,alternative,to,link,from,method,name,class,string,object,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,controller,type,the,controller,param,method,name,the,method,name,param,args,the,argument,values,return,a,uri,components,builder,instance,never,code,null,throws,illegal,argument,exception,if,there,is,no,matching,or,if,there,is,more,than,one,matching,method;public,static,uri,components,builder,from,method,name,uri,components,builder,builder,class,controller,type,string,method,name,object,args,method,method,get,method,controller,type,method,name,args,return,from,method,internal,builder,controller,type,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodName(UriComponentsBuilder builder, 			Class<?> controllerType, String methodName, Object... args);1495868221;An alternative to {@link #fromMethodName(Class, String, Object...)} that_accepts a {@code UriComponentsBuilder} representing the base URL. This is_useful when using MvcUriComponentsBuilder outside the context of processing_a request or to apply a custom baseUrl not matching the current request._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param controllerType the controller_@param methodName the method name_@param args the argument values_@return a UriComponentsBuilder instance, never {@code null}_@throws IllegalArgumentException if there is no matching or_if there is more than one matching method;public static UriComponentsBuilder fromMethodName(UriComponentsBuilder builder,_			Class<?> controllerType, String methodName, Object... args) {__		Method method = getMethod(controllerType, methodName, args)__		return fromMethodInternal(builder, controllerType, method, args)__	};an,alternative,to,link,from,method,name,class,string,object,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,controller,type,the,controller,param,method,name,the,method,name,param,args,the,argument,values,return,a,uri,components,builder,instance,never,code,null,throws,illegal,argument,exception,if,there,is,no,matching,or,if,there,is,more,than,one,matching,method;public,static,uri,components,builder,from,method,name,uri,components,builder,builder,class,controller,type,string,method,name,object,args,method,method,get,method,controller,type,method,name,args,return,from,method,internal,builder,controller,type,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodName(UriComponentsBuilder builder, 			Class<?> controllerType, String methodName, Object... args);1496242568;An alternative to {@link #fromMethodName(Class, String, Object...)} that_accepts a {@code UriComponentsBuilder} representing the base URL. This is_useful when using MvcUriComponentsBuilder outside the context of processing_a request or to apply a custom baseUrl not matching the current request._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param controllerType the controller_@param methodName the method name_@param args the argument values_@return a UriComponentsBuilder instance, never {@code null}_@throws IllegalArgumentException if there is no matching or_if there is more than one matching method;public static UriComponentsBuilder fromMethodName(UriComponentsBuilder builder,_			Class<?> controllerType, String methodName, Object... args) {__		Method method = getMethod(controllerType, methodName, args)__		return fromMethodInternal(builder, controllerType, method, args)__	};an,alternative,to,link,from,method,name,class,string,object,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,controller,type,the,controller,param,method,name,the,method,name,param,args,the,argument,values,return,a,uri,components,builder,instance,never,code,null,throws,illegal,argument,exception,if,there,is,no,matching,or,if,there,is,more,than,one,matching,method;public,static,uri,components,builder,from,method,name,uri,components,builder,builder,class,controller,type,string,method,name,object,args,method,method,get,method,controller,type,method,name,args,return,from,method,internal,builder,controller,type,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodName(UriComponentsBuilder builder, 			Class<?> controllerType, String methodName, Object... args);1496259743;An alternative to {@link #fromMethodName(Class, String, Object...)} that_accepts a {@code UriComponentsBuilder} representing the base URL. This is_useful when using MvcUriComponentsBuilder outside the context of processing_a request or to apply a custom baseUrl not matching the current request._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param controllerType the controller_@param methodName the method name_@param args the argument values_@return a UriComponentsBuilder instance, never {@code null}_@throws IllegalArgumentException if there is no matching or_if there is more than one matching method;public static UriComponentsBuilder fromMethodName(UriComponentsBuilder builder,_			Class<?> controllerType, String methodName, Object... args) {__		Method method = getMethod(controllerType, methodName, args)__		return fromMethodInternal(builder, controllerType, method, args)__	};an,alternative,to,link,from,method,name,class,string,object,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,controller,type,the,controller,param,method,name,the,method,name,param,args,the,argument,values,return,a,uri,components,builder,instance,never,code,null,throws,illegal,argument,exception,if,there,is,no,matching,or,if,there,is,more,than,one,matching,method;public,static,uri,components,builder,from,method,name,uri,components,builder,builder,class,controller,type,string,method,name,object,args,method,method,get,method,controller,type,method,name,args,return,from,method,internal,builder,controller,type,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodName(UriComponentsBuilder builder, 			Class<?> controllerType, String methodName, Object... args);1496370972;An alternative to {@link #fromMethodName(Class, String, Object...)} that_accepts a {@code UriComponentsBuilder} representing the base URL. This is_useful when using MvcUriComponentsBuilder outside the context of processing_a request or to apply a custom baseUrl not matching the current request._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param controllerType the controller_@param methodName the method name_@param args the argument values_@return a UriComponentsBuilder instance, never {@code null}_@throws IllegalArgumentException if there is no matching or_if there is more than one matching method;public static UriComponentsBuilder fromMethodName(UriComponentsBuilder builder,_			Class<?> controllerType, String methodName, Object... args) {__		Method method = getMethod(controllerType, methodName, args)__		return fromMethodInternal(builder, controllerType, method, args)__	};an,alternative,to,link,from,method,name,class,string,object,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,controller,type,the,controller,param,method,name,the,method,name,param,args,the,argument,values,return,a,uri,components,builder,instance,never,code,null,throws,illegal,argument,exception,if,there,is,no,matching,or,if,there,is,more,than,one,matching,method;public,static,uri,components,builder,from,method,name,uri,components,builder,builder,class,controller,type,string,method,name,object,args,method,method,get,method,controller,type,method,name,args,return,from,method,internal,builder,controller,type,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodName(UriComponentsBuilder builder, 			Class<?> controllerType, String methodName, Object... args);1496837955;An alternative to {@link #fromMethodName(Class, String, Object...)} that_accepts a {@code UriComponentsBuilder} representing the base URL. This is_useful when using MvcUriComponentsBuilder outside the context of processing_a request or to apply a custom baseUrl not matching the current request._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param controllerType the controller_@param methodName the method name_@param args the argument values_@return a UriComponentsBuilder instance, never {@code null}_@throws IllegalArgumentException if there is no matching or_if there is more than one matching method;public static UriComponentsBuilder fromMethodName(UriComponentsBuilder builder,_			Class<?> controllerType, String methodName, Object... args) {__		Method method = getMethod(controllerType, methodName, args)__		return fromMethodInternal(builder, controllerType, method, args)__	};an,alternative,to,link,from,method,name,class,string,object,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,controller,type,the,controller,param,method,name,the,method,name,param,args,the,argument,values,return,a,uri,components,builder,instance,never,code,null,throws,illegal,argument,exception,if,there,is,no,matching,or,if,there,is,more,than,one,matching,method;public,static,uri,components,builder,from,method,name,uri,components,builder,builder,class,controller,type,string,method,name,object,args,method,method,get,method,controller,type,method,name,args,return,from,method,internal,builder,controller,type,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodName(UriComponentsBuilder builder, 			Class<?> controllerType, String methodName, Object... args);1497341397;An alternative to {@link #fromMethodName(Class, String, Object...)} that_accepts a {@code UriComponentsBuilder} representing the base URL. This is_useful when using MvcUriComponentsBuilder outside the context of processing_a request or to apply a custom baseUrl not matching the current request._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param controllerType the controller_@param methodName the method name_@param args the argument values_@return a UriComponentsBuilder instance, never {@code null}_@throws IllegalArgumentException if there is no matching or_if there is more than one matching method;public static UriComponentsBuilder fromMethodName(UriComponentsBuilder builder,_			Class<?> controllerType, String methodName, Object... args) {__		Method method = getMethod(controllerType, methodName, args)__		return fromMethodInternal(builder, controllerType, method, args)__	};an,alternative,to,link,from,method,name,class,string,object,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,controller,type,the,controller,param,method,name,the,method,name,param,args,the,argument,values,return,a,uri,components,builder,instance,never,code,null,throws,illegal,argument,exception,if,there,is,no,matching,or,if,there,is,more,than,one,matching,method;public,static,uri,components,builder,from,method,name,uri,components,builder,builder,class,controller,type,string,method,name,object,args,method,method,get,method,controller,type,method,name,args,return,from,method,internal,builder,controller,type,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodName(UriComponentsBuilder builder, 			Class<?> controllerType, String methodName, Object... args);1498780456;An alternative to {@link #fromMethodName(Class, String, Object...)} that_accepts a {@code UriComponentsBuilder} representing the base URL. This is_useful when using MvcUriComponentsBuilder outside the context of processing_a request or to apply a custom baseUrl not matching the current request._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param controllerType the controller_@param methodName the method name_@param args the argument values_@return a UriComponentsBuilder instance, never {@code null}_@throws IllegalArgumentException if there is no matching or_if there is more than one matching method;public static UriComponentsBuilder fromMethodName(UriComponentsBuilder builder,_			Class<?> controllerType, String methodName, Object... args) {__		Method method = getMethod(controllerType, methodName, args)__		return fromMethodInternal(builder, controllerType, method, args)__	};an,alternative,to,link,from,method,name,class,string,object,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,controller,type,the,controller,param,method,name,the,method,name,param,args,the,argument,values,return,a,uri,components,builder,instance,never,code,null,throws,illegal,argument,exception,if,there,is,no,matching,or,if,there,is,more,than,one,matching,method;public,static,uri,components,builder,from,method,name,uri,components,builder,builder,class,controller,type,string,method,name,object,args,method,method,get,method,controller,type,method,name,args,return,from,method,internal,builder,controller,type,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodName(UriComponentsBuilder builder, 			Class<?> controllerType, String methodName, Object... args);1500416137;An alternative to {@link #fromMethodName(Class, String, Object...)} that_accepts a {@code UriComponentsBuilder} representing the base URL. This is_useful when using MvcUriComponentsBuilder outside the context of processing_a request or to apply a custom baseUrl not matching the current request._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param controllerType the controller_@param methodName the method name_@param args the argument values_@return a UriComponentsBuilder instance, never {@code null}_@throws IllegalArgumentException if there is no matching or_if there is more than one matching method;public static UriComponentsBuilder fromMethodName(UriComponentsBuilder builder,_			Class<?> controllerType, String methodName, Object... args) {__		Method method = getMethod(controllerType, methodName, args)__		return fromMethodInternal(builder, controllerType, method, args)__	};an,alternative,to,link,from,method,name,class,string,object,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,controller,type,the,controller,param,method,name,the,method,name,param,args,the,argument,values,return,a,uri,components,builder,instance,never,code,null,throws,illegal,argument,exception,if,there,is,no,matching,or,if,there,is,more,than,one,matching,method;public,static,uri,components,builder,from,method,name,uri,components,builder,builder,class,controller,type,string,method,name,object,args,method,method,get,method,controller,type,method,name,args,return,from,method,internal,builder,controller,type,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodName(UriComponentsBuilder builder, 			Class<?> controllerType, String methodName, Object... args);1506097334;An alternative to {@link #fromMethodName(Class, String, Object...)} that_accepts a {@code UriComponentsBuilder} representing the base URL. This is_useful when using MvcUriComponentsBuilder outside the context of processing_a request or to apply a custom baseUrl not matching the current request._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param controllerType the controller_@param methodName the method name_@param args the argument values_@return a UriComponentsBuilder instance, never {@code null}_@throws IllegalArgumentException if there is no matching or_if there is more than one matching method;public static UriComponentsBuilder fromMethodName(UriComponentsBuilder builder,_			Class<?> controllerType, String methodName, Object... args) {__		Method method = getMethod(controllerType, methodName, args)__		return fromMethodInternal(builder, controllerType, method, args)__	};an,alternative,to,link,from,method,name,class,string,object,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,controller,type,the,controller,param,method,name,the,method,name,param,args,the,argument,values,return,a,uri,components,builder,instance,never,code,null,throws,illegal,argument,exception,if,there,is,no,matching,or,if,there,is,more,than,one,matching,method;public,static,uri,components,builder,from,method,name,uri,components,builder,builder,class,controller,type,string,method,name,object,args,method,method,get,method,controller,type,method,name,args,return,from,method,internal,builder,controller,type,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodName(UriComponentsBuilder builder, 			Class<?> controllerType, String methodName, Object... args);1518770299;An alternative to {@link #fromMethodName(Class, String, Object...)} that_accepts a {@code UriComponentsBuilder} representing the base URL. This is_useful when using MvcUriComponentsBuilder outside the context of processing_a request or to apply a custom baseUrl not matching the current request._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param controllerType the controller_@param methodName the method name_@param args the argument values_@return a UriComponentsBuilder instance, never {@code null}_@throws IllegalArgumentException if there is no matching or_if there is more than one matching method;public static UriComponentsBuilder fromMethodName(UriComponentsBuilder builder,_			Class<?> controllerType, String methodName, Object... args) {__		Method method = getMethod(controllerType, methodName, args)__		return fromMethodInternal(builder, controllerType, method, args)__	};an,alternative,to,link,from,method,name,class,string,object,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,controller,type,the,controller,param,method,name,the,method,name,param,args,the,argument,values,return,a,uri,components,builder,instance,never,code,null,throws,illegal,argument,exception,if,there,is,no,matching,or,if,there,is,more,than,one,matching,method;public,static,uri,components,builder,from,method,name,uri,components,builder,builder,class,controller,type,string,method,name,object,args,method,method,get,method,controller,type,method,name,args,return,from,method,internal,builder,controller,type,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodName(UriComponentsBuilder builder, 			Class<?> controllerType, String methodName, Object... args);1522354261;An alternative to {@link #fromMethodName(Class, String, Object...)} that_accepts a {@code UriComponentsBuilder} representing the base URL. This is_useful when using MvcUriComponentsBuilder outside the context of processing_a request or to apply a custom baseUrl not matching the current request._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param controllerType the controller_@param methodName the method name_@param args the argument values_@return a UriComponentsBuilder instance, never {@code null}_@throws IllegalArgumentException if there is no matching or_if there is more than one matching method;public static UriComponentsBuilder fromMethodName(UriComponentsBuilder builder,_			Class<?> controllerType, String methodName, Object... args) {__		Method method = getMethod(controllerType, methodName, args)__		return fromMethodInternal(builder, controllerType, method, args)__	};an,alternative,to,link,from,method,name,class,string,object,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,controller,type,the,controller,param,method,name,the,method,name,param,args,the,argument,values,return,a,uri,components,builder,instance,never,code,null,throws,illegal,argument,exception,if,there,is,no,matching,or,if,there,is,more,than,one,matching,method;public,static,uri,components,builder,from,method,name,uri,components,builder,builder,class,controller,type,string,method,name,object,args,method,method,get,method,controller,type,method,name,args,return,from,method,internal,builder,controller,type,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodName(UriComponentsBuilder builder, 			Class<?> controllerType, String methodName, Object... args);1523455554;An alternative to {@link #fromMethodName(Class, String, Object...)} that_accepts a {@code UriComponentsBuilder} representing the base URL. This is_useful when using MvcUriComponentsBuilder outside the context of processing_a request or to apply a custom baseUrl not matching the current request._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param controllerType the controller_@param methodName the method name_@param args the argument values_@return a UriComponentsBuilder instance, never {@code null}_@throws IllegalArgumentException if there is no matching or_if there is more than one matching method;public static UriComponentsBuilder fromMethodName(UriComponentsBuilder builder,_			Class<?> controllerType, String methodName, Object... args) {__		Method method = getMethod(controllerType, methodName, args)__		return fromMethodInternal(builder, controllerType, method, args)__	};an,alternative,to,link,from,method,name,class,string,object,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,controller,type,the,controller,param,method,name,the,method,name,param,args,the,argument,values,return,a,uri,components,builder,instance,never,code,null,throws,illegal,argument,exception,if,there,is,no,matching,or,if,there,is,more,than,one,matching,method;public,static,uri,components,builder,from,method,name,uri,components,builder,builder,class,controller,type,string,method,name,object,args,method,method,get,method,controller,type,method,name,args,return,from,method,internal,builder,controller,type,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodName(UriComponentsBuilder builder, 			Class<?> controllerType, String methodName, Object... args);1529028426;An alternative to {@link #fromMethodName(Class, String, Object...)} that_accepts a {@code UriComponentsBuilder} representing the base URL. This is_useful when using MvcUriComponentsBuilder outside the context of processing_a request or to apply a custom baseUrl not matching the current request._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param controllerType the controller_@param methodName the method name_@param args the argument values_@return a UriComponentsBuilder instance, never {@code null}_@throws IllegalArgumentException if there is no matching or_if there is more than one matching method;public static UriComponentsBuilder fromMethodName(UriComponentsBuilder builder,_			Class<?> controllerType, String methodName, Object... args) {__		Method method = getMethod(controllerType, methodName, args)__		return fromMethodInternal(builder, controllerType, method, args)__	};an,alternative,to,link,from,method,name,class,string,object,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,controller,type,the,controller,param,method,name,the,method,name,param,args,the,argument,values,return,a,uri,components,builder,instance,never,code,null,throws,illegal,argument,exception,if,there,is,no,matching,or,if,there,is,more,than,one,matching,method;public,static,uri,components,builder,from,method,name,uri,components,builder,builder,class,controller,type,string,method,name,object,args,method,method,get,method,controller,type,method,name,args,return,from,method,internal,builder,controller,type,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodName(UriComponentsBuilder builder, 			Class<?> controllerType, String methodName, Object... args);1529028426;An alternative to {@link #fromMethodName(Class, String, Object...)} that_accepts a {@code UriComponentsBuilder} representing the base URL. This is_useful when using MvcUriComponentsBuilder outside the context of processing_a request or to apply a custom baseUrl not matching the current request._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param controllerType the controller_@param methodName the method name_@param args the argument values_@return a UriComponentsBuilder instance, never {@code null}_@throws IllegalArgumentException if there is no matching or_if there is more than one matching method;public static UriComponentsBuilder fromMethodName(UriComponentsBuilder builder,_			Class<?> controllerType, String methodName, Object... args) {__		Method method = getMethod(controllerType, methodName, args)__		return fromMethodInternal(builder, controllerType, method, args)__	};an,alternative,to,link,from,method,name,class,string,object,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,controller,type,the,controller,param,method,name,the,method,name,param,args,the,argument,values,return,a,uri,components,builder,instance,never,code,null,throws,illegal,argument,exception,if,there,is,no,matching,or,if,there,is,more,than,one,matching,method;public,static,uri,components,builder,from,method,name,uri,components,builder,builder,class,controller,type,string,method,name,object,args,method,method,get,method,controller,type,method,name,args,return,from,method,internal,builder,controller,type,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodName(UriComponentsBuilder builder, 			Class<?> controllerType, String methodName, Object... args);1529028713;An alternative to {@link #fromMethodName(Class, String, Object...)} that_accepts a {@code UriComponentsBuilder} representing the base URL. This is_useful when using MvcUriComponentsBuilder outside the context of processing_a request or to apply a custom baseUrl not matching the current request._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param controllerType the controller_@param methodName the method name_@param args the argument values_@return a UriComponentsBuilder instance, never {@code null}_@throws IllegalArgumentException if there is no matching or_if there is more than one matching method;public static UriComponentsBuilder fromMethodName(UriComponentsBuilder builder,_			Class<?> controllerType, String methodName, Object... args) {__		Method method = getMethod(controllerType, methodName, args)__		return fromMethodInternal(builder, controllerType, method, args)__	};an,alternative,to,link,from,method,name,class,string,object,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,controller,type,the,controller,param,method,name,the,method,name,param,args,the,argument,values,return,a,uri,components,builder,instance,never,code,null,throws,illegal,argument,exception,if,there,is,no,matching,or,if,there,is,more,than,one,matching,method;public,static,uri,components,builder,from,method,name,uri,components,builder,builder,class,controller,type,string,method,name,object,args,method,method,get,method,controller,type,method,name,args,return,from,method,internal,builder,controller,type,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodName(UriComponentsBuilder builder, 			Class<?> controllerType, String methodName, Object... args);1529361191;An alternative to {@link #fromMethodName(Class, String, Object...)} that_accepts a {@code UriComponentsBuilder} representing the base URL. This is_useful when using MvcUriComponentsBuilder outside the context of processing_a request or to apply a custom baseUrl not matching the current request._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param controllerType the controller_@param methodName the method name_@param args the argument values_@return a UriComponentsBuilder instance, never {@code null}_@throws IllegalArgumentException if there is no matching or_if there is more than one matching method;public static UriComponentsBuilder fromMethodName(UriComponentsBuilder builder,_			Class<?> controllerType, String methodName, Object... args) {__		Method method = getMethod(controllerType, methodName, args)__		return fromMethodInternal(builder, controllerType, method, args)__	};an,alternative,to,link,from,method,name,class,string,object,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,controller,type,the,controller,param,method,name,the,method,name,param,args,the,argument,values,return,a,uri,components,builder,instance,never,code,null,throws,illegal,argument,exception,if,there,is,no,matching,or,if,there,is,more,than,one,matching,method;public,static,uri,components,builder,from,method,name,uri,components,builder,builder,class,controller,type,string,method,name,object,args,method,method,get,method,controller,type,method,name,args,return,from,method,internal,builder,controller,type,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodName(UriComponentsBuilder builder, 			Class<?> controllerType, String methodName, Object... args);1530174524;An alternative to {@link #fromMethodName(Class, String, Object...)} that_accepts a {@code UriComponentsBuilder} representing the base URL. This is_useful when using MvcUriComponentsBuilder outside the context of processing_a request or to apply a custom baseUrl not matching the current request._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param controllerType the controller_@param methodName the method name_@param args the argument values_@return a UriComponentsBuilder instance, never {@code null}_@throws IllegalArgumentException if there is no matching or_if there is more than one matching method;public static UriComponentsBuilder fromMethodName(UriComponentsBuilder builder,_			Class<?> controllerType, String methodName, Object... args) {__		Method method = getMethod(controllerType, methodName, args)__		return fromMethodInternal(builder, controllerType, method, args)__	};an,alternative,to,link,from,method,name,class,string,object,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,controller,type,the,controller,param,method,name,the,method,name,param,args,the,argument,values,return,a,uri,components,builder,instance,never,code,null,throws,illegal,argument,exception,if,there,is,no,matching,or,if,there,is,more,than,one,matching,method;public,static,uri,components,builder,from,method,name,uri,components,builder,builder,class,controller,type,string,method,name,object,args,method,method,get,method,controller,type,method,name,args,return,from,method,internal,builder,controller,type,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodName(UriComponentsBuilder builder, 			Class<?> controllerType, String methodName, Object... args);1532041662;An alternative to {@link #fromMethodName(Class, String, Object...)} that_accepts a {@code UriComponentsBuilder} representing the base URL. This is_useful when using MvcUriComponentsBuilder outside the context of processing_a request or to apply a custom baseUrl not matching the current request._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param controllerType the controller_@param methodName the method name_@param args the argument values_@return a UriComponentsBuilder instance, never {@code null}_@throws IllegalArgumentException if there is no matching or_if there is more than one matching method;public static UriComponentsBuilder fromMethodName(UriComponentsBuilder builder,_			Class<?> controllerType, String methodName, Object... args) {__		Method method = getMethod(controllerType, methodName, args)__		return fromMethodInternal(builder, controllerType, method, args)__	};an,alternative,to,link,from,method,name,class,string,object,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,controller,type,the,controller,param,method,name,the,method,name,param,args,the,argument,values,return,a,uri,components,builder,instance,never,code,null,throws,illegal,argument,exception,if,there,is,no,matching,or,if,there,is,more,than,one,matching,method;public,static,uri,components,builder,from,method,name,uri,components,builder,builder,class,controller,type,string,method,name,object,args,method,method,get,method,controller,type,method,name,args,return,from,method,internal,builder,controller,type,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodName(UriComponentsBuilder builder, 			Class<?> controllerType, String methodName, Object... args);1532041662;An alternative to {@link #fromMethodName(Class, String, Object...)} that_accepts a {@code UriComponentsBuilder} representing the base URL. This is_useful when using MvcUriComponentsBuilder outside the context of processing_a request or to apply a custom baseUrl not matching the current request._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param controllerType the controller_@param methodName the method name_@param args the argument values_@return a UriComponentsBuilder instance, never {@code null}_@throws IllegalArgumentException if there is no matching or_if there is more than one matching method;public static UriComponentsBuilder fromMethodName(UriComponentsBuilder builder,_			Class<?> controllerType, String methodName, Object... args) {__		Method method = getMethod(controllerType, methodName, args)__		return fromMethodInternal(builder, controllerType, method, args)__	};an,alternative,to,link,from,method,name,class,string,object,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,controller,type,the,controller,param,method,name,the,method,name,param,args,the,argument,values,return,a,uri,components,builder,instance,never,code,null,throws,illegal,argument,exception,if,there,is,no,matching,or,if,there,is,more,than,one,matching,method;public,static,uri,components,builder,from,method,name,uri,components,builder,builder,class,controller,type,string,method,name,object,args,method,method,get,method,controller,type,method,name,args,return,from,method,internal,builder,controller,type,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodName(UriComponentsBuilder builder, 			Class<?> controllerType, String methodName, Object... args);1548943222;An alternative to {@link #fromMethodName(Class, String, Object...)} that_accepts a {@code UriComponentsBuilder} representing the base URL. This is_useful when using MvcUriComponentsBuilder outside the context of processing_a request or to apply a custom baseUrl not matching the current request._<p><strong>Note:</strong> This method extracts values from "Forwarded"_and "X-Forwarded-*" headers if found. See class-level docs._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param controllerType the controller_@param methodName the method name_@param args the argument values_@return a UriComponentsBuilder instance, never {@code null}_@throws IllegalArgumentException if there is no matching or_if there is more than one matching method;public static UriComponentsBuilder fromMethodName(UriComponentsBuilder builder,_			Class<?> controllerType, String methodName, Object... args) {__		Method method = getMethod(controllerType, methodName, args)__		return fromMethodInternal(builder, controllerType, method, args)__	};an,alternative,to,link,from,method,name,class,string,object,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,p,strong,note,strong,this,method,extracts,values,from,forwarded,and,x,forwarded,headers,if,found,see,class,level,docs,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,controller,type,the,controller,param,method,name,the,method,name,param,args,the,argument,values,return,a,uri,components,builder,instance,never,code,null,throws,illegal,argument,exception,if,there,is,no,matching,or,if,there,is,more,than,one,matching,method;public,static,uri,components,builder,from,method,name,uri,components,builder,builder,class,controller,type,string,method,name,object,args,method,method,get,method,controller,type,method,name,args,return,from,method,internal,builder,controller,type,method,args
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromController(UriComponentsBuilder builder, 			Class<?> controllerType);1431975386;An alternative to {@link #fromController(Class)} that accepts a_{@code UriComponentsBuilder} representing the base URL. This is useful_when using MvcUriComponentsBuilder outside the context of processing a_request or to apply a custom baseUrl not matching the current request._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param controllerType the controller to build a URI for_@return a UriComponentsBuilder instance (never {@code null});public static UriComponentsBuilder fromController(UriComponentsBuilder builder,_			Class<?> controllerType) {__		builder = getBaseUrlToUse(builder)__		String mapping = getTypeRequestMapping(controllerType)__		return builder.path(mapping)__	};an,alternative,to,link,from,controller,class,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,controller,type,the,controller,to,build,a,uri,for,return,a,uri,components,builder,instance,never,code,null;public,static,uri,components,builder,from,controller,uri,components,builder,builder,class,controller,type,builder,get,base,url,to,use,builder,string,mapping,get,type,request,mapping,controller,type,return,builder,path,mapping
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromController(UriComponentsBuilder builder, 			Class<?> controllerType);1432125256;An alternative to {@link #fromController(Class)} that accepts a_{@code UriComponentsBuilder} representing the base URL. This is useful_when using MvcUriComponentsBuilder outside the context of processing a_request or to apply a custom baseUrl not matching the current request._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param controllerType the controller to build a URI for_@return a UriComponentsBuilder instance (never {@code null});public static UriComponentsBuilder fromController(UriComponentsBuilder builder,_			Class<?> controllerType) {__		builder = getBaseUrlToUse(builder)__		String mapping = getTypeRequestMapping(controllerType)__		return builder.path(mapping)__	};an,alternative,to,link,from,controller,class,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,controller,type,the,controller,to,build,a,uri,for,return,a,uri,components,builder,instance,never,code,null;public,static,uri,components,builder,from,controller,uri,components,builder,builder,class,controller,type,builder,get,base,url,to,use,builder,string,mapping,get,type,request,mapping,controller,type,return,builder,path,mapping
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromController(UriComponentsBuilder builder, 			Class<?> controllerType);1432156007;An alternative to {@link #fromController(Class)} that accepts a_{@code UriComponentsBuilder} representing the base URL. This is useful_when using MvcUriComponentsBuilder outside the context of processing a_request or to apply a custom baseUrl not matching the current request._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param controllerType the controller to build a URI for_@return a UriComponentsBuilder instance (never {@code null});public static UriComponentsBuilder fromController(UriComponentsBuilder builder,_			Class<?> controllerType) {__		builder = getBaseUrlToUse(builder)__		String mapping = getTypeRequestMapping(controllerType)__		return builder.path(mapping)__	};an,alternative,to,link,from,controller,class,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,controller,type,the,controller,to,build,a,uri,for,return,a,uri,components,builder,instance,never,code,null;public,static,uri,components,builder,from,controller,uri,components,builder,builder,class,controller,type,builder,get,base,url,to,use,builder,string,mapping,get,type,request,mapping,controller,type,return,builder,path,mapping
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromController(UriComponentsBuilder builder, 			Class<?> controllerType);1432856630;An alternative to {@link #fromController(Class)} that accepts a_{@code UriComponentsBuilder} representing the base URL. This is useful_when using MvcUriComponentsBuilder outside the context of processing a_request or to apply a custom baseUrl not matching the current request._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param controllerType the controller to build a URI for_@return a UriComponentsBuilder instance (never {@code null});public static UriComponentsBuilder fromController(UriComponentsBuilder builder,_			Class<?> controllerType) {__		builder = getBaseUrlToUse(builder)__		String mapping = getTypeRequestMapping(controllerType)__		return builder.path(mapping)__	};an,alternative,to,link,from,controller,class,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,controller,type,the,controller,to,build,a,uri,for,return,a,uri,components,builder,instance,never,code,null;public,static,uri,components,builder,from,controller,uri,components,builder,builder,class,controller,type,builder,get,base,url,to,use,builder,string,mapping,get,type,request,mapping,controller,type,return,builder,path,mapping
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromController(UriComponentsBuilder builder, 			Class<?> controllerType);1432857824;An alternative to {@link #fromController(Class)} that accepts a_{@code UriComponentsBuilder} representing the base URL. This is useful_when using MvcUriComponentsBuilder outside the context of processing a_request or to apply a custom baseUrl not matching the current request._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param controllerType the controller to build a URI for_@return a UriComponentsBuilder instance (never {@code null});public static UriComponentsBuilder fromController(UriComponentsBuilder builder,_			Class<?> controllerType) {__		builder = getBaseUrlToUse(builder)__		String mapping = getTypeRequestMapping(controllerType)__		return builder.path(mapping)__	};an,alternative,to,link,from,controller,class,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,controller,type,the,controller,to,build,a,uri,for,return,a,uri,components,builder,instance,never,code,null;public,static,uri,components,builder,from,controller,uri,components,builder,builder,class,controller,type,builder,get,base,url,to,use,builder,string,mapping,get,type,request,mapping,controller,type,return,builder,path,mapping
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromController(UriComponentsBuilder builder, 			Class<?> controllerType);1434234880;An alternative to {@link #fromController(Class)} that accepts a_{@code UriComponentsBuilder} representing the base URL. This is useful_when using MvcUriComponentsBuilder outside the context of processing a_request or to apply a custom baseUrl not matching the current request._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param controllerType the controller to build a URI for_@return a UriComponentsBuilder instance (never {@code null});public static UriComponentsBuilder fromController(UriComponentsBuilder builder,_			Class<?> controllerType) {__		builder = getBaseUrlToUse(builder)__		String mapping = getTypeRequestMapping(controllerType)__		return builder.path(mapping)__	};an,alternative,to,link,from,controller,class,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,controller,type,the,controller,to,build,a,uri,for,return,a,uri,components,builder,instance,never,code,null;public,static,uri,components,builder,from,controller,uri,components,builder,builder,class,controller,type,builder,get,base,url,to,use,builder,string,mapping,get,type,request,mapping,controller,type,return,builder,path,mapping
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromController(UriComponentsBuilder builder, 			Class<?> controllerType);1434484897;An alternative to {@link #fromController(Class)} that accepts a_{@code UriComponentsBuilder} representing the base URL. This is useful_when using MvcUriComponentsBuilder outside the context of processing a_request or to apply a custom baseUrl not matching the current request._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param controllerType the controller to build a URI for_@return a UriComponentsBuilder instance (never {@code null});public static UriComponentsBuilder fromController(UriComponentsBuilder builder,_			Class<?> controllerType) {__		builder = getBaseUrlToUse(builder)__		String mapping = getTypeRequestMapping(controllerType)__		return builder.path(mapping)__	};an,alternative,to,link,from,controller,class,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,controller,type,the,controller,to,build,a,uri,for,return,a,uri,components,builder,instance,never,code,null;public,static,uri,components,builder,from,controller,uri,components,builder,builder,class,controller,type,builder,get,base,url,to,use,builder,string,mapping,get,type,request,mapping,controller,type,return,builder,path,mapping
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromController(UriComponentsBuilder builder, 			Class<?> controllerType);1434726592;An alternative to {@link #fromController(Class)} that accepts a_{@code UriComponentsBuilder} representing the base URL. This is useful_when using MvcUriComponentsBuilder outside the context of processing a_request or to apply a custom baseUrl not matching the current request._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param controllerType the controller to build a URI for_@return a UriComponentsBuilder instance (never {@code null});public static UriComponentsBuilder fromController(UriComponentsBuilder builder,_			Class<?> controllerType) {__		builder = getBaseUrlToUse(builder)__		String mapping = getTypeRequestMapping(controllerType)__		return builder.path(mapping)__	};an,alternative,to,link,from,controller,class,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,controller,type,the,controller,to,build,a,uri,for,return,a,uri,components,builder,instance,never,code,null;public,static,uri,components,builder,from,controller,uri,components,builder,builder,class,controller,type,builder,get,base,url,to,use,builder,string,mapping,get,type,request,mapping,controller,type,return,builder,path,mapping
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromController(UriComponentsBuilder builder, 			Class<?> controllerType);1435615322;An alternative to {@link #fromController(Class)} that accepts a_{@code UriComponentsBuilder} representing the base URL. This is useful_when using MvcUriComponentsBuilder outside the context of processing a_request or to apply a custom baseUrl not matching the current request._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param controllerType the controller to build a URI for_@return a UriComponentsBuilder instance (never {@code null});public static UriComponentsBuilder fromController(UriComponentsBuilder builder,_			Class<?> controllerType) {__		builder = getBaseUrlToUse(builder)__		String mapping = getTypeRequestMapping(controllerType)__		return builder.path(mapping)__	};an,alternative,to,link,from,controller,class,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,controller,type,the,controller,to,build,a,uri,for,return,a,uri,components,builder,instance,never,code,null;public,static,uri,components,builder,from,controller,uri,components,builder,builder,class,controller,type,builder,get,base,url,to,use,builder,string,mapping,get,type,request,mapping,controller,type,return,builder,path,mapping
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromController(UriComponentsBuilder builder, 			Class<?> controllerType);1439294371;An alternative to {@link #fromController(Class)} that accepts a_{@code UriComponentsBuilder} representing the base URL. This is useful_when using MvcUriComponentsBuilder outside the context of processing a_request or to apply a custom baseUrl not matching the current request._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param controllerType the controller to build a URI for_@return a UriComponentsBuilder instance (never {@code null});public static UriComponentsBuilder fromController(UriComponentsBuilder builder,_			Class<?> controllerType) {__		builder = getBaseUrlToUse(builder)__		String mapping = getTypeRequestMapping(controllerType)__		return builder.path(mapping)__	};an,alternative,to,link,from,controller,class,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,controller,type,the,controller,to,build,a,uri,for,return,a,uri,components,builder,instance,never,code,null;public,static,uri,components,builder,from,controller,uri,components,builder,builder,class,controller,type,builder,get,base,url,to,use,builder,string,mapping,get,type,request,mapping,controller,type,return,builder,path,mapping
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromController(UriComponentsBuilder builder, 			Class<?> controllerType);1447077465;An alternative to {@link #fromController(Class)} that accepts a_{@code UriComponentsBuilder} representing the base URL. This is useful_when using MvcUriComponentsBuilder outside the context of processing a_request or to apply a custom baseUrl not matching the current request._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param controllerType the controller to build a URI for_@return a UriComponentsBuilder instance (never {@code null});public static UriComponentsBuilder fromController(UriComponentsBuilder builder,_			Class<?> controllerType) {__		builder = getBaseUrlToUse(builder)__		String mapping = getTypeRequestMapping(controllerType)__		return builder.path(mapping)__	};an,alternative,to,link,from,controller,class,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,controller,type,the,controller,to,build,a,uri,for,return,a,uri,components,builder,instance,never,code,null;public,static,uri,components,builder,from,controller,uri,components,builder,builder,class,controller,type,builder,get,base,url,to,use,builder,string,mapping,get,type,request,mapping,controller,type,return,builder,path,mapping
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromController(UriComponentsBuilder builder, 			Class<?> controllerType);1458830024;An alternative to {@link #fromController(Class)} that accepts a_{@code UriComponentsBuilder} representing the base URL. This is useful_when using MvcUriComponentsBuilder outside the context of processing a_request or to apply a custom baseUrl not matching the current request._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param controllerType the controller to build a URI for_@return a UriComponentsBuilder instance (never {@code null});public static UriComponentsBuilder fromController(UriComponentsBuilder builder,_			Class<?> controllerType) {__		builder = getBaseUrlToUse(builder)__		String mapping = getTypeRequestMapping(controllerType)__		return builder.path(mapping)__	};an,alternative,to,link,from,controller,class,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,controller,type,the,controller,to,build,a,uri,for,return,a,uri,components,builder,instance,never,code,null;public,static,uri,components,builder,from,controller,uri,components,builder,builder,class,controller,type,builder,get,base,url,to,use,builder,string,mapping,get,type,request,mapping,controller,type,return,builder,path,mapping
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromController(UriComponentsBuilder builder, 			Class<?> controllerType);1461047077;An alternative to {@link #fromController(Class)} that accepts a_{@code UriComponentsBuilder} representing the base URL. This is useful_when using MvcUriComponentsBuilder outside the context of processing a_request or to apply a custom baseUrl not matching the current request._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param controllerType the controller to build a URI for_@return a UriComponentsBuilder instance (never {@code null});public static UriComponentsBuilder fromController(UriComponentsBuilder builder,_			Class<?> controllerType) {__		builder = getBaseUrlToUse(builder)__		String mapping = getTypeRequestMapping(controllerType)__		return builder.path(mapping)__	};an,alternative,to,link,from,controller,class,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,controller,type,the,controller,to,build,a,uri,for,return,a,uri,components,builder,instance,never,code,null;public,static,uri,components,builder,from,controller,uri,components,builder,builder,class,controller,type,builder,get,base,url,to,use,builder,string,mapping,get,type,request,mapping,controller,type,return,builder,path,mapping
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromController(UriComponentsBuilder builder, 			Class<?> controllerType);1467677340;An alternative to {@link #fromController(Class)} that accepts a_{@code UriComponentsBuilder} representing the base URL. This is useful_when using MvcUriComponentsBuilder outside the context of processing a_request or to apply a custom baseUrl not matching the current request._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param controllerType the controller to build a URI for_@return a UriComponentsBuilder instance (never {@code null});public static UriComponentsBuilder fromController(UriComponentsBuilder builder,_			Class<?> controllerType) {__		builder = getBaseUrlToUse(builder)__		String mapping = getTypeRequestMapping(controllerType)__		return builder.path(mapping)__	};an,alternative,to,link,from,controller,class,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,controller,type,the,controller,to,build,a,uri,for,return,a,uri,components,builder,instance,never,code,null;public,static,uri,components,builder,from,controller,uri,components,builder,builder,class,controller,type,builder,get,base,url,to,use,builder,string,mapping,get,type,request,mapping,controller,type,return,builder,path,mapping
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromController(UriComponentsBuilder builder, 			Class<?> controllerType);1467726769;An alternative to {@link #fromController(Class)} that accepts a_{@code UriComponentsBuilder} representing the base URL. This is useful_when using MvcUriComponentsBuilder outside the context of processing a_request or to apply a custom baseUrl not matching the current request._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param controllerType the controller to build a URI for_@return a UriComponentsBuilder instance (never {@code null});public static UriComponentsBuilder fromController(UriComponentsBuilder builder,_			Class<?> controllerType) {__		builder = getBaseUrlToUse(builder)__		String mapping = getTypeRequestMapping(controllerType)__		return builder.path(mapping)__	};an,alternative,to,link,from,controller,class,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,controller,type,the,controller,to,build,a,uri,for,return,a,uri,components,builder,instance,never,code,null;public,static,uri,components,builder,from,controller,uri,components,builder,builder,class,controller,type,builder,get,base,url,to,use,builder,string,mapping,get,type,request,mapping,controller,type,return,builder,path,mapping
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromController(UriComponentsBuilder builder, 			Class<?> controllerType);1467730834;An alternative to {@link #fromController(Class)} that accepts a_{@code UriComponentsBuilder} representing the base URL. This is useful_when using MvcUriComponentsBuilder outside the context of processing a_request or to apply a custom baseUrl not matching the current request._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param controllerType the controller to build a URI for_@return a UriComponentsBuilder instance (never {@code null});public static UriComponentsBuilder fromController(UriComponentsBuilder builder,_			Class<?> controllerType) {__		builder = getBaseUrlToUse(builder)__		String mapping = getTypeRequestMapping(controllerType)__		return builder.path(mapping)__	};an,alternative,to,link,from,controller,class,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,controller,type,the,controller,to,build,a,uri,for,return,a,uri,components,builder,instance,never,code,null;public,static,uri,components,builder,from,controller,uri,components,builder,builder,class,controller,type,builder,get,base,url,to,use,builder,string,mapping,get,type,request,mapping,controller,type,return,builder,path,mapping
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromController(UriComponentsBuilder builder, 			Class<?> controllerType);1467846264;An alternative to {@link #fromController(Class)} that accepts a_{@code UriComponentsBuilder} representing the base URL. This is useful_when using MvcUriComponentsBuilder outside the context of processing a_request or to apply a custom baseUrl not matching the current request._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param controllerType the controller to build a URI for_@return a UriComponentsBuilder instance (never {@code null});public static UriComponentsBuilder fromController(UriComponentsBuilder builder,_			Class<?> controllerType) {__		builder = getBaseUrlToUse(builder)__		String mapping = getTypeRequestMapping(controllerType)__		return builder.path(mapping)__	};an,alternative,to,link,from,controller,class,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,controller,type,the,controller,to,build,a,uri,for,return,a,uri,components,builder,instance,never,code,null;public,static,uri,components,builder,from,controller,uri,components,builder,builder,class,controller,type,builder,get,base,url,to,use,builder,string,mapping,get,type,request,mapping,controller,type,return,builder,path,mapping
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromController(UriComponentsBuilder builder, 			Class<?> controllerType);1468613531;An alternative to {@link #fromController(Class)} that accepts a_{@code UriComponentsBuilder} representing the base URL. This is useful_when using MvcUriComponentsBuilder outside the context of processing a_request or to apply a custom baseUrl not matching the current request._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param controllerType the controller to build a URI for_@return a UriComponentsBuilder instance (never {@code null});public static UriComponentsBuilder fromController(UriComponentsBuilder builder,_			Class<?> controllerType) {__		builder = getBaseUrlToUse(builder)__		String mapping = getTypeRequestMapping(controllerType)__		return builder.path(mapping)__	};an,alternative,to,link,from,controller,class,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,controller,type,the,controller,to,build,a,uri,for,return,a,uri,components,builder,instance,never,code,null;public,static,uri,components,builder,from,controller,uri,components,builder,builder,class,controller,type,builder,get,base,url,to,use,builder,string,mapping,get,type,request,mapping,controller,type,return,builder,path,mapping
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromController(UriComponentsBuilder builder, 			Class<?> controllerType);1468948866;An alternative to {@link #fromController(Class)} that accepts a_{@code UriComponentsBuilder} representing the base URL. This is useful_when using MvcUriComponentsBuilder outside the context of processing a_request or to apply a custom baseUrl not matching the current request._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param controllerType the controller to build a URI for_@return a UriComponentsBuilder instance (never {@code null});public static UriComponentsBuilder fromController(UriComponentsBuilder builder,_			Class<?> controllerType) {__		builder = getBaseUrlToUse(builder)__		String mapping = getTypeRequestMapping(controllerType)__		return builder.path(mapping)__	};an,alternative,to,link,from,controller,class,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,controller,type,the,controller,to,build,a,uri,for,return,a,uri,components,builder,instance,never,code,null;public,static,uri,components,builder,from,controller,uri,components,builder,builder,class,controller,type,builder,get,base,url,to,use,builder,string,mapping,get,type,request,mapping,controller,type,return,builder,path,mapping
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromController(UriComponentsBuilder builder, 			Class<?> controllerType);1485810955;An alternative to {@link #fromController(Class)} that accepts a_{@code UriComponentsBuilder} representing the base URL. This is useful_when using MvcUriComponentsBuilder outside the context of processing a_request or to apply a custom baseUrl not matching the current request._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param controllerType the controller to build a URI for_@return a UriComponentsBuilder instance (never {@code null});public static UriComponentsBuilder fromController(UriComponentsBuilder builder,_			Class<?> controllerType) {__		builder = getBaseUrlToUse(builder)__		String mapping = getTypeRequestMapping(controllerType)__		return builder.path(mapping)__	};an,alternative,to,link,from,controller,class,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,controller,type,the,controller,to,build,a,uri,for,return,a,uri,components,builder,instance,never,code,null;public,static,uri,components,builder,from,controller,uri,components,builder,builder,class,controller,type,builder,get,base,url,to,use,builder,string,mapping,get,type,request,mapping,controller,type,return,builder,path,mapping
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromController(UriComponentsBuilder builder, 			Class<?> controllerType);1486634978;An alternative to {@link #fromController(Class)} that accepts a_{@code UriComponentsBuilder} representing the base URL. This is useful_when using MvcUriComponentsBuilder outside the context of processing a_request or to apply a custom baseUrl not matching the current request._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param controllerType the controller to build a URI for_@return a UriComponentsBuilder instance (never {@code null});public static UriComponentsBuilder fromController(UriComponentsBuilder builder,_			Class<?> controllerType) {__		builder = getBaseUrlToUse(builder)__		String mapping = getTypeRequestMapping(controllerType)__		return builder.path(mapping)__	};an,alternative,to,link,from,controller,class,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,controller,type,the,controller,to,build,a,uri,for,return,a,uri,components,builder,instance,never,code,null;public,static,uri,components,builder,from,controller,uri,components,builder,builder,class,controller,type,builder,get,base,url,to,use,builder,string,mapping,get,type,request,mapping,controller,type,return,builder,path,mapping
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromController(UriComponentsBuilder builder, 			Class<?> controllerType);1486635693;An alternative to {@link #fromController(Class)} that accepts a_{@code UriComponentsBuilder} representing the base URL. This is useful_when using MvcUriComponentsBuilder outside the context of processing a_request or to apply a custom baseUrl not matching the current request._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param controllerType the controller to build a URI for_@return a UriComponentsBuilder instance (never {@code null});public static UriComponentsBuilder fromController(UriComponentsBuilder builder,_			Class<?> controllerType) {__		builder = getBaseUrlToUse(builder)__		String mapping = getTypeRequestMapping(controllerType)__		return builder.path(mapping)__	};an,alternative,to,link,from,controller,class,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,controller,type,the,controller,to,build,a,uri,for,return,a,uri,components,builder,instance,never,code,null;public,static,uri,components,builder,from,controller,uri,components,builder,builder,class,controller,type,builder,get,base,url,to,use,builder,string,mapping,get,type,request,mapping,controller,type,return,builder,path,mapping
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromController(UriComponentsBuilder builder, 			Class<?> controllerType);1495868221;An alternative to {@link #fromController(Class)} that accepts a_{@code UriComponentsBuilder} representing the base URL. This is useful_when using MvcUriComponentsBuilder outside the context of processing a_request or to apply a custom baseUrl not matching the current request._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param controllerType the controller to build a URI for_@return a UriComponentsBuilder instance (never {@code null});public static UriComponentsBuilder fromController(UriComponentsBuilder builder,_			Class<?> controllerType) {__		builder = getBaseUrlToUse(builder)__		String mapping = getTypeRequestMapping(controllerType)__		return builder.path(mapping)__	};an,alternative,to,link,from,controller,class,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,controller,type,the,controller,to,build,a,uri,for,return,a,uri,components,builder,instance,never,code,null;public,static,uri,components,builder,from,controller,uri,components,builder,builder,class,controller,type,builder,get,base,url,to,use,builder,string,mapping,get,type,request,mapping,controller,type,return,builder,path,mapping
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromController(UriComponentsBuilder builder, 			Class<?> controllerType);1496242568;An alternative to {@link #fromController(Class)} that accepts a_{@code UriComponentsBuilder} representing the base URL. This is useful_when using MvcUriComponentsBuilder outside the context of processing a_request or to apply a custom baseUrl not matching the current request._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param controllerType the controller to build a URI for_@return a UriComponentsBuilder instance (never {@code null});public static UriComponentsBuilder fromController(UriComponentsBuilder builder,_			Class<?> controllerType) {__		builder = getBaseUrlToUse(builder)__		String mapping = getTypeRequestMapping(controllerType)__		return builder.path(mapping)__	};an,alternative,to,link,from,controller,class,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,controller,type,the,controller,to,build,a,uri,for,return,a,uri,components,builder,instance,never,code,null;public,static,uri,components,builder,from,controller,uri,components,builder,builder,class,controller,type,builder,get,base,url,to,use,builder,string,mapping,get,type,request,mapping,controller,type,return,builder,path,mapping
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromController(UriComponentsBuilder builder, Class<?> controllerType);1426553101;An alternative to {@link #fromController(Class)} that accepts a_{@code UriComponentsBuilder} representing the base URL. This is useful_when using MvcUriComponentsBuilder outside the context of processing a_request or to apply a custom baseUrl not matching the current request._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param controllerType the controller to build a URI for_@return a UriComponentsBuilder instance (never {@code null});public static UriComponentsBuilder fromController(UriComponentsBuilder builder, Class<?> controllerType) {_		if (builder != null) {_			builder = (UriComponentsBuilder) builder.clone()__		}_		else {_			builder = ServletUriComponentsBuilder.fromCurrentServletMapping()__		}_		String mapping = getTypeRequestMapping(controllerType)__		return builder.path(mapping)__	};an,alternative,to,link,from,controller,class,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,controller,type,the,controller,to,build,a,uri,for,return,a,uri,components,builder,instance,never,code,null;public,static,uri,components,builder,from,controller,uri,components,builder,builder,class,controller,type,if,builder,null,builder,uri,components,builder,builder,clone,else,builder,servlet,uri,components,builder,from,current,servlet,mapping,string,mapping,get,type,request,mapping,controller,type,return,builder,path,mapping
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromController(UriComponentsBuilder builder, Class<?> controllerType);1429801417;An alternative to {@link #fromController(Class)} that accepts a_{@code UriComponentsBuilder} representing the base URL. This is useful_when using MvcUriComponentsBuilder outside the context of processing a_request or to apply a custom baseUrl not matching the current request._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param controllerType the controller to build a URI for_@return a UriComponentsBuilder instance (never {@code null});public static UriComponentsBuilder fromController(UriComponentsBuilder builder, Class<?> controllerType) {_		if (builder != null) {_			builder = (UriComponentsBuilder) builder.clone()__		}_		else {_			builder = ServletUriComponentsBuilder.fromCurrentServletMapping()__		}_		String mapping = getTypeRequestMapping(controllerType)__		return builder.path(mapping)__	};an,alternative,to,link,from,controller,class,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,controller,type,the,controller,to,build,a,uri,for,return,a,uri,components,builder,instance,never,code,null;public,static,uri,components,builder,from,controller,uri,components,builder,builder,class,controller,type,if,builder,null,builder,uri,components,builder,builder,clone,else,builder,servlet,uri,components,builder,from,current,servlet,mapping,string,mapping,get,type,request,mapping,controller,type,return,builder,path,mapping
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromController(UriComponentsBuilder builder, Class<?> controllerType);1429801944;An alternative to {@link #fromController(Class)} that accepts a_{@code UriComponentsBuilder} representing the base URL. This is useful_when using MvcUriComponentsBuilder outside the context of processing a_request or to apply a custom baseUrl not matching the current request._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param controllerType the controller to build a URI for_@return a UriComponentsBuilder instance (never {@code null});public static UriComponentsBuilder fromController(UriComponentsBuilder builder, Class<?> controllerType) {_		builder = getBaseUrlToUse(builder)__		String mapping = getTypeRequestMapping(controllerType)__		return builder.path(mapping)__	};an,alternative,to,link,from,controller,class,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,controller,type,the,controller,to,build,a,uri,for,return,a,uri,components,builder,instance,never,code,null;public,static,uri,components,builder,from,controller,uri,components,builder,builder,class,controller,type,builder,get,base,url,to,use,builder,string,mapping,get,type,request,mapping,controller,type,return,builder,path,mapping
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromController(UriComponentsBuilder builder, Class<?> controllerType);1429802180;An alternative to {@link #fromController(Class)} that accepts a_{@code UriComponentsBuilder} representing the base URL. This is useful_when using MvcUriComponentsBuilder outside the context of processing a_request or to apply a custom baseUrl not matching the current request._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param controllerType the controller to build a URI for_@return a UriComponentsBuilder instance (never {@code null});public static UriComponentsBuilder fromController(UriComponentsBuilder builder, Class<?> controllerType) {_		builder = getBaseUrlToUse(builder)__		String mapping = getTypeRequestMapping(controllerType)__		return builder.path(mapping)__	};an,alternative,to,link,from,controller,class,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,controller,type,the,controller,to,build,a,uri,for,return,a,uri,components,builder,instance,never,code,null;public,static,uri,components,builder,from,controller,uri,components,builder,builder,class,controller,type,builder,get,base,url,to,use,builder,string,mapping,get,type,request,mapping,controller,type,return,builder,path,mapping
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromController(UriComponentsBuilder builder, Class<?> controllerType);1429886024;An alternative to {@link #fromController(Class)} that accepts a_{@code UriComponentsBuilder} representing the base URL. This is useful_when using MvcUriComponentsBuilder outside the context of processing a_request or to apply a custom baseUrl not matching the current request._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param controllerType the controller to build a URI for_@return a UriComponentsBuilder instance (never {@code null});public static UriComponentsBuilder fromController(UriComponentsBuilder builder, Class<?> controllerType) {_		builder = getBaseUrlToUse(builder)__		String mapping = getTypeRequestMapping(controllerType)__		return builder.path(mapping)__	};an,alternative,to,link,from,controller,class,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,controller,type,the,controller,to,build,a,uri,for,return,a,uri,components,builder,instance,never,code,null;public,static,uri,components,builder,from,controller,uri,components,builder,builder,class,controller,type,builder,get,base,url,to,use,builder,string,mapping,get,type,request,mapping,controller,type,return,builder,path,mapping
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromController(UriComponentsBuilder builder, Class<?> controllerType);1429888980;An alternative to {@link #fromController(Class)} that accepts a_{@code UriComponentsBuilder} representing the base URL. This is useful_when using MvcUriComponentsBuilder outside the context of processing a_request or to apply a custom baseUrl not matching the current request._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param controllerType the controller to build a URI for_@return a UriComponentsBuilder instance (never {@code null});public static UriComponentsBuilder fromController(UriComponentsBuilder builder, Class<?> controllerType) {_		builder = getBaseUrlToUse(builder)__		String mapping = getTypeRequestMapping(controllerType)__		return builder.path(mapping)__	};an,alternative,to,link,from,controller,class,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,controller,type,the,controller,to,build,a,uri,for,return,a,uri,components,builder,instance,never,code,null;public,static,uri,components,builder,from,controller,uri,components,builder,builder,class,controller,type,builder,get,base,url,to,use,builder,string,mapping,get,type,request,mapping,controller,type,return,builder,path,mapping
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromController(UriComponentsBuilder builder, Class<?> controllerType);1430739806;An alternative to {@link #fromController(Class)} that accepts a_{@code UriComponentsBuilder} representing the base URL. This is useful_when using MvcUriComponentsBuilder outside the context of processing a_request or to apply a custom baseUrl not matching the current request._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param controllerType the controller to build a URI for_@return a UriComponentsBuilder instance (never {@code null});public static UriComponentsBuilder fromController(UriComponentsBuilder builder, Class<?> controllerType) {_		builder = getBaseUrlToUse(builder)__		String mapping = getTypeRequestMapping(controllerType)__		return builder.path(mapping)__	};an,alternative,to,link,from,controller,class,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,controller,type,the,controller,to,build,a,uri,for,return,a,uri,components,builder,instance,never,code,null;public,static,uri,components,builder,from,controller,uri,components,builder,builder,class,controller,type,builder,get,base,url,to,use,builder,string,mapping,get,type,request,mapping,controller,type,return,builder,path,mapping
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromController(UriComponentsBuilder builder, Class<?> controllerType);1430747547;An alternative to {@link #fromController(Class)} that accepts a_{@code UriComponentsBuilder} representing the base URL. This is useful_when using MvcUriComponentsBuilder outside the context of processing a_request or to apply a custom baseUrl not matching the current request._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param controllerType the controller to build a URI for_@return a UriComponentsBuilder instance (never {@code null});public static UriComponentsBuilder fromController(UriComponentsBuilder builder, Class<?> controllerType) {_		builder = getBaseUrlToUse(builder)__		String mapping = getTypeRequestMapping(controllerType)__		return builder.path(mapping)__	};an,alternative,to,link,from,controller,class,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,controller,type,the,controller,to,build,a,uri,for,return,a,uri,components,builder,instance,never,code,null;public,static,uri,components,builder,from,controller,uri,components,builder,builder,class,controller,type,builder,get,base,url,to,use,builder,string,mapping,get,type,request,mapping,controller,type,return,builder,path,mapping
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromController(UriComponentsBuilder builder, Class<?> controllerType);1430749606;An alternative to {@link #fromController(Class)} that accepts a_{@code UriComponentsBuilder} representing the base URL. This is useful_when using MvcUriComponentsBuilder outside the context of processing a_request or to apply a custom baseUrl not matching the current request._@param builder the builder for the base URL_ the builder will be cloned_and therefore not modified and may be re-used for further calls._@param controllerType the controller to build a URI for_@return a UriComponentsBuilder instance (never {@code null});public static UriComponentsBuilder fromController(UriComponentsBuilder builder, Class<?> controllerType) {_		builder = getBaseUrlToUse(builder)__		String mapping = getTypeRequestMapping(controllerType)__		return builder.path(mapping)__	};an,alternative,to,link,from,controller,class,that,accepts,a,code,uri,components,builder,representing,the,base,url,this,is,useful,when,using,mvc,uri,components,builder,outside,the,context,of,processing,a,request,or,to,apply,a,custom,base,url,not,matching,the,current,request,param,builder,the,builder,for,the,base,url,the,builder,will,be,cloned,and,therefore,not,modified,and,may,be,re,used,for,further,calls,param,controller,type,the,controller,to,build,a,uri,for,return,a,uri,components,builder,instance,never,code,null;public,static,uri,components,builder,from,controller,uri,components,builder,builder,class,controller,type,builder,get,base,url,to,use,builder,string,mapping,get,type,request,mapping,controller,type,return,builder,path,mapping
MvcUriComponentsBuilder -> MethodArgumentBuilder -> public MethodArgumentBuilder(Class<?> controllerType, Method method);1439294371;@since 4.2;public MethodArgumentBuilder(Class<?> controllerType, Method method) {_			this(null, controllerType, method)__		};since,4,2;public,method,argument,builder,class,controller,type,method,method,this,null,controller,type,method
MvcUriComponentsBuilder -> MethodArgumentBuilder -> public MethodArgumentBuilder(Class<?> controllerType, Method method);1447077465;@since 4.2;public MethodArgumentBuilder(Class<?> controllerType, Method method) {_			this(null, controllerType, method)__		};since,4,2;public,method,argument,builder,class,controller,type,method,method,this,null,controller,type,method
MvcUriComponentsBuilder -> MethodArgumentBuilder -> public MethodArgumentBuilder(Class<?> controllerType, Method method);1458830024;@since 4.2;public MethodArgumentBuilder(Class<?> controllerType, Method method) {_			this(null, controllerType, method)__		};since,4,2;public,method,argument,builder,class,controller,type,method,method,this,null,controller,type,method
MvcUriComponentsBuilder -> MethodArgumentBuilder -> public MethodArgumentBuilder(Class<?> controllerType, Method method);1461047077;@since 4.2;public MethodArgumentBuilder(Class<?> controllerType, Method method) {_			this(null, controllerType, method)__		};since,4,2;public,method,argument,builder,class,controller,type,method,method,this,null,controller,type,method
MvcUriComponentsBuilder -> MethodArgumentBuilder -> public MethodArgumentBuilder(Class<?> controllerType, Method method);1467677340;@since 4.2;public MethodArgumentBuilder(Class<?> controllerType, Method method) {_			this(null, controllerType, method)__		};since,4,2;public,method,argument,builder,class,controller,type,method,method,this,null,controller,type,method
MvcUriComponentsBuilder -> MethodArgumentBuilder -> public MethodArgumentBuilder(Class<?> controllerType, Method method);1467726769;@since 4.2;public MethodArgumentBuilder(Class<?> controllerType, Method method) {_			this(null, controllerType, method)__		};since,4,2;public,method,argument,builder,class,controller,type,method,method,this,null,controller,type,method
MvcUriComponentsBuilder -> MethodArgumentBuilder -> public MethodArgumentBuilder(Class<?> controllerType, Method method);1467730834;@since 4.2;public MethodArgumentBuilder(Class<?> controllerType, Method method) {_			this(null, controllerType, method)__		};since,4,2;public,method,argument,builder,class,controller,type,method,method,this,null,controller,type,method
MvcUriComponentsBuilder -> MethodArgumentBuilder -> public MethodArgumentBuilder(Class<?> controllerType, Method method);1467846264;@since 4.2;public MethodArgumentBuilder(Class<?> controllerType, Method method) {_			this(null, controllerType, method)__		};since,4,2;public,method,argument,builder,class,controller,type,method,method,this,null,controller,type,method
MvcUriComponentsBuilder -> MethodArgumentBuilder -> public MethodArgumentBuilder(Class<?> controllerType, Method method);1468613531;@since 4.2;public MethodArgumentBuilder(Class<?> controllerType, Method method) {_			this(null, controllerType, method)__		};since,4,2;public,method,argument,builder,class,controller,type,method,method,this,null,controller,type,method
MvcUriComponentsBuilder -> MethodArgumentBuilder -> public MethodArgumentBuilder(Class<?> controllerType, Method method);1468948866;@since 4.2;public MethodArgumentBuilder(Class<?> controllerType, Method method) {_			this(null, controllerType, method)__		};since,4,2;public,method,argument,builder,class,controller,type,method,method,this,null,controller,type,method
MvcUriComponentsBuilder -> MethodArgumentBuilder -> public MethodArgumentBuilder(Class<?> controllerType, Method method);1485810955;@since 4.2;public MethodArgumentBuilder(Class<?> controllerType, Method method) {_			this(null, controllerType, method)__		};since,4,2;public,method,argument,builder,class,controller,type,method,method,this,null,controller,type,method
MvcUriComponentsBuilder -> MethodArgumentBuilder -> public MethodArgumentBuilder(Class<?> controllerType, Method method);1486634978;@since 4.2;public MethodArgumentBuilder(Class<?> controllerType, Method method) {_			this(null, controllerType, method)__		};since,4,2;public,method,argument,builder,class,controller,type,method,method,this,null,controller,type,method
MvcUriComponentsBuilder -> MethodArgumentBuilder -> public MethodArgumentBuilder(Class<?> controllerType, Method method);1486635693;@since 4.2;public MethodArgumentBuilder(Class<?> controllerType, Method method) {_			this(null, controllerType, method)__		};since,4,2;public,method,argument,builder,class,controller,type,method,method,this,null,controller,type,method
MvcUriComponentsBuilder -> MethodArgumentBuilder -> public MethodArgumentBuilder(Class<?> controllerType, Method method);1495868221;@since 4.2;public MethodArgumentBuilder(Class<?> controllerType, Method method) {_			this(null, controllerType, method)__		};since,4,2;public,method,argument,builder,class,controller,type,method,method,this,null,controller,type,method
MvcUriComponentsBuilder -> MethodArgumentBuilder -> public MethodArgumentBuilder(Class<?> controllerType, Method method);1496242568;@since 4.2;public MethodArgumentBuilder(Class<?> controllerType, Method method) {_			this(null, controllerType, method)__		};since,4,2;public,method,argument,builder,class,controller,type,method,method,this,null,controller,type,method
MvcUriComponentsBuilder -> MethodArgumentBuilder -> public MethodArgumentBuilder(Class<?> controllerType, Method method);1496259743;@since 4.2;public MethodArgumentBuilder(Class<?> controllerType, Method method) {_			this(null, controllerType, method)__		};since,4,2;public,method,argument,builder,class,controller,type,method,method,this,null,controller,type,method
MvcUriComponentsBuilder -> MethodArgumentBuilder -> public MethodArgumentBuilder(Class<?> controllerType, Method method);1496370972;@since 4.2;public MethodArgumentBuilder(Class<?> controllerType, Method method) {_			this(null, controllerType, method)__		};since,4,2;public,method,argument,builder,class,controller,type,method,method,this,null,controller,type,method
MvcUriComponentsBuilder -> MethodArgumentBuilder -> public MethodArgumentBuilder(Class<?> controllerType, Method method);1496837955;@since 4.2;public MethodArgumentBuilder(Class<?> controllerType, Method method) {_			this(null, controllerType, method)__		};since,4,2;public,method,argument,builder,class,controller,type,method,method,this,null,controller,type,method
MvcUriComponentsBuilder -> MethodArgumentBuilder -> public MethodArgumentBuilder(Class<?> controllerType, Method method);1497341397;@since 4.2;public MethodArgumentBuilder(Class<?> controllerType, Method method) {_			this(null, controllerType, method)__		};since,4,2;public,method,argument,builder,class,controller,type,method,method,this,null,controller,type,method
MvcUriComponentsBuilder -> MethodArgumentBuilder -> public MethodArgumentBuilder(Class<?> controllerType, Method method);1498780456;@since 4.2;public MethodArgumentBuilder(Class<?> controllerType, Method method) {_			this(null, controllerType, method)__		};since,4,2;public,method,argument,builder,class,controller,type,method,method,this,null,controller,type,method
MvcUriComponentsBuilder -> MethodArgumentBuilder -> public MethodArgumentBuilder(Class<?> controllerType, Method method);1500416137;@since 4.2;public MethodArgumentBuilder(Class<?> controllerType, Method method) {_			this(null, controllerType, method)__		};since,4,2;public,method,argument,builder,class,controller,type,method,method,this,null,controller,type,method
MvcUriComponentsBuilder -> MethodArgumentBuilder -> public MethodArgumentBuilder(Class<?> controllerType, Method method);1506097334;@since 4.2;public MethodArgumentBuilder(Class<?> controllerType, Method method) {_			this(null, controllerType, method)__		};since,4,2;public,method,argument,builder,class,controller,type,method,method,this,null,controller,type,method
MvcUriComponentsBuilder -> MethodArgumentBuilder -> public MethodArgumentBuilder(Class<?> controllerType, Method method);1518770299;@since 4.2;public MethodArgumentBuilder(Class<?> controllerType, Method method) {_			this(null, controllerType, method)__		};since,4,2;public,method,argument,builder,class,controller,type,method,method,this,null,controller,type,method
MvcUriComponentsBuilder -> MethodArgumentBuilder -> public MethodArgumentBuilder(Class<?> controllerType, Method method);1522354261;@since 4.2;public MethodArgumentBuilder(Class<?> controllerType, Method method) {_			this(null, controllerType, method)__		};since,4,2;public,method,argument,builder,class,controller,type,method,method,this,null,controller,type,method
MvcUriComponentsBuilder -> MethodArgumentBuilder -> public MethodArgumentBuilder(Class<?> controllerType, Method method);1523455554;@since 4.2;public MethodArgumentBuilder(Class<?> controllerType, Method method) {_			this(null, controllerType, method)__		};since,4,2;public,method,argument,builder,class,controller,type,method,method,this,null,controller,type,method
MvcUriComponentsBuilder -> MethodArgumentBuilder -> public MethodArgumentBuilder(Class<?> controllerType, Method method);1529028426;@since 4.2;public MethodArgumentBuilder(Class<?> controllerType, Method method) {_			this(null, controllerType, method)__		};since,4,2;public,method,argument,builder,class,controller,type,method,method,this,null,controller,type,method
MvcUriComponentsBuilder -> MethodArgumentBuilder -> public MethodArgumentBuilder(Class<?> controllerType, Method method);1529028426;@since 4.2;public MethodArgumentBuilder(Class<?> controllerType, Method method) {_			this(null, controllerType, method)__		};since,4,2;public,method,argument,builder,class,controller,type,method,method,this,null,controller,type,method
MvcUriComponentsBuilder -> MethodArgumentBuilder -> public MethodArgumentBuilder(Class<?> controllerType, Method method);1529028713;@since 4.2;public MethodArgumentBuilder(Class<?> controllerType, Method method) {_			this(null, controllerType, method)__		};since,4,2;public,method,argument,builder,class,controller,type,method,method,this,null,controller,type,method
MvcUriComponentsBuilder -> MethodArgumentBuilder -> public MethodArgumentBuilder(Class<?> controllerType, Method method);1529361191;@since 4.2;public MethodArgumentBuilder(Class<?> controllerType, Method method) {_			this(null, controllerType, method)__		};since,4,2;public,method,argument,builder,class,controller,type,method,method,this,null,controller,type,method
MvcUriComponentsBuilder -> MethodArgumentBuilder -> public MethodArgumentBuilder(Class<?> controllerType, Method method);1530174524;Create a new {@link MethodArgumentBuilder} instance._@since 4.2;public MethodArgumentBuilder(Class<?> controllerType, Method method) {_			this(null, controllerType, method)__		};create,a,new,link,method,argument,builder,instance,since,4,2;public,method,argument,builder,class,controller,type,method,method,this,null,controller,type,method
MvcUriComponentsBuilder -> MethodArgumentBuilder -> public MethodArgumentBuilder(Class<?> controllerType, Method method);1532041662;Create a new {@link MethodArgumentBuilder} instance._@since 4.2;public MethodArgumentBuilder(Class<?> controllerType, Method method) {_			this(null, controllerType, method)__		};create,a,new,link,method,argument,builder,instance,since,4,2;public,method,argument,builder,class,controller,type,method,method,this,null,controller,type,method
MvcUriComponentsBuilder -> MethodArgumentBuilder -> public MethodArgumentBuilder(Class<?> controllerType, Method method);1532041662;Create a new {@link MethodArgumentBuilder} instance._@since 4.2;public MethodArgumentBuilder(Class<?> controllerType, Method method) {_			this(null, controllerType, method)__		};create,a,new,link,method,argument,builder,instance,since,4,2;public,method,argument,builder,class,controller,type,method,method,this,null,controller,type,method
MvcUriComponentsBuilder -> MethodArgumentBuilder -> public MethodArgumentBuilder(Class<?> controllerType, Method method);1548943222;Create a new {@link MethodArgumentBuilder} instance._@since 4.2;public MethodArgumentBuilder(Class<?> controllerType, Method method) {_			this(null, controllerType, method)__		};create,a,new,link,method,argument,builder,instance,since,4,2;public,method,argument,builder,class,controller,type,method,method,this,null,controller,type,method
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodName(Class<?> controllerType, 			String methodName, Object... argumentValues);1382754578;Create a {@link UriComponentsBuilder} by pointing to a controller method and_providing method argument values. The method is matched based on the provided_method name and the number of argument values. If that results in a clash_(i.e. overloaded methods with the same number of parameters), use_{@link #fromMethod(java.lang.reflect.Method, Object...)} instead._<p>_The argument values are used to prepare the URI for example expanding_path variables, or adding query parameters. Any other arguments not_relevant to the URI can be provided as {@literal null} and will be ignored._<p>_Additional (custom) argument types can be supported through an implementation_of {@link org.springframework.web.method.support.UriComponentsContributor}.__@param controllerType the target controller type_@param methodName the target method name_@param argumentValues argument values matching to method parameters__@return a UriComponentsBuilder instance;public static UriComponentsBuilder fromMethodName(Class<?> controllerType,_			String methodName, Object... argumentValues) {__		Method match = null__		for (Method method : controllerType.getDeclaredMethods()) {_			if ((method.getParameterCount() == argumentValues.length) && method.getName().equals(methodName)) {_				if (match != null) {_					throw new IllegalStateException("Found two methods named '" + methodName_							+ "' having " + argumentValues + " arguments, controller "_							+ controllerType.getName())__				}_				match = method__			}_		}_		if (match == null) {_			throw new IllegalArgumentException("No method '" + methodName + "' with "_					+ argumentValues.length + " parameters found in " + controllerType.getName())__		}_		return fromMethod(match, argumentValues)__	};create,a,link,uri,components,builder,by,pointing,to,a,controller,method,and,providing,method,argument,values,the,method,is,matched,based,on,the,provided,method,name,and,the,number,of,argument,values,if,that,results,in,a,clash,i,e,overloaded,methods,with,the,same,number,of,parameters,use,link,from,method,java,lang,reflect,method,object,instead,p,the,argument,values,are,used,to,prepare,the,uri,for,example,expanding,path,variables,or,adding,query,parameters,any,other,arguments,not,relevant,to,the,uri,can,be,provided,as,literal,null,and,will,be,ignored,p,additional,custom,argument,types,can,be,supported,through,an,implementation,of,link,org,springframework,web,method,support,uri,components,contributor,param,controller,type,the,target,controller,type,param,method,name,the,target,method,name,param,argument,values,argument,values,matching,to,method,parameters,return,a,uri,components,builder,instance;public,static,uri,components,builder,from,method,name,class,controller,type,string,method,name,object,argument,values,method,match,null,for,method,method,controller,type,get,declared,methods,if,method,get,parameter,count,argument,values,length,method,get,name,equals,method,name,if,match,null,throw,new,illegal,state,exception,found,two,methods,named,method,name,having,argument,values,arguments,controller,controller,type,get,name,match,method,if,match,null,throw,new,illegal,argument,exception,no,method,method,name,with,argument,values,length,parameters,found,in,controller,type,get,name,return,from,method,match,argument,values
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodName(Class<?> controllerType, 			String methodName, Object... argumentValues);1382757913;Create a {@link UriComponentsBuilder} by pointing to a controller method and_providing method argument values. The method is matched based on the provided_method name and the number of argument values. If that results in a clash_(i.e. overloaded methods with the same number of parameters), use_{@link #fromMethod(java.lang.reflect.Method, Object...)} instead._<p>_The argument values are used to prepare the URI for example expanding_path variables, or adding query parameters. Any other arguments not_relevant to the URI can be provided as {@literal null} and will be ignored._<p>_Additional (custom) argument types can be supported through an implementation_of {@link org.springframework.web.method.support.UriComponentsContributor}.__@param controllerType the target controller type_@param methodName the target method name_@param argumentValues argument values matching to method parameters__@return a UriComponentsBuilder instance;public static UriComponentsBuilder fromMethodName(Class<?> controllerType,_			String methodName, Object... argumentValues) {__		Method match = null__		for (Method method : controllerType.getDeclaredMethods()) {_			if ((method.getParameterCount() == argumentValues.length) && method.getName().equals(methodName)) {_				if (match != null) {_					throw new IllegalStateException("Found two methods named '" + methodName_							+ "' having " + argumentValues + " arguments, controller "_							+ controllerType.getName())__				}_				match = method__			}_		}_		if (match == null) {_			throw new IllegalArgumentException("No method '" + methodName + "' with "_					+ argumentValues.length + " parameters found in " + controllerType.getName())__		}_		return fromMethod(match, argumentValues)__	};create,a,link,uri,components,builder,by,pointing,to,a,controller,method,and,providing,method,argument,values,the,method,is,matched,based,on,the,provided,method,name,and,the,number,of,argument,values,if,that,results,in,a,clash,i,e,overloaded,methods,with,the,same,number,of,parameters,use,link,from,method,java,lang,reflect,method,object,instead,p,the,argument,values,are,used,to,prepare,the,uri,for,example,expanding,path,variables,or,adding,query,parameters,any,other,arguments,not,relevant,to,the,uri,can,be,provided,as,literal,null,and,will,be,ignored,p,additional,custom,argument,types,can,be,supported,through,an,implementation,of,link,org,springframework,web,method,support,uri,components,contributor,param,controller,type,the,target,controller,type,param,method,name,the,target,method,name,param,argument,values,argument,values,matching,to,method,parameters,return,a,uri,components,builder,instance;public,static,uri,components,builder,from,method,name,class,controller,type,string,method,name,object,argument,values,method,match,null,for,method,method,controller,type,get,declared,methods,if,method,get,parameter,count,argument,values,length,method,get,name,equals,method,name,if,match,null,throw,new,illegal,state,exception,found,two,methods,named,method,name,having,argument,values,arguments,controller,controller,type,get,name,match,method,if,match,null,throw,new,illegal,argument,exception,no,method,method,name,with,argument,values,length,parameters,found,in,controller,type,get,name,return,from,method,match,argument,values
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodName(Class<?> controllerType, 			String methodName, Object... argumentValues);1382911216;Create a {@link UriComponentsBuilder} by pointing to a controller method and_providing method argument values. The method is matched based on the provided_method name and the number of argument values. If that results in a clash_(i.e. overloaded methods with the same number of parameters), use_{@link #fromMethod(java.lang.reflect.Method, Object...)} instead._<p>_The argument values are used to prepare the URI for example expanding_path variables, or adding query parameters. Any other arguments not_relevant to the URI can be provided as {@literal null} and will be ignored._<p>_Additional (custom) argument types can be supported through an implementation_of {@link org.springframework.web.method.support.UriComponentsContributor}.__@param controllerType the target controller type_@param methodName the target method name_@param argumentValues argument values matching to method parameters__@return a UriComponentsBuilder instance;public static UriComponentsBuilder fromMethodName(Class<?> controllerType,_			String methodName, Object... argumentValues) {__		Method match = null__		for (Method method : controllerType.getDeclaredMethods()) {_			if ((method.getParameterCount() == argumentValues.length) && method.getName().equals(methodName)) {_				if (match != null) {_					throw new IllegalStateException("Found two methods named '" + methodName_							+ "' having " + argumentValues + " arguments, controller "_							+ controllerType.getName())__				}_				match = method__			}_		}_		if (match == null) {_			throw new IllegalArgumentException("No method '" + methodName + "' with "_					+ argumentValues.length + " parameters found in " + controllerType.getName())__		}_		return fromMethod(match, argumentValues)__	};create,a,link,uri,components,builder,by,pointing,to,a,controller,method,and,providing,method,argument,values,the,method,is,matched,based,on,the,provided,method,name,and,the,number,of,argument,values,if,that,results,in,a,clash,i,e,overloaded,methods,with,the,same,number,of,parameters,use,link,from,method,java,lang,reflect,method,object,instead,p,the,argument,values,are,used,to,prepare,the,uri,for,example,expanding,path,variables,or,adding,query,parameters,any,other,arguments,not,relevant,to,the,uri,can,be,provided,as,literal,null,and,will,be,ignored,p,additional,custom,argument,types,can,be,supported,through,an,implementation,of,link,org,springframework,web,method,support,uri,components,contributor,param,controller,type,the,target,controller,type,param,method,name,the,target,method,name,param,argument,values,argument,values,matching,to,method,parameters,return,a,uri,components,builder,instance;public,static,uri,components,builder,from,method,name,class,controller,type,string,method,name,object,argument,values,method,match,null,for,method,method,controller,type,get,declared,methods,if,method,get,parameter,count,argument,values,length,method,get,name,equals,method,name,if,match,null,throw,new,illegal,state,exception,found,two,methods,named,method,name,having,argument,values,arguments,controller,controller,type,get,name,match,method,if,match,null,throw,new,illegal,argument,exception,no,method,method,name,with,argument,values,length,parameters,found,in,controller,type,get,name,return,from,method,match,argument,values
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodName(Class<?> controllerType, 			String methodName, Object... argumentValues);1383061199;Create a {@link UriComponentsBuilder} by pointing to a controller method and_providing method argument values. The method is matched based on the provided_method name and the number of argument values. If that results in a clash_(i.e. overloaded methods with the same number of parameters), use_{@link #fromMethod(java.lang.reflect.Method, Object...)} instead._<p>_The argument values are used to prepare the URI for example expanding_path variables, or adding query parameters. Any other arguments not_relevant to the URI can be provided as {@literal null} and will be ignored._<p>_Additional (custom) argument types can be supported through an implementation_of {@link org.springframework.web.method.support.UriComponentsContributor}.__@param controllerType the target controller type_@param methodName the target method name_@param argumentValues argument values matching to method parameters__@return a UriComponentsBuilder instance;public static UriComponentsBuilder fromMethodName(Class<?> controllerType,_			String methodName, Object... argumentValues) {__		Method match = null__		for (Method method : controllerType.getDeclaredMethods()) {_			if ((method.getParameterCount() == argumentValues.length) && method.getName().equals(methodName)) {_				if (match != null) {_					throw new IllegalStateException("Found two methods named '" + methodName_							+ "' having " + argumentValues + " arguments, controller "_							+ controllerType.getName())__				}_				match = method__			}_		}_		if (match == null) {_			throw new IllegalArgumentException("No method '" + methodName + "' with "_					+ argumentValues.length + " parameters found in " + controllerType.getName())__		}_		return fromMethod(match, argumentValues)__	};create,a,link,uri,components,builder,by,pointing,to,a,controller,method,and,providing,method,argument,values,the,method,is,matched,based,on,the,provided,method,name,and,the,number,of,argument,values,if,that,results,in,a,clash,i,e,overloaded,methods,with,the,same,number,of,parameters,use,link,from,method,java,lang,reflect,method,object,instead,p,the,argument,values,are,used,to,prepare,the,uri,for,example,expanding,path,variables,or,adding,query,parameters,any,other,arguments,not,relevant,to,the,uri,can,be,provided,as,literal,null,and,will,be,ignored,p,additional,custom,argument,types,can,be,supported,through,an,implementation,of,link,org,springframework,web,method,support,uri,components,contributor,param,controller,type,the,target,controller,type,param,method,name,the,target,method,name,param,argument,values,argument,values,matching,to,method,parameters,return,a,uri,components,builder,instance;public,static,uri,components,builder,from,method,name,class,controller,type,string,method,name,object,argument,values,method,match,null,for,method,method,controller,type,get,declared,methods,if,method,get,parameter,count,argument,values,length,method,get,name,equals,method,name,if,match,null,throw,new,illegal,state,exception,found,two,methods,named,method,name,having,argument,values,arguments,controller,controller,type,get,name,match,method,if,match,null,throw,new,illegal,argument,exception,no,method,method,name,with,argument,values,length,parameters,found,in,controller,type,get,name,return,from,method,match,argument,values
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodName(Class<?> controllerType, 			String methodName, Object... argumentValues);1385412762;Create a {@link UriComponentsBuilder} by pointing to a controller method and_providing method argument values. The method is matched based on the provided_method name and the number of argument values. If that results in a clash_(i.e. overloaded methods with the same number of parameters), use_{@link #fromMethod(java.lang.reflect.Method, Object...)} instead._<p>_The argument values are used to prepare the URI for example expanding_path variables, or adding query parameters. Any other arguments not_relevant to the URI can be provided as {@literal null} and will be ignored._<p>_Additional (custom) argument types can be supported through an implementation_of {@link org.springframework.web.method.support.UriComponentsContributor}.__@param controllerType the target controller type_@param methodName the target method name_@param argumentValues argument values matching to method parameters__@return a UriComponentsBuilder instance;public static UriComponentsBuilder fromMethodName(Class<?> controllerType,_			String methodName, Object... argumentValues) {__		Method match = null__		for (Method method : controllerType.getDeclaredMethods()) {_			if ((method.getParameterCount() == argumentValues.length) && method.getName().equals(methodName)) {_				if (match != null) {_					throw new IllegalStateException("Found two methods named '" + methodName_							+ "' having " + argumentValues + " arguments, controller "_							+ controllerType.getName())__				}_				match = method__			}_		}_		if (match == null) {_			throw new IllegalArgumentException("No method '" + methodName + "' with "_					+ argumentValues.length + " parameters found in " + controllerType.getName())__		}_		return fromMethod(match, argumentValues)__	};create,a,link,uri,components,builder,by,pointing,to,a,controller,method,and,providing,method,argument,values,the,method,is,matched,based,on,the,provided,method,name,and,the,number,of,argument,values,if,that,results,in,a,clash,i,e,overloaded,methods,with,the,same,number,of,parameters,use,link,from,method,java,lang,reflect,method,object,instead,p,the,argument,values,are,used,to,prepare,the,uri,for,example,expanding,path,variables,or,adding,query,parameters,any,other,arguments,not,relevant,to,the,uri,can,be,provided,as,literal,null,and,will,be,ignored,p,additional,custom,argument,types,can,be,supported,through,an,implementation,of,link,org,springframework,web,method,support,uri,components,contributor,param,controller,type,the,target,controller,type,param,method,name,the,target,method,name,param,argument,values,argument,values,matching,to,method,parameters,return,a,uri,components,builder,instance;public,static,uri,components,builder,from,method,name,class,controller,type,string,method,name,object,argument,values,method,match,null,for,method,method,controller,type,get,declared,methods,if,method,get,parameter,count,argument,values,length,method,get,name,equals,method,name,if,match,null,throw,new,illegal,state,exception,found,two,methods,named,method,name,having,argument,values,arguments,controller,controller,type,get,name,match,method,if,match,null,throw,new,illegal,argument,exception,no,method,method,name,with,argument,values,length,parameters,found,in,controller,type,get,name,return,from,method,match,argument,values
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodName(Class<?> controllerType, 			String methodName, Object... argumentValues);1385501137;Create a {@link UriComponentsBuilder} by pointing to a controller method and_providing method argument values. The method is matched based on the provided_method name and the number of argument values. If that results in a clash_(i.e. overloaded methods with the same number of parameters), use_{@link #fromMethod(java.lang.reflect.Method, Object...)} instead._<p>_The argument values are used to prepare the URI for example expanding_path variables, or adding query parameters. Any other arguments not_relevant to the URI can be provided as {@literal null} and will be ignored._<p>_Additional (custom) argument types can be supported through an implementation_of {@link org.springframework.web.method.support.UriComponentsContributor}.__@param controllerType the target controller type_@param methodName the target method name_@param argumentValues argument values matching to method parameters__@return a UriComponentsBuilder instance;public static UriComponentsBuilder fromMethodName(Class<?> controllerType,_			String methodName, Object... argumentValues) {__		Method match = null__		for (Method method : controllerType.getDeclaredMethods()) {_			if ((method.getParameterCount() == argumentValues.length) && method.getName().equals(methodName)) {_				if (match != null) {_					throw new IllegalStateException("Found two methods named '" + methodName_							+ "' having " + argumentValues + " arguments, controller "_							+ controllerType.getName())__				}_				match = method__			}_		}_		if (match == null) {_			throw new IllegalArgumentException("No method '" + methodName + "' with "_					+ argumentValues.length + " parameters found in " + controllerType.getName())__		}_		return fromMethod(match, argumentValues)__	};create,a,link,uri,components,builder,by,pointing,to,a,controller,method,and,providing,method,argument,values,the,method,is,matched,based,on,the,provided,method,name,and,the,number,of,argument,values,if,that,results,in,a,clash,i,e,overloaded,methods,with,the,same,number,of,parameters,use,link,from,method,java,lang,reflect,method,object,instead,p,the,argument,values,are,used,to,prepare,the,uri,for,example,expanding,path,variables,or,adding,query,parameters,any,other,arguments,not,relevant,to,the,uri,can,be,provided,as,literal,null,and,will,be,ignored,p,additional,custom,argument,types,can,be,supported,through,an,implementation,of,link,org,springframework,web,method,support,uri,components,contributor,param,controller,type,the,target,controller,type,param,method,name,the,target,method,name,param,argument,values,argument,values,matching,to,method,parameters,return,a,uri,components,builder,instance;public,static,uri,components,builder,from,method,name,class,controller,type,string,method,name,object,argument,values,method,match,null,for,method,method,controller,type,get,declared,methods,if,method,get,parameter,count,argument,values,length,method,get,name,equals,method,name,if,match,null,throw,new,illegal,state,exception,found,two,methods,named,method,name,having,argument,values,arguments,controller,controller,type,get,name,match,method,if,match,null,throw,new,illegal,argument,exception,no,method,method,name,with,argument,values,length,parameters,found,in,controller,type,get,name,return,from,method,match,argument,values
MvcUriComponentsBuilder -> public static UriComponentsBuilder fromMethodName(Class<?> controllerType, 			String methodName, Object... argumentValues);1385507478;Create a {@link UriComponentsBuilder} by pointing to a controller method and_providing method argument values. The method is matched based on the provided_method name and the number of argument values. If that results in a clash_(i.e. overloaded methods with the same number of parameters), use_{@link #fromMethod(java.lang.reflect.Method, Object...)} instead._<p>The argument values are used to prepare the URI for example expanding_path variables, or adding query parameters. Any other arguments not_relevant to the URI can be provided as {@literal null} and will be ignored._<p>Additional (custom) argument types can be supported through an implementation_of {@link org.springframework.web.method.support.UriComponentsContributor}._@param controllerType the target controller type_@param methodName the target method name_@param argumentValues argument values matching to method parameters_@return a UriComponentsBuilder instance;public static UriComponentsBuilder fromMethodName(Class<?> controllerType,_			String methodName, Object... argumentValues) {__		Method match = null__		for (Method method : controllerType.getDeclaredMethods()) {_			if ((method.getParameterCount() == argumentValues.length) && method.getName().equals(methodName)) {_				if (match != null) {_					throw new IllegalStateException("Found two methods named '" + methodName_							+ "' having " + argumentValues + " arguments, controller "_							+ controllerType.getName())__				}_				match = method__			}_		}_		if (match == null) {_			throw new IllegalArgumentException("No method '" + methodName + "' with "_					+ argumentValues.length + " parameters found in " + controllerType.getName())__		}_		return fromMethod(match, argumentValues)__	};create,a,link,uri,components,builder,by,pointing,to,a,controller,method,and,providing,method,argument,values,the,method,is,matched,based,on,the,provided,method,name,and,the,number,of,argument,values,if,that,results,in,a,clash,i,e,overloaded,methods,with,the,same,number,of,parameters,use,link,from,method,java,lang,reflect,method,object,instead,p,the,argument,values,are,used,to,prepare,the,uri,for,example,expanding,path,variables,or,adding,query,parameters,any,other,arguments,not,relevant,to,the,uri,can,be,provided,as,literal,null,and,will,be,ignored,p,additional,custom,argument,types,can,be,supported,through,an,implementation,of,link,org,springframework,web,method,support,uri,components,contributor,param,controller,type,the,target,controller,type,param,method,name,the,target,method,name,param,argument,values,argument,values,matching,to,method,parameters,return,a,uri,components,builder,instance;public,static,uri,components,builder,from,method,name,class,controller,type,string,method,name,object,argument,values,method,match,null,for,method,method,controller,type,get,declared,methods,if,method,get,parameter,count,argument,values,length,method,get,name,equals,method,name,if,match,null,throw,new,illegal,state,exception,found,two,methods,named,method,name,having,argument,values,arguments,controller,controller,type,get,name,match,method,if,match,null,throw,new,illegal,argument,exception,no,method,method,name,with,argument,values,length,parameters,found,in,controller,type,get,name,return,from,method,match,argument,values
MvcUriComponentsBuilder -> MethodArgumentBuilder -> public MethodArgumentBuilder encode();1532041662;Use this method only if you need to apply strong encoding to expanded_URI variables by quoting all characters with reserved meaning._@since 5.0.8;public MethodArgumentBuilder encode() {_			this.baseUrl.encode()__			return this__		};use,this,method,only,if,you,need,to,apply,strong,encoding,to,expanded,uri,variables,by,quoting,all,characters,with,reserved,meaning,since,5,0,8;public,method,argument,builder,encode,this,base,url,encode,return,this
MvcUriComponentsBuilder -> MethodArgumentBuilder -> public MethodArgumentBuilder encode();1548943222;Use this method only if you need to apply strong encoding to expanded_URI variables by quoting all characters with reserved meaning._@since 5.0.8;public MethodArgumentBuilder encode() {_			this.baseUrl.encode()__			return this__		};use,this,method,only,if,you,need,to,apply,strong,encoding,to,expanded,uri,variables,by,quoting,all,characters,with,reserved,meaning,since,5,0,8;public,method,argument,builder,encode,this,base,url,encode,return,this
