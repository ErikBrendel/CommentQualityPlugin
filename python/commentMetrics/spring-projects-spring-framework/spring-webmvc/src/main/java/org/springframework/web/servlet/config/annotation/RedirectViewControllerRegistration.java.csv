commented;modifiers;parameterAmount;loc;comment;code
true;public;1;5;/**  * Set the specific redirect 3xx status code to use.  * <p>If not set, {@link org.springframework.web.servlet.view.RedirectView}  * will select {@code HttpStatus.MOVED_TEMPORARILY (302)} by default.  */ ;/**  * Set the specific redirect 3xx status code to use.  * <p>If not set, {@link org.springframework.web.servlet.view.RedirectView}  * will select {@code HttpStatus.MOVED_TEMPORARILY (302)} by default.  */ public RedirectViewControllerRegistration setStatusCode(HttpStatus statusCode) {     Assert.isTrue(statusCode.is3xxRedirection(), "Not a redirect status code").     this.redirectView.setStatusCode(statusCode).     return this. }
true;public;1;4;/**  * Whether to interpret a given redirect URL that starts with a slash ("/")  * as relative to the current ServletContext, i.e. as relative to the web  * application root.  * <p>Default is {@code true}.  */ ;/**  * Whether to interpret a given redirect URL that starts with a slash ("/")  * as relative to the current ServletContext, i.e. as relative to the web  * application root.  * <p>Default is {@code true}.  */ public RedirectViewControllerRegistration setContextRelative(boolean contextRelative) {     this.redirectView.setContextRelative(contextRelative).     return this. }
true;public;1;4;/**  * Whether to propagate the query parameters of the current request through  * to the target redirect URL.  * <p>Default is {@code false}.  */ ;/**  * Whether to propagate the query parameters of the current request through  * to the target redirect URL.  * <p>Default is {@code false}.  */ public RedirectViewControllerRegistration setKeepQueryParams(boolean propagate) {     this.redirectView.setPropagateQueryParams(propagate).     return this. }
false;protected;1;4;;protected void setApplicationContext(@Nullable ApplicationContext applicationContext) {     this.controller.setApplicationContext(applicationContext).     this.redirectView.setApplicationContext(applicationContext). }
false;protected;0;3;;protected String getUrlPath() {     return this.urlPath. }
false;protected;0;3;;protected ParameterizableViewController getViewController() {     return this.controller. }
