# id;timestamp;commentText;codeText;commentWords;codeWords
MarshallingView -> public MarshallingView(Marshaller marshaller);1328020251;Constructs a new <code>MarshallingView</code> with the given {@link Marshaller} set.;public MarshallingView(Marshaller marshaller) {_		Assert.notNull(marshaller, "'marshaller' must not be null")__		setContentType(DEFAULT_CONTENT_TYPE)__		this.marshaller = marshaller__		setExposePathVariables(false)__	};constructs,a,new,code,marshalling,view,code,with,the,given,link,marshaller,set;public,marshalling,view,marshaller,marshaller,assert,not,null,marshaller,marshaller,must,not,be,null,set,content,type,this,marshaller,marshaller,set,expose,path,variables,false
MarshallingView -> public MarshallingView(Marshaller marshaller);1350941037;Constructs a new <code>MarshallingView</code> with the given {@link Marshaller} set.;public MarshallingView(Marshaller marshaller) {_		Assert.notNull(marshaller, "'marshaller' must not be null")__		setContentType(DEFAULT_CONTENT_TYPE)__		this.marshaller = marshaller__		setExposePathVariables(false)__	};constructs,a,new,code,marshalling,view,code,with,the,given,link,marshaller,set;public,marshalling,view,marshaller,marshaller,assert,not,null,marshaller,marshaller,must,not,be,null,set,content,type,this,marshaller,marshaller,set,expose,path,variables,false
MarshallingView -> public MarshallingView(Marshaller marshaller);1356735495;Constructs a new {@code MarshallingView} with the given {@link Marshaller} set.;public MarshallingView(Marshaller marshaller) {_		Assert.notNull(marshaller, "'marshaller' must not be null")__		setContentType(DEFAULT_CONTENT_TYPE)__		this.marshaller = marshaller__		setExposePathVariables(false)__	};constructs,a,new,code,marshalling,view,with,the,given,link,marshaller,set;public,marshalling,view,marshaller,marshaller,assert,not,null,marshaller,marshaller,must,not,be,null,set,content,type,this,marshaller,marshaller,set,expose,path,variables,false
MarshallingView -> public MarshallingView(Marshaller marshaller);1392158469;Constructs a new {@code MarshallingView} with the given {@link Marshaller} set.;public MarshallingView(Marshaller marshaller) {_		this()__		setMarshaller(marshaller)__	};constructs,a,new,code,marshalling,view,with,the,given,link,marshaller,set;public,marshalling,view,marshaller,marshaller,this,set,marshaller,marshaller
MarshallingView -> public MarshallingView(Marshaller marshaller);1392226536;Constructs a new {@code MarshallingView} with the given {@link Marshaller} set.;public MarshallingView(Marshaller marshaller) {_		this()__		Assert.notNull(marshaller, "Marshaller must not be null")__		this.marshaller = marshaller__	};constructs,a,new,code,marshalling,view,with,the,given,link,marshaller,set;public,marshalling,view,marshaller,marshaller,this,assert,not,null,marshaller,marshaller,must,not,be,null,this,marshaller,marshaller
MarshallingView -> public MarshallingView(Marshaller marshaller);1395698258;Constructs a new {@code MarshallingView} with the given {@link Marshaller} set.;public MarshallingView(Marshaller marshaller) {_		this()__		Assert.notNull(marshaller, "Marshaller must not be null")__		this.marshaller = marshaller__	};constructs,a,new,code,marshalling,view,with,the,given,link,marshaller,set;public,marshalling,view,marshaller,marshaller,this,assert,not,null,marshaller,marshaller,must,not,be,null,this,marshaller,marshaller
MarshallingView -> public MarshallingView(Marshaller marshaller);1396465029;Constructs a new {@code MarshallingView} with the given {@link Marshaller} set.;public MarshallingView(Marshaller marshaller) {_		this()__		Assert.notNull(marshaller, "Marshaller must not be null")__		this.marshaller = marshaller__	};constructs,a,new,code,marshalling,view,with,the,given,link,marshaller,set;public,marshalling,view,marshaller,marshaller,this,assert,not,null,marshaller,marshaller,must,not,be,null,this,marshaller,marshaller
MarshallingView -> public MarshallingView(Marshaller marshaller);1401463654;Constructs a new {@code MarshallingView} with the given {@link Marshaller} set.;public MarshallingView(Marshaller marshaller) {_		this()__		Assert.notNull(marshaller, "Marshaller must not be null")__		this.marshaller = marshaller__	};constructs,a,new,code,marshalling,view,with,the,given,link,marshaller,set;public,marshalling,view,marshaller,marshaller,this,assert,not,null,marshaller,marshaller,must,not,be,null,this,marshaller,marshaller
MarshallingView -> public MarshallingView(Marshaller marshaller);1495868221;Constructs a new {@code MarshallingView} with the given {@link Marshaller} set.;public MarshallingView(Marshaller marshaller) {_		this()__		Assert.notNull(marshaller, "Marshaller must not be null")__		this.marshaller = marshaller__	};constructs,a,new,code,marshalling,view,with,the,given,link,marshaller,set;public,marshalling,view,marshaller,marshaller,this,assert,not,null,marshaller,marshaller,must,not,be,null,this,marshaller,marshaller
MarshallingView -> public MarshallingView(Marshaller marshaller);1498780456;Constructs a new {@code MarshallingView} with the given {@link Marshaller} set.;public MarshallingView(Marshaller marshaller) {_		this()__		Assert.notNull(marshaller, "Marshaller must not be null")__		this.marshaller = marshaller__	};constructs,a,new,code,marshalling,view,with,the,given,link,marshaller,set;public,marshalling,view,marshaller,marshaller,this,assert,not,null,marshaller,marshaller,must,not,be,null,this,marshaller,marshaller
MarshallingView -> public MarshallingView(Marshaller marshaller);1522843494;Constructs a new {@code MarshallingView} with the given {@link Marshaller} set.;public MarshallingView(Marshaller marshaller) {_		this()__		Assert.notNull(marshaller, "Marshaller must not be null")__		this.marshaller = marshaller__	};constructs,a,new,code,marshalling,view,with,the,given,link,marshaller,set;public,marshalling,view,marshaller,marshaller,this,assert,not,null,marshaller,marshaller,must,not,be,null,this,marshaller,marshaller
MarshallingView -> public void setMarshaller(Marshaller marshaller);1328020251;Sets the {@link Marshaller} to be used by this view.;public void setMarshaller(Marshaller marshaller) {_		Assert.notNull(marshaller, "'marshaller' must not be null")__		this.marshaller = marshaller__	};sets,the,link,marshaller,to,be,used,by,this,view;public,void,set,marshaller,marshaller,marshaller,assert,not,null,marshaller,marshaller,must,not,be,null,this,marshaller,marshaller
MarshallingView -> public void setMarshaller(Marshaller marshaller);1350941037;Sets the {@link Marshaller} to be used by this view.;public void setMarshaller(Marshaller marshaller) {_		Assert.notNull(marshaller, "'marshaller' must not be null")__		this.marshaller = marshaller__	};sets,the,link,marshaller,to,be,used,by,this,view;public,void,set,marshaller,marshaller,marshaller,assert,not,null,marshaller,marshaller,must,not,be,null,this,marshaller,marshaller
MarshallingView -> public void setMarshaller(Marshaller marshaller);1356735495;Sets the {@link Marshaller} to be used by this view.;public void setMarshaller(Marshaller marshaller) {_		Assert.notNull(marshaller, "'marshaller' must not be null")__		this.marshaller = marshaller__	};sets,the,link,marshaller,to,be,used,by,this,view;public,void,set,marshaller,marshaller,marshaller,assert,not,null,marshaller,marshaller,must,not,be,null,this,marshaller,marshaller
MarshallingView -> public void setMarshaller(Marshaller marshaller);1392158469;Sets the {@link Marshaller} to be used by this view.;public void setMarshaller(Marshaller marshaller) {_		Assert.notNull(marshaller, "Marshaller must not be null")__		this.marshaller = marshaller__	};sets,the,link,marshaller,to,be,used,by,this,view;public,void,set,marshaller,marshaller,marshaller,assert,not,null,marshaller,marshaller,must,not,be,null,this,marshaller,marshaller
MarshallingView -> public void setMarshaller(Marshaller marshaller);1392226536;Sets the {@link Marshaller} to be used by this view.;public void setMarshaller(Marshaller marshaller) {_		this.marshaller = marshaller__	};sets,the,link,marshaller,to,be,used,by,this,view;public,void,set,marshaller,marshaller,marshaller,this,marshaller,marshaller
MarshallingView -> public void setMarshaller(Marshaller marshaller);1395698258;Sets the {@link Marshaller} to be used by this view.;public void setMarshaller(Marshaller marshaller) {_		this.marshaller = marshaller__	};sets,the,link,marshaller,to,be,used,by,this,view;public,void,set,marshaller,marshaller,marshaller,this,marshaller,marshaller
MarshallingView -> public void setMarshaller(Marshaller marshaller);1396465029;Sets the {@link Marshaller} to be used by this view.;public void setMarshaller(Marshaller marshaller) {_		this.marshaller = marshaller__	};sets,the,link,marshaller,to,be,used,by,this,view;public,void,set,marshaller,marshaller,marshaller,this,marshaller,marshaller
MarshallingView -> public void setMarshaller(Marshaller marshaller);1401463654;Set the {@link Marshaller} to be used by this view.;public void setMarshaller(Marshaller marshaller) {_		this.marshaller = marshaller__	};set,the,link,marshaller,to,be,used,by,this,view;public,void,set,marshaller,marshaller,marshaller,this,marshaller,marshaller
MarshallingView -> public void setMarshaller(Marshaller marshaller);1495868221;Set the {@link Marshaller} to be used by this view.;public void setMarshaller(Marshaller marshaller) {_		this.marshaller = marshaller__	};set,the,link,marshaller,to,be,used,by,this,view;public,void,set,marshaller,marshaller,marshaller,this,marshaller,marshaller
MarshallingView -> public void setMarshaller(Marshaller marshaller);1498780456;Set the {@link Marshaller} to be used by this view.;public void setMarshaller(Marshaller marshaller) {_		this.marshaller = marshaller__	};set,the,link,marshaller,to,be,used,by,this,view;public,void,set,marshaller,marshaller,marshaller,this,marshaller,marshaller
MarshallingView -> public void setMarshaller(Marshaller marshaller);1522843494;Set the {@link Marshaller} to be used by this view.;public void setMarshaller(Marshaller marshaller) {_		this.marshaller = marshaller__	};set,the,link,marshaller,to,be,used,by,this,view;public,void,set,marshaller,marshaller,marshaller,this,marshaller,marshaller
MarshallingView -> protected Object locateToBeMarshalled(Map<String, Object> model) throws IllegalStateException;1392158469;Locates the object to be marshalled. The default implementation first attempts to look_under the configured {@linkplain #setModelKey(String) model key}, if any, before attempting_to locate an object of {@linkplain Marshaller#supports(Class) supported type}._@param model the model Map_@return the Object to be marshalled (or {@code null} if none found)_@throws IllegalStateException if the model object specified by the_{@linkplain #setModelKey(String) model key} is not supported by the marshaller_@see #setModelKey(String);protected Object locateToBeMarshalled(Map<String, Object> model) throws IllegalStateException {_		if (this.modelKey != null) {_			Object obj = model.get(this.modelKey)__			if (obj == null) {_				throw new IllegalStateException("Model contains no object with key [" + this.modelKey + "]")__			}_			if (!this.marshaller.supports(obj.getClass())) {_				throw new IllegalStateException("Model object [" + obj + "] retrieved via key [" +_						this.modelKey + "] is not supported by the Marshaller")__			}_			return obj__		}_		for (Object obj : model.values()) {_			if (obj != null && this.marshaller.supports(obj.getClass())) {_				return obj__			}_		}_		return null__	};locates,the,object,to,be,marshalled,the,default,implementation,first,attempts,to,look,under,the,configured,linkplain,set,model,key,string,model,key,if,any,before,attempting,to,locate,an,object,of,linkplain,marshaller,supports,class,supported,type,param,model,the,model,map,return,the,object,to,be,marshalled,or,code,null,if,none,found,throws,illegal,state,exception,if,the,model,object,specified,by,the,linkplain,set,model,key,string,model,key,is,not,supported,by,the,marshaller,see,set,model,key,string;protected,object,locate,to,be,marshalled,map,string,object,model,throws,illegal,state,exception,if,this,model,key,null,object,obj,model,get,this,model,key,if,obj,null,throw,new,illegal,state,exception,model,contains,no,object,with,key,this,model,key,if,this,marshaller,supports,obj,get,class,throw,new,illegal,state,exception,model,object,obj,retrieved,via,key,this,model,key,is,not,supported,by,the,marshaller,return,obj,for,object,obj,model,values,if,obj,null,this,marshaller,supports,obj,get,class,return,obj,return,null
MarshallingView -> protected Object locateToBeMarshalled(Map<String, Object> model) throws IllegalStateException;1392226536;Locate the object to be marshalled._<p>The default implementation first attempts to look under the configured_{@linkplain #setModelKey(String) model key}, if any, before attempting to_locate an object of {@linkplain Marshaller#supports(Class) supported type}._@param model the model Map_@return the Object to be marshalled (or {@code null} if none found)_@throws IllegalStateException if the model object specified by the_{@linkplain #setModelKey(String) model key} is not supported by the marshaller_@see #setModelKey(String);protected Object locateToBeMarshalled(Map<String, Object> model) throws IllegalStateException {_		if (this.modelKey != null) {_			Object obj = model.get(this.modelKey)__			if (obj == null) {_				throw new IllegalStateException("Model contains no object with key [" + this.modelKey + "]")__			}_			if (!this.marshaller.supports(obj.getClass())) {_				throw new IllegalStateException("Model object [" + obj + "] retrieved via key [" +_						this.modelKey + "] is not supported by the Marshaller")__			}_			return obj__		}_		for (Object obj : model.values()) {_			if (obj != null && (model.size() == 1 || !(obj instanceof BindingResult)) &&_					this.marshaller.supports(obj.getClass())) {_				return obj__			}_		}_		return null__	};locate,the,object,to,be,marshalled,p,the,default,implementation,first,attempts,to,look,under,the,configured,linkplain,set,model,key,string,model,key,if,any,before,attempting,to,locate,an,object,of,linkplain,marshaller,supports,class,supported,type,param,model,the,model,map,return,the,object,to,be,marshalled,or,code,null,if,none,found,throws,illegal,state,exception,if,the,model,object,specified,by,the,linkplain,set,model,key,string,model,key,is,not,supported,by,the,marshaller,see,set,model,key,string;protected,object,locate,to,be,marshalled,map,string,object,model,throws,illegal,state,exception,if,this,model,key,null,object,obj,model,get,this,model,key,if,obj,null,throw,new,illegal,state,exception,model,contains,no,object,with,key,this,model,key,if,this,marshaller,supports,obj,get,class,throw,new,illegal,state,exception,model,object,obj,retrieved,via,key,this,model,key,is,not,supported,by,the,marshaller,return,obj,for,object,obj,model,values,if,obj,null,model,size,1,obj,instanceof,binding,result,this,marshaller,supports,obj,get,class,return,obj,return,null
MarshallingView -> protected Object locateToBeMarshalled(Map<String, Object> model) throws IllegalStateException;1395698258;Locate the object to be marshalled._<p>The default implementation first attempts to look under the configured_{@linkplain #setModelKey(String) model key}, if any, before attempting to_locate an object of {@linkplain Marshaller#supports(Class) supported type}._@param model the model Map_@return the Object to be marshalled (or {@code null} if none found)_@throws IllegalStateException if the model object specified by the_{@linkplain #setModelKey(String) model key} is not supported by the marshaller_@see #setModelKey(String);protected Object locateToBeMarshalled(Map<String, Object> model) throws IllegalStateException {_		if (this.modelKey != null) {_			Object obj = model.get(this.modelKey)__			if (obj == null) {_				throw new IllegalStateException("Model contains no object with key [" + this.modelKey + "]")__			}_			if (!this.marshaller.supports(obj.getClass())) {_				throw new IllegalStateException("Model object [" + obj + "] retrieved via key [" +_						this.modelKey + "] is not supported by the Marshaller")__			}_			return obj__		}_		for (Object obj : model.values()) {_			if (obj != null && (model.size() == 1 || !(obj instanceof BindingResult)) &&_					this.marshaller.supports(obj.getClass())) {_				return obj__			}_		}_		return null__	};locate,the,object,to,be,marshalled,p,the,default,implementation,first,attempts,to,look,under,the,configured,linkplain,set,model,key,string,model,key,if,any,before,attempting,to,locate,an,object,of,linkplain,marshaller,supports,class,supported,type,param,model,the,model,map,return,the,object,to,be,marshalled,or,code,null,if,none,found,throws,illegal,state,exception,if,the,model,object,specified,by,the,linkplain,set,model,key,string,model,key,is,not,supported,by,the,marshaller,see,set,model,key,string;protected,object,locate,to,be,marshalled,map,string,object,model,throws,illegal,state,exception,if,this,model,key,null,object,obj,model,get,this,model,key,if,obj,null,throw,new,illegal,state,exception,model,contains,no,object,with,key,this,model,key,if,this,marshaller,supports,obj,get,class,throw,new,illegal,state,exception,model,object,obj,retrieved,via,key,this,model,key,is,not,supported,by,the,marshaller,return,obj,for,object,obj,model,values,if,obj,null,model,size,1,obj,instanceof,binding,result,this,marshaller,supports,obj,get,class,return,obj,return,null
MarshallingView -> protected Object locateToBeMarshalled(Map<String, Object> model) throws IllegalStateException;1396465029;Locate the object to be marshalled._<p>The default implementation first attempts to look under the configured_{@linkplain #setModelKey(String) model key}, if any, before attempting to_locate an object of {@linkplain Marshaller#supports(Class) supported type}._@param model the model Map_@return the Object to be marshalled (or {@code null} if none found)_@throws IllegalStateException if the model object specified by the_{@linkplain #setModelKey(String) model key} is not supported by the marshaller_@see #setModelKey(String);protected Object locateToBeMarshalled(Map<String, Object> model) throws IllegalStateException {_		if (this.modelKey != null) {_			Object obj = model.get(this.modelKey)__			if (obj == null) {_				throw new IllegalStateException("Model contains no object with key [" + this.modelKey + "]")__			}_			if (!this.marshaller.supports(obj.getClass())) {_				throw new IllegalStateException("Model object [" + obj + "] retrieved via key [" +_						this.modelKey + "] is not supported by the Marshaller")__			}_			return obj__		}_		for (Object obj : model.values()) {_			if (obj != null && (model.size() == 1 || !(obj instanceof BindingResult)) &&_					this.marshaller.supports(obj.getClass())) {_				return obj__			}_		}_		return null__	};locate,the,object,to,be,marshalled,p,the,default,implementation,first,attempts,to,look,under,the,configured,linkplain,set,model,key,string,model,key,if,any,before,attempting,to,locate,an,object,of,linkplain,marshaller,supports,class,supported,type,param,model,the,model,map,return,the,object,to,be,marshalled,or,code,null,if,none,found,throws,illegal,state,exception,if,the,model,object,specified,by,the,linkplain,set,model,key,string,model,key,is,not,supported,by,the,marshaller,see,set,model,key,string;protected,object,locate,to,be,marshalled,map,string,object,model,throws,illegal,state,exception,if,this,model,key,null,object,obj,model,get,this,model,key,if,obj,null,throw,new,illegal,state,exception,model,contains,no,object,with,key,this,model,key,if,this,marshaller,supports,obj,get,class,throw,new,illegal,state,exception,model,object,obj,retrieved,via,key,this,model,key,is,not,supported,by,the,marshaller,return,obj,for,object,obj,model,values,if,obj,null,model,size,1,obj,instanceof,binding,result,this,marshaller,supports,obj,get,class,return,obj,return,null
MarshallingView -> protected Object locateToBeMarshalled(Map<String, Object> model) throws IllegalStateException;1401463654;Locate the object to be marshalled._<p>The default implementation first attempts to look under the configured_{@linkplain #setModelKey(String) model key}, if any, before attempting to_locate an object of {@linkplain Marshaller#supports(Class) supported type}._@param model the model Map_@return the Object to be marshalled (or {@code null} if none found)_@throws IllegalStateException if the model object specified by the_{@linkplain #setModelKey(String) model key} is not supported by the marshaller_@see #setModelKey(String);protected Object locateToBeMarshalled(Map<String, Object> model) throws IllegalStateException {_		if (this.modelKey != null) {_			Object value = model.get(this.modelKey)__			if (value == null) {_				throw new IllegalStateException("Model contains no object with key [" + this.modelKey + "]")__			}_			if (!isEligibleForMarshalling(this.modelKey, value)) {_				throw new IllegalStateException("Model object [" + value + "] retrieved via key [" +_						this.modelKey + "] is not supported by the Marshaller")__			}_			return value__		}_		for (Map.Entry<String, Object> entry : model.entrySet()) {_			Object value = entry.getValue()__			if (value != null && (model.size() == 1 || !(value instanceof BindingResult)) &&_					isEligibleForMarshalling(entry.getKey(), value)) {_				return value__			}_		}_		return null__	};locate,the,object,to,be,marshalled,p,the,default,implementation,first,attempts,to,look,under,the,configured,linkplain,set,model,key,string,model,key,if,any,before,attempting,to,locate,an,object,of,linkplain,marshaller,supports,class,supported,type,param,model,the,model,map,return,the,object,to,be,marshalled,or,code,null,if,none,found,throws,illegal,state,exception,if,the,model,object,specified,by,the,linkplain,set,model,key,string,model,key,is,not,supported,by,the,marshaller,see,set,model,key,string;protected,object,locate,to,be,marshalled,map,string,object,model,throws,illegal,state,exception,if,this,model,key,null,object,value,model,get,this,model,key,if,value,null,throw,new,illegal,state,exception,model,contains,no,object,with,key,this,model,key,if,is,eligible,for,marshalling,this,model,key,value,throw,new,illegal,state,exception,model,object,value,retrieved,via,key,this,model,key,is,not,supported,by,the,marshaller,return,value,for,map,entry,string,object,entry,model,entry,set,object,value,entry,get,value,if,value,null,model,size,1,value,instanceof,binding,result,is,eligible,for,marshalling,entry,get,key,value,return,value,return,null
MarshallingView -> protected boolean isEligibleForMarshalling(String modelKey, Object value);1401463654;Check whether the given value from the current view's model is eligible_for marshalling through the configured {@link Marshaller}._<p>The default implementation calls {@link Marshaller#supports(Class)},_unwrapping a given {@link JAXBElement} first if applicable._@param modelKey the value's key in the model (never {@code null})_@param value the value to check (never {@code null})_@return whether the given value is to be considered as eligible_@see Marshaller#supports(Class);protected boolean isEligibleForMarshalling(String modelKey, Object value) {_		Class<?> classToCheck = value.getClass()__		if (value instanceof JAXBElement) {_			classToCheck = ((JAXBElement) value).getDeclaredType()__		}_		return this.marshaller.supports(classToCheck)__	};check,whether,the,given,value,from,the,current,view,s,model,is,eligible,for,marshalling,through,the,configured,link,marshaller,p,the,default,implementation,calls,link,marshaller,supports,class,unwrapping,a,given,link,jaxbelement,first,if,applicable,param,model,key,the,value,s,key,in,the,model,never,code,null,param,value,the,value,to,check,never,code,null,return,whether,the,given,value,is,to,be,considered,as,eligible,see,marshaller,supports,class;protected,boolean,is,eligible,for,marshalling,string,model,key,object,value,class,class,to,check,value,get,class,if,value,instanceof,jaxbelement,class,to,check,jaxbelement,value,get,declared,type,return,this,marshaller,supports,class,to,check
MarshallingView -> protected boolean isEligibleForMarshalling(String modelKey, Object value);1495868221;Check whether the given value from the current view's model is eligible_for marshalling through the configured {@link Marshaller}._<p>The default implementation calls {@link Marshaller#supports(Class)},_unwrapping a given {@link JAXBElement} first if applicable._@param modelKey the value's key in the model (never {@code null})_@param value the value to check (never {@code null})_@return whether the given value is to be considered as eligible_@see Marshaller#supports(Class);protected boolean isEligibleForMarshalling(String modelKey, Object value) {_		Class<?> classToCheck = value.getClass()__		if (value instanceof JAXBElement) {_			classToCheck = ((JAXBElement) value).getDeclaredType()__		}_		return this.marshaller.supports(classToCheck)__	};check,whether,the,given,value,from,the,current,view,s,model,is,eligible,for,marshalling,through,the,configured,link,marshaller,p,the,default,implementation,calls,link,marshaller,supports,class,unwrapping,a,given,link,jaxbelement,first,if,applicable,param,model,key,the,value,s,key,in,the,model,never,code,null,param,value,the,value,to,check,never,code,null,return,whether,the,given,value,is,to,be,considered,as,eligible,see,marshaller,supports,class;protected,boolean,is,eligible,for,marshalling,string,model,key,object,value,class,class,to,check,value,get,class,if,value,instanceof,jaxbelement,class,to,check,jaxbelement,value,get,declared,type,return,this,marshaller,supports,class,to,check
MarshallingView -> protected boolean isEligibleForMarshalling(String modelKey, Object value);1498780456;Check whether the given value from the current view's model is eligible_for marshalling through the configured {@link Marshaller}._<p>The default implementation calls {@link Marshaller#supports(Class)},_unwrapping a given {@link JAXBElement} first if applicable._@param modelKey the value's key in the model (never {@code null})_@param value the value to check (never {@code null})_@return whether the given value is to be considered as eligible_@see Marshaller#supports(Class);protected boolean isEligibleForMarshalling(String modelKey, Object value) {_		Assert.state(this.marshaller != null, "No Marshaller set")__		Class<?> classToCheck = value.getClass()__		if (value instanceof JAXBElement) {_			classToCheck = ((JAXBElement) value).getDeclaredType()__		}_		return this.marshaller.supports(classToCheck)__	};check,whether,the,given,value,from,the,current,view,s,model,is,eligible,for,marshalling,through,the,configured,link,marshaller,p,the,default,implementation,calls,link,marshaller,supports,class,unwrapping,a,given,link,jaxbelement,first,if,applicable,param,model,key,the,value,s,key,in,the,model,never,code,null,param,value,the,value,to,check,never,code,null,return,whether,the,given,value,is,to,be,considered,as,eligible,see,marshaller,supports,class;protected,boolean,is,eligible,for,marshalling,string,model,key,object,value,assert,state,this,marshaller,null,no,marshaller,set,class,class,to,check,value,get,class,if,value,instanceof,jaxbelement,class,to,check,jaxbelement,value,get,declared,type,return,this,marshaller,supports,class,to,check
MarshallingView -> protected boolean isEligibleForMarshalling(String modelKey, Object value);1522843494;Check whether the given value from the current view's model is eligible_for marshalling through the configured {@link Marshaller}._<p>The default implementation calls {@link Marshaller#supports(Class)},_unwrapping a given {@link JAXBElement} first if applicable._@param modelKey the value's key in the model (never {@code null})_@param value the value to check (never {@code null})_@return whether the given value is to be considered as eligible_@see Marshaller#supports(Class);protected boolean isEligibleForMarshalling(String modelKey, Object value) {_		Assert.state(this.marshaller != null, "No Marshaller set")__		Class<?> classToCheck = value.getClass()__		if (value instanceof JAXBElement) {_			classToCheck = ((JAXBElement<?>) value).getDeclaredType()__		}_		return this.marshaller.supports(classToCheck)__	};check,whether,the,given,value,from,the,current,view,s,model,is,eligible,for,marshalling,through,the,configured,link,marshaller,p,the,default,implementation,calls,link,marshaller,supports,class,unwrapping,a,given,link,jaxbelement,first,if,applicable,param,model,key,the,value,s,key,in,the,model,never,code,null,param,value,the,value,to,check,never,code,null,return,whether,the,given,value,is,to,be,considered,as,eligible,see,marshaller,supports,class;protected,boolean,is,eligible,for,marshalling,string,model,key,object,value,assert,state,this,marshaller,null,no,marshaller,set,class,class,to,check,value,get,class,if,value,instanceof,jaxbelement,class,to,check,jaxbelement,value,get,declared,type,return,this,marshaller,supports,class,to,check
MarshallingView -> @Nullable 	protected Object locateToBeMarshalled(Map<String, Object> model) throws IllegalStateException;1495868221;Locate the object to be marshalled._<p>The default implementation first attempts to look under the configured_{@linkplain #setModelKey(String) model key}, if any, before attempting to_locate an object of {@linkplain Marshaller#supports(Class) supported type}._@param model the model Map_@return the Object to be marshalled (or {@code null} if none found)_@throws IllegalStateException if the model object specified by the_{@linkplain #setModelKey(String) model key} is not supported by the marshaller_@see #setModelKey(String);@Nullable_	protected Object locateToBeMarshalled(Map<String, Object> model) throws IllegalStateException {_		if (this.modelKey != null) {_			Object value = model.get(this.modelKey)__			if (value == null) {_				throw new IllegalStateException("Model contains no object with key [" + this.modelKey + "]")__			}_			if (!isEligibleForMarshalling(this.modelKey, value)) {_				throw new IllegalStateException("Model object [" + value + "] retrieved via key [" +_						this.modelKey + "] is not supported by the Marshaller")__			}_			return value__		}_		for (Map.Entry<String, Object> entry : model.entrySet()) {_			Object value = entry.getValue()__			if (value != null && (model.size() == 1 || !(value instanceof BindingResult)) &&_					isEligibleForMarshalling(entry.getKey(), value)) {_				return value__			}_		}_		return null__	};locate,the,object,to,be,marshalled,p,the,default,implementation,first,attempts,to,look,under,the,configured,linkplain,set,model,key,string,model,key,if,any,before,attempting,to,locate,an,object,of,linkplain,marshaller,supports,class,supported,type,param,model,the,model,map,return,the,object,to,be,marshalled,or,code,null,if,none,found,throws,illegal,state,exception,if,the,model,object,specified,by,the,linkplain,set,model,key,string,model,key,is,not,supported,by,the,marshaller,see,set,model,key,string;nullable,protected,object,locate,to,be,marshalled,map,string,object,model,throws,illegal,state,exception,if,this,model,key,null,object,value,model,get,this,model,key,if,value,null,throw,new,illegal,state,exception,model,contains,no,object,with,key,this,model,key,if,is,eligible,for,marshalling,this,model,key,value,throw,new,illegal,state,exception,model,object,value,retrieved,via,key,this,model,key,is,not,supported,by,the,marshaller,return,value,for,map,entry,string,object,entry,model,entry,set,object,value,entry,get,value,if,value,null,model,size,1,value,instanceof,binding,result,is,eligible,for,marshalling,entry,get,key,value,return,value,return,null
MarshallingView -> @Nullable 	protected Object locateToBeMarshalled(Map<String, Object> model) throws IllegalStateException;1498780456;Locate the object to be marshalled._<p>The default implementation first attempts to look under the configured_{@linkplain #setModelKey(String) model key}, if any, before attempting to_locate an object of {@linkplain Marshaller#supports(Class) supported type}._@param model the model Map_@return the Object to be marshalled (or {@code null} if none found)_@throws IllegalStateException if the model object specified by the_{@linkplain #setModelKey(String) model key} is not supported by the marshaller_@see #setModelKey(String);@Nullable_	protected Object locateToBeMarshalled(Map<String, Object> model) throws IllegalStateException {_		if (this.modelKey != null) {_			Object value = model.get(this.modelKey)__			if (value == null) {_				throw new IllegalStateException("Model contains no object with key [" + this.modelKey + "]")__			}_			if (!isEligibleForMarshalling(this.modelKey, value)) {_				throw new IllegalStateException("Model object [" + value + "] retrieved via key [" +_						this.modelKey + "] is not supported by the Marshaller")__			}_			return value__		}_		for (Map.Entry<String, Object> entry : model.entrySet()) {_			Object value = entry.getValue()__			if (value != null && (model.size() == 1 || !(value instanceof BindingResult)) &&_					isEligibleForMarshalling(entry.getKey(), value)) {_				return value__			}_		}_		return null__	};locate,the,object,to,be,marshalled,p,the,default,implementation,first,attempts,to,look,under,the,configured,linkplain,set,model,key,string,model,key,if,any,before,attempting,to,locate,an,object,of,linkplain,marshaller,supports,class,supported,type,param,model,the,model,map,return,the,object,to,be,marshalled,or,code,null,if,none,found,throws,illegal,state,exception,if,the,model,object,specified,by,the,linkplain,set,model,key,string,model,key,is,not,supported,by,the,marshaller,see,set,model,key,string;nullable,protected,object,locate,to,be,marshalled,map,string,object,model,throws,illegal,state,exception,if,this,model,key,null,object,value,model,get,this,model,key,if,value,null,throw,new,illegal,state,exception,model,contains,no,object,with,key,this,model,key,if,is,eligible,for,marshalling,this,model,key,value,throw,new,illegal,state,exception,model,object,value,retrieved,via,key,this,model,key,is,not,supported,by,the,marshaller,return,value,for,map,entry,string,object,entry,model,entry,set,object,value,entry,get,value,if,value,null,model,size,1,value,instanceof,binding,result,is,eligible,for,marshalling,entry,get,key,value,return,value,return,null
MarshallingView -> @Nullable 	protected Object locateToBeMarshalled(Map<String, Object> model) throws IllegalStateException;1522843494;Locate the object to be marshalled._<p>The default implementation first attempts to look under the configured_{@linkplain #setModelKey(String) model key}, if any, before attempting to_locate an object of {@linkplain Marshaller#supports(Class) supported type}._@param model the model Map_@return the Object to be marshalled (or {@code null} if none found)_@throws IllegalStateException if the model object specified by the_{@linkplain #setModelKey(String) model key} is not supported by the marshaller_@see #setModelKey(String);@Nullable_	protected Object locateToBeMarshalled(Map<String, Object> model) throws IllegalStateException {_		if (this.modelKey != null) {_			Object value = model.get(this.modelKey)__			if (value == null) {_				throw new IllegalStateException("Model contains no object with key [" + this.modelKey + "]")__			}_			if (!isEligibleForMarshalling(this.modelKey, value)) {_				throw new IllegalStateException("Model object [" + value + "] retrieved via key [" +_						this.modelKey + "] is not supported by the Marshaller")__			}_			return value__		}_		for (Map.Entry<String, Object> entry : model.entrySet()) {_			Object value = entry.getValue()__			if (value != null && (model.size() == 1 || !(value instanceof BindingResult)) &&_					isEligibleForMarshalling(entry.getKey(), value)) {_				return value__			}_		}_		return null__	};locate,the,object,to,be,marshalled,p,the,default,implementation,first,attempts,to,look,under,the,configured,linkplain,set,model,key,string,model,key,if,any,before,attempting,to,locate,an,object,of,linkplain,marshaller,supports,class,supported,type,param,model,the,model,map,return,the,object,to,be,marshalled,or,code,null,if,none,found,throws,illegal,state,exception,if,the,model,object,specified,by,the,linkplain,set,model,key,string,model,key,is,not,supported,by,the,marshaller,see,set,model,key,string;nullable,protected,object,locate,to,be,marshalled,map,string,object,model,throws,illegal,state,exception,if,this,model,key,null,object,value,model,get,this,model,key,if,value,null,throw,new,illegal,state,exception,model,contains,no,object,with,key,this,model,key,if,is,eligible,for,marshalling,this,model,key,value,throw,new,illegal,state,exception,model,object,value,retrieved,via,key,this,model,key,is,not,supported,by,the,marshaller,return,value,for,map,entry,string,object,entry,model,entry,set,object,value,entry,get,value,if,value,null,model,size,1,value,instanceof,binding,result,is,eligible,for,marshalling,entry,get,key,value,return,value,return,null
MarshallingView -> public void setModelKey(String modelKey);1328020251;Set the name of the model key that represents the object to be marshalled. If not specified, the model map will be_searched for a supported value type.__@see Marshaller#supports(Class);public void setModelKey(String modelKey) {_		this.modelKey = modelKey__	};set,the,name,of,the,model,key,that,represents,the,object,to,be,marshalled,if,not,specified,the,model,map,will,be,searched,for,a,supported,value,type,see,marshaller,supports,class;public,void,set,model,key,string,model,key,this,model,key,model,key
MarshallingView -> public void setModelKey(String modelKey);1350941037;Set the name of the model key that represents the object to be marshalled. If not specified, the model map will be_searched for a supported value type.__@see Marshaller#supports(Class);public void setModelKey(String modelKey) {_		this.modelKey = modelKey__	};set,the,name,of,the,model,key,that,represents,the,object,to,be,marshalled,if,not,specified,the,model,map,will,be,searched,for,a,supported,value,type,see,marshaller,supports,class;public,void,set,model,key,string,model,key,this,model,key,model,key
MarshallingView -> public void setModelKey(String modelKey);1356735495;Set the name of the model key that represents the object to be marshalled. If not specified, the model map will be_searched for a supported value type.__@see Marshaller#supports(Class);public void setModelKey(String modelKey) {_		this.modelKey = modelKey__	};set,the,name,of,the,model,key,that,represents,the,object,to,be,marshalled,if,not,specified,the,model,map,will,be,searched,for,a,supported,value,type,see,marshaller,supports,class;public,void,set,model,key,string,model,key,this,model,key,model,key
MarshallingView -> public void setModelKey(String modelKey);1392158469;Set the name of the model key that represents the object to be marshalled._If not specified, the model map will be searched for a supported value type._@see Marshaller#supports(Class);public void setModelKey(String modelKey) {_		this.modelKey = modelKey__	};set,the,name,of,the,model,key,that,represents,the,object,to,be,marshalled,if,not,specified,the,model,map,will,be,searched,for,a,supported,value,type,see,marshaller,supports,class;public,void,set,model,key,string,model,key,this,model,key,model,key
MarshallingView -> public void setModelKey(String modelKey);1392226536;Set the name of the model key that represents the object to be marshalled._If not specified, the model map will be searched for a supported value type._@see Marshaller#supports(Class);public void setModelKey(String modelKey) {_		this.modelKey = modelKey__	};set,the,name,of,the,model,key,that,represents,the,object,to,be,marshalled,if,not,specified,the,model,map,will,be,searched,for,a,supported,value,type,see,marshaller,supports,class;public,void,set,model,key,string,model,key,this,model,key,model,key
MarshallingView -> public void setModelKey(String modelKey);1395698258;Set the name of the model key that represents the object to be marshalled._If not specified, the model map will be searched for a supported value type._@see Marshaller#supports(Class);public void setModelKey(String modelKey) {_		this.modelKey = modelKey__	};set,the,name,of,the,model,key,that,represents,the,object,to,be,marshalled,if,not,specified,the,model,map,will,be,searched,for,a,supported,value,type,see,marshaller,supports,class;public,void,set,model,key,string,model,key,this,model,key,model,key
MarshallingView -> public void setModelKey(String modelKey);1396465029;Set the name of the model key that represents the object to be marshalled._If not specified, the model map will be searched for a supported value type._@see Marshaller#supports(Class);public void setModelKey(String modelKey) {_		this.modelKey = modelKey__	};set,the,name,of,the,model,key,that,represents,the,object,to,be,marshalled,if,not,specified,the,model,map,will,be,searched,for,a,supported,value,type,see,marshaller,supports,class;public,void,set,model,key,string,model,key,this,model,key,model,key
MarshallingView -> public void setModelKey(String modelKey);1401463654;Set the name of the model key that represents the object to be marshalled._If not specified, the model map will be searched for a supported value type._@see Marshaller#supports(Class);public void setModelKey(String modelKey) {_		this.modelKey = modelKey__	};set,the,name,of,the,model,key,that,represents,the,object,to,be,marshalled,if,not,specified,the,model,map,will,be,searched,for,a,supported,value,type,see,marshaller,supports,class;public,void,set,model,key,string,model,key,this,model,key,model,key
MarshallingView -> public void setModelKey(String modelKey);1495868221;Set the name of the model key that represents the object to be marshalled._If not specified, the model map will be searched for a supported value type._@see Marshaller#supports(Class);public void setModelKey(String modelKey) {_		this.modelKey = modelKey__	};set,the,name,of,the,model,key,that,represents,the,object,to,be,marshalled,if,not,specified,the,model,map,will,be,searched,for,a,supported,value,type,see,marshaller,supports,class;public,void,set,model,key,string,model,key,this,model,key,model,key
MarshallingView -> public void setModelKey(String modelKey);1498780456;Set the name of the model key that represents the object to be marshalled._If not specified, the model map will be searched for a supported value type._@see Marshaller#supports(Class);public void setModelKey(String modelKey) {_		this.modelKey = modelKey__	};set,the,name,of,the,model,key,that,represents,the,object,to,be,marshalled,if,not,specified,the,model,map,will,be,searched,for,a,supported,value,type,see,marshaller,supports,class;public,void,set,model,key,string,model,key,this,model,key,model,key
MarshallingView -> public void setModelKey(String modelKey);1522843494;Set the name of the model key that represents the object to be marshalled._If not specified, the model map will be searched for a supported value type._@see Marshaller#supports(Class);public void setModelKey(String modelKey) {_		this.modelKey = modelKey__	};set,the,name,of,the,model,key,that,represents,the,object,to,be,marshalled,if,not,specified,the,model,map,will,be,searched,for,a,supported,value,type,see,marshaller,supports,class;public,void,set,model,key,string,model,key,this,model,key,model,key
MarshallingView -> protected Object locateToBeMarshalled(Map<String, Object> model) throws ServletException;1328020251;Locates the object to be marshalled. The default implementation first attempts to look under the configured_{@linkplain #setModelKey(String) model key}, if any, before attempting to locate an object of {@linkplain_Marshaller#supports(Class) supported type}.__@param model the model Map_@return the Object to be marshalled (or <code>null</code> if none found)_@throws ServletException if the model object specified by the {@linkplain #setModelKey(String) model key} is not_supported by the marshaller_@see #setModelKey(String);protected Object locateToBeMarshalled(Map<String, Object> model) throws ServletException {_		if (this.modelKey != null) {_			Object o = model.get(this.modelKey)__			if (o == null) {_				throw new ServletException("Model contains no object with key [" + modelKey + "]")__			}_			if (!this.marshaller.supports(o.getClass())) {_				throw new ServletException("Model object [" + o + "] retrieved via key [" + modelKey +_						"] is not supported by the Marshaller")__			}_			return o__		}_		for (Object o : model.values()) {_			if (o != null && this.marshaller.supports(o.getClass())) {_				return o__			}_		}_		return null__	};locates,the,object,to,be,marshalled,the,default,implementation,first,attempts,to,look,under,the,configured,linkplain,set,model,key,string,model,key,if,any,before,attempting,to,locate,an,object,of,linkplain,marshaller,supports,class,supported,type,param,model,the,model,map,return,the,object,to,be,marshalled,or,code,null,code,if,none,found,throws,servlet,exception,if,the,model,object,specified,by,the,linkplain,set,model,key,string,model,key,is,not,supported,by,the,marshaller,see,set,model,key,string;protected,object,locate,to,be,marshalled,map,string,object,model,throws,servlet,exception,if,this,model,key,null,object,o,model,get,this,model,key,if,o,null,throw,new,servlet,exception,model,contains,no,object,with,key,model,key,if,this,marshaller,supports,o,get,class,throw,new,servlet,exception,model,object,o,retrieved,via,key,model,key,is,not,supported,by,the,marshaller,return,o,for,object,o,model,values,if,o,null,this,marshaller,supports,o,get,class,return,o,return,null
MarshallingView -> protected Object locateToBeMarshalled(Map<String, Object> model) throws ServletException;1350941037;Locates the object to be marshalled. The default implementation first attempts to look under the configured_{@linkplain #setModelKey(String) model key}, if any, before attempting to locate an object of {@linkplain_Marshaller#supports(Class) supported type}.__@param model the model Map_@return the Object to be marshalled (or <code>null</code> if none found)_@throws ServletException if the model object specified by the {@linkplain #setModelKey(String) model key} is not_supported by the marshaller_@see #setModelKey(String);protected Object locateToBeMarshalled(Map<String, Object> model) throws ServletException {_		if (this.modelKey != null) {_			Object o = model.get(this.modelKey)__			if (o == null) {_				throw new ServletException("Model contains no object with key [" + modelKey + "]")__			}_			if (!this.marshaller.supports(o.getClass())) {_				throw new ServletException("Model object [" + o + "] retrieved via key [" + modelKey +_						"] is not supported by the Marshaller")__			}_			return o__		}_		for (Object o : model.values()) {_			if (o != null && this.marshaller.supports(o.getClass())) {_				return o__			}_		}_		return null__	};locates,the,object,to,be,marshalled,the,default,implementation,first,attempts,to,look,under,the,configured,linkplain,set,model,key,string,model,key,if,any,before,attempting,to,locate,an,object,of,linkplain,marshaller,supports,class,supported,type,param,model,the,model,map,return,the,object,to,be,marshalled,or,code,null,code,if,none,found,throws,servlet,exception,if,the,model,object,specified,by,the,linkplain,set,model,key,string,model,key,is,not,supported,by,the,marshaller,see,set,model,key,string;protected,object,locate,to,be,marshalled,map,string,object,model,throws,servlet,exception,if,this,model,key,null,object,o,model,get,this,model,key,if,o,null,throw,new,servlet,exception,model,contains,no,object,with,key,model,key,if,this,marshaller,supports,o,get,class,throw,new,servlet,exception,model,object,o,retrieved,via,key,model,key,is,not,supported,by,the,marshaller,return,o,for,object,o,model,values,if,o,null,this,marshaller,supports,o,get,class,return,o,return,null
MarshallingView -> protected Object locateToBeMarshalled(Map<String, Object> model) throws ServletException;1356735495;Locates the object to be marshalled. The default implementation first attempts to look under the configured_{@linkplain #setModelKey(String) model key}, if any, before attempting to locate an object of {@linkplain_Marshaller#supports(Class) supported type}.__@param model the model Map_@return the Object to be marshalled (or {@code null} if none found)_@throws ServletException if the model object specified by the {@linkplain #setModelKey(String) model key} is not_supported by the marshaller_@see #setModelKey(String);protected Object locateToBeMarshalled(Map<String, Object> model) throws ServletException {_		if (this.modelKey != null) {_			Object o = model.get(this.modelKey)__			if (o == null) {_				throw new ServletException("Model contains no object with key [" + modelKey + "]")__			}_			if (!this.marshaller.supports(o.getClass())) {_				throw new ServletException("Model object [" + o + "] retrieved via key [" + modelKey +_						"] is not supported by the Marshaller")__			}_			return o__		}_		for (Object o : model.values()) {_			if (o != null && this.marshaller.supports(o.getClass())) {_				return o__			}_		}_		return null__	};locates,the,object,to,be,marshalled,the,default,implementation,first,attempts,to,look,under,the,configured,linkplain,set,model,key,string,model,key,if,any,before,attempting,to,locate,an,object,of,linkplain,marshaller,supports,class,supported,type,param,model,the,model,map,return,the,object,to,be,marshalled,or,code,null,if,none,found,throws,servlet,exception,if,the,model,object,specified,by,the,linkplain,set,model,key,string,model,key,is,not,supported,by,the,marshaller,see,set,model,key,string;protected,object,locate,to,be,marshalled,map,string,object,model,throws,servlet,exception,if,this,model,key,null,object,o,model,get,this,model,key,if,o,null,throw,new,servlet,exception,model,contains,no,object,with,key,model,key,if,this,marshaller,supports,o,get,class,throw,new,servlet,exception,model,object,o,retrieved,via,key,model,key,is,not,supported,by,the,marshaller,return,o,for,object,o,model,values,if,o,null,this,marshaller,supports,o,get,class,return,o,return,null
MarshallingView -> public MarshallingView();1328020251;Constructs a new <code>MarshallingView</code> with no {@link Marshaller} set. The marshaller must be set after_construction by invoking {@link #setMarshaller(Marshaller)}.;public MarshallingView() {_		setContentType(DEFAULT_CONTENT_TYPE)__		setExposePathVariables(false)__	};constructs,a,new,code,marshalling,view,code,with,no,link,marshaller,set,the,marshaller,must,be,set,after,construction,by,invoking,link,set,marshaller,marshaller;public,marshalling,view,set,content,type,set,expose,path,variables,false
MarshallingView -> public MarshallingView();1350941037;Constructs a new <code>MarshallingView</code> with no {@link Marshaller} set. The marshaller must be set after_construction by invoking {@link #setMarshaller(Marshaller)}.;public MarshallingView() {_		setContentType(DEFAULT_CONTENT_TYPE)__		setExposePathVariables(false)__	};constructs,a,new,code,marshalling,view,code,with,no,link,marshaller,set,the,marshaller,must,be,set,after,construction,by,invoking,link,set,marshaller,marshaller;public,marshalling,view,set,content,type,set,expose,path,variables,false
MarshallingView -> public MarshallingView();1356735495;Constructs a new {@code MarshallingView} with no {@link Marshaller} set. The marshaller must be set after_construction by invoking {@link #setMarshaller(Marshaller)}.;public MarshallingView() {_		setContentType(DEFAULT_CONTENT_TYPE)__		setExposePathVariables(false)__	};constructs,a,new,code,marshalling,view,with,no,link,marshaller,set,the,marshaller,must,be,set,after,construction,by,invoking,link,set,marshaller,marshaller;public,marshalling,view,set,content,type,set,expose,path,variables,false
MarshallingView -> public MarshallingView();1392158469;Constructs a new {@code MarshallingView} with no {@link Marshaller} set._The marshaller must be set after construction by invoking {@link #setMarshaller}.;public MarshallingView() {_		setContentType(DEFAULT_CONTENT_TYPE)__		setExposePathVariables(false)__	};constructs,a,new,code,marshalling,view,with,no,link,marshaller,set,the,marshaller,must,be,set,after,construction,by,invoking,link,set,marshaller;public,marshalling,view,set,content,type,set,expose,path,variables,false
MarshallingView -> public MarshallingView();1392226536;Constructs a new {@code MarshallingView} with no {@link Marshaller} set._The marshaller must be set after construction by invoking {@link #setMarshaller}.;public MarshallingView() {_		setContentType(DEFAULT_CONTENT_TYPE)__		setExposePathVariables(false)__	};constructs,a,new,code,marshalling,view,with,no,link,marshaller,set,the,marshaller,must,be,set,after,construction,by,invoking,link,set,marshaller;public,marshalling,view,set,content,type,set,expose,path,variables,false
MarshallingView -> public MarshallingView();1395698258;Constructs a new {@code MarshallingView} with no {@link Marshaller} set._The marshaller must be set after construction by invoking {@link #setMarshaller}.;public MarshallingView() {_		setContentType(DEFAULT_CONTENT_TYPE)__		setExposePathVariables(false)__	};constructs,a,new,code,marshalling,view,with,no,link,marshaller,set,the,marshaller,must,be,set,after,construction,by,invoking,link,set,marshaller;public,marshalling,view,set,content,type,set,expose,path,variables,false
MarshallingView -> public MarshallingView();1396465029;Constructs a new {@code MarshallingView} with no {@link Marshaller} set._The marshaller must be set after construction by invoking {@link #setMarshaller}.;public MarshallingView() {_		setContentType(DEFAULT_CONTENT_TYPE)__		setExposePathVariables(false)__	};constructs,a,new,code,marshalling,view,with,no,link,marshaller,set,the,marshaller,must,be,set,after,construction,by,invoking,link,set,marshaller;public,marshalling,view,set,content,type,set,expose,path,variables,false
MarshallingView -> public MarshallingView();1401463654;Construct a new {@code MarshallingView} with no {@link Marshaller} set._The marshaller must be set after construction by invoking {@link #setMarshaller}.;public MarshallingView() {_		setContentType(DEFAULT_CONTENT_TYPE)__		setExposePathVariables(false)__	};construct,a,new,code,marshalling,view,with,no,link,marshaller,set,the,marshaller,must,be,set,after,construction,by,invoking,link,set,marshaller;public,marshalling,view,set,content,type,set,expose,path,variables,false
MarshallingView -> public MarshallingView();1495868221;Construct a new {@code MarshallingView} with no {@link Marshaller} set._The marshaller must be set after construction by invoking {@link #setMarshaller}.;public MarshallingView() {_		setContentType(DEFAULT_CONTENT_TYPE)__		setExposePathVariables(false)__	};construct,a,new,code,marshalling,view,with,no,link,marshaller,set,the,marshaller,must,be,set,after,construction,by,invoking,link,set,marshaller;public,marshalling,view,set,content,type,set,expose,path,variables,false
MarshallingView -> public MarshallingView();1498780456;Construct a new {@code MarshallingView} with no {@link Marshaller} set._The marshaller must be set after construction by invoking {@link #setMarshaller}.;public MarshallingView() {_		setContentType(DEFAULT_CONTENT_TYPE)__		setExposePathVariables(false)__	};construct,a,new,code,marshalling,view,with,no,link,marshaller,set,the,marshaller,must,be,set,after,construction,by,invoking,link,set,marshaller;public,marshalling,view,set,content,type,set,expose,path,variables,false
MarshallingView -> public MarshallingView();1522843494;Construct a new {@code MarshallingView} with no {@link Marshaller} set._The marshaller must be set after construction by invoking {@link #setMarshaller}.;public MarshallingView() {_		setContentType(DEFAULT_CONTENT_TYPE)__		setExposePathVariables(false)__	};construct,a,new,code,marshalling,view,with,no,link,marshaller,set,the,marshaller,must,be,set,after,construction,by,invoking,link,set,marshaller;public,marshalling,view,set,content,type,set,expose,path,variables,false
