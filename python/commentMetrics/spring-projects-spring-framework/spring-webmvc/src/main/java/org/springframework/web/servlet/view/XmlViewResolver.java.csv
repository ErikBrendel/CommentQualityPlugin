# id;timestamp;commentText;codeText;commentWords;codeWords
XmlViewResolver -> @Override 	public void destroy() throws BeansException;1356735495;Close the view bean factory on context shutdown.;@Override_	public void destroy() throws BeansException {_		if (this.cachedFactory != null) {_			this.cachedFactory.close()__		}_	};close,the,view,bean,factory,on,context,shutdown;override,public,void,destroy,throws,beans,exception,if,this,cached,factory,null,this,cached,factory,close
XmlViewResolver -> @Override 	public void destroy() throws BeansException;1368482696;Close the view bean factory on context shutdown.;@Override_	public void destroy() throws BeansException {_		if (this.cachedFactory != null) {_			this.cachedFactory.close()__		}_	};close,the,view,bean,factory,on,context,shutdown;override,public,void,destroy,throws,beans,exception,if,this,cached,factory,null,this,cached,factory,close
XmlViewResolver -> @Override 	public void destroy() throws BeansException;1407935098;Close the view bean factory on context shutdown.;@Override_	public void destroy() throws BeansException {_		if (this.cachedFactory != null) {_			this.cachedFactory.close()__		}_	};close,the,view,bean,factory,on,context,shutdown;override,public,void,destroy,throws,beans,exception,if,this,cached,factory,null,this,cached,factory,close
XmlViewResolver -> @Override 	public void destroy() throws BeansException;1496837955;Close the view bean factory on context shutdown.;@Override_	public void destroy() throws BeansException {_		if (this.cachedFactory != null) {_			this.cachedFactory.close()__		}_	};close,the,view,bean,factory,on,context,shutdown;override,public,void,destroy,throws,beans,exception,if,this,cached,factory,null,this,cached,factory,close
XmlViewResolver -> @Override 	public void destroy() throws BeansException;1498780456;Close the view bean factory on context shutdown.;@Override_	public void destroy() throws BeansException {_		if (this.cachedFactory != null) {_			this.cachedFactory.close()__		}_	};close,the,view,bean,factory,on,context,shutdown;override,public,void,destroy,throws,beans,exception,if,this,cached,factory,null,this,cached,factory,close
XmlViewResolver -> @Override 	public void destroy() throws BeansException;1520528267;Close the view bean factory on context shutdown.;@Override_	public void destroy() throws BeansException {_		if (this.cachedFactory != null) {_			this.cachedFactory.close()__		}_	};close,the,view,bean,factory,on,context,shutdown;override,public,void,destroy,throws,beans,exception,if,this,cached,factory,null,this,cached,factory,close
XmlViewResolver -> @Override 	public void destroy() throws BeansException;1522448444;Close the view bean factory on context shutdown.;@Override_	public void destroy() throws BeansException {_		if (this.cachedFactory != null) {_			this.cachedFactory.close()__		}_	};close,the,view,bean,factory,on,context,shutdown;override,public,void,destroy,throws,beans,exception,if,this,cached,factory,null,this,cached,factory,close
XmlViewResolver -> @Override 	public void destroy() throws BeansException;1530174524;Close the view bean factory on context shutdown.;@Override_	public void destroy() throws BeansException {_		if (this.cachedFactory != null) {_			this.cachedFactory.close()__		}_	};close,the,view,bean,factory,on,context,shutdown;override,public,void,destroy,throws,beans,exception,if,this,cached,factory,null,this,cached,factory,close
XmlViewResolver -> @Override 	public void afterPropertiesSet() throws BeansException;1356735495;Pre-initialize the factory from the XML file._Only effective if caching is enabled.;@Override_	public void afterPropertiesSet() throws BeansException {_		if (isCache()) {_			initFactory()__		}_	};pre,initialize,the,factory,from,the,xml,file,only,effective,if,caching,is,enabled;override,public,void,after,properties,set,throws,beans,exception,if,is,cache,init,factory
XmlViewResolver -> @Override 	public void afterPropertiesSet() throws BeansException;1368482696;Pre-initialize the factory from the XML file._Only effective if caching is enabled.;@Override_	public void afterPropertiesSet() throws BeansException {_		if (isCache()) {_			initFactory()__		}_	};pre,initialize,the,factory,from,the,xml,file,only,effective,if,caching,is,enabled;override,public,void,after,properties,set,throws,beans,exception,if,is,cache,init,factory
XmlViewResolver -> @Override 	public void afterPropertiesSet() throws BeansException;1407935098;Pre-initialize the factory from the XML file._Only effective if caching is enabled.;@Override_	public void afterPropertiesSet() throws BeansException {_		if (isCache()) {_			initFactory()__		}_	};pre,initialize,the,factory,from,the,xml,file,only,effective,if,caching,is,enabled;override,public,void,after,properties,set,throws,beans,exception,if,is,cache,init,factory
XmlViewResolver -> @Override 	public void afterPropertiesSet() throws BeansException;1496837955;Pre-initialize the factory from the XML file._Only effective if caching is enabled.;@Override_	public void afterPropertiesSet() throws BeansException {_		if (isCache()) {_			initFactory()__		}_	};pre,initialize,the,factory,from,the,xml,file,only,effective,if,caching,is,enabled;override,public,void,after,properties,set,throws,beans,exception,if,is,cache,init,factory
XmlViewResolver -> @Override 	public void afterPropertiesSet() throws BeansException;1498780456;Pre-initialize the factory from the XML file._Only effective if caching is enabled.;@Override_	public void afterPropertiesSet() throws BeansException {_		if (isCache()) {_			initFactory()__		}_	};pre,initialize,the,factory,from,the,xml,file,only,effective,if,caching,is,enabled;override,public,void,after,properties,set,throws,beans,exception,if,is,cache,init,factory
XmlViewResolver -> @Override 	public void afterPropertiesSet() throws BeansException;1520528267;Pre-initialize the factory from the XML file._Only effective if caching is enabled.;@Override_	public void afterPropertiesSet() throws BeansException {_		if (isCache()) {_			initFactory()__		}_	};pre,initialize,the,factory,from,the,xml,file,only,effective,if,caching,is,enabled;override,public,void,after,properties,set,throws,beans,exception,if,is,cache,init,factory
XmlViewResolver -> @Override 	public void afterPropertiesSet() throws BeansException;1522448444;Pre-initialize the factory from the XML file._Only effective if caching is enabled.;@Override_	public void afterPropertiesSet() throws BeansException {_		if (isCache()) {_			initFactory()__		}_	};pre,initialize,the,factory,from,the,xml,file,only,effective,if,caching,is,enabled;override,public,void,after,properties,set,throws,beans,exception,if,is,cache,init,factory
XmlViewResolver -> @Override 	public void afterPropertiesSet() throws BeansException;1530174524;Pre-initialize the factory from the XML file._Only effective if caching is enabled.;@Override_	public void afterPropertiesSet() throws BeansException {_		if (isCache()) {_			initFactory()__		}_	};pre,initialize,the,factory,from,the,xml,file,only,effective,if,caching,is,enabled;override,public,void,after,properties,set,throws,beans,exception,if,is,cache,init,factory
XmlViewResolver -> public void destroy() throws BeansException;1328020251;Close the view bean factory on context shutdown.;public void destroy() throws BeansException {_		if (this.cachedFactory != null) {_			this.cachedFactory.close()__		}_	};close,the,view,bean,factory,on,context,shutdown;public,void,destroy,throws,beans,exception,if,this,cached,factory,null,this,cached,factory,close
XmlViewResolver -> public void destroy() throws BeansException;1357119239;Close the view bean factory on context shutdown.;public void destroy() throws BeansException {_		if (this.cachedFactory != null) {_			this.cachedFactory.close()__		}_	};close,the,view,bean,factory,on,context,shutdown;public,void,destroy,throws,beans,exception,if,this,cached,factory,null,this,cached,factory,close
XmlViewResolver -> public void setLocation(Resource location);1328020251;Set the location of the XML file that defines the view beans._<p>The default is "/WEB-INF/views.xml"._@param location the location of the XML file.;public void setLocation(Resource location) {_		this.location = location__	};set,the,location,of,the,xml,file,that,defines,the,view,beans,p,the,default,is,web,inf,views,xml,param,location,the,location,of,the,xml,file;public,void,set,location,resource,location,this,location,location
XmlViewResolver -> public void setLocation(Resource location);1356735495;Set the location of the XML file that defines the view beans._<p>The default is "/WEB-INF/views.xml"._@param location the location of the XML file.;public void setLocation(Resource location) {_		this.location = location__	};set,the,location,of,the,xml,file,that,defines,the,view,beans,p,the,default,is,web,inf,views,xml,param,location,the,location,of,the,xml,file;public,void,set,location,resource,location,this,location,location
XmlViewResolver -> public void setLocation(Resource location);1357119239;Set the location of the XML file that defines the view beans._<p>The default is "/WEB-INF/views.xml"._@param location the location of the XML file.;public void setLocation(Resource location) {_		this.location = location__	};set,the,location,of,the,xml,file,that,defines,the,view,beans,p,the,default,is,web,inf,views,xml,param,location,the,location,of,the,xml,file;public,void,set,location,resource,location,this,location,location
XmlViewResolver -> public void setLocation(Resource location);1368482696;Set the location of the XML file that defines the view beans._<p>The default is "/WEB-INF/views.xml"._@param location the location of the XML file.;public void setLocation(Resource location) {_		this.location = location__	};set,the,location,of,the,xml,file,that,defines,the,view,beans,p,the,default,is,web,inf,views,xml,param,location,the,location,of,the,xml,file;public,void,set,location,resource,location,this,location,location
XmlViewResolver -> public void setLocation(Resource location);1407935098;Set the location of the XML file that defines the view beans._<p>The default is "/WEB-INF/views.xml"._@param location the location of the XML file.;public void setLocation(Resource location) {_		this.location = location__	};set,the,location,of,the,xml,file,that,defines,the,view,beans,p,the,default,is,web,inf,views,xml,param,location,the,location,of,the,xml,file;public,void,set,location,resource,location,this,location,location
XmlViewResolver -> public void setLocation(Resource location);1496837955;Set the location of the XML file that defines the view beans._<p>The default is "/WEB-INF/views.xml"._@param location the location of the XML file.;public void setLocation(Resource location) {_		this.location = location__	};set,the,location,of,the,xml,file,that,defines,the,view,beans,p,the,default,is,web,inf,views,xml,param,location,the,location,of,the,xml,file;public,void,set,location,resource,location,this,location,location
XmlViewResolver -> public void setLocation(Resource location);1498780456;Set the location of the XML file that defines the view beans._<p>The default is "/WEB-INF/views.xml"._@param location the location of the XML file.;public void setLocation(Resource location) {_		this.location = location__	};set,the,location,of,the,xml,file,that,defines,the,view,beans,p,the,default,is,web,inf,views,xml,param,location,the,location,of,the,xml,file;public,void,set,location,resource,location,this,location,location
XmlViewResolver -> public void setLocation(Resource location);1520528267;Set the location of the XML file that defines the view beans._<p>The default is "/WEB-INF/views.xml"._@param location the location of the XML file.;public void setLocation(Resource location) {_		this.location = location__	};set,the,location,of,the,xml,file,that,defines,the,view,beans,p,the,default,is,web,inf,views,xml,param,location,the,location,of,the,xml,file;public,void,set,location,resource,location,this,location,location
XmlViewResolver -> public void setLocation(Resource location);1522448444;Set the location of the XML file that defines the view beans._<p>The default is "/WEB-INF/views.xml"._@param location the location of the XML file.;public void setLocation(Resource location) {_		this.location = location__	};set,the,location,of,the,xml,file,that,defines,the,view,beans,p,the,default,is,web,inf,views,xml,param,location,the,location,of,the,xml,file;public,void,set,location,resource,location,this,location,location
XmlViewResolver -> public void setLocation(Resource location);1530174524;Set the location of the XML file that defines the view beans._<p>The default is "/WEB-INF/views.xml"._@param location the location of the XML file.;public void setLocation(Resource location) {_		this.location = location__	};set,the,location,of,the,xml,file,that,defines,the,view,beans,p,the,default,is,web,inf,views,xml,param,location,the,location,of,the,xml,file;public,void,set,location,resource,location,this,location,location
XmlViewResolver -> public void afterPropertiesSet() throws BeansException;1328020251;Pre-initialize the factory from the XML file._Only effective if caching is enabled.;public void afterPropertiesSet() throws BeansException {_		if (isCache()) {_			initFactory()__		}_	};pre,initialize,the,factory,from,the,xml,file,only,effective,if,caching,is,enabled;public,void,after,properties,set,throws,beans,exception,if,is,cache,init,factory
XmlViewResolver -> public void afterPropertiesSet() throws BeansException;1357119239;Pre-initialize the factory from the XML file._Only effective if caching is enabled.;public void afterPropertiesSet() throws BeansException {_		if (isCache()) {_			initFactory()__		}_	};pre,initialize,the,factory,from,the,xml,file,only,effective,if,caching,is,enabled;public,void,after,properties,set,throws,beans,exception,if,is,cache,init,factory
XmlViewResolver -> protected synchronized BeanFactory initFactory() throws BeansException;1328020251;Initialize the view bean factory from the XML file._Synchronized because of access by parallel threads._@throws BeansException in case of initialization errors;protected synchronized BeanFactory initFactory() throws BeansException {_		if (this.cachedFactory != null) {_			return this.cachedFactory__		}__		Resource actualLocation = this.location__		if (actualLocation == null) {_			actualLocation = getApplicationContext().getResource(DEFAULT_LOCATION)__		}__		_		GenericWebApplicationContext factory = new GenericWebApplicationContext()__		factory.setParent(getApplicationContext())__		factory.setServletContext(getServletContext())___		_		XmlBeanDefinitionReader reader = new XmlBeanDefinitionReader(factory)__		reader.setEnvironment(getApplicationContext().getEnvironment())__		reader.setEntityResolver(new ResourceEntityResolver(getApplicationContext()))__		reader.loadBeanDefinitions(actualLocation)___		factory.refresh()___		if (isCache()) {_			this.cachedFactory = factory__		}_		return factory__	};initialize,the,view,bean,factory,from,the,xml,file,synchronized,because,of,access,by,parallel,threads,throws,beans,exception,in,case,of,initialization,errors;protected,synchronized,bean,factory,init,factory,throws,beans,exception,if,this,cached,factory,null,return,this,cached,factory,resource,actual,location,this,location,if,actual,location,null,actual,location,get,application,context,get,resource,generic,web,application,context,factory,new,generic,web,application,context,factory,set,parent,get,application,context,factory,set,servlet,context,get,servlet,context,xml,bean,definition,reader,reader,new,xml,bean,definition,reader,factory,reader,set,environment,get,application,context,get,environment,reader,set,entity,resolver,new,resource,entity,resolver,get,application,context,reader,load,bean,definitions,actual,location,factory,refresh,if,is,cache,this,cached,factory,factory,return,factory
XmlViewResolver -> protected synchronized BeanFactory initFactory() throws BeansException;1356735495;Initialize the view bean factory from the XML file._Synchronized because of access by parallel threads._@throws BeansException in case of initialization errors;protected synchronized BeanFactory initFactory() throws BeansException {_		if (this.cachedFactory != null) {_			return this.cachedFactory__		}__		Resource actualLocation = this.location__		if (actualLocation == null) {_			actualLocation = getApplicationContext().getResource(DEFAULT_LOCATION)__		}__		_		GenericWebApplicationContext factory = new GenericWebApplicationContext()__		factory.setParent(getApplicationContext())__		factory.setServletContext(getServletContext())___		_		XmlBeanDefinitionReader reader = new XmlBeanDefinitionReader(factory)__		reader.setEnvironment(getApplicationContext().getEnvironment())__		reader.setEntityResolver(new ResourceEntityResolver(getApplicationContext()))__		reader.loadBeanDefinitions(actualLocation)___		factory.refresh()___		if (isCache()) {_			this.cachedFactory = factory__		}_		return factory__	};initialize,the,view,bean,factory,from,the,xml,file,synchronized,because,of,access,by,parallel,threads,throws,beans,exception,in,case,of,initialization,errors;protected,synchronized,bean,factory,init,factory,throws,beans,exception,if,this,cached,factory,null,return,this,cached,factory,resource,actual,location,this,location,if,actual,location,null,actual,location,get,application,context,get,resource,generic,web,application,context,factory,new,generic,web,application,context,factory,set,parent,get,application,context,factory,set,servlet,context,get,servlet,context,xml,bean,definition,reader,reader,new,xml,bean,definition,reader,factory,reader,set,environment,get,application,context,get,environment,reader,set,entity,resolver,new,resource,entity,resolver,get,application,context,reader,load,bean,definitions,actual,location,factory,refresh,if,is,cache,this,cached,factory,factory,return,factory
XmlViewResolver -> protected synchronized BeanFactory initFactory() throws BeansException;1357119239;Initialize the view bean factory from the XML file._Synchronized because of access by parallel threads._@throws BeansException in case of initialization errors;protected synchronized BeanFactory initFactory() throws BeansException {_		if (this.cachedFactory != null) {_			return this.cachedFactory__		}__		Resource actualLocation = this.location__		if (actualLocation == null) {_			actualLocation = getApplicationContext().getResource(DEFAULT_LOCATION)__		}__		_		GenericWebApplicationContext factory = new GenericWebApplicationContext()__		factory.setParent(getApplicationContext())__		factory.setServletContext(getServletContext())___		_		XmlBeanDefinitionReader reader = new XmlBeanDefinitionReader(factory)__		reader.setEnvironment(getApplicationContext().getEnvironment())__		reader.setEntityResolver(new ResourceEntityResolver(getApplicationContext()))__		reader.loadBeanDefinitions(actualLocation)___		factory.refresh()___		if (isCache()) {_			this.cachedFactory = factory__		}_		return factory__	};initialize,the,view,bean,factory,from,the,xml,file,synchronized,because,of,access,by,parallel,threads,throws,beans,exception,in,case,of,initialization,errors;protected,synchronized,bean,factory,init,factory,throws,beans,exception,if,this,cached,factory,null,return,this,cached,factory,resource,actual,location,this,location,if,actual,location,null,actual,location,get,application,context,get,resource,generic,web,application,context,factory,new,generic,web,application,context,factory,set,parent,get,application,context,factory,set,servlet,context,get,servlet,context,xml,bean,definition,reader,reader,new,xml,bean,definition,reader,factory,reader,set,environment,get,application,context,get,environment,reader,set,entity,resolver,new,resource,entity,resolver,get,application,context,reader,load,bean,definitions,actual,location,factory,refresh,if,is,cache,this,cached,factory,factory,return,factory
XmlViewResolver -> protected synchronized BeanFactory initFactory() throws BeansException;1368482696;Initialize the view bean factory from the XML file._Synchronized because of access by parallel threads._@throws BeansException in case of initialization errors;protected synchronized BeanFactory initFactory() throws BeansException {_		if (this.cachedFactory != null) {_			return this.cachedFactory__		}__		Resource actualLocation = this.location__		if (actualLocation == null) {_			actualLocation = getApplicationContext().getResource(DEFAULT_LOCATION)__		}__		_		GenericWebApplicationContext factory = new GenericWebApplicationContext()__		factory.setParent(getApplicationContext())__		factory.setServletContext(getServletContext())___		_		XmlBeanDefinitionReader reader = new XmlBeanDefinitionReader(factory)__		reader.setEnvironment(getApplicationContext().getEnvironment())__		reader.setEntityResolver(new ResourceEntityResolver(getApplicationContext()))__		reader.loadBeanDefinitions(actualLocation)___		factory.refresh()___		if (isCache()) {_			this.cachedFactory = factory__		}_		return factory__	};initialize,the,view,bean,factory,from,the,xml,file,synchronized,because,of,access,by,parallel,threads,throws,beans,exception,in,case,of,initialization,errors;protected,synchronized,bean,factory,init,factory,throws,beans,exception,if,this,cached,factory,null,return,this,cached,factory,resource,actual,location,this,location,if,actual,location,null,actual,location,get,application,context,get,resource,generic,web,application,context,factory,new,generic,web,application,context,factory,set,parent,get,application,context,factory,set,servlet,context,get,servlet,context,xml,bean,definition,reader,reader,new,xml,bean,definition,reader,factory,reader,set,environment,get,application,context,get,environment,reader,set,entity,resolver,new,resource,entity,resolver,get,application,context,reader,load,bean,definitions,actual,location,factory,refresh,if,is,cache,this,cached,factory,factory,return,factory
XmlViewResolver -> protected synchronized BeanFactory initFactory() throws BeansException;1407935098;Initialize the view bean factory from the XML file._Synchronized because of access by parallel threads._@throws BeansException in case of initialization errors;protected synchronized BeanFactory initFactory() throws BeansException {_		if (this.cachedFactory != null) {_			return this.cachedFactory__		}__		Resource actualLocation = this.location__		if (actualLocation == null) {_			actualLocation = getApplicationContext().getResource(DEFAULT_LOCATION)__		}__		_		GenericWebApplicationContext factory = new GenericWebApplicationContext()__		factory.setParent(getApplicationContext())__		factory.setServletContext(getServletContext())___		_		XmlBeanDefinitionReader reader = new XmlBeanDefinitionReader(factory)__		reader.setEnvironment(getApplicationContext().getEnvironment())__		reader.setEntityResolver(new ResourceEntityResolver(getApplicationContext()))__		reader.loadBeanDefinitions(actualLocation)___		factory.refresh()___		if (isCache()) {_			this.cachedFactory = factory__		}_		return factory__	};initialize,the,view,bean,factory,from,the,xml,file,synchronized,because,of,access,by,parallel,threads,throws,beans,exception,in,case,of,initialization,errors;protected,synchronized,bean,factory,init,factory,throws,beans,exception,if,this,cached,factory,null,return,this,cached,factory,resource,actual,location,this,location,if,actual,location,null,actual,location,get,application,context,get,resource,generic,web,application,context,factory,new,generic,web,application,context,factory,set,parent,get,application,context,factory,set,servlet,context,get,servlet,context,xml,bean,definition,reader,reader,new,xml,bean,definition,reader,factory,reader,set,environment,get,application,context,get,environment,reader,set,entity,resolver,new,resource,entity,resolver,get,application,context,reader,load,bean,definitions,actual,location,factory,refresh,if,is,cache,this,cached,factory,factory,return,factory
XmlViewResolver -> protected synchronized BeanFactory initFactory() throws BeansException;1496837955;Initialize the view bean factory from the XML file._Synchronized because of access by parallel threads._@throws BeansException in case of initialization errors;protected synchronized BeanFactory initFactory() throws BeansException {_		if (this.cachedFactory != null) {_			return this.cachedFactory__		}__		ApplicationContext applicationContext = obtainApplicationContext()___		Resource actualLocation = this.location__		if (actualLocation == null) {_			actualLocation = applicationContext.getResource(DEFAULT_LOCATION)__		}__		_		GenericWebApplicationContext factory = new GenericWebApplicationContext()__		factory.setParent(applicationContext)__		factory.setServletContext(getServletContext())___		_		XmlBeanDefinitionReader reader = new XmlBeanDefinitionReader(factory)__		reader.setEnvironment(applicationContext.getEnvironment())__		reader.setEntityResolver(new ResourceEntityResolver(applicationContext))__		reader.loadBeanDefinitions(actualLocation)___		factory.refresh()___		if (isCache()) {_			this.cachedFactory = factory__		}_		return factory__	};initialize,the,view,bean,factory,from,the,xml,file,synchronized,because,of,access,by,parallel,threads,throws,beans,exception,in,case,of,initialization,errors;protected,synchronized,bean,factory,init,factory,throws,beans,exception,if,this,cached,factory,null,return,this,cached,factory,application,context,application,context,obtain,application,context,resource,actual,location,this,location,if,actual,location,null,actual,location,application,context,get,resource,generic,web,application,context,factory,new,generic,web,application,context,factory,set,parent,application,context,factory,set,servlet,context,get,servlet,context,xml,bean,definition,reader,reader,new,xml,bean,definition,reader,factory,reader,set,environment,application,context,get,environment,reader,set,entity,resolver,new,resource,entity,resolver,application,context,reader,load,bean,definitions,actual,location,factory,refresh,if,is,cache,this,cached,factory,factory,return,factory
XmlViewResolver -> protected synchronized BeanFactory initFactory() throws BeansException;1498780456;Initialize the view bean factory from the XML file._Synchronized because of access by parallel threads._@throws BeansException in case of initialization errors;protected synchronized BeanFactory initFactory() throws BeansException {_		if (this.cachedFactory != null) {_			return this.cachedFactory__		}__		ApplicationContext applicationContext = obtainApplicationContext()___		Resource actualLocation = this.location__		if (actualLocation == null) {_			actualLocation = applicationContext.getResource(DEFAULT_LOCATION)__		}__		_		GenericWebApplicationContext factory = new GenericWebApplicationContext()__		factory.setParent(applicationContext)__		factory.setServletContext(getServletContext())___		_		XmlBeanDefinitionReader reader = new XmlBeanDefinitionReader(factory)__		reader.setEnvironment(applicationContext.getEnvironment())__		reader.setEntityResolver(new ResourceEntityResolver(applicationContext))__		reader.loadBeanDefinitions(actualLocation)___		factory.refresh()___		if (isCache()) {_			this.cachedFactory = factory__		}_		return factory__	};initialize,the,view,bean,factory,from,the,xml,file,synchronized,because,of,access,by,parallel,threads,throws,beans,exception,in,case,of,initialization,errors;protected,synchronized,bean,factory,init,factory,throws,beans,exception,if,this,cached,factory,null,return,this,cached,factory,application,context,application,context,obtain,application,context,resource,actual,location,this,location,if,actual,location,null,actual,location,application,context,get,resource,generic,web,application,context,factory,new,generic,web,application,context,factory,set,parent,application,context,factory,set,servlet,context,get,servlet,context,xml,bean,definition,reader,reader,new,xml,bean,definition,reader,factory,reader,set,environment,application,context,get,environment,reader,set,entity,resolver,new,resource,entity,resolver,application,context,reader,load,bean,definitions,actual,location,factory,refresh,if,is,cache,this,cached,factory,factory,return,factory
XmlViewResolver -> protected synchronized BeanFactory initFactory() throws BeansException;1520528267;Initialize the view bean factory from the XML file._Synchronized because of access by parallel threads._@throws BeansException in case of initialization errors;protected synchronized BeanFactory initFactory() throws BeansException {_		if (this.cachedFactory != null) {_			return this.cachedFactory__		}__		ApplicationContext applicationContext = obtainApplicationContext()___		Resource actualLocation = this.location__		if (actualLocation == null) {_			actualLocation = applicationContext.getResource(DEFAULT_LOCATION)__		}__		_		GenericWebApplicationContext factory = new GenericWebApplicationContext()__		factory.setParent(applicationContext)__		factory.setServletContext(getServletContext())___		_		XmlBeanDefinitionReader reader = new XmlBeanDefinitionReader(factory)__		reader.setEnvironment(applicationContext.getEnvironment())__		reader.setEntityResolver(new ResourceEntityResolver(applicationContext))__		reader.loadBeanDefinitions(actualLocation)___		factory.refresh()___		if (isCache()) {_			this.cachedFactory = factory__		}_		return factory__	};initialize,the,view,bean,factory,from,the,xml,file,synchronized,because,of,access,by,parallel,threads,throws,beans,exception,in,case,of,initialization,errors;protected,synchronized,bean,factory,init,factory,throws,beans,exception,if,this,cached,factory,null,return,this,cached,factory,application,context,application,context,obtain,application,context,resource,actual,location,this,location,if,actual,location,null,actual,location,application,context,get,resource,generic,web,application,context,factory,new,generic,web,application,context,factory,set,parent,application,context,factory,set,servlet,context,get,servlet,context,xml,bean,definition,reader,reader,new,xml,bean,definition,reader,factory,reader,set,environment,application,context,get,environment,reader,set,entity,resolver,new,resource,entity,resolver,application,context,reader,load,bean,definitions,actual,location,factory,refresh,if,is,cache,this,cached,factory,factory,return,factory
XmlViewResolver -> protected synchronized BeanFactory initFactory() throws BeansException;1522448444;Initialize the view bean factory from the XML file._Synchronized because of access by parallel threads._@throws BeansException in case of initialization errors;protected synchronized BeanFactory initFactory() throws BeansException {_		if (this.cachedFactory != null) {_			return this.cachedFactory__		}__		ApplicationContext applicationContext = obtainApplicationContext()___		Resource actualLocation = this.location__		if (actualLocation == null) {_			actualLocation = applicationContext.getResource(DEFAULT_LOCATION)__		}__		_		GenericWebApplicationContext factory = new GenericWebApplicationContext()__		factory.setParent(applicationContext)__		factory.setServletContext(getServletContext())___		_		XmlBeanDefinitionReader reader = new XmlBeanDefinitionReader(factory)__		reader.setEnvironment(applicationContext.getEnvironment())__		reader.setEntityResolver(new ResourceEntityResolver(applicationContext))__		reader.loadBeanDefinitions(actualLocation)___		factory.refresh()___		if (isCache()) {_			this.cachedFactory = factory__		}_		return factory__	};initialize,the,view,bean,factory,from,the,xml,file,synchronized,because,of,access,by,parallel,threads,throws,beans,exception,in,case,of,initialization,errors;protected,synchronized,bean,factory,init,factory,throws,beans,exception,if,this,cached,factory,null,return,this,cached,factory,application,context,application,context,obtain,application,context,resource,actual,location,this,location,if,actual,location,null,actual,location,application,context,get,resource,generic,web,application,context,factory,new,generic,web,application,context,factory,set,parent,application,context,factory,set,servlet,context,get,servlet,context,xml,bean,definition,reader,reader,new,xml,bean,definition,reader,factory,reader,set,environment,application,context,get,environment,reader,set,entity,resolver,new,resource,entity,resolver,application,context,reader,load,bean,definitions,actual,location,factory,refresh,if,is,cache,this,cached,factory,factory,return,factory
XmlViewResolver -> protected synchronized BeanFactory initFactory() throws BeansException;1530174524;Initialize the view bean factory from the XML file._Synchronized because of access by parallel threads._@throws BeansException in case of initialization errors;protected synchronized BeanFactory initFactory() throws BeansException {_		if (this.cachedFactory != null) {_			return this.cachedFactory__		}__		ApplicationContext applicationContext = obtainApplicationContext()___		Resource actualLocation = this.location__		if (actualLocation == null) {_			actualLocation = applicationContext.getResource(DEFAULT_LOCATION)__		}__		_		GenericWebApplicationContext factory = new GenericWebApplicationContext()__		factory.setParent(applicationContext)__		factory.setServletContext(getServletContext())___		_		XmlBeanDefinitionReader reader = new XmlBeanDefinitionReader(factory)__		reader.setEnvironment(applicationContext.getEnvironment())__		reader.setEntityResolver(new ResourceEntityResolver(applicationContext))__		reader.loadBeanDefinitions(actualLocation)___		factory.refresh()___		if (isCache()) {_			this.cachedFactory = factory__		}_		return factory__	};initialize,the,view,bean,factory,from,the,xml,file,synchronized,because,of,access,by,parallel,threads,throws,beans,exception,in,case,of,initialization,errors;protected,synchronized,bean,factory,init,factory,throws,beans,exception,if,this,cached,factory,null,return,this,cached,factory,application,context,application,context,obtain,application,context,resource,actual,location,this,location,if,actual,location,null,actual,location,application,context,get,resource,generic,web,application,context,factory,new,generic,web,application,context,factory,set,parent,application,context,factory,set,servlet,context,get,servlet,context,xml,bean,definition,reader,reader,new,xml,bean,definition,reader,factory,reader,set,environment,application,context,get,environment,reader,set,entity,resolver,new,resource,entity,resolver,application,context,reader,load,bean,definitions,actual,location,factory,refresh,if,is,cache,this,cached,factory,factory,return,factory
XmlViewResolver -> @Override 	protected Object getCacheKey(String viewName, Locale locale);1328020251;This implementation returns just the view name,_as XmlViewResolver doesn't support localized resolution.;@Override_	protected Object getCacheKey(String viewName, Locale locale) {_		return viewName__	};this,implementation,returns,just,the,view,name,as,xml,view,resolver,doesn,t,support,localized,resolution;override,protected,object,get,cache,key,string,view,name,locale,locale,return,view,name
XmlViewResolver -> @Override 	protected Object getCacheKey(String viewName, Locale locale);1356735495;This implementation returns just the view name,_as XmlViewResolver doesn't support localized resolution.;@Override_	protected Object getCacheKey(String viewName, Locale locale) {_		return viewName__	};this,implementation,returns,just,the,view,name,as,xml,view,resolver,doesn,t,support,localized,resolution;override,protected,object,get,cache,key,string,view,name,locale,locale,return,view,name
XmlViewResolver -> @Override 	protected Object getCacheKey(String viewName, Locale locale);1357119239;This implementation returns just the view name,_as XmlViewResolver doesn't support localized resolution.;@Override_	protected Object getCacheKey(String viewName, Locale locale) {_		return viewName__	};this,implementation,returns,just,the,view,name,as,xml,view,resolver,doesn,t,support,localized,resolution;override,protected,object,get,cache,key,string,view,name,locale,locale,return,view,name
XmlViewResolver -> @Override 	protected Object getCacheKey(String viewName, Locale locale);1368482696;This implementation returns just the view name,_as XmlViewResolver doesn't support localized resolution.;@Override_	protected Object getCacheKey(String viewName, Locale locale) {_		return viewName__	};this,implementation,returns,just,the,view,name,as,xml,view,resolver,doesn,t,support,localized,resolution;override,protected,object,get,cache,key,string,view,name,locale,locale,return,view,name
XmlViewResolver -> @Override 	protected Object getCacheKey(String viewName, Locale locale);1407935098;This implementation returns just the view name,_as XmlViewResolver doesn't support localized resolution.;@Override_	protected Object getCacheKey(String viewName, Locale locale) {_		return viewName__	};this,implementation,returns,just,the,view,name,as,xml,view,resolver,doesn,t,support,localized,resolution;override,protected,object,get,cache,key,string,view,name,locale,locale,return,view,name
XmlViewResolver -> @Override 	protected Object getCacheKey(String viewName, Locale locale);1496837955;This implementation returns just the view name,_as XmlViewResolver doesn't support localized resolution.;@Override_	protected Object getCacheKey(String viewName, Locale locale) {_		return viewName__	};this,implementation,returns,just,the,view,name,as,xml,view,resolver,doesn,t,support,localized,resolution;override,protected,object,get,cache,key,string,view,name,locale,locale,return,view,name
XmlViewResolver -> @Override 	protected Object getCacheKey(String viewName, Locale locale);1498780456;This implementation returns just the view name,_as XmlViewResolver doesn't support localized resolution.;@Override_	protected Object getCacheKey(String viewName, Locale locale) {_		return viewName__	};this,implementation,returns,just,the,view,name,as,xml,view,resolver,doesn,t,support,localized,resolution;override,protected,object,get,cache,key,string,view,name,locale,locale,return,view,name
XmlViewResolver -> @Override 	protected Object getCacheKey(String viewName, Locale locale);1520528267;This implementation returns just the view name,_as XmlViewResolver doesn't support localized resolution.;@Override_	protected Object getCacheKey(String viewName, Locale locale) {_		return viewName__	};this,implementation,returns,just,the,view,name,as,xml,view,resolver,doesn,t,support,localized,resolution;override,protected,object,get,cache,key,string,view,name,locale,locale,return,view,name
XmlViewResolver -> @Override 	protected Object getCacheKey(String viewName, Locale locale);1522448444;This implementation returns just the view name,_as XmlViewResolver doesn't support localized resolution.;@Override_	protected Object getCacheKey(String viewName, Locale locale) {_		return viewName__	};this,implementation,returns,just,the,view,name,as,xml,view,resolver,doesn,t,support,localized,resolution;override,protected,object,get,cache,key,string,view,name,locale,locale,return,view,name
XmlViewResolver -> @Override 	protected Object getCacheKey(String viewName, Locale locale);1530174524;This implementation returns just the view name,_as XmlViewResolver doesn't support localized resolution.;@Override_	protected Object getCacheKey(String viewName, Locale locale) {_		return viewName__	};this,implementation,returns,just,the,view,name,as,xml,view,resolver,doesn,t,support,localized,resolution;override,protected,object,get,cache,key,string,view,name,locale,locale,return,view,name
XmlViewResolver -> public void setOrder(int order);1522448444;Specify the order value for this ViewResolver bean._<p>The default value is {@code Ordered.LOWEST_PRECEDENCE}, meaning non-ordered._@see org.springframework.core.Ordered#getOrder();public void setOrder(int order) {_		this.order = order__	};specify,the,order,value,for,this,view,resolver,bean,p,the,default,value,is,code,ordered,meaning,non,ordered,see,org,springframework,core,ordered,get,order;public,void,set,order,int,order,this,order,order
XmlViewResolver -> public void setOrder(int order);1530174524;Specify the order value for this ViewResolver bean._<p>The default value is {@code Ordered.LOWEST_PRECEDENCE}, meaning non-ordered._@see org.springframework.core.Ordered#getOrder();public void setOrder(int order) {_		this.order = order__	};specify,the,order,value,for,this,view,resolver,bean,p,the,default,value,is,code,ordered,meaning,non,ordered,see,org,springframework,core,ordered,get,order;public,void,set,order,int,order,this,order,order
