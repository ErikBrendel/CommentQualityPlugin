commented;modifiers;parameterAmount;loc;comment;code
true;public;0;3;/**  * Enable forwarding to the "default" Servlet.  * <p>When this method is used the {@link DefaultServletHttpRequestHandler}  * will try to autodetect the "default" Servlet name. Alternatively, you can  * specify the name of the default Servlet via {@link #enable(String)}.  * @see DefaultServletHttpRequestHandler  */ ;/**  * Enable forwarding to the "default" Servlet.  * <p>When this method is used the {@link DefaultServletHttpRequestHandler}  * will try to autodetect the "default" Servlet name. Alternatively, you can  * specify the name of the default Servlet via {@link #enable(String)}.  * @see DefaultServletHttpRequestHandler  */ public void enable() {     enable(null). }
true;public;1;7;/**  * Enable forwarding to the "default" Servlet identified by the given name.  * <p>This is useful when the default Servlet cannot be autodetected,  * for example when it has been manually configured.  * @see DefaultServletHttpRequestHandler  */ ;/**  * Enable forwarding to the "default" Servlet identified by the given name.  * <p>This is useful when the default Servlet cannot be autodetected,  * for example when it has been manually configured.  * @see DefaultServletHttpRequestHandler  */ public void enable(@Nullable String defaultServletName) {     this.handler = new DefaultServletHttpRequestHandler().     if (defaultServletName != null) {         this.handler.setDefaultServletName(defaultServletName).     }     this.handler.setServletContext(this.servletContext). }
true;protected;0;11;/**  * Return a handler mapping instance ordered at {@link Integer#MAX_VALUE} containing the  * {@link DefaultServletHttpRequestHandler} instance mapped to {@code "/**"}.  * or {@code null} if default servlet handling was not been enabled.  * @since 4.3.12  */ ;/**  * Return a handler mapping instance ordered at {@link Integer#MAX_VALUE} containing the  * {@link DefaultServletHttpRequestHandler} instance mapped to {@code "/**"}.  * or {@code null} if default servlet handling was not been enabled.  * @since 4.3.12  */ @Nullable protected SimpleUrlHandlerMapping buildHandlerMapping() {     if (this.handler == null) {         return null.     }     SimpleUrlHandlerMapping handlerMapping = new SimpleUrlHandlerMapping().     handlerMapping.setUrlMap(Collections.singletonMap("/**", this.handler)).     handlerMapping.setOrder(Integer.MAX_VALUE).     return handlerMapping. }
