commented;modifiers;parameterAmount;loc;comment;code
true;public;1;3;/**  * Set the name of the parameter (required).  */ ;/**  * Set the name of the parameter (required).  */ public void setName(String name) {     this.name = name. }
true;public;1;4;/**  * Set the value of the parameter (optional).  */ ;/**  * Set the value of the parameter (optional).  */ public void setValue(String value) {     this.value = value.     this.valueSet = true. }
false;public;0;22;;@Override public int doEndTag() throws JspException {     Param param = new Param().     param.setName(this.name).     if (this.valueSet) {         param.setValue(this.value).     } else if (getBodyContent() != null) {         // Get the value from the tag body         param.setValue(getBodyContent().getString().trim()).     }     // Find a param aware ancestor     ParamAware paramAwareTag = (ParamAware) findAncestorWithClass(this, ParamAware.class).     if (paramAwareTag == null) {         throw new JspException("The param tag must be a descendant of a tag that supports parameters").     }     paramAwareTag.addParam(param).     return EVAL_PAGE. }
false;public;0;7;;@Override public void release() {     super.release().     this.name = "".     this.value = null.     this.valueSet = false. }
