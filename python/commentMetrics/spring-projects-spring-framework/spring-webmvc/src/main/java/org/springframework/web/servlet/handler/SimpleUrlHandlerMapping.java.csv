# id;timestamp;commentText;codeText;commentWords;codeWords
SimpleUrlHandlerMapping -> protected void registerHandlers(Map<String, Object> urlMap) throws BeansException;1328020251;Register all handlers specified in the URL map for the corresponding paths._@param urlMap Map with URL paths as keys and handler beans or bean names as values_@throws BeansException if a handler couldn't be registered_@throws IllegalStateException if there is a conflicting handler registered;protected void registerHandlers(Map<String, Object> urlMap) throws BeansException {_		if (urlMap.isEmpty()) {_			logger.warn("Neither 'urlMap' nor 'mappings' set on SimpleUrlHandlerMapping")__		}_		else {_			for (Map.Entry<String, Object> entry : urlMap.entrySet()) {_				String url = entry.getKey()__				Object handler = entry.getValue()__				_				if (!url.startsWith("/")) {_					url = "/" + url__				}_				_				if (handler instanceof String) {_					handler = ((String) handler).trim()__				}_				registerHandler(url, handler)__			}_		}_	};register,all,handlers,specified,in,the,url,map,for,the,corresponding,paths,param,url,map,map,with,url,paths,as,keys,and,handler,beans,or,bean,names,as,values,throws,beans,exception,if,a,handler,couldn,t,be,registered,throws,illegal,state,exception,if,there,is,a,conflicting,handler,registered;protected,void,register,handlers,map,string,object,url,map,throws,beans,exception,if,url,map,is,empty,logger,warn,neither,url,map,nor,mappings,set,on,simple,url,handler,mapping,else,for,map,entry,string,object,entry,url,map,entry,set,string,url,entry,get,key,object,handler,entry,get,value,if,url,starts,with,url,url,if,handler,instanceof,string,handler,string,handler,trim,register,handler,url,handler
SimpleUrlHandlerMapping -> protected void registerHandlers(Map<String, Object> urlMap) throws BeansException;1356735495;Register all handlers specified in the URL map for the corresponding paths._@param urlMap Map with URL paths as keys and handler beans or bean names as values_@throws BeansException if a handler couldn't be registered_@throws IllegalStateException if there is a conflicting handler registered;protected void registerHandlers(Map<String, Object> urlMap) throws BeansException {_		if (urlMap.isEmpty()) {_			logger.warn("Neither 'urlMap' nor 'mappings' set on SimpleUrlHandlerMapping")__		}_		else {_			for (Map.Entry<String, Object> entry : urlMap.entrySet()) {_				String url = entry.getKey()__				Object handler = entry.getValue()__				_				if (!url.startsWith("/")) {_					url = "/" + url__				}_				_				if (handler instanceof String) {_					handler = ((String) handler).trim()__				}_				registerHandler(url, handler)__			}_		}_	};register,all,handlers,specified,in,the,url,map,for,the,corresponding,paths,param,url,map,map,with,url,paths,as,keys,and,handler,beans,or,bean,names,as,values,throws,beans,exception,if,a,handler,couldn,t,be,registered,throws,illegal,state,exception,if,there,is,a,conflicting,handler,registered;protected,void,register,handlers,map,string,object,url,map,throws,beans,exception,if,url,map,is,empty,logger,warn,neither,url,map,nor,mappings,set,on,simple,url,handler,mapping,else,for,map,entry,string,object,entry,url,map,entry,set,string,url,entry,get,key,object,handler,entry,get,value,if,url,starts,with,url,url,if,handler,instanceof,string,handler,string,handler,trim,register,handler,url,handler
SimpleUrlHandlerMapping -> protected void registerHandlers(Map<String, Object> urlMap) throws BeansException;1450275875;Register all handlers specified in the URL map for the corresponding paths._@param urlMap Map with URL paths as keys and handler beans or bean names as values_@throws BeansException if a handler couldn't be registered_@throws IllegalStateException if there is a conflicting handler registered;protected void registerHandlers(Map<String, Object> urlMap) throws BeansException {_		if (urlMap.isEmpty()) {_			logger.warn("Neither 'urlMap' nor 'mappings' set on SimpleUrlHandlerMapping")__		}_		else {_			for (Map.Entry<String, Object> entry : urlMap.entrySet()) {_				String url = entry.getKey()__				Object handler = entry.getValue()__				_				if (!url.startsWith("/")) {_					url = "/" + url__				}_				_				if (handler instanceof String) {_					handler = ((String) handler).trim()__				}_				registerHandler(url, handler)__			}_		}_	};register,all,handlers,specified,in,the,url,map,for,the,corresponding,paths,param,url,map,map,with,url,paths,as,keys,and,handler,beans,or,bean,names,as,values,throws,beans,exception,if,a,handler,couldn,t,be,registered,throws,illegal,state,exception,if,there,is,a,conflicting,handler,registered;protected,void,register,handlers,map,string,object,url,map,throws,beans,exception,if,url,map,is,empty,logger,warn,neither,url,map,nor,mappings,set,on,simple,url,handler,mapping,else,for,map,entry,string,object,entry,url,map,entry,set,string,url,entry,get,key,object,handler,entry,get,value,if,url,starts,with,url,url,if,handler,instanceof,string,handler,string,handler,trim,register,handler,url,handler
SimpleUrlHandlerMapping -> protected void registerHandlers(Map<String, Object> urlMap) throws BeansException;1450277942;Register all handlers specified in the URL map for the corresponding paths._@param urlMap Map with URL paths as keys and handler beans or bean names as values_@throws BeansException if a handler couldn't be registered_@throws IllegalStateException if there is a conflicting handler registered;protected void registerHandlers(Map<String, Object> urlMap) throws BeansException {_		if (urlMap.isEmpty()) {_			logger.warn("Neither 'urlMap' nor 'mappings' set on SimpleUrlHandlerMapping")__		}_		else {_			for (Map.Entry<String, Object> entry : urlMap.entrySet()) {_				String url = entry.getKey()__				Object handler = entry.getValue()__				_				if (!url.startsWith("/")) {_					url = "/" + url__				}_				_				if (handler instanceof String) {_					handler = ((String) handler).trim()__				}_				registerHandler(url, handler)__			}_		}_	};register,all,handlers,specified,in,the,url,map,for,the,corresponding,paths,param,url,map,map,with,url,paths,as,keys,and,handler,beans,or,bean,names,as,values,throws,beans,exception,if,a,handler,couldn,t,be,registered,throws,illegal,state,exception,if,there,is,a,conflicting,handler,registered;protected,void,register,handlers,map,string,object,url,map,throws,beans,exception,if,url,map,is,empty,logger,warn,neither,url,map,nor,mappings,set,on,simple,url,handler,mapping,else,for,map,entry,string,object,entry,url,map,entry,set,string,url,entry,get,key,object,handler,entry,get,value,if,url,starts,with,url,url,if,handler,instanceof,string,handler,string,handler,trim,register,handler,url,handler
SimpleUrlHandlerMapping -> protected void registerHandlers(Map<String, Object> urlMap) throws BeansException;1467730834;Register all handlers specified in the URL map for the corresponding paths._@param urlMap Map with URL paths as keys and handler beans or bean names as values_@throws BeansException if a handler couldn't be registered_@throws IllegalStateException if there is a conflicting handler registered;protected void registerHandlers(Map<String, Object> urlMap) throws BeansException {_		if (urlMap.isEmpty()) {_			logger.warn("Neither 'urlMap' nor 'mappings' set on SimpleUrlHandlerMapping")__		}_		else {_			for (Map.Entry<String, Object> entry : urlMap.entrySet()) {_				String url = entry.getKey()__				Object handler = entry.getValue()__				_				if (!url.startsWith("/")) {_					url = "/" + url__				}_				_				if (handler instanceof String) {_					handler = ((String) handler).trim()__				}_				registerHandler(url, handler)__			}_		}_	};register,all,handlers,specified,in,the,url,map,for,the,corresponding,paths,param,url,map,map,with,url,paths,as,keys,and,handler,beans,or,bean,names,as,values,throws,beans,exception,if,a,handler,couldn,t,be,registered,throws,illegal,state,exception,if,there,is,a,conflicting,handler,registered;protected,void,register,handlers,map,string,object,url,map,throws,beans,exception,if,url,map,is,empty,logger,warn,neither,url,map,nor,mappings,set,on,simple,url,handler,mapping,else,for,map,entry,string,object,entry,url,map,entry,set,string,url,entry,get,key,object,handler,entry,get,value,if,url,starts,with,url,url,if,handler,instanceof,string,handler,string,handler,trim,register,handler,url,handler
SimpleUrlHandlerMapping -> protected void registerHandlers(Map<String, Object> urlMap) throws BeansException;1493370460;Register all handlers specified in the URL map for the corresponding paths._@param urlMap Map with URL paths as keys and handler beans or bean names as values_@throws BeansException if a handler couldn't be registered_@throws IllegalStateException if there is a conflicting handler registered;protected void registerHandlers(Map<String, Object> urlMap) throws BeansException {_		if (urlMap.isEmpty()) {_			logger.warn("Neither 'urlMap' nor 'mappings' set on SimpleUrlHandlerMapping")__		}_		else {_			urlMap.forEach((url, handler) -> {_				_				if (!url.startsWith("/")) {_					url = "/" + url__				}_				_				if (handler instanceof String) {_					handler = ((String) handler).trim()__				}_				registerHandler(url, handler)__			})__		}_	};register,all,handlers,specified,in,the,url,map,for,the,corresponding,paths,param,url,map,map,with,url,paths,as,keys,and,handler,beans,or,bean,names,as,values,throws,beans,exception,if,a,handler,couldn,t,be,registered,throws,illegal,state,exception,if,there,is,a,conflicting,handler,registered;protected,void,register,handlers,map,string,object,url,map,throws,beans,exception,if,url,map,is,empty,logger,warn,neither,url,map,nor,mappings,set,on,simple,url,handler,mapping,else,url,map,for,each,url,handler,if,url,starts,with,url,url,if,handler,instanceof,string,handler,string,handler,trim,register,handler,url,handler
SimpleUrlHandlerMapping -> protected void registerHandlers(Map<String, Object> urlMap) throws BeansException;1529361191;Register all handlers specified in the URL map for the corresponding paths._@param urlMap Map with URL paths as keys and handler beans or bean names as values_@throws BeansException if a handler couldn't be registered_@throws IllegalStateException if there is a conflicting handler registered;protected void registerHandlers(Map<String, Object> urlMap) throws BeansException {_		if (urlMap.isEmpty()) {_			logger.warn("Neither 'urlMap' nor 'mappings' set, " + formatMappingName())__		}_		else {_			urlMap.forEach((url, handler) -> {_				_				if (!url.startsWith("/")) {_					url = "/" + url__				}_				_				if (handler instanceof String) {_					handler = ((String) handler).trim()__				}_				registerHandler(url, handler)__			})__			if (logger.isDebugEnabled()) {_				List<String> patterns = new ArrayList<>()__				if (getRootHandler() != null) {_					patterns.add("/")__				}_				if (getDefaultHandler() != null) {_					patterns.add("/**")__				}_				patterns.addAll(getHandlerMap().keySet())__				logger.debug("Patterns " + patterns + " in " + formatMappingName())__			}_		}_	};register,all,handlers,specified,in,the,url,map,for,the,corresponding,paths,param,url,map,map,with,url,paths,as,keys,and,handler,beans,or,bean,names,as,values,throws,beans,exception,if,a,handler,couldn,t,be,registered,throws,illegal,state,exception,if,there,is,a,conflicting,handler,registered;protected,void,register,handlers,map,string,object,url,map,throws,beans,exception,if,url,map,is,empty,logger,warn,neither,url,map,nor,mappings,set,format,mapping,name,else,url,map,for,each,url,handler,if,url,starts,with,url,url,if,handler,instanceof,string,handler,string,handler,trim,register,handler,url,handler,if,logger,is,debug,enabled,list,string,patterns,new,array,list,if,get,root,handler,null,patterns,add,if,get,default,handler,null,patterns,add,patterns,add,all,get,handler,map,key,set,logger,debug,patterns,patterns,in,format,mapping,name
SimpleUrlHandlerMapping -> protected void registerHandlers(Map<String, Object> urlMap) throws BeansException;1529721864;Register all handlers specified in the URL map for the corresponding paths._@param urlMap Map with URL paths as keys and handler beans or bean names as values_@throws BeansException if a handler couldn't be registered_@throws IllegalStateException if there is a conflicting handler registered;protected void registerHandlers(Map<String, Object> urlMap) throws BeansException {_		if (urlMap.isEmpty()) {_			logger.trace("No patterns in " + formatMappingName())__		}_		else {_			urlMap.forEach((url, handler) -> {_				_				if (!url.startsWith("/")) {_					url = "/" + url__				}_				_				if (handler instanceof String) {_					handler = ((String) handler).trim()__				}_				registerHandler(url, handler)__			})__			if (logger.isDebugEnabled()) {_				List<String> patterns = new ArrayList<>()__				if (getRootHandler() != null) {_					patterns.add("/")__				}_				if (getDefaultHandler() != null) {_					patterns.add("/**")__				}_				patterns.addAll(getHandlerMap().keySet())__				logger.debug("Patterns " + patterns + " in " + formatMappingName())__			}_		}_	};register,all,handlers,specified,in,the,url,map,for,the,corresponding,paths,param,url,map,map,with,url,paths,as,keys,and,handler,beans,or,bean,names,as,values,throws,beans,exception,if,a,handler,couldn,t,be,registered,throws,illegal,state,exception,if,there,is,a,conflicting,handler,registered;protected,void,register,handlers,map,string,object,url,map,throws,beans,exception,if,url,map,is,empty,logger,trace,no,patterns,in,format,mapping,name,else,url,map,for,each,url,handler,if,url,starts,with,url,url,if,handler,instanceof,string,handler,string,handler,trim,register,handler,url,handler,if,logger,is,debug,enabled,list,string,patterns,new,array,list,if,get,root,handler,null,patterns,add,if,get,default,handler,null,patterns,add,patterns,add,all,get,handler,map,key,set,logger,debug,patterns,patterns,in,format,mapping,name
SimpleUrlHandlerMapping -> protected void registerHandlers(Map<String, Object> urlMap) throws BeansException;1530174524;Register all handlers specified in the URL map for the corresponding paths._@param urlMap a Map with URL paths as keys and handler beans or bean names as values_@throws BeansException if a handler couldn't be registered_@throws IllegalStateException if there is a conflicting handler registered;protected void registerHandlers(Map<String, Object> urlMap) throws BeansException {_		if (urlMap.isEmpty()) {_			logger.trace("No patterns in " + formatMappingName())__		}_		else {_			urlMap.forEach((url, handler) -> {_				_				if (!url.startsWith("/")) {_					url = "/" + url__				}_				_				if (handler instanceof String) {_					handler = ((String) handler).trim()__				}_				registerHandler(url, handler)__			})__			if (logger.isDebugEnabled()) {_				List<String> patterns = new ArrayList<>()__				if (getRootHandler() != null) {_					patterns.add("/")__				}_				if (getDefaultHandler() != null) {_					patterns.add("/**")__				}_				patterns.addAll(getHandlerMap().keySet())__				logger.debug("Patterns " + patterns + " in " + formatMappingName())__			}_		}_	};register,all,handlers,specified,in,the,url,map,for,the,corresponding,paths,param,url,map,a,map,with,url,paths,as,keys,and,handler,beans,or,bean,names,as,values,throws,beans,exception,if,a,handler,couldn,t,be,registered,throws,illegal,state,exception,if,there,is,a,conflicting,handler,registered;protected,void,register,handlers,map,string,object,url,map,throws,beans,exception,if,url,map,is,empty,logger,trace,no,patterns,in,format,mapping,name,else,url,map,for,each,url,handler,if,url,starts,with,url,url,if,handler,instanceof,string,handler,string,handler,trim,register,handler,url,handler,if,logger,is,debug,enabled,list,string,patterns,new,array,list,if,get,root,handler,null,patterns,add,if,get,default,handler,null,patterns,add,patterns,add,all,get,handler,map,key,set,logger,debug,patterns,patterns,in,format,mapping,name
SimpleUrlHandlerMapping -> protected void registerHandlers(Map<String, Object> urlMap) throws BeansException;1530174524;Register all handlers specified in the URL map for the corresponding paths._@param urlMap a Map with URL paths as keys and handler beans or bean names as values_@throws BeansException if a handler couldn't be registered_@throws IllegalStateException if there is a conflicting handler registered;protected void registerHandlers(Map<String, Object> urlMap) throws BeansException {_		if (urlMap.isEmpty()) {_			logger.trace("No patterns in " + formatMappingName())__		}_		else {_			urlMap.forEach((url, handler) -> {_				_				if (!url.startsWith("/")) {_					url = "/" + url__				}_				_				if (handler instanceof String) {_					handler = ((String) handler).trim()__				}_				registerHandler(url, handler)__			})__			if (logger.isDebugEnabled()) {_				List<String> patterns = new ArrayList<>()__				if (getRootHandler() != null) {_					patterns.add("/")__				}_				if (getDefaultHandler() != null) {_					patterns.add("/**")__				}_				patterns.addAll(getHandlerMap().keySet())__				logger.debug("Patterns " + patterns + " in " + formatMappingName())__			}_		}_	};register,all,handlers,specified,in,the,url,map,for,the,corresponding,paths,param,url,map,a,map,with,url,paths,as,keys,and,handler,beans,or,bean,names,as,values,throws,beans,exception,if,a,handler,couldn,t,be,registered,throws,illegal,state,exception,if,there,is,a,conflicting,handler,registered;protected,void,register,handlers,map,string,object,url,map,throws,beans,exception,if,url,map,is,empty,logger,trace,no,patterns,in,format,mapping,name,else,url,map,for,each,url,handler,if,url,starts,with,url,url,if,handler,instanceof,string,handler,string,handler,trim,register,handler,url,handler,if,logger,is,debug,enabled,list,string,patterns,new,array,list,if,get,root,handler,null,patterns,add,if,get,default,handler,null,patterns,add,patterns,add,all,get,handler,map,key,set,logger,debug,patterns,patterns,in,format,mapping,name
SimpleUrlHandlerMapping -> public void setUrlMap(Map<String, ?> urlMap);1328020251;Set a Map with URL paths as keys and handler beans (or handler bean names)_as values. Convenient for population with bean references._<p>Supports direct URL matches and Ant-style pattern matches. For syntax_details, see the {@link org.springframework.util.AntPathMatcher} javadoc._@param urlMap map with URLs as keys and beans as values_@see #setMappings;public void setUrlMap(Map<String, ?> urlMap) {_		this.urlMap.putAll(urlMap)__	};set,a,map,with,url,paths,as,keys,and,handler,beans,or,handler,bean,names,as,values,convenient,for,population,with,bean,references,p,supports,direct,url,matches,and,ant,style,pattern,matches,for,syntax,details,see,the,link,org,springframework,util,ant,path,matcher,javadoc,param,url,map,map,with,urls,as,keys,and,beans,as,values,see,set,mappings;public,void,set,url,map,map,string,url,map,this,url,map,put,all,url,map
SimpleUrlHandlerMapping -> public void setUrlMap(Map<String, ?> urlMap);1356735495;Set a Map with URL paths as keys and handler beans (or handler bean names)_as values. Convenient for population with bean references._<p>Supports direct URL matches and Ant-style pattern matches. For syntax_details, see the {@link org.springframework.util.AntPathMatcher} javadoc._@param urlMap map with URLs as keys and beans as values_@see #setMappings;public void setUrlMap(Map<String, ?> urlMap) {_		this.urlMap.putAll(urlMap)__	};set,a,map,with,url,paths,as,keys,and,handler,beans,or,handler,bean,names,as,values,convenient,for,population,with,bean,references,p,supports,direct,url,matches,and,ant,style,pattern,matches,for,syntax,details,see,the,link,org,springframework,util,ant,path,matcher,javadoc,param,url,map,map,with,urls,as,keys,and,beans,as,values,see,set,mappings;public,void,set,url,map,map,string,url,map,this,url,map,put,all,url,map
SimpleUrlHandlerMapping -> public void setUrlMap(Map<String, ?> urlMap);1450275875;Set a Map with URL paths as keys and handler beans (or handler bean names)_as values. Convenient for population with bean references._<p>Supports direct URL matches and Ant-style pattern matches. For syntax_details, see the {@link org.springframework.util.AntPathMatcher} javadoc._@param urlMap map with URLs as keys and beans as values_@see #setMappings;public void setUrlMap(Map<String, ?> urlMap) {_		this.urlMap.putAll(urlMap)__	};set,a,map,with,url,paths,as,keys,and,handler,beans,or,handler,bean,names,as,values,convenient,for,population,with,bean,references,p,supports,direct,url,matches,and,ant,style,pattern,matches,for,syntax,details,see,the,link,org,springframework,util,ant,path,matcher,javadoc,param,url,map,map,with,urls,as,keys,and,beans,as,values,see,set,mappings;public,void,set,url,map,map,string,url,map,this,url,map,put,all,url,map
SimpleUrlHandlerMapping -> public void setUrlMap(Map<String, ?> urlMap);1450277942;Set a Map with URL paths as keys and handler beans (or handler bean names)_as values. Convenient for population with bean references._<p>Supports direct URL matches and Ant-style pattern matches. For syntax_details, see the {@link org.springframework.util.AntPathMatcher} javadoc._@param urlMap map with URLs as keys and beans as values_@see #setMappings;public void setUrlMap(Map<String, ?> urlMap) {_		this.urlMap.putAll(urlMap)__	};set,a,map,with,url,paths,as,keys,and,handler,beans,or,handler,bean,names,as,values,convenient,for,population,with,bean,references,p,supports,direct,url,matches,and,ant,style,pattern,matches,for,syntax,details,see,the,link,org,springframework,util,ant,path,matcher,javadoc,param,url,map,map,with,urls,as,keys,and,beans,as,values,see,set,mappings;public,void,set,url,map,map,string,url,map,this,url,map,put,all,url,map
SimpleUrlHandlerMapping -> public void setUrlMap(Map<String, ?> urlMap);1467730834;Set a Map with URL paths as keys and handler beans (or handler bean names)_as values. Convenient for population with bean references._<p>Supports direct URL matches and Ant-style pattern matches. For syntax_details, see the {@link org.springframework.util.AntPathMatcher} javadoc._@param urlMap map with URLs as keys and beans as values_@see #setMappings;public void setUrlMap(Map<String, ?> urlMap) {_		this.urlMap.putAll(urlMap)__	};set,a,map,with,url,paths,as,keys,and,handler,beans,or,handler,bean,names,as,values,convenient,for,population,with,bean,references,p,supports,direct,url,matches,and,ant,style,pattern,matches,for,syntax,details,see,the,link,org,springframework,util,ant,path,matcher,javadoc,param,url,map,map,with,urls,as,keys,and,beans,as,values,see,set,mappings;public,void,set,url,map,map,string,url,map,this,url,map,put,all,url,map
SimpleUrlHandlerMapping -> public void setUrlMap(Map<String, ?> urlMap);1493370460;Set a Map with URL paths as keys and handler beans (or handler bean names)_as values. Convenient for population with bean references._<p>Supports direct URL matches and Ant-style pattern matches. For syntax_details, see the {@link org.springframework.util.AntPathMatcher} javadoc._@param urlMap map with URLs as keys and beans as values_@see #setMappings;public void setUrlMap(Map<String, ?> urlMap) {_		this.urlMap.putAll(urlMap)__	};set,a,map,with,url,paths,as,keys,and,handler,beans,or,handler,bean,names,as,values,convenient,for,population,with,bean,references,p,supports,direct,url,matches,and,ant,style,pattern,matches,for,syntax,details,see,the,link,org,springframework,util,ant,path,matcher,javadoc,param,url,map,map,with,urls,as,keys,and,beans,as,values,see,set,mappings;public,void,set,url,map,map,string,url,map,this,url,map,put,all,url,map
SimpleUrlHandlerMapping -> public void setUrlMap(Map<String, ?> urlMap);1529361191;Set a Map with URL paths as keys and handler beans (or handler bean names)_as values. Convenient for population with bean references._<p>Supports direct URL matches and Ant-style pattern matches. For syntax_details, see the {@link org.springframework.util.AntPathMatcher} javadoc._@param urlMap map with URLs as keys and beans as values_@see #setMappings;public void setUrlMap(Map<String, ?> urlMap) {_		this.urlMap.putAll(urlMap)__	};set,a,map,with,url,paths,as,keys,and,handler,beans,or,handler,bean,names,as,values,convenient,for,population,with,bean,references,p,supports,direct,url,matches,and,ant,style,pattern,matches,for,syntax,details,see,the,link,org,springframework,util,ant,path,matcher,javadoc,param,url,map,map,with,urls,as,keys,and,beans,as,values,see,set,mappings;public,void,set,url,map,map,string,url,map,this,url,map,put,all,url,map
SimpleUrlHandlerMapping -> public void setUrlMap(Map<String, ?> urlMap);1529721864;Set a Map with URL paths as keys and handler beans (or handler bean names)_as values. Convenient for population with bean references._<p>Supports direct URL matches and Ant-style pattern matches. For syntax_details, see the {@link org.springframework.util.AntPathMatcher} javadoc._@param urlMap map with URLs as keys and beans as values_@see #setMappings;public void setUrlMap(Map<String, ?> urlMap) {_		this.urlMap.putAll(urlMap)__	};set,a,map,with,url,paths,as,keys,and,handler,beans,or,handler,bean,names,as,values,convenient,for,population,with,bean,references,p,supports,direct,url,matches,and,ant,style,pattern,matches,for,syntax,details,see,the,link,org,springframework,util,ant,path,matcher,javadoc,param,url,map,map,with,urls,as,keys,and,beans,as,values,see,set,mappings;public,void,set,url,map,map,string,url,map,this,url,map,put,all,url,map
SimpleUrlHandlerMapping -> public void setUrlMap(Map<String, ?> urlMap);1530174524;Set a Map with URL paths as keys and handler beans (or handler bean names)_as values. Convenient for population with bean references._<p>Supports direct URL matches and Ant-style pattern matches. For syntax_details, see the {@link org.springframework.util.AntPathMatcher} javadoc._@param urlMap map with URLs as keys and beans as values_@see #setMappings;public void setUrlMap(Map<String, ?> urlMap) {_		this.urlMap.putAll(urlMap)__	};set,a,map,with,url,paths,as,keys,and,handler,beans,or,handler,bean,names,as,values,convenient,for,population,with,bean,references,p,supports,direct,url,matches,and,ant,style,pattern,matches,for,syntax,details,see,the,link,org,springframework,util,ant,path,matcher,javadoc,param,url,map,map,with,urls,as,keys,and,beans,as,values,see,set,mappings;public,void,set,url,map,map,string,url,map,this,url,map,put,all,url,map
SimpleUrlHandlerMapping -> public void setUrlMap(Map<String, ?> urlMap);1530174524;Set a Map with URL paths as keys and handler beans (or handler bean names)_as values. Convenient for population with bean references._<p>Supports direct URL matches and Ant-style pattern matches. For syntax_details, see the {@link org.springframework.util.AntPathMatcher} javadoc._@param urlMap map with URLs as keys and beans as values_@see #setMappings;public void setUrlMap(Map<String, ?> urlMap) {_		this.urlMap.putAll(urlMap)__	};set,a,map,with,url,paths,as,keys,and,handler,beans,or,handler,bean,names,as,values,convenient,for,population,with,bean,references,p,supports,direct,url,matches,and,ant,style,pattern,matches,for,syntax,details,see,the,link,org,springframework,util,ant,path,matcher,javadoc,param,url,map,map,with,urls,as,keys,and,beans,as,values,see,set,mappings;public,void,set,url,map,map,string,url,map,this,url,map,put,all,url,map
SimpleUrlHandlerMapping -> public void setMappings(Properties mappings);1328020251;Map URL paths to handler bean names._This is the typical way of configuring this HandlerMapping._<p>Supports direct URL matches and Ant-style pattern matches. For syntax_details, see the {@link org.springframework.util.AntPathMatcher} javadoc._@param mappings properties with URLs as keys and bean names as values_@see #setUrlMap;public void setMappings(Properties mappings) {_		CollectionUtils.mergePropertiesIntoMap(mappings, this.urlMap)__	};map,url,paths,to,handler,bean,names,this,is,the,typical,way,of,configuring,this,handler,mapping,p,supports,direct,url,matches,and,ant,style,pattern,matches,for,syntax,details,see,the,link,org,springframework,util,ant,path,matcher,javadoc,param,mappings,properties,with,urls,as,keys,and,bean,names,as,values,see,set,url,map;public,void,set,mappings,properties,mappings,collection,utils,merge,properties,into,map,mappings,this,url,map
SimpleUrlHandlerMapping -> public void setMappings(Properties mappings);1356735495;Map URL paths to handler bean names._This is the typical way of configuring this HandlerMapping._<p>Supports direct URL matches and Ant-style pattern matches. For syntax_details, see the {@link org.springframework.util.AntPathMatcher} javadoc._@param mappings properties with URLs as keys and bean names as values_@see #setUrlMap;public void setMappings(Properties mappings) {_		CollectionUtils.mergePropertiesIntoMap(mappings, this.urlMap)__	};map,url,paths,to,handler,bean,names,this,is,the,typical,way,of,configuring,this,handler,mapping,p,supports,direct,url,matches,and,ant,style,pattern,matches,for,syntax,details,see,the,link,org,springframework,util,ant,path,matcher,javadoc,param,mappings,properties,with,urls,as,keys,and,bean,names,as,values,see,set,url,map;public,void,set,mappings,properties,mappings,collection,utils,merge,properties,into,map,mappings,this,url,map
SimpleUrlHandlerMapping -> public void setMappings(Properties mappings);1450275875;Map URL paths to handler bean names._This is the typical way of configuring this HandlerMapping._<p>Supports direct URL matches and Ant-style pattern matches. For syntax_details, see the {@link org.springframework.util.AntPathMatcher} javadoc._@param mappings properties with URLs as keys and bean names as values_@see #setUrlMap;public void setMappings(Properties mappings) {_		CollectionUtils.mergePropertiesIntoMap(mappings, this.urlMap)__	};map,url,paths,to,handler,bean,names,this,is,the,typical,way,of,configuring,this,handler,mapping,p,supports,direct,url,matches,and,ant,style,pattern,matches,for,syntax,details,see,the,link,org,springframework,util,ant,path,matcher,javadoc,param,mappings,properties,with,urls,as,keys,and,bean,names,as,values,see,set,url,map;public,void,set,mappings,properties,mappings,collection,utils,merge,properties,into,map,mappings,this,url,map
SimpleUrlHandlerMapping -> public void setMappings(Properties mappings);1450277942;Map URL paths to handler bean names._This is the typical way of configuring this HandlerMapping._<p>Supports direct URL matches and Ant-style pattern matches. For syntax_details, see the {@link org.springframework.util.AntPathMatcher} javadoc._@param mappings properties with URLs as keys and bean names as values_@see #setUrlMap;public void setMappings(Properties mappings) {_		CollectionUtils.mergePropertiesIntoMap(mappings, this.urlMap)__	};map,url,paths,to,handler,bean,names,this,is,the,typical,way,of,configuring,this,handler,mapping,p,supports,direct,url,matches,and,ant,style,pattern,matches,for,syntax,details,see,the,link,org,springframework,util,ant,path,matcher,javadoc,param,mappings,properties,with,urls,as,keys,and,bean,names,as,values,see,set,url,map;public,void,set,mappings,properties,mappings,collection,utils,merge,properties,into,map,mappings,this,url,map
SimpleUrlHandlerMapping -> public void setMappings(Properties mappings);1467730834;Map URL paths to handler bean names._This is the typical way of configuring this HandlerMapping._<p>Supports direct URL matches and Ant-style pattern matches. For syntax_details, see the {@link org.springframework.util.AntPathMatcher} javadoc._@param mappings properties with URLs as keys and bean names as values_@see #setUrlMap;public void setMappings(Properties mappings) {_		CollectionUtils.mergePropertiesIntoMap(mappings, this.urlMap)__	};map,url,paths,to,handler,bean,names,this,is,the,typical,way,of,configuring,this,handler,mapping,p,supports,direct,url,matches,and,ant,style,pattern,matches,for,syntax,details,see,the,link,org,springframework,util,ant,path,matcher,javadoc,param,mappings,properties,with,urls,as,keys,and,bean,names,as,values,see,set,url,map;public,void,set,mappings,properties,mappings,collection,utils,merge,properties,into,map,mappings,this,url,map
SimpleUrlHandlerMapping -> public void setMappings(Properties mappings);1493370460;Map URL paths to handler bean names._This is the typical way of configuring this HandlerMapping._<p>Supports direct URL matches and Ant-style pattern matches. For syntax_details, see the {@link org.springframework.util.AntPathMatcher} javadoc._@param mappings properties with URLs as keys and bean names as values_@see #setUrlMap;public void setMappings(Properties mappings) {_		CollectionUtils.mergePropertiesIntoMap(mappings, this.urlMap)__	};map,url,paths,to,handler,bean,names,this,is,the,typical,way,of,configuring,this,handler,mapping,p,supports,direct,url,matches,and,ant,style,pattern,matches,for,syntax,details,see,the,link,org,springframework,util,ant,path,matcher,javadoc,param,mappings,properties,with,urls,as,keys,and,bean,names,as,values,see,set,url,map;public,void,set,mappings,properties,mappings,collection,utils,merge,properties,into,map,mappings,this,url,map
SimpleUrlHandlerMapping -> public void setMappings(Properties mappings);1529361191;Map URL paths to handler bean names._This is the typical way of configuring this HandlerMapping._<p>Supports direct URL matches and Ant-style pattern matches. For syntax_details, see the {@link org.springframework.util.AntPathMatcher} javadoc._@param mappings properties with URLs as keys and bean names as values_@see #setUrlMap;public void setMappings(Properties mappings) {_		CollectionUtils.mergePropertiesIntoMap(mappings, this.urlMap)__	};map,url,paths,to,handler,bean,names,this,is,the,typical,way,of,configuring,this,handler,mapping,p,supports,direct,url,matches,and,ant,style,pattern,matches,for,syntax,details,see,the,link,org,springframework,util,ant,path,matcher,javadoc,param,mappings,properties,with,urls,as,keys,and,bean,names,as,values,see,set,url,map;public,void,set,mappings,properties,mappings,collection,utils,merge,properties,into,map,mappings,this,url,map
SimpleUrlHandlerMapping -> public void setMappings(Properties mappings);1529721864;Map URL paths to handler bean names._This is the typical way of configuring this HandlerMapping._<p>Supports direct URL matches and Ant-style pattern matches. For syntax_details, see the {@link org.springframework.util.AntPathMatcher} javadoc._@param mappings properties with URLs as keys and bean names as values_@see #setUrlMap;public void setMappings(Properties mappings) {_		CollectionUtils.mergePropertiesIntoMap(mappings, this.urlMap)__	};map,url,paths,to,handler,bean,names,this,is,the,typical,way,of,configuring,this,handler,mapping,p,supports,direct,url,matches,and,ant,style,pattern,matches,for,syntax,details,see,the,link,org,springframework,util,ant,path,matcher,javadoc,param,mappings,properties,with,urls,as,keys,and,bean,names,as,values,see,set,url,map;public,void,set,mappings,properties,mappings,collection,utils,merge,properties,into,map,mappings,this,url,map
SimpleUrlHandlerMapping -> public void setMappings(Properties mappings);1530174524;Map URL paths to handler bean names._This is the typical way of configuring this HandlerMapping._<p>Supports direct URL matches and Ant-style pattern matches. For syntax_details, see the {@link org.springframework.util.AntPathMatcher} javadoc._@param mappings properties with URLs as keys and bean names as values_@see #setUrlMap;public void setMappings(Properties mappings) {_		CollectionUtils.mergePropertiesIntoMap(mappings, this.urlMap)__	};map,url,paths,to,handler,bean,names,this,is,the,typical,way,of,configuring,this,handler,mapping,p,supports,direct,url,matches,and,ant,style,pattern,matches,for,syntax,details,see,the,link,org,springframework,util,ant,path,matcher,javadoc,param,mappings,properties,with,urls,as,keys,and,bean,names,as,values,see,set,url,map;public,void,set,mappings,properties,mappings,collection,utils,merge,properties,into,map,mappings,this,url,map
SimpleUrlHandlerMapping -> public void setMappings(Properties mappings);1530174524;Map URL paths to handler bean names._This is the typical way of configuring this HandlerMapping._<p>Supports direct URL matches and Ant-style pattern matches. For syntax_details, see the {@link org.springframework.util.AntPathMatcher} javadoc._@param mappings properties with URLs as keys and bean names as values_@see #setUrlMap;public void setMappings(Properties mappings) {_		CollectionUtils.mergePropertiesIntoMap(mappings, this.urlMap)__	};map,url,paths,to,handler,bean,names,this,is,the,typical,way,of,configuring,this,handler,mapping,p,supports,direct,url,matches,and,ant,style,pattern,matches,for,syntax,details,see,the,link,org,springframework,util,ant,path,matcher,javadoc,param,mappings,properties,with,urls,as,keys,and,bean,names,as,values,see,set,url,map;public,void,set,mappings,properties,mappings,collection,utils,merge,properties,into,map,mappings,this,url,map
SimpleUrlHandlerMapping -> public Map<String, ?> getUrlMap();1328020251;Allow Map access to the URL path mappings, with the option to add or_override specific entries._<p>Useful for specifying entries directly, for example via "urlMap[myKey]"._This is particularly useful for adding or overriding entries in child_bean definitions.;public Map<String, ?> getUrlMap() {_		return this.urlMap__	};allow,map,access,to,the,url,path,mappings,with,the,option,to,add,or,override,specific,entries,p,useful,for,specifying,entries,directly,for,example,via,url,map,my,key,this,is,particularly,useful,for,adding,or,overriding,entries,in,child,bean,definitions;public,map,string,get,url,map,return,this,url,map
SimpleUrlHandlerMapping -> public Map<String, ?> getUrlMap();1356735495;Allow Map access to the URL path mappings, with the option to add or_override specific entries._<p>Useful for specifying entries directly, for example via "urlMap[myKey]"._This is particularly useful for adding or overriding entries in child_bean definitions.;public Map<String, ?> getUrlMap() {_		return this.urlMap__	};allow,map,access,to,the,url,path,mappings,with,the,option,to,add,or,override,specific,entries,p,useful,for,specifying,entries,directly,for,example,via,url,map,my,key,this,is,particularly,useful,for,adding,or,overriding,entries,in,child,bean,definitions;public,map,string,get,url,map,return,this,url,map
SimpleUrlHandlerMapping -> public Map<String, ?> getUrlMap();1450275875;Allow Map access to the URL path mappings, with the option to add or_override specific entries._<p>Useful for specifying entries directly, for example via "urlMap[myKey]"._This is particularly useful for adding or overriding entries in child_bean definitions.;public Map<String, ?> getUrlMap() {_		return this.urlMap__	};allow,map,access,to,the,url,path,mappings,with,the,option,to,add,or,override,specific,entries,p,useful,for,specifying,entries,directly,for,example,via,url,map,my,key,this,is,particularly,useful,for,adding,or,overriding,entries,in,child,bean,definitions;public,map,string,get,url,map,return,this,url,map
SimpleUrlHandlerMapping -> public Map<String, ?> getUrlMap();1450277942;Allow Map access to the URL path mappings, with the option to add or_override specific entries._<p>Useful for specifying entries directly, for example via "urlMap[myKey]"._This is particularly useful for adding or overriding entries in child_bean definitions.;public Map<String, ?> getUrlMap() {_		return this.urlMap__	};allow,map,access,to,the,url,path,mappings,with,the,option,to,add,or,override,specific,entries,p,useful,for,specifying,entries,directly,for,example,via,url,map,my,key,this,is,particularly,useful,for,adding,or,overriding,entries,in,child,bean,definitions;public,map,string,get,url,map,return,this,url,map
SimpleUrlHandlerMapping -> public Map<String, ?> getUrlMap();1467730834;Allow Map access to the URL path mappings, with the option to add or_override specific entries._<p>Useful for specifying entries directly, for example via "urlMap[myKey]"._This is particularly useful for adding or overriding entries in child_bean definitions.;public Map<String, ?> getUrlMap() {_		return this.urlMap__	};allow,map,access,to,the,url,path,mappings,with,the,option,to,add,or,override,specific,entries,p,useful,for,specifying,entries,directly,for,example,via,url,map,my,key,this,is,particularly,useful,for,adding,or,overriding,entries,in,child,bean,definitions;public,map,string,get,url,map,return,this,url,map
SimpleUrlHandlerMapping -> public Map<String, ?> getUrlMap();1493370460;Allow Map access to the URL path mappings, with the option to add or_override specific entries._<p>Useful for specifying entries directly, for example via "urlMap[myKey]"._This is particularly useful for adding or overriding entries in child_bean definitions.;public Map<String, ?> getUrlMap() {_		return this.urlMap__	};allow,map,access,to,the,url,path,mappings,with,the,option,to,add,or,override,specific,entries,p,useful,for,specifying,entries,directly,for,example,via,url,map,my,key,this,is,particularly,useful,for,adding,or,overriding,entries,in,child,bean,definitions;public,map,string,get,url,map,return,this,url,map
SimpleUrlHandlerMapping -> public Map<String, ?> getUrlMap();1529361191;Allow Map access to the URL path mappings, with the option to add or_override specific entries._<p>Useful for specifying entries directly, for example via "urlMap[myKey]"._This is particularly useful for adding or overriding entries in child_bean definitions.;public Map<String, ?> getUrlMap() {_		return this.urlMap__	};allow,map,access,to,the,url,path,mappings,with,the,option,to,add,or,override,specific,entries,p,useful,for,specifying,entries,directly,for,example,via,url,map,my,key,this,is,particularly,useful,for,adding,or,overriding,entries,in,child,bean,definitions;public,map,string,get,url,map,return,this,url,map
SimpleUrlHandlerMapping -> public Map<String, ?> getUrlMap();1529721864;Allow Map access to the URL path mappings, with the option to add or_override specific entries._<p>Useful for specifying entries directly, for example via "urlMap[myKey]"._This is particularly useful for adding or overriding entries in child_bean definitions.;public Map<String, ?> getUrlMap() {_		return this.urlMap__	};allow,map,access,to,the,url,path,mappings,with,the,option,to,add,or,override,specific,entries,p,useful,for,specifying,entries,directly,for,example,via,url,map,my,key,this,is,particularly,useful,for,adding,or,overriding,entries,in,child,bean,definitions;public,map,string,get,url,map,return,this,url,map
SimpleUrlHandlerMapping -> public Map<String, ?> getUrlMap();1530174524;Allow Map access to the URL path mappings, with the option to add or_override specific entries._<p>Useful for specifying entries directly, for example via "urlMap[myKey]"._This is particularly useful for adding or overriding entries in child_bean definitions.;public Map<String, ?> getUrlMap() {_		return this.urlMap__	};allow,map,access,to,the,url,path,mappings,with,the,option,to,add,or,override,specific,entries,p,useful,for,specifying,entries,directly,for,example,via,url,map,my,key,this,is,particularly,useful,for,adding,or,overriding,entries,in,child,bean,definitions;public,map,string,get,url,map,return,this,url,map
SimpleUrlHandlerMapping -> public Map<String, ?> getUrlMap();1530174524;Allow Map access to the URL path mappings, with the option to add or_override specific entries._<p>Useful for specifying entries directly, for example via "urlMap[myKey]"._This is particularly useful for adding or overriding entries in child_bean definitions.;public Map<String, ?> getUrlMap() {_		return this.urlMap__	};allow,map,access,to,the,url,path,mappings,with,the,option,to,add,or,override,specific,entries,p,useful,for,specifying,entries,directly,for,example,via,url,map,my,key,this,is,particularly,useful,for,adding,or,overriding,entries,in,child,bean,definitions;public,map,string,get,url,map,return,this,url,map
SimpleUrlHandlerMapping -> @Override 	public void initApplicationContext() throws BeansException;1328020251;Calls the {@link #registerHandlers} method in addition to the_superclass's initialization.;@Override_	public void initApplicationContext() throws BeansException {_		super.initApplicationContext()__		registerHandlers(this.urlMap)__	};calls,the,link,register,handlers,method,in,addition,to,the,superclass,s,initialization;override,public,void,init,application,context,throws,beans,exception,super,init,application,context,register,handlers,this,url,map
SimpleUrlHandlerMapping -> @Override 	public void initApplicationContext() throws BeansException;1356735495;Calls the {@link #registerHandlers} method in addition to the_superclass's initialization.;@Override_	public void initApplicationContext() throws BeansException {_		super.initApplicationContext()__		registerHandlers(this.urlMap)__	};calls,the,link,register,handlers,method,in,addition,to,the,superclass,s,initialization;override,public,void,init,application,context,throws,beans,exception,super,init,application,context,register,handlers,this,url,map
SimpleUrlHandlerMapping -> @Override 	public void initApplicationContext() throws BeansException;1450275875;Calls the {@link #registerHandlers} method in addition to the_superclass's initialization.;@Override_	public void initApplicationContext() throws BeansException {_		super.initApplicationContext()__		registerHandlers(this.urlMap)__	};calls,the,link,register,handlers,method,in,addition,to,the,superclass,s,initialization;override,public,void,init,application,context,throws,beans,exception,super,init,application,context,register,handlers,this,url,map
SimpleUrlHandlerMapping -> @Override 	public void initApplicationContext() throws BeansException;1450277942;Calls the {@link #registerHandlers} method in addition to the_superclass's initialization.;@Override_	public void initApplicationContext() throws BeansException {_		super.initApplicationContext()__		registerHandlers(this.urlMap)__	};calls,the,link,register,handlers,method,in,addition,to,the,superclass,s,initialization;override,public,void,init,application,context,throws,beans,exception,super,init,application,context,register,handlers,this,url,map
SimpleUrlHandlerMapping -> @Override 	public void initApplicationContext() throws BeansException;1467730834;Calls the {@link #registerHandlers} method in addition to the_superclass's initialization.;@Override_	public void initApplicationContext() throws BeansException {_		super.initApplicationContext()__		registerHandlers(this.urlMap)__	};calls,the,link,register,handlers,method,in,addition,to,the,superclass,s,initialization;override,public,void,init,application,context,throws,beans,exception,super,init,application,context,register,handlers,this,url,map
SimpleUrlHandlerMapping -> @Override 	public void initApplicationContext() throws BeansException;1493370460;Calls the {@link #registerHandlers} method in addition to the_superclass's initialization.;@Override_	public void initApplicationContext() throws BeansException {_		super.initApplicationContext()__		registerHandlers(this.urlMap)__	};calls,the,link,register,handlers,method,in,addition,to,the,superclass,s,initialization;override,public,void,init,application,context,throws,beans,exception,super,init,application,context,register,handlers,this,url,map
SimpleUrlHandlerMapping -> @Override 	public void initApplicationContext() throws BeansException;1529361191;Calls the {@link #registerHandlers} method in addition to the_superclass's initialization.;@Override_	public void initApplicationContext() throws BeansException {_		super.initApplicationContext()__		registerHandlers(this.urlMap)__	};calls,the,link,register,handlers,method,in,addition,to,the,superclass,s,initialization;override,public,void,init,application,context,throws,beans,exception,super,init,application,context,register,handlers,this,url,map
SimpleUrlHandlerMapping -> @Override 	public void initApplicationContext() throws BeansException;1529721864;Calls the {@link #registerHandlers} method in addition to the_superclass's initialization.;@Override_	public void initApplicationContext() throws BeansException {_		super.initApplicationContext()__		registerHandlers(this.urlMap)__	};calls,the,link,register,handlers,method,in,addition,to,the,superclass,s,initialization;override,public,void,init,application,context,throws,beans,exception,super,init,application,context,register,handlers,this,url,map
SimpleUrlHandlerMapping -> @Override 	public void initApplicationContext() throws BeansException;1530174524;Calls the {@link #registerHandlers} method in addition to the_superclass's initialization.;@Override_	public void initApplicationContext() throws BeansException {_		super.initApplicationContext()__		registerHandlers(this.urlMap)__	};calls,the,link,register,handlers,method,in,addition,to,the,superclass,s,initialization;override,public,void,init,application,context,throws,beans,exception,super,init,application,context,register,handlers,this,url,map
SimpleUrlHandlerMapping -> @Override 	public void initApplicationContext() throws BeansException;1530174524;Calls the {@link #registerHandlers} method in addition to the_superclass's initialization.;@Override_	public void initApplicationContext() throws BeansException {_		super.initApplicationContext()__		registerHandlers(this.urlMap)__	};calls,the,link,register,handlers,method,in,addition,to,the,superclass,s,initialization;override,public,void,init,application,context,throws,beans,exception,super,init,application,context,register,handlers,this,url,map
