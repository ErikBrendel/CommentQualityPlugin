commented;modifiers;parameterAmount;loc;comment;code
false;public;2;4;;@Override public boolean supports(MethodParameter returnType, Class<? extends HttpMessageConverter<?>> converterType) {     return super.supports(returnType, converterType) && returnType.hasMethodAnnotation(JsonView.class). }
false;protected;5;15;;@Override protected void beforeBodyWriteInternal(MappingJacksonValue bodyContainer, MediaType contentType, MethodParameter returnType, ServerHttpRequest request, ServerHttpResponse response) {     JsonView ann = returnType.getMethodAnnotation(JsonView.class).     Assert.state(ann != null, "No JsonView annotation").     Class<?>[] classes = ann.value().     if (classes.length != 1) {         throw new IllegalArgumentException("@JsonView only supported for response body advice with exactly 1 class argument: " + returnType).     }     bodyContainer.setSerializationView(classes[0]). }
