# id;timestamp;commentText;codeText;commentWords;codeWords
AbstractAtomFeedView -> protected abstract List<Entry> buildFeedEntries( 			Map<String, Object> model, HttpServletRequest request, HttpServletResponse response) 			throws Exception_;1328020251;Subclasses must implement this method to build feed entries, given the model._<p>Note that the passed-in HTTP response is just supposed to be used for_setting cookies or other HTTP headers. The built feed itself will automatically_get written to the response after this method returns._@param model	the model Map_@param request in case we need locale etc. Shouldn't look at attributes._@param response in case we need to set cookies. Shouldn't write to it._@return the feed entries to be added to the feed_@throws Exception any exception that occured during document building_@see Entry;protected abstract List<Entry> buildFeedEntries(_			Map<String, Object> model, HttpServletRequest request, HttpServletResponse response)_			throws Exception_;subclasses,must,implement,this,method,to,build,feed,entries,given,the,model,p,note,that,the,passed,in,http,response,is,just,supposed,to,be,used,for,setting,cookies,or,other,http,headers,the,built,feed,itself,will,automatically,get,written,to,the,response,after,this,method,returns,param,model,the,model,map,param,request,in,case,we,need,locale,etc,shouldn,t,look,at,attributes,param,response,in,case,we,need,to,set,cookies,shouldn,t,write,to,it,return,the,feed,entries,to,be,added,to,the,feed,throws,exception,any,exception,that,occured,during,document,building,see,entry;protected,abstract,list,entry,build,feed,entries,map,string,object,model,http,servlet,request,request,http,servlet,response,response,throws,exception
AbstractAtomFeedView -> protected abstract List<Entry> buildFeedEntries( 			Map<String, Object> model, HttpServletRequest request, HttpServletResponse response) 			throws Exception_;1385423968;Subclasses must implement this method to build feed entries, given the model._<p>Note that the passed-in HTTP response is just supposed to be used for_setting cookies or other HTTP headers. The built feed itself will automatically_get written to the response after this method returns._@param model	the model Map_@param request in case we need locale etc. Shouldn't look at attributes._@param response in case we need to set cookies. Shouldn't write to it._@return the feed entries to be added to the feed_@throws Exception any exception that occurred during document building_@see Entry;protected abstract List<Entry> buildFeedEntries(_			Map<String, Object> model, HttpServletRequest request, HttpServletResponse response)_			throws Exception_;subclasses,must,implement,this,method,to,build,feed,entries,given,the,model,p,note,that,the,passed,in,http,response,is,just,supposed,to,be,used,for,setting,cookies,or,other,http,headers,the,built,feed,itself,will,automatically,get,written,to,the,response,after,this,method,returns,param,model,the,model,map,param,request,in,case,we,need,locale,etc,shouldn,t,look,at,attributes,param,response,in,case,we,need,to,set,cookies,shouldn,t,write,to,it,return,the,feed,entries,to,be,added,to,the,feed,throws,exception,any,exception,that,occurred,during,document,building,see,entry;protected,abstract,list,entry,build,feed,entries,map,string,object,model,http,servlet,request,request,http,servlet,response,response,throws,exception
AbstractAtomFeedView -> protected abstract List<Entry> buildFeedEntries( 			Map<String, Object> model, HttpServletRequest request, HttpServletResponse response) 			throws Exception_;1404306281;Subclasses must implement this method to build feed entries, given the model._<p>Note that the passed-in HTTP response is just supposed to be used for_setting cookies or other HTTP headers. The built feed itself will automatically_get written to the response after this method returns._@param model	the model Map_@param request in case we need locale etc. Shouldn't look at attributes._@param response in case we need to set cookies. Shouldn't write to it._@return the feed entries to be added to the feed_@throws Exception any exception that occurred during document building_@see Entry;protected abstract List<Entry> buildFeedEntries(_			Map<String, Object> model, HttpServletRequest request, HttpServletResponse response)_			throws Exception_;subclasses,must,implement,this,method,to,build,feed,entries,given,the,model,p,note,that,the,passed,in,http,response,is,just,supposed,to,be,used,for,setting,cookies,or,other,http,headers,the,built,feed,itself,will,automatically,get,written,to,the,response,after,this,method,returns,param,model,the,model,map,param,request,in,case,we,need,locale,etc,shouldn,t,look,at,attributes,param,response,in,case,we,need,to,set,cookies,shouldn,t,write,to,it,return,the,feed,entries,to,be,added,to,the,feed,throws,exception,any,exception,that,occurred,during,document,building,see,entry;protected,abstract,list,entry,build,feed,entries,map,string,object,model,http,servlet,request,request,http,servlet,response,response,throws,exception
AbstractAtomFeedView -> protected abstract List<Entry> buildFeedEntries( 			Map<String, Object> model, HttpServletRequest request, HttpServletResponse response) 			throws Exception_;1530174524;Subclasses must implement this method to build feed entries, given the model._<p>Note that the passed-in HTTP response is just supposed to be used for_setting cookies or other HTTP headers. The built feed itself will automatically_get written to the response after this method returns._@param model	the model Map_@param request in case we need locale etc. Shouldn't look at attributes._@param response in case we need to set cookies. Shouldn't write to it._@return the feed entries to be added to the feed_@throws Exception any exception that occurred during document building_@see Entry;protected abstract List<Entry> buildFeedEntries(_			Map<String, Object> model, HttpServletRequest request, HttpServletResponse response)_			throws Exception_;subclasses,must,implement,this,method,to,build,feed,entries,given,the,model,p,note,that,the,passed,in,http,response,is,just,supposed,to,be,used,for,setting,cookies,or,other,http,headers,the,built,feed,itself,will,automatically,get,written,to,the,response,after,this,method,returns,param,model,the,model,map,param,request,in,case,we,need,locale,etc,shouldn,t,look,at,attributes,param,response,in,case,we,need,to,set,cookies,shouldn,t,write,to,it,return,the,feed,entries,to,be,added,to,the,feed,throws,exception,any,exception,that,occurred,during,document,building,see,entry;protected,abstract,list,entry,build,feed,entries,map,string,object,model,http,servlet,request,request,http,servlet,response,response,throws,exception
AbstractAtomFeedView -> public void setFeedType(String feedType);1328020251;Sets the Rome feed type to use._<p>Defaults to Atom 1.0._@see Feed#setFeedType(String)_@see #DEFAULT_FEED_TYPE;public void setFeedType(String feedType) {_		this.feedType = feedType__	};sets,the,rome,feed,type,to,use,p,defaults,to,atom,1,0,see,feed,set,feed,type,string,see;public,void,set,feed,type,string,feed,type,this,feed,type,feed,type
AbstractAtomFeedView -> public void setFeedType(String feedType);1385423968;Sets the Rome feed type to use._<p>Defaults to Atom 1.0._@see Feed#setFeedType(String)_@see #DEFAULT_FEED_TYPE;public void setFeedType(String feedType) {_		this.feedType = feedType__	};sets,the,rome,feed,type,to,use,p,defaults,to,atom,1,0,see,feed,set,feed,type,string,see;public,void,set,feed,type,string,feed,type,this,feed,type,feed,type
AbstractAtomFeedView -> public void setFeedType(String feedType);1404306281;Set the Rome feed type to use._<p>Defaults to Atom 1.0._@see Feed#setFeedType(String)_@see #DEFAULT_FEED_TYPE;public void setFeedType(String feedType) {_		this.feedType = feedType__	};set,the,rome,feed,type,to,use,p,defaults,to,atom,1,0,see,feed,set,feed,type,string,see;public,void,set,feed,type,string,feed,type,this,feed,type,feed,type
AbstractAtomFeedView -> public void setFeedType(String feedType);1530174524;Set the Rome feed type to use._<p>Defaults to Atom 1.0._@see Feed#setFeedType(String)_@see #DEFAULT_FEED_TYPE;public void setFeedType(String feedType) {_		this.feedType = feedType__	};set,the,rome,feed,type,to,use,p,defaults,to,atom,1,0,see,feed,set,feed,type,string,see;public,void,set,feed,type,string,feed,type,this,feed,type,feed,type
AbstractAtomFeedView -> @Override 	protected Feed newFeed();1328020251;Create a new Feed instance to hold the entries._<p>By default returns an Atom 1.0 feed, but the subclass can specify any Feed._@see #setFeedType(String);@Override_	protected Feed newFeed() {_		return new Feed(this.feedType)__	};create,a,new,feed,instance,to,hold,the,entries,p,by,default,returns,an,atom,1,0,feed,but,the,subclass,can,specify,any,feed,see,set,feed,type,string;override,protected,feed,new,feed,return,new,feed,this,feed,type
AbstractAtomFeedView -> @Override 	protected Feed newFeed();1385423968;Create a new Feed instance to hold the entries._<p>By default returns an Atom 1.0 feed, but the subclass can specify any Feed._@see #setFeedType(String);@Override_	protected Feed newFeed() {_		return new Feed(this.feedType)__	};create,a,new,feed,instance,to,hold,the,entries,p,by,default,returns,an,atom,1,0,feed,but,the,subclass,can,specify,any,feed,see,set,feed,type,string;override,protected,feed,new,feed,return,new,feed,this,feed,type
AbstractAtomFeedView -> @Override 	protected Feed newFeed();1404306281;Create a new Feed instance to hold the entries._<p>By default returns an Atom 1.0 feed, but the subclass can specify any Feed._@see #setFeedType(String);@Override_	protected Feed newFeed() {_		return new Feed(this.feedType)__	};create,a,new,feed,instance,to,hold,the,entries,p,by,default,returns,an,atom,1,0,feed,but,the,subclass,can,specify,any,feed,see,set,feed,type,string;override,protected,feed,new,feed,return,new,feed,this,feed,type
AbstractAtomFeedView -> @Override 	protected Feed newFeed();1530174524;Create a new Feed instance to hold the entries._<p>By default returns an Atom 1.0 feed, but the subclass can specify any Feed._@see #setFeedType(String);@Override_	protected Feed newFeed() {_		return new Feed(this.feedType)__	};create,a,new,feed,instance,to,hold,the,entries,p,by,default,returns,an,atom,1,0,feed,but,the,subclass,can,specify,any,feed,see,set,feed,type,string;override,protected,feed,new,feed,return,new,feed,this,feed,type
AbstractAtomFeedView -> @Override 	protected final void buildFeedEntries(Map<String, Object> model, Feed feed, 			HttpServletRequest request, HttpServletResponse response) throws Exception;1328020251;Invokes {@link #buildFeedEntries(Map, HttpServletRequest, HttpServletResponse)}_to get a list of feed entries.;@Override_	protected final void buildFeedEntries(Map<String, Object> model, Feed feed,_			HttpServletRequest request, HttpServletResponse response) throws Exception {__		List<Entry> entries = buildFeedEntries(model, request, response)__		feed.setEntries(entries)__	};invokes,link,build,feed,entries,map,http,servlet,request,http,servlet,response,to,get,a,list,of,feed,entries;override,protected,final,void,build,feed,entries,map,string,object,model,feed,feed,http,servlet,request,request,http,servlet,response,response,throws,exception,list,entry,entries,build,feed,entries,model,request,response,feed,set,entries,entries
AbstractAtomFeedView -> @Override 	protected final void buildFeedEntries(Map<String, Object> model, Feed feed, 			HttpServletRequest request, HttpServletResponse response) throws Exception;1385423968;Invokes {@link #buildFeedEntries(Map, HttpServletRequest, HttpServletResponse)}_to get a list of feed entries.;@Override_	protected final void buildFeedEntries(Map<String, Object> model, Feed feed,_			HttpServletRequest request, HttpServletResponse response) throws Exception {__		List<Entry> entries = buildFeedEntries(model, request, response)__		feed.setEntries(entries)__	};invokes,link,build,feed,entries,map,http,servlet,request,http,servlet,response,to,get,a,list,of,feed,entries;override,protected,final,void,build,feed,entries,map,string,object,model,feed,feed,http,servlet,request,request,http,servlet,response,response,throws,exception,list,entry,entries,build,feed,entries,model,request,response,feed,set,entries,entries
AbstractAtomFeedView -> @Override 	protected final void buildFeedEntries(Map<String, Object> model, Feed feed, 			HttpServletRequest request, HttpServletResponse response) throws Exception;1404306281;Invokes {@link #buildFeedEntries(Map, HttpServletRequest, HttpServletResponse)}_to get a list of feed entries.;@Override_	protected final void buildFeedEntries(Map<String, Object> model, Feed feed,_			HttpServletRequest request, HttpServletResponse response) throws Exception {__		List<Entry> entries = buildFeedEntries(model, request, response)__		feed.setEntries(entries)__	};invokes,link,build,feed,entries,map,http,servlet,request,http,servlet,response,to,get,a,list,of,feed,entries;override,protected,final,void,build,feed,entries,map,string,object,model,feed,feed,http,servlet,request,request,http,servlet,response,response,throws,exception,list,entry,entries,build,feed,entries,model,request,response,feed,set,entries,entries
AbstractAtomFeedView -> @Override 	protected final void buildFeedEntries(Map<String, Object> model, Feed feed, 			HttpServletRequest request, HttpServletResponse response) throws Exception;1530174524;Invokes {@link #buildFeedEntries(Map, HttpServletRequest, HttpServletResponse)}_to get a list of feed entries.;@Override_	protected final void buildFeedEntries(Map<String, Object> model, Feed feed,_			HttpServletRequest request, HttpServletResponse response) throws Exception {__		List<Entry> entries = buildFeedEntries(model, request, response)__		feed.setEntries(entries)__	};invokes,link,build,feed,entries,map,http,servlet,request,http,servlet,response,to,get,a,list,of,feed,entries;override,protected,final,void,build,feed,entries,map,string,object,model,feed,feed,http,servlet,request,request,http,servlet,response,response,throws,exception,list,entry,entries,build,feed,entries,model,request,response,feed,set,entries,entries
