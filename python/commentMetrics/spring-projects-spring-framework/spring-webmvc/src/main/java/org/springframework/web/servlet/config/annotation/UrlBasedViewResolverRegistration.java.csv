commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;3;;protected UrlBasedViewResolver getViewResolver() {     return this.viewResolver. }
true;public;1;4;/**  * Set the prefix that gets prepended to view names when building a URL.  * @see org.springframework.web.servlet.view.UrlBasedViewResolver#setPrefix  */ ;/**  * Set the prefix that gets prepended to view names when building a URL.  * @see org.springframework.web.servlet.view.UrlBasedViewResolver#setPrefix  */ public UrlBasedViewResolverRegistration prefix(String prefix) {     this.viewResolver.setPrefix(prefix).     return this. }
true;public;1;4;/**  * Set the suffix that gets appended to view names when building a URL.  * @see org.springframework.web.servlet.view.UrlBasedViewResolver#setSuffix  */ ;/**  * Set the suffix that gets appended to view names when building a URL.  * @see org.springframework.web.servlet.view.UrlBasedViewResolver#setSuffix  */ public UrlBasedViewResolverRegistration suffix(String suffix) {     this.viewResolver.setSuffix(suffix).     return this. }
true;public;1;4;/**  * Set the view class that should be used to create views.  * @see org.springframework.web.servlet.view.UrlBasedViewResolver#setViewClass  */ ;/**  * Set the view class that should be used to create views.  * @see org.springframework.web.servlet.view.UrlBasedViewResolver#setViewClass  */ public UrlBasedViewResolverRegistration viewClass(Class<?> viewClass) {     this.viewResolver.setViewClass(viewClass).     return this. }
true;public;1;4;/**  * Set the view names (or name patterns) that can be handled by this view  * resolver. View names can contain simple wildcards such that 'my*', '*Report'  * and '*Repo*' will all match the view name 'myReport'.  * @see org.springframework.web.servlet.view.UrlBasedViewResolver#setViewNames  */ ;/**  * Set the view names (or name patterns) that can be handled by this view  * resolver. View names can contain simple wildcards such that 'my*', '*Report'  * and '*Repo*' will all match the view name 'myReport'.  * @see org.springframework.web.servlet.view.UrlBasedViewResolver#setViewNames  */ public UrlBasedViewResolverRegistration viewNames(String... viewNames) {     this.viewResolver.setViewNames(viewNames).     return this. }
true;public;1;4;/**  * Set static attributes to be added to the model of every request for all  * views resolved by this view resolver. This allows for setting any kind of  * attribute values, for example bean references.  * @see org.springframework.web.servlet.view.UrlBasedViewResolver#setAttributesMap  */ ;/**  * Set static attributes to be added to the model of every request for all  * views resolved by this view resolver. This allows for setting any kind of  * attribute values, for example bean references.  * @see org.springframework.web.servlet.view.UrlBasedViewResolver#setAttributesMap  */ public UrlBasedViewResolverRegistration attributes(Map<String, ?> attributes) {     this.viewResolver.setAttributesMap(attributes).     return this. }
true;public;1;4;/**  * Specify the maximum number of entries for the view cache.  * Default is 1024.  * @see org.springframework.web.servlet.view.UrlBasedViewResolver#setCache(boolean)  */ ;/**  * Specify the maximum number of entries for the view cache.  * Default is 1024.  * @see org.springframework.web.servlet.view.UrlBasedViewResolver#setCache(boolean)  */ public UrlBasedViewResolverRegistration cacheLimit(int cacheLimit) {     this.viewResolver.setCacheLimit(cacheLimit).     return this. }
true;public;1;4;/**  * Enable or disable caching.  * <p>This is equivalent to setting the {@link #cacheLimit "cacheLimit"}  * property to the default limit (1024) or to 0, respectively.  * <p>Default is "true": caching is enabled.  * Disable this only for debugging and development.  * @see org.springframework.web.servlet.view.UrlBasedViewResolver#setCache(boolean)  */ ;/**  * Enable or disable caching.  * <p>This is equivalent to setting the {@link #cacheLimit "cacheLimit"}  * property to the default limit (1024) or to 0, respectively.  * <p>Default is "true": caching is enabled.  * Disable this only for debugging and development.  * @see org.springframework.web.servlet.view.UrlBasedViewResolver#setCache(boolean)  */ public UrlBasedViewResolverRegistration cache(boolean cache) {     this.viewResolver.setCache(cache).     return this. }
