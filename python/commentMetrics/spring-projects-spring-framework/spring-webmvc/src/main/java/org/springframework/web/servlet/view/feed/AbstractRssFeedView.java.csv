commented;modifiers;parameterAmount;loc;comment;code
true;protected;0;4;/**  * Create a new Channel instance to hold the entries.  * <p>By default returns an RSS 2.0 channel, but the subclass can specify any channel.  */ ;/**  * Create a new Channel instance to hold the entries.  * <p>By default returns an RSS 2.0 channel, but the subclass can specify any channel.  */ @Override protected Channel newFeed() {     return new Channel("rss_2.0"). }
true;protected,final;4;7;/**  * Invokes {@link #buildFeedItems(Map, HttpServletRequest, HttpServletResponse)}  * to get a list of feed items.  */ ;/**  * Invokes {@link #buildFeedItems(Map, HttpServletRequest, HttpServletResponse)}  * to get a list of feed items.  */ @Override protected final void buildFeedEntries(Map<String, Object> model, Channel channel, HttpServletRequest request, HttpServletResponse response) throws Exception {     List<Item> items = buildFeedItems(model, request, response).     channel.setItems(items). }
true;protected,abstract;3;3;/**  * Subclasses must implement this method to build feed items, given the model.  * <p>Note that the passed-in HTTP response is just supposed to be used for  * setting cookies or other HTTP headers. The built feed itself will automatically  * get written to the response after this method returns.  * @param model	the model Map  * @param request  in case we need locale etc. Shouldn't look at attributes.  * @param response in case we need to set cookies. Shouldn't write to it.  * @return the feed items to be added to the feed  * @throws Exception any exception that occurred during document building  * @see Item  */ ;/**  * Subclasses must implement this method to build feed items, given the model.  * <p>Note that the passed-in HTTP response is just supposed to be used for  * setting cookies or other HTTP headers. The built feed itself will automatically  * get written to the response after this method returns.  * @param model	the model Map  * @param request  in case we need locale etc. Shouldn't look at attributes.  * @param response in case we need to set cookies. Shouldn't write to it.  * @return the feed items to be added to the feed  * @throws Exception any exception that occurred during document building  * @see Item  */ protected abstract List<Item> buildFeedItems(Map<String, Object> model, HttpServletRequest request, HttpServletResponse response) throws Exception.
