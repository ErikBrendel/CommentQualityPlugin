commented;modifiers;parameterAmount;loc;comment;code
false;public;1;4;;@Override public boolean supportsReturnType(MethodParameter returnType) {     return WebAsyncTask.class.isAssignableFrom(returnType.getParameterType()). }
false;public;4;15;;@Override public void handleReturnValue(@Nullable Object returnValue, MethodParameter returnType, ModelAndViewContainer mavContainer, NativeWebRequest webRequest) throws Exception {     if (returnValue == null) {         mavContainer.setRequestHandled(true).         return.     }     WebAsyncTask<?> webAsyncTask = (WebAsyncTask<?>) returnValue.     if (this.beanFactory != null) {         webAsyncTask.setBeanFactory(this.beanFactory).     }     WebAsyncUtils.getAsyncManager(webRequest).startCallableProcessing(webAsyncTask, mavContainer). }
