# id;timestamp;commentText;codeText;commentWords;codeWords
AbstractAnnotationConfigDispatcherServletInitializer -> @Override 	protected WebApplicationContext createRootApplicationContext();1337697865;{@inheritDoc}_<p>This implementation creates an {@link AnnotationConfigWebApplicationContext},_providing it the annotated classes returned by {@link #getRootConfigClasses()}._Returns {@code null} if {@link #getRootConfigClasses()} returns {@code null}.;@Override_	protected WebApplicationContext createRootApplicationContext() {_		Class<?>[] rootConfigClasses = this.getRootConfigClasses()__		if (!ObjectUtils.isEmpty(rootConfigClasses)) {_			AnnotationConfigWebApplicationContext rootAppContext =_					new AnnotationConfigWebApplicationContext()__			rootAppContext.register(rootConfigClasses)__			return rootAppContext__		}_		else {_			return null__		}_	};inherit,doc,p,this,implementation,creates,an,link,annotation,config,web,application,context,providing,it,the,annotated,classes,returned,by,link,get,root,config,classes,returns,code,null,if,link,get,root,config,classes,returns,code,null;override,protected,web,application,context,create,root,application,context,class,root,config,classes,this,get,root,config,classes,if,object,utils,is,empty,root,config,classes,annotation,config,web,application,context,root,app,context,new,annotation,config,web,application,context,root,app,context,register,root,config,classes,return,root,app,context,else,return,null
AbstractAnnotationConfigDispatcherServletInitializer -> @Override 	protected WebApplicationContext createRootApplicationContext();1375722796;{@inheritDoc}_<p>This implementation creates an {@link AnnotationConfigWebApplicationContext},_providing it the annotated classes returned by {@link #getRootConfigClasses()}._Returns {@code null} if {@link #getRootConfigClasses()} returns {@code null}.;@Override_	protected WebApplicationContext createRootApplicationContext() {_		Class<?>[] rootConfigClasses = this.getRootConfigClasses()__		if (!ObjectUtils.isEmpty(rootConfigClasses)) {_			AnnotationConfigWebApplicationContext rootAppContext =_					new AnnotationConfigWebApplicationContext()__			rootAppContext.register(rootConfigClasses)__			return rootAppContext__		}_		else {_			return null__		}_	};inherit,doc,p,this,implementation,creates,an,link,annotation,config,web,application,context,providing,it,the,annotated,classes,returned,by,link,get,root,config,classes,returns,code,null,if,link,get,root,config,classes,returns,code,null;override,protected,web,application,context,create,root,application,context,class,root,config,classes,this,get,root,config,classes,if,object,utils,is,empty,root,config,classes,annotation,config,web,application,context,root,app,context,new,annotation,config,web,application,context,root,app,context,register,root,config,classes,return,root,app,context,else,return,null
AbstractAnnotationConfigDispatcherServletInitializer -> @Override 	protected WebApplicationContext createRootApplicationContext();1390579752;{@inheritDoc}_<p>This implementation creates an {@link AnnotationConfigWebApplicationContext},_providing it the annotated classes returned by {@link #getRootConfigClasses()}._Returns {@code null} if {@link #getRootConfigClasses()} returns {@code null}.;@Override_	protected WebApplicationContext createRootApplicationContext() {_		Class<?>[] rootConfigClasses = this.getRootConfigClasses()__		if (!ObjectUtils.isEmpty(rootConfigClasses)) {_			AnnotationConfigWebApplicationContext rootAppContext = new AnnotationConfigWebApplicationContext()__			rootAppContext.register(rootConfigClasses)__			return rootAppContext__		}_		else {_			return null__		}_	};inherit,doc,p,this,implementation,creates,an,link,annotation,config,web,application,context,providing,it,the,annotated,classes,returned,by,link,get,root,config,classes,returns,code,null,if,link,get,root,config,classes,returns,code,null;override,protected,web,application,context,create,root,application,context,class,root,config,classes,this,get,root,config,classes,if,object,utils,is,empty,root,config,classes,annotation,config,web,application,context,root,app,context,new,annotation,config,web,application,context,root,app,context,register,root,config,classes,return,root,app,context,else,return,null
AbstractAnnotationConfigDispatcherServletInitializer -> @Override 	protected WebApplicationContext createRootApplicationContext();1390584631;{@inheritDoc}_<p>This implementation creates an {@link AnnotationConfigWebApplicationContext},_providing it the annotated classes returned by {@link #getRootConfigClasses()}._Returns {@code null} if {@link #getRootConfigClasses()} returns {@code null}.;@Override_	protected WebApplicationContext createRootApplicationContext() {_		Class<?>[] configClasses = getRootConfigClasses()__		if (!ObjectUtils.isEmpty(configClasses)) {_			AnnotationConfigWebApplicationContext rootAppContext = new AnnotationConfigWebApplicationContext()__			rootAppContext.register(configClasses)__			return rootAppContext__		}_		else {_			return null__		}_	};inherit,doc,p,this,implementation,creates,an,link,annotation,config,web,application,context,providing,it,the,annotated,classes,returned,by,link,get,root,config,classes,returns,code,null,if,link,get,root,config,classes,returns,code,null;override,protected,web,application,context,create,root,application,context,class,config,classes,get,root,config,classes,if,object,utils,is,empty,config,classes,annotation,config,web,application,context,root,app,context,new,annotation,config,web,application,context,root,app,context,register,config,classes,return,root,app,context,else,return,null
AbstractAnnotationConfigDispatcherServletInitializer -> @Override 	protected WebApplicationContext createRootApplicationContext();1406671565;{@inheritDoc}_<p>This implementation creates an {@link AnnotationConfigWebApplicationContext},_providing it the annotated classes returned by {@link #getRootConfigClasses()}._Returns {@code null} if {@link #getRootConfigClasses()} returns {@code null}.;@Override_	protected WebApplicationContext createRootApplicationContext() {_		Class<?>[] configClasses = getRootConfigClasses()__		if (!ObjectUtils.isEmpty(configClasses)) {_			AnnotationConfigWebApplicationContext rootAppContext = new AnnotationConfigWebApplicationContext()__			rootAppContext.register(configClasses)__			return rootAppContext__		}_		else {_			return null__		}_	};inherit,doc,p,this,implementation,creates,an,link,annotation,config,web,application,context,providing,it,the,annotated,classes,returned,by,link,get,root,config,classes,returns,code,null,if,link,get,root,config,classes,returns,code,null;override,protected,web,application,context,create,root,application,context,class,config,classes,get,root,config,classes,if,object,utils,is,empty,config,classes,annotation,config,web,application,context,root,app,context,new,annotation,config,web,application,context,root,app,context,register,config,classes,return,root,app,context,else,return,null
AbstractAnnotationConfigDispatcherServletInitializer -> @Override 	protected WebApplicationContext createRootApplicationContext();1456850332;{@inheritDoc}_<p>This implementation creates an {@link AnnotationConfigWebApplicationContext},_providing it the annotated classes returned by {@link #getRootConfigClasses()}._Returns {@code null} if {@link #getRootConfigClasses()} returns {@code null}.;@Override_	protected WebApplicationContext createRootApplicationContext() {_		Class<?>[] configClasses = getRootConfigClasses()__		if (!ObjectUtils.isEmpty(configClasses)) {_			AnnotationConfigWebApplicationContext rootAppContext = new AnnotationConfigWebApplicationContext()__			rootAppContext.register(configClasses)__			return rootAppContext__		}_		else {_			return null__		}_	};inherit,doc,p,this,implementation,creates,an,link,annotation,config,web,application,context,providing,it,the,annotated,classes,returned,by,link,get,root,config,classes,returns,code,null,if,link,get,root,config,classes,returns,code,null;override,protected,web,application,context,create,root,application,context,class,config,classes,get,root,config,classes,if,object,utils,is,empty,config,classes,annotation,config,web,application,context,root,app,context,new,annotation,config,web,application,context,root,app,context,register,config,classes,return,root,app,context,else,return,null
AbstractAnnotationConfigDispatcherServletInitializer -> @Override 	protected WebApplicationContext createServletApplicationContext();1337697865;{@inheritDoc}_<p>This implementation creates an {@link AnnotationConfigWebApplicationContext},_providing it the annotated classes returned by {@link #getServletConfigClasses()}._@throws IllegalArgumentException if {@link #getServletConfigClasses()} returns_empty or {@code null};@Override_	protected WebApplicationContext createServletApplicationContext() {_		AnnotationConfigWebApplicationContext servletAppContext =_				new AnnotationConfigWebApplicationContext()__		Class<?>[] servletConfigClasses = this.getServletConfigClasses()__		Assert.notEmpty(servletConfigClasses,_				"getServletConfigClasses() did not return any configuration classes")___		servletAppContext.register(servletConfigClasses)__		return servletAppContext__	};inherit,doc,p,this,implementation,creates,an,link,annotation,config,web,application,context,providing,it,the,annotated,classes,returned,by,link,get,servlet,config,classes,throws,illegal,argument,exception,if,link,get,servlet,config,classes,returns,empty,or,code,null;override,protected,web,application,context,create,servlet,application,context,annotation,config,web,application,context,servlet,app,context,new,annotation,config,web,application,context,class,servlet,config,classes,this,get,servlet,config,classes,assert,not,empty,servlet,config,classes,get,servlet,config,classes,did,not,return,any,configuration,classes,servlet,app,context,register,servlet,config,classes,return,servlet,app,context
AbstractAnnotationConfigDispatcherServletInitializer -> @Override 	protected WebApplicationContext createServletApplicationContext();1375722796;{@inheritDoc}_<p>This implementation creates an {@link AnnotationConfigWebApplicationContext},_providing it the annotated classes returned by {@link #getServletConfigClasses()}._@throws IllegalArgumentException if {@link #getServletConfigClasses()} returns_empty or {@code null};@Override_	protected WebApplicationContext createServletApplicationContext() {_		AnnotationConfigWebApplicationContext servletAppContext =_				new AnnotationConfigWebApplicationContext()__		Class<?>[] servletConfigClasses = this.getServletConfigClasses()__		Assert.notEmpty(servletConfigClasses,_				"getServletConfigClasses() did not return any configuration classes")___		servletAppContext.register(servletConfigClasses)__		return servletAppContext__	};inherit,doc,p,this,implementation,creates,an,link,annotation,config,web,application,context,providing,it,the,annotated,classes,returned,by,link,get,servlet,config,classes,throws,illegal,argument,exception,if,link,get,servlet,config,classes,returns,empty,or,code,null;override,protected,web,application,context,create,servlet,application,context,annotation,config,web,application,context,servlet,app,context,new,annotation,config,web,application,context,class,servlet,config,classes,this,get,servlet,config,classes,assert,not,empty,servlet,config,classes,get,servlet,config,classes,did,not,return,any,configuration,classes,servlet,app,context,register,servlet,config,classes,return,servlet,app,context
AbstractAnnotationConfigDispatcherServletInitializer -> @Override 	protected WebApplicationContext createServletApplicationContext();1390579752;{@inheritDoc}_<p>This implementation creates an {@link AnnotationConfigWebApplicationContext},_providing it the annotated classes returned by {@link #getServletConfigClasses()}.;@Override_	protected WebApplicationContext createServletApplicationContext() {_		AnnotationConfigWebApplicationContext servletAppContext = new AnnotationConfigWebApplicationContext()__		Class<?>[] configClasses = this.getServletConfigClasses()__		if (!ObjectUtils.isEmpty(configClasses)) {_			servletAppContext.register(configClasses)__		}_		return servletAppContext__	};inherit,doc,p,this,implementation,creates,an,link,annotation,config,web,application,context,providing,it,the,annotated,classes,returned,by,link,get,servlet,config,classes;override,protected,web,application,context,create,servlet,application,context,annotation,config,web,application,context,servlet,app,context,new,annotation,config,web,application,context,class,config,classes,this,get,servlet,config,classes,if,object,utils,is,empty,config,classes,servlet,app,context,register,config,classes,return,servlet,app,context
AbstractAnnotationConfigDispatcherServletInitializer -> @Override 	protected WebApplicationContext createServletApplicationContext();1390584631;{@inheritDoc}_<p>This implementation creates an {@link AnnotationConfigWebApplicationContext},_providing it the annotated classes returned by {@link #getServletConfigClasses()}.;@Override_	protected WebApplicationContext createServletApplicationContext() {_		AnnotationConfigWebApplicationContext servletAppContext = new AnnotationConfigWebApplicationContext()__		Class<?>[] configClasses = getServletConfigClasses()__		if (!ObjectUtils.isEmpty(configClasses)) {_			servletAppContext.register(configClasses)__		}_		return servletAppContext__	};inherit,doc,p,this,implementation,creates,an,link,annotation,config,web,application,context,providing,it,the,annotated,classes,returned,by,link,get,servlet,config,classes;override,protected,web,application,context,create,servlet,application,context,annotation,config,web,application,context,servlet,app,context,new,annotation,config,web,application,context,class,config,classes,get,servlet,config,classes,if,object,utils,is,empty,config,classes,servlet,app,context,register,config,classes,return,servlet,app,context
AbstractAnnotationConfigDispatcherServletInitializer -> @Override 	protected WebApplicationContext createServletApplicationContext();1406671565;{@inheritDoc}_<p>This implementation creates an {@link AnnotationConfigWebApplicationContext},_providing it the annotated classes returned by {@link #getServletConfigClasses()}.;@Override_	protected WebApplicationContext createServletApplicationContext() {_		AnnotationConfigWebApplicationContext servletAppContext = new AnnotationConfigWebApplicationContext()__		Class<?>[] configClasses = getServletConfigClasses()__		if (!ObjectUtils.isEmpty(configClasses)) {_			servletAppContext.register(configClasses)__		}_		return servletAppContext__	};inherit,doc,p,this,implementation,creates,an,link,annotation,config,web,application,context,providing,it,the,annotated,classes,returned,by,link,get,servlet,config,classes;override,protected,web,application,context,create,servlet,application,context,annotation,config,web,application,context,servlet,app,context,new,annotation,config,web,application,context,class,config,classes,get,servlet,config,classes,if,object,utils,is,empty,config,classes,servlet,app,context,register,config,classes,return,servlet,app,context
AbstractAnnotationConfigDispatcherServletInitializer -> @Override 	protected WebApplicationContext createServletApplicationContext();1456850332;{@inheritDoc}_<p>This implementation creates an {@link AnnotationConfigWebApplicationContext},_providing it the annotated classes returned by {@link #getServletConfigClasses()}.;@Override_	protected WebApplicationContext createServletApplicationContext() {_		AnnotationConfigWebApplicationContext servletAppContext = new AnnotationConfigWebApplicationContext()__		Class<?>[] configClasses = getServletConfigClasses()__		if (!ObjectUtils.isEmpty(configClasses)) {_			servletAppContext.register(configClasses)__		}_		return servletAppContext__	};inherit,doc,p,this,implementation,creates,an,link,annotation,config,web,application,context,providing,it,the,annotated,classes,returned,by,link,get,servlet,config,classes;override,protected,web,application,context,create,servlet,application,context,annotation,config,web,application,context,servlet,app,context,new,annotation,config,web,application,context,class,config,classes,get,servlet,config,classes,if,object,utils,is,empty,config,classes,servlet,app,context,register,config,classes,return,servlet,app,context
AbstractAnnotationConfigDispatcherServletInitializer -> @Override 	protected WebApplicationContext createServletApplicationContext();1495868221;{@inheritDoc}_<p>This implementation creates an {@link AnnotationConfigWebApplicationContext},_providing it the annotated classes returned by {@link #getServletConfigClasses()}.;@Override_	protected WebApplicationContext createServletApplicationContext() {_		AnnotationConfigWebApplicationContext servletAppContext = new AnnotationConfigWebApplicationContext()__		Class<?>[] configClasses = getServletConfigClasses()__		if (!ObjectUtils.isEmpty(configClasses)) {_			servletAppContext.register(configClasses)__		}_		return servletAppContext__	};inherit,doc,p,this,implementation,creates,an,link,annotation,config,web,application,context,providing,it,the,annotated,classes,returned,by,link,get,servlet,config,classes;override,protected,web,application,context,create,servlet,application,context,annotation,config,web,application,context,servlet,app,context,new,annotation,config,web,application,context,class,config,classes,get,servlet,config,classes,if,object,utils,is,empty,config,classes,servlet,app,context,register,config,classes,return,servlet,app,context
AbstractAnnotationConfigDispatcherServletInitializer -> @Override 	protected WebApplicationContext createServletApplicationContext();1508291397;{@inheritDoc}_<p>This implementation creates an {@link AnnotationConfigWebApplicationContext},_providing it the annotated classes returned by {@link #getServletConfigClasses()}.;@Override_	protected WebApplicationContext createServletApplicationContext() {_		AnnotationConfigWebApplicationContext context = new AnnotationConfigWebApplicationContext()__		Class<?>[] configClasses = getServletConfigClasses()__		if (!ObjectUtils.isEmpty(configClasses)) {_			context.register(configClasses)__		}_		return context__	};inherit,doc,p,this,implementation,creates,an,link,annotation,config,web,application,context,providing,it,the,annotated,classes,returned,by,link,get,servlet,config,classes;override,protected,web,application,context,create,servlet,application,context,annotation,config,web,application,context,context,new,annotation,config,web,application,context,class,config,classes,get,servlet,config,classes,if,object,utils,is,empty,config,classes,context,register,config,classes,return,context
AbstractAnnotationConfigDispatcherServletInitializer -> @Override 	protected WebApplicationContext createServletApplicationContext();1530174524;{@inheritDoc}_<p>This implementation creates an {@link AnnotationConfigWebApplicationContext},_providing it the annotated classes returned by {@link #getServletConfigClasses()}.;@Override_	protected WebApplicationContext createServletApplicationContext() {_		AnnotationConfigWebApplicationContext context = new AnnotationConfigWebApplicationContext()__		Class<?>[] configClasses = getServletConfigClasses()__		if (!ObjectUtils.isEmpty(configClasses)) {_			context.register(configClasses)__		}_		return context__	};inherit,doc,p,this,implementation,creates,an,link,annotation,config,web,application,context,providing,it,the,annotated,classes,returned,by,link,get,servlet,config,classes;override,protected,web,application,context,create,servlet,application,context,annotation,config,web,application,context,context,new,annotation,config,web,application,context,class,config,classes,get,servlet,config,classes,if,object,utils,is,empty,config,classes,context,register,config,classes,return,context
AbstractAnnotationConfigDispatcherServletInitializer -> protected abstract Class<?>[] getRootConfigClasses()_;1337697865;Specify {@link org.springframework.context.annotation.Configuration @Configuration}_and/or {@link org.springframework.stereotype.Component @Component} classes to be_provided to the {@linkplain #createRootApplicationContext() root application context}._@return the configuration classes for the root application context, or {@code null}_if creation and registration of a root context is not desired;protected abstract Class<?>[] getRootConfigClasses()_;specify,link,org,springframework,context,annotation,configuration,configuration,and,or,link,org,springframework,stereotype,component,component,classes,to,be,provided,to,the,linkplain,create,root,application,context,root,application,context,return,the,configuration,classes,for,the,root,application,context,or,code,null,if,creation,and,registration,of,a,root,context,is,not,desired;protected,abstract,class,get,root,config,classes
AbstractAnnotationConfigDispatcherServletInitializer -> protected abstract Class<?>[] getRootConfigClasses()_;1375722796;Specify {@link org.springframework.context.annotation.Configuration @Configuration}_and/or {@link org.springframework.stereotype.Component @Component} classes to be_provided to the {@linkplain #createRootApplicationContext() root application context}._@return the configuration classes for the root application context, or {@code null}_if creation and registration of a root context is not desired;protected abstract Class<?>[] getRootConfigClasses()_;specify,link,org,springframework,context,annotation,configuration,configuration,and,or,link,org,springframework,stereotype,component,component,classes,to,be,provided,to,the,linkplain,create,root,application,context,root,application,context,return,the,configuration,classes,for,the,root,application,context,or,code,null,if,creation,and,registration,of,a,root,context,is,not,desired;protected,abstract,class,get,root,config,classes
AbstractAnnotationConfigDispatcherServletInitializer -> protected abstract Class<?>[] getRootConfigClasses()_;1390579752;Specify {@link org.springframework.context.annotation.Configuration @Configuration}_and/or {@link org.springframework.stereotype.Component @Component} classes to be_provided to the {@linkplain #createRootApplicationContext() root application context}._@return the configuration classes for the root application context, or {@code null}_if creation and registration of a root context is not desired;protected abstract Class<?>[] getRootConfigClasses()_;specify,link,org,springframework,context,annotation,configuration,configuration,and,or,link,org,springframework,stereotype,component,component,classes,to,be,provided,to,the,linkplain,create,root,application,context,root,application,context,return,the,configuration,classes,for,the,root,application,context,or,code,null,if,creation,and,registration,of,a,root,context,is,not,desired;protected,abstract,class,get,root,config,classes
AbstractAnnotationConfigDispatcherServletInitializer -> protected abstract Class<?>[] getRootConfigClasses()_;1390584631;Specify {@link org.springframework.context.annotation.Configuration @Configuration}_and/or {@link org.springframework.stereotype.Component @Component} classes to be_provided to the {@linkplain #createRootApplicationContext() root application context}._@return the configuration classes for the root application context, or {@code null}_if creation and registration of a root context is not desired;protected abstract Class<?>[] getRootConfigClasses()_;specify,link,org,springframework,context,annotation,configuration,configuration,and,or,link,org,springframework,stereotype,component,component,classes,to,be,provided,to,the,linkplain,create,root,application,context,root,application,context,return,the,configuration,classes,for,the,root,application,context,or,code,null,if,creation,and,registration,of,a,root,context,is,not,desired;protected,abstract,class,get,root,config,classes
AbstractAnnotationConfigDispatcherServletInitializer -> protected abstract Class<?>[] getRootConfigClasses()_;1406671565;Specify {@link org.springframework.context.annotation.Configuration @Configuration}_and/or {@link org.springframework.stereotype.Component @Component} classes to be_provided to the {@linkplain #createRootApplicationContext() root application context}._@return the configuration classes for the root application context, or {@code null}_if creation and registration of a root context is not desired;protected abstract Class<?>[] getRootConfigClasses()_;specify,link,org,springframework,context,annotation,configuration,configuration,and,or,link,org,springframework,stereotype,component,component,classes,to,be,provided,to,the,linkplain,create,root,application,context,root,application,context,return,the,configuration,classes,for,the,root,application,context,or,code,null,if,creation,and,registration,of,a,root,context,is,not,desired;protected,abstract,class,get,root,config,classes
AbstractAnnotationConfigDispatcherServletInitializer -> protected abstract Class<?>[] getRootConfigClasses()_;1456850332;Specify {@link org.springframework.context.annotation.Configuration @Configuration}_and/or {@link org.springframework.stereotype.Component @Component} classes to be_provided to the {@linkplain #createRootApplicationContext() root application context}._@return the configuration classes for the root application context, or {@code null}_if creation and registration of a root context is not desired;protected abstract Class<?>[] getRootConfigClasses()_;specify,link,org,springframework,context,annotation,configuration,configuration,and,or,link,org,springframework,stereotype,component,component,classes,to,be,provided,to,the,linkplain,create,root,application,context,root,application,context,return,the,configuration,classes,for,the,root,application,context,or,code,null,if,creation,and,registration,of,a,root,context,is,not,desired;protected,abstract,class,get,root,config,classes
AbstractAnnotationConfigDispatcherServletInitializer -> @Nullable 	protected abstract Class<?>[] getRootConfigClasses()_;1495868221;Specify {@link org.springframework.context.annotation.Configuration @Configuration}_and/or {@link org.springframework.stereotype.Component @Component} classes to be_provided to the {@linkplain #createRootApplicationContext() root application context}._@return the configuration classes for the root application context, or {@code null}_if creation and registration of a root context is not desired;@Nullable_	protected abstract Class<?>[] getRootConfigClasses()_;specify,link,org,springframework,context,annotation,configuration,configuration,and,or,link,org,springframework,stereotype,component,component,classes,to,be,provided,to,the,linkplain,create,root,application,context,root,application,context,return,the,configuration,classes,for,the,root,application,context,or,code,null,if,creation,and,registration,of,a,root,context,is,not,desired;nullable,protected,abstract,class,get,root,config,classes
AbstractAnnotationConfigDispatcherServletInitializer -> @Nullable 	protected abstract Class<?>[] getRootConfigClasses()_;1508291397;Specify {@code @Configuration} and/or {@code @Component} classes for the_{@linkplain #createRootApplicationContext() root application context}._@return the configuration for the root application context, or {@code null}_if creation and registration of a root context is not desired;@Nullable_	protected abstract Class<?>[] getRootConfigClasses()_;specify,code,configuration,and,or,code,component,classes,for,the,linkplain,create,root,application,context,root,application,context,return,the,configuration,for,the,root,application,context,or,code,null,if,creation,and,registration,of,a,root,context,is,not,desired;nullable,protected,abstract,class,get,root,config,classes
AbstractAnnotationConfigDispatcherServletInitializer -> @Nullable 	protected abstract Class<?>[] getRootConfigClasses()_;1530174524;Specify {@code @Configuration} and/or {@code @Component} classes for the_{@linkplain #createRootApplicationContext() root application context}._@return the configuration for the root application context, or {@code null}_if creation and registration of a root context is not desired;@Nullable_	protected abstract Class<?>[] getRootConfigClasses()_;specify,code,configuration,and,or,code,component,classes,for,the,linkplain,create,root,application,context,root,application,context,return,the,configuration,for,the,root,application,context,or,code,null,if,creation,and,registration,of,a,root,context,is,not,desired;nullable,protected,abstract,class,get,root,config,classes
AbstractAnnotationConfigDispatcherServletInitializer -> protected abstract Class<?>[] getServletConfigClasses()_;1337697865;Specify {@link org.springframework.context.annotation.Configuration @Configuration}_and/or {@link org.springframework.stereotype.Component @Component} classes to be_provided to the {@linkplain #createServletApplicationContext() dispatcher servlet_application context}._@return the configuration classes for the dispatcher servlet application context_(may not be empty or {@code null}).;protected abstract Class<?>[] getServletConfigClasses()_;specify,link,org,springframework,context,annotation,configuration,configuration,and,or,link,org,springframework,stereotype,component,component,classes,to,be,provided,to,the,linkplain,create,servlet,application,context,dispatcher,servlet,application,context,return,the,configuration,classes,for,the,dispatcher,servlet,application,context,may,not,be,empty,or,code,null;protected,abstract,class,get,servlet,config,classes
AbstractAnnotationConfigDispatcherServletInitializer -> protected abstract Class<?>[] getServletConfigClasses()_;1375722796;Specify {@link org.springframework.context.annotation.Configuration @Configuration}_and/or {@link org.springframework.stereotype.Component @Component} classes to be_provided to the {@linkplain #createServletApplicationContext() dispatcher servlet_application context}._@return the configuration classes for the dispatcher servlet application context_(may not be empty or {@code null}).;protected abstract Class<?>[] getServletConfigClasses()_;specify,link,org,springframework,context,annotation,configuration,configuration,and,or,link,org,springframework,stereotype,component,component,classes,to,be,provided,to,the,linkplain,create,servlet,application,context,dispatcher,servlet,application,context,return,the,configuration,classes,for,the,dispatcher,servlet,application,context,may,not,be,empty,or,code,null;protected,abstract,class,get,servlet,config,classes
AbstractAnnotationConfigDispatcherServletInitializer -> protected abstract Class<?>[] getServletConfigClasses()_;1390579752;Specify {@link org.springframework.context.annotation.Configuration @Configuration}_and/or {@link org.springframework.stereotype.Component @Component} classes to be_provided to the {@linkplain #createServletApplicationContext() dispatcher servlet_application context}._@return the configuration classes for the dispatcher servlet application context_(may not be empty or {@code null}).;protected abstract Class<?>[] getServletConfigClasses()_;specify,link,org,springframework,context,annotation,configuration,configuration,and,or,link,org,springframework,stereotype,component,component,classes,to,be,provided,to,the,linkplain,create,servlet,application,context,dispatcher,servlet,application,context,return,the,configuration,classes,for,the,dispatcher,servlet,application,context,may,not,be,empty,or,code,null;protected,abstract,class,get,servlet,config,classes
AbstractAnnotationConfigDispatcherServletInitializer -> protected abstract Class<?>[] getServletConfigClasses()_;1390584631;Specify {@link org.springframework.context.annotation.Configuration @Configuration}_and/or {@link org.springframework.stereotype.Component @Component} classes to be_provided to the {@linkplain #createServletApplicationContext() dispatcher servlet_application context}._@return the configuration classes for the dispatcher servlet application context_(may not be empty or {@code null});protected abstract Class<?>[] getServletConfigClasses()_;specify,link,org,springframework,context,annotation,configuration,configuration,and,or,link,org,springframework,stereotype,component,component,classes,to,be,provided,to,the,linkplain,create,servlet,application,context,dispatcher,servlet,application,context,return,the,configuration,classes,for,the,dispatcher,servlet,application,context,may,not,be,empty,or,code,null;protected,abstract,class,get,servlet,config,classes
AbstractAnnotationConfigDispatcherServletInitializer -> protected abstract Class<?>[] getServletConfigClasses()_;1406671565;Specify {@link org.springframework.context.annotation.Configuration @Configuration}_and/or {@link org.springframework.stereotype.Component @Component} classes to be_provided to the {@linkplain #createServletApplicationContext() dispatcher servlet_application context}._@return the configuration classes for the dispatcher servlet application context or_{@code null} if all configuration is specified through root config classes.;protected abstract Class<?>[] getServletConfigClasses()_;specify,link,org,springframework,context,annotation,configuration,configuration,and,or,link,org,springframework,stereotype,component,component,classes,to,be,provided,to,the,linkplain,create,servlet,application,context,dispatcher,servlet,application,context,return,the,configuration,classes,for,the,dispatcher,servlet,application,context,or,code,null,if,all,configuration,is,specified,through,root,config,classes;protected,abstract,class,get,servlet,config,classes
AbstractAnnotationConfigDispatcherServletInitializer -> protected abstract Class<?>[] getServletConfigClasses()_;1456850332;Specify {@link org.springframework.context.annotation.Configuration @Configuration}_and/or {@link org.springframework.stereotype.Component @Component} classes to be_provided to the {@linkplain #createServletApplicationContext() dispatcher servlet_application context}._@return the configuration classes for the dispatcher servlet application context or_{@code null} if all configuration is specified through root config classes.;protected abstract Class<?>[] getServletConfigClasses()_;specify,link,org,springframework,context,annotation,configuration,configuration,and,or,link,org,springframework,stereotype,component,component,classes,to,be,provided,to,the,linkplain,create,servlet,application,context,dispatcher,servlet,application,context,return,the,configuration,classes,for,the,dispatcher,servlet,application,context,or,code,null,if,all,configuration,is,specified,through,root,config,classes;protected,abstract,class,get,servlet,config,classes
AbstractAnnotationConfigDispatcherServletInitializer -> @Override 	@Nullable 	protected WebApplicationContext createRootApplicationContext();1495868221;{@inheritDoc}_<p>This implementation creates an {@link AnnotationConfigWebApplicationContext},_providing it the annotated classes returned by {@link #getRootConfigClasses()}._Returns {@code null} if {@link #getRootConfigClasses()} returns {@code null}.;@Override_	@Nullable_	protected WebApplicationContext createRootApplicationContext() {_		Class<?>[] configClasses = getRootConfigClasses()__		if (!ObjectUtils.isEmpty(configClasses)) {_			AnnotationConfigWebApplicationContext rootAppContext = new AnnotationConfigWebApplicationContext()__			rootAppContext.register(configClasses)__			return rootAppContext__		}_		else {_			return null__		}_	};inherit,doc,p,this,implementation,creates,an,link,annotation,config,web,application,context,providing,it,the,annotated,classes,returned,by,link,get,root,config,classes,returns,code,null,if,link,get,root,config,classes,returns,code,null;override,nullable,protected,web,application,context,create,root,application,context,class,config,classes,get,root,config,classes,if,object,utils,is,empty,config,classes,annotation,config,web,application,context,root,app,context,new,annotation,config,web,application,context,root,app,context,register,config,classes,return,root,app,context,else,return,null
AbstractAnnotationConfigDispatcherServletInitializer -> @Override 	@Nullable 	protected WebApplicationContext createRootApplicationContext();1508291397;{@inheritDoc}_<p>This implementation creates an {@link AnnotationConfigWebApplicationContext},_providing it the annotated classes returned by {@link #getRootConfigClasses()}._Returns {@code null} if {@link #getRootConfigClasses()} returns {@code null}.;@Override_	@Nullable_	protected WebApplicationContext createRootApplicationContext() {_		Class<?>[] configClasses = getRootConfigClasses()__		if (!ObjectUtils.isEmpty(configClasses)) {_			AnnotationConfigWebApplicationContext context = new AnnotationConfigWebApplicationContext()__			context.register(configClasses)__			return context__		}_		else {_			return null__		}_	};inherit,doc,p,this,implementation,creates,an,link,annotation,config,web,application,context,providing,it,the,annotated,classes,returned,by,link,get,root,config,classes,returns,code,null,if,link,get,root,config,classes,returns,code,null;override,nullable,protected,web,application,context,create,root,application,context,class,config,classes,get,root,config,classes,if,object,utils,is,empty,config,classes,annotation,config,web,application,context,context,new,annotation,config,web,application,context,context,register,config,classes,return,context,else,return,null
AbstractAnnotationConfigDispatcherServletInitializer -> @Override 	@Nullable 	protected WebApplicationContext createRootApplicationContext();1530174524;{@inheritDoc}_<p>This implementation creates an {@link AnnotationConfigWebApplicationContext},_providing it the annotated classes returned by {@link #getRootConfigClasses()}._Returns {@code null} if {@link #getRootConfigClasses()} returns {@code null}.;@Override_	@Nullable_	protected WebApplicationContext createRootApplicationContext() {_		Class<?>[] configClasses = getRootConfigClasses()__		if (!ObjectUtils.isEmpty(configClasses)) {_			AnnotationConfigWebApplicationContext context = new AnnotationConfigWebApplicationContext()__			context.register(configClasses)__			return context__		}_		else {_			return null__		}_	};inherit,doc,p,this,implementation,creates,an,link,annotation,config,web,application,context,providing,it,the,annotated,classes,returned,by,link,get,root,config,classes,returns,code,null,if,link,get,root,config,classes,returns,code,null;override,nullable,protected,web,application,context,create,root,application,context,class,config,classes,get,root,config,classes,if,object,utils,is,empty,config,classes,annotation,config,web,application,context,context,new,annotation,config,web,application,context,context,register,config,classes,return,context,else,return,null
AbstractAnnotationConfigDispatcherServletInitializer -> @Nullable 	protected abstract Class<?>[] getServletConfigClasses()_;1495868221;Specify {@link org.springframework.context.annotation.Configuration @Configuration}_and/or {@link org.springframework.stereotype.Component @Component} classes to be_provided to the {@linkplain #createServletApplicationContext() dispatcher servlet_application context}._@return the configuration classes for the dispatcher servlet application context or_{@code null} if all configuration is specified through root config classes.;@Nullable_	protected abstract Class<?>[] getServletConfigClasses()_;specify,link,org,springframework,context,annotation,configuration,configuration,and,or,link,org,springframework,stereotype,component,component,classes,to,be,provided,to,the,linkplain,create,servlet,application,context,dispatcher,servlet,application,context,return,the,configuration,classes,for,the,dispatcher,servlet,application,context,or,code,null,if,all,configuration,is,specified,through,root,config,classes;nullable,protected,abstract,class,get,servlet,config,classes
AbstractAnnotationConfigDispatcherServletInitializer -> @Nullable 	protected abstract Class<?>[] getServletConfigClasses()_;1508291397;Specify {@code @Configuration} and/or {@code @Component} classes for the_{@linkplain #createServletApplicationContext() Servlet application context}._@return the configuration for the Servlet application context, or_{@code null} if all configuration is specified through root config classes.;@Nullable_	protected abstract Class<?>[] getServletConfigClasses()_;specify,code,configuration,and,or,code,component,classes,for,the,linkplain,create,servlet,application,context,servlet,application,context,return,the,configuration,for,the,servlet,application,context,or,code,null,if,all,configuration,is,specified,through,root,config,classes;nullable,protected,abstract,class,get,servlet,config,classes
AbstractAnnotationConfigDispatcherServletInitializer -> @Nullable 	protected abstract Class<?>[] getServletConfigClasses()_;1530174524;Specify {@code @Configuration} and/or {@code @Component} classes for the_{@linkplain #createServletApplicationContext() Servlet application context}._@return the configuration for the Servlet application context, or_{@code null} if all configuration is specified through root config classes.;@Nullable_	protected abstract Class<?>[] getServletConfigClasses()_;specify,code,configuration,and,or,code,component,classes,for,the,linkplain,create,servlet,application,context,servlet,application,context,return,the,configuration,for,the,servlet,application,context,or,code,null,if,all,configuration,is,specified,through,root,config,classes;nullable,protected,abstract,class,get,servlet,config,classes
