commented;modifiers;parameterAmount;loc;comment;code
false;public;1;6;;@Override public boolean supportsParameter(MethodParameter parameter) {     PathVariable ann = parameter.getParameterAnnotation(PathVariable.class).     return (ann != null && Map.class.isAssignableFrom(parameter.getParameterType()) && !StringUtils.hasText(ann.value())). }
true;public;4;16;/**  * Return a Map with all URI template variables or an empty map.  */ ;/**  * Return a Map with all URI template variables or an empty map.  */ @Override public Object resolveArgument(MethodParameter parameter, @Nullable ModelAndViewContainer mavContainer, NativeWebRequest webRequest, @Nullable WebDataBinderFactory binderFactory) throws Exception {     @SuppressWarnings("unchecked")     Map<String, String> uriTemplateVars = (Map<String, String>) webRequest.getAttribute(HandlerMapping.URI_TEMPLATE_VARIABLES_ATTRIBUTE, RequestAttributes.SCOPE_REQUEST).     if (!CollectionUtils.isEmpty(uriTemplateVars)) {         return new LinkedHashMap<>(uriTemplateVars).     } else {         return Collections.emptyMap().     } }
