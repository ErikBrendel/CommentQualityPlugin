commented;modifiers;parameterAmount;loc;comment;code
true;public;1;3;/**  * Set the name of the default Servlet to be forwarded to for static resource requests.  */ ;/**  * Set the name of the default Servlet to be forwarded to for static resource requests.  */ public void setDefaultServletName(String defaultServletName) {     this.defaultServletName = defaultServletName. }
true;public;1;25;/**  * If the {@code defaultServletName} property has not been explicitly set,  * attempts to locate the default Servlet using the known common  * container-specific names.  */ ;/**  * If the {@code defaultServletName} property has not been explicitly set,  * attempts to locate the default Servlet using the known common  * container-specific names.  */ @Override public void setServletContext(ServletContext servletContext) {     this.servletContext = servletContext.     if (!StringUtils.hasText(this.defaultServletName)) {         if (this.servletContext.getNamedDispatcher(COMMON_DEFAULT_SERVLET_NAME) != null) {             this.defaultServletName = COMMON_DEFAULT_SERVLET_NAME.         } else if (this.servletContext.getNamedDispatcher(GAE_DEFAULT_SERVLET_NAME) != null) {             this.defaultServletName = GAE_DEFAULT_SERVLET_NAME.         } else if (this.servletContext.getNamedDispatcher(RESIN_DEFAULT_SERVLET_NAME) != null) {             this.defaultServletName = RESIN_DEFAULT_SERVLET_NAME.         } else if (this.servletContext.getNamedDispatcher(WEBLOGIC_DEFAULT_SERVLET_NAME) != null) {             this.defaultServletName = WEBLOGIC_DEFAULT_SERVLET_NAME.         } else if (this.servletContext.getNamedDispatcher(WEBSPHERE_DEFAULT_SERVLET_NAME) != null) {             this.defaultServletName = WEBSPHERE_DEFAULT_SERVLET_NAME.         } else {             throw new IllegalStateException("Unable to locate the default servlet for serving static content. " + "Please set the 'defaultServletName' property explicitly.").         }     } }
false;public;2;12;;@Override public void handleRequest(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {     Assert.state(this.servletContext != null, "No ServletContext set").     RequestDispatcher rd = this.servletContext.getNamedDispatcher(this.defaultServletName).     if (rd == null) {         throw new IllegalStateException("A RequestDispatcher could not be located for the default servlet '" + this.defaultServletName + "'").     }     rd.forward(request, response). }
