# id;timestamp;commentText;codeText;commentWords;codeWords
ResourceTransformerSupport -> public void setResourceUrlProvider(@Nullable ResourceUrlProvider resourceUrlProvider);1500448076;Configure a {@link ResourceUrlProvider} to use when resolving the public_URL of links in a transformed resource (e.g. import links in a CSS file)._This is required only for links expressed as full paths and not for_relative links.;public void setResourceUrlProvider(@Nullable ResourceUrlProvider resourceUrlProvider) {_		this.resourceUrlProvider = resourceUrlProvider__	};configure,a,link,resource,url,provider,to,use,when,resolving,the,public,url,of,links,in,a,transformed,resource,e,g,import,links,in,a,css,file,this,is,required,only,for,links,expressed,as,full,paths,and,not,for,relative,links;public,void,set,resource,url,provider,nullable,resource,url,provider,resource,url,provider,this,resource,url,provider,resource,url,provider
ResourceTransformerSupport -> public void setResourceUrlProvider(@Nullable ResourceUrlProvider resourceUrlProvider);1540478567;Configure a {@link ResourceUrlProvider} to use when resolving the public_URL of links in a transformed resource (e.g. import links in a CSS file)._This is required only for links expressed as full paths and not for_relative links.;public void setResourceUrlProvider(@Nullable ResourceUrlProvider resourceUrlProvider) {_		this.resourceUrlProvider = resourceUrlProvider__	};configure,a,link,resource,url,provider,to,use,when,resolving,the,public,url,of,links,in,a,transformed,resource,e,g,import,links,in,a,css,file,this,is,required,only,for,links,expressed,as,full,paths,and,not,for,relative,links;public,void,set,resource,url,provider,nullable,resource,url,provider,resource,url,provider,this,resource,url,provider,resource,url,provider
ResourceTransformerSupport -> public void setResourceUrlProvider(@Nullable ResourceUrlProvider resourceUrlProvider);1540547026;Configure a {@link ResourceUrlProvider} to use when resolving the public_URL of links in a transformed resource (e.g. import links in a CSS file)._This is required only for links expressed as full paths and not for_relative links.;public void setResourceUrlProvider(@Nullable ResourceUrlProvider resourceUrlProvider) {_		this.resourceUrlProvider = resourceUrlProvider__	};configure,a,link,resource,url,provider,to,use,when,resolving,the,public,url,of,links,in,a,transformed,resource,e,g,import,links,in,a,css,file,this,is,required,only,for,links,expressed,as,full,paths,and,not,for,relative,links;public,void,set,resource,url,provider,nullable,resource,url,provider,resource,url,provider,this,resource,url,provider,resource,url,provider
ResourceTransformerSupport -> public void setResourceUrlProvider(ResourceUrlProvider resourceUrlProvider);1409738772;Configure a {@link ResourceUrlProvider} to use when resolving the public_URL of links in a transformed resource (e.g. import links in a CSS file)._This is required only for links expressed as full paths, i.e. including_context and servlet path, and not for relative links.__<p>By default this property is not set. In that case if a_{@code ResourceUrlProvider} is needed an attempt is made to find the_{@code ResourceUrlProvider} exposed through the_{@link org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor_ResourceUrlProviderExposingInterceptor} (configured by default in the MVC_Java config and XML namespace). Therefore explicitly configuring this_property should not be needed in most cases._@param resourceUrlProvider the URL provider to use;public void setResourceUrlProvider(ResourceUrlProvider resourceUrlProvider) {_		this.resourceUrlProvider = resourceUrlProvider__	};configure,a,link,resource,url,provider,to,use,when,resolving,the,public,url,of,links,in,a,transformed,resource,e,g,import,links,in,a,css,file,this,is,required,only,for,links,expressed,as,full,paths,i,e,including,context,and,servlet,path,and,not,for,relative,links,p,by,default,this,property,is,not,set,in,that,case,if,a,code,resource,url,provider,is,needed,an,attempt,is,made,to,find,the,code,resource,url,provider,exposed,through,the,link,org,springframework,web,servlet,resource,resource,url,provider,exposing,interceptor,resource,url,provider,exposing,interceptor,configured,by,default,in,the,mvc,java,config,and,xml,namespace,therefore,explicitly,configuring,this,property,should,not,be,needed,in,most,cases,param,resource,url,provider,the,url,provider,to,use;public,void,set,resource,url,provider,resource,url,provider,resource,url,provider,this,resource,url,provider,resource,url,provider
ResourceTransformerSupport -> public void setResourceUrlProvider(ResourceUrlProvider resourceUrlProvider);1413311132;Configure a {@link ResourceUrlProvider} to use when resolving the public_URL of links in a transformed resource (e.g. import links in a CSS file)._This is required only for links expressed as full paths, i.e. including_context and servlet path, and not for relative links.__<p>By default this property is not set. In that case if a_{@code ResourceUrlProvider} is needed an attempt is made to find the_{@code ResourceUrlProvider} exposed through the_{@link org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor_ResourceUrlProviderExposingInterceptor} (configured by default in the MVC_Java config and XML namespace). Therefore explicitly configuring this_property should not be needed in most cases._@param resourceUrlProvider the URL provider to use;public void setResourceUrlProvider(ResourceUrlProvider resourceUrlProvider) {_		this.resourceUrlProvider = resourceUrlProvider__	};configure,a,link,resource,url,provider,to,use,when,resolving,the,public,url,of,links,in,a,transformed,resource,e,g,import,links,in,a,css,file,this,is,required,only,for,links,expressed,as,full,paths,i,e,including,context,and,servlet,path,and,not,for,relative,links,p,by,default,this,property,is,not,set,in,that,case,if,a,code,resource,url,provider,is,needed,an,attempt,is,made,to,find,the,code,resource,url,provider,exposed,through,the,link,org,springframework,web,servlet,resource,resource,url,provider,exposing,interceptor,resource,url,provider,exposing,interceptor,configured,by,default,in,the,mvc,java,config,and,xml,namespace,therefore,explicitly,configuring,this,property,should,not,be,needed,in,most,cases,param,resource,url,provider,the,url,provider,to,use;public,void,set,resource,url,provider,resource,url,provider,resource,url,provider,this,resource,url,provider,resource,url,provider
ResourceTransformerSupport -> public void setResourceUrlProvider(ResourceUrlProvider resourceUrlProvider);1413848647;Configure a {@link ResourceUrlProvider} to use when resolving the public_URL of links in a transformed resource (e.g. import links in a CSS file)._This is required only for links expressed as full paths, i.e. including_context and servlet path, and not for relative links.__<p>By default this property is not set. In that case if a_{@code ResourceUrlProvider} is needed an attempt is made to find the_{@code ResourceUrlProvider} exposed through the_{@link org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor_ResourceUrlProviderExposingInterceptor} (configured by default in the MVC_Java config and XML namespace). Therefore explicitly configuring this_property should not be needed in most cases._@param resourceUrlProvider the URL provider to use;public void setResourceUrlProvider(ResourceUrlProvider resourceUrlProvider) {_		this.resourceUrlProvider = resourceUrlProvider__	};configure,a,link,resource,url,provider,to,use,when,resolving,the,public,url,of,links,in,a,transformed,resource,e,g,import,links,in,a,css,file,this,is,required,only,for,links,expressed,as,full,paths,i,e,including,context,and,servlet,path,and,not,for,relative,links,p,by,default,this,property,is,not,set,in,that,case,if,a,code,resource,url,provider,is,needed,an,attempt,is,made,to,find,the,code,resource,url,provider,exposed,through,the,link,org,springframework,web,servlet,resource,resource,url,provider,exposing,interceptor,resource,url,provider,exposing,interceptor,configured,by,default,in,the,mvc,java,config,and,xml,namespace,therefore,explicitly,configuring,this,property,should,not,be,needed,in,most,cases,param,resource,url,provider,the,url,provider,to,use;public,void,set,resource,url,provider,resource,url,provider,resource,url,provider,this,resource,url,provider,resource,url,provider
ResourceTransformerSupport -> public void setResourceUrlProvider(ResourceUrlProvider resourceUrlProvider);1450277942;Configure a {@link ResourceUrlProvider} to use when resolving the public_URL of links in a transformed resource (e.g. import links in a CSS file)._This is required only for links expressed as full paths, i.e. including_context and servlet path, and not for relative links._<p>By default this property is not set. In that case if a_{@code ResourceUrlProvider} is needed an attempt is made to find the_{@code ResourceUrlProvider} exposed through the_{@link org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor_ResourceUrlProviderExposingInterceptor} (configured by default in the MVC_Java config and XML namespace). Therefore explicitly configuring this_property should not be needed in most cases._@param resourceUrlProvider the URL provider to use;public void setResourceUrlProvider(ResourceUrlProvider resourceUrlProvider) {_		this.resourceUrlProvider = resourceUrlProvider__	};configure,a,link,resource,url,provider,to,use,when,resolving,the,public,url,of,links,in,a,transformed,resource,e,g,import,links,in,a,css,file,this,is,required,only,for,links,expressed,as,full,paths,i,e,including,context,and,servlet,path,and,not,for,relative,links,p,by,default,this,property,is,not,set,in,that,case,if,a,code,resource,url,provider,is,needed,an,attempt,is,made,to,find,the,code,resource,url,provider,exposed,through,the,link,org,springframework,web,servlet,resource,resource,url,provider,exposing,interceptor,resource,url,provider,exposing,interceptor,configured,by,default,in,the,mvc,java,config,and,xml,namespace,therefore,explicitly,configuring,this,property,should,not,be,needed,in,most,cases,param,resource,url,provider,the,url,provider,to,use;public,void,set,resource,url,provider,resource,url,provider,resource,url,provider,this,resource,url,provider,resource,url,provider
ResourceTransformerSupport -> public void setResourceUrlProvider(ResourceUrlProvider resourceUrlProvider);1476200734;Configure a {@link ResourceUrlProvider} to use when resolving the public_URL of links in a transformed resource (e.g. import links in a CSS file)._This is required only for links expressed as full paths, i.e. including_context and servlet path, and not for relative links._<p>By default this property is not set. In that case if a_{@code ResourceUrlProvider} is needed an attempt is made to find the_{@code ResourceUrlProvider} exposed through the_{@link org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor_ResourceUrlProviderExposingInterceptor} (configured by default in the MVC_Java config and XML namespace). Therefore explicitly configuring this_property should not be needed in most cases._@param resourceUrlProvider the URL provider to use;public void setResourceUrlProvider(ResourceUrlProvider resourceUrlProvider) {_		this.resourceUrlProvider = resourceUrlProvider__	};configure,a,link,resource,url,provider,to,use,when,resolving,the,public,url,of,links,in,a,transformed,resource,e,g,import,links,in,a,css,file,this,is,required,only,for,links,expressed,as,full,paths,i,e,including,context,and,servlet,path,and,not,for,relative,links,p,by,default,this,property,is,not,set,in,that,case,if,a,code,resource,url,provider,is,needed,an,attempt,is,made,to,find,the,code,resource,url,provider,exposed,through,the,link,org,springframework,web,servlet,resource,resource,url,provider,exposing,interceptor,resource,url,provider,exposing,interceptor,configured,by,default,in,the,mvc,java,config,and,xml,namespace,therefore,explicitly,configuring,this,property,should,not,be,needed,in,most,cases,param,resource,url,provider,the,url,provider,to,use;public,void,set,resource,url,provider,resource,url,provider,resource,url,provider,this,resource,url,provider,resource,url,provider
ResourceTransformerSupport -> public void setResourceUrlProvider(ResourceUrlProvider resourceUrlProvider);1490368154;Configure a {@link ResourceUrlProvider} to use when resolving the public_URL of links in a transformed resource (e.g. import links in a CSS file)._This is required only for links expressed as full paths and not for_relative links._@param resourceUrlProvider the URL provider to use;public void setResourceUrlProvider(ResourceUrlProvider resourceUrlProvider) {_		this.resourceUrlProvider = resourceUrlProvider__	};configure,a,link,resource,url,provider,to,use,when,resolving,the,public,url,of,links,in,a,transformed,resource,e,g,import,links,in,a,css,file,this,is,required,only,for,links,expressed,as,full,paths,and,not,for,relative,links,param,resource,url,provider,the,url,provider,to,use;public,void,set,resource,url,provider,resource,url,provider,resource,url,provider,this,resource,url,provider,resource,url,provider
ResourceTransformerSupport -> public void setResourceUrlProvider(ResourceUrlProvider resourceUrlProvider);1495868221;Configure a {@link ResourceUrlProvider} to use when resolving the public_URL of links in a transformed resource (e.g. import links in a CSS file)._This is required only for links expressed as full paths and not for_relative links._@param resourceUrlProvider the URL provider to use;public void setResourceUrlProvider(ResourceUrlProvider resourceUrlProvider) {_		this.resourceUrlProvider = resourceUrlProvider__	};configure,a,link,resource,url,provider,to,use,when,resolving,the,public,url,of,links,in,a,transformed,resource,e,g,import,links,in,a,css,file,this,is,required,only,for,links,expressed,as,full,paths,and,not,for,relative,links,param,resource,url,provider,the,url,provider,to,use;public,void,set,resource,url,provider,resource,url,provider,resource,url,provider,this,resource,url,provider,resource,url,provider
ResourceTransformerSupport -> public void setResourceUrlProvider(ResourceUrlProvider resourceUrlProvider);1496837955;Configure a {@link ResourceUrlProvider} to use when resolving the public_URL of links in a transformed resource (e.g. import links in a CSS file)._This is required only for links expressed as full paths and not for_relative links._@param resourceUrlProvider the URL provider to use;public void setResourceUrlProvider(ResourceUrlProvider resourceUrlProvider) {_		this.resourceUrlProvider = resourceUrlProvider__	};configure,a,link,resource,url,provider,to,use,when,resolving,the,public,url,of,links,in,a,transformed,resource,e,g,import,links,in,a,css,file,this,is,required,only,for,links,expressed,as,full,paths,and,not,for,relative,links,param,resource,url,provider,the,url,provider,to,use;public,void,set,resource,url,provider,resource,url,provider,resource,url,provider,this,resource,url,provider,resource,url,provider
ResourceTransformerSupport -> public void setResourceUrlProvider(ResourceUrlProvider resourceUrlProvider);1498780456;Configure a {@link ResourceUrlProvider} to use when resolving the public_URL of links in a transformed resource (e.g. import links in a CSS file)._This is required only for links expressed as full paths and not for_relative links.;public void setResourceUrlProvider(ResourceUrlProvider resourceUrlProvider) {_		this.resourceUrlProvider = resourceUrlProvider__	};configure,a,link,resource,url,provider,to,use,when,resolving,the,public,url,of,links,in,a,transformed,resource,e,g,import,links,in,a,css,file,this,is,required,only,for,links,expressed,as,full,paths,and,not,for,relative,links;public,void,set,resource,url,provider,resource,url,provider,resource,url,provider,this,resource,url,provider,resource,url,provider
ResourceTransformerSupport -> protected String resolveUrlPath(String resourcePath, HttpServletRequest request, 			Resource resource, ResourceTransformerChain transformerChain);1409738772;A transformer can use this method when a resource being transformed_contains links to other resources. Such links need to be replaced with the_public facing link as determined by the resource resolver chain (e.g. the_public URL may have a version inserted).__@param resourcePath the path to a resource that needs to be re-written_@param request the current request_@param resource the resource being transformed_@param transformerChain the transformer chain_@return the resolved URL or null;protected String resolveUrlPath(String resourcePath, HttpServletRequest request,_			Resource resource, ResourceTransformerChain transformerChain) {__		if (!resourcePath.startsWith("/")) {_			_			return transformerChain.getResolverChain().resolveUrlPath(resourcePath, Arrays.asList(resource))__		}_		else {_			_			ResourceUrlProvider urlProvider = findResourceUrlProvider(request)__			return (urlProvider != null ? urlProvider.getForRequestUrl(request, resourcePath) : null)__		}_	};a,transformer,can,use,this,method,when,a,resource,being,transformed,contains,links,to,other,resources,such,links,need,to,be,replaced,with,the,public,facing,link,as,determined,by,the,resource,resolver,chain,e,g,the,public,url,may,have,a,version,inserted,param,resource,path,the,path,to,a,resource,that,needs,to,be,re,written,param,request,the,current,request,param,resource,the,resource,being,transformed,param,transformer,chain,the,transformer,chain,return,the,resolved,url,or,null;protected,string,resolve,url,path,string,resource,path,http,servlet,request,request,resource,resource,resource,transformer,chain,transformer,chain,if,resource,path,starts,with,return,transformer,chain,get,resolver,chain,resolve,url,path,resource,path,arrays,as,list,resource,else,resource,url,provider,url,provider,find,resource,url,provider,request,return,url,provider,null,url,provider,get,for,request,url,request,resource,path,null
ResourceTransformerSupport -> protected String resolveUrlPath(String resourcePath, HttpServletRequest request, 			Resource resource, ResourceTransformerChain transformerChain);1413311132;A transformer can use this method when a resource being transformed_contains links to other resources. Such links need to be replaced with the_public facing link as determined by the resource resolver chain (e.g. the_public URL may have a version inserted).__@param resourcePath the path to a resource that needs to be re-written_@param request the current request_@param resource the resource being transformed_@param transformerChain the transformer chain_@return the resolved URL or null;protected String resolveUrlPath(String resourcePath, HttpServletRequest request,_			Resource resource, ResourceTransformerChain transformerChain) {__		if (resourcePath.startsWith("/")) {_			_			ResourceUrlProvider urlProvider = findResourceUrlProvider(request)__			return (urlProvider != null ? urlProvider.getForRequestUrl(request, resourcePath) : null)__		}_		else {_			_			return transformerChain.getResolverChain().resolveUrlPath(resourcePath, Arrays.asList(resource))__		}_	};a,transformer,can,use,this,method,when,a,resource,being,transformed,contains,links,to,other,resources,such,links,need,to,be,replaced,with,the,public,facing,link,as,determined,by,the,resource,resolver,chain,e,g,the,public,url,may,have,a,version,inserted,param,resource,path,the,path,to,a,resource,that,needs,to,be,re,written,param,request,the,current,request,param,resource,the,resource,being,transformed,param,transformer,chain,the,transformer,chain,return,the,resolved,url,or,null;protected,string,resolve,url,path,string,resource,path,http,servlet,request,request,resource,resource,resource,transformer,chain,transformer,chain,if,resource,path,starts,with,resource,url,provider,url,provider,find,resource,url,provider,request,return,url,provider,null,url,provider,get,for,request,url,request,resource,path,null,else,return,transformer,chain,get,resolver,chain,resolve,url,path,resource,path,arrays,as,list,resource
ResourceTransformerSupport -> protected String resolveUrlPath(String resourcePath, HttpServletRequest request, 			Resource resource, ResourceTransformerChain transformerChain);1413848647;A transformer can use this method when a resource being transformed_contains links to other resources. Such links need to be replaced with the_public facing link as determined by the resource resolver chain (e.g. the_public URL may have a version inserted).__@param resourcePath the path to a resource that needs to be re-written_@param request the current request_@param resource the resource being transformed_@param transformerChain the transformer chain_@return the resolved URL or null;protected String resolveUrlPath(String resourcePath, HttpServletRequest request,_			Resource resource, ResourceTransformerChain transformerChain) {__		if (resourcePath.startsWith("/")) {_			_			ResourceUrlProvider urlProvider = findResourceUrlProvider(request)__			return (urlProvider != null ? urlProvider.getForRequestUrl(request, resourcePath) : null)__		}_		else {_			_			return transformerChain.getResolverChain().resolveUrlPath(resourcePath, Arrays.asList(resource))__		}_	};a,transformer,can,use,this,method,when,a,resource,being,transformed,contains,links,to,other,resources,such,links,need,to,be,replaced,with,the,public,facing,link,as,determined,by,the,resource,resolver,chain,e,g,the,public,url,may,have,a,version,inserted,param,resource,path,the,path,to,a,resource,that,needs,to,be,re,written,param,request,the,current,request,param,resource,the,resource,being,transformed,param,transformer,chain,the,transformer,chain,return,the,resolved,url,or,null;protected,string,resolve,url,path,string,resource,path,http,servlet,request,request,resource,resource,resource,transformer,chain,transformer,chain,if,resource,path,starts,with,resource,url,provider,url,provider,find,resource,url,provider,request,return,url,provider,null,url,provider,get,for,request,url,request,resource,path,null,else,return,transformer,chain,get,resolver,chain,resolve,url,path,resource,path,arrays,as,list,resource
ResourceTransformerSupport -> protected String resolveUrlPath(String resourcePath, HttpServletRequest request, 			Resource resource, ResourceTransformerChain transformerChain);1450277942;A transformer can use this method when a resource being transformed_contains links to other resources. Such links need to be replaced with the_public facing link as determined by the resource resolver chain (e.g. the_public URL may have a version inserted)._@param resourcePath the path to a resource that needs to be re-written_@param request the current request_@param resource the resource being transformed_@param transformerChain the transformer chain_@return the resolved URL or null;protected String resolveUrlPath(String resourcePath, HttpServletRequest request,_			Resource resource, ResourceTransformerChain transformerChain) {__		if (resourcePath.startsWith("/")) {_			_			ResourceUrlProvider urlProvider = findResourceUrlProvider(request)__			return (urlProvider != null ? urlProvider.getForRequestUrl(request, resourcePath) : null)__		}_		else {_			_			return transformerChain.getResolverChain().resolveUrlPath(_					resourcePath, Collections.singletonList(resource))__		}_	};a,transformer,can,use,this,method,when,a,resource,being,transformed,contains,links,to,other,resources,such,links,need,to,be,replaced,with,the,public,facing,link,as,determined,by,the,resource,resolver,chain,e,g,the,public,url,may,have,a,version,inserted,param,resource,path,the,path,to,a,resource,that,needs,to,be,re,written,param,request,the,current,request,param,resource,the,resource,being,transformed,param,transformer,chain,the,transformer,chain,return,the,resolved,url,or,null;protected,string,resolve,url,path,string,resource,path,http,servlet,request,request,resource,resource,resource,transformer,chain,transformer,chain,if,resource,path,starts,with,resource,url,provider,url,provider,find,resource,url,provider,request,return,url,provider,null,url,provider,get,for,request,url,request,resource,path,null,else,return,transformer,chain,get,resolver,chain,resolve,url,path,resource,path,collections,singleton,list,resource
ResourceTransformerSupport -> protected String resolveUrlPath(String resourcePath, HttpServletRequest request, 			Resource resource, ResourceTransformerChain transformerChain);1476200734;A transformer can use this method when a resource being transformed_contains links to other resources. Such links need to be replaced with the_public facing link as determined by the resource resolver chain (e.g. the_public URL may have a version inserted)._@param resourcePath the path to a resource that needs to be re-written_@param request the current request_@param resource the resource being transformed_@param transformerChain the transformer chain_@return the resolved URL or null;protected String resolveUrlPath(String resourcePath, HttpServletRequest request,_			Resource resource, ResourceTransformerChain transformerChain) {__		if (resourcePath.startsWith("/")) {_			_			ResourceUrlProvider urlProvider = findResourceUrlProvider(request)__			return (urlProvider != null ? urlProvider.getForRequestUrl(request, resourcePath) : null)__		}_		else {_			_			return transformerChain.getResolverChain().resolveUrlPath(_					resourcePath, Collections.singletonList(resource))__		}_	};a,transformer,can,use,this,method,when,a,resource,being,transformed,contains,links,to,other,resources,such,links,need,to,be,replaced,with,the,public,facing,link,as,determined,by,the,resource,resolver,chain,e,g,the,public,url,may,have,a,version,inserted,param,resource,path,the,path,to,a,resource,that,needs,to,be,re,written,param,request,the,current,request,param,resource,the,resource,being,transformed,param,transformer,chain,the,transformer,chain,return,the,resolved,url,or,null;protected,string,resolve,url,path,string,resource,path,http,servlet,request,request,resource,resource,resource,transformer,chain,transformer,chain,if,resource,path,starts,with,resource,url,provider,url,provider,find,resource,url,provider,request,return,url,provider,null,url,provider,get,for,request,url,request,resource,path,null,else,return,transformer,chain,get,resolver,chain,resolve,url,path,resource,path,collections,singleton,list,resource
ResourceTransformerSupport -> protected String resolveUrlPath(String resourcePath, HttpServletRequest request, 			Resource resource, ResourceTransformerChain transformerChain);1490368154;A transformer can use this method when a resource being transformed_contains links to other resources. Such links need to be replaced with the_public facing link as determined by the resource resolver chain (e.g. the_public URL may have a version inserted)._@param resourcePath the path to a resource that needs to be re-written_@param request the current request_@param resource the resource being transformed_@param transformerChain the transformer chain_@return the resolved URL or null;protected String resolveUrlPath(String resourcePath, HttpServletRequest request,_			Resource resource, ResourceTransformerChain transformerChain) {__		if (resourcePath.startsWith("/")) {_			_			ResourceUrlProvider urlProvider = findResourceUrlProvider(request)__			return (urlProvider != null ? urlProvider.getForRequestUrl(request, resourcePath) : null)__		}_		else {_			_			return transformerChain.getResolverChain().resolveUrlPath(_					resourcePath, Collections.singletonList(resource))__		}_	};a,transformer,can,use,this,method,when,a,resource,being,transformed,contains,links,to,other,resources,such,links,need,to,be,replaced,with,the,public,facing,link,as,determined,by,the,resource,resolver,chain,e,g,the,public,url,may,have,a,version,inserted,param,resource,path,the,path,to,a,resource,that,needs,to,be,re,written,param,request,the,current,request,param,resource,the,resource,being,transformed,param,transformer,chain,the,transformer,chain,return,the,resolved,url,or,null;protected,string,resolve,url,path,string,resource,path,http,servlet,request,request,resource,resource,resource,transformer,chain,transformer,chain,if,resource,path,starts,with,resource,url,provider,url,provider,find,resource,url,provider,request,return,url,provider,null,url,provider,get,for,request,url,request,resource,path,null,else,return,transformer,chain,get,resolver,chain,resolve,url,path,resource,path,collections,singleton,list,resource
ResourceTransformerSupport -> @Nullable 	public ResourceUrlProvider getResourceUrlProvider();1498780456;Return the configured {@code ResourceUrlProvider}.;@Nullable_	public ResourceUrlProvider getResourceUrlProvider() {_		return this.resourceUrlProvider__	};return,the,configured,code,resource,url,provider;nullable,public,resource,url,provider,get,resource,url,provider,return,this,resource,url,provider
ResourceTransformerSupport -> @Nullable 	public ResourceUrlProvider getResourceUrlProvider();1500448076;Return the configured {@code ResourceUrlProvider}.;@Nullable_	public ResourceUrlProvider getResourceUrlProvider() {_		return this.resourceUrlProvider__	};return,the,configured,code,resource,url,provider;nullable,public,resource,url,provider,get,resource,url,provider,return,this,resource,url,provider
ResourceTransformerSupport -> @Nullable 	public ResourceUrlProvider getResourceUrlProvider();1540478567;Return the configured {@code ResourceUrlProvider}.;@Nullable_	public ResourceUrlProvider getResourceUrlProvider() {_		return this.resourceUrlProvider__	};return,the,configured,code,resource,url,provider;nullable,public,resource,url,provider,get,resource,url,provider,return,this,resource,url,provider
ResourceTransformerSupport -> @Nullable 	public ResourceUrlProvider getResourceUrlProvider();1540547026;Return the configured {@code ResourceUrlProvider}.;@Nullable_	public ResourceUrlProvider getResourceUrlProvider() {_		return this.resourceUrlProvider__	};return,the,configured,code,resource,url,provider;nullable,public,resource,url,provider,get,resource,url,provider,return,this,resource,url,provider
ResourceTransformerSupport -> @Nullable 	protected String resolveUrlPath(String resourcePath, HttpServletRequest request, 			Resource resource, ResourceTransformerChain transformerChain);1495868221;A transformer can use this method when a resource being transformed_contains links to other resources. Such links need to be replaced with the_public facing link as determined by the resource resolver chain (e.g. the_public URL may have a version inserted)._@param resourcePath the path to a resource that needs to be re-written_@param request the current request_@param resource the resource being transformed_@param transformerChain the transformer chain_@return the resolved URL or null;@Nullable_	protected String resolveUrlPath(String resourcePath, HttpServletRequest request,_			Resource resource, ResourceTransformerChain transformerChain) {__		if (resourcePath.startsWith("/")) {_			_			ResourceUrlProvider urlProvider = findResourceUrlProvider(request)__			return (urlProvider != null ? urlProvider.getForRequestUrl(request, resourcePath) : null)__		}_		else {_			_			return transformerChain.getResolverChain().resolveUrlPath(_					resourcePath, Collections.singletonList(resource))__		}_	};a,transformer,can,use,this,method,when,a,resource,being,transformed,contains,links,to,other,resources,such,links,need,to,be,replaced,with,the,public,facing,link,as,determined,by,the,resource,resolver,chain,e,g,the,public,url,may,have,a,version,inserted,param,resource,path,the,path,to,a,resource,that,needs,to,be,re,written,param,request,the,current,request,param,resource,the,resource,being,transformed,param,transformer,chain,the,transformer,chain,return,the,resolved,url,or,null;nullable,protected,string,resolve,url,path,string,resource,path,http,servlet,request,request,resource,resource,resource,transformer,chain,transformer,chain,if,resource,path,starts,with,resource,url,provider,url,provider,find,resource,url,provider,request,return,url,provider,null,url,provider,get,for,request,url,request,resource,path,null,else,return,transformer,chain,get,resolver,chain,resolve,url,path,resource,path,collections,singleton,list,resource
ResourceTransformerSupport -> @Nullable 	protected String resolveUrlPath(String resourcePath, HttpServletRequest request, 			Resource resource, ResourceTransformerChain transformerChain);1496837955;A transformer can use this method when a resource being transformed_contains links to other resources. Such links need to be replaced with the_public facing link as determined by the resource resolver chain (e.g. the_public URL may have a version inserted)._@param resourcePath the path to a resource that needs to be re-written_@param request the current request_@param resource the resource being transformed_@param transformerChain the transformer chain_@return the resolved URL, or {@code} if not resolvable;@Nullable_	protected String resolveUrlPath(String resourcePath, HttpServletRequest request,_			Resource resource, ResourceTransformerChain transformerChain) {__		if (resourcePath.startsWith("/")) {_			_			ResourceUrlProvider urlProvider = findResourceUrlProvider(request)__			return (urlProvider != null ? urlProvider.getForRequestUrl(request, resourcePath) : null)__		}_		else {_			_			return transformerChain.getResolverChain().resolveUrlPath(_					resourcePath, Collections.singletonList(resource))__		}_	};a,transformer,can,use,this,method,when,a,resource,being,transformed,contains,links,to,other,resources,such,links,need,to,be,replaced,with,the,public,facing,link,as,determined,by,the,resource,resolver,chain,e,g,the,public,url,may,have,a,version,inserted,param,resource,path,the,path,to,a,resource,that,needs,to,be,re,written,param,request,the,current,request,param,resource,the,resource,being,transformed,param,transformer,chain,the,transformer,chain,return,the,resolved,url,or,code,if,not,resolvable;nullable,protected,string,resolve,url,path,string,resource,path,http,servlet,request,request,resource,resource,resource,transformer,chain,transformer,chain,if,resource,path,starts,with,resource,url,provider,url,provider,find,resource,url,provider,request,return,url,provider,null,url,provider,get,for,request,url,request,resource,path,null,else,return,transformer,chain,get,resolver,chain,resolve,url,path,resource,path,collections,singleton,list,resource
ResourceTransformerSupport -> @Nullable 	protected String resolveUrlPath(String resourcePath, HttpServletRequest request, 			Resource resource, ResourceTransformerChain transformerChain);1498780456;A transformer can use this method when a resource being transformed_contains links to other resources. Such links need to be replaced with the_public facing link as determined by the resource resolver chain (e.g. the_public URL may have a version inserted)._@param resourcePath the path to a resource that needs to be re-written_@param request the current request_@param resource the resource being transformed_@param transformerChain the transformer chain_@return the resolved URL, or {@code} if not resolvable;@Nullable_	protected String resolveUrlPath(String resourcePath, HttpServletRequest request,_			Resource resource, ResourceTransformerChain transformerChain) {__		if (resourcePath.startsWith("/")) {_			_			ResourceUrlProvider urlProvider = findResourceUrlProvider(request)__			return (urlProvider != null ? urlProvider.getForRequestUrl(request, resourcePath) : null)__		}_		else {_			_			return transformerChain.getResolverChain().resolveUrlPath(_					resourcePath, Collections.singletonList(resource))__		}_	};a,transformer,can,use,this,method,when,a,resource,being,transformed,contains,links,to,other,resources,such,links,need,to,be,replaced,with,the,public,facing,link,as,determined,by,the,resource,resolver,chain,e,g,the,public,url,may,have,a,version,inserted,param,resource,path,the,path,to,a,resource,that,needs,to,be,re,written,param,request,the,current,request,param,resource,the,resource,being,transformed,param,transformer,chain,the,transformer,chain,return,the,resolved,url,or,code,if,not,resolvable;nullable,protected,string,resolve,url,path,string,resource,path,http,servlet,request,request,resource,resource,resource,transformer,chain,transformer,chain,if,resource,path,starts,with,resource,url,provider,url,provider,find,resource,url,provider,request,return,url,provider,null,url,provider,get,for,request,url,request,resource,path,null,else,return,transformer,chain,get,resolver,chain,resolve,url,path,resource,path,collections,singleton,list,resource
ResourceTransformerSupport -> @Nullable 	protected String resolveUrlPath(String resourcePath, HttpServletRequest request, 			Resource resource, ResourceTransformerChain transformerChain);1500448076;A transformer can use this method when a resource being transformed_contains links to other resources. Such links need to be replaced with the_public facing link as determined by the resource resolver chain (e.g. the_public URL may have a version inserted)._@param resourcePath the path to a resource that needs to be re-written_@param request the current request_@param resource the resource being transformed_@param transformerChain the transformer chain_@return the resolved URL, or {@code} if not resolvable;@Nullable_	protected String resolveUrlPath(String resourcePath, HttpServletRequest request,_			Resource resource, ResourceTransformerChain transformerChain) {__		if (resourcePath.startsWith("/")) {_			_			ResourceUrlProvider urlProvider = findResourceUrlProvider(request)__			return (urlProvider != null ? urlProvider.getForRequestUrl(request, resourcePath) : null)__		}_		else {_			_			return transformerChain.getResolverChain().resolveUrlPath(_					resourcePath, Collections.singletonList(resource))__		}_	};a,transformer,can,use,this,method,when,a,resource,being,transformed,contains,links,to,other,resources,such,links,need,to,be,replaced,with,the,public,facing,link,as,determined,by,the,resource,resolver,chain,e,g,the,public,url,may,have,a,version,inserted,param,resource,path,the,path,to,a,resource,that,needs,to,be,re,written,param,request,the,current,request,param,resource,the,resource,being,transformed,param,transformer,chain,the,transformer,chain,return,the,resolved,url,or,code,if,not,resolvable;nullable,protected,string,resolve,url,path,string,resource,path,http,servlet,request,request,resource,resource,resource,transformer,chain,transformer,chain,if,resource,path,starts,with,resource,url,provider,url,provider,find,resource,url,provider,request,return,url,provider,null,url,provider,get,for,request,url,request,resource,path,null,else,return,transformer,chain,get,resolver,chain,resolve,url,path,resource,path,collections,singleton,list,resource
ResourceTransformerSupport -> @Nullable 	protected String resolveUrlPath(String resourcePath, HttpServletRequest request, 			Resource resource, ResourceTransformerChain transformerChain);1540478567;A transformer can use this method when a resource being transformed_contains links to other resources. Such links need to be replaced with the_public facing link as determined by the resource resolver chain (e.g. the_public URL may have a version inserted)._@param resourcePath the path to a resource that needs to be re-written_@param request the current request_@param resource the resource being transformed_@param transformerChain the transformer chain_@return the resolved URL, or {@code} if not resolvable;@Nullable_	protected String resolveUrlPath(String resourcePath, HttpServletRequest request,_			Resource resource, ResourceTransformerChain transformerChain) {__		if (resourcePath.startsWith("/")) {_			_			ResourceUrlProvider urlProvider = findResourceUrlProvider(request)__			return (urlProvider != null ? urlProvider.getForRequestUrl(request, resourcePath) : null)__		}_		else {_			_			return transformerChain.getResolverChain().resolveUrlPath(_					resourcePath, Collections.singletonList(resource))__		}_	};a,transformer,can,use,this,method,when,a,resource,being,transformed,contains,links,to,other,resources,such,links,need,to,be,replaced,with,the,public,facing,link,as,determined,by,the,resource,resolver,chain,e,g,the,public,url,may,have,a,version,inserted,param,resource,path,the,path,to,a,resource,that,needs,to,be,re,written,param,request,the,current,request,param,resource,the,resource,being,transformed,param,transformer,chain,the,transformer,chain,return,the,resolved,url,or,code,if,not,resolvable;nullable,protected,string,resolve,url,path,string,resource,path,http,servlet,request,request,resource,resource,resource,transformer,chain,transformer,chain,if,resource,path,starts,with,resource,url,provider,url,provider,find,resource,url,provider,request,return,url,provider,null,url,provider,get,for,request,url,request,resource,path,null,else,return,transformer,chain,get,resolver,chain,resolve,url,path,resource,path,collections,singleton,list,resource
ResourceTransformerSupport -> @Nullable 	protected String resolveUrlPath(String resourcePath, HttpServletRequest request, 			Resource resource, ResourceTransformerChain transformerChain);1540547026;A transformer can use this method when a resource being transformed_contains links to other resources. Such links need to be replaced with the_public facing link as determined by the resource resolver chain (e.g. the_public URL may have a version inserted)._@param resourcePath the path to a resource that needs to be re-written_@param request the current request_@param resource the resource being transformed_@param transformerChain the transformer chain_@return the resolved URL, or {@code} if not resolvable;@Nullable_	protected String resolveUrlPath(String resourcePath, HttpServletRequest request,_			Resource resource, ResourceTransformerChain transformerChain) {__		if (resourcePath.startsWith("/")) {_			_			ResourceUrlProvider urlProvider = findResourceUrlProvider(request)__			return (urlProvider != null ? urlProvider.getForRequestUrl(request, resourcePath) : null)__		}_		else {_			_			return transformerChain.getResolverChain().resolveUrlPath(_					resourcePath, Collections.singletonList(resource))__		}_	};a,transformer,can,use,this,method,when,a,resource,being,transformed,contains,links,to,other,resources,such,links,need,to,be,replaced,with,the,public,facing,link,as,determined,by,the,resource,resolver,chain,e,g,the,public,url,may,have,a,version,inserted,param,resource,path,the,path,to,a,resource,that,needs,to,be,re,written,param,request,the,current,request,param,resource,the,resource,being,transformed,param,transformer,chain,the,transformer,chain,return,the,resolved,url,or,code,if,not,resolvable;nullable,protected,string,resolve,url,path,string,resource,path,http,servlet,request,request,resource,resource,resource,transformer,chain,transformer,chain,if,resource,path,starts,with,resource,url,provider,url,provider,find,resource,url,provider,request,return,url,provider,null,url,provider,get,for,request,url,request,resource,path,null,else,return,transformer,chain,get,resolver,chain,resolve,url,path,resource,path,collections,singleton,list,resource
ResourceTransformerSupport -> public ResourceUrlProvider getResourceUrlProvider();1409738772;@return the configured {@code ResourceUrlProvider}.;public ResourceUrlProvider getResourceUrlProvider() {_		return this.resourceUrlProvider__	};return,the,configured,code,resource,url,provider;public,resource,url,provider,get,resource,url,provider,return,this,resource,url,provider
ResourceTransformerSupport -> public ResourceUrlProvider getResourceUrlProvider();1413311132;@return the configured {@code ResourceUrlProvider}.;public ResourceUrlProvider getResourceUrlProvider() {_		return this.resourceUrlProvider__	};return,the,configured,code,resource,url,provider;public,resource,url,provider,get,resource,url,provider,return,this,resource,url,provider
ResourceTransformerSupport -> public ResourceUrlProvider getResourceUrlProvider();1413848647;@return the configured {@code ResourceUrlProvider}.;public ResourceUrlProvider getResourceUrlProvider() {_		return this.resourceUrlProvider__	};return,the,configured,code,resource,url,provider;public,resource,url,provider,get,resource,url,provider,return,this,resource,url,provider
ResourceTransformerSupport -> public ResourceUrlProvider getResourceUrlProvider();1450277942;@return the configured {@code ResourceUrlProvider}.;public ResourceUrlProvider getResourceUrlProvider() {_		return this.resourceUrlProvider__	};return,the,configured,code,resource,url,provider;public,resource,url,provider,get,resource,url,provider,return,this,resource,url,provider
ResourceTransformerSupport -> public ResourceUrlProvider getResourceUrlProvider();1476200734;@return the configured {@code ResourceUrlProvider}.;public ResourceUrlProvider getResourceUrlProvider() {_		return this.resourceUrlProvider__	};return,the,configured,code,resource,url,provider;public,resource,url,provider,get,resource,url,provider,return,this,resource,url,provider
ResourceTransformerSupport -> public ResourceUrlProvider getResourceUrlProvider();1490368154;@return the configured {@code ResourceUrlProvider}.;public ResourceUrlProvider getResourceUrlProvider() {_		return this.resourceUrlProvider__	};return,the,configured,code,resource,url,provider;public,resource,url,provider,get,resource,url,provider,return,this,resource,url,provider
ResourceTransformerSupport -> public ResourceUrlProvider getResourceUrlProvider();1495868221;@return the configured {@code ResourceUrlProvider}.;public ResourceUrlProvider getResourceUrlProvider() {_		return this.resourceUrlProvider__	};return,the,configured,code,resource,url,provider;public,resource,url,provider,get,resource,url,provider,return,this,resource,url,provider
ResourceTransformerSupport -> public ResourceUrlProvider getResourceUrlProvider();1496837955;@return the configured {@code ResourceUrlProvider}.;public ResourceUrlProvider getResourceUrlProvider() {_		return this.resourceUrlProvider__	};return,the,configured,code,resource,url,provider;public,resource,url,provider,get,resource,url,provider,return,this,resource,url,provider
ResourceTransformerSupport -> protected String toAbsolutePath(String path, HttpServletRequest request);1476200734;Transform the given relative request path to an absolute path,_taking the path of the given request as a point of reference._The resulting path is also cleaned from sequences like "path/.."._@param path the relative path to transform_@param request the referer request_@return the absolute request path for the given resource path;protected String toAbsolutePath(String path, HttpServletRequest request) {_		String requestPath = this.getResourceUrlProvider().getUrlPathHelper().getRequestUri(request)__		String absolutePath = StringUtils.applyRelativePath(requestPath, path)__		return StringUtils.cleanPath(absolutePath)__	};transform,the,given,relative,request,path,to,an,absolute,path,taking,the,path,of,the,given,request,as,a,point,of,reference,the,resulting,path,is,also,cleaned,from,sequences,like,path,param,path,the,relative,path,to,transform,param,request,the,referer,request,return,the,absolute,request,path,for,the,given,resource,path;protected,string,to,absolute,path,string,path,http,servlet,request,request,string,request,path,this,get,resource,url,provider,get,url,path,helper,get,request,uri,request,string,absolute,path,string,utils,apply,relative,path,request,path,path,return,string,utils,clean,path,absolute,path
ResourceTransformerSupport -> protected String toAbsolutePath(String path, HttpServletRequest request);1490368154;Transform the given relative request path to an absolute path,_taking the path of the given request as a point of reference._The resulting path is also cleaned from sequences like "path/.."._@param path the relative path to transform_@param request the referer request_@return the absolute request path for the given resource path;protected String toAbsolutePath(String path, HttpServletRequest request) {_		String requestPath = this.findResourceUrlProvider(request).getUrlPathHelper().getRequestUri(request)__		String absolutePath = StringUtils.applyRelativePath(requestPath, path)__		return StringUtils.cleanPath(absolutePath)__	};transform,the,given,relative,request,path,to,an,absolute,path,taking,the,path,of,the,given,request,as,a,point,of,reference,the,resulting,path,is,also,cleaned,from,sequences,like,path,param,path,the,relative,path,to,transform,param,request,the,referer,request,return,the,absolute,request,path,for,the,given,resource,path;protected,string,to,absolute,path,string,path,http,servlet,request,request,string,request,path,this,find,resource,url,provider,request,get,url,path,helper,get,request,uri,request,string,absolute,path,string,utils,apply,relative,path,request,path,path,return,string,utils,clean,path,absolute,path
ResourceTransformerSupport -> protected String toAbsolutePath(String path, HttpServletRequest request);1495868221;Transform the given relative request path to an absolute path,_taking the path of the given request as a point of reference._The resulting path is also cleaned from sequences like "path/.."._@param path the relative path to transform_@param request the referer request_@return the absolute request path for the given resource path;protected String toAbsolutePath(String path, HttpServletRequest request) {_		String requestPath = this.findResourceUrlProvider(request).getUrlPathHelper().getRequestUri(request)__		String absolutePath = StringUtils.applyRelativePath(requestPath, path)__		return StringUtils.cleanPath(absolutePath)__	};transform,the,given,relative,request,path,to,an,absolute,path,taking,the,path,of,the,given,request,as,a,point,of,reference,the,resulting,path,is,also,cleaned,from,sequences,like,path,param,path,the,relative,path,to,transform,param,request,the,referer,request,return,the,absolute,request,path,for,the,given,resource,path;protected,string,to,absolute,path,string,path,http,servlet,request,request,string,request,path,this,find,resource,url,provider,request,get,url,path,helper,get,request,uri,request,string,absolute,path,string,utils,apply,relative,path,request,path,path,return,string,utils,clean,path,absolute,path
ResourceTransformerSupport -> protected String toAbsolutePath(String path, HttpServletRequest request);1496837955;Transform the given relative request path to an absolute path,_taking the path of the given request as a point of reference._The resulting path is also cleaned from sequences like "path/.."._@param path the relative path to transform_@param request the referer request_@return the absolute request path for the given resource path;protected String toAbsolutePath(String path, HttpServletRequest request) {_		ResourceUrlProvider urlProvider = findResourceUrlProvider(request)__		Assert.state(urlProvider != null, "No ResourceUrlProvider")__		String requestPath = urlProvider.getUrlPathHelper().getRequestUri(request)__		String absolutePath = StringUtils.applyRelativePath(requestPath, path)__		return StringUtils.cleanPath(absolutePath)__	};transform,the,given,relative,request,path,to,an,absolute,path,taking,the,path,of,the,given,request,as,a,point,of,reference,the,resulting,path,is,also,cleaned,from,sequences,like,path,param,path,the,relative,path,to,transform,param,request,the,referer,request,return,the,absolute,request,path,for,the,given,resource,path;protected,string,to,absolute,path,string,path,http,servlet,request,request,resource,url,provider,url,provider,find,resource,url,provider,request,assert,state,url,provider,null,no,resource,url,provider,string,request,path,url,provider,get,url,path,helper,get,request,uri,request,string,absolute,path,string,utils,apply,relative,path,request,path,path,return,string,utils,clean,path,absolute,path
ResourceTransformerSupport -> protected String toAbsolutePath(String path, HttpServletRequest request);1498780456;Transform the given relative request path to an absolute path,_taking the path of the given request as a point of reference._The resulting path is also cleaned from sequences like "path/.."._@param path the relative path to transform_@param request the referer request_@return the absolute request path for the given resource path;protected String toAbsolutePath(String path, HttpServletRequest request) {_		ResourceUrlProvider urlProvider = findResourceUrlProvider(request)__		Assert.state(urlProvider != null, "No ResourceUrlProvider")__		String requestPath = urlProvider.getUrlPathHelper().getRequestUri(request)__		String absolutePath = StringUtils.applyRelativePath(requestPath, path)__		return StringUtils.cleanPath(absolutePath)__	};transform,the,given,relative,request,path,to,an,absolute,path,taking,the,path,of,the,given,request,as,a,point,of,reference,the,resulting,path,is,also,cleaned,from,sequences,like,path,param,path,the,relative,path,to,transform,param,request,the,referer,request,return,the,absolute,request,path,for,the,given,resource,path;protected,string,to,absolute,path,string,path,http,servlet,request,request,resource,url,provider,url,provider,find,resource,url,provider,request,assert,state,url,provider,null,no,resource,url,provider,string,request,path,url,provider,get,url,path,helper,get,request,uri,request,string,absolute,path,string,utils,apply,relative,path,request,path,path,return,string,utils,clean,path,absolute,path
ResourceTransformerSupport -> protected String toAbsolutePath(String path, HttpServletRequest request);1500448076;Transform the given relative request path to an absolute path,_taking the path of the given request as a point of reference._The resulting path is also cleaned from sequences like "path/.."._@param path the relative path to transform_@param request the referer request_@return the absolute request path for the given resource path;protected String toAbsolutePath(String path, HttpServletRequest request) {_		ResourceUrlProvider urlProvider = findResourceUrlProvider(request)__		Assert.state(urlProvider != null, "No ResourceUrlProvider")__		String requestPath = urlProvider.getUrlPathHelper().getRequestUri(request)__		String absolutePath = StringUtils.applyRelativePath(requestPath, path)__		return StringUtils.cleanPath(absolutePath)__	};transform,the,given,relative,request,path,to,an,absolute,path,taking,the,path,of,the,given,request,as,a,point,of,reference,the,resulting,path,is,also,cleaned,from,sequences,like,path,param,path,the,relative,path,to,transform,param,request,the,referer,request,return,the,absolute,request,path,for,the,given,resource,path;protected,string,to,absolute,path,string,path,http,servlet,request,request,resource,url,provider,url,provider,find,resource,url,provider,request,assert,state,url,provider,null,no,resource,url,provider,string,request,path,url,provider,get,url,path,helper,get,request,uri,request,string,absolute,path,string,utils,apply,relative,path,request,path,path,return,string,utils,clean,path,absolute,path
ResourceTransformerSupport -> protected String toAbsolutePath(String path, HttpServletRequest request);1540478567;Transform the given relative request path to an absolute path,_taking the path of the given request as a point of reference._The resulting path is also cleaned from sequences like "path/.."._@param path the relative path to transform_@param request the referer request_@return the absolute request path for the given resource path;protected String toAbsolutePath(String path, HttpServletRequest request) {_		String absolutePath = path__		if(!path.startsWith("/")) {_			ResourceUrlProvider urlProvider = findResourceUrlProvider(request)__			Assert.state(urlProvider != null, "No ResourceUrlProvider")__			String requestPath = urlProvider.getUrlPathHelper().getRequestUri(request)__			absolutePath = StringUtils.applyRelativePath(requestPath, path)__		}_		return StringUtils.cleanPath(absolutePath)__	};transform,the,given,relative,request,path,to,an,absolute,path,taking,the,path,of,the,given,request,as,a,point,of,reference,the,resulting,path,is,also,cleaned,from,sequences,like,path,param,path,the,relative,path,to,transform,param,request,the,referer,request,return,the,absolute,request,path,for,the,given,resource,path;protected,string,to,absolute,path,string,path,http,servlet,request,request,string,absolute,path,path,if,path,starts,with,resource,url,provider,url,provider,find,resource,url,provider,request,assert,state,url,provider,null,no,resource,url,provider,string,request,path,url,provider,get,url,path,helper,get,request,uri,request,absolute,path,string,utils,apply,relative,path,request,path,path,return,string,utils,clean,path,absolute,path
ResourceTransformerSupport -> protected String toAbsolutePath(String path, HttpServletRequest request);1540547026;Transform the given relative request path to an absolute path,_taking the path of the given request as a point of reference._The resulting path is also cleaned from sequences like "path/.."._@param path the relative path to transform_@param request the referer request_@return the absolute request path for the given resource path;protected String toAbsolutePath(String path, HttpServletRequest request) {_		String absolutePath = path__		if (!path.startsWith("/")) {_			ResourceUrlProvider urlProvider = findResourceUrlProvider(request)__			Assert.state(urlProvider != null, "No ResourceUrlProvider")__			String requestPath = urlProvider.getUrlPathHelper().getRequestUri(request)__			absolutePath = StringUtils.applyRelativePath(requestPath, path)__		}_		return StringUtils.cleanPath(absolutePath)__	};transform,the,given,relative,request,path,to,an,absolute,path,taking,the,path,of,the,given,request,as,a,point,of,reference,the,resulting,path,is,also,cleaned,from,sequences,like,path,param,path,the,relative,path,to,transform,param,request,the,referer,request,return,the,absolute,request,path,for,the,given,resource,path;protected,string,to,absolute,path,string,path,http,servlet,request,request,string,absolute,path,path,if,path,starts,with,resource,url,provider,url,provider,find,resource,url,provider,request,assert,state,url,provider,null,no,resource,url,provider,string,request,path,url,provider,get,url,path,helper,get,request,uri,request,absolute,path,string,utils,apply,relative,path,request,path,path,return,string,utils,clean,path,absolute,path
