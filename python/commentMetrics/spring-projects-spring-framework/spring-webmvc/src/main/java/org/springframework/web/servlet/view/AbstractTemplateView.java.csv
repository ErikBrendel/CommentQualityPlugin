# id;timestamp;commentText;codeText;commentWords;codeWords
AbstractTemplateView -> public void setExposeRequestAttributes(boolean exposeRequestAttributes);1328020251;Set whether all request attributes should be added to the_model prior to merging with the template. Default is "false".;public void setExposeRequestAttributes(boolean exposeRequestAttributes) {_		this.exposeRequestAttributes = exposeRequestAttributes__	};set,whether,all,request,attributes,should,be,added,to,the,model,prior,to,merging,with,the,template,default,is,false;public,void,set,expose,request,attributes,boolean,expose,request,attributes,this,expose,request,attributes,expose,request,attributes
AbstractTemplateView -> public void setExposeRequestAttributes(boolean exposeRequestAttributes);1385412762;Set whether all request attributes should be added to the_model prior to merging with the template. Default is "false".;public void setExposeRequestAttributes(boolean exposeRequestAttributes) {_		this.exposeRequestAttributes = exposeRequestAttributes__	};set,whether,all,request,attributes,should,be,added,to,the,model,prior,to,merging,with,the,template,default,is,false;public,void,set,expose,request,attributes,boolean,expose,request,attributes,this,expose,request,attributes,expose,request,attributes
AbstractTemplateView -> public void setExposeRequestAttributes(boolean exposeRequestAttributes);1427228652;Set whether all request attributes should be added to the_model prior to merging with the template. Default is "false".;public void setExposeRequestAttributes(boolean exposeRequestAttributes) {_		this.exposeRequestAttributes = exposeRequestAttributes__	};set,whether,all,request,attributes,should,be,added,to,the,model,prior,to,merging,with,the,template,default,is,false;public,void,set,expose,request,attributes,boolean,expose,request,attributes,this,expose,request,attributes,expose,request,attributes
AbstractTemplateView -> public void setExposeRequestAttributes(boolean exposeRequestAttributes);1467667858;Set whether all request attributes should be added to the_model prior to merging with the template. Default is "false".;public void setExposeRequestAttributes(boolean exposeRequestAttributes) {_		this.exposeRequestAttributes = exposeRequestAttributes__	};set,whether,all,request,attributes,should,be,added,to,the,model,prior,to,merging,with,the,template,default,is,false;public,void,set,expose,request,attributes,boolean,expose,request,attributes,this,expose,request,attributes,expose,request,attributes
AbstractTemplateView -> public void setExposeRequestAttributes(boolean exposeRequestAttributes);1529361191;Set whether all request attributes should be added to the_model prior to merging with the template. Default is "false".;public void setExposeRequestAttributes(boolean exposeRequestAttributes) {_		this.exposeRequestAttributes = exposeRequestAttributes__	};set,whether,all,request,attributes,should,be,added,to,the,model,prior,to,merging,with,the,template,default,is,false;public,void,set,expose,request,attributes,boolean,expose,request,attributes,this,expose,request,attributes,expose,request,attributes
AbstractTemplateView -> public void setExposeSessionAttributes(boolean exposeSessionAttributes);1328020251;Set whether all HttpSession attributes should be added to the_model prior to merging with the template. Default is "false".;public void setExposeSessionAttributes(boolean exposeSessionAttributes) {_		this.exposeSessionAttributes = exposeSessionAttributes__	};set,whether,all,http,session,attributes,should,be,added,to,the,model,prior,to,merging,with,the,template,default,is,false;public,void,set,expose,session,attributes,boolean,expose,session,attributes,this,expose,session,attributes,expose,session,attributes
AbstractTemplateView -> public void setExposeSessionAttributes(boolean exposeSessionAttributes);1385412762;Set whether all HttpSession attributes should be added to the_model prior to merging with the template. Default is "false".;public void setExposeSessionAttributes(boolean exposeSessionAttributes) {_		this.exposeSessionAttributes = exposeSessionAttributes__	};set,whether,all,http,session,attributes,should,be,added,to,the,model,prior,to,merging,with,the,template,default,is,false;public,void,set,expose,session,attributes,boolean,expose,session,attributes,this,expose,session,attributes,expose,session,attributes
AbstractTemplateView -> public void setExposeSessionAttributes(boolean exposeSessionAttributes);1427228652;Set whether all HttpSession attributes should be added to the_model prior to merging with the template. Default is "false".;public void setExposeSessionAttributes(boolean exposeSessionAttributes) {_		this.exposeSessionAttributes = exposeSessionAttributes__	};set,whether,all,http,session,attributes,should,be,added,to,the,model,prior,to,merging,with,the,template,default,is,false;public,void,set,expose,session,attributes,boolean,expose,session,attributes,this,expose,session,attributes,expose,session,attributes
AbstractTemplateView -> public void setExposeSessionAttributes(boolean exposeSessionAttributes);1467667858;Set whether all HttpSession attributes should be added to the_model prior to merging with the template. Default is "false".;public void setExposeSessionAttributes(boolean exposeSessionAttributes) {_		this.exposeSessionAttributes = exposeSessionAttributes__	};set,whether,all,http,session,attributes,should,be,added,to,the,model,prior,to,merging,with,the,template,default,is,false;public,void,set,expose,session,attributes,boolean,expose,session,attributes,this,expose,session,attributes,expose,session,attributes
AbstractTemplateView -> public void setExposeSessionAttributes(boolean exposeSessionAttributes);1529361191;Set whether all HttpSession attributes should be added to the_model prior to merging with the template. Default is "false".;public void setExposeSessionAttributes(boolean exposeSessionAttributes) {_		this.exposeSessionAttributes = exposeSessionAttributes__	};set,whether,all,http,session,attributes,should,be,added,to,the,model,prior,to,merging,with,the,template,default,is,false;public,void,set,expose,session,attributes,boolean,expose,session,attributes,this,expose,session,attributes,expose,session,attributes
AbstractTemplateView -> protected void applyContentType(HttpServletResponse response);1328020251;Apply this view's content type as specified in the "contentType"_bean property to the given response._<p>When running on Servlet 2.4, only applies the view's contentType_if no content type has been set on the response before. This allows_handlers to override the default content type beforehand._@param response current HTTP response_@see #setContentType;protected void applyContentType(HttpServletResponse response)	{_		if (response.getContentType() == null) {_			response.setContentType(getContentType())__		}_	};apply,this,view,s,content,type,as,specified,in,the,content,type,bean,property,to,the,given,response,p,when,running,on,servlet,2,4,only,applies,the,view,s,content,type,if,no,content,type,has,been,set,on,the,response,before,this,allows,handlers,to,override,the,default,content,type,beforehand,param,response,current,http,response,see,set,content,type;protected,void,apply,content,type,http,servlet,response,response,if,response,get,content,type,null,response,set,content,type,get,content,type
AbstractTemplateView -> protected void applyContentType(HttpServletResponse response);1385412762;Apply this view's content type as specified in the "contentType"_bean property to the given response._<p>When running on Servlet 2.4, only applies the view's contentType_if no content type has been set on the response before. This allows_handlers to override the default content type beforehand._@param response current HTTP response_@see #setContentType;protected void applyContentType(HttpServletResponse response)	{_		if (response.getContentType() == null) {_			response.setContentType(getContentType())__		}_	};apply,this,view,s,content,type,as,specified,in,the,content,type,bean,property,to,the,given,response,p,when,running,on,servlet,2,4,only,applies,the,view,s,content,type,if,no,content,type,has,been,set,on,the,response,before,this,allows,handlers,to,override,the,default,content,type,beforehand,param,response,current,http,response,see,set,content,type;protected,void,apply,content,type,http,servlet,response,response,if,response,get,content,type,null,response,set,content,type,get,content,type
AbstractTemplateView -> protected void applyContentType(HttpServletResponse response);1427228652;Apply this view's content type as specified in the "contentType"_bean property to the given response._<p>Only applies the view's contentType if no content type has been_set on the response before. This allows handlers to override the_default content type beforehand._@param response current HTTP response_@see #setContentType;protected void applyContentType(HttpServletResponse response)	{_		if (response.getContentType() == null) {_			response.setContentType(getContentType())__		}_	};apply,this,view,s,content,type,as,specified,in,the,content,type,bean,property,to,the,given,response,p,only,applies,the,view,s,content,type,if,no,content,type,has,been,set,on,the,response,before,this,allows,handlers,to,override,the,default,content,type,beforehand,param,response,current,http,response,see,set,content,type;protected,void,apply,content,type,http,servlet,response,response,if,response,get,content,type,null,response,set,content,type,get,content,type
AbstractTemplateView -> protected void applyContentType(HttpServletResponse response);1467667858;Apply this view's content type as specified in the "contentType"_bean property to the given response._<p>Only applies the view's contentType if no content type has been_set on the response before. This allows handlers to override the_default content type beforehand._@param response current HTTP response_@see #setContentType;protected void applyContentType(HttpServletResponse response)	{_		if (response.getContentType() == null) {_			response.setContentType(getContentType())__		}_	};apply,this,view,s,content,type,as,specified,in,the,content,type,bean,property,to,the,given,response,p,only,applies,the,view,s,content,type,if,no,content,type,has,been,set,on,the,response,before,this,allows,handlers,to,override,the,default,content,type,beforehand,param,response,current,http,response,see,set,content,type;protected,void,apply,content,type,http,servlet,response,response,if,response,get,content,type,null,response,set,content,type,get,content,type
AbstractTemplateView -> protected void applyContentType(HttpServletResponse response);1529361191;Apply this view's content type as specified in the "contentType"_bean property to the given response._<p>Only applies the view's contentType if no content type has been_set on the response before. This allows handlers to override the_default content type beforehand._@param response current HTTP response_@see #setContentType;protected void applyContentType(HttpServletResponse response)	{_		if (response.getContentType() == null) {_			response.setContentType(getContentType())__		}_	};apply,this,view,s,content,type,as,specified,in,the,content,type,bean,property,to,the,given,response,p,only,applies,the,view,s,content,type,if,no,content,type,has,been,set,on,the,response,before,this,allows,handlers,to,override,the,default,content,type,beforehand,param,response,current,http,response,see,set,content,type;protected,void,apply,content,type,http,servlet,response,response,if,response,get,content,type,null,response,set,content,type,get,content,type
AbstractTemplateView -> protected abstract void renderMergedTemplateModel( 			Map<String, Object> model, HttpServletRequest request, HttpServletResponse response) throws Exception_;1328020251;Subclasses must implement this method to actually render the view._@param model combined output Map, with request attributes and_session attributes merged into it if required_@param request current HTTP request_@param response current HTTP response_@throws Exception if rendering failed;protected abstract void renderMergedTemplateModel(_			Map<String, Object> model, HttpServletRequest request, HttpServletResponse response) throws Exception_;subclasses,must,implement,this,method,to,actually,render,the,view,param,model,combined,output,map,with,request,attributes,and,session,attributes,merged,into,it,if,required,param,request,current,http,request,param,response,current,http,response,throws,exception,if,rendering,failed;protected,abstract,void,render,merged,template,model,map,string,object,model,http,servlet,request,request,http,servlet,response,response,throws,exception
AbstractTemplateView -> protected abstract void renderMergedTemplateModel( 			Map<String, Object> model, HttpServletRequest request, HttpServletResponse response) throws Exception_;1385412762;Subclasses must implement this method to actually render the view._@param model combined output Map, with request attributes and_session attributes merged into it if required_@param request current HTTP request_@param response current HTTP response_@throws Exception if rendering failed;protected abstract void renderMergedTemplateModel(_			Map<String, Object> model, HttpServletRequest request, HttpServletResponse response) throws Exception_;subclasses,must,implement,this,method,to,actually,render,the,view,param,model,combined,output,map,with,request,attributes,and,session,attributes,merged,into,it,if,required,param,request,current,http,request,param,response,current,http,response,throws,exception,if,rendering,failed;protected,abstract,void,render,merged,template,model,map,string,object,model,http,servlet,request,request,http,servlet,response,response,throws,exception
AbstractTemplateView -> protected abstract void renderMergedTemplateModel( 			Map<String, Object> model, HttpServletRequest request, HttpServletResponse response) throws Exception_;1427228652;Subclasses must implement this method to actually render the view._@param model combined output Map, with request attributes and_session attributes merged into it if required_@param request current HTTP request_@param response current HTTP response_@throws Exception if rendering failed;protected abstract void renderMergedTemplateModel(_			Map<String, Object> model, HttpServletRequest request, HttpServletResponse response) throws Exception_;subclasses,must,implement,this,method,to,actually,render,the,view,param,model,combined,output,map,with,request,attributes,and,session,attributes,merged,into,it,if,required,param,request,current,http,request,param,response,current,http,response,throws,exception,if,rendering,failed;protected,abstract,void,render,merged,template,model,map,string,object,model,http,servlet,request,request,http,servlet,response,response,throws,exception
AbstractTemplateView -> protected abstract void renderMergedTemplateModel( 			Map<String, Object> model, HttpServletRequest request, HttpServletResponse response) throws Exception_;1467667858;Subclasses must implement this method to actually render the view._@param model combined output Map, with request attributes and_session attributes merged into it if required_@param request current HTTP request_@param response current HTTP response_@throws Exception if rendering failed;protected abstract void renderMergedTemplateModel(_			Map<String, Object> model, HttpServletRequest request, HttpServletResponse response) throws Exception_;subclasses,must,implement,this,method,to,actually,render,the,view,param,model,combined,output,map,with,request,attributes,and,session,attributes,merged,into,it,if,required,param,request,current,http,request,param,response,current,http,response,throws,exception,if,rendering,failed;protected,abstract,void,render,merged,template,model,map,string,object,model,http,servlet,request,request,http,servlet,response,response,throws,exception
AbstractTemplateView -> protected abstract void renderMergedTemplateModel( 			Map<String, Object> model, HttpServletRequest request, HttpServletResponse response) throws Exception_;1529361191;Subclasses must implement this method to actually render the view._@param model combined output Map, with request attributes and_session attributes merged into it if required_@param request current HTTP request_@param response current HTTP response_@throws Exception if rendering failed;protected abstract void renderMergedTemplateModel(_			Map<String, Object> model, HttpServletRequest request, HttpServletResponse response) throws Exception_;subclasses,must,implement,this,method,to,actually,render,the,view,param,model,combined,output,map,with,request,attributes,and,session,attributes,merged,into,it,if,required,param,request,current,http,request,param,response,current,http,response,throws,exception,if,rendering,failed;protected,abstract,void,render,merged,template,model,map,string,object,model,http,servlet,request,request,http,servlet,response,response,throws,exception
AbstractTemplateView -> public void setAllowSessionOverride(boolean allowSessionOverride);1328020251;Set whether HttpSession attributes are allowed to override (hide)_controller generated model attributes of the same name. Default is "false",_which causes an exception to be thrown if session attributes of the same_name as model attributes are found.;public void setAllowSessionOverride(boolean allowSessionOverride) {_		this.allowSessionOverride = allowSessionOverride__	};set,whether,http,session,attributes,are,allowed,to,override,hide,controller,generated,model,attributes,of,the,same,name,default,is,false,which,causes,an,exception,to,be,thrown,if,session,attributes,of,the,same,name,as,model,attributes,are,found;public,void,set,allow,session,override,boolean,allow,session,override,this,allow,session,override,allow,session,override
AbstractTemplateView -> public void setAllowSessionOverride(boolean allowSessionOverride);1385412762;Set whether HttpSession attributes are allowed to override (hide)_controller generated model attributes of the same name. Default is "false",_which causes an exception to be thrown if session attributes of the same_name as model attributes are found.;public void setAllowSessionOverride(boolean allowSessionOverride) {_		this.allowSessionOverride = allowSessionOverride__	};set,whether,http,session,attributes,are,allowed,to,override,hide,controller,generated,model,attributes,of,the,same,name,default,is,false,which,causes,an,exception,to,be,thrown,if,session,attributes,of,the,same,name,as,model,attributes,are,found;public,void,set,allow,session,override,boolean,allow,session,override,this,allow,session,override,allow,session,override
AbstractTemplateView -> public void setAllowSessionOverride(boolean allowSessionOverride);1427228652;Set whether HttpSession attributes are allowed to override (hide)_controller generated model attributes of the same name. Default is "false",_which causes an exception to be thrown if session attributes of the same_name as model attributes are found.;public void setAllowSessionOverride(boolean allowSessionOverride) {_		this.allowSessionOverride = allowSessionOverride__	};set,whether,http,session,attributes,are,allowed,to,override,hide,controller,generated,model,attributes,of,the,same,name,default,is,false,which,causes,an,exception,to,be,thrown,if,session,attributes,of,the,same,name,as,model,attributes,are,found;public,void,set,allow,session,override,boolean,allow,session,override,this,allow,session,override,allow,session,override
AbstractTemplateView -> public void setAllowSessionOverride(boolean allowSessionOverride);1467667858;Set whether HttpSession attributes are allowed to override (hide)_controller generated model attributes of the same name. Default is "false",_which causes an exception to be thrown if session attributes of the same_name as model attributes are found.;public void setAllowSessionOverride(boolean allowSessionOverride) {_		this.allowSessionOverride = allowSessionOverride__	};set,whether,http,session,attributes,are,allowed,to,override,hide,controller,generated,model,attributes,of,the,same,name,default,is,false,which,causes,an,exception,to,be,thrown,if,session,attributes,of,the,same,name,as,model,attributes,are,found;public,void,set,allow,session,override,boolean,allow,session,override,this,allow,session,override,allow,session,override
AbstractTemplateView -> public void setAllowSessionOverride(boolean allowSessionOverride);1529361191;Set whether HttpSession attributes are allowed to override (hide)_controller generated model attributes of the same name. Default is "false",_which causes an exception to be thrown if session attributes of the same_name as model attributes are found.;public void setAllowSessionOverride(boolean allowSessionOverride) {_		this.allowSessionOverride = allowSessionOverride__	};set,whether,http,session,attributes,are,allowed,to,override,hide,controller,generated,model,attributes,of,the,same,name,default,is,false,which,causes,an,exception,to,be,thrown,if,session,attributes,of,the,same,name,as,model,attributes,are,found;public,void,set,allow,session,override,boolean,allow,session,override,this,allow,session,override,allow,session,override
AbstractTemplateView -> public void setAllowRequestOverride(boolean allowRequestOverride);1328020251;Set whether HttpServletRequest attributes are allowed to override (hide)_controller generated model attributes of the same name. Default is "false",_which causes an exception to be thrown if request attributes of the same_name as model attributes are found.;public void setAllowRequestOverride(boolean allowRequestOverride) {_		this.allowRequestOverride = allowRequestOverride__	};set,whether,http,servlet,request,attributes,are,allowed,to,override,hide,controller,generated,model,attributes,of,the,same,name,default,is,false,which,causes,an,exception,to,be,thrown,if,request,attributes,of,the,same,name,as,model,attributes,are,found;public,void,set,allow,request,override,boolean,allow,request,override,this,allow,request,override,allow,request,override
AbstractTemplateView -> public void setAllowRequestOverride(boolean allowRequestOverride);1385412762;Set whether HttpServletRequest attributes are allowed to override (hide)_controller generated model attributes of the same name. Default is "false",_which causes an exception to be thrown if request attributes of the same_name as model attributes are found.;public void setAllowRequestOverride(boolean allowRequestOverride) {_		this.allowRequestOverride = allowRequestOverride__	};set,whether,http,servlet,request,attributes,are,allowed,to,override,hide,controller,generated,model,attributes,of,the,same,name,default,is,false,which,causes,an,exception,to,be,thrown,if,request,attributes,of,the,same,name,as,model,attributes,are,found;public,void,set,allow,request,override,boolean,allow,request,override,this,allow,request,override,allow,request,override
AbstractTemplateView -> public void setAllowRequestOverride(boolean allowRequestOverride);1427228652;Set whether HttpServletRequest attributes are allowed to override (hide)_controller generated model attributes of the same name. Default is "false",_which causes an exception to be thrown if request attributes of the same_name as model attributes are found.;public void setAllowRequestOverride(boolean allowRequestOverride) {_		this.allowRequestOverride = allowRequestOverride__	};set,whether,http,servlet,request,attributes,are,allowed,to,override,hide,controller,generated,model,attributes,of,the,same,name,default,is,false,which,causes,an,exception,to,be,thrown,if,request,attributes,of,the,same,name,as,model,attributes,are,found;public,void,set,allow,request,override,boolean,allow,request,override,this,allow,request,override,allow,request,override
AbstractTemplateView -> public void setAllowRequestOverride(boolean allowRequestOverride);1467667858;Set whether HttpServletRequest attributes are allowed to override (hide)_controller generated model attributes of the same name. Default is "false",_which causes an exception to be thrown if request attributes of the same_name as model attributes are found.;public void setAllowRequestOverride(boolean allowRequestOverride) {_		this.allowRequestOverride = allowRequestOverride__	};set,whether,http,servlet,request,attributes,are,allowed,to,override,hide,controller,generated,model,attributes,of,the,same,name,default,is,false,which,causes,an,exception,to,be,thrown,if,request,attributes,of,the,same,name,as,model,attributes,are,found;public,void,set,allow,request,override,boolean,allow,request,override,this,allow,request,override,allow,request,override
AbstractTemplateView -> public void setAllowRequestOverride(boolean allowRequestOverride);1529361191;Set whether HttpServletRequest attributes are allowed to override (hide)_controller generated model attributes of the same name. Default is "false",_which causes an exception to be thrown if request attributes of the same_name as model attributes are found.;public void setAllowRequestOverride(boolean allowRequestOverride) {_		this.allowRequestOverride = allowRequestOverride__	};set,whether,http,servlet,request,attributes,are,allowed,to,override,hide,controller,generated,model,attributes,of,the,same,name,default,is,false,which,causes,an,exception,to,be,thrown,if,request,attributes,of,the,same,name,as,model,attributes,are,found;public,void,set,allow,request,override,boolean,allow,request,override,this,allow,request,override,allow,request,override
AbstractTemplateView -> public void setExposeSpringMacroHelpers(boolean exposeSpringMacroHelpers);1328020251;Set whether to expose a RequestContext for use by Spring's macro library,_under the name "springMacroRequestContext". Default is "true"._<p>Currently needed for Spring's Velocity and FreeMarker default macros._Note that this is <i>not</i> required for templates that use HTML_forms <i>unless</i> you wish to take advantage of the Spring helper macros._@see #SPRING_MACRO_REQUEST_CONTEXT_ATTRIBUTE;public void setExposeSpringMacroHelpers(boolean exposeSpringMacroHelpers) {_		this.exposeSpringMacroHelpers = exposeSpringMacroHelpers__	};set,whether,to,expose,a,request,context,for,use,by,spring,s,macro,library,under,the,name,spring,macro,request,context,default,is,true,p,currently,needed,for,spring,s,velocity,and,free,marker,default,macros,note,that,this,is,i,not,i,required,for,templates,that,use,html,forms,i,unless,i,you,wish,to,take,advantage,of,the,spring,helper,macros,see;public,void,set,expose,spring,macro,helpers,boolean,expose,spring,macro,helpers,this,expose,spring,macro,helpers,expose,spring,macro,helpers
AbstractTemplateView -> public void setExposeSpringMacroHelpers(boolean exposeSpringMacroHelpers);1385412762;Set whether to expose a RequestContext for use by Spring's macro library,_under the name "springMacroRequestContext". Default is "true"._<p>Currently needed for Spring's Velocity and FreeMarker default macros._Note that this is <i>not</i> required for templates that use HTML_forms <i>unless</i> you wish to take advantage of the Spring helper macros._@see #SPRING_MACRO_REQUEST_CONTEXT_ATTRIBUTE;public void setExposeSpringMacroHelpers(boolean exposeSpringMacroHelpers) {_		this.exposeSpringMacroHelpers = exposeSpringMacroHelpers__	};set,whether,to,expose,a,request,context,for,use,by,spring,s,macro,library,under,the,name,spring,macro,request,context,default,is,true,p,currently,needed,for,spring,s,velocity,and,free,marker,default,macros,note,that,this,is,i,not,i,required,for,templates,that,use,html,forms,i,unless,i,you,wish,to,take,advantage,of,the,spring,helper,macros,see;public,void,set,expose,spring,macro,helpers,boolean,expose,spring,macro,helpers,this,expose,spring,macro,helpers,expose,spring,macro,helpers
AbstractTemplateView -> public void setExposeSpringMacroHelpers(boolean exposeSpringMacroHelpers);1427228652;Set whether to expose a RequestContext for use by Spring's macro library,_under the name "springMacroRequestContext". Default is "true"._<p>Currently needed for Spring's Velocity and FreeMarker default macros._Note that this is <i>not</i> required for templates that use HTML_forms <i>unless</i> you wish to take advantage of the Spring helper macros._@see #SPRING_MACRO_REQUEST_CONTEXT_ATTRIBUTE;public void setExposeSpringMacroHelpers(boolean exposeSpringMacroHelpers) {_		this.exposeSpringMacroHelpers = exposeSpringMacroHelpers__	};set,whether,to,expose,a,request,context,for,use,by,spring,s,macro,library,under,the,name,spring,macro,request,context,default,is,true,p,currently,needed,for,spring,s,velocity,and,free,marker,default,macros,note,that,this,is,i,not,i,required,for,templates,that,use,html,forms,i,unless,i,you,wish,to,take,advantage,of,the,spring,helper,macros,see;public,void,set,expose,spring,macro,helpers,boolean,expose,spring,macro,helpers,this,expose,spring,macro,helpers,expose,spring,macro,helpers
AbstractTemplateView -> public void setExposeSpringMacroHelpers(boolean exposeSpringMacroHelpers);1467667858;Set whether to expose a RequestContext for use by Spring's macro library,_under the name "springMacroRequestContext". Default is "true"._<p>Currently needed for Spring's FreeMarker default macros._Note that this is <i>not</i> required for templates that use HTML forms_<i>unless</i> you wish to take advantage of the Spring helper macros._@see #SPRING_MACRO_REQUEST_CONTEXT_ATTRIBUTE;public void setExposeSpringMacroHelpers(boolean exposeSpringMacroHelpers) {_		this.exposeSpringMacroHelpers = exposeSpringMacroHelpers__	};set,whether,to,expose,a,request,context,for,use,by,spring,s,macro,library,under,the,name,spring,macro,request,context,default,is,true,p,currently,needed,for,spring,s,free,marker,default,macros,note,that,this,is,i,not,i,required,for,templates,that,use,html,forms,i,unless,i,you,wish,to,take,advantage,of,the,spring,helper,macros,see;public,void,set,expose,spring,macro,helpers,boolean,expose,spring,macro,helpers,this,expose,spring,macro,helpers,expose,spring,macro,helpers
AbstractTemplateView -> public void setExposeSpringMacroHelpers(boolean exposeSpringMacroHelpers);1529361191;Set whether to expose a RequestContext for use by Spring's macro library,_under the name "springMacroRequestContext". Default is "true"._<p>Currently needed for Spring's FreeMarker default macros._Note that this is <i>not</i> required for templates that use HTML forms_<i>unless</i> you wish to take advantage of the Spring helper macros._@see #SPRING_MACRO_REQUEST_CONTEXT_ATTRIBUTE;public void setExposeSpringMacroHelpers(boolean exposeSpringMacroHelpers) {_		this.exposeSpringMacroHelpers = exposeSpringMacroHelpers__	};set,whether,to,expose,a,request,context,for,use,by,spring,s,macro,library,under,the,name,spring,macro,request,context,default,is,true,p,currently,needed,for,spring,s,free,marker,default,macros,note,that,this,is,i,not,i,required,for,templates,that,use,html,forms,i,unless,i,you,wish,to,take,advantage,of,the,spring,helper,macros,see;public,void,set,expose,spring,macro,helpers,boolean,expose,spring,macro,helpers,this,expose,spring,macro,helpers,expose,spring,macro,helpers
