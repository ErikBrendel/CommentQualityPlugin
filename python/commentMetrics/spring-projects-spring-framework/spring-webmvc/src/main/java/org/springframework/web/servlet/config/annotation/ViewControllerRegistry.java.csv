# id;timestamp;commentText;codeText;commentWords;codeWords
ViewControllerRegistry -> public void addStatusController(String urlPath, HttpStatus statusCode);1405652648;Map a simple controller to the given URL path (or pattern) in order to_set the response status to the given code without rendering a body._@since 4.1;public void addStatusController(String urlPath, HttpStatus statusCode) {_		ViewControllerRegistration registration = new ViewControllerRegistration(urlPath)__		registration.setStatusCode(statusCode)__		registration.getViewController().setStatusOnly(true)__		this.registrations.add(registration)__	};map,a,simple,controller,to,the,given,url,path,or,pattern,in,order,to,set,the,response,status,to,the,given,code,without,rendering,a,body,since,4,1;public,void,add,status,controller,string,url,path,http,status,status,code,view,controller,registration,registration,new,view,controller,registration,url,path,registration,set,status,code,status,code,registration,get,view,controller,set,status,only,true,this,registrations,add,registration
ViewControllerRegistry -> public void addStatusController(String urlPath, HttpStatus statusCode);1449252577;Map a simple controller to the given URL path (or pattern) in order to_set the response status to the given code without rendering a body._@since 4.1;public void addStatusController(String urlPath, HttpStatus statusCode) {_		ViewControllerRegistration registration = new ViewControllerRegistration(urlPath)__		registration.setApplicationContext(this.applicationContext)__		registration.setStatusCode(statusCode)__		registration.getViewController().setStatusOnly(true)__		this.registrations.add(registration)__	};map,a,simple,controller,to,the,given,url,path,or,pattern,in,order,to,set,the,response,status,to,the,given,code,without,rendering,a,body,since,4,1;public,void,add,status,controller,string,url,path,http,status,status,code,view,controller,registration,registration,new,view,controller,registration,url,path,registration,set,application,context,this,application,context,registration,set,status,code,status,code,registration,get,view,controller,set,status,only,true,this,registrations,add,registration
ViewControllerRegistry -> public void addStatusController(String urlPath, HttpStatus statusCode);1467730834;Map a simple controller to the given URL path (or pattern) in order to_set the response status to the given code without rendering a body._@since 4.1;public void addStatusController(String urlPath, HttpStatus statusCode) {_		ViewControllerRegistration registration = new ViewControllerRegistration(urlPath)__		registration.setApplicationContext(this.applicationContext)__		registration.setStatusCode(statusCode)__		registration.getViewController().setStatusOnly(true)__		this.registrations.add(registration)__	};map,a,simple,controller,to,the,given,url,path,or,pattern,in,order,to,set,the,response,status,to,the,given,code,without,rendering,a,body,since,4,1;public,void,add,status,controller,string,url,path,http,status,status,code,view,controller,registration,registration,new,view,controller,registration,url,path,registration,set,application,context,this,application,context,registration,set,status,code,status,code,registration,get,view,controller,set,status,only,true,this,registrations,add,registration
ViewControllerRegistry -> public void addStatusController(String urlPath, HttpStatus statusCode);1472808958;Map a simple controller to the given URL path (or pattern) in order to_set the response status to the given code without rendering a body._@since 4.1;public void addStatusController(String urlPath, HttpStatus statusCode) {_		ViewControllerRegistration registration = new ViewControllerRegistration(urlPath)__		registration.setApplicationContext(this.applicationContext)__		registration.setStatusCode(statusCode)__		registration.getViewController().setStatusOnly(true)__		this.registrations.add(registration)__	};map,a,simple,controller,to,the,given,url,path,or,pattern,in,order,to,set,the,response,status,to,the,given,code,without,rendering,a,body,since,4,1;public,void,add,status,controller,string,url,path,http,status,status,code,view,controller,registration,registration,new,view,controller,registration,url,path,registration,set,application,context,this,application,context,registration,set,status,code,status,code,registration,get,view,controller,set,status,only,true,this,registrations,add,registration
ViewControllerRegistry -> public void addStatusController(String urlPath, HttpStatus statusCode);1495868221;Map a simple controller to the given URL path (or pattern) in order to_set the response status to the given code without rendering a body._@since 4.1;public void addStatusController(String urlPath, HttpStatus statusCode) {_		ViewControllerRegistration registration = new ViewControllerRegistration(urlPath)__		registration.setApplicationContext(this.applicationContext)__		registration.setStatusCode(statusCode)__		registration.getViewController().setStatusOnly(true)__		this.registrations.add(registration)__	};map,a,simple,controller,to,the,given,url,path,or,pattern,in,order,to,set,the,response,status,to,the,given,code,without,rendering,a,body,since,4,1;public,void,add,status,controller,string,url,path,http,status,status,code,view,controller,registration,registration,new,view,controller,registration,url,path,registration,set,application,context,this,application,context,registration,set,status,code,status,code,registration,get,view,controller,set,status,only,true,this,registrations,add,registration
ViewControllerRegistry -> public void addStatusController(String urlPath, HttpStatus statusCode);1498780456;Map a simple controller to the given URL path (or pattern) in order to_set the response status to the given code without rendering a body._@since 4.1;public void addStatusController(String urlPath, HttpStatus statusCode) {_		ViewControllerRegistration registration = new ViewControllerRegistration(urlPath)__		registration.setApplicationContext(this.applicationContext)__		registration.setStatusCode(statusCode)__		registration.getViewController().setStatusOnly(true)__		this.registrations.add(registration)__	};map,a,simple,controller,to,the,given,url,path,or,pattern,in,order,to,set,the,response,status,to,the,given,code,without,rendering,a,body,since,4,1;public,void,add,status,controller,string,url,path,http,status,status,code,view,controller,registration,registration,new,view,controller,registration,url,path,registration,set,application,context,this,application,context,registration,set,status,code,status,code,registration,get,view,controller,set,status,only,true,this,registrations,add,registration
ViewControllerRegistry -> public void addStatusController(String urlPath, HttpStatus statusCode);1506534768;Map a simple controller to the given URL path (or pattern) in order to_set the response status to the given code without rendering a body._@since 4.1;public void addStatusController(String urlPath, HttpStatus statusCode) {_		ViewControllerRegistration registration = new ViewControllerRegistration(urlPath)__		registration.setApplicationContext(this.applicationContext)__		registration.setStatusCode(statusCode)__		registration.getViewController().setStatusOnly(true)__		this.registrations.add(registration)__	};map,a,simple,controller,to,the,given,url,path,or,pattern,in,order,to,set,the,response,status,to,the,given,code,without,rendering,a,body,since,4,1;public,void,add,status,controller,string,url,path,http,status,status,code,view,controller,registration,registration,new,view,controller,registration,url,path,registration,set,application,context,this,application,context,registration,set,status,code,status,code,registration,get,view,controller,set,status,only,true,this,registrations,add,registration
ViewControllerRegistry -> public void addStatusController(String urlPath, HttpStatus statusCode);1518167476;Map a simple controller to the given URL path (or pattern) in order to_set the response status to the given code without rendering a body._@since 4.1;public void addStatusController(String urlPath, HttpStatus statusCode) {_		ViewControllerRegistration registration = new ViewControllerRegistration(urlPath)__		registration.setApplicationContext(this.applicationContext)__		registration.setStatusCode(statusCode)__		registration.getViewController().setStatusOnly(true)__		this.registrations.add(registration)__	};map,a,simple,controller,to,the,given,url,path,or,pattern,in,order,to,set,the,response,status,to,the,given,code,without,rendering,a,body,since,4,1;public,void,add,status,controller,string,url,path,http,status,status,code,view,controller,registration,registration,new,view,controller,registration,url,path,registration,set,application,context,this,application,context,registration,set,status,code,status,code,registration,get,view,controller,set,status,only,true,this,registrations,add,registration
ViewControllerRegistry -> public void addStatusController(String urlPath, HttpStatus statusCode);1518167818;Map a simple controller to the given URL path (or pattern) in order to_set the response status to the given code without rendering a body._@since 4.1;public void addStatusController(String urlPath, HttpStatus statusCode) {_		ViewControllerRegistration registration = new ViewControllerRegistration(urlPath)__		registration.setApplicationContext(this.applicationContext)__		registration.setStatusCode(statusCode)__		registration.getViewController().setStatusOnly(true)__		this.registrations.add(registration)__	};map,a,simple,controller,to,the,given,url,path,or,pattern,in,order,to,set,the,response,status,to,the,given,code,without,rendering,a,body,since,4,1;public,void,add,status,controller,string,url,path,http,status,status,code,view,controller,registration,registration,new,view,controller,registration,url,path,registration,set,application,context,this,application,context,registration,set,status,code,status,code,registration,get,view,controller,set,status,only,true,this,registrations,add,registration
ViewControllerRegistry -> public ViewControllerRegistry(@Nullable ApplicationContext applicationContext);1506534768;Class constructor with {@link ApplicationContext}._@since 4.3.12;public ViewControllerRegistry(@Nullable ApplicationContext applicationContext) {_		this.applicationContext = applicationContext__	};class,constructor,with,link,application,context,since,4,3,12;public,view,controller,registry,nullable,application,context,application,context,this,application,context,application,context
ViewControllerRegistry -> public ViewControllerRegistry(@Nullable ApplicationContext applicationContext);1518167476;Class constructor with {@link ApplicationContext}._@since 4.3.12;public ViewControllerRegistry(@Nullable ApplicationContext applicationContext) {_		this.applicationContext = applicationContext__	};class,constructor,with,link,application,context,since,4,3,12;public,view,controller,registry,nullable,application,context,application,context,this,application,context,application,context
ViewControllerRegistry -> public ViewControllerRegistry(@Nullable ApplicationContext applicationContext);1518167818;Class constructor with {@link ApplicationContext}._@since 4.3.12;public ViewControllerRegistry(@Nullable ApplicationContext applicationContext) {_		this.applicationContext = applicationContext__	};class,constructor,with,link,application,context,since,4,3,12;public,view,controller,registry,nullable,application,context,application,context,this,application,context,application,context
ViewControllerRegistry -> @Nullable 	protected SimpleUrlHandlerMapping buildHandlerMapping();1506534768;Return the {@code HandlerMapping} that contains the registered view_controller mappings, or {@code null} for no registrations._@since 4.3.12;@Nullable_	protected SimpleUrlHandlerMapping buildHandlerMapping() {_		if (this.registrations.isEmpty() && this.redirectRegistrations.isEmpty()) {_			return null__		}__		Map<String, Object> urlMap = new LinkedHashMap<String, Object>()__		for (ViewControllerRegistration registration : this.registrations) {_			urlMap.put(registration.getUrlPath(), registration.getViewController())__		}_		for (RedirectViewControllerRegistration registration : this.redirectRegistrations) {_			urlMap.put(registration.getUrlPath(), registration.getViewController())__		}__		SimpleUrlHandlerMapping handlerMapping = new SimpleUrlHandlerMapping()__		handlerMapping.setUrlMap(urlMap)__		handlerMapping.setOrder(this.order)__		return handlerMapping__	};return,the,code,handler,mapping,that,contains,the,registered,view,controller,mappings,or,code,null,for,no,registrations,since,4,3,12;nullable,protected,simple,url,handler,mapping,build,handler,mapping,if,this,registrations,is,empty,this,redirect,registrations,is,empty,return,null,map,string,object,url,map,new,linked,hash,map,string,object,for,view,controller,registration,registration,this,registrations,url,map,put,registration,get,url,path,registration,get,view,controller,for,redirect,view,controller,registration,registration,this,redirect,registrations,url,map,put,registration,get,url,path,registration,get,view,controller,simple,url,handler,mapping,handler,mapping,new,simple,url,handler,mapping,handler,mapping,set,url,map,url,map,handler,mapping,set,order,this,order,return,handler,mapping
ViewControllerRegistry -> @Nullable 	protected SimpleUrlHandlerMapping buildHandlerMapping();1518167476;Return the {@code HandlerMapping} that contains the registered view_controller mappings, or {@code null} for no registrations._@since 4.3.12;@Nullable_	protected SimpleUrlHandlerMapping buildHandlerMapping() {_		if (this.registrations.isEmpty() && this.redirectRegistrations.isEmpty()) {_			return null__		}__		Map<String, Object> urlMap = new LinkedHashMap<>()__		for (ViewControllerRegistration registration : this.registrations) {_			urlMap.put(registration.getUrlPath(), registration.getViewController())__		}_		for (RedirectViewControllerRegistration registration : this.redirectRegistrations) {_			urlMap.put(registration.getUrlPath(), registration.getViewController())__		}__		SimpleUrlHandlerMapping handlerMapping = new SimpleUrlHandlerMapping()__		handlerMapping.setUrlMap(urlMap)__		handlerMapping.setOrder(this.order)__		return handlerMapping__	};return,the,code,handler,mapping,that,contains,the,registered,view,controller,mappings,or,code,null,for,no,registrations,since,4,3,12;nullable,protected,simple,url,handler,mapping,build,handler,mapping,if,this,registrations,is,empty,this,redirect,registrations,is,empty,return,null,map,string,object,url,map,new,linked,hash,map,for,view,controller,registration,registration,this,registrations,url,map,put,registration,get,url,path,registration,get,view,controller,for,redirect,view,controller,registration,registration,this,redirect,registrations,url,map,put,registration,get,url,path,registration,get,view,controller,simple,url,handler,mapping,handler,mapping,new,simple,url,handler,mapping,handler,mapping,set,url,map,url,map,handler,mapping,set,order,this,order,return,handler,mapping
ViewControllerRegistry -> @Nullable 	protected SimpleUrlHandlerMapping buildHandlerMapping();1518167818;Return the {@code HandlerMapping} that contains the registered view_controller mappings, or {@code null} for no registrations._@since 4.3.12;@Nullable_	protected SimpleUrlHandlerMapping buildHandlerMapping() {_		if (this.registrations.isEmpty() && this.redirectRegistrations.isEmpty()) {_			return null__		}__		Map<String, Object> urlMap = new LinkedHashMap<>()__		for (ViewControllerRegistration registration : this.registrations) {_			urlMap.put(registration.getUrlPath(), registration.getViewController())__		}_		for (RedirectViewControllerRegistration registration : this.redirectRegistrations) {_			urlMap.put(registration.getUrlPath(), registration.getViewController())__		}__		SimpleUrlHandlerMapping handlerMapping = new SimpleUrlHandlerMapping()__		handlerMapping.setUrlMap(urlMap)__		handlerMapping.setOrder(this.order)__		return handlerMapping__	};return,the,code,handler,mapping,that,contains,the,registered,view,controller,mappings,or,code,null,for,no,registrations,since,4,3,12;nullable,protected,simple,url,handler,mapping,build,handler,mapping,if,this,registrations,is,empty,this,redirect,registrations,is,empty,return,null,map,string,object,url,map,new,linked,hash,map,for,view,controller,registration,registration,this,registrations,url,map,put,registration,get,url,path,registration,get,view,controller,for,redirect,view,controller,registration,registration,this,redirect,registrations,url,map,put,registration,get,url,path,registration,get,view,controller,simple,url,handler,mapping,handler,mapping,new,simple,url,handler,mapping,handler,mapping,set,url,map,url,map,handler,mapping,set,order,this,order,return,handler,mapping
ViewControllerRegistry -> public void setOrder(int order);1328020251;Specify the order to use for ViewControllers mappings relative to other {@link HandlerMapping}s_configured in the Spring MVC application context. The default value for view controllers is 1,_which is 1 higher than the value used for annotated controllers.;public void setOrder(int order) {_		this.order = order__	};specify,the,order,to,use,for,view,controllers,mappings,relative,to,other,link,handler,mapping,s,configured,in,the,spring,mvc,application,context,the,default,value,for,view,controllers,is,1,which,is,1,higher,than,the,value,used,for,annotated,controllers;public,void,set,order,int,order,this,order,order
ViewControllerRegistry -> public void setOrder(int order);1356735495;Specify the order to use for ViewControllers mappings relative to other {@link HandlerMapping}s_configured in the Spring MVC application context. The default value for view controllers is 1,_which is 1 higher than the value used for annotated controllers.;public void setOrder(int order) {_		this.order = order__	};specify,the,order,to,use,for,view,controllers,mappings,relative,to,other,link,handler,mapping,s,configured,in,the,spring,mvc,application,context,the,default,value,for,view,controllers,is,1,which,is,1,higher,than,the,value,used,for,annotated,controllers;public,void,set,order,int,order,this,order,order
ViewControllerRegistry -> public void setOrder(int order);1362408075;Specify the order to use for ViewControllers mappings relative to other {@link HandlerMapping}s_configured in the Spring MVC application context. The default value for view controllers is 1,_which is 1 higher than the value used for annotated controllers.;public void setOrder(int order) {_		this.order = order__	};specify,the,order,to,use,for,view,controllers,mappings,relative,to,other,link,handler,mapping,s,configured,in,the,spring,mvc,application,context,the,default,value,for,view,controllers,is,1,which,is,1,higher,than,the,value,used,for,annotated,controllers;public,void,set,order,int,order,this,order,order
ViewControllerRegistry -> public void setOrder(int order);1405652648;Specify the order to use for the {@code HandlerMapping} used to map view_controllers relative to other handler mappings configured in Spring MVC._<p>By default this is set to 1, i.e. right after annotated controllers,_which are ordered at 0.;public void setOrder(int order) {_		this.order = order__	};specify,the,order,to,use,for,the,code,handler,mapping,used,to,map,view,controllers,relative,to,other,handler,mappings,configured,in,spring,mvc,p,by,default,this,is,set,to,1,i,e,right,after,annotated,controllers,which,are,ordered,at,0;public,void,set,order,int,order,this,order,order
ViewControllerRegistry -> public void setOrder(int order);1405652648;Specify the order to use for the {@code HandlerMapping} used to map view_controllers relative to other handler mappings configured in Spring MVC._<p>By default this is set to 1, i.e. right after annotated controllers,_which are ordered at 0.;public void setOrder(int order) {_		this.order = order__	};specify,the,order,to,use,for,the,code,handler,mapping,used,to,map,view,controllers,relative,to,other,handler,mappings,configured,in,spring,mvc,p,by,default,this,is,set,to,1,i,e,right,after,annotated,controllers,which,are,ordered,at,0;public,void,set,order,int,order,this,order,order
ViewControllerRegistry -> public void setOrder(int order);1449252577;Specify the order to use for the {@code HandlerMapping} used to map view_controllers relative to other handler mappings configured in Spring MVC._<p>By default this is set to 1, i.e. right after annotated controllers,_which are ordered at 0.;public void setOrder(int order) {_		this.order = order__	};specify,the,order,to,use,for,the,code,handler,mapping,used,to,map,view,controllers,relative,to,other,handler,mappings,configured,in,spring,mvc,p,by,default,this,is,set,to,1,i,e,right,after,annotated,controllers,which,are,ordered,at,0;public,void,set,order,int,order,this,order,order
ViewControllerRegistry -> public void setOrder(int order);1467730834;Specify the order to use for the {@code HandlerMapping} used to map view_controllers relative to other handler mappings configured in Spring MVC._<p>By default this is set to 1, i.e. right after annotated controllers,_which are ordered at 0.;public void setOrder(int order) {_		this.order = order__	};specify,the,order,to,use,for,the,code,handler,mapping,used,to,map,view,controllers,relative,to,other,handler,mappings,configured,in,spring,mvc,p,by,default,this,is,set,to,1,i,e,right,after,annotated,controllers,which,are,ordered,at,0;public,void,set,order,int,order,this,order,order
ViewControllerRegistry -> public void setOrder(int order);1472808958;Specify the order to use for the {@code HandlerMapping} used to map view_controllers relative to other handler mappings configured in Spring MVC._<p>By default this is set to 1, i.e. right after annotated controllers,_which are ordered at 0.;public void setOrder(int order) {_		this.order = order__	};specify,the,order,to,use,for,the,code,handler,mapping,used,to,map,view,controllers,relative,to,other,handler,mappings,configured,in,spring,mvc,p,by,default,this,is,set,to,1,i,e,right,after,annotated,controllers,which,are,ordered,at,0;public,void,set,order,int,order,this,order,order
ViewControllerRegistry -> public void setOrder(int order);1495868221;Specify the order to use for the {@code HandlerMapping} used to map view_controllers relative to other handler mappings configured in Spring MVC._<p>By default this is set to 1, i.e. right after annotated controllers,_which are ordered at 0.;public void setOrder(int order) {_		this.order = order__	};specify,the,order,to,use,for,the,code,handler,mapping,used,to,map,view,controllers,relative,to,other,handler,mappings,configured,in,spring,mvc,p,by,default,this,is,set,to,1,i,e,right,after,annotated,controllers,which,are,ordered,at,0;public,void,set,order,int,order,this,order,order
ViewControllerRegistry -> public void setOrder(int order);1498780456;Specify the order to use for the {@code HandlerMapping} used to map view_controllers relative to other handler mappings configured in Spring MVC._<p>By default this is set to 1, i.e. right after annotated controllers,_which are ordered at 0.;public void setOrder(int order) {_		this.order = order__	};specify,the,order,to,use,for,the,code,handler,mapping,used,to,map,view,controllers,relative,to,other,handler,mappings,configured,in,spring,mvc,p,by,default,this,is,set,to,1,i,e,right,after,annotated,controllers,which,are,ordered,at,0;public,void,set,order,int,order,this,order,order
ViewControllerRegistry -> public void setOrder(int order);1506534768;Specify the order to use for the {@code HandlerMapping} used to map view_controllers relative to other handler mappings configured in Spring MVC._<p>By default this is set to 1, i.e. right after annotated controllers,_which are ordered at 0.;public void setOrder(int order) {_		this.order = order__	};specify,the,order,to,use,for,the,code,handler,mapping,used,to,map,view,controllers,relative,to,other,handler,mappings,configured,in,spring,mvc,p,by,default,this,is,set,to,1,i,e,right,after,annotated,controllers,which,are,ordered,at,0;public,void,set,order,int,order,this,order,order
ViewControllerRegistry -> public void setOrder(int order);1518167476;Specify the order to use for the {@code HandlerMapping} used to map view_controllers relative to other handler mappings configured in Spring MVC._<p>By default this is set to 1, i.e. right after annotated controllers,_which are ordered at 0.;public void setOrder(int order) {_		this.order = order__	};specify,the,order,to,use,for,the,code,handler,mapping,used,to,map,view,controllers,relative,to,other,handler,mappings,configured,in,spring,mvc,p,by,default,this,is,set,to,1,i,e,right,after,annotated,controllers,which,are,ordered,at,0;public,void,set,order,int,order,this,order,order
ViewControllerRegistry -> public void setOrder(int order);1518167818;Specify the order to use for the {@code HandlerMapping} used to map view_controllers relative to other handler mappings configured in Spring MVC._<p>By default this is set to 1, i.e. right after annotated controllers,_which are ordered at 0.;public void setOrder(int order) {_		this.order = order__	};specify,the,order,to,use,for,the,code,handler,mapping,used,to,map,view,controllers,relative,to,other,handler,mappings,configured,in,spring,mvc,p,by,default,this,is,set,to,1,i,e,right,after,annotated,controllers,which,are,ordered,at,0;public,void,set,order,int,order,this,order,order
ViewControllerRegistry -> @Nullable 	protected AbstractHandlerMapping getHandlerMapping();1495868221;Return the {@code HandlerMapping} that contains the registered view_controller mappings, or {@code null} for no registrations.;@Nullable_	protected AbstractHandlerMapping getHandlerMapping() {_		if (this.registrations.isEmpty() && this.redirectRegistrations.isEmpty()) {_			return null__		}_		Map<String, Object> urlMap = new LinkedHashMap<>()__		for (ViewControllerRegistration registration : this.registrations) {_			urlMap.put(registration.getUrlPath(), registration.getViewController())__		}_		for (RedirectViewControllerRegistration registration : this.redirectRegistrations) {_			urlMap.put(registration.getUrlPath(), registration.getViewController())__		}_		SimpleUrlHandlerMapping handlerMapping = new SimpleUrlHandlerMapping()__		handlerMapping.setOrder(this.order)__		handlerMapping.setUrlMap(urlMap)__		return handlerMapping__	};return,the,code,handler,mapping,that,contains,the,registered,view,controller,mappings,or,code,null,for,no,registrations;nullable,protected,abstract,handler,mapping,get,handler,mapping,if,this,registrations,is,empty,this,redirect,registrations,is,empty,return,null,map,string,object,url,map,new,linked,hash,map,for,view,controller,registration,registration,this,registrations,url,map,put,registration,get,url,path,registration,get,view,controller,for,redirect,view,controller,registration,registration,this,redirect,registrations,url,map,put,registration,get,url,path,registration,get,view,controller,simple,url,handler,mapping,handler,mapping,new,simple,url,handler,mapping,handler,mapping,set,order,this,order,handler,mapping,set,url,map,url,map,return,handler,mapping
ViewControllerRegistry -> @Nullable 	protected AbstractHandlerMapping getHandlerMapping();1498780456;Return the {@code HandlerMapping} that contains the registered view_controller mappings, or {@code null} for no registrations.;@Nullable_	protected AbstractHandlerMapping getHandlerMapping() {_		if (this.registrations.isEmpty() && this.redirectRegistrations.isEmpty()) {_			return null__		}_		Map<String, Object> urlMap = new LinkedHashMap<>()__		for (ViewControllerRegistration registration : this.registrations) {_			urlMap.put(registration.getUrlPath(), registration.getViewController())__		}_		for (RedirectViewControllerRegistration registration : this.redirectRegistrations) {_			urlMap.put(registration.getUrlPath(), registration.getViewController())__		}_		SimpleUrlHandlerMapping handlerMapping = new SimpleUrlHandlerMapping()__		handlerMapping.setOrder(this.order)__		handlerMapping.setUrlMap(urlMap)__		return handlerMapping__	};return,the,code,handler,mapping,that,contains,the,registered,view,controller,mappings,or,code,null,for,no,registrations;nullable,protected,abstract,handler,mapping,get,handler,mapping,if,this,registrations,is,empty,this,redirect,registrations,is,empty,return,null,map,string,object,url,map,new,linked,hash,map,for,view,controller,registration,registration,this,registrations,url,map,put,registration,get,url,path,registration,get,view,controller,for,redirect,view,controller,registration,registration,this,redirect,registrations,url,map,put,registration,get,url,path,registration,get,view,controller,simple,url,handler,mapping,handler,mapping,new,simple,url,handler,mapping,handler,mapping,set,order,this,order,handler,mapping,set,url,map,url,map,return,handler,mapping
ViewControllerRegistry -> protected AbstractHandlerMapping getHandlerMapping();1328020251;Returns a handler mapping with the mapped ViewControllers_ or {@code null} in case of no registrations.;protected AbstractHandlerMapping getHandlerMapping() {_		if (registrations.isEmpty()) {_			return null__		}__		Map<String, Object> urlMap = new LinkedHashMap<String, Object>()__		for (ViewControllerRegistration registration : registrations) {_			urlMap.put(registration.getUrlPath(), registration.getViewController())__		}_		_		SimpleUrlHandlerMapping handlerMapping = new SimpleUrlHandlerMapping()__		handlerMapping.setOrder(order)__		handlerMapping.setUrlMap(urlMap)__		return handlerMapping__	};returns,a,handler,mapping,with,the,mapped,view,controllers,or,code,null,in,case,of,no,registrations;protected,abstract,handler,mapping,get,handler,mapping,if,registrations,is,empty,return,null,map,string,object,url,map,new,linked,hash,map,string,object,for,view,controller,registration,registration,registrations,url,map,put,registration,get,url,path,registration,get,view,controller,simple,url,handler,mapping,handler,mapping,new,simple,url,handler,mapping,handler,mapping,set,order,order,handler,mapping,set,url,map,url,map,return,handler,mapping
ViewControllerRegistry -> protected AbstractHandlerMapping getHandlerMapping();1356735495;Returns a handler mapping with the mapped ViewControllers_ or {@code null} in case of no registrations.;protected AbstractHandlerMapping getHandlerMapping() {_		if (registrations.isEmpty()) {_			return null__		}__		Map<String, Object> urlMap = new LinkedHashMap<String, Object>()__		for (ViewControllerRegistration registration : registrations) {_			urlMap.put(registration.getUrlPath(), registration.getViewController())__		}__		SimpleUrlHandlerMapping handlerMapping = new SimpleUrlHandlerMapping()__		handlerMapping.setOrder(order)__		handlerMapping.setUrlMap(urlMap)__		return handlerMapping__	};returns,a,handler,mapping,with,the,mapped,view,controllers,or,code,null,in,case,of,no,registrations;protected,abstract,handler,mapping,get,handler,mapping,if,registrations,is,empty,return,null,map,string,object,url,map,new,linked,hash,map,string,object,for,view,controller,registration,registration,registrations,url,map,put,registration,get,url,path,registration,get,view,controller,simple,url,handler,mapping,handler,mapping,new,simple,url,handler,mapping,handler,mapping,set,order,order,handler,mapping,set,url,map,url,map,return,handler,mapping
ViewControllerRegistry -> protected AbstractHandlerMapping getHandlerMapping();1362408075;Returns a handler mapping with the mapped ViewControllers_ or {@code null} in case of no registrations.;protected AbstractHandlerMapping getHandlerMapping() {_		if (registrations.isEmpty()) {_			return null__		}__		Map<String, Object> urlMap = new LinkedHashMap<String, Object>()__		for (ViewControllerRegistration registration : registrations) {_			urlMap.put(registration.getUrlPath(), registration.getViewController())__		}__		SimpleUrlHandlerMapping handlerMapping = new SimpleUrlHandlerMapping()__		handlerMapping.setOrder(order)__		handlerMapping.setUrlMap(urlMap)__		return handlerMapping__	};returns,a,handler,mapping,with,the,mapped,view,controllers,or,code,null,in,case,of,no,registrations;protected,abstract,handler,mapping,get,handler,mapping,if,registrations,is,empty,return,null,map,string,object,url,map,new,linked,hash,map,string,object,for,view,controller,registration,registration,registrations,url,map,put,registration,get,url,path,registration,get,view,controller,simple,url,handler,mapping,handler,mapping,new,simple,url,handler,mapping,handler,mapping,set,order,order,handler,mapping,set,url,map,url,map,return,handler,mapping
ViewControllerRegistry -> protected AbstractHandlerMapping getHandlerMapping();1405652648;Return the {@code HandlerMapping} that contains the registered view_controller mappings, or {@code null} for no registrations.;protected AbstractHandlerMapping getHandlerMapping() {_		if (this.registrations.isEmpty()) {_			return null__		}_		Map<String, Object> urlMap = new LinkedHashMap<String, Object>()__		for (ViewControllerRegistration registration : this.registrations) {_			urlMap.put(registration.getUrlPath(), registration.getViewController())__		}_		SimpleUrlHandlerMapping handlerMapping = new SimpleUrlHandlerMapping()__		handlerMapping.setOrder(this.order)__		handlerMapping.setUrlMap(urlMap)__		return handlerMapping__	};return,the,code,handler,mapping,that,contains,the,registered,view,controller,mappings,or,code,null,for,no,registrations;protected,abstract,handler,mapping,get,handler,mapping,if,this,registrations,is,empty,return,null,map,string,object,url,map,new,linked,hash,map,string,object,for,view,controller,registration,registration,this,registrations,url,map,put,registration,get,url,path,registration,get,view,controller,simple,url,handler,mapping,handler,mapping,new,simple,url,handler,mapping,handler,mapping,set,order,this,order,handler,mapping,set,url,map,url,map,return,handler,mapping
ViewControllerRegistry -> protected AbstractHandlerMapping getHandlerMapping();1405652648;Return the {@code HandlerMapping} that contains the registered view_controller mappings, or {@code null} for no registrations.;protected AbstractHandlerMapping getHandlerMapping() {_		if (this.registrations.isEmpty() && this.redirectRegistrations.isEmpty()) {_			return null__		}_		Map<String, Object> urlMap = new LinkedHashMap<String, Object>()__		for (ViewControllerRegistration registration : this.registrations) {_			urlMap.put(registration.getUrlPath(), registration.getViewController())__		}_		for (RedirectViewControllerRegistration registration : this.redirectRegistrations) {_			urlMap.put(registration.getUrlPath(), registration.getViewController())__		}_		SimpleUrlHandlerMapping handlerMapping = new SimpleUrlHandlerMapping()__		handlerMapping.setOrder(this.order)__		handlerMapping.setUrlMap(urlMap)__		return handlerMapping__	};return,the,code,handler,mapping,that,contains,the,registered,view,controller,mappings,or,code,null,for,no,registrations;protected,abstract,handler,mapping,get,handler,mapping,if,this,registrations,is,empty,this,redirect,registrations,is,empty,return,null,map,string,object,url,map,new,linked,hash,map,string,object,for,view,controller,registration,registration,this,registrations,url,map,put,registration,get,url,path,registration,get,view,controller,for,redirect,view,controller,registration,registration,this,redirect,registrations,url,map,put,registration,get,url,path,registration,get,view,controller,simple,url,handler,mapping,handler,mapping,new,simple,url,handler,mapping,handler,mapping,set,order,this,order,handler,mapping,set,url,map,url,map,return,handler,mapping
ViewControllerRegistry -> protected AbstractHandlerMapping getHandlerMapping();1449252577;Return the {@code HandlerMapping} that contains the registered view_controller mappings, or {@code null} for no registrations.;protected AbstractHandlerMapping getHandlerMapping() {_		if (this.registrations.isEmpty() && this.redirectRegistrations.isEmpty()) {_			return null__		}_		Map<String, Object> urlMap = new LinkedHashMap<String, Object>()__		for (ViewControllerRegistration registration : this.registrations) {_			urlMap.put(registration.getUrlPath(), registration.getViewController())__		}_		for (RedirectViewControllerRegistration registration : this.redirectRegistrations) {_			urlMap.put(registration.getUrlPath(), registration.getViewController())__		}_		SimpleUrlHandlerMapping handlerMapping = new SimpleUrlHandlerMapping()__		handlerMapping.setOrder(this.order)__		handlerMapping.setUrlMap(urlMap)__		return handlerMapping__	};return,the,code,handler,mapping,that,contains,the,registered,view,controller,mappings,or,code,null,for,no,registrations;protected,abstract,handler,mapping,get,handler,mapping,if,this,registrations,is,empty,this,redirect,registrations,is,empty,return,null,map,string,object,url,map,new,linked,hash,map,string,object,for,view,controller,registration,registration,this,registrations,url,map,put,registration,get,url,path,registration,get,view,controller,for,redirect,view,controller,registration,registration,this,redirect,registrations,url,map,put,registration,get,url,path,registration,get,view,controller,simple,url,handler,mapping,handler,mapping,new,simple,url,handler,mapping,handler,mapping,set,order,this,order,handler,mapping,set,url,map,url,map,return,handler,mapping
ViewControllerRegistry -> protected AbstractHandlerMapping getHandlerMapping();1467730834;Return the {@code HandlerMapping} that contains the registered view_controller mappings, or {@code null} for no registrations.;protected AbstractHandlerMapping getHandlerMapping() {_		if (this.registrations.isEmpty() && this.redirectRegistrations.isEmpty()) {_			return null__		}_		Map<String, Object> urlMap = new LinkedHashMap<>()__		for (ViewControllerRegistration registration : this.registrations) {_			urlMap.put(registration.getUrlPath(), registration.getViewController())__		}_		for (RedirectViewControllerRegistration registration : this.redirectRegistrations) {_			urlMap.put(registration.getUrlPath(), registration.getViewController())__		}_		SimpleUrlHandlerMapping handlerMapping = new SimpleUrlHandlerMapping()__		handlerMapping.setOrder(this.order)__		handlerMapping.setUrlMap(urlMap)__		return handlerMapping__	};return,the,code,handler,mapping,that,contains,the,registered,view,controller,mappings,or,code,null,for,no,registrations;protected,abstract,handler,mapping,get,handler,mapping,if,this,registrations,is,empty,this,redirect,registrations,is,empty,return,null,map,string,object,url,map,new,linked,hash,map,for,view,controller,registration,registration,this,registrations,url,map,put,registration,get,url,path,registration,get,view,controller,for,redirect,view,controller,registration,registration,this,redirect,registrations,url,map,put,registration,get,url,path,registration,get,view,controller,simple,url,handler,mapping,handler,mapping,new,simple,url,handler,mapping,handler,mapping,set,order,this,order,handler,mapping,set,url,map,url,map,return,handler,mapping
ViewControllerRegistry -> protected AbstractHandlerMapping getHandlerMapping();1472808958;Return the {@code HandlerMapping} that contains the registered view_controller mappings, or {@code null} for no registrations.;protected AbstractHandlerMapping getHandlerMapping() {_		if (this.registrations.isEmpty() && this.redirectRegistrations.isEmpty()) {_			return null__		}_		Map<String, Object> urlMap = new LinkedHashMap<>()__		for (ViewControllerRegistration registration : this.registrations) {_			urlMap.put(registration.getUrlPath(), registration.getViewController())__		}_		for (RedirectViewControllerRegistration registration : this.redirectRegistrations) {_			urlMap.put(registration.getUrlPath(), registration.getViewController())__		}_		SimpleUrlHandlerMapping handlerMapping = new SimpleUrlHandlerMapping()__		handlerMapping.setOrder(this.order)__		handlerMapping.setUrlMap(urlMap)__		return handlerMapping__	};return,the,code,handler,mapping,that,contains,the,registered,view,controller,mappings,or,code,null,for,no,registrations;protected,abstract,handler,mapping,get,handler,mapping,if,this,registrations,is,empty,this,redirect,registrations,is,empty,return,null,map,string,object,url,map,new,linked,hash,map,for,view,controller,registration,registration,this,registrations,url,map,put,registration,get,url,path,registration,get,view,controller,for,redirect,view,controller,registration,registration,this,redirect,registrations,url,map,put,registration,get,url,path,registration,get,view,controller,simple,url,handler,mapping,handler,mapping,new,simple,url,handler,mapping,handler,mapping,set,order,this,order,handler,mapping,set,url,map,url,map,return,handler,mapping
ViewControllerRegistry -> public RedirectViewControllerRegistration addRedirectViewController(String urlPath, String redirectUrl);1405652648;Map a view controller to the given URL path (or pattern) in order to redirect_to another URL. By default the redirect URL is expected to be relative to_the current ServletContext, i.e. as relative to the web application root._@since 4.1;public RedirectViewControllerRegistration addRedirectViewController(String urlPath, String redirectUrl) {_		RedirectViewControllerRegistration registration = new RedirectViewControllerRegistration(urlPath, redirectUrl)__		this.redirectRegistrations.add(registration)__		return registration__	};map,a,view,controller,to,the,given,url,path,or,pattern,in,order,to,redirect,to,another,url,by,default,the,redirect,url,is,expected,to,be,relative,to,the,current,servlet,context,i,e,as,relative,to,the,web,application,root,since,4,1;public,redirect,view,controller,registration,add,redirect,view,controller,string,url,path,string,redirect,url,redirect,view,controller,registration,registration,new,redirect,view,controller,registration,url,path,redirect,url,this,redirect,registrations,add,registration,return,registration
ViewControllerRegistry -> public RedirectViewControllerRegistration addRedirectViewController(String urlPath, String redirectUrl);1449252577;Map a view controller to the given URL path (or pattern) in order to redirect_to another URL. By default the redirect URL is expected to be relative to_the current ServletContext, i.e. as relative to the web application root._@since 4.1;public RedirectViewControllerRegistration addRedirectViewController(String urlPath, String redirectUrl) {_		RedirectViewControllerRegistration registration = new RedirectViewControllerRegistration(urlPath, redirectUrl)__		registration.setApplicationContext(this.applicationContext)__		this.redirectRegistrations.add(registration)__		return registration__	};map,a,view,controller,to,the,given,url,path,or,pattern,in,order,to,redirect,to,another,url,by,default,the,redirect,url,is,expected,to,be,relative,to,the,current,servlet,context,i,e,as,relative,to,the,web,application,root,since,4,1;public,redirect,view,controller,registration,add,redirect,view,controller,string,url,path,string,redirect,url,redirect,view,controller,registration,registration,new,redirect,view,controller,registration,url,path,redirect,url,registration,set,application,context,this,application,context,this,redirect,registrations,add,registration,return,registration
ViewControllerRegistry -> public RedirectViewControllerRegistration addRedirectViewController(String urlPath, String redirectUrl);1467730834;Map a view controller to the given URL path (or pattern) in order to redirect_to another URL. By default the redirect URL is expected to be relative to_the current ServletContext, i.e. as relative to the web application root._@since 4.1;public RedirectViewControllerRegistration addRedirectViewController(String urlPath, String redirectUrl) {_		RedirectViewControllerRegistration registration = new RedirectViewControllerRegistration(urlPath, redirectUrl)__		registration.setApplicationContext(this.applicationContext)__		this.redirectRegistrations.add(registration)__		return registration__	};map,a,view,controller,to,the,given,url,path,or,pattern,in,order,to,redirect,to,another,url,by,default,the,redirect,url,is,expected,to,be,relative,to,the,current,servlet,context,i,e,as,relative,to,the,web,application,root,since,4,1;public,redirect,view,controller,registration,add,redirect,view,controller,string,url,path,string,redirect,url,redirect,view,controller,registration,registration,new,redirect,view,controller,registration,url,path,redirect,url,registration,set,application,context,this,application,context,this,redirect,registrations,add,registration,return,registration
ViewControllerRegistry -> public RedirectViewControllerRegistration addRedirectViewController(String urlPath, String redirectUrl);1472808958;Map a view controller to the given URL path (or pattern) in order to redirect_to another URL. By default the redirect URL is expected to be relative to_the current ServletContext, i.e. as relative to the web application root._@since 4.1;public RedirectViewControllerRegistration addRedirectViewController(String urlPath, String redirectUrl) {_		RedirectViewControllerRegistration registration = new RedirectViewControllerRegistration(urlPath, redirectUrl)__		registration.setApplicationContext(this.applicationContext)__		this.redirectRegistrations.add(registration)__		return registration__	};map,a,view,controller,to,the,given,url,path,or,pattern,in,order,to,redirect,to,another,url,by,default,the,redirect,url,is,expected,to,be,relative,to,the,current,servlet,context,i,e,as,relative,to,the,web,application,root,since,4,1;public,redirect,view,controller,registration,add,redirect,view,controller,string,url,path,string,redirect,url,redirect,view,controller,registration,registration,new,redirect,view,controller,registration,url,path,redirect,url,registration,set,application,context,this,application,context,this,redirect,registrations,add,registration,return,registration
ViewControllerRegistry -> public RedirectViewControllerRegistration addRedirectViewController(String urlPath, String redirectUrl);1495868221;Map a view controller to the given URL path (or pattern) in order to redirect_to another URL. By default the redirect URL is expected to be relative to_the current ServletContext, i.e. as relative to the web application root._@since 4.1;public RedirectViewControllerRegistration addRedirectViewController(String urlPath, String redirectUrl) {_		RedirectViewControllerRegistration registration = new RedirectViewControllerRegistration(urlPath, redirectUrl)__		registration.setApplicationContext(this.applicationContext)__		this.redirectRegistrations.add(registration)__		return registration__	};map,a,view,controller,to,the,given,url,path,or,pattern,in,order,to,redirect,to,another,url,by,default,the,redirect,url,is,expected,to,be,relative,to,the,current,servlet,context,i,e,as,relative,to,the,web,application,root,since,4,1;public,redirect,view,controller,registration,add,redirect,view,controller,string,url,path,string,redirect,url,redirect,view,controller,registration,registration,new,redirect,view,controller,registration,url,path,redirect,url,registration,set,application,context,this,application,context,this,redirect,registrations,add,registration,return,registration
ViewControllerRegistry -> public RedirectViewControllerRegistration addRedirectViewController(String urlPath, String redirectUrl);1498780456;Map a view controller to the given URL path (or pattern) in order to redirect_to another URL. By default the redirect URL is expected to be relative to_the current ServletContext, i.e. as relative to the web application root._@since 4.1;public RedirectViewControllerRegistration addRedirectViewController(String urlPath, String redirectUrl) {_		RedirectViewControllerRegistration registration = new RedirectViewControllerRegistration(urlPath, redirectUrl)__		registration.setApplicationContext(this.applicationContext)__		this.redirectRegistrations.add(registration)__		return registration__	};map,a,view,controller,to,the,given,url,path,or,pattern,in,order,to,redirect,to,another,url,by,default,the,redirect,url,is,expected,to,be,relative,to,the,current,servlet,context,i,e,as,relative,to,the,web,application,root,since,4,1;public,redirect,view,controller,registration,add,redirect,view,controller,string,url,path,string,redirect,url,redirect,view,controller,registration,registration,new,redirect,view,controller,registration,url,path,redirect,url,registration,set,application,context,this,application,context,this,redirect,registrations,add,registration,return,registration
ViewControllerRegistry -> public RedirectViewControllerRegistration addRedirectViewController(String urlPath, String redirectUrl);1506534768;Map a view controller to the given URL path (or pattern) in order to redirect_to another URL. By default the redirect URL is expected to be relative to_the current ServletContext, i.e. as relative to the web application root._@since 4.1;public RedirectViewControllerRegistration addRedirectViewController(String urlPath, String redirectUrl) {_		RedirectViewControllerRegistration registration = new RedirectViewControllerRegistration(urlPath, redirectUrl)__		registration.setApplicationContext(this.applicationContext)__		this.redirectRegistrations.add(registration)__		return registration__	};map,a,view,controller,to,the,given,url,path,or,pattern,in,order,to,redirect,to,another,url,by,default,the,redirect,url,is,expected,to,be,relative,to,the,current,servlet,context,i,e,as,relative,to,the,web,application,root,since,4,1;public,redirect,view,controller,registration,add,redirect,view,controller,string,url,path,string,redirect,url,redirect,view,controller,registration,registration,new,redirect,view,controller,registration,url,path,redirect,url,registration,set,application,context,this,application,context,this,redirect,registrations,add,registration,return,registration
ViewControllerRegistry -> public RedirectViewControllerRegistration addRedirectViewController(String urlPath, String redirectUrl);1518167476;Map a view controller to the given URL path (or pattern) in order to redirect_to another URL. By default the redirect URL is expected to be relative to_the current ServletContext, i.e. as relative to the web application root._@since 4.1;public RedirectViewControllerRegistration addRedirectViewController(String urlPath, String redirectUrl) {_		RedirectViewControllerRegistration registration = new RedirectViewControllerRegistration(urlPath, redirectUrl)__		registration.setApplicationContext(this.applicationContext)__		this.redirectRegistrations.add(registration)__		return registration__	};map,a,view,controller,to,the,given,url,path,or,pattern,in,order,to,redirect,to,another,url,by,default,the,redirect,url,is,expected,to,be,relative,to,the,current,servlet,context,i,e,as,relative,to,the,web,application,root,since,4,1;public,redirect,view,controller,registration,add,redirect,view,controller,string,url,path,string,redirect,url,redirect,view,controller,registration,registration,new,redirect,view,controller,registration,url,path,redirect,url,registration,set,application,context,this,application,context,this,redirect,registrations,add,registration,return,registration
ViewControllerRegistry -> public RedirectViewControllerRegistration addRedirectViewController(String urlPath, String redirectUrl);1518167818;Map a view controller to the given URL path (or pattern) in order to redirect_to another URL. By default the redirect URL is expected to be relative to_the current ServletContext, i.e. as relative to the web application root._@since 4.1;public RedirectViewControllerRegistration addRedirectViewController(String urlPath, String redirectUrl) {_		RedirectViewControllerRegistration registration = new RedirectViewControllerRegistration(urlPath, redirectUrl)__		registration.setApplicationContext(this.applicationContext)__		this.redirectRegistrations.add(registration)__		return registration__	};map,a,view,controller,to,the,given,url,path,or,pattern,in,order,to,redirect,to,another,url,by,default,the,redirect,url,is,expected,to,be,relative,to,the,current,servlet,context,i,e,as,relative,to,the,web,application,root,since,4,1;public,redirect,view,controller,registration,add,redirect,view,controller,string,url,path,string,redirect,url,redirect,view,controller,registration,registration,new,redirect,view,controller,registration,url,path,redirect,url,registration,set,application,context,this,application,context,this,redirect,registrations,add,registration,return,registration
ViewControllerRegistry -> public ViewControllerRegistration addViewController(String urlPath);1405652648;Register a view controller mapped to the given URL path or URL path pattern.;public ViewControllerRegistration addViewController(String urlPath) {_		ViewControllerRegistration registration = new ViewControllerRegistration(urlPath)__		this.registrations.add(registration)__		return registration__	};register,a,view,controller,mapped,to,the,given,url,path,or,url,path,pattern;public,view,controller,registration,add,view,controller,string,url,path,view,controller,registration,registration,new,view,controller,registration,url,path,this,registrations,add,registration,return,registration
ViewControllerRegistry -> public ViewControllerRegistration addViewController(String urlPath);1405652648;Map a view controller to the given URL path (or pattern) in order to render_a response with a pre-configured status code and view.;public ViewControllerRegistration addViewController(String urlPath) {_		ViewControllerRegistration registration = new ViewControllerRegistration(urlPath)__		this.registrations.add(registration)__		return registration__	};map,a,view,controller,to,the,given,url,path,or,pattern,in,order,to,render,a,response,with,a,pre,configured,status,code,and,view;public,view,controller,registration,add,view,controller,string,url,path,view,controller,registration,registration,new,view,controller,registration,url,path,this,registrations,add,registration,return,registration
ViewControllerRegistry -> public ViewControllerRegistration addViewController(String urlPath);1449252577;Map a view controller to the given URL path (or pattern) in order to render_a response with a pre-configured status code and view.;public ViewControllerRegistration addViewController(String urlPath) {_		ViewControllerRegistration registration = new ViewControllerRegistration(urlPath)__		registration.setApplicationContext(this.applicationContext)__		this.registrations.add(registration)__		return registration__	};map,a,view,controller,to,the,given,url,path,or,pattern,in,order,to,render,a,response,with,a,pre,configured,status,code,and,view;public,view,controller,registration,add,view,controller,string,url,path,view,controller,registration,registration,new,view,controller,registration,url,path,registration,set,application,context,this,application,context,this,registrations,add,registration,return,registration
ViewControllerRegistry -> public ViewControllerRegistration addViewController(String urlPath);1467730834;Map a view controller to the given URL path (or pattern) in order to render_a response with a pre-configured status code and view.;public ViewControllerRegistration addViewController(String urlPath) {_		ViewControllerRegistration registration = new ViewControllerRegistration(urlPath)__		registration.setApplicationContext(this.applicationContext)__		this.registrations.add(registration)__		return registration__	};map,a,view,controller,to,the,given,url,path,or,pattern,in,order,to,render,a,response,with,a,pre,configured,status,code,and,view;public,view,controller,registration,add,view,controller,string,url,path,view,controller,registration,registration,new,view,controller,registration,url,path,registration,set,application,context,this,application,context,this,registrations,add,registration,return,registration
ViewControllerRegistry -> public ViewControllerRegistration addViewController(String urlPath);1472808958;Map a view controller to the given URL path (or pattern) in order to render_a response with a pre-configured status code and view._<p>Patterns like {@code "/admin/**"} or {@code "/articles/{articlename:\\w+}"}_are allowed. See {@link org.springframework.util.AntPathMatcher} for more details on the_syntax.;public ViewControllerRegistration addViewController(String urlPath) {_		ViewControllerRegistration registration = new ViewControllerRegistration(urlPath)__		registration.setApplicationContext(this.applicationContext)__		this.registrations.add(registration)__		return registration__	};map,a,view,controller,to,the,given,url,path,or,pattern,in,order,to,render,a,response,with,a,pre,configured,status,code,and,view,p,patterns,like,code,admin,or,code,articles,articlename,w,are,allowed,see,link,org,springframework,util,ant,path,matcher,for,more,details,on,the,syntax;public,view,controller,registration,add,view,controller,string,url,path,view,controller,registration,registration,new,view,controller,registration,url,path,registration,set,application,context,this,application,context,this,registrations,add,registration,return,registration
ViewControllerRegistry -> public ViewControllerRegistration addViewController(String urlPath);1495868221;Map a view controller to the given URL path (or pattern) in order to render_a response with a pre-configured status code and view._<p>Patterns like {@code "/admin/**"} or {@code "/articles/{articlename:\\w+}"}_are allowed. See {@link org.springframework.util.AntPathMatcher} for more details on the_syntax.;public ViewControllerRegistration addViewController(String urlPath) {_		ViewControllerRegistration registration = new ViewControllerRegistration(urlPath)__		registration.setApplicationContext(this.applicationContext)__		this.registrations.add(registration)__		return registration__	};map,a,view,controller,to,the,given,url,path,or,pattern,in,order,to,render,a,response,with,a,pre,configured,status,code,and,view,p,patterns,like,code,admin,or,code,articles,articlename,w,are,allowed,see,link,org,springframework,util,ant,path,matcher,for,more,details,on,the,syntax;public,view,controller,registration,add,view,controller,string,url,path,view,controller,registration,registration,new,view,controller,registration,url,path,registration,set,application,context,this,application,context,this,registrations,add,registration,return,registration
ViewControllerRegistry -> public ViewControllerRegistration addViewController(String urlPath);1498780456;Map a view controller to the given URL path (or pattern) in order to render_a response with a pre-configured status code and view._<p>Patterns like {@code "/admin/**"} or {@code "/articles/{articlename:\\w+}"}_are allowed. See {@link org.springframework.util.AntPathMatcher} for more details on the_syntax.;public ViewControllerRegistration addViewController(String urlPath) {_		ViewControllerRegistration registration = new ViewControllerRegistration(urlPath)__		registration.setApplicationContext(this.applicationContext)__		this.registrations.add(registration)__		return registration__	};map,a,view,controller,to,the,given,url,path,or,pattern,in,order,to,render,a,response,with,a,pre,configured,status,code,and,view,p,patterns,like,code,admin,or,code,articles,articlename,w,are,allowed,see,link,org,springframework,util,ant,path,matcher,for,more,details,on,the,syntax;public,view,controller,registration,add,view,controller,string,url,path,view,controller,registration,registration,new,view,controller,registration,url,path,registration,set,application,context,this,application,context,this,registrations,add,registration,return,registration
ViewControllerRegistry -> public ViewControllerRegistration addViewController(String urlPath);1506534768;Map a view controller to the given URL path (or pattern) in order to render_a response with a pre-configured status code and view._<p>Patterns like {@code "/admin/**"} or {@code "/articles/{articlename:\\w+}"}_are allowed. See {@link org.springframework.util.AntPathMatcher} for more details on the_syntax.;public ViewControllerRegistration addViewController(String urlPath) {_		ViewControllerRegistration registration = new ViewControllerRegistration(urlPath)__		registration.setApplicationContext(this.applicationContext)__		this.registrations.add(registration)__		return registration__	};map,a,view,controller,to,the,given,url,path,or,pattern,in,order,to,render,a,response,with,a,pre,configured,status,code,and,view,p,patterns,like,code,admin,or,code,articles,articlename,w,are,allowed,see,link,org,springframework,util,ant,path,matcher,for,more,details,on,the,syntax;public,view,controller,registration,add,view,controller,string,url,path,view,controller,registration,registration,new,view,controller,registration,url,path,registration,set,application,context,this,application,context,this,registrations,add,registration,return,registration
ViewControllerRegistry -> public ViewControllerRegistration addViewController(String urlPath);1518167476;Map a view controller to the given URL path (or pattern) in order to render_a response with a pre-configured status code and view._<p>Patterns like {@code "/admin/**"} or {@code "/articles/{articlename:\\w+}"}_are allowed. See {@link org.springframework.util.AntPathMatcher} for more details on the_syntax.;public ViewControllerRegistration addViewController(String urlPath) {_		ViewControllerRegistration registration = new ViewControllerRegistration(urlPath)__		registration.setApplicationContext(this.applicationContext)__		this.registrations.add(registration)__		return registration__	};map,a,view,controller,to,the,given,url,path,or,pattern,in,order,to,render,a,response,with,a,pre,configured,status,code,and,view,p,patterns,like,code,admin,or,code,articles,articlename,w,are,allowed,see,link,org,springframework,util,ant,path,matcher,for,more,details,on,the,syntax;public,view,controller,registration,add,view,controller,string,url,path,view,controller,registration,registration,new,view,controller,registration,url,path,registration,set,application,context,this,application,context,this,registrations,add,registration,return,registration
ViewControllerRegistry -> public ViewControllerRegistration addViewController(String urlPath);1518167818;Map a view controller to the given URL path (or pattern) in order to render_a response with a pre-configured status code and view._<p>Patterns like {@code "/admin/**"} or {@code "/articles/{articlename:\\w+}"}_are allowed. See {@link org.springframework.util.AntPathMatcher} for more details on the_syntax.;public ViewControllerRegistration addViewController(String urlPath) {_		ViewControllerRegistration registration = new ViewControllerRegistration(urlPath)__		registration.setApplicationContext(this.applicationContext)__		this.registrations.add(registration)__		return registration__	};map,a,view,controller,to,the,given,url,path,or,pattern,in,order,to,render,a,response,with,a,pre,configured,status,code,and,view,p,patterns,like,code,admin,or,code,articles,articlename,w,are,allowed,see,link,org,springframework,util,ant,path,matcher,for,more,details,on,the,syntax;public,view,controller,registration,add,view,controller,string,url,path,view,controller,registration,registration,new,view,controller,registration,url,path,registration,set,application,context,this,application,context,this,registrations,add,registration,return,registration
