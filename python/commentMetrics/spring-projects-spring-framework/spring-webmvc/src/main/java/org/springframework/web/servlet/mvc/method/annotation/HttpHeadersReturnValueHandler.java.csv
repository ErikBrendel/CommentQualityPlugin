commented;modifiers;parameterAmount;loc;comment;code
false;public;1;4;;@Override public boolean supportsReturnType(MethodParameter returnType) {     return HttpHeaders.class.isAssignableFrom(returnType.getParameterType()). }
false;public;4;18;;@Override @SuppressWarnings("resource") public void handleReturnValue(@Nullable Object returnValue, MethodParameter returnType, ModelAndViewContainer mavContainer, NativeWebRequest webRequest) throws Exception {     mavContainer.setRequestHandled(true).     Assert.state(returnValue instanceof HttpHeaders, "HttpHeaders expected").     HttpHeaders headers = (HttpHeaders) returnValue.     if (!headers.isEmpty()) {         HttpServletResponse servletResponse = webRequest.getNativeResponse(HttpServletResponse.class).         Assert.state(servletResponse != null, "No HttpServletResponse").         ServletServerHttpResponse outputMessage = new ServletServerHttpResponse(servletResponse).         outputMessage.getHeaders().putAll(headers).         // flush headers         outputMessage.getBody().     } }
