# id;timestamp;commentText;codeText;commentWords;codeWords
AbstractUrlBasedView -> public String getUrl();1328020251;Return the URL of the resource that this view wraps.;public String getUrl() {_		return this.url__	};return,the,url,of,the,resource,that,this,view,wraps;public,string,get,url,return,this,url
AbstractUrlBasedView -> public String getUrl();1356735495;Return the URL of the resource that this view wraps.;public String getUrl() {_		return this.url__	};return,the,url,of,the,resource,that,this,view,wraps;public,string,get,url,return,this,url
AbstractUrlBasedView -> public String getUrl();1357119239;Return the URL of the resource that this view wraps.;public String getUrl() {_		return this.url__	};return,the,url,of,the,resource,that,this,view,wraps;public,string,get,url,return,this,url
AbstractUrlBasedView -> public String getUrl();1368482696;Return the URL of the resource that this view wraps.;public String getUrl() {_		return this.url__	};return,the,url,of,the,resource,that,this,view,wraps;public,string,get,url,return,this,url
AbstractUrlBasedView -> protected AbstractUrlBasedView(String url);1328020251;Create a new AbstractUrlBasedView with the given URL._@param url the URL to forward to;protected AbstractUrlBasedView(String url) {_		this.url = url__	};create,a,new,abstract,url,based,view,with,the,given,url,param,url,the,url,to,forward,to;protected,abstract,url,based,view,string,url,this,url,url
AbstractUrlBasedView -> protected AbstractUrlBasedView(String url);1356735495;Create a new AbstractUrlBasedView with the given URL._@param url the URL to forward to;protected AbstractUrlBasedView(String url) {_		this.url = url__	};create,a,new,abstract,url,based,view,with,the,given,url,param,url,the,url,to,forward,to;protected,abstract,url,based,view,string,url,this,url,url
AbstractUrlBasedView -> protected AbstractUrlBasedView(String url);1357119239;Create a new AbstractUrlBasedView with the given URL._@param url the URL to forward to;protected AbstractUrlBasedView(String url) {_		this.url = url__	};create,a,new,abstract,url,based,view,with,the,given,url,param,url,the,url,to,forward,to;protected,abstract,url,based,view,string,url,this,url,url
AbstractUrlBasedView -> protected AbstractUrlBasedView(String url);1368482696;Create a new AbstractUrlBasedView with the given URL._@param url the URL to forward to;protected AbstractUrlBasedView(String url) {_		this.url = url__	};create,a,new,abstract,url,based,view,with,the,given,url,param,url,the,url,to,forward,to;protected,abstract,url,based,view,string,url,this,url,url
AbstractUrlBasedView -> protected AbstractUrlBasedView(String url);1496837955;Create a new AbstractUrlBasedView with the given URL._@param url the URL to forward to;protected AbstractUrlBasedView(String url) {_		this.url = url__	};create,a,new,abstract,url,based,view,with,the,given,url,param,url,the,url,to,forward,to;protected,abstract,url,based,view,string,url,this,url,url
AbstractUrlBasedView -> protected AbstractUrlBasedView(String url);1498780456;Create a new AbstractUrlBasedView with the given URL._@param url the URL to forward to;protected AbstractUrlBasedView(String url) {_		this.url = url__	};create,a,new,abstract,url,based,view,with,the,given,url,param,url,the,url,to,forward,to;protected,abstract,url,based,view,string,url,this,url,url
AbstractUrlBasedView -> protected AbstractUrlBasedView(String url);1500448076;Create a new AbstractUrlBasedView with the given URL._@param url the URL to forward to;protected AbstractUrlBasedView(String url) {_		this.url = url__	};create,a,new,abstract,url,based,view,with,the,given,url,param,url,the,url,to,forward,to;protected,abstract,url,based,view,string,url,this,url,url
AbstractUrlBasedView -> protected AbstractUrlBasedView();1328020251;Constructor for use as a bean.;protected AbstractUrlBasedView() {_	};constructor,for,use,as,a,bean;protected,abstract,url,based,view
AbstractUrlBasedView -> protected AbstractUrlBasedView();1356735495;Constructor for use as a bean.;protected AbstractUrlBasedView() {_	};constructor,for,use,as,a,bean;protected,abstract,url,based,view
AbstractUrlBasedView -> protected AbstractUrlBasedView();1357119239;Constructor for use as a bean.;protected AbstractUrlBasedView() {_	};constructor,for,use,as,a,bean;protected,abstract,url,based,view
AbstractUrlBasedView -> protected AbstractUrlBasedView();1368482696;Constructor for use as a bean.;protected AbstractUrlBasedView() {_	};constructor,for,use,as,a,bean;protected,abstract,url,based,view
AbstractUrlBasedView -> protected AbstractUrlBasedView();1496837955;Constructor for use as a bean.;protected AbstractUrlBasedView() {_	};constructor,for,use,as,a,bean;protected,abstract,url,based,view
AbstractUrlBasedView -> protected AbstractUrlBasedView();1498780456;Constructor for use as a bean.;protected AbstractUrlBasedView() {_	};constructor,for,use,as,a,bean;protected,abstract,url,based,view
AbstractUrlBasedView -> protected AbstractUrlBasedView();1500448076;Constructor for use as a bean.;protected AbstractUrlBasedView() {_	};constructor,for,use,as,a,bean;protected,abstract,url,based,view
AbstractUrlBasedView -> public boolean checkResource(Locale locale) throws Exception;1328020251;Check whether the underlying resource that the configured URL points to_actually exists._@param locale the desired Locale that we're looking for_@return <code>true</code> if the resource exists (or is assumed to exist)__<code>false</code> if we know that it does not exist_@throws Exception if the resource exists but is invalid (e.g. could not be parsed);public boolean checkResource(Locale locale) throws Exception {_		return true__	};check,whether,the,underlying,resource,that,the,configured,url,points,to,actually,exists,param,locale,the,desired,locale,that,we,re,looking,for,return,code,true,code,if,the,resource,exists,or,is,assumed,to,exist,code,false,code,if,we,know,that,it,does,not,exist,throws,exception,if,the,resource,exists,but,is,invalid,e,g,could,not,be,parsed;public,boolean,check,resource,locale,locale,throws,exception,return,true
AbstractUrlBasedView -> public boolean checkResource(Locale locale) throws Exception;1356735495;Check whether the underlying resource that the configured URL points to_actually exists._@param locale the desired Locale that we're looking for_@return {@code true} if the resource exists (or is assumed to exist)__{@code false} if we know that it does not exist_@throws Exception if the resource exists but is invalid (e.g. could not be parsed);public boolean checkResource(Locale locale) throws Exception {_		return true__	};check,whether,the,underlying,resource,that,the,configured,url,points,to,actually,exists,param,locale,the,desired,locale,that,we,re,looking,for,return,code,true,if,the,resource,exists,or,is,assumed,to,exist,code,false,if,we,know,that,it,does,not,exist,throws,exception,if,the,resource,exists,but,is,invalid,e,g,could,not,be,parsed;public,boolean,check,resource,locale,locale,throws,exception,return,true
AbstractUrlBasedView -> public boolean checkResource(Locale locale) throws Exception;1357119239;Check whether the underlying resource that the configured URL points to_actually exists._@param locale the desired Locale that we're looking for_@return {@code true} if the resource exists (or is assumed to exist)__{@code false} if we know that it does not exist_@throws Exception if the resource exists but is invalid (e.g. could not be parsed);public boolean checkResource(Locale locale) throws Exception {_		return true__	};check,whether,the,underlying,resource,that,the,configured,url,points,to,actually,exists,param,locale,the,desired,locale,that,we,re,looking,for,return,code,true,if,the,resource,exists,or,is,assumed,to,exist,code,false,if,we,know,that,it,does,not,exist,throws,exception,if,the,resource,exists,but,is,invalid,e,g,could,not,be,parsed;public,boolean,check,resource,locale,locale,throws,exception,return,true
AbstractUrlBasedView -> public boolean checkResource(Locale locale) throws Exception;1368482696;Check whether the underlying resource that the configured URL points to_actually exists._@param locale the desired Locale that we're looking for_@return {@code true} if the resource exists (or is assumed to exist)__{@code false} if we know that it does not exist_@throws Exception if the resource exists but is invalid (e.g. could not be parsed);public boolean checkResource(Locale locale) throws Exception {_		return true__	};check,whether,the,underlying,resource,that,the,configured,url,points,to,actually,exists,param,locale,the,desired,locale,that,we,re,looking,for,return,code,true,if,the,resource,exists,or,is,assumed,to,exist,code,false,if,we,know,that,it,does,not,exist,throws,exception,if,the,resource,exists,but,is,invalid,e,g,could,not,be,parsed;public,boolean,check,resource,locale,locale,throws,exception,return,true
AbstractUrlBasedView -> public boolean checkResource(Locale locale) throws Exception;1496837955;Check whether the underlying resource that the configured URL points to_actually exists._@param locale the desired Locale that we're looking for_@return {@code true} if the resource exists (or is assumed to exist)__{@code false} if we know that it does not exist_@throws Exception if the resource exists but is invalid (e.g. could not be parsed);public boolean checkResource(Locale locale) throws Exception {_		return true__	};check,whether,the,underlying,resource,that,the,configured,url,points,to,actually,exists,param,locale,the,desired,locale,that,we,re,looking,for,return,code,true,if,the,resource,exists,or,is,assumed,to,exist,code,false,if,we,know,that,it,does,not,exist,throws,exception,if,the,resource,exists,but,is,invalid,e,g,could,not,be,parsed;public,boolean,check,resource,locale,locale,throws,exception,return,true
AbstractUrlBasedView -> public boolean checkResource(Locale locale) throws Exception;1498780456;Check whether the underlying resource that the configured URL points to_actually exists._@param locale the desired Locale that we're looking for_@return {@code true} if the resource exists (or is assumed to exist)__{@code false} if we know that it does not exist_@throws Exception if the resource exists but is invalid (e.g. could not be parsed);public boolean checkResource(Locale locale) throws Exception {_		return true__	};check,whether,the,underlying,resource,that,the,configured,url,points,to,actually,exists,param,locale,the,desired,locale,that,we,re,looking,for,return,code,true,if,the,resource,exists,or,is,assumed,to,exist,code,false,if,we,know,that,it,does,not,exist,throws,exception,if,the,resource,exists,but,is,invalid,e,g,could,not,be,parsed;public,boolean,check,resource,locale,locale,throws,exception,return,true
AbstractUrlBasedView -> public boolean checkResource(Locale locale) throws Exception;1500448076;Check whether the underlying resource that the configured URL points to_actually exists._@param locale the desired Locale that we're looking for_@return {@code true} if the resource exists (or is assumed to exist)__{@code false} if we know that it does not exist_@throws Exception if the resource exists but is invalid (e.g. could not be parsed);public boolean checkResource(Locale locale) throws Exception {_		return true__	};check,whether,the,underlying,resource,that,the,configured,url,points,to,actually,exists,param,locale,the,desired,locale,that,we,re,looking,for,return,code,true,if,the,resource,exists,or,is,assumed,to,exist,code,false,if,we,know,that,it,does,not,exist,throws,exception,if,the,resource,exists,but,is,invalid,e,g,could,not,be,parsed;public,boolean,check,resource,locale,locale,throws,exception,return,true
AbstractUrlBasedView -> protected boolean isUrlRequired();1328020251;Return whether the 'url' property is required._<p>The default implementation returns <code>true</code._This can be overridden in subclasses.;protected boolean isUrlRequired() {_		return true__	};return,whether,the,url,property,is,required,p,the,default,implementation,returns,code,true,code,this,can,be,overridden,in,subclasses;protected,boolean,is,url,required,return,true
AbstractUrlBasedView -> protected boolean isUrlRequired();1356735495;Return whether the 'url' property is required._<p>The default implementation returns {@code true}._This can be overridden in subclasses.;protected boolean isUrlRequired() {_		return true__	};return,whether,the,url,property,is,required,p,the,default,implementation,returns,code,true,this,can,be,overridden,in,subclasses;protected,boolean,is,url,required,return,true
AbstractUrlBasedView -> protected boolean isUrlRequired();1357119239;Return whether the 'url' property is required._<p>The default implementation returns {@code true}._This can be overridden in subclasses.;protected boolean isUrlRequired() {_		return true__	};return,whether,the,url,property,is,required,p,the,default,implementation,returns,code,true,this,can,be,overridden,in,subclasses;protected,boolean,is,url,required,return,true
AbstractUrlBasedView -> protected boolean isUrlRequired();1368482696;Return whether the 'url' property is required._<p>The default implementation returns {@code true}._This can be overridden in subclasses.;protected boolean isUrlRequired() {_		return true__	};return,whether,the,url,property,is,required,p,the,default,implementation,returns,code,true,this,can,be,overridden,in,subclasses;protected,boolean,is,url,required,return,true
AbstractUrlBasedView -> protected boolean isUrlRequired();1496837955;Return whether the 'url' property is required._<p>The default implementation returns {@code true}._This can be overridden in subclasses.;protected boolean isUrlRequired() {_		return true__	};return,whether,the,url,property,is,required,p,the,default,implementation,returns,code,true,this,can,be,overridden,in,subclasses;protected,boolean,is,url,required,return,true
AbstractUrlBasedView -> protected boolean isUrlRequired();1498780456;Return whether the 'url' property is required._<p>The default implementation returns {@code true}._This can be overridden in subclasses.;protected boolean isUrlRequired() {_		return true__	};return,whether,the,url,property,is,required,p,the,default,implementation,returns,code,true,this,can,be,overridden,in,subclasses;protected,boolean,is,url,required,return,true
AbstractUrlBasedView -> protected boolean isUrlRequired();1500448076;Return whether the 'url' property is required._<p>The default implementation returns {@code true}._This can be overridden in subclasses.;protected boolean isUrlRequired() {_		return true__	};return,whether,the,url,property,is,required,p,the,default,implementation,returns,code,true,this,can,be,overridden,in,subclasses;protected,boolean,is,url,required,return,true
AbstractUrlBasedView -> @Nullable 	public String getUrl();1496837955;Return the URL of the resource that this view wraps.;@Nullable_	public String getUrl() {_		return this.url__	};return,the,url,of,the,resource,that,this,view,wraps;nullable,public,string,get,url,return,this,url
AbstractUrlBasedView -> @Nullable 	public String getUrl();1498780456;Return the URL of the resource that this view wraps.;@Nullable_	public String getUrl() {_		return this.url__	};return,the,url,of,the,resource,that,this,view,wraps;nullable,public,string,get,url,return,this,url
AbstractUrlBasedView -> @Nullable 	public String getUrl();1500448076;Return the URL of the resource that this view wraps.;@Nullable_	public String getUrl() {_		return this.url__	};return,the,url,of,the,resource,that,this,view,wraps;nullable,public,string,get,url,return,this,url
AbstractUrlBasedView -> public void setUrl(String url);1328020251;Set the URL of the resource that this view wraps._The URL must be appropriate for the concrete View implementation.;public void setUrl(String url) {_		this.url = url__	};set,the,url,of,the,resource,that,this,view,wraps,the,url,must,be,appropriate,for,the,concrete,view,implementation;public,void,set,url,string,url,this,url,url
AbstractUrlBasedView -> public void setUrl(String url);1356735495;Set the URL of the resource that this view wraps._The URL must be appropriate for the concrete View implementation.;public void setUrl(String url) {_		this.url = url__	};set,the,url,of,the,resource,that,this,view,wraps,the,url,must,be,appropriate,for,the,concrete,view,implementation;public,void,set,url,string,url,this,url,url
AbstractUrlBasedView -> public void setUrl(String url);1357119239;Set the URL of the resource that this view wraps._The URL must be appropriate for the concrete View implementation.;public void setUrl(String url) {_		this.url = url__	};set,the,url,of,the,resource,that,this,view,wraps,the,url,must,be,appropriate,for,the,concrete,view,implementation;public,void,set,url,string,url,this,url,url
AbstractUrlBasedView -> public void setUrl(String url);1368482696;Set the URL of the resource that this view wraps._The URL must be appropriate for the concrete View implementation.;public void setUrl(String url) {_		this.url = url__	};set,the,url,of,the,resource,that,this,view,wraps,the,url,must,be,appropriate,for,the,concrete,view,implementation;public,void,set,url,string,url,this,url,url
AbstractUrlBasedView -> public void setUrl(String url);1496837955;Set the URL of the resource that this view wraps._The URL must be appropriate for the concrete View implementation.;public void setUrl(String url) {_		this.url = url__	};set,the,url,of,the,resource,that,this,view,wraps,the,url,must,be,appropriate,for,the,concrete,view,implementation;public,void,set,url,string,url,this,url,url
AbstractUrlBasedView -> public void setUrl(String url);1498780456;Set the URL of the resource that this view wraps._The URL must be appropriate for the concrete View implementation.;public void setUrl(String url) {_		this.url = url__	};set,the,url,of,the,resource,that,this,view,wraps,the,url,must,be,appropriate,for,the,concrete,view,implementation;public,void,set,url,string,url,this,url,url
