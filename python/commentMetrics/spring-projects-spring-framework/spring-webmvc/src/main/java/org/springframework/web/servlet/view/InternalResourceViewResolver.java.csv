# id;timestamp;commentText;codeText;commentWords;codeWords
InternalResourceViewResolver -> public InternalResourceViewResolver();1328020251;Sets the default {@link #setViewClass view class} to {@link #requiredViewClass}:_by default {@link InternalResourceView}, or {@link JstlView} if the JSTL API_is present.;public InternalResourceViewResolver() {_		Class viewClass = requiredViewClass()__		if (viewClass.equals(InternalResourceView.class) && jstlPresent) {_			viewClass = JstlView.class__		}_		setViewClass(viewClass)__	};sets,the,default,link,set,view,class,view,class,to,link,required,view,class,by,default,link,internal,resource,view,or,link,jstl,view,if,the,jstl,api,is,present;public,internal,resource,view,resolver,class,view,class,required,view,class,if,view,class,equals,internal,resource,view,class,jstl,present,view,class,jstl,view,class,set,view,class,view,class
InternalResourceViewResolver -> public InternalResourceViewResolver();1356735495;Sets the default {@link #setViewClass view class} to {@link #requiredViewClass}:_by default {@link InternalResourceView}, or {@link JstlView} if the JSTL API_is present.;public InternalResourceViewResolver() {_		Class viewClass = requiredViewClass()__		if (viewClass.equals(InternalResourceView.class) && jstlPresent) {_			viewClass = JstlView.class__		}_		setViewClass(viewClass)__	};sets,the,default,link,set,view,class,view,class,to,link,required,view,class,by,default,link,internal,resource,view,or,link,jstl,view,if,the,jstl,api,is,present;public,internal,resource,view,resolver,class,view,class,required,view,class,if,view,class,equals,internal,resource,view,class,jstl,present,view,class,jstl,view,class,set,view,class,view,class
InternalResourceViewResolver -> public InternalResourceViewResolver();1385412762;Sets the default {@link #setViewClass view class} to {@link #requiredViewClass}:_by default {@link InternalResourceView}, or {@link JstlView} if the JSTL API_is present.;public InternalResourceViewResolver() {_		Class<?> viewClass = requiredViewClass()__		if (viewClass.equals(InternalResourceView.class) && jstlPresent) {_			viewClass = JstlView.class__		}_		setViewClass(viewClass)__	};sets,the,default,link,set,view,class,view,class,to,link,required,view,class,by,default,link,internal,resource,view,or,link,jstl,view,if,the,jstl,api,is,present;public,internal,resource,view,resolver,class,view,class,required,view,class,if,view,class,equals,internal,resource,view,class,jstl,present,view,class,jstl,view,class,set,view,class,view,class
InternalResourceViewResolver -> public InternalResourceViewResolver();1407445568;Sets the default {@link #setViewClass view class} to {@link #requiredViewClass}:_by default {@link InternalResourceView}, or {@link JstlView} if the JSTL API_is present.;public InternalResourceViewResolver() {_		Class<?> viewClass = requiredViewClass()__		if (viewClass.equals(InternalResourceView.class) && jstlPresent) {_			viewClass = JstlView.class__		}_		setViewClass(viewClass)__	};sets,the,default,link,set,view,class,view,class,to,link,required,view,class,by,default,link,internal,resource,view,or,link,jstl,view,if,the,jstl,api,is,present;public,internal,resource,view,resolver,class,view,class,required,view,class,if,view,class,equals,internal,resource,view,class,jstl,present,view,class,jstl,view,class,set,view,class,view,class
InternalResourceViewResolver -> public InternalResourceViewResolver();1407624882;Sets the default {@link #setViewClass view class} to {@link #requiredViewClass}:_by default {@link InternalResourceView}, or {@link JstlView} if the JSTL API_is present.;public InternalResourceViewResolver() {_		Class<?> viewClass = requiredViewClass()__		if (viewClass.equals(InternalResourceView.class) && jstlPresent) {_			viewClass = JstlView.class__		}_		setViewClass(viewClass)__	};sets,the,default,link,set,view,class,view,class,to,link,required,view,class,by,default,link,internal,resource,view,or,link,jstl,view,if,the,jstl,api,is,present;public,internal,resource,view,resolver,class,view,class,required,view,class,if,view,class,equals,internal,resource,view,class,jstl,present,view,class,jstl,view,class,set,view,class,view,class
InternalResourceViewResolver -> public InternalResourceViewResolver();1432125256;Sets the default {@link #setViewClass view class} to {@link #requiredViewClass}:_by default {@link InternalResourceView}, or {@link JstlView} if the JSTL API_is present.;public InternalResourceViewResolver() {_		Class<?> viewClass = requiredViewClass()__		if (InternalResourceView.class == viewClass && jstlPresent) {_			viewClass = JstlView.class__		}_		setViewClass(viewClass)__	};sets,the,default,link,set,view,class,view,class,to,link,required,view,class,by,default,link,internal,resource,view,or,link,jstl,view,if,the,jstl,api,is,present;public,internal,resource,view,resolver,class,view,class,required,view,class,if,internal,resource,view,class,view,class,jstl,present,view,class,jstl,view,class,set,view,class,view,class
InternalResourceViewResolver -> public InternalResourceViewResolver();1450782049;Sets the default {@link #setViewClass view class} to {@link #requiredViewClass}:_by default {@link InternalResourceView}, or {@link JstlView} if the JSTL API_is present.;public InternalResourceViewResolver() {_		Class<?> viewClass = requiredViewClass()__		if (InternalResourceView.class == viewClass && jstlPresent) {_			viewClass = JstlView.class__		}_		setViewClass(viewClass)__	};sets,the,default,link,set,view,class,view,class,to,link,required,view,class,by,default,link,internal,resource,view,or,link,jstl,view,if,the,jstl,api,is,present;public,internal,resource,view,resolver,class,view,class,required,view,class,if,internal,resource,view,class,view,class,jstl,present,view,class,jstl,view,class,set,view,class,view,class
InternalResourceViewResolver -> public InternalResourceViewResolver();1498780456;Sets the default {@link #setViewClass view class} to {@link #requiredViewClass}:_by default {@link InternalResourceView}, or {@link JstlView} if the JSTL API_is present.;public InternalResourceViewResolver() {_		Class<?> viewClass = requiredViewClass()__		if (InternalResourceView.class == viewClass && jstlPresent) {_			viewClass = JstlView.class__		}_		setViewClass(viewClass)__	};sets,the,default,link,set,view,class,view,class,to,link,required,view,class,by,default,link,internal,resource,view,or,link,jstl,view,if,the,jstl,api,is,present;public,internal,resource,view,resolver,class,view,class,required,view,class,if,internal,resource,view,class,view,class,jstl,present,view,class,jstl,view,class,set,view,class,view,class
InternalResourceViewResolver -> public void setExposeContextBeansAsAttributes(boolean exposeContextBeansAsAttributes);1328020251;Set whether to make all Spring beans in the application context accessible_as request attributes, through lazy checking once an attribute gets accessed._<p>This will make all such beans accessible in plain <code>${...}</code>_expressions in a JSP 2.0 page, as well as in JSTL's <code>c:out</code>_value expressions._<p>Default is "false"._@see InternalResourceView#setExposeContextBeansAsAttributes;public void setExposeContextBeansAsAttributes(boolean exposeContextBeansAsAttributes) {_		this.exposeContextBeansAsAttributes = exposeContextBeansAsAttributes__	};set,whether,to,make,all,spring,beans,in,the,application,context,accessible,as,request,attributes,through,lazy,checking,once,an,attribute,gets,accessed,p,this,will,make,all,such,beans,accessible,in,plain,code,code,expressions,in,a,jsp,2,0,page,as,well,as,in,jstl,s,code,c,out,code,value,expressions,p,default,is,false,see,internal,resource,view,set,expose,context,beans,as,attributes;public,void,set,expose,context,beans,as,attributes,boolean,expose,context,beans,as,attributes,this,expose,context,beans,as,attributes,expose,context,beans,as,attributes
InternalResourceViewResolver -> public void setExposeContextBeansAsAttributes(boolean exposeContextBeansAsAttributes);1356735495;Set whether to make all Spring beans in the application context accessible_as request attributes, through lazy checking once an attribute gets accessed._<p>This will make all such beans accessible in plain {@code ${...}}_expressions in a JSP 2.0 page, as well as in JSTL's {@code c:out}_value expressions._<p>Default is "false"._@see InternalResourceView#setExposeContextBeansAsAttributes;public void setExposeContextBeansAsAttributes(boolean exposeContextBeansAsAttributes) {_		this.exposeContextBeansAsAttributes = exposeContextBeansAsAttributes__	};set,whether,to,make,all,spring,beans,in,the,application,context,accessible,as,request,attributes,through,lazy,checking,once,an,attribute,gets,accessed,p,this,will,make,all,such,beans,accessible,in,plain,code,expressions,in,a,jsp,2,0,page,as,well,as,in,jstl,s,code,c,out,value,expressions,p,default,is,false,see,internal,resource,view,set,expose,context,beans,as,attributes;public,void,set,expose,context,beans,as,attributes,boolean,expose,context,beans,as,attributes,this,expose,context,beans,as,attributes,expose,context,beans,as,attributes
InternalResourceViewResolver -> public void setExposeContextBeansAsAttributes(boolean exposeContextBeansAsAttributes);1385412762;Set whether to make all Spring beans in the application context accessible_as request attributes, through lazy checking once an attribute gets accessed._<p>This will make all such beans accessible in plain {@code ${...}}_expressions in a JSP 2.0 page, as well as in JSTL's {@code c:out}_value expressions._<p>Default is "false"._@see InternalResourceView#setExposeContextBeansAsAttributes;public void setExposeContextBeansAsAttributes(boolean exposeContextBeansAsAttributes) {_		this.exposeContextBeansAsAttributes = exposeContextBeansAsAttributes__	};set,whether,to,make,all,spring,beans,in,the,application,context,accessible,as,request,attributes,through,lazy,checking,once,an,attribute,gets,accessed,p,this,will,make,all,such,beans,accessible,in,plain,code,expressions,in,a,jsp,2,0,page,as,well,as,in,jstl,s,code,c,out,value,expressions,p,default,is,false,see,internal,resource,view,set,expose,context,beans,as,attributes;public,void,set,expose,context,beans,as,attributes,boolean,expose,context,beans,as,attributes,this,expose,context,beans,as,attributes,expose,context,beans,as,attributes
InternalResourceViewResolver -> public void setExposeContextBeansAsAttributes(boolean exposeContextBeansAsAttributes);1407445568;Set whether to make all Spring beans in the application context accessible_as request attributes, through lazy checking once an attribute gets accessed._<p>This will make all such beans accessible in plain {@code ${...}}_expressions in a JSP 2.0 page, as well as in JSTL's {@code c:out}_value expressions._<p>Default is "false"._@see InternalResourceView#setExposeContextBeansAsAttributes;public void setExposeContextBeansAsAttributes(boolean exposeContextBeansAsAttributes) {_		this.exposeContextBeansAsAttributes = exposeContextBeansAsAttributes__	};set,whether,to,make,all,spring,beans,in,the,application,context,accessible,as,request,attributes,through,lazy,checking,once,an,attribute,gets,accessed,p,this,will,make,all,such,beans,accessible,in,plain,code,expressions,in,a,jsp,2,0,page,as,well,as,in,jstl,s,code,c,out,value,expressions,p,default,is,false,see,internal,resource,view,set,expose,context,beans,as,attributes;public,void,set,expose,context,beans,as,attributes,boolean,expose,context,beans,as,attributes,this,expose,context,beans,as,attributes,expose,context,beans,as,attributes
InternalResourceViewResolver -> @Override 	protected Class requiredViewClass();1328020251;This resolver requires {@link InternalResourceView}.;@Override_	protected Class requiredViewClass() {_		return InternalResourceView.class__	};this,resolver,requires,link,internal,resource,view;override,protected,class,required,view,class,return,internal,resource,view,class
InternalResourceViewResolver -> @Override 	protected Class requiredViewClass();1356735495;This resolver requires {@link InternalResourceView}.;@Override_	protected Class requiredViewClass() {_		return InternalResourceView.class__	};this,resolver,requires,link,internal,resource,view;override,protected,class,required,view,class,return,internal,resource,view,class
InternalResourceViewResolver -> @Override 	protected Class<?> requiredViewClass();1385412762;This resolver requires {@link InternalResourceView}.;@Override_	protected Class<?> requiredViewClass() {_		return InternalResourceView.class__	};this,resolver,requires,link,internal,resource,view;override,protected,class,required,view,class,return,internal,resource,view,class
InternalResourceViewResolver -> @Override 	protected Class<?> requiredViewClass();1407445568;This resolver requires {@link InternalResourceView}.;@Override_	protected Class<?> requiredViewClass() {_		return InternalResourceView.class__	};this,resolver,requires,link,internal,resource,view;override,protected,class,required,view,class,return,internal,resource,view,class
InternalResourceViewResolver -> @Override 	protected Class<?> requiredViewClass();1407624882;This resolver requires {@link InternalResourceView}.;@Override_	protected Class<?> requiredViewClass() {_		return InternalResourceView.class__	};this,resolver,requires,link,internal,resource,view;override,protected,class,required,view,class,return,internal,resource,view,class
InternalResourceViewResolver -> @Override 	protected Class<?> requiredViewClass();1432125256;This resolver requires {@link InternalResourceView}.;@Override_	protected Class<?> requiredViewClass() {_		return InternalResourceView.class__	};this,resolver,requires,link,internal,resource,view;override,protected,class,required,view,class,return,internal,resource,view,class
InternalResourceViewResolver -> @Override 	protected Class<?> requiredViewClass();1450782049;This resolver requires {@link InternalResourceView}.;@Override_	protected Class<?> requiredViewClass() {_		return InternalResourceView.class__	};this,resolver,requires,link,internal,resource,view;override,protected,class,required,view,class,return,internal,resource,view,class
InternalResourceViewResolver -> @Override 	protected Class<?> requiredViewClass();1498780456;This resolver requires {@link InternalResourceView}.;@Override_	protected Class<?> requiredViewClass() {_		return InternalResourceView.class__	};this,resolver,requires,link,internal,resource,view;override,protected,class,required,view,class,return,internal,resource,view,class
InternalResourceViewResolver -> public void setExposedContextBeanNames(String[] exposedContextBeanNames);1328020251;Specify the names of beans in the context which are supposed to be exposed._If this is non-null, only the specified beans are eligible for exposure as_attributes._@see InternalResourceView#setExposedContextBeanNames;public void setExposedContextBeanNames(String[] exposedContextBeanNames) {_		this.exposedContextBeanNames = exposedContextBeanNames__	};specify,the,names,of,beans,in,the,context,which,are,supposed,to,be,exposed,if,this,is,non,null,only,the,specified,beans,are,eligible,for,exposure,as,attributes,see,internal,resource,view,set,exposed,context,bean,names;public,void,set,exposed,context,bean,names,string,exposed,context,bean,names,this,exposed,context,bean,names,exposed,context,bean,names
InternalResourceViewResolver -> public void setExposedContextBeanNames(String[] exposedContextBeanNames);1356735495;Specify the names of beans in the context which are supposed to be exposed._If this is non-null, only the specified beans are eligible for exposure as_attributes._@see InternalResourceView#setExposedContextBeanNames;public void setExposedContextBeanNames(String[] exposedContextBeanNames) {_		this.exposedContextBeanNames = exposedContextBeanNames__	};specify,the,names,of,beans,in,the,context,which,are,supposed,to,be,exposed,if,this,is,non,null,only,the,specified,beans,are,eligible,for,exposure,as,attributes,see,internal,resource,view,set,exposed,context,bean,names;public,void,set,exposed,context,bean,names,string,exposed,context,bean,names,this,exposed,context,bean,names,exposed,context,bean,names
InternalResourceViewResolver -> public void setExposedContextBeanNames(String[] exposedContextBeanNames);1385412762;Specify the names of beans in the context which are supposed to be exposed._If this is non-null, only the specified beans are eligible for exposure as_attributes._@see InternalResourceView#setExposedContextBeanNames;public void setExposedContextBeanNames(String[] exposedContextBeanNames) {_		this.exposedContextBeanNames = exposedContextBeanNames__	};specify,the,names,of,beans,in,the,context,which,are,supposed,to,be,exposed,if,this,is,non,null,only,the,specified,beans,are,eligible,for,exposure,as,attributes,see,internal,resource,view,set,exposed,context,bean,names;public,void,set,exposed,context,bean,names,string,exposed,context,bean,names,this,exposed,context,bean,names,exposed,context,bean,names
InternalResourceViewResolver -> public InternalResourceViewResolver(String prefix, String suffix);1450782049;A convenience constructor that allows for specifying {@link #setPrefix prefix}_and {@link #setSuffix suffix} as constructor arguments._@param prefix the prefix that gets prepended to view names when building a URL_@param suffix the suffix that gets appended to view names when building a URL_@since 4.3;public InternalResourceViewResolver(String prefix, String suffix) {_		this()__		setPrefix(prefix)__		setSuffix(suffix)__	};a,convenience,constructor,that,allows,for,specifying,link,set,prefix,prefix,and,link,set,suffix,suffix,as,constructor,arguments,param,prefix,the,prefix,that,gets,prepended,to,view,names,when,building,a,url,param,suffix,the,suffix,that,gets,appended,to,view,names,when,building,a,url,since,4,3;public,internal,resource,view,resolver,string,prefix,string,suffix,this,set,prefix,prefix,set,suffix,suffix
InternalResourceViewResolver -> public InternalResourceViewResolver(String prefix, String suffix);1498780456;A convenience constructor that allows for specifying {@link #setPrefix prefix}_and {@link #setSuffix suffix} as constructor arguments._@param prefix the prefix that gets prepended to view names when building a URL_@param suffix the suffix that gets appended to view names when building a URL_@since 4.3;public InternalResourceViewResolver(String prefix, String suffix) {_		this()__		setPrefix(prefix)__		setSuffix(suffix)__	};a,convenience,constructor,that,allows,for,specifying,link,set,prefix,prefix,and,link,set,suffix,suffix,as,constructor,arguments,param,prefix,the,prefix,that,gets,prepended,to,view,names,when,building,a,url,param,suffix,the,suffix,that,gets,appended,to,view,names,when,building,a,url,since,4,3;public,internal,resource,view,resolver,string,prefix,string,suffix,this,set,prefix,prefix,set,suffix,suffix
InternalResourceViewResolver -> public void setAlwaysInclude(boolean alwaysInclude);1328020251;Specify whether to always include the view rather than forward to it._<p>Default is "false". Switch this flag on to enforce the use of a_Servlet include, even if a forward would be possible._@see InternalResourceView#setAlwaysInclude;public void setAlwaysInclude(boolean alwaysInclude) {_		this.alwaysInclude = Boolean.valueOf(alwaysInclude)__	};specify,whether,to,always,include,the,view,rather,than,forward,to,it,p,default,is,false,switch,this,flag,on,to,enforce,the,use,of,a,servlet,include,even,if,a,forward,would,be,possible,see,internal,resource,view,set,always,include;public,void,set,always,include,boolean,always,include,this,always,include,boolean,value,of,always,include
InternalResourceViewResolver -> public void setAlwaysInclude(boolean alwaysInclude);1356735495;Specify whether to always include the view rather than forward to it._<p>Default is "false". Switch this flag on to enforce the use of a_Servlet include, even if a forward would be possible._@see InternalResourceView#setAlwaysInclude;public void setAlwaysInclude(boolean alwaysInclude) {_		this.alwaysInclude = Boolean.valueOf(alwaysInclude)__	};specify,whether,to,always,include,the,view,rather,than,forward,to,it,p,default,is,false,switch,this,flag,on,to,enforce,the,use,of,a,servlet,include,even,if,a,forward,would,be,possible,see,internal,resource,view,set,always,include;public,void,set,always,include,boolean,always,include,this,always,include,boolean,value,of,always,include
InternalResourceViewResolver -> public void setAlwaysInclude(boolean alwaysInclude);1385412762;Specify whether to always include the view rather than forward to it._<p>Default is "false". Switch this flag on to enforce the use of a_Servlet include, even if a forward would be possible._@see InternalResourceView#setAlwaysInclude;public void setAlwaysInclude(boolean alwaysInclude) {_		this.alwaysInclude = Boolean.valueOf(alwaysInclude)__	};specify,whether,to,always,include,the,view,rather,than,forward,to,it,p,default,is,false,switch,this,flag,on,to,enforce,the,use,of,a,servlet,include,even,if,a,forward,would,be,possible,see,internal,resource,view,set,always,include;public,void,set,always,include,boolean,always,include,this,always,include,boolean,value,of,always,include
InternalResourceViewResolver -> public void setAlwaysInclude(boolean alwaysInclude);1407445568;Specify whether to always include the view rather than forward to it._<p>Default is "false". Switch this flag on to enforce the use of a_Servlet include, even if a forward would be possible._@see InternalResourceView#setAlwaysInclude;public void setAlwaysInclude(boolean alwaysInclude) {_		this.alwaysInclude = alwaysInclude__	};specify,whether,to,always,include,the,view,rather,than,forward,to,it,p,default,is,false,switch,this,flag,on,to,enforce,the,use,of,a,servlet,include,even,if,a,forward,would,be,possible,see,internal,resource,view,set,always,include;public,void,set,always,include,boolean,always,include,this,always,include,always,include
InternalResourceViewResolver -> public void setAlwaysInclude(boolean alwaysInclude);1407624882;Specify whether to always include the view rather than forward to it._<p>Default is "false". Switch this flag on to enforce the use of a_Servlet include, even if a forward would be possible._@see InternalResourceView#setAlwaysInclude;public void setAlwaysInclude(boolean alwaysInclude) {_		this.alwaysInclude = alwaysInclude__	};specify,whether,to,always,include,the,view,rather,than,forward,to,it,p,default,is,false,switch,this,flag,on,to,enforce,the,use,of,a,servlet,include,even,if,a,forward,would,be,possible,see,internal,resource,view,set,always,include;public,void,set,always,include,boolean,always,include,this,always,include,always,include
InternalResourceViewResolver -> public void setAlwaysInclude(boolean alwaysInclude);1432125256;Specify whether to always include the view rather than forward to it._<p>Default is "false". Switch this flag on to enforce the use of a_Servlet include, even if a forward would be possible._@see InternalResourceView#setAlwaysInclude;public void setAlwaysInclude(boolean alwaysInclude) {_		this.alwaysInclude = alwaysInclude__	};specify,whether,to,always,include,the,view,rather,than,forward,to,it,p,default,is,false,switch,this,flag,on,to,enforce,the,use,of,a,servlet,include,even,if,a,forward,would,be,possible,see,internal,resource,view,set,always,include;public,void,set,always,include,boolean,always,include,this,always,include,always,include
InternalResourceViewResolver -> public void setAlwaysInclude(boolean alwaysInclude);1450782049;Specify whether to always include the view rather than forward to it._<p>Default is "false". Switch this flag on to enforce the use of a_Servlet include, even if a forward would be possible._@see InternalResourceView#setAlwaysInclude;public void setAlwaysInclude(boolean alwaysInclude) {_		this.alwaysInclude = alwaysInclude__	};specify,whether,to,always,include,the,view,rather,than,forward,to,it,p,default,is,false,switch,this,flag,on,to,enforce,the,use,of,a,servlet,include,even,if,a,forward,would,be,possible,see,internal,resource,view,set,always,include;public,void,set,always,include,boolean,always,include,this,always,include,always,include
InternalResourceViewResolver -> public void setAlwaysInclude(boolean alwaysInclude);1498780456;Specify whether to always include the view rather than forward to it._<p>Default is "false". Switch this flag on to enforce the use of a_Servlet include, even if a forward would be possible._@see InternalResourceView#setAlwaysInclude;public void setAlwaysInclude(boolean alwaysInclude) {_		this.alwaysInclude = alwaysInclude__	};specify,whether,to,always,include,the,view,rather,than,forward,to,it,p,default,is,false,switch,this,flag,on,to,enforce,the,use,of,a,servlet,include,even,if,a,forward,would,be,possible,see,internal,resource,view,set,always,include;public,void,set,always,include,boolean,always,include,this,always,include,always,include
